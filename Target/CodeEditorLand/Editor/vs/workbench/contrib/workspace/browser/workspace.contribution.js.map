{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/workspace/browser/workspace.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/workspaceTrustEditor.css\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport {\n\ttype IMarkdownString,\n\tMarkdownString,\n} from \"../../../../base/common/htmlContent.js\";\nimport {\n\tDisposable,\n\tMutableDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { dirname, resolve } from \"../../../../base/common/path.js\";\nimport { isWeb } from \"../../../../base/common/platform.js\";\nimport {\n\tbasename,\n\tdirname as uriDirname,\n} from \"../../../../base/common/resources.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport {\n\tAction2,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tExtensions as ConfigurationExtensions,\n\tConfigurationScope,\n\ttype IConfigurationRegistry,\n} from \"../../../../platform/configuration/common/configurationRegistry.js\";\nimport {\n\tContextKeyExpr,\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IDialogService } from \"../../../../platform/dialogs/common/dialogs.js\";\nimport { IEnvironmentService } from \"../../../../platform/environment/common/environment.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport { SyncDescriptor } from \"../../../../platform/instantiation/common/descriptors.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tILabelService,\n\tVerbosity,\n} from \"../../../../platform/label/common/label.js\";\nimport { Severity } from \"../../../../platform/notification/common/notification.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { isVirtualWorkspace } from \"../../../../platform/workspace/common/virtualWorkspace.js\";\nimport {\n\ttype ISingleFolderWorkspaceIdentifier,\n\tIWorkspaceContextService,\n\ttype IWorkspaceFoldersWillChangeEvent,\n\tWorkbenchState,\n\tisEmptyWorkspaceIdentifier,\n\tisSingleFolderWorkspaceIdentifier,\n\ttoWorkspaceIdentifier,\n} from \"../../../../platform/workspace/common/workspace.js\";\nimport {\n\tIWorkspaceTrustEnablementService,\n\tIWorkspaceTrustManagementService,\n\tIWorkspaceTrustRequestService,\n\tWorkspaceTrustUriResponse,\n} from \"../../../../platform/workspace/common/workspaceTrust.js\";\nimport {\n\tEditorPaneDescriptor,\n\ttype IEditorPaneRegistry,\n} from \"../../../browser/editor.js\";\nimport { securityConfigurationNodeBase } from \"../../../common/configuration.js\";\nimport {\n\ttype IWorkbenchContribution,\n\ttype IWorkbenchContributionsRegistry,\n\tExtensions as WorkbenchExtensions,\n\tWorkbenchPhase,\n\tregisterWorkbenchContribution2,\n} from \"../../../common/contributions.js\";\nimport {\n\tEditorExtensions,\n\ttype IEditorFactoryRegistry,\n\ttype IEditorSerializer,\n} from \"../../../common/editor.js\";\nimport type { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport {\n\ttype IBannerItem,\n\tIBannerService,\n} from \"../../../services/banner/browser/bannerService.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { IWorkbenchEnvironmentService } from \"../../../services/environment/common/environmentService.js\";\nimport { IHostService } from \"../../../services/host/browser/host.js\";\nimport { LifecyclePhase } from \"../../../services/lifecycle/common/lifecycle.js\";\nimport { IPreferencesService } from \"../../../services/preferences/common/preferences.js\";\nimport { IRemoteAgentService } from \"../../../services/remote/common/remoteAgentService.js\";\nimport {\n\ttype IStatusbarEntry,\n\ttype IStatusbarEntryAccessor,\n\tIStatusbarService,\n\tStatusbarAlignment,\n} from \"../../../services/statusbar/browser/statusbar.js\";\nimport { WorkspaceTrustEditorInput } from \"../../../services/workspaces/browser/workspaceTrustEditorInput.js\";\nimport {\n\tWORKSPACE_TRUST_BANNER,\n\tWORKSPACE_TRUST_EMPTY_WINDOW,\n\tWORKSPACE_TRUST_ENABLED,\n\tWORKSPACE_TRUST_STARTUP_PROMPT,\n\tWORKSPACE_TRUST_UNTRUSTED_FILES,\n} from \"../../../services/workspaces/common/workspaceTrust.js\";\nimport { LIST_WORKSPACE_UNSUPPORTED_EXTENSIONS_COMMAND_ID } from \"../../extensions/common/extensions.js\";\nimport { WORKSPACE_TRUST_SETTING_TAG } from \"../../preferences/common/preferences.js\";\nimport {\n\tMANAGE_TRUST_COMMAND_ID,\n\tWorkspaceTrustContext,\n} from \"../common/workspace.js\";\nimport { WorkspaceTrustEditor, shieldIcon } from \"./workspaceTrustEditor.js\";\n\nconst BANNER_RESTRICTED_MODE = \"workbench.banner.restrictedMode\";\nconst STARTUP_PROMPT_SHOWN_KEY = \"workspace.trust.startupPrompt.shown\";\nconst BANNER_RESTRICTED_MODE_DISMISSED_KEY =\n\t\"workbench.banner.restrictedMode.dismissed\";\n\nexport class WorkspaceTrustContextKeys\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tprivate readonly _ctxWorkspaceTrustEnabled: IContextKey<boolean>;\n\tprivate readonly _ctxWorkspaceTrustState: IContextKey<boolean>;\n\n\tconstructor(\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IWorkspaceTrustEnablementService workspaceTrustEnablementService: IWorkspaceTrustEnablementService,\n\t\t@IWorkspaceTrustManagementService workspaceTrustManagementService: IWorkspaceTrustManagementService,\n\t) {\n\t\tsuper();\n\n\t\tthis._ctxWorkspaceTrustEnabled =\n\t\t\tWorkspaceTrustContext.IsEnabled.bindTo(contextKeyService);\n\t\tthis._ctxWorkspaceTrustEnabled.set(\n\t\t\tworkspaceTrustEnablementService.isWorkspaceTrustEnabled(),\n\t\t);\n\n\t\tthis._ctxWorkspaceTrustState =\n\t\t\tWorkspaceTrustContext.IsTrusted.bindTo(contextKeyService);\n\t\tthis._ctxWorkspaceTrustState.set(\n\t\t\tworkspaceTrustManagementService.isWorkspaceTrusted(),\n\t\t);\n\n\t\tthis._register(\n\t\t\tworkspaceTrustManagementService.onDidChangeTrust((trusted) =>\n\t\t\t\tthis._ctxWorkspaceTrustState.set(trusted),\n\t\t\t),\n\t\t);\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n).registerWorkbenchContribution(\n\tWorkspaceTrustContextKeys,\n\tLifecyclePhase.Restored,\n);\n\n/*\n * Trust Request via Service UX handler\n */\n\nexport class WorkspaceTrustRequestHandler\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tstatic readonly ID = \"workbench.contrib.workspaceTrustRequestHandler\";\n\n\tconstructor(\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IWorkspaceContextService\n\t\tprivate readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IWorkspaceTrustManagementService\n\t\tprivate readonly workspaceTrustManagementService: IWorkspaceTrustManagementService,\n\t\t@IWorkspaceTrustRequestService\n\t\tprivate readonly workspaceTrustRequestService: IWorkspaceTrustRequestService,\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate get useWorkspaceLanguage(): boolean {\n\t\treturn !isSingleFolderWorkspaceIdentifier(\n\t\t\ttoWorkspaceIdentifier(this.workspaceContextService.getWorkspace()),\n\t\t);\n\t}\n\n\tprivate registerListeners(): void {\n\t\t// Open files trust request\n\t\tthis._register(\n\t\t\tthis.workspaceTrustRequestService.onDidInitiateOpenFilesTrustRequest(\n\t\t\t\tasync () => {\n\t\t\t\t\tawait this.workspaceTrustManagementService\n\t\t\t\t\t\t.workspaceResolved;\n\n\t\t\t\t\t// Details\n\t\t\t\t\tconst markdownDetails = [\n\t\t\t\t\t\tthis.workspaceContextService.getWorkbenchState() !==\n\t\t\t\t\t\tWorkbenchState.EMPTY\n\t\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\t\"openLooseFileWorkspaceDetails\",\n\t\t\t\t\t\t\t\t\t\"You are trying to open untrusted files in a workspace which is trusted.\",\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\t\"openLooseFileWindowDetails\",\n\t\t\t\t\t\t\t\t\t\"You are trying to open untrusted files in a window which is trusted.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\"openLooseFileLearnMore\",\n\t\t\t\t\t\t\t\"If you don't want to open untrusted files, we recommend to open them in Restricted Mode in a new window as the files may be malicious. See [our docs](https://aka.ms/vscode-workspace-trust) to learn more.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t];\n\n\t\t\t\t\t// Dialog\n\t\t\t\t\tawait this.dialogService.prompt<void>({\n\t\t\t\t\t\ttype: Severity.Info,\n\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\tthis.workspaceContextService.getWorkbenchState() !==\n\t\t\t\t\t\t\tWorkbenchState.EMPTY\n\t\t\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\t\t\"openLooseFileWorkspaceMesssage\",\n\t\t\t\t\t\t\t\t\t\t\"Do you want to allow untrusted files in this workspace?\",\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\t\t\"openLooseFileWindowMesssage\",\n\t\t\t\t\t\t\t\t\t\t\"Do you want to allow untrusted files in this window?\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\tbuttons: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tkey: \"open\",\n\t\t\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"&&Open\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\trun: ({ checkboxChecked }) =>\n\t\t\t\t\t\t\t\t\tthis.workspaceTrustRequestService.completeOpenFilesTrustRequest(\n\t\t\t\t\t\t\t\t\t\tWorkspaceTrustUriResponse.Open,\n\t\t\t\t\t\t\t\t\t\t!!checkboxChecked,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tkey: \"newWindow\",\n\t\t\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"Open in &&Restricted Mode\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\trun: ({ checkboxChecked }) =>\n\t\t\t\t\t\t\t\t\tthis.workspaceTrustRequestService.completeOpenFilesTrustRequest(\n\t\t\t\t\t\t\t\t\t\tWorkspaceTrustUriResponse.OpenInNewWindow,\n\t\t\t\t\t\t\t\t\t\t!!checkboxChecked,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tcancelButton: {\n\t\t\t\t\t\t\trun: () =>\n\t\t\t\t\t\t\t\tthis.workspaceTrustRequestService.completeOpenFilesTrustRequest(\n\t\t\t\t\t\t\t\t\tWorkspaceTrustUriResponse.Cancel,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcheckbox: {\n\t\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\t\"openLooseFileWorkspaceCheckbox\",\n\t\t\t\t\t\t\t\t\"Remember my decision for all workspaces\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tchecked: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcustom: {\n\t\t\t\t\t\t\ticon: Codicon.shield,\n\t\t\t\t\t\t\tmarkdownDetails: markdownDetails.map((md) => {\n\t\t\t\t\t\t\t\treturn { markdown: new MarkdownString(md) };\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\t// Workspace trust request\n\t\tthis._register(\n\t\t\tthis.workspaceTrustRequestService.onDidInitiateWorkspaceTrustRequest(\n\t\t\t\tasync (requestOptions) => {\n\t\t\t\t\tawait this.workspaceTrustManagementService\n\t\t\t\t\t\t.workspaceResolved;\n\n\t\t\t\t\t// Title\n\t\t\t\t\tconst message = this.useWorkspaceLanguage\n\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\"workspaceTrust\",\n\t\t\t\t\t\t\t\t\"Do you trust the authors of the files in this workspace?\",\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\"folderTrust\",\n\t\t\t\t\t\t\t\t\"Do you trust the authors of the files in this folder?\",\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t// Message\n\t\t\t\t\tconst defaultDetails = localize(\n\t\t\t\t\t\t\"immediateTrustRequestMessage\",\n\t\t\t\t\t\t\"A feature you are trying to use may be a security risk if you do not trust the source of the files or folders you currently have open.\",\n\t\t\t\t\t);\n\t\t\t\t\tconst details = requestOptions?.message ?? defaultDetails;\n\n\t\t\t\t\t// Buttons\n\t\t\t\t\tconst buttons = requestOptions?.buttons ?? [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: this.useWorkspaceLanguage\n\t\t\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tkey: \"grantWorkspaceTrustButton\",\n\t\t\t\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\"&&Trust Workspace & Continue\",\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tkey: \"grantFolderTrustButton\",\n\t\t\t\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\"&&Trust Folder & Continue\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttype: \"ContinueWithTrust\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tkey: \"manageWorkspaceTrustButton\",\n\t\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"&&Manage\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttype: \"Manage\",\n\t\t\t\t\t\t},\n\t\t\t\t\t];\n\n\t\t\t\t\t// Add Cancel button if not provided\n\t\t\t\t\tif (!buttons.some((b) => b.type === \"Cancel\")) {\n\t\t\t\t\t\tbuttons.push({\n\t\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\t\"cancelWorkspaceTrustButton\",\n\t\t\t\t\t\t\t\t\"Cancel\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttype: \"Cancel\",\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// Dialog\n\t\t\t\t\tconst { result } = await this.dialogService.prompt({\n\t\t\t\t\t\ttype: Severity.Info,\n\t\t\t\t\t\tmessage,\n\t\t\t\t\t\tcustom: {\n\t\t\t\t\t\t\ticon: Codicon.shield,\n\t\t\t\t\t\t\tmarkdownDetails: [\n\t\t\t\t\t\t\t\t{ markdown: new MarkdownString(details) },\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmarkdown: new MarkdownString(\n\t\t\t\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\t\t\t\"immediateTrustRequestLearnMore\",\n\t\t\t\t\t\t\t\t\t\t\t\"If you don't trust the authors of these files, we do not recommend continuing as the files may be malicious. See [our docs](https://aka.ms/vscode-workspace-trust) to learn more.\",\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbuttons: buttons\n\t\t\t\t\t\t\t.filter((b) => b.type !== \"Cancel\")\n\t\t\t\t\t\t\t.map((button) => {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tlabel: button.label,\n\t\t\t\t\t\t\t\t\trun: () => button.type,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tcancelButton: (() => {\n\t\t\t\t\t\t\tconst cancelButton = buttons.find(\n\t\t\t\t\t\t\t\t(b) => b.type === \"Cancel\",\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (!cancelButton) {\n\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tlabel: cancelButton.label,\n\t\t\t\t\t\t\t\trun: () => cancelButton.type,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t})(),\n\t\t\t\t\t});\n\n\t\t\t\t\t// Dialog result\n\t\t\t\t\tswitch (result) {\n\t\t\t\t\t\tcase \"ContinueWithTrust\":\n\t\t\t\t\t\t\tawait this.workspaceTrustRequestService.completeWorkspaceTrustRequest(\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"ContinueWithoutTrust\":\n\t\t\t\t\t\t\tawait this.workspaceTrustRequestService.completeWorkspaceTrustRequest(\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"Manage\":\n\t\t\t\t\t\t\tthis.workspaceTrustRequestService.cancelWorkspaceTrustRequest();\n\t\t\t\t\t\t\tawait this.commandService.executeCommand(\n\t\t\t\t\t\t\t\tMANAGE_TRUST_COMMAND_ID,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"Cancel\":\n\t\t\t\t\t\t\tthis.workspaceTrustRequestService.cancelWorkspaceTrustRequest();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n}\n\n/*\n * Trust UX and Startup Handler\n */\nexport class WorkspaceTrustUXHandler\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tprivate readonly entryId = `status.workspaceTrust`;\n\n\tprivate readonly statusbarEntryAccessor: MutableDisposable<IStatusbarEntryAccessor>;\n\n\tconstructor(\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IWorkspaceContextService\n\t\tprivate readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IWorkspaceTrustEnablementService\n\t\tprivate readonly workspaceTrustEnablementService: IWorkspaceTrustEnablementService,\n\t\t@IWorkspaceTrustManagementService\n\t\tprivate readonly workspaceTrustManagementService: IWorkspaceTrustManagementService,\n\t\t@IConfigurationService\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\t@IStatusbarService private readonly statusbarService: IStatusbarService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IWorkspaceTrustRequestService\n\t\tprivate readonly workspaceTrustRequestService: IWorkspaceTrustRequestService,\n\t\t@IBannerService private readonly bannerService: IBannerService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IRemoteAgentService\n\t\tprivate readonly remoteAgentService: IRemoteAgentService,\n\t\t@IEnvironmentService\n\t\tprivate readonly environmentService: IEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t) {\n\t\tsuper();\n\n\t\tthis.statusbarEntryAccessor = this._register(\n\t\t\tnew MutableDisposable<IStatusbarEntryAccessor>(),\n\t\t);\n\n\t\t(async () => {\n\t\t\tawait this.workspaceTrustManagementService\n\t\t\t\t.workspaceTrustInitialized;\n\n\t\t\tif (\n\t\t\t\tthis.workspaceTrustEnablementService.isWorkspaceTrustEnabled()\n\t\t\t) {\n\t\t\t\tthis.registerListeners();\n\t\t\t\tthis.updateStatusbarEntry(\n\t\t\t\t\tthis.workspaceTrustManagementService.isWorkspaceTrusted(),\n\t\t\t\t);\n\n\t\t\t\t// Show modal dialog\n\t\t\t\tif (this.hostService.hasFocus) {\n\t\t\t\t\tthis.showModalOnStart();\n\t\t\t\t} else {\n\t\t\t\t\tconst focusDisposable = this.hostService.onDidChangeFocus(\n\t\t\t\t\t\t(focused) => {\n\t\t\t\t\t\t\tif (focused) {\n\t\t\t\t\t\t\t\tfocusDisposable.dispose();\n\t\t\t\t\t\t\t\tthis.showModalOnStart();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t})();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(\n\t\t\tthis.workspaceContextService.onWillChangeWorkspaceFolders((e) => {\n\t\t\t\tif (e.fromCache) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\t!this.workspaceTrustEnablementService.isWorkspaceTrustEnabled()\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst addWorkspaceFolder = async (\n\t\t\t\t\te: IWorkspaceFoldersWillChangeEvent,\n\t\t\t\t): Promise<void> => {\n\t\t\t\t\tconst trusted =\n\t\t\t\t\t\tthis.workspaceTrustManagementService.isWorkspaceTrusted();\n\n\t\t\t\t\t// Workspace is trusted and there are added/changed folders\n\t\t\t\t\tif (\n\t\t\t\t\t\ttrusted &&\n\t\t\t\t\t\t(e.changes.added.length || e.changes.changed.length)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst addedFoldersTrustInfo = await Promise.all(\n\t\t\t\t\t\t\te.changes.added.map((folder) =>\n\t\t\t\t\t\t\t\tthis.workspaceTrustManagementService.getUriTrustInfo(\n\t\t\t\t\t\t\t\t\tfolder.uri,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!addedFoldersTrustInfo\n\t\t\t\t\t\t\t\t.map((info) => info.trusted)\n\t\t\t\t\t\t\t\t.every((trusted) => trusted)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst { confirmed } =\n\t\t\t\t\t\t\t\tawait this.dialogService.confirm({\n\t\t\t\t\t\t\t\t\ttype: Severity.Info,\n\t\t\t\t\t\t\t\t\tmessage: localize(\n\t\t\t\t\t\t\t\t\t\t\"addWorkspaceFolderMessage\",\n\t\t\t\t\t\t\t\t\t\t\"Do you trust the authors of the files in this folder?\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tdetail: localize(\n\t\t\t\t\t\t\t\t\t\t\"addWorkspaceFolderDetail\",\n\t\t\t\t\t\t\t\t\t\t\"You are adding files that are not currently trusted to a trusted workspace. Do you trust the authors of these new files?\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tcancelButton: localize(\"no\", \"No\"),\n\t\t\t\t\t\t\t\t\tcustom: { icon: Codicon.shield },\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t// Mark added/changed folders as trusted\n\t\t\t\t\t\t\tawait this.workspaceTrustManagementService.setUrisTrust(\n\t\t\t\t\t\t\t\taddedFoldersTrustInfo.map((i) => i.uri),\n\t\t\t\t\t\t\t\tconfirmed,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\treturn e.join(addWorkspaceFolder(e));\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.workspaceTrustManagementService.onDidChangeTrust((trusted) => {\n\t\t\t\tthis.updateWorkbenchIndicators(trusted);\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.workspaceTrustRequestService.onDidInitiateWorkspaceTrustRequestOnStartup(\n\t\t\t\tasync () => {\n\t\t\t\t\tlet titleString: string | undefined;\n\t\t\t\t\tlet learnMoreString: string | undefined;\n\t\t\t\t\tlet trustOption: string | undefined;\n\t\t\t\t\tlet dontTrustOption: string | undefined;\n\t\t\t\t\tconst isAiGeneratedWorkspace =\n\t\t\t\t\t\tawait this.isAiGeneratedWorkspace();\n\t\t\t\t\tif (\n\t\t\t\t\t\tisAiGeneratedWorkspace &&\n\t\t\t\t\t\tthis.productService.aiGeneratedWorkspaceTrust\n\t\t\t\t\t) {\n\t\t\t\t\t\ttitleString =\n\t\t\t\t\t\t\tthis.productService.aiGeneratedWorkspaceTrust.title;\n\t\t\t\t\t\tlearnMoreString =\n\t\t\t\t\t\t\tthis.productService.aiGeneratedWorkspaceTrust\n\t\t\t\t\t\t\t\t.startupTrustRequestLearnMore;\n\t\t\t\t\t\ttrustOption =\n\t\t\t\t\t\t\tthis.productService.aiGeneratedWorkspaceTrust\n\t\t\t\t\t\t\t\t.trustOption;\n\t\t\t\t\t\tdontTrustOption =\n\t\t\t\t\t\t\tthis.productService.aiGeneratedWorkspaceTrust\n\t\t\t\t\t\t\t\t.dontTrustOption;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t\"AI generated workspace trust dialog contents not available.\",\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst title =\n\t\t\t\t\t\ttitleString ??\n\t\t\t\t\t\t(this.useWorkspaceLanguage\n\t\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\t\"workspaceTrust\",\n\t\t\t\t\t\t\t\t\t\"Do you trust the authors of the files in this workspace?\",\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\t\"folderTrust\",\n\t\t\t\t\t\t\t\t\t\"Do you trust the authors of the files in this folder?\",\n\t\t\t\t\t\t\t\t));\n\n\t\t\t\t\tlet checkboxText: string | undefined;\n\t\t\t\t\tconst workspaceIdentifier = toWorkspaceIdentifier(\n\t\t\t\t\t\tthis.workspaceContextService.getWorkspace(),\n\t\t\t\t\t);\n\t\t\t\t\tconst isSingleFolderWorkspace =\n\t\t\t\t\t\tisSingleFolderWorkspaceIdentifier(workspaceIdentifier);\n\t\t\t\t\tconst isEmptyWindow =\n\t\t\t\t\t\tisEmptyWorkspaceIdentifier(workspaceIdentifier);\n\t\t\t\t\tif (\n\t\t\t\t\t\t!isAiGeneratedWorkspace &&\n\t\t\t\t\t\tthis.workspaceTrustManagementService.canSetParentFolderTrust()\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst name = basename(\n\t\t\t\t\t\t\turiDirname(\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\tworkspaceIdentifier as ISingleFolderWorkspaceIdentifier\n\t\t\t\t\t\t\t\t).uri,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tcheckboxText = localize(\n\t\t\t\t\t\t\t\"checkboxString\",\n\t\t\t\t\t\t\t\"Trust the authors of all files in the parent folder '{0}'\",\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Show Workspace Trust Start Dialog\n\t\t\t\t\tthis.doShowModal(\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel:\n\t\t\t\t\t\t\t\ttrustOption ??\n\t\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tkey: \"trustOption\",\n\t\t\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"&&Yes, I trust the authors\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tsublabel: isSingleFolderWorkspace\n\t\t\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\t\t\"trustFolderOptionDescription\",\n\t\t\t\t\t\t\t\t\t\t\"Trust folder and enable all features\",\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\t\t\"trustWorkspaceOptionDescription\",\n\t\t\t\t\t\t\t\t\t\t\"Trust workspace and enable all features\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel:\n\t\t\t\t\t\t\t\tdontTrustOption ??\n\t\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tkey: \"dontTrustOption\",\n\t\t\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"&&No, I don't trust the authors\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tsublabel: isSingleFolderWorkspace\n\t\t\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\t\t\"dontTrustFolderOptionDescription\",\n\t\t\t\t\t\t\t\t\t\t\"Browse folder in restricted mode\",\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\t\t\"dontTrustWorkspaceOptionDescription\",\n\t\t\t\t\t\t\t\t\t\t\"Browse workspace in restricted mode\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tisSingleFolderWorkspace\n\t\t\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\t\t\"folderStartupTrustDetails\",\n\t\t\t\t\t\t\t\t\t\t\"{0} provides features that may automatically execute files in this folder.\",\n\t\t\t\t\t\t\t\t\t\tthis.productService.nameShort,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\t\t\"workspaceStartupTrustDetails\",\n\t\t\t\t\t\t\t\t\t\t\"{0} provides features that may automatically execute files in this workspace.\",\n\t\t\t\t\t\t\t\t\t\tthis.productService.nameShort,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tlearnMoreString ??\n\t\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\t\"startupTrustRequestLearnMore\",\n\t\t\t\t\t\t\t\t\t\"If you don't trust the authors of these files, we recommend to continue in restricted mode as the files may be malicious. See [our docs](https://aka.ms/vscode-workspace-trust) to learn more.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tisEmptyWindow\n\t\t\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t\t\t: `\\`${this.labelService.getWorkspaceLabel(workspaceIdentifier, { verbose: Verbosity.LONG })}\\``,\n\t\t\t\t\t\t],\n\t\t\t\t\t\tcheckboxText,\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate updateWorkbenchIndicators(trusted: boolean): void {\n\t\tconst bannerItem = this.getBannerItem(!trusted);\n\n\t\tthis.updateStatusbarEntry(trusted);\n\n\t\tif (bannerItem) {\n\t\t\tif (trusted) {\n\t\t\t\tthis.bannerService.hide(BANNER_RESTRICTED_MODE);\n\t\t\t} else {\n\t\t\t\tthis.bannerService.show(bannerItem);\n\t\t\t}\n\t\t}\n\t}\n\n\t//#region Dialog\n\n\tprivate async doShowModal(\n\t\tquestion: string,\n\t\ttrustedOption: { label: string; sublabel: string },\n\t\tuntrustedOption: { label: string; sublabel: string },\n\t\tmarkdownStrings: string[],\n\t\ttrustParentString?: string,\n\t): Promise<void> {\n\t\tawait this.dialogService.prompt({\n\t\t\ttype: Severity.Info,\n\t\t\tmessage: question,\n\t\t\tcheckbox: trustParentString\n\t\t\t\t? {\n\t\t\t\t\t\tlabel: trustParentString,\n\t\t\t\t\t}\n\t\t\t\t: undefined,\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: trustedOption.label,\n\t\t\t\t\trun: async ({ checkboxChecked }) => {\n\t\t\t\t\t\tif (checkboxChecked) {\n\t\t\t\t\t\t\tawait this.workspaceTrustManagementService.setParentFolderTrust(\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tawait this.workspaceTrustRequestService.completeWorkspaceTrustRequest(\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: untrustedOption.label,\n\t\t\t\t\trun: () => {\n\t\t\t\t\t\tthis.updateWorkbenchIndicators(false);\n\t\t\t\t\t\tthis.workspaceTrustRequestService.cancelWorkspaceTrustRequest();\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tcustom: {\n\t\t\t\tbuttonDetails: [\n\t\t\t\t\ttrustedOption.sublabel,\n\t\t\t\t\tuntrustedOption.sublabel,\n\t\t\t\t],\n\t\t\t\tdisableCloseAction: true,\n\t\t\t\ticon: Codicon.shield,\n\t\t\t\tmarkdownDetails: markdownStrings.map((md) => {\n\t\t\t\t\treturn { markdown: new MarkdownString(md) };\n\t\t\t\t}),\n\t\t\t},\n\t\t});\n\n\t\tthis.storageService.store(\n\t\t\tSTARTUP_PROMPT_SHOWN_KEY,\n\t\t\ttrue,\n\t\t\tStorageScope.WORKSPACE,\n\t\t\tStorageTarget.MACHINE,\n\t\t);\n\t}\n\n\tprivate async showModalOnStart(): Promise<void> {\n\t\tif (this.workspaceTrustManagementService.isWorkspaceTrusted()) {\n\t\t\tthis.updateWorkbenchIndicators(true);\n\t\t\treturn;\n\t\t}\n\n\t\t// Don't show modal prompt if workspace trust cannot be changed\n\t\tif (!this.workspaceTrustManagementService.canSetWorkspaceTrust()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Don't show modal prompt for virtual workspaces by default\n\t\tif (isVirtualWorkspace(this.workspaceContextService.getWorkspace())) {\n\t\t\tthis.updateWorkbenchIndicators(false);\n\t\t\treturn;\n\t\t}\n\n\t\t// Don't show modal prompt for empty workspaces by default\n\t\tif (\n\t\t\tthis.workspaceContextService.getWorkbenchState() ===\n\t\t\tWorkbenchState.EMPTY\n\t\t) {\n\t\t\tthis.updateWorkbenchIndicators(false);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.startupPromptSetting === \"never\") {\n\t\t\tthis.updateWorkbenchIndicators(false);\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tthis.startupPromptSetting === \"once\" &&\n\t\t\tthis.storageService.getBoolean(\n\t\t\t\tSTARTUP_PROMPT_SHOWN_KEY,\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\tfalse,\n\t\t\t)\n\t\t) {\n\t\t\tthis.updateWorkbenchIndicators(false);\n\t\t\treturn;\n\t\t}\n\n\t\t// Use the workspace trust request service to show modal dialog\n\t\tthis.workspaceTrustRequestService.requestWorkspaceTrustOnStartup();\n\t}\n\n\tprivate get startupPromptSetting(): \"always\" | \"once\" | \"never\" {\n\t\treturn this.configurationService.getValue(\n\t\t\tWORKSPACE_TRUST_STARTUP_PROMPT,\n\t\t);\n\t}\n\n\tprivate get useWorkspaceLanguage(): boolean {\n\t\treturn !isSingleFolderWorkspaceIdentifier(\n\t\t\ttoWorkspaceIdentifier(this.workspaceContextService.getWorkspace()),\n\t\t);\n\t}\n\n\tprivate async isAiGeneratedWorkspace(): Promise<boolean> {\n\t\tconst aiGeneratedWorkspaces = URI.joinPath(\n\t\t\tthis.environmentService.workspaceStorageHome,\n\t\t\t\"aiGeneratedWorkspaces.json\",\n\t\t);\n\t\treturn await this.fileService\n\t\t\t.exists(aiGeneratedWorkspaces)\n\t\t\t.then(async (result) => {\n\t\t\t\tif (result) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst content = await this.fileService.readFile(\n\t\t\t\t\t\t\taiGeneratedWorkspaces,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst workspaces = JSON.parse(\n\t\t\t\t\t\t\tcontent.value.toString(),\n\t\t\t\t\t\t) as string[];\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tworkspaces.indexOf(\n\t\t\t\t\t\t\t\tthis.workspaceContextService\n\t\t\t\t\t\t\t\t\t.getWorkspace()\n\t\t\t\t\t\t\t\t\t.folders[0].uri.toString(),\n\t\t\t\t\t\t\t) > -1\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// Ignore errors when resolving file contents\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t}\n\n\t//#endregion\n\n\t//#region Banner\n\n\tprivate getBannerItem(restrictedMode: boolean): IBannerItem | undefined {\n\t\tconst dismissedRestricted = this.storageService.getBoolean(\n\t\t\tBANNER_RESTRICTED_MODE_DISMISSED_KEY,\n\t\t\tStorageScope.WORKSPACE,\n\t\t\tfalse,\n\t\t);\n\n\t\t// never show the banner\n\t\tif (this.bannerSetting === \"never\") {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// info has been dismissed\n\t\tif (this.bannerSetting === \"untilDismissed\" && dismissedRestricted) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst actions = [\n\t\t\t{\n\t\t\t\tlabel: localize(\"restrictedModeBannerManage\", \"Manage\"),\n\t\t\t\thref: \"command:\" + MANAGE_TRUST_COMMAND_ID,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: localize(\"restrictedModeBannerLearnMore\", \"Learn More\"),\n\t\t\t\thref: \"https://aka.ms/vscode-workspace-trust\",\n\t\t\t},\n\t\t];\n\n\t\treturn {\n\t\t\tid: BANNER_RESTRICTED_MODE,\n\t\t\ticon: shieldIcon,\n\t\t\tariaLabel: this.getBannerItemAriaLabels(),\n\t\t\tmessage: this.getBannerItemMessages(),\n\t\t\tactions,\n\t\t\tonClose: () => {\n\t\t\t\tif (restrictedMode) {\n\t\t\t\t\tthis.storageService.store(\n\t\t\t\t\t\tBANNER_RESTRICTED_MODE_DISMISSED_KEY,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\t\t\tStorageTarget.MACHINE,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t}\n\n\tprivate getBannerItemAriaLabels(): string {\n\t\tswitch (this.workspaceContextService.getWorkbenchState()) {\n\t\t\tcase WorkbenchState.EMPTY:\n\t\t\t\treturn localize(\n\t\t\t\t\t\"restrictedModeBannerAriaLabelWindow\",\n\t\t\t\t\t\"Restricted Mode is intended for safe code browsing. Trust this window to enable all features. Use navigation keys to access banner actions.\",\n\t\t\t\t);\n\t\t\tcase WorkbenchState.FOLDER:\n\t\t\t\treturn localize(\n\t\t\t\t\t\"restrictedModeBannerAriaLabelFolder\",\n\t\t\t\t\t\"Restricted Mode is intended for safe code browsing. Trust this folder to enable all features. Use navigation keys to access banner actions.\",\n\t\t\t\t);\n\t\t\tcase WorkbenchState.WORKSPACE:\n\t\t\t\treturn localize(\n\t\t\t\t\t\"restrictedModeBannerAriaLabelWorkspace\",\n\t\t\t\t\t\"Restricted Mode is intended for safe code browsing. Trust this workspace to enable all features. Use navigation keys to access banner actions.\",\n\t\t\t\t);\n\t\t}\n\t}\n\n\tprivate getBannerItemMessages(): string {\n\t\tswitch (this.workspaceContextService.getWorkbenchState()) {\n\t\t\tcase WorkbenchState.EMPTY:\n\t\t\t\treturn localize(\n\t\t\t\t\t\"restrictedModeBannerMessageWindow\",\n\t\t\t\t\t\"Restricted Mode is intended for safe code browsing. Trust this window to enable all features.\",\n\t\t\t\t);\n\t\t\tcase WorkbenchState.FOLDER:\n\t\t\t\treturn localize(\n\t\t\t\t\t\"restrictedModeBannerMessageFolder\",\n\t\t\t\t\t\"Restricted Mode is intended for safe code browsing. Trust this folder to enable all features.\",\n\t\t\t\t);\n\t\t\tcase WorkbenchState.WORKSPACE:\n\t\t\t\treturn localize(\n\t\t\t\t\t\"restrictedModeBannerMessageWorkspace\",\n\t\t\t\t\t\"Restricted Mode is intended for safe code browsing. Trust this workspace to enable all features.\",\n\t\t\t\t);\n\t\t}\n\t}\n\n\tprivate get bannerSetting(): \"always\" | \"untilDismissed\" | \"never\" {\n\t\tconst result = this.configurationService.getValue<\n\t\t\t\"always\" | \"untilDismissed\" | \"never\"\n\t\t>(WORKSPACE_TRUST_BANNER);\n\n\t\t// In serverless environments, we don't need to aggressively show the banner\n\t\tif (\n\t\t\tresult !== \"always\" &&\n\t\t\tisWeb &&\n\t\t\t!this.remoteAgentService.getConnection()?.remoteAuthority\n\t\t) {\n\t\t\treturn \"never\";\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t//#endregion\n\n\t//#region Statusbar\n\n\tprivate getRestrictedModeStatusbarEntry(): IStatusbarEntry {\n\t\tlet ariaLabel = \"\";\n\t\tlet toolTip: IMarkdownString | string | undefined;\n\t\tswitch (this.workspaceContextService.getWorkbenchState()) {\n\t\t\tcase WorkbenchState.EMPTY: {\n\t\t\t\tariaLabel = localize(\n\t\t\t\t\t\"status.ariaUntrustedWindow\",\n\t\t\t\t\t\"Restricted Mode: Some features are disabled because this window is not trusted.\",\n\t\t\t\t);\n\t\t\t\ttoolTip = {\n\t\t\t\t\tvalue: localize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"status.tooltipUntrustedWindow2\",\n\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\"[abc]({n}) are links.  Only translate `features are disabled` and `window is not trusted`. Do not change brackets and parentheses or {n}\",\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"Running in Restricted Mode\\n\\nSome [features are disabled]({0}) because this [window is not trusted]({1}).\",\n\t\t\t\t\t\t`command:${LIST_WORKSPACE_UNSUPPORTED_EXTENSIONS_COMMAND_ID}`,\n\t\t\t\t\t\t`command:${MANAGE_TRUST_COMMAND_ID}`,\n\t\t\t\t\t),\n\t\t\t\t\tisTrusted: true,\n\t\t\t\t\tsupportThemeIcons: true,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase WorkbenchState.FOLDER: {\n\t\t\t\tariaLabel = localize(\n\t\t\t\t\t\"status.ariaUntrustedFolder\",\n\t\t\t\t\t\"Restricted Mode: Some features are disabled because this folder is not trusted.\",\n\t\t\t\t);\n\t\t\t\ttoolTip = {\n\t\t\t\t\tvalue: localize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"status.tooltipUntrustedFolder2\",\n\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\"[abc]({n}) are links.  Only translate `features are disabled` and `folder is not trusted`. Do not change brackets and parentheses or {n}\",\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"Running in Restricted Mode\\n\\nSome [features are disabled]({0}) because this [folder is not trusted]({1}).\",\n\t\t\t\t\t\t`command:${LIST_WORKSPACE_UNSUPPORTED_EXTENSIONS_COMMAND_ID}`,\n\t\t\t\t\t\t`command:${MANAGE_TRUST_COMMAND_ID}`,\n\t\t\t\t\t),\n\t\t\t\t\tisTrusted: true,\n\t\t\t\t\tsupportThemeIcons: true,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase WorkbenchState.WORKSPACE: {\n\t\t\t\tariaLabel = localize(\n\t\t\t\t\t\"status.ariaUntrustedWorkspace\",\n\t\t\t\t\t\"Restricted Mode: Some features are disabled because this workspace is not trusted.\",\n\t\t\t\t);\n\t\t\t\ttoolTip = {\n\t\t\t\t\tvalue: localize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"status.tooltipUntrustedWorkspace2\",\n\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\"[abc]({n}) are links. Only translate `features are disabled` and `workspace is not trusted`. Do not change brackets and parentheses or {n}\",\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"Running in Restricted Mode\\n\\nSome [features are disabled]({0}) because this [workspace is not trusted]({1}).\",\n\t\t\t\t\t\t`command:${LIST_WORKSPACE_UNSUPPORTED_EXTENSIONS_COMMAND_ID}`,\n\t\t\t\t\t\t`command:${MANAGE_TRUST_COMMAND_ID}`,\n\t\t\t\t\t),\n\t\t\t\t\tisTrusted: true,\n\t\t\t\t\tsupportThemeIcons: true,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tname: localize(\"status.WorkspaceTrust\", \"Workspace Trust\"),\n\t\t\ttext: `$(shield) ${localize(\"untrusted\", \"Restricted Mode\")}`,\n\t\t\tariaLabel: ariaLabel,\n\t\t\ttooltip: toolTip,\n\t\t\tcommand: MANAGE_TRUST_COMMAND_ID,\n\t\t\tkind: \"prominent\",\n\t\t};\n\t}\n\n\tprivate updateStatusbarEntry(trusted: boolean): void {\n\t\tif (trusted && this.statusbarEntryAccessor.value) {\n\t\t\tthis.statusbarEntryAccessor.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tif (!trusted && !this.statusbarEntryAccessor.value) {\n\t\t\tconst entry = this.getRestrictedModeStatusbarEntry();\n\t\t\tthis.statusbarEntryAccessor.value = this.statusbarService.addEntry(\n\t\t\t\tentry,\n\t\t\t\tthis.entryId,\n\t\t\t\tStatusbarAlignment.LEFT,\n\t\t\t\t0.99 * Number.MAX_VALUE /* Right of remote indicator */,\n\t\t\t);\n\t\t}\n\t}\n\n\t//#endregion\n}\n\nregisterWorkbenchContribution2(\n\tWorkspaceTrustRequestHandler.ID,\n\tWorkspaceTrustRequestHandler,\n\tWorkbenchPhase.BlockRestore,\n);\nRegistry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n).registerWorkbenchContribution(\n\tWorkspaceTrustUXHandler,\n\tLifecyclePhase.Restored,\n);\n\n/**\n * Trusted Workspace GUI Editor\n */\nclass WorkspaceTrustEditorInputSerializer implements IEditorSerializer {\n\tcanSerialize(editorInput: EditorInput): boolean {\n\t\treturn true;\n\t}\n\n\tserialize(input: WorkspaceTrustEditorInput): string {\n\t\treturn \"\";\n\t}\n\n\tdeserialize(\n\t\tinstantiationService: IInstantiationService,\n\t): WorkspaceTrustEditorInput {\n\t\treturn instantiationService.createInstance(WorkspaceTrustEditorInput);\n\t}\n}\n\nRegistry.as<IEditorFactoryRegistry>(\n\tEditorExtensions.EditorFactory,\n).registerEditorSerializer(\n\tWorkspaceTrustEditorInput.ID,\n\tWorkspaceTrustEditorInputSerializer,\n);\n\nRegistry.as<IEditorPaneRegistry>(\n\tEditorExtensions.EditorPane,\n).registerEditorPane(\n\tEditorPaneDescriptor.create(\n\t\tWorkspaceTrustEditor,\n\t\tWorkspaceTrustEditor.ID,\n\t\tlocalize(\"workspaceTrustEditor\", \"Workspace Trust Editor\"),\n\t),\n\t[new SyncDescriptor(WorkspaceTrustEditorInput)],\n);\n\n/*\n * Actions\n */\n\n// Configure Workspace Trust Settings\n\nconst CONFIGURE_TRUST_COMMAND_ID = \"workbench.trust.configure\";\nconst WORKSPACES_CATEGORY = localize2(\"workspacesCategory\", \"Workspaces\");\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: CONFIGURE_TRUST_COMMAND_ID,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"configureWorkspaceTrustSettings\",\n\t\t\t\t\t\"Configure Workspace Trust Settings\",\n\t\t\t\t),\n\t\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\t\tWorkspaceTrustContext.IsEnabled,\n\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t`config.${WORKSPACE_TRUST_ENABLED}`,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tcategory: WORKSPACES_CATEGORY,\n\t\t\t\tf1: true,\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor) {\n\t\t\taccessor\n\t\t\t\t.get(IPreferencesService)\n\t\t\t\t.openUserSettings({\n\t\t\t\t\tjsonEditor: false,\n\t\t\t\t\tquery: `@tag:${WORKSPACE_TRUST_SETTING_TAG}`,\n\t\t\t\t});\n\t\t}\n\t},\n);\n\n// Manage Workspace Trust\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: MANAGE_TRUST_COMMAND_ID,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"manageWorkspaceTrust\",\n\t\t\t\t\t\"Manage Workspace Trust\",\n\t\t\t\t),\n\t\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\t\tWorkspaceTrustContext.IsEnabled,\n\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t`config.${WORKSPACE_TRUST_ENABLED}`,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tcategory: WORKSPACES_CATEGORY,\n\t\t\t\tf1: true,\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor) {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\n\t\t\tconst input = instantiationService.createInstance(\n\t\t\t\tWorkspaceTrustEditorInput,\n\t\t\t);\n\n\t\t\teditorService.openEditor(input, { pinned: true });\n\t\t\treturn;\n\t\t}\n\t},\n);\n\n/*\n * Configuration\n */\nRegistry.as<IConfigurationRegistry>(\n\tConfigurationExtensions.Configuration,\n).registerConfiguration({\n\t...securityConfigurationNodeBase,\n\tproperties: {\n\t\t[WORKSPACE_TRUST_ENABLED]: {\n\t\t\ttype: \"boolean\",\n\t\t\tdefault: true,\n\t\t\tdescription: localize(\n\t\t\t\t\"workspace.trust.description\",\n\t\t\t\t\"Controls whether or not Workspace Trust is enabled within VS Code.\",\n\t\t\t),\n\t\t\ttags: [WORKSPACE_TRUST_SETTING_TAG],\n\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t},\n\t\t[WORKSPACE_TRUST_STARTUP_PROMPT]: {\n\t\t\ttype: \"string\",\n\t\t\tdefault: \"once\",\n\t\t\tdescription: localize(\n\t\t\t\t\"workspace.trust.startupPrompt.description\",\n\t\t\t\t\"Controls when the startup prompt to trust a workspace is shown.\",\n\t\t\t),\n\t\t\ttags: [WORKSPACE_TRUST_SETTING_TAG],\n\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\tenum: [\"always\", \"once\", \"never\"],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize(\n\t\t\t\t\t\"workspace.trust.startupPrompt.always\",\n\t\t\t\t\t\"Ask for trust every time an untrusted workspace is opened.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"workspace.trust.startupPrompt.once\",\n\t\t\t\t\t\"Ask for trust the first time an untrusted workspace is opened.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"workspace.trust.startupPrompt.never\",\n\t\t\t\t\t\"Do not ask for trust when an untrusted workspace is opened.\",\n\t\t\t\t),\n\t\t\t],\n\t\t},\n\t\t[WORKSPACE_TRUST_BANNER]: {\n\t\t\ttype: \"string\",\n\t\t\tdefault: \"untilDismissed\",\n\t\t\tdescription: localize(\n\t\t\t\t\"workspace.trust.banner.description\",\n\t\t\t\t\"Controls when the restricted mode banner is shown.\",\n\t\t\t),\n\t\t\ttags: [WORKSPACE_TRUST_SETTING_TAG],\n\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\tenum: [\"always\", \"untilDismissed\", \"never\"],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize(\n\t\t\t\t\t\"workspace.trust.banner.always\",\n\t\t\t\t\t\"Show the banner every time an untrusted workspace is open.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"workspace.trust.banner.untilDismissed\",\n\t\t\t\t\t\"Show the banner when an untrusted workspace is opened until dismissed.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"workspace.trust.banner.never\",\n\t\t\t\t\t\"Do not show the banner when an untrusted workspace is open.\",\n\t\t\t\t),\n\t\t\t],\n\t\t},\n\t\t[WORKSPACE_TRUST_UNTRUSTED_FILES]: {\n\t\t\ttype: \"string\",\n\t\t\tdefault: \"prompt\",\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t\"workspace.trust.untrustedFiles.description\",\n\t\t\t\t\"Controls how to handle opening untrusted files in a trusted workspace. This setting also applies to opening files in an empty window which is trusted via `#{0}#`.\",\n\t\t\t\tWORKSPACE_TRUST_EMPTY_WINDOW,\n\t\t\t),\n\t\t\ttags: [WORKSPACE_TRUST_SETTING_TAG],\n\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\tenum: [\"prompt\", \"open\", \"newWindow\"],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize(\n\t\t\t\t\t\"workspace.trust.untrustedFiles.prompt\",\n\t\t\t\t\t\"Ask how to handle untrusted files for each workspace. Once untrusted files are introduced to a trusted workspace, you will not be prompted again.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"workspace.trust.untrustedFiles.open\",\n\t\t\t\t\t\"Always allow untrusted files to be introduced to a trusted workspace without prompting.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"workspace.trust.untrustedFiles.newWindow\",\n\t\t\t\t\t\"Always open untrusted files in a separate window in restricted mode without prompting.\",\n\t\t\t\t),\n\t\t\t],\n\t\t},\n\t\t[WORKSPACE_TRUST_EMPTY_WINDOW]: {\n\t\t\ttype: \"boolean\",\n\t\t\tdefault: true,\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t\"workspace.trust.emptyWindow.description\",\n\t\t\t\t\"Controls whether or not the empty window is trusted by default within VS Code. When used with `#{0}#`, you can enable the full functionality of VS Code without prompting in an empty window.\",\n\t\t\t\tWORKSPACE_TRUST_UNTRUSTED_FILES,\n\t\t\t),\n\t\t\ttags: [WORKSPACE_TRUST_SETTING_TAG],\n\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t},\n\t},\n});\n\nclass WorkspaceTrustTelemetryContribution\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tconstructor(\n\t\t@IWorkbenchEnvironmentService\n\t\tprivate readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IWorkspaceContextService\n\t\tprivate readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IWorkspaceTrustEnablementService\n\t\tprivate readonly workspaceTrustEnablementService: IWorkspaceTrustEnablementService,\n\t\t@IWorkspaceTrustManagementService\n\t\tprivate readonly workspaceTrustManagementService: IWorkspaceTrustManagementService,\n\t) {\n\t\tsuper();\n\n\t\tthis.workspaceTrustManagementService.workspaceTrustInitialized.then(\n\t\t\t() => {\n\t\t\t\tthis.logInitialWorkspaceTrustInfo();\n\t\t\t\tthis.logWorkspaceTrust(\n\t\t\t\t\tthis.workspaceTrustManagementService.isWorkspaceTrusted(),\n\t\t\t\t);\n\n\t\t\t\tthis._register(\n\t\t\t\t\tthis.workspaceTrustManagementService.onDidChangeTrust(\n\t\t\t\t\t\t(isTrusted) => this.logWorkspaceTrust(isTrusted),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t},\n\t\t);\n\t}\n\n\tprivate logInitialWorkspaceTrustInfo(): void {\n\t\tif (!this.workspaceTrustEnablementService.isWorkspaceTrustEnabled()) {\n\t\t\tconst disabledByCliFlag =\n\t\t\t\tthis.environmentService.disableWorkspaceTrust;\n\n\t\t\ttype WorkspaceTrustDisabledEventClassification = {\n\t\t\t\towner: \"sbatten\";\n\t\t\t\tcomment: \"Logged when workspace trust is disabled\";\n\t\t\t\treason: {\n\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\tcomment: \"The reason workspace trust is disabled. e.g. cli or setting\";\n\t\t\t\t};\n\t\t\t};\n\n\t\t\ttype WorkspaceTrustDisabledEvent = {\n\t\t\t\treason: \"setting\" | \"cli\";\n\t\t\t};\n\n\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\tWorkspaceTrustDisabledEvent,\n\t\t\t\tWorkspaceTrustDisabledEventClassification\n\t\t\t>(\"workspaceTrustDisabled\", {\n\t\t\t\treason: disabledByCliFlag ? \"cli\" : \"setting\",\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\ttype WorkspaceTrustInfoEventClassification = {\n\t\t\towner: \"sbatten\";\n\t\t\tcomment: \"Information about the workspaces trusted on the machine\";\n\t\t\ttrustedFoldersCount: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"The number of trusted folders on the machine\";\n\t\t\t};\n\t\t};\n\n\t\ttype WorkspaceTrustInfoEvent = {\n\t\t\ttrustedFoldersCount: number;\n\t\t};\n\n\t\tthis.telemetryService.publicLog2<\n\t\t\tWorkspaceTrustInfoEvent,\n\t\t\tWorkspaceTrustInfoEventClassification\n\t\t>(\"workspaceTrustFolderCounts\", {\n\t\t\ttrustedFoldersCount:\n\t\t\t\tthis.workspaceTrustManagementService.getTrustedUris().length,\n\t\t});\n\t}\n\n\tprivate async logWorkspaceTrust(isTrusted: boolean): Promise<void> {\n\t\tif (!this.workspaceTrustEnablementService.isWorkspaceTrustEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\ttype WorkspaceTrustStateChangedEvent = {\n\t\t\tworkspaceId: string;\n\t\t\tisTrusted: boolean;\n\t\t};\n\n\t\ttype WorkspaceTrustStateChangedEventClassification = {\n\t\t\towner: \"sbatten\";\n\t\t\tcomment: \"Logged when the workspace transitions between trusted and restricted modes\";\n\t\t\tworkspaceId: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"An id of the workspace\";\n\t\t\t};\n\t\t\tisTrusted: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"true if the workspace is trusted\";\n\t\t\t};\n\t\t};\n\n\t\tthis.telemetryService.publicLog2<\n\t\t\tWorkspaceTrustStateChangedEvent,\n\t\t\tWorkspaceTrustStateChangedEventClassification\n\t\t>(\"workspaceTrustStateChanged\", {\n\t\t\tworkspaceId: this.workspaceContextService.getWorkspace().id,\n\t\t\tisTrusted: isTrusted,\n\t\t});\n\n\t\tif (isTrusted) {\n\t\t\ttype WorkspaceTrustFolderInfoEventClassification = {\n\t\t\t\towner: \"sbatten\";\n\t\t\t\tcomment: \"Some metrics on the trusted workspaces folder structure\";\n\t\t\t\ttrustedFolderDepth: {\n\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\tcomment: \"The number of directories deep of the trusted path\";\n\t\t\t\t};\n\t\t\t\tworkspaceFolderDepth: {\n\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\tcomment: \"The number of directories deep of the workspace path\";\n\t\t\t\t};\n\t\t\t\tdelta: {\n\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\tcomment: \"The difference between the trusted path and the workspace path directories depth\";\n\t\t\t\t};\n\t\t\t};\n\n\t\t\ttype WorkspaceTrustFolderInfoEvent = {\n\t\t\t\ttrustedFolderDepth: number;\n\t\t\t\tworkspaceFolderDepth: number;\n\t\t\t\tdelta: number;\n\t\t\t};\n\n\t\t\tconst getDepth = (folder: string): number => {\n\t\t\t\tlet resolvedPath = resolve(folder);\n\n\t\t\t\tlet depth = 0;\n\t\t\t\twhile (dirname(resolvedPath) !== resolvedPath && depth < 100) {\n\t\t\t\t\tresolvedPath = dirname(resolvedPath);\n\t\t\t\t\tdepth++;\n\t\t\t\t}\n\n\t\t\t\treturn depth;\n\t\t\t};\n\n\t\t\tfor (const folder of this.workspaceContextService.getWorkspace()\n\t\t\t\t.folders) {\n\t\t\t\tconst { trusted, uri } =\n\t\t\t\t\tawait this.workspaceTrustManagementService.getUriTrustInfo(\n\t\t\t\t\t\tfolder.uri,\n\t\t\t\t\t);\n\t\t\t\tif (!trusted) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst workspaceFolderDepth = getDepth(folder.uri.fsPath);\n\t\t\t\tconst trustedFolderDepth = getDepth(uri.fsPath);\n\t\t\t\tconst delta = workspaceFolderDepth - trustedFolderDepth;\n\n\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\tWorkspaceTrustFolderInfoEvent,\n\t\t\t\t\tWorkspaceTrustFolderInfoEventClassification\n\t\t\t\t>(\"workspaceFolderDepthBelowTrustedFolder\", {\n\t\t\t\t\tworkspaceFolderDepth,\n\t\t\t\t\ttrustedFolderDepth,\n\t\t\t\t\tdelta,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n).registerWorkbenchContribution(\n\tWorkspaceTrustTelemetryContribution,\n\tLifecyclePhase.Restored,\n);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,OAAO;AACP,SAAS,eAAe;AACxB;AAAA,EAEC;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,SAAS,eAAe;AACjC,SAAS,aAAa;AACtB;AAAA,EACC;AAAA,EACA,WAAW;AAAA,OACL;AACP,SAAS,WAAW;AACpB,SAAS,UAAU,iBAAiB;AACpC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,uBAAuB;AAChC,SAAS,6BAA6B;AACtC;AAAA,EACC,cAAc;AAAA,EACd;AAAA,OAEM;AACP;AAAA,EACC;AAAA,EAEA;AAAA,OACM;AACP,SAAS,sBAAsB;AAC/B,SAAS,2BAA2B;AACpC,SAAS,oBAAoB;AAC7B,SAAS,sBAAsB;AAC/B;AAAA,EACC;AAAA,OAEM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,gBAAgB;AACzB,SAAS,uBAAuB;AAChC,SAAS,gBAAgB;AACzB;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,yBAAyB;AAClC,SAAS,0BAA0B;AACnC;AAAA,EAEC;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,OAEM;AACP,SAAS,qCAAqC;AAC9C;AAAA,EAGC,cAAc;AAAA,EACd;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,OAGM;AAEP;AAAA,EAEC;AAAA,OACM;AACP,SAAS,sBAAsB;AAC/B,SAAS,oCAAoC;AAC7C,SAAS,oBAAoB;AAC7B,SAAS,sBAAsB;AAC/B,SAAS,2BAA2B;AACpC,SAAS,2BAA2B;AACpC;AAAA,EAGC;AAAA,EACA;AAAA,OACM;AACP,SAAS,iCAAiC;AAC1C;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,wDAAwD;AACjE,SAAS,mCAAmC;AAC5C;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,sBAAsB,kBAAkB;AAEjD,MAAM,yBAAyB;AAC/B,MAAM,2BAA2B;AACjC,MAAM,uCACL;AAEM,IAAM,4BAAN,cACE,WAET;AAAA,EAtIA,OAsIA;AAAA;AAAA;AAAA,EACkB;AAAA,EACA;AAAA,EAEjB,YACqB,mBACc,iCACA,iCACjC;AACD,UAAM;AAEN,SAAK,4BACJ,sBAAsB,UAAU,OAAO,iBAAiB;AACzD,SAAK,0BAA0B;AAAA,MAC9B,gCAAgC,wBAAwB;AAAA,IACzD;AAEA,SAAK,0BACJ,sBAAsB,UAAU,OAAO,iBAAiB;AACzD,SAAK,wBAAwB;AAAA,MAC5B,gCAAgC,mBAAmB;AAAA,IACpD;AAEA,SAAK;AAAA,MACJ,gCAAgC;AAAA,QAAiB,CAAC,YACjD,KAAK,wBAAwB,IAAI,OAAO;AAAA,MACzC;AAAA,IACD;AAAA,EACD;AACD;AAhCa,4BAAN;AAAA,EAQJ;AAAA,EACA;AAAA,EACA;AAAA,GAVU;AAkCb,SAAS;AAAA,EACR,oBAAoB;AACrB,EAAE;AAAA,EACD;AAAA,EACA,eAAe;AAChB;AAMO,IAAM,+BAAN,cACE,WAET;AAAA,EAGC,YACkC,eACC,gBAEjB,yBAEA,iCAEA,8BAChB;AACD,UAAM;AAT2B;AACC;AAEjB;AAEA;AAEA;AAIjB,SAAK,kBAAkB;AAAA,EACxB;AAAA,EAnMD,OAmLA;AAAA;AAAA;AAAA,EACC,OAAgB,KAAK;AAAA,EAiBrB,IAAY,uBAAgC;AAC3C,WAAO,CAAC;AAAA,MACP,sBAAsB,KAAK,wBAAwB,aAAa,CAAC;AAAA,IAClE;AAAA,EACD;AAAA,EAEQ,oBAA0B;AAEjC,SAAK;AAAA,MACJ,KAAK,6BAA6B;AAAA,QACjC,YAAY;AACX,gBAAM,KAAK,gCACT;AAGF,gBAAM,kBAAkB;AAAA,YACvB,KAAK,wBAAwB,kBAAkB,MAC/C,eAAe,QACZ;AAAA,cACA;AAAA,cACA;AAAA,YACD,IACC;AAAA,cACA;AAAA,cACA;AAAA,YACD;AAAA,YACF;AAAA,cACC;AAAA,cACA;AAAA,YACD;AAAA,UACD;AAGA,gBAAM,KAAK,cAAc,OAAa;AAAA,YACrC,MAAM,SAAS;AAAA,YACf,SACC,KAAK,wBAAwB,kBAAkB,MAC/C,eAAe,QACZ;AAAA,cACA;AAAA,cACA;AAAA,YACD,IACC;AAAA,cACA;AAAA,cACA;AAAA,YACD;AAAA,YACH,SAAS;AAAA,cACR;AAAA,gBACC,OAAO;AAAA,kBACN;AAAA,oBACC,KAAK;AAAA,oBACL,SAAS,CAAC,uBAAuB;AAAA,kBAClC;AAAA,kBACA;AAAA,gBACD;AAAA,gBACA,KAAK,wBAAC,EAAE,gBAAgB,MACvB,KAAK,6BAA6B;AAAA,kBACjC,0BAA0B;AAAA,kBAC1B,CAAC,CAAC;AAAA,gBACH,GAJI;AAAA,cAKN;AAAA,cACA;AAAA,gBACC,OAAO;AAAA,kBACN;AAAA,oBACC,KAAK;AAAA,oBACL,SAAS,CAAC,uBAAuB;AAAA,kBAClC;AAAA,kBACA;AAAA,gBACD;AAAA,gBACA,KAAK,wBAAC,EAAE,gBAAgB,MACvB,KAAK,6BAA6B;AAAA,kBACjC,0BAA0B;AAAA,kBAC1B,CAAC,CAAC;AAAA,gBACH,GAJI;AAAA,cAKN;AAAA,YACD;AAAA,YACA,cAAc;AAAA,cACb,KAAK,6BACJ,KAAK,6BAA6B;AAAA,gBACjC,0BAA0B;AAAA,cAC3B,GAHI;AAAA,YAIN;AAAA,YACA,UAAU;AAAA,cACT,OAAO;AAAA,gBACN;AAAA,gBACA;AAAA,cACD;AAAA,cACA,SAAS;AAAA,YACV;AAAA,YACA,QAAQ;AAAA,cACP,MAAM,QAAQ;AAAA,cACd,iBAAiB,gBAAgB,IAAI,CAAC,OAAO;AAC5C,uBAAO,EAAE,UAAU,IAAI,eAAe,EAAE,EAAE;AAAA,cAC3C,CAAC;AAAA,YACF;AAAA,UACD,CAAC;AAAA,QACF;AAAA,MACD;AAAA,IACD;AAGA,SAAK;AAAA,MACJ,KAAK,6BAA6B;AAAA,QACjC,OAAO,mBAAmB;AACzB,gBAAM,KAAK,gCACT;AAGF,gBAAM,UAAU,KAAK,uBAClB;AAAA,YACA;AAAA,YACA;AAAA,UACD,IACC;AAAA,YACA;AAAA,YACA;AAAA,UACD;AAGF,gBAAM,iBAAiB;AAAA,YACtB;AAAA,YACA;AAAA,UACD;AACA,gBAAM,UAAU,gBAAgB,WAAW;AAG3C,gBAAM,UAAU,gBAAgB,WAAW;AAAA,YAC1C;AAAA,cACC,OAAO,KAAK,uBACT;AAAA,gBACA;AAAA,kBACC,KAAK;AAAA,kBACL,SAAS,CAAC,uBAAuB;AAAA,gBAClC;AAAA,gBACA;AAAA,cACD,IACC;AAAA,gBACA;AAAA,kBACC,KAAK;AAAA,kBACL,SAAS,CAAC,uBAAuB;AAAA,gBAClC;AAAA,gBACA;AAAA,cACD;AAAA,cACF,MAAM;AAAA,YACP;AAAA,YACA;AAAA,cACC,OAAO;AAAA,gBACN;AAAA,kBACC,KAAK;AAAA,kBACL,SAAS,CAAC,uBAAuB;AAAA,gBAClC;AAAA,gBACA;AAAA,cACD;AAAA,cACA,MAAM;AAAA,YACP;AAAA,UACD;AAGA,cAAI,CAAC,QAAQ,KAAK,CAAC,MAAM,EAAE,SAAS,QAAQ,GAAG;AAC9C,oBAAQ,KAAK;AAAA,cACZ,OAAO;AAAA,gBACN;AAAA,gBACA;AAAA,cACD;AAAA,cACA,MAAM;AAAA,YACP,CAAC;AAAA,UACF;AAGA,gBAAM,EAAE,OAAO,IAAI,MAAM,KAAK,cAAc,OAAO;AAAA,YAClD,MAAM,SAAS;AAAA,YACf;AAAA,YACA,QAAQ;AAAA,cACP,MAAM,QAAQ;AAAA,cACd,iBAAiB;AAAA,gBAChB,EAAE,UAAU,IAAI,eAAe,OAAO,EAAE;AAAA,gBACxC;AAAA,kBACC,UAAU,IAAI;AAAA,oBACb;AAAA,sBACC;AAAA,sBACA;AAAA,oBACD;AAAA,kBACD;AAAA,gBACD;AAAA,cACD;AAAA,YACD;AAAA,YACA,SAAS,QACP,OAAO,CAAC,MAAM,EAAE,SAAS,QAAQ,EACjC,IAAI,CAAC,WAAW;AAChB,qBAAO;AAAA,gBACN,OAAO,OAAO;AAAA,gBACd,KAAK,6BAAM,OAAO,MAAb;AAAA,cACN;AAAA,YACD,CAAC;AAAA,YACF,eAAe,MAAM;AACpB,oBAAM,eAAe,QAAQ;AAAA,gBAC5B,CAAC,MAAM,EAAE,SAAS;AAAA,cACnB;AACA,kBAAI,CAAC,cAAc;AAClB,uBAAO;AAAA,cACR;AAEA,qBAAO;AAAA,gBACN,OAAO,aAAa;AAAA,gBACpB,KAAK,6BAAM,aAAa,MAAnB;AAAA,cACN;AAAA,YACD,GAAG;AAAA,UACJ,CAAC;AAGD,kBAAQ,QAAQ;AAAA,YACf,KAAK;AACJ,oBAAM,KAAK,6BAA6B;AAAA,gBACvC;AAAA,cACD;AACA;AAAA,YACD,KAAK;AACJ,oBAAM,KAAK,6BAA6B;AAAA,gBACvC;AAAA,cACD;AACA;AAAA,YACD,KAAK;AACJ,mBAAK,6BAA6B,4BAA4B;AAC9D,oBAAM,KAAK,eAAe;AAAA,gBACzB;AAAA,cACD;AACA;AAAA,YACD,KAAK;AACJ,mBAAK,6BAA6B,4BAA4B;AAC9D;AAAA,UACF;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAhQa,+BAAN;AAAA,EAOJ;AAAA,EACA;AAAA,EACA;AAAA,EAEA;AAAA,EAEA;AAAA,GAbU;AAqQN,IAAM,0BAAN,cACE,WAET;AAAA,EAKC,YACkC,eAEhB,yBAEA,iCAEA,iCAEA,sBACmB,kBACF,gBAEjB,8BACgB,eACD,cACD,aACG,gBAEjB,oBAEA,oBACc,aAC9B;AACD,UAAM;AAvB2B;AAEhB;AAEA;AAEA;AAEA;AACmB;AACF;AAEjB;AACgB;AACD;AACD;AACG;AAEjB;AAEA;AACc;AAI/B,SAAK,yBAAyB,KAAK;AAAA,MAClC,IAAI,kBAA2C;AAAA,IAChD;AAEA,KAAC,YAAY;AACZ,YAAM,KAAK,gCACT;AAEF,UACC,KAAK,gCAAgC,wBAAwB,GAC5D;AACD,aAAK,kBAAkB;AACvB,aAAK;AAAA,UACJ,KAAK,gCAAgC,mBAAmB;AAAA,QACzD;AAGA,YAAI,KAAK,YAAY,UAAU;AAC9B,eAAK,iBAAiB;AAAA,QACvB,OAAO;AACN,gBAAM,kBAAkB,KAAK,YAAY;AAAA,YACxC,CAAC,YAAY;AACZ,kBAAI,SAAS;AACZ,gCAAgB,QAAQ;AACxB,qBAAK,iBAAiB;AAAA,cACvB;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD,GAAG;AAAA,EACJ;AAAA,EAtfD,OAwbA;AAAA;AAAA;AAAA,EACkB,UAAU;AAAA,EAEV;AAAA,EA6DT,oBAA0B;AACjC,SAAK;AAAA,MACJ,KAAK,wBAAwB,6BAA6B,CAAC,MAAM;AAChE,YAAI,EAAE,WAAW;AAChB;AAAA,QACD;AACA,YACC,CAAC,KAAK,gCAAgC,wBAAwB,GAC7D;AACD;AAAA,QACD;AAEA,cAAM,qBAAqB,8BAC1BA,OACmB;AACnB,gBAAM,UACL,KAAK,gCAAgC,mBAAmB;AAGzD,cACC,YACCA,GAAE,QAAQ,MAAM,UAAUA,GAAE,QAAQ,QAAQ,SAC5C;AACD,kBAAM,wBAAwB,MAAM,QAAQ;AAAA,cAC3CA,GAAE,QAAQ,MAAM;AAAA,gBAAI,CAAC,WACpB,KAAK,gCAAgC;AAAA,kBACpC,OAAO;AAAA,gBACR;AAAA,cACD;AAAA,YACD;AAEA,gBACC,CAAC,sBACC,IAAI,CAAC,SAAS,KAAK,OAAO,EAC1B,MAAM,CAACC,aAAYA,QAAO,GAC3B;AACD,oBAAM,EAAE,UAAU,IACjB,MAAM,KAAK,cAAc,QAAQ;AAAA,gBAChC,MAAM,SAAS;AAAA,gBACf,SAAS;AAAA,kBACR;AAAA,kBACA;AAAA,gBACD;AAAA,gBACA,QAAQ;AAAA,kBACP;AAAA,kBACA;AAAA,gBACD;AAAA,gBACA,cAAc,SAAS,MAAM,IAAI;AAAA,gBACjC,QAAQ,EAAE,MAAM,QAAQ,OAAO;AAAA,cAChC,CAAC;AAGF,oBAAM,KAAK,gCAAgC;AAAA,gBAC1C,sBAAsB,IAAI,CAAC,MAAM,EAAE,GAAG;AAAA,gBACtC;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAAA,QACD,GA9C2B;AAgD3B,eAAO,EAAE,KAAK,mBAAmB,CAAC,CAAC;AAAA,MACpC,CAAC;AAAA,IACF;AAEA,SAAK;AAAA,MACJ,KAAK,gCAAgC,iBAAiB,CAAC,YAAY;AAClE,aAAK,0BAA0B,OAAO;AAAA,MACvC,CAAC;AAAA,IACF;AAEA,SAAK;AAAA,MACJ,KAAK,6BAA6B;AAAA,QACjC,YAAY;AACX,cAAI;AACJ,cAAI;AACJ,cAAI;AACJ,cAAI;AACJ,gBAAM,yBACL,MAAM,KAAK,uBAAuB;AACnC,cACC,0BACA,KAAK,eAAe,2BACnB;AACD,0BACC,KAAK,eAAe,0BAA0B;AAC/C,8BACC,KAAK,eAAe,0BAClB;AACH,0BACC,KAAK,eAAe,0BAClB;AACH,8BACC,KAAK,eAAe,0BAClB;AAAA,UACJ,OAAO;AACN,oBAAQ;AAAA,cACP;AAAA,YACD;AAAA,UACD;AAEA,gBAAM,QACL,gBACC,KAAK,uBACH;AAAA,YACA;AAAA,YACA;AAAA,UACD,IACC;AAAA,YACA;AAAA,YACA;AAAA,UACD;AAEH,cAAI;AACJ,gBAAM,sBAAsB;AAAA,YAC3B,KAAK,wBAAwB,aAAa;AAAA,UAC3C;AACA,gBAAM,0BACL,kCAAkC,mBAAmB;AACtD,gBAAM,gBACL,2BAA2B,mBAAmB;AAC/C,cACC,CAAC,0BACD,KAAK,gCAAgC,wBAAwB,GAC5D;AACD,kBAAM,OAAO;AAAA,cACZ;AAAA,gBAEE,oBACC;AAAA,cACH;AAAA,YACD;AACA,2BAAe;AAAA,cACd;AAAA,cACA;AAAA,cACA;AAAA,YACD;AAAA,UACD;AAGA,eAAK;AAAA,YACJ;AAAA,YACA;AAAA,cACC,OACC,eACA;AAAA,gBACC;AAAA,kBACC,KAAK;AAAA,kBACL,SAAS,CAAC,uBAAuB;AAAA,gBAClC;AAAA,gBACA;AAAA,cACD;AAAA,cACD,UAAU,0BACP;AAAA,gBACA;AAAA,gBACA;AAAA,cACD,IACC;AAAA,gBACA;AAAA,gBACA;AAAA,cACD;AAAA,YACH;AAAA,YACA;AAAA,cACC,OACC,mBACA;AAAA,gBACC;AAAA,kBACC,KAAK;AAAA,kBACL,SAAS,CAAC,uBAAuB;AAAA,gBAClC;AAAA,gBACA;AAAA,cACD;AAAA,cACD,UAAU,0BACP;AAAA,gBACA;AAAA,gBACA;AAAA,cACD,IACC;AAAA,gBACA;AAAA,gBACA;AAAA,cACD;AAAA,YACH;AAAA,YACA;AAAA,cACC,0BACG;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,KAAK,eAAe;AAAA,cACrB,IACC;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,KAAK,eAAe;AAAA,cACrB;AAAA,cACF,mBACC;AAAA,gBACC;AAAA,gBACA;AAAA,cACD;AAAA,cACD,gBACG,KACA,KAAK,KAAK,aAAa,kBAAkB,qBAAqB,EAAE,SAAS,UAAU,KAAK,CAAC,CAAC;AAAA,YAC9F;AAAA,YACA;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,0BAA0B,SAAwB;AACzD,UAAM,aAAa,KAAK,cAAc,CAAC,OAAO;AAE9C,SAAK,qBAAqB,OAAO;AAEjC,QAAI,YAAY;AACf,UAAI,SAAS;AACZ,aAAK,cAAc,KAAK,sBAAsB;AAAA,MAC/C,OAAO;AACN,aAAK,cAAc,KAAK,UAAU;AAAA,MACnC;AAAA,IACD;AAAA,EACD;AAAA;AAAA,EAIA,MAAc,YACb,UACA,eACA,iBACA,iBACA,mBACgB;AAChB,UAAM,KAAK,cAAc,OAAO;AAAA,MAC/B,MAAM,SAAS;AAAA,MACf,SAAS;AAAA,MACT,UAAU,oBACP;AAAA,QACA,OAAO;AAAA,MACR,IACC;AAAA,MACH,SAAS;AAAA,QACR;AAAA,UACC,OAAO,cAAc;AAAA,UACrB,KAAK,8BAAO,EAAE,gBAAgB,MAAM;AACnC,gBAAI,iBAAiB;AACpB,oBAAM,KAAK,gCAAgC;AAAA,gBAC1C;AAAA,cACD;AAAA,YACD,OAAO;AACN,oBAAM,KAAK,6BAA6B;AAAA,gBACvC;AAAA,cACD;AAAA,YACD;AAAA,UACD,GAVK;AAAA,QAWN;AAAA,QACA;AAAA,UACC,OAAO,gBAAgB;AAAA,UACvB,KAAK,6BAAM;AACV,iBAAK,0BAA0B,KAAK;AACpC,iBAAK,6BAA6B,4BAA4B;AAAA,UAC/D,GAHK;AAAA,QAIN;AAAA,MACD;AAAA,MACA,QAAQ;AAAA,QACP,eAAe;AAAA,UACd,cAAc;AAAA,UACd,gBAAgB;AAAA,QACjB;AAAA,QACA,oBAAoB;AAAA,QACpB,MAAM,QAAQ;AAAA,QACd,iBAAiB,gBAAgB,IAAI,CAAC,OAAO;AAC5C,iBAAO,EAAE,UAAU,IAAI,eAAe,EAAE,EAAE;AAAA,QAC3C,CAAC;AAAA,MACF;AAAA,IACD,CAAC;AAED,SAAK,eAAe;AAAA,MACnB;AAAA,MACA;AAAA,MACA,aAAa;AAAA,MACb,cAAc;AAAA,IACf;AAAA,EACD;AAAA,EAEA,MAAc,mBAAkC;AAC/C,QAAI,KAAK,gCAAgC,mBAAmB,GAAG;AAC9D,WAAK,0BAA0B,IAAI;AACnC;AAAA,IACD;AAGA,QAAI,CAAC,KAAK,gCAAgC,qBAAqB,GAAG;AACjE;AAAA,IACD;AAGA,QAAI,mBAAmB,KAAK,wBAAwB,aAAa,CAAC,GAAG;AACpE,WAAK,0BAA0B,KAAK;AACpC;AAAA,IACD;AAGA,QACC,KAAK,wBAAwB,kBAAkB,MAC/C,eAAe,OACd;AACD,WAAK,0BAA0B,KAAK;AACpC;AAAA,IACD;AAEA,QAAI,KAAK,yBAAyB,SAAS;AAC1C,WAAK,0BAA0B,KAAK;AACpC;AAAA,IACD;AAEA,QACC,KAAK,yBAAyB,UAC9B,KAAK,eAAe;AAAA,MACnB;AAAA,MACA,aAAa;AAAA,MACb;AAAA,IACD,GACC;AACD,WAAK,0BAA0B,KAAK;AACpC;AAAA,IACD;AAGA,SAAK,6BAA6B,+BAA+B;AAAA,EAClE;AAAA,EAEA,IAAY,uBAAoD;AAC/D,WAAO,KAAK,qBAAqB;AAAA,MAChC;AAAA,IACD;AAAA,EACD;AAAA,EAEA,IAAY,uBAAgC;AAC3C,WAAO,CAAC;AAAA,MACP,sBAAsB,KAAK,wBAAwB,aAAa,CAAC;AAAA,IAClE;AAAA,EACD;AAAA,EAEA,MAAc,yBAA2C;AACxD,UAAM,wBAAwB,IAAI;AAAA,MACjC,KAAK,mBAAmB;AAAA,MACxB;AAAA,IACD;AACA,WAAO,MAAM,KAAK,YAChB,OAAO,qBAAqB,EAC5B,KAAK,OAAO,WAAW;AACvB,UAAI,QAAQ;AACX,YAAI;AACH,gBAAM,UAAU,MAAM,KAAK,YAAY;AAAA,YACtC;AAAA,UACD;AACA,gBAAM,aAAa,KAAK;AAAA,YACvB,QAAQ,MAAM,SAAS;AAAA,UACxB;AACA,cACC,WAAW;AAAA,YACV,KAAK,wBACH,aAAa,EACb,QAAQ,CAAC,EAAE,IAAI,SAAS;AAAA,UAC3B,IAAI,IACH;AACD,mBAAO;AAAA,UACR;AAAA,QACD,SAAS,GAAG;AAAA,QAEZ;AAAA,MACD;AACA,aAAO;AAAA,IACR,CAAC;AAAA,EACH;AAAA;AAAA;AAAA,EAMQ,cAAc,gBAAkD;AACvE,UAAM,sBAAsB,KAAK,eAAe;AAAA,MAC/C;AAAA,MACA,aAAa;AAAA,MACb;AAAA,IACD;AAGA,QAAI,KAAK,kBAAkB,SAAS;AACnC,aAAO;AAAA,IACR;AAGA,QAAI,KAAK,kBAAkB,oBAAoB,qBAAqB;AACnE,aAAO;AAAA,IACR;AAEA,UAAM,UAAU;AAAA,MACf;AAAA,QACC,OAAO,SAAS,8BAA8B,QAAQ;AAAA,QACtD,MAAM,aAAa;AAAA,MACpB;AAAA,MACA;AAAA,QACC,OAAO,SAAS,iCAAiC,YAAY;AAAA,QAC7D,MAAM;AAAA,MACP;AAAA,IACD;AAEA,WAAO;AAAA,MACN,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,WAAW,KAAK,wBAAwB;AAAA,MACxC,SAAS,KAAK,sBAAsB;AAAA,MACpC;AAAA,MACA,SAAS,6BAAM;AACd,YAAI,gBAAgB;AACnB,eAAK,eAAe;AAAA,YACnB;AAAA,YACA;AAAA,YACA,aAAa;AAAA,YACb,cAAc;AAAA,UACf;AAAA,QACD;AAAA,MACD,GATS;AAAA,IAUV;AAAA,EACD;AAAA,EAEQ,0BAAkC;AACzC,YAAQ,KAAK,wBAAwB,kBAAkB,GAAG;AAAA,MACzD,KAAK,eAAe;AACnB,eAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,MACD,KAAK,eAAe;AACnB,eAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,MACD,KAAK,eAAe;AACnB,eAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,IACF;AAAA,EACD;AAAA,EAEQ,wBAAgC;AACvC,YAAQ,KAAK,wBAAwB,kBAAkB,GAAG;AAAA,MACzD,KAAK,eAAe;AACnB,eAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,MACD,KAAK,eAAe;AACnB,eAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,MACD,KAAK,eAAe;AACnB,eAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,IACF;AAAA,EACD;AAAA,EAEA,IAAY,gBAAuD;AAClE,UAAM,SAAS,KAAK,qBAAqB,SAEvC,sBAAsB;AAGxB,QACC,WAAW,YACX,SACA,CAAC,KAAK,mBAAmB,cAAc,GAAG,iBACzC;AACD,aAAO;AAAA,IACR;AAEA,WAAO;AAAA,EACR;AAAA;AAAA;AAAA,EAMQ,kCAAmD;AAC1D,QAAI,YAAY;AAChB,QAAI;AACJ,YAAQ,KAAK,wBAAwB,kBAAkB,GAAG;AAAA,MACzD,KAAK,eAAe,OAAO;AAC1B,oBAAY;AAAA,UACX;AAAA,UACA;AAAA,QACD;AACA,kBAAU;AAAA,UACT,OAAO;AAAA,YACN;AAAA,cACC,KAAK;AAAA,cACL,SAAS;AAAA,gBACR;AAAA,cACD;AAAA,YACD;AAAA,YACA;AAAA,YACA,WAAW,gDAAgD;AAAA,YAC3D,WAAW,uBAAuB;AAAA,UACnC;AAAA,UACA,WAAW;AAAA,UACX,mBAAmB;AAAA,QACpB;AACA;AAAA,MACD;AAAA,MACA,KAAK,eAAe,QAAQ;AAC3B,oBAAY;AAAA,UACX;AAAA,UACA;AAAA,QACD;AACA,kBAAU;AAAA,UACT,OAAO;AAAA,YACN;AAAA,cACC,KAAK;AAAA,cACL,SAAS;AAAA,gBACR;AAAA,cACD;AAAA,YACD;AAAA,YACA;AAAA,YACA,WAAW,gDAAgD;AAAA,YAC3D,WAAW,uBAAuB;AAAA,UACnC;AAAA,UACA,WAAW;AAAA,UACX,mBAAmB;AAAA,QACpB;AACA;AAAA,MACD;AAAA,MACA,KAAK,eAAe,WAAW;AAC9B,oBAAY;AAAA,UACX;AAAA,UACA;AAAA,QACD;AACA,kBAAU;AAAA,UACT,OAAO;AAAA,YACN;AAAA,cACC,KAAK;AAAA,cACL,SAAS;AAAA,gBACR;AAAA,cACD;AAAA,YACD;AAAA,YACA;AAAA,YACA,WAAW,gDAAgD;AAAA,YAC3D,WAAW,uBAAuB;AAAA,UACnC;AAAA,UACA,WAAW;AAAA,UACX,mBAAmB;AAAA,QACpB;AACA;AAAA,MACD;AAAA,IACD;AAEA,WAAO;AAAA,MACN,MAAM,SAAS,yBAAyB,iBAAiB;AAAA,MACzD,MAAM,aAAa,SAAS,aAAa,iBAAiB,CAAC;AAAA,MAC3D;AAAA,MACA,SAAS;AAAA,MACT,SAAS;AAAA,MACT,MAAM;AAAA,IACP;AAAA,EACD;AAAA,EAEQ,qBAAqB,SAAwB;AACpD,QAAI,WAAW,KAAK,uBAAuB,OAAO;AACjD,WAAK,uBAAuB,MAAM;AAClC;AAAA,IACD;AAEA,QAAI,CAAC,WAAW,CAAC,KAAK,uBAAuB,OAAO;AACnD,YAAM,QAAQ,KAAK,gCAAgC;AACnD,WAAK,uBAAuB,QAAQ,KAAK,iBAAiB;AAAA,QACzD;AAAA,QACA,KAAK;AAAA,QACL,mBAAmB;AAAA,QACnB,OAAO,OAAO;AAAA,MACf;AAAA,IACD;AAAA,EACD;AAAA;AAGD;AA/oBa,0BAAN;AAAA,EASJ;AAAA,EACA;AAAA,EAEA;AAAA,EAEA;AAAA,EAEA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAEA;AAAA,EAEA;AAAA,GA9BU;AAipBb;AAAA,EACC,6BAA6B;AAAA,EAC7B;AAAA,EACA,eAAe;AAChB;AACA,SAAS;AAAA,EACR,oBAAoB;AACrB,EAAE;AAAA,EACD;AAAA,EACA,eAAe;AAChB;AAKA,MAAM,oCAAiE;AAAA,EArlCvE,OAqlCuE;AAAA;AAAA;AAAA,EACtE,aAAa,aAAmC;AAC/C,WAAO;AAAA,EACR;AAAA,EAEA,UAAU,OAA0C;AACnD,WAAO;AAAA,EACR;AAAA,EAEA,YACC,sBAC4B;AAC5B,WAAO,qBAAqB,eAAe,yBAAyB;AAAA,EACrE;AACD;AAEA,SAAS;AAAA,EACR,iBAAiB;AAClB,EAAE;AAAA,EACD,0BAA0B;AAAA,EAC1B;AACD;AAEA,SAAS;AAAA,EACR,iBAAiB;AAClB,EAAE;AAAA,EACD,qBAAqB;AAAA,IACpB;AAAA,IACA,qBAAqB;AAAA,IACrB,SAAS,wBAAwB,wBAAwB;AAAA,EAC1D;AAAA,EACA,CAAC,IAAI,eAAe,yBAAyB,CAAC;AAC/C;AAQA,MAAM,6BAA6B;AACnC,MAAM,sBAAsB,UAAU,sBAAsB,YAAY;AAExE;AAAA,EACC,cAAc,QAAQ;AAAA,IACrB,cAAc;AACb,YAAM;AAAA,QACL,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,cAAc,eAAe;AAAA,UAC5B,sBAAsB;AAAA,UACtB,eAAe;AAAA,YACd,UAAU,uBAAuB;AAAA,YACjC;AAAA,UACD;AAAA,QACD;AAAA,QACA,UAAU;AAAA,QACV,IAAI;AAAA,MACL,CAAC;AAAA,IACF;AAAA,IAEA,IAAI,UAA4B;AAC/B,eACE,IAAI,mBAAmB,EACvB,iBAAiB;AAAA,QACjB,YAAY;AAAA,QACZ,OAAO,QAAQ,2BAA2B;AAAA,MAC3C,CAAC;AAAA,IACH;AAAA,EACD;AACD;AAIA;AAAA,EACC,cAAc,QAAQ;AAAA,IACrB,cAAc;AACb,YAAM;AAAA,QACL,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,cAAc,eAAe;AAAA,UAC5B,sBAAsB;AAAA,UACtB,eAAe;AAAA,YACd,UAAU,uBAAuB;AAAA,YACjC;AAAA,UACD;AAAA,QACD;AAAA,QACA,UAAU;AAAA,QACV,IAAI;AAAA,MACL,CAAC;AAAA,IACF;AAAA,IAEA,IAAI,UAA4B;AAC/B,YAAM,gBAAgB,SAAS,IAAI,cAAc;AACjD,YAAM,uBAAuB,SAAS,IAAI,qBAAqB;AAE/D,YAAM,QAAQ,qBAAqB;AAAA,QAClC;AAAA,MACD;AAEA,oBAAc,WAAW,OAAO,EAAE,QAAQ,KAAK,CAAC;AAChD;AAAA,IACD;AAAA,EACD;AACD;AAKA,SAAS;AAAA,EACR,wBAAwB;AACzB,EAAE,sBAAsB;AAAA,EACvB,GAAG;AAAA,EACH,YAAY;AAAA,IACX,CAAC,uBAAuB,GAAG;AAAA,MAC1B,MAAM;AAAA,MACN,SAAS;AAAA,MACT,aAAa;AAAA,QACZ;AAAA,QACA;AAAA,MACD;AAAA,MACA,MAAM,CAAC,2BAA2B;AAAA,MAClC,OAAO,mBAAmB;AAAA,IAC3B;AAAA,IACA,CAAC,8BAA8B,GAAG;AAAA,MACjC,MAAM;AAAA,MACN,SAAS;AAAA,MACT,aAAa;AAAA,QACZ;AAAA,QACA;AAAA,MACD;AAAA,MACA,MAAM,CAAC,2BAA2B;AAAA,MAClC,OAAO,mBAAmB;AAAA,MAC1B,MAAM,CAAC,UAAU,QAAQ,OAAO;AAAA,MAChC,kBAAkB;AAAA,QACjB;AAAA,UACC;AAAA,UACA;AAAA,QACD;AAAA,QACA;AAAA,UACC;AAAA,UACA;AAAA,QACD;AAAA,QACA;AAAA,UACC;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,IACA,CAAC,sBAAsB,GAAG;AAAA,MACzB,MAAM;AAAA,MACN,SAAS;AAAA,MACT,aAAa;AAAA,QACZ;AAAA,QACA;AAAA,MACD;AAAA,MACA,MAAM,CAAC,2BAA2B;AAAA,MAClC,OAAO,mBAAmB;AAAA,MAC1B,MAAM,CAAC,UAAU,kBAAkB,OAAO;AAAA,MAC1C,kBAAkB;AAAA,QACjB;AAAA,UACC;AAAA,UACA;AAAA,QACD;AAAA,QACA;AAAA,UACC;AAAA,UACA;AAAA,QACD;AAAA,QACA;AAAA,UACC;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,IACA,CAAC,+BAA+B,GAAG;AAAA,MAClC,MAAM;AAAA,MACN,SAAS;AAAA,MACT,qBAAqB;AAAA,QACpB;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,MACA,MAAM,CAAC,2BAA2B;AAAA,MAClC,OAAO,mBAAmB;AAAA,MAC1B,MAAM,CAAC,UAAU,QAAQ,WAAW;AAAA,MACpC,kBAAkB;AAAA,QACjB;AAAA,UACC;AAAA,UACA;AAAA,QACD;AAAA,QACA;AAAA,UACC;AAAA,UACA;AAAA,QACD;AAAA,QACA;AAAA,UACC;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,IACA,CAAC,4BAA4B,GAAG;AAAA,MAC/B,MAAM;AAAA,MACN,SAAS;AAAA,MACT,qBAAqB;AAAA,QACpB;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,MACA,MAAM,CAAC,2BAA2B;AAAA,MAClC,OAAO,mBAAmB;AAAA,IAC3B;AAAA,EACD;AACD,CAAC;AAED,IAAM,sCAAN,cACS,WAET;AAAA,EACC,YAEkB,oBACmB,kBAEnB,yBAEA,iCAEA,iCAChB;AACD,UAAM;AATW;AACmB;AAEnB;AAEA;AAEA;AAIjB,SAAK,gCAAgC,0BAA0B;AAAA,MAC9D,MAAM;AACL,aAAK,6BAA6B;AAClC,aAAK;AAAA,UACJ,KAAK,gCAAgC,mBAAmB;AAAA,QACzD;AAEA,aAAK;AAAA,UACJ,KAAK,gCAAgC;AAAA,YACpC,CAAC,cAAc,KAAK,kBAAkB,SAAS;AAAA,UAChD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAh1CD,OAozCA;AAAA;AAAA;AAAA,EA8BS,+BAAqC;AAC5C,QAAI,CAAC,KAAK,gCAAgC,wBAAwB,GAAG;AACpE,YAAM,oBACL,KAAK,mBAAmB;AAgBzB,WAAK,iBAAiB,WAGpB,0BAA0B;AAAA,QAC3B,QAAQ,oBAAoB,QAAQ;AAAA,MACrC,CAAC;AACD;AAAA,IACD;AAgBA,SAAK,iBAAiB,WAGpB,8BAA8B;AAAA,MAC/B,qBACC,KAAK,gCAAgC,eAAe,EAAE;AAAA,IACxD,CAAC;AAAA,EACF;AAAA,EAEA,MAAc,kBAAkB,WAAmC;AAClE,QAAI,CAAC,KAAK,gCAAgC,wBAAwB,GAAG;AACpE;AAAA,IACD;AAsBA,SAAK,iBAAiB,WAGpB,8BAA8B;AAAA,MAC/B,aAAa,KAAK,wBAAwB,aAAa,EAAE;AAAA,MACzD;AAAA,IACD,CAAC;AAED,QAAI,WAAW;AA2Bd,YAAM,WAAW,wBAAC,WAA2B;AAC5C,YAAI,eAAe,QAAQ,MAAM;AAEjC,YAAI,QAAQ;AACZ,eAAO,QAAQ,YAAY,MAAM,gBAAgB,QAAQ,KAAK;AAC7D,yBAAe,QAAQ,YAAY;AACnC;AAAA,QACD;AAEA,eAAO;AAAA,MACR,GAViB;AAYjB,iBAAW,UAAU,KAAK,wBAAwB,aAAa,EAC7D,SAAS;AACV,cAAM,EAAE,SAAS,IAAI,IACpB,MAAM,KAAK,gCAAgC;AAAA,UAC1C,OAAO;AAAA,QACR;AACD,YAAI,CAAC,SAAS;AACb;AAAA,QACD;AAEA,cAAM,uBAAuB,SAAS,OAAO,IAAI,MAAM;AACvD,cAAM,qBAAqB,SAAS,IAAI,MAAM;AAC9C,cAAM,QAAQ,uBAAuB;AAErC,aAAK,iBAAiB,WAGpB,0CAA0C;AAAA,UAC3C;AAAA,UACA;AAAA,UACA;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD;AAAA,EACD;AACD;AArLM,sCAAN;AAAA,EAKG;AAAA,EAEA;AAAA,EACA;AAAA,EAEA;AAAA,EAEA;AAAA,GAZG;AAuLN,SAAS;AAAA,EACR,oBAAoB;AACrB,EAAE;AAAA,EACD;AAAA,EACA,eAAe;AAChB;",
  "names": ["e", "trusted"]
}
