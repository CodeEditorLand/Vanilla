{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/format/browser/formatModified.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isNonEmptyArray } from \"../../../../base/common/arrays.js\";\nimport { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport type { ICodeEditor } from \"../../../../editor/browser/editorBrowser.js\";\nimport {\n\tEditorAction,\n\ttype ServicesAccessor,\n\tregisterEditorAction,\n} from \"../../../../editor/browser/editorExtensions.js\";\nimport { Range } from \"../../../../editor/common/core/range.js\";\nimport { EditorContextKeys } from \"../../../../editor/common/editorContextKeys.js\";\nimport {\n\ttype ITextModel,\n\tshouldSynchronizeModel,\n} from \"../../../../editor/common/model.js\";\nimport { IEditorWorkerService } from \"../../../../editor/common/services/editorWorker.js\";\nimport { ITextModelService } from \"../../../../editor/common/services/resolverService.js\";\nimport {\n\tFormattingMode,\n\tformatDocumentRangesWithSelectedProvider,\n} from \"../../../../editor/contrib/format/browser/format.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { Progress } from \"../../../../platform/progress/common/progress.js\";\nimport { getOriginalResource } from \"../../scm/browser/dirtydiffDecorator.js\";\nimport { IQuickDiffService } from \"../../scm/common/quickDiff.js\";\n\nregisterEditorAction(\n\tclass FormatModifiedAction extends EditorAction {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"editor.action.formatChanges\",\n\t\t\t\tlabel: nls.localize(\"formatChanges\", \"Format Modified Lines\"),\n\t\t\t\talias: \"Format Modified Lines\",\n\t\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\t\tEditorContextKeys.writable,\n\t\t\t\t\tEditorContextKeys.hasDocumentSelectionFormattingProvider,\n\t\t\t\t),\n\t\t\t});\n\t\t}\n\n\t\tasync run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\teditor: ICodeEditor,\n\t\t): Promise<void> {\n\t\t\tconst instaService = accessor.get(IInstantiationService);\n\n\t\t\tif (!editor.hasModel()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst ranges = await instaService.invokeFunction(\n\t\t\t\tgetModifiedRanges,\n\t\t\t\teditor.getModel(),\n\t\t\t);\n\t\t\tif (isNonEmptyArray(ranges)) {\n\t\t\t\treturn instaService.invokeFunction(\n\t\t\t\t\tformatDocumentRangesWithSelectedProvider,\n\t\t\t\t\teditor,\n\t\t\t\t\tranges,\n\t\t\t\t\tFormattingMode.Explicit,\n\t\t\t\t\tProgress.None,\n\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\ttrue,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n);\n\nexport async function getModifiedRanges(\n\taccessor: ServicesAccessor,\n\tmodified: ITextModel,\n): Promise<Range[] | undefined | null> {\n\tconst quickDiffService = accessor.get(IQuickDiffService);\n\tconst workerService = accessor.get(IEditorWorkerService);\n\tconst modelService = accessor.get(ITextModelService);\n\n\tconst original = await getOriginalResource(\n\t\tquickDiffService,\n\t\tmodified.uri,\n\t\tmodified.getLanguageId(),\n\t\tshouldSynchronizeModel(modified),\n\t);\n\tif (!original) {\n\t\treturn null; // let undefined signify no changes, null represents no source control (there's probably a better way, but I can't think of one rn)\n\t}\n\n\tconst ranges: Range[] = [];\n\tconst ref = await modelService.createModelReference(original);\n\ttry {\n\t\tif (!workerService.canComputeDirtyDiff(original, modified.uri)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst changes = await workerService.computeDirtyDiff(\n\t\t\toriginal,\n\t\t\tmodified.uri,\n\t\t\tfalse,\n\t\t);\n\t\tif (!isNonEmptyArray(changes)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tfor (const change of changes) {\n\t\t\tranges.push(\n\t\t\t\tmodified.validateRange(\n\t\t\t\t\tnew Range(\n\t\t\t\t\t\tchange.modifiedStartLineNumber,\n\t\t\t\t\t\t1,\n\t\t\t\t\t\tchange.modifiedEndLineNumber ||\n\t\t\t\t\t\t\tchange.modifiedStartLineNumber /*endLineNumber is 0 when things got deleted*/,\n\t\t\t\t\t\tNumber.MAX_SAFE_INTEGER,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t} finally {\n\t\tref.dispose();\n\t}\n\n\treturn ranges;\n}\n"],
  "mappings": ";;AAKA,SAAS,uBAAuB;AAChC,SAAS,yBAAyB;AAElC;AAAA,EACC;AAAA,EAEA;AAAA,OACM;AACP,SAAS,aAAa;AACtB,SAAS,yBAAyB;AAClC;AAAA,EAEC;AAAA,OACM;AACP,SAAS,4BAA4B;AACrC,SAAS,yBAAyB;AAClC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,YAAY,SAAS;AACrB,SAAS,sBAAsB;AAC/B,SAAS,6BAA6B;AACtC,SAAS,gBAAgB;AACzB,SAAS,2BAA2B;AACpC,SAAS,yBAAyB;AAElC;AAAA,EACC,MAAM,6BAA6B,aAAa;AAAA,IAjCjD,OAiCiD;AAAA;AAAA;AAAA,IAC/C,cAAc;AACb,YAAM;AAAA,QACL,IAAI;AAAA,QACJ,OAAO,IAAI,SAAS,iBAAiB,uBAAuB;AAAA,QAC5D,OAAO;AAAA,QACP,cAAc,eAAe;AAAA,UAC5B,kBAAkB;AAAA,UAClB,kBAAkB;AAAA,QACnB;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,MAAM,IACL,UACA,QACgB;AAChB,YAAM,eAAe,SAAS,IAAI,qBAAqB;AAEvD,UAAI,CAAC,OAAO,SAAS,GAAG;AACvB;AAAA,MACD;AAEA,YAAM,SAAS,MAAM,aAAa;AAAA,QACjC;AAAA,QACA,OAAO,SAAS;AAAA,MACjB;AACA,UAAI,gBAAgB,MAAM,GAAG;AAC5B,eAAO,aAAa;AAAA,UACnB;AAAA,UACA;AAAA,UACA;AAAA,UACA,eAAe;AAAA,UACf,SAAS;AAAA,UACT,kBAAkB;AAAA,UAClB;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAEA,eAAsB,kBACrB,UACA,UACsC;AACtC,QAAM,mBAAmB,SAAS,IAAI,iBAAiB;AACvD,QAAM,gBAAgB,SAAS,IAAI,oBAAoB;AACvD,QAAM,eAAe,SAAS,IAAI,iBAAiB;AAEnD,QAAM,WAAW,MAAM;AAAA,IACtB;AAAA,IACA,SAAS;AAAA,IACT,SAAS,cAAc;AAAA,IACvB,uBAAuB,QAAQ;AAAA,EAChC;AACA,MAAI,CAAC,UAAU;AACd,WAAO;AAAA,EACR;AAEA,QAAM,SAAkB,CAAC;AACzB,QAAM,MAAM,MAAM,aAAa,qBAAqB,QAAQ;AAC5D,MAAI;AACH,QAAI,CAAC,cAAc,oBAAoB,UAAU,SAAS,GAAG,GAAG;AAC/D,aAAO;AAAA,IACR;AACA,UAAM,UAAU,MAAM,cAAc;AAAA,MACnC;AAAA,MACA,SAAS;AAAA,MACT;AAAA,IACD;AACA,QAAI,CAAC,gBAAgB,OAAO,GAAG;AAC9B,aAAO;AAAA,IACR;AACA,eAAW,UAAU,SAAS;AAC7B,aAAO;AAAA,QACN,SAAS;AAAA,UACR,IAAI;AAAA,YACH,OAAO;AAAA,YACP;AAAA,YACA,OAAO,yBACN,OAAO;AAAA,YACR,OAAO;AAAA,UACR;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD,UAAE;AACD,QAAI,QAAQ;AAAA,EACb;AAEA,SAAO;AACR;AAlDsB;",
  "names": []
}
