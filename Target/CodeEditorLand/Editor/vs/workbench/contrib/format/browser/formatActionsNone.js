import{KeyCode as l,KeyMod as o}from"../../../../base/common/keyCodes.js";import"../../../../editor/browser/editorBrowser.js";import{EditorAction as v,registerEditorAction as S}from"../../../../editor/browser/editorExtensions.js";import{EditorContextKeys as i}from"../../../../editor/common/editorContextKeys.js";import*as t from"../../../../nls.js";import{ContextKeyExpr as y}from"../../../../platform/contextkey/common/contextkey.js";import{KeybindingWeight as h}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{ICommandService as C}from"../../../../platform/commands/common/commands.js";import{INotificationService as b}from"../../../../platform/notification/common/notification.js";import{IExtensionsWorkbenchService as x}from"../../extensions/common/extensions.js";import{IDialogService as F}from"../../../../platform/dialogs/common/dialogs.js";import{ILanguageFeaturesService as E}from"../../../../editor/common/services/languageFeatures.js";S(class extends v{constructor(){super({id:"editor.action.formatDocument.none",label:t.localize("formatDocument.label.multiple","Format Document"),alias:"Format Document",precondition:y.and(i.writable,i.hasDocumentFormattingProvider.toNegated()),kbOpts:{kbExpr:i.editorTextFocus,primary:o.Shift|o.Alt|l.KeyF,linux:{primary:o.CtrlCmd|o.Shift|l.KeyI},weight:h.EditorContrib}})}async run(e,n){if(!n.hasModel())return;const m=e.get(C),s=e.get(x),d=e.get(b),f=e.get(F),g=e.get(E),r=n.getModel(),a=g.documentFormattingEditProvider.all(r).length;if(a>1)return m.executeCommand("editor.action.formatDocument.multiple");if(a===1)return m.executeCommand("editor.action.formatDocument");if(r.isTooLargeForSyncing())d.warn(t.localize("too.large","This file cannot be formatted because it is too large"));else{const c=r.getLanguageId(),u=t.localize("no.provider","There is no formatter for '{0}' files installed.",c),{confirmed:p}=await f.confirm({message:u,primaryButton:t.localize({key:"install.formatter",comment:["&& denotes a mnemonic"]},"&&Install Formatter...")});p&&s.openSearch(`category:formatters ${c}`)}}});
