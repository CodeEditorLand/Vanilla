var Q=Object.defineProperty;var K=Object.getOwnPropertyDescriptor;var k=(u,s,t,e)=>{for(var i=e>1?void 0:e?K(s,t):s,r=u.length-1,n;r>=0;r--)(n=u[r])&&(i=(e?n(s,t,i):n(i))||i);return e&&i&&Q(s,t,i),i},m=(u,s)=>(t,e)=>s(t,e,u);import{getCodeEditor as V}from"../../../../editor/browser/editorBrowser.js";import{EditorAction as F,registerEditorAction as E}from"../../../../editor/browser/editorExtensions.js";import{EditorContextKeys as I}from"../../../../editor/common/editorContextKeys.js";import"../../../../editor/common/languages.js";import*as d from"../../../../nls.js";import{ContextKeyExpr as x}from"../../../../platform/contextkey/common/contextkey.js";import{IQuickInputService as P}from"../../../../platform/quickinput/common/quickInput.js";import{CancellationToken as C,CancellationTokenSource as q}from"../../../../base/common/cancellation.js";import{IInstantiationService as _}from"../../../../platform/instantiation/common/instantiation.js";import{formatDocumentRangesWithProvider as O,formatDocumentWithProvider as H,getRealAndSyntheticDocumentFormattersOrdered as L,FormattingConflicts as B,FormattingMode as N,FormattingKind as T}from"../../../../editor/contrib/format/browser/format.js";import{Range as $}from"../../../../editor/common/core/range.js";import{ITelemetryService as w}from"../../../../platform/telemetry/common/telemetry.js";import{ExtensionIdentifier as y}from"../../../../platform/extensions/common/extensions.js";import{Registry as D}from"../../../../platform/registry/common/platform.js";import{Extensions as U}from"../../../../platform/configuration/common/configurationRegistry.js";import{Extensions as j}from"../../../common/contributions.js";import{LifecyclePhase as G}from"../../../services/lifecycle/common/lifecycle.js";import{IExtensionService as J,toExtension as X}from"../../../services/extensions/common/extensions.js";import{Disposable as Y,DisposableStore as Z,toDisposable as ee}from"../../../../base/common/lifecycle.js";import{IConfigurationService as M}from"../../../../platform/configuration/common/configuration.js";import"../../../../editor/common/model.js";import{INotificationService as te,NotificationPriority as ie,Severity as z}from"../../../../platform/notification/common/notification.js";import{ILanguageService as R}from"../../../../editor/common/languages/language.js";import{IWorkbenchExtensionEnablementService as ne}from"../../../services/extensionManagement/common/extensionManagement.js";import{editorConfigurationBaseNode as oe}from"../../../../editor/common/config/editorConfigurationSchema.js";import{IDialogService as re}from"../../../../platform/dialogs/common/dialogs.js";import{ILanguageFeaturesService as b}from"../../../../editor/common/services/languageFeatures.js";import{ILanguageStatusService as ae}from"../../../services/languageStatus/common/languageStatusService.js";import{IEditorService as se}from"../../../services/editor/common/editorService.js";import{CommandsRegistry as ce}from"../../../../platform/commands/common/commands.js";import{generateUuid as de}from"../../../../base/common/uuid.js";let a=class extends Y{constructor(t,e,i,r,n,o,l,c,g,v){super();this._extensionService=t;this._extensionEnablementService=e;this._configService=i;this._notificationService=r;this._dialogService=n;this._quickInputService=o;this._languageService=l;this._languageFeaturesService=c;this._languageStatusService=g;this._editorService=v;this._store.add(this._extensionService.onDidChangeExtensions(this._updateConfigValues,this)),this._store.add(B.setFormatterSelector((f,p,h,S)=>this._selectFormatter(f,p,h,S))),this._store.add(v.onDidActiveEditorChange(this._updateStatus,this)),this._store.add(c.documentFormattingEditProvider.onDidChange(this._updateStatus,this)),this._store.add(c.documentRangeFormattingEditProvider.onDidChange(this._updateStatus,this)),this._store.add(i.onDidChangeConfiguration(f=>f.affectsConfiguration(a.configName)&&this._updateStatus())),this._updateConfigValues()}static configName="editor.defaultFormatter";static extensionIds=[];static extensionItemLabels=[];static extensionDescriptions=[];_languageStatusStore=this._store.add(new Z);async _updateConfigValues(){await this._extensionService.whenInstalledExtensionsRegistered();let t=[...this._extensionService.extensions];t=t.sort((e,i)=>{const r=e.categories?.find(o=>o==="Formatters"||o==="Programming Languages"),n=i.categories?.find(o=>o==="Formatters"||o==="Programming Languages");return r&&!n?-1:!r&&n?1:e.name.localeCompare(i.name)}),a.extensionIds.length=0,a.extensionItemLabels.length=0,a.extensionDescriptions.length=0,a.extensionIds.push(null),a.extensionItemLabels.push(d.localize("null","None")),a.extensionDescriptions.push(d.localize("nullFormatterDescription","None"));for(const e of t)(e.main||e.browser)&&(a.extensionIds.push(e.identifier.value),a.extensionItemLabels.push(e.displayName??""),a.extensionDescriptions.push(e.description??""))}static _maybeQuotes(t){return t.match(/\s/)?`'${t}'`:t}async _analyzeFormatter(t,e,i){const r=this._configService.getValue(a.configName,{resource:i.uri,overrideIdentifier:i.getLanguageId()});if(r){const l=e.find(g=>y.equals(g.extensionId,r));if(l)return l;const c=await this._extensionService.getExtension(r);if(c&&this._extensionEnablementService.isEnabled(X(c))){const g=this._languageService.getLanguageName(i.getLanguageId())||i.getLanguageId();return t===T.File?d.localize("miss.1","Extension '{0}' is configured as formatter but it cannot format '{1}'-files",c.displayName||c.name,g):d.localize("miss.2","Extension '{0}' is configured as formatter but it can only format '{1}'-files as a whole, not selections or parts of it.",c.displayName||c.name,g)}}else if(e.length===1)return e[0];const n=this._languageService.getLanguageName(i.getLanguageId())||i.getLanguageId();return r?d.localize("config.bad","Extension '{0}' is configured as formatter but not available. Select a different default formatter to continue.",r):d.localize("config.needed","There are multiple formatters for '{0}' files. One of them should be configured as default formatter.",a._maybeQuotes(n))}async _selectFormatter(t,e,i,r){const n=await this._analyzeFormatter(r,t,e);if(typeof n!="string")return n;if(i!==N.Silent){const{confirmed:o}=await this._dialogService.confirm({message:d.localize("miss","Configure Default Formatter"),detail:n,primaryButton:d.localize({key:"do.config",comment:["&& denotes a mnemonic"]},"&&Configure...")});if(o)return this._pickAndPersistDefaultFormatter(t,e)}else this._notificationService.prompt(z.Info,n,[{label:d.localize("do.config.notification","Configure..."),run:()=>this._pickAndPersistDefaultFormatter(t,e)}],{priority:ie.SILENT})}async _pickAndPersistDefaultFormatter(t,e){const i=t.map((o,l)=>({index:l,label:o.displayName||(o.extensionId?o.extensionId.value:"?"),description:o.extensionId&&o.extensionId.value})),r=this._languageService.getLanguageName(e.getLanguageId())||e.getLanguageId(),n=await this._quickInputService.pick(i,{placeHolder:d.localize("select","Select a default formatter for '{0}' files",a._maybeQuotes(r))});if(!(!n||!t[n.index].extensionId))return this._configService.updateValue(a.configName,t[n.index].extensionId.value,{resource:e.uri,overrideIdentifier:e.getLanguageId()}),t[n.index]}_updateStatus(){this._languageStatusStore.clear();const t=V(this._editorService.activeTextEditorControl);if(!t||!t.hasModel())return;const e=t.getModel(),i=L(this._languageFeaturesService.documentFormattingEditProvider,this._languageFeaturesService.documentRangeFormattingEditProvider,e);if(i.length===0)return;const r=new q;this._languageStatusStore.add(ee(()=>r.dispose(!0))),this._analyzeFormatter(T.File,i,e).then(n=>{if(r.token.isCancellationRequested||typeof n!="string")return;const o={id:`formatter/configure/dfl/${de()}`,title:d.localize("do.config.command","Configure...")};this._languageStatusStore.add(ce.registerCommand(o.id,()=>this._pickAndPersistDefaultFormatter(i,e))),this._languageStatusStore.add(this._languageStatusService.addStatus({id:"formatter.conflict",name:d.localize("summary","Formatter Conflicts"),selector:{language:e.getLanguageId(),pattern:e.uri.fsPath},severity:z.Error,label:d.localize("formatter","Formatting"),detail:n,busy:!1,source:"",command:o,accessibilityInfo:void 0}))})}};a=k([m(0,J),m(1,ne),m(2,M),m(3,te),m(4,re),m(5,P),m(6,R),m(7,b),m(8,ae),m(9,se)],a),D.as(j.Workbench).registerWorkbenchContribution(a,G.Restored),D.as(U.Configuration).registerConfiguration({...oe,properties:{[a.configName]:{description:d.localize("formatter.default","Defines a default formatter which takes precedence over all other formatter settings. Must be the identifier of an extension contributing a formatter."),type:["string","null"],default:null,enum:a.extensionIds,enumItemLabels:a.extensionItemLabels,markdownEnumDescriptions:a.extensionDescriptions}}});function A(u,s,t,e){function i(r){return r.extensionId?y.toKey(r.extensionId):"unknown"}u.publicLog2("formatterpick",{mode:s,extensions:t.map(i),pick:e?i(e):"none"})}async function W(u,s,t){const e=u.get(P),i=u.get(M),r=u.get(R),n={resource:s.uri,overrideIdentifier:s.getLanguageId()},o=i.getValue(a.configName,n);let l;const c=t.map((f,p)=>{const h=y.equals(f.extensionId,o),S={index:p,label:f.displayName||"",description:h?d.localize("def","(default)"):void 0};return h&&(l=S),S}),g={label:d.localize("config","Configure Default Formatter...")},v=await e.pick([...c,{type:"separator"},g],{placeHolder:d.localize("format.placeHolder","Select a formatter"),activeItem:l});if(v)if(v===g){const f=r.getLanguageName(s.getLanguageId())||s.getLanguageId(),p=await e.pick(c,{placeHolder:d.localize("select","Select a default formatter for '{0}' files",a._maybeQuotes(f))});p&&t[p.index].extensionId&&i.updateValue(a.configName,t[p.index].extensionId.value,n);return}else return v.index;else return}E(class extends F{constructor(){super({id:"editor.action.formatDocument.multiple",label:d.localize("formatDocument.label.multiple","Format Document With..."),alias:"Format Document...",precondition:x.and(I.writable,I.hasMultipleDocumentFormattingProvider),contextMenuOpts:{group:"1_modification",order:1.3}})}async run(s,t,e){if(!t.hasModel())return;const i=s.get(_),r=s.get(w),n=s.get(b),o=t.getModel(),l=L(n.documentFormattingEditProvider,n.documentRangeFormattingEditProvider,o),c=await i.invokeFunction(W,o,l);typeof c=="number"&&await i.invokeFunction(H,l[c],t,N.Explicit,C.None),A(r,"document",l,typeof c=="number"&&l[c]||void 0)}}),E(class extends F{constructor(){super({id:"editor.action.formatSelection.multiple",label:d.localize("formatSelection.label.multiple","Format Selection With..."),alias:"Format Code...",precondition:x.and(x.and(I.writable),I.hasMultipleDocumentSelectionFormattingProvider),contextMenuOpts:{when:x.and(I.hasNonEmptySelection),group:"1_modification",order:1.31}})}async run(s,t){if(!t.hasModel())return;const e=s.get(_),i=s.get(b),r=s.get(w),n=t.getModel();let o=t.getSelection();o.isEmpty()&&(o=new $(o.startLineNumber,1,o.startLineNumber,n.getLineMaxColumn(o.startLineNumber)));const l=i.documentRangeFormattingEditProvider.ordered(n),c=await e.invokeFunction(W,n,l);typeof c=="number"&&await e.invokeFunction(O,l[c],t,o,C.None,!0),A(r,"range",l,typeof c=="number"&&l[c]||void 0)}});export{a as DefaultFormatter};
