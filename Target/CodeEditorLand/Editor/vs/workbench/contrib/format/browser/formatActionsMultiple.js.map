{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/format/browser/formatActionsMultiple.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tCancellationToken,\n\tCancellationTokenSource,\n} from \"../../../../base/common/cancellation.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { generateUuid } from \"../../../../base/common/uuid.js\";\nimport {\n\ttype ICodeEditor,\n\tgetCodeEditor,\n} from \"../../../../editor/browser/editorBrowser.js\";\nimport {\n\tEditorAction,\n\tregisterEditorAction,\n} from \"../../../../editor/browser/editorExtensions.js\";\nimport { editorConfigurationBaseNode } from \"../../../../editor/common/config/editorConfigurationSchema.js\";\nimport { Range } from \"../../../../editor/common/core/range.js\";\nimport { EditorContextKeys } from \"../../../../editor/common/editorContextKeys.js\";\nimport type {\n\tDocumentFormattingEditProvider,\n\tDocumentRangeFormattingEditProvider,\n} from \"../../../../editor/common/languages.js\";\nimport { ILanguageService } from \"../../../../editor/common/languages/language.js\";\nimport type { ITextModel } from \"../../../../editor/common/model.js\";\nimport { ILanguageFeaturesService } from \"../../../../editor/common/services/languageFeatures.js\";\nimport {\n\tFormattingConflicts,\n\tFormattingKind,\n\tFormattingMode,\n\tformatDocumentRangesWithProvider,\n\tformatDocumentWithProvider,\n\tgetRealAndSyntheticDocumentFormattersOrdered,\n} from \"../../../../editor/contrib/format/browser/format.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { CommandsRegistry } from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tExtensions as ConfigurationExtensions,\n\ttype IConfigurationRegistry,\n} from \"../../../../platform/configuration/common/configurationRegistry.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IDialogService } from \"../../../../platform/dialogs/common/dialogs.js\";\nimport { ExtensionIdentifier } from \"../../../../platform/extensions/common/extensions.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tINotificationService,\n\tNotificationPriority,\n\tSeverity,\n} from \"../../../../platform/notification/common/notification.js\";\nimport {\n\tIQuickInputService,\n\ttype IQuickPickItem,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport {\n\ttype IWorkbenchContribution,\n\ttype IWorkbenchContributionsRegistry,\n\tExtensions as WorkbenchExtensions,\n} from \"../../../common/contributions.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { IWorkbenchExtensionEnablementService } from \"../../../services/extensionManagement/common/extensionManagement.js\";\nimport {\n\tIExtensionService,\n\ttoExtension,\n} from \"../../../services/extensions/common/extensions.js\";\nimport { ILanguageStatusService } from \"../../../services/languageStatus/common/languageStatusService.js\";\nimport { LifecyclePhase } from \"../../../services/lifecycle/common/lifecycle.js\";\n\ntype FormattingEditProvider =\n\t| DocumentFormattingEditProvider\n\t| DocumentRangeFormattingEditProvider;\n\nexport class DefaultFormatter\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tstatic readonly configName = \"editor.defaultFormatter\";\n\n\tstatic extensionIds: (string | null)[] = [];\n\tstatic extensionItemLabels: string[] = [];\n\tstatic extensionDescriptions: string[] = [];\n\n\tprivate readonly _languageStatusStore = this._store.add(\n\t\tnew DisposableStore(),\n\t);\n\n\tconstructor(\n\t\t@IExtensionService private readonly _extensionService: IExtensionService,\n\t\t@IWorkbenchExtensionEnablementService private readonly _extensionEnablementService: IWorkbenchExtensionEnablementService,\n\t\t@IConfigurationService private readonly _configService: IConfigurationService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@IDialogService private readonly _dialogService: IDialogService,\n\t\t@IQuickInputService private readonly _quickInputService: IQuickInputService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@ILanguageStatusService private readonly _languageStatusService: ILanguageStatusService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t) {\n\t\tsuper();\n\t\tthis._store.add(this._extensionService.onDidChangeExtensions(this._updateConfigValues, this));\n\t\tthis._store.add(FormattingConflicts.setFormatterSelector((formatter, document, mode, kind) => this._selectFormatter(formatter, document, mode, kind)));\n\t\tthis._store.add(_editorService.onDidActiveEditorChange(this._updateStatus, this));\n\t\tthis._store.add(_languageFeaturesService.documentFormattingEditProvider.onDidChange(this._updateStatus, this));\n\t\tthis._store.add(_languageFeaturesService.documentRangeFormattingEditProvider.onDidChange(this._updateStatus, this));\n\t\tthis._store.add(_configService.onDidChangeConfiguration(e => e.affectsConfiguration(DefaultFormatter.configName) && this._updateStatus()));\n\t\tthis._updateConfigValues();\n\t}\n\n\tprivate async _updateConfigValues(): Promise<void> {\n\t\tawait this._extensionService.whenInstalledExtensionsRegistered();\n\t\tlet extensions = [...this._extensionService.extensions];\n\n\t\textensions = extensions.sort((a, b) => {\n\t\t\tconst boostA = a.categories?.find(\n\t\t\t\t(cat) =>\n\t\t\t\t\tcat === \"Formatters\" || cat === \"Programming Languages\",\n\t\t\t);\n\t\t\tconst boostB = b.categories?.find(\n\t\t\t\t(cat) =>\n\t\t\t\t\tcat === \"Formatters\" || cat === \"Programming Languages\",\n\t\t\t);\n\n\t\t\tif (boostA && !boostB) {\n\t\t\t\treturn -1;\n\t\t\t} else if (!boostA && boostB) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn a.name.localeCompare(b.name);\n\t\t\t}\n\t\t});\n\n\t\tDefaultFormatter.extensionIds.length = 0;\n\t\tDefaultFormatter.extensionItemLabels.length = 0;\n\t\tDefaultFormatter.extensionDescriptions.length = 0;\n\n\t\tDefaultFormatter.extensionIds.push(null);\n\t\tDefaultFormatter.extensionItemLabels.push(nls.localize(\"null\", \"None\"));\n\t\tDefaultFormatter.extensionDescriptions.push(\n\t\t\tnls.localize(\"nullFormatterDescription\", \"None\"),\n\t\t);\n\n\t\tfor (const extension of extensions) {\n\t\t\tif (extension.main || extension.browser) {\n\t\t\t\tDefaultFormatter.extensionIds.push(extension.identifier.value);\n\t\t\t\tDefaultFormatter.extensionItemLabels.push(\n\t\t\t\t\textension.displayName ?? \"\",\n\t\t\t\t);\n\t\t\t\tDefaultFormatter.extensionDescriptions.push(\n\t\t\t\t\textension.description ?? \"\",\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic _maybeQuotes(s: string): string {\n\t\treturn s.match(/\\s/) ? `'${s}'` : s;\n\t}\n\n\tprivate async _analyzeFormatter<T extends FormattingEditProvider>(\n\t\tkind: FormattingKind,\n\t\tformatter: T[],\n\t\tdocument: ITextModel,\n\t): Promise<T | string> {\n\t\tconst defaultFormatterId = this._configService.getValue<string>(\n\t\t\tDefaultFormatter.configName,\n\t\t\t{\n\t\t\t\tresource: document.uri,\n\t\t\t\toverrideIdentifier: document.getLanguageId(),\n\t\t\t},\n\t\t);\n\n\t\tif (defaultFormatterId) {\n\t\t\t// good -> formatter configured\n\t\t\tconst defaultFormatter = formatter.find((formatter) =>\n\t\t\t\tExtensionIdentifier.equals(\n\t\t\t\t\tformatter.extensionId,\n\t\t\t\t\tdefaultFormatterId,\n\t\t\t\t),\n\t\t\t);\n\t\t\tif (defaultFormatter) {\n\t\t\t\t// formatter available\n\t\t\t\treturn defaultFormatter;\n\t\t\t}\n\n\t\t\t// bad -> formatter gone\n\t\t\tconst extension =\n\t\t\t\tawait this._extensionService.getExtension(defaultFormatterId);\n\t\t\tif (\n\t\t\t\textension &&\n\t\t\t\tthis._extensionEnablementService.isEnabled(\n\t\t\t\t\ttoExtension(extension),\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// formatter does not target this file\n\t\t\t\tconst langName =\n\t\t\t\t\tthis._languageService.getLanguageName(\n\t\t\t\t\t\tdocument.getLanguageId(),\n\t\t\t\t\t) || document.getLanguageId();\n\t\t\t\tconst detail =\n\t\t\t\t\tkind === FormattingKind.File\n\t\t\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\t\t\"miss.1\",\n\t\t\t\t\t\t\t\t\"Extension '{0}' is configured as formatter but it cannot format '{1}'-files\",\n\t\t\t\t\t\t\t\textension.displayName || extension.name,\n\t\t\t\t\t\t\t\tlangName,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\t\t\"miss.2\",\n\t\t\t\t\t\t\t\t\"Extension '{0}' is configured as formatter but it can only format '{1}'-files as a whole, not selections or parts of it.\",\n\t\t\t\t\t\t\t\textension.displayName || extension.name,\n\t\t\t\t\t\t\t\tlangName,\n\t\t\t\t\t\t\t);\n\t\t\t\treturn detail;\n\t\t\t}\n\t\t} else if (formatter.length === 1) {\n\t\t\t// ok -> nothing configured but only one formatter available\n\t\t\treturn formatter[0];\n\t\t}\n\n\t\tconst langName =\n\t\t\tthis._languageService.getLanguageName(document.getLanguageId()) ||\n\t\t\tdocument.getLanguageId();\n\t\tconst message = defaultFormatterId\n\t\t\t? nls.localize(\n\t\t\t\t\t\"config.bad\",\n\t\t\t\t\t\"Extension '{0}' is configured as formatter but not available. Select a different default formatter to continue.\",\n\t\t\t\t\tdefaultFormatterId,\n\t\t\t\t)\n\t\t\t: nls.localize(\n\t\t\t\t\t\"config.needed\",\n\t\t\t\t\t\"There are multiple formatters for '{0}' files. One of them should be configured as default formatter.\",\n\t\t\t\t\tDefaultFormatter._maybeQuotes(langName),\n\t\t\t\t);\n\n\t\treturn message;\n\t}\n\n\tprivate async _selectFormatter<T extends FormattingEditProvider>(\n\t\tformatter: T[],\n\t\tdocument: ITextModel,\n\t\tmode: FormattingMode,\n\t\tkind: FormattingKind,\n\t): Promise<T | undefined> {\n\t\tconst formatterOrMessage = await this._analyzeFormatter(\n\t\t\tkind,\n\t\t\tformatter,\n\t\t\tdocument,\n\t\t);\n\t\tif (typeof formatterOrMessage !== \"string\") {\n\t\t\treturn formatterOrMessage;\n\t\t}\n\n\t\tif (mode !== FormattingMode.Silent) {\n\t\t\t// running from a user action -> show modal dialog so that users configure\n\t\t\t// a default formatter\n\t\t\tconst { confirmed } = await this._dialogService.confirm({\n\t\t\t\tmessage: nls.localize(\"miss\", \"Configure Default Formatter\"),\n\t\t\t\tdetail: formatterOrMessage,\n\t\t\t\tprimaryButton: nls.localize(\n\t\t\t\t\t{ key: \"do.config\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\"&&Configure...\",\n\t\t\t\t),\n\t\t\t});\n\t\t\tif (confirmed) {\n\t\t\t\treturn this._pickAndPersistDefaultFormatter(\n\t\t\t\t\tformatter,\n\t\t\t\t\tdocument,\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\t// no user action -> show a silent notification and proceed\n\t\t\tthis._notificationService.prompt(\n\t\t\t\tSeverity.Info,\n\t\t\t\tformatterOrMessage,\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: nls.localize(\n\t\t\t\t\t\t\t\"do.config.notification\",\n\t\t\t\t\t\t\t\"Configure...\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\trun: () =>\n\t\t\t\t\t\t\tthis._pickAndPersistDefaultFormatter(\n\t\t\t\t\t\t\t\tformatter,\n\t\t\t\t\t\t\t\tdocument,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t{ priority: NotificationPriority.SILENT },\n\t\t\t);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async _pickAndPersistDefaultFormatter<\n\t\tT extends FormattingEditProvider,\n\t>(formatter: T[], document: ITextModel): Promise<T | undefined> {\n\t\tconst picks = formatter.map((formatter, index): IIndexedPick => {\n\t\t\treturn {\n\t\t\t\tindex,\n\t\t\t\tlabel:\n\t\t\t\t\tformatter.displayName ||\n\t\t\t\t\t(formatter.extensionId ? formatter.extensionId.value : \"?\"),\n\t\t\t\tdescription:\n\t\t\t\t\tformatter.extensionId && formatter.extensionId.value,\n\t\t\t};\n\t\t});\n\t\tconst langName =\n\t\t\tthis._languageService.getLanguageName(document.getLanguageId()) ||\n\t\t\tdocument.getLanguageId();\n\t\tconst pick = await this._quickInputService.pick(picks, {\n\t\t\tplaceHolder: nls.localize(\n\t\t\t\t\"select\",\n\t\t\t\t\"Select a default formatter for '{0}' files\",\n\t\t\t\tDefaultFormatter._maybeQuotes(langName),\n\t\t\t),\n\t\t});\n\t\tif (!pick || !formatter[pick.index].extensionId) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._configService.updateValue(\n\t\t\tDefaultFormatter.configName,\n\t\t\tformatter[pick.index].extensionId!.value,\n\t\t\t{\n\t\t\t\tresource: document.uri,\n\t\t\t\toverrideIdentifier: document.getLanguageId(),\n\t\t\t},\n\t\t);\n\t\treturn formatter[pick.index];\n\t}\n\n\t// --- status item\n\n\tprivate _updateStatus() {\n\t\tthis._languageStatusStore.clear();\n\n\t\tconst editor = getCodeEditor(\n\t\t\tthis._editorService.activeTextEditorControl,\n\t\t);\n\t\tif (!editor || !editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst document = editor.getModel();\n\t\tconst formatter = getRealAndSyntheticDocumentFormattersOrdered(\n\t\t\tthis._languageFeaturesService.documentFormattingEditProvider,\n\t\t\tthis._languageFeaturesService.documentRangeFormattingEditProvider,\n\t\t\tdocument,\n\t\t);\n\n\t\tif (formatter.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst cts = new CancellationTokenSource();\n\t\tthis._languageStatusStore.add(toDisposable(() => cts.dispose(true)));\n\n\t\tthis._analyzeFormatter(FormattingKind.File, formatter, document).then(\n\t\t\t(result) => {\n\t\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (typeof result !== \"string\") {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst command = {\n\t\t\t\t\tid: `formatter/configure/dfl/${generateUuid()}`,\n\t\t\t\t\ttitle: nls.localize(\"do.config.command\", \"Configure...\"),\n\t\t\t\t};\n\t\t\t\tthis._languageStatusStore.add(\n\t\t\t\t\tCommandsRegistry.registerCommand(command.id, () =>\n\t\t\t\t\t\tthis._pickAndPersistDefaultFormatter(\n\t\t\t\t\t\t\tformatter,\n\t\t\t\t\t\t\tdocument,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tthis._languageStatusStore.add(\n\t\t\t\t\tthis._languageStatusService.addStatus({\n\t\t\t\t\t\tid: \"formatter.conflict\",\n\t\t\t\t\t\tname: nls.localize(\"summary\", \"Formatter Conflicts\"),\n\t\t\t\t\t\tselector: {\n\t\t\t\t\t\t\tlanguage: document.getLanguageId(),\n\t\t\t\t\t\t\tpattern: document.uri.fsPath,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tseverity: Severity.Error,\n\t\t\t\t\t\tlabel: nls.localize(\"formatter\", \"Formatting\"),\n\t\t\t\t\t\tdetail: result,\n\t\t\t\t\t\tbusy: false,\n\t\t\t\t\t\tsource: \"\",\n\t\t\t\t\t\tcommand,\n\t\t\t\t\t\taccessibilityInfo: undefined,\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t},\n\t\t);\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n).registerWorkbenchContribution(DefaultFormatter, LifecyclePhase.Restored);\n\nRegistry.as<IConfigurationRegistry>(\n\tConfigurationExtensions.Configuration,\n).registerConfiguration({\n\t...editorConfigurationBaseNode,\n\tproperties: {\n\t\t[DefaultFormatter.configName]: {\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"formatter.default\",\n\t\t\t\t\"Defines a default formatter which takes precedence over all other formatter settings. Must be the identifier of an extension contributing a formatter.\",\n\t\t\t),\n\t\t\ttype: [\"string\", \"null\"],\n\t\t\tdefault: null,\n\t\t\tenum: DefaultFormatter.extensionIds,\n\t\t\tenumItemLabels: DefaultFormatter.extensionItemLabels,\n\t\t\tmarkdownEnumDescriptions: DefaultFormatter.extensionDescriptions,\n\t\t},\n\t},\n});\n\ninterface IIndexedPick extends IQuickPickItem {\n\tindex: number;\n}\n\nfunction logFormatterTelemetry<T extends { extensionId?: ExtensionIdentifier }>(\n\ttelemetryService: ITelemetryService,\n\tmode: \"document\" | \"range\",\n\toptions: T[],\n\tpick?: T,\n) {\n\ttype FormatterPicks = {\n\t\tmode: \"document\" | \"range\";\n\t\textensions: string[];\n\t\tpick: string;\n\t};\n\ttype FormatterPicksClassification = {\n\t\towner: \"jrieken\";\n\t\tcomment: \"Information about resolving formatter conflicts\";\n\t\tmode: {\n\t\t\tclassification: \"SystemMetaData\";\n\t\t\tpurpose: \"FeatureInsight\";\n\t\t\tcomment: \"Formatting mode: whole document or a range/selection\";\n\t\t};\n\t\textensions: {\n\t\t\tclassification: \"SystemMetaData\";\n\t\t\tpurpose: \"FeatureInsight\";\n\t\t\tcomment: \"The extension that got picked\";\n\t\t};\n\t\tpick: {\n\t\t\tclassification: \"SystemMetaData\";\n\t\t\tpurpose: \"FeatureInsight\";\n\t\t\tcomment: \"The possible extensions to pick\";\n\t\t};\n\t};\n\tfunction extKey(obj: T): string {\n\t\treturn obj.extensionId\n\t\t\t? ExtensionIdentifier.toKey(obj.extensionId)\n\t\t\t: \"unknown\";\n\t}\n\ttelemetryService.publicLog2<FormatterPicks, FormatterPicksClassification>(\n\t\t\"formatterpick\",\n\t\t{\n\t\t\tmode,\n\t\t\textensions: options.map(extKey),\n\t\t\tpick: pick ? extKey(pick) : \"none\",\n\t\t},\n\t);\n}\n\nasync function showFormatterPick(\n\taccessor: ServicesAccessor,\n\tmodel: ITextModel,\n\tformatters: FormattingEditProvider[],\n): Promise<number | undefined> {\n\tconst quickPickService = accessor.get(IQuickInputService);\n\tconst configService = accessor.get(IConfigurationService);\n\tconst languageService = accessor.get(ILanguageService);\n\n\tconst overrides = {\n\t\tresource: model.uri,\n\t\toverrideIdentifier: model.getLanguageId(),\n\t};\n\tconst defaultFormatter = configService.getValue<string>(\n\t\tDefaultFormatter.configName,\n\t\toverrides,\n\t);\n\n\tlet defaultFormatterPick: IIndexedPick | undefined;\n\n\tconst picks = formatters.map((provider, index) => {\n\t\tconst isDefault = ExtensionIdentifier.equals(\n\t\t\tprovider.extensionId,\n\t\t\tdefaultFormatter,\n\t\t);\n\t\tconst pick: IIndexedPick = {\n\t\t\tindex,\n\t\t\tlabel: provider.displayName || \"\",\n\t\t\tdescription: isDefault\n\t\t\t\t? nls.localize(\"def\", \"(default)\")\n\t\t\t\t: undefined,\n\t\t};\n\n\t\tif (isDefault) {\n\t\t\t// autofocus default pick\n\t\t\tdefaultFormatterPick = pick;\n\t\t}\n\n\t\treturn pick;\n\t});\n\n\tconst configurePick: IQuickPickItem = {\n\t\tlabel: nls.localize(\"config\", \"Configure Default Formatter...\"),\n\t};\n\n\tconst pick = await quickPickService.pick(\n\t\t[...picks, { type: \"separator\" }, configurePick],\n\t\t{\n\t\t\tplaceHolder: nls.localize(\n\t\t\t\t\"format.placeHolder\",\n\t\t\t\t\"Select a formatter\",\n\t\t\t),\n\t\t\tactiveItem: defaultFormatterPick,\n\t\t},\n\t);\n\tif (!pick) {\n\t\t// dismissed\n\t\treturn undefined;\n\t} else if (pick === configurePick) {\n\t\t// config default\n\t\tconst langName =\n\t\t\tlanguageService.getLanguageName(model.getLanguageId()) ||\n\t\t\tmodel.getLanguageId();\n\t\tconst pick = await quickPickService.pick(picks, {\n\t\t\tplaceHolder: nls.localize(\n\t\t\t\t\"select\",\n\t\t\t\t\"Select a default formatter for '{0}' files\",\n\t\t\t\tDefaultFormatter._maybeQuotes(langName),\n\t\t\t),\n\t\t});\n\t\tif (pick && formatters[pick.index].extensionId) {\n\t\t\tconfigService.updateValue(\n\t\t\t\tDefaultFormatter.configName,\n\t\t\t\tformatters[pick.index].extensionId!.value,\n\t\t\t\toverrides,\n\t\t\t);\n\t\t}\n\t\treturn undefined;\n\t} else {\n\t\t// picked one\n\t\treturn (<IIndexedPick>pick).index;\n\t}\n}\n\nregisterEditorAction(\n\tclass FormatDocumentMultipleAction extends EditorAction {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"editor.action.formatDocument.multiple\",\n\t\t\t\tlabel: nls.localize(\n\t\t\t\t\t\"formatDocument.label.multiple\",\n\t\t\t\t\t\"Format Document With...\",\n\t\t\t\t),\n\t\t\t\talias: \"Format Document...\",\n\t\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\t\tEditorContextKeys.writable,\n\t\t\t\t\tEditorContextKeys.hasMultipleDocumentFormattingProvider,\n\t\t\t\t),\n\t\t\t\tcontextMenuOpts: {\n\t\t\t\t\tgroup: \"1_modification\",\n\t\t\t\t\torder: 1.3,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tasync run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\teditor: ICodeEditor,\n\t\t\targs: any,\n\t\t): Promise<void> {\n\t\t\tif (!editor.hasModel()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst instaService = accessor.get(IInstantiationService);\n\t\t\tconst telemetryService = accessor.get(ITelemetryService);\n\t\t\tconst languageFeaturesService = accessor.get(\n\t\t\t\tILanguageFeaturesService,\n\t\t\t);\n\t\t\tconst model = editor.getModel();\n\t\t\tconst provider = getRealAndSyntheticDocumentFormattersOrdered(\n\t\t\t\tlanguageFeaturesService.documentFormattingEditProvider,\n\t\t\t\tlanguageFeaturesService.documentRangeFormattingEditProvider,\n\t\t\t\tmodel,\n\t\t\t);\n\t\t\tconst pick = await instaService.invokeFunction(\n\t\t\t\tshowFormatterPick,\n\t\t\t\tmodel,\n\t\t\t\tprovider,\n\t\t\t);\n\t\t\tif (typeof pick === \"number\") {\n\t\t\t\tawait instaService.invokeFunction(\n\t\t\t\t\tformatDocumentWithProvider,\n\t\t\t\t\tprovider[pick],\n\t\t\t\t\teditor,\n\t\t\t\t\tFormattingMode.Explicit,\n\t\t\t\t\tCancellationToken.None,\n\t\t\t\t);\n\t\t\t}\n\t\t\tlogFormatterTelemetry(\n\t\t\t\ttelemetryService,\n\t\t\t\t\"document\",\n\t\t\t\tprovider,\n\t\t\t\t(typeof pick === \"number\" && provider[pick]) || undefined,\n\t\t\t);\n\t\t}\n\t},\n);\n\nregisterEditorAction(\n\tclass FormatSelectionMultipleAction extends EditorAction {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"editor.action.formatSelection.multiple\",\n\t\t\t\tlabel: nls.localize(\n\t\t\t\t\t\"formatSelection.label.multiple\",\n\t\t\t\t\t\"Format Selection With...\",\n\t\t\t\t),\n\t\t\t\talias: \"Format Code...\",\n\t\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\t\tContextKeyExpr.and(EditorContextKeys.writable),\n\t\t\t\t\tEditorContextKeys.hasMultipleDocumentSelectionFormattingProvider,\n\t\t\t\t),\n\t\t\t\tcontextMenuOpts: {\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tEditorContextKeys.hasNonEmptySelection,\n\t\t\t\t\t),\n\t\t\t\t\tgroup: \"1_modification\",\n\t\t\t\t\torder: 1.31,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tasync run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\teditor: ICodeEditor,\n\t\t): Promise<void> {\n\t\t\tif (!editor.hasModel()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst instaService = accessor.get(IInstantiationService);\n\t\t\tconst languageFeaturesService = accessor.get(\n\t\t\t\tILanguageFeaturesService,\n\t\t\t);\n\t\t\tconst telemetryService = accessor.get(ITelemetryService);\n\n\t\t\tconst model = editor.getModel();\n\t\t\tlet range: Range = editor.getSelection();\n\t\t\tif (range.isEmpty()) {\n\t\t\t\trange = new Range(\n\t\t\t\t\trange.startLineNumber,\n\t\t\t\t\t1,\n\t\t\t\t\trange.startLineNumber,\n\t\t\t\t\tmodel.getLineMaxColumn(range.startLineNumber),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst provider =\n\t\t\t\tlanguageFeaturesService.documentRangeFormattingEditProvider.ordered(\n\t\t\t\t\tmodel,\n\t\t\t\t);\n\t\t\tconst pick = await instaService.invokeFunction(\n\t\t\t\tshowFormatterPick,\n\t\t\t\tmodel,\n\t\t\t\tprovider,\n\t\t\t);\n\t\t\tif (typeof pick === \"number\") {\n\t\t\t\tawait instaService.invokeFunction(\n\t\t\t\t\tformatDocumentRangesWithProvider,\n\t\t\t\t\tprovider[pick],\n\t\t\t\t\teditor,\n\t\t\t\t\trange,\n\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\ttrue,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tlogFormatterTelemetry(\n\t\t\t\ttelemetryService,\n\t\t\t\t\"range\",\n\t\t\t\tprovider,\n\t\t\t\t(typeof pick === \"number\" && provider[pick]) || undefined,\n\t\t\t);\n\t\t}\n\t},\n);\n"],
  "mappings": "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",
  "names": ["formatter", "langName", "pick"]
}
