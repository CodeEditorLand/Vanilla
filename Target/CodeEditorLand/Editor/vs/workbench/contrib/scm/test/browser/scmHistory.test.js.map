{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/scm/test/browser/scmHistory.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { ColorIdentifier } from '../../../../../platform/theme/common/colorUtils.js';\nimport { colorRegistry, historyItemBaseRefColor, historyItemRefColor, historyItemRemoteRefColor, toISCMHistoryItemViewModelArray } from '../../browser/scmHistory.js';\nimport { ISCMHistoryItem, ISCMHistoryItemRef } from '../../common/history.js';\n\nfunction toSCMHistoryItem(id: string, parentIds: string[], references?: ISCMHistoryItemRef[]): ISCMHistoryItem {\n\treturn { id, parentIds, subject: '', message: '', references } satisfies ISCMHistoryItem;\n}\n\nsuite('toISCMHistoryItemViewModelArray', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('empty graph', () => {\n\t\tconst viewModels = toISCMHistoryItemViewModelArray([]);\n\n\t\tassert.strictEqual(viewModels.length, 0);\n\t});\n\n\n\t/**\n\t *\t* a\n\t */\n\n\ttest('single commit', () => {\n\t\tconst models = [\n\t\t\ttoSCMHistoryItem('a', []),\n\t\t];\n\n\t\tconst viewModels = toISCMHistoryItemViewModelArray(models);\n\n\t\tassert.strictEqual(viewModels.length, 1);\n\n\t\tassert.strictEqual(viewModels[0].inputSwimlanes.length, 0);\n\t\tassert.strictEqual(viewModels[0].outputSwimlanes.length, 0);\n\t});\n\n\t/**\n\t *\t* a(b)\n\t *\t* b(c)\n\t *\t* c(d)\n\t *\t* d(e)\n\t *\t* e\n\t */\n\ttest('linear graph', () => {\n\t\tconst models = [\n\t\t\ttoSCMHistoryItem('a', ['b']),\n\t\t\ttoSCMHistoryItem('b', ['c']),\n\t\t\ttoSCMHistoryItem('c', ['d']),\n\t\t\ttoSCMHistoryItem('d', ['e']),\n\t\t\ttoSCMHistoryItem('e', []),\n\t\t];\n\n\t\tconst viewModels = toISCMHistoryItemViewModelArray(models);\n\n\t\tassert.strictEqual(viewModels.length, 5);\n\n\t\t// node a\n\t\tassert.strictEqual(viewModels[0].inputSwimlanes.length, 0);\n\n\t\tassert.strictEqual(viewModels[0].outputSwimlanes.length, 1);\n\t\tassert.strictEqual(viewModels[0].outputSwimlanes[0].id, 'b');\n\t\tassert.strictEqual(viewModels[0].outputSwimlanes[0].color, colorRegistry[0]);\n\n\t\t// node b\n\t\tassert.strictEqual(viewModels[1].inputSwimlanes.length, 1);\n\t\tassert.strictEqual(viewModels[1].inputSwimlanes[0].id, 'b');\n\t\tassert.strictEqual(viewModels[1].inputSwimlanes[0].color, colorRegistry[0]);\n\n\t\tassert.strictEqual(viewModels[1].outputSwimlanes.length, 1);\n\t\tassert.strictEqual(viewModels[1].outputSwimlanes[0].id, 'c');\n\t\tassert.strictEqual(viewModels[1].outputSwimlanes[0].color, colorRegistry[0]);\n\n\t\t// node c\n\t\tassert.strictEqual(viewModels[2].inputSwimlanes.length, 1);\n\t\tassert.strictEqual(viewModels[2].inputSwimlanes[0].id, 'c');\n\t\tassert.strictEqual(viewModels[2].inputSwimlanes[0].color, colorRegistry[0]);\n\n\t\tassert.strictEqual(viewModels[2].outputSwimlanes.length, 1);\n\t\tassert.strictEqual(viewModels[2].outputSwimlanes[0].id, 'd');\n\t\tassert.strictEqual(viewModels[2].outputSwimlanes[0].color, colorRegistry[0]);\n\n\t\t// node d\n\t\tassert.strictEqual(viewModels[3].inputSwimlanes.length, 1);\n\t\tassert.strictEqual(viewModels[3].inputSwimlanes[0].id, 'd');\n\t\tassert.strictEqual(viewModels[3].inputSwimlanes[0].color, colorRegistry[0]);\n\n\t\tassert.strictEqual(viewModels[3].outputSwimlanes.length, 1);\n\t\tassert.strictEqual(viewModels[3].outputSwimlanes[0].id, 'e');\n\t\tassert.strictEqual(viewModels[3].outputSwimlanes[0].color, colorRegistry[0]);\n\n\t\t// node e\n\t\tassert.strictEqual(viewModels[4].inputSwimlanes.length, 1);\n\t\tassert.strictEqual(viewModels[4].inputSwimlanes[0].id, 'e');\n\t\tassert.strictEqual(viewModels[4].inputSwimlanes[0].color, colorRegistry[0]);\n\n\t\tassert.strictEqual(viewModels[4].outputSwimlanes.length, 0);\n\t});\n\n\t/**\n\t *\t* a(b)\n\t *\t*   b(c,d)\n\t *\t|\\\n\t *\t| * d(c)\n\t *\t|/\n\t *\t* c(e)\n\t *\t* e(f)\n\t */\n\ttest('merge commit (single commit in topic branch)', () => {\n\t\tconst models = [\n\t\t\ttoSCMHistoryItem('a', ['b']),\n\t\t\ttoSCMHistoryItem('b', ['c', 'd']),\n\t\t\ttoSCMHistoryItem('d', ['c']),\n\t\t\ttoSCMHistoryItem('c', ['e']),\n\t\t\ttoSCMHistoryItem('e', ['f']),\n\t\t];\n\n\t\tconst viewModels = toISCMHistoryItemViewModelArray(models);\n\n\t\tassert.strictEqual(viewModels.length, 5);\n\n\t\t// node a\n\t\tassert.strictEqual(viewModels[0].inputSwimlanes.length, 0);\n\n\t\tassert.strictEqual(viewModels[0].outputSwimlanes.length, 1);\n\t\tassert.strictEqual(viewModels[0].outputSwimlanes[0].id, 'b');\n\t\tassert.strictEqual(viewModels[0].outputSwimlanes[0].color, colorRegistry[0]);\n\n\t\t// node b\n\t\tassert.strictEqual(viewModels[1].inputSwimlanes.length, 1);\n\t\tassert.strictEqual(viewModels[1].inputSwimlanes[0].id, 'b');\n\t\tassert.strictEqual(viewModels[1].inputSwimlanes[0].color, colorRegistry[0]);\n\n\t\tassert.strictEqual(viewModels[1].outputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[1].outputSwimlanes[0].id, 'c');\n\t\tassert.strictEqual(viewModels[1].outputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[1].outputSwimlanes[1].id, 'd');\n\t\tassert.strictEqual(viewModels[1].outputSwimlanes[1].color, colorRegistry[1]);\n\n\t\t// node d\n\t\tassert.strictEqual(viewModels[2].inputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[2].inputSwimlanes[0].id, 'c');\n\t\tassert.strictEqual(viewModels[2].inputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[2].inputSwimlanes[1].id, 'd');\n\t\tassert.strictEqual(viewModels[2].inputSwimlanes[1].color, colorRegistry[1]);\n\n\t\tassert.strictEqual(viewModels[2].outputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[2].outputSwimlanes[0].id, 'c');\n\t\tassert.strictEqual(viewModels[2].outputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[2].outputSwimlanes[1].id, 'c');\n\t\tassert.strictEqual(viewModels[2].outputSwimlanes[1].color, colorRegistry[1]);\n\n\t\t// node c\n\t\tassert.strictEqual(viewModels[3].inputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[3].inputSwimlanes[0].id, 'c');\n\t\tassert.strictEqual(viewModels[3].inputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[3].inputSwimlanes[1].id, 'c');\n\t\tassert.strictEqual(viewModels[3].inputSwimlanes[1].color, colorRegistry[1]);\n\n\t\tassert.strictEqual(viewModels[3].outputSwimlanes.length, 1);\n\t\tassert.strictEqual(viewModels[3].outputSwimlanes[0].id, 'e');\n\t\tassert.strictEqual(viewModels[3].outputSwimlanes[0].color, colorRegistry[0]);\n\n\t\t// node e\n\t\tassert.strictEqual(viewModels[4].inputSwimlanes.length, 1);\n\t\tassert.strictEqual(viewModels[4].inputSwimlanes[0].id, 'e');\n\t\tassert.strictEqual(viewModels[4].inputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[4].outputSwimlanes.length, 1);\n\t\tassert.strictEqual(viewModels[4].outputSwimlanes[0].id, 'f');\n\t\tassert.strictEqual(viewModels[4].outputSwimlanes[0].color, colorRegistry[0]);\n\t});\n\n\t/**\n\t *\t* a(b,c)\n\t *\t|\\\n\t *\t| * c(d)\n\t *\t* | b(e)\n\t *\t* | e(f)\n\t *\t* | f(d)\n\t *\t|/\n\t *\t* d(g)\n\t */\n\ttest('merge commit (multiple commits in topic branch)', () => {\n\t\tconst models = [\n\t\t\ttoSCMHistoryItem('a', ['b', 'c']),\n\t\t\ttoSCMHistoryItem('c', ['d']),\n\t\t\ttoSCMHistoryItem('b', ['e']),\n\t\t\ttoSCMHistoryItem('e', ['f']),\n\t\t\ttoSCMHistoryItem('f', ['d']),\n\t\t\ttoSCMHistoryItem('d', ['g']),\n\t\t];\n\n\t\tconst viewModels = toISCMHistoryItemViewModelArray(models);\n\n\t\tassert.strictEqual(viewModels.length, 6);\n\n\t\t// node a\n\t\tassert.strictEqual(viewModels[0].inputSwimlanes.length, 0);\n\n\t\tassert.strictEqual(viewModels[0].outputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[0].outputSwimlanes[0].id, 'b');\n\t\tassert.strictEqual(viewModels[0].outputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[0].outputSwimlanes[1].id, 'c');\n\t\tassert.strictEqual(viewModels[0].outputSwimlanes[1].color, colorRegistry[1]);\n\n\t\t// node c\n\t\tassert.strictEqual(viewModels[1].inputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[1].inputSwimlanes[0].id, 'b');\n\t\tassert.strictEqual(viewModels[1].inputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[1].inputSwimlanes[1].id, 'c');\n\t\tassert.strictEqual(viewModels[1].inputSwimlanes[1].color, colorRegistry[1]);\n\n\t\tassert.strictEqual(viewModels[1].outputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[1].outputSwimlanes[0].id, 'b');\n\t\tassert.strictEqual(viewModels[1].outputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[1].outputSwimlanes[1].id, 'd');\n\t\tassert.strictEqual(viewModels[1].outputSwimlanes[1].color, colorRegistry[1]);\n\n\t\t// node b\n\t\tassert.strictEqual(viewModels[2].inputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[2].inputSwimlanes[0].id, 'b');\n\t\tassert.strictEqual(viewModels[2].inputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[2].inputSwimlanes[1].id, 'd');\n\t\tassert.strictEqual(viewModels[2].inputSwimlanes[1].color, colorRegistry[1]);\n\n\t\tassert.strictEqual(viewModels[2].outputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[2].outputSwimlanes[0].id, 'e');\n\t\tassert.strictEqual(viewModels[2].outputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[2].outputSwimlanes[1].id, 'd');\n\t\tassert.strictEqual(viewModels[2].outputSwimlanes[1].color, colorRegistry[1]);\n\n\t\t// node e\n\t\tassert.strictEqual(viewModels[3].inputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[3].inputSwimlanes[0].id, 'e');\n\t\tassert.strictEqual(viewModels[3].inputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[3].inputSwimlanes[1].id, 'd');\n\t\tassert.strictEqual(viewModels[3].inputSwimlanes[1].color, colorRegistry[1]);\n\n\t\tassert.strictEqual(viewModels[3].outputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[3].outputSwimlanes[0].id, 'f');\n\t\tassert.strictEqual(viewModels[3].outputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[3].outputSwimlanes[1].id, 'd');\n\t\tassert.strictEqual(viewModels[3].outputSwimlanes[1].color, colorRegistry[1]);\n\n\t\t// node f\n\t\tassert.strictEqual(viewModels[4].inputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[4].inputSwimlanes[0].id, 'f');\n\t\tassert.strictEqual(viewModels[4].inputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[4].inputSwimlanes[1].id, 'd');\n\t\tassert.strictEqual(viewModels[4].inputSwimlanes[1].color, colorRegistry[1]);\n\n\t\tassert.strictEqual(viewModels[4].outputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[4].outputSwimlanes[0].id, 'd');\n\t\tassert.strictEqual(viewModels[4].outputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[4].outputSwimlanes[1].id, 'd');\n\t\tassert.strictEqual(viewModels[4].outputSwimlanes[1].color, colorRegistry[1]);\n\n\t\t// node d\n\t\tassert.strictEqual(viewModels[5].inputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[5].inputSwimlanes[0].id, 'd');\n\t\tassert.strictEqual(viewModels[5].inputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[5].inputSwimlanes[1].id, 'd');\n\t\tassert.strictEqual(viewModels[5].inputSwimlanes[1].color, colorRegistry[1]);\n\n\t\tassert.strictEqual(viewModels[5].outputSwimlanes.length, 1);\n\t\tassert.strictEqual(viewModels[5].outputSwimlanes[0].id, 'g');\n\t\tassert.strictEqual(viewModels[5].outputSwimlanes[0].color, colorRegistry[0]);\n\t});\n\n\t/**\n\t * \t* a(b,c)\n\t * \t|\\\n\t * \t| * c(b)\n\t * \t|/\n\t * \t* b(d,e)\n\t * \t|\\\n\t * \t| * e(f)\n\t * \t| * f(g)\n\t * \t* | d(h)\n\t */\n\ttest('create brach from merge commit', () => {\n\t\tconst models = [\n\t\t\ttoSCMHistoryItem('a', ['b', 'c']),\n\t\t\ttoSCMHistoryItem('c', ['b']),\n\t\t\ttoSCMHistoryItem('b', ['d', 'e']),\n\t\t\ttoSCMHistoryItem('e', ['f']),\n\t\t\ttoSCMHistoryItem('f', ['g']),\n\t\t\ttoSCMHistoryItem('d', ['h']),\n\t\t];\n\n\t\tconst viewModels = toISCMHistoryItemViewModelArray(models);\n\n\t\tassert.strictEqual(viewModels.length, 6);\n\n\t\t// node a\n\t\tassert.strictEqual(viewModels[0].inputSwimlanes.length, 0);\n\n\t\tassert.strictEqual(viewModels[0].outputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[0].outputSwimlanes[0].id, 'b');\n\t\tassert.strictEqual(viewModels[0].outputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[0].outputSwimlanes[1].id, 'c');\n\t\tassert.strictEqual(viewModels[0].outputSwimlanes[1].color, colorRegistry[1]);\n\n\t\t// node c\n\t\tassert.strictEqual(viewModels[1].inputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[1].inputSwimlanes[0].id, 'b');\n\t\tassert.strictEqual(viewModels[1].inputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[1].inputSwimlanes[1].id, 'c');\n\t\tassert.strictEqual(viewModels[1].inputSwimlanes[1].color, colorRegistry[1]);\n\n\t\tassert.strictEqual(viewModels[1].outputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[1].outputSwimlanes[0].id, 'b');\n\t\tassert.strictEqual(viewModels[1].outputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[1].outputSwimlanes[1].id, 'b');\n\t\tassert.strictEqual(viewModels[1].outputSwimlanes[1].color, colorRegistry[1]);\n\n\t\t// node b\n\t\tassert.strictEqual(viewModels[2].inputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[2].inputSwimlanes[0].id, 'b');\n\t\tassert.strictEqual(viewModels[2].inputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[2].inputSwimlanes[1].id, 'b');\n\t\tassert.strictEqual(viewModels[2].inputSwimlanes[1].color, colorRegistry[1]);\n\n\t\tassert.strictEqual(viewModels[2].outputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[2].outputSwimlanes[0].id, 'd');\n\t\tassert.strictEqual(viewModels[2].outputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[2].outputSwimlanes[1].id, 'e');\n\t\tassert.strictEqual(viewModels[2].outputSwimlanes[1].color, colorRegistry[2]);\n\n\t\t// node e\n\t\tassert.strictEqual(viewModels[3].inputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[3].inputSwimlanes[0].id, 'd');\n\t\tassert.strictEqual(viewModels[3].inputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[3].inputSwimlanes[1].id, 'e');\n\t\tassert.strictEqual(viewModels[3].inputSwimlanes[1].color, colorRegistry[2]);\n\n\t\tassert.strictEqual(viewModels[3].outputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[3].outputSwimlanes[0].id, 'd');\n\t\tassert.strictEqual(viewModels[3].outputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[3].outputSwimlanes[1].id, 'f');\n\t\tassert.strictEqual(viewModels[3].outputSwimlanes[1].color, colorRegistry[2]);\n\n\t\t// node f\n\t\tassert.strictEqual(viewModels[4].inputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[4].inputSwimlanes[0].id, 'd');\n\t\tassert.strictEqual(viewModels[4].inputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[4].inputSwimlanes[1].id, 'f');\n\t\tassert.strictEqual(viewModels[4].inputSwimlanes[1].color, colorRegistry[2]);\n\n\t\tassert.strictEqual(viewModels[4].outputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[4].outputSwimlanes[0].id, 'd');\n\t\tassert.strictEqual(viewModels[4].outputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[4].outputSwimlanes[1].id, 'g');\n\t\tassert.strictEqual(viewModels[4].outputSwimlanes[1].color, colorRegistry[2]);\n\n\t\t// node d\n\t\tassert.strictEqual(viewModels[5].inputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[5].inputSwimlanes[0].id, 'd');\n\t\tassert.strictEqual(viewModels[5].inputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[5].inputSwimlanes[1].id, 'g');\n\t\tassert.strictEqual(viewModels[5].inputSwimlanes[1].color, colorRegistry[2]);\n\n\t\tassert.strictEqual(viewModels[5].outputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[5].outputSwimlanes[0].id, 'h');\n\t\tassert.strictEqual(viewModels[5].outputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[5].outputSwimlanes[1].id, 'g');\n\t\tassert.strictEqual(viewModels[5].outputSwimlanes[1].color, colorRegistry[2]);\n\t});\n\n\n\t/**\n\t * \t* a(b,c)\n\t * \t|\\\n\t * \t| * c(d)\n\t * \t* | b(e,f)\n\t * \t|\\|\n\t * \t| |\\\n\t * \t| | * f(g)\n\t * \t* | | e(g)\n\t * \t| * | d(g)\n\t * \t|/ /\n\t * \t| /\n\t * \t|/\n\t * \t* g(h)\n\t */\n\ttest('create multiple branches from a commit', () => {\n\t\tconst models = [\n\t\t\ttoSCMHistoryItem('a', ['b', 'c']),\n\t\t\ttoSCMHistoryItem('c', ['d']),\n\t\t\ttoSCMHistoryItem('b', ['e', 'f']),\n\t\t\ttoSCMHistoryItem('f', ['g']),\n\t\t\ttoSCMHistoryItem('e', ['g']),\n\t\t\ttoSCMHistoryItem('d', ['g']),\n\t\t\ttoSCMHistoryItem('g', ['h']),\n\t\t] satisfies ISCMHistoryItem[];\n\n\t\tconst viewModels = toISCMHistoryItemViewModelArray(models);\n\n\t\tassert.strictEqual(viewModels.length, 7);\n\n\t\t// node a\n\t\tassert.strictEqual(viewModels[0].inputSwimlanes.length, 0);\n\n\t\tassert.strictEqual(viewModels[0].outputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[0].outputSwimlanes[0].id, 'b');\n\t\tassert.strictEqual(viewModels[0].outputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[0].outputSwimlanes[1].id, 'c');\n\t\tassert.strictEqual(viewModels[0].outputSwimlanes[1].color, colorRegistry[1]);\n\n\t\t// node c\n\t\tassert.strictEqual(viewModels[1].inputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[1].inputSwimlanes[0].id, 'b');\n\t\tassert.strictEqual(viewModels[1].inputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[1].inputSwimlanes[1].id, 'c');\n\t\tassert.strictEqual(viewModels[1].inputSwimlanes[1].color, colorRegistry[1]);\n\n\t\tassert.strictEqual(viewModels[1].outputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[1].outputSwimlanes[0].id, 'b');\n\t\tassert.strictEqual(viewModels[1].outputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[1].outputSwimlanes[1].id, 'd');\n\t\tassert.strictEqual(viewModels[1].outputSwimlanes[1].color, colorRegistry[1]);\n\n\t\t// node b\n\t\tassert.strictEqual(viewModels[2].inputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[2].inputSwimlanes[0].id, 'b');\n\t\tassert.strictEqual(viewModels[2].inputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[2].inputSwimlanes[1].id, 'd');\n\t\tassert.strictEqual(viewModels[2].inputSwimlanes[1].color, colorRegistry[1]);\n\n\t\tassert.strictEqual(viewModels[2].outputSwimlanes.length, 3);\n\t\tassert.strictEqual(viewModels[2].outputSwimlanes[0].id, 'e');\n\t\tassert.strictEqual(viewModels[2].outputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[2].outputSwimlanes[1].id, 'd');\n\t\tassert.strictEqual(viewModels[2].outputSwimlanes[1].color, colorRegistry[1]);\n\t\tassert.strictEqual(viewModels[2].outputSwimlanes[2].id, 'f');\n\t\tassert.strictEqual(viewModels[2].outputSwimlanes[2].color, colorRegistry[2]);\n\n\t\t// node f\n\t\tassert.strictEqual(viewModels[3].inputSwimlanes.length, 3);\n\t\tassert.strictEqual(viewModels[3].inputSwimlanes[0].id, 'e');\n\t\tassert.strictEqual(viewModels[3].inputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[3].inputSwimlanes[1].id, 'd');\n\t\tassert.strictEqual(viewModels[3].inputSwimlanes[1].color, colorRegistry[1]);\n\t\tassert.strictEqual(viewModels[3].inputSwimlanes[2].id, 'f');\n\t\tassert.strictEqual(viewModels[3].inputSwimlanes[2].color, colorRegistry[2]);\n\n\t\tassert.strictEqual(viewModels[3].outputSwimlanes.length, 3);\n\t\tassert.strictEqual(viewModels[3].outputSwimlanes[0].id, 'e');\n\t\tassert.strictEqual(viewModels[3].outputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[3].outputSwimlanes[1].id, 'd');\n\t\tassert.strictEqual(viewModels[3].outputSwimlanes[1].color, colorRegistry[1]);\n\t\tassert.strictEqual(viewModels[3].outputSwimlanes[2].id, 'g');\n\t\tassert.strictEqual(viewModels[3].outputSwimlanes[2].color, colorRegistry[2]);\n\n\t\t// node e\n\t\tassert.strictEqual(viewModels[4].inputSwimlanes.length, 3);\n\t\tassert.strictEqual(viewModels[4].inputSwimlanes[0].id, 'e');\n\t\tassert.strictEqual(viewModels[4].inputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[4].inputSwimlanes[1].id, 'd');\n\t\tassert.strictEqual(viewModels[4].inputSwimlanes[1].color, colorRegistry[1]);\n\t\tassert.strictEqual(viewModels[4].inputSwimlanes[2].id, 'g');\n\t\tassert.strictEqual(viewModels[4].inputSwimlanes[2].color, colorRegistry[2]);\n\n\t\tassert.strictEqual(viewModels[4].outputSwimlanes.length, 3);\n\t\tassert.strictEqual(viewModels[4].outputSwimlanes[0].id, 'g');\n\t\tassert.strictEqual(viewModels[4].outputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[4].outputSwimlanes[1].id, 'd');\n\t\tassert.strictEqual(viewModels[4].outputSwimlanes[1].color, colorRegistry[1]);\n\t\tassert.strictEqual(viewModels[4].outputSwimlanes[2].id, 'g');\n\t\tassert.strictEqual(viewModels[4].outputSwimlanes[2].color, colorRegistry[2]);\n\n\t\t// node d\n\t\tassert.strictEqual(viewModels[5].inputSwimlanes.length, 3);\n\t\tassert.strictEqual(viewModels[5].inputSwimlanes[0].id, 'g');\n\t\tassert.strictEqual(viewModels[5].inputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[5].inputSwimlanes[1].id, 'd');\n\t\tassert.strictEqual(viewModels[5].inputSwimlanes[1].color, colorRegistry[1]);\n\t\tassert.strictEqual(viewModels[5].inputSwimlanes[2].id, 'g');\n\t\tassert.strictEqual(viewModels[5].inputSwimlanes[2].color, colorRegistry[2]);\n\n\t\tassert.strictEqual(viewModels[5].outputSwimlanes.length, 3);\n\t\tassert.strictEqual(viewModels[5].outputSwimlanes[0].id, 'g');\n\t\tassert.strictEqual(viewModels[5].outputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[5].outputSwimlanes[1].id, 'g');\n\t\tassert.strictEqual(viewModels[5].outputSwimlanes[1].color, colorRegistry[1]);\n\t\tassert.strictEqual(viewModels[5].outputSwimlanes[2].id, 'g');\n\t\tassert.strictEqual(viewModels[5].outputSwimlanes[2].color, colorRegistry[2]);\n\n\t\t// node g\n\t\tassert.strictEqual(viewModels[6].inputSwimlanes.length, 3);\n\t\tassert.strictEqual(viewModels[6].inputSwimlanes[0].id, 'g');\n\t\tassert.strictEqual(viewModels[6].inputSwimlanes[0].color, colorRegistry[0]);\n\t\tassert.strictEqual(viewModels[6].inputSwimlanes[1].id, 'g');\n\t\tassert.strictEqual(viewModels[6].inputSwimlanes[1].color, colorRegistry[1]);\n\t\tassert.strictEqual(viewModels[6].inputSwimlanes[2].id, 'g');\n\t\tassert.strictEqual(viewModels[6].inputSwimlanes[2].color, colorRegistry[2]);\n\n\t\tassert.strictEqual(viewModels[6].outputSwimlanes.length, 1);\n\t\tassert.strictEqual(viewModels[6].outputSwimlanes[0].id, 'h');\n\t\tassert.strictEqual(viewModels[6].outputSwimlanes[0].color, colorRegistry[0]);\n\t});\n\n\t/**\n\t * \t* a(b) [topic]\n\t * \t* b(c)\n\t * \t* c(d) [origin/topic]\n\t * \t* d(e)\n\t * \t* e(f,g)\n\t * \t|\\\n\t * \t| * g(h) [origin/main]\n\t */\n\ttest('graph with color map', () => {\n\t\tconst models = [\n\t\t\ttoSCMHistoryItem('a', ['b'], [{ id: 'topic', name: 'topic' }]),\n\t\t\ttoSCMHistoryItem('b', ['c']),\n\t\t\ttoSCMHistoryItem('c', ['d'], [{ id: 'origin/topic', name: 'origin/topic' }]),\n\t\t\ttoSCMHistoryItem('d', ['e']),\n\t\t\ttoSCMHistoryItem('e', ['f', 'g']),\n\t\t\ttoSCMHistoryItem('g', ['h'], [{ id: 'origin/main', name: 'origin/main' }])\n\t\t];\n\n\t\tconst colorMap = new Map<string, ColorIdentifier>([\n\t\t\t['topic', historyItemRefColor],\n\t\t\t['origin/topic', historyItemRemoteRefColor],\n\t\t\t['origin/main', historyItemBaseRefColor],\n\t\t]);\n\n\t\tconst viewModels = toISCMHistoryItemViewModelArray(models, colorMap);\n\n\t\tassert.strictEqual(viewModels.length, 6);\n\n\t\t// node a\n\t\tassert.strictEqual(viewModels[0].inputSwimlanes.length, 0);\n\n\t\tassert.strictEqual(viewModels[0].outputSwimlanes.length, 1);\n\t\tassert.strictEqual(viewModels[0].outputSwimlanes[0].id, 'b');\n\t\tassert.strictEqual(viewModels[0].outputSwimlanes[0].color, historyItemRefColor);\n\n\t\t// node b\n\t\tassert.strictEqual(viewModels[1].inputSwimlanes.length, 1);\n\t\tassert.strictEqual(viewModels[1].inputSwimlanes[0].id, 'b');\n\t\tassert.strictEqual(viewModels[1].inputSwimlanes[0].color, historyItemRefColor);\n\n\t\tassert.strictEqual(viewModels[1].outputSwimlanes.length, 1);\n\t\tassert.strictEqual(viewModels[1].outputSwimlanes[0].id, 'c');\n\t\tassert.strictEqual(viewModels[1].outputSwimlanes[0].color, historyItemRefColor);\n\n\t\t// node c\n\t\tassert.strictEqual(viewModels[2].inputSwimlanes.length, 1);\n\t\tassert.strictEqual(viewModels[2].inputSwimlanes[0].id, 'c');\n\t\tassert.strictEqual(viewModels[2].inputSwimlanes[0].color, historyItemRefColor);\n\n\t\tassert.strictEqual(viewModels[2].outputSwimlanes.length, 1);\n\t\tassert.strictEqual(viewModels[2].outputSwimlanes[0].id, 'd');\n\t\tassert.strictEqual(viewModels[2].outputSwimlanes[0].color, historyItemRemoteRefColor);\n\n\t\t// node d\n\t\tassert.strictEqual(viewModels[3].inputSwimlanes.length, 1);\n\t\tassert.strictEqual(viewModels[3].inputSwimlanes[0].id, 'd');\n\t\tassert.strictEqual(viewModels[3].inputSwimlanes[0].color, historyItemRemoteRefColor);\n\n\t\tassert.strictEqual(viewModels[3].outputSwimlanes.length, 1);\n\t\tassert.strictEqual(viewModels[3].outputSwimlanes[0].id, 'e');\n\t\tassert.strictEqual(viewModels[3].outputSwimlanes[0].color, historyItemRemoteRefColor);\n\n\t\t// node e\n\t\tassert.strictEqual(viewModels[4].inputSwimlanes.length, 1);\n\t\tassert.strictEqual(viewModels[4].inputSwimlanes[0].id, 'e');\n\t\tassert.strictEqual(viewModels[4].inputSwimlanes[0].color, historyItemRemoteRefColor);\n\n\t\tassert.strictEqual(viewModels[4].outputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[4].outputSwimlanes[0].id, 'f');\n\t\tassert.strictEqual(viewModels[4].outputSwimlanes[0].color, historyItemRemoteRefColor);\n\t\tassert.strictEqual(viewModels[4].outputSwimlanes[1].id, 'g');\n\t\tassert.strictEqual(viewModels[4].outputSwimlanes[1].color, historyItemBaseRefColor);\n\n\t\t// node g\n\t\tassert.strictEqual(viewModels[5].inputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[5].inputSwimlanes[0].id, 'f');\n\t\tassert.strictEqual(viewModels[5].inputSwimlanes[0].color, historyItemRemoteRefColor);\n\t\tassert.strictEqual(viewModels[5].inputSwimlanes[1].id, 'g');\n\t\tassert.strictEqual(viewModels[5].inputSwimlanes[1].color, historyItemBaseRefColor);\n\n\t\tassert.strictEqual(viewModels[5].outputSwimlanes.length, 2);\n\t\tassert.strictEqual(viewModels[5].outputSwimlanes[0].id, 'f');\n\t\tassert.strictEqual(viewModels[5].outputSwimlanes[0].color, historyItemRemoteRefColor);\n\t\tassert.strictEqual(viewModels[5].outputSwimlanes[1].id, 'h');\n\t\tassert.strictEqual(viewModels[5].outputSwimlanes[1].color, historyItemBaseRefColor);\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
