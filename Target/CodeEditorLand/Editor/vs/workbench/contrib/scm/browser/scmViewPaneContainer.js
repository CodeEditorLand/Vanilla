var f=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var s=(c,t,r,o)=>{for(var i=o>1?void 0:o?d(t,r):t,m=c.length-1,n;m>=0;m--)(n=c[m])&&(i=(o?n(t,r,i):n(i))||i);return o&&i&&f(t,r,i),i},e=(c,t)=>(r,o)=>t(r,o,c);import"vs/css!./media/scm";import{localize as g}from"../../../../../vs/nls.js";import{IConfigurationService as h}from"../../../../../vs/platform/configuration/common/configuration.js";import{IContextMenuService as w}from"../../../../../vs/platform/contextview/browser/contextView.js";import{IInstantiationService as x}from"../../../../../vs/platform/instantiation/common/instantiation.js";import{IStorageService as V}from"../../../../../vs/platform/storage/common/storage.js";import{ITelemetryService as W}from"../../../../../vs/platform/telemetry/common/telemetry.js";import{IThemeService as T}from"../../../../../vs/platform/theme/common/themeService.js";import{IWorkspaceContextService as C}from"../../../../../vs/platform/workspace/common/workspace.js";import{ViewPaneContainer as b}from"../../../../../vs/workbench/browser/parts/views/viewPaneContainer.js";import{IViewDescriptorService as k}from"../../../../../vs/workbench/common/views.js";import{ISCMViewService as y,VIEWLET_ID as E}from"../../../../../vs/workbench/contrib/scm/common/scm.js";import{IExtensionService as L}from"../../../../../vs/workbench/services/extensions/common/extensions.js";import{IWorkbenchLayoutService as D}from"../../../../../vs/workbench/services/layout/browser/layoutService.js";let v=class extends b{constructor(r,o,i,m,n,S,I,p,u,a,l){super(E,{mergeViewWithContainerWhenSingleView:!0},m,p,o,n,i,u,S,I,a,l);this.scmViewService=r}create(r){super.create(r),r.classList.add("scm-viewlet")}getOptimalWidth(){return 400}getTitle(){return g("source control","Source Control")}getActionsContext(){return this.scmViewService.visibleRepositories.length===1?this.scmViewService.visibleRepositories[0].provider:void 0}};v=s([e(0,y),e(1,D),e(2,W),e(3,x),e(4,w),e(5,T),e(6,V),e(7,h),e(8,L),e(9,C),e(10,k)],v);export{v as SCMViewPaneContainer};
