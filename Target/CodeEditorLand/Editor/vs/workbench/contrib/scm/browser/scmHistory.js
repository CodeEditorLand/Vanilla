import{svgElem as H}from"../../../../../vs/base/browser/dom.js";import{lastOrDefault as A}from"../../../../../vs/base/common/arrays.js";import{rot as L}from"../../../../../vs/base/common/numbers.js";import{deepClone as C}from"../../../../../vs/base/common/objects.js";import{ThemeIcon as E}from"../../../../../vs/base/common/themables.js";import{localize as I}from"../../../../../vs/nls.js";import{buttonForeground as v}from"../../../../../vs/platform/theme/common/colorRegistry.js";import{chartsBlue as V,chartsGreen as N,chartsOrange as R,chartsPurple as P,chartsRed as T,chartsYellow as F}from"../../../../../vs/platform/theme/common/colors/chartsColors.js";import{asCssVariable as x,registerColor as f}from"../../../../../vs/platform/theme/common/colorUtils.js";import"../../../../../vs/workbench/contrib/scm/common/history.js";const a=22,i=11,y=4,g=5,B=f("scm.historyGraph.historyItemGroupLocal",V,I("scm.historyGraph.historyItemGroupLocal","Local history item group color.")),tt=f("scm.historyGraph.historyItemGroupRemote",P,I("scm.historyItemGroupRemote","Remote history item group color.")),et=f("scm.historyGraph.historyItemGroupBase",R,I("scm.historyItemGroupBase","Base history item group color.")),rt=f("scm.historyGraph.historyItemGroupHoverLabelForeground",v,I("scm.historyItemGroupHoverLabelForeground","History item group hover label foreground color.")),M=[f("scm.historyGraph.green",N,I("scm.historyGraph.green","The green color used in history graph.")),f("scm.historyGraph.red",T,I("scm.historyGraph.red","The red color used in history graph.")),f("scm.historyGraph.yellow",F,I("scm.historyGraph.yellow","The yellow color used in history graph."))];function G(p,t){for(const r of p.labels??[]){const o=t.get(r.title);if(o!==void 0)return o}}function w(p){const t=document.createElementNS("http://www.w3.org/2000/svg","path");return t.setAttribute("fill","none"),t.setAttribute("stroke-width","1px"),t.setAttribute("stroke-linecap","round"),t.style.stroke=x(p),t}function S(p,t,r){const o=document.createElementNS("http://www.w3.org/2000/svg","circle");return o.setAttribute("cx",`${i*(p+1)}`),o.setAttribute("cy",`${i}`),o.setAttribute("r",`${t}`),o.style.fill=x(r),o}function $(p,t,r,o){const l=w(o);return l.setAttribute("d",`M ${p} ${t} V ${r}`),l}function _(p,t){for(let r=p.length-1;r>=0;r--)if(p[r].id===t)return r;return-1}function ot(p){const t=document.createElementNS("http://www.w3.org/2000/svg","svg");t.classList.add("graph");const r=p.historyItem,o=p.inputSwimlanes,l=p.outputSwimlanes,c=o.findIndex(e=>e.id===r.id),h=c!==-1?c:o.length,m=h<l.length?l[h].color:h<o.length?o[h].color:B;let u=0;for(let e=0;e<o.length;e++){const n=o[e].color;if(o[e].id===r.id)if(e!==h){const s=[],d=w(n);s.push(`M ${i*(e+1)} 0`),s.push(`A ${i} ${i} 0 0 1 ${i*e} ${i}`),s.push(`H ${i*(h+1)}`),d.setAttribute("d",s.join(" ")),t.append(d)}else u++;else if(u<l.length&&o[e].id===l[u].id){if(e===u){const s=$(i*(e+1),0,a,n);t.append(s)}else{const s=[],d=w(n);s.push(`M ${i*(e+1)} 0`),s.push("V 6"),s.push(`A ${g} ${g} 0 0 1 ${i*(e+1)-g} ${a/2}`),s.push(`H ${i*(u+1)+g}`),s.push(`A ${g} ${g} 0 0 0 ${i*(u+1)} ${a/2+g}`),s.push(`V ${a}`),d.setAttribute("d",s.join(" ")),t.append(d)}u++}}for(let e=1;e<r.parentIds.length;e++){const n=_(l,r.parentIds[e]);if(n===-1)continue;const s=[],d=w(l[n].color);s.push(`M ${i*n} ${a/2}`),s.push(`A ${i} ${i} 0 0 1 ${i*(n+1)} ${a}`),s.push(`M ${i*n} ${a/2}`),s.push(`H ${i*(h+1)} `),d.setAttribute("d",s.join(" ")),t.append(d)}if(c!==-1){const e=$(i*(h+1),0,a/2,o[c].color);t.append(e)}if(r.parentIds.length>0){const e=$(i*(h+1),a/2,a,m);t.append(e)}if(r.parentIds.length>1){const e=S(h,y+1,m);t.append(e);const n=S(h,y-1,m);t.append(n)}else{if(r.labels?.some(n=>E.isThemeIcon(n.icon)&&n.icon.id==="target")){const n=S(h,y+2,m);t.append(n)}const e=S(h,y,m);t.append(e)}return t.style.height=`${a}px`,t.style.width=`${i*(Math.max(o.length,l.length,1)+1)}px`,t}function nt(p){const t=H("svg",{style:{height:`${a}px`,width:`${i*(p.length+1)}px`}});for(let r=0;r<p.length;r++){const o=$(i*(r+1),0,a,p[r].color);t.root.append(o)}return t.root}function st(p,t=new Map){let r=-1;const o=[];for(let l=0;l<p.length;l++){const c=p[l],m=(A(o)?.outputSwimlanes??[]).map(n=>C(n)),u=[];let e=!1;if(c.parentIds.length>0)for(const n of m){if(n.id===c.id){e||(u.push({id:c.parentIds[0],color:G(c,t)??n.color}),e=!0);continue}u.push(C(n))}for(let n=e?1:0;n<c.parentIds.length;n++){let s;if(!e)s=G(c,t);else{const d=p.find(b=>b.id===c.parentIds[n]);s=d?G(d,t):void 0}s||(r=L(r+1,M.length),s=M[r]),u.push({id:c.parentIds[n],color:s})}o.push({historyItem:c,inputSwimlanes:m,outputSwimlanes:u})}return o}export{a as SWIMLANE_HEIGHT,i as SWIMLANE_WIDTH,M as colorRegistry,et as historyItemGroupBase,rt as historyItemGroupHoverLabelForeground,B as historyItemGroupLocal,tt as historyItemGroupRemote,nt as renderSCMHistoryGraphPlaceholder,ot as renderSCMHistoryItemGraph,st as toISCMHistoryItemViewModelArray};
