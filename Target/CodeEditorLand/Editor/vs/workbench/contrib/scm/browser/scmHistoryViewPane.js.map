{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/scm/browser/scmHistoryViewPane.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './media/scm.css';\nimport * as platform from '../../../../base/common/platform.js';\nimport { $, append, h, reset } from '../../../../base/browser/dom.js';\nimport { IHoverOptions, IManagedHoverTooltipMarkdownString } from '../../../../base/browser/ui/hover/hover.js';\nimport { IHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegate.js';\nimport { IconLabel } from '../../../../base/browser/ui/iconLabel/iconLabel.js';\nimport { IIdentityProvider, IKeyboardNavigationLabelProvider, IListVirtualDelegate } from '../../../../base/browser/ui/list/list.js';\nimport { LabelFuzzyScore } from '../../../../base/browser/ui/tree/abstractTree.js';\nimport { IAsyncDataSource, ITreeContextMenuEvent, ITreeNode, ITreeRenderer } from '../../../../base/browser/ui/tree/tree.js';\nimport { fromNow } from '../../../../base/common/date.js';\nimport { createMatches, FuzzyScore, IMatch } from '../../../../base/common/filters.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable, DisposableStore, IDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, autorunWithStore, derived, IObservable, observableValue, waitForState, constObservable, latestChangedValue, observableFromEvent, runOnChange, ISettableObservable } from '../../../../base/common/observable.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { localize } from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr, IContextKey, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IHoverService, WorkbenchHoverDelegate } from '../../../../platform/hover/browser/hover.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { IOpenEvent, WorkbenchAsyncDataTree } from '../../../../platform/list/browser/listService.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { asCssVariable, ColorIdentifier, foreground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { IViewPaneOptions, ViewAction, ViewPane, ViewPaneShowActions } from '../../../browser/parts/views/viewPane.js';\nimport { IViewDescriptorService, ViewContainerLocation } from '../../../common/views.js';\nimport { renderSCMHistoryItemGraph, toISCMHistoryItemViewModelArray, SWIMLANE_WIDTH, renderSCMHistoryGraphPlaceholder, historyItemHoverDeletionsForeground, historyItemHoverLabelForeground, historyItemHoverAdditionsForeground, historyItemHoverDefaultLabelForeground, historyItemHoverDefaultLabelBackground } from './scmHistory.js';\nimport { isSCMHistoryItemLoadMoreTreeElement, isSCMHistoryItemViewModelTreeElement, isSCMRepository } from './util.js';\nimport { ISCMHistoryItem, ISCMHistoryItemRef, ISCMHistoryItemViewModel, ISCMHistoryProvider, SCMHistoryItemLoadMoreTreeElement, SCMHistoryItemViewModelTreeElement } from '../common/history.js';\nimport { HISTORY_VIEW_PANE_ID, ISCMProvider, ISCMRepository, ISCMService, ISCMViewService } from '../common/scm.js';\nimport { IListAccessibilityProvider } from '../../../../base/browser/ui/list/listWidget.js';\nimport { stripIcons } from '../../../../base/common/iconLabels.js';\nimport { IWorkbenchLayoutService, Position } from '../../../services/layout/browser/layoutService.js';\nimport { HoverPosition } from '../../../../base/browser/ui/hover/hoverWidget.js';\nimport { Action2, MenuId, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { Sequencer, Throttler } from '../../../../base/common/async.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ActionRunner, IAction, IActionRunner } from '../../../../base/common/actions.js';\nimport { delta, groupBy, tail } from '../../../../base/common/arrays.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { IProgressService } from '../../../../platform/progress/common/progress.js';\nimport { ContextKeys } from './scmViewPane.js';\nimport { IActionViewItem } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { IDropdownMenuActionViewItemOptions } from '../../../../base/browser/ui/dropdown/dropdownActionViewItem.js';\nimport { ActionViewItem } from '../../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { IQuickInputService, IQuickPickItem, IQuickPickSeparator } from '../../../../platform/quickinput/common/quickInput.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { clamp } from '../../../../base/common/numbers.js';\nimport { observableConfigValue } from '../../../../platform/observable/common/platformObservableUtils.js';\nimport { compare } from '../../../../base/common/strings.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { getDefaultHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegateFactory.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../platform/storage/common/storage.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\n\nconst PICK_REPOSITORY_ACTION_ID = 'workbench.scm.action.graph.pickRepository';\nconst PICK_HISTORY_ITEM_REFS_ACTION_ID = 'workbench.scm.action.graph.pickHistoryItemRefs';\n\ntype TreeElement = SCMHistoryItemViewModelTreeElement | SCMHistoryItemLoadMoreTreeElement;\n\nclass SCMRepositoryActionViewItem extends ActionViewItem {\n\tconstructor(private readonly _repository: ISCMRepository, action: IAction, options?: IDropdownMenuActionViewItemOptions) {\n\t\tsuper(null, action, { ...options, icon: false, label: true });\n\t}\n\n\tprotected override updateLabel(): void {\n\t\tif (this.options.label && this.label) {\n\t\t\tthis.label.classList.add('scm-graph-repository-picker');\n\n\t\t\tconst icon = $('.icon');\n\t\t\ticon.classList.add(...ThemeIcon.asClassNameArray(Codicon.repo));\n\n\t\t\tconst name = $('.name');\n\t\t\tname.textContent = this._repository.provider.name;\n\n\n\t\t\treset(this.label, icon, name);\n\t\t}\n\t}\n\n\tprotected override getTooltip(): string | undefined {\n\t\treturn this._repository.provider.name;\n\t}\n}\n\nclass SCMHistoryItemRefsActionViewItem extends ActionViewItem {\n\tconstructor(\n\t\tprivate readonly _repository: ISCMRepository,\n\t\tprivate readonly _historyItemsFilter: HistoryItemRefsFilter,\n\t\taction: IAction,\n\t\toptions?: IDropdownMenuActionViewItemOptions\n\t) {\n\t\tsuper(null, action, { ...options, icon: false, label: true });\n\t}\n\n\tprotected override updateLabel(): void {\n\t\tif (this.options.label && this.label) {\n\t\t\tthis.label.classList.add('scm-graph-history-item-picker');\n\n\t\t\tconst icon = $('.icon');\n\t\t\ticon.classList.add(...ThemeIcon.asClassNameArray(Codicon.gitBranch));\n\n\t\t\tconst name = $('.name');\n\t\t\tif (this._historyItemsFilter === 'all') {\n\t\t\t\tname.textContent = localize('all', \"All\");\n\t\t\t} else if (this._historyItemsFilter === 'auto') {\n\t\t\t\tname.textContent = localize('auto', \"Auto\");\n\t\t\t} else if (this._historyItemsFilter.length === 1) {\n\t\t\t\tname.textContent = this._historyItemsFilter[0].name;\n\t\t\t} else {\n\t\t\t\tname.textContent = localize('items', \"{0} Items\", this._historyItemsFilter.length);\n\t\t\t}\n\n\t\t\treset(this.label, icon, name);\n\t\t}\n\t}\n\n\tprotected override getTooltip(): string | undefined {\n\t\tif (this._historyItemsFilter === 'all') {\n\t\t\treturn localize('allHistoryItemRefs', \"All history item references\");\n\t\t} else if (this._historyItemsFilter === 'auto') {\n\t\t\tconst historyProvider = this._repository.provider.historyProvider.get();\n\n\t\t\treturn [\n\t\t\t\thistoryProvider?.historyItemRef.get()?.name,\n\t\t\t\thistoryProvider?.historyItemRemoteRef.get()?.name,\n\t\t\t\thistoryProvider?.historyItemBaseRef.get()?.name\n\t\t\t].filter(ref => !!ref).join(', ');\n\t\t} else if (this._historyItemsFilter.length === 1) {\n\t\t\treturn this._historyItemsFilter[0].name;\n\t\t} else {\n\t\t\treturn this._historyItemsFilter.map(ref => ref.name).join(', ');\n\t\t}\n\t}\n}\n\nregisterAction2(class extends ViewAction<SCMHistoryViewPane> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: PICK_REPOSITORY_ACTION_ID,\n\t\t\ttitle: localize('repositoryPicker', \"Repository Picker\"),\n\t\t\tviewId: HISTORY_VIEW_PANE_ID,\n\t\t\tf1: false,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.SCMHistoryTitle,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.has('scm.providerCount'), ContextKeyExpr.greater('scm.providerCount', 1)),\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 0\n\t\t\t}\n\t\t});\n\t}\n\n\tasync runInView(_: ServicesAccessor, view: SCMHistoryViewPane): Promise<void> {\n\t\tview.pickRepository();\n\t}\n});\n\nregisterAction2(class extends ViewAction<SCMHistoryViewPane> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: PICK_HISTORY_ITEM_REFS_ACTION_ID,\n\t\t\ttitle: localize('referencePicker', \"History Item Reference Picker\"),\n\t\t\ticon: Codicon.gitBranch,\n\t\t\tviewId: HISTORY_VIEW_PANE_ID,\n\t\t\tf1: false,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.SCMHistoryTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 1\n\t\t\t}\n\t\t});\n\t}\n\n\tasync runInView(_: ServicesAccessor, view: SCMHistoryViewPane): Promise<void> {\n\t\tview.pickHistoryItemRef();\n\t}\n});\n\nregisterAction2(class extends ViewAction<SCMHistoryViewPane> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.scm.action.graph.revealCurrentHistoryItem',\n\t\t\ttitle: localize('goToCurrentHistoryItem', \"Go to Current History Item\"),\n\t\t\tviewId: HISTORY_VIEW_PANE_ID,\n\t\t\tf1: false,\n\t\t\ticon: Codicon.target,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.SCMHistoryTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 2\n\t\t\t}\n\t\t});\n\t}\n\n\tasync runInView(_: ServicesAccessor, view: SCMHistoryViewPane): Promise<void> {\n\t\tview.revealCurrentHistoryItem();\n\t}\n});\n\nregisterAction2(class extends ViewAction<SCMHistoryViewPane> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.scm.action.graph.refresh',\n\t\t\ttitle: localize('refreshGraph', \"Refresh\"),\n\t\t\tviewId: HISTORY_VIEW_PANE_ID,\n\t\t\tf1: false,\n\t\t\ticon: Codicon.refresh,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.SCMHistoryTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 1000\n\t\t\t}\n\t\t});\n\t}\n\n\tasync runInView(_: ServicesAccessor, view: SCMHistoryViewPane): Promise<void> {\n\t\tview.refresh();\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.scm.action.graph.viewChanges',\n\t\t\ttitle: localize('viewChanges', \"View Changes\"),\n\t\t\tf1: false,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.SCMChangesContext,\n\t\t\t\t\tgroup: '0_view',\n\t\t\t\t\twhen: ContextKeyExpr.equals('config.multiDiffEditor.experimental.enabled', true)\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor, provider: ISCMProvider, ...historyItems: ISCMHistoryItem[]) {\n\t\tconst commandService = accessor.get(ICommandService);\n\n\t\tif (!provider || historyItems.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst historyItem = historyItems[0];\n\t\tconst historyItemLast = historyItems[historyItems.length - 1];\n\t\tconst historyProvider = provider.historyProvider.get();\n\n\t\tif (historyItems.length > 1) {\n\t\t\tconst ancestor = await historyProvider?.resolveHistoryItemRefsCommonAncestor([historyItem.id, historyItemLast.id]);\n\t\t\tif (!ancestor || (ancestor !== historyItem.id && ancestor !== historyItemLast.id)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst historyItemParentId = historyItemLast.parentIds.length > 0 ? historyItemLast.parentIds[0] : undefined;\n\t\tconst historyItemChanges = await historyProvider?.provideHistoryItemChanges(historyItem.id, historyItemParentId);\n\n\t\tif (!historyItemChanges?.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst title = historyItems.length === 1 ?\n\t\t\t`${historyItems[0].displayId ?? historyItems[0].id} - ${historyItems[0].message}` :\n\t\t\tlocalize('historyItemChangesEditorTitle', \"All Changes ({0} \u2194 {1})\", historyItemLast.displayId ?? historyItemLast.id, historyItem.displayId ?? historyItem.id);\n\n\t\tconst rootUri = provider.rootUri;\n\t\tconst path = rootUri ? rootUri.path : provider.label;\n\t\tconst multiDiffSourceUri = URI.from({ scheme: 'scm-history-item', path: `${path}/${historyItemParentId}..${historyItem.id}` }, true);\n\n\t\tcommandService.executeCommand('_workbench.openMultiDiffEditor', { title, multiDiffSourceUri, resources: historyItemChanges });\n\t}\n});\n\nclass ListDelegate implements IListVirtualDelegate<TreeElement> {\n\n\tgetHeight(): number {\n\t\treturn 22;\n\t}\n\n\tgetTemplateId(element: TreeElement): string {\n\t\tif (isSCMHistoryItemViewModelTreeElement(element)) {\n\t\t\treturn HistoryItemRenderer.TEMPLATE_ID;\n\t\t} else if (isSCMHistoryItemLoadMoreTreeElement(element)) {\n\t\t\treturn HistoryItemLoadMoreRenderer.TEMPLATE_ID;\n\t\t} else {\n\t\t\tthrow new Error('Unknown element');\n\t\t}\n\t}\n}\n\ninterface HistoryItemTemplate {\n\treadonly element: HTMLElement;\n\treadonly label: IconLabel;\n\treadonly graphContainer: HTMLElement;\n\treadonly labelContainer: HTMLElement;\n\treadonly elementDisposables: DisposableStore;\n\treadonly disposables: IDisposable;\n}\n\nclass HistoryItemRenderer implements ITreeRenderer<SCMHistoryItemViewModelTreeElement, LabelFuzzyScore, HistoryItemTemplate> {\n\n\tstatic readonly TEMPLATE_ID = 'history-item';\n\tget templateId(): string { return HistoryItemRenderer.TEMPLATE_ID; }\n\n\tprivate readonly _badgesConfig = observableConfigValue<'all' | 'filter'>('scm.graph.badges', 'filter', this._configurationService);\n\n\tconstructor(\n\t\tprivate readonly hoverDelegate: IHoverDelegate,\n\t\t@IClipboardService private readonly _clipboardService: IClipboardService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IHoverService private readonly _hoverService: IHoverService,\n\t\t@IThemeService private readonly _themeService: IThemeService\n\t) { }\n\n\trenderTemplate(container: HTMLElement): HistoryItemTemplate {\n\t\t// hack\n\t\t(container.parentElement!.parentElement!.querySelector('.monaco-tl-twistie')! as HTMLElement).classList.add('force-no-twistie');\n\n\t\tconst element = append(container, $('.history-item'));\n\t\tconst graphContainer = append(element, $('.graph-container'));\n\t\tconst iconLabel = new IconLabel(element, { supportIcons: true, supportHighlights: true, supportDescriptionHighlights: true });\n\n\t\tconst labelContainer = append(element, $('.label-container'));\n\t\telement.appendChild(labelContainer);\n\n\t\treturn { element, graphContainer, label: iconLabel, labelContainer, elementDisposables: new DisposableStore(), disposables: new DisposableStore() };\n\t}\n\n\trenderElement(node: ITreeNode<SCMHistoryItemViewModelTreeElement, LabelFuzzyScore>, index: number, templateData: HistoryItemTemplate, height: number | undefined): void {\n\t\tconst historyItemViewModel = node.element.historyItemViewModel;\n\t\tconst historyItem = historyItemViewModel.historyItem;\n\n\t\tconst historyItemHover = this._hoverService.setupManagedHover(this.hoverDelegate, templateData.element, this._getHoverContent(node.element), {\n\t\t\tactions: this._getHoverActions(historyItem),\n\t\t});\n\t\ttemplateData.elementDisposables.add(historyItemHover);\n\n\t\ttemplateData.graphContainer.textContent = '';\n\t\ttemplateData.graphContainer.classList.toggle('current', historyItemViewModel.isCurrent);\n\t\ttemplateData.graphContainer.appendChild(renderSCMHistoryItemGraph(historyItemViewModel));\n\n\t\tconst provider = node.element.repository.provider;\n\t\tconst historyItemRef = provider.historyProvider.get()?.historyItemRef?.get();\n\t\tconst extraClasses = historyItemRef?.revision === historyItem.id ? ['history-item-current'] : [];\n\t\tconst [matches, descriptionMatches] = this._processMatches(historyItemViewModel, node.filterData);\n\t\ttemplateData.label.setLabel(historyItem.subject, historyItem.author, { matches, descriptionMatches, extraClasses });\n\n\t\tthis._renderBadges(historyItem, templateData);\n\t}\n\n\tprivate _renderBadges(historyItem: ISCMHistoryItem, templateData: HistoryItemTemplate): void {\n\t\ttemplateData.elementDisposables.add(autorun(reader => {\n\t\t\tconst labelConfig = this._badgesConfig.read(reader);\n\n\t\t\ttemplateData.labelContainer.textContent = '';\n\t\t\tconst firstColoredRef = historyItem.references?.find(ref => ref.color);\n\n\t\t\tfor (const ref of historyItem.references ?? []) {\n\t\t\t\tif (!ref.color && labelConfig === 'filter') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (ref.icon && ThemeIcon.isThemeIcon(ref.icon)) {\n\t\t\t\t\tconst elements = h('div.label', {\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tcolor: ref.color ? asCssVariable(historyItemHoverLabelForeground) : asCssVariable(foreground),\n\t\t\t\t\t\t\tbackgroundColor: ref.color ? asCssVariable(ref.color) : asCssVariable(historyItemHoverDefaultLabelBackground)\n\t\t\t\t\t\t}\n\t\t\t\t\t}, [\n\t\t\t\t\t\th('div.icon@icon'),\n\t\t\t\t\t\th('div.description@description')\n\t\t\t\t\t]);\n\n\t\t\t\t\telements.icon.classList.add(...ThemeIcon.asClassNameArray(ref.icon));\n\n\t\t\t\t\telements.description.textContent = ref.name;\n\t\t\t\t\telements.description.style.display = ref === firstColoredRef ? '' : 'none';\n\n\t\t\t\t\tappend(templateData.labelContainer, elements.root);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _getHoverActions(historyItem: ISCMHistoryItem) {\n\t\treturn [\n\t\t\t{\n\t\t\t\tcommandId: 'workbench.scm.action.graph.copyHistoryItemId',\n\t\t\t\ticonClass: 'codicon.codicon-copy',\n\t\t\t\tlabel: historyItem.displayId ?? historyItem.id,\n\t\t\t\trun: () => this._clipboardService.writeText(historyItem.id)\n\t\t\t},\n\t\t\t{\n\t\t\t\tcommandId: 'workbench.scm.action.graph.copyHistoryItemMessage',\n\t\t\t\ticonClass: 'codicon.codicon-copy',\n\t\t\t\tlabel: localize('historyItemMessage', \"Message\"),\n\t\t\t\trun: () => this._clipboardService.writeText(historyItem.message)\n\t\t\t}\n\t\t];\n\t}\n\n\tprivate _getHoverContent(element: SCMHistoryItemViewModelTreeElement): IManagedHoverTooltipMarkdownString {\n\t\tconst colorTheme = this._themeService.getColorTheme();\n\t\tconst historyItem = element.historyItemViewModel.historyItem;\n\n\t\tconst markdown = new MarkdownString('', { isTrusted: true, supportThemeIcons: true });\n\t\t// markdown.appendMarkdown(`$(git-commit) \\`${historyItem.displayId ?? historyItem.id}\\`\\n\\n`);\n\n\t\tif (historyItem.author) {\n\t\t\tmarkdown.appendMarkdown(`$(account) **${historyItem.author}**`);\n\n\t\t\tif (historyItem.timestamp) {\n\t\t\t\tconst dateFormatter = new Intl.DateTimeFormat(platform.language, { year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' });\n\t\t\t\tmarkdown.appendMarkdown(`, $(history) ${fromNow(historyItem.timestamp, true, true)} (${dateFormatter.format(historyItem.timestamp)})`);\n\t\t\t}\n\n\t\t\tmarkdown.appendMarkdown('\\n\\n');\n\t\t}\n\n\t\tmarkdown.appendMarkdown(`${historyItem.message}\\n\\n`);\n\n\t\tif (historyItem.statistics) {\n\t\t\tmarkdown.appendMarkdown(`---\\n\\n`);\n\n\t\t\tmarkdown.appendMarkdown(`<span>${historyItem.statistics.files === 1 ?\n\t\t\t\tlocalize('fileChanged', \"{0} file changed\", historyItem.statistics.files) :\n\t\t\t\tlocalize('filesChanged', \"{0} files changed\", historyItem.statistics.files)}</span>`);\n\n\t\t\tif (historyItem.statistics.insertions) {\n\t\t\t\tconst additionsForegroundColor = colorTheme.getColor(historyItemHoverAdditionsForeground);\n\t\t\t\tmarkdown.appendMarkdown(`,&nbsp;<span style=\"color:${additionsForegroundColor};\">${historyItem.statistics.insertions === 1 ?\n\t\t\t\t\tlocalize('insertion', \"{0} insertion{1}\", historyItem.statistics.insertions, '(+)') :\n\t\t\t\t\tlocalize('insertions', \"{0} insertions{1}\", historyItem.statistics.insertions, '(+)')}</span>`);\n\t\t\t}\n\n\t\t\tif (historyItem.statistics.deletions) {\n\t\t\t\tconst deletionsForegroundColor = colorTheme.getColor(historyItemHoverDeletionsForeground);\n\t\t\t\tmarkdown.appendMarkdown(`,&nbsp;<span style=\"color:${deletionsForegroundColor};\">${historyItem.statistics.deletions === 1 ?\n\t\t\t\t\tlocalize('deletion', \"{0} deletion{1}\", historyItem.statistics.deletions, '(-)') :\n\t\t\t\t\tlocalize('deletions', \"{0} deletions{1}\", historyItem.statistics.deletions, '(-)')}</span>`);\n\t\t\t}\n\t\t}\n\n\t\tif ((historyItem.references ?? []).length > 0) {\n\t\t\tmarkdown.appendMarkdown(`\\n\\n---\\n\\n`);\n\t\t\tmarkdown.appendMarkdown((historyItem.references ?? []).map(ref => {\n\t\t\t\tconst labelIconId = ThemeIcon.isThemeIcon(ref.icon) ? ref.icon.id : '';\n\n\t\t\t\tconst labelBackgroundColor = ref.color ? asCssVariable(ref.color) : asCssVariable(historyItemHoverDefaultLabelBackground);\n\t\t\t\tconst labelForegroundColor = ref.color ? asCssVariable(historyItemHoverLabelForeground) : asCssVariable(historyItemHoverDefaultLabelForeground);\n\n\t\t\t\treturn `<span style=\"color:${labelForegroundColor};background-color:${labelBackgroundColor};border-radius:2px;\">&nbsp;$(${labelIconId})&nbsp;${ref.name}&nbsp;</span>`;\n\t\t\t}).join('&nbsp;&nbsp;'));\n\t\t}\n\n\t\treturn { markdown, markdownNotSupportedFallback: historyItem.message };\n\t}\n\n\tprivate _processMatches(historyItemViewModel: ISCMHistoryItemViewModel, filterData: LabelFuzzyScore | undefined): [IMatch[] | undefined, IMatch[] | undefined] {\n\t\tif (!filterData) {\n\t\t\treturn [undefined, undefined];\n\t\t}\n\n\t\treturn [\n\t\t\thistoryItemViewModel.historyItem.message === filterData.label ? createMatches(filterData.score) : undefined,\n\t\t\thistoryItemViewModel.historyItem.author === filterData.label ? createMatches(filterData.score) : undefined\n\t\t];\n\t}\n\n\tdisposeElement(element: ITreeNode<SCMHistoryItemViewModelTreeElement, LabelFuzzyScore>, index: number, templateData: HistoryItemTemplate, height: number | undefined): void {\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: HistoryItemTemplate): void {\n\t\ttemplateData.disposables.dispose();\n\t}\n}\n\ninterface LoadMoreTemplate {\n\treadonly element: HTMLElement;\n\treadonly graphPlaceholder: HTMLElement;\n\treadonly historyItemPlaceholderContainer: HTMLElement;\n\treadonly historyItemPlaceholderLabel: IconLabel;\n\treadonly elementDisposables: DisposableStore;\n\treadonly disposables: IDisposable;\n}\n\nclass HistoryItemLoadMoreRenderer implements ITreeRenderer<SCMHistoryItemLoadMoreTreeElement, void, LoadMoreTemplate> {\n\n\tstatic readonly TEMPLATE_ID = 'historyItemLoadMore';\n\tget templateId(): string { return HistoryItemLoadMoreRenderer.TEMPLATE_ID; }\n\n\tconstructor(\n\t\tprivate readonly _loadingMore: () => IObservable<boolean>,\n\t\tprivate readonly _loadMoreCallback: (repository: ISCMRepository) => void,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService\n\t) { }\n\n\trenderTemplate(container: HTMLElement): LoadMoreTemplate {\n\t\t// hack\n\t\t(container.parentElement!.parentElement!.querySelector('.monaco-tl-twistie')! as HTMLElement).classList.add('force-no-twistie');\n\n\t\tconst element = append(container, $('.history-item-load-more'));\n\t\tconst graphPlaceholder = append(element, $('.graph-placeholder'));\n\t\tconst historyItemPlaceholderContainer = append(element, $('.history-item-placeholder'));\n\t\tconst historyItemPlaceholderLabel = new IconLabel(historyItemPlaceholderContainer, { supportIcons: true });\n\n\t\treturn { element, graphPlaceholder, historyItemPlaceholderContainer, historyItemPlaceholderLabel, elementDisposables: new DisposableStore(), disposables: new DisposableStore() };\n\t}\n\n\trenderElement(element: ITreeNode<SCMHistoryItemLoadMoreTreeElement, void>, index: number, templateData: LoadMoreTemplate, height: number | undefined): void {\n\t\ttemplateData.graphPlaceholder.textContent = '';\n\t\ttemplateData.graphPlaceholder.style.width = `${SWIMLANE_WIDTH * (element.element.graphColumns.length + 1)}px`;\n\t\ttemplateData.graphPlaceholder.appendChild(renderSCMHistoryGraphPlaceholder(element.element.graphColumns));\n\n\t\tconst pageOnScroll = this._configurationService.getValue<boolean>('scm.graph.pageOnScroll') === true;\n\t\ttemplateData.historyItemPlaceholderContainer.classList.toggle('shimmer', pageOnScroll);\n\n\t\tif (pageOnScroll) {\n\t\t\ttemplateData.historyItemPlaceholderLabel.setLabel('');\n\t\t\tthis._loadMoreCallback(element.element.repository);\n\t\t} else {\n\t\t\ttemplateData.elementDisposables.add(autorun(reader => {\n\t\t\t\tconst loadingMore = this._loadingMore().read(reader);\n\t\t\t\tconst icon = `$(${loadingMore ? 'loading~spin' : 'fold-down'})`;\n\n\t\t\t\ttemplateData.historyItemPlaceholderLabel.setLabel(localize('loadMore', \"{0} Load More...\", icon));\n\t\t\t}));\n\t\t}\n\t}\n\n\tdisposeElement(element: ITreeNode<SCMHistoryItemLoadMoreTreeElement, void>, index: number, templateData: LoadMoreTemplate, height: number | undefined): void {\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: LoadMoreTemplate): void {\n\t\ttemplateData.disposables.dispose();\n\t}\n}\n\nclass HistoryItemHoverDelegate extends WorkbenchHoverDelegate {\n\tconstructor(\n\t\tprivate readonly _viewContainerLocation: ViewContainerLocation | null,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IHoverService hoverService: IHoverService,\n\n\t) {\n\t\tsuper('element', true, () => this.getHoverOptions(), configurationService, hoverService);\n\t}\n\n\tprivate getHoverOptions(): Partial<IHoverOptions> {\n\t\tconst sideBarPosition = this.layoutService.getSideBarPosition();\n\n\t\tlet hoverPosition: HoverPosition;\n\t\tif (this._viewContainerLocation === ViewContainerLocation.Sidebar) {\n\t\t\thoverPosition = sideBarPosition === Position.LEFT ? HoverPosition.RIGHT : HoverPosition.LEFT;\n\t\t} else if (this._viewContainerLocation === ViewContainerLocation.AuxiliaryBar) {\n\t\t\thoverPosition = sideBarPosition === Position.LEFT ? HoverPosition.LEFT : HoverPosition.RIGHT;\n\t\t} else {\n\t\t\thoverPosition = HoverPosition.RIGHT;\n\t\t}\n\n\t\treturn { additionalClasses: ['history-item-hover'], position: { hoverPosition, forcePosition: true } };\n\t}\n}\n\nclass SCMHistoryViewPaneActionRunner extends ActionRunner {\n\tconstructor(@IProgressService private readonly _progressService: IProgressService) {\n\t\tsuper();\n\t}\n\n\tprotected override runAction(action: IAction, context?: unknown): Promise<void> {\n\t\treturn this._progressService.withProgress({ location: HISTORY_VIEW_PANE_ID },\n\t\t\tasync () => await super.runAction(action, context));\n\t}\n}\n\nclass SCMHistoryTreeAccessibilityProvider implements IListAccessibilityProvider<TreeElement> {\n\n\tgetWidgetAriaLabel(): string {\n\t\treturn localize('scm history', \"Source Control History\");\n\t}\n\n\tgetAriaLabel(element: TreeElement): string {\n\t\tif (isSCMRepository(element)) {\n\t\t\treturn `${element.provider.name} ${element.provider.label}`;\n\t\t} else if (isSCMHistoryItemViewModelTreeElement(element)) {\n\t\t\tconst historyItem = element.historyItemViewModel.historyItem;\n\t\t\treturn `${stripIcons(historyItem.message).trim()}${historyItem.author ? `, ${historyItem.author}` : ''}`;\n\t\t} else {\n\t\t\treturn '';\n\t\t}\n\t}\n}\n\nclass SCMHistoryTreeIdentityProvider implements IIdentityProvider<TreeElement> {\n\n\tgetId(element: TreeElement): string {\n\t\tif (isSCMRepository(element)) {\n\t\t\tconst provider = element.provider;\n\t\t\treturn `repo:${provider.id}`;\n\t\t} else if (isSCMHistoryItemViewModelTreeElement(element)) {\n\t\t\tconst provider = element.repository.provider;\n\t\t\tconst historyItem = element.historyItemViewModel.historyItem;\n\t\t\treturn `historyItem:${provider.id}/${historyItem.id}/${historyItem.parentIds.join(',')}`;\n\t\t} else if (isSCMHistoryItemLoadMoreTreeElement(element)) {\n\t\t\tconst provider = element.repository.provider;\n\t\t\treturn `historyItemLoadMore:${provider.id}}`;\n\t\t} else {\n\t\t\tthrow new Error('Invalid tree element');\n\t\t}\n\t}\n}\n\nclass SCMHistoryTreeKeyboardNavigationLabelProvider implements IKeyboardNavigationLabelProvider<TreeElement> {\n\tgetKeyboardNavigationLabel(element: TreeElement): { toString(): string } | { toString(): string }[] | undefined {\n\t\tif (isSCMRepository(element)) {\n\t\t\treturn undefined;\n\t\t} else if (isSCMHistoryItemViewModelTreeElement(element)) {\n\t\t\t// For a history item we want to match both the message and\n\t\t\t// the author. A match in the message takes precedence over\n\t\t\t// a match in the author.\n\t\t\treturn [element.historyItemViewModel.historyItem.message, element.historyItemViewModel.historyItem.author];\n\t\t} else if (isSCMHistoryItemLoadMoreTreeElement(element)) {\n\t\t\t// We don't want to match the load more element\n\t\t\treturn '';\n\t\t} else {\n\t\t\tthrow new Error('Invalid tree element');\n\t\t}\n\t}\n}\n\nclass SCMHistoryTreeDataSource extends Disposable implements IAsyncDataSource<SCMHistoryViewModel, TreeElement> {\n\n\tasync getChildren(inputOrElement: SCMHistoryViewModel | TreeElement): Promise<Iterable<TreeElement>> {\n\t\tif (!(inputOrElement instanceof SCMHistoryViewModel)) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// History items\n\t\tconst children: TreeElement[] = [];\n\t\tconst historyItems = await inputOrElement.getHistoryItems();\n\t\tchildren.push(...historyItems);\n\n\t\t// Load More element\n\t\tconst repository = inputOrElement.repository.get();\n\t\tconst lastHistoryItem = tail(historyItems);\n\t\tif (repository && lastHistoryItem && lastHistoryItem.historyItemViewModel.outputSwimlanes.length > 0) {\n\t\t\tchildren.push({\n\t\t\t\trepository,\n\t\t\t\tgraphColumns: lastHistoryItem.historyItemViewModel.outputSwimlanes,\n\t\t\t\ttype: 'historyItemLoadMore'\n\t\t\t} satisfies SCMHistoryItemLoadMoreTreeElement);\n\t\t}\n\n\t\treturn children;\n\t}\n\n\thasChildren(inputOrElement: SCMHistoryViewModel | TreeElement): boolean {\n\t\treturn inputOrElement instanceof SCMHistoryViewModel;\n\t}\n}\n\ntype HistoryItemRefsFilter = 'all' | 'auto' | ISCMHistoryItemRef[];\ntype HistoryItemState = {\n\thistoryItemRefs: ISCMHistoryItemRef[];\n\tviewModels: SCMHistoryItemViewModelTreeElement[];\n\tloadMore: boolean | string;\n};\n\nclass SCMHistoryViewModel extends Disposable {\n\n\tprivate readonly _closedRepository = observableFromEvent(\n\t\tthis,\n\t\tthis._scmService.onDidRemoveRepository,\n\t\trepository => repository);\n\n\tprivate readonly _firstRepository = this._scmService.repositoryCount > 0 ?\n\t\tconstObservable(Iterable.first(this._scmService.repositories)) :\n\t\tobservableFromEvent(\n\t\t\tthis,\n\t\t\tEvent.once(this._scmService.onDidAddRepository),\n\t\t\trepository => repository\n\t\t);\n\n\tprivate readonly _selectedRepository = observableValue<'auto' | ISCMRepository>(this, 'auto');\n\n\tprivate readonly _graphRepository = derived(reader => {\n\t\tconst selectedRepository = this._selectedRepository.read(reader);\n\t\tif (selectedRepository !== 'auto') {\n\t\t\treturn selectedRepository;\n\t\t}\n\n\t\treturn this._scmViewService.activeRepository.read(reader);\n\t});\n\n\t/**\n\t * The active | selected repository takes precedence over the first repository when the observable\n\t * values are updated in the same transaction (or during the initial read of the observable value).\n\t */\n\treadonly repository = latestChangedValue(this, [this._firstRepository, this._graphRepository]);\n\treadonly historyItemsFilter: ISettableObservable<HistoryItemRefsFilter>;\n\n\tprivate readonly _state = new Map<ISCMRepository, HistoryItemState>();\n\n\tconstructor(\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@ISCMService private readonly _scmService: ISCMService,\n\t\t@ISCMViewService private readonly _scmViewService: ISCMViewService,\n\t\t@IStorageService private readonly _storageService: IStorageService\n\t) {\n\t\tsuper();\n\n\t\ttry {\n\t\t\t// Restore references filter from workspace storage\n\t\t\tconst filterData = this._storageService.get('scm.graphView.referencesFiler', StorageScope.WORKSPACE) ?? 'auto';\n\t\t\tconst filter = filterData === 'auto' || filterData === 'all' ? filterData : JSON.parse(filterData) as ISCMHistoryItemRef[];\n\n\t\t\tthis.historyItemsFilter = observableValue<HistoryItemRefsFilter>(this, filter);\n\t\t} catch {\n\t\t\t// Default to `auto` in case the storage value is invalid\n\t\t\tthis.historyItemsFilter = observableValue<HistoryItemRefsFilter>(this, 'auto');\n\t\t}\n\n\t\t// Closed repository cleanup\n\t\tthis._register(autorun(reader => {\n\t\t\tconst repository = this._closedRepository.read(reader);\n\t\t\tif (!repository) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.repository.get() === repository) {\n\t\t\t\tthis._selectedRepository.set(Iterable.first(this._scmService.repositories) ?? 'auto', undefined);\n\t\t\t}\n\n\t\t\tthis._state.delete(repository);\n\t\t}));\n\t}\n\n\tclearRepositoryState(): void {\n\t\tconst repository = this.repository.get();\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._state.delete(repository);\n\t}\n\n\tgetRepositoryState(): HistoryItemState | undefined {\n\t\tconst repository = this.repository.get();\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this._state.get(repository);\n\t}\n\n\tsetLoadMore(repository: ISCMRepository, loadMore: boolean | string): void {\n\t\tconst state = this._state.get(repository);\n\t\tif (!state) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._state.set(repository, { ...state, loadMore });\n\t}\n\n\tasync getHistoryItems(): Promise<SCMHistoryItemViewModelTreeElement[]> {\n\t\tconst repository = this.repository.get();\n\t\tconst historyProvider = repository?.provider.historyProvider.get();\n\n\t\tif (!repository || !historyProvider) {\n\t\t\treturn [];\n\t\t}\n\n\t\tlet state = this._state.get(repository);\n\n\t\tif (!state || state.loadMore !== false) {\n\t\t\tlet historyItemRefs = state?.historyItemRefs;\n\t\t\tconst historyItems = state?.viewModels\n\t\t\t\t.map(vm => vm.historyItemViewModel.historyItem) ?? [];\n\n\t\t\tif (!historyItemRefs) {\n\t\t\t\tconst historyItemsFilter = this.historyItemsFilter.get();\n\n\t\t\t\tswitch (historyItemsFilter) {\n\t\t\t\t\tcase 'all':\n\t\t\t\t\t\thistoryItemRefs = await historyProvider.provideHistoryItemRefs() ?? [];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'auto':\n\t\t\t\t\t\thistoryItemRefs = [\n\t\t\t\t\t\t\thistoryProvider.historyItemRef.get(),\n\t\t\t\t\t\t\thistoryProvider.historyItemRemoteRef.get(),\n\t\t\t\t\t\t\thistoryProvider.historyItemBaseRef.get(),\n\t\t\t\t\t\t].filter(ref => !!ref);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\thistoryItemRefs = historyItemsFilter;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst limit = clamp(this._configurationService.getValue<number>('scm.graph.pageSize'), 1, 1000);\n\t\t\tconst historyItemRefIds = historyItemRefs.map(ref => ref.revision ?? ref.id);\n\n\t\t\tdo {\n\t\t\t\t// Fetch the next page of history items\n\t\t\t\thistoryItems.push(...(await historyProvider.provideHistoryItems({\n\t\t\t\t\thistoryItemRefs: historyItemRefIds, limit, skip: historyItems.length\n\t\t\t\t}) ?? []));\n\t\t\t} while (typeof state?.loadMore === 'string' && !historyItems.find(item => item.id === state?.loadMore));\n\n\t\t\t// Create the color map\n\t\t\tconst colorMap = this._getGraphColorMap(historyItemRefs);\n\n\t\t\tconst viewModels = toISCMHistoryItemViewModelArray(historyItems, colorMap, historyProvider.historyItemRef.get())\n\t\t\t\t.map(historyItemViewModel => ({\n\t\t\t\t\trepository,\n\t\t\t\t\thistoryItemViewModel,\n\t\t\t\t\ttype: 'historyItemViewModel'\n\t\t\t\t}) satisfies SCMHistoryItemViewModelTreeElement);\n\n\t\t\tstate = { historyItemRefs, viewModels, loadMore: false };\n\t\t\tthis._state.set(repository, state);\n\t\t}\n\n\t\treturn state.viewModels;\n\t}\n\n\tsetRepository(repository: ISCMRepository | 'auto'): void {\n\t\tthis._selectedRepository.set(repository, undefined);\n\t}\n\n\tsetHistoryItemsFilter(filter: 'all' | 'auto' | ISCMHistoryItemRef[]): void {\n\t\tthis._storageService.store('scm.graphView.referencesFiler', filter, StorageScope.WORKSPACE, StorageTarget.USER);\n\t\tthis.historyItemsFilter.set(filter, undefined);\n\t}\n\n\tprivate _getGraphColorMap(historyItemRefs: ISCMHistoryItemRef[]): Map<string, ColorIdentifier | undefined> {\n\t\tconst repository = this.repository.get();\n\t\tconst historyProvider = repository?.provider.historyProvider.get();\n\t\tconst historyItemRef = historyProvider?.historyItemRef.get();\n\t\tconst historyItemRemoteRef = historyProvider?.historyItemRemoteRef.get();\n\t\tconst historyItemBaseRef = historyProvider?.historyItemBaseRef.get();\n\n\t\tconst colorMap = new Map<string, ColorIdentifier | undefined>();\n\n\t\tif (historyItemRef) {\n\t\t\tcolorMap.set(historyItemRef.id, historyItemRef.color);\n\n\t\t\tif (historyItemRemoteRef) {\n\t\t\t\tcolorMap.set(historyItemRemoteRef.id, historyItemRemoteRef.color);\n\t\t\t}\n\t\t\tif (historyItemBaseRef) {\n\t\t\t\tcolorMap.set(historyItemBaseRef.id, historyItemBaseRef.color);\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining history item references to the color map\n\t\t// if not already present. These history item references will\n\t\t// be colored using the color of the history item to which they\n\t\t// point to.\n\t\tfor (const ref of historyItemRefs) {\n\t\t\tif (!colorMap.has(ref.id)) {\n\t\t\t\tcolorMap.set(ref.id, undefined);\n\t\t\t}\n\t\t}\n\n\t\treturn colorMap;\n\t}\n\n\toverride dispose(): void {\n\t\tthis._state.clear();\n\t\tsuper.dispose();\n\t}\n}\n\ntype RepositoryQuickPickItem = IQuickPickItem & { repository: 'auto' | ISCMRepository };\n\nclass RepositoryPicker extends Disposable {\n\tprivate readonly _autoQuickPickItem: RepositoryQuickPickItem = {\n\t\tlabel: localize('auto', \"Auto\"),\n\t\tdescription: localize('activeRepository', \"Show the source control graph for the active repository\"),\n\t\trepository: 'auto'\n\t};\n\n\tconstructor(\n\t\t@IQuickInputService private readonly _quickInputService: IQuickInputService,\n\t\t@ISCMViewService private readonly _scmViewService: ISCMViewService\n\t) {\n\t\tsuper();\n\t}\n\n\tasync pickRepository(): Promise<RepositoryQuickPickItem | undefined> {\n\t\tconst picks: (RepositoryQuickPickItem | IQuickPickSeparator)[] = [\n\t\t\tthis._autoQuickPickItem,\n\t\t\t{ type: 'separator' }];\n\n\t\tpicks.push(...this._scmViewService.repositories.map(r => ({\n\t\t\tlabel: r.provider.name,\n\t\t\tdescription: r.provider.rootUri?.fsPath,\n\t\t\ticonClass: ThemeIcon.asClassName(Codicon.repo),\n\t\t\trepository: r\n\t\t})));\n\n\t\treturn this._quickInputService.pick(picks, {\n\t\t\tplaceHolder: localize('scmGraphRepository', \"Select the repository to view, type to filter all repositories\")\n\t\t});\n\t}\n}\n\ntype HistoryItemRefQuickPickItem = IQuickPickItem & { historyItemRef: 'all' | 'auto' | ISCMHistoryItemRef };\n\nclass HistoryItemRefPicker extends Disposable {\n\tprivate readonly _allQuickPickItem: HistoryItemRefQuickPickItem = {\n\t\tid: 'all',\n\t\tlabel: localize('all', \"All\"),\n\t\tdescription: localize('allHistoryItemRefs', \"All history item references\"),\n\t\thistoryItemRef: 'all'\n\t};\n\n\tprivate readonly _autoQuickPickItem: HistoryItemRefQuickPickItem = {\n\t\tid: 'auto',\n\t\tlabel: localize('auto', \"Auto\"),\n\t\tdescription: localize('currentHistoryItemRef', \"Current history item reference(s)\"),\n\t\thistoryItemRef: 'auto'\n\t};\n\n\tconstructor(\n\t\tprivate readonly _historyProvider: ISCMHistoryProvider,\n\t\tprivate readonly _historyItemsFilter: 'all' | 'auto' | ISCMHistoryItemRef[],\n\t\t@IQuickInputService private readonly _quickInputService: IQuickInputService,\n\t) {\n\t\tsuper();\n\t}\n\n\tasync pickHistoryItemRef(): Promise<'all' | 'auto' | ISCMHistoryItemRef[] | undefined> {\n\t\tconst quickPick = this._quickInputService.createQuickPick<HistoryItemRefQuickPickItem>({ useSeparators: true });\n\t\tthis._store.add(quickPick);\n\n\t\tquickPick.placeholder = localize('scmGraphHistoryItemRef', \"Select one/more history item references to view, type to filter\");\n\t\tquickPick.canSelectMany = true;\n\t\tquickPick.hideCheckAll = true;\n\t\tquickPick.busy = true;\n\t\tquickPick.show();\n\n\t\tconst items = await this._createQuickPickItems();\n\n\t\t// Set initial selection\n\t\tlet selectedItems: HistoryItemRefQuickPickItem[] = [];\n\t\tif (this._historyItemsFilter === 'all') {\n\t\t\tselectedItems.push(this._allQuickPickItem);\n\t\t} else if (this._historyItemsFilter === 'auto') {\n\t\t\tselectedItems.push(this._autoQuickPickItem);\n\t\t} else {\n\t\t\tlet index = 0;\n\t\t\twhile (index < items.length) {\n\t\t\t\tif (items[index].type === 'separator') {\n\t\t\t\t\tindex++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (this._historyItemsFilter.some(ref => ref.id === items[index].id)) {\n\t\t\t\t\tconst item = items.splice(index, 1) as HistoryItemRefQuickPickItem[];\n\t\t\t\t\tselectedItems.push(...item);\n\t\t\t\t} else {\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Insert the selected items after `All` and `Auto`\n\t\t\titems.splice(2, 0, { type: 'separator' }, ...selectedItems);\n\t\t}\n\n\t\tquickPick.items = items;\n\t\tquickPick.selectedItems = selectedItems;\n\t\tquickPick.busy = false;\n\n\t\treturn new Promise<'all' | 'auto' | ISCMHistoryItemRef[] | undefined>(resolve => {\n\t\t\tthis._store.add(quickPick.onDidChangeSelection(items => {\n\t\t\t\tconst { added } = delta(selectedItems, items, (a, b) => compare(a.id ?? '', b.id ?? ''));\n\t\t\t\tif (added.length > 0) {\n\t\t\t\t\tif (added[0].historyItemRef === 'all' || added[0].historyItemRef === 'auto') {\n\t\t\t\t\t\tquickPick.selectedItems = [added[0]];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Remove 'all' and 'auto' items if present\n\t\t\t\t\t\tquickPick.selectedItems = [...quickPick.selectedItems\n\t\t\t\t\t\t\t.filter(i => i.historyItemRef !== 'all' && i.historyItemRef !== 'auto')];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tselectedItems = [...quickPick.selectedItems];\n\t\t\t}));\n\n\t\t\tthis._store.add(quickPick.onDidAccept(() => {\n\t\t\t\tif (selectedItems.length === 0) {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t} else if (selectedItems.length === 1 && selectedItems[0].historyItemRef === 'all') {\n\t\t\t\t\tresolve('all');\n\t\t\t\t} else if (selectedItems.length === 1 && selectedItems[0].historyItemRef === 'auto') {\n\t\t\t\t\tresolve('auto');\n\t\t\t\t} else {\n\t\t\t\t\tresolve(selectedItems.map(item => item.historyItemRef) as ISCMHistoryItemRef[]);\n\t\t\t\t}\n\n\t\t\t\tquickPick.hide();\n\t\t\t}));\n\n\t\t\tthis._store.add(quickPick.onDidHide(() => {\n\t\t\t\tresolve(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}));\n\t\t});\n\t}\n\n\tprivate async _createQuickPickItems(): Promise<(HistoryItemRefQuickPickItem | IQuickPickSeparator)[]> {\n\t\tconst picks: (HistoryItemRefQuickPickItem | IQuickPickSeparator)[] = [\n\t\t\tthis._allQuickPickItem, this._autoQuickPickItem\n\t\t];\n\n\t\tconst historyItemRefs = await this._historyProvider.provideHistoryItemRefs() ?? [];\n\t\tconst historyItemRefsByCategory = groupBy(historyItemRefs, (a, b) => compare(a.category ?? '', b.category ?? ''));\n\n\t\tfor (const refs of historyItemRefsByCategory) {\n\t\t\tif (refs.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpicks.push({ type: 'separator', label: refs[0].category });\n\n\t\t\tpicks.push(...refs.map(ref => {\n\t\t\t\treturn {\n\t\t\t\t\tid: ref.id,\n\t\t\t\t\tlabel: ref.name,\n\t\t\t\t\tdescription: ref.description,\n\t\t\t\t\ticonClass: ThemeIcon.isThemeIcon(ref.icon) ?\n\t\t\t\t\t\tThemeIcon.asClassName(ref.icon) : undefined,\n\t\t\t\t\thistoryItemRef: ref\n\t\t\t\t};\n\t\t\t}));\n\t\t}\n\n\t\treturn picks;\n\t}\n}\n\nexport class SCMHistoryViewPane extends ViewPane {\n\n\tprivate _treeContainer!: HTMLElement;\n\tprivate _tree!: WorkbenchAsyncDataTree<SCMHistoryViewModel, TreeElement, FuzzyScore>;\n\tprivate _treeViewModel!: SCMHistoryViewModel;\n\tprivate _treeDataSource!: SCMHistoryTreeDataSource;\n\tprivate _treeIdentityProvider!: SCMHistoryTreeIdentityProvider;\n\n\tprivate readonly _repositoryLoadMore = observableValue(this, false);\n\tprivate readonly _repositoryOutdated = observableValue(this, false);\n\n\tprivate readonly _actionRunner: IActionRunner;\n\tprivate readonly _visibilityDisposables = new DisposableStore();\n\n\tprivate readonly _treeOperationSequencer = new Sequencer();\n\tprivate readonly _treeLoadMoreSequencer = new Sequencer();\n\tprivate readonly _updateChildrenThrottler = new Throttler();\n\n\tprivate readonly _scmProviderCtx: IContextKey<string | undefined>;\n\n\tconstructor(\n\t\toptions: IViewPaneOptions,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@IProgressService private readonly _progressService: IProgressService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IHoverService hoverService: IHoverService\n\t) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\ttitleMenuId: MenuId.SCMHistoryTitle,\n\t\t\tshowActions: ViewPaneShowActions.WhenExpanded\n\t\t}, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService, hoverService);\n\n\t\tthis._scmProviderCtx = ContextKeys.SCMProvider.bindTo(this.scopedContextKeyService);\n\n\t\tthis._actionRunner = this.instantiationService.createInstance(SCMHistoryViewPaneActionRunner);\n\t\tthis._register(this._actionRunner);\n\n\t\tthis._register(this._updateChildrenThrottler);\n\t}\n\n\tprotected override renderHeaderTitle(container: HTMLElement): void {\n\t\tsuper.renderHeaderTitle(container, this.title);\n\n\t\tconst element = h('div.scm-graph-view-badge-container', [\n\t\t\th('div.scm-graph-view-badge.monaco-count-badge.long@badge')\n\t\t]);\n\n\t\telement.badge.textContent = 'Outdated';\n\t\tcontainer.appendChild(element.root);\n\n\t\tthis._register(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), element.root, {\n\t\t\tmarkdown: {\n\t\t\t\tvalue: localize('scmGraphViewOutdated', \"Please refresh the graph using the refresh action ($(refresh)).\"),\n\t\t\t\tsupportThemeIcons: true\n\t\t\t},\n\t\t\tmarkdownNotSupportedFallback: undefined\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\tconst outdated = this._repositoryOutdated.read(reader);\n\t\t\telement.root.style.display = outdated ? '' : 'none';\n\t\t}));\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tthis._treeContainer = append(container, $('.scm-view.scm-history-view'));\n\t\tthis._treeContainer.classList.add('file-icon-themable-tree');\n\n\t\tthis._createTree(this._treeContainer);\n\n\t\tthis.onDidChangeBodyVisibility(async visible => {\n\t\t\tif (!visible) {\n\t\t\t\tthis._visibilityDisposables.clear();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Create view model\n\t\t\tthis._treeViewModel = this.instantiationService.createInstance(SCMHistoryViewModel);\n\t\t\tthis._visibilityDisposables.add(this._treeViewModel);\n\n\t\t\t// Initial rendering\n\t\t\tawait this._progressService.withProgress({ location: this.id }, async () => {\n\t\t\t\tconst firstRepositoryInitialized = derived(this, reader => {\n\t\t\t\t\tconst repository = this._treeViewModel.repository.read(reader);\n\t\t\t\t\tconst historyProvider = repository?.provider.historyProvider.read(reader);\n\t\t\t\t\tconst historyItemRef = historyProvider?.historyItemRef.read(reader);\n\n\t\t\t\t\treturn historyItemRef !== undefined ? true : undefined;\n\t\t\t\t});\n\n\t\t\t\t// Wait for first repository to be initialized\n\t\t\t\tawait waitForState(firstRepositoryInitialized);\n\n\t\t\t\t// Set tree input\n\t\t\t\tawait this._treeOperationSequencer.queue(async () => {\n\t\t\t\t\tawait this._tree.setInput(this._treeViewModel);\n\t\t\t\t\tthis._tree.scrollTop = 0;\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Repository change\n\t\t\tlet isFirstRun = true;\n\t\t\tthis._visibilityDisposables.add(autorunWithStore((reader, store) => {\n\t\t\t\tconst repository = this._treeViewModel.repository.read(reader);\n\t\t\t\tconst historyProvider = repository?.provider.historyProvider.read(reader);\n\t\t\t\tif (!repository || !historyProvider) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Update context\n\t\t\t\tthis._scmProviderCtx.set(repository.provider.contextValue);\n\n\t\t\t\t// HistoryItemId changed (checkout)\n\t\t\t\tconst historyItemRefId = derived(reader => {\n\t\t\t\t\treturn historyProvider.historyItemRef.read(reader)?.id;\n\t\t\t\t});\n\t\t\t\tstore.add(runOnChange(historyItemRefId, () => {\n\t\t\t\t\tthis.refresh();\n\t\t\t\t}));\n\n\t\t\t\t// HistoryItemRefs changed\n\t\t\t\tstore.add(runOnChange(historyProvider.historyItemRefChanges, changes => {\n\t\t\t\t\tif (changes.silent) {\n\t\t\t\t\t\t// The history item reference changes occurred in the background (ex: Auto Fetch)\n\t\t\t\t\t\t// If tree is scrolled to the top, we can safely refresh the tree, otherwise we\n\t\t\t\t\t\t// will show a visual cue that the view is outdated.\n\t\t\t\t\t\tif (this._tree.scrollTop === 0) {\n\t\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show the \"Outdated\" badge on the view\n\t\t\t\t\t\tthis._repositoryOutdated.set(true, undefined);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// If there are any removed history item references we need to check whether they are\n\t\t\t\t\t// currently being used in the filter. If they are, we need to update the filter which\n\t\t\t\t\t// will result in the graph being refreshed.\n\t\t\t\t\tif (changes.removed.length !== 0) {\n\t\t\t\t\t\tconst historyItemsFilter = this._treeViewModel.historyItemsFilter.get();\n\n\t\t\t\t\t\tif (historyItemsFilter !== 'all' && historyItemsFilter !== 'auto') {\n\t\t\t\t\t\t\tlet updateFilter = false;\n\t\t\t\t\t\t\tconst historyItemRefs = [...historyItemsFilter];\n\n\t\t\t\t\t\t\tfor (const ref of changes.removed) {\n\t\t\t\t\t\t\t\tconst index = historyItemRefs\n\t\t\t\t\t\t\t\t\t.findIndex(item => item.id === ref.id);\n\n\t\t\t\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\t\t\t\thistoryItemRefs.splice(index, 1);\n\t\t\t\t\t\t\t\t\tupdateFilter = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (updateFilter) {\n\t\t\t\t\t\t\t\tthis._treeViewModel.setHistoryItemsFilter(historyItemRefs);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.refresh();\n\t\t\t\t}));\n\n\t\t\t\t// HistoryItemRefs filter changed\n\t\t\t\tstore.add(runOnChange(this._treeViewModel.historyItemsFilter, () => {\n\t\t\t\t\tthis.refresh();\n\t\t\t\t}));\n\n\t\t\t\t// We skip refreshing the graph on the first execution of the autorun\n\t\t\t\t// since the graph for the first repository is rendered when the tree\n\t\t\t\t// input is set.\n\t\t\t\tif (!isFirstRun) {\n\t\t\t\t\tthis.refresh();\n\t\t\t\t}\n\t\t\t\tisFirstRun = false;\n\t\t\t}));\n\t\t});\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\t\tthis._tree.layout(height, width);\n\t}\n\n\toverride getActionRunner(): IActionRunner | undefined {\n\t\treturn this._actionRunner;\n\t}\n\n\toverride getActionsContext(): ISCMProvider | undefined {\n\t\treturn this._treeViewModel?.repository.get()?.provider;\n\t}\n\n\toverride getActionViewItem(action: IAction, options?: IDropdownMenuActionViewItemOptions): IActionViewItem | undefined {\n\t\tif (action.id === PICK_REPOSITORY_ACTION_ID) {\n\t\t\tconst repository = this._treeViewModel?.repository.get();\n\t\t\tif (repository) {\n\t\t\t\treturn new SCMRepositoryActionViewItem(repository, action, options);\n\t\t\t}\n\t\t} else if (action.id === PICK_HISTORY_ITEM_REFS_ACTION_ID) {\n\t\t\tconst repository = this._treeViewModel?.repository.get();\n\t\t\tconst historyItemsFilter = this._treeViewModel?.historyItemsFilter.get();\n\t\t\tif (repository && historyItemsFilter) {\n\t\t\t\treturn new SCMHistoryItemRefsActionViewItem(repository, historyItemsFilter, action, options);\n\t\t\t}\n\t\t}\n\n\t\treturn super.getActionViewItem(action, options);\n\t}\n\n\tasync refresh(): Promise<void> {\n\t\tawait this._updateChildren(true);\n\n\t\tthis.updateActions();\n\t\tthis._repositoryOutdated.set(false, undefined);\n\t\tthis._tree.scrollTop = 0;\n\t}\n\n\tasync pickRepository(): Promise<void> {\n\t\tconst picker = this._instantiationService.createInstance(RepositoryPicker);\n\t\tconst result = await picker.pickRepository();\n\n\t\tif (result) {\n\t\t\tthis._treeViewModel.setRepository(result.repository);\n\t\t}\n\t}\n\n\tasync pickHistoryItemRef(): Promise<void> {\n\t\tconst repository = this._treeViewModel.repository.get();\n\t\tconst historyProvider = repository?.provider.historyProvider.get();\n\n\t\tif (!historyProvider) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst historyItemsFilter = this._treeViewModel.historyItemsFilter.get();\n\t\tconst picker = this._instantiationService.createInstance(HistoryItemRefPicker, historyProvider, historyItemsFilter);\n\t\tconst result = await picker.pickHistoryItemRef();\n\n\t\tif (result) {\n\t\t\tthis._treeViewModel.setHistoryItemsFilter(result);\n\t\t}\n\t}\n\n\tasync revealCurrentHistoryItem(): Promise<void> {\n\t\tconst repository = this._treeViewModel.repository.get();\n\t\tconst historyProvider = repository?.provider.historyProvider.get();\n\t\tconst historyItemRef = historyProvider?.historyItemRef.get();\n\n\t\tif (!repository || !historyItemRef?.revision) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst historyItemFilter = this._treeViewModel.historyItemsFilter.get();\n\n\t\t// Filter is `all`, `auto` or it contains the current history item\n\t\tif (Array.isArray(historyItemFilter) &&\n\t\t\t!historyItemFilter.find(r => r.id === historyItemRef.id)) {\n\t\t\tthis._notificationService.info(localize('scmGraphViewRevealCurrentHistoryItem', \"The current history item is not present in the source control graph. Please use the history item references picker to expand the set of history items in the graph.\"));\n\t\t\treturn;\n\t\t}\n\n\t\tconst revealTreeNode = (): boolean => {\n\t\t\tconst state = this._treeViewModel.getRepositoryState();\n\t\t\tif (!state) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst historyItemViewModel = state.viewModels.find(item =>\n\t\t\t\titem.historyItemViewModel.historyItem.id === historyItemRef.revision);\n\n\t\t\tif (historyItemViewModel && this._tree.hasNode(historyItemViewModel)) {\n\t\t\t\tthis._tree.reveal(historyItemViewModel, 0.5);\n\n\t\t\t\tthis._tree.setSelection([historyItemViewModel]);\n\t\t\t\tthis._tree.setFocus([historyItemViewModel]);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\tif (revealTreeNode()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fetch current history item\n\t\tthis._treeViewModel.setLoadMore(repository, historyItemRef.revision);\n\n\t\t// Update the tree\n\t\tawait this._updateChildren();\n\n\t\t// Reveal node\n\t\trevealTreeNode();\n\t}\n\n\tprivate _createTree(container: HTMLElement): void {\n\t\tthis._treeIdentityProvider = new SCMHistoryTreeIdentityProvider();\n\n\t\tconst historyItemHoverDelegate = this.instantiationService.createInstance(HistoryItemHoverDelegate, this.viewDescriptorService.getViewLocationById(this.id));\n\t\tthis._register(historyItemHoverDelegate);\n\n\t\tthis._treeDataSource = this.instantiationService.createInstance(SCMHistoryTreeDataSource);\n\t\tthis._register(this._treeDataSource);\n\n\t\tthis._tree = this.instantiationService.createInstance(\n\t\t\tWorkbenchAsyncDataTree,\n\t\t\t'SCM History Tree',\n\t\t\tcontainer,\n\t\t\tnew ListDelegate(),\n\t\t\t[\n\t\t\t\tthis.instantiationService.createInstance(HistoryItemRenderer, historyItemHoverDelegate),\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tHistoryItemLoadMoreRenderer,\n\t\t\t\t\t() => this._repositoryLoadMore,\n\t\t\t\t\trepository => this._loadMoreCallback(repository)),\n\t\t\t],\n\t\t\tthis._treeDataSource,\n\t\t\t{\n\t\t\t\taccessibilityProvider: new SCMHistoryTreeAccessibilityProvider(),\n\t\t\t\tidentityProvider: this._treeIdentityProvider,\n\t\t\t\tcollapseByDefault: (e: unknown) => false,\n\t\t\t\tkeyboardNavigationLabelProvider: new SCMHistoryTreeKeyboardNavigationLabelProvider(),\n\t\t\t\thorizontalScrolling: false,\n\t\t\t\tmultipleSelectionSupport: false,\n\t\t\t}\n\t\t) as WorkbenchAsyncDataTree<SCMHistoryViewModel, TreeElement, FuzzyScore>;\n\t\tthis._register(this._tree);\n\n\t\tthis._tree.onDidOpen(this._onDidOpen, this, this._store);\n\t\tthis._tree.onContextMenu(this._onContextMenu, this, this._store);\n\t}\n\n\tprivate async _onDidOpen(e: IOpenEvent<TreeElement | undefined>): Promise<void> {\n\t\tif (!e.element) {\n\t\t\treturn;\n\t\t} else if (isSCMHistoryItemViewModelTreeElement(e.element)) {\n\t\t\tconst historyItem = e.element.historyItemViewModel.historyItem;\n\t\t\tconst historyItemParentId = historyItem.parentIds.length > 0 ? historyItem.parentIds[0] : undefined;\n\n\t\t\tconst historyProvider = e.element.repository.provider.historyProvider.get();\n\t\t\tconst historyItemChanges = await historyProvider?.provideHistoryItemChanges(historyItem.id, historyItemParentId);\n\t\t\tif (historyItemChanges) {\n\t\t\t\tconst title = `${historyItem.displayId ?? historyItem.id} - ${historyItem.message}`;\n\n\t\t\t\tconst rootUri = e.element.repository.provider.rootUri;\n\t\t\t\tconst path = rootUri ? rootUri.path : e.element.repository.provider.label;\n\t\t\t\tconst multiDiffSourceUri = URI.from({ scheme: 'scm-history-item', path: `${path}/${historyItemParentId}..${historyItem.id}` }, true);\n\n\t\t\t\tawait this._commandService.executeCommand('_workbench.openMultiDiffEditor', { title, multiDiffSourceUri, resources: historyItemChanges });\n\t\t\t}\n\t\t} else if (isSCMHistoryItemLoadMoreTreeElement(e.element)) {\n\t\t\tconst pageOnScroll = this.configurationService.getValue<boolean>('scm.graph.pageOnScroll') === true;\n\t\t\tif (!pageOnScroll) {\n\t\t\t\tthis._loadMoreCallback(e.element.repository);\n\t\t\t\tthis._tree.setSelection([]);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _onContextMenu(e: ITreeContextMenuEvent<TreeElement | null>): void {\n\t\tconst element = e.element;\n\n\t\tif (!element || !isSCMHistoryItemViewModelTreeElement(element)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tmenuId: MenuId.SCMChangesContext,\n\t\t\tmenuActionOptions: {\n\t\t\t\targ: element.repository.provider,\n\t\t\t\tshouldForwardArgs: true\n\t\t\t},\n\t\t\tgetAnchor: () => e.anchor,\n\t\t\tgetActionsContext: () => element.historyItemViewModel.historyItem\n\t\t});\n\t}\n\n\tprivate async _loadMoreCallback(repository: ISCMRepository): Promise<void> {\n\t\treturn this._treeLoadMoreSequencer.queue(async () => {\n\t\t\tif (this._repositoryLoadMore.get()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._repositoryLoadMore.set(true, undefined);\n\t\t\tthis._treeViewModel.setLoadMore(repository, true);\n\n\t\t\tawait this._updateChildren();\n\t\t\tthis._repositoryLoadMore.set(false, undefined);\n\t\t});\n\t}\n\n\tprivate _updateChildren(clearCache = false): Promise<void> {\n\t\treturn this._updateChildrenThrottler.queue(\n\t\t\t() => this._treeOperationSequencer.queue(\n\t\t\t\tasync () => {\n\t\t\t\t\tif (clearCache) {\n\t\t\t\t\t\tthis._treeViewModel.clearRepositoryState();\n\t\t\t\t\t}\n\n\t\t\t\t\tawait this._progressService.withProgress({ location: this.id },\n\t\t\t\t\t\tasync () => {\n\t\t\t\t\t\t\tawait this._tree.updateChildren(undefined, undefined, undefined, {\n\t\t\t\t\t\t\t\t// diffIdentityProvider: this._treeIdentityProvider\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t}));\n\t}\n\n\toverride dispose(): void {\n\t\tthis._visibilityDisposables.dispose();\n\t\tsuper.dispose();\n\t}\n}\n"],
  "mappings": "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",
  "names": ["items", "reader"]
}
