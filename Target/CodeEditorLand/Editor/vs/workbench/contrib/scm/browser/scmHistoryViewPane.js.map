{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/scm/browser/scmHistoryViewPane.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/scm.css\";\nimport { $, append, h, reset } from \"../../../../base/browser/dom.js\";\nimport { ActionViewItem } from \"../../../../base/browser/ui/actionbar/actionViewItems.js\";\nimport type { IActionViewItem } from \"../../../../base/browser/ui/actionbar/actionbar.js\";\nimport type { IDropdownMenuActionViewItemOptions } from \"../../../../base/browser/ui/dropdown/dropdownActionViewItem.js\";\nimport type {\n\tIHoverOptions,\n\tIManagedHoverTooltipMarkdownString,\n} from \"../../../../base/browser/ui/hover/hover.js\";\nimport type { IHoverDelegate } from \"../../../../base/browser/ui/hover/hoverDelegate.js\";\nimport { getDefaultHoverDelegate } from \"../../../../base/browser/ui/hover/hoverDelegateFactory.js\";\nimport { HoverPosition } from \"../../../../base/browser/ui/hover/hoverWidget.js\";\nimport { IconLabel } from \"../../../../base/browser/ui/iconLabel/iconLabel.js\";\nimport type {\n\tIIdentityProvider,\n\tIKeyboardNavigationLabelProvider,\n\tIListVirtualDelegate,\n} from \"../../../../base/browser/ui/list/list.js\";\nimport type { IListAccessibilityProvider } from \"../../../../base/browser/ui/list/listWidget.js\";\nimport type { LabelFuzzyScore } from \"../../../../base/browser/ui/tree/abstractTree.js\";\nimport type {\n\tIAsyncDataSource,\n\tITreeContextMenuEvent,\n\tITreeNode,\n\tITreeRenderer,\n} from \"../../../../base/browser/ui/tree/tree.js\";\nimport {\n\tActionRunner,\n\ttype IAction,\n\ttype IActionRunner,\n} from \"../../../../base/common/actions.js\";\nimport { delta, groupBy, tail } from \"../../../../base/common/arrays.js\";\nimport { Sequencer, Throttler } from \"../../../../base/common/async.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { fromNow } from \"../../../../base/common/date.js\";\nimport { Event } from \"../../../../base/common/event.js\";\nimport {\n\ttype FuzzyScore,\n\ttype IMatch,\n\tcreateMatches,\n} from \"../../../../base/common/filters.js\";\nimport { MarkdownString } from \"../../../../base/common/htmlContent.js\";\nimport { stripIcons } from \"../../../../base/common/iconLabels.js\";\nimport { Iterable } from \"../../../../base/common/iterator.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { clamp } from \"../../../../base/common/numbers.js\";\nimport {\n\ttype IObservable,\n\ttype ISettableObservable,\n\tautorun,\n\tautorunWithStore,\n\tconstObservable,\n\tderived,\n\tlatestChangedValue,\n\tobservableFromEvent,\n\tobservableValue,\n\trunOnChange,\n\twaitForState,\n} from \"../../../../base/common/observable.js\";\nimport * as platform from \"../../../../base/common/platform.js\";\nimport { compare } from \"../../../../base/common/strings.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { IClipboardService } from \"../../../../platform/clipboard/common/clipboardService.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tContextKeyExpr,\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextMenuService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport {\n\tIHoverService,\n\tWorkbenchHoverDelegate,\n} from \"../../../../platform/hover/browser/hover.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport {\n\ttype IOpenEvent,\n\tWorkbenchAsyncDataTree,\n} from \"../../../../platform/list/browser/listService.js\";\nimport { INotificationService } from \"../../../../platform/notification/common/notification.js\";\nimport { observableConfigValue } from \"../../../../platform/observable/common/platformObservableUtils.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport { IProgressService } from \"../../../../platform/progress/common/progress.js\";\nimport {\n\tIQuickInputService,\n\ttype IQuickPickItem,\n\ttype IQuickPickSeparator,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport {\n\ttype ColorIdentifier,\n\tasCssVariable,\n\tforeground,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport {\n\ttype IViewPaneOptions,\n\tViewAction,\n\tViewPane,\n\tViewPaneShowActions,\n} from \"../../../browser/parts/views/viewPane.js\";\nimport {\n\tIViewDescriptorService,\n\tViewContainerLocation,\n} from \"../../../common/views.js\";\nimport {\n\tIWorkbenchLayoutService,\n\tPosition,\n} from \"../../../services/layout/browser/layoutService.js\";\nimport type {\n\tISCMHistoryItem,\n\tISCMHistoryItemRef,\n\tISCMHistoryItemViewModel,\n\tISCMHistoryProvider,\n\tSCMHistoryItemLoadMoreTreeElement,\n\tSCMHistoryItemViewModelTreeElement,\n} from \"../common/history.js\";\nimport {\n\tHISTORY_VIEW_PANE_ID,\n\ttype ISCMProvider,\n\ttype ISCMRepository,\n\tISCMService,\n\tISCMViewService,\n} from \"../common/scm.js\";\nimport {\n\tSWIMLANE_WIDTH,\n\thistoryItemHoverAdditionsForeground,\n\thistoryItemHoverDefaultLabelBackground,\n\thistoryItemHoverDefaultLabelForeground,\n\thistoryItemHoverDeletionsForeground,\n\thistoryItemHoverLabelForeground,\n\trenderSCMHistoryGraphPlaceholder,\n\trenderSCMHistoryItemGraph,\n\ttoISCMHistoryItemViewModelArray,\n} from \"./scmHistory.js\";\nimport { ContextKeys } from \"./scmViewPane.js\";\nimport {\n\tisSCMHistoryItemLoadMoreTreeElement,\n\tisSCMHistoryItemViewModelTreeElement,\n\tisSCMRepository,\n} from \"./util.js\";\n\nconst PICK_REPOSITORY_ACTION_ID = \"workbench.scm.action.graph.pickRepository\";\nconst PICK_HISTORY_ITEM_REFS_ACTION_ID =\n\t\"workbench.scm.action.graph.pickHistoryItemRefs\";\n\ntype TreeElement =\n\t| SCMHistoryItemViewModelTreeElement\n\t| SCMHistoryItemLoadMoreTreeElement;\n\nclass SCMRepositoryActionViewItem extends ActionViewItem {\n\tconstructor(\n\t\tprivate readonly _repository: ISCMRepository,\n\t\taction: IAction,\n\t\toptions?: IDropdownMenuActionViewItemOptions,\n\t) {\n\t\tsuper(null, action, { ...options, icon: false, label: true });\n\t}\n\n\tprotected override updateLabel(): void {\n\t\tif (this.options.label && this.label) {\n\t\t\tthis.label.classList.add(\"scm-graph-repository-picker\");\n\n\t\t\tconst icon = $(\".icon\");\n\t\t\ticon.classList.add(...ThemeIcon.asClassNameArray(Codicon.repo));\n\n\t\t\tconst name = $(\".name\");\n\t\t\tname.textContent = this._repository.provider.name;\n\n\t\t\treset(this.label, icon, name);\n\t\t}\n\t}\n\n\tprotected override getTooltip(): string | undefined {\n\t\treturn this._repository.provider.name;\n\t}\n}\n\nclass SCMHistoryItemRefsActionViewItem extends ActionViewItem {\n\tconstructor(\n\t\tprivate readonly _repository: ISCMRepository,\n\t\tprivate readonly _historyItemsFilter: HistoryItemRefsFilter,\n\t\taction: IAction,\n\t\toptions?: IDropdownMenuActionViewItemOptions,\n\t) {\n\t\tsuper(null, action, { ...options, icon: false, label: true });\n\t}\n\n\tprotected override updateLabel(): void {\n\t\tif (this.options.label && this.label) {\n\t\t\tthis.label.classList.add(\"scm-graph-history-item-picker\");\n\n\t\t\tconst icon = $(\".icon\");\n\t\t\ticon.classList.add(\n\t\t\t\t...ThemeIcon.asClassNameArray(Codicon.gitBranch),\n\t\t\t);\n\n\t\t\tconst name = $(\".name\");\n\t\t\tif (this._historyItemsFilter === \"all\") {\n\t\t\t\tname.textContent = localize(\"all\", \"All\");\n\t\t\t} else if (this._historyItemsFilter === \"auto\") {\n\t\t\t\tname.textContent = localize(\"auto\", \"Auto\");\n\t\t\t} else if (this._historyItemsFilter.length === 1) {\n\t\t\t\tname.textContent = this._historyItemsFilter[0].name;\n\t\t\t} else {\n\t\t\t\tname.textContent = localize(\n\t\t\t\t\t\"items\",\n\t\t\t\t\t\"{0} Items\",\n\t\t\t\t\tthis._historyItemsFilter.length,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treset(this.label, icon, name);\n\t\t}\n\t}\n\n\tprotected override getTooltip(): string | undefined {\n\t\tif (this._historyItemsFilter === \"all\") {\n\t\t\treturn localize(\n\t\t\t\t\"allHistoryItemRefs\",\n\t\t\t\t\"All history item references\",\n\t\t\t);\n\t\t} else if (this._historyItemsFilter === \"auto\") {\n\t\t\tconst historyProvider =\n\t\t\t\tthis._repository.provider.historyProvider.get();\n\n\t\t\treturn [\n\t\t\t\thistoryProvider?.historyItemRef.get()?.name,\n\t\t\t\thistoryProvider?.historyItemRemoteRef.get()?.name,\n\t\t\t\thistoryProvider?.historyItemBaseRef.get()?.name,\n\t\t\t]\n\t\t\t\t.filter((ref) => !!ref)\n\t\t\t\t.join(\", \");\n\t\t} else if (this._historyItemsFilter.length === 1) {\n\t\t\treturn this._historyItemsFilter[0].name;\n\t\t} else {\n\t\t\treturn this._historyItemsFilter.map((ref) => ref.name).join(\", \");\n\t\t}\n\t}\n}\n\nregisterAction2(\n\tclass extends ViewAction<SCMHistoryViewPane> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: PICK_REPOSITORY_ACTION_ID,\n\t\t\t\ttitle: localize(\"repositoryPicker\", \"Repository Picker\"),\n\t\t\t\tviewId: HISTORY_VIEW_PANE_ID,\n\t\t\t\tf1: false,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.SCMHistoryTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tContextKeyExpr.has(\"scm.providerCount\"),\n\t\t\t\t\t\tContextKeyExpr.greater(\"scm.providerCount\", 1),\n\t\t\t\t\t),\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\torder: 0,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tasync runInView(\n\t\t\t_: ServicesAccessor,\n\t\t\tview: SCMHistoryViewPane,\n\t\t): Promise<void> {\n\t\t\tview.pickRepository();\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends ViewAction<SCMHistoryViewPane> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: PICK_HISTORY_ITEM_REFS_ACTION_ID,\n\t\t\t\ttitle: localize(\n\t\t\t\t\t\"referencePicker\",\n\t\t\t\t\t\"History Item Reference Picker\",\n\t\t\t\t),\n\t\t\t\ticon: Codicon.gitBranch,\n\t\t\t\tviewId: HISTORY_VIEW_PANE_ID,\n\t\t\t\tf1: false,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.SCMHistoryTitle,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\torder: 1,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tasync runInView(\n\t\t\t_: ServicesAccessor,\n\t\t\tview: SCMHistoryViewPane,\n\t\t): Promise<void> {\n\t\t\tview.pickHistoryItemRef();\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends ViewAction<SCMHistoryViewPane> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.scm.action.graph.revealCurrentHistoryItem\",\n\t\t\t\ttitle: localize(\n\t\t\t\t\t\"goToCurrentHistoryItem\",\n\t\t\t\t\t\"Go to Current History Item\",\n\t\t\t\t),\n\t\t\t\tviewId: HISTORY_VIEW_PANE_ID,\n\t\t\t\tf1: false,\n\t\t\t\ticon: Codicon.target,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.SCMHistoryTitle,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\torder: 2,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tasync runInView(\n\t\t\t_: ServicesAccessor,\n\t\t\tview: SCMHistoryViewPane,\n\t\t): Promise<void> {\n\t\t\tview.revealCurrentHistoryItem();\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends ViewAction<SCMHistoryViewPane> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.scm.action.graph.refresh\",\n\t\t\t\ttitle: localize(\"refreshGraph\", \"Refresh\"),\n\t\t\t\tviewId: HISTORY_VIEW_PANE_ID,\n\t\t\t\tf1: false,\n\t\t\t\ticon: Codicon.refresh,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.SCMHistoryTitle,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\torder: 1000,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tasync runInView(\n\t\t\t_: ServicesAccessor,\n\t\t\tview: SCMHistoryViewPane,\n\t\t): Promise<void> {\n\t\t\tview.refresh();\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.scm.action.graph.viewChanges\",\n\t\t\t\ttitle: localize(\"viewChanges\", \"View Changes\"),\n\t\t\t\tf1: false,\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.SCMChangesContext,\n\t\t\t\t\t\tgroup: \"0_view\",\n\t\t\t\t\t\twhen: ContextKeyExpr.equals(\n\t\t\t\t\t\t\t\"config.multiDiffEditor.experimental.enabled\",\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\toverride async run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tprovider: ISCMProvider,\n\t\t\t...historyItems: ISCMHistoryItem[]\n\t\t) {\n\t\t\tconst commandService = accessor.get(ICommandService);\n\n\t\t\tif (!provider || historyItems.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst historyItem = historyItems[0];\n\t\t\tconst historyItemLast = historyItems[historyItems.length - 1];\n\t\t\tconst historyProvider = provider.historyProvider.get();\n\n\t\t\tif (historyItems.length > 1) {\n\t\t\t\tconst ancestor =\n\t\t\t\t\tawait historyProvider?.resolveHistoryItemRefsCommonAncestor(\n\t\t\t\t\t\t[historyItem.id, historyItemLast.id],\n\t\t\t\t\t);\n\t\t\t\tif (\n\t\t\t\t\t!ancestor ||\n\t\t\t\t\t(ancestor !== historyItem.id &&\n\t\t\t\t\t\tancestor !== historyItemLast.id)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst historyItemParentId =\n\t\t\t\thistoryItemLast.parentIds.length > 0\n\t\t\t\t\t? historyItemLast.parentIds[0]\n\t\t\t\t\t: undefined;\n\t\t\tconst historyItemChanges =\n\t\t\t\tawait historyProvider?.provideHistoryItemChanges(\n\t\t\t\t\thistoryItem.id,\n\t\t\t\t\thistoryItemParentId,\n\t\t\t\t);\n\n\t\t\tif (!historyItemChanges?.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst title =\n\t\t\t\thistoryItems.length === 1\n\t\t\t\t\t? `${historyItems[0].displayId ?? historyItems[0].id} - ${historyItems[0].message}`\n\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\"historyItemChangesEditorTitle\",\n\t\t\t\t\t\t\t\"All Changes ({0} \u2194 {1})\",\n\t\t\t\t\t\t\thistoryItemLast.displayId ?? historyItemLast.id,\n\t\t\t\t\t\t\thistoryItem.displayId ?? historyItem.id,\n\t\t\t\t\t\t);\n\n\t\t\tconst rootUri = provider.rootUri;\n\t\t\tconst path = rootUri ? rootUri.path : provider.label;\n\t\t\tconst multiDiffSourceUri = URI.from(\n\t\t\t\t{\n\t\t\t\t\tscheme: \"scm-history-item\",\n\t\t\t\t\tpath: `${path}/${historyItemParentId}..${historyItem.id}`,\n\t\t\t\t},\n\t\t\t\ttrue,\n\t\t\t);\n\n\t\t\tcommandService.executeCommand(\"_workbench.openMultiDiffEditor\", {\n\t\t\t\ttitle,\n\t\t\t\tmultiDiffSourceUri,\n\t\t\t\tresources: historyItemChanges,\n\t\t\t});\n\t\t}\n\t},\n);\n\nclass ListDelegate implements IListVirtualDelegate<TreeElement> {\n\tgetHeight(): number {\n\t\treturn 22;\n\t}\n\n\tgetTemplateId(element: TreeElement): string {\n\t\tif (isSCMHistoryItemViewModelTreeElement(element)) {\n\t\t\treturn HistoryItemRenderer.TEMPLATE_ID;\n\t\t} else if (isSCMHistoryItemLoadMoreTreeElement(element)) {\n\t\t\treturn HistoryItemLoadMoreRenderer.TEMPLATE_ID;\n\t\t} else {\n\t\t\tthrow new Error(\"Unknown element\");\n\t\t}\n\t}\n}\n\ninterface HistoryItemTemplate {\n\treadonly element: HTMLElement;\n\treadonly label: IconLabel;\n\treadonly graphContainer: HTMLElement;\n\treadonly labelContainer: HTMLElement;\n\treadonly elementDisposables: DisposableStore;\n\treadonly disposables: IDisposable;\n}\n\nclass HistoryItemRenderer\n\timplements\n\t\tITreeRenderer<\n\t\t\tSCMHistoryItemViewModelTreeElement,\n\t\t\tLabelFuzzyScore,\n\t\t\tHistoryItemTemplate\n\t\t>\n{\n\tstatic readonly TEMPLATE_ID = \"history-item\";\n\tget templateId(): string {\n\t\treturn HistoryItemRenderer.TEMPLATE_ID;\n\t}\n\n\tprivate readonly _badgesConfig = observableConfigValue<\"all\" | \"filter\">(\n\t\t\"scm.graph.badges\",\n\t\t\"filter\",\n\t\tthis._configurationService,\n\t);\n\n\tconstructor(\n\t\tprivate readonly hoverDelegate: IHoverDelegate,\n\t\t@IClipboardService\n\t\tprivate readonly _clipboardService: IClipboardService,\n\t\t@IConfigurationService\n\t\tprivate readonly _configurationService: IConfigurationService,\n\t\t@IHoverService private readonly _hoverService: IHoverService,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t) {}\n\n\trenderTemplate(container: HTMLElement): HistoryItemTemplate {\n\t\t// hack\n\t\t(\n\t\t\tcontainer.parentElement!.parentElement!.querySelector(\n\t\t\t\t\".monaco-tl-twistie\",\n\t\t\t)! as HTMLElement\n\t\t).classList.add(\"force-no-twistie\");\n\n\t\tconst element = append(container, $(\".history-item\"));\n\t\tconst graphContainer = append(element, $(\".graph-container\"));\n\t\tconst iconLabel = new IconLabel(element, {\n\t\t\tsupportIcons: true,\n\t\t\tsupportHighlights: true,\n\t\t\tsupportDescriptionHighlights: true,\n\t\t});\n\n\t\tconst labelContainer = append(element, $(\".label-container\"));\n\t\telement.appendChild(labelContainer);\n\n\t\treturn {\n\t\t\telement,\n\t\t\tgraphContainer,\n\t\t\tlabel: iconLabel,\n\t\t\tlabelContainer,\n\t\t\telementDisposables: new DisposableStore(),\n\t\t\tdisposables: new DisposableStore(),\n\t\t};\n\t}\n\n\trenderElement(\n\t\tnode: ITreeNode<SCMHistoryItemViewModelTreeElement, LabelFuzzyScore>,\n\t\tindex: number,\n\t\ttemplateData: HistoryItemTemplate,\n\t\theight: number | undefined,\n\t): void {\n\t\tconst historyItemViewModel = node.element.historyItemViewModel;\n\t\tconst historyItem = historyItemViewModel.historyItem;\n\n\t\tconst historyItemHover = this._hoverService.setupManagedHover(\n\t\t\tthis.hoverDelegate,\n\t\t\ttemplateData.element,\n\t\t\tthis._getHoverContent(node.element),\n\t\t\t{\n\t\t\t\tactions: this._getHoverActions(historyItem),\n\t\t\t},\n\t\t);\n\t\ttemplateData.elementDisposables.add(historyItemHover);\n\n\t\ttemplateData.graphContainer.textContent = \"\";\n\t\ttemplateData.graphContainer.classList.toggle(\n\t\t\t\"current\",\n\t\t\thistoryItemViewModel.isCurrent,\n\t\t);\n\t\ttemplateData.graphContainer.appendChild(\n\t\t\trenderSCMHistoryItemGraph(historyItemViewModel),\n\t\t);\n\n\t\tconst provider = node.element.repository.provider;\n\t\tconst historyItemRef = provider.historyProvider\n\t\t\t.get()\n\t\t\t?.historyItemRef?.get();\n\t\tconst extraClasses =\n\t\t\thistoryItemRef?.revision === historyItem.id\n\t\t\t\t? [\"history-item-current\"]\n\t\t\t\t: [];\n\t\tconst [matches, descriptionMatches] = this._processMatches(\n\t\t\thistoryItemViewModel,\n\t\t\tnode.filterData,\n\t\t);\n\t\ttemplateData.label.setLabel(historyItem.subject, historyItem.author, {\n\t\t\tmatches,\n\t\t\tdescriptionMatches,\n\t\t\textraClasses,\n\t\t});\n\n\t\tthis._renderBadges(historyItem, templateData);\n\t}\n\n\tprivate _renderBadges(\n\t\thistoryItem: ISCMHistoryItem,\n\t\ttemplateData: HistoryItemTemplate,\n\t): void {\n\t\ttemplateData.elementDisposables.add(\n\t\t\tautorun((reader) => {\n\t\t\t\tconst labelConfig = this._badgesConfig.read(reader);\n\n\t\t\t\ttemplateData.labelContainer.textContent = \"\";\n\t\t\t\tconst firstColoredRef = historyItem.references?.find(\n\t\t\t\t\t(ref) => ref.color,\n\t\t\t\t);\n\n\t\t\t\tfor (const ref of historyItem.references ?? []) {\n\t\t\t\t\tif (!ref.color && labelConfig === \"filter\") {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ref.icon && ThemeIcon.isThemeIcon(ref.icon)) {\n\t\t\t\t\t\tconst elements = h(\n\t\t\t\t\t\t\t\"div.label\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\tcolor: ref.color\n\t\t\t\t\t\t\t\t\t\t? asCssVariable(\n\t\t\t\t\t\t\t\t\t\t\t\thistoryItemHoverLabelForeground,\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t: asCssVariable(foreground),\n\t\t\t\t\t\t\t\t\tbackgroundColor: ref.color\n\t\t\t\t\t\t\t\t\t\t? asCssVariable(ref.color)\n\t\t\t\t\t\t\t\t\t\t: asCssVariable(\n\t\t\t\t\t\t\t\t\t\t\t\thistoryItemHoverDefaultLabelBackground,\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\th(\"div.icon@icon\"),\n\t\t\t\t\t\t\t\th(\"div.description@description\"),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\telements.icon.classList.add(\n\t\t\t\t\t\t\t...ThemeIcon.asClassNameArray(ref.icon),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\telements.description.textContent = ref.name;\n\t\t\t\t\t\telements.description.style.display =\n\t\t\t\t\t\t\tref === firstColoredRef ? \"\" : \"none\";\n\n\t\t\t\t\t\tappend(templateData.labelContainer, elements.root);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate _getHoverActions(historyItem: ISCMHistoryItem) {\n\t\treturn [\n\t\t\t{\n\t\t\t\tcommandId: \"workbench.scm.action.graph.copyHistoryItemId\",\n\t\t\t\ticonClass: \"codicon.codicon-copy\",\n\t\t\t\tlabel: historyItem.displayId ?? historyItem.id,\n\t\t\t\trun: () => this._clipboardService.writeText(historyItem.id),\n\t\t\t},\n\t\t\t{\n\t\t\t\tcommandId: \"workbench.scm.action.graph.copyHistoryItemMessage\",\n\t\t\t\ticonClass: \"codicon.codicon-copy\",\n\t\t\t\tlabel: localize(\"historyItemMessage\", \"Message\"),\n\t\t\t\trun: () =>\n\t\t\t\t\tthis._clipboardService.writeText(historyItem.message),\n\t\t\t},\n\t\t];\n\t}\n\n\tprivate _getHoverContent(\n\t\telement: SCMHistoryItemViewModelTreeElement,\n\t): IManagedHoverTooltipMarkdownString {\n\t\tconst colorTheme = this._themeService.getColorTheme();\n\t\tconst historyItem = element.historyItemViewModel.historyItem;\n\n\t\tconst markdown = new MarkdownString(\"\", {\n\t\t\tisTrusted: true,\n\t\t\tsupportThemeIcons: true,\n\t\t});\n\t\t// markdown.appendMarkdown(`$(git-commit) \\`${historyItem.displayId ?? historyItem.id}\\`\\n\\n`);\n\n\t\tif (historyItem.author) {\n\t\t\tmarkdown.appendMarkdown(`$(account) **${historyItem.author}**`);\n\n\t\t\tif (historyItem.timestamp) {\n\t\t\t\tconst dateFormatter = new Intl.DateTimeFormat(\n\t\t\t\t\tplatform.language,\n\t\t\t\t\t{\n\t\t\t\t\t\tyear: \"numeric\",\n\t\t\t\t\t\tmonth: \"long\",\n\t\t\t\t\t\tday: \"numeric\",\n\t\t\t\t\t\thour: \"numeric\",\n\t\t\t\t\t\tminute: \"numeric\",\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t\tmarkdown.appendMarkdown(\n\t\t\t\t\t`, $(history) ${fromNow(historyItem.timestamp, true, true)} (${dateFormatter.format(historyItem.timestamp)})`,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tmarkdown.appendMarkdown(\"\\n\\n\");\n\t\t}\n\n\t\tmarkdown.appendMarkdown(`${historyItem.message}\\n\\n`);\n\n\t\tif (historyItem.statistics) {\n\t\t\tmarkdown.appendMarkdown(`---\\n\\n`);\n\n\t\t\tmarkdown.appendMarkdown(\n\t\t\t\t`<span>${\n\t\t\t\t\thistoryItem.statistics.files === 1\n\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\"fileChanged\",\n\t\t\t\t\t\t\t\t\"{0} file changed\",\n\t\t\t\t\t\t\t\thistoryItem.statistics.files,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\"filesChanged\",\n\t\t\t\t\t\t\t\t\"{0} files changed\",\n\t\t\t\t\t\t\t\thistoryItem.statistics.files,\n\t\t\t\t\t\t\t)\n\t\t\t\t}</span>`,\n\t\t\t);\n\n\t\t\tif (historyItem.statistics.insertions) {\n\t\t\t\tconst additionsForegroundColor = colorTheme.getColor(\n\t\t\t\t\thistoryItemHoverAdditionsForeground,\n\t\t\t\t);\n\t\t\t\tmarkdown.appendMarkdown(\n\t\t\t\t\t`,&nbsp;<span style=\"color:${additionsForegroundColor};\">${\n\t\t\t\t\t\thistoryItem.statistics.insertions === 1\n\t\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\t\"insertion\",\n\t\t\t\t\t\t\t\t\t\"{0} insertion{1}\",\n\t\t\t\t\t\t\t\t\thistoryItem.statistics.insertions,\n\t\t\t\t\t\t\t\t\t\"(+)\",\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\t\"insertions\",\n\t\t\t\t\t\t\t\t\t\"{0} insertions{1}\",\n\t\t\t\t\t\t\t\t\thistoryItem.statistics.insertions,\n\t\t\t\t\t\t\t\t\t\"(+)\",\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t}</span>`,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (historyItem.statistics.deletions) {\n\t\t\t\tconst deletionsForegroundColor = colorTheme.getColor(\n\t\t\t\t\thistoryItemHoverDeletionsForeground,\n\t\t\t\t);\n\t\t\t\tmarkdown.appendMarkdown(\n\t\t\t\t\t`,&nbsp;<span style=\"color:${deletionsForegroundColor};\">${\n\t\t\t\t\t\thistoryItem.statistics.deletions === 1\n\t\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\t\"deletion\",\n\t\t\t\t\t\t\t\t\t\"{0} deletion{1}\",\n\t\t\t\t\t\t\t\t\thistoryItem.statistics.deletions,\n\t\t\t\t\t\t\t\t\t\"(-)\",\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\t\"deletions\",\n\t\t\t\t\t\t\t\t\t\"{0} deletions{1}\",\n\t\t\t\t\t\t\t\t\thistoryItem.statistics.deletions,\n\t\t\t\t\t\t\t\t\t\"(-)\",\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t}</span>`,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif ((historyItem.references ?? []).length > 0) {\n\t\t\tmarkdown.appendMarkdown(`\\n\\n---\\n\\n`);\n\t\t\tmarkdown.appendMarkdown(\n\t\t\t\t(historyItem.references ?? [])\n\t\t\t\t\t.map((ref) => {\n\t\t\t\t\t\tconst labelIconId = ThemeIcon.isThemeIcon(ref.icon)\n\t\t\t\t\t\t\t? ref.icon.id\n\t\t\t\t\t\t\t: \"\";\n\n\t\t\t\t\t\tconst labelBackgroundColor = ref.color\n\t\t\t\t\t\t\t? asCssVariable(ref.color)\n\t\t\t\t\t\t\t: asCssVariable(\n\t\t\t\t\t\t\t\t\thistoryItemHoverDefaultLabelBackground,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\tconst labelForegroundColor = ref.color\n\t\t\t\t\t\t\t? asCssVariable(historyItemHoverLabelForeground)\n\t\t\t\t\t\t\t: asCssVariable(\n\t\t\t\t\t\t\t\t\thistoryItemHoverDefaultLabelForeground,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn `<span style=\"color:${labelForegroundColor};background-color:${labelBackgroundColor};border-radius:2px;\">&nbsp;$(${labelIconId})&nbsp;${ref.name}&nbsp;</span>`;\n\t\t\t\t\t})\n\t\t\t\t\t.join(\"&nbsp;&nbsp;\"),\n\t\t\t);\n\t\t}\n\n\t\treturn { markdown, markdownNotSupportedFallback: historyItem.message };\n\t}\n\n\tprivate _processMatches(\n\t\thistoryItemViewModel: ISCMHistoryItemViewModel,\n\t\tfilterData: LabelFuzzyScore | undefined,\n\t): [IMatch[] | undefined, IMatch[] | undefined] {\n\t\tif (!filterData) {\n\t\t\treturn [undefined, undefined];\n\t\t}\n\n\t\treturn [\n\t\t\thistoryItemViewModel.historyItem.message === filterData.label\n\t\t\t\t? createMatches(filterData.score)\n\t\t\t\t: undefined,\n\t\t\thistoryItemViewModel.historyItem.author === filterData.label\n\t\t\t\t? createMatches(filterData.score)\n\t\t\t\t: undefined,\n\t\t];\n\t}\n\n\tdisposeElement(\n\t\telement: ITreeNode<SCMHistoryItemViewModelTreeElement, LabelFuzzyScore>,\n\t\tindex: number,\n\t\ttemplateData: HistoryItemTemplate,\n\t\theight: number | undefined,\n\t): void {\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: HistoryItemTemplate): void {\n\t\ttemplateData.disposables.dispose();\n\t}\n}\n\ninterface LoadMoreTemplate {\n\treadonly element: HTMLElement;\n\treadonly graphPlaceholder: HTMLElement;\n\treadonly historyItemPlaceholderContainer: HTMLElement;\n\treadonly historyItemPlaceholderLabel: IconLabel;\n\treadonly elementDisposables: DisposableStore;\n\treadonly disposables: IDisposable;\n}\n\nclass HistoryItemLoadMoreRenderer\n\timplements\n\t\tITreeRenderer<SCMHistoryItemLoadMoreTreeElement, void, LoadMoreTemplate>\n{\n\tstatic readonly TEMPLATE_ID = \"historyItemLoadMore\";\n\tget templateId(): string {\n\t\treturn HistoryItemLoadMoreRenderer.TEMPLATE_ID;\n\t}\n\n\tconstructor(\n\t\tprivate readonly _loadingMore: () => IObservable<boolean>,\n\t\tprivate readonly _loadMoreCallback: (\n\t\t\trepository: ISCMRepository,\n\t\t) => void,\n\t\t@IConfigurationService\n\t\tprivate readonly _configurationService: IConfigurationService,\n\t) {}\n\n\trenderTemplate(container: HTMLElement): LoadMoreTemplate {\n\t\t// hack\n\t\t(\n\t\t\tcontainer.parentElement!.parentElement!.querySelector(\n\t\t\t\t\".monaco-tl-twistie\",\n\t\t\t)! as HTMLElement\n\t\t).classList.add(\"force-no-twistie\");\n\n\t\tconst element = append(container, $(\".history-item-load-more\"));\n\t\tconst graphPlaceholder = append(element, $(\".graph-placeholder\"));\n\t\tconst historyItemPlaceholderContainer = append(\n\t\t\telement,\n\t\t\t$(\".history-item-placeholder\"),\n\t\t);\n\t\tconst historyItemPlaceholderLabel = new IconLabel(\n\t\t\thistoryItemPlaceholderContainer,\n\t\t\t{ supportIcons: true },\n\t\t);\n\n\t\treturn {\n\t\t\telement,\n\t\t\tgraphPlaceholder,\n\t\t\thistoryItemPlaceholderContainer,\n\t\t\thistoryItemPlaceholderLabel,\n\t\t\telementDisposables: new DisposableStore(),\n\t\t\tdisposables: new DisposableStore(),\n\t\t};\n\t}\n\n\trenderElement(\n\t\telement: ITreeNode<SCMHistoryItemLoadMoreTreeElement, void>,\n\t\tindex: number,\n\t\ttemplateData: LoadMoreTemplate,\n\t\theight: number | undefined,\n\t): void {\n\t\ttemplateData.graphPlaceholder.textContent = \"\";\n\t\ttemplateData.graphPlaceholder.style.width = `${SWIMLANE_WIDTH * (element.element.graphColumns.length + 1)}px`;\n\t\ttemplateData.graphPlaceholder.appendChild(\n\t\t\trenderSCMHistoryGraphPlaceholder(element.element.graphColumns),\n\t\t);\n\n\t\tconst pageOnScroll =\n\t\t\tthis._configurationService.getValue<boolean>(\n\t\t\t\t\"scm.graph.pageOnScroll\",\n\t\t\t) === true;\n\t\ttemplateData.historyItemPlaceholderContainer.classList.toggle(\n\t\t\t\"shimmer\",\n\t\t\tpageOnScroll,\n\t\t);\n\n\t\tif (pageOnScroll) {\n\t\t\ttemplateData.historyItemPlaceholderLabel.setLabel(\"\");\n\t\t\tthis._loadMoreCallback(element.element.repository);\n\t\t} else {\n\t\t\ttemplateData.elementDisposables.add(\n\t\t\t\tautorun((reader) => {\n\t\t\t\t\tconst loadingMore = this._loadingMore().read(reader);\n\t\t\t\t\tconst icon = `$(${loadingMore ? \"loading~spin\" : \"fold-down\"})`;\n\n\t\t\t\t\ttemplateData.historyItemPlaceholderLabel.setLabel(\n\t\t\t\t\t\tlocalize(\"loadMore\", \"{0} Load More...\", icon),\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t}\n\n\tdisposeElement(\n\t\telement: ITreeNode<SCMHistoryItemLoadMoreTreeElement, void>,\n\t\tindex: number,\n\t\ttemplateData: LoadMoreTemplate,\n\t\theight: number | undefined,\n\t): void {\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: LoadMoreTemplate): void {\n\t\ttemplateData.disposables.dispose();\n\t}\n}\n\nclass HistoryItemHoverDelegate extends WorkbenchHoverDelegate {\n\tconstructor(\n\t\tprivate readonly _viewContainerLocation: ViewContainerLocation | null,\n\t\t@IWorkbenchLayoutService\n\t\tprivate readonly layoutService: IWorkbenchLayoutService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IHoverService hoverService: IHoverService,\n\t) {\n\t\tsuper(\n\t\t\t\"element\",\n\t\t\ttrue,\n\t\t\t() => this.getHoverOptions(),\n\t\t\tconfigurationService,\n\t\t\thoverService,\n\t\t);\n\t}\n\n\tprivate getHoverOptions(): Partial<IHoverOptions> {\n\t\tconst sideBarPosition = this.layoutService.getSideBarPosition();\n\n\t\tlet hoverPosition: HoverPosition;\n\t\tif (this._viewContainerLocation === ViewContainerLocation.Sidebar) {\n\t\t\thoverPosition =\n\t\t\t\tsideBarPosition === Position.LEFT\n\t\t\t\t\t? HoverPosition.RIGHT\n\t\t\t\t\t: HoverPosition.LEFT;\n\t\t} else if (\n\t\t\tthis._viewContainerLocation === ViewContainerLocation.AuxiliaryBar\n\t\t) {\n\t\t\thoverPosition =\n\t\t\t\tsideBarPosition === Position.LEFT\n\t\t\t\t\t? HoverPosition.LEFT\n\t\t\t\t\t: HoverPosition.RIGHT;\n\t\t} else {\n\t\t\thoverPosition = HoverPosition.RIGHT;\n\t\t}\n\n\t\treturn {\n\t\t\tadditionalClasses: [\"history-item-hover\"],\n\t\t\tposition: { hoverPosition, forcePosition: true },\n\t\t};\n\t}\n}\n\nclass SCMHistoryViewPaneActionRunner extends ActionRunner {\n\tconstructor(\n\t\t@IProgressService private readonly _progressService: IProgressService,\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected override runAction(\n\t\taction: IAction,\n\t\tcontext?: unknown,\n\t): Promise<void> {\n\t\treturn this._progressService.withProgress(\n\t\t\t{ location: HISTORY_VIEW_PANE_ID },\n\t\t\tasync () => await super.runAction(action, context),\n\t\t);\n\t}\n}\n\nclass SCMHistoryTreeAccessibilityProvider\n\timplements IListAccessibilityProvider<TreeElement>\n{\n\tgetWidgetAriaLabel(): string {\n\t\treturn localize(\"scm history\", \"Source Control History\");\n\t}\n\n\tgetAriaLabel(element: TreeElement): string {\n\t\tif (isSCMRepository(element)) {\n\t\t\treturn `${element.provider.name} ${element.provider.label}`;\n\t\t} else if (isSCMHistoryItemViewModelTreeElement(element)) {\n\t\t\tconst historyItem = element.historyItemViewModel.historyItem;\n\t\t\treturn `${stripIcons(historyItem.message).trim()}${historyItem.author ? `, ${historyItem.author}` : \"\"}`;\n\t\t} else {\n\t\t\treturn \"\";\n\t\t}\n\t}\n}\n\nclass SCMHistoryTreeIdentityProvider implements IIdentityProvider<TreeElement> {\n\tgetId(element: TreeElement): string {\n\t\tif (isSCMRepository(element)) {\n\t\t\tconst provider = element.provider;\n\t\t\treturn `repo:${provider.id}`;\n\t\t} else if (isSCMHistoryItemViewModelTreeElement(element)) {\n\t\t\tconst provider = element.repository.provider;\n\t\t\tconst historyItem = element.historyItemViewModel.historyItem;\n\t\t\treturn `historyItem:${provider.id}/${historyItem.id}/${historyItem.parentIds.join(\",\")}`;\n\t\t} else if (isSCMHistoryItemLoadMoreTreeElement(element)) {\n\t\t\tconst provider = element.repository.provider;\n\t\t\treturn `historyItemLoadMore:${provider.id}}`;\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid tree element\");\n\t\t}\n\t}\n}\n\nclass SCMHistoryTreeKeyboardNavigationLabelProvider\n\timplements IKeyboardNavigationLabelProvider<TreeElement>\n{\n\tgetKeyboardNavigationLabel(\n\t\telement: TreeElement,\n\t): { toString(): string } | { toString(): string }[] | undefined {\n\t\tif (isSCMRepository(element)) {\n\t\t\treturn undefined;\n\t\t} else if (isSCMHistoryItemViewModelTreeElement(element)) {\n\t\t\t// For a history item we want to match both the message and\n\t\t\t// the author. A match in the message takes precedence over\n\t\t\t// a match in the author.\n\t\t\treturn [\n\t\t\t\telement.historyItemViewModel.historyItem.message,\n\t\t\t\telement.historyItemViewModel.historyItem.author,\n\t\t\t];\n\t\t} else if (isSCMHistoryItemLoadMoreTreeElement(element)) {\n\t\t\t// We don't want to match the load more element\n\t\t\treturn \"\";\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid tree element\");\n\t\t}\n\t}\n}\n\nclass SCMHistoryTreeDataSource\n\textends Disposable\n\timplements IAsyncDataSource<SCMHistoryViewModel, TreeElement>\n{\n\tasync getChildren(\n\t\tinputOrElement: SCMHistoryViewModel | TreeElement,\n\t): Promise<Iterable<TreeElement>> {\n\t\tif (!(inputOrElement instanceof SCMHistoryViewModel)) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// History items\n\t\tconst children: TreeElement[] = [];\n\t\tconst historyItems = await inputOrElement.getHistoryItems();\n\t\tchildren.push(...historyItems);\n\n\t\t// Load More element\n\t\tconst repository = inputOrElement.repository.get();\n\t\tconst lastHistoryItem = tail(historyItems);\n\t\tif (\n\t\t\trepository &&\n\t\t\tlastHistoryItem &&\n\t\t\tlastHistoryItem.historyItemViewModel.outputSwimlanes.length > 0\n\t\t) {\n\t\t\tchildren.push({\n\t\t\t\trepository,\n\t\t\t\tgraphColumns:\n\t\t\t\t\tlastHistoryItem.historyItemViewModel.outputSwimlanes,\n\t\t\t\ttype: \"historyItemLoadMore\",\n\t\t\t} satisfies SCMHistoryItemLoadMoreTreeElement);\n\t\t}\n\n\t\treturn children;\n\t}\n\n\thasChildren(inputOrElement: SCMHistoryViewModel | TreeElement): boolean {\n\t\treturn inputOrElement instanceof SCMHistoryViewModel;\n\t}\n}\n\ntype HistoryItemRefsFilter = \"all\" | \"auto\" | ISCMHistoryItemRef[];\ntype HistoryItemState = {\n\thistoryItemRefs: ISCMHistoryItemRef[];\n\tviewModels: SCMHistoryItemViewModelTreeElement[];\n\tloadMore: boolean | string;\n};\n\nclass SCMHistoryViewModel extends Disposable {\n\tprivate readonly _closedRepository = observableFromEvent(\n\t\tthis,\n\t\tthis._scmService.onDidRemoveRepository,\n\t\t(repository) => repository,\n\t);\n\n\tprivate readonly _firstRepository =\n\t\tthis._scmService.repositoryCount > 0\n\t\t\t? constObservable(Iterable.first(this._scmService.repositories))\n\t\t\t: observableFromEvent(\n\t\t\t\t\tthis,\n\t\t\t\t\tEvent.once(this._scmService.onDidAddRepository),\n\t\t\t\t\t(repository) => repository,\n\t\t\t\t);\n\n\tprivate readonly _selectedRepository = observableValue<\n\t\t\"auto\" | ISCMRepository\n\t>(this, \"auto\");\n\n\tprivate readonly _graphRepository = derived((reader) => {\n\t\tconst selectedRepository = this._selectedRepository.read(reader);\n\t\tif (selectedRepository !== \"auto\") {\n\t\t\treturn selectedRepository;\n\t\t}\n\n\t\treturn this._scmViewService.activeRepository.read(reader);\n\t});\n\n\t/**\n\t * The active | selected repository takes precedence over the first repository when the observable\n\t * values are updated in the same transaction (or during the initial read of the observable value).\n\t */\n\treadonly repository = latestChangedValue(this, [\n\t\tthis._firstRepository,\n\t\tthis._graphRepository,\n\t]);\n\treadonly historyItemsFilter: ISettableObservable<HistoryItemRefsFilter>;\n\n\tprivate readonly _state = new Map<ISCMRepository, HistoryItemState>();\n\n\tconstructor(\n\t\t@IConfigurationService\n\t\tprivate readonly _configurationService: IConfigurationService,\n\t\t@ISCMService private readonly _scmService: ISCMService,\n\t\t@ISCMViewService private readonly _scmViewService: ISCMViewService,\n\t\t@IStorageService private readonly _storageService: IStorageService\n\t) {\n\t\tsuper();\n\n\t\ttry {\n\t\t\t// Restore references filter from workspace storage\n\t\t\tconst filterData = this._storageService.get('scm.graphView.referencesFiler', StorageScope.WORKSPACE) ?? 'auto';\n\t\t\tconst filter = filterData === 'auto' || filterData === 'all' ? filterData : JSON.parse(filterData) as ISCMHistoryItemRef[];\n\n\t\t\tthis.historyItemsFilter = observableValue<HistoryItemRefsFilter>(this, filter);\n\t\t} catch {\n\t\t\t// Default to `auto` in case the storage value is invalid\n\t\t\tthis.historyItemsFilter = observableValue<HistoryItemRefsFilter>(this, 'auto');\n\t\t}\n\n\t\t// Closed repository cleanup\n\t\tthis._register(\n\t\t\tautorun((reader) => {\n\t\t\t\tconst repository = this._closedRepository.read(reader);\n\t\t\t\tif (!repository) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.repository.get() === repository) {\n\t\t\t\t\tthis._selectedRepository.set(\n\t\t\t\t\t\tIterable.first(this._scmService.repositories) ?? \"auto\",\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthis._state.delete(repository);\n\t\t\t}),\n\t\t);\n\t}\n\n\tclearRepositoryState(): void {\n\t\tconst repository = this.repository.get();\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._state.delete(repository);\n\t}\n\n\tgetRepositoryState(): HistoryItemState | undefined {\n\t\tconst repository = this.repository.get();\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this._state.get(repository);\n\t}\n\n\tsetLoadMore(repository: ISCMRepository, loadMore: boolean | string): void {\n\t\tconst state = this._state.get(repository);\n\t\tif (!state) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._state.set(repository, { ...state, loadMore });\n\t}\n\n\tasync getHistoryItems(): Promise<SCMHistoryItemViewModelTreeElement[]> {\n\t\tconst repository = this.repository.get();\n\t\tconst historyProvider = repository?.provider.historyProvider.get();\n\n\t\tif (!repository || !historyProvider) {\n\t\t\treturn [];\n\t\t}\n\n\t\tlet state = this._state.get(repository);\n\n\t\tif (!state || state.loadMore !== false) {\n\t\t\tlet historyItemRefs = state?.historyItemRefs;\n\t\t\tconst historyItems =\n\t\t\t\tstate?.viewModels.map(\n\t\t\t\t\t(vm) => vm.historyItemViewModel.historyItem,\n\t\t\t\t) ?? [];\n\n\t\t\tif (!historyItemRefs) {\n\t\t\t\tconst historyItemsFilter = this.historyItemsFilter.get();\n\n\t\t\t\tswitch (historyItemsFilter) {\n\t\t\t\t\tcase \"all\":\n\t\t\t\t\t\thistoryItemRefs =\n\t\t\t\t\t\t\t(await historyProvider.provideHistoryItemRefs()) ??\n\t\t\t\t\t\t\t[];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"auto\":\n\t\t\t\t\t\thistoryItemRefs = [\n\t\t\t\t\t\t\thistoryProvider.historyItemRef.get(),\n\t\t\t\t\t\t\thistoryProvider.historyItemRemoteRef.get(),\n\t\t\t\t\t\t\thistoryProvider.historyItemBaseRef.get(),\n\t\t\t\t\t\t].filter((ref) => !!ref);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\thistoryItemRefs = historyItemsFilter;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst limit = clamp(\n\t\t\t\tthis._configurationService.getValue<number>(\n\t\t\t\t\t\"scm.graph.pageSize\",\n\t\t\t\t),\n\t\t\t\t1,\n\t\t\t\t1000,\n\t\t\t);\n\t\t\tconst historyItemRefIds = historyItemRefs.map(\n\t\t\t\t(ref) => ref.revision ?? ref.id,\n\t\t\t);\n\n\t\t\tdo {\n\t\t\t\t// Fetch the next page of history items\n\t\t\t\thistoryItems.push(\n\t\t\t\t\t...((await historyProvider.provideHistoryItems({\n\t\t\t\t\t\thistoryItemRefs: historyItemRefIds,\n\t\t\t\t\t\tlimit,\n\t\t\t\t\t\tskip: historyItems.length,\n\t\t\t\t\t})) ?? []),\n\t\t\t\t);\n\t\t\t} while (\n\t\t\t\ttypeof state?.loadMore === \"string\" &&\n\t\t\t\t!historyItems.find((item) => item.id === state?.loadMore)\n\t\t\t);\n\n\t\t\t// Create the color map\n\t\t\tconst colorMap = this._getGraphColorMap(historyItemRefs);\n\n\t\t\tconst viewModels = toISCMHistoryItemViewModelArray(\n\t\t\t\thistoryItems,\n\t\t\t\tcolorMap,\n\t\t\t\thistoryProvider.historyItemRef.get(),\n\t\t\t).map(\n\t\t\t\t(historyItemViewModel) =>\n\t\t\t\t\t({\n\t\t\t\t\t\trepository,\n\t\t\t\t\t\thistoryItemViewModel,\n\t\t\t\t\t\ttype: \"historyItemViewModel\",\n\t\t\t\t\t}) satisfies SCMHistoryItemViewModelTreeElement,\n\t\t\t);\n\n\t\t\tstate = { historyItemRefs, viewModels, loadMore: false };\n\t\t\tthis._state.set(repository, state);\n\t\t}\n\n\t\treturn state.viewModels;\n\t}\n\n\tsetRepository(repository: ISCMRepository | \"auto\"): void {\n\t\tthis._selectedRepository.set(repository, undefined);\n\t}\n\n\tsetHistoryItemsFilter(filter: \"all\" | \"auto\" | ISCMHistoryItemRef[]): void {\n\t\tthis._storageService.store(\n\t\t\t\"scm.graphView.referencesFiler\",\n\t\t\tfilter,\n\t\t\tStorageScope.WORKSPACE,\n\t\t\tStorageTarget.USER,\n\t\t);\n\t\tthis.historyItemsFilter.set(filter, undefined);\n\t}\n\n\tprivate _getGraphColorMap(\n\t\thistoryItemRefs: ISCMHistoryItemRef[],\n\t): Map<string, ColorIdentifier | undefined> {\n\t\tconst repository = this.repository.get();\n\t\tconst historyProvider = repository?.provider.historyProvider.get();\n\t\tconst historyItemRef = historyProvider?.historyItemRef.get();\n\t\tconst historyItemRemoteRef =\n\t\t\thistoryProvider?.historyItemRemoteRef.get();\n\t\tconst historyItemBaseRef = historyProvider?.historyItemBaseRef.get();\n\n\t\tconst colorMap = new Map<string, ColorIdentifier | undefined>();\n\n\t\tif (historyItemRef) {\n\t\t\tcolorMap.set(historyItemRef.id, historyItemRef.color);\n\n\t\t\tif (historyItemRemoteRef) {\n\t\t\t\tcolorMap.set(\n\t\t\t\t\thistoryItemRemoteRef.id,\n\t\t\t\t\thistoryItemRemoteRef.color,\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (historyItemBaseRef) {\n\t\t\t\tcolorMap.set(historyItemBaseRef.id, historyItemBaseRef.color);\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining history item references to the color map\n\t\t// if not already present. These history item references will\n\t\t// be colored using the color of the history item to which they\n\t\t// point to.\n\t\tfor (const ref of historyItemRefs) {\n\t\t\tif (!colorMap.has(ref.id)) {\n\t\t\t\tcolorMap.set(ref.id, undefined);\n\t\t\t}\n\t\t}\n\n\t\treturn colorMap;\n\t}\n\n\toverride dispose(): void {\n\t\tthis._state.clear();\n\t\tsuper.dispose();\n\t}\n}\n\ntype RepositoryQuickPickItem = IQuickPickItem & {\n\trepository: \"auto\" | ISCMRepository;\n};\n\nclass RepositoryPicker extends Disposable {\n\tprivate readonly _autoQuickPickItem: RepositoryQuickPickItem = {\n\t\tlabel: localize(\"auto\", \"Auto\"),\n\t\tdescription: localize(\n\t\t\t\"activeRepository\",\n\t\t\t\"Show the source control graph for the active repository\",\n\t\t),\n\t\trepository: \"auto\",\n\t};\n\n\tconstructor(\n\t\t@IQuickInputService\n\t\tprivate readonly _quickInputService: IQuickInputService,\n\t\t@ISCMViewService private readonly _scmViewService: ISCMViewService,\n\t) {\n\t\tsuper();\n\t}\n\n\tasync pickRepository(): Promise<RepositoryQuickPickItem | undefined> {\n\t\tconst picks: (RepositoryQuickPickItem | IQuickPickSeparator)[] = [\n\t\t\tthis._autoQuickPickItem,\n\t\t\t{ type: \"separator\" },\n\t\t];\n\n\t\tpicks.push(\n\t\t\t...this._scmViewService.repositories.map((r) => ({\n\t\t\t\tlabel: r.provider.name,\n\t\t\t\tdescription: r.provider.rootUri?.fsPath,\n\t\t\t\ticonClass: ThemeIcon.asClassName(Codicon.repo),\n\t\t\t\trepository: r,\n\t\t\t})),\n\t\t);\n\n\t\treturn this._quickInputService.pick(picks, {\n\t\t\tplaceHolder: localize(\n\t\t\t\t\"scmGraphRepository\",\n\t\t\t\t\"Select the repository to view, type to filter all repositories\",\n\t\t\t),\n\t\t});\n\t}\n}\n\ntype HistoryItemRefQuickPickItem = IQuickPickItem & {\n\thistoryItemRef: \"all\" | \"auto\" | ISCMHistoryItemRef;\n};\n\nclass HistoryItemRefPicker extends Disposable {\n\tprivate readonly _allQuickPickItem: HistoryItemRefQuickPickItem = {\n\t\tid: \"all\",\n\t\tlabel: localize(\"all\", \"All\"),\n\t\tdescription: localize(\n\t\t\t\"allHistoryItemRefs\",\n\t\t\t\"All history item references\",\n\t\t),\n\t\thistoryItemRef: \"all\",\n\t};\n\n\tprivate readonly _autoQuickPickItem: HistoryItemRefQuickPickItem = {\n\t\tid: \"auto\",\n\t\tlabel: localize(\"auto\", \"Auto\"),\n\t\tdescription: localize(\n\t\t\t\"currentHistoryItemRef\",\n\t\t\t\"Current history item reference(s)\",\n\t\t),\n\t\thistoryItemRef: \"auto\",\n\t};\n\n\tconstructor(\n\t\tprivate readonly _historyProvider: ISCMHistoryProvider,\n\t\tprivate readonly _historyItemsFilter:\n\t\t\t| \"all\"\n\t\t\t| \"auto\"\n\t\t\t| ISCMHistoryItemRef[],\n\t\t@IQuickInputService\n\t\tprivate readonly _quickInputService: IQuickInputService,\n\t) {\n\t\tsuper();\n\t}\n\n\tasync pickHistoryItemRef(): Promise<\n\t\t\"all\" | \"auto\" | ISCMHistoryItemRef[] | undefined\n\t> {\n\t\tconst quickPick =\n\t\t\tthis._quickInputService.createQuickPick<HistoryItemRefQuickPickItem>(\n\t\t\t\t{ useSeparators: true },\n\t\t\t);\n\t\tthis._store.add(quickPick);\n\n\t\tquickPick.placeholder = localize(\n\t\t\t\"scmGraphHistoryItemRef\",\n\t\t\t\"Select one/more history item references to view, type to filter\",\n\t\t);\n\t\tquickPick.canSelectMany = true;\n\t\tquickPick.hideCheckAll = true;\n\t\tquickPick.busy = true;\n\t\tquickPick.show();\n\n\t\tconst items = await this._createQuickPickItems();\n\n\t\t// Set initial selection\n\t\tlet selectedItems: HistoryItemRefQuickPickItem[] = [];\n\t\tif (this._historyItemsFilter === \"all\") {\n\t\t\tselectedItems.push(this._allQuickPickItem);\n\t\t} else if (this._historyItemsFilter === \"auto\") {\n\t\t\tselectedItems.push(this._autoQuickPickItem);\n\t\t} else {\n\t\t\tlet index = 0;\n\t\t\twhile (index < items.length) {\n\t\t\t\tif (items[index].type === \"separator\") {\n\t\t\t\t\tindex++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tthis._historyItemsFilter.some(\n\t\t\t\t\t\t(ref) => ref.id === items[index].id,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tconst item = items.splice(\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\t1,\n\t\t\t\t\t) as HistoryItemRefQuickPickItem[];\n\t\t\t\t\tselectedItems.push(...item);\n\t\t\t\t} else {\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Insert the selected items after `All` and `Auto`\n\t\t\titems.splice(2, 0, { type: \"separator\" }, ...selectedItems);\n\t\t}\n\n\t\tquickPick.items = items;\n\t\tquickPick.selectedItems = selectedItems;\n\t\tquickPick.busy = false;\n\n\t\treturn new Promise<\"all\" | \"auto\" | ISCMHistoryItemRef[] | undefined>(\n\t\t\t(resolve) => {\n\t\t\t\tthis._store.add(\n\t\t\t\t\tquickPick.onDidChangeSelection((items) => {\n\t\t\t\t\t\tconst { added } = delta(selectedItems, items, (a, b) =>\n\t\t\t\t\t\t\tcompare(a.id ?? \"\", b.id ?? \"\"),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (added.length > 0) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tadded[0].historyItemRef === \"all\" ||\n\t\t\t\t\t\t\t\tadded[0].historyItemRef === \"auto\"\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tquickPick.selectedItems = [added[0]];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Remove 'all' and 'auto' items if present\n\t\t\t\t\t\t\t\tquickPick.selectedItems = [\n\t\t\t\t\t\t\t\t\t...quickPick.selectedItems.filter(\n\t\t\t\t\t\t\t\t\t\t(i) =>\n\t\t\t\t\t\t\t\t\t\t\ti.historyItemRef !== \"all\" &&\n\t\t\t\t\t\t\t\t\t\t\ti.historyItemRef !== \"auto\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectedItems = [...quickPick.selectedItems];\n\t\t\t\t\t}),\n\t\t\t\t);\n\n\t\t\t\tthis._store.add(\n\t\t\t\t\tquickPick.onDidAccept(() => {\n\t\t\t\t\t\tif (selectedItems.length === 0) {\n\t\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tselectedItems.length === 1 &&\n\t\t\t\t\t\t\tselectedItems[0].historyItemRef === \"all\"\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tresolve(\"all\");\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tselectedItems.length === 1 &&\n\t\t\t\t\t\t\tselectedItems[0].historyItemRef === \"auto\"\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tresolve(\"auto\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\tselectedItems.map(\n\t\t\t\t\t\t\t\t\t(item) => item.historyItemRef,\n\t\t\t\t\t\t\t\t) as ISCMHistoryItemRef[],\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tquickPick.hide();\n\t\t\t\t\t}),\n\t\t\t\t);\n\n\t\t\t\tthis._store.add(\n\t\t\t\t\tquickPick.onDidHide(() => {\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t\tthis.dispose();\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t},\n\t\t);\n\t}\n\n\tprivate async _createQuickPickItems(): Promise<\n\t\t(HistoryItemRefQuickPickItem | IQuickPickSeparator)[]\n\t> {\n\t\tconst picks: (HistoryItemRefQuickPickItem | IQuickPickSeparator)[] = [\n\t\t\tthis._allQuickPickItem,\n\t\t\tthis._autoQuickPickItem,\n\t\t];\n\n\t\tconst historyItemRefs =\n\t\t\t(await this._historyProvider.provideHistoryItemRefs()) ?? [];\n\t\tconst historyItemRefsByCategory = groupBy(historyItemRefs, (a, b) =>\n\t\t\tcompare(a.category ?? \"\", b.category ?? \"\"),\n\t\t);\n\n\t\tfor (const refs of historyItemRefsByCategory) {\n\t\t\tif (refs.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpicks.push({ type: \"separator\", label: refs[0].category });\n\n\t\t\tpicks.push(\n\t\t\t\t...refs.map((ref) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: ref.id,\n\t\t\t\t\t\tlabel: ref.name,\n\t\t\t\t\t\tdescription: ref.description,\n\t\t\t\t\t\ticonClass: ThemeIcon.isThemeIcon(ref.icon)\n\t\t\t\t\t\t\t? ThemeIcon.asClassName(ref.icon)\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\thistoryItemRef: ref,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\treturn picks;\n\t}\n}\n\nexport class SCMHistoryViewPane extends ViewPane {\n\tprivate _treeContainer!: HTMLElement;\n\tprivate _tree!: WorkbenchAsyncDataTree<\n\t\tSCMHistoryViewModel,\n\t\tTreeElement,\n\t\tFuzzyScore\n\t>;\n\tprivate _treeViewModel!: SCMHistoryViewModel;\n\tprivate _treeDataSource!: SCMHistoryTreeDataSource;\n\tprivate _treeIdentityProvider!: SCMHistoryTreeIdentityProvider;\n\n\tprivate readonly _repositoryLoadMore = observableValue(this, false);\n\tprivate readonly _repositoryOutdated = observableValue(this, false);\n\n\tprivate readonly _actionRunner: IActionRunner;\n\tprivate readonly _visibilityDisposables = new DisposableStore();\n\n\tprivate readonly _treeOperationSequencer = new Sequencer();\n\tprivate readonly _treeLoadMoreSequencer = new Sequencer();\n\tprivate readonly _updateChildrenThrottler = new Throttler();\n\n\tprivate readonly _scmProviderCtx: IContextKey<string | undefined>;\n\n\tconstructor(\n\t\toptions: IViewPaneOptions,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@IProgressService private readonly _progressService: IProgressService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IHoverService hoverService: IHoverService,\n\t) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\t...options,\n\t\t\t\ttitleMenuId: MenuId.SCMHistoryTitle,\n\t\t\t\tshowActions: ViewPaneShowActions.WhenExpanded,\n\t\t\t},\n\t\t\tkeybindingService,\n\t\t\tcontextMenuService,\n\t\t\tconfigurationService,\n\t\t\tcontextKeyService,\n\t\t\tviewDescriptorService,\n\t\t\tinstantiationService,\n\t\t\topenerService,\n\t\t\tthemeService,\n\t\t\ttelemetryService,\n\t\t\thoverService,\n\t\t);\n\n\t\tthis._scmProviderCtx = ContextKeys.SCMProvider.bindTo(\n\t\t\tthis.scopedContextKeyService,\n\t\t);\n\n\t\tthis._actionRunner = this.instantiationService.createInstance(\n\t\t\tSCMHistoryViewPaneActionRunner,\n\t\t);\n\t\tthis._register(this._actionRunner);\n\n\t\tthis._register(this._updateChildrenThrottler);\n\t}\n\n\tprotected override renderHeaderTitle(container: HTMLElement): void {\n\t\tsuper.renderHeaderTitle(container, this.title);\n\n\t\tconst element = h(\"div.scm-graph-view-badge-container\", [\n\t\t\th(\"div.scm-graph-view-badge.monaco-count-badge.long@badge\"),\n\t\t]);\n\n\t\telement.badge.textContent = \"Outdated\";\n\t\tcontainer.appendChild(element.root);\n\n\t\tthis._register(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\telement.root,\n\t\t\t\t{\n\t\t\t\t\tmarkdown: {\n\t\t\t\t\t\tvalue: localize(\n\t\t\t\t\t\t\t\"scmGraphViewOutdated\",\n\t\t\t\t\t\t\t\"Please refresh the graph using the refresh action ($(refresh)).\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tsupportThemeIcons: true,\n\t\t\t\t\t},\n\t\t\t\t\tmarkdownNotSupportedFallback: undefined,\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tautorun((reader) => {\n\t\t\t\tconst outdated = this._repositoryOutdated.read(reader);\n\t\t\t\telement.root.style.display = outdated ? \"\" : \"none\";\n\t\t\t}),\n\t\t);\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tthis._treeContainer = append(\n\t\t\tcontainer,\n\t\t\t$(\".scm-view.scm-history-view\"),\n\t\t);\n\t\tthis._treeContainer.classList.add(\"file-icon-themable-tree\");\n\n\t\tthis._createTree(this._treeContainer);\n\n\t\tthis.onDidChangeBodyVisibility(async (visible) => {\n\t\t\tif (!visible) {\n\t\t\t\tthis._visibilityDisposables.clear();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Create view model\n\t\t\tthis._treeViewModel =\n\t\t\t\tthis.instantiationService.createInstance(SCMHistoryViewModel);\n\t\t\tthis._visibilityDisposables.add(this._treeViewModel);\n\n\t\t\t// Initial rendering\n\t\t\tawait this._progressService.withProgress(\n\t\t\t\t{ location: this.id },\n\t\t\t\tasync () => {\n\t\t\t\t\tconst firstRepositoryInitialized = derived(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t(reader) => {\n\t\t\t\t\t\t\tconst repository =\n\t\t\t\t\t\t\t\tthis._treeViewModel.repository.read(reader);\n\t\t\t\t\t\t\tconst historyProvider =\n\t\t\t\t\t\t\t\trepository?.provider.historyProvider.read(\n\t\t\t\t\t\t\t\t\treader,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst historyItemRef =\n\t\t\t\t\t\t\t\thistoryProvider?.historyItemRef.read(reader);\n\n\t\t\t\t\t\t\treturn historyItemRef !== undefined\n\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t: undefined;\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\n\t\t\t\t\t// Wait for first repository to be initialized\n\t\t\t\t\tawait waitForState(firstRepositoryInitialized);\n\n\t\t\t\t\t// Set tree input\n\t\t\t\t\tawait this._treeOperationSequencer.queue(async () => {\n\t\t\t\t\t\tawait this._tree.setInput(this._treeViewModel);\n\t\t\t\t\t\tthis._tree.scrollTop = 0;\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t);\n\n\t\t\t// Repository change\n\t\t\tlet isFirstRun = true;\n\t\t\tthis._visibilityDisposables.add(\n\t\t\t\tautorunWithStore((reader, store) => {\n\t\t\t\t\tconst repository =\n\t\t\t\t\t\tthis._treeViewModel.repository.read(reader);\n\t\t\t\t\tconst historyProvider =\n\t\t\t\t\t\trepository?.provider.historyProvider.read(reader);\n\t\t\t\t\tif (!repository || !historyProvider) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Update context\n\t\t\t\t\tthis._scmProviderCtx.set(repository.provider.contextValue);\n\n\t\t\t\t\t// HistoryItemId changed (checkout)\n\t\t\t\t\tconst historyItemRefId = derived((reader) => {\n\t\t\t\t\t\treturn historyProvider.historyItemRef.read(reader)?.id;\n\t\t\t\t\t});\n\t\t\t\t\tstore.add(\n\t\t\t\t\t\trunOnChange(historyItemRefId, () => {\n\t\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\n\t\t\t\t\t// HistoryItemRefs changed\n\t\t\t\t\tstore.add(\n\t\t\t\t\t\trunOnChange(\n\t\t\t\t\t\t\thistoryProvider.historyItemRefChanges,\n\t\t\t\t\t\t\t(changes) => {\n\t\t\t\t\t\t\t\tif (changes.silent) {\n\t\t\t\t\t\t\t\t\t// The history item reference changes occurred in the background (ex: Auto Fetch)\n\t\t\t\t\t\t\t\t\t// If tree is scrolled to the top, we can safely refresh the tree, otherwise we\n\t\t\t\t\t\t\t\t\t// will show a visual cue that the view is outdated.\n\t\t\t\t\t\t\t\t\tif (this._tree.scrollTop === 0) {\n\t\t\t\t\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Show the \"Outdated\" badge on the view\n\t\t\t\t\t\t\t\t\tthis._repositoryOutdated.set(\n\t\t\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// If there are any removed history item references we need to check whether they are\n\t\t\t\t\t\t\t\t// currently being used in the filter. If they are, we need to update the filter which\n\t\t\t\t\t\t\t\t// will result in the graph being refreshed.\n\t\t\t\t\t\t\t\tif (changes.removed.length !== 0) {\n\t\t\t\t\t\t\t\t\tconst historyItemsFilter =\n\t\t\t\t\t\t\t\t\t\tthis._treeViewModel.historyItemsFilter.get();\n\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\thistoryItemsFilter !== \"all\" &&\n\t\t\t\t\t\t\t\t\t\thistoryItemsFilter !== \"auto\"\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tlet updateFilter = false;\n\t\t\t\t\t\t\t\t\t\tconst historyItemRefs = [\n\t\t\t\t\t\t\t\t\t\t\t...historyItemsFilter,\n\t\t\t\t\t\t\t\t\t\t];\n\n\t\t\t\t\t\t\t\t\t\tfor (const ref of changes.removed) {\n\t\t\t\t\t\t\t\t\t\t\tconst index =\n\t\t\t\t\t\t\t\t\t\t\t\thistoryItemRefs.findIndex(\n\t\t\t\t\t\t\t\t\t\t\t\t\t(item) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.id === ref.id,\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\t\t\t\t\t\t\thistoryItemRefs.splice(\n\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\tupdateFilter = true;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (updateFilter) {\n\t\t\t\t\t\t\t\t\t\t\tthis._treeViewModel.setHistoryItemsFilter(\n\t\t\t\t\t\t\t\t\t\t\t\thistoryItemRefs,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\n\t\t\t\t\t// HistoryItemRefs filter changed\n\t\t\t\t\tstore.add(\n\t\t\t\t\t\trunOnChange(\n\t\t\t\t\t\t\tthis._treeViewModel.historyItemsFilter,\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\n\t\t\t\t\t// We skip refreshing the graph on the first execution of the autorun\n\t\t\t\t\t// since the graph for the first repository is rendered when the tree\n\t\t\t\t\t// input is set.\n\t\t\t\t\tif (!isFirstRun) {\n\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t}\n\t\t\t\t\tisFirstRun = false;\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\t\tthis._tree.layout(height, width);\n\t}\n\n\toverride getActionRunner(): IActionRunner | undefined {\n\t\treturn this._actionRunner;\n\t}\n\n\toverride getActionsContext(): ISCMProvider | undefined {\n\t\treturn this._treeViewModel?.repository.get()?.provider;\n\t}\n\n\toverride getActionViewItem(\n\t\taction: IAction,\n\t\toptions?: IDropdownMenuActionViewItemOptions,\n\t): IActionViewItem | undefined {\n\t\tif (action.id === PICK_REPOSITORY_ACTION_ID) {\n\t\t\tconst repository = this._treeViewModel?.repository.get();\n\t\t\tif (repository) {\n\t\t\t\treturn new SCMRepositoryActionViewItem(\n\t\t\t\t\trepository,\n\t\t\t\t\taction,\n\t\t\t\t\toptions,\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (action.id === PICK_HISTORY_ITEM_REFS_ACTION_ID) {\n\t\t\tconst repository = this._treeViewModel?.repository.get();\n\t\t\tconst historyItemsFilter =\n\t\t\t\tthis._treeViewModel?.historyItemsFilter.get();\n\t\t\tif (repository && historyItemsFilter) {\n\t\t\t\treturn new SCMHistoryItemRefsActionViewItem(\n\t\t\t\t\trepository,\n\t\t\t\t\thistoryItemsFilter,\n\t\t\t\t\taction,\n\t\t\t\t\toptions,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn super.getActionViewItem(action, options);\n\t}\n\n\tasync refresh(): Promise<void> {\n\t\tawait this._updateChildren(true);\n\n\t\tthis.updateActions();\n\t\tthis._repositoryOutdated.set(false, undefined);\n\t\tthis._tree.scrollTop = 0;\n\t}\n\n\tasync pickRepository(): Promise<void> {\n\t\tconst picker =\n\t\t\tthis._instantiationService.createInstance(RepositoryPicker);\n\t\tconst result = await picker.pickRepository();\n\n\t\tif (result) {\n\t\t\tthis._treeViewModel.setRepository(result.repository);\n\t\t}\n\t}\n\n\tasync pickHistoryItemRef(): Promise<void> {\n\t\tconst repository = this._treeViewModel.repository.get();\n\t\tconst historyProvider = repository?.provider.historyProvider.get();\n\n\t\tif (!historyProvider) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst historyItemsFilter = this._treeViewModel.historyItemsFilter.get();\n\t\tconst picker = this._instantiationService.createInstance(\n\t\t\tHistoryItemRefPicker,\n\t\t\thistoryProvider,\n\t\t\thistoryItemsFilter,\n\t\t);\n\t\tconst result = await picker.pickHistoryItemRef();\n\n\t\tif (result) {\n\t\t\tthis._treeViewModel.setHistoryItemsFilter(result);\n\t\t}\n\t}\n\n\tasync revealCurrentHistoryItem(): Promise<void> {\n\t\tconst repository = this._treeViewModel.repository.get();\n\t\tconst historyProvider = repository?.provider.historyProvider.get();\n\t\tconst historyItemRef = historyProvider?.historyItemRef.get();\n\n\t\tif (!repository || !historyItemRef?.revision) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst historyItemFilter = this._treeViewModel.historyItemsFilter.get();\n\n\t\t// Filter is `all`, `auto` or it contains the current history item\n\t\tif (\n\t\t\tArray.isArray(historyItemFilter) &&\n\t\t\t!historyItemFilter.find((r) => r.id === historyItemRef.id)\n\t\t) {\n\t\t\tthis._notificationService.info(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scmGraphViewRevealCurrentHistoryItem\",\n\t\t\t\t\t\"The current history item is not present in the source control graph. Please use the history item references picker to expand the set of history items in the graph.\",\n\t\t\t\t),\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst revealTreeNode = (): boolean => {\n\t\t\tconst state = this._treeViewModel.getRepositoryState();\n\t\t\tif (!state) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst historyItemViewModel = state.viewModels.find(\n\t\t\t\t(item) =>\n\t\t\t\t\titem.historyItemViewModel.historyItem.id ===\n\t\t\t\t\thistoryItemRef.revision,\n\t\t\t);\n\n\t\t\tif (\n\t\t\t\thistoryItemViewModel &&\n\t\t\t\tthis._tree.hasNode(historyItemViewModel)\n\t\t\t) {\n\t\t\t\tthis._tree.reveal(historyItemViewModel, 0.5);\n\n\t\t\t\tthis._tree.setSelection([historyItemViewModel]);\n\t\t\t\tthis._tree.setFocus([historyItemViewModel]);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\tif (revealTreeNode()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fetch current history item\n\t\tthis._treeViewModel.setLoadMore(repository, historyItemRef.revision);\n\n\t\t// Update the tree\n\t\tawait this._updateChildren();\n\n\t\t// Reveal node\n\t\trevealTreeNode();\n\t}\n\n\tprivate _createTree(container: HTMLElement): void {\n\t\tthis._treeIdentityProvider = new SCMHistoryTreeIdentityProvider();\n\n\t\tconst historyItemHoverDelegate =\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tHistoryItemHoverDelegate,\n\t\t\t\tthis.viewDescriptorService.getViewLocationById(this.id),\n\t\t\t);\n\t\tthis._register(historyItemHoverDelegate);\n\n\t\tthis._treeDataSource = this.instantiationService.createInstance(\n\t\t\tSCMHistoryTreeDataSource,\n\t\t);\n\t\tthis._register(this._treeDataSource);\n\n\t\tthis._tree = this.instantiationService.createInstance(\n\t\t\tWorkbenchAsyncDataTree,\n\t\t\t\"SCM History Tree\",\n\t\t\tcontainer,\n\t\t\tnew ListDelegate(),\n\t\t\t[\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tHistoryItemRenderer,\n\t\t\t\t\thistoryItemHoverDelegate,\n\t\t\t\t),\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tHistoryItemLoadMoreRenderer,\n\t\t\t\t\t() => this._repositoryLoadMore,\n\t\t\t\t\t(repository) => this._loadMoreCallback(repository),\n\t\t\t\t),\n\t\t\t],\n\t\t\tthis._treeDataSource,\n\t\t\t{\n\t\t\t\taccessibilityProvider:\n\t\t\t\t\tnew SCMHistoryTreeAccessibilityProvider(),\n\t\t\t\tidentityProvider: this._treeIdentityProvider,\n\t\t\t\tcollapseByDefault: (e: unknown) => false,\n\t\t\t\tkeyboardNavigationLabelProvider:\n\t\t\t\t\tnew SCMHistoryTreeKeyboardNavigationLabelProvider(),\n\t\t\t\thorizontalScrolling: false,\n\t\t\t\tmultipleSelectionSupport: false,\n\t\t\t},\n\t\t) as WorkbenchAsyncDataTree<\n\t\t\tSCMHistoryViewModel,\n\t\t\tTreeElement,\n\t\t\tFuzzyScore\n\t\t>;\n\t\tthis._register(this._tree);\n\n\t\tthis._tree.onDidOpen(this._onDidOpen, this, this._store);\n\t\tthis._tree.onContextMenu(this._onContextMenu, this, this._store);\n\t}\n\n\tprivate async _onDidOpen(\n\t\te: IOpenEvent<TreeElement | undefined>,\n\t): Promise<void> {\n\t\tif (!e.element) {\n\t\t\treturn;\n\t\t} else if (isSCMHistoryItemViewModelTreeElement(e.element)) {\n\t\t\tconst historyItem = e.element.historyItemViewModel.historyItem;\n\t\t\tconst historyItemParentId =\n\t\t\t\thistoryItem.parentIds.length > 0\n\t\t\t\t\t? historyItem.parentIds[0]\n\t\t\t\t\t: undefined;\n\n\t\t\tconst historyProvider =\n\t\t\t\te.element.repository.provider.historyProvider.get();\n\t\t\tconst historyItemChanges =\n\t\t\t\tawait historyProvider?.provideHistoryItemChanges(\n\t\t\t\t\thistoryItem.id,\n\t\t\t\t\thistoryItemParentId,\n\t\t\t\t);\n\t\t\tif (historyItemChanges) {\n\t\t\t\tconst title = `${historyItem.displayId ?? historyItem.id} - ${historyItem.message}`;\n\n\t\t\t\tconst rootUri = e.element.repository.provider.rootUri;\n\t\t\t\tconst path = rootUri\n\t\t\t\t\t? rootUri.path\n\t\t\t\t\t: e.element.repository.provider.label;\n\t\t\t\tconst multiDiffSourceUri = URI.from(\n\t\t\t\t\t{\n\t\t\t\t\t\tscheme: \"scm-history-item\",\n\t\t\t\t\t\tpath: `${path}/${historyItemParentId}..${historyItem.id}`,\n\t\t\t\t\t},\n\t\t\t\t\ttrue,\n\t\t\t\t);\n\n\t\t\t\tawait this._commandService.executeCommand(\n\t\t\t\t\t\"_workbench.openMultiDiffEditor\",\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t\tmultiDiffSourceUri,\n\t\t\t\t\t\tresources: historyItemChanges,\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (isSCMHistoryItemLoadMoreTreeElement(e.element)) {\n\t\t\tconst pageOnScroll =\n\t\t\t\tthis.configurationService.getValue<boolean>(\n\t\t\t\t\t\"scm.graph.pageOnScroll\",\n\t\t\t\t) === true;\n\t\t\tif (!pageOnScroll) {\n\t\t\t\tthis._loadMoreCallback(e.element.repository);\n\t\t\t\tthis._tree.setSelection([]);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _onContextMenu(e: ITreeContextMenuEvent<TreeElement | null>): void {\n\t\tconst element = e.element;\n\n\t\tif (!element || !isSCMHistoryItemViewModelTreeElement(element)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tmenuId: MenuId.SCMChangesContext,\n\t\t\tmenuActionOptions: {\n\t\t\t\targ: element.repository.provider,\n\t\t\t\tshouldForwardArgs: true,\n\t\t\t},\n\t\t\tgetAnchor: () => e.anchor,\n\t\t\tgetActionsContext: () => element.historyItemViewModel.historyItem,\n\t\t});\n\t}\n\n\tprivate async _loadMoreCallback(repository: ISCMRepository): Promise<void> {\n\t\treturn this._treeLoadMoreSequencer.queue(async () => {\n\t\t\tif (this._repositoryLoadMore.get()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._repositoryLoadMore.set(true, undefined);\n\t\t\tthis._treeViewModel.setLoadMore(repository, true);\n\n\t\t\tawait this._updateChildren();\n\t\t\tthis._repositoryLoadMore.set(false, undefined);\n\t\t});\n\t}\n\n\tprivate _updateChildren(clearCache = false): Promise<void> {\n\t\treturn this._updateChildrenThrottler.queue(() =>\n\t\t\tthis._treeOperationSequencer.queue(async () => {\n\t\t\t\tif (clearCache) {\n\t\t\t\t\tthis._treeViewModel.clearRepositoryState();\n\t\t\t\t}\n\n\t\t\t\tawait this._progressService.withProgress(\n\t\t\t\t\t{ location: this.id },\n\t\t\t\t\tasync () => {\n\t\t\t\t\t\tawait this._tree.updateChildren(\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// diffIdentityProvider: this._treeIdentityProvider\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\t}\n\n\toverride dispose(): void {\n\t\tthis._visibilityDisposables.dispose();\n\t\tsuper.dispose();\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,OAAO;AACP,SAAS,GAAG,QAAQ,GAAG,aAAa;AACpC,SAAS,sBAAsB;AAQ/B,SAAS,+BAA+B;AACxC,SAAS,qBAAqB;AAC9B,SAAS,iBAAiB;AAc1B;AAAA,EACC;AAAA,OAGM;AACP,SAAS,OAAO,SAAS,YAAY;AACrC,SAAS,WAAW,iBAAiB;AACrC,SAAS,eAAe;AACxB,SAAS,eAAe;AACxB,SAAS,aAAa;AACtB;AAAA,EAGC;AAAA,OACM;AACP,SAAS,sBAAsB;AAC/B,SAAS,kBAAkB;AAC3B,SAAS,gBAAgB;AACzB;AAAA,EACC;AAAA,EACA;AAAA,OAEM;AACP,SAAS,aAAa;AACtB;AAAA,EAGC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,YAAY,cAAc;AAC1B,SAAS,eAAe;AACxB,SAAS,iBAAiB;AAC1B,SAAS,WAAW;AACpB,SAAS,gBAAgB;AACzB;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,yBAAyB;AAClC,SAAS,uBAAuB;AAChC,SAAS,6BAA6B;AACtC;AAAA,EACC;AAAA,EAEA;AAAA,OACM;AACP,SAAS,2BAA2B;AACpC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,OAEM;AACP,SAAS,0BAA0B;AACnC;AAAA,EAEC;AAAA,OACM;AACP,SAAS,4BAA4B;AACrC,SAAS,6BAA6B;AACtC,SAAS,sBAAsB;AAC/B,SAAS,wBAAwB;AACjC;AAAA,EACC;AAAA,OAGM;AACP;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,yBAAyB;AAClC;AAAA,EAEC;AAAA,EACA;AAAA,OACM;AACP,SAAS,qBAAqB;AAC9B;AAAA,EAEC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AASP;AAAA,EACC;AAAA,EAGA;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,mBAAmB;AAC5B;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAEP,MAAM,4BAA4B;AAClC,MAAM,mCACL;AAMD,MAAM,oCAAoC,eAAe;AAAA,EACxD,YACkB,aACjB,QACA,SACC;AACD,UAAM,MAAM,QAAQ,EAAE,GAAG,SAAS,MAAM,OAAO,OAAO,KAAK,CAAC;AAJ3C;AAAA,EAKlB;AAAA,EAvLD,OAgLyD;AAAA;AAAA;AAAA,EASrC,cAAoB;AACtC,QAAI,KAAK,QAAQ,SAAS,KAAK,OAAO;AACrC,WAAK,MAAM,UAAU,IAAI,6BAA6B;AAEtD,YAAM,OAAO,EAAE,OAAO;AACtB,WAAK,UAAU,IAAI,GAAG,UAAU,iBAAiB,QAAQ,IAAI,CAAC;AAE9D,YAAM,OAAO,EAAE,OAAO;AACtB,WAAK,cAAc,KAAK,YAAY,SAAS;AAE7C,YAAM,KAAK,OAAO,MAAM,IAAI;AAAA,IAC7B;AAAA,EACD;AAAA,EAEmB,aAAiC;AACnD,WAAO,KAAK,YAAY,SAAS;AAAA,EAClC;AACD;AAEA,MAAM,yCAAyC,eAAe;AAAA,EAC7D,YACkB,aACA,qBACjB,QACA,SACC;AACD,UAAM,MAAM,QAAQ,EAAE,GAAG,SAAS,MAAM,OAAO,OAAO,KAAK,CAAC;AAL3C;AACA;AAAA,EAKlB;AAAA,EApND,OA4M8D;AAAA;AAAA;AAAA,EAU1C,cAAoB;AACtC,QAAI,KAAK,QAAQ,SAAS,KAAK,OAAO;AACrC,WAAK,MAAM,UAAU,IAAI,+BAA+B;AAExD,YAAM,OAAO,EAAE,OAAO;AACtB,WAAK,UAAU;AAAA,QACd,GAAG,UAAU,iBAAiB,QAAQ,SAAS;AAAA,MAChD;AAEA,YAAM,OAAO,EAAE,OAAO;AACtB,UAAI,KAAK,wBAAwB,OAAO;AACvC,aAAK,cAAc,SAAS,OAAO,KAAK;AAAA,MACzC,WAAW,KAAK,wBAAwB,QAAQ;AAC/C,aAAK,cAAc,SAAS,QAAQ,MAAM;AAAA,MAC3C,WAAW,KAAK,oBAAoB,WAAW,GAAG;AACjD,aAAK,cAAc,KAAK,oBAAoB,CAAC,EAAE;AAAA,MAChD,OAAO;AACN,aAAK,cAAc;AAAA,UAClB;AAAA,UACA;AAAA,UACA,KAAK,oBAAoB;AAAA,QAC1B;AAAA,MACD;AAEA,YAAM,KAAK,OAAO,MAAM,IAAI;AAAA,IAC7B;AAAA,EACD;AAAA,EAEmB,aAAiC;AACnD,QAAI,KAAK,wBAAwB,OAAO;AACvC,aAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,IACD,WAAW,KAAK,wBAAwB,QAAQ;AAC/C,YAAM,kBACL,KAAK,YAAY,SAAS,gBAAgB,IAAI;AAE/C,aAAO;AAAA,QACN,iBAAiB,eAAe,IAAI,GAAG;AAAA,QACvC,iBAAiB,qBAAqB,IAAI,GAAG;AAAA,QAC7C,iBAAiB,mBAAmB,IAAI,GAAG;AAAA,MAC5C,EACE,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,EACrB,KAAK,IAAI;AAAA,IACZ,WAAW,KAAK,oBAAoB,WAAW,GAAG;AACjD,aAAO,KAAK,oBAAoB,CAAC,EAAE;AAAA,IACpC,OAAO;AACN,aAAO,KAAK,oBAAoB,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE,KAAK,IAAI;AAAA,IACjE;AAAA,EACD;AACD;AAEA;AAAA,EACC,cAAc,WAA+B;AAAA,IAC5C,cAAc;AACb,YAAM;AAAA,QACL,IAAI;AAAA,QACJ,OAAO,SAAS,oBAAoB,mBAAmB;AAAA,QACvD,QAAQ;AAAA,QACR,IAAI;AAAA,QACJ,MAAM;AAAA,UACL,IAAI,OAAO;AAAA,UACX,MAAM,eAAe;AAAA,YACpB,eAAe,IAAI,mBAAmB;AAAA,YACtC,eAAe,QAAQ,qBAAqB,CAAC;AAAA,UAC9C;AAAA,UACA,OAAO;AAAA,UACP,OAAO;AAAA,QACR;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,MAAM,UACL,GACA,MACgB;AAChB,WAAK,eAAe;AAAA,IACrB;AAAA,EACD;AACD;AAEA;AAAA,EACC,cAAc,WAA+B;AAAA,IAC5C,cAAc;AACb,YAAM;AAAA,QACL,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,MAAM,QAAQ;AAAA,QACd,QAAQ;AAAA,QACR,IAAI;AAAA,QACJ,MAAM;AAAA,UACL,IAAI,OAAO;AAAA,UACX,OAAO;AAAA,UACP,OAAO;AAAA,QACR;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,MAAM,UACL,GACA,MACgB;AAChB,WAAK,mBAAmB;AAAA,IACzB;AAAA,EACD;AACD;AAEA;AAAA,EACC,cAAc,WAA+B;AAAA,IAC5C,cAAc;AACb,YAAM;AAAA,QACL,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,QAAQ;AAAA,QACR,IAAI;AAAA,QACJ,MAAM,QAAQ;AAAA,QACd,MAAM;AAAA,UACL,IAAI,OAAO;AAAA,UACX,OAAO;AAAA,UACP,OAAO;AAAA,QACR;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,MAAM,UACL,GACA,MACgB;AAChB,WAAK,yBAAyB;AAAA,IAC/B;AAAA,EACD;AACD;AAEA;AAAA,EACC,cAAc,WAA+B;AAAA,IAC5C,cAAc;AACb,YAAM;AAAA,QACL,IAAI;AAAA,QACJ,OAAO,SAAS,gBAAgB,SAAS;AAAA,QACzC,QAAQ;AAAA,QACR,IAAI;AAAA,QACJ,MAAM,QAAQ;AAAA,QACd,MAAM;AAAA,UACL,IAAI,OAAO;AAAA,UACX,OAAO;AAAA,UACP,OAAO;AAAA,QACR;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,MAAM,UACL,GACA,MACgB;AAChB,WAAK,QAAQ;AAAA,IACd;AAAA,EACD;AACD;AAEA;AAAA,EACC,cAAc,QAAQ;AAAA,IACrB,cAAc;AACb,YAAM;AAAA,QACL,IAAI;AAAA,QACJ,OAAO,SAAS,eAAe,cAAc;AAAA,QAC7C,IAAI;AAAA,QACJ,MAAM;AAAA,UACL;AAAA,YACC,IAAI,OAAO;AAAA,YACX,OAAO;AAAA,YACP,MAAM,eAAe;AAAA,cACpB;AAAA,cACA;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,MAAe,IACd,UACA,aACG,cACF;AACD,YAAM,iBAAiB,SAAS,IAAI,eAAe;AAEnD,UAAI,CAAC,YAAY,aAAa,WAAW,GAAG;AAC3C;AAAA,MACD;AAEA,YAAM,cAAc,aAAa,CAAC;AAClC,YAAM,kBAAkB,aAAa,aAAa,SAAS,CAAC;AAC5D,YAAM,kBAAkB,SAAS,gBAAgB,IAAI;AAErD,UAAI,aAAa,SAAS,GAAG;AAC5B,cAAM,WACL,MAAM,iBAAiB;AAAA,UACtB,CAAC,YAAY,IAAI,gBAAgB,EAAE;AAAA,QACpC;AACD,YACC,CAAC,YACA,aAAa,YAAY,MACzB,aAAa,gBAAgB,IAC7B;AACD;AAAA,QACD;AAAA,MACD;AAEA,YAAM,sBACL,gBAAgB,UAAU,SAAS,IAChC,gBAAgB,UAAU,CAAC,IAC3B;AACJ,YAAM,qBACL,MAAM,iBAAiB;AAAA,QACtB,YAAY;AAAA,QACZ;AAAA,MACD;AAED,UAAI,CAAC,oBAAoB,QAAQ;AAChC;AAAA,MACD;AAEA,YAAM,QACL,aAAa,WAAW,IACrB,GAAG,aAAa,CAAC,EAAE,aAAa,aAAa,CAAC,EAAE,EAAE,MAAM,aAAa,CAAC,EAAE,OAAO,KAC/E;AAAA,QACA;AAAA,QACA;AAAA,QACA,gBAAgB,aAAa,gBAAgB;AAAA,QAC7C,YAAY,aAAa,YAAY;AAAA,MACtC;AAEH,YAAM,UAAU,SAAS;AACzB,YAAM,OAAO,UAAU,QAAQ,OAAO,SAAS;AAC/C,YAAM,qBAAqB,IAAI;AAAA,QAC9B;AAAA,UACC,QAAQ;AAAA,UACR,MAAM,GAAG,IAAI,IAAI,mBAAmB,KAAK,YAAY,EAAE;AAAA,QACxD;AAAA,QACA;AAAA,MACD;AAEA,qBAAe,eAAe,kCAAkC;AAAA,QAC/D;AAAA,QACA;AAAA,QACA,WAAW;AAAA,MACZ,CAAC;AAAA,IACF;AAAA,EACD;AACD;AAEA,MAAM,aAA0D;AAAA,EAxdhE,OAwdgE;AAAA;AAAA;AAAA,EAC/D,YAAoB;AACnB,WAAO;AAAA,EACR;AAAA,EAEA,cAAc,SAA8B;AAC3C,QAAI,qCAAqC,OAAO,GAAG;AAClD,aAAO,oBAAoB;AAAA,IAC5B,WAAW,oCAAoC,OAAO,GAAG;AACxD,aAAO,4BAA4B;AAAA,IACpC,OAAO;AACN,YAAM,IAAI,MAAM,iBAAiB;AAAA,IAClC;AAAA,EACD;AACD;AAWA,IAAM,sBAAN,MAOA;AAAA,EAYC,YACkB,eAEA,mBAEA,uBACe,eACA,eAC/B;AAPgB;AAEA;AAEA;AACe;AACA;AAAA,EAC9B;AAAA,EA5gBJ,OAwfA;AAAA;AAAA;AAAA,EACC,OAAgB,cAAc;AAAA,EAC9B,IAAI,aAAqB;AACxB,WAAO,oBAAoB;AAAA,EAC5B;AAAA,EAEiB,gBAAgB;AAAA,IAChC;AAAA,IACA;AAAA,IACA,KAAK;AAAA,EACN;AAAA,EAYA,eAAe,WAA6C;AAE3D,IACC,UAAU,cAAe,cAAe;AAAA,MACvC;AAAA,IACD,EACC,UAAU,IAAI,kBAAkB;AAElC,UAAM,UAAU,OAAO,WAAW,EAAE,eAAe,CAAC;AACpD,UAAM,iBAAiB,OAAO,SAAS,EAAE,kBAAkB,CAAC;AAC5D,UAAM,YAAY,IAAI,UAAU,SAAS;AAAA,MACxC,cAAc;AAAA,MACd,mBAAmB;AAAA,MACnB,8BAA8B;AAAA,IAC/B,CAAC;AAED,UAAM,iBAAiB,OAAO,SAAS,EAAE,kBAAkB,CAAC;AAC5D,YAAQ,YAAY,cAAc;AAElC,WAAO;AAAA,MACN;AAAA,MACA;AAAA,MACA,OAAO;AAAA,MACP;AAAA,MACA,oBAAoB,IAAI,gBAAgB;AAAA,MACxC,aAAa,IAAI,gBAAgB;AAAA,IAClC;AAAA,EACD;AAAA,EAEA,cACC,MACA,OACA,cACA,QACO;AACP,UAAM,uBAAuB,KAAK,QAAQ;AAC1C,UAAM,cAAc,qBAAqB;AAEzC,UAAM,mBAAmB,KAAK,cAAc;AAAA,MAC3C,KAAK;AAAA,MACL,aAAa;AAAA,MACb,KAAK,iBAAiB,KAAK,OAAO;AAAA,MAClC;AAAA,QACC,SAAS,KAAK,iBAAiB,WAAW;AAAA,MAC3C;AAAA,IACD;AACA,iBAAa,mBAAmB,IAAI,gBAAgB;AAEpD,iBAAa,eAAe,cAAc;AAC1C,iBAAa,eAAe,UAAU;AAAA,MACrC;AAAA,MACA,qBAAqB;AAAA,IACtB;AACA,iBAAa,eAAe;AAAA,MAC3B,0BAA0B,oBAAoB;AAAA,IAC/C;AAEA,UAAM,WAAW,KAAK,QAAQ,WAAW;AACzC,UAAM,iBAAiB,SAAS,gBAC9B,IAAI,GACH,gBAAgB,IAAI;AACvB,UAAM,eACL,gBAAgB,aAAa,YAAY,KACtC,CAAC,sBAAsB,IACvB,CAAC;AACL,UAAM,CAAC,SAAS,kBAAkB,IAAI,KAAK;AAAA,MAC1C;AAAA,MACA,KAAK;AAAA,IACN;AACA,iBAAa,MAAM,SAAS,YAAY,SAAS,YAAY,QAAQ;AAAA,MACpE;AAAA,MACA;AAAA,MACA;AAAA,IACD,CAAC;AAED,SAAK,cAAc,aAAa,YAAY;AAAA,EAC7C;AAAA,EAEQ,cACP,aACA,cACO;AACP,iBAAa,mBAAmB;AAAA,MAC/B,QAAQ,CAAC,WAAW;AACnB,cAAM,cAAc,KAAK,cAAc,KAAK,MAAM;AAElD,qBAAa,eAAe,cAAc;AAC1C,cAAM,kBAAkB,YAAY,YAAY;AAAA,UAC/C,CAAC,QAAQ,IAAI;AAAA,QACd;AAEA,mBAAW,OAAO,YAAY,cAAc,CAAC,GAAG;AAC/C,cAAI,CAAC,IAAI,SAAS,gBAAgB,UAAU;AAC3C;AAAA,UACD;AAEA,cAAI,IAAI,QAAQ,UAAU,YAAY,IAAI,IAAI,GAAG;AAChD,kBAAM,WAAW;AAAA,cAChB;AAAA,cACA;AAAA,gBACC,OAAO;AAAA,kBACN,OAAO,IAAI,QACR;AAAA,oBACA;AAAA,kBACD,IACC,cAAc,UAAU;AAAA,kBAC3B,iBAAiB,IAAI,QAClB,cAAc,IAAI,KAAK,IACvB;AAAA,oBACA;AAAA,kBACD;AAAA,gBACH;AAAA,cACD;AAAA,cACA;AAAA,gBACC,EAAE,eAAe;AAAA,gBACjB,EAAE,6BAA6B;AAAA,cAChC;AAAA,YACD;AAEA,qBAAS,KAAK,UAAU;AAAA,cACvB,GAAG,UAAU,iBAAiB,IAAI,IAAI;AAAA,YACvC;AAEA,qBAAS,YAAY,cAAc,IAAI;AACvC,qBAAS,YAAY,MAAM,UAC1B,QAAQ,kBAAkB,KAAK;AAEhC,mBAAO,aAAa,gBAAgB,SAAS,IAAI;AAAA,UAClD;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAEQ,iBAAiB,aAA8B;AACtD,WAAO;AAAA,MACN;AAAA,QACC,WAAW;AAAA,QACX,WAAW;AAAA,QACX,OAAO,YAAY,aAAa,YAAY;AAAA,QAC5C,KAAK,6BAAM,KAAK,kBAAkB,UAAU,YAAY,EAAE,GAArD;AAAA,MACN;AAAA,MACA;AAAA,QACC,WAAW;AAAA,QACX,WAAW;AAAA,QACX,OAAO,SAAS,sBAAsB,SAAS;AAAA,QAC/C,KAAK,6BACJ,KAAK,kBAAkB,UAAU,YAAY,OAAO,GADhD;AAAA,MAEN;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,iBACP,SACqC;AACrC,UAAM,aAAa,KAAK,cAAc,cAAc;AACpD,UAAM,cAAc,QAAQ,qBAAqB;AAEjD,UAAM,WAAW,IAAI,eAAe,IAAI;AAAA,MACvC,WAAW;AAAA,MACX,mBAAmB;AAAA,IACpB,CAAC;AAGD,QAAI,YAAY,QAAQ;AACvB,eAAS,eAAe,gBAAgB,YAAY,MAAM,IAAI;AAE9D,UAAI,YAAY,WAAW;AAC1B,cAAM,gBAAgB,IAAI,KAAK;AAAA,UAC9B,SAAS;AAAA,UACT;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,YACP,KAAK;AAAA,YACL,MAAM;AAAA,YACN,QAAQ;AAAA,UACT;AAAA,QACD;AACA,iBAAS;AAAA,UACR,gBAAgB,QAAQ,YAAY,WAAW,MAAM,IAAI,CAAC,KAAK,cAAc,OAAO,YAAY,SAAS,CAAC;AAAA,QAC3G;AAAA,MACD;AAEA,eAAS,eAAe,MAAM;AAAA,IAC/B;AAEA,aAAS,eAAe,GAAG,YAAY,OAAO;AAAA;AAAA,CAAM;AAEpD,QAAI,YAAY,YAAY;AAC3B,eAAS,eAAe;AAAA;AAAA,CAAS;AAEjC,eAAS;AAAA,QACR,SACC,YAAY,WAAW,UAAU,IAC9B;AAAA,UACA;AAAA,UACA;AAAA,UACA,YAAY,WAAW;AAAA,QACxB,IACC;AAAA,UACA;AAAA,UACA;AAAA,UACA,YAAY,WAAW;AAAA,QACxB,CACH;AAAA,MACD;AAEA,UAAI,YAAY,WAAW,YAAY;AACtC,cAAM,2BAA2B,WAAW;AAAA,UAC3C;AAAA,QACD;AACA,iBAAS;AAAA,UACR,6BAA6B,wBAAwB,MACpD,YAAY,WAAW,eAAe,IACnC;AAAA,YACA;AAAA,YACA;AAAA,YACA,YAAY,WAAW;AAAA,YACvB;AAAA,UACD,IACC;AAAA,YACA;AAAA,YACA;AAAA,YACA,YAAY,WAAW;AAAA,YACvB;AAAA,UACD,CACH;AAAA,QACD;AAAA,MACD;AAEA,UAAI,YAAY,WAAW,WAAW;AACrC,cAAM,2BAA2B,WAAW;AAAA,UAC3C;AAAA,QACD;AACA,iBAAS;AAAA,UACR,6BAA6B,wBAAwB,MACpD,YAAY,WAAW,cAAc,IAClC;AAAA,YACA;AAAA,YACA;AAAA,YACA,YAAY,WAAW;AAAA,YACvB;AAAA,UACD,IACC;AAAA,YACA;AAAA,YACA;AAAA,YACA,YAAY,WAAW;AAAA,YACvB;AAAA,UACD,CACH;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,SAAK,YAAY,cAAc,CAAC,GAAG,SAAS,GAAG;AAC9C,eAAS,eAAe;AAAA;AAAA;AAAA;AAAA,CAAa;AACrC,eAAS;AAAA,SACP,YAAY,cAAc,CAAC,GAC1B,IAAI,CAAC,QAAQ;AACb,gBAAM,cAAc,UAAU,YAAY,IAAI,IAAI,IAC/C,IAAI,KAAK,KACT;AAEH,gBAAM,uBAAuB,IAAI,QAC9B,cAAc,IAAI,KAAK,IACvB;AAAA,YACA;AAAA,UACD;AACF,gBAAM,uBAAuB,IAAI,QAC9B,cAAc,+BAA+B,IAC7C;AAAA,YACA;AAAA,UACD;AAEF,iBAAO,sBAAsB,oBAAoB,qBAAqB,oBAAoB,gCAAgC,WAAW,UAAU,IAAI,IAAI;AAAA,QACxJ,CAAC,EACA,KAAK,cAAc;AAAA,MACtB;AAAA,IACD;AAEA,WAAO,EAAE,UAAU,8BAA8B,YAAY,QAAQ;AAAA,EACtE;AAAA,EAEQ,gBACP,sBACA,YAC+C;AAC/C,QAAI,CAAC,YAAY;AAChB,aAAO,CAAC,QAAW,MAAS;AAAA,IAC7B;AAEA,WAAO;AAAA,MACN,qBAAqB,YAAY,YAAY,WAAW,QACrD,cAAc,WAAW,KAAK,IAC9B;AAAA,MACH,qBAAqB,YAAY,WAAW,WAAW,QACpD,cAAc,WAAW,KAAK,IAC9B;AAAA,IACJ;AAAA,EACD;AAAA,EAEA,eACC,SACA,OACA,cACA,QACO;AACP,iBAAa,mBAAmB,MAAM;AAAA,EACvC;AAAA,EAEA,gBAAgB,cAAyC;AACxD,iBAAa,YAAY,QAAQ;AAAA,EAClC;AACD;AAtVM,sBAAN;AAAA,EAqBG;AAAA,EAEA;AAAA,EAEA;AAAA,EACA;AAAA,GA1BG;AAiWN,IAAM,8BAAN,MAGA;AAAA,EAMC,YACkB,cACA,mBAIA,uBAChB;AANgB;AACA;AAIA;AAAA,EACf;AAAA,EAl2BJ,OAq1BA;AAAA;AAAA;AAAA,EACC,OAAgB,cAAc;AAAA,EAC9B,IAAI,aAAqB;AACxB,WAAO,4BAA4B;AAAA,EACpC;AAAA,EAWA,eAAe,WAA0C;AAExD,IACC,UAAU,cAAe,cAAe;AAAA,MACvC;AAAA,IACD,EACC,UAAU,IAAI,kBAAkB;AAElC,UAAM,UAAU,OAAO,WAAW,EAAE,yBAAyB,CAAC;AAC9D,UAAM,mBAAmB,OAAO,SAAS,EAAE,oBAAoB,CAAC;AAChE,UAAM,kCAAkC;AAAA,MACvC;AAAA,MACA,EAAE,2BAA2B;AAAA,IAC9B;AACA,UAAM,8BAA8B,IAAI;AAAA,MACvC;AAAA,MACA,EAAE,cAAc,KAAK;AAAA,IACtB;AAEA,WAAO;AAAA,MACN;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,oBAAoB,IAAI,gBAAgB;AAAA,MACxC,aAAa,IAAI,gBAAgB;AAAA,IAClC;AAAA,EACD;AAAA,EAEA,cACC,SACA,OACA,cACA,QACO;AACP,iBAAa,iBAAiB,cAAc;AAC5C,iBAAa,iBAAiB,MAAM,QAAQ,GAAG,kBAAkB,QAAQ,QAAQ,aAAa,SAAS,EAAE;AACzG,iBAAa,iBAAiB;AAAA,MAC7B,iCAAiC,QAAQ,QAAQ,YAAY;AAAA,IAC9D;AAEA,UAAM,eACL,KAAK,sBAAsB;AAAA,MAC1B;AAAA,IACD,MAAM;AACP,iBAAa,gCAAgC,UAAU;AAAA,MACtD;AAAA,MACA;AAAA,IACD;AAEA,QAAI,cAAc;AACjB,mBAAa,4BAA4B,SAAS,EAAE;AACpD,WAAK,kBAAkB,QAAQ,QAAQ,UAAU;AAAA,IAClD,OAAO;AACN,mBAAa,mBAAmB;AAAA,QAC/B,QAAQ,CAAC,WAAW;AACnB,gBAAM,cAAc,KAAK,aAAa,EAAE,KAAK,MAAM;AACnD,gBAAM,OAAO,KAAK,cAAc,iBAAiB,WAAW;AAE5D,uBAAa,4BAA4B;AAAA,YACxC,SAAS,YAAY,oBAAoB,IAAI;AAAA,UAC9C;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD;AAAA,EACD;AAAA,EAEA,eACC,SACA,OACA,cACA,QACO;AACP,iBAAa,mBAAmB,MAAM;AAAA,EACvC;AAAA,EAEA,gBAAgB,cAAsC;AACrD,iBAAa,YAAY,QAAQ;AAAA,EAClC;AACD;AAjGM,8BAAN;AAAA,EAcG;AAAA,GAdG;AAmGN,IAAM,2BAAN,cAAuC,uBAAuB;AAAA,EAC7D,YACkB,wBAEA,eACM,sBACR,cACd;AACD;AAAA,MACC;AAAA,MACA;AAAA,MACA,MAAM,KAAK,gBAAgB;AAAA,MAC3B;AAAA,MACA;AAAA,IACD;AAZiB;AAEA;AAAA,EAWlB;AAAA,EAp8BD,OAq7B8D;AAAA;AAAA;AAAA,EAiBrD,kBAA0C;AACjD,UAAM,kBAAkB,KAAK,cAAc,mBAAmB;AAE9D,QAAI;AACJ,QAAI,KAAK,2BAA2B,sBAAsB,SAAS;AAClE,sBACC,oBAAoB,SAAS,OAC1B,cAAc,QACd,cAAc;AAAA,IACnB,WACC,KAAK,2BAA2B,sBAAsB,cACrD;AACD,sBACC,oBAAoB,SAAS,OAC1B,cAAc,OACd,cAAc;AAAA,IACnB,OAAO;AACN,sBAAgB,cAAc;AAAA,IAC/B;AAEA,WAAO;AAAA,MACN,mBAAmB,CAAC,oBAAoB;AAAA,MACxC,UAAU,EAAE,eAAe,eAAe,KAAK;AAAA,IAChD;AAAA,EACD;AACD;AA1CM,2BAAN;AAAA,EAGG;AAAA,EAEA;AAAA,EACA;AAAA,GANG;AA4CN,IAAM,iCAAN,cAA6C,aAAa;AAAA,EACzD,YACoC,kBAClC;AACD,UAAM;AAF6B;AAAA,EAGpC;AAAA,EAt+BD,OAi+B0D;AAAA;AAAA;AAAA,EAOtC,UAClB,QACA,SACgB;AAChB,WAAO,KAAK,iBAAiB;AAAA,MAC5B,EAAE,UAAU,qBAAqB;AAAA,MACjC,YAAY,MAAM,MAAM,UAAU,QAAQ,OAAO;AAAA,IAClD;AAAA,EACD;AACD;AAhBM,iCAAN;AAAA,EAEG;AAAA,GAFG;AAkBN,MAAM,oCAEN;AAAA,EAr/BA,OAq/BA;AAAA;AAAA;AAAA,EACC,qBAA6B;AAC5B,WAAO,SAAS,eAAe,wBAAwB;AAAA,EACxD;AAAA,EAEA,aAAa,SAA8B;AAC1C,QAAI,gBAAgB,OAAO,GAAG;AAC7B,aAAO,GAAG,QAAQ,SAAS,IAAI,IAAI,QAAQ,SAAS,KAAK;AAAA,IAC1D,WAAW,qCAAqC,OAAO,GAAG;AACzD,YAAM,cAAc,QAAQ,qBAAqB;AACjD,aAAO,GAAG,WAAW,YAAY,OAAO,EAAE,KAAK,CAAC,GAAG,YAAY,SAAS,KAAK,YAAY,MAAM,KAAK,EAAE;AAAA,IACvG,OAAO;AACN,aAAO;AAAA,IACR;AAAA,EACD;AACD;AAEA,MAAM,+BAAyE;AAAA,EAtgC/E,OAsgC+E;AAAA;AAAA;AAAA,EAC9E,MAAM,SAA8B;AACnC,QAAI,gBAAgB,OAAO,GAAG;AAC7B,YAAM,WAAW,QAAQ;AACzB,aAAO,QAAQ,SAAS,EAAE;AAAA,IAC3B,WAAW,qCAAqC,OAAO,GAAG;AACzD,YAAM,WAAW,QAAQ,WAAW;AACpC,YAAM,cAAc,QAAQ,qBAAqB;AACjD,aAAO,eAAe,SAAS,EAAE,IAAI,YAAY,EAAE,IAAI,YAAY,UAAU,KAAK,GAAG,CAAC;AAAA,IACvF,WAAW,oCAAoC,OAAO,GAAG;AACxD,YAAM,WAAW,QAAQ,WAAW;AACpC,aAAO,uBAAuB,SAAS,EAAE;AAAA,IAC1C,OAAO;AACN,YAAM,IAAI,MAAM,sBAAsB;AAAA,IACvC;AAAA,EACD;AACD;AAEA,MAAM,8CAEN;AAAA,EA1hCA,OA0hCA;AAAA;AAAA;AAAA,EACC,2BACC,SACgE;AAChE,QAAI,gBAAgB,OAAO,GAAG;AAC7B,aAAO;AAAA,IACR,WAAW,qCAAqC,OAAO,GAAG;AAIzD,aAAO;AAAA,QACN,QAAQ,qBAAqB,YAAY;AAAA,QACzC,QAAQ,qBAAqB,YAAY;AAAA,MAC1C;AAAA,IACD,WAAW,oCAAoC,OAAO,GAAG;AAExD,aAAO;AAAA,IACR,OAAO;AACN,YAAM,IAAI,MAAM,sBAAsB;AAAA,IACvC;AAAA,EACD;AACD;AAEA,MAAM,iCACG,WAET;AAAA,EApjCA,OAojCA;AAAA;AAAA;AAAA,EACC,MAAM,YACL,gBACiC;AACjC,QAAI,EAAE,0BAA0B,sBAAsB;AACrD,aAAO,CAAC;AAAA,IACT;AAGA,UAAM,WAA0B,CAAC;AACjC,UAAM,eAAe,MAAM,eAAe,gBAAgB;AAC1D,aAAS,KAAK,GAAG,YAAY;AAG7B,UAAM,aAAa,eAAe,WAAW,IAAI;AACjD,UAAM,kBAAkB,KAAK,YAAY;AACzC,QACC,cACA,mBACA,gBAAgB,qBAAqB,gBAAgB,SAAS,GAC7D;AACD,eAAS,KAAK;AAAA,QACb;AAAA,QACA,cACC,gBAAgB,qBAAqB;AAAA,QACtC,MAAM;AAAA,MACP,CAA6C;AAAA,IAC9C;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,YAAY,gBAA4D;AACvE,WAAO,0BAA0B;AAAA,EAClC;AACD;AASA,IAAM,sBAAN,cAAkC,WAAW;AAAA,EAyC5C,YAEkB,uBACa,aACI,iBACA,iBACjC;AACD,UAAM;AALW;AACa;AACI;AACA;AAIlC,QAAI;AAEH,YAAM,aAAa,KAAK,gBAAgB,IAAI,iCAAiC,aAAa,SAAS,KAAK;AACxG,YAAM,SAAS,eAAe,UAAU,eAAe,QAAQ,aAAa,KAAK,MAAM,UAAU;AAEjG,WAAK,qBAAqB,gBAAuC,MAAM,MAAM;AAAA,IAC9E,QAAQ;AAEP,WAAK,qBAAqB,gBAAuC,MAAM,MAAM;AAAA,IAC9E;AAGA,SAAK;AAAA,MACJ,QAAQ,CAAC,WAAW;AACnB,cAAM,aAAa,KAAK,kBAAkB,KAAK,MAAM;AACrD,YAAI,CAAC,YAAY;AAChB;AAAA,QACD;AAEA,YAAI,KAAK,WAAW,IAAI,MAAM,YAAY;AACzC,eAAK,oBAAoB;AAAA,YACxB,SAAS,MAAM,KAAK,YAAY,YAAY,KAAK;AAAA,YACjD;AAAA,UACD;AAAA,QACD;AAEA,aAAK,OAAO,OAAO,UAAU;AAAA,MAC9B,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EA/qCD,OAgmC6C;AAAA;AAAA;AAAA,EAC3B,oBAAoB;AAAA,IACpC;AAAA,IACA,KAAK,YAAY;AAAA,IACjB,CAAC,eAAe;AAAA,EACjB;AAAA,EAEiB,mBAChB,KAAK,YAAY,kBAAkB,IAChC,gBAAgB,SAAS,MAAM,KAAK,YAAY,YAAY,CAAC,IAC7D;AAAA,IACA;AAAA,IACA,MAAM,KAAK,KAAK,YAAY,kBAAkB;AAAA,IAC9C,CAAC,eAAe;AAAA,EACjB;AAAA,EAEc,sBAAsB,gBAErC,MAAM,MAAM;AAAA,EAEG,mBAAmB,QAAQ,CAAC,WAAW;AACvD,UAAM,qBAAqB,KAAK,oBAAoB,KAAK,MAAM;AAC/D,QAAI,uBAAuB,QAAQ;AAClC,aAAO;AAAA,IACR;AAEA,WAAO,KAAK,gBAAgB,iBAAiB,KAAK,MAAM;AAAA,EACzD,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAMQ,aAAa,mBAAmB,MAAM;AAAA,IAC9C,KAAK;AAAA,IACL,KAAK;AAAA,EACN,CAAC;AAAA,EACQ;AAAA,EAEQ,SAAS,oBAAI,IAAsC;AAAA,EA0CpE,uBAA6B;AAC5B,UAAM,aAAa,KAAK,WAAW,IAAI;AACvC,QAAI,CAAC,YAAY;AAChB;AAAA,IACD;AAEA,SAAK,OAAO,OAAO,UAAU;AAAA,EAC9B;AAAA,EAEA,qBAAmD;AAClD,UAAM,aAAa,KAAK,WAAW,IAAI;AACvC,QAAI,CAAC,YAAY;AAChB;AAAA,IACD;AAEA,WAAO,KAAK,OAAO,IAAI,UAAU;AAAA,EAClC;AAAA,EAEA,YAAY,YAA4B,UAAkC;AACzE,UAAM,QAAQ,KAAK,OAAO,IAAI,UAAU;AACxC,QAAI,CAAC,OAAO;AACX;AAAA,IACD;AAEA,SAAK,OAAO,IAAI,YAAY,EAAE,GAAG,OAAO,SAAS,CAAC;AAAA,EACnD;AAAA,EAEA,MAAM,kBAAiE;AACtE,UAAM,aAAa,KAAK,WAAW,IAAI;AACvC,UAAM,kBAAkB,YAAY,SAAS,gBAAgB,IAAI;AAEjE,QAAI,CAAC,cAAc,CAAC,iBAAiB;AACpC,aAAO,CAAC;AAAA,IACT;AAEA,QAAI,QAAQ,KAAK,OAAO,IAAI,UAAU;AAEtC,QAAI,CAAC,SAAS,MAAM,aAAa,OAAO;AACvC,UAAI,kBAAkB,OAAO;AAC7B,YAAM,eACL,OAAO,WAAW;AAAA,QACjB,CAAC,OAAO,GAAG,qBAAqB;AAAA,MACjC,KAAK,CAAC;AAEP,UAAI,CAAC,iBAAiB;AACrB,cAAM,qBAAqB,KAAK,mBAAmB,IAAI;AAEvD,gBAAQ,oBAAoB;AAAA,UAC3B,KAAK;AACJ,8BACE,MAAM,gBAAgB,uBAAuB,KAC9C,CAAC;AACF;AAAA,UACD,KAAK;AACJ,8BAAkB;AAAA,cACjB,gBAAgB,eAAe,IAAI;AAAA,cACnC,gBAAgB,qBAAqB,IAAI;AAAA,cACzC,gBAAgB,mBAAmB,IAAI;AAAA,YACxC,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG;AACvB;AAAA,UACD;AACC,8BAAkB;AAClB;AAAA,QACF;AAAA,MACD;AAEA,YAAM,QAAQ;AAAA,QACb,KAAK,sBAAsB;AAAA,UAC1B;AAAA,QACD;AAAA,QACA;AAAA,QACA;AAAA,MACD;AACA,YAAM,oBAAoB,gBAAgB;AAAA,QACzC,CAAC,QAAQ,IAAI,YAAY,IAAI;AAAA,MAC9B;AAEA,SAAG;AAEF,qBAAa;AAAA,UACZ,GAAK,MAAM,gBAAgB,oBAAoB;AAAA,YAC9C,iBAAiB;AAAA,YACjB;AAAA,YACA,MAAM,aAAa;AAAA,UACpB,CAAC,KAAM,CAAC;AAAA,QACT;AAAA,MACD,SACC,OAAO,OAAO,aAAa,YAC3B,CAAC,aAAa,KAAK,CAAC,SAAS,KAAK,OAAO,OAAO,QAAQ;AAIzD,YAAM,WAAW,KAAK,kBAAkB,eAAe;AAEvD,YAAM,aAAa;AAAA,QAClB;AAAA,QACA;AAAA,QACA,gBAAgB,eAAe,IAAI;AAAA,MACpC,EAAE;AAAA,QACD,CAAC,0BACC;AAAA,UACA;AAAA,UACA;AAAA,UACA,MAAM;AAAA,QACP;AAAA,MACF;AAEA,cAAQ,EAAE,iBAAiB,YAAY,UAAU,MAAM;AACvD,WAAK,OAAO,IAAI,YAAY,KAAK;AAAA,IAClC;AAEA,WAAO,MAAM;AAAA,EACd;AAAA,EAEA,cAAc,YAA2C;AACxD,SAAK,oBAAoB,IAAI,YAAY,MAAS;AAAA,EACnD;AAAA,EAEA,sBAAsB,QAAqD;AAC1E,SAAK,gBAAgB;AAAA,MACpB;AAAA,MACA;AAAA,MACA,aAAa;AAAA,MACb,cAAc;AAAA,IACf;AACA,SAAK,mBAAmB,IAAI,QAAQ,MAAS;AAAA,EAC9C;AAAA,EAEQ,kBACP,iBAC2C;AAC3C,UAAM,aAAa,KAAK,WAAW,IAAI;AACvC,UAAM,kBAAkB,YAAY,SAAS,gBAAgB,IAAI;AACjE,UAAM,iBAAiB,iBAAiB,eAAe,IAAI;AAC3D,UAAM,uBACL,iBAAiB,qBAAqB,IAAI;AAC3C,UAAM,qBAAqB,iBAAiB,mBAAmB,IAAI;AAEnE,UAAM,WAAW,oBAAI,IAAyC;AAE9D,QAAI,gBAAgB;AACnB,eAAS,IAAI,eAAe,IAAI,eAAe,KAAK;AAEpD,UAAI,sBAAsB;AACzB,iBAAS;AAAA,UACR,qBAAqB;AAAA,UACrB,qBAAqB;AAAA,QACtB;AAAA,MACD;AACA,UAAI,oBAAoB;AACvB,iBAAS,IAAI,mBAAmB,IAAI,mBAAmB,KAAK;AAAA,MAC7D;AAAA,IACD;AAMA,eAAW,OAAO,iBAAiB;AAClC,UAAI,CAAC,SAAS,IAAI,IAAI,EAAE,GAAG;AAC1B,iBAAS,IAAI,IAAI,IAAI,MAAS;AAAA,MAC/B;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AAAA,EAES,UAAgB;AACxB,SAAK,OAAO,MAAM;AAClB,UAAM,QAAQ;AAAA,EACf;AACD;AA5PM,sBAAN;AAAA,EA0CG;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,GA9CG;AAkQN,IAAM,mBAAN,cAA+B,WAAW;AAAA,EAUzC,YAEkB,oBACiB,iBACjC;AACD,UAAM;AAHW;AACiB;AAAA,EAGnC;AAAA,EAl3CD,OAk2C0C;AAAA;AAAA;AAAA,EACxB,qBAA8C;AAAA,IAC9D,OAAO,SAAS,QAAQ,MAAM;AAAA,IAC9B,aAAa;AAAA,MACZ;AAAA,MACA;AAAA,IACD;AAAA,IACA,YAAY;AAAA,EACb;AAAA,EAUA,MAAM,iBAA+D;AACpE,UAAM,QAA2D;AAAA,MAChE,KAAK;AAAA,MACL,EAAE,MAAM,YAAY;AAAA,IACrB;AAEA,UAAM;AAAA,MACL,GAAG,KAAK,gBAAgB,aAAa,IAAI,CAAC,OAAO;AAAA,QAChD,OAAO,EAAE,SAAS;AAAA,QAClB,aAAa,EAAE,SAAS,SAAS;AAAA,QACjC,WAAW,UAAU,YAAY,QAAQ,IAAI;AAAA,QAC7C,YAAY;AAAA,MACb,EAAE;AAAA,IACH;AAEA,WAAO,KAAK,mBAAmB,KAAK,OAAO;AAAA,MAC1C,aAAa;AAAA,QACZ;AAAA,QACA;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AACD;AAxCM,mBAAN;AAAA,EAWG;AAAA,EAEA;AAAA,GAbG;AA8CN,IAAM,uBAAN,cAAmC,WAAW;AAAA,EAqB7C,YACkB,kBACA,qBAKA,oBAChB;AACD,UAAM;AARW;AACA;AAKA;AAAA,EAGlB;AAAA,EA/6CD,OAg5C8C;AAAA;AAAA;AAAA,EAC5B,oBAAiD;AAAA,IACjE,IAAI;AAAA,IACJ,OAAO,SAAS,OAAO,KAAK;AAAA,IAC5B,aAAa;AAAA,MACZ;AAAA,MACA;AAAA,IACD;AAAA,IACA,gBAAgB;AAAA,EACjB;AAAA,EAEiB,qBAAkD;AAAA,IAClE,IAAI;AAAA,IACJ,OAAO,SAAS,QAAQ,MAAM;AAAA,IAC9B,aAAa;AAAA,MACZ;AAAA,MACA;AAAA,IACD;AAAA,IACA,gBAAgB;AAAA,EACjB;AAAA,EAcA,MAAM,qBAEJ;AACD,UAAM,YACL,KAAK,mBAAmB;AAAA,MACvB,EAAE,eAAe,KAAK;AAAA,IACvB;AACD,SAAK,OAAO,IAAI,SAAS;AAEzB,cAAU,cAAc;AAAA,MACvB;AAAA,MACA;AAAA,IACD;AACA,cAAU,gBAAgB;AAC1B,cAAU,eAAe;AACzB,cAAU,OAAO;AACjB,cAAU,KAAK;AAEf,UAAM,QAAQ,MAAM,KAAK,sBAAsB;AAG/C,QAAI,gBAA+C,CAAC;AACpD,QAAI,KAAK,wBAAwB,OAAO;AACvC,oBAAc,KAAK,KAAK,iBAAiB;AAAA,IAC1C,WAAW,KAAK,wBAAwB,QAAQ;AAC/C,oBAAc,KAAK,KAAK,kBAAkB;AAAA,IAC3C,OAAO;AACN,UAAI,QAAQ;AACZ,aAAO,QAAQ,MAAM,QAAQ;AAC5B,YAAI,MAAM,KAAK,EAAE,SAAS,aAAa;AACtC;AACA;AAAA,QACD;AAEA,YACC,KAAK,oBAAoB;AAAA,UACxB,CAAC,QAAQ,IAAI,OAAO,MAAM,KAAK,EAAE;AAAA,QAClC,GACC;AACD,gBAAM,OAAO,MAAM;AAAA,YAClB;AAAA,YACA;AAAA,UACD;AACA,wBAAc,KAAK,GAAG,IAAI;AAAA,QAC3B,OAAO;AACN;AAAA,QACD;AAAA,MACD;AAGA,YAAM,OAAO,GAAG,GAAG,EAAE,MAAM,YAAY,GAAG,GAAG,aAAa;AAAA,IAC3D;AAEA,cAAU,QAAQ;AAClB,cAAU,gBAAgB;AAC1B,cAAU,OAAO;AAEjB,WAAO,IAAI;AAAA,MACV,CAAC,YAAY;AACZ,aAAK,OAAO;AAAA,UACX,UAAU,qBAAqB,CAACA,WAAU;AACzC,kBAAM,EAAE,MAAM,IAAI;AAAA,cAAM;AAAA,cAAeA;AAAA,cAAO,CAAC,GAAG,MACjD,QAAQ,EAAE,MAAM,IAAI,EAAE,MAAM,EAAE;AAAA,YAC/B;AACA,gBAAI,MAAM,SAAS,GAAG;AACrB,kBACC,MAAM,CAAC,EAAE,mBAAmB,SAC5B,MAAM,CAAC,EAAE,mBAAmB,QAC3B;AACD,0BAAU,gBAAgB,CAAC,MAAM,CAAC,CAAC;AAAA,cACpC,OAAO;AAEN,0BAAU,gBAAgB;AAAA,kBACzB,GAAG,UAAU,cAAc;AAAA,oBAC1B,CAAC,MACA,EAAE,mBAAmB,SACrB,EAAE,mBAAmB;AAAA,kBACvB;AAAA,gBACD;AAAA,cACD;AAAA,YACD;AAEA,4BAAgB,CAAC,GAAG,UAAU,aAAa;AAAA,UAC5C,CAAC;AAAA,QACF;AAEA,aAAK,OAAO;AAAA,UACX,UAAU,YAAY,MAAM;AAC3B,gBAAI,cAAc,WAAW,GAAG;AAC/B,sBAAQ,MAAS;AAAA,YAClB,WACC,cAAc,WAAW,KACzB,cAAc,CAAC,EAAE,mBAAmB,OACnC;AACD,sBAAQ,KAAK;AAAA,YACd,WACC,cAAc,WAAW,KACzB,cAAc,CAAC,EAAE,mBAAmB,QACnC;AACD,sBAAQ,MAAM;AAAA,YACf,OAAO;AACN;AAAA,gBACC,cAAc;AAAA,kBACb,CAAC,SAAS,KAAK;AAAA,gBAChB;AAAA,cACD;AAAA,YACD;AAEA,sBAAU,KAAK;AAAA,UAChB,CAAC;AAAA,QACF;AAEA,aAAK,OAAO;AAAA,UACX,UAAU,UAAU,MAAM;AACzB,oBAAQ,MAAS;AACjB,iBAAK,QAAQ;AAAA,UACd,CAAC;AAAA,QACF;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAc,wBAEZ;AACD,UAAM,QAA+D;AAAA,MACpE,KAAK;AAAA,MACL,KAAK;AAAA,IACN;AAEA,UAAM,kBACJ,MAAM,KAAK,iBAAiB,uBAAuB,KAAM,CAAC;AAC5D,UAAM,4BAA4B;AAAA,MAAQ;AAAA,MAAiB,CAAC,GAAG,MAC9D,QAAQ,EAAE,YAAY,IAAI,EAAE,YAAY,EAAE;AAAA,IAC3C;AAEA,eAAW,QAAQ,2BAA2B;AAC7C,UAAI,KAAK,WAAW,GAAG;AACtB;AAAA,MACD;AAEA,YAAM,KAAK,EAAE,MAAM,aAAa,OAAO,KAAK,CAAC,EAAE,SAAS,CAAC;AAEzD,YAAM;AAAA,QACL,GAAG,KAAK,IAAI,CAAC,QAAQ;AACpB,iBAAO;AAAA,YACN,IAAI,IAAI;AAAA,YACR,OAAO,IAAI;AAAA,YACX,aAAa,IAAI;AAAA,YACjB,WAAW,UAAU,YAAY,IAAI,IAAI,IACtC,UAAU,YAAY,IAAI,IAAI,IAC9B;AAAA,YACH,gBAAgB;AAAA,UACjB;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AACD;AAjMM,uBAAN;AAAA,EA2BG;AAAA,GA3BG;AAmMC,IAAM,qBAAN,cAAiC,SAAS;AAAA,EAuBhD,YACC,SACkC,iBACM,uBACD,sBACJ,kBACZ,sBACF,oBACD,mBACG,sBACC,uBACJ,mBACJ,eACD,cACI,kBACJ,cACd;AACD;AAAA,MACC;AAAA,QACC,GAAG;AAAA,QACH,aAAa,OAAO;AAAA,QACpB,aAAa,oBAAoB;AAAA,MAClC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AA/BkC;AACM;AACD;AACJ;AA8BnC,SAAK,kBAAkB,YAAY,YAAY;AAAA,MAC9C,KAAK;AAAA,IACN;AAEA,SAAK,gBAAgB,KAAK,qBAAqB;AAAA,MAC9C;AAAA,IACD;AACA,SAAK,UAAU,KAAK,aAAa;AAEjC,SAAK,UAAU,KAAK,wBAAwB;AAAA,EAC7C;AAAA,EAvpDD,OAmlDiD;AAAA;AAAA;AAAA,EACxC;AAAA,EACA;AAAA,EAKA;AAAA,EACA;AAAA,EACA;AAAA,EAES,sBAAsB,gBAAgB,MAAM,KAAK;AAAA,EACjD,sBAAsB,gBAAgB,MAAM,KAAK;AAAA,EAEjD;AAAA,EACA,yBAAyB,IAAI,gBAAgB;AAAA,EAE7C,0BAA0B,IAAI,UAAU;AAAA,EACxC,yBAAyB,IAAI,UAAU;AAAA,EACvC,2BAA2B,IAAI,UAAU;AAAA,EAEzC;AAAA,EAiDE,kBAAkB,WAA8B;AAClE,UAAM,kBAAkB,WAAW,KAAK,KAAK;AAE7C,UAAM,UAAU,EAAE,sCAAsC;AAAA,MACvD,EAAE,wDAAwD;AAAA,IAC3D,CAAC;AAED,YAAQ,MAAM,cAAc;AAC5B,cAAU,YAAY,QAAQ,IAAI;AAElC,SAAK;AAAA,MACJ,KAAK,aAAa;AAAA,QACjB,wBAAwB,OAAO;AAAA,QAC/B,QAAQ;AAAA,QACR;AAAA,UACC,UAAU;AAAA,YACT,OAAO;AAAA,cACN;AAAA,cACA;AAAA,YACD;AAAA,YACA,mBAAmB;AAAA,UACpB;AAAA,UACA,8BAA8B;AAAA,QAC/B;AAAA,MACD;AAAA,IACD;AAEA,SAAK;AAAA,MACJ,QAAQ,CAAC,WAAW;AACnB,cAAM,WAAW,KAAK,oBAAoB,KAAK,MAAM;AACrD,gBAAQ,KAAK,MAAM,UAAU,WAAW,KAAK;AAAA,MAC9C,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAEmB,WAAW,WAA8B;AAC3D,UAAM,WAAW,SAAS;AAE1B,SAAK,iBAAiB;AAAA,MACrB;AAAA,MACA,EAAE,4BAA4B;AAAA,IAC/B;AACA,SAAK,eAAe,UAAU,IAAI,yBAAyB;AAE3D,SAAK,YAAY,KAAK,cAAc;AAEpC,SAAK,0BAA0B,OAAO,YAAY;AACjD,UAAI,CAAC,SAAS;AACb,aAAK,uBAAuB,MAAM;AAClC;AAAA,MACD;AAGA,WAAK,iBACJ,KAAK,qBAAqB,eAAe,mBAAmB;AAC7D,WAAK,uBAAuB,IAAI,KAAK,cAAc;AAGnD,YAAM,KAAK,iBAAiB;AAAA,QAC3B,EAAE,UAAU,KAAK,GAAG;AAAA,QACpB,YAAY;AACX,gBAAM,6BAA6B;AAAA,YAClC;AAAA,YACA,CAAC,WAAW;AACX,oBAAM,aACL,KAAK,eAAe,WAAW,KAAK,MAAM;AAC3C,oBAAM,kBACL,YAAY,SAAS,gBAAgB;AAAA,gBACpC;AAAA,cACD;AACD,oBAAM,iBACL,iBAAiB,eAAe,KAAK,MAAM;AAE5C,qBAAO,mBAAmB,SACvB,OACA;AAAA,YACJ;AAAA,UACD;AAGA,gBAAM,aAAa,0BAA0B;AAG7C,gBAAM,KAAK,wBAAwB,MAAM,YAAY;AACpD,kBAAM,KAAK,MAAM,SAAS,KAAK,cAAc;AAC7C,iBAAK,MAAM,YAAY;AAAA,UACxB,CAAC;AAAA,QACF;AAAA,MACD;AAGA,UAAI,aAAa;AACjB,WAAK,uBAAuB;AAAA,QAC3B,iBAAiB,CAAC,QAAQ,UAAU;AACnC,gBAAM,aACL,KAAK,eAAe,WAAW,KAAK,MAAM;AAC3C,gBAAM,kBACL,YAAY,SAAS,gBAAgB,KAAK,MAAM;AACjD,cAAI,CAAC,cAAc,CAAC,iBAAiB;AACpC;AAAA,UACD;AAGA,eAAK,gBAAgB,IAAI,WAAW,SAAS,YAAY;AAGzD,gBAAM,mBAAmB,QAAQ,CAACC,YAAW;AAC5C,mBAAO,gBAAgB,eAAe,KAAKA,OAAM,GAAG;AAAA,UACrD,CAAC;AACD,gBAAM;AAAA,YACL,YAAY,kBAAkB,MAAM;AACnC,mBAAK,QAAQ;AAAA,YACd,CAAC;AAAA,UACF;AAGA,gBAAM;AAAA,YACL;AAAA,cACC,gBAAgB;AAAA,cAChB,CAAC,YAAY;AACZ,oBAAI,QAAQ,QAAQ;AAInB,sBAAI,KAAK,MAAM,cAAc,GAAG;AAC/B,yBAAK,QAAQ;AACb;AAAA,kBACD;AAGA,uBAAK,oBAAoB;AAAA,oBACxB;AAAA,oBACA;AAAA,kBACD;AACA;AAAA,gBACD;AAKA,oBAAI,QAAQ,QAAQ,WAAW,GAAG;AACjC,wBAAM,qBACL,KAAK,eAAe,mBAAmB,IAAI;AAE5C,sBACC,uBAAuB,SACvB,uBAAuB,QACtB;AACD,wBAAI,eAAe;AACnB,0BAAM,kBAAkB;AAAA,sBACvB,GAAG;AAAA,oBACJ;AAEA,+BAAW,OAAO,QAAQ,SAAS;AAClC,4BAAM,QACL,gBAAgB;AAAA,wBACf,CAAC,SACA,KAAK,OAAO,IAAI;AAAA,sBAClB;AAED,0BAAI,UAAU,IAAI;AACjB,wCAAgB;AAAA,0BACf;AAAA,0BACA;AAAA,wBACD;AACA,uCAAe;AAAA,sBAChB;AAAA,oBACD;AAEA,wBAAI,cAAc;AACjB,2BAAK,eAAe;AAAA,wBACnB;AAAA,sBACD;AACA;AAAA,oBACD;AAAA,kBACD;AAAA,gBACD;AAEA,qBAAK,QAAQ;AAAA,cACd;AAAA,YACD;AAAA,UACD;AAGA,gBAAM;AAAA,YACL;AAAA,cACC,KAAK,eAAe;AAAA,cACpB,MAAM;AACL,qBAAK,QAAQ;AAAA,cACd;AAAA,YACD;AAAA,UACD;AAKA,cAAI,CAAC,YAAY;AAChB,iBAAK,QAAQ;AAAA,UACd;AACA,uBAAa;AAAA,QACd,CAAC;AAAA,MACF;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEmB,WAAW,QAAgB,OAAqB;AAClE,UAAM,WAAW,QAAQ,KAAK;AAC9B,SAAK,MAAM,OAAO,QAAQ,KAAK;AAAA,EAChC;AAAA,EAES,kBAA6C;AACrD,WAAO,KAAK;AAAA,EACb;AAAA,EAES,oBAA8C;AACtD,WAAO,KAAK,gBAAgB,WAAW,IAAI,GAAG;AAAA,EAC/C;AAAA,EAES,kBACR,QACA,SAC8B;AAC9B,QAAI,OAAO,OAAO,2BAA2B;AAC5C,YAAM,aAAa,KAAK,gBAAgB,WAAW,IAAI;AACvD,UAAI,YAAY;AACf,eAAO,IAAI;AAAA,UACV;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,IACD,WAAW,OAAO,OAAO,kCAAkC;AAC1D,YAAM,aAAa,KAAK,gBAAgB,WAAW,IAAI;AACvD,YAAM,qBACL,KAAK,gBAAgB,mBAAmB,IAAI;AAC7C,UAAI,cAAc,oBAAoB;AACrC,eAAO,IAAI;AAAA,UACV;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,WAAO,MAAM,kBAAkB,QAAQ,OAAO;AAAA,EAC/C;AAAA,EAEA,MAAM,UAAyB;AAC9B,UAAM,KAAK,gBAAgB,IAAI;AAE/B,SAAK,cAAc;AACnB,SAAK,oBAAoB,IAAI,OAAO,MAAS;AAC7C,SAAK,MAAM,YAAY;AAAA,EACxB;AAAA,EAEA,MAAM,iBAAgC;AACrC,UAAM,SACL,KAAK,sBAAsB,eAAe,gBAAgB;AAC3D,UAAM,SAAS,MAAM,OAAO,eAAe;AAE3C,QAAI,QAAQ;AACX,WAAK,eAAe,cAAc,OAAO,UAAU;AAAA,IACpD;AAAA,EACD;AAAA,EAEA,MAAM,qBAAoC;AACzC,UAAM,aAAa,KAAK,eAAe,WAAW,IAAI;AACtD,UAAM,kBAAkB,YAAY,SAAS,gBAAgB,IAAI;AAEjE,QAAI,CAAC,iBAAiB;AACrB;AAAA,IACD;AAEA,UAAM,qBAAqB,KAAK,eAAe,mBAAmB,IAAI;AACtE,UAAM,SAAS,KAAK,sBAAsB;AAAA,MACzC;AAAA,MACA;AAAA,MACA;AAAA,IACD;AACA,UAAM,SAAS,MAAM,OAAO,mBAAmB;AAE/C,QAAI,QAAQ;AACX,WAAK,eAAe,sBAAsB,MAAM;AAAA,IACjD;AAAA,EACD;AAAA,EAEA,MAAM,2BAA0C;AAC/C,UAAM,aAAa,KAAK,eAAe,WAAW,IAAI;AACtD,UAAM,kBAAkB,YAAY,SAAS,gBAAgB,IAAI;AACjE,UAAM,iBAAiB,iBAAiB,eAAe,IAAI;AAE3D,QAAI,CAAC,cAAc,CAAC,gBAAgB,UAAU;AAC7C;AAAA,IACD;AAEA,UAAM,oBAAoB,KAAK,eAAe,mBAAmB,IAAI;AAGrE,QACC,MAAM,QAAQ,iBAAiB,KAC/B,CAAC,kBAAkB,KAAK,CAAC,MAAM,EAAE,OAAO,eAAe,EAAE,GACxD;AACD,WAAK,qBAAqB;AAAA,QACzB;AAAA,UACC;AAAA,UACA;AAAA,QACD;AAAA,MACD;AACA;AAAA,IACD;AAEA,UAAM,iBAAiB,6BAAe;AACrC,YAAM,QAAQ,KAAK,eAAe,mBAAmB;AACrD,UAAI,CAAC,OAAO;AACX,eAAO;AAAA,MACR;AAEA,YAAM,uBAAuB,MAAM,WAAW;AAAA,QAC7C,CAAC,SACA,KAAK,qBAAqB,YAAY,OACtC,eAAe;AAAA,MACjB;AAEA,UACC,wBACA,KAAK,MAAM,QAAQ,oBAAoB,GACtC;AACD,aAAK,MAAM,OAAO,sBAAsB,GAAG;AAE3C,aAAK,MAAM,aAAa,CAAC,oBAAoB,CAAC;AAC9C,aAAK,MAAM,SAAS,CAAC,oBAAoB,CAAC;AAC1C,eAAO;AAAA,MACR;AAEA,aAAO;AAAA,IACR,GAxBuB;AA0BvB,QAAI,eAAe,GAAG;AACrB;AAAA,IACD;AAGA,SAAK,eAAe,YAAY,YAAY,eAAe,QAAQ;AAGnE,UAAM,KAAK,gBAAgB;AAG3B,mBAAe;AAAA,EAChB;AAAA,EAEQ,YAAY,WAA8B;AACjD,SAAK,wBAAwB,IAAI,+BAA+B;AAEhE,UAAM,2BACL,KAAK,qBAAqB;AAAA,MACzB;AAAA,MACA,KAAK,sBAAsB,oBAAoB,KAAK,EAAE;AAAA,IACvD;AACD,SAAK,UAAU,wBAAwB;AAEvC,SAAK,kBAAkB,KAAK,qBAAqB;AAAA,MAChD;AAAA,IACD;AACA,SAAK,UAAU,KAAK,eAAe;AAEnC,SAAK,QAAQ,KAAK,qBAAqB;AAAA,MACtC;AAAA,MACA;AAAA,MACA;AAAA,MACA,IAAI,aAAa;AAAA,MACjB;AAAA,QACC,KAAK,qBAAqB;AAAA,UACzB;AAAA,UACA;AAAA,QACD;AAAA,QACA,KAAK,qBAAqB;AAAA,UACzB;AAAA,UACA,MAAM,KAAK;AAAA,UACX,CAAC,eAAe,KAAK,kBAAkB,UAAU;AAAA,QAClD;AAAA,MACD;AAAA,MACA,KAAK;AAAA,MACL;AAAA,QACC,uBACC,IAAI,oCAAoC;AAAA,QACzC,kBAAkB,KAAK;AAAA,QACvB,mBAAmB,wBAAC,MAAe,OAAhB;AAAA,QACnB,iCACC,IAAI,8CAA8C;AAAA,QACnD,qBAAqB;AAAA,QACrB,0BAA0B;AAAA,MAC3B;AAAA,IACD;AAKA,SAAK,UAAU,KAAK,KAAK;AAEzB,SAAK,MAAM,UAAU,KAAK,YAAY,MAAM,KAAK,MAAM;AACvD,SAAK,MAAM,cAAc,KAAK,gBAAgB,MAAM,KAAK,MAAM;AAAA,EAChE;AAAA,EAEA,MAAc,WACb,GACgB;AAChB,QAAI,CAAC,EAAE,SAAS;AACf;AAAA,IACD,WAAW,qCAAqC,EAAE,OAAO,GAAG;AAC3D,YAAM,cAAc,EAAE,QAAQ,qBAAqB;AACnD,YAAM,sBACL,YAAY,UAAU,SAAS,IAC5B,YAAY,UAAU,CAAC,IACvB;AAEJ,YAAM,kBACL,EAAE,QAAQ,WAAW,SAAS,gBAAgB,IAAI;AACnD,YAAM,qBACL,MAAM,iBAAiB;AAAA,QACtB,YAAY;AAAA,QACZ;AAAA,MACD;AACD,UAAI,oBAAoB;AACvB,cAAM,QAAQ,GAAG,YAAY,aAAa,YAAY,EAAE,MAAM,YAAY,OAAO;AAEjF,cAAM,UAAU,EAAE,QAAQ,WAAW,SAAS;AAC9C,cAAM,OAAO,UACV,QAAQ,OACR,EAAE,QAAQ,WAAW,SAAS;AACjC,cAAM,qBAAqB,IAAI;AAAA,UAC9B;AAAA,YACC,QAAQ;AAAA,YACR,MAAM,GAAG,IAAI,IAAI,mBAAmB,KAAK,YAAY,EAAE;AAAA,UACxD;AAAA,UACA;AAAA,QACD;AAEA,cAAM,KAAK,gBAAgB;AAAA,UAC1B;AAAA,UACA;AAAA,YACC;AAAA,YACA;AAAA,YACA,WAAW;AAAA,UACZ;AAAA,QACD;AAAA,MACD;AAAA,IACD,WAAW,oCAAoC,EAAE,OAAO,GAAG;AAC1D,YAAM,eACL,KAAK,qBAAqB;AAAA,QACzB;AAAA,MACD,MAAM;AACP,UAAI,CAAC,cAAc;AAClB,aAAK,kBAAkB,EAAE,QAAQ,UAAU;AAC3C,aAAK,MAAM,aAAa,CAAC,CAAC;AAAA,MAC3B;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,eAAe,GAAoD;AAC1E,UAAM,UAAU,EAAE;AAElB,QAAI,CAAC,WAAW,CAAC,qCAAqC,OAAO,GAAG;AAC/D;AAAA,IACD;AAEA,SAAK,mBAAmB,gBAAgB;AAAA,MACvC,QAAQ,OAAO;AAAA,MACf,mBAAmB;AAAA,QAClB,KAAK,QAAQ,WAAW;AAAA,QACxB,mBAAmB;AAAA,MACpB;AAAA,MACA,WAAW,6BAAM,EAAE,QAAR;AAAA,MACX,mBAAmB,6BAAM,QAAQ,qBAAqB,aAAnC;AAAA,IACpB,CAAC;AAAA,EACF;AAAA,EAEA,MAAc,kBAAkB,YAA2C;AAC1E,WAAO,KAAK,uBAAuB,MAAM,YAAY;AACpD,UAAI,KAAK,oBAAoB,IAAI,GAAG;AACnC;AAAA,MACD;AAEA,WAAK,oBAAoB,IAAI,MAAM,MAAS;AAC5C,WAAK,eAAe,YAAY,YAAY,IAAI;AAEhD,YAAM,KAAK,gBAAgB;AAC3B,WAAK,oBAAoB,IAAI,OAAO,MAAS;AAAA,IAC9C,CAAC;AAAA,EACF;AAAA,EAEQ,gBAAgB,aAAa,OAAsB;AAC1D,WAAO,KAAK,yBAAyB;AAAA,MAAM,MAC1C,KAAK,wBAAwB,MAAM,YAAY;AAC9C,YAAI,YAAY;AACf,eAAK,eAAe,qBAAqB;AAAA,QAC1C;AAEA,cAAM,KAAK,iBAAiB;AAAA,UAC3B,EAAE,UAAU,KAAK,GAAG;AAAA,UACpB,YAAY;AACX,kBAAM,KAAK,MAAM;AAAA,cAChB;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA;AAAA,cAEA;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAES,UAAgB;AACxB,SAAK,uBAAuB,QAAQ;AACpC,UAAM,QAAQ;AAAA,EACf;AACD;AA9kBa,qBAAN;AAAA,EAyBJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAtCU;",
  "names": ["items", "reader"]
}
