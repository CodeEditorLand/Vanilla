{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/scm/browser/menus.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IAction } from '../../../../base/common/actions.js';\nimport { equals } from '../../../../base/common/arrays.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { DisposableStore, IDisposable, dispose } from '../../../../base/common/lifecycle.js';\nimport './media/scm.css';\nimport { localize } from '../../../../nls.js';\nimport { createAndFillInActionBarActions } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { IMenu, IMenuService, MenuId, MenuRegistry } from '../../../../platform/actions/common/actions.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nimport { ISCMMenus, ISCMProvider, ISCMRepository, ISCMRepositoryMenus, ISCMResource, ISCMResourceGroup, ISCMService } from '../common/scm.js';\n\nfunction actionEquals(a: IAction, b: IAction): boolean {\n\treturn a.id === b.id;\n}\n\nconst repositoryMenuDisposables = new DisposableStore();\n\nMenuRegistry.onDidChangeMenu(e => {\n\tif (e.has(MenuId.SCMTitle)) {\n\t\trepositoryMenuDisposables.clear();\n\n\t\tfor (const menuItem of MenuRegistry.getMenuItems(MenuId.SCMTitle)) {\n\t\t\trepositoryMenuDisposables.add(MenuRegistry.appendMenuItem(MenuId.SCMSourceControlInline, menuItem));\n\t\t}\n\t}\n});\n\nexport class SCMTitleMenu implements IDisposable {\n\n\tprivate _actions: IAction[] = [];\n\tget actions(): IAction[] { return this._actions; }\n\n\tprivate _secondaryActions: IAction[] = [];\n\tget secondaryActions(): IAction[] { return this._secondaryActions; }\n\n\tprivate readonly _onDidChangeTitle = new Emitter<void>();\n\treadonly onDidChangeTitle = this._onDidChangeTitle.event;\n\n\treadonly menu: IMenu;\n\tprivate readonly disposables = new DisposableStore();\n\n\tconstructor(\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService\n\t) {\n\t\tthis.menu = menuService.createMenu(MenuId.SCMTitle, contextKeyService);\n\t\tthis.disposables.add(this.menu);\n\n\t\tthis.menu.onDidChange(this.updateTitleActions, this, this.disposables);\n\t\tthis.updateTitleActions();\n\t}\n\n\tprivate updateTitleActions(): void {\n\t\tconst primary: IAction[] = [];\n\t\tconst secondary: IAction[] = [];\n\t\tcreateAndFillInActionBarActions(this.menu, { shouldForwardArgs: true }, { primary, secondary });\n\n\t\tif (equals(primary, this._actions, actionEquals) && equals(secondary, this._secondaryActions, actionEquals)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._actions = primary;\n\t\tthis._secondaryActions = secondary;\n\n\t\tthis._onDidChangeTitle.fire();\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\t}\n}\n\ninterface IContextualResourceMenuItem {\n\treadonly menu: IMenu;\n\tdispose(): void;\n}\n\nclass SCMMenusItem implements IDisposable {\n\n\tprivate _resourceGroupMenu: IMenu | undefined;\n\tget resourceGroupMenu(): IMenu {\n\t\tif (!this._resourceGroupMenu) {\n\t\t\tthis._resourceGroupMenu = this.menuService.createMenu(MenuId.SCMResourceGroupContext, this.contextKeyService);\n\t\t}\n\n\t\treturn this._resourceGroupMenu;\n\t}\n\n\tprivate _resourceFolderMenu: IMenu | undefined;\n\tget resourceFolderMenu(): IMenu {\n\t\tif (!this._resourceFolderMenu) {\n\t\t\tthis._resourceFolderMenu = this.menuService.createMenu(MenuId.SCMResourceFolderContext, this.contextKeyService);\n\t\t}\n\n\t\treturn this._resourceFolderMenu;\n\t}\n\n\tprivate genericResourceMenu: IMenu | undefined;\n\tprivate contextualResourceMenus: Map<string /* contextValue */, IContextualResourceMenuItem> | undefined;\n\n\tconstructor(\n\t\tprivate contextKeyService: IContextKeyService,\n\t\tprivate menuService: IMenuService\n\t) { }\n\n\tgetResourceMenu(resource: ISCMResource): IMenu {\n\t\tif (typeof resource.contextValue === 'undefined') {\n\t\t\tif (!this.genericResourceMenu) {\n\t\t\t\tthis.genericResourceMenu = this.menuService.createMenu(MenuId.SCMResourceContext, this.contextKeyService);\n\t\t\t}\n\n\t\t\treturn this.genericResourceMenu;\n\t\t}\n\n\t\tif (!this.contextualResourceMenus) {\n\t\t\tthis.contextualResourceMenus = new Map<string, IContextualResourceMenuItem>();\n\t\t}\n\n\t\tlet item = this.contextualResourceMenus.get(resource.contextValue);\n\n\t\tif (!item) {\n\t\t\tconst contextKeyService = this.contextKeyService.createOverlay([['scmResourceState', resource.contextValue]]);\n\t\t\tconst menu = this.menuService.createMenu(MenuId.SCMResourceContext, contextKeyService);\n\n\t\t\titem = {\n\t\t\t\tmenu, dispose() {\n\t\t\t\t\tmenu.dispose();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.contextualResourceMenus.set(resource.contextValue, item);\n\t\t}\n\n\t\treturn item.menu;\n\t}\n\n\tdispose(): void {\n\t\tthis._resourceGroupMenu?.dispose();\n\t\tthis._resourceFolderMenu?.dispose();\n\t\tthis.genericResourceMenu?.dispose();\n\n\t\tif (this.contextualResourceMenus) {\n\t\t\tdispose(this.contextualResourceMenus.values());\n\t\t\tthis.contextualResourceMenus.clear();\n\t\t\tthis.contextualResourceMenus = undefined;\n\t\t}\n\t}\n}\n\nexport class SCMRepositoryMenus implements ISCMRepositoryMenus, IDisposable {\n\n\tprivate contextKeyService: IContextKeyService;\n\n\treadonly titleMenu: SCMTitleMenu;\n\treadonly repositoryMenu: IMenu;\n\n\tprivate readonly resourceGroupMenusItems = new Map<ISCMResourceGroup, SCMMenusItem>();\n\n\tprivate _repositoryContextMenu: IMenu | undefined;\n\tget repositoryContextMenu(): IMenu {\n\t\tif (!this._repositoryContextMenu) {\n\t\t\tthis._repositoryContextMenu = this.menuService.createMenu(MenuId.SCMSourceControl, this.contextKeyService);\n\t\t\tthis.disposables.add(this._repositoryContextMenu);\n\t\t}\n\n\t\treturn this._repositoryContextMenu;\n\t}\n\n\tprivate readonly disposables = new DisposableStore();\n\n\tconstructor(\n\t\tprivate readonly provider: ISCMProvider,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IMenuService private readonly menuService: IMenuService\n\t) {\n\t\tthis.contextKeyService = contextKeyService.createOverlay([\n\t\t\t['scmProvider', provider.contextValue],\n\t\t\t['scmProviderRootUri', provider.rootUri?.toString()],\n\t\t\t['scmProviderHasRootUri', !!provider.rootUri],\n\t\t]);\n\n\t\tconst serviceCollection = new ServiceCollection([IContextKeyService, this.contextKeyService]);\n\t\tinstantiationService = instantiationService.createChild(serviceCollection, this.disposables);\n\t\tthis.titleMenu = instantiationService.createInstance(SCMTitleMenu);\n\t\tthis.disposables.add(this.titleMenu);\n\n\t\tthis.repositoryMenu = menuService.createMenu(MenuId.SCMSourceControlInline, this.contextKeyService);\n\t\tthis.disposables.add(this.repositoryMenu);\n\n\t\tprovider.onDidChangeResourceGroups(this.onDidChangeResourceGroups, this, this.disposables);\n\t\tthis.onDidChangeResourceGroups();\n\t}\n\n\tgetResourceGroupMenu(group: ISCMResourceGroup): IMenu {\n\t\treturn this.getOrCreateResourceGroupMenusItem(group).resourceGroupMenu;\n\t}\n\n\tgetResourceMenu(resource: ISCMResource): IMenu {\n\t\treturn this.getOrCreateResourceGroupMenusItem(resource.resourceGroup).getResourceMenu(resource);\n\t}\n\n\tgetResourceFolderMenu(group: ISCMResourceGroup): IMenu {\n\t\treturn this.getOrCreateResourceGroupMenusItem(group).resourceFolderMenu;\n\t}\n\n\tprivate getOrCreateResourceGroupMenusItem(group: ISCMResourceGroup): SCMMenusItem {\n\t\tlet result = this.resourceGroupMenusItems.get(group);\n\n\t\tif (!result) {\n\t\t\tconst contextKeyService = this.contextKeyService.createOverlay([\n\t\t\t\t['scmResourceGroup', group.id],\n\t\t\t\t['multiDiffEditorEnableViewChanges', group.multiDiffEditorEnableViewChanges],\n\t\t\t]);\n\n\t\t\tresult = new SCMMenusItem(contextKeyService, this.menuService);\n\t\t\tthis.resourceGroupMenusItems.set(group, result);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate onDidChangeResourceGroups(): void {\n\t\tfor (const resourceGroup of this.resourceGroupMenusItems.keys()) {\n\t\t\tif (!this.provider.groups.includes(resourceGroup)) {\n\t\t\t\tthis.resourceGroupMenusItems.get(resourceGroup)?.dispose();\n\t\t\t\tthis.resourceGroupMenusItems.delete(resourceGroup);\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\t\tthis.resourceGroupMenusItems.forEach(item => item.dispose());\n\t}\n}\n\nexport class SCMMenus implements ISCMMenus, IDisposable {\n\n\treadonly titleMenu: SCMTitleMenu;\n\tprivate readonly disposables = new DisposableStore();\n\tprivate readonly menus = new Map<ISCMProvider, { menus: SCMRepositoryMenus; dispose: () => void }>();\n\n\tconstructor(\n\t\t@ISCMService scmService: ISCMService,\n\t\t@IInstantiationService private instantiationService: IInstantiationService\n\t) {\n\t\tthis.titleMenu = instantiationService.createInstance(SCMTitleMenu);\n\t\tscmService.onDidRemoveRepository(this.onDidRemoveRepository, this, this.disposables);\n\t}\n\n\tprivate onDidRemoveRepository(repository: ISCMRepository): void {\n\t\tconst menus = this.menus.get(repository.provider);\n\t\tmenus?.dispose();\n\t\tthis.menus.delete(repository.provider);\n\t}\n\n\tgetRepositoryMenus(provider: ISCMProvider): SCMRepositoryMenus {\n\t\tlet result = this.menus.get(provider);\n\n\t\tif (!result) {\n\t\t\tconst menus = this.instantiationService.createInstance(SCMRepositoryMenus, provider);\n\t\t\tconst dispose = () => {\n\t\t\t\tmenus.dispose();\n\t\t\t\tthis.menus.delete(provider);\n\t\t\t};\n\n\t\t\tresult = { menus, dispose };\n\t\t\tthis.menus.set(provider, result);\n\t\t}\n\n\t\treturn result.menus;\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\t}\n}\n\nMenuRegistry.appendMenuItem(MenuId.SCMResourceContext, {\n\ttitle: localize('miShare', \"Share\"),\n\tsubmenu: MenuId.SCMResourceContextShare,\n\tgroup: '45_share',\n\torder: 3,\n});\n"],
  "mappings": "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",
  "names": ["dispose"]
}
