{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/scm/browser/menus.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IAction } from \"../../../../base/common/actions.js\";\nimport { equals } from \"../../../../base/common/arrays.js\";\nimport { Emitter } from \"../../../../base/common/event.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n\tdispose,\n} from \"../../../../base/common/lifecycle.js\";\nimport \"./media/scm.css\";\nimport { localize } from \"../../../../nls.js\";\nimport { createAndFillInActionBarActions } from \"../../../../platform/actions/browser/menuEntryActionViewItem.js\";\nimport {\n\ttype IMenu,\n\tIMenuService,\n\tMenuId,\n\tMenuRegistry,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ServiceCollection } from \"../../../../platform/instantiation/common/serviceCollection.js\";\nimport {\n\ttype ISCMMenus,\n\ttype ISCMProvider,\n\ttype ISCMRepository,\n\ttype ISCMRepositoryMenus,\n\ttype ISCMResource,\n\ttype ISCMResourceGroup,\n\tISCMService,\n} from \"../common/scm.js\";\n\nfunction actionEquals(a: IAction, b: IAction): boolean {\n\treturn a.id === b.id;\n}\n\nconst repositoryMenuDisposables = new DisposableStore();\n\nMenuRegistry.onDidChangeMenu((e) => {\n\tif (e.has(MenuId.SCMTitle)) {\n\t\trepositoryMenuDisposables.clear();\n\n\t\tfor (const menuItem of MenuRegistry.getMenuItems(MenuId.SCMTitle)) {\n\t\t\trepositoryMenuDisposables.add(\n\t\t\t\tMenuRegistry.appendMenuItem(\n\t\t\t\t\tMenuId.SCMSourceControlInline,\n\t\t\t\t\tmenuItem,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n});\n\nexport class SCMTitleMenu implements IDisposable {\n\tprivate _actions: IAction[] = [];\n\tget actions(): IAction[] {\n\t\treturn this._actions;\n\t}\n\n\tprivate _secondaryActions: IAction[] = [];\n\tget secondaryActions(): IAction[] {\n\t\treturn this._secondaryActions;\n\t}\n\n\tprivate readonly _onDidChangeTitle = new Emitter<void>();\n\treadonly onDidChangeTitle = this._onDidChangeTitle.event;\n\n\treadonly menu: IMenu;\n\tprivate readonly disposables = new DisposableStore();\n\n\tconstructor(\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t) {\n\t\tthis.menu = menuService.createMenu(MenuId.SCMTitle, contextKeyService);\n\t\tthis.disposables.add(this.menu);\n\n\t\tthis.menu.onDidChange(this.updateTitleActions, this, this.disposables);\n\t\tthis.updateTitleActions();\n\t}\n\n\tprivate updateTitleActions(): void {\n\t\tconst primary: IAction[] = [];\n\t\tconst secondary: IAction[] = [];\n\t\tcreateAndFillInActionBarActions(\n\t\t\tthis.menu,\n\t\t\t{ shouldForwardArgs: true },\n\t\t\t{ primary, secondary },\n\t\t);\n\n\t\tif (\n\t\t\tequals(primary, this._actions, actionEquals) &&\n\t\t\tequals(secondary, this._secondaryActions, actionEquals)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._actions = primary;\n\t\tthis._secondaryActions = secondary;\n\n\t\tthis._onDidChangeTitle.fire();\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\t}\n}\n\ninterface IContextualResourceMenuItem {\n\treadonly menu: IMenu;\n\tdispose(): void;\n}\n\nclass SCMMenusItem implements IDisposable {\n\tprivate _resourceGroupMenu: IMenu | undefined;\n\tget resourceGroupMenu(): IMenu {\n\t\tif (!this._resourceGroupMenu) {\n\t\t\tthis._resourceGroupMenu = this.menuService.createMenu(\n\t\t\t\tMenuId.SCMResourceGroupContext,\n\t\t\t\tthis.contextKeyService,\n\t\t\t);\n\t\t}\n\n\t\treturn this._resourceGroupMenu;\n\t}\n\n\tprivate _resourceFolderMenu: IMenu | undefined;\n\tget resourceFolderMenu(): IMenu {\n\t\tif (!this._resourceFolderMenu) {\n\t\t\tthis._resourceFolderMenu = this.menuService.createMenu(\n\t\t\t\tMenuId.SCMResourceFolderContext,\n\t\t\t\tthis.contextKeyService,\n\t\t\t);\n\t\t}\n\n\t\treturn this._resourceFolderMenu;\n\t}\n\n\tprivate genericResourceMenu: IMenu | undefined;\n\tprivate contextualResourceMenus:\n\t\t| Map<string /* contextValue */, IContextualResourceMenuItem>\n\t\t| undefined;\n\n\tconstructor(\n\t\tprivate contextKeyService: IContextKeyService,\n\t\tprivate menuService: IMenuService,\n\t) {}\n\n\tgetResourceMenu(resource: ISCMResource): IMenu {\n\t\tif (typeof resource.contextValue === \"undefined\") {\n\t\t\tif (!this.genericResourceMenu) {\n\t\t\t\tthis.genericResourceMenu = this.menuService.createMenu(\n\t\t\t\t\tMenuId.SCMResourceContext,\n\t\t\t\t\tthis.contextKeyService,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn this.genericResourceMenu;\n\t\t}\n\n\t\tif (!this.contextualResourceMenus) {\n\t\t\tthis.contextualResourceMenus = new Map<\n\t\t\t\tstring,\n\t\t\t\tIContextualResourceMenuItem\n\t\t\t>();\n\t\t}\n\n\t\tlet item = this.contextualResourceMenus.get(resource.contextValue);\n\n\t\tif (!item) {\n\t\t\tconst contextKeyService = this.contextKeyService.createOverlay([\n\t\t\t\t[\"scmResourceState\", resource.contextValue],\n\t\t\t]);\n\t\t\tconst menu = this.menuService.createMenu(\n\t\t\t\tMenuId.SCMResourceContext,\n\t\t\t\tcontextKeyService,\n\t\t\t);\n\n\t\t\titem = {\n\t\t\t\tmenu,\n\t\t\t\tdispose() {\n\t\t\t\t\tmenu.dispose();\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tthis.contextualResourceMenus.set(resource.contextValue, item);\n\t\t}\n\n\t\treturn item.menu;\n\t}\n\n\tdispose(): void {\n\t\tthis._resourceGroupMenu?.dispose();\n\t\tthis._resourceFolderMenu?.dispose();\n\t\tthis.genericResourceMenu?.dispose();\n\n\t\tif (this.contextualResourceMenus) {\n\t\t\tdispose(this.contextualResourceMenus.values());\n\t\t\tthis.contextualResourceMenus.clear();\n\t\t\tthis.contextualResourceMenus = undefined;\n\t\t}\n\t}\n}\n\nexport class SCMRepositoryMenus implements ISCMRepositoryMenus, IDisposable {\n\tprivate contextKeyService: IContextKeyService;\n\n\treadonly titleMenu: SCMTitleMenu;\n\treadonly repositoryMenu: IMenu;\n\n\tprivate readonly resourceGroupMenusItems = new Map<\n\t\tISCMResourceGroup,\n\t\tSCMMenusItem\n\t>();\n\n\tprivate _repositoryContextMenu: IMenu | undefined;\n\tget repositoryContextMenu(): IMenu {\n\t\tif (!this._repositoryContextMenu) {\n\t\t\tthis._repositoryContextMenu = this.menuService.createMenu(\n\t\t\t\tMenuId.SCMSourceControl,\n\t\t\t\tthis.contextKeyService,\n\t\t\t);\n\t\t\tthis.disposables.add(this._repositoryContextMenu);\n\t\t}\n\n\t\treturn this._repositoryContextMenu;\n\t}\n\n\tprivate readonly disposables = new DisposableStore();\n\n\tconstructor(\n\t\tprivate readonly provider: ISCMProvider,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t) {\n\t\tthis.contextKeyService = contextKeyService.createOverlay([\n\t\t\t[\"scmProvider\", provider.contextValue],\n\t\t\t[\"scmProviderRootUri\", provider.rootUri?.toString()],\n\t\t\t[\"scmProviderHasRootUri\", !!provider.rootUri],\n\t\t]);\n\n\t\tconst serviceCollection = new ServiceCollection([\n\t\t\tIContextKeyService,\n\t\t\tthis.contextKeyService,\n\t\t]);\n\t\tinstantiationService = instantiationService.createChild(\n\t\t\tserviceCollection,\n\t\t\tthis.disposables,\n\t\t);\n\t\tthis.titleMenu = instantiationService.createInstance(SCMTitleMenu);\n\t\tthis.disposables.add(this.titleMenu);\n\n\t\tthis.repositoryMenu = menuService.createMenu(\n\t\t\tMenuId.SCMSourceControlInline,\n\t\t\tthis.contextKeyService,\n\t\t);\n\t\tthis.disposables.add(this.repositoryMenu);\n\n\t\tprovider.onDidChangeResourceGroups(\n\t\t\tthis.onDidChangeResourceGroups,\n\t\t\tthis,\n\t\t\tthis.disposables,\n\t\t);\n\t\tthis.onDidChangeResourceGroups();\n\t}\n\n\tgetResourceGroupMenu(group: ISCMResourceGroup): IMenu {\n\t\treturn this.getOrCreateResourceGroupMenusItem(group).resourceGroupMenu;\n\t}\n\n\tgetResourceMenu(resource: ISCMResource): IMenu {\n\t\treturn this.getOrCreateResourceGroupMenusItem(\n\t\t\tresource.resourceGroup,\n\t\t).getResourceMenu(resource);\n\t}\n\n\tgetResourceFolderMenu(group: ISCMResourceGroup): IMenu {\n\t\treturn this.getOrCreateResourceGroupMenusItem(group).resourceFolderMenu;\n\t}\n\n\tprivate getOrCreateResourceGroupMenusItem(\n\t\tgroup: ISCMResourceGroup,\n\t): SCMMenusItem {\n\t\tlet result = this.resourceGroupMenusItems.get(group);\n\n\t\tif (!result) {\n\t\t\tconst contextKeyService = this.contextKeyService.createOverlay([\n\t\t\t\t[\"scmResourceGroup\", group.id],\n\t\t\t\t[\n\t\t\t\t\t\"multiDiffEditorEnableViewChanges\",\n\t\t\t\t\tgroup.multiDiffEditorEnableViewChanges,\n\t\t\t\t],\n\t\t\t]);\n\n\t\t\tresult = new SCMMenusItem(contextKeyService, this.menuService);\n\t\t\tthis.resourceGroupMenusItems.set(group, result);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate onDidChangeResourceGroups(): void {\n\t\tfor (const resourceGroup of this.resourceGroupMenusItems.keys()) {\n\t\t\tif (!this.provider.groups.includes(resourceGroup)) {\n\t\t\t\tthis.resourceGroupMenusItems.get(resourceGroup)?.dispose();\n\t\t\t\tthis.resourceGroupMenusItems.delete(resourceGroup);\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\t\tthis.resourceGroupMenusItems.forEach((item) => item.dispose());\n\t}\n}\n\nexport class SCMMenus implements ISCMMenus, IDisposable {\n\treadonly titleMenu: SCMTitleMenu;\n\tprivate readonly disposables = new DisposableStore();\n\tprivate readonly menus = new Map<\n\t\tISCMProvider,\n\t\t{ menus: SCMRepositoryMenus; dispose: () => void }\n\t>();\n\n\tconstructor(\n\t\t@ISCMService scmService: ISCMService,\n\t\t@IInstantiationService\n\t\tprivate instantiationService: IInstantiationService,\n\t) {\n\t\tthis.titleMenu = instantiationService.createInstance(SCMTitleMenu);\n\t\tscmService.onDidRemoveRepository(\n\t\t\tthis.onDidRemoveRepository,\n\t\t\tthis,\n\t\t\tthis.disposables,\n\t\t);\n\t}\n\n\tprivate onDidRemoveRepository(repository: ISCMRepository): void {\n\t\tconst menus = this.menus.get(repository.provider);\n\t\tmenus?.dispose();\n\t\tthis.menus.delete(repository.provider);\n\t}\n\n\tgetRepositoryMenus(provider: ISCMProvider): SCMRepositoryMenus {\n\t\tlet result = this.menus.get(provider);\n\n\t\tif (!result) {\n\t\t\tconst menus = this.instantiationService.createInstance(\n\t\t\t\tSCMRepositoryMenus,\n\t\t\t\tprovider,\n\t\t\t);\n\t\t\tconst dispose = () => {\n\t\t\t\tmenus.dispose();\n\t\t\t\tthis.menus.delete(provider);\n\t\t\t};\n\n\t\t\tresult = { menus, dispose };\n\t\t\tthis.menus.set(provider, result);\n\t\t}\n\n\t\treturn result.menus;\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\t}\n}\n\nMenuRegistry.appendMenuItem(MenuId.SCMResourceContext, {\n\ttitle: localize(\"miShare\", \"Share\"),\n\tsubmenu: MenuId.SCMResourceContextShare,\n\tgroup: \"45_share\",\n\torder: 3,\n});\n"],
  "mappings": "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",
  "names": ["dispose"]
}
