var I=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var c=(r,e,i,t)=>{for(var s=t>1?void 0:t?C(e,i):e,o=r.length-1,n;o>=0;o--)(n=r[o])&&(s=(t?n(e,i,s):n(s))||s);return t&&s&&I(e,i,s),s},d=(r,e)=>(i,t)=>e(i,t,r);import{binarySearch as g}from"../../../../../vs/base/common/arrays.js";import{compareFileNames as x,comparePaths as f}from"../../../../../vs/base/common/comparers.js";import{debounce as b}from"../../../../../vs/base/common/decorators.js";import{Emitter as S,Event as R}from"../../../../../vs/base/common/event.js";import{Iterable as p}from"../../../../../vs/base/common/iterator.js";import{DisposableStore as _}from"../../../../../vs/base/common/lifecycle.js";import{basename as M}from"../../../../../vs/base/common/resources.js";import{IConfigurationService as K}from"../../../../../vs/platform/configuration/common/configuration.js";import{IContextKeyService as w,RawContextKey as D}from"../../../../../vs/platform/contextkey/common/contextkey.js";import{IInstantiationService as V}from"../../../../../vs/platform/instantiation/common/instantiation.js";import{IStorageService as F,StorageScope as m,StorageTarget as O}from"../../../../../vs/platform/storage/common/storage.js";import{IWorkspaceContextService as U}from"../../../../../vs/platform/workspace/common/workspace.js";import{SCMMenus as E}from"../../../../../vs/workbench/contrib/scm/browser/menus.js";import{ISCMRepositorySortKey as a,ISCMService as L}from"../../../../../vs/workbench/contrib/scm/common/scm.js";import{IExtensionService as P}from"../../../../../vs/workbench/services/extensions/common/extensions.js";function v(r){return`${r.contextValue}:${r.label}${r.rootUri?`:${r.rootUri.toString()}`:""}`}function u(r,e){if(!e.provider.rootUri)return e.provider.label;const i=r.getWorkspaceFolder(e.provider.rootUri);return i?.uri.toString()===e.provider.rootUri.toString()?i.name:M(e.provider.rootUri)}const T={RepositorySortKey:new D("scmRepositorySortKey",a.DiscoveryTime)};let h=class{constructor(e,i,t,s,o,n,y){this.configurationService=o;this.storageService=n;this.workspaceContextService=y;this.menus=s.createInstance(E);try{this.previousState=JSON.parse(n.get("scm:view:visibleRepositories",m.WORKSPACE,""))}catch{}this._repositoriesSortKey=this.previousState?.sortKey??this.getViewSortOrder(),this._sortKeyContextKey=T.RepositorySortKey.bindTo(i),this._sortKeyContextKey.set(this._repositoriesSortKey),e.onDidAddRepository(this.onDidAddRepository,this,this.disposables),e.onDidRemoveRepository(this.onDidRemoveRepository,this,this.disposables);for(const l of e.repositories)this.onDidAddRepository(l);n.onWillSaveState(this.onWillSaveState,this,this.disposables),t.onWillStop(()=>{this.onWillSaveState(),this.didFinishLoading=!1},this,this.disposables)}menus;didFinishLoading=!1;didSelectRepository=!1;previousState;disposables=new _;_repositories=[];get repositories(){return this._repositories.map(e=>e.repository)}get visibleRepositories(){return this._repositoriesSortKey===a.DiscoveryTime?this._repositories.filter(e=>e.selectionIndex!==-1).sort((e,i)=>e.selectionIndex-i.selectionIndex).map(e=>e.repository):this._repositories.filter(e=>e.selectionIndex!==-1).map(e=>e.repository)}set visibleRepositories(e){const i=new Set(e),t=new Set,s=new Set;for(const o of this._repositories)!i.has(o.repository)&&o.selectionIndex!==-1&&(o.selectionIndex=-1,s.add(o.repository)),i.has(o.repository)&&(o.selectionIndex===-1&&t.add(o.repository),o.selectionIndex=e.indexOf(o.repository));t.size===0&&s.size===0||(this._onDidSetVisibleRepositories.fire({added:t,removed:s}),this._repositories.find(o=>o.focused&&o.selectionIndex===-1)&&this.focus(this._repositories.find(o=>o.selectionIndex!==-1)?.repository))}_onDidChangeRepositories=new S;onDidChangeRepositories=this._onDidChangeRepositories.event;_onDidSetVisibleRepositories=new S;onDidChangeVisibleRepositories=R.any(this._onDidSetVisibleRepositories.event,R.debounce(this._onDidChangeRepositories.event,(e,i)=>{if(!e)return i;const t=new Set(e.added),s=new Set(e.removed);for(const o of i.added)s.has(o)?s.delete(o):t.add(o);for(const o of i.removed)t.has(o)?t.delete(o):s.add(o);return{added:t,removed:s}},0,void 0,void 0,void 0,this.disposables));get focusedRepository(){return this._repositories.find(e=>e.focused)?.repository}_onDidFocusRepository=new S;onDidFocusRepository=this._onDidFocusRepository.event;_repositoriesSortKey;_sortKeyContextKey;onDidAddRepository(e){this.didFinishLoading||this.eventuallyFinishLoading();const i={repository:e,discoveryTime:Date.now(),focused:!1,selectionIndex:-1};let t=p.empty();if(this.previousState&&!this.didFinishLoading){const o=this.previousState.all.indexOf(v(e.provider));if(o===-1){const n=[];this.insertRepositoryView(this._repositories,i),this._repositories.forEach((y,l)=>{y.selectionIndex===-1&&n.push(y.repository),y.selectionIndex=l}),this._onDidChangeRepositories.fire({added:n,removed:p.empty()}),this.didSelectRepository=!1;return}if(this.previousState.visible.indexOf(o)===-1){if(this.didSelectRepository){this.insertRepositoryView(this._repositories,i),this._onDidChangeRepositories.fire({added:p.empty(),removed:p.empty()});return}}else this.didSelectRepository||(t=[...this.visibleRepositories],this._repositories.forEach(n=>{n.focused=!1,n.selectionIndex=-1}),this.didSelectRepository=!0)}const s=this.getMaxSelectionIndex();this.insertRepositoryView(this._repositories,{...i,selectionIndex:s+1}),this._onDidChangeRepositories.fire({added:[i.repository],removed:t}),this._repositories.find(o=>o.focused)||this.focus(e)}onDidRemoveRepository(e){this.didFinishLoading||this.eventuallyFinishLoading();const i=this._repositories.findIndex(o=>o.repository===e);if(i===-1)return;let t=p.empty();const s=this._repositories.splice(i,1);this._repositories.length>0&&this.visibleRepositories.length===0&&(this._repositories[0].selectionIndex=0,t=[this._repositories[0].repository]),this._onDidChangeRepositories.fire({added:t,removed:s.map(o=>o.repository)}),s.length===1&&s[0].focused&&this.visibleRepositories.length>0&&this.focus(this.visibleRepositories[0])}isVisible(e){return this._repositories.find(i=>i.repository===e)?.selectionIndex!==-1}toggleVisibility(e,i){if(typeof i>"u")i=!this.isVisible(e);else if(this.isVisible(e)===i)return;if(i)this.visibleRepositories=[...this.visibleRepositories,e];else{const t=this.visibleRepositories.indexOf(e);t>-1&&(this.visibleRepositories=[...this.visibleRepositories.slice(0,t),...this.visibleRepositories.slice(t+1)])}}toggleSortKey(e){this._repositoriesSortKey=e,this._sortKeyContextKey.set(this._repositoriesSortKey),this._repositories.sort(this.compareRepositories.bind(this)),this._onDidChangeRepositories.fire({added:p.empty(),removed:p.empty()})}focus(e){e&&!this.isVisible(e)||(this._repositories.forEach(i=>i.focused=i.repository===e),this._repositories.find(i=>i.focused)&&this._onDidFocusRepository.fire(e))}compareRepositories(e,i){if(this._repositoriesSortKey===a.DiscoveryTime)return e.discoveryTime-i.discoveryTime;if(this._repositoriesSortKey==="path"&&e.repository.provider.rootUri&&i.repository.provider.rootUri)return f(e.repository.provider.rootUri.fsPath,i.repository.provider.rootUri.fsPath);const t=u(this.workspaceContextService,e.repository),s=u(this.workspaceContextService,i.repository),o=x(t,s);return o===0&&e.repository.provider.rootUri&&i.repository.provider.rootUri?f(e.repository.provider.rootUri.fsPath,i.repository.provider.rootUri.fsPath):o}getMaxSelectionIndex(){return this._repositories.length===0?-1:Math.max(...this._repositories.map(e=>e.selectionIndex))}getViewSortOrder(){switch(this.configurationService.getValue("scm.repositories.sortOrder")){case"discovery time":return a.DiscoveryTime;case"name":return a.Name;case"path":return a.Path;default:return a.DiscoveryTime}}insertRepositoryView(e,i){const t=g(e,i,this.compareRepositories.bind(this));e.splice(t<0?~t:t,0,i)}onWillSaveState(){if(!this.didFinishLoading)return;const e=this.repositories.map(t=>v(t.provider)),i=this.visibleRepositories.map(t=>e.indexOf(v(t.provider)));this.previousState={all:e,sortKey:this._repositoriesSortKey,visible:i},this.storageService.store("scm:view:visibleRepositories",JSON.stringify(this.previousState),m.WORKSPACE,O.MACHINE)}eventuallyFinishLoading(){this.finishLoading()}finishLoading(){this.didFinishLoading||(this.didFinishLoading=!0)}dispose(){this.disposables.dispose(),this._onDidChangeRepositories.dispose(),this._onDidSetVisibleRepositories.dispose()}};c([b(5e3)],h.prototype,"eventuallyFinishLoading",1),h=c([d(0,L),d(1,w),d(2,P),d(3,V),d(4,K),d(5,F),d(6,U)],h);export{T as RepositoryContextKeys,h as SCMViewService};
