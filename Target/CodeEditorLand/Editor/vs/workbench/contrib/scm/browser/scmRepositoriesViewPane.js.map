{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/scm/browser/scmRepositoriesViewPane.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/scm.css\";\nimport { $, append } from \"../../../../base/browser/dom.js\";\nimport type {\n\tIListContextMenuEvent,\n\tIListEvent,\n\tIListVirtualDelegate,\n} from \"../../../../base/browser/ui/list/list.js\";\nimport { Orientation } from \"../../../../base/browser/ui/sash/sash.js\";\nimport { Event } from \"../../../../base/common/event.js\";\nimport { Iterable } from \"../../../../base/common/iterator.js\";\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { MenuId } from \"../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextMenuService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { WorkbenchList } from \"../../../../platform/list/browser/listService.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport {\n\ttype IViewPaneOptions,\n\tViewPane,\n} from \"../../../browser/parts/views/viewPane.js\";\nimport { IViewDescriptorService } from \"../../../common/views.js\";\nimport { type ISCMRepository, ISCMViewService } from \"../common/scm.js\";\nimport {\n\tRepositoryActionRunner,\n\tRepositoryRenderer,\n} from \"./scmRepositoryRenderer.js\";\nimport {\n\tcollectContextMenuActions,\n\tgetActionViewItemProvider,\n} from \"./util.js\";\n\nclass ListDelegate implements IListVirtualDelegate<ISCMRepository> {\n\tgetHeight(): number {\n\t\treturn 22;\n\t}\n\n\tgetTemplateId(): string {\n\t\treturn RepositoryRenderer.TEMPLATE_ID;\n\t}\n}\n\nexport class SCMRepositoriesViewPane extends ViewPane {\n\tprivate list!: WorkbenchList<ISCMRepository>;\n\tprivate readonly disposables = new DisposableStore();\n\n\tconstructor(\n\t\toptions: IViewPaneOptions,\n\t\t@ISCMViewService protected scmViewService: ISCMViewService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IHoverService hoverService: IHoverService\n\t) {\n\t\tsuper({ ...options, titleMenuId: MenuId.SCMSourceControlTitle }, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService, hoverService);\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tconst listContainer = append(\n\t\t\tcontainer,\n\t\t\t$(\".scm-view.scm-repositories-view\"),\n\t\t);\n\n\t\tconst updateProviderCountVisibility = () => {\n\t\t\tconst value = this.configurationService.getValue<\n\t\t\t\t\"hidden\" | \"auto\" | \"visible\"\n\t\t\t>(\"scm.providerCountBadge\");\n\t\t\tlistContainer.classList.toggle(\n\t\t\t\t\"hide-provider-counts\",\n\t\t\t\tvalue === \"hidden\",\n\t\t\t);\n\t\t\tlistContainer.classList.toggle(\n\t\t\t\t\"auto-provider-counts\",\n\t\t\t\tvalue === \"auto\",\n\t\t\t);\n\t\t};\n\t\tthis._register(\n\t\t\tEvent.filter(\n\t\t\t\tthis.configurationService.onDidChangeConfiguration,\n\t\t\t\t(e) => e.affectsConfiguration(\"scm.providerCountBadge\"),\n\t\t\t\tthis.disposables,\n\t\t\t)(updateProviderCountVisibility),\n\t\t);\n\t\tupdateProviderCountVisibility();\n\n\t\tconst delegate = new ListDelegate();\n\t\tconst renderer = this.instantiationService.createInstance(\n\t\t\tRepositoryRenderer,\n\t\t\tMenuId.SCMSourceControlInline,\n\t\t\tgetActionViewItemProvider(this.instantiationService),\n\t\t);\n\t\tconst identityProvider = {\n\t\t\tgetId: (r: ISCMRepository) => r.provider.id,\n\t\t};\n\n\t\tthis.list = this.instantiationService.createInstance(\n\t\t\tWorkbenchList,\n\t\t\t`SCM Main`,\n\t\t\tlistContainer,\n\t\t\tdelegate,\n\t\t\t[renderer],\n\t\t\t{\n\t\t\t\tidentityProvider,\n\t\t\t\thorizontalScrolling: false,\n\t\t\t\toverrideStyles:\n\t\t\t\t\tthis.getLocationBasedColors().listOverrideStyles,\n\t\t\t\taccessibilityProvider: {\n\t\t\t\t\tgetAriaLabel(r: ISCMRepository) {\n\t\t\t\t\t\treturn r.provider.label;\n\t\t\t\t\t},\n\t\t\t\t\tgetWidgetAriaLabel() {\n\t\t\t\t\t\treturn localize(\"scm\", \"Source Control Repositories\");\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t) as WorkbenchList<ISCMRepository>;\n\n\t\tthis._register(this.list);\n\t\tthis._register(\n\t\t\tthis.list.onDidChangeSelection(this.onListSelectionChange, this),\n\t\t);\n\t\tthis._register(this.list.onContextMenu(this.onListContextMenu, this));\n\n\t\tthis._register(\n\t\t\tthis.scmViewService.onDidChangeRepositories(\n\t\t\t\tthis.onDidChangeRepositories,\n\t\t\t\tthis,\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.scmViewService.onDidChangeVisibleRepositories(\n\t\t\t\tthis.updateListSelection,\n\t\t\t\tthis,\n\t\t\t),\n\t\t);\n\n\t\tif (this.orientation === Orientation.VERTICAL) {\n\t\t\tthis._register(\n\t\t\t\tthis.configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\t\tif (e.affectsConfiguration(\"scm.repositories.visible\")) {\n\t\t\t\t\t\tthis.updateBodySize();\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\tthis.onDidChangeRepositories();\n\t\tthis.updateListSelection();\n\t}\n\n\tprivate onDidChangeRepositories(): void {\n\t\tthis.list.splice(0, this.list.length, this.scmViewService.repositories);\n\t\tthis.updateBodySize();\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\t\tthis.list.domFocus();\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\t\tthis.list.layout(height, width);\n\t}\n\n\tprivate updateBodySize(): void {\n\t\tif (this.orientation === Orientation.HORIZONTAL) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst visibleCount = this.configurationService.getValue<number>(\n\t\t\t\"scm.repositories.visible\",\n\t\t);\n\t\tconst empty = this.list.length === 0;\n\t\tconst size = Math.min(this.list.length, visibleCount) * 22;\n\n\t\tthis.minimumBodySize = visibleCount === 0 ? 22 : size;\n\t\tthis.maximumBodySize =\n\t\t\tvisibleCount === 0\n\t\t\t\t? Number.POSITIVE_INFINITY\n\t\t\t\t: empty\n\t\t\t\t\t? Number.POSITIVE_INFINITY\n\t\t\t\t\t: size;\n\t}\n\n\tprivate onListContextMenu(e: IListContextMenuEvent<ISCMRepository>): void {\n\t\tif (!e.element) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = e.element.provider;\n\t\tconst menus = this.scmViewService.menus.getRepositoryMenus(provider);\n\t\tconst menu = menus.repositoryContextMenu;\n\t\tconst actions = collectContextMenuActions(menu);\n\n\t\tconst actionRunner = this._register(\n\t\t\tnew RepositoryActionRunner(() => {\n\t\t\t\treturn this.list.getSelectedElements();\n\t\t\t}),\n\t\t);\n\t\tactionRunner.onWillRun(() => this.list.domFocus());\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tactionRunner,\n\t\t\tgetAnchor: () => e.anchor,\n\t\t\tgetActions: () => actions,\n\t\t\tgetActionsContext: () => provider,\n\t\t});\n\t}\n\n\tprivate onListSelectionChange(e: IListEvent<ISCMRepository>): void {\n\t\tif (e.browserEvent && e.elements.length > 0) {\n\t\t\tconst scrollTop = this.list.scrollTop;\n\t\t\tthis.scmViewService.visibleRepositories = e.elements;\n\t\t\tthis.list.scrollTop = scrollTop;\n\t\t}\n\t}\n\n\tprivate updateListSelection(): void {\n\t\tconst oldSelection = this.list.getSelection();\n\t\tconst oldSet = new Set(\n\t\t\tIterable.map(oldSelection, (i) => this.list.element(i)),\n\t\t);\n\t\tconst set = new Set(this.scmViewService.visibleRepositories);\n\t\tconst added = new Set(Iterable.filter(set, (r) => !oldSet.has(r)));\n\t\tconst removed = new Set(Iterable.filter(oldSet, (r) => !set.has(r)));\n\n\t\tif (added.size === 0 && removed.size === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selection = oldSelection.filter(\n\t\t\t(i) => !removed.has(this.list.element(i)),\n\t\t);\n\n\t\tfor (let i = 0; i < this.list.length; i++) {\n\t\t\tif (added.has(this.list.element(i))) {\n\t\t\t\tselection.push(i);\n\t\t\t}\n\t\t}\n\n\t\tthis.list.setSelection(selection);\n\n\t\tif (\n\t\t\tselection.length > 0 &&\n\t\t\tselection.indexOf(this.list.getFocus()[0]) === -1\n\t\t) {\n\t\t\tthis.list.setAnchor(selection[0]);\n\t\t\tthis.list.setFocus([selection[0]]);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.disposables.dispose();\n\t\tsuper.dispose();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
