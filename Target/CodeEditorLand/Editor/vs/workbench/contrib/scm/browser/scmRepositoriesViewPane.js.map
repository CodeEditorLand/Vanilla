{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/scm/browser/scmRepositoriesViewPane.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './media/scm.css';\nimport { localize } from '../../../../nls.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { ViewPane, IViewPaneOptions } from '../../../browser/parts/views/viewPane.js';\nimport { append, $ } from '../../../../base/browser/dom.js';\nimport { IListVirtualDelegate, IListContextMenuEvent, IListEvent } from '../../../../base/browser/ui/list/list.js';\nimport { ISCMRepository, ISCMViewService } from '../common/scm.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { WorkbenchList } from '../../../../platform/list/browser/listService.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IViewDescriptorService } from '../../../common/views.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { RepositoryActionRunner, RepositoryRenderer } from './scmRepositoryRenderer.js';\nimport { collectContextMenuActions, getActionViewItemProvider } from './util.js';\nimport { Orientation } from '../../../../base/browser/ui/sash/sash.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\n\nclass ListDelegate implements IListVirtualDelegate<ISCMRepository> {\n\n\tgetHeight(): number {\n\t\treturn 22;\n\t}\n\n\tgetTemplateId(): string {\n\t\treturn RepositoryRenderer.TEMPLATE_ID;\n\t}\n}\n\nexport class SCMRepositoriesViewPane extends ViewPane {\n\n\tprivate list!: WorkbenchList<ISCMRepository>;\n\tprivate readonly disposables = new DisposableStore();\n\n\tconstructor(\n\t\toptions: IViewPaneOptions,\n\t\t@ISCMViewService protected scmViewService: ISCMViewService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IHoverService hoverService: IHoverService\n\t) {\n\t\tsuper({ ...options, titleMenuId: MenuId.SCMSourceControlTitle }, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService, hoverService);\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tconst listContainer = append(container, $('.scm-view.scm-repositories-view'));\n\n\t\tconst updateProviderCountVisibility = () => {\n\t\t\tconst value = this.configurationService.getValue<'hidden' | 'auto' | 'visible'>('scm.providerCountBadge');\n\t\t\tlistContainer.classList.toggle('hide-provider-counts', value === 'hidden');\n\t\t\tlistContainer.classList.toggle('auto-provider-counts', value === 'auto');\n\t\t};\n\t\tthis._register(Event.filter(this.configurationService.onDidChangeConfiguration, e => e.affectsConfiguration('scm.providerCountBadge'), this.disposables)(updateProviderCountVisibility));\n\t\tupdateProviderCountVisibility();\n\n\t\tconst delegate = new ListDelegate();\n\t\tconst renderer = this.instantiationService.createInstance(RepositoryRenderer, MenuId.SCMSourceControlInline, getActionViewItemProvider(this.instantiationService));\n\t\tconst identityProvider = { getId: (r: ISCMRepository) => r.provider.id };\n\n\t\tthis.list = this.instantiationService.createInstance(WorkbenchList, `SCM Main`, listContainer, delegate, [renderer], {\n\t\t\tidentityProvider,\n\t\t\thorizontalScrolling: false,\n\t\t\toverrideStyles: this.getLocationBasedColors().listOverrideStyles,\n\t\t\taccessibilityProvider: {\n\t\t\t\tgetAriaLabel(r: ISCMRepository) {\n\t\t\t\t\treturn r.provider.label;\n\t\t\t\t},\n\t\t\t\tgetWidgetAriaLabel() {\n\t\t\t\t\treturn localize('scm', \"Source Control Repositories\");\n\t\t\t\t}\n\t\t\t}\n\t\t}) as WorkbenchList<ISCMRepository>;\n\n\t\tthis._register(this.list);\n\t\tthis._register(this.list.onDidChangeSelection(this.onListSelectionChange, this));\n\t\tthis._register(this.list.onContextMenu(this.onListContextMenu, this));\n\n\t\tthis._register(this.scmViewService.onDidChangeRepositories(this.onDidChangeRepositories, this));\n\t\tthis._register(this.scmViewService.onDidChangeVisibleRepositories(this.updateListSelection, this));\n\n\t\tif (this.orientation === Orientation.VERTICAL) {\n\t\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\t\tif (e.affectsConfiguration('scm.repositories.visible')) {\n\t\t\t\t\tthis.updateBodySize();\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tthis.onDidChangeRepositories();\n\t\tthis.updateListSelection();\n\t}\n\n\tprivate onDidChangeRepositories(): void {\n\t\tthis.list.splice(0, this.list.length, this.scmViewService.repositories);\n\t\tthis.updateBodySize();\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\t\tthis.list.domFocus();\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\t\tthis.list.layout(height, width);\n\t}\n\n\tprivate updateBodySize(): void {\n\t\tif (this.orientation === Orientation.HORIZONTAL) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst visibleCount = this.configurationService.getValue<number>('scm.repositories.visible');\n\t\tconst empty = this.list.length === 0;\n\t\tconst size = Math.min(this.list.length, visibleCount) * 22;\n\n\t\tthis.minimumBodySize = visibleCount === 0 ? 22 : size;\n\t\tthis.maximumBodySize = visibleCount === 0 ? Number.POSITIVE_INFINITY : empty ? Number.POSITIVE_INFINITY : size;\n\t}\n\n\tprivate onListContextMenu(e: IListContextMenuEvent<ISCMRepository>): void {\n\t\tif (!e.element) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = e.element.provider;\n\t\tconst menus = this.scmViewService.menus.getRepositoryMenus(provider);\n\t\tconst menu = menus.repositoryContextMenu;\n\t\tconst actions = collectContextMenuActions(menu);\n\n\t\tconst actionRunner = this._register(new RepositoryActionRunner(() => {\n\t\t\treturn this.list.getSelectedElements();\n\t\t}));\n\t\tactionRunner.onWillRun(() => this.list.domFocus());\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tactionRunner,\n\t\t\tgetAnchor: () => e.anchor,\n\t\t\tgetActions: () => actions,\n\t\t\tgetActionsContext: () => provider\n\t\t});\n\t}\n\n\tprivate onListSelectionChange(e: IListEvent<ISCMRepository>): void {\n\t\tif (e.browserEvent && e.elements.length > 0) {\n\t\t\tconst scrollTop = this.list.scrollTop;\n\t\t\tthis.scmViewService.visibleRepositories = e.elements;\n\t\t\tthis.list.scrollTop = scrollTop;\n\t\t}\n\t}\n\n\tprivate updateListSelection(): void {\n\t\tconst oldSelection = this.list.getSelection();\n\t\tconst oldSet = new Set(Iterable.map(oldSelection, i => this.list.element(i)));\n\t\tconst set = new Set(this.scmViewService.visibleRepositories);\n\t\tconst added = new Set(Iterable.filter(set, r => !oldSet.has(r)));\n\t\tconst removed = new Set(Iterable.filter(oldSet, r => !set.has(r)));\n\n\t\tif (added.size === 0 && removed.size === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selection = oldSelection\n\t\t\t.filter(i => !removed.has(this.list.element(i)));\n\n\t\tfor (let i = 0; i < this.list.length; i++) {\n\t\t\tif (added.has(this.list.element(i))) {\n\t\t\t\tselection.push(i);\n\t\t\t}\n\t\t}\n\n\t\tthis.list.setSelection(selection);\n\n\t\tif (selection.length > 0 && selection.indexOf(this.list.getFocus()[0]) === -1) {\n\t\t\tthis.list.setAnchor(selection[0]);\n\t\t\tthis.list.setFocus([selection[0]]);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.disposables.dispose();\n\t\tsuper.dispose();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
