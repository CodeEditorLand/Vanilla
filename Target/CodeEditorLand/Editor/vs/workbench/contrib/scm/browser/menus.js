var R=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var p=(r,e,t,s)=>{for(var o=s>1?void 0:s?x(e,t):e,c=r.length-1,h;c>=0;c--)(h=r[c])&&(o=(s?h(e,t,o):h(o))||o);return s&&o&&R(e,t,o),o},n=(r,e)=>(t,s)=>e(t,s,r);import"../../../../base/common/actions.js";import{equals as m}from"../../../../base/common/arrays.js";import{Emitter as f}from"../../../../base/common/event.js";import{DisposableStore as d,dispose as g}from"../../../../base/common/lifecycle.js";import"./media/scm.css";import{localize as G}from"../../../../nls.js";import{createAndFillInActionBarActions as _}from"../../../../platform/actions/browser/menuEntryActionViewItem.js";import{IMenuService as v,MenuId as i,MenuRegistry as M}from"../../../../platform/actions/common/actions.js";import{IContextKeyService as I}from"../../../../platform/contextkey/common/contextkey.js";import{IInstantiationService as S}from"../../../../platform/instantiation/common/instantiation.js";import{ServiceCollection as b}from"../../../../platform/instantiation/common/serviceCollection.js";import{ISCMService as D}from"../common/scm.js";function C(r,e){return r.id===e.id}const y=new d;M.onDidChangeMenu(r=>{if(r.has(i.SCMTitle)){y.clear();for(const e of M.getMenuItems(i.SCMTitle))y.add(M.appendMenuItem(i.SCMSourceControlInline,e))}});let u=class{_actions=[];get actions(){return this._actions}_secondaryActions=[];get secondaryActions(){return this._secondaryActions}_onDidChangeTitle=new f;onDidChangeTitle=this._onDidChangeTitle.event;menu;disposables=new d;constructor(e,t){this.menu=e.createMenu(i.SCMTitle,t),this.disposables.add(this.menu),this.menu.onDidChange(this.updateTitleActions,this,this.disposables),this.updateTitleActions()}updateTitleActions(){const e=[],t=[];_(this.menu,{shouldForwardArgs:!0},{primary:e,secondary:t}),!(m(e,this._actions,C)&&m(t,this._secondaryActions,C))&&(this._actions=e,this._secondaryActions=t,this._onDidChangeTitle.fire())}dispose(){this.disposables.dispose()}};u=p([n(0,v),n(1,I)],u);class A{constructor(e,t){this.contextKeyService=e;this.menuService=t}_resourceGroupMenu;get resourceGroupMenu(){return this._resourceGroupMenu||(this._resourceGroupMenu=this.menuService.createMenu(i.SCMResourceGroupContext,this.contextKeyService)),this._resourceGroupMenu}_resourceFolderMenu;get resourceFolderMenu(){return this._resourceFolderMenu||(this._resourceFolderMenu=this.menuService.createMenu(i.SCMResourceFolderContext,this.contextKeyService)),this._resourceFolderMenu}genericResourceMenu;contextualResourceMenus;getResourceMenu(e){if(typeof e.contextValue>"u")return this.genericResourceMenu||(this.genericResourceMenu=this.menuService.createMenu(i.SCMResourceContext,this.contextKeyService)),this.genericResourceMenu;this.contextualResourceMenus||(this.contextualResourceMenus=new Map);let t=this.contextualResourceMenus.get(e.contextValue);if(!t){const s=this.contextKeyService.createOverlay([["scmResourceState",e.contextValue]]),o=this.menuService.createMenu(i.SCMResourceContext,s);t={menu:o,dispose(){o.dispose()}},this.contextualResourceMenus.set(e.contextValue,t)}return t.menu}dispose(){this._resourceGroupMenu?.dispose(),this._resourceFolderMenu?.dispose(),this.genericResourceMenu?.dispose(),this.contextualResourceMenus&&(g(this.contextualResourceMenus.values()),this.contextualResourceMenus.clear(),this.contextualResourceMenus=void 0)}}let a=class{constructor(e,t,s,o){this.provider=e;this.menuService=o;this.contextKeyService=t.createOverlay([["scmProvider",e.contextValue],["scmProviderRootUri",e.rootUri?.toString()],["scmProviderHasRootUri",!!e.rootUri]]);const c=new b([I,this.contextKeyService]);s=s.createChild(c,this.disposables),this.titleMenu=s.createInstance(u),this.disposables.add(this.titleMenu),this.repositoryMenu=o.createMenu(i.SCMSourceControlInline,this.contextKeyService),this.disposables.add(this.repositoryMenu),e.onDidChangeResourceGroups(this.onDidChangeResourceGroups,this,this.disposables),this.onDidChangeResourceGroups()}contextKeyService;titleMenu;repositoryMenu;resourceGroupMenusItems=new Map;_repositoryContextMenu;get repositoryContextMenu(){return this._repositoryContextMenu||(this._repositoryContextMenu=this.menuService.createMenu(i.SCMSourceControl,this.contextKeyService),this.disposables.add(this._repositoryContextMenu)),this._repositoryContextMenu}disposables=new d;getResourceGroupMenu(e){return this.getOrCreateResourceGroupMenusItem(e).resourceGroupMenu}getResourceMenu(e){return this.getOrCreateResourceGroupMenusItem(e.resourceGroup).getResourceMenu(e)}getResourceFolderMenu(e){return this.getOrCreateResourceGroupMenusItem(e).resourceFolderMenu}getOrCreateResourceGroupMenusItem(e){let t=this.resourceGroupMenusItems.get(e);if(!t){const s=this.contextKeyService.createOverlay([["scmResourceGroup",e.id],["multiDiffEditorEnableViewChanges",e.multiDiffEditorEnableViewChanges]]);t=new A(s,this.menuService),this.resourceGroupMenusItems.set(e,t)}return t}onDidChangeResourceGroups(){for(const e of this.resourceGroupMenusItems.keys())this.provider.groups.includes(e)||(this.resourceGroupMenusItems.get(e)?.dispose(),this.resourceGroupMenusItems.delete(e))}dispose(){this.disposables.dispose(),this.resourceGroupMenusItems.forEach(e=>e.dispose())}};a=p([n(1,I),n(2,S),n(3,v)],a);let l=class{constructor(e,t){this.instantiationService=t;this.titleMenu=t.createInstance(u),e.onDidRemoveRepository(this.onDidRemoveRepository,this,this.disposables)}titleMenu;disposables=new d;menus=new Map;onDidRemoveRepository(e){this.menus.get(e.provider)?.dispose(),this.menus.delete(e.provider)}getRepositoryMenus(e){let t=this.menus.get(e);if(!t){const s=this.instantiationService.createInstance(a,e);t={menus:s,dispose:()=>{s.dispose(),this.menus.delete(e)}},this.menus.set(e,t)}return t.menus}dispose(){this.disposables.dispose()}};l=p([n(0,D),n(1,S)],l),M.appendMenuItem(i.SCMResourceContext,{title:G("miShare","Share"),submenu:i.SCMResourceContextShare,group:"45_share",order:3});export{l as SCMMenus,a as SCMRepositoryMenus,u as SCMTitleMenu};
