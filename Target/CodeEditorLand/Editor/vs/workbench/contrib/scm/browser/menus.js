var x=Object.defineProperty;var R=Object.getOwnPropertyDescriptor;var a=(i,e,t,r)=>{for(var o=r>1?void 0:r?R(e,t):e,c=i.length-1,I;c>=0;c--)(I=i[c])&&(o=(r?I(e,t,o):I(o))||o);return r&&o&&x(e,t,o),o},n=(i,e)=>(t,r)=>e(t,r,i);import"../../../../../vs/base/common/actions.js";import{equals as C}from"../../../../../vs/base/common/arrays.js";import{Emitter as f}from"../../../../../vs/base/common/event.js";import{DisposableStore as M,dispose as G}from"../../../../../vs/base/common/lifecycle.js";import"vs/css!./media/scm";import{localize as _}from"../../../../../vs/nls.js";import{createAndFillInActionBarActions as H}from"../../../../../vs/platform/actions/browser/menuEntryActionViewItem.js";import{IMenuService as v,MenuId as s,MenuRegistry as l}from"../../../../../vs/platform/actions/common/actions.js";import{IContextKeyService as h}from"../../../../../vs/platform/contextkey/common/contextkey.js";import{IInstantiationService as y}from"../../../../../vs/platform/instantiation/common/instantiation.js";import{ServiceCollection as b}from"../../../../../vs/platform/instantiation/common/serviceCollection.js";import"../../../../../vs/workbench/contrib/scm/common/history.js";import{ISCMService as K}from"../../../../../vs/workbench/contrib/scm/common/scm.js";function S(i,e){return i.id===e.id}const g=new M;l.onDidChangeMenu(i=>{if(i.has(s.SCMTitle)){g.clear();for(const e of l.getMenuItems(s.SCMTitle))g.add(l.appendMenuItem(s.SCMSourceControlInline,e))}});let u=class{_actions=[];get actions(){return this._actions}_secondaryActions=[];get secondaryActions(){return this._secondaryActions}_onDidChangeTitle=new f;onDidChangeTitle=this._onDidChangeTitle.event;menu;disposables=new M;constructor(e,t){this.menu=e.createMenu(s.SCMTitle,t),this.disposables.add(this.menu),this.menu.onDidChange(this.updateTitleActions,this,this.disposables),this.updateTitleActions()}updateTitleActions(){const e=[],t=[];H(this.menu,{shouldForwardArgs:!0},{primary:e,secondary:t}),!(C(e,this._actions,S)&&C(t,this._secondaryActions,S))&&(this._actions=e,this._secondaryActions=t,this._onDidChangeTitle.fire())}dispose(){this.disposables.dispose()}};u=a([n(0,v),n(1,h)],u);class A{constructor(e,t){this.contextKeyService=e;this.menuService=t}_resourceGroupMenu;get resourceGroupMenu(){return this._resourceGroupMenu||(this._resourceGroupMenu=this.menuService.createMenu(s.SCMResourceGroupContext,this.contextKeyService)),this._resourceGroupMenu}_resourceFolderMenu;get resourceFolderMenu(){return this._resourceFolderMenu||(this._resourceFolderMenu=this.menuService.createMenu(s.SCMResourceFolderContext,this.contextKeyService)),this._resourceFolderMenu}genericResourceMenu;contextualResourceMenus;getResourceMenu(e){if(typeof e.contextValue>"u")return this.genericResourceMenu||(this.genericResourceMenu=this.menuService.createMenu(s.SCMResourceContext,this.contextKeyService)),this.genericResourceMenu;this.contextualResourceMenus||(this.contextualResourceMenus=new Map);let t=this.contextualResourceMenus.get(e.contextValue);if(!t){const r=this.contextKeyService.createOverlay([["scmResourceState",e.contextValue]]),o=this.menuService.createMenu(s.SCMResourceContext,r);t={menu:o,dispose(){o.dispose()}},this.contextualResourceMenus.set(e.contextValue,t)}return t.menu}dispose(){this._resourceGroupMenu?.dispose(),this._resourceFolderMenu?.dispose(),this.genericResourceMenu?.dispose(),this.contextualResourceMenus&&(G(this.contextualResourceMenus.values()),this.contextualResourceMenus.clear(),this.contextualResourceMenus=void 0)}}let p=class{constructor(e,t,r,o){this.provider=e;this.menuService=o;this.contextKeyService=t.createOverlay([["scmProvider",e.contextValue],["scmProviderRootUri",e.rootUri?.toString()],["scmProviderHasRootUri",!!e.rootUri]]);const c=new b([h,this.contextKeyService]);r=r.createChild(c,this.disposables),this.titleMenu=r.createInstance(u),this.disposables.add(this.titleMenu),this.repositoryMenu=o.createMenu(s.SCMSourceControlInline,this.contextKeyService),this.disposables.add(this.repositoryMenu),e.onDidChangeResourceGroups(this.onDidChangeResourceGroups,this,this.disposables),this.onDidChangeResourceGroups()}contextKeyService;titleMenu;repositoryMenu;resourceGroupMenusItems=new Map;_repositoryContextMenu;get repositoryContextMenu(){return this._repositoryContextMenu||(this._repositoryContextMenu=this.menuService.createMenu(s.SCMSourceControl,this.contextKeyService),this.disposables.add(this._repositoryContextMenu)),this._repositoryContextMenu}_historyProviderMenu;get historyProviderMenu(){return this.provider.historyProvider.get()&&!this._historyProviderMenu&&(this._historyProviderMenu=new d(this.contextKeyService,this.menuService),this.disposables.add(this._historyProviderMenu)),this._historyProviderMenu}disposables=new M;getResourceGroupMenu(e){return this.getOrCreateResourceGroupMenusItem(e).resourceGroupMenu}getResourceMenu(e){return this.getOrCreateResourceGroupMenusItem(e.resourceGroup).getResourceMenu(e)}getResourceFolderMenu(e){return this.getOrCreateResourceGroupMenusItem(e).resourceFolderMenu}getOrCreateResourceGroupMenusItem(e){let t=this.resourceGroupMenusItems.get(e);if(!t){const r=this.contextKeyService.createOverlay([["scmResourceGroup",e.id],["multiDiffEditorEnableViewChanges",e.multiDiffEditorEnableViewChanges]]);t=new A(r,this.menuService),this.resourceGroupMenusItems.set(e,t)}return t}onDidChangeResourceGroups(){for(const e of this.resourceGroupMenusItems.keys())this.provider.groups.includes(e)||(this.resourceGroupMenusItems.get(e)?.dispose(),this.resourceGroupMenusItems.delete(e))}dispose(){this.disposables.dispose(),this.resourceGroupMenusItems.forEach(e=>e.dispose())}};p=a([n(1,h),n(2,y),n(3,v)],p);let d=class{constructor(e,t){this.contextKeyService=e;this.menuService=t}historyItemMenus=new Map;historyItemMenus2=new Map;disposables=new M;getHistoryItemMenu(e){return this.getOrCreateHistoryItemMenu(e)}getHistoryItemMenu2(e){return this.getOrCreateHistoryItemMenu2(e)}getHistoryItemGroupMenu(e){return e.direction==="incoming"?this.menuService.createMenu(s.SCMIncomingChanges,this.contextKeyService):this.getOutgoingHistoryItemGroupMenu(s.SCMOutgoingChanges,e)}getHistoryItemGroupContextMenu(e){return e.direction==="incoming"?this.menuService.createMenu(s.SCMIncomingChangesContext,this.contextKeyService):this.getOutgoingHistoryItemGroupMenu(s.SCMOutgoingChangesContext,e)}getOrCreateHistoryItemMenu(e){let t=this.historyItemMenus.get(e);if(!t){let r;e.historyItemGroup.direction==="incoming"?r=e.type==="allChanges"?s.SCMIncomingChangesAllChangesContext:s.SCMIncomingChangesHistoryItemContext:r=e.type==="allChanges"?s.SCMOutgoingChangesAllChangesContext:s.SCMOutgoingChangesHistoryItemContext;const o=this.contextKeyService.createOverlay([["scmHistoryItemFileCount",e.statistics?.files??0]]);t=this.menuService.createMenu(r,o),this.historyItemMenus.set(e,t)}return t}getOrCreateHistoryItemMenu2(e){let t=this.historyItemMenus2.get(e);return t||(t=this.menuService.createMenu(s.SCMChangesContext,this.contextKeyService),this.historyItemMenus2.set(e,t)),t}getOutgoingHistoryItemGroupMenu(e,t){const r=this.contextKeyService.createOverlay([["scmHistoryItemGroupHasRemote",!!t.repository.provider.historyProvider.get()?.currentHistoryItemGroup.get()?.remote]]);return this.menuService.createMenu(e,r)}dispose(){this.disposables.dispose()}};d=a([n(0,h),n(1,v)],d);let m=class{constructor(e,t){this.instantiationService=t;this.titleMenu=t.createInstance(u),e.onDidRemoveRepository(this.onDidRemoveRepository,this,this.disposables)}titleMenu;disposables=new M;menus=new Map;onDidRemoveRepository(e){this.menus.get(e.provider)?.dispose(),this.menus.delete(e.provider)}getRepositoryMenus(e){let t=this.menus.get(e);if(!t){const r=this.instantiationService.createInstance(p,e);t={menus:r,dispose:()=>{r.dispose(),this.menus.delete(e)}},this.menus.set(e,t)}return t.menus}dispose(){this.disposables.dispose()}};m=a([n(0,K),n(1,y)],m),l.appendMenuItem(s.SCMResourceContext,{title:_("miShare","Share"),submenu:s.SCMResourceContextShare,group:"45_share",order:3});export{d as SCMHistoryProviderMenus,m as SCMMenus,p as SCMRepositoryMenus,u as SCMTitleMenu};
