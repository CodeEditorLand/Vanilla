{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/scm/browser/scmViewPane.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './media/scm.css';\nimport { Event, Emitter } from '../../../../base/common/event.js';\nimport { basename, dirname } from '../../../../base/common/resources.js';\nimport { IDisposable, Disposable, DisposableStore, combinedDisposable, dispose, toDisposable, MutableDisposable, DisposableMap } from '../../../../base/common/lifecycle.js';\nimport { ViewPane, IViewPaneOptions, ViewAction } from '../../../browser/parts/views/viewPane.js';\nimport { append, $, Dimension, asCSSUrl, trackFocus, clearNode, isPointerEvent, isActiveElement } from '../../../../base/browser/dom.js';\nimport { IListVirtualDelegate, IIdentityProvider } from '../../../../base/browser/ui/list/list.js';\nimport { ISCMResourceGroup, ISCMResource, InputValidationType, ISCMRepository, ISCMInput, IInputValidation, ISCMViewService, ISCMViewVisibleRepositoryChangeEvent, ISCMService, SCMInputChangeReason, VIEW_PANE_ID, ISCMActionButton, ISCMActionButtonDescriptor, ISCMRepositorySortKey, ISCMInputValueProviderContext } from '../common/scm.js';\nimport { ResourceLabels, IResourceLabel, IFileLabelOptions } from '../../../browser/labels.js';\nimport { CountBadge } from '../../../../base/browser/ui/countBadge/countBadge.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IContextViewService, IContextMenuService, IOpenContextView } from '../../../../platform/contextview/browser/contextView.js';\nimport { IContextKeyService, IContextKey, ContextKeyExpr, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { MenuItemAction, IMenuService, registerAction2, MenuId, IAction2Options, MenuRegistry, Action2, IMenu } from '../../../../platform/actions/common/actions.js';\nimport { IAction, ActionRunner, Action, Separator, IActionRunner } from '../../../../base/common/actions.js';\nimport { ActionBar, IActionViewItemProvider } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { IThemeService, IFileIconTheme } from '../../../../platform/theme/common/themeService.js';\nimport { isSCMResource, isSCMResourceGroup, connectPrimaryMenuToInlineActionBar, isSCMRepository, isSCMInput, collectContextMenuActions, getActionViewItemProvider, isSCMActionButton, isSCMViewService, isSCMResourceNode } from './util.js';\nimport { WorkbenchCompressibleAsyncDataTree, IOpenEvent } from '../../../../platform/list/browser/listService.js';\nimport { IConfigurationService, ConfigurationTarget } from '../../../../platform/configuration/common/configuration.js';\nimport { disposableTimeout, Sequencer, ThrottledDelayer, Throttler } from '../../../../base/common/async.js';\nimport { ITreeNode, ITreeFilter, ITreeSorter, ITreeContextMenuEvent, ITreeDragAndDrop, ITreeDragOverReaction, IAsyncDataSource } from '../../../../base/browser/ui/tree/tree.js';\nimport { ResourceTree, IResourceNode } from '../../../../base/common/resourceTree.js';\nimport { ICompressibleTreeRenderer, ICompressibleKeyboardNavigationLabelProvider } from '../../../../base/browser/ui/tree/objectTree.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { ICompressedTreeNode } from '../../../../base/browser/ui/tree/compressedObjectTreeModel.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { FileKind } from '../../../../platform/files/common/files.js';\nimport { compareFileNames, comparePaths } from '../../../../base/common/comparers.js';\nimport { FuzzyScore, createMatches, IMatch } from '../../../../base/common/filters.js';\nimport { IViewDescriptorService } from '../../../common/views.js';\nimport { localize } from '../../../../nls.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../platform/storage/common/storage.js';\nimport { EditorResourceAccessor, SideBySideEditor } from '../../../common/editor.js';\nimport { CodeEditorWidget, ICodeEditorWidgetOptions } from '../../../../editor/browser/widget/codeEditor/codeEditorWidget.js';\nimport { IEditorConstructionOptions } from '../../../../editor/browser/config/editorConfiguration.js';\nimport { getSimpleEditorOptions, setupSimpleEditorSelectionStyling } from '../../codeEditor/browser/simpleEditorOptions.js';\nimport { IModelService } from '../../../../editor/common/services/model.js';\nimport { EditorExtensionsRegistry } from '../../../../editor/browser/editorExtensions.js';\nimport { MenuPreventer } from '../../codeEditor/browser/menuPreventer.js';\nimport { SelectionClipboardContributionID } from '../../codeEditor/browser/selectionClipboard.js';\nimport { EditorDictation } from '../../codeEditor/browser/dictation/editorDictation.js';\nimport { ContextMenuController } from '../../../../editor/contrib/contextmenu/browser/contextmenu.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { compare, format } from '../../../../base/common/strings.js';\nimport { SuggestController } from '../../../../editor/contrib/suggest/browser/suggestController.js';\nimport { SnippetController2 } from '../../../../editor/contrib/snippet/browser/snippetController2.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nimport { ColorDetector } from '../../../../editor/contrib/colorPicker/browser/colorDetector.js';\nimport { LinkDetector } from '../../../../editor/contrib/links/browser/links.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { IListAccessibilityProvider } from '../../../../base/browser/ui/list/listWidget.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { KeyCode } from '../../../../base/common/keyCodes.js';\nimport { DEFAULT_FONT_FAMILY } from '../../../../base/browser/fonts.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { AnchorAlignment } from '../../../../base/browser/ui/contextview/contextview.js';\nimport { RepositoryActionRunner, RepositoryRenderer } from './scmRepositoryRenderer.js';\nimport { ColorScheme } from '../../../../platform/theme/common/theme.js';\nimport { LabelFuzzyScore } from '../../../../base/browser/ui/tree/abstractTree.js';\nimport { Selection } from '../../../../editor/common/core/selection.js';\nimport { API_OPEN_DIFF_EDITOR_COMMAND_ID, API_OPEN_EDITOR_COMMAND_ID } from '../../../browser/parts/editor/editorCommands.js';\nimport { createActionViewItem, createAndFillInActionBarActions, createAndFillInContextMenuActions } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { MarkdownRenderer, openLinkFromMarkdown } from '../../../../editor/browser/widget/markdownRenderer/browser/markdownRenderer.js';\nimport { Button, ButtonWithDescription, ButtonWithDropdown } from '../../../../base/browser/ui/button/button.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { RepositoryContextKeys } from './scmViewService.js';\nimport { DragAndDropController } from '../../../../editor/contrib/dnd/browser/dnd.js';\nimport { CopyPasteController } from '../../../../editor/contrib/dropOrPasteInto/browser/copyPasteController.js';\nimport { DropIntoEditorController } from '../../../../editor/contrib/dropOrPasteInto/browser/dropIntoEditorController.js';\nimport { MessageController } from '../../../../editor/contrib/message/browser/messageController.js';\nimport { defaultButtonStyles, defaultCountBadgeStyles } from '../../../../platform/theme/browser/defaultStyles.js';\nimport { InlineCompletionsController } from '../../../../editor/contrib/inlineCompletions/browser/controller/inlineCompletionsController.js';\nimport { CodeActionController } from '../../../../editor/contrib/codeAction/browser/codeActionController.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { IDragAndDropData } from '../../../../base/browser/dnd.js';\nimport { fillEditorsDragData } from '../../../browser/dnd.js';\nimport { ElementsDragAndDropData, ListViewTargetSector } from '../../../../base/browser/ui/list/listView.js';\nimport { CodeDataTransfers } from '../../../../platform/dnd/browser/dnd.js';\nimport { FormatOnType } from '../../../../editor/contrib/format/browser/formatActions.js';\nimport { EditorOption, EditorOptions, IEditorOptions } from '../../../../editor/common/config/editorOptions.js';\nimport { IAsyncDataTreeViewState, ITreeCompressionDelegate } from '../../../../base/browser/ui/tree/asyncDataTree.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { EditOperation } from '../../../../editor/common/core/editOperation.js';\nimport { IMenuWorkbenchToolBarOptions, WorkbenchToolBar } from '../../../../platform/actions/browser/toolbar.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { DropdownWithPrimaryActionViewItem } from '../../../../platform/actions/browser/dropdownWithPrimaryActionViewItem.js';\nimport { clamp, rot } from '../../../../base/common/numbers.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\nimport { OpenScmGroupAction } from '../../multiDiffEditor/browser/scmMultiDiffSourceResolver.js';\nimport { ContentHoverController } from '../../../../editor/contrib/hover/browser/contentHoverController.js';\nimport { GlyphHoverController } from '../../../../editor/contrib/hover/browser/glyphHoverController.js';\nimport { ITextModel } from '../../../../editor/common/model.js';\nimport { autorun } from '../../../../base/common/observable.js';\nimport { PlaceholderTextContribution } from '../../../../editor/contrib/placeholderText/browser/placeholderTextContribution.js';\nimport { observableConfigValue } from '../../../../platform/observable/common/platformObservableUtils.js';\n\ntype TreeElement = ISCMRepository | ISCMInput | ISCMActionButton | ISCMResourceGroup | ISCMResource | IResourceNode<ISCMResource, ISCMResourceGroup>;\n\nfunction processResourceFilterData(uri: URI, filterData: FuzzyScore | LabelFuzzyScore | undefined): [IMatch[] | undefined, IMatch[] | undefined] {\n\tif (!filterData) {\n\t\treturn [undefined, undefined];\n\t}\n\n\tif (!(filterData as LabelFuzzyScore).label) {\n\t\tconst matches = createMatches(filterData as FuzzyScore);\n\t\treturn [matches, undefined];\n\t}\n\n\tconst fileName = basename(uri);\n\tconst label = (filterData as LabelFuzzyScore).label;\n\tconst pathLength = label.length - fileName.length;\n\tconst matches = createMatches((filterData as LabelFuzzyScore).score);\n\n\t// FileName match\n\tif (label === fileName) {\n\t\treturn [matches, undefined];\n\t}\n\n\t// FilePath match\n\tconst labelMatches: IMatch[] = [];\n\tconst descriptionMatches: IMatch[] = [];\n\n\tfor (const match of matches) {\n\t\tif (match.start > pathLength) {\n\t\t\t// Label match\n\t\t\tlabelMatches.push({\n\t\t\t\tstart: match.start - pathLength,\n\t\t\t\tend: match.end - pathLength\n\t\t\t});\n\t\t} else if (match.end < pathLength) {\n\t\t\t// Description match\n\t\t\tdescriptionMatches.push(match);\n\t\t} else {\n\t\t\t// Spanning match\n\t\t\tlabelMatches.push({\n\t\t\t\tstart: 0,\n\t\t\t\tend: match.end - pathLength\n\t\t\t});\n\t\t\tdescriptionMatches.push({\n\t\t\t\tstart: match.start,\n\t\t\t\tend: pathLength\n\t\t\t});\n\t\t}\n\t}\n\n\treturn [labelMatches, descriptionMatches];\n}\n\ninterface ISCMLayout {\n\theight: number | undefined;\n\twidth: number | undefined;\n\treadonly onDidChange: Event<void>;\n}\n\ninterface ActionButtonTemplate {\n\treadonly actionButton: SCMActionButton;\n\tdisposable: IDisposable;\n\treadonly templateDisposable: IDisposable;\n}\n\nexport class ActionButtonRenderer implements ICompressibleTreeRenderer<ISCMActionButton, FuzzyScore, ActionButtonTemplate> {\n\tstatic readonly DEFAULT_HEIGHT = 30;\n\n\tstatic readonly TEMPLATE_ID = 'actionButton';\n\tget templateId(): string { return ActionButtonRenderer.TEMPLATE_ID; }\n\n\tprivate actionButtons = new Map<ISCMActionButton, SCMActionButton>();\n\n\tconstructor(\n\t\t@ICommandService private commandService: ICommandService,\n\t\t@IContextMenuService private contextMenuService: IContextMenuService,\n\t\t@INotificationService private notificationService: INotificationService,\n\t) { }\n\n\trenderTemplate(container: HTMLElement): ActionButtonTemplate {\n\t\t// hack\n\t\t(container.parentElement!.parentElement!.querySelector('.monaco-tl-twistie')! as HTMLElement).classList.add('force-no-twistie');\n\n\t\t// Use default cursor & disable hover for list item\n\t\tcontainer.parentElement!.parentElement!.classList.add('cursor-default', 'force-no-hover');\n\n\t\tconst buttonContainer = append(container, $('.button-container'));\n\t\tconst actionButton = new SCMActionButton(buttonContainer, this.contextMenuService, this.commandService, this.notificationService);\n\n\t\treturn { actionButton, disposable: Disposable.None, templateDisposable: actionButton };\n\t}\n\n\trenderElement(node: ITreeNode<ISCMActionButton, FuzzyScore>, index: number, templateData: ActionButtonTemplate, height: number | undefined): void {\n\t\ttemplateData.disposable.dispose();\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst actionButton = node.element;\n\t\ttemplateData.actionButton.setButton(node.element.button);\n\n\t\t// Remember action button\n\t\tthis.actionButtons.set(actionButton, templateData.actionButton);\n\t\tdisposables.add({ dispose: () => this.actionButtons.delete(actionButton) });\n\n\t\ttemplateData.disposable = disposables;\n\t}\n\n\trenderCompressedElements(): void {\n\t\tthrow new Error('Should never happen since node is incompressible');\n\t}\n\n\tfocusActionButton(actionButton: ISCMActionButton): void {\n\t\tthis.actionButtons.get(actionButton)?.focus();\n\t}\n\n\tdisposeElement(node: ITreeNode<ISCMActionButton, FuzzyScore>, index: number, template: ActionButtonTemplate): void {\n\t\ttemplate.disposable.dispose();\n\t}\n\n\tdisposeTemplate(templateData: ActionButtonTemplate): void {\n\t\ttemplateData.disposable.dispose();\n\t\ttemplateData.templateDisposable.dispose();\n\t}\n}\n\n\nclass SCMTreeDragAndDrop implements ITreeDragAndDrop<TreeElement> {\n\tconstructor(private readonly instantiationService: IInstantiationService) { }\n\n\tgetDragURI(element: TreeElement): string | null {\n\t\tif (isSCMResource(element)) {\n\t\t\treturn element.sourceUri.toString();\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tonDragStart(data: IDragAndDropData, originalEvent: DragEvent): void {\n\t\tconst items = SCMTreeDragAndDrop.getResourcesFromDragAndDropData(data as ElementsDragAndDropData<TreeElement, TreeElement[]>);\n\t\tif (originalEvent.dataTransfer && items?.length) {\n\t\t\tthis.instantiationService.invokeFunction(accessor => fillEditorsDragData(accessor, items, originalEvent));\n\n\t\t\tconst fileResources = items.filter(s => s.scheme === Schemas.file).map(r => r.fsPath);\n\t\t\tif (fileResources.length) {\n\t\t\t\toriginalEvent.dataTransfer.setData(CodeDataTransfers.FILES, JSON.stringify(fileResources));\n\t\t\t}\n\t\t}\n\t}\n\n\tgetDragLabel(elements: TreeElement[], originalEvent: DragEvent): string | undefined {\n\t\tif (elements.length === 1) {\n\t\t\tconst element = elements[0];\n\t\t\tif (isSCMResource(element)) {\n\t\t\t\treturn basename(element.sourceUri);\n\t\t\t}\n\t\t}\n\n\t\treturn String(elements.length);\n\t}\n\n\tonDragOver(data: IDragAndDropData, targetElement: TreeElement | undefined, targetIndex: number | undefined, targetSector: ListViewTargetSector | undefined, originalEvent: DragEvent): boolean | ITreeDragOverReaction {\n\t\treturn true;\n\t}\n\n\tdrop(data: IDragAndDropData, targetElement: TreeElement | undefined, targetIndex: number | undefined, targetSector: ListViewTargetSector | undefined, originalEvent: DragEvent): void { }\n\n\tprivate static getResourcesFromDragAndDropData(data: ElementsDragAndDropData<TreeElement, TreeElement[]>): URI[] {\n\t\tconst uris: URI[] = [];\n\t\tfor (const element of [...data.context ?? [], ...data.elements]) {\n\t\t\tif (isSCMResource(element)) {\n\t\t\t\turis.push(element.sourceUri);\n\t\t\t}\n\t\t}\n\t\treturn uris;\n\t}\n\n\tdispose(): void { }\n}\n\ninterface InputTemplate {\n\treadonly inputWidget: SCMInputWidget;\n\tinputWidgetHeight: number;\n\treadonly elementDisposables: DisposableStore;\n\treadonly templateDisposable: IDisposable;\n}\n\nclass InputRenderer implements ICompressibleTreeRenderer<ISCMInput, FuzzyScore, InputTemplate> {\n\n\tstatic readonly DEFAULT_HEIGHT = 26;\n\n\tstatic readonly TEMPLATE_ID = 'input';\n\tget templateId(): string { return InputRenderer.TEMPLATE_ID; }\n\n\tprivate inputWidgets = new Map<ISCMInput, SCMInputWidget>();\n\tprivate contentHeights = new WeakMap<ISCMInput, number>();\n\tprivate editorSelections = new WeakMap<ISCMInput, Selection[]>();\n\n\tconstructor(\n\t\tprivate outerLayout: ISCMLayout,\n\t\tprivate overflowWidgetsDomNode: HTMLElement,\n\t\tprivate updateHeight: (input: ISCMInput, height: number) => void,\n\t\t@IInstantiationService private instantiationService: IInstantiationService\n\t) { }\n\n\trenderTemplate(container: HTMLElement): InputTemplate {\n\t\t// hack\n\t\t(container.parentElement!.parentElement!.querySelector('.monaco-tl-twistie')! as HTMLElement).classList.add('force-no-twistie');\n\n\t\t// Disable hover for list item\n\t\tcontainer.parentElement!.parentElement!.classList.add('force-no-hover');\n\n\t\tconst templateDisposable = new DisposableStore();\n\t\tconst inputElement = append(container, $('.scm-input'));\n\t\tconst inputWidget = this.instantiationService.createInstance(SCMInputWidget, inputElement, this.overflowWidgetsDomNode);\n\t\ttemplateDisposable.add(inputWidget);\n\n\t\treturn { inputWidget, inputWidgetHeight: InputRenderer.DEFAULT_HEIGHT, elementDisposables: new DisposableStore(), templateDisposable };\n\t}\n\n\trenderElement(node: ITreeNode<ISCMInput, FuzzyScore>, index: number, templateData: InputTemplate): void {\n\t\tconst input = node.element;\n\t\ttemplateData.inputWidget.input = input;\n\n\t\t// Remember widget\n\t\tthis.inputWidgets.set(input, templateData.inputWidget);\n\t\ttemplateData.elementDisposables.add({\n\t\t\tdispose: () => this.inputWidgets.delete(input)\n\t\t});\n\n\t\t// Widget cursor selections\n\t\tconst selections = this.editorSelections.get(input);\n\n\t\tif (selections) {\n\t\t\ttemplateData.inputWidget.selections = selections;\n\t\t}\n\n\t\ttemplateData.elementDisposables.add(toDisposable(() => {\n\t\t\tconst selections = templateData.inputWidget.selections;\n\n\t\t\tif (selections) {\n\t\t\t\tthis.editorSelections.set(input, selections);\n\t\t\t}\n\t\t}));\n\n\t\t// Reset widget height so it's recalculated\n\t\ttemplateData.inputWidgetHeight = InputRenderer.DEFAULT_HEIGHT;\n\n\t\t// Rerender the element whenever the editor content height changes\n\t\tconst onDidChangeContentHeight = () => {\n\t\t\tconst contentHeight = templateData.inputWidget.getContentHeight();\n\t\t\tthis.contentHeights.set(input, contentHeight);\n\n\t\t\tif (templateData.inputWidgetHeight !== contentHeight) {\n\t\t\t\tthis.updateHeight(input, contentHeight + 10);\n\t\t\t\ttemplateData.inputWidgetHeight = contentHeight;\n\t\t\t\ttemplateData.inputWidget.layout();\n\t\t\t}\n\t\t};\n\n\t\tconst startListeningContentHeightChange = () => {\n\t\t\ttemplateData.elementDisposables.add(templateData.inputWidget.onDidChangeContentHeight(onDidChangeContentHeight));\n\t\t\tonDidChangeContentHeight();\n\t\t};\n\n\t\t// Setup height change listener on next tick\n\t\tdisposableTimeout(startListeningContentHeightChange, 0, templateData.elementDisposables);\n\n\t\t// Layout the editor whenever the outer layout happens\n\t\tconst layoutEditor = () => templateData.inputWidget.layout();\n\t\ttemplateData.elementDisposables.add(this.outerLayout.onDidChange(layoutEditor));\n\t\tlayoutEditor();\n\t}\n\n\trenderCompressedElements(): void {\n\t\tthrow new Error('Should never happen since node is incompressible');\n\t}\n\n\tdisposeElement(group: ITreeNode<ISCMInput, FuzzyScore>, index: number, template: InputTemplate): void {\n\t\ttemplate.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: InputTemplate): void {\n\t\ttemplateData.templateDisposable.dispose();\n\t}\n\n\tgetHeight(input: ISCMInput): number {\n\t\treturn (this.contentHeights.get(input) ?? InputRenderer.DEFAULT_HEIGHT) + 10;\n\t}\n\n\tgetRenderedInputWidget(input: ISCMInput): SCMInputWidget | undefined {\n\t\treturn this.inputWidgets.get(input);\n\t}\n\n\tgetFocusedInput(): ISCMInput | undefined {\n\t\tfor (const [input, inputWidget] of this.inputWidgets) {\n\t\t\tif (inputWidget.hasFocus()) {\n\t\t\t\treturn input;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tclearValidation(): void {\n\t\tfor (const [, inputWidget] of this.inputWidgets) {\n\t\t\tinputWidget.clearValidation();\n\t\t}\n\t}\n}\n\ninterface ResourceGroupTemplate {\n\treadonly name: HTMLElement;\n\treadonly count: CountBadge;\n\treadonly actionBar: ActionBar;\n\treadonly elementDisposables: DisposableStore;\n\treadonly disposables: IDisposable;\n}\n\nclass ResourceGroupRenderer implements ICompressibleTreeRenderer<ISCMResourceGroup, FuzzyScore, ResourceGroupTemplate> {\n\n\tstatic readonly TEMPLATE_ID = 'resource group';\n\tget templateId(): string { return ResourceGroupRenderer.TEMPLATE_ID; }\n\n\tconstructor(\n\t\tprivate actionViewItemProvider: IActionViewItemProvider,\n\t\t@ISCMViewService private scmViewService: ISCMViewService\n\t) { }\n\n\trenderTemplate(container: HTMLElement): ResourceGroupTemplate {\n\t\t// hack\n\t\t(container.parentElement!.parentElement!.querySelector('.monaco-tl-twistie')! as HTMLElement).classList.add('force-twistie');\n\n\t\tconst element = append(container, $('.resource-group'));\n\t\tconst name = append(element, $('.name'));\n\t\tconst actionsContainer = append(element, $('.actions'));\n\t\tconst actionBar = new ActionBar(actionsContainer, { actionViewItemProvider: this.actionViewItemProvider });\n\t\tconst countContainer = append(element, $('.count'));\n\t\tconst count = new CountBadge(countContainer, {}, defaultCountBadgeStyles);\n\t\tconst disposables = combinedDisposable(actionBar);\n\n\t\treturn { name, count, actionBar, elementDisposables: new DisposableStore(), disposables };\n\t}\n\n\trenderElement(node: ITreeNode<ISCMResourceGroup, FuzzyScore>, index: number, template: ResourceGroupTemplate): void {\n\t\tconst group = node.element;\n\t\ttemplate.name.textContent = group.label;\n\t\ttemplate.actionBar.clear();\n\t\ttemplate.actionBar.context = group;\n\t\ttemplate.count.setCount(group.resources.length);\n\n\t\tconst menus = this.scmViewService.menus.getRepositoryMenus(group.provider);\n\t\ttemplate.elementDisposables.add(connectPrimaryMenuToInlineActionBar(menus.getResourceGroupMenu(group), template.actionBar));\n\t}\n\n\trenderCompressedElements(node: ITreeNode<ICompressedTreeNode<ISCMResourceGroup>, FuzzyScore>, index: number, templateData: ResourceGroupTemplate, height: number | undefined): void {\n\t\tthrow new Error('Should never happen since node is incompressible');\n\t}\n\n\tdisposeElement(group: ITreeNode<ISCMResourceGroup, FuzzyScore>, index: number, template: ResourceGroupTemplate): void {\n\t\ttemplate.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(template: ResourceGroupTemplate): void {\n\t\ttemplate.elementDisposables.dispose();\n\t\ttemplate.disposables.dispose();\n\t}\n}\n\ninterface ResourceTemplate {\n\telement: HTMLElement;\n\tname: HTMLElement;\n\tfileLabel: IResourceLabel;\n\tdecorationIcon: HTMLElement;\n\tactionBar: ActionBar;\n\tactionBarMenu: IMenu | undefined;\n\treadonly actionBarMenuListener: MutableDisposable<IDisposable>;\n\treadonly elementDisposables: DisposableStore;\n\treadonly disposables: IDisposable;\n}\n\ninterface RenderedResourceData {\n\treadonly tooltip: string;\n\treadonly uri: URI;\n\treadonly fileLabelOptions: Partial<IFileLabelOptions>;\n\treadonly iconResource: ISCMResource | undefined;\n}\n\nclass RepositoryPaneActionRunner extends ActionRunner {\n\n\tconstructor(private getSelectedResources: () => (ISCMResource | IResourceNode<ISCMResource, ISCMResourceGroup>)[]) {\n\t\tsuper();\n\t}\n\n\tprotected override async runAction(action: IAction, context: ISCMResource | IResourceNode<ISCMResource, ISCMResourceGroup>): Promise<any> {\n\t\tif (!(action instanceof MenuItemAction)) {\n\t\t\treturn super.runAction(action, context);\n\t\t}\n\n\t\tconst selection = this.getSelectedResources();\n\t\tconst contextIsSelected = selection.some(s => s === context);\n\t\tconst actualContext = contextIsSelected ? selection : [context];\n\t\tconst args = actualContext.map(e => ResourceTree.isResourceNode(e) ? ResourceTree.collect(e) : [e]).flat();\n\t\tawait action.run(...args);\n\t}\n}\n\nclass ResourceRenderer implements ICompressibleTreeRenderer<ISCMResource | IResourceNode<ISCMResource, ISCMResourceGroup>, FuzzyScore | LabelFuzzyScore, ResourceTemplate> {\n\n\tstatic readonly TEMPLATE_ID = 'resource';\n\tget templateId(): string { return ResourceRenderer.TEMPLATE_ID; }\n\n\tprivate readonly disposables = new DisposableStore();\n\tprivate renderedResources = new Map<ResourceTemplate, RenderedResourceData>();\n\n\tconstructor(\n\t\tprivate viewMode: () => ViewMode,\n\t\tprivate labels: ResourceLabels,\n\t\tprivate actionViewItemProvider: IActionViewItemProvider,\n\t\tprivate actionRunner: ActionRunner,\n\t\t@ILabelService private labelService: ILabelService,\n\t\t@ISCMViewService private scmViewService: ISCMViewService,\n\t\t@IThemeService private themeService: IThemeService\n\t) {\n\t\tthemeService.onDidColorThemeChange(this.onDidColorThemeChange, this, this.disposables);\n\t}\n\n\trenderTemplate(container: HTMLElement): ResourceTemplate {\n\t\tconst element = append(container, $('.resource'));\n\t\tconst name = append(element, $('.name'));\n\t\tconst fileLabel = this.labels.create(name, { supportDescriptionHighlights: true, supportHighlights: true });\n\t\tconst actionsContainer = append(fileLabel.element, $('.actions'));\n\t\tconst actionBar = new ActionBar(actionsContainer, {\n\t\t\tactionViewItemProvider: this.actionViewItemProvider,\n\t\t\tactionRunner: this.actionRunner\n\t\t});\n\n\t\tconst decorationIcon = append(element, $('.decoration-icon'));\n\t\tconst actionBarMenuListener = new MutableDisposable<IDisposable>();\n\t\tconst disposables = combinedDisposable(actionBar, fileLabel, actionBarMenuListener);\n\n\t\treturn { element, name, fileLabel, decorationIcon, actionBar, actionBarMenu: undefined, actionBarMenuListener, elementDisposables: new DisposableStore(), disposables };\n\t}\n\n\trenderElement(node: ITreeNode<ISCMResource, FuzzyScore | LabelFuzzyScore> | ITreeNode<ISCMResource | IResourceNode<ISCMResource, ISCMResourceGroup>, FuzzyScore | LabelFuzzyScore>, index: number, template: ResourceTemplate): void {\n\t\tconst resourceOrFolder = node.element;\n\t\tconst iconResource = ResourceTree.isResourceNode(resourceOrFolder) ? resourceOrFolder.element : resourceOrFolder;\n\t\tconst uri = ResourceTree.isResourceNode(resourceOrFolder) ? resourceOrFolder.uri : resourceOrFolder.sourceUri;\n\t\tconst fileKind = ResourceTree.isResourceNode(resourceOrFolder) ? FileKind.FOLDER : FileKind.FILE;\n\t\tconst tooltip = !ResourceTree.isResourceNode(resourceOrFolder) && resourceOrFolder.decorations.tooltip || '';\n\t\tconst hidePath = this.viewMode() === ViewMode.Tree;\n\n\t\tlet matches: IMatch[] | undefined;\n\t\tlet descriptionMatches: IMatch[] | undefined;\n\t\tlet strikethrough: boolean | undefined;\n\n\t\tif (ResourceTree.isResourceNode(resourceOrFolder)) {\n\t\t\tif (resourceOrFolder.element) {\n\t\t\t\tconst menus = this.scmViewService.menus.getRepositoryMenus(resourceOrFolder.element.resourceGroup.provider);\n\t\t\t\tthis._renderActionBar(template, resourceOrFolder, menus.getResourceMenu(resourceOrFolder.element));\n\n\t\t\t\ttemplate.element.classList.toggle('faded', resourceOrFolder.element.decorations.faded);\n\t\t\t\tstrikethrough = resourceOrFolder.element.decorations.strikeThrough;\n\t\t\t} else {\n\t\t\t\tconst menus = this.scmViewService.menus.getRepositoryMenus(resourceOrFolder.context.provider);\n\t\t\t\tthis._renderActionBar(template, resourceOrFolder, menus.getResourceFolderMenu(resourceOrFolder.context));\n\n\t\t\t\tmatches = createMatches(node.filterData as FuzzyScore | undefined);\n\t\t\t\ttemplate.element.classList.remove('faded');\n\t\t\t}\n\t\t} else {\n\t\t\tconst menus = this.scmViewService.menus.getRepositoryMenus(resourceOrFolder.resourceGroup.provider);\n\t\t\tthis._renderActionBar(template, resourceOrFolder, menus.getResourceMenu(resourceOrFolder));\n\n\t\t\t[matches, descriptionMatches] = processResourceFilterData(uri, node.filterData);\n\t\t\ttemplate.element.classList.toggle('faded', resourceOrFolder.decorations.faded);\n\t\t\tstrikethrough = resourceOrFolder.decorations.strikeThrough;\n\t\t}\n\n\t\tconst renderedData: RenderedResourceData = {\n\t\t\ttooltip, uri, fileLabelOptions: { hidePath, fileKind, matches, descriptionMatches, strikethrough }, iconResource\n\t\t};\n\n\t\tthis.renderIcon(template, renderedData);\n\n\t\tthis.renderedResources.set(template, renderedData);\n\t\ttemplate.elementDisposables.add(toDisposable(() => this.renderedResources.delete(template)));\n\n\t\ttemplate.element.setAttribute('data-tooltip', tooltip);\n\t}\n\n\tdisposeElement(resource: ITreeNode<ISCMResource, FuzzyScore | LabelFuzzyScore> | ITreeNode<IResourceNode<ISCMResource, ISCMResourceGroup>, FuzzyScore | LabelFuzzyScore>, index: number, template: ResourceTemplate): void {\n\t\ttemplate.elementDisposables.clear();\n\t}\n\n\trenderCompressedElements(node: ITreeNode<ICompressedTreeNode<ISCMResource> | ICompressedTreeNode<IResourceNode<ISCMResource, ISCMResourceGroup>>, FuzzyScore | LabelFuzzyScore>, index: number, template: ResourceTemplate, height: number | undefined): void {\n\t\tconst compressed = node.element as ICompressedTreeNode<IResourceNode<ISCMResource, ISCMResourceGroup>>;\n\t\tconst folder = compressed.elements[compressed.elements.length - 1];\n\n\t\tconst label = compressed.elements.map(e => e.name);\n\t\tconst fileKind = FileKind.FOLDER;\n\n\t\tconst matches = createMatches(node.filterData as FuzzyScore | undefined);\n\t\ttemplate.fileLabel.setResource({ resource: folder.uri, name: label }, {\n\t\t\tfileDecorations: { colors: false, badges: true },\n\t\t\tfileKind,\n\t\t\tmatches,\n\t\t\tseparator: this.labelService.getSeparator(folder.uri.scheme)\n\t\t});\n\n\t\tconst menus = this.scmViewService.menus.getRepositoryMenus(folder.context.provider);\n\t\tthis._renderActionBar(template, folder, menus.getResourceFolderMenu(folder.context));\n\n\t\ttemplate.name.classList.remove('strike-through');\n\t\ttemplate.element.classList.remove('faded');\n\t\ttemplate.decorationIcon.style.display = 'none';\n\t\ttemplate.decorationIcon.style.backgroundImage = '';\n\n\t\ttemplate.element.setAttribute('data-tooltip', '');\n\t}\n\n\tdisposeCompressedElements(node: ITreeNode<ICompressedTreeNode<ISCMResource> | ICompressedTreeNode<IResourceNode<ISCMResource, ISCMResourceGroup>>, FuzzyScore | LabelFuzzyScore>, index: number, template: ResourceTemplate, height: number | undefined): void {\n\t\ttemplate.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(template: ResourceTemplate): void {\n\t\ttemplate.elementDisposables.dispose();\n\t\ttemplate.disposables.dispose();\n\t}\n\n\tprivate _renderActionBar(template: ResourceTemplate, resourceOrFolder: ISCMResource | IResourceNode<ISCMResource, ISCMResourceGroup>, menu: IMenu): void {\n\t\tif (!template.actionBarMenu || template.actionBarMenu !== menu) {\n\t\t\ttemplate.actionBar.clear();\n\n\t\t\ttemplate.actionBarMenu = menu;\n\t\t\ttemplate.actionBarMenuListener.value = connectPrimaryMenuToInlineActionBar(menu, template.actionBar);\n\t\t}\n\n\t\ttemplate.actionBar.context = resourceOrFolder;\n\t}\n\n\tprivate onDidColorThemeChange(): void {\n\t\tfor (const [template, data] of this.renderedResources) {\n\t\t\tthis.renderIcon(template, data);\n\t\t}\n\t}\n\n\tprivate renderIcon(template: ResourceTemplate, data: RenderedResourceData): void {\n\t\tconst theme = this.themeService.getColorTheme();\n\t\tconst icon = theme.type === ColorScheme.LIGHT ? data.iconResource?.decorations.icon : data.iconResource?.decorations.iconDark;\n\n\t\ttemplate.fileLabel.setFile(data.uri, {\n\t\t\t...data.fileLabelOptions,\n\t\t\tfileDecorations: { colors: false, badges: !icon },\n\t\t});\n\n\t\tif (icon) {\n\t\t\tif (ThemeIcon.isThemeIcon(icon)) {\n\t\t\t\ttemplate.decorationIcon.className = `decoration-icon ${ThemeIcon.asClassName(icon)}`;\n\t\t\t\tif (icon.color) {\n\t\t\t\t\ttemplate.decorationIcon.style.color = theme.getColor(icon.color.id)?.toString() ?? '';\n\t\t\t\t}\n\t\t\t\ttemplate.decorationIcon.style.display = '';\n\t\t\t\ttemplate.decorationIcon.style.backgroundImage = '';\n\t\t\t} else {\n\t\t\t\ttemplate.decorationIcon.className = 'decoration-icon';\n\t\t\t\ttemplate.decorationIcon.style.color = '';\n\t\t\t\ttemplate.decorationIcon.style.display = '';\n\t\t\t\ttemplate.decorationIcon.style.backgroundImage = asCSSUrl(icon);\n\t\t\t}\n\t\t\ttemplate.decorationIcon.title = data.tooltip;\n\t\t} else {\n\t\t\ttemplate.decorationIcon.className = 'decoration-icon';\n\t\t\ttemplate.decorationIcon.style.color = '';\n\t\t\ttemplate.decorationIcon.style.display = 'none';\n\t\t\ttemplate.decorationIcon.style.backgroundImage = '';\n\t\t\ttemplate.decorationIcon.title = '';\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\t}\n}\n\nclass ListDelegate implements IListVirtualDelegate<TreeElement> {\n\n\tconstructor(private readonly inputRenderer: InputRenderer) { }\n\n\tgetHeight(element: TreeElement) {\n\t\tif (isSCMInput(element)) {\n\t\t\treturn this.inputRenderer.getHeight(element);\n\t\t} else if (isSCMActionButton(element)) {\n\t\t\treturn ActionButtonRenderer.DEFAULT_HEIGHT + 10;\n\t\t} else {\n\t\t\treturn 22;\n\t\t}\n\t}\n\n\tgetTemplateId(element: TreeElement) {\n\t\tif (isSCMRepository(element)) {\n\t\t\treturn RepositoryRenderer.TEMPLATE_ID;\n\t\t} else if (isSCMInput(element)) {\n\t\t\treturn InputRenderer.TEMPLATE_ID;\n\t\t} else if (isSCMActionButton(element)) {\n\t\t\treturn ActionButtonRenderer.TEMPLATE_ID;\n\t\t} else if (isSCMResourceGroup(element)) {\n\t\t\treturn ResourceGroupRenderer.TEMPLATE_ID;\n\t\t} else if (isSCMResource(element) || isSCMResourceNode(element)) {\n\t\t\treturn ResourceRenderer.TEMPLATE_ID;\n\t\t} else {\n\t\t\tthrow new Error('Unknown element');\n\t\t}\n\t}\n}\n\nclass SCMTreeCompressionDelegate implements ITreeCompressionDelegate<TreeElement> {\n\n\tisIncompressible(element: TreeElement): boolean {\n\t\tif (ResourceTree.isResourceNode(element)) {\n\t\t\treturn element.childrenCount === 0 || !element.parent || !element.parent.parent;\n\t\t}\n\n\t\treturn true;\n\t}\n\n}\n\nclass SCMTreeFilter implements ITreeFilter<TreeElement> {\n\n\tfilter(element: TreeElement): boolean {\n\t\tif (isSCMResourceGroup(element)) {\n\t\t\treturn element.resources.length > 0 || !element.hideWhenEmpty;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n}\n\nexport class SCMTreeSorter implements ITreeSorter<TreeElement> {\n\n\tconstructor(\n\t\tprivate readonly viewMode: () => ViewMode,\n\t\tprivate readonly viewSortKey: () => ViewSortKey) { }\n\n\tcompare(one: TreeElement, other: TreeElement): number {\n\t\tif (isSCMRepository(one)) {\n\t\t\tif (!isSCMRepository(other)) {\n\t\t\t\tthrow new Error('Invalid comparison');\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (isSCMInput(one)) {\n\t\t\treturn -1;\n\t\t} else if (isSCMInput(other)) {\n\t\t\treturn 1;\n\t\t}\n\n\t\tif (isSCMActionButton(one)) {\n\t\t\treturn -1;\n\t\t} else if (isSCMActionButton(other)) {\n\t\t\treturn 1;\n\t\t}\n\n\t\tif (isSCMResourceGroup(one)) {\n\t\t\treturn isSCMResourceGroup(other) ? 0 : -1;\n\t\t}\n\n\t\t// Resource (List)\n\t\tif (this.viewMode() === ViewMode.List) {\n\t\t\t// FileName\n\t\t\tif (this.viewSortKey() === ViewSortKey.Name) {\n\t\t\t\tconst oneName = basename((one as ISCMResource).sourceUri);\n\t\t\t\tconst otherName = basename((other as ISCMResource).sourceUri);\n\n\t\t\t\treturn compareFileNames(oneName, otherName);\n\t\t\t}\n\n\t\t\t// Status\n\t\t\tif (this.viewSortKey() === ViewSortKey.Status) {\n\t\t\t\tconst oneTooltip = (one as ISCMResource).decorations.tooltip ?? '';\n\t\t\t\tconst otherTooltip = (other as ISCMResource).decorations.tooltip ?? '';\n\n\t\t\t\tif (oneTooltip !== otherTooltip) {\n\t\t\t\t\treturn compare(oneTooltip, otherTooltip);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Path (default)\n\t\t\tconst onePath = (one as ISCMResource).sourceUri.fsPath;\n\t\t\tconst otherPath = (other as ISCMResource).sourceUri.fsPath;\n\n\t\t\treturn comparePaths(onePath, otherPath);\n\t\t}\n\n\t\t// Resource (Tree)\n\t\tconst oneIsDirectory = ResourceTree.isResourceNode(one);\n\t\tconst otherIsDirectory = ResourceTree.isResourceNode(other);\n\n\t\tif (oneIsDirectory !== otherIsDirectory) {\n\t\t\treturn oneIsDirectory ? -1 : 1;\n\t\t}\n\n\t\tconst oneName = ResourceTree.isResourceNode(one) ? one.name : basename((one as ISCMResource).sourceUri);\n\t\tconst otherName = ResourceTree.isResourceNode(other) ? other.name : basename((other as ISCMResource).sourceUri);\n\n\t\treturn compareFileNames(oneName, otherName);\n\t}\n}\n\nexport class SCMTreeKeyboardNavigationLabelProvider implements ICompressibleKeyboardNavigationLabelProvider<TreeElement> {\n\n\tconstructor(\n\t\tprivate viewMode: () => ViewMode,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t) { }\n\n\tgetKeyboardNavigationLabel(element: TreeElement): { toString(): string } | { toString(): string }[] | undefined {\n\t\tif (ResourceTree.isResourceNode(element)) {\n\t\t\treturn element.name;\n\t\t} else if (isSCMRepository(element) || isSCMInput(element) || isSCMActionButton(element)) {\n\t\t\treturn undefined;\n\t\t} else if (isSCMResourceGroup(element)) {\n\t\t\treturn element.label;\n\t\t} else {\n\t\t\tif (this.viewMode() === ViewMode.List) {\n\t\t\t\t// In List mode match using the file name and the path.\n\t\t\t\t// Since we want to match both on the file name and the\n\t\t\t\t// full path we return an array of labels. A match in the\n\t\t\t\t// file name takes precedence over a match in the path.\n\t\t\t\tconst fileName = basename(element.sourceUri);\n\t\t\t\tconst filePath = this.labelService.getUriLabel(element.sourceUri, { relative: true });\n\n\t\t\t\treturn [fileName, filePath];\n\t\t\t} else {\n\t\t\t\t// In Tree mode only match using the file name\n\t\t\t\treturn basename(element.sourceUri);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetCompressedNodeKeyboardNavigationLabel(elements: TreeElement[]): { toString(): string | undefined } | undefined {\n\t\tconst folders = elements as IResourceNode<ISCMResource, ISCMResourceGroup>[];\n\t\treturn folders.map(e => e.name).join('/');\n\t}\n}\n\nfunction getSCMResourceId(element: TreeElement): string {\n\tif (isSCMRepository(element)) {\n\t\tconst provider = element.provider;\n\t\treturn `repo:${provider.id}`;\n\t} else if (isSCMInput(element)) {\n\t\tconst provider = element.repository.provider;\n\t\treturn `input:${provider.id}`;\n\t} else if (isSCMActionButton(element)) {\n\t\tconst provider = element.repository.provider;\n\t\treturn `actionButton:${provider.id}`;\n\t} else if (isSCMResourceGroup(element)) {\n\t\tconst provider = element.provider;\n\t\treturn `resourceGroup:${provider.id}/${element.id}`;\n\t} else if (isSCMResource(element)) {\n\t\tconst group = element.resourceGroup;\n\t\tconst provider = group.provider;\n\t\treturn `resource:${provider.id}/${group.id}/${element.sourceUri.toString()}`;\n\t} else if (isSCMResourceNode(element)) {\n\t\tconst group = element.context;\n\t\treturn `folder:${group.provider.id}/${group.id}/$FOLDER/${element.uri.toString()}`;\n\t} else {\n\t\tthrow new Error('Invalid tree element');\n\t}\n}\n\nclass SCMResourceIdentityProvider implements IIdentityProvider<TreeElement> {\n\n\tgetId(element: TreeElement): string {\n\t\treturn getSCMResourceId(element);\n\t}\n}\n\nexport class SCMAccessibilityProvider implements IListAccessibilityProvider<TreeElement> {\n\n\tconstructor(\n\t\t@ILabelService private readonly labelService: ILabelService\n\t) { }\n\n\tgetWidgetAriaLabel(): string {\n\t\treturn localize('scm', \"Source Control Management\");\n\t}\n\n\tgetAriaLabel(element: TreeElement): string {\n\t\tif (ResourceTree.isResourceNode(element)) {\n\t\t\treturn this.labelService.getUriLabel(element.uri, { relative: true, noPrefix: true }) || element.name;\n\t\t} else if (isSCMRepository(element)) {\n\t\t\treturn `${element.provider.name} ${element.provider.label}`;\n\t\t} else if (isSCMInput(element)) {\n\t\t\treturn localize('input', \"Source Control Input\");\n\t\t} else if (isSCMActionButton(element)) {\n\t\t\treturn element.button?.command.title ?? '';\n\t\t} else if (isSCMResourceGroup(element)) {\n\t\t\treturn element.label;\n\t\t} else {\n\t\t\tconst result: string[] = [];\n\n\t\t\tresult.push(basename(element.sourceUri));\n\n\t\t\tif (element.decorations.tooltip) {\n\t\t\t\tresult.push(element.decorations.tooltip);\n\t\t\t}\n\n\t\t\tconst path = this.labelService.getUriLabel(dirname(element.sourceUri), { relative: true, noPrefix: true });\n\n\t\t\tif (path) {\n\t\t\t\tresult.push(path);\n\t\t\t}\n\n\t\t\treturn result.join(', ');\n\t\t}\n\t}\n}\n\nconst enum ViewMode {\n\tList = 'list',\n\tTree = 'tree'\n}\n\nconst enum ViewSortKey {\n\tPath = 'path',\n\tName = 'name',\n\tStatus = 'status'\n}\n\nconst Menus = {\n\tViewSort: new MenuId('SCMViewSort'),\n\tRepositories: new MenuId('SCMRepositories'),\n\tChangesSettings: new MenuId('SCMChangesSettings'),\n};\n\nexport const ContextKeys = {\n\tSCMViewMode: new RawContextKey<ViewMode>('scmViewMode', ViewMode.List),\n\tSCMViewSortKey: new RawContextKey<ViewSortKey>('scmViewSortKey', ViewSortKey.Path),\n\tSCMViewAreAllRepositoriesCollapsed: new RawContextKey<boolean>('scmViewAreAllRepositoriesCollapsed', false),\n\tSCMViewIsAnyRepositoryCollapsible: new RawContextKey<boolean>('scmViewIsAnyRepositoryCollapsible', false),\n\tSCMProvider: new RawContextKey<string | undefined>('scmProvider', undefined),\n\tSCMProviderRootUri: new RawContextKey<string | undefined>('scmProviderRootUri', undefined),\n\tSCMProviderHasRootUri: new RawContextKey<boolean>('scmProviderHasRootUri', undefined),\n\tRepositoryCount: new RawContextKey<number>('scmRepositoryCount', 0),\n\tRepositoryVisibilityCount: new RawContextKey<number>('scmRepositoryVisibleCount', 0),\n\tRepositoryVisibility(repository: ISCMRepository) {\n\t\treturn new RawContextKey<boolean>(`scmRepositoryVisible:${repository.provider.id}`, false);\n\t}\n};\n\nMenuRegistry.appendMenuItem(MenuId.SCMTitle, {\n\ttitle: localize('sortAction', \"View & Sort\"),\n\tsubmenu: Menus.ViewSort,\n\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', VIEW_PANE_ID), ContextKeys.RepositoryCount.notEqualsTo(0)),\n\tgroup: '0_view&sort',\n\torder: 1\n});\n\nMenuRegistry.appendMenuItem(Menus.ViewSort, {\n\ttitle: localize('repositories', \"Repositories\"),\n\tsubmenu: Menus.Repositories,\n\twhen: ContextKeyExpr.greater(ContextKeys.RepositoryCount.key, 1),\n\tgroup: '0_repositories'\n});\n\nclass RepositoryVisibilityAction extends Action2 {\n\n\tprivate repository: ISCMRepository;\n\n\tconstructor(repository: ISCMRepository) {\n\t\tsuper({\n\t\t\tid: `workbench.scm.action.toggleRepositoryVisibility.${repository.provider.id}`,\n\t\t\ttitle: repository.provider.name,\n\t\t\tf1: false,\n\t\t\tprecondition: ContextKeyExpr.or(ContextKeys.RepositoryVisibilityCount.notEqualsTo(1), ContextKeys.RepositoryVisibility(repository).isEqualTo(false)),\n\t\t\ttoggled: ContextKeys.RepositoryVisibility(repository).isEqualTo(true),\n\t\t\tmenu: { id: Menus.Repositories, group: '0_repositories' }\n\t\t});\n\t\tthis.repository = repository;\n\t}\n\n\trun(accessor: ServicesAccessor) {\n\t\tconst scmViewService = accessor.get(ISCMViewService);\n\t\tscmViewService.toggleVisibility(this.repository);\n\t}\n}\n\ninterface RepositoryVisibilityItem {\n\treadonly contextKey: IContextKey<boolean>;\n\tdispose(): void;\n}\n\nclass RepositoryVisibilityActionController {\n\n\tprivate items = new Map<ISCMRepository, RepositoryVisibilityItem>();\n\tprivate repositoryCountContextKey: IContextKey<number>;\n\tprivate repositoryVisibilityCountContextKey: IContextKey<number>;\n\tprivate readonly disposables = new DisposableStore();\n\n\tconstructor(\n\t\t@IContextKeyService private contextKeyService: IContextKeyService,\n\t\t@ISCMViewService private readonly scmViewService: ISCMViewService,\n\t\t@ISCMService scmService: ISCMService\n\t) {\n\t\tthis.repositoryCountContextKey = ContextKeys.RepositoryCount.bindTo(contextKeyService);\n\t\tthis.repositoryVisibilityCountContextKey = ContextKeys.RepositoryVisibilityCount.bindTo(contextKeyService);\n\n\t\tscmViewService.onDidChangeVisibleRepositories(this.onDidChangeVisibleRepositories, this, this.disposables);\n\t\tscmService.onDidAddRepository(this.onDidAddRepository, this, this.disposables);\n\t\tscmService.onDidRemoveRepository(this.onDidRemoveRepository, this, this.disposables);\n\n\t\tfor (const repository of scmService.repositories) {\n\t\t\tthis.onDidAddRepository(repository);\n\t\t}\n\t}\n\n\tprivate onDidAddRepository(repository: ISCMRepository): void {\n\t\tconst action = registerAction2(class extends RepositoryVisibilityAction {\n\t\t\tconstructor() {\n\t\t\t\tsuper(repository);\n\t\t\t}\n\t\t});\n\n\t\tconst contextKey = ContextKeys.RepositoryVisibility(repository).bindTo(this.contextKeyService);\n\t\tcontextKey.set(this.scmViewService.isVisible(repository));\n\n\t\tthis.items.set(repository, {\n\t\t\tcontextKey,\n\t\t\tdispose() {\n\t\t\t\tcontextKey.reset();\n\t\t\t\taction.dispose();\n\t\t\t}\n\t\t});\n\n\t\tthis.updateRepositoryContextKeys();\n\t}\n\n\tprivate onDidRemoveRepository(repository: ISCMRepository): void {\n\t\tthis.items.get(repository)?.dispose();\n\t\tthis.items.delete(repository);\n\t\tthis.updateRepositoryContextKeys();\n\t}\n\n\tprivate onDidChangeVisibleRepositories(): void {\n\t\tlet count = 0;\n\n\t\tfor (const [repository, item] of this.items) {\n\t\t\tconst isVisible = this.scmViewService.isVisible(repository);\n\t\t\titem.contextKey.set(isVisible);\n\n\t\t\tif (isVisible) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\n\t\tthis.repositoryCountContextKey.set(this.items.size);\n\t\tthis.repositoryVisibilityCountContextKey.set(count);\n\t}\n\n\tprivate updateRepositoryContextKeys(): void {\n\t\tthis.repositoryCountContextKey.set(this.items.size);\n\t\tthis.repositoryVisibilityCountContextKey.set(Iterable.reduce(this.items.keys(), (r, repository) => r + (this.scmViewService.isVisible(repository) ? 1 : 0), 0));\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\t\tdispose(this.items.values());\n\t\tthis.items.clear();\n\t}\n}\n\nclass SetListViewModeAction extends ViewAction<SCMViewPane> {\n\tconstructor(\n\t\tid = 'workbench.scm.action.setListViewMode',\n\t\tmenu: Partial<IAction2Options['menu']> = {}) {\n\t\tsuper({\n\t\t\tid,\n\t\t\ttitle: localize('setListViewMode', \"View as List\"),\n\t\t\tviewId: VIEW_PANE_ID,\n\t\t\tf1: false,\n\t\t\ticon: Codicon.listTree,\n\t\t\ttoggled: ContextKeys.SCMViewMode.isEqualTo(ViewMode.List),\n\t\t\tmenu: { id: Menus.ViewSort, group: '1_viewmode', ...menu }\n\t\t});\n\t}\n\n\tasync runInView(_: ServicesAccessor, view: SCMViewPane): Promise<void> {\n\t\tview.viewMode = ViewMode.List;\n\t}\n}\n\nclass SetListViewModeNavigationAction extends SetListViewModeAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t'workbench.scm.action.setListViewModeNavigation',\n\t\t\t{\n\t\t\t\tid: MenuId.SCMTitle,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', VIEW_PANE_ID), ContextKeys.RepositoryCount.notEqualsTo(0), ContextKeys.SCMViewMode.isEqualTo(ViewMode.Tree)),\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: -1000\n\t\t\t});\n\t}\n}\n\nclass SetTreeViewModeAction extends ViewAction<SCMViewPane> {\n\tconstructor(\n\t\tid = 'workbench.scm.action.setTreeViewMode',\n\t\tmenu: Partial<IAction2Options['menu']> = {}) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid,\n\t\t\t\ttitle: localize('setTreeViewMode', \"View as Tree\"),\n\t\t\t\tviewId: VIEW_PANE_ID,\n\t\t\t\tf1: false,\n\t\t\t\ticon: Codicon.listFlat,\n\t\t\t\ttoggled: ContextKeys.SCMViewMode.isEqualTo(ViewMode.Tree),\n\t\t\t\tmenu: { id: Menus.ViewSort, group: '1_viewmode', ...menu }\n\t\t\t});\n\t}\n\n\tasync runInView(_: ServicesAccessor, view: SCMViewPane): Promise<void> {\n\t\tview.viewMode = ViewMode.Tree;\n\t}\n}\n\nclass SetTreeViewModeNavigationAction extends SetTreeViewModeAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t'workbench.scm.action.setTreeViewModeNavigation',\n\t\t\t{\n\t\t\t\tid: MenuId.SCMTitle,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', VIEW_PANE_ID), ContextKeys.RepositoryCount.notEqualsTo(0), ContextKeys.SCMViewMode.isEqualTo(ViewMode.List)),\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: -1000\n\t\t\t});\n\t}\n}\n\nregisterAction2(SetListViewModeAction);\nregisterAction2(SetTreeViewModeAction);\nregisterAction2(SetListViewModeNavigationAction);\nregisterAction2(SetTreeViewModeNavigationAction);\n\nabstract class RepositorySortAction extends ViewAction<SCMViewPane> {\n\tconstructor(private sortKey: ISCMRepositorySortKey, title: string) {\n\t\tsuper({\n\t\t\tid: `workbench.scm.action.repositories.setSortKey.${sortKey}`,\n\t\t\ttitle,\n\t\t\tviewId: VIEW_PANE_ID,\n\t\t\tf1: false,\n\t\t\ttoggled: RepositoryContextKeys.RepositorySortKey.isEqualTo(sortKey),\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: Menus.Repositories,\n\t\t\t\t\tgroup: '1_sort'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.SCMSourceControlTitle,\n\t\t\t\t\tgroup: '1_sort',\n\t\t\t\t},\n\t\t\t]\n\t\t});\n\t}\n\n\trunInView(accessor: ServicesAccessor) {\n\t\taccessor.get(ISCMViewService).toggleSortKey(this.sortKey);\n\t}\n}\n\n\nclass RepositorySortByDiscoveryTimeAction extends RepositorySortAction {\n\tconstructor() {\n\t\tsuper(ISCMRepositorySortKey.DiscoveryTime, localize('repositorySortByDiscoveryTime', \"Sort by Discovery Time\"));\n\t}\n}\n\nclass RepositorySortByNameAction extends RepositorySortAction {\n\tconstructor() {\n\t\tsuper(ISCMRepositorySortKey.Name, localize('repositorySortByName', \"Sort by Name\"));\n\t}\n}\n\nclass RepositorySortByPathAction extends RepositorySortAction {\n\tconstructor() {\n\t\tsuper(ISCMRepositorySortKey.Path, localize('repositorySortByPath', \"Sort by Path\"));\n\t}\n}\n\nregisterAction2(RepositorySortByDiscoveryTimeAction);\nregisterAction2(RepositorySortByNameAction);\nregisterAction2(RepositorySortByPathAction);\n\nabstract class SetSortKeyAction extends ViewAction<SCMViewPane> {\n\tconstructor(private sortKey: ViewSortKey, title: string) {\n\t\tsuper({\n\t\t\tid: `workbench.scm.action.setSortKey.${sortKey}`,\n\t\t\ttitle,\n\t\t\tviewId: VIEW_PANE_ID,\n\t\t\tf1: false,\n\t\t\ttoggled: ContextKeys.SCMViewSortKey.isEqualTo(sortKey),\n\t\t\tprecondition: ContextKeys.SCMViewMode.isEqualTo(ViewMode.List),\n\t\t\tmenu: { id: Menus.ViewSort, group: '2_sort' }\n\t\t});\n\t}\n\n\tasync runInView(_: ServicesAccessor, view: SCMViewPane): Promise<void> {\n\t\tview.viewSortKey = this.sortKey;\n\t}\n}\n\nclass SetSortByNameAction extends SetSortKeyAction {\n\tconstructor() {\n\t\tsuper(ViewSortKey.Name, localize('sortChangesByName', \"Sort Changes by Name\"));\n\t}\n}\n\nclass SetSortByPathAction extends SetSortKeyAction {\n\tconstructor() {\n\t\tsuper(ViewSortKey.Path, localize('sortChangesByPath', \"Sort Changes by Path\"));\n\t}\n}\n\nclass SetSortByStatusAction extends SetSortKeyAction {\n\tconstructor() {\n\t\tsuper(ViewSortKey.Status, localize('sortChangesByStatus', \"Sort Changes by Status\"));\n\t}\n}\n\nregisterAction2(SetSortByNameAction);\nregisterAction2(SetSortByPathAction);\nregisterAction2(SetSortByStatusAction);\n\nclass CollapseAllRepositoriesAction extends ViewAction<SCMViewPane> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: `workbench.scm.action.collapseAllRepositories`,\n\t\t\ttitle: localize('collapse all', \"Collapse All Repositories\"),\n\t\t\tviewId: VIEW_PANE_ID,\n\t\t\tf1: false,\n\t\t\ticon: Codicon.collapseAll,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.SCMTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', VIEW_PANE_ID), ContextKeys.SCMViewIsAnyRepositoryCollapsible.isEqualTo(true), ContextKeys.SCMViewAreAllRepositoriesCollapsed.isEqualTo(false))\n\t\t\t}\n\t\t});\n\t}\n\n\tasync runInView(_: ServicesAccessor, view: SCMViewPane): Promise<void> {\n\t\tview.collapseAllRepositories();\n\t}\n}\n\nclass ExpandAllRepositoriesAction extends ViewAction<SCMViewPane> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: `workbench.scm.action.expandAllRepositories`,\n\t\t\ttitle: localize('expand all', \"Expand All Repositories\"),\n\t\t\tviewId: VIEW_PANE_ID,\n\t\t\tf1: false,\n\t\t\ticon: Codicon.expandAll,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.SCMTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', VIEW_PANE_ID), ContextKeys.SCMViewIsAnyRepositoryCollapsible.isEqualTo(true), ContextKeys.SCMViewAreAllRepositoriesCollapsed.isEqualTo(true))\n\t\t\t}\n\t\t});\n\t}\n\n\tasync runInView(_: ServicesAccessor, view: SCMViewPane): Promise<void> {\n\t\tview.expandAllRepositories();\n\t}\n}\n\nregisterAction2(CollapseAllRepositoriesAction);\nregisterAction2(ExpandAllRepositoriesAction);\n\nconst enum SCMInputWidgetCommandId {\n\tCancelAction = 'scm.input.cancelAction'\n}\n\nconst enum SCMInputWidgetStorageKey {\n\tLastActionId = 'scm.input.lastActionId'\n}\n\nclass SCMInputWidgetActionRunner extends ActionRunner {\n\n\tprivate readonly _runningActions = new Set<IAction>();\n\tpublic get runningActions(): Set<IAction> { return this._runningActions; }\n\n\tprivate _cts: CancellationTokenSource | undefined;\n\n\tconstructor(\n\t\tprivate readonly input: ISCMInput,\n\t\t@IStorageService private readonly storageService: IStorageService\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected override async runAction(action: IAction): Promise<void> {\n\t\ttry {\n\t\t\t// Cancel previous action\n\t\t\tif (this.runningActions.size !== 0) {\n\t\t\t\tthis._cts?.cancel();\n\n\t\t\t\tif (action.id === SCMInputWidgetCommandId.CancelAction) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Create action context\n\t\t\tconst context: ISCMInputValueProviderContext[] = [];\n\t\t\tfor (const group of this.input.repository.provider.groups) {\n\t\t\t\tcontext.push({\n\t\t\t\t\tresourceGroupId: group.id,\n\t\t\t\t\tresources: [...group.resources.map(r => r.sourceUri)]\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Run action\n\t\t\tthis._runningActions.add(action);\n\t\t\tthis._cts = new CancellationTokenSource();\n\t\t\tawait action.run(...[this.input.repository.provider.rootUri, context, this._cts.token]);\n\t\t} finally {\n\t\t\tthis._runningActions.delete(action);\n\n\t\t\t// Save last action\n\t\t\tif (this._runningActions.size === 0) {\n\t\t\t\tthis.storageService.store(SCMInputWidgetStorageKey.LastActionId, action.id, StorageScope.PROFILE, StorageTarget.USER);\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nclass SCMInputWidgetToolbar extends WorkbenchToolBar {\n\n\tprivate _dropdownActions: IAction[] = [];\n\tget dropdownActions(): IAction[] { return this._dropdownActions; }\n\n\tprivate _dropdownAction: IAction;\n\tget dropdownAction(): IAction { return this._dropdownAction; }\n\n\tprivate _cancelAction: IAction;\n\n\tprivate _onDidChange = new Emitter<void>();\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tprivate readonly _disposables = this._register(new MutableDisposable<DisposableStore>());\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\toptions: IMenuWorkbenchToolBarOptions | undefined,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t) {\n\t\tsuper(container, { resetMenu: MenuId.SCMInputBox, ...options }, menuService, contextKeyService, contextMenuService, keybindingService, commandService, telemetryService);\n\n\t\tthis._dropdownAction = new Action(\n\t\t\t'scmInputMoreActions',\n\t\t\tlocalize('scmInputMoreActions', \"More Actions...\"),\n\t\t\t'codicon-chevron-down');\n\n\t\tthis._cancelAction = new MenuItemAction({\n\t\t\tid: SCMInputWidgetCommandId.CancelAction,\n\t\t\ttitle: localize('scmInputCancelAction', \"Cancel\"),\n\t\t\ticon: Codicon.debugStop,\n\t\t}, undefined, undefined, undefined, undefined, contextKeyService, commandService);\n\t}\n\n\tpublic setInput(input: ISCMInput): void {\n\t\tthis._disposables.value = new DisposableStore();\n\n\t\tconst contextKeyService = this.contextKeyService.createOverlay([\n\t\t\t['scmProvider', input.repository.provider.contextValue],\n\t\t\t['scmProviderRootUri', input.repository.provider.rootUri?.toString()],\n\t\t\t['scmProviderHasRootUri', !!input.repository.provider.rootUri]\n\t\t]);\n\n\t\tconst menu = this._disposables.value.add(this.menuService.createMenu(MenuId.SCMInputBox, contextKeyService, { emitEventsForSubmenuChanges: true }));\n\n\t\tconst isEnabled = (): boolean => {\n\t\t\treturn input.repository.provider.groups.some(g => g.resources.length > 0);\n\t\t};\n\n\t\tconst updateToolbar = () => {\n\t\t\tconst actions: IAction[] = [];\n\t\t\tcreateAndFillInActionBarActions(menu, { shouldForwardArgs: true }, actions);\n\n\t\t\tfor (const action of actions) {\n\t\t\t\taction.enabled = isEnabled();\n\t\t\t}\n\t\t\tthis._dropdownAction.enabled = isEnabled();\n\n\t\t\tlet primaryAction: IAction | undefined = undefined;\n\n\t\t\tif (actions.length === 1) {\n\t\t\t\tprimaryAction = actions[0];\n\t\t\t} else if (actions.length > 1) {\n\t\t\t\tconst lastActionId = this.storageService.get(SCMInputWidgetStorageKey.LastActionId, StorageScope.PROFILE, '');\n\t\t\t\tprimaryAction = actions.find(a => a.id === lastActionId) ?? actions[0];\n\t\t\t}\n\n\t\t\tthis._dropdownActions = actions.length === 1 ? [] : actions;\n\t\t\tsuper.setActions(primaryAction ? [primaryAction] : [], []);\n\n\t\t\tthis._onDidChange.fire();\n\t\t};\n\n\t\tthis._disposables.value.add(menu.onDidChange(() => updateToolbar()));\n\t\tthis._disposables.value.add(input.repository.provider.onDidChangeResources(() => updateToolbar()));\n\t\tthis._disposables.value.add(this.storageService.onDidChangeValue(StorageScope.PROFILE, SCMInputWidgetStorageKey.LastActionId, this._disposables.value)(() => updateToolbar()));\n\n\t\tthis.actionRunner = new SCMInputWidgetActionRunner(input, this.storageService);\n\t\tthis._disposables.value.add(this.actionRunner.onWillRun(e => {\n\t\t\tif ((this.actionRunner as SCMInputWidgetActionRunner).runningActions.size === 0) {\n\t\t\t\tsuper.setActions([this._cancelAction], []);\n\t\t\t\tthis._onDidChange.fire();\n\t\t\t}\n\t\t}));\n\t\tthis._disposables.value.add(this.actionRunner.onDidRun(e => {\n\t\t\tif ((this.actionRunner as SCMInputWidgetActionRunner).runningActions.size === 0) {\n\t\t\t\tupdateToolbar();\n\t\t\t}\n\t\t}));\n\n\t\tupdateToolbar();\n\t}\n}\n\nclass SCMInputWidgetEditorOptions {\n\n\tprivate readonly _onDidChange = new Emitter<void>();\n\treadonly onDidChange = this._onDidChange.event;\n\n\tprivate readonly defaultInputFontFamily = DEFAULT_FONT_FAMILY;\n\n\tprivate readonly _disposables = new DisposableStore();\n\n\tconstructor(\n\t\tprivate readonly overflowWidgetsDomNode: HTMLElement,\n\t\tprivate readonly configurationService: IConfigurationService) {\n\n\t\tconst onDidChangeConfiguration = Event.filter(\n\t\t\tthis.configurationService.onDidChangeConfiguration,\n\t\t\te => {\n\t\t\t\treturn e.affectsConfiguration('editor.accessibilitySupport') ||\n\t\t\t\t\te.affectsConfiguration('editor.cursorBlinking') ||\n\t\t\t\t\te.affectsConfiguration('editor.fontFamily') ||\n\t\t\t\t\te.affectsConfiguration('editor.rulers') ||\n\t\t\t\t\te.affectsConfiguration('editor.wordWrap') ||\n\t\t\t\t\te.affectsConfiguration('scm.inputFontFamily') ||\n\t\t\t\t\te.affectsConfiguration('scm.inputFontSize');\n\t\t\t},\n\t\t\tthis._disposables\n\t\t);\n\n\t\tthis._disposables.add(onDidChangeConfiguration(() => this._onDidChange.fire()));\n\t}\n\n\tgetEditorConstructionOptions(): IEditorConstructionOptions {\n\t\tconst fontFamily = this._getEditorFontFamily();\n\t\tconst fontSize = this._getEditorFontSize();\n\t\tconst lineHeight = this._getEditorLineHeight(fontSize);\n\n\t\treturn {\n\t\t\t...getSimpleEditorOptions(this.configurationService),\n\t\t\t...this._getEditorLanguageConfiguration(),\n\t\t\tcursorWidth: 1,\n\t\t\tdragAndDrop: true,\n\t\t\tdropIntoEditor: { enabled: true },\n\t\t\tfontFamily: fontFamily,\n\t\t\tfontSize: fontSize,\n\t\t\tformatOnType: true,\n\t\t\tlineDecorationsWidth: 6,\n\t\t\tlineHeight: lineHeight,\n\t\t\toverflowWidgetsDomNode: this.overflowWidgetsDomNode,\n\t\t\tpadding: { top: 2, bottom: 2 },\n\t\t\tquickSuggestions: false,\n\t\t\trenderWhitespace: 'none',\n\t\t\tscrollbar: {\n\t\t\t\talwaysConsumeMouseWheel: false,\n\t\t\t\tvertical: 'hidden'\n\t\t\t},\n\t\t\twrappingIndent: 'none',\n\t\t\twrappingStrategy: 'advanced',\n\t\t};\n\t}\n\n\tgetEditorOptions(): IEditorOptions {\n\t\tconst fontFamily = this._getEditorFontFamily();\n\t\tconst fontSize = this._getEditorFontSize();\n\t\tconst lineHeight = this._getEditorLineHeight(fontSize);\n\t\tconst accessibilitySupport = this.configurationService.getValue<'auto' | 'off' | 'on'>('editor.accessibilitySupport');\n\t\tconst cursorBlinking = this.configurationService.getValue<'blink' | 'smooth' | 'phase' | 'expand' | 'solid'>('editor.cursorBlinking');\n\n\t\treturn { ...this._getEditorLanguageConfiguration(), accessibilitySupport, cursorBlinking, fontFamily, fontSize, lineHeight };\n\t}\n\n\tprivate _getEditorFontFamily(): string {\n\t\tconst inputFontFamily = this.configurationService.getValue<string>('scm.inputFontFamily').trim();\n\n\t\tif (inputFontFamily.toLowerCase() === 'editor') {\n\t\t\treturn this.configurationService.getValue<string>('editor.fontFamily').trim();\n\t\t}\n\n\t\tif (inputFontFamily.length !== 0 && inputFontFamily.toLowerCase() !== 'default') {\n\t\t\treturn inputFontFamily;\n\t\t}\n\n\t\treturn this.defaultInputFontFamily;\n\t}\n\n\tprivate _getEditorFontSize(): number {\n\t\treturn this.configurationService.getValue<number>('scm.inputFontSize');\n\t}\n\n\tprivate _getEditorLanguageConfiguration(): IEditorOptions {\n\t\t// editor.rulers\n\t\tconst rulersConfig = this.configurationService.inspect('editor.rulers', { overrideIdentifier: 'scminput' });\n\t\tconst rulers = rulersConfig.overrideIdentifiers?.includes('scminput') ? EditorOptions.rulers.validate(rulersConfig.value) : [];\n\n\t\t// editor.wordWrap\n\t\tconst wordWrapConfig = this.configurationService.inspect('editor.wordWrap', { overrideIdentifier: 'scminput' });\n\t\tconst wordWrap = wordWrapConfig.overrideIdentifiers?.includes('scminput') ? EditorOptions.wordWrap.validate(wordWrapConfig.value) : 'on';\n\n\t\treturn { rulers, wordWrap };\n\t}\n\n\tprivate _getEditorLineHeight(fontSize: number): number {\n\t\treturn Math.round(fontSize * 1.5);\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n\n}\n\nclass SCMInputWidget {\n\n\tprivate static readonly ValidationTimeouts: { [severity: number]: number } = {\n\t\t[InputValidationType.Information]: 5000,\n\t\t[InputValidationType.Warning]: 8000,\n\t\t[InputValidationType.Error]: 10000\n\t};\n\n\tprivate readonly contextKeyService: IContextKeyService;\n\n\tprivate element: HTMLElement;\n\tprivate editorContainer: HTMLElement;\n\tprivate readonly inputEditor: CodeEditorWidget;\n\tprivate readonly inputEditorOptions: SCMInputWidgetEditorOptions;\n\tprivate toolbarContainer: HTMLElement;\n\tprivate toolbar: SCMInputWidgetToolbar;\n\tprivate readonly disposables = new DisposableStore();\n\n\tprivate model: { readonly input: ISCMInput; readonly textModel: ITextModel } | undefined;\n\tprivate repositoryIdContextKey: IContextKey<string | undefined>;\n\tprivate readonly repositoryDisposables = new DisposableStore();\n\n\tprivate validation: IInputValidation | undefined;\n\tprivate validationContextView: IOpenContextView | undefined;\n\tprivate validationHasFocus: boolean = false;\n\tprivate _validationTimer: any;\n\n\t// This is due to \"Setup height change listener on next tick\" above\n\t// https://github.com/microsoft/vscode/issues/108067\n\tprivate lastLayoutWasTrash = false;\n\tprivate shouldFocusAfterLayout = false;\n\n\treadonly onDidChangeContentHeight: Event<void>;\n\n\tget input(): ISCMInput | undefined {\n\t\treturn this.model?.input;\n\t}\n\n\tset input(input: ISCMInput | undefined) {\n\t\tif (input === this.input) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearValidation();\n\t\tthis.element.classList.remove('synthetic-focus');\n\n\t\tthis.repositoryDisposables.clear();\n\t\tthis.repositoryIdContextKey.set(input?.repository.id);\n\n\t\tif (!input) {\n\t\t\tthis.inputEditor.setModel(undefined);\n\t\t\tthis.model = undefined;\n\t\t\treturn;\n\t\t}\n\n\t\tconst textModel = input.repository.provider.inputBoxTextModel;\n\t\tthis.inputEditor.setModel(textModel);\n\n\t\tif (this.configurationService.getValue('editor.wordBasedSuggestions', { resource: textModel.uri }) !== 'off') {\n\t\t\tthis.configurationService.updateValue('editor.wordBasedSuggestions', 'off', { resource: textModel.uri }, ConfigurationTarget.MEMORY);\n\t\t}\n\n\t\t// Validation\n\t\tconst validationDelayer = new ThrottledDelayer<any>(200);\n\t\tconst validate = async () => {\n\t\t\tconst position = this.inputEditor.getSelection()?.getStartPosition();\n\t\t\tconst offset = position && textModel.getOffsetAt(position);\n\t\t\tconst value = textModel.getValue();\n\n\t\t\tthis.setValidation(await input.validateInput(value, offset || 0));\n\t\t};\n\n\t\tconst triggerValidation = () => validationDelayer.trigger(validate);\n\t\tthis.repositoryDisposables.add(validationDelayer);\n\t\tthis.repositoryDisposables.add(this.inputEditor.onDidChangeCursorPosition(triggerValidation));\n\n\t\t// Adaptive indentation rules\n\t\tconst opts = this.modelService.getCreationOptions(textModel.getLanguageId(), textModel.uri, textModel.isForSimpleWidget);\n\t\tconst onEnter = Event.filter(this.inputEditor.onKeyDown, e => e.keyCode === KeyCode.Enter, this.repositoryDisposables);\n\t\tthis.repositoryDisposables.add(onEnter(() => textModel.detectIndentation(opts.insertSpaces, opts.tabSize)));\n\n\t\t// Keep model in sync with API\n\t\ttextModel.setValue(input.value);\n\t\tthis.repositoryDisposables.add(input.onDidChange(({ value, reason }) => {\n\t\t\tconst currentValue = textModel.getValue();\n\t\t\tif (value === currentValue) { // circuit breaker\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttextModel.pushStackElement();\n\t\t\ttextModel.pushEditOperations(null, [EditOperation.replaceMove(textModel.getFullModelRange(), value)], () => []);\n\n\t\t\tconst position = reason === SCMInputChangeReason.HistoryPrevious\n\t\t\t\t? textModel.getFullModelRange().getStartPosition()\n\t\t\t\t: textModel.getFullModelRange().getEndPosition();\n\t\t\tthis.inputEditor.setPosition(position);\n\t\t\tthis.inputEditor.revealPositionInCenterIfOutsideViewport(position);\n\t\t}));\n\t\tthis.repositoryDisposables.add(input.onDidChangeFocus(() => this.focus()));\n\t\tthis.repositoryDisposables.add(input.onDidChangeValidationMessage((e) => this.setValidation(e, { focus: true, timeout: true })));\n\t\tthis.repositoryDisposables.add(input.onDidChangeValidateInput((e) => triggerValidation()));\n\n\t\t// Keep API in sync with model and validate\n\t\tthis.repositoryDisposables.add(textModel.onDidChangeContent(() => {\n\t\t\tinput.setValue(textModel.getValue(), true);\n\t\t\ttriggerValidation();\n\t\t}));\n\n\t\t// Update placeholder text\n\t\tconst updatePlaceholderText = () => {\n\t\t\tconst binding = this.keybindingService.lookupKeybinding('scm.acceptInput');\n\t\t\tconst label = binding ? binding.getLabel() : (platform.isMacintosh ? 'Cmd+Enter' : 'Ctrl+Enter');\n\t\t\tconst placeholderText = format(input.placeholder, label);\n\n\t\t\tthis.inputEditor.updateOptions({ placeholder: placeholderText });\n\t\t};\n\t\tthis.repositoryDisposables.add(input.onDidChangePlaceholder(updatePlaceholderText));\n\t\tthis.repositoryDisposables.add(this.keybindingService.onDidUpdateKeybindings(updatePlaceholderText));\n\t\tupdatePlaceholderText();\n\n\t\t// Update input template\n\t\tlet commitTemplate = '';\n\t\tthis.repositoryDisposables.add(autorun(reader => {\n\t\t\tif (!input.visible) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst oldCommitTemplate = commitTemplate;\n\t\t\tcommitTemplate = input.repository.provider.commitTemplate.read(reader);\n\n\t\t\tconst value = textModel.getValue();\n\t\t\tif (value && value !== oldCommitTemplate) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttextModel.setValue(commitTemplate);\n\t\t}));\n\n\t\t// Update input enablement\n\t\tconst updateEnablement = (enabled: boolean) => {\n\t\t\tthis.inputEditor.updateOptions({ readOnly: !enabled });\n\t\t};\n\t\tthis.repositoryDisposables.add(input.onDidChangeEnablement(enabled => updateEnablement(enabled)));\n\t\tupdateEnablement(input.enabled);\n\n\t\t// Toolbar\n\t\tthis.toolbar.setInput(input);\n\n\t\t// Save model\n\t\tthis.model = { input, textModel };\n\t}\n\n\tget selections(): Selection[] | null {\n\t\treturn this.inputEditor.getSelections();\n\t}\n\n\tset selections(selections: Selection[] | null) {\n\t\tif (selections) {\n\t\t\tthis.inputEditor.setSelections(selections);\n\t\t}\n\t}\n\n\tprivate setValidation(validation: IInputValidation | undefined, options?: { focus?: boolean; timeout?: boolean }) {\n\t\tif (this._validationTimer) {\n\t\t\tclearTimeout(this._validationTimer);\n\t\t\tthis._validationTimer = 0;\n\t\t}\n\n\t\tthis.validation = validation;\n\t\tthis.renderValidation();\n\n\t\tif (options?.focus && !this.hasFocus()) {\n\t\t\tthis.focus();\n\t\t}\n\n\t\tif (validation && options?.timeout) {\n\t\t\tthis._validationTimer = setTimeout(() => this.setValidation(undefined), SCMInputWidget.ValidationTimeouts[validation.type]);\n\t\t}\n\t}\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\toverflowWidgetsDomNode: HTMLElement,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IModelService private modelService: IModelService,\n\t\t@IKeybindingService private keybindingService: IKeybindingService,\n\t\t@IConfigurationService private configurationService: IConfigurationService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ISCMViewService private readonly scmViewService: ISCMViewService,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService\n\t) {\n\t\tthis.element = append(container, $('.scm-editor'));\n\t\tthis.editorContainer = append(this.element, $('.scm-editor-container'));\n\t\tthis.toolbarContainer = append(this.element, $('.scm-editor-toolbar'));\n\n\t\tthis.contextKeyService = contextKeyService.createScoped(this.element);\n\t\tthis.repositoryIdContextKey = this.contextKeyService.createKey('scmRepository', undefined);\n\n\t\tthis.inputEditorOptions = new SCMInputWidgetEditorOptions(overflowWidgetsDomNode, this.configurationService);\n\t\tthis.disposables.add(this.inputEditorOptions.onDidChange(this.onDidChangeEditorOptions, this));\n\t\tthis.disposables.add(this.inputEditorOptions);\n\n\t\tconst codeEditorWidgetOptions: ICodeEditorWidgetOptions = {\n\t\t\tcontributions: EditorExtensionsRegistry.getSomeEditorContributions([\n\t\t\t\tCodeActionController.ID,\n\t\t\t\tColorDetector.ID,\n\t\t\t\tContextMenuController.ID,\n\t\t\t\tCopyPasteController.ID,\n\t\t\t\tDragAndDropController.ID,\n\t\t\t\tDropIntoEditorController.ID,\n\t\t\t\tEditorDictation.ID,\n\t\t\t\tFormatOnType.ID,\n\t\t\t\tContentHoverController.ID,\n\t\t\t\tGlyphHoverController.ID,\n\t\t\t\tInlineCompletionsController.ID,\n\t\t\t\tLinkDetector.ID,\n\t\t\t\tMenuPreventer.ID,\n\t\t\t\tMessageController.ID,\n\t\t\t\tPlaceholderTextContribution.ID,\n\t\t\t\tSelectionClipboardContributionID,\n\t\t\t\tSnippetController2.ID,\n\t\t\t\tSuggestController.ID\n\t\t\t]),\n\t\t\tisSimpleWidget: true\n\t\t};\n\n\t\tconst services = new ServiceCollection([IContextKeyService, this.contextKeyService]);\n\t\tconst instantiationService2 = instantiationService.createChild(services, this.disposables);\n\t\tconst editorConstructionOptions = this.inputEditorOptions.getEditorConstructionOptions();\n\t\tthis.inputEditor = instantiationService2.createInstance(CodeEditorWidget, this.editorContainer, editorConstructionOptions, codeEditorWidgetOptions);\n\t\tthis.disposables.add(this.inputEditor);\n\n\t\tthis.disposables.add(this.inputEditor.onDidFocusEditorText(() => {\n\t\t\tif (this.input?.repository) {\n\t\t\t\tthis.scmViewService.focus(this.input.repository);\n\t\t\t}\n\n\t\t\tthis.element.classList.add('synthetic-focus');\n\t\t\tthis.renderValidation();\n\t\t}));\n\t\tthis.disposables.add(this.inputEditor.onDidBlurEditorText(() => {\n\t\t\tthis.element.classList.remove('synthetic-focus');\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!this.validation || !this.validationHasFocus) {\n\t\t\t\t\tthis.clearValidation();\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t}));\n\n\t\tthis.disposables.add(this.inputEditor.onDidBlurEditorWidget(() => {\n\t\t\tCopyPasteController.get(this.inputEditor)?.clearWidgets();\n\t\t\tDropIntoEditorController.get(this.inputEditor)?.clearWidgets();\n\t\t}));\n\n\t\tconst firstLineKey = this.contextKeyService.createKey<boolean>('scmInputIsInFirstPosition', false);\n\t\tconst lastLineKey = this.contextKeyService.createKey<boolean>('scmInputIsInLastPosition', false);\n\n\t\tthis.disposables.add(this.inputEditor.onDidChangeCursorPosition(({ position }) => {\n\t\t\tconst viewModel = this.inputEditor._getViewModel()!;\n\t\t\tconst lastLineNumber = viewModel.getLineCount();\n\t\t\tconst lastLineCol = viewModel.getLineLength(lastLineNumber) + 1;\n\t\t\tconst viewPosition = viewModel.coordinatesConverter.convertModelPositionToViewPosition(position);\n\t\t\tfirstLineKey.set(viewPosition.lineNumber === 1 && viewPosition.column === 1);\n\t\t\tlastLineKey.set(viewPosition.lineNumber === lastLineNumber && viewPosition.column === lastLineCol);\n\t\t}));\n\t\tthis.disposables.add(this.inputEditor.onDidScrollChange(e => {\n\t\t\tthis.toolbarContainer.classList.toggle('scroll-decoration', e.scrollTop > 0);\n\t\t}));\n\n\t\tEvent.filter(this.configurationService.onDidChangeConfiguration, e => e.affectsConfiguration('scm.showInputActionButton'))(() => this.layout(), this, this.disposables);\n\n\t\tthis.onDidChangeContentHeight = Event.signal(Event.filter(this.inputEditor.onDidContentSizeChange, e => e.contentHeightChanged, this.disposables));\n\n\t\t// Toolbar\n\t\tthis.toolbar = instantiationService2.createInstance(SCMInputWidgetToolbar, this.toolbarContainer, {\n\t\t\tactionViewItemProvider: (action, options) => {\n\t\t\t\tif (action instanceof MenuItemAction && this.toolbar.dropdownActions.length > 1) {\n\t\t\t\t\treturn instantiationService.createInstance(DropdownWithPrimaryActionViewItem, action, this.toolbar.dropdownAction, this.toolbar.dropdownActions, '', this.contextMenuService, { actionRunner: this.toolbar.actionRunner, hoverDelegate: options.hoverDelegate });\n\t\t\t\t}\n\n\t\t\t\treturn createActionViewItem(instantiationService, action, options);\n\t\t\t},\n\t\t\tmenuOptions: {\n\t\t\t\tshouldForwardArgs: true\n\t\t\t}\n\t\t});\n\t\tthis.disposables.add(this.toolbar.onDidChange(() => this.layout()));\n\t\tthis.disposables.add(this.toolbar);\n\t}\n\n\tgetContentHeight(): number {\n\t\tconst lineHeight = this.inputEditor.getOption(EditorOption.lineHeight);\n\t\tconst { top, bottom } = this.inputEditor.getOption(EditorOption.padding);\n\n\t\tconst inputMinLinesConfig = this.configurationService.getValue('scm.inputMinLineCount');\n\t\tconst inputMinLines = typeof inputMinLinesConfig === 'number' ? clamp(inputMinLinesConfig, 1, 50) : 1;\n\t\tconst editorMinHeight = inputMinLines * lineHeight + top + bottom;\n\n\t\tconst inputMaxLinesConfig = this.configurationService.getValue('scm.inputMaxLineCount');\n\t\tconst inputMaxLines = typeof inputMaxLinesConfig === 'number' ? clamp(inputMaxLinesConfig, 1, 50) : 10;\n\t\tconst editorMaxHeight = inputMaxLines * lineHeight + top + bottom;\n\n\t\treturn clamp(this.inputEditor.getContentHeight(), editorMinHeight, editorMaxHeight);\n\t}\n\n\tlayout(): void {\n\t\tconst editorHeight = this.getContentHeight();\n\t\tconst toolbarWidth = this.getToolbarWidth();\n\t\tconst dimension = new Dimension(this.element.clientWidth - toolbarWidth, editorHeight);\n\n\t\tif (dimension.width < 0) {\n\t\t\tthis.lastLayoutWasTrash = true;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.lastLayoutWasTrash = false;\n\t\tthis.inputEditor.layout(dimension);\n\t\tthis.renderValidation();\n\n\t\tconst showInputActionButton = this.configurationService.getValue<boolean>('scm.showInputActionButton') === true;\n\t\tthis.toolbarContainer.classList.toggle('hidden', !showInputActionButton || this.toolbar?.isEmpty() === true);\n\n\t\tif (this.shouldFocusAfterLayout) {\n\t\t\tthis.shouldFocusAfterLayout = false;\n\t\t\tthis.focus();\n\t\t}\n\t}\n\n\tfocus(): void {\n\t\tif (this.lastLayoutWasTrash) {\n\t\t\tthis.lastLayoutWasTrash = false;\n\t\t\tthis.shouldFocusAfterLayout = true;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.inputEditor.focus();\n\t\tthis.element.classList.add('synthetic-focus');\n\t}\n\n\thasFocus(): boolean {\n\t\treturn this.inputEditor.hasTextFocus();\n\t}\n\n\tprivate onDidChangeEditorOptions(): void {\n\t\tthis.inputEditor.updateOptions(this.inputEditorOptions.getEditorOptions());\n\t}\n\n\tprivate renderValidation(): void {\n\t\tthis.clearValidation();\n\n\t\tthis.element.classList.toggle('validation-info', this.validation?.type === InputValidationType.Information);\n\t\tthis.element.classList.toggle('validation-warning', this.validation?.type === InputValidationType.Warning);\n\t\tthis.element.classList.toggle('validation-error', this.validation?.type === InputValidationType.Error);\n\n\t\tif (!this.validation || !this.inputEditor.hasTextFocus()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\n\t\tthis.validationContextView = this.contextViewService.showContextView({\n\t\t\tgetAnchor: () => this.element,\n\t\t\trender: container => {\n\t\t\t\tthis.element.style.borderBottomLeftRadius = '0';\n\t\t\t\tthis.element.style.borderBottomRightRadius = '0';\n\n\t\t\t\tconst validationContainer = append(container, $('.scm-editor-validation-container'));\n\t\t\t\tvalidationContainer.classList.toggle('validation-info', this.validation!.type === InputValidationType.Information);\n\t\t\t\tvalidationContainer.classList.toggle('validation-warning', this.validation!.type === InputValidationType.Warning);\n\t\t\t\tvalidationContainer.classList.toggle('validation-error', this.validation!.type === InputValidationType.Error);\n\t\t\t\tvalidationContainer.style.width = `${this.element.clientWidth + 2}px`;\n\t\t\t\tconst element = append(validationContainer, $('.scm-editor-validation'));\n\n\t\t\t\tconst message = this.validation!.message;\n\t\t\t\tif (typeof message === 'string') {\n\t\t\t\t\telement.textContent = message;\n\t\t\t\t} else {\n\t\t\t\t\tconst tracker = trackFocus(element);\n\t\t\t\t\tdisposables.add(tracker);\n\t\t\t\t\tdisposables.add(tracker.onDidFocus(() => (this.validationHasFocus = true)));\n\t\t\t\t\tdisposables.add(tracker.onDidBlur(() => {\n\t\t\t\t\t\tthis.validationHasFocus = false;\n\t\t\t\t\t\tthis.element.style.borderBottomLeftRadius = '2px';\n\t\t\t\t\t\tthis.element.style.borderBottomRightRadius = '2px';\n\t\t\t\t\t\tthis.contextViewService.hideContextView();\n\t\t\t\t\t}));\n\n\t\t\t\t\tconst renderer = disposables.add(this.instantiationService.createInstance(MarkdownRenderer, {}));\n\t\t\t\t\tconst renderedMarkdown = renderer.render(message, {\n\t\t\t\t\t\tactionHandler: {\n\t\t\t\t\t\t\tcallback: (link) => {\n\t\t\t\t\t\t\t\topenLinkFromMarkdown(this.openerService, link, message.isTrusted);\n\t\t\t\t\t\t\t\tthis.element.style.borderBottomLeftRadius = '2px';\n\t\t\t\t\t\t\t\tthis.element.style.borderBottomRightRadius = '2px';\n\t\t\t\t\t\t\t\tthis.contextViewService.hideContextView();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdisposables: disposables\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\tdisposables.add(renderedMarkdown);\n\t\t\t\t\telement.appendChild(renderedMarkdown.element);\n\t\t\t\t}\n\t\t\t\tconst actionsContainer = append(validationContainer, $('.scm-editor-validation-actions'));\n\t\t\t\tconst actionbar = new ActionBar(actionsContainer);\n\t\t\t\tconst action = new Action('scmInputWidget.validationMessage.close', localize('label.close', \"Close\"), ThemeIcon.asClassName(Codicon.close), true, () => {\n\t\t\t\t\tthis.contextViewService.hideContextView();\n\t\t\t\t\tthis.element.style.borderBottomLeftRadius = '2px';\n\t\t\t\t\tthis.element.style.borderBottomRightRadius = '2px';\n\t\t\t\t});\n\t\t\t\tdisposables.add(actionbar);\n\t\t\t\tactionbar.push(action, { icon: true, label: false });\n\n\t\t\t\treturn Disposable.None;\n\t\t\t},\n\t\t\tonHide: () => {\n\t\t\t\tthis.validationHasFocus = false;\n\t\t\t\tthis.element.style.borderBottomLeftRadius = '2px';\n\t\t\t\tthis.element.style.borderBottomRightRadius = '2px';\n\t\t\t\tdisposables.dispose();\n\t\t\t},\n\t\t\tanchorAlignment: AnchorAlignment.LEFT\n\t\t});\n\t}\n\n\tprivate getToolbarWidth(): number {\n\t\tconst showInputActionButton = this.configurationService.getValue<boolean>('scm.showInputActionButton');\n\t\tif (!this.toolbar || !showInputActionButton || this.toolbar?.isEmpty() === true) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn this.toolbar.dropdownActions.length === 0 ?\n\t\t\t26 /* 22px action + 4px margin */ :\n\t\t\t39 /* 35px action + 4px margin */;\n\t}\n\n\tclearValidation(): void {\n\t\tthis.validationContextView?.close();\n\t\tthis.validationContextView = undefined;\n\t\tthis.validationHasFocus = false;\n\t}\n\n\tdispose(): void {\n\t\tthis.input = undefined;\n\t\tthis.repositoryDisposables.dispose();\n\t\tthis.clearValidation();\n\t\tthis.disposables.dispose();\n\t}\n}\n\nexport class SCMViewPane extends ViewPane {\n\n\tprivate _onDidLayout: Emitter<void>;\n\tprivate layoutCache: ISCMLayout;\n\n\tprivate treeScrollTop: number | undefined;\n\tprivate treeContainer!: HTMLElement;\n\tprivate tree!: WorkbenchCompressibleAsyncDataTree<ISCMViewService, TreeElement, FuzzyScore>;\n\n\tprivate listLabels!: ResourceLabels;\n\tprivate inputRenderer!: InputRenderer;\n\tprivate actionButtonRenderer!: ActionButtonRenderer;\n\n\tprivate _viewMode: ViewMode;\n\tget viewMode(): ViewMode { return this._viewMode; }\n\tset viewMode(mode: ViewMode) {\n\t\tif (this._viewMode === mode) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._viewMode = mode;\n\n\t\t// Update sort key based on view mode\n\t\tthis.viewSortKey = this.getViewSortKey();\n\n\t\tthis.updateChildren();\n\t\tthis.onDidActiveEditorChange();\n\t\tthis._onDidChangeViewMode.fire(mode);\n\t\tthis.viewModeContextKey.set(mode);\n\n\t\tthis.updateIndentStyles(this.themeService.getFileIconTheme());\n\t\tthis.storageService.store(`scm.viewMode`, mode, StorageScope.WORKSPACE, StorageTarget.USER);\n\t}\n\n\tprivate readonly _onDidChangeViewMode = new Emitter<ViewMode>();\n\treadonly onDidChangeViewMode = this._onDidChangeViewMode.event;\n\n\tprivate _viewSortKey: ViewSortKey;\n\tget viewSortKey(): ViewSortKey { return this._viewSortKey; }\n\tset viewSortKey(sortKey: ViewSortKey) {\n\t\tif (this._viewSortKey === sortKey) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._viewSortKey = sortKey;\n\n\t\tthis.updateChildren();\n\t\tthis.viewSortKeyContextKey.set(sortKey);\n\t\tthis._onDidChangeViewSortKey.fire(sortKey);\n\n\t\tif (this._viewMode === ViewMode.List) {\n\t\t\tthis.storageService.store(`scm.viewSortKey`, sortKey, StorageScope.WORKSPACE, StorageTarget.USER);\n\t\t}\n\t}\n\n\tprivate readonly _onDidChangeViewSortKey = new Emitter<ViewSortKey>();\n\treadonly onDidChangeViewSortKey = this._onDidChangeViewSortKey.event;\n\n\tprivate readonly items = new DisposableMap<ISCMRepository, IDisposable>();\n\tprivate readonly visibilityDisposables = new DisposableStore();\n\n\tprivate readonly treeOperationSequencer = new Sequencer();\n\tprivate readonly revealResourceThrottler = new Throttler();\n\tprivate readonly updateChildrenThrottler = new Throttler();\n\n\tprivate viewModeContextKey: IContextKey<ViewMode>;\n\tprivate viewSortKeyContextKey: IContextKey<ViewSortKey>;\n\tprivate areAllRepositoriesCollapsedContextKey: IContextKey<boolean>;\n\tprivate isAnyRepositoryCollapsibleContextKey: IContextKey<boolean>;\n\n\tprivate scmProviderContextKey: IContextKey<string | undefined>;\n\tprivate scmProviderRootUriContextKey: IContextKey<string | undefined>;\n\tprivate scmProviderHasRootUriContextKey: IContextKey<boolean>;\n\n\tprivate readonly disposables = new DisposableStore();\n\n\tconstructor(\n\t\toptions: IViewPaneOptions,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@ISCMService private readonly scmService: ISCMService,\n\t\t@ISCMViewService private readonly scmViewService: ISCMViewService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IHoverService hoverService: IHoverService,\n\t) {\n\t\tsuper({ ...options, titleMenuId: MenuId.SCMTitle }, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService, hoverService);\n\n\t\t// View mode and sort key\n\t\tthis._viewMode = this.getViewMode();\n\t\tthis._viewSortKey = this.getViewSortKey();\n\n\t\t// Context Keys\n\t\tthis.viewModeContextKey = ContextKeys.SCMViewMode.bindTo(contextKeyService);\n\t\tthis.viewModeContextKey.set(this._viewMode);\n\t\tthis.viewSortKeyContextKey = ContextKeys.SCMViewSortKey.bindTo(contextKeyService);\n\t\tthis.viewSortKeyContextKey.set(this.viewSortKey);\n\t\tthis.areAllRepositoriesCollapsedContextKey = ContextKeys.SCMViewAreAllRepositoriesCollapsed.bindTo(contextKeyService);\n\t\tthis.isAnyRepositoryCollapsibleContextKey = ContextKeys.SCMViewIsAnyRepositoryCollapsible.bindTo(contextKeyService);\n\t\tthis.scmProviderContextKey = ContextKeys.SCMProvider.bindTo(contextKeyService);\n\t\tthis.scmProviderRootUriContextKey = ContextKeys.SCMProviderRootUri.bindTo(contextKeyService);\n\t\tthis.scmProviderHasRootUriContextKey = ContextKeys.SCMProviderHasRootUri.bindTo(contextKeyService);\n\n\t\tthis._onDidLayout = new Emitter<void>();\n\t\tthis.layoutCache = { height: undefined, width: undefined, onDidChange: this._onDidLayout.event };\n\n\t\tthis.storageService.onDidChangeValue(StorageScope.WORKSPACE, undefined, this.disposables)(e => {\n\t\t\tswitch (e.key) {\n\t\t\t\tcase 'scm.viewMode':\n\t\t\t\t\tthis.viewMode = this.getViewMode();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'scm.viewSortKey':\n\t\t\t\t\tthis.viewSortKey = this.getViewSortKey();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}, this, this.disposables);\n\n\t\tthis.storageService.onWillSaveState(e => {\n\t\t\tthis.viewMode = this.getViewMode();\n\t\t\tthis.viewSortKey = this.getViewSortKey();\n\n\t\t\tthis.storeTreeViewState();\n\t\t}, this, this.disposables);\n\n\t\tEvent.any(this.scmService.onDidAddRepository, this.scmService.onDidRemoveRepository)(() => this._onDidChangeViewWelcomeState.fire(), this, this.disposables);\n\n\t\tthis.disposables.add(this.revealResourceThrottler);\n\t\tthis.disposables.add(this.updateChildrenThrottler);\n\t}\n\n\tprotected override layoutBody(height: number | undefined = this.layoutCache.height, width: number | undefined = this.layoutCache.width): void {\n\t\tif (height === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (width !== undefined) {\n\t\t\tsuper.layoutBody(height, width);\n\t\t}\n\n\t\tthis.layoutCache.height = height;\n\t\tthis.layoutCache.width = width;\n\t\tthis._onDidLayout.fire();\n\n\t\tthis.treeContainer.style.height = `${height}px`;\n\t\tthis.tree.layout(height, width);\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\t// Tree\n\t\tthis.treeContainer = append(container, $('.scm-view.show-file-icons'));\n\t\tthis.treeContainer.classList.add('file-icon-themable-tree');\n\t\tthis.treeContainer.classList.add('show-file-icons');\n\n\t\tconst updateActionsVisibility = () => this.treeContainer.classList.toggle('show-actions', this.configurationService.getValue<boolean>('scm.alwaysShowActions'));\n\t\tEvent.filter(this.configurationService.onDidChangeConfiguration, e => e.affectsConfiguration('scm.alwaysShowActions'), this.disposables)(updateActionsVisibility, this, this.disposables);\n\t\tupdateActionsVisibility();\n\n\t\tconst updateProviderCountVisibility = () => {\n\t\t\tconst value = this.configurationService.getValue<'hidden' | 'auto' | 'visible'>('scm.providerCountBadge');\n\t\t\tthis.treeContainer.classList.toggle('hide-provider-counts', value === 'hidden');\n\t\t\tthis.treeContainer.classList.toggle('auto-provider-counts', value === 'auto');\n\t\t};\n\t\tEvent.filter(this.configurationService.onDidChangeConfiguration, e => e.affectsConfiguration('scm.providerCountBadge'), this.disposables)(updateProviderCountVisibility, this, this.disposables);\n\t\tupdateProviderCountVisibility();\n\n\t\tconst viewState = this.loadTreeViewState();\n\t\tthis.createTree(this.treeContainer, viewState);\n\n\t\tthis.onDidChangeBodyVisibility(async visible => {\n\t\t\tif (visible) {\n\t\t\t\tthis.treeOperationSequencer.queue(async () => {\n\t\t\t\t\tawait this.tree.setInput(this.scmViewService, viewState);\n\n\t\t\t\t\tEvent.filter(this.configurationService.onDidChangeConfiguration,\n\t\t\t\t\t\te =>\n\t\t\t\t\t\t\te.affectsConfiguration('scm.alwaysShowRepositories'),\n\t\t\t\t\t\tthis.visibilityDisposables)\n\t\t\t\t\t\t(() => {\n\t\t\t\t\t\t\tthis.updateActions();\n\t\t\t\t\t\t\tthis.updateChildren();\n\t\t\t\t\t\t}, this, this.visibilityDisposables);\n\n\t\t\t\t\tEvent.filter(this.configurationService.onDidChangeConfiguration,\n\t\t\t\t\t\te =>\n\t\t\t\t\t\t\te.affectsConfiguration('scm.inputMinLineCount') ||\n\t\t\t\t\t\t\te.affectsConfiguration('scm.inputMaxLineCount') ||\n\t\t\t\t\t\t\te.affectsConfiguration('scm.showActionButton'),\n\t\t\t\t\t\tthis.visibilityDisposables)\n\t\t\t\t\t\t(() => this.updateChildren(), this, this.visibilityDisposables);\n\n\t\t\t\t\t// Add visible repositories\n\t\t\t\t\tthis.editorService.onDidActiveEditorChange(this.onDidActiveEditorChange, this, this.visibilityDisposables);\n\t\t\t\t\tthis.scmViewService.onDidChangeVisibleRepositories(this.onDidChangeVisibleRepositories, this, this.visibilityDisposables);\n\t\t\t\t\tthis.onDidChangeVisibleRepositories({ added: this.scmViewService.visibleRepositories, removed: Iterable.empty() });\n\n\t\t\t\t\t// Restore scroll position\n\t\t\t\t\tif (typeof this.treeScrollTop === 'number') {\n\t\t\t\t\t\tthis.tree.scrollTop = this.treeScrollTop;\n\t\t\t\t\t\tthis.treeScrollTop = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.updateRepositoryCollapseAllContextKeys();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.visibilityDisposables.clear();\n\t\t\t\tthis.onDidChangeVisibleRepositories({ added: Iterable.empty(), removed: [...this.items.keys()] });\n\t\t\t\tthis.treeScrollTop = this.tree.scrollTop;\n\n\t\t\t\tthis.updateRepositoryCollapseAllContextKeys();\n\t\t\t}\n\t\t}, this, this.disposables);\n\n\t\tthis.disposables.add(this.instantiationService.createInstance(RepositoryVisibilityActionController));\n\n\t\tthis.themeService.onDidFileIconThemeChange(this.updateIndentStyles, this, this.disposables);\n\t\tthis.updateIndentStyles(this.themeService.getFileIconTheme());\n\t}\n\n\tprivate createTree(container: HTMLElement, viewState?: IAsyncDataTreeViewState): void {\n\t\tconst overflowWidgetsDomNode = $('.scm-overflow-widgets-container.monaco-editor');\n\n\t\tthis.inputRenderer = this.instantiationService.createInstance(InputRenderer, this.layoutCache, overflowWidgetsDomNode, (input, height) => {\n\t\t\ttry {\n\t\t\t\t// Attempt to update the input element height. There is an\n\t\t\t\t// edge case where the input has already been disposed and\n\t\t\t\t// updating the height would fail.\n\t\t\t\tthis.tree.updateElementHeight(input, height);\n\t\t\t}\n\t\t\tcatch { }\n\t\t});\n\t\tthis.actionButtonRenderer = this.instantiationService.createInstance(ActionButtonRenderer);\n\n\t\tthis.listLabels = this.instantiationService.createInstance(ResourceLabels, { onDidChangeVisibility: this.onDidChangeBodyVisibility });\n\t\tthis.disposables.add(this.listLabels);\n\n\t\tconst resourceActionRunner = new RepositoryPaneActionRunner(() => this.getSelectedResources());\n\t\tresourceActionRunner.onWillRun(() => this.tree.domFocus(), this, this.disposables);\n\t\tthis.disposables.add(resourceActionRunner);\n\n\t\tconst treeDataSource = this.instantiationService.createInstance(SCMTreeDataSource, () => this.viewMode);\n\t\tthis.disposables.add(treeDataSource);\n\n\t\tconst compressionEnabled = observableConfigValue('scm.compactFolders', true, this.configurationService);\n\n\t\tthis.tree = this.instantiationService.createInstance(\n\t\t\tWorkbenchCompressibleAsyncDataTree,\n\t\t\t'SCM Tree Repo',\n\t\t\tcontainer,\n\t\t\tnew ListDelegate(this.inputRenderer),\n\t\t\tnew SCMTreeCompressionDelegate(),\n\t\t\t[\n\t\t\t\tthis.inputRenderer,\n\t\t\t\tthis.actionButtonRenderer,\n\t\t\t\tthis.instantiationService.createInstance(RepositoryRenderer, MenuId.SCMTitle, getActionViewItemProvider(this.instantiationService)),\n\t\t\t\tthis.instantiationService.createInstance(ResourceGroupRenderer, getActionViewItemProvider(this.instantiationService)),\n\t\t\t\tthis.instantiationService.createInstance(ResourceRenderer, () => this.viewMode, this.listLabels, getActionViewItemProvider(this.instantiationService), resourceActionRunner)\n\t\t\t],\n\t\t\ttreeDataSource,\n\t\t\t{\n\t\t\t\thorizontalScrolling: false,\n\t\t\t\tsetRowLineHeight: false,\n\t\t\t\ttransformOptimization: false,\n\t\t\t\tfilter: new SCMTreeFilter(),\n\t\t\t\tdnd: new SCMTreeDragAndDrop(this.instantiationService),\n\t\t\t\tidentityProvider: new SCMResourceIdentityProvider(),\n\t\t\t\tsorter: new SCMTreeSorter(() => this.viewMode, () => this.viewSortKey),\n\t\t\t\tkeyboardNavigationLabelProvider: this.instantiationService.createInstance(SCMTreeKeyboardNavigationLabelProvider, () => this.viewMode),\n\t\t\t\toverrideStyles: this.getLocationBasedColors().listOverrideStyles,\n\t\t\t\tcompressionEnabled: compressionEnabled.get(),\n\t\t\t\tcollapseByDefault: (e: unknown) => {\n\t\t\t\t\t// Repository, Resource Group, Resource Folder (Tree)\n\t\t\t\t\tif (isSCMRepository(e) || isSCMResourceGroup(e) || isSCMResourceNode(e)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// History Item Group, History Item, or History Item Change\n\t\t\t\t\treturn (viewState?.expanded ?? []).indexOf(getSCMResourceId(e as TreeElement)) === -1;\n\t\t\t\t},\n\t\t\t\taccessibilityProvider: this.instantiationService.createInstance(SCMAccessibilityProvider)\n\t\t\t}) as WorkbenchCompressibleAsyncDataTree<ISCMViewService, TreeElement, FuzzyScore>;\n\n\t\tthis.disposables.add(this.tree);\n\n\t\tthis.tree.onDidOpen(this.open, this, this.disposables);\n\t\tthis.tree.onContextMenu(this.onListContextMenu, this, this.disposables);\n\t\tthis.tree.onDidScroll(this.inputRenderer.clearValidation, this.inputRenderer, this.disposables);\n\t\tEvent.filter(this.tree.onDidChangeCollapseState, e => isSCMRepository(e.node.element?.element), this.disposables)(this.updateRepositoryCollapseAllContextKeys, this, this.disposables);\n\n\t\tthis.disposables.add(autorun(reader => {\n\t\t\tthis.tree.updateOptions({\n\t\t\t\tcompressionEnabled: compressionEnabled.read(reader)\n\t\t\t});\n\t\t}));\n\n\t\tappend(container, overflowWidgetsDomNode);\n\t}\n\n\tprivate async open(e: IOpenEvent<TreeElement | undefined>): Promise<void> {\n\t\tif (!e.element) {\n\t\t\treturn;\n\t\t} else if (isSCMRepository(e.element)) {\n\t\t\tthis.scmViewService.focus(e.element);\n\t\t\treturn;\n\t\t} else if (isSCMInput(e.element)) {\n\t\t\tthis.scmViewService.focus(e.element.repository);\n\n\t\t\tconst widget = this.inputRenderer.getRenderedInputWidget(e.element);\n\n\t\t\tif (widget) {\n\t\t\t\twidget.focus();\n\t\t\t\tthis.tree.setFocus([], e.browserEvent);\n\n\t\t\t\tconst selection = this.tree.getSelection();\n\n\t\t\t\tif (selection.length === 1 && selection[0] === e.element) {\n\t\t\t\t\tsetTimeout(() => this.tree.setSelection([]));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t} else if (isSCMActionButton(e.element)) {\n\t\t\tthis.scmViewService.focus(e.element.repository);\n\n\t\t\t// Focus the action button\n\t\t\tthis.actionButtonRenderer.focusActionButton(e.element);\n\t\t\tthis.tree.setFocus([], e.browserEvent);\n\n\t\t\treturn;\n\t\t} else if (isSCMResourceGroup(e.element)) {\n\t\t\tconst provider = e.element.provider;\n\t\t\tconst repository = Iterable.find(this.scmService.repositories, r => r.provider === provider);\n\t\t\tif (repository) {\n\t\t\t\tthis.scmViewService.focus(repository);\n\t\t\t}\n\t\t\treturn;\n\t\t} else if (isSCMResource(e.element)) {\n\t\t\tif (e.element.command?.id === API_OPEN_EDITOR_COMMAND_ID || e.element.command?.id === API_OPEN_DIFF_EDITOR_COMMAND_ID) {\n\t\t\t\tif (isPointerEvent(e.browserEvent) && e.browserEvent.button === 1) {\n\t\t\t\t\tconst resourceGroup = e.element.resourceGroup;\n\t\t\t\t\tconst title = `${resourceGroup.provider.label}: ${resourceGroup.label}`;\n\t\t\t\t\tawait OpenScmGroupAction.openMultiFileDiffEditor(this.editorService, title, resourceGroup.provider.rootUri, resourceGroup.id, {\n\t\t\t\t\t\t...e.editorOptions,\n\t\t\t\t\t\tviewState: {\n\t\t\t\t\t\t\trevealData: {\n\t\t\t\t\t\t\t\tresource: {\n\t\t\t\t\t\t\t\t\toriginal: e.element.multiDiffEditorOriginalUri,\n\t\t\t\t\t\t\t\t\tmodified: e.element.multiDiffEditorModifiedUri,\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpreserveFocus: true,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tawait this.commandService.executeCommand(e.element.command.id, ...(e.element.command.arguments || []), e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tawait e.element.open(!!e.editorOptions.preserveFocus);\n\n\t\t\t\tif (e.editorOptions.pinned) {\n\t\t\t\t\tconst activeEditorPane = this.editorService.activeEditorPane;\n\n\t\t\t\t\tactiveEditorPane?.group.pinEditor(activeEditorPane.input);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst provider = e.element.resourceGroup.provider;\n\t\t\tconst repository = Iterable.find(this.scmService.repositories, r => r.provider === provider);\n\n\t\t\tif (repository) {\n\t\t\t\tthis.scmViewService.focus(repository);\n\t\t\t}\n\t\t} else if (isSCMResourceNode(e.element)) {\n\t\t\tconst provider = e.element.context.provider;\n\t\t\tconst repository = Iterable.find(this.scmService.repositories, r => r.provider === provider);\n\t\t\tif (repository) {\n\t\t\t\tthis.scmViewService.focus(repository);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t}\n\n\tprivate onDidActiveEditorChange(): void {\n\t\tif (!this.configurationService.getValue<boolean>('scm.autoReveal')) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst uri = EditorResourceAccessor.getOriginalUri(this.editorService.activeEditor, { supportSideBySide: SideBySideEditor.PRIMARY });\n\n\t\tif (!uri) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not set focus/selection when the resource is already focused and selected\n\t\tif (this.tree.getFocus().some(e => isSCMResource(e) && this.uriIdentityService.extUri.isEqual(e.sourceUri, uri)) &&\n\t\t\tthis.tree.getSelection().some(e => isSCMResource(e) && this.uriIdentityService.extUri.isEqual(e.sourceUri, uri))) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.revealResourceThrottler.queue(\n\t\t\t() => this.treeOperationSequencer.queue(\n\t\t\t\tasync () => {\n\t\t\t\t\tfor (const repository of this.scmViewService.visibleRepositories) {\n\t\t\t\t\t\tconst item = this.items.get(repository);\n\n\t\t\t\t\t\tif (!item) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// go backwards from last group\n\t\t\t\t\t\tfor (let j = repository.provider.groups.length - 1; j >= 0; j--) {\n\t\t\t\t\t\t\tconst groupItem = repository.provider.groups[j];\n\t\t\t\t\t\t\tconst resource = this.viewMode === ViewMode.Tree\n\t\t\t\t\t\t\t\t? groupItem.resourceTree.getNode(uri)?.element\n\t\t\t\t\t\t\t\t: groupItem.resources.find(r => this.uriIdentityService.extUri.isEqual(r.sourceUri, uri));\n\n\t\t\t\t\t\t\tif (resource) {\n\t\t\t\t\t\t\t\tawait this.tree.expandTo(resource);\n\t\t\t\t\t\t\t\tthis.tree.reveal(resource);\n\n\t\t\t\t\t\t\t\tthis.tree.setSelection([resource]);\n\t\t\t\t\t\t\t\tthis.tree.setFocus([resource]);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}));\n\t}\n\n\tprivate onDidChangeVisibleRepositories({ added, removed }: ISCMViewVisibleRepositoryChangeEvent): void {\n\t\t// Added repositories\n\t\tfor (const repository of added) {\n\t\t\tconst repositoryDisposables = new DisposableStore();\n\n\t\t\trepositoryDisposables.add(repository.provider.onDidChange(() => this.updateChildren(repository)));\n\t\t\trepositoryDisposables.add(repository.input.onDidChangeVisibility(() => this.updateChildren(repository)));\n\t\t\trepositoryDisposables.add(repository.provider.onDidChangeResourceGroups(() => this.updateChildren(repository)));\n\n\t\t\tconst resourceGroupDisposables = repositoryDisposables.add(new DisposableMap<ISCMResourceGroup, IDisposable>());\n\n\t\t\tconst onDidChangeResourceGroups = () => {\n\t\t\t\tfor (const [resourceGroup] of resourceGroupDisposables) {\n\t\t\t\t\tif (!repository.provider.groups.includes(resourceGroup)) {\n\t\t\t\t\t\tresourceGroupDisposables.deleteAndDispose(resourceGroup);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (const resourceGroup of repository.provider.groups) {\n\t\t\t\t\tif (!resourceGroupDisposables.has(resourceGroup)) {\n\t\t\t\t\t\tconst disposableStore = new DisposableStore();\n\n\t\t\t\t\t\tdisposableStore.add(resourceGroup.onDidChange(() => this.updateChildren(repository)));\n\t\t\t\t\t\tdisposableStore.add(resourceGroup.onDidChangeResources(() => this.updateChildren(repository)));\n\t\t\t\t\t\tresourceGroupDisposables.set(resourceGroup, disposableStore);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\trepositoryDisposables.add(repository.provider.onDidChangeResourceGroups(onDidChangeResourceGroups));\n\t\t\tonDidChangeResourceGroups();\n\n\t\t\tthis.items.set(repository, repositoryDisposables);\n\t\t}\n\n\t\t// Removed repositories\n\t\tfor (const repository of removed) {\n\t\t\tthis.items.deleteAndDispose(repository);\n\t\t}\n\n\t\tthis.updateChildren();\n\t\tthis.onDidActiveEditorChange();\n\t}\n\n\tprivate onListContextMenu(e: ITreeContextMenuEvent<TreeElement | null>): void {\n\t\tif (!e.element) {\n\t\t\tconst menu = this.menuService.getMenuActions(Menus.ViewSort, this.contextKeyService);\n\t\t\tconst actions: IAction[] = [];\n\t\t\tcreateAndFillInContextMenuActions(menu, actions);\n\n\t\t\treturn this.contextMenuService.showContextMenu({\n\t\t\t\tgetAnchor: () => e.anchor,\n\t\t\t\tgetActions: () => actions,\n\t\t\t\tonHide: () => { }\n\t\t\t});\n\t\t}\n\n\t\tconst element = e.element;\n\t\tlet context: any = element;\n\t\tlet actions: IAction[] = [];\n\t\tlet actionRunner: IActionRunner = new RepositoryPaneActionRunner(() => this.getSelectedResources());\n\n\t\tif (isSCMRepository(element)) {\n\t\t\tconst menus = this.scmViewService.menus.getRepositoryMenus(element.provider);\n\t\t\tconst menu = menus.repositoryContextMenu;\n\t\t\tcontext = element.provider;\n\t\t\tactionRunner = new RepositoryActionRunner(() => this.getSelectedRepositories());\n\t\t\tactions = collectContextMenuActions(menu);\n\t\t} else if (isSCMInput(element) || isSCMActionButton(element)) {\n\t\t\t// noop\n\t\t} else if (isSCMResourceGroup(element)) {\n\t\t\tconst menus = this.scmViewService.menus.getRepositoryMenus(element.provider);\n\t\t\tconst menu = menus.getResourceGroupMenu(element);\n\t\t\tactions = collectContextMenuActions(menu);\n\t\t} else if (isSCMResource(element)) {\n\t\t\tconst menus = this.scmViewService.menus.getRepositoryMenus(element.resourceGroup.provider);\n\t\t\tconst menu = menus.getResourceMenu(element);\n\t\t\tactions = collectContextMenuActions(menu);\n\t\t} else if (isSCMResourceNode(element)) {\n\t\t\tif (element.element) {\n\t\t\t\tconst menus = this.scmViewService.menus.getRepositoryMenus(element.element.resourceGroup.provider);\n\t\t\t\tconst menu = menus.getResourceMenu(element.element);\n\t\t\t\tactions = collectContextMenuActions(menu);\n\t\t\t} else {\n\t\t\t\tconst menus = this.scmViewService.menus.getRepositoryMenus(element.context.provider);\n\t\t\t\tconst menu = menus.getResourceFolderMenu(element.context);\n\t\t\t\tactions = collectContextMenuActions(menu);\n\t\t\t}\n\t\t}\n\n\t\tactionRunner.onWillRun(() => this.tree.domFocus());\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => e.anchor,\n\t\t\tgetActions: () => actions,\n\t\t\tgetActionsContext: () => context,\n\t\t\tactionRunner\n\t\t});\n\t}\n\n\tprivate getSelectedRepositories(): ISCMRepository[] {\n\t\tconst focusedRepositories = this.tree.getFocus().filter(r => !!r && isSCMRepository(r))! as ISCMRepository[];\n\t\tconst selectedRepositories = this.tree.getSelection().filter(r => !!r && isSCMRepository(r))! as ISCMRepository[];\n\n\t\treturn Array.from(new Set<ISCMRepository>([...focusedRepositories, ...selectedRepositories]));\n\t}\n\n\tprivate getSelectedResources(): (ISCMResource | IResourceNode<ISCMResource, ISCMResourceGroup>)[] {\n\t\treturn this.tree.getSelection()\n\t\t\t.filter(r => !!r && !isSCMResourceGroup(r))! as any;\n\t}\n\n\tprivate getViewMode(): ViewMode {\n\t\tlet mode = this.configurationService.getValue<'tree' | 'list'>('scm.defaultViewMode') === 'list' ? ViewMode.List : ViewMode.Tree;\n\t\tconst storageMode = this.storageService.get(`scm.viewMode`, StorageScope.WORKSPACE) as ViewMode;\n\t\tif (typeof storageMode === 'string') {\n\t\t\tmode = storageMode;\n\t\t}\n\n\t\treturn mode;\n\t}\n\n\tprivate getViewSortKey(): ViewSortKey {\n\t\t// Tree\n\t\tif (this._viewMode === ViewMode.Tree) {\n\t\t\treturn ViewSortKey.Path;\n\t\t}\n\n\t\t// List\n\t\tlet viewSortKey: ViewSortKey;\n\t\tconst viewSortKeyString = this.configurationService.getValue<'path' | 'name' | 'status'>('scm.defaultViewSortKey');\n\t\tswitch (viewSortKeyString) {\n\t\t\tcase 'name':\n\t\t\t\tviewSortKey = ViewSortKey.Name;\n\t\t\t\tbreak;\n\t\t\tcase 'status':\n\t\t\t\tviewSortKey = ViewSortKey.Status;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tviewSortKey = ViewSortKey.Path;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst storageSortKey = this.storageService.get(`scm.viewSortKey`, StorageScope.WORKSPACE) as ViewSortKey;\n\t\tif (typeof storageSortKey === 'string') {\n\t\t\tviewSortKey = storageSortKey;\n\t\t}\n\n\t\treturn viewSortKey;\n\t}\n\n\tprivate loadTreeViewState(): IAsyncDataTreeViewState | undefined {\n\t\tconst storageViewState = this.storageService.get('scm.viewState2', StorageScope.WORKSPACE);\n\t\tif (!storageViewState) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\ttry {\n\t\t\tconst treeViewState = JSON.parse(storageViewState);\n\t\t\treturn treeViewState;\n\t\t} catch {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tprivate storeTreeViewState() {\n\t\tif (this.tree) {\n\t\t\tthis.storageService.store('scm.viewState2', JSON.stringify(this.tree.getViewState()), StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\t}\n\t}\n\n\tprivate updateChildren(element?: ISCMRepository) {\n\t\tthis.updateChildrenThrottler.queue(\n\t\t\t() => this.treeOperationSequencer.queue(\n\t\t\t\tasync () => {\n\t\t\t\t\tconst focusedInput = this.inputRenderer.getFocusedInput();\n\n\t\t\t\t\tif (element && this.tree.hasNode(element)) {\n\t\t\t\t\t\t// Refresh specific repository\n\t\t\t\t\t\tawait this.tree.updateChildren(element);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Refresh the entire tree\n\t\t\t\t\t\tawait this.tree.updateChildren(undefined);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (focusedInput) {\n\t\t\t\t\t\tthis.inputRenderer.getRenderedInputWidget(focusedInput)?.focus();\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.updateScmProviderContextKeys();\n\t\t\t\t\tthis.updateRepositoryCollapseAllContextKeys();\n\t\t\t\t}));\n\t}\n\n\tprivate updateIndentStyles(theme: IFileIconTheme): void {\n\t\tthis.treeContainer.classList.toggle('list-view-mode', this.viewMode === ViewMode.List);\n\t\tthis.treeContainer.classList.toggle('tree-view-mode', this.viewMode === ViewMode.Tree);\n\t\tthis.treeContainer.classList.toggle('align-icons-and-twisties', (this.viewMode === ViewMode.List && theme.hasFileIcons) || (theme.hasFileIcons && !theme.hasFolderIcons));\n\t\tthis.treeContainer.classList.toggle('hide-arrows', this.viewMode === ViewMode.Tree && theme.hidesExplorerArrows === true);\n\t}\n\n\tprivate updateScmProviderContextKeys(): void {\n\t\tconst alwaysShowRepositories = this.configurationService.getValue<boolean>('scm.alwaysShowRepositories');\n\n\t\tif (!alwaysShowRepositories && this.items.size === 1) {\n\t\t\tconst provider = Iterable.first(this.items.keys())!.provider;\n\t\t\tthis.scmProviderContextKey.set(provider.contextValue);\n\t\t\tthis.scmProviderRootUriContextKey.set(provider.rootUri?.toString());\n\t\t\tthis.scmProviderHasRootUriContextKey.set(!!provider.rootUri);\n\t\t} else {\n\t\t\tthis.scmProviderContextKey.set(undefined);\n\t\t\tthis.scmProviderRootUriContextKey.set(undefined);\n\t\t\tthis.scmProviderHasRootUriContextKey.set(false);\n\t\t}\n\t}\n\n\tprivate updateRepositoryCollapseAllContextKeys(): void {\n\t\tif (!this.isBodyVisible() || this.items.size === 1) {\n\t\t\tthis.isAnyRepositoryCollapsibleContextKey.set(false);\n\t\t\tthis.areAllRepositoriesCollapsedContextKey.set(false);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.isAnyRepositoryCollapsibleContextKey.set(this.scmViewService.visibleRepositories.some(r => this.tree.hasNode(r) && this.tree.isCollapsible(r)));\n\t\tthis.areAllRepositoriesCollapsedContextKey.set(this.scmViewService.visibleRepositories.every(r => this.tree.hasNode(r) && (!this.tree.isCollapsible(r) || this.tree.isCollapsed(r))));\n\t}\n\n\tcollapseAllRepositories(): void {\n\t\tfor (const repository of this.scmViewService.visibleRepositories) {\n\t\t\tif (this.tree.isCollapsible(repository)) {\n\t\t\t\tthis.tree.collapse(repository);\n\t\t\t}\n\t\t}\n\t}\n\n\texpandAllRepositories(): void {\n\t\tfor (const repository of this.scmViewService.visibleRepositories) {\n\t\t\tif (this.tree.isCollapsible(repository)) {\n\t\t\t\tthis.tree.expand(repository);\n\t\t\t}\n\t\t}\n\t}\n\n\tfocusPreviousInput(): void {\n\t\tthis.treeOperationSequencer.queue(() => this.focusInput(-1));\n\t}\n\n\tfocusNextInput(): void {\n\t\tthis.treeOperationSequencer.queue(() => this.focusInput(1));\n\t}\n\n\tprivate async focusInput(delta: number): Promise<void> {\n\t\tif (!this.scmViewService.focusedRepository ||\n\t\t\tthis.scmViewService.visibleRepositories.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet input = this.scmViewService.focusedRepository.input;\n\t\tconst repositories = this.scmViewService.visibleRepositories;\n\n\t\t// One visible repository and the input is already focused\n\t\tif (repositories.length === 1 && this.inputRenderer.getRenderedInputWidget(input)?.hasFocus() === true) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Multiple visible repositories and the input already focused\n\t\tif (repositories.length > 1 && this.inputRenderer.getRenderedInputWidget(input)?.hasFocus() === true) {\n\t\t\tconst focusedRepositoryIndex = repositories.indexOf(this.scmViewService.focusedRepository);\n\t\t\tconst newFocusedRepositoryIndex = rot(focusedRepositoryIndex + delta, repositories.length);\n\t\t\tinput = repositories[newFocusedRepositoryIndex].input;\n\t\t}\n\n\t\tawait this.tree.expandTo(input);\n\n\t\tthis.tree.reveal(input);\n\t\tthis.inputRenderer.getRenderedInputWidget(input)?.focus();\n\t}\n\n\tfocusPreviousResourceGroup(): void {\n\t\tthis.treeOperationSequencer.queue(() => this.focusResourceGroup(-1));\n\t}\n\n\tfocusNextResourceGroup(): void {\n\t\tthis.treeOperationSequencer.queue(() => this.focusResourceGroup(1));\n\t}\n\n\tprivate async focusResourceGroup(delta: number): Promise<void> {\n\t\tif (!this.scmViewService.focusedRepository ||\n\t\t\tthis.scmViewService.visibleRepositories.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst treeHasDomFocus = isActiveElement(this.tree.getHTMLElement());\n\t\tconst resourceGroups = this.scmViewService.focusedRepository.provider.groups;\n\t\tconst focusedResourceGroup = this.tree.getFocus().find(e => isSCMResourceGroup(e));\n\t\tconst focusedResourceGroupIndex = treeHasDomFocus && focusedResourceGroup ? resourceGroups.indexOf(focusedResourceGroup) : -1;\n\n\t\tlet resourceGroupNext: ISCMResourceGroup | undefined;\n\n\t\tif (focusedResourceGroupIndex === -1) {\n\t\t\t// First visible resource group\n\t\t\tfor (const resourceGroup of resourceGroups) {\n\t\t\t\tif (this.tree.hasNode(resourceGroup)) {\n\t\t\t\t\tresourceGroupNext = resourceGroup;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Next/Previous visible resource group\n\t\t\tlet index = rot(focusedResourceGroupIndex + delta, resourceGroups.length);\n\t\t\twhile (index !== focusedResourceGroupIndex) {\n\t\t\t\tif (this.tree.hasNode(resourceGroups[index])) {\n\t\t\t\t\tresourceGroupNext = resourceGroups[index];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tindex = rot(index + delta, resourceGroups.length);\n\t\t\t}\n\t\t}\n\n\t\tif (resourceGroupNext) {\n\t\t\tawait this.tree.expandTo(resourceGroupNext);\n\t\t\tthis.tree.reveal(resourceGroupNext);\n\n\t\t\tthis.tree.setSelection([resourceGroupNext]);\n\t\t\tthis.tree.setFocus([resourceGroupNext]);\n\t\t\tthis.tree.domFocus();\n\t\t}\n\t}\n\n\toverride shouldShowWelcome(): boolean {\n\t\treturn this.scmService.repositoryCount === 0;\n\t}\n\n\toverride getActionsContext(): unknown {\n\t\treturn this.scmViewService.visibleRepositories.length === 1 ? this.scmViewService.visibleRepositories[0].provider : undefined;\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\n\t\tthis.treeOperationSequencer.queue(() => {\n\t\t\treturn new Promise<void>(resolve => {\n\t\t\t\tif (this.isExpanded()) {\n\t\t\t\t\tif (this.tree.getFocus().length === 0) {\n\t\t\t\t\t\tfor (const repository of this.scmViewService.visibleRepositories) {\n\t\t\t\t\t\t\tconst widget = this.inputRenderer.getRenderedInputWidget(repository.input);\n\n\t\t\t\t\t\t\tif (widget) {\n\t\t\t\t\t\t\t\twidget.focus();\n\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.tree.domFocus();\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\toverride dispose(): void {\n\t\tthis.visibilityDisposables.dispose();\n\t\tthis.disposables.dispose();\n\t\tthis.items.dispose();\n\t\tsuper.dispose();\n\t}\n}\n\nclass SCMTreeDataSource extends Disposable implements IAsyncDataSource<ISCMViewService, TreeElement> {\n\tconstructor(\n\t\tprivate readonly viewMode: () => ViewMode,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ISCMViewService private readonly scmViewService: ISCMViewService\n\t) {\n\t\tsuper();\n\t}\n\n\tasync getChildren(inputOrElement: ISCMViewService | TreeElement): Promise<Iterable<TreeElement>> {\n\t\tconst repositoryCount = this.scmViewService.visibleRepositories.length;\n\n\t\tconst showActionButton = this.configurationService.getValue<boolean>('scm.showActionButton') === true;\n\t\tconst alwaysShowRepositories = this.configurationService.getValue<boolean>('scm.alwaysShowRepositories') === true;\n\n\t\tif (isSCMViewService(inputOrElement) && (repositoryCount > 1 || alwaysShowRepositories)) {\n\t\t\treturn this.scmViewService.visibleRepositories;\n\t\t} else if ((isSCMViewService(inputOrElement) && repositoryCount === 1 && !alwaysShowRepositories) || isSCMRepository(inputOrElement)) {\n\t\t\tconst children: TreeElement[] = [];\n\n\t\t\tinputOrElement = isSCMRepository(inputOrElement) ? inputOrElement : this.scmViewService.visibleRepositories[0];\n\t\t\tconst actionButton = inputOrElement.provider.actionButton;\n\t\t\tconst resourceGroups = inputOrElement.provider.groups;\n\n\t\t\t// SCM Input\n\t\t\tif (inputOrElement.input.visible) {\n\t\t\t\tchildren.push(inputOrElement.input);\n\t\t\t}\n\n\t\t\t// Action Button\n\t\t\tif (showActionButton && actionButton) {\n\t\t\t\tchildren.push({\n\t\t\t\t\ttype: 'actionButton',\n\t\t\t\t\trepository: inputOrElement,\n\t\t\t\t\tbutton: actionButton\n\t\t\t\t} satisfies ISCMActionButton);\n\t\t\t}\n\n\t\t\t// ResourceGroups\n\t\t\tconst hasSomeChanges = resourceGroups.some(group => group.resources.length > 0);\n\t\t\tif (hasSomeChanges || (repositoryCount === 1 && (!showActionButton || !actionButton))) {\n\t\t\t\tchildren.push(...resourceGroups);\n\t\t\t}\n\n\t\t\treturn children;\n\t\t} else if (isSCMResourceGroup(inputOrElement)) {\n\t\t\tif (this.viewMode() === ViewMode.List) {\n\t\t\t\t// Resources (List)\n\t\t\t\treturn inputOrElement.resources;\n\t\t\t} else if (this.viewMode() === ViewMode.Tree) {\n\t\t\t\t// Resources (Tree)\n\t\t\t\tconst children: TreeElement[] = [];\n\t\t\t\tfor (const node of inputOrElement.resourceTree.root.children) {\n\t\t\t\t\tchildren.push(node.element && node.childrenCount === 0 ? node.element : node);\n\t\t\t\t}\n\n\t\t\t\treturn children;\n\t\t\t}\n\t\t} else if (isSCMResourceNode(inputOrElement)) {\n\t\t\t// Resources (Tree), History item changes (Tree)\n\t\t\tconst children: TreeElement[] = [];\n\t\t\tfor (const node of inputOrElement.children) {\n\t\t\t\tchildren.push(node.element && node.childrenCount === 0 ? node.element : node);\n\t\t\t}\n\n\t\t\treturn children;\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tgetParent(element: TreeElement): ISCMViewService | TreeElement {\n\t\tif (isSCMResourceNode(element)) {\n\t\t\tif (element.parent === element.context.resourceTree.root) {\n\t\t\t\treturn element.context;\n\t\t\t} else if (element.parent) {\n\t\t\t\treturn element.parent;\n\t\t\t} else {\n\t\t\t\tthrow new Error('Invalid element passed to getParent');\n\t\t\t}\n\t\t} else if (isSCMResource(element)) {\n\t\t\tif (this.viewMode() === ViewMode.List) {\n\t\t\t\treturn element.resourceGroup;\n\t\t\t}\n\n\t\t\tconst node = element.resourceGroup.resourceTree.getNode(element.sourceUri);\n\t\t\tconst result = node?.parent;\n\n\t\t\tif (!result) {\n\t\t\t\tthrow new Error('Invalid element passed to getParent');\n\t\t\t}\n\n\t\t\tif (result === element.resourceGroup.resourceTree.root) {\n\t\t\t\treturn element.resourceGroup;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t} else if (isSCMInput(element)) {\n\t\t\treturn element.repository;\n\t\t} else if (isSCMResourceGroup(element)) {\n\t\t\tconst repository = this.scmViewService.visibleRepositories.find(r => r.provider === element.provider);\n\t\t\tif (!repository) {\n\t\t\t\tthrow new Error('Invalid element passed to getParent');\n\t\t\t}\n\n\t\t\treturn repository;\n\t\t} else {\n\t\t\tthrow new Error('Unexpected call to getParent');\n\t\t}\n\t}\n\n\thasChildren(inputOrElement: ISCMViewService | TreeElement): boolean {\n\t\tif (isSCMViewService(inputOrElement)) {\n\t\t\treturn this.scmViewService.visibleRepositories.length !== 0;\n\t\t} else if (isSCMRepository(inputOrElement)) {\n\t\t\treturn true;\n\t\t} else if (isSCMInput(inputOrElement)) {\n\t\t\treturn false;\n\t\t} else if (isSCMActionButton(inputOrElement)) {\n\t\t\treturn false;\n\t\t} else if (isSCMResourceGroup(inputOrElement)) {\n\t\t\treturn true;\n\t\t} else if (isSCMResource(inputOrElement)) {\n\t\t\treturn false;\n\t\t} else if (ResourceTree.isResourceNode(inputOrElement)) {\n\t\t\treturn inputOrElement.childrenCount > 0;\n\t\t} else {\n\t\t\tthrow new Error('hasChildren not implemented.');\n\t\t}\n\t}\n}\n\nexport class SCMActionButton implements IDisposable {\n\tprivate button: Button | ButtonWithDescription | ButtonWithDropdown | undefined;\n\tprivate readonly disposables = new MutableDisposable<DisposableStore>();\n\n\tconstructor(\n\t\tprivate readonly container: HTMLElement,\n\t\tprivate readonly contextMenuService: IContextMenuService,\n\t\tprivate readonly commandService: ICommandService,\n\t\tprivate readonly notificationService: INotificationService\n\t) {\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables?.dispose();\n\t}\n\n\tsetButton(button: ISCMActionButtonDescriptor | undefined): void {\n\t\t// Clear old button\n\t\tthis.clear();\n\t\tif (!button) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (button.secondaryCommands?.length) {\n\t\t\tconst actions: IAction[] = [];\n\t\t\tfor (let index = 0; index < button.secondaryCommands.length; index++) {\n\t\t\t\tconst commands = button.secondaryCommands[index];\n\t\t\t\tfor (const command of commands) {\n\t\t\t\t\tactions.push(new Action(command.id, command.title, undefined, true, async () => await this.executeCommand(command.id, ...(command.arguments || []))));\n\t\t\t\t}\n\t\t\t\tif (commands.length) {\n\t\t\t\t\tactions.push(new Separator());\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Remove last separator\n\t\t\tactions.pop();\n\n\t\t\t// ButtonWithDropdown\n\t\t\tthis.button = new ButtonWithDropdown(this.container, {\n\t\t\t\tactions: actions,\n\t\t\t\taddPrimaryActionToDropdown: false,\n\t\t\t\tcontextMenuProvider: this.contextMenuService,\n\t\t\t\ttitle: button.command.tooltip,\n\t\t\t\tsupportIcons: true,\n\t\t\t\t...defaultButtonStyles\n\t\t\t});\n\t\t} else {\n\t\t\t// Button\n\t\t\tthis.button = new Button(this.container, { supportIcons: true, supportShortLabel: !!button.description, title: button.command.tooltip, ...defaultButtonStyles });\n\t\t}\n\n\t\tthis.button.enabled = button.enabled;\n\t\tthis.button.label = button.command.title;\n\t\tif (this.button instanceof Button && button.description) {\n\t\t\tthis.button.labelShort = button.description;\n\t\t}\n\t\tthis.button.onDidClick(async () => await this.executeCommand(button.command.id, ...(button.command.arguments || [])), null, this.disposables.value);\n\n\t\tthis.disposables.value!.add(this.button);\n\t}\n\n\tfocus(): void {\n\t\tthis.button?.focus();\n\t}\n\n\tprivate clear(): void {\n\t\tthis.disposables.value = new DisposableStore();\n\t\tthis.button = undefined;\n\t\tclearNode(this.container);\n\t}\n\n\tprivate async executeCommand(commandId: string, ...args: any[]): Promise<void> {\n\t\ttry {\n\t\t\tawait this.commandService.executeCommand(commandId, ...args);\n\t\t} catch (ex) {\n\t\t\tthis.notificationService.error(ex);\n\t\t}\n\t}\n}\n\nsetupSimpleEditorSelectionStyling('.scm-view .scm-editor-container');\n"],
  "mappings": ";;;;;;;;;;;;AAKA,OAAO;AACP,SAAS,OAAO,eAAe;AAC/B,SAAS,UAAU,eAAe;AAClC,SAAS,aAAa,YAAY,iBAAiB,oBAAoB,SAAS,cAAc,mBAAmB,qBAAqB;AACtI,SAAS,UAAU,kBAAkB,kBAAkB;AACvD,SAAS,QAAQ,GAAG,WAAW,UAAU,YAAY,WAAW,gBAAgB,uBAAuB;AACvG,SAAS,sBAAsB,yBAAyB;AACxD,SAAS,mBAAmB,cAAc,qBAAqB,gBAAgB,WAAW,kBAAkB,iBAAiB,sCAAsC,aAAa,sBAAsB,cAAc,kBAAkB,4BAA4B,uBAAuB,qCAAqC;AAC9T,SAAS,gBAAgB,gBAAgB,yBAAyB;AAClE,SAAS,kBAAkB;AAC3B,SAAS,sBAAsB;AAC/B,SAAS,uBAAuB,wBAAwB;AACxD,SAAS,qBAAqB,qBAAqB,wBAAwB;AAC3E,SAAS,oBAAoB,aAAa,gBAAgB,qBAAqB;AAC/E,SAAS,uBAAuB;AAChC,SAAS,0BAA0B;AACnC,SAAS,gBAAgB,cAAc,iBAAiB,QAAQ,iBAAiB,cAAc,SAAS,aAAa;AACrH,SAAS,SAAS,cAAc,QAAQ,WAAW,qBAAqB;AACxE,SAAS,WAAW,+BAA+B;AACnD,SAAS,eAAe,sBAAsB;AAC9C,SAAS,eAAe,oBAAoB,qCAAqC,iBAAiB,YAAY,2BAA2B,2BAA2B,mBAAmB,kBAAkB,yBAAyB;AAClO,SAAS,oCAAoC,kBAAkB;AAC/D,SAAS,uBAAuB,2BAA2B;AAC3D,SAAS,mBAAmB,WAAW,kBAAkB,iBAAiB;AAC1E,SAAS,WAAW,aAAa,aAAa,uBAAuB,kBAAkB,uBAAuB,wBAAwB;AACtI,SAAS,cAAc,qBAAqB;AAC5C,SAAS,2BAA2B,oDAAoD;AACxF,SAAS,gBAAgB;AACzB,SAAS,2BAA2B;AACpC,SAAS,WAAW;AACpB,SAAS,gBAAgB;AACzB,SAAS,kBAAkB,oBAAoB;AAC/C,SAAS,YAAY,eAAe,cAAc;AAClD,SAAS,8BAA8B;AACvC,SAAS,gBAAgB;AACzB,SAAS,iBAAiB,cAAc,qBAAqB;AAC7D,SAAS,wBAAwB,wBAAwB;AACzD,SAAS,kBAAkB,gCAAgC;AAC3D,SAAS,kCAAkC;AAC3C,SAAS,wBAAwB,yCAAyC;AAC1E,SAAS,qBAAqB;AAC9B,SAAS,gCAAgC;AACzC,SAAS,qBAAqB;AAC9B,SAAS,wCAAwC;AACjD,SAAS,uBAAuB;AAChC,SAAS,6BAA6B;AACtC,YAAY,cAAc;AAC1B,SAAS,SAAS,cAAc;AAChC,SAAS,yBAAyB;AAClC,SAAS,0BAA0B;AACnC,SAAS,yBAAyB;AAClC,SAAS,qBAAqB;AAC9B,SAAS,oBAAoB;AAC7B,SAAS,sBAAsB;AAC/B,SAAS,yBAAyB;AAClC,SAAS,kCAAkC;AAC3C,SAAS,qBAAqB;AAC9B,SAAS,eAAe;AACxB,SAAS,2BAA2B;AACpC,SAAS,eAAe;AACxB,SAAS,iBAAiB;AAC1B,SAAS,uBAAuB;AAChC,SAAS,wBAAwB,0BAA0B;AAC3D,SAAS,mBAAmB;AAC5B,SAAS,uBAAuB;AAChC,SAAS,iBAAiB;AAC1B,SAAS,iCAAiC,kCAAkC;AAC5E,SAAS,sBAAsB,iCAAiC,yCAAyC;AACzG,SAAS,kBAAkB,4BAA4B;AACvD,SAAS,QAAQ,uBAAuB,0BAA0B;AAClE,SAAS,4BAA4B;AACrC,SAAS,6BAA6B;AACtC,SAAS,6BAA6B;AACtC,SAAS,2BAA2B;AACpC,SAAS,gCAAgC;AACzC,SAAS,yBAAyB;AAClC,SAAS,qBAAqB,+BAA+B;AAC7D,SAAS,mCAAmC;AAC5C,SAAS,4BAA4B;AACrC,SAAS,eAAe;AACxB,SAAS,wBAAwB;AACjC,SAAS,2BAA2B;AACpC,SAAS,yBAAyB,4BAA4B;AAC9D,SAAS,yBAAyB;AAClC,SAAS,oBAAoB;AAC7B,SAAS,cAAc,eAAe,sBAAsB;AAC5D,SAAS,yBAAyB,gCAAgC;AAClE,SAAS,2BAA2B;AACpC,SAAS,qBAAqB;AAC9B,SAAS,8BAA8B,wBAAwB;AAC/D,SAAS,+BAA+B;AACxC,SAAS,yCAAyC;AAClD,SAAS,OAAO,WAAW;AAC3B,SAAS,qBAAqB;AAC9B,SAAS,0BAA0B;AACnC,SAAS,8BAA8B;AACvC,SAAS,4BAA4B;AACrC,SAAS,kBAAkB;AAC3B,SAAS,eAAe;AACxB,SAAS,mCAAmC;AAC5C,SAAS,6BAA6B;AAItC,SAAS,0BAA0B,KAAU,YAAoG;AAChJ,MAAI,CAAC,YAAY;AAChB,WAAO,CAAC,QAAW,MAAS;AAAA,EAC7B;AAEA,MAAI,CAAE,WAA+B,OAAO;AAC3C,UAAMA,WAAU,cAAc,UAAwB;AACtD,WAAO,CAACA,UAAS,MAAS;AAAA,EAC3B;AAEA,QAAM,WAAW,SAAS,GAAG;AAC7B,QAAM,QAAS,WAA+B;AAC9C,QAAM,aAAa,MAAM,SAAS,SAAS;AAC3C,QAAM,UAAU,cAAe,WAA+B,KAAK;AAGnE,MAAI,UAAU,UAAU;AACvB,WAAO,CAAC,SAAS,MAAS;AAAA,EAC3B;AAGA,QAAM,eAAyB,CAAC;AAChC,QAAM,qBAA+B,CAAC;AAEtC,aAAW,SAAS,SAAS;AAC5B,QAAI,MAAM,QAAQ,YAAY;AAE7B,mBAAa,KAAK;AAAA,QACjB,OAAO,MAAM,QAAQ;AAAA,QACrB,KAAK,MAAM,MAAM;AAAA,MAClB,CAAC;AAAA,IACF,WAAW,MAAM,MAAM,YAAY;AAElC,yBAAmB,KAAK,KAAK;AAAA,IAC9B,OAAO;AAEN,mBAAa,KAAK;AAAA,QACjB,OAAO;AAAA,QACP,KAAK,MAAM,MAAM;AAAA,MAClB,CAAC;AACD,yBAAmB,KAAK;AAAA,QACvB,OAAO,MAAM;AAAA,QACb,KAAK;AAAA,MACN,CAAC;AAAA,IACF;AAAA,EACD;AAEA,SAAO,CAAC,cAAc,kBAAkB;AACzC;AAhDS;AA8DF,IAAM,uBAAN,MAAoH;AAAA,EAQ1H,YAC0B,gBACI,oBACC,qBAC7B;AAHwB;AACI;AACC;AAAA,EAC3B;AAAA,EAvLL,OA2K2H;AAAA;AAAA;AAAA,EAC1H,OAAgB,iBAAiB;AAAA,EAEjC,OAAgB,cAAc;AAAA,EAC9B,IAAI,aAAqB;AAAE,WAAO,qBAAqB;AAAA,EAAa;AAAA,EAE5D,gBAAgB,oBAAI,IAAuC;AAAA,EAQnE,eAAe,WAA8C;AAE5D,IAAC,UAAU,cAAe,cAAe,cAAc,oBAAoB,EAAmB,UAAU,IAAI,kBAAkB;AAG9H,cAAU,cAAe,cAAe,UAAU,IAAI,kBAAkB,gBAAgB;AAExF,UAAM,kBAAkB,OAAO,WAAW,EAAE,mBAAmB,CAAC;AAChE,UAAM,eAAe,IAAI,gBAAgB,iBAAiB,KAAK,oBAAoB,KAAK,gBAAgB,KAAK,mBAAmB;AAEhI,WAAO,EAAE,cAAc,YAAY,WAAW,MAAM,oBAAoB,aAAa;AAAA,EACtF;AAAA,EAEA,cAAc,MAA+C,OAAe,cAAoC,QAAkC;AACjJ,iBAAa,WAAW,QAAQ;AAEhC,UAAM,cAAc,IAAI,gBAAgB;AACxC,UAAM,eAAe,KAAK;AAC1B,iBAAa,aAAa,UAAU,KAAK,QAAQ,MAAM;AAGvD,SAAK,cAAc,IAAI,cAAc,aAAa,YAAY;AAC9D,gBAAY,IAAI,EAAE,SAAS,6BAAM,KAAK,cAAc,OAAO,YAAY,GAA5C,WAA8C,CAAC;AAE1E,iBAAa,aAAa;AAAA,EAC3B;AAAA,EAEA,2BAAiC;AAChC,UAAM,IAAI,MAAM,kDAAkD;AAAA,EACnE;AAAA,EAEA,kBAAkB,cAAsC;AACvD,SAAK,cAAc,IAAI,YAAY,GAAG,MAAM;AAAA,EAC7C;AAAA,EAEA,eAAe,MAA+C,OAAe,UAAsC;AAClH,aAAS,WAAW,QAAQ;AAAA,EAC7B;AAAA,EAEA,gBAAgB,cAA0C;AACzD,iBAAa,WAAW,QAAQ;AAChC,iBAAa,mBAAmB,QAAQ;AAAA,EACzC;AACD;AAzDa,uBAAN;AAAA,EASJ;AAAA,EACA;AAAA,EACA;AAAA,GAXU;AA4Db,MAAM,mBAA4D;AAAA,EACjE,YAA6B,sBAA6C;AAA7C;AAAA,EAA+C;AAAA,EAxO7E,OAuOkE;AAAA;AAAA;AAAA,EAGjE,WAAW,SAAqC;AAC/C,QAAI,cAAc,OAAO,GAAG;AAC3B,aAAO,QAAQ,UAAU,SAAS;AAAA,IACnC;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,YAAY,MAAwB,eAAgC;AACnE,UAAM,QAAQ,mBAAmB,gCAAgC,IAA2D;AAC5H,QAAI,cAAc,gBAAgB,OAAO,QAAQ;AAChD,WAAK,qBAAqB,eAAe,cAAY,oBAAoB,UAAU,OAAO,aAAa,CAAC;AAExG,YAAM,gBAAgB,MAAM,OAAO,OAAK,EAAE,WAAW,QAAQ,IAAI,EAAE,IAAI,OAAK,EAAE,MAAM;AACpF,UAAI,cAAc,QAAQ;AACzB,sBAAc,aAAa,QAAQ,kBAAkB,OAAO,KAAK,UAAU,aAAa,CAAC;AAAA,MAC1F;AAAA,IACD;AAAA,EACD;AAAA,EAEA,aAAa,UAAyB,eAA8C;AACnF,QAAI,SAAS,WAAW,GAAG;AAC1B,YAAM,UAAU,SAAS,CAAC;AAC1B,UAAI,cAAc,OAAO,GAAG;AAC3B,eAAO,SAAS,QAAQ,SAAS;AAAA,MAClC;AAAA,IACD;AAEA,WAAO,OAAO,SAAS,MAAM;AAAA,EAC9B;AAAA,EAEA,WAAW,MAAwB,eAAwC,aAAiC,cAAgD,eAA2D;AACtN,WAAO;AAAA,EACR;AAAA,EAEA,KAAK,MAAwB,eAAwC,aAAiC,cAAgD,eAAgC;AAAA,EAAE;AAAA,EAExL,OAAe,gCAAgC,MAAkE;AAChH,UAAM,OAAc,CAAC;AACrB,eAAW,WAAW,CAAC,GAAG,KAAK,WAAW,CAAC,GAAG,GAAG,KAAK,QAAQ,GAAG;AAChE,UAAI,cAAc,OAAO,GAAG;AAC3B,aAAK,KAAK,QAAQ,SAAS;AAAA,MAC5B;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EAEA,UAAgB;AAAA,EAAE;AACnB;AASA,IAAM,gBAAN,MAA+F;AAAA,EAW9F,YACS,aACA,wBACA,cACuB,sBAC9B;AAJO;AACA;AACA;AACuB;AAAA,EAC5B;AAAA,EAnTL,OAmS+F;AAAA;AAAA;AAAA,EAE9F,OAAgB,iBAAiB;AAAA,EAEjC,OAAgB,cAAc;AAAA,EAC9B,IAAI,aAAqB;AAAE,WAAO,cAAc;AAAA,EAAa;AAAA,EAErD,eAAe,oBAAI,IAA+B;AAAA,EAClD,iBAAiB,oBAAI,QAA2B;AAAA,EAChD,mBAAmB,oBAAI,QAAgC;AAAA,EAS/D,eAAe,WAAuC;AAErD,IAAC,UAAU,cAAe,cAAe,cAAc,oBAAoB,EAAmB,UAAU,IAAI,kBAAkB;AAG9H,cAAU,cAAe,cAAe,UAAU,IAAI,gBAAgB;AAEtE,UAAM,qBAAqB,IAAI,gBAAgB;AAC/C,UAAM,eAAe,OAAO,WAAW,EAAE,YAAY,CAAC;AACtD,UAAM,cAAc,KAAK,qBAAqB,eAAe,gBAAgB,cAAc,KAAK,sBAAsB;AACtH,uBAAmB,IAAI,WAAW;AAElC,WAAO,EAAE,aAAa,mBAAmB,cAAc,gBAAgB,oBAAoB,IAAI,gBAAgB,GAAG,mBAAmB;AAAA,EACtI;AAAA,EAEA,cAAc,MAAwC,OAAe,cAAmC;AACvG,UAAM,QAAQ,KAAK;AACnB,iBAAa,YAAY,QAAQ;AAGjC,SAAK,aAAa,IAAI,OAAO,aAAa,WAAW;AACrD,iBAAa,mBAAmB,IAAI;AAAA,MACnC,SAAS,6BAAM,KAAK,aAAa,OAAO,KAAK,GAApC;AAAA,IACV,CAAC;AAGD,UAAM,aAAa,KAAK,iBAAiB,IAAI,KAAK;AAElD,QAAI,YAAY;AACf,mBAAa,YAAY,aAAa;AAAA,IACvC;AAEA,iBAAa,mBAAmB,IAAI,aAAa,MAAM;AACtD,YAAMC,cAAa,aAAa,YAAY;AAE5C,UAAIA,aAAY;AACf,aAAK,iBAAiB,IAAI,OAAOA,WAAU;AAAA,MAC5C;AAAA,IACD,CAAC,CAAC;AAGF,iBAAa,oBAAoB,cAAc;AAG/C,UAAM,2BAA2B,6BAAM;AACtC,YAAM,gBAAgB,aAAa,YAAY,iBAAiB;AAChE,WAAK,eAAe,IAAI,OAAO,aAAa;AAE5C,UAAI,aAAa,sBAAsB,eAAe;AACrD,aAAK,aAAa,OAAO,gBAAgB,EAAE;AAC3C,qBAAa,oBAAoB;AACjC,qBAAa,YAAY,OAAO;AAAA,MACjC;AAAA,IACD,GATiC;AAWjC,UAAM,oCAAoC,6BAAM;AAC/C,mBAAa,mBAAmB,IAAI,aAAa,YAAY,yBAAyB,wBAAwB,CAAC;AAC/G,+BAAyB;AAAA,IAC1B,GAH0C;AAM1C,sBAAkB,mCAAmC,GAAG,aAAa,kBAAkB;AAGvF,UAAM,eAAe,6BAAM,aAAa,YAAY,OAAO,GAAtC;AACrB,iBAAa,mBAAmB,IAAI,KAAK,YAAY,YAAY,YAAY,CAAC;AAC9E,iBAAa;AAAA,EACd;AAAA,EAEA,2BAAiC;AAChC,UAAM,IAAI,MAAM,kDAAkD;AAAA,EACnE;AAAA,EAEA,eAAe,OAAyC,OAAe,UAA+B;AACrG,aAAS,mBAAmB,MAAM;AAAA,EACnC;AAAA,EAEA,gBAAgB,cAAmC;AAClD,iBAAa,mBAAmB,QAAQ;AAAA,EACzC;AAAA,EAEA,UAAU,OAA0B;AACnC,YAAQ,KAAK,eAAe,IAAI,KAAK,KAAK,cAAc,kBAAkB;AAAA,EAC3E;AAAA,EAEA,uBAAuB,OAA8C;AACpE,WAAO,KAAK,aAAa,IAAI,KAAK;AAAA,EACnC;AAAA,EAEA,kBAAyC;AACxC,eAAW,CAAC,OAAO,WAAW,KAAK,KAAK,cAAc;AACrD,UAAI,YAAY,SAAS,GAAG;AAC3B,eAAO;AAAA,MACR;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,kBAAwB;AACvB,eAAW,CAAC,EAAE,WAAW,KAAK,KAAK,cAAc;AAChD,kBAAY,gBAAgB;AAAA,IAC7B;AAAA,EACD;AACD;AA1HM,gBAAN;AAAA,EAeG;AAAA,GAfG;AAoIN,IAAM,wBAAN,MAAuH;AAAA,EAKtH,YACS,wBACiB,gBACxB;AAFO;AACiB;AAAA,EACtB;AAAA,EA/aL,OAuauH;AAAA;AAAA;AAAA,EAEtH,OAAgB,cAAc;AAAA,EAC9B,IAAI,aAAqB;AAAE,WAAO,sBAAsB;AAAA,EAAa;AAAA,EAOrE,eAAe,WAA+C;AAE7D,IAAC,UAAU,cAAe,cAAe,cAAc,oBAAoB,EAAmB,UAAU,IAAI,eAAe;AAE3H,UAAM,UAAU,OAAO,WAAW,EAAE,iBAAiB,CAAC;AACtD,UAAM,OAAO,OAAO,SAAS,EAAE,OAAO,CAAC;AACvC,UAAM,mBAAmB,OAAO,SAAS,EAAE,UAAU,CAAC;AACtD,UAAM,YAAY,IAAI,UAAU,kBAAkB,EAAE,wBAAwB,KAAK,uBAAuB,CAAC;AACzG,UAAM,iBAAiB,OAAO,SAAS,EAAE,QAAQ,CAAC;AAClD,UAAM,QAAQ,IAAI,WAAW,gBAAgB,CAAC,GAAG,uBAAuB;AACxE,UAAM,cAAc,mBAAmB,SAAS;AAEhD,WAAO,EAAE,MAAM,OAAO,WAAW,oBAAoB,IAAI,gBAAgB,GAAG,YAAY;AAAA,EACzF;AAAA,EAEA,cAAc,MAAgD,OAAe,UAAuC;AACnH,UAAM,QAAQ,KAAK;AACnB,aAAS,KAAK,cAAc,MAAM;AAClC,aAAS,UAAU,MAAM;AACzB,aAAS,UAAU,UAAU;AAC7B,aAAS,MAAM,SAAS,MAAM,UAAU,MAAM;AAE9C,UAAM,QAAQ,KAAK,eAAe,MAAM,mBAAmB,MAAM,QAAQ;AACzE,aAAS,mBAAmB,IAAI,oCAAoC,MAAM,qBAAqB,KAAK,GAAG,SAAS,SAAS,CAAC;AAAA,EAC3H;AAAA,EAEA,yBAAyB,MAAqE,OAAe,cAAqC,QAAkC;AACnL,UAAM,IAAI,MAAM,kDAAkD;AAAA,EACnE;AAAA,EAEA,eAAe,OAAiD,OAAe,UAAuC;AACrH,aAAS,mBAAmB,MAAM;AAAA,EACnC;AAAA,EAEA,gBAAgB,UAAuC;AACtD,aAAS,mBAAmB,QAAQ;AACpC,aAAS,YAAY,QAAQ;AAAA,EAC9B;AACD;AAhDM,wBAAN;AAAA,EAOG;AAAA,GAPG;AAqEN,MAAM,mCAAmC,aAAa;AAAA,EAErD,YAAoB,sBAA+F;AAClH,UAAM;AADa;AAAA,EAEpB;AAAA,EAhfD,OA4esD;AAAA;AAAA;AAAA,EAMrD,MAAyB,UAAU,QAAiB,SAAsF;AACzI,QAAI,EAAE,kBAAkB,iBAAiB;AACxC,aAAO,MAAM,UAAU,QAAQ,OAAO;AAAA,IACvC;AAEA,UAAM,YAAY,KAAK,qBAAqB;AAC5C,UAAM,oBAAoB,UAAU,KAAK,OAAK,MAAM,OAAO;AAC3D,UAAM,gBAAgB,oBAAoB,YAAY,CAAC,OAAO;AAC9D,UAAM,OAAO,cAAc,IAAI,OAAK,aAAa,eAAe,CAAC,IAAI,aAAa,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK;AACzG,UAAM,OAAO,IAAI,GAAG,IAAI;AAAA,EACzB;AACD;AAEA,IAAM,mBAAN,MAA2K;AAAA,EAQ1K,YACS,UACA,QACA,wBACA,cACe,cACE,gBACF,cACtB;AAPO;AACA;AACA;AACA;AACe;AACE;AACF;AAEvB,iBAAa,sBAAsB,KAAK,uBAAuB,MAAM,KAAK,WAAW;AAAA,EACtF;AAAA,EAjhBD,OA+f2K;AAAA;AAAA;AAAA,EAE1K,OAAgB,cAAc;AAAA,EAC9B,IAAI,aAAqB;AAAE,WAAO,iBAAiB;AAAA,EAAa;AAAA,EAE/C,cAAc,IAAI,gBAAgB;AAAA,EAC3C,oBAAoB,oBAAI,IAA4C;AAAA,EAc5E,eAAe,WAA0C;AACxD,UAAM,UAAU,OAAO,WAAW,EAAE,WAAW,CAAC;AAChD,UAAM,OAAO,OAAO,SAAS,EAAE,OAAO,CAAC;AACvC,UAAM,YAAY,KAAK,OAAO,OAAO,MAAM,EAAE,8BAA8B,MAAM,mBAAmB,KAAK,CAAC;AAC1G,UAAM,mBAAmB,OAAO,UAAU,SAAS,EAAE,UAAU,CAAC;AAChE,UAAM,YAAY,IAAI,UAAU,kBAAkB;AAAA,MACjD,wBAAwB,KAAK;AAAA,MAC7B,cAAc,KAAK;AAAA,IACpB,CAAC;AAED,UAAM,iBAAiB,OAAO,SAAS,EAAE,kBAAkB,CAAC;AAC5D,UAAM,wBAAwB,IAAI,kBAA+B;AACjE,UAAM,cAAc,mBAAmB,WAAW,WAAW,qBAAqB;AAElF,WAAO,EAAE,SAAS,MAAM,WAAW,gBAAgB,WAAW,eAAe,QAAW,uBAAuB,oBAAoB,IAAI,gBAAgB,GAAG,YAAY;AAAA,EACvK;AAAA,EAEA,cAAc,MAAsK,OAAe,UAAkC;AACpO,UAAM,mBAAmB,KAAK;AAC9B,UAAM,eAAe,aAAa,eAAe,gBAAgB,IAAI,iBAAiB,UAAU;AAChG,UAAM,MAAM,aAAa,eAAe,gBAAgB,IAAI,iBAAiB,MAAM,iBAAiB;AACpG,UAAM,WAAW,aAAa,eAAe,gBAAgB,IAAI,SAAS,SAAS,SAAS;AAC5F,UAAM,UAAU,CAAC,aAAa,eAAe,gBAAgB,KAAK,iBAAiB,YAAY,WAAW;AAC1G,UAAM,WAAW,KAAK,SAAS,MAAM;AAErC,QAAI;AACJ,QAAI;AACJ,QAAI;AAEJ,QAAI,aAAa,eAAe,gBAAgB,GAAG;AAClD,UAAI,iBAAiB,SAAS;AAC7B,cAAM,QAAQ,KAAK,eAAe,MAAM,mBAAmB,iBAAiB,QAAQ,cAAc,QAAQ;AAC1G,aAAK,iBAAiB,UAAU,kBAAkB,MAAM,gBAAgB,iBAAiB,OAAO,CAAC;AAEjG,iBAAS,QAAQ,UAAU,OAAO,SAAS,iBAAiB,QAAQ,YAAY,KAAK;AACrF,wBAAgB,iBAAiB,QAAQ,YAAY;AAAA,MACtD,OAAO;AACN,cAAM,QAAQ,KAAK,eAAe,MAAM,mBAAmB,iBAAiB,QAAQ,QAAQ;AAC5F,aAAK,iBAAiB,UAAU,kBAAkB,MAAM,sBAAsB,iBAAiB,OAAO,CAAC;AAEvG,kBAAU,cAAc,KAAK,UAAoC;AACjE,iBAAS,QAAQ,UAAU,OAAO,OAAO;AAAA,MAC1C;AAAA,IACD,OAAO;AACN,YAAM,QAAQ,KAAK,eAAe,MAAM,mBAAmB,iBAAiB,cAAc,QAAQ;AAClG,WAAK,iBAAiB,UAAU,kBAAkB,MAAM,gBAAgB,gBAAgB,CAAC;AAEzF,OAAC,SAAS,kBAAkB,IAAI,0BAA0B,KAAK,KAAK,UAAU;AAC9E,eAAS,QAAQ,UAAU,OAAO,SAAS,iBAAiB,YAAY,KAAK;AAC7E,sBAAgB,iBAAiB,YAAY;AAAA,IAC9C;AAEA,UAAM,eAAqC;AAAA,MAC1C;AAAA,MAAS;AAAA,MAAK,kBAAkB,EAAE,UAAU,UAAU,SAAS,oBAAoB,cAAc;AAAA,MAAG;AAAA,IACrG;AAEA,SAAK,WAAW,UAAU,YAAY;AAEtC,SAAK,kBAAkB,IAAI,UAAU,YAAY;AACjD,aAAS,mBAAmB,IAAI,aAAa,MAAM,KAAK,kBAAkB,OAAO,QAAQ,CAAC,CAAC;AAE3F,aAAS,QAAQ,aAAa,gBAAgB,OAAO;AAAA,EACtD;AAAA,EAEA,eAAe,UAA2J,OAAe,UAAkC;AAC1N,aAAS,mBAAmB,MAAM;AAAA,EACnC;AAAA,EAEA,yBAAyB,MAAwJ,OAAe,UAA4B,QAAkC;AAC7P,UAAM,aAAa,KAAK;AACxB,UAAM,SAAS,WAAW,SAAS,WAAW,SAAS,SAAS,CAAC;AAEjE,UAAM,QAAQ,WAAW,SAAS,IAAI,OAAK,EAAE,IAAI;AACjD,UAAM,WAAW,SAAS;AAE1B,UAAM,UAAU,cAAc,KAAK,UAAoC;AACvE,aAAS,UAAU,YAAY,EAAE,UAAU,OAAO,KAAK,MAAM,MAAM,GAAG;AAAA,MACrE,iBAAiB,EAAE,QAAQ,OAAO,QAAQ,KAAK;AAAA,MAC/C;AAAA,MACA;AAAA,MACA,WAAW,KAAK,aAAa,aAAa,OAAO,IAAI,MAAM;AAAA,IAC5D,CAAC;AAED,UAAM,QAAQ,KAAK,eAAe,MAAM,mBAAmB,OAAO,QAAQ,QAAQ;AAClF,SAAK,iBAAiB,UAAU,QAAQ,MAAM,sBAAsB,OAAO,OAAO,CAAC;AAEnF,aAAS,KAAK,UAAU,OAAO,gBAAgB;AAC/C,aAAS,QAAQ,UAAU,OAAO,OAAO;AACzC,aAAS,eAAe,MAAM,UAAU;AACxC,aAAS,eAAe,MAAM,kBAAkB;AAEhD,aAAS,QAAQ,aAAa,gBAAgB,EAAE;AAAA,EACjD;AAAA,EAEA,0BAA0B,MAAwJ,OAAe,UAA4B,QAAkC;AAC9P,aAAS,mBAAmB,MAAM;AAAA,EACnC;AAAA,EAEA,gBAAgB,UAAkC;AACjD,aAAS,mBAAmB,QAAQ;AACpC,aAAS,YAAY,QAAQ;AAAA,EAC9B;AAAA,EAEQ,iBAAiB,UAA4B,kBAAiF,MAAmB;AACxJ,QAAI,CAAC,SAAS,iBAAiB,SAAS,kBAAkB,MAAM;AAC/D,eAAS,UAAU,MAAM;AAEzB,eAAS,gBAAgB;AACzB,eAAS,sBAAsB,QAAQ,oCAAoC,MAAM,SAAS,SAAS;AAAA,IACpG;AAEA,aAAS,UAAU,UAAU;AAAA,EAC9B;AAAA,EAEQ,wBAA8B;AACrC,eAAW,CAAC,UAAU,IAAI,KAAK,KAAK,mBAAmB;AACtD,WAAK,WAAW,UAAU,IAAI;AAAA,IAC/B;AAAA,EACD;AAAA,EAEQ,WAAW,UAA4B,MAAkC;AAChF,UAAM,QAAQ,KAAK,aAAa,cAAc;AAC9C,UAAM,OAAO,MAAM,SAAS,YAAY,QAAQ,KAAK,cAAc,YAAY,OAAO,KAAK,cAAc,YAAY;AAErH,aAAS,UAAU,QAAQ,KAAK,KAAK;AAAA,MACpC,GAAG,KAAK;AAAA,MACR,iBAAiB,EAAE,QAAQ,OAAO,QAAQ,CAAC,KAAK;AAAA,IACjD,CAAC;AAED,QAAI,MAAM;AACT,UAAI,UAAU,YAAY,IAAI,GAAG;AAChC,iBAAS,eAAe,YAAY,mBAAmB,UAAU,YAAY,IAAI,CAAC;AAClF,YAAI,KAAK,OAAO;AACf,mBAAS,eAAe,MAAM,QAAQ,MAAM,SAAS,KAAK,MAAM,EAAE,GAAG,SAAS,KAAK;AAAA,QACpF;AACA,iBAAS,eAAe,MAAM,UAAU;AACxC,iBAAS,eAAe,MAAM,kBAAkB;AAAA,MACjD,OAAO;AACN,iBAAS,eAAe,YAAY;AACpC,iBAAS,eAAe,MAAM,QAAQ;AACtC,iBAAS,eAAe,MAAM,UAAU;AACxC,iBAAS,eAAe,MAAM,kBAAkB,SAAS,IAAI;AAAA,MAC9D;AACA,eAAS,eAAe,QAAQ,KAAK;AAAA,IACtC,OAAO;AACN,eAAS,eAAe,YAAY;AACpC,eAAS,eAAe,MAAM,QAAQ;AACtC,eAAS,eAAe,MAAM,UAAU;AACxC,eAAS,eAAe,MAAM,kBAAkB;AAChD,eAAS,eAAe,QAAQ;AAAA,IACjC;AAAA,EACD;AAAA,EAEA,UAAgB;AACf,SAAK,YAAY,QAAQ;AAAA,EAC1B;AACD;AAhLM,mBAAN;AAAA,EAaG;AAAA,EACA;AAAA,EACA;AAAA,GAfG;AAkLN,MAAM,aAA0D;AAAA,EAE/D,YAA6B,eAA8B;AAA9B;AAAA,EAAgC;AAAA,EAnrB9D,OAirBgE;AAAA;AAAA;AAAA,EAI/D,UAAU,SAAsB;AAC/B,QAAI,WAAW,OAAO,GAAG;AACxB,aAAO,KAAK,cAAc,UAAU,OAAO;AAAA,IAC5C,WAAW,kBAAkB,OAAO,GAAG;AACtC,aAAO,qBAAqB,iBAAiB;AAAA,IAC9C,OAAO;AACN,aAAO;AAAA,IACR;AAAA,EACD;AAAA,EAEA,cAAc,SAAsB;AACnC,QAAI,gBAAgB,OAAO,GAAG;AAC7B,aAAO,mBAAmB;AAAA,IAC3B,WAAW,WAAW,OAAO,GAAG;AAC/B,aAAO,cAAc;AAAA,IACtB,WAAW,kBAAkB,OAAO,GAAG;AACtC,aAAO,qBAAqB;AAAA,IAC7B,WAAW,mBAAmB,OAAO,GAAG;AACvC,aAAO,sBAAsB;AAAA,IAC9B,WAAW,cAAc,OAAO,KAAK,kBAAkB,OAAO,GAAG;AAChE,aAAO,iBAAiB;AAAA,IACzB,OAAO;AACN,YAAM,IAAI,MAAM,iBAAiB;AAAA,IAClC;AAAA,EACD;AACD;AAEA,MAAM,2BAA4E;AAAA,EAhtBlF,OAgtBkF;AAAA;AAAA;AAAA,EAEjF,iBAAiB,SAA+B;AAC/C,QAAI,aAAa,eAAe,OAAO,GAAG;AACzC,aAAO,QAAQ,kBAAkB,KAAK,CAAC,QAAQ,UAAU,CAAC,QAAQ,OAAO;AAAA,IAC1E;AAEA,WAAO;AAAA,EACR;AAED;AAEA,MAAM,cAAkD;AAAA,EA5tBxD,OA4tBwD;AAAA;AAAA;AAAA,EAEvD,OAAO,SAA+B;AACrC,QAAI,mBAAmB,OAAO,GAAG;AAChC,aAAO,QAAQ,UAAU,SAAS,KAAK,CAAC,QAAQ;AAAA,IACjD,OAAO;AACN,aAAO;AAAA,IACR;AAAA,EACD;AACD;AAEO,MAAM,cAAkD;AAAA,EAE9D,YACkB,UACA,aAAgC;AADhC;AACA;AAAA,EAAkC;AAAA,EA3uBrD,OAuuB+D;AAAA;AAAA;AAAA,EAM9D,QAAQ,KAAkB,OAA4B;AACrD,QAAI,gBAAgB,GAAG,GAAG;AACzB,UAAI,CAAC,gBAAgB,KAAK,GAAG;AAC5B,cAAM,IAAI,MAAM,oBAAoB;AAAA,MACrC;AAEA,aAAO;AAAA,IACR;AAEA,QAAI,WAAW,GAAG,GAAG;AACpB,aAAO;AAAA,IACR,WAAW,WAAW,KAAK,GAAG;AAC7B,aAAO;AAAA,IACR;AAEA,QAAI,kBAAkB,GAAG,GAAG;AAC3B,aAAO;AAAA,IACR,WAAW,kBAAkB,KAAK,GAAG;AACpC,aAAO;AAAA,IACR;AAEA,QAAI,mBAAmB,GAAG,GAAG;AAC5B,aAAO,mBAAmB,KAAK,IAAI,IAAI;AAAA,IACxC;AAGA,QAAI,KAAK,SAAS,MAAM,mBAAe;AAEtC,UAAI,KAAK,YAAY,MAAM,mBAAkB;AAC5C,cAAMC,WAAU,SAAU,IAAqB,SAAS;AACxD,cAAMC,aAAY,SAAU,MAAuB,SAAS;AAE5D,eAAO,iBAAiBD,UAASC,UAAS;AAAA,MAC3C;AAGA,UAAI,KAAK,YAAY,MAAM,uBAAoB;AAC9C,cAAM,aAAc,IAAqB,YAAY,WAAW;AAChE,cAAM,eAAgB,MAAuB,YAAY,WAAW;AAEpE,YAAI,eAAe,cAAc;AAChC,iBAAO,QAAQ,YAAY,YAAY;AAAA,QACxC;AAAA,MACD;AAGA,YAAM,UAAW,IAAqB,UAAU;AAChD,YAAM,YAAa,MAAuB,UAAU;AAEpD,aAAO,aAAa,SAAS,SAAS;AAAA,IACvC;AAGA,UAAM,iBAAiB,aAAa,eAAe,GAAG;AACtD,UAAM,mBAAmB,aAAa,eAAe,KAAK;AAE1D,QAAI,mBAAmB,kBAAkB;AACxC,aAAO,iBAAiB,KAAK;AAAA,IAC9B;AAEA,UAAM,UAAU,aAAa,eAAe,GAAG,IAAI,IAAI,OAAO,SAAU,IAAqB,SAAS;AACtG,UAAM,YAAY,aAAa,eAAe,KAAK,IAAI,MAAM,OAAO,SAAU,MAAuB,SAAS;AAE9G,WAAO,iBAAiB,SAAS,SAAS;AAAA,EAC3C;AACD;AAEO,IAAM,yCAAN,MAAkH;AAAA,EAExH,YACS,UACwB,cAC/B;AAFO;AACwB;AAAA,EAC7B;AAAA,EArzBL,OAgzByH;AAAA;AAAA;AAAA,EAOxH,2BAA2B,SAAqF;AAC/G,QAAI,aAAa,eAAe,OAAO,GAAG;AACzC,aAAO,QAAQ;AAAA,IAChB,WAAW,gBAAgB,OAAO,KAAK,WAAW,OAAO,KAAK,kBAAkB,OAAO,GAAG;AACzF,aAAO;AAAA,IACR,WAAW,mBAAmB,OAAO,GAAG;AACvC,aAAO,QAAQ;AAAA,IAChB,OAAO;AACN,UAAI,KAAK,SAAS,MAAM,mBAAe;AAKtC,cAAM,WAAW,SAAS,QAAQ,SAAS;AAC3C,cAAM,WAAW,KAAK,aAAa,YAAY,QAAQ,WAAW,EAAE,UAAU,KAAK,CAAC;AAEpF,eAAO,CAAC,UAAU,QAAQ;AAAA,MAC3B,OAAO;AAEN,eAAO,SAAS,QAAQ,SAAS;AAAA,MAClC;AAAA,IACD;AAAA,EACD;AAAA,EAEA,yCAAyC,UAAyE;AACjH,UAAM,UAAU;AAChB,WAAO,QAAQ,IAAI,OAAK,EAAE,IAAI,EAAE,KAAK,GAAG;AAAA,EACzC;AACD;AAnCa,yCAAN;AAAA,EAIJ;AAAA,GAJU;AAqCb,SAAS,iBAAiB,SAA8B;AACvD,MAAI,gBAAgB,OAAO,GAAG;AAC7B,UAAM,WAAW,QAAQ;AACzB,WAAO,QAAQ,SAAS,EAAE;AAAA,EAC3B,WAAW,WAAW,OAAO,GAAG;AAC/B,UAAM,WAAW,QAAQ,WAAW;AACpC,WAAO,SAAS,SAAS,EAAE;AAAA,EAC5B,WAAW,kBAAkB,OAAO,GAAG;AACtC,UAAM,WAAW,QAAQ,WAAW;AACpC,WAAO,gBAAgB,SAAS,EAAE;AAAA,EACnC,WAAW,mBAAmB,OAAO,GAAG;AACvC,UAAM,WAAW,QAAQ;AACzB,WAAO,iBAAiB,SAAS,EAAE,IAAI,QAAQ,EAAE;AAAA,EAClD,WAAW,cAAc,OAAO,GAAG;AAClC,UAAM,QAAQ,QAAQ;AACtB,UAAM,WAAW,MAAM;AACvB,WAAO,YAAY,SAAS,EAAE,IAAI,MAAM,EAAE,IAAI,QAAQ,UAAU,SAAS,CAAC;AAAA,EAC3E,WAAW,kBAAkB,OAAO,GAAG;AACtC,UAAM,QAAQ,QAAQ;AACtB,WAAO,UAAU,MAAM,SAAS,EAAE,IAAI,MAAM,EAAE,YAAY,QAAQ,IAAI,SAAS,CAAC;AAAA,EACjF,OAAO;AACN,UAAM,IAAI,MAAM,sBAAsB;AAAA,EACvC;AACD;AAvBS;AAyBT,MAAM,4BAAsE;AAAA,EA92B5E,OA82B4E;AAAA;AAAA;AAAA,EAE3E,MAAM,SAA8B;AACnC,WAAO,iBAAiB,OAAO;AAAA,EAChC;AACD;AAEO,IAAM,2BAAN,MAAkF;AAAA,EAExF,YACiC,cAC/B;AAD+B;AAAA,EAC7B;AAAA,EAz3BL,OAq3ByF;AAAA;AAAA;AAAA,EAMxF,qBAA6B;AAC5B,WAAO,SAAS,OAAO,2BAA2B;AAAA,EACnD;AAAA,EAEA,aAAa,SAA8B;AAC1C,QAAI,aAAa,eAAe,OAAO,GAAG;AACzC,aAAO,KAAK,aAAa,YAAY,QAAQ,KAAK,EAAE,UAAU,MAAM,UAAU,KAAK,CAAC,KAAK,QAAQ;AAAA,IAClG,WAAW,gBAAgB,OAAO,GAAG;AACpC,aAAO,GAAG,QAAQ,SAAS,IAAI,IAAI,QAAQ,SAAS,KAAK;AAAA,IAC1D,WAAW,WAAW,OAAO,GAAG;AAC/B,aAAO,SAAS,SAAS,sBAAsB;AAAA,IAChD,WAAW,kBAAkB,OAAO,GAAG;AACtC,aAAO,QAAQ,QAAQ,QAAQ,SAAS;AAAA,IACzC,WAAW,mBAAmB,OAAO,GAAG;AACvC,aAAO,QAAQ;AAAA,IAChB,OAAO;AACN,YAAM,SAAmB,CAAC;AAE1B,aAAO,KAAK,SAAS,QAAQ,SAAS,CAAC;AAEvC,UAAI,QAAQ,YAAY,SAAS;AAChC,eAAO,KAAK,QAAQ,YAAY,OAAO;AAAA,MACxC;AAEA,YAAM,OAAO,KAAK,aAAa,YAAY,QAAQ,QAAQ,SAAS,GAAG,EAAE,UAAU,MAAM,UAAU,KAAK,CAAC;AAEzG,UAAI,MAAM;AACT,eAAO,KAAK,IAAI;AAAA,MACjB;AAEA,aAAO,OAAO,KAAK,IAAI;AAAA,IACxB;AAAA,EACD;AACD;AAvCa,2BAAN;AAAA,EAGJ;AAAA,GAHU;AAyCb,IAAW,WAAX,kBAAWC,cAAX;AACC,EAAAA,UAAA,UAAO;AACP,EAAAA,UAAA,UAAO;AAFG,SAAAA;AAAA,GAAA;AAKX,IAAW,cAAX,kBAAWC,iBAAX;AACC,EAAAA,aAAA,UAAO;AACP,EAAAA,aAAA,UAAO;AACP,EAAAA,aAAA,YAAS;AAHC,SAAAA;AAAA,GAAA;AAMX,MAAM,QAAQ;AAAA,EACb,UAAU,IAAI,OAAO,aAAa;AAAA,EAClC,cAAc,IAAI,OAAO,iBAAiB;AAAA,EAC1C,iBAAiB,IAAI,OAAO,oBAAoB;AACjD;AAEO,MAAM,cAAc;AAAA,EAC1B,aAAa,IAAI,cAAwB,eAAe,iBAAa;AAAA,EACrE,gBAAgB,IAAI,cAA2B,kBAAkB,iBAAgB;AAAA,EACjF,oCAAoC,IAAI,cAAuB,sCAAsC,KAAK;AAAA,EAC1G,mCAAmC,IAAI,cAAuB,qCAAqC,KAAK;AAAA,EACxG,aAAa,IAAI,cAAkC,eAAe,MAAS;AAAA,EAC3E,oBAAoB,IAAI,cAAkC,sBAAsB,MAAS;AAAA,EACzF,uBAAuB,IAAI,cAAuB,yBAAyB,MAAS;AAAA,EACpF,iBAAiB,IAAI,cAAsB,sBAAsB,CAAC;AAAA,EAClE,2BAA2B,IAAI,cAAsB,6BAA6B,CAAC;AAAA,EACnF,qBAAqB,YAA4B;AAChD,WAAO,IAAI,cAAuB,wBAAwB,WAAW,SAAS,EAAE,IAAI,KAAK;AAAA,EAC1F;AACD;AAEA,aAAa,eAAe,OAAO,UAAU;AAAA,EAC5C,OAAO,SAAS,cAAc,aAAa;AAAA,EAC3C,SAAS,MAAM;AAAA,EACf,MAAM,eAAe,IAAI,eAAe,OAAO,QAAQ,YAAY,GAAG,YAAY,gBAAgB,YAAY,CAAC,CAAC;AAAA,EAChH,OAAO;AAAA,EACP,OAAO;AACR,CAAC;AAED,aAAa,eAAe,MAAM,UAAU;AAAA,EAC3C,OAAO,SAAS,gBAAgB,cAAc;AAAA,EAC9C,SAAS,MAAM;AAAA,EACf,MAAM,eAAe,QAAQ,YAAY,gBAAgB,KAAK,CAAC;AAAA,EAC/D,OAAO;AACR,CAAC;AAED,MAAM,mCAAmC,QAAQ;AAAA,EA78BjD,OA68BiD;AAAA;AAAA;AAAA,EAExC;AAAA,EAER,YAAY,YAA4B;AACvC,UAAM;AAAA,MACL,IAAI,mDAAmD,WAAW,SAAS,EAAE;AAAA,MAC7E,OAAO,WAAW,SAAS;AAAA,MAC3B,IAAI;AAAA,MACJ,cAAc,eAAe,GAAG,YAAY,0BAA0B,YAAY,CAAC,GAAG,YAAY,qBAAqB,UAAU,EAAE,UAAU,KAAK,CAAC;AAAA,MACnJ,SAAS,YAAY,qBAAqB,UAAU,EAAE,UAAU,IAAI;AAAA,MACpE,MAAM,EAAE,IAAI,MAAM,cAAc,OAAO,iBAAiB;AAAA,IACzD,CAAC;AACD,SAAK,aAAa;AAAA,EACnB;AAAA,EAEA,IAAI,UAA4B;AAC/B,UAAM,iBAAiB,SAAS,IAAI,eAAe;AACnD,mBAAe,iBAAiB,KAAK,UAAU;AAAA,EAChD;AACD;AAOA,IAAM,uCAAN,MAA2C;AAAA,EAO1C,YAC6B,mBACM,gBACrB,YACZ;AAH2B;AACM;AAGlC,SAAK,4BAA4B,YAAY,gBAAgB,OAAO,iBAAiB;AACrF,SAAK,sCAAsC,YAAY,0BAA0B,OAAO,iBAAiB;AAEzG,mBAAe,+BAA+B,KAAK,gCAAgC,MAAM,KAAK,WAAW;AACzG,eAAW,mBAAmB,KAAK,oBAAoB,MAAM,KAAK,WAAW;AAC7E,eAAW,sBAAsB,KAAK,uBAAuB,MAAM,KAAK,WAAW;AAEnF,eAAW,cAAc,WAAW,cAAc;AACjD,WAAK,mBAAmB,UAAU;AAAA,IACnC;AAAA,EACD;AAAA,EA9/BD,OAw+B2C;AAAA;AAAA;AAAA,EAElC,QAAQ,oBAAI,IAA8C;AAAA,EAC1D;AAAA,EACA;AAAA,EACS,cAAc,IAAI,gBAAgB;AAAA,EAmB3C,mBAAmB,YAAkC;AAC5D,UAAM,SAAS,gBAAgB,cAAc,2BAA2B;AAAA,MACvE,cAAc;AACb,cAAM,UAAU;AAAA,MACjB;AAAA,IACD,CAAC;AAED,UAAM,aAAa,YAAY,qBAAqB,UAAU,EAAE,OAAO,KAAK,iBAAiB;AAC7F,eAAW,IAAI,KAAK,eAAe,UAAU,UAAU,CAAC;AAExD,SAAK,MAAM,IAAI,YAAY;AAAA,MAC1B;AAAA,MACA,UAAU;AACT,mBAAW,MAAM;AACjB,eAAO,QAAQ;AAAA,MAChB;AAAA,IACD,CAAC;AAED,SAAK,4BAA4B;AAAA,EAClC;AAAA,EAEQ,sBAAsB,YAAkC;AAC/D,SAAK,MAAM,IAAI,UAAU,GAAG,QAAQ;AACpC,SAAK,MAAM,OAAO,UAAU;AAC5B,SAAK,4BAA4B;AAAA,EAClC;AAAA,EAEQ,iCAAuC;AAC9C,QAAI,QAAQ;AAEZ,eAAW,CAAC,YAAY,IAAI,KAAK,KAAK,OAAO;AAC5C,YAAM,YAAY,KAAK,eAAe,UAAU,UAAU;AAC1D,WAAK,WAAW,IAAI,SAAS;AAE7B,UAAI,WAAW;AACd;AAAA,MACD;AAAA,IACD;AAEA,SAAK,0BAA0B,IAAI,KAAK,MAAM,IAAI;AAClD,SAAK,oCAAoC,IAAI,KAAK;AAAA,EACnD;AAAA,EAEQ,8BAAoC;AAC3C,SAAK,0BAA0B,IAAI,KAAK,MAAM,IAAI;AAClD,SAAK,oCAAoC,IAAI,SAAS,OAAO,KAAK,MAAM,KAAK,GAAG,CAAC,GAAG,eAAe,KAAK,KAAK,eAAe,UAAU,UAAU,IAAI,IAAI,IAAI,CAAC,CAAC;AAAA,EAC/J;AAAA,EAEA,UAAgB;AACf,SAAK,YAAY,QAAQ;AACzB,YAAQ,KAAK,MAAM,OAAO,CAAC;AAC3B,SAAK,MAAM,MAAM;AAAA,EAClB;AACD;AA7EM,uCAAN;AAAA,EAQG;AAAA,EACA;AAAA,EACA;AAAA,GAVG;AA+EN,MAAM,8BAA8B,WAAwB;AAAA,EAvjC5D,OAujC4D;AAAA;AAAA;AAAA,EAC3D,YACC,KAAK,wCACL,OAAyC,CAAC,GAAG;AAC7C,UAAM;AAAA,MACL;AAAA,MACA,OAAO,SAAS,mBAAmB,cAAc;AAAA,MACjD,QAAQ;AAAA,MACR,IAAI;AAAA,MACJ,MAAM,QAAQ;AAAA,MACd,SAAS,YAAY,YAAY,UAAU,iBAAa;AAAA,MACxD,MAAM,EAAE,IAAI,MAAM,UAAU,OAAO,cAAc,GAAG,KAAK;AAAA,IAC1D,CAAC;AAAA,EACF;AAAA,EAEA,MAAM,UAAU,GAAqB,MAAkC;AACtE,SAAK,WAAW;AAAA,EACjB;AACD;AAEA,MAAM,wCAAwC,sBAAsB;AAAA,EA3kCpE,OA2kCoE;AAAA;AAAA;AAAA,EACnE,cAAc;AACb;AAAA,MACC;AAAA,MACA;AAAA,QACC,IAAI,OAAO;AAAA,QACX,MAAM,eAAe,IAAI,eAAe,OAAO,QAAQ,YAAY,GAAG,YAAY,gBAAgB,YAAY,CAAC,GAAG,YAAY,YAAY,UAAU,iBAAa,CAAC;AAAA,QAClK,OAAO;AAAA,QACP,OAAO;AAAA,MACR;AAAA,IAAC;AAAA,EACH;AACD;AAEA,MAAM,8BAA8B,WAAwB;AAAA,EAxlC5D,OAwlC4D;AAAA;AAAA;AAAA,EAC3D,YACC,KAAK,wCACL,OAAyC,CAAC,GAAG;AAC7C;AAAA,MACC;AAAA,QACC;AAAA,QACA,OAAO,SAAS,mBAAmB,cAAc;AAAA,QACjD,QAAQ;AAAA,QACR,IAAI;AAAA,QACJ,MAAM,QAAQ;AAAA,QACd,SAAS,YAAY,YAAY,UAAU,iBAAa;AAAA,QACxD,MAAM,EAAE,IAAI,MAAM,UAAU,OAAO,cAAc,GAAG,KAAK;AAAA,MAC1D;AAAA,IAAC;AAAA,EACH;AAAA,EAEA,MAAM,UAAU,GAAqB,MAAkC;AACtE,SAAK,WAAW;AAAA,EACjB;AACD;AAEA,MAAM,wCAAwC,sBAAsB;AAAA,EA7mCpE,OA6mCoE;AAAA;AAAA;AAAA,EACnE,cAAc;AACb;AAAA,MACC;AAAA,MACA;AAAA,QACC,IAAI,OAAO;AAAA,QACX,MAAM,eAAe,IAAI,eAAe,OAAO,QAAQ,YAAY,GAAG,YAAY,gBAAgB,YAAY,CAAC,GAAG,YAAY,YAAY,UAAU,iBAAa,CAAC;AAAA,QAClK,OAAO;AAAA,QACP,OAAO;AAAA,MACR;AAAA,IAAC;AAAA,EACH;AACD;AAEA,gBAAgB,qBAAqB;AACrC,gBAAgB,qBAAqB;AACrC,gBAAgB,+BAA+B;AAC/C,gBAAgB,+BAA+B;AAE/C,MAAe,6BAA6B,WAAwB;AAAA,EACnE,YAAoB,SAAgC,OAAe;AAClE,UAAM;AAAA,MACL,IAAI,gDAAgD,OAAO;AAAA,MAC3D;AAAA,MACA,QAAQ;AAAA,MACR,IAAI;AAAA,MACJ,SAAS,sBAAsB,kBAAkB,UAAU,OAAO;AAAA,MAClE,MAAM;AAAA,QACL;AAAA,UACC,IAAI,MAAM;AAAA,UACV,OAAO;AAAA,QACR;AAAA,QACA;AAAA,UACC,IAAI,OAAO;AAAA,UACX,OAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD,CAAC;AAjBkB;AAAA,EAkBpB;AAAA,EAlpCD,OA+nCoE;AAAA;AAAA;AAAA,EAqBnE,UAAU,UAA4B;AACrC,aAAS,IAAI,eAAe,EAAE,cAAc,KAAK,OAAO;AAAA,EACzD;AACD;AAGA,MAAM,4CAA4C,qBAAqB;AAAA,EA1pCvE,OA0pCuE;AAAA;AAAA;AAAA,EACtE,cAAc;AACb,UAAM,sBAAsB,eAAe,SAAS,iCAAiC,wBAAwB,CAAC;AAAA,EAC/G;AACD;AAEA,MAAM,mCAAmC,qBAAqB;AAAA,EAhqC9D,OAgqC8D;AAAA;AAAA;AAAA,EAC7D,cAAc;AACb,UAAM,sBAAsB,MAAM,SAAS,wBAAwB,cAAc,CAAC;AAAA,EACnF;AACD;AAEA,MAAM,mCAAmC,qBAAqB;AAAA,EAtqC9D,OAsqC8D;AAAA;AAAA;AAAA,EAC7D,cAAc;AACb,UAAM,sBAAsB,MAAM,SAAS,wBAAwB,cAAc,CAAC;AAAA,EACnF;AACD;AAEA,gBAAgB,mCAAmC;AACnD,gBAAgB,0BAA0B;AAC1C,gBAAgB,0BAA0B;AAE1C,MAAe,yBAAyB,WAAwB;AAAA,EAC/D,YAAoB,SAAsB,OAAe;AACxD,UAAM;AAAA,MACL,IAAI,mCAAmC,OAAO;AAAA,MAC9C;AAAA,MACA,QAAQ;AAAA,MACR,IAAI;AAAA,MACJ,SAAS,YAAY,eAAe,UAAU,OAAO;AAAA,MACrD,cAAc,YAAY,YAAY,UAAU,iBAAa;AAAA,MAC7D,MAAM,EAAE,IAAI,MAAM,UAAU,OAAO,SAAS;AAAA,IAC7C,CAAC;AATkB;AAAA,EAUpB;AAAA,EA3rCD,OAgrCgE;AAAA;AAAA;AAAA,EAa/D,MAAM,UAAU,GAAqB,MAAkC;AACtE,SAAK,cAAc,KAAK;AAAA,EACzB;AACD;AAEA,MAAM,4BAA4B,iBAAiB;AAAA,EAlsCnD,OAksCmD;AAAA;AAAA;AAAA,EAClD,cAAc;AACb,UAAM,mBAAkB,SAAS,qBAAqB,sBAAsB,CAAC;AAAA,EAC9E;AACD;AAEA,MAAM,4BAA4B,iBAAiB;AAAA,EAxsCnD,OAwsCmD;AAAA;AAAA;AAAA,EAClD,cAAc;AACb,UAAM,mBAAkB,SAAS,qBAAqB,sBAAsB,CAAC;AAAA,EAC9E;AACD;AAEA,MAAM,8BAA8B,iBAAiB;AAAA,EA9sCrD,OA8sCqD;AAAA;AAAA;AAAA,EACpD,cAAc;AACb,UAAM,uBAAoB,SAAS,uBAAuB,wBAAwB,CAAC;AAAA,EACpF;AACD;AAEA,gBAAgB,mBAAmB;AACnC,gBAAgB,mBAAmB;AACnC,gBAAgB,qBAAqB;AAErC,MAAM,sCAAsC,WAAwB;AAAA,EAxtCpE,OAwtCoE;AAAA;AAAA;AAAA,EAEnE,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,SAAS,gBAAgB,2BAA2B;AAAA,MAC3D,QAAQ;AAAA,MACR,IAAI;AAAA,MACJ,MAAM,QAAQ;AAAA,MACd,MAAM;AAAA,QACL,IAAI,OAAO;AAAA,QACX,OAAO;AAAA,QACP,MAAM,eAAe,IAAI,eAAe,OAAO,QAAQ,YAAY,GAAG,YAAY,kCAAkC,UAAU,IAAI,GAAG,YAAY,mCAAmC,UAAU,KAAK,CAAC;AAAA,MACrM;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,MAAM,UAAU,GAAqB,MAAkC;AACtE,SAAK,wBAAwB;AAAA,EAC9B;AACD;AAEA,MAAM,oCAAoC,WAAwB;AAAA,EA9uClE,OA8uCkE;AAAA;AAAA;AAAA,EAEjE,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,SAAS,cAAc,yBAAyB;AAAA,MACvD,QAAQ;AAAA,MACR,IAAI;AAAA,MACJ,MAAM,QAAQ;AAAA,MACd,MAAM;AAAA,QACL,IAAI,OAAO;AAAA,QACX,OAAO;AAAA,QACP,MAAM,eAAe,IAAI,eAAe,OAAO,QAAQ,YAAY,GAAG,YAAY,kCAAkC,UAAU,IAAI,GAAG,YAAY,mCAAmC,UAAU,IAAI,CAAC;AAAA,MACpM;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,MAAM,UAAU,GAAqB,MAAkC;AACtE,SAAK,sBAAsB;AAAA,EAC5B;AACD;AAEA,gBAAgB,6BAA6B;AAC7C,gBAAgB,2BAA2B;AAE3C,IAAW,0BAAX,kBAAWC,6BAAX;AACC,EAAAA,yBAAA,kBAAe;AADL,SAAAA;AAAA,GAAA;AAIX,IAAW,2BAAX,kBAAWC,8BAAX;AACC,EAAAA,0BAAA,kBAAe;AADL,SAAAA;AAAA,GAAA;AAIX,IAAM,6BAAN,cAAyC,aAAa;AAAA,EAOrD,YACkB,OACiB,gBACjC;AACD,UAAM;AAHW;AACiB;AAAA,EAGnC;AAAA,EA3xCD,OA+wCsD;AAAA;AAAA;AAAA,EAEpC,kBAAkB,oBAAI,IAAa;AAAA,EACpD,IAAW,iBAA+B;AAAE,WAAO,KAAK;AAAA,EAAiB;AAAA,EAEjE;AAAA,EASR,MAAyB,UAAU,QAAgC;AAClE,QAAI;AAEH,UAAI,KAAK,eAAe,SAAS,GAAG;AACnC,aAAK,MAAM,OAAO;AAElB,YAAI,OAAO,OAAO,6CAAsC;AACvD;AAAA,QACD;AAAA,MACD;AAGA,YAAM,UAA2C,CAAC;AAClD,iBAAW,SAAS,KAAK,MAAM,WAAW,SAAS,QAAQ;AAC1D,gBAAQ,KAAK;AAAA,UACZ,iBAAiB,MAAM;AAAA,UACvB,WAAW,CAAC,GAAG,MAAM,UAAU,IAAI,OAAK,EAAE,SAAS,CAAC;AAAA,QACrD,CAAC;AAAA,MACF;AAGA,WAAK,gBAAgB,IAAI,MAAM;AAC/B,WAAK,OAAO,IAAI,wBAAwB;AACxC,YAAM,OAAO,IAAI,GAAG,CAAC,KAAK,MAAM,WAAW,SAAS,SAAS,SAAS,KAAK,KAAK,KAAK,CAAC;AAAA,IACvF,UAAE;AACD,WAAK,gBAAgB,OAAO,MAAM;AAGlC,UAAI,KAAK,gBAAgB,SAAS,GAAG;AACpC,aAAK,eAAe,MAAM,6CAAuC,OAAO,IAAI,aAAa,SAAS,cAAc,IAAI;AAAA,MACrH;AAAA,IACD;AAAA,EACD;AAED;AAhDM,6BAAN;AAAA,EASG;AAAA,GATG;AAkDN,IAAM,wBAAN,cAAoC,iBAAiB;AAAA,EAepD,YACC,WACA,SAC+B,aACM,mBAChB,oBACJ,gBACG,mBACc,gBACf,kBAClB;AACD,UAAM,WAAW,EAAE,WAAW,OAAO,aAAa,GAAG,QAAQ,GAAG,aAAa,mBAAmB,oBAAoB,mBAAmB,gBAAgB,gBAAgB;AARxI;AACM;AAIH;AAKlC,SAAK,kBAAkB,IAAI;AAAA,MAC1B;AAAA,MACA,SAAS,uBAAuB,iBAAiB;AAAA,MACjD;AAAA,IAAsB;AAEvB,SAAK,gBAAgB,IAAI,eAAe;AAAA,MACvC,IAAI;AAAA,MACJ,OAAO,SAAS,wBAAwB,QAAQ;AAAA,MAChD,MAAM,QAAQ;AAAA,IACf,GAAG,QAAW,QAAW,QAAW,QAAW,mBAAmB,cAAc;AAAA,EACjF;AAAA,EAv2CD,OAi0CqD;AAAA;AAAA;AAAA,EAE5C,mBAA8B,CAAC;AAAA,EACvC,IAAI,kBAA6B;AAAE,WAAO,KAAK;AAAA,EAAkB;AAAA,EAEzD;AAAA,EACR,IAAI,iBAA0B;AAAE,WAAO,KAAK;AAAA,EAAiB;AAAA,EAErD;AAAA,EAEA,eAAe,IAAI,QAAc;AAAA,EAChC,cAA2B,KAAK,aAAa;AAAA,EAErC,eAAe,KAAK,UAAU,IAAI,kBAAmC,CAAC;AAAA,EA2BhF,SAAS,OAAwB;AACvC,SAAK,aAAa,QAAQ,IAAI,gBAAgB;AAE9C,UAAM,oBAAoB,KAAK,kBAAkB,cAAc;AAAA,MAC9D,CAAC,eAAe,MAAM,WAAW,SAAS,YAAY;AAAA,MACtD,CAAC,sBAAsB,MAAM,WAAW,SAAS,SAAS,SAAS,CAAC;AAAA,MACpE,CAAC,yBAAyB,CAAC,CAAC,MAAM,WAAW,SAAS,OAAO;AAAA,IAC9D,CAAC;AAED,UAAM,OAAO,KAAK,aAAa,MAAM,IAAI,KAAK,YAAY,WAAW,OAAO,aAAa,mBAAmB,EAAE,6BAA6B,KAAK,CAAC,CAAC;AAElJ,UAAM,YAAY,6BAAe;AAChC,aAAO,MAAM,WAAW,SAAS,OAAO,KAAK,OAAK,EAAE,UAAU,SAAS,CAAC;AAAA,IACzE,GAFkB;AAIlB,UAAM,gBAAgB,6BAAM;AAC3B,YAAM,UAAqB,CAAC;AAC5B,sCAAgC,MAAM,EAAE,mBAAmB,KAAK,GAAG,OAAO;AAE1E,iBAAW,UAAU,SAAS;AAC7B,eAAO,UAAU,UAAU;AAAA,MAC5B;AACA,WAAK,gBAAgB,UAAU,UAAU;AAEzC,UAAI,gBAAqC;AAEzC,UAAI,QAAQ,WAAW,GAAG;AACzB,wBAAgB,QAAQ,CAAC;AAAA,MAC1B,WAAW,QAAQ,SAAS,GAAG;AAC9B,cAAM,eAAe,KAAK,eAAe,IAAI,6CAAuC,aAAa,SAAS,EAAE;AAC5G,wBAAgB,QAAQ,KAAK,OAAK,EAAE,OAAO,YAAY,KAAK,QAAQ,CAAC;AAAA,MACtE;AAEA,WAAK,mBAAmB,QAAQ,WAAW,IAAI,CAAC,IAAI;AACpD,YAAM,WAAW,gBAAgB,CAAC,aAAa,IAAI,CAAC,GAAG,CAAC,CAAC;AAEzD,WAAK,aAAa,KAAK;AAAA,IACxB,GAtBsB;AAwBtB,SAAK,aAAa,MAAM,IAAI,KAAK,YAAY,MAAM,cAAc,CAAC,CAAC;AACnE,SAAK,aAAa,MAAM,IAAI,MAAM,WAAW,SAAS,qBAAqB,MAAM,cAAc,CAAC,CAAC;AACjG,SAAK,aAAa,MAAM,IAAI,KAAK,eAAe,iBAAiB,aAAa,SAAS,6CAAuC,KAAK,aAAa,KAAK,EAAE,MAAM,cAAc,CAAC,CAAC;AAE7K,SAAK,eAAe,IAAI,2BAA2B,OAAO,KAAK,cAAc;AAC7E,SAAK,aAAa,MAAM,IAAI,KAAK,aAAa,UAAU,OAAK;AAC5D,UAAK,KAAK,aAA4C,eAAe,SAAS,GAAG;AAChF,cAAM,WAAW,CAAC,KAAK,aAAa,GAAG,CAAC,CAAC;AACzC,aAAK,aAAa,KAAK;AAAA,MACxB;AAAA,IACD,CAAC,CAAC;AACF,SAAK,aAAa,MAAM,IAAI,KAAK,aAAa,SAAS,OAAK;AAC3D,UAAK,KAAK,aAA4C,eAAe,SAAS,GAAG;AAChF,sBAAc;AAAA,MACf;AAAA,IACD,CAAC,CAAC;AAEF,kBAAc;AAAA,EACf;AACD;AAlGM,wBAAN;AAAA,EAkBG;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAxBG;AAoGN,MAAM,4BAA4B;AAAA,EASjC,YACkB,wBACA,sBAA6C;AAD7C;AACA;AAEjB,UAAM,2BAA2B,MAAM;AAAA,MACtC,KAAK,qBAAqB;AAAA,MAC1B,OAAK;AACJ,eAAO,EAAE,qBAAqB,6BAA6B,KAC1D,EAAE,qBAAqB,uBAAuB,KAC9C,EAAE,qBAAqB,mBAAmB,KAC1C,EAAE,qBAAqB,eAAe,KACtC,EAAE,qBAAqB,iBAAiB,KACxC,EAAE,qBAAqB,qBAAqB,KAC5C,EAAE,qBAAqB,mBAAmB;AAAA,MAC5C;AAAA,MACA,KAAK;AAAA,IACN;AAEA,SAAK,aAAa,IAAI,yBAAyB,MAAM,KAAK,aAAa,KAAK,CAAC,CAAC;AAAA,EAC/E;AAAA,EAj8CD,OAq6CkC;AAAA;AAAA;AAAA,EAEhB,eAAe,IAAI,QAAc;AAAA,EACzC,cAAc,KAAK,aAAa;AAAA,EAExB,yBAAyB;AAAA,EAEzB,eAAe,IAAI,gBAAgB;AAAA,EAuBpD,+BAA2D;AAC1D,UAAM,aAAa,KAAK,qBAAqB;AAC7C,UAAM,WAAW,KAAK,mBAAmB;AACzC,UAAM,aAAa,KAAK,qBAAqB,QAAQ;AAErD,WAAO;AAAA,MACN,GAAG,uBAAuB,KAAK,oBAAoB;AAAA,MACnD,GAAG,KAAK,gCAAgC;AAAA,MACxC,aAAa;AAAA,MACb,aAAa;AAAA,MACb,gBAAgB,EAAE,SAAS,KAAK;AAAA,MAChC;AAAA,MACA;AAAA,MACA,cAAc;AAAA,MACd,sBAAsB;AAAA,MACtB;AAAA,MACA,wBAAwB,KAAK;AAAA,MAC7B,SAAS,EAAE,KAAK,GAAG,QAAQ,EAAE;AAAA,MAC7B,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,WAAW;AAAA,QACV,yBAAyB;AAAA,QACzB,UAAU;AAAA,MACX;AAAA,MACA,gBAAgB;AAAA,MAChB,kBAAkB;AAAA,IACnB;AAAA,EACD;AAAA,EAEA,mBAAmC;AAClC,UAAM,aAAa,KAAK,qBAAqB;AAC7C,UAAM,WAAW,KAAK,mBAAmB;AACzC,UAAM,aAAa,KAAK,qBAAqB,QAAQ;AACrD,UAAM,uBAAuB,KAAK,qBAAqB,SAAgC,6BAA6B;AACpH,UAAM,iBAAiB,KAAK,qBAAqB,SAA4D,uBAAuB;AAEpI,WAAO,EAAE,GAAG,KAAK,gCAAgC,GAAG,sBAAsB,gBAAgB,YAAY,UAAU,WAAW;AAAA,EAC5H;AAAA,EAEQ,uBAA+B;AACtC,UAAM,kBAAkB,KAAK,qBAAqB,SAAiB,qBAAqB,EAAE,KAAK;AAE/F,QAAI,gBAAgB,YAAY,MAAM,UAAU;AAC/C,aAAO,KAAK,qBAAqB,SAAiB,mBAAmB,EAAE,KAAK;AAAA,IAC7E;AAEA,QAAI,gBAAgB,WAAW,KAAK,gBAAgB,YAAY,MAAM,WAAW;AAChF,aAAO;AAAA,IACR;AAEA,WAAO,KAAK;AAAA,EACb;AAAA,EAEQ,qBAA6B;AACpC,WAAO,KAAK,qBAAqB,SAAiB,mBAAmB;AAAA,EACtE;AAAA,EAEQ,kCAAkD;AAEzD,UAAM,eAAe,KAAK,qBAAqB,QAAQ,iBAAiB,EAAE,oBAAoB,WAAW,CAAC;AAC1G,UAAM,SAAS,aAAa,qBAAqB,SAAS,UAAU,IAAI,cAAc,OAAO,SAAS,aAAa,KAAK,IAAI,CAAC;AAG7H,UAAM,iBAAiB,KAAK,qBAAqB,QAAQ,mBAAmB,EAAE,oBAAoB,WAAW,CAAC;AAC9G,UAAM,WAAW,eAAe,qBAAqB,SAAS,UAAU,IAAI,cAAc,SAAS,SAAS,eAAe,KAAK,IAAI;AAEpI,WAAO,EAAE,QAAQ,SAAS;AAAA,EAC3B;AAAA,EAEQ,qBAAqB,UAA0B;AACtD,WAAO,KAAK,MAAM,WAAW,GAAG;AAAA,EACjC;AAAA,EAEA,UAAgB;AACf,SAAK,aAAa,QAAQ;AAAA,EAC3B;AAED;AAEA,IAAM,iBAAN,MAAqB;AAAA,EAoLpB,YACC,WACA,wBACoB,mBACG,cACK,mBACG,sBACS,sBACN,gBACI,oBACL,eACK,oBACrC;AARsB;AACK;AACG;AACS;AACN;AACI;AACL;AACK;AAEtC,SAAK,UAAU,OAAO,WAAW,EAAE,aAAa,CAAC;AACjD,SAAK,kBAAkB,OAAO,KAAK,SAAS,EAAE,uBAAuB,CAAC;AACtE,SAAK,mBAAmB,OAAO,KAAK,SAAS,EAAE,qBAAqB,CAAC;AAErE,SAAK,oBAAoB,kBAAkB,aAAa,KAAK,OAAO;AACpE,SAAK,yBAAyB,KAAK,kBAAkB,UAAU,iBAAiB,MAAS;AAEzF,SAAK,qBAAqB,IAAI,4BAA4B,wBAAwB,KAAK,oBAAoB;AAC3G,SAAK,YAAY,IAAI,KAAK,mBAAmB,YAAY,KAAK,0BAA0B,IAAI,CAAC;AAC7F,SAAK,YAAY,IAAI,KAAK,kBAAkB;AAE5C,UAAM,0BAAoD;AAAA,MACzD,eAAe,yBAAyB,2BAA2B;AAAA,QAClE,qBAAqB;AAAA,QACrB,cAAc;AAAA,QACd,sBAAsB;AAAA,QACtB,oBAAoB;AAAA,QACpB,sBAAsB;AAAA,QACtB,yBAAyB;AAAA,QACzB,gBAAgB;AAAA,QAChB,aAAa;AAAA,QACb,uBAAuB;AAAA,QACvB,qBAAqB;AAAA,QACrB,4BAA4B;AAAA,QAC5B,aAAa;AAAA,QACb,cAAc;AAAA,QACd,kBAAkB;AAAA,QAClB,4BAA4B;AAAA,QAC5B;AAAA,QACA,mBAAmB;AAAA,QACnB,kBAAkB;AAAA,MACnB,CAAC;AAAA,MACD,gBAAgB;AAAA,IACjB;AAEA,UAAM,WAAW,IAAI,kBAAkB,CAAC,oBAAoB,KAAK,iBAAiB,CAAC;AACnF,UAAM,wBAAwB,qBAAqB,YAAY,UAAU,KAAK,WAAW;AACzF,UAAM,4BAA4B,KAAK,mBAAmB,6BAA6B;AACvF,SAAK,cAAc,sBAAsB,eAAe,kBAAkB,KAAK,iBAAiB,2BAA2B,uBAAuB;AAClJ,SAAK,YAAY,IAAI,KAAK,WAAW;AAErC,SAAK,YAAY,IAAI,KAAK,YAAY,qBAAqB,MAAM;AAChE,UAAI,KAAK,OAAO,YAAY;AAC3B,aAAK,eAAe,MAAM,KAAK,MAAM,UAAU;AAAA,MAChD;AAEA,WAAK,QAAQ,UAAU,IAAI,iBAAiB;AAC5C,WAAK,iBAAiB;AAAA,IACvB,CAAC,CAAC;AACF,SAAK,YAAY,IAAI,KAAK,YAAY,oBAAoB,MAAM;AAC/D,WAAK,QAAQ,UAAU,OAAO,iBAAiB;AAE/C,iBAAW,MAAM;AAChB,YAAI,CAAC,KAAK,cAAc,CAAC,KAAK,oBAAoB;AACjD,eAAK,gBAAgB;AAAA,QACtB;AAAA,MACD,GAAG,CAAC;AAAA,IACL,CAAC,CAAC;AAEF,SAAK,YAAY,IAAI,KAAK,YAAY,sBAAsB,MAAM;AACjE,0BAAoB,IAAI,KAAK,WAAW,GAAG,aAAa;AACxD,+BAAyB,IAAI,KAAK,WAAW,GAAG,aAAa;AAAA,IAC9D,CAAC,CAAC;AAEF,UAAM,eAAe,KAAK,kBAAkB,UAAmB,6BAA6B,KAAK;AACjG,UAAM,cAAc,KAAK,kBAAkB,UAAmB,4BAA4B,KAAK;AAE/F,SAAK,YAAY,IAAI,KAAK,YAAY,0BAA0B,CAAC,EAAE,SAAS,MAAM;AACjF,YAAM,YAAY,KAAK,YAAY,cAAc;AACjD,YAAM,iBAAiB,UAAU,aAAa;AAC9C,YAAM,cAAc,UAAU,cAAc,cAAc,IAAI;AAC9D,YAAM,eAAe,UAAU,qBAAqB,mCAAmC,QAAQ;AAC/F,mBAAa,IAAI,aAAa,eAAe,KAAK,aAAa,WAAW,CAAC;AAC3E,kBAAY,IAAI,aAAa,eAAe,kBAAkB,aAAa,WAAW,WAAW;AAAA,IAClG,CAAC,CAAC;AACF,SAAK,YAAY,IAAI,KAAK,YAAY,kBAAkB,OAAK;AAC5D,WAAK,iBAAiB,UAAU,OAAO,qBAAqB,EAAE,YAAY,CAAC;AAAA,IAC5E,CAAC,CAAC;AAEF,UAAM,OAAO,KAAK,qBAAqB,0BAA0B,OAAK,EAAE,qBAAqB,2BAA2B,CAAC,EAAE,MAAM,KAAK,OAAO,GAAG,MAAM,KAAK,WAAW;AAEtK,SAAK,2BAA2B,MAAM,OAAO,MAAM,OAAO,KAAK,YAAY,wBAAwB,OAAK,EAAE,sBAAsB,KAAK,WAAW,CAAC;AAGjJ,SAAK,UAAU,sBAAsB,eAAe,uBAAuB,KAAK,kBAAkB;AAAA,MACjG,wBAAwB,wBAAC,QAAQ,YAAY;AAC5C,YAAI,kBAAkB,kBAAkB,KAAK,QAAQ,gBAAgB,SAAS,GAAG;AAChF,iBAAO,qBAAqB,eAAe,mCAAmC,QAAQ,KAAK,QAAQ,gBAAgB,KAAK,QAAQ,iBAAiB,IAAI,KAAK,oBAAoB,EAAE,cAAc,KAAK,QAAQ,cAAc,eAAe,QAAQ,cAAc,CAAC;AAAA,QAChQ;AAEA,eAAO,qBAAqB,sBAAsB,QAAQ,OAAO;AAAA,MAClE,GANwB;AAAA,MAOxB,aAAa;AAAA,QACZ,mBAAmB;AAAA,MACpB;AAAA,IACD,CAAC;AACD,SAAK,YAAY,IAAI,KAAK,QAAQ,YAAY,MAAM,KAAK,OAAO,CAAC,CAAC;AAClE,SAAK,YAAY,IAAI,KAAK,OAAO;AAAA,EAClC;AAAA,EArzDD,OAkhDqB;AAAA;AAAA;AAAA,EAEpB,OAAwB,qBAAqD;AAAA,IAC5E,CAAC,oBAAoB,WAAW,GAAG;AAAA,IACnC,CAAC,oBAAoB,OAAO,GAAG;AAAA,IAC/B,CAAC,oBAAoB,KAAK,GAAG;AAAA,EAC9B;AAAA,EAEiB;AAAA,EAET;AAAA,EACA;AAAA,EACS;AAAA,EACA;AAAA,EACT;AAAA,EACA;AAAA,EACS,cAAc,IAAI,gBAAgB;AAAA,EAE3C;AAAA,EACA;AAAA,EACS,wBAAwB,IAAI,gBAAgB;AAAA,EAErD;AAAA,EACA;AAAA,EACA,qBAA8B;AAAA,EAC9B;AAAA;AAAA;AAAA,EAIA,qBAAqB;AAAA,EACrB,yBAAyB;AAAA,EAExB;AAAA,EAET,IAAI,QAA+B;AAClC,WAAO,KAAK,OAAO;AAAA,EACpB;AAAA,EAEA,IAAI,MAAM,OAA8B;AACvC,QAAI,UAAU,KAAK,OAAO;AACzB;AAAA,IACD;AAEA,SAAK,gBAAgB;AACrB,SAAK,QAAQ,UAAU,OAAO,iBAAiB;AAE/C,SAAK,sBAAsB,MAAM;AACjC,SAAK,uBAAuB,IAAI,OAAO,WAAW,EAAE;AAEpD,QAAI,CAAC,OAAO;AACX,WAAK,YAAY,SAAS,MAAS;AACnC,WAAK,QAAQ;AACb;AAAA,IACD;AAEA,UAAM,YAAY,MAAM,WAAW,SAAS;AAC5C,SAAK,YAAY,SAAS,SAAS;AAEnC,QAAI,KAAK,qBAAqB,SAAS,+BAA+B,EAAE,UAAU,UAAU,IAAI,CAAC,MAAM,OAAO;AAC7G,WAAK,qBAAqB,YAAY,+BAA+B,OAAO,EAAE,UAAU,UAAU,IAAI,GAAG,oBAAoB,MAAM;AAAA,IACpI;AAGA,UAAM,oBAAoB,IAAI,iBAAsB,GAAG;AACvD,UAAM,WAAW,mCAAY;AAC5B,YAAM,WAAW,KAAK,YAAY,aAAa,GAAG,iBAAiB;AACnE,YAAM,SAAS,YAAY,UAAU,YAAY,QAAQ;AACzD,YAAM,QAAQ,UAAU,SAAS;AAEjC,WAAK,cAAc,MAAM,MAAM,cAAc,OAAO,UAAU,CAAC,CAAC;AAAA,IACjE,GANiB;AAQjB,UAAM,oBAAoB,6BAAM,kBAAkB,QAAQ,QAAQ,GAAxC;AAC1B,SAAK,sBAAsB,IAAI,iBAAiB;AAChD,SAAK,sBAAsB,IAAI,KAAK,YAAY,0BAA0B,iBAAiB,CAAC;AAG5F,UAAM,OAAO,KAAK,aAAa,mBAAmB,UAAU,cAAc,GAAG,UAAU,KAAK,UAAU,iBAAiB;AACvH,UAAM,UAAU,MAAM,OAAO,KAAK,YAAY,WAAW,OAAK,EAAE,YAAY,QAAQ,OAAO,KAAK,qBAAqB;AACrH,SAAK,sBAAsB,IAAI,QAAQ,MAAM,UAAU,kBAAkB,KAAK,cAAc,KAAK,OAAO,CAAC,CAAC;AAG1G,cAAU,SAAS,MAAM,KAAK;AAC9B,SAAK,sBAAsB,IAAI,MAAM,YAAY,CAAC,EAAE,OAAO,OAAO,MAAM;AACvE,YAAM,eAAe,UAAU,SAAS;AACxC,UAAI,UAAU,cAAc;AAC3B;AAAA,MACD;AAEA,gBAAU,iBAAiB;AAC3B,gBAAU,mBAAmB,MAAM,CAAC,cAAc,YAAY,UAAU,kBAAkB,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC;AAE9G,YAAM,WAAW,WAAW,qBAAqB,kBAC9C,UAAU,kBAAkB,EAAE,iBAAiB,IAC/C,UAAU,kBAAkB,EAAE,eAAe;AAChD,WAAK,YAAY,YAAY,QAAQ;AACrC,WAAK,YAAY,wCAAwC,QAAQ;AAAA,IAClE,CAAC,CAAC;AACF,SAAK,sBAAsB,IAAI,MAAM,iBAAiB,MAAM,KAAK,MAAM,CAAC,CAAC;AACzE,SAAK,sBAAsB,IAAI,MAAM,6BAA6B,CAAC,MAAM,KAAK,cAAc,GAAG,EAAE,OAAO,MAAM,SAAS,KAAK,CAAC,CAAC,CAAC;AAC/H,SAAK,sBAAsB,IAAI,MAAM,yBAAyB,CAAC,MAAM,kBAAkB,CAAC,CAAC;AAGzF,SAAK,sBAAsB,IAAI,UAAU,mBAAmB,MAAM;AACjE,YAAM,SAAS,UAAU,SAAS,GAAG,IAAI;AACzC,wBAAkB;AAAA,IACnB,CAAC,CAAC;AAGF,UAAM,wBAAwB,6BAAM;AACnC,YAAM,UAAU,KAAK,kBAAkB,iBAAiB,iBAAiB;AACzE,YAAM,QAAQ,UAAU,QAAQ,SAAS,IAAK,SAAS,cAAc,cAAc;AACnF,YAAM,kBAAkB,OAAO,MAAM,aAAa,KAAK;AAEvD,WAAK,YAAY,cAAc,EAAE,aAAa,gBAAgB,CAAC;AAAA,IAChE,GAN8B;AAO9B,SAAK,sBAAsB,IAAI,MAAM,uBAAuB,qBAAqB,CAAC;AAClF,SAAK,sBAAsB,IAAI,KAAK,kBAAkB,uBAAuB,qBAAqB,CAAC;AACnG,0BAAsB;AAGtB,QAAI,iBAAiB;AACrB,SAAK,sBAAsB,IAAI,QAAQ,YAAU;AAChD,UAAI,CAAC,MAAM,SAAS;AACnB;AAAA,MACD;AAEA,YAAM,oBAAoB;AAC1B,uBAAiB,MAAM,WAAW,SAAS,eAAe,KAAK,MAAM;AAErE,YAAM,QAAQ,UAAU,SAAS;AACjC,UAAI,SAAS,UAAU,mBAAmB;AACzC;AAAA,MACD;AAEA,gBAAU,SAAS,cAAc;AAAA,IAClC,CAAC,CAAC;AAGF,UAAM,mBAAmB,wBAAC,YAAqB;AAC9C,WAAK,YAAY,cAAc,EAAE,UAAU,CAAC,QAAQ,CAAC;AAAA,IACtD,GAFyB;AAGzB,SAAK,sBAAsB,IAAI,MAAM,sBAAsB,aAAW,iBAAiB,OAAO,CAAC,CAAC;AAChG,qBAAiB,MAAM,OAAO;AAG9B,SAAK,QAAQ,SAAS,KAAK;AAG3B,SAAK,QAAQ,EAAE,OAAO,UAAU;AAAA,EACjC;AAAA,EAEA,IAAI,aAAiC;AACpC,WAAO,KAAK,YAAY,cAAc;AAAA,EACvC;AAAA,EAEA,IAAI,WAAW,YAAgC;AAC9C,QAAI,YAAY;AACf,WAAK,YAAY,cAAc,UAAU;AAAA,IAC1C;AAAA,EACD;AAAA,EAEQ,cAAc,YAA0C,SAAkD;AACjH,QAAI,KAAK,kBAAkB;AAC1B,mBAAa,KAAK,gBAAgB;AAClC,WAAK,mBAAmB;AAAA,IACzB;AAEA,SAAK,aAAa;AAClB,SAAK,iBAAiB;AAEtB,QAAI,SAAS,SAAS,CAAC,KAAK,SAAS,GAAG;AACvC,WAAK,MAAM;AAAA,IACZ;AAEA,QAAI,cAAc,SAAS,SAAS;AACnC,WAAK,mBAAmB,WAAW,MAAM,KAAK,cAAc,MAAS,GAAG,eAAe,mBAAmB,WAAW,IAAI,CAAC;AAAA,IAC3H;AAAA,EACD;AAAA,EAmHA,mBAA2B;AAC1B,UAAM,aAAa,KAAK,YAAY,UAAU,aAAa,UAAU;AACrE,UAAM,EAAE,KAAK,OAAO,IAAI,KAAK,YAAY,UAAU,aAAa,OAAO;AAEvE,UAAM,sBAAsB,KAAK,qBAAqB,SAAS,uBAAuB;AACtF,UAAM,gBAAgB,OAAO,wBAAwB,WAAW,MAAM,qBAAqB,GAAG,EAAE,IAAI;AACpG,UAAM,kBAAkB,gBAAgB,aAAa,MAAM;AAE3D,UAAM,sBAAsB,KAAK,qBAAqB,SAAS,uBAAuB;AACtF,UAAM,gBAAgB,OAAO,wBAAwB,WAAW,MAAM,qBAAqB,GAAG,EAAE,IAAI;AACpG,UAAM,kBAAkB,gBAAgB,aAAa,MAAM;AAE3D,WAAO,MAAM,KAAK,YAAY,iBAAiB,GAAG,iBAAiB,eAAe;AAAA,EACnF;AAAA,EAEA,SAAe;AACd,UAAM,eAAe,KAAK,iBAAiB;AAC3C,UAAM,eAAe,KAAK,gBAAgB;AAC1C,UAAM,YAAY,IAAI,UAAU,KAAK,QAAQ,cAAc,cAAc,YAAY;AAErF,QAAI,UAAU,QAAQ,GAAG;AACxB,WAAK,qBAAqB;AAC1B;AAAA,IACD;AAEA,SAAK,qBAAqB;AAC1B,SAAK,YAAY,OAAO,SAAS;AACjC,SAAK,iBAAiB;AAEtB,UAAM,wBAAwB,KAAK,qBAAqB,SAAkB,2BAA2B,MAAM;AAC3G,SAAK,iBAAiB,UAAU,OAAO,UAAU,CAAC,yBAAyB,KAAK,SAAS,QAAQ,MAAM,IAAI;AAE3G,QAAI,KAAK,wBAAwB;AAChC,WAAK,yBAAyB;AAC9B,WAAK,MAAM;AAAA,IACZ;AAAA,EACD;AAAA,EAEA,QAAc;AACb,QAAI,KAAK,oBAAoB;AAC5B,WAAK,qBAAqB;AAC1B,WAAK,yBAAyB;AAC9B;AAAA,IACD;AAEA,SAAK,YAAY,MAAM;AACvB,SAAK,QAAQ,UAAU,IAAI,iBAAiB;AAAA,EAC7C;AAAA,EAEA,WAAoB;AACnB,WAAO,KAAK,YAAY,aAAa;AAAA,EACtC;AAAA,EAEQ,2BAAiC;AACxC,SAAK,YAAY,cAAc,KAAK,mBAAmB,iBAAiB,CAAC;AAAA,EAC1E;AAAA,EAEQ,mBAAyB;AAChC,SAAK,gBAAgB;AAErB,SAAK,QAAQ,UAAU,OAAO,mBAAmB,KAAK,YAAY,SAAS,oBAAoB,WAAW;AAC1G,SAAK,QAAQ,UAAU,OAAO,sBAAsB,KAAK,YAAY,SAAS,oBAAoB,OAAO;AACzG,SAAK,QAAQ,UAAU,OAAO,oBAAoB,KAAK,YAAY,SAAS,oBAAoB,KAAK;AAErG,QAAI,CAAC,KAAK,cAAc,CAAC,KAAK,YAAY,aAAa,GAAG;AACzD;AAAA,IACD;AAEA,UAAM,cAAc,IAAI,gBAAgB;AAExC,SAAK,wBAAwB,KAAK,mBAAmB,gBAAgB;AAAA,MACpE,WAAW,6BAAM,KAAK,SAAX;AAAA,MACX,QAAQ,sCAAa;AACpB,aAAK,QAAQ,MAAM,yBAAyB;AAC5C,aAAK,QAAQ,MAAM,0BAA0B;AAE7C,cAAM,sBAAsB,OAAO,WAAW,EAAE,kCAAkC,CAAC;AACnF,4BAAoB,UAAU,OAAO,mBAAmB,KAAK,WAAY,SAAS,oBAAoB,WAAW;AACjH,4BAAoB,UAAU,OAAO,sBAAsB,KAAK,WAAY,SAAS,oBAAoB,OAAO;AAChH,4BAAoB,UAAU,OAAO,oBAAoB,KAAK,WAAY,SAAS,oBAAoB,KAAK;AAC5G,4BAAoB,MAAM,QAAQ,GAAG,KAAK,QAAQ,cAAc,CAAC;AACjE,cAAM,UAAU,OAAO,qBAAqB,EAAE,wBAAwB,CAAC;AAEvE,cAAM,UAAU,KAAK,WAAY;AACjC,YAAI,OAAO,YAAY,UAAU;AAChC,kBAAQ,cAAc;AAAA,QACvB,OAAO;AACN,gBAAM,UAAU,WAAW,OAAO;AAClC,sBAAY,IAAI,OAAO;AACvB,sBAAY,IAAI,QAAQ,WAAW,MAAO,KAAK,qBAAqB,IAAK,CAAC;AAC1E,sBAAY,IAAI,QAAQ,UAAU,MAAM;AACvC,iBAAK,qBAAqB;AAC1B,iBAAK,QAAQ,MAAM,yBAAyB;AAC5C,iBAAK,QAAQ,MAAM,0BAA0B;AAC7C,iBAAK,mBAAmB,gBAAgB;AAAA,UACzC,CAAC,CAAC;AAEF,gBAAM,WAAW,YAAY,IAAI,KAAK,qBAAqB,eAAe,kBAAkB,CAAC,CAAC,CAAC;AAC/F,gBAAM,mBAAmB,SAAS,OAAO,SAAS;AAAA,YACjD,eAAe;AAAA,cACd,UAAU,wBAAC,SAAS;AACnB,qCAAqB,KAAK,eAAe,MAAM,QAAQ,SAAS;AAChE,qBAAK,QAAQ,MAAM,yBAAyB;AAC5C,qBAAK,QAAQ,MAAM,0BAA0B;AAC7C,qBAAK,mBAAmB,gBAAgB;AAAA,cACzC,GALU;AAAA,cAMV;AAAA,YACD;AAAA,UACD,CAAC;AACD,sBAAY,IAAI,gBAAgB;AAChC,kBAAQ,YAAY,iBAAiB,OAAO;AAAA,QAC7C;AACA,cAAM,mBAAmB,OAAO,qBAAqB,EAAE,gCAAgC,CAAC;AACxF,cAAM,YAAY,IAAI,UAAU,gBAAgB;AAChD,cAAM,SAAS,IAAI,OAAO,0CAA0C,SAAS,eAAe,OAAO,GAAG,UAAU,YAAY,QAAQ,KAAK,GAAG,MAAM,MAAM;AACvJ,eAAK,mBAAmB,gBAAgB;AACxC,eAAK,QAAQ,MAAM,yBAAyB;AAC5C,eAAK,QAAQ,MAAM,0BAA0B;AAAA,QAC9C,CAAC;AACD,oBAAY,IAAI,SAAS;AACzB,kBAAU,KAAK,QAAQ,EAAE,MAAM,MAAM,OAAO,MAAM,CAAC;AAEnD,eAAO,WAAW;AAAA,MACnB,GAnDQ;AAAA,MAoDR,QAAQ,6BAAM;AACb,aAAK,qBAAqB;AAC1B,aAAK,QAAQ,MAAM,yBAAyB;AAC5C,aAAK,QAAQ,MAAM,0BAA0B;AAC7C,oBAAY,QAAQ;AAAA,MACrB,GALQ;AAAA,MAMR,iBAAiB,gBAAgB;AAAA,IAClC,CAAC;AAAA,EACF;AAAA,EAEQ,kBAA0B;AACjC,UAAM,wBAAwB,KAAK,qBAAqB,SAAkB,2BAA2B;AACrG,QAAI,CAAC,KAAK,WAAW,CAAC,yBAAyB,KAAK,SAAS,QAAQ,MAAM,MAAM;AAChF,aAAO;AAAA,IACR;AAEA,WAAO,KAAK,QAAQ,gBAAgB,WAAW,IAC9C,KACA;AAAA,EACF;AAAA,EAEA,kBAAwB;AACvB,SAAK,uBAAuB,MAAM;AAClC,SAAK,wBAAwB;AAC7B,SAAK,qBAAqB;AAAA,EAC3B;AAAA,EAEA,UAAgB;AACf,SAAK,QAAQ;AACb,SAAK,sBAAsB,QAAQ;AACnC,SAAK,gBAAgB;AACrB,SAAK,YAAY,QAAQ;AAAA,EAC1B;AACD;AAlcM,iBAAN;AAAA,EAuLG;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GA/LG;AAocC,IAAM,cAAN,cAA0B,SAAS;AAAA,EA4EzC,YACC,SACkC,gBACD,eACF,aACD,YACI,gBACA,gBACI,oBAClB,mBACL,cACM,oBACE,sBACC,uBACD,sBACH,mBACJ,eACG,kBACJ,cACd;AACD,UAAM,EAAE,GAAG,SAAS,aAAa,OAAO,SAAS,GAAG,mBAAmB,oBAAoB,sBAAsB,mBAAmB,uBAAuB,sBAAsB,eAAe,cAAc,kBAAkB,YAAY;AAlB1M;AACD;AACF;AACD;AACI;AACA;AACI;AAetC,SAAK,YAAY,KAAK,YAAY;AAClC,SAAK,eAAe,KAAK,eAAe;AAGxC,SAAK,qBAAqB,YAAY,YAAY,OAAO,iBAAiB;AAC1E,SAAK,mBAAmB,IAAI,KAAK,SAAS;AAC1C,SAAK,wBAAwB,YAAY,eAAe,OAAO,iBAAiB;AAChF,SAAK,sBAAsB,IAAI,KAAK,WAAW;AAC/C,SAAK,wCAAwC,YAAY,mCAAmC,OAAO,iBAAiB;AACpH,SAAK,uCAAuC,YAAY,kCAAkC,OAAO,iBAAiB;AAClH,SAAK,wBAAwB,YAAY,YAAY,OAAO,iBAAiB;AAC7E,SAAK,+BAA+B,YAAY,mBAAmB,OAAO,iBAAiB;AAC3F,SAAK,kCAAkC,YAAY,sBAAsB,OAAO,iBAAiB;AAEjG,SAAK,eAAe,IAAI,QAAc;AACtC,SAAK,cAAc,EAAE,QAAQ,QAAW,OAAO,QAAW,aAAa,KAAK,aAAa,MAAM;AAE/F,SAAK,eAAe,iBAAiB,aAAa,WAAW,QAAW,KAAK,WAAW,EAAE,OAAK;AAC9F,cAAQ,EAAE,KAAK;AAAA,QACd,KAAK;AACJ,eAAK,WAAW,KAAK,YAAY;AACjC;AAAA,QACD,KAAK;AACJ,eAAK,cAAc,KAAK,eAAe;AACvC;AAAA,MACF;AAAA,IACD,GAAG,MAAM,KAAK,WAAW;AAEzB,SAAK,eAAe,gBAAgB,OAAK;AACxC,WAAK,WAAW,KAAK,YAAY;AACjC,WAAK,cAAc,KAAK,eAAe;AAEvC,WAAK,mBAAmB;AAAA,IACzB,GAAG,MAAM,KAAK,WAAW;AAEzB,UAAM,IAAI,KAAK,WAAW,oBAAoB,KAAK,WAAW,qBAAqB,EAAE,MAAM,KAAK,6BAA6B,KAAK,GAAG,MAAM,KAAK,WAAW;AAE3J,SAAK,YAAY,IAAI,KAAK,uBAAuB;AACjD,SAAK,YAAY,IAAI,KAAK,uBAAuB;AAAA,EAClD;AAAA,EAhmED,OAs9D0C;AAAA;AAAA;AAAA,EAEjC;AAAA,EACA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EAEA;AAAA,EACR,IAAI,WAAqB;AAAE,WAAO,KAAK;AAAA,EAAW;AAAA,EAClD,IAAI,SAAS,MAAgB;AAC5B,QAAI,KAAK,cAAc,MAAM;AAC5B;AAAA,IACD;AAEA,SAAK,YAAY;AAGjB,SAAK,cAAc,KAAK,eAAe;AAEvC,SAAK,eAAe;AACpB,SAAK,wBAAwB;AAC7B,SAAK,qBAAqB,KAAK,IAAI;AACnC,SAAK,mBAAmB,IAAI,IAAI;AAEhC,SAAK,mBAAmB,KAAK,aAAa,iBAAiB,CAAC;AAC5D,SAAK,eAAe,MAAM,gBAAgB,MAAM,aAAa,WAAW,cAAc,IAAI;AAAA,EAC3F;AAAA,EAEiB,uBAAuB,IAAI,QAAkB;AAAA,EACrD,sBAAsB,KAAK,qBAAqB;AAAA,EAEjD;AAAA,EACR,IAAI,cAA2B;AAAE,WAAO,KAAK;AAAA,EAAc;AAAA,EAC3D,IAAI,YAAY,SAAsB;AACrC,QAAI,KAAK,iBAAiB,SAAS;AAClC;AAAA,IACD;AAEA,SAAK,eAAe;AAEpB,SAAK,eAAe;AACpB,SAAK,sBAAsB,IAAI,OAAO;AACtC,SAAK,wBAAwB,KAAK,OAAO;AAEzC,QAAI,KAAK,cAAc,mBAAe;AACrC,WAAK,eAAe,MAAM,mBAAmB,SAAS,aAAa,WAAW,cAAc,IAAI;AAAA,IACjG;AAAA,EACD;AAAA,EAEiB,0BAA0B,IAAI,QAAqB;AAAA,EAC3D,yBAAyB,KAAK,wBAAwB;AAAA,EAE9C,QAAQ,IAAI,cAA2C;AAAA,EACvD,wBAAwB,IAAI,gBAAgB;AAAA,EAE5C,yBAAyB,IAAI,UAAU;AAAA,EACvC,0BAA0B,IAAI,UAAU;AAAA,EACxC,0BAA0B,IAAI,UAAU;AAAA,EAEjD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EAES,cAAc,IAAI,gBAAgB;AAAA,EAkEhC,WAAW,SAA6B,KAAK,YAAY,QAAQ,QAA4B,KAAK,YAAY,OAAa;AAC7I,QAAI,WAAW,QAAW;AACzB;AAAA,IACD;AAEA,QAAI,UAAU,QAAW;AACxB,YAAM,WAAW,QAAQ,KAAK;AAAA,IAC/B;AAEA,SAAK,YAAY,SAAS;AAC1B,SAAK,YAAY,QAAQ;AACzB,SAAK,aAAa,KAAK;AAEvB,SAAK,cAAc,MAAM,SAAS,GAAG,MAAM;AAC3C,SAAK,KAAK,OAAO,QAAQ,KAAK;AAAA,EAC/B;AAAA,EAEmB,WAAW,WAA8B;AAC3D,UAAM,WAAW,SAAS;AAG1B,SAAK,gBAAgB,OAAO,WAAW,EAAE,2BAA2B,CAAC;AACrE,SAAK,cAAc,UAAU,IAAI,yBAAyB;AAC1D,SAAK,cAAc,UAAU,IAAI,iBAAiB;AAElD,UAAM,0BAA0B,6BAAM,KAAK,cAAc,UAAU,OAAO,gBAAgB,KAAK,qBAAqB,SAAkB,uBAAuB,CAAC,GAA9H;AAChC,UAAM,OAAO,KAAK,qBAAqB,0BAA0B,OAAK,EAAE,qBAAqB,uBAAuB,GAAG,KAAK,WAAW,EAAE,yBAAyB,MAAM,KAAK,WAAW;AACxL,4BAAwB;AAExB,UAAM,gCAAgC,6BAAM;AAC3C,YAAM,QAAQ,KAAK,qBAAqB,SAAwC,wBAAwB;AACxG,WAAK,cAAc,UAAU,OAAO,wBAAwB,UAAU,QAAQ;AAC9E,WAAK,cAAc,UAAU,OAAO,wBAAwB,UAAU,MAAM;AAAA,IAC7E,GAJsC;AAKtC,UAAM,OAAO,KAAK,qBAAqB,0BAA0B,OAAK,EAAE,qBAAqB,wBAAwB,GAAG,KAAK,WAAW,EAAE,+BAA+B,MAAM,KAAK,WAAW;AAC/L,kCAA8B;AAE9B,UAAM,YAAY,KAAK,kBAAkB;AACzC,SAAK,WAAW,KAAK,eAAe,SAAS;AAE7C,SAAK,0BAA0B,OAAM,YAAW;AAC/C,UAAI,SAAS;AACZ,aAAK,uBAAuB,MAAM,YAAY;AAC7C,gBAAM,KAAK,KAAK,SAAS,KAAK,gBAAgB,SAAS;AAEvD,gBAAM;AAAA,YAAO,KAAK,qBAAqB;AAAA,YACtC,OACC,EAAE,qBAAqB,4BAA4B;AAAA,YACpD,KAAK;AAAA,UAAqB,EACzB,MAAM;AACN,iBAAK,cAAc;AACnB,iBAAK,eAAe;AAAA,UACrB,GAAG,MAAM,KAAK,qBAAqB;AAEpC,gBAAM;AAAA,YAAO,KAAK,qBAAqB;AAAA,YACtC,OACC,EAAE,qBAAqB,uBAAuB,KAC9C,EAAE,qBAAqB,uBAAuB,KAC9C,EAAE,qBAAqB,sBAAsB;AAAA,YAC9C,KAAK;AAAA,UAAqB,EACzB,MAAM,KAAK,eAAe,GAAG,MAAM,KAAK,qBAAqB;AAG/D,eAAK,cAAc,wBAAwB,KAAK,yBAAyB,MAAM,KAAK,qBAAqB;AACzG,eAAK,eAAe,+BAA+B,KAAK,gCAAgC,MAAM,KAAK,qBAAqB;AACxH,eAAK,+BAA+B,EAAE,OAAO,KAAK,eAAe,qBAAqB,SAAS,SAAS,MAAM,EAAE,CAAC;AAGjH,cAAI,OAAO,KAAK,kBAAkB,UAAU;AAC3C,iBAAK,KAAK,YAAY,KAAK;AAC3B,iBAAK,gBAAgB;AAAA,UACtB;AAEA,eAAK,uCAAuC;AAAA,QAC7C,CAAC;AAAA,MACF,OAAO;AACN,aAAK,sBAAsB,MAAM;AACjC,aAAK,+BAA+B,EAAE,OAAO,SAAS,MAAM,GAAG,SAAS,CAAC,GAAG,KAAK,MAAM,KAAK,CAAC,EAAE,CAAC;AAChG,aAAK,gBAAgB,KAAK,KAAK;AAE/B,aAAK,uCAAuC;AAAA,MAC7C;AAAA,IACD,GAAG,MAAM,KAAK,WAAW;AAEzB,SAAK,YAAY,IAAI,KAAK,qBAAqB,eAAe,oCAAoC,CAAC;AAEnG,SAAK,aAAa,yBAAyB,KAAK,oBAAoB,MAAM,KAAK,WAAW;AAC1F,SAAK,mBAAmB,KAAK,aAAa,iBAAiB,CAAC;AAAA,EAC7D;AAAA,EAEQ,WAAW,WAAwB,WAA2C;AACrF,UAAM,yBAAyB,EAAE,+CAA+C;AAEhF,SAAK,gBAAgB,KAAK,qBAAqB,eAAe,eAAe,KAAK,aAAa,wBAAwB,CAAC,OAAO,WAAW;AACzI,UAAI;AAIH,aAAK,KAAK,oBAAoB,OAAO,MAAM;AAAA,MAC5C,QACM;AAAA,MAAE;AAAA,IACT,CAAC;AACD,SAAK,uBAAuB,KAAK,qBAAqB,eAAe,oBAAoB;AAEzF,SAAK,aAAa,KAAK,qBAAqB,eAAe,gBAAgB,EAAE,uBAAuB,KAAK,0BAA0B,CAAC;AACpI,SAAK,YAAY,IAAI,KAAK,UAAU;AAEpC,UAAM,uBAAuB,IAAI,2BAA2B,MAAM,KAAK,qBAAqB,CAAC;AAC7F,yBAAqB,UAAU,MAAM,KAAK,KAAK,SAAS,GAAG,MAAM,KAAK,WAAW;AACjF,SAAK,YAAY,IAAI,oBAAoB;AAEzC,UAAM,iBAAiB,KAAK,qBAAqB,eAAe,mBAAmB,MAAM,KAAK,QAAQ;AACtG,SAAK,YAAY,IAAI,cAAc;AAEnC,UAAM,qBAAqB,sBAAsB,sBAAsB,MAAM,KAAK,oBAAoB;AAEtG,SAAK,OAAO,KAAK,qBAAqB;AAAA,MACrC;AAAA,MACA;AAAA,MACA;AAAA,MACA,IAAI,aAAa,KAAK,aAAa;AAAA,MACnC,IAAI,2BAA2B;AAAA,MAC/B;AAAA,QACC,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK,qBAAqB,eAAe,oBAAoB,OAAO,UAAU,0BAA0B,KAAK,oBAAoB,CAAC;AAAA,QAClI,KAAK,qBAAqB,eAAe,uBAAuB,0BAA0B,KAAK,oBAAoB,CAAC;AAAA,QACpH,KAAK,qBAAqB,eAAe,kBAAkB,MAAM,KAAK,UAAU,KAAK,YAAY,0BAA0B,KAAK,oBAAoB,GAAG,oBAAoB;AAAA,MAC5K;AAAA,MACA;AAAA,MACA;AAAA,QACC,qBAAqB;AAAA,QACrB,kBAAkB;AAAA,QAClB,uBAAuB;AAAA,QACvB,QAAQ,IAAI,cAAc;AAAA,QAC1B,KAAK,IAAI,mBAAmB,KAAK,oBAAoB;AAAA,QACrD,kBAAkB,IAAI,4BAA4B;AAAA,QAClD,QAAQ,IAAI,cAAc,MAAM,KAAK,UAAU,MAAM,KAAK,WAAW;AAAA,QACrE,iCAAiC,KAAK,qBAAqB,eAAe,wCAAwC,MAAM,KAAK,QAAQ;AAAA,QACrI,gBAAgB,KAAK,uBAAuB,EAAE;AAAA,QAC9C,oBAAoB,mBAAmB,IAAI;AAAA,QAC3C,mBAAmB,wBAAC,MAAe;AAElC,cAAI,gBAAgB,CAAC,KAAK,mBAAmB,CAAC,KAAK,kBAAkB,CAAC,GAAG;AACxE,mBAAO;AAAA,UACR;AAGA,kBAAQ,WAAW,YAAY,CAAC,GAAG,QAAQ,iBAAiB,CAAgB,CAAC,MAAM;AAAA,QACpF,GARmB;AAAA,QASnB,uBAAuB,KAAK,qBAAqB,eAAe,wBAAwB;AAAA,MACzF;AAAA,IAAC;AAEF,SAAK,YAAY,IAAI,KAAK,IAAI;AAE9B,SAAK,KAAK,UAAU,KAAK,MAAM,MAAM,KAAK,WAAW;AACrD,SAAK,KAAK,cAAc,KAAK,mBAAmB,MAAM,KAAK,WAAW;AACtE,SAAK,KAAK,YAAY,KAAK,cAAc,iBAAiB,KAAK,eAAe,KAAK,WAAW;AAC9F,UAAM,OAAO,KAAK,KAAK,0BAA0B,OAAK,gBAAgB,EAAE,KAAK,SAAS,OAAO,GAAG,KAAK,WAAW,EAAE,KAAK,wCAAwC,MAAM,KAAK,WAAW;AAErL,SAAK,YAAY,IAAI,QAAQ,YAAU;AACtC,WAAK,KAAK,cAAc;AAAA,QACvB,oBAAoB,mBAAmB,KAAK,MAAM;AAAA,MACnD,CAAC;AAAA,IACF,CAAC,CAAC;AAEF,WAAO,WAAW,sBAAsB;AAAA,EACzC;AAAA,EAEA,MAAc,KAAK,GAAuD;AACzE,QAAI,CAAC,EAAE,SAAS;AACf;AAAA,IACD,WAAW,gBAAgB,EAAE,OAAO,GAAG;AACtC,WAAK,eAAe,MAAM,EAAE,OAAO;AACnC;AAAA,IACD,WAAW,WAAW,EAAE,OAAO,GAAG;AACjC,WAAK,eAAe,MAAM,EAAE,QAAQ,UAAU;AAE9C,YAAM,SAAS,KAAK,cAAc,uBAAuB,EAAE,OAAO;AAElE,UAAI,QAAQ;AACX,eAAO,MAAM;AACb,aAAK,KAAK,SAAS,CAAC,GAAG,EAAE,YAAY;AAErC,cAAM,YAAY,KAAK,KAAK,aAAa;AAEzC,YAAI,UAAU,WAAW,KAAK,UAAU,CAAC,MAAM,EAAE,SAAS;AACzD,qBAAW,MAAM,KAAK,KAAK,aAAa,CAAC,CAAC,CAAC;AAAA,QAC5C;AAAA,MACD;AAEA;AAAA,IACD,WAAW,kBAAkB,EAAE,OAAO,GAAG;AACxC,WAAK,eAAe,MAAM,EAAE,QAAQ,UAAU;AAG9C,WAAK,qBAAqB,kBAAkB,EAAE,OAAO;AACrD,WAAK,KAAK,SAAS,CAAC,GAAG,EAAE,YAAY;AAErC;AAAA,IACD,WAAW,mBAAmB,EAAE,OAAO,GAAG;AACzC,YAAM,WAAW,EAAE,QAAQ;AAC3B,YAAM,aAAa,SAAS,KAAK,KAAK,WAAW,cAAc,OAAK,EAAE,aAAa,QAAQ;AAC3F,UAAI,YAAY;AACf,aAAK,eAAe,MAAM,UAAU;AAAA,MACrC;AACA;AAAA,IACD,WAAW,cAAc,EAAE,OAAO,GAAG;AACpC,UAAI,EAAE,QAAQ,SAAS,OAAO,8BAA8B,EAAE,QAAQ,SAAS,OAAO,iCAAiC;AACtH,YAAI,eAAe,EAAE,YAAY,KAAK,EAAE,aAAa,WAAW,GAAG;AAClE,gBAAM,gBAAgB,EAAE,QAAQ;AAChC,gBAAM,QAAQ,GAAG,cAAc,SAAS,KAAK,KAAK,cAAc,KAAK;AACrE,gBAAM,mBAAmB,wBAAwB,KAAK,eAAe,OAAO,cAAc,SAAS,SAAS,cAAc,IAAI;AAAA,YAC7H,GAAG,EAAE;AAAA,YACL,WAAW;AAAA,cACV,YAAY;AAAA,gBACX,UAAU;AAAA,kBACT,UAAU,EAAE,QAAQ;AAAA,kBACpB,UAAU,EAAE,QAAQ;AAAA,gBACrB;AAAA,cACD;AAAA,YACD;AAAA,YACA,eAAe;AAAA,UAChB,CAAC;AAAA,QACF,OAAO;AACN,gBAAM,KAAK,eAAe,eAAe,EAAE,QAAQ,QAAQ,IAAI,GAAI,EAAE,QAAQ,QAAQ,aAAa,CAAC,GAAI,CAAC;AAAA,QACzG;AAAA,MACD,OAAO;AACN,cAAM,EAAE,QAAQ,KAAK,CAAC,CAAC,EAAE,cAAc,aAAa;AAEpD,YAAI,EAAE,cAAc,QAAQ;AAC3B,gBAAM,mBAAmB,KAAK,cAAc;AAE5C,4BAAkB,MAAM,UAAU,iBAAiB,KAAK;AAAA,QACzD;AAAA,MACD;AAEA,YAAM,WAAW,EAAE,QAAQ,cAAc;AACzC,YAAM,aAAa,SAAS,KAAK,KAAK,WAAW,cAAc,OAAK,EAAE,aAAa,QAAQ;AAE3F,UAAI,YAAY;AACf,aAAK,eAAe,MAAM,UAAU;AAAA,MACrC;AAAA,IACD,WAAW,kBAAkB,EAAE,OAAO,GAAG;AACxC,YAAM,WAAW,EAAE,QAAQ,QAAQ;AACnC,YAAM,aAAa,SAAS,KAAK,KAAK,WAAW,cAAc,OAAK,EAAE,aAAa,QAAQ;AAC3F,UAAI,YAAY;AACf,aAAK,eAAe,MAAM,UAAU;AAAA,MACrC;AACA;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,0BAAgC;AACvC,QAAI,CAAC,KAAK,qBAAqB,SAAkB,gBAAgB,GAAG;AACnE;AAAA,IACD;AAEA,UAAM,MAAM,uBAAuB,eAAe,KAAK,cAAc,cAAc,EAAE,mBAAmB,iBAAiB,QAAQ,CAAC;AAElI,QAAI,CAAC,KAAK;AACT;AAAA,IACD;AAGA,QAAI,KAAK,KAAK,SAAS,EAAE,KAAK,OAAK,cAAc,CAAC,KAAK,KAAK,mBAAmB,OAAO,QAAQ,EAAE,WAAW,GAAG,CAAC,KAC9G,KAAK,KAAK,aAAa,EAAE,KAAK,OAAK,cAAc,CAAC,KAAK,KAAK,mBAAmB,OAAO,QAAQ,EAAE,WAAW,GAAG,CAAC,GAAG;AAClH;AAAA,IACD;AAEA,SAAK,wBAAwB;AAAA,MAC5B,MAAM,KAAK,uBAAuB;AAAA,QACjC,YAAY;AACX,qBAAW,cAAc,KAAK,eAAe,qBAAqB;AACjE,kBAAM,OAAO,KAAK,MAAM,IAAI,UAAU;AAEtC,gBAAI,CAAC,MAAM;AACV;AAAA,YACD;AAGA,qBAAS,IAAI,WAAW,SAAS,OAAO,SAAS,GAAG,KAAK,GAAG,KAAK;AAChE,oBAAM,YAAY,WAAW,SAAS,OAAO,CAAC;AAC9C,oBAAM,WAAW,KAAK,aAAa,oBAChC,UAAU,aAAa,QAAQ,GAAG,GAAG,UACrC,UAAU,UAAU,KAAK,OAAK,KAAK,mBAAmB,OAAO,QAAQ,EAAE,WAAW,GAAG,CAAC;AAEzF,kBAAI,UAAU;AACb,sBAAM,KAAK,KAAK,SAAS,QAAQ;AACjC,qBAAK,KAAK,OAAO,QAAQ;AAEzB,qBAAK,KAAK,aAAa,CAAC,QAAQ,CAAC;AACjC,qBAAK,KAAK,SAAS,CAAC,QAAQ,CAAC;AAC7B;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,MAAC;AAAA,IAAC;AAAA,EACL;AAAA,EAEQ,+BAA+B,EAAE,OAAO,QAAQ,GAA+C;AAEtG,eAAW,cAAc,OAAO;AAC/B,YAAM,wBAAwB,IAAI,gBAAgB;AAElD,4BAAsB,IAAI,WAAW,SAAS,YAAY,MAAM,KAAK,eAAe,UAAU,CAAC,CAAC;AAChG,4BAAsB,IAAI,WAAW,MAAM,sBAAsB,MAAM,KAAK,eAAe,UAAU,CAAC,CAAC;AACvG,4BAAsB,IAAI,WAAW,SAAS,0BAA0B,MAAM,KAAK,eAAe,UAAU,CAAC,CAAC;AAE9G,YAAM,2BAA2B,sBAAsB,IAAI,IAAI,cAA8C,CAAC;AAE9G,YAAM,4BAA4B,6BAAM;AACvC,mBAAW,CAAC,aAAa,KAAK,0BAA0B;AACvD,cAAI,CAAC,WAAW,SAAS,OAAO,SAAS,aAAa,GAAG;AACxD,qCAAyB,iBAAiB,aAAa;AAAA,UACxD;AAAA,QACD;AAEA,mBAAW,iBAAiB,WAAW,SAAS,QAAQ;AACvD,cAAI,CAAC,yBAAyB,IAAI,aAAa,GAAG;AACjD,kBAAM,kBAAkB,IAAI,gBAAgB;AAE5C,4BAAgB,IAAI,cAAc,YAAY,MAAM,KAAK,eAAe,UAAU,CAAC,CAAC;AACpF,4BAAgB,IAAI,cAAc,qBAAqB,MAAM,KAAK,eAAe,UAAU,CAAC,CAAC;AAC7F,qCAAyB,IAAI,eAAe,eAAe;AAAA,UAC5D;AAAA,QACD;AAAA,MACD,GAhBkC;AAkBlC,4BAAsB,IAAI,WAAW,SAAS,0BAA0B,yBAAyB,CAAC;AAClG,gCAA0B;AAE1B,WAAK,MAAM,IAAI,YAAY,qBAAqB;AAAA,IACjD;AAGA,eAAW,cAAc,SAAS;AACjC,WAAK,MAAM,iBAAiB,UAAU;AAAA,IACvC;AAEA,SAAK,eAAe;AACpB,SAAK,wBAAwB;AAAA,EAC9B;AAAA,EAEQ,kBAAkB,GAAoD;AAC7E,QAAI,CAAC,EAAE,SAAS;AACf,YAAM,OAAO,KAAK,YAAY,eAAe,MAAM,UAAU,KAAK,iBAAiB;AACnF,YAAMC,WAAqB,CAAC;AAC5B,wCAAkC,MAAMA,QAAO;AAE/C,aAAO,KAAK,mBAAmB,gBAAgB;AAAA,QAC9C,WAAW,6BAAM,EAAE,QAAR;AAAA,QACX,YAAY,6BAAMA,UAAN;AAAA,QACZ,QAAQ,6BAAM;AAAA,QAAE,GAAR;AAAA,MACT,CAAC;AAAA,IACF;AAEA,UAAM,UAAU,EAAE;AAClB,QAAI,UAAe;AACnB,QAAI,UAAqB,CAAC;AAC1B,QAAI,eAA8B,IAAI,2BAA2B,MAAM,KAAK,qBAAqB,CAAC;AAElG,QAAI,gBAAgB,OAAO,GAAG;AAC7B,YAAM,QAAQ,KAAK,eAAe,MAAM,mBAAmB,QAAQ,QAAQ;AAC3E,YAAM,OAAO,MAAM;AACnB,gBAAU,QAAQ;AAClB,qBAAe,IAAI,uBAAuB,MAAM,KAAK,wBAAwB,CAAC;AAC9E,gBAAU,0BAA0B,IAAI;AAAA,IACzC,WAAW,WAAW,OAAO,KAAK,kBAAkB,OAAO,GAAG;AAAA,IAE9D,WAAW,mBAAmB,OAAO,GAAG;AACvC,YAAM,QAAQ,KAAK,eAAe,MAAM,mBAAmB,QAAQ,QAAQ;AAC3E,YAAM,OAAO,MAAM,qBAAqB,OAAO;AAC/C,gBAAU,0BAA0B,IAAI;AAAA,IACzC,WAAW,cAAc,OAAO,GAAG;AAClC,YAAM,QAAQ,KAAK,eAAe,MAAM,mBAAmB,QAAQ,cAAc,QAAQ;AACzF,YAAM,OAAO,MAAM,gBAAgB,OAAO;AAC1C,gBAAU,0BAA0B,IAAI;AAAA,IACzC,WAAW,kBAAkB,OAAO,GAAG;AACtC,UAAI,QAAQ,SAAS;AACpB,cAAM,QAAQ,KAAK,eAAe,MAAM,mBAAmB,QAAQ,QAAQ,cAAc,QAAQ;AACjG,cAAM,OAAO,MAAM,gBAAgB,QAAQ,OAAO;AAClD,kBAAU,0BAA0B,IAAI;AAAA,MACzC,OAAO;AACN,cAAM,QAAQ,KAAK,eAAe,MAAM,mBAAmB,QAAQ,QAAQ,QAAQ;AACnF,cAAM,OAAO,MAAM,sBAAsB,QAAQ,OAAO;AACxD,kBAAU,0BAA0B,IAAI;AAAA,MACzC;AAAA,IACD;AAEA,iBAAa,UAAU,MAAM,KAAK,KAAK,SAAS,CAAC;AAEjD,SAAK,mBAAmB,gBAAgB;AAAA,MACvC,WAAW,6BAAM,EAAE,QAAR;AAAA,MACX,YAAY,6BAAM,SAAN;AAAA,MACZ,mBAAmB,6BAAM,SAAN;AAAA,MACnB;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEQ,0BAA4C;AACnD,UAAM,sBAAsB,KAAK,KAAK,SAAS,EAAE,OAAO,OAAK,CAAC,CAAC,KAAK,gBAAgB,CAAC,CAAC;AACtF,UAAM,uBAAuB,KAAK,KAAK,aAAa,EAAE,OAAO,OAAK,CAAC,CAAC,KAAK,gBAAgB,CAAC,CAAC;AAE3F,WAAO,MAAM,KAAK,oBAAI,IAAoB,CAAC,GAAG,qBAAqB,GAAG,oBAAoB,CAAC,CAAC;AAAA,EAC7F;AAAA,EAEQ,uBAA0F;AACjG,WAAO,KAAK,KAAK,aAAa,EAC5B,OAAO,OAAK,CAAC,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;AAAA,EAC5C;AAAA,EAEQ,cAAwB;AAC/B,QAAI,OAAO,KAAK,qBAAqB,SAA0B,qBAAqB,MAAM,SAAS,oBAAgB;AACnH,UAAM,cAAc,KAAK,eAAe,IAAI,gBAAgB,aAAa,SAAS;AAClF,QAAI,OAAO,gBAAgB,UAAU;AACpC,aAAO;AAAA,IACR;AAEA,WAAO;AAAA,EACR;AAAA,EAEQ,iBAA8B;AAErC,QAAI,KAAK,cAAc,mBAAe;AACrC,aAAO;AAAA,IACR;AAGA,QAAI;AACJ,UAAM,oBAAoB,KAAK,qBAAqB,SAAqC,wBAAwB;AACjH,YAAQ,mBAAmB;AAAA,MAC1B,KAAK;AACJ,sBAAc;AACd;AAAA,MACD,KAAK;AACJ,sBAAc;AACd;AAAA,MACD;AACC,sBAAc;AACd;AAAA,IACF;AAEA,UAAM,iBAAiB,KAAK,eAAe,IAAI,mBAAmB,aAAa,SAAS;AACxF,QAAI,OAAO,mBAAmB,UAAU;AACvC,oBAAc;AAAA,IACf;AAEA,WAAO;AAAA,EACR;AAAA,EAEQ,oBAAyD;AAChE,UAAM,mBAAmB,KAAK,eAAe,IAAI,kBAAkB,aAAa,SAAS;AACzF,QAAI,CAAC,kBAAkB;AACtB,aAAO;AAAA,IACR;AAEA,QAAI;AACH,YAAM,gBAAgB,KAAK,MAAM,gBAAgB;AACjD,aAAO;AAAA,IACR,QAAQ;AACP,aAAO;AAAA,IACR;AAAA,EACD;AAAA,EAEQ,qBAAqB;AAC5B,QAAI,KAAK,MAAM;AACd,WAAK,eAAe,MAAM,kBAAkB,KAAK,UAAU,KAAK,KAAK,aAAa,CAAC,GAAG,aAAa,WAAW,cAAc,OAAO;AAAA,IACpI;AAAA,EACD;AAAA,EAEQ,eAAe,SAA0B;AAChD,SAAK,wBAAwB;AAAA,MAC5B,MAAM,KAAK,uBAAuB;AAAA,QACjC,YAAY;AACX,gBAAM,eAAe,KAAK,cAAc,gBAAgB;AAExD,cAAI,WAAW,KAAK,KAAK,QAAQ,OAAO,GAAG;AAE1C,kBAAM,KAAK,KAAK,eAAe,OAAO;AAAA,UACvC,OAAO;AAEN,kBAAM,KAAK,KAAK,eAAe,MAAS;AAAA,UACzC;AAEA,cAAI,cAAc;AACjB,iBAAK,cAAc,uBAAuB,YAAY,GAAG,MAAM;AAAA,UAChE;AAEA,eAAK,6BAA6B;AAClC,eAAK,uCAAuC;AAAA,QAC7C;AAAA,MAAC;AAAA,IAAC;AAAA,EACL;AAAA,EAEQ,mBAAmB,OAA6B;AACvD,SAAK,cAAc,UAAU,OAAO,kBAAkB,KAAK,aAAa,iBAAa;AACrF,SAAK,cAAc,UAAU,OAAO,kBAAkB,KAAK,aAAa,iBAAa;AACrF,SAAK,cAAc,UAAU,OAAO,4BAA6B,KAAK,aAAa,qBAAiB,MAAM,gBAAkB,MAAM,gBAAgB,CAAC,MAAM,cAAe;AACxK,SAAK,cAAc,UAAU,OAAO,eAAe,KAAK,aAAa,qBAAiB,MAAM,wBAAwB,IAAI;AAAA,EACzH;AAAA,EAEQ,+BAAqC;AAC5C,UAAM,yBAAyB,KAAK,qBAAqB,SAAkB,4BAA4B;AAEvG,QAAI,CAAC,0BAA0B,KAAK,MAAM,SAAS,GAAG;AACrD,YAAM,WAAW,SAAS,MAAM,KAAK,MAAM,KAAK,CAAC,EAAG;AACpD,WAAK,sBAAsB,IAAI,SAAS,YAAY;AACpD,WAAK,6BAA6B,IAAI,SAAS,SAAS,SAAS,CAAC;AAClE,WAAK,gCAAgC,IAAI,CAAC,CAAC,SAAS,OAAO;AAAA,IAC5D,OAAO;AACN,WAAK,sBAAsB,IAAI,MAAS;AACxC,WAAK,6BAA6B,IAAI,MAAS;AAC/C,WAAK,gCAAgC,IAAI,KAAK;AAAA,IAC/C;AAAA,EACD;AAAA,EAEQ,yCAA+C;AACtD,QAAI,CAAC,KAAK,cAAc,KAAK,KAAK,MAAM,SAAS,GAAG;AACnD,WAAK,qCAAqC,IAAI,KAAK;AACnD,WAAK,sCAAsC,IAAI,KAAK;AACpD;AAAA,IACD;AAEA,SAAK,qCAAqC,IAAI,KAAK,eAAe,oBAAoB,KAAK,OAAK,KAAK,KAAK,QAAQ,CAAC,KAAK,KAAK,KAAK,cAAc,CAAC,CAAC,CAAC;AACnJ,SAAK,sCAAsC,IAAI,KAAK,eAAe,oBAAoB,MAAM,OAAK,KAAK,KAAK,QAAQ,CAAC,MAAM,CAAC,KAAK,KAAK,cAAc,CAAC,KAAK,KAAK,KAAK,YAAY,CAAC,EAAE,CAAC;AAAA,EACrL;AAAA,EAEA,0BAAgC;AAC/B,eAAW,cAAc,KAAK,eAAe,qBAAqB;AACjE,UAAI,KAAK,KAAK,cAAc,UAAU,GAAG;AACxC,aAAK,KAAK,SAAS,UAAU;AAAA,MAC9B;AAAA,IACD;AAAA,EACD;AAAA,EAEA,wBAA8B;AAC7B,eAAW,cAAc,KAAK,eAAe,qBAAqB;AACjE,UAAI,KAAK,KAAK,cAAc,UAAU,GAAG;AACxC,aAAK,KAAK,OAAO,UAAU;AAAA,MAC5B;AAAA,IACD;AAAA,EACD;AAAA,EAEA,qBAA2B;AAC1B,SAAK,uBAAuB,MAAM,MAAM,KAAK,WAAW,EAAE,CAAC;AAAA,EAC5D;AAAA,EAEA,iBAAuB;AACtB,SAAK,uBAAuB,MAAM,MAAM,KAAK,WAAW,CAAC,CAAC;AAAA,EAC3D;AAAA,EAEA,MAAc,WAAW,OAA8B;AACtD,QAAI,CAAC,KAAK,eAAe,qBACxB,KAAK,eAAe,oBAAoB,WAAW,GAAG;AACtD;AAAA,IACD;AAEA,QAAI,QAAQ,KAAK,eAAe,kBAAkB;AAClD,UAAM,eAAe,KAAK,eAAe;AAGzC,QAAI,aAAa,WAAW,KAAK,KAAK,cAAc,uBAAuB,KAAK,GAAG,SAAS,MAAM,MAAM;AACvG;AAAA,IACD;AAGA,QAAI,aAAa,SAAS,KAAK,KAAK,cAAc,uBAAuB,KAAK,GAAG,SAAS,MAAM,MAAM;AACrG,YAAM,yBAAyB,aAAa,QAAQ,KAAK,eAAe,iBAAiB;AACzF,YAAM,4BAA4B,IAAI,yBAAyB,OAAO,aAAa,MAAM;AACzF,cAAQ,aAAa,yBAAyB,EAAE;AAAA,IACjD;AAEA,UAAM,KAAK,KAAK,SAAS,KAAK;AAE9B,SAAK,KAAK,OAAO,KAAK;AACtB,SAAK,cAAc,uBAAuB,KAAK,GAAG,MAAM;AAAA,EACzD;AAAA,EAEA,6BAAmC;AAClC,SAAK,uBAAuB,MAAM,MAAM,KAAK,mBAAmB,EAAE,CAAC;AAAA,EACpE;AAAA,EAEA,yBAA+B;AAC9B,SAAK,uBAAuB,MAAM,MAAM,KAAK,mBAAmB,CAAC,CAAC;AAAA,EACnE;AAAA,EAEA,MAAc,mBAAmB,OAA8B;AAC9D,QAAI,CAAC,KAAK,eAAe,qBACxB,KAAK,eAAe,oBAAoB,WAAW,GAAG;AACtD;AAAA,IACD;AAEA,UAAM,kBAAkB,gBAAgB,KAAK,KAAK,eAAe,CAAC;AAClE,UAAM,iBAAiB,KAAK,eAAe,kBAAkB,SAAS;AACtE,UAAM,uBAAuB,KAAK,KAAK,SAAS,EAAE,KAAK,OAAK,mBAAmB,CAAC,CAAC;AACjF,UAAM,4BAA4B,mBAAmB,uBAAuB,eAAe,QAAQ,oBAAoB,IAAI;AAE3H,QAAI;AAEJ,QAAI,8BAA8B,IAAI;AAErC,iBAAW,iBAAiB,gBAAgB;AAC3C,YAAI,KAAK,KAAK,QAAQ,aAAa,GAAG;AACrC,8BAAoB;AACpB;AAAA,QACD;AAAA,MACD;AAAA,IACD,OAAO;AAEN,UAAI,QAAQ,IAAI,4BAA4B,OAAO,eAAe,MAAM;AACxE,aAAO,UAAU,2BAA2B;AAC3C,YAAI,KAAK,KAAK,QAAQ,eAAe,KAAK,CAAC,GAAG;AAC7C,8BAAoB,eAAe,KAAK;AACxC;AAAA,QACD;AACA,gBAAQ,IAAI,QAAQ,OAAO,eAAe,MAAM;AAAA,MACjD;AAAA,IACD;AAEA,QAAI,mBAAmB;AACtB,YAAM,KAAK,KAAK,SAAS,iBAAiB;AAC1C,WAAK,KAAK,OAAO,iBAAiB;AAElC,WAAK,KAAK,aAAa,CAAC,iBAAiB,CAAC;AAC1C,WAAK,KAAK,SAAS,CAAC,iBAAiB,CAAC;AACtC,WAAK,KAAK,SAAS;AAAA,IACpB;AAAA,EACD;AAAA,EAES,oBAA6B;AACrC,WAAO,KAAK,WAAW,oBAAoB;AAAA,EAC5C;AAAA,EAES,oBAA6B;AACrC,WAAO,KAAK,eAAe,oBAAoB,WAAW,IAAI,KAAK,eAAe,oBAAoB,CAAC,EAAE,WAAW;AAAA,EACrH;AAAA,EAES,QAAc;AACtB,UAAM,MAAM;AAEZ,SAAK,uBAAuB,MAAM,MAAM;AACvC,aAAO,IAAI,QAAc,aAAW;AACnC,YAAI,KAAK,WAAW,GAAG;AACtB,cAAI,KAAK,KAAK,SAAS,EAAE,WAAW,GAAG;AACtC,uBAAW,cAAc,KAAK,eAAe,qBAAqB;AACjE,oBAAM,SAAS,KAAK,cAAc,uBAAuB,WAAW,KAAK;AAEzE,kBAAI,QAAQ;AACX,uBAAO,MAAM;AACb,wBAAQ;AACR;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAEA,eAAK,KAAK,SAAS;AACnB,kBAAQ;AAAA,QACT;AAAA,MACD,CAAC;AAAA,IACF,CAAC;AAAA,EACF;AAAA,EAES,UAAgB;AACxB,SAAK,sBAAsB,QAAQ;AACnC,SAAK,YAAY,QAAQ;AACzB,SAAK,MAAM,QAAQ;AACnB,UAAM,QAAQ;AAAA,EACf;AACD;AAxyBa,cAAN;AAAA,EA8EJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GA9FU;AA0yBb,IAAM,oBAAN,cAAgC,WAAqE;AAAA,EACpG,YACkB,UACuB,sBACN,gBACjC;AACD,UAAM;AAJW;AACuB;AACN;AAAA,EAGnC;AAAA,EAvwFD,OAgwFqG;AAAA;AAAA;AAAA,EASpG,MAAM,YAAY,gBAA+E;AAChG,UAAM,kBAAkB,KAAK,eAAe,oBAAoB;AAEhE,UAAM,mBAAmB,KAAK,qBAAqB,SAAkB,sBAAsB,MAAM;AACjG,UAAM,yBAAyB,KAAK,qBAAqB,SAAkB,4BAA4B,MAAM;AAE7G,QAAI,iBAAiB,cAAc,MAAM,kBAAkB,KAAK,yBAAyB;AACxF,aAAO,KAAK,eAAe;AAAA,IAC5B,WAAY,iBAAiB,cAAc,KAAK,oBAAoB,KAAK,CAAC,0BAA2B,gBAAgB,cAAc,GAAG;AACrI,YAAM,WAA0B,CAAC;AAEjC,uBAAiB,gBAAgB,cAAc,IAAI,iBAAiB,KAAK,eAAe,oBAAoB,CAAC;AAC7G,YAAM,eAAe,eAAe,SAAS;AAC7C,YAAM,iBAAiB,eAAe,SAAS;AAG/C,UAAI,eAAe,MAAM,SAAS;AACjC,iBAAS,KAAK,eAAe,KAAK;AAAA,MACnC;AAGA,UAAI,oBAAoB,cAAc;AACrC,iBAAS,KAAK;AAAA,UACb,MAAM;AAAA,UACN,YAAY;AAAA,UACZ,QAAQ;AAAA,QACT,CAA4B;AAAA,MAC7B;AAGA,YAAM,iBAAiB,eAAe,KAAK,WAAS,MAAM,UAAU,SAAS,CAAC;AAC9E,UAAI,kBAAmB,oBAAoB,MAAM,CAAC,oBAAoB,CAAC,eAAgB;AACtF,iBAAS,KAAK,GAAG,cAAc;AAAA,MAChC;AAEA,aAAO;AAAA,IACR,WAAW,mBAAmB,cAAc,GAAG;AAC9C,UAAI,KAAK,SAAS,MAAM,mBAAe;AAEtC,eAAO,eAAe;AAAA,MACvB,WAAW,KAAK,SAAS,MAAM,mBAAe;AAE7C,cAAM,WAA0B,CAAC;AACjC,mBAAW,QAAQ,eAAe,aAAa,KAAK,UAAU;AAC7D,mBAAS,KAAK,KAAK,WAAW,KAAK,kBAAkB,IAAI,KAAK,UAAU,IAAI;AAAA,QAC7E;AAEA,eAAO;AAAA,MACR;AAAA,IACD,WAAW,kBAAkB,cAAc,GAAG;AAE7C,YAAM,WAA0B,CAAC;AACjC,iBAAW,QAAQ,eAAe,UAAU;AAC3C,iBAAS,KAAK,KAAK,WAAW,KAAK,kBAAkB,IAAI,KAAK,UAAU,IAAI;AAAA,MAC7E;AAEA,aAAO;AAAA,IACR;AAEA,WAAO,CAAC;AAAA,EACT;AAAA,EAEA,UAAU,SAAqD;AAC9D,QAAI,kBAAkB,OAAO,GAAG;AAC/B,UAAI,QAAQ,WAAW,QAAQ,QAAQ,aAAa,MAAM;AACzD,eAAO,QAAQ;AAAA,MAChB,WAAW,QAAQ,QAAQ;AAC1B,eAAO,QAAQ;AAAA,MAChB,OAAO;AACN,cAAM,IAAI,MAAM,qCAAqC;AAAA,MACtD;AAAA,IACD,WAAW,cAAc,OAAO,GAAG;AAClC,UAAI,KAAK,SAAS,MAAM,mBAAe;AACtC,eAAO,QAAQ;AAAA,MAChB;AAEA,YAAM,OAAO,QAAQ,cAAc,aAAa,QAAQ,QAAQ,SAAS;AACzE,YAAM,SAAS,MAAM;AAErB,UAAI,CAAC,QAAQ;AACZ,cAAM,IAAI,MAAM,qCAAqC;AAAA,MACtD;AAEA,UAAI,WAAW,QAAQ,cAAc,aAAa,MAAM;AACvD,eAAO,QAAQ;AAAA,MAChB;AAEA,aAAO;AAAA,IACR,WAAW,WAAW,OAAO,GAAG;AAC/B,aAAO,QAAQ;AAAA,IAChB,WAAW,mBAAmB,OAAO,GAAG;AACvC,YAAM,aAAa,KAAK,eAAe,oBAAoB,KAAK,OAAK,EAAE,aAAa,QAAQ,QAAQ;AACpG,UAAI,CAAC,YAAY;AAChB,cAAM,IAAI,MAAM,qCAAqC;AAAA,MACtD;AAEA,aAAO;AAAA,IACR,OAAO;AACN,YAAM,IAAI,MAAM,8BAA8B;AAAA,IAC/C;AAAA,EACD;AAAA,EAEA,YAAY,gBAAwD;AACnE,QAAI,iBAAiB,cAAc,GAAG;AACrC,aAAO,KAAK,eAAe,oBAAoB,WAAW;AAAA,IAC3D,WAAW,gBAAgB,cAAc,GAAG;AAC3C,aAAO;AAAA,IACR,WAAW,WAAW,cAAc,GAAG;AACtC,aAAO;AAAA,IACR,WAAW,kBAAkB,cAAc,GAAG;AAC7C,aAAO;AAAA,IACR,WAAW,mBAAmB,cAAc,GAAG;AAC9C,aAAO;AAAA,IACR,WAAW,cAAc,cAAc,GAAG;AACzC,aAAO;AAAA,IACR,WAAW,aAAa,eAAe,cAAc,GAAG;AACvD,aAAO,eAAe,gBAAgB;AAAA,IACvC,OAAO;AACN,YAAM,IAAI,MAAM,8BAA8B;AAAA,IAC/C;AAAA,EACD;AACD;AAlIM,oBAAN;AAAA,EAGG;AAAA,EACA;AAAA,GAJG;AAoIC,MAAM,gBAAuC;AAAA,EAInD,YACkB,WACA,oBACA,gBACA,qBAChB;AAJgB;AACA;AACA;AACA;AAAA,EAElB;AAAA,EA94FD,OAo4FoD;AAAA;AAAA;AAAA,EAC3C;AAAA,EACS,cAAc,IAAI,kBAAmC;AAAA,EAUtE,UAAgB;AACf,SAAK,aAAa,QAAQ;AAAA,EAC3B;AAAA,EAEA,UAAU,QAAsD;AAE/D,SAAK,MAAM;AACX,QAAI,CAAC,QAAQ;AACZ;AAAA,IACD;AAEA,QAAI,OAAO,mBAAmB,QAAQ;AACrC,YAAM,UAAqB,CAAC;AAC5B,eAAS,QAAQ,GAAG,QAAQ,OAAO,kBAAkB,QAAQ,SAAS;AACrE,cAAM,WAAW,OAAO,kBAAkB,KAAK;AAC/C,mBAAW,WAAW,UAAU;AAC/B,kBAAQ,KAAK,IAAI,OAAO,QAAQ,IAAI,QAAQ,OAAO,QAAW,MAAM,YAAY,MAAM,KAAK,eAAe,QAAQ,IAAI,GAAI,QAAQ,aAAa,CAAC,CAAE,CAAC,CAAC;AAAA,QACrJ;AACA,YAAI,SAAS,QAAQ;AACpB,kBAAQ,KAAK,IAAI,UAAU,CAAC;AAAA,QAC7B;AAAA,MACD;AAEA,cAAQ,IAAI;AAGZ,WAAK,SAAS,IAAI,mBAAmB,KAAK,WAAW;AAAA,QACpD;AAAA,QACA,4BAA4B;AAAA,QAC5B,qBAAqB,KAAK;AAAA,QAC1B,OAAO,OAAO,QAAQ;AAAA,QACtB,cAAc;AAAA,QACd,GAAG;AAAA,MACJ,CAAC;AAAA,IACF,OAAO;AAEN,WAAK,SAAS,IAAI,OAAO,KAAK,WAAW,EAAE,cAAc,MAAM,mBAAmB,CAAC,CAAC,OAAO,aAAa,OAAO,OAAO,QAAQ,SAAS,GAAG,oBAAoB,CAAC;AAAA,IAChK;AAEA,SAAK,OAAO,UAAU,OAAO;AAC7B,SAAK,OAAO,QAAQ,OAAO,QAAQ;AACnC,QAAI,KAAK,kBAAkB,UAAU,OAAO,aAAa;AACxD,WAAK,OAAO,aAAa,OAAO;AAAA,IACjC;AACA,SAAK,OAAO,WAAW,YAAY,MAAM,KAAK,eAAe,OAAO,QAAQ,IAAI,GAAI,OAAO,QAAQ,aAAa,CAAC,CAAE,GAAG,MAAM,KAAK,YAAY,KAAK;AAElJ,SAAK,YAAY,MAAO,IAAI,KAAK,MAAM;AAAA,EACxC;AAAA,EAEA,QAAc;AACb,SAAK,QAAQ,MAAM;AAAA,EACpB;AAAA,EAEQ,QAAc;AACrB,SAAK,YAAY,QAAQ,IAAI,gBAAgB;AAC7C,SAAK,SAAS;AACd,cAAU,KAAK,SAAS;AAAA,EACzB;AAAA,EAEA,MAAc,eAAe,cAAsB,MAA4B;AAC9E,QAAI;AACH,YAAM,KAAK,eAAe,eAAe,WAAW,GAAG,IAAI;AAAA,IAC5D,SAAS,IAAI;AACZ,WAAK,oBAAoB,MAAM,EAAE;AAAA,IAClC;AAAA,EACD;AACD;AAEA,kCAAkC,iCAAiC;",
  "names": ["matches", "selections", "oneName", "otherName", "ViewMode", "ViewSortKey", "SCMInputWidgetCommandId", "SCMInputWidgetStorageKey", "actions"]
}
