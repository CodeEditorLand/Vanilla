{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/scm/browser/scmViewPane.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/scm.css\";\nimport type { IDragAndDropData } from \"../../../../base/browser/dnd.js\";\nimport {\n\t$,\n\tDimension,\n\tappend,\n\tasCSSUrl,\n\tclearNode,\n\tisActiveElement,\n\tisPointerEvent,\n\ttrackFocus,\n} from \"../../../../base/browser/dom.js\";\nimport { DEFAULT_FONT_FAMILY } from \"../../../../base/browser/fonts.js\";\nimport {\n\tActionBar,\n\ttype IActionViewItemProvider,\n} from \"../../../../base/browser/ui/actionbar/actionbar.js\";\nimport {\n\tButton,\n\ttype ButtonWithDescription,\n\tButtonWithDropdown,\n} from \"../../../../base/browser/ui/button/button.js\";\nimport { AnchorAlignment } from \"../../../../base/browser/ui/contextview/contextview.js\";\nimport { CountBadge } from \"../../../../base/browser/ui/countBadge/countBadge.js\";\nimport type {\n\tIIdentityProvider,\n\tIListVirtualDelegate,\n} from \"../../../../base/browser/ui/list/list.js\";\nimport type {\n\tElementsDragAndDropData,\n\tListViewTargetSector,\n} from \"../../../../base/browser/ui/list/listView.js\";\nimport type { IListAccessibilityProvider } from \"../../../../base/browser/ui/list/listWidget.js\";\nimport type { LabelFuzzyScore } from \"../../../../base/browser/ui/tree/abstractTree.js\";\nimport type {\n\tIAsyncDataTreeViewState,\n\tITreeCompressionDelegate,\n} from \"../../../../base/browser/ui/tree/asyncDataTree.js\";\nimport type { ICompressedTreeNode } from \"../../../../base/browser/ui/tree/compressedObjectTreeModel.js\";\nimport type {\n\tICompressibleKeyboardNavigationLabelProvider,\n\tICompressibleTreeRenderer,\n} from \"../../../../base/browser/ui/tree/objectTree.js\";\nimport type {\n\tIAsyncDataSource,\n\tITreeContextMenuEvent,\n\tITreeDragAndDrop,\n\tITreeDragOverReaction,\n\tITreeFilter,\n\tITreeNode,\n\tITreeSorter,\n} from \"../../../../base/browser/ui/tree/tree.js\";\nimport {\n\tAction,\n\tActionRunner,\n\ttype IAction,\n\ttype IActionRunner,\n\tSeparator,\n} from \"../../../../base/common/actions.js\";\nimport {\n\tSequencer,\n\tThrottledDelayer,\n\tThrottler,\n\tdisposableTimeout,\n} from \"../../../../base/common/async.js\";\nimport { CancellationTokenSource } from \"../../../../base/common/cancellation.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport {\n\tcompareFileNames,\n\tcomparePaths,\n} from \"../../../../base/common/comparers.js\";\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport {\n\ttype FuzzyScore,\n\ttype IMatch,\n\tcreateMatches,\n} from \"../../../../base/common/filters.js\";\nimport { Iterable } from \"../../../../base/common/iterator.js\";\nimport { KeyCode } from \"../../../../base/common/keyCodes.js\";\nimport {\n\tDisposable,\n\tDisposableMap,\n\tDisposableStore,\n\ttype IDisposable,\n\tMutableDisposable,\n\tcombinedDisposable,\n\tdispose,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { clamp, rot } from \"../../../../base/common/numbers.js\";\nimport { autorun } from \"../../../../base/common/observable.js\";\nimport * as platform from \"../../../../base/common/platform.js\";\nimport {\n\ttype IResourceNode,\n\tResourceTree,\n} from \"../../../../base/common/resourceTree.js\";\nimport { basename, dirname } from \"../../../../base/common/resources.js\";\nimport { compare, format } from \"../../../../base/common/strings.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport type { IEditorConstructionOptions } from \"../../../../editor/browser/config/editorConfiguration.js\";\nimport { EditorExtensionsRegistry } from \"../../../../editor/browser/editorExtensions.js\";\nimport {\n\tCodeEditorWidget,\n\ttype ICodeEditorWidgetOptions,\n} from \"../../../../editor/browser/widget/codeEditor/codeEditorWidget.js\";\nimport {\n\tMarkdownRenderer,\n\topenLinkFromMarkdown,\n} from \"../../../../editor/browser/widget/markdownRenderer/browser/markdownRenderer.js\";\nimport {\n\tEditorOption,\n\tEditorOptions,\n\ttype IEditorOptions,\n} from \"../../../../editor/common/config/editorOptions.js\";\nimport { EditOperation } from \"../../../../editor/common/core/editOperation.js\";\nimport type { Selection } from \"../../../../editor/common/core/selection.js\";\nimport type { ITextModel } from \"../../../../editor/common/model.js\";\nimport { IModelService } from \"../../../../editor/common/services/model.js\";\nimport { CodeActionController } from \"../../../../editor/contrib/codeAction/browser/codeActionController.js\";\nimport { ColorDetector } from \"../../../../editor/contrib/colorPicker/browser/colorDetector.js\";\nimport { ContextMenuController } from \"../../../../editor/contrib/contextmenu/browser/contextmenu.js\";\nimport { DragAndDropController } from \"../../../../editor/contrib/dnd/browser/dnd.js\";\nimport { CopyPasteController } from \"../../../../editor/contrib/dropOrPasteInto/browser/copyPasteController.js\";\nimport { DropIntoEditorController } from \"../../../../editor/contrib/dropOrPasteInto/browser/dropIntoEditorController.js\";\nimport { FormatOnType } from \"../../../../editor/contrib/format/browser/formatActions.js\";\nimport { ContentHoverController } from \"../../../../editor/contrib/hover/browser/contentHoverController.js\";\nimport { GlyphHoverController } from \"../../../../editor/contrib/hover/browser/glyphHoverController.js\";\nimport { InlineCompletionsController } from \"../../../../editor/contrib/inlineCompletions/browser/controller/inlineCompletionsController.js\";\nimport { LinkDetector } from \"../../../../editor/contrib/links/browser/links.js\";\nimport { MessageController } from \"../../../../editor/contrib/message/browser/messageController.js\";\nimport { PlaceholderTextContribution } from \"../../../../editor/contrib/placeholderText/browser/placeholderTextContribution.js\";\nimport { SnippetController2 } from \"../../../../editor/contrib/snippet/browser/snippetController2.js\";\nimport { SuggestController } from \"../../../../editor/contrib/suggest/browser/suggestController.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { DropdownWithPrimaryActionViewItem } from \"../../../../platform/actions/browser/dropdownWithPrimaryActionViewItem.js\";\nimport {\n\tcreateActionViewItem,\n\tcreateAndFillInActionBarActions,\n\tcreateAndFillInContextMenuActions,\n} from \"../../../../platform/actions/browser/menuEntryActionViewItem.js\";\nimport {\n\ttype IMenuWorkbenchToolBarOptions,\n\tWorkbenchToolBar,\n} from \"../../../../platform/actions/browser/toolbar.js\";\nimport {\n\tAction2,\n\ttype IAction2Options,\n\ttype IMenu,\n\tIMenuService,\n\tMenuId,\n\tMenuItemAction,\n\tMenuRegistry,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport {\n\tConfigurationTarget,\n\tIConfigurationService,\n} from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tContextKeyExpr,\n\ttype IContextKey,\n\tIContextKeyService,\n\tRawContextKey,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tIContextMenuService,\n\tIContextViewService,\n\ttype IOpenContextView,\n} from \"../../../../platform/contextview/browser/contextView.js\";\nimport { CodeDataTransfers } from \"../../../../platform/dnd/browser/dnd.js\";\nimport { FileKind } from \"../../../../platform/files/common/files.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ServiceCollection } from \"../../../../platform/instantiation/common/serviceCollection.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { ILabelService } from \"../../../../platform/label/common/label.js\";\nimport {\n\ttype IOpenEvent,\n\tWorkbenchCompressibleAsyncDataTree,\n} from \"../../../../platform/list/browser/listService.js\";\nimport { INotificationService } from \"../../../../platform/notification/common/notification.js\";\nimport { observableConfigValue } from \"../../../../platform/observable/common/platformObservableUtils.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport {\n\tdefaultButtonStyles,\n\tdefaultCountBadgeStyles,\n} from \"../../../../platform/theme/browser/defaultStyles.js\";\nimport { ColorScheme } from \"../../../../platform/theme/common/theme.js\";\nimport {\n\ttype IFileIconTheme,\n\tIThemeService,\n} from \"../../../../platform/theme/common/themeService.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport { fillEditorsDragData } from \"../../../browser/dnd.js\";\nimport {\n\ttype IFileLabelOptions,\n\ttype IResourceLabel,\n\tResourceLabels,\n} from \"../../../browser/labels.js\";\nimport {\n\tAPI_OPEN_DIFF_EDITOR_COMMAND_ID,\n\tAPI_OPEN_EDITOR_COMMAND_ID,\n} from \"../../../browser/parts/editor/editorCommands.js\";\nimport {\n\ttype IViewPaneOptions,\n\tViewAction,\n\tViewPane,\n} from \"../../../browser/parts/views/viewPane.js\";\nimport {\n\tEditorResourceAccessor,\n\tSideBySideEditor,\n} from \"../../../common/editor.js\";\nimport { IViewDescriptorService } from \"../../../common/views.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { EditorDictation } from \"../../codeEditor/browser/dictation/editorDictation.js\";\nimport { MenuPreventer } from \"../../codeEditor/browser/menuPreventer.js\";\nimport { SelectionClipboardContributionID } from \"../../codeEditor/browser/selectionClipboard.js\";\nimport {\n\tgetSimpleEditorOptions,\n\tsetupSimpleEditorSelectionStyling,\n} from \"../../codeEditor/browser/simpleEditorOptions.js\";\nimport { OpenScmGroupAction } from \"../../multiDiffEditor/browser/scmMultiDiffSourceResolver.js\";\nimport {\n\ttype IInputValidation,\n\ttype ISCMActionButton,\n\ttype ISCMActionButtonDescriptor,\n\ttype ISCMInput,\n\ttype ISCMInputValueProviderContext,\n\ttype ISCMRepository,\n\tISCMRepositorySortKey,\n\ttype ISCMResource,\n\ttype ISCMResourceGroup,\n\tISCMService,\n\tISCMViewService,\n\ttype ISCMViewVisibleRepositoryChangeEvent,\n\tInputValidationType,\n\tSCMInputChangeReason,\n\tVIEW_PANE_ID,\n} from \"../common/scm.js\";\nimport {\n\tRepositoryActionRunner,\n\tRepositoryRenderer,\n} from \"./scmRepositoryRenderer.js\";\nimport { RepositoryContextKeys } from \"./scmViewService.js\";\nimport {\n\tcollectContextMenuActions,\n\tconnectPrimaryMenuToInlineActionBar,\n\tgetActionViewItemProvider,\n\tisSCMActionButton,\n\tisSCMInput,\n\tisSCMRepository,\n\tisSCMResource,\n\tisSCMResourceGroup,\n\tisSCMResourceNode,\n\tisSCMViewService,\n} from \"./util.js\";\n\ntype TreeElement =\n\t| ISCMRepository\n\t| ISCMInput\n\t| ISCMActionButton\n\t| ISCMResourceGroup\n\t| ISCMResource\n\t| IResourceNode<ISCMResource, ISCMResourceGroup>;\n\nfunction processResourceFilterData(\n\turi: URI,\n\tfilterData: FuzzyScore | LabelFuzzyScore | undefined,\n): [IMatch[] | undefined, IMatch[] | undefined] {\n\tif (!filterData) {\n\t\treturn [undefined, undefined];\n\t}\n\n\tif (!(filterData as LabelFuzzyScore).label) {\n\t\tconst matches = createMatches(filterData as FuzzyScore);\n\t\treturn [matches, undefined];\n\t}\n\n\tconst fileName = basename(uri);\n\tconst label = (filterData as LabelFuzzyScore).label;\n\tconst pathLength = label.length - fileName.length;\n\tconst matches = createMatches((filterData as LabelFuzzyScore).score);\n\n\t// FileName match\n\tif (label === fileName) {\n\t\treturn [matches, undefined];\n\t}\n\n\t// FilePath match\n\tconst labelMatches: IMatch[] = [];\n\tconst descriptionMatches: IMatch[] = [];\n\n\tfor (const match of matches) {\n\t\tif (match.start > pathLength) {\n\t\t\t// Label match\n\t\t\tlabelMatches.push({\n\t\t\t\tstart: match.start - pathLength,\n\t\t\t\tend: match.end - pathLength,\n\t\t\t});\n\t\t} else if (match.end < pathLength) {\n\t\t\t// Description match\n\t\t\tdescriptionMatches.push(match);\n\t\t} else {\n\t\t\t// Spanning match\n\t\t\tlabelMatches.push({\n\t\t\t\tstart: 0,\n\t\t\t\tend: match.end - pathLength,\n\t\t\t});\n\t\t\tdescriptionMatches.push({\n\t\t\t\tstart: match.start,\n\t\t\t\tend: pathLength,\n\t\t\t});\n\t\t}\n\t}\n\n\treturn [labelMatches, descriptionMatches];\n}\n\ninterface ISCMLayout {\n\theight: number | undefined;\n\twidth: number | undefined;\n\treadonly onDidChange: Event<void>;\n}\n\ninterface ActionButtonTemplate {\n\treadonly actionButton: SCMActionButton;\n\tdisposable: IDisposable;\n\treadonly templateDisposable: IDisposable;\n}\n\nexport class ActionButtonRenderer\n\timplements\n\t\tICompressibleTreeRenderer<\n\t\t\tISCMActionButton,\n\t\t\tFuzzyScore,\n\t\t\tActionButtonTemplate\n\t\t>\n{\n\tstatic readonly DEFAULT_HEIGHT = 30;\n\n\tstatic readonly TEMPLATE_ID = \"actionButton\";\n\tget templateId(): string {\n\t\treturn ActionButtonRenderer.TEMPLATE_ID;\n\t}\n\n\tprivate actionButtons = new Map<ISCMActionButton, SCMActionButton>();\n\n\tconstructor(\n\t\t@ICommandService private commandService: ICommandService,\n\t\t@IContextMenuService private contextMenuService: IContextMenuService,\n\t\t@INotificationService private notificationService: INotificationService,\n\t) { }\n\n\trenderTemplate(container: HTMLElement): ActionButtonTemplate {\n\t\t// hack\n\t\t(\n\t\t\tcontainer.parentElement!.parentElement!.querySelector(\n\t\t\t\t\".monaco-tl-twistie\",\n\t\t\t)! as HTMLElement\n\t\t).classList.add(\"force-no-twistie\");\n\n\t\t// Use default cursor & disable hover for list item\n\t\tcontainer.parentElement!.parentElement!.classList.add(\n\t\t\t\"cursor-default\",\n\t\t\t\"force-no-hover\",\n\t\t);\n\n\t\tconst buttonContainer = append(container, $(\".button-container\"));\n\t\tconst actionButton = new SCMActionButton(\n\t\t\tbuttonContainer,\n\t\t\tthis.contextMenuService,\n\t\t\tthis.commandService,\n\t\t\tthis.notificationService,\n\t\t);\n\n\t\treturn {\n\t\t\tactionButton,\n\t\t\tdisposable: Disposable.None,\n\t\t\ttemplateDisposable: actionButton,\n\t\t};\n\t}\n\n\trenderElement(\n\t\tnode: ITreeNode<ISCMActionButton, FuzzyScore>,\n\t\tindex: number,\n\t\ttemplateData: ActionButtonTemplate,\n\t\theight: number | undefined,\n\t): void {\n\t\ttemplateData.disposable.dispose();\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst actionButton = node.element;\n\t\ttemplateData.actionButton.setButton(node.element.button);\n\n\t\t// Remember action button\n\t\tthis.actionButtons.set(actionButton, templateData.actionButton);\n\t\tdisposables.add({\n\t\t\tdispose: () => this.actionButtons.delete(actionButton),\n\t\t});\n\n\t\ttemplateData.disposable = disposables;\n\t}\n\n\trenderCompressedElements(): void {\n\t\tthrow new Error(\"Should never happen since node is incompressible\");\n\t}\n\n\tfocusActionButton(actionButton: ISCMActionButton): void {\n\t\tthis.actionButtons.get(actionButton)?.focus();\n\t}\n\n\tdisposeElement(\n\t\tnode: ITreeNode<ISCMActionButton, FuzzyScore>,\n\t\tindex: number,\n\t\ttemplate: ActionButtonTemplate,\n\t): void {\n\t\ttemplate.disposable.dispose();\n\t}\n\n\tdisposeTemplate(templateData: ActionButtonTemplate): void {\n\t\ttemplateData.disposable.dispose();\n\t\ttemplateData.templateDisposable.dispose();\n\t}\n}\n\nclass SCMTreeDragAndDrop implements ITreeDragAndDrop<TreeElement> {\n\tconstructor(private readonly instantiationService: IInstantiationService) {}\n\n\tgetDragURI(element: TreeElement): string | null {\n\t\tif (isSCMResource(element)) {\n\t\t\treturn element.sourceUri.toString();\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tonDragStart(data: IDragAndDropData, originalEvent: DragEvent): void {\n\t\tconst items = SCMTreeDragAndDrop.getResourcesFromDragAndDropData(\n\t\t\tdata as ElementsDragAndDropData<TreeElement, TreeElement[]>,\n\t\t);\n\t\tif (originalEvent.dataTransfer && items?.length) {\n\t\t\tthis.instantiationService.invokeFunction((accessor) =>\n\t\t\t\tfillEditorsDragData(accessor, items, originalEvent),\n\t\t\t);\n\n\t\t\tconst fileResources = items\n\t\t\t\t.filter((s) => s.scheme === Schemas.file)\n\t\t\t\t.map((r) => r.fsPath);\n\t\t\tif (fileResources.length) {\n\t\t\t\toriginalEvent.dataTransfer.setData(\n\t\t\t\t\tCodeDataTransfers.FILES,\n\t\t\t\t\tJSON.stringify(fileResources),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetDragLabel(\n\t\telements: TreeElement[],\n\t\toriginalEvent: DragEvent,\n\t): string | undefined {\n\t\tif (elements.length === 1) {\n\t\t\tconst element = elements[0];\n\t\t\tif (isSCMResource(element)) {\n\t\t\t\treturn basename(element.sourceUri);\n\t\t\t}\n\t\t}\n\n\t\treturn String(elements.length);\n\t}\n\n\tonDragOver(\n\t\tdata: IDragAndDropData,\n\t\ttargetElement: TreeElement | undefined,\n\t\ttargetIndex: number | undefined,\n\t\ttargetSector: ListViewTargetSector | undefined,\n\t\toriginalEvent: DragEvent,\n\t): boolean | ITreeDragOverReaction {\n\t\treturn true;\n\t}\n\n\tdrop(\n\t\tdata: IDragAndDropData,\n\t\ttargetElement: TreeElement | undefined,\n\t\ttargetIndex: number | undefined,\n\t\ttargetSector: ListViewTargetSector | undefined,\n\t\toriginalEvent: DragEvent,\n\t): void {}\n\n\tprivate static getResourcesFromDragAndDropData(\n\t\tdata: ElementsDragAndDropData<TreeElement, TreeElement[]>,\n\t): URI[] {\n\t\tconst uris: URI[] = [];\n\t\tfor (const element of [...(data.context ?? []), ...data.elements]) {\n\t\t\tif (isSCMResource(element)) {\n\t\t\t\turis.push(element.sourceUri);\n\t\t\t}\n\t\t}\n\t\treturn uris;\n\t}\n\n\tdispose(): void {}\n}\n\ninterface InputTemplate {\n\treadonly inputWidget: SCMInputWidget;\n\tinputWidgetHeight: number;\n\treadonly elementDisposables: DisposableStore;\n\treadonly templateDisposable: IDisposable;\n}\n\nclass InputRenderer\n\timplements ICompressibleTreeRenderer<ISCMInput, FuzzyScore, InputTemplate>\n{\n\tstatic readonly DEFAULT_HEIGHT = 26;\n\n\tstatic readonly TEMPLATE_ID = \"input\";\n\tget templateId(): string {\n\t\treturn InputRenderer.TEMPLATE_ID;\n\t}\n\n\tprivate inputWidgets = new Map<ISCMInput, SCMInputWidget>();\n\tprivate contentHeights = new WeakMap<ISCMInput, number>();\n\tprivate editorSelections = new WeakMap<ISCMInput, Selection[]>();\n\n\tconstructor(\n\t\tprivate outerLayout: ISCMLayout,\n\t\tprivate overflowWidgetsDomNode: HTMLElement,\n\t\tprivate updateHeight: (input: ISCMInput, height: number) => void,\n\t\t@IInstantiationService private instantiationService: IInstantiationService\n\t) { }\n\n\trenderTemplate(container: HTMLElement): InputTemplate {\n\t\t// hack\n\t\t(\n\t\t\tcontainer.parentElement!.parentElement!.querySelector(\n\t\t\t\t\".monaco-tl-twistie\",\n\t\t\t)! as HTMLElement\n\t\t).classList.add(\"force-no-twistie\");\n\n\t\t// Disable hover for list item\n\t\tcontainer.parentElement!.parentElement!.classList.add(\"force-no-hover\");\n\n\t\tconst templateDisposable = new DisposableStore();\n\t\tconst inputElement = append(container, $(\".scm-input\"));\n\t\tconst inputWidget = this.instantiationService.createInstance(\n\t\t\tSCMInputWidget,\n\t\t\tinputElement,\n\t\t\tthis.overflowWidgetsDomNode,\n\t\t);\n\t\ttemplateDisposable.add(inputWidget);\n\n\t\treturn {\n\t\t\tinputWidget,\n\t\t\tinputWidgetHeight: InputRenderer.DEFAULT_HEIGHT,\n\t\t\telementDisposables: new DisposableStore(),\n\t\t\ttemplateDisposable,\n\t\t};\n\t}\n\n\trenderElement(\n\t\tnode: ITreeNode<ISCMInput, FuzzyScore>,\n\t\tindex: number,\n\t\ttemplateData: InputTemplate,\n\t): void {\n\t\tconst input = node.element;\n\t\ttemplateData.inputWidget.input = input;\n\n\t\t// Remember widget\n\t\tthis.inputWidgets.set(input, templateData.inputWidget);\n\t\ttemplateData.elementDisposables.add({\n\t\t\tdispose: () => this.inputWidgets.delete(input),\n\t\t});\n\n\t\t// Widget cursor selections\n\t\tconst selections = this.editorSelections.get(input);\n\n\t\tif (selections) {\n\t\t\ttemplateData.inputWidget.selections = selections;\n\t\t}\n\n\t\ttemplateData.elementDisposables.add(\n\t\t\ttoDisposable(() => {\n\t\t\t\tconst selections = templateData.inputWidget.selections;\n\n\t\t\t\tif (selections) {\n\t\t\t\t\tthis.editorSelections.set(input, selections);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// Reset widget height so it's recalculated\n\t\ttemplateData.inputWidgetHeight = InputRenderer.DEFAULT_HEIGHT;\n\n\t\t// Rerender the element whenever the editor content height changes\n\t\tconst onDidChangeContentHeight = () => {\n\t\t\tconst contentHeight = templateData.inputWidget.getContentHeight();\n\t\t\tthis.contentHeights.set(input, contentHeight);\n\n\t\t\tif (templateData.inputWidgetHeight !== contentHeight) {\n\t\t\t\tthis.updateHeight(input, contentHeight + 10);\n\t\t\t\ttemplateData.inputWidgetHeight = contentHeight;\n\t\t\t\ttemplateData.inputWidget.layout();\n\t\t\t}\n\t\t};\n\n\t\tconst startListeningContentHeightChange = () => {\n\t\t\ttemplateData.elementDisposables.add(\n\t\t\t\ttemplateData.inputWidget.onDidChangeContentHeight(\n\t\t\t\t\tonDidChangeContentHeight,\n\t\t\t\t),\n\t\t\t);\n\t\t\tonDidChangeContentHeight();\n\t\t};\n\n\t\t// Setup height change listener on next tick\n\t\tdisposableTimeout(\n\t\t\tstartListeningContentHeightChange,\n\t\t\t0,\n\t\t\ttemplateData.elementDisposables,\n\t\t);\n\n\t\t// Layout the editor whenever the outer layout happens\n\t\tconst layoutEditor = () => templateData.inputWidget.layout();\n\t\ttemplateData.elementDisposables.add(\n\t\t\tthis.outerLayout.onDidChange(layoutEditor),\n\t\t);\n\t\tlayoutEditor();\n\t}\n\n\trenderCompressedElements(): void {\n\t\tthrow new Error(\"Should never happen since node is incompressible\");\n\t}\n\n\tdisposeElement(\n\t\tgroup: ITreeNode<ISCMInput, FuzzyScore>,\n\t\tindex: number,\n\t\ttemplate: InputTemplate,\n\t): void {\n\t\ttemplate.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: InputTemplate): void {\n\t\ttemplateData.templateDisposable.dispose();\n\t}\n\n\tgetHeight(input: ISCMInput): number {\n\t\treturn (\n\t\t\t(this.contentHeights.get(input) ?? InputRenderer.DEFAULT_HEIGHT) +\n\t\t\t10\n\t\t);\n\t}\n\n\tgetRenderedInputWidget(input: ISCMInput): SCMInputWidget | undefined {\n\t\treturn this.inputWidgets.get(input);\n\t}\n\n\tgetFocusedInput(): ISCMInput | undefined {\n\t\tfor (const [input, inputWidget] of this.inputWidgets) {\n\t\t\tif (inputWidget.hasFocus()) {\n\t\t\t\treturn input;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tclearValidation(): void {\n\t\tfor (const [, inputWidget] of this.inputWidgets) {\n\t\t\tinputWidget.clearValidation();\n\t\t}\n\t}\n}\n\ninterface ResourceGroupTemplate {\n\treadonly name: HTMLElement;\n\treadonly count: CountBadge;\n\treadonly actionBar: ActionBar;\n\treadonly elementDisposables: DisposableStore;\n\treadonly disposables: IDisposable;\n}\n\nclass ResourceGroupRenderer\n\timplements\n\t\tICompressibleTreeRenderer<\n\t\t\tISCMResourceGroup,\n\t\t\tFuzzyScore,\n\t\t\tResourceGroupTemplate\n\t\t>\n{\n\tstatic readonly TEMPLATE_ID = \"resource group\";\n\tget templateId(): string {\n\t\treturn ResourceGroupRenderer.TEMPLATE_ID;\n\t}\n\n\tconstructor(\n\t\tprivate actionViewItemProvider: IActionViewItemProvider,\n\t\t@ISCMViewService private scmViewService: ISCMViewService\n\t) { }\n\n\trenderTemplate(container: HTMLElement): ResourceGroupTemplate {\n\t\t// hack\n\t\t(\n\t\t\tcontainer.parentElement!.parentElement!.querySelector(\n\t\t\t\t\".monaco-tl-twistie\",\n\t\t\t)! as HTMLElement\n\t\t).classList.add(\"force-twistie\");\n\n\t\tconst element = append(container, $(\".resource-group\"));\n\t\tconst name = append(element, $(\".name\"));\n\t\tconst actionsContainer = append(element, $(\".actions\"));\n\t\tconst actionBar = new ActionBar(actionsContainer, {\n\t\t\tactionViewItemProvider: this.actionViewItemProvider,\n\t\t});\n\t\tconst countContainer = append(element, $(\".count\"));\n\t\tconst count = new CountBadge(\n\t\t\tcountContainer,\n\t\t\t{},\n\t\t\tdefaultCountBadgeStyles,\n\t\t);\n\t\tconst disposables = combinedDisposable(actionBar);\n\n\t\treturn {\n\t\t\tname,\n\t\t\tcount,\n\t\t\tactionBar,\n\t\t\telementDisposables: new DisposableStore(),\n\t\t\tdisposables,\n\t\t};\n\t}\n\n\trenderElement(\n\t\tnode: ITreeNode<ISCMResourceGroup, FuzzyScore>,\n\t\tindex: number,\n\t\ttemplate: ResourceGroupTemplate,\n\t): void {\n\t\tconst group = node.element;\n\t\ttemplate.name.textContent = group.label;\n\t\ttemplate.actionBar.clear();\n\t\ttemplate.actionBar.context = group;\n\t\ttemplate.count.setCount(group.resources.length);\n\n\t\tconst menus = this.scmViewService.menus.getRepositoryMenus(\n\t\t\tgroup.provider,\n\t\t);\n\t\ttemplate.elementDisposables.add(\n\t\t\tconnectPrimaryMenuToInlineActionBar(\n\t\t\t\tmenus.getResourceGroupMenu(group),\n\t\t\t\ttemplate.actionBar,\n\t\t\t),\n\t\t);\n\t}\n\n\trenderCompressedElements(\n\t\tnode: ITreeNode<ICompressedTreeNode<ISCMResourceGroup>, FuzzyScore>,\n\t\tindex: number,\n\t\ttemplateData: ResourceGroupTemplate,\n\t\theight: number | undefined,\n\t): void {\n\t\tthrow new Error(\"Should never happen since node is incompressible\");\n\t}\n\n\tdisposeElement(\n\t\tgroup: ITreeNode<ISCMResourceGroup, FuzzyScore>,\n\t\tindex: number,\n\t\ttemplate: ResourceGroupTemplate,\n\t): void {\n\t\ttemplate.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(template: ResourceGroupTemplate): void {\n\t\ttemplate.elementDisposables.dispose();\n\t\ttemplate.disposables.dispose();\n\t}\n}\n\ninterface ResourceTemplate {\n\telement: HTMLElement;\n\tname: HTMLElement;\n\tfileLabel: IResourceLabel;\n\tdecorationIcon: HTMLElement;\n\tactionBar: ActionBar;\n\tactionBarMenu: IMenu | undefined;\n\treadonly actionBarMenuListener: MutableDisposable<IDisposable>;\n\treadonly elementDisposables: DisposableStore;\n\treadonly disposables: IDisposable;\n}\n\ninterface RenderedResourceData {\n\treadonly tooltip: string;\n\treadonly uri: URI;\n\treadonly fileLabelOptions: Partial<IFileLabelOptions>;\n\treadonly iconResource: ISCMResource | undefined;\n}\n\nclass RepositoryPaneActionRunner extends ActionRunner {\n\tconstructor(\n\t\tprivate getSelectedResources: () => (\n\t\t\t| ISCMResource\n\t\t\t| IResourceNode<ISCMResource, ISCMResourceGroup>\n\t\t)[],\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected override async runAction(\n\t\taction: IAction,\n\t\tcontext: ISCMResource | IResourceNode<ISCMResource, ISCMResourceGroup>,\n\t): Promise<any> {\n\t\tif (!(action instanceof MenuItemAction)) {\n\t\t\treturn super.runAction(action, context);\n\t\t}\n\n\t\tconst selection = this.getSelectedResources();\n\t\tconst contextIsSelected = selection.some((s) => s === context);\n\t\tconst actualContext = contextIsSelected ? selection : [context];\n\t\tconst args = actualContext.flatMap((e) =>\n\t\t\tResourceTree.isResourceNode(e) ? ResourceTree.collect(e) : [e],\n\t\t);\n\t\tawait action.run(...args);\n\t}\n}\n\nclass ResourceRenderer\n\timplements\n\t\tICompressibleTreeRenderer<\n\t\t\tISCMResource | IResourceNode<ISCMResource, ISCMResourceGroup>,\n\t\t\tFuzzyScore | LabelFuzzyScore,\n\t\t\tResourceTemplate\n\t\t>\n{\n\tstatic readonly TEMPLATE_ID = \"resource\";\n\tget templateId(): string {\n\t\treturn ResourceRenderer.TEMPLATE_ID;\n\t}\n\n\tprivate readonly disposables = new DisposableStore();\n\tprivate renderedResources = new Map<\n\t\tResourceTemplate,\n\t\tRenderedResourceData\n\t>();\n\n\tconstructor(\n\t\tprivate viewMode: () => ViewMode,\n\t\tprivate labels: ResourceLabels,\n\t\tprivate actionViewItemProvider: IActionViewItemProvider,\n\t\tprivate actionRunner: ActionRunner,\n\t\t@ILabelService private labelService: ILabelService,\n\t\t@ISCMViewService private scmViewService: ISCMViewService,\n\t\t@IThemeService private themeService: IThemeService\n\t) {\n\t\tthemeService.onDidColorThemeChange(this.onDidColorThemeChange, this, this.disposables);\n\t}\n\n\trenderTemplate(container: HTMLElement): ResourceTemplate {\n\t\tconst element = append(container, $(\".resource\"));\n\t\tconst name = append(element, $(\".name\"));\n\t\tconst fileLabel = this.labels.create(name, {\n\t\t\tsupportDescriptionHighlights: true,\n\t\t\tsupportHighlights: true,\n\t\t});\n\t\tconst actionsContainer = append(fileLabel.element, $(\".actions\"));\n\t\tconst actionBar = new ActionBar(actionsContainer, {\n\t\t\tactionViewItemProvider: this.actionViewItemProvider,\n\t\t\tactionRunner: this.actionRunner,\n\t\t});\n\n\t\tconst decorationIcon = append(element, $(\".decoration-icon\"));\n\t\tconst actionBarMenuListener = new MutableDisposable<IDisposable>();\n\t\tconst disposables = combinedDisposable(\n\t\t\tactionBar,\n\t\t\tfileLabel,\n\t\t\tactionBarMenuListener,\n\t\t);\n\n\t\treturn {\n\t\t\telement,\n\t\t\tname,\n\t\t\tfileLabel,\n\t\t\tdecorationIcon,\n\t\t\tactionBar,\n\t\t\tactionBarMenu: undefined,\n\t\t\tactionBarMenuListener,\n\t\t\telementDisposables: new DisposableStore(),\n\t\t\tdisposables,\n\t\t};\n\t}\n\n\trenderElement(\n\t\tnode:\n\t\t\t| ITreeNode<ISCMResource, FuzzyScore | LabelFuzzyScore>\n\t\t\t| ITreeNode<\n\t\t\t\t\t| ISCMResource\n\t\t\t\t\t| IResourceNode<ISCMResource, ISCMResourceGroup>,\n\t\t\t\t\tFuzzyScore | LabelFuzzyScore\n\t\t\t  >,\n\t\tindex: number,\n\t\ttemplate: ResourceTemplate,\n\t): void {\n\t\tconst resourceOrFolder = node.element;\n\t\tconst iconResource = ResourceTree.isResourceNode(resourceOrFolder)\n\t\t\t? resourceOrFolder.element\n\t\t\t: resourceOrFolder;\n\t\tconst uri = ResourceTree.isResourceNode(resourceOrFolder)\n\t\t\t? resourceOrFolder.uri\n\t\t\t: resourceOrFolder.sourceUri;\n\t\tconst fileKind = ResourceTree.isResourceNode(resourceOrFolder)\n\t\t\t? FileKind.FOLDER\n\t\t\t: FileKind.FILE;\n\t\tconst tooltip =\n\t\t\t(!ResourceTree.isResourceNode(resourceOrFolder) &&\n\t\t\t\tresourceOrFolder.decorations.tooltip) ||\n\t\t\t\"\";\n\t\tconst hidePath = this.viewMode() === ViewMode.Tree;\n\n\t\tlet matches: IMatch[] | undefined;\n\t\tlet descriptionMatches: IMatch[] | undefined;\n\t\tlet strikethrough: boolean | undefined;\n\n\t\tif (ResourceTree.isResourceNode(resourceOrFolder)) {\n\t\t\tif (resourceOrFolder.element) {\n\t\t\t\tconst menus = this.scmViewService.menus.getRepositoryMenus(\n\t\t\t\t\tresourceOrFolder.element.resourceGroup.provider,\n\t\t\t\t);\n\t\t\t\tthis._renderActionBar(\n\t\t\t\t\ttemplate,\n\t\t\t\t\tresourceOrFolder,\n\t\t\t\t\tmenus.getResourceMenu(resourceOrFolder.element),\n\t\t\t\t);\n\n\t\t\t\ttemplate.element.classList.toggle(\n\t\t\t\t\t\"faded\",\n\t\t\t\t\tresourceOrFolder.element.decorations.faded,\n\t\t\t\t);\n\t\t\t\tstrikethrough =\n\t\t\t\t\tresourceOrFolder.element.decorations.strikeThrough;\n\t\t\t} else {\n\t\t\t\tconst menus = this.scmViewService.menus.getRepositoryMenus(\n\t\t\t\t\tresourceOrFolder.context.provider,\n\t\t\t\t);\n\t\t\t\tthis._renderActionBar(\n\t\t\t\t\ttemplate,\n\t\t\t\t\tresourceOrFolder,\n\t\t\t\t\tmenus.getResourceFolderMenu(resourceOrFolder.context),\n\t\t\t\t);\n\n\t\t\t\tmatches = createMatches(\n\t\t\t\t\tnode.filterData as FuzzyScore | undefined,\n\t\t\t\t);\n\t\t\t\ttemplate.element.classList.remove(\"faded\");\n\t\t\t}\n\t\t} else {\n\t\t\tconst menus = this.scmViewService.menus.getRepositoryMenus(\n\t\t\t\tresourceOrFolder.resourceGroup.provider,\n\t\t\t);\n\t\t\tthis._renderActionBar(\n\t\t\t\ttemplate,\n\t\t\t\tresourceOrFolder,\n\t\t\t\tmenus.getResourceMenu(resourceOrFolder),\n\t\t\t);\n\n\t\t\t[matches, descriptionMatches] = processResourceFilterData(\n\t\t\t\turi,\n\t\t\t\tnode.filterData,\n\t\t\t);\n\t\t\ttemplate.element.classList.toggle(\n\t\t\t\t\"faded\",\n\t\t\t\tresourceOrFolder.decorations.faded,\n\t\t\t);\n\t\t\tstrikethrough = resourceOrFolder.decorations.strikeThrough;\n\t\t}\n\n\t\tconst renderedData: RenderedResourceData = {\n\t\t\ttooltip,\n\t\t\turi,\n\t\t\tfileLabelOptions: {\n\t\t\t\thidePath,\n\t\t\t\tfileKind,\n\t\t\t\tmatches,\n\t\t\t\tdescriptionMatches,\n\t\t\t\tstrikethrough,\n\t\t\t},\n\t\t\ticonResource,\n\t\t};\n\n\t\tthis.renderIcon(template, renderedData);\n\n\t\tthis.renderedResources.set(template, renderedData);\n\t\ttemplate.elementDisposables.add(\n\t\t\ttoDisposable(() => this.renderedResources.delete(template)),\n\t\t);\n\n\t\ttemplate.element.setAttribute(\"data-tooltip\", tooltip);\n\t}\n\n\tdisposeElement(\n\t\tresource:\n\t\t\t| ITreeNode<ISCMResource, FuzzyScore | LabelFuzzyScore>\n\t\t\t| ITreeNode<\n\t\t\t\t\tIResourceNode<ISCMResource, ISCMResourceGroup>,\n\t\t\t\t\tFuzzyScore | LabelFuzzyScore\n\t\t\t  >,\n\t\tindex: number,\n\t\ttemplate: ResourceTemplate,\n\t): void {\n\t\ttemplate.elementDisposables.clear();\n\t}\n\n\trenderCompressedElements(\n\t\tnode: ITreeNode<\n\t\t\t| ICompressedTreeNode<ISCMResource>\n\t\t\t| ICompressedTreeNode<\n\t\t\t\t\tIResourceNode<ISCMResource, ISCMResourceGroup>\n\t\t\t  >,\n\t\t\tFuzzyScore | LabelFuzzyScore\n\t\t>,\n\t\tindex: number,\n\t\ttemplate: ResourceTemplate,\n\t\theight: number | undefined,\n\t): void {\n\t\tconst compressed = node.element as ICompressedTreeNode<\n\t\t\tIResourceNode<ISCMResource, ISCMResourceGroup>\n\t\t>;\n\t\tconst folder = compressed.elements[compressed.elements.length - 1];\n\n\t\tconst label = compressed.elements.map((e) => e.name);\n\t\tconst fileKind = FileKind.FOLDER;\n\n\t\tconst matches = createMatches(\n\t\t\tnode.filterData as FuzzyScore | undefined,\n\t\t);\n\t\ttemplate.fileLabel.setResource(\n\t\t\t{ resource: folder.uri, name: label },\n\t\t\t{\n\t\t\t\tfileDecorations: { colors: false, badges: true },\n\t\t\t\tfileKind,\n\t\t\t\tmatches,\n\t\t\t\tseparator: this.labelService.getSeparator(folder.uri.scheme),\n\t\t\t},\n\t\t);\n\n\t\tconst menus = this.scmViewService.menus.getRepositoryMenus(\n\t\t\tfolder.context.provider,\n\t\t);\n\t\tthis._renderActionBar(\n\t\t\ttemplate,\n\t\t\tfolder,\n\t\t\tmenus.getResourceFolderMenu(folder.context),\n\t\t);\n\n\t\ttemplate.name.classList.remove(\"strike-through\");\n\t\ttemplate.element.classList.remove(\"faded\");\n\t\ttemplate.decorationIcon.style.display = \"none\";\n\t\ttemplate.decorationIcon.style.backgroundImage = \"\";\n\n\t\ttemplate.element.setAttribute(\"data-tooltip\", \"\");\n\t}\n\n\tdisposeCompressedElements(\n\t\tnode: ITreeNode<\n\t\t\t| ICompressedTreeNode<ISCMResource>\n\t\t\t| ICompressedTreeNode<\n\t\t\t\t\tIResourceNode<ISCMResource, ISCMResourceGroup>\n\t\t\t  >,\n\t\t\tFuzzyScore | LabelFuzzyScore\n\t\t>,\n\t\tindex: number,\n\t\ttemplate: ResourceTemplate,\n\t\theight: number | undefined,\n\t): void {\n\t\ttemplate.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(template: ResourceTemplate): void {\n\t\ttemplate.elementDisposables.dispose();\n\t\ttemplate.disposables.dispose();\n\t}\n\n\tprivate _renderActionBar(\n\t\ttemplate: ResourceTemplate,\n\t\tresourceOrFolder:\n\t\t\t| ISCMResource\n\t\t\t| IResourceNode<ISCMResource, ISCMResourceGroup>,\n\t\tmenu: IMenu,\n\t): void {\n\t\tif (!template.actionBarMenu || template.actionBarMenu !== menu) {\n\t\t\ttemplate.actionBar.clear();\n\n\t\t\ttemplate.actionBarMenu = menu;\n\t\t\ttemplate.actionBarMenuListener.value =\n\t\t\t\tconnectPrimaryMenuToInlineActionBar(menu, template.actionBar);\n\t\t}\n\n\t\ttemplate.actionBar.context = resourceOrFolder;\n\t}\n\n\tprivate onDidColorThemeChange(): void {\n\t\tfor (const [template, data] of this.renderedResources) {\n\t\t\tthis.renderIcon(template, data);\n\t\t}\n\t}\n\n\tprivate renderIcon(\n\t\ttemplate: ResourceTemplate,\n\t\tdata: RenderedResourceData,\n\t): void {\n\t\tconst theme = this.themeService.getColorTheme();\n\t\tconst icon =\n\t\t\ttheme.type === ColorScheme.LIGHT\n\t\t\t\t? data.iconResource?.decorations.icon\n\t\t\t\t: data.iconResource?.decorations.iconDark;\n\n\t\ttemplate.fileLabel.setFile(data.uri, {\n\t\t\t...data.fileLabelOptions,\n\t\t\tfileDecorations: { colors: false, badges: !icon },\n\t\t});\n\n\t\tif (icon) {\n\t\t\tif (ThemeIcon.isThemeIcon(icon)) {\n\t\t\t\ttemplate.decorationIcon.className = `decoration-icon ${ThemeIcon.asClassName(icon)}`;\n\t\t\t\tif (icon.color) {\n\t\t\t\t\ttemplate.decorationIcon.style.color =\n\t\t\t\t\t\ttheme.getColor(icon.color.id)?.toString() ?? \"\";\n\t\t\t\t}\n\t\t\t\ttemplate.decorationIcon.style.display = \"\";\n\t\t\t\ttemplate.decorationIcon.style.backgroundImage = \"\";\n\t\t\t} else {\n\t\t\t\ttemplate.decorationIcon.className = \"decoration-icon\";\n\t\t\t\ttemplate.decorationIcon.style.color = \"\";\n\t\t\t\ttemplate.decorationIcon.style.display = \"\";\n\t\t\t\ttemplate.decorationIcon.style.backgroundImage = asCSSUrl(icon);\n\t\t\t}\n\t\t\ttemplate.decorationIcon.title = data.tooltip;\n\t\t} else {\n\t\t\ttemplate.decorationIcon.className = \"decoration-icon\";\n\t\t\ttemplate.decorationIcon.style.color = \"\";\n\t\t\ttemplate.decorationIcon.style.display = \"none\";\n\t\t\ttemplate.decorationIcon.style.backgroundImage = \"\";\n\t\t\ttemplate.decorationIcon.title = \"\";\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\t}\n}\n\nclass ListDelegate implements IListVirtualDelegate<TreeElement> {\n\tconstructor(private readonly inputRenderer: InputRenderer) {}\n\n\tgetHeight(element: TreeElement) {\n\t\tif (isSCMInput(element)) {\n\t\t\treturn this.inputRenderer.getHeight(element);\n\t\t} else if (isSCMActionButton(element)) {\n\t\t\treturn ActionButtonRenderer.DEFAULT_HEIGHT + 10;\n\t\t} else {\n\t\t\treturn 22;\n\t\t}\n\t}\n\n\tgetTemplateId(element: TreeElement) {\n\t\tif (isSCMRepository(element)) {\n\t\t\treturn RepositoryRenderer.TEMPLATE_ID;\n\t\t} else if (isSCMInput(element)) {\n\t\t\treturn InputRenderer.TEMPLATE_ID;\n\t\t} else if (isSCMActionButton(element)) {\n\t\t\treturn ActionButtonRenderer.TEMPLATE_ID;\n\t\t} else if (isSCMResourceGroup(element)) {\n\t\t\treturn ResourceGroupRenderer.TEMPLATE_ID;\n\t\t} else if (isSCMResource(element) || isSCMResourceNode(element)) {\n\t\t\treturn ResourceRenderer.TEMPLATE_ID;\n\t\t} else {\n\t\t\tthrow new Error(\"Unknown element\");\n\t\t}\n\t}\n}\n\nclass SCMTreeCompressionDelegate\n\timplements ITreeCompressionDelegate<TreeElement>\n{\n\tisIncompressible(element: TreeElement): boolean {\n\t\tif (ResourceTree.isResourceNode(element)) {\n\t\t\treturn (\n\t\t\t\telement.childrenCount === 0 ||\n\t\t\t\t!element.parent ||\n\t\t\t\t!element.parent.parent\n\t\t\t);\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\nclass SCMTreeFilter implements ITreeFilter<TreeElement> {\n\tfilter(element: TreeElement): boolean {\n\t\tif (isSCMResourceGroup(element)) {\n\t\t\treturn element.resources.length > 0 || !element.hideWhenEmpty;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n}\n\nexport class SCMTreeSorter implements ITreeSorter<TreeElement> {\n\tconstructor(\n\t\tprivate readonly viewMode: () => ViewMode,\n\t\tprivate readonly viewSortKey: () => ViewSortKey,\n\t) {}\n\n\tcompare(one: TreeElement, other: TreeElement): number {\n\t\tif (isSCMRepository(one)) {\n\t\t\tif (!isSCMRepository(other)) {\n\t\t\t\tthrow new Error(\"Invalid comparison\");\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (isSCMInput(one)) {\n\t\t\treturn -1;\n\t\t} else if (isSCMInput(other)) {\n\t\t\treturn 1;\n\t\t}\n\n\t\tif (isSCMActionButton(one)) {\n\t\t\treturn -1;\n\t\t} else if (isSCMActionButton(other)) {\n\t\t\treturn 1;\n\t\t}\n\n\t\tif (isSCMResourceGroup(one)) {\n\t\t\treturn isSCMResourceGroup(other) ? 0 : -1;\n\t\t}\n\n\t\t// Resource (List)\n\t\tif (this.viewMode() === ViewMode.List) {\n\t\t\t// FileName\n\t\t\tif (this.viewSortKey() === ViewSortKey.Name) {\n\t\t\t\tconst oneName = basename((one as ISCMResource).sourceUri);\n\t\t\t\tconst otherName = basename((other as ISCMResource).sourceUri);\n\n\t\t\t\treturn compareFileNames(oneName, otherName);\n\t\t\t}\n\n\t\t\t// Status\n\t\t\tif (this.viewSortKey() === ViewSortKey.Status) {\n\t\t\t\tconst oneTooltip =\n\t\t\t\t\t(one as ISCMResource).decorations.tooltip ?? \"\";\n\t\t\t\tconst otherTooltip =\n\t\t\t\t\t(other as ISCMResource).decorations.tooltip ?? \"\";\n\n\t\t\t\tif (oneTooltip !== otherTooltip) {\n\t\t\t\t\treturn compare(oneTooltip, otherTooltip);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Path (default)\n\t\t\tconst onePath = (one as ISCMResource).sourceUri.fsPath;\n\t\t\tconst otherPath = (other as ISCMResource).sourceUri.fsPath;\n\n\t\t\treturn comparePaths(onePath, otherPath);\n\t\t}\n\n\t\t// Resource (Tree)\n\t\tconst oneIsDirectory = ResourceTree.isResourceNode(one);\n\t\tconst otherIsDirectory = ResourceTree.isResourceNode(other);\n\n\t\tif (oneIsDirectory !== otherIsDirectory) {\n\t\t\treturn oneIsDirectory ? -1 : 1;\n\t\t}\n\n\t\tconst oneName = ResourceTree.isResourceNode(one)\n\t\t\t? one.name\n\t\t\t: basename((one as ISCMResource).sourceUri);\n\t\tconst otherName = ResourceTree.isResourceNode(other)\n\t\t\t? other.name\n\t\t\t: basename((other as ISCMResource).sourceUri);\n\n\t\treturn compareFileNames(oneName, otherName);\n\t}\n}\n\nexport class SCMTreeKeyboardNavigationLabelProvider\n\timplements ICompressibleKeyboardNavigationLabelProvider<TreeElement>\n{\n\tconstructor(\n\t\tprivate viewMode: () => ViewMode,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t) { }\n\n\tgetKeyboardNavigationLabel(\n\t\telement: TreeElement,\n\t): { toString(): string } | { toString(): string }[] | undefined {\n\t\tif (ResourceTree.isResourceNode(element)) {\n\t\t\treturn element.name;\n\t\t} else if (\n\t\t\tisSCMRepository(element) ||\n\t\t\tisSCMInput(element) ||\n\t\t\tisSCMActionButton(element)\n\t\t) {\n\t\t\treturn undefined;\n\t\t} else if (isSCMResourceGroup(element)) {\n\t\t\treturn element.label;\n\t\t} else if (this.viewMode() === ViewMode.List) {\n\t\t\t// In List mode match using the file name and the path.\n\t\t\t// Since we want to match both on the file name and the\n\t\t\t// full path we return an array of labels. A match in the\n\t\t\t// file name takes precedence over a match in the path.\n\t\t\tconst fileName = basename(element.sourceUri);\n\t\t\tconst filePath = this.labelService.getUriLabel(element.sourceUri, {\n\t\t\t\trelative: true,\n\t\t\t});\n\n\t\t\treturn [fileName, filePath];\n\t\t} else {\n\t\t\t// In Tree mode only match using the file name\n\t\t\treturn basename(element.sourceUri);\n\t\t}\n\t}\n\n\tgetCompressedNodeKeyboardNavigationLabel(\n\t\telements: TreeElement[],\n\t): { toString(): string | undefined } | undefined {\n\t\tconst folders = elements as IResourceNode<\n\t\t\tISCMResource,\n\t\t\tISCMResourceGroup\n\t\t>[];\n\t\treturn folders.map((e) => e.name).join(\"/\");\n\t}\n}\n\nfunction getSCMResourceId(element: TreeElement): string {\n\tif (isSCMRepository(element)) {\n\t\tconst provider = element.provider;\n\t\treturn `repo:${provider.id}`;\n\t} else if (isSCMInput(element)) {\n\t\tconst provider = element.repository.provider;\n\t\treturn `input:${provider.id}`;\n\t} else if (isSCMActionButton(element)) {\n\t\tconst provider = element.repository.provider;\n\t\treturn `actionButton:${provider.id}`;\n\t} else if (isSCMResourceGroup(element)) {\n\t\tconst provider = element.provider;\n\t\treturn `resourceGroup:${provider.id}/${element.id}`;\n\t} else if (isSCMResource(element)) {\n\t\tconst group = element.resourceGroup;\n\t\tconst provider = group.provider;\n\t\treturn `resource:${provider.id}/${group.id}/${element.sourceUri.toString()}`;\n\t} else if (isSCMResourceNode(element)) {\n\t\tconst group = element.context;\n\t\treturn `folder:${group.provider.id}/${group.id}/$FOLDER/${element.uri.toString()}`;\n\t} else {\n\t\tthrow new Error(\"Invalid tree element\");\n\t}\n}\n\nclass SCMResourceIdentityProvider implements IIdentityProvider<TreeElement> {\n\tgetId(element: TreeElement): string {\n\t\treturn getSCMResourceId(element);\n\t}\n}\n\nexport class SCMAccessibilityProvider\n\timplements IListAccessibilityProvider<TreeElement>\n{\n\tconstructor(\n\t\t@ILabelService private readonly labelService: ILabelService\n\t) { }\n\n\tgetWidgetAriaLabel(): string {\n\t\treturn localize(\"scm\", \"Source Control Management\");\n\t}\n\n\tgetAriaLabel(element: TreeElement): string {\n\t\tif (ResourceTree.isResourceNode(element)) {\n\t\t\treturn (\n\t\t\t\tthis.labelService.getUriLabel(element.uri, {\n\t\t\t\t\trelative: true,\n\t\t\t\t\tnoPrefix: true,\n\t\t\t\t}) || element.name\n\t\t\t);\n\t\t} else if (isSCMRepository(element)) {\n\t\t\treturn `${element.provider.name} ${element.provider.label}`;\n\t\t} else if (isSCMInput(element)) {\n\t\t\treturn localize(\"input\", \"Source Control Input\");\n\t\t} else if (isSCMActionButton(element)) {\n\t\t\treturn element.button?.command.title ?? \"\";\n\t\t} else if (isSCMResourceGroup(element)) {\n\t\t\treturn element.label;\n\t\t} else {\n\t\t\tconst result: string[] = [];\n\n\t\t\tresult.push(basename(element.sourceUri));\n\n\t\t\tif (element.decorations.tooltip) {\n\t\t\t\tresult.push(element.decorations.tooltip);\n\t\t\t}\n\n\t\t\tconst path = this.labelService.getUriLabel(\n\t\t\t\tdirname(element.sourceUri),\n\t\t\t\t{ relative: true, noPrefix: true },\n\t\t\t);\n\n\t\t\tif (path) {\n\t\t\t\tresult.push(path);\n\t\t\t}\n\n\t\t\treturn result.join(\", \");\n\t\t}\n\t}\n}\n\nenum ViewMode {\n\tList = \"list\",\n\tTree = \"tree\",\n}\n\nenum ViewSortKey {\n\tPath = \"path\",\n\tName = \"name\",\n\tStatus = \"status\",\n}\n\nconst Menus = {\n\tViewSort: new MenuId(\"SCMViewSort\"),\n\tRepositories: new MenuId(\"SCMRepositories\"),\n\tChangesSettings: new MenuId(\"SCMChangesSettings\"),\n};\n\nexport const ContextKeys = {\n\tSCMViewMode: new RawContextKey<ViewMode>(\"scmViewMode\", ViewMode.List),\n\tSCMViewSortKey: new RawContextKey<ViewSortKey>(\n\t\t\"scmViewSortKey\",\n\t\tViewSortKey.Path,\n\t),\n\tSCMViewAreAllRepositoriesCollapsed: new RawContextKey<boolean>(\n\t\t\"scmViewAreAllRepositoriesCollapsed\",\n\t\tfalse,\n\t),\n\tSCMViewIsAnyRepositoryCollapsible: new RawContextKey<boolean>(\n\t\t\"scmViewIsAnyRepositoryCollapsible\",\n\t\tfalse,\n\t),\n\tSCMProvider: new RawContextKey<string | undefined>(\n\t\t\"scmProvider\",\n\t\tundefined,\n\t),\n\tSCMProviderRootUri: new RawContextKey<string | undefined>(\n\t\t\"scmProviderRootUri\",\n\t\tundefined,\n\t),\n\tSCMProviderHasRootUri: new RawContextKey<boolean>(\n\t\t\"scmProviderHasRootUri\",\n\t\tundefined,\n\t),\n\tRepositoryCount: new RawContextKey<number>(\"scmRepositoryCount\", 0),\n\tRepositoryVisibilityCount: new RawContextKey<number>(\n\t\t\"scmRepositoryVisibleCount\",\n\t\t0,\n\t),\n\tRepositoryVisibility(repository: ISCMRepository) {\n\t\treturn new RawContextKey<boolean>(\n\t\t\t`scmRepositoryVisible:${repository.provider.id}`,\n\t\t\tfalse,\n\t\t);\n\t},\n};\n\nMenuRegistry.appendMenuItem(MenuId.SCMTitle, {\n\ttitle: localize(\"sortAction\", \"View & Sort\"),\n\tsubmenu: Menus.ViewSort,\n\twhen: ContextKeyExpr.and(\n\t\tContextKeyExpr.equals(\"view\", VIEW_PANE_ID),\n\t\tContextKeys.RepositoryCount.notEqualsTo(0),\n\t),\n\tgroup: \"0_view&sort\",\n\torder: 1,\n});\n\nMenuRegistry.appendMenuItem(Menus.ViewSort, {\n\ttitle: localize(\"repositories\", \"Repositories\"),\n\tsubmenu: Menus.Repositories,\n\twhen: ContextKeyExpr.greater(ContextKeys.RepositoryCount.key, 1),\n\tgroup: \"0_repositories\",\n});\n\nclass RepositoryVisibilityAction extends Action2 {\n\tprivate repository: ISCMRepository;\n\n\tconstructor(repository: ISCMRepository) {\n\t\tsuper({\n\t\t\tid: `workbench.scm.action.toggleRepositoryVisibility.${repository.provider.id}`,\n\t\t\ttitle: repository.provider.name,\n\t\t\tf1: false,\n\t\t\tprecondition: ContextKeyExpr.or(\n\t\t\t\tContextKeys.RepositoryVisibilityCount.notEqualsTo(1),\n\t\t\t\tContextKeys.RepositoryVisibility(repository).isEqualTo(false),\n\t\t\t),\n\t\t\ttoggled:\n\t\t\t\tContextKeys.RepositoryVisibility(repository).isEqualTo(true),\n\t\t\tmenu: { id: Menus.Repositories, group: \"0_repositories\" },\n\t\t});\n\t\tthis.repository = repository;\n\t}\n\n\trun(accessor: ServicesAccessor) {\n\t\tconst scmViewService = accessor.get(ISCMViewService);\n\t\tscmViewService.toggleVisibility(this.repository);\n\t}\n}\n\ninterface RepositoryVisibilityItem {\n\treadonly contextKey: IContextKey<boolean>;\n\tdispose(): void;\n}\n\nclass RepositoryVisibilityActionController {\n\tprivate items = new Map<ISCMRepository, RepositoryVisibilityItem>();\n\tprivate repositoryCountContextKey: IContextKey<number>;\n\tprivate repositoryVisibilityCountContextKey: IContextKey<number>;\n\tprivate readonly disposables = new DisposableStore();\n\n\tconstructor(\n\t\t@IContextKeyService private contextKeyService: IContextKeyService,\n\t\t@ISCMViewService private readonly scmViewService: ISCMViewService,\n\t\t@ISCMService scmService: ISCMService\n\t) {\n\t\tthis.repositoryCountContextKey = ContextKeys.RepositoryCount.bindTo(contextKeyService);\n\t\tthis.repositoryVisibilityCountContextKey = ContextKeys.RepositoryVisibilityCount.bindTo(contextKeyService);\n\n\t\tscmViewService.onDidChangeVisibleRepositories(this.onDidChangeVisibleRepositories, this, this.disposables);\n\t\tscmService.onDidAddRepository(this.onDidAddRepository, this, this.disposables);\n\t\tscmService.onDidRemoveRepository(this.onDidRemoveRepository, this, this.disposables);\n\n\t\tfor (const repository of scmService.repositories) {\n\t\t\tthis.onDidAddRepository(repository);\n\t\t}\n\t}\n\n\tprivate onDidAddRepository(repository: ISCMRepository): void {\n\t\tconst action = registerAction2(\n\t\t\tclass extends RepositoryVisibilityAction {\n\t\t\t\tconstructor() {\n\t\t\t\t\tsuper(repository);\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\n\t\tconst contextKey = ContextKeys.RepositoryVisibility(repository).bindTo(\n\t\t\tthis.contextKeyService,\n\t\t);\n\t\tcontextKey.set(this.scmViewService.isVisible(repository));\n\n\t\tthis.items.set(repository, {\n\t\t\tcontextKey,\n\t\t\tdispose() {\n\t\t\t\tcontextKey.reset();\n\t\t\t\taction.dispose();\n\t\t\t},\n\t\t});\n\n\t\tthis.updateRepositoryContextKeys();\n\t}\n\n\tprivate onDidRemoveRepository(repository: ISCMRepository): void {\n\t\tthis.items.get(repository)?.dispose();\n\t\tthis.items.delete(repository);\n\t\tthis.updateRepositoryContextKeys();\n\t}\n\n\tprivate onDidChangeVisibleRepositories(): void {\n\t\tlet count = 0;\n\n\t\tfor (const [repository, item] of this.items) {\n\t\t\tconst isVisible = this.scmViewService.isVisible(repository);\n\t\t\titem.contextKey.set(isVisible);\n\n\t\t\tif (isVisible) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\n\t\tthis.repositoryCountContextKey.set(this.items.size);\n\t\tthis.repositoryVisibilityCountContextKey.set(count);\n\t}\n\n\tprivate updateRepositoryContextKeys(): void {\n\t\tthis.repositoryCountContextKey.set(this.items.size);\n\t\tthis.repositoryVisibilityCountContextKey.set(\n\t\t\tIterable.reduce(\n\t\t\t\tthis.items.keys(),\n\t\t\t\t(r, repository) =>\n\t\t\t\t\tr + (this.scmViewService.isVisible(repository) ? 1 : 0),\n\t\t\t\t0,\n\t\t\t),\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\t\tdispose(this.items.values());\n\t\tthis.items.clear();\n\t}\n}\n\nclass SetListViewModeAction extends ViewAction<SCMViewPane> {\n\tconstructor(\n\t\tid = \"workbench.scm.action.setListViewMode\",\n\t\tmenu: Partial<IAction2Options[\"menu\"]> = {},\n\t) {\n\t\tsuper({\n\t\t\tid,\n\t\t\ttitle: localize(\"setListViewMode\", \"View as List\"),\n\t\t\tviewId: VIEW_PANE_ID,\n\t\t\tf1: false,\n\t\t\ticon: Codicon.listTree,\n\t\t\ttoggled: ContextKeys.SCMViewMode.isEqualTo(ViewMode.List),\n\t\t\tmenu: { id: Menus.ViewSort, group: \"1_viewmode\", ...menu },\n\t\t});\n\t}\n\n\tasync runInView(_: ServicesAccessor, view: SCMViewPane): Promise<void> {\n\t\tview.viewMode = ViewMode.List;\n\t}\n}\n\nclass SetListViewModeNavigationAction extends SetListViewModeAction {\n\tconstructor() {\n\t\tsuper(\"workbench.scm.action.setListViewModeNavigation\", {\n\t\t\tid: MenuId.SCMTitle,\n\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\tContextKeyExpr.equals(\"view\", VIEW_PANE_ID),\n\t\t\t\tContextKeys.RepositoryCount.notEqualsTo(0),\n\t\t\t\tContextKeys.SCMViewMode.isEqualTo(ViewMode.Tree),\n\t\t\t),\n\t\t\tgroup: \"navigation\",\n\t\t\torder: -1000,\n\t\t});\n\t}\n}\n\nclass SetTreeViewModeAction extends ViewAction<SCMViewPane> {\n\tconstructor(\n\t\tid = \"workbench.scm.action.setTreeViewMode\",\n\t\tmenu: Partial<IAction2Options[\"menu\"]> = {},\n\t) {\n\t\tsuper({\n\t\t\tid,\n\t\t\ttitle: localize(\"setTreeViewMode\", \"View as Tree\"),\n\t\t\tviewId: VIEW_PANE_ID,\n\t\t\tf1: false,\n\t\t\ticon: Codicon.listFlat,\n\t\t\ttoggled: ContextKeys.SCMViewMode.isEqualTo(ViewMode.Tree),\n\t\t\tmenu: { id: Menus.ViewSort, group: \"1_viewmode\", ...menu },\n\t\t});\n\t}\n\n\tasync runInView(_: ServicesAccessor, view: SCMViewPane): Promise<void> {\n\t\tview.viewMode = ViewMode.Tree;\n\t}\n}\n\nclass SetTreeViewModeNavigationAction extends SetTreeViewModeAction {\n\tconstructor() {\n\t\tsuper(\"workbench.scm.action.setTreeViewModeNavigation\", {\n\t\t\tid: MenuId.SCMTitle,\n\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\tContextKeyExpr.equals(\"view\", VIEW_PANE_ID),\n\t\t\t\tContextKeys.RepositoryCount.notEqualsTo(0),\n\t\t\t\tContextKeys.SCMViewMode.isEqualTo(ViewMode.List),\n\t\t\t),\n\t\t\tgroup: \"navigation\",\n\t\t\torder: -1000,\n\t\t});\n\t}\n}\n\nregisterAction2(SetListViewModeAction);\nregisterAction2(SetTreeViewModeAction);\nregisterAction2(SetListViewModeNavigationAction);\nregisterAction2(SetTreeViewModeNavigationAction);\n\nabstract class RepositorySortAction extends ViewAction<SCMViewPane> {\n\tconstructor(\n\t\tprivate sortKey: ISCMRepositorySortKey,\n\t\ttitle: string,\n\t) {\n\t\tsuper({\n\t\t\tid: `workbench.scm.action.repositories.setSortKey.${sortKey}`,\n\t\t\ttitle,\n\t\t\tviewId: VIEW_PANE_ID,\n\t\t\tf1: false,\n\t\t\ttoggled: RepositoryContextKeys.RepositorySortKey.isEqualTo(sortKey),\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: Menus.Repositories,\n\t\t\t\t\tgroup: \"1_sort\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.SCMSourceControlTitle,\n\t\t\t\t\tgroup: \"1_sort\",\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\trunInView(accessor: ServicesAccessor) {\n\t\taccessor.get(ISCMViewService).toggleSortKey(this.sortKey);\n\t}\n}\n\nclass RepositorySortByDiscoveryTimeAction extends RepositorySortAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\tISCMRepositorySortKey.DiscoveryTime,\n\t\t\tlocalize(\"repositorySortByDiscoveryTime\", \"Sort by Discovery Time\"),\n\t\t);\n\t}\n}\n\nclass RepositorySortByNameAction extends RepositorySortAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\tISCMRepositorySortKey.Name,\n\t\t\tlocalize(\"repositorySortByName\", \"Sort by Name\"),\n\t\t);\n\t}\n}\n\nclass RepositorySortByPathAction extends RepositorySortAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\tISCMRepositorySortKey.Path,\n\t\t\tlocalize(\"repositorySortByPath\", \"Sort by Path\"),\n\t\t);\n\t}\n}\n\nregisterAction2(RepositorySortByDiscoveryTimeAction);\nregisterAction2(RepositorySortByNameAction);\nregisterAction2(RepositorySortByPathAction);\n\nabstract class SetSortKeyAction extends ViewAction<SCMViewPane> {\n\tconstructor(\n\t\tprivate sortKey: ViewSortKey,\n\t\ttitle: string,\n\t) {\n\t\tsuper({\n\t\t\tid: `workbench.scm.action.setSortKey.${sortKey}`,\n\t\t\ttitle,\n\t\t\tviewId: VIEW_PANE_ID,\n\t\t\tf1: false,\n\t\t\ttoggled: ContextKeys.SCMViewSortKey.isEqualTo(sortKey),\n\t\t\tprecondition: ContextKeys.SCMViewMode.isEqualTo(ViewMode.List),\n\t\t\tmenu: { id: Menus.ViewSort, group: \"2_sort\" },\n\t\t});\n\t}\n\n\tasync runInView(_: ServicesAccessor, view: SCMViewPane): Promise<void> {\n\t\tview.viewSortKey = this.sortKey;\n\t}\n}\n\nclass SetSortByNameAction extends SetSortKeyAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\tViewSortKey.Name,\n\t\t\tlocalize(\"sortChangesByName\", \"Sort Changes by Name\"),\n\t\t);\n\t}\n}\n\nclass SetSortByPathAction extends SetSortKeyAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\tViewSortKey.Path,\n\t\t\tlocalize(\"sortChangesByPath\", \"Sort Changes by Path\"),\n\t\t);\n\t}\n}\n\nclass SetSortByStatusAction extends SetSortKeyAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\tViewSortKey.Status,\n\t\t\tlocalize(\"sortChangesByStatus\", \"Sort Changes by Status\"),\n\t\t);\n\t}\n}\n\nregisterAction2(SetSortByNameAction);\nregisterAction2(SetSortByPathAction);\nregisterAction2(SetSortByStatusAction);\n\nclass CollapseAllRepositoriesAction extends ViewAction<SCMViewPane> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: `workbench.scm.action.collapseAllRepositories`,\n\t\t\ttitle: localize(\"collapse all\", \"Collapse All Repositories\"),\n\t\t\tviewId: VIEW_PANE_ID,\n\t\t\tf1: false,\n\t\t\ticon: Codicon.collapseAll,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.SCMTitle,\n\t\t\t\tgroup: \"navigation\",\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tContextKeyExpr.equals(\"view\", VIEW_PANE_ID),\n\t\t\t\t\tContextKeys.SCMViewIsAnyRepositoryCollapsible.isEqualTo(\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t),\n\t\t\t\t\tContextKeys.SCMViewAreAllRepositoriesCollapsed.isEqualTo(\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t},\n\t\t});\n\t}\n\n\tasync runInView(_: ServicesAccessor, view: SCMViewPane): Promise<void> {\n\t\tview.collapseAllRepositories();\n\t}\n}\n\nclass ExpandAllRepositoriesAction extends ViewAction<SCMViewPane> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: `workbench.scm.action.expandAllRepositories`,\n\t\t\ttitle: localize(\"expand all\", \"Expand All Repositories\"),\n\t\t\tviewId: VIEW_PANE_ID,\n\t\t\tf1: false,\n\t\t\ticon: Codicon.expandAll,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.SCMTitle,\n\t\t\t\tgroup: \"navigation\",\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tContextKeyExpr.equals(\"view\", VIEW_PANE_ID),\n\t\t\t\t\tContextKeys.SCMViewIsAnyRepositoryCollapsible.isEqualTo(\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t),\n\t\t\t\t\tContextKeys.SCMViewAreAllRepositoriesCollapsed.isEqualTo(\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t},\n\t\t});\n\t}\n\n\tasync runInView(_: ServicesAccessor, view: SCMViewPane): Promise<void> {\n\t\tview.expandAllRepositories();\n\t}\n}\n\nregisterAction2(CollapseAllRepositoriesAction);\nregisterAction2(ExpandAllRepositoriesAction);\n\nenum SCMInputWidgetCommandId {\n\tCancelAction = \"scm.input.cancelAction\",\n}\n\nenum SCMInputWidgetStorageKey {\n\tLastActionId = \"scm.input.lastActionId\",\n}\n\nclass SCMInputWidgetActionRunner extends ActionRunner {\n\tprivate readonly _runningActions = new Set<IAction>();\n\tpublic get runningActions(): Set<IAction> {\n\t\treturn this._runningActions;\n\t}\n\n\tprivate _cts: CancellationTokenSource | undefined;\n\n\tconstructor(\n\t\tprivate readonly input: ISCMInput,\n\t\t@IStorageService private readonly storageService: IStorageService\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected override async runAction(action: IAction): Promise<void> {\n\t\ttry {\n\t\t\t// Cancel previous action\n\t\t\tif (this.runningActions.size !== 0) {\n\t\t\t\tthis._cts?.cancel();\n\n\t\t\t\tif (action.id === SCMInputWidgetCommandId.CancelAction) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Create action context\n\t\t\tconst context: ISCMInputValueProviderContext[] = [];\n\t\t\tfor (const group of this.input.repository.provider.groups) {\n\t\t\t\tcontext.push({\n\t\t\t\t\tresourceGroupId: group.id,\n\t\t\t\t\tresources: [...group.resources.map((r) => r.sourceUri)],\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Run action\n\t\t\tthis._runningActions.add(action);\n\t\t\tthis._cts = new CancellationTokenSource();\n\t\t\tawait action.run(\n\t\t\t\t...[\n\t\t\t\t\tthis.input.repository.provider.rootUri,\n\t\t\t\t\tcontext,\n\t\t\t\t\tthis._cts.token,\n\t\t\t\t],\n\t\t\t);\n\t\t} finally {\n\t\t\tthis._runningActions.delete(action);\n\n\t\t\t// Save last action\n\t\t\tif (this._runningActions.size === 0) {\n\t\t\t\tthis.storageService.store(\n\t\t\t\t\tSCMInputWidgetStorageKey.LastActionId,\n\t\t\t\t\taction.id,\n\t\t\t\t\tStorageScope.PROFILE,\n\t\t\t\t\tStorageTarget.USER,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass SCMInputWidgetToolbar extends WorkbenchToolBar {\n\tprivate _dropdownActions: IAction[] = [];\n\tget dropdownActions(): IAction[] {\n\t\treturn this._dropdownActions;\n\t}\n\n\tprivate _dropdownAction: IAction;\n\tget dropdownAction(): IAction {\n\t\treturn this._dropdownAction;\n\t}\n\n\tprivate _cancelAction: IAction;\n\n\tprivate _onDidChange = new Emitter<void>();\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tprivate readonly _disposables = this._register(\n\t\tnew MutableDisposable<DisposableStore>(),\n\t);\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\toptions: IMenuWorkbenchToolBarOptions | undefined,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t) {\n\t\tsuper(container, { resetMenu: MenuId.SCMInputBox, ...options }, menuService, contextKeyService, contextMenuService, keybindingService, commandService, telemetryService);\n\n\t\tthis._dropdownAction = new Action(\n\t\t\t'scmInputMoreActions',\n\t\t\tlocalize('scmInputMoreActions', \"More Actions...\"),\n\t\t\t'codicon-chevron-down');\n\n\t\tthis._cancelAction = new MenuItemAction({\n\t\t\tid: SCMInputWidgetCommandId.CancelAction,\n\t\t\ttitle: localize('scmInputCancelAction', \"Cancel\"),\n\t\t\ticon: Codicon.debugStop,\n\t\t}, undefined, undefined, undefined, undefined, contextKeyService, commandService);\n\t}\n\n\tpublic setInput(input: ISCMInput): void {\n\t\tthis._disposables.value = new DisposableStore();\n\n\t\tconst contextKeyService = this.contextKeyService.createOverlay([\n\t\t\t[\"scmProvider\", input.repository.provider.contextValue],\n\t\t\t[\n\t\t\t\t\"scmProviderRootUri\",\n\t\t\t\tinput.repository.provider.rootUri?.toString(),\n\t\t\t],\n\t\t\t[\"scmProviderHasRootUri\", !!input.repository.provider.rootUri],\n\t\t]);\n\n\t\tconst menu = this._disposables.value.add(\n\t\t\tthis.menuService.createMenu(MenuId.SCMInputBox, contextKeyService, {\n\t\t\t\temitEventsForSubmenuChanges: true,\n\t\t\t}),\n\t\t);\n\n\t\tconst isEnabled = (): boolean => {\n\t\t\treturn input.repository.provider.groups.some(\n\t\t\t\t(g) => g.resources.length > 0,\n\t\t\t);\n\t\t};\n\n\t\tconst updateToolbar = () => {\n\t\t\tconst actions: IAction[] = [];\n\t\t\tcreateAndFillInActionBarActions(\n\t\t\t\tmenu,\n\t\t\t\t{ shouldForwardArgs: true },\n\t\t\t\tactions,\n\t\t\t);\n\n\t\t\tfor (const action of actions) {\n\t\t\t\taction.enabled = isEnabled();\n\t\t\t}\n\t\t\tthis._dropdownAction.enabled = isEnabled();\n\n\t\t\tlet primaryAction: IAction | undefined;\n\n\t\t\tif (actions.length === 1) {\n\t\t\t\tprimaryAction = actions[0];\n\t\t\t} else if (actions.length > 1) {\n\t\t\t\tconst lastActionId = this.storageService.get(\n\t\t\t\t\tSCMInputWidgetStorageKey.LastActionId,\n\t\t\t\t\tStorageScope.PROFILE,\n\t\t\t\t\t\"\",\n\t\t\t\t);\n\t\t\t\tprimaryAction =\n\t\t\t\t\tactions.find((a) => a.id === lastActionId) ?? actions[0];\n\t\t\t}\n\n\t\t\tthis._dropdownActions = actions.length === 1 ? [] : actions;\n\t\t\tsuper.setActions(primaryAction ? [primaryAction] : [], []);\n\n\t\t\tthis._onDidChange.fire();\n\t\t};\n\n\t\tthis._disposables.value.add(menu.onDidChange(() => updateToolbar()));\n\t\tthis._disposables.value.add(\n\t\t\tinput.repository.provider.onDidChangeResources(() =>\n\t\t\t\tupdateToolbar(),\n\t\t\t),\n\t\t);\n\t\tthis._disposables.value.add(\n\t\t\tthis.storageService.onDidChangeValue(\n\t\t\t\tStorageScope.PROFILE,\n\t\t\t\tSCMInputWidgetStorageKey.LastActionId,\n\t\t\t\tthis._disposables.value,\n\t\t\t)(() => updateToolbar()),\n\t\t);\n\n\t\tthis.actionRunner = new SCMInputWidgetActionRunner(\n\t\t\tinput,\n\t\t\tthis.storageService,\n\t\t);\n\t\tthis._disposables.value.add(\n\t\t\tthis.actionRunner.onWillRun((e) => {\n\t\t\t\tif (\n\t\t\t\t\t(this.actionRunner as SCMInputWidgetActionRunner)\n\t\t\t\t\t\t.runningActions.size === 0\n\t\t\t\t) {\n\t\t\t\t\tsuper.setActions([this._cancelAction], []);\n\t\t\t\t\tthis._onDidChange.fire();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis._disposables.value.add(\n\t\t\tthis.actionRunner.onDidRun((e) => {\n\t\t\t\tif (\n\t\t\t\t\t(this.actionRunner as SCMInputWidgetActionRunner)\n\t\t\t\t\t\t.runningActions.size === 0\n\t\t\t\t) {\n\t\t\t\t\tupdateToolbar();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tupdateToolbar();\n\t}\n}\n\nclass SCMInputWidgetEditorOptions {\n\tprivate readonly _onDidChange = new Emitter<void>();\n\treadonly onDidChange = this._onDidChange.event;\n\n\tprivate readonly defaultInputFontFamily = DEFAULT_FONT_FAMILY;\n\n\tprivate readonly _disposables = new DisposableStore();\n\n\tconstructor(\n\t\tprivate readonly overflowWidgetsDomNode: HTMLElement,\n\t\tprivate readonly configurationService: IConfigurationService,\n\t) {\n\t\tconst onDidChangeConfiguration = Event.filter(\n\t\t\tthis.configurationService.onDidChangeConfiguration,\n\t\t\t(e) => {\n\t\t\t\treturn (\n\t\t\t\t\te.affectsConfiguration(\"editor.accessibilitySupport\") ||\n\t\t\t\t\te.affectsConfiguration(\"editor.cursorBlinking\") ||\n\t\t\t\t\te.affectsConfiguration(\"editor.fontFamily\") ||\n\t\t\t\t\te.affectsConfiguration(\"editor.rulers\") ||\n\t\t\t\t\te.affectsConfiguration(\"editor.wordWrap\") ||\n\t\t\t\t\te.affectsConfiguration(\"scm.inputFontFamily\") ||\n\t\t\t\t\te.affectsConfiguration(\"scm.inputFontSize\")\n\t\t\t\t);\n\t\t\t},\n\t\t\tthis._disposables,\n\t\t);\n\n\t\tthis._disposables.add(\n\t\t\tonDidChangeConfiguration(() => this._onDidChange.fire()),\n\t\t);\n\t}\n\n\tgetEditorConstructionOptions(): IEditorConstructionOptions {\n\t\tconst fontFamily = this._getEditorFontFamily();\n\t\tconst fontSize = this._getEditorFontSize();\n\t\tconst lineHeight = this._getEditorLineHeight(fontSize);\n\n\t\treturn {\n\t\t\t...getSimpleEditorOptions(this.configurationService),\n\t\t\t...this._getEditorLanguageConfiguration(),\n\t\t\tcursorWidth: 1,\n\t\t\tdragAndDrop: true,\n\t\t\tdropIntoEditor: { enabled: true },\n\t\t\tfontFamily: fontFamily,\n\t\t\tfontSize: fontSize,\n\t\t\tformatOnType: true,\n\t\t\tlineDecorationsWidth: 6,\n\t\t\tlineHeight: lineHeight,\n\t\t\toverflowWidgetsDomNode: this.overflowWidgetsDomNode,\n\t\t\tpadding: { top: 2, bottom: 2 },\n\t\t\tquickSuggestions: false,\n\t\t\trenderWhitespace: \"none\",\n\t\t\tscrollbar: {\n\t\t\t\talwaysConsumeMouseWheel: false,\n\t\t\t\tvertical: \"hidden\",\n\t\t\t},\n\t\t\twrappingIndent: \"none\",\n\t\t\twrappingStrategy: \"advanced\",\n\t\t};\n\t}\n\n\tgetEditorOptions(): IEditorOptions {\n\t\tconst fontFamily = this._getEditorFontFamily();\n\t\tconst fontSize = this._getEditorFontSize();\n\t\tconst lineHeight = this._getEditorLineHeight(fontSize);\n\t\tconst accessibilitySupport = this.configurationService.getValue<\n\t\t\t\"auto\" | \"off\" | \"on\"\n\t\t>(\"editor.accessibilitySupport\");\n\t\tconst cursorBlinking = this.configurationService.getValue<\n\t\t\t\"blink\" | \"smooth\" | \"phase\" | \"expand\" | \"solid\"\n\t\t>(\"editor.cursorBlinking\");\n\n\t\treturn {\n\t\t\t...this._getEditorLanguageConfiguration(),\n\t\t\taccessibilitySupport,\n\t\t\tcursorBlinking,\n\t\t\tfontFamily,\n\t\t\tfontSize,\n\t\t\tlineHeight,\n\t\t};\n\t}\n\n\tprivate _getEditorFontFamily(): string {\n\t\tconst inputFontFamily = this.configurationService\n\t\t\t.getValue<string>(\"scm.inputFontFamily\")\n\t\t\t.trim();\n\n\t\tif (inputFontFamily.toLowerCase() === \"editor\") {\n\t\t\treturn this.configurationService\n\t\t\t\t.getValue<string>(\"editor.fontFamily\")\n\t\t\t\t.trim();\n\t\t}\n\n\t\tif (\n\t\t\tinputFontFamily.length !== 0 &&\n\t\t\tinputFontFamily.toLowerCase() !== \"default\"\n\t\t) {\n\t\t\treturn inputFontFamily;\n\t\t}\n\n\t\treturn this.defaultInputFontFamily;\n\t}\n\n\tprivate _getEditorFontSize(): number {\n\t\treturn this.configurationService.getValue<number>(\"scm.inputFontSize\");\n\t}\n\n\tprivate _getEditorLanguageConfiguration(): IEditorOptions {\n\t\t// editor.rulers\n\t\tconst rulersConfig = this.configurationService.inspect(\n\t\t\t\"editor.rulers\",\n\t\t\t{ overrideIdentifier: \"scminput\" },\n\t\t);\n\t\tconst rulers = rulersConfig.overrideIdentifiers?.includes(\"scminput\")\n\t\t\t? EditorOptions.rulers.validate(rulersConfig.value)\n\t\t\t: [];\n\n\t\t// editor.wordWrap\n\t\tconst wordWrapConfig = this.configurationService.inspect(\n\t\t\t\"editor.wordWrap\",\n\t\t\t{ overrideIdentifier: \"scminput\" },\n\t\t);\n\t\tconst wordWrap = wordWrapConfig.overrideIdentifiers?.includes(\n\t\t\t\"scminput\",\n\t\t)\n\t\t\t? EditorOptions.wordWrap.validate(wordWrapConfig.value)\n\t\t\t: \"on\";\n\n\t\treturn { rulers, wordWrap };\n\t}\n\n\tprivate _getEditorLineHeight(fontSize: number): number {\n\t\treturn Math.round(fontSize * 1.5);\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n}\n\nclass SCMInputWidget {\n\tprivate static readonly ValidationTimeouts: { [severity: number]: number } =\n\t\t{\n\t\t\t[InputValidationType.Information]: 5000,\n\t\t\t[InputValidationType.Warning]: 8000,\n\t\t\t[InputValidationType.Error]: 10000,\n\t\t};\n\n\tprivate readonly contextKeyService: IContextKeyService;\n\n\tprivate element: HTMLElement;\n\tprivate editorContainer: HTMLElement;\n\tprivate readonly inputEditor: CodeEditorWidget;\n\tprivate readonly inputEditorOptions: SCMInputWidgetEditorOptions;\n\tprivate toolbarContainer: HTMLElement;\n\tprivate toolbar: SCMInputWidgetToolbar;\n\tprivate readonly disposables = new DisposableStore();\n\n\tprivate model:\n\t\t| { readonly input: ISCMInput; readonly textModel: ITextModel }\n\t\t| undefined;\n\tprivate repositoryIdContextKey: IContextKey<string | undefined>;\n\tprivate readonly repositoryDisposables = new DisposableStore();\n\n\tprivate validation: IInputValidation | undefined;\n\tprivate validationContextView: IOpenContextView | undefined;\n\tprivate validationHasFocus = false;\n\tprivate _validationTimer: any;\n\n\t// This is due to \"Setup height change listener on next tick\" above\n\t// https://github.com/microsoft/vscode/issues/108067\n\tprivate lastLayoutWasTrash = false;\n\tprivate shouldFocusAfterLayout = false;\n\n\treadonly onDidChangeContentHeight: Event<void>;\n\n\tget input(): ISCMInput | undefined {\n\t\treturn this.model?.input;\n\t}\n\n\tset input(input: ISCMInput | undefined) {\n\t\tif (input === this.input) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearValidation();\n\t\tthis.element.classList.remove(\"synthetic-focus\");\n\n\t\tthis.repositoryDisposables.clear();\n\t\tthis.repositoryIdContextKey.set(input?.repository.id);\n\n\t\tif (!input) {\n\t\t\tthis.inputEditor.setModel(undefined);\n\t\t\tthis.model = undefined;\n\t\t\treturn;\n\t\t}\n\n\t\tconst textModel = input.repository.provider.inputBoxTextModel;\n\t\tthis.inputEditor.setModel(textModel);\n\n\t\tif (\n\t\t\tthis.configurationService.getValue(\"editor.wordBasedSuggestions\", {\n\t\t\t\tresource: textModel.uri,\n\t\t\t}) !== \"off\"\n\t\t) {\n\t\t\tthis.configurationService.updateValue(\n\t\t\t\t\"editor.wordBasedSuggestions\",\n\t\t\t\t\"off\",\n\t\t\t\t{ resource: textModel.uri },\n\t\t\t\tConfigurationTarget.MEMORY,\n\t\t\t);\n\t\t}\n\n\t\t// Validation\n\t\tconst validationDelayer = new ThrottledDelayer<any>(200);\n\t\tconst validate = async () => {\n\t\t\tconst position = this.inputEditor\n\t\t\t\t.getSelection()\n\t\t\t\t?.getStartPosition();\n\t\t\tconst offset = position && textModel.getOffsetAt(position);\n\t\t\tconst value = textModel.getValue();\n\n\t\t\tthis.setValidation(await input.validateInput(value, offset || 0));\n\t\t};\n\n\t\tconst triggerValidation = () => validationDelayer.trigger(validate);\n\t\tthis.repositoryDisposables.add(validationDelayer);\n\t\tthis.repositoryDisposables.add(\n\t\t\tthis.inputEditor.onDidChangeCursorPosition(triggerValidation),\n\t\t);\n\n\t\t// Adaptive indentation rules\n\t\tconst opts = this.modelService.getCreationOptions(\n\t\t\ttextModel.getLanguageId(),\n\t\t\ttextModel.uri,\n\t\t\ttextModel.isForSimpleWidget,\n\t\t);\n\t\tconst onEnter = Event.filter(\n\t\t\tthis.inputEditor.onKeyDown,\n\t\t\t(e) => e.keyCode === KeyCode.Enter,\n\t\t\tthis.repositoryDisposables,\n\t\t);\n\t\tthis.repositoryDisposables.add(\n\t\t\tonEnter(() =>\n\t\t\t\ttextModel.detectIndentation(opts.insertSpaces, opts.tabSize),\n\t\t\t),\n\t\t);\n\n\t\t// Keep model in sync with API\n\t\ttextModel.setValue(input.value);\n\t\tthis.repositoryDisposables.add(\n\t\t\tinput.onDidChange(({ value, reason }) => {\n\t\t\t\tconst currentValue = textModel.getValue();\n\t\t\t\tif (value === currentValue) {\n\t\t\t\t\t// circuit breaker\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttextModel.pushStackElement();\n\t\t\t\ttextModel.pushEditOperations(\n\t\t\t\t\tnull,\n\t\t\t\t\t[\n\t\t\t\t\t\tEditOperation.replaceMove(\n\t\t\t\t\t\t\ttextModel.getFullModelRange(),\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t),\n\t\t\t\t\t],\n\t\t\t\t\t() => [],\n\t\t\t\t);\n\n\t\t\t\tconst position =\n\t\t\t\t\treason === SCMInputChangeReason.HistoryPrevious\n\t\t\t\t\t\t? textModel.getFullModelRange().getStartPosition()\n\t\t\t\t\t\t: textModel.getFullModelRange().getEndPosition();\n\t\t\t\tthis.inputEditor.setPosition(position);\n\t\t\t\tthis.inputEditor.revealPositionInCenterIfOutsideViewport(\n\t\t\t\t\tposition,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\t\tthis.repositoryDisposables.add(\n\t\t\tinput.onDidChangeFocus(() => this.focus()),\n\t\t);\n\t\tthis.repositoryDisposables.add(\n\t\t\tinput.onDidChangeValidationMessage((e) =>\n\t\t\t\tthis.setValidation(e, { focus: true, timeout: true }),\n\t\t\t),\n\t\t);\n\t\tthis.repositoryDisposables.add(\n\t\t\tinput.onDidChangeValidateInput((e) => triggerValidation()),\n\t\t);\n\n\t\t// Keep API in sync with model and validate\n\t\tthis.repositoryDisposables.add(\n\t\t\ttextModel.onDidChangeContent(() => {\n\t\t\t\tinput.setValue(textModel.getValue(), true);\n\t\t\t\ttriggerValidation();\n\t\t\t}),\n\t\t);\n\n\t\t// Update placeholder text\n\t\tconst updatePlaceholderText = () => {\n\t\t\tconst binding =\n\t\t\t\tthis.keybindingService.lookupKeybinding(\"scm.acceptInput\");\n\t\t\tconst label = binding\n\t\t\t\t? binding.getLabel()\n\t\t\t\t: platform.isMacintosh\n\t\t\t\t\t? \"Cmd+Enter\"\n\t\t\t\t\t: \"Ctrl+Enter\";\n\t\t\tconst placeholderText = format(input.placeholder, label);\n\n\t\t\tthis.inputEditor.updateOptions({ placeholder: placeholderText });\n\t\t};\n\t\tthis.repositoryDisposables.add(\n\t\t\tinput.onDidChangePlaceholder(updatePlaceholderText),\n\t\t);\n\t\tthis.repositoryDisposables.add(\n\t\t\tthis.keybindingService.onDidUpdateKeybindings(\n\t\t\t\tupdatePlaceholderText,\n\t\t\t),\n\t\t);\n\t\tupdatePlaceholderText();\n\n\t\t// Update input template\n\t\tlet commitTemplate = \"\";\n\t\tthis.repositoryDisposables.add(\n\t\t\tautorun((reader) => {\n\t\t\t\tif (!input.visible) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst oldCommitTemplate = commitTemplate;\n\t\t\t\tcommitTemplate =\n\t\t\t\t\tinput.repository.provider.commitTemplate.read(reader);\n\n\t\t\t\tconst value = textModel.getValue();\n\t\t\t\tif (value && value !== oldCommitTemplate) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttextModel.setValue(commitTemplate);\n\t\t\t}),\n\t\t);\n\n\t\t// Update input enablement\n\t\tconst updateEnablement = (enabled: boolean) => {\n\t\t\tthis.inputEditor.updateOptions({ readOnly: !enabled });\n\t\t};\n\t\tthis.repositoryDisposables.add(\n\t\t\tinput.onDidChangeEnablement((enabled) => updateEnablement(enabled)),\n\t\t);\n\t\tupdateEnablement(input.enabled);\n\n\t\t// Toolbar\n\t\tthis.toolbar.setInput(input);\n\n\t\t// Save model\n\t\tthis.model = { input, textModel };\n\t}\n\n\tget selections(): Selection[] | null {\n\t\treturn this.inputEditor.getSelections();\n\t}\n\n\tset selections(selections: Selection[] | null) {\n\t\tif (selections) {\n\t\t\tthis.inputEditor.setSelections(selections);\n\t\t}\n\t}\n\n\tprivate setValidation(\n\t\tvalidation: IInputValidation | undefined,\n\t\toptions?: { focus?: boolean; timeout?: boolean },\n\t) {\n\t\tif (this._validationTimer) {\n\t\t\tclearTimeout(this._validationTimer);\n\t\t\tthis._validationTimer = 0;\n\t\t}\n\n\t\tthis.validation = validation;\n\t\tthis.renderValidation();\n\n\t\tif (options?.focus && !this.hasFocus()) {\n\t\t\tthis.focus();\n\t\t}\n\n\t\tif (validation && options?.timeout) {\n\t\t\tthis._validationTimer = setTimeout(\n\t\t\t\t() => this.setValidation(undefined),\n\t\t\t\tSCMInputWidget.ValidationTimeouts[validation.type],\n\t\t\t);\n\t\t}\n\t}\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\toverflowWidgetsDomNode: HTMLElement,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IModelService private modelService: IModelService,\n\t\t@IKeybindingService private keybindingService: IKeybindingService,\n\t\t@IConfigurationService private configurationService: IConfigurationService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ISCMViewService private readonly scmViewService: ISCMViewService,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService\n\t) {\n\t\tthis.element = append(container, $('.scm-editor'));\n\t\tthis.editorContainer = append(this.element, $('.scm-editor-container'));\n\t\tthis.toolbarContainer = append(this.element, $('.scm-editor-toolbar'));\n\n\t\tthis.contextKeyService = contextKeyService.createScoped(this.element);\n\t\tthis.repositoryIdContextKey = this.contextKeyService.createKey('scmRepository', undefined);\n\n\t\tthis.inputEditorOptions = new SCMInputWidgetEditorOptions(overflowWidgetsDomNode, this.configurationService);\n\t\tthis.disposables.add(this.inputEditorOptions.onDidChange(this.onDidChangeEditorOptions, this));\n\t\tthis.disposables.add(this.inputEditorOptions);\n\n\t\tconst codeEditorWidgetOptions: ICodeEditorWidgetOptions = {\n\t\t\tcontributions: EditorExtensionsRegistry.getSomeEditorContributions([\n\t\t\t\tCodeActionController.ID,\n\t\t\t\tColorDetector.ID,\n\t\t\t\tContextMenuController.ID,\n\t\t\t\tCopyPasteController.ID,\n\t\t\t\tDragAndDropController.ID,\n\t\t\t\tDropIntoEditorController.ID,\n\t\t\t\tEditorDictation.ID,\n\t\t\t\tFormatOnType.ID,\n\t\t\t\tContentHoverController.ID,\n\t\t\t\tGlyphHoverController.ID,\n\t\t\t\tInlineCompletionsController.ID,\n\t\t\t\tLinkDetector.ID,\n\t\t\t\tMenuPreventer.ID,\n\t\t\t\tMessageController.ID,\n\t\t\t\tPlaceholderTextContribution.ID,\n\t\t\t\tSelectionClipboardContributionID,\n\t\t\t\tSnippetController2.ID,\n\t\t\t\tSuggestController.ID\n\t\t\t]),\n\t\t\tisSimpleWidget: true\n\t\t};\n\n\t\tconst services = new ServiceCollection([IContextKeyService, this.contextKeyService]);\n\t\tconst instantiationService2 = instantiationService.createChild(services, this.disposables);\n\t\tconst editorConstructionOptions = this.inputEditorOptions.getEditorConstructionOptions();\n\t\tthis.inputEditor = instantiationService2.createInstance(CodeEditorWidget, this.editorContainer, editorConstructionOptions, codeEditorWidgetOptions);\n\t\tthis.disposables.add(this.inputEditor);\n\n\t\tthis.disposables.add(this.inputEditor.onDidFocusEditorText(() => {\n\t\t\tif (this.input?.repository) {\n\t\t\t\tthis.scmViewService.focus(this.input.repository);\n\t\t\t}\n\n\t\t\tthis.element.classList.add('synthetic-focus');\n\t\t\tthis.renderValidation();\n\t\t}));\n\t\tthis.disposables.add(this.inputEditor.onDidBlurEditorText(() => {\n\t\t\tthis.element.classList.remove('synthetic-focus');\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!this.validation || !this.validationHasFocus) {\n\t\t\t\t\tthis.clearValidation();\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t}));\n\n\t\tthis.disposables.add(this.inputEditor.onDidBlurEditorWidget(() => {\n\t\t\tCopyPasteController.get(this.inputEditor)?.clearWidgets();\n\t\t\tDropIntoEditorController.get(this.inputEditor)?.clearWidgets();\n\t\t}));\n\n\t\tconst firstLineKey = this.contextKeyService.createKey<boolean>('scmInputIsInFirstPosition', false);\n\t\tconst lastLineKey = this.contextKeyService.createKey<boolean>('scmInputIsInLastPosition', false);\n\n\t\tthis.disposables.add(this.inputEditor.onDidChangeCursorPosition(({ position }) => {\n\t\t\tconst viewModel = this.inputEditor._getViewModel()!;\n\t\t\tconst lastLineNumber = viewModel.getLineCount();\n\t\t\tconst lastLineCol = viewModel.getLineLength(lastLineNumber) + 1;\n\t\t\tconst viewPosition = viewModel.coordinatesConverter.convertModelPositionToViewPosition(position);\n\t\t\tfirstLineKey.set(viewPosition.lineNumber === 1 && viewPosition.column === 1);\n\t\t\tlastLineKey.set(viewPosition.lineNumber === lastLineNumber && viewPosition.column === lastLineCol);\n\t\t}));\n\t\tthis.disposables.add(this.inputEditor.onDidScrollChange(e => {\n\t\t\tthis.toolbarContainer.classList.toggle('scroll-decoration', e.scrollTop > 0);\n\t\t}));\n\n\t\tEvent.filter(this.configurationService.onDidChangeConfiguration, e => e.affectsConfiguration('scm.showInputActionButton'))(() => this.layout(), this, this.disposables);\n\n\t\tthis.onDidChangeContentHeight = Event.signal(Event.filter(this.inputEditor.onDidContentSizeChange, e => e.contentHeightChanged, this.disposables));\n\n\t\t// Toolbar\n\t\tthis.toolbar = instantiationService2.createInstance(SCMInputWidgetToolbar, this.toolbarContainer, {\n\t\t\tactionViewItemProvider: (action, options) => {\n\t\t\t\tif (action instanceof MenuItemAction && this.toolbar.dropdownActions.length > 1) {\n\t\t\t\t\treturn instantiationService.createInstance(DropdownWithPrimaryActionViewItem, action, this.toolbar.dropdownAction, this.toolbar.dropdownActions, '', this.contextMenuService, { actionRunner: this.toolbar.actionRunner, hoverDelegate: options.hoverDelegate });\n\t\t\t\t}\n\n\t\t\t\treturn createActionViewItem(instantiationService, action, options);\n\t\t\t},\n\t\t\tmenuOptions: {\n\t\t\t\tshouldForwardArgs: true\n\t\t\t}\n\t\t});\n\t\tthis.disposables.add(this.toolbar.onDidChange(() => this.layout()));\n\t\tthis.disposables.add(this.toolbar);\n\t}\n\n\tgetContentHeight(): number {\n\t\tconst lineHeight = this.inputEditor.getOption(EditorOption.lineHeight);\n\t\tconst { top, bottom } = this.inputEditor.getOption(\n\t\t\tEditorOption.padding,\n\t\t);\n\n\t\tconst inputMinLinesConfig = this.configurationService.getValue(\n\t\t\t\"scm.inputMinLineCount\",\n\t\t);\n\t\tconst inputMinLines =\n\t\t\ttypeof inputMinLinesConfig === \"number\"\n\t\t\t\t? clamp(inputMinLinesConfig, 1, 50)\n\t\t\t\t: 1;\n\t\tconst editorMinHeight = inputMinLines * lineHeight + top + bottom;\n\n\t\tconst inputMaxLinesConfig = this.configurationService.getValue(\n\t\t\t\"scm.inputMaxLineCount\",\n\t\t);\n\t\tconst inputMaxLines =\n\t\t\ttypeof inputMaxLinesConfig === \"number\"\n\t\t\t\t? clamp(inputMaxLinesConfig, 1, 50)\n\t\t\t\t: 10;\n\t\tconst editorMaxHeight = inputMaxLines * lineHeight + top + bottom;\n\n\t\treturn clamp(\n\t\t\tthis.inputEditor.getContentHeight(),\n\t\t\teditorMinHeight,\n\t\t\teditorMaxHeight,\n\t\t);\n\t}\n\n\tlayout(): void {\n\t\tconst editorHeight = this.getContentHeight();\n\t\tconst toolbarWidth = this.getToolbarWidth();\n\t\tconst dimension = new Dimension(\n\t\t\tthis.element.clientWidth - toolbarWidth,\n\t\t\teditorHeight,\n\t\t);\n\n\t\tif (dimension.width < 0) {\n\t\t\tthis.lastLayoutWasTrash = true;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.lastLayoutWasTrash = false;\n\t\tthis.inputEditor.layout(dimension);\n\t\tthis.renderValidation();\n\n\t\tconst showInputActionButton =\n\t\t\tthis.configurationService.getValue<boolean>(\n\t\t\t\t\"scm.showInputActionButton\",\n\t\t\t) === true;\n\t\tthis.toolbarContainer.classList.toggle(\n\t\t\t\"hidden\",\n\t\t\t!showInputActionButton || this.toolbar?.isEmpty() === true,\n\t\t);\n\n\t\tif (this.shouldFocusAfterLayout) {\n\t\t\tthis.shouldFocusAfterLayout = false;\n\t\t\tthis.focus();\n\t\t}\n\t}\n\n\tfocus(): void {\n\t\tif (this.lastLayoutWasTrash) {\n\t\t\tthis.lastLayoutWasTrash = false;\n\t\t\tthis.shouldFocusAfterLayout = true;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.inputEditor.focus();\n\t\tthis.element.classList.add(\"synthetic-focus\");\n\t}\n\n\thasFocus(): boolean {\n\t\treturn this.inputEditor.hasTextFocus();\n\t}\n\n\tprivate onDidChangeEditorOptions(): void {\n\t\tthis.inputEditor.updateOptions(\n\t\t\tthis.inputEditorOptions.getEditorOptions(),\n\t\t);\n\t}\n\n\tprivate renderValidation(): void {\n\t\tthis.clearValidation();\n\n\t\tthis.element.classList.toggle(\n\t\t\t\"validation-info\",\n\t\t\tthis.validation?.type === InputValidationType.Information,\n\t\t);\n\t\tthis.element.classList.toggle(\n\t\t\t\"validation-warning\",\n\t\t\tthis.validation?.type === InputValidationType.Warning,\n\t\t);\n\t\tthis.element.classList.toggle(\n\t\t\t\"validation-error\",\n\t\t\tthis.validation?.type === InputValidationType.Error,\n\t\t);\n\n\t\tif (!this.validation || !this.inputEditor.hasTextFocus()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\n\t\tthis.validationContextView = this.contextViewService.showContextView({\n\t\t\tgetAnchor: () => this.element,\n\t\t\trender: (container) => {\n\t\t\t\tthis.element.style.borderBottomLeftRadius = \"0\";\n\t\t\t\tthis.element.style.borderBottomRightRadius = \"0\";\n\n\t\t\t\tconst validationContainer = append(\n\t\t\t\t\tcontainer,\n\t\t\t\t\t$(\".scm-editor-validation-container\"),\n\t\t\t\t);\n\t\t\t\tvalidationContainer.classList.toggle(\n\t\t\t\t\t\"validation-info\",\n\t\t\t\t\tthis.validation!.type === InputValidationType.Information,\n\t\t\t\t);\n\t\t\t\tvalidationContainer.classList.toggle(\n\t\t\t\t\t\"validation-warning\",\n\t\t\t\t\tthis.validation!.type === InputValidationType.Warning,\n\t\t\t\t);\n\t\t\t\tvalidationContainer.classList.toggle(\n\t\t\t\t\t\"validation-error\",\n\t\t\t\t\tthis.validation!.type === InputValidationType.Error,\n\t\t\t\t);\n\t\t\t\tvalidationContainer.style.width = `${this.element.clientWidth + 2}px`;\n\t\t\t\tconst element = append(\n\t\t\t\t\tvalidationContainer,\n\t\t\t\t\t$(\".scm-editor-validation\"),\n\t\t\t\t);\n\n\t\t\t\tconst message = this.validation!.message;\n\t\t\t\tif (typeof message === \"string\") {\n\t\t\t\t\telement.textContent = message;\n\t\t\t\t} else {\n\t\t\t\t\tconst tracker = trackFocus(element);\n\t\t\t\t\tdisposables.add(tracker);\n\t\t\t\t\tdisposables.add(\n\t\t\t\t\t\ttracker.onDidFocus(\n\t\t\t\t\t\t\t() => (this.validationHasFocus = true),\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tdisposables.add(\n\t\t\t\t\t\ttracker.onDidBlur(() => {\n\t\t\t\t\t\t\tthis.validationHasFocus = false;\n\t\t\t\t\t\t\tthis.element.style.borderBottomLeftRadius = \"2px\";\n\t\t\t\t\t\t\tthis.element.style.borderBottomRightRadius = \"2px\";\n\t\t\t\t\t\t\tthis.contextViewService.hideContextView();\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\n\t\t\t\t\tconst renderer = disposables.add(\n\t\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\t\tMarkdownRenderer,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tconst renderedMarkdown = renderer.render(message, {\n\t\t\t\t\t\tactionHandler: {\n\t\t\t\t\t\t\tcallback: (link) => {\n\t\t\t\t\t\t\t\topenLinkFromMarkdown(\n\t\t\t\t\t\t\t\t\tthis.openerService,\n\t\t\t\t\t\t\t\t\tlink,\n\t\t\t\t\t\t\t\t\tmessage.isTrusted,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tthis.element.style.borderBottomLeftRadius =\n\t\t\t\t\t\t\t\t\t\"2px\";\n\t\t\t\t\t\t\t\tthis.element.style.borderBottomRightRadius =\n\t\t\t\t\t\t\t\t\t\"2px\";\n\t\t\t\t\t\t\t\tthis.contextViewService.hideContextView();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdisposables: disposables,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\tdisposables.add(renderedMarkdown);\n\t\t\t\t\telement.appendChild(renderedMarkdown.element);\n\t\t\t\t}\n\t\t\t\tconst actionsContainer = append(\n\t\t\t\t\tvalidationContainer,\n\t\t\t\t\t$(\".scm-editor-validation-actions\"),\n\t\t\t\t);\n\t\t\t\tconst actionbar = new ActionBar(actionsContainer);\n\t\t\t\tconst action = new Action(\n\t\t\t\t\t\"scmInputWidget.validationMessage.close\",\n\t\t\t\t\tlocalize(\"label.close\", \"Close\"),\n\t\t\t\t\tThemeIcon.asClassName(Codicon.close),\n\t\t\t\t\ttrue,\n\t\t\t\t\t() => {\n\t\t\t\t\t\tthis.contextViewService.hideContextView();\n\t\t\t\t\t\tthis.element.style.borderBottomLeftRadius = \"2px\";\n\t\t\t\t\t\tthis.element.style.borderBottomRightRadius = \"2px\";\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t\tdisposables.add(actionbar);\n\t\t\t\tactionbar.push(action, { icon: true, label: false });\n\n\t\t\t\treturn Disposable.None;\n\t\t\t},\n\t\t\tonHide: () => {\n\t\t\t\tthis.validationHasFocus = false;\n\t\t\t\tthis.element.style.borderBottomLeftRadius = \"2px\";\n\t\t\t\tthis.element.style.borderBottomRightRadius = \"2px\";\n\t\t\t\tdisposables.dispose();\n\t\t\t},\n\t\t\tanchorAlignment: AnchorAlignment.LEFT,\n\t\t});\n\t}\n\n\tprivate getToolbarWidth(): number {\n\t\tconst showInputActionButton =\n\t\t\tthis.configurationService.getValue<boolean>(\n\t\t\t\t\"scm.showInputActionButton\",\n\t\t\t);\n\t\tif (\n\t\t\t!this.toolbar ||\n\t\t\t!showInputActionButton ||\n\t\t\tthis.toolbar?.isEmpty() === true\n\t\t) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn this.toolbar.dropdownActions.length === 0\n\t\t\t? 26 /* 22px action + 4px margin */\n\t\t\t: 39 /* 35px action + 4px margin */;\n\t}\n\n\tclearValidation(): void {\n\t\tthis.validationContextView?.close();\n\t\tthis.validationContextView = undefined;\n\t\tthis.validationHasFocus = false;\n\t}\n\n\tdispose(): void {\n\t\tthis.input = undefined;\n\t\tthis.repositoryDisposables.dispose();\n\t\tthis.clearValidation();\n\t\tthis.disposables.dispose();\n\t}\n}\n\nexport class SCMViewPane extends ViewPane {\n\tprivate _onDidLayout: Emitter<void>;\n\tprivate layoutCache: ISCMLayout;\n\n\tprivate treeScrollTop: number | undefined;\n\tprivate treeContainer!: HTMLElement;\n\tprivate tree!: WorkbenchCompressibleAsyncDataTree<\n\t\tISCMViewService,\n\t\tTreeElement,\n\t\tFuzzyScore\n\t>;\n\n\tprivate listLabels!: ResourceLabels;\n\tprivate inputRenderer!: InputRenderer;\n\tprivate actionButtonRenderer!: ActionButtonRenderer;\n\n\tprivate _viewMode: ViewMode;\n\tget viewMode(): ViewMode {\n\t\treturn this._viewMode;\n\t}\n\tset viewMode(mode: ViewMode) {\n\t\tif (this._viewMode === mode) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._viewMode = mode;\n\n\t\t// Update sort key based on view mode\n\t\tthis.viewSortKey = this.getViewSortKey();\n\n\t\tthis.updateChildren();\n\t\tthis.onDidActiveEditorChange();\n\t\tthis._onDidChangeViewMode.fire(mode);\n\t\tthis.viewModeContextKey.set(mode);\n\n\t\tthis.updateIndentStyles(this.themeService.getFileIconTheme());\n\t\tthis.storageService.store(\n\t\t\t`scm.viewMode`,\n\t\t\tmode,\n\t\t\tStorageScope.WORKSPACE,\n\t\t\tStorageTarget.USER,\n\t\t);\n\t}\n\n\tprivate readonly _onDidChangeViewMode = new Emitter<ViewMode>();\n\treadonly onDidChangeViewMode = this._onDidChangeViewMode.event;\n\n\tprivate _viewSortKey: ViewSortKey;\n\tget viewSortKey(): ViewSortKey {\n\t\treturn this._viewSortKey;\n\t}\n\tset viewSortKey(sortKey: ViewSortKey) {\n\t\tif (this._viewSortKey === sortKey) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._viewSortKey = sortKey;\n\n\t\tthis.updateChildren();\n\t\tthis.viewSortKeyContextKey.set(sortKey);\n\t\tthis._onDidChangeViewSortKey.fire(sortKey);\n\n\t\tif (this._viewMode === ViewMode.List) {\n\t\t\tthis.storageService.store(\n\t\t\t\t`scm.viewSortKey`,\n\t\t\t\tsortKey,\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\tStorageTarget.USER,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate readonly _onDidChangeViewSortKey = new Emitter<ViewSortKey>();\n\treadonly onDidChangeViewSortKey = this._onDidChangeViewSortKey.event;\n\n\tprivate readonly items = new DisposableMap<ISCMRepository, IDisposable>();\n\tprivate readonly visibilityDisposables = new DisposableStore();\n\n\tprivate readonly treeOperationSequencer = new Sequencer();\n\tprivate readonly revealResourceThrottler = new Throttler();\n\tprivate readonly updateChildrenThrottler = new Throttler();\n\n\tprivate viewModeContextKey: IContextKey<ViewMode>;\n\tprivate viewSortKeyContextKey: IContextKey<ViewSortKey>;\n\tprivate areAllRepositoriesCollapsedContextKey: IContextKey<boolean>;\n\tprivate isAnyRepositoryCollapsibleContextKey: IContextKey<boolean>;\n\n\tprivate scmProviderContextKey: IContextKey<string | undefined>;\n\tprivate scmProviderRootUriContextKey: IContextKey<string | undefined>;\n\tprivate scmProviderHasRootUriContextKey: IContextKey<boolean>;\n\n\tprivate readonly disposables = new DisposableStore();\n\n\tconstructor(\n\t\toptions: IViewPaneOptions,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@ISCMService private readonly scmService: ISCMService,\n\t\t@ISCMViewService private readonly scmViewService: ISCMViewService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IHoverService hoverService: IHoverService,\n\t) {\n\t\tsuper({ ...options, titleMenuId: MenuId.SCMTitle }, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService, hoverService);\n\n\t\t// View mode and sort key\n\t\tthis._viewMode = this.getViewMode();\n\t\tthis._viewSortKey = this.getViewSortKey();\n\n\t\t// Context Keys\n\t\tthis.viewModeContextKey = ContextKeys.SCMViewMode.bindTo(contextKeyService);\n\t\tthis.viewModeContextKey.set(this._viewMode);\n\t\tthis.viewSortKeyContextKey = ContextKeys.SCMViewSortKey.bindTo(contextKeyService);\n\t\tthis.viewSortKeyContextKey.set(this.viewSortKey);\n\t\tthis.areAllRepositoriesCollapsedContextKey = ContextKeys.SCMViewAreAllRepositoriesCollapsed.bindTo(contextKeyService);\n\t\tthis.isAnyRepositoryCollapsibleContextKey = ContextKeys.SCMViewIsAnyRepositoryCollapsible.bindTo(contextKeyService);\n\t\tthis.scmProviderContextKey = ContextKeys.SCMProvider.bindTo(contextKeyService);\n\t\tthis.scmProviderRootUriContextKey = ContextKeys.SCMProviderRootUri.bindTo(contextKeyService);\n\t\tthis.scmProviderHasRootUriContextKey = ContextKeys.SCMProviderHasRootUri.bindTo(contextKeyService);\n\n\t\tthis._onDidLayout = new Emitter<void>();\n\t\tthis.layoutCache = { height: undefined, width: undefined, onDidChange: this._onDidLayout.event };\n\n\t\tthis.storageService.onDidChangeValue(StorageScope.WORKSPACE, undefined, this.disposables)(e => {\n\t\t\tswitch (e.key) {\n\t\t\t\tcase 'scm.viewMode':\n\t\t\t\t\tthis.viewMode = this.getViewMode();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'scm.viewSortKey':\n\t\t\t\t\tthis.viewSortKey = this.getViewSortKey();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}, this, this.disposables);\n\n\t\tthis.storageService.onWillSaveState(e => {\n\t\t\tthis.viewMode = this.getViewMode();\n\t\t\tthis.viewSortKey = this.getViewSortKey();\n\n\t\t\tthis.storeTreeViewState();\n\t\t}, this, this.disposables);\n\n\t\tEvent.any(this.scmService.onDidAddRepository, this.scmService.onDidRemoveRepository)(() => this._onDidChangeViewWelcomeState.fire(), this, this.disposables);\n\n\t\tthis.disposables.add(this.revealResourceThrottler);\n\t\tthis.disposables.add(this.updateChildrenThrottler);\n\t}\n\n\tprotected override layoutBody(\n\t\theight: number | undefined = this.layoutCache.height,\n\t\twidth: number | undefined = this.layoutCache.width,\n\t): void {\n\t\tif (height === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (width !== undefined) {\n\t\t\tsuper.layoutBody(height, width);\n\t\t}\n\n\t\tthis.layoutCache.height = height;\n\t\tthis.layoutCache.width = width;\n\t\tthis._onDidLayout.fire();\n\n\t\tthis.treeContainer.style.height = `${height}px`;\n\t\tthis.tree.layout(height, width);\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\t// Tree\n\t\tthis.treeContainer = append(container, $(\".scm-view.show-file-icons\"));\n\t\tthis.treeContainer.classList.add(\"file-icon-themable-tree\");\n\t\tthis.treeContainer.classList.add(\"show-file-icons\");\n\n\t\tconst updateActionsVisibility = () =>\n\t\t\tthis.treeContainer.classList.toggle(\n\t\t\t\t\"show-actions\",\n\t\t\t\tthis.configurationService.getValue<boolean>(\n\t\t\t\t\t\"scm.alwaysShowActions\",\n\t\t\t\t),\n\t\t\t);\n\t\tEvent.filter(\n\t\t\tthis.configurationService.onDidChangeConfiguration,\n\t\t\t(e) => e.affectsConfiguration(\"scm.alwaysShowActions\"),\n\t\t\tthis.disposables,\n\t\t)(updateActionsVisibility, this, this.disposables);\n\t\tupdateActionsVisibility();\n\n\t\tconst updateProviderCountVisibility = () => {\n\t\t\tconst value = this.configurationService.getValue<\n\t\t\t\t\"hidden\" | \"auto\" | \"visible\"\n\t\t\t>(\"scm.providerCountBadge\");\n\t\t\tthis.treeContainer.classList.toggle(\n\t\t\t\t\"hide-provider-counts\",\n\t\t\t\tvalue === \"hidden\",\n\t\t\t);\n\t\t\tthis.treeContainer.classList.toggle(\n\t\t\t\t\"auto-provider-counts\",\n\t\t\t\tvalue === \"auto\",\n\t\t\t);\n\t\t};\n\t\tEvent.filter(\n\t\t\tthis.configurationService.onDidChangeConfiguration,\n\t\t\t(e) => e.affectsConfiguration(\"scm.providerCountBadge\"),\n\t\t\tthis.disposables,\n\t\t)(updateProviderCountVisibility, this, this.disposables);\n\t\tupdateProviderCountVisibility();\n\n\t\tconst viewState = this.loadTreeViewState();\n\t\tthis.createTree(this.treeContainer, viewState);\n\n\t\tthis.onDidChangeBodyVisibility(\n\t\t\tasync (visible) => {\n\t\t\t\tif (visible) {\n\t\t\t\t\tthis.treeOperationSequencer.queue(async () => {\n\t\t\t\t\t\tawait this.tree.setInput(\n\t\t\t\t\t\t\tthis.scmViewService,\n\t\t\t\t\t\t\tviewState,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tEvent.filter(\n\t\t\t\t\t\t\tthis.configurationService.onDidChangeConfiguration,\n\t\t\t\t\t\t\t(e) =>\n\t\t\t\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\t\t\t\t\"scm.alwaysShowRepositories\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tthis.visibilityDisposables,\n\t\t\t\t\t\t)(\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tthis.updateActions();\n\t\t\t\t\t\t\t\tthis.updateChildren();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tthis.visibilityDisposables,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tEvent.filter(\n\t\t\t\t\t\t\tthis.configurationService.onDidChangeConfiguration,\n\t\t\t\t\t\t\t(e) =>\n\t\t\t\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\t\t\t\t\"scm.inputMinLineCount\",\n\t\t\t\t\t\t\t\t) ||\n\t\t\t\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\t\t\t\t\"scm.inputMaxLineCount\",\n\t\t\t\t\t\t\t\t) ||\n\t\t\t\t\t\t\t\te.affectsConfiguration(\"scm.showActionButton\"),\n\t\t\t\t\t\t\tthis.visibilityDisposables,\n\t\t\t\t\t\t)(\n\t\t\t\t\t\t\t() => this.updateChildren(),\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tthis.visibilityDisposables,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Add visible repositories\n\t\t\t\t\t\tthis.editorService.onDidActiveEditorChange(\n\t\t\t\t\t\t\tthis.onDidActiveEditorChange,\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tthis.visibilityDisposables,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.scmViewService.onDidChangeVisibleRepositories(\n\t\t\t\t\t\t\tthis.onDidChangeVisibleRepositories,\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tthis.visibilityDisposables,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.onDidChangeVisibleRepositories({\n\t\t\t\t\t\t\tadded: this.scmViewService.visibleRepositories,\n\t\t\t\t\t\t\tremoved: Iterable.empty(),\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Restore scroll position\n\t\t\t\t\t\tif (typeof this.treeScrollTop === \"number\") {\n\t\t\t\t\t\t\tthis.tree.scrollTop = this.treeScrollTop;\n\t\t\t\t\t\t\tthis.treeScrollTop = undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.updateRepositoryCollapseAllContextKeys();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.visibilityDisposables.clear();\n\t\t\t\t\tthis.onDidChangeVisibleRepositories({\n\t\t\t\t\t\tadded: Iterable.empty(),\n\t\t\t\t\t\tremoved: [...this.items.keys()],\n\t\t\t\t\t});\n\t\t\t\t\tthis.treeScrollTop = this.tree.scrollTop;\n\n\t\t\t\t\tthis.updateRepositoryCollapseAllContextKeys();\n\t\t\t\t}\n\t\t\t},\n\t\t\tthis,\n\t\t\tthis.disposables,\n\t\t);\n\n\t\tthis.disposables.add(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tRepositoryVisibilityActionController,\n\t\t\t),\n\t\t);\n\n\t\tthis.themeService.onDidFileIconThemeChange(\n\t\t\tthis.updateIndentStyles,\n\t\t\tthis,\n\t\t\tthis.disposables,\n\t\t);\n\t\tthis.updateIndentStyles(this.themeService.getFileIconTheme());\n\t}\n\n\tprivate createTree(\n\t\tcontainer: HTMLElement,\n\t\tviewState?: IAsyncDataTreeViewState,\n\t): void {\n\t\tconst overflowWidgetsDomNode = $(\n\t\t\t\".scm-overflow-widgets-container.monaco-editor\",\n\t\t);\n\n\t\tthis.inputRenderer = this.instantiationService.createInstance(\n\t\t\tInputRenderer,\n\t\t\tthis.layoutCache,\n\t\t\toverflowWidgetsDomNode,\n\t\t\t(input, height) => {\n\t\t\t\ttry {\n\t\t\t\t\t// Attempt to update the input element height. There is an\n\t\t\t\t\t// edge case where the input has already been disposed and\n\t\t\t\t\t// updating the height would fail.\n\t\t\t\t\tthis.tree.updateElementHeight(input, height);\n\t\t\t\t} catch {}\n\t\t\t},\n\t\t);\n\t\tthis.actionButtonRenderer =\n\t\t\tthis.instantiationService.createInstance(ActionButtonRenderer);\n\n\t\tthis.listLabels = this.instantiationService.createInstance(\n\t\t\tResourceLabels,\n\t\t\t{ onDidChangeVisibility: this.onDidChangeBodyVisibility },\n\t\t);\n\t\tthis.disposables.add(this.listLabels);\n\n\t\tconst resourceActionRunner = new RepositoryPaneActionRunner(() =>\n\t\t\tthis.getSelectedResources(),\n\t\t);\n\t\tresourceActionRunner.onWillRun(\n\t\t\t() => this.tree.domFocus(),\n\t\t\tthis,\n\t\t\tthis.disposables,\n\t\t);\n\t\tthis.disposables.add(resourceActionRunner);\n\n\t\tconst treeDataSource = this.instantiationService.createInstance(\n\t\t\tSCMTreeDataSource,\n\t\t\t() => this.viewMode,\n\t\t);\n\t\tthis.disposables.add(treeDataSource);\n\n\t\tconst compressionEnabled = observableConfigValue(\n\t\t\t\"scm.compactFolders\",\n\t\t\ttrue,\n\t\t\tthis.configurationService,\n\t\t);\n\n\t\tthis.tree = this.instantiationService.createInstance(\n\t\t\tWorkbenchCompressibleAsyncDataTree,\n\t\t\t\"SCM Tree Repo\",\n\t\t\tcontainer,\n\t\t\tnew ListDelegate(this.inputRenderer),\n\t\t\tnew SCMTreeCompressionDelegate(),\n\t\t\t[\n\t\t\t\tthis.inputRenderer,\n\t\t\t\tthis.actionButtonRenderer,\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tRepositoryRenderer,\n\t\t\t\t\tMenuId.SCMTitle,\n\t\t\t\t\tgetActionViewItemProvider(this.instantiationService),\n\t\t\t\t),\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tResourceGroupRenderer,\n\t\t\t\t\tgetActionViewItemProvider(this.instantiationService),\n\t\t\t\t),\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tResourceRenderer,\n\t\t\t\t\t() => this.viewMode,\n\t\t\t\t\tthis.listLabels,\n\t\t\t\t\tgetActionViewItemProvider(this.instantiationService),\n\t\t\t\t\tresourceActionRunner,\n\t\t\t\t),\n\t\t\t],\n\t\t\ttreeDataSource,\n\t\t\t{\n\t\t\t\thorizontalScrolling: false,\n\t\t\t\tsetRowLineHeight: false,\n\t\t\t\ttransformOptimization: false,\n\t\t\t\tfilter: new SCMTreeFilter(),\n\t\t\t\tdnd: new SCMTreeDragAndDrop(this.instantiationService),\n\t\t\t\tidentityProvider: new SCMResourceIdentityProvider(),\n\t\t\t\tsorter: new SCMTreeSorter(\n\t\t\t\t\t() => this.viewMode,\n\t\t\t\t\t() => this.viewSortKey,\n\t\t\t\t),\n\t\t\t\tkeyboardNavigationLabelProvider:\n\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\tSCMTreeKeyboardNavigationLabelProvider,\n\t\t\t\t\t\t() => this.viewMode,\n\t\t\t\t\t),\n\t\t\t\toverrideStyles:\n\t\t\t\t\tthis.getLocationBasedColors().listOverrideStyles,\n\t\t\t\tcompressionEnabled: compressionEnabled.get(),\n\t\t\t\tcollapseByDefault: (e: unknown) => {\n\t\t\t\t\t// Repository, Resource Group, Resource Folder (Tree)\n\t\t\t\t\tif (\n\t\t\t\t\t\tisSCMRepository(e) ||\n\t\t\t\t\t\tisSCMResourceGroup(e) ||\n\t\t\t\t\t\tisSCMResourceNode(e)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// History Item Group, History Item, or History Item Change\n\t\t\t\t\treturn (\n\t\t\t\t\t\t(viewState?.expanded ?? []).indexOf(\n\t\t\t\t\t\t\tgetSCMResourceId(e as TreeElement),\n\t\t\t\t\t\t) === -1\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\taccessibilityProvider: this.instantiationService.createInstance(\n\t\t\t\t\tSCMAccessibilityProvider,\n\t\t\t\t),\n\t\t\t},\n\t\t) as WorkbenchCompressibleAsyncDataTree<\n\t\t\tISCMViewService,\n\t\t\tTreeElement,\n\t\t\tFuzzyScore\n\t\t>;\n\n\t\tthis.disposables.add(this.tree);\n\n\t\tthis.tree.onDidOpen(this.open, this, this.disposables);\n\t\tthis.tree.onContextMenu(this.onListContextMenu, this, this.disposables);\n\t\tthis.tree.onDidScroll(\n\t\t\tthis.inputRenderer.clearValidation,\n\t\t\tthis.inputRenderer,\n\t\t\tthis.disposables,\n\t\t);\n\t\tEvent.filter(\n\t\t\tthis.tree.onDidChangeCollapseState,\n\t\t\t(e) => isSCMRepository(e.node.element?.element),\n\t\t\tthis.disposables,\n\t\t)(this.updateRepositoryCollapseAllContextKeys, this, this.disposables);\n\n\t\tthis.disposables.add(\n\t\t\tautorun((reader) => {\n\t\t\t\tthis.tree.updateOptions({\n\t\t\t\t\tcompressionEnabled: compressionEnabled.read(reader),\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\n\t\tappend(container, overflowWidgetsDomNode);\n\t}\n\n\tprivate async open(e: IOpenEvent<TreeElement | undefined>): Promise<void> {\n\t\tif (!e.element) {\n\t\t\treturn;\n\t\t} else if (isSCMRepository(e.element)) {\n\t\t\tthis.scmViewService.focus(e.element);\n\t\t\treturn;\n\t\t} else if (isSCMInput(e.element)) {\n\t\t\tthis.scmViewService.focus(e.element.repository);\n\n\t\t\tconst widget = this.inputRenderer.getRenderedInputWidget(e.element);\n\n\t\t\tif (widget) {\n\t\t\t\twidget.focus();\n\t\t\t\tthis.tree.setFocus([], e.browserEvent);\n\n\t\t\t\tconst selection = this.tree.getSelection();\n\n\t\t\t\tif (selection.length === 1 && selection[0] === e.element) {\n\t\t\t\t\tsetTimeout(() => this.tree.setSelection([]));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t} else if (isSCMActionButton(e.element)) {\n\t\t\tthis.scmViewService.focus(e.element.repository);\n\n\t\t\t// Focus the action button\n\t\t\tthis.actionButtonRenderer.focusActionButton(e.element);\n\t\t\tthis.tree.setFocus([], e.browserEvent);\n\n\t\t\treturn;\n\t\t} else if (isSCMResourceGroup(e.element)) {\n\t\t\tconst provider = e.element.provider;\n\t\t\tconst repository = Iterable.find(\n\t\t\t\tthis.scmService.repositories,\n\t\t\t\t(r) => r.provider === provider,\n\t\t\t);\n\t\t\tif (repository) {\n\t\t\t\tthis.scmViewService.focus(repository);\n\t\t\t}\n\t\t\treturn;\n\t\t} else if (isSCMResource(e.element)) {\n\t\t\tif (\n\t\t\t\te.element.command?.id === API_OPEN_EDITOR_COMMAND_ID ||\n\t\t\t\te.element.command?.id === API_OPEN_DIFF_EDITOR_COMMAND_ID\n\t\t\t) {\n\t\t\t\tif (\n\t\t\t\t\tisPointerEvent(e.browserEvent) &&\n\t\t\t\t\te.browserEvent.button === 1\n\t\t\t\t) {\n\t\t\t\t\tconst resourceGroup = e.element.resourceGroup;\n\t\t\t\t\tconst title = `${resourceGroup.provider.label}: ${resourceGroup.label}`;\n\t\t\t\t\tawait OpenScmGroupAction.openMultiFileDiffEditor(\n\t\t\t\t\t\tthis.editorService,\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t\tresourceGroup.provider.rootUri,\n\t\t\t\t\t\tresourceGroup.id,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...e.editorOptions,\n\t\t\t\t\t\t\tviewState: {\n\t\t\t\t\t\t\t\trevealData: {\n\t\t\t\t\t\t\t\t\tresource: {\n\t\t\t\t\t\t\t\t\t\toriginal:\n\t\t\t\t\t\t\t\t\t\t\te.element\n\t\t\t\t\t\t\t\t\t\t\t\t.multiDiffEditorOriginalUri,\n\t\t\t\t\t\t\t\t\t\tmodified:\n\t\t\t\t\t\t\t\t\t\t\te.element\n\t\t\t\t\t\t\t\t\t\t\t\t.multiDiffEditorModifiedUri,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpreserveFocus: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.commandService.executeCommand(\n\t\t\t\t\t\te.element.command.id,\n\t\t\t\t\t\t...(e.element.command.arguments || []),\n\t\t\t\t\t\te,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tawait e.element.open(!!e.editorOptions.preserveFocus);\n\n\t\t\t\tif (e.editorOptions.pinned) {\n\t\t\t\t\tconst activeEditorPane =\n\t\t\t\t\t\tthis.editorService.activeEditorPane;\n\n\t\t\t\t\tactiveEditorPane?.group.pinEditor(activeEditorPane.input);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst provider = e.element.resourceGroup.provider;\n\t\t\tconst repository = Iterable.find(\n\t\t\t\tthis.scmService.repositories,\n\t\t\t\t(r) => r.provider === provider,\n\t\t\t);\n\n\t\t\tif (repository) {\n\t\t\t\tthis.scmViewService.focus(repository);\n\t\t\t}\n\t\t} else if (isSCMResourceNode(e.element)) {\n\t\t\tconst provider = e.element.context.provider;\n\t\t\tconst repository = Iterable.find(\n\t\t\t\tthis.scmService.repositories,\n\t\t\t\t(r) => r.provider === provider,\n\t\t\t);\n\t\t\tif (repository) {\n\t\t\t\tthis.scmViewService.focus(repository);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t}\n\n\tprivate onDidActiveEditorChange(): void {\n\t\tif (!this.configurationService.getValue<boolean>(\"scm.autoReveal\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst uri = EditorResourceAccessor.getOriginalUri(\n\t\t\tthis.editorService.activeEditor,\n\t\t\t{ supportSideBySide: SideBySideEditor.PRIMARY },\n\t\t);\n\n\t\tif (!uri) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not set focus/selection when the resource is already focused and selected\n\t\tif (\n\t\t\tthis.tree\n\t\t\t\t.getFocus()\n\t\t\t\t.some(\n\t\t\t\t\t(e) =>\n\t\t\t\t\t\tisSCMResource(e) &&\n\t\t\t\t\t\tthis.uriIdentityService.extUri.isEqual(\n\t\t\t\t\t\t\te.sourceUri,\n\t\t\t\t\t\t\turi,\n\t\t\t\t\t\t),\n\t\t\t\t) &&\n\t\t\tthis.tree\n\t\t\t\t.getSelection()\n\t\t\t\t.some(\n\t\t\t\t\t(e) =>\n\t\t\t\t\t\tisSCMResource(e) &&\n\t\t\t\t\t\tthis.uriIdentityService.extUri.isEqual(\n\t\t\t\t\t\t\te.sourceUri,\n\t\t\t\t\t\t\turi,\n\t\t\t\t\t\t),\n\t\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.revealResourceThrottler.queue(() =>\n\t\t\tthis.treeOperationSequencer.queue(async () => {\n\t\t\t\tfor (const repository of this.scmViewService\n\t\t\t\t\t.visibleRepositories) {\n\t\t\t\t\tconst item = this.items.get(repository);\n\n\t\t\t\t\tif (!item) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// go backwards from last group\n\t\t\t\t\tfor (\n\t\t\t\t\t\tlet j = repository.provider.groups.length - 1;\n\t\t\t\t\t\tj >= 0;\n\t\t\t\t\t\tj--\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst groupItem = repository.provider.groups[j];\n\t\t\t\t\t\tconst resource =\n\t\t\t\t\t\t\tthis.viewMode === ViewMode.Tree\n\t\t\t\t\t\t\t\t? groupItem.resourceTree.getNode(uri)?.element\n\t\t\t\t\t\t\t\t: groupItem.resources.find((r) =>\n\t\t\t\t\t\t\t\t\t\tthis.uriIdentityService.extUri.isEqual(\n\t\t\t\t\t\t\t\t\t\t\tr.sourceUri,\n\t\t\t\t\t\t\t\t\t\t\turi,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (resource) {\n\t\t\t\t\t\t\tawait this.tree.expandTo(resource);\n\t\t\t\t\t\t\tthis.tree.reveal(resource);\n\n\t\t\t\t\t\t\tthis.tree.setSelection([resource]);\n\t\t\t\t\t\t\tthis.tree.setFocus([resource]);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate onDidChangeVisibleRepositories({\n\t\tadded,\n\t\tremoved,\n\t}: ISCMViewVisibleRepositoryChangeEvent): void {\n\t\t// Added repositories\n\t\tfor (const repository of added) {\n\t\t\tconst repositoryDisposables = new DisposableStore();\n\n\t\t\trepositoryDisposables.add(\n\t\t\t\trepository.provider.onDidChange(() =>\n\t\t\t\t\tthis.updateChildren(repository),\n\t\t\t\t),\n\t\t\t);\n\t\t\trepositoryDisposables.add(\n\t\t\t\trepository.input.onDidChangeVisibility(() =>\n\t\t\t\t\tthis.updateChildren(repository),\n\t\t\t\t),\n\t\t\t);\n\t\t\trepositoryDisposables.add(\n\t\t\t\trepository.provider.onDidChangeResourceGroups(() =>\n\t\t\t\t\tthis.updateChildren(repository),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tconst resourceGroupDisposables = repositoryDisposables.add(\n\t\t\t\tnew DisposableMap<ISCMResourceGroup, IDisposable>(),\n\t\t\t);\n\n\t\t\tconst onDidChangeResourceGroups = () => {\n\t\t\t\tfor (const [resourceGroup] of resourceGroupDisposables) {\n\t\t\t\t\tif (!repository.provider.groups.includes(resourceGroup)) {\n\t\t\t\t\t\tresourceGroupDisposables.deleteAndDispose(\n\t\t\t\t\t\t\tresourceGroup,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (const resourceGroup of repository.provider.groups) {\n\t\t\t\t\tif (!resourceGroupDisposables.has(resourceGroup)) {\n\t\t\t\t\t\tconst disposableStore = new DisposableStore();\n\n\t\t\t\t\t\tdisposableStore.add(\n\t\t\t\t\t\t\tresourceGroup.onDidChange(() =>\n\t\t\t\t\t\t\t\tthis.updateChildren(repository),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdisposableStore.add(\n\t\t\t\t\t\t\tresourceGroup.onDidChangeResources(() =>\n\t\t\t\t\t\t\t\tthis.updateChildren(repository),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresourceGroupDisposables.set(\n\t\t\t\t\t\t\tresourceGroup,\n\t\t\t\t\t\t\tdisposableStore,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\trepositoryDisposables.add(\n\t\t\t\trepository.provider.onDidChangeResourceGroups(\n\t\t\t\t\tonDidChangeResourceGroups,\n\t\t\t\t),\n\t\t\t);\n\t\t\tonDidChangeResourceGroups();\n\n\t\t\tthis.items.set(repository, repositoryDisposables);\n\t\t}\n\n\t\t// Removed repositories\n\t\tfor (const repository of removed) {\n\t\t\tthis.items.deleteAndDispose(repository);\n\t\t}\n\n\t\tthis.updateChildren();\n\t\tthis.onDidActiveEditorChange();\n\t}\n\n\tprivate onListContextMenu(\n\t\te: ITreeContextMenuEvent<TreeElement | null>,\n\t): void {\n\t\tif (!e.element) {\n\t\t\tconst menu = this.menuService.getMenuActions(\n\t\t\t\tMenus.ViewSort,\n\t\t\t\tthis.contextKeyService,\n\t\t\t);\n\t\t\tconst actions: IAction[] = [];\n\t\t\tcreateAndFillInContextMenuActions(menu, actions);\n\n\t\t\treturn this.contextMenuService.showContextMenu({\n\t\t\t\tgetAnchor: () => e.anchor,\n\t\t\t\tgetActions: () => actions,\n\t\t\t\tonHide: () => {},\n\t\t\t});\n\t\t}\n\n\t\tconst element = e.element;\n\t\tlet context: any = element;\n\t\tlet actions: IAction[] = [];\n\t\tlet actionRunner: IActionRunner = new RepositoryPaneActionRunner(() =>\n\t\t\tthis.getSelectedResources(),\n\t\t);\n\n\t\tif (isSCMRepository(element)) {\n\t\t\tconst menus = this.scmViewService.menus.getRepositoryMenus(\n\t\t\t\telement.provider,\n\t\t\t);\n\t\t\tconst menu = menus.repositoryContextMenu;\n\t\t\tcontext = element.provider;\n\t\t\tactionRunner = new RepositoryActionRunner(() =>\n\t\t\t\tthis.getSelectedRepositories(),\n\t\t\t);\n\t\t\tactions = collectContextMenuActions(menu);\n\t\t} else if (isSCMInput(element) || isSCMActionButton(element)) {\n\t\t\t// noop\n\t\t} else if (isSCMResourceGroup(element)) {\n\t\t\tconst menus = this.scmViewService.menus.getRepositoryMenus(\n\t\t\t\telement.provider,\n\t\t\t);\n\t\t\tconst menu = menus.getResourceGroupMenu(element);\n\t\t\tactions = collectContextMenuActions(menu);\n\t\t} else if (isSCMResource(element)) {\n\t\t\tconst menus = this.scmViewService.menus.getRepositoryMenus(\n\t\t\t\telement.resourceGroup.provider,\n\t\t\t);\n\t\t\tconst menu = menus.getResourceMenu(element);\n\t\t\tactions = collectContextMenuActions(menu);\n\t\t} else if (isSCMResourceNode(element)) {\n\t\t\tif (element.element) {\n\t\t\t\tconst menus = this.scmViewService.menus.getRepositoryMenus(\n\t\t\t\t\telement.element.resourceGroup.provider,\n\t\t\t\t);\n\t\t\t\tconst menu = menus.getResourceMenu(element.element);\n\t\t\t\tactions = collectContextMenuActions(menu);\n\t\t\t} else {\n\t\t\t\tconst menus = this.scmViewService.menus.getRepositoryMenus(\n\t\t\t\t\telement.context.provider,\n\t\t\t\t);\n\t\t\t\tconst menu = menus.getResourceFolderMenu(element.context);\n\t\t\t\tactions = collectContextMenuActions(menu);\n\t\t\t}\n\t\t}\n\n\t\tactionRunner.onWillRun(() => this.tree.domFocus());\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => e.anchor,\n\t\t\tgetActions: () => actions,\n\t\t\tgetActionsContext: () => context,\n\t\t\tactionRunner,\n\t\t});\n\t}\n\n\tprivate getSelectedRepositories(): ISCMRepository[] {\n\t\tconst focusedRepositories = this.tree\n\t\t\t.getFocus()\n\t\t\t.filter((r) => !!r && isSCMRepository(r))! as ISCMRepository[];\n\t\tconst selectedRepositories = this.tree\n\t\t\t.getSelection()\n\t\t\t.filter((r) => !!r && isSCMRepository(r))! as ISCMRepository[];\n\n\t\treturn Array.from(\n\t\t\tnew Set<ISCMRepository>([\n\t\t\t\t...focusedRepositories,\n\t\t\t\t...selectedRepositories,\n\t\t\t]),\n\t\t);\n\t}\n\n\tprivate getSelectedResources(): (\n\t\t| ISCMResource\n\t\t| IResourceNode<ISCMResource, ISCMResourceGroup>\n\t)[] {\n\t\treturn this.tree\n\t\t\t.getSelection()\n\t\t\t.filter((r) => !!r && !isSCMResourceGroup(r))! as any;\n\t}\n\n\tprivate getViewMode(): ViewMode {\n\t\tlet mode =\n\t\t\tthis.configurationService.getValue<\"tree\" | \"list\">(\n\t\t\t\t\"scm.defaultViewMode\",\n\t\t\t) === \"list\"\n\t\t\t\t? ViewMode.List\n\t\t\t\t: ViewMode.Tree;\n\t\tconst storageMode = this.storageService.get(\n\t\t\t`scm.viewMode`,\n\t\t\tStorageScope.WORKSPACE,\n\t\t) as ViewMode;\n\t\tif (typeof storageMode === \"string\") {\n\t\t\tmode = storageMode;\n\t\t}\n\n\t\treturn mode;\n\t}\n\n\tprivate getViewSortKey(): ViewSortKey {\n\t\t// Tree\n\t\tif (this._viewMode === ViewMode.Tree) {\n\t\t\treturn ViewSortKey.Path;\n\t\t}\n\n\t\t// List\n\t\tlet viewSortKey: ViewSortKey;\n\t\tconst viewSortKeyString = this.configurationService.getValue<\n\t\t\t\"path\" | \"name\" | \"status\"\n\t\t>(\"scm.defaultViewSortKey\");\n\t\tswitch (viewSortKeyString) {\n\t\t\tcase \"name\":\n\t\t\t\tviewSortKey = ViewSortKey.Name;\n\t\t\t\tbreak;\n\t\t\tcase \"status\":\n\t\t\t\tviewSortKey = ViewSortKey.Status;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tviewSortKey = ViewSortKey.Path;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst storageSortKey = this.storageService.get(\n\t\t\t`scm.viewSortKey`,\n\t\t\tStorageScope.WORKSPACE,\n\t\t) as ViewSortKey;\n\t\tif (typeof storageSortKey === \"string\") {\n\t\t\tviewSortKey = storageSortKey;\n\t\t}\n\n\t\treturn viewSortKey;\n\t}\n\n\tprivate loadTreeViewState(): IAsyncDataTreeViewState | undefined {\n\t\tconst storageViewState = this.storageService.get(\n\t\t\t\"scm.viewState2\",\n\t\t\tStorageScope.WORKSPACE,\n\t\t);\n\t\tif (!storageViewState) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\ttry {\n\t\t\tconst treeViewState = JSON.parse(storageViewState);\n\t\t\treturn treeViewState;\n\t\t} catch {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tprivate storeTreeViewState() {\n\t\tif (this.tree) {\n\t\t\tthis.storageService.store(\n\t\t\t\t\"scm.viewState2\",\n\t\t\t\tJSON.stringify(this.tree.getViewState()),\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\tStorageTarget.MACHINE,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate updateChildren(element?: ISCMRepository) {\n\t\tthis.updateChildrenThrottler.queue(() =>\n\t\t\tthis.treeOperationSequencer.queue(async () => {\n\t\t\t\tconst focusedInput = this.inputRenderer.getFocusedInput();\n\n\t\t\t\tif (element && this.tree.hasNode(element)) {\n\t\t\t\t\t// Refresh specific repository\n\t\t\t\t\tawait this.tree.updateChildren(element);\n\t\t\t\t} else {\n\t\t\t\t\t// Refresh the entire tree\n\t\t\t\t\tawait this.tree.updateChildren(undefined);\n\t\t\t\t}\n\n\t\t\t\tif (focusedInput) {\n\t\t\t\t\tthis.inputRenderer\n\t\t\t\t\t\t.getRenderedInputWidget(focusedInput)\n\t\t\t\t\t\t?.focus();\n\t\t\t\t}\n\n\t\t\t\tthis.updateScmProviderContextKeys();\n\t\t\t\tthis.updateRepositoryCollapseAllContextKeys();\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate updateIndentStyles(theme: IFileIconTheme): void {\n\t\tthis.treeContainer.classList.toggle(\n\t\t\t\"list-view-mode\",\n\t\t\tthis.viewMode === ViewMode.List,\n\t\t);\n\t\tthis.treeContainer.classList.toggle(\n\t\t\t\"tree-view-mode\",\n\t\t\tthis.viewMode === ViewMode.Tree,\n\t\t);\n\t\tthis.treeContainer.classList.toggle(\n\t\t\t\"align-icons-and-twisties\",\n\t\t\t(this.viewMode === ViewMode.List && theme.hasFileIcons) ||\n\t\t\t\t(theme.hasFileIcons && !theme.hasFolderIcons),\n\t\t);\n\t\tthis.treeContainer.classList.toggle(\n\t\t\t\"hide-arrows\",\n\t\t\tthis.viewMode === ViewMode.Tree &&\n\t\t\t\ttheme.hidesExplorerArrows === true,\n\t\t);\n\t}\n\n\tprivate updateScmProviderContextKeys(): void {\n\t\tconst alwaysShowRepositories =\n\t\t\tthis.configurationService.getValue<boolean>(\n\t\t\t\t\"scm.alwaysShowRepositories\",\n\t\t\t);\n\n\t\tif (!alwaysShowRepositories && this.items.size === 1) {\n\t\t\tconst provider = Iterable.first(this.items.keys())!.provider;\n\t\t\tthis.scmProviderContextKey.set(provider.contextValue);\n\t\t\tthis.scmProviderRootUriContextKey.set(provider.rootUri?.toString());\n\t\t\tthis.scmProviderHasRootUriContextKey.set(!!provider.rootUri);\n\t\t} else {\n\t\t\tthis.scmProviderContextKey.set(undefined);\n\t\t\tthis.scmProviderRootUriContextKey.set(undefined);\n\t\t\tthis.scmProviderHasRootUriContextKey.set(false);\n\t\t}\n\t}\n\n\tprivate updateRepositoryCollapseAllContextKeys(): void {\n\t\tif (!this.isBodyVisible() || this.items.size === 1) {\n\t\t\tthis.isAnyRepositoryCollapsibleContextKey.set(false);\n\t\t\tthis.areAllRepositoriesCollapsedContextKey.set(false);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.isAnyRepositoryCollapsibleContextKey.set(\n\t\t\tthis.scmViewService.visibleRepositories.some(\n\t\t\t\t(r) => this.tree.hasNode(r) && this.tree.isCollapsible(r),\n\t\t\t),\n\t\t);\n\t\tthis.areAllRepositoriesCollapsedContextKey.set(\n\t\t\tthis.scmViewService.visibleRepositories.every(\n\t\t\t\t(r) =>\n\t\t\t\t\tthis.tree.hasNode(r) &&\n\t\t\t\t\t(!this.tree.isCollapsible(r) || this.tree.isCollapsed(r)),\n\t\t\t),\n\t\t);\n\t}\n\n\tcollapseAllRepositories(): void {\n\t\tfor (const repository of this.scmViewService.visibleRepositories) {\n\t\t\tif (this.tree.isCollapsible(repository)) {\n\t\t\t\tthis.tree.collapse(repository);\n\t\t\t}\n\t\t}\n\t}\n\n\texpandAllRepositories(): void {\n\t\tfor (const repository of this.scmViewService.visibleRepositories) {\n\t\t\tif (this.tree.isCollapsible(repository)) {\n\t\t\t\tthis.tree.expand(repository);\n\t\t\t}\n\t\t}\n\t}\n\n\tfocusPreviousInput(): void {\n\t\tthis.treeOperationSequencer.queue(() => this.focusInput(-1));\n\t}\n\n\tfocusNextInput(): void {\n\t\tthis.treeOperationSequencer.queue(() => this.focusInput(1));\n\t}\n\n\tprivate async focusInput(delta: number): Promise<void> {\n\t\tif (\n\t\t\t!this.scmViewService.focusedRepository ||\n\t\t\tthis.scmViewService.visibleRepositories.length === 0\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet input = this.scmViewService.focusedRepository.input;\n\t\tconst repositories = this.scmViewService.visibleRepositories;\n\n\t\t// One visible repository and the input is already focused\n\t\tif (\n\t\t\trepositories.length === 1 &&\n\t\t\tthis.inputRenderer.getRenderedInputWidget(input)?.hasFocus() ===\n\t\t\t\ttrue\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Multiple visible repositories and the input already focused\n\t\tif (\n\t\t\trepositories.length > 1 &&\n\t\t\tthis.inputRenderer.getRenderedInputWidget(input)?.hasFocus() ===\n\t\t\t\ttrue\n\t\t) {\n\t\t\tconst focusedRepositoryIndex = repositories.indexOf(\n\t\t\t\tthis.scmViewService.focusedRepository,\n\t\t\t);\n\t\t\tconst newFocusedRepositoryIndex = rot(\n\t\t\t\tfocusedRepositoryIndex + delta,\n\t\t\t\trepositories.length,\n\t\t\t);\n\t\t\tinput = repositories[newFocusedRepositoryIndex].input;\n\t\t}\n\n\t\tawait this.tree.expandTo(input);\n\n\t\tthis.tree.reveal(input);\n\t\tthis.inputRenderer.getRenderedInputWidget(input)?.focus();\n\t}\n\n\tfocusPreviousResourceGroup(): void {\n\t\tthis.treeOperationSequencer.queue(() => this.focusResourceGroup(-1));\n\t}\n\n\tfocusNextResourceGroup(): void {\n\t\tthis.treeOperationSequencer.queue(() => this.focusResourceGroup(1));\n\t}\n\n\tprivate async focusResourceGroup(delta: number): Promise<void> {\n\t\tif (\n\t\t\t!this.scmViewService.focusedRepository ||\n\t\t\tthis.scmViewService.visibleRepositories.length === 0\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst treeHasDomFocus = isActiveElement(this.tree.getHTMLElement());\n\t\tconst resourceGroups =\n\t\t\tthis.scmViewService.focusedRepository.provider.groups;\n\t\tconst focusedResourceGroup = this.tree\n\t\t\t.getFocus()\n\t\t\t.find((e) => isSCMResourceGroup(e));\n\t\tconst focusedResourceGroupIndex =\n\t\t\ttreeHasDomFocus && focusedResourceGroup\n\t\t\t\t? resourceGroups.indexOf(focusedResourceGroup)\n\t\t\t\t: -1;\n\n\t\tlet resourceGroupNext: ISCMResourceGroup | undefined;\n\n\t\tif (focusedResourceGroupIndex === -1) {\n\t\t\t// First visible resource group\n\t\t\tfor (const resourceGroup of resourceGroups) {\n\t\t\t\tif (this.tree.hasNode(resourceGroup)) {\n\t\t\t\t\tresourceGroupNext = resourceGroup;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Next/Previous visible resource group\n\t\t\tlet index = rot(\n\t\t\t\tfocusedResourceGroupIndex + delta,\n\t\t\t\tresourceGroups.length,\n\t\t\t);\n\t\t\twhile (index !== focusedResourceGroupIndex) {\n\t\t\t\tif (this.tree.hasNode(resourceGroups[index])) {\n\t\t\t\t\tresourceGroupNext = resourceGroups[index];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tindex = rot(index + delta, resourceGroups.length);\n\t\t\t}\n\t\t}\n\n\t\tif (resourceGroupNext) {\n\t\t\tawait this.tree.expandTo(resourceGroupNext);\n\t\t\tthis.tree.reveal(resourceGroupNext);\n\n\t\t\tthis.tree.setSelection([resourceGroupNext]);\n\t\t\tthis.tree.setFocus([resourceGroupNext]);\n\t\t\tthis.tree.domFocus();\n\t\t}\n\t}\n\n\toverride shouldShowWelcome(): boolean {\n\t\treturn this.scmService.repositoryCount === 0;\n\t}\n\n\toverride getActionsContext(): unknown {\n\t\treturn this.scmViewService.visibleRepositories.length === 1\n\t\t\t? this.scmViewService.visibleRepositories[0].provider\n\t\t\t: undefined;\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\n\t\tthis.treeOperationSequencer.queue(() => {\n\t\t\treturn new Promise<void>((resolve) => {\n\t\t\t\tif (this.isExpanded()) {\n\t\t\t\t\tif (this.tree.getFocus().length === 0) {\n\t\t\t\t\t\tfor (const repository of this.scmViewService\n\t\t\t\t\t\t\t.visibleRepositories) {\n\t\t\t\t\t\t\tconst widget =\n\t\t\t\t\t\t\t\tthis.inputRenderer.getRenderedInputWidget(\n\t\t\t\t\t\t\t\t\trepository.input,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (widget) {\n\t\t\t\t\t\t\t\twidget.focus();\n\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.tree.domFocus();\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\toverride dispose(): void {\n\t\tthis.visibilityDisposables.dispose();\n\t\tthis.disposables.dispose();\n\t\tthis.items.dispose();\n\t\tsuper.dispose();\n\t}\n}\n\nclass SCMTreeDataSource\n\textends Disposable\n\timplements IAsyncDataSource<ISCMViewService, TreeElement>\n{\n\tconstructor(\n\t\tprivate readonly viewMode: () => ViewMode,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ISCMViewService private readonly scmViewService: ISCMViewService\n\t) {\n\t\tsuper();\n\t}\n\n\tasync getChildren(\n\t\tinputOrElement: ISCMViewService | TreeElement,\n\t): Promise<Iterable<TreeElement>> {\n\t\tconst repositoryCount = this.scmViewService.visibleRepositories.length;\n\n\t\tconst showActionButton =\n\t\t\tthis.configurationService.getValue<boolean>(\n\t\t\t\t\"scm.showActionButton\",\n\t\t\t) === true;\n\t\tconst alwaysShowRepositories =\n\t\t\tthis.configurationService.getValue<boolean>(\n\t\t\t\t\"scm.alwaysShowRepositories\",\n\t\t\t) === true;\n\n\t\tif (\n\t\t\tisSCMViewService(inputOrElement) &&\n\t\t\t(repositoryCount > 1 || alwaysShowRepositories)\n\t\t) {\n\t\t\treturn this.scmViewService.visibleRepositories;\n\t\t} else if (\n\t\t\t(isSCMViewService(inputOrElement) &&\n\t\t\t\trepositoryCount === 1 &&\n\t\t\t\t!alwaysShowRepositories) ||\n\t\t\tisSCMRepository(inputOrElement)\n\t\t) {\n\t\t\tconst children: TreeElement[] = [];\n\n\t\t\tinputOrElement = isSCMRepository(inputOrElement)\n\t\t\t\t? inputOrElement\n\t\t\t\t: this.scmViewService.visibleRepositories[0];\n\t\t\tconst actionButton = inputOrElement.provider.actionButton;\n\t\t\tconst resourceGroups = inputOrElement.provider.groups;\n\n\t\t\t// SCM Input\n\t\t\tif (inputOrElement.input.visible) {\n\t\t\t\tchildren.push(inputOrElement.input);\n\t\t\t}\n\n\t\t\t// Action Button\n\t\t\tif (showActionButton && actionButton) {\n\t\t\t\tchildren.push({\n\t\t\t\t\ttype: \"actionButton\",\n\t\t\t\t\trepository: inputOrElement,\n\t\t\t\t\tbutton: actionButton,\n\t\t\t\t} satisfies ISCMActionButton);\n\t\t\t}\n\n\t\t\t// ResourceGroups\n\t\t\tconst hasSomeChanges = resourceGroups.some(\n\t\t\t\t(group) => group.resources.length > 0,\n\t\t\t);\n\t\t\tif (\n\t\t\t\thasSomeChanges ||\n\t\t\t\t(repositoryCount === 1 && (!showActionButton || !actionButton))\n\t\t\t) {\n\t\t\t\tchildren.push(...resourceGroups);\n\t\t\t}\n\n\t\t\treturn children;\n\t\t} else if (isSCMResourceGroup(inputOrElement)) {\n\t\t\tif (this.viewMode() === ViewMode.List) {\n\t\t\t\t// Resources (List)\n\t\t\t\treturn inputOrElement.resources;\n\t\t\t} else if (this.viewMode() === ViewMode.Tree) {\n\t\t\t\t// Resources (Tree)\n\t\t\t\tconst children: TreeElement[] = [];\n\t\t\t\tfor (const node of inputOrElement.resourceTree.root.children) {\n\t\t\t\t\tchildren.push(\n\t\t\t\t\t\tnode.element && node.childrenCount === 0\n\t\t\t\t\t\t\t? node.element\n\t\t\t\t\t\t\t: node,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn children;\n\t\t\t}\n\t\t} else if (isSCMResourceNode(inputOrElement)) {\n\t\t\t// Resources (Tree), History item changes (Tree)\n\t\t\tconst children: TreeElement[] = [];\n\t\t\tfor (const node of inputOrElement.children) {\n\t\t\t\tchildren.push(\n\t\t\t\t\tnode.element && node.childrenCount === 0\n\t\t\t\t\t\t? node.element\n\t\t\t\t\t\t: node,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn children;\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tgetParent(element: TreeElement): ISCMViewService | TreeElement {\n\t\tif (isSCMResourceNode(element)) {\n\t\t\tif (element.parent === element.context.resourceTree.root) {\n\t\t\t\treturn element.context;\n\t\t\t} else if (element.parent) {\n\t\t\t\treturn element.parent;\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Invalid element passed to getParent\");\n\t\t\t}\n\t\t} else if (isSCMResource(element)) {\n\t\t\tif (this.viewMode() === ViewMode.List) {\n\t\t\t\treturn element.resourceGroup;\n\t\t\t}\n\n\t\t\tconst node = element.resourceGroup.resourceTree.getNode(\n\t\t\t\telement.sourceUri,\n\t\t\t);\n\t\t\tconst result = node?.parent;\n\n\t\t\tif (!result) {\n\t\t\t\tthrow new Error(\"Invalid element passed to getParent\");\n\t\t\t}\n\n\t\t\tif (result === element.resourceGroup.resourceTree.root) {\n\t\t\t\treturn element.resourceGroup;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t} else if (isSCMInput(element)) {\n\t\t\treturn element.repository;\n\t\t} else if (isSCMResourceGroup(element)) {\n\t\t\tconst repository = this.scmViewService.visibleRepositories.find(\n\t\t\t\t(r) => r.provider === element.provider,\n\t\t\t);\n\t\t\tif (!repository) {\n\t\t\t\tthrow new Error(\"Invalid element passed to getParent\");\n\t\t\t}\n\n\t\t\treturn repository;\n\t\t} else {\n\t\t\tthrow new Error(\"Unexpected call to getParent\");\n\t\t}\n\t}\n\n\thasChildren(inputOrElement: ISCMViewService | TreeElement): boolean {\n\t\tif (isSCMViewService(inputOrElement)) {\n\t\t\treturn this.scmViewService.visibleRepositories.length !== 0;\n\t\t} else if (isSCMRepository(inputOrElement)) {\n\t\t\treturn true;\n\t\t} else if (isSCMInput(inputOrElement)) {\n\t\t\treturn false;\n\t\t} else if (isSCMActionButton(inputOrElement)) {\n\t\t\treturn false;\n\t\t} else if (isSCMResourceGroup(inputOrElement)) {\n\t\t\treturn true;\n\t\t} else if (isSCMResource(inputOrElement)) {\n\t\t\treturn false;\n\t\t} else if (ResourceTree.isResourceNode(inputOrElement)) {\n\t\t\treturn inputOrElement.childrenCount > 0;\n\t\t} else {\n\t\t\tthrow new Error(\"hasChildren not implemented.\");\n\t\t}\n\t}\n}\n\nexport class SCMActionButton implements IDisposable {\n\tprivate button:\n\t\t| Button\n\t\t| ButtonWithDescription\n\t\t| ButtonWithDropdown\n\t\t| undefined;\n\tprivate readonly disposables = new MutableDisposable<DisposableStore>();\n\n\tconstructor(\n\t\tprivate readonly container: HTMLElement,\n\t\tprivate readonly contextMenuService: IContextMenuService,\n\t\tprivate readonly commandService: ICommandService,\n\t\tprivate readonly notificationService: INotificationService,\n\t) {}\n\n\tdispose(): void {\n\t\tthis.disposables?.dispose();\n\t}\n\n\tsetButton(button: ISCMActionButtonDescriptor | undefined): void {\n\t\t// Clear old button\n\t\tthis.clear();\n\t\tif (!button) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (button.secondaryCommands?.length) {\n\t\t\tconst actions: IAction[] = [];\n\t\t\tfor (\n\t\t\t\tlet index = 0;\n\t\t\t\tindex < button.secondaryCommands.length;\n\t\t\t\tindex++\n\t\t\t) {\n\t\t\t\tconst commands = button.secondaryCommands[index];\n\t\t\t\tfor (const command of commands) {\n\t\t\t\t\tactions.push(\n\t\t\t\t\t\tnew Action(\n\t\t\t\t\t\t\tcommand.id,\n\t\t\t\t\t\t\tcommand.title,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\tasync () =>\n\t\t\t\t\t\t\t\tawait this.executeCommand(\n\t\t\t\t\t\t\t\t\tcommand.id,\n\t\t\t\t\t\t\t\t\t...(command.arguments || []),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (commands.length) {\n\t\t\t\t\tactions.push(new Separator());\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Remove last separator\n\t\t\tactions.pop();\n\n\t\t\t// ButtonWithDropdown\n\t\t\tthis.button = new ButtonWithDropdown(this.container, {\n\t\t\t\tactions: actions,\n\t\t\t\taddPrimaryActionToDropdown: false,\n\t\t\t\tcontextMenuProvider: this.contextMenuService,\n\t\t\t\ttitle: button.command.tooltip,\n\t\t\t\tsupportIcons: true,\n\t\t\t\t...defaultButtonStyles,\n\t\t\t});\n\t\t} else {\n\t\t\t// Button\n\t\t\tthis.button = new Button(this.container, {\n\t\t\t\tsupportIcons: true,\n\t\t\t\tsupportShortLabel: !!button.description,\n\t\t\t\ttitle: button.command.tooltip,\n\t\t\t\t...defaultButtonStyles,\n\t\t\t});\n\t\t}\n\n\t\tthis.button.enabled = button.enabled;\n\t\tthis.button.label = button.command.title;\n\t\tif (this.button instanceof Button && button.description) {\n\t\t\tthis.button.labelShort = button.description;\n\t\t}\n\t\tthis.button.onDidClick(\n\t\t\tasync () =>\n\t\t\t\tawait this.executeCommand(\n\t\t\t\t\tbutton.command.id,\n\t\t\t\t\t...(button.command.arguments || []),\n\t\t\t\t),\n\t\t\tnull,\n\t\t\tthis.disposables.value,\n\t\t);\n\n\t\tthis.disposables.value!.add(this.button);\n\t}\n\n\tfocus(): void {\n\t\tthis.button?.focus();\n\t}\n\n\tprivate clear(): void {\n\t\tthis.disposables.value = new DisposableStore();\n\t\tthis.button = undefined;\n\t\tclearNode(this.container);\n\t}\n\n\tprivate async executeCommand(\n\t\tcommandId: string,\n\t\t...args: any[]\n\t): Promise<void> {\n\t\ttry {\n\t\t\tawait this.commandService.executeCommand(commandId, ...args);\n\t\t} catch (ex) {\n\t\t\tthis.notificationService.error(ex);\n\t\t}\n\t}\n}\n\nsetupSimpleEditorSelectionStyling(\".scm-view .scm-editor-container\");\n"],
  "mappings": "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",
  "names": ["matches", "selections", "oneName", "otherName", "ViewMode", "ViewSortKey", "SCMInputWidgetCommandId", "SCMInputWidgetStorageKey", "actions"]
}
