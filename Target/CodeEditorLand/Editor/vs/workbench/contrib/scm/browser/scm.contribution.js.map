{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/scm/browser/scm.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tgetActiveElement,\n\tisActiveElement,\n} from \"../../../../base/browser/dom.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport { ModesRegistry } from \"../../../../editor/common/languages/modesRegistry.js\";\nimport { Context as SuggestContext } from \"../../../../editor/contrib/suggest/browser/suggest.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport {\n\tMenuId,\n\tMenuRegistry,\n} from \"../../../../platform/actions/common/actions.js\";\nimport {\n\tCommandsRegistry,\n\tICommandService,\n} from \"../../../../platform/commands/common/commands.js\";\nimport {\n\tExtensions as ConfigurationExtensions,\n\tConfigurationScope,\n\ttype IConfigurationRegistry,\n} from \"../../../../platform/configuration/common/configurationRegistry.js\";\nimport {\n\tContextKeyExpr,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { SyncDescriptor } from \"../../../../platform/instantiation/common/descriptors.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tKeybindingWeight,\n\tKeybindingsRegistry,\n} from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport {\n\tIListService,\n\tWorkbenchList,\n} from \"../../../../platform/list/browser/listService.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { registerIcon } from \"../../../../platform/theme/common/iconRegistry.js\";\nimport {\n\ttype IWorkbenchContributionsRegistry,\n\tExtensions as WorkbenchExtensions,\n\tWorkbenchPhase,\n\tregisterWorkbenchContribution2,\n} from \"../../../common/contributions.js\";\nimport {\n\ttype IViewContainersRegistry,\n\ttype IViewsRegistry,\n\tExtensions as ViewContainerExtensions,\n\tViewContainerLocation,\n} from \"../../../common/views.js\";\nimport { LifecyclePhase } from \"../../../services/lifecycle/common/lifecycle.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport {\n\tMANAGE_TRUST_COMMAND_ID,\n\tWorkspaceTrustContext,\n} from \"../../workspace/common/workspace.js\";\nimport { IQuickDiffService } from \"../common/quickDiff.js\";\nimport { QuickDiffService } from \"../common/quickDiffService.js\";\nimport {\n\tHISTORY_VIEW_PANE_ID,\n\ttype ISCMProvider,\n\tISCMService,\n\tISCMViewService,\n\tREPOSITORIES_VIEW_PANE_ID,\n\tVIEWLET_ID,\n\tVIEW_PANE_ID,\n} from \"../common/scm.js\";\nimport { SCMService } from \"../common/scmService.js\";\nimport {\n\tSCMActiveRepositoryController,\n\tSCMActiveResourceContextKeyController,\n} from \"./activity.js\";\nimport { DirtyDiffWorkbenchController } from \"./dirtydiffDecorator.js\";\nimport { SCMHistoryViewPane } from \"./scmHistoryViewPane.js\";\nimport { SCMRepositoriesViewPane } from \"./scmRepositoriesViewPane.js\";\nimport { ContextKeys, SCMViewPane } from \"./scmViewPane.js\";\nimport { SCMViewPaneContainer } from \"./scmViewPaneContainer.js\";\nimport { SCMViewService } from \"./scmViewService.js\";\nimport { isSCMRepository } from \"./util.js\";\nimport { SCMWorkingSetController } from \"./workingSet.js\";\n\nModesRegistry.registerLanguage({\n\tid: \"scminput\",\n\textensions: [],\n\taliases: [], // hide from language selector\n\tmimetypes: [\"text/x-scm-input\"],\n});\n\nRegistry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n).registerWorkbenchContribution(\n\tDirtyDiffWorkbenchController,\n\tLifecyclePhase.Restored,\n);\n\nconst sourceControlViewIcon = registerIcon(\n\t\"source-control-view-icon\",\n\tCodicon.sourceControl,\n\tlocalize(\"sourceControlViewIcon\", \"View icon of the Source Control view.\"),\n);\n\nconst viewContainer = Registry.as<IViewContainersRegistry>(\n\tViewContainerExtensions.ViewContainersRegistry,\n).registerViewContainer(\n\t{\n\t\tid: VIEWLET_ID,\n\t\ttitle: localize2(\"source control\", \"Source Control\"),\n\t\tctorDescriptor: new SyncDescriptor(SCMViewPaneContainer),\n\t\tstorageId: \"workbench.scm.views.state\",\n\t\ticon: sourceControlViewIcon,\n\t\talwaysUseContainerInfo: true,\n\t\torder: 2,\n\t\thideIfEmpty: true,\n\t},\n\tViewContainerLocation.Sidebar,\n\t{ doNotRegisterOpenCommand: true },\n);\n\nconst viewsRegistry = Registry.as<IViewsRegistry>(\n\tViewContainerExtensions.ViewsRegistry,\n);\n\nviewsRegistry.registerViewWelcomeContent(VIEW_PANE_ID, {\n\tcontent: localize(\n\t\t\"no open repo\",\n\t\t\"No source control providers registered.\",\n\t),\n\twhen: \"default\",\n});\n\nviewsRegistry.registerViewWelcomeContent(VIEW_PANE_ID, {\n\tcontent: localize(\n\t\t\"no open repo in an untrusted workspace\",\n\t\t\"None of the registered source control providers work in Restricted Mode.\",\n\t),\n\twhen: ContextKeyExpr.and(\n\t\tContextKeyExpr.equals(\"scm.providerCount\", 0),\n\t\tWorkspaceTrustContext.IsEnabled,\n\t\tWorkspaceTrustContext.IsTrusted.toNegated(),\n\t),\n});\n\nviewsRegistry.registerViewWelcomeContent(VIEW_PANE_ID, {\n\tcontent: `[${localize(\"manageWorkspaceTrustAction\", \"Manage Workspace Trust\")}](command:${MANAGE_TRUST_COMMAND_ID})`,\n\twhen: ContextKeyExpr.and(\n\t\tContextKeyExpr.equals(\"scm.providerCount\", 0),\n\t\tWorkspaceTrustContext.IsEnabled,\n\t\tWorkspaceTrustContext.IsTrusted.toNegated(),\n\t),\n});\n\nviewsRegistry.registerViews(\n\t[\n\t\t{\n\t\t\tid: VIEW_PANE_ID,\n\t\t\tname: localize2(\"source control\", \"Source Control\"),\n\t\t\tctorDescriptor: new SyncDescriptor(SCMViewPane),\n\t\t\tcanToggleVisibility: true,\n\t\t\tcanMoveView: true,\n\t\t\tweight: 40,\n\t\t\torder: -999,\n\t\t\tcontainerIcon: sourceControlViewIcon,\n\t\t\topenCommandActionDescriptor: {\n\t\t\t\tid: viewContainer.id,\n\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t{ key: \"miViewSCM\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\"Source &&Control\",\n\t\t\t\t),\n\t\t\t\tkeybindings: {\n\t\t\t\t\tprimary: 0,\n\t\t\t\t\twin: {\n\t\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyG,\n\t\t\t\t\t},\n\t\t\t\t\tlinux: {\n\t\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyG,\n\t\t\t\t\t},\n\t\t\t\t\tmac: {\n\t\t\t\t\t\tprimary: KeyMod.WinCtrl | KeyMod.Shift | KeyCode.KeyG,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\torder: 2,\n\t\t\t},\n\t\t},\n\t],\n\tviewContainer,\n);\n\nviewsRegistry.registerViews(\n\t[\n\t\t{\n\t\t\tid: REPOSITORIES_VIEW_PANE_ID,\n\t\t\tname: localize2(\n\t\t\t\t\"source control repositories\",\n\t\t\t\t\"Source Control Repositories\",\n\t\t\t),\n\t\t\tctorDescriptor: new SyncDescriptor(SCMRepositoriesViewPane),\n\t\t\tcanToggleVisibility: true,\n\t\t\thideByDefault: true,\n\t\t\tcanMoveView: true,\n\t\t\tweight: 20,\n\t\t\torder: -1000,\n\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\tContextKeyExpr.has(\"scm.providerCount\"),\n\t\t\t\tContextKeyExpr.notEquals(\"scm.providerCount\", 0),\n\t\t\t),\n\t\t\t// readonly when = ContextKeyExpr.or(ContextKeyExpr.equals('config.scm.alwaysShowProviders', true), ContextKeyExpr.and(ContextKeyExpr.notEquals('scm.providerCount', 0), ContextKeyExpr.notEquals('scm.providerCount', 1)));\n\t\t\tcontainerIcon: sourceControlViewIcon,\n\t\t},\n\t],\n\tviewContainer,\n);\n\nviewsRegistry.registerViews(\n\t[\n\t\t{\n\t\t\tid: HISTORY_VIEW_PANE_ID,\n\t\t\tname: localize2(\"source control history\", \"Source Control Graph\"),\n\t\t\tctorDescriptor: new SyncDescriptor(SCMHistoryViewPane),\n\t\t\tcanToggleVisibility: true,\n\t\t\tcanMoveView: true,\n\t\t\tweight: 40,\n\t\t\torder: 2 /* https://github.com/microsoft/vscode/issues/226447 */,\n\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\tContextKeyExpr.has(\"scm.providerCount\"),\n\t\t\t\tContextKeyExpr.notEquals(\"scm.providerCount\", 0),\n\t\t\t),\n\t\t\tcontainerIcon: sourceControlViewIcon,\n\t\t},\n\t],\n\tviewContainer,\n);\n\nRegistry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n).registerWorkbenchContribution(\n\tSCMActiveRepositoryController,\n\tLifecyclePhase.Restored,\n);\n\nRegistry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n).registerWorkbenchContribution(\n\tSCMActiveResourceContextKeyController,\n\tLifecyclePhase.Restored,\n);\n\nregisterWorkbenchContribution2(\n\tSCMWorkingSetController.ID,\n\tSCMWorkingSetController,\n\tWorkbenchPhase.AfterRestored,\n);\n\nRegistry.as<IConfigurationRegistry>(\n\tConfigurationExtensions.Configuration,\n).registerConfiguration({\n\tid: \"scm\",\n\torder: 5,\n\ttitle: localize(\"scmConfigurationTitle\", \"Source Control\"),\n\ttype: \"object\",\n\tscope: ConfigurationScope.RESOURCE,\n\tproperties: {\n\t\t\"scm.diffDecorations\": {\n\t\t\ttype: \"string\",\n\t\t\tenum: [\"all\", \"gutter\", \"overview\", \"minimap\", \"none\"],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.diffDecorations.all\",\n\t\t\t\t\t\"Show the diff decorations in all available locations.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.diffDecorations.gutter\",\n\t\t\t\t\t\"Show the diff decorations only in the editor gutter.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.diffDecorations.overviewRuler\",\n\t\t\t\t\t\"Show the diff decorations only in the overview ruler.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.diffDecorations.minimap\",\n\t\t\t\t\t\"Show the diff decorations only in the minimap.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.diffDecorations.none\",\n\t\t\t\t\t\"Do not show the diff decorations.\",\n\t\t\t\t),\n\t\t\t],\n\t\t\tdefault: \"all\",\n\t\t\tdescription: localize(\n\t\t\t\t\"diffDecorations\",\n\t\t\t\t\"Controls diff decorations in the editor.\",\n\t\t\t),\n\t\t},\n\t\t\"scm.diffDecorationsGutterWidth\": {\n\t\t\ttype: \"number\",\n\t\t\tenum: [1, 2, 3, 4, 5],\n\t\t\tdefault: 3,\n\t\t\tdescription: localize(\n\t\t\t\t\"diffGutterWidth\",\n\t\t\t\t\"Controls the width(px) of diff decorations in gutter (added & modified).\",\n\t\t\t),\n\t\t},\n\t\t\"scm.diffDecorationsGutterVisibility\": {\n\t\t\ttype: \"string\",\n\t\t\tenum: [\"always\", \"hover\"],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.diffDecorationsGutterVisibility.always\",\n\t\t\t\t\t\"Show the diff decorator in the gutter at all times.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.diffDecorationsGutterVisibility.hover\",\n\t\t\t\t\t\"Show the diff decorator in the gutter only on hover.\",\n\t\t\t\t),\n\t\t\t],\n\t\t\tdescription: localize(\n\t\t\t\t\"scm.diffDecorationsGutterVisibility\",\n\t\t\t\t\"Controls the visibility of the Source Control diff decorator in the gutter.\",\n\t\t\t),\n\t\t\tdefault: \"always\",\n\t\t},\n\t\t\"scm.diffDecorationsGutterAction\": {\n\t\t\ttype: \"string\",\n\t\t\tenum: [\"diff\", \"none\"],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.diffDecorationsGutterAction.diff\",\n\t\t\t\t\t\"Show the inline diff Peek view on click.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\"scm.diffDecorationsGutterAction.none\", \"Do nothing.\"),\n\t\t\t],\n\t\t\tdescription: localize(\n\t\t\t\t\"scm.diffDecorationsGutterAction\",\n\t\t\t\t\"Controls the behavior of Source Control diff gutter decorations.\",\n\t\t\t),\n\t\t\tdefault: \"diff\",\n\t\t},\n\t\t\"scm.diffDecorationsGutterPattern\": {\n\t\t\ttype: \"object\",\n\t\t\tdescription: localize(\n\t\t\t\t\"diffGutterPattern\",\n\t\t\t\t\"Controls whether a pattern is used for the diff decorations in gutter.\",\n\t\t\t),\n\t\t\tadditionalProperties: false,\n\t\t\tproperties: {\n\t\t\t\tadded: {\n\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\"diffGutterPatternAdded\",\n\t\t\t\t\t\t\"Use pattern for the diff decorations in gutter for added lines.\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tmodified: {\n\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\"diffGutterPatternModifed\",\n\t\t\t\t\t\t\"Use pattern for the diff decorations in gutter for modified lines.\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t},\n\t\t\tdefault: {\n\t\t\t\tadded: false,\n\t\t\t\tmodified: true,\n\t\t\t},\n\t\t},\n\t\t\"scm.diffDecorationsIgnoreTrimWhitespace\": {\n\t\t\ttype: \"string\",\n\t\t\tenum: [\"true\", \"false\", \"inherit\"],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.diffDecorationsIgnoreTrimWhitespace.true\",\n\t\t\t\t\t\"Ignore leading and trailing whitespace.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.diffDecorationsIgnoreTrimWhitespace.false\",\n\t\t\t\t\t\"Do not ignore leading and trailing whitespace.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.diffDecorationsIgnoreTrimWhitespace.inherit\",\n\t\t\t\t\t\"Inherit from `diffEditor.ignoreTrimWhitespace`.\",\n\t\t\t\t),\n\t\t\t],\n\t\t\tdescription: localize(\n\t\t\t\t\"diffDecorationsIgnoreTrimWhitespace\",\n\t\t\t\t\"Controls whether leading and trailing whitespace is ignored in Source Control diff gutter decorations.\",\n\t\t\t),\n\t\t\tdefault: \"false\",\n\t\t},\n\t\t\"scm.alwaysShowActions\": {\n\t\t\ttype: \"boolean\",\n\t\t\tdescription: localize(\n\t\t\t\t\"alwaysShowActions\",\n\t\t\t\t\"Controls whether inline actions are always visible in the Source Control view.\",\n\t\t\t),\n\t\t\tdefault: false,\n\t\t},\n\t\t\"scm.countBadge\": {\n\t\t\ttype: \"string\",\n\t\t\tenum: [\"all\", \"focused\", \"off\"],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.countBadge.all\",\n\t\t\t\t\t\"Show the sum of all Source Control Provider count badges.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.countBadge.focused\",\n\t\t\t\t\t\"Show the count badge of the focused Source Control Provider.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.countBadge.off\",\n\t\t\t\t\t\"Disable the Source Control count badge.\",\n\t\t\t\t),\n\t\t\t],\n\t\t\tdescription: localize(\n\t\t\t\t\"scm.countBadge\",\n\t\t\t\t\"Controls the count badge on the Source Control icon on the Activity Bar.\",\n\t\t\t),\n\t\t\tdefault: \"all\",\n\t\t},\n\t\t\"scm.providerCountBadge\": {\n\t\t\ttype: \"string\",\n\t\t\tenum: [\"hidden\", \"auto\", \"visible\"],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.providerCountBadge.hidden\",\n\t\t\t\t\t\"Hide Source Control Provider count badges.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.providerCountBadge.auto\",\n\t\t\t\t\t\"Only show count badge for Source Control Provider when non-zero.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.providerCountBadge.visible\",\n\t\t\t\t\t\"Show Source Control Provider count badges.\",\n\t\t\t\t),\n\t\t\t],\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t\"scm.providerCountBadge\",\n\t\t\t\t\"Controls the count badges on Source Control Provider headers. These headers appear in the Source Control view when there is more than one provider or when the {0} setting is enabled, and in the Source Control Repositories view.\",\n\t\t\t\t\"`#scm.alwaysShowRepositories#`\",\n\t\t\t),\n\t\t\tdefault: \"hidden\",\n\t\t},\n\t\t\"scm.defaultViewMode\": {\n\t\t\ttype: \"string\",\n\t\t\tenum: [\"tree\", \"list\"],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.defaultViewMode.tree\",\n\t\t\t\t\t\"Show the repository changes as a tree.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.defaultViewMode.list\",\n\t\t\t\t\t\"Show the repository changes as a list.\",\n\t\t\t\t),\n\t\t\t],\n\t\t\tdescription: localize(\n\t\t\t\t\"scm.defaultViewMode\",\n\t\t\t\t\"Controls the default Source Control repository view mode.\",\n\t\t\t),\n\t\t\tdefault: \"list\",\n\t\t},\n\t\t\"scm.defaultViewSortKey\": {\n\t\t\ttype: \"string\",\n\t\t\tenum: [\"name\", \"path\", \"status\"],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.defaultViewSortKey.name\",\n\t\t\t\t\t\"Sort the repository changes by file name.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.defaultViewSortKey.path\",\n\t\t\t\t\t\"Sort the repository changes by path.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.defaultViewSortKey.status\",\n\t\t\t\t\t\"Sort the repository changes by Source Control status.\",\n\t\t\t\t),\n\t\t\t],\n\t\t\tdescription: localize(\n\t\t\t\t\"scm.defaultViewSortKey\",\n\t\t\t\t\"Controls the default Source Control repository changes sort order when viewed as a list.\",\n\t\t\t),\n\t\t\tdefault: \"path\",\n\t\t},\n\t\t\"scm.autoReveal\": {\n\t\t\ttype: \"boolean\",\n\t\t\tdescription: localize(\n\t\t\t\t\"autoReveal\",\n\t\t\t\t\"Controls whether the Source Control view should automatically reveal and select files when opening them.\",\n\t\t\t),\n\t\t\tdefault: true,\n\t\t},\n\t\t\"scm.inputFontFamily\": {\n\t\t\ttype: \"string\",\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t\"inputFontFamily\",\n\t\t\t\t\"Controls the font for the input message. Use `default` for the workbench user interface font family, `editor` for the `#editor.fontFamily#`'s value, or a custom font family.\",\n\t\t\t),\n\t\t\tdefault: \"default\",\n\t\t},\n\t\t\"scm.inputFontSize\": {\n\t\t\ttype: \"number\",\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t\"inputFontSize\",\n\t\t\t\t\"Controls the font size for the input message in pixels.\",\n\t\t\t),\n\t\t\tdefault: 13,\n\t\t},\n\t\t\"scm.inputMaxLineCount\": {\n\t\t\ttype: \"number\",\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t\"inputMaxLines\",\n\t\t\t\t\"Controls the maximum number of lines that the input will auto-grow to.\",\n\t\t\t),\n\t\t\tminimum: 1,\n\t\t\tmaximum: 50,\n\t\t\tdefault: 10,\n\t\t},\n\t\t\"scm.inputMinLineCount\": {\n\t\t\ttype: \"number\",\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t\"inputMinLines\",\n\t\t\t\t\"Controls the minimum number of lines that the input will auto-grow from.\",\n\t\t\t),\n\t\t\tminimum: 1,\n\t\t\tmaximum: 50,\n\t\t\tdefault: 1,\n\t\t},\n\t\t\"scm.alwaysShowRepositories\": {\n\t\t\ttype: \"boolean\",\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t\"alwaysShowRepository\",\n\t\t\t\t\"Controls whether repositories should always be visible in the Source Control view.\",\n\t\t\t),\n\t\t\tdefault: false,\n\t\t},\n\t\t\"scm.repositories.sortOrder\": {\n\t\t\ttype: \"string\",\n\t\t\tenum: [\"discovery time\", \"name\", \"path\"],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.repositoriesSortOrder.discoveryTime\",\n\t\t\t\t\t\"Repositories in the Source Control Repositories view are sorted by discovery time. Repositories in the Source Control view are sorted in the order that they were selected.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.repositoriesSortOrder.name\",\n\t\t\t\t\t\"Repositories in the Source Control Repositories and Source Control views are sorted by repository name.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.repositoriesSortOrder.path\",\n\t\t\t\t\t\"Repositories in the Source Control Repositories and Source Control views are sorted by repository path.\",\n\t\t\t\t),\n\t\t\t],\n\t\t\tdescription: localize(\n\t\t\t\t\"repositoriesSortOrder\",\n\t\t\t\t\"Controls the sort order of the repositories in the source control repositories view.\",\n\t\t\t),\n\t\t\tdefault: \"discovery time\",\n\t\t},\n\t\t\"scm.repositories.visible\": {\n\t\t\ttype: \"number\",\n\t\t\tdescription: localize(\n\t\t\t\t\"providersVisible\",\n\t\t\t\t\"Controls how many repositories are visible in the Source Control Repositories section. Set to 0, to be able to manually resize the view.\",\n\t\t\t),\n\t\t\tdefault: 10,\n\t\t},\n\t\t\"scm.showActionButton\": {\n\t\t\ttype: \"boolean\",\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t\"showActionButton\",\n\t\t\t\t\"Controls whether an action button can be shown in the Source Control view.\",\n\t\t\t),\n\t\t\tdefault: true,\n\t\t},\n\t\t\"scm.showInputActionButton\": {\n\t\t\ttype: \"boolean\",\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t\"showInputActionButton\",\n\t\t\t\t\"Controls whether an action button can be shown in the Source Control input.\",\n\t\t\t),\n\t\t\tdefault: true,\n\t\t},\n\t\t\"scm.workingSets.enabled\": {\n\t\t\ttype: \"boolean\",\n\t\t\tdescription: localize(\n\t\t\t\t\"scm.workingSets.enabled\",\n\t\t\t\t\"Controls whether to store editor working sets when switching between source control history item groups.\",\n\t\t\t),\n\t\t\tdefault: false,\n\t\t},\n\t\t\"scm.workingSets.default\": {\n\t\t\ttype: \"string\",\n\t\t\tenum: [\"empty\", \"current\"],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.workingSets.default.empty\",\n\t\t\t\t\t\"Use an empty working set when switching to a source control history item group that does not have a working set.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.workingSets.default.current\",\n\t\t\t\t\t\"Use the current working set when switching to a source control history item group that does not have a working set.\",\n\t\t\t\t),\n\t\t\t],\n\t\t\tdescription: localize(\n\t\t\t\t\"scm.workingSets.default\",\n\t\t\t\t\"Controls the default working set to use when switching to a source control history item group that does not have a working set.\",\n\t\t\t),\n\t\t\tdefault: \"current\",\n\t\t},\n\t\t\"scm.compactFolders\": {\n\t\t\ttype: \"boolean\",\n\t\t\tdescription: localize(\n\t\t\t\t\"scm.compactFolders\",\n\t\t\t\t\"Controls whether the Source Control view should render folders in a compact form. In such a form, single child folders will be compressed in a combined tree element.\",\n\t\t\t),\n\t\t\tdefault: true,\n\t\t},\n\t\t\"scm.graph.pageOnScroll\": {\n\t\t\ttype: \"boolean\",\n\t\t\tdescription: localize(\n\t\t\t\t\"scm.graph.pageOnScroll\",\n\t\t\t\t\"Controls whether the Source Control Graph view will load the next page of items when you scroll to the end of the list.\",\n\t\t\t),\n\t\t\tdefault: true,\n\t\t},\n\t\t\"scm.graph.pageSize\": {\n\t\t\ttype: \"number\",\n\t\t\tdescription: localize(\n\t\t\t\t\"scm.graph.pageSize\",\n\t\t\t\t\"The number of items to show in the Source Control Graph view by default and when loading more items.\",\n\t\t\t),\n\t\t\tminimum: 1,\n\t\t\tmaximum: 1000,\n\t\t\tdefault: 50,\n\t\t},\n\t\t\"scm.graph.badges\": {\n\t\t\ttype: \"string\",\n\t\t\tenum: [\"all\", \"filter\"],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.graph.badges.all\",\n\t\t\t\t\t\"Show badges of all history item groups in the Source Control Graph view.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"scm.graph.badges.filter\",\n\t\t\t\t\t\"Show only the badges of history item groups used as a filter in the Source Control Graph view.\",\n\t\t\t\t),\n\t\t\t],\n\t\t\tdescription: localize(\n\t\t\t\t\"scm.graph.badges\",\n\t\t\t\t\"Controls which badges are shown in the Source Control Graph view. The badges are shown on the right side of the graph indicating the names of history item groups.\",\n\t\t\t),\n\t\t\tdefault: \"filter\",\n\t\t},\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"scm.acceptInput\",\n\tmetadata: {\n\t\tdescription: localize(\"scm accept\", \"Source Control: Accept Input\"),\n\t\targs: [],\n\t},\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.has(\"scmRepository\"),\n\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\thandler: (accessor) => {\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tconst context = contextKeyService.getContext(getActiveElement());\n\t\tconst repositoryId = context.getValue<string | undefined>(\n\t\t\t\"scmRepository\",\n\t\t);\n\n\t\tif (!repositoryId) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst scmService = accessor.get(ISCMService);\n\t\tconst repository = scmService.getRepository(repositoryId);\n\n\t\tif (!repository?.provider.acceptInputCommand) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst id = repository.provider.acceptInputCommand.id;\n\t\tconst args = repository.provider.acceptInputCommand.arguments;\n\t\tconst commandService = accessor.get(ICommandService);\n\n\t\treturn commandService.executeCommand(id, ...(args || []));\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"scm.clearInput\",\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(\n\t\tContextKeyExpr.has(\"scmRepository\"),\n\t\tSuggestContext.Visible.toNegated(),\n\t),\n\tprimary: KeyCode.Escape,\n\thandler: async (accessor) => {\n\t\tconst scmService = accessor.get(ISCMService);\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\n\t\tconst context = contextKeyService.getContext(getActiveElement());\n\t\tconst repositoryId = context.getValue<string | undefined>(\n\t\t\t\"scmRepository\",\n\t\t);\n\t\tconst repository = repositoryId\n\t\t\t? scmService.getRepository(repositoryId)\n\t\t\t: undefined;\n\t\trepository?.input.setValue(\"\", true);\n\t},\n});\n\nconst viewNextCommitCommand = {\n\tdescription: {\n\t\tdescription: localize(\n\t\t\t\"scm view next commit\",\n\t\t\t\"Source Control: View Next Commit\",\n\t\t),\n\t\targs: [],\n\t},\n\tweight: KeybindingWeight.WorkbenchContrib,\n\thandler: (accessor: ServicesAccessor) => {\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tconst scmService = accessor.get(ISCMService);\n\t\tconst context = contextKeyService.getContext(getActiveElement());\n\t\tconst repositoryId = context.getValue<string | undefined>(\n\t\t\t\"scmRepository\",\n\t\t);\n\t\tconst repository = repositoryId\n\t\t\t? scmService.getRepository(repositoryId)\n\t\t\t: undefined;\n\t\trepository?.input.showNextHistoryValue();\n\t},\n};\n\nconst viewPreviousCommitCommand = {\n\tdescription: {\n\t\tdescription: localize(\n\t\t\t\"scm view previous commit\",\n\t\t\t\"Source Control: View Previous Commit\",\n\t\t),\n\t\targs: [],\n\t},\n\tweight: KeybindingWeight.WorkbenchContrib,\n\thandler: (accessor: ServicesAccessor) => {\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tconst scmService = accessor.get(ISCMService);\n\t\tconst context = contextKeyService.getContext(getActiveElement());\n\t\tconst repositoryId = context.getValue<string | undefined>(\n\t\t\t\"scmRepository\",\n\t\t);\n\t\tconst repository = repositoryId\n\t\t\t? scmService.getRepository(repositoryId)\n\t\t\t: undefined;\n\t\trepository?.input.showPreviousHistoryValue();\n\t},\n};\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t...viewNextCommitCommand,\n\tid: \"scm.viewNextCommit\",\n\twhen: ContextKeyExpr.and(\n\t\tContextKeyExpr.has(\"scmRepository\"),\n\t\tContextKeyExpr.has(\"scmInputIsInLastPosition\"),\n\t\tSuggestContext.Visible.toNegated(),\n\t),\n\tprimary: KeyCode.DownArrow,\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t...viewPreviousCommitCommand,\n\tid: \"scm.viewPreviousCommit\",\n\twhen: ContextKeyExpr.and(\n\t\tContextKeyExpr.has(\"scmRepository\"),\n\t\tContextKeyExpr.has(\"scmInputIsInFirstPosition\"),\n\t\tSuggestContext.Visible.toNegated(),\n\t),\n\tprimary: KeyCode.UpArrow,\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t...viewNextCommitCommand,\n\tid: \"scm.forceViewNextCommit\",\n\twhen: ContextKeyExpr.has(\"scmRepository\"),\n\tprimary: KeyMod.Alt | KeyCode.DownArrow,\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t...viewPreviousCommitCommand,\n\tid: \"scm.forceViewPreviousCommit\",\n\twhen: ContextKeyExpr.has(\"scmRepository\"),\n\tprimary: KeyMod.Alt | KeyCode.UpArrow,\n});\n\nCommandsRegistry.registerCommand(\n\t\"scm.openInIntegratedTerminal\",\n\tasync (accessor, ...providers: ISCMProvider[]) => {\n\t\tif (!providers || providers.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst commandService = accessor.get(ICommandService);\n\t\tconst listService = accessor.get(IListService);\n\n\t\tlet provider = providers.length === 1 ? providers[0] : undefined;\n\n\t\tif (!provider) {\n\t\t\tconst list = listService.lastFocusedList;\n\t\t\tconst element = list?.getHTMLElement();\n\n\t\t\tif (\n\t\t\t\tlist instanceof WorkbenchList &&\n\t\t\t\telement &&\n\t\t\t\tisActiveElement(element)\n\t\t\t) {\n\t\t\t\tconst [index] = list.getFocus();\n\t\t\t\tconst focusedElement = list.element(index);\n\n\t\t\t\t// Source Control Repositories\n\t\t\t\tif (isSCMRepository(focusedElement)) {\n\t\t\t\t\tprovider = focusedElement.provider;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!provider?.rootUri) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait commandService.executeCommand(\n\t\t\t\"openInIntegratedTerminal\",\n\t\t\tprovider.rootUri,\n\t\t);\n\t},\n);\n\nCommandsRegistry.registerCommand(\n\t\"scm.openInTerminal\",\n\tasync (accessor, provider: ISCMProvider) => {\n\t\tif (!provider || !provider.rootUri) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst commandService = accessor.get(ICommandService);\n\t\tawait commandService.executeCommand(\"openInTerminal\", provider.rootUri);\n\t},\n);\n\nMenuRegistry.appendMenuItem(MenuId.SCMSourceControl, {\n\tgroup: \"100_end\",\n\tcommand: {\n\t\tid: \"scm.openInTerminal\",\n\t\ttitle: localize(\n\t\t\t\"open in external terminal\",\n\t\t\t\"Open in External Terminal\",\n\t\t),\n\t},\n\twhen: ContextKeyExpr.and(\n\t\tContextKeyExpr.equals(\"scmProviderHasRootUri\", true),\n\t\tContextKeyExpr.or(\n\t\t\tContextKeyExpr.equals(\n\t\t\t\t\"config.terminal.sourceControlRepositoriesKind\",\n\t\t\t\t\"external\",\n\t\t\t),\n\t\t\tContextKeyExpr.equals(\n\t\t\t\t\"config.terminal.sourceControlRepositoriesKind\",\n\t\t\t\t\"both\",\n\t\t\t),\n\t\t),\n\t),\n});\n\nMenuRegistry.appendMenuItem(MenuId.SCMSourceControl, {\n\tgroup: \"100_end\",\n\tcommand: {\n\t\tid: \"scm.openInIntegratedTerminal\",\n\t\ttitle: localize(\n\t\t\t\"open in integrated terminal\",\n\t\t\t\"Open in Integrated Terminal\",\n\t\t),\n\t},\n\twhen: ContextKeyExpr.and(\n\t\tContextKeyExpr.equals(\"scmProviderHasRootUri\", true),\n\t\tContextKeyExpr.or(\n\t\t\tContextKeyExpr.equals(\n\t\t\t\t\"config.terminal.sourceControlRepositoriesKind\",\n\t\t\t\t\"integrated\",\n\t\t\t),\n\t\t\tContextKeyExpr.equals(\n\t\t\t\t\"config.terminal.sourceControlRepositoriesKind\",\n\t\t\t\t\"both\",\n\t\t\t),\n\t\t),\n\t),\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"workbench.scm.action.focusPreviousInput\",\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeys.RepositoryVisibilityCount.notEqualsTo(0),\n\thandler: async (accessor) => {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst scmView = await viewsService.openView<SCMViewPane>(VIEW_PANE_ID);\n\t\tif (scmView) {\n\t\t\tscmView.focusPreviousInput();\n\t\t}\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"workbench.scm.action.focusNextInput\",\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeys.RepositoryVisibilityCount.notEqualsTo(0),\n\thandler: async (accessor) => {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst scmView = await viewsService.openView<SCMViewPane>(VIEW_PANE_ID);\n\t\tif (scmView) {\n\t\t\tscmView.focusNextInput();\n\t\t}\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"workbench.scm.action.focusPreviousResourceGroup\",\n\tweight: KeybindingWeight.WorkbenchContrib,\n\thandler: async (accessor) => {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst scmView = await viewsService.openView<SCMViewPane>(VIEW_PANE_ID);\n\t\tif (scmView) {\n\t\t\tscmView.focusPreviousResourceGroup();\n\t\t}\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"workbench.scm.action.focusNextResourceGroup\",\n\tweight: KeybindingWeight.WorkbenchContrib,\n\thandler: async (accessor) => {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst scmView = await viewsService.openView<SCMViewPane>(VIEW_PANE_ID);\n\t\tif (scmView) {\n\t\t\tscmView.focusNextResourceGroup();\n\t\t}\n\t},\n});\n\nregisterSingleton(ISCMService, SCMService, InstantiationType.Delayed);\nregisterSingleton(ISCMViewService, SCMViewService, InstantiationType.Delayed);\nregisterSingleton(\n\tIQuickDiffService,\n\tQuickDiffService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": "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",
  "names": []
}
