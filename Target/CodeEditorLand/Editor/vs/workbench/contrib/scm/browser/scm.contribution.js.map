{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/scm/browser/scm.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize, localize2 } from '../../../../nls.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { IWorkbenchContributionsRegistry, registerWorkbenchContribution2, Extensions as WorkbenchExtensions, WorkbenchPhase } from '../../../common/contributions.js';\nimport { DirtyDiffWorkbenchController } from './dirtydiffDecorator.js';\nimport { VIEWLET_ID, ISCMService, VIEW_PANE_ID, ISCMProvider, ISCMViewService, REPOSITORIES_VIEW_PANE_ID, HISTORY_VIEW_PANE_ID } from '../common/scm.js';\nimport { KeyMod, KeyCode } from '../../../../base/common/keyCodes.js';\nimport { MenuRegistry, MenuId } from '../../../../platform/actions/common/actions.js';\nimport { SCMActiveResourceContextKeyController, SCMActiveRepositoryController } from './activity.js';\nimport { LifecyclePhase } from '../../../services/lifecycle/common/lifecycle.js';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions, ConfigurationScope } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { IContextKeyService, ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { KeybindingsRegistry, KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { SCMService } from '../common/scmService.js';\nimport { IViewContainersRegistry, ViewContainerLocation, Extensions as ViewContainerExtensions, IViewsRegistry } from '../../../common/views.js';\nimport { SCMViewPaneContainer } from './scmViewPaneContainer.js';\nimport { SyncDescriptor } from '../../../../platform/instantiation/common/descriptors.js';\nimport { ModesRegistry } from '../../../../editor/common/languages/modesRegistry.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nimport { ContextKeys, SCMViewPane } from './scmViewPane.js';\nimport { SCMViewService } from './scmViewService.js';\nimport { SCMRepositoriesViewPane } from './scmRepositoriesViewPane.js';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { Context as SuggestContext } from '../../../../editor/contrib/suggest/browser/suggest.js';\nimport { MANAGE_TRUST_COMMAND_ID, WorkspaceTrustContext } from '../../workspace/common/workspace.js';\nimport { IQuickDiffService } from '../common/quickDiff.js';\nimport { QuickDiffService } from '../common/quickDiffService.js';\nimport { getActiveElement, isActiveElement } from '../../../../base/browser/dom.js';\nimport { SCMWorkingSetController } from './workingSet.js';\nimport { IViewsService } from '../../../services/views/common/viewsService.js';\nimport { IListService, WorkbenchList } from '../../../../platform/list/browser/listService.js';\nimport { isSCMRepository } from './util.js';\nimport { SCMHistoryViewPane } from './scmHistoryViewPane.js';\n\nModesRegistry.registerLanguage({\n\tid: 'scminput',\n\textensions: [],\n\taliases: [], // hide from language selector\n\tmimetypes: ['text/x-scm-input']\n});\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench)\n\t.registerWorkbenchContribution(DirtyDiffWorkbenchController, LifecyclePhase.Restored);\n\nconst sourceControlViewIcon = registerIcon('source-control-view-icon', Codicon.sourceControl, localize('sourceControlViewIcon', 'View icon of the Source Control view.'));\n\nconst viewContainer = Registry.as<IViewContainersRegistry>(ViewContainerExtensions.ViewContainersRegistry).registerViewContainer({\n\tid: VIEWLET_ID,\n\ttitle: localize2('source control', 'Source Control'),\n\tctorDescriptor: new SyncDescriptor(SCMViewPaneContainer),\n\tstorageId: 'workbench.scm.views.state',\n\ticon: sourceControlViewIcon,\n\talwaysUseContainerInfo: true,\n\torder: 2,\n\thideIfEmpty: true,\n}, ViewContainerLocation.Sidebar, { doNotRegisterOpenCommand: true });\n\nconst viewsRegistry = Registry.as<IViewsRegistry>(ViewContainerExtensions.ViewsRegistry);\n\nviewsRegistry.registerViewWelcomeContent(VIEW_PANE_ID, {\n\tcontent: localize('no open repo', \"No source control providers registered.\"),\n\twhen: 'default'\n});\n\nviewsRegistry.registerViewWelcomeContent(VIEW_PANE_ID, {\n\tcontent: localize('no open repo in an untrusted workspace', \"None of the registered source control providers work in Restricted Mode.\"),\n\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('scm.providerCount', 0), WorkspaceTrustContext.IsEnabled, WorkspaceTrustContext.IsTrusted.toNegated())\n});\n\nviewsRegistry.registerViewWelcomeContent(VIEW_PANE_ID, {\n\tcontent: `[${localize('manageWorkspaceTrustAction', \"Manage Workspace Trust\")}](command:${MANAGE_TRUST_COMMAND_ID})`,\n\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('scm.providerCount', 0), WorkspaceTrustContext.IsEnabled, WorkspaceTrustContext.IsTrusted.toNegated())\n});\n\nviewsRegistry.registerViews([{\n\tid: VIEW_PANE_ID,\n\tname: localize2('source control', 'Source Control'),\n\tctorDescriptor: new SyncDescriptor(SCMViewPane),\n\tcanToggleVisibility: true,\n\tcanMoveView: true,\n\tweight: 40,\n\torder: -999,\n\tcontainerIcon: sourceControlViewIcon,\n\topenCommandActionDescriptor: {\n\t\tid: viewContainer.id,\n\t\tmnemonicTitle: localize({ key: 'miViewSCM', comment: ['&& denotes a mnemonic'] }, \"Source &&Control\"),\n\t\tkeybindings: {\n\t\t\tprimary: 0,\n\t\t\twin: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyG },\n\t\t\tlinux: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyG },\n\t\t\tmac: { primary: KeyMod.WinCtrl | KeyMod.Shift | KeyCode.KeyG },\n\t\t},\n\t\torder: 2,\n\t}\n}], viewContainer);\n\nviewsRegistry.registerViews([{\n\tid: REPOSITORIES_VIEW_PANE_ID,\n\tname: localize2('source control repositories', \"Source Control Repositories\"),\n\tctorDescriptor: new SyncDescriptor(SCMRepositoriesViewPane),\n\tcanToggleVisibility: true,\n\thideByDefault: true,\n\tcanMoveView: true,\n\tweight: 20,\n\torder: -1000,\n\twhen: ContextKeyExpr.and(ContextKeyExpr.has('scm.providerCount'), ContextKeyExpr.notEquals('scm.providerCount', 0)),\n\t// readonly when = ContextKeyExpr.or(ContextKeyExpr.equals('config.scm.alwaysShowProviders', true), ContextKeyExpr.and(ContextKeyExpr.notEquals('scm.providerCount', 0), ContextKeyExpr.notEquals('scm.providerCount', 1)));\n\tcontainerIcon: sourceControlViewIcon\n}], viewContainer);\n\nviewsRegistry.registerViews([{\n\tid: HISTORY_VIEW_PANE_ID,\n\tname: localize2('source control history', \"Source Control Graph\"),\n\tctorDescriptor: new SyncDescriptor(SCMHistoryViewPane),\n\tcanToggleVisibility: true,\n\tcanMoveView: true,\n\tweight: 40,\n\torder: 2, /* https://github.com/microsoft/vscode/issues/226447 */\n\twhen: ContextKeyExpr.and(ContextKeyExpr.has('scm.providerCount'), ContextKeyExpr.notEquals('scm.providerCount', 0)),\n\tcontainerIcon: sourceControlViewIcon\n}], viewContainer);\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench)\n\t.registerWorkbenchContribution(SCMActiveRepositoryController, LifecyclePhase.Restored);\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench)\n\t.registerWorkbenchContribution(SCMActiveResourceContextKeyController, LifecyclePhase.Restored);\n\nregisterWorkbenchContribution2(\n\tSCMWorkingSetController.ID,\n\tSCMWorkingSetController,\n\tWorkbenchPhase.AfterRestored\n);\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).registerConfiguration({\n\tid: 'scm',\n\torder: 5,\n\ttitle: localize('scmConfigurationTitle', \"Source Control\"),\n\ttype: 'object',\n\tscope: ConfigurationScope.RESOURCE,\n\tproperties: {\n\t\t'scm.diffDecorations': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['all', 'gutter', 'overview', 'minimap', 'none'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('scm.diffDecorations.all', \"Show the diff decorations in all available locations.\"),\n\t\t\t\tlocalize('scm.diffDecorations.gutter', \"Show the diff decorations only in the editor gutter.\"),\n\t\t\t\tlocalize('scm.diffDecorations.overviewRuler', \"Show the diff decorations only in the overview ruler.\"),\n\t\t\t\tlocalize('scm.diffDecorations.minimap', \"Show the diff decorations only in the minimap.\"),\n\t\t\t\tlocalize('scm.diffDecorations.none', \"Do not show the diff decorations.\")\n\t\t\t],\n\t\t\tdefault: 'all',\n\t\t\tdescription: localize('diffDecorations', \"Controls diff decorations in the editor.\")\n\t\t},\n\t\t'scm.diffDecorationsGutterWidth': {\n\t\t\ttype: 'number',\n\t\t\tenum: [1, 2, 3, 4, 5],\n\t\t\tdefault: 3,\n\t\t\tdescription: localize('diffGutterWidth', \"Controls the width(px) of diff decorations in gutter (added & modified).\")\n\t\t},\n\t\t'scm.diffDecorationsGutterVisibility': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['always', 'hover'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('scm.diffDecorationsGutterVisibility.always', \"Show the diff decorator in the gutter at all times.\"),\n\t\t\t\tlocalize('scm.diffDecorationsGutterVisibility.hover', \"Show the diff decorator in the gutter only on hover.\")\n\t\t\t],\n\t\t\tdescription: localize('scm.diffDecorationsGutterVisibility', \"Controls the visibility of the Source Control diff decorator in the gutter.\"),\n\t\t\tdefault: 'always'\n\t\t},\n\t\t'scm.diffDecorationsGutterAction': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['diff', 'none'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('scm.diffDecorationsGutterAction.diff', \"Show the inline diff Peek view on click.\"),\n\t\t\t\tlocalize('scm.diffDecorationsGutterAction.none', \"Do nothing.\")\n\t\t\t],\n\t\t\tdescription: localize('scm.diffDecorationsGutterAction', \"Controls the behavior of Source Control diff gutter decorations.\"),\n\t\t\tdefault: 'diff'\n\t\t},\n\t\t'scm.diffDecorationsGutterPattern': {\n\t\t\ttype: 'object',\n\t\t\tdescription: localize('diffGutterPattern', \"Controls whether a pattern is used for the diff decorations in gutter.\"),\n\t\t\tadditionalProperties: false,\n\t\t\tproperties: {\n\t\t\t\t'added': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdescription: localize('diffGutterPatternAdded', \"Use pattern for the diff decorations in gutter for added lines.\"),\n\t\t\t\t},\n\t\t\t\t'modified': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdescription: localize('diffGutterPatternModifed', \"Use pattern for the diff decorations in gutter for modified lines.\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tdefault: {\n\t\t\t\t'added': false,\n\t\t\t\t'modified': true\n\t\t\t}\n\t\t},\n\t\t'scm.diffDecorationsIgnoreTrimWhitespace': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['true', 'false', 'inherit'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('scm.diffDecorationsIgnoreTrimWhitespace.true', \"Ignore leading and trailing whitespace.\"),\n\t\t\t\tlocalize('scm.diffDecorationsIgnoreTrimWhitespace.false', \"Do not ignore leading and trailing whitespace.\"),\n\t\t\t\tlocalize('scm.diffDecorationsIgnoreTrimWhitespace.inherit', \"Inherit from `diffEditor.ignoreTrimWhitespace`.\")\n\t\t\t],\n\t\t\tdescription: localize('diffDecorationsIgnoreTrimWhitespace', \"Controls whether leading and trailing whitespace is ignored in Source Control diff gutter decorations.\"),\n\t\t\tdefault: 'false'\n\t\t},\n\t\t'scm.alwaysShowActions': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: localize('alwaysShowActions', \"Controls whether inline actions are always visible in the Source Control view.\"),\n\t\t\tdefault: false\n\t\t},\n\t\t'scm.countBadge': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['all', 'focused', 'off'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('scm.countBadge.all', \"Show the sum of all Source Control Provider count badges.\"),\n\t\t\t\tlocalize('scm.countBadge.focused', \"Show the count badge of the focused Source Control Provider.\"),\n\t\t\t\tlocalize('scm.countBadge.off', \"Disable the Source Control count badge.\")\n\t\t\t],\n\t\t\tdescription: localize('scm.countBadge', \"Controls the count badge on the Source Control icon on the Activity Bar.\"),\n\t\t\tdefault: 'all'\n\t\t},\n\t\t'scm.providerCountBadge': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['hidden', 'auto', 'visible'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('scm.providerCountBadge.hidden', \"Hide Source Control Provider count badges.\"),\n\t\t\t\tlocalize('scm.providerCountBadge.auto', \"Only show count badge for Source Control Provider when non-zero.\"),\n\t\t\t\tlocalize('scm.providerCountBadge.visible', \"Show Source Control Provider count badges.\")\n\t\t\t],\n\t\t\tmarkdownDescription: localize('scm.providerCountBadge', \"Controls the count badges on Source Control Provider headers. These headers appear in the Source Control view when there is more than one provider or when the {0} setting is enabled, and in the Source Control Repositories view.\", '\\`#scm.alwaysShowRepositories#\\`'),\n\t\t\tdefault: 'hidden'\n\t\t},\n\t\t'scm.defaultViewMode': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['tree', 'list'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('scm.defaultViewMode.tree', \"Show the repository changes as a tree.\"),\n\t\t\t\tlocalize('scm.defaultViewMode.list', \"Show the repository changes as a list.\")\n\t\t\t],\n\t\t\tdescription: localize('scm.defaultViewMode', \"Controls the default Source Control repository view mode.\"),\n\t\t\tdefault: 'list'\n\t\t},\n\t\t'scm.defaultViewSortKey': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['name', 'path', 'status'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('scm.defaultViewSortKey.name', \"Sort the repository changes by file name.\"),\n\t\t\t\tlocalize('scm.defaultViewSortKey.path', \"Sort the repository changes by path.\"),\n\t\t\t\tlocalize('scm.defaultViewSortKey.status', \"Sort the repository changes by Source Control status.\")\n\t\t\t],\n\t\t\tdescription: localize('scm.defaultViewSortKey', \"Controls the default Source Control repository changes sort order when viewed as a list.\"),\n\t\t\tdefault: 'path'\n\t\t},\n\t\t'scm.autoReveal': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: localize('autoReveal', \"Controls whether the Source Control view should automatically reveal and select files when opening them.\"),\n\t\t\tdefault: true\n\t\t},\n\t\t'scm.inputFontFamily': {\n\t\t\ttype: 'string',\n\t\t\tmarkdownDescription: localize('inputFontFamily', \"Controls the font for the input message. Use `default` for the workbench user interface font family, `editor` for the `#editor.fontFamily#`'s value, or a custom font family.\"),\n\t\t\tdefault: 'default'\n\t\t},\n\t\t'scm.inputFontSize': {\n\t\t\ttype: 'number',\n\t\t\tmarkdownDescription: localize('inputFontSize', \"Controls the font size for the input message in pixels.\"),\n\t\t\tdefault: 13\n\t\t},\n\t\t'scm.inputMaxLineCount': {\n\t\t\ttype: 'number',\n\t\t\tmarkdownDescription: localize('inputMaxLines', \"Controls the maximum number of lines that the input will auto-grow to.\"),\n\t\t\tminimum: 1,\n\t\t\tmaximum: 50,\n\t\t\tdefault: 10\n\t\t},\n\t\t'scm.inputMinLineCount': {\n\t\t\ttype: 'number',\n\t\t\tmarkdownDescription: localize('inputMinLines', \"Controls the minimum number of lines that the input will auto-grow from.\"),\n\t\t\tminimum: 1,\n\t\t\tmaximum: 50,\n\t\t\tdefault: 1\n\t\t},\n\t\t'scm.alwaysShowRepositories': {\n\t\t\ttype: 'boolean',\n\t\t\tmarkdownDescription: localize('alwaysShowRepository', \"Controls whether repositories should always be visible in the Source Control view.\"),\n\t\t\tdefault: false\n\t\t},\n\t\t'scm.repositories.sortOrder': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['discovery time', 'name', 'path'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('scm.repositoriesSortOrder.discoveryTime', \"Repositories in the Source Control Repositories view are sorted by discovery time. Repositories in the Source Control view are sorted in the order that they were selected.\"),\n\t\t\t\tlocalize('scm.repositoriesSortOrder.name', \"Repositories in the Source Control Repositories and Source Control views are sorted by repository name.\"),\n\t\t\t\tlocalize('scm.repositoriesSortOrder.path', \"Repositories in the Source Control Repositories and Source Control views are sorted by repository path.\")\n\t\t\t],\n\t\t\tdescription: localize('repositoriesSortOrder', \"Controls the sort order of the repositories in the source control repositories view.\"),\n\t\t\tdefault: 'discovery time'\n\t\t},\n\t\t'scm.repositories.visible': {\n\t\t\ttype: 'number',\n\t\t\tdescription: localize('providersVisible', \"Controls how many repositories are visible in the Source Control Repositories section. Set to 0, to be able to manually resize the view.\"),\n\t\t\tdefault: 10\n\t\t},\n\t\t'scm.showActionButton': {\n\t\t\ttype: 'boolean',\n\t\t\tmarkdownDescription: localize('showActionButton', \"Controls whether an action button can be shown in the Source Control view.\"),\n\t\t\tdefault: true\n\t\t},\n\t\t'scm.showInputActionButton': {\n\t\t\ttype: 'boolean',\n\t\t\tmarkdownDescription: localize('showInputActionButton', \"Controls whether an action button can be shown in the Source Control input.\"),\n\t\t\tdefault: true\n\t\t},\n\t\t'scm.workingSets.enabled': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: localize('scm.workingSets.enabled', \"Controls whether to store editor working sets when switching between source control history item groups.\"),\n\t\t\tdefault: false\n\t\t},\n\t\t'scm.workingSets.default': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['empty', 'current'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('scm.workingSets.default.empty', \"Use an empty working set when switching to a source control history item group that does not have a working set.\"),\n\t\t\t\tlocalize('scm.workingSets.default.current', \"Use the current working set when switching to a source control history item group that does not have a working set.\")\n\t\t\t],\n\t\t\tdescription: localize('scm.workingSets.default', \"Controls the default working set to use when switching to a source control history item group that does not have a working set.\"),\n\t\t\tdefault: 'current'\n\t\t},\n\t\t'scm.compactFolders': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: localize('scm.compactFolders', \"Controls whether the Source Control view should render folders in a compact form. In such a form, single child folders will be compressed in a combined tree element.\"),\n\t\t\tdefault: true\n\t\t},\n\t\t'scm.graph.pageOnScroll': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: localize('scm.graph.pageOnScroll', \"Controls whether the Source Control Graph view will load the next page of items when you scroll to the end of the list.\"),\n\t\t\tdefault: true\n\t\t},\n\t\t'scm.graph.pageSize': {\n\t\t\ttype: 'number',\n\t\t\tdescription: localize('scm.graph.pageSize', \"The number of items to show in the Source Control Graph view by default and when loading more items.\"),\n\t\t\tminimum: 1,\n\t\t\tmaximum: 1000,\n\t\t\tdefault: 50\n\t\t},\n\t\t'scm.graph.badges': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['all', 'filter'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('scm.graph.badges.all', \"Show badges of all history item groups in the Source Control Graph view.\"),\n\t\t\t\tlocalize('scm.graph.badges.filter', \"Show only the badges of history item groups used as a filter in the Source Control Graph view.\")\n\t\t\t],\n\t\t\tdescription: localize('scm.graph.badges', \"Controls which badges are shown in the Source Control Graph view. The badges are shown on the right side of the graph indicating the names of history item groups.\"),\n\t\t\tdefault: 'filter'\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'scm.acceptInput',\n\tmetadata: { description: localize('scm accept', \"Source Control: Accept Input\"), args: [] },\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.has('scmRepository'),\n\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\thandler: accessor => {\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tconst context = contextKeyService.getContext(getActiveElement());\n\t\tconst repositoryId = context.getValue<string | undefined>('scmRepository');\n\n\t\tif (!repositoryId) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst scmService = accessor.get(ISCMService);\n\t\tconst repository = scmService.getRepository(repositoryId);\n\n\t\tif (!repository?.provider.acceptInputCommand) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst id = repository.provider.acceptInputCommand.id;\n\t\tconst args = repository.provider.acceptInputCommand.arguments;\n\t\tconst commandService = accessor.get(ICommandService);\n\n\t\treturn commandService.executeCommand(id, ...(args || []));\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'scm.clearInput',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(ContextKeyExpr.has('scmRepository'), SuggestContext.Visible.toNegated()),\n\tprimary: KeyCode.Escape,\n\thandler: async (accessor) => {\n\t\tconst scmService = accessor.get(ISCMService);\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\n\t\tconst context = contextKeyService.getContext(getActiveElement());\n\t\tconst repositoryId = context.getValue<string | undefined>('scmRepository');\n\t\tconst repository = repositoryId ? scmService.getRepository(repositoryId) : undefined;\n\t\trepository?.input.setValue('', true);\n\t}\n});\n\nconst viewNextCommitCommand = {\n\tdescription: { description: localize('scm view next commit', \"Source Control: View Next Commit\"), args: [] },\n\tweight: KeybindingWeight.WorkbenchContrib,\n\thandler: (accessor: ServicesAccessor) => {\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tconst scmService = accessor.get(ISCMService);\n\t\tconst context = contextKeyService.getContext(getActiveElement());\n\t\tconst repositoryId = context.getValue<string | undefined>('scmRepository');\n\t\tconst repository = repositoryId ? scmService.getRepository(repositoryId) : undefined;\n\t\trepository?.input.showNextHistoryValue();\n\t}\n};\n\nconst viewPreviousCommitCommand = {\n\tdescription: { description: localize('scm view previous commit', \"Source Control: View Previous Commit\"), args: [] },\n\tweight: KeybindingWeight.WorkbenchContrib,\n\thandler: (accessor: ServicesAccessor) => {\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tconst scmService = accessor.get(ISCMService);\n\t\tconst context = contextKeyService.getContext(getActiveElement());\n\t\tconst repositoryId = context.getValue<string | undefined>('scmRepository');\n\t\tconst repository = repositoryId ? scmService.getRepository(repositoryId) : undefined;\n\t\trepository?.input.showPreviousHistoryValue();\n\t}\n};\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t...viewNextCommitCommand,\n\tid: 'scm.viewNextCommit',\n\twhen: ContextKeyExpr.and(ContextKeyExpr.has('scmRepository'), ContextKeyExpr.has('scmInputIsInLastPosition'), SuggestContext.Visible.toNegated()),\n\tprimary: KeyCode.DownArrow\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t...viewPreviousCommitCommand,\n\tid: 'scm.viewPreviousCommit',\n\twhen: ContextKeyExpr.and(ContextKeyExpr.has('scmRepository'), ContextKeyExpr.has('scmInputIsInFirstPosition'), SuggestContext.Visible.toNegated()),\n\tprimary: KeyCode.UpArrow\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t...viewNextCommitCommand,\n\tid: 'scm.forceViewNextCommit',\n\twhen: ContextKeyExpr.has('scmRepository'),\n\tprimary: KeyMod.Alt | KeyCode.DownArrow\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t...viewPreviousCommitCommand,\n\tid: 'scm.forceViewPreviousCommit',\n\twhen: ContextKeyExpr.has('scmRepository'),\n\tprimary: KeyMod.Alt | KeyCode.UpArrow\n});\n\nCommandsRegistry.registerCommand('scm.openInIntegratedTerminal', async (accessor, ...providers: ISCMProvider[]) => {\n\tif (!providers || providers.length === 0) {\n\t\treturn;\n\t}\n\n\tconst commandService = accessor.get(ICommandService);\n\tconst listService = accessor.get(IListService);\n\n\tlet provider = providers.length === 1 ? providers[0] : undefined;\n\n\tif (!provider) {\n\t\tconst list = listService.lastFocusedList;\n\t\tconst element = list?.getHTMLElement();\n\n\t\tif (list instanceof WorkbenchList && element && isActiveElement(element)) {\n\t\t\tconst [index] = list.getFocus();\n\t\t\tconst focusedElement = list.element(index);\n\n\t\t\t// Source Control Repositories\n\t\t\tif (isSCMRepository(focusedElement)) {\n\t\t\t\tprovider = focusedElement.provider;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!provider?.rootUri) {\n\t\treturn;\n\t}\n\n\tawait commandService.executeCommand('openInIntegratedTerminal', provider.rootUri);\n});\n\nCommandsRegistry.registerCommand('scm.openInTerminal', async (accessor, provider: ISCMProvider) => {\n\tif (!provider || !provider.rootUri) {\n\t\treturn;\n\t}\n\n\tconst commandService = accessor.get(ICommandService);\n\tawait commandService.executeCommand('openInTerminal', provider.rootUri);\n});\n\nMenuRegistry.appendMenuItem(MenuId.SCMSourceControl, {\n\tgroup: '100_end',\n\tcommand: {\n\t\tid: 'scm.openInTerminal',\n\t\ttitle: localize('open in external terminal', \"Open in External Terminal\")\n\t},\n\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('scmProviderHasRootUri', true), ContextKeyExpr.or(ContextKeyExpr.equals('config.terminal.sourceControlRepositoriesKind', 'external'), ContextKeyExpr.equals('config.terminal.sourceControlRepositoriesKind', 'both')))\n});\n\nMenuRegistry.appendMenuItem(MenuId.SCMSourceControl, {\n\tgroup: '100_end',\n\tcommand: {\n\t\tid: 'scm.openInIntegratedTerminal',\n\t\ttitle: localize('open in integrated terminal', \"Open in Integrated Terminal\")\n\t},\n\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('scmProviderHasRootUri', true), ContextKeyExpr.or(ContextKeyExpr.equals('config.terminal.sourceControlRepositoriesKind', 'integrated'), ContextKeyExpr.equals('config.terminal.sourceControlRepositoriesKind', 'both')))\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'workbench.scm.action.focusPreviousInput',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeys.RepositoryVisibilityCount.notEqualsTo(0),\n\thandler: async accessor => {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst scmView = await viewsService.openView<SCMViewPane>(VIEW_PANE_ID);\n\t\tif (scmView) {\n\t\t\tscmView.focusPreviousInput();\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'workbench.scm.action.focusNextInput',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeys.RepositoryVisibilityCount.notEqualsTo(0),\n\thandler: async accessor => {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst scmView = await viewsService.openView<SCMViewPane>(VIEW_PANE_ID);\n\t\tif (scmView) {\n\t\t\tscmView.focusNextInput();\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'workbench.scm.action.focusPreviousResourceGroup',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\thandler: async accessor => {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst scmView = await viewsService.openView<SCMViewPane>(VIEW_PANE_ID);\n\t\tif (scmView) {\n\t\t\tscmView.focusPreviousResourceGroup();\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'workbench.scm.action.focusNextResourceGroup',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\thandler: async accessor => {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst scmView = await viewsService.openView<SCMViewPane>(VIEW_PANE_ID);\n\t\tif (scmView) {\n\t\t\tscmView.focusNextResourceGroup();\n\t\t}\n\t}\n});\n\nregisterSingleton(ISCMService, SCMService, InstantiationType.Delayed);\nregisterSingleton(ISCMViewService, SCMViewService, InstantiationType.Delayed);\nregisterSingleton(IQuickDiffService, QuickDiffService, InstantiationType.Delayed);\n"],
  "mappings": "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",
  "names": []
}
