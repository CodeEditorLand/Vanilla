{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/scm/browser/scmRepositoryRenderer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/scm.css\";\nimport { $, append } from \"../../../../base/browser/dom.js\";\nimport type { IActionViewItemProvider } from \"../../../../base/browser/ui/actionbar/actionbar.js\";\nimport { CountBadge } from \"../../../../base/browser/ui/countBadge/countBadge.js\";\nimport type { IManagedHover } from \"../../../../base/browser/ui/hover/hover.js\";\nimport { getDefaultHoverDelegate } from \"../../../../base/browser/ui/hover/hoverDelegateFactory.js\";\nimport type { IListRenderer } from \"../../../../base/browser/ui/list/list.js\";\nimport type { ICompressibleTreeRenderer } from \"../../../../base/browser/ui/tree/objectTree.js\";\nimport type { ITreeNode } from \"../../../../base/browser/ui/tree/tree.js\";\nimport { ActionRunner, type IAction } from \"../../../../base/common/actions.js\";\nimport type { FuzzyScore } from \"../../../../base/common/filters.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n\tcombinedDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { autorun } from \"../../../../base/common/observable.js\";\nimport { WorkbenchToolBar } from \"../../../../platform/actions/browser/toolbar.js\";\nimport {\n\tIMenuService,\n\tMenuId,\n\tMenuItemAction,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextMenuService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { defaultCountBadgeStyles } from \"../../../../platform/theme/browser/defaultStyles.js\";\nimport {\n\ttype ISCMProvider,\n\ttype ISCMRepository,\n\tISCMViewService,\n} from \"../common/scm.js\";\nimport {\n\tStatusBarAction,\n\tconnectPrimaryMenu,\n\tgetRepositoryResourceCount,\n\tisSCMRepository,\n} from \"./util.js\";\n\nexport class RepositoryActionRunner extends ActionRunner {\n\tconstructor(\n\t\tprivate readonly getSelectedRepositories: () => ISCMRepository[],\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected override async runAction(\n\t\taction: IAction,\n\t\tcontext: ISCMProvider,\n\t): Promise<void> {\n\t\tif (!(action instanceof MenuItemAction)) {\n\t\t\treturn super.runAction(action, context);\n\t\t}\n\n\t\tconst selection = this.getSelectedRepositories().map((r) => r.provider);\n\t\tconst actionContext = selection.some((s) => s === context)\n\t\t\t? selection\n\t\t\t: [context];\n\n\t\tawait action.run(...actionContext);\n\t}\n}\n\ninterface RepositoryTemplate {\n\treadonly label: HTMLElement;\n\treadonly labelCustomHover: IManagedHover;\n\treadonly name: HTMLElement;\n\treadonly description: HTMLElement;\n\treadonly countContainer: HTMLElement;\n\treadonly count: CountBadge;\n\treadonly toolBar: WorkbenchToolBar;\n\treadonly elementDisposables: DisposableStore;\n\treadonly templateDisposable: IDisposable;\n}\n\nexport class RepositoryRenderer\n\timplements\n\t\tICompressibleTreeRenderer<\n\t\t\tISCMRepository,\n\t\t\tFuzzyScore,\n\t\t\tRepositoryTemplate\n\t\t>,\n\t\tIListRenderer<ISCMRepository, RepositoryTemplate>\n{\n\tstatic readonly TEMPLATE_ID = \"repository\";\n\tget templateId(): string {\n\t\treturn RepositoryRenderer.TEMPLATE_ID;\n\t}\n\n\tconstructor(\n\t\tprivate readonly toolbarMenuId: MenuId,\n\t\tprivate readonly actionViewItemProvider: IActionViewItemProvider,\n\t\t@ICommandService private commandService: ICommandService,\n\t\t@IContextKeyService private contextKeyService: IContextKeyService,\n\t\t@IContextMenuService private contextMenuService: IContextMenuService,\n\t\t@IHoverService private hoverService: IHoverService,\n\t\t@IKeybindingService private keybindingService: IKeybindingService,\n\t\t@IMenuService private menuService: IMenuService,\n\t\t@ISCMViewService private scmViewService: ISCMViewService,\n\t\t@ITelemetryService private telemetryService: ITelemetryService\n\t) { }\n\n\trenderTemplate(container: HTMLElement): RepositoryTemplate {\n\t\t// hack\n\t\tif (container.classList.contains(\"monaco-tl-contents\")) {\n\t\t\t(\n\t\t\t\tcontainer.parentElement!.parentElement!.querySelector(\n\t\t\t\t\t\".monaco-tl-twistie\",\n\t\t\t\t)! as HTMLElement\n\t\t\t).classList.add(\"force-twistie\");\n\t\t}\n\n\t\tconst provider = append(container, $(\".scm-provider\"));\n\t\tconst label = append(provider, $(\".label\"));\n\t\tconst labelCustomHover = this.hoverService.setupManagedHover(\n\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\tlabel,\n\t\t\t\"\",\n\t\t\t{},\n\t\t);\n\t\tconst name = append(label, $(\"span.name\"));\n\t\tconst description = append(label, $(\"span.description\"));\n\t\tconst actions = append(provider, $(\".actions\"));\n\t\tconst toolBar = new WorkbenchToolBar(\n\t\t\tactions,\n\t\t\t{\n\t\t\t\tactionViewItemProvider: this.actionViewItemProvider,\n\t\t\t\tresetMenu: this.toolbarMenuId,\n\t\t\t},\n\t\t\tthis.menuService,\n\t\t\tthis.contextKeyService,\n\t\t\tthis.contextMenuService,\n\t\t\tthis.keybindingService,\n\t\t\tthis.commandService,\n\t\t\tthis.telemetryService,\n\t\t);\n\t\tconst countContainer = append(provider, $(\".count\"));\n\t\tconst count = new CountBadge(\n\t\t\tcountContainer,\n\t\t\t{},\n\t\t\tdefaultCountBadgeStyles,\n\t\t);\n\t\tconst visibilityDisposable = toolBar.onDidChangeDropdownVisibility(\n\t\t\t(e) => provider.classList.toggle(\"active\", e),\n\t\t);\n\n\t\tconst templateDisposable = combinedDisposable(\n\t\t\tlabelCustomHover,\n\t\t\tvisibilityDisposable,\n\t\t\ttoolBar,\n\t\t);\n\n\t\treturn {\n\t\t\tlabel,\n\t\t\tlabelCustomHover,\n\t\t\tname,\n\t\t\tdescription,\n\t\t\tcountContainer,\n\t\t\tcount,\n\t\t\ttoolBar,\n\t\t\telementDisposables: new DisposableStore(),\n\t\t\ttemplateDisposable,\n\t\t};\n\t}\n\n\trenderElement(\n\t\targ: ISCMRepository | ITreeNode<ISCMRepository, FuzzyScore>,\n\t\tindex: number,\n\t\ttemplateData: RepositoryTemplate,\n\t\theight: number | undefined,\n\t): void {\n\t\tconst repository = isSCMRepository(arg) ? arg : arg.element;\n\n\t\ttemplateData.name.textContent = repository.provider.name;\n\t\tif (repository.provider.rootUri) {\n\t\t\ttemplateData.labelCustomHover.update(\n\t\t\t\t`${repository.provider.label}: ${repository.provider.rootUri.fsPath}`,\n\t\t\t);\n\t\t\ttemplateData.description.textContent = repository.provider.label;\n\t\t} else {\n\t\t\ttemplateData.labelCustomHover.update(repository.provider.label);\n\t\t\ttemplateData.description.textContent = \"\";\n\t\t}\n\n\t\tlet statusPrimaryActions: IAction[] = [];\n\t\tlet menuPrimaryActions: IAction[] = [];\n\t\tlet menuSecondaryActions: IAction[] = [];\n\t\tconst updateToolbar = () => {\n\t\t\ttemplateData.toolBar.setActions(\n\t\t\t\t[...statusPrimaryActions, ...menuPrimaryActions],\n\t\t\t\tmenuSecondaryActions,\n\t\t\t);\n\t\t};\n\n\t\ttemplateData.elementDisposables.add(\n\t\t\tautorun((reader) => {\n\t\t\t\tconst commands =\n\t\t\t\t\trepository.provider.statusBarCommands.read(reader) ?? [];\n\t\t\t\tstatusPrimaryActions = commands.map(\n\t\t\t\t\t(c) => new StatusBarAction(c, this.commandService),\n\t\t\t\t);\n\t\t\t\tupdateToolbar();\n\t\t\t}),\n\t\t);\n\n\t\ttemplateData.elementDisposables.add(\n\t\t\tautorun((reader) => {\n\t\t\t\tconst count =\n\t\t\t\t\trepository.provider.count.read(reader) ??\n\t\t\t\t\tgetRepositoryResourceCount(repository.provider);\n\t\t\t\ttemplateData.countContainer.setAttribute(\n\t\t\t\t\t\"data-count\",\n\t\t\t\t\tString(count),\n\t\t\t\t);\n\t\t\t\ttemplateData.count.setCount(count);\n\t\t\t}),\n\t\t);\n\n\t\tconst repositoryMenus = this.scmViewService.menus.getRepositoryMenus(\n\t\t\trepository.provider,\n\t\t);\n\t\tconst menu =\n\t\t\tthis.toolbarMenuId === MenuId.SCMTitle\n\t\t\t\t? repositoryMenus.titleMenu.menu\n\t\t\t\t: repositoryMenus.repositoryMenu;\n\t\ttemplateData.elementDisposables.add(\n\t\t\tconnectPrimaryMenu(menu, (primary, secondary) => {\n\t\t\t\tmenuPrimaryActions = primary;\n\t\t\t\tmenuSecondaryActions = secondary;\n\t\t\t\tupdateToolbar();\n\t\t\t}),\n\t\t);\n\n\t\ttemplateData.toolBar.context = repository.provider;\n\t}\n\n\trenderCompressedElements(): void {\n\t\tthrow new Error(\"Should never happen since node is incompressible\");\n\t}\n\n\tdisposeElement(\n\t\tgroup: ISCMRepository | ITreeNode<ISCMRepository, FuzzyScore>,\n\t\tindex: number,\n\t\ttemplate: RepositoryTemplate,\n\t): void {\n\t\ttemplate.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: RepositoryTemplate): void {\n\t\ttemplateData.elementDisposables.dispose();\n\t\ttemplateData.templateDisposable.dispose();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
