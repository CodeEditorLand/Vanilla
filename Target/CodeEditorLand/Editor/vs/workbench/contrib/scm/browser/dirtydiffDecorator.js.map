{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/scm/browser/dirtydiffDecorator.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\n\nimport './media/dirtydiffDecorator.css';\nimport { ThrottledDelayer } from '../../../../base/common/async.js';\nimport { IDisposable, dispose, toDisposable, Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { Event, Emitter } from '../../../../base/common/event.js';\nimport * as ext from '../../../common/contributions.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IResolvedTextEditorModel, ITextModelService } from '../../../../editor/common/services/resolverService.js';\nimport { IEditorWorkerService } from '../../../../editor/common/services/editorWorker.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ISCMService, ISCMRepository } from '../common/scm.js';\nimport { ModelDecorationOptions } from '../../../../editor/common/model/textModel.js';\nimport { IColorTheme, themeColorFromId, IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { editorErrorForeground, registerColor, transparent } from '../../../../platform/theme/common/colorRegistry.js';\nimport { ICodeEditor, IEditorMouseEvent, isCodeEditor, MouseTargetType } from '../../../../editor/browser/editorBrowser.js';\nimport { registerEditorAction, registerEditorContribution, ServicesAccessor, EditorAction, EditorContributionInstantiation } from '../../../../editor/browser/editorExtensions.js';\nimport { PeekViewWidget, getOuterEditor, peekViewBorder, peekViewTitleBackground, peekViewTitleForeground, peekViewTitleInfoForeground } from '../../../../editor/contrib/peekView/browser/peekView.js';\nimport { IContextKeyService, IContextKey, ContextKeyExpr, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { EditorContextKeys } from '../../../../editor/common/editorContextKeys.js';\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { Position } from '../../../../editor/common/core/position.js';\nimport { Range } from '../../../../editor/common/core/range.js';\nimport { rot } from '../../../../base/common/numbers.js';\nimport { KeybindingsRegistry, KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { EmbeddedDiffEditorWidget } from '../../../../editor/browser/widget/diffEditor/embeddedDiffEditorWidget.js';\nimport { IDiffEditorOptions, EditorOption } from '../../../../editor/common/config/editorOptions.js';\nimport { Action, IAction, ActionRunner } from '../../../../base/common/actions.js';\nimport { IActionBarOptions } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { basename } from '../../../../base/common/resources.js';\nimport { MenuId, IMenuService, IMenu, MenuItemAction, MenuRegistry } from '../../../../platform/actions/common/actions.js';\nimport { createAndFillInActionBarActions } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { ScrollType, IEditorContribution, IDiffEditorModel, IEditorModel, IEditorDecorationsCollection } from '../../../../editor/common/editorCommon.js';\nimport { OverviewRulerLane, ITextModel, IModelDecorationOptions, MinimapPosition, shouldSynchronizeModel } from '../../../../editor/common/model.js';\nimport { equals, sortedDiff } from '../../../../base/common/arrays.js';\nimport { ICodeEditorService } from '../../../../editor/browser/services/codeEditorService.js';\nimport { ISplice } from '../../../../base/common/sequence.js';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { EncodingMode, ITextFileEditorModel, IResolvedTextFileEditorModel, ITextFileService, isTextFileEditorModel } from '../../../services/textfile/common/textfiles.js';\nimport { gotoNextLocation, gotoPreviousLocation } from '../../../../platform/theme/common/iconRegistry.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { TextCompareEditorActiveContext } from '../../../common/contextkeys.js';\nimport { IProgressService, ProgressLocation } from '../../../../platform/progress/common/progress.js';\nimport { IChange } from '../../../../editor/common/diff/legacyLinesDiffComputer.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { ResourceMap } from '../../../../base/common/map.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { IQuickDiffService, QuickDiff } from '../common/quickDiff.js';\nimport { IQuickDiffSelectItem, SwitchQuickDiffBaseAction, SwitchQuickDiffViewItem } from './dirtyDiffSwitcher.js';\n\nclass DiffActionRunner extends ActionRunner {\n\n\tprotected override runAction(action: IAction, context: any): Promise<any> {\n\t\tif (action instanceof MenuItemAction) {\n\t\t\treturn action.run(...context);\n\t\t}\n\n\t\treturn super.runAction(action, context);\n\t}\n}\n\nexport interface IModelRegistry {\n\tgetModel(editorModel: IEditorModel, codeEditor: ICodeEditor): DirtyDiffModel | undefined;\n}\n\nexport interface DirtyDiffContribution extends IEditorContribution {\n\tgetChanges(): IChange[];\n}\n\nexport const isDirtyDiffVisible = new RawContextKey<boolean>('dirtyDiffVisible', false);\n\nfunction getChangeHeight(change: IChange): number {\n\tconst modified = change.modifiedEndLineNumber - change.modifiedStartLineNumber + 1;\n\tconst original = change.originalEndLineNumber - change.originalStartLineNumber + 1;\n\n\tif (change.originalEndLineNumber === 0) {\n\t\treturn modified;\n\t} else if (change.modifiedEndLineNumber === 0) {\n\t\treturn original;\n\t} else {\n\t\treturn modified + original;\n\t}\n}\n\nfunction getModifiedEndLineNumber(change: IChange): number {\n\tif (change.modifiedEndLineNumber === 0) {\n\t\treturn change.modifiedStartLineNumber === 0 ? 1 : change.modifiedStartLineNumber;\n\t} else {\n\t\treturn change.modifiedEndLineNumber;\n\t}\n}\n\nfunction lineIntersectsChange(lineNumber: number, change: IChange): boolean {\n\t// deletion at the beginning of the file\n\tif (lineNumber === 1 && change.modifiedStartLineNumber === 0 && change.modifiedEndLineNumber === 0) {\n\t\treturn true;\n\t}\n\n\treturn lineNumber >= change.modifiedStartLineNumber && lineNumber <= (change.modifiedEndLineNumber || change.modifiedStartLineNumber);\n}\n\nclass UIEditorAction extends Action {\n\n\tprivate editor: ICodeEditor;\n\tprivate action: EditorAction;\n\tprivate instantiationService: IInstantiationService;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\taction: EditorAction,\n\t\tcssClass: string,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tconst keybinding = keybindingService.lookupKeybinding(action.id);\n\t\tconst label = action.label + (keybinding ? ` (${keybinding.getLabel()})` : '');\n\n\t\tsuper(action.id, label, cssClass);\n\n\t\tthis.instantiationService = instantiationService;\n\t\tthis.action = action;\n\t\tthis.editor = editor;\n\t}\n\n\toverride run(): Promise<any> {\n\t\treturn Promise.resolve(this.instantiationService.invokeFunction(accessor => this.action.run(accessor, this.editor, null)));\n\t}\n}\n\nenum ChangeType {\n\tModify,\n\tAdd,\n\tDelete\n}\n\nfunction getChangeType(change: IChange): ChangeType {\n\tif (change.originalEndLineNumber === 0) {\n\t\treturn ChangeType.Add;\n\t} else if (change.modifiedEndLineNumber === 0) {\n\t\treturn ChangeType.Delete;\n\t} else {\n\t\treturn ChangeType.Modify;\n\t}\n}\n\nfunction getChangeTypeColor(theme: IColorTheme, changeType: ChangeType): Color | undefined {\n\tswitch (changeType) {\n\t\tcase ChangeType.Modify: return theme.getColor(editorGutterModifiedBackground);\n\t\tcase ChangeType.Add: return theme.getColor(editorGutterAddedBackground);\n\t\tcase ChangeType.Delete: return theme.getColor(editorGutterDeletedBackground);\n\t}\n}\n\nfunction getOuterEditorFromDiffEditor(accessor: ServicesAccessor): ICodeEditor | null {\n\tconst diffEditors = accessor.get(ICodeEditorService).listDiffEditors();\n\n\tfor (const diffEditor of diffEditors) {\n\t\tif (diffEditor.hasTextFocus() && diffEditor instanceof EmbeddedDiffEditorWidget) {\n\t\t\treturn diffEditor.getParentEditor();\n\t\t}\n\t}\n\n\treturn getOuterEditor(accessor);\n}\n\nclass DirtyDiffWidget extends PeekViewWidget {\n\n\tprivate diffEditor!: EmbeddedDiffEditorWidget;\n\tprivate title: string;\n\tprivate menu: IMenu | undefined;\n\tprivate _index: number = 0;\n\tprivate _provider: string = '';\n\tprivate change: IChange | undefined;\n\tprivate height: number | undefined = undefined;\n\tprivate dropdown: SwitchQuickDiffViewItem | undefined;\n\tprivate dropdownContainer: HTMLElement | undefined;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\tprivate model: DirtyDiffModel,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IContextKeyService private contextKeyService: IContextKeyService\n\t) {\n\t\tsuper(editor, { isResizeable: true, frameWidth: 1, keepEditorSelection: true, className: 'dirty-diff' }, instantiationService);\n\n\t\tthis._disposables.add(themeService.onDidColorThemeChange(this._applyTheme, this));\n\t\tthis._applyTheme(themeService.getColorTheme());\n\n\t\tif (this.model.original.length > 0) {\n\t\t\tcontextKeyService = contextKeyService.createOverlay([['originalResourceScheme', this.model.original[0].uri.scheme], ['originalResourceSchemes', this.model.original.map(original => original.uri.scheme)]]);\n\t\t}\n\n\t\tthis.create();\n\t\tif (editor.hasModel()) {\n\t\t\tthis.title = basename(editor.getModel().uri);\n\t\t} else {\n\t\t\tthis.title = '';\n\t\t}\n\t\tthis.setTitle(this.title);\n\t}\n\n\tget provider(): string {\n\t\treturn this._provider;\n\t}\n\n\tget index(): number {\n\t\treturn this._index;\n\t}\n\n\tget visibleRange(): Range | undefined {\n\t\tconst visibleRanges = this.diffEditor.getModifiedEditor().getVisibleRanges();\n\t\treturn visibleRanges.length >= 0 ? visibleRanges[0] : undefined;\n\t}\n\n\tshowChange(index: number, usePosition: boolean = true): void {\n\t\tconst labeledChange = this.model.changes[index];\n\t\tconst change = labeledChange.change;\n\t\tthis._index = index;\n\t\tthis.contextKeyService.createKey('originalResourceScheme', this.model.changes[index].uri.scheme);\n\t\tthis.updateActions();\n\n\t\tthis._provider = labeledChange.label;\n\t\tthis.change = change;\n\n\t\tconst originalModel = this.model.original;\n\n\t\tif (!originalModel) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst onFirstDiffUpdate = Event.once(this.diffEditor.onDidUpdateDiff);\n\n\t\t// TODO@joao TODO@alex need this setTimeout probably because the\n\t\t// non-side-by-side diff still hasn't created the view zones\n\t\tonFirstDiffUpdate(() => setTimeout(() => this.revealChange(change), 0));\n\n\t\tconst diffEditorModel = this.model.getDiffEditorModel(labeledChange.uri.toString());\n\t\tif (!diffEditorModel) {\n\t\t\treturn;\n\t\t}\n\t\tthis.diffEditor.setModel(diffEditorModel);\n\t\tthis.dropdown?.setSelection(labeledChange.label);\n\n\t\tconst position = new Position(getModifiedEndLineNumber(change), 1);\n\n\t\tconst lineHeight = this.editor.getOption(EditorOption.lineHeight);\n\t\tconst editorHeight = this.editor.getLayoutInfo().height;\n\t\tconst editorHeightInLines = Math.floor(editorHeight / lineHeight);\n\t\tconst height = Math.min(getChangeHeight(change) + /* padding */ 8, Math.floor(editorHeightInLines / 3));\n\n\t\tthis.renderTitle(labeledChange.label);\n\n\t\tconst changeType = getChangeType(change);\n\t\tconst changeTypeColor = getChangeTypeColor(this.themeService.getColorTheme(), changeType);\n\t\tthis.style({ frameColor: changeTypeColor, arrowColor: changeTypeColor });\n\n\t\tconst providerSpecificChanges: IChange[] = [];\n\t\tlet contextIndex = index;\n\t\tfor (const change of this.model.changes) {\n\t\t\tif (change.label === this.model.changes[this._index].label) {\n\t\t\t\tproviderSpecificChanges.push(change.change);\n\t\t\t\tif (labeledChange === change) {\n\t\t\t\t\tcontextIndex = providerSpecificChanges.length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._actionbarWidget!.context = [diffEditorModel.modified.uri, providerSpecificChanges, contextIndex];\n\t\tif (usePosition) {\n\t\t\tthis.show(position, height);\n\t\t\tthis.editor.setPosition(position);\n\t\t\tthis.editor.focus();\n\t\t}\n\t}\n\n\tprivate renderTitle(label: string): void {\n\t\tconst providerChanges = this.model.mapChanges.get(label)!;\n\t\tconst providerIndex = providerChanges.indexOf(this._index);\n\n\t\tlet detail: string;\n\t\tif (!this.shouldUseDropdown()) {\n\t\t\tdetail = this.model.changes.length > 1\n\t\t\t\t? nls.localize('changes', \"{0} - {1} of {2} changes\", label, providerIndex + 1, providerChanges.length)\n\t\t\t\t: nls.localize('change', \"{0} - {1} of {2} change\", label, providerIndex + 1, providerChanges.length);\n\t\t\tthis.dropdownContainer!.style.display = 'none';\n\t\t} else {\n\t\t\tdetail = this.model.changes.length > 1\n\t\t\t\t? nls.localize('multiChanges', \"{0} of {1} changes\", providerIndex + 1, providerChanges.length)\n\t\t\t\t: nls.localize('multiChange', \"{0} of {1} change\", providerIndex + 1, providerChanges.length);\n\t\t\tthis.dropdownContainer!.style.display = 'inherit';\n\t\t}\n\n\t\tthis.setTitle(this.title, detail);\n\t}\n\n\tprivate switchQuickDiff(event?: IQuickDiffSelectItem) {\n\t\tconst newProvider = event?.provider;\n\t\tif (newProvider === this.model.changes[this._index].label) {\n\t\t\treturn;\n\t\t}\n\t\tlet closestGreaterIndex = this._index < this.model.changes.length - 1 ? this._index + 1 : 0;\n\t\tfor (let i = closestGreaterIndex; i !== this._index; i < this.model.changes.length - 1 ? i++ : i = 0) {\n\t\t\tif (this.model.changes[i].label === newProvider) {\n\t\t\t\tclosestGreaterIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tlet closestLesserIndex = this._index > 0 ? this._index - 1 : this.model.changes.length - 1;\n\t\tfor (let i = closestLesserIndex; i !== this._index; i >= 0 ? i-- : i = this.model.changes.length - 1) {\n\t\t\tif (this.model.changes[i].label === newProvider) {\n\t\t\t\tclosestLesserIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst closestIndex = Math.abs(this.model.changes[closestGreaterIndex].change.modifiedEndLineNumber - this.model.changes[this._index].change.modifiedEndLineNumber)\n\t\t\t< Math.abs(this.model.changes[closestLesserIndex].change.modifiedEndLineNumber - this.model.changes[this._index].change.modifiedEndLineNumber)\n\t\t\t? closestGreaterIndex : closestLesserIndex;\n\t\tthis.showChange(closestIndex, false);\n\t}\n\n\tprivate shouldUseDropdown(): boolean {\n\t\tlet providersWithChangesCount = 0;\n\t\tif (this.model.mapChanges.size > 1) {\n\t\t\tconst keys = Array.from(this.model.mapChanges.keys());\n\t\t\tfor (let i = 0; (i < keys.length) && (providersWithChangesCount <= 1); i++) {\n\t\t\t\tif (this.model.mapChanges.get(keys[i])!.length > 0) {\n\t\t\t\t\tprovidersWithChangesCount++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn providersWithChangesCount >= 2;\n\t}\n\n\tprivate updateActions(): void {\n\t\tif (!this._actionbarWidget) {\n\t\t\treturn;\n\t\t}\n\t\tconst previous = this.instantiationService.createInstance(UIEditorAction, this.editor, new ShowPreviousChangeAction(this.editor), ThemeIcon.asClassName(gotoPreviousLocation));\n\t\tconst next = this.instantiationService.createInstance(UIEditorAction, this.editor, new ShowNextChangeAction(this.editor), ThemeIcon.asClassName(gotoNextLocation));\n\n\t\tthis._disposables.add(previous);\n\t\tthis._disposables.add(next);\n\n\t\tconst actions: IAction[] = [];\n\t\tif (this.menu) {\n\t\t\tthis.menu.dispose();\n\t\t}\n\t\tthis.menu = this.menuService.createMenu(MenuId.SCMChangeContext, this.contextKeyService);\n\t\tcreateAndFillInActionBarActions(this.menu, { shouldForwardArgs: true }, actions);\n\t\tthis._actionbarWidget.clear();\n\t\tthis._actionbarWidget.push(actions.reverse(), { label: false, icon: true });\n\t\tthis._actionbarWidget.push([next, previous], { label: false, icon: true });\n\t\tthis._actionbarWidget.push(new Action('peekview.close', nls.localize('label.close', \"Close\"), ThemeIcon.asClassName(Codicon.close), true, () => this.dispose()), { label: false, icon: true });\n\t}\n\n\tprotected override _fillHead(container: HTMLElement): void {\n\t\tsuper._fillHead(container, true);\n\n\t\tthis.dropdownContainer = dom.prepend(this._titleElement!, dom.$('.dropdown'));\n\t\tthis.dropdown = this.instantiationService.createInstance(SwitchQuickDiffViewItem, new SwitchQuickDiffBaseAction((event?: IQuickDiffSelectItem) => this.switchQuickDiff(event)),\n\t\t\tthis.model.quickDiffs.map(quickDiffer => quickDiffer.label), this.model.changes[this._index].label);\n\t\tthis.dropdown.render(this.dropdownContainer);\n\t\tthis.updateActions();\n\t}\n\n\tprotected override _getActionBarOptions(): IActionBarOptions {\n\t\tconst actionRunner = new DiffActionRunner();\n\n\t\t// close widget on successful action\n\t\tactionRunner.onDidRun(e => {\n\t\t\tif (!(e.action instanceof UIEditorAction) && !e.error) {\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\t...super._getActionBarOptions(),\n\t\t\tactionRunner\n\t\t};\n\t}\n\n\tprotected _fillBody(container: HTMLElement): void {\n\t\tconst options: IDiffEditorOptions = {\n\t\t\tscrollBeyondLastLine: true,\n\t\t\tscrollbar: {\n\t\t\t\tverticalScrollbarSize: 14,\n\t\t\t\thorizontal: 'auto',\n\t\t\t\tuseShadows: true,\n\t\t\t\tverticalHasArrows: false,\n\t\t\t\thorizontalHasArrows: false\n\t\t\t},\n\t\t\toverviewRulerLanes: 2,\n\t\t\tfixedOverflowWidgets: true,\n\t\t\tminimap: { enabled: false },\n\t\t\trenderSideBySide: false,\n\t\t\treadOnly: false,\n\t\t\trenderIndicators: false,\n\t\t\tdiffAlgorithm: 'advanced',\n\t\t\tignoreTrimWhitespace: false,\n\t\t\tstickyScroll: { enabled: false }\n\t\t};\n\n\t\tthis.diffEditor = this.instantiationService.createInstance(EmbeddedDiffEditorWidget, container, options, {}, this.editor);\n\t\tthis._disposables.add(this.diffEditor);\n\t}\n\n\tprotected override _onWidth(width: number): void {\n\t\tif (typeof this.height === 'undefined') {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.diffEditor.layout({ height: this.height, width });\n\t}\n\n\tprotected override _doLayoutBody(height: number, width: number): void {\n\t\tsuper._doLayoutBody(height, width);\n\t\tthis.diffEditor.layout({ height, width });\n\n\t\tif (typeof this.height === 'undefined' && this.change) {\n\t\t\tthis.revealChange(this.change);\n\t\t}\n\n\t\tthis.height = height;\n\t}\n\n\tprivate revealChange(change: IChange): void {\n\t\tlet start: number, end: number;\n\n\t\tif (change.modifiedEndLineNumber === 0) { // deletion\n\t\t\tstart = change.modifiedStartLineNumber;\n\t\t\tend = change.modifiedStartLineNumber + 1;\n\t\t} else if (change.originalEndLineNumber > 0) { // modification\n\t\t\tstart = change.modifiedStartLineNumber - 1;\n\t\t\tend = change.modifiedEndLineNumber + 1;\n\t\t} else { // insertion\n\t\t\tstart = change.modifiedStartLineNumber;\n\t\t\tend = change.modifiedEndLineNumber;\n\t\t}\n\n\t\tthis.diffEditor.revealLinesInCenter(start, end, ScrollType.Immediate);\n\t}\n\n\tprivate _applyTheme(theme: IColorTheme) {\n\t\tconst borderColor = theme.getColor(peekViewBorder) || Color.transparent;\n\t\tthis.style({\n\t\t\tarrowColor: borderColor,\n\t\t\tframeColor: borderColor,\n\t\t\theaderBackgroundColor: theme.getColor(peekViewTitleBackground) || Color.transparent,\n\t\t\tprimaryHeadingColor: theme.getColor(peekViewTitleForeground),\n\t\t\tsecondaryHeadingColor: theme.getColor(peekViewTitleInfoForeground)\n\t\t});\n\t}\n\n\tprotected override revealRange(range: Range) {\n\t\tthis.editor.revealLineInCenterIfOutsideViewport(range.endLineNumber, ScrollType.Smooth);\n\t}\n\n\toverride hasFocus(): boolean {\n\t\treturn this.diffEditor.hasTextFocus();\n\t}\n\n\toverride dispose() {\n\t\tsuper.dispose();\n\t\tthis.menu?.dispose();\n\t}\n}\n\nexport class ShowPreviousChangeAction extends EditorAction {\n\n\tconstructor(private readonly outerEditor?: ICodeEditor) {\n\t\tsuper({\n\t\t\tid: 'editor.action.dirtydiff.previous',\n\t\t\tlabel: nls.localize('show previous change', \"Show Previous Change\"),\n\t\t\talias: 'Show Previous Change',\n\t\t\tprecondition: TextCompareEditorActiveContext.toNegated(),\n\t\t\tkbOpts: { kbExpr: EditorContextKeys.editorTextFocus, primary: KeyMod.Shift | KeyMod.Alt | KeyCode.F3, weight: KeybindingWeight.EditorContrib }\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst outerEditor = this.outerEditor ?? getOuterEditorFromDiffEditor(accessor);\n\n\t\tif (!outerEditor) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst controller = DirtyDiffController.get(outerEditor);\n\n\t\tif (!controller) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!controller.canNavigate()) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontroller.previous();\n\t}\n}\nregisterEditorAction(ShowPreviousChangeAction);\n\nexport class ShowNextChangeAction extends EditorAction {\n\n\tconstructor(private readonly outerEditor?: ICodeEditor) {\n\t\tsuper({\n\t\t\tid: 'editor.action.dirtydiff.next',\n\t\t\tlabel: nls.localize('show next change', \"Show Next Change\"),\n\t\t\talias: 'Show Next Change',\n\t\t\tprecondition: TextCompareEditorActiveContext.toNegated(),\n\t\t\tkbOpts: { kbExpr: EditorContextKeys.editorTextFocus, primary: KeyMod.Alt | KeyCode.F3, weight: KeybindingWeight.EditorContrib }\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst outerEditor = this.outerEditor ?? getOuterEditorFromDiffEditor(accessor);\n\n\t\tif (!outerEditor) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst controller = DirtyDiffController.get(outerEditor);\n\n\t\tif (!controller) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!controller.canNavigate()) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontroller.next();\n\t}\n}\nregisterEditorAction(ShowNextChangeAction);\n\n// Go to menu\nMenuRegistry.appendMenuItem(MenuId.MenubarGoMenu, {\n\tgroup: '7_change_nav',\n\tcommand: {\n\t\tid: 'editor.action.dirtydiff.next',\n\t\ttitle: nls.localize({ key: 'miGotoNextChange', comment: ['&& denotes a mnemonic'] }, \"Next &&Change\")\n\t},\n\torder: 1\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarGoMenu, {\n\tgroup: '7_change_nav',\n\tcommand: {\n\t\tid: 'editor.action.dirtydiff.previous',\n\t\ttitle: nls.localize({ key: 'miGotoPreviousChange', comment: ['&& denotes a mnemonic'] }, \"Previous &&Change\")\n\t},\n\torder: 2\n});\n\nexport class GotoPreviousChangeAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.editor.previousChange',\n\t\t\tlabel: nls.localize('move to previous change', \"Go to Previous Change\"),\n\t\t\talias: 'Go to Previous Change',\n\t\t\tprecondition: TextCompareEditorActiveContext.toNegated(),\n\t\t\tkbOpts: { kbExpr: EditorContextKeys.editorTextFocus, primary: KeyMod.Shift | KeyMod.Alt | KeyCode.F5, weight: KeybindingWeight.EditorContrib }\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst outerEditor = getOuterEditorFromDiffEditor(accessor);\n\t\tconst accessibilitySignalService = accessor.get(IAccessibilitySignalService);\n\t\tconst accessibilityService = accessor.get(IAccessibilityService);\n\t\tconst codeEditorService = accessor.get(ICodeEditorService);\n\n\t\tif (!outerEditor || !outerEditor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst controller = DirtyDiffController.get(outerEditor);\n\n\t\tif (!controller || !controller.modelRegistry) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst lineNumber = outerEditor.getPosition().lineNumber;\n\t\tconst model = controller.modelRegistry.getModel(outerEditor.getModel(), outerEditor);\n\t\tif (!model || model.changes.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst index = model.findPreviousClosestChange(lineNumber, false);\n\t\tconst change = model.changes[index];\n\t\tawait playAccessibilitySymbolForChange(change.change, accessibilitySignalService);\n\t\tsetPositionAndSelection(change.change, outerEditor, accessibilityService, codeEditorService);\n\t}\n}\nregisterEditorAction(GotoPreviousChangeAction);\n\nexport class GotoNextChangeAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.editor.nextChange',\n\t\t\tlabel: nls.localize('move to next change', \"Go to Next Change\"),\n\t\t\talias: 'Go to Next Change',\n\t\t\tprecondition: TextCompareEditorActiveContext.toNegated(),\n\t\t\tkbOpts: { kbExpr: EditorContextKeys.editorTextFocus, primary: KeyMod.Alt | KeyCode.F5, weight: KeybindingWeight.EditorContrib }\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst accessibilitySignalService = accessor.get(IAccessibilitySignalService);\n\t\tconst outerEditor = getOuterEditorFromDiffEditor(accessor);\n\t\tconst accessibilityService = accessor.get(IAccessibilityService);\n\t\tconst codeEditorService = accessor.get(ICodeEditorService);\n\n\t\tif (!outerEditor || !outerEditor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst controller = DirtyDiffController.get(outerEditor);\n\n\t\tif (!controller || !controller.modelRegistry) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst lineNumber = outerEditor.getPosition().lineNumber;\n\t\tconst model = controller.modelRegistry.getModel(outerEditor.getModel(), outerEditor);\n\n\t\tif (!model || model.changes.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst index = model.findNextClosestChange(lineNumber, false);\n\t\tconst change = model.changes[index].change;\n\t\tawait playAccessibilitySymbolForChange(change, accessibilitySignalService);\n\t\tsetPositionAndSelection(change, outerEditor, accessibilityService, codeEditorService);\n\t}\n}\n\nfunction setPositionAndSelection(change: IChange, editor: ICodeEditor, accessibilityService: IAccessibilityService, codeEditorService: ICodeEditorService) {\n\tconst position = new Position(change.modifiedStartLineNumber, 1);\n\teditor.setPosition(position);\n\teditor.revealPositionInCenter(position);\n\tif (accessibilityService.isScreenReaderOptimized()) {\n\t\teditor.setSelection({ startLineNumber: change.modifiedStartLineNumber, startColumn: 0, endLineNumber: change.modifiedStartLineNumber, endColumn: Number.MAX_VALUE });\n\t\tcodeEditorService.getActiveCodeEditor()?.writeScreenReaderContent('diff-navigation');\n\t}\n}\n\nasync function playAccessibilitySymbolForChange(change: IChange, accessibilitySignalService: IAccessibilitySignalService) {\n\tconst changeType = getChangeType(change);\n\tswitch (changeType) {\n\t\tcase ChangeType.Add:\n\t\t\taccessibilitySignalService.playSignal(AccessibilitySignal.diffLineInserted, { allowManyInParallel: true, source: 'dirtyDiffDecoration' });\n\t\t\tbreak;\n\t\tcase ChangeType.Delete:\n\t\t\taccessibilitySignalService.playSignal(AccessibilitySignal.diffLineDeleted, { allowManyInParallel: true, source: 'dirtyDiffDecoration' });\n\t\t\tbreak;\n\t\tcase ChangeType.Modify:\n\t\t\taccessibilitySignalService.playSignal(AccessibilitySignal.diffLineModified, { allowManyInParallel: true, source: 'dirtyDiffDecoration' });\n\t\t\tbreak;\n\t}\n}\n\nregisterEditorAction(GotoNextChangeAction);\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'closeDirtyDiff',\n\tweight: KeybindingWeight.EditorContrib + 50,\n\tprimary: KeyCode.Escape,\n\tsecondary: [KeyMod.Shift | KeyCode.Escape],\n\twhen: ContextKeyExpr.and(isDirtyDiffVisible),\n\thandler: (accessor: ServicesAccessor) => {\n\t\tconst outerEditor = getOuterEditorFromDiffEditor(accessor);\n\n\t\tif (!outerEditor) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst controller = DirtyDiffController.get(outerEditor);\n\n\t\tif (!controller) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontroller.close();\n\t}\n});\n\nexport class DirtyDiffController extends Disposable implements DirtyDiffContribution {\n\n\tpublic static readonly ID = 'editor.contrib.dirtydiff';\n\n\tstatic get(editor: ICodeEditor): DirtyDiffController | null {\n\t\treturn editor.getContribution<DirtyDiffController>(DirtyDiffController.ID);\n\t}\n\n\tmodelRegistry: IModelRegistry | null = null;\n\n\tprivate model: DirtyDiffModel | null = null;\n\tprivate widget: DirtyDiffWidget | null = null;\n\tprivate readonly isDirtyDiffVisible!: IContextKey<boolean>;\n\tprivate session: IDisposable = Disposable.None;\n\tprivate mouseDownInfo: { lineNumber: number } | null = null;\n\tprivate enabled = false;\n\tprivate readonly gutterActionDisposables = new DisposableStore();\n\tprivate stylesheet: HTMLStyleElement;\n\n\tconstructor(\n\t\tprivate editor: ICodeEditor,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\t\tthis.enabled = !contextKeyService.getContextKeyValue('isInDiffEditor');\n\t\tthis.stylesheet = dom.createStyleSheet(undefined, undefined, this._store);\n\n\t\tif (this.enabled) {\n\t\t\tthis.isDirtyDiffVisible = isDirtyDiffVisible.bindTo(contextKeyService);\n\t\t\tthis._register(editor.onDidChangeModel(() => this.close()));\n\n\t\t\tconst onDidChangeGutterAction = Event.filter(configurationService.onDidChangeConfiguration, e => e.affectsConfiguration('scm.diffDecorationsGutterAction'));\n\t\t\tthis._register(onDidChangeGutterAction(this.onDidChangeGutterAction, this));\n\t\t\tthis.onDidChangeGutterAction();\n\t\t}\n\t}\n\n\tprivate onDidChangeGutterAction(): void {\n\t\tconst gutterAction = this.configurationService.getValue<'diff' | 'none'>('scm.diffDecorationsGutterAction');\n\n\t\tthis.gutterActionDisposables.clear();\n\n\t\tif (gutterAction === 'diff') {\n\t\t\tthis.gutterActionDisposables.add(this.editor.onMouseDown(e => this.onEditorMouseDown(e)));\n\t\t\tthis.gutterActionDisposables.add(this.editor.onMouseUp(e => this.onEditorMouseUp(e)));\n\t\t\tthis.stylesheet.textContent = `\n\t\t\t\t.monaco-editor .dirty-diff-glyph {\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t}\n\n\t\t\t\t.monaco-editor .margin-view-overlays .dirty-diff-glyph:hover::before {\n\t\t\t\t\theight: 100%;\n\t\t\t\t\twidth: 6px;\n\t\t\t\t\tleft: -6px;\n\t\t\t\t}\n\n\t\t\t\t.monaco-editor .margin-view-overlays .dirty-diff-deleted:hover::after {\n\t\t\t\t\tbottom: 0;\n\t\t\t\t\tborder-top-width: 0;\n\t\t\t\t\tborder-bottom-width: 0;\n\t\t\t\t}\n\t\t\t`;\n\t\t} else {\n\t\t\tthis.stylesheet.textContent = ``;\n\t\t}\n\t}\n\n\tcanNavigate(): boolean {\n\t\treturn !this.widget || (this.widget?.index === -1) || (!!this.model && this.model.changes.length > 1);\n\t}\n\n\trefresh(): void {\n\t\tthis.widget?.showChange(this.widget.index, false);\n\t}\n\n\tnext(lineNumber?: number): void {\n\t\tif (!this.assertWidget()) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.widget || !this.model) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet index: number;\n\t\tif (this.editor.hasModel() && (typeof lineNumber === 'number' || !this.widget.provider)) {\n\t\t\tindex = this.model.findNextClosestChange(typeof lineNumber === 'number' ? lineNumber : this.editor.getPosition().lineNumber, true, this.widget.provider);\n\t\t} else {\n\t\t\tconst providerChanges: number[] = this.model.mapChanges.get(this.widget.provider) ?? this.model.mapChanges.values().next().value!;\n\t\t\tconst mapIndex = providerChanges.findIndex(value => value === this.widget!.index);\n\t\t\tindex = providerChanges[rot(mapIndex + 1, providerChanges.length)];\n\t\t}\n\n\t\tthis.widget.showChange(index);\n\t}\n\n\tprevious(lineNumber?: number): void {\n\t\tif (!this.assertWidget()) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.widget || !this.model) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet index: number;\n\t\tif (this.editor.hasModel() && (typeof lineNumber === 'number')) {\n\t\t\tindex = this.model.findPreviousClosestChange(typeof lineNumber === 'number' ? lineNumber : this.editor.getPosition().lineNumber, true, this.widget.provider);\n\t\t} else {\n\t\t\tconst providerChanges: number[] = this.model.mapChanges.get(this.widget.provider) ?? this.model.mapChanges.values().next().value!;\n\t\t\tconst mapIndex = providerChanges.findIndex(value => value === this.widget!.index);\n\t\t\tindex = providerChanges[rot(mapIndex - 1, providerChanges.length)];\n\t\t}\n\n\t\tthis.widget.showChange(index);\n\t}\n\n\tclose(): void {\n\t\tthis.session.dispose();\n\t\tthis.session = Disposable.None;\n\t}\n\n\tprivate assertWidget(): boolean {\n\t\tif (!this.enabled) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.widget) {\n\t\t\tif (!this.model || this.model.changes.length === 0) {\n\t\t\t\tthis.close();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tif (!this.modelRegistry) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst editorModel = this.editor.getModel();\n\n\t\tif (!editorModel) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst model = this.modelRegistry.getModel(editorModel, this.editor);\n\n\t\tif (!model) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (model.changes.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.model = model;\n\t\tthis.widget = this.instantiationService.createInstance(DirtyDiffWidget, this.editor, model);\n\t\tthis.isDirtyDiffVisible.set(true);\n\n\t\tconst disposables = new DisposableStore();\n\t\tdisposables.add(Event.once(this.widget.onDidClose)(this.close, this));\n\t\tconst onDidModelChange = Event.chain(model.onDidChange, $ =>\n\t\t\t$.filter(e => e.diff.length > 0)\n\t\t\t\t.map(e => e.diff)\n\t\t);\n\n\t\tonDidModelChange(this.onDidModelChange, this, disposables);\n\n\t\tdisposables.add(this.widget);\n\t\tdisposables.add(toDisposable(() => {\n\t\t\tthis.model = null;\n\t\t\tthis.widget = null;\n\t\t\tthis.isDirtyDiffVisible.set(false);\n\t\t\tthis.editor.focus();\n\t\t}));\n\n\t\tthis.session = disposables;\n\t\treturn true;\n\t}\n\n\tprivate onDidModelChange(splices: ISplice<LabeledChange>[]): void {\n\t\tif (!this.model || !this.widget || this.widget.hasFocus()) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const splice of splices) {\n\t\t\tif (splice.start <= this.widget.index) {\n\t\t\t\tthis.next();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.refresh();\n\t}\n\n\tprivate onEditorMouseDown(e: IEditorMouseEvent): void {\n\t\tthis.mouseDownInfo = null;\n\n\t\tconst range = e.target.range;\n\n\t\tif (!range) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!e.event.leftButton) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (e.target.type !== MouseTargetType.GUTTER_LINE_DECORATIONS) {\n\t\t\treturn;\n\t\t}\n\t\tif (!e.target.element) {\n\t\t\treturn;\n\t\t}\n\t\tif (e.target.element.className.indexOf('dirty-diff-glyph') < 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst data = e.target.detail;\n\t\tconst offsetLeftInGutter = e.target.element.offsetLeft;\n\t\tconst gutterOffsetX = data.offsetX - offsetLeftInGutter;\n\n\t\t// TODO@joao TODO@alex TODO@martin this is such that we don't collide with folding\n\t\tif (gutterOffsetX < -3 || gutterOffsetX > 3) { // dirty diff decoration on hover is 6px wide\n\t\t\treturn;\n\t\t}\n\n\t\tthis.mouseDownInfo = { lineNumber: range.startLineNumber };\n\t}\n\n\tprivate onEditorMouseUp(e: IEditorMouseEvent): void {\n\t\tif (!this.mouseDownInfo) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { lineNumber } = this.mouseDownInfo;\n\t\tthis.mouseDownInfo = null;\n\n\t\tconst range = e.target.range;\n\n\t\tif (!range || range.startLineNumber !== lineNumber) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (e.target.type !== MouseTargetType.GUTTER_LINE_DECORATIONS) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.modelRegistry) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editorModel = this.editor.getModel();\n\n\t\tif (!editorModel) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this.modelRegistry.getModel(editorModel, this.editor);\n\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst index = model.changes.findIndex(change => lineIntersectsChange(lineNumber, change.change));\n\n\t\tif (index < 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (index === this.widget?.index) {\n\t\t\tthis.close();\n\t\t} else {\n\t\t\tthis.next(lineNumber);\n\t\t}\n\t}\n\n\tgetChanges(): IChange[] {\n\t\tif (!this.modelRegistry) {\n\t\t\treturn [];\n\t\t}\n\t\tif (!this.editor.hasModel()) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst model = this.modelRegistry.getModel(this.editor.getModel(), this.editor);\n\n\t\tif (!model) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn model.changes.map(change => change.change);\n\t}\n\n\toverride dispose(): void {\n\t\tthis.gutterActionDisposables.dispose();\n\t\tsuper.dispose();\n\t}\n}\n\nconst editorGutterModifiedBackground = registerColor('editorGutter.modifiedBackground', {\n\tdark: '#1B81A8',\n\tlight: '#2090D3',\n\thcDark: '#1B81A8',\n\thcLight: '#2090D3'\n}, nls.localize('editorGutterModifiedBackground', \"Editor gutter background color for lines that are modified.\"));\n\nconst editorGutterAddedBackground = registerColor('editorGutter.addedBackground', {\n\tdark: '#487E02',\n\tlight: '#48985D',\n\thcDark: '#487E02',\n\thcLight: '#48985D'\n}, nls.localize('editorGutterAddedBackground', \"Editor gutter background color for lines that are added.\"));\n\nconst editorGutterDeletedBackground = registerColor('editorGutter.deletedBackground', editorErrorForeground, nls.localize('editorGutterDeletedBackground', \"Editor gutter background color for lines that are deleted.\"));\n\nconst minimapGutterModifiedBackground = registerColor('minimapGutter.modifiedBackground', editorGutterModifiedBackground, nls.localize('minimapGutterModifiedBackground', \"Minimap gutter background color for lines that are modified.\"));\n\nconst minimapGutterAddedBackground = registerColor('minimapGutter.addedBackground', editorGutterAddedBackground, nls.localize('minimapGutterAddedBackground', \"Minimap gutter background color for lines that are added.\"));\n\nconst minimapGutterDeletedBackground = registerColor('minimapGutter.deletedBackground', editorGutterDeletedBackground, nls.localize('minimapGutterDeletedBackground', \"Minimap gutter background color for lines that are deleted.\"));\n\nconst overviewRulerModifiedForeground = registerColor('editorOverviewRuler.modifiedForeground', transparent(editorGutterModifiedBackground, 0.6), nls.localize('overviewRulerModifiedForeground', 'Overview ruler marker color for modified content.'));\nconst overviewRulerAddedForeground = registerColor('editorOverviewRuler.addedForeground', transparent(editorGutterAddedBackground, 0.6), nls.localize('overviewRulerAddedForeground', 'Overview ruler marker color for added content.'));\nconst overviewRulerDeletedForeground = registerColor('editorOverviewRuler.deletedForeground', transparent(editorGutterDeletedBackground, 0.6), nls.localize('overviewRulerDeletedForeground', 'Overview ruler marker color for deleted content.'));\n\nclass DirtyDiffDecorator extends Disposable {\n\n\tstatic createDecoration(className: string, tooltip: string | null, options: { gutter: boolean; overview: { active: boolean; color: string }; minimap: { active: boolean; color: string }; isWholeLine: boolean }): ModelDecorationOptions {\n\t\tconst decorationOptions: IModelDecorationOptions = {\n\t\t\tdescription: 'dirty-diff-decoration',\n\t\t\tisWholeLine: options.isWholeLine,\n\t\t};\n\n\t\tif (options.gutter) {\n\t\t\tdecorationOptions.linesDecorationsClassName = `dirty-diff-glyph ${className}`;\n\t\t\tdecorationOptions.linesDecorationsTooltip = tooltip;\n\t\t}\n\n\t\tif (options.overview.active) {\n\t\t\tdecorationOptions.overviewRuler = {\n\t\t\t\tcolor: themeColorFromId(options.overview.color),\n\t\t\t\tposition: OverviewRulerLane.Left\n\t\t\t};\n\t\t}\n\n\t\tif (options.minimap.active) {\n\t\t\tdecorationOptions.minimap = {\n\t\t\t\tcolor: themeColorFromId(options.minimap.color),\n\t\t\t\tposition: MinimapPosition.Gutter\n\t\t\t};\n\t\t}\n\n\t\treturn ModelDecorationOptions.createDynamic(decorationOptions);\n\t}\n\n\tprivate addedOptions: ModelDecorationOptions;\n\tprivate addedPatternOptions: ModelDecorationOptions;\n\tprivate modifiedOptions: ModelDecorationOptions;\n\tprivate modifiedPatternOptions: ModelDecorationOptions;\n\tprivate deletedOptions: ModelDecorationOptions;\n\tprivate decorationsCollection: IEditorDecorationsCollection | undefined;\n\tprivate editorModel: ITextModel | null;\n\n\tconstructor(\n\t\teditorModel: ITextModel,\n\t\tprivate readonly codeEditor: ICodeEditor,\n\t\tprivate model: DirtyDiffModel,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\t\tthis.editorModel = editorModel;\n\n\t\tconst decorations = configurationService.getValue<string>('scm.diffDecorations');\n\t\tconst gutter = decorations === 'all' || decorations === 'gutter';\n\t\tconst overview = decorations === 'all' || decorations === 'overview';\n\t\tconst minimap = decorations === 'all' || decorations === 'minimap';\n\n\t\tconst diffAdded = nls.localize('diffAdded', 'Added lines');\n\t\tthis.addedOptions = DirtyDiffDecorator.createDecoration('dirty-diff-added', diffAdded, {\n\t\t\tgutter,\n\t\t\toverview: { active: overview, color: overviewRulerAddedForeground },\n\t\t\tminimap: { active: minimap, color: minimapGutterAddedBackground },\n\t\t\tisWholeLine: true\n\t\t});\n\t\tthis.addedPatternOptions = DirtyDiffDecorator.createDecoration('dirty-diff-added-pattern', diffAdded, {\n\t\t\tgutter,\n\t\t\toverview: { active: overview, color: overviewRulerAddedForeground },\n\t\t\tminimap: { active: minimap, color: minimapGutterAddedBackground },\n\t\t\tisWholeLine: true\n\t\t});\n\t\tconst diffModified = nls.localize('diffModified', 'Changed lines');\n\t\tthis.modifiedOptions = DirtyDiffDecorator.createDecoration('dirty-diff-modified', diffModified, {\n\t\t\tgutter,\n\t\t\toverview: { active: overview, color: overviewRulerModifiedForeground },\n\t\t\tminimap: { active: minimap, color: minimapGutterModifiedBackground },\n\t\t\tisWholeLine: true\n\t\t});\n\t\tthis.modifiedPatternOptions = DirtyDiffDecorator.createDecoration('dirty-diff-modified-pattern', diffModified, {\n\t\t\tgutter,\n\t\t\toverview: { active: overview, color: overviewRulerModifiedForeground },\n\t\t\tminimap: { active: minimap, color: minimapGutterModifiedBackground },\n\t\t\tisWholeLine: true\n\t\t});\n\t\tthis.deletedOptions = DirtyDiffDecorator.createDecoration('dirty-diff-deleted', nls.localize('diffDeleted', 'Removed lines'), {\n\t\t\tgutter,\n\t\t\toverview: { active: overview, color: overviewRulerDeletedForeground },\n\t\t\tminimap: { active: minimap, color: minimapGutterDeletedBackground },\n\t\t\tisWholeLine: false\n\t\t});\n\n\t\tthis._register(configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('scm.diffDecorationsGutterPattern')) {\n\t\t\t\tthis.onDidChange();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(model.onDidChange(this.onDidChange, this));\n\t}\n\n\tprivate onDidChange(): void {\n\t\tif (!this.editorModel) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst pattern = this.configurationService.getValue<{ added: boolean; modified: boolean }>('scm.diffDecorationsGutterPattern');\n\t\tconst decorations = this.model.changes.map((labeledChange) => {\n\t\t\tconst change = labeledChange.change;\n\t\t\tconst changeType = getChangeType(change);\n\t\t\tconst startLineNumber = change.modifiedStartLineNumber;\n\t\t\tconst endLineNumber = change.modifiedEndLineNumber || startLineNumber;\n\n\t\t\tswitch (changeType) {\n\t\t\t\tcase ChangeType.Add:\n\t\t\t\t\treturn {\n\t\t\t\t\t\trange: {\n\t\t\t\t\t\t\tstartLineNumber: startLineNumber, startColumn: 1,\n\t\t\t\t\t\t\tendLineNumber: endLineNumber, endColumn: 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\toptions: pattern.added ? this.addedPatternOptions : this.addedOptions\n\t\t\t\t\t};\n\t\t\t\tcase ChangeType.Delete:\n\t\t\t\t\treturn {\n\t\t\t\t\t\trange: {\n\t\t\t\t\t\t\tstartLineNumber: startLineNumber, startColumn: Number.MAX_VALUE,\n\t\t\t\t\t\t\tendLineNumber: startLineNumber, endColumn: Number.MAX_VALUE\n\t\t\t\t\t\t},\n\t\t\t\t\t\toptions: this.deletedOptions\n\t\t\t\t\t};\n\t\t\t\tcase ChangeType.Modify:\n\t\t\t\t\treturn {\n\t\t\t\t\t\trange: {\n\t\t\t\t\t\t\tstartLineNumber: startLineNumber, startColumn: 1,\n\t\t\t\t\t\t\tendLineNumber: endLineNumber, endColumn: 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\toptions: pattern.modified ? this.modifiedPatternOptions : this.modifiedOptions\n\t\t\t\t\t};\n\t\t\t}\n\t\t});\n\n\t\tif (!this.decorationsCollection) {\n\t\t\tthis.decorationsCollection = this.codeEditor.createDecorationsCollection(decorations);\n\t\t} else {\n\t\t\tthis.decorationsCollection.set(decorations);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tif (this.decorationsCollection) {\n\t\t\tthis.decorationsCollection?.clear();\n\t\t}\n\n\t\tthis.editorModel = null;\n\t\tthis.decorationsCollection = undefined;\n\t}\n}\n\nfunction compareChanges(a: IChange, b: IChange): number {\n\tlet result = a.modifiedStartLineNumber - b.modifiedStartLineNumber;\n\n\tif (result !== 0) {\n\t\treturn result;\n\t}\n\n\tresult = a.modifiedEndLineNumber - b.modifiedEndLineNumber;\n\n\tif (result !== 0) {\n\t\treturn result;\n\t}\n\n\tresult = a.originalStartLineNumber - b.originalStartLineNumber;\n\n\tif (result !== 0) {\n\t\treturn result;\n\t}\n\n\treturn a.originalEndLineNumber - b.originalEndLineNumber;\n}\n\n\nexport async function getOriginalResource(quickDiffService: IQuickDiffService, uri: URI, language: string | undefined, isSynchronized: boolean | undefined): Promise<URI | null> {\n\tconst quickDiffs = await quickDiffService.getQuickDiffs(uri, language, isSynchronized);\n\treturn quickDiffs.length > 0 ? quickDiffs[0].originalResource : null;\n}\n\ntype LabeledChange = { change: IChange; label: string; uri: URI };\n\nexport class DirtyDiffModel extends Disposable {\n\n\tprivate _quickDiffs: QuickDiff[] = [];\n\tprivate _originalModels: Map<string, IResolvedTextEditorModel> = new Map(); // key is uri.toString()\n\tprivate _originalTextModels: ITextModel[] = [];\n\tprivate _model: ITextFileEditorModel;\n\tget original(): ITextModel[] { return this._originalTextModels; }\n\n\tprivate diffDelayer = new ThrottledDelayer<{ changes: LabeledChange[]; mapChanges: Map<string, number[]> } | null>(200);\n\tprivate _quickDiffsPromise?: Promise<QuickDiff[]>;\n\tprivate repositoryDisposables = new Set<IDisposable>();\n\tprivate readonly originalModelDisposables = this._register(new DisposableStore());\n\tprivate _disposed = false;\n\n\tprivate readonly _onDidChange = new Emitter<{ changes: LabeledChange[]; diff: ISplice<LabeledChange>[] }>();\n\treadonly onDidChange: Event<{ changes: LabeledChange[]; diff: ISplice<LabeledChange>[] }> = this._onDidChange.event;\n\n\tprivate _changes: LabeledChange[] = [];\n\tget changes(): LabeledChange[] { return this._changes; }\n\tprivate _mapChanges: Map<string, number[]> = new Map(); // key is the quick diff name, value is the index of the change in this._changes\n\tget mapChanges(): Map<string, number[]> { return this._mapChanges; }\n\n\tconstructor(\n\t\ttextFileModel: IResolvedTextFileEditorModel,\n\t\t@ISCMService private readonly scmService: ISCMService,\n\t\t@IQuickDiffService private readonly quickDiffService: IQuickDiffService,\n\t\t@IEditorWorkerService private readonly editorWorkerService: IEditorWorkerService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ITextModelService private readonly textModelResolverService: ITextModelService,\n\t\t@IProgressService private readonly progressService: IProgressService,\n\t) {\n\t\tsuper();\n\t\tthis._model = textFileModel;\n\n\t\tthis._register(textFileModel.textEditorModel.onDidChangeContent(() => this.triggerDiff()));\n\t\tthis._register(\n\t\t\tEvent.filter(configurationService.onDidChangeConfiguration,\n\t\t\t\te => e.affectsConfiguration('scm.diffDecorationsIgnoreTrimWhitespace') || e.affectsConfiguration('diffEditor.ignoreTrimWhitespace')\n\t\t\t)(this.triggerDiff, this)\n\t\t);\n\t\tthis._register(scmService.onDidAddRepository(this.onDidAddRepository, this));\n\t\tfor (const r of scmService.repositories) {\n\t\t\tthis.onDidAddRepository(r);\n\t\t}\n\n\t\tthis._register(this._model.onDidChangeEncoding(() => {\n\t\t\tthis.diffDelayer.cancel();\n\t\t\tthis._quickDiffs = [];\n\t\t\tthis._originalModels.clear();\n\t\t\tthis._originalTextModels = [];\n\t\t\tthis._quickDiffsPromise = undefined;\n\t\t\tthis.setChanges([], new Map());\n\t\t\tthis.triggerDiff();\n\t\t}));\n\n\t\tthis._register(this.quickDiffService.onDidChangeQuickDiffProviders(() => this.triggerDiff()));\n\t\tthis.triggerDiff();\n\t}\n\n\tget quickDiffs(): readonly QuickDiff[] {\n\t\treturn this._quickDiffs;\n\t}\n\n\tpublic getDiffEditorModel(originalUri: string): IDiffEditorModel | undefined {\n\t\tif (!this._originalModels.has(originalUri)) {\n\t\t\treturn;\n\t\t}\n\t\tconst original = this._originalModels.get(originalUri)!;\n\n\t\treturn {\n\t\t\tmodified: this._model.textEditorModel!,\n\t\t\toriginal: original.textEditorModel\n\t\t};\n\t}\n\n\tprivate onDidAddRepository(repository: ISCMRepository): void {\n\t\tconst disposables = new DisposableStore();\n\n\t\tthis.repositoryDisposables.add(disposables);\n\t\tdisposables.add(toDisposable(() => this.repositoryDisposables.delete(disposables)));\n\n\t\tconst onDidChange = Event.any(repository.provider.onDidChange, repository.provider.onDidChangeResources);\n\t\tdisposables.add(onDidChange(this.triggerDiff, this));\n\n\t\tconst onDidRemoveThis = Event.filter(this.scmService.onDidRemoveRepository, r => r === repository);\n\t\tdisposables.add(onDidRemoveThis(() => dispose(disposables), null));\n\n\t\tthis.triggerDiff();\n\t}\n\n\tprivate triggerDiff(): Promise<any> {\n\t\tif (!this.diffDelayer) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\treturn this.diffDelayer\n\t\t\t.trigger(() => this.diff())\n\t\t\t.then((result: { changes: LabeledChange[]; mapChanges: Map<string, number[]> } | null) => {\n\t\t\t\tconst originalModels = Array.from(this._originalModels.values());\n\t\t\t\tif (!result || this._disposed || this._model.isDisposed() || originalModels.some(originalModel => originalModel.isDisposed())) {\n\t\t\t\t\treturn; // disposed\n\t\t\t\t}\n\n\t\t\t\tif (originalModels.every(originalModel => originalModel.textEditorModel.getValueLength() === 0)) {\n\t\t\t\t\tresult.changes = [];\n\t\t\t\t}\n\n\t\t\t\tif (!result.changes) {\n\t\t\t\t\tresult.changes = [];\n\t\t\t\t}\n\n\t\t\t\tthis.setChanges(result.changes, result.mapChanges);\n\t\t\t}, (err) => onUnexpectedError(err));\n\t}\n\n\tprivate setChanges(changes: LabeledChange[], mapChanges: Map<string, number[]>): void {\n\t\tconst diff = sortedDiff(this._changes, changes, (a, b) => compareChanges(a.change, b.change));\n\t\tthis._changes = changes;\n\t\tthis._mapChanges = mapChanges;\n\t\tthis._onDidChange.fire({ changes, diff });\n\t}\n\n\tprivate diff(): Promise<{ changes: LabeledChange[]; mapChanges: Map<string, number[]> } | null> {\n\t\treturn this.progressService.withProgress({ location: ProgressLocation.Scm, delay: 250 }, async () => {\n\t\t\tconst originalURIs = await this.getQuickDiffsPromise();\n\t\t\tif (this._disposed || this._model.isDisposed() || (originalURIs.length === 0)) {\n\t\t\t\treturn Promise.resolve({ changes: [], mapChanges: new Map() }); // disposed\n\t\t\t}\n\n\t\t\tconst filteredToDiffable = originalURIs.filter(quickDiff => this.editorWorkerService.canComputeDirtyDiff(quickDiff.originalResource, this._model.resource));\n\t\t\tif (filteredToDiffable.length === 0) {\n\t\t\t\treturn Promise.resolve({ changes: [], mapChanges: new Map() }); // All files are too large\n\t\t\t}\n\n\t\t\tconst ignoreTrimWhitespaceSetting = this.configurationService.getValue<'true' | 'false' | 'inherit'>('scm.diffDecorationsIgnoreTrimWhitespace');\n\t\t\tconst ignoreTrimWhitespace = ignoreTrimWhitespaceSetting === 'inherit'\n\t\t\t\t? this.configurationService.getValue<boolean>('diffEditor.ignoreTrimWhitespace')\n\t\t\t\t: ignoreTrimWhitespaceSetting !== 'false';\n\n\t\t\tconst allDiffs: LabeledChange[] = [];\n\t\t\tfor (const quickDiff of filteredToDiffable) {\n\t\t\t\tconst dirtyDiff = await this.editorWorkerService.computeDirtyDiff(quickDiff.originalResource, this._model.resource, ignoreTrimWhitespace);\n\t\t\t\tif (dirtyDiff) {\n\t\t\t\t\tfor (const diff of dirtyDiff) {\n\t\t\t\t\t\tif (diff) {\n\t\t\t\t\t\t\tallDiffs.push({ change: diff, label: quickDiff.label, uri: quickDiff.originalResource });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst sorted = allDiffs.sort((a, b) => compareChanges(a.change, b.change));\n\t\t\tconst map: Map<string, number[]> = new Map();\n\t\t\tfor (let i = 0; i < sorted.length; i++) {\n\t\t\t\tconst label = sorted[i].label;\n\t\t\t\tif (!map.has(label)) {\n\t\t\t\t\tmap.set(label, []);\n\t\t\t\t}\n\t\t\t\tmap.get(label)!.push(i);\n\t\t\t}\n\t\t\treturn { changes: sorted, mapChanges: map };\n\t\t});\n\t}\n\n\tprivate getQuickDiffsPromise(): Promise<QuickDiff[]> {\n\t\tif (this._quickDiffsPromise) {\n\t\t\treturn this._quickDiffsPromise;\n\t\t}\n\n\t\tthis._quickDiffsPromise = this.getOriginalResource().then(async (quickDiffs) => {\n\t\t\tif (this._disposed) { // disposed\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tif (quickDiffs.length === 0) {\n\t\t\t\tthis._quickDiffs = [];\n\t\t\t\tthis._originalModels.clear();\n\t\t\t\tthis._originalTextModels = [];\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tif (equals(this._quickDiffs, quickDiffs, (a, b) => a.originalResource.toString() === b.originalResource.toString() && a.label === b.label)) {\n\t\t\t\treturn quickDiffs;\n\t\t\t}\n\n\t\t\tthis.originalModelDisposables.clear();\n\t\t\tthis._originalModels.clear();\n\t\t\tthis._originalTextModels = [];\n\t\t\tthis._quickDiffs = quickDiffs;\n\t\t\treturn (await Promise.all(quickDiffs.map(async (quickDiff) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst ref = await this.textModelResolverService.createModelReference(quickDiff.originalResource);\n\t\t\t\t\tif (this._disposed) { // disposed\n\t\t\t\t\t\tref.dispose();\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._originalModels.set(quickDiff.originalResource.toString(), ref.object);\n\t\t\t\t\tthis._originalTextModels.push(ref.object.textEditorModel);\n\n\t\t\t\t\tif (isTextFileEditorModel(ref.object)) {\n\t\t\t\t\t\tconst encoding = this._model.getEncoding();\n\n\t\t\t\t\t\tif (encoding) {\n\t\t\t\t\t\t\tref.object.setEncoding(encoding, EncodingMode.Decode);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.originalModelDisposables.add(ref);\n\t\t\t\t\tthis.originalModelDisposables.add(ref.object.textEditorModel.onDidChangeContent(() => this.triggerDiff()));\n\n\t\t\t\t\treturn quickDiff;\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn []; // possibly invalid reference\n\t\t\t\t}\n\t\t\t}))).flat();\n\t\t});\n\n\t\treturn this._quickDiffsPromise.finally(() => {\n\t\t\tthis._quickDiffsPromise = undefined;\n\t\t});\n\t}\n\n\tprivate async getOriginalResource(): Promise<QuickDiff[]> {\n\t\tif (this._disposed) {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t\tconst uri = this._model.resource;\n\t\treturn this.quickDiffService.getQuickDiffs(uri, this._model.getLanguageId(), this._model.textEditorModel ? shouldSynchronizeModel(this._model.textEditorModel) : undefined);\n\t}\n\n\tfindNextClosestChange(lineNumber: number, inclusive = true, provider?: string): number {\n\t\tlet preferredProvider: string | undefined;\n\t\tif (!provider && inclusive) {\n\t\t\tpreferredProvider = this.quickDiffs.find(value => value.isSCM)?.label;\n\t\t}\n\n\t\tconst possibleChanges: number[] = [];\n\t\tfor (let i = 0; i < this.changes.length; i++) {\n\t\t\tif (provider && this.changes[i].label !== provider) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst change = this.changes[i];\n\t\t\tconst possibleChangesLength = possibleChanges.length;\n\n\t\t\tif (inclusive) {\n\t\t\t\tif (getModifiedEndLineNumber(change.change) >= lineNumber) {\n\t\t\t\t\tif (preferredProvider && change.label !== preferredProvider) {\n\t\t\t\t\t\tpossibleChanges.push(i);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (change.change.modifiedStartLineNumber > lineNumber) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ((possibleChanges.length > 0) && (possibleChanges.length === possibleChangesLength)) {\n\t\t\t\treturn possibleChanges[0];\n\t\t\t}\n\t\t}\n\n\t\treturn possibleChanges.length > 0 ? possibleChanges[0] : 0;\n\t}\n\n\tfindPreviousClosestChange(lineNumber: number, inclusive = true, provider?: string): number {\n\t\tfor (let i = this.changes.length - 1; i >= 0; i--) {\n\t\t\tif (provider && this.changes[i].label !== provider) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst change = this.changes[i].change;\n\n\t\t\tif (inclusive) {\n\t\t\t\tif (change.modifiedStartLineNumber <= lineNumber) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (getModifiedEndLineNumber(change) < lineNumber) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.changes.length - 1;\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis._disposed = true;\n\t\tthis._quickDiffs = [];\n\t\tthis._originalModels.clear();\n\t\tthis._originalTextModels = [];\n\t\tthis.diffDelayer.cancel();\n\t\tthis.repositoryDisposables.forEach(d => dispose(d));\n\t\tthis.repositoryDisposables.clear();\n\t}\n}\n\nclass DirtyDiffItem {\n\n\tconstructor(\n\t\treadonly model: DirtyDiffModel,\n\t\treadonly decorator: DirtyDiffDecorator\n\t) { }\n\n\tdispose(): void {\n\t\tthis.decorator.dispose();\n\t\tthis.model.dispose();\n\t}\n}\n\ninterface IViewState {\n\treadonly width: number;\n\treadonly visibility: 'always' | 'hover';\n}\n\nexport class DirtyDiffWorkbenchController extends Disposable implements ext.IWorkbenchContribution, IModelRegistry {\n\n\tprivate enabled = false;\n\tprivate viewState: IViewState = { width: 3, visibility: 'always' };\n\tprivate items = new ResourceMap<Map<string, DirtyDiffItem>>(); // resource -> editor id -> DirtyDiffItem\n\tprivate readonly transientDisposables = this._register(new DisposableStore());\n\tprivate stylesheet: HTMLStyleElement;\n\n\tconstructor(\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ITextFileService private readonly textFileService: ITextFileService\n\t) {\n\t\tsuper();\n\t\tthis.stylesheet = dom.createStyleSheet(undefined, undefined, this._store);\n\n\t\tconst onDidChangeConfiguration = Event.filter(configurationService.onDidChangeConfiguration, e => e.affectsConfiguration('scm.diffDecorations'));\n\t\tthis._register(onDidChangeConfiguration(this.onDidChangeConfiguration, this));\n\t\tthis.onDidChangeConfiguration();\n\n\t\tconst onDidChangeDiffWidthConfiguration = Event.filter(configurationService.onDidChangeConfiguration, e => e.affectsConfiguration('scm.diffDecorationsGutterWidth'));\n\t\tthis._register(onDidChangeDiffWidthConfiguration(this.onDidChangeDiffWidthConfiguration, this));\n\t\tthis.onDidChangeDiffWidthConfiguration();\n\n\t\tconst onDidChangeDiffVisibilityConfiguration = Event.filter(configurationService.onDidChangeConfiguration, e => e.affectsConfiguration('scm.diffDecorationsGutterVisibility'));\n\t\tthis._register(onDidChangeDiffVisibilityConfiguration(this.onDidChangeDiffVisibilityConfiguration, this));\n\t\tthis.onDidChangeDiffVisibilityConfiguration();\n\t}\n\n\tprivate onDidChangeConfiguration(): void {\n\t\tconst enabled = this.configurationService.getValue<string>('scm.diffDecorations') !== 'none';\n\n\t\tif (enabled) {\n\t\t\tthis.enable();\n\t\t} else {\n\t\t\tthis.disable();\n\t\t}\n\t}\n\n\tprivate onDidChangeDiffWidthConfiguration(): void {\n\t\tlet width = this.configurationService.getValue<number>('scm.diffDecorationsGutterWidth');\n\n\t\tif (isNaN(width) || width <= 0 || width > 5) {\n\t\t\twidth = 3;\n\t\t}\n\n\t\tthis.setViewState({ ...this.viewState, width });\n\t}\n\n\tprivate onDidChangeDiffVisibilityConfiguration(): void {\n\t\tconst visibility = this.configurationService.getValue<'always' | 'hover'>('scm.diffDecorationsGutterVisibility');\n\t\tthis.setViewState({ ...this.viewState, visibility });\n\t}\n\n\tprivate setViewState(state: IViewState): void {\n\t\tthis.viewState = state;\n\t\tthis.stylesheet.textContent = `\n\t\t\t.monaco-editor .dirty-diff-added,\n\t\t\t.monaco-editor .dirty-diff-modified {\n\t\t\t\tborder-left-width:${state.width}px;\n\t\t\t}\n\t\t\t.monaco-editor .dirty-diff-added-pattern,\n\t\t\t.monaco-editor .dirty-diff-added-pattern:before,\n\t\t\t.monaco-editor .dirty-diff-modified-pattern,\n\t\t\t.monaco-editor .dirty-diff-modified-pattern:before {\n\t\t\t\tbackground-size: ${state.width}px ${state.width}px;\n\t\t\t}\n\t\t\t.monaco-editor .dirty-diff-added,\n\t\t\t.monaco-editor .dirty-diff-added-pattern,\n\t\t\t.monaco-editor .dirty-diff-modified,\n\t\t\t.monaco-editor .dirty-diff-modified-pattern,\n\t\t\t.monaco-editor .dirty-diff-deleted {\n\t\t\t\topacity: ${state.visibility === 'always' ? 1 : 0};\n\t\t\t}\n\t\t`;\n\t}\n\n\tprivate enable(): void {\n\t\tif (this.enabled) {\n\t\t\tthis.disable();\n\t\t}\n\n\t\tthis.transientDisposables.add(Event.any(this.editorService.onDidCloseEditor, this.editorService.onDidVisibleEditorsChange)(() => this.onEditorsChanged()));\n\t\tthis.onEditorsChanged();\n\t\tthis.enabled = true;\n\t}\n\n\tprivate disable(): void {\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.transientDisposables.clear();\n\n\t\tfor (const [, dirtyDiff] of this.items) {\n\t\t\tdispose(dirtyDiff.values());\n\t\t}\n\n\t\tthis.items.clear();\n\t\tthis.enabled = false;\n\t}\n\n\tprivate onEditorsChanged(): void {\n\t\tfor (const editor of this.editorService.visibleTextEditorControls) {\n\t\t\tif (isCodeEditor(editor)) {\n\t\t\t\tconst textModel = editor.getModel();\n\t\t\t\tconst controller = DirtyDiffController.get(editor);\n\n\t\t\t\tif (controller) {\n\t\t\t\t\tcontroller.modelRegistry = this;\n\t\t\t\t}\n\n\t\t\t\tif (textModel && (!this.items.has(textModel.uri) || !this.items.get(textModel.uri)!.has(editor.getId()))) {\n\t\t\t\t\tconst textFileModel = this.textFileService.files.get(textModel.uri);\n\n\t\t\t\t\tif (textFileModel?.isResolved()) {\n\t\t\t\t\t\tconst dirtyDiffModel = this.instantiationService.createInstance(DirtyDiffModel, textFileModel);\n\t\t\t\t\t\tconst decorator = new DirtyDiffDecorator(textFileModel.textEditorModel, editor, dirtyDiffModel, this.configurationService);\n\t\t\t\t\t\tif (!this.items.has(textModel.uri)) {\n\t\t\t\t\t\t\tthis.items.set(textModel.uri, new Map());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.items.get(textModel.uri)?.set(editor.getId(), new DirtyDiffItem(dirtyDiffModel, decorator));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const [uri, item] of this.items) {\n\t\t\tfor (const editorId of item.keys()) {\n\t\t\t\tif (!this.editorService.visibleTextEditorControls.find(editor => isCodeEditor(editor) && editor.getModel()?.uri.toString() === uri.toString() && editor.getId() === editorId)) {\n\t\t\t\t\tif (item.has(editorId)) {\n\t\t\t\t\t\tconst dirtyDiffItem = item.get(editorId);\n\t\t\t\t\t\tdirtyDiffItem?.dispose();\n\t\t\t\t\t\titem.delete(editorId);\n\t\t\t\t\t\tif (item.size === 0) {\n\t\t\t\t\t\t\tthis.items.delete(uri);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tgetModel(editorModel: ITextModel, codeEditor: ICodeEditor): DirtyDiffModel | undefined {\n\t\treturn this.items.get(editorModel.uri)?.get(codeEditor.getId())?.model;\n\t}\n\n\toverride dispose(): void {\n\t\tthis.disable();\n\t\tsuper.dispose();\n\t}\n}\n\nregisterEditorContribution(DirtyDiffController.ID, DirtyDiffController, EditorContributionInstantiation.AfterFirstRender);\n"],
  "mappings": "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",
  "names": ["ChangeType", "change"]
}
