var M=Object.defineProperty;var H=Object.getOwnPropertyDescriptor;var u=(a,i,e,t)=>{for(var r=t>1?void 0:t?H(i,e):i,o=a.length-1,s;o>=0;o--)(s=a[o])&&(r=(t?s(i,e,r):s(r))||r);return t&&r&&M(i,e,r),r},l=(a,i)=>(e,t)=>i(e,t,a);import{Emitter as n}from"../../../../../vs/base/common/event.js";import{HistoryNavigator2 as C}from"../../../../../vs/base/common/history.js";import"../../../../../vs/base/common/htmlContent.js";import{Iterable as I}from"../../../../../vs/base/common/iterator.js";import{Disposable as R,DisposableStore as w,toDisposable as P}from"../../../../../vs/base/common/lifecycle.js";import{ResourceMap as S}from"../../../../../vs/base/common/map.js";import{Schemas as f}from"../../../../../vs/base/common/network.js";import{URI as V}from"../../../../../vs/base/common/uri.js";import{IContextKeyService as N}from"../../../../../vs/platform/contextkey/common/contextkey.js";import{ILogService as E}from"../../../../../vs/platform/log/common/log.js";import{IStorageService as _,StorageScope as d,StorageTarget as m}from"../../../../../vs/platform/storage/common/storage.js";import{IUriIdentityService as A}from"../../../../../vs/platform/uriIdentity/common/uriIdentity.js";import{IWorkspaceContextService as b}from"../../../../../vs/platform/workspace/common/workspace.js";import{SCMInputChangeReason as D}from"./scm.js";class x extends R{constructor(e,t){super();this.repository=e;this.history=t;this.repository.provider.rootUri?(this.historyNavigator=t.getHistory(this.repository.provider.label,this.repository.provider.rootUri),this._register(this.history.onWillSaveHistory(r=>{this.historyNavigator.isAtEnd()&&this.saveValue(),this.didChangeHistory&&r.historyDidIndeedChange(),this.didChangeHistory=!1}))):this.historyNavigator=new C([""],100),this._value=this.historyNavigator.current()}_value="";get value(){return this._value}_onDidChange=new n;onDidChange=this._onDidChange.event;_placeholder="";get placeholder(){return this._placeholder}set placeholder(e){this._placeholder=e,this._onDidChangePlaceholder.fire(e)}_onDidChangePlaceholder=new n;onDidChangePlaceholder=this._onDidChangePlaceholder.event;_enabled=!0;get enabled(){return this._enabled}set enabled(e){this._enabled=e,this._onDidChangeEnablement.fire(e)}_onDidChangeEnablement=new n;onDidChangeEnablement=this._onDidChangeEnablement.event;_visible=!0;get visible(){return this._visible}set visible(e){this._visible=e,this._onDidChangeVisibility.fire(e)}_onDidChangeVisibility=new n;onDidChangeVisibility=this._onDidChangeVisibility.event;setFocus(){this._onDidChangeFocus.fire()}_onDidChangeFocus=new n;onDidChangeFocus=this._onDidChangeFocus.event;showValidationMessage(e,t){this._onDidChangeValidationMessage.fire({message:e,type:t})}_onDidChangeValidationMessage=new n;onDidChangeValidationMessage=this._onDidChangeValidationMessage.event;_validateInput=()=>Promise.resolve(void 0);get validateInput(){return this._validateInput}set validateInput(e){this._validateInput=e,this._onDidChangeValidateInput.fire()}_onDidChangeValidateInput=new n;onDidChangeValidateInput=this._onDidChangeValidateInput.event;historyNavigator;didChangeHistory=!1;setValue(e,t,r){e!==this._value&&(t||(this.historyNavigator.replaceLast(this._value),this.historyNavigator.add(e),this.didChangeHistory=!0),this._value=e,this._onDidChange.fire({value:e,reason:r}))}showNextHistoryValue(){if(this.historyNavigator.isAtEnd())return;this.historyNavigator.has(this.value)||(this.saveValue(),this.historyNavigator.resetCursor());const e=this.historyNavigator.next();this.setValue(e,!0,D.HistoryNext)}showPreviousHistoryValue(){this.historyNavigator.isAtEnd()?this.saveValue():this.historyNavigator.has(this._value)||(this.saveValue(),this.historyNavigator.resetCursor());const e=this.historyNavigator.previous();this.setValue(e,!0,D.HistoryPrevious)}saveValue(){const e=this.historyNavigator.replaceLast(this._value);this.didChangeHistory=this.didChangeHistory||e!==this._value}}class W{constructor(i,e,t,r){this.id=i;this.provider=e;this.disposable=t;this.input=new x(this,r)}_selected=!1;get selected(){return this._selected}_onDidChangeSelection=new n;onDidChangeSelection=this._onDidChangeSelection.event;input;setSelected(i){this._selected!==i&&(this._selected=i,this._onDidChangeSelection.fire(i))}dispose(){this.disposable.dispose(),this.provider.dispose()}}class U{_didChangeHistory=!1;get didChangeHistory(){return this._didChangeHistory}historyDidIndeedChange(){this._didChangeHistory=!0}}let v=class{constructor(i,e){this.storageService=i;this.workspaceContextService=e;this.histories=new Map;const t=this.storageService.getObject("scm.history",d.WORKSPACE,[]);for(const[r,o,s]of t){let h=this.histories.get(r);h||(h=new S,this.histories.set(r,h)),h.set(o,new C(s,100))}this.migrateStorage()&&this.saveToStorage(),this.disposables.add(this.storageService.onDidChangeValue(d.WORKSPACE,"scm.history",this.disposables)(r=>{if(r.external&&r.key==="scm.history"){const o=this.storageService.getObject("scm.history",d.WORKSPACE,[]);for(const[s,h,p]of o){const y=this.getHistory(s,h);for(const c of I.reverse(p))y.prepend(c)}}})),this.disposables.add(this.storageService.onWillSaveState(r=>{const o=new U;this._onWillSaveHistory.fire(o),o.didChangeHistory&&this.saveToStorage()}))}disposables=new w;histories=new Map;_onWillSaveHistory=this.disposables.add(new n);onWillSaveHistory=this._onWillSaveHistory.event;saveToStorage(){const i=[];for(const[e,t]of this.histories)for(const[r,o]of t)o.size===1&&o.current()===""||i.push([e,r,[...o]]);this.storageService.store("scm.history",i,d.WORKSPACE,m.USER)}getHistory(i,e){let t=this.histories.get(i);t||(t=new S,this.histories.set(i,t));let r=t.get(e);return r||(r=new C([""],100),t.set(e,r)),r}migrateStorage(){let i=!1;const e=I.filter(this.storageService.keys(d.APPLICATION,m.MACHINE),t=>t.startsWith("scm/input:"));for(const t of e)try{const r=JSON.parse(this.storageService.get(t,d.APPLICATION,"")),o=/^scm\/input:([^:]+):(.+)$/.exec(t);if(!o||!Array.isArray(r?.history)||!Number.isInteger(r?.timestamp)){this.storageService.remove(t,d.APPLICATION);continue}const[,s,h]=o,p=V.file(h);if(this.workspaceContextService.getWorkspaceFolder(p)){const y=this.getHistory(s,p);for(const c of I.reverse(r.history))y.prepend(c);i=!0,this.storageService.remove(t,d.APPLICATION)}}catch{this.storageService.remove(t,d.APPLICATION)}return i}dispose(){this.disposables.dispose()}};v=u([l(0,_),l(1,b)],v);let g=class{constructor(i,e,t,r,o){this.logService=i;this.uriIdentityService=o;this.inputHistory=new v(r,e),this.providerCount=t.createKey("scm.providerCount",0)}_repositories=new Map;get repositories(){return this._repositories.values()}get repositoryCount(){return this._repositories.size}inputHistory;providerCount;_onDidAddProvider=new n;onDidAddRepository=this._onDidAddProvider.event;_onDidRemoveProvider=new n;onDidRemoveRepository=this._onDidRemoveProvider.event;registerSCMProvider(i){if(this.logService.trace("SCMService#registerSCMProvider"),this._repositories.has(i.id))throw new Error(`SCM Provider ${i.id} already exists.`);const e=P(()=>{this._repositories.delete(i.id),this._onDidRemoveProvider.fire(t),this.providerCount.set(this._repositories.size)}),t=new W(i.id,i,e,this.inputHistory);return this._repositories.set(i.id,t),this._onDidAddProvider.fire(t),this.providerCount.set(this._repositories.size),t}getRepository(i){if(typeof i=="string")return this._repositories.get(i);if(i.scheme!==f.file&&i.scheme!==f.vscodeRemote)return;let e,t=Number.POSITIVE_INFINITY;for(const r of this.repositories){const o=r.provider.rootUri;if(!o)continue;const s=this.uriIdentityService.extUri.relativePath(o,i);s&&!/^\.\./.test(s)&&s.length<t&&(e=r,t=s.length)}return e}};g=u([l(0,E),l(1,b),l(2,N),l(3,_),l(4,A)],g);export{g as SCMService};
