{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/scm/common/scm.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IAction } from \"../../../../base/common/actions.js\";\nimport type { Event } from \"../../../../base/common/event.js\";\nimport type { IMarkdownString } from \"../../../../base/common/htmlContent.js\";\nimport type { IDisposable } from \"../../../../base/common/lifecycle.js\";\nimport type { IObservable } from \"../../../../base/common/observable.js\";\nimport type { ResourceTree } from \"../../../../base/common/resourceTree.js\";\nimport type { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport type { Command } from \"../../../../editor/common/languages.js\";\nimport type { ITextModel } from \"../../../../editor/common/model.js\";\nimport type { IMenu } from \"../../../../platform/actions/common/actions.js\";\nimport { createDecorator } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport type { ISCMHistoryProvider } from \"./history.js\";\n\nexport const VIEWLET_ID = \"workbench.view.scm\";\nexport const VIEW_PANE_ID = \"workbench.scm\";\nexport const REPOSITORIES_VIEW_PANE_ID = \"workbench.scm.repositories\";\nexport const HISTORY_VIEW_PANE_ID = \"workbench.scm.history\";\n\nexport interface IBaselineResourceProvider {\n\tgetBaselineResource(resource: URI): Promise<URI>;\n}\n\nexport const ISCMService = createDecorator<ISCMService>(\"scm\");\n\nexport interface ISCMResourceDecorations {\n\ticon?: URI | ThemeIcon;\n\ticonDark?: URI | ThemeIcon;\n\ttooltip?: string;\n\tstrikeThrough?: boolean;\n\tfaded?: boolean;\n}\n\nexport interface ISCMResource {\n\treadonly resourceGroup: ISCMResourceGroup;\n\treadonly sourceUri: URI;\n\treadonly decorations: ISCMResourceDecorations;\n\treadonly contextValue: string | undefined;\n\treadonly command: Command | undefined;\n\treadonly multiDiffEditorOriginalUri: URI | undefined;\n\treadonly multiDiffEditorModifiedUri: URI | undefined;\n\topen(preserveFocus: boolean): Promise<void>;\n}\n\nexport interface ISCMResourceGroup {\n\treadonly id: string;\n\treadonly provider: ISCMProvider;\n\n\treadonly resources: readonly ISCMResource[];\n\treadonly resourceTree: ResourceTree<ISCMResource, ISCMResourceGroup>;\n\treadonly onDidChangeResources: Event<void>;\n\n\treadonly label: string;\n\treadonly hideWhenEmpty: boolean;\n\treadonly onDidChange: Event<void>;\n\n\treadonly multiDiffEditorEnableViewChanges: boolean;\n}\n\nexport interface ISCMProvider extends IDisposable {\n\treadonly id: string;\n\treadonly label: string;\n\treadonly contextValue: string;\n\treadonly name: string;\n\n\treadonly groups: readonly ISCMResourceGroup[];\n\treadonly onDidChangeResourceGroups: Event<void>;\n\treadonly onDidChangeResources: Event<void>;\n\n\treadonly rootUri?: URI;\n\treadonly inputBoxTextModel: ITextModel;\n\treadonly count: IObservable<number | undefined>;\n\treadonly commitTemplate: IObservable<string>;\n\treadonly historyProvider: IObservable<ISCMHistoryProvider | undefined>;\n\treadonly acceptInputCommand?: Command;\n\treadonly actionButton?: ISCMActionButtonDescriptor;\n\treadonly statusBarCommands: IObservable<readonly Command[] | undefined>;\n\treadonly onDidChange: Event<void>;\n\n\tgetOriginalResource(uri: URI): Promise<URI | null>;\n}\n\nexport interface ISCMInputValueProviderContext {\n\treadonly resourceGroupId: string;\n\treadonly resources: readonly URI[];\n}\n\nexport enum InputValidationType {\n\tError = 0,\n\tWarning = 1,\n\tInformation = 2,\n}\n\nexport interface IInputValidation {\n\tmessage: string | IMarkdownString;\n\ttype: InputValidationType;\n}\n\nexport interface IInputValidator {\n\t(\n\t\tvalue: string,\n\t\tcursorPosition: number,\n\t): Promise<IInputValidation | undefined>;\n}\n\nexport enum SCMInputChangeReason {\n\tHistoryPrevious = 0,\n\tHistoryNext = 1,\n}\n\nexport interface ISCMInputChangeEvent {\n\treadonly value: string;\n\treadonly reason?: SCMInputChangeReason;\n}\n\nexport interface ISCMActionButtonDescriptor {\n\tcommand: Command;\n\tsecondaryCommands?: Command[][];\n\tdescription?: string;\n\tenabled: boolean;\n}\n\nexport interface ISCMActionButton {\n\treadonly type: \"actionButton\";\n\treadonly repository: ISCMRepository;\n\treadonly button?: ISCMActionButtonDescriptor;\n}\n\nexport interface ISCMInput {\n\treadonly repository: ISCMRepository;\n\n\treadonly value: string;\n\tsetValue(value: string, fromKeyboard: boolean): void;\n\treadonly onDidChange: Event<ISCMInputChangeEvent>;\n\n\tplaceholder: string;\n\treadonly onDidChangePlaceholder: Event<string>;\n\n\tvalidateInput: IInputValidator;\n\treadonly onDidChangeValidateInput: Event<void>;\n\n\tenabled: boolean;\n\treadonly onDidChangeEnablement: Event<boolean>;\n\n\tvisible: boolean;\n\treadonly onDidChangeVisibility: Event<boolean>;\n\n\tsetFocus(): void;\n\treadonly onDidChangeFocus: Event<void>;\n\n\tshowValidationMessage(\n\t\tmessage: string | IMarkdownString,\n\t\ttype: InputValidationType,\n\t): void;\n\treadonly onDidChangeValidationMessage: Event<IInputValidation>;\n\n\tshowNextHistoryValue(): void;\n\tshowPreviousHistoryValue(): void;\n}\n\nexport interface ISCMRepository extends IDisposable {\n\treadonly id: string;\n\treadonly provider: ISCMProvider;\n\treadonly input: ISCMInput;\n}\n\nexport interface ISCMService {\n\treadonly _serviceBrand: undefined;\n\treadonly onDidAddRepository: Event<ISCMRepository>;\n\treadonly onDidRemoveRepository: Event<ISCMRepository>;\n\treadonly repositories: Iterable<ISCMRepository>;\n\treadonly repositoryCount: number;\n\n\tregisterSCMProvider(provider: ISCMProvider): ISCMRepository;\n\n\tgetRepository(id: string): ISCMRepository | undefined;\n\tgetRepository(resource: URI): ISCMRepository | undefined;\n}\n\nexport interface ISCMTitleMenu {\n\treadonly actions: IAction[];\n\treadonly secondaryActions: IAction[];\n\treadonly onDidChangeTitle: Event<void>;\n\treadonly menu: IMenu;\n}\n\nexport interface ISCMRepositoryMenus {\n\treadonly titleMenu: ISCMTitleMenu;\n\treadonly repositoryMenu: IMenu;\n\treadonly repositoryContextMenu: IMenu;\n\tgetResourceGroupMenu(group: ISCMResourceGroup): IMenu;\n\tgetResourceMenu(resource: ISCMResource): IMenu;\n\tgetResourceFolderMenu(group: ISCMResourceGroup): IMenu;\n}\n\nexport interface ISCMMenus {\n\tgetRepositoryMenus(provider: ISCMProvider): ISCMRepositoryMenus;\n}\n\nexport enum ISCMRepositorySortKey {\n\tDiscoveryTime = \"discoveryTime\",\n\tName = \"name\",\n\tPath = \"path\",\n}\n\nexport const ISCMViewService = createDecorator<ISCMViewService>(\"scmView\");\n\nexport interface ISCMViewVisibleRepositoryChangeEvent {\n\treadonly added: Iterable<ISCMRepository>;\n\treadonly removed: Iterable<ISCMRepository>;\n}\n\nexport interface ISCMViewService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly menus: ISCMMenus;\n\n\trepositories: ISCMRepository[];\n\treadonly onDidChangeRepositories: Event<ISCMViewVisibleRepositoryChangeEvent>;\n\n\tvisibleRepositories: readonly ISCMRepository[];\n\treadonly onDidChangeVisibleRepositories: Event<ISCMViewVisibleRepositoryChangeEvent>;\n\n\tisVisible(repository: ISCMRepository): boolean;\n\ttoggleVisibility(repository: ISCMRepository, visible?: boolean): void;\n\n\ttoggleSortKey(sortKey: ISCMRepositorySortKey): void;\n\n\treadonly focusedRepository: ISCMRepository | undefined;\n\treadonly onDidFocusRepository: Event<ISCMRepository | undefined>;\n\tfocus(repository: ISCMRepository): void;\n\n\t/**\n\t * Focused repository or the repository for the active editor\n\t */\n\treadonly activeRepository: IObservable<ISCMRepository | undefined>;\n}\n\nexport const SCM_CHANGES_EDITOR_ID = \"workbench.editor.scmChangesEditor\";\n\nexport type ISCMChangesEditor = {};\n"],
  "mappings": "AAgBA,SAAS,uBAAuB;AAGzB,MAAM,aAAa;AACnB,MAAM,eAAe;AACrB,MAAM,4BAA4B;AAClC,MAAM,uBAAuB;AAM7B,MAAM,cAAc,gBAA6B,KAAK;AAgEtD,IAAK,sBAAL,kBAAKA,yBAAL;AACN,EAAAA,0CAAA,WAAQ,KAAR;AACA,EAAAA,0CAAA,aAAU,KAAV;AACA,EAAAA,0CAAA,iBAAc,KAAd;AAHW,SAAAA;AAAA,GAAA;AAkBL,IAAK,uBAAL,kBAAKC,0BAAL;AACN,EAAAA,4CAAA,qBAAkB,KAAlB;AACA,EAAAA,4CAAA,iBAAc,KAAd;AAFW,SAAAA;AAAA,GAAA;AA8FL,IAAK,wBAAL,kBAAKC,2BAAL;AACN,EAAAA,uBAAA,mBAAgB;AAChB,EAAAA,uBAAA,UAAO;AACP,EAAAA,uBAAA,UAAO;AAHI,SAAAA;AAAA,GAAA;AAML,MAAM,kBAAkB,gBAAiC,SAAS;AAiClE,MAAM,wBAAwB;",
  "names": ["InputValidationType", "SCMInputChangeReason", "ISCMRepositorySortKey"]
}
