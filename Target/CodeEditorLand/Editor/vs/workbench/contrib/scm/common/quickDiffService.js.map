{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/scm/common/quickDiffService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from \"../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { isEqualOrParent } from \"../../../../base/common/resources.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { score } from \"../../../../editor/common/languageSelector.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport type {\n\tIQuickDiffService,\n\tQuickDiff,\n\tQuickDiffProvider,\n} from \"./quickDiff.js\";\n\nfunction createProviderComparer(\n\turi: URI,\n): (a: QuickDiffProvider, b: QuickDiffProvider) => number {\n\treturn (a, b) => {\n\t\tif (a.rootUri && !b.rootUri) {\n\t\t\treturn -1;\n\t\t} else if (!a.rootUri && b.rootUri) {\n\t\t\treturn 1;\n\t\t} else if (!a.rootUri && !b.rootUri) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst aIsParent = isEqualOrParent(uri, a.rootUri!);\n\t\tconst bIsParent = isEqualOrParent(uri, b.rootUri!);\n\n\t\tif (aIsParent && bIsParent) {\n\t\t\treturn a.rootUri!.fsPath.length - b.rootUri!.fsPath.length;\n\t\t} else if (aIsParent) {\n\t\t\treturn -1;\n\t\t} else if (bIsParent) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t};\n}\n\nexport class QuickDiffService extends Disposable implements IQuickDiffService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate quickDiffProviders: Set<QuickDiffProvider> = new Set();\n\tprivate readonly _onDidChangeQuickDiffProviders = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onDidChangeQuickDiffProviders =\n\t\tthis._onDidChangeQuickDiffProviders.event;\n\n\tconstructor(@IUriIdentityService private readonly uriIdentityService: IUriIdentityService) {\n\t\tsuper();\n\t}\n\n\taddQuickDiffProvider(quickDiff: QuickDiffProvider): IDisposable {\n\t\tthis.quickDiffProviders.add(quickDiff);\n\t\tthis._onDidChangeQuickDiffProviders.fire();\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tthis.quickDiffProviders.delete(quickDiff);\n\t\t\t\tthis._onDidChangeQuickDiffProviders.fire();\n\t\t\t},\n\t\t};\n\t}\n\n\tprivate isQuickDiff(diff: {\n\t\toriginalResource?: URI;\n\t\tlabel?: string;\n\t\tisSCM?: boolean;\n\t}): diff is QuickDiff {\n\t\treturn (\n\t\t\t!!diff.originalResource &&\n\t\t\ttypeof diff.label === \"string\" &&\n\t\t\ttypeof diff.isSCM === \"boolean\"\n\t\t);\n\t}\n\n\tasync getQuickDiffs(\n\t\turi: URI,\n\t\tlanguage = \"\",\n\t\tisSynchronized = false,\n\t): Promise<QuickDiff[]> {\n\t\tconst providers = Array.from(this.quickDiffProviders)\n\t\t\t.filter(\n\t\t\t\t(provider) =>\n\t\t\t\t\t!provider.rootUri ||\n\t\t\t\t\tthis.uriIdentityService.extUri.isEqualOrParent(\n\t\t\t\t\t\turi,\n\t\t\t\t\t\tprovider.rootUri,\n\t\t\t\t\t),\n\t\t\t)\n\t\t\t.sort(createProviderComparer(uri));\n\n\t\tconst diffs = await Promise.all(\n\t\t\tproviders.map(async (provider) => {\n\t\t\t\tconst scoreValue = provider.selector\n\t\t\t\t\t? score(\n\t\t\t\t\t\t\tprovider.selector,\n\t\t\t\t\t\t\turi,\n\t\t\t\t\t\t\tlanguage,\n\t\t\t\t\t\t\tisSynchronized,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t)\n\t\t\t\t\t: 10;\n\t\t\t\tconst diff: Partial<QuickDiff> = {\n\t\t\t\t\toriginalResource:\n\t\t\t\t\t\tscoreValue > 0\n\t\t\t\t\t\t\t? ((await provider.getOriginalResource(uri)) ??\n\t\t\t\t\t\t\t\tundefined)\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\tlabel: provider.label,\n\t\t\t\t\tisSCM: provider.isSCM,\n\t\t\t\t};\n\t\t\t\treturn diff;\n\t\t\t}),\n\t\t);\n\t\treturn diffs.filter<QuickDiff>(this.isQuickDiff);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,eAAe;AACxB;AAAA,EACC;AAAA,OAEM;AACP,SAAS,uBAAuB;AAEhC,SAAS,aAAa;AACtB,SAAS,2BAA2B;AAOpC,SAAS,uBACR,KACyD;AACzD,SAAO,CAAC,GAAG,MAAM;AAChB,QAAI,EAAE,WAAW,CAAC,EAAE,SAAS;AAC5B,aAAO;AAAA,IACR,WAAW,CAAC,EAAE,WAAW,EAAE,SAAS;AACnC,aAAO;AAAA,IACR,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,SAAS;AACpC,aAAO;AAAA,IACR;AAEA,UAAM,YAAY,gBAAgB,KAAK,EAAE,OAAQ;AACjD,UAAM,YAAY,gBAAgB,KAAK,EAAE,OAAQ;AAEjD,QAAI,aAAa,WAAW;AAC3B,aAAO,EAAE,QAAS,OAAO,SAAS,EAAE,QAAS,OAAO;AAAA,IACrD,WAAW,WAAW;AACrB,aAAO;AAAA,IACR,WAAW,WAAW;AACrB,aAAO;AAAA,IACR,OAAO;AACN,aAAO;AAAA,IACR;AAAA,EACD;AACD;AAzBS;AA2BF,IAAM,mBAAN,cAA+B,WAAwC;AAAA,EAU7E,YAAkD,oBAAyC;AAC1F,UAAM;AAD2C;AAAA,EAElD;AAAA,EA3DD,OA+C8E;AAAA;AAAA;AAAA,EAGrE,qBAA6C,oBAAI,IAAI;AAAA,EAC5C,iCAAiC,KAAK;AAAA,IACtD,IAAI,QAAc;AAAA,EACnB;AAAA,EACS,gCACR,KAAK,+BAA+B;AAAA,EAMrC,qBAAqB,WAA2C;AAC/D,SAAK,mBAAmB,IAAI,SAAS;AACrC,SAAK,+BAA+B,KAAK;AACzC,WAAO;AAAA,MACN,SAAS,6BAAM;AACd,aAAK,mBAAmB,OAAO,SAAS;AACxC,aAAK,+BAA+B,KAAK;AAAA,MAC1C,GAHS;AAAA,IAIV;AAAA,EACD;AAAA,EAEQ,YAAY,MAIE;AACrB,WACC,CAAC,CAAC,KAAK,oBACP,OAAO,KAAK,UAAU,YACtB,OAAO,KAAK,UAAU;AAAA,EAExB;AAAA,EAEA,MAAM,cACL,KACA,WAAW,IACX,iBAAiB,OACM;AACvB,UAAM,YAAY,MAAM,KAAK,KAAK,kBAAkB,EAClD;AAAA,MACA,CAAC,aACA,CAAC,SAAS,WACV,KAAK,mBAAmB,OAAO;AAAA,QAC9B;AAAA,QACA,SAAS;AAAA,MACV;AAAA,IACF,EACC,KAAK,uBAAuB,GAAG,CAAC;AAElC,UAAM,QAAQ,MAAM,QAAQ;AAAA,MAC3B,UAAU,IAAI,OAAO,aAAa;AACjC,cAAM,aAAa,SAAS,WACzB;AAAA,UACA,SAAS;AAAA,UACT;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACD,IACC;AACH,cAAM,OAA2B;AAAA,UAChC,kBACC,aAAa,IACR,MAAM,SAAS,oBAAoB,GAAG,KACzC,SACC;AAAA,UACJ,OAAO,SAAS;AAAA,UAChB,OAAO,SAAS;AAAA,QACjB;AACA,eAAO;AAAA,MACR,CAAC;AAAA,IACF;AACA,WAAO,MAAM,OAAkB,KAAK,WAAW;AAAA,EAChD;AACD;AA/Ea,mBAAN;AAAA,EAUO;AAAA,GAVD;",
  "names": []
}
