{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/scm/common/quickDiffService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from '../../../../base/common/uri.js';\nimport { Disposable, IDisposable } from '../../../../base/common/lifecycle.js';\nimport { IQuickDiffService, QuickDiff, QuickDiffProvider } from './quickDiff.js';\nimport { isEqualOrParent } from '../../../../base/common/resources.js';\nimport { score } from '../../../../editor/common/languageSelector.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\n\nfunction createProviderComparer(uri: URI): (a: QuickDiffProvider, b: QuickDiffProvider) => number {\n\treturn (a, b) => {\n\t\tif (a.rootUri && !b.rootUri) {\n\t\t\treturn -1;\n\t\t} else if (!a.rootUri && b.rootUri) {\n\t\t\treturn 1;\n\t\t} else if (!a.rootUri && !b.rootUri) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst aIsParent = isEqualOrParent(uri, a.rootUri!);\n\t\tconst bIsParent = isEqualOrParent(uri, b.rootUri!);\n\n\t\tif (aIsParent && bIsParent) {\n\t\t\treturn a.rootUri!.fsPath.length - b.rootUri!.fsPath.length;\n\t\t} else if (aIsParent) {\n\t\t\treturn -1;\n\t\t} else if (bIsParent) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t};\n}\n\nexport class QuickDiffService extends Disposable implements IQuickDiffService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate quickDiffProviders: Set<QuickDiffProvider> = new Set();\n\tprivate readonly _onDidChangeQuickDiffProviders = this._register(new Emitter<void>());\n\treadonly onDidChangeQuickDiffProviders = this._onDidChangeQuickDiffProviders.event;\n\n\tconstructor(@IUriIdentityService private readonly uriIdentityService: IUriIdentityService) {\n\t\tsuper();\n\t}\n\n\taddQuickDiffProvider(quickDiff: QuickDiffProvider): IDisposable {\n\t\tthis.quickDiffProviders.add(quickDiff);\n\t\tthis._onDidChangeQuickDiffProviders.fire();\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tthis.quickDiffProviders.delete(quickDiff);\n\t\t\t\tthis._onDidChangeQuickDiffProviders.fire();\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate isQuickDiff(diff: { originalResource?: URI; label?: string; isSCM?: boolean }): diff is QuickDiff {\n\t\treturn !!diff.originalResource && (typeof diff.label === 'string') && (typeof diff.isSCM === 'boolean');\n\t}\n\n\tasync getQuickDiffs(uri: URI, language: string = '', isSynchronized: boolean = false): Promise<QuickDiff[]> {\n\t\tconst providers = Array.from(this.quickDiffProviders)\n\t\t\t.filter(provider => !provider.rootUri || this.uriIdentityService.extUri.isEqualOrParent(uri, provider.rootUri))\n\t\t\t.sort(createProviderComparer(uri));\n\n\t\tconst diffs = await Promise.all(providers.map(async provider => {\n\t\t\tconst scoreValue = provider.selector ? score(provider.selector, uri, language, isSynchronized, undefined, undefined) : 10;\n\t\t\tconst diff: Partial<QuickDiff> = {\n\t\t\t\toriginalResource: scoreValue > 0 ? await provider.getOriginalResource(uri) ?? undefined : undefined,\n\t\t\t\tlabel: provider.label,\n\t\t\t\tisSCM: provider.isSCM\n\t\t\t};\n\t\t\treturn diff;\n\t\t}));\n\t\treturn diffs.filter<QuickDiff>(this.isQuickDiff);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,WAAW;AACpB,SAAS,YAAY,mBAAmB;AACxC,SAAS,mBAAmB,WAAW,yBAAyB;AAChE,SAAS,uBAAuB;AAChC,SAAS,aAAa;AACtB,SAAS,eAAe;AACxB,SAAS,2BAA2B;AAEpC,SAAS,uBAAuB,KAAkE;AACjG,SAAO,CAAC,GAAG,MAAM;AAChB,QAAI,EAAE,WAAW,CAAC,EAAE,SAAS;AAC5B,aAAO;AAAA,IACR,WAAW,CAAC,EAAE,WAAW,EAAE,SAAS;AACnC,aAAO;AAAA,IACR,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,SAAS;AACpC,aAAO;AAAA,IACR;AAEA,UAAM,YAAY,gBAAgB,KAAK,EAAE,OAAQ;AACjD,UAAM,YAAY,gBAAgB,KAAK,EAAE,OAAQ;AAEjD,QAAI,aAAa,WAAW;AAC3B,aAAO,EAAE,QAAS,OAAO,SAAS,EAAE,QAAS,OAAO;AAAA,IACrD,WAAW,WAAW;AACrB,aAAO;AAAA,IACR,WAAW,WAAW;AACrB,aAAO;AAAA,IACR,OAAO;AACN,aAAO;AAAA,IACR;AAAA,EACD;AACD;AAvBS;AAyBF,IAAM,mBAAN,cAA+B,WAAwC;AAAA,EAO7E,YAAkD,oBAAyC;AAC1F,UAAM;AAD2C;AAAA,EAElD;AAAA,EA/CD,OAsC8E;AAAA;AAAA;AAAA,EAGrE,qBAA6C,oBAAI,IAAI;AAAA,EAC5C,iCAAiC,KAAK,UAAU,IAAI,QAAc,CAAC;AAAA,EAC3E,gCAAgC,KAAK,+BAA+B;AAAA,EAM7E,qBAAqB,WAA2C;AAC/D,SAAK,mBAAmB,IAAI,SAAS;AACrC,SAAK,+BAA+B,KAAK;AACzC,WAAO;AAAA,MACN,SAAS,6BAAM;AACd,aAAK,mBAAmB,OAAO,SAAS;AACxC,aAAK,+BAA+B,KAAK;AAAA,MAC1C,GAHS;AAAA,IAIV;AAAA,EACD;AAAA,EAEQ,YAAY,MAAsF;AACzG,WAAO,CAAC,CAAC,KAAK,oBAAqB,OAAO,KAAK,UAAU,YAAc,OAAO,KAAK,UAAU;AAAA,EAC9F;AAAA,EAEA,MAAM,cAAc,KAAU,WAAmB,IAAI,iBAA0B,OAA6B;AAC3G,UAAM,YAAY,MAAM,KAAK,KAAK,kBAAkB,EAClD,OAAO,cAAY,CAAC,SAAS,WAAW,KAAK,mBAAmB,OAAO,gBAAgB,KAAK,SAAS,OAAO,CAAC,EAC7G,KAAK,uBAAuB,GAAG,CAAC;AAElC,UAAM,QAAQ,MAAM,QAAQ,IAAI,UAAU,IAAI,OAAM,aAAY;AAC/D,YAAM,aAAa,SAAS,WAAW,MAAM,SAAS,UAAU,KAAK,UAAU,gBAAgB,QAAW,MAAS,IAAI;AACvH,YAAM,OAA2B;AAAA,QAChC,kBAAkB,aAAa,IAAI,MAAM,SAAS,oBAAoB,GAAG,KAAK,SAAY;AAAA,QAC1F,OAAO,SAAS;AAAA,QAChB,OAAO,SAAS;AAAA,MACjB;AACA,aAAO;AAAA,IACR,CAAC,CAAC;AACF,WAAO,MAAM,OAAkB,KAAK,WAAW;AAAA,EAChD;AACD;AA1Ca,mBAAN;AAAA,EAOO;AAAA,GAPD;",
  "names": []
}
