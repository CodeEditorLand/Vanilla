{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/folding/browser/folding.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { FoldingController } from '../../../../editor/contrib/folding/browser/folding.js';\nimport * as nls from '../../../../nls.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContributionsRegistry, IWorkbenchContribution } from '../../../common/contributions.js';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { editorConfigurationBaseNode } from '../../../../editor/common/config/editorConfigurationSchema.js';\nimport { LifecyclePhase } from '../../../services/lifecycle/common/lifecycle.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { FoldingRangeProvider } from '../../../../editor/common/languages.js';\nimport { ITextModel } from '../../../../editor/common/model.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IExtensionDescription } from '../../../../platform/extensions/common/extensions.js';\n\nclass DefaultFoldingRangeProvider extends Disposable implements IWorkbenchContribution {\n\n\tstatic readonly configName = 'editor.defaultFoldingRangeProvider';\n\n\tstatic extensionIds: (string | null)[] = [];\n\tstatic extensionItemLabels: string[] = [];\n\tstatic extensionDescriptions: string[] = [];\n\n\tconstructor(\n\t\t@IExtensionService private readonly _extensionService: IExtensionService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\t\tthis._store.add(this._extensionService.onDidChangeExtensions(this._updateConfigValues, this));\n\t\tthis._store.add(FoldingController.setFoldingRangeProviderSelector(this._selectFoldingRangeProvider.bind(this)));\n\n\t\tthis._updateConfigValues();\n\t}\n\n\tprivate async _updateConfigValues(): Promise<void> {\n\t\tawait this._extensionService.whenInstalledExtensionsRegistered();\n\n\t\tDefaultFoldingRangeProvider.extensionIds.length = 0;\n\t\tDefaultFoldingRangeProvider.extensionItemLabels.length = 0;\n\t\tDefaultFoldingRangeProvider.extensionDescriptions.length = 0;\n\n\t\tDefaultFoldingRangeProvider.extensionIds.push(null);\n\t\tDefaultFoldingRangeProvider.extensionItemLabels.push(nls.localize('null', 'All'));\n\t\tDefaultFoldingRangeProvider.extensionDescriptions.push(nls.localize('nullFormatterDescription', \"All active folding range providers\"));\n\n\t\tconst languageExtensions: IExtensionDescription[] = [];\n\t\tconst otherExtensions: IExtensionDescription[] = [];\n\n\t\tfor (const extension of this._extensionService.extensions) {\n\t\t\tif (extension.main || extension.browser) {\n\t\t\t\tif (extension.categories?.find(cat => cat === 'Programming Languages')) {\n\t\t\t\t\tlanguageExtensions.push(extension);\n\t\t\t\t} else {\n\t\t\t\t\totherExtensions.push(extension);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst sorter = (a: IExtensionDescription, b: IExtensionDescription) => a.name.localeCompare(b.name);\n\n\t\tfor (const extension of languageExtensions.sort(sorter)) {\n\t\t\tDefaultFoldingRangeProvider.extensionIds.push(extension.identifier.value);\n\t\t\tDefaultFoldingRangeProvider.extensionItemLabels.push(extension.displayName ?? '');\n\t\t\tDefaultFoldingRangeProvider.extensionDescriptions.push(extension.description ?? '');\n\t\t}\n\t\tfor (const extension of otherExtensions.sort(sorter)) {\n\t\t\tDefaultFoldingRangeProvider.extensionIds.push(extension.identifier.value);\n\t\t\tDefaultFoldingRangeProvider.extensionItemLabels.push(extension.displayName ?? '');\n\t\t\tDefaultFoldingRangeProvider.extensionDescriptions.push(extension.description ?? '');\n\t\t}\n\t}\n\n\tprivate _selectFoldingRangeProvider(providers: FoldingRangeProvider[], document: ITextModel): FoldingRangeProvider[] | undefined {\n\t\tconst value = this._configurationService.getValue<string>(DefaultFoldingRangeProvider.configName, { overrideIdentifier: document.getLanguageId() });\n\t\tif (value) {\n\t\t\treturn providers.filter(p => p.id === value);\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).registerConfiguration({\n\t...editorConfigurationBaseNode,\n\tproperties: {\n\t\t[DefaultFoldingRangeProvider.configName]: {\n\t\t\tdescription: nls.localize('formatter.default', \"Defines a default folding range provider that takes precedence over all other folding range providers. Must be the identifier of an extension contributing a folding range provider.\"),\n\t\t\ttype: ['string', 'null'],\n\t\t\tdefault: null,\n\t\t\tenum: DefaultFoldingRangeProvider.extensionIds,\n\t\t\tenumItemLabels: DefaultFoldingRangeProvider.extensionItemLabels,\n\t\t\tmarkdownEnumDescriptions: DefaultFoldingRangeProvider.extensionDescriptions\n\t\t}\n\t}\n});\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(\n\tDefaultFoldingRangeProvider,\n\tLifecyclePhase.Restored\n);\n\n"],
  "mappings": "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",
  "names": []
}
