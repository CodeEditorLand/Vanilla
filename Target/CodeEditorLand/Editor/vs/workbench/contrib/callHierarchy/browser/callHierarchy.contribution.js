var K=Object.defineProperty;var F=Object.getOwnPropertyDescriptor;var S=(s,e,i,r)=>{for(var o=r>1?void 0:r?F(e,i):e,n=s.length-1,w;n>=0;n--)(w=s[n])&&(o=(r?w(e,i,o):w(o))||o);return r&&o&&K(e,i,o),o},d=(s,e)=>(i,r)=>e(i,r,s);import{CancellationTokenSource as E}from"../../../../base/common/cancellation.js";import{Codicon as b}from"../../../../base/common/codicons.js";import{isCancellationError as W}from"../../../../base/common/errors.js";import{Event as x}from"../../../../base/common/event.js";import{KeyCode as h,KeyMod as l}from"../../../../base/common/keyCodes.js";import{DisposableStore as D}from"../../../../base/common/lifecycle.js";import{EditorAction2 as g,EditorContributionInstantiation as A,registerEditorContribution as R}from"../../../../editor/browser/editorExtensions.js";import{ICodeEditorService as O}from"../../../../editor/browser/services/codeEditorService.js";import{Range as V}from"../../../../editor/common/core/range.js";import{EditorContextKeys as P}from"../../../../editor/common/editorContextKeys.js";import{PeekContext as k}from"../../../../editor/contrib/peekView/browser/peekView.js";import{localize as c,localize2 as _}from"../../../../nls.js";import{MenuId as q,registerAction2 as m}from"../../../../platform/actions/common/actions.js";import{ContextKeyExpr as y,IContextKeyService as L,RawContextKey as I}from"../../../../platform/contextkey/common/contextkey.js";import{IInstantiationService as j}from"../../../../platform/instantiation/common/instantiation.js";import{KeybindingWeight as C}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{IStorageService as z,StorageScope as T,StorageTarget as N}from"../../../../platform/storage/common/storage.js";import{registerIcon as M}from"../../../../platform/theme/common/iconRegistry.js";import{CallHierarchyDirection as a,CallHierarchyModel as B,CallHierarchyProviderRegistry as f}from"../common/callHierarchy.js";import{CallHierarchyTreePeekWidget as v}from"./callHierarchyPeek.js";const H=new I("editorHasCallHierarchyProvider",!1,c("editorHasCallHierarchyProvider","Whether a call hierarchy provider is available")),p=new I("callHierarchyVisible",!1,c("callHierarchyVisible","Whether call hierarchy peek is currently showing")),u=new I("callHierarchyDirection",void 0,{type:"string",description:c("callHierarchyDirection","Whether call hierarchy shows incoming or outgoing calls")});function U(s){return s===a.CallsFrom||s===a.CallsTo?s:a.CallsTo}let t=class{constructor(e,i,r,o,n){this._editor=e;this._contextKeyService=i;this._storageService=r;this._editorService=o;this._instantiationService=n;this._ctxIsVisible=p.bindTo(this._contextKeyService),this._ctxHasProvider=H.bindTo(this._contextKeyService),this._ctxDirection=u.bindTo(this._contextKeyService),this._dispoables.add(x.any(e.onDidChangeModel,e.onDidChangeModelLanguage,f.onDidChange)(()=>{this._ctxHasProvider.set(e.hasModel()&&f.has(e.getModel()))})),this._dispoables.add(this._sessionDisposables)}static Id="callHierarchy";static get(e){return e.getContribution(t.Id)}static _StorageDirection="callHierarchy/defaultDirection";_ctxHasProvider;_ctxIsVisible;_ctxDirection;_dispoables=new D;_sessionDisposables=new D;_widget;dispose(){this._ctxHasProvider.reset(),this._ctxIsVisible.reset(),this._dispoables.dispose()}async startCallHierarchyFromEditor(){if(this._sessionDisposables.clear(),!this._editor.hasModel())return;const e=this._editor.getModel(),i=this._editor.getPosition();if(!f.has(e))return;const r=new E,o=B.create(e,i,r.token),n=U(this._storageService.get(t._StorageDirection,T.PROFILE,a.CallsTo));this._showCallHierarchyWidget(i,n,o,r)}async startCallHierarchyFromCallHierarchy(){if(!this._widget)return;const e=this._widget.getModel(),i=this._widget.getFocused();if(!i||!e)return;const r=await this._editorService.openCodeEditor({resource:i.item.uri},this._editor);if(!r)return;const o=e.fork(i.item);this._sessionDisposables.clear(),t.get(r)?._showCallHierarchyWidget(V.lift(o.root.selectionRange).getStartPosition(),this._widget.direction,Promise.resolve(o),new E)}_showCallHierarchyWidget(e,i,r,o){this._ctxIsVisible.set(!0),this._ctxDirection.set(i),x.any(this._editor.onDidChangeModel,this._editor.onDidChangeModelLanguage)(this.endCallHierarchy,this,this._sessionDisposables),this._widget=this._instantiationService.createInstance(v,this._editor,e,i),this._widget.showLoading(),this._sessionDisposables.add(this._widget.onDidClose(()=>{this.endCallHierarchy(),this._storageService.store(t._StorageDirection,this._widget.direction,T.PROFILE,N.USER)})),this._sessionDisposables.add({dispose(){o.dispose(!0)}}),this._sessionDisposables.add(this._widget),r.then(n=>{o.token.isCancellationRequested||(n?(this._sessionDisposables.add(n),this._widget.showModel(n)):this._widget.showMessage(c("no.item","No results")))}).catch(n=>{if(W(n)){this.endCallHierarchy();return}this._widget.showMessage(c("error","Failed to show call hierarchy"))})}showOutgoingCalls(){this._widget?.updateDirection(a.CallsFrom),this._ctxDirection.set(a.CallsFrom)}showIncomingCalls(){this._widget?.updateDirection(a.CallsTo),this._ctxDirection.set(a.CallsTo)}endCallHierarchy(){this._sessionDisposables.clear(),this._ctxIsVisible.set(!1),this._editor.focus()}};t=S([d(1,L),d(2,z),d(3,O),d(4,j)],t),R(t.Id,t,A.Eager),m(class extends g{constructor(){super({id:"editor.showCallHierarchy",title:_("title","Peek Call Hierarchy"),menu:{id:q.EditorContextPeek,group:"navigation",order:1e3,when:y.and(H,k.notInPeekEditor,P.isInEmbeddedEditor.toNegated())},keybinding:{when:P.editorTextFocus,weight:C.WorkbenchContrib,primary:l.Shift+l.Alt+h.KeyH},precondition:y.and(H,k.notInPeekEditor),f1:!0})}async runEditorCommand(e,i){return t.get(i)?.startCallHierarchyFromEditor()}}),m(class extends g{constructor(){super({id:"editor.showIncomingCalls",title:_("title.incoming","Show Incoming Calls"),icon:M("callhierarchy-incoming",b.callIncoming,c("showIncomingCallsIcons","Icon for incoming calls in the call hierarchy view.")),precondition:y.and(p,u.isEqualTo(a.CallsFrom)),keybinding:{weight:C.WorkbenchContrib,primary:l.Shift+l.Alt+h.KeyH},menu:{id:v.TitleMenu,when:u.isEqualTo(a.CallsFrom),order:1}})}runEditorCommand(s,e){return t.get(e)?.showIncomingCalls()}}),m(class extends g{constructor(){super({id:"editor.showOutgoingCalls",title:_("title.outgoing","Show Outgoing Calls"),icon:M("callhierarchy-outgoing",b.callOutgoing,c("showOutgoingCallsIcon","Icon for outgoing calls in the call hierarchy view.")),precondition:y.and(p,u.isEqualTo(a.CallsTo)),keybinding:{weight:C.WorkbenchContrib,primary:l.Shift+l.Alt+h.KeyH},menu:{id:v.TitleMenu,when:u.isEqualTo(a.CallsTo),order:1}})}runEditorCommand(s,e){return t.get(e)?.showOutgoingCalls()}}),m(class extends g{constructor(){super({id:"editor.refocusCallHierarchy",title:_("title.refocus","Refocus Call Hierarchy"),precondition:p,keybinding:{weight:C.WorkbenchContrib,primary:l.Shift+h.Enter}})}async runEditorCommand(s,e){return t.get(e)?.startCallHierarchyFromCallHierarchy()}}),m(class extends g{constructor(){super({id:"editor.closeCallHierarchy",title:c("close","Close"),icon:b.close,precondition:p,keybinding:{weight:C.WorkbenchContrib+10,primary:h.Escape,when:y.not("config.editor.stablePeek")},menu:{id:v.TitleMenu,order:1e3}})}runEditorCommand(s,e){return t.get(e)?.endCallHierarchy()}});
