{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/themes/browser/themes.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Toggle } from \"../../../../base/browser/ui/toggle/toggle.js\";\nimport { mainWindow } from \"../../../../base/browser/window.js\";\nimport { ThrottledDelayer } from \"../../../../base/common/async.js\";\nimport {\n\ttype CancellationToken,\n\tCancellationTokenSource,\n} from \"../../../../base/common/cancellation.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { Color } from \"../../../../base/common/color.js\";\nimport {\n\tisCancellationError,\n\tonUnexpectedError,\n} from \"../../../../base/common/errors.js\";\nimport { Emitter } from \"../../../../base/common/event.js\";\nimport { KeyChord, KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { isWeb } from \"../../../../base/common/platform.js\";\nimport { equalsIgnoreCase } from \"../../../../base/common/strings.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport { Categories } from \"../../../../platform/action/common/actionCommonCategories.js\";\nimport {\n\tAction2,\n\ttype ISubmenuItem,\n\tMenuId,\n\tMenuRegistry,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport {\n\tCommandsRegistry,\n\tICommandService,\n} from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IDialogService } from \"../../../../platform/dialogs/common/dialogs.js\";\nimport {\n\tIExtensionGalleryService,\n\tIExtensionManagementService,\n\ttype IGalleryExtension,\n} from \"../../../../platform/extensionManagement/common/extensionManagement.js\";\nimport { IExtensionResourceLoaderService } from \"../../../../platform/extensionResourceLoader/common/extensionResourceLoader.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport {\n\tINotificationService,\n\ttype IPromptChoice,\n\tSeverity,\n} from \"../../../../platform/notification/common/notification.js\";\nimport {\n\tIProgressService,\n\tProgressLocation,\n} from \"../../../../platform/progress/common/progress.js\";\nimport {\n\ttype IQuickInputButton,\n\tIQuickInputService,\n\ttype IQuickInputToggle,\n\ttype IQuickPick,\n\ttype IQuickPickItem,\n\ttype QuickPickInput,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { defaultToggleStyles } from \"../../../../platform/theme/browser/defaultStyles.js\";\nimport {\n\tExtensions as ColorRegistryExtensions,\n\ttype IColorRegistry,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport { registerIcon } from \"../../../../platform/theme/common/iconRegistry.js\";\nimport {\n\tColorScheme,\n\tisHighContrast,\n} from \"../../../../platform/theme/common/theme.js\";\nimport {\n\tExtensions,\n\ttype IWorkbenchContribution,\n\ttype IWorkbenchContributionsRegistry,\n} from \"../../../common/contributions.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { IHostService } from \"../../../services/host/browser/host.js\";\nimport { LifecyclePhase } from \"../../../services/lifecycle/common/lifecycle.js\";\nimport { IPreferencesService } from \"../../../services/preferences/common/preferences.js\";\nimport { FileIconThemeData } from \"../../../services/themes/browser/fileIconThemeData.js\";\nimport {\n\tDEFAULT_PRODUCT_ICON_THEME_ID,\n\tProductIconThemeData,\n} from \"../../../services/themes/browser/productIconThemeData.js\";\nimport { colorThemeSchemaId } from \"../../../services/themes/common/colorThemeSchema.js\";\nimport {\n\ttype IWorkbenchColorTheme,\n\ttype IWorkbenchFileIconTheme,\n\ttype IWorkbenchProductIconTheme,\n\ttype IWorkbenchTheme,\n\tIWorkbenchThemeService,\n\tThemeSettingDefaults,\n\ttype ThemeSettingTarget,\n\tThemeSettings,\n} from \"../../../services/themes/common/workbenchThemeService.js\";\nimport { IExtensionsWorkbenchService } from \"../../extensions/common/extensions.js\";\n\nexport const manageExtensionIcon = registerIcon(\n\t\"theme-selection-manage-extension\",\n\tCodicon.gear,\n\tlocalize(\n\t\t\"manageExtensionIcon\",\n\t\t\"Icon for the 'Manage' action in the theme selection quick pick.\",\n\t),\n);\n\ntype PickerResult = \"back\" | \"selected\" | \"cancelled\";\n\nenum ConfigureItem {\n\tBROWSE_GALLERY = \"marketplace\",\n\tEXTENSIONS_VIEW = \"extensions\",\n\tCUSTOM_TOP_ENTRY = \"customTopEntry\",\n}\n\nclass MarketplaceThemesPicker {\n\tprivate readonly _installedExtensions: Promise<Set<string>>;\n\tprivate readonly _marketplaceExtensions: Set<string> = new Set();\n\tprivate readonly _marketplaceThemes: ThemeItem[] = [];\n\n\tprivate _searchOngoing = false;\n\tprivate _searchError: string | undefined = undefined;\n\tprivate readonly _onDidChange = new Emitter<void>();\n\n\tprivate _tokenSource: CancellationTokenSource | undefined;\n\tprivate readonly _queryDelayer = new ThrottledDelayer<void>(200);\n\n\tconstructor(\n\t\tprivate readonly getMarketplaceColorThemes: (\n\t\t\tpublisher: string,\n\t\t\tname: string,\n\t\t\tversion: string,\n\t\t) => Promise<IWorkbenchTheme[]>,\n\t\tprivate readonly marketplaceQuery: string,\n\n\t\t@IExtensionGalleryService\n\t\tprivate readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@IExtensionManagementService\n\t\tprivate readonly extensionManagementService: IExtensionManagementService,\n\t\t@IQuickInputService\n\t\tprivate readonly quickInputService: IQuickInputService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IProgressService private readonly progressService: IProgressService,\n\t\t@IExtensionsWorkbenchService\n\t\tprivate readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t) {\n\t\tthis._installedExtensions = extensionManagementService\n\t\t\t.getInstalled()\n\t\t\t.then((installed) => {\n\t\t\t\tconst result = new Set<string>();\n\t\t\t\tfor (const ext of installed) {\n\t\t\t\t\tresult.add(ext.identifier.id);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t});\n\t}\n\n\tpublic get themes(): ThemeItem[] {\n\t\treturn this._marketplaceThemes;\n\t}\n\n\tpublic get onDidChange() {\n\t\treturn this._onDidChange.event;\n\t}\n\n\tpublic trigger(value: string) {\n\t\tif (this._tokenSource) {\n\t\t\tthis._tokenSource.cancel();\n\t\t\tthis._tokenSource = undefined;\n\t\t}\n\t\tthis._queryDelayer.trigger(() => {\n\t\t\tthis._tokenSource = new CancellationTokenSource();\n\t\t\treturn this.doSearch(value, this._tokenSource.token);\n\t\t});\n\t}\n\n\tprivate async doSearch(\n\t\tvalue: string,\n\t\ttoken: CancellationToken,\n\t): Promise<void> {\n\t\tthis._searchOngoing = true;\n\t\tthis._onDidChange.fire();\n\t\ttry {\n\t\t\tconst installedExtensions = await this._installedExtensions;\n\n\t\t\tconst options = {\n\t\t\t\ttext: `${this.marketplaceQuery} ${value}`,\n\t\t\t\tpageSize: 20,\n\t\t\t};\n\t\t\tconst pager = await this.extensionGalleryService.query(\n\t\t\t\toptions,\n\t\t\t\ttoken,\n\t\t\t);\n\t\t\tfor (let i = 0; i < pager.total && i < 1; i++) {\n\t\t\t\t// loading multiple pages is turned of for now to avoid flickering\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst nThemes = this._marketplaceThemes.length;\n\t\t\t\tconst gallery =\n\t\t\t\t\ti === 0 ? pager.firstPage : await pager.getPage(i, token);\n\n\t\t\t\tconst promises: Promise<IWorkbenchTheme[]>[] = [];\n\t\t\t\tconst promisesGalleries = [];\n\t\t\t\tfor (let i = 0; i < gallery.length; i++) {\n\t\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst ext = gallery[i];\n\t\t\t\t\tif (\n\t\t\t\t\t\t!installedExtensions.has(ext.identifier.id) &&\n\t\t\t\t\t\t!this._marketplaceExtensions.has(ext.identifier.id)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis._marketplaceExtensions.add(ext.identifier.id);\n\t\t\t\t\t\tpromises.push(\n\t\t\t\t\t\t\tthis.getMarketplaceColorThemes(\n\t\t\t\t\t\t\t\text.publisher,\n\t\t\t\t\t\t\t\text.name,\n\t\t\t\t\t\t\t\text.version,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tpromisesGalleries.push(ext);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst allThemes = await Promise.all(promises);\n\t\t\t\tfor (let i = 0; i < allThemes.length; i++) {\n\t\t\t\t\tconst ext = promisesGalleries[i];\n\t\t\t\t\tfor (const theme of allThemes[i]) {\n\t\t\t\t\t\tthis._marketplaceThemes.push({\n\t\t\t\t\t\t\tid: theme.id,\n\t\t\t\t\t\t\ttheme: theme,\n\t\t\t\t\t\t\tlabel: theme.label,\n\t\t\t\t\t\t\tdescription: `${ext.displayName} \u00B7 ${ext.publisherDisplayName}`,\n\t\t\t\t\t\t\tgalleryExtension: ext,\n\t\t\t\t\t\t\tbuttons: [configureButton],\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (nThemes !== this._marketplaceThemes.length) {\n\t\t\t\t\tthis._marketplaceThemes.sort((t1, t2) =>\n\t\t\t\t\t\tt1.label.localeCompare(t2.label),\n\t\t\t\t\t);\n\t\t\t\t\tthis._onDidChange.fire();\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (!isCancellationError(e)) {\n\t\t\t\tthis.logService.error(`Error while searching for themes:`, e);\n\t\t\t\tthis._searchError = \"message\" in e ? e.message : String(e);\n\t\t\t}\n\t\t} finally {\n\t\t\tthis._searchOngoing = false;\n\t\t\tthis._onDidChange.fire();\n\t\t}\n\t}\n\n\tpublic openQuickPick(\n\t\tvalue: string,\n\t\tcurrentTheme: IWorkbenchTheme | undefined,\n\t\tselectTheme: (\n\t\t\ttheme: IWorkbenchTheme | undefined,\n\t\t\tapplyTheme: boolean,\n\t\t) => void,\n\t): Promise<PickerResult> {\n\t\tlet result: PickerResult | undefined;\n\t\tconst disposables = new DisposableStore();\n\t\treturn new Promise<PickerResult>((s, _) => {\n\t\t\tconst quickpick = disposables.add(\n\t\t\t\tthis.quickInputService.createQuickPick<ThemeItem>(),\n\t\t\t);\n\t\t\tquickpick.items = [];\n\t\t\tquickpick.sortByLabel = false;\n\t\t\tquickpick.matchOnDescription = true;\n\t\t\tquickpick.buttons = [this.quickInputService.backButton];\n\t\t\tquickpick.title = \"Marketplace Themes\";\n\t\t\tquickpick.placeholder = localize(\n\t\t\t\t\"themes.selectMarketplaceTheme\",\n\t\t\t\t\"Type to Search More. Select to Install. Up/Down Keys to Preview\",\n\t\t\t);\n\t\t\tquickpick.canSelectMany = false;\n\t\t\tdisposables.add(\n\t\t\t\tquickpick.onDidChangeValue(() => this.trigger(quickpick.value)),\n\t\t\t);\n\t\t\tdisposables.add(\n\t\t\t\tquickpick.onDidAccept(async (_) => {\n\t\t\t\t\tconst themeItem = quickpick.selectedItems[0];\n\t\t\t\t\tif (themeItem?.galleryExtension) {\n\t\t\t\t\t\tresult = \"selected\";\n\t\t\t\t\t\tquickpick.hide();\n\t\t\t\t\t\tconst success = await this.installExtension(\n\t\t\t\t\t\t\tthemeItem.galleryExtension,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (success) {\n\t\t\t\t\t\t\tselectTheme(themeItem.theme, true);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tselectTheme(currentTheme, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tdisposables.add(\n\t\t\t\tquickpick.onDidTriggerItemButton((e) => {\n\t\t\t\t\tif (isItem(e.item)) {\n\t\t\t\t\t\tconst extensionId =\n\t\t\t\t\t\t\te.item.theme?.extensionData?.extensionId;\n\t\t\t\t\t\tif (extensionId) {\n\t\t\t\t\t\t\tthis.extensionsWorkbenchService.openSearch(\n\t\t\t\t\t\t\t\t`@id:${extensionId}`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.extensionsWorkbenchService.openSearch(\n\t\t\t\t\t\t\t\t`${this.marketplaceQuery} ${quickpick.value}`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t\tdisposables.add(\n\t\t\t\tquickpick.onDidChangeActive((themes) => {\n\t\t\t\t\tif (result === undefined) {\n\t\t\t\t\t\tselectTheme(themes[0]?.theme, false);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tdisposables.add(\n\t\t\t\tquickpick.onDidHide(() => {\n\t\t\t\t\tif (result === undefined) {\n\t\t\t\t\t\tselectTheme(currentTheme, true);\n\t\t\t\t\t\tresult = \"cancelled\";\n\t\t\t\t\t}\n\t\t\t\t\ts(result);\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tdisposables.add(\n\t\t\t\tquickpick.onDidTriggerButton((e) => {\n\t\t\t\t\tif (e === this.quickInputService.backButton) {\n\t\t\t\t\t\tresult = \"back\";\n\t\t\t\t\t\tquickpick.hide();\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tdisposables.add(\n\t\t\t\tthis.onDidChange(() => {\n\t\t\t\t\tlet items = this.themes;\n\t\t\t\t\tif (this._searchOngoing) {\n\t\t\t\t\t\titems = items.concat({\n\t\t\t\t\t\t\tlabel: \"$(sync~spin) Searching for themes...\",\n\t\t\t\t\t\t\tid: undefined,\n\t\t\t\t\t\t\talwaysShow: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (items.length === 0 && this._searchError) {\n\t\t\t\t\t\titems = [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: `$(error) ${localize(\"search.error\", \"Error while searching for themes: {0}\", this._searchError)}`,\n\t\t\t\t\t\t\t\tid: undefined,\n\t\t\t\t\t\t\t\talwaysShow: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t\tconst activeItemId = quickpick.activeItems[0]?.id;\n\t\t\t\t\tconst newActiveItem = activeItemId\n\t\t\t\t\t\t? items.find((i) => isItem(i) && i.id === activeItemId)\n\t\t\t\t\t\t: undefined;\n\n\t\t\t\t\tquickpick.items = items;\n\t\t\t\t\tif (newActiveItem) {\n\t\t\t\t\t\tquickpick.activeItems = [newActiveItem as ThemeItem];\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis.trigger(value);\n\t\t\tquickpick.show();\n\t\t}).finally(() => {\n\t\t\tdisposables.dispose();\n\t\t});\n\t}\n\n\tprivate async installExtension(galleryExtension: IGalleryExtension) {\n\t\tthis.extensionsWorkbenchService.openSearch(\n\t\t\t`@id:${galleryExtension.identifier.id}`,\n\t\t);\n\t\tconst result = await this.dialogService.confirm({\n\t\t\tmessage: localize(\n\t\t\t\t\"installExtension.confirm\",\n\t\t\t\t\"This will install extension '{0}' published by '{1}'. Do you want to continue?\",\n\t\t\t\tgalleryExtension.displayName,\n\t\t\t\tgalleryExtension.publisherDisplayName,\n\t\t\t),\n\t\t\tprimaryButton: localize(\"installExtension.button.ok\", \"OK\"),\n\t\t});\n\t\tif (!result.confirmed) {\n\t\t\treturn false;\n\t\t}\n\t\ttry {\n\t\t\tawait this.progressService.withProgress(\n\t\t\t\t{\n\t\t\t\t\tlocation: ProgressLocation.Notification,\n\t\t\t\t\ttitle: localize(\n\t\t\t\t\t\t\"installing extensions\",\n\t\t\t\t\t\t\"Installing Extension {0}...\",\n\t\t\t\t\t\tgalleryExtension.displayName,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tasync () => {\n\t\t\t\t\tawait this.extensionManagementService.installFromGallery(\n\t\t\t\t\t\tgalleryExtension,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Setting this to false is how you get the extension to be synced with Settings Sync (if enabled).\n\t\t\t\t\t\t\tisMachineScoped: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t);\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\tthis.logService.error(\n\t\t\t\t`Problem installing extension ${galleryExtension.identifier.id}`,\n\t\t\t\te,\n\t\t\t);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic dispose() {\n\t\tif (this._tokenSource) {\n\t\t\tthis._tokenSource.cancel();\n\t\t\tthis._tokenSource = undefined;\n\t\t}\n\t\tthis._queryDelayer.dispose();\n\t\tthis._marketplaceExtensions.clear();\n\t\tthis._marketplaceThemes.length = 0;\n\t}\n}\n\ninterface InstalledThemesPickerOptions {\n\treadonly installMessage: string;\n\treadonly browseMessage?: string;\n\treadonly placeholderMessage: string;\n\treadonly marketplaceTag: string;\n\treadonly title?: string;\n\treadonly description?: string;\n\treadonly toggles?: IQuickInputToggle[];\n\treadonly onToggle?: (\n\t\ttoggle: IQuickInputToggle,\n\t\tquickInput: IQuickPick<ThemeItem, { useSeparators: boolean }>,\n\t) => Promise<void>;\n}\n\nclass InstalledThemesPicker {\n\tconstructor(\n\t\tprivate readonly options: InstalledThemesPickerOptions,\n\t\tprivate readonly setTheme: (\n\t\t\ttheme: IWorkbenchTheme | undefined,\n\t\t\tsettingsTarget: ThemeSettingTarget,\n\t\t) => Promise<any>,\n\t\tprivate readonly getMarketplaceColorThemes: (\n\t\t\tpublisher: string,\n\t\t\tname: string,\n\t\t\tversion: string,\n\t\t) => Promise<IWorkbenchTheme[]>,\n\t\t@IQuickInputService\n\t\tprivate readonly quickInputService: IQuickInputService,\n\t\t@IExtensionGalleryService\n\t\tprivate readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@IExtensionsWorkbenchService\n\t\tprivate readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IExtensionResourceLoaderService\n\t\tprivate readonly extensionResourceLoaderService: IExtensionResourceLoaderService,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t) {}\n\n\tpublic async openQuickPick(\n\t\tpicks: QuickPickInput<ThemeItem>[],\n\t\tcurrentTheme: IWorkbenchTheme,\n\t) {\n\t\tlet marketplaceThemePicker: MarketplaceThemesPicker | undefined;\n\t\tif (this.extensionGalleryService.isEnabled()) {\n\t\t\tif (\n\t\t\t\tthis.extensionResourceLoaderService\n\t\t\t\t\t.supportsExtensionGalleryResources &&\n\t\t\t\tthis.options.browseMessage\n\t\t\t) {\n\t\t\t\tmarketplaceThemePicker =\n\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\tMarketplaceThemesPicker,\n\t\t\t\t\t\tthis.getMarketplaceColorThemes.bind(this),\n\t\t\t\t\t\tthis.options.marketplaceTag,\n\t\t\t\t\t);\n\t\t\t\tpicks = [\n\t\t\t\t\tconfigurationEntry(\n\t\t\t\t\t\tthis.options.browseMessage,\n\t\t\t\t\t\tConfigureItem.BROWSE_GALLERY,\n\t\t\t\t\t),\n\t\t\t\t\t...picks,\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tpicks = [\n\t\t\t\t\t...picks,\n\t\t\t\t\t{ type: \"separator\" },\n\t\t\t\t\tconfigurationEntry(\n\t\t\t\t\t\tthis.options.installMessage,\n\t\t\t\t\t\tConfigureItem.EXTENSIONS_VIEW,\n\t\t\t\t\t),\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\tlet selectThemeTimeout: number | undefined;\n\n\t\tconst selectTheme = (\n\t\t\ttheme: IWorkbenchTheme | undefined,\n\t\t\tapplyTheme: boolean,\n\t\t) => {\n\t\t\tif (selectThemeTimeout) {\n\t\t\t\tclearTimeout(selectThemeTimeout);\n\t\t\t}\n\t\t\tselectThemeTimeout = mainWindow.setTimeout(\n\t\t\t\t() => {\n\t\t\t\t\tselectThemeTimeout = undefined;\n\t\t\t\t\tconst newTheme = (theme ?? currentTheme) as IWorkbenchTheme;\n\t\t\t\t\tthis.setTheme(\n\t\t\t\t\t\tnewTheme,\n\t\t\t\t\t\tapplyTheme ? \"auto\" : \"preview\",\n\t\t\t\t\t).then(undefined, (err) => {\n\t\t\t\t\t\tonUnexpectedError(err);\n\t\t\t\t\t\tthis.setTheme(currentTheme, undefined);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tapplyTheme ? 0 : 200,\n\t\t\t);\n\t\t};\n\n\t\tconst pickInstalledThemes = (activeItemId: string | undefined) => {\n\t\t\tconst disposables = new DisposableStore();\n\t\t\treturn new Promise<void>((s, _) => {\n\t\t\t\tlet isCompleted = false;\n\t\t\t\tconst autoFocusIndex = picks.findIndex(\n\t\t\t\t\t(p) => isItem(p) && p.id === activeItemId,\n\t\t\t\t);\n\t\t\t\tconst quickpick = disposables.add(\n\t\t\t\t\tthis.quickInputService.createQuickPick<ThemeItem>({\n\t\t\t\t\t\tuseSeparators: true,\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\tquickpick.items = picks;\n\t\t\t\tquickpick.title = this.options.title;\n\t\t\t\tquickpick.description = this.options.description;\n\t\t\t\tquickpick.placeholder = this.options.placeholderMessage;\n\t\t\t\tquickpick.activeItems = [picks[autoFocusIndex] as ThemeItem];\n\t\t\t\tquickpick.canSelectMany = false;\n\t\t\t\tquickpick.toggles = this.options.toggles;\n\t\t\t\tquickpick.toggles?.forEach((toggle) => {\n\t\t\t\t\tdisposables.add(\n\t\t\t\t\t\ttoggle.onChange(() =>\n\t\t\t\t\t\t\tthis.options.onToggle?.(toggle, quickpick),\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\tquickpick.matchOnDescription = true;\n\t\t\t\tdisposables.add(\n\t\t\t\t\tquickpick.onDidAccept(async (_) => {\n\t\t\t\t\t\tisCompleted = true;\n\t\t\t\t\t\tconst theme = quickpick.selectedItems[0];\n\t\t\t\t\t\tif (!theme || theme.configureItem) {\n\t\t\t\t\t\t\t// 'pick in marketplace' entry\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t!theme ||\n\t\t\t\t\t\t\t\ttheme.configureItem ===\n\t\t\t\t\t\t\t\t\tConfigureItem.EXTENSIONS_VIEW\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tthis.extensionsWorkbenchService.openSearch(\n\t\t\t\t\t\t\t\t\t`${this.options.marketplaceTag} ${quickpick.value}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\ttheme.configureItem ===\n\t\t\t\t\t\t\t\tConfigureItem.BROWSE_GALLERY\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tif (marketplaceThemePicker) {\n\t\t\t\t\t\t\t\t\tconst res =\n\t\t\t\t\t\t\t\t\t\tawait marketplaceThemePicker.openQuickPick(\n\t\t\t\t\t\t\t\t\t\t\tquickpick.value,\n\t\t\t\t\t\t\t\t\t\t\tcurrentTheme,\n\t\t\t\t\t\t\t\t\t\t\tselectTheme,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tif (res === \"back\") {\n\t\t\t\t\t\t\t\t\t\tawait pickInstalledThemes(undefined);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tselectTheme(theme.theme, true);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tquickpick.hide();\n\t\t\t\t\t\ts();\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\tdisposables.add(\n\t\t\t\t\tquickpick.onDidChangeActive((themes) =>\n\t\t\t\t\t\tselectTheme(themes[0]?.theme, false),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tdisposables.add(\n\t\t\t\t\tquickpick.onDidHide(() => {\n\t\t\t\t\t\tif (!isCompleted) {\n\t\t\t\t\t\t\tselectTheme(currentTheme, true);\n\t\t\t\t\t\t\ts();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tquickpick.dispose();\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\tdisposables.add(\n\t\t\t\t\tquickpick.onDidTriggerItemButton((e) => {\n\t\t\t\t\t\tif (isItem(e.item)) {\n\t\t\t\t\t\t\tconst extensionId =\n\t\t\t\t\t\t\t\te.item.theme?.extensionData?.extensionId;\n\t\t\t\t\t\t\tif (extensionId) {\n\t\t\t\t\t\t\t\tthis.extensionsWorkbenchService.openSearch(\n\t\t\t\t\t\t\t\t\t`@id:${extensionId}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.extensionsWorkbenchService.openSearch(\n\t\t\t\t\t\t\t\t\t`${this.options.marketplaceTag} ${quickpick.value}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\tquickpick.show();\n\t\t\t}).finally(() => {\n\t\t\t\tdisposables.dispose();\n\t\t\t});\n\t\t};\n\t\tawait pickInstalledThemes(currentTheme.id);\n\n\t\tmarketplaceThemePicker?.dispose();\n\t}\n}\n\nconst SelectColorThemeCommandId = \"workbench.action.selectTheme\";\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: SelectColorThemeCommandId,\n\t\t\t\ttitle: localize2(\"selectTheme.label\", \"Color Theme\"),\n\t\t\t\tcategory: Categories.Preferences,\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyT,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tprivate getTitle(colorScheme: ColorScheme | undefined): string {\n\t\t\tswitch (colorScheme) {\n\t\t\t\tcase ColorScheme.DARK:\n\t\t\t\t\treturn localize(\n\t\t\t\t\t\t\"themes.selectTheme.darkScheme\",\n\t\t\t\t\t\t\"Select Color Theme for System Dark Mode\",\n\t\t\t\t\t);\n\t\t\t\tcase ColorScheme.LIGHT:\n\t\t\t\t\treturn localize(\n\t\t\t\t\t\t\"themes.selectTheme.lightScheme\",\n\t\t\t\t\t\t\"Select Color Theme for System Light Mode\",\n\t\t\t\t\t);\n\t\t\t\tcase ColorScheme.HIGH_CONTRAST_DARK:\n\t\t\t\t\treturn localize(\n\t\t\t\t\t\t\"themes.selectTheme.darkHC\",\n\t\t\t\t\t\t\"Select Color Theme for High Contrast Dark Mode\",\n\t\t\t\t\t);\n\t\t\t\tcase ColorScheme.HIGH_CONTRAST_LIGHT:\n\t\t\t\t\treturn localize(\n\t\t\t\t\t\t\"themes.selectTheme.lightHC\",\n\t\t\t\t\t\t\"Select Color Theme for High Contrast Light Mode\",\n\t\t\t\t\t);\n\t\t\t\tdefault:\n\t\t\t\t\treturn localize(\n\t\t\t\t\t\t\"themes.selectTheme.default\",\n\t\t\t\t\t\t\"Select Color Theme (detect system color mode disabled)\",\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\toverride async run(accessor: ServicesAccessor) {\n\t\t\tconst themeService = accessor.get(IWorkbenchThemeService);\n\t\t\tconst preferencesService = accessor.get(IPreferencesService);\n\n\t\t\tconst preferredColorScheme = themeService.getPreferredColorScheme();\n\n\t\t\tlet modeConfigureToggle;\n\t\t\tif (preferredColorScheme) {\n\t\t\t\tmodeConfigureToggle = new Toggle({\n\t\t\t\t\ttitle: localize(\n\t\t\t\t\t\t\"themes.configure.switchingEnabled\",\n\t\t\t\t\t\t\"Detect system color mode enabled. Click to configure.\",\n\t\t\t\t\t),\n\t\t\t\t\ticon: Codicon.colorMode,\n\t\t\t\t\tisChecked: false,\n\t\t\t\t\t...defaultToggleStyles,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tmodeConfigureToggle = new Toggle({\n\t\t\t\t\ttitle: localize(\n\t\t\t\t\t\t\"themes.configure.switchingDisabled\",\n\t\t\t\t\t\t\"Detect system color mode disabled. Click to configure.\",\n\t\t\t\t\t),\n\t\t\t\t\ticon: Codicon.colorMode,\n\t\t\t\t\tisChecked: false,\n\t\t\t\t\t...defaultToggleStyles,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst options = {\n\t\t\t\tinstallMessage: localize(\n\t\t\t\t\t\"installColorThemes\",\n\t\t\t\t\t\"Install Additional Color Themes...\",\n\t\t\t\t),\n\t\t\t\tbrowseMessage:\n\t\t\t\t\t\"$(plus) \" +\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"browseColorThemes\",\n\t\t\t\t\t\t\"Browse Additional Color Themes...\",\n\t\t\t\t\t),\n\t\t\t\tplaceholderMessage: this.getTitle(preferredColorScheme),\n\t\t\t\tmarketplaceTag: \"category:themes\",\n\t\t\t\ttoggles: [modeConfigureToggle],\n\t\t\t\tonToggle: async (toggle, picker) => {\n\t\t\t\t\tpicker.hide();\n\t\t\t\t\tawait preferencesService.openSettings({\n\t\t\t\t\t\tquery: ThemeSettings.DETECT_COLOR_SCHEME,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t} satisfies InstalledThemesPickerOptions;\n\t\t\tconst setTheme = (\n\t\t\t\ttheme: IWorkbenchTheme | undefined,\n\t\t\t\tsettingsTarget: ThemeSettingTarget,\n\t\t\t) =>\n\t\t\t\tthemeService.setColorTheme(\n\t\t\t\t\ttheme as IWorkbenchColorTheme,\n\t\t\t\t\tsettingsTarget,\n\t\t\t\t);\n\t\t\tconst getMarketplaceColorThemes = (\n\t\t\t\tpublisher: string,\n\t\t\t\tname: string,\n\t\t\t\tversion: string,\n\t\t\t) =>\n\t\t\t\tthemeService.getMarketplaceColorThemes(\n\t\t\t\t\tpublisher,\n\t\t\t\t\tname,\n\t\t\t\t\tversion,\n\t\t\t\t);\n\n\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\t\tconst picker = instantiationService.createInstance(\n\t\t\t\tInstalledThemesPicker,\n\t\t\t\toptions,\n\t\t\t\tsetTheme,\n\t\t\t\tgetMarketplaceColorThemes,\n\t\t\t);\n\n\t\t\tconst themes = await themeService.getColorThemes();\n\t\t\tconst currentTheme = themeService.getColorTheme();\n\n\t\t\tconst lightEntries = toEntries(\n\t\t\t\tthemes.filter((t) => t.type === ColorScheme.LIGHT),\n\t\t\t\tlocalize(\"themes.category.light\", \"light themes\"),\n\t\t\t);\n\t\t\tconst darkEntries = toEntries(\n\t\t\t\tthemes.filter((t) => t.type === ColorScheme.DARK),\n\t\t\t\tlocalize(\"themes.category.dark\", \"dark themes\"),\n\t\t\t);\n\t\t\tconst hcEntries = toEntries(\n\t\t\t\tthemes.filter((t) => isHighContrast(t.type)),\n\t\t\t\tlocalize(\"themes.category.hc\", \"high contrast themes\"),\n\t\t\t);\n\n\t\t\tlet picks;\n\t\t\tswitch (preferredColorScheme) {\n\t\t\t\tcase ColorScheme.DARK:\n\t\t\t\t\tpicks = [...darkEntries, ...lightEntries, ...hcEntries];\n\t\t\t\t\tbreak;\n\t\t\t\tcase ColorScheme.HIGH_CONTRAST_DARK:\n\t\t\t\tcase ColorScheme.HIGH_CONTRAST_LIGHT:\n\t\t\t\t\tpicks = [...hcEntries, ...lightEntries, ...darkEntries];\n\t\t\t\t\tbreak;\n\t\t\t\tcase ColorScheme.LIGHT:\n\t\t\t\tdefault:\n\t\t\t\t\tpicks = [...lightEntries, ...darkEntries, ...hcEntries];\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tawait picker.openQuickPick(picks, currentTheme);\n\t\t}\n\t},\n);\n\nconst SelectFileIconThemeCommandId = \"workbench.action.selectIconTheme\";\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: SelectFileIconThemeCommandId,\n\t\t\t\ttitle: localize2(\"selectIconTheme.label\", \"File Icon Theme\"),\n\t\t\t\tcategory: Categories.Preferences,\n\t\t\t\tf1: true,\n\t\t\t});\n\t\t}\n\n\t\toverride async run(accessor: ServicesAccessor) {\n\t\t\tconst themeService = accessor.get(IWorkbenchThemeService);\n\n\t\t\tconst options = {\n\t\t\t\tinstallMessage: localize(\n\t\t\t\t\t\"installIconThemes\",\n\t\t\t\t\t\"Install Additional File Icon Themes...\",\n\t\t\t\t),\n\t\t\t\tplaceholderMessage: localize(\n\t\t\t\t\t\"themes.selectIconTheme\",\n\t\t\t\t\t\"Select File Icon Theme (Up/Down Keys to Preview)\",\n\t\t\t\t),\n\t\t\t\tmarketplaceTag: \"tag:icon-theme\",\n\t\t\t};\n\t\t\tconst setTheme = (\n\t\t\t\ttheme: IWorkbenchTheme | undefined,\n\t\t\t\tsettingsTarget: ThemeSettingTarget,\n\t\t\t) =>\n\t\t\t\tthemeService.setFileIconTheme(\n\t\t\t\t\ttheme as IWorkbenchFileIconTheme,\n\t\t\t\t\tsettingsTarget,\n\t\t\t\t);\n\t\t\tconst getMarketplaceColorThemes = (\n\t\t\t\tpublisher: string,\n\t\t\t\tname: string,\n\t\t\t\tversion: string,\n\t\t\t) =>\n\t\t\t\tthemeService.getMarketplaceFileIconThemes(\n\t\t\t\t\tpublisher,\n\t\t\t\t\tname,\n\t\t\t\t\tversion,\n\t\t\t\t);\n\n\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\t\tconst picker = instantiationService.createInstance(\n\t\t\t\tInstalledThemesPicker,\n\t\t\t\toptions,\n\t\t\t\tsetTheme,\n\t\t\t\tgetMarketplaceColorThemes,\n\t\t\t);\n\n\t\t\tconst picks: QuickPickInput<ThemeItem>[] = [\n\t\t\t\t{\n\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\"fileIconThemeCategory\",\n\t\t\t\t\t\t\"file icon themes\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: \"\",\n\t\t\t\t\ttheme: FileIconThemeData.noIconTheme,\n\t\t\t\t\tlabel: localize(\"noIconThemeLabel\", \"None\"),\n\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\"noIconThemeDesc\",\n\t\t\t\t\t\t\"Disable File Icons\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\t...toEntries(await themeService.getFileIconThemes()),\n\t\t\t];\n\n\t\t\tawait picker.openQuickPick(picks, themeService.getFileIconTheme());\n\t\t}\n\t},\n);\n\nconst SelectProductIconThemeCommandId =\n\t\"workbench.action.selectProductIconTheme\";\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: SelectProductIconThemeCommandId,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"selectProductIconTheme.label\",\n\t\t\t\t\t\"Product Icon Theme\",\n\t\t\t\t),\n\t\t\t\tcategory: Categories.Preferences,\n\t\t\t\tf1: true,\n\t\t\t});\n\t\t}\n\n\t\toverride async run(accessor: ServicesAccessor) {\n\t\t\tconst themeService = accessor.get(IWorkbenchThemeService);\n\n\t\t\tconst options = {\n\t\t\t\tinstallMessage: localize(\n\t\t\t\t\t\"installProductIconThemes\",\n\t\t\t\t\t\"Install Additional Product Icon Themes...\",\n\t\t\t\t),\n\t\t\t\tbrowseMessage:\n\t\t\t\t\t\"$(plus) \" +\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"browseProductIconThemes\",\n\t\t\t\t\t\t\"Browse Additional Product Icon Themes...\",\n\t\t\t\t\t),\n\t\t\t\tplaceholderMessage: localize(\n\t\t\t\t\t\"themes.selectProductIconTheme\",\n\t\t\t\t\t\"Select Product Icon Theme (Up/Down Keys to Preview)\",\n\t\t\t\t),\n\t\t\t\tmarketplaceTag: \"tag:product-icon-theme\",\n\t\t\t};\n\t\t\tconst setTheme = (\n\t\t\t\ttheme: IWorkbenchTheme | undefined,\n\t\t\t\tsettingsTarget: ThemeSettingTarget,\n\t\t\t) =>\n\t\t\t\tthemeService.setProductIconTheme(\n\t\t\t\t\ttheme as IWorkbenchProductIconTheme,\n\t\t\t\t\tsettingsTarget,\n\t\t\t\t);\n\t\t\tconst getMarketplaceColorThemes = (\n\t\t\t\tpublisher: string,\n\t\t\t\tname: string,\n\t\t\t\tversion: string,\n\t\t\t) =>\n\t\t\t\tthemeService.getMarketplaceProductIconThemes(\n\t\t\t\t\tpublisher,\n\t\t\t\t\tname,\n\t\t\t\t\tversion,\n\t\t\t\t);\n\n\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\t\tconst picker = instantiationService.createInstance(\n\t\t\t\tInstalledThemesPicker,\n\t\t\t\toptions,\n\t\t\t\tsetTheme,\n\t\t\t\tgetMarketplaceColorThemes,\n\t\t\t);\n\n\t\t\tconst picks: QuickPickInput<ThemeItem>[] = [\n\t\t\t\t{\n\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\"productIconThemeCategory\",\n\t\t\t\t\t\t\"product icon themes\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: DEFAULT_PRODUCT_ICON_THEME_ID,\n\t\t\t\t\ttheme: ProductIconThemeData.defaultTheme,\n\t\t\t\t\tlabel: localize(\"defaultProductIconThemeLabel\", \"Default\"),\n\t\t\t\t},\n\t\t\t\t...toEntries(await themeService.getProductIconThemes()),\n\t\t\t];\n\n\t\t\tawait picker.openQuickPick(\n\t\t\t\tpicks,\n\t\t\t\tthemeService.getProductIconTheme(),\n\t\t\t);\n\t\t}\n\t},\n);\n\nCommandsRegistry.registerCommand(\n\t\"workbench.action.previewColorTheme\",\n\tasync (\n\t\taccessor: ServicesAccessor,\n\t\textension: { publisher: string; name: string; version: string },\n\t\tthemeSettingsId?: string,\n\t) => {\n\t\tconst themeService = accessor.get(IWorkbenchThemeService);\n\n\t\tlet themes = findBuiltInThemes(\n\t\t\tawait themeService.getColorThemes(),\n\t\t\textension,\n\t\t);\n\t\tif (themes.length === 0) {\n\t\t\tthemes = await themeService.getMarketplaceColorThemes(\n\t\t\t\textension.publisher,\n\t\t\t\textension.name,\n\t\t\t\textension.version,\n\t\t\t);\n\t\t}\n\t\tfor (const theme of themes) {\n\t\t\tif (!themeSettingsId || theme.settingsId === themeSettingsId) {\n\t\t\t\tawait themeService.setColorTheme(theme, \"preview\");\n\t\t\t\treturn theme.settingsId;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t},\n);\n\nfunction findBuiltInThemes(\n\tthemes: IWorkbenchColorTheme[],\n\textension: { publisher: string; name: string },\n): IWorkbenchColorTheme[] {\n\treturn themes.filter(\n\t\t({ extensionData }) =>\n\t\t\textensionData &&\n\t\t\textensionData.extensionIsBuiltin &&\n\t\t\tequalsIgnoreCase(\n\t\t\t\textensionData.extensionPublisher,\n\t\t\t\textension.publisher,\n\t\t\t) &&\n\t\t\tequalsIgnoreCase(extensionData.extensionName, extension.name),\n\t);\n}\n\nfunction configurationEntry(\n\tlabel: string,\n\tconfigureItem: ConfigureItem,\n): QuickPickInput<ThemeItem> {\n\treturn {\n\t\tid: undefined,\n\t\tlabel: label,\n\t\talwaysShow: true,\n\t\tbuttons: [configureButton],\n\t\tconfigureItem: configureItem,\n\t};\n}\n\ninterface ThemeItem extends IQuickPickItem {\n\treadonly id: string | undefined;\n\treadonly theme?: IWorkbenchTheme;\n\treadonly galleryExtension?: IGalleryExtension;\n\treadonly label: string;\n\treadonly description?: string;\n\treadonly alwaysShow?: boolean;\n\treadonly configureItem?: ConfigureItem;\n}\n\nfunction isItem(i: QuickPickInput<ThemeItem>): i is ThemeItem {\n\treturn (<any>i)[\"type\"] !== \"separator\";\n}\n\nfunction toEntry(theme: IWorkbenchTheme): ThemeItem {\n\tconst settingId = theme.settingsId ?? undefined;\n\tconst item: ThemeItem = {\n\t\tid: theme.id,\n\t\ttheme: theme,\n\t\tlabel: theme.label,\n\t\tdescription:\n\t\t\ttheme.description ||\n\t\t\t(theme.label === settingId ? undefined : settingId),\n\t};\n\tif (theme.extensionData) {\n\t\titem.buttons = [configureButton];\n\t}\n\treturn item;\n}\n\nfunction toEntries(\n\tthemes: Array<IWorkbenchTheme>,\n\tlabel?: string,\n): QuickPickInput<ThemeItem>[] {\n\tconst sorter = (t1: ThemeItem, t2: ThemeItem) =>\n\t\tt1.label.localeCompare(t2.label);\n\tconst entries: QuickPickInput<ThemeItem>[] = themes\n\t\t.map(toEntry)\n\t\t.sort(sorter);\n\tif (entries.length > 0 && label) {\n\t\tentries.unshift({ type: \"separator\", label });\n\t}\n\treturn entries;\n}\n\nconst configureButton: IQuickInputButton = {\n\ticonClass: ThemeIcon.asClassName(manageExtensionIcon),\n\ttooltip: localize(\"manage extension\", \"Manage Extension\"),\n};\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.action.generateColorTheme\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"generateColorTheme.label\",\n\t\t\t\t\t\"Generate Color Theme From Current Settings\",\n\t\t\t\t),\n\t\t\t\tcategory: Categories.Developer,\n\t\t\t\tf1: true,\n\t\t\t});\n\t\t}\n\n\t\toverride run(accessor: ServicesAccessor) {\n\t\t\tconst themeService = accessor.get(IWorkbenchThemeService);\n\n\t\t\tconst theme = themeService.getColorTheme();\n\t\t\tconst colors = Registry.as<IColorRegistry>(\n\t\t\t\tColorRegistryExtensions.ColorContribution,\n\t\t\t).getColors();\n\t\t\tconst colorIds = colors.map((c) => c.id).sort();\n\t\t\tconst resultingColors: { [key: string]: string | null } = {};\n\t\t\tconst inherited: string[] = [];\n\t\t\tfor (const colorId of colorIds) {\n\t\t\t\tconst color = theme.getColor(colorId, false);\n\t\t\t\tif (color) {\n\t\t\t\t\tresultingColors[colorId] = Color.Format.CSS.formatHexA(\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tinherited.push(colorId);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst nullDefaults = [];\n\t\t\tfor (const id of inherited) {\n\t\t\t\tconst color = theme.getColor(id);\n\t\t\t\tif (color) {\n\t\t\t\t\tresultingColors[\"__\" + id] = Color.Format.CSS.formatHexA(\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tnullDefaults.push(id);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const id of nullDefaults) {\n\t\t\t\tresultingColors[\"__\" + id] = null;\n\t\t\t}\n\t\t\tlet contents = JSON.stringify(\n\t\t\t\t{\n\t\t\t\t\t$schema: colorThemeSchemaId,\n\t\t\t\t\ttype: theme.type,\n\t\t\t\t\tcolors: resultingColors,\n\t\t\t\t\ttokenColors: theme.tokenColors.filter((t) => !!t.scope),\n\t\t\t\t},\n\t\t\t\tnull,\n\t\t\t\t\"\\t\",\n\t\t\t);\n\t\t\tcontents = contents.replace(/\"__/g, '//\"');\n\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\treturn editorService.openEditor({\n\t\t\t\tresource: undefined,\n\t\t\t\tcontents,\n\t\t\t\tlanguageId: \"jsonc\",\n\t\t\t\toptions: { pinned: true },\n\t\t\t});\n\t\t}\n\t},\n);\n\nconst toggleLightDarkThemesCommandId = \"workbench.action.toggleLightDarkThemes\";\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: toggleLightDarkThemesCommandId,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"toggleLightDarkThemes.label\",\n\t\t\t\t\t\"Toggle between Light/Dark Themes\",\n\t\t\t\t),\n\t\t\t\tcategory: Categories.Preferences,\n\t\t\t\tf1: true,\n\t\t\t});\n\t\t}\n\n\t\toverride async run(accessor: ServicesAccessor) {\n\t\t\tconst themeService = accessor.get(IWorkbenchThemeService);\n\t\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\t\tconst notificationService = accessor.get(INotificationService);\n\t\t\tconst preferencesService = accessor.get(IPreferencesService);\n\n\t\t\tif (\n\t\t\t\tconfigurationService.getValue(ThemeSettings.DETECT_COLOR_SCHEME)\n\t\t\t) {\n\t\t\t\tconst message = localize(\n\t\t\t\t\t{ key: \"cannotToggle\", comment: [\"{0} is a setting name\"] },\n\t\t\t\t\t\"Cannot toggle between light and dark themes when `{0}` is enabled in settings.\",\n\t\t\t\t\tThemeSettings.DETECT_COLOR_SCHEME,\n\t\t\t\t);\n\t\t\t\tnotificationService.prompt(Severity.Info, message, [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: localize(\"goToSetting\", \"Open Settings\"),\n\t\t\t\t\t\trun: () => {\n\t\t\t\t\t\t\treturn preferencesService.openUserSettings({\n\t\t\t\t\t\t\t\tquery: ThemeSettings.DETECT_COLOR_SCHEME,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t]);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst currentTheme = themeService.getColorTheme();\n\t\t\tlet newSettingsId: string = ThemeSettings.PREFERRED_DARK_THEME;\n\t\t\tswitch (currentTheme.type) {\n\t\t\t\tcase ColorScheme.LIGHT:\n\t\t\t\t\tnewSettingsId = ThemeSettings.PREFERRED_DARK_THEME;\n\t\t\t\t\tbreak;\n\t\t\t\tcase ColorScheme.DARK:\n\t\t\t\t\tnewSettingsId = ThemeSettings.PREFERRED_LIGHT_THEME;\n\t\t\t\t\tbreak;\n\t\t\t\tcase ColorScheme.HIGH_CONTRAST_LIGHT:\n\t\t\t\t\tnewSettingsId = ThemeSettings.PREFERRED_HC_DARK_THEME;\n\t\t\t\t\tbreak;\n\t\t\t\tcase ColorScheme.HIGH_CONTRAST_DARK:\n\t\t\t\t\tnewSettingsId = ThemeSettings.PREFERRED_HC_LIGHT_THEME;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst themeSettingId: string =\n\t\t\t\tconfigurationService.getValue(newSettingsId);\n\n\t\t\tif (themeSettingId && typeof themeSettingId === \"string\") {\n\t\t\t\tconst theme = (await themeService.getColorThemes()).find(\n\t\t\t\t\t(t) => t.settingsId === themeSettingId,\n\t\t\t\t);\n\t\t\t\tif (theme) {\n\t\t\t\t\tthemeService.setColorTheme(theme.id, \"auto\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n);\n\nconst browseColorThemesInMarketplaceCommandId =\n\t\"workbench.action.browseColorThemesInMarketplace\";\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: browseColorThemesInMarketplaceCommandId,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"browseColorThemeInMarketPlace.label\",\n\t\t\t\t\t\"Browse Color Themes in Marketplace\",\n\t\t\t\t),\n\t\t\t\tcategory: Categories.Preferences,\n\t\t\t\tf1: true,\n\t\t\t});\n\t\t}\n\n\t\toverride async run(accessor: ServicesAccessor) {\n\t\t\tconst marketplaceTag = \"category:themes\";\n\t\t\tconst themeService = accessor.get(IWorkbenchThemeService);\n\t\t\tconst extensionGalleryService = accessor.get(\n\t\t\t\tIExtensionGalleryService,\n\t\t\t);\n\t\t\tconst extensionResourceLoaderService = accessor.get(\n\t\t\t\tIExtensionResourceLoaderService,\n\t\t\t);\n\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\n\t\t\tif (\n\t\t\t\t!extensionGalleryService.isEnabled() ||\n\t\t\t\t!extensionResourceLoaderService.supportsExtensionGalleryResources\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst currentTheme = themeService.getColorTheme();\n\t\t\tconst getMarketplaceColorThemes = (\n\t\t\t\tpublisher: string,\n\t\t\t\tname: string,\n\t\t\t\tversion: string,\n\t\t\t) =>\n\t\t\t\tthemeService.getMarketplaceColorThemes(\n\t\t\t\t\tpublisher,\n\t\t\t\t\tname,\n\t\t\t\t\tversion,\n\t\t\t\t);\n\n\t\t\tlet selectThemeTimeout: number | undefined;\n\n\t\t\tconst selectTheme = (\n\t\t\t\ttheme: IWorkbenchTheme | undefined,\n\t\t\t\tapplyTheme: boolean,\n\t\t\t) => {\n\t\t\t\tif (selectThemeTimeout) {\n\t\t\t\t\tclearTimeout(selectThemeTimeout);\n\t\t\t\t}\n\t\t\t\tselectThemeTimeout = mainWindow.setTimeout(\n\t\t\t\t\t() => {\n\t\t\t\t\t\tselectThemeTimeout = undefined;\n\t\t\t\t\t\tconst newTheme = (theme ??\n\t\t\t\t\t\t\tcurrentTheme) as IWorkbenchTheme;\n\t\t\t\t\t\tthemeService\n\t\t\t\t\t\t\t.setColorTheme(\n\t\t\t\t\t\t\t\tnewTheme as IWorkbenchColorTheme,\n\t\t\t\t\t\t\t\tapplyTheme ? \"auto\" : \"preview\",\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.then(undefined, (err) => {\n\t\t\t\t\t\t\t\tonUnexpectedError(err);\n\t\t\t\t\t\t\t\tthemeService.setColorTheme(\n\t\t\t\t\t\t\t\t\tcurrentTheme,\n\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tapplyTheme ? 0 : 200,\n\t\t\t\t);\n\t\t\t};\n\n\t\t\tconst marketplaceThemePicker = instantiationService.createInstance(\n\t\t\t\tMarketplaceThemesPicker,\n\t\t\t\tgetMarketplaceColorThemes,\n\t\t\t\tmarketplaceTag,\n\t\t\t);\n\t\t\tawait marketplaceThemePicker\n\t\t\t\t.openQuickPick(\"\", themeService.getColorTheme(), selectTheme)\n\t\t\t\t.then(undefined, onUnexpectedError);\n\t\t}\n\t},\n);\n\nconst ThemesSubMenu = new MenuId(\"ThemesSubMenu\");\nMenuRegistry.appendMenuItem(MenuId.GlobalActivity, {\n\ttitle: localize(\"themes\", \"Themes\"),\n\tsubmenu: ThemesSubMenu,\n\tgroup: \"2_configuration\",\n\torder: 7,\n} satisfies ISubmenuItem);\nMenuRegistry.appendMenuItem(MenuId.MenubarPreferencesMenu, {\n\ttitle: localize(\n\t\t{ key: \"miSelectTheme\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\"&&Theme\",\n\t),\n\tsubmenu: ThemesSubMenu,\n\tgroup: \"2_configuration\",\n\torder: 7,\n} satisfies ISubmenuItem);\n\nMenuRegistry.appendMenuItem(ThemesSubMenu, {\n\tcommand: {\n\t\tid: SelectColorThemeCommandId,\n\t\ttitle: localize(\"selectTheme.label\", \"Color Theme\"),\n\t},\n\torder: 1,\n});\n\nMenuRegistry.appendMenuItem(ThemesSubMenu, {\n\tcommand: {\n\t\tid: SelectFileIconThemeCommandId,\n\t\ttitle: localize(\"themes.selectIconTheme.label\", \"File Icon Theme\"),\n\t},\n\torder: 2,\n});\n\nMenuRegistry.appendMenuItem(ThemesSubMenu, {\n\tcommand: {\n\t\tid: SelectProductIconThemeCommandId,\n\t\ttitle: localize(\n\t\t\t\"themes.selectProductIconTheme.label\",\n\t\t\t\"Product Icon Theme\",\n\t\t),\n\t},\n\torder: 3,\n});\n\ntype DefaultThemeUpdatedNotificationReaction =\n\t| \"keepNew\"\n\t| \"keepOld\"\n\t| \"tryNew\"\n\t| \"cancel\"\n\t| \"browse\";\n\nclass DefaultThemeUpdatedNotificationContribution\n\timplements IWorkbenchContribution\n{\n\tstatic STORAGE_KEY = \"themeUpdatedNotificationShown\";\n\n\tconstructor(\n\t\t@INotificationService\n\t\tprivate readonly _notificationService: INotificationService,\n\t\t@IWorkbenchThemeService\n\t\tprivate readonly _workbenchThemeService: IWorkbenchThemeService,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@ITelemetryService\n\t\tprivate readonly _telemetryService: ITelemetryService,\n\t\t@IHostService private readonly _hostService: IHostService,\n\t) {\n\t\tif (\n\t\t\t_storageService.getBoolean(\n\t\t\t\tDefaultThemeUpdatedNotificationContribution.STORAGE_KEY,\n\t\t\t\tStorageScope.APPLICATION,\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tsetTimeout(async () => {\n\t\t\tif (\n\t\t\t\t_storageService.getBoolean(\n\t\t\t\t\tDefaultThemeUpdatedNotificationContribution.STORAGE_KEY,\n\t\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (await this._hostService.hadLastFocus()) {\n\t\t\t\tthis._storageService.store(\n\t\t\t\t\tDefaultThemeUpdatedNotificationContribution.STORAGE_KEY,\n\t\t\t\t\ttrue,\n\t\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\t\tStorageTarget.USER,\n\t\t\t\t);\n\t\t\t\tif (this._workbenchThemeService.hasUpdatedDefaultThemes()) {\n\t\t\t\t\tthis._showYouGotMigratedNotification();\n\t\t\t\t} else {\n\t\t\t\t\tconst currentTheme =\n\t\t\t\t\t\tthis._workbenchThemeService.getColorTheme().settingsId;\n\t\t\t\t\tif (\n\t\t\t\t\t\tcurrentTheme ===\n\t\t\t\t\t\t\tThemeSettingDefaults.COLOR_THEME_LIGHT_OLD ||\n\t\t\t\t\t\tcurrentTheme ===\n\t\t\t\t\t\t\tThemeSettingDefaults.COLOR_THEME_DARK_OLD\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis._tryNewThemeNotification();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, 3000);\n\t}\n\n\tprivate async _showYouGotMigratedNotification(): Promise<void> {\n\t\tconst usingLight =\n\t\t\tthis._workbenchThemeService.getColorTheme().type ===\n\t\t\tColorScheme.LIGHT;\n\t\tconst newThemeSettingsId = usingLight\n\t\t\t? ThemeSettingDefaults.COLOR_THEME_LIGHT\n\t\t\t: ThemeSettingDefaults.COLOR_THEME_DARK;\n\t\tconst newTheme = (\n\t\t\tawait this._workbenchThemeService.getColorThemes()\n\t\t).find((theme) => theme.settingsId === newThemeSettingsId);\n\t\tif (newTheme) {\n\t\t\tconst choices = [\n\t\t\t\t{\n\t\t\t\t\tlabel: localize(\"button.keep\", \"Keep New Theme\"),\n\t\t\t\t\trun: () => {\n\t\t\t\t\t\tthis._writeTelemetry(\"keepNew\");\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: localize(\"button.browse\", \"Browse Themes\"),\n\t\t\t\t\trun: () => {\n\t\t\t\t\t\tthis._writeTelemetry(\"browse\");\n\t\t\t\t\t\tthis._commandService.executeCommand(\n\t\t\t\t\t\t\tSelectColorThemeCommandId,\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: localize(\"button.revert\", \"Revert\"),\n\t\t\t\t\trun: async () => {\n\t\t\t\t\t\tthis._writeTelemetry(\"keepOld\");\n\t\t\t\t\t\tconst oldSettingsId = usingLight\n\t\t\t\t\t\t\t? ThemeSettingDefaults.COLOR_THEME_LIGHT_OLD\n\t\t\t\t\t\t\t: ThemeSettingDefaults.COLOR_THEME_DARK_OLD;\n\t\t\t\t\t\tconst oldTheme = (\n\t\t\t\t\t\t\tawait this._workbenchThemeService.getColorThemes()\n\t\t\t\t\t\t).find((theme) => theme.settingsId === oldSettingsId);\n\t\t\t\t\t\tif (oldTheme) {\n\t\t\t\t\t\t\tthis._workbenchThemeService.setColorTheme(\n\t\t\t\t\t\t\t\toldTheme,\n\t\t\t\t\t\t\t\t\"auto\",\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t];\n\t\t\tawait this._notificationService.prompt(\n\t\t\t\tSeverity.Info,\n\t\t\t\tlocalize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"themeUpdatedNotification\",\n\t\t\t\t\t\tcomment: [\"{0} is the name of the new default theme\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"Visual Studio Code now ships with a new default theme '{0}'. If you prefer, you can switch back to the old theme or try one of the many other color themes available.\",\n\t\t\t\t\tnewTheme.label,\n\t\t\t\t),\n\t\t\t\tchoices,\n\t\t\t\t{\n\t\t\t\t\tonCancel: () => this._writeTelemetry(\"cancel\"),\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate async _tryNewThemeNotification(): Promise<void> {\n\t\tconst newThemeSettingsId =\n\t\t\tthis._workbenchThemeService.getColorTheme().type ===\n\t\t\tColorScheme.LIGHT\n\t\t\t\t? ThemeSettingDefaults.COLOR_THEME_LIGHT\n\t\t\t\t: ThemeSettingDefaults.COLOR_THEME_DARK;\n\t\tconst theme = (await this._workbenchThemeService.getColorThemes()).find(\n\t\t\t(theme) => theme.settingsId === newThemeSettingsId,\n\t\t);\n\t\tif (theme) {\n\t\t\tconst choices: IPromptChoice[] = [\n\t\t\t\t{\n\t\t\t\t\tlabel: localize(\"button.tryTheme\", \"Try New Theme\"),\n\t\t\t\t\trun: () => {\n\t\t\t\t\t\tthis._writeTelemetry(\"tryNew\");\n\t\t\t\t\t\tthis._workbenchThemeService.setColorTheme(\n\t\t\t\t\t\t\ttheme,\n\t\t\t\t\t\t\t\"auto\",\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: localize(\"button.cancel\", \"Cancel\"),\n\t\t\t\t\trun: () => {\n\t\t\t\t\t\tthis._writeTelemetry(\"cancel\");\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t];\n\t\t\tawait this._notificationService.prompt(\n\t\t\t\tSeverity.Info,\n\t\t\t\tlocalize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"newThemeNotification\",\n\t\t\t\t\t\tcomment: [\"{0} is the name of the new default theme\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"Visual Studio Code now ships with a new default theme '{0}'. Do you want to give it a try?\",\n\t\t\t\t\ttheme.label,\n\t\t\t\t),\n\t\t\t\tchoices,\n\t\t\t\t{ onCancel: () => this._writeTelemetry(\"cancel\") },\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _writeTelemetry(\n\t\toutcome: DefaultThemeUpdatedNotificationReaction,\n\t): void {\n\t\ttype ThemeUpdatedNoticationClassification = {\n\t\t\towner: \"aeschli\";\n\t\t\tcomment: \"Reaction to the notification that theme has updated to a new default theme\";\n\t\t\tweb: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\tcomment: \"Whether this is running on web\";\n\t\t\t};\n\t\t\treaction: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\tcomment: \"Outcome of the notification\";\n\t\t\t};\n\t\t};\n\t\ttype ThemeUpdatedNoticationEvent = {\n\t\t\tweb: boolean;\n\t\t\treaction: DefaultThemeUpdatedNotificationReaction;\n\t\t};\n\n\t\tthis._telemetryService.publicLog2<\n\t\t\tThemeUpdatedNoticationEvent,\n\t\t\tThemeUpdatedNoticationClassification\n\t\t>(\"themeUpdatedNotication\", {\n\t\t\tweb: isWeb,\n\t\t\treaction: outcome,\n\t\t});\n\t}\n}\nconst workbenchRegistry = Registry.as<IWorkbenchContributionsRegistry>(\n\tExtensions.Workbench,\n);\nworkbenchRegistry.registerWorkbenchContribution(\n\tDefaultThemeUpdatedNotificationContribution,\n\tLifecyclePhase.Eventually,\n);\n"],
  "mappings": "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",
  "names": ["ConfigureItem", "i", "_", "picker", "theme"]
}
