{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/themes/test/node/colorRegistryExport.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Color } from '../../../../../base/common/color.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { Registry } from '../../../../../platform/registry/common/platform.js';\nimport { Extensions, IColorRegistry } from '../../../../../platform/theme/common/colorRegistry.js';\n\nsuite('ColorRegistry', () => {\n\tif (process.env.VSCODE_COLOR_REGISTRY_EXPORT) {\n\t\ttest('exports', () => {\n\t\t\tconst themingRegistry = Registry.as<IColorRegistry>(Extensions.ColorContribution);\n\t\t\tconst colors = themingRegistry.getColors();\n\t\t\tconst replacer = (_key: string, value: unknown) =>\n\t\t\t\tvalue instanceof Color ? Color.Format.CSS.formatHexA(value) : value;\n\t\t\tconsole.log(`#colors:${JSON.stringify(colors, replacer)}\\n`);\n\t\t});\n\t}\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": ";;AAKA,SAAS,aAAa;AACtB,SAAS,+CAA+C;AACxD,SAAS,gBAAgB;AACzB,SAAS,YAAY,sBAAsB;AAE3C,MAAM,iBAAiB,MAAM;AAC5B,MAAI,QAAQ,IAAI,8BAA8B;AAC7C,SAAK,WAAW,MAAM;AACrB,YAAM,kBAAkB,SAAS,GAAmB,WAAW,iBAAiB;AAChF,YAAM,SAAS,gBAAgB,UAAU;AACzC,YAAM,WAAW,wBAAC,MAAc,UAC/B,iBAAiB,QAAQ,MAAM,OAAO,IAAI,WAAW,KAAK,IAAI,OAD9C;AAEjB,cAAQ,IAAI,WAAW,KAAK,UAAU,QAAQ,QAAQ,CAAC;AAAA,CAAI;AAAA,IAC5D,CAAC;AAAA,EACF;AAEA,0CAAwC;AACzC,CAAC;",
  "names": []
}
