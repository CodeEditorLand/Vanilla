{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/themes/test/node/colorRegistry.releaseTest.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { Registry } from '../../../../../platform/registry/common/platform.js';\nimport { IColorRegistry, Extensions, ColorContribution, asCssVariableName } from '../../../../../platform/theme/common/colorRegistry.js';\nimport { asTextOrError } from '../../../../../platform/request/common/request.js';\nimport * as pfs from '../../../../../base/node/pfs.js';\nimport * as path from '../../../../../base/common/path.js';\nimport assert from 'assert';\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { RequestService } from '../../../../../platform/request/node/requestService.js';\nimport { TestConfigurationService } from '../../../../../platform/configuration/test/common/testConfigurationService.js';\n// eslint-disable-next-line local/code-import-patterns\nimport '../../../../workbench.desktop.main.js';\nimport { NullLogService } from '../../../../../platform/log/common/log.js';\nimport { mock } from '../../../../../base/test/common/mock.js';\nimport { INativeEnvironmentService } from '../../../../../platform/environment/common/environment.js';\nimport { FileAccess } from '../../../../../base/common/network.js';\n\ninterface ColorInfo {\n\tdescription: string;\n\toffset: number;\n\tlength: number;\n}\n\ninterface DescriptionDiff {\n\tdocDescription: string;\n\tspecDescription: string;\n}\n\nexport const experimental: string[] = []; // 'settings.modifiedItemForeground', 'editorUnnecessary.foreground' ];\n\n\nconst knwonVariablesFileName = 'vscode-known-variables.json';\n\nsuite('Color Registry', function () {\n\n\ttest(`update colors in ${knwonVariablesFileName}`, async function () {\n\t\tconst varFilePath = FileAccess.asFileUri(`vs/../../build/lib/stylelint/${knwonVariablesFileName}`).fsPath;\n\t\tconst content = (await fs.promises.readFile(varFilePath)).toString();\n\n\t\tconst variablesInfo = JSON.parse(content);\n\n\t\tconst colorsArray = variablesInfo.colors as string[];\n\n\t\tassert.ok(colorsArray && colorsArray.length > 0, '${knwonVariablesFileName} contains no color descriptions');\n\n\t\tconst colors = new Set(colorsArray);\n\n\t\tconst updatedColors = [];\n\t\tconst missing = [];\n\t\tconst themingRegistry = Registry.as<IColorRegistry>(Extensions.ColorContribution);\n\t\tfor (const color of themingRegistry.getColors()) {\n\t\t\tconst id = asCssVariableName(color.id);\n\n\t\t\tif (!colors.has(id)) {\n\t\t\t\tif (!color.deprecationMessage) {\n\t\t\t\t\tmissing.push(id);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcolors.delete(id);\n\t\t\t}\n\t\t\tupdatedColors.push(id);\n\t\t}\n\n\t\tconst superfluousKeys = [...colors.keys()];\n\n\t\tlet errorText = '';\n\t\tif (missing.length > 0) {\n\t\t\terrorText += `\\n\\Adding the following colors:\\n\\n${JSON.stringify(missing, undefined, '\\t')}\\n`;\n\t\t}\n\t\tif (superfluousKeys.length > 0) {\n\t\t\terrorText += `\\n\\Removing the following colors:\\n\\n${superfluousKeys.join('\\n')}\\n`;\n\t\t}\n\n\t\tif (errorText.length > 0) {\n\t\t\tupdatedColors.sort();\n\t\t\tvariablesInfo.colors = updatedColors;\n\t\t\tawait pfs.Promises.writeFile(varFilePath, JSON.stringify(variablesInfo, undefined, '\\t'));\n\n\t\t\tassert.fail(`\\n\\Updating ${path.normalize(varFilePath)}.\\nPlease verify and commit.\\n\\n${errorText}\\n`);\n\t\t}\n\t});\n\n\ttest('all colors listed in theme-color.md', async function () {\n\t\t// avoid importing the TestEnvironmentService as it brings in a duplicate registration of the file editor input factory.\n\t\tconst environmentService = new class extends mock<INativeEnvironmentService>() { override args = { _: [] }; };\n\n\t\tconst docUrl = 'https://raw.githubusercontent.com/microsoft/vscode-docs/main/api/references/theme-color.md';\n\n\t\tconst reqContext = await new RequestService(new TestConfigurationService(), environmentService, new NullLogService()).request({ url: docUrl }, CancellationToken.None);\n\t\tconst content = (await asTextOrError(reqContext))!;\n\n\t\tconst expression = /-\\s*\\`([\\w\\.]+)\\`: (.*)/g;\n\n\t\tlet m: RegExpExecArray | null;\n\t\tconst colorsInDoc: { [id: string]: ColorInfo } = Object.create(null);\n\t\tlet nColorsInDoc = 0;\n\t\twhile (m = expression.exec(content)) {\n\t\t\tcolorsInDoc[m[1]] = { description: m[2], offset: m.index, length: m.length };\n\t\t\tnColorsInDoc++;\n\t\t}\n\t\tassert.ok(nColorsInDoc > 0, 'theme-color.md contains to color descriptions');\n\n\t\tconst missing = Object.create(null);\n\t\tconst descriptionDiffs: { [id: string]: DescriptionDiff } = Object.create(null);\n\n\t\tconst themingRegistry = Registry.as<IColorRegistry>(Extensions.ColorContribution);\n\t\tfor (const color of themingRegistry.getColors()) {\n\t\t\tif (!colorsInDoc[color.id]) {\n\t\t\t\tif (!color.deprecationMessage) {\n\t\t\t\t\tmissing[color.id] = getDescription(color);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst docDescription = colorsInDoc[color.id].description;\n\t\t\t\tconst specDescription = getDescription(color);\n\t\t\t\tif (docDescription !== specDescription) {\n\t\t\t\t\tdescriptionDiffs[color.id] = { docDescription, specDescription };\n\t\t\t\t}\n\t\t\t\tdelete colorsInDoc[color.id];\n\t\t\t}\n\t\t}\n\t\tconst colorsInExtensions = await getColorsFromExtension();\n\t\tfor (const colorId in colorsInExtensions) {\n\t\t\tif (!colorsInDoc[colorId]) {\n\t\t\t\tmissing[colorId] = colorsInExtensions[colorId];\n\t\t\t} else {\n\t\t\t\tdelete colorsInDoc[colorId];\n\t\t\t}\n\t\t}\n\t\tfor (const colorId of experimental) {\n\t\t\tif (missing[colorId]) {\n\t\t\t\tdelete missing[colorId];\n\t\t\t}\n\t\t\tif (colorsInDoc[colorId]) {\n\t\t\t\tassert.fail(`Color ${colorId} found in doc but marked experimental. Please remove from experimental list.`);\n\t\t\t}\n\t\t}\n\t\tconst superfluousKeys = Object.keys(colorsInDoc);\n\t\tconst undocumentedKeys = Object.keys(missing).map(k => `\\`${k}\\`: ${missing[k]}`);\n\n\n\t\tlet errorText = '';\n\t\tif (undocumentedKeys.length > 0) {\n\t\t\terrorText += `\\n\\nAdd the following colors:\\n\\n${undocumentedKeys.join('\\n')}\\n`;\n\t\t}\n\t\tif (superfluousKeys.length > 0) {\n\t\t\terrorText += `\\n\\Remove the following colors:\\n\\n${superfluousKeys.join('\\n')}\\n`;\n\t\t}\n\n\t\tif (errorText.length > 0) {\n\t\t\tassert.fail(`\\n\\nOpen https://github.dev/microsoft/vscode-docs/blob/vnext/api/references/theme-color.md#50${errorText}`);\n\t\t}\n\t});\n});\n\nfunction getDescription(color: ColorContribution) {\n\tlet specDescription = color.description;\n\tif (color.deprecationMessage) {\n\t\tspecDescription = specDescription + ' ' + color.deprecationMessage;\n\t}\n\treturn specDescription;\n}\n\nasync function getColorsFromExtension(): Promise<{ [id: string]: string }> {\n\tconst extPath = FileAccess.asFileUri('vs/../../extensions').fsPath;\n\tconst extFolders = await pfs.Promises.readDirsInDir(extPath);\n\tconst result: { [id: string]: string } = Object.create(null);\n\tfor (const folder of extFolders) {\n\t\ttry {\n\t\t\tconst packageJSON = JSON.parse((await fs.promises.readFile(path.join(extPath, folder, 'package.json'))).toString());\n\t\t\tconst contributes = packageJSON['contributes'];\n\t\t\tif (contributes) {\n\t\t\t\tconst colors = contributes['colors'];\n\t\t\t\tif (colors) {\n\t\t\t\t\tfor (const color of colors) {\n\t\t\t\t\t\tconst colorId = color['id'];\n\t\t\t\t\t\tif (colorId) {\n\t\t\t\t\t\t\tresult[colorId] = colorId['description'];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// ignore\n\t\t}\n\n\t}\n\treturn result;\n}\n"],
  "mappings": "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",
  "names": []
}
