{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/typeHierarchy/browser/typeHierarchyTree.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IAsyncDataSource, ITreeRenderer, ITreeNode, ITreeSorter } from '../../../../base/browser/ui/tree/tree.js';\nimport { TypeHierarchyDirection, TypeHierarchyItem, TypeHierarchyModel } from '../common/typeHierarchy.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { IIdentityProvider, IListVirtualDelegate } from '../../../../base/browser/ui/list/list.js';\nimport { FuzzyScore, createMatches } from '../../../../base/common/filters.js';\nimport { IconLabel } from '../../../../base/browser/ui/iconLabel/iconLabel.js';\nimport { SymbolKinds, SymbolTag } from '../../../../editor/common/languages.js';\nimport { compare } from '../../../../base/common/strings.js';\nimport { Range } from '../../../../editor/common/core/range.js';\nimport { IListAccessibilityProvider } from '../../../../base/browser/ui/list/listWidget.js';\nimport { localize } from '../../../../nls.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\n\nexport class Type {\n\tconstructor(\n\t\treadonly item: TypeHierarchyItem,\n\t\treadonly model: TypeHierarchyModel,\n\t\treadonly parent: Type | undefined\n\t) { }\n\n\tstatic compare(a: Type, b: Type): number {\n\t\tlet res = compare(a.item.uri.toString(), b.item.uri.toString());\n\t\tif (res === 0) {\n\t\t\tres = Range.compareRangesUsingStarts(a.item.range, b.item.range);\n\t\t}\n\t\treturn res;\n\t}\n}\n\nexport class DataSource implements IAsyncDataSource<TypeHierarchyModel, Type> {\n\n\tconstructor(\n\t\tpublic getDirection: () => TypeHierarchyDirection,\n\t) { }\n\n\thasChildren(): boolean {\n\t\treturn true;\n\t}\n\n\tasync getChildren(element: TypeHierarchyModel | Type): Promise<Type[]> {\n\t\tif (element instanceof TypeHierarchyModel) {\n\t\t\treturn element.roots.map(root => new Type(root, element, undefined));\n\t\t}\n\n\t\tconst { model, item } = element;\n\n\t\tif (this.getDirection() === TypeHierarchyDirection.Supertypes) {\n\t\t\treturn (await model.provideSupertypes(item, CancellationToken.None)).map(item => {\n\t\t\t\treturn new Type(\n\t\t\t\t\titem,\n\t\t\t\t\tmodel,\n\t\t\t\t\telement\n\t\t\t\t);\n\t\t\t});\n\t\t} else {\n\t\t\treturn (await model.provideSubtypes(item, CancellationToken.None)).map(item => {\n\t\t\t\treturn new Type(\n\t\t\t\t\titem,\n\t\t\t\t\tmodel,\n\t\t\t\t\telement\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport class Sorter implements ITreeSorter<Type> {\n\n\tcompare(element: Type, otherElement: Type): number {\n\t\treturn Type.compare(element, otherElement);\n\t}\n}\n\nexport class IdentityProvider implements IIdentityProvider<Type> {\n\n\tconstructor(\n\t\tpublic getDirection: () => TypeHierarchyDirection\n\t) { }\n\n\tgetId(element: Type): { toString(): string } {\n\t\tlet res = this.getDirection() + JSON.stringify(element.item.uri) + JSON.stringify(element.item.range);\n\t\tif (element.parent) {\n\t\t\tres += this.getId(element.parent);\n\t\t}\n\t\treturn res;\n\t}\n}\n\nclass TypeRenderingTemplate {\n\tconstructor(\n\t\treadonly icon: HTMLDivElement,\n\t\treadonly label: IconLabel\n\t) { }\n}\n\nexport class TypeRenderer implements ITreeRenderer<Type, FuzzyScore, TypeRenderingTemplate> {\n\n\tstatic readonly id = 'TypeRenderer';\n\n\ttemplateId: string = TypeRenderer.id;\n\n\trenderTemplate(container: HTMLElement): TypeRenderingTemplate {\n\t\tcontainer.classList.add('typehierarchy-element');\n\t\tconst icon = document.createElement('div');\n\t\tcontainer.appendChild(icon);\n\t\tconst label = new IconLabel(container, { supportHighlights: true });\n\t\treturn new TypeRenderingTemplate(icon, label);\n\t}\n\n\trenderElement(node: ITreeNode<Type, FuzzyScore>, _index: number, template: TypeRenderingTemplate): void {\n\t\tconst { element, filterData } = node;\n\t\tconst deprecated = element.item.tags?.includes(SymbolTag.Deprecated);\n\t\ttemplate.icon.classList.add('inline', ...ThemeIcon.asClassNameArray(SymbolKinds.toIcon(element.item.kind)));\n\t\ttemplate.label.setLabel(\n\t\t\telement.item.name,\n\t\t\telement.item.detail,\n\t\t\t{ labelEscapeNewLines: true, matches: createMatches(filterData), strikethrough: deprecated }\n\t\t);\n\t}\n\tdisposeTemplate(template: TypeRenderingTemplate): void {\n\t\ttemplate.label.dispose();\n\t}\n}\n\nexport class VirtualDelegate implements IListVirtualDelegate<Type> {\n\n\tgetHeight(_element: Type): number {\n\t\treturn 22;\n\t}\n\n\tgetTemplateId(_element: Type): string {\n\t\treturn TypeRenderer.id;\n\t}\n}\n\nexport class AccessibilityProvider implements IListAccessibilityProvider<Type> {\n\n\tconstructor(\n\t\tpublic getDirection: () => TypeHierarchyDirection\n\t) { }\n\n\tgetWidgetAriaLabel(): string {\n\t\treturn localize('tree.aria', \"Type Hierarchy\");\n\t}\n\n\tgetAriaLabel(element: Type): string | null {\n\t\tif (this.getDirection() === TypeHierarchyDirection.Supertypes) {\n\t\t\treturn localize('supertypes', \"supertypes of {0}\", element.item.name);\n\t\t} else {\n\t\t\treturn localize('subtypes', \"subtypes of {0}\", element.item.name);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["item"]
}
