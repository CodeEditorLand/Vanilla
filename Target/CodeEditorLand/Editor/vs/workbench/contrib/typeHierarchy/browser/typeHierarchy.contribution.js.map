{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/typeHierarchy/browser/typeHierarchy.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { isCancellationError } from '../../../../base/common/errors.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ICodeEditor } from '../../../../editor/browser/editorBrowser.js';\nimport { EditorAction2, EditorContributionInstantiation, registerEditorContribution, ServicesAccessor } from '../../../../editor/browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../../editor/browser/services/codeEditorService.js';\nimport { Position } from '../../../../editor/common/core/position.js';\nimport { Range } from '../../../../editor/common/core/range.js';\nimport { IEditorContribution } from '../../../../editor/common/editorCommon.js';\nimport { PeekContext } from '../../../../editor/contrib/peekView/browser/peekView.js';\nimport { localize, localize2 } from '../../../../nls.js';\nimport { MenuId, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { ContextKeyExpr, IContextKey, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../platform/storage/common/storage.js';\nimport { TypeHierarchyTreePeekWidget } from './typeHierarchyPeek.js';\nimport { TypeHierarchyDirection, TypeHierarchyModel, TypeHierarchyProviderRegistry } from '../common/typeHierarchy.js';\n\n\nconst _ctxHasTypeHierarchyProvider = new RawContextKey<boolean>('editorHasTypeHierarchyProvider', false, localize('editorHasTypeHierarchyProvider', 'Whether a type hierarchy provider is available'));\nconst _ctxTypeHierarchyVisible = new RawContextKey<boolean>('typeHierarchyVisible', false, localize('typeHierarchyVisible', 'Whether type hierarchy peek is currently showing'));\nconst _ctxTypeHierarchyDirection = new RawContextKey<string>('typeHierarchyDirection', undefined, { type: 'string', description: localize('typeHierarchyDirection', 'whether type hierarchy shows super types or subtypes') });\n\nfunction sanitizedDirection(candidate: string): TypeHierarchyDirection {\n\treturn candidate === TypeHierarchyDirection.Subtypes || candidate === TypeHierarchyDirection.Supertypes\n\t\t? candidate\n\t\t: TypeHierarchyDirection.Subtypes;\n}\n\nclass TypeHierarchyController implements IEditorContribution {\n\tstatic readonly Id = 'typeHierarchy';\n\n\tstatic get(editor: ICodeEditor): TypeHierarchyController | null {\n\t\treturn editor.getContribution<TypeHierarchyController>(TypeHierarchyController.Id);\n\t}\n\n\tprivate static readonly _storageDirectionKey = 'typeHierarchy/defaultDirection';\n\n\tprivate readonly _ctxHasProvider: IContextKey<boolean>;\n\tprivate readonly _ctxIsVisible: IContextKey<boolean>;\n\tprivate readonly _ctxDirection: IContextKey<string>;\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate readonly _sessionDisposables = new DisposableStore();\n\n\tprivate _widget?: TypeHierarchyTreePeekWidget;\n\n\tconstructor(\n\t\treadonly _editor: ICodeEditor,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t\t@ICodeEditorService private readonly _editorService: ICodeEditorService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tthis._ctxHasProvider = _ctxHasTypeHierarchyProvider.bindTo(this._contextKeyService);\n\t\tthis._ctxIsVisible = _ctxTypeHierarchyVisible.bindTo(this._contextKeyService);\n\t\tthis._ctxDirection = _ctxTypeHierarchyDirection.bindTo(this._contextKeyService);\n\t\tthis._disposables.add(Event.any<any>(_editor.onDidChangeModel, _editor.onDidChangeModelLanguage, TypeHierarchyProviderRegistry.onDidChange)(() => {\n\t\t\tthis._ctxHasProvider.set(_editor.hasModel() && TypeHierarchyProviderRegistry.has(_editor.getModel()));\n\t\t}));\n\t\tthis._disposables.add(this._sessionDisposables);\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n\n\t// Peek\n\tasync startTypeHierarchyFromEditor(): Promise<void> {\n\t\tthis._sessionDisposables.clear();\n\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst document = this._editor.getModel();\n\t\tconst position = this._editor.getPosition();\n\t\tif (!TypeHierarchyProviderRegistry.has(document)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst cts = new CancellationTokenSource();\n\t\tconst model = TypeHierarchyModel.create(document, position, cts.token);\n\t\tconst direction = sanitizedDirection(this._storageService.get(TypeHierarchyController._storageDirectionKey, StorageScope.PROFILE, TypeHierarchyDirection.Subtypes));\n\n\t\tthis._showTypeHierarchyWidget(position, direction, model, cts);\n\t}\n\n\tprivate _showTypeHierarchyWidget(position: Position, direction: TypeHierarchyDirection, model: Promise<TypeHierarchyModel | undefined>, cts: CancellationTokenSource) {\n\n\t\tthis._ctxIsVisible.set(true);\n\t\tthis._ctxDirection.set(direction);\n\t\tEvent.any<any>(this._editor.onDidChangeModel, this._editor.onDidChangeModelLanguage)(this.endTypeHierarchy, this, this._sessionDisposables);\n\t\tthis._widget = this._instantiationService.createInstance(TypeHierarchyTreePeekWidget, this._editor, position, direction);\n\t\tthis._widget.showLoading();\n\t\tthis._sessionDisposables.add(this._widget.onDidClose(() => {\n\t\t\tthis.endTypeHierarchy();\n\t\t\tthis._storageService.store(TypeHierarchyController._storageDirectionKey, this._widget!.direction, StorageScope.PROFILE, StorageTarget.USER);\n\t\t}));\n\t\tthis._sessionDisposables.add({ dispose() { cts.dispose(true); } });\n\t\tthis._sessionDisposables.add(this._widget);\n\n\t\tmodel.then(model => {\n\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\treturn; // nothing\n\t\t\t}\n\t\t\tif (model) {\n\t\t\t\tthis._sessionDisposables.add(model);\n\t\t\t\tthis._widget!.showModel(model);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._widget!.showMessage(localize('no.item', \"No results\"));\n\t\t\t}\n\t\t}).catch(err => {\n\t\t\tif (isCancellationError(err)) {\n\t\t\t\tthis.endTypeHierarchy();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._widget!.showMessage(localize('error', \"Failed to show type hierarchy\"));\n\t\t});\n\t}\n\n\tasync startTypeHierarchyFromTypeHierarchy(): Promise<void> {\n\t\tif (!this._widget) {\n\t\t\treturn;\n\t\t}\n\t\tconst model = this._widget.getModel();\n\t\tconst typeItem = this._widget.getFocused();\n\t\tif (!typeItem || !model) {\n\t\t\treturn;\n\t\t}\n\t\tconst newEditor = await this._editorService.openCodeEditor({ resource: typeItem.item.uri }, this._editor);\n\t\tif (!newEditor) {\n\t\t\treturn;\n\t\t}\n\t\tconst newModel = model.fork(typeItem.item);\n\t\tthis._sessionDisposables.clear();\n\n\t\tTypeHierarchyController.get(newEditor)?._showTypeHierarchyWidget(\n\t\t\tRange.lift(newModel.root.selectionRange).getStartPosition(),\n\t\t\tthis._widget.direction,\n\t\t\tPromise.resolve(newModel),\n\t\t\tnew CancellationTokenSource()\n\t\t);\n\t}\n\n\tshowSupertypes(): void {\n\t\tthis._widget?.updateDirection(TypeHierarchyDirection.Supertypes);\n\t\tthis._ctxDirection.set(TypeHierarchyDirection.Supertypes);\n\t}\n\n\tshowSubtypes(): void {\n\t\tthis._widget?.updateDirection(TypeHierarchyDirection.Subtypes);\n\t\tthis._ctxDirection.set(TypeHierarchyDirection.Subtypes);\n\t}\n\n\tendTypeHierarchy(): void {\n\t\tthis._sessionDisposables.clear();\n\t\tthis._ctxIsVisible.set(false);\n\t\tthis._editor.focus();\n\t}\n}\n\nregisterEditorContribution(TypeHierarchyController.Id, TypeHierarchyController, EditorContributionInstantiation.Eager); // eager because it needs to define a context key\n\n// Peek\nregisterAction2(class PeekTypeHierarchyAction extends EditorAction2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.showTypeHierarchy',\n\t\t\ttitle: localize2('title', 'Peek Type Hierarchy'),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.EditorContextPeek,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 1000,\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t_ctxHasTypeHierarchyProvider,\n\t\t\t\t\tPeekContext.notInPeekEditor\n\t\t\t\t),\n\t\t\t},\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\t_ctxHasTypeHierarchyProvider,\n\t\t\t\tPeekContext.notInPeekEditor\n\t\t\t),\n\t\t\tf1: true\n\t\t});\n\t}\n\n\tasync runEditorCommand(_accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\treturn TypeHierarchyController.get(editor)?.startTypeHierarchyFromEditor();\n\t}\n});\n\n// actions for peek widget\nregisterAction2(class extends EditorAction2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.showSupertypes',\n\t\t\ttitle: localize2('title.supertypes', 'Show Supertypes'),\n\t\t\ticon: Codicon.typeHierarchySuper,\n\t\t\tprecondition: ContextKeyExpr.and(_ctxTypeHierarchyVisible, _ctxTypeHierarchyDirection.isEqualTo(TypeHierarchyDirection.Subtypes)),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.Shift + KeyMod.Alt + KeyCode.KeyH,\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: TypeHierarchyTreePeekWidget.TitleMenu,\n\t\t\t\twhen: _ctxTypeHierarchyDirection.isEqualTo(TypeHierarchyDirection.Subtypes),\n\t\t\t\torder: 1,\n\t\t\t}\n\t\t});\n\t}\n\n\trunEditorCommand(_accessor: ServicesAccessor, editor: ICodeEditor) {\n\t\treturn TypeHierarchyController.get(editor)?.showSupertypes();\n\t}\n});\n\nregisterAction2(class extends EditorAction2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.showSubtypes',\n\t\t\ttitle: localize2('title.subtypes', 'Show Subtypes'),\n\t\t\ticon: Codicon.typeHierarchySub,\n\t\t\tprecondition: ContextKeyExpr.and(_ctxTypeHierarchyVisible, _ctxTypeHierarchyDirection.isEqualTo(TypeHierarchyDirection.Supertypes)),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.Shift + KeyMod.Alt + KeyCode.KeyH,\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: TypeHierarchyTreePeekWidget.TitleMenu,\n\t\t\t\twhen: _ctxTypeHierarchyDirection.isEqualTo(TypeHierarchyDirection.Supertypes),\n\t\t\t\torder: 1,\n\t\t\t}\n\t\t});\n\t}\n\n\trunEditorCommand(_accessor: ServicesAccessor, editor: ICodeEditor) {\n\t\treturn TypeHierarchyController.get(editor)?.showSubtypes();\n\t}\n});\n\nregisterAction2(class extends EditorAction2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.refocusTypeHierarchy',\n\t\t\ttitle: localize2('title.refocusTypeHierarchy', 'Refocus Type Hierarchy'),\n\t\t\tprecondition: _ctxTypeHierarchyVisible,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.Shift + KeyCode.Enter\n\t\t\t}\n\t\t});\n\t}\n\n\tasync runEditorCommand(_accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\treturn TypeHierarchyController.get(editor)?.startTypeHierarchyFromTypeHierarchy();\n\t}\n});\n\nregisterAction2(class extends EditorAction2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.closeTypeHierarchy',\n\t\t\ttitle: localize('close', 'Close'),\n\t\t\ticon: Codicon.close,\n\t\t\tprecondition: _ctxTypeHierarchyVisible,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib + 10,\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\twhen: ContextKeyExpr.not('config.editor.stablePeek')\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: TypeHierarchyTreePeekWidget.TitleMenu,\n\t\t\t\torder: 1000\n\t\t\t}\n\t\t});\n\t}\n\n\trunEditorCommand(_accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\treturn TypeHierarchyController.get(editor)?.endTypeHierarchy();\n\t}\n});\n"],
  "mappings": "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",
  "names": ["model"]
}
