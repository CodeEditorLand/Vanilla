var v=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var h=(a,e,t,n)=>{for(var o=n>1?void 0:n?C(e,t):e,s=a.length-1,i;s>=0;s--)(i=a[s])&&(o=(n?i(e,t,o):i(o))||o);return n&&o&&v(e,t,o),o},d=(a,e)=>(t,n)=>e(t,n,a);import{KeyCode as b}from"../../../../base/common/keyCodes.js";import{EditorCommand as y,EditorContributionInstantiation as I,registerEditorCommand as x,registerEditorContribution as E}from"../../../../editor/browser/editorExtensions.js";import{EditorOption as f}from"../../../../editor/common/config/editorOptions.js";import{Range as m}from"../../../../editor/common/core/range.js";import{EditorContextKeys as g}from"../../../../editor/common/editorContextKeys.js";import{ILanguageFeaturesService as P}from"../../../../editor/common/services/languageFeatures.js";import{CodeEditorStateFlag as u,EditorState as L}from"../../../../editor/contrib/editorState/browser/editorState.js";import{SnippetController2 as _}from"../../../../editor/contrib/snippet/browser/snippetController2.js";import{showSimpleSuggestions as w}from"../../../../editor/contrib/suggest/browser/suggest.js";import{IClipboardService as K}from"../../../../platform/clipboard/common/clipboardService.js";import{ContextKeyExpr as D,IContextKeyService as F,RawContextKey as M}from"../../../../platform/contextkey/common/contextkey.js";import{KeybindingWeight as N}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{SnippetCompletion as j}from"./snippetCompletionProvider.js";import{ISnippetsService as T}from"./snippets.js";import{getNonWhitespacePrefix as k}from"./snippetsService.js";let r=class{constructor(e,t,n,o,s){this._editor=e;this._snippetService=t;this._clipboardService=n;this._languageFeaturesService=o;this._hasSnippets=r.ContextKey.bindTo(s),this._configListener=this._editor.onDidChangeConfiguration(i=>{i.hasChanged(f.tabCompletion)&&this._update()}),this._update()}static ID="editor.tabCompletionController";static ContextKey=new M("hasSnippetCompletions",void 0);static get(e){return e.getContribution(r.ID)}_hasSnippets;_configListener;_enabled;_selectionListener;_activeSnippets=[];_completionProvider;dispose(){this._configListener.dispose(),this._selectionListener?.dispose()}_update(){const e=this._editor.getOption(f.tabCompletion)==="onlySnippets";this._enabled!==e&&(this._enabled=e,this._enabled?(this._selectionListener=this._editor.onDidChangeCursorSelection(t=>this._updateSnippets()),this._editor.getModel()&&this._updateSnippets()):this._selectionListener?.dispose())}_updateSnippets(){if(this._activeSnippets=[],this._completionProvider?.dispose(),!this._editor.hasModel())return;const e=this._editor.getSelection(),t=this._editor.getModel();t.tokenization.tokenizeIfCheap(e.positionLineNumber);const n=t.getLanguageIdAtPosition(e.positionLineNumber,e.positionColumn),o=this._snippetService.getSnippetsSync(n);if(!o){this._hasSnippets.set(!1);return}if(m.isEmpty(e)){const i=k(t,e.getPosition());if(i)for(const p of o)i.endsWith(p.prefix)&&this._activeSnippets.push(p)}else if(!m.spansMultipleLines(e)&&t.getValueLengthInRange(e)<=100){const i=t.getValueInRange(e);if(i)for(const p of o)i===p.prefix&&this._activeSnippets.push(p)}const s=this._activeSnippets.length;if(s===0)this._hasSnippets.set(!1);else if(s===1)this._hasSnippets.set(!0);else{this._hasSnippets.set(!0),this._completionProvider={_debugDisplayName:"tabCompletion",dispose:()=>{i.dispose()},provideCompletionItems:(p,l)=>p!==t||!e.containsPosition(l)?void 0:{suggestions:this._activeSnippets.map(c=>{const S=m.fromPositions(l.delta(0,-c.prefix.length),l);return new j(c,S)})}};const i=this._languageFeaturesService.completionProvider.register({language:t.getLanguageId(),pattern:t.uri.fsPath,scheme:t.uri.scheme},this._completionProvider)}}async performSnippetCompletions(){if(this._editor.hasModel())if(this._activeSnippets.length===1){const[e]=this._activeSnippets;let t;if(e.needsClipboard){const n=new L(this._editor,u.Value|u.Position);if(t=await this._clipboardService.readText(),!n.validate(this._editor))return}_.get(this._editor)?.insert(e.codeSnippet,{overwriteBefore:e.prefix.length,overwriteAfter:0,clipboardText:t})}else this._activeSnippets.length>1&&this._completionProvider&&w(this._editor,this._completionProvider)}};r=h([d(1,T),d(2,K),d(3,P),d(4,F)],r),E(r.ID,r,I.Eager);const R=y.bindToContribution(r.get);x(new R({id:"insertSnippet",precondition:r.ContextKey,handler:a=>a.performSnippetCompletions(),kbOpts:{weight:N.EditorContrib,kbExpr:D.and(g.editorTextFocus,g.tabDoesNotMoveFocus,_.InSnippetMode.toNegated()),primary:b.Tab}}));export{r as TabCompletionController};
