{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/snippets/browser/snippetPicker.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { Event } from \"../../../../base/common/event.js\";\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport * as nls from \"../../../../nls.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tIQuickInputService,\n\ttype IQuickPickItem,\n\ttype QuickPickInput,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { ISnippetsService } from \"./snippets.js\";\nimport { type Snippet, SnippetSource } from \"./snippetsFile.js\";\n\nexport async function pickSnippet(\n\taccessor: ServicesAccessor,\n\tlanguageIdOrSnippets: string | Snippet[],\n): Promise<Snippet | undefined> {\n\tconst snippetService = accessor.get(ISnippetsService);\n\tconst quickInputService = accessor.get(IQuickInputService);\n\n\tinterface ISnippetPick extends IQuickPickItem {\n\t\tsnippet: Snippet;\n\t}\n\n\tlet snippets: Snippet[];\n\tif (Array.isArray(languageIdOrSnippets)) {\n\t\tsnippets = languageIdOrSnippets;\n\t} else {\n\t\tsnippets = await snippetService.getSnippets(languageIdOrSnippets, {\n\t\t\tincludeDisabledSnippets: true,\n\t\t\tincludeNoPrefixSnippets: true,\n\t\t});\n\t}\n\n\tsnippets.sort((a, b) => a.snippetSource - b.snippetSource);\n\n\tconst makeSnippetPicks = () => {\n\t\tconst result: QuickPickInput<ISnippetPick>[] = [];\n\t\tlet prevSnippet: Snippet | undefined;\n\t\tfor (const snippet of snippets) {\n\t\t\tconst pick: ISnippetPick = {\n\t\t\t\tlabel: snippet.prefix || snippet.name,\n\t\t\t\tdetail: snippet.description || snippet.body,\n\t\t\t\tsnippet,\n\t\t\t};\n\t\t\tif (\n\t\t\t\t!prevSnippet ||\n\t\t\t\tprevSnippet.snippetSource !== snippet.snippetSource ||\n\t\t\t\tprevSnippet.source !== snippet.source\n\t\t\t) {\n\t\t\t\tlet label = \"\";\n\t\t\t\tswitch (snippet.snippetSource) {\n\t\t\t\t\tcase SnippetSource.User:\n\t\t\t\t\t\tlabel = nls.localize(\n\t\t\t\t\t\t\t\"sep.userSnippet\",\n\t\t\t\t\t\t\t\"User Snippets\",\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase SnippetSource.Extension:\n\t\t\t\t\t\tlabel = snippet.source;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase SnippetSource.Workspace:\n\t\t\t\t\t\tlabel = nls.localize(\n\t\t\t\t\t\t\t\"sep.workspaceSnippet\",\n\t\t\t\t\t\t\t\"Workspace Snippets\",\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tresult.push({ type: \"separator\", label });\n\t\t\t}\n\n\t\t\tif (snippet.snippetSource === SnippetSource.Extension) {\n\t\t\t\tconst isEnabled = snippetService.isEnabled(snippet);\n\t\t\t\tif (isEnabled) {\n\t\t\t\t\tpick.buttons = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ticonClass: ThemeIcon.asClassName(Codicon.eyeClosed),\n\t\t\t\t\t\t\ttooltip: nls.localize(\n\t\t\t\t\t\t\t\t\"disableSnippet\",\n\t\t\t\t\t\t\t\t\"Hide from IntelliSense\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t];\n\t\t\t\t} else {\n\t\t\t\t\tpick.description = nls.localize(\n\t\t\t\t\t\t\"isDisabled\",\n\t\t\t\t\t\t\"(hidden from IntelliSense)\",\n\t\t\t\t\t);\n\t\t\t\t\tpick.buttons = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ticonClass: ThemeIcon.asClassName(Codicon.eye),\n\t\t\t\t\t\t\ttooltip: nls.localize(\n\t\t\t\t\t\t\t\t\"enable.snippet\",\n\t\t\t\t\t\t\t\t\"Show in IntelliSense\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult.push(pick);\n\t\t\tprevSnippet = snippet;\n\t\t}\n\t\treturn result;\n\t};\n\n\tconst disposables = new DisposableStore();\n\tconst picker = disposables.add(\n\t\tquickInputService.createQuickPick<ISnippetPick>({\n\t\t\tuseSeparators: true,\n\t\t}),\n\t);\n\tpicker.placeholder = nls.localize(\"pick.placeholder\", \"Select a snippet\");\n\tpicker.matchOnDetail = true;\n\tpicker.ignoreFocusOut = false;\n\tpicker.keepScrollPosition = true;\n\tdisposables.add(\n\t\tpicker.onDidTriggerItemButton((ctx) => {\n\t\t\tconst isEnabled = snippetService.isEnabled(ctx.item.snippet);\n\t\t\tsnippetService.updateEnablement(ctx.item.snippet, !isEnabled);\n\t\t\tpicker.items = makeSnippetPicks();\n\t\t}),\n\t);\n\tpicker.items = makeSnippetPicks();\n\tif (!picker.items.length) {\n\t\tpicker.validationMessage = nls.localize(\n\t\t\t\"pick.noSnippetAvailable\",\n\t\t\t\"No snippet available\",\n\t\t);\n\t}\n\tpicker.show();\n\n\t// wait for an item to be picked or the picker to become hidden\n\tawait Promise.race([\n\t\tEvent.toPromise(picker.onDidAccept),\n\t\tEvent.toPromise(picker.onDidHide),\n\t]);\n\tconst result = picker.selectedItems[0]?.snippet;\n\tdisposables.dispose();\n\treturn result;\n}\n"],
  "mappings": "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",
  "names": ["result"]
}
