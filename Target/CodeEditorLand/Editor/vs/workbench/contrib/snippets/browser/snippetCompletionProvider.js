var E=Object.defineProperty;var z=Object.getOwnPropertyDescriptor;var v=(l,e,t,n)=>{for(var o=n>1?void 0:n?z(e,t):e,r=l.length-1,a;r>=0;r--)(a=l[r])&&(o=(n?a(e,t,o):a(o))||o);return n&&o&&E(e,t,o),o},f=(l,e)=>(t,n)=>e(t,n,l);import{MarkdownString as K}from"../../../../base/common/htmlContent.js";import{compare as B,compareSubstring as U}from"../../../../base/common/strings.js";import{Position as O}from"../../../../editor/common/core/position.js";import{Range as T}from"../../../../editor/common/core/range.js";import"../../../../editor/common/model.js";import{CompletionItemKind as $,CompletionItemInsertTextRule as D,CompletionTriggerKind as j}from"../../../../editor/common/languages.js";import{ILanguageService as q}from"../../../../editor/common/languages/language.js";import{SnippetParser as F}from"../../../../editor/contrib/snippet/browser/snippetParser.js";import{localize as x}from"../../../../nls.js";import{ISnippetsService as R}from"./snippets.js";import{Snippet as G,SnippetSource as H}from"./snippetsFile.js";import{isPatternInWord as J}from"../../../../base/common/filters.js";import{StopWatch as Q}from"../../../../base/common/stopwatch.js";import{ILanguageConfigurationService as V}from"../../../../editor/common/languages/languageConfigurationRegistry.js";import"../../../../platform/extensions/common/extensions.js";import{CommandsRegistry as X}from"../../../../platform/commands/common/commands.js";import"../../../../editor/common/core/wordHelper.js";const _="_snippet.markAsUsed";X.registerCommand(_,(l,...e)=>{const t=l.get(R),[n]=e;n instanceof G&&t.updateUsageTimestamp(n)});class d{constructor(e,t){this.snippet=e;this.label={label:e.prefix,description:e.name},this.detail=x("detail.snippet","{0} ({1})",e.description||e.name,e.source),this.insertText=e.codeSnippet,this.extensionId=e.extensionId,this.range=t,this.sortText=`${e.snippetSource===H.Extension?"z":"a"}-${e.prefix}`,this.kind=$.Snippet,this.insertTextRules=D.InsertAsSnippet,this.command={id:_,title:"",arguments:[e]}}label;detail;insertText;documentation;range;sortText;kind;insertTextRules;extensionId;command;resolve(){return this.documentation=new K().appendCodeblock("",F.asInsertText(this.snippet.codeSnippet)),this}static compareByLabel(e,t){return B(e.label.label,t.label.label)}}let C=class{constructor(e,t,n){this._languageService=e;this._snippets=t;this._languageConfigurationService=n}_debugDisplayName="snippetCompletions";async provideCompletionItems(e,t,n){const o=new Q,r=t.lineNumber,a=e.getWordAtPosition(t)??{startColumn:t.column,endColumn:t.column,word:""},s=e.getLineContent(t.lineNumber).toLowerCase(),A=s.substring(0,a.startColumn+a.word.length-1),W=this._computeSnippetPositions(e,r,a,A),m=t.column-1,b=n.triggerCharacter?.toLowerCase()??"",S=this._getLanguageIdAtPosition(e,t),k=this._languageConfigurationService.getLanguageConfiguration(S),I=new Set(await this._snippets.getSnippets(S)),g=[];for(const i of I){if(n.triggerKind===j.TriggerCharacter&&!i.prefixLow.startsWith(b))continue;let p;for(const c of W)if(!(c.prefixLow.match(/^\s/)&&!i.prefixLow.match(/^\s/))&&J(c.prefixLow,0,c.prefixLow.length,i.prefixLow,0,i.prefixLow.length)){p=c;break}if(!p)continue;const u=p.startColumn-1,L=i.prefixLow.length-(m-u),y=U(s,i.prefixLow,m,m+L,m-u),N=t.with(void 0,u+1);let w=y===0?t.column+L:t.column;m<s.length&&k.getAutoClosingPairs().autoClosingPairsCloseSingleChar.get(s[m])?.some(h=>h.open===s[N.column-1]&&i.prefix.startsWith(h.open)&&i.prefix[i.prefix.length-1]===h.close)&&w++;const P=T.fromPositions({lineNumber:r,column:p.startColumn},{lineNumber:r,column:w}),M=P.setEndPosition(r,t.column);g.push(new d(i,{replace:P,insert:M})),I.delete(i)}if(!b&&(/\s/.test(s[t.column-2])||!s))for(const i of I){const p=T.fromPositions(t),u=s.indexOf(i.prefixLow,m)===m?p.setEndPosition(t.lineNumber,t.column+i.prefixLow.length):p;g.push(new d(i,{replace:u,insert:p}))}return this._disambiguateSnippets(g),{suggestions:g,duration:o.elapsed()}}_disambiguateSnippets(e){e.sort(d.compareByLabel);for(let t=0;t<e.length;t++){const n=e[t];let o=t+1;for(;o<e.length&&n.label===e[o].label;o++)e[o].label.label=x("snippetSuggest.longLabel","{0}, {1}",e[o].label.label,e[o].snippet.name);o>t+1&&(e[t].label.label=x("snippetSuggest.longLabel","{0}, {1}",e[t].label.label,e[t].snippet.name),t=o)}}resolveCompletionItem(e){return e instanceof d?e.resolve():e}_computeSnippetPositions(e,t,n,o){const r=[];for(let a=1;a<n.startColumn;a++){const s=e.getWordAtPosition(new O(t,a));r.push({startColumn:a,prefixLow:o.substring(a-1),isWord:!!s}),s&&(a=s.endColumn,r.push({startColumn:s.endColumn,prefixLow:o.substring(s.endColumn-1),isWord:!1}))}return(n.word.length>0||r.length===0)&&r.push({startColumn:n.startColumn,prefixLow:o.substring(n.startColumn-1),isWord:!0}),r}_getLanguageIdAtPosition(e,t){e.tokenization.tokenizeIfCheap(t.lineNumber);let n=e.getLanguageIdAtPosition(t.lineNumber,t.column);return this._languageService.getLanguageName(n)||(n=e.getLanguageId()),n}};C=v([f(0,q),f(1,R),f(2,V)],C);export{d as SnippetCompletion,C as SnippetCompletionProvider};
