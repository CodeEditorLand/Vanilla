{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/snippets/browser/commands/surroundWithSnippet.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { ICodeEditor } from \"../../../../../editor/browser/editorBrowser.js\";\nimport type { Position } from \"../../../../../editor/common/core/position.js\";\nimport { EditorContextKeys } from \"../../../../../editor/common/editorContextKeys.js\";\nimport type { ITextModel } from \"../../../../../editor/common/model.js\";\nimport { SnippetController2 } from \"../../../../../editor/contrib/snippet/browser/snippetController2.js\";\nimport { localize2 } from \"../../../../../nls.js\";\nimport { IClipboardService } from \"../../../../../platform/clipboard/common/clipboardService.js\";\nimport { ContextKeyExpr } from \"../../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport { pickSnippet } from \"../snippetPicker.js\";\nimport { ISnippetsService } from \"../snippets.js\";\nimport type { Snippet } from \"../snippetsFile.js\";\nimport { SnippetEditorAction } from \"./abstractSnippetsActions.js\";\n\nexport async function getSurroundableSnippets(\n\tsnippetsService: ISnippetsService,\n\tmodel: ITextModel,\n\tposition: Position,\n\tincludeDisabledSnippets: boolean,\n): Promise<Snippet[]> {\n\tconst { lineNumber, column } = position;\n\tmodel.tokenization.tokenizeIfCheap(lineNumber);\n\tconst languageId = model.getLanguageIdAtPosition(lineNumber, column);\n\n\tconst allSnippets = await snippetsService.getSnippets(languageId, {\n\t\tincludeNoPrefixSnippets: true,\n\t\tincludeDisabledSnippets,\n\t});\n\treturn allSnippets.filter((snippet) => snippet.usesSelection);\n}\n\nexport class SurroundWithSnippetEditorAction extends SnippetEditorAction {\n\tstatic readonly options = {\n\t\tid: \"editor.action.surroundWithSnippet\",\n\t\ttitle: localize2(\"label\", \"Surround with Snippet...\"),\n\t};\n\n\tconstructor() {\n\t\tsuper({\n\t\t\t...SurroundWithSnippetEditorAction.options,\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tEditorContextKeys.hasNonEmptySelection,\n\t\t\t),\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tasync runEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor) {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst instaService = accessor.get(IInstantiationService);\n\t\tconst snippetsService = accessor.get(ISnippetsService);\n\t\tconst clipboardService = accessor.get(IClipboardService);\n\n\t\tconst snippets = await getSurroundableSnippets(\n\t\t\tsnippetsService,\n\t\t\teditor.getModel(),\n\t\t\teditor.getPosition(),\n\t\t\ttrue,\n\t\t);\n\t\tif (!snippets.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst snippet = await instaService.invokeFunction(\n\t\t\tpickSnippet,\n\t\t\tsnippets,\n\t\t);\n\t\tif (!snippet) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet clipboardText: string | undefined;\n\t\tif (snippet.needsClipboard) {\n\t\t\tclipboardText = await clipboardService.readText();\n\t\t}\n\n\t\teditor.focus();\n\t\tSnippetController2.get(editor)?.insert(snippet.codeSnippet, {\n\t\t\tclipboardText,\n\t\t});\n\t\tsnippetsService.updateUsageTimestamp(snippet);\n\t}\n}\n"],
  "mappings": ";;AAOA,SAAS,yBAAyB;AAElC,SAAS,0BAA0B;AACnC,SAAS,iBAAiB;AAC1B,SAAS,yBAAyB;AAClC,SAAS,sBAAsB;AAC/B;AAAA,EACC;AAAA,OAEM;AACP,SAAS,mBAAmB;AAC5B,SAAS,wBAAwB;AAEjC,SAAS,2BAA2B;AAEpC,eAAsB,wBACrB,iBACA,OACA,UACA,yBACqB;AACrB,QAAM,EAAE,YAAY,OAAO,IAAI;AAC/B,QAAM,aAAa,gBAAgB,UAAU;AAC7C,QAAM,aAAa,MAAM,wBAAwB,YAAY,MAAM;AAEnE,QAAM,cAAc,MAAM,gBAAgB,YAAY,YAAY;AAAA,IACjE,yBAAyB;AAAA,IACzB;AAAA,EACD,CAAC;AACD,SAAO,YAAY,OAAO,CAAC,YAAY,QAAQ,aAAa;AAC7D;AAfsB;AAiBf,MAAM,wCAAwC,oBAAoB;AAAA,EAvCzE,OAuCyE;AAAA;AAAA;AAAA,EACxE,OAAgB,UAAU;AAAA,IACzB,IAAI;AAAA,IACJ,OAAO,UAAU,SAAS,0BAA0B;AAAA,EACrD;AAAA,EAEA,cAAc;AACb,UAAM;AAAA,MACL,GAAG,gCAAgC;AAAA,MACnC,cAAc,eAAe;AAAA,QAC5B,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,MACnB;AAAA,MACA,IAAI;AAAA,IACL,CAAC;AAAA,EACF;AAAA,EAEA,MAAM,iBAAiB,UAA4B,QAAqB;AACvE,QAAI,CAAC,OAAO,SAAS,GAAG;AACvB;AAAA,IACD;AAEA,UAAM,eAAe,SAAS,IAAI,qBAAqB;AACvD,UAAM,kBAAkB,SAAS,IAAI,gBAAgB;AACrD,UAAM,mBAAmB,SAAS,IAAI,iBAAiB;AAEvD,UAAM,WAAW,MAAM;AAAA,MACtB;AAAA,MACA,OAAO,SAAS;AAAA,MAChB,OAAO,YAAY;AAAA,MACnB;AAAA,IACD;AACA,QAAI,CAAC,SAAS,QAAQ;AACrB;AAAA,IACD;AAEA,UAAM,UAAU,MAAM,aAAa;AAAA,MAClC;AAAA,MACA;AAAA,IACD;AACA,QAAI,CAAC,SAAS;AACb;AAAA,IACD;AAEA,QAAI;AACJ,QAAI,QAAQ,gBAAgB;AAC3B,sBAAgB,MAAM,iBAAiB,SAAS;AAAA,IACjD;AAEA,WAAO,MAAM;AACb,uBAAmB,IAAI,MAAM,GAAG,OAAO,QAAQ,aAAa;AAAA,MAC3D;AAAA,IACD,CAAC;AACD,oBAAgB,qBAAqB,OAAO;AAAA,EAC7C;AACD;",
  "names": []
}
