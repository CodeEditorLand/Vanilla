{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/snippets/browser/commands/surroundWithSnippet.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ICodeEditor } from '../../../../../editor/browser/editorBrowser.js';\nimport { Position } from '../../../../../editor/common/core/position.js';\nimport { EditorContextKeys } from '../../../../../editor/common/editorContextKeys.js';\nimport { ITextModel } from '../../../../../editor/common/model.js';\nimport { SnippetController2 } from '../../../../../editor/contrib/snippet/browser/snippetController2.js';\nimport { IClipboardService } from '../../../../../platform/clipboard/common/clipboardService.js';\nimport { ContextKeyExpr } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { SnippetEditorAction } from './abstractSnippetsActions.js';\nimport { pickSnippet } from '../snippetPicker.js';\nimport { Snippet } from '../snippetsFile.js';\nimport { ISnippetsService } from '../snippets.js';\nimport { localize2 } from '../../../../../nls.js';\n\nexport async function getSurroundableSnippets(snippetsService: ISnippetsService, model: ITextModel, position: Position, includeDisabledSnippets: boolean): Promise<Snippet[]> {\n\n\tconst { lineNumber, column } = position;\n\tmodel.tokenization.tokenizeIfCheap(lineNumber);\n\tconst languageId = model.getLanguageIdAtPosition(lineNumber, column);\n\n\tconst allSnippets = await snippetsService.getSnippets(languageId, { includeNoPrefixSnippets: true, includeDisabledSnippets });\n\treturn allSnippets.filter(snippet => snippet.usesSelection);\n}\n\nexport class SurroundWithSnippetEditorAction extends SnippetEditorAction {\n\n\tstatic readonly options = {\n\t\tid: 'editor.action.surroundWithSnippet',\n\t\ttitle: localize2('label', \"Surround with Snippet...\")\n\t};\n\n\tconstructor() {\n\t\tsuper({\n\t\t\t...SurroundWithSnippetEditorAction.options,\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t\tEditorContextKeys.hasNonEmptySelection\n\t\t\t),\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tasync runEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor) {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst instaService = accessor.get(IInstantiationService);\n\t\tconst snippetsService = accessor.get(ISnippetsService);\n\t\tconst clipboardService = accessor.get(IClipboardService);\n\n\t\tconst snippets = await getSurroundableSnippets(snippetsService, editor.getModel(), editor.getPosition(), true);\n\t\tif (!snippets.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst snippet = await instaService.invokeFunction(pickSnippet, snippets);\n\t\tif (!snippet) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet clipboardText: string | undefined;\n\t\tif (snippet.needsClipboard) {\n\t\t\tclipboardText = await clipboardService.readText();\n\t\t}\n\n\t\teditor.focus();\n\t\tSnippetController2.get(editor)?.insert(snippet.codeSnippet, { clipboardText });\n\t\tsnippetsService.updateUsageTimestamp(snippet);\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,mBAAmB;AAC5B,SAAS,gBAAgB;AACzB,SAAS,yBAAyB;AAClC,SAAS,kBAAkB;AAC3B,SAAS,0BAA0B;AACnC,SAAS,yBAAyB;AAClC,SAAS,sBAAsB;AAC/B,SAAS,uBAAuB,wBAAwB;AACxD,SAAS,2BAA2B;AACpC,SAAS,mBAAmB;AAC5B,SAAS,eAAe;AACxB,SAAS,wBAAwB;AACjC,SAAS,iBAAiB;AAE1B,eAAsB,wBAAwB,iBAAmC,OAAmB,UAAoB,yBAAsD;AAE7K,QAAM,EAAE,YAAY,OAAO,IAAI;AAC/B,QAAM,aAAa,gBAAgB,UAAU;AAC7C,QAAM,aAAa,MAAM,wBAAwB,YAAY,MAAM;AAEnE,QAAM,cAAc,MAAM,gBAAgB,YAAY,YAAY,EAAE,yBAAyB,MAAM,wBAAwB,CAAC;AAC5H,SAAO,YAAY,OAAO,aAAW,QAAQ,aAAa;AAC3D;AARsB;AAUf,MAAM,wCAAwC,oBAAoB;AAAA,EA7BzE,OA6ByE;AAAA;AAAA;AAAA,EAExE,OAAgB,UAAU;AAAA,IACzB,IAAI;AAAA,IACJ,OAAO,UAAU,SAAS,0BAA0B;AAAA,EACrD;AAAA,EAEA,cAAc;AACb,UAAM;AAAA,MACL,GAAG,gCAAgC;AAAA,MACnC,cAAc,eAAe;AAAA,QAC5B,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,MACnB;AAAA,MACA,IAAI;AAAA,IACL,CAAC;AAAA,EACF;AAAA,EAEA,MAAM,iBAAiB,UAA4B,QAAqB;AACvE,QAAI,CAAC,OAAO,SAAS,GAAG;AACvB;AAAA,IACD;AAEA,UAAM,eAAe,SAAS,IAAI,qBAAqB;AACvD,UAAM,kBAAkB,SAAS,IAAI,gBAAgB;AACrD,UAAM,mBAAmB,SAAS,IAAI,iBAAiB;AAEvD,UAAM,WAAW,MAAM,wBAAwB,iBAAiB,OAAO,SAAS,GAAG,OAAO,YAAY,GAAG,IAAI;AAC7G,QAAI,CAAC,SAAS,QAAQ;AACrB;AAAA,IACD;AAEA,UAAM,UAAU,MAAM,aAAa,eAAe,aAAa,QAAQ;AACvE,QAAI,CAAC,SAAS;AACb;AAAA,IACD;AAEA,QAAI;AACJ,QAAI,QAAQ,gBAAgB;AAC3B,sBAAgB,MAAM,iBAAiB,SAAS;AAAA,IACjD;AAEA,WAAO,MAAM;AACb,uBAAmB,IAAI,MAAM,GAAG,OAAO,QAAQ,aAAa,EAAE,cAAc,CAAC;AAC7E,oBAAgB,qBAAqB,OAAO;AAAA,EAC7C;AACD;",
  "names": []
}
