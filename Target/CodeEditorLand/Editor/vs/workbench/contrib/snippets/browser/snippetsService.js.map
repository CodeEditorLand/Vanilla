{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/snippets/browser/snippetsService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { insertInto } from \"../../../../base/common/arrays.js\";\nimport type { IJSONSchema } from \"../../../../base/common/jsonSchema.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n\tcombinedDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { ResourceMap } from \"../../../../base/common/map.js\";\nimport * as resources from \"../../../../base/common/resources.js\";\nimport { isFalsyOrWhitespace } from \"../../../../base/common/strings.js\";\nimport { isStringArray } from \"../../../../base/common/types.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport type { Position } from \"../../../../editor/common/core/position.js\";\nimport { ILanguageService } from \"../../../../editor/common/languages/language.js\";\nimport { ILanguageConfigurationService } from \"../../../../editor/common/languages/languageConfigurationRegistry.js\";\nimport { setSnippetSuggestSupport } from \"../../../../editor/contrib/suggest/browser/suggest.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IEnvironmentService } from \"../../../../platform/environment/common/environment.js\";\nimport { IExtensionResourceLoaderService } from \"../../../../platform/extensionResourceLoader/common/extensionResourceLoader.js\";\nimport {\n\tFileChangeType,\n\tIFileService,\n} from \"../../../../platform/files/common/files.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport {\n\ttype IWorkspace,\n\tIWorkspaceContextService,\n} from \"../../../../platform/workspace/common/workspace.js\";\nimport {\n\tExtensionsRegistry,\n\ttype IExtensionPointUser,\n} from \"../../../services/extensions/common/extensionsRegistry.js\";\nimport { languagesExtPoint } from \"../../../services/language/common/languageService.js\";\nimport {\n\tILifecycleService,\n\tLifecyclePhase,\n} from \"../../../services/lifecycle/common/lifecycle.js\";\nimport { ITextFileService } from \"../../../services/textfile/common/textfiles.js\";\nimport { IUserDataProfileService } from \"../../../services/userDataProfile/common/userDataProfile.js\";\nimport { SnippetCompletionProvider } from \"./snippetCompletionProvider.js\";\nimport type { ISnippetGetOptions, ISnippetsService } from \"./snippets.js\";\nimport { type Snippet, SnippetFile, SnippetSource } from \"./snippetsFile.js\";\n\nnamespace snippetExt {\n\texport interface ISnippetsExtensionPoint {\n\t\tlanguage: string;\n\t\tpath: string;\n\t}\n\n\texport interface IValidSnippetsExtensionPoint {\n\t\tlanguage: string;\n\t\tlocation: URI;\n\t}\n\n\texport function toValidSnippet(\n\t\textension: IExtensionPointUser<ISnippetsExtensionPoint[]>,\n\t\tsnippet: ISnippetsExtensionPoint,\n\t\tlanguageService: ILanguageService,\n\t): IValidSnippetsExtensionPoint | null {\n\t\tif (isFalsyOrWhitespace(snippet.path)) {\n\t\t\textension.collector.error(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"invalid.path.0\",\n\t\t\t\t\t\"Expected string in `contributes.{0}.path`. Provided value: {1}\",\n\t\t\t\t\textension.description.name,\n\t\t\t\t\tString(snippet.path),\n\t\t\t\t),\n\t\t\t);\n\t\t\treturn null;\n\t\t}\n\n\t\tif (\n\t\t\tisFalsyOrWhitespace(snippet.language) &&\n\t\t\t!snippet.path.endsWith(\".code-snippets\")\n\t\t) {\n\t\t\textension.collector.error(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"invalid.language.0\",\n\t\t\t\t\t\"When omitting the language, the value of `contributes.{0}.path` must be a `.code-snippets`-file. Provided value: {1}\",\n\t\t\t\t\textension.description.name,\n\t\t\t\t\tString(snippet.path),\n\t\t\t\t),\n\t\t\t);\n\t\t\treturn null;\n\t\t}\n\n\t\tif (\n\t\t\t!isFalsyOrWhitespace(snippet.language) &&\n\t\t\t!languageService.isRegisteredLanguageId(snippet.language)\n\t\t) {\n\t\t\textension.collector.error(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"invalid.language\",\n\t\t\t\t\t\"Unknown language in `contributes.{0}.language`. Provided value: {1}\",\n\t\t\t\t\textension.description.name,\n\t\t\t\t\tString(snippet.language),\n\t\t\t\t),\n\t\t\t);\n\t\t\treturn null;\n\t\t}\n\n\t\tconst extensionLocation = extension.description.extensionLocation;\n\t\tconst snippetLocation = resources.joinPath(\n\t\t\textensionLocation,\n\t\t\tsnippet.path,\n\t\t);\n\t\tif (!resources.isEqualOrParent(snippetLocation, extensionLocation)) {\n\t\t\textension.collector.error(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"invalid.path.1\",\n\t\t\t\t\t\"Expected `contributes.{0}.path` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable.\",\n\t\t\t\t\textension.description.name,\n\t\t\t\t\tsnippetLocation.path,\n\t\t\t\t\textensionLocation.path,\n\t\t\t\t),\n\t\t\t);\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tlanguage: snippet.language,\n\t\t\tlocation: snippetLocation,\n\t\t};\n\t}\n\n\texport const snippetsContribution: IJSONSchema = {\n\t\tdescription: localize(\n\t\t\t\"vscode.extension.contributes.snippets\",\n\t\t\t\"Contributes snippets.\",\n\t\t),\n\t\ttype: \"array\",\n\t\tdefaultSnippets: [{ body: [{ language: \"\", path: \"\" }] }],\n\t\titems: {\n\t\t\ttype: \"object\",\n\t\t\tdefaultSnippets: [\n\t\t\t\t{\n\t\t\t\t\tbody: {\n\t\t\t\t\t\tlanguage: \"${1:id}\",\n\t\t\t\t\t\tpath: \"./snippets/${2:id}.json.\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tproperties: {\n\t\t\t\tlanguage: {\n\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\"vscode.extension.contributes.snippets-language\",\n\t\t\t\t\t\t\"Language identifier for which this snippet is contributed to.\",\n\t\t\t\t\t),\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t},\n\t\t\t\tpath: {\n\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\"vscode.extension.contributes.snippets-path\",\n\t\t\t\t\t\t\"Path of the snippets file. The path is relative to the extension folder and typically starts with './snippets/'.\",\n\t\t\t\t\t),\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t};\n\n\texport const point = ExtensionsRegistry.registerExtensionPoint<\n\t\tsnippetExt.ISnippetsExtensionPoint[]\n\t>({\n\t\textensionPoint: \"snippets\",\n\t\tdeps: [languagesExtPoint],\n\t\tjsonSchema: snippetExt.snippetsContribution,\n\t});\n}\n\nfunction watch(\n\tservice: IFileService,\n\tresource: URI,\n\tcallback: () => any,\n): IDisposable {\n\treturn combinedDisposable(\n\t\tservice.watch(resource),\n\t\tservice.onDidFilesChange((e) => {\n\t\t\tif (e.affects(resource)) {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}),\n\t);\n}\n\nclass SnippetEnablement {\n\tprivate static _key = \"snippets.ignoredSnippets\";\n\n\tprivate readonly _ignored: Set<string>;\n\n\tconstructor(\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t) {\n\n\t\tconst raw = _storageService.get(SnippetEnablement._key, StorageScope.PROFILE, '');\n\t\tlet data: string[] | undefined;\n\t\ttry {\n\t\t\tdata = JSON.parse(raw);\n\t\t} catch { }\n\n\t\tthis._ignored = isStringArray(data) ? new Set(data) : new Set();\n\t}\n\n\tisIgnored(id: string): boolean {\n\t\treturn this._ignored.has(id);\n\t}\n\n\tupdateIgnored(id: string, value: boolean): void {\n\t\tlet changed = false;\n\t\tif (this._ignored.has(id) && !value) {\n\t\t\tthis._ignored.delete(id);\n\t\t\tchanged = true;\n\t\t} else if (!this._ignored.has(id) && value) {\n\t\t\tthis._ignored.add(id);\n\t\t\tchanged = true;\n\t\t}\n\t\tif (changed) {\n\t\t\tthis._storageService.store(\n\t\t\t\tSnippetEnablement._key,\n\t\t\t\tJSON.stringify(Array.from(this._ignored)),\n\t\t\t\tStorageScope.PROFILE,\n\t\t\t\tStorageTarget.USER,\n\t\t\t);\n\t\t}\n\t}\n}\n\nclass SnippetUsageTimestamps {\n\tprivate static _key = \"snippets.usageTimestamps\";\n\n\tprivate readonly _usages: Map<string, number>;\n\n\tconstructor(\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t) {\n\n\t\tconst raw = _storageService.get(SnippetUsageTimestamps._key, StorageScope.PROFILE, '');\n\t\tlet data: [string, number][] | undefined;\n\t\ttry {\n\t\t\tdata = JSON.parse(raw);\n\t\t} catch {\n\t\t\tdata = [];\n\t\t}\n\n\t\tthis._usages = Array.isArray(data) ? new Map(data) : new Map();\n\t}\n\n\tgetUsageTimestamp(id: string): number | undefined {\n\t\treturn this._usages.get(id);\n\t}\n\n\tupdateUsageTimestamp(id: string): void {\n\t\t// map uses insertion order, we want most recent at the end\n\t\tthis._usages.delete(id);\n\t\tthis._usages.set(id, Date.now());\n\n\t\t// persist last 100 item\n\t\tconst all = [...this._usages].slice(-100);\n\t\tthis._storageService.store(\n\t\t\tSnippetUsageTimestamps._key,\n\t\t\tJSON.stringify(all),\n\t\t\tStorageScope.PROFILE,\n\t\t\tStorageTarget.USER,\n\t\t);\n\t}\n}\n\nexport class SnippetsService implements ISnippetsService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate readonly _pendingWork: Promise<any>[] = [];\n\tprivate readonly _files = new ResourceMap<SnippetFile>();\n\tprivate readonly _enablement: SnippetEnablement;\n\tprivate readonly _usageTimestamps: SnippetUsageTimestamps;\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly _environmentService: IEnvironmentService,\n\t\t@IUserDataProfileService private readonly _userDataProfileService: IUserDataProfileService,\n\t\t@IWorkspaceContextService private readonly _contextService: IWorkspaceContextService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@ITextFileService private readonly _textfileService: ITextFileService,\n\t\t@IExtensionResourceLoaderService private readonly _extensionResourceLoaderService: IExtensionResourceLoaderService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ILanguageConfigurationService languageConfigurationService: ILanguageConfigurationService,\n\t) {\n\t\tthis._pendingWork.push(Promise.resolve(lifecycleService.when(LifecyclePhase.Restored).then(() => {\n\t\t\tthis._initExtensionSnippets();\n\t\t\tthis._initUserSnippets();\n\t\t\tthis._initWorkspaceSnippets();\n\t\t})));\n\n\t\tsetSnippetSuggestSupport(new SnippetCompletionProvider(this._languageService, this, languageConfigurationService));\n\n\t\tthis._enablement = instantiationService.createInstance(SnippetEnablement);\n\t\tthis._usageTimestamps = instantiationService.createInstance(SnippetUsageTimestamps);\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n\n\tisEnabled(snippet: Snippet): boolean {\n\t\treturn !this._enablement.isIgnored(snippet.snippetIdentifier);\n\t}\n\n\tupdateEnablement(snippet: Snippet, enabled: boolean): void {\n\t\tthis._enablement.updateIgnored(snippet.snippetIdentifier, !enabled);\n\t}\n\n\tupdateUsageTimestamp(snippet: Snippet): void {\n\t\tthis._usageTimestamps.updateUsageTimestamp(snippet.snippetIdentifier);\n\t}\n\n\tprivate _joinSnippets(): Promise<any> {\n\t\tconst promises = this._pendingWork.slice(0);\n\t\tthis._pendingWork.length = 0;\n\t\treturn Promise.all(promises);\n\t}\n\n\tasync getSnippetFiles(): Promise<Iterable<SnippetFile>> {\n\t\tawait this._joinSnippets();\n\t\treturn this._files.values();\n\t}\n\n\tasync getSnippets(\n\t\tlanguageId: string | undefined,\n\t\topts?: ISnippetGetOptions,\n\t): Promise<Snippet[]> {\n\t\tawait this._joinSnippets();\n\n\t\tconst result: Snippet[] = [];\n\t\tconst promises: Promise<any>[] = [];\n\n\t\tif (languageId) {\n\t\t\tif (this._languageService.isRegisteredLanguageId(languageId)) {\n\t\t\t\tfor (const file of this._files.values()) {\n\t\t\t\t\tpromises.push(\n\t\t\t\t\t\tfile\n\t\t\t\t\t\t\t.load()\n\t\t\t\t\t\t\t.then((file) => file.select(languageId, result))\n\t\t\t\t\t\t\t.catch((err) =>\n\t\t\t\t\t\t\t\tthis._logService.error(\n\t\t\t\t\t\t\t\t\terr,\n\t\t\t\t\t\t\t\t\tfile.location.toString(),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const file of this._files.values()) {\n\t\t\t\tpromises.push(\n\t\t\t\t\tfile\n\t\t\t\t\t\t.load()\n\t\t\t\t\t\t.then((file) =>\n\t\t\t\t\t\t\tinsertInto(result, result.length, file.data),\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.catch((err) =>\n\t\t\t\t\t\t\tthis._logService.error(\n\t\t\t\t\t\t\t\terr,\n\t\t\t\t\t\t\t\tfile.location.toString(),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tawait Promise.all(promises);\n\t\treturn this._filterAndSortSnippets(result, opts);\n\t}\n\n\tgetSnippetsSync(languageId: string, opts?: ISnippetGetOptions): Snippet[] {\n\t\tconst result: Snippet[] = [];\n\t\tif (this._languageService.isRegisteredLanguageId(languageId)) {\n\t\t\tfor (const file of this._files.values()) {\n\t\t\t\t// kick off loading (which is a noop in case it's already loaded)\n\t\t\t\t// and optimistically collect snippets\n\t\t\t\tfile.load().catch((_err) => {\n\t\t\t\t\t/*ignore*/\n\t\t\t\t});\n\t\t\t\tfile.select(languageId, result);\n\t\t\t}\n\t\t}\n\t\treturn this._filterAndSortSnippets(result, opts);\n\t}\n\n\tprivate _filterAndSortSnippets(\n\t\tsnippets: Snippet[],\n\t\topts?: ISnippetGetOptions,\n\t): Snippet[] {\n\t\tconst result: Snippet[] = [];\n\n\t\tfor (const snippet of snippets) {\n\t\t\tif (!snippet.prefix && !opts?.includeNoPrefixSnippets) {\n\t\t\t\t// prefix or no-prefix wanted\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!this.isEnabled(snippet) && !opts?.includeDisabledSnippets) {\n\t\t\t\t// enabled or disabled wanted\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (\n\t\t\t\ttypeof opts?.fileTemplateSnippets === \"boolean\" &&\n\t\t\t\topts.fileTemplateSnippets !== snippet.isFileTemplate\n\t\t\t) {\n\t\t\t\t// isTopLevel requested but mismatching\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tresult.push(snippet);\n\t\t}\n\n\t\treturn result.sort((a, b) => {\n\t\t\tlet result = 0;\n\t\t\tif (!opts?.noRecencySort) {\n\t\t\t\tconst val1 =\n\t\t\t\t\tthis._usageTimestamps.getUsageTimestamp(\n\t\t\t\t\t\ta.snippetIdentifier,\n\t\t\t\t\t) ?? -1;\n\t\t\t\tconst val2 =\n\t\t\t\t\tthis._usageTimestamps.getUsageTimestamp(\n\t\t\t\t\t\tb.snippetIdentifier,\n\t\t\t\t\t) ?? -1;\n\t\t\t\tresult = val2 - val1;\n\t\t\t}\n\t\t\tif (result === 0) {\n\t\t\t\tresult = this._compareSnippet(a, b);\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprivate _compareSnippet(a: Snippet, b: Snippet): number {\n\t\tif (a.snippetSource < b.snippetSource) {\n\t\t\treturn -1;\n\t\t} else if (a.snippetSource > b.snippetSource) {\n\t\t\treturn 1;\n\t\t} else if (a.source < b.source) {\n\t\t\treturn -1;\n\t\t} else if (a.source > b.source) {\n\t\t\treturn 1;\n\t\t} else if (a.name > b.name) {\n\t\t\treturn 1;\n\t\t} else if (a.name < b.name) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t// --- loading, watching\n\n\tprivate _initExtensionSnippets(): void {\n\t\tsnippetExt.point.setHandler((extensions) => {\n\t\t\tfor (const [key, value] of this._files) {\n\t\t\t\tif (value.source === SnippetSource.Extension) {\n\t\t\t\t\tthis._files.delete(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const extension of extensions) {\n\t\t\t\tfor (const contribution of extension.value) {\n\t\t\t\t\tconst validContribution = snippetExt.toValidSnippet(\n\t\t\t\t\t\textension,\n\t\t\t\t\t\tcontribution,\n\t\t\t\t\t\tthis._languageService,\n\t\t\t\t\t);\n\t\t\t\t\tif (!validContribution) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst file = this._files.get(validContribution.location);\n\t\t\t\t\tif (file) {\n\t\t\t\t\t\tif (file.defaultScopes) {\n\t\t\t\t\t\t\tfile.defaultScopes.push(validContribution.language);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfile.defaultScopes = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst file = new SnippetFile(\n\t\t\t\t\t\t\tSnippetSource.Extension,\n\t\t\t\t\t\t\tvalidContribution.location,\n\t\t\t\t\t\t\tvalidContribution.language\n\t\t\t\t\t\t\t\t? [validContribution.language]\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t\textension.description,\n\t\t\t\t\t\t\tthis._fileService,\n\t\t\t\t\t\t\tthis._extensionResourceLoaderService,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis._files.set(file.location, file);\n\n\t\t\t\t\t\tif (this._environmentService.isExtensionDevelopment) {\n\t\t\t\t\t\t\tfile.load().then(\n\t\t\t\t\t\t\t\t(file) => {\n\t\t\t\t\t\t\t\t\t// warn about bad tabstop/variable usage\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tfile.data.some(\n\t\t\t\t\t\t\t\t\t\t\t(snippet) => snippet.isBogous,\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\textension.collector.warn(\n\t\t\t\t\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\t\t\t\t\"badVariableUse\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"One or more snippets from the extension '{0}' very likely confuse snippet-variables and snippet-placeholders (see https://code.visualstudio.com/docs/editor/userdefinedsnippets#_snippet-syntax for more details)\",\n\t\t\t\t\t\t\t\t\t\t\t\textension.description.name,\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t(err) => {\n\t\t\t\t\t\t\t\t\t// generic error\n\t\t\t\t\t\t\t\t\textension.collector.warn(\n\t\t\t\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\t\t\t\"badFile\",\n\t\t\t\t\t\t\t\t\t\t\t'The snippet file \"{0}\" could not be read.',\n\t\t\t\t\t\t\t\t\t\t\tfile.location.toString(),\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _initWorkspaceSnippets(): void {\n\t\t// workspace stuff\n\t\tconst disposables = new DisposableStore();\n\t\tconst updateWorkspaceSnippets = () => {\n\t\t\tdisposables.clear();\n\t\t\tthis._pendingWork.push(\n\t\t\t\tthis._initWorkspaceFolderSnippets(\n\t\t\t\t\tthis._contextService.getWorkspace(),\n\t\t\t\t\tdisposables,\n\t\t\t\t),\n\t\t\t);\n\t\t};\n\t\tthis._disposables.add(disposables);\n\t\tthis._disposables.add(\n\t\t\tthis._contextService.onDidChangeWorkspaceFolders(\n\t\t\t\tupdateWorkspaceSnippets,\n\t\t\t),\n\t\t);\n\t\tthis._disposables.add(\n\t\t\tthis._contextService.onDidChangeWorkbenchState(\n\t\t\t\tupdateWorkspaceSnippets,\n\t\t\t),\n\t\t);\n\t\tupdateWorkspaceSnippets();\n\t}\n\n\tprivate async _initWorkspaceFolderSnippets(\n\t\tworkspace: IWorkspace,\n\t\tbucket: DisposableStore,\n\t): Promise<any> {\n\t\tconst promises = workspace.folders.map(async (folder) => {\n\t\t\tconst snippetFolder = folder.toResource(\".vscode\");\n\t\t\tconst value = await this._fileService.exists(snippetFolder);\n\t\t\tif (value) {\n\t\t\t\tthis._initFolderSnippets(\n\t\t\t\t\tSnippetSource.Workspace,\n\t\t\t\t\tsnippetFolder,\n\t\t\t\t\tbucket,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t// watch\n\t\t\t\tbucket.add(\n\t\t\t\t\tthis._fileService.onDidFilesChange((e) => {\n\t\t\t\t\t\tif (e.contains(snippetFolder, FileChangeType.ADDED)) {\n\t\t\t\t\t\t\tthis._initFolderSnippets(\n\t\t\t\t\t\t\t\tSnippetSource.Workspace,\n\t\t\t\t\t\t\t\tsnippetFolder,\n\t\t\t\t\t\t\t\tbucket,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\tawait Promise.all(promises);\n\t}\n\n\tprivate async _initUserSnippets(): Promise<any> {\n\t\tconst disposables = new DisposableStore();\n\t\tconst updateUserSnippets = async () => {\n\t\t\tdisposables.clear();\n\t\t\tconst userSnippetsFolder =\n\t\t\t\tthis._userDataProfileService.currentProfile.snippetsHome;\n\t\t\tawait this._fileService.createFolder(userSnippetsFolder);\n\t\t\tawait this._initFolderSnippets(\n\t\t\t\tSnippetSource.User,\n\t\t\t\tuserSnippetsFolder,\n\t\t\t\tdisposables,\n\t\t\t);\n\t\t};\n\t\tthis._disposables.add(disposables);\n\t\tthis._disposables.add(\n\t\t\tthis._userDataProfileService.onDidChangeCurrentProfile((e) =>\n\t\t\t\te.join(\n\t\t\t\t\t(async () => {\n\t\t\t\t\t\tthis._pendingWork.push(updateUserSnippets());\n\t\t\t\t\t})(),\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t\tawait updateUserSnippets();\n\t}\n\n\tprivate _initFolderSnippets(\n\t\tsource: SnippetSource,\n\t\tfolder: URI,\n\t\tbucket: DisposableStore,\n\t): Promise<any> {\n\t\tconst disposables = new DisposableStore();\n\t\tconst addFolderSnippets = async () => {\n\t\t\tdisposables.clear();\n\t\t\tif (!(await this._fileService.exists(folder))) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst stat = await this._fileService.resolve(folder);\n\t\t\t\tfor (const entry of stat.children || []) {\n\t\t\t\t\tdisposables.add(\n\t\t\t\t\t\tthis._addSnippetFile(entry.resource, source),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tthis._logService.error(\n\t\t\t\t\t`Failed snippets from folder '${folder.toString()}'`,\n\t\t\t\t\terr,\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\tbucket.add(\n\t\t\tthis._textfileService.files.onDidSave((e) => {\n\t\t\t\tif (resources.isEqualOrParent(e.model.resource, folder)) {\n\t\t\t\t\taddFolderSnippets();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tbucket.add(watch(this._fileService, folder, addFolderSnippets));\n\t\tbucket.add(disposables);\n\t\treturn addFolderSnippets();\n\t}\n\n\tprivate _addSnippetFile(uri: URI, source: SnippetSource): IDisposable {\n\t\tconst ext = resources.extname(uri);\n\t\tif (source === SnippetSource.User && ext === \".json\") {\n\t\t\tconst langName = resources.basename(uri).replace(/\\.json/, \"\");\n\t\t\tthis._files.set(\n\t\t\t\turi,\n\t\t\t\tnew SnippetFile(\n\t\t\t\t\tsource,\n\t\t\t\t\turi,\n\t\t\t\t\t[langName],\n\t\t\t\t\tundefined,\n\t\t\t\t\tthis._fileService,\n\t\t\t\t\tthis._extensionResourceLoaderService,\n\t\t\t\t),\n\t\t\t);\n\t\t} else if (ext === \".code-snippets\") {\n\t\t\tthis._files.set(\n\t\t\t\turi,\n\t\t\t\tnew SnippetFile(\n\t\t\t\t\tsource,\n\t\t\t\t\turi,\n\t\t\t\t\tundefined,\n\t\t\t\t\tundefined,\n\t\t\t\t\tthis._fileService,\n\t\t\t\t\tthis._extensionResourceLoaderService,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\treturn {\n\t\t\tdispose: () => this._files.delete(uri),\n\t\t};\n\t}\n}\n\nexport interface ISimpleModel {\n\tgetLineContent(lineNumber: number): string;\n}\n\nexport function getNonWhitespacePrefix(\n\tmodel: ISimpleModel,\n\tposition: Position,\n): string {\n\t/**\n\t * Do not analyze more characters\n\t */\n\tconst MAX_PREFIX_LENGTH = 100;\n\n\tconst line = model\n\t\t.getLineContent(position.lineNumber)\n\t\t.substr(0, position.column - 1);\n\n\tconst minChIndex = Math.max(0, line.length - MAX_PREFIX_LENGTH);\n\tfor (let chIndex = line.length - 1; chIndex >= minChIndex; chIndex--) {\n\t\tconst ch = line.charAt(chIndex);\n\n\t\tif (/\\s/.test(ch)) {\n\t\t\treturn line.substr(chIndex + 1);\n\t\t}\n\t}\n\n\tif (minChIndex === 0) {\n\t\treturn line;\n\t}\n\n\treturn \"\";\n}\n"],
  "mappings": "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",
  "names": ["snippetExt", "file", "result"]
}
