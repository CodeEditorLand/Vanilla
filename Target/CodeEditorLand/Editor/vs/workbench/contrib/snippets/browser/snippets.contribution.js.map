{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/snippets/browser/snippets.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IJSONSchema, IJSONSchemaMap } from '../../../../base/common/jsonSchema.js';\nimport * as nls from '../../../../nls.js';\nimport { registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport * as JSONContributionRegistry from '../../../../platform/jsonschemas/common/jsonContributionRegistry.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContributionsRegistry } from '../../../common/contributions.js';\nimport { ConfigureSnippetsAction } from './commands/configureSnippets.js';\nimport { ApplyFileSnippetAction } from './commands/fileTemplateSnippets.js';\nimport { InsertSnippetAction } from './commands/insertSnippet.js';\nimport { SurroundWithSnippetEditorAction } from './commands/surroundWithSnippet.js';\nimport { SnippetCodeActions } from './snippetCodeActionProvider.js';\nimport { ISnippetsService } from './snippets.js';\nimport { SnippetsService } from './snippetsService.js';\nimport { LifecyclePhase } from '../../../services/lifecycle/common/lifecycle.js';\nimport { Extensions, IConfigurationRegistry } from '../../../../platform/configuration/common/configurationRegistry.js';\n\nimport './tabCompletion.js';\nimport { editorConfigurationBaseNode } from '../../../../editor/common/config/editorConfigurationSchema.js';\n\n// service\nregisterSingleton(ISnippetsService, SnippetsService, InstantiationType.Delayed);\n\n// actions\nregisterAction2(InsertSnippetAction);\nCommandsRegistry.registerCommandAlias('editor.action.showSnippets', 'editor.action.insertSnippet');\nregisterAction2(SurroundWithSnippetEditorAction);\nregisterAction2(ApplyFileSnippetAction);\nregisterAction2(ConfigureSnippetsAction);\n\n// workbench contribs\nconst workbenchContribRegistry = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench);\nworkbenchContribRegistry.registerWorkbenchContribution(SnippetCodeActions, LifecyclePhase.Restored);\n\n// config\nRegistry\n\t.as<IConfigurationRegistry>(Extensions.Configuration)\n\t.registerConfiguration({\n\t\t...editorConfigurationBaseNode,\n\t\t'properties': {\n\t\t\t'editor.snippets.codeActions.enabled': {\n\t\t\t\t'description': nls.localize('editor.snippets.codeActions.enabled', 'Controls if surround-with-snippets or file template snippets show as Code Actions.'),\n\t\t\t\t'type': 'boolean',\n\t\t\t\t'default': true\n\t\t\t}\n\t\t}\n\t});\n\n\n// schema\nconst languageScopeSchemaId = 'vscode://schemas/snippets';\n\nconst snippetSchemaProperties: IJSONSchemaMap = {\n\tprefix: {\n\t\tdescription: nls.localize('snippetSchema.json.prefix', 'The prefix to use when selecting the snippet in intellisense'),\n\t\ttype: ['string', 'array']\n\t},\n\tisFileTemplate: {\n\t\tdescription: nls.localize('snippetSchema.json.isFileTemplate', 'The snippet is meant to populate or replace a whole file'),\n\t\ttype: 'boolean'\n\t},\n\tbody: {\n\t\tmarkdownDescription: nls.localize('snippetSchema.json.body', 'The snippet content. Use `$1`, `${1:defaultText}` to define cursor positions, use `$0` for the final cursor position. Insert variable values with `${varName}` and `${varName:defaultText}`, e.g. `This is file: $TM_FILENAME`.'),\n\t\ttype: ['string', 'array'],\n\t\titems: {\n\t\t\ttype: 'string'\n\t\t}\n\t},\n\tdescription: {\n\t\tdescription: nls.localize('snippetSchema.json.description', 'The snippet description.'),\n\t\ttype: ['string', 'array']\n\t}\n};\n\nconst languageScopeSchema: IJSONSchema = {\n\tid: languageScopeSchemaId,\n\tallowComments: true,\n\tallowTrailingCommas: true,\n\tdefaultSnippets: [{\n\t\tlabel: nls.localize('snippetSchema.json.default', \"Empty snippet\"),\n\t\tbody: { '${1:snippetName}': { 'prefix': '${2:prefix}', 'body': '${3:snippet}', 'description': '${4:description}' } }\n\t}],\n\ttype: 'object',\n\tdescription: nls.localize('snippetSchema.json', 'User snippet configuration'),\n\tadditionalProperties: {\n\t\ttype: 'object',\n\t\trequired: ['body'],\n\t\tproperties: snippetSchemaProperties,\n\t\tadditionalProperties: false\n\t}\n};\n\n\nconst globalSchemaId = 'vscode://schemas/global-snippets';\nconst globalSchema: IJSONSchema = {\n\tid: globalSchemaId,\n\tallowComments: true,\n\tallowTrailingCommas: true,\n\tdefaultSnippets: [{\n\t\tlabel: nls.localize('snippetSchema.json.default', \"Empty snippet\"),\n\t\tbody: { '${1:snippetName}': { 'scope': '${2:scope}', 'prefix': '${3:prefix}', 'body': '${4:snippet}', 'description': '${5:description}' } }\n\t}],\n\ttype: 'object',\n\tdescription: nls.localize('snippetSchema.json', 'User snippet configuration'),\n\tadditionalProperties: {\n\t\ttype: 'object',\n\t\trequired: ['body'],\n\t\tproperties: {\n\t\t\t...snippetSchemaProperties,\n\t\t\tscope: {\n\t\t\t\tdescription: nls.localize('snippetSchema.json.scope', \"A list of language names to which this snippet applies, e.g. 'typescript,javascript'.\"),\n\t\t\t\ttype: 'string'\n\t\t\t}\n\t\t},\n\t\tadditionalProperties: false\n\t}\n};\n\nconst reg = Registry.as<JSONContributionRegistry.IJSONContributionRegistry>(JSONContributionRegistry.Extensions.JSONContribution);\nreg.registerSchema(languageScopeSchemaId, languageScopeSchema);\nreg.registerSchema(globalSchemaId, globalSchema);\n"],
  "mappings": "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",
  "names": []
}
