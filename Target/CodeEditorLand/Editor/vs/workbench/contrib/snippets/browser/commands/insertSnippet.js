import"../../../../../editor/browser/editorBrowser.js";import"../../../../../editor/browser/editorExtensions.js";import{EditorContextKeys as v}from"../../../../../editor/common/editorContextKeys.js";import{ILanguageService as C}from"../../../../../editor/common/languages/language.js";import{SnippetController2 as w}from"../../../../../editor/contrib/snippet/browser/snippetController2.js";import*as h from"../../../../../nls.js";import{IClipboardService as x}from"../../../../../platform/clipboard/common/clipboardService.js";import{IInstantiationService as E}from"../../../../../platform/instantiation/common/instantiation.js";import{pickSnippet as L}from"../snippetPicker.js";import{ISnippetsService as M}from"../snippets.js";import{Snippet as k,SnippetSource as A}from"../snippetsFile.js";import{SnippetEditorAction as P}from"./abstractSnippetsActions.js";class o{constructor(t,e,n){this.snippet=t;this.name=e;this.langId=n}static fromUser(t){if(!t||typeof t!="object")return o._empty;let{snippet:e,name:n,langId:i}=t;return typeof e!="string"&&(e=void 0),typeof n!="string"&&(n=void 0),typeof i!="string"&&(i=void 0),new o(e,n,i)}static _empty=new o(void 0,void 0,void 0)}class J extends P{constructor(){super({id:"editor.action.insertSnippet",title:h.localize2("snippet.suggestions.label","Insert Snippet"),f1:!0,precondition:v.writable,metadata:{description:"Insert Snippet",args:[{name:"args",schema:{type:"object",properties:{snippet:{type:"string"},langId:{type:"string"},name:{type:"string"}}}}]}})}async runEditorCommand(t,e,n){const i=t.get(C),d=t.get(M);if(!e.hasModel())return;const u=t.get(x),l=t.get(E),p=await new Promise((s,S)=>{const{lineNumber:m,column:I}=e.getPosition(),{snippet:c,name:g,langId:a}=o.fromUser(n);if(c)return s(new k(!1,[],"","","",c,"",A.User,`random/${Math.random()}`));let r;if(a){if(!i.isRegisteredLanguageId(a))return s(void 0);r=a}else e.getModel().tokenization.tokenizeIfCheap(m),r=e.getModel().getLanguageIdAtPosition(m,I),i.getLanguageName(r)||(r=e.getModel().getLanguageId());g?d.getSnippets(r,{includeNoPrefixSnippets:!0}).then(y=>y.find(b=>b.name===g)).then(s,S):s(l.invokeFunction(L,r))});if(!p)return;let f;p.needsClipboard&&(f=await u.readText()),e.focus(),w.get(e)?.insert(p.codeSnippet,{clipboardText:f}),d.updateUsageTimestamp(p)}}export{J as InsertSnippetAction};
