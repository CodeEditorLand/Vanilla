{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/snippets/test/browser/snippetsService.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { SnippetCompletion, SnippetCompletionProvider } from '../../browser/snippetCompletionProvider.js';\nimport { IPosition, Position } from '../../../../../editor/common/core/position.js';\nimport { createModelServices, instantiateTextModel } from '../../../../../editor/test/common/testTextModel.js';\nimport { ISnippetsService } from '../../browser/snippets.js';\nimport { Snippet, SnippetSource } from '../../browser/snippetsFile.js';\nimport { CompletionContext, CompletionItemLabel, CompletionItemRanges, CompletionTriggerKind } from '../../../../../editor/common/languages.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { TestLanguageConfigurationService } from '../../../../../editor/test/common/modes/testLanguageConfigurationService.js';\nimport { EditOperation } from '../../../../../editor/common/core/editOperation.js';\nimport { TestInstantiationService } from '../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { ILanguageService } from '../../../../../editor/common/languages/language.js';\nimport { generateUuid } from '../../../../../base/common/uuid.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { ITextModel } from '../../../../../editor/common/model.js';\nimport { CompletionModel } from '../../../../../editor/contrib/suggest/browser/completionModel.js';\nimport { CompletionItem } from '../../../../../editor/contrib/suggest/browser/suggest.js';\nimport { WordDistance } from '../../../../../editor/contrib/suggest/browser/wordDistance.js';\nimport { EditorOptions } from '../../../../../editor/common/config/editorOptions.js';\n\nclass SimpleSnippetService implements ISnippetsService {\n\tdeclare readonly _serviceBrand: undefined;\n\tconstructor(readonly snippets: Snippet[]) { }\n\tgetSnippets() {\n\t\treturn Promise.resolve(this.getSnippetsSync());\n\t}\n\tgetSnippetsSync(): Snippet[] {\n\t\treturn this.snippets;\n\t}\n\tgetSnippetFiles(): any {\n\t\tthrow new Error();\n\t}\n\tisEnabled(): boolean {\n\t\tthrow new Error();\n\t}\n\tupdateEnablement(): void {\n\t\tthrow new Error();\n\t}\n\tupdateUsageTimestamp(snippet: Snippet): void {\n\t\tthrow new Error();\n\t}\n}\n\nsuite('SnippetsService', function () {\n\tconst defaultCompletionContext: CompletionContext = { triggerKind: CompletionTriggerKind.Invoke };\n\n\tlet disposables: DisposableStore;\n\tlet instantiationService: TestInstantiationService;\n\tlet languageService: ILanguageService;\n\tlet snippetService: ISnippetsService;\n\n\tsetup(function () {\n\t\tdisposables = new DisposableStore();\n\t\tinstantiationService = createModelServices(disposables);\n\t\tlanguageService = instantiationService.get(ILanguageService);\n\t\tdisposables.add(languageService.registerLanguage({\n\t\t\tid: 'fooLang',\n\t\t\textensions: ['.fooLang',]\n\t\t}));\n\t\tsnippetService = new SimpleSnippetService([new Snippet(\n\t\t\tfalse,\n\t\t\t['fooLang'],\n\t\t\t'barTest',\n\t\t\t'bar',\n\t\t\t'',\n\t\t\t'barCodeSnippet',\n\t\t\t'',\n\t\t\tSnippetSource.User,\n\t\t\tgenerateUuid()\n\t\t), new Snippet(\n\t\t\tfalse,\n\t\t\t['fooLang'],\n\t\t\t'bazzTest',\n\t\t\t'bazz',\n\t\t\t'',\n\t\t\t'bazzCodeSnippet',\n\t\t\t'',\n\t\t\tSnippetSource.User,\n\t\t\tgenerateUuid()\n\t\t)]);\n\t});\n\n\tteardown(() => {\n\t\tdisposables.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tasync function asCompletionModel(model: ITextModel, position: IPosition, provider: SnippetCompletionProvider, context: CompletionContext = defaultCompletionContext) {\n\n\t\tconst list = await provider.provideCompletionItems(model, Position.lift(position), context);\n\n\t\tconst result = new CompletionModel(list.suggestions.map(s => {\n\t\t\treturn new CompletionItem(position, s, list, provider);\n\t\t}),\n\t\t\tposition.column,\n\t\t\t{ characterCountDelta: 0, leadingLineContent: model.getLineContent(position.lineNumber).substring(0, position.column - 1) },\n\t\t\tWordDistance.None, EditorOptions.suggest.defaultValue, EditorOptions.snippetSuggestions.defaultValue, undefined\n\t\t);\n\n\t\treturn result;\n\t}\n\n\ttest('snippet completions - simple', async function () {\n\n\t\tconst provider = new SnippetCompletionProvider(languageService, snippetService, disposables.add(new TestLanguageConfigurationService()));\n\t\tconst model = disposables.add(instantiateTextModel(instantiationService, '', 'fooLang'));\n\n\t\tawait provider.provideCompletionItems(model, new Position(1, 1), defaultCompletionContext)!.then(result => {\n\t\t\tassert.strictEqual(result.incomplete, undefined);\n\t\t\tassert.strictEqual(result.suggestions.length, 2);\n\t\t});\n\n\t\tconst completions = await asCompletionModel(model, new Position(1, 1), provider);\n\t\tassert.strictEqual(completions.items.length, 2);\n\t});\n\n\ttest('snippet completions - simple 2', async function () {\n\n\t\tconst provider = new SnippetCompletionProvider(languageService, snippetService, disposables.add(new TestLanguageConfigurationService()));\n\t\tconst model = disposables.add(instantiateTextModel(instantiationService, 'hello ', 'fooLang'));\n\n\t\tawait provider.provideCompletionItems(model, new Position(1, 6) /* hello| */, defaultCompletionContext)!.then(result => {\n\t\t\tassert.strictEqual(result.incomplete, undefined);\n\t\t\tassert.strictEqual(result.suggestions.length, 0);\n\t\t});\n\n\t\tawait provider.provideCompletionItems(model, new Position(1, 7) /* hello |*/, defaultCompletionContext)!.then(result => {\n\t\t\tassert.strictEqual(result.incomplete, undefined);\n\t\t\tassert.strictEqual(result.suggestions.length, 2);\n\t\t});\n\n\t\tconst completions1 = await asCompletionModel(model, new Position(1, 6)/* hello| */, provider);\n\t\tassert.strictEqual(completions1.items.length, 0);\n\n\t\tconst completions2 = await asCompletionModel(model, new Position(1, 7)/* hello |*/, provider);\n\t\tassert.strictEqual(completions2.items.length, 2);\n\t});\n\n\ttest('snippet completions - with prefix', async function () {\n\n\t\tconst provider = new SnippetCompletionProvider(languageService, snippetService, disposables.add(new TestLanguageConfigurationService()));\n\t\tconst model = disposables.add(instantiateTextModel(instantiationService, 'bar', 'fooLang'));\n\n\t\tawait provider.provideCompletionItems(model, new Position(1, 4), defaultCompletionContext)!.then(result => {\n\t\t\tassert.strictEqual(result.incomplete, undefined);\n\t\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\t\tassert.deepStrictEqual(result.suggestions[0].label, {\n\t\t\t\tlabel: 'bar',\n\t\t\t\tdescription: 'barTest'\n\t\t\t});\n\t\t\tassert.strictEqual((result.suggestions[0].range as any).insert.startColumn, 1);\n\t\t\tassert.strictEqual(result.suggestions[0].insertText, 'barCodeSnippet');\n\t\t});\n\n\t\tconst completions = await asCompletionModel(model, new Position(1, 4), provider);\n\t\tassert.strictEqual(completions.items.length, 1);\n\t\tassert.deepStrictEqual(completions.items[0].completion.label, {\n\t\t\tlabel: 'bar',\n\t\t\tdescription: 'barTest'\n\t\t});\n\t\tassert.strictEqual((completions.items[0].completion.range as any).insert.startColumn, 1);\n\t\tassert.strictEqual(completions.items[0].completion.insertText, 'barCodeSnippet');\n\t});\n\n\ttest('snippet completions - with different prefixes', async function () {\n\t\tsnippetService = new SimpleSnippetService([new Snippet(\n\t\t\tfalse,\n\t\t\t['fooLang'],\n\t\t\t'barTest',\n\t\t\t'bar',\n\t\t\t'',\n\t\t\t's1',\n\t\t\t'',\n\t\t\tSnippetSource.User,\n\t\t\tgenerateUuid()\n\t\t), new Snippet(\n\t\t\tfalse,\n\t\t\t['fooLang'],\n\t\t\t'name',\n\t\t\t'bar-bar',\n\t\t\t'',\n\t\t\t's2',\n\t\t\t'',\n\t\t\tSnippetSource.User,\n\t\t\tgenerateUuid()\n\t\t)]);\n\n\t\tconst provider = new SnippetCompletionProvider(languageService, snippetService, disposables.add(new TestLanguageConfigurationService()));\n\t\tconst model = disposables.add(instantiateTextModel(instantiationService, 'bar-bar', 'fooLang'));\n\n\t\t{\n\t\t\tawait provider.provideCompletionItems(model, new Position(1, 3), defaultCompletionContext)!.then(result => {\n\t\t\t\tassert.strictEqual(result.incomplete, undefined);\n\t\t\t\tassert.strictEqual(result.suggestions.length, 2);\n\t\t\t\tassert.deepStrictEqual(result.suggestions[0].label, {\n\t\t\t\t\tlabel: 'bar',\n\t\t\t\t\tdescription: 'barTest'\n\t\t\t\t});\n\t\t\t\tassert.strictEqual(result.suggestions[0].insertText, 's1');\n\t\t\t\tassert.strictEqual((result.suggestions[0].range as CompletionItemRanges).insert.startColumn, 1);\n\t\t\t\tassert.deepStrictEqual(result.suggestions[1].label, {\n\t\t\t\t\tlabel: 'bar-bar',\n\t\t\t\t\tdescription: 'name'\n\t\t\t\t});\n\t\t\t\tassert.strictEqual(result.suggestions[1].insertText, 's2');\n\t\t\t\tassert.strictEqual((result.suggestions[1].range as CompletionItemRanges).insert.startColumn, 1);\n\t\t\t});\n\n\t\t\tconst completions = await asCompletionModel(model, new Position(1, 3), provider);\n\t\t\tassert.strictEqual(completions.items.length, 2);\n\t\t\tassert.deepStrictEqual(completions.items[0].completion.label, {\n\t\t\t\tlabel: 'bar',\n\t\t\t\tdescription: 'barTest'\n\t\t\t});\n\t\t\tassert.strictEqual(completions.items[0].completion.insertText, 's1');\n\t\t\tassert.strictEqual((completions.items[0].completion.range as CompletionItemRanges).insert.startColumn, 1);\n\t\t\tassert.deepStrictEqual(completions.items[1].completion.label, {\n\t\t\t\tlabel: 'bar-bar',\n\t\t\t\tdescription: 'name'\n\t\t\t});\n\t\t\tassert.strictEqual(completions.items[1].completion.insertText, 's2');\n\t\t\tassert.strictEqual((completions.items[1].completion.range as CompletionItemRanges).insert.startColumn, 1);\n\t\t}\n\n\t\t{\n\t\t\tawait provider.provideCompletionItems(model, new Position(1, 5), defaultCompletionContext)!.then(result => {\n\t\t\t\tassert.strictEqual(result.incomplete, undefined);\n\t\t\t\tassert.strictEqual(result.suggestions.length, 2);\n\n\t\t\t\tconst [first, second] = result.suggestions;\n\n\t\t\t\tassert.deepStrictEqual(first.label, {\n\t\t\t\t\tlabel: 'bar',\n\t\t\t\t\tdescription: 'barTest'\n\t\t\t\t});\n\t\t\t\tassert.strictEqual(first.insertText, 's1');\n\t\t\t\tassert.strictEqual((first.range as CompletionItemRanges).insert.startColumn, 5);\n\n\t\t\t\tassert.deepStrictEqual(second.label, {\n\t\t\t\t\tlabel: 'bar-bar',\n\t\t\t\t\tdescription: 'name'\n\t\t\t\t});\n\t\t\t\tassert.strictEqual(second.insertText, 's2');\n\t\t\t\tassert.strictEqual((second.range as CompletionItemRanges).insert.startColumn, 1);\n\t\t\t});\n\n\t\t\tconst completions = await asCompletionModel(model, new Position(1, 5), provider);\n\t\t\tassert.strictEqual(completions.items.length, 2);\n\n\t\t\tconst [first, second] = completions.items.map(i => i.completion);\n\n\t\t\tassert.deepStrictEqual(first.label, {\n\t\t\t\tlabel: 'bar-bar',\n\t\t\t\tdescription: 'name'\n\t\t\t});\n\t\t\tassert.strictEqual(first.insertText, 's2');\n\t\t\tassert.strictEqual((first.range as CompletionItemRanges).insert.startColumn, 1);\n\n\t\t\tassert.deepStrictEqual(second.label, {\n\t\t\t\tlabel: 'bar',\n\t\t\t\tdescription: 'barTest'\n\t\t\t});\n\t\t\tassert.strictEqual(second.insertText, 's1');\n\t\t\tassert.strictEqual((second.range as CompletionItemRanges).insert.startColumn, 5);\n\t\t}\n\n\t\t{\n\t\t\tawait provider.provideCompletionItems(model, new Position(1, 6), defaultCompletionContext)!.then(result => {\n\t\t\t\tassert.strictEqual(result.incomplete, undefined);\n\t\t\t\tassert.strictEqual(result.suggestions.length, 2);\n\t\t\t\tassert.deepStrictEqual(result.suggestions[0].label, {\n\t\t\t\t\tlabel: 'bar',\n\t\t\t\t\tdescription: 'barTest'\n\t\t\t\t});\n\t\t\t\tassert.strictEqual(result.suggestions[0].insertText, 's1');\n\t\t\t\tassert.strictEqual((result.suggestions[0].range as any).insert.startColumn, 5);\n\t\t\t\tassert.deepStrictEqual(result.suggestions[1].label, {\n\t\t\t\t\tlabel: 'bar-bar',\n\t\t\t\t\tdescription: 'name'\n\t\t\t\t});\n\t\t\t\tassert.strictEqual(result.suggestions[1].insertText, 's2');\n\t\t\t\tassert.strictEqual((result.suggestions[1].range as any).insert.startColumn, 1);\n\t\t\t});\n\n\t\t\tconst completions = await asCompletionModel(model, new Position(1, 6), provider);\n\t\t\tassert.strictEqual(completions.items.length, 2);\n\t\t\tassert.deepStrictEqual(completions.items[0].completion.label, {\n\t\t\t\tlabel: 'bar-bar',\n\t\t\t\tdescription: 'name'\n\t\t\t});\n\t\t\tassert.strictEqual(completions.items[0].completion.insertText, 's2');\n\t\t\tassert.strictEqual((completions.items[0].completion.range as any).insert.startColumn, 1);\n\t\t\tassert.deepStrictEqual(completions.items[1].completion.label, {\n\t\t\t\tlabel: 'bar',\n\t\t\t\tdescription: 'barTest'\n\t\t\t});\n\t\t\tassert.strictEqual(completions.items[1].completion.insertText, 's1');\n\t\t\tassert.strictEqual((completions.items[1].completion.range as any).insert.startColumn, 5);\n\t\t}\n\t});\n\n\ttest('Cannot use \"<?php\" as user snippet prefix anymore, #26275', async function () {\n\t\tsnippetService = new SimpleSnippetService([new Snippet(\n\t\t\tfalse,\n\t\t\t['fooLang'],\n\t\t\t'',\n\t\t\t'<?php',\n\t\t\t'',\n\t\t\t'insert me',\n\t\t\t'',\n\t\t\tSnippetSource.User,\n\t\t\tgenerateUuid()\n\t\t)]);\n\n\t\tconst provider = new SnippetCompletionProvider(languageService, snippetService, disposables.add(new TestLanguageConfigurationService()));\n\n\t\tlet model = instantiateTextModel(instantiationService, '\\t<?php', 'fooLang');\n\t\tawait provider.provideCompletionItems(model, new Position(1, 7), defaultCompletionContext)!.then(result => {\n\t\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\t});\n\t\tconst completions1 = await asCompletionModel(model, new Position(1, 7), provider);\n\t\tassert.strictEqual(completions1.items.length, 1);\n\n\t\tmodel.dispose();\n\t\tmodel = instantiateTextModel(instantiationService, '\\t<?', 'fooLang');\n\t\tawait provider.provideCompletionItems(model, new Position(1, 4), defaultCompletionContext).then(result => {\n\t\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\t\tassert.strictEqual((result.suggestions[0].range as any).insert.startColumn, 2);\n\t\t});\n\t\tconst completions2 = await asCompletionModel(model, new Position(1, 4), provider);\n\t\tassert.strictEqual(completions2.items.length, 1);\n\t\tassert.strictEqual((completions2.items[0].completion.range as any).insert.startColumn, 2);\n\n\t\tmodel.dispose();\n\t\tmodel = instantiateTextModel(instantiationService, 'a<?', 'fooLang');\n\t\tawait provider.provideCompletionItems(model, new Position(1, 4), defaultCompletionContext)!.then(result => {\n\t\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\t\tassert.strictEqual((result.suggestions[0].range as any).insert.startColumn, 2);\n\t\t});\n\t\tconst completions3 = await asCompletionModel(model, new Position(1, 4), provider);\n\t\tassert.strictEqual(completions3.items.length, 1);\n\t\tassert.strictEqual((completions3.items[0].completion.range as any).insert.startColumn, 2);\n\t\tmodel.dispose();\n\t});\n\n\ttest('No user snippets in suggestions, when inside the code, #30508', async function () {\n\n\t\tsnippetService = new SimpleSnippetService([new Snippet(\n\t\t\tfalse,\n\t\t\t['fooLang'],\n\t\t\t'',\n\t\t\t'foo',\n\t\t\t'',\n\t\t\t'<foo>$0</foo>',\n\t\t\t'',\n\t\t\tSnippetSource.User,\n\t\t\tgenerateUuid()\n\t\t)]);\n\n\t\tconst provider = new SnippetCompletionProvider(languageService, snippetService, disposables.add(new TestLanguageConfigurationService()));\n\n\t\tconst model = disposables.add(instantiateTextModel(instantiationService, '<head>\\n\\t\\n>/head>', 'fooLang'));\n\t\tawait provider.provideCompletionItems(model, new Position(1, 1), defaultCompletionContext)!.then(result => {\n\t\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\t});\n\t\tconst completions = await asCompletionModel(model, new Position(1, 1), provider);\n\t\tassert.strictEqual(completions.items.length, 1);\n\n\n\t\tawait provider.provideCompletionItems(model, new Position(2, 2), defaultCompletionContext).then(result => {\n\t\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\t});\n\t\tconst completions2 = await asCompletionModel(model, new Position(2, 2), provider);\n\t\tassert.strictEqual(completions2.items.length, 1);\n\n\t});\n\n\ttest('SnippetSuggest - ensure extension snippets come last ', async function () {\n\t\tsnippetService = new SimpleSnippetService([new Snippet(\n\t\t\tfalse,\n\t\t\t['fooLang'],\n\t\t\t'second',\n\t\t\t'second',\n\t\t\t'',\n\t\t\t'second',\n\t\t\t'',\n\t\t\tSnippetSource.Extension,\n\t\t\tgenerateUuid()\n\t\t), new Snippet(\n\t\t\tfalse,\n\t\t\t['fooLang'],\n\t\t\t'first',\n\t\t\t'first',\n\t\t\t'',\n\t\t\t'first',\n\t\t\t'',\n\t\t\tSnippetSource.User,\n\t\t\tgenerateUuid()\n\t\t)]);\n\n\t\tconst provider = new SnippetCompletionProvider(languageService, snippetService, disposables.add(new TestLanguageConfigurationService()));\n\n\t\tconst model = disposables.add(instantiateTextModel(instantiationService, '', 'fooLang'));\n\t\tawait provider.provideCompletionItems(model, new Position(1, 1), defaultCompletionContext)!.then(result => {\n\t\t\tassert.strictEqual(result.suggestions.length, 2);\n\t\t\tconst [first, second] = result.suggestions;\n\t\t\tassert.deepStrictEqual(first.label, {\n\t\t\t\tlabel: 'first',\n\t\t\t\tdescription: 'first'\n\t\t\t});\n\t\t\tassert.deepStrictEqual(second.label, {\n\t\t\t\tlabel: 'second',\n\t\t\t\tdescription: 'second'\n\t\t\t});\n\t\t});\n\n\t\tconst completions = await asCompletionModel(model, new Position(1, 1), provider);\n\t\tassert.strictEqual(completions.items.length, 2);\n\t\tconst [first, second] = completions.items;\n\t\tassert.deepStrictEqual(first.completion.label, {\n\t\t\tlabel: 'first',\n\t\t\tdescription: 'first'\n\t\t});\n\t\tassert.deepStrictEqual(second.completion.label, {\n\t\t\tlabel: 'second',\n\t\t\tdescription: 'second'\n\t\t});\n\t});\n\n\ttest('Dash in snippets prefix broken #53945', async function () {\n\t\tsnippetService = new SimpleSnippetService([new Snippet(\n\t\t\tfalse,\n\t\t\t['fooLang'],\n\t\t\t'p-a',\n\t\t\t'p-a',\n\t\t\t'',\n\t\t\t'second',\n\t\t\t'',\n\t\t\tSnippetSource.User,\n\t\t\tgenerateUuid()\n\t\t)]);\n\t\tconst provider = new SnippetCompletionProvider(languageService, snippetService, disposables.add(new TestLanguageConfigurationService()));\n\n\t\tconst model = disposables.add(instantiateTextModel(instantiationService, 'p-', 'fooLang'));\n\n\t\tlet result = await provider.provideCompletionItems(model, new Position(1, 2), defaultCompletionContext)!;\n\t\tlet completions = await asCompletionModel(model, new Position(1, 2), provider);\n\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\tassert.strictEqual(completions.items.length, 1);\n\n\t\tresult = await provider.provideCompletionItems(model, new Position(1, 3), defaultCompletionContext)!;\n\t\tcompletions = await asCompletionModel(model, new Position(1, 3), provider);\n\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\tassert.strictEqual(completions.items.length, 1);\n\n\t\tresult = await provider.provideCompletionItems(model, new Position(1, 3), defaultCompletionContext)!;\n\t\tcompletions = await asCompletionModel(model, new Position(1, 3), provider);\n\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\tassert.strictEqual(completions.items.length, 1);\n\t});\n\n\ttest('No snippets suggestion on long lines beyond character 100 #58807', async function () {\n\t\tsnippetService = new SimpleSnippetService([new Snippet(\n\t\t\tfalse,\n\t\t\t['fooLang'],\n\t\t\t'bug',\n\t\t\t'bug',\n\t\t\t'',\n\t\t\t'second',\n\t\t\t'',\n\t\t\tSnippetSource.User,\n\t\t\tgenerateUuid()\n\t\t)]);\n\n\t\tconst provider = new SnippetCompletionProvider(languageService, snippetService, disposables.add(new TestLanguageConfigurationService()));\n\n\t\tconst model = disposables.add(instantiateTextModel(instantiationService, 'Thisisaverylonglinegoingwithmore100bcharactersandthismakesintellisensebecomea Thisisaverylonglinegoingwithmore100bcharactersandthismakesintellisensebecomea b', 'fooLang'));\n\t\tconst result = await provider.provideCompletionItems(model, new Position(1, 158), defaultCompletionContext)!;\n\t\tconst completions = await asCompletionModel(model, new Position(1, 158), provider);\n\n\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\tassert.strictEqual(completions.items.length, 1);\n\t});\n\n\ttest('Type colon will trigger snippet #60746', async function () {\n\t\tsnippetService = new SimpleSnippetService([new Snippet(\n\t\t\tfalse,\n\t\t\t['fooLang'],\n\t\t\t'bug',\n\t\t\t'bug',\n\t\t\t'',\n\t\t\t'second',\n\t\t\t'',\n\t\t\tSnippetSource.User,\n\t\t\tgenerateUuid()\n\t\t)]);\n\n\t\tconst provider = new SnippetCompletionProvider(languageService, snippetService, disposables.add(new TestLanguageConfigurationService()));\n\n\t\tconst model = disposables.add(instantiateTextModel(instantiationService, ':', 'fooLang'));\n\t\tconst result = await provider.provideCompletionItems(model, new Position(1, 2), defaultCompletionContext)!;\n\t\tassert.strictEqual(result.suggestions.length, 0);\n\n\t\tconst completions = await asCompletionModel(model, new Position(1, 2), provider);\n\t\tassert.strictEqual(completions.items.length, 0);\n\t});\n\n\ttest('substring of prefix can\\'t trigger snippet #60737', async function () {\n\t\tsnippetService = new SimpleSnippetService([new Snippet(\n\t\t\tfalse,\n\t\t\t['fooLang'],\n\t\t\t'mytemplate',\n\t\t\t'mytemplate',\n\t\t\t'',\n\t\t\t'second',\n\t\t\t'',\n\t\t\tSnippetSource.User,\n\t\t\tgenerateUuid()\n\t\t)]);\n\n\t\tconst provider = new SnippetCompletionProvider(languageService, snippetService, disposables.add(new TestLanguageConfigurationService()));\n\n\t\tconst model = disposables.add(instantiateTextModel(instantiationService, 'template', 'fooLang'));\n\t\tconst result = await provider.provideCompletionItems(model, new Position(1, 9), defaultCompletionContext);\n\n\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\tassert.deepStrictEqual(result.suggestions[0].label, {\n\t\t\tlabel: 'mytemplate',\n\t\t\tdescription: 'mytemplate'\n\t\t});\n\n\t\tconst completions = await asCompletionModel(model, new Position(1, 9), provider);\n\t\tassert.strictEqual(completions.items.length, 0);\n\t});\n\n\ttest('No snippets suggestion beyond character 100 if not at end of line #60247', async function () {\n\t\tsnippetService = new SimpleSnippetService([new Snippet(\n\t\t\tfalse,\n\t\t\t['fooLang'],\n\t\t\t'bug',\n\t\t\t'bug',\n\t\t\t'',\n\t\t\t'second',\n\t\t\t'',\n\t\t\tSnippetSource.User,\n\t\t\tgenerateUuid()\n\t\t)]);\n\n\t\tconst provider = new SnippetCompletionProvider(languageService, snippetService, disposables.add(new TestLanguageConfigurationService()));\n\n\t\tconst model = disposables.add(instantiateTextModel(instantiationService, 'Thisisaverylonglinegoingwithmore100bcharactersandthismakesintellisensebecomea Thisisaverylonglinegoingwithmore100bcharactersandthismakesintellisensebecomea b text_after_b', 'fooLang'));\n\n\t\tconst result = await provider.provideCompletionItems(model, new Position(1, 158), defaultCompletionContext)!;\n\t\tassert.strictEqual(result.suggestions.length, 1);\n\n\t\tconst completions = await asCompletionModel(model, new Position(1, 158), provider);\n\t\tassert.strictEqual(completions.items.length, 1);\n\t});\n\n\ttest('issue #61296: VS code freezes when editing CSS fi`le with emoji', async function () {\n\t\tconst languageConfigurationService = disposables.add(new TestLanguageConfigurationService());\n\t\tdisposables.add(languageConfigurationService.register('fooLang', {\n\t\t\twordPattern: /(#?-?\\d*\\.\\d\\w*%?)|(::?[\\w-]*(?=[^,{;]*[,{]))|(([@#.!])?[\\w\\-?]+%?|[@#!.])/g\n\t\t}));\n\n\t\tsnippetService = new SimpleSnippetService([new Snippet(\n\t\t\tfalse,\n\t\t\t['fooLang'],\n\t\t\t'bug',\n\t\t\t'-a-bug',\n\t\t\t'',\n\t\t\t'second',\n\t\t\t'',\n\t\t\tSnippetSource.User,\n\t\t\tgenerateUuid()\n\t\t)]);\n\n\t\tconst provider = new SnippetCompletionProvider(languageService, snippetService, languageConfigurationService);\n\n\t\tconst model = disposables.add(instantiateTextModel(instantiationService, '.\uD83D\uDC37-a-b', 'fooLang'));\n\n\t\tconst result = await provider.provideCompletionItems(model, new Position(1, 8), defaultCompletionContext)!;\n\t\tassert.strictEqual(result.suggestions.length, 1);\n\n\t\tconst completions = await asCompletionModel(model, new Position(1, 8), provider);\n\t\tassert.strictEqual(completions.items.length, 1);\n\t});\n\n\ttest('No snippets shown when triggering completions at whitespace on line that already has text #62335', async function () {\n\t\tsnippetService = new SimpleSnippetService([new Snippet(\n\t\t\tfalse,\n\t\t\t['fooLang'],\n\t\t\t'bug',\n\t\t\t'bug',\n\t\t\t'',\n\t\t\t'second',\n\t\t\t'',\n\t\t\tSnippetSource.User,\n\t\t\tgenerateUuid()\n\t\t)]);\n\n\t\tconst provider = new SnippetCompletionProvider(languageService, snippetService, disposables.add(new TestLanguageConfigurationService()));\n\n\t\tconst model = disposables.add(instantiateTextModel(instantiationService, 'a ', 'fooLang'));\n\n\t\tconst result = await provider.provideCompletionItems(model, new Position(1, 3), defaultCompletionContext)!;\n\t\tassert.strictEqual(result.suggestions.length, 1);\n\n\t\tconst completions = await asCompletionModel(model, new Position(1, 3), provider);\n\t\tassert.strictEqual(completions.items.length, 1);\n\t});\n\n\ttest('Snippet prefix with special chars and numbers does not work #62906', async function () {\n\t\tsnippetService = new SimpleSnippetService([new Snippet(\n\t\t\tfalse,\n\t\t\t['fooLang'],\n\t\t\t'noblockwdelay',\n\t\t\t'<<',\n\t\t\t'',\n\t\t\t'<= #dly\"',\n\t\t\t'',\n\t\t\tSnippetSource.User,\n\t\t\tgenerateUuid()\n\t\t), new Snippet(\n\t\t\tfalse,\n\t\t\t['fooLang'],\n\t\t\t'noblockwdelay',\n\t\t\t'11',\n\t\t\t'',\n\t\t\t'eleven',\n\t\t\t'',\n\t\t\tSnippetSource.User,\n\t\t\tgenerateUuid()\n\t\t)]);\n\n\t\tconst provider = new SnippetCompletionProvider(languageService, snippetService, disposables.add(new TestLanguageConfigurationService()));\n\n\t\tlet model = instantiateTextModel(instantiationService, ' <', 'fooLang');\n\n\t\tlet result = await provider.provideCompletionItems(model, new Position(1, 3), defaultCompletionContext)!;\n\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\tlet [first] = result.suggestions;\n\t\tassert.strictEqual((first.range as any).insert.startColumn, 2);\n\n\t\tlet completions = await asCompletionModel(model, new Position(1, 3), provider);\n\t\tassert.strictEqual(completions.items.length, 1);\n\t\tassert.strictEqual(completions.items[0].editStart.column, 2);\n\n\t\tmodel.dispose();\n\t\tmodel = instantiateTextModel(instantiationService, '1', 'fooLang');\n\t\tresult = await provider.provideCompletionItems(model, new Position(1, 2), defaultCompletionContext)!;\n\t\tcompletions = await asCompletionModel(model, new Position(1, 2), provider);\n\n\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\t[first] = result.suggestions;\n\t\tassert.strictEqual((first.range as any).insert.startColumn, 1);\n\t\tassert.strictEqual(completions.items.length, 1);\n\t\tassert.strictEqual(completions.items[0].editStart.column, 1);\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('Snippet replace range', async function () {\n\t\tsnippetService = new SimpleSnippetService([new Snippet(\n\t\t\tfalse,\n\t\t\t['fooLang'],\n\t\t\t'notWordTest',\n\t\t\t'not word',\n\t\t\t'',\n\t\t\t'not word snippet',\n\t\t\t'',\n\t\t\tSnippetSource.User,\n\t\t\tgenerateUuid()\n\t\t)]);\n\n\t\tconst provider = new SnippetCompletionProvider(languageService, snippetService, disposables.add(new TestLanguageConfigurationService()));\n\n\t\tlet model = instantiateTextModel(instantiationService, 'not wordFoo bar', 'fooLang');\n\n\t\tlet result = await provider.provideCompletionItems(model, new Position(1, 3), defaultCompletionContext)!;\n\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\tlet [first] = result.suggestions;\n\t\tassert.strictEqual((first.range as any).insert.endColumn, 3);\n\t\tassert.strictEqual((first.range as any).replace.endColumn, 9);\n\n\t\tlet completions = await asCompletionModel(model, new Position(1, 3), provider);\n\t\tassert.strictEqual(completions.items.length, 1);\n\t\tassert.strictEqual(completions.items[0].editInsertEnd.column, 3);\n\t\tassert.strictEqual(completions.items[0].editReplaceEnd.column, 9);\n\n\t\tmodel.dispose();\n\t\tmodel = instantiateTextModel(instantiationService, 'not woFoo bar', 'fooLang');\n\t\tresult = await provider.provideCompletionItems(model, new Position(1, 3), defaultCompletionContext)!;\n\n\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\t[first] = result.suggestions;\n\t\tassert.strictEqual((first.range as any).insert.endColumn, 3);\n\t\tassert.strictEqual((first.range as any).replace.endColumn, 3);\n\n\t\tcompletions = await asCompletionModel(model, new Position(1, 3), provider);\n\t\tassert.strictEqual(completions.items.length, 1);\n\t\tassert.strictEqual(completions.items[0].editInsertEnd.column, 3);\n\t\tassert.strictEqual(completions.items[0].editReplaceEnd.column, 3);\n\n\t\tmodel.dispose();\n\t\tmodel = instantiateTextModel(instantiationService, 'not word', 'fooLang');\n\t\tresult = await provider.provideCompletionItems(model, new Position(1, 1), defaultCompletionContext)!;\n\n\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\t[first] = result.suggestions;\n\t\tassert.strictEqual((first.range as any).insert.endColumn, 1);\n\t\tassert.strictEqual((first.range as any).replace.endColumn, 9);\n\n\t\tcompletions = await asCompletionModel(model, new Position(1, 1), provider);\n\t\tassert.strictEqual(completions.items.length, 1);\n\t\tassert.strictEqual(completions.items[0].editInsertEnd.column, 1);\n\t\tassert.strictEqual(completions.items[0].editReplaceEnd.column, 9);\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('Snippet replace-range incorrect #108894', async function () {\n\n\t\tsnippetService = new SimpleSnippetService([new Snippet(\n\t\t\tfalse,\n\t\t\t['fooLang'],\n\t\t\t'eng',\n\t\t\t'eng',\n\t\t\t'',\n\t\t\t'<span></span>',\n\t\t\t'',\n\t\t\tSnippetSource.User,\n\t\t\tgenerateUuid()\n\t\t)]);\n\n\t\tconst provider = new SnippetCompletionProvider(languageService, snippetService, disposables.add(new TestLanguageConfigurationService()));\n\n\t\tconst model = instantiateTextModel(instantiationService, 'filler e KEEP ng filler', 'fooLang');\n\t\tconst result = await provider.provideCompletionItems(model, new Position(1, 9), defaultCompletionContext)!;\n\t\tconst completions = await asCompletionModel(model, new Position(1, 9), provider);\n\n\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\tconst [first] = result.suggestions;\n\t\tassert.strictEqual((first.range as any).insert.endColumn, 9);\n\t\tassert.strictEqual((first.range as any).replace.endColumn, 9);\n\n\t\tassert.strictEqual(completions.items.length, 1);\n\t\tassert.strictEqual(completions.items[0].editInsertEnd.column, 9);\n\t\tassert.strictEqual(completions.items[0].editReplaceEnd.column, 9);\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('Snippet will replace auto-closing pair if specified in prefix', async function () {\n\t\tconst languageConfigurationService = disposables.add(new TestLanguageConfigurationService());\n\t\tdisposables.add(languageConfigurationService.register('fooLang', {\n\t\t\tbrackets: [\n\t\t\t\t['{', '}'],\n\t\t\t\t['[', ']'],\n\t\t\t\t['(', ')'],\n\t\t\t]\n\t\t}));\n\n\t\tsnippetService = new SimpleSnippetService([new Snippet(\n\t\t\tfalse,\n\t\t\t['fooLang'],\n\t\t\t'PSCustomObject',\n\t\t\t'[PSCustomObject]',\n\t\t\t'',\n\t\t\t'[PSCustomObject] @{ Key = Value }',\n\t\t\t'',\n\t\t\tSnippetSource.User,\n\t\t\tgenerateUuid()\n\t\t)]);\n\n\t\tconst provider = new SnippetCompletionProvider(languageService, snippetService, languageConfigurationService);\n\n\t\tconst model = instantiateTextModel(instantiationService, '[psc]', 'fooLang');\n\t\tconst result = await provider.provideCompletionItems(model, new Position(1, 5), defaultCompletionContext)!;\n\t\tconst completions = await asCompletionModel(model, new Position(1, 5), provider);\n\n\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\tconst [first] = result.suggestions;\n\t\tassert.strictEqual((first.range as any).insert.endColumn, 5);\n\t\t// This is 6 because it should eat the `]` at the end of the text even if cursor is before it\n\t\tassert.strictEqual((first.range as any).replace.endColumn, 6);\n\n\t\tassert.strictEqual(completions.items.length, 1);\n\t\tassert.strictEqual(completions.items[0].editInsertEnd.column, 5);\n\t\tassert.strictEqual(completions.items[0].editReplaceEnd.column, 6);\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('Leading whitespace in snippet prefix #123860', async function () {\n\n\t\tsnippetService = new SimpleSnippetService([new Snippet(\n\t\t\tfalse,\n\t\t\t['fooLang'],\n\t\t\t'cite-name',\n\t\t\t' cite',\n\t\t\t'',\n\t\t\t'~\\\\cite{$CLIPBOARD}',\n\t\t\t'',\n\t\t\tSnippetSource.User,\n\t\t\tgenerateUuid()\n\t\t)]);\n\n\t\tconst provider = new SnippetCompletionProvider(languageService, snippetService, disposables.add(new TestLanguageConfigurationService()));\n\n\t\tconst model = instantiateTextModel(instantiationService, ' ci', 'fooLang');\n\t\tconst result = await provider.provideCompletionItems(model, new Position(1, 4), defaultCompletionContext)!;\n\t\tconst completions = await asCompletionModel(model, new Position(1, 4), provider);\n\n\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\tconst [first] = result.suggestions;\n\t\tassert.strictEqual((<CompletionItemLabel>first.label).label, ' cite');\n\t\tassert.strictEqual((<CompletionItemRanges>first.range).insert.startColumn, 1);\n\n\t\tassert.strictEqual(completions.items.length, 1);\n\t\tassert.strictEqual(completions.items[0].textLabel, ' cite');\n\t\tassert.strictEqual(completions.items[0].editStart.column, 1);\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('still show suggestions in string when disable string suggestion #136611', async function () {\n\n\t\tsnippetService = new SimpleSnippetService([\n\t\t\tnew Snippet(false, ['fooLang'], 'aaa', 'aaa', '', 'value', '', SnippetSource.User, generateUuid()),\n\t\t\tnew Snippet(false, ['fooLang'], 'bbb', 'bbb', '', 'value', '', SnippetSource.User, generateUuid()),\n\t\t\t// new Snippet(['fooLang'], '\\'ccc', '\\'ccc', '', 'value', '', SnippetSource.User, generateUuid())\n\t\t]);\n\n\t\tconst provider = new SnippetCompletionProvider(languageService, snippetService, disposables.add(new TestLanguageConfigurationService()));\n\n\t\tconst model = instantiateTextModel(instantiationService, '\\'\\'', 'fooLang');\n\t\tconst result = await provider.provideCompletionItems(\n\t\t\tmodel,\n\t\t\tnew Position(1, 2),\n\t\t\t{ triggerKind: CompletionTriggerKind.TriggerCharacter, triggerCharacter: '\\'' }\n\t\t)!;\n\n\t\tassert.strictEqual(result.suggestions.length, 0);\n\t\tmodel.dispose();\n\n\t});\n\n\ttest('still show suggestions in string when disable string suggestion #136611 (part 2)', async function () {\n\n\t\tsnippetService = new SimpleSnippetService([\n\t\t\tnew Snippet(false, ['fooLang'], 'aaa', 'aaa', '', 'value', '', SnippetSource.User, generateUuid()),\n\t\t\tnew Snippet(false, ['fooLang'], 'bbb', 'bbb', '', 'value', '', SnippetSource.User, generateUuid()),\n\t\t\tnew Snippet(false, ['fooLang'], '\\'ccc', '\\'ccc', '', 'value', '', SnippetSource.User, generateUuid())\n\t\t]);\n\n\t\tconst provider = new SnippetCompletionProvider(languageService, snippetService, disposables.add(new TestLanguageConfigurationService()));\n\n\t\tconst model = instantiateTextModel(instantiationService, '\\'\\'', 'fooLang');\n\n\t\tconst result = await provider.provideCompletionItems(\n\t\t\tmodel,\n\t\t\tnew Position(1, 2),\n\t\t\t{ triggerKind: CompletionTriggerKind.TriggerCharacter, triggerCharacter: '\\'' }\n\t\t)!;\n\n\t\tassert.strictEqual(result.suggestions.length, 1);\n\n\t\tconst completions = await asCompletionModel(model, new Position(1, 2), provider, { triggerKind: CompletionTriggerKind.TriggerCharacter, triggerCharacter: '\\'' });\n\t\tassert.strictEqual(completions.items.length, 1);\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('Snippet suggestions are too eager #138707 (word)', async function () {\n\t\tsnippetService = new SimpleSnippetService([\n\t\t\tnew Snippet(false, ['fooLang'], 'tys', 'tys', '', 'value', '', SnippetSource.User, generateUuid()),\n\t\t\tnew Snippet(false, ['fooLang'], 'hell_or_tell', 'hell_or_tell', '', 'value', '', SnippetSource.User, generateUuid()),\n\t\t\tnew Snippet(false, ['fooLang'], '^y', '^y', '', 'value', '', SnippetSource.User, generateUuid()),\n\t\t]);\n\n\t\tconst provider = new SnippetCompletionProvider(languageService, snippetService, disposables.add(new TestLanguageConfigurationService()));\n\t\tconst model = instantiateTextModel(instantiationService, '\\'hellot\\'', 'fooLang');\n\n\t\tconst result = await provider.provideCompletionItems(\n\t\t\tmodel,\n\t\t\tnew Position(1, 8),\n\t\t\t{ triggerKind: CompletionTriggerKind.Invoke }\n\t\t)!;\n\n\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\tassert.strictEqual((<SnippetCompletion>result.suggestions[0]).label.label, 'hell_or_tell');\n\n\t\tconst completions = await asCompletionModel(model, new Position(1, 8), provider, { triggerKind: CompletionTriggerKind.Invoke });\n\t\tassert.strictEqual(completions.items.length, 1);\n\t\tassert.strictEqual(completions.items[0].textLabel, 'hell_or_tell');\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('Snippet suggestions are too eager #138707 (no word)', async function () {\n\t\tsnippetService = new SimpleSnippetService([\n\t\t\tnew Snippet(false, ['fooLang'], 'tys', 'tys', '', 'value', '', SnippetSource.User, generateUuid()),\n\t\t\tnew Snippet(false, ['fooLang'], 't', 't', '', 'value', '', SnippetSource.User, generateUuid()),\n\t\t\tnew Snippet(false, ['fooLang'], '^y', '^y', '', 'value', '', SnippetSource.User, generateUuid()),\n\t\t]);\n\n\t\tconst provider = new SnippetCompletionProvider(languageService, snippetService, disposables.add(new TestLanguageConfigurationService()));\n\t\tconst model = instantiateTextModel(instantiationService, ')*&^', 'fooLang');\n\n\t\tconst result = await provider.provideCompletionItems(\n\t\t\tmodel,\n\t\t\tnew Position(1, 5),\n\t\t\t{ triggerKind: CompletionTriggerKind.Invoke }\n\t\t)!;\n\n\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\tassert.strictEqual((<SnippetCompletion>result.suggestions[0]).label.label, '^y');\n\n\n\t\tconst completions = await asCompletionModel(model, new Position(1, 5), provider, { triggerKind: CompletionTriggerKind.Invoke });\n\t\tassert.strictEqual(completions.items.length, 1);\n\t\tassert.strictEqual(completions.items[0].textLabel, '^y');\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('Snippet suggestions are too eager #138707 (word/word)', async function () {\n\t\tsnippetService = new SimpleSnippetService([\n\t\t\tnew Snippet(false, ['fooLang'], 'async arrow function', 'async arrow function', '', 'value', '', SnippetSource.User, generateUuid()),\n\t\t\tnew Snippet(false, ['fooLang'], 'foobarrrrrr', 'foobarrrrrr', '', 'value', '', SnippetSource.User, generateUuid()),\n\t\t]);\n\n\t\tconst provider = new SnippetCompletionProvider(languageService, snippetService, disposables.add(new TestLanguageConfigurationService()));\n\t\tconst model = instantiateTextModel(instantiationService, 'foobar', 'fooLang');\n\n\t\tconst result = await provider.provideCompletionItems(\n\t\t\tmodel,\n\t\t\tnew Position(1, 7),\n\t\t\t{ triggerKind: CompletionTriggerKind.Invoke }\n\t\t)!;\n\n\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\tassert.strictEqual((<SnippetCompletion>result.suggestions[0]).label.label, 'foobarrrrrr');\n\n\t\tconst completions = await asCompletionModel(model, new Position(1, 7), provider, { triggerKind: CompletionTriggerKind.Invoke });\n\t\tassert.strictEqual(completions.items.length, 1);\n\t\tassert.strictEqual(completions.items[0].textLabel, 'foobarrrrrr');\n\t\tmodel.dispose();\n\t});\n\n\ttest('Strange and useless autosuggestion #region/#endregion PHP #140039', async function () {\n\t\tsnippetService = new SimpleSnippetService([\n\t\t\tnew Snippet(false, ['fooLang'], 'reg', '#region', '', 'value', '', SnippetSource.User, generateUuid()),\n\t\t]);\n\n\n\t\tconst provider = new SnippetCompletionProvider(languageService, snippetService, disposables.add(new TestLanguageConfigurationService()));\n\t\tconst model = instantiateTextModel(instantiationService, 'function abc(w)', 'fooLang');\n\t\tconst result = await provider.provideCompletionItems(\n\t\t\tmodel,\n\t\t\tnew Position(1, 15),\n\t\t\t{ triggerKind: CompletionTriggerKind.Invoke }\n\t\t)!;\n\n\t\tassert.strictEqual(result.suggestions.length, 0);\n\t\tmodel.dispose();\n\t});\n\n\ttest.skip('Snippets disappear with . key #145960', async function () {\n\t\tsnippetService = new SimpleSnippetService([\n\t\t\tnew Snippet(false, ['fooLang'], 'div', 'div', '', 'div', '', SnippetSource.User, generateUuid()),\n\t\t\tnew Snippet(false, ['fooLang'], 'div.', 'div.', '', 'div.', '', SnippetSource.User, generateUuid()),\n\t\t\tnew Snippet(false, ['fooLang'], 'div#', 'div#', '', 'div#', '', SnippetSource.User, generateUuid()),\n\t\t]);\n\n\t\tconst provider = new SnippetCompletionProvider(languageService, snippetService, disposables.add(new TestLanguageConfigurationService()));\n\t\tconst model = instantiateTextModel(instantiationService, 'di', 'fooLang');\n\t\tconst result = await provider.provideCompletionItems(\n\t\t\tmodel,\n\t\t\tnew Position(1, 3),\n\t\t\t{ triggerKind: CompletionTriggerKind.Invoke }\n\t\t)!;\n\n\t\tassert.strictEqual(result.suggestions.length, 3);\n\n\n\t\tmodel.applyEdits([EditOperation.insert(new Position(1, 3), '.')]);\n\t\tassert.strictEqual(model.getValue(), 'di.');\n\t\tconst result2 = await provider.provideCompletionItems(\n\t\t\tmodel,\n\t\t\tnew Position(1, 4),\n\t\t\t{ triggerKind: CompletionTriggerKind.TriggerCharacter, triggerCharacter: '.' }\n\t\t)!;\n\n\t\tassert.strictEqual(result2.suggestions.length, 1);\n\t\tassert.strictEqual(result2.suggestions[0].insertText, 'div.');\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('Hyphen in snippet prefix de-indents snippet #139016', async function () {\n\t\tsnippetService = new SimpleSnippetService([\n\t\t\tnew Snippet(false, ['fooLang'], 'foo', 'Foo- Bar', '', 'Foo', '', SnippetSource.User, generateUuid()),\n\t\t]);\n\t\tconst model = disposables.add(instantiateTextModel(instantiationService, '    bar', 'fooLang'));\n\t\tconst provider = new SnippetCompletionProvider(languageService, snippetService, disposables.add(new TestLanguageConfigurationService()));\n\t\tconst result = await provider.provideCompletionItems(\n\t\t\tmodel,\n\t\t\tnew Position(1, 8),\n\t\t\t{ triggerKind: CompletionTriggerKind.Invoke }\n\t\t);\n\n\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\tconst first = result.suggestions[0];\n\t\tassert.strictEqual((<CompletionItemRanges>first.range).insert.startColumn, 5);\n\n\t\tconst completions = await asCompletionModel(model, new Position(1, 8), provider);\n\t\tassert.strictEqual(completions.items.length, 1);\n\t\tassert.strictEqual(completions.items[0].editStart.column, 5);\n\t});\n\n\ttest('Autocomplete suggests based on the last letter of a word and it depends on the typing speed #191070', async function () {\n\t\tsnippetService = new SimpleSnippetService([\n\t\t\tnew Snippet(false, ['fooLang'], '/whiletrue', '/whiletrue', '', 'one', '', SnippetSource.User, generateUuid()),\n\t\t\tnew Snippet(false, ['fooLang'], '/sc not expanding', '/sc not expanding', '', 'two', '', SnippetSource.User, generateUuid()),\n\t\t]);\n\n\t\tconst provider = new SnippetCompletionProvider(languageService, snippetService, disposables.add(new TestLanguageConfigurationService()));\n\t\tconst model = disposables.add(instantiateTextModel(instantiationService, '', 'fooLang'));\n\n\t\t{ // PREFIX: w\n\t\t\tmodel.setValue('w');\n\t\t\tconst result1 = await provider.provideCompletionItems(\n\t\t\t\tmodel,\n\t\t\t\tnew Position(1, 2),\n\t\t\t\t{ triggerKind: CompletionTriggerKind.Invoke }\n\t\t\t);\n\t\t\tassert.strictEqual(result1.suggestions[0].insertText, 'one');\n\t\t\tassert.strictEqual(result1.suggestions.length, 1);\n\t\t}\n\n\t\t{ // PREFIX: where\n\t\t\tmodel.setValue('where');\n\t\t\tconst result2 = await provider.provideCompletionItems(\n\t\t\t\tmodel,\n\t\t\t\tnew Position(1, 6),\n\t\t\t\t{ triggerKind: CompletionTriggerKind.Invoke }\n\t\t\t);\n\t\t\tassert.strictEqual(result2.suggestions[0].insertText, 'one'); // /whiletrue matches where (WHilEtRuE)\n\t\t\tassert.strictEqual(result2.suggestions.length, 1);\n\t\t}\n\t});\n});\n"],
  "mappings": "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",
  "names": ["first", "second"]
}
