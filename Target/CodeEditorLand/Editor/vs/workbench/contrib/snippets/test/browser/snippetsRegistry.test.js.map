{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/snippets/test/browser/snippetsRegistry.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { getNonWhitespacePrefix } from '../../browser/snippetsService.js';\nimport { Position } from '../../../../../editor/common/core/position.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\n\nsuite('getNonWhitespacePrefix', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tfunction assertGetNonWhitespacePrefix(line: string, column: number, expected: string): void {\n\t\tconst model = {\n\t\t\tgetLineContent: (lineNumber: number) => line\n\t\t};\n\t\tconst actual = getNonWhitespacePrefix(model, new Position(1, column));\n\t\tassert.strictEqual(actual, expected);\n\t}\n\n\ttest('empty line', () => {\n\t\tassertGetNonWhitespacePrefix('', 1, '');\n\t});\n\n\ttest('singleWordLine', () => {\n\t\tassertGetNonWhitespacePrefix('something', 1, '');\n\t\tassertGetNonWhitespacePrefix('something', 2, 's');\n\t\tassertGetNonWhitespacePrefix('something', 3, 'so');\n\t\tassertGetNonWhitespacePrefix('something', 4, 'som');\n\t\tassertGetNonWhitespacePrefix('something', 5, 'some');\n\t\tassertGetNonWhitespacePrefix('something', 6, 'somet');\n\t\tassertGetNonWhitespacePrefix('something', 7, 'someth');\n\t\tassertGetNonWhitespacePrefix('something', 8, 'somethi');\n\t\tassertGetNonWhitespacePrefix('something', 9, 'somethin');\n\t\tassertGetNonWhitespacePrefix('something', 10, 'something');\n\t});\n\n\ttest('two word line', () => {\n\t\tassertGetNonWhitespacePrefix('something interesting', 1, '');\n\t\tassertGetNonWhitespacePrefix('something interesting', 2, 's');\n\t\tassertGetNonWhitespacePrefix('something interesting', 3, 'so');\n\t\tassertGetNonWhitespacePrefix('something interesting', 4, 'som');\n\t\tassertGetNonWhitespacePrefix('something interesting', 5, 'some');\n\t\tassertGetNonWhitespacePrefix('something interesting', 6, 'somet');\n\t\tassertGetNonWhitespacePrefix('something interesting', 7, 'someth');\n\t\tassertGetNonWhitespacePrefix('something interesting', 8, 'somethi');\n\t\tassertGetNonWhitespacePrefix('something interesting', 9, 'somethin');\n\t\tassertGetNonWhitespacePrefix('something interesting', 10, 'something');\n\t\tassertGetNonWhitespacePrefix('something interesting', 11, '');\n\t\tassertGetNonWhitespacePrefix('something interesting', 12, 'i');\n\t\tassertGetNonWhitespacePrefix('something interesting', 13, 'in');\n\t\tassertGetNonWhitespacePrefix('something interesting', 14, 'int');\n\t\tassertGetNonWhitespacePrefix('something interesting', 15, 'inte');\n\t\tassertGetNonWhitespacePrefix('something interesting', 16, 'inter');\n\t\tassertGetNonWhitespacePrefix('something interesting', 17, 'intere');\n\t\tassertGetNonWhitespacePrefix('something interesting', 18, 'interes');\n\t\tassertGetNonWhitespacePrefix('something interesting', 19, 'interest');\n\t\tassertGetNonWhitespacePrefix('something interesting', 20, 'interesti');\n\t\tassertGetNonWhitespacePrefix('something interesting', 21, 'interestin');\n\t\tassertGetNonWhitespacePrefix('something interesting', 22, 'interesting');\n\t});\n\n\ttest('many separators', () => {\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions?redirectlocale=en-US&redirectslug=JavaScript%2FGuide%2FRegular_Expressions#special-white-space\n\t\t// \\s matches a single white space character, including space, tab, form feed, line feed.\n\t\t// Equivalent to [ \\f\\n\\r\\t\\v\\u00a0\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff].\n\n\t\tassertGetNonWhitespacePrefix('something interesting', 22, 'interesting');\n\t\tassertGetNonWhitespacePrefix('something\\tinteresting', 22, 'interesting');\n\t\tassertGetNonWhitespacePrefix('something\\finteresting', 22, 'interesting');\n\t\tassertGetNonWhitespacePrefix('something\\vinteresting', 22, 'interesting');\n\t\tassertGetNonWhitespacePrefix('something\\u00a0interesting', 22, 'interesting');\n\t\tassertGetNonWhitespacePrefix('something\\u2000interesting', 22, 'interesting');\n\t\tassertGetNonWhitespacePrefix('something\\u2028interesting', 22, 'interesting');\n\t\tassertGetNonWhitespacePrefix('something\\u3000interesting', 22, 'interesting');\n\t\tassertGetNonWhitespacePrefix('something\\ufeffinteresting', 22, 'interesting');\n\n\t});\n});\n"],
  "mappings": ";;AAKA,OAAO,YAAY;AACnB,SAAS,8BAA8B;AACvC,SAAS,gBAAgB;AACzB,SAAS,+CAA+C;AAExD,MAAM,0BAA0B,MAAM;AAErC,0CAAwC;AAExC,WAAS,6BAA6B,MAAc,QAAgB,UAAwB;AAC3F,UAAM,QAAQ;AAAA,MACb,gBAAgB,wBAAC,eAAuB,MAAxB;AAAA,IACjB;AACA,UAAM,SAAS,uBAAuB,OAAO,IAAI,SAAS,GAAG,MAAM,CAAC;AACpE,WAAO,YAAY,QAAQ,QAAQ;AAAA,EACpC;AANS;AAQT,OAAK,cAAc,MAAM;AACxB,iCAA6B,IAAI,GAAG,EAAE;AAAA,EACvC,CAAC;AAED,OAAK,kBAAkB,MAAM;AAC5B,iCAA6B,aAAa,GAAG,EAAE;AAC/C,iCAA6B,aAAa,GAAG,GAAG;AAChD,iCAA6B,aAAa,GAAG,IAAI;AACjD,iCAA6B,aAAa,GAAG,KAAK;AAClD,iCAA6B,aAAa,GAAG,MAAM;AACnD,iCAA6B,aAAa,GAAG,OAAO;AACpD,iCAA6B,aAAa,GAAG,QAAQ;AACrD,iCAA6B,aAAa,GAAG,SAAS;AACtD,iCAA6B,aAAa,GAAG,UAAU;AACvD,iCAA6B,aAAa,IAAI,WAAW;AAAA,EAC1D,CAAC;AAED,OAAK,iBAAiB,MAAM;AAC3B,iCAA6B,yBAAyB,GAAG,EAAE;AAC3D,iCAA6B,yBAAyB,GAAG,GAAG;AAC5D,iCAA6B,yBAAyB,GAAG,IAAI;AAC7D,iCAA6B,yBAAyB,GAAG,KAAK;AAC9D,iCAA6B,yBAAyB,GAAG,MAAM;AAC/D,iCAA6B,yBAAyB,GAAG,OAAO;AAChE,iCAA6B,yBAAyB,GAAG,QAAQ;AACjE,iCAA6B,yBAAyB,GAAG,SAAS;AAClE,iCAA6B,yBAAyB,GAAG,UAAU;AACnE,iCAA6B,yBAAyB,IAAI,WAAW;AACrE,iCAA6B,yBAAyB,IAAI,EAAE;AAC5D,iCAA6B,yBAAyB,IAAI,GAAG;AAC7D,iCAA6B,yBAAyB,IAAI,IAAI;AAC9D,iCAA6B,yBAAyB,IAAI,KAAK;AAC/D,iCAA6B,yBAAyB,IAAI,MAAM;AAChE,iCAA6B,yBAAyB,IAAI,OAAO;AACjE,iCAA6B,yBAAyB,IAAI,QAAQ;AAClE,iCAA6B,yBAAyB,IAAI,SAAS;AACnE,iCAA6B,yBAAyB,IAAI,UAAU;AACpE,iCAA6B,yBAAyB,IAAI,WAAW;AACrE,iCAA6B,yBAAyB,IAAI,YAAY;AACtE,iCAA6B,yBAAyB,IAAI,aAAa;AAAA,EACxE,CAAC;AAED,OAAK,mBAAmB,MAAM;AAK7B,iCAA6B,yBAAyB,IAAI,aAAa;AACvE,iCAA6B,yBAA0B,IAAI,aAAa;AACxE,iCAA6B,0BAA0B,IAAI,aAAa;AACxE,iCAA6B,0BAA0B,IAAI,aAAa;AACxE,iCAA6B,4BAA8B,IAAI,aAAa;AAC5E,iCAA6B,8BAA8B,IAAI,aAAa;AAC5E,iCAA6B,8BAA8B,IAAI,aAAa;AAC5E,iCAA6B,8BAA8B,IAAI,aAAa;AAC5E,iCAA6B,8BAA8B,IAAI,aAAa;AAAA,EAE7E,CAAC;AACF,CAAC;",
  "names": []
}
