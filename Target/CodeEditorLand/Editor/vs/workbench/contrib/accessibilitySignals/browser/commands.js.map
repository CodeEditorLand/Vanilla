{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/accessibilitySignals/browser/commands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport { IAccessibilityService } from \"../../../../platform/accessibility/common/accessibility.js\";\nimport {\n\tAccessibilitySignal,\n\tAcknowledgeDocCommentsToken,\n\tIAccessibilitySignalService,\n} from \"../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js\";\nimport { Action2 } from \"../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tIQuickInputService,\n\ttype IQuickPickItem,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { IPreferencesService } from \"../../../services/preferences/common/preferences.js\";\n\nexport class ShowSignalSoundHelp extends Action2 {\n\tstatic readonly ID = \"signals.sounds.help\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ShowSignalSoundHelp.ID,\n\t\t\ttitle: localize2(\"signals.sound.help\", \"Help: List Signal Sounds\"),\n\t\t\tf1: true,\n\t\t\tmetadata: {\n\t\t\t\tdescription: localize(\n\t\t\t\t\t\"accessibility.sound.help.description\",\n\t\t\t\t\t\"List all accessibility sounds, noises, or audio cues and configure their settings\",\n\t\t\t\t),\n\t\t\t},\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst accessibilitySignalService = accessor.get(\n\t\t\tIAccessibilitySignalService,\n\t\t);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst accessibilityService = accessor.get(IAccessibilityService);\n\t\tconst preferencesService = accessor.get(IPreferencesService);\n\t\tconst userGestureSignals = [\n\t\t\tAccessibilitySignal.save,\n\t\t\tAccessibilitySignal.format,\n\t\t];\n\t\tconst items: (IQuickPickItem & { signal: AccessibilitySignal })[] =\n\t\t\tAccessibilitySignal.allAccessibilitySignals\n\t\t\t\t.map((signal, idx) => ({\n\t\t\t\t\tlabel: userGestureSignals.includes(signal)\n\t\t\t\t\t\t? `${signal.name} (${configurationService.getValue(signal.settingsKey + \".sound\")})`\n\t\t\t\t\t\t: signal.name,\n\t\t\t\t\tsignal,\n\t\t\t\t\tbuttons: userGestureSignals.includes(signal)\n\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ticonClass: ThemeIcon.asClassName(\n\t\t\t\t\t\t\t\t\t\tCodicon.settingsGear,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\ttooltip: localize(\n\t\t\t\t\t\t\t\t\t\t\"sounds.help.settings\",\n\t\t\t\t\t\t\t\t\t\t\"Configure Sound\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\talwaysVisible: true,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t: [],\n\t\t\t\t}))\n\t\t\t\t.sort((a, b) => a.label.localeCompare(b.label));\n\t\tconst disposables = new DisposableStore();\n\t\tconst qp = disposables.add(\n\t\t\tquickInputService.createQuickPick<\n\t\t\t\tIQuickPickItem & { signal: AccessibilitySignal }\n\t\t\t>(),\n\t\t);\n\t\tqp.items = items;\n\t\tqp.selectedItems = items.filter(\n\t\t\t(i) =>\n\t\t\t\taccessibilitySignalService.isSoundEnabled(i.signal) ||\n\t\t\t\t(userGestureSignals.includes(i.signal) &&\n\t\t\t\t\tconfigurationService.getValue(\n\t\t\t\t\t\ti.signal.settingsKey + \".sound\",\n\t\t\t\t\t) !== \"never\"),\n\t\t);\n\t\tdisposables.add(\n\t\t\tqp.onDidAccept(() => {\n\t\t\t\tconst enabledSounds = qp.selectedItems.map((i) => i.signal);\n\t\t\t\tconst disabledSounds = qp.items\n\t\t\t\t\t.map((i) => (i as any).signal)\n\t\t\t\t\t.filter((i) => !enabledSounds.includes(i));\n\t\t\t\tfor (const signal of enabledSounds) {\n\t\t\t\t\tlet { sound, announcement } =\n\t\t\t\t\t\tconfigurationService.getValue<{\n\t\t\t\t\t\t\tsound: string;\n\t\t\t\t\t\t\tannouncement?: string;\n\t\t\t\t\t\t}>(signal.settingsKey);\n\t\t\t\t\tsound = userGestureSignals.includes(signal)\n\t\t\t\t\t\t? \"userGesture\"\n\t\t\t\t\t\t: accessibilityService.isScreenReaderOptimized()\n\t\t\t\t\t\t\t? \"auto\"\n\t\t\t\t\t\t\t: \"on\";\n\t\t\t\t\tif (announcement) {\n\t\t\t\t\t\tconfigurationService.updateValue(signal.settingsKey, {\n\t\t\t\t\t\t\tsound,\n\t\t\t\t\t\t\tannouncement,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconfigurationService.updateValue(signal.settingsKey, {\n\t\t\t\t\t\t\tsound,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (const signal of disabledSounds) {\n\t\t\t\t\tconst announcement = configurationService.getValue(\n\t\t\t\t\t\tsignal.settingsKey + \".announcement\",\n\t\t\t\t\t);\n\t\t\t\t\tconst sound = getDisabledSettingValue(\n\t\t\t\t\t\tuserGestureSignals.includes(signal),\n\t\t\t\t\t\taccessibilityService.isScreenReaderOptimized(),\n\t\t\t\t\t);\n\t\t\t\t\tconst value = announcement\n\t\t\t\t\t\t? { sound, announcement }\n\t\t\t\t\t\t: { sound };\n\t\t\t\t\tconfigurationService.updateValue(signal.settingsKey, value);\n\t\t\t\t}\n\t\t\t\tqp.hide();\n\t\t\t}),\n\t\t);\n\t\tdisposables.add(\n\t\t\tqp.onDidTriggerItemButton((e) => {\n\t\t\t\tpreferencesService.openUserSettings({\n\t\t\t\t\tjsonEditor: true,\n\t\t\t\t\trevealSetting: {\n\t\t\t\t\t\tkey: e.item.signal.settingsKey,\n\t\t\t\t\t\tedit: true,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\t\tdisposables.add(\n\t\t\tqp.onDidChangeActive(() => {\n\t\t\t\taccessibilitySignalService.playSound(\n\t\t\t\t\tqp.activeItems[0].signal.sound.getSound(true),\n\t\t\t\t\ttrue,\n\t\t\t\t\tAcknowledgeDocCommentsToken,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\t\tdisposables.add(qp.onDidHide(() => disposables.dispose()));\n\t\tqp.placeholder = localize(\n\t\t\t\"sounds.help.placeholder\",\n\t\t\t\"Select a sound to play and configure\",\n\t\t);\n\t\tqp.canSelectMany = true;\n\t\tawait qp.show();\n\t}\n}\n\nfunction getDisabledSettingValue(\n\tisUserGestureSignal: boolean,\n\tisScreenReaderOptimized: boolean,\n): string {\n\treturn isScreenReaderOptimized\n\t\t? isUserGestureSignal\n\t\t\t? \"never\"\n\t\t\t: \"off\"\n\t\t: isUserGestureSignal\n\t\t\t? \"never\"\n\t\t\t: \"auto\";\n}\n\nexport class ShowAccessibilityAnnouncementHelp extends Action2 {\n\tstatic readonly ID = \"accessibility.announcement.help\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ShowAccessibilityAnnouncementHelp.ID,\n\t\t\ttitle: localize2(\n\t\t\t\t\"accessibility.announcement.help\",\n\t\t\t\t\"Help: List Signal Announcements\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tmetadata: {\n\t\t\t\tdescription: localize(\n\t\t\t\t\t\"accessibility.announcement.help.description\",\n\t\t\t\t\t\"List all accessibility announcements, alerts, braille messages, and configure their settings\",\n\t\t\t\t),\n\t\t\t},\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst accessibilitySignalService = accessor.get(\n\t\t\tIAccessibilitySignalService,\n\t\t);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst accessibilityService = accessor.get(IAccessibilityService);\n\t\tconst preferencesService = accessor.get(IPreferencesService);\n\t\tconst userGestureSignals = [\n\t\t\tAccessibilitySignal.save,\n\t\t\tAccessibilitySignal.format,\n\t\t];\n\t\tconst items: (IQuickPickItem & { signal: AccessibilitySignal })[] =\n\t\t\tAccessibilitySignal.allAccessibilitySignals\n\t\t\t\t.filter((c) => !!c.legacyAnnouncementSettingsKey)\n\t\t\t\t.map((signal, idx) => ({\n\t\t\t\t\tlabel: userGestureSignals.includes(signal)\n\t\t\t\t\t\t? `${signal.name} (${configurationService.getValue(signal.settingsKey + \".announcement\")})`\n\t\t\t\t\t\t: signal.name,\n\t\t\t\t\tsignal,\n\t\t\t\t\tbuttons: userGestureSignals.includes(signal)\n\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ticonClass: ThemeIcon.asClassName(\n\t\t\t\t\t\t\t\t\t\tCodicon.settingsGear,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\ttooltip: localize(\n\t\t\t\t\t\t\t\t\t\t\"announcement.help.settings\",\n\t\t\t\t\t\t\t\t\t\t\"Configure Announcement\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\talwaysVisible: true,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t: [],\n\t\t\t\t}))\n\t\t\t\t.sort((a, b) => a.label.localeCompare(b.label));\n\t\tconst disposables = new DisposableStore();\n\t\tconst qp = disposables.add(\n\t\t\tquickInputService.createQuickPick<\n\t\t\t\tIQuickPickItem & { signal: AccessibilitySignal }\n\t\t\t>(),\n\t\t);\n\t\tqp.items = items;\n\t\tqp.selectedItems = items.filter(\n\t\t\t(i) =>\n\t\t\t\taccessibilitySignalService.isAnnouncementEnabled(i.signal) ||\n\t\t\t\t(userGestureSignals.includes(i.signal) &&\n\t\t\t\t\tconfigurationService.getValue(\n\t\t\t\t\t\ti.signal.settingsKey + \".announcement\",\n\t\t\t\t\t) !== \"never\"),\n\t\t);\n\t\tconst screenReaderOptimized =\n\t\t\taccessibilityService.isScreenReaderOptimized();\n\t\tdisposables.add(\n\t\t\tqp.onDidAccept(() => {\n\t\t\t\tif (!screenReaderOptimized) {\n\t\t\t\t\t// announcements are off by default when screen reader is not active\n\t\t\t\t\tqp.hide();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst enabledAnnouncements = qp.selectedItems.map(\n\t\t\t\t\t(i) => i.signal,\n\t\t\t\t);\n\t\t\t\tconst disabledAnnouncements =\n\t\t\t\t\tAccessibilitySignal.allAccessibilitySignals.filter(\n\t\t\t\t\t\t(cue) =>\n\t\t\t\t\t\t\t!!cue.legacyAnnouncementSettingsKey &&\n\t\t\t\t\t\t\t!enabledAnnouncements.includes(cue),\n\t\t\t\t\t);\n\t\t\t\tfor (const signal of enabledAnnouncements) {\n\t\t\t\t\tlet { sound, announcement } =\n\t\t\t\t\t\tconfigurationService.getValue<{\n\t\t\t\t\t\t\tsound: string;\n\t\t\t\t\t\t\tannouncement?: string;\n\t\t\t\t\t\t}>(signal.settingsKey);\n\t\t\t\t\tannouncement = userGestureSignals.includes(signal)\n\t\t\t\t\t\t? \"userGesture\"\n\t\t\t\t\t\t: signal.announcementMessage &&\n\t\t\t\t\t\t\t\taccessibilityService.isScreenReaderOptimized()\n\t\t\t\t\t\t\t? \"auto\"\n\t\t\t\t\t\t\t: undefined;\n\t\t\t\t\tconfigurationService.updateValue(signal.settingsKey, {\n\t\t\t\t\t\tsound,\n\t\t\t\t\t\tannouncement,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tfor (const signal of disabledAnnouncements) {\n\t\t\t\t\tconst announcement = getDisabledSettingValue(\n\t\t\t\t\t\tuserGestureSignals.includes(signal),\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t);\n\t\t\t\t\tconst sound = configurationService.getValue(\n\t\t\t\t\t\tsignal.settingsKey + \".sound\",\n\t\t\t\t\t);\n\t\t\t\t\tconst value = announcement\n\t\t\t\t\t\t? { sound, announcement }\n\t\t\t\t\t\t: { sound };\n\t\t\t\t\tconfigurationService.updateValue(signal.settingsKey, value);\n\t\t\t\t}\n\t\t\t\tqp.hide();\n\t\t\t}),\n\t\t);\n\t\tdisposables.add(\n\t\t\tqp.onDidTriggerItemButton((e) => {\n\t\t\t\tpreferencesService.openUserSettings({\n\t\t\t\t\tjsonEditor: true,\n\t\t\t\t\trevealSetting: {\n\t\t\t\t\t\tkey: e.item.signal.settingsKey,\n\t\t\t\t\t\tedit: true,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\t\tdisposables.add(qp.onDidHide(() => disposables.dispose()));\n\t\tqp.placeholder = screenReaderOptimized\n\t\t\t? localize(\n\t\t\t\t\t\"announcement.help.placeholder\",\n\t\t\t\t\t\"Select an announcement to configure\",\n\t\t\t\t)\n\t\t\t: localize(\n\t\t\t\t\t\"announcement.help.placeholder.disabled\",\n\t\t\t\t\t\"Screen reader is not active, announcements are disabled by default.\",\n\t\t\t\t);\n\t\tqp.canSelectMany = true;\n\t\tawait qp.show();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
