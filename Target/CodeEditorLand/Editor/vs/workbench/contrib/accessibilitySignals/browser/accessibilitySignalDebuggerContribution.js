var c=Object.defineProperty;var D=Object.getOwnPropertyDescriptor;var b=(d,t,e,o)=>{for(var s=o>1?void 0:o?D(t,e):t,n=d.length-1,a;n>=0;n--)(a=d[n])&&(s=(o?a(t,e,s):a(s))||s);return o&&s&&c(t,e,s),s},p=(d,t)=>(e,o)=>t(e,o,d);import{Disposable as h,toDisposable as m}from"../../../../../vs/base/common/lifecycle.js";import{autorunWithStore as I,observableFromEvent as E}from"../../../../../vs/base/common/observable.js";import{AccessibilitySignal as S,IAccessibilitySignalService as u}from"../../../../../vs/platform/accessibilitySignal/browser/accessibilitySignalService.js";import"../../../../../vs/workbench/common/contributions.js";import{IDebugService as f}from"../../../../../vs/workbench/contrib/debug/common/debug.js";let l=class extends h{constructor(e,o){super();this.accessibilitySignalService=o;const s=E(this,o.onSoundEnabledChanged(S.onDebugBreak),()=>o.isSoundEnabled(S.onDebugBreak));this._register(I((n,a)=>{if(!s.read(n))return;const r=new Map;a.add(m(()=>{r.forEach(i=>i.dispose()),r.clear()})),a.add(e.onDidNewSession(i=>r.set(i,this.handleSession(i)))),a.add(e.onDidEndSession(({session:i})=>{r.get(i)?.dispose(),r.delete(i)})),e.getModel().getSessions().forEach(i=>r.set(i,this.handleSession(i)))}))}handleSession(e){return e.onDidChangeState(o=>{const s=e.getStoppedDetails();s&&s.reason==="breakpoint"&&this.accessibilitySignalService.playSignal(S.onDebugBreak)})}};l=b([p(0,f),p(1,u)],l);export{l as AccessibilitySignalLineDebuggerContribution};
