var b=Object.defineProperty;var D=Object.getOwnPropertyDescriptor;var c=(p,i,e,s)=>{for(var o=s>1?void 0:s?D(i,e):i,a=p.length-1,n;a>=0;a--)(n=p[a])&&(o=(s?n(i,e,o):n(o))||o);return s&&o&&b(i,e,o),o},l=(p,i)=>(e,s)=>i(e,s,p);import{Disposable as h,toDisposable as m}from"../../../../base/common/lifecycle.js";import{autorunWithStore as I,observableFromEvent as u}from"../../../../base/common/observable.js";import{AccessibilitySignal as S,IAccessibilitySignalService as E}from"../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js";import{IDebugService as f}from"../../debug/common/debug.js";let d=class extends h{constructor(e,s){super();this.accessibilitySignalService=s;const o=u(this,s.onSoundEnabledChanged(S.onDebugBreak),()=>s.isSoundEnabled(S.onDebugBreak));this._register(I((a,n)=>{if(!o.read(a))return;const r=new Map;n.add(m(()=>{r.forEach(t=>t.dispose()),r.clear()})),n.add(e.onDidNewSession(t=>r.set(t,this.handleSession(t)))),n.add(e.onDidEndSession(({session:t})=>{r.get(t)?.dispose(),r.delete(t)})),e.getModel().getSessions().forEach(t=>r.set(t,this.handleSession(t)))}))}handleSession(e){return e.onDidChangeState(s=>{const o=e.getStoppedDetails();o&&o.reason==="breakpoint"&&this.accessibilitySignalService.playSignal(S.onDebugBreak)})}};d=c([l(0,f),l(1,E)],d);export{d as AccessibilitySignalLineDebuggerContribution};
