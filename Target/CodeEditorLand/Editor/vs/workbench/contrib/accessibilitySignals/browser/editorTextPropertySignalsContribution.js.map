{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/accessibilitySignals/browser/editorTextPropertySignalsContribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { disposableTimeout } from \"../../../../base/common/async.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n} from \"../../../../base/common/lifecycle.js\";\nimport {\n\ttype IReader,\n\tautorun,\n\tautorunWithStore,\n\tderived,\n\tobservableFromEvent,\n\tobservableFromPromise,\n\tobservableFromValueWithChangeEvent,\n\tobservableSignalFromEvent,\n\twasEventTriggeredRecently,\n} from \"../../../../base/common/observable.js\";\nimport { isDefined } from \"../../../../base/common/types.js\";\nimport {\n\ttype ICodeEditor,\n\tisCodeEditor,\n\tisDiffEditor,\n} from \"../../../../editor/browser/editorBrowser.js\";\nimport type { Position } from \"../../../../editor/common/core/position.js\";\nimport { CursorChangeReason } from \"../../../../editor/common/cursorEvents.js\";\nimport type { ITextModel } from \"../../../../editor/common/model.js\";\nimport { FoldingController } from \"../../../../editor/contrib/folding/browser/folding.js\";\nimport {\n\ttype AccessibilityModality,\n\tAccessibilitySignal,\n\tIAccessibilitySignalService,\n} from \"../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tIMarkerService,\n\tMarkerSeverity,\n} from \"../../../../platform/markers/common/markers.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { IDebugService } from \"../../debug/common/debug.js\";\n\nexport class EditorTextPropertySignalsContribution\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tprivate readonly _textProperties: TextProperty[] = [\n\t\tthis._instantiationService.createInstance(\n\t\t\tMarkerTextProperty,\n\t\t\tAccessibilitySignal.errorAtPosition,\n\t\t\tAccessibilitySignal.errorOnLine,\n\t\t\tMarkerSeverity.Error,\n\t\t),\n\t\tthis._instantiationService.createInstance(\n\t\t\tMarkerTextProperty,\n\t\t\tAccessibilitySignal.warningAtPosition,\n\t\t\tAccessibilitySignal.warningOnLine,\n\t\t\tMarkerSeverity.Warning,\n\t\t),\n\t\tthis._instantiationService.createInstance(FoldedAreaTextProperty),\n\t\tthis._instantiationService.createInstance(BreakpointTextProperty),\n\t];\n\n\tprivate readonly _someAccessibilitySignalIsEnabled = derived(\n\t\tthis,\n\t\t(reader) =>\n\t\t\tthis._textProperties\n\t\t\t\t.flatMap((p) => [p.lineSignal, p.positionSignal])\n\t\t\t\t.filter(isDefined)\n\t\t\t\t.some((signal) =>\n\t\t\t\t\tobservableFromValueWithChangeEvent(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\tthis._accessibilitySignalService.getEnabledState(\n\t\t\t\t\t\t\tsignal,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t),\n\t\t\t\t\t).read(reader),\n\t\t\t\t),\n\t);\n\n\tprivate readonly _activeEditorObservable = observableFromEvent(\n\t\tthis,\n\t\tthis._editorService.onDidActiveEditorChange,\n\t\t(_) => {\n\t\t\tconst activeTextEditorControl =\n\t\t\t\tthis._editorService.activeTextEditorControl;\n\n\t\t\tconst editor = isDiffEditor(activeTextEditorControl)\n\t\t\t\t? activeTextEditorControl.getOriginalEditor()\n\t\t\t\t: isCodeEditor(activeTextEditorControl)\n\t\t\t\t\t? activeTextEditorControl\n\t\t\t\t\t: undefined;\n\n\t\t\treturn editor && editor.hasModel()\n\t\t\t\t? { editor, model: editor.getModel() }\n\t\t\t\t: undefined;\n\t\t},\n\t);\n\n\tconstructor(\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IAccessibilitySignalService private readonly _accessibilitySignalService: IAccessibilitySignalService\n\t) {\n\t\tsuper();\n\n\t\tthis._register(autorunWithStore((reader, store) => {\n\t\t\t/** @description updateSignalsEnabled */\n\t\t\tif (!this._someAccessibilitySignalIsEnabled.read(reader)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst activeEditor = this._activeEditorObservable.read(reader);\n\t\t\tif (activeEditor) {\n\t\t\t\tthis._registerAccessibilitySignalsForEditor(activeEditor.editor, activeEditor.model, store);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _registerAccessibilitySignalsForEditor(\n\t\teditor: ICodeEditor,\n\t\teditorModel: ITextModel,\n\t\tstore: DisposableStore,\n\t): void {\n\t\tlet lastLine = -1;\n\t\tconst ignoredLineSignalsForCurrentLine = new Set<TextProperty>();\n\n\t\tconst timeouts = store.add(new DisposableStore());\n\n\t\tconst propertySources = this._textProperties.map((p) => ({\n\t\t\tsource: p.createSource(editor, editorModel),\n\t\t\tproperty: p,\n\t\t}));\n\n\t\tconst didType = wasEventTriggeredRecently(\n\t\t\teditor.onDidChangeModelContent,\n\t\t\t100,\n\t\t\tstore,\n\t\t);\n\n\t\tstore.add(\n\t\t\teditor.onDidChangeCursorPosition((args) => {\n\t\t\t\ttimeouts.clear();\n\n\t\t\t\tif (\n\t\t\t\t\targs &&\n\t\t\t\t\targs.reason !== CursorChangeReason.Explicit &&\n\t\t\t\t\targs.reason !== CursorChangeReason.NotSet\n\t\t\t\t) {\n\t\t\t\t\t// Ignore cursor changes caused by navigation (e.g. which happens when execution is paused).\n\t\t\t\t\tignoredLineSignalsForCurrentLine.clear();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst trigger = (\n\t\t\t\t\tproperty: TextProperty,\n\t\t\t\t\tsource: TextPropertySource,\n\t\t\t\t\tmode: \"line\" | \"positional\",\n\t\t\t\t) => {\n\t\t\t\t\tconst signal =\n\t\t\t\t\t\tmode === \"line\"\n\t\t\t\t\t\t\t? property.lineSignal\n\t\t\t\t\t\t\t: property.positionSignal;\n\t\t\t\t\tif (\n\t\t\t\t\t\t!signal ||\n\t\t\t\t\t\t!this._accessibilitySignalService.getEnabledState(\n\t\t\t\t\t\t\tsignal,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t).value ||\n\t\t\t\t\t\t!source.isPresent(position, mode, undefined)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const modality of [\n\t\t\t\t\t\t\"sound\",\n\t\t\t\t\t\t\"announcement\",\n\t\t\t\t\t] as AccessibilityModality[]) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis._accessibilitySignalService.getEnabledState(\n\t\t\t\t\t\t\t\tsignal,\n\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\tmodality,\n\t\t\t\t\t\t\t).value\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst delay =\n\t\t\t\t\t\t\t\tthis._accessibilitySignalService.getDelayMs(\n\t\t\t\t\t\t\t\t\tsignal,\n\t\t\t\t\t\t\t\t\tmodality,\n\t\t\t\t\t\t\t\t\tmode,\n\t\t\t\t\t\t\t\t) + (didType.get() ? 1000 : 0);\n\n\t\t\t\t\t\t\ttimeouts.add(\n\t\t\t\t\t\t\t\tdisposableTimeout(() => {\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tsource.isPresent(\n\t\t\t\t\t\t\t\t\t\t\tposition,\n\t\t\t\t\t\t\t\t\t\t\tmode,\n\t\t\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t!(mode === \"line\") ||\n\t\t\t\t\t\t\t\t\t\t\t!ignoredLineSignalsForCurrentLine.has(\n\t\t\t\t\t\t\t\t\t\t\t\tproperty,\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tthis._accessibilitySignalService.playSignal(\n\t\t\t\t\t\t\t\t\t\t\t\tsignal,\n\t\t\t\t\t\t\t\t\t\t\t\t{ modality },\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tignoredLineSignalsForCurrentLine.add(\n\t\t\t\t\t\t\t\t\t\t\tproperty,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}, delay),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// React to cursor changes\n\t\t\t\tconst position = args.position;\n\t\t\t\tconst lineNumber = position.lineNumber;\n\t\t\t\tif (lineNumber !== lastLine) {\n\t\t\t\t\tignoredLineSignalsForCurrentLine.clear();\n\t\t\t\t\tlastLine = lineNumber;\n\t\t\t\t\tfor (const p of propertySources) {\n\t\t\t\t\t\ttrigger(p.property, p.source, \"line\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const p of propertySources) {\n\t\t\t\t\ttrigger(p.property, p.source, \"positional\");\n\t\t\t\t}\n\n\t\t\t\t// React to property state changes for the current cursor position\n\t\t\t\tfor (const s of propertySources) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t![\n\t\t\t\t\t\t\ts.property.lineSignal,\n\t\t\t\t\t\t\ts.property.positionSignal,\n\t\t\t\t\t\t].some(\n\t\t\t\t\t\t\t(s) =>\n\t\t\t\t\t\t\t\ts &&\n\t\t\t\t\t\t\t\tthis._accessibilitySignalService.getEnabledState(\n\t\t\t\t\t\t\t\t\ts,\n\t\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t).value,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet lastValueAtPosition: boolean | undefined;\n\t\t\t\t\tlet lastValueOnLine: boolean | undefined;\n\t\t\t\t\ttimeouts.add(\n\t\t\t\t\t\tautorun((reader) => {\n\t\t\t\t\t\t\tconst newValueAtPosition =\n\t\t\t\t\t\t\t\ts.source.isPresentAtPosition(\n\t\t\t\t\t\t\t\t\targs.position,\n\t\t\t\t\t\t\t\t\treader,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst newValueOnLine = s.source.isPresentOnLine(\n\t\t\t\t\t\t\t\targs.position.lineNumber,\n\t\t\t\t\t\t\t\treader,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tlastValueAtPosition !== undefined &&\n\t\t\t\t\t\t\t\tlastValueAtPosition !== undefined\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t!lastValueAtPosition &&\n\t\t\t\t\t\t\t\t\tnewValueAtPosition\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\ttrigger(s.property, s.source, \"positional\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (!lastValueOnLine && newValueOnLine) {\n\t\t\t\t\t\t\t\t\ttrigger(s.property, s.source, \"line\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlastValueAtPosition = newValueAtPosition;\n\t\t\t\t\t\t\tlastValueOnLine = newValueOnLine;\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n}\n\ninterface TextProperty {\n\treadonly positionSignal?: AccessibilitySignal;\n\treadonly lineSignal?: AccessibilitySignal;\n\treadonly debounceWhileTyping?: boolean;\n\tcreateSource(editor: ICodeEditor, model: ITextModel): TextPropertySource;\n}\n\nclass TextPropertySource {\n\tpublic static notPresent = new TextPropertySource({\n\t\tisPresentAtPosition: () => false,\n\t\tisPresentOnLine: () => false,\n\t});\n\n\tpublic readonly isPresentOnLine: (\n\t\tlineNumber: number,\n\t\treader: IReader | undefined,\n\t) => boolean;\n\tpublic readonly isPresentAtPosition: (\n\t\tposition: Position,\n\t\treader: IReader | undefined,\n\t) => boolean;\n\n\tconstructor(options: {\n\t\tisPresentOnLine: (\n\t\t\tlineNumber: number,\n\t\t\treader: IReader | undefined,\n\t\t) => boolean;\n\t\tisPresentAtPosition?: (\n\t\t\tposition: Position,\n\t\t\treader: IReader | undefined,\n\t\t) => boolean;\n\t}) {\n\t\tthis.isPresentOnLine = options.isPresentOnLine;\n\t\tthis.isPresentAtPosition = options.isPresentAtPosition ?? (() => false);\n\t}\n\n\tpublic isPresent(\n\t\tposition: Position,\n\t\tmode: \"line\" | \"positional\",\n\t\treader: IReader | undefined,\n\t): boolean {\n\t\treturn mode === \"line\"\n\t\t\t? this.isPresentOnLine(position.lineNumber, reader)\n\t\t\t: this.isPresentAtPosition(position, reader);\n\t}\n}\n\nclass MarkerTextProperty implements TextProperty {\n\tpublic readonly debounceWhileTyping = true;\n\tconstructor(\n\t\tpublic readonly positionSignal: AccessibilitySignal,\n\t\tpublic readonly lineSignal: AccessibilitySignal,\n\t\tprivate readonly severity: MarkerSeverity,\n\t\t@IMarkerService private readonly markerService: IMarkerService,\n\n\t) { }\n\n\tcreateSource(editor: ICodeEditor, model: ITextModel): TextPropertySource {\n\t\tconst obs = observableSignalFromEvent(\n\t\t\t\"onMarkerChanged\",\n\t\t\tthis.markerService.onMarkerChanged,\n\t\t);\n\t\treturn new TextPropertySource({\n\t\t\tisPresentAtPosition: (position, reader) => {\n\t\t\t\tobs.read(reader);\n\t\t\t\tconst hasMarker = this.markerService\n\t\t\t\t\t.read({ resource: model.uri })\n\t\t\t\t\t.some(\n\t\t\t\t\t\t(m) =>\n\t\t\t\t\t\t\tm.severity === this.severity &&\n\t\t\t\t\t\t\tm.startLineNumber <= position.lineNumber &&\n\t\t\t\t\t\t\tposition.lineNumber <= m.endLineNumber &&\n\t\t\t\t\t\t\tm.startColumn <= position.column &&\n\t\t\t\t\t\t\tposition.column <= m.endColumn,\n\t\t\t\t\t);\n\t\t\t\treturn hasMarker;\n\t\t\t},\n\t\t\tisPresentOnLine: (lineNumber, reader) => {\n\t\t\t\tobs.read(reader);\n\t\t\t\tconst hasMarker = this.markerService\n\t\t\t\t\t.read({ resource: model.uri })\n\t\t\t\t\t.some(\n\t\t\t\t\t\t(m) =>\n\t\t\t\t\t\t\tm.severity === this.severity &&\n\t\t\t\t\t\t\tm.startLineNumber <= lineNumber &&\n\t\t\t\t\t\t\tlineNumber <= m.endLineNumber,\n\t\t\t\t\t);\n\t\t\t\treturn hasMarker;\n\t\t\t},\n\t\t});\n\t}\n}\n\nclass FoldedAreaTextProperty implements TextProperty {\n\tpublic readonly lineSignal = AccessibilitySignal.foldedArea;\n\n\tcreateSource(editor: ICodeEditor, _model: ITextModel): TextPropertySource {\n\t\tconst foldingController = FoldingController.get(editor);\n\t\tif (!foldingController) {\n\t\t\treturn TextPropertySource.notPresent;\n\t\t}\n\n\t\tconst foldingModel = observableFromPromise(\n\t\t\tfoldingController.getFoldingModel() ?? Promise.resolve(undefined),\n\t\t);\n\t\treturn new TextPropertySource({\n\t\t\tisPresentOnLine(lineNumber, reader): boolean {\n\t\t\t\tconst m = foldingModel.read(reader);\n\t\t\t\tconst regionAtLine = m.value?.getRegionAtLine(lineNumber);\n\t\t\t\tconst hasFolding = regionAtLine\n\t\t\t\t\t? regionAtLine.isCollapsed &&\n\t\t\t\t\t\tregionAtLine.startLineNumber === lineNumber\n\t\t\t\t\t: false;\n\t\t\t\treturn hasFolding;\n\t\t\t},\n\t\t});\n\t}\n}\n\nclass BreakpointTextProperty implements TextProperty {\n\tpublic readonly lineSignal = AccessibilitySignal.break;\n\n\tconstructor(@IDebugService private readonly debugService: IDebugService) { }\n\n\tcreateSource(editor: ICodeEditor, model: ITextModel): TextPropertySource {\n\t\tconst signal = observableSignalFromEvent(\n\t\t\t\"onDidChangeBreakpoints\",\n\t\t\tthis.debugService.getModel().onDidChangeBreakpoints,\n\t\t);\n\t\tconst debugService = this.debugService;\n\t\treturn new TextPropertySource({\n\t\t\tisPresentOnLine(lineNumber, reader): boolean {\n\t\t\t\tsignal.read(reader);\n\t\t\t\tconst breakpoints = debugService\n\t\t\t\t\t.getModel()\n\t\t\t\t\t.getBreakpoints({ uri: model.uri, lineNumber });\n\t\t\t\tconst hasBreakpoints = breakpoints.length > 0;\n\t\t\t\treturn hasBreakpoints;\n\t\t\t},\n\t\t});\n\t}\n}\n"],
  "mappings": "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",
  "names": ["s"]
}
