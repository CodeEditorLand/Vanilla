{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/accessibilitySignals/browser/editorTextPropertySignalsContribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { disposableTimeout } from '../../../../base/common/async.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { IReader, autorun, autorunWithStore, derived, observableFromEvent, observableFromPromise, observableFromValueWithChangeEvent, observableSignalFromEvent, wasEventTriggeredRecently } from '../../../../base/common/observable.js';\nimport { isDefined } from '../../../../base/common/types.js';\nimport { ICodeEditor, isCodeEditor, isDiffEditor } from '../../../../editor/browser/editorBrowser.js';\nimport { Position } from '../../../../editor/common/core/position.js';\nimport { CursorChangeReason } from '../../../../editor/common/cursorEvents.js';\nimport { ITextModel } from '../../../../editor/common/model.js';\nimport { FoldingController } from '../../../../editor/contrib/folding/browser/folding.js';\nimport { AccessibilityModality, AccessibilitySignal, IAccessibilitySignalService } from '../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IMarkerService, MarkerSeverity } from '../../../../platform/markers/common/markers.js';\nimport { IWorkbenchContribution } from '../../../common/contributions.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IDebugService } from '../../debug/common/debug.js';\n\nexport class EditorTextPropertySignalsContribution extends Disposable implements IWorkbenchContribution {\n\tprivate readonly _textProperties: TextProperty[] = [\n\t\tthis._instantiationService.createInstance(MarkerTextProperty, AccessibilitySignal.errorAtPosition, AccessibilitySignal.errorOnLine, MarkerSeverity.Error),\n\t\tthis._instantiationService.createInstance(MarkerTextProperty, AccessibilitySignal.warningAtPosition, AccessibilitySignal.warningOnLine, MarkerSeverity.Warning),\n\t\tthis._instantiationService.createInstance(FoldedAreaTextProperty),\n\t\tthis._instantiationService.createInstance(BreakpointTextProperty),\n\t];\n\n\tprivate readonly _someAccessibilitySignalIsEnabled = derived(this, reader =>\n\t\tthis._textProperties\n\t\t\t.flatMap(p => [p.lineSignal, p.positionSignal])\n\t\t\t.filter(isDefined)\n\t\t\t.some(signal => observableFromValueWithChangeEvent(this, this._accessibilitySignalService.getEnabledState(signal, false)).read(reader))\n\t);\n\n\tprivate readonly _activeEditorObservable = observableFromEvent(this,\n\t\tthis._editorService.onDidActiveEditorChange,\n\t\t(_) => {\n\t\t\tconst activeTextEditorControl = this._editorService.activeTextEditorControl;\n\n\t\t\tconst editor = isDiffEditor(activeTextEditorControl)\n\t\t\t\t? activeTextEditorControl.getOriginalEditor()\n\t\t\t\t: isCodeEditor(activeTextEditorControl)\n\t\t\t\t\t? activeTextEditorControl\n\t\t\t\t\t: undefined;\n\n\t\t\treturn editor && editor.hasModel() ? { editor, model: editor.getModel() } : undefined;\n\t\t}\n\t);\n\n\tconstructor(\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IAccessibilitySignalService private readonly _accessibilitySignalService: IAccessibilitySignalService\n\t) {\n\t\tsuper();\n\n\t\tthis._register(autorunWithStore((reader, store) => {\n\t\t\t/** @description updateSignalsEnabled */\n\t\t\tif (!this._someAccessibilitySignalIsEnabled.read(reader)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst activeEditor = this._activeEditorObservable.read(reader);\n\t\t\tif (activeEditor) {\n\t\t\t\tthis._registerAccessibilitySignalsForEditor(activeEditor.editor, activeEditor.model, store);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _registerAccessibilitySignalsForEditor(editor: ICodeEditor, editorModel: ITextModel, store: DisposableStore): void {\n\t\tlet lastLine = -1;\n\t\tconst ignoredLineSignalsForCurrentLine = new Set<TextProperty>();\n\n\t\tconst timeouts = store.add(new DisposableStore());\n\n\t\tconst propertySources = this._textProperties.map(p => ({ source: p.createSource(editor, editorModel), property: p }));\n\n\t\tconst didType = wasEventTriggeredRecently(editor.onDidChangeModelContent, 100, store);\n\n\t\tstore.add(editor.onDidChangeCursorPosition(args => {\n\t\t\ttimeouts.clear();\n\n\t\t\tif (\n\t\t\t\targs &&\n\t\t\t\targs.reason !== CursorChangeReason.Explicit &&\n\t\t\t\targs.reason !== CursorChangeReason.NotSet\n\t\t\t) {\n\t\t\t\t// Ignore cursor changes caused by navigation (e.g. which happens when execution is paused).\n\t\t\t\tignoredLineSignalsForCurrentLine.clear();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst trigger = (property: TextProperty, source: TextPropertySource, mode: 'line' | 'positional') => {\n\t\t\t\tconst signal = mode === 'line' ? property.lineSignal : property.positionSignal;\n\t\t\t\tif (\n\t\t\t\t\t!signal\n\t\t\t\t\t|| !this._accessibilitySignalService.getEnabledState(signal, false).value\n\t\t\t\t\t|| !source.isPresent(position, mode, undefined)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (const modality of ['sound', 'announcement'] as AccessibilityModality[]) {\n\t\t\t\t\tif (this._accessibilitySignalService.getEnabledState(signal, false, modality).value) {\n\t\t\t\t\t\tconst delay = this._accessibilitySignalService.getDelayMs(signal, modality, mode) + (didType.get() ? 1000 : 0);\n\n\t\t\t\t\t\ttimeouts.add(disposableTimeout(() => {\n\t\t\t\t\t\t\tif (source.isPresent(position, mode, undefined)) {\n\t\t\t\t\t\t\t\tif (!(mode === 'line') || !ignoredLineSignalsForCurrentLine.has(property)) {\n\t\t\t\t\t\t\t\t\tthis._accessibilitySignalService.playSignal(signal, { modality });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tignoredLineSignalsForCurrentLine.add(property);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, delay));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// React to cursor changes\n\t\t\tconst position = args.position;\n\t\t\tconst lineNumber = position.lineNumber;\n\t\t\tif (lineNumber !== lastLine) {\n\t\t\t\tignoredLineSignalsForCurrentLine.clear();\n\t\t\t\tlastLine = lineNumber;\n\t\t\t\tfor (const p of propertySources) {\n\t\t\t\t\ttrigger(p.property, p.source, 'line');\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const p of propertySources) {\n\t\t\t\ttrigger(p.property, p.source, 'positional');\n\t\t\t}\n\n\t\t\t// React to property state changes for the current cursor position\n\t\t\tfor (const s of propertySources) {\n\t\t\t\tif (\n\t\t\t\t\t![s.property.lineSignal, s.property.positionSignal]\n\t\t\t\t\t\t.some(s => s && this._accessibilitySignalService.getEnabledState(s, false).value)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet lastValueAtPosition: boolean | undefined = undefined;\n\t\t\t\tlet lastValueOnLine: boolean | undefined = undefined;\n\t\t\t\ttimeouts.add(autorun(reader => {\n\t\t\t\t\tconst newValueAtPosition = s.source.isPresentAtPosition(args.position, reader);\n\t\t\t\t\tconst newValueOnLine = s.source.isPresentOnLine(args.position.lineNumber, reader);\n\n\t\t\t\t\tif (lastValueAtPosition !== undefined && lastValueAtPosition !== undefined) {\n\t\t\t\t\t\tif (!lastValueAtPosition && newValueAtPosition) {\n\t\t\t\t\t\t\ttrigger(s.property, s.source, 'positional');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!lastValueOnLine && newValueOnLine) {\n\t\t\t\t\t\t\ttrigger(s.property, s.source, 'line');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlastValueAtPosition = newValueAtPosition;\n\t\t\t\t\tlastValueOnLine = newValueOnLine;\n\t\t\t\t}));\n\t\t\t}\n\t\t}));\n\t}\n}\n\ninterface TextProperty {\n\treadonly positionSignal?: AccessibilitySignal;\n\treadonly lineSignal?: AccessibilitySignal;\n\treadonly debounceWhileTyping?: boolean;\n\tcreateSource(editor: ICodeEditor, model: ITextModel): TextPropertySource;\n}\n\nclass TextPropertySource {\n\tpublic static notPresent = new TextPropertySource({ isPresentAtPosition: () => false, isPresentOnLine: () => false });\n\n\tpublic readonly isPresentOnLine: (lineNumber: number, reader: IReader | undefined) => boolean;\n\tpublic readonly isPresentAtPosition: (position: Position, reader: IReader | undefined) => boolean;\n\n\tconstructor(options: {\n\t\tisPresentOnLine: (lineNumber: number, reader: IReader | undefined) => boolean;\n\t\tisPresentAtPosition?: (position: Position, reader: IReader | undefined) => boolean;\n\t}) {\n\t\tthis.isPresentOnLine = options.isPresentOnLine;\n\t\tthis.isPresentAtPosition = options.isPresentAtPosition ?? (() => false);\n\t}\n\n\tpublic isPresent(position: Position, mode: 'line' | 'positional', reader: IReader | undefined): boolean {\n\t\treturn mode === 'line' ? this.isPresentOnLine(position.lineNumber, reader) : this.isPresentAtPosition(position, reader);\n\t}\n}\n\nclass MarkerTextProperty implements TextProperty {\n\tpublic readonly debounceWhileTyping = true;\n\tconstructor(\n\t\tpublic readonly positionSignal: AccessibilitySignal,\n\t\tpublic readonly lineSignal: AccessibilitySignal,\n\t\tprivate readonly severity: MarkerSeverity,\n\t\t@IMarkerService private readonly markerService: IMarkerService,\n\n\t) { }\n\n\tcreateSource(editor: ICodeEditor, model: ITextModel): TextPropertySource {\n\t\tconst obs = observableSignalFromEvent('onMarkerChanged', this.markerService.onMarkerChanged);\n\t\treturn new TextPropertySource({\n\t\t\tisPresentAtPosition: (position, reader) => {\n\t\t\t\tobs.read(reader);\n\t\t\t\tconst hasMarker = this.markerService\n\t\t\t\t\t.read({ resource: model.uri })\n\t\t\t\t\t.some(\n\t\t\t\t\t\t(m) =>\n\t\t\t\t\t\t\tm.severity === this.severity &&\n\t\t\t\t\t\t\tm.startLineNumber <= position.lineNumber &&\n\t\t\t\t\t\t\tposition.lineNumber <= m.endLineNumber &&\n\t\t\t\t\t\t\tm.startColumn <= position.column &&\n\t\t\t\t\t\t\tposition.column <= m.endColumn\n\t\t\t\t\t);\n\t\t\t\treturn hasMarker;\n\t\t\t},\n\t\t\tisPresentOnLine: (lineNumber, reader) => {\n\t\t\t\tobs.read(reader);\n\t\t\t\tconst hasMarker = this.markerService\n\t\t\t\t\t.read({ resource: model.uri })\n\t\t\t\t\t.some(\n\t\t\t\t\t\t(m) =>\n\t\t\t\t\t\t\tm.severity === this.severity &&\n\t\t\t\t\t\t\tm.startLineNumber <= lineNumber &&\n\t\t\t\t\t\t\tlineNumber <= m.endLineNumber\n\t\t\t\t\t);\n\t\t\t\treturn hasMarker;\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass FoldedAreaTextProperty implements TextProperty {\n\tpublic readonly lineSignal = AccessibilitySignal.foldedArea;\n\n\tcreateSource(editor: ICodeEditor, _model: ITextModel): TextPropertySource {\n\t\tconst foldingController = FoldingController.get(editor);\n\t\tif (!foldingController) { return TextPropertySource.notPresent; }\n\n\t\tconst foldingModel = observableFromPromise(foldingController.getFoldingModel() ?? Promise.resolve(undefined));\n\t\treturn new TextPropertySource({\n\t\t\tisPresentOnLine(lineNumber, reader): boolean {\n\t\t\t\tconst m = foldingModel.read(reader);\n\t\t\t\tconst regionAtLine = m.value?.getRegionAtLine(lineNumber);\n\t\t\t\tconst hasFolding = !regionAtLine\n\t\t\t\t\t? false\n\t\t\t\t\t: regionAtLine.isCollapsed &&\n\t\t\t\t\tregionAtLine.startLineNumber === lineNumber;\n\t\t\t\treturn hasFolding;\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass BreakpointTextProperty implements TextProperty {\n\tpublic readonly lineSignal = AccessibilitySignal.break;\n\n\tconstructor(@IDebugService private readonly debugService: IDebugService) { }\n\n\tcreateSource(editor: ICodeEditor, model: ITextModel): TextPropertySource {\n\t\tconst signal = observableSignalFromEvent('onDidChangeBreakpoints', this.debugService.getModel().onDidChangeBreakpoints);\n\t\tconst debugService = this.debugService;\n\t\treturn new TextPropertySource({\n\t\t\tisPresentOnLine(lineNumber, reader): boolean {\n\t\t\t\tsignal.read(reader);\n\t\t\t\tconst breakpoints = debugService\n\t\t\t\t\t.getModel()\n\t\t\t\t\t.getBreakpoints({ uri: model.uri, lineNumber });\n\t\t\t\tconst hasBreakpoints = breakpoints.length > 0;\n\t\t\t\treturn hasBreakpoints;\n\t\t\t}\n\t\t});\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,yBAAyB;AAClC,SAAS,YAAY,uBAAuB;AAC5C,SAAS,SAAS,SAAS,kBAAkB,SAAS,qBAAqB,uBAAuB,oCAAoC,2BAA2B,iCAAiC;AAClM,SAAS,iBAAiB;AAC1B,SAAS,aAAa,cAAc,oBAAoB;AACxD,SAAS,gBAAgB;AACzB,SAAS,0BAA0B;AACnC,SAAS,kBAAkB;AAC3B,SAAS,yBAAyB;AAClC,SAAS,uBAAuB,qBAAqB,mCAAmC;AACxF,SAAS,6BAA6B;AACtC,SAAS,gBAAgB,sBAAsB;AAC/C,SAAS,8BAA8B;AACvC,SAAS,sBAAsB;AAC/B,SAAS,qBAAqB;AAEvB,IAAM,wCAAN,cAAoD,WAA6C;AAAA,EA8BvG,YACkC,gBACO,uBACM,6BAC7C;AACD,UAAM;AAJ2B;AACO;AACM;AAI9C,SAAK,UAAU,iBAAiB,CAAC,QAAQ,UAAU;AAElD,UAAI,CAAC,KAAK,kCAAkC,KAAK,MAAM,GAAG;AACzD;AAAA,MACD;AACA,YAAM,eAAe,KAAK,wBAAwB,KAAK,MAAM;AAC7D,UAAI,cAAc;AACjB,aAAK,uCAAuC,aAAa,QAAQ,aAAa,OAAO,KAAK;AAAA,MAC3F;AAAA,IACD,CAAC,CAAC;AAAA,EACH;AAAA,EApED,OAqBwG;AAAA;AAAA;AAAA,EACtF,kBAAkC;AAAA,IAClD,KAAK,sBAAsB,eAAe,oBAAoB,oBAAoB,iBAAiB,oBAAoB,aAAa,eAAe,KAAK;AAAA,IACxJ,KAAK,sBAAsB,eAAe,oBAAoB,oBAAoB,mBAAmB,oBAAoB,eAAe,eAAe,OAAO;AAAA,IAC9J,KAAK,sBAAsB,eAAe,sBAAsB;AAAA,IAChE,KAAK,sBAAsB,eAAe,sBAAsB;AAAA,EACjE;AAAA,EAEiB,oCAAoC;AAAA,IAAQ;AAAA,IAAM,YAClE,KAAK,gBACH,QAAQ,OAAK,CAAC,EAAE,YAAY,EAAE,cAAc,CAAC,EAC7C,OAAO,SAAS,EAChB,KAAK,YAAU,mCAAmC,MAAM,KAAK,4BAA4B,gBAAgB,QAAQ,KAAK,CAAC,EAAE,KAAK,MAAM,CAAC;AAAA,EACxI;AAAA,EAEiB,0BAA0B;AAAA,IAAoB;AAAA,IAC9D,KAAK,eAAe;AAAA,IACpB,CAAC,MAAM;AACN,YAAM,0BAA0B,KAAK,eAAe;AAEpD,YAAM,SAAS,aAAa,uBAAuB,IAChD,wBAAwB,kBAAkB,IAC1C,aAAa,uBAAuB,IACnC,0BACA;AAEJ,aAAO,UAAU,OAAO,SAAS,IAAI,EAAE,QAAQ,OAAO,OAAO,SAAS,EAAE,IAAI;AAAA,IAC7E;AAAA,EACD;AAAA,EAqBQ,uCAAuC,QAAqB,aAAyB,OAA8B;AAC1H,QAAI,WAAW;AACf,UAAM,mCAAmC,oBAAI,IAAkB;AAE/D,UAAM,WAAW,MAAM,IAAI,IAAI,gBAAgB,CAAC;AAEhD,UAAM,kBAAkB,KAAK,gBAAgB,IAAI,QAAM,EAAE,QAAQ,EAAE,aAAa,QAAQ,WAAW,GAAG,UAAU,EAAE,EAAE;AAEpH,UAAM,UAAU,0BAA0B,OAAO,yBAAyB,KAAK,KAAK;AAEpF,UAAM,IAAI,OAAO,0BAA0B,UAAQ;AAClD,eAAS,MAAM;AAEf,UACC,QACA,KAAK,WAAW,mBAAmB,YACnC,KAAK,WAAW,mBAAmB,QAClC;AAED,yCAAiC,MAAM;AACvC;AAAA,MACD;AAEA,YAAM,UAAU,wBAAC,UAAwB,QAA4B,SAAgC;AACpG,cAAM,SAAS,SAAS,SAAS,SAAS,aAAa,SAAS;AAChE,YACC,CAAC,UACE,CAAC,KAAK,4BAA4B,gBAAgB,QAAQ,KAAK,EAAE,SACjE,CAAC,OAAO,UAAU,UAAU,MAAM,MAAS,GAC7C;AACD;AAAA,QACD;AAEA,mBAAW,YAAY,CAAC,SAAS,cAAc,GAA8B;AAC5E,cAAI,KAAK,4BAA4B,gBAAgB,QAAQ,OAAO,QAAQ,EAAE,OAAO;AACpF,kBAAM,QAAQ,KAAK,4BAA4B,WAAW,QAAQ,UAAU,IAAI,KAAK,QAAQ,IAAI,IAAI,MAAO;AAE5G,qBAAS,IAAI,kBAAkB,MAAM;AACpC,kBAAI,OAAO,UAAU,UAAU,MAAM,MAAS,GAAG;AAChD,oBAAI,EAAE,SAAS,WAAW,CAAC,iCAAiC,IAAI,QAAQ,GAAG;AAC1E,uBAAK,4BAA4B,WAAW,QAAQ,EAAE,SAAS,CAAC;AAAA,gBACjE;AACA,iDAAiC,IAAI,QAAQ;AAAA,cAC9C;AAAA,YACD,GAAG,KAAK,CAAC;AAAA,UACV;AAAA,QACD;AAAA,MACD,GAxBgB;AA2BhB,YAAM,WAAW,KAAK;AACtB,YAAM,aAAa,SAAS;AAC5B,UAAI,eAAe,UAAU;AAC5B,yCAAiC,MAAM;AACvC,mBAAW;AACX,mBAAW,KAAK,iBAAiB;AAChC,kBAAQ,EAAE,UAAU,EAAE,QAAQ,MAAM;AAAA,QACrC;AAAA,MACD;AACA,iBAAW,KAAK,iBAAiB;AAChC,gBAAQ,EAAE,UAAU,EAAE,QAAQ,YAAY;AAAA,MAC3C;AAGA,iBAAW,KAAK,iBAAiB;AAChC,YACC,CAAC,CAAC,EAAE,SAAS,YAAY,EAAE,SAAS,cAAc,EAChD,KAAK,CAAAA,OAAKA,MAAK,KAAK,4BAA4B,gBAAgBA,IAAG,KAAK,EAAE,KAAK,GAChF;AACD;AAAA,QACD;AAEA,YAAI,sBAA2C;AAC/C,YAAI,kBAAuC;AAC3C,iBAAS,IAAI,QAAQ,YAAU;AAC9B,gBAAM,qBAAqB,EAAE,OAAO,oBAAoB,KAAK,UAAU,MAAM;AAC7E,gBAAM,iBAAiB,EAAE,OAAO,gBAAgB,KAAK,SAAS,YAAY,MAAM;AAEhF,cAAI,wBAAwB,UAAa,wBAAwB,QAAW;AAC3E,gBAAI,CAAC,uBAAuB,oBAAoB;AAC/C,sBAAQ,EAAE,UAAU,EAAE,QAAQ,YAAY;AAAA,YAC3C;AACA,gBAAI,CAAC,mBAAmB,gBAAgB;AACvC,sBAAQ,EAAE,UAAU,EAAE,QAAQ,MAAM;AAAA,YACrC;AAAA,UACD;AAEA,gCAAsB;AACtB,4BAAkB;AAAA,QACnB,CAAC,CAAC;AAAA,MACH;AAAA,IACD,CAAC,CAAC;AAAA,EACH;AACD;AA9Ia,wCAAN;AAAA,EA+BJ;AAAA,EACA;AAAA,EACA;AAAA,GAjCU;AAuJb,MAAM,mBAAmB;AAAA,EA5KzB,OA4KyB;AAAA;AAAA;AAAA,EACxB,OAAc,aAAa,IAAI,mBAAmB,EAAE,qBAAqB,6BAAM,OAAN,wBAAa,iBAAiB,6BAAM,OAAN,mBAAY,CAAC;AAAA,EAEpG;AAAA,EACA;AAAA,EAEhB,YAAY,SAGT;AACF,SAAK,kBAAkB,QAAQ;AAC/B,SAAK,sBAAsB,QAAQ,wBAAwB,MAAM;AAAA,EAClE;AAAA,EAEO,UAAU,UAAoB,MAA6B,QAAsC;AACvG,WAAO,SAAS,SAAS,KAAK,gBAAgB,SAAS,YAAY,MAAM,IAAI,KAAK,oBAAoB,UAAU,MAAM;AAAA,EACvH;AACD;AAEA,IAAM,qBAAN,MAAiD;AAAA,EAEhD,YACiB,gBACA,YACC,UACgB,eAEhC;AALe;AACA;AACC;AACgB;AAAA,EAE9B;AAAA,EAvML,OA+LiD;AAAA;AAAA;AAAA,EAChC,sBAAsB;AAAA,EAStC,aAAa,QAAqB,OAAuC;AACxE,UAAM,MAAM,0BAA0B,mBAAmB,KAAK,cAAc,eAAe;AAC3F,WAAO,IAAI,mBAAmB;AAAA,MAC7B,qBAAqB,wBAAC,UAAU,WAAW;AAC1C,YAAI,KAAK,MAAM;AACf,cAAM,YAAY,KAAK,cACrB,KAAK,EAAE,UAAU,MAAM,IAAI,CAAC,EAC5B;AAAA,UACA,CAAC,MACA,EAAE,aAAa,KAAK,YACpB,EAAE,mBAAmB,SAAS,cAC9B,SAAS,cAAc,EAAE,iBACzB,EAAE,eAAe,SAAS,UAC1B,SAAS,UAAU,EAAE;AAAA,QACvB;AACD,eAAO;AAAA,MACR,GAbqB;AAAA,MAcrB,iBAAiB,wBAAC,YAAY,WAAW;AACxC,YAAI,KAAK,MAAM;AACf,cAAM,YAAY,KAAK,cACrB,KAAK,EAAE,UAAU,MAAM,IAAI,CAAC,EAC5B;AAAA,UACA,CAAC,MACA,EAAE,aAAa,KAAK,YACpB,EAAE,mBAAmB,cACrB,cAAc,EAAE;AAAA,QAClB;AACD,eAAO;AAAA,MACR,GAXiB;AAAA,IAYlB,CAAC;AAAA,EACF;AACD;AAzCM,qBAAN;AAAA,EAMG;AAAA,GANG;AA2CN,MAAM,uBAA+C;AAAA,EA1OrD,OA0OqD;AAAA;AAAA;AAAA,EACpC,aAAa,oBAAoB;AAAA,EAEjD,aAAa,QAAqB,QAAwC;AACzE,UAAM,oBAAoB,kBAAkB,IAAI,MAAM;AACtD,QAAI,CAAC,mBAAmB;AAAE,aAAO,mBAAmB;AAAA,IAAY;AAEhE,UAAM,eAAe,sBAAsB,kBAAkB,gBAAgB,KAAK,QAAQ,QAAQ,MAAS,CAAC;AAC5G,WAAO,IAAI,mBAAmB;AAAA,MAC7B,gBAAgB,YAAY,QAAiB;AAC5C,cAAM,IAAI,aAAa,KAAK,MAAM;AAClC,cAAM,eAAe,EAAE,OAAO,gBAAgB,UAAU;AACxD,cAAM,aAAa,CAAC,eACjB,QACA,aAAa,eACf,aAAa,oBAAoB;AAClC,eAAO;AAAA,MACR;AAAA,IACD,CAAC;AAAA,EACF;AACD;AAEA,IAAM,yBAAN,MAAqD;AAAA,EAGpD,YAA4C,cAA6B;AAA7B;AAAA,EAA+B;AAAA,EAnQ5E,OAgQqD;AAAA;AAAA;AAAA,EACpC,aAAa,oBAAoB;AAAA,EAIjD,aAAa,QAAqB,OAAuC;AACxE,UAAM,SAAS,0BAA0B,0BAA0B,KAAK,aAAa,SAAS,EAAE,sBAAsB;AACtH,UAAM,eAAe,KAAK;AAC1B,WAAO,IAAI,mBAAmB;AAAA,MAC7B,gBAAgB,YAAY,QAAiB;AAC5C,eAAO,KAAK,MAAM;AAClB,cAAM,cAAc,aAClB,SAAS,EACT,eAAe,EAAE,KAAK,MAAM,KAAK,WAAW,CAAC;AAC/C,cAAM,iBAAiB,YAAY,SAAS;AAC5C,eAAO;AAAA,MACR;AAAA,IACD,CAAC;AAAA,EACF;AACD;AAnBM,yBAAN;AAAA,EAGc;AAAA,GAHR;",
  "names": ["s"]
}
