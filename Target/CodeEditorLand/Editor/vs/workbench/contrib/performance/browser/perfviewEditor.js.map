{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/performance/browser/perfviewEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../../nls.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { TextResourceEditorInput } from '../../../common/editor/textResourceEditorInput.js';\nimport { ITextModelService, ITextModelContentProvider } from '../../../../editor/common/services/resolverService.js';\nimport { ITextModel } from '../../../../editor/common/model.js';\nimport { ILifecycleService, LifecyclePhase, StartupKindToString } from '../../../services/lifecycle/common/lifecycle.js';\nimport { ILanguageService } from '../../../../editor/common/languages/language.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IModelService } from '../../../../editor/common/services/model.js';\nimport { ITimerService } from '../../../services/timer/browser/timerService.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { IDisposable, dispose } from '../../../../base/common/lifecycle.js';\nimport { ICodeEditorService } from '../../../../editor/browser/services/codeEditorService.js';\nimport { writeTransientState } from '../../codeEditor/browser/toggleWordWrap.js';\nimport { LoaderEventType, LoaderStats, isESM } from '../../../../base/common/amd.js';\nimport { IProductService } from '../../../../platform/product/common/productService.js';\nimport { ITextFileService } from '../../../services/textfile/common/textfiles.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { ByteSize, IFileService } from '../../../../platform/files/common/files.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { isWeb } from '../../../../base/common/platform.js';\nimport { IFilesConfigurationService } from '../../../services/filesConfiguration/common/filesConfigurationService.js';\nimport { ITerminalService } from '../../terminal/browser/terminal.js';\nimport * as perf from '../../../../base/common/performance.js';\nimport { ITextResourceConfigurationService } from '../../../../editor/common/services/textResourceConfiguration.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions, getWorkbenchContribution } from '../../../common/contributions.js';\nimport { ICustomEditorLabelService } from '../../../services/editor/common/customEditorLabelService.js';\n\nexport class PerfviewContrib {\n\n\tstatic get() {\n\t\treturn getWorkbenchContribution<PerfviewContrib>(PerfviewContrib.ID);\n\t}\n\n\tstatic readonly ID = 'workbench.contrib.perfview';\n\n\tprivate readonly _inputUri = URI.from({ scheme: 'perf', path: 'Startup Performance' });\n\tprivate readonly _registration: IDisposable;\n\n\tconstructor(\n\t\t@IInstantiationService private readonly _instaService: IInstantiationService,\n\t\t@ITextModelService textModelResolverService: ITextModelService\n\t) {\n\t\tthis._registration = textModelResolverService.registerTextModelContentProvider('perf', _instaService.createInstance(PerfModelContentProvider));\n\t}\n\n\tdispose(): void {\n\t\tthis._registration.dispose();\n\t}\n\n\tgetInputUri(): URI {\n\t\treturn this._inputUri;\n\t}\n\n\tgetEditorInput(): PerfviewInput {\n\t\treturn this._instaService.createInstance(PerfviewInput);\n\t}\n}\n\nexport class PerfviewInput extends TextResourceEditorInput {\n\n\tstatic readonly Id = 'PerfviewInput';\n\n\toverride get typeId(): string {\n\t\treturn PerfviewInput.Id;\n\t}\n\n\tconstructor(\n\t\t@ITextModelService textModelResolverService: ITextModelService,\n\t\t@ITextFileService textFileService: ITextFileService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IFilesConfigurationService filesConfigurationService: IFilesConfigurationService,\n\t\t@ITextResourceConfigurationService textResourceConfigurationService: ITextResourceConfigurationService,\n\t\t@ICustomEditorLabelService customEditorLabelService: ICustomEditorLabelService\n\t) {\n\t\tsuper(\n\t\t\tPerfviewContrib.get().getInputUri(),\n\t\t\tlocalize('name', \"Startup Performance\"),\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\ttextModelResolverService,\n\t\t\ttextFileService,\n\t\t\teditorService,\n\t\t\tfileService,\n\t\t\tlabelService,\n\t\t\tfilesConfigurationService,\n\t\t\ttextResourceConfigurationService,\n\t\t\tcustomEditorLabelService\n\t\t);\n\t}\n}\n\nclass PerfModelContentProvider implements ITextModelContentProvider {\n\n\tprivate _model: ITextModel | undefined;\n\tprivate _modelDisposables: IDisposable[] = [];\n\n\tconstructor(\n\t\t@IModelService private readonly _modelService: IModelService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@ICodeEditorService private readonly _editorService: ICodeEditorService,\n\t\t@ILifecycleService private readonly _lifecycleService: ILifecycleService,\n\t\t@ITimerService private readonly _timerService: ITimerService,\n\t\t@IExtensionService private readonly _extensionService: IExtensionService,\n\t\t@IProductService private readonly _productService: IProductService,\n\t\t@ITerminalService private readonly _terminalService: ITerminalService\n\t) { }\n\n\tprovideTextContent(resource: URI): Promise<ITextModel> {\n\n\t\tif (!this._model || this._model.isDisposed()) {\n\t\t\tdispose(this._modelDisposables);\n\t\t\tconst langId = this._languageService.createById('markdown');\n\t\t\tthis._model = this._modelService.getModel(resource) || this._modelService.createModel('Loading...', langId, resource);\n\n\t\t\tthis._modelDisposables.push(langId.onDidChange(e => {\n\t\t\t\tthis._model?.setLanguage(e);\n\t\t\t}));\n\t\t\tthis._modelDisposables.push(this._extensionService.onDidChangeExtensionsStatus(this._updateModel, this));\n\n\t\t\twriteTransientState(this._model, { wordWrapOverride: 'off' }, this._editorService);\n\t\t}\n\t\tthis._updateModel();\n\t\treturn Promise.resolve(this._model);\n\t}\n\n\tprivate _updateModel(): void {\n\n\t\tPromise.all([\n\t\t\tthis._timerService.whenReady(),\n\t\t\tthis._lifecycleService.when(LifecyclePhase.Eventually),\n\t\t\tthis._extensionService.whenInstalledExtensionsRegistered(),\n\t\t\tthis._terminalService.whenConnected\n\t\t]).then(() => {\n\t\t\tif (this._model && !this._model.isDisposed()) {\n\n\t\t\t\tconst stats = LoaderStats.get();\n\t\t\t\tconst md = new MarkdownBuilder();\n\t\t\t\tthis._addSummary(md);\n\t\t\t\tmd.blank();\n\t\t\t\tthis._addSummaryTable(md, stats);\n\t\t\t\tmd.blank();\n\t\t\t\tthis._addExtensionsTable(md);\n\t\t\t\tmd.blank();\n\t\t\t\tthis._addPerfMarksTable('Terminal Stats', md, this._timerService.getPerformanceMarks().find(e => e[0] === 'renderer')?.[1].filter(e => e.name.startsWith('code/terminal/')));\n\t\t\t\tmd.blank();\n\t\t\t\tthis._addWorkbenchContributionsPerfMarksTable(md);\n\t\t\t\tmd.blank();\n\t\t\t\tthis._addRawPerfMarks(md);\n\t\t\t\tif (!isESM) {\n\t\t\t\t\tmd.blank();\n\t\t\t\t\tthis._addLoaderStats(md, stats);\n\t\t\t\t\tmd.blank();\n\t\t\t\t\tthis._addCachedDataStats(md);\n\t\t\t\t}\n\t\t\t\tmd.blank();\n\t\t\t\tthis._addResourceTimingStats(md);\n\n\t\t\t\tthis._model.setValue(md.value);\n\t\t\t}\n\t\t});\n\n\t}\n\n\tprivate _addSummary(md: MarkdownBuilder): void {\n\t\tconst metrics = this._timerService.startupMetrics;\n\t\tmd.heading(2, 'System Info');\n\t\tmd.li(`${this._productService.nameShort}: ${this._productService.version} (${this._productService.commit || '0000000'})`);\n\t\tmd.li(`OS: ${metrics.platform}(${metrics.release})`);\n\t\tif (metrics.cpus) {\n\t\t\tmd.li(`CPUs: ${metrics.cpus.model}(${metrics.cpus.count} x ${metrics.cpus.speed})`);\n\t\t}\n\t\tif (typeof metrics.totalmem === 'number' && typeof metrics.freemem === 'number') {\n\t\t\tmd.li(`Memory(System): ${(metrics.totalmem / (ByteSize.GB)).toFixed(2)} GB(${(metrics.freemem / (ByteSize.GB)).toFixed(2)}GB free)`);\n\t\t}\n\t\tif (metrics.meminfo) {\n\t\t\tmd.li(`Memory(Process): ${(metrics.meminfo.workingSetSize / ByteSize.KB).toFixed(2)} MB working set(${(metrics.meminfo.privateBytes / ByteSize.KB).toFixed(2)}MB private, ${(metrics.meminfo.sharedBytes / ByteSize.KB).toFixed(2)}MB shared)`);\n\t\t}\n\t\tmd.li(`VM(likelihood): ${metrics.isVMLikelyhood}%`);\n\t\tmd.li(`Initial Startup: ${metrics.initialStartup}`);\n\t\tmd.li(`Has ${metrics.windowCount - 1} other windows`);\n\t\tmd.li(`Screen Reader Active: ${metrics.hasAccessibilitySupport}`);\n\t\tmd.li(`Empty Workspace: ${metrics.emptyWorkbench}`);\n\t}\n\n\tprivate _addSummaryTable(md: MarkdownBuilder, stats?: LoaderStats): void {\n\n\t\tconst metrics = this._timerService.startupMetrics;\n\t\tconst contribTimings = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).timings;\n\n\t\tconst table: Array<Array<string | number | undefined>> = [];\n\t\ttable.push(['start => app.isReady', metrics.timers.ellapsedAppReady, '[main]', `initial startup: ${metrics.initialStartup}`]);\n\t\ttable.push(['nls:start => nls:end', metrics.timers.ellapsedNlsGeneration, '[main]', `initial startup: ${metrics.initialStartup}`]);\n\t\ttable.push(['import(main.bundle.js)', metrics.timers.ellapsedLoadMainBundle, '[main]', `initial startup: ${metrics.initialStartup}`]);\n\t\ttable.push(['start crash reporter', metrics.timers.ellapsedCrashReporter, '[main]', `initial startup: ${metrics.initialStartup}`]);\n\t\ttable.push(['serve main IPC handle', metrics.timers.ellapsedMainServer, '[main]', `initial startup: ${metrics.initialStartup}`]);\n\t\ttable.push(['create window', metrics.timers.ellapsedWindowCreate, '[main]', `initial startup: ${metrics.initialStartup}, ${metrics.initialStartup ? `state: ${metrics.timers.ellapsedWindowRestoreState}ms, widget: ${metrics.timers.ellapsedBrowserWindowCreate}ms, show: ${metrics.timers.ellapsedWindowMaximize}ms` : ''}`]);\n\t\ttable.push(['app.isReady => window.loadUrl()', metrics.timers.ellapsedWindowLoad, '[main]', `initial startup: ${metrics.initialStartup}`]);\n\t\ttable.push(['window.loadUrl() => begin to import(workbench.desktop.main.js)', metrics.timers.ellapsedWindowLoadToRequire, '[main->renderer]', StartupKindToString(metrics.windowKind)]);\n\t\ttable.push(['import(workbench.desktop.main.js)', metrics.timers.ellapsedRequire, '[renderer]', `cached data: ${(metrics.didUseCachedData ? 'YES' : 'NO')}${stats ? `, node_modules took ${stats.nodeRequireTotal}ms` : ''}`]);\n\t\ttable.push(['wait for window config', metrics.timers.ellapsedWaitForWindowConfig, '[renderer]', undefined]);\n\t\ttable.push(['init storage (global & workspace)', metrics.timers.ellapsedStorageInit, '[renderer]', undefined]);\n\t\ttable.push(['init workspace service', metrics.timers.ellapsedWorkspaceServiceInit, '[renderer]', undefined]);\n\t\tif (isWeb) {\n\t\t\ttable.push(['init settings and global state from settings sync service', metrics.timers.ellapsedRequiredUserDataInit, '[renderer]', undefined]);\n\t\t\ttable.push(['init keybindings, snippets & extensions from settings sync service', metrics.timers.ellapsedOtherUserDataInit, '[renderer]', undefined]);\n\t\t}\n\t\ttable.push(['register extensions & spawn extension host', metrics.timers.ellapsedExtensions, '[renderer]', undefined]);\n\t\ttable.push(['restore viewlet', metrics.timers.ellapsedViewletRestore, '[renderer]', metrics.viewletId]);\n\t\ttable.push(['restore panel', metrics.timers.ellapsedPanelRestore, '[renderer]', metrics.panelId]);\n\t\ttable.push(['restore & resolve visible editors', metrics.timers.ellapsedEditorRestore, '[renderer]', `${metrics.editorIds.length}: ${metrics.editorIds.join(', ')}`]);\n\t\ttable.push(['create workbench contributions', metrics.timers.ellapsedWorkbenchContributions, '[renderer]', `${(contribTimings.get(LifecyclePhase.Starting)?.length ?? 0) + (contribTimings.get(LifecyclePhase.Starting)?.length ?? 0)} blocking startup`]);\n\t\ttable.push(['overall workbench load', metrics.timers.ellapsedWorkbench, '[renderer]', undefined]);\n\t\ttable.push(['workbench ready', metrics.ellapsed, '[main->renderer]', undefined]);\n\t\ttable.push(['renderer ready', metrics.timers.ellapsedRenderer, '[renderer]', undefined]);\n\t\ttable.push(['shared process connection ready', metrics.timers.ellapsedSharedProcesConnected, '[renderer->sharedprocess]', undefined]);\n\t\ttable.push(['extensions registered', metrics.timers.ellapsedExtensionsReady, '[renderer]', undefined]);\n\n\t\tmd.heading(2, 'Performance Marks');\n\t\tmd.table(['What', 'Duration', 'Process', 'Info'], table);\n\t}\n\n\tprivate _addExtensionsTable(md: MarkdownBuilder): void {\n\n\t\tconst eager: ({ toString(): string })[][] = [];\n\t\tconst normal: ({ toString(): string })[][] = [];\n\t\tconst extensionsStatus = this._extensionService.getExtensionsStatus();\n\t\tfor (const id in extensionsStatus) {\n\t\t\tconst { activationTimes: times } = extensionsStatus[id];\n\t\t\tif (!times) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (times.activationReason.startup) {\n\t\t\t\teager.push([id, times.activationReason.startup, times.codeLoadingTime, times.activateCallTime, times.activateResolvedTime, times.activationReason.activationEvent, times.activationReason.extensionId.value]);\n\t\t\t} else {\n\t\t\t\tnormal.push([id, times.activationReason.startup, times.codeLoadingTime, times.activateCallTime, times.activateResolvedTime, times.activationReason.activationEvent, times.activationReason.extensionId.value]);\n\t\t\t}\n\t\t}\n\n\t\tconst table = eager.concat(normal);\n\t\tif (table.length > 0) {\n\t\t\tmd.heading(2, 'Extension Activation Stats');\n\t\t\tmd.table(\n\t\t\t\t['Extension', 'Eager', 'Load Code', 'Call Activate', 'Finish Activate', 'Event', 'By'],\n\t\t\t\ttable\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _addPerfMarksTable(name: string | undefined, md: MarkdownBuilder, marks: readonly perf.PerformanceMark[] | undefined): void {\n\t\tif (!marks) {\n\t\t\treturn;\n\t\t}\n\t\tconst table: Array<Array<string | number | undefined>> = [];\n\t\tlet lastStartTime = -1;\n\t\tlet total = 0;\n\t\tfor (const { name, startTime } of marks) {\n\t\t\tconst delta = lastStartTime !== -1 ? startTime - lastStartTime : 0;\n\t\t\ttotal += delta;\n\t\t\ttable.push([name, Math.round(startTime), Math.round(delta), Math.round(total)]);\n\t\t\tlastStartTime = startTime;\n\t\t}\n\t\tif (name) {\n\t\t\tmd.heading(2, name);\n\t\t}\n\t\tmd.table(['Name', 'Timestamp', 'Delta', 'Total'], table);\n\t}\n\n\tprivate _addWorkbenchContributionsPerfMarksTable(md: MarkdownBuilder): void {\n\t\tmd.heading(2, 'Workbench Contributions Blocking Restore');\n\n\t\tconst timings = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).timings;\n\t\tmd.li(`Total (LifecyclePhase.Starting): ${timings.get(LifecyclePhase.Starting)?.length} (${timings.get(LifecyclePhase.Starting)?.reduce((p, c) => p + c[1], 0)}ms)`);\n\t\tmd.li(`Total (LifecyclePhase.Ready): ${timings.get(LifecyclePhase.Ready)?.length} (${timings.get(LifecyclePhase.Ready)?.reduce((p, c) => p + c[1], 0)}ms)`);\n\t\tmd.blank();\n\n\t\tconst marks = this._timerService.getPerformanceMarks().find(e => e[0] === 'renderer')?.[1].filter(e =>\n\t\t\te.name.startsWith('code/willCreateWorkbenchContribution/1') ||\n\t\t\te.name.startsWith('code/didCreateWorkbenchContribution/1') ||\n\t\t\te.name.startsWith('code/willCreateWorkbenchContribution/2') ||\n\t\t\te.name.startsWith('code/didCreateWorkbenchContribution/2')\n\t\t);\n\t\tthis._addPerfMarksTable(undefined, md, marks);\n\t}\n\n\tprivate _addRawPerfMarks(md: MarkdownBuilder): void {\n\n\t\tfor (const [source, marks] of this._timerService.getPerformanceMarks()) {\n\t\t\tmd.heading(2, `Raw Perf Marks: ${source}`);\n\t\t\tmd.value += '```\\n';\n\t\t\tmd.value += `Name\\tTimestamp\\tDelta\\tTotal\\n`;\n\t\t\tlet lastStartTime = -1;\n\t\t\tlet total = 0;\n\t\t\tfor (const { name, startTime } of marks) {\n\t\t\t\tconst delta = lastStartTime !== -1 ? startTime - lastStartTime : 0;\n\t\t\t\ttotal += delta;\n\t\t\t\tmd.value += `${name}\\t${startTime}\\t${delta}\\t${total}\\n`;\n\t\t\t\tlastStartTime = startTime;\n\t\t\t}\n\t\t\tmd.value += '```\\n';\n\t\t}\n\t}\n\n\tprivate _addLoaderStats(md: MarkdownBuilder, stats: LoaderStats): void {\n\t\tmd.heading(2, 'Loader Stats');\n\t\tmd.heading(3, 'Load AMD-module');\n\t\tmd.table(['Module', 'Duration'], stats.amdLoad);\n\t\tmd.blank();\n\t\tmd.heading(3, 'Load commonjs-module');\n\t\tmd.table(['Module', 'Duration'], stats.nodeRequire);\n\t\tmd.blank();\n\t\tmd.heading(3, 'Invoke AMD-module factory');\n\t\tmd.table(['Module', 'Duration'], stats.amdInvoke);\n\t\tmd.blank();\n\t\tmd.heading(3, 'Invoke commonjs-module');\n\t\tmd.table(['Module', 'Duration'], stats.nodeEval);\n\t}\n\n\tprivate _addCachedDataStats(md: MarkdownBuilder): void {\n\n\t\tconst map = new Map<LoaderEventType, string[]>();\n\t\tmap.set(LoaderEventType.CachedDataCreated, []);\n\t\tmap.set(LoaderEventType.CachedDataFound, []);\n\t\tmap.set(LoaderEventType.CachedDataMissed, []);\n\t\tmap.set(LoaderEventType.CachedDataRejected, []);\n\t\tif (!isESM && typeof require.getStats === 'function') {\n\t\t\tfor (const stat of require.getStats()) {\n\t\t\t\tif (map.has(stat.type)) {\n\t\t\t\t\tmap.get(stat.type)!.push(stat.detail);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst printLists = (arr?: string[]) => {\n\t\t\tif (arr) {\n\t\t\t\tarr.sort();\n\t\t\t\tfor (const e of arr) {\n\t\t\t\t\tmd.li(`${e}`);\n\t\t\t\t}\n\t\t\t\tmd.blank();\n\t\t\t}\n\t\t};\n\n\t\tmd.heading(2, 'Node Cached Data Stats');\n\t\tmd.blank();\n\t\tmd.heading(3, 'cached data used');\n\t\tprintLists(map.get(LoaderEventType.CachedDataFound));\n\t\tmd.heading(3, 'cached data missed');\n\t\tprintLists(map.get(LoaderEventType.CachedDataMissed));\n\t\tmd.heading(3, 'cached data rejected');\n\t\tprintLists(map.get(LoaderEventType.CachedDataRejected));\n\t\tmd.heading(3, 'cached data created (lazy, might need refreshes)');\n\t\tprintLists(map.get(LoaderEventType.CachedDataCreated));\n\t}\n\n\tprivate _addResourceTimingStats(md: MarkdownBuilder) {\n\t\tconst stats = performance.getEntriesByType('resource').map(entry => {\n\t\t\treturn [entry.name, entry.duration];\n\t\t});\n\t\tif (!stats.length) {\n\t\t\treturn;\n\t\t}\n\t\tmd.heading(2, 'Resource Timing Stats');\n\t\tmd.table(['Name', 'Duration'], stats);\n\t}\n}\n\nclass MarkdownBuilder {\n\n\tvalue: string = '';\n\n\theading(level: number, value: string): this {\n\t\tthis.value += `${'#'.repeat(level)} ${value}\\n\\n`;\n\t\treturn this;\n\t}\n\n\tblank() {\n\t\tthis.value += '\\n';\n\t\treturn this;\n\t}\n\n\tli(value: string) {\n\t\tthis.value += `* ${value}\\n`;\n\t\treturn this;\n\t}\n\n\ttable(header: string[], rows: Array<Array<{ toString(): string } | undefined>>) {\n\t\tthis.value += LoaderStats.toMarkdownTable(header, rows);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["name"]
}
