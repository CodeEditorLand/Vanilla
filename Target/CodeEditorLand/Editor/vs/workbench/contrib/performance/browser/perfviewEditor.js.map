{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/performance/browser/perfviewEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tLoaderEventType,\n\tLoaderStats,\n\tisESM,\n} from \"../../../../base/common/amd.js\";\nimport {\n\ttype IDisposable,\n\tdispose,\n} from \"../../../../base/common/lifecycle.js\";\nimport type * as perf from \"../../../../base/common/performance.js\";\nimport { isWeb } from \"../../../../base/common/platform.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { ICodeEditorService } from \"../../../../editor/browser/services/codeEditorService.js\";\nimport { ILanguageService } from \"../../../../editor/common/languages/language.js\";\nimport type { ITextModel } from \"../../../../editor/common/model.js\";\nimport { IModelService } from \"../../../../editor/common/services/model.js\";\nimport {\n\ttype ITextModelContentProvider,\n\tITextModelService,\n} from \"../../../../editor/common/services/resolverService.js\";\nimport { ITextResourceConfigurationService } from \"../../../../editor/common/services/textResourceConfiguration.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\tByteSize,\n\tIFileService,\n} from \"../../../../platform/files/common/files.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ILabelService } from \"../../../../platform/label/common/label.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\ttype IWorkbenchContributionsRegistry,\n\tExtensions as WorkbenchExtensions,\n\tgetWorkbenchContribution,\n} from \"../../../common/contributions.js\";\nimport { TextResourceEditorInput } from \"../../../common/editor/textResourceEditorInput.js\";\nimport { ICustomEditorLabelService } from \"../../../services/editor/common/customEditorLabelService.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { IExtensionService } from \"../../../services/extensions/common/extensions.js\";\nimport { IFilesConfigurationService } from \"../../../services/filesConfiguration/common/filesConfigurationService.js\";\nimport {\n\tILifecycleService,\n\tLifecyclePhase,\n\tStartupKindToString,\n} from \"../../../services/lifecycle/common/lifecycle.js\";\nimport { ITextFileService } from \"../../../services/textfile/common/textfiles.js\";\nimport { ITimerService } from \"../../../services/timer/browser/timerService.js\";\nimport { writeTransientState } from \"../../codeEditor/browser/toggleWordWrap.js\";\nimport { ITerminalService } from \"../../terminal/browser/terminal.js\";\n\nexport class PerfviewContrib {\n\tstatic get() {\n\t\treturn getWorkbenchContribution<PerfviewContrib>(PerfviewContrib.ID);\n\t}\n\n\tstatic readonly ID = \"workbench.contrib.perfview\";\n\n\tprivate readonly _inputUri = URI.from({\n\t\tscheme: \"perf\",\n\t\tpath: \"Startup Performance\",\n\t});\n\tprivate readonly _registration: IDisposable;\n\n\tconstructor(\n\t\t@IInstantiationService\n\t\tprivate readonly _instaService: IInstantiationService,\n\t\t@ITextModelService textModelResolverService: ITextModelService,\n\t) {\n\t\tthis._registration =\n\t\t\ttextModelResolverService.registerTextModelContentProvider(\n\t\t\t\t\"perf\",\n\t\t\t\t_instaService.createInstance(PerfModelContentProvider),\n\t\t\t);\n\t}\n\n\tdispose(): void {\n\t\tthis._registration.dispose();\n\t}\n\n\tgetInputUri(): URI {\n\t\treturn this._inputUri;\n\t}\n\n\tgetEditorInput(): PerfviewInput {\n\t\treturn this._instaService.createInstance(PerfviewInput);\n\t}\n}\n\nexport class PerfviewInput extends TextResourceEditorInput {\n\tstatic readonly Id = \"PerfviewInput\";\n\n\toverride get typeId(): string {\n\t\treturn PerfviewInput.Id;\n\t}\n\n\tconstructor(\n\t\t@ITextModelService textModelResolverService: ITextModelService,\n\t\t@ITextFileService textFileService: ITextFileService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IFilesConfigurationService filesConfigurationService: IFilesConfigurationService,\n\t\t@ITextResourceConfigurationService textResourceConfigurationService: ITextResourceConfigurationService,\n\t\t@ICustomEditorLabelService customEditorLabelService: ICustomEditorLabelService,\n\t) {\n\t\tsuper(\n\t\t\tPerfviewContrib.get().getInputUri(),\n\t\t\tlocalize(\"name\", \"Startup Performance\"),\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\ttextModelResolverService,\n\t\t\ttextFileService,\n\t\t\teditorService,\n\t\t\tfileService,\n\t\t\tlabelService,\n\t\t\tfilesConfigurationService,\n\t\t\ttextResourceConfigurationService,\n\t\t\tcustomEditorLabelService,\n\t\t);\n\t}\n}\n\nclass PerfModelContentProvider implements ITextModelContentProvider {\n\tprivate _model: ITextModel | undefined;\n\tprivate _modelDisposables: IDisposable[] = [];\n\n\tconstructor(\n\t\t@IModelService private readonly _modelService: IModelService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@ICodeEditorService private readonly _editorService: ICodeEditorService,\n\t\t@ILifecycleService\n\t\tprivate readonly _lifecycleService: ILifecycleService,\n\t\t@ITimerService private readonly _timerService: ITimerService,\n\t\t@IExtensionService\n\t\tprivate readonly _extensionService: IExtensionService,\n\t\t@IProductService private readonly _productService: IProductService,\n\t\t@ITerminalService private readonly _terminalService: ITerminalService,\n\t) {}\n\n\tprovideTextContent(resource: URI): Promise<ITextModel> {\n\t\tif (!this._model || this._model.isDisposed()) {\n\t\t\tdispose(this._modelDisposables);\n\t\t\tconst langId = this._languageService.createById(\"markdown\");\n\t\t\tthis._model =\n\t\t\t\tthis._modelService.getModel(resource) ||\n\t\t\t\tthis._modelService.createModel(\"Loading...\", langId, resource);\n\n\t\t\tthis._modelDisposables.push(\n\t\t\t\tlangId.onDidChange((e) => {\n\t\t\t\t\tthis._model?.setLanguage(e);\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis._modelDisposables.push(\n\t\t\t\tthis._extensionService.onDidChangeExtensionsStatus(\n\t\t\t\t\tthis._updateModel,\n\t\t\t\t\tthis,\n\t\t\t\t),\n\t\t\t);\n\n\t\t\twriteTransientState(\n\t\t\t\tthis._model,\n\t\t\t\t{ wordWrapOverride: \"off\" },\n\t\t\t\tthis._editorService,\n\t\t\t);\n\t\t}\n\t\tthis._updateModel();\n\t\treturn Promise.resolve(this._model);\n\t}\n\n\tprivate _updateModel(): void {\n\t\tPromise.all([\n\t\t\tthis._timerService.whenReady(),\n\t\t\tthis._lifecycleService.when(LifecyclePhase.Eventually),\n\t\t\tthis._extensionService.whenInstalledExtensionsRegistered(),\n\t\t\tthis._terminalService.whenConnected,\n\t\t]).then(() => {\n\t\t\tif (this._model && !this._model.isDisposed()) {\n\t\t\t\tconst stats = LoaderStats.get();\n\t\t\t\tconst md = new MarkdownBuilder();\n\t\t\t\tthis._addSummary(md);\n\t\t\t\tmd.blank();\n\t\t\t\tthis._addSummaryTable(md, stats);\n\t\t\t\tmd.blank();\n\t\t\t\tthis._addExtensionsTable(md);\n\t\t\t\tmd.blank();\n\t\t\t\tthis._addPerfMarksTable(\n\t\t\t\t\t\"Terminal Stats\",\n\t\t\t\t\tmd,\n\t\t\t\t\tthis._timerService\n\t\t\t\t\t\t.getPerformanceMarks()\n\t\t\t\t\t\t.find((e) => e[0] === \"renderer\")?.[1]\n\t\t\t\t\t\t.filter((e) => e.name.startsWith(\"code/terminal/\")),\n\t\t\t\t);\n\t\t\t\tmd.blank();\n\t\t\t\tthis._addWorkbenchContributionsPerfMarksTable(md);\n\t\t\t\tmd.blank();\n\t\t\t\tthis._addRawPerfMarks(md);\n\t\t\t\tif (!isESM) {\n\t\t\t\t\tmd.blank();\n\t\t\t\t\tthis._addLoaderStats(md, stats);\n\t\t\t\t\tmd.blank();\n\t\t\t\t\tthis._addCachedDataStats(md);\n\t\t\t\t}\n\t\t\t\tmd.blank();\n\t\t\t\tthis._addResourceTimingStats(md);\n\n\t\t\t\tthis._model.setValue(md.value);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _addSummary(md: MarkdownBuilder): void {\n\t\tconst metrics = this._timerService.startupMetrics;\n\t\tmd.heading(2, \"System Info\");\n\t\tmd.li(\n\t\t\t`${this._productService.nameShort}: ${this._productService.version} (${this._productService.commit || \"0000000\"})`,\n\t\t);\n\t\tmd.li(`OS: ${metrics.platform}(${metrics.release})`);\n\t\tif (metrics.cpus) {\n\t\t\tmd.li(\n\t\t\t\t`CPUs: ${metrics.cpus.model}(${metrics.cpus.count} x ${metrics.cpus.speed})`,\n\t\t\t);\n\t\t}\n\t\tif (\n\t\t\ttypeof metrics.totalmem === \"number\" &&\n\t\t\ttypeof metrics.freemem === \"number\"\n\t\t) {\n\t\t\tmd.li(\n\t\t\t\t`Memory(System): ${(metrics.totalmem / ByteSize.GB).toFixed(2)} GB(${(metrics.freemem / ByteSize.GB).toFixed(2)}GB free)`,\n\t\t\t);\n\t\t}\n\t\tif (metrics.meminfo) {\n\t\t\tmd.li(\n\t\t\t\t`Memory(Process): ${(metrics.meminfo.workingSetSize / ByteSize.KB).toFixed(2)} MB working set(${(metrics.meminfo.privateBytes / ByteSize.KB).toFixed(2)}MB private, ${(metrics.meminfo.sharedBytes / ByteSize.KB).toFixed(2)}MB shared)`,\n\t\t\t);\n\t\t}\n\t\tmd.li(`VM(likelihood): ${metrics.isVMLikelyhood}%`);\n\t\tmd.li(`Initial Startup: ${metrics.initialStartup}`);\n\t\tmd.li(`Has ${metrics.windowCount - 1} other windows`);\n\t\tmd.li(`Screen Reader Active: ${metrics.hasAccessibilitySupport}`);\n\t\tmd.li(`Empty Workspace: ${metrics.emptyWorkbench}`);\n\t}\n\n\tprivate _addSummaryTable(md: MarkdownBuilder, stats?: LoaderStats): void {\n\t\tconst metrics = this._timerService.startupMetrics;\n\t\tconst contribTimings = Registry.as<IWorkbenchContributionsRegistry>(\n\t\t\tWorkbenchExtensions.Workbench,\n\t\t).timings;\n\n\t\tconst table: Array<Array<string | number | undefined>> = [];\n\t\ttable.push([\n\t\t\t\"start => app.isReady\",\n\t\t\tmetrics.timers.ellapsedAppReady,\n\t\t\t\"[main]\",\n\t\t\t`initial startup: ${metrics.initialStartup}`,\n\t\t]);\n\t\ttable.push([\n\t\t\t\"nls:start => nls:end\",\n\t\t\tmetrics.timers.ellapsedNlsGeneration,\n\t\t\t\"[main]\",\n\t\t\t`initial startup: ${metrics.initialStartup}`,\n\t\t]);\n\t\ttable.push([\n\t\t\t\"import(main.bundle.js)\",\n\t\t\tmetrics.timers.ellapsedLoadMainBundle,\n\t\t\t\"[main]\",\n\t\t\t`initial startup: ${metrics.initialStartup}`,\n\t\t]);\n\t\ttable.push([\n\t\t\t\"start crash reporter\",\n\t\t\tmetrics.timers.ellapsedCrashReporter,\n\t\t\t\"[main]\",\n\t\t\t`initial startup: ${metrics.initialStartup}`,\n\t\t]);\n\t\ttable.push([\n\t\t\t\"serve main IPC handle\",\n\t\t\tmetrics.timers.ellapsedMainServer,\n\t\t\t\"[main]\",\n\t\t\t`initial startup: ${metrics.initialStartup}`,\n\t\t]);\n\t\ttable.push([\n\t\t\t\"create window\",\n\t\t\tmetrics.timers.ellapsedWindowCreate,\n\t\t\t\"[main]\",\n\t\t\t`initial startup: ${metrics.initialStartup}, ${metrics.initialStartup ? `state: ${metrics.timers.ellapsedWindowRestoreState}ms, widget: ${metrics.timers.ellapsedBrowserWindowCreate}ms, show: ${metrics.timers.ellapsedWindowMaximize}ms` : \"\"}`,\n\t\t]);\n\t\ttable.push([\n\t\t\t\"app.isReady => window.loadUrl()\",\n\t\t\tmetrics.timers.ellapsedWindowLoad,\n\t\t\t\"[main]\",\n\t\t\t`initial startup: ${metrics.initialStartup}`,\n\t\t]);\n\t\ttable.push([\n\t\t\t\"window.loadUrl() => begin to import(workbench.desktop.main.js)\",\n\t\t\tmetrics.timers.ellapsedWindowLoadToRequire,\n\t\t\t\"[main->renderer]\",\n\t\t\tStartupKindToString(metrics.windowKind),\n\t\t]);\n\t\ttable.push([\n\t\t\t\"import(workbench.desktop.main.js)\",\n\t\t\tmetrics.timers.ellapsedRequire,\n\t\t\t\"[renderer]\",\n\t\t\t`cached data: ${metrics.didUseCachedData ? \"YES\" : \"NO\"}${stats ? `, node_modules took ${stats.nodeRequireTotal}ms` : \"\"}`,\n\t\t]);\n\t\ttable.push([\n\t\t\t\"wait for window config\",\n\t\t\tmetrics.timers.ellapsedWaitForWindowConfig,\n\t\t\t\"[renderer]\",\n\t\t\tundefined,\n\t\t]);\n\t\ttable.push([\n\t\t\t\"init storage (global & workspace)\",\n\t\t\tmetrics.timers.ellapsedStorageInit,\n\t\t\t\"[renderer]\",\n\t\t\tundefined,\n\t\t]);\n\t\ttable.push([\n\t\t\t\"init workspace service\",\n\t\t\tmetrics.timers.ellapsedWorkspaceServiceInit,\n\t\t\t\"[renderer]\",\n\t\t\tundefined,\n\t\t]);\n\t\tif (isWeb) {\n\t\t\ttable.push([\n\t\t\t\t\"init settings and global state from settings sync service\",\n\t\t\t\tmetrics.timers.ellapsedRequiredUserDataInit,\n\t\t\t\t\"[renderer]\",\n\t\t\t\tundefined,\n\t\t\t]);\n\t\t\ttable.push([\n\t\t\t\t\"init keybindings, snippets & extensions from settings sync service\",\n\t\t\t\tmetrics.timers.ellapsedOtherUserDataInit,\n\t\t\t\t\"[renderer]\",\n\t\t\t\tundefined,\n\t\t\t]);\n\t\t}\n\t\ttable.push([\n\t\t\t\"register extensions & spawn extension host\",\n\t\t\tmetrics.timers.ellapsedExtensions,\n\t\t\t\"[renderer]\",\n\t\t\tundefined,\n\t\t]);\n\t\ttable.push([\n\t\t\t\"restore viewlet\",\n\t\t\tmetrics.timers.ellapsedViewletRestore,\n\t\t\t\"[renderer]\",\n\t\t\tmetrics.viewletId,\n\t\t]);\n\t\ttable.push([\n\t\t\t\"restore panel\",\n\t\t\tmetrics.timers.ellapsedPanelRestore,\n\t\t\t\"[renderer]\",\n\t\t\tmetrics.panelId,\n\t\t]);\n\t\ttable.push([\n\t\t\t\"restore & resolve visible editors\",\n\t\t\tmetrics.timers.ellapsedEditorRestore,\n\t\t\t\"[renderer]\",\n\t\t\t`${metrics.editorIds.length}: ${metrics.editorIds.join(\", \")}`,\n\t\t]);\n\t\ttable.push([\n\t\t\t\"create workbench contributions\",\n\t\t\tmetrics.timers.ellapsedWorkbenchContributions,\n\t\t\t\"[renderer]\",\n\t\t\t`${(contribTimings.get(LifecyclePhase.Starting)?.length ?? 0) + (contribTimings.get(LifecyclePhase.Starting)?.length ?? 0)} blocking startup`,\n\t\t]);\n\t\ttable.push([\n\t\t\t\"overall workbench load\",\n\t\t\tmetrics.timers.ellapsedWorkbench,\n\t\t\t\"[renderer]\",\n\t\t\tundefined,\n\t\t]);\n\t\ttable.push([\n\t\t\t\"workbench ready\",\n\t\t\tmetrics.ellapsed,\n\t\t\t\"[main->renderer]\",\n\t\t\tundefined,\n\t\t]);\n\t\ttable.push([\n\t\t\t\"renderer ready\",\n\t\t\tmetrics.timers.ellapsedRenderer,\n\t\t\t\"[renderer]\",\n\t\t\tundefined,\n\t\t]);\n\t\ttable.push([\n\t\t\t\"shared process connection ready\",\n\t\t\tmetrics.timers.ellapsedSharedProcesConnected,\n\t\t\t\"[renderer->sharedprocess]\",\n\t\t\tundefined,\n\t\t]);\n\t\ttable.push([\n\t\t\t\"extensions registered\",\n\t\t\tmetrics.timers.ellapsedExtensionsReady,\n\t\t\t\"[renderer]\",\n\t\t\tundefined,\n\t\t]);\n\n\t\tmd.heading(2, \"Performance Marks\");\n\t\tmd.table([\"What\", \"Duration\", \"Process\", \"Info\"], table);\n\t}\n\n\tprivate _addExtensionsTable(md: MarkdownBuilder): void {\n\t\tconst eager: { toString(): string }[][] = [];\n\t\tconst normal: { toString(): string }[][] = [];\n\t\tconst extensionsStatus = this._extensionService.getExtensionsStatus();\n\t\tfor (const id in extensionsStatus) {\n\t\t\tconst { activationTimes: times } = extensionsStatus[id];\n\t\t\tif (!times) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (times.activationReason.startup) {\n\t\t\t\teager.push([\n\t\t\t\t\tid,\n\t\t\t\t\ttimes.activationReason.startup,\n\t\t\t\t\ttimes.codeLoadingTime,\n\t\t\t\t\ttimes.activateCallTime,\n\t\t\t\t\ttimes.activateResolvedTime,\n\t\t\t\t\ttimes.activationReason.activationEvent,\n\t\t\t\t\ttimes.activationReason.extensionId.value,\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\tnormal.push([\n\t\t\t\t\tid,\n\t\t\t\t\ttimes.activationReason.startup,\n\t\t\t\t\ttimes.codeLoadingTime,\n\t\t\t\t\ttimes.activateCallTime,\n\t\t\t\t\ttimes.activateResolvedTime,\n\t\t\t\t\ttimes.activationReason.activationEvent,\n\t\t\t\t\ttimes.activationReason.extensionId.value,\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\n\t\tconst table = eager.concat(normal);\n\t\tif (table.length > 0) {\n\t\t\tmd.heading(2, \"Extension Activation Stats\");\n\t\t\tmd.table(\n\t\t\t\t[\n\t\t\t\t\t\"Extension\",\n\t\t\t\t\t\"Eager\",\n\t\t\t\t\t\"Load Code\",\n\t\t\t\t\t\"Call Activate\",\n\t\t\t\t\t\"Finish Activate\",\n\t\t\t\t\t\"Event\",\n\t\t\t\t\t\"By\",\n\t\t\t\t],\n\t\t\t\ttable,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _addPerfMarksTable(\n\t\tname: string | undefined,\n\t\tmd: MarkdownBuilder,\n\t\tmarks: readonly perf.PerformanceMark[] | undefined,\n\t): void {\n\t\tif (!marks) {\n\t\t\treturn;\n\t\t}\n\t\tconst table: Array<Array<string | number | undefined>> = [];\n\t\tlet lastStartTime = -1;\n\t\tlet total = 0;\n\t\tfor (const { name, startTime } of marks) {\n\t\t\tconst delta = lastStartTime !== -1 ? startTime - lastStartTime : 0;\n\t\t\ttotal += delta;\n\t\t\ttable.push([\n\t\t\t\tname,\n\t\t\t\tMath.round(startTime),\n\t\t\t\tMath.round(delta),\n\t\t\t\tMath.round(total),\n\t\t\t]);\n\t\t\tlastStartTime = startTime;\n\t\t}\n\t\tif (name) {\n\t\t\tmd.heading(2, name);\n\t\t}\n\t\tmd.table([\"Name\", \"Timestamp\", \"Delta\", \"Total\"], table);\n\t}\n\n\tprivate _addWorkbenchContributionsPerfMarksTable(\n\t\tmd: MarkdownBuilder,\n\t): void {\n\t\tmd.heading(2, \"Workbench Contributions Blocking Restore\");\n\n\t\tconst timings = Registry.as<IWorkbenchContributionsRegistry>(\n\t\t\tWorkbenchExtensions.Workbench,\n\t\t).timings;\n\t\tmd.li(\n\t\t\t`Total (LifecyclePhase.Starting): ${timings.get(LifecyclePhase.Starting)?.length} (${timings.get(LifecyclePhase.Starting)?.reduce((p, c) => p + c[1], 0)}ms)`,\n\t\t);\n\t\tmd.li(\n\t\t\t`Total (LifecyclePhase.Ready): ${timings.get(LifecyclePhase.Ready)?.length} (${timings.get(LifecyclePhase.Ready)?.reduce((p, c) => p + c[1], 0)}ms)`,\n\t\t);\n\t\tmd.blank();\n\n\t\tconst marks = this._timerService\n\t\t\t.getPerformanceMarks()\n\t\t\t.find((e) => e[0] === \"renderer\")?.[1]\n\t\t\t.filter(\n\t\t\t\t(e) =>\n\t\t\t\t\te.name.startsWith(\n\t\t\t\t\t\t\"code/willCreateWorkbenchContribution/1\",\n\t\t\t\t\t) ||\n\t\t\t\t\te.name.startsWith(\n\t\t\t\t\t\t\"code/didCreateWorkbenchContribution/1\",\n\t\t\t\t\t) ||\n\t\t\t\t\te.name.startsWith(\n\t\t\t\t\t\t\"code/willCreateWorkbenchContribution/2\",\n\t\t\t\t\t) ||\n\t\t\t\t\te.name.startsWith(\"code/didCreateWorkbenchContribution/2\"),\n\t\t\t);\n\t\tthis._addPerfMarksTable(undefined, md, marks);\n\t}\n\n\tprivate _addRawPerfMarks(md: MarkdownBuilder): void {\n\t\tfor (const [\n\t\t\tsource,\n\t\t\tmarks,\n\t\t] of this._timerService.getPerformanceMarks()) {\n\t\t\tmd.heading(2, `Raw Perf Marks: ${source}`);\n\t\t\tmd.value += \"```\\n\";\n\t\t\tmd.value += `Name\\tTimestamp\\tDelta\\tTotal\\n`;\n\t\t\tlet lastStartTime = -1;\n\t\t\tlet total = 0;\n\t\t\tfor (const { name, startTime } of marks) {\n\t\t\t\tconst delta =\n\t\t\t\t\tlastStartTime !== -1 ? startTime - lastStartTime : 0;\n\t\t\t\ttotal += delta;\n\t\t\t\tmd.value += `${name}\\t${startTime}\\t${delta}\\t${total}\\n`;\n\t\t\t\tlastStartTime = startTime;\n\t\t\t}\n\t\t\tmd.value += \"```\\n\";\n\t\t}\n\t}\n\n\tprivate _addLoaderStats(md: MarkdownBuilder, stats: LoaderStats): void {\n\t\tmd.heading(2, \"Loader Stats\");\n\t\tmd.heading(3, \"Load AMD-module\");\n\t\tmd.table([\"Module\", \"Duration\"], stats.amdLoad);\n\t\tmd.blank();\n\t\tmd.heading(3, \"Load commonjs-module\");\n\t\tmd.table([\"Module\", \"Duration\"], stats.nodeRequire);\n\t\tmd.blank();\n\t\tmd.heading(3, \"Invoke AMD-module factory\");\n\t\tmd.table([\"Module\", \"Duration\"], stats.amdInvoke);\n\t\tmd.blank();\n\t\tmd.heading(3, \"Invoke commonjs-module\");\n\t\tmd.table([\"Module\", \"Duration\"], stats.nodeEval);\n\t}\n\n\tprivate _addCachedDataStats(md: MarkdownBuilder): void {\n\t\tconst map = new Map<LoaderEventType, string[]>();\n\t\tmap.set(LoaderEventType.CachedDataCreated, []);\n\t\tmap.set(LoaderEventType.CachedDataFound, []);\n\t\tmap.set(LoaderEventType.CachedDataMissed, []);\n\t\tmap.set(LoaderEventType.CachedDataRejected, []);\n\t\tif (!isESM && typeof require.getStats === \"function\") {\n\t\t\tfor (const stat of require.getStats()) {\n\t\t\t\tif (map.has(stat.type)) {\n\t\t\t\t\tmap.get(stat.type)!.push(stat.detail);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst printLists = (arr?: string[]) => {\n\t\t\tif (arr) {\n\t\t\t\tarr.sort();\n\t\t\t\tfor (const e of arr) {\n\t\t\t\t\tmd.li(`${e}`);\n\t\t\t\t}\n\t\t\t\tmd.blank();\n\t\t\t}\n\t\t};\n\n\t\tmd.heading(2, \"Node Cached Data Stats\");\n\t\tmd.blank();\n\t\tmd.heading(3, \"cached data used\");\n\t\tprintLists(map.get(LoaderEventType.CachedDataFound));\n\t\tmd.heading(3, \"cached data missed\");\n\t\tprintLists(map.get(LoaderEventType.CachedDataMissed));\n\t\tmd.heading(3, \"cached data rejected\");\n\t\tprintLists(map.get(LoaderEventType.CachedDataRejected));\n\t\tmd.heading(3, \"cached data created (lazy, might need refreshes)\");\n\t\tprintLists(map.get(LoaderEventType.CachedDataCreated));\n\t}\n\n\tprivate _addResourceTimingStats(md: MarkdownBuilder) {\n\t\tconst stats = performance.getEntriesByType(\"resource\").map((entry) => {\n\t\t\treturn [entry.name, entry.duration];\n\t\t});\n\t\tif (!stats.length) {\n\t\t\treturn;\n\t\t}\n\t\tmd.heading(2, \"Resource Timing Stats\");\n\t\tmd.table([\"Name\", \"Duration\"], stats);\n\t}\n}\n\nclass MarkdownBuilder {\n\tvalue = \"\";\n\n\theading(level: number, value: string): this {\n\t\tthis.value += `${\"#\".repeat(level)} ${value}\\n\\n`;\n\t\treturn this;\n\t}\n\n\tblank() {\n\t\tthis.value += \"\\n\";\n\t\treturn this;\n\t}\n\n\tli(value: string) {\n\t\tthis.value += `* ${value}\\n`;\n\t\treturn this;\n\t}\n\n\ttable(\n\t\theader: string[],\n\t\trows: Array<Array<{ toString(): string } | undefined>>,\n\t) {\n\t\tthis.value += LoaderStats.toMarkdownTable(header, rows);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["name"]
}
