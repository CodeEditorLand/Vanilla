{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/performance/browser/startupTimings.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { hash } from \"../../../../base/common/hash.js\";\nimport { posix } from \"../../../../base/common/path.js\";\nimport { isCodeEditor } from \"../../../../editor/browser/editorBrowser.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { IUpdateService } from \"../../../../platform/update/common/update.js\";\nimport { IWorkspaceTrustManagementService } from \"../../../../platform/workspace/common/workspaceTrust.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport { ViewContainerLocation } from \"../../../common/views.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { IBrowserWorkbenchEnvironmentService } from \"../../../services/environment/browser/environmentService.js\";\nimport {\n\tILifecycleService,\n\tStartupKind,\n\tStartupKindToString,\n} from \"../../../services/lifecycle/common/lifecycle.js\";\nimport { IPaneCompositePartService } from \"../../../services/panecomposite/browser/panecomposite.js\";\nimport { ITimerService } from \"../../../services/timer/browser/timerService.js\";\nimport * as files from \"../../files/common/files.js\";\n\nexport abstract class StartupTimings {\n\tconstructor(\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IPaneCompositePartService private readonly _paneCompositeService: IPaneCompositePartService,\n\t\t@ILifecycleService private readonly _lifecycleService: ILifecycleService,\n\t\t@IUpdateService private readonly _updateService: IUpdateService,\n\t\t@IWorkspaceTrustManagementService private readonly _workspaceTrustService: IWorkspaceTrustManagementService\n\t) {\n\t}\n\n\tprotected async _isStandardStartup(): Promise<string | undefined> {\n\t\t// check for standard startup:\n\t\t// * new window (no reload)\n\t\t// * workspace is trusted\n\t\t// * just one window\n\t\t// * explorer viewlet visible\n\t\t// * one text editor (not multiple, not webview, welcome etc...)\n\t\t// * cached data present (not rejected, not created)\n\t\tif (this._lifecycleService.startupKind !== StartupKind.NewWindow) {\n\t\t\treturn StartupKindToString(this._lifecycleService.startupKind);\n\t\t}\n\t\tif (!this._workspaceTrustService.isWorkspaceTrusted()) {\n\t\t\treturn \"Workspace not trusted\";\n\t\t}\n\t\tconst activeViewlet = this._paneCompositeService.getActivePaneComposite(\n\t\t\tViewContainerLocation.Sidebar,\n\t\t);\n\t\tif (!activeViewlet || activeViewlet.getId() !== files.VIEWLET_ID) {\n\t\t\treturn \"Explorer viewlet not visible\";\n\t\t}\n\t\tconst visibleEditorPanes = this._editorService.visibleEditorPanes;\n\t\tif (visibleEditorPanes.length !== 1) {\n\t\t\treturn `Expected text editor count : 1, Actual : ${visibleEditorPanes.length}`;\n\t\t}\n\t\tif (!isCodeEditor(visibleEditorPanes[0].getControl())) {\n\t\t\treturn \"Active editor is not a text editor\";\n\t\t}\n\t\tconst activePanel = this._paneCompositeService.getActivePaneComposite(\n\t\t\tViewContainerLocation.Panel,\n\t\t);\n\t\tif (activePanel) {\n\t\t\treturn `Current active panel : ${this._paneCompositeService.getPaneComposite(activePanel.getId(), ViewContainerLocation.Panel)?.name}`;\n\t\t}\n\t\tconst isLatestVersion = await this._updateService.isLatestVersion();\n\t\tif (isLatestVersion === false) {\n\t\t\treturn \"Not on latest version, updates available\";\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nexport class BrowserStartupTimings\n\textends StartupTimings\n\timplements IWorkbenchContribution\n{\n\tconstructor(\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IPaneCompositePartService paneCompositeService: IPaneCompositePartService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t@IUpdateService updateService: IUpdateService,\n\t\t@IWorkspaceTrustManagementService workspaceTrustService: IWorkspaceTrustManagementService,\n\t\t@ITimerService private readonly timerService: ITimerService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IBrowserWorkbenchEnvironmentService private readonly environmentService: IBrowserWorkbenchEnvironmentService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IProductService private readonly productService: IProductService\n\t) {\n\t\tsuper(editorService, paneCompositeService, lifecycleService, updateService, workspaceTrustService);\n\n\t\tthis.logPerfMarks();\n\t}\n\n\tprivate async logPerfMarks(): Promise<void> {\n\t\tif (!this.environmentService.profDurationMarkers) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.timerService.whenReady();\n\n\t\tconst standardStartupError = await this._isStandardStartup();\n\t\tconst perfBaseline = await this.timerService.perfBaseline;\n\t\tconst [from, to] = this.environmentService.profDurationMarkers;\n\t\tconst content = `${this.timerService.getDuration(from, to)}\\t${this.productService.nameShort}\\t${(this.productService.commit || \"\").slice(0, 10) || \"0000000000\"}\\t${this.telemetryService.sessionId}\\t${standardStartupError === undefined ? \"standard_start\" : \"NO_standard_start : \" + standardStartupError}\\t${String(perfBaseline).padStart(4, \"0\")}ms\\n`;\n\n\t\tthis.logService.info(`[prof-timers] ${content}`);\n\t}\n}\n\nexport class BrowserResourcePerformanceMarks {\n\tconstructor(\n\t\t@ITelemetryService telemetryService: ITelemetryService\n\t) {\n\n\t\ttype Entry = {\n\t\t\thosthash: string;\n\t\t\tname: string;\n\t\t\tduration: number;\n\t\t};\n\t\ttype EntryClassifify = {\n\t\t\towner: 'jrieken';\n\t\t\tcomment: 'Resource performance numbers';\n\t\t\thosthash: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'Hash of the hostname' };\n\t\t\tname: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'Resource basename' };\n\t\t\tduration: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'Resource duration' };\n\t\t};\n\t\tfor (const item of performance.getEntriesByType('resource')) {\n\n\t\t\ttry {\n\t\t\t\tconst url = new URL(item.name);\n\t\t\t\tconst name = posix.basename(url.pathname);\n\n\t\t\t\ttelemetryService.publicLog2<Entry, EntryClassifify>('startup.resource.perf', {\n\t\t\t\t\thosthash: `H${hash(url.host).toString(16)}`,\n\t\t\t\t\tname,\n\t\t\t\t\tduration: item.duration\n\t\t\t\t});\n\t\t\t} catch {\n\t\t\t\t// ignore\n\t\t\t}\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
