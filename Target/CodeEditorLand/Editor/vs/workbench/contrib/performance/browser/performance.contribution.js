import{localize2 as i}from"../../../../nls.js";import{registerAction2 as o,Action2 as n}from"../../../../platform/actions/common/actions.js";import{IInstantiationService as u}from"../../../../platform/instantiation/common/instantiation.js";import{LifecyclePhase as v}from"../../../services/lifecycle/common/lifecycle.js";import{Registry as l}from"../../../../platform/registry/common/platform.js";import{Categories as s}from"../../../../platform/action/common/actionCommonCategories.js";import{Extensions as g,registerWorkbenchContribution2 as d}from"../../../common/contributions.js";import{EditorExtensions as y}from"../../../common/editor.js";import{PerfviewContrib as c,PerfviewInput as m}from"./perfviewEditor.js";import{IEditorService as S}from"../../../services/editor/common/editorService.js";import{InstantiationService as E,Trace as f}from"../../../../platform/instantiation/common/instantiationService.js";import{EventProfiling as p}from"../../../../base/common/event.js";import{InputLatencyContrib as b}from"./inputLatencyContrib.js";d(c.ID,c,{lazy:!0}),l.as(y.EditorFactory).registerEditorSerializer(m.Id,class{canSerialize(){return!0}serialize(){return""}deserialize(e){return e.createInstance(m)}}),o(class extends n{constructor(){super({id:"perfview.show",title:i("show.label","Startup Performance"),category:s.Developer,f1:!0})}run(e){const r=e.get(S),t=c.get();return r.openEditor(t.getEditorInput(),{pinned:!0})}}),o(class extends n{constructor(){super({id:"perf.insta.printAsyncCycles",title:i("cycles","Print Service Cycles"),category:s.Developer,f1:!0})}run(r){const t=r.get(u);if(t instanceof E){const a=t._globalGraph?.findCycleSlow()}}}),o(class extends n{constructor(){super({id:"perf.insta.printTraces",title:i("insta.trace","Print Service Traces"),category:s.Developer,f1:!0})}run(){if(f.all.size!==0)for(const r of f.all);}}),o(class extends n{constructor(){super({id:"perf.event.profiling",title:i("emitter","Print Emitter Profiles"),category:s.Developer,f1:!0})}run(){if(p.all.size!==0)for(const r of p.all);}}),l.as(g.Workbench).registerWorkbenchContribution(b,v.Eventually);
