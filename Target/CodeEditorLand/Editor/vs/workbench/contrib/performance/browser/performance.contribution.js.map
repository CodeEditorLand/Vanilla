{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/performance/browser/performance.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize2 } from '../../../../nls.js';\nimport { registerAction2, Action2 } from '../../../../platform/actions/common/actions.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { LifecyclePhase } from '../../../services/lifecycle/common/lifecycle.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { Categories } from '../../../../platform/action/common/actionCommonCategories.js';\nimport { Extensions, IWorkbenchContributionsRegistry, registerWorkbenchContribution2 } from '../../../common/contributions.js';\nimport { EditorExtensions, IEditorSerializer, IEditorFactoryRegistry } from '../../../common/editor.js';\nimport { PerfviewContrib, PerfviewInput } from './perfviewEditor.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { InstantiationService, Trace } from '../../../../platform/instantiation/common/instantiationService.js';\nimport { EventProfiling } from '../../../../base/common/event.js';\nimport { InputLatencyContrib } from './inputLatencyContrib.js';\n\n// -- startup performance view\n\nregisterWorkbenchContribution2(\n\tPerfviewContrib.ID,\n\tPerfviewContrib,\n\t{ lazy: true }\n);\n\nRegistry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory).registerEditorSerializer(\n\tPerfviewInput.Id,\n\tclass implements IEditorSerializer {\n\t\tcanSerialize(): boolean {\n\t\t\treturn true;\n\t\t}\n\t\tserialize(): string {\n\t\t\treturn '';\n\t\t}\n\t\tdeserialize(instantiationService: IInstantiationService): PerfviewInput {\n\t\t\treturn instantiationService.createInstance(PerfviewInput);\n\t\t}\n\t}\n);\n\n\nregisterAction2(class extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'perfview.show',\n\t\t\ttitle: localize2('show.label', 'Startup Performance'),\n\t\t\tcategory: Categories.Developer,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor) {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst contrib = PerfviewContrib.get();\n\t\treturn editorService.openEditor(contrib.getEditorInput(), { pinned: true });\n\t}\n});\n\n\nregisterAction2(class PrintServiceCycles extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'perf.insta.printAsyncCycles',\n\t\t\ttitle: localize2('cycles', 'Print Service Cycles'),\n\t\t\tcategory: Categories.Developer,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor) {\n\t\tconst instaService = accessor.get(IInstantiationService);\n\t\tif (instaService instanceof InstantiationService) {\n\t\t\tconst cycle = instaService._globalGraph?.findCycleSlow();\n\t\t\tif (cycle) {\n\t\t\t\tconsole.warn(`CYCLE`, cycle);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`YEAH, no more cycles`);\n\t\t\t}\n\t\t}\n\t}\n});\n\nregisterAction2(class PrintServiceTraces extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'perf.insta.printTraces',\n\t\t\ttitle: localize2('insta.trace', 'Print Service Traces'),\n\t\t\tcategory: Categories.Developer,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun() {\n\t\tif (Trace.all.size === 0) {\n\t\t\tconsole.log('Enable via `instantiationService.ts#_enableAllTracing`');\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const item of Trace.all) {\n\t\t\tconsole.log(item);\n\t\t}\n\t}\n});\n\n\nregisterAction2(class PrintEventProfiling extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'perf.event.profiling',\n\t\t\ttitle: localize2('emitter', 'Print Emitter Profiles'),\n\t\t\tcategory: Categories.Developer,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(): void {\n\t\tif (EventProfiling.all.size === 0) {\n\t\t\tconsole.log('USE `EmitterOptions._profName` to enable profiling');\n\t\t\treturn;\n\t\t}\n\t\tfor (const item of EventProfiling.all) {\n\t\t\tconsole.log(`${item.name}: ${item.invocationCount} invocations COST ${item.elapsedOverall}ms, ${item.listenerCount} listeners, avg cost is ${item.durations.reduce((a, b) => a + b, 0) / item.durations.length}ms`);\n\t\t}\n\t}\n});\n\n// -- input latency\n\nRegistry.as<IWorkbenchContributionsRegistry>(Extensions.Workbench).registerWorkbenchContribution(\n\tInputLatencyContrib,\n\tLifecyclePhase.Eventually\n);\n"],
  "mappings": "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",
  "names": []
}
