{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/performance/electron-sandbox/rendererAutoProfiler.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { timeout } from \"../../../../base/common/async.js\";\nimport { VSBuffer } from \"../../../../base/common/buffer.js\";\nimport { joinPath } from \"../../../../base/common/resources.js\";\nimport { generateUuid } from \"../../../../base/common/uuid.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { INativeHostService } from \"../../../../platform/native/common/native.js\";\nimport type { IV8Profile } from \"../../../../platform/profiling/common/profiling.js\";\nimport {\n\tIProfileAnalysisWorkerService,\n\tProfilingOutput,\n} from \"../../../../platform/profiling/electron-sandbox/profileAnalysisWorkerService.js\";\nimport { INativeWorkbenchEnvironmentService } from \"../../../services/environment/electron-sandbox/environmentService.js\";\nimport { parseExtensionDevOptions } from \"../../../services/extensions/common/extensionDevOptions.js\";\nimport { ITimerService } from \"../../../services/timer/browser/timerService.js\";\n\nexport class RendererProfiling {\n\tprivate _observer?: PerformanceObserver;\n\n\tconstructor(\n\t\t@INativeWorkbenchEnvironmentService private readonly _environmentService: INativeWorkbenchEnvironmentService,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@INativeHostService nativeHostService: INativeHostService,\n\t\t@ITimerService timerService: ITimerService,\n\t\t@IConfigurationService configService: IConfigurationService,\n\t\t@IProfileAnalysisWorkerService profileAnalysisService: IProfileAnalysisWorkerService\n\t) {\n\n\t\tconst devOpts = parseExtensionDevOptions(_environmentService);\n\t\tif (devOpts.isExtensionDevTestFromCli) {\n\t\t\t// disabled when running extension tests\n\t\t\treturn;\n\t\t}\n\n\t\ttimerService.perfBaseline.then(perfBaseline => {\n\t\t\t_logService.info(`[perf] Render performance baseline is ${perfBaseline}ms`);\n\n\t\t\tif (perfBaseline < 0) {\n\t\t\t\t// too slow\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// SLOW threshold\n\t\t\tconst slowThreshold = perfBaseline * 10; // ~10 frames at 64fps on MY machine\n\n\t\t\tconst obs = new PerformanceObserver(async list => {\n\n\t\t\t\tobs.takeRecords();\n\t\t\t\tconst maxDuration = list.getEntries()\n\t\t\t\t\t.map(e => e.duration)\n\t\t\t\t\t.reduce((p, c) => Math.max(p, c), 0);\n\n\t\t\t\tif (maxDuration < slowThreshold) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!configService.getValue('application.experimental.rendererProfiling')) {\n\t\t\t\t\t_logService.debug(`[perf] SLOW task detected (${maxDuration}ms) but renderer profiling is disabled via 'application.experimental.rendererProfiling'`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst sessionId = generateUuid();\n\n\t\t\t\t_logService.warn(`[perf] Renderer reported VERY LONG TASK (${maxDuration}ms), starting profiling session '${sessionId}'`);\n\n\t\t\t\t// pause observation, we'll take a detailed look\n\t\t\t\tobs.disconnect();\n\n\t\t\t\t// profile renderer for 5secs, analyse, and take action depending on the result\n\t\t\t\tfor (let i = 0; i < 3; i++) {\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst profile = await nativeHostService.profileRenderer(sessionId, 5000);\n\t\t\t\t\t\tconst output = await profileAnalysisService.analyseBottomUp(profile, _url => '<<renderer>>', perfBaseline, true);\n\t\t\t\t\t\tif (output === ProfilingOutput.Interesting) {\n\t\t\t\t\t\t\tthis._store(profile, sessionId);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttimeout(15000); // wait 15s\n\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_logService.error(err);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// reconnect the observer\n\t\t\t\tobs.observe({ entryTypes: ['longtask'] });\n\t\t\t});\n\n\t\t\tobs.observe({ entryTypes: ['longtask'] });\n\t\t\tthis._observer = obs;\n\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis._observer?.disconnect();\n\t}\n\n\tprivate async _store(\n\t\tprofile: IV8Profile,\n\t\tsessionId: string,\n\t): Promise<void> {\n\t\tconst path = joinPath(\n\t\t\tthis._environmentService.tmpDir,\n\t\t\t`renderer-${Math.random().toString(16).slice(2, 8)}.cpuprofile.json`,\n\t\t);\n\t\tawait this._fileService.writeFile(\n\t\t\tpath,\n\t\t\tVSBuffer.fromString(JSON.stringify(profile)),\n\t\t);\n\t\tthis._logService.info(\n\t\t\t`[perf] stored profile to DISK '${path}'`,\n\t\t\tsessionId,\n\t\t);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,eAAe;AACxB,SAAS,gBAAgB;AACzB,SAAS,gBAAgB;AACzB,SAAS,oBAAoB;AAC7B,SAAS,6BAA6B;AACtC,SAAS,oBAAoB;AAC7B,SAAS,mBAAmB;AAC5B,SAAS,0BAA0B;AAEnC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,0CAA0C;AACnD,SAAS,gCAAgC;AACzC,SAAS,qBAAqB;AAEvB,IAAM,oBAAN,MAAwB;AAAA,EAG9B,YACsD,qBACtB,cACD,aACV,mBACL,cACQ,eACQ,wBAC9B;AAPoD;AACtB;AACD;AAO9B,UAAM,UAAU,yBAAyB,mBAAmB;AAC5D,QAAI,QAAQ,2BAA2B;AAEtC;AAAA,IACD;AAEA,iBAAa,aAAa,KAAK,kBAAgB;AAC9C,kBAAY,KAAK,yCAAyC,YAAY,IAAI;AAE1E,UAAI,eAAe,GAAG;AAErB;AAAA,MACD;AAGA,YAAM,gBAAgB,eAAe;AAErC,YAAM,MAAM,IAAI,oBAAoB,OAAM,SAAQ;AAEjD,YAAI,YAAY;AAChB,cAAM,cAAc,KAAK,WAAW,EAClC,IAAI,OAAK,EAAE,QAAQ,EACnB,OAAO,CAAC,GAAG,MAAM,KAAK,IAAI,GAAG,CAAC,GAAG,CAAC;AAEpC,YAAI,cAAc,eAAe;AAChC;AAAA,QACD;AAEA,YAAI,CAAC,cAAc,SAAS,4CAA4C,GAAG;AAC1E,sBAAY,MAAM,8BAA8B,WAAW,yFAAyF;AACpJ;AAAA,QACD;AAEA,cAAM,YAAY,aAAa;AAE/B,oBAAY,KAAK,4CAA4C,WAAW,oCAAoC,SAAS,GAAG;AAGxH,YAAI,WAAW;AAGf,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAE3B,cAAI;AACH,kBAAM,UAAU,MAAM,kBAAkB,gBAAgB,WAAW,GAAI;AACvE,kBAAM,SAAS,MAAM,uBAAuB,gBAAgB,SAAS,UAAQ,gBAAgB,cAAc,IAAI;AAC/G,gBAAI,WAAW,gBAAgB,aAAa;AAC3C,mBAAK,OAAO,SAAS,SAAS;AAC9B;AAAA,YACD;AAEA,oBAAQ,IAAK;AAAA,UAEd,SAAS,KAAK;AACb,wBAAY,MAAM,GAAG;AACrB;AAAA,UACD;AAAA,QACD;AAGA,YAAI,QAAQ,EAAE,YAAY,CAAC,UAAU,EAAE,CAAC;AAAA,MACzC,CAAC;AAED,UAAI,QAAQ,EAAE,YAAY,CAAC,UAAU,EAAE,CAAC;AACxC,WAAK,YAAY;AAAA,IAElB,CAAC;AAAA,EACF;AAAA,EAtGD,OAsB+B;AAAA;AAAA;AAAA,EACtB;AAAA,EAiFR,UAAgB;AACf,SAAK,WAAW,WAAW;AAAA,EAC5B;AAAA,EAEA,MAAc,OACb,SACA,WACgB;AAChB,UAAM,OAAO;AAAA,MACZ,KAAK,oBAAoB;AAAA,MACzB,YAAY,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,MAAM,GAAG,CAAC,CAAC;AAAA,IACnD;AACA,UAAM,KAAK,aAAa;AAAA,MACvB;AAAA,MACA,SAAS,WAAW,KAAK,UAAU,OAAO,CAAC;AAAA,IAC5C;AACA,SAAK,YAAY;AAAA,MAChB,kCAAkC,IAAI;AAAA,MACtC;AAAA,IACD;AAAA,EACD;AACD;AAvGa,oBAAN;AAAA,EAIJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAVU;",
  "names": []
}
