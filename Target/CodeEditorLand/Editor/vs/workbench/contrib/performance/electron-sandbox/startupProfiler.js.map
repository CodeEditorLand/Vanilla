{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/performance/electron-sandbox/startupProfiler.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { basename, dirname } from \"../../../../base/common/resources.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { ITextModelService } from \"../../../../editor/common/services/resolverService.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IClipboardService } from \"../../../../platform/clipboard/common/clipboardService.js\";\nimport { IDialogService } from \"../../../../platform/dialogs/common/dialogs.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport { ILabelService } from \"../../../../platform/label/common/label.js\";\nimport { INativeHostService } from \"../../../../platform/native/common/native.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport { INativeWorkbenchEnvironmentService } from \"../../../services/environment/electron-sandbox/environmentService.js\";\nimport { IExtensionService } from \"../../../services/extensions/common/extensions.js\";\nimport {\n\tILifecycleService,\n\tLifecyclePhase,\n} from \"../../../services/lifecycle/common/lifecycle.js\";\nimport { PerfviewContrib } from \"../browser/perfviewEditor.js\";\n\nexport class StartupProfiler implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IDialogService private readonly _dialogService: IDialogService,\n\t\t@INativeWorkbenchEnvironmentService\n\t\tprivate readonly _environmentService: INativeWorkbenchEnvironmentService,\n\t\t@ITextModelService\n\t\tprivate readonly _textModelResolverService: ITextModelService,\n\t\t@IClipboardService\n\t\tprivate readonly _clipboardService: IClipboardService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IOpenerService private readonly _openerService: IOpenerService,\n\t\t@INativeHostService\n\t\tprivate readonly _nativeHostService: INativeHostService,\n\t\t@IProductService private readonly _productService: IProductService,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t) {\n\t\t// wait for everything to be ready\n\t\tPromise.all([\n\t\t\tlifecycleService.when(LifecyclePhase.Eventually),\n\t\t\textensionService.whenInstalledExtensionsRegistered(),\n\t\t]).then(() => {\n\t\t\tthis._stopProfiling();\n\t\t});\n\t}\n\n\tprivate _stopProfiling(): void {\n\t\tif (!this._environmentService.args[\"prof-startup-prefix\"]) {\n\t\t\treturn;\n\t\t}\n\t\tconst profileFilenamePrefix = URI.file(\n\t\t\tthis._environmentService.args[\"prof-startup-prefix\"],\n\t\t);\n\n\t\tconst dir = dirname(profileFilenamePrefix);\n\t\tconst prefix = basename(profileFilenamePrefix);\n\n\t\tconst removeArgs: string[] = [\"--prof-startup\"];\n\t\tconst markerFile = this._fileService\n\t\t\t.readFile(profileFilenamePrefix)\n\t\t\t.then((value) => removeArgs.push(...value.toString().split(\"|\")))\n\t\t\t.then(() =>\n\t\t\t\tthis._fileService.del(profileFilenamePrefix, {\n\t\t\t\t\trecursive: true,\n\t\t\t\t}),\n\t\t\t) // (1) delete the file to tell the main process to stop profiling\n\t\t\t.then(\n\t\t\t\t() =>\n\t\t\t\t\tnew Promise<void>((resolve) => {\n\t\t\t\t\t\t// (2) wait for main that recreates the fail to signal profiling has stopped\n\t\t\t\t\t\tconst check = () => {\n\t\t\t\t\t\t\tthis._fileService\n\t\t\t\t\t\t\t\t.exists(profileFilenamePrefix)\n\t\t\t\t\t\t\t\t.then((exists) => {\n\t\t\t\t\t\t\t\t\tif (exists) {\n\t\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tsetTimeout(check, 500);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t};\n\t\t\t\t\t\tcheck();\n\t\t\t\t\t}),\n\t\t\t)\n\t\t\t.then(() =>\n\t\t\t\tthis._fileService.del(profileFilenamePrefix, {\n\t\t\t\t\trecursive: true,\n\t\t\t\t}),\n\t\t\t); // (3) finally delete the file again\n\n\t\tmarkerFile\n\t\t\t.then(() => {\n\t\t\t\treturn this._fileService.resolve(dir).then((stat) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tstat.children\n\t\t\t\t\t\t\t? stat.children.filter((value) =>\n\t\t\t\t\t\t\t\t\tvalue.resource.path.includes(prefix),\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: []\n\t\t\t\t\t).map((stat) => stat.resource);\n\t\t\t\t});\n\t\t\t})\n\t\t\t.then((files) => {\n\t\t\t\tconst profileFiles = files.reduce(\n\t\t\t\t\t(prev, cur) =>\n\t\t\t\t\t\t`${prev}${this._labelService.getUriLabel(cur)}\\n`,\n\t\t\t\t\t\"\\n\",\n\t\t\t\t);\n\n\t\t\t\treturn this._dialogService\n\t\t\t\t\t.confirm({\n\t\t\t\t\t\ttype: \"info\",\n\t\t\t\t\t\tmessage: localize(\n\t\t\t\t\t\t\t\"prof.message\",\n\t\t\t\t\t\t\t\"Successfully created profiles.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tdetail: localize(\n\t\t\t\t\t\t\t\"prof.detail\",\n\t\t\t\t\t\t\t\"Please create an issue and manually attach the following files:\\n{0}\",\n\t\t\t\t\t\t\tprofileFiles,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tprimaryButton: localize(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"prof.restartAndFileIssue\",\n\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"&&Create Issue and Restart\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcancelButton: localize(\"prof.restart\", \"Restart\"),\n\t\t\t\t\t})\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tif (res.confirmed) {\n\t\t\t\t\t\t\tPromise.all<any>([\n\t\t\t\t\t\t\t\tthis._nativeHostService.showItemInFolder(\n\t\t\t\t\t\t\t\t\tfiles[0].fsPath,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tthis._createPerfIssue(\n\t\t\t\t\t\t\t\t\tfiles.map((file) => basename(file)),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t]).then(() => {\n\t\t\t\t\t\t\t\t// keep window stable until restart is selected\n\t\t\t\t\t\t\t\treturn this._dialogService\n\t\t\t\t\t\t\t\t\t.confirm({\n\t\t\t\t\t\t\t\t\t\ttype: \"info\",\n\t\t\t\t\t\t\t\t\t\tmessage: localize(\n\t\t\t\t\t\t\t\t\t\t\t\"prof.thanks\",\n\t\t\t\t\t\t\t\t\t\t\t\"Thanks for helping us.\",\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tdetail: localize(\n\t\t\t\t\t\t\t\t\t\t\t\"prof.detail.restart\",\n\t\t\t\t\t\t\t\t\t\t\t\"A final restart is required to continue to use '{0}'. Again, thank you for your contribution.\",\n\t\t\t\t\t\t\t\t\t\t\tthis._productService.nameLong,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tprimaryButton: localize(\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tkey: \"prof.restart.button\",\n\t\t\t\t\t\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"&& denotes a mnemonic\",\n\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\"&&Restart\",\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\t\t\t\t\t// now we are ready to restart\n\t\t\t\t\t\t\t\t\t\tif (res.confirmed) {\n\t\t\t\t\t\t\t\t\t\t\tthis._nativeHostService.relaunch({\n\t\t\t\t\t\t\t\t\t\t\t\tremoveArgs,\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// simply restart\n\t\t\t\t\t\t\tthis._nativeHostService.relaunch({ removeArgs });\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate async _createPerfIssue(files: string[]): Promise<void> {\n\t\tconst reportIssueUrl = this._productService.reportIssueUrl;\n\t\tif (!reportIssueUrl) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst contrib = PerfviewContrib.get();\n\t\tconst ref = await this._textModelResolverService.createModelReference(\n\t\t\tcontrib.getInputUri(),\n\t\t);\n\t\ttry {\n\t\t\tawait this._clipboardService.writeText(\n\t\t\t\tref.object.textEditorModel.getValue(),\n\t\t\t);\n\t\t} finally {\n\t\t\tref.dispose();\n\t\t}\n\n\t\tconst body = `\n1. :warning: We have copied additional data to your clipboard. Make sure to **paste** here. :warning:\n1. :warning: Make sure to **attach** these files from your *home*-directory: :warning:\\n${files.map((file) => `-\\`${file}\\``).join(\"\\n\")}\n`;\n\n\t\tconst baseUrl = reportIssueUrl;\n\t\tconst queryStringPrefix = baseUrl.indexOf(\"?\") === -1 ? \"?\" : \"&\";\n\n\t\tthis._openerService.open(\n\t\t\tURI.parse(\n\t\t\t\t`${baseUrl}${queryStringPrefix}body=${encodeURIComponent(body)}`,\n\t\t\t),\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["stat", "res"]
}
