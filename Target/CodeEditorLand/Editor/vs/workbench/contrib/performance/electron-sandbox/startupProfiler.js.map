{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/performance/electron-sandbox/startupProfiler.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWorkbenchContribution } from '../../../common/contributions.js';\nimport { localize } from '../../../../nls.js';\nimport { dirname, basename } from '../../../../base/common/resources.js';\nimport { ITextModelService } from '../../../../editor/common/services/resolverService.js';\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nimport { INativeWorkbenchEnvironmentService } from '../../../services/environment/electron-sandbox/environmentService.js';\nimport { ILifecycleService, LifecyclePhase } from '../../../services/lifecycle/common/lifecycle.js';\nimport { PerfviewContrib } from '../browser/perfviewEditor.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { INativeHostService } from '../../../../platform/native/common/native.js';\nimport { IProductService } from '../../../../platform/product/common/productService.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\n\nexport class StartupProfiler implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IDialogService private readonly _dialogService: IDialogService,\n\t\t@INativeWorkbenchEnvironmentService private readonly _environmentService: INativeWorkbenchEnvironmentService,\n\t\t@ITextModelService private readonly _textModelResolverService: ITextModelService,\n\t\t@IClipboardService private readonly _clipboardService: IClipboardService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IOpenerService private readonly _openerService: IOpenerService,\n\t\t@INativeHostService private readonly _nativeHostService: INativeHostService,\n\t\t@IProductService private readonly _productService: IProductService,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t) {\n\t\t// wait for everything to be ready\n\t\tPromise.all([\n\t\t\tlifecycleService.when(LifecyclePhase.Eventually),\n\t\t\textensionService.whenInstalledExtensionsRegistered()\n\t\t]).then(() => {\n\t\t\tthis._stopProfiling();\n\t\t});\n\t}\n\n\tprivate _stopProfiling(): void {\n\n\t\tif (!this._environmentService.args['prof-startup-prefix']) {\n\t\t\treturn;\n\t\t}\n\t\tconst profileFilenamePrefix = URI.file(this._environmentService.args['prof-startup-prefix']);\n\n\t\tconst dir = dirname(profileFilenamePrefix);\n\t\tconst prefix = basename(profileFilenamePrefix);\n\n\t\tconst removeArgs: string[] = ['--prof-startup'];\n\t\tconst markerFile = this._fileService.readFile(profileFilenamePrefix).then(value => removeArgs.push(...value.toString().split('|')))\n\t\t\t.then(() => this._fileService.del(profileFilenamePrefix, { recursive: true })) // (1) delete the file to tell the main process to stop profiling\n\t\t\t.then(() => new Promise<void>(resolve => { // (2) wait for main that recreates the fail to signal profiling has stopped\n\t\t\t\tconst check = () => {\n\t\t\t\t\tthis._fileService.exists(profileFilenamePrefix).then(exists => {\n\t\t\t\t\t\tif (exists) {\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetTimeout(check, 500);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tcheck();\n\t\t\t}))\n\t\t\t.then(() => this._fileService.del(profileFilenamePrefix, { recursive: true })); // (3) finally delete the file again\n\n\t\tmarkerFile.then(() => {\n\t\t\treturn this._fileService.resolve(dir).then(stat => {\n\t\t\t\treturn (stat.children ? stat.children.filter(value => value.resource.path.includes(prefix)) : []).map(stat => stat.resource);\n\t\t\t});\n\t\t}).then(files => {\n\t\t\tconst profileFiles = files.reduce((prev, cur) => `${prev}${this._labelService.getUriLabel(cur)}\\n`, '\\n');\n\n\t\t\treturn this._dialogService.confirm({\n\t\t\t\ttype: 'info',\n\t\t\t\tmessage: localize('prof.message', \"Successfully created profiles.\"),\n\t\t\t\tdetail: localize('prof.detail', \"Please create an issue and manually attach the following files:\\n{0}\", profileFiles),\n\t\t\t\tprimaryButton: localize({ key: 'prof.restartAndFileIssue', comment: ['&& denotes a mnemonic'] }, \"&&Create Issue and Restart\"),\n\t\t\t\tcancelButton: localize('prof.restart', \"Restart\")\n\t\t\t}).then(res => {\n\t\t\t\tif (res.confirmed) {\n\t\t\t\t\tPromise.all<any>([\n\t\t\t\t\t\tthis._nativeHostService.showItemInFolder(files[0].fsPath),\n\t\t\t\t\t\tthis._createPerfIssue(files.map(file => basename(file)))\n\t\t\t\t\t]).then(() => {\n\t\t\t\t\t\t// keep window stable until restart is selected\n\t\t\t\t\t\treturn this._dialogService.confirm({\n\t\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\t\tmessage: localize('prof.thanks', \"Thanks for helping us.\"),\n\t\t\t\t\t\t\tdetail: localize('prof.detail.restart', \"A final restart is required to continue to use '{0}'. Again, thank you for your contribution.\", this._productService.nameLong),\n\t\t\t\t\t\t\tprimaryButton: localize({ key: 'prof.restart.button', comment: ['&& denotes a mnemonic'] }, \"&&Restart\")\n\t\t\t\t\t\t}).then(res => {\n\t\t\t\t\t\t\t// now we are ready to restart\n\t\t\t\t\t\t\tif (res.confirmed) {\n\t\t\t\t\t\t\t\tthis._nativeHostService.relaunch({ removeArgs });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t} else {\n\t\t\t\t\t// simply restart\n\t\t\t\t\tthis._nativeHostService.relaunch({ removeArgs });\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async _createPerfIssue(files: string[]): Promise<void> {\n\t\tconst reportIssueUrl = this._productService.reportIssueUrl;\n\t\tif (!reportIssueUrl) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst contrib = PerfviewContrib.get();\n\t\tconst ref = await this._textModelResolverService.createModelReference(contrib.getInputUri());\n\t\ttry {\n\t\t\tawait this._clipboardService.writeText(ref.object.textEditorModel.getValue());\n\t\t} finally {\n\t\t\tref.dispose();\n\t\t}\n\n\t\tconst body = `\n1. :warning: We have copied additional data to your clipboard. Make sure to **paste** here. :warning:\n1. :warning: Make sure to **attach** these files from your *home*-directory: :warning:\\n${files.map(file => `-\\`${file}\\``).join('\\n')}\n`;\n\n\t\tconst baseUrl = reportIssueUrl;\n\t\tconst queryStringPrefix = baseUrl.indexOf('?') === -1 ? '?' : '&';\n\n\t\tthis._openerService.open(URI.parse(`${baseUrl}${queryStringPrefix}body=${encodeURIComponent(body)}`));\n\t}\n}\n"],
  "mappings": "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",
  "names": ["stat", "res"]
}
