{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/performance/electron-sandbox/performance.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from \"../../../../nls.js\";\nimport {\n\tExtensions as ConfigExt,\n\ttype IConfigurationRegistry,\n} from \"../../../../platform/configuration/common/configurationRegistry.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { applicationConfigurationNodeBase } from \"../../../common/configuration.js\";\nimport {\n\tExtensions,\n\ttype IWorkbenchContributionsRegistry,\n} from \"../../../common/contributions.js\";\nimport { LifecyclePhase } from \"../../../services/lifecycle/common/lifecycle.js\";\nimport { RendererProfiling } from \"./rendererAutoProfiler.js\";\nimport { StartupProfiler } from \"./startupProfiler.js\";\nimport { NativeStartupTimings } from \"./startupTimings.js\";\n\n// -- auto profiler\n\nRegistry.as<IWorkbenchContributionsRegistry>(\n\tExtensions.Workbench,\n).registerWorkbenchContribution(RendererProfiling, LifecyclePhase.Eventually);\n\n// -- startup profiler\n\nRegistry.as<IWorkbenchContributionsRegistry>(\n\tExtensions.Workbench,\n).registerWorkbenchContribution(StartupProfiler, LifecyclePhase.Restored);\n\n// -- startup timings\n\nRegistry.as<IWorkbenchContributionsRegistry>(\n\tExtensions.Workbench,\n).registerWorkbenchContribution(\n\tNativeStartupTimings,\n\tLifecyclePhase.Eventually,\n);\n\nRegistry.as<IConfigurationRegistry>(\n\tConfigExt.Configuration,\n).registerConfiguration({\n\t...applicationConfigurationNodeBase,\n\tproperties: {\n\t\t\"application.experimental.rendererProfiling\": {\n\t\t\ttype: \"boolean\",\n\t\t\tdefault: false,\n\t\t\ttags: [\"experimental\"],\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t\"experimental.rendererProfiling\",\n\t\t\t\t\"When enabled slow renderers are automatically profiled\",\n\t\t\t),\n\t\t},\n\t},\n});\n"],
  "mappings": "AAKA,SAAS,gBAAgB;AACzB;AAAA,EACC,cAAc;AAAA,OAER;AACP,SAAS,gBAAgB;AACzB,SAAS,wCAAwC;AACjD;AAAA,EACC;AAAA,OAEM;AACP,SAAS,sBAAsB;AAC/B,SAAS,yBAAyB;AAClC,SAAS,uBAAuB;AAChC,SAAS,4BAA4B;AAIrC,SAAS;AAAA,EACR,WAAW;AACZ,EAAE,8BAA8B,mBAAmB,eAAe,UAAU;AAI5E,SAAS;AAAA,EACR,WAAW;AACZ,EAAE,8BAA8B,iBAAiB,eAAe,QAAQ;AAIxE,SAAS;AAAA,EACR,WAAW;AACZ,EAAE;AAAA,EACD;AAAA,EACA,eAAe;AAChB;AAEA,SAAS;AAAA,EACR,UAAU;AACX,EAAE,sBAAsB;AAAA,EACvB,GAAG;AAAA,EACH,YAAY;AAAA,IACX,8CAA8C;AAAA,MAC7C,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM,CAAC,cAAc;AAAA,MACrB,qBAAqB;AAAA,QACpB;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD,CAAC;",
  "names": []
}
