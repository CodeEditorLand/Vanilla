{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/performance/electron-sandbox/performance.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LifecyclePhase } from '../../../services/lifecycle/common/lifecycle.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { Extensions, IWorkbenchContributionsRegistry } from '../../../common/contributions.js';\nimport { StartupProfiler } from './startupProfiler.js';\nimport { NativeStartupTimings } from './startupTimings.js';\nimport { RendererProfiling } from './rendererAutoProfiler.js';\nimport { IConfigurationRegistry, Extensions as ConfigExt } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { localize } from '../../../../nls.js';\nimport { applicationConfigurationNodeBase } from '../../../common/configuration.js';\n\n// -- auto profiler\n\nRegistry.as<IWorkbenchContributionsRegistry>(Extensions.Workbench).registerWorkbenchContribution(\n\tRendererProfiling,\n\tLifecyclePhase.Eventually\n);\n\n// -- startup profiler\n\nRegistry.as<IWorkbenchContributionsRegistry>(Extensions.Workbench).registerWorkbenchContribution(\n\tStartupProfiler,\n\tLifecyclePhase.Restored\n);\n\n// -- startup timings\n\nRegistry.as<IWorkbenchContributionsRegistry>(Extensions.Workbench).registerWorkbenchContribution(\n\tNativeStartupTimings,\n\tLifecyclePhase.Eventually\n);\n\nRegistry.as<IConfigurationRegistry>(ConfigExt.Configuration).registerConfiguration({\n\t...applicationConfigurationNodeBase,\n\t'properties': {\n\t\t'application.experimental.rendererProfiling': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\ttags: ['experimental'],\n\t\t\tmarkdownDescription: localize('experimental.rendererProfiling', \"When enabled slow renderers are automatically profiled\")\n\t\t}\n\t}\n});\n"],
  "mappings": "AAKA,SAAS,sBAAsB;AAC/B,SAAS,gBAAgB;AACzB,SAAS,YAAY,uCAAuC;AAC5D,SAAS,uBAAuB;AAChC,SAAS,4BAA4B;AACrC,SAAS,yBAAyB;AAClC,SAAS,wBAAwB,cAAc,iBAAiB;AAChE,SAAS,gBAAgB;AACzB,SAAS,wCAAwC;AAIjD,SAAS,GAAoC,WAAW,SAAS,EAAE;AAAA,EAClE;AAAA,EACA,eAAe;AAChB;AAIA,SAAS,GAAoC,WAAW,SAAS,EAAE;AAAA,EAClE;AAAA,EACA,eAAe;AAChB;AAIA,SAAS,GAAoC,WAAW,SAAS,EAAE;AAAA,EAClE;AAAA,EACA,eAAe;AAChB;AAEA,SAAS,GAA2B,UAAU,aAAa,EAAE,sBAAsB;AAAA,EAClF,GAAG;AAAA,EACH,cAAc;AAAA,IACb,8CAA8C;AAAA,MAC7C,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM,CAAC,cAAc;AAAA,MACrB,qBAAqB,SAAS,kCAAkC,wDAAwD;AAAA,IACzH;AAAA,EACD;AACD,CAAC;",
  "names": []
}
