{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/testing/common/testingDecorations.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IAction } from '../../../../base/common/actions.js';\nimport { binarySearch } from '../../../../base/common/arrays.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Position } from '../../../../editor/common/core/position.js';\nimport { IModelDeltaDecoration } from '../../../../editor/common/model.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ITestMessage } from './testTypes.js';\n\nexport interface ITestingDecorationsService {\n\t_serviceBrand: undefined;\n\n\t/**\n\t * Fires when something happened to change decorations in an editor.\n\t * Interested consumers should call {@link syncDecorations} to update them.\n\t */\n\tonDidChange: Event<void>;\n\n\t/**\n\t * Signals the code underlying a test message has changed, and it should\n\t * no longer be decorated in the source.\n\t */\n\tinvalidateResultMessage(message: ITestMessage): void;\n\n\t/**\n\t * Ensures decorations in the given document URI are up to date,\n\t * and returns them.\n\t */\n\tsyncDecorations(resource: URI): Iterable<ITestDecoration> & {\n\t\treadonly size: number;\n\t\tgetById(decorationId: string): ITestDecoration | undefined;\n\t};\n\n\t/**\n\t * Gets the range where a test ID is displayed, in the given URI.\n\t * Returns undefined if there's no such decoration.\n\t */\n\tgetDecoratedTestPosition(resource: URI, testId: string): Position | undefined;\n\n\t/**\n\t * Sets that alternative actions are displayed on the model.\n\t */\n\tupdateDecorationsAlternateAction(resource: URI, isAlt: boolean): void;\n}\n\nexport interface ITestDecoration {\n\t/**\n\t * ID of the decoration after being added to the editor, set after the\n\t * decoration is applied.\n\t */\n\treadonly id: string;\n\n\t/**\n\t * Original decoration line number.\n\t */\n\treadonly line: number;\n\n\t/**\n\t * Editor decoration instance.\n\t */\n\treadonly editorDecoration: IModelDeltaDecoration;\n\n\tgetContextMenuActions(): { object: IAction[]; dispose(): void };\n}\n\nexport class TestDecorations<T extends { id: string; line: number } = ITestDecoration> {\n\tpublic value: T[] = [];\n\t/**\n\t * Adds a new value to the decorations.\n\t */\n\tpublic push(value: T) {\n\t\tconst searchIndex = binarySearch(this.value, value, (a, b) => a.line - b.line);\n\t\tthis.value.splice(searchIndex < 0 ? ~searchIndex : searchIndex, 0, value);\n\t}\n\n\t/**\n\t * Gets decorations on each line.\n\t */\n\tpublic *lines(): Iterable<[number, T[]]> {\n\t\tif (!this.value.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet startIndex = 0;\n\t\tlet startLine = this.value[0].line;\n\t\tfor (let i = 1; i < this.value.length; i++) {\n\t\t\tconst v = this.value[i];\n\t\t\tif (v.line !== startLine) {\n\t\t\t\tyield [startLine, this.value.slice(startIndex, i)];\n\t\t\t\tstartLine = v.line;\n\t\t\t\tstartIndex = i;\n\t\t\t}\n\t\t}\n\n\t\tyield [startLine, this.value.slice(startIndex)];\n\t}\n}\n\nexport const ITestingDecorationsService = createDecorator<ITestingDecorationsService>('testingDecorationService');\n\n"],
  "mappings": ";;AAKA,SAAS,eAAe;AACxB,SAAS,oBAAoB;AAC7B,SAAS,aAAa;AACtB,SAAS,WAAW;AACpB,SAAS,gBAAgB;AACzB,SAAS,6BAA6B;AACtC,SAAS,uBAAuB;AAChC,SAAS,oBAAoB;AA0DtB,MAAM,gBAA0E;AAAA,EAtEvF,OAsEuF;AAAA;AAAA;AAAA,EAC/E,QAAa,CAAC;AAAA;AAAA;AAAA;AAAA,EAId,KAAK,OAAU;AACrB,UAAM,cAAc,aAAa,KAAK,OAAO,OAAO,CAAC,GAAG,MAAM,EAAE,OAAO,EAAE,IAAI;AAC7E,SAAK,MAAM,OAAO,cAAc,IAAI,CAAC,cAAc,aAAa,GAAG,KAAK;AAAA,EACzE;AAAA;AAAA;AAAA;AAAA,EAKA,CAAQ,QAAiC;AACxC,QAAI,CAAC,KAAK,MAAM,QAAQ;AACvB;AAAA,IACD;AAEA,QAAI,aAAa;AACjB,QAAI,YAAY,KAAK,MAAM,CAAC,EAAE;AAC9B,aAAS,IAAI,GAAG,IAAI,KAAK,MAAM,QAAQ,KAAK;AAC3C,YAAM,IAAI,KAAK,MAAM,CAAC;AACtB,UAAI,EAAE,SAAS,WAAW;AACzB,cAAM,CAAC,WAAW,KAAK,MAAM,MAAM,YAAY,CAAC,CAAC;AACjD,oBAAY,EAAE;AACd,qBAAa;AAAA,MACd;AAAA,IACD;AAEA,UAAM,CAAC,WAAW,KAAK,MAAM,MAAM,UAAU,CAAC;AAAA,EAC/C;AACD;AAEO,MAAM,6BAA6B,gBAA4C,0BAA0B;",
  "names": []
}
