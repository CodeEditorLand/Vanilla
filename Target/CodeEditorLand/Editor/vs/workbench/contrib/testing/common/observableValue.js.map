{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/testing/common/observableValue.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport type { StoredValue } from \"./storedValue.js\";\n\nexport interface IObservableValue<T> {\n\tonDidChange: Event<T>;\n\treadonly value: T;\n}\n\nexport const staticObservableValue = <T>(value: T): IObservableValue<T> => ({\n\tonDidChange: Event.None,\n\tvalue,\n});\n\nexport class MutableObservableValue<T>\n\textends Disposable\n\timplements IObservableValue<T>\n{\n\tprivate readonly changeEmitter = this._register(new Emitter<T>());\n\n\tpublic readonly onDidChange = this.changeEmitter.event;\n\n\tpublic get value() {\n\t\treturn this._value;\n\t}\n\n\tpublic set value(v: T) {\n\t\tif (v !== this._value) {\n\t\t\tthis._value = v;\n\t\t\tthis.changeEmitter.fire(v);\n\t\t}\n\t}\n\n\tpublic static stored<T>(stored: StoredValue<T>, defaultValue: T) {\n\t\tconst o = new MutableObservableValue(stored.get(defaultValue));\n\t\to._register(stored);\n\t\to._register(o.onDidChange((value) => stored.store(value)));\n\t\treturn o;\n\t}\n\n\tconstructor(private _value: T) {\n\t\tsuper();\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,SAAS,aAAa;AAC/B,SAAS,kBAAkB;AAQpB,MAAM,wBAAwB,wBAAI,WAAmC;AAAA,EAC3E,aAAa,MAAM;AAAA,EACnB;AACD,IAHqC;AAK9B,MAAM,+BACJ,WAET;AAAA,EAuBC,YAAoB,QAAW;AAC9B,UAAM;AADa;AAAA,EAEpB;AAAA,EA/CD,OAsBA;AAAA;AAAA;AAAA,EACkB,gBAAgB,KAAK,UAAU,IAAI,QAAW,CAAC;AAAA,EAEhD,cAAc,KAAK,cAAc;AAAA,EAEjD,IAAW,QAAQ;AAClB,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAW,MAAM,GAAM;AACtB,QAAI,MAAM,KAAK,QAAQ;AACtB,WAAK,SAAS;AACd,WAAK,cAAc,KAAK,CAAC;AAAA,IAC1B;AAAA,EACD;AAAA,EAEA,OAAc,OAAU,QAAwB,cAAiB;AAChE,UAAM,IAAI,IAAI,uBAAuB,OAAO,IAAI,YAAY,CAAC;AAC7D,MAAE,UAAU,MAAM;AAClB,MAAE,UAAU,EAAE,YAAY,CAAC,UAAU,OAAO,MAAM,KAAK,CAAC,CAAC;AACzD,WAAO;AAAA,EACR;AAKD;",
  "names": []
}
