{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/testing/test/common/testingUri.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { buildTestUri, ParsedTestUri, parseTestUri, TestUriType } from '../../common/testingUri.js';\n\nsuite('Workbench - Testing URIs', () => {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('round trip', () => {\n\t\tconst uris: ParsedTestUri[] = [\n\t\t\t{ type: TestUriType.ResultActualOutput, taskIndex: 1, messageIndex: 42, resultId: 'r', testExtId: 't' },\n\t\t\t{ type: TestUriType.ResultExpectedOutput, taskIndex: 1, messageIndex: 42, resultId: 'r', testExtId: 't' },\n\t\t\t{ type: TestUriType.ResultMessage, taskIndex: 1, messageIndex: 42, resultId: 'r', testExtId: 't' },\n\t\t];\n\n\t\tfor (const uri of uris) {\n\t\t\tconst serialized = buildTestUri(uri);\n\t\t\tassert.deepStrictEqual(uri, parseTestUri(serialized));\n\t\t}\n\t});\n});\n"],
  "mappings": "AAKA,OAAO,YAAY;AACnB,SAAS,+CAA+C;AACxD,SAAS,cAAc,eAAe,cAAc,mBAAmB;AAEvE,MAAM,4BAA4B,MAAM;AACvC,0CAAwC;AAExC,OAAK,cAAc,MAAM;AACxB,UAAM,OAAwB;AAAA,MAC7B,EAAE,MAAM,YAAY,oBAAoB,WAAW,GAAG,cAAc,IAAI,UAAU,KAAK,WAAW,IAAI;AAAA,MACtG,EAAE,MAAM,YAAY,sBAAsB,WAAW,GAAG,cAAc,IAAI,UAAU,KAAK,WAAW,IAAI;AAAA,MACxG,EAAE,MAAM,YAAY,eAAe,WAAW,GAAG,cAAc,IAAI,UAAU,KAAK,WAAW,IAAI;AAAA,IAClG;AAEA,eAAW,OAAO,MAAM;AACvB,YAAM,aAAa,aAAa,GAAG;AACnC,aAAO,gBAAgB,KAAK,aAAa,UAAU,CAAC;AAAA,IACrD;AAAA,EACD,CAAC;AACF,CAAC;",
  "names": []
}
