{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/testing/test/common/testStubs.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from '../../../../../base/common/uri.js';\nimport { MainThreadTestCollection } from '../../common/mainThreadTestCollection.js';\nimport { ITestItem, TestsDiff } from '../../common/testTypes.js';\nimport { TestId } from '../../common/testId.js';\nimport { createTestItemChildren, ITestItemApi, ITestItemLike, TestItemCollection, TestItemEventOp } from '../../common/testItemCollection.js';\n\nexport class TestTestItem implements ITestItemLike {\n\tprivate readonly props: ITestItem;\n\tprivate _canResolveChildren = false;\n\n\tpublic get tags() {\n\t\treturn this.props.tags.map(id => ({ id }));\n\t}\n\n\tpublic set tags(value) {\n\t\tthis.api.listener?.({ op: TestItemEventOp.SetTags, new: value, old: this.props.tags.map(t => ({ id: t })) });\n\t\tthis.props.tags = value.map(tag => tag.id);\n\t}\n\n\tpublic get canResolveChildren() {\n\t\treturn this._canResolveChildren;\n\t}\n\n\tpublic set canResolveChildren(value: boolean) {\n\t\tthis._canResolveChildren = value;\n\t\tthis.api.listener?.({ op: TestItemEventOp.UpdateCanResolveChildren, state: value });\n\t}\n\n\tpublic get parent() {\n\t\treturn this.api.parent;\n\t}\n\n\tpublic get id() {\n\t\treturn this._extId.localId;\n\t}\n\n\tpublic api: ITestItemApi<TestTestItem> = { controllerId: this._extId.controllerId };\n\n\tpublic children = createTestItemChildren(this.api, i => i.api, TestTestItem);\n\n\tconstructor(\n\t\tprivate readonly _extId: TestId,\n\t\tlabel: string,\n\t\turi?: URI,\n\t) {\n\t\tthis.props = {\n\t\t\textId: _extId.toString(),\n\t\t\tbusy: false,\n\t\t\tdescription: null,\n\t\t\terror: null,\n\t\t\tlabel,\n\t\t\trange: null,\n\t\t\tsortText: null,\n\t\t\ttags: [],\n\t\t\turi,\n\t\t};\n\t}\n\n\tpublic get<K extends keyof ITestItem>(key: K): ITestItem[K] {\n\t\treturn this.props[key];\n\t}\n\n\tpublic set<K extends keyof ITestItem>(key: K, value: ITestItem[K]) {\n\t\tthis.props[key] = value;\n\t\tthis.api.listener?.({ op: TestItemEventOp.SetProp, update: { [key]: value } });\n\t}\n\n\tpublic toTestItem(): ITestItem {\n\t\tconst props = { ...this.props };\n\t\tprops.extId = this._extId.toString();\n\t\treturn props;\n\t}\n}\n\nexport class TestTestCollection extends TestItemCollection<TestTestItem> {\n\tconstructor(controllerId = 'ctrlId') {\n\t\tconst root = new TestTestItem(new TestId([controllerId]), 'root');\n\t\t(root as any)._isRoot = true;\n\n\t\tsuper({\n\t\t\tcontrollerId,\n\t\t\tgetApiFor: t => t.api,\n\t\t\ttoITestItem: t => t.toTestItem(),\n\t\t\tgetChildren: t => t.children,\n\t\t\tgetDocumentVersion: () => undefined,\n\t\t\troot,\n\t\t});\n\t}\n\n\tpublic get currentDiff() {\n\t\treturn this.diff;\n\t}\n\n\tpublic setDiff(diff: TestsDiff) {\n\t\tthis.diff = diff;\n\t}\n}\n\n/**\n * Gets a main thread test collection initialized with the given set of\n * roots/stubs.\n */\nexport const getInitializedMainTestCollection = async (singleUse = testStubs.nested()) => {\n\tconst c = new MainThreadTestCollection({ asCanonicalUri: u => u }, async (t, l) => singleUse.expand(t, l));\n\tawait singleUse.expand(singleUse.root.id, Infinity);\n\tc.apply(singleUse.collectDiff());\n\tsingleUse.dispose();\n\treturn c;\n};\n\ntype StubTreeIds = Readonly<{ [id: string]: StubTreeIds | undefined }>;\n\nexport const makeSimpleStubTree = (ids: StubTreeIds): TestTestCollection => {\n\tconst collection = new TestTestCollection();\n\n\tconst add = (parent: TestTestItem, children: StubTreeIds, path: readonly string[]) => {\n\t\tfor (const id of Object.keys(children)) {\n\t\t\tconst item = new TestTestItem(new TestId([...path, id]), id);\n\t\t\tparent.children.add(item);\n\t\t\tif (children[id]) {\n\t\t\t\tadd(item, children[id]!, [...path, id]);\n\t\t\t}\n\t\t}\n\t};\n\n\tadd(collection.root, ids, ['ctrlId']);\n\n\treturn collection;\n};\n\nexport const testStubs = {\n\tnested: (idPrefix = 'id-') => {\n\t\tconst collection = new TestTestCollection();\n\t\tcollection.resolveHandler = item => {\n\t\t\tif (item === undefined) {\n\t\t\t\tconst a = new TestTestItem(new TestId(['ctrlId', 'id-a']), 'a', URI.file('/'));\n\t\t\t\ta.canResolveChildren = true;\n\t\t\t\tconst b = new TestTestItem(new TestId(['ctrlId', 'id-b']), 'b', URI.file('/'));\n\t\t\t\tcollection.root.children.add(a);\n\t\t\t\tcollection.root.children.add(b);\n\t\t\t} else if (item.id === idPrefix + 'a') {\n\t\t\t\titem.children.add(new TestTestItem(new TestId(['ctrlId', 'id-a', 'id-aa']), 'aa', URI.file('/')));\n\t\t\t\titem.children.add(new TestTestItem(new TestId(['ctrlId', 'id-a', 'id-ab']), 'ab', URI.file('/')));\n\t\t\t}\n\t\t};\n\n\t\treturn collection;\n\t},\n};\n"],
  "mappings": "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",
  "names": []
}
