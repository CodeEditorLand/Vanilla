import{ObjectTree as g}from"../../../../../base/browser/ui/tree/objectTree.js";import{Emitter as T}from"../../../../../base/common/event.js";import{Disposable as u,DisposableStore as D}from"../../../../../base/common/lifecycle.js";import"../../../../../platform/workspace/common/workspace.js";import{TestItemTreeElement as f,TestTreeErrorMessage as m}from"../../browser/explorerProjections/index.js";import{MainThreadTestCollection as E}from"../../common/mainThreadTestCollection.js";import"../../common/testTypes.js";import"../../common/testService.js";import{testStubs as b}from"../common/testStubs.js";import"../../../../../base/browser/ui/tree/tree.js";const p=document.createElement("div");p.style.height="1000px",p.style.width="200px";class x extends g{constructor(t,r){super("test",p,{getHeight:()=>20,getTemplateId:()=>"default"},[{disposeTemplate:({store:s})=>s.dispose(),renderElement:({depth:s,element:i},n,{container:e,store:o})=>{const l=()=>{e.textContent=`${s}:${t(i)}`,Object.assign(e.dataset,i)};l(),i instanceof f&&o.add(i.onChange(l))},disposeElement:(s,i,{store:n})=>n.clear(),renderTemplate:s=>({container:s,store:new D}),templateId:"default"}],{sorter:r??{compare:(s,i)=>t(s).localeCompare(t(i))}}),this.layout(1e3,200)}getRendered(t){const s=[...p.querySelectorAll(".monaco-tl-contents")].sort((n,e)=>h(n)-h(e)),i=[{e:"",children:[]}];for(const n of s){const[e,o]=n.textContent.split(":"),l=Number(e),d=i[l-1],a={e:o};t&&(a.data=n.dataset[t]),d.children=d.children?.concat(a)??[a],i[l]=a}return i[0].children}}const h=c=>Number(c.parentElement.parentElement.getAttribute("aria-posinset"));class S{compare(t,r){if(t instanceof m||r instanceof m)return(t instanceof m?-1:0)+(r instanceof m?1:0);if(t instanceof f&&r instanceof f&&t.test.item.uri&&r.test.item.uri&&t.test.item.uri.toString()===r.test.item.uri.toString()&&t.test.item.range&&r.test.item.range){const s=t.test.item.range.startLineNumber-r.test.item.range.startLineNumber;if(s!==0)return s}return(t.test.item.sortText||t.test.item.label).localeCompare(r.test.item.sortText||r.test.item.label)}}class W extends u{constructor(r,s=b.nested()){super();this.c=s;this._register(s),this._register(this.c.onDidGenerateDiff(e=>this.c.setDiff(e)));const i=new E({asCanonicalUri:e=>e},(e,o)=>(this.c.expand(e,o),this.isProcessingDiff||this.onDiff.fire(this.c.collectDiff()),Promise.resolve()));this._register(this.onDiff.event(e=>i.apply(e))),this.projection=this._register(r({collection:i,onDidProcessDiff:this.onDiff.event}));const n=new S;this.tree=this._register(new x(e=>"test"in e?e.test.item.label:e.message.toString(),n)),this._register(this.tree.onDidChangeCollapseState(e=>{e.node.element instanceof f&&this.projection.expandElement(e.node.element,e.deep?1/0:0)}))}onDiff=this._register(new T);onFolderChange=this._register(new T);isProcessingDiff=!1;projection;tree;pushDiff(...r){this.onDiff.fire(r)}flush(){for(this.isProcessingDiff=!0;this.c.currentDiff.length;)this.onDiff.fire(this.c.collectDiff());return this.isProcessingDiff=!1,this.projection.applyTo(this.tree),this.tree.getRendered()}}export{W as TestTreeTestHarness};
