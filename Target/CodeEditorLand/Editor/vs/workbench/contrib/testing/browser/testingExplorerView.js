var Ve=Object.defineProperty;var Oe=Object.getOwnPropertyDescriptor;var x=(m,i,e,t)=>{for(var r=t>1?void 0:t?Oe(i,e):i,l=m.length-1,s;l>=0;l--)(s=m[l])&&(r=(t?s(i,e,r):s(r))||r);return t&&r&&Ve(i,e,r),r},a=(m,i)=>(e,t)=>i(e,t,m);import*as h from"../../../../base/browser/dom.js";import{ActionBar as ie}from"../../../../base/browser/ui/actionbar/actionbar.js";import{Button as He}from"../../../../base/browser/ui/button/button.js";import{getDefaultHoverDelegate as re}from"../../../../base/browser/ui/hover/hoverDelegateFactory.js";import{renderLabelWithIcons as Ne}from"../../../../base/browser/ui/iconLabel/iconLabels.js";import{DefaultKeyboardNavigationDelegate as je}from"../../../../base/browser/ui/list/listWidget.js";import{TreeVisibility as L}from"../../../../base/browser/ui/tree/tree.js";import{Action as B,ActionRunner as We,Separator as Te}from"../../../../base/common/actions.js";import{mapFindFirst as ke}from"../../../../base/common/arraysFind.js";import{RunOnceScheduler as U,disposableTimeout as ze}from"../../../../base/common/async.js";import{Color as Ke,RGBA as $e}from"../../../../base/common/color.js";import{Emitter as Ue,Event as Ge}from"../../../../base/common/event.js";import{KeyCode as qe}from"../../../../base/common/keyCodes.js";import{Disposable as G,DisposableStore as se,MutableDisposable as A}from"../../../../base/common/lifecycle.js";import{autorun as Ye,observableFromEvent as ne}from"../../../../base/common/observable.js";import{fuzzyContains as Qe}from"../../../../base/common/strings.js";import{ThemeIcon as q}from"../../../../base/common/themables.js";import{isDefined as V}from"../../../../base/common/types.js";import"./media/testing.css";import{MarkdownRenderer as Je}from"../../../../editor/browser/widget/markdownRenderer/browser/markdownRenderer.js";import{localize as T}from"../../../../nls.js";import{DropdownWithPrimaryActionViewItem as Xe}from"../../../../platform/actions/browser/dropdownWithPrimaryActionViewItem.js";import{MenuEntryActionViewItem as Ze,createActionViewItem as et,createAndFillInActionBarActions as tt,createAndFillInContextMenuActions as it}from"../../../../platform/actions/browser/menuEntryActionViewItem.js";import{IMenuService as oe,MenuId as Se,MenuItemAction as Y}from"../../../../platform/actions/common/actions.js";import{ICommandService as ye}from"../../../../platform/commands/common/commands.js";import{IConfigurationService as le}from"../../../../platform/configuration/common/configuration.js";import{IContextKeyService as ae}from"../../../../platform/contextkey/common/contextkey.js";import{IContextMenuService as be}from"../../../../platform/contextview/browser/contextView.js";import{IHoverService as Q}from"../../../../platform/hover/browser/hover.js";import{IInstantiationService as O}from"../../../../platform/instantiation/common/instantiation.js";import{IKeybindingService as rt}from"../../../../platform/keybinding/common/keybinding.js";import{IOpenerService as st}from"../../../../platform/opener/common/opener.js";import{UnmanagedProgress as nt}from"../../../../platform/progress/common/progress.js";import{IStorageService as ot,StorageScope as H,StorageTarget as ce,WillSaveStateReason as lt}from"../../../../platform/storage/common/storage.js";import{ITelemetryService as at}from"../../../../platform/telemetry/common/telemetry.js";import{defaultButtonStyles as ct}from"../../../../platform/theme/browser/defaultStyles.js";import{foreground as dt}from"../../../../platform/theme/common/colorRegistry.js";import{spinningLoading as ut}from"../../../../platform/theme/common/iconRegistry.js";import{IThemeService as pt,registerThemingParticipant as mt}from"../../../../platform/theme/common/themeService.js";import{IUriIdentityService as ht}from"../../../../platform/uriIdentity/common/uriIdentity.js";import{registerNavigableContainer as gt}from"../../../browser/actions/widgetNavigationCommands.js";import{ViewPane as ft}from"../../../browser/parts/views/viewPane.js";import{DiffEditorInput as vt}from"../../../common/editor/diffEditorInput.js";import{IViewDescriptorService as It}from"../../../common/views.js";import{IActivityService as Tt,IconBadge as Ee,NumberBadge as we}from"../../../services/activity/common/activity.js";import{IEditorGroupsService as St}from"../../../services/editor/common/editorGroupsService.js";import{IEditorService as yt}from"../../../services/editor/common/editorService.js";import{TestingConfigKeys as E,TestingCountBadge as de,getTestingConfiguration as J}from"../common/configuration.js";import{TestCommandId as _,TestExplorerViewMode as ue,TestExplorerViewSorting as X,Testing as Ce,labelForTestInState as bt}from"../common/constants.js";import{StoredValue as Et}from"../common/storedValue.js";import{ITestExplorerFilterState as pe,TestFilterTerm as b}from"../common/testExplorerFilterState.js";import{TestId as me}from"../common/testId.js";import{ITestProfileService as he,canUseProfileWithTest as xe}from"../common/testProfileService.js";import{LiveTestResult as wt,TestResultItemChangeReason as Ct}from"../common/testResult.js";import{ITestResultService as Fe}from"../common/testResultService.js";import{ITestService as Z,testCollectionIsEmpty as xt}from"../common/testService.js";import{TestControllerCapability as Ft,TestItemExpandState as ge,TestResultState as N,TestRunProfileBitset as M}from"../common/testTypes.js";import{TestingContextKeys as F}from"../common/testingContextKeys.js";import{ITestingContinuousRunService as fe}from"../common/testingContinuousRunService.js";import{ITestingPeekOpener as Dt}from"../common/testingPeekOpener.js";import{cmpPriority as Rt,isFailedState as De,isStateWithResult as Pt,statesInOrder as At}from"../common/testingStates.js";import{TestItemTreeElement as I,TestTreeErrorMessage as w}from"./explorerProjections/index.js";import{ListProjection as Mt}from"./explorerProjections/listProjection.js";import{getTestItemContextOverlay as Bt}from"./explorerProjections/testItemContextOverlay.js";import{TestingObjectTree as _t}from"./explorerProjections/testingObjectTree.js";import{TreeProjection as Lt}from"./explorerProjections/treeProjection.js";import*as C from"./icons.js";import{DebugLastRun as Vt,ReRunLastRun as Ot}from"./testExplorerActions.js";import{TestingExplorerFilter as Ht}from"./testingExplorerFilter.js";import{collectTestStateCounts as Re,getTestProgressText as Nt}from"./testingProgressUiService.js";var jt=(e=>(e[e.Input=0]="Input",e[e.Tree=1]="Tree",e))(jt||{});let ee=class extends ft{constructor(e,t,r,l,s,c,p,d,n,u,g,f,y,v,te){super(e,r,t,l,p,c,s,d,n,g,f);this.testService=u;this.testProfileService=y;this.commandService=v;this.menuService=te;const $=this._register(new U(()=>this.layoutBody(),1));this._register(this.onDidChangeViewWelcomeState(()=>{this.shouldShowWelcome()||$.schedule()})),this._register(u.collection.onBusyProvidersChange(P=>{this.updateDiscoveryProgress(P)})),this._register(y.onDidChange(()=>this.updateActions()))}viewModel;filterActionBar=this._register(new A);container;treeHeader;discoveryProgress=this._register(new A);filter=this._register(new A);filterFocusListener=this._register(new A);dimensions={width:0,height:0};lastFocusState=0;get focusedTreeElements(){return this.viewModel.tree.getFocus().filter(V)}shouldShowWelcome(){return this.viewModel?.welcomeExperience===1}focus(){super.focus(),this.lastFocusState===1?this.viewModel.tree.domFocus():this.filter.value?.focus()}getTreeIncludeExclude(e,t,r="visible"){const l=this.viewModel.projection.value;if(!l)return{include:[],exclude:[]};const s=new Set,c=[],p=(d,n)=>{if(!(d instanceof I)||!this.viewModel.tree.hasElement(d))return;const u=this.viewModel.tree.getNode(d);if(!u.visible){n&&c.push(d.test);return}!n&&(!t||xe(t,d.test))&&(u.children.length===0||u.visibleChildrenCount*2>=u.children.length)&&u.visibleChildrenCount!==1&&(s.add(d.test),n=!0);for(const g of d.children)p(g,n)};if(r==="selected"){const d=this.viewModel.tree.getSelection().filter(V);if(d.length){e:for(const n of d)if(n instanceof I){for(let u=n;u;u=u.parent)if(s.has(u.test))continue e;s.add(n.test),n.children.forEach(u=>p(u,!0))}return{include:[...s],exclude:c}}}for(const d of e||this.testService.collection.rootItems){const n=l.getElementByTestId(d.item.extId);if(n&&!(t&&!xe(t,d)))if(this.viewModel.tree.hasElement(n))p(n,!1);else{const u=[...n.children].reduce((g,f)=>this.viewModel.tree.hasElement(f)&&this.viewModel.tree.getNode(f).visible?g+1:g,0);n.children.size>0&&u*2>=n.children.size?(s.add(n.test),n.children.forEach(g=>p(g,!0))):n.children.forEach(g=>p(g,!1))}}return{include:[...s],exclude:c}}render(){super.render(),this._register(gt({name:"testingExplorerView",focusNotifiers:[this],focusNextWidget:()=>{this.viewModel.tree.isDOMFocused()||this.viewModel.tree.domFocus()},focusPreviousWidget:()=>{this.viewModel.tree.isDOMFocused()&&this.filter.value?.focus()}}))}renderBody(e){super.renderBody(e),this.container=h.append(e,h.$(".test-explorer")),this.treeHeader=h.append(this.container,h.$(".test-explorer-header")),this.filterActionBar.value=this.createFilterActionBar();const t=h.append(this.treeHeader,h.$(".result-summary-container"));this._register(this.instantiationService.createInstance(j,t));const r=h.append(this.container,h.$(".test-explorer-tree"));this.viewModel=this.instantiationService.createInstance(W,r,this.onDidChangeBodyVisibility),this._register(this.viewModel.tree.onDidFocus(()=>this.lastFocusState=1)),this._register(this.viewModel.onChangeWelcomeVisibility(()=>this._onDidChangeViewWelcomeState.fire())),this._register(this.viewModel),this._onDidChangeViewWelcomeState.fire()}getActionViewItem(e,t){switch(e.id){case _.FilterAction:return this.filter.value=this.instantiationService.createInstance(Ht,e,t),this.filterFocusListener.value=this.filter.value.onDidFocus(()=>this.lastFocusState=0),this.filter.value;case _.RunSelectedAction:return this.getRunGroupDropdown(M.Run,e,t);case _.DebugSelectedAction:return this.getRunGroupDropdown(M.Debug,e,t);default:return super.getActionViewItem(e,t)}}getTestConfigGroupActions(e){const t=[];let r=0,l=!1;const s=this.testProfileService.getGroupDefaultProfiles(e);for(const{profiles:g,controller:f}of this.testProfileService.all()){let y=!1;for(const v of g)v.group===e&&(y||(y=!0,r++,t.push(new B(`${f.id}.$root`,f.label.get(),void 0,!1))),l=l||v.hasConfigurationHandler,t.push(new B(`${f.id}.${v.profileId}`,s.includes(v)?T("defaultTestProfile","{0} (Default)",v.label):v.label,void 0,void 0,()=>{const{include:te,exclude:$}=this.getTreeIncludeExclude(void 0,v);this.testService.runResolvedTests({exclude:$.map(P=>P.item.extId),group:v.group,targets:[{profileId:v.profileId,controllerId:v.controllerId,testIds:te.map(P=>P.item.extId)}]})})))}const c=[],p=[];e===M.Run&&p.push(["testing.profile.context.group","run"]),e===M.Debug&&p.push(["testing.profile.context.group","debug"]),e===M.Coverage&&p.push(["testing.profile.context.group","coverage"]);const d=this.contextKeyService.createOverlay(p),n=this.menuService.getMenuActions(Se.TestProfilesContext,d);it(n,c);const u=[];return t.length>1&&u.push(new B("selectDefaultTestConfigurations",T("selectDefaultConfigs","Select Default Profile"),void 0,void 0,()=>this.commandService.executeCommand(_.SelectDefaultTestProfiles,e))),l&&u.push(new B("configureTestProfiles",T("configureTestProfiles","Configure Test Profiles"),void 0,void 0,()=>this.commandService.executeCommand(_.ConfigureTestProfilesAction,e))),c.length>0?Te.join(t,c,u):Te.join(t,u)}saveState(){this.filter.value?.saveState(),super.saveState()}getRunGroupDropdown(e,t,r){const l=this.getTestConfigGroupActions(e);if(l.length<2)return super.getActionViewItem(t,r);const s=this.instantiationService.createInstance(Y,{id:t.id,title:t.label,icon:e===M.Run?C.testingRunAllIcon:C.testingDebugAllIcon},void 0,void 0,void 0,void 0),c=new B("selectRunConfig","Select Configuration...","codicon-chevron-down",!0);return this.instantiationService.createInstance(Xe,s,c,l,"",this.contextMenuService,r)}createFilterActionBar(){const e=new ie(this.treeHeader,{actionViewItemProvider:(t,r)=>this.getActionViewItem(t,r),triggerKeys:{keyDown:!1,keys:[]}});return e.push(new B(_.FilterAction)),e.getContainer().classList.add("testing-filter-action-bar"),e}updateDiscoveryProgress(e){!e&&this.discoveryProgress?this.discoveryProgress.clear():e&&!this.discoveryProgress.value&&(this.discoveryProgress.value=this.instantiationService.createInstance(nt,{location:this.getProgressLocation()}))}layoutBody(e=this.dimensions.height,t=this.dimensions.width){super.layoutBody(e,t),this.dimensions.height=e,this.dimensions.width=t,this.container.style.height=`${e}px`,this.viewModel?.layout(e-this.treeHeader.clientHeight,t),this.filter.value?.layout(t)}};ee=x([a(1,be),a(2,rt),a(3,le),a(4,O),a(5,It),a(6,ae),a(7,st),a(8,pt),a(9,Z),a(10,at),a(11,Q),a(12,he),a(13,ye),a(14,oe)],ee);const Wt=200;let j=class extends G{constructor(e,t,r,l,s,c,p){super();this.container=e;this.resultService=t;this.activityService=r;this.crService=l;this.badgeType=s.getValue(E.CountBadge),this._register(t.onResultsChanged(this.render,this)),this._register(s.onDidChangeConfiguration(n=>{n.affectsConfiguration(E.CountBadge)&&(this.badgeType=s.getValue(E.CountBadge),this.render())})),this.countHover=this._register(p.setupManagedHover(re("mouse"),this.elements.count,"")),this._register(new ie(this.elements.rerun,{actionViewItemProvider:(n,u)=>et(c,n,u)})).push(c.createInstance(Y,{...new Ot().desc,icon:C.testingRerunIcon},{...new Vt().desc,icon:C.testingDebugIcon},{},void 0,void 0),{icon:!0,label:!1}),this.render()}elementsWereAttached=!1;badgeType;lastBadge;countHover;badgeDisposable=this._register(new A);renderLoop=this._register(new U(()=>this.render(),Wt));elements=h.h("div.result-summary",[h.h("div@status"),h.h("div@count"),h.h("div@count"),h.h("span"),h.h("duration@duration"),h.h("a@rerun")]);render(){const{results:e}=this.resultService,{count:t,root:r,status:l,duration:s,rerun:c}=this.elements;if(!e.length){this.elementsWereAttached&&(r.remove(),this.elementsWereAttached=!1),this.container.innerText=T("noResults","No test results yet."),this.badgeDisposable.clear();return}const p=e.filter(n=>!n.completedAt);let d;if(p.length){l.className=q.asClassName(ut),d=Re(!0,p),this.renderLoop.schedule();const n=p[p.length-1];s.textContent=K(Date.now()-n.startedAt),c.style.display="none"}else{const n=e[0],u=ke(At,g=>n.counts[g]>0?g:void 0);l.className=q.asClassName(C.testingStatesToIcons.get(u??N.Unset)),d=Re(!1,[n]),s.textContent=n instanceof wt?K(n.completedAt-n.startedAt):"",c.style.display="block"}t.textContent=`${d.passed}/${d.totalWillBeRun}`,this.countHover.update(Nt(d)),this.renderActivityBadge(d),this.elementsWereAttached||(h.clearNode(this.container),this.container.appendChild(r),this.elementsWereAttached=!0)}renderActivityBadge(e){if(e&&this.badgeType!==de.Off&&e[this.badgeType]!==0){if(this.lastBadge instanceof we&&this.lastBadge.number===e[this.badgeType])return;this.lastBadge=new we(e[this.badgeType],t=>this.getLocalizedBadgeString(this.badgeType,t))}else if(this.crService.isEnabled()){if(this.lastBadge instanceof Ee&&this.lastBadge.icon===C.testingContinuousIsOn)return;this.lastBadge=new Ee(C.testingContinuousIsOn,()=>T("testingContinuousBadge","Tests are being watched for changes"))}else{if(!this.lastBadge)return;this.lastBadge=void 0}this.badgeDisposable.value=this.lastBadge&&this.activityService.showViewActivity(Ce.ExplorerViewId,{badge:this.lastBadge})}getLocalizedBadgeString(e,t){switch(e){case de.Passed:return T("testingCountBadgePassed","{0} passed tests",t);case de.Skipped:return T("testingCountBadgeSkipped","{0} skipped tests",t);default:return T("testingCountBadgeFailed","{0} failed tests",t)}}};j=x([a(1,Fe),a(2,Tt),a(3,fe),a(4,le),a(5,O),a(6,Q)],j);var kt=(t=>(t[t.None=0]="None",t[t.ForWorkspace=1]="ForWorkspace",t[t.ForDocument=2]="ForDocument",t))(kt||{});let W=class extends G{constructor(e,t,r,l,s,c,p,d,n,u,g,f,y,v,te,$,P){super();this.menuService=c;this.contextMenuService=p;this.testService=d;this.filterState=n;this.instantiationService=u;this.storageService=g;this.contextKeyService=f;this.testResults=y;this.peekOpener=v;this.testProfileService=te;this.crService=$;this.hasPendingReveal=!!n.reveal.value,this.noTestForDocumentWidget=this._register(u.createInstance(z,e)),this._viewMode.set(this.storageService.get("testing.viewMode",H.WORKSPACE,ue.Tree)),this._viewSorting.set(this.storageService.get("testing.viewSorting",H.WORKSPACE,X.ByLocation)),this.reevaluateWelcomeState(),this.filter=this.instantiationService.createInstance(k,d.collection),this.tree=u.createInstance(_t,"Test Explorer List",e,new Yt,[u.createInstance(R,this.actionRunner),u.createInstance(D)],{identityProvider:u.createInstance(Qt),hideTwistiesOfChildlessElements:!1,sorter:u.createInstance($t,this),keyboardNavigationLabelProvider:u.createInstance(qt),accessibilityProvider:u.createInstance(Gt),filter:this.filter,findWidgetEnabled:!1,openOnSingleClick:!1});const Me=this._register(new U(()=>{const o=this.tree.getOptimizedViewState(this.lastViewState.get({})),S=this.projection.value;S&&(S.lastState=o)},3e3));this._register(this.tree.onDidChangeCollapseState(o=>{o.node.element instanceof I&&(o.node.collapsed||this.projection.value?.expandElement(o.node.element,o.deep?Number.POSITIVE_INFINITY:0),Me.schedule())})),this._register(this.crService.onDidChange(o=>{if(o){const S=this.projection.value?.getElementByTestId(o);this.tree.resort(S?.parent&&this.tree.hasElement(S.parent)?S.parent:null,!1)}})),this._register(t(o=>{o&&this.ensureProjection()})),this._register(this.tree.onContextMenu(o=>this.onContextMenu(o))),this._register(Ge.any(n.text.onDidChange,n.fuzzy.onDidChange,d.excluded.onTestExclusionsChanged)(this.tree.refilter,this.tree)),this._register(this.tree.onDidOpen(o=>{o.element instanceof I&&!o.element.children.size&&o.element.test.item.uri&&P.executeCommand("vscode.revealTest",o.element.test.item.extId)})),this._register(this.tree),this._register(this.onChangeWelcomeVisibility(o=>{this.noTestForDocumentWidget.setVisible(o===2)})),this._register(h.addStandardDisposableListener(this.tree.getHTMLElement(),"keydown",o=>{o.equals(qe.Enter)?this.handleExecuteKeypress(o):je.mightProducePrintableCharacter(o)&&(n.text.value=o.browserEvent.key,n.focusInput())})),this._register(n.reveal.onDidChange(o=>this.revealById(o,void 0,!1))),this._register(t(o=>{o&&n.focusInput()})),this._register(this.tree.onDidChangeSelection(o=>{if(h.isMouseEvent(o.browserEvent)&&(o.browserEvent.altKey||o.browserEvent.shiftKey))return;const S=o.elements[0];S&&o.browserEvent&&S instanceof I&&S.children.size===0&&S.test.expand===ge.NotExpandable&&this.tryPeekError(S)}));let ve=J(r,E.FollowRunningTest);this._register(r.onDidChangeConfiguration(o=>{o.affectsConfiguration(E.FollowRunningTest)&&(ve=J(r,E.FollowRunningTest))}));let Ie=J(r,E.AlwaysRevealTestOnStateChange);this._register(r.onDidChangeConfiguration(o=>{o.affectsConfiguration(E.AlwaysRevealTestOnStateChange)&&(Ie=J(r,E.AlwaysRevealTestOnStateChange))})),this._register(y.onTestChanged(o=>{ve&&o.reason===Ct.OwnStateChange&&(this.tree.selectionSize>1||o.item.ownComputedState!==N.Running&&!(o.previousState===N.Queued&&Pt(o.item.ownComputedState))||this.revealById(o.item.item.extId,Ie,!1))})),this._register(y.onResultsChanged(()=>{this.tree.resort(null)})),this._register(this.testProfileService.onDidChange(()=>{this.tree.rerender()}));const Be=ne(this,l.onDidEditorsChange,()=>new Set(s.groups.flatMap(o=>o.editors).map(o=>o.resource).filter(V))),_e=ne(this,l.onDidActiveEditorChange,()=>l.activeEditor instanceof vt?l.activeEditor.primary.resource:l.activeEditor?.resource),Le=ne(this.filterState.text.onDidChange,()=>this.filterState.text);this._register(Ye(o=>{Le.read(o),this.filterState.isFilteringFor(b.OpenedFiles)?this.filter.filterToDocumentUri([...Be.read(o)]):this.filter.filterToDocumentUri([_e.read(o)].filter(V)),(this.filterState.isFilteringFor(b.CurrentDoc)||this.filterState.isFilteringFor(b.OpenedFiles))&&this.tree.refilter()})),this._register(this.storageService.onWillSaveState(({reason:o})=>{o===lt.SHUTDOWN&&this.lastViewState.store(this.tree.getOptimizedViewState())}))}tree;filter;projection=this._register(new A);revealTimeout=new A;_viewMode=F.viewMode.bindTo(this.contextKeyService);_viewSorting=F.viewSorting.bindTo(this.contextKeyService);welcomeVisibilityEmitter=new Ue;actionRunner=new Ut(()=>this.tree.getSelection().filter(V));lastViewState=this._register(new Et({key:"testing.treeState",scope:H.WORKSPACE,target:ce.MACHINE},this.storageService));noTestForDocumentWidget;hasPendingReveal=!1;onChangeWelcomeVisibility=this.welcomeVisibilityEmitter.event;welcomeExperience=0;get viewMode(){return this._viewMode.get()??ue.Tree}set viewMode(e){e!==this._viewMode.get()&&(this._viewMode.set(e),this.updatePreferredProjection(),this.storageService.store("testing.viewMode",e,H.WORKSPACE,ce.MACHINE))}get viewSorting(){return this._viewSorting.get()??X.ByStatus}set viewSorting(e){e!==this._viewSorting.get()&&(this._viewSorting.set(e),this.tree.resort(null),this.storageService.store("testing.viewSorting",e,H.WORKSPACE,ce.MACHINE))}layout(e,t){this.tree.layout(e,t)}revealById(e,t=!0,r=!0){if(!e){this.hasPendingReveal=!1;return}const l=this.ensureProjection();let s=0;const c=[...me.fromString(e).idsFromRoot()];for(let p=c.length-1;p>=s;p--){const d=l.getElementByTestId(c[p].toString());if(!d||!this.tree.hasElement(d))continue;if(p<c.length-1&&t){this.tree.expand(d),s=p+1,p=c.length-1;continue}let n=d;for(let u=d;u instanceof I;u=u.parent){if(u.test&&this.testService.excluded.contains(u.test)){this.filterState.toggleFilteringFor(b.Hidden,!0);break}!t&&this.tree.hasElement(u)&&this.tree.isCollapsed(u)&&(n=u)}this.filterState.reveal.value=void 0,this.hasPendingReveal=!1,r&&this.tree.domFocus(),this.tree.getRelativeTop(n)===null&&this.tree.reveal(n,.5),this.revealTimeout.value=ze(()=>{this.tree.setFocus([n]),this.tree.setSelection([n])},1);return}this.hasPendingReveal=!0}async collapseAll(){this.tree.collapseAll()}tryPeekError(e){const t=e.test&&this.testResults.getStateById(e.test.item.extId);return t&&t[1].tasks.some(r=>De(r.state))?this.peekOpener.tryPeekFirstError(t[0],t[1],{preserveFocus:!0}):!1}onContextMenu(e){const t=e.element;if(!(t instanceof I))return;const{actions:r}=Ae(this.contextKeyService,this.menuService,this.testService,this.crService,this.testProfileService,t);this.contextMenuService.showContextMenu({getAnchor:()=>e.anchor,getActions:()=>r.secondary,getActionsContext:()=>t,actionRunner:this.actionRunner})}handleExecuteKeypress(e){const t=this.tree.getFocus(),r=this.tree.getSelection();let l;t.length===1&&r.includes(t[0])?(e.browserEvent?.preventDefault(),l=r):l=t;const s=l.filter(c=>c instanceof I);s.length&&this.testService.runTests({group:M.Run,tests:s.map(c=>c.test)})}reevaluateWelcomeState(){const t=this.testService.collection.busyProviders===0&&xt(this.testService.collection)?this.filterState.isFilteringFor(b.CurrentDoc)?2:1:0;t!==this.welcomeExperience&&(this.welcomeExperience=t,this.welcomeVisibilityEmitter.fire(t))}ensureProjection(){return this.projection.value??this.updatePreferredProjection()}updatePreferredProjection(){this.projection.clear();const e=this.lastViewState.get({});this._viewMode.get()===ue.List?this.projection.value=this.instantiationService.createInstance(Mt,e):this.projection.value=this.instantiationService.createInstance(Lt,e);const t=this._register(new U(()=>this.applyProjectionChanges(),200));return this.projection.value.onUpdate(()=>{t.isScheduled()||t.schedule()}),this.applyProjectionChanges(),this.projection.value}applyProjectionChanges(){this.reevaluateWelcomeState(),this.projection.value?.applyTo(this.tree),this.tree.refilter(),this.hasPendingReveal&&this.revealById(this.filterState.reveal.value)}getSelectedTests(){return this.tree.getSelection()}};W=x([a(2,le),a(3,yt),a(4,St),a(5,oe),a(6,be),a(7,Z),a(8,pe),a(9,O),a(10,ot),a(11,ae),a(12,Fe),a(13,Dt),a(14,he),a(15,fe),a(16,ye)],W);var zt=(t=>(t[t.Exclude=0]="Exclude",t[t.Inherit=1]="Inherit",t[t.Include=2]="Include",t))(zt||{});const Kt=(m,i,e,t)=>{const r=[t?[t]:m.rootIds];for(;r.length;)for(const l of r.pop()){const s=m.getNodeById(l);if(s&&!(!s.item.uri||!i.extUri.isEqualOrParent(e,s.item.uri))){if(s.item.range||s.expand===ge.Expandable)return!0;r.push(s.children)}}return!1};let k=class{constructor(i,e,t,r){this.collection=i;this.state=e;this.testService=t;this.uriIdentityService=r}documentUris=[];filter(i){if(i instanceof w)return L.Visible;if(i.test&&!this.state.isFilteringFor(b.Hidden)&&this.testService.excluded.contains(i.test))return L.Hidden;switch(Math.min(this.testFilterText(i),this.testLocation(i),this.testState(i),this.testTags(i))){case 0:return L.Hidden;case 2:return L.Visible;default:return L.Recurse}}filterToDocumentUri(i){this.documentUris=[...i]}testTags(i){return!this.state.includeTags.size&&!this.state.excludeTags.size||(!this.state.includeTags.size||i.test.item.tags.some(e=>this.state.includeTags.has(e)))&&i.test.item.tags.every(e=>!this.state.excludeTags.has(e))?2:1}testState(i){return this.state.isFilteringFor(b.Failed)?De(i.state)?2:1:this.state.isFilteringFor(b.Executed)?i.state!==N.Unset?2:1:2}testLocation(i){return this.documentUris.length===0||!this.state.isFilteringFor(b.CurrentDoc)&&!this.state.isFilteringFor(b.OpenedFiles)||!(i instanceof I)||this.documentUris.some(e=>Kt(this.collection,this.uriIdentityService,e,i.test.item.extId))?2:1}testFilterText(i){if(this.state.globList.length===0)return 2;const e=this.state.fuzzy.value;for(let t=i;t;t=t.parent){let r=this.state.globList[0].include===!1?2:1;const l=t.test.item.label.toLowerCase();for(const{include:s,text:c}of this.state.globList)(e?Qe(l,c):l.includes(c))&&(r=s?2:0);if(r!==1)return r}return 1}};k=x([a(1,pe),a(2,Z),a(3,ht)],k);class $t{constructor(i){this.viewModel=i}compare(i,e){if(i instanceof w||e instanceof w)return(i instanceof w?-1:0)+(e instanceof w?1:0);const t=(e.duration||0)-(i.duration||0);if(this.viewModel.viewSorting===X.ByDuration&&t!==0)return t;const r=Rt(i.state,e.state);if(this.viewModel.viewSorting===X.ByStatus&&r!==0)return r;let l=!1;if(i instanceof I&&e instanceof I&&i.test.item.uri&&e.test.item.uri&&i.test.item.uri.toString()===e.test.item.uri.toString()&&i.test.item.range&&e.test.item.range){l=!0;const p=i.test.item.range.startLineNumber-e.test.item.range.startLineNumber;if(p!==0)return p}const s=i.test.item.sortText,c=e.test.item.sortText;return l&&!s&&!c?0:(s||i.test.item.label).localeCompare(c||e.test.item.label)}}let z=class extends G{el;constructor(i,e){super();const t=this.el=h.append(i,h.$(".testing-no-test-placeholder")),r=h.append(t,h.$("p"));r.innerText=T("testingNoTest","No tests were found in this file.");const l=T("testingFindExtension","Show Workspace Tests"),s=this._register(new He(t,{title:l,...ct}));s.label=l,this._register(s.onDidClick(()=>e.toggleFilteringFor(b.CurrentDoc,!1)))}setVisible(i){this.el.classList.toggle("visible",i)}};z=x([a(1,pe)],z);class Ut extends We{constructor(e){super();this.getSelectedTests=e}async runAction(e,t){if(!(e instanceof Y))return super.runAction(e,t);const r=this.getSelectedTests(),c=(r.some(p=>p===t)?r:[t]).filter(p=>p instanceof I);await e.run(...c)}}const Pe=m=>{let i=bt(m.description||m.test.item.label,m.state);return m instanceof I&&(m.duration!==void 0&&(i=T({key:"testing.treeElementLabelDuration",comment:["{0} is the original label in testing.treeElementLabel, {1} is a duration"]},"{0}, in {1}",i,K(m.duration))),m.retired&&(i=T({key:"testing.treeElementLabelOutdated",comment:["{0} is the original label in testing.treeElementLabel"]},"{0}, outdated result",i))),i};class Gt{getWidgetAriaLabel(){return T("testExplorer","Test Explorer")}getAriaLabel(i){return i instanceof w?i.description:Pe(i)}}class qt{getKeyboardNavigationLabel(i){return i instanceof w?i.message:i.test.item.label}}class Yt{getHeight(i){return i instanceof w?27:22}getTemplateId(i){return i instanceof w?D.ID:R.ID}}class Qt{getId(i){return i.treeId}}let D=class{constructor(i,e){this.hoverService=i;this.renderer=e.createInstance(Je,{})}static ID="error";renderer;get templateId(){return D.ID}renderTemplate(i){return{label:h.append(i,h.$(".error")),disposable:new se}}renderElement({element:i},e,t){if(h.clearNode(t.label),typeof i.message=="string")t.label.innerText=i.message;else{const r=this.renderer.render(i.message,{inline:!0});t.label.appendChild(r.element)}t.disposable.add(this.hoverService.setupManagedHover(re("mouse"),t.label,i.description))}disposeTemplate(i){i.disposable.dispose()}};D=x([a(0,Q),a(1,O)],D);let R=class extends G{constructor(e,t,r,l,s,c,p,d){super();this.actionRunner=e;this.menuService=t;this.testService=r;this.profiles=l;this.contextKeyService=s;this.instantiationService=c;this.crService=p;this.hoverService=d}static ID="testItem";templateId=R.ID;renderTemplate(e){const t=h.append(e,h.$(".test-item")),r=h.append(t,h.$(".computed-state")),l=h.append(t,h.$(".label")),s=new se;h.append(t,h.$(q.asCSSSelector(C.testingHiddenIcon)));const c=s.add(new ie(t,{actionRunner:this.actionRunner,actionViewItemProvider:(d,n)=>d instanceof Y?this.instantiationService.createInstance(Ze,d,{hoverDelegate:n.hoverDelegate}):void 0}));s.add(this.crService.onDidChange(d=>{const n=p.current?.test.item.extId;n&&(!d||d===n||me.isChild(n,d))&&this.fillActionBar(p.current,p)}));const p={wrapper:t,label:l,actionBar:c,icon:r,elementDisposable:new se,templateDisposable:s};return p}disposeTemplate(e){e.templateDisposable.clear()}disposeElement(e,t,r){r.elementDisposable.clear()}fillActionBar(e,t){const{actions:r,contextOverlay:l}=Ae(this.contextKeyService,this.menuService,this.testService,this.crService,this.profiles,e),s=!!l.getContextKeyValue(F.isContinuousModeOn.key),c=!s&&this.crService.isEnabledForAChildOf(e.test.item.extId);t.actionBar.domNode.classList.toggle("testing-is-continuous-run",s||c),t.actionBar.clear(),t.actionBar.context=e,t.actionBar.push(r.primary,{icon:!0,label:!1})}renderElement(e,t,r){r.elementDisposable.clear(),r.current=e.element,this.fillActionBar(e.element,r),r.elementDisposable.add(e.element.onChange(()=>this._renderElement(e,r))),this._renderElement(e,r)}_renderElement(e,t){const r=this.testService.excluded.contains(e.element.test);t.wrapper.classList.toggle("test-is-hidden",r);const l=C.testingStatesToIcons.get(e.element.test.expand===ge.BusyExpanding||e.element.test.item.busy?N.Running:e.element.state);t.icon.className="computed-state "+(l?q.asClassName(l):""),e.element.retired&&(t.icon.className+=" retired"),t.elementDisposable.add(this.hoverService.setupManagedHover(re("mouse"),t.label,Pe(e.element))),e.element.test.item.label.trim()?h.reset(t.label,...Ne(e.element.test.item.label)):t.label.textContent="\xA0";let s=e.element.description;e.element.duration!==void 0&&(s=s?`${s}: ${K(e.element.duration)}`:K(e.element.duration)),s&&h.append(t.label,h.$("span.test-label-description",{},s))}};R=x([a(1,oe),a(2,Z),a(3,he),a(4,ae),a(5,O),a(6,fe),a(7,Q)],R);const K=m=>m<10?`${m.toFixed(1)}ms`:m<1e3?`${m.toFixed(0)}ms`:`${(m/1e3).toFixed(1)}s`,Ae=(m,i,e,t,r,l)=>{const s=l instanceof I?l.test:void 0,c=Bt(s,s?r.capabilitiesForTest(s.item):0);if(c.push(["view",Ce.ExplorerViewId]),s){const f=e.getTestController(s.controllerId),y=!!f&&r.getControllerProfiles(f.id).some(v=>v.supportsContinuousRun);c.push([F.canRefreshTests.key,f&&!!(f.capabilities.get()&Ft.Refresh)&&me.isRoot(s.item.extId)],[F.testItemIsHidden.key,e.excluded.contains(s)],[F.isContinuousModeOn.key,y&&t.isSpecificallyEnabledFor(s.item.extId)],[F.isParentRunningContinuously.key,y&&t.isEnabledForAParentOf(s.item.extId)],[F.supportsContinuousRun.key,y])}const p=m.createOverlay(c),d=i.getMenuActions(Se.TestItem,p,{shouldForwardArgs:!0}),g={primary:[],secondary:[]};return tt(d,g,"inline"),{actions:g,contextOverlay:p}};mt((m,i)=>{if(m.type==="dark"){const e=m.getColor(dt);if(e){const t=new Ke(new $e(e.rgba.r,e.rgba.g,e.rgba.b,.65));i.addRule(`.test-explorer .test-explorer-messages { color: ${t}; }`)}}});export{ee as TestingExplorerView};
