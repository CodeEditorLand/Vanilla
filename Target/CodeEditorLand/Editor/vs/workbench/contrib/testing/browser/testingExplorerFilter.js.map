{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/testing/browser/testingExplorerFilter.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { ActionBar } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { BaseActionViewItem, IActionViewItemOptions, IBaseActionViewItemOptions } from '../../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { AnchorAlignment } from '../../../../base/browser/ui/contextview/contextview.js';\nimport { DropdownMenuActionViewItem } from '../../../../base/browser/ui/dropdown/dropdownActionViewItem.js';\nimport { Action, IAction, IActionRunner, Separator } from '../../../../base/common/actions.js';\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { localize } from '../../../../nls.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { StorageScope, StorageTarget } from '../../../../platform/storage/common/storage.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { ContextScopedSuggestEnabledInputWithHistory, SuggestEnabledInputWithHistory, SuggestResultsProvider } from '../../codeEditor/browser/suggestEnabledInput/suggestEnabledInput.js';\nimport { testingFilterIcon } from './icons.js';\nimport { StoredValue } from '../common/storedValue.js';\nimport { ITestExplorerFilterState, TestFilterTerm } from '../common/testExplorerFilterState.js';\nimport { ITestService } from '../common/testService.js';\nimport { denamespaceTestTag } from '../common/testTypes.js';\n\nconst testFilterDescriptions: { [K in TestFilterTerm]: string } = {\n\t[TestFilterTerm.Failed]: localize('testing.filters.showOnlyFailed', \"Show Only Failed Tests\"),\n\t[TestFilterTerm.Executed]: localize('testing.filters.showOnlyExecuted', \"Show Only Executed Tests\"),\n\t[TestFilterTerm.CurrentDoc]: localize('testing.filters.currentFile', \"Show in Active File Only\"),\n\t[TestFilterTerm.OpenedFiles]: localize('testing.filters.openedFiles', \"Show in Opened Files Only\"),\n\t[TestFilterTerm.Hidden]: localize('testing.filters.showExcludedTests', \"Show Hidden Tests\"),\n};\n\nexport class TestingExplorerFilter extends BaseActionViewItem {\n\tprivate input!: SuggestEnabledInputWithHistory;\n\tprivate wrapper!: HTMLDivElement;\n\tprivate readonly focusEmitter = this._register(new Emitter<void>());\n\tpublic readonly onDidFocus = this.focusEmitter.event;\n\tprivate readonly history: StoredValue<{ values: string[]; lastValue: string } | string[]> = this._register(this.instantiationService.createInstance(StoredValue, {\n\t\tkey: 'testing.filterHistory2',\n\t\tscope: StorageScope.WORKSPACE,\n\t\ttarget: StorageTarget.MACHINE\n\t}));\n\n\tprivate readonly filtersAction = new Action('markersFiltersAction', localize('testing.filters.menu', \"More Filters...\"), 'testing-filter-button ' + ThemeIcon.asClassName(testingFilterIcon));\n\n\tconstructor(\n\t\taction: IAction,\n\t\toptions: IBaseActionViewItemOptions,\n\t\t@ITestExplorerFilterState private readonly state: ITestExplorerFilterState,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ITestService private readonly testService: ITestService,\n\t) {\n\t\tsuper(null, action, options);\n\t\tthis.updateFilterActiveState();\n\t\tthis._register(testService.excluded.onTestExclusionsChanged(this.updateFilterActiveState, this));\n\t}\n\n\t/**\n\t * @override\n\t */\n\tpublic override render(container: HTMLElement) {\n\t\tcontainer.classList.add('testing-filter-action-item');\n\n\t\tconst updateDelayer = this._register(new Delayer<void>(400));\n\t\tconst wrapper = this.wrapper = dom.$('.testing-filter-wrapper');\n\t\tcontainer.appendChild(wrapper);\n\n\t\tlet history = this.history.get({ lastValue: '', values: [] });\n\t\tif (history instanceof Array) {\n\t\t\thistory = { lastValue: '', values: history };\n\t\t}\n\t\tif (history.lastValue) {\n\t\t\tthis.state.setText(history.lastValue);\n\t\t}\n\n\t\tconst input = this.input = this._register(this.instantiationService.createInstance(ContextScopedSuggestEnabledInputWithHistory, {\n\t\t\tid: 'testing.explorer.filter',\n\t\t\tariaLabel: localize('testExplorerFilterLabel', \"Filter text for tests in the explorer\"),\n\t\t\tparent: wrapper,\n\t\t\tsuggestionProvider: {\n\t\t\t\ttriggerCharacters: ['@'],\n\t\t\t\tprovideResults: () => [\n\t\t\t\t\t...Object.entries(testFilterDescriptions).map(([label, detail]) => ({ label, detail })),\n\t\t\t\t\t...Iterable.map(this.testService.collection.tags.values(), tag => {\n\t\t\t\t\t\tconst { ctrlId, tagId } = denamespaceTestTag(tag.id);\n\t\t\t\t\t\tconst insertText = `@${ctrlId}:${tagId}`;\n\t\t\t\t\t\treturn ({\n\t\t\t\t\t\t\tlabel: `@${ctrlId}:${tagId}`,\n\t\t\t\t\t\t\tdetail: this.testService.collection.getNodeById(ctrlId)?.item.label,\n\t\t\t\t\t\t\tinsertText: tagId.includes(' ') ? `@${ctrlId}:\"${tagId.replace(/([\"\\\\])/g, '\\\\$1')}\"` : insertText,\n\t\t\t\t\t\t});\n\t\t\t\t\t}),\n\t\t\t\t].filter(r => !this.state.text.value.includes(r.label)),\n\t\t\t} satisfies SuggestResultsProvider,\n\t\t\tresourceHandle: 'testing:filter',\n\t\t\tsuggestOptions: {\n\t\t\t\tvalue: this.state.text.value,\n\t\t\t\tplaceholderText: localize('testExplorerFilter', \"Filter (e.g. text, !exclude, @tag)\"),\n\t\t\t},\n\t\t\thistory: history.values\n\t\t}));\n\n\t\tthis._register(this.state.text.onDidChange(newValue => {\n\t\t\tif (input.getValue() !== newValue) {\n\t\t\t\tinput.setValue(newValue);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.state.onDidRequestInputFocus(() => {\n\t\t\tinput.focus();\n\t\t}));\n\n\t\tthis._register(input.onDidFocus(() => {\n\t\t\tthis.focusEmitter.fire();\n\t\t}));\n\n\t\tthis._register(input.onInputDidChange(() => updateDelayer.trigger(() => {\n\t\t\tinput.addToHistory();\n\t\t\tthis.state.setText(input.getValue());\n\t\t})));\n\n\t\tconst actionbar = this._register(new ActionBar(container, {\n\t\t\tactionViewItemProvider: (action, options) => {\n\t\t\t\tif (action.id === this.filtersAction.id) {\n\t\t\t\t\treturn this.instantiationService.createInstance(FiltersDropdownMenuActionViewItem, action, options, this.state, this.actionRunner);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t}));\n\t\tactionbar.push(this.filtersAction, { icon: true, label: false });\n\n\t\tthis.layout(this.wrapper.clientWidth);\n\t}\n\n\tpublic layout(width: number) {\n\t\tthis.input.layout(new dom.Dimension(\n\t\t\twidth - /* horizontal padding */ 24 - /* editor padding */ 8 - /* filter button padding */ 22,\n\t\t\t20, // line height from suggestEnabledInput.ts\n\t\t));\n\t}\n\n\n\t/**\n\t * Focuses the filter input.\n\t */\n\tpublic override focus(): void {\n\t\tthis.input.focus();\n\t}\n\n\t/**\n\t * Persists changes to the input history.\n\t */\n\tpublic saveState() {\n\t\tthis.history.store({ lastValue: this.input.getValue(), values: this.input.getHistory() });\n\t}\n\n\t/**\n\t * @override\n\t */\n\tpublic override dispose() {\n\t\tthis.saveState();\n\t\tsuper.dispose();\n\t}\n\n\t/**\n\t * Updates the 'checked' state of the filter submenu.\n\t */\n\tprivate updateFilterActiveState() {\n\t\tthis.filtersAction.checked = this.testService.excluded.hasAny;\n\t}\n}\n\n\nclass FiltersDropdownMenuActionViewItem extends DropdownMenuActionViewItem {\n\n\tconstructor(\n\t\taction: IAction,\n\t\toptions: IActionViewItemOptions,\n\t\tprivate readonly filters: ITestExplorerFilterState,\n\t\tactionRunner: IActionRunner,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@ITestService private readonly testService: ITestService,\n\t) {\n\t\tsuper(action,\n\t\t\t{ getActions: () => this.getActions() },\n\t\t\tcontextMenuService,\n\t\t\t{\n\t\t\t\tactionRunner,\n\t\t\t\tclassNames: action.class,\n\t\t\t\tanchorAlignmentProvider: () => AnchorAlignment.RIGHT,\n\t\t\t\tmenuAsChild: true\n\t\t\t}\n\t\t);\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\t\tthis.updateChecked();\n\t}\n\n\tprivate getActions(): IAction[] {\n\t\treturn [\n\t\t\t...[TestFilterTerm.Failed, TestFilterTerm.Executed, TestFilterTerm.CurrentDoc, TestFilterTerm.OpenedFiles].map(term => ({\n\t\t\t\tchecked: this.filters.isFilteringFor(term),\n\t\t\t\tclass: undefined,\n\t\t\t\tenabled: true,\n\t\t\t\tid: term,\n\t\t\t\tlabel: testFilterDescriptions[term],\n\t\t\t\trun: () => this.filters.toggleFilteringFor(term),\n\t\t\t\ttooltip: '',\n\t\t\t\tdispose: () => null\n\t\t\t})),\n\t\t\tnew Separator(),\n\t\t\t{\n\t\t\t\tchecked: this.filters.fuzzy.value,\n\t\t\t\tclass: undefined,\n\t\t\t\tenabled: true,\n\t\t\t\tid: 'fuzzy',\n\t\t\t\tlabel: localize('testing.filters.fuzzyMatch', \"Fuzzy Match\"),\n\t\t\t\trun: () => this.filters.fuzzy.value = !this.filters.fuzzy.value,\n\t\t\t\ttooltip: ''\n\t\t\t},\n\t\t\tnew Separator(),\n\t\t\t{\n\t\t\t\tchecked: this.filters.isFilteringFor(TestFilterTerm.Hidden),\n\t\t\t\tclass: undefined,\n\t\t\t\tenabled: this.testService.excluded.hasAny,\n\t\t\t\tid: 'showExcluded',\n\t\t\t\tlabel: localize('testing.filters.showExcludedTests', \"Show Hidden Tests\"),\n\t\t\t\trun: () => this.filters.toggleFilteringFor(TestFilterTerm.Hidden),\n\t\t\t\ttooltip: ''\n\t\t\t},\n\t\t\t{\n\t\t\t\tclass: undefined,\n\t\t\t\tenabled: this.testService.excluded.hasAny,\n\t\t\t\tid: 'removeExcluded',\n\t\t\t\tlabel: localize('testing.filters.removeTestExclusions', \"Unhide All Tests\"),\n\t\t\t\trun: async () => this.testService.excluded.clear(),\n\t\t\t\ttooltip: ''\n\t\t\t}\n\t\t];\n\t}\n\n\tprotected override updateChecked(): void {\n\t\tthis.element!.classList.toggle('checked', this._action.checked);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
