{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/testing/browser/codeCoverageDecorations.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport { ActionViewItem } from \"../../../../base/browser/ui/actionbar/actionViewItems.js\";\nimport {\n\tActionBar,\n\tActionsOrientation,\n} from \"../../../../base/browser/ui/actionbar/actionbar.js\";\nimport { renderIcon } from \"../../../../base/browser/ui/iconLabel/iconLabels.js\";\nimport { Action } from \"../../../../base/common/actions.js\";\nimport { mapFindFirst } from \"../../../../base/common/arraysFind.js\";\nimport { assert, assertNever } from \"../../../../base/common/assert.js\";\nimport { CancellationTokenSource } from \"../../../../base/common/cancellation.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport {\n\ttype IMarkdownString,\n\tMarkdownString,\n} from \"../../../../base/common/htmlContent.js\";\nimport { KeyChord, KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport { Lazy } from \"../../../../base/common/lazy.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\tMutableDisposable,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport {\n\tautorun,\n\tderived,\n\tobservableFromEvent,\n} from \"../../../../base/common/observable.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { URI, isUriComponents } from \"../../../../base/common/uri.js\";\nimport {\n\ttype ICodeEditor,\n\ttype IOverlayWidget,\n\ttype IOverlayWidgetPosition,\n\tMouseTargetType,\n\tOverlayWidgetPositionPreference,\n} from \"../../../../editor/browser/editorBrowser.js\";\nimport { ICodeEditorService } from \"../../../../editor/browser/services/codeEditorService.js\";\nimport { EditorOption } from \"../../../../editor/common/config/editorOptions.js\";\nimport { Position } from \"../../../../editor/common/core/position.js\";\nimport { Range } from \"../../../../editor/common/core/range.js\";\nimport type { IEditorContribution } from \"../../../../editor/common/editorCommon.js\";\nimport {\n\ttype IModelDecorationOptions,\n\ttype ITextModel,\n\tInjectedTextCursorStops,\n\ttype InjectedTextOptions,\n} from \"../../../../editor/common/model.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport { Categories } from \"../../../../platform/action/common/actionCommonCategories.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextMenuService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { observableConfigValue } from \"../../../../platform/observable/common/platformObservableUtils.js\";\nimport {\n\tIQuickInputService,\n\ttype QuickPickInput,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport {\n\tTestingConfigKeys,\n\tgetTestingConfiguration,\n} from \"../common/configuration.js\";\nimport { TestCommandId } from \"../common/constants.js\";\nimport { FileCoverage } from \"../common/testCoverage.js\";\nimport { ITestCoverageService } from \"../common/testCoverageService.js\";\nimport { TestId } from \"../common/testId.js\";\nimport { ITestService } from \"../common/testService.js\";\nimport {\n\ttype CoverageDetails,\n\tDetailType,\n\ttype IDeclarationCoverage,\n\ttype IStatementCoverage,\n} from \"../common/testTypes.js\";\nimport { TestingContextKeys } from \"../common/testingContextKeys.js\";\nimport * as coverUtils from \"./codeCoverageDisplayUtils.js\";\nimport {\n\ttestingCoverageMissingBranch,\n\ttestingCoverageReport,\n\ttestingFilterIcon,\n\ttestingRerunIcon,\n} from \"./icons.js\";\nimport { ManagedTestCoverageBars } from \"./testCoverageBars.js\";\n\nconst CLASS_HIT = \"coverage-deco-hit\";\nconst CLASS_MISS = \"coverage-deco-miss\";\nconst TOGGLE_INLINE_COMMAND_TEXT = localize(\n\t\"testing.toggleInlineCoverage\",\n\t\"Toggle Inline\",\n);\nconst TOGGLE_INLINE_COMMAND_ID = \"testing.toggleInlineCoverage\";\nconst BRANCH_MISS_INDICATOR_CHARS = 4;\n\nexport class CodeCoverageDecorations\n\textends Disposable\n\timplements IEditorContribution\n{\n\tprivate loadingCancellation?: CancellationTokenSource;\n\tprivate readonly displayedStore = this._register(new DisposableStore());\n\tprivate readonly hoveredStore = this._register(new DisposableStore());\n\tprivate readonly summaryWidget: Lazy<CoverageToolbarWidget>;\n\tprivate decorationIds = new Map<\n\t\tstring,\n\t\t{\n\t\t\tdetail: DetailRange;\n\t\t\toptions: IModelDecorationOptions;\n\t\t\tapplyHoverOptions(target: IModelDecorationOptions): void;\n\t\t}\n\t>();\n\tprivate hoveredSubject?: unknown;\n\tprivate details?: CoverageDetailsModel;\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ITestCoverageService private readonly coverage: ITestCoverageService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ILogService private readonly log: ILogService,\n\t) {\n\t\tsuper();\n\n\t\tthis.summaryWidget = new Lazy(() => this._register(instantiationService.createInstance(CoverageToolbarWidget, this.editor)));\n\n\t\tconst modelObs = observableFromEvent(this, editor.onDidChangeModel, () => editor.getModel());\n\t\tconst configObs = observableFromEvent(this, editor.onDidChangeConfiguration, i => i);\n\n\t\tconst fileCoverage = derived(reader => {\n\t\t\tconst report = coverage.selected.read(reader);\n\t\t\tif (!report) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst model = modelObs.read(reader);\n\t\t\tif (!model) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst file = report.getUri(model.uri);\n\t\t\tif (!file) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treport.didAddCoverage.read(reader); // re-read if changes when there's no report\n\t\t\treturn { file, testId: coverage.filterToTest.read(reader) };\n\t\t});\n\n\t\tthis._register(autorun(reader => {\n\t\t\tconst c = fileCoverage.read(reader);\n\t\t\tif (c) {\n\t\t\t\tthis.apply(editor.getModel()!, c.file, c.testId, coverage.showInline.read(reader));\n\t\t\t} else {\n\t\t\t\tthis.clear();\n\t\t\t}\n\t\t}));\n\n\t\tconst toolbarEnabled = observableConfigValue(TestingConfigKeys.CoverageToolbarEnabled, true, configurationService);\n\t\tthis._register(autorun(reader => {\n\t\t\tconst c = fileCoverage.read(reader);\n\t\t\tif (c && toolbarEnabled.read(reader)) {\n\t\t\t\tthis.summaryWidget.value.setCoverage(c.file, c.testId);\n\t\t\t} else {\n\t\t\t\tthis.summaryWidget.rawValue?.clearCoverage();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\tconst c = fileCoverage.read(reader);\n\t\t\tif (c) {\n\t\t\t\tconst evt = configObs.read(reader);\n\t\t\t\tif (evt?.hasChanged(EditorOption.lineHeight) !== false) {\n\t\t\t\t\tthis.updateEditorStyles();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(editor.onMouseMove(e => {\n\t\t\tconst model = editor.getModel();\n\t\t\tif (e.target.type === MouseTargetType.GUTTER_LINE_NUMBERS && model) {\n\t\t\t\tthis.hoverLineNumber(editor.getModel()!);\n\t\t\t} else if (coverage.showInline.get() && e.target.type === MouseTargetType.CONTENT_TEXT && model) {\n\t\t\t\tthis.hoverInlineDecoration(model, e.target.position);\n\t\t\t} else {\n\t\t\t\tthis.hoveredStore.clear();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(editor.onWillChangeModel(() => {\n\t\t\tconst model = editor.getModel();\n\t\t\tif (!this.details || !model) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Decorations adjust to local changes made in-editor, keep them synced in case the file is reopened:\n\t\t\tfor (const decoration of model.getAllDecorations()) {\n\t\t\t\tconst own = this.decorationIds.get(decoration.id);\n\t\t\t\tif (own) {\n\t\t\t\t\town.detail.range = decoration.range;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate updateEditorStyles() {\n\t\tconst lineHeight = this.editor.getOption(EditorOption.lineHeight);\n\t\tconst { style } = this.editor.getContainerDomNode();\n\t\tstyle.setProperty(\n\t\t\t\"--vscode-testing-coverage-lineHeight\",\n\t\t\t`${lineHeight}px`,\n\t\t);\n\t}\n\n\tprivate hoverInlineDecoration(model: ITextModel, position: Position) {\n\t\tconst allDecorations = model.getDecorationsInRange(\n\t\t\tRange.fromPositions(position),\n\t\t);\n\t\tconst decoration = mapFindFirst(allDecorations, ({ id }) =>\n\t\t\tthis.decorationIds.has(id)\n\t\t\t\t? { id, deco: this.decorationIds.get(id)! }\n\t\t\t\t: undefined,\n\t\t);\n\t\tif (decoration === this.hoveredSubject) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.hoveredStore.clear();\n\t\tthis.hoveredSubject = decoration;\n\n\t\tif (!decoration) {\n\t\t\treturn;\n\t\t}\n\n\t\tmodel.changeDecorations((e) => {\n\t\t\te.changeDecorationOptions(decoration.id, {\n\t\t\t\t...decoration.deco.options,\n\t\t\t\tclassName: `${decoration.deco.options.className} coverage-deco-hovered`,\n\t\t\t});\n\t\t});\n\n\t\tthis.hoveredStore.add(\n\t\t\ttoDisposable(() => {\n\t\t\t\tthis.hoveredSubject = undefined;\n\t\t\t\tmodel.changeDecorations((e) => {\n\t\t\t\t\te.changeDecorationOptions(\n\t\t\t\t\t\tdecoration!.id,\n\t\t\t\t\t\tdecoration!.deco.options,\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate hoverLineNumber(model: ITextModel) {\n\t\tif (\n\t\t\tthis.hoveredSubject === \"lineNo\" ||\n\t\t\t!this.details ||\n\t\t\tthis.coverage.showInline.get()\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.hoveredStore.clear();\n\t\tthis.hoveredSubject = \"lineNo\";\n\n\t\tmodel.changeDecorations((e) => {\n\t\t\tfor (const [id, decoration] of this.decorationIds) {\n\t\t\t\tconst { applyHoverOptions, options } = decoration;\n\t\t\t\tconst dup = { ...options };\n\t\t\t\tapplyHoverOptions(dup);\n\t\t\t\te.changeDecorationOptions(id, dup);\n\t\t\t}\n\t\t});\n\n\t\tthis.hoveredStore.add(\n\t\t\tthis.editor.onMouseLeave(() => {\n\t\t\t\tthis.hoveredStore.clear();\n\t\t\t}),\n\t\t);\n\n\t\tthis.hoveredStore.add(\n\t\t\ttoDisposable(() => {\n\t\t\t\tthis.hoveredSubject = undefined;\n\n\t\t\t\tmodel.changeDecorations((e) => {\n\t\t\t\t\tfor (const [id, decoration] of this.decorationIds) {\n\t\t\t\t\t\te.changeDecorationOptions(id, decoration.options);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate async apply(\n\t\tmodel: ITextModel,\n\t\tcoverage: FileCoverage,\n\t\ttestId: TestId | undefined,\n\t\tshowInlineByDefault: boolean,\n\t) {\n\t\tconst details = (this.details = await this.loadDetails(\n\t\t\tcoverage,\n\t\t\ttestId,\n\t\t\tmodel,\n\t\t));\n\t\tif (!details) {\n\t\t\treturn this.clear();\n\t\t}\n\n\t\tthis.displayedStore.clear();\n\n\t\tmodel.changeDecorations((e) => {\n\t\t\tfor (const detailRange of details.ranges) {\n\t\t\t\tconst {\n\t\t\t\t\tmetadata: { detail, description },\n\t\t\t\t\trange,\n\t\t\t\t\tprimary,\n\t\t\t\t} = detailRange;\n\t\t\t\tif (detail.type === DetailType.Branch) {\n\t\t\t\t\tconst hits = detail.detail.branches![detail.branch].count;\n\t\t\t\t\tconst cls = hits ? CLASS_HIT : CLASS_MISS;\n\t\t\t\t\t// don't bother showing the miss indicator if the condition wasn't executed at all:\n\t\t\t\t\tconst showMissIndicator =\n\t\t\t\t\t\t!hits &&\n\t\t\t\t\t\trange.isEmpty() &&\n\t\t\t\t\t\tdetail.detail.branches!.some((b) => b.count);\n\t\t\t\t\tconst options: IModelDecorationOptions = {\n\t\t\t\t\t\tshowIfCollapsed: showMissIndicator, // only avoid collapsing if we want to show the miss indicator\n\t\t\t\t\t\tdescription: \"coverage-gutter\",\n\t\t\t\t\t\tlineNumberClassName: `coverage-deco-gutter ${cls}`,\n\t\t\t\t\t};\n\n\t\t\t\t\tconst applyHoverOptions = (\n\t\t\t\t\t\ttarget: IModelDecorationOptions,\n\t\t\t\t\t) => {\n\t\t\t\t\t\ttarget.hoverMessage = description;\n\t\t\t\t\t\tif (showMissIndicator) {\n\t\t\t\t\t\t\ttarget.after = {\n\t\t\t\t\t\t\t\tcontent: \"\\xa0\".repeat(\n\t\t\t\t\t\t\t\t\tBRANCH_MISS_INDICATOR_CHARS,\n\t\t\t\t\t\t\t\t), // nbsp\n\t\t\t\t\t\t\t\tinlineClassName: `coverage-deco-branch-miss-indicator ${ThemeIcon.asClassName(testingCoverageMissingBranch)}`,\n\t\t\t\t\t\t\t\tinlineClassNameAffectsLetterSpacing: true,\n\t\t\t\t\t\t\t\tcursorStops: InjectedTextCursorStops.None,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget.className = `coverage-deco-inline ${cls}`;\n\t\t\t\t\t\t\tif (primary && typeof hits === \"number\") {\n\t\t\t\t\t\t\t\ttarget.before = countBadge(hits);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tif (showInlineByDefault) {\n\t\t\t\t\t\tapplyHoverOptions(options);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.decorationIds.set(e.addDecoration(range, options), {\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tapplyHoverOptions,\n\t\t\t\t\t\tdetail: detailRange,\n\t\t\t\t\t});\n\t\t\t\t} else if (detail.type === DetailType.Statement) {\n\t\t\t\t\tconst cls = detail.count ? CLASS_HIT : CLASS_MISS;\n\t\t\t\t\tconst options: IModelDecorationOptions = {\n\t\t\t\t\t\tshowIfCollapsed: false,\n\t\t\t\t\t\tdescription: \"coverage-inline\",\n\t\t\t\t\t\tlineNumberClassName: `coverage-deco-gutter ${cls}`,\n\t\t\t\t\t};\n\n\t\t\t\t\tconst applyHoverOptions = (\n\t\t\t\t\t\ttarget: IModelDecorationOptions,\n\t\t\t\t\t) => {\n\t\t\t\t\t\ttarget.className = `coverage-deco-inline ${cls}`;\n\t\t\t\t\t\ttarget.hoverMessage = description;\n\t\t\t\t\t\tif (primary && typeof detail.count === \"number\") {\n\t\t\t\t\t\t\ttarget.before = countBadge(detail.count);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tif (showInlineByDefault) {\n\t\t\t\t\t\tapplyHoverOptions(options);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.decorationIds.set(e.addDecoration(range, options), {\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tapplyHoverOptions,\n\t\t\t\t\t\tdetail: detailRange,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.displayedStore.add(\n\t\t\ttoDisposable(() => {\n\t\t\t\tmodel.changeDecorations((e) => {\n\t\t\t\t\tfor (const decoration of this.decorationIds.keys()) {\n\t\t\t\t\t\te.removeDecoration(decoration);\n\t\t\t\t\t}\n\t\t\t\t\tthis.decorationIds.clear();\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate clear() {\n\t\tthis.loadingCancellation?.cancel();\n\t\tthis.loadingCancellation = undefined;\n\t\tthis.displayedStore.clear();\n\t\tthis.hoveredStore.clear();\n\t}\n\n\tprivate async loadDetails(\n\t\tcoverage: FileCoverage,\n\t\ttestId: TestId | undefined,\n\t\ttextModel: ITextModel,\n\t) {\n\t\tconst cts = (this.loadingCancellation = new CancellationTokenSource());\n\t\tthis.displayedStore.add(this.loadingCancellation);\n\n\t\ttry {\n\t\t\tconst details = testId\n\t\t\t\t? await coverage.detailsForTest(\n\t\t\t\t\t\ttestId,\n\t\t\t\t\t\tthis.loadingCancellation.token,\n\t\t\t\t\t)\n\t\t\t\t: await coverage.details(this.loadingCancellation.token);\n\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn new CoverageDetailsModel(details, textModel);\n\t\t} catch (e) {\n\t\t\tthis.log.error(\"Error loading coverage details\", e);\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\nconst countBadge = (count: number): InjectedTextOptions | undefined => {\n\tif (count === 0) {\n\t\treturn undefined;\n\t}\n\n\treturn {\n\t\tcontent: `${count > 99 ? \"99+\" : count}x`,\n\t\tcursorStops: InjectedTextCursorStops.None,\n\t\tinlineClassName: `coverage-deco-inline-count`,\n\t\tinlineClassNameAffectsLetterSpacing: true,\n\t};\n};\n\ntype CoverageDetailsWithBranch =\n\t| CoverageDetails\n\t| { type: DetailType.Branch; branch: number; detail: IStatementCoverage };\ntype DetailRange = {\n\trange: Range;\n\tprimary: boolean;\n\tmetadata: {\n\t\tdetail: CoverageDetailsWithBranch;\n\t\tdescription: IMarkdownString | undefined;\n\t};\n};\n\nexport class CoverageDetailsModel {\n\tpublic readonly ranges: DetailRange[] = [];\n\n\tconstructor(\n\t\tpublic readonly details: CoverageDetails[],\n\t\ttextModel: ITextModel,\n\t) {\n\t\t//#region decoration generation\n\t\t// Coverage from a provider can have a range that contains smaller ranges,\n\t\t// such as a function declaration that has nested statements. In this we\n\t\t// make sequential, non-overlapping ranges for each detail for display in\n\t\t// the editor without ugly overlaps.\n\t\tconst detailRanges: DetailRange[] = details.map((detail) => ({\n\t\t\trange: tidyLocation(detail.location),\n\t\t\tprimary: true,\n\t\t\tmetadata: { detail, description: this.describe(detail, textModel) },\n\t\t}));\n\n\t\tfor (const {\n\t\t\trange,\n\t\t\tmetadata: { detail },\n\t\t} of detailRanges) {\n\t\t\tif (detail.type === DetailType.Statement && detail.branches) {\n\t\t\t\tfor (let i = 0; i < detail.branches.length; i++) {\n\t\t\t\t\tconst branch: CoverageDetailsWithBranch = {\n\t\t\t\t\t\ttype: DetailType.Branch,\n\t\t\t\t\t\tbranch: i,\n\t\t\t\t\t\tdetail,\n\t\t\t\t\t};\n\t\t\t\t\tdetailRanges.push({\n\t\t\t\t\t\trange: tidyLocation(\n\t\t\t\t\t\t\tdetail.branches[i].location ||\n\t\t\t\t\t\t\t\tRange.fromPositions(range.getEndPosition()),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tprimary: true,\n\t\t\t\t\t\tmetadata: {\n\t\t\t\t\t\t\tdetail: branch,\n\t\t\t\t\t\t\tdescription: this.describe(branch, textModel),\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// type ordering is done so that function declarations come first on a tie so that\n\t\t// single-statement functions (`() => foo()` for example) get inline decorations.\n\t\tdetailRanges.sort(\n\t\t\t(a, b) =>\n\t\t\t\tRange.compareRangesUsingStarts(a.range, b.range) ||\n\t\t\t\ta.metadata.detail.type - b.metadata.detail.type,\n\t\t);\n\n\t\tconst stack: DetailRange[] = [];\n\t\tconst result: DetailRange[] = (this.ranges = []);\n\t\tconst pop = () => {\n\t\t\tconst next = stack.pop()!;\n\t\t\tconst prev = stack[stack.length - 1];\n\t\t\tif (prev) {\n\t\t\t\tprev.range = prev.range.setStartPosition(\n\t\t\t\t\tnext.range.endLineNumber,\n\t\t\t\t\tnext.range.endColumn,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tresult.push(next);\n\t\t};\n\n\t\tfor (const item of detailRanges) {\n\t\t\t// 1. Ensure that any ranges in the stack that ended before this are flushed\n\t\t\tconst start = item.range.getStartPosition();\n\t\t\twhile (\n\t\t\t\tstack[stack.length - 1]?.range.containsPosition(start) === false\n\t\t\t) {\n\t\t\t\tpop();\n\t\t\t}\n\n\t\t\t// Empty ranges (usually representing missing branches) can be added\n\t\t\t// without worry about overlay.\n\t\t\tif (item.range.isEmpty()) {\n\t\t\t\tresult.push(item);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// 2. Take the last (overlapping) item in the stack, push range before\n\t\t\t// the `item.range` into the result and modify its stack to push the start\n\t\t\t// until after the `item.range` ends.\n\t\t\tconst prev = stack[stack.length - 1];\n\t\t\tif (prev) {\n\t\t\t\tconst primary = prev.primary;\n\t\t\t\tconst si = prev.range.setEndPosition(\n\t\t\t\t\tstart.lineNumber,\n\t\t\t\t\tstart.column,\n\t\t\t\t);\n\t\t\t\tprev.range = prev.range.setStartPosition(\n\t\t\t\t\titem.range.endLineNumber,\n\t\t\t\t\titem.range.endColumn,\n\t\t\t\t);\n\t\t\t\tprev.primary = false;\n\t\t\t\t// discard the previous range if it became empty, e.g. a nested statement\n\t\t\t\tif (prev.range.isEmpty()) {\n\t\t\t\t\tstack.pop();\n\t\t\t\t}\n\t\t\t\tresult.push({ range: si, primary, metadata: prev.metadata });\n\t\t\t}\n\n\t\t\tstack.push(item);\n\t\t}\n\t\twhile (stack.length) {\n\t\t\tpop();\n\t\t}\n\t\t//#endregion\n\t}\n\n\t/** Gets the markdown description for the given detail */\n\tpublic describe(\n\t\tdetail: CoverageDetailsWithBranch,\n\t\tmodel: ITextModel,\n\t): IMarkdownString | undefined {\n\t\tif (detail.type === DetailType.Declaration) {\n\t\t\treturn namedDetailLabel(detail.name, detail);\n\t\t} else if (detail.type === DetailType.Statement) {\n\t\t\tconst text = wrapName(\n\t\t\t\tmodel.getValueInRange(tidyLocation(detail.location)).trim() ||\n\t\t\t\t\t`<empty statement>`,\n\t\t\t);\n\t\t\tif (detail.branches?.length) {\n\t\t\t\tconst covered = detail.branches.filter((b) => !!b.count).length;\n\t\t\t\treturn new MarkdownString().appendMarkdown(\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"coverage.branches\",\n\t\t\t\t\t\t\"{0} of {1} of branches in {2} were covered.\",\n\t\t\t\t\t\tcovered,\n\t\t\t\t\t\tdetail.branches.length,\n\t\t\t\t\t\ttext,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn namedDetailLabel(text, detail);\n\t\t\t}\n\t\t} else if (detail.type === DetailType.Branch) {\n\t\t\tconst text = wrapName(\n\t\t\t\tmodel\n\t\t\t\t\t.getValueInRange(tidyLocation(detail.detail.location))\n\t\t\t\t\t.trim() || `<empty statement>`,\n\t\t\t);\n\t\t\tconst { count, label } = detail.detail.branches![detail.branch];\n\t\t\tconst label2 = label\n\t\t\t\t? wrapInBackticks(label)\n\t\t\t\t: `#${detail.branch + 1}`;\n\t\t\tif (!count) {\n\t\t\t\treturn new MarkdownString().appendMarkdown(\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"coverage.branchNotCovered\",\n\t\t\t\t\t\t\"Branch {0} in {1} was not covered.\",\n\t\t\t\t\t\tlabel2,\n\t\t\t\t\t\ttext,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t} else if (count === true) {\n\t\t\t\treturn new MarkdownString().appendMarkdown(\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"coverage.branchCoveredYes\",\n\t\t\t\t\t\t\"Branch {0} in {1} was executed.\",\n\t\t\t\t\t\tlabel2,\n\t\t\t\t\t\ttext,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn new MarkdownString().appendMarkdown(\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"coverage.branchCovered\",\n\t\t\t\t\t\t\"Branch {0} in {1} was executed {2} time(s).\",\n\t\t\t\t\t\tlabel2,\n\t\t\t\t\t\ttext,\n\t\t\t\t\t\tcount,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tassertNever(detail);\n\t}\n}\n\nfunction namedDetailLabel(\n\tname: string,\n\tdetail: IStatementCoverage | IDeclarationCoverage,\n) {\n\treturn new MarkdownString().appendMarkdown(\n\t\tdetail.count // 0 or false\n\t\t\t? typeof detail.count === \"number\"\n\t\t\t\t? localize(\n\t\t\t\t\t\t\"coverage.declExecutedCount\",\n\t\t\t\t\t\t\"`{0}` was executed {1} time(s).\",\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tdetail.count,\n\t\t\t\t\t)\n\t\t\t\t: localize(\n\t\t\t\t\t\t\"coverage.declExecutedYes\",\n\t\t\t\t\t\t\"`{0}` was executed.\",\n\t\t\t\t\t\tname,\n\t\t\t\t\t)\n\t\t\t: localize(\n\t\t\t\t\t\"coverage.declExecutedNo\",\n\t\t\t\t\t\"`{0}` was not executed.\",\n\t\t\t\t\tname,\n\t\t\t\t),\n\t);\n}\n\n// 'tidies' the range by normalizing it into a range and removing leading\n// and trailing whitespace.\nfunction tidyLocation(location: Range | Position): Range {\n\tif (location instanceof Position) {\n\t\treturn Range.fromPositions(\n\t\t\tlocation,\n\t\t\tnew Position(location.lineNumber, 0x7fffffff),\n\t\t);\n\t}\n\n\treturn location;\n}\n\nfunction wrapInBackticks(str: string) {\n\treturn \"`\" + str.replace(/[\\n\\r`]/g, \"\") + \"`\";\n}\n\nfunction wrapName(functionNameOrCode: string) {\n\tif (functionNameOrCode.length > 50) {\n\t\tfunctionNameOrCode = functionNameOrCode.slice(0, 40) + \"...\";\n\t}\n\treturn wrapInBackticks(functionNameOrCode);\n}\n\nclass CoverageToolbarWidget extends Disposable implements IOverlayWidget {\n\tprivate current:\n\t\t| { coverage: FileCoverage; testId: TestId | undefined }\n\t\t| undefined;\n\tprivate registered = false;\n\tprivate isRunning = false;\n\tprivate readonly showStore = this._register(new DisposableStore());\n\tprivate readonly actionBar: ActionBar;\n\tprivate readonly _domNode = dom.h(\"div.coverage-summary-widget\", [\n\t\tdom.h(\"div\", [dom.h(\"span.bars@bars\"), dom.h(\"span.toolbar@toolbar\")]),\n\t]);\n\n\tprivate readonly bars: ManagedTestCoverageBars;\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@ITestService private readonly testService: ITestService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@ITestCoverageService private readonly coverage: ITestCoverageService,\n\t\t@IInstantiationService instaService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis.bars = this._register(instaService.createInstance(ManagedTestCoverageBars, {\n\t\t\tcompact: false,\n\t\t\toverall: false,\n\t\t\tcontainer: this._domNode.bars,\n\t\t}));\n\n\t\tthis.actionBar = this._register(instaService.createInstance(ActionBar, this._domNode.toolbar, {\n\t\t\torientation: ActionsOrientation.HORIZONTAL,\n\t\t\tactionViewItemProvider: (action, options) => {\n\t\t\t\tconst vm = new CodiconActionViewItem(undefined, action, options);\n\t\t\t\tif (action instanceof ActionWithIcon) {\n\t\t\t\t\tvm.themeIcon = action.icon;\n\t\t\t\t}\n\t\t\t\treturn vm;\n\t\t\t}\n\t\t}));\n\n\n\t\tthis._register(autorun(reader => {\n\t\t\tcoverage.showInline.read(reader);\n\t\t\tthis.setActions();\n\t\t}));\n\n\t\tthis._register(dom.addStandardDisposableListener(this._domNode.root, dom.EventType.CONTEXT_MENU, e => {\n\t\t\tthis.contextMenuService.showContextMenu({\n\t\t\t\tmenuId: MenuId.StickyScrollContext,\n\t\t\t\tgetAnchor: () => e,\n\t\t\t});\n\t\t}));\n\t}\n\n\t/** @inheritdoc */\n\tpublic getId(): string {\n\t\treturn \"coverage-summary-widget\";\n\t}\n\n\t/** @inheritdoc */\n\tpublic getDomNode(): HTMLElement {\n\t\treturn this._domNode.root;\n\t}\n\n\t/** @inheritdoc */\n\tpublic getPosition(): IOverlayWidgetPosition | null {\n\t\treturn {\n\t\t\tpreference: OverlayWidgetPositionPreference.TOP_CENTER,\n\t\t\tstackOridinal: 9,\n\t\t};\n\t}\n\n\tpublic clearCoverage() {\n\t\tthis.current = undefined;\n\t\tthis.bars.setCoverageInfo(undefined);\n\t\tthis.hide();\n\t}\n\n\tpublic setCoverage(coverage: FileCoverage, testId: TestId | undefined) {\n\t\tthis.current = { coverage, testId };\n\t\tthis.bars.setCoverageInfo(coverage);\n\n\t\tif (coverage) {\n\t\t\tthis.setActions();\n\t\t\tthis.show();\n\t\t} else {\n\t\t\tthis.hide();\n\t\t}\n\t}\n\n\tprivate setActions() {\n\t\tthis.actionBar.clear();\n\t\tconst current = this.current;\n\t\tif (!current) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst toggleAction = new ActionWithIcon(\n\t\t\t\"toggleInline\",\n\t\t\tthis.coverage.showInline.get()\n\t\t\t\t? localize(\"testing.hideInlineCoverage\", \"Hide Inline Coverage\")\n\t\t\t\t: localize(\n\t\t\t\t\t\t\"testing.showInlineCoverage\",\n\t\t\t\t\t\t\"Show Inline Coverage\",\n\t\t\t\t\t),\n\t\t\ttestingCoverageReport,\n\t\t\tundefined,\n\t\t\t() =>\n\t\t\t\tthis.coverage.showInline.set(\n\t\t\t\t\t!this.coverage.showInline.get(),\n\t\t\t\t\tundefined,\n\t\t\t\t),\n\t\t);\n\n\t\tconst kb = this.keybindingService.lookupKeybinding(\n\t\t\tTOGGLE_INLINE_COMMAND_ID,\n\t\t);\n\t\tif (kb) {\n\t\t\ttoggleAction.tooltip = `${TOGGLE_INLINE_COMMAND_TEXT} (${kb.getLabel()})`;\n\t\t}\n\n\t\tthis.actionBar.push(toggleAction);\n\n\t\tif (current.testId) {\n\t\t\tconst testItem = current.coverage.fromResult.getTestById(\n\t\t\t\tcurrent.testId.toString(),\n\t\t\t);\n\t\t\tassert(!!testItem, \"got coverage for an unreported test\");\n\t\t\tthis.actionBar.push(\n\t\t\t\tnew ActionWithIcon(\n\t\t\t\t\t\"perTestFilter\",\n\t\t\t\t\tcoverUtils.labels.showingFilterFor(testItem.label),\n\t\t\t\t\ttestingFilterIcon,\n\t\t\t\t\tundefined,\n\t\t\t\t\t() =>\n\t\t\t\t\t\tthis.commandService.executeCommand(\n\t\t\t\t\t\t\tTestCommandId.CoverageFilterToTestInEditor,\n\t\t\t\t\t\t\tthis.current,\n\t\t\t\t\t\t\tthis.editor,\n\t\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t} else if (current.coverage.perTestData?.size) {\n\t\t\tthis.actionBar.push(\n\t\t\t\tnew ActionWithIcon(\n\t\t\t\t\t\"perTestFilter\",\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"testing.coverageForTestAvailable\",\n\t\t\t\t\t\t\"{0} test(s) ran code in this file\",\n\t\t\t\t\t\tcurrent.coverage.perTestData.size,\n\t\t\t\t\t),\n\t\t\t\t\ttestingFilterIcon,\n\t\t\t\t\tundefined,\n\t\t\t\t\t() =>\n\t\t\t\t\t\tthis.commandService.executeCommand(\n\t\t\t\t\t\t\tTestCommandId.CoverageFilterToTestInEditor,\n\t\t\t\t\t\t\tthis.current,\n\t\t\t\t\t\t\tthis.editor,\n\t\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tthis.actionBar.push(\n\t\t\tnew ActionWithIcon(\n\t\t\t\t\"rerun\",\n\t\t\t\tlocalize(\"testing.rerun\", \"Rerun\"),\n\t\t\t\ttestingRerunIcon,\n\t\t\t\t!this.isRunning,\n\t\t\t\t() => this.rerunTest(),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate show() {\n\t\tif (this.registered) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.registered = true;\n\t\tlet viewZoneId: string;\n\t\tconst ds = this.showStore;\n\n\t\tthis.editor.addOverlayWidget(this);\n\t\tthis.editor.changeViewZones((accessor) => {\n\t\t\tviewZoneId = accessor.addZone({\n\t\t\t\t// make space for the widget\n\t\t\t\tafterLineNumber: 0,\n\t\t\t\tafterColumn: 0,\n\t\t\t\tdomNode: document.createElement(\"div\"),\n\t\t\t\theightInPx: 30,\n\t\t\t\tordinal: -1, // show before code lenses\n\t\t\t});\n\t\t});\n\n\t\tds.add(\n\t\t\ttoDisposable(() => {\n\t\t\t\tthis.registered = false;\n\t\t\t\tthis.editor.removeOverlayWidget(this);\n\t\t\t\tthis.editor.changeViewZones((accessor) => {\n\t\t\t\t\taccessor.removeZone(viewZoneId);\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\n\t\tds.add(\n\t\t\tthis.configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (\n\t\t\t\t\tthis.current &&\n\t\t\t\t\t(e.affectsConfiguration(\n\t\t\t\t\t\tTestingConfigKeys.CoverageBarThresholds,\n\t\t\t\t\t) ||\n\t\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\t\tTestingConfigKeys.CoveragePercent,\n\t\t\t\t\t\t))\n\t\t\t\t) {\n\t\t\t\t\tthis.setCoverage(\n\t\t\t\t\t\tthis.current.coverage,\n\t\t\t\t\t\tthis.current.testId,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate rerunTest() {\n\t\tconst current = this.current;\n\t\tif (current) {\n\t\t\tthis.isRunning = true;\n\t\t\tthis.setActions();\n\t\t\tthis.testService\n\t\t\t\t.runResolvedTests(current.coverage.fromResult.request)\n\t\t\t\t.finally(() => {\n\t\t\t\t\tthis.isRunning = false;\n\t\t\t\t\tthis.setActions();\n\t\t\t\t});\n\t\t}\n\t}\n\n\tprivate hide() {\n\t\tthis.showStore.clear();\n\t}\n}\n\nregisterAction2(\n\tclass ToggleInlineCoverage extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: TOGGLE_INLINE_COMMAND_ID,\n\t\t\t\t// note: ideally this would be \"show inline\", but the command palette does\n\t\t\t\t// not use the 'toggled' titles, so we need to make this generic.\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"coverage.toggleInline\",\n\t\t\t\t\t\"Toggle Inline Coverage\",\n\t\t\t\t),\n\t\t\t\tcategory: Categories.Test,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.Semicolon,\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyI,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\ttoggled: {\n\t\t\t\t\tcondition: TestingContextKeys.inlineCoverageEnabled,\n\t\t\t\t\ttitle: localize(\n\t\t\t\t\t\t\"coverage.hideInline\",\n\t\t\t\t\t\t\"Hide Inline Coverage\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\ticon: testingCoverageReport,\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t\twhen: TestingContextKeys.isTestCoverageOpen,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tTestingContextKeys.isTestCoverageOpen,\n\t\t\t\t\t\t\tTestingContextKeys.coverageToolbarEnabled.notEqualsTo(\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\tpublic run(accessor: ServicesAccessor): void {\n\t\t\tconst coverage = accessor.get(ITestCoverageService);\n\t\t\tcoverage.showInline.set(!coverage.showInline.get(), undefined);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass ToggleCoverageToolbar extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: TestCommandId.CoverageToggleToolbar,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"testing.toggleToolbarTitle\",\n\t\t\t\t\t\"Test Coverage Toolbar\",\n\t\t\t\t),\n\t\t\t\tmetadata: {\n\t\t\t\t\tdescription: localize2(\n\t\t\t\t\t\t\"testing.toggleToolbarDesc\",\n\t\t\t\t\t\t\"Toggle the sticky coverage bar in the editor.\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tcategory: Categories.Test,\n\t\t\t\ttoggled: {\n\t\t\t\t\tcondition: TestingContextKeys.coverageToolbarEnabled,\n\t\t\t\t},\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t\twhen: TestingContextKeys.isTestCoverageOpen,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.StickyScrollContext,\n\t\t\t\t\t\twhen: TestingContextKeys.isTestCoverageOpen,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\t\twhen: TestingContextKeys.isTestCoverageOpen,\n\t\t\t\t\t\tgroup: \"coverage@1\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor): void {\n\t\t\tconst config = accessor.get(IConfigurationService);\n\t\t\tconst value = getTestingConfiguration(\n\t\t\t\tconfig,\n\t\t\t\tTestingConfigKeys.CoverageToolbarEnabled,\n\t\t\t);\n\t\t\tconfig.updateValue(\n\t\t\t\tTestingConfigKeys.CoverageToolbarEnabled,\n\t\t\t\t!value,\n\t\t\t);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass FilterCoverageToTestInEditor extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: TestCommandId.CoverageFilterToTestInEditor,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"testing.filterActionLabel\",\n\t\t\t\t\t\"Filter Coverage to Test\",\n\t\t\t\t),\n\t\t\t\tcategory: Categories.Test,\n\t\t\t\ticon: Codicon.filter,\n\t\t\t\ttoggled: {\n\t\t\t\t\ticon: Codicon.filterFilled,\n\t\t\t\t\tcondition: TestingContextKeys.isCoverageFilteredToTest,\n\t\t\t\t},\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tTestingContextKeys.isTestCoverageOpen,\n\t\t\t\t\t\t\tTestingContextKeys.coverageToolbarEnabled.notEqualsTo(\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\trun(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tcoverageOrUri?: FileCoverage | URI,\n\t\t\teditor?: ICodeEditor,\n\t\t): void {\n\t\t\tconst testCoverageService = accessor.get(ITestCoverageService);\n\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\tconst activeEditor =\n\t\t\t\teditor ??\n\t\t\t\taccessor.get(ICodeEditorService).getActiveCodeEditor();\n\t\t\tlet coverage: FileCoverage | undefined;\n\t\t\tif (coverageOrUri instanceof FileCoverage) {\n\t\t\t\tcoverage = coverageOrUri;\n\t\t\t} else if (isUriComponents(coverageOrUri)) {\n\t\t\t\tcoverage = testCoverageService.selected\n\t\t\t\t\t.get()\n\t\t\t\t\t?.getUri(URI.from(coverageOrUri));\n\t\t\t} else {\n\t\t\t\tconst uri = activeEditor?.getModel()?.uri;\n\t\t\t\tcoverage =\n\t\t\t\t\turi && testCoverageService.selected.get()?.getUri(uri);\n\t\t\t}\n\n\t\t\tif (!coverage || !coverage.perTestData?.size) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst tests = [...coverage.perTestData].map(TestId.fromString);\n\t\t\tconst commonPrefix = TestId.getLengthOfCommonPrefix(\n\t\t\t\ttests.length,\n\t\t\t\t(i) => tests[i],\n\t\t\t);\n\t\t\tconst result = coverage.fromResult;\n\t\t\tconst previousSelection = testCoverageService.filterToTest.get();\n\n\t\t\ttype TItem = { label: string; testId: TestId | undefined };\n\n\t\t\tconst items: QuickPickInput<TItem>[] = [\n\t\t\t\t{ label: coverUtils.labels.allTests, testId: undefined },\n\t\t\t\t{ type: \"separator\" },\n\t\t\t\t...tests.map((id) => ({\n\t\t\t\t\tlabel: coverUtils.getLabelForItem(result, id, commonPrefix),\n\t\t\t\t\ttestId: id,\n\t\t\t\t})),\n\t\t\t];\n\n\t\t\t// These handle the behavior that reveals the start of coverage when the\n\t\t\t// user picks from the quickpick. Scroll position is restored if the user\n\t\t\t// exits without picking an item, or picks \"all tets\".\n\t\t\tconst scrollTop = activeEditor?.getScrollTop() || 0;\n\t\t\tconst revealScrollCts =\n\t\t\t\tnew MutableDisposable<CancellationTokenSource>();\n\n\t\t\tquickInputService\n\t\t\t\t.pick(items, {\n\t\t\t\t\tactiveItem: items.find(\n\t\t\t\t\t\t(item): item is TItem =>\n\t\t\t\t\t\t\t\"item\" in item && item.item === coverage,\n\t\t\t\t\t),\n\t\t\t\t\tplaceHolder: coverUtils.labels.pickShowCoverage,\n\t\t\t\t\tonDidFocus: (entry) => {\n\t\t\t\t\t\tif (entry.testId) {\n\t\t\t\t\t\t\tconst cts = (revealScrollCts.value =\n\t\t\t\t\t\t\t\tnew CancellationTokenSource());\n\t\t\t\t\t\t\tcoverage\n\t\t\t\t\t\t\t\t.detailsForTest(entry.testId, cts.token)\n\t\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\t\t(details) => {\n\t\t\t\t\t\t\t\t\t\tconst first = details.find(\n\t\t\t\t\t\t\t\t\t\t\t(d) =>\n\t\t\t\t\t\t\t\t\t\t\t\td.type === DetailType.Statement,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t!cts.token\n\t\t\t\t\t\t\t\t\t\t\t\t.isCancellationRequested &&\n\t\t\t\t\t\t\t\t\t\t\tfirst\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tactiveEditor?.revealLineNearTop(\n\t\t\t\t\t\t\t\t\t\t\t\tfirst.location instanceof\n\t\t\t\t\t\t\t\t\t\t\t\t\tPosition\n\t\t\t\t\t\t\t\t\t\t\t\t\t? first.location.lineNumber\n\t\t\t\t\t\t\t\t\t\t\t\t\t: first.location\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.startLineNumber,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\t\t/* ignored */\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\ttestCoverageService.filterToTest.set(\n\t\t\t\t\t\t\t\tentry.testId,\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trevealScrollCts.clear();\n\t\t\t\t\t\t\tactiveEditor?.setScrollTop(scrollTop);\n\t\t\t\t\t\t\ttestCoverageService.filterToTest.set(\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\t.then((selected) => {\n\t\t\t\t\tif (!selected) {\n\t\t\t\t\t\tactiveEditor?.setScrollTop(scrollTop);\n\t\t\t\t\t}\n\n\t\t\t\t\trevealScrollCts.dispose();\n\t\t\t\t\ttestCoverageService.filterToTest.set(\n\t\t\t\t\t\tselected ? selected.testId : previousSelection,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t}\n\t},\n);\n\nclass ActionWithIcon extends Action {\n\tconstructor(\n\t\tid: string,\n\t\ttitle: string,\n\t\tpublic readonly icon: ThemeIcon,\n\t\tenabled: boolean | undefined,\n\t\trun: () => void,\n\t) {\n\t\tsuper(id, title, undefined, enabled, run);\n\t}\n}\n\nclass CodiconActionViewItem extends ActionViewItem {\n\tpublic themeIcon?: ThemeIcon;\n\n\tprotected override updateLabel(): void {\n\t\tif (this.options.label && this.label && this.themeIcon) {\n\t\t\tdom.reset(\n\t\t\t\tthis.label,\n\t\t\t\trenderIcon(this.themeIcon),\n\t\t\t\tthis.action.label,\n\t\t\t);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
