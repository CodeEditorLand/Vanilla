var ge=Object.defineProperty;var pe=Object.getOwnPropertyDescriptor;var x=(f,t,e,i)=>{for(var o=i>1?void 0:i?pe(t,e):t,a=f.length-1,r;a>=0;a--)(r=f[a])&&(o=(i?r(t,e,o):r(o))||o);return i&&o&&ge(t,e,o),o},g=(f,t)=>(e,i)=>t(e,i,f);import*as me from"../../../../../vs/base/browser/dom.js";import{Action as w,Separator as Q,SubmenuAction as fe}from"../../../../../vs/base/common/actions.js";import{equals as he}from"../../../../../vs/base/common/arrays.js";import{RunOnceScheduler as Ie}from"../../../../../vs/base/common/async.js";import{Emitter as ve,Event as _}from"../../../../../vs/base/common/event.js";import{MarkdownString as F}from"../../../../../vs/base/common/htmlContent.js";import{stripIcons as be}from"../../../../../vs/base/common/iconLabels.js";import{Iterable as ye}from"../../../../../vs/base/common/iterator.js";import{KeyCode as q}from"../../../../../vs/base/common/keyCodes.js";import{Disposable as X,DisposableStore as Y,MutableDisposable as J}from"../../../../../vs/base/common/lifecycle.js";import{ResourceMap as Ce}from"../../../../../vs/base/common/map.js";import{isMacintosh as Se}from"../../../../../vs/base/common/platform.js";import{ThemeIcon as ee}from"../../../../../vs/base/common/themables.js";import{Constants as Te}from"../../../../../vs/base/common/uint.js";import"../../../../../vs/base/common/uri.js";import{generateUuid as te}from"../../../../../vs/base/common/uuid.js";import{ContentWidgetPositionPreference as Me,MouseTargetType as De}from"../../../../../vs/editor/browser/editorBrowser.js";import{ICodeEditorService as k}from"../../../../../vs/editor/browser/services/codeEditorService.js";import{EditorOption as S}from"../../../../../vs/editor/common/config/editorOptions.js";import{overviewRulerError as xe,overviewRulerInfo as Ee}from"../../../../../vs/editor/common/core/editorColorRegistry.js";import"../../../../../vs/editor/common/core/range.js";import"../../../../../vs/editor/common/editorCommon.js";import{GlyphMarginLane as we,OverviewRulerLane as ke,TrackedRangeStickiness as ie}from"../../../../../vs/editor/common/model.js";import{IModelService as Re}from"../../../../../vs/editor/common/services/model.js";import{localize as h}from"../../../../../vs/nls.js";import{createAndFillInContextMenuActions as Ae}from"../../../../../vs/platform/actions/browser/menuEntryActionViewItem.js";import{IMenuService as W,MenuId as Le}from"../../../../../vs/platform/actions/common/actions.js";import{ICommandService as G}from"../../../../../vs/platform/commands/common/commands.js";import{IConfigurationService as O}from"../../../../../vs/platform/configuration/common/configuration.js";import{IContextKeyService as B}from"../../../../../vs/platform/contextkey/common/contextkey.js";import{IContextMenuService as $}from"../../../../../vs/platform/contextview/browser/contextView.js";import{IInstantiationService as Ne}from"../../../../../vs/platform/instantiation/common/instantiation.js";import{IQuickInputService as Ue}from"../../../../../vs/platform/quickinput/common/quickInput.js";import{themeColorFromId as Fe}from"../../../../../vs/platform/theme/common/themeService.js";import{IUriIdentityService as Oe}from"../../../../../vs/platform/uriIdentity/common/uriIdentity.js";import{EditorLineNumberContextMenu as Pe,GutterActionsRegistry as _e}from"../../../../../vs/workbench/contrib/codeEditor/browser/editorLineNumberMenu.js";import{getTestItemContextOverlay as We}from"../../../../../vs/workbench/contrib/testing/browser/explorerProjections/testItemContextOverlay.js";import{testingDebugAllIcon as Ge,testingDebugIcon as Be,testingRunAllIcon as ne,testingRunIcon as oe,testingStatesToIcons as $e}from"../../../../../vs/workbench/contrib/testing/browser/icons.js";import{renderTestMessageAsText as Ke}from"../../../../../vs/workbench/contrib/testing/browser/testMessageColorizer.js";import{DefaultGutterClickAction as T,getTestingConfiguration as R,TestingConfigKeys as E}from"../../../../../vs/workbench/contrib/testing/common/configuration.js";import{labelForTestInState as ze,Testing as Ve}from"../../../../../vs/workbench/contrib/testing/common/constants.js";import{TestId as je}from"../../../../../vs/workbench/contrib/testing/common/testId.js";import{ITestingDecorationsService as Ze,TestDecorations as He}from"../../../../../vs/workbench/contrib/testing/common/testingDecorations.js";import{ITestingPeekOpener as Qe}from"../../../../../vs/workbench/contrib/testing/common/testingPeekOpener.js";import{isFailedState as qe,maxPriority as Xe}from"../../../../../vs/workbench/contrib/testing/common/testingStates.js";import{buildTestUri as Ye,parseTestUri as Je,TestUriType as K}from"../../../../../vs/workbench/contrib/testing/common/testingUri.js";import{ITestProfileService as z}from"../../../../../vs/workbench/contrib/testing/common/testProfileService.js";import{LiveTestResult as et}from"../../../../../vs/workbench/contrib/testing/common/testResult.js";import{ITestResultService as tt}from"../../../../../vs/workbench/contrib/testing/common/testResultService.js";import{getContextForTestItem as it,ITestService as A,simplifyTestsToExecute as nt,testsInFile as ot}from"../../../../../vs/workbench/contrib/testing/common/testService.js";import{TestDiffOpType as rt,TestMessageType as V,TestResultState as j,TestRunProfileBitset as y}from"../../../../../vs/workbench/contrib/testing/common/testTypes.js";const re=128,se=30,ae=we.Center;function st(f,t){const e=f.listDiffEditors();for(const i of e)if(i.getOriginalEditor()===t)return!0;return!1}class Z{runByIdKey=new Map;messages=new Map;get size(){return this.runByIdKey.size+this.messages.size}getForExactTests(t){const e=t.sort().join("\0\0");return this.runByIdKey.get(e)}getMessage(t){return this.messages.get(t)}removeMessage(t){this.messages.delete(t)}addMessage(t){this.messages.set(t.testMessage,t)}addTest(t){const e=t.testIds.sort().join("\0\0");this.runByIdKey.set(e,t)}getById(t){for(const e of this.runByIdKey.values())if(e.id===t)return e;for(const e of this.messages.values())if(e.id===t)return e}*[Symbol.iterator](){for(const t of this.runByIdKey.values())yield t;for(const t of this.messages.values())yield t}}let P=class extends X{constructor(e,i,o,a,r,l){super();this.configurationService=i;this.testService=o;this.results=a;this.instantiationService=r;this.modelService=l;e.registerDecorationType("test-message-decoration",C.decorationId,{},void 0),this._register(l.onModelRemoved(c=>this.decorationCache.delete(c.uri)));const s=this._register(new Ie(()=>this.invalidate(),100));this._register(this.testService.onWillProcessDiff(c=>{for(const n of c){if(n.op!==rt.DocumentSynced)continue;const u=this.decorationCache.get(n.uri);u&&(u.rangeUpdateVersionId=n.docv)}s.isScheduled()||s.schedule()})),this._register(_.any(this.results.onResultsChanged,this.results.onTestChanged,this.testService.excluded.onTestExclusionsChanged,this.testService.showInlineOutput.onDidChange,_.filter(i.onDidChangeConfiguration,c=>c.affectsConfiguration(E.GutterEnabled)))(()=>{s.isScheduled()||s.schedule()})),this._register(_e.registerGutterActionsGenerator((c,n)=>{const u=c.editor.getModel(),d=L.get(c.editor);if(!u||!d?.currentUri)return;const m=this.syncDecorations(d.currentUri);if(!m.size)return;const p=u.getLinesDecorations(c.lineNumber,c.lineNumber);for(const{id:I}of p){const b=m.getById(I);if(b){const{object:v}=b.getContextMenuActions();for(const D of v)n.push(D,"1_testing")}}}))}generation=0;changeEmitter=new ve;decorationCache=new Ce;invalidatedMessages=new WeakSet;onDidChange=this.changeEmitter.event;invalidateResultMessage(e){this.invalidatedMessages.add(e),this.invalidate()}syncDecorations(e){const i=this.modelService.getModel(e);if(!i)return new Z;const o=this.decorationCache.get(e);return o&&o.generation===this.generation&&(o.rangeUpdateVersionId===void 0||o.rangeUpdateVersionId!==i.getVersionId())?o.value:this.applyDecorations(i)}getDecoratedTestPosition(e,i){const o=this.modelService.getModel(e);if(!o)return;const a=ye.find(this.syncDecorations(e),r=>r instanceof M&&r.isForTest(i));if(a)return o.getDecorationRange(a.id)?.getStartPosition()}invalidate(){this.generation++,this.changeEmitter.fire()}updateDecorationsAlternateAction(e,i){const o=this.modelService.getModel(e),a=this.decorationCache.get(e);!o||!a||a.isAlt===i||(a.isAlt=i,o.changeDecorations(r=>{for(const l of a.value)l instanceof M&&l.editorDecoration.alternate&&r.changeDecorationOptions(l.id,i?l.editorDecoration.alternate:l.editorDecoration.options)}))}applyDecorations(e){const i=R(this.configurationService,E.GutterEnabled),o=e.uri.toString(),a=this.decorationCache.get(e.uri),r=a?.rangeUpdateVersionId===e.getVersionId(),l=a?.value??new Z;return e.changeDecorations(c=>{const n=new Z,u=new He;for(const p of this.testService.collection.getNodeByUrl(e.uri)){if(!p.item.range)continue;const I=this.results.getStateById(p.item.extId),b=p.item.range.startLineNumber;u.push({line:b,id:"",test:p,resultItem:I?.[1]})}for(const[p,I]of u.lines()){const b=I.length>1;let v=l.getForExactTests(I.map(D=>D.test.item.extId));v&&r&&e.getDecorationRange(v.id)?.startLineNumber!==p&&(v=void 0),v?(v.replaceOptions(I,i)&&c.changeDecorationOptions(v.id,v.editorDecoration.options),n.addTest(v)):n.addTest(b?this.instantiationService.createInstance(N,I,i,e):this.instantiationService.createInstance(U,I[0].test,I[0].resultItem,e,i))}const d=new Set;R(this.configurationService,E.ShowAllMessages)?this.results.results.forEach(p=>this.applyDecorationsFromResult(p,d,o,l,e,n)):this.applyDecorationsFromResult(this.results.results[0],d,o,l,e,n);const m=new Set;for(const p of n)p.id===""?p.id=c.addDecoration(p.editorDecoration.range,p.editorDecoration.options):m.add(p.id);for(const p of l)m.has(p.id)||c.removeDecoration(p.id);return this.decorationCache.set(e.uri,{generation:this.generation,rangeUpdateVersionId:a?.rangeUpdateVersionId,value:n}),n})||l}applyDecorationsFromResult(e,i,o,a,r,l){if(this.testService.showInlineOutput.value&&e instanceof et){for(const s of e.tasks)for(const c of s.otherMessages)if(!this.invalidatedMessages.has(c)&&c.location?.uri.toString()===o){const n=a.getMessage(c)||this.instantiationService.createInstance(C,c,void 0,r);l.addMessage(n)}for(const s of e.tests)for(let c=0;c<s.tasks.length;c++){const n=s.tasks[c];for(const u of[V.Error,V.Output])for(let d=0;d<n.messages.length;d++){const m=n.messages[d];if(m.type!==u||this.invalidatedMessages.has(m)||m.location?.uri.toString()!==o)continue;const p=m.location.range.startLineNumber;if(!i.has(p)){const I=a.getMessage(m)||this.instantiationService.createInstance(C,m,Ye({type:K.ResultActualOutput,messageIndex:d,taskIndex:c,resultId:e.id,testExtId:s.item.extId}),r);l.addMessage(I),i.add(p)}}}}}};P=x([g(0,k),g(1,O),g(2,A),g(3,tt),g(4,Ne),g(5,Re)],P);let L=class extends X{constructor(e,i,o,a,r){super();this.editor=e;this.codeEditorService=i;this.testService=o;this.decorations=a;this.uriIdentityService=r;i.registerDecorationType("test-message-decoration",C.decorationId,{},void 0,e),this.attachModel(e.getModel()?.uri),this._register(a.onDidChange(()=>{this._currentUri&&a.syncDecorations(this._currentUri)})),this._register(this.editor.onKeyDown(s=>{s.keyCode===q.Alt&&this._currentUri&&a.updateDecorationsAlternateAction(this._currentUri,!0)})),this._register(this.editor.onKeyUp(s=>{s.keyCode===q.Alt&&this._currentUri&&a.updateDecorationsAlternateAction(this._currentUri,!1)})),this._register(this.editor.onDidChangeModel(s=>this.attachModel(s.newModelUrl||void 0))),this._register(this.editor.onMouseDown(s=>{if(s.target.position&&this.currentUri){const c=e.getModel()?.getLineDecorations(s.target.position.lineNumber)??[];if(!c.length)return;const n=a.syncDecorations(this.currentUri);for(const{id:u}of c)if(n.getById(u)?.click(s)){s.event.stopPropagation();return}}})),this._register(_.accumulate(this.editor.onDidChangeModelContent,0,this._store)(s=>{const c=e.getModel();if(!this._currentUri||!c)return;const n=a.syncDecorations(this._currentUri);if(n.size)for(const u of s)for(const d of u.changes){const m=c.getLinesDecorations(d.range.startLineNumber,d.range.endLineNumber);for(const{id:p}of m){const I=n.getById(p);I instanceof C&&a.invalidateResultMessage(I.testMessage)}}}));const l=()=>{this.editor.getContainerDomNode().style.setProperty("--testMessageDecorationFontFamily",e.getOption(S.fontFamily)),this.editor.getContainerDomNode().style.setProperty("--testMessageDecorationFontSize",`${e.getOption(S.fontSize)}px`)};this._register(this.editor.onDidChangeConfiguration(s=>{s.hasChanged(S.fontFamily)&&l()})),l()}static get(e){return e.getContribution(Ve.DecorationsContributionId)}get currentUri(){return this._currentUri}_currentUri;expectedWidget=new J;actualWidget=new J;attachModel(e){switch(e&&Je(e)?.type){case K.ResultExpectedOutput:this.expectedWidget.value=new ct(this.editor),this.actualWidget.clear();break;case K.ResultActualOutput:this.expectedWidget.clear(),this.actualWidget.value=new lt(this.editor);break;default:this.expectedWidget.clear(),this.actualWidget.clear()}st(this.codeEditorService,this.editor)&&(e=void 0),this._currentUri=e,e&&(this.decorations.syncDecorations(e),(async()=>{for await(const i of ot(this.testService,this.uriIdentityService,e,!1))if(this._currentUri!==e)break})())}};L=x([g(1,k),g(2,A),g(3,Ze),g(4,Oe)],L);const ce=f=>({startLineNumber:f.startLineNumber,endLineNumber:f.startLineNumber,startColumn:f.startColumn,endColumn:f.startColumn}),le=(f,t,e,i)=>{const o=f[0]?.item.range;if(!o)throw new Error("Test decorations can only be created for tests with a range");if(!e)return{range:ce(o),options:{isWholeLine:!0,description:"run-test-decoration"}};let a=j.Unset;const r=[];let l,s=!1;for(let b=0;b<f.length;b++){const v=f[b],D=t[b],H=D?.computedState??j.Unset;r.length<10&&r.push(ze(v.item.label,H)),a=Xe(a,H),s=s||!!D?.retired,!l&&D?.tasks.some(ue=>ue.messages.length)&&(l=v.item.extId)}const c=f.length>1||f[0].children.size>0,n=a===j.Unset?c?ne:oe:$e.get(a),u=i===T.Debug?c?ne:oe:c?Ge:Be;let d,m="testing-run-glyph";s&&(m+=" retired");const p={description:"run-test-decoration",showIfCollapsed:!0,get hoverMessage(){if(!d){const b=d=new F("",!0).appendText(r.join(", ")+".");if(l){const v=encodeURIComponent(JSON.stringify([l]));b.appendMarkdown(` [${h("peekTestOutout","Peek Test Output")}](command:vscode.peekTestError?${v})`)}}return d},glyphMargin:{position:ae},glyphMarginClassName:`${ee.asClassName(n)} ${m}`,stickiness:ie.NeverGrowsWhenTypingAtEdges,zIndex:1e4},I={...p,glyphMarginClassName:`${ee.asClassName(u)} ${m}`};return{range:ce(o),options:p,alternate:I}};var at=(e=>(e.FontFamily="testingDiffLensFontFamily",e.FontFeatures="testingDiffLensFontFeatures",e))(at||{});class de{constructor(t){this.editor=t;queueMicrotask(()=>{this.applyStyling(),this.editor.addContentWidget(this)})}allowEditorOverflow=!1;suppressMouseDown=!0;_domNode=me.$("span");viewZoneId;applyStyling(){let t=this.editor.getOption(S.codeLensFontSize),e;!t||t<5?(t=this.editor.getOption(S.fontSize)*.9|0,e=this.editor.getOption(S.lineHeight)):e=t*Math.max(1.3,this.editor.getOption(S.lineHeight)/this.editor.getOption(S.fontSize))|0;const i=this.editor.getOption(S.fontInfo),o=this._domNode;o.classList.add("testing-diff-lens-widget"),o.textContent=this.getText(),o.style.lineHeight=`${e}px`,o.style.fontSize=`${t}px`,o.style.fontFamily="var(--testingDiffLensFontFamily)",o.style.fontFeatureSettings="var(--testingDiffLensFontFeatures)";const a=this.editor.getContainerDomNode().style;a.setProperty("testingDiffLensFontFamily",this.editor.getOption(S.codeLensFontFamily)??"inherit"),a.setProperty("testingDiffLensFontFeatures",i.fontFeatureSettings),this.editor.changeViewZones(r=>{this.viewZoneId&&r.removeZone(this.viewZoneId),this.viewZoneId=r.addZone({afterLineNumber:0,afterColumn:Te.MAX_SAFE_SMALL_INTEGER,domNode:document.createElement("div"),heightInPx:20})})}getDomNode(){return this._domNode}dispose(){this.editor.changeViewZones(t=>{this.viewZoneId&&t.removeZone(this.viewZoneId)}),this.editor.removeContentWidget(this)}getPosition(){return{position:{column:0,lineNumber:0},preference:[Me.ABOVE]}}}class ct extends de{getId(){return"expectedTestingLens"}getText(){return h("expected.title","Expected")}}class lt extends de{getId(){return"actualTestingLens"}getText(){return h("actual.title","Actual")}}let M=class{constructor(t,e,i,o,a,r,l,s,c,n,u){this.tests=t;this.visible=e;this.model=i;this.codeEditorService=o;this.testService=a;this.contextMenuService=r;this.commandService=l;this.configurationService=s;this.testProfileService=c;this.contextKeyService=n;this.menuService=u;this.displayedStates=t.map(d=>d.resultItem?.computedState),this.editorDecoration=le(t.map(d=>d.test),t.map(d=>d.resultItem),e,R(this.configurationService,E.DefaultGutterClickAction)),this.editorDecoration.options.glyphMarginHoverMessage=new F().appendText(this.getGutterLabel())}id="";get line(){return this.editorDecoration.range.startLineNumber}get testIds(){return this.tests.map(t=>t.test.item.extId)}editorDecoration;displayedStates;click(t){if(t.target.type!==De.GUTTER_GLYPH_MARGIN||t.target.detail.glyphMarginLane!==ae||t.event.rightButton||Se&&t.event.leftButton&&t.event.ctrlKey)return!1;const e=t.event.altKey;switch(R(this.configurationService,E.DefaultGutterClickAction)){case T.ContextMenu:this.showContextMenu(t);break;case T.Debug:this.runWith(e?y.Run:y.Debug);break;case T.Coverage:this.runWith(e?y.Debug:y.Coverage);break;case T.Run:default:this.runWith(e?y.Debug:y.Run);break}return!0}replaceOptions(t,e){const i=t.map(r=>r.resultItem?.computedState);if(e===this.visible&&he(this.displayedStates,i))return!1;this.tests=t,this.displayedStates=i,this.visible=e;const{options:o,alternate:a}=le(t.map(r=>r.test),t.map(r=>r.resultItem),e,R(this.configurationService,E.DefaultGutterClickAction));return this.editorDecoration.options=o,this.editorDecoration.alternate=a,this.editorDecoration.options.glyphMarginHoverMessage=new F().appendText(this.getGutterLabel()),!0}isForTest(t){return this.tests.some(e=>e.test.item.extId===t)}runWith(t){return this.testService.runTests({tests:nt(this.testService.collection,this.tests.map(({test:e})=>e)),group:t})}showContextMenu(t){this.codeEditorService.listCodeEditors().find(i=>i.getModel()===this.model)?.getContribution(Pe.ID)?.show(t)}getGutterLabel(){switch(R(this.configurationService,E.DefaultGutterClickAction)){case T.ContextMenu:return h("testing.gutterMsg.contextMenu","Click for test options");case T.Debug:return h("testing.gutterMsg.debug","Click to debug tests, right click for more options");case T.Coverage:return h("testing.gutterMsg.coverage","Click to run tests with coverage, right click for more options");case T.Run:default:return h("testing.gutterMsg.run","Click to run tests, right click for more options")}}getTestContextMenuActions(t,e){const i=[],o=this.testProfileService.capabilitiesForTest(t.item);[{bitset:y.Run,label:h("run test","Run Test")},{bitset:y.Debug,label:h("debug test","Debug Test")},{bitset:y.Coverage,label:h("coverage test","Run with Coverage")}].forEach(({bitset:r,label:l})=>{o&r&&i.push(new w(`testing.gutter.${r}`,l,void 0,void 0,()=>this.testService.runTests({group:r,tests:[t]})))}),o&y.HasNonDefaultProfile&&i.push(new w("testing.runUsing",h("testing.runUsing","Execute Using Profile..."),void 0,void 0,async()=>{const r=await this.commandService.executeCommand("vscode.pickTestProfile",{onlyForTest:t});r&&this.testService.runResolvedTests({group:r.group,targets:[{profileId:r.profileId,controllerId:r.controllerId,testIds:[t.item.extId]}]})})),e&&qe(e.computedState)&&i.push(new w("testing.gutter.peekFailure",h("peek failure","Peek Error"),void 0,void 0,()=>this.commandService.executeCommand("vscode.peekTestError",t.item.extId))),i.push(new w("testing.gutter.reveal",h("reveal test","Reveal in Test Explorer"),void 0,void 0,()=>this.commandService.executeCommand("_revealTestInExplorer",t.item.extId)));const a=this.getContributedTestActions(t,o);return{object:Q.join(i,a),dispose(){}}}getContributedTestActions(t,e){const i=this.contextKeyService.createOverlay(We(t,e)),o=[],a=it(this.testService.collection,t.item.extId),r=this.menuService.getMenuActions(Le.TestItemGutter,i,{shouldForwardArgs:!0,arg:a});return Ae(r,o),o}};M=x([g(3,k),g(4,A),g(5,$),g(6,G),g(7,O),g(8,z),g(9,B),g(10,W)],M);let N=class extends M{constructor(e,i,o,a,r,l,s,c,n,u,d,m){super(e,i,o,a,r,l,s,c,n,u,d);this.quickInputService=m}getContextMenuActions(){const e=[];[{bitset:y.Run,label:h("run all test","Run All Tests")},{bitset:y.Coverage,label:h("run all test with coverage","Run All Tests with Coverage")},{bitset:y.Debug,label:h("debug all test","Debug All Tests")}].forEach(({bitset:n,label:u},d)=>{this.tests.some(({test:p})=>this.testProfileService.capabilitiesForTest(p.item)&n)&&e.push(new w(`testing.gutter.run${d}`,u,void 0,void 0,()=>this.runWith(n)))});const i=this.tests.map(n=>({currentLabel:n.test.item.label,testItem:n,parent:je.fromString(n.test.item.extId).parentId})),o=n=>{const u=new Map;for(const d of n)u.set(d.currentLabel,(u.get(d.currentLabel)||0)+1);return n.filter(d=>u.get(d.currentLabel)>1)};let a,r=!0;for(;(a=o(i)).length&&r;)for(const n of a)if(n.parent){const u=this.testService.collection.getNodeById(n.parent.toString());n.currentLabel=u?.item.label+" > "+n.currentLabel,n.parent=n.parent.parentId}else r=!1;i.sort((n,u)=>{const d=n.testItem.test.item,m=u.testItem.test.item;return(d.sortText||d.label).localeCompare(m.sortText||m.label)});const l=new Y;let s=i.map(({currentLabel:n,testItem:u})=>{const d=this.getTestContextMenuActions(u.test,u.resultItem);l.add(d);let m=be(n);const p=m.indexOf(`
`);return p!==-1&&(m=m.slice(0,p)),new fe(u.test.item.extId,m,d.object)});const c=s.length-se;return c>0&&(s=s.slice(0,se),s.push(new w("testing.gutter.overflow",h("testOverflowItems","{0} more tests...",c),void 0,void 0,()=>this.pickAndRun(i)))),{object:Q.join(e,s),dispose:()=>l.dispose()}}async pickAndRun(e){const i=(r,l)=>new Promise(s=>{const c=new Y,n=c.add(this.quickInputService.createQuickPick());n.placeholder=l,n.items=r,c.add(n.onDidHide(()=>{s(void 0),c.dispose()})),c.add(n.onDidAccept(()=>{s(n.selectedItems[0]),c.dispose()})),n.show()}),o=await i(e.map(({currentLabel:r,testItem:l})=>({label:r,test:l.test,result:l.resultItem})),h("selectTestToRun","Select a test to run"));if(!o)return;const a=this.getTestContextMenuActions(o.test,o.result);try{(await i(a.object,o.label))?.run()}finally{a.dispose()}}};N=x([g(3,k),g(4,A),g(5,$),g(6,G),g(7,O),g(8,z),g(9,B),g(10,W),g(11,Ue)],N);let U=class extends M{constructor(t,e,i,o,a,r,l,s,c,n,u,d){super([{test:t,resultItem:e}],o,i,a,r,s,l,c,n,u,d)}getContextMenuActions(){return this.getTestContextMenuActions(this.tests[0].test,this.tests[0].resultItem)}};U=x([g(4,k),g(5,A),g(6,G),g(7,$),g(8,O),g(9,z),g(10,B),g(11,W)],U);const dt=/\r?\n\s*/g;let C=class{constructor(t,e,i,o,a){this.testMessage=t;this.messageUri=e;this.peekOpener=o;this.location=t.location,this.line=this.location.range.startLineNumber;const r=t.type,l=t.message,s=a.resolveDecorationOptions(C.decorationId,!0);s.hoverMessage=typeof l=="string"?new F().appendText(l):l,s.zIndex=10,s.className=`testing-inline-message-severity-${r}`,s.isWholeLine=!0,s.stickiness=ie.NeverGrowsWhenTypingAtEdges,s.collapseOnReplaceEdit=!0;let c=Ke(l).replace(dt," ");c.length>re&&(c=c.slice(0,re-1)+"\u2026"),s.after={content:" ".repeat(4)+c,inlineClassName:`test-message-inline-content test-message-inline-content-s${r} ${this.contentIdClass} ${e?"test-message-inline-content-clickable":""}`},s.showIfCollapsed=!0;const n=r===V.Error?xe:Ee;n&&(s.overviewRuler={color:Fe(n),position:ke.Right});const u=i.getLineLength(this.location.range.startLineNumber),d=u?u+1:this.location.range.endColumn;this.editorDecoration={options:s,range:{startLineNumber:this.location.range.startLineNumber,startColumn:d,endColumn:d,endLineNumber:this.location.range.startLineNumber}}}static inlineClassName="test-message-inline-content";static decorationId=`testmessage-${te()}`;id="";editorDecoration;location;line;contentIdClass=`test-message-inline-content-id${te()}`;click(t){return t.event.rightButton||!this.messageUri||t.target.element?.className.includes(this.contentIdClass)&&this.peekOpener.peekUri(this.messageUri),!1}getContextMenuActions(){return{object:[],dispose:()=>{}}}};C=x([g(3,Qe),g(4,k)],C);export{P as TestingDecorationService,L as TestingDecorations};
