import{WorkbenchObjectTree as a}from"../../../../../platform/list/browser/listService.js";import{TestId as T}from"../../common/testId.js";import{TestItemTreeElement as n}from"./index.js";class I extends a{getOptimizedViewState(d){const l=d||{},s=(e,t)=>{if(!(e.element instanceof n))return!1;const r=T.localId(e.element.test.item.extId),i=t.children?.[r]||{};i.collapsed=e.depth===0||!e.collapsed?e.collapsed:void 0;let o=i.collapsed!==void 0;if(e.children.length)for(const c of e.children)o=s(c,i)||o;return o?(t.children??={},t.children[r]=i):t.children?.hasOwnProperty(r)&&delete t.children[r],o};l.children??={};for(const e of this.getNode().children)if(e.element instanceof n)if(e.element.test.controllerId===e.element.test.item.extId)s(e,l);else{const t=l.children[e.element.test.controllerId]??={children:{}};s(e,t)}return l}}export{I as TestingObjectTree};
