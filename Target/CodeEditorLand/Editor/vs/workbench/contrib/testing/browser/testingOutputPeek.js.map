{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/testing/browser/testingOutputPeek.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport { alert } from \"../../../../base/browser/ui/aria/aria.js\";\nimport type { IAction } from \"../../../../base/common/actions.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { Color } from \"../../../../base/common/color.js\";\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport { stripIcons } from \"../../../../base/common/iconLabels.js\";\nimport { Iterable } from \"../../../../base/common/iterator.js\";\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport { Lazy } from \"../../../../base/common/lazy.js\";\nimport {\n\tDisposable,\n\tMutableDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { observableValue } from \"../../../../base/common/observable.js\";\nimport { count } from \"../../../../base/common/strings.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport {\n\ttype ICodeEditor,\n\tisCodeEditor,\n} from \"../../../../editor/browser/editorBrowser.js\";\nimport { EditorAction2 } from \"../../../../editor/browser/editorExtensions.js\";\nimport { ICodeEditorService } from \"../../../../editor/browser/services/codeEditorService.js\";\nimport { EmbeddedCodeEditorWidget } from \"../../../../editor/browser/widget/codeEditor/embeddedCodeEditorWidget.js\";\nimport { EmbeddedDiffEditorWidget } from \"../../../../editor/browser/widget/diffEditor/embeddedDiffEditorWidget.js\";\nimport { EditorOption } from \"../../../../editor/common/config/editorOptions.js\";\nimport type { Position } from \"../../../../editor/common/core/position.js\";\nimport { Range } from \"../../../../editor/common/core/range.js\";\nimport {\n\ttype IEditor,\n\ttype IEditorContribution,\n\tScrollType,\n} from \"../../../../editor/common/editorCommon.js\";\nimport { EditorContextKeys } from \"../../../../editor/common/editorContextKeys.js\";\nimport { ITextModelService } from \"../../../../editor/common/services/resolverService.js\";\nimport {\n\tIPeekViewService,\n\tPeekViewWidget,\n\tpeekViewTitleForeground,\n\tpeekViewTitleInfoForeground,\n} from \"../../../../editor/contrib/peekView/browser/peekView.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport { Categories } from \"../../../../platform/action/common/actionCommonCategories.js\";\nimport { createAndFillInActionBarActions } from \"../../../../platform/actions/browser/menuEntryActionViewItem.js\";\nimport {\n\tAction2,\n\tIMenuService,\n\tMenuId,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tContextKeyExpr,\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextMenuService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport {\n\ttype ITextEditorOptions,\n\tTextEditorSelectionRevealType,\n} from \"../../../../platform/editor/common/editor.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ServiceCollection } from \"../../../../platform/instantiation/common/serviceCollection.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { INotificationService } from \"../../../../platform/notification/common/notification.js\";\nimport { bindContextKey } from \"../../../../platform/observable/common/platformObservableUtils.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { editorBackground } from \"../../../../platform/theme/common/colorRegistry.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport {\n\ttype IViewPaneOptions,\n\tViewPane,\n} from \"../../../browser/parts/views/viewPane.js\";\nimport { IViewDescriptorService } from \"../../../common/views.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport {\n\tAutoOpenPeekViewWhen,\n\tTestingConfigKeys,\n\tgetTestingConfiguration,\n} from \"../common/configuration.js\";\nimport { Testing } from \"../common/constants.js\";\nimport {\n\tMutableObservableValue,\n\tstaticObservableValue,\n} from \"../common/observableValue.js\";\nimport { StoredValue } from \"../common/storedValue.js\";\nimport {\n\ttype ITestResult,\n\ttype TestResultItemChange,\n\tTestResultItemChangeReason,\n\tresultItemParents,\n} from \"../common/testResult.js\";\nimport {\n\tITestResultService,\n\ttype ResultChangeEvent,\n} from \"../common/testResultService.js\";\nimport { ITestService } from \"../common/testService.js\";\nimport {\n\ttype IRichLocation,\n\tITestMessage,\n\tTestMessageType,\n\ttype TestResultItem,\n} from \"../common/testTypes.js\";\nimport { TestingContextKeys } from \"../common/testingContextKeys.js\";\nimport {\n\ttype IShowResultOptions,\n\tITestingPeekOpener,\n} from \"../common/testingPeekOpener.js\";\nimport { isFailedState } from \"../common/testingStates.js\";\nimport {\n\ttype ParsedTestUri,\n\tTestUriType,\n\tbuildTestUri,\n\tparseTestUri,\n} from \"../common/testingUri.js\";\nimport { renderTestMessageAsText } from \"./testMessageColorizer.js\";\nimport {\n\ttype InspectSubject,\n\tMessageSubject,\n\tTaskSubject,\n\tTestOutputSubject,\n\tinspectSubjectHasStack,\n\tmapFindTestMessage,\n} from \"./testResultsView/testResultsSubject.js\";\nimport { TestResultsViewContent } from \"./testResultsView/testResultsViewContent.js\";\nimport {\n\ttestingMessagePeekBorder,\n\ttestingPeekBorder,\n\ttestingPeekHeaderBackground,\n\ttestingPeekMessageHeaderBackground,\n} from \"./theme.js\";\n\n/** Iterates through every message in every result */\nfunction* allMessages(results: readonly ITestResult[]) {\n\tfor (const result of results) {\n\t\tfor (const test of result.tests) {\n\t\t\tfor (\n\t\t\t\tlet taskIndex = 0;\n\t\t\t\ttaskIndex < test.tasks.length;\n\t\t\t\ttaskIndex++\n\t\t\t) {\n\t\t\t\tfor (\n\t\t\t\t\tlet messageIndex = 0;\n\t\t\t\t\tmessageIndex < test.tasks[taskIndex].messages.length;\n\t\t\t\t\tmessageIndex++\n\t\t\t\t) {\n\t\t\t\t\tyield { result, test, taskIndex, messageIndex };\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\ntype TestUriWithDocument = ParsedTestUri & { documentUri: URI };\n\nexport class TestingPeekOpener\n\textends Disposable\n\timplements ITestingPeekOpener\n{\n\tdeclare _serviceBrand: undefined;\n\n\tprivate lastUri?: TestUriWithDocument;\n\n\t/** @inheritdoc */\n\tpublic readonly historyVisible = this._register(\n\t\tMutableObservableValue.stored(\n\t\t\tnew StoredValue<boolean>(\n\t\t\t\t{\n\t\t\t\t\tkey: \"testHistoryVisibleInPeek\",\n\t\t\t\t\tscope: StorageScope.PROFILE,\n\t\t\t\t\ttarget: StorageTarget.USER,\n\t\t\t\t},\n\t\t\t\tthis.storageService,\n\t\t\t),\n\t\t\tfalse,\n\t\t),\n\t);\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configuration: IConfigurationService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@ICodeEditorService private readonly codeEditorService: ICodeEditorService,\n\t\t@ITestResultService private readonly testResults: ITestResultService,\n\t\t@ITestService private readonly testService: ITestService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IViewsService private readonly viewsService: IViewsService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t) {\n\t\tsuper();\n\t\tthis._register(testResults.onTestChanged(this.openPeekOnFailure, this));\n\t}\n\n\t/** @inheritdoc */\n\tpublic async open() {\n\t\tlet uri: TestUriWithDocument | undefined;\n\t\tconst active = this.editorService.activeTextEditorControl;\n\t\tif (isCodeEditor(active) && active.getModel()?.uri) {\n\t\t\tconst modelUri = active.getModel()?.uri;\n\t\t\tif (modelUri) {\n\t\t\t\turi = await this.getFileCandidateMessage(\n\t\t\t\t\tmodelUri,\n\t\t\t\t\tactive.getPosition(),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (!uri) {\n\t\t\turi = this.lastUri;\n\t\t}\n\n\t\tif (!uri) {\n\t\t\turi = this.getAnyCandidateMessage();\n\t\t}\n\n\t\tif (!uri) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.showPeekFromUri(uri);\n\t}\n\n\t/** @inheritdoc */\n\tpublic tryPeekFirstError(\n\t\tresult: ITestResult,\n\t\ttest: TestResultItem,\n\t\toptions?: Partial<ITextEditorOptions>,\n\t) {\n\t\tconst candidate = this.getFailedCandidateMessage(test);\n\t\tif (!candidate) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.showPeekFromUri(\n\t\t\t{\n\t\t\t\ttype: TestUriType.ResultMessage,\n\t\t\t\tdocumentUri: candidate.location.uri,\n\t\t\t\ttaskIndex: candidate.taskId,\n\t\t\t\tmessageIndex: candidate.index,\n\t\t\t\tresultId: result.id,\n\t\t\t\ttestExtId: test.item.extId,\n\t\t\t},\n\t\t\tundefined,\n\t\t\t{\n\t\t\t\tselection: candidate.location.range,\n\t\t\t\tselectionRevealType:\n\t\t\t\t\tTextEditorSelectionRevealType.NearTopIfOutsideViewport,\n\t\t\t\t...options,\n\t\t\t},\n\t\t);\n\t\treturn true;\n\t}\n\n\t/** @inheritdoc */\n\tpublic peekUri(uri: URI, options: IShowResultOptions = {}) {\n\t\tconst parsed = parseTestUri(uri);\n\t\tconst result = parsed && this.testResults.getResult(parsed.resultId);\n\t\tif (!parsed || !result || !(\"testExtId\" in parsed)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!(\"messageIndex\" in parsed)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst message = result.getStateById(parsed.testExtId)?.tasks[\n\t\t\tparsed.taskIndex\n\t\t].messages[parsed.messageIndex];\n\t\tif (!message?.location) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.showPeekFromUri(\n\t\t\t{\n\t\t\t\ttype: TestUriType.ResultMessage,\n\t\t\t\tdocumentUri: message.location.uri,\n\t\t\t\ttaskIndex: parsed.taskIndex,\n\t\t\t\tmessageIndex: parsed.messageIndex,\n\t\t\t\tresultId: result.id,\n\t\t\t\ttestExtId: parsed.testExtId,\n\t\t\t},\n\t\t\toptions.inEditor,\n\t\t\t{ selection: message.location.range, ...options.options },\n\t\t);\n\t\treturn true;\n\t}\n\n\t/** @inheritdoc */\n\tpublic closeAllPeeks() {\n\t\tfor (const editor of this.codeEditorService.listCodeEditors()) {\n\t\t\tTestingOutputPeekController.get(editor)?.removePeek();\n\t\t}\n\t}\n\n\tpublic openCurrentInEditor(): void {\n\t\tconst current = this.getActiveControl();\n\t\tif (!current) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst options = { pinned: false, revealIfOpened: true };\n\t\tif (\n\t\t\tcurrent instanceof TaskSubject ||\n\t\t\tcurrent instanceof TestOutputSubject\n\t\t) {\n\t\t\tthis.editorService.openEditor({\n\t\t\t\tresource: current.outputUri,\n\t\t\t\toptions,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (current instanceof TestOutputSubject) {\n\t\t\tthis.editorService.openEditor({\n\t\t\t\tresource: current.outputUri,\n\t\t\t\toptions,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = current.message;\n\t\tif (current.isDiffable) {\n\t\t\tthis.editorService.openEditor({\n\t\t\t\toriginal: { resource: current.expectedUri },\n\t\t\t\tmodified: { resource: current.actualUri },\n\t\t\t\toptions,\n\t\t\t});\n\t\t} else if (typeof message.message === \"string\") {\n\t\t\tthis.editorService.openEditor({\n\t\t\t\tresource: current.messageUri,\n\t\t\t\toptions,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.commandService\n\t\t\t\t.executeCommand(\"markdown.showPreview\", current.messageUri)\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tthis.notificationService.error(\n\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\"testing.markdownPeekError\",\n\t\t\t\t\t\t\t\"Could not open markdown preview: {0}.\\n\\nPlease make sure the markdown extension is enabled.\",\n\t\t\t\t\t\t\terr.message,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t}\n\t}\n\n\tprivate getActiveControl(): InspectSubject | undefined {\n\t\tconst editor = getPeekedEditorFromFocus(this.codeEditorService);\n\t\tconst controller = editor && TestingOutputPeekController.get(editor);\n\t\treturn (\n\t\t\tcontroller?.subject ??\n\t\t\tthis.viewsService.getActiveViewWithId<TestResultsView>(\n\t\t\t\tTesting.ResultsViewId,\n\t\t\t)?.subject\n\t\t);\n\t}\n\n\t/** @inheritdoc */\n\tprivate async showPeekFromUri(\n\t\turi: TestUriWithDocument,\n\t\teditor?: IEditor,\n\t\toptions?: ITextEditorOptions,\n\t) {\n\t\tif (isCodeEditor(editor)) {\n\t\t\tthis.lastUri = uri;\n\t\t\tTestingOutputPeekController.get(editor)?.show(\n\t\t\t\tbuildTestUri(this.lastUri),\n\t\t\t);\n\t\t\treturn true;\n\t\t}\n\n\t\tconst pane = await this.editorService.openEditor({\n\t\t\tresource: uri.documentUri,\n\t\t\toptions: { revealIfOpened: true, ...options },\n\t\t});\n\n\t\tconst control = pane?.getControl();\n\t\tif (!isCodeEditor(control)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.lastUri = uri;\n\t\tTestingOutputPeekController.get(control)?.show(\n\t\t\tbuildTestUri(this.lastUri),\n\t\t);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Opens the peek view on a test failure, based on user preferences.\n\t */\n\tprivate openPeekOnFailure(evt: TestResultItemChange) {\n\t\tif (evt.reason !== TestResultItemChangeReason.OwnStateChange) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst candidate = this.getFailedCandidateMessage(evt.item);\n\t\tif (!candidate) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tevt.result.request.continuous &&\n\t\t\t!getTestingConfiguration(\n\t\t\t\tthis.configuration,\n\t\t\t\tTestingConfigKeys.AutoOpenPeekViewDuringContinuousRun,\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editors = this.codeEditorService.listCodeEditors();\n\t\tconst cfg = getTestingConfiguration(\n\t\t\tthis.configuration,\n\t\t\tTestingConfigKeys.AutoOpenPeekView,\n\t\t);\n\n\t\t// don't show the peek if the user asked to only auto-open peeks for visible tests,\n\t\t// and this test is not in any of the editors' models.\n\t\tswitch (cfg) {\n\t\t\tcase AutoOpenPeekViewWhen.FailureVisible: {\n\t\t\t\tconst editorUris = new Set(\n\t\t\t\t\teditors.map((e) => e.getModel()?.uri.toString()),\n\t\t\t\t);\n\t\t\t\tif (\n\t\t\t\t\t!Iterable.some(\n\t\t\t\t\t\tresultItemParents(evt.result, evt.item),\n\t\t\t\t\t\t(i) =>\n\t\t\t\t\t\t\ti.item.uri && editorUris.has(i.item.uri.toString()),\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak; //continue\n\t\t\t}\n\t\t\tcase AutoOpenPeekViewWhen.FailureAnywhere:\n\t\t\t\tbreak; //continue\n\n\t\t\tdefault:\n\t\t\t\treturn; // never show\n\t\t}\n\n\t\tconst controllers = editors.map(TestingOutputPeekController.get);\n\t\tif (controllers.some((c) => c?.subject)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.tryPeekFirstError(evt.result, evt.item);\n\t}\n\n\t/**\n\t * Gets the message closest to the given position from a test in the file.\n\t */\n\tprivate async getFileCandidateMessage(uri: URI, position: Position | null) {\n\t\tlet best: TestUriWithDocument | undefined;\n\t\tlet bestDistance = Number.POSITIVE_INFINITY;\n\n\t\t// Get all tests for the document. In those, find one that has a test\n\t\t// message closest to the cursor position.\n\t\tconst demandedUriStr = uri.toString();\n\t\tfor (const test of this.testService.collection.all) {\n\t\t\tconst result = this.testResults.getStateById(test.item.extId);\n\t\t\tif (!result) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tmapFindTestMessage(\n\t\t\t\tresult[1],\n\t\t\t\t(_task, message, messageIndex, taskIndex) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tmessage.type !== TestMessageType.Error ||\n\t\t\t\t\t\t!message.location ||\n\t\t\t\t\t\tmessage.location.uri.toString() !== demandedUriStr\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst distance = position\n\t\t\t\t\t\t? Math.abs(\n\t\t\t\t\t\t\t\tposition.lineNumber -\n\t\t\t\t\t\t\t\t\tmessage.location.range.startLineNumber,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: 0;\n\t\t\t\t\tif (!best || distance <= bestDistance) {\n\t\t\t\t\t\tbestDistance = distance;\n\t\t\t\t\t\tbest = {\n\t\t\t\t\t\t\ttype: TestUriType.ResultMessage,\n\t\t\t\t\t\t\ttestExtId: result[1].item.extId,\n\t\t\t\t\t\t\tresultId: result[0].id,\n\t\t\t\t\t\t\ttaskIndex,\n\t\t\t\t\t\t\tmessageIndex,\n\t\t\t\t\t\t\tdocumentUri: uri,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\n\t\treturn best;\n\t}\n\n\t/**\n\t * Gets any possible still-relevant message from the results.\n\t */\n\tprivate getAnyCandidateMessage() {\n\t\tconst seen = new Set<string>();\n\t\tfor (const result of this.testResults.results) {\n\t\t\tfor (const test of result.tests) {\n\t\t\t\tif (seen.has(test.item.extId)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tseen.add(test.item.extId);\n\t\t\t\tconst found = mapFindTestMessage(\n\t\t\t\t\ttest,\n\t\t\t\t\t(task, message, messageIndex, taskIndex) =>\n\t\t\t\t\t\tmessage.location && {\n\t\t\t\t\t\t\ttype: TestUriType.ResultMessage,\n\t\t\t\t\t\t\ttestExtId: test.item.extId,\n\t\t\t\t\t\t\tresultId: result.id,\n\t\t\t\t\t\t\ttaskIndex,\n\t\t\t\t\t\t\tmessageIndex,\n\t\t\t\t\t\t\tdocumentUri: message.location.uri,\n\t\t\t\t\t\t},\n\t\t\t\t);\n\n\t\t\t\tif (found) {\n\t\t\t\t\treturn found;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Gets the first failed message that can be displayed from the result.\n\t */\n\tprivate getFailedCandidateMessage(test: TestResultItem) {\n\t\tconst fallbackLocation =\n\t\t\ttest.item.uri && test.item.range\n\t\t\t\t? { uri: test.item.uri, range: test.item.range }\n\t\t\t\t: undefined;\n\n\t\tlet best:\n\t\t\t| {\n\t\t\t\t\ttaskId: number;\n\t\t\t\t\tindex: number;\n\t\t\t\t\tmessage: ITestMessage;\n\t\t\t\t\tlocation: IRichLocation;\n\t\t\t  }\n\t\t\t| undefined;\n\t\tmapFindTestMessage(test, (task, message, messageIndex, taskId) => {\n\t\t\tconst location = message.location || fallbackLocation;\n\t\t\tif (!isFailedState(task.state) || !location) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (best && message.type !== TestMessageType.Error) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tbest = { taskId, index: messageIndex, message, location };\n\t\t});\n\n\t\treturn best;\n\t}\n}\n\n/**\n * Adds output/message peek functionality to code editors.\n */\nexport class TestingOutputPeekController\n\textends Disposable\n\timplements IEditorContribution\n{\n\t/**\n\t * Gets the controller associated with the given code editor.\n\t */\n\tpublic static get(editor: ICodeEditor): TestingOutputPeekController | null {\n\t\treturn editor.getContribution<TestingOutputPeekController>(\n\t\t\tTesting.OutputPeekContributionId,\n\t\t);\n\t}\n\n\t/**\n\t * Currently-shown peek view.\n\t */\n\tprivate readonly peek = this._register(\n\t\tnew MutableDisposable<TestResultsPeek>(),\n\t);\n\n\t/**\n\t * Context key updated when the peek is visible/hidden.\n\t */\n\tprivate readonly visible: IContextKey<boolean>;\n\n\t/**\n\t * Gets the currently display subject. Undefined if the peek is not open.\n\t */\n\tpublic get subject() {\n\t\treturn this.peek.value?.current;\n\t}\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\t@ICodeEditorService private readonly codeEditorService: ICodeEditorService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ITestResultService private readonly testResults: ITestResultService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t) {\n\t\tsuper();\n\t\tthis.visible = TestingContextKeys.isPeekVisible.bindTo(contextKeyService);\n\t\tthis._register(editor.onDidChangeModel(() => this.peek.clear()));\n\t\tthis._register(testResults.onResultsChanged(this.closePeekOnCertainResultEvents, this));\n\t\tthis._register(testResults.onTestChanged(this.closePeekOnTestChange, this));\n\t}\n\n\t/**\n\t * Shows a peek for the message in the editor.\n\t */\n\tpublic async show(uri: URI) {\n\t\tconst subject = this.retrieveTest(uri);\n\t\tif (subject) {\n\t\t\tthis.showSubject(subject);\n\t\t}\n\t}\n\n\t/**\n\t * Shows a peek for the existing inspect subject.\n\t */\n\tpublic async showSubject(subject: InspectSubject) {\n\t\tif (!this.peek.value) {\n\t\t\tthis.peek.value = this.instantiationService.createInstance(\n\t\t\t\tTestResultsPeek,\n\t\t\t\tthis.editor,\n\t\t\t);\n\t\t\tthis.peek.value.onDidClose(() => {\n\t\t\t\tthis.visible.set(false);\n\t\t\t\tthis.peek.value = undefined;\n\t\t\t});\n\n\t\t\tthis.visible.set(true);\n\t\t\tthis.peek.value.create();\n\t\t}\n\n\t\tif (subject instanceof MessageSubject) {\n\t\t\talert(renderTestMessageAsText(subject.message.message));\n\t\t}\n\n\t\tthis.peek.value.setModel(subject);\n\t}\n\n\tpublic async openAndShow(uri: URI) {\n\t\tconst subject = this.retrieveTest(uri);\n\t\tif (!subject) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\t!subject.revealLocation ||\n\t\t\tsubject.revealLocation.uri.toString() ===\n\t\t\t\tthis.editor.getModel()?.uri.toString()\n\t\t) {\n\t\t\treturn this.show(uri);\n\t\t}\n\n\t\tconst otherEditor = await this.codeEditorService.openCodeEditor(\n\t\t\t{\n\t\t\t\tresource: subject.revealLocation.uri,\n\t\t\t\toptions: { pinned: false, revealIfOpened: true },\n\t\t\t},\n\t\t\tthis.editor,\n\t\t);\n\n\t\tif (otherEditor) {\n\t\t\tTestingOutputPeekController.get(otherEditor)?.removePeek();\n\t\t\treturn TestingOutputPeekController.get(otherEditor)?.show(uri);\n\t\t}\n\t}\n\n\t/**\n\t * Disposes the peek view, if any.\n\t */\n\tpublic removePeek() {\n\t\tthis.peek.clear();\n\t}\n\n\t/**\n\t * Collapses all displayed stack frames.\n\t */\n\tpublic collapseStack() {\n\t\tthis.peek.value?.collapseStack();\n\t}\n\n\t/**\n\t * Shows the next message in the peek, if possible.\n\t */\n\tpublic next() {\n\t\tconst subject = this.peek.value?.current;\n\t\tif (!subject) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet found = false;\n\t\tfor (const { messageIndex, taskIndex, result, test } of allMessages(\n\t\t\tthis.testResults.results,\n\t\t)) {\n\t\t\tif (\n\t\t\t\tsubject instanceof TaskSubject &&\n\t\t\t\tresult.id === subject.result.id\n\t\t\t) {\n\t\t\t\tfound = true; // open the first message found in the current result\n\t\t\t}\n\n\t\t\tif (found) {\n\t\t\t\tthis.openAndShow(\n\t\t\t\t\tbuildTestUri({\n\t\t\t\t\t\ttype: TestUriType.ResultMessage,\n\t\t\t\t\t\tmessageIndex,\n\t\t\t\t\t\ttaskIndex,\n\t\t\t\t\t\tresultId: result.id,\n\t\t\t\t\t\ttestExtId: test.item.extId,\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tsubject instanceof TestOutputSubject &&\n\t\t\t\tsubject.test.item.extId === test.item.extId &&\n\t\t\t\tsubject.taskIndex === taskIndex &&\n\t\t\t\tsubject.result.id === result.id\n\t\t\t) {\n\t\t\t\tfound = true;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tsubject instanceof MessageSubject &&\n\t\t\t\tsubject.test.extId === test.item.extId &&\n\t\t\t\tsubject.messageIndex === messageIndex &&\n\t\t\t\tsubject.taskIndex === taskIndex &&\n\t\t\t\tsubject.result.id === result.id\n\t\t\t) {\n\t\t\t\tfound = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the previous message in the peek, if possible.\n\t */\n\tpublic previous() {\n\t\tconst subject = this.peek.value?.current;\n\t\tif (!subject) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet previous:\n\t\t\t| {\n\t\t\t\t\tmessageIndex: number;\n\t\t\t\t\ttaskIndex: number;\n\t\t\t\t\tresult: ITestResult;\n\t\t\t\t\ttest: TestResultItem;\n\t\t\t  }\n\t\t\t| undefined;\n\t\tfor (const m of allMessages(this.testResults.results)) {\n\t\t\tif (subject instanceof TaskSubject) {\n\t\t\t\tif (m.result.id === subject.result.id) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (subject instanceof TestOutputSubject) {\n\t\t\t\tif (\n\t\t\t\t\tm.test.item.extId === subject.test.item.extId &&\n\t\t\t\t\tm.result.id === subject.result.id &&\n\t\t\t\t\tm.taskIndex === subject.taskIndex\n\t\t\t\t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tsubject.test.extId === m.test.item.extId &&\n\t\t\t\tsubject.messageIndex === m.messageIndex &&\n\t\t\t\tsubject.taskIndex === m.taskIndex &&\n\t\t\t\tsubject.result.id === m.result.id\n\t\t\t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tprevious = m;\n\t\t}\n\n\t\tif (previous) {\n\t\t\tthis.openAndShow(\n\t\t\t\tbuildTestUri({\n\t\t\t\t\ttype: TestUriType.ResultMessage,\n\t\t\t\t\tmessageIndex: previous.messageIndex,\n\t\t\t\t\ttaskIndex: previous.taskIndex,\n\t\t\t\t\tresultId: previous.result.id,\n\t\t\t\t\ttestExtId: previous.test.item.extId,\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Removes the peek view if it's being displayed on the given test ID.\n\t */\n\tpublic removeIfPeekingForTest(testId: string) {\n\t\tconst c = this.peek.value?.current;\n\t\tif (c && c instanceof MessageSubject && c.test.extId === testId) {\n\t\t\tthis.peek.clear();\n\t\t}\n\t}\n\n\t/**\n\t * If the test we're currently showing has its state change to something\n\t * else, then clear the peek.\n\t */\n\tprivate closePeekOnTestChange(evt: TestResultItemChange) {\n\t\tif (\n\t\t\tevt.reason !== TestResultItemChangeReason.OwnStateChange ||\n\t\t\tevt.previousState === evt.item.ownComputedState\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.removeIfPeekingForTest(evt.item.item.extId);\n\t}\n\n\tprivate closePeekOnCertainResultEvents(evt: ResultChangeEvent) {\n\t\tif (\"started\" in evt) {\n\t\t\tthis.peek.clear(); // close peek when runs start\n\t\t}\n\n\t\tif (\"removed\" in evt && this.testResults.results.length === 0) {\n\t\t\tthis.peek.clear(); // close the peek if results are cleared\n\t\t}\n\t}\n\n\tprivate retrieveTest(uri: URI): InspectSubject | undefined {\n\t\tconst parts = parseTestUri(uri);\n\t\tif (!parts) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst result = this.testResults.results.find(\n\t\t\t(r) => r.id === parts.resultId,\n\t\t);\n\t\tif (!result) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (parts.type === TestUriType.TaskOutput) {\n\t\t\treturn new TaskSubject(result, parts.taskIndex);\n\t\t}\n\n\t\tif (parts.type === TestUriType.TestOutput) {\n\t\t\tconst test = result.getStateById(parts.testExtId);\n\t\t\tif (!test) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn new TestOutputSubject(result, parts.taskIndex, test);\n\t\t}\n\n\t\tconst { testExtId, taskIndex, messageIndex } = parts;\n\t\tconst test = result?.getStateById(testExtId);\n\t\tif (!test || !test.tasks[parts.taskIndex]) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn new MessageSubject(result, test, taskIndex, messageIndex);\n\t}\n}\n\nclass TestResultsPeek extends PeekViewWidget {\n\tprivate static lastHeightInLines?: number;\n\n\tprivate readonly visibilityChange = this._disposables.add(\n\t\tnew Emitter<boolean>(),\n\t);\n\tprivate readonly _current = observableValue<InspectSubject | undefined>(\n\t\t\"testPeekCurrent\",\n\t\tundefined,\n\t);\n\tprivate content!: TestResultsViewContent;\n\tprivate scopedContextKeyService!: IContextKeyService;\n\tprivate dimension?: dom.Dimension;\n\n\tpublic get current() {\n\t\treturn this._current.get();\n\t}\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IPeekViewService peekViewService: IPeekViewService,\n\t\t@ITestingPeekOpener private readonly testingPeek: ITestingPeekOpener,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ITextModelService protected readonly modelService: ITextModelService,\n\t\t@ICodeEditorService protected readonly codeEditorService: ICodeEditorService,\n\t\t@IUriIdentityService protected readonly uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(editor, { showFrame: true, frameWidth: 1, showArrow: true, isResizeable: true, isAccessible: true, className: 'test-output-peek' }, instantiationService);\n\n\t\tthis._disposables.add(themeService.onDidColorThemeChange(this.applyTheme, this));\n\t\tthis._disposables.add(this.onDidClose(() => this.visibilityChange.fire(false)));\n\t\tpeekViewService.addExclusiveWidget(editor, this);\n\t}\n\n\tprivate applyTheme() {\n\t\tconst theme = this.themeService.getColorTheme();\n\t\tconst isError =\n\t\t\tthis.current instanceof MessageSubject &&\n\t\t\tthis.current.message.type === TestMessageType.Error;\n\t\tconst borderColor =\n\t\t\t(isError\n\t\t\t\t? theme.getColor(testingPeekBorder)\n\t\t\t\t: theme.getColor(testingMessagePeekBorder)) ||\n\t\t\tColor.transparent;\n\t\tconst headerBg =\n\t\t\t(isError\n\t\t\t\t? theme.getColor(testingPeekHeaderBackground)\n\t\t\t\t: theme.getColor(testingPeekMessageHeaderBackground)) ||\n\t\t\tColor.transparent;\n\t\tconst editorBg = theme.getColor(editorBackground);\n\t\tthis.style({\n\t\t\tarrowColor: borderColor,\n\t\t\tframeColor: borderColor,\n\t\t\theaderBackgroundColor:\n\t\t\t\teditorBg && headerBg ? headerBg.makeOpaque(editorBg) : headerBg,\n\t\t\tprimaryHeadingColor: theme.getColor(peekViewTitleForeground),\n\t\t\tsecondaryHeadingColor: theme.getColor(peekViewTitleInfoForeground),\n\t\t});\n\t}\n\n\tprotected override _fillContainer(container: HTMLElement): void {\n\t\tif (!this.scopedContextKeyService) {\n\t\t\tthis.scopedContextKeyService = this._disposables.add(\n\t\t\t\tthis.contextKeyService.createScoped(container),\n\t\t\t);\n\t\t\tTestingContextKeys.isInPeek\n\t\t\t\t.bindTo(this.scopedContextKeyService)\n\t\t\t\t.set(true);\n\t\t\tconst instaService = this._disposables.add(\n\t\t\t\tthis.instantiationService.createChild(\n\t\t\t\t\tnew ServiceCollection([\n\t\t\t\t\t\tIContextKeyService,\n\t\t\t\t\t\tthis.scopedContextKeyService,\n\t\t\t\t\t]),\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis.content = this._disposables.add(\n\t\t\t\tinstaService.createInstance(\n\t\t\t\t\tTestResultsViewContent,\n\t\t\t\t\tthis.editor,\n\t\t\t\t\t{\n\t\t\t\t\t\thistoryVisible: this.testingPeek.historyVisible,\n\t\t\t\t\t\tshowRevealLocationOnMessages: false,\n\t\t\t\t\t\tlocationForProgress: Testing.ResultsViewId,\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tthis._disposables.add(\n\t\t\t\tthis.content.onClose(() => {\n\t\t\t\t\tTestingOutputPeekController.get(this.editor)?.removePeek();\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\tsuper._fillContainer(container);\n\t}\n\n\tprotected override _fillHead(container: HTMLElement): void {\n\t\tsuper._fillHead(container);\n\n\t\tconst menuContextKeyService = this._disposables.add(\n\t\t\tthis.contextKeyService.createScoped(container),\n\t\t);\n\t\tthis._disposables.add(\n\t\t\tbindContextKey(\n\t\t\t\tTestingContextKeys.peekHasStack,\n\t\t\t\tmenuContextKeyService,\n\t\t\t\t(reader) => inspectSubjectHasStack(this._current.read(reader)),\n\t\t\t),\n\t\t);\n\n\t\tconst menu = this.menuService.createMenu(\n\t\t\tMenuId.TestPeekTitle,\n\t\t\tmenuContextKeyService,\n\t\t);\n\t\tconst actionBar = this._actionbarWidget!;\n\t\tthis._disposables.add(\n\t\t\tmenu.onDidChange(() => {\n\t\t\t\tactions.length = 0;\n\t\t\t\tcreateAndFillInActionBarActions(menu, undefined, actions);\n\t\t\t\twhile (actionBar.getAction(1)) {\n\t\t\t\t\tactionBar.pull(0); // remove all but the view's default \"close\" button\n\t\t\t\t}\n\t\t\t\tactionBar.push(actions, { label: false, icon: true, index: 0 });\n\t\t\t}),\n\t\t);\n\n\t\tconst actions: IAction[] = [];\n\t\tcreateAndFillInActionBarActions(menu, undefined, actions);\n\t\tactionBar.push(actions, { label: false, icon: true, index: 0 });\n\t}\n\n\tprotected override _fillBody(containerElement: HTMLElement): void {\n\t\tthis.content.fillBody(containerElement);\n\t\tthis._disposables.add(\n\t\t\tthis.content.onDidRequestReveal((sub) => {\n\t\t\t\tTestingOutputPeekController.get(this.editor)?.show(\n\t\t\t\t\tsub instanceof MessageSubject\n\t\t\t\t\t\t? sub.messageUri\n\t\t\t\t\t\t: sub.outputUri,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\t}\n\n\t/**\n\t * Updates the test to be shown.\n\t */\n\tpublic setModel(subject: InspectSubject): Promise<void> {\n\t\tif (\n\t\t\tsubject instanceof TaskSubject ||\n\t\t\tsubject instanceof TestOutputSubject\n\t\t) {\n\t\t\tthis._current.set(subject, undefined);\n\t\t\treturn this.showInPlace(subject);\n\t\t}\n\n\t\tconst message = subject.message;\n\t\tconst previous = this.current;\n\t\tconst revealLocation = subject.revealLocation?.range.getStartPosition();\n\t\tif (!revealLocation && !previous) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis._current.set(subject, undefined);\n\t\tif (!revealLocation) {\n\t\t\treturn this.showInPlace(subject);\n\t\t}\n\n\t\t// If there is a stack we want to display, ensure the default size is large-ish\n\t\tconst peekLines =\n\t\t\tTestResultsPeek.lastHeightInLines ||\n\t\t\tMath.max(\n\t\t\t\tinspectSubjectHasStack(subject)\n\t\t\t\t\t? Math.ceil(this.getVisibleEditorLines() / 2)\n\t\t\t\t\t: 0,\n\t\t\t\thintMessagePeekHeight(message),\n\t\t\t);\n\n\t\tthis.show(revealLocation, peekLines);\n\t\tthis.editor.revealRangeNearTopIfOutsideViewport(\n\t\t\tRange.fromPositions(revealLocation),\n\t\t\tScrollType.Smooth,\n\t\t);\n\n\t\treturn this.showInPlace(subject);\n\t}\n\n\t/**\n\t * Collapses all displayed stack frames.\n\t */\n\tpublic collapseStack() {\n\t\tthis.content.collapseStack();\n\t}\n\n\tprivate getVisibleEditorLines() {\n\t\t// note that we don't use the view ranges because we don't want to get\n\t\t// thrown off by large wrapping lines. Being approximate here is okay.\n\t\treturn Math.round(\n\t\t\tthis.editor.getDomNode()!.clientHeight /\n\t\t\t\tthis.editor.getOption(EditorOption.lineHeight),\n\t\t);\n\t}\n\n\t/**\n\t * Shows a message in-place without showing or changing the peek location.\n\t * This is mostly used if peeking a message without a location.\n\t */\n\tpublic async showInPlace(subject: InspectSubject) {\n\t\tif (subject instanceof MessageSubject) {\n\t\t\tconst message = subject.message;\n\t\t\tthis.setTitle(\n\t\t\t\tfirstLine(renderTestMessageAsText(message.message)),\n\t\t\t\tstripIcons(subject.test.label),\n\t\t\t);\n\t\t} else {\n\t\t\tthis.setTitle(localize(\"testOutputTitle\", \"Test Output\"));\n\t\t}\n\t\tthis.applyTheme();\n\t\tawait this.content.reveal({ subject, preserveFocus: false });\n\t}\n\n\tprotected override _relayout(newHeightInLines: number): void {\n\t\tsuper._relayout(newHeightInLines);\n\t\tTestResultsPeek.lastHeightInLines = newHeightInLines;\n\t}\n\n\t/** @override */\n\tprotected override _doLayoutBody(height: number, width: number) {\n\t\tsuper._doLayoutBody(height, width);\n\t\tthis.content.onLayoutBody(height, width);\n\t}\n\n\t/** @override */\n\tprotected override _onWidth(width: number) {\n\t\tsuper._onWidth(width);\n\t\tif (this.dimension) {\n\t\t\tthis.dimension = new dom.Dimension(width, this.dimension.height);\n\t\t}\n\n\t\tthis.content.onWidth(width);\n\t}\n}\n\nexport class TestResultsView extends ViewPane {\n\tprivate readonly content = new Lazy(() =>\n\t\tthis._register(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tTestResultsViewContent,\n\t\t\t\tundefined,\n\t\t\t\t{\n\t\t\t\t\thistoryVisible: staticObservableValue(true),\n\t\t\t\t\tshowRevealLocationOnMessages: true,\n\t\t\t\t\tlocationForProgress: Testing.ExplorerViewId,\n\t\t\t\t},\n\t\t\t),\n\t\t),\n\t);\n\n\tconstructor(\n\t\toptions: IViewPaneOptions,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@ITestResultService private readonly resultService: ITestResultService,\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService, hoverService);\n\t}\n\n\tpublic get subject() {\n\t\treturn this.content.rawValue?.current;\n\t}\n\n\tpublic showLatestRun(preserveFocus = false) {\n\t\tconst result = this.resultService.results.find((r) => r.tasks.length);\n\t\tif (!result) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.content.rawValue?.reveal({\n\t\t\tpreserveFocus,\n\t\t\tsubject: new TaskSubject(result, 0),\n\t\t});\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\t\t// Avoid rendering into the body until it's attached the DOM, as it can\n\t\t// result in rendering issues in the terminal (#194156)\n\t\tif (this.isBodyVisible()) {\n\t\t\tthis.renderContent(container);\n\t\t} else {\n\t\t\tthis._register(\n\t\t\t\tEvent.once(\n\t\t\t\t\tEvent.filter(this.onDidChangeBodyVisibility, Boolean),\n\t\t\t\t)(() => this.renderContent(container)),\n\t\t\t);\n\t\t}\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\t\tthis.content.rawValue?.onLayoutBody(height, width);\n\t}\n\n\tprivate renderContent(container: HTMLElement) {\n\t\tconst content = this.content.value;\n\t\tcontent.fillBody(container);\n\t\tthis._register(\n\t\t\tcontent.onDidRequestReveal((subject) =>\n\t\t\t\tcontent.reveal({ preserveFocus: true, subject }),\n\t\t\t),\n\t\t);\n\n\t\tconst [lastResult] = this.resultService.results;\n\t\tif (lastResult && lastResult.tasks.length) {\n\t\t\tcontent.reveal({\n\t\t\t\tpreserveFocus: true,\n\t\t\t\tsubject: new TaskSubject(lastResult, 0),\n\t\t\t});\n\t\t}\n\t}\n}\n\nconst hintMessagePeekHeight = (msg: ITestMessage) => {\n\tconst msgHeight = ITestMessage.isDiffable(msg)\n\t\t? Math.max(\n\t\t\t\thintPeekStrHeight(msg.actual),\n\t\t\t\thintPeekStrHeight(msg.expected),\n\t\t\t)\n\t\t: hintPeekStrHeight(\n\t\t\t\ttypeof msg.message === \"string\"\n\t\t\t\t\t? msg.message\n\t\t\t\t\t: msg.message.value,\n\t\t\t);\n\n\t// add 8ish lines for the size of the title and decorations in the peek.\n\treturn msgHeight + 8;\n};\n\nconst firstLine = (str: string) => {\n\tconst index = str.indexOf(\"\\n\");\n\treturn index === -1 ? str : str.slice(0, index);\n};\n\nconst hintPeekStrHeight = (str: string) => Math.min(count(str, \"\\n\"), 24);\n\nfunction getOuterEditorFromDiffEditor(\n\tcodeEditorService: ICodeEditorService,\n): ICodeEditor | null {\n\tconst diffEditors = codeEditorService.listDiffEditors();\n\n\tfor (const diffEditor of diffEditors) {\n\t\tif (\n\t\t\tdiffEditor.hasTextFocus() &&\n\t\t\tdiffEditor instanceof EmbeddedDiffEditorWidget\n\t\t) {\n\t\t\treturn diffEditor.getParentEditor();\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport class CloseTestPeek extends EditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"editor.closeTestPeek\",\n\t\t\ttitle: localize2(\"close\", \"Close\"),\n\t\t\ticon: Codicon.close,\n\t\t\tprecondition: ContextKeyExpr.or(\n\t\t\t\tTestingContextKeys.isInPeek,\n\t\t\t\tTestingContextKeys.isPeekVisible,\n\t\t\t),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib - 101,\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\twhen: ContextKeyExpr.not(\"config.editor.stablePeek\"),\n\t\t\t},\n\t\t});\n\t}\n\n\trunEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tconst parent = getPeekedEditorFromFocus(\n\t\t\taccessor.get(ICodeEditorService),\n\t\t);\n\t\tTestingOutputPeekController.get(parent ?? editor)?.removePeek();\n\t}\n}\n\nconst navWhen = ContextKeyExpr.and(\n\tEditorContextKeys.focus,\n\tTestingContextKeys.isPeekVisible,\n);\n\n/**\n * Gets the appropriate editor for peeking based on the currently focused editor.\n */\nconst getPeekedEditorFromFocus = (codeEditorService: ICodeEditorService) => {\n\tconst editor =\n\t\tcodeEditorService.getFocusedCodeEditor() ||\n\t\tcodeEditorService.getActiveCodeEditor();\n\treturn editor && getPeekedEditor(codeEditorService, editor);\n};\n\n/**\n * Gets the editor where the peek may be shown, bubbling upwards if the given\n * editor is embedded (i.e. inside a peek already).\n */\nconst getPeekedEditor = (\n\tcodeEditorService: ICodeEditorService,\n\teditor: ICodeEditor,\n) => {\n\tif (TestingOutputPeekController.get(editor)?.subject) {\n\t\treturn editor;\n\t}\n\n\tif (editor instanceof EmbeddedCodeEditorWidget) {\n\t\treturn editor.getParentEditor();\n\t}\n\n\tconst outer = getOuterEditorFromDiffEditor(codeEditorService);\n\tif (outer) {\n\t\treturn outer;\n\t}\n\n\treturn editor;\n};\n\nexport class GoToNextMessageAction extends Action2 {\n\tpublic static readonly ID = \"testing.goToNextMessage\";\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: GoToNextMessageAction.ID,\n\t\t\tf1: true,\n\t\t\ttitle: localize2(\n\t\t\t\t\"testing.goToNextMessage\",\n\t\t\t\t\"Go to Next Test Failure\",\n\t\t\t),\n\t\t\tmetadata: {\n\t\t\t\tdescription: localize2(\n\t\t\t\t\t\"testing.goToNextMessage.description\",\n\t\t\t\t\t\"Shows the next failure message in your file\",\n\t\t\t\t),\n\t\t\t},\n\t\t\ticon: Codicon.arrowDown,\n\t\t\tcategory: Categories.Test,\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.F8,\n\t\t\t\tweight: KeybindingWeight.EditorContrib + 1,\n\t\t\t\twhen: navWhen,\n\t\t\t},\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.TestPeekTitle,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\torder: 2,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\twhen: navWhen,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\tpublic override run(accessor: ServicesAccessor) {\n\t\tconst editor = getPeekedEditorFromFocus(\n\t\t\taccessor.get(ICodeEditorService),\n\t\t);\n\t\tif (editor) {\n\t\t\tTestingOutputPeekController.get(editor)?.next();\n\t\t}\n\t}\n}\n\nexport class GoToPreviousMessageAction extends Action2 {\n\tpublic static readonly ID = \"testing.goToPreviousMessage\";\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: GoToPreviousMessageAction.ID,\n\t\t\tf1: true,\n\t\t\ttitle: localize2(\n\t\t\t\t\"testing.goToPreviousMessage\",\n\t\t\t\t\"Go to Previous Test Failure\",\n\t\t\t),\n\t\t\tmetadata: {\n\t\t\t\tdescription: localize2(\n\t\t\t\t\t\"testing.goToPreviousMessage.description\",\n\t\t\t\t\t\"Shows the previous failure message in your file\",\n\t\t\t\t),\n\t\t\t},\n\t\t\ticon: Codicon.arrowUp,\n\t\t\tcategory: Categories.Test,\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.F8,\n\t\t\t\tweight: KeybindingWeight.EditorContrib + 1,\n\t\t\t\twhen: navWhen,\n\t\t\t},\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.TestPeekTitle,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\torder: 1,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\twhen: navWhen,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\tpublic override run(accessor: ServicesAccessor) {\n\t\tconst editor = getPeekedEditorFromFocus(\n\t\t\taccessor.get(ICodeEditorService),\n\t\t);\n\t\tif (editor) {\n\t\t\tTestingOutputPeekController.get(editor)?.previous();\n\t\t}\n\t}\n}\n\nexport class CollapsePeekStack extends Action2 {\n\tpublic static readonly ID = \"testing.collapsePeekStack\";\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CollapsePeekStack.ID,\n\t\t\ttitle: localize2(\n\t\t\t\t\"testing.collapsePeekStack\",\n\t\t\t\t\"Collapse Stack Frames\",\n\t\t\t),\n\t\t\ticon: Codicon.collapseAll,\n\t\t\tcategory: Categories.Test,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.TestPeekTitle,\n\t\t\t\t\twhen: TestingContextKeys.peekHasStack,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\torder: 4,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\tpublic override run(accessor: ServicesAccessor) {\n\t\tconst editor = getPeekedEditorFromFocus(\n\t\t\taccessor.get(ICodeEditorService),\n\t\t);\n\t\tif (editor) {\n\t\t\tTestingOutputPeekController.get(editor)?.collapseStack();\n\t\t}\n\t}\n}\n\nexport class OpenMessageInEditorAction extends Action2 {\n\tpublic static readonly ID = \"testing.openMessageInEditor\";\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenMessageInEditorAction.ID,\n\t\t\tf1: false,\n\t\t\ttitle: localize2(\"testing.openMessageInEditor\", \"Open in Editor\"),\n\t\t\ticon: Codicon.goToFile,\n\t\t\tcategory: Categories.Test,\n\t\t\tmenu: [{ id: MenuId.TestPeekTitle }],\n\t\t});\n\t}\n\n\tpublic override run(accessor: ServicesAccessor) {\n\t\taccessor.get(ITestingPeekOpener).openCurrentInEditor();\n\t}\n}\n\nexport class ToggleTestingPeekHistory extends Action2 {\n\tpublic static readonly ID = \"testing.toggleTestingPeekHistory\";\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleTestingPeekHistory.ID,\n\t\t\tf1: true,\n\t\t\ttitle: localize2(\n\t\t\t\t\"testing.toggleTestingPeekHistory\",\n\t\t\t\t\"Toggle Test History in Peek\",\n\t\t\t),\n\t\t\tmetadata: {\n\t\t\t\tdescription: localize2(\n\t\t\t\t\t\"testing.toggleTestingPeekHistory.description\",\n\t\t\t\t\t\"Shows or hides the history of test runs in the peek view\",\n\t\t\t\t),\n\t\t\t},\n\t\t\ticon: Codicon.history,\n\t\t\tcategory: Categories.Test,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.TestPeekTitle,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\torder: 3,\n\t\t\t\t},\n\t\t\t],\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.KeyH,\n\t\t\t\twhen: TestingContextKeys.isPeekVisible.isEqualTo(true),\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic override run(accessor: ServicesAccessor) {\n\t\tconst opener = accessor.get(ITestingPeekOpener);\n\t\topener.historyVisible.value = !opener.historyVisible.value;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["test"]
}
