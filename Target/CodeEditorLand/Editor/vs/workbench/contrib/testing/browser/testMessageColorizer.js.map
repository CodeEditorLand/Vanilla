{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/testing/browser/testMessageColorizer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { renderStringAsPlaintext } from \"../../../../base/browser/markdownRenderer.js\";\nimport type { IMarkdownString } from \"../../../../base/common/htmlContent.js\";\nimport {\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport {\n\tGraphemeIterator,\n\tforAnsiStringParts,\n\tremoveAnsiEscapeCodes,\n} from \"../../../../base/common/strings.js\";\nimport \"./media/testMessageColorizer.css\";\nimport type { CodeEditorWidget } from \"../../../../editor/browser/widget/codeEditor/codeEditorWidget.js\";\nimport { Position } from \"../../../../editor/common/core/position.js\";\nimport { Range } from \"../../../../editor/common/core/range.js\";\n\nconst colorAttrRe = /^\\x1b\\[([0-9]+)m$/;\n\nenum Classes {\n\tPrefix = \"tstm-ansidec-\",\n\tForegroundPrefix = Classes.Prefix + \"fg\",\n\tBackgroundPrefix = Classes.Prefix + \"bg\",\n\tBold = Classes.Prefix + \"1\",\n\tFaint = Classes.Prefix + \"2\",\n\tItalic = Classes.Prefix + \"3\",\n\tUnderline = Classes.Prefix + \"4\",\n}\n\nexport const renderTestMessageAsText = (tm: string | IMarkdownString) =>\n\ttypeof tm === \"string\"\n\t\t? removeAnsiEscapeCodes(tm)\n\t\t: renderStringAsPlaintext(tm);\n\n/**\n * Applies decorations based on ANSI styles from the test message in the editor.\n * ANSI sequences are stripped from the text displayed in editor, and this\n * re-applies their colorization.\n *\n * This uses decorations rather than language features because the string\n * rendered in the editor lacks the ANSI codes needed to actually apply the\n * colorization.\n *\n * Note: does not support TrueColor.\n */\nexport const colorizeTestMessageInEditor = (\n\tmessage: string,\n\teditor: CodeEditorWidget,\n): IDisposable => {\n\tconst decos: string[] = [];\n\n\teditor.changeDecorations((changeAccessor) => {\n\t\tlet start = new Position(1, 1);\n\t\tlet cls: string[] = [];\n\t\tfor (const part of forAnsiStringParts(message)) {\n\t\t\tif (part.isCode) {\n\t\t\t\tconst colorAttr = colorAttrRe.exec(part.str)?.[1];\n\t\t\t\tif (!colorAttr) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst n = Number(colorAttr);\n\t\t\t\tif (n === 0) {\n\t\t\t\t\tcls.length = 0;\n\t\t\t\t} else if (n === 22) {\n\t\t\t\t\tcls = cls.filter(\n\t\t\t\t\t\t(c) => c !== Classes.Bold && c !== Classes.Italic,\n\t\t\t\t\t);\n\t\t\t\t} else if (n === 23) {\n\t\t\t\t\tcls = cls.filter((c) => c !== Classes.Italic);\n\t\t\t\t} else if (n === 24) {\n\t\t\t\t\tcls = cls.filter((c) => c !== Classes.Underline);\n\t\t\t\t} else if ((n >= 30 && n <= 39) || (n >= 90 && n <= 99)) {\n\t\t\t\t\tcls = cls.filter(\n\t\t\t\t\t\t(c) => !c.startsWith(Classes.ForegroundPrefix),\n\t\t\t\t\t);\n\t\t\t\t\tcls.push(Classes.ForegroundPrefix + colorAttr);\n\t\t\t\t} else if ((n >= 40 && n <= 49) || (n >= 100 && n <= 109)) {\n\t\t\t\t\tcls = cls.filter(\n\t\t\t\t\t\t(c) => !c.startsWith(Classes.BackgroundPrefix),\n\t\t\t\t\t);\n\t\t\t\t\tcls.push(Classes.BackgroundPrefix + colorAttr);\n\t\t\t\t} else {\n\t\t\t\t\tcls.push(Classes.Prefix + colorAttr);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet line = start.lineNumber;\n\t\t\t\tlet col = start.column;\n\n\t\t\t\tconst graphemes = new GraphemeIterator(part.str);\n\t\t\t\tfor (\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\t!graphemes.eol();\n\t\t\t\t\ti += graphemes.nextGraphemeLength()\n\t\t\t\t) {\n\t\t\t\t\tif (part.str[i] === \"\\n\") {\n\t\t\t\t\t\tline++;\n\t\t\t\t\t\tcol = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcol++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst end = new Position(line, col);\n\t\t\t\tif (cls.length) {\n\t\t\t\t\tdecos.push(\n\t\t\t\t\t\tchangeAccessor.addDecoration(\n\t\t\t\t\t\t\tRange.fromPositions(start, end),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tinlineClassName: cls.join(\" \"),\n\t\t\t\t\t\t\t\tdescription: \"test-message-colorized\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tstart = end;\n\t\t\t}\n\t\t}\n\t});\n\n\treturn toDisposable(() => editor.removeDecorations(decos));\n};\n"],
  "mappings": ";;AAKA,SAAS,+BAA+B;AAExC;AAAA,EAEC;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,OAAO;AAEP,SAAS,gBAAgB;AACzB,SAAS,aAAa;AAEtB,MAAM,cAAc;AAEpB,IAAK,UAAL,kBAAKA,aAAL;AACC,EAAAA,SAAA,YAAS;AACT,EAAAA,SAAA,sBAAmB;AACnB,EAAAA,SAAA,sBAAmB;AACnB,EAAAA,SAAA,UAAO;AACP,EAAAA,SAAA,WAAQ;AACR,EAAAA,SAAA,YAAS;AACT,EAAAA,SAAA,eAAY;AAPR,SAAAA;AAAA,GAAA;AAUE,MAAM,0BAA0B,wBAAC,OACvC,OAAO,OAAO,WACX,sBAAsB,EAAE,IACxB,wBAAwB,EAAE,GAHS;AAgBhC,MAAM,8BAA8B,wBAC1C,SACA,WACiB;AACjB,QAAM,QAAkB,CAAC;AAEzB,SAAO,kBAAkB,CAAC,mBAAmB;AAC5C,QAAI,QAAQ,IAAI,SAAS,GAAG,CAAC;AAC7B,QAAI,MAAgB,CAAC;AACrB,eAAW,QAAQ,mBAAmB,OAAO,GAAG;AAC/C,UAAI,KAAK,QAAQ;AAChB,cAAM,YAAY,YAAY,KAAK,KAAK,GAAG,IAAI,CAAC;AAChD,YAAI,CAAC,WAAW;AACf;AAAA,QACD;AAEA,cAAM,IAAI,OAAO,SAAS;AAC1B,YAAI,MAAM,GAAG;AACZ,cAAI,SAAS;AAAA,QACd,WAAW,MAAM,IAAI;AACpB,gBAAM,IAAI;AAAA,YACT,CAAC,MAAM,MAAM,+BAAgB,MAAM;AAAA,UACpC;AAAA,QACD,WAAW,MAAM,IAAI;AACpB,gBAAM,IAAI,OAAO,CAAC,MAAM,MAAM,6BAAc;AAAA,QAC7C,WAAW,MAAM,IAAI;AACpB,gBAAM,IAAI,OAAO,CAAC,MAAM,MAAM,gCAAiB;AAAA,QAChD,WAAY,KAAK,MAAM,KAAK,MAAQ,KAAK,MAAM,KAAK,IAAK;AACxD,gBAAM,IAAI;AAAA,YACT,CAAC,MAAM,CAAC,EAAE,WAAW,wCAAwB;AAAA,UAC9C;AACA,cAAI,KAAK,2CAA2B,SAAS;AAAA,QAC9C,WAAY,KAAK,MAAM,KAAK,MAAQ,KAAK,OAAO,KAAK,KAAM;AAC1D,gBAAM,IAAI;AAAA,YACT,CAAC,MAAM,CAAC,EAAE,WAAW,wCAAwB;AAAA,UAC9C;AACA,cAAI,KAAK,2CAA2B,SAAS;AAAA,QAC9C,OAAO;AACN,cAAI,KAAK,+BAAiB,SAAS;AAAA,QACpC;AAAA,MACD,OAAO;AACN,YAAI,OAAO,MAAM;AACjB,YAAI,MAAM,MAAM;AAEhB,cAAM,YAAY,IAAI,iBAAiB,KAAK,GAAG;AAC/C,iBACK,IAAI,GACR,CAAC,UAAU,IAAI,GACf,KAAK,UAAU,mBAAmB,GACjC;AACD,cAAI,KAAK,IAAI,CAAC,MAAM,MAAM;AACzB;AACA,kBAAM;AAAA,UACP,OAAO;AACN;AAAA,UACD;AAAA,QACD;AAEA,cAAM,MAAM,IAAI,SAAS,MAAM,GAAG;AAClC,YAAI,IAAI,QAAQ;AACf,gBAAM;AAAA,YACL,eAAe;AAAA,cACd,MAAM,cAAc,OAAO,GAAG;AAAA,cAC9B;AAAA,gBACC,iBAAiB,IAAI,KAAK,GAAG;AAAA,gBAC7B,aAAa;AAAA,cACd;AAAA,YACD;AAAA,UACD;AAAA,QACD;AACA,gBAAQ;AAAA,MACT;AAAA,IACD;AAAA,EACD,CAAC;AAED,SAAO,aAAa,MAAM,OAAO,kBAAkB,KAAK,CAAC;AAC1D,GA5E2C;",
  "names": ["Classes"]
}
