var l=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var s=(a,r,i,t)=>{for(var e=t>1?void 0:t?p(r,i):r,o=a.length-1,m;o>=0;o--)(m=a[o])&&(e=(t?m(r,i,e):m(e))||e);return t&&e&&l(r,i,e),e},c=(a,r)=>(i,t)=>r(i,t,a);import{Emitter as d}from"../../../../../../vs/base/common/event.js";import{Disposable as g}from"../../../../../../vs/base/common/lifecycle.js";import"../../../../../../vs/editor/browser/editorBrowser.js";import{IInstantiationService as h}from"../../../../../../vs/platform/instantiation/common/instantiation.js";import{CallStackFrame as u,CallStackWidget as F}from"../../../../../../vs/workbench/contrib/debug/browser/callStackWidget.js";import"../../../../../../vs/workbench/contrib/testing/common/testTypes.js";let n=class extends g{constructor(i,t,e){super();this.container=i;this.widget=this._register(e.createInstance(F,i,t))}widget;changeStackFrameEmitter=this._register(new d);onDidChangeStackFrame=this.changeStackFrameEmitter.event;update(i,t){this.widget.setFrames([i,...t.map(e=>new u(e.label,e.uri,e.position?.lineNumber,e.position?.column))])}layout(i,t){this.widget.layout(i??this.container.clientHeight,t)}};n=s([c(2,h)],n);export{n as TestResultStackWidget};
