var v=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var S=(s,a,e,t)=>{for(var i=t>1?void 0:t?w(a,e):a,r=s.length-1,n;r>=0;r--)(n=s[r])&&(i=(t?n(a,e,i):n(i))||i);return t&&i&&v(a,e,i),i},T=(s,a)=>(e,t)=>a(e,t,s);import{Emitter as x}from"../../../../../base/common/event.js";import{Iterable as l}from"../../../../../base/common/iterator.js";import{Disposable as E}from"../../../../../base/common/lifecycle.js";import{refreshComputedState as h}from"../../common/getComputedState.js";import{TestId as D}from"../../common/testId.js";import{TestResultItemChangeReason as y}from"../../common/testResult.js";import{ITestResultService as P}from"../../common/testResultService.js";import{ITestService as R}from"../../common/testService.js";import{TestDiffOpType as g,TestItemExpandState as b,TestResultState as c,applyTestItemUpdate as z}from"../../common/testTypes.js";import{TestItemTreeElement as C,TestTreeErrorMessage as U,getChildrenForParent as O,testIdentityProvider as k}from"./index.js";import{isCollapsedInSerializedTestTree as A}from"./testingViewState.js";const u={getOwnState:s=>s instanceof C?s.ownState:c.Unset,getCurrentComputedState:s=>s.state,setComputedState:(s,a)=>s.state=a,getCurrentComputedDuration:s=>s.duration,getOwnDuration:s=>s instanceof C?s.ownDuration:void 0,setComputedDuration:(s,a)=>s.duration=a,getChildren:s=>l.filter(s.children.values(),a=>a instanceof p),*getParents(s){for(let a=s.parent;a;a=a.parent)yield a}};class p extends C{constructor(e,t,i){super({...e,item:{...e.item}},t);this.addedOrRemoved=i;this.updateErrorVisibility()}ownState=c.Unset;ownDuration;get description(){return this.test.item.description}errorChild;update(e){z(this.test,e),this.updateErrorVisibility(e),this.fireChange()}fireChange(){this.changeEmitter.fire()}updateErrorVisibility(e){this.errorChild&&(!this.test.item.error||e?.item?.error)&&(this.addedOrRemoved(this),this.children.delete(this.errorChild),this.errorChild=void 0),this.test.item.error&&!this.errorChild&&(this.errorChild=new U(this.test.item.error,this),this.children.add(this.errorChild),this.addedOrRemoved(this))}}let f=class extends E{constructor(e,t,i){super();this.lastState=e;this.testService=t;this.results=i;this._register(t.onDidProcessDiff(r=>this.applyDiff(r))),this._register(i.onResultsChanged(r=>{if("removed"in r)for(const n of[...this.items.values()].sort((o,d)=>d.depth-o.depth)){const o=this.results.getStateById(n.test.item.extId)?.[1];n.ownDuration=o?.ownDuration,h(u,n,o?.ownComputedState??c.Unset).forEach(d=>d.fireChange())}})),this._register(i.onTestChanged(r=>{if(r.reason===y.NewMessage)return;let n=r.item;if(n.ownComputedState===c.Unset||r.result!==i.results[0]){const m=i.getStateById(n.item.extId);m&&(n=m[1])}const o=this.items.get(n.item.extId);if(!o)return;const d=r.reason===y.OwnStateChange&&r.previousOwnDuration!==n.ownDuration,I=o.children.size?void 0:n.computedState;o.retired=!!n.retired,o.ownState=n.ownComputedState,o.ownDuration=n.ownDuration,o.fireChange(),h(u,o,I,d).forEach(m=>m.fireChange())}));for(const r of t.collection.all)this.storeItem(this.createItem(r))}updateEmitter=new x;changedParents=new Set;resortedParents=new Set;items=new Map;get rootsWithChildren(){const e=l.map(this.testService.collection.rootItems,t=>this.items.get(t.item.extId));return l.filter(e,t=>!!t?.children.size)}onUpdate=this.updateEmitter.event;getElementByTestId(e){return this.items.get(e)}applyDiff(e){for(const t of e)switch(t.op){case g.Add:{const i=this.createItem(t.item);this.storeItem(i);break}case g.Update:{const i=t.item,r=this.items.get(i.extId);if(!r)break;const n=r.test.expand===b.NotExpandable&&i.expand;r.update(i),n?this.changedParents.add(r.parent):this.resortedParents.add(r.parent);break}case g.Remove:{const i=this.items.get(t.itemId);if(!i)break;const r=i.parent,n=i.depth===1&&(r?.children.size===1||!l.some(this.rootsWithChildren,(d,I)=>I===1));this.changedParents.add(n?null:r);const o=[[i]];for(;o.length;)for(const d of o.pop())d instanceof p&&o.push(this.unstoreItem(d));r instanceof p&&h(u,r,void 0,!!r.duration).forEach(d=>d.fireChange())}}e.length!==0&&this.updateEmitter.fire()}applyTo(e){for(const t of this.changedParents)(!t||e.hasElement(t))&&e.setChildren(t,O(this.lastState,this.rootsWithChildren,t),{diffIdentityProvider:k});for(const t of this.resortedParents)(!t||e.hasElement(t))&&e.resort(t,!1);this.changedParents.clear(),this.resortedParents.clear()}expandElement(e,t){e instanceof p&&e.test.expand!==b.NotExpandable&&this.testService.collection.expand(e.test.item.extId,t)}createItem(e){const t=D.parentId(e.item.extId),i=t?this.items.get(t):null;return new p(e,i,r=>this.changedParents.add(r))}unstoreItem(e){return e.parent?.children.delete(e),this.items.delete(e.test.item.extId),e.children}storeItem(e){e.parent?.children.add(e),this.items.set(e.test.item.extId,e);const i=e.parent?.children.size===1?e.parent.parent:e.parent;this.changedParents.add(i),i?.depth===0&&this.changedParents.add(null),(e.depth===0||A(this.lastState,e.test.item.extId)===!1)&&this.expandElement(e,0);const r=this.results.getStateById(e.test.item.extId)?.[1];r&&(e.retired=!!r.retired,e.ownState=r.computedState,e.ownDuration=r.ownDuration,h(u,e,void 0,!!e.ownDuration).forEach(n=>n.fireChange()))}};f=S([T(1,R),T(2,P)],f);export{f as TreeProjection};
