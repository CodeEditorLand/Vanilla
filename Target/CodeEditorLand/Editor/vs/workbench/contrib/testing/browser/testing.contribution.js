import{EditorContributionInstantiation as I,registerEditorContribution as v}from"../../../../editor/browser/editorExtensions.js";import{localize as w,localize2 as g}from"../../../../nls.js";import{registerAction2 as a}from"../../../../platform/actions/common/actions.js";import{CommandsRegistry as p,ICommandService as O}from"../../../../platform/commands/common/commands.js";import{Extensions as N}from"../../../../platform/configuration/common/configurationRegistry.js";import{ContextKeyExpr as M}from"../../../../platform/contextkey/common/contextkey.js";import{IFileService as B}from"../../../../platform/files/common/files.js";import{SyncDescriptor as d}from"../../../../platform/instantiation/common/descriptors.js";import{InstantiationType as o,registerSingleton as n}from"../../../../platform/instantiation/common/extensions.js";import{IOpenerService as L}from"../../../../platform/opener/common/opener.js";import{IProgressService as _}from"../../../../platform/progress/common/progress.js";import{Registry as m}from"../../../../platform/registry/common/platform.js";import{ViewPaneContainer as z}from"../../../browser/parts/views/viewPaneContainer.js";import{Extensions as R}from"../../../common/contributions.js";import{Extensions as V,ViewContainerLocation as x}from"../../../common/views.js";import{LifecyclePhase as S}from"../../../services/lifecycle/common/lifecycle.js";import{IViewsService as $}from"../../../services/views/common/viewsService.js";import{REVEAL_IN_EXPLORER_COMMAND_ID as j}from"../../files/browser/fileConstants.js";import{testingConfiguration as G}from"../common/configuration.js";import{TestCommandId as K,Testing as r}from"../common/constants.js";import{ITestCoverageService as q,TestCoverageService as H}from"../common/testCoverageService.js";import{ITestExplorerFilterState as h,TestExplorerFilterState as U}from"../common/testExplorerFilterState.js";import{TestId as X,TestPosition as J}from"../common/testId.js";import{ITestProfileService as Q,TestProfileService as Y}from"../common/testProfileService.js";import{ITestResultService as D,TestResultService as Z}from"../common/testResultService.js";import{ITestResultStorage as ee,TestResultStorage as te}from"../common/testResultStorage.js";import{ITestService as u}from"../common/testService.js";import{TestService as re}from"../common/testServiceImpl.js";import{TestingContentProvider as ie}from"../common/testingContentProvider.js";import{TestingContextKeys as E}from"../common/testingContextKeys.js";import{ITestingContinuousRunService as oe,TestingContinuousRunService as ne}from"../common/testingContinuousRunService.js";import{ITestingDecorationsService as A}from"../common/testingDecorations.js";import{ITestingPeekOpener as P}from"../common/testingPeekOpener.js";import{CodeCoverageDecorations as se}from"./codeCoverageDecorations.js";import{testingResultsIcon as W,testingViewIcon as b}from"./icons.js";import{TestCoverageView as ae}from"./testCoverageView.js";import{allTestActions as me,discoverAndRunTests as ce}from"./testExplorerActions.js";import{TestingDecorationService as le,TestingDecorations as ge}from"./testingDecorations.js";import{TestingExplorerView as pe}from"./testingExplorerView.js";import{CloseTestPeek as de,CollapsePeekStack as ue,GoToNextMessageAction as fe,GoToPreviousMessageAction as Te,OpenMessageInEditorAction as Ce,TestResultsView as ye,TestingOutputPeekController as Ie,TestingPeekOpener as F,ToggleTestingPeekHistory as ve}from"./testingOutputPeek.js";import{TestingProgressTrigger as we}from"./testingProgressUiService.js";import{TestingViewPaneContainer as Re}from"./testingViewPaneContainer.js";import"./testingConfigurationUi.js";n(u,re,o.Delayed),n(ee,te,o.Delayed),n(Q,Y,o.Delayed),n(q,H,o.Delayed),n(oe,ne,o.Delayed),n(D,Z,o.Delayed),n(h,U,o.Delayed),n(P,F,o.Delayed),n(A,le,o.Delayed);const Ve=m.as(V.ViewContainersRegistry).registerViewContainer({id:r.ViewletId,title:g("test","Testing"),ctorDescriptor:new d(Re),icon:b,alwaysUseContainerInfo:!0,order:6,openCommandActionDescriptor:{id:r.ViewletId,mnemonicTitle:w({key:"miViewTesting",comment:["&& denotes a mnemonic"]},"T&&esting"),order:4},hideIfEmpty:!0},x.Sidebar),Se=m.as(V.ViewContainersRegistry).registerViewContainer({id:r.ResultsPanelId,title:g("testResultsPanelName","Test Results"),icon:W,ctorDescriptor:new d(z,[r.ResultsPanelId,{mergeViewWithContainerWhenSingleView:!0}]),hideIfEmpty:!0,order:3},x.Panel,{doNotRegisterOpenCommand:!0}),C=m.as(V.ViewsRegistry);C.registerViews([{id:r.ResultsViewId,name:g("testResultsPanelName","Test Results"),containerIcon:W,canToggleVisibility:!1,canMoveView:!0,when:E.hasAnyResults.isEqualTo(!0),ctorDescriptor:new d(ye)}],Se),C.registerViewWelcomeContent(r.ExplorerViewId,{content:w("noTestProvidersRegistered","No tests have been found in this workspace yet.")}),C.registerViewWelcomeContent(r.ExplorerViewId,{content:"["+w("searchForAdditionalTestExtensions","Install Additional Test Extensions...")+`](command:${K.SearchForTestExtension})`,order:10}),C.registerViews([{id:r.ExplorerViewId,name:g("testExplorer","Test Explorer"),ctorDescriptor:new d(pe),canToggleVisibility:!0,canMoveView:!0,weight:80,order:-999,containerIcon:b,when:M.greater(E.providerCount.key,0)},{id:r.CoverageViewId,name:g("testCoverage","Test Coverage"),ctorDescriptor:new d(ae),canToggleVisibility:!0,canMoveView:!0,weight:80,order:-998,containerIcon:b,when:E.isTestCoverageOpen}],Ve),me.forEach(a),a(Ce),a(Te),a(fe),a(de),a(ve),a(ue),m.as(R.Workbench).registerWorkbenchContribution(ie,S.Restored),m.as(R.Workbench).registerWorkbenchContribution(F,S.Eventually),m.as(R.Workbench).registerWorkbenchContribution(we,S.Eventually),v(r.OutputPeekContributionId,Ie,I.AfterFirstRender),v(r.DecorationsContributionId,ge,I.AfterFirstRender),v(r.CoverageDecorationsContributionId,se,I.Eventually),p.registerCommand({id:"_revealTestInExplorer",handler:async(e,i,t)=>{e.get(h).reveal.value=typeof i=="string"?i:i.extId,e.get($).openView(r.ExplorerViewId,t)}}),p.registerCommand({id:"vscode.peekTestError",handler:async(e,i)=>{const t=e.get(D).getStateById(i);if(!t)return!1;const[s,c]=t,f=e.get(P);if(f.tryPeekFirstError(s,c))return!0;for(const T of s.tests)if(X.compare(c.item.extId,T.item.extId)===J.IsChild&&f.tryPeekFirstError(s,T))return!0;return!1}}),p.registerCommand({id:"vscode.revealTest",handler:async(e,i)=>{const t=e.get(u).collection.getNodeById(i);if(!t)return;const s=e.get(O),c=e.get(B),f=e.get(L),{range:T,uri:l}=t.item;if(!l)return;const y=e.get(A).getDecoratedTestPosition(l,i)||T?.getStartPosition();e.get(h).reveal.value=i,e.get(P).closeAllPeeks();let k=!0;try{(await c.stat(l)).isFile||(k=!1)}catch{}if(!k){await s.executeCommand(j,l);return}await f.open(y?l.with({fragment:`L${y.lineNumber}:${y.column}`}):l)}}),p.registerCommand({id:"vscode.runTestsById",handler:async(e,i,...t)=>{const s=e.get(u);await ce(e.get(u).collection,e.get(_),t,c=>s.runTests({group:i,tests:c}))}}),p.registerCommand({id:"vscode.testing.getControllersWithTests",handler:async e=>[...e.get(u).collection.rootItems].filter(t=>t.children.size>0).map(t=>t.controllerId)}),m.as(N.Configuration).registerConfiguration(G);
