{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/testing/browser/testing.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tEditorContributionInstantiation,\n\tregisterEditorContribution,\n} from \"../../../../editor/browser/editorExtensions.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport { registerAction2 } from \"../../../../platform/actions/common/actions.js\";\nimport {\n\tCommandsRegistry,\n\tICommandService,\n} from \"../../../../platform/commands/common/commands.js\";\nimport {\n\tExtensions as ConfigurationExtensions,\n\ttype IConfigurationRegistry,\n} from \"../../../../platform/configuration/common/configurationRegistry.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport { SyncDescriptor } from \"../../../../platform/instantiation/common/descriptors.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport { IProgressService } from \"../../../../platform/progress/common/progress.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { ViewPaneContainer } from \"../../../browser/parts/views/viewPaneContainer.js\";\nimport {\n\ttype IWorkbenchContributionsRegistry,\n\tExtensions as WorkbenchExtensions,\n} from \"../../../common/contributions.js\";\nimport {\n\ttype IViewContainersRegistry,\n\ttype IViewsRegistry,\n\tExtensions as ViewContainerExtensions,\n\tViewContainerLocation,\n} from \"../../../common/views.js\";\nimport { LifecyclePhase } from \"../../../services/lifecycle/common/lifecycle.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport { REVEAL_IN_EXPLORER_COMMAND_ID } from \"../../files/browser/fileConstants.js\";\nimport { testingConfiguration } from \"../common/configuration.js\";\nimport { TestCommandId, Testing } from \"../common/constants.js\";\nimport {\n\tITestCoverageService,\n\tTestCoverageService,\n} from \"../common/testCoverageService.js\";\nimport {\n\tITestExplorerFilterState,\n\tTestExplorerFilterState,\n} from \"../common/testExplorerFilterState.js\";\nimport { TestId, TestPosition } from \"../common/testId.js\";\nimport {\n\tITestProfileService,\n\tTestProfileService,\n} from \"../common/testProfileService.js\";\nimport {\n\tITestResultService,\n\tTestResultService,\n} from \"../common/testResultService.js\";\nimport {\n\tITestResultStorage,\n\tTestResultStorage,\n} from \"../common/testResultStorage.js\";\nimport { ITestService } from \"../common/testService.js\";\nimport { TestService } from \"../common/testServiceImpl.js\";\nimport type { ITestItem, TestRunProfileBitset } from \"../common/testTypes.js\";\nimport { TestingContentProvider } from \"../common/testingContentProvider.js\";\nimport { TestingContextKeys } from \"../common/testingContextKeys.js\";\nimport {\n\tITestingContinuousRunService,\n\tTestingContinuousRunService,\n} from \"../common/testingContinuousRunService.js\";\nimport { ITestingDecorationsService } from \"../common/testingDecorations.js\";\nimport { ITestingPeekOpener } from \"../common/testingPeekOpener.js\";\nimport { CodeCoverageDecorations } from \"./codeCoverageDecorations.js\";\nimport { testingResultsIcon, testingViewIcon } from \"./icons.js\";\nimport { TestCoverageView } from \"./testCoverageView.js\";\nimport { allTestActions, discoverAndRunTests } from \"./testExplorerActions.js\";\nimport {\n\tTestingDecorationService,\n\tTestingDecorations,\n} from \"./testingDecorations.js\";\nimport { TestingExplorerView } from \"./testingExplorerView.js\";\nimport {\n\tCloseTestPeek,\n\tCollapsePeekStack,\n\tGoToNextMessageAction,\n\tGoToPreviousMessageAction,\n\tOpenMessageInEditorAction,\n\tTestResultsView,\n\tTestingOutputPeekController,\n\tTestingPeekOpener,\n\tToggleTestingPeekHistory,\n} from \"./testingOutputPeek.js\";\nimport { TestingProgressTrigger } from \"./testingProgressUiService.js\";\nimport { TestingViewPaneContainer } from \"./testingViewPaneContainer.js\";\nimport \"./testingConfigurationUi.js\";\n\nregisterSingleton(ITestService, TestService, InstantiationType.Delayed);\nregisterSingleton(\n\tITestResultStorage,\n\tTestResultStorage,\n\tInstantiationType.Delayed,\n);\nregisterSingleton(\n\tITestProfileService,\n\tTestProfileService,\n\tInstantiationType.Delayed,\n);\nregisterSingleton(\n\tITestCoverageService,\n\tTestCoverageService,\n\tInstantiationType.Delayed,\n);\nregisterSingleton(\n\tITestingContinuousRunService,\n\tTestingContinuousRunService,\n\tInstantiationType.Delayed,\n);\nregisterSingleton(\n\tITestResultService,\n\tTestResultService,\n\tInstantiationType.Delayed,\n);\nregisterSingleton(\n\tITestExplorerFilterState,\n\tTestExplorerFilterState,\n\tInstantiationType.Delayed,\n);\nregisterSingleton(\n\tITestingPeekOpener,\n\tTestingPeekOpener,\n\tInstantiationType.Delayed,\n);\nregisterSingleton(\n\tITestingDecorationsService,\n\tTestingDecorationService,\n\tInstantiationType.Delayed,\n);\n\nconst viewContainer = Registry.as<IViewContainersRegistry>(\n\tViewContainerExtensions.ViewContainersRegistry,\n).registerViewContainer(\n\t{\n\t\tid: Testing.ViewletId,\n\t\ttitle: localize2(\"test\", \"Testing\"),\n\t\tctorDescriptor: new SyncDescriptor(TestingViewPaneContainer),\n\t\ticon: testingViewIcon,\n\t\talwaysUseContainerInfo: true,\n\t\torder: 6,\n\t\topenCommandActionDescriptor: {\n\t\t\tid: Testing.ViewletId,\n\t\t\tmnemonicTitle: localize(\n\t\t\t\t{ key: \"miViewTesting\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\"T&&esting\",\n\t\t\t),\n\t\t\t// todo: coordinate with joh whether this is available\n\t\t\t// keybindings: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.US_SEMICOLON },\n\t\t\torder: 4,\n\t\t},\n\t\thideIfEmpty: true,\n\t},\n\tViewContainerLocation.Sidebar,\n);\n\nconst testResultsViewContainer = Registry.as<IViewContainersRegistry>(\n\tViewContainerExtensions.ViewContainersRegistry,\n).registerViewContainer(\n\t{\n\t\tid: Testing.ResultsPanelId,\n\t\ttitle: localize2(\"testResultsPanelName\", \"Test Results\"),\n\t\ticon: testingResultsIcon,\n\t\tctorDescriptor: new SyncDescriptor(ViewPaneContainer, [\n\t\t\tTesting.ResultsPanelId,\n\t\t\t{ mergeViewWithContainerWhenSingleView: true },\n\t\t]),\n\t\thideIfEmpty: true,\n\t\torder: 3,\n\t},\n\tViewContainerLocation.Panel,\n\t{ doNotRegisterOpenCommand: true },\n);\n\nconst viewsRegistry = Registry.as<IViewsRegistry>(\n\tViewContainerExtensions.ViewsRegistry,\n);\n\nviewsRegistry.registerViews(\n\t[\n\t\t{\n\t\t\tid: Testing.ResultsViewId,\n\t\t\tname: localize2(\"testResultsPanelName\", \"Test Results\"),\n\t\t\tcontainerIcon: testingResultsIcon,\n\t\t\tcanToggleVisibility: false,\n\t\t\tcanMoveView: true,\n\t\t\twhen: TestingContextKeys.hasAnyResults.isEqualTo(true),\n\t\t\tctorDescriptor: new SyncDescriptor(TestResultsView),\n\t\t},\n\t],\n\ttestResultsViewContainer,\n);\n\nviewsRegistry.registerViewWelcomeContent(Testing.ExplorerViewId, {\n\tcontent: localize(\n\t\t\"noTestProvidersRegistered\",\n\t\t\"No tests have been found in this workspace yet.\",\n\t),\n});\n\nviewsRegistry.registerViewWelcomeContent(Testing.ExplorerViewId, {\n\tcontent:\n\t\t\"[\" +\n\t\tlocalize(\n\t\t\t\"searchForAdditionalTestExtensions\",\n\t\t\t\"Install Additional Test Extensions...\",\n\t\t) +\n\t\t`](command:${TestCommandId.SearchForTestExtension})`,\n\torder: 10,\n});\n\nviewsRegistry.registerViews(\n\t[\n\t\t{\n\t\t\tid: Testing.ExplorerViewId,\n\t\t\tname: localize2(\"testExplorer\", \"Test Explorer\"),\n\t\t\tctorDescriptor: new SyncDescriptor(TestingExplorerView),\n\t\t\tcanToggleVisibility: true,\n\t\t\tcanMoveView: true,\n\t\t\tweight: 80,\n\t\t\torder: -999,\n\t\t\tcontainerIcon: testingViewIcon,\n\t\t\twhen: ContextKeyExpr.greater(\n\t\t\t\tTestingContextKeys.providerCount.key,\n\t\t\t\t0,\n\t\t\t),\n\t\t},\n\t\t{\n\t\t\tid: Testing.CoverageViewId,\n\t\t\tname: localize2(\"testCoverage\", \"Test Coverage\"),\n\t\t\tctorDescriptor: new SyncDescriptor(TestCoverageView),\n\t\t\tcanToggleVisibility: true,\n\t\t\tcanMoveView: true,\n\t\t\tweight: 80,\n\t\t\torder: -998,\n\t\t\tcontainerIcon: testingViewIcon,\n\t\t\twhen: TestingContextKeys.isTestCoverageOpen,\n\t\t},\n\t],\n\tviewContainer,\n);\n\nallTestActions.forEach(registerAction2);\nregisterAction2(OpenMessageInEditorAction);\nregisterAction2(GoToPreviousMessageAction);\nregisterAction2(GoToNextMessageAction);\nregisterAction2(CloseTestPeek);\nregisterAction2(ToggleTestingPeekHistory);\nregisterAction2(CollapsePeekStack);\n\nRegistry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n).registerWorkbenchContribution(\n\tTestingContentProvider,\n\tLifecyclePhase.Restored,\n);\nRegistry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n).registerWorkbenchContribution(TestingPeekOpener, LifecyclePhase.Eventually);\nRegistry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n).registerWorkbenchContribution(\n\tTestingProgressTrigger,\n\tLifecyclePhase.Eventually,\n);\n\nregisterEditorContribution(\n\tTesting.OutputPeekContributionId,\n\tTestingOutputPeekController,\n\tEditorContributionInstantiation.AfterFirstRender,\n);\nregisterEditorContribution(\n\tTesting.DecorationsContributionId,\n\tTestingDecorations,\n\tEditorContributionInstantiation.AfterFirstRender,\n);\nregisterEditorContribution(\n\tTesting.CoverageDecorationsContributionId,\n\tCodeCoverageDecorations,\n\tEditorContributionInstantiation.Eventually,\n);\n\nCommandsRegistry.registerCommand({\n\tid: \"_revealTestInExplorer\",\n\thandler: async (\n\t\taccessor: ServicesAccessor,\n\t\ttestId: string | ITestItem,\n\t\tfocus?: boolean,\n\t) => {\n\t\taccessor.get(ITestExplorerFilterState).reveal.value =\n\t\t\ttypeof testId === \"string\" ? testId : testId.extId;\n\t\taccessor.get(IViewsService).openView(Testing.ExplorerViewId, focus);\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: \"vscode.peekTestError\",\n\thandler: async (accessor: ServicesAccessor, extId: string) => {\n\t\tconst lookup = accessor.get(ITestResultService).getStateById(extId);\n\t\tif (!lookup) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst [result, ownState] = lookup;\n\t\tconst opener = accessor.get(ITestingPeekOpener);\n\t\tif (opener.tryPeekFirstError(result, ownState)) {\n\t\t\t// fast path\n\t\t\treturn true;\n\t\t}\n\n\t\tfor (const test of result.tests) {\n\t\t\tif (\n\t\t\t\tTestId.compare(ownState.item.extId, test.item.extId) ===\n\t\t\t\t\tTestPosition.IsChild &&\n\t\t\t\topener.tryPeekFirstError(result, test)\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: \"vscode.revealTest\",\n\thandler: async (accessor: ServicesAccessor, extId: string) => {\n\t\tconst test = accessor.get(ITestService).collection.getNodeById(extId);\n\t\tif (!test) {\n\t\t\treturn;\n\t\t}\n\t\tconst commandService = accessor.get(ICommandService);\n\t\tconst fileService = accessor.get(IFileService);\n\t\tconst openerService = accessor.get(IOpenerService);\n\n\t\tconst { range, uri } = test.item;\n\t\tif (!uri) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If an editor has the file open, there are decorations. Try to adjust the\n\t\t// revealed range to those decorations (#133441).\n\t\tconst position =\n\t\t\taccessor\n\t\t\t\t.get(ITestingDecorationsService)\n\t\t\t\t.getDecoratedTestPosition(uri, extId) ||\n\t\t\trange?.getStartPosition();\n\n\t\taccessor.get(ITestExplorerFilterState).reveal.value = extId;\n\t\taccessor.get(ITestingPeekOpener).closeAllPeeks();\n\n\t\tlet isFile = true;\n\t\ttry {\n\t\t\tif (!(await fileService.stat(uri)).isFile) {\n\t\t\t\tisFile = false;\n\t\t\t}\n\t\t} catch {\n\t\t\t// ignored\n\t\t}\n\n\t\tif (!isFile) {\n\t\t\tawait commandService.executeCommand(\n\t\t\t\tREVEAL_IN_EXPLORER_COMMAND_ID,\n\t\t\t\turi,\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tawait openerService.open(\n\t\t\tposition\n\t\t\t\t? uri.with({\n\t\t\t\t\t\tfragment: `L${position.lineNumber}:${position.column}`,\n\t\t\t\t\t})\n\t\t\t\t: uri,\n\t\t);\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: \"vscode.runTestsById\",\n\thandler: async (\n\t\taccessor: ServicesAccessor,\n\t\tgroup: TestRunProfileBitset,\n\t\t...testIds: string[]\n\t) => {\n\t\tconst testService = accessor.get(ITestService);\n\t\tawait discoverAndRunTests(\n\t\t\taccessor.get(ITestService).collection,\n\t\t\taccessor.get(IProgressService),\n\t\t\ttestIds,\n\t\t\t(tests) => testService.runTests({ group, tests }),\n\t\t);\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: \"vscode.testing.getControllersWithTests\",\n\thandler: async (accessor: ServicesAccessor) => {\n\t\tconst testService = accessor.get(ITestService);\n\t\treturn [...testService.collection.rootItems]\n\t\t\t.filter((r) => r.children.size > 0)\n\t\t\t.map((r) => r.controllerId);\n\t},\n});\n\nRegistry.as<IConfigurationRegistry>(\n\tConfigurationExtensions.Configuration,\n).registerConfiguration(testingConfiguration);\n"],
  "mappings": "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",
  "names": []
}
