{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/testing/browser/testResultsView/testMessageStack.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from '../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { ICodeEditor } from '../../../../../editor/browser/editorBrowser.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { AnyStackFrame, CallStackFrame, CallStackWidget } from '../../../debug/browser/callStackWidget.js';\nimport { ITestMessageStackFrame } from '../../common/testTypes.js';\n\nexport class TestResultStackWidget extends Disposable {\n\tprivate readonly widget: CallStackWidget;\n\tprivate readonly changeStackFrameEmitter = this._register(new Emitter<ITestMessageStackFrame>());\n\n\tpublic readonly onDidChangeStackFrame = this.changeStackFrameEmitter.event;\n\n\tconstructor(\n\t\tprivate readonly container: HTMLElement,\n\t\tcontainingEditor: ICodeEditor | undefined,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis.widget = this._register(instantiationService.createInstance(\n\t\t\tCallStackWidget,\n\t\t\tcontainer,\n\t\t\tcontainingEditor,\n\t\t));\n\t}\n\n\tpublic collapseAll() {\n\t\tthis.widget.collapseAll();\n\t}\n\n\tpublic update(messageFrame: AnyStackFrame, stack: ITestMessageStackFrame[]) {\n\t\tthis.widget.setFrames([messageFrame, ...stack.map(frame => new CallStackFrame(\n\t\t\tframe.label,\n\t\t\tframe.uri,\n\t\t\tframe.position?.lineNumber,\n\t\t\tframe.position?.column,\n\t\t))]);\n\t}\n\n\tpublic layout(height?: number, width?: number) {\n\t\tthis.widget.layout(height ?? this.container.clientHeight, width);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,eAAe;AACxB,SAAS,kBAAkB;AAC3B,SAAS,mBAAmB;AAC5B,SAAS,6BAA6B;AACtC,SAAS,eAAe,gBAAgB,uBAAuB;AAC/D,SAAS,8BAA8B;AAEhC,IAAM,wBAAN,cAAoC,WAAW;AAAA,EAMrD,YACkB,WACjB,kBACuB,sBACtB;AACD,UAAM;AAJW;AAMjB,SAAK,SAAS,KAAK,UAAU,qBAAqB;AAAA,MACjD;AAAA,MACA;AAAA,MACA;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EA9BD,OAYsD;AAAA;AAAA;AAAA,EACpC;AAAA,EACA,0BAA0B,KAAK,UAAU,IAAI,QAAgC,CAAC;AAAA,EAE/E,wBAAwB,KAAK,wBAAwB;AAAA,EAgB9D,cAAc;AACpB,SAAK,OAAO,YAAY;AAAA,EACzB;AAAA,EAEO,OAAO,cAA6B,OAAiC;AAC3E,SAAK,OAAO,UAAU,CAAC,cAAc,GAAG,MAAM,IAAI,WAAS,IAAI;AAAA,MAC9D,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM,UAAU;AAAA,MAChB,MAAM,UAAU;AAAA,IACjB,CAAC,CAAC,CAAC;AAAA,EACJ;AAAA,EAEO,OAAO,QAAiB,OAAgB;AAC9C,SAAK,OAAO,OAAO,UAAU,KAAK,UAAU,cAAc,KAAK;AAAA,EAChE;AACD;AApCa,wBAAN;AAAA,EASJ;AAAA,GATU;",
  "names": []
}
