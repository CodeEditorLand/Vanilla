{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/testing/browser/testResultsView/testMessageStack.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from \"../../../../../base/common/event.js\";\nimport { Disposable } from \"../../../../../base/common/lifecycle.js\";\nimport type { ICodeEditor } from \"../../../../../editor/browser/editorBrowser.js\";\nimport { IInstantiationService } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\ttype AnyStackFrame,\n\tCallStackFrame,\n\tCallStackWidget,\n} from \"../../../debug/browser/callStackWidget.js\";\nimport type { ITestMessageStackFrame } from \"../../common/testTypes.js\";\n\nexport class TestResultStackWidget extends Disposable {\n\tprivate readonly widget: CallStackWidget;\n\tprivate readonly changeStackFrameEmitter = this._register(\n\t\tnew Emitter<ITestMessageStackFrame>(),\n\t);\n\n\tpublic readonly onDidChangeStackFrame = this.changeStackFrameEmitter.event;\n\n\tconstructor(\n\t\tprivate readonly container: HTMLElement,\n\t\tcontainingEditor: ICodeEditor | undefined,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis.widget = this._register(\n\t\t\tinstantiationService.createInstance(\n\t\t\t\tCallStackWidget,\n\t\t\t\tcontainer,\n\t\t\t\tcontainingEditor,\n\t\t\t),\n\t\t);\n\t}\n\n\tpublic collapseAll() {\n\t\tthis.widget.collapseAll();\n\t}\n\n\tpublic update(\n\t\tmessageFrame: AnyStackFrame,\n\t\tstack: ITestMessageStackFrame[],\n\t) {\n\t\tthis.widget.setFrames([\n\t\t\tmessageFrame,\n\t\t\t...stack.map(\n\t\t\t\t(frame) =>\n\t\t\t\t\tnew CallStackFrame(\n\t\t\t\t\t\tframe.label,\n\t\t\t\t\t\tframe.uri,\n\t\t\t\t\t\tframe.position?.lineNumber,\n\t\t\t\t\t\tframe.position?.column,\n\t\t\t\t\t),\n\t\t\t),\n\t\t]);\n\t}\n\n\tpublic layout(height?: number, width?: number) {\n\t\tthis.widget.layout(height ?? this.container.clientHeight, width);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,eAAe;AACxB,SAAS,kBAAkB;AAE3B,SAAS,6BAA6B;AACtC;AAAA,EAEC;AAAA,EACA;AAAA,OACM;AAGA,IAAM,wBAAN,cAAoC,WAAW;AAAA,EAQrD,YACkB,WACjB,kBACuB,sBACtB;AACD,UAAM;AAJW;AAMjB,SAAK,SAAS,KAAK;AAAA,MAClB,qBAAqB;AAAA,QACpB;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAtCD,OAgBsD;AAAA;AAAA;AAAA,EACpC;AAAA,EACA,0BAA0B,KAAK;AAAA,IAC/C,IAAI,QAAgC;AAAA,EACrC;AAAA,EAEgB,wBAAwB,KAAK,wBAAwB;AAAA,EAkB9D,cAAc;AACpB,SAAK,OAAO,YAAY;AAAA,EACzB;AAAA,EAEO,OACN,cACA,OACC;AACD,SAAK,OAAO,UAAU;AAAA,MACrB;AAAA,MACA,GAAG,MAAM;AAAA,QACR,CAAC,UACA,IAAI;AAAA,UACH,MAAM;AAAA,UACN,MAAM;AAAA,UACN,MAAM,UAAU;AAAA,UAChB,MAAM,UAAU;AAAA,QACjB;AAAA,MACF;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEO,OAAO,QAAiB,OAAgB;AAC9C,SAAK,OAAO,OAAO,UAAU,KAAK,UAAU,cAAc,KAAK;AAAA,EAChE;AACD;AAjDa,wBAAN;AAAA,EAWJ;AAAA,GAXU;",
  "names": []
}
