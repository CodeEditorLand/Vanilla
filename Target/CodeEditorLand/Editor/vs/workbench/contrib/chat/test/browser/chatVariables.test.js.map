{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/test/browser/chatVariables.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { TestInstantiationService } from '../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { MockContextKeyService } from '../../../../../platform/keybinding/test/common/mockKeybindingService.js';\nimport { ILogService, NullLogService } from '../../../../../platform/log/common/log.js';\nimport { IStorageService } from '../../../../../platform/storage/common/storage.js';\nimport { ChatVariablesService } from '../../browser/chatVariables.js';\nimport { ChatAgentService, IChatAgentService } from '../../common/chatAgents.js';\nimport { ChatRequestParser } from '../../common/chatRequestParser.js';\nimport { IChatService } from '../../common/chatService.js';\nimport { IChatVariablesService } from '../../common/chatVariables.js';\nimport { ILanguageModelToolsService } from '../../common/languageModelToolsService.js';\nimport { MockChatWidgetService } from './mockChatWidget.js';\nimport { MockChatService } from '../common/mockChatService.js';\nimport { MockLanguageModelToolsService } from '../common/mockLanguageModelToolsService.js';\nimport { IExtensionService } from '../../../../services/extensions/common/extensions.js';\nimport { TestViewsService } from '../../../../test/browser/workbenchTestServices.js';\nimport { TestExtensionService, TestStorageService } from '../../../../test/common/workbenchTestServices.js';\n\nsuite('ChatVariables', function () {\n\n\tlet service: ChatVariablesService;\n\tlet instantiationService: TestInstantiationService;\n\tconst testDisposables = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(function () {\n\t\tservice = new ChatVariablesService(new MockChatWidgetService(), new TestViewsService(), new MockLanguageModelToolsService());\n\t\tinstantiationService = testDisposables.add(new TestInstantiationService());\n\t\tinstantiationService.stub(IStorageService, testDisposables.add(new TestStorageService()));\n\t\tinstantiationService.stub(ILogService, new NullLogService());\n\t\tinstantiationService.stub(IExtensionService, new TestExtensionService());\n\t\tinstantiationService.stub(IChatVariablesService, service);\n\t\tinstantiationService.stub(IChatService, new MockChatService());\n\t\tinstantiationService.stub(IContextKeyService, new MockContextKeyService());\n\t\tinstantiationService.stub(ILanguageModelToolsService, new MockLanguageModelToolsService());\n\t\tinstantiationService.stub(IChatAgentService, instantiationService.createInstance(ChatAgentService));\n\t});\n\n\ttest('ChatVariables - resolveVariables', async function () {\n\n\t\tconst v1 = service.registerVariable({ id: 'id', name: 'foo', description: 'bar' }, async () => 'farboo');\n\t\tconst v2 = service.registerVariable({ id: 'id', name: 'far', description: 'boo' }, async () => 'farboo');\n\n\t\tconst parser = instantiationService.createInstance(ChatRequestParser);\n\n\t\tconst resolveVariables = async (text: string) => {\n\t\t\tconst result = parser.parseChatRequest('1', text);\n\t\t\treturn await service.resolveVariables(result, undefined, null!, () => { }, CancellationToken.None);\n\t\t};\n\n\t\t{\n\t\t\tconst data = await resolveVariables('Hello #foo and#far');\n\t\t\tassert.strictEqual(data.variables.length, 1);\n\t\t\tassert.deepEqual(data.variables.map(v => v.name), ['foo']);\n\t\t}\n\t\t{\n\t\t\tconst data = await resolveVariables('#foo Hello');\n\t\t\tassert.strictEqual(data.variables.length, 1);\n\t\t\tassert.deepEqual(data.variables.map(v => v.name), ['foo']);\n\t\t}\n\t\t{\n\t\t\tconst data = await resolveVariables('Hello #foo');\n\t\t\tassert.strictEqual(data.variables.length, 1);\n\t\t\tassert.deepEqual(data.variables.map(v => v.name), ['foo']);\n\t\t}\n\t\t{\n\t\t\tconst data = await resolveVariables('Hello #foo?');\n\t\t\tassert.strictEqual(data.variables.length, 1);\n\t\t\tassert.deepEqual(data.variables.map(v => v.name), ['foo']);\n\t\t}\n\t\t{\n\t\t\tconst data = await resolveVariables('Hello #foo and#far #foo');\n\t\t\tassert.strictEqual(data.variables.length, 2);\n\t\t\tassert.deepEqual(data.variables.map(v => v.name), ['foo', 'foo']);\n\t\t}\n\t\t{\n\t\t\tconst data = await resolveVariables('Hello #foo and #far #foo');\n\t\t\tassert.strictEqual(data.variables.length, 3);\n\t\t\tassert.deepEqual(data.variables.map(v => v.name), ['foo', 'far', 'foo']);\n\t\t}\n\t\t{\n\t\t\tconst data = await resolveVariables('Hello #foo and #far #foo #unknown');\n\t\t\tassert.strictEqual(data.variables.length, 3);\n\t\t\tassert.deepEqual(data.variables.map(v => v.name), ['foo', 'far', 'foo']);\n\t\t}\n\n\t\tv1.dispose();\n\t\tv2.dispose();\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
