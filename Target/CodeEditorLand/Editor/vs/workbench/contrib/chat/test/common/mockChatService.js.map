{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/test/common/mockChatService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { Event } from '../../../../../base/common/event.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { ChatAgentLocation } from '../../common/chatAgents.js';\nimport { ChatModel, IChatModel, IChatRequestModel, IChatRequestVariableData, ISerializableChatData } from '../../common/chatModel.js';\nimport { IParsedChatRequest } from '../../common/chatParserTypes.js';\nimport { IChatCompleteResponse, IChatDetail, IChatProviderInfo, IChatSendRequestData, IChatSendRequestOptions, IChatService, IChatTransferredSessionData, IChatUserActionEvent } from '../../common/chatService.js';\n\nexport class MockChatService implements IChatService {\n\t_serviceBrand: undefined;\n\ttransferredSessionData: IChatTransferredSessionData | undefined;\n\n\tisEnabled(location: ChatAgentLocation): boolean {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\thasSessions(): boolean {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tgetProviderInfos(): IChatProviderInfo[] {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tstartSession(location: ChatAgentLocation, token: CancellationToken): ChatModel | undefined {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tgetSession(sessionId: string): IChatModel | undefined {\n\t\t// eslint-disable-next-line local/code-no-dangerous-type-assertions\n\t\treturn {} as IChatModel;\n\t}\n\tgetOrRestoreSession(sessionId: string): IChatModel | undefined {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tloadSessionFromContent(data: ISerializableChatData): IChatModel | undefined {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\t/**\n\t * Returns whether the request was accepted.\n\t */\n\tsendRequest(sessionId: string, message: string): Promise<IChatSendRequestData | undefined> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tresendRequest(request: IChatRequestModel, options?: IChatSendRequestOptions | undefined): Promise<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tadoptRequest(sessionId: string, request: IChatRequestModel): Promise<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tremoveRequest(sessionid: string, requestId: string): Promise<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tcancelCurrentRequestForSession(sessionId: string): void {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tclearSession(sessionId: string): void {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\taddCompleteRequest(sessionId: string, message: IParsedChatRequest | string, variableData: IChatRequestVariableData | undefined, attempt: number | undefined, response: IChatCompleteResponse): void {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tgetHistory(): IChatDetail[] {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tclearAllHistoryEntries(): void {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tremoveHistoryEntry(sessionId: string): void {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tonDidPerformUserAction: Event<IChatUserActionEvent> = undefined!;\n\tnotifyUserAction(event: IChatUserActionEvent): void {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tonDidDisposeSession: Event<{ sessionId: string; reason: 'initializationFailed' | 'cleared' }> = undefined!;\n\n\ttransferChatSession(transferredSessionData: IChatTransferredSessionData, toWorkspace: URI): void {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tsetChatSessionTitle(sessionId: string, title: string): void {\n\t\tthrow new Error('Method not implemented.');\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,yBAAyB;AAClC,SAAS,aAAa;AACtB,SAAS,WAAW;AACpB,SAAS,yBAAyB;AAClC,SAAS,WAAW,YAAY,mBAAmB,0BAA0B,6BAA6B;AAC1G,SAAS,0BAA0B;AACnC,SAAS,uBAAuB,aAAa,mBAAmB,sBAAsB,yBAAyB,cAAc,6BAA6B,4BAA4B;AAE/K,MAAM,gBAAwC;AAAA,EAbrD,OAaqD;AAAA;AAAA;AAAA,EACpD;AAAA,EACA;AAAA,EAEA,UAAU,UAAsC;AAC/C,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC1C;AAAA,EACA,cAAuB;AACtB,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC1C;AAAA,EACA,mBAAwC;AACvC,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC1C;AAAA,EACA,aAAa,UAA6B,OAAiD;AAC1F,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC1C;AAAA,EACA,WAAW,WAA2C;AAErD,WAAO,CAAC;AAAA,EACT;AAAA,EACA,oBAAoB,WAA2C;AAC9D,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC1C;AAAA,EACA,uBAAuB,MAAqD;AAC3E,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA,EAIA,YAAY,WAAmB,SAA4D;AAC1F,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC1C;AAAA,EACA,cAAc,SAA4B,SAA8D;AACvG,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC1C;AAAA,EACA,aAAa,WAAmB,SAA2C;AAC1E,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC1C;AAAA,EACA,cAAc,WAAmB,WAAkC;AAClE,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC1C;AAAA,EACA,+BAA+B,WAAyB;AACvD,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC1C;AAAA,EACA,aAAa,WAAyB;AACrC,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC1C;AAAA,EACA,mBAAmB,WAAmB,SAAsC,cAAoD,SAA6B,UAAuC;AACnM,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC1C;AAAA,EACA,aAA4B;AAC3B,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC1C;AAAA,EACA,yBAA+B;AAC9B,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC1C;AAAA,EACA,mBAAmB,WAAyB;AAC3C,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC1C;AAAA,EAEA,yBAAsD;AAAA,EACtD,iBAAiB,OAAmC;AACnD,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC1C;AAAA,EACA,sBAAgG;AAAA,EAEhG,oBAAoB,wBAAqD,aAAwB;AAChG,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC1C;AAAA,EAEA,oBAAoB,WAAmB,OAAqB;AAC3D,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC1C;AACD;",
  "names": []
}
