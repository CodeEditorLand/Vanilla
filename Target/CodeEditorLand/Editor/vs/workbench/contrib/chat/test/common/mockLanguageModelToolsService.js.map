{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/test/common/mockLanguageModelToolsService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { Event } from '../../../../../base/common/event.js';\nimport { Disposable, IDisposable } from '../../../../../base/common/lifecycle.js';\nimport { CountTokensCallback, ILanguageModelToolsService, IToolData, IToolImpl, IToolInvocation, IToolResult } from '../../common/languageModelToolsService.js';\n\nexport class MockLanguageModelToolsService implements ILanguageModelToolsService {\n\t_serviceBrand: undefined;\n\n\tconstructor() { }\n\n\tonDidChangeTools: Event<void> = Event.None;\n\n\tregisterToolData(toolData: IToolData): IDisposable {\n\t\treturn Disposable.None;\n\t}\n\n\tregisterToolImplementation(name: string, tool: IToolImpl): IDisposable {\n\t\treturn Disposable.None;\n\t}\n\n\tgetTools(): Iterable<Readonly<IToolData>> {\n\t\treturn [];\n\t}\n\n\tgetTool(id: string): IToolData | undefined {\n\t\treturn undefined;\n\t}\n\n\tgetToolByName(name: string): IToolData | undefined {\n\t\treturn undefined;\n\t}\n\n\tasync invokeTool(dto: IToolInvocation, countTokens: CountTokensCallback, token: CancellationToken): Promise<IToolResult> {\n\t\treturn {\n\t\t\tstring: ''\n\t\t};\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,yBAAyB;AAClC,SAAS,aAAa;AACtB,SAAS,YAAY,mBAAmB;AACxC,SAAS,qBAAqB,4BAA4B,WAAW,WAAW,iBAAiB,mBAAmB;AAE7G,MAAM,8BAAoE;AAAA,EAVjF,OAUiF;AAAA;AAAA;AAAA,EAChF;AAAA,EAEA,cAAc;AAAA,EAAE;AAAA,EAEhB,mBAAgC,MAAM;AAAA,EAEtC,iBAAiB,UAAkC;AAClD,WAAO,WAAW;AAAA,EACnB;AAAA,EAEA,2BAA2B,MAAc,MAA8B;AACtE,WAAO,WAAW;AAAA,EACnB;AAAA,EAEA,WAA0C;AACzC,WAAO,CAAC;AAAA,EACT;AAAA,EAEA,QAAQ,IAAmC;AAC1C,WAAO;AAAA,EACR;AAAA,EAEA,cAAc,MAAqC;AAClD,WAAO;AAAA,EACR;AAAA,EAEA,MAAM,WAAW,KAAsB,aAAkC,OAAgD;AACxH,WAAO;AAAA,MACN,QAAQ;AAAA,IACT;AAAA,EACD;AACD;",
  "names": []
}
