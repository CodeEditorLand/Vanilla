{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/test/common/chatAgents.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { MockObject, mockObject } from '../../../../../base/test/common/mock.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { ExtensionIdentifier } from '../../../../../platform/extensions/common/extensions.js';\nimport { ChatAgentService, IChatAgentData, IChatAgentImplementation, IChatAgentService } from '../../common/chatAgents.js';\nimport assert from 'assert';\n\nconst testAgentId = 'testAgent';\nconst testAgentData: IChatAgentData = {\n\tid: testAgentId,\n\tname: 'Test Agent',\n\textensionDisplayName: '',\n\textensionId: new ExtensionIdentifier(''),\n\textensionPublisherId: '',\n\tlocations: [],\n\tmetadata: {},\n\tslashCommands: [],\n\tdisambiguation: [],\n};\n\nsuite('ChatAgents', function () {\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tlet chatAgentService: IChatAgentService;\n\tlet contextKeyService: MockObject<IContextKeyService>;\n\tsetup(() => {\n\t\tcontextKeyService = mockObject<IContextKeyService>()();\n\t\tchatAgentService = new ChatAgentService(contextKeyService as any);\n\t});\n\n\ttest('registerAgent', async () => {\n\t\tassert.strictEqual(chatAgentService.getAgents().length, 0);\n\n\n\t\tconst agentRegistration = chatAgentService.registerAgent(testAgentId, testAgentData);\n\n\t\tassert.strictEqual(chatAgentService.getAgents().length, 1);\n\t\tassert.strictEqual(chatAgentService.getAgents()[0].id, testAgentId);\n\n\t\tassert.throws(() => chatAgentService.registerAgent(testAgentId, testAgentData));\n\n\t\tagentRegistration.dispose();\n\t\tassert.strictEqual(chatAgentService.getAgents().length, 0);\n\t});\n\n\ttest('agent when clause', async () => {\n\t\tassert.strictEqual(chatAgentService.getAgents().length, 0);\n\n\t\tstore.add(chatAgentService.registerAgent(testAgentId, {\n\t\t\t...testAgentData,\n\t\t\twhen: 'myKey'\n\t\t}));\n\t\tassert.strictEqual(chatAgentService.getAgents().length, 0);\n\n\t\tcontextKeyService.contextMatchesRules.returns(true);\n\t\tassert.strictEqual(chatAgentService.getAgents().length, 1);\n\t});\n\n\tsuite('registerAgentImplementation', function () {\n\t\tconst agentImpl: IChatAgentImplementation = {\n\t\t\tinvoke: async () => { return {}; },\n\t\t\tprovideFollowups: async () => { return []; },\n\t\t};\n\n\t\ttest('should register an agent implementation', () => {\n\t\t\tstore.add(chatAgentService.registerAgent(testAgentId, testAgentData));\n\t\t\tstore.add(chatAgentService.registerAgentImplementation(testAgentId, agentImpl));\n\n\t\t\tconst agents = chatAgentService.getActivatedAgents();\n\t\t\tassert.strictEqual(agents.length, 1);\n\t\t\tassert.strictEqual(agents[0].id, testAgentId);\n\t\t});\n\n\t\ttest('can dispose an agent implementation', () => {\n\t\t\tstore.add(chatAgentService.registerAgent(testAgentId, testAgentData));\n\t\t\tconst implRegistration = chatAgentService.registerAgentImplementation(testAgentId, agentImpl);\n\t\t\timplRegistration.dispose();\n\n\t\t\tconst agents = chatAgentService.getActivatedAgents();\n\t\t\tassert.strictEqual(agents.length, 0);\n\t\t});\n\n\t\ttest('should throw error if agent does not exist', () => {\n\t\t\tassert.throws(() => chatAgentService.registerAgentImplementation('nonexistentAgent', agentImpl));\n\t\t});\n\n\t\ttest('should throw error if agent already has an implementation', () => {\n\t\t\tstore.add(chatAgentService.registerAgent(testAgentId, testAgentData));\n\t\t\tstore.add(chatAgentService.registerAgentImplementation(testAgentId, agentImpl));\n\n\t\t\tassert.throws(() => chatAgentService.registerAgentImplementation(testAgentId, agentImpl));\n\t\t});\n\t});\n});\n"],
  "mappings": ";;AAKA,SAAS,YAAY,kBAAkB;AACvC,SAAS,+CAA+C;AACxD,SAAS,0BAA0B;AACnC,SAAS,2BAA2B;AACpC,SAAS,kBAAkB,gBAAgB,0BAA0B,yBAAyB;AAC9F,OAAO,YAAY;AAEnB,MAAM,cAAc;AACpB,MAAM,gBAAgC;AAAA,EACrC,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,sBAAsB;AAAA,EACtB,aAAa,IAAI,oBAAoB,EAAE;AAAA,EACvC,sBAAsB;AAAA,EACtB,WAAW,CAAC;AAAA,EACZ,UAAU,CAAC;AAAA,EACX,eAAe,CAAC;AAAA,EAChB,gBAAgB,CAAC;AAClB;AAEA,MAAM,cAAc,WAAY;AAC/B,QAAM,QAAQ,wCAAwC;AAEtD,MAAI;AACJ,MAAI;AACJ,QAAM,MAAM;AACX,wBAAoB,WAA+B,EAAE;AACrD,uBAAmB,IAAI,iBAAiB,iBAAwB;AAAA,EACjE,CAAC;AAED,OAAK,iBAAiB,YAAY;AACjC,WAAO,YAAY,iBAAiB,UAAU,EAAE,QAAQ,CAAC;AAGzD,UAAM,oBAAoB,iBAAiB,cAAc,aAAa,aAAa;AAEnF,WAAO,YAAY,iBAAiB,UAAU,EAAE,QAAQ,CAAC;AACzD,WAAO,YAAY,iBAAiB,UAAU,EAAE,CAAC,EAAE,IAAI,WAAW;AAElE,WAAO,OAAO,MAAM,iBAAiB,cAAc,aAAa,aAAa,CAAC;AAE9E,sBAAkB,QAAQ;AAC1B,WAAO,YAAY,iBAAiB,UAAU,EAAE,QAAQ,CAAC;AAAA,EAC1D,CAAC;AAED,OAAK,qBAAqB,YAAY;AACrC,WAAO,YAAY,iBAAiB,UAAU,EAAE,QAAQ,CAAC;AAEzD,UAAM,IAAI,iBAAiB,cAAc,aAAa;AAAA,MACrD,GAAG;AAAA,MACH,MAAM;AAAA,IACP,CAAC,CAAC;AACF,WAAO,YAAY,iBAAiB,UAAU,EAAE,QAAQ,CAAC;AAEzD,sBAAkB,oBAAoB,QAAQ,IAAI;AAClD,WAAO,YAAY,iBAAiB,UAAU,EAAE,QAAQ,CAAC;AAAA,EAC1D,CAAC;AAED,QAAM,+BAA+B,WAAY;AAChD,UAAM,YAAsC;AAAA,MAC3C,QAAQ,mCAAY;AAAE,eAAO,CAAC;AAAA,MAAG,GAAzB;AAAA,MACR,kBAAkB,mCAAY;AAAE,eAAO,CAAC;AAAA,MAAG,GAAzB;AAAA,IACnB;AAEA,SAAK,2CAA2C,MAAM;AACrD,YAAM,IAAI,iBAAiB,cAAc,aAAa,aAAa,CAAC;AACpE,YAAM,IAAI,iBAAiB,4BAA4B,aAAa,SAAS,CAAC;AAE9E,YAAM,SAAS,iBAAiB,mBAAmB;AACnD,aAAO,YAAY,OAAO,QAAQ,CAAC;AACnC,aAAO,YAAY,OAAO,CAAC,EAAE,IAAI,WAAW;AAAA,IAC7C,CAAC;AAED,SAAK,uCAAuC,MAAM;AACjD,YAAM,IAAI,iBAAiB,cAAc,aAAa,aAAa,CAAC;AACpE,YAAM,mBAAmB,iBAAiB,4BAA4B,aAAa,SAAS;AAC5F,uBAAiB,QAAQ;AAEzB,YAAM,SAAS,iBAAiB,mBAAmB;AACnD,aAAO,YAAY,OAAO,QAAQ,CAAC;AAAA,IACpC,CAAC;AAED,SAAK,8CAA8C,MAAM;AACxD,aAAO,OAAO,MAAM,iBAAiB,4BAA4B,oBAAoB,SAAS,CAAC;AAAA,IAChG,CAAC;AAED,SAAK,6DAA6D,MAAM;AACvE,YAAM,IAAI,iBAAiB,cAAc,aAAa,aAAa,CAAC;AACpE,YAAM,IAAI,iBAAiB,4BAA4B,aAAa,SAAS,CAAC;AAE9E,aAAO,OAAO,MAAM,iBAAiB,4BAA4B,aAAa,SAAS,CAAC;AAAA,IACzF,CAAC;AAAA,EACF,CAAC;AACF,CAAC;",
  "names": []
}
