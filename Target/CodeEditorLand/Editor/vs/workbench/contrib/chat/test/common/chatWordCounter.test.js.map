{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/test/common/chatWordCounter.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { getNWords } from '../../common/chatWordCounter.js';\n\nsuite('ChatWordCounter', () => {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tfunction doTest(str: string, nWords: number, resultStr: string) {\n\t\tconst result = getNWords(str, nWords);\n\t\tassert.strictEqual(result.value, resultStr);\n\t\tassert.strictEqual(result.returnedWordCount, nWords);\n\t}\n\n\tsuite('getNWords', () => {\n\t\ttest('matching actualWordCount', () => {\n\t\t\tconst cases: [string, number, string][] = [\n\t\t\t\t['hello world', 1, 'hello'],\n\t\t\t\t['hello', 1, 'hello'],\n\t\t\t\t['hello world', 0, ''],\n\t\t\t\t['here\\'s, some.   punctuation?', 3, 'here\\'s, some.   punctuation?'],\n\t\t\t\t['| markdown | _table_ | header |', 3, '| markdown | _table_ | header'],\n\t\t\t\t['| --- | --- | --- |', 1, '| ---'],\n\t\t\t\t['| --- | --- | --- |', 3, '| --- | --- | ---'],\n\t\t\t\t[' \\t some \\n whitespace     \\n\\n\\nhere   ', 3, ' \\t some \\n whitespace     \\n\\n\\nhere'],\n\t\t\t];\n\n\t\t\tcases.forEach(([str, nWords, result]) => doTest(str, nWords, result));\n\t\t});\n\n\t\ttest('matching links', () => {\n\t\t\tconst cases: [string, number, string][] = [\n\t\t\t\t['[hello](https://example.com) world', 1, '[hello](https://example.com)'],\n\t\t\t\t['[hello](https://example.com) world', 2, '[hello](https://example.com) world'],\n\t\t\t\t['oh [hello](https://example.com \"title\") world', 1, 'oh'],\n\t\t\t\t['oh [hello](https://example.com \"title\") world', 2, 'oh [hello](https://example.com \"title\")'],\n\t\t\t\t// Parens in link destination\n\t\t\t\t['[hello](https://example.com?()) world', 1, '[hello](https://example.com?())'],\n\t\t\t\t// Escaped brackets in link text\n\t\t\t\t['[he \\\\[l\\\\] \\\\]lo](https://example.com?()) world', 1, '[he \\\\[l\\\\] \\\\]lo](https://example.com?())'],\n\t\t\t];\n\n\t\t\tcases.forEach(([str, nWords, result]) => doTest(str, nWords, result));\n\t\t});\n\n\t\ttest('code', () => {\n\t\t\tconst cases: [string, number, string][] = [\n\t\t\t\t['let a=1-2', 2, 'let a'],\n\t\t\t\t['let a=1-2', 3, 'let a='],\n\t\t\t\t['let a=1-2', 4, 'let a=1'],\n\t\t\t\t['const myVar = 1+2', 4, 'const myVar = 1'],\n\t\t\t\t['<div id=\"myDiv\"></div>', 3, '<div id='],\n\t\t\t\t['<div id=\"myDiv\"></div>', 4, '<div id=\"myDiv\"></div>'],\n\t\t\t];\n\n\t\t\tcases.forEach(([str, nWords, result]) => doTest(str, nWords, result));\n\t\t});\n\n\t\ttest('chinese characters', () => {\n\t\t\tconst cases: [string, number, string][] = [\n\t\t\t\t['\u6211\u559C\u6B22\u4E2D\u56FD\u83DC', 3, '\u6211\u559C\u6B22'],\n\t\t\t];\n\n\t\t\tcases.forEach(([str, nWords, result]) => doTest(str, nWords, result));\n\t\t});\n\t});\n\n});\n"],
  "mappings": ";;AAKA,OAAO,YAAY;AACnB,SAAS,+CAA+C;AACxD,SAAS,iBAAiB;AAE1B,MAAM,mBAAmB,MAAM;AAC9B,0CAAwC;AAExC,WAAS,OAAO,KAAa,QAAgB,WAAmB;AAC/D,UAAM,SAAS,UAAU,KAAK,MAAM;AACpC,WAAO,YAAY,OAAO,OAAO,SAAS;AAC1C,WAAO,YAAY,OAAO,mBAAmB,MAAM;AAAA,EACpD;AAJS;AAMT,QAAM,aAAa,MAAM;AACxB,SAAK,4BAA4B,MAAM;AACtC,YAAM,QAAoC;AAAA,QACzC,CAAC,eAAe,GAAG,OAAO;AAAA,QAC1B,CAAC,SAAS,GAAG,OAAO;AAAA,QACpB,CAAC,eAAe,GAAG,EAAE;AAAA,QACrB,CAAC,gCAAiC,GAAG,8BAA+B;AAAA,QACpE,CAAC,mCAAmC,GAAG,+BAA+B;AAAA,QACtE,CAAC,uBAAuB,GAAG,OAAO;AAAA,QAClC,CAAC,uBAAuB,GAAG,mBAAmB;AAAA,QAC9C,CAAC,2CAA4C,GAAG,sCAAuC;AAAA,MACxF;AAEA,YAAM,QAAQ,CAAC,CAAC,KAAK,QAAQ,MAAM,MAAM,OAAO,KAAK,QAAQ,MAAM,CAAC;AAAA,IACrE,CAAC;AAED,SAAK,kBAAkB,MAAM;AAC5B,YAAM,QAAoC;AAAA,QACzC,CAAC,sCAAsC,GAAG,8BAA8B;AAAA,QACxE,CAAC,sCAAsC,GAAG,oCAAoC;AAAA,QAC9E,CAAC,iDAAiD,GAAG,IAAI;AAAA,QACzD,CAAC,iDAAiD,GAAG,yCAAyC;AAAA;AAAA,QAE9F,CAAC,yCAAyC,GAAG,iCAAiC;AAAA;AAAA,QAE9E,CAAC,oDAAoD,GAAG,4CAA4C;AAAA,MACrG;AAEA,YAAM,QAAQ,CAAC,CAAC,KAAK,QAAQ,MAAM,MAAM,OAAO,KAAK,QAAQ,MAAM,CAAC;AAAA,IACrE,CAAC;AAED,SAAK,QAAQ,MAAM;AAClB,YAAM,QAAoC;AAAA,QACzC,CAAC,aAAa,GAAG,OAAO;AAAA,QACxB,CAAC,aAAa,GAAG,QAAQ;AAAA,QACzB,CAAC,aAAa,GAAG,SAAS;AAAA,QAC1B,CAAC,qBAAqB,GAAG,iBAAiB;AAAA,QAC1C,CAAC,0BAA0B,GAAG,UAAU;AAAA,QACxC,CAAC,0BAA0B,GAAG,wBAAwB;AAAA,MACvD;AAEA,YAAM,QAAQ,CAAC,CAAC,KAAK,QAAQ,MAAM,MAAM,OAAO,KAAK,QAAQ,MAAM,CAAC;AAAA,IACrE,CAAC;AAED,SAAK,sBAAsB,MAAM;AAChC,YAAM,QAAoC;AAAA,QACzC,CAAC,wCAAU,GAAG,oBAAK;AAAA,MACpB;AAEA,YAAM,QAAQ,CAAC,CAAC,KAAK,QAAQ,MAAM,MAAM,OAAO,KAAK,QAAQ,MAAM,CAAC;AAAA,IACrE,CAAC;AAAA,EACF,CAAC;AAEF,CAAC;",
  "names": []
}
