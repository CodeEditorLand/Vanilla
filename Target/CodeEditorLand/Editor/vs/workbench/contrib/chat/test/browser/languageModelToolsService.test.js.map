{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/test/browser/languageModelToolsService.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { TestConfigurationService } from '../../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { ContextKeyService } from '../../../../../platform/contextkey/browser/contextKeyService.js';\nimport { ContextKeyEqualsExpr, IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { TestExtensionService } from '../../../../test/common/workbenchTestServices.js';\nimport { IToolData, IToolImpl, IToolInvocation, LanguageModelToolsService } from '../../common/languageModelToolsService.js';\n\nsuite('LanguageModelToolsService', () => {\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tlet contextKeyService: IContextKeyService;\n\tlet service: LanguageModelToolsService;\n\n\tsetup(() => {\n\t\tconst extensionService = new TestExtensionService();\n\t\tcontextKeyService = store.add(new ContextKeyService(new TestConfigurationService()));\n\t\tservice = store.add(new LanguageModelToolsService(extensionService, contextKeyService));\n\t});\n\n\ttest('registerToolData', () => {\n\t\tconst toolData: IToolData = {\n\t\t\tid: 'testTool',\n\t\t\tmodelDescription: 'Test Tool'\n\t\t};\n\n\t\tconst disposable = service.registerToolData(toolData);\n\t\tassert.strictEqual(service.getTool('testTool')?.id, 'testTool');\n\t\tdisposable.dispose();\n\t\tassert.strictEqual(service.getTool('testTool'), undefined);\n\t});\n\n\ttest('registerToolImplementation', () => {\n\t\tconst toolData: IToolData = {\n\t\t\tid: 'testTool',\n\t\t\tmodelDescription: 'Test Tool'\n\t\t};\n\n\t\tstore.add(service.registerToolData(toolData));\n\n\t\tconst toolImpl: IToolImpl = {\n\t\t\tinvoke: async () => ({ string: 'result' })\n\t\t};\n\n\t\tstore.add(service.registerToolImplementation('testTool', toolImpl));\n\t\tassert.strictEqual(service.getTool('testTool')?.id, 'testTool');\n\t});\n\n\ttest('getTools', () => {\n\t\tcontextKeyService.createKey('testKey', true);\n\t\tconst toolData1: IToolData = {\n\t\t\tid: 'testTool1',\n\t\t\tmodelDescription: 'Test Tool 1',\n\t\t\twhen: ContextKeyEqualsExpr.create('testKey', false)\n\t\t};\n\n\t\tconst toolData2: IToolData = {\n\t\t\tid: 'testTool2',\n\t\t\tmodelDescription: 'Test Tool 2',\n\t\t\twhen: ContextKeyEqualsExpr.create('testKey', true)\n\t\t};\n\n\t\tconst toolData3: IToolData = {\n\t\t\tid: 'testTool3',\n\t\t\tmodelDescription: 'Test Tool 3'\n\t\t};\n\n\t\tstore.add(service.registerToolData(toolData1));\n\t\tstore.add(service.registerToolData(toolData2));\n\t\tstore.add(service.registerToolData(toolData3));\n\n\t\tconst tools = Array.from(service.getTools());\n\t\tassert.strictEqual(tools.length, 2);\n\t\tassert.strictEqual(tools[0].id, 'testTool2');\n\t\tassert.strictEqual(tools[1].id, 'testTool3');\n\t});\n\n\ttest('invokeTool', async () => {\n\t\tconst toolData: IToolData = {\n\t\t\tid: 'testTool',\n\t\t\tmodelDescription: 'Test Tool'\n\t\t};\n\n\t\tstore.add(service.registerToolData(toolData));\n\n\t\tconst toolImpl: IToolImpl = {\n\t\t\tinvoke: async (invocation) => {\n\t\t\t\tassert.strictEqual(invocation.callId, '1');\n\t\t\t\tassert.strictEqual(invocation.toolId, 'testTool');\n\t\t\t\tassert.deepStrictEqual(invocation.parameters, { a: 1 });\n\t\t\t\treturn { string: 'result' };\n\t\t\t}\n\t\t};\n\n\t\tstore.add(service.registerToolImplementation('testTool', toolImpl));\n\n\t\tconst dto: IToolInvocation = {\n\t\t\tcallId: '1',\n\t\t\ttoolId: 'testTool',\n\t\t\ttokenBudget: 100,\n\t\t\tparameters: {\n\t\t\t\ta: 1\n\t\t\t},\n\t\t\tcontext: { sessionId: 'a' }\n\t\t};\n\n\t\tconst result = await service.invokeTool(dto, async () => 0, CancellationToken.None);\n\t\tassert.strictEqual(result.string, 'result');\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
