{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/test/common/voiceChatService.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { CancellationToken, CancellationTokenSource } from '../../../../../base/common/cancellation.js';\nimport { Emitter, Event } from '../../../../../base/common/event.js';\nimport { IMarkdownString } from '../../../../../base/common/htmlContent.js';\nimport { DisposableStore, IDisposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { ProviderResult } from '../../../../../editor/common/languages.js';\nimport { ExtensionIdentifier } from '../../../../../platform/extensions/common/extensions.js';\nimport { MockContextKeyService } from '../../../../../platform/keybinding/test/common/mockKeybindingService.js';\nimport { ChatAgentLocation, IChatAgent, IChatAgentCommand, IChatAgentCompletionItem, IChatAgentData, IChatAgentHistoryEntry, IChatAgentImplementation, IChatAgentMetadata, IChatAgentRequest, IChatAgentResult, IChatAgentService, IChatParticipantDetectionProvider } from '../../common/chatAgents.js';\nimport { IChatModel } from '../../common/chatModel.js';\nimport { IChatProgress, IChatFollowup } from '../../common/chatService.js';\nimport { IVoiceChatSessionOptions, IVoiceChatTextEvent, VoiceChatService } from '../../common/voiceChatService.js';\nimport { ISpeechProvider, ISpeechService, ISpeechToTextEvent, ISpeechToTextSession, ITextToSpeechSession, KeywordRecognitionStatus, SpeechToTextStatus } from '../../../speech/common/speechService.js';\nimport { nullExtensionDescription } from '../../../../services/extensions/common/extensions.js';\n\nsuite('VoiceChat', () => {\n\n\tclass TestChatAgentCommand implements IChatAgentCommand {\n\t\tconstructor(readonly name: string, readonly description: string) { }\n\t}\n\n\tclass TestChatAgent implements IChatAgent {\n\n\t\textensionId: ExtensionIdentifier = nullExtensionDescription.identifier;\n\t\textensionPublisher = '';\n\t\textensionDisplayName = '';\n\t\textensionPublisherId = '';\n\t\tlocations: ChatAgentLocation[] = [ChatAgentLocation.Panel];\n\t\tpublic readonly name: string;\n\t\tconstructor(readonly id: string, readonly slashCommands: IChatAgentCommand[]) {\n\t\t\tthis.name = id;\n\t\t}\n\t\tfullName?: string | undefined;\n\t\tdescription?: string | undefined;\n\t\twhen?: string | undefined;\n\t\tpublisherDisplayName?: string | undefined;\n\t\tisDefault?: boolean | undefined;\n\t\tisDynamic?: boolean | undefined;\n\t\tdisambiguation: { category: string; description: string; examples: string[] }[] = [];\n\t\tprovideFollowups?(request: IChatAgentRequest, result: IChatAgentResult, history: IChatAgentHistoryEntry[], token: CancellationToken): Promise<IChatFollowup[]> {\n\t\t\tthrow new Error('Method not implemented.');\n\t\t}\n\t\tprovideSampleQuestions?(location: ChatAgentLocation, token: CancellationToken): ProviderResult<IChatFollowup[] | undefined> {\n\t\t\tthrow new Error('Method not implemented.');\n\t\t}\n\t\tinvoke(request: IChatAgentRequest, progress: (part: IChatProgress) => void, history: IChatAgentHistoryEntry[], token: CancellationToken): Promise<IChatAgentResult> { throw new Error('Method not implemented.'); }\n\t\tprovideWelcomeMessage?(location: ChatAgentLocation, token: CancellationToken): ProviderResult<(string | IMarkdownString)[] | undefined> { throw new Error('Method not implemented.'); }\n\t\tmetadata = {};\n\t}\n\n\tconst agents: IChatAgent[] = [\n\t\tnew TestChatAgent('workspace', [\n\t\t\tnew TestChatAgentCommand('fix', 'fix'),\n\t\t\tnew TestChatAgentCommand('explain', 'explain')\n\t\t]),\n\t\tnew TestChatAgent('vscode', [\n\t\t\tnew TestChatAgentCommand('search', 'search')\n\t\t]),\n\t];\n\n\tclass TestChatAgentService implements IChatAgentService {\n\t\thasChatParticipantDetectionProviders(): boolean {\n\t\t\tthrow new Error('Method not implemented.');\n\t\t}\n\t\tregisterChatParticipantDetectionProvider(handle: number, provider: IChatParticipantDetectionProvider): IDisposable {\n\t\t\tthrow new Error('Method not implemented.');\n\t\t}\n\t\tdetectAgentOrCommand(request: IChatAgentRequest, history: IChatAgentHistoryEntry[], options: { location: ChatAgentLocation }, token: CancellationToken): Promise<{ agent: IChatAgentData; command?: IChatAgentCommand } | undefined> {\n\t\t\tthrow new Error('Method not implemented.');\n\t\t}\n\t\t_serviceBrand: undefined;\n\t\treadonly onDidChangeAgents = Event.None;\n\t\tregisterAgentImplementation(id: string, agent: IChatAgentImplementation): IDisposable { throw new Error(); }\n\t\tregisterDynamicAgent(data: IChatAgentData, agentImpl: IChatAgentImplementation): IDisposable { throw new Error('Method not implemented.'); }\n\t\tinvokeAgent(id: string, request: IChatAgentRequest, progress: (part: IChatProgress) => void, history: IChatAgentHistoryEntry[], token: CancellationToken): Promise<IChatAgentResult> { throw new Error(); }\n\t\tgetFollowups(id: string, request: IChatAgentRequest, result: IChatAgentResult, history: IChatAgentHistoryEntry[], token: CancellationToken): Promise<IChatFollowup[]> { throw new Error(); }\n\t\tgetActivatedAgents(): IChatAgent[] { return agents; }\n\t\tgetAgents(): IChatAgent[] { return agents; }\n\t\tgetDefaultAgent(): IChatAgent | undefined { throw new Error(); }\n\t\tgetContributedDefaultAgent(): IChatAgentData | undefined { throw new Error(); }\n\t\tgetSecondaryAgent(): IChatAgent | undefined { throw new Error(); }\n\t\tregisterAgent(id: string, data: IChatAgentData): IDisposable { throw new Error('Method not implemented.'); }\n\t\tgetAgent(id: string): IChatAgentData | undefined { throw new Error('Method not implemented.'); }\n\t\tgetAgentsByName(name: string): IChatAgentData[] { throw new Error('Method not implemented.'); }\n\t\tupdateAgent(id: string, updateMetadata: IChatAgentMetadata): void { throw new Error('Method not implemented.'); }\n\t\tgetAgentByFullyQualifiedId(id: string): IChatAgentData | undefined { throw new Error('Method not implemented.'); }\n\t\tregisterAgentCompletionProvider(id: string, provider: (query: string, token: CancellationToken) => Promise<IChatAgentCompletionItem[]>): IDisposable { throw new Error('Method not implemented.'); }\n\t\tgetAgentCompletionItems(id: string, query: string, token: CancellationToken): Promise<IChatAgentCompletionItem[]> { throw new Error('Method not implemented.'); }\n\t\tagentHasDupeName(id: string): boolean { throw new Error('Method not implemented.'); }\n\t\tgetChatTitle(id: string, history: IChatAgentHistoryEntry[], token: CancellationToken): Promise<string | undefined> { throw new Error('Method not implemented.'); }\n\t}\n\n\tclass TestSpeechService implements ISpeechService {\n\t\t_serviceBrand: undefined;\n\n\t\tonDidChangeHasSpeechProvider = Event.None;\n\n\t\treadonly hasSpeechProvider = true;\n\t\treadonly hasActiveSpeechToTextSession = false;\n\t\treadonly hasActiveTextToSpeechSession = false;\n\t\treadonly hasActiveKeywordRecognition = false;\n\n\t\tregisterSpeechProvider(identifier: string, provider: ISpeechProvider): IDisposable { throw new Error('Method not implemented.'); }\n\t\tonDidStartSpeechToTextSession = Event.None;\n\t\tonDidEndSpeechToTextSession = Event.None;\n\n\t\tasync createSpeechToTextSession(token: CancellationToken): Promise<ISpeechToTextSession> {\n\t\t\treturn {\n\t\t\t\tonDidChange: emitter.event\n\t\t\t};\n\t\t}\n\n\t\tonDidStartTextToSpeechSession = Event.None;\n\t\tonDidEndTextToSpeechSession = Event.None;\n\n\t\tasync createTextToSpeechSession(token: CancellationToken): Promise<ITextToSpeechSession> {\n\t\t\treturn {\n\t\t\t\tonDidChange: Event.None,\n\t\t\t\tsynthesize: async () => { }\n\t\t\t};\n\t\t}\n\n\t\tonDidStartKeywordRecognition = Event.None;\n\t\tonDidEndKeywordRecognition = Event.None;\n\t\trecognizeKeyword(token: CancellationToken): Promise<KeywordRecognitionStatus> { throw new Error('Method not implemented.'); }\n\t}\n\n\tconst disposables = new DisposableStore();\n\tlet emitter: Emitter<ISpeechToTextEvent>;\n\n\tlet service: VoiceChatService;\n\tlet event: IVoiceChatTextEvent | undefined;\n\n\tasync function createSession(options: IVoiceChatSessionOptions) {\n\t\tconst cts = new CancellationTokenSource();\n\t\tdisposables.add(toDisposable(() => cts.dispose(true)));\n\t\tconst session = await service.createVoiceChatSession(cts.token, options);\n\t\tdisposables.add(session.onDidChange(e => {\n\t\t\tevent = e;\n\t\t}));\n\t}\n\n\tsetup(() => {\n\t\temitter = disposables.add(new Emitter<ISpeechToTextEvent>());\n\t\tservice = disposables.add(new VoiceChatService(new TestSpeechService(), new TestChatAgentService(), new MockContextKeyService()));\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('Agent and slash command detection (useAgents: false)', async () => {\n\t\tawait testAgentsAndSlashCommandsDetection({ usesAgents: false, model: {} as IChatModel });\n\t});\n\n\ttest('Agent and slash command detection (useAgents: true)', async () => {\n\t\tawait testAgentsAndSlashCommandsDetection({ usesAgents: true, model: {} as IChatModel });\n\t});\n\n\tasync function testAgentsAndSlashCommandsDetection(options: IVoiceChatSessionOptions) {\n\n\t\t// Nothing to detect\n\t\tawait createSession(options);\n\n\t\temitter.fire({ status: SpeechToTextStatus.Started });\n\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Started);\n\n\t\temitter.fire({ status: SpeechToTextStatus.Recognizing, text: 'Hello' });\n\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognizing);\n\t\tassert.strictEqual(event?.text, 'Hello');\n\t\tassert.strictEqual(event?.waitingForInput, undefined);\n\n\t\temitter.fire({ status: SpeechToTextStatus.Recognizing, text: 'Hello World' });\n\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognizing);\n\t\tassert.strictEqual(event?.text, 'Hello World');\n\t\tassert.strictEqual(event?.waitingForInput, undefined);\n\n\t\temitter.fire({ status: SpeechToTextStatus.Recognized, text: 'Hello World' });\n\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognized);\n\t\tassert.strictEqual(event?.text, 'Hello World');\n\t\tassert.strictEqual(event?.waitingForInput, undefined);\n\n\t\t// Agent\n\t\tawait createSession(options);\n\n\t\temitter.fire({ status: SpeechToTextStatus.Recognizing, text: 'At' });\n\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognizing);\n\t\tassert.strictEqual(event?.text, 'At');\n\n\t\temitter.fire({ status: SpeechToTextStatus.Recognizing, text: 'At workspace' });\n\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognizing);\n\t\tassert.strictEqual(event?.text, options.usesAgents ? '@workspace' : 'At workspace');\n\t\tassert.strictEqual(event?.waitingForInput, options.usesAgents);\n\n\t\temitter.fire({ status: SpeechToTextStatus.Recognizing, text: 'at workspace' });\n\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognizing);\n\t\tassert.strictEqual(event?.text, options.usesAgents ? '@workspace' : 'at workspace');\n\t\tassert.strictEqual(event?.waitingForInput, options.usesAgents);\n\n\t\temitter.fire({ status: SpeechToTextStatus.Recognizing, text: 'At workspace help' });\n\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognizing);\n\t\tassert.strictEqual(event?.text, options.usesAgents ? '@workspace help' : 'At workspace help');\n\t\tassert.strictEqual(event?.waitingForInput, false);\n\n\t\temitter.fire({ status: SpeechToTextStatus.Recognized, text: 'At workspace help' });\n\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognized);\n\t\tassert.strictEqual(event?.text, options.usesAgents ? '@workspace help' : 'At workspace help');\n\t\tassert.strictEqual(event?.waitingForInput, false);\n\n\t\t// Agent with punctuation\n\t\tawait createSession(options);\n\n\t\temitter.fire({ status: SpeechToTextStatus.Recognizing, text: 'At workspace, help' });\n\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognizing);\n\t\tassert.strictEqual(event?.text, options.usesAgents ? '@workspace help' : 'At workspace, help');\n\t\tassert.strictEqual(event?.waitingForInput, false);\n\n\t\temitter.fire({ status: SpeechToTextStatus.Recognized, text: 'At workspace, help' });\n\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognized);\n\t\tassert.strictEqual(event?.text, options.usesAgents ? '@workspace help' : 'At workspace, help');\n\t\tassert.strictEqual(event?.waitingForInput, false);\n\n\t\tawait createSession(options);\n\n\t\temitter.fire({ status: SpeechToTextStatus.Recognizing, text: 'At Workspace. help' });\n\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognizing);\n\t\tassert.strictEqual(event?.text, options.usesAgents ? '@workspace help' : 'At Workspace. help');\n\t\tassert.strictEqual(event?.waitingForInput, false);\n\n\t\temitter.fire({ status: SpeechToTextStatus.Recognized, text: 'At Workspace. help' });\n\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognized);\n\t\tassert.strictEqual(event?.text, options.usesAgents ? '@workspace help' : 'At Workspace. help');\n\t\tassert.strictEqual(event?.waitingForInput, false);\n\n\t\t// Slash Command\n\t\tawait createSession(options);\n\n\t\temitter.fire({ status: SpeechToTextStatus.Recognizing, text: 'Slash fix' });\n\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognizing);\n\t\tassert.strictEqual(event?.text, options.usesAgents ? '@workspace /fix' : '/fix');\n\t\tassert.strictEqual(event?.waitingForInput, true);\n\n\t\temitter.fire({ status: SpeechToTextStatus.Recognized, text: 'Slash fix' });\n\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognized);\n\t\tassert.strictEqual(event?.text, options.usesAgents ? '@workspace /fix' : '/fix');\n\t\tassert.strictEqual(event?.waitingForInput, true);\n\n\t\t// Agent + Slash Command\n\t\tawait createSession(options);\n\n\t\temitter.fire({ status: SpeechToTextStatus.Recognizing, text: 'At code slash search help' });\n\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognizing);\n\t\tassert.strictEqual(event?.text, options.usesAgents ? '@vscode /search help' : 'At code slash search help');\n\t\tassert.strictEqual(event?.waitingForInput, false);\n\n\t\temitter.fire({ status: SpeechToTextStatus.Recognized, text: 'At code slash search help' });\n\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognized);\n\t\tassert.strictEqual(event?.text, options.usesAgents ? '@vscode /search help' : 'At code slash search help');\n\t\tassert.strictEqual(event?.waitingForInput, false);\n\n\t\t// Agent + Slash Command with punctuation\n\t\tawait createSession(options);\n\n\t\temitter.fire({ status: SpeechToTextStatus.Recognizing, text: 'At code, slash search, help' });\n\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognizing);\n\t\tassert.strictEqual(event?.text, options.usesAgents ? '@vscode /search help' : 'At code, slash search, help');\n\t\tassert.strictEqual(event?.waitingForInput, false);\n\n\t\temitter.fire({ status: SpeechToTextStatus.Recognized, text: 'At code, slash search, help' });\n\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognized);\n\t\tassert.strictEqual(event?.text, options.usesAgents ? '@vscode /search help' : 'At code, slash search, help');\n\t\tassert.strictEqual(event?.waitingForInput, false);\n\n\t\tawait createSession(options);\n\n\t\temitter.fire({ status: SpeechToTextStatus.Recognizing, text: 'At code. slash, search help' });\n\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognizing);\n\t\tassert.strictEqual(event?.text, options.usesAgents ? '@vscode /search help' : 'At code. slash, search help');\n\t\tassert.strictEqual(event?.waitingForInput, false);\n\n\t\temitter.fire({ status: SpeechToTextStatus.Recognized, text: 'At code. slash search, help' });\n\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognized);\n\t\tassert.strictEqual(event?.text, options.usesAgents ? '@vscode /search help' : 'At code. slash search, help');\n\t\tassert.strictEqual(event?.waitingForInput, false);\n\n\t\t// Agent not detected twice\n\t\tawait createSession(options);\n\n\t\temitter.fire({ status: SpeechToTextStatus.Recognizing, text: 'At workspace, for at workspace' });\n\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognizing);\n\t\tassert.strictEqual(event?.text, options.usesAgents ? '@workspace for at workspace' : 'At workspace, for at workspace');\n\t\tassert.strictEqual(event?.waitingForInput, false);\n\n\t\temitter.fire({ status: SpeechToTextStatus.Recognized, text: 'At workspace, for at workspace' });\n\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognized);\n\t\tassert.strictEqual(event?.text, options.usesAgents ? '@workspace for at workspace' : 'At workspace, for at workspace');\n\t\tassert.strictEqual(event?.waitingForInput, false);\n\n\t\t// Slash command detected after agent recognized\n\t\tif (options.usesAgents) {\n\t\t\tawait createSession(options);\n\n\t\t\temitter.fire({ status: SpeechToTextStatus.Recognized, text: 'At workspace' });\n\t\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognized);\n\t\t\tassert.strictEqual(event?.text, '@workspace');\n\t\t\tassert.strictEqual(event?.waitingForInput, true);\n\n\t\t\temitter.fire({ status: SpeechToTextStatus.Recognizing, text: 'slash' });\n\t\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognizing);\n\t\t\tassert.strictEqual(event?.text, 'slash');\n\t\t\tassert.strictEqual(event?.waitingForInput, false);\n\n\t\t\temitter.fire({ status: SpeechToTextStatus.Recognizing, text: 'slash fix' });\n\t\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognizing);\n\t\t\tassert.strictEqual(event?.text, '/fix');\n\t\t\tassert.strictEqual(event?.waitingForInput, true);\n\n\t\t\temitter.fire({ status: SpeechToTextStatus.Recognized, text: 'slash fix' });\n\t\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognized);\n\t\t\tassert.strictEqual(event?.text, '/fix');\n\t\t\tassert.strictEqual(event?.waitingForInput, true);\n\n\t\t\tawait createSession(options);\n\n\t\t\temitter.fire({ status: SpeechToTextStatus.Recognized, text: 'At workspace' });\n\t\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognized);\n\t\t\tassert.strictEqual(event?.text, '@workspace');\n\t\t\tassert.strictEqual(event?.waitingForInput, true);\n\n\t\t\temitter.fire({ status: SpeechToTextStatus.Recognized, text: 'slash fix' });\n\t\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognized);\n\t\t\tassert.strictEqual(event?.text, '/fix');\n\t\t\tassert.strictEqual(event?.waitingForInput, true);\n\t\t}\n\t}\n\n\ttest('waiting for input', async () => {\n\n\t\t// Agent\n\t\tawait createSession({ usesAgents: true, model: {} as IChatModel });\n\n\t\temitter.fire({ status: SpeechToTextStatus.Recognizing, text: 'At workspace' });\n\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognizing);\n\t\tassert.strictEqual(event?.text, '@workspace');\n\t\tassert.strictEqual(event.waitingForInput, true);\n\n\t\temitter.fire({ status: SpeechToTextStatus.Recognized, text: 'At workspace' });\n\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognized);\n\t\tassert.strictEqual(event?.text, '@workspace');\n\t\tassert.strictEqual(event.waitingForInput, true);\n\n\t\t// Slash Command\n\t\tawait createSession({ usesAgents: true, model: {} as IChatModel });\n\n\t\temitter.fire({ status: SpeechToTextStatus.Recognizing, text: 'At workspace slash explain' });\n\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognizing);\n\t\tassert.strictEqual(event?.text, '@workspace /explain');\n\t\tassert.strictEqual(event.waitingForInput, true);\n\n\t\temitter.fire({ status: SpeechToTextStatus.Recognized, text: 'At workspace slash explain' });\n\t\tassert.strictEqual(event?.status, SpeechToTextStatus.Recognized);\n\t\tassert.strictEqual(event?.text, '@workspace /explain');\n\t\tassert.strictEqual(event.waitingForInput, true);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": []
}
