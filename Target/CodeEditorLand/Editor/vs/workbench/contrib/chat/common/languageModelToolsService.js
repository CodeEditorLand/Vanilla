var v=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var T=(a,r,e,o)=>{for(var n=o>1?void 0:o?y(r,e):r,t=a.length-1,i;t>=0;t--)(i=a[t])&&(n=(o?i(r,e,n):i(n))||n);return o&&n&&v(r,e,n),n},s=(a,r)=>(e,o)=>r(e,o,a);import{RunOnceScheduler as x}from"../../../../base/common/async.js";import"../../../../base/common/cancellation.js";import{CancellationError as _}from"../../../../base/common/errors.js";import{Emitter as w}from"../../../../base/common/event.js";import"../../../../base/common/htmlContent.js";import{Iterable as f}from"../../../../base/common/iterator.js";import"../../../../base/common/jsonSchema.js";import{Disposable as S,toDisposable as g}from"../../../../base/common/lifecycle.js";import"../../../../base/common/themables.js";import"../../../../base/common/uri.js";import{localize as c}from"../../../../nls.js";import{IContextKeyService as k}from"../../../../platform/contextkey/common/contextkey.js";import{createDecorator as D}from"../../../../platform/instantiation/common/instantiation.js";import{IExtensionService as M}from"../../../services/extensions/common/extensions.js";import"./chatModel.js";import{ChatToolInvocation as E}from"./chatProgressTypes/chatToolInvocation.js";import{IChatService as b}from"./chatService.js";const re=D("ILanguageModelToolsService");let l=class extends S{constructor(e,o,n){super();this._extensionService=e;this._contextKeyService=o;this._chatService=n;this._register(this._contextKeyService.onDidChangeContext(t=>{t.affectsSome(this._toolContextKeys)&&this._onDidChangeToolsScheduler.schedule()}))}_serviceBrand;_onDidChangeTools=new w;onDidChangeTools=this._onDidChangeTools.event;_onDidChangeToolsScheduler=new x(()=>this._onDidChangeTools.fire(),750);_tools=new Map;_toolContextKeys=new Set;registerToolData(e){if(this._tools.has(e.id))throw new Error(`Tool "${e.id}" is already registered.`);return e.supportedContentTypes.includes("text/plain")||e.supportedContentTypes.push("text/plain"),this._tools.set(e.id,{data:e}),this._onDidChangeToolsScheduler.schedule(),e.when?.keys().forEach(o=>this._toolContextKeys.add(o)),g(()=>{this._tools.delete(e.id),this._refreshAllToolContextKeys(),this._onDidChangeToolsScheduler.schedule()})}_refreshAllToolContextKeys(){this._toolContextKeys.clear();for(const e of this._tools.values())e.data.when?.keys().forEach(o=>this._toolContextKeys.add(o))}registerToolImplementation(e,o){const n=this._tools.get(e);if(!n)throw new Error(`Tool "${e}" was not contributed.`);if(n.impl)throw new Error(`Tool "${e}" already has an implementation.`);return n.impl=o,g(()=>{n.impl=void 0})}getTools(){const e=f.map(this._tools.values(),o=>o.data);return f.filter(e,o=>!o.when||this._contextKeyService.contextMatchesRules(o.when))}getTool(e){return this._getToolEntry(e)?.data}_getToolEntry(e){const o=this._tools.get(e);if(o&&(!o.data.when||this._contextKeyService.contextMatchesRules(o.data.when)))return o}getToolByName(e){for(const o of this.getTools())if(o.name===e)return o}async invokeTool(e,o,n){let t=this._tools.get(e.toolId);if(!t)throw new Error(`Tool ${e.toolId} was not contributed`);if(!t.impl&&(await this._extensionService.activateByEvent(`onLanguageModelTool:${e.toolId}`),t=this._tools.get(e.toolId),!t?.impl))throw new Error(`Tool ${e.toolId} does not have an implementation registered.`);let i;if(e.context){const d=this._chatService.getSession(e.context?.sessionId),m=d.getRequests().at(-1),p=m.response?.agent?.fullName??"",I=async()=>{if(t.data.requiresConfirmation)return await t.impl.provideToolConfirmationMessages(p,e.parameters,n)??{title:c("toolConfirmTitle","Use {0}?",`"${t.data.displayName??t.data.id}"`),message:c("toolConfirmMessage","{0} will use {1}.",p,`"${t.data.displayName??t.data.id}"`)}},[h,u]=await Promise.all([t.impl.provideToolInvocationMessage(e.parameters,n),I()]),C=c("toolInvocationMessage","Using {0}",`"${t.data.displayName??t.data.id}"`);if(i=new E(h??C,u),n.onCancellationRequested(()=>{i.confirmed.complete(!1)}),d.acceptResponseProgress(m,i),t.data.requiresConfirmation&&!await i.confirmed.p)throw new _}try{return t.impl.invoke(e,o,n)}finally{i?.complete()}}};l=T([s(0,M),s(1,k),s(2,b)],l);export{re as ILanguageModelToolsService,l as LanguageModelToolsService};
