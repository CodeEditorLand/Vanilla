{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/common/languageModelToolsService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { IJSONSchema } from '../../../../base/common/jsonSchema.js';\nimport { Disposable, IDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ContextKeyExpression, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\n\nexport interface IToolData {\n\tid: string;\n\tname?: string;\n\ticon?: { dark: URI; light?: URI } | ThemeIcon;\n\twhen?: ContextKeyExpression;\n\tdisplayName?: string;\n\tuserDescription?: string;\n\tmodelDescription: string;\n\tparametersSchema?: IJSONSchema;\n\tcanBeInvokedManually?: boolean;\n}\n\ninterface IToolEntry {\n\tdata: IToolData;\n\timpl?: IToolImpl;\n}\n\nexport interface IToolInvocation {\n\tcallId: string;\n\ttoolId: string;\n\tparameters: any;\n\ttokenBudget?: number;\n}\n\nexport interface IToolResult {\n\t[contentType: string]: any;\n\tstring: string;\n}\n\nexport interface IToolImpl {\n\tinvoke(dto: IToolInvocation, countTokens: CountTokensCallback, token: CancellationToken): Promise<IToolResult>;\n}\n\nexport const ILanguageModelToolsService = createDecorator<ILanguageModelToolsService>('ILanguageModelToolsService');\n\nexport type CountTokensCallback = (input: string, token: CancellationToken) => Promise<number>;\n\nexport interface ILanguageModelToolsService {\n\t_serviceBrand: undefined;\n\tonDidChangeTools: Event<void>;\n\tregisterToolData(toolData: IToolData): IDisposable;\n\tregisterToolImplementation(name: string, tool: IToolImpl): IDisposable;\n\tgetTools(): Iterable<Readonly<IToolData>>;\n\tgetTool(id: string): IToolData | undefined;\n\tgetToolByName(name: string): IToolData | undefined;\n\tinvokeTool(dto: IToolInvocation, countTokens: CountTokensCallback, token: CancellationToken): Promise<IToolResult>;\n}\n\nexport class LanguageModelToolsService extends Disposable implements ILanguageModelToolsService {\n\t_serviceBrand: undefined;\n\n\tprivate _onDidChangeTools = new Emitter<void>();\n\treadonly onDidChangeTools = this._onDidChangeTools.event;\n\n\t/** Throttle tools updates because it sends all tools and runs on context key updates */\n\tprivate _onDidChangeToolsScheduler = new RunOnceScheduler(() => this._onDidChangeTools.fire(), 750);\n\n\tprivate _tools = new Map<string, IToolEntry>();\n\tprivate _toolContextKeys = new Set<string>();\n\n\tconstructor(\n\t\t@IExtensionService private readonly _extensionService: IExtensionService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(this._contextKeyService.onDidChangeContext(e => {\n\t\t\tif (e.affectsSome(this._toolContextKeys)) {\n\t\t\t\t// Not worth it to compute a delta here unless we have many tools changing often\n\t\t\t\tthis._onDidChangeToolsScheduler.schedule();\n\t\t\t}\n\t\t}));\n\t}\n\n\tregisterToolData(toolData: IToolData): IDisposable {\n\t\tif (this._tools.has(toolData.id)) {\n\t\t\tthrow new Error(`Tool \"${toolData.id}\" is already registered.`);\n\t\t}\n\n\t\tthis._tools.set(toolData.id, { data: toolData });\n\t\tthis._onDidChangeToolsScheduler.schedule();\n\n\t\ttoolData.when?.keys().forEach(key => this._toolContextKeys.add(key));\n\n\t\treturn toDisposable(() => {\n\t\t\tthis._tools.delete(toolData.id);\n\t\t\tthis._refreshAllToolContextKeys();\n\t\t\tthis._onDidChangeToolsScheduler.schedule();\n\t\t});\n\t}\n\n\tprivate _refreshAllToolContextKeys() {\n\t\tthis._toolContextKeys.clear();\n\t\tfor (const tool of this._tools.values()) {\n\t\t\ttool.data.when?.keys().forEach(key => this._toolContextKeys.add(key));\n\t\t}\n\t}\n\n\tregisterToolImplementation(name: string, tool: IToolImpl): IDisposable {\n\t\tconst entry = this._tools.get(name);\n\t\tif (!entry) {\n\t\t\tthrow new Error(`Tool \"${name}\" was not contributed.`);\n\t\t}\n\n\t\tif (entry.impl) {\n\t\t\tthrow new Error(`Tool \"${name}\" already has an implementation.`);\n\t\t}\n\n\t\tentry.impl = tool;\n\t\treturn toDisposable(() => {\n\t\t\tentry.impl = undefined;\n\t\t});\n\t}\n\n\tgetTools(): Iterable<Readonly<IToolData>> {\n\t\tconst toolDatas = Iterable.map(this._tools.values(), i => i.data);\n\t\treturn Iterable.filter(toolDatas, toolData => !toolData.when || this._contextKeyService.contextMatchesRules(toolData.when));\n\t}\n\n\tgetTool(id: string): IToolData | undefined {\n\t\treturn this._getToolEntry(id)?.data;\n\t}\n\n\tprivate _getToolEntry(id: string): IToolEntry | undefined {\n\t\tconst entry = this._tools.get(id);\n\t\tif (entry && (!entry.data.when || this._contextKeyService.contextMatchesRules(entry.data.when))) {\n\t\t\treturn entry;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tgetToolByName(name: string): IToolData | undefined {\n\t\tfor (const toolData of this.getTools()) {\n\t\t\tif (toolData.name === name) {\n\t\t\t\treturn toolData;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tasync invokeTool(dto: IToolInvocation, countTokens: CountTokensCallback, token: CancellationToken): Promise<IToolResult> {\n\t\t// When invoking a tool, don't validate the \"when\" clause. An extension may have invoked a tool just as it was becoming disabled, and just let it go through rather than throw and break the chat.\n\t\tlet tool = this._tools.get(dto.toolId);\n\t\tif (!tool) {\n\t\t\tthrow new Error(`Tool ${dto.toolId} was not contributed`);\n\t\t}\n\n\t\tif (!tool.impl) {\n\t\t\tawait this._extensionService.activateByEvent(`onLanguageModelTool:${dto.toolId}`);\n\n\t\t\t// Extension should activate and register the tool implementation\n\t\t\ttool = this._tools.get(dto.toolId);\n\t\t\tif (!tool?.impl) {\n\t\t\t\tthrow new Error(`Tool ${dto.toolId} does not have an implementation registered.`);\n\t\t\t}\n\t\t}\n\n\t\treturn tool.impl.invoke(dto, countTokens, token);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
