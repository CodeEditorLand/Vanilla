{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/common/chatServiceTelemetry.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CommandsRegistry } from \"../../../../platform/commands/common/commands.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport {\n\tChatAgentVoteDirection,\n\tChatCopyKind,\n\ttype IChatUserActionEvent,\n} from \"./chatService.js\";\n\ntype ChatVoteEvent = {\n\tdirection: \"up\" | \"down\";\n\tagentId: string;\n\tcommand: string | undefined;\n\treason: string | undefined;\n};\n\ntype ChatVoteClassification = {\n\tdirection: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"Whether the user voted up or down.\";\n\t};\n\tagentId: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"The ID of the chat agent that this vote is for.\";\n\t};\n\tcommand: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"The name of the slash command that this vote is for.\";\n\t};\n\treason: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"The reason selected by the user for voting down.\";\n\t};\n\towner: \"roblourens\";\n\tcomment: \"Provides insight into the performance of Chat agents.\";\n};\n\ntype ChatCopyEvent = {\n\tcopyKind: \"action\" | \"toolbar\";\n\tagentId: string;\n\tcommand: string | undefined;\n};\n\ntype ChatCopyClassification = {\n\tcopyKind: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"How the copy was initiated.\";\n\t};\n\tagentId: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"The ID of the chat agent that the copy acted on.\";\n\t};\n\tcommand: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"The name of the slash command the copy acted on.\";\n\t};\n\towner: \"roblourens\";\n\tcomment: \"Provides insight into the usage of Chat features.\";\n};\n\ntype ChatInsertEvent = {\n\tnewFile: boolean;\n\tagentId: string;\n\tcommand: string | undefined;\n};\n\ntype ChatInsertClassification = {\n\tnewFile: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"Whether the code was inserted into a new untitled file.\";\n\t};\n\tagentId: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"The ID of the chat agent that this insertion is for.\";\n\t};\n\tcommand: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"The name of the slash command that this insertion is for.\";\n\t};\n\towner: \"roblourens\";\n\tcomment: \"Provides insight into the usage of Chat features.\";\n};\n\ntype ChatApplyEvent = {\n\tnewFile: boolean;\n\tagentId: string;\n\tcommand: string | undefined;\n\tcodeMapper: string | undefined;\n\teditsProposed: boolean;\n};\n\ntype ChatApplyClassification = {\n\tnewFile: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"Whether the code was inserted into a new untitled file.\";\n\t};\n\tagentId: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"The ID of the chat agent that this insertion is for.\";\n\t};\n\tcommand: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"The name of the slash command that this insertion is for.\";\n\t};\n\tcodeMapper: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"The code mapper that wa used to compute the edit.\";\n\t};\n\teditsProposed: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"Whether there was a change proposed to the user.\";\n\t};\n\towner: \"aeschli\";\n\tcomment: \"Provides insight into the usage of Chat features.\";\n};\n\ntype ChatCommandEvent = {\n\tcommandId: string;\n\tagentId: string;\n\tcommand: string | undefined;\n};\n\ntype ChatCommandClassification = {\n\tcommandId: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"The id of the command that was executed.\";\n\t};\n\tagentId: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"The ID of the related chat agent.\";\n\t};\n\tcommand: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"The name of the related slash command.\";\n\t};\n\towner: \"roblourens\";\n\tcomment: \"Provides insight into the usage of Chat features.\";\n};\n\ntype ChatFollowupEvent = {\n\tagentId: string;\n\tcommand: string | undefined;\n};\n\ntype ChatFollowupClassification = {\n\tagentId: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"The ID of the related chat agent.\";\n\t};\n\tcommand: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"The name of the related slash command.\";\n\t};\n\towner: \"roblourens\";\n\tcomment: \"Provides insight into the usage of Chat features.\";\n};\n\ntype ChatTerminalEvent = {\n\tlanguageId: string;\n\tagentId: string;\n\tcommand: string | undefined;\n};\n\ntype ChatTerminalClassification = {\n\tlanguageId: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"The language of the code that was run in the terminal.\";\n\t};\n\tagentId: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"The ID of the related chat agent.\";\n\t};\n\tcommand: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"The name of the related slash command.\";\n\t};\n\towner: \"roblourens\";\n\tcomment: \"Provides insight into the usage of Chat features.\";\n};\n\ntype ChatFollowupsRetrievedEvent = {\n\tagentId: string;\n\tcommand: string | undefined;\n\tnumFollowups: number;\n};\n\ntype ChatFollowupsRetrievedClassification = {\n\tagentId: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"The ID of the related chat agent.\";\n\t};\n\tcommand: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"The name of the related slash command.\";\n\t};\n\tnumFollowups: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"The number of followup prompts returned by the agent.\";\n\t};\n\towner: \"roblourens\";\n\tcomment: \"Provides insight into the usage of Chat features.\";\n};\n\nexport class ChatServiceTelemetry {\n\tconstructor(\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t) {}\n\n\tnotifyUserAction(action: IChatUserActionEvent): void {\n\t\tif (action.action.kind === \"vote\") {\n\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\tChatVoteEvent,\n\t\t\t\tChatVoteClassification\n\t\t\t>(\"interactiveSessionVote\", {\n\t\t\t\tdirection:\n\t\t\t\t\taction.action.direction === ChatAgentVoteDirection.Up\n\t\t\t\t\t\t? \"up\"\n\t\t\t\t\t\t: \"down\",\n\t\t\t\tagentId: action.agentId ?? \"\",\n\t\t\t\tcommand: action.command,\n\t\t\t\treason: action.action.reason,\n\t\t\t});\n\t\t} else if (action.action.kind === \"copy\") {\n\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\tChatCopyEvent,\n\t\t\t\tChatCopyClassification\n\t\t\t>(\"interactiveSessionCopy\", {\n\t\t\t\tcopyKind:\n\t\t\t\t\taction.action.copyKind === ChatCopyKind.Action\n\t\t\t\t\t\t? \"action\"\n\t\t\t\t\t\t: \"toolbar\",\n\t\t\t\tagentId: action.agentId ?? \"\",\n\t\t\t\tcommand: action.command,\n\t\t\t});\n\t\t} else if (action.action.kind === \"insert\") {\n\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\tChatInsertEvent,\n\t\t\t\tChatInsertClassification\n\t\t\t>(\"interactiveSessionInsert\", {\n\t\t\t\tnewFile: !!action.action.newFile,\n\t\t\t\tagentId: action.agentId ?? \"\",\n\t\t\t\tcommand: action.command,\n\t\t\t});\n\t\t} else if (action.action.kind === \"apply\") {\n\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\tChatApplyEvent,\n\t\t\t\tChatApplyClassification\n\t\t\t>(\"interactiveSessionApply\", {\n\t\t\t\tnewFile: !!action.action.newFile,\n\t\t\t\tcodeMapper: action.action.codeMapper,\n\t\t\t\tagentId: action.agentId ?? \"\",\n\t\t\t\tcommand: action.command,\n\t\t\t\teditsProposed: !!action.action.editsProposed,\n\t\t\t});\n\t\t} else if (action.action.kind === \"command\") {\n\t\t\t// TODO not currently called\n\t\t\tconst command = CommandsRegistry.getCommand(\n\t\t\t\taction.action.commandButton.command.id,\n\t\t\t);\n\t\t\tconst commandId = command\n\t\t\t\t? action.action.commandButton.command.id\n\t\t\t\t: \"INVALID\";\n\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\tChatCommandEvent,\n\t\t\t\tChatCommandClassification\n\t\t\t>(\"interactiveSessionCommand\", {\n\t\t\t\tcommandId,\n\t\t\t\tagentId: action.agentId ?? \"\",\n\t\t\t\tcommand: action.command,\n\t\t\t});\n\t\t} else if (action.action.kind === \"runInTerminal\") {\n\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\tChatTerminalEvent,\n\t\t\t\tChatTerminalClassification\n\t\t\t>(\"interactiveSessionRunInTerminal\", {\n\t\t\t\tlanguageId: action.action.languageId ?? \"\",\n\t\t\t\tagentId: action.agentId ?? \"\",\n\t\t\t\tcommand: action.command,\n\t\t\t});\n\t\t} else if (action.action.kind === \"followUp\") {\n\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\tChatFollowupEvent,\n\t\t\t\tChatFollowupClassification\n\t\t\t>(\"chatFollowupClicked\", {\n\t\t\t\tagentId: action.agentId ?? \"\",\n\t\t\t\tcommand: action.command,\n\t\t\t});\n\t\t}\n\t}\n\n\tretrievedFollowups(\n\t\tagentId: string,\n\t\tcommand: string | undefined,\n\t\tnumFollowups: number,\n\t): void {\n\t\tthis.telemetryService.publicLog2<\n\t\t\tChatFollowupsRetrievedEvent,\n\t\t\tChatFollowupsRetrievedClassification\n\t\t>(\"chatFollowupsRetrieved\", {\n\t\t\tagentId,\n\t\t\tcommand,\n\t\t\tnumFollowups,\n\t\t});\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,wBAAwB;AACjC,SAAS,yBAAyB;AAClC;AAAA,EACC;AAAA,EACA;AAAA,OAEM;AA8NA,IAAM,uBAAN,MAA2B;AAAA,EACjC,YACqC,kBACnC;AADmC;AAAA,EAClC;AAAA,EA5OJ,OAyOkC;AAAA;AAAA;AAAA,EAKjC,iBAAiB,QAAoC;AACpD,QAAI,OAAO,OAAO,SAAS,QAAQ;AAClC,WAAK,iBAAiB,WAGpB,0BAA0B;AAAA,QAC3B,WACC,OAAO,OAAO,cAAc,uBAAuB,KAChD,OACA;AAAA,QACJ,SAAS,OAAO,WAAW;AAAA,QAC3B,SAAS,OAAO;AAAA,QAChB,QAAQ,OAAO,OAAO;AAAA,MACvB,CAAC;AAAA,IACF,WAAW,OAAO,OAAO,SAAS,QAAQ;AACzC,WAAK,iBAAiB,WAGpB,0BAA0B;AAAA,QAC3B,UACC,OAAO,OAAO,aAAa,aAAa,SACrC,WACA;AAAA,QACJ,SAAS,OAAO,WAAW;AAAA,QAC3B,SAAS,OAAO;AAAA,MACjB,CAAC;AAAA,IACF,WAAW,OAAO,OAAO,SAAS,UAAU;AAC3C,WAAK,iBAAiB,WAGpB,4BAA4B;AAAA,QAC7B,SAAS,CAAC,CAAC,OAAO,OAAO;AAAA,QACzB,SAAS,OAAO,WAAW;AAAA,QAC3B,SAAS,OAAO;AAAA,MACjB,CAAC;AAAA,IACF,WAAW,OAAO,OAAO,SAAS,SAAS;AAC1C,WAAK,iBAAiB,WAGpB,2BAA2B;AAAA,QAC5B,SAAS,CAAC,CAAC,OAAO,OAAO;AAAA,QACzB,YAAY,OAAO,OAAO;AAAA,QAC1B,SAAS,OAAO,WAAW;AAAA,QAC3B,SAAS,OAAO;AAAA,QAChB,eAAe,CAAC,CAAC,OAAO,OAAO;AAAA,MAChC,CAAC;AAAA,IACF,WAAW,OAAO,OAAO,SAAS,WAAW;AAE5C,YAAM,UAAU,iBAAiB;AAAA,QAChC,OAAO,OAAO,cAAc,QAAQ;AAAA,MACrC;AACA,YAAM,YAAY,UACf,OAAO,OAAO,cAAc,QAAQ,KACpC;AACH,WAAK,iBAAiB,WAGpB,6BAA6B;AAAA,QAC9B;AAAA,QACA,SAAS,OAAO,WAAW;AAAA,QAC3B,SAAS,OAAO;AAAA,MACjB,CAAC;AAAA,IACF,WAAW,OAAO,OAAO,SAAS,iBAAiB;AAClD,WAAK,iBAAiB,WAGpB,mCAAmC;AAAA,QACpC,YAAY,OAAO,OAAO,cAAc;AAAA,QACxC,SAAS,OAAO,WAAW;AAAA,QAC3B,SAAS,OAAO;AAAA,MACjB,CAAC;AAAA,IACF,WAAW,OAAO,OAAO,SAAS,YAAY;AAC7C,WAAK,iBAAiB,WAGpB,uBAAuB;AAAA,QACxB,SAAS,OAAO,WAAW;AAAA,QAC3B,SAAS,OAAO;AAAA,MACjB,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAEA,mBACC,SACA,SACA,cACO;AACP,SAAK,iBAAiB,WAGpB,0BAA0B;AAAA,MAC3B;AAAA,MACA;AAAA,MACA;AAAA,IACD,CAAC;AAAA,EACF;AACD;AArGa,uBAAN;AAAA,EAEJ;AAAA,GAFU;",
  "names": []
}
