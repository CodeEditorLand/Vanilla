{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/common/languageModelStats.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from \"../../../../base/common/event.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { ExtensionIdentifier } from \"../../../../platform/extensions/common/extensions.js\";\nimport { createDecorator } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport {\n\tExtensions,\n\tIExtensionFeaturesManagementService,\n\ttype IExtensionFeaturesRegistry,\n} from \"../../../services/extensionManagement/common/extensionFeatures.js\";\n\nexport const ILanguageModelStatsService =\n\tcreateDecorator<ILanguageModelStatsService>(\"ILanguageModelStatsService\");\n\nexport interface ILanguageModelStatsService {\n\treadonly _serviceBrand: undefined;\n\n\tupdate(\n\t\tmodel: string,\n\t\textensionId: ExtensionIdentifier,\n\t\tagent: string | undefined,\n\t\ttokenCount: number | undefined,\n\t): Promise<void>;\n}\n\ninterface LanguageModelStats {\n\textensions: {\n\t\textensionId: string;\n\t\trequestCount: number;\n\t\ttokenCount: number;\n\t\tparticipants: {\n\t\t\tid: string;\n\t\t\trequestCount: number;\n\t\t\ttokenCount: number;\n\t\t}[];\n\t}[];\n}\n\nexport class LanguageModelStatsService\n\textends Disposable\n\timplements ILanguageModelStatsService\n{\n\tprivate static readonly MODEL_STATS_STORAGE_KEY_PREFIX =\n\t\t\"languageModelStats.\";\n\tprivate static readonly MODEL_ACCESS_STORAGE_KEY_PREFIX =\n\t\t\"languageModelAccess.\";\n\n\tdeclare _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeStats = this._register(new Emitter<string>());\n\treadonly onDidChangeLanguageMoelStats = this._onDidChangeStats.event;\n\n\tprivate readonly sessionStats = new Map<string, LanguageModelStats>();\n\n\tconstructor(\n\t\t@IExtensionFeaturesManagementService\n\t\tprivate readonly extensionFeaturesManagementService: IExtensionFeaturesManagementService,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t) {\n\t\tsuper();\n\t\tthis._register(\n\t\t\t_storageService.onDidChangeValue(\n\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\tundefined,\n\t\t\t\tthis._store,\n\t\t\t)((e) => {\n\t\t\t\tconst model = this.getModel(e.key);\n\t\t\t\tif (model) {\n\t\t\t\t\tthis._onDidChangeStats.fire(model);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\thasAccessedModel(extensionId: string, model: string): boolean {\n\t\treturn this.getAccessExtensions(model).includes(\n\t\t\textensionId.toLowerCase(),\n\t\t);\n\t}\n\n\tasync update(\n\t\tmodel: string,\n\t\textensionId: ExtensionIdentifier,\n\t\tagent: string | undefined,\n\t\ttokenCount: number | undefined,\n\t): Promise<void> {\n\t\tawait this.extensionFeaturesManagementService.getAccess(\n\t\t\textensionId,\n\t\t\t\"languageModels\",\n\t\t);\n\n\t\t// update model access\n\t\tthis.addAccess(model, extensionId.value);\n\n\t\t// update session stats\n\t\tlet sessionStats = this.sessionStats.get(model);\n\t\tif (!sessionStats) {\n\t\t\tsessionStats = { extensions: [] };\n\t\t\tthis.sessionStats.set(model, sessionStats);\n\t\t}\n\t\tthis.add(sessionStats, extensionId.value, agent, tokenCount);\n\n\t\tthis.write(model, extensionId.value, agent, tokenCount);\n\t\tthis._onDidChangeStats.fire(model);\n\t}\n\n\tprivate addAccess(model: string, extensionId: string): void {\n\t\textensionId = extensionId.toLowerCase();\n\t\tconst extensions = this.getAccessExtensions(model);\n\t\tif (!extensions.includes(extensionId)) {\n\t\t\textensions.push(extensionId);\n\t\t\tthis._storageService.store(\n\t\t\t\tthis.getAccessKey(model),\n\t\t\t\tJSON.stringify(extensions),\n\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\tStorageTarget.USER,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate getAccessExtensions(model: string): string[] {\n\t\tconst key = this.getAccessKey(model);\n\t\tconst data = this._storageService.get(key, StorageScope.APPLICATION);\n\t\ttry {\n\t\t\tif (data) {\n\t\t\t\tconst parsed = JSON.parse(data);\n\t\t\t\tif (Array.isArray(parsed)) {\n\t\t\t\t\treturn parsed;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// ignore\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate async write(\n\t\tmodel: string,\n\t\textensionId: string,\n\t\tparticipant: string | undefined,\n\t\ttokenCount: number | undefined,\n\t): Promise<void> {\n\t\tconst modelStats = await this.read(model);\n\t\tthis.add(modelStats, extensionId, participant, tokenCount);\n\t\tthis._storageService.store(\n\t\t\tthis.getKey(model),\n\t\t\tJSON.stringify(modelStats),\n\t\t\tStorageScope.APPLICATION,\n\t\t\tStorageTarget.USER,\n\t\t);\n\t}\n\n\tprivate add(\n\t\tmodelStats: LanguageModelStats,\n\t\textensionId: string,\n\t\tparticipant: string | undefined,\n\t\ttokenCount: number | undefined,\n\t): void {\n\t\tlet extensionStats = modelStats.extensions.find((e) =>\n\t\t\tExtensionIdentifier.equals(e.extensionId, extensionId),\n\t\t);\n\t\tif (!extensionStats) {\n\t\t\textensionStats = {\n\t\t\t\textensionId,\n\t\t\t\trequestCount: 0,\n\t\t\t\ttokenCount: 0,\n\t\t\t\tparticipants: [],\n\t\t\t};\n\t\t\tmodelStats.extensions.push(extensionStats);\n\t\t}\n\t\tif (participant) {\n\t\t\tlet participantStats = extensionStats.participants.find(\n\t\t\t\t(p) => p.id === participant,\n\t\t\t);\n\t\t\tif (!participantStats) {\n\t\t\t\tparticipantStats = {\n\t\t\t\t\tid: participant,\n\t\t\t\t\trequestCount: 0,\n\t\t\t\t\ttokenCount: 0,\n\t\t\t\t};\n\t\t\t\textensionStats.participants.push(participantStats);\n\t\t\t}\n\t\t\tparticipantStats.requestCount++;\n\t\t\tparticipantStats.tokenCount += tokenCount ?? 0;\n\t\t} else {\n\t\t\textensionStats.requestCount++;\n\t\t\textensionStats.tokenCount += tokenCount ?? 0;\n\t\t}\n\t}\n\n\tprivate async read(model: string): Promise<LanguageModelStats> {\n\t\ttry {\n\t\t\tconst value = this._storageService.get(\n\t\t\t\tthis.getKey(model),\n\t\t\t\tStorageScope.APPLICATION,\n\t\t\t);\n\t\t\tif (value) {\n\t\t\t\treturn JSON.parse(value);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// ignore\n\t\t}\n\t\treturn { extensions: [] };\n\t}\n\n\tprivate getModel(key: string): string | undefined {\n\t\tif (\n\t\t\tkey.startsWith(\n\t\t\t\tLanguageModelStatsService.MODEL_STATS_STORAGE_KEY_PREFIX,\n\t\t\t)\n\t\t) {\n\t\t\treturn key.substring(\n\t\t\t\tLanguageModelStatsService.MODEL_STATS_STORAGE_KEY_PREFIX.length,\n\t\t\t);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate getKey(model: string): string {\n\t\treturn `${LanguageModelStatsService.MODEL_STATS_STORAGE_KEY_PREFIX}${model}`;\n\t}\n\n\tprivate getAccessKey(model: string): string {\n\t\treturn `${LanguageModelStatsService.MODEL_ACCESS_STORAGE_KEY_PREFIX}${model}`;\n\t}\n}\n\nRegistry.as<IExtensionFeaturesRegistry>(\n\tExtensions.ExtensionFeaturesRegistry,\n).registerExtensionFeature({\n\tid: \"languageModels\",\n\tlabel: localize(\"Language Models\", \"Language Models\"),\n\tdescription: localize(\n\t\t\"languageModels\",\n\t\t\"Language models usage statistics of this extension.\",\n\t),\n\taccess: {\n\t\tcanToggle: false,\n\t},\n});\n"],
  "mappings": "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",
  "names": []
}
