import{MarkdownString as a}from"../../../../base/common/htmlContent.js";import{basename as y}from"../../../../base/common/resources.js";import{URI as I}from"../../../../base/common/uri.js";import"../../../../editor/common/core/range.js";import"../../search/common/search.js";import{appendMarkdownString as c,canMergeMarkdownStrings as b}from"./chatModel.js";import"./chatService.js";const R="http://_vscodecontentref_";function A(l){const e=[];for(const n of l){const t=e[e.length-1];if(n.kind==="inlineReference"){const r="uri"in n.inlineReference?n.inlineReference:"name"in n.inlineReference?{kind:"symbol",symbol:n.inlineReference}:{uri:n.inlineReference},i=I.parse(R).with({fragment:JSON.stringify(r)});let o=n.name;o||(r.kind==="symbol"?o=r.symbol.name:o=y(r.uri));const s=`[${o}](${i.toString()})`;if(t?.kind==="markdownContent"){const d=c(t.content,new a(s));e[e.length-1]={content:d,kind:"markdownContent"}}else e.push({content:new a(s),kind:"markdownContent"})}else if(n.kind==="markdownContent"&&t?.kind==="markdownContent"&&b(t.content,n.content)){const r=c(t.content,n.content);e[e.length-1]={content:r,kind:"markdownContent"}}else if(n.kind==="markdownVuln"){const i=`<vscode_annotation details='${encodeURIComponent(JSON.stringify(n.vulnerabilities))}'>${n.content.value}</vscode_annotation>`;if(t?.kind==="markdownContent"){const o=c(t.content,new a(i));e[e.length-1]={content:o,kind:"markdownContent"}}else e.push({content:new a(i),kind:"markdownContent"})}else e.push(n)}return e}function J(l){const e=[];for(const n of l){const t=e[e.length-1];if(n.kind==="markdownContent")t?.kind==="markdownContent"?e[e.length-1]={content:new a(t.content.value+n.content.value,{isTrusted:t.content.isTrusted}),kind:"markdownContent"}:e.push(n);else if(n.kind==="markdownVuln"){const i=`<vscode_annotation details='${encodeURIComponent(JSON.stringify(n.vulnerabilities))}'>${n.content.value}</vscode_annotation>`;t?.kind==="markdownContent"?e[e.length-1]={content:new a(t.content.value+i,{isTrusted:t.content.isTrusted}),kind:"markdownContent"}:e.push({content:new a(i),kind:"markdownContent"})}}return e}function E(l){const e=[];let n=l,t;for(;(t=/<vscode_annotation details='(.*?)'>(.*?)<\/vscode_annotation>/ms.exec(n))!==null;){const[r,i,o]=t,s=t.index,d=n.substring(0,s),m=d.split(`
`).length-1,u=o.split(`
`).length-1,k=d.lastIndexOf(`
`),f=s-(k+1)+1,g=(d+o).lastIndexOf(`
`),p=s+o.length-(g+1)+1;try{JSON.parse(decodeURIComponent(i)).forEach(({title:C,description:h})=>e.push({title:C,description:h,range:{startLineNumber:m+1,startColumn:f,endLineNumber:m+u+1,endColumn:p}}))}catch{}n=n.substring(0,s)+o+n.substring(s+r.length)}return{newText:n,vulnerabilities:e}}export{A as annotateSpecialMarkdownContent,J as annotateVulnerabilitiesInText,R as contentRefUrl,E as extractVulnerabilitiesFromText};
