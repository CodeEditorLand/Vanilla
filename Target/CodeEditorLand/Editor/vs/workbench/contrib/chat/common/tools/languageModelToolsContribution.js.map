{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/common/tools/languageModelToolsContribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IJSONSchema } from \"../../../../../base/common/jsonSchema.js\";\nimport { DisposableMap } from \"../../../../../base/common/lifecycle.js\";\nimport { joinPath } from \"../../../../../base/common/resources.js\";\nimport { ThemeIcon } from \"../../../../../base/common/themables.js\";\nimport { localize } from \"../../../../../nls.js\";\nimport { ContextKeyExpr } from \"../../../../../platform/contextkey/common/contextkey.js\";\nimport type { ExtensionIdentifier } from \"../../../../../platform/extensions/common/extensions.js\";\nimport { ILogService } from \"../../../../../platform/log/common/log.js\";\nimport type { IWorkbenchContribution } from \"../../../../common/contributions.js\";\nimport * as extensionsRegistry from \"../../../../services/extensions/common/extensionsRegistry.js\";\nimport {\n\tILanguageModelToolsService,\n\ttype IToolData,\n} from \"../languageModelToolsService.js\";\n\ninterface IRawToolContribution {\n\tid: string;\n\tname?: string;\n\ticon?: string | { light: string; dark: string };\n\twhen?: string;\n\tdisplayName?: string;\n\tuserDescription?: string;\n\tmodelDescription: string;\n\tparametersSchema?: IJSONSchema;\n\tcanBeInvokedManually?: boolean;\n}\n\nconst languageModelToolsExtensionPoint =\n\textensionsRegistry.ExtensionsRegistry.registerExtensionPoint<\n\t\tIRawToolContribution[]\n\t>({\n\t\textensionPoint: \"languageModelTools\",\n\t\tactivationEventsGenerator: (\n\t\t\tcontributions: IRawToolContribution[],\n\t\t\tresult,\n\t\t) => {\n\t\t\tfor (const contrib of contributions) {\n\t\t\t\tresult.push(`onLanguageModelTool:${contrib.id}`);\n\t\t\t}\n\t\t},\n\t\tjsonSchema: {\n\t\t\tdescription: localize(\n\t\t\t\t\"vscode.extension.contributes.tools\",\n\t\t\t\t\"Contributes a tool that can be invoked by a language model.\",\n\t\t\t),\n\t\t\ttype: \"array\",\n\t\t\titems: {\n\t\t\t\tadditionalProperties: false,\n\t\t\t\ttype: \"object\",\n\t\t\t\tdefaultSnippets: [{ body: { name: \"\", description: \"\" } }],\n\t\t\t\trequired: [\"id\", \"modelDescription\"],\n\t\t\t\tproperties: {\n\t\t\t\t\tid: {\n\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\"toolId\",\n\t\t\t\t\t\t\t\"A unique id for this tool.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t// Borrow OpenAI's requirement for tool names\n\t\t\t\t\t\tpattern: \"^[\\\\w-]+$\",\n\t\t\t\t\t},\n\t\t\t\t\tname: {\n\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\"toolName\",\n\t\t\t\t\t\t\t\"If {0} is enabled for this tool, the user may use '#' with this name to invoke the tool in a query. Otherwise, the name is not required. Name must not contain whitespace.\",\n\t\t\t\t\t\t\t\"`canBeInvokedManually`\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tpattern: \"^[\\\\w-]+$\",\n\t\t\t\t\t},\n\t\t\t\t\tdisplayName: {\n\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\"toolDisplayName\",\n\t\t\t\t\t\t\t\"A human-readable name for this tool that may be used to describe it in the UI.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t},\n\t\t\t\t\tuserDescription: {\n\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\"toolUserDescription\",\n\t\t\t\t\t\t\t\"A description of this tool that may be shown to the user.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t},\n\t\t\t\t\tmodelDescription: {\n\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\"toolModelDescription\",\n\t\t\t\t\t\t\t\"A description of this tool that may be passed to a language model.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t},\n\t\t\t\t\tparametersSchema: {\n\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\"parametersSchema\",\n\t\t\t\t\t\t\t\"A JSON schema for the parameters this tool accepts.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\t$ref: \"http://json-schema.org/draft-07/schema#\",\n\t\t\t\t\t},\n\t\t\t\t\tcanBeInvokedManually: {\n\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\"canBeInvokedManually\",\n\t\t\t\t\t\t\t\"Whether this tool can be invoked manually by the user through the chat UX.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t},\n\t\t\t\t\ticon: {\n\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\"icon\",\n\t\t\t\t\t\t\t\"An icon that represents this tool. Either a file path, an object with file paths for dark and light themes, or a theme icon reference, like `\\\\$(zap)`\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tanyOf: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tlight: {\n\t\t\t\t\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\t\t\t\t\"icon.light\",\n\t\t\t\t\t\t\t\t\t\t\t\"Icon path when a light theme is used\",\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tdark: {\n\t\t\t\t\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\t\t\t\t\"icon.dark\",\n\t\t\t\t\t\t\t\t\t\t\t\"Icon path when a dark theme is used\",\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\twhen: {\n\t\t\t\t\t\tmarkdownDescription: localize(\n\t\t\t\t\t\t\t\"condition\",\n\t\t\t\t\t\t\t\"Condition which must be true for this tool to be enabled. Note that a tool may still be invoked by another extension even when its `when` condition is false.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t});\n\nfunction toToolKey(extensionIdentifier: ExtensionIdentifier, toolName: string) {\n\treturn `${extensionIdentifier.value}/${toolName}`;\n}\n\nexport class LanguageModelToolsExtensionPointHandler\n\timplements IWorkbenchContribution\n{\n\tstatic readonly ID = \"workbench.contrib.toolsExtensionPointHandler\";\n\n\tprivate _registrationDisposables = new DisposableMap<string>();\n\n\tconstructor(\n\t\t@ILanguageModelToolsService languageModelToolsService: ILanguageModelToolsService,\n\t\t@ILogService logService: ILogService,\n\t) {\n\t\tlanguageModelToolsExtensionPoint.setHandler((extensions, delta) => {\n\t\t\tfor (const extension of delta.added) {\n\t\t\t\tfor (const rawTool of extension.value) {\n\t\t\t\t\tif (!rawTool.id || !rawTool.modelDescription) {\n\t\t\t\t\t\tlogService.error(\n\t\t\t\t\t\t\t`Extension '${extension.description.identifier.value}' CANNOT register tool without name and modelDescription: ${JSON.stringify(rawTool)}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!rawTool.id.match(/^[\\w-]+$/)) {\n\t\t\t\t\t\tlogService.error(\n\t\t\t\t\t\t\t`Extension '${extension.description.identifier.value}' CANNOT register tool with invalid id: ${rawTool.id}. The id must match /^[\\\\w-]+$/.`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (rawTool.canBeInvokedManually && !rawTool.name) {\n\t\t\t\t\t\tlogService.error(\n\t\t\t\t\t\t\t`Extension '${extension.description.identifier.value}' CANNOT register tool with 'canBeInvokedManually' set without a name: ${JSON.stringify(rawTool)}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst rawIcon = rawTool.icon;\n\t\t\t\t\tlet icon: IToolData[\"icon\"] | undefined;\n\t\t\t\t\tif (typeof rawIcon === \"string\") {\n\t\t\t\t\t\ticon = ThemeIcon.fromString(rawIcon) ?? {\n\t\t\t\t\t\t\tdark: joinPath(\n\t\t\t\t\t\t\t\textension.description.extensionLocation,\n\t\t\t\t\t\t\t\trawIcon,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tlight: joinPath(\n\t\t\t\t\t\t\t\textension.description.extensionLocation,\n\t\t\t\t\t\t\t\trawIcon,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if (rawIcon) {\n\t\t\t\t\t\ticon = {\n\t\t\t\t\t\t\tdark: joinPath(\n\t\t\t\t\t\t\t\textension.description.extensionLocation,\n\t\t\t\t\t\t\t\trawIcon.dark,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tlight: joinPath(\n\t\t\t\t\t\t\t\textension.description.extensionLocation,\n\t\t\t\t\t\t\t\trawIcon.light,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tconst tool: IToolData = {\n\t\t\t\t\t\t...rawTool,\n\t\t\t\t\t\ticon,\n\t\t\t\t\t\twhen: rawTool.when\n\t\t\t\t\t\t\t? ContextKeyExpr.deserialize(rawTool.when)\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t};\n\t\t\t\t\tconst disposable =\n\t\t\t\t\t\tlanguageModelToolsService.registerToolData(tool);\n\t\t\t\t\tthis._registrationDisposables.set(\n\t\t\t\t\t\ttoToolKey(extension.description.identifier, rawTool.id),\n\t\t\t\t\t\tdisposable,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const extension of delta.removed) {\n\t\t\t\tfor (const tool of extension.value) {\n\t\t\t\t\tthis._registrationDisposables.deleteAndDispose(\n\t\t\t\t\t\ttoToolKey(extension.description.identifier, tool.id),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
