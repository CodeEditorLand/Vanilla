{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/common/tools/languageModelToolsContribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nimport { IJSONSchema } from '../../../../../base/common/jsonSchema.js';\nimport { DisposableMap } from '../../../../../base/common/lifecycle.js';\nimport { joinPath } from '../../../../../base/common/resources.js';\nimport { ThemeIcon } from '../../../../../base/common/themables.js';\nimport { localize } from '../../../../../nls.js';\nimport { ContextKeyExpr } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { ExtensionIdentifier } from '../../../../../platform/extensions/common/extensions.js';\nimport { ILogService } from '../../../../../platform/log/common/log.js';\nimport { IWorkbenchContribution } from '../../../../common/contributions.js';\nimport { ILanguageModelToolsService, IToolData } from '../languageModelToolsService.js';\nimport * as extensionsRegistry from '../../../../services/extensions/common/extensionsRegistry.js';\n\ninterface IRawToolContribution {\n\tid: string;\n\tname?: string;\n\ticon?: string | { light: string; dark: string };\n\twhen?: string;\n\tdisplayName?: string;\n\tuserDescription?: string;\n\tmodelDescription: string;\n\tparametersSchema?: IJSONSchema;\n\tcanBeInvokedManually?: boolean;\n}\n\nconst languageModelToolsExtensionPoint = extensionsRegistry.ExtensionsRegistry.registerExtensionPoint<IRawToolContribution[]>({\n\textensionPoint: 'languageModelTools',\n\tactivationEventsGenerator: (contributions: IRawToolContribution[], result) => {\n\t\tfor (const contrib of contributions) {\n\t\t\tresult.push(`onLanguageModelTool:${contrib.id}`);\n\t\t}\n\t},\n\tjsonSchema: {\n\t\tdescription: localize('vscode.extension.contributes.tools', 'Contributes a tool that can be invoked by a language model.'),\n\t\ttype: 'array',\n\t\titems: {\n\t\t\tadditionalProperties: false,\n\t\t\ttype: 'object',\n\t\t\tdefaultSnippets: [{ body: { name: '', description: '' } }],\n\t\t\trequired: ['id', 'modelDescription'],\n\t\t\tproperties: {\n\t\t\t\tid: {\n\t\t\t\t\tdescription: localize('toolId', \"A unique id for this tool.\"),\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\t// Borrow OpenAI's requirement for tool names\n\t\t\t\t\tpattern: '^[\\\\w-]+$'\n\t\t\t\t},\n\t\t\t\tname: {\n\t\t\t\t\tdescription: localize('toolName', \"If {0} is enabled for this tool, the user may use '#' with this name to invoke the tool in a query. Otherwise, the name is not required. Name must not contain whitespace.\", '`canBeInvokedManually`'),\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tpattern: '^[\\\\w-]+$'\n\t\t\t\t},\n\t\t\t\tdisplayName: {\n\t\t\t\t\tdescription: localize('toolDisplayName', \"A human-readable name for this tool that may be used to describe it in the UI.\"),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\tuserDescription: {\n\t\t\t\t\tdescription: localize('toolUserDescription', \"A description of this tool that may be shown to the user.\"),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\tmodelDescription: {\n\t\t\t\t\tdescription: localize('toolModelDescription', \"A description of this tool that may be passed to a language model.\"),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\tparametersSchema: {\n\t\t\t\t\tdescription: localize('parametersSchema', \"A JSON schema for the parameters this tool accepts.\"),\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\t$ref: 'http://json-schema.org/draft-07/schema#'\n\t\t\t\t},\n\t\t\t\tcanBeInvokedManually: {\n\t\t\t\t\tdescription: localize('canBeInvokedManually', \"Whether this tool can be invoked manually by the user through the chat UX.\"),\n\t\t\t\t\ttype: 'boolean'\n\t\t\t\t},\n\t\t\t\ticon: {\n\t\t\t\t\tdescription: localize('icon', \"An icon that represents this tool. Either a file path, an object with file paths for dark and light themes, or a theme icon reference, like `\\\\$(zap)`\"),\n\t\t\t\t\tanyOf: [{\n\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tlight: {\n\t\t\t\t\t\t\t\tdescription: localize('icon.light', 'Icon path when a light theme is used'),\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdark: {\n\t\t\t\t\t\t\t\tdescription: localize('icon.dark', 'Icon path when a dark theme is used'),\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}]\n\t\t\t\t},\n\t\t\t\twhen: {\n\t\t\t\t\tmarkdownDescription: localize('condition', \"Condition which must be true for this tool to be enabled. Note that a tool may still be invoked by another extension even when its `when` condition is false.\"),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\nfunction toToolKey(extensionIdentifier: ExtensionIdentifier, toolName: string) {\n\treturn `${extensionIdentifier.value}/${toolName}`;\n}\n\nexport class LanguageModelToolsExtensionPointHandler implements IWorkbenchContribution {\n\tstatic readonly ID = 'workbench.contrib.toolsExtensionPointHandler';\n\n\tprivate _registrationDisposables = new DisposableMap<string>();\n\n\tconstructor(\n\t\t@ILanguageModelToolsService languageModelToolsService: ILanguageModelToolsService,\n\t\t@ILogService logService: ILogService,\n\t) {\n\t\tlanguageModelToolsExtensionPoint.setHandler((extensions, delta) => {\n\t\t\tfor (const extension of delta.added) {\n\t\t\t\tfor (const rawTool of extension.value) {\n\t\t\t\t\tif (!rawTool.id || !rawTool.modelDescription) {\n\t\t\t\t\t\tlogService.error(`Extension '${extension.description.identifier.value}' CANNOT register tool without name and modelDescription: ${JSON.stringify(rawTool)}`);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!rawTool.id.match(/^[\\w-]+$/)) {\n\t\t\t\t\t\tlogService.error(`Extension '${extension.description.identifier.value}' CANNOT register tool with invalid id: ${rawTool.id}. The id must match /^[\\\\w-]+$/.`);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (rawTool.canBeInvokedManually && !rawTool.name) {\n\t\t\t\t\t\tlogService.error(`Extension '${extension.description.identifier.value}' CANNOT register tool with 'canBeInvokedManually' set without a name: ${JSON.stringify(rawTool)}`);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst rawIcon = rawTool.icon;\n\t\t\t\t\tlet icon: IToolData['icon'] | undefined;\n\t\t\t\t\tif (typeof rawIcon === 'string') {\n\t\t\t\t\t\ticon = ThemeIcon.fromString(rawIcon) ?? {\n\t\t\t\t\t\t\tdark: joinPath(extension.description.extensionLocation, rawIcon),\n\t\t\t\t\t\t\tlight: joinPath(extension.description.extensionLocation, rawIcon)\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if (rawIcon) {\n\t\t\t\t\t\ticon = {\n\t\t\t\t\t\t\tdark: joinPath(extension.description.extensionLocation, rawIcon.dark),\n\t\t\t\t\t\t\tlight: joinPath(extension.description.extensionLocation, rawIcon.light)\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tconst tool: IToolData = {\n\t\t\t\t\t\t...rawTool,\n\t\t\t\t\t\ticon,\n\t\t\t\t\t\twhen: rawTool.when ? ContextKeyExpr.deserialize(rawTool.when) : undefined,\n\t\t\t\t\t};\n\t\t\t\t\tconst disposable = languageModelToolsService.registerToolData(tool);\n\t\t\t\t\tthis._registrationDisposables.set(toToolKey(extension.description.identifier, rawTool.id), disposable);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const extension of delta.removed) {\n\t\t\t\tfor (const tool of extension.value) {\n\t\t\t\t\tthis._registrationDisposables.deleteAndDispose(toToolKey(extension.description.identifier, tool.id));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
