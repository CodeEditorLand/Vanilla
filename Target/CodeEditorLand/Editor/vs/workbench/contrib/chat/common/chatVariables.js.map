{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/common/chatVariables.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport type { IDisposable } from \"../../../../base/common/lifecycle.js\";\nimport type { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport type { IRange } from \"../../../../editor/common/core/range.js\";\nimport type { Location } from \"../../../../editor/common/languages.js\";\nimport { createDecorator } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport type { ChatAgentLocation } from \"./chatAgents.js\";\nimport type {\n\tIChatModel,\n\tIChatRequestVariableData,\n\tIChatRequestVariableEntry,\n} from \"./chatModel.js\";\nimport type { IParsedChatRequest } from \"./chatParserTypes.js\";\nimport type {\n\tIChatContentReference,\n\tIChatProgressMessage,\n} from \"./chatService.js\";\n\nexport interface IChatVariableData {\n\tid: string;\n\tname: string;\n\ticon?: ThemeIcon;\n\tfullName?: string;\n\tdescription: string;\n\tmodelDescription?: string;\n\tisSlow?: boolean;\n\tcanTakeArgument?: boolean;\n}\n\nexport type IChatRequestVariableValue = string | URI | Location | unknown;\n\nexport type IChatVariableResolverProgress =\n\t| IChatContentReference\n\t| IChatProgressMessage;\n\nexport interface IChatVariableResolver {\n\t(\n\t\tmessageText: string,\n\t\targ: string | undefined,\n\t\tmodel: IChatModel,\n\t\tprogress: (part: IChatVariableResolverProgress) => void,\n\t\ttoken: CancellationToken,\n\t): Promise<IChatRequestVariableValue | undefined>;\n}\n\nexport const IChatVariablesService = createDecorator<IChatVariablesService>(\n\t\"IChatVariablesService\",\n);\n\nexport interface IChatVariablesService {\n\t_serviceBrand: undefined;\n\tregisterVariable(\n\t\tdata: IChatVariableData,\n\t\tresolver: IChatVariableResolver,\n\t): IDisposable;\n\thasVariable(name: string): boolean;\n\tgetVariable(name: string): IChatVariableData | undefined;\n\tgetVariables(\n\t\tlocation: ChatAgentLocation,\n\t): Iterable<Readonly<IChatVariableData>>;\n\tgetDynamicVariables(sessionId: string): ReadonlyArray<IDynamicVariable>; // should be its own service?\n\tattachContext(\n\t\tname: string,\n\t\tvalue: string | URI | Location | unknown,\n\t\tlocation: ChatAgentLocation,\n\t): void;\n\n\t/**\n\t * Resolves all variables that occur in `prompt`\n\t */\n\tresolveVariables(\n\t\tprompt: IParsedChatRequest,\n\t\tattachedContextVariables: IChatRequestVariableEntry[] | undefined,\n\t\tmodel: IChatModel,\n\t\tprogress: (part: IChatVariableResolverProgress) => void,\n\t\ttoken: CancellationToken,\n\t): Promise<IChatRequestVariableData>;\n\tresolveVariable(\n\t\tvariableName: string,\n\t\tpromptText: string,\n\t\tmodel: IChatModel,\n\t\tprogress: (part: IChatVariableResolverProgress) => void,\n\t\ttoken: CancellationToken,\n\t): Promise<IChatRequestVariableValue | undefined>;\n}\n\nexport interface IDynamicVariable {\n\trange: IRange;\n\tid: string;\n\tfullName?: string;\n\ticon?: ThemeIcon;\n\tprefix?: string;\n\tmodelDescription?: string;\n\tdata: IChatRequestVariableValue;\n}\n"],
  "mappings": "AAWA,SAAS,uBAAuB;AAwCzB,MAAM,wBAAwB;AAAA,EACpC;AACD;",
  "names": []
}
