var ye=Object.defineProperty;var Re=Object.getOwnPropertyDescriptor;var Y=(y,p,e,s)=>{for(var t=s>1?void 0:s?Re(p,e):p,n=y.length-1,i;n>=0;n--)(i=y[n])&&(t=(s?i(p,e,t):i(t))||t);return s&&t&&ye(p,e,t),t},u=(y,p)=>(e,s)=>p(e,s,y);import{DeferredPromise as we}from"../../../../base/common/async.js";import{CancellationToken as H,CancellationTokenSource as Z}from"../../../../base/common/cancellation.js";import{toErrorMessage as De}from"../../../../base/common/errorMessage.js";import{ErrorNoTelemetry as ee}from"../../../../base/common/errors.js";import{Emitter as te}from"../../../../base/common/event.js";import{MarkdownString as x}from"../../../../base/common/htmlContent.js";import{Iterable as Ae}from"../../../../base/common/iterator.js";import{Disposable as qe,DisposableMap as j}from"../../../../base/common/lifecycle.js";import{revive as se}from"../../../../base/common/marshalling.js";import{StopWatch as Pe}from"../../../../base/common/stopwatch.js";import{URI as ne}from"../../../../base/common/uri.js";import{localize as ie}from"../../../../nls.js";import{IConfigurationService as be}from"../../../../platform/configuration/common/configuration.js";import{IContextKeyService as _e}from"../../../../platform/contextkey/common/contextkey.js";import{IInstantiationService as Te}from"../../../../platform/instantiation/common/instantiation.js";import{ILogService as Me}from"../../../../platform/log/common/log.js";import{Progress as ke}from"../../../../platform/progress/common/progress.js";import{IStorageService as Ee,StorageScope as v,StorageTarget as z}from"../../../../platform/storage/common/storage.js";import{ITelemetryService as Fe}from"../../../../platform/telemetry/common/telemetry.js";import{IWorkspaceContextService as $e}from"../../../../platform/workspace/common/workspace.js";import{IWorkbenchAssignmentService as Oe}from"../../../services/assignment/common/assignmentService.js";import{IExtensionService as xe}from"../../../services/extensions/common/extensions.js";import{ChatAgentLocation as b,IChatAgentService as ze}from"./chatAgents.js";import{CONTEXT_VOTE_UP_ENABLED as Le}from"./chatContextKeys.js";import{ChatModel as ae,ChatRequestModel as Ne,ChatRequestRemovalReason as We,ChatWelcomeMessageModel as Ue,normalizeSerializableChatData as Ve,updateRanges as re}from"./chatModel.js";import{ChatRequestAgentPart as oe,ChatRequestAgentSubcommandPart as ce,ChatRequestSlashCommandPart as He,chatAgentLeader as je,chatSubcommandLeader as Be,getPromptText as de}from"./chatParserTypes.js";import{ChatRequestParser as le}from"./chatRequestParser.js";import{ChatServiceTelemetry as Je}from"./chatServiceTelemetry.js";import{IChatSlashCommandService as Ke}from"./chatSlashCommands.js";import{IChatVariablesService as Xe}from"./chatVariables.js";import{ChatMessageRole as he}from"./languageModels.js";const L="interactive.sessions",N="chat.workspaceTransfer",ue=1e3*60,ge=25;class Qe{constructor(p,e){this.cancellationTokenSource=p;this.requestId=e}dispose(){this.cancellationTokenSource.dispose()}cancel(){this.cancellationTokenSource.cancel()}}let W=class extends qe{constructor(e,s,t,n,i,a,r,o,l,c,h,f){super();this.storageService=e;this.logService=s;this.extensionService=t;this.instantiationService=n;this.telemetryService=i;this.workspaceContextService=a;this.chatSlashCommandService=r;this.chatVariablesService=o;this.chatAgentService=l;this.configurationService=f;this._chatServiceTelemetry=this.instantiationService.createInstance(Je);const g=!a.getWorkspace().folders.length,_=e.get(L,g?v.APPLICATION:v.WORKSPACE,"");if(_){this._persistedSessions=this.deserializeChats(_);const A=Object.keys(this._persistedSessions).length;A>0&&this.trace("constructor",`Restored ${A} persisted sessions`)}else this._persistedSessions={};const T=this.getTransferredSessionData(),C=T?.chat;C&&(this.trace("constructor",`Transferred session ${C.sessionId}`),this._persistedSessions[C.sessionId]=C,this._transferredSessionData={sessionId:C.sessionId,inputValue:T.inputValue}),this._register(e.onWillSaveState(()=>this.saveState()));const E=Le.bindTo(h);c.getTreatment("chatVoteUpEnabled").then(A=>E.set(!!A))}_sessionModels=this._register(new j);_pendingRequests=this._register(new j);_persistedSessions;_deletedChatIds=new Set;_transferredSessionData;get transferredSessionData(){return this._transferredSessionData}_onDidPerformUserAction=this._register(new te);onDidPerformUserAction=this._onDidPerformUserAction.event;_onDidDisposeSession=this._register(new te);onDidDisposeSession=this._onDidDisposeSession.event;_sessionFollowupCancelTokens=this._register(new j);_chatServiceTelemetry;isEnabled(e){return this.chatAgentService.getContributedDefaultAgent(e)!==void 0}saveState(){const e=Array.from(this._sessionModels.values()).filter(t=>t.initialLocation===b.Panel).filter(t=>t.getRequests().length>0);if(!this.workspaceContextService.getWorkspace().folders.length)this.syncEmptyWindowChats(e);else{let t=e;t=t.concat(Object.values(this._persistedSessions).filter(i=>!this._sessionModels.has(i.sessionId)).filter(i=>i.requests.length)),t.sort((i,a)=>(a.creationDate??0)-(i.creationDate??0)),t=t.slice(0,ge),t.length&&this.trace("onWillSaveState",`Persisting ${t.length} sessions`);const n=JSON.stringify(t);t.length&&this.trace("onWillSaveState",`Persisting ${n.length} chars`),this.storageService.store(L,n,v.WORKSPACE,z.MACHINE)}this._deletedChatIds.clear()}syncEmptyWindowChats(e){const s=this.storageService.get(L,v.APPLICATION,""),t=this._persistedSessions;let n;if(s){n=this.deserializeChats(s);const o=Object.keys(n).length;o>0&&this.trace("constructor",`Restored ${o} persisted sessions`)}else n={};this._deletedChatIds.forEach(o=>delete n[o]),Object.values(t).forEach(o=>{const l=n[o.sessionId];l&&o.requests.length>l.requests.length?n[o.sessionId]=o:!l&&o.isNew&&(o.isNew=!1,n[o.sessionId]=o)}),this._persistedSessions=n;const i={...this._persistedSessions};for(const o of e)i[o.sessionId]=o;let a=Object.values(i);a.sort((o,l)=>(l.creationDate??0)-(o.creationDate??0)),a=a.slice(0,ge);const r=JSON.stringify(a);this.storageService.store(L,r,v.APPLICATION,z.MACHINE)}notifyUserAction(e){this._chatServiceTelemetry.notifyUserAction(e),this._onDidPerformUserAction.fire(e)}setChatSessionTitle(e,s){const t=this._sessionModels.get(e);if(t){t.setCustomTitle(s);return}const n=this._persistedSessions[e];n&&(n.customTitle=s)}trace(e,s){s?this.logService.trace(`ChatService#${e}: ${s}`):this.logService.trace(`ChatService#${e}`)}error(e,s){this.logService.error(`ChatService#${e} ${s}`)}deserializeChats(e){try{const s=se(JSON.parse(e));if(!Array.isArray(s))throw new Error("Expected array");return s.reduce((n,i)=>{for(const a of i.requests)Array.isArray(a.response)?a.response=a.response.map(r=>typeof r=="string"?new x(r):r):typeof a.response=="string"&&(a.response=[new x(a.response)]);return n[i.sessionId]=Ve(i),n},{})}catch(s){return this.error("deserializeChats",`Malformed session data: ${s}. [${e.substring(0,20)}${e.length>20?"...":""}]`),{}}}getTransferredSessionData(){const e=this.storageService.getObject(N,v.PROFILE,[]),s=this.workspaceContextService.getWorkspace().folders[0]?.uri;if(!s)return;const t=s.toString(),n=Date.now(),i=e.find(r=>ne.revive(r.toWorkspace).toString()===t&&n-r.timestampInMilliseconds<ue),a=e.filter(r=>ne.revive(r.toWorkspace).toString()!==t&&n-r.timestampInMilliseconds<ue);return this.storageService.store(N,JSON.stringify(a),v.PROFILE,z.MACHINE),i}getHistory(){const s=Object.values(this._persistedSessions).filter(n=>n.requests.length>0).filter(n=>!this._sessionModels.has(n.sessionId)).filter(n=>!n.isImported).map(n=>{const i=n.customTitle??ae.getDefaultTitle(n.requests);return{sessionId:n.sessionId,title:i,lastMessageDate:n.lastMessageDate,isActive:!1}});return[...Array.from(this._sessionModels.values()).filter(n=>!n.isImported).map(n=>{const i=n.title||ie("newChat","New Chat");return{sessionId:n.sessionId,title:i,lastMessageDate:n.lastMessageDate,isActive:!0}}),...s]}removeHistoryEntry(e){this._persistedSessions[e]&&(this._deletedChatIds.add(e),delete this._persistedSessions[e],this.saveState())}clearAllHistoryEntries(){Object.values(this._persistedSessions).forEach(e=>this._deletedChatIds.add(e.sessionId)),this._persistedSessions={},this.saveState()}startSession(e,s){return this.trace("startSession"),this._startSession(void 0,e,s)}_startSession(e,s,t){const n=this.instantiationService.createInstance(ae,e,s);return this._sessionModels.set(n.sessionId,n),this.initializeSession(n,t),n}async initializeSession(e,s){try{this.trace("initializeSession",`Initialize session ${e.sessionId}`),e.startInitialize(),await this.extensionService.whenInstalledExtensionsRegistered();const t=this.chatAgentService.getContributedDefaultAgent(e.initialLocation)??this.chatAgentService.getContributedDefaultAgent(b.Panel);if(!t)throw new ee("No default agent contributed");await this.extensionService.activateByEvent(`onChatParticipant:${t.id}`);const n=this.chatAgentService.getActivatedAgents().find(r=>r.id===t.id);if(!n)throw new ee("No default agent registered");const i=e.welcomeMessage?void 0:await n.provideWelcomeMessage?.(e.initialLocation,s)??void 0,a=i&&this.instantiationService.createInstance(Ue,i.map(r=>typeof r=="string"?new x(r):r),await n.provideSampleQuestions?.(e.initialLocation,s)??[]);e.initialize(a)}catch(t){this.trace("startSession",`initializeSession failed: ${t}`),e.setInitializationError(t),this._sessionModels.deleteAndDispose(e.sessionId),this._onDidDisposeSession.fire({sessionId:e.sessionId,reason:"initializationFailed"})}}getSession(e){return this._sessionModels.get(e)}getOrRestoreSession(e){this.trace("getOrRestoreSession",`sessionId: ${e}`);const s=this._sessionModels.get(e);if(s)return s;const t=se(this._persistedSessions[e]);if(t)return e===this.transferredSessionData?.sessionId&&(this._transferredSessionData=void 0),this._startSession(t,t.initialLocation??b.Panel,H.None)}loadSessionFromContent(e){return this._startSession(e,e.initialLocation??b.Panel,H.None)}async resendRequest(e,s){const t=this._sessionModels.get(e.session.sessionId);if(!t&&t!==e.session)throw new Error(`Unknown session: ${e.session.sessionId}`);await t.waitForInitialization();const n=this._pendingRequests.get(e.session.sessionId);n&&(this.trace("resendRequest",`Session ${e.session.sessionId} already has a pending request, cancelling...`),n.cancel());const i=s?.location??t.initialLocation,a=s?.attempt??0,r=!s?.noCommandDetection,o=this.chatAgentService.getDefaultAgent(i);t.removeRequest(e.id,We.Resend);const l={...s,locationData:e.locationData,attachedContext:e.attachedContext};await this._sendRequestAsync(t,t.sessionId,e.message,a,r,o,i,l).responseCompletePromise}async sendRequest(e,s,t){if(this.trace("sendRequest",`sessionId: ${e}, message: ${s.substring(0,20)}${s.length>20?"[...]":""}}`),!s.trim()&&!t?.slashCommand&&!t?.agentId){this.trace("sendRequest","Rejected empty message");return}const n=this._sessionModels.get(e);if(!n)throw new Error(`Unknown session: ${e}`);if(await n.waitForInitialization(),this._pendingRequests.has(e)){this.trace("sendRequest",`Session ${e} already has a pending request`);return}const i=t?.location??n.initialLocation,a=t?.attempt??0,r=this.chatAgentService.getDefaultAgent(i),o=this.parseChatRequest(e,s,i,t),l=o.parts.find(h=>h instanceof oe)?.agent??r,c=o.parts.find(h=>h instanceof ce);return{...this._sendRequestAsync(n,e,o,a,!t?.noCommandDetection,r,i,t),agent:l,slashCommand:c?.command}}parseChatRequest(e,s,t,n){let i=n?.parserContext;if(n?.agentId){const r=this.chatAgentService.getAgent(n.agentId);if(!r)throw new Error(`Unknown agent: ${n.agentId}`);i={selectedAgent:r};const o=n.slashCommand?` ${Be}${n.slashCommand}`:"";s=`${je}${r.name}${o} ${s}`}return this.instantiationService.createInstance(le).parseChatRequest(e,s,t,i)}refreshFollowupsCancellationToken(e){this._sessionFollowupCancelTokens.get(e)?.cancel();const s=new Z;return this._sessionFollowupCancelTokens.set(e,s),s.token}_sendRequestAsync(e,s,t,n,i,a,r,o){const l=this.refreshFollowupsCancellationToken(s);let c;const h="kind"in t?void 0:t.parts.find(S=>S instanceof oe),f="kind"in t?void 0:t.parts.find(S=>S instanceof ce),g="kind"in t?void 0:t.parts.find(S=>S instanceof He),_=[...e.getRequests()];let T=!1;const C=g?"slashCommand":"string",E=new we;let A=!1;function M(){!A&&c?.response&&(E.complete(c.response),A=!0)}const B=new Z,q=B.token,J=(async()=>{const S=d=>{q.isCancellationRequested||(T=!0,d.kind==="markdownContent"?this.trace("sendRequest",`Provider returned progress for session ${e.sessionId}, ${d.content.value.length} chars`):this.trace("sendRequest",`Provider returned progress: ${JSON.stringify(d)}`),e.acceptResponseProgress(c,d),M())};let P,K;const me=new Pe(!1),fe=q.onCancellationRequested(()=>{this.trace("sendRequest",`Request for session ${e.sessionId} was cancelled`),this.telemetryService.publicLog2("interactiveSessionProviderInvoked",{timeToFirstProgress:void 0,totalTime:me.elapsed(),result:"cancelled",requestType:C,agent:h?.agent.id??"",agentExtensionId:h?.agent.extensionId.value??"",slashCommand:f?f.command.name:g?.slashCommand.command,chatSessionId:e.sessionId,location:r,citations:c?.response?.codeCitations.length??0,numCodeBlocks:pe(c.response?.response.toString()??"").length,isParticipantDetected:!!P}),e.cancelRequest(c)});try{let d,k,F;if(h||a&&!g){const R=async($,O,D,Ce,Se)=>{const Ie={variables:[]};c=Ce??e.addRequest(t,Ie,n,$,O,o?.confirmation,o?.locationData,o?.attachedContext);const Q=await this.chatVariablesService.resolveVariables(t,c.attachedContext,e,S,q);e.updateRequest(c,Q);const G=de(c.message),ve=re(Q,G.diff);return{sessionId:s,requestId:c.id,agentId:$.id,message:G.message,command:O?.name,variables:ve,enableCommandDetection:D,isParticipantDetected:Se,attempt:n,location:r,locationData:c.locationData,acceptedConfirmationData:o?.acceptedConfirmationData,rejectedConfirmationData:o?.rejectedConfirmationData}};if(this.configurationService.getValue("chat.experimental.detectParticipant.enabled")!==!1&&this.chatAgentService.hasChatParticipantDetectionProviders()&&!h&&!g&&i){const $=this.getHistoryEntriesFromModel(_,e.sessionId,r,a.id),O=await R(a,f?.command,i,void 0,!1),D=await this.chatAgentService.detectAgentOrCommand(O,$,{location:r},q);D&&this.chatAgentService.getAgent(D.agent.id)?.locations?.includes(r)&&(c.response?.setAgent(D.agent,D.command),P=D.agent,K=D.command)}const m=P??h?.agent??a,I=K??f?.command;await this.extensionService.activateByEvent(`onChatParticipant:${m.id}`);const w=this.getHistoryEntriesFromModel(_,e.sessionId,r,m.id),U=await R(m,I,i,c,!!P),V=this._pendingRequests.get(s);V&&!V.requestId&&(V.requestId=U.requestId),M();const X=await this.chatAgentService.invokeAgent(m.id,U,S,w,q);d=X,k=this.chatAgentService.getFollowups(m.id,U,X,w,l),F=e.getRequests().length===1&&!e.customTitle?this.chatAgentService.getChatTitle(a.id,this.getHistoryEntriesFromModel(e.getRequests(),e.sessionId,r,m.id),H.None):void 0}else if(g&&this.chatSlashCommandService.hasCommand(g.slashCommand.command)){c=e.addRequest(t,{variables:[]},n),M();const R=[];for(const w of e.getRequests())w.response&&(R.push({role:he.User,content:[{type:"text",value:w.message.text}]}),R.push({role:he.Assistant,content:[{type:"text",value:w.response.response.toString()}]}));const m=t.text,I=await this.chatSlashCommandService.executeCommand(g.slashCommand.command,m.substring(g.slashCommand.command.length+1).trimStart(),new ke(w=>{S(w)}),R,r,q);k=Promise.resolve(I?.followUp),d={}}else throw new Error("Cannot handle request");if(q.isCancellationRequested)return;{d||(this.trace("sendRequest",`Provider returned no response for session ${e.sessionId}`),d={errorDetails:{message:ie("emptyResponse","Provider returned null response")}});const R=d.errorDetails?.responseIsFiltered?"filtered":d.errorDetails&&T?"errorWithOutput":d.errorDetails?"error":"success",m=f?f.command.name:g?.slashCommand.command;this.telemetryService.publicLog2("interactiveSessionProviderInvoked",{timeToFirstProgress:d.timings?.firstProgress,totalTime:d.timings?.totalElapsed,result:R,requestType:C,agent:h?.agent.id??"",agentExtensionId:h?.agent.extensionId.value??"",slashCommand:m,chatSessionId:e.sessionId,isParticipantDetected:!!P,location:r,citations:c.response?.codeCitations.length??0,numCodeBlocks:pe(c.response?.response.toString()??"").length}),e.setResponse(c,d),M(),this.trace("sendRequest",`Provider returned response for session ${e.sessionId}`),e.completeResponse(c),k&&k.then(I=>{e.setFollowups(c,I),this._chatServiceTelemetry.retrievedFollowups(h?.agent.id??"",m,I?.length??0)}),F?.then(I=>{I&&e.setCustomTitle(I)})}}catch(d){if(this.telemetryService.publicLog2("interactiveSessionProviderInvoked",{timeToFirstProgress:void 0,totalTime:void 0,result:"error",requestType:C,agent:h?.agent.id??"",agentExtensionId:h?.agent.extensionId.value??"",slashCommand:f?f.command.name:g?.slashCommand.command,chatSessionId:e.sessionId,location:r,citations:0,numCodeBlocks:0,isParticipantDetected:!!P}),this.logService.error(`Error while handling chat request: ${De(d,!0)}`),c){const F={errorDetails:{message:d.message}};e.setResponse(c,F),M(),e.completeResponse(c)}}finally{fe.dispose()}})();return this._pendingRequests.set(e.sessionId,new Qe(B)),J.finally(()=>{this._pendingRequests.deleteAndDispose(e.sessionId)}),{responseCreatedPromise:E.p,responseCompletePromise:J}}getHistoryEntriesFromModel(e,s,t,n){const i=[];for(const a of e){if(!a.response)continue;const r=this.chatAgentService.getDefaultAgent(t)?.id;if(n!==a.response.agent?.id&&n!==r)continue;const o=de(a.message),l={sessionId:s,requestId:a.id,agentId:a.response.agent?.id??"",message:o.message,command:a.response.slashCommand?.name,variables:re(a.variableData,o.diff),location:b.Panel};i.push({request:l,response:a.response.response.value,result:a.response.result??{}})}return i}async removeRequest(e,s){const t=this._sessionModels.get(e);if(!t)throw new Error(`Unknown session: ${e}`);await t.waitForInitialization();const n=this._pendingRequests.get(e);n?.requestId===s&&(n.cancel(),this._pendingRequests.deleteAndDispose(e)),t.removeRequest(s)}async adoptRequest(e,s){if(!(s instanceof Ne))throw new TypeError("Can only adopt requests of type ChatRequestModel");const t=this._sessionModels.get(e);if(!t)throw new Error(`Unknown session: ${e}`);await t.waitForInitialization();const n=s.session;if(t.adoptRequest(s),s.response&&!s.response.isComplete){const i=this._pendingRequests.deleteAndLeak(n.sessionId);i&&(i.requestId=s.id,this._pendingRequests.set(t.sessionId,i))}}async addCompleteRequest(e,s,t,n,i){this.trace("addCompleteRequest",`message: ${s}`);const a=this._sessionModels.get(e);if(!a)throw new Error(`Unknown session: ${e}`);await a.waitForInitialization();const r=typeof s=="string"?this.instantiationService.createInstance(le).parseChatRequest(e,s):s,o=a.addRequest(r,t||{variables:[]},n??0);if(typeof i.message=="string")a.acceptResponseProgress(o,{content:new x(i.message),kind:"markdownContent"});else for(const l of i.message)a.acceptResponseProgress(o,l,!0);a.setResponse(o,i.result||{}),i.followups!==void 0&&a.setFollowups(o,i.followups),a.completeResponse(o)}cancelCurrentRequestForSession(e){this.trace("cancelCurrentRequestForSession",`sessionId: ${e}`),this._pendingRequests.get(e)?.cancel(),this._pendingRequests.deleteAndDispose(e)}clearSession(e){this.trace("clearSession",`sessionId: ${e}`);const s=this._sessionModels.get(e);if(!s)throw new Error(`Unknown session: ${e}`);if(s.initialLocation===b.Panel){const t=JSON.parse(JSON.stringify(s));t.isNew=!0,this._persistedSessions[e]=t}this._sessionModels.deleteAndDispose(e),this._pendingRequests.get(e)?.cancel(),this._pendingRequests.deleteAndDispose(e),this._onDidDisposeSession.fire({sessionId:e,reason:"cleared"})}hasSessions(){return!!Object.values(this._persistedSessions)}transferChatSession(e,s){const t=Ae.find(this._sessionModels.values(),i=>i.sessionId===e.sessionId);if(!t)throw new Error(`Failed to transfer session. Unknown session ID: ${e.sessionId}`);const n=this.storageService.getObject(N,v.PROFILE,[]);n.push({chat:t.toJSON(),timestampInMilliseconds:Date.now(),toWorkspace:s,inputValue:e.inputValue}),this.storageService.store(N,JSON.stringify(n),v.PROFILE,z.MACHINE),this.trace("transferChatSession",`Transferred session ${t.sessionId} to workspace ${s.toString()}`)}};W=Y([u(0,Ee),u(1,Me),u(2,xe),u(3,Te),u(4,Fe),u(5,$e),u(6,Ke),u(7,Xe),u(8,ze),u(9,Oe),u(10,_e),u(11,be)],W);function pe(y){const p=y.split(`
`),e=[];let s;for(let t=0;t<p.length;t++){const n=p[t];if(s)new RegExp(`^\\s*${s.delimiter}\\s*$`).test(n)&&(e.push(s.languageId),s=void 0);else{const i=n.match(/^(\s*)(`{3,}|~{3,})(\w*)/);i&&(s={delimiter:i[2],languageId:i[3]})}}return e}export{W as ChatService};
