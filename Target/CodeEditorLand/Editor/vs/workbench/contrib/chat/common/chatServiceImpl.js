var ve=Object.defineProperty;var Re=Object.getOwnPropertyDescriptor;var G=(R,m,e,s)=>{for(var t=s>1?void 0:s?Re(m,e):m,n=R.length-1,i;n>=0;n--)(i=R[n])&&(t=(s?i(m,e,t):i(t))||t);return s&&t&&ve(m,e,t),t},u=(R,m)=>(e,s)=>m(e,s,R);import{DeferredPromise as ye}from"../../../../../vs/base/common/async.js";import{CancellationToken as V,CancellationTokenSource as Y}from"../../../../../vs/base/common/cancellation.js";import{toErrorMessage as we}from"../../../../../vs/base/common/errorMessage.js";import{ErrorNoTelemetry as Z}from"../../../../../vs/base/common/errors.js";import{Emitter as ee}from"../../../../../vs/base/common/event.js";import{MarkdownString as O}from"../../../../../vs/base/common/htmlContent.js";import{Iterable as De}from"../../../../../vs/base/common/iterator.js";import{Disposable as Ae,DisposableMap as H}from"../../../../../vs/base/common/lifecycle.js";import{revive as te}from"../../../../../vs/base/common/marshalling.js";import{StopWatch as qe}from"../../../../../vs/base/common/stopwatch.js";import{URI as se}from"../../../../../vs/base/common/uri.js";import{localize as ne}from"../../../../../vs/nls.js";import{IConfigurationService as Pe}from"../../../../../vs/platform/configuration/common/configuration.js";import{IContextKeyService as be}from"../../../../../vs/platform/contextkey/common/contextkey.js";import{IInstantiationService as _e}from"../../../../../vs/platform/instantiation/common/instantiation.js";import{ILogService as Te}from"../../../../../vs/platform/log/common/log.js";import{Progress as Me}from"../../../../../vs/platform/progress/common/progress.js";import{IStorageService as ke,StorageScope as v,StorageTarget as x}from"../../../../../vs/platform/storage/common/storage.js";import{ITelemetryService as Ee}from"../../../../../vs/platform/telemetry/common/telemetry.js";import{IWorkspaceContextService as Fe}from"../../../../../vs/platform/workspace/common/workspace.js";import{ChatAgentLocation as _,IChatAgentService as $e}from"../../../../../vs/workbench/contrib/chat/common/chatAgents.js";import{CONTEXT_VOTE_UP_ENABLED as Oe}from"../../../../../vs/workbench/contrib/chat/common/chatContextKeys.js";import{ChatModel as ie,ChatRequestModel as xe,ChatRequestRemovalReason as ze,ChatWelcomeMessageModel as Le,normalizeSerializableChatData as Ne,updateRanges as ae}from"../../../../../vs/workbench/contrib/chat/common/chatModel.js";import{chatAgentLeader as We,ChatRequestAgentPart as oe,ChatRequestAgentSubcommandPart as re,ChatRequestSlashCommandPart as Ue,chatSubcommandLeader as Ve,getPromptText as ce}from"../../../../../vs/workbench/contrib/chat/common/chatParserTypes.js";import{ChatRequestParser as de}from"../../../../../vs/workbench/contrib/chat/common/chatRequestParser.js";import"../../../../../vs/workbench/contrib/chat/common/chatService.js";import{ChatServiceTelemetry as He}from"../../../../../vs/workbench/contrib/chat/common/chatServiceTelemetry.js";import{IChatSlashCommandService as je}from"../../../../../vs/workbench/contrib/chat/common/chatSlashCommands.js";import{IChatVariablesService as Be}from"../../../../../vs/workbench/contrib/chat/common/chatVariables.js";import{ChatMessageRole as le}from"../../../../../vs/workbench/contrib/chat/common/languageModels.js";import{IWorkbenchAssignmentService as Je}from"../../../../../vs/workbench/services/assignment/common/assignmentService.js";import{IExtensionService as Ke}from"../../../../../vs/workbench/services/extensions/common/extensions.js";const z="interactive.sessions",L="chat.workspaceTransfer",he=1e3*60,ue=25;class Xe{constructor(m,e){this.cancellationTokenSource=m;this.requestId=e}dispose(){this.cancellationTokenSource.dispose()}cancel(){this.cancellationTokenSource.cancel()}}let N=class extends Ae{constructor(e,s,t,n,i,o,a,r,h,c,l,C){super();this.storageService=e;this.logService=s;this.extensionService=t;this.instantiationService=n;this.telemetryService=i;this.workspaceContextService=o;this.chatSlashCommandService=a;this.chatVariablesService=r;this.chatAgentService=h;this.configurationService=C;this._chatServiceTelemetry=this.instantiationService.createInstance(He);const g=!o.getWorkspace().folders.length,T=e.get(z,g?v.APPLICATION:v.WORKSPACE,"");if(T){this._persistedSessions=this.deserializeChats(T);const f=Object.keys(this._persistedSessions).length;f>0&&this.trace("constructor",`Restored ${f} persisted sessions`)}else this._persistedSessions={};const P=this.getTransferredSessionData(),y=P?.chat;y&&(this.trace("constructor",`Transferred session ${y.sessionId}`),this._persistedSessions[y.sessionId]=y,this._transferredSessionData={sessionId:y.sessionId,inputValue:P.inputValue}),this._register(e.onWillSaveState(()=>this.saveState()));const k=Oe.bindTo(l);c.getTreatment("chatVoteUpEnabled").then(f=>k.set(!!f))}_sessionModels=this._register(new H);_pendingRequests=this._register(new H);_persistedSessions;_deletedChatIds=new Set;_transferredSessionData;get transferredSessionData(){return this._transferredSessionData}_onDidPerformUserAction=this._register(new ee);onDidPerformUserAction=this._onDidPerformUserAction.event;_onDidDisposeSession=this._register(new ee);onDidDisposeSession=this._onDidDisposeSession.event;_sessionFollowupCancelTokens=this._register(new H);_chatServiceTelemetry;isEnabled(e){return this.chatAgentService.getContributedDefaultAgent(e)!==void 0}saveState(){const e=Array.from(this._sessionModels.values()).filter(t=>t.initialLocation===_.Panel).filter(t=>t.getRequests().length>0);if(!this.workspaceContextService.getWorkspace().folders.length)this.syncEmptyWindowChats(e);else{let t=e;t=t.concat(Object.values(this._persistedSessions).filter(i=>!this._sessionModels.has(i.sessionId)).filter(i=>i.requests.length)),t.sort((i,o)=>(o.creationDate??0)-(i.creationDate??0)),t=t.slice(0,ue),t.length&&this.trace("onWillSaveState",`Persisting ${t.length} sessions`);const n=JSON.stringify(t);t.length&&this.trace("onWillSaveState",`Persisting ${n.length} chars`),this.storageService.store(z,n,v.WORKSPACE,x.MACHINE)}this._deletedChatIds.clear()}syncEmptyWindowChats(e){const s=this.storageService.get(z,v.APPLICATION,""),t=this._persistedSessions;let n;if(s){n=this.deserializeChats(s);const r=Object.keys(n).length;r>0&&this.trace("constructor",`Restored ${r} persisted sessions`)}else n={};this._deletedChatIds.forEach(r=>delete n[r]),Object.values(t).forEach(r=>{const h=n[r.sessionId];h&&r.requests.length>h.requests.length?n[r.sessionId]=r:!h&&r.isNew&&(r.isNew=!1,n[r.sessionId]=r)}),this._persistedSessions=n;const i={...this._persistedSessions};for(const r of e)i[r.sessionId]=r;let o=Object.values(i);o.sort((r,h)=>(h.creationDate??0)-(r.creationDate??0)),o=o.slice(0,ue);const a=JSON.stringify(o);this.storageService.store(z,a,v.APPLICATION,x.MACHINE)}notifyUserAction(e){this._chatServiceTelemetry.notifyUserAction(e),this._onDidPerformUserAction.fire(e)}setChatSessionTitle(e,s){const t=this._sessionModels.get(e);if(t){t.setCustomTitle(s);return}const n=this._persistedSessions[e];n&&(n.customTitle=s)}trace(e,s){s?this.logService.trace(`ChatService#${e}: ${s}`):this.logService.trace(`ChatService#${e}`)}error(e,s){this.logService.error(`ChatService#${e} ${s}`)}deserializeChats(e){try{const s=te(JSON.parse(e));if(!Array.isArray(s))throw new Error("Expected array");return s.reduce((n,i)=>{for(const o of i.requests)Array.isArray(o.response)?o.response=o.response.map(a=>typeof a=="string"?new O(a):a):typeof o.response=="string"&&(o.response=[new O(o.response)]);return n[i.sessionId]=Ne(i),n},{})}catch(s){return this.error("deserializeChats",`Malformed session data: ${s}. [${e.substring(0,20)}${e.length>20?"...":""}]`),{}}}getTransferredSessionData(){const e=this.storageService.getObject(L,v.PROFILE,[]),s=this.workspaceContextService.getWorkspace().folders[0]?.uri;if(!s)return;const t=s.toString(),n=Date.now(),i=e.find(a=>se.revive(a.toWorkspace).toString()===t&&n-a.timestampInMilliseconds<he),o=e.filter(a=>se.revive(a.toWorkspace).toString()!==t&&n-a.timestampInMilliseconds<he);return this.storageService.store(L,JSON.stringify(o),v.PROFILE,x.MACHINE),i}getHistory(){const s=Object.values(this._persistedSessions).filter(n=>n.requests.length>0).filter(n=>!this._sessionModels.has(n.sessionId)).filter(n=>!n.isImported).map(n=>{const i=n.customTitle??ie.getDefaultTitle(n.requests);return{sessionId:n.sessionId,title:i,lastMessageDate:n.lastMessageDate,isActive:!1}});return[...Array.from(this._sessionModels.values()).filter(n=>!n.isImported).map(n=>{const i=n.title||ne("newChat","New Chat");return{sessionId:n.sessionId,title:i,lastMessageDate:n.lastMessageDate,isActive:!0}}),...s]}removeHistoryEntry(e){this._persistedSessions[e]&&(this._deletedChatIds.add(e),delete this._persistedSessions[e],this.saveState())}clearAllHistoryEntries(){Object.values(this._persistedSessions).forEach(e=>this._deletedChatIds.add(e.sessionId)),this._persistedSessions={},this.saveState()}startSession(e,s){return this.trace("startSession"),this._startSession(void 0,e,s)}_startSession(e,s,t){const n=this.instantiationService.createInstance(ie,e,s);return this._sessionModels.set(n.sessionId,n),this.initializeSession(n,t),n}async initializeSession(e,s){try{this.trace("initializeSession",`Initialize session ${e.sessionId}`),e.startInitialize(),await this.extensionService.whenInstalledExtensionsRegistered();const t=this.chatAgentService.getContributedDefaultAgent(e.initialLocation)??this.chatAgentService.getContributedDefaultAgent(_.Panel);if(!t)throw new Z("No default agent contributed");await this.extensionService.activateByEvent(`onChatParticipant:${t.id}`);const n=this.chatAgentService.getActivatedAgents().find(a=>a.id===t.id);if(!n)throw new Z("No default agent registered");const i=e.welcomeMessage?void 0:await n.provideWelcomeMessage?.(e.initialLocation,s)??void 0,o=i&&this.instantiationService.createInstance(Le,i.map(a=>typeof a=="string"?new O(a):a),await n.provideSampleQuestions?.(e.initialLocation,s)??[]);e.initialize(o)}catch(t){this.trace("startSession",`initializeSession failed: ${t}`),e.setInitializationError(t),this._sessionModels.deleteAndDispose(e.sessionId),this._onDidDisposeSession.fire({sessionId:e.sessionId,reason:"initializationFailed"})}}getSession(e){return this._sessionModels.get(e)}getOrRestoreSession(e){this.trace("getOrRestoreSession",`sessionId: ${e}`);const s=this._sessionModels.get(e);if(s)return s;const t=te(this._persistedSessions[e]);if(t)return e===this.transferredSessionData?.sessionId&&(this._transferredSessionData=void 0),this._startSession(t,t.initialLocation??_.Panel,V.None)}loadSessionFromContent(e){return this._startSession(e,e.initialLocation??_.Panel,V.None)}async resendRequest(e,s){const t=this._sessionModels.get(e.session.sessionId);if(!t&&t!==e.session)throw new Error(`Unknown session: ${e.session.sessionId}`);await t.waitForInitialization();const n=this._pendingRequests.get(e.session.sessionId);n&&(this.trace("resendRequest",`Session ${e.session.sessionId} already has a pending request, cancelling...`),n.cancel());const i=s?.location??t.initialLocation,o=s?.attempt??0,a=!s?.noCommandDetection,r=this.chatAgentService.getDefaultAgent(i);t.removeRequest(e.id,ze.Resend);const h={...s,locationData:e.locationData,attachedContext:e.attachedContext};await this._sendRequestAsync(t,t.sessionId,e.message,o,a,r,i,h).responseCompletePromise}async sendRequest(e,s,t){if(this.trace("sendRequest",`sessionId: ${e}, message: ${s.substring(0,20)}${s.length>20?"[...]":""}}`),!s.trim()){this.trace("sendRequest","Rejected empty message");return}const n=this._sessionModels.get(e);if(!n)throw new Error(`Unknown session: ${e}`);if(await n.waitForInitialization(),this._pendingRequests.has(e)){this.trace("sendRequest",`Session ${e} already has a pending request`);return}const i=t?.location??n.initialLocation,o=t?.attempt??0,a=this.chatAgentService.getDefaultAgent(i),r=this.parseChatRequest(e,s,i,t),h=r.parts.find(l=>l instanceof oe)?.agent??a,c=r.parts.find(l=>l instanceof re);return{...this._sendRequestAsync(n,e,r,o,!t?.noCommandDetection,a,i,t),agent:h,slashCommand:c?.command}}parseChatRequest(e,s,t,n){let i=n?.parserContext;if(n?.agentId){const a=this.chatAgentService.getAgent(n.agentId);if(!a)throw new Error(`Unknown agent: ${n.agentId}`);i={selectedAgent:a};const r=n.slashCommand?` ${Ve}${n.slashCommand}`:"";s=`${We}${a.name}${r} ${s}`}return this.instantiationService.createInstance(de).parseChatRequest(e,s,t,i)}refreshFollowupsCancellationToken(e){this._sessionFollowupCancelTokens.get(e)?.cancel();const s=new Y;return this._sessionFollowupCancelTokens.set(e,s),s.token}_sendRequestAsync(e,s,t,n,i,o,a,r){const h=this.refreshFollowupsCancellationToken(s);let c;const l="kind"in t?void 0:t.parts.find(S=>S instanceof oe),C="kind"in t?void 0:t.parts.find(S=>S instanceof re),g="kind"in t?void 0:t.parts.find(S=>S instanceof Ue);let T=!1;const P=g?"slashCommand":"string",y=new ye;let k=!1;function f(){!k&&c?.response&&(y.complete(c.response),k=!0)}const j=new Y,q=j.token,B=(async()=>{const S=d=>{q.isCancellationRequested||(T=!0,d.kind==="markdownContent"?this.trace("sendRequest",`Provider returned progress for session ${e.sessionId}, ${d.content.value.length} chars`):this.trace("sendRequest",`Provider returned progress: ${JSON.stringify(d)}`),e.acceptResponseProgress(c,d),f())};let b,J;const me=new qe(!1),pe=q.onCancellationRequested(()=>{this.trace("sendRequest",`Request for session ${e.sessionId} was cancelled`),this.telemetryService.publicLog2("interactiveSessionProviderInvoked",{timeToFirstProgress:void 0,totalTime:me.elapsed(),result:"cancelled",requestType:P,agent:l?.agent.id??"",agentExtensionId:l?.agent.extensionId.value??"",slashCommand:C?C.command.name:g?.slashCommand.command,chatSessionId:e.sessionId,location:a,citations:c?.response?.codeCitations.length??0,numCodeBlocks:ge(c.response?.response.toString()??"").length,isParticipantDetected:!!b}),e.cancelRequest(c)});try{let d,M,E;if(l||o&&!g){const w=async(F,$,A,fe,Ce)=>{const Se={variables:[]};c=fe??e.addRequest(t,Se,n,F,$,r?.confirmation,r?.locationData,r?.attachedContext);const X=await this.chatVariablesService.resolveVariables(t,c.attachedContext,e,S,q);e.updateRequest(c,X);const Q=ce(c.message),Ie=ae(X,Q.diff);return{sessionId:s,requestId:c.id,agentId:F.id,message:Q.message,command:$?.name,variables:Ie,enableCommandDetection:A,isParticipantDetected:Ce,attempt:n,location:a,locationData:c.locationData,acceptedConfirmationData:r?.acceptedConfirmationData,rejectedConfirmationData:r?.rejectedConfirmationData}};if(this.configurationService.getValue("chat.experimental.detectParticipant.enabled")!==!1&&this.chatAgentService.hasChatParticipantDetectionProviders()&&!l&&!g&&i){const F=this.getHistoryEntriesFromModel(e,a,o.id),$=await w(o,C?.command,i,void 0,!1),A=await this.chatAgentService.detectAgentOrCommand($,F,{location:a},q);A&&this.chatAgentService.getAgent(A.agent.id)?.locations?.includes(a)&&(c.response?.setAgent(A.agent,A.command),b=A.agent,J=A.command)}const p=b??l?.agent??o,I=J??C?.command;await this.extensionService.activateByEvent(`onChatParticipant:${p.id}`);const D=this.getHistoryEntriesFromModel(e,a,p.id),W=await w(p,I,i,c,!!b),U=this._pendingRequests.get(s);U&&!U.requestId&&(U.requestId=W.requestId),f();const K=await this.chatAgentService.invokeAgent(p.id,W,S,D,q);d=K,M=this.chatAgentService.getFollowups(p.id,W,K,D,h),E=e.getRequests().length===1&&!e.customTitle?this.chatAgentService.getChatTitle(o.id,this.getHistoryEntriesFromModel(e,a,p.id),V.None):void 0}else if(g&&this.chatSlashCommandService.hasCommand(g.slashCommand.command)){c=e.addRequest(t,{variables:[]},n),f();const w=[];for(const D of e.getRequests())D.response&&(w.push({role:le.User,content:[{type:"text",value:D.message.text}]}),w.push({role:le.Assistant,content:[{type:"text",value:D.response.response.toString()}]}));const p=t.text,I=await this.chatSlashCommandService.executeCommand(g.slashCommand.command,p.substring(g.slashCommand.command.length+1).trimStart(),new Me(D=>{S(D)}),w,a,q);M=Promise.resolve(I?.followUp),d={}}else throw new Error("Cannot handle request");if(q.isCancellationRequested)return;{d||(this.trace("sendRequest",`Provider returned no response for session ${e.sessionId}`),d={errorDetails:{message:ne("emptyResponse","Provider returned null response")}});const w=d.errorDetails?.responseIsFiltered?"filtered":d.errorDetails&&T?"errorWithOutput":d.errorDetails?"error":"success",p=C?C.command.name:g?.slashCommand.command;this.telemetryService.publicLog2("interactiveSessionProviderInvoked",{timeToFirstProgress:d.timings?.firstProgress,totalTime:d.timings?.totalElapsed,result:w,requestType:P,agent:l?.agent.id??"",agentExtensionId:l?.agent.extensionId.value??"",slashCommand:p,chatSessionId:e.sessionId,isParticipantDetected:!!b,location:a,citations:c.response?.codeCitations.length??0,numCodeBlocks:ge(c.response?.response.toString()??"").length}),e.setResponse(c,d),f(),this.trace("sendRequest",`Provider returned response for session ${e.sessionId}`),e.completeResponse(c),M&&M.then(I=>{e.setFollowups(c,I),this._chatServiceTelemetry.retrievedFollowups(l?.agent.id??"",p,I?.length??0)}),E?.then(I=>{I&&e.setCustomTitle(I)})}}catch(d){if(this.telemetryService.publicLog2("interactiveSessionProviderInvoked",{timeToFirstProgress:void 0,totalTime:void 0,result:"error",requestType:P,agent:l?.agent.id??"",agentExtensionId:l?.agent.extensionId.value??"",slashCommand:C?C.command.name:g?.slashCommand.command,chatSessionId:e.sessionId,location:a,citations:0,numCodeBlocks:0,isParticipantDetected:!!b}),this.logService.error(`Error while handling chat request: ${we(d,!0)}`),c){const E={errorDetails:{message:d.message}};e.setResponse(c,E),f(),e.completeResponse(c)}}finally{pe.dispose()}})();return this._pendingRequests.set(e.sessionId,new Xe(j)),B.finally(()=>{this._pendingRequests.deleteAndDispose(e.sessionId)}),{responseCreatedPromise:y.p,responseCompletePromise:B}}getHistoryEntriesFromModel(e,s,t){const n=[];for(const i of e.getRequests()){if(!i.response)continue;const o=this.chatAgentService.getDefaultAgent(s)?.id;if(t!==i.response.agent?.id&&t!==o)continue;const a=ce(i.message),r={sessionId:e.sessionId,requestId:i.id,agentId:i.response.agent?.id??"",message:a.message,command:i.response.slashCommand?.name,variables:ae(i.variableData,a.diff),location:_.Panel};n.push({request:r,response:i.response.response.value,result:i.response.result??{}})}return n}async removeRequest(e,s){const t=this._sessionModels.get(e);if(!t)throw new Error(`Unknown session: ${e}`);await t.waitForInitialization();const n=this._pendingRequests.get(e);n?.requestId===s&&(n.cancel(),this._pendingRequests.deleteAndDispose(e)),t.removeRequest(s)}async adoptRequest(e,s){if(!(s instanceof xe))throw new TypeError("Can only adopt requests of type ChatRequestModel");const t=this._sessionModels.get(e);if(!t)throw new Error(`Unknown session: ${e}`);await t.waitForInitialization();const n=s.session;if(t.adoptRequest(s),s.response&&!s.response.isComplete){const i=this._pendingRequests.deleteAndLeak(n.sessionId);i&&(i.requestId=s.id,this._pendingRequests.set(t.sessionId,i))}}async addCompleteRequest(e,s,t,n,i){this.trace("addCompleteRequest",`message: ${s}`);const o=this._sessionModels.get(e);if(!o)throw new Error(`Unknown session: ${e}`);await o.waitForInitialization();const a=typeof s=="string"?this.instantiationService.createInstance(de).parseChatRequest(e,s):s,r=o.addRequest(a,t||{variables:[]},n??0);if(typeof i.message=="string")o.acceptResponseProgress(r,{content:new O(i.message),kind:"markdownContent"});else for(const h of i.message)o.acceptResponseProgress(r,h,!0);o.setResponse(r,i.result||{}),i.followups!==void 0&&o.setFollowups(r,i.followups),o.completeResponse(r)}cancelCurrentRequestForSession(e){this.trace("cancelCurrentRequestForSession",`sessionId: ${e}`),this._pendingRequests.get(e)?.cancel(),this._pendingRequests.deleteAndDispose(e)}clearSession(e){this.trace("clearSession",`sessionId: ${e}`);const s=this._sessionModels.get(e);if(!s)throw new Error(`Unknown session: ${e}`);if(s.initialLocation===_.Panel){const t=JSON.parse(JSON.stringify(s));t.isNew=!0,this._persistedSessions[e]=t}this._sessionModels.deleteAndDispose(e),this._pendingRequests.get(e)?.cancel(),this._pendingRequests.deleteAndDispose(e),this._onDidDisposeSession.fire({sessionId:e,reason:"cleared"})}hasSessions(){return!!Object.values(this._persistedSessions)}transferChatSession(e,s){const t=De.find(this._sessionModels.values(),i=>i.sessionId===e.sessionId);if(!t)throw new Error(`Failed to transfer session. Unknown session ID: ${e.sessionId}`);const n=this.storageService.getObject(L,v.PROFILE,[]);n.push({chat:t.toJSON(),timestampInMilliseconds:Date.now(),toWorkspace:s,inputValue:e.inputValue}),this.storageService.store(L,JSON.stringify(n),v.PROFILE,x.MACHINE),this.trace("transferChatSession",`Transferred session ${t.sessionId} to workspace ${s.toString()}`)}};N=G([u(0,ke),u(1,Te),u(2,Ke),u(3,_e),u(4,Ee),u(5,Fe),u(6,je),u(7,Be),u(8,$e),u(9,Je),u(10,be),u(11,Pe)],N);function ge(R){const m=R.split(`
`),e=[];let s;for(let t=0;t<m.length;t++){const n=m[t];if(s)new RegExp(`^\\s*${s.delimiter}\\s*$`).test(n)&&(e.push(s.languageId),s=void 0);else{const i=n.match(/^(\s*)(`{3,}|~{3,})(\w*)/);i&&(s={delimiter:i[2],languageId:i[3]})}}return e}export{N as ChatService};
