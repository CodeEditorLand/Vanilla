var d=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var r=(o,e,a,t)=>{for(var n=t>1?void 0:t?h(e,a):e,s=o.length-1,m;s>=0;s--)(m=o[s])&&(n=(t?m(e,a,n):m(n))||n);return t&&n&&d(e,a,n),n},c=(o,e)=>(a,t)=>e(a,t,o);import{CommandsRegistry as l}from"../../../../../vs/platform/commands/common/commands.js";import{ITelemetryService as u}from"../../../../../vs/platform/telemetry/common/telemetry.js";import{ChatAgentVoteDirection as p,ChatCopyKind as g}from"../../../../../vs/workbench/contrib/chat/common/chatService.js";let i=class{constructor(e){this.telemetryService=e}notifyUserAction(e){if(e.action.kind==="vote")this.telemetryService.publicLog2("interactiveSessionVote",{direction:e.action.direction===p.Up?"up":"down",agentId:e.agentId??"",command:e.command});else if(e.action.kind==="copy")this.telemetryService.publicLog2("interactiveSessionCopy",{copyKind:e.action.copyKind===g.Action?"action":"toolbar",agentId:e.agentId??"",command:e.command});else if(e.action.kind==="insert")this.telemetryService.publicLog2("interactiveSessionInsert",{newFile:!!e.action.newFile,userAction:e.action.userAction,codeMapper:e.action.codeMapper,agentId:e.agentId??"",command:e.command});else if(e.action.kind==="command"){const t=l.getCommand(e.action.commandButton.command.id)?e.action.commandButton.command.id:"INVALID";this.telemetryService.publicLog2("interactiveSessionCommand",{commandId:t,agentId:e.agentId??"",command:e.command})}else e.action.kind==="runInTerminal"?this.telemetryService.publicLog2("interactiveSessionRunInTerminal",{languageId:e.action.languageId??"",agentId:e.agentId??"",command:e.command}):e.action.kind==="followUp"&&this.telemetryService.publicLog2("chatFollowupClicked",{agentId:e.agentId??"",command:e.command})}retrievedFollowups(e,a,t){this.telemetryService.publicLog2("chatFollowupsRetrieved",{agentId:e,command:a,numFollowups:t})}};i=r([c(0,u)],i);export{i as ChatServiceTelemetry};
