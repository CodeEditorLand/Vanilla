var c=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var h=(r,t,e,a)=>{for(var o=a>1?void 0:a?C(t,e):t,n=r.length-1,s;n>=0;n--)(s=r[n])&&(o=(a?s(t,e,o):s(o))||o);return a&&o&&c(t,e,o),o},l=(r,t)=>(e,a)=>t(e,a,r);import"../../../../base/common/cancellation.js";import{Emitter as g}from"../../../../base/common/event.js";import{Disposable as p,toDisposable as I}from"../../../../base/common/lifecycle.js";import{createDecorator as v}from"../../../../platform/instantiation/common/instantiation.js";import"../../../../platform/progress/common/progress.js";import{IExtensionService as f}from"../../../services/extensions/common/extensions.js";import"./chatAgents.js";import"./chatService.js";import"./languageModels.js";const U=v("chatSlashCommandService");let m=class extends p{constructor(e){super();this._extensionService=e}_commands=new Map;_onDidChangeCommands=this._register(new g);onDidChangeCommands=this._onDidChangeCommands.event;dispose(){super.dispose(),this._commands.clear()}registerSlashCommand(e,a){if(this._commands.has(e.command))throw new Error(`Already registered a command with id ${e.command}}`);return this._commands.set(e.command,{data:e,command:a}),this._onDidChangeCommands.fire(),I(()=>{this._commands.delete(e.command)&&this._onDidChangeCommands.fire()})}getCommands(e){return Array.from(this._commands.values(),a=>a.data).filter(a=>a.locations.includes(e))}hasCommand(e){return this._commands.has(e)}async executeCommand(e,a,o,n,s,d){const i=this._commands.get(e);if(!i)throw new Error("No command with id ${id} NOT registered");if(i.command||await this._extensionService.activateByEvent(`onSlash:${e}`),!i.command)throw new Error(`No command with id ${e} NOT resolved`);return await i.command(a,o,n,s,d)}};m=h([l(0,f)],m);export{m as ChatSlashCommandService,U as IChatSlashCommandService};
