{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/contrib/editorHoverWrapper.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/editorHoverWrapper.css\";\nimport * as dom from \"../../../../../base/browser/dom.js\";\nimport type { IHoverAction } from \"../../../../../base/browser/ui/hover/hover.js\";\nimport { HoverAction } from \"../../../../../base/browser/ui/hover/hoverWidget.js\";\nimport { IKeybindingService } from \"../../../../../platform/keybinding/common/keybinding.js\";\n\nconst $ = dom.$;\nconst h = dom.h;\n\n/**\n * This borrows some of HoverWidget so that a chat editor hover can be rendered in the same way as a workbench hover.\n * Maybe it can be reusable in a generic way.\n */\nexport class ChatEditorHoverWrapper {\n\tpublic readonly domNode: HTMLElement;\n\n\tconstructor(\n\t\thoverContentElement: HTMLElement,\n\t\tactions: IHoverAction[] | undefined,\n\t\t@IKeybindingService\n\t\tprivate readonly keybindingService: IKeybindingService,\n\t) {\n\t\tconst hoverElement = h(\".chat-editor-hover-wrapper@root\", [\n\t\t\th(\".chat-editor-hover-wrapper-content@content\"),\n\t\t]);\n\t\tthis.domNode = hoverElement.root;\n\t\thoverElement.content.appendChild(hoverContentElement);\n\n\t\tif (actions && actions.length > 0) {\n\t\t\tconst statusBarElement = $(\".hover-row.status-bar\");\n\t\t\tconst actionsElement = $(\".actions\");\n\t\t\tactions.forEach((action) => {\n\t\t\t\tconst keybinding = this.keybindingService.lookupKeybinding(\n\t\t\t\t\taction.commandId,\n\t\t\t\t);\n\t\t\t\tconst keybindingLabel = keybinding\n\t\t\t\t\t? keybinding.getLabel()\n\t\t\t\t\t: null;\n\t\t\t\tHoverAction.render(\n\t\t\t\t\tactionsElement,\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: action.label,\n\t\t\t\t\t\tcommandId: action.commandId,\n\t\t\t\t\t\trun: (e) => {\n\t\t\t\t\t\t\taction.run(e);\n\t\t\t\t\t\t},\n\t\t\t\t\t\ticonClass: action.iconClass,\n\t\t\t\t\t},\n\t\t\t\t\tkeybindingLabel,\n\t\t\t\t);\n\t\t\t});\n\t\t\tstatusBarElement.appendChild(actionsElement);\n\t\t\tthis.domNode.appendChild(statusBarElement);\n\t\t}\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,OAAO;AACP,YAAY,SAAS;AAErB,SAAS,mBAAmB;AAC5B,SAAS,0BAA0B;AAEnC,MAAM,IAAI,IAAI;AACd,MAAM,IAAI,IAAI;AAMP,IAAM,yBAAN,MAA6B;AAAA,EAGnC,YACC,qBACA,SAEiB,mBAChB;AADgB;AAEjB,UAAM,eAAe,EAAE,mCAAmC;AAAA,MACzD,EAAE,4CAA4C;AAAA,IAC/C,CAAC;AACD,SAAK,UAAU,aAAa;AAC5B,iBAAa,QAAQ,YAAY,mBAAmB;AAEpD,QAAI,WAAW,QAAQ,SAAS,GAAG;AAClC,YAAM,mBAAmB,EAAE,uBAAuB;AAClD,YAAM,iBAAiB,EAAE,UAAU;AACnC,cAAQ,QAAQ,CAAC,WAAW;AAC3B,cAAM,aAAa,KAAK,kBAAkB;AAAA,UACzC,OAAO;AAAA,QACR;AACA,cAAM,kBAAkB,aACrB,WAAW,SAAS,IACpB;AACH,oBAAY;AAAA,UACX;AAAA,UACA;AAAA,YACC,OAAO,OAAO;AAAA,YACd,WAAW,OAAO;AAAA,YAClB,KAAK,wBAAC,MAAM;AACX,qBAAO,IAAI,CAAC;AAAA,YACb,GAFK;AAAA,YAGL,WAAW,OAAO;AAAA,UACnB;AAAA,UACA;AAAA,QACD;AAAA,MACD,CAAC;AACD,uBAAiB,YAAY,cAAc;AAC3C,WAAK,QAAQ,YAAY,gBAAgB;AAAA,IAC1C;AAAA,EACD;AAAA,EA3DD,OAkBoC;AAAA;AAAA;AAAA,EACnB;AAyCjB;AA1Ca,yBAAN;AAAA,EAMJ;AAAA,GANU;",
  "names": []
}
