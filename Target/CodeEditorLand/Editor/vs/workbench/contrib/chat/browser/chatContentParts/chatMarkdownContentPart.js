var O=Object.defineProperty;var V=Object.getOwnPropertyDescriptor;var g=(l,t,e,o)=>{for(var r=o>1?void 0:o?V(t,e):t,s=l.length-1,i;s>=0;s--)(i=l[s])&&(r=(o?i(t,e,r):i(r))||r);return o&&r&&O(t,e,r),r},p=(l,t)=>(e,o)=>t(e,o,l);import*as F from"../../../../../base/browser/dom.js";import{Emitter as K}from"../../../../../base/common/event.js";import{Disposable as x}from"../../../../../base/common/lifecycle.js";import{equalsIgnoreCase as q}from"../../../../../base/common/strings.js";import{Range as A}from"../../../../../editor/common/core/range.js";import{ITextModelService as N}from"../../../../../editor/common/services/resolverService.js";import{MenuId as $}from"../../../../../platform/actions/common/actions.js";import{IContextKeyService as z}from"../../../../../platform/contextkey/common/contextkey.js";import{IInstantiationService as j}from"../../../../../platform/instantiation/common/instantiation.js";import{isRequestVM as w,isResponseVM as h}from"../../common/chatViewModel.js";import{ChatMarkdownDecorationsRenderer as G}from"../chatMarkdownDecorationsRenderer.js";import{CodeBlockPart as J,localFileLanguageId as Q,parseLocalFileData as W}from"../codeBlockPart.js";import{ResourcePool as X}from"./chatCollections.js";const _=F.$;let I=class extends x{constructor(e,o,r,s=!1,i=0,f,u,Y,S,P,Z,L){super();this.markdown=e;this.editorPool=r;this.codeBlockModelCollection=Y;this.textModelService=Z;const n=o.element,T=L.createInstance(G),y=[];let U=i;const R=this._register(f.render(e,{fillInIncompleteTokens:s,codeBlockRendererSync:(m,v)=>{const k=U++;let b,B,D,M;if(q(m,Q))try{const c=W(v);B=c.range&&A.lift(c.range),b=this.textModelService.createModelReference(c.uri).then(a=>a.object)}catch{return _("div")}else{if(!w(n)&&!h(n))return _("div");const c=h(n)||w(n)?n.sessionId:"",a=this.codeBlockModelCollection.getOrCreate(c,n,k);D=a.vulns,M=a.codemapperUri,b=a.model}const E=h(n)&&n.errorDetails?.responseIsFiltered,d=this.renderCodeBlock({languageId:m,textModel:b,codeBlockIndex:k,element:n,range:B,hideToolbar:E,parentContextKeyService:P,vulns:D,codemapperUri:M},v,u,S.editableCodeBlock);this.allRefs.push(d),this._register(d.object.onDidChangeContentHeight(()=>this._onDidChangeHeight.fire()));const H={codeBlockIndex:k,element:n,focus(){d.object.focus()},uri:d.object.uri,codemapperUri:void 0};return this.codeblocks.push(H),y.push(d),d.object.element},asyncRenderCallback:()=>this._onDidChangeHeight.fire()}));this._register(T.walkTreeAndAnnotateReferenceLinks(R.element)),y.reverse().forEach(m=>this._register(m)),this.domNode=R.element}domNode;allRefs=[];_onDidChangeHeight=this._register(new K);onDidChangeHeight=this._onDidChangeHeight.event;codeblocks=[];renderCodeBlock(e,o,r,s){const i=this.editorPool.get(),f=i.object;return h(e.element)&&this.codeBlockModelCollection.update(e.element.sessionId,e.element,e.codeBlockIndex,{text:o,languageId:e.languageId}).then(u=>{this.codeblocks[e.codeBlockIndex]={...this.codeblocks[e.codeBlockIndex],codemapperUri:u.codemapperUri}}),f.render(e,r,s),i}hasSameContent(e){return e.kind==="markdownContent"&&e.content.value===this.markdown.value}layout(e){this.allRefs.forEach(o=>o.object.layout(e))}addDisposable(e){this._register(e)}};I=g([p(9,z),p(10,N),p(11,j)],I);let C=class extends x{_pool;inUse(){return this._pool.inUse}constructor(t,e,o,r){super(),this._pool=this._register(new X(()=>r.createInstance(J,t,$.ChatCodeBlock,e,o)))}get(){const t=this._pool.get();let e=!1;return{object:t,isStale:()=>e,dispose:()=>{t.reset(),e=!0,this._pool.release(t)}}}};C=g([p(3,j)],C);export{I as ChatMarkdownContentPart,C as EditorPool};
