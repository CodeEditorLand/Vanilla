{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/chatGettingStarted.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tDisposable,\n\tMutableDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tExtensions as ConfigurationExtensions,\n\tConfigurationScope,\n\ttype IConfigurationRegistry,\n} from \"../../../../platform/configuration/common/configurationRegistry.js\";\nimport {\n\tContextKeyExpr,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IExtensionManagementService } from \"../../../../platform/extensionManagement/common/extensionManagement.js\";\nimport { ExtensionIdentifier } from \"../../../../platform/extensions/common/extensions.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { applicationConfigurationNodeBase } from \"../../../common/configuration.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport {\n\tIActivityService,\n\tNumberBadge,\n} from \"../../../services/activity/common/activity.js\";\nimport { IExtensionService } from \"../../../services/extensions/common/extensions.js\";\nimport { CHAT_VIEW_ID } from \"./chat.js\";\n\nconst showChatGettingStartedConfigKey =\n\t\"workbench.panel.chat.view.experimental.showGettingStarted\";\n\nexport class ChatGettingStartedContribution\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tstatic readonly ID = \"workbench.contrib.chatGettingStarted\";\n\tprivate readonly showChatGettingStartedDisposable = this._register(\n\t\tnew MutableDisposable(),\n\t);\n\tconstructor(\n\t\t@IContextKeyService private readonly contextService: IContextKeyService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IActivityService private readonly activityService: IActivityService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t) {\n\t\tsuper();\n\n\t\tif (!this.productService.gitHubEntitlement) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.storageService.get(showChatGettingStartedConfigKey, StorageScope.APPLICATION) !== undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.extensionManagementService.getInstalled().then(async exts => {\n\t\t\tconst installed = exts.find(value => ExtensionIdentifier.equals(value.identifier.id, this.productService.gitHubEntitlement!.extensionId));\n\t\t\tif (!installed) {\n\t\t\t\tthis.registerListeners();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.storageService.store(showChatGettingStartedConfigKey, 'installed', StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\t});\n\t}\n\n\tprivate registerListeners() {\n\t\tthis._register(\n\t\t\tthis.extensionService.onDidChangeExtensions(async (result) => {\n\t\t\t\tif (\n\t\t\t\t\tthis.storageService.get(\n\t\t\t\t\t\tshowChatGettingStartedConfigKey,\n\t\t\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\t\t) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (const ext of result.added) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tExtensionIdentifier.equals(\n\t\t\t\t\t\t\tthis.productService.gitHubEntitlement!.extensionId,\n\t\t\t\t\t\t\text.identifier,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.displayBadge();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis.extensionService.onDidChangeExtensionsStatus(async (event) => {\n\t\t\tif (\n\t\t\t\tthis.storageService.get(\n\t\t\t\t\tshowChatGettingStartedConfigKey,\n\t\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\t) !== undefined\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (const ext of event) {\n\t\t\t\tif (\n\t\t\t\t\tExtensionIdentifier.equals(\n\t\t\t\t\t\tthis.productService.gitHubEntitlement!.extensionId,\n\t\t\t\t\t\text.value,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tconst extensionStatus =\n\t\t\t\t\t\tthis.extensionService.getExtensionsStatus();\n\t\t\t\t\tif (extensionStatus[ext.value].activationTimes) {\n\t\t\t\t\t\tthis.displayChatPanel();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._register(\n\t\t\tthis.contextService.onDidChangeContext((event) => {\n\t\t\t\tif (\n\t\t\t\t\tthis.storageService.get(\n\t\t\t\t\t\tshowChatGettingStartedConfigKey,\n\t\t\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\t\t) === undefined\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tevent.affectsSome(new Set([`view.${CHAT_VIEW_ID}.visible`]))\n\t\t\t\t) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.contextService.contextMatchesRules(\n\t\t\t\t\t\t\tContextKeyExpr.deserialize(\n\t\t\t\t\t\t\t\t`${CHAT_VIEW_ID}.visible`,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.showChatGettingStartedDisposable.clear();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate async displayBadge() {\n\t\tconst showGettingStartedExp =\n\t\t\tthis.configurationService.inspect<string>(\n\t\t\t\tshowChatGettingStartedConfigKey,\n\t\t\t).value ?? \"\";\n\t\tif (!showGettingStartedExp || showGettingStartedExp !== \"showBadge\") {\n\t\t\treturn;\n\t\t}\n\n\t\tconst badge = new NumberBadge(1, () =>\n\t\t\tlocalize(\"chat.openPanel\", \"Open Chat Panel\"),\n\t\t);\n\t\tthis.showChatGettingStartedDisposable.value =\n\t\t\tthis.activityService.showViewActivity(CHAT_VIEW_ID, { badge });\n\t\tthis.storageService.store(\n\t\t\tshowChatGettingStartedConfigKey,\n\t\t\tshowGettingStartedExp,\n\t\t\tStorageScope.APPLICATION,\n\t\t\tStorageTarget.MACHINE,\n\t\t);\n\t}\n\n\tprivate async displayChatPanel() {\n\t\tconst showGettingStartedExp =\n\t\t\tthis.configurationService.inspect<string>(\n\t\t\t\tshowChatGettingStartedConfigKey,\n\t\t\t).value ?? \"\";\n\t\tif (\n\t\t\t!showGettingStartedExp ||\n\t\t\tshowGettingStartedExp !== \"showChatPanel\"\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.commandService.executeCommand(`${CHAT_VIEW_ID}.focus`);\n\t\tthis.storageService.store(\n\t\t\tshowChatGettingStartedConfigKey,\n\t\t\tshowGettingStartedExp,\n\t\t\tStorageScope.APPLICATION,\n\t\t\tStorageTarget.MACHINE,\n\t\t);\n\t}\n}\n\nconst configurationRegistry = Registry.as<IConfigurationRegistry>(\n\tConfigurationExtensions.Configuration,\n);\nconfigurationRegistry.registerConfiguration({\n\t...applicationConfigurationNodeBase,\n\tproperties: {\n\t\t\"workbench.panel.chat.view.experimental.showGettingStarted\": {\n\t\t\tscope: ConfigurationScope.MACHINE,\n\t\t\ttype: \"string\",\n\t\t\tdefault: \"\",\n\t\t\ttags: [\"experimental\"],\n\t\t\tdescription: localize(\n\t\t\t\t\"workbench.panel.chat.view.showGettingStarted\",\n\t\t\t\t\"When enabled, shows a getting started experiments in the chat panel.\",\n\t\t\t),\n\t\t},\n\t},\n});\n"],
  "mappings": "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",
  "names": []
}
