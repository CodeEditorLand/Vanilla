import { Disposable, type IDisposable } from "../../../../base/common/lifecycle.js";
import { ICommandService } from "../../../../platform/commands/common/commands.js";
import { IHoverService } from "../../../../platform/hover/browser/hover.js";
import { IInstantiationService, type ServicesAccessor } from "../../../../platform/instantiation/common/instantiation.js";
import { IKeybindingService } from "../../../../platform/keybinding/common/keybinding.js";
import { ILabelService } from "../../../../platform/label/common/label.js";
import { ILogService } from "../../../../platform/log/common/log.js";
import { type IChatAgentCommand, type IChatAgentData, IChatAgentService } from "../common/chatAgents.js";
import { type IParsedChatRequest } from "../common/chatParserTypes.js";
import { IChatService } from "../common/chatService.js";
import { IChatVariablesService } from "../common/chatVariables.js";
import { ILanguageModelToolsService } from "../common/languageModelToolsService.js";
import { IChatWidgetService } from "./chat.js";
import "./media/chatInlineFileLinkWidget.css";
export declare function agentToMarkdown(agent: IChatAgentData, isClickable: boolean, accessor: ServicesAccessor): string;
export declare function agentSlashCommandToMarkdown(agent: IChatAgentData, command: IChatAgentCommand): string;
export declare class ChatMarkdownDecorationsRenderer extends Disposable {
    private readonly keybindingService;
    private readonly logService;
    private readonly chatAgentService;
    private readonly instantiationService;
    private readonly hoverService;
    private readonly chatService;
    private readonly chatWidgetService;
    private readonly commandService;
    private readonly chatVariablesService;
    private readonly labelService;
    private readonly toolsService;
    constructor(keybindingService: IKeybindingService, logService: ILogService, chatAgentService: IChatAgentService, instantiationService: IInstantiationService, hoverService: IHoverService, chatService: IChatService, chatWidgetService: IChatWidgetService, commandService: ICommandService, chatVariablesService: IChatVariablesService, labelService: ILabelService, toolsService: ILanguageModelToolsService);
    convertParsedRequestToMarkdown(parsedRequest: IParsedChatRequest): string;
    private genericDecorationToMarkdown;
    walkTreeAndAnnotateReferenceLinks(element: HTMLElement): IDisposable;
    private renderAgentWidget;
    private renderSlashCommandWidget;
    private renderFileWidget;
    private renderResourceWidget;
    private injectKeybindingHint;
}
