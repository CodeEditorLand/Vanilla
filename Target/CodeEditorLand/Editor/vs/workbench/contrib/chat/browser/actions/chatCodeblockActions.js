import{CancellationTokenSource as j}from"../../../../../base/common/cancellation.js";import{Codicon as k}from"../../../../../base/common/codicons.js";import{KeyCode as C,KeyMod as s}from"../../../../../base/common/keyCodes.js";import"../../../../../base/common/uri.js";import"../../../../../editor/browser/editorBrowser.js";import"../../../../../editor/browser/editorExtensions.js";import{ICodeEditorService as R}from"../../../../../editor/browser/services/codeEditorService.js";import{EditorContextKeys as S}from"../../../../../editor/common/editorContextKeys.js";import"../../../../../editor/common/languages.js";import{CopyAction as z}from"../../../../../editor/contrib/clipboard/browser/clipboard.js";import{localize2 as g}from"../../../../../nls.js";import{Action2 as E,MenuId as v,registerAction2 as I}from"../../../../../platform/actions/common/actions.js";import{IClipboardService as _}from"../../../../../platform/clipboard/common/clipboardService.js";import{ContextKeyExpr as l}from"../../../../../platform/contextkey/common/contextkey.js";import{IInstantiationService as b}from"../../../../../platform/instantiation/common/instantiation.js";import{KeybindingWeight as w}from"../../../../../platform/keybinding/common/keybindingsRegistry.js";import{TerminalLocation as Y}from"../../../../../platform/terminal/common/terminal.js";import"../../../../common/editor.js";import{IEditorService as M}from"../../../../services/editor/common/editorService.js";import{accessibleViewInCodeBlock as U}from"../../../accessibility/browser/accessibilityConfiguration.js";import{ITerminalEditorService as J,ITerminalGroupService as Q,ITerminalService as Z}from"../../../terminal/browser/terminal.js";import{ICodeMapperService as $}from"../../common/chatCodeMapperService.js";import{CONTEXT_CHAT_EDIT_APPLIED as O,CONTEXT_CHAT_ENABLED as y,CONTEXT_IN_CHAT_INPUT as V,CONTEXT_IN_CHAT_SESSION as f}from"../../common/chatContextKeys.js";import{IChatEditingService as ee}from"../../common/chatEditingService.js";import{ChatCopyKind as K,IChatService as T}from"../../common/chatService.js";import{isResponseVM as A}from"../../common/chatViewModel.js";import{IChatCodeBlockContextProviderService as te,IChatWidgetService as N}from"../chat.js";import{DefaultChatTextEditor as H}from"../codeBlockPart.js";import{CHAT_CATEGORY as h}from"./chatActions.js";import{ApplyCodeBlockOperation as oe,InsertCodeBlockOperation as ne}from"./codeBlockOperations.js";const P=["fish","ps1","pwsh","powershell","sh","shellscript","zsh"];function q(c){return typeof c=="object"&&c!==null&&"code"in c&&"element"in c}function re(c){return typeof c=="object"&&c!==null&&"element"in c}function D(c){return A(c.element)&&c.element.errorDetails?.responseIsFiltered}class W extends E{run(n,...t){let e=t[0];if(!q(e)){const o=n.get(R),r=o.getFocusedCodeEditor()||o.getActiveCodeEditor();if(!r||(e=L(r,n),!q(e)))return}return this.runWithContext(n,e)}}function Ze(){I(class extends E{constructor(){super({id:"workbench.action.chat.copyCodeBlock",title:g("interactive.copyCodeBlock.label","Copy"),f1:!1,category:h,icon:k.copy,menu:{id:v.ChatCodeBlock,group:"navigation",order:30}})}run(t,...e){const o=e[0];if(!q(o)||D(o))return;t.get(_).writeText(o.code),A(o.element)&&t.get(T).notifyUserAction({agentId:o.element.agent?.id,command:o.element.slashCommand?.name,sessionId:o.element.sessionId,requestId:o.element.requestId,result:o.element.result,action:{kind:"copy",codeBlockIndex:o.codeBlockIndex,copyKind:K.Toolbar,copiedCharacters:o.code.length,totalCharacters:o.code.length,copiedText:o.code}})}}),z?.addImplementation(5e4,"chat-codeblock",n=>{const t=n.get(R).getFocusedCodeEditor();if(!t)return!1;const e=t.getModel();if(!e)return!1;const o=L(t,n);if(!o)return!1;const r=t.getSelections()?.length===1&&t.getSelection()?.isEmpty(),d=r?e.getValue():t.getSelections()?.reduce((B,u)=>B+e.getValueInRange(u),"")??"",p=e.getValueLength(),a=n.get(T),i=o.element;return i&&a.notifyUserAction({agentId:i.agent?.id,command:i.slashCommand?.name,sessionId:i.sessionId,requestId:i.requestId,result:i.result,action:{kind:"copy",codeBlockIndex:o.codeBlockIndex,copyKind:K.Action,copiedText:d,copiedCharacters:d.length,totalCharacters:p}}),r?(n.get(_).writeText(o.code),!0):!1}),I(class extends W{operation;constructor(){super({id:"workbench.action.chat.applyInEditor",title:g("interactive.applyInEditor.label","Apply in Editor"),precondition:y,f1:!0,category:h,icon:k.gitPullRequestGoToChanges,menu:{id:v.ChatCodeBlock,group:"navigation",when:l.and(f,...P.map(t=>l.notEquals(S.languageId.key,t))),order:10},keybinding:{when:l.or(l.and(f,V.negate()),U),primary:s.CtrlCmd|C.Enter,mac:{primary:s.WinCtrl|C.Enter},weight:w.ExternalExtension+1}})}runWithContext(t,e){return this.operation||(this.operation=t.get(b).createInstance(oe)),this.operation.run(e)}}),I(class extends E{constructor(){super({id:"workbench.action.chat.applyAll",title:g("chat.applyAll.label","Apply All Edits"),precondition:y,f1:!0,category:h,icon:k.edit})}async run(t,...e){const o=t.get(N),r=t.get($),d=t.get(ee),p=o.lastFocusedWidget;if(!p)return;const a=p.viewModel?.getItems()??[],i=p.getFocus()??a[a.length-1];if(!A(i))return;const B=p.getCodeBlockInfosForResponse(i),u=[];for(const m of B)if(m.codemapperUri&&m.uri){const x=m.getContent();u.push({resource:m.codemapperUri,code:x})}await d.startOrContinueEditingSession(i.sessionId,async m=>{const x={textEdit:(G,X)=>{m.textEdits(G,X)}},F=new j;await r.mapCode({codeBlocks:u,conversation:[]},x,F.token)},{silent:!0})}}),I(class extends W{constructor(){super({id:"workbench.action.chat.insertCodeBlock",title:g("interactive.insertCodeBlock.label","Insert At Cursor"),precondition:y,f1:!0,category:h,icon:k.insert,menu:{id:v.ChatCodeBlock,group:"navigation",when:f,order:20},keybinding:{when:l.or(l.and(f,V.negate()),U),primary:s.CtrlCmd|C.Enter,mac:{primary:s.WinCtrl|C.Enter},weight:w.ExternalExtension+1}})}runWithContext(t,e){return t.get(b).createInstance(ne).run(e)}}),I(class extends W{constructor(){super({id:"workbench.action.chat.insertIntoNewFile",title:g("interactive.insertIntoNewFile.label","Insert into New File"),precondition:y,f1:!0,category:h,icon:k.newFile,menu:{id:v.ChatCodeBlock,group:"navigation",isHiddenByDefault:!0,order:40}})}async runWithContext(t,e){if(D(e))return;const o=t.get(M),r=t.get(T);o.openEditor({contents:e.code,languageId:e.languageId,resource:void 0}),A(e.element)&&r.notifyUserAction({agentId:e.element.agent?.id,command:e.element.slashCommand?.name,sessionId:e.element.sessionId,requestId:e.element.requestId,result:e.element.result,action:{kind:"insert",codeBlockIndex:e.codeBlockIndex,totalCharacters:e.code.length,newFile:!0}})}}),I(class extends W{constructor(){super({id:"workbench.action.chat.runInTerminal",title:g("interactive.runInTerminal.label","Insert into Terminal"),precondition:y,f1:!0,category:h,icon:k.terminal,menu:[{id:v.ChatCodeBlock,group:"navigation",when:l.and(f,l.or(...P.map(t=>l.equals(S.languageId.key,t))))},{id:v.ChatCodeBlock,group:"navigation",isHiddenByDefault:!0,when:l.and(f,...P.map(t=>l.notEquals(S.languageId.key,t)))}],keybinding:[{primary:s.CtrlCmd|s.Alt|C.Enter,mac:{primary:s.WinCtrl|s.Alt|C.Enter},weight:w.EditorContrib,when:l.or(f,U)}]})}async runWithContext(t,e){if(D(e))return;const o=t.get(T),r=t.get(Z),d=t.get(M),p=t.get(J),a=t.get(Q);let i=await r.getActiveOrCreateInstance();if(i=i.xterm?.isStdinDisabled||i.shellLaunchConfig.isFeatureTerminal?await r.createTerminal():i,r.setActiveInstance(i),await i.focusWhenReady(!0),i.target===Y.Editor){const u=d.findEditors(i.resource);p.openEditor(i,{viewColumn:u?.[0].groupId})}else a.showPanel(!0);i.runCommand(e.code,!1),A(e.element)&&o.notifyUserAction({agentId:e.element.agent?.id,command:e.element.slashCommand?.name,sessionId:e.element.sessionId,requestId:e.element.requestId,result:e.element.result,action:{kind:"runInTerminal",codeBlockIndex:e.codeBlockIndex,languageId:e.languageId}})}});function c(n,t){const e=n.get(R),r=n.get(N).lastFocusedWidget;if(!r)return;const p=e.getFocusedCodeEditor()?.getModel()?.uri,a=p?r.getCodeBlockInfoForEditor(p):void 0,i=!r.inputEditor.hasWidgetFocus()&&r.getFocus(),B=A(i)?i:void 0,u=a?a.element:B??r.viewModel?.getItems().reverse().find(F=>A(F));if(!u||!A(u))return;r.reveal(u);const m=r.getCodeBlockInfosForResponse(u),x=a?(a.codeBlockIndex+(t?-1:1)+m.length)%m.length:t?m.length-1:0;m[x]?.focus()}I(class extends E{constructor(){super({id:"workbench.action.chat.nextCodeBlock",title:g("interactive.nextCodeBlock.label","Next Code Block"),keybinding:{primary:s.CtrlCmd|s.Alt|C.PageDown,mac:{primary:s.CtrlCmd|s.Alt|C.PageDown},weight:w.WorkbenchContrib,when:f},precondition:y,f1:!0,category:h})}run(t,...e){c(t)}}),I(class extends E{constructor(){super({id:"workbench.action.chat.previousCodeBlock",title:g("interactive.previousCodeBlock.label","Previous Code Block"),keybinding:{primary:s.CtrlCmd|s.Alt|C.PageUp,mac:{primary:s.CtrlCmd|s.Alt|C.PageUp},weight:w.WorkbenchContrib,when:f},precondition:y,f1:!0,category:h})}run(t,...e){c(t,!0)}})}function L(c,n){const t=n.get(N),e=n.get(te),o=c.getModel();if(!o)return;const d=t.lastFocusedWidget?.getCodeBlockInfoForEditor(o.uri);if(!d){for(const p of e.providers){const a=p.getCodeBlockContext(c);if(a)return a}return}return{element:d.element,codeBlockIndex:d.codeBlockIndex,code:c.getValue(),languageId:c.getModel().getLanguageId(),codemapperUri:d.codemapperUri}}function tt(){class c extends E{run(t,...e){const o=e[0];if(re(o))return this.runWithContext(t,o)}}I(class extends c{constructor(){super({id:"workbench.action.chat.applyCompareEdits",title:g("interactive.compare.apply","Apply Edits"),f1:!1,category:h,icon:k.check,precondition:l.and(S.hasChanges,O.negate()),menu:{id:v.ChatCompareBlock,group:"navigation",order:1}})}async runWithContext(t,e){const o=t.get(M);await t.get(b).createInstance(H).apply(e.element,e.edit,e.diffEditor),await o.openEditor({resource:e.edit.uri,options:{revealIfVisible:!0}})}}),I(class extends c{constructor(){super({id:"workbench.action.chat.discardCompareEdits",title:g("interactive.compare.discard","Discard Edits"),f1:!1,category:h,icon:k.trash,precondition:l.and(S.hasChanges,O.negate()),menu:{id:v.ChatCompareBlock,group:"navigation",order:2}})}async runWithContext(t,e){t.get(b).createInstance(H).discard(e.element,e.edit)}})}export{q as isCodeBlockActionContext,re as isCodeCompareBlockActionContext,Ze as registerChatCodeBlockActions,tt as registerChatCodeCompareBlockActions};
