import{Disposable as r}from"../../../../../base/common/lifecycle.js";import"../chat.js";import{ChatWidget as o}from"../chatWidget.js";import"../../common/chatModel.js";class a extends r{constructor(t){super();this.widget=t;this._register(this.widget.onDidChangeContext(e=>{e.removed&&this._removeContext(e.removed)})),this._register(this.widget.onDidSubmitAgent(()=>{this._clearAttachedContext()}))}_attachedContext=new Set;static ID="chatContextAttachments";get id(){return a.ID}getInputState(){return[...this._attachedContext.values()]}setInputState(t){Array.isArray(t)||(t=[]),this._attachedContext.clear();for(const e of t)this._attachedContext.add(e);this.widget.setContext(!0,...t)}getContext(){return new Set([...this._attachedContext.values()].map(t=>t.id))}setContext(t,...e){t&&this._attachedContext.clear();for(const i of e)this._attachedContext.add(i);this.widget.setContext(t,...e)}_removeContext(t){t.length&&t.forEach(this._attachedContext.delete,this._attachedContext)}_clearAttachedContext(){this._attachedContext.clear()}}o.CONTRIBS.push(a);export{a as ChatContextAttachments};
