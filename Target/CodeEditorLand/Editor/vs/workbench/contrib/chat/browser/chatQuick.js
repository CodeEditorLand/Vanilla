var I=Object.defineProperty;var _=Object.getOwnPropertyDescriptor;var h=(d,n,e,t)=>{for(var i=t>1?void 0:t?_(n,e):n,o=d.length-1,r;o>=0;o--)(r=d[o])&&(i=(t?r(n,e,i):r(i))||i);return t&&i&&I(n,e,i),i},s=(d,n)=>(e,t)=>n(e,t,d);import*as l from"../../../../base/browser/dom.js";import{Orientation as y,Sash as w}from"../../../../base/browser/ui/sash/sash.js";import{disposableTimeout as C}from"../../../../base/common/async.js";import{CancellationToken as S}from"../../../../base/common/cancellation.js";import{Emitter as D,Event as E}from"../../../../base/common/event.js";import{Disposable as p,DisposableStore as T,MutableDisposable as b}from"../../../../base/common/lifecycle.js";import"../../../../editor/common/core/selection.js";import{MenuId as L}from"../../../../platform/actions/common/actions.js";import{IContextKeyService as m}from"../../../../platform/contextkey/common/contextkey.js";import{IInstantiationService as g}from"../../../../platform/instantiation/common/instantiation.js";import{ServiceCollection as V}from"../../../../platform/instantiation/common/serviceCollection.js";import{ILayoutService as H}from"../../../../platform/layout/browser/layoutService.js";import{IQuickInputService as M}from"../../../../platform/quickinput/common/quickInput.js";import{editorBackground as k,inputBackground as q,quickInputBackground as x,quickInputForeground as O}from"../../../../platform/theme/common/colorRegistry.js";import{showChatView as P}from"./chat.js";import{ChatWidget as F}from"./chatWidget.js";import{ChatAgentLocation as c}from"../common/chatAgents.js";import"../common/chatModel.js";import"../common/chatParserTypes.js";import{IChatService as f}from"../common/chatService.js";import{IViewsService as Q}from"../../../services/views/common/viewsService.js";let u=class extends p{constructor(e,t,i){super();this.quickInputService=e;this.chatService=t;this.instantiationService=i}_serviceBrand;_onDidClose=this._register(new D);onDidClose=this._onDidClose.event;_input;_currentChat;_container;get enabled(){return!!this.chatService.isEnabled(c.Panel)}get focused(){const e=this._input?.widget;return e?l.isAncestorOfActiveElement(e):!1}toggle(e){if(this.focused&&!e?.query)this.close();else if(this.open(e),e?.isPartialQuery){const t=this._store.add(E.once(this.onDidClose)(()=>{this._currentChat?.clearValue(),this._store.delete(t)}))}}open(e){if(this._input){if(this._currentChat&&e?.query){this._currentChat.focus(),this._currentChat.setValue(e.query,e.selection),e.isPartialQuery||this._currentChat.acceptInput();return}return this.focus()}const t=new T;this._input=this.quickInputService.createQuickWidget(),this._input.contextKey="chatInputVisible",this._input.ignoreFocusOut=!0,t.add(this._input),this._container??=l.$(".interactive-session"),this._input.widget=this._container,this._input.show(),this._currentChat?this._currentChat.show():(this._currentChat=this.instantiationService.createInstance(a),this._currentChat.render(this._container)),t.add(this._input.onDidHide(()=>{t.dispose(),this._currentChat.hide(),this._input=void 0,this._onDidClose.fire()})),this._currentChat.focus(),e?.query&&(this._currentChat.setValue(e.query,e.selection),e.isPartialQuery||this._currentChat.acceptInput())}focus(){this._currentChat?.focus()}close(){this._input?.dispose(),this._input=void 0}async openInChatView(){await this._currentChat?.openChatView(),this.close()}};u=h([s(0,M),s(1,f),s(2,g)],u);let a=class extends p{constructor(e,t,i,o,r){super();this.instantiationService=e;this.contextKeyService=t;this.chatService=i;this.layoutService=o;this.viewsService=r}static DEFAULT_MIN_HEIGHT=200;static DEFAULT_HEIGHT_OFFSET=100;widget;sash;model;_currentQuery;maintainScrollTimer=this._register(new b);_deferUpdatingDynamicLayout=!1;clear(){this.model?.dispose(),this.model=void 0,this.updateModel(),this.widget.inputEditor.setValue("")}focus(e){if(this.widget){this.widget.focusInput();const t=this.widget.inputEditor.getValue();t&&this.widget.inputEditor.setSelection(e??{startLineNumber:1,startColumn:1,endLineNumber:1,endColumn:t.length+1})}}hide(){this.widget.setVisible(!1),this.maintainScrollTimer.value=C(()=>{this.maintainScrollTimer.clear()},30*1e3)}show(){this.widget.setVisible(!0),this._deferUpdatingDynamicLayout&&(this._deferUpdatingDynamicLayout=!1,this.widget.updateDynamicChatTreeItemLayout(2,this.maxHeight)),this.maintainScrollTimer.value||this.widget.layoutDynamicChatTreeItemMode()}render(e){if(this.widget)throw new Error("Cannot render quick chat twice");const t=this._register(this.instantiationService.createChild(new V([m,this._register(this.contextKeyService.createScoped(e))])));this.widget=this._register(t.createInstance(F,c.Panel,{isQuickChat:!0},{renderInputOnTop:!0,renderStyle:"compact",menus:{inputSideToolbar:L.ChatInputSide}},{listForeground:O,listBackground:x,inputEditorBackground:q,resultEditorBackground:k})),this.widget.render(e),this.widget.setVisible(!0),this.widget.setDynamicChatTreeItemLayout(2,this.maxHeight),this.updateModel(),this.sash=this._register(new w(e,{getHorizontalSashTop:()=>e.offsetHeight},{orientation:y.HORIZONTAL})),this.registerListeners(e)}get maxHeight(){return this.layoutService.mainContainerDimension.height-a.DEFAULT_HEIGHT_OFFSET}registerListeners(e){this._register(this.layoutService.onDidLayoutMainContainer(()=>{this.widget.visible?this.widget.updateDynamicChatTreeItemLayout(2,this.maxHeight):this._deferUpdatingDynamicLayout=!0})),this._register(this.widget.inputEditor.onDidChangeModelContent(i=>{this._currentQuery=this.widget.inputEditor.getValue()})),this._register(this.widget.onDidClear(()=>this.clear())),this._register(this.widget.onDidChangeHeight(i=>this.sash.layout()));const t=e.offsetWidth;this._register(this.sash.onDidStart(()=>{this.widget.isDynamicChatTreeItemLayoutEnabled=!1})),this._register(this.sash.onDidChange(i=>{i.currentY<a.DEFAULT_MIN_HEIGHT||i.currentY>this.maxHeight||(this.widget.layout(i.currentY,t),this.sash.layout())})),this._register(this.sash.onDidReset(()=>{this.widget.isDynamicChatTreeItemLayoutEnabled=!0,this.widget.layoutDynamicChatTreeItemMode()}))}async acceptInput(){return this.widget.acceptInput()}async openChatView(){const e=await P(this.viewsService);if(!e?.viewModel||!this.model)return;for(const i of this.model.getRequests())if(i.response?.response.value||i.response?.result){const o=[];for(const r of i.response.response.value)if(r.kind==="textEditGroup")for(const v of r.edits)o.push({kind:"textEdit",edits:v,uri:r.uri});else o.push(r);this.chatService.addCompleteRequest(e.viewModel.sessionId,i.message,i.variableData,i.attempt,{message:o,result:i.response.result,followups:i.response.followups})}else i.message;const t=this.widget.inputEditor.getValue();t&&e.inputEditor.setValue(t),e.focusInput()}setValue(e,t){this.widget.inputEditor.setValue(e),this.focus(t)}clearValue(){this.widget.inputEditor.setValue("")}updateModel(){if(this.model??=this.chatService.startSession(c.Panel,S.None),!this.model)throw new Error("Could not start chat session");this.widget.setModel(this.model,{inputValue:this._currentQuery})}};a=h([s(0,g),s(1,m),s(2,f),s(3,H),s(4,Q)],a);export{u as QuickChatService};
