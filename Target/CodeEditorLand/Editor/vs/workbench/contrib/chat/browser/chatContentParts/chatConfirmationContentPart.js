var g=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var m=(n,i,e,t)=>{for(var a=t>1?void 0:t?b(i,e):i,r=n.length-1,s;r>=0;r--)(s=n[r])&&(a=(t?s(i,e,a):s(a))||a);return t&&a&&g(i,e,a),a},h=(n,i)=>(e,t)=>i(e,t,n);import{Emitter as u}from"../../../../../base/common/event.js";import{Disposable as S}from"../../../../../base/common/lifecycle.js";import{localize as c}from"../../../../../nls.js";import{IInstantiationService as v}from"../../../../../platform/instantiation/common/instantiation.js";import{IChatService as y}from"../../common/chatService.js";import{isResponseVM as D}from"../../common/chatViewModel.js";import{ChatConfirmationWidget as R}from"./chatConfirmationWidget.js";let p=class extends S{constructor(e,t,a,r){super();this.instantiationService=a;this.chatService=r;const s=t.element,C=e.buttons?e.buttons.map(o=>({label:o,data:e.data})):[{label:c("accept","Accept"),data:e.data},{label:c("dismiss","Dismiss"),data:e.data,isSecondary:!0}],d=this._register(this.instantiationService.createInstance(R,e.title,e.message,C));d.setShowButtons(!e.isUsed),this._register(d.onDidClick(async o=>{if(D(s)){const I=`${o.label}: "${e.title}"`,l=o.isSecondary?{rejectedConfirmationData:[o.data]}:{acceptedConfirmationData:[o.data]};l.agentId=s.agent?.id,l.slashCommand=s.slashCommand?.name,l.confirmation=o.label,await this.chatService.sendRequest(s.sessionId,I,l)&&(e.isUsed=!0,d.setShowButtons(!1),this._onDidChangeHeight.fire())}})),this.domNode=d.domNode}domNode;_onDidChangeHeight=this._register(new u);onDidChangeHeight=this._onDidChangeHeight.event;hasSameContent(e){return e.kind==="confirmation"}addDisposable(e){this._register(e)}};p=m([h(2,v),h(3,y)],p);export{p as ChatConfirmationContentPart};
