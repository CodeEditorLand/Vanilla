{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/actions/chatExecuteActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from '../../../../../base/common/codicons.js';\nimport { KeyCode, KeyMod } from '../../../../../base/common/keyCodes.js';\nimport { ServicesAccessor } from '../../../../../editor/browser/editorExtensions.js';\nimport { localize2 } from '../../../../../nls.js';\nimport { Action2, MenuId, registerAction2 } from '../../../../../platform/actions/common/actions.js';\nimport { ContextKeyExpr } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { KeybindingWeight } from '../../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { CHAT_CATEGORY } from './chatActions.js';\nimport { IChatWidget, IChatWidgetService } from '../chat.js';\nimport { IChatAgentService } from '../../common/chatAgents.js';\nimport { CONTEXT_CHAT_INPUT_HAS_AGENT, CONTEXT_CHAT_INPUT_HAS_TEXT, CONTEXT_CHAT_REQUEST_IN_PROGRESS, CONTEXT_IN_CHAT_INPUT } from '../../common/chatContextKeys.js';\nimport { chatAgentLeader, extractAgentAndCommand } from '../../common/chatParserTypes.js';\nimport { IChatService } from '../../common/chatService.js';\n\nexport interface IVoiceChatExecuteActionContext {\n\treadonly disableTimeout?: boolean;\n}\n\nexport interface IChatExecuteActionContext {\n\twidget?: IChatWidget;\n\tinputValue?: string;\n\tvoice?: IVoiceChatExecuteActionContext;\n}\n\nexport class SubmitAction extends Action2 {\n\tstatic readonly ID = 'workbench.action.chat.submit';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: SubmitAction.ID,\n\t\t\ttitle: localize2('interactive.submit.label', \"Send\"),\n\t\t\tf1: false,\n\t\t\tcategory: CHAT_CATEGORY,\n\t\t\ticon: Codicon.send,\n\t\t\tprecondition: ContextKeyExpr.and(CONTEXT_CHAT_INPUT_HAS_TEXT, CONTEXT_CHAT_REQUEST_IN_PROGRESS.negate()),\n\t\t\tkeybinding: {\n\t\t\t\twhen: CONTEXT_IN_CHAT_INPUT,\n\t\t\t\tprimary: KeyCode.Enter,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.ChatExecuteSecondary,\n\t\t\t\t\tgroup: 'group_1',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.ChatExecute,\n\t\t\t\t\twhen: CONTEXT_CHAT_REQUEST_IN_PROGRESS.negate(),\n\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t},\n\t\t\t]\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\tconst context: IChatExecuteActionContext | undefined = args[0];\n\n\t\tconst widgetService = accessor.get(IChatWidgetService);\n\t\tconst widget = context?.widget ?? widgetService.lastFocusedWidget;\n\t\twidget?.acceptInput(context?.inputValue);\n\t}\n}\n\n\nexport class ChatSubmitSecondaryAgentAction extends Action2 {\n\tstatic readonly ID = 'workbench.action.chat.submitSecondaryAgent';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ChatSubmitSecondaryAgentAction.ID,\n\t\t\ttitle: localize2({ key: 'actions.chat.submitSecondaryAgent', comment: ['Send input from the chat input box to the secondary agent'] }, \"Submit to Secondary Agent\"),\n\t\t\tprecondition: ContextKeyExpr.and(CONTEXT_CHAT_INPUT_HAS_TEXT, CONTEXT_CHAT_INPUT_HAS_AGENT.negate(), CONTEXT_CHAT_REQUEST_IN_PROGRESS.negate()),\n\t\t\tkeybinding: {\n\t\t\t\twhen: CONTEXT_IN_CHAT_INPUT,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ChatExecuteSecondary,\n\t\t\t\tgroup: 'group_1'\n\t\t\t}\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\tconst context: IChatExecuteActionContext | undefined = args[0];\n\t\tconst agentService = accessor.get(IChatAgentService);\n\t\tconst secondaryAgent = agentService.getSecondaryAgent();\n\t\tif (!secondaryAgent) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst widgetService = accessor.get(IChatWidgetService);\n\t\tconst widget = context?.widget ?? widgetService.lastFocusedWidget;\n\t\tif (!widget) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (extractAgentAndCommand(widget.parsedInput).agentPart) {\n\t\t\twidget.acceptInput();\n\t\t} else {\n\t\t\twidget.lastSelectedAgent = secondaryAgent;\n\t\t\twidget.acceptInputWithPrefix(`${chatAgentLeader}${secondaryAgent.name}`);\n\t\t}\n\t}\n}\n\nclass SendToNewChatAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.chat.sendToNewChat',\n\t\t\ttitle: localize2('chat.newChat.label', \"Send to New Chat\"),\n\t\t\tprecondition: ContextKeyExpr.and(CONTEXT_CHAT_REQUEST_IN_PROGRESS.negate(), CONTEXT_CHAT_INPUT_HAS_TEXT),\n\t\t\tcategory: CHAT_CATEGORY,\n\t\t\tf1: false,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ChatExecuteSecondary,\n\t\t\t\tgroup: 'group_2'\n\t\t\t},\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Enter,\n\t\t\t\twhen: CONTEXT_IN_CHAT_INPUT,\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, ...args: any[]) {\n\t\tconst context: IChatExecuteActionContext | undefined = args[0];\n\n\t\tconst widgetService = accessor.get(IChatWidgetService);\n\t\tconst widget = context?.widget ?? widgetService.lastFocusedWidget;\n\t\tif (!widget) {\n\t\t\treturn;\n\t\t}\n\n\t\twidget.clear();\n\t\twidget.acceptInput(context?.inputValue);\n\t}\n}\n\nexport class CancelAction extends Action2 {\n\tstatic readonly ID = 'workbench.action.chat.cancel';\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CancelAction.ID,\n\t\t\ttitle: localize2('interactive.cancel.label', \"Cancel\"),\n\t\t\tf1: false,\n\t\t\tcategory: CHAT_CATEGORY,\n\t\t\ticon: Codicon.debugStop,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ChatExecute,\n\t\t\t\twhen: CONTEXT_CHAT_REQUEST_IN_PROGRESS,\n\t\t\t\tgroup: 'navigation',\n\t\t\t},\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Escape,\n\t\t\t\twin: { primary: KeyMod.Alt | KeyCode.Backspace },\n\t\t\t}\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\tconst context: IChatExecuteActionContext | undefined = args[0];\n\n\t\tconst widgetService = accessor.get(IChatWidgetService);\n\t\tconst widget = context?.widget ?? widgetService.lastFocusedWidget;\n\t\tif (!widget) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst chatService = accessor.get(IChatService);\n\t\tif (widget.viewModel) {\n\t\t\tchatService.cancelCurrentRequestForSession(widget.viewModel.sessionId);\n\t\t}\n\t}\n}\n\nexport function registerChatExecuteActions() {\n\tregisterAction2(SubmitAction);\n\tregisterAction2(CancelAction);\n\tregisterAction2(SendToNewChatAction);\n\tregisterAction2(ChatSubmitSecondaryAgentAction);\n}\n"],
  "mappings": "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",
  "names": []
}
