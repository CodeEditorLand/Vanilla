import{KeyCode as l,KeyMod as s}from"../../../../../base/common/keyCodes.js";import{localize2 as a}from"../../../../../nls.js";import{Action2 as p,registerAction2 as u}from"../../../../../platform/actions/common/actions.js";import{KeybindingWeight as g}from"../../../../../platform/keybinding/common/keybindingsRegistry.js";import{CONTEXT_CHAT_ENABLED as f,CONTEXT_IN_CHAT_SESSION as m}from"../../common/chatContextKeys.js";import{isResponseVM as h}from"../../common/chatViewModel.js";import{IChatWidgetService as A}from"../chat.js";import{CHAT_CATEGORY as F}from"./chatActions.js";function _(){u(class extends p{constructor(){super({id:"workbench.action.chat.nextFileTree",title:a("interactive.nextFileTree.label","Next File Tree"),keybinding:{primary:s.CtrlCmd|l.F9,weight:g.WorkbenchContrib,when:m},precondition:f,f1:!0,category:F})}run(t,...n){T(t,!1)}}),u(class extends p{constructor(){super({id:"workbench.action.chat.previousFileTree",title:a("interactive.previousFileTree.label","Previous File Tree"),keybinding:{primary:s.CtrlCmd|s.Shift|l.F9,weight:g.WorkbenchContrib,when:m},precondition:f,f1:!0,category:F})}run(t,...n){T(t,!0)}})}function T(i,t){const e=i.get(A).lastFocusedWidget;if(!e)return;const c=!e.inputEditor.hasWidgetFocus()&&e.getFocus(),r=(h(c)?c:void 0)??e.viewModel?.getItems().reverse().find(v=>h(v));if(!r)return;e.reveal(r);const o=e.getFileTreeInfosForResponse(r),d=e.getLastFocusedFileTreeForResponse(r),C=d?(d.treeIndex+(t?-1:1)+o.length)%o.length:t?o.length-1:0;o[C]?.focus()}export{_ as registerChatFileTreeActions};
