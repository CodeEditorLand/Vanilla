{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/contrib/chatDynamicVariables.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from '../../../../../base/common/arrays.js';\nimport { IMarkdownString, MarkdownString } from '../../../../../base/common/htmlContent.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { basename } from '../../../../../base/common/resources.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { IRange, Range } from '../../../../../editor/common/core/range.js';\nimport { IDecorationOptions } from '../../../../../editor/common/editorCommon.js';\nimport { Command } from '../../../../../editor/common/languages.js';\nimport { ITextModelService } from '../../../../../editor/common/services/resolverService.js';\nimport { localize } from '../../../../../nls.js';\nimport { Action2, registerAction2 } from '../../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../../platform/commands/common/commands.js';\nimport { ServicesAccessor } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { ILabelService } from '../../../../../platform/label/common/label.js';\nimport { ILogService } from '../../../../../platform/log/common/log.js';\nimport { AnythingQuickAccessProviderRunOptions, IQuickAccessOptions } from '../../../../../platform/quickinput/common/quickAccess.js';\nimport { IQuickInputService } from '../../../../../platform/quickinput/common/quickInput.js';\nimport { IChatWidget } from '../chat.js';\nimport { ChatWidget, IChatWidgetContrib } from '../chatWidget.js';\nimport { IChatRequestVariableValue, IChatVariablesService, IDynamicVariable } from '../../common/chatVariables.js';\n\nexport const dynamicVariableDecorationType = 'chat-dynamic-variable';\n\nexport class ChatDynamicVariableModel extends Disposable implements IChatWidgetContrib {\n\tpublic static readonly ID = 'chatDynamicVariableModel';\n\n\tprivate _variables: IDynamicVariable[] = [];\n\tget variables(): ReadonlyArray<IDynamicVariable> {\n\t\treturn [...this._variables];\n\t}\n\n\tget id() {\n\t\treturn ChatDynamicVariableModel.ID;\n\t}\n\n\tconstructor(\n\t\tprivate readonly widget: IChatWidget,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t) {\n\t\tsuper();\n\t\tthis._register(widget.inputEditor.onDidChangeModelContent(e => {\n\t\t\te.changes.forEach(c => {\n\t\t\t\t// Don't mutate entries in _variables, since they will be returned from the getter\n\t\t\t\tthis._variables = coalesce(this._variables.map(ref => {\n\t\t\t\t\tconst intersection = Range.intersectRanges(ref.range, c.range);\n\t\t\t\t\tif (intersection && !intersection.isEmpty()) {\n\t\t\t\t\t\t// The reference text was changed, it's broken.\n\t\t\t\t\t\t// But if the whole reference range was deleted (eg history navigation) then don't try to change the editor.\n\t\t\t\t\t\tif (!Range.containsRange(c.range, ref.range)) {\n\t\t\t\t\t\t\tconst rangeToDelete = new Range(ref.range.startLineNumber, ref.range.startColumn, ref.range.endLineNumber, ref.range.endColumn - 1);\n\t\t\t\t\t\t\tthis.widget.inputEditor.executeEdits(this.id, [{\n\t\t\t\t\t\t\t\trange: rangeToDelete,\n\t\t\t\t\t\t\t\ttext: '',\n\t\t\t\t\t\t\t}]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t} else if (Range.compareRangesUsingStarts(ref.range, c.range) > 0) {\n\t\t\t\t\t\tconst delta = c.text.length - c.rangeLength;\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...ref,\n\t\t\t\t\t\t\trange: {\n\t\t\t\t\t\t\t\tstartLineNumber: ref.range.startLineNumber,\n\t\t\t\t\t\t\t\tstartColumn: ref.range.startColumn + delta,\n\t\t\t\t\t\t\t\tendLineNumber: ref.range.endLineNumber,\n\t\t\t\t\t\t\t\tendColumn: ref.range.endColumn + delta\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ref;\n\t\t\t\t}));\n\t\t\t});\n\n\t\t\tthis.updateDecorations();\n\t\t}));\n\t}\n\n\tgetInputState(): any {\n\t\treturn this.variables;\n\t}\n\n\tsetInputState(s: any): void {\n\t\tif (!Array.isArray(s)) {\n\t\t\ts = [];\n\t\t}\n\n\t\tthis._variables = s;\n\t\tthis.updateDecorations();\n\t}\n\n\taddReference(ref: IDynamicVariable): void {\n\t\tthis._variables.push(ref);\n\t\tthis.updateDecorations();\n\t}\n\n\tprivate updateDecorations(): void {\n\t\tthis.widget.inputEditor.setDecorationsByType('chat', dynamicVariableDecorationType, this._variables.map((r): IDecorationOptions => ({\n\t\t\trange: r.range,\n\t\t\thoverMessage: this.getHoverForReference(r)\n\t\t})));\n\t}\n\n\tprivate getHoverForReference(ref: IDynamicVariable): IMarkdownString | undefined {\n\t\tconst value = ref.data;\n\t\tif (URI.isUri(value)) {\n\t\t\treturn new MarkdownString(this.labelService.getUriLabel(value, { relative: true }));\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n}\n\nChatWidget.CONTRIBS.push(ChatDynamicVariableModel);\n\ninterface SelectAndInsertFileActionContext {\n\twidget: IChatWidget;\n\trange: IRange;\n}\n\nfunction isSelectAndInsertFileActionContext(context: any): context is SelectAndInsertFileActionContext {\n\treturn 'widget' in context && 'range' in context;\n}\n\nexport class SelectAndInsertFileAction extends Action2 {\n\tstatic readonly Name = 'files';\n\tstatic readonly Item = {\n\t\tlabel: localize('allFiles', 'All Files'),\n\t\tdescription: localize('allFilesDescription', 'Search for relevant files in the workspace and provide context from them'),\n\t};\n\tstatic readonly ID = 'workbench.action.chat.selectAndInsertFile';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: SelectAndInsertFileAction.ID,\n\t\t\ttitle: '' // not displayed\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, ...args: any[]) {\n\t\tconst textModelService = accessor.get(ITextModelService);\n\t\tconst logService = accessor.get(ILogService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst chatVariablesService = accessor.get(IChatVariablesService);\n\n\t\tconst context = args[0];\n\t\tif (!isSelectAndInsertFileActionContext(context)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst doCleanup = () => {\n\t\t\t// Failed, remove the dangling `file`\n\t\t\tcontext.widget.inputEditor.executeEdits('chatInsertFile', [{ range: context.range, text: `` }]);\n\t\t};\n\n\t\tlet options: IQuickAccessOptions | undefined;\n\t\t// If we have a `files` variable, add an option to select all files in the picker.\n\t\t// This of course assumes that the `files` variable has the behavior that it searches\n\t\t// through files in the workspace.\n\t\tif (chatVariablesService.hasVariable(SelectAndInsertFileAction.Name)) {\n\t\t\tconst providerOptions: AnythingQuickAccessProviderRunOptions = {\n\t\t\t\tadditionPicks: [SelectAndInsertFileAction.Item, { type: 'separator' }]\n\t\t\t};\n\t\t\toptions = { providerOptions };\n\t\t}\n\t\t// TODO: have dedicated UX for this instead of using the quick access picker\n\t\tconst picks = await quickInputService.quickAccess.pick('', options);\n\t\tif (!picks?.length) {\n\t\t\tlogService.trace('SelectAndInsertFileAction: no file selected');\n\t\t\tdoCleanup();\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = context.widget.inputEditor;\n\t\tconst range = context.range;\n\n\t\t// Handle the special case of selecting all files\n\t\tif (picks[0] === SelectAndInsertFileAction.Item) {\n\t\t\tconst text = `#${SelectAndInsertFileAction.Name}`;\n\t\t\tconst success = editor.executeEdits('chatInsertFile', [{ range, text: text + ' ' }]);\n\t\t\tif (!success) {\n\t\t\t\tlogService.trace(`SelectAndInsertFileAction: failed to insert \"${text}\"`);\n\t\t\t\tdoCleanup();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// Handle the case of selecting a specific file\n\t\tconst resource = (picks[0] as unknown as { resource: unknown }).resource as URI;\n\t\tif (!textModelService.canHandleResource(resource)) {\n\t\t\tlogService.trace('SelectAndInsertFileAction: non-text resource selected');\n\t\t\tdoCleanup();\n\t\t\treturn;\n\t\t}\n\n\t\tconst fileName = basename(resource);\n\t\tconst text = `#file:${fileName}`;\n\t\tconst success = editor.executeEdits('chatInsertFile', [{ range, text: text + ' ' }]);\n\t\tif (!success) {\n\t\t\tlogService.trace(`SelectAndInsertFileAction: failed to insert \"${text}\"`);\n\t\t\tdoCleanup();\n\t\t\treturn;\n\t\t}\n\n\t\tcontext.widget.getContrib<ChatDynamicVariableModel>(ChatDynamicVariableModel.ID)?.addReference({\n\t\t\tid: 'vscode.file',\n\t\t\trange: { startLineNumber: range.startLineNumber, startColumn: range.startColumn, endLineNumber: range.endLineNumber, endColumn: range.startColumn + text.length },\n\t\t\tdata: resource\n\t\t});\n\t}\n}\nregisterAction2(SelectAndInsertFileAction);\n\nexport interface IAddDynamicVariableContext {\n\tid: string;\n\twidget: IChatWidget;\n\trange: IRange;\n\tvariableData: IChatRequestVariableValue;\n\tcommand?: Command;\n}\n\nfunction isAddDynamicVariableContext(context: any): context is IAddDynamicVariableContext {\n\treturn 'widget' in context &&\n\t\t'range' in context &&\n\t\t'variableData' in context;\n}\n\nexport class AddDynamicVariableAction extends Action2 {\n\tstatic readonly ID = 'workbench.action.chat.addDynamicVariable';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AddDynamicVariableAction.ID,\n\t\t\ttitle: '' // not displayed\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, ...args: any[]) {\n\t\tconst context = args[0];\n\t\tif (!isAddDynamicVariableContext(context)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet range = context.range;\n\t\tconst variableData = context.variableData;\n\n\t\tconst doCleanup = () => {\n\t\t\t// Failed, remove the dangling variable prefix\n\t\t\tcontext.widget.inputEditor.executeEdits('chatInsertDynamicVariableWithArguments', [{ range: context.range, text: `` }]);\n\t\t};\n\n\t\t// If this completion item has no command, return it directly\n\t\tif (context.command) {\n\t\t\t// Invoke the command on this completion item along with its args and return the result\n\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\tconst selection: string | undefined = await commandService.executeCommand(context.command.id, ...(context.command.arguments ?? []));\n\t\t\tif (!selection) {\n\t\t\t\tdoCleanup();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Compute new range and variableData\n\t\t\tconst insertText = ':' + selection;\n\t\t\tconst insertRange = new Range(range.startLineNumber, range.endColumn, range.endLineNumber, range.endColumn + insertText.length);\n\t\t\trange = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + insertText.length);\n\t\t\tconst editor = context.widget.inputEditor;\n\t\t\tconst success = editor.executeEdits('chatInsertDynamicVariableWithArguments', [{ range: insertRange, text: insertText + ' ' }]);\n\t\t\tif (!success) {\n\t\t\t\tdoCleanup();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tcontext.widget.getContrib<ChatDynamicVariableModel>(ChatDynamicVariableModel.ID)?.addReference({\n\t\t\tid: context.id,\n\t\t\trange: range,\n\t\t\tdata: variableData\n\t\t});\n\t}\n}\nregisterAction2(AddDynamicVariableAction);\n"],
  "mappings": "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",
  "names": ["text", "success"]
}
