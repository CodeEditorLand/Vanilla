var d=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var g=(n,e,t,r)=>{for(var o=r>1?void 0:r?u(e,t):e,i=n.length-1,l;i>=0;i--)(l=n[i])&&(o=(r?l(e,t,o):l(o))||o);return r&&o&&d(e,t,o),o},p=(n,e)=>(t,r)=>e(t,r,n);import"../../../../base/browser/ui/aria/aria.js";import"../../../../base/browser/ui/list/listWidget.js";import{marked as b}from"../../../../base/common/marked/marked.js";import{localize as s}from"../../../../nls.js";import{AccessibilityVerbositySettingId as k}from"../../accessibility/browser/accessibilityConfiguration.js";import{IAccessibleViewService as f}from"../../../../platform/accessibility/browser/accessibleView.js";import"./chat.js";import{isRequestVM as m,isResponseVM as C}from"../common/chatViewModel.js";let c=class{constructor(e){this._accessibleViewService=e}getWidgetRole(){return"list"}getRole(e){return"listitem"}getWidgetAriaLabel(){return s("chat","Chat")}getAriaLabel(e){return m(e)?e.messageText:C(e)?this._getLabelWithCodeBlockCount(e):""}_getLabelWithCodeBlockCount(e){const t=this._accessibleViewService.getOpenAriaHint(k.Chat);let r="";const o=e.response.value.filter(a=>!("value"in a))?.length??0;let i="";switch(o){case 0:break;case 1:i=s("singleFileTreeHint","1 file tree");break;default:i=s("multiFileTreeHint","{0} file trees",o);break}const l=b.lexer(e.response.toString()).filter(a=>a.type==="code")?.length??0;switch(l){case 0:r=t?s("noCodeBlocksHint","{0} {1} {2}",i,e.response.toString(),t):s("noCodeBlocks","{0} {1}",i,e.response.toString());break;case 1:r=t?s("singleCodeBlockHint","{0} 1 code block: {1} {2}",i,e.response.toString(),t):s("singleCodeBlock","{0} 1 code block: {1}",i,e.response.toString());break;default:r=t?s("multiCodeBlockHint","{0} {1} code blocks: {2}",i,l,e.response.toString(),t):s("multiCodeBlock","{0} {1} code blocks",i,l,e.response.toString());break}return r}};c=g([p(0,f)],c);export{c as ChatAccessibilityProvider};
