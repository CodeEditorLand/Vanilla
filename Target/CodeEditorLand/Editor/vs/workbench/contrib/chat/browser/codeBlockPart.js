var oe=Object.defineProperty;var re=Object.getOwnPropertyDescriptor;var C=(u,o,e,t)=>{for(var i=t>1?void 0:t?re(o,e):o,r=u.length-1,n;r>=0;r--)(n=u[r])&&(i=(t?n(o,e,i):n(i))||i);return t&&i&&oe(o,e,i),i},a=(u,o)=>(e,t)=>o(e,t,u);import"./codeBlockPart.css";import*as d from"../../../../base/browser/dom.js";import{renderFormattedText as ne}from"../../../../base/browser/formattedTextRenderer.js";import{Button as se}from"../../../../base/browser/ui/button/button.js";import"../../../../base/common/cancellation.js";import{Codicon as W}from"../../../../base/common/codicons.js";import{Emitter as O,Event as ae}from"../../../../base/common/event.js";import{combinedDisposable as de,Disposable as B,DisposableStore as le,MutableDisposable as ce}from"../../../../base/common/lifecycle.js";import{Schemas as F}from"../../../../base/common/network.js";import{isEqual as he}from"../../../../base/common/resources.js";import{assertType as ue}from"../../../../base/common/types.js";import{URI as pe}from"../../../../base/common/uri.js";import"../../../../editor/browser/config/editorConfiguration.js";import{TabFocus as K}from"../../../../editor/browser/config/tabFocus.js";import"../../../../editor/browser/editorBrowser.js";import{EditorExtensionsRegistry as V}from"../../../../editor/browser/editorExtensions.js";import{ICodeEditorService as fe}from"../../../../editor/browser/services/codeEditorService.js";import{CodeEditorWidget as ge}from"../../../../editor/browser/widget/codeEditor/codeEditorWidget.js";import{DiffEditorWidget as me}from"../../../../editor/browser/widget/diffEditor/diffEditorWidget.js";import{EDITOR_FONT_DEFAULTS as A,EditorOption as ve}from"../../../../editor/common/config/editorOptions.js";import{Range as Ce}from"../../../../editor/common/core/range.js";import{ScrollType as be}from"../../../../editor/common/editorCommon.js";import{TextEdit as Ee}from"../../../../editor/common/languages.js";import{EndOfLinePreference as Ie}from"../../../../editor/common/model.js";import{TextModelText as ye}from"../../../../editor/common/model/textModelText.js";import{IModelService as R}from"../../../../editor/common/services/model.js";import{DefaultModelSHA1Computer as Se}from"../../../../editor/common/services/modelService.js";import{ITextModelService as P}from"../../../../editor/common/services/resolverService.js";import{BracketMatchingController as z}from"../../../../editor/contrib/bracketMatching/browser/bracketMatching.js";import{ColorDetector as De}from"../../../../editor/contrib/colorPicker/browser/colorDetector.js";import{ContextMenuController as U}from"../../../../editor/contrib/contextmenu/browser/contextmenu.js";import{GotoDefinitionAtPositionEditorContribution as N}from"../../../../editor/contrib/gotoSymbol/browser/link/goToDefinitionAtPosition.js";import{ContentHoverController as b}from"../../../../editor/contrib/hover/browser/contentHoverController.js";import{GlyphHoverController as E}from"../../../../editor/contrib/hover/browser/glyphHoverController.js";import{LinkDetector as xe}from"../../../../editor/contrib/links/browser/links.js";import{MessageController as Me}from"../../../../editor/contrib/message/browser/messageController.js";import{ViewportSemanticTokensContribution as G}from"../../../../editor/contrib/semanticTokens/browser/viewportSemanticTokens.js";import{SmartSelectController as $}from"../../../../editor/contrib/smartSelect/browser/smartSelect.js";import{WordHighlighterContribution as g}from"../../../../editor/contrib/wordHighlighter/browser/wordHighlighter.js";import{localize as l}from"../../../../nls.js";import{IAccessibilityService as j}from"../../../../platform/accessibility/common/accessibility.js";import{MenuWorkbenchToolBar as q}from"../../../../platform/actions/browser/toolbar.js";import"../../../../platform/actions/common/actions.js";import{IConfigurationService as Z}from"../../../../platform/configuration/common/configuration.js";import{IContextKeyService as m}from"../../../../platform/contextkey/common/contextkey.js";import{IDialogService as Le}from"../../../../platform/dialogs/common/dialogs.js";import{FileKind as ke}from"../../../../platform/files/common/files.js";import{IInstantiationService as J}from"../../../../platform/instantiation/common/instantiation.js";import{ServiceCollection as y}from"../../../../platform/instantiation/common/serviceCollection.js";import{ILabelService as we}from"../../../../platform/label/common/label.js";import{IOpenerService as _e}from"../../../../platform/opener/common/opener.js";import{ResourceLabel as Te}from"../../../browser/labels.js";import{ResourceContextKey as Be}from"../../../common/contextkeys.js";import{AccessibilityVerbositySettingId as S}from"../../accessibility/browser/accessibilityConfiguration.js";import{InspectEditorTokensController as Re}from"../../codeEditor/browser/inspectEditorTokens/inspectEditorTokens.js";import{MenuPreventer as X}from"../../codeEditor/browser/menuPreventer.js";import{SelectionClipboardContributionID as Q}from"../../codeEditor/browser/selectionClipboard.js";import{getSimpleEditorOptions as Y}from"../../codeEditor/browser/simpleEditorOptions.js";import"../common/annotations.js";import{CONTEXT_CHAT_EDIT_APPLIED as He}from"../common/chatContextKeys.js";import"../common/chatModel.js";import{isResponseVM as ee}from"../common/chatViewModel.js";import"./chat.js";import"./chatListRenderer.js";import"./chatOptions.js";const h=d.$,ci="vscode-local-file";function hi(u){let o;try{o=JSON.parse(u)}catch{throw new Error("Could not parse code block local file data")}let e;try{e=pe.revive(o?.uri)}catch{throw new Error("Invalid code block local file data URI")}let t;return o.range&&(t=new Ce(o.range.startLineNumber+1,o.range.startColumn+1,o.range.endLineNumber+1,o.range.endColumn+1)),{uri:e,range:t}}const p=10;let D=class extends B{constructor(e,t,i,r,n,c,k,te,ie){super();this.options=e;this.menuId=t;this.modelService=k;this.configurationService=te;this.accessibilityService=ie;this.element=h(".interactive-result-code-block"),this.resourceContextKey=this._register(n.createInstance(Be)),this.contextKeyService=this._register(c.createScoped(this.element));const w=this._register(n.createChild(new y([m,this.contextKeyService]))),H=d.append(this.element,h(".interactive-result-editor"));this.editor=this.createEditor(w,H,{...Y(this.configurationService),readOnly:!0,lineNumbers:"off",selectOnLineNumbers:!0,scrollBeyondLastLine:!1,lineDecorationsWidth:8,dragAndDrop:!1,padding:{top:p,bottom:p},mouseWheelZoom:!1,scrollbar:{vertical:"hidden",alwaysConsumeMouseWheel:!1},definitionLinkOpensInPeek:!1,gotoLocation:{multiple:"goto",multipleDeclarations:"goto",multipleDefinitions:"goto",multipleImplementations:"goto"},ariaLabel:l("chat.codeBlockHelp","Code block"),overflowWidgetsDomNode:r,...this.getEditorOptionsFromConfig()});const f=d.append(this.element,h(".interactive-result-code-block-toolbar")),v=this.editor.contextKeyService.createScoped(f),_=this._register(w.createChild(new y([m,v])));this.toolbar=this._register(_.createInstance(q,f,t,{menuOptions:{shouldForwardArgs:!0}}));const I=d.append(this.element,h(".interactive-result-vulns")),T=d.append(I,h(".interactive-result-vulns-header",void 0));this.vulnsButton=this._register(new se(T,{buttonBackground:void 0,buttonBorder:void 0,buttonForeground:void 0,buttonHoverBackground:void 0,buttonSecondaryBackground:void 0,buttonSecondaryForeground:void 0,buttonSecondaryHoverBackground:void 0,buttonSeparator:void 0,supportIcons:!0})),this.vulnsListElement=d.append(I,h("ul.interactive-result-vulns-list")),this._register(this.vulnsButton.onDidClick(()=>{const s=this.currentCodeBlockData.element;s.vulnerabilitiesListExpanded=!s.vulnerabilitiesListExpanded,this.vulnsButton.label=this.getVulnerabilitiesLabel(),this.element.classList.toggle("chat-vulnerabilities-collapsed",!s.vulnerabilitiesListExpanded),this._onDidChangeContentHeight.fire()})),this._register(this.toolbar.onDidChangeDropdownVisibility(s=>{f.classList.toggle("force-visibility",s)})),this._configureForScreenReader(),this._register(this.accessibilityService.onDidChangeScreenReaderOptimized(()=>this._configureForScreenReader())),this._register(this.configurationService.onDidChangeConfiguration(s=>{s.affectedKeys.has(S.Chat)&&this._configureForScreenReader()})),this._register(this.options.onDidChange(()=>{this.editor.updateOptions(this.getEditorOptionsFromConfig())})),this._register(this.editor.onDidScrollChange(s=>{this.currentScrollWidth=s.scrollWidth})),this._register(this.editor.onDidContentSizeChange(s=>{s.contentHeightChanged&&this._onDidChangeContentHeight.fire()})),this._register(this.editor.onDidBlurEditorWidget(()=>{this.element.classList.remove("focused"),g.get(this.editor)?.stopHighlighting(),this.clearWidgets()})),this._register(this.editor.onDidFocusEditorWidget(()=>{this.element.classList.add("focused"),g.get(this.editor)?.restoreViewState(!0)})),i.onDidScroll&&this._register(i.onDidScroll(s=>{this.clearWidgets()}))}_onDidChangeContentHeight=this._register(new O);onDidChangeContentHeight=this._onDidChangeContentHeight.event;editor;toolbar;contextKeyService;element;vulnsButton;vulnsListElement;currentCodeBlockData;currentScrollWidth=0;disposableStore=this._register(new le);isDisposed=!1;resourceContextKey;dispose(){this.isDisposed=!0,super.dispose()}get uri(){return this.editor.getModel()?.uri}createEditor(e,t,i){return this._register(e.createInstance(ge,t,i,{isSimpleWidget:!1,contributions:V.getSomeEditorContributions([X.ID,Q,U.ID,g.ID,G.ID,z.ID,$.ID,b.ID,E.ID,Me.ID,N.ID,De.ID,xe.ID,Re.ID])}))}focus(){this.editor.focus()}updatePaddingForLayout(){const e=this.currentScrollWidth>this.editor.getLayoutInfo().contentWidth,t=this.editor.getLayoutInfo().horizontalScrollbarHeight,i=e?Math.max(p-t,2):p;this.editor.updateOptions({padding:{top:p,bottom:i}})}_configureForScreenReader(){const e=this.toolbar.getElement();this.accessibilityService.isScreenReaderOptimized()?(e.style.display="block",e.ariaLabel=this.configurationService.getValue(S.Chat)?l("chat.codeBlock.toolbarVerbose","Toolbar for code block which can be reached via tab"):l("chat.codeBlock.toolbar","Code block toolbar")):e.style.display=""}getEditorOptionsFromConfig(){return{wordWrap:this.options.configuration.resultEditor.wordWrap,fontLigatures:this.options.configuration.resultEditor.fontLigatures,bracketPairColorization:this.options.configuration.resultEditor.bracketPairColorization,fontFamily:this.options.configuration.resultEditor.fontFamily==="default"?A.fontFamily:this.options.configuration.resultEditor.fontFamily,fontSize:this.options.configuration.resultEditor.fontSize,fontWeight:this.options.configuration.resultEditor.fontWeight,lineHeight:this.options.configuration.resultEditor.lineHeight}}layout(e){const t=this.getContentHeight();this.editor.layout({width:e-2,height:t}),this.updatePaddingForLayout()}getContentHeight(){if(this.currentCodeBlockData?.range){const e=this.currentCodeBlockData.range.endLineNumber-this.currentCodeBlockData.range.startLineNumber+1,t=this.editor.getOption(ve.lineHeight);return e*t}return this.editor.getContentHeight()}async render(e,t,i){this.currentCodeBlockData=e,e.parentContextKeyService&&this.contextKeyService.updateParent(e.parentContextKeyService),this.options.configuration.resultEditor.wordWrap==="on"&&this.layout(t),await this.updateEditor(e),!this.isDisposed&&(this.layout(t),i&&(this.disposableStore.clear(),this.disposableStore.add(this.editor.onDidFocusEditorWidget(()=>K.setTabFocusMode(!0))),this.disposableStore.add(this.editor.onDidBlurEditorWidget(()=>K.setTabFocusMode(!1)))),this.editor.updateOptions({ariaLabel:l("chat.codeBlockLabel","Code block {0}",e.codeBlockIndex+1),readOnly:!i}),e.hideToolbar?d.hide(this.toolbar.getElement()):d.show(this.toolbar.getElement()),e.vulns?.length&&ee(e.element)?(d.clearNode(this.vulnsListElement),this.element.classList.remove("no-vulns"),this.element.classList.toggle("chat-vulnerabilities-collapsed",!e.element.vulnerabilitiesListExpanded),d.append(this.vulnsListElement,...e.vulns.map(r=>h("li",void 0,h("span.chat-vuln-title",void 0,r.title)," "+r.description))),this.vulnsButton.label=this.getVulnerabilitiesLabel()):this.element.classList.add("no-vulns"))}reset(){this.clearWidgets()}clearWidgets(){b.get(this.editor)?.hideContentHover(),E.get(this.editor)?.hideContentHover()}async updateEditor(e){const t=(await e.textModel).textEditorModel;this.editor.setModel(t),e.range&&(this.editor.setSelection(e.range),this.editor.revealRangeInCenter(e.range,be.Immediate)),this.toolbar.context={code:t.getTextBuffer().getValueInRange(e.range??t.getFullModelRange(),Ie.TextDefined),codeBlockIndex:e.codeBlockIndex,element:e.element,languageId:t.getLanguageId(),codemapperUri:e.codemapperUri},this.resourceContextKey.set(t.uri)}getVulnerabilitiesLabel(){return!this.currentCodeBlockData||!this.currentCodeBlockData.vulns?"":`${this.currentCodeBlockData.vulns.length>1?l("vulnerabilitiesPlural","{0} vulnerabilities",this.currentCodeBlockData.vulns.length):l("vulnerabilitiesSingular","{0} vulnerability",1)} $(${(i=>i.vulnerabilitiesListExpanded?W.chevronDown:W.chevronRight)(this.currentCodeBlockData.element).id})`}};D=C([a(4,J),a(5,m),a(6,R),a(7,Z),a(8,j)],D);let x=class extends B{constructor(e,t){super();this._modelService=t;this._register(e.registerTextModelContentProvider(F.vscodeChatCodeBlock,this))}async provideTextContent(e){const t=this._modelService.getModel(e);return t||this._modelService.createModel("",null,e)}};x=C([a(0,P),a(1,R)],x);let M=class extends B{constructor(e,t,i,r,n,c,k,te,ie,w,H){super();this.options=e;this.menuId=t;this.modelService=k;this.configurationService=te;this.accessibilityService=ie;this.labelService=w;this.openerService=H;this.element=h(".interactive-result-code-block"),this.element.classList.add("compare"),this.messageElement=d.append(this.element,h(".message")),this.messageElement.setAttribute("role","status"),this.messageElement.tabIndex=0,this.contextKeyService=this._register(c.createScoped(this.element));const f=this._register(n.createChild(new y([m,this.contextKeyService]))),v=d.append(this.element,h(".interactive-result-header.show-file-icons")),_=d.append(this.element,h(".interactive-result-editor"));this.diffEditor=this.createDiffEditor(f,_,{...Y(this.configurationService),lineNumbers:"on",selectOnLineNumbers:!0,scrollBeyondLastLine:!1,lineDecorationsWidth:12,dragAndDrop:!1,padding:{top:p,bottom:p},mouseWheelZoom:!1,scrollbar:{vertical:"hidden",alwaysConsumeMouseWheel:!1},definitionLinkOpensInPeek:!1,gotoLocation:{multiple:"goto",multipleDeclarations:"goto",multipleDefinitions:"goto",multipleImplementations:"goto"},ariaLabel:l("chat.codeBlockHelp","Code block"),overflowWidgetsDomNode:r,...this.getEditorOptionsFromConfig()}),this.resourceLabel=this._register(f.createInstance(Te,v,{supportIcons:!0}));const I=this.diffEditor.getModifiedEditor().contextKeyService.createScoped(v),T=this._register(f.createChild(new y([m,I])));this.toolbar=this._register(T.createInstance(q,v,t,{menuOptions:{shouldForwardArgs:!0}})),this._configureForScreenReader(),this._register(this.accessibilityService.onDidChangeScreenReaderOptimized(()=>this._configureForScreenReader())),this._register(this.configurationService.onDidChangeConfiguration(s=>{s.affectedKeys.has(S.Chat)&&this._configureForScreenReader()})),this._register(this.options.onDidChange(()=>{this.diffEditor.updateOptions(this.getEditorOptionsFromConfig())})),this._register(this.diffEditor.getModifiedEditor().onDidScrollChange(s=>{this.currentScrollWidth=s.scrollWidth})),this._register(this.diffEditor.onDidContentSizeChange(s=>{s.contentHeightChanged&&this._onDidChangeContentHeight.fire()})),this._register(this.diffEditor.getModifiedEditor().onDidBlurEditorWidget(()=>{this.element.classList.remove("focused"),g.get(this.diffEditor.getModifiedEditor())?.stopHighlighting(),this.clearWidgets()})),this._register(this.diffEditor.getModifiedEditor().onDidFocusEditorWidget(()=>{this.element.classList.add("focused"),g.get(this.diffEditor.getModifiedEditor())?.restoreViewState(!0)})),i.onDidScroll&&this._register(i.onDidScroll(s=>{this.clearWidgets()}))}_onDidChangeContentHeight=this._register(new O);onDidChangeContentHeight=this._onDidChangeContentHeight.event;contextKeyService;diffEditor;resourceLabel;toolbar;element;messageElement;_lastDiffEditorViewModel=this._store.add(new ce);currentScrollWidth=0;get uri(){return this.diffEditor.getModifiedEditor().getModel()?.uri}createDiffEditor(e,t,i){const r={isSimpleWidget:!1,contributions:V.getSomeEditorContributions([X.ID,Q,U.ID,g.ID,G.ID,z.ID,$.ID,b.ID,E.ID,N.ID])};return this._register(e.createInstance(me,t,{scrollbar:{useShadows:!1,alwaysConsumeMouseWheel:!1,ignoreHorizontalScrollbarInContentHeight:!0},renderMarginRevertIcon:!1,diffCodeLens:!1,scrollBeyondLastLine:!1,stickyScroll:{enabled:!1},originalAriaLabel:l("original","Original"),modifiedAriaLabel:l("modified","Modified"),diffAlgorithm:"advanced",readOnly:!1,isInEmbeddedEditor:!0,useInlineViewWhenSpaceIsLimited:!0,experimental:{useTrueInlineView:!0},renderSideBySideInlineBreakpoint:300,renderOverviewRuler:!1,compactMode:!0,hideUnchangedRegions:{enabled:!0,contextLineCount:1},renderGutterMenu:!1,lineNumbersMinChars:1,...i},{originalEditor:r,modifiedEditor:r}))}focus(){this.diffEditor.focus()}updatePaddingForLayout(){const e=this.currentScrollWidth>this.diffEditor.getModifiedEditor().getLayoutInfo().contentWidth,t=this.diffEditor.getModifiedEditor().getLayoutInfo().horizontalScrollbarHeight,i=e?Math.max(p-t,2):p;this.diffEditor.updateOptions({padding:{top:p,bottom:i}})}_configureForScreenReader(){const e=this.toolbar.getElement();this.accessibilityService.isScreenReaderOptimized()?(e.style.display="block",e.ariaLabel=this.configurationService.getValue(S.Chat)?l("chat.codeBlock.toolbarVerbose","Toolbar for code block which can be reached via tab"):l("chat.codeBlock.toolbar","Code block toolbar")):e.style.display=""}getEditorOptionsFromConfig(){return{wordWrap:this.options.configuration.resultEditor.wordWrap,fontLigatures:this.options.configuration.resultEditor.fontLigatures,bracketPairColorization:this.options.configuration.resultEditor.bracketPairColorization,fontFamily:this.options.configuration.resultEditor.fontFamily==="default"?A.fontFamily:this.options.configuration.resultEditor.fontFamily,fontSize:this.options.configuration.resultEditor.fontSize,fontWeight:this.options.configuration.resultEditor.fontWeight,lineHeight:this.options.configuration.resultEditor.lineHeight}}layout(e){const i=d.getTotalHeight(this.toolbar.getElement()),r=this.diffEditor.getModel()?this.diffEditor.getContentHeight():d.getTotalHeight(this.messageElement),n=new d.Dimension(e-2,i+r);this.element.style.height=`${n.height}px`,this.element.style.width=`${n.width}px`,this.diffEditor.layout(n.with(void 0,r-2)),this.updatePaddingForLayout()}async render(e,t,i){e.parentContextKeyService&&this.contextKeyService.updateParent(e.parentContextKeyService),this.options.configuration.resultEditor.wordWrap==="on"&&this.layout(t),await this.updateEditor(e,i),this.layout(t),this.diffEditor.updateOptions({ariaLabel:l("chat.compareCodeBlockLabel","Code Edits")}),this.resourceLabel.element.setFile(e.edit.uri,{fileKind:ke.FILE,fileDecorations:{colors:!0,badges:!1}})}reset(){this.clearWidgets()}clearWidgets(){b.get(this.diffEditor.getOriginalEditor())?.hideContentHover(),b.get(this.diffEditor.getModifiedEditor())?.hideContentHover(),E.get(this.diffEditor.getOriginalEditor())?.hideContentHover(),E.get(this.diffEditor.getModifiedEditor())?.hideContentHover()}async updateEditor(e,t){if(!ee(e.element))return;const i=!!(e.edit.state?.applied??0);if(He.bindTo(this.contextKeyService).set(i),this.element.classList.toggle("no-diff",i),i){ue(e.edit.state?.applied);const n=this.labelService.getUriLabel(e.edit.uri,{relative:!0,noPrefix:!0});let c;e.edit.state.applied===1?c=l("chat.edits.1","Made 1 change in [[``{0}``]]",n):e.edit.state.applied<0?c=l("chat.edits.rejected","Edits in [[``{0}``]] have been rejected",n):c=l("chat.edits.N","Made {0} changes in [[``{1}``]]",e.edit.state.applied,n);const k=ne(c,{renderCodeSegments:!0,actionHandler:{callback:()=>{this.openerService.open(e.edit.uri,{fromUserGesture:!0,allowCommands:!1})},disposables:this._store}});d.reset(this.messageElement,k)}const r=await e.diffData;if(!i&&r){const n=this.diffEditor.createViewModel({original:r.original,modified:r.modified});if(await n.waitForDiff(),t.isCancellationRequested)return;const c=ae.any(r.original.onWillDispose,r.modified.onWillDispose)(()=>{this.diffEditor.setModel(null)});this.diffEditor.setModel(n),this._lastDiffEditorViewModel.value=de(c,n)}else this.diffEditor.setModel(null),this._lastDiffEditorViewModel.value=void 0,this._onDidChangeContentHeight.fire();this.toolbar.context={edit:e.edit,element:e.element,diffEditor:this.diffEditor}}};M=C([a(4,J),a(5,m),a(6,R),a(7,Z),a(8,j),a(9,we),a(10,_e)],M);let L=class{constructor(o,e,t){this.modelService=o;this.editorService=e;this.dialogService=t}_sha1=new Se;async apply(o,e,t){if(!o.response.value.includes(e)||e.state?.applied)return;if(!t)for(const r of this.editorService.listDiffEditors()){if(!r.getContainerDomNode().isConnected)continue;const n=r.getModel();if(!n||!he(n.original.uri,e.uri)||n.modified.uri.scheme!==F.vscodeChatCodeCompareBlock){t=r;break}}const i=t?await this._applyWithDiffEditor(t,e):await this._apply(e);o.setEditApplied(e,i)}async _applyWithDiffEditor(o,e){const t=o.getModel();if(!t)return 0;const i=o.getDiffComputationResult();if(!i||i.identical||!await this._checkSha1(t.original,e))return 0;const r=new ye(t.modified),n=i.changes2.map(c=>c.toRangeMapping().toTextEdit(r).toSingleEditOperation());return t.original.pushStackElement(),t.original.pushEditOperations(null,n,()=>null),t.original.pushStackElement(),n.length}async _apply(o){const e=await this.modelService.createModelReference(o.uri);try{if(!await this._checkSha1(e.object.textEditorModel,o))return 0;e.object.textEditorModel.pushStackElement();let t=0;for(const i of o.edits){const r=i.map(Ee.asEditOperation);e.object.textEditorModel.pushEditOperations(null,r,()=>null),t+=r.length}return e.object.textEditorModel.pushStackElement(),t}finally{e.dispose()}}async _checkSha1(o,e){return!(e.state?.sha1&&this._sha1.computeSHA1(o)&&this._sha1.computeSHA1(o)!==e.state.sha1&&!(await this.dialogService.confirm({message:l("interactive.compare.apply.confirm","The original file has been modified."),detail:l("interactive.compare.apply.confirm.detail","Do you want to apply the changes anyway?")})).confirmed)}discard(o,e){o.response.value.includes(e)&&(e.state?.applied||o.setEditApplied(e,-1))}};L=C([a(0,P),a(1,fe),a(2,Le)],L);export{x as ChatCodeBlockContentProvider,D as CodeBlockPart,M as CodeCompareBlockPart,L as DefaultChatTextEditor,ci as localFileLanguageId,hi as parseLocalFileData};
