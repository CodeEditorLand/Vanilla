{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/chatEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as dom from \"../../../../base/browser/dom.js\";\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport {\n\tIContextKeyService,\n\ttype IScopedContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport type { IEditorOptions } from \"../../../../platform/editor/common/editor.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ServiceCollection } from \"../../../../platform/instantiation/common/serviceCollection.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport {\n\teditorBackground,\n\teditorForeground,\n\tinputBackground,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport { EditorPane } from \"../../../browser/parts/editor/editorPane.js\";\nimport type { IEditorOpenContext } from \"../../../common/editor.js\";\nimport { Memento } from \"../../../common/memento.js\";\nimport type { IEditorGroup } from \"../../../services/editor/common/editorGroupsService.js\";\nimport { ChatAgentLocation } from \"../common/chatAgents.js\";\nimport type {\n\tIChatModel,\n\tIExportableChatData,\n\tISerializableChatData,\n} from \"../common/chatModel.js\";\nimport { CHAT_PROVIDER_ID } from \"../common/chatParticipantContribTypes.js\";\nimport { clearChatEditor } from \"./actions/chatClear.js\";\nimport { ChatEditorInput } from \"./chatEditorInput.js\";\nimport { ChatWidget, type IChatViewState } from \"./chatWidget.js\";\n\nexport interface IChatEditorOptions extends IEditorOptions {\n\ttarget?:\n\t\t| { sessionId: string }\n\t\t| { data: IExportableChatData | ISerializableChatData };\n}\n\nexport class ChatEditor extends EditorPane {\n\tprivate widget!: ChatWidget;\n\n\tprivate _scopedContextKeyService!: IScopedContextKeyService;\n\toverride get scopedContextKeyService() {\n\t\treturn this._scopedContextKeyService;\n\t}\n\n\tprivate _memento: Memento | undefined;\n\tprivate _viewState: IChatViewState | undefined;\n\n\tconstructor(\n\t\tgroup: IEditorGroup,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t) {\n\t\tsuper(ChatEditorInput.EditorID, group, telemetryService, themeService, storageService);\n\t}\n\n\tprivate async clear() {\n\t\tif (this.input) {\n\t\t\treturn this.instantiationService.invokeFunction(\n\t\t\t\tclearChatEditor,\n\t\t\t\tthis.input as ChatEditorInput,\n\t\t\t);\n\t\t}\n\t}\n\n\tprotected override createEditor(parent: HTMLElement): void {\n\t\tthis._scopedContextKeyService = this._register(\n\t\t\tthis.contextKeyService.createScoped(parent),\n\t\t);\n\t\tconst scopedInstantiationService = this._register(\n\t\t\tthis.instantiationService.createChild(\n\t\t\t\tnew ServiceCollection([\n\t\t\t\t\tIContextKeyService,\n\t\t\t\t\tthis.scopedContextKeyService,\n\t\t\t\t]),\n\t\t\t),\n\t\t);\n\n\t\tthis.widget = this._register(\n\t\t\tscopedInstantiationService.createInstance(\n\t\t\t\tChatWidget,\n\t\t\t\tChatAgentLocation.Panel,\n\t\t\t\tundefined,\n\t\t\t\t{ supportsFileReferences: true },\n\t\t\t\t{\n\t\t\t\t\tlistForeground: editorForeground,\n\t\t\t\t\tlistBackground: editorBackground,\n\t\t\t\t\tinputEditorBackground: inputBackground,\n\t\t\t\t\tresultEditorBackground: editorBackground,\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tthis._register(this.widget.onDidClear(() => this.clear()));\n\t\tthis.widget.render(parent);\n\t\tthis.widget.setVisible(true);\n\t}\n\n\tprotected override setEditorVisible(visible: boolean): void {\n\t\tsuper.setEditorVisible(visible);\n\n\t\tthis.widget?.setVisible(visible);\n\t}\n\n\tpublic override focus(): void {\n\t\tsuper.focus();\n\n\t\tthis.widget?.focusInput();\n\t}\n\n\toverride clearInput(): void {\n\t\tthis.saveState();\n\t\tsuper.clearInput();\n\t}\n\n\toverride async setInput(\n\t\tinput: ChatEditorInput,\n\t\toptions: IChatEditorOptions | undefined,\n\t\tcontext: IEditorOpenContext,\n\t\ttoken: CancellationToken,\n\t): Promise<void> {\n\t\tsuper.setInput(input, options, context, token);\n\n\t\tconst editorModel = await input.resolve();\n\t\tif (!editorModel) {\n\t\t\tthrow new Error(\n\t\t\t\t`Failed to get model for chat editor. id: ${input.sessionId}`,\n\t\t\t);\n\t\t}\n\n\t\tif (!this.widget) {\n\t\t\tthrow new Error(\"ChatEditor lifecycle issue: no editor widget\");\n\t\t}\n\n\t\tthis.updateModel(\n\t\t\teditorModel.model,\n\t\t\toptions?.viewState ?? input.options.viewState,\n\t\t);\n\t}\n\n\tprivate updateModel(model: IChatModel, viewState?: IChatViewState): void {\n\t\tthis._memento = new Memento(\n\t\t\t\"interactive-session-editor-\" + CHAT_PROVIDER_ID,\n\t\t\tthis.storageService,\n\t\t);\n\t\tthis._viewState =\n\t\t\tviewState ??\n\t\t\t(this._memento.getMemento(\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\tStorageTarget.MACHINE,\n\t\t\t) as IChatViewState);\n\t\tthis.widget.setModel(model, { ...this._viewState });\n\t}\n\n\tprotected override saveState(): void {\n\t\tthis.widget?.saveState();\n\n\t\tif (this._memento && this._viewState) {\n\t\t\tconst widgetViewState = this.widget.getViewState();\n\t\t\tthis._viewState.inputValue = widgetViewState.inputValue;\n\t\t\tthis._memento.saveMemento();\n\t\t}\n\t}\n\n\toverride layout(\n\t\tdimension: dom.Dimension,\n\t\tposition?: dom.IDomPosition | undefined,\n\t): void {\n\t\tif (this.widget) {\n\t\t\tthis.widget.layout(dimension.height, dimension.width);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
