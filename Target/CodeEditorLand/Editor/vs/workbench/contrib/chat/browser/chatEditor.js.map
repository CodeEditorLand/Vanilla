{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/chatEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { IContextKeyService, IScopedContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IEditorOptions } from '../../../../platform/editor/common/editor.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../platform/storage/common/storage.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { editorBackground, editorForeground, inputBackground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { EditorPane } from '../../../browser/parts/editor/editorPane.js';\nimport { IEditorOpenContext } from '../../../common/editor.js';\nimport { Memento } from '../../../common/memento.js';\nimport { clearChatEditor } from './actions/chatClear.js';\nimport { ChatEditorInput } from './chatEditorInput.js';\nimport { ChatWidget, IChatViewState } from './chatWidget.js';\nimport { ChatAgentLocation } from '../common/chatAgents.js';\nimport { IChatModel, IExportableChatData, ISerializableChatData } from '../common/chatModel.js';\nimport { CHAT_PROVIDER_ID } from '../common/chatParticipantContribTypes.js';\nimport { IEditorGroup } from '../../../services/editor/common/editorGroupsService.js';\n\nexport interface IChatEditorOptions extends IEditorOptions {\n\ttarget?: { sessionId: string } | { data: IExportableChatData | ISerializableChatData };\n}\n\nexport class ChatEditor extends EditorPane {\n\tprivate widget!: ChatWidget;\n\n\tprivate _scopedContextKeyService!: IScopedContextKeyService;\n\toverride get scopedContextKeyService() {\n\t\treturn this._scopedContextKeyService;\n\t}\n\n\tprivate _memento: Memento | undefined;\n\tprivate _viewState: IChatViewState | undefined;\n\n\tconstructor(\n\t\tgroup: IEditorGroup,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t) {\n\t\tsuper(ChatEditorInput.EditorID, group, telemetryService, themeService, storageService);\n\t}\n\n\tprivate async clear() {\n\t\tif (this.input) {\n\t\t\treturn this.instantiationService.invokeFunction(clearChatEditor, this.input as ChatEditorInput);\n\t\t}\n\t}\n\n\tprotected override createEditor(parent: HTMLElement): void {\n\t\tthis._scopedContextKeyService = this._register(this.contextKeyService.createScoped(parent));\n\t\tconst scopedInstantiationService = this._register(this.instantiationService.createChild(new ServiceCollection([IContextKeyService, this.scopedContextKeyService])));\n\n\t\tthis.widget = this._register(\n\t\t\tscopedInstantiationService.createInstance(\n\t\t\t\tChatWidget,\n\t\t\t\tChatAgentLocation.Panel,\n\t\t\t\tundefined,\n\t\t\t\t{ supportsFileReferences: true },\n\t\t\t\t{\n\t\t\t\t\tlistForeground: editorForeground,\n\t\t\t\t\tlistBackground: editorBackground,\n\t\t\t\t\tinputEditorBackground: inputBackground,\n\t\t\t\t\tresultEditorBackground: editorBackground\n\t\t\t\t}));\n\t\tthis._register(this.widget.onDidClear(() => this.clear()));\n\t\tthis.widget.render(parent);\n\t\tthis.widget.setVisible(true);\n\t}\n\n\tprotected override setEditorVisible(visible: boolean): void {\n\t\tsuper.setEditorVisible(visible);\n\n\t\tthis.widget?.setVisible(visible);\n\t}\n\n\tpublic override focus(): void {\n\t\tsuper.focus();\n\n\t\tthis.widget?.focusInput();\n\t}\n\n\toverride clearInput(): void {\n\t\tthis.saveState();\n\t\tsuper.clearInput();\n\t}\n\n\toverride async setInput(input: ChatEditorInput, options: IChatEditorOptions | undefined, context: IEditorOpenContext, token: CancellationToken): Promise<void> {\n\t\tsuper.setInput(input, options, context, token);\n\n\t\tconst editorModel = await input.resolve();\n\t\tif (!editorModel) {\n\t\t\tthrow new Error(`Failed to get model for chat editor. id: ${input.sessionId}`);\n\t\t}\n\n\t\tif (!this.widget) {\n\t\t\tthrow new Error('ChatEditor lifecycle issue: no editor widget');\n\t\t}\n\n\t\tthis.updateModel(editorModel.model, options?.viewState ?? input.options.viewState);\n\t}\n\n\tprivate updateModel(model: IChatModel, viewState?: IChatViewState): void {\n\t\tthis._memento = new Memento('interactive-session-editor-' + CHAT_PROVIDER_ID, this.storageService);\n\t\tthis._viewState = viewState ?? this._memento.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE) as IChatViewState;\n\t\tthis.widget.setModel(model, { ...this._viewState });\n\t}\n\n\tprotected override saveState(): void {\n\t\tthis.widget?.saveState();\n\n\t\tif (this._memento && this._viewState) {\n\t\t\tconst widgetViewState = this.widget.getViewState();\n\t\t\tthis._viewState.inputValue = widgetViewState.inputValue;\n\t\t\tthis._memento.saveMemento();\n\t\t}\n\t}\n\n\toverride layout(dimension: dom.Dimension, position?: dom.IDomPosition | undefined): void {\n\t\tif (this.widget) {\n\t\t\tthis.widget.layout(dimension.height, dimension.width);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
