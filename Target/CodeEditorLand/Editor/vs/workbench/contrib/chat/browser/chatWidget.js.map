{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/chatWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport type {\n\tITreeContextMenuEvent,\n\tITreeElement,\n} from \"../../../../base/browser/ui/tree/tree.js\";\nimport { disposableTimeout, timeout } from \"../../../../base/common/async.js\";\nimport { toErrorMessage } from \"../../../../base/common/errorMessage.js\";\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\tMutableDisposable,\n\tcombinedDisposable,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { extUri, isEqual } from \"../../../../base/common/resources.js\";\nimport { isDefined } from \"../../../../base/common/types.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport \"./media/chat.css\";\nimport \"./media/chatAgentHover.css\";\nimport type { ICodeEditor } from \"../../../../editor/browser/editorBrowser.js\";\nimport { ICodeEditorService } from \"../../../../editor/browser/services/codeEditorService.js\";\nimport { MenuId } from \"../../../../platform/actions/common/actions.js\";\nimport {\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextMenuService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport type { ITextResourceEditorInput } from \"../../../../platform/editor/common/editor.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ServiceCollection } from \"../../../../platform/instantiation/common/serviceCollection.js\";\nimport { WorkbenchObjectTree } from \"../../../../platform/list/browser/listService.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport {\n\ttype ChatAgentLocation,\n\ttype IChatAgentCommand,\n\ttype IChatAgentData,\n\tIChatAgentService,\n} from \"../common/chatAgents.js\";\nimport {\n\tCONTEXT_CHAT_INPUT_HAS_AGENT,\n\tCONTEXT_CHAT_LOCATION,\n\tCONTEXT_CHAT_REQUEST_IN_PROGRESS,\n\tCONTEXT_IN_CHAT_SESSION,\n\tCONTEXT_IN_QUICK_CHAT,\n\tCONTEXT_RESPONSE_FILTERED,\n} from \"../common/chatContextKeys.js\";\nimport {\n\tChatModelInitState,\n\ttype IChatModel,\n\ttype IChatRequestVariableEntry,\n\ttype IChatResponseModel,\n} from \"../common/chatModel.js\";\nimport {\n\tChatRequestAgentPart,\n\ttype IParsedChatRequest,\n\tchatAgentLeader,\n\tchatSubcommandLeader,\n\tformatChatQuestion,\n} from \"../common/chatParserTypes.js\";\nimport { ChatRequestParser } from \"../common/chatRequestParser.js\";\nimport {\n\ttype IChatFollowup,\n\ttype IChatLocationData,\n\tIChatService,\n} from \"../common/chatService.js\";\nimport { IChatSlashCommandService } from \"../common/chatSlashCommands.js\";\nimport {\n\tChatViewModel,\n\ttype IChatResponseViewModel,\n\tisRequestVM,\n\tisResponseVM,\n\tisWelcomeVM,\n} from \"../common/chatViewModel.js\";\nimport { CodeBlockModelCollection } from \"../common/codeBlockModelCollection.js\";\nimport {\n\ttype ChatTreeItem,\n\tIChatAccessibilityService,\n\ttype IChatCodeBlockInfo,\n\ttype IChatFileTreeInfo,\n\ttype IChatListItemRendererOptions,\n\ttype IChatWidget,\n\tIChatWidgetService,\n\ttype IChatWidgetViewContext,\n\ttype IChatWidgetViewOptions,\n} from \"./chat.js\";\nimport { ChatAccessibilityProvider } from \"./chatAccessibilityProvider.js\";\nimport { ChatDragAndDrop } from \"./chatDragAndDrop.js\";\nimport { ChatInputPart } from \"./chatInputPart.js\";\nimport {\n\tChatListDelegate,\n\tChatListItemRenderer,\n\ttype IChatRendererDelegate,\n} from \"./chatListRenderer.js\";\nimport { ChatEditorOptions } from \"./chatOptions.js\";\n\nconst $ = dom.$;\n\nfunction revealLastElement(list: WorkbenchObjectTree<any>) {\n\tlist.scrollTop = list.scrollHeight - list.renderHeight;\n}\n\nexport type IChatInputState = Record<string, any>;\nexport interface IChatViewState {\n\tinputValue?: string;\n\tinputState?: IChatInputState;\n}\n\nexport interface IChatWidgetStyles {\n\tlistForeground: string;\n\tlistBackground: string;\n\toverlayBackground: string;\n\tinputEditorBackground: string;\n\tresultEditorBackground: string;\n}\n\nexport interface IChatWidgetContrib extends IDisposable {\n\treadonly id: string;\n\n\t/**\n\t * A piece of state which is related to the input editor of the chat widget\n\t */\n\tgetInputState?(): any;\n\n\t/**\n\t * Called with the result of getInputState when navigating input history.\n\t */\n\tsetInputState?(s: any): void;\n}\n\nexport interface IChatWidgetLocationOptions {\n\tlocation: ChatAgentLocation;\n\tresolveData?(): IChatLocationData | undefined;\n}\n\nexport function isQuickChat(widget: IChatWidget): boolean {\n\treturn (\n\t\t\"viewContext\" in widget &&\n\t\t\"isQuickChat\" in widget.viewContext &&\n\t\tBoolean(widget.viewContext.isQuickChat)\n\t);\n}\n\nexport class ChatWidget extends Disposable implements IChatWidget {\n\tpublic static readonly CONTRIBS: {\n\t\tnew (...args: [IChatWidget, ...any]): IChatWidgetContrib;\n\t}[] = [];\n\n\tprivate readonly _onDidSubmitAgent = this._register(\n\t\tnew Emitter<{\n\t\t\tagent: IChatAgentData;\n\t\t\tslashCommand?: IChatAgentCommand;\n\t\t}>(),\n\t);\n\tpublic readonly onDidSubmitAgent = this._onDidSubmitAgent.event;\n\n\tprivate _onDidChangeAgent = this._register(\n\t\tnew Emitter<{\n\t\t\tagent: IChatAgentData;\n\t\t\tslashCommand?: IChatAgentCommand;\n\t\t}>(),\n\t);\n\treadonly onDidChangeAgent = this._onDidChangeAgent.event;\n\n\tprivate _onDidFocus = this._register(new Emitter<void>());\n\treadonly onDidFocus = this._onDidFocus.event;\n\n\tprivate _onDidChangeViewModel = this._register(new Emitter<void>());\n\treadonly onDidChangeViewModel = this._onDidChangeViewModel.event;\n\n\tprivate _onDidScroll = this._register(new Emitter<void>());\n\treadonly onDidScroll = this._onDidScroll.event;\n\n\tprivate _onDidClear = this._register(new Emitter<void>());\n\treadonly onDidClear = this._onDidClear.event;\n\n\tprivate _onDidAcceptInput = this._register(new Emitter<void>());\n\treadonly onDidAcceptInput = this._onDidAcceptInput.event;\n\n\tprivate _onDidChangeContext = this._register(\n\t\tnew Emitter<{\n\t\t\tremoved?: IChatRequestVariableEntry[];\n\t\t\tadded?: IChatRequestVariableEntry[];\n\t\t}>(),\n\t);\n\treadonly onDidChangeContext = this._onDidChangeContext.event;\n\n\tprivate _onDidHide = this._register(new Emitter<void>());\n\treadonly onDidHide = this._onDidHide.event;\n\n\tprivate _onDidChangeParsedInput = this._register(new Emitter<void>());\n\treadonly onDidChangeParsedInput = this._onDidChangeParsedInput.event;\n\n\tprivate readonly _onWillMaybeChangeHeight = new Emitter<void>();\n\treadonly onWillMaybeChangeHeight: Event<void> =\n\t\tthis._onWillMaybeChangeHeight.event;\n\n\tprivate _onDidChangeHeight = this._register(new Emitter<number>());\n\treadonly onDidChangeHeight = this._onDidChangeHeight.event;\n\n\tprivate readonly _onDidChangeContentHeight = new Emitter<void>();\n\treadonly onDidChangeContentHeight: Event<void> =\n\t\tthis._onDidChangeContentHeight.event;\n\n\tprivate contribs: ReadonlyArray<IChatWidgetContrib> = [];\n\n\tprivate tree!: WorkbenchObjectTree<ChatTreeItem>;\n\tprivate renderer!: ChatListItemRenderer;\n\tprivate readonly _codeBlockModelCollection: CodeBlockModelCollection;\n\n\tprivate inputPart!: ChatInputPart;\n\tprivate editorOptions!: ChatEditorOptions;\n\n\tprivate listContainer!: HTMLElement;\n\tprivate container!: HTMLElement;\n\n\tprivate bodyDimension: dom.Dimension | undefined;\n\tprivate visibleChangeCount = 0;\n\tprivate requestInProgress: IContextKey<boolean>;\n\tprivate agentInInput: IContextKey<boolean>;\n\n\tprivate _visible = false;\n\tpublic get visible() {\n\t\treturn this._visible;\n\t}\n\n\tprivate previousTreeScrollHeight = 0;\n\n\tprivate readonly viewModelDisposables = this._register(\n\t\tnew DisposableStore(),\n\t);\n\tprivate _viewModel: ChatViewModel | undefined;\n\tprivate set viewModel(viewModel: ChatViewModel | undefined) {\n\t\tif (this._viewModel === viewModel) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.viewModelDisposables.clear();\n\n\t\tthis._viewModel = viewModel;\n\t\tif (viewModel) {\n\t\t\tthis.viewModelDisposables.add(viewModel);\n\t\t}\n\n\t\tthis._onDidChangeViewModel.fire();\n\t}\n\n\tget viewModel() {\n\t\treturn this._viewModel;\n\t}\n\n\tprivate parsedChatRequest: IParsedChatRequest | undefined;\n\tget parsedInput() {\n\t\tif (this.parsedChatRequest === undefined) {\n\t\t\tthis.parsedChatRequest = this.instantiationService\n\t\t\t\t.createInstance(ChatRequestParser)\n\t\t\t\t.parseChatRequest(\n\t\t\t\t\tthis.viewModel!.sessionId,\n\t\t\t\t\tthis.getInput(),\n\t\t\t\t\tthis.location,\n\t\t\t\t\t{ selectedAgent: this._lastSelectedAgent },\n\t\t\t\t);\n\n\t\t\tthis.agentInInput.set(\n\t\t\t\t!!this.parsedChatRequest.parts.find(\n\t\t\t\t\t(part) => part instanceof ChatRequestAgentPart,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\treturn this.parsedChatRequest;\n\t}\n\n\tget scopedContextKeyService(): IContextKeyService {\n\t\treturn this.contextKeyService;\n\t}\n\n\tprivate readonly _location: IChatWidgetLocationOptions;\n\n\tget location() {\n\t\treturn this._location.location;\n\t}\n\n\treadonly viewContext: IChatWidgetViewContext;\n\n\tconstructor(\n\t\tlocation: ChatAgentLocation | IChatWidgetLocationOptions,\n\t\t_viewContext: IChatWidgetViewContext | undefined,\n\t\tprivate readonly viewOptions: IChatWidgetViewOptions,\n\t\tprivate readonly styles: IChatWidgetStyles,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@IContextKeyService\n\t\tprivate readonly contextKeyService: IContextKeyService,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\t@IChatService private readonly chatService: IChatService,\n\t\t@IChatAgentService private readonly chatAgentService: IChatAgentService,\n\t\t@IChatWidgetService chatWidgetService: IChatWidgetService,\n\t\t@IContextMenuService\n\t\tprivate readonly contextMenuService: IContextMenuService,\n\t\t@IChatAccessibilityService\n\t\tprivate readonly chatAccessibilityService: IChatAccessibilityService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IChatSlashCommandService\n\t\tprivate readonly chatSlashCommandService: IChatSlashCommandService,\n\t) {\n\t\tsuper();\n\n\t\tthis.viewContext = _viewContext ?? {};\n\n\t\tif (typeof location === \"object\") {\n\t\t\tthis._location = location;\n\t\t} else {\n\t\t\tthis._location = { location };\n\t\t}\n\n\t\tCONTEXT_IN_CHAT_SESSION.bindTo(contextKeyService).set(true);\n\t\tCONTEXT_CHAT_LOCATION.bindTo(contextKeyService).set(\n\t\t\tthis._location.location,\n\t\t);\n\t\tCONTEXT_IN_QUICK_CHAT.bindTo(contextKeyService).set(isQuickChat(this));\n\t\tthis.agentInInput =\n\t\t\tCONTEXT_CHAT_INPUT_HAS_AGENT.bindTo(contextKeyService);\n\t\tthis.requestInProgress =\n\t\t\tCONTEXT_CHAT_REQUEST_IN_PROGRESS.bindTo(contextKeyService);\n\n\t\tthis._register((chatWidgetService as ChatWidgetService).register(this));\n\n\t\tthis._codeBlockModelCollection = this._register(\n\t\t\tinstantiationService.createInstance(CodeBlockModelCollection),\n\t\t);\n\n\t\tthis._register(\n\t\t\tcodeEditorService.registerCodeEditorOpenHandler(\n\t\t\t\tasync (\n\t\t\t\t\tinput: ITextResourceEditorInput,\n\t\t\t\t\t_source: ICodeEditor | null,\n\t\t\t\t\t_sideBySide?: boolean,\n\t\t\t\t): Promise<ICodeEditor | null> => {\n\t\t\t\t\tconst resource = input.resource;\n\t\t\t\t\tif (resource.scheme !== Schemas.vscodeChatCodeBlock) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst responseId = resource.path.split(\"/\").at(1);\n\t\t\t\t\tif (!responseId) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst item = this.viewModel\n\t\t\t\t\t\t?.getItems()\n\t\t\t\t\t\t.find((item) => item.id === responseId);\n\t\t\t\t\tif (!item) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// TODO: needs to reveal the chat view\n\n\t\t\t\t\tthis.reveal(item);\n\n\t\t\t\t\tawait timeout(0); // wait for list to actually render\n\n\t\t\t\t\tfor (const codeBlockPart of this.renderer.editorsInUse()) {\n\t\t\t\t\t\tif (extUri.isEqual(codeBlockPart.uri, resource, true)) {\n\t\t\t\t\t\t\tconst editor = codeBlockPart.editor;\n\n\t\t\t\t\t\t\tlet relativeTop = 0;\n\t\t\t\t\t\t\tconst editorDomNode = editor.getDomNode();\n\t\t\t\t\t\t\tif (editorDomNode) {\n\t\t\t\t\t\t\t\tconst row = dom.findParentWithClass(\n\t\t\t\t\t\t\t\t\teditorDomNode,\n\t\t\t\t\t\t\t\t\t\"monaco-list-row\",\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (row) {\n\t\t\t\t\t\t\t\t\trelativeTop =\n\t\t\t\t\t\t\t\t\t\tdom.getTopLeftOffset(editorDomNode)\n\t\t\t\t\t\t\t\t\t\t\t.top -\n\t\t\t\t\t\t\t\t\t\tdom.getTopLeftOffset(row).top;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (input.options?.selection) {\n\t\t\t\t\t\t\t\tconst editorSelectionTopOffset =\n\t\t\t\t\t\t\t\t\teditor.getTopForPosition(\n\t\t\t\t\t\t\t\t\t\tinput.options.selection.startLineNumber,\n\t\t\t\t\t\t\t\t\t\tinput.options.selection.startColumn,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\trelativeTop += editorSelectionTopOffset;\n\n\t\t\t\t\t\t\t\teditor.focus();\n\t\t\t\t\t\t\t\teditor.setSelection({\n\t\t\t\t\t\t\t\t\tstartLineNumber:\n\t\t\t\t\t\t\t\t\t\tinput.options.selection.startLineNumber,\n\t\t\t\t\t\t\t\t\tstartColumn:\n\t\t\t\t\t\t\t\t\t\tinput.options.selection.startColumn,\n\t\t\t\t\t\t\t\t\tendLineNumber:\n\t\t\t\t\t\t\t\t\t\tinput.options.selection.endLineNumber ??\n\t\t\t\t\t\t\t\t\t\tinput.options.selection.startLineNumber,\n\t\t\t\t\t\t\t\t\tendColumn:\n\t\t\t\t\t\t\t\t\t\tinput.options.selection.endColumn ??\n\t\t\t\t\t\t\t\t\t\tinput.options.selection.startColumn,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.reveal(item, relativeTop);\n\n\t\t\t\t\t\t\treturn editor;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate _lastSelectedAgent: IChatAgentData | undefined;\n\tset lastSelectedAgent(agent: IChatAgentData | undefined) {\n\t\tthis.parsedChatRequest = undefined;\n\t\tthis._lastSelectedAgent = agent;\n\t\tthis._onDidChangeParsedInput.fire();\n\t}\n\n\tget lastSelectedAgent(): IChatAgentData | undefined {\n\t\treturn this._lastSelectedAgent;\n\t}\n\n\tget supportsFileReferences(): boolean {\n\t\treturn !!this.viewOptions.supportsFileReferences;\n\t}\n\n\tget input(): ChatInputPart {\n\t\treturn this.inputPart;\n\t}\n\n\tget inputEditor(): ICodeEditor {\n\t\treturn this.inputPart.inputEditor;\n\t}\n\n\tget inputUri(): URI {\n\t\treturn this.inputPart.inputUri;\n\t}\n\n\tget contentHeight(): number {\n\t\treturn this.inputPart.contentHeight + this.tree.contentHeight;\n\t}\n\n\trender(parent: HTMLElement): void {\n\t\tconst viewId =\n\t\t\t\"viewId\" in this.viewContext ? this.viewContext.viewId : undefined;\n\t\tthis.editorOptions = this._register(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tChatEditorOptions,\n\t\t\t\tviewId,\n\t\t\t\tthis.styles.listForeground,\n\t\t\t\tthis.styles.inputEditorBackground,\n\t\t\t\tthis.styles.resultEditorBackground,\n\t\t\t),\n\t\t);\n\t\tconst renderInputOnTop = this.viewOptions.renderInputOnTop ?? false;\n\t\tconst renderFollowups =\n\t\t\tthis.viewOptions.renderFollowups ?? !renderInputOnTop;\n\t\tconst renderStyle = this.viewOptions.renderStyle;\n\n\t\tthis.container = dom.append(parent, $(\".interactive-session\"));\n\t\tif (renderInputOnTop) {\n\t\t\tthis.createInput(this.container, { renderFollowups, renderStyle });\n\t\t\tthis.listContainer = dom.append(\n\t\t\t\tthis.container,\n\t\t\t\t$(`.interactive-list`),\n\t\t\t);\n\t\t} else {\n\t\t\tthis.listContainer = dom.append(\n\t\t\t\tthis.container,\n\t\t\t\t$(`.interactive-list`),\n\t\t\t);\n\t\t\tthis.createInput(this.container, { renderFollowups, renderStyle });\n\t\t}\n\n\t\tthis.createList(this.listContainer, {\n\t\t\t...this.viewOptions.rendererOptions,\n\t\t\trenderStyle,\n\t\t});\n\n\t\tthis._register(\n\t\t\tthis.editorOptions.onDidChange(() => this.onDidStyleChange()),\n\t\t);\n\t\tthis.onDidStyleChange();\n\n\t\t// Do initial render\n\t\tif (this.viewModel) {\n\t\t\tthis.onDidChangeItems();\n\t\t\trevealLastElement(this.tree);\n\t\t}\n\n\t\tthis.contribs = ChatWidget.CONTRIBS.map((contrib) => {\n\t\t\ttry {\n\t\t\t\treturn this._register(\n\t\t\t\t\tthis.instantiationService.createInstance(contrib, this),\n\t\t\t\t);\n\t\t\t} catch (err) {\n\t\t\t\tthis.logService.error(\n\t\t\t\t\t\"Failed to instantiate chat widget contrib\",\n\t\t\t\t\ttoErrorMessage(err),\n\t\t\t\t);\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}).filter(isDefined);\n\n\t\tthis._register(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tChatDragAndDrop,\n\t\t\t\tthis.container,\n\t\t\t\tthis.inputPart,\n\t\t\t\tthis.styles,\n\t\t\t),\n\t\t);\n\t}\n\n\tgetContrib<T extends IChatWidgetContrib>(id: string): T | undefined {\n\t\treturn this.contribs.find((c) => c.id === id) as T;\n\t}\n\n\tfocusInput(): void {\n\t\tthis.inputPart.focus();\n\t}\n\n\thasInputFocus(): boolean {\n\t\treturn this.inputPart.hasFocus();\n\t}\n\n\tgetSibling(\n\t\titem: ChatTreeItem,\n\t\ttype: \"next\" | \"previous\",\n\t): ChatTreeItem | undefined {\n\t\tif (!isResponseVM(item)) {\n\t\t\treturn;\n\t\t}\n\t\tconst items = this.viewModel?.getItems();\n\t\tif (!items) {\n\t\t\treturn;\n\t\t}\n\t\tconst responseItems = items.filter((i) => isResponseVM(i));\n\t\tconst targetIndex = responseItems.indexOf(item);\n\t\tif (targetIndex === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tconst indexToFocus =\n\t\t\ttype === \"next\" ? targetIndex + 1 : targetIndex - 1;\n\t\tif (indexToFocus < 0 || indexToFocus > responseItems.length - 1) {\n\t\t\treturn;\n\t\t}\n\t\treturn responseItems[indexToFocus];\n\t}\n\n\tclear(): void {\n\t\tif (this._dynamicMessageLayoutData) {\n\t\t\tthis._dynamicMessageLayoutData.enabled = true;\n\t\t}\n\t\tthis._onDidClear.fire();\n\t}\n\n\tprivate onDidChangeItems(skipDynamicLayout?: boolean) {\n\t\tif (this.tree && this._visible) {\n\t\t\tconst treeItems = (this.viewModel?.getItems() ?? []).map(\n\t\t\t\t(item): ITreeElement<ChatTreeItem> => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\telement: item,\n\t\t\t\t\t\tcollapsed: false,\n\t\t\t\t\t\tcollapsible: false,\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tthis._onWillMaybeChangeHeight.fire();\n\n\t\t\tthis.tree.setChildren(null, treeItems, {\n\t\t\t\tdiffIdentityProvider: {\n\t\t\t\t\tgetId: (element) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t(isResponseVM(element) || isRequestVM(element)\n\t\t\t\t\t\t\t\t? element.dataId\n\t\t\t\t\t\t\t\t: element.id) +\n\t\t\t\t\t\t\t// TODO? We can give the welcome message a proper VM or get rid of the rest of the VMs\n\t\t\t\t\t\t\t(isWelcomeVM(element) && this.viewModel\n\t\t\t\t\t\t\t\t? `_${ChatModelInitState[this.viewModel.initState]}`\n\t\t\t\t\t\t\t\t: \"\") +\n\t\t\t\t\t\t\t// Ensure re-rendering an element once slash commands are loaded, so the colorization can be applied.\n\t\t\t\t\t\t\t`${isRequestVM(element) || isWelcomeVM(element) /* && !!this.lastSlashCommands ? '_scLoaded' : '' */}` +\n\t\t\t\t\t\t\t// If a response is in the process of progressive rendering, we need to ensure that it will\n\t\t\t\t\t\t\t// be re-rendered so progressive rendering is restarted, even if the model wasn't updated.\n\t\t\t\t\t\t\t`${isResponseVM(element) && element.renderData ? `_${this.visibleChangeCount}` : \"\"}` +\n\t\t\t\t\t\t\t// Re-render once content references are loaded\n\t\t\t\t\t\t\t(isResponseVM(element)\n\t\t\t\t\t\t\t\t? `_${element.contentReferences.length}`\n\t\t\t\t\t\t\t\t: \"\") +\n\t\t\t\t\t\t\t// Rerender request if we got new content references in the response\n\t\t\t\t\t\t\t// since this may change how we render the corresponding attachments in the request\n\t\t\t\t\t\t\t(isRequestVM(element) && element.contentReferences\n\t\t\t\t\t\t\t\t? `_${element.contentReferences?.length}`\n\t\t\t\t\t\t\t\t: \"\")\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tif (!skipDynamicLayout && this._dynamicMessageLayoutData) {\n\t\t\t\tthis.layoutDynamicChatTreeItemMode();\n\t\t\t}\n\n\t\t\tconst lastItem = treeItems[treeItems.length - 1]?.element;\n\t\t\tif (lastItem && isResponseVM(lastItem) && lastItem.isComplete) {\n\t\t\t\tthis.renderFollowups(lastItem.replyFollowups, lastItem);\n\t\t\t} else if (lastItem && isWelcomeVM(lastItem)) {\n\t\t\t\tthis.renderFollowups(lastItem.sampleQuestions);\n\t\t\t} else {\n\t\t\t\tthis.renderFollowups(undefined);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async renderFollowups(\n\t\titems: IChatFollowup[] | undefined,\n\t\tresponse?: IChatResponseViewModel,\n\t): Promise<void> {\n\t\tthis.inputPart.renderFollowups(items, response);\n\n\t\tif (this.bodyDimension) {\n\t\t\tthis.layout(this.bodyDimension.height, this.bodyDimension.width);\n\t\t}\n\t}\n\n\tsetVisible(visible: boolean): void {\n\t\tconst wasVisible = this._visible;\n\t\tthis._visible = visible;\n\t\tthis.visibleChangeCount++;\n\t\tthis.renderer.setVisible(visible);\n\t\tthis.input.setVisible(visible);\n\n\t\tif (visible) {\n\t\t\tthis._register(\n\t\t\t\tdisposableTimeout(() => {\n\t\t\t\t\t// Progressive rendering paused while hidden, so start it up again.\n\t\t\t\t\t// Do it after a timeout because the container is not visible yet (it should be but offsetHeight returns 0 here)\n\t\t\t\t\tif (this._visible) {\n\t\t\t\t\t\tthis.onDidChangeItems(true);\n\t\t\t\t\t}\n\t\t\t\t}, 0),\n\t\t\t);\n\t\t} else if (wasVisible) {\n\t\t\tthis._onDidHide.fire();\n\t\t}\n\t}\n\n\tprivate createList(\n\t\tlistContainer: HTMLElement,\n\t\toptions: IChatListItemRendererOptions,\n\t): void {\n\t\tconst scopedInstantiationService = this._register(\n\t\t\tthis._register(\n\t\t\t\tthis.instantiationService.createChild(\n\t\t\t\t\tnew ServiceCollection([\n\t\t\t\t\t\tIContextKeyService,\n\t\t\t\t\t\tthis.contextKeyService,\n\t\t\t\t\t]),\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t\tconst delegate = scopedInstantiationService.createInstance(\n\t\t\tChatListDelegate,\n\t\t\tthis.viewOptions.defaultElementHeight ?? 200,\n\t\t);\n\t\tconst rendererDelegate: IChatRendererDelegate = {\n\t\t\tgetListLength: () => this.tree.getNode(null).visibleChildrenCount,\n\t\t\tonDidScroll: this.onDidScroll,\n\t\t};\n\n\t\t// Create a dom element to hold UI from editor widgets embedded in chat messages\n\t\tconst overflowWidgetsContainer = document.createElement(\"div\");\n\t\toverflowWidgetsContainer.classList.add(\n\t\t\t\"chat-overflow-widget-container\",\n\t\t\t\"monaco-editor\",\n\t\t);\n\t\tlistContainer.append(overflowWidgetsContainer);\n\n\t\tthis.renderer = this._register(\n\t\t\tscopedInstantiationService.createInstance(\n\t\t\t\tChatListItemRenderer,\n\t\t\t\tthis.editorOptions,\n\t\t\t\tthis.location,\n\t\t\t\toptions,\n\t\t\t\trendererDelegate,\n\t\t\t\tthis._codeBlockModelCollection,\n\t\t\t\toverflowWidgetsContainer,\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.renderer.onDidClickFollowup((item) => {\n\t\t\t\t// is this used anymore?\n\t\t\t\tthis.acceptInput(item.message);\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.renderer.onDidClickRerunWithAgentOrCommandDetection((item) => {\n\t\t\t\tconst request = this.chatService\n\t\t\t\t\t.getSession(item.sessionId)\n\t\t\t\t\t?.getRequests()\n\t\t\t\t\t.find((candidate) => candidate.id === item.requestId);\n\t\t\t\tif (request) {\n\t\t\t\t\tthis.chatService\n\t\t\t\t\t\t.resendRequest(request, {\n\t\t\t\t\t\t\tnoCommandDetection: true,\n\t\t\t\t\t\t\tattempt: request.attempt + 1,\n\t\t\t\t\t\t\tlocation: this.location,\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((e) =>\n\t\t\t\t\t\t\tthis.logService.error(\"FAILED to rerun request\", e),\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis.tree = this._register(\n\t\t\t<WorkbenchObjectTree<ChatTreeItem>>(\n\t\t\t\tscopedInstantiationService.createInstance(\n\t\t\t\t\tWorkbenchObjectTree,\n\t\t\t\t\t\"Chat\",\n\t\t\t\t\tlistContainer,\n\t\t\t\t\tdelegate,\n\t\t\t\t\t[this.renderer],\n\t\t\t\t\t{\n\t\t\t\t\t\tidentityProvider: { getId: (e: ChatTreeItem) => e.id },\n\t\t\t\t\t\thorizontalScrolling: false,\n\t\t\t\t\t\talwaysConsumeMouseWheel: false,\n\t\t\t\t\t\tsupportDynamicHeights: true,\n\t\t\t\t\t\thideTwistiesOfChildlessElements: true,\n\t\t\t\t\t\taccessibilityProvider:\n\t\t\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\t\t\tChatAccessibilityProvider,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\tkeyboardNavigationLabelProvider: {\n\t\t\t\t\t\t\tgetKeyboardNavigationLabel: (e: ChatTreeItem) =>\n\t\t\t\t\t\t\t\tisRequestVM(e)\n\t\t\t\t\t\t\t\t\t? e.message\n\t\t\t\t\t\t\t\t\t: isResponseVM(e)\n\t\t\t\t\t\t\t\t\t\t? e.response.value\n\t\t\t\t\t\t\t\t\t\t: \"\",\n\t\t\t\t\t\t}, // TODO\n\t\t\t\t\t\tsetRowLineHeight: false,\n\t\t\t\t\t\tfilter: this.viewOptions.filter\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\tfilter: this.viewOptions.filter.bind(\n\t\t\t\t\t\t\t\t\t\tthis.viewOptions,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\toverrideStyles: {\n\t\t\t\t\t\t\tlistFocusBackground: this.styles.listBackground,\n\t\t\t\t\t\t\tlistInactiveFocusBackground:\n\t\t\t\t\t\t\t\tthis.styles.listBackground,\n\t\t\t\t\t\t\tlistActiveSelectionBackground:\n\t\t\t\t\t\t\t\tthis.styles.listBackground,\n\t\t\t\t\t\t\tlistFocusAndSelectionBackground:\n\t\t\t\t\t\t\t\tthis.styles.listBackground,\n\t\t\t\t\t\t\tlistInactiveSelectionBackground:\n\t\t\t\t\t\t\t\tthis.styles.listBackground,\n\t\t\t\t\t\t\tlistHoverBackground: this.styles.listBackground,\n\t\t\t\t\t\t\tlistBackground: this.styles.listBackground,\n\t\t\t\t\t\t\tlistFocusForeground: this.styles.listForeground,\n\t\t\t\t\t\t\tlistHoverForeground: this.styles.listForeground,\n\t\t\t\t\t\t\tlistInactiveFocusForeground:\n\t\t\t\t\t\t\t\tthis.styles.listForeground,\n\t\t\t\t\t\t\tlistInactiveSelectionForeground:\n\t\t\t\t\t\t\t\tthis.styles.listForeground,\n\t\t\t\t\t\t\tlistActiveSelectionForeground:\n\t\t\t\t\t\t\t\tthis.styles.listForeground,\n\t\t\t\t\t\t\tlistFocusAndSelectionForeground:\n\t\t\t\t\t\t\t\tthis.styles.listForeground,\n\t\t\t\t\t\t\tlistActiveSelectionIconForeground: undefined,\n\t\t\t\t\t\t\tlistInactiveSelectionIconForeground: undefined,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t)\n\t\t\t),\n\t\t);\n\t\tthis._register(this.tree.onContextMenu((e) => this.onContextMenu(e)));\n\n\t\tthis._register(\n\t\t\tthis.tree.onDidChangeContentHeight(() => {\n\t\t\t\tthis.onDidChangeTreeContentHeight();\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.renderer.onDidChangeItemHeight((e) => {\n\t\t\t\tthis.tree.updateElementHeight(e.element, e.height);\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.tree.onDidFocus(() => {\n\t\t\t\tthis._onDidFocus.fire();\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.tree.onDidScroll(() => {\n\t\t\t\tthis._onDidScroll.fire();\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate onContextMenu(e: ITreeContextMenuEvent<ChatTreeItem | null>): void {\n\t\te.browserEvent.preventDefault();\n\t\te.browserEvent.stopPropagation();\n\n\t\tconst selected = e.element;\n\t\tconst scopedContextKeyService = this.contextKeyService.createOverlay([\n\t\t\t[\n\t\t\t\tCONTEXT_RESPONSE_FILTERED.key,\n\t\t\t\tisResponseVM(selected) &&\n\t\t\t\t\t!!selected.errorDetails?.responseIsFiltered,\n\t\t\t],\n\t\t]);\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tmenuId: MenuId.ChatContext,\n\t\t\tmenuActionOptions: { shouldForwardArgs: true },\n\t\t\tcontextKeyService: scopedContextKeyService,\n\t\t\tgetAnchor: () => e.anchor,\n\t\t\tgetActionsContext: () => selected,\n\t\t});\n\t}\n\n\tprivate onDidChangeTreeContentHeight(): void {\n\t\tif (this.tree.scrollHeight !== this.previousTreeScrollHeight) {\n\t\t\t// Due to rounding, the scrollTop + renderHeight will not exactly match the scrollHeight.\n\t\t\t// Consider the tree to be scrolled all the way down if it is within 2px of the bottom.\n\t\t\tconst lastElementWasVisible =\n\t\t\t\tthis.tree.scrollTop + this.tree.renderHeight >=\n\t\t\t\tthis.previousTreeScrollHeight - 2;\n\t\t\tif (lastElementWasVisible) {\n\t\t\t\tdom.scheduleAtNextAnimationFrame(\n\t\t\t\t\tdom.getWindow(this.listContainer),\n\t\t\t\t\t() => {\n\t\t\t\t\t\t// Can't set scrollTop during this event listener, the list might overwrite the change\n\t\t\t\t\t\trevealLastElement(this.tree);\n\t\t\t\t\t},\n\t\t\t\t\t0,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthis.previousTreeScrollHeight = this.tree.scrollHeight;\n\t\tthis._onDidChangeContentHeight.fire();\n\t}\n\n\tprivate createInput(\n\t\tcontainer: HTMLElement,\n\t\toptions?: {\n\t\t\trenderFollowups: boolean;\n\t\t\trenderStyle?: \"default\" | \"compact\" | \"minimal\";\n\t\t},\n\t): void {\n\t\tthis.inputPart = this._register(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tChatInputPart,\n\t\t\t\tthis.location,\n\t\t\t\t{\n\t\t\t\t\trenderFollowups: options?.renderFollowups ?? true,\n\t\t\t\t\trenderStyle:\n\t\t\t\t\t\toptions?.renderStyle === \"minimal\"\n\t\t\t\t\t\t\t? \"compact\"\n\t\t\t\t\t\t\t: options?.renderStyle,\n\t\t\t\t\tmenus: {\n\t\t\t\t\t\texecuteToolbar: MenuId.ChatExecute,\n\t\t\t\t\t\t...this.viewOptions.menus,\n\t\t\t\t\t},\n\t\t\t\t\teditorOverflowWidgetsDomNode:\n\t\t\t\t\t\tthis.viewOptions.editorOverflowWidgetsDomNode,\n\t\t\t\t},\n\t\t\t\t() => this.collectInputState(),\n\t\t\t),\n\t\t);\n\t\tthis.inputPart.render(container, \"\", this);\n\n\t\tthis._register(\n\t\t\tthis.inputPart.onDidLoadInputState((state) => {\n\t\t\t\tthis.contribs.forEach((c) => {\n\t\t\t\t\tif (c.setInputState) {\n\t\t\t\t\t\tconst contribState =\n\t\t\t\t\t\t\t(typeof state === \"object\" && state?.[c.id]) ?? {};\n\t\t\t\t\t\tc.setInputState(contribState);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.inputPart.onDidFocus(() => this._onDidFocus.fire()),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.inputPart.onDidChangeContext((e) =>\n\t\t\t\tthis._onDidChangeContext.fire(e),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.inputPart.onDidAcceptFollowup((e) => {\n\t\t\t\tif (!this.viewModel) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet msg = \"\";\n\t\t\t\tif (\n\t\t\t\t\te.followup.agentId &&\n\t\t\t\t\te.followup.agentId !==\n\t\t\t\t\t\tthis.chatAgentService.getDefaultAgent(this.location)?.id\n\t\t\t\t) {\n\t\t\t\t\tconst agent = this.chatAgentService.getAgent(\n\t\t\t\t\t\te.followup.agentId,\n\t\t\t\t\t);\n\t\t\t\t\tif (!agent) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.lastSelectedAgent = agent;\n\t\t\t\t\tmsg = `${chatAgentLeader}${agent.name} `;\n\t\t\t\t\tif (e.followup.subCommand) {\n\t\t\t\t\t\tmsg += `${chatSubcommandLeader}${e.followup.subCommand} `;\n\t\t\t\t\t}\n\t\t\t\t} else if (\n\t\t\t\t\t!e.followup.agentId &&\n\t\t\t\t\te.followup.subCommand &&\n\t\t\t\t\tthis.chatSlashCommandService.hasCommand(\n\t\t\t\t\t\te.followup.subCommand,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tmsg = `${chatSubcommandLeader}${e.followup.subCommand} `;\n\t\t\t\t}\n\n\t\t\t\tmsg += e.followup.message;\n\t\t\t\tthis.acceptInput(msg);\n\n\t\t\t\tif (!e.response) {\n\t\t\t\t\t// Followups can be shown by the welcome message, then there is no response associated.\n\t\t\t\t\t// At some point we probably want telemetry for these too.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.chatService.notifyUserAction({\n\t\t\t\t\tsessionId: this.viewModel.sessionId,\n\t\t\t\t\trequestId: e.response.requestId,\n\t\t\t\t\tagentId: e.response.agent?.id,\n\t\t\t\t\tcommand: e.response.slashCommand?.name,\n\t\t\t\t\tresult: e.response.result,\n\t\t\t\t\taction: {\n\t\t\t\t\t\tkind: \"followUp\",\n\t\t\t\t\t\tfollowup: e.followup,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.inputPart.onDidChangeHeight(() => {\n\t\t\t\tif (this.bodyDimension) {\n\t\t\t\t\tthis.layout(\n\t\t\t\t\t\tthis.bodyDimension.height,\n\t\t\t\t\t\tthis.bodyDimension.width,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tthis._onDidChangeContentHeight.fire();\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.inputEditor.onDidChangeModelContent(\n\t\t\t\t() => (this.parsedChatRequest = undefined),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.chatAgentService.onDidChangeAgents(\n\t\t\t\t() => (this.parsedChatRequest = undefined),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate onDidStyleChange(): void {\n\t\tthis.container.style.setProperty(\n\t\t\t\"--vscode-interactive-result-editor-background-color\",\n\t\t\tthis.editorOptions.configuration.resultEditor.backgroundColor?.toString() ??\n\t\t\t\t\"\",\n\t\t);\n\t\tthis.container.style.setProperty(\n\t\t\t\"--vscode-interactive-session-foreground\",\n\t\t\tthis.editorOptions.configuration.foreground?.toString() ?? \"\",\n\t\t);\n\t\tthis.container.style.setProperty(\n\t\t\t\"--vscode-chat-list-background\",\n\t\t\tthis.themeService\n\t\t\t\t.getColorTheme()\n\t\t\t\t.getColor(this.styles.listBackground)\n\t\t\t\t?.toString() ?? \"\",\n\t\t);\n\t}\n\n\tsetModel(model: IChatModel, viewState: IChatViewState): void {\n\t\tif (!this.container) {\n\t\t\tthrow new Error(\"Call render() before setModel()\");\n\t\t}\n\n\t\tif (model.sessionId === this.viewModel?.sessionId) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._codeBlockModelCollection.clear();\n\n\t\tthis.container.setAttribute(\"data-session-id\", model.sessionId);\n\t\tthis.viewModel = this.instantiationService.createInstance(\n\t\t\tChatViewModel,\n\t\t\tmodel,\n\t\t\tthis._codeBlockModelCollection,\n\t\t);\n\t\tthis.viewModelDisposables.add(\n\t\t\tEvent.accumulate(\n\t\t\t\tthis.viewModel.onDidChange,\n\t\t\t\t0,\n\t\t\t)((events) => {\n\t\t\t\tif (!this.viewModel) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.requestInProgress.set(this.viewModel.requestInProgress);\n\n\t\t\t\tthis.onDidChangeItems();\n\t\t\t\tif (\n\t\t\t\t\tevents.some((e) => e?.kind === \"addRequest\") &&\n\t\t\t\t\tthis.visible\n\t\t\t\t) {\n\t\t\t\t\trevealLastElement(this.tree);\n\t\t\t\t\tthis.focusInput();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis.viewModelDisposables.add(\n\t\t\tthis.viewModel.onDidDisposeModel(() => {\n\t\t\t\t// Ensure that view state is saved here, because we will load it again when a new model is assigned\n\t\t\t\tthis.inputPart.saveState();\n\n\t\t\t\t// Disposes the viewmodel and listeners\n\t\t\t\tthis.viewModel = undefined;\n\t\t\t\tthis.onDidChangeItems();\n\t\t\t}),\n\t\t);\n\t\tthis.inputPart.initForNewChatModel(\n\t\t\tviewState.inputValue,\n\t\t\tviewState.inputState ?? this.collectInputState(),\n\t\t);\n\t\tthis.contribs.forEach((c) => {\n\t\t\tif (c.setInputState && viewState.inputState?.[c.id]) {\n\t\t\t\tc.setInputState(viewState.inputState?.[c.id]);\n\t\t\t}\n\t\t});\n\t\tthis.viewModelDisposables.add(\n\t\t\tmodel.onDidChange((e) => {\n\t\t\t\tif (e.kind === \"setAgent\") {\n\t\t\t\t\tthis._onDidChangeAgent.fire({\n\t\t\t\t\t\tagent: e.agent,\n\t\t\t\t\t\tslashCommand: e.command,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tif (this.tree) {\n\t\t\tthis.onDidChangeItems();\n\t\t\trevealLastElement(this.tree);\n\t\t}\n\t}\n\n\tgetFocus(): ChatTreeItem | undefined {\n\t\treturn this.tree.getFocus()[0] ?? undefined;\n\t}\n\n\treveal(item: ChatTreeItem, relativeTop?: number): void {\n\t\tthis.tree.reveal(item, relativeTop);\n\t}\n\n\tfocus(item: ChatTreeItem): void {\n\t\tconst items = this.tree.getNode(null).children;\n\t\tconst node = items.find((i) => i.element?.id === item.id);\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.tree.setFocus([node.element]);\n\t\tthis.tree.domFocus();\n\t}\n\n\trefilter() {\n\t\tthis.tree.refilter();\n\t}\n\n\tsetInputPlaceholder(placeholder: string): void {\n\t\tthis.viewModel?.setInputPlaceholder(placeholder);\n\t}\n\n\tresetInputPlaceholder(): void {\n\t\tthis.viewModel?.resetInputPlaceholder();\n\t}\n\n\tsetInput(value = \"\"): void {\n\t\tthis.inputPart.setValue(value, false);\n\t}\n\n\tgetInput(): string {\n\t\treturn this.inputPart.inputEditor.getValue();\n\t}\n\n\tlogInputHistory(): void {\n\t\tthis.inputPart.logInputHistory();\n\t}\n\n\tasync acceptInput(\n\t\tquery?: string,\n\t\tisVoiceInput?: boolean,\n\t): Promise<IChatResponseModel | undefined> {\n\t\treturn this._acceptInput(query ? { query } : undefined, isVoiceInput);\n\t}\n\n\tasync acceptInputWithPrefix(prefix: string): Promise<void> {\n\t\tthis._acceptInput({ prefix });\n\t}\n\n\tprivate collectInputState(): IChatInputState {\n\t\tconst inputState: IChatInputState = {};\n\t\tthis.contribs.forEach((c) => {\n\t\t\tif (c.getInputState) {\n\t\t\t\tinputState[c.id] = c.getInputState();\n\t\t\t}\n\t\t});\n\t\treturn inputState;\n\t}\n\n\tprivate async _acceptInput(\n\t\topts: { query: string } | { prefix: string } | undefined,\n\t\tisVoiceInput?: boolean,\n\t): Promise<IChatResponseModel | undefined> {\n\t\tif (this.viewModel) {\n\t\t\tthis._onDidAcceptInput.fire();\n\n\t\t\tconst editorValue = this.getInput();\n\t\t\tconst requestId = this.chatAccessibilityService.acceptRequest();\n\t\t\tconst input = opts\n\t\t\t\t? \"query\" in opts\n\t\t\t\t\t? opts.query\n\t\t\t\t\t: `${opts.prefix} ${editorValue}`\n\t\t\t\t: editorValue;\n\t\t\tconst isUserQuery = !opts || \"prefix\" in opts;\n\t\t\tconst result = await this.chatService.sendRequest(\n\t\t\t\tthis.viewModel.sessionId,\n\t\t\t\tinput,\n\t\t\t\t{\n\t\t\t\t\tlocation: this.location,\n\t\t\t\t\tlocationData: this._location.resolveData?.(),\n\t\t\t\t\tparserContext: { selectedAgent: this._lastSelectedAgent },\n\t\t\t\t\tattachedContext: [\n\t\t\t\t\t\t...this.inputPart.attachedContext.values(),\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tif (result) {\n\t\t\t\tthis.inputPart.acceptInput(isUserQuery);\n\t\t\t\tthis._onDidSubmitAgent.fire({\n\t\t\t\t\tagent: result.agent,\n\t\t\t\t\tslashCommand: result.slashCommand,\n\t\t\t\t});\n\t\t\t\tresult.responseCompletePromise.then(() => {\n\t\t\t\t\tconst responses = this.viewModel\n\t\t\t\t\t\t?.getItems()\n\t\t\t\t\t\t.filter(isResponseVM);\n\t\t\t\t\tconst lastResponse = responses?.[responses.length - 1];\n\t\t\t\t\tthis.chatAccessibilityService.acceptResponse(\n\t\t\t\t\t\tlastResponse,\n\t\t\t\t\t\trequestId,\n\t\t\t\t\t\tisVoiceInput,\n\t\t\t\t\t);\n\t\t\t\t\tif (lastResponse?.result?.nextQuestion) {\n\t\t\t\t\t\tconst { prompt, participant, command } =\n\t\t\t\t\t\t\tlastResponse.result.nextQuestion;\n\t\t\t\t\t\tconst question = formatChatQuestion(\n\t\t\t\t\t\t\tthis.chatAgentService,\n\t\t\t\t\t\t\tthis.location,\n\t\t\t\t\t\t\tprompt,\n\t\t\t\t\t\t\tparticipant,\n\t\t\t\t\t\t\tcommand,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (question) {\n\t\t\t\t\t\t\tthis.input.setValue(question, false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn result.responseCreatedPromise;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tsetContext(\n\t\toverwrite: boolean,\n\t\t...contentReferences: IChatRequestVariableEntry[]\n\t) {\n\t\tthis.inputPart.attachContext(overwrite, ...contentReferences);\n\t}\n\n\tgetCodeBlockInfosForResponse(\n\t\tresponse: IChatResponseViewModel,\n\t): IChatCodeBlockInfo[] {\n\t\treturn this.renderer.getCodeBlockInfosForResponse(response);\n\t}\n\n\tgetCodeBlockInfoForEditor(uri: URI): IChatCodeBlockInfo | undefined {\n\t\treturn this.renderer.getCodeBlockInfoForEditor(uri);\n\t}\n\n\tgetFileTreeInfosForResponse(\n\t\tresponse: IChatResponseViewModel,\n\t): IChatFileTreeInfo[] {\n\t\treturn this.renderer.getFileTreeInfosForResponse(response);\n\t}\n\n\tgetLastFocusedFileTreeForResponse(\n\t\tresponse: IChatResponseViewModel,\n\t): IChatFileTreeInfo | undefined {\n\t\treturn this.renderer.getLastFocusedFileTreeForResponse(response);\n\t}\n\n\tfocusLastMessage(): void {\n\t\tif (!this.viewModel) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst items = this.tree.getNode(null).children;\n\t\tconst lastItem = items[items.length - 1];\n\t\tif (!lastItem) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.tree.setFocus([lastItem.element]);\n\t\tthis.tree.domFocus();\n\t}\n\n\tlayout(height: number, width: number): void {\n\t\twidth = Math.min(width, 850);\n\t\tthis.bodyDimension = new dom.Dimension(width, height);\n\n\t\tthis.inputPart.layout(height, width);\n\t\tconst inputPartHeight = this.inputPart.inputPartHeight;\n\t\tconst lastElementVisible =\n\t\t\tthis.tree.scrollTop + this.tree.renderHeight >=\n\t\t\tthis.tree.scrollHeight;\n\n\t\tconst listHeight = height - inputPartHeight;\n\n\t\tthis.tree.layout(listHeight, width);\n\t\tthis.tree.getHTMLElement().style.height = `${listHeight}px`;\n\t\tthis.renderer.layout(width);\n\t\tif (lastElementVisible) {\n\t\t\trevealLastElement(this.tree);\n\t\t}\n\n\t\tthis.listContainer.style.height = `${height - inputPartHeight}px`;\n\n\t\tthis._onDidChangeHeight.fire(height);\n\t}\n\n\tprivate _dynamicMessageLayoutData?: {\n\t\tnumOfMessages: number;\n\t\tmaxHeight: number;\n\t\tenabled: boolean;\n\t};\n\n\t// An alternative to layout, this allows you to specify the number of ChatTreeItems\n\t// you want to show, and the max height of the container. It will then layout the\n\t// tree to show that many items.\n\t// TODO@TylerLeonhardt: This could use some refactoring to make it clear which layout strategy is being used\n\tsetDynamicChatTreeItemLayout(\n\t\tnumOfChatTreeItems: number,\n\t\tmaxHeight: number,\n\t) {\n\t\tthis._dynamicMessageLayoutData = {\n\t\t\tnumOfMessages: numOfChatTreeItems,\n\t\t\tmaxHeight,\n\t\t\tenabled: true,\n\t\t};\n\t\tthis._register(\n\t\t\tthis.renderer.onDidChangeItemHeight(() =>\n\t\t\t\tthis.layoutDynamicChatTreeItemMode(),\n\t\t\t),\n\t\t);\n\n\t\tconst mutableDisposable = this._register(new MutableDisposable());\n\t\tthis._register(\n\t\t\tthis.tree.onDidScroll((e) => {\n\t\t\t\t// TODO@TylerLeonhardt this should probably just be disposed when this is disabled\n\t\t\t\t// and then set up again when it is enabled again\n\t\t\t\tif (!this._dynamicMessageLayoutData?.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tmutableDisposable.value = dom.scheduleAtNextAnimationFrame(\n\t\t\t\t\tdom.getWindow(this.listContainer),\n\t\t\t\t\t() => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!e.scrollTopChanged ||\n\t\t\t\t\t\t\te.heightChanged ||\n\t\t\t\t\t\t\te.scrollHeightChanged\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst renderHeight = e.height;\n\t\t\t\t\t\tconst diff =\n\t\t\t\t\t\t\te.scrollHeight - renderHeight - e.scrollTop;\n\t\t\t\t\t\tif (diff === 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst possibleMaxHeight =\n\t\t\t\t\t\t\tthis._dynamicMessageLayoutData?.maxHeight ??\n\t\t\t\t\t\t\tmaxHeight;\n\t\t\t\t\t\tconst width =\n\t\t\t\t\t\t\tthis.bodyDimension?.width ??\n\t\t\t\t\t\t\tthis.container.offsetWidth;\n\t\t\t\t\t\tthis.inputPart.layout(possibleMaxHeight, width);\n\t\t\t\t\t\tconst inputPartHeight = this.inputPart.inputPartHeight;\n\t\t\t\t\t\tconst newHeight = Math.min(\n\t\t\t\t\t\t\trenderHeight + diff,\n\t\t\t\t\t\t\tpossibleMaxHeight - inputPartHeight,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.layout(newHeight + inputPartHeight, width);\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\t}\n\n\tupdateDynamicChatTreeItemLayout(\n\t\tnumOfChatTreeItems: number,\n\t\tmaxHeight: number,\n\t) {\n\t\tthis._dynamicMessageLayoutData = {\n\t\t\tnumOfMessages: numOfChatTreeItems,\n\t\t\tmaxHeight,\n\t\t\tenabled: true,\n\t\t};\n\t\tlet hasChanged = false;\n\t\tlet height = this.bodyDimension!.height;\n\t\tlet width = this.bodyDimension!.width;\n\t\tif (maxHeight < this.bodyDimension!.height) {\n\t\t\theight = maxHeight;\n\t\t\thasChanged = true;\n\t\t}\n\t\tconst containerWidth = this.container.offsetWidth;\n\t\tif (this.bodyDimension?.width !== containerWidth) {\n\t\t\twidth = containerWidth;\n\t\t\thasChanged = true;\n\t\t}\n\t\tif (hasChanged) {\n\t\t\tthis.layout(height, width);\n\t\t}\n\t}\n\n\tget isDynamicChatTreeItemLayoutEnabled(): boolean {\n\t\treturn this._dynamicMessageLayoutData?.enabled ?? false;\n\t}\n\n\tset isDynamicChatTreeItemLayoutEnabled(value: boolean) {\n\t\tif (!this._dynamicMessageLayoutData) {\n\t\t\treturn;\n\t\t}\n\t\tthis._dynamicMessageLayoutData.enabled = value;\n\t}\n\n\tlayoutDynamicChatTreeItemMode(): void {\n\t\tif (!this.viewModel || !this._dynamicMessageLayoutData?.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst width = this.bodyDimension?.width ?? this.container.offsetWidth;\n\t\tthis.inputPart.layout(this._dynamicMessageLayoutData.maxHeight, width);\n\t\tconst inputHeight = this.inputPart.inputPartHeight;\n\n\t\tconst totalMessages = this.viewModel.getItems();\n\t\t// grab the last N messages\n\t\tconst messages = totalMessages.slice(\n\t\t\t-this._dynamicMessageLayoutData.numOfMessages,\n\t\t);\n\n\t\tconst needsRerender = messages.some(\n\t\t\t(m) => m.currentRenderedHeight === undefined,\n\t\t);\n\t\tconst listHeight = needsRerender\n\t\t\t? this._dynamicMessageLayoutData.maxHeight\n\t\t\t: messages.reduce(\n\t\t\t\t\t(acc, message) => acc + message.currentRenderedHeight!,\n\t\t\t\t\t0,\n\t\t\t\t);\n\n\t\tthis.layout(\n\t\t\tMath.min(\n\t\t\t\t// we add an additional 18px in order to show that there is scrollable content\n\t\t\t\tinputHeight + listHeight + (totalMessages.length > 2 ? 18 : 0),\n\t\t\t\tthis._dynamicMessageLayoutData.maxHeight,\n\t\t\t),\n\t\t\twidth,\n\t\t);\n\n\t\tif (needsRerender || !listHeight) {\n\t\t\t// TODO: figure out a better place to reveal the last element\n\t\t\trevealLastElement(this.tree);\n\t\t}\n\t}\n\n\tsaveState(): void {\n\t\tthis.inputPart.saveState();\n\t}\n\n\tgetViewState(): IChatViewState {\n\t\treturn {\n\t\t\tinputValue: this.getInput(),\n\t\t\tinputState: this.collectInputState(),\n\t\t};\n\t}\n}\n\nexport class ChatWidgetService implements IChatWidgetService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _widgets: ChatWidget[] = [];\n\tprivate _lastFocusedWidget: ChatWidget | undefined = undefined;\n\n\tget lastFocusedWidget(): ChatWidget | undefined {\n\t\treturn this._lastFocusedWidget;\n\t}\n\n\tconstructor() {}\n\n\tgetWidgetByInputUri(uri: URI): ChatWidget | undefined {\n\t\treturn this._widgets.find((w) => isEqual(w.inputUri, uri));\n\t}\n\n\tgetWidgetBySessionId(sessionId: string): ChatWidget | undefined {\n\t\treturn this._widgets.find((w) => w.viewModel?.sessionId === sessionId);\n\t}\n\n\tprivate setLastFocusedWidget(widget: ChatWidget | undefined): void {\n\t\tif (widget === this._lastFocusedWidget) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._lastFocusedWidget = widget;\n\t}\n\n\tregister(newWidget: ChatWidget): IDisposable {\n\t\tif (this._widgets.some((widget) => widget === newWidget)) {\n\t\t\tthrow new Error(\"Cannot register the same widget multiple times\");\n\t\t}\n\n\t\tthis._widgets.push(newWidget);\n\n\t\treturn combinedDisposable(\n\t\t\tnewWidget.onDidFocus(() => this.setLastFocusedWidget(newWidget)),\n\t\t\ttoDisposable(() =>\n\t\t\t\tthis._widgets.splice(this._widgets.indexOf(newWidget), 1),\n\t\t\t),\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["item"]
}
