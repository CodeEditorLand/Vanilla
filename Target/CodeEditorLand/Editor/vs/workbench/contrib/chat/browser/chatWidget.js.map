{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/chatWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { ITreeContextMenuEvent, ITreeElement } from '../../../../base/browser/ui/tree/tree.js';\nimport { disposableTimeout, timeout } from '../../../../base/common/async.js';\nimport { toErrorMessage } from '../../../../base/common/errorMessage.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { Disposable, DisposableStore, IDisposable, MutableDisposable, combinedDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { extUri, isEqual } from '../../../../base/common/resources.js';\nimport { isDefined } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport './media/chat.css';\nimport './media/chatAgentHover.css';\nimport { ICodeEditor } from '../../../../editor/browser/editorBrowser.js';\nimport { ICodeEditorService } from '../../../../editor/browser/services/codeEditorService.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IContextKey, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { ITextResourceEditorInput } from '../../../../platform/editor/common/editor.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nimport { WorkbenchObjectTree } from '../../../../platform/list/browser/listService.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { ChatTreeItem, IChatAccessibilityService, IChatCodeBlockInfo, IChatFileTreeInfo, IChatWidget, IChatWidgetService, IChatWidgetViewContext, IChatWidgetViewOptions, IChatListItemRendererOptions } from './chat.js';\nimport { ChatAccessibilityProvider } from './chatAccessibilityProvider.js';\nimport { ChatInputPart } from './chatInputPart.js';\nimport { ChatListDelegate, ChatListItemRenderer, IChatRendererDelegate } from './chatListRenderer.js';\nimport { ChatEditorOptions } from './chatOptions.js';\nimport { ChatAgentLocation, IChatAgentCommand, IChatAgentData, IChatAgentService } from '../common/chatAgents.js';\nimport { CONTEXT_CHAT_INPUT_HAS_AGENT, CONTEXT_CHAT_LOCATION, CONTEXT_CHAT_REQUEST_IN_PROGRESS, CONTEXT_IN_CHAT_SESSION, CONTEXT_IN_QUICK_CHAT, CONTEXT_RESPONSE_FILTERED } from '../common/chatContextKeys.js';\nimport { ChatModelInitState, IChatModel, IChatRequestVariableEntry, IChatResponseModel } from '../common/chatModel.js';\nimport { ChatRequestAgentPart, IParsedChatRequest, chatAgentLeader, chatSubcommandLeader, formatChatQuestion } from '../common/chatParserTypes.js';\nimport { ChatRequestParser } from '../common/chatRequestParser.js';\nimport { IChatFollowup, IChatLocationData, IChatService } from '../common/chatService.js';\nimport { IChatSlashCommandService } from '../common/chatSlashCommands.js';\nimport { ChatViewModel, IChatResponseViewModel, isRequestVM, isResponseVM, isWelcomeVM } from '../common/chatViewModel.js';\nimport { CodeBlockModelCollection } from '../common/codeBlockModelCollection.js';\n\nconst $ = dom.$;\n\nfunction revealLastElement(list: WorkbenchObjectTree<any>) {\n\tlist.scrollTop = list.scrollHeight - list.renderHeight;\n}\n\nexport type IChatInputState = Record<string, any>;\nexport interface IChatViewState {\n\tinputValue?: string;\n\tinputState?: IChatInputState;\n}\n\nexport interface IChatWidgetStyles {\n\tlistForeground: string;\n\tlistBackground: string;\n\tinputEditorBackground: string;\n\tresultEditorBackground: string;\n}\n\nexport interface IChatWidgetContrib extends IDisposable {\n\treadonly id: string;\n\n\t/**\n\t * A piece of state which is related to the input editor of the chat widget\n\t */\n\tgetInputState?(): any;\n\n\t/**\n\t * Called with the result of getInputState when navigating input history.\n\t */\n\tsetInputState?(s: any): void;\n}\n\nexport interface IChatWidgetLocationOptions {\n\tlocation: ChatAgentLocation;\n\tresolveData?(): IChatLocationData | undefined;\n}\n\nexport function isQuickChat(widget: IChatWidget): boolean {\n\treturn 'viewContext' in widget && 'isQuickChat' in widget.viewContext && Boolean(widget.viewContext.isQuickChat);\n}\n\nexport class ChatWidget extends Disposable implements IChatWidget {\n\tpublic static readonly CONTRIBS: { new(...args: [IChatWidget, ...any]): IChatWidgetContrib }[] = [];\n\n\tprivate readonly _onDidSubmitAgent = this._register(new Emitter<{ agent: IChatAgentData; slashCommand?: IChatAgentCommand }>());\n\tpublic readonly onDidSubmitAgent = this._onDidSubmitAgent.event;\n\n\tprivate _onDidChangeAgent = this._register(new Emitter<{ agent: IChatAgentData; slashCommand?: IChatAgentCommand }>());\n\treadonly onDidChangeAgent = this._onDidChangeAgent.event;\n\n\tprivate _onDidFocus = this._register(new Emitter<void>());\n\treadonly onDidFocus = this._onDidFocus.event;\n\n\tprivate _onDidChangeViewModel = this._register(new Emitter<void>());\n\treadonly onDidChangeViewModel = this._onDidChangeViewModel.event;\n\n\tprivate _onDidScroll = this._register(new Emitter<void>());\n\treadonly onDidScroll = this._onDidScroll.event;\n\n\tprivate _onDidClear = this._register(new Emitter<void>());\n\treadonly onDidClear = this._onDidClear.event;\n\n\tprivate _onDidAcceptInput = this._register(new Emitter<void>());\n\treadonly onDidAcceptInput = this._onDidAcceptInput.event;\n\n\tprivate _onDidChangeContext = this._register(new Emitter<{ removed?: IChatRequestVariableEntry[]; added?: IChatRequestVariableEntry[] }>());\n\treadonly onDidChangeContext = this._onDidChangeContext.event;\n\n\tprivate _onDidHide = this._register(new Emitter<void>());\n\treadonly onDidHide = this._onDidHide.event;\n\n\tprivate _onDidChangeParsedInput = this._register(new Emitter<void>());\n\treadonly onDidChangeParsedInput = this._onDidChangeParsedInput.event;\n\n\tprivate readonly _onWillMaybeChangeHeight = new Emitter<void>();\n\treadonly onWillMaybeChangeHeight: Event<void> = this._onWillMaybeChangeHeight.event;\n\n\tprivate _onDidChangeHeight = this._register(new Emitter<number>());\n\treadonly onDidChangeHeight = this._onDidChangeHeight.event;\n\n\tprivate readonly _onDidChangeContentHeight = new Emitter<void>();\n\treadonly onDidChangeContentHeight: Event<void> = this._onDidChangeContentHeight.event;\n\n\tprivate contribs: ReadonlyArray<IChatWidgetContrib> = [];\n\n\tprivate tree!: WorkbenchObjectTree<ChatTreeItem>;\n\tprivate renderer!: ChatListItemRenderer;\n\tprivate readonly _codeBlockModelCollection: CodeBlockModelCollection;\n\n\tprivate inputPart!: ChatInputPart;\n\tprivate editorOptions!: ChatEditorOptions;\n\n\tprivate listContainer!: HTMLElement;\n\tprivate container!: HTMLElement;\n\n\tprivate bodyDimension: dom.Dimension | undefined;\n\tprivate visibleChangeCount = 0;\n\tprivate requestInProgress: IContextKey<boolean>;\n\tprivate agentInInput: IContextKey<boolean>;\n\n\tprivate _visible = false;\n\tpublic get visible() {\n\t\treturn this._visible;\n\t}\n\n\tprivate previousTreeScrollHeight: number = 0;\n\n\tprivate readonly viewModelDisposables = this._register(new DisposableStore());\n\tprivate _viewModel: ChatViewModel | undefined;\n\tprivate set viewModel(viewModel: ChatViewModel | undefined) {\n\t\tif (this._viewModel === viewModel) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.viewModelDisposables.clear();\n\n\t\tthis._viewModel = viewModel;\n\t\tif (viewModel) {\n\t\t\tthis.viewModelDisposables.add(viewModel);\n\t\t}\n\n\t\tthis._onDidChangeViewModel.fire();\n\t}\n\n\tget viewModel() {\n\t\treturn this._viewModel;\n\t}\n\n\tprivate parsedChatRequest: IParsedChatRequest | undefined;\n\tget parsedInput() {\n\t\tif (this.parsedChatRequest === undefined) {\n\t\t\tthis.parsedChatRequest = this.instantiationService.createInstance(ChatRequestParser).parseChatRequest(this.viewModel!.sessionId, this.getInput(), this.location, { selectedAgent: this._lastSelectedAgent });\n\n\t\t\tthis.agentInInput.set((!!this.parsedChatRequest.parts.find(part => part instanceof ChatRequestAgentPart)));\n\t\t}\n\n\t\treturn this.parsedChatRequest;\n\t}\n\n\tget scopedContextKeyService(): IContextKeyService {\n\t\treturn this.contextKeyService;\n\t}\n\n\tprivate readonly _location: IChatWidgetLocationOptions;\n\n\tget location() {\n\t\treturn this._location.location;\n\t}\n\n\treadonly viewContext: IChatWidgetViewContext;\n\n\tconstructor(\n\t\tlocation: ChatAgentLocation | IChatWidgetLocationOptions,\n\t\t_viewContext: IChatWidgetViewContext | undefined,\n\t\tprivate readonly viewOptions: IChatWidgetViewOptions,\n\t\tprivate readonly styles: IChatWidgetStyles,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IChatService private readonly chatService: IChatService,\n\t\t@IChatAgentService private readonly chatAgentService: IChatAgentService,\n\t\t@IChatWidgetService chatWidgetService: IChatWidgetService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IChatAccessibilityService private readonly chatAccessibilityService: IChatAccessibilityService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IChatSlashCommandService private readonly chatSlashCommandService: IChatSlashCommandService,\n\t) {\n\t\tsuper();\n\n\t\tthis.viewContext = _viewContext ?? {};\n\n\t\tif (typeof location === 'object') {\n\t\t\tthis._location = location;\n\t\t} else {\n\t\t\tthis._location = { location };\n\t\t}\n\n\t\tCONTEXT_IN_CHAT_SESSION.bindTo(contextKeyService).set(true);\n\t\tCONTEXT_CHAT_LOCATION.bindTo(contextKeyService).set(this._location.location);\n\t\tCONTEXT_IN_QUICK_CHAT.bindTo(contextKeyService).set(isQuickChat(this));\n\t\tthis.agentInInput = CONTEXT_CHAT_INPUT_HAS_AGENT.bindTo(contextKeyService);\n\t\tthis.requestInProgress = CONTEXT_CHAT_REQUEST_IN_PROGRESS.bindTo(contextKeyService);\n\n\t\tthis._register((chatWidgetService as ChatWidgetService).register(this));\n\n\t\tthis._codeBlockModelCollection = this._register(instantiationService.createInstance(CodeBlockModelCollection));\n\n\t\tthis._register(codeEditorService.registerCodeEditorOpenHandler(async (input: ITextResourceEditorInput, _source: ICodeEditor | null, _sideBySide?: boolean): Promise<ICodeEditor | null> => {\n\t\t\tconst resource = input.resource;\n\t\t\tif (resource.scheme !== Schemas.vscodeChatCodeBlock) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst responseId = resource.path.split('/').at(1);\n\t\t\tif (!responseId) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst item = this.viewModel?.getItems().find(item => item.id === responseId);\n\t\t\tif (!item) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// TODO: needs to reveal the chat view\n\n\t\t\tthis.reveal(item);\n\n\t\t\tawait timeout(0); // wait for list to actually render\n\n\t\t\tfor (const codeBlockPart of this.renderer.editorsInUse()) {\n\t\t\t\tif (extUri.isEqual(codeBlockPart.uri, resource, true)) {\n\t\t\t\t\tconst editor = codeBlockPart.editor;\n\n\t\t\t\t\tlet relativeTop = 0;\n\t\t\t\t\tconst editorDomNode = editor.getDomNode();\n\t\t\t\t\tif (editorDomNode) {\n\t\t\t\t\t\tconst row = dom.findParentWithClass(editorDomNode, 'monaco-list-row');\n\t\t\t\t\t\tif (row) {\n\t\t\t\t\t\t\trelativeTop = dom.getTopLeftOffset(editorDomNode).top - dom.getTopLeftOffset(row).top;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (input.options?.selection) {\n\t\t\t\t\t\tconst editorSelectionTopOffset = editor.getTopForPosition(input.options.selection.startLineNumber, input.options.selection.startColumn);\n\t\t\t\t\t\trelativeTop += editorSelectionTopOffset;\n\n\t\t\t\t\t\teditor.focus();\n\t\t\t\t\t\teditor.setSelection({\n\t\t\t\t\t\t\tstartLineNumber: input.options.selection.startLineNumber,\n\t\t\t\t\t\t\tstartColumn: input.options.selection.startColumn,\n\t\t\t\t\t\t\tendLineNumber: input.options.selection.endLineNumber ?? input.options.selection.startLineNumber,\n\t\t\t\t\t\t\tendColumn: input.options.selection.endColumn ?? input.options.selection.startColumn\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.reveal(item, relativeTop);\n\n\t\t\t\t\treturn editor;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}));\n\t}\n\n\tprivate _lastSelectedAgent: IChatAgentData | undefined;\n\tset lastSelectedAgent(agent: IChatAgentData | undefined) {\n\t\tthis.parsedChatRequest = undefined;\n\t\tthis._lastSelectedAgent = agent;\n\t\tthis._onDidChangeParsedInput.fire();\n\t}\n\n\tget lastSelectedAgent(): IChatAgentData | undefined {\n\t\treturn this._lastSelectedAgent;\n\t}\n\n\tget supportsFileReferences(): boolean {\n\t\treturn !!this.viewOptions.supportsFileReferences;\n\t}\n\n\tget input(): ChatInputPart {\n\t\treturn this.inputPart;\n\t}\n\n\tget inputEditor(): ICodeEditor {\n\t\treturn this.inputPart.inputEditor;\n\t}\n\n\tget inputUri(): URI {\n\t\treturn this.inputPart.inputUri;\n\t}\n\n\tget contentHeight(): number {\n\t\treturn this.inputPart.contentHeight + this.tree.contentHeight;\n\t}\n\n\trender(parent: HTMLElement): void {\n\t\tconst viewId = 'viewId' in this.viewContext ? this.viewContext.viewId : undefined;\n\t\tthis.editorOptions = this._register(this.instantiationService.createInstance(ChatEditorOptions, viewId, this.styles.listForeground, this.styles.inputEditorBackground, this.styles.resultEditorBackground));\n\t\tconst renderInputOnTop = this.viewOptions.renderInputOnTop ?? false;\n\t\tconst renderFollowups = this.viewOptions.renderFollowups ?? !renderInputOnTop;\n\t\tconst renderStyle = this.viewOptions.renderStyle;\n\n\t\tthis.container = dom.append(parent, $('.interactive-session'));\n\t\tif (renderInputOnTop) {\n\t\t\tthis.createInput(this.container, { renderFollowups, renderStyle });\n\t\t\tthis.listContainer = dom.append(this.container, $(`.interactive-list`));\n\t\t} else {\n\t\t\tthis.listContainer = dom.append(this.container, $(`.interactive-list`));\n\t\t\tthis.createInput(this.container, { renderFollowups, renderStyle });\n\t\t}\n\n\t\tthis.createList(this.listContainer, { ...this.viewOptions.rendererOptions, renderStyle });\n\n\t\tthis._register(this.editorOptions.onDidChange(() => this.onDidStyleChange()));\n\t\tthis.onDidStyleChange();\n\n\t\t// Do initial render\n\t\tif (this.viewModel) {\n\t\t\tthis.onDidChangeItems();\n\t\t\trevealLastElement(this.tree);\n\t\t}\n\n\t\tthis.contribs = ChatWidget.CONTRIBS.map(contrib => {\n\t\t\ttry {\n\t\t\t\treturn this._register(this.instantiationService.createInstance(contrib, this));\n\t\t\t} catch (err) {\n\t\t\t\tthis.logService.error('Failed to instantiate chat widget contrib', toErrorMessage(err));\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}).filter(isDefined);\n\t}\n\n\tgetContrib<T extends IChatWidgetContrib>(id: string): T | undefined {\n\t\treturn this.contribs.find(c => c.id === id) as T;\n\t}\n\n\tfocusInput(): void {\n\t\tthis.inputPart.focus();\n\t}\n\n\thasInputFocus(): boolean {\n\t\treturn this.inputPart.hasFocus();\n\t}\n\n\tgetSibling(item: ChatTreeItem, type: 'next' | 'previous'): ChatTreeItem | undefined {\n\t\tif (!isResponseVM(item)) {\n\t\t\treturn;\n\t\t}\n\t\tconst items = this.viewModel?.getItems();\n\t\tif (!items) {\n\t\t\treturn;\n\t\t}\n\t\tconst responseItems = items.filter(i => isResponseVM(i));\n\t\tconst targetIndex = responseItems.indexOf(item);\n\t\tif (targetIndex === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tconst indexToFocus = type === 'next' ? targetIndex + 1 : targetIndex - 1;\n\t\tif (indexToFocus < 0 || indexToFocus > responseItems.length - 1) {\n\t\t\treturn;\n\t\t}\n\t\treturn responseItems[indexToFocus];\n\t}\n\n\tclear(): void {\n\t\tif (this._dynamicMessageLayoutData) {\n\t\t\tthis._dynamicMessageLayoutData.enabled = true;\n\t\t}\n\t\tthis._onDidClear.fire();\n\t}\n\n\tprivate onDidChangeItems(skipDynamicLayout?: boolean) {\n\t\tif (this.tree && this._visible) {\n\t\t\tconst treeItems = (this.viewModel?.getItems() ?? [])\n\t\t\t\t.map((item): ITreeElement<ChatTreeItem> => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\telement: item,\n\t\t\t\t\t\tcollapsed: false,\n\t\t\t\t\t\tcollapsible: false\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\tthis._onWillMaybeChangeHeight.fire();\n\n\t\t\tthis.tree.setChildren(null, treeItems, {\n\t\t\t\tdiffIdentityProvider: {\n\t\t\t\t\tgetId: (element) => {\n\t\t\t\t\t\treturn ((isResponseVM(element) || isRequestVM(element)) ? element.dataId : element.id) +\n\t\t\t\t\t\t\t// TODO? We can give the welcome message a proper VM or get rid of the rest of the VMs\n\t\t\t\t\t\t\t((isWelcomeVM(element) && this.viewModel) ? `_${ChatModelInitState[this.viewModel.initState]}` : '') +\n\t\t\t\t\t\t\t// Ensure re-rendering an element once slash commands are loaded, so the colorization can be applied.\n\t\t\t\t\t\t\t`${(isRequestVM(element) || isWelcomeVM(element)) /* && !!this.lastSlashCommands ? '_scLoaded' : '' */}` +\n\t\t\t\t\t\t\t// If a response is in the process of progressive rendering, we need to ensure that it will\n\t\t\t\t\t\t\t// be re-rendered so progressive rendering is restarted, even if the model wasn't updated.\n\t\t\t\t\t\t\t`${isResponseVM(element) && element.renderData ? `_${this.visibleChangeCount}` : ''}` +\n\t\t\t\t\t\t\t// Re-render once content references are loaded\n\t\t\t\t\t\t\t(isResponseVM(element) ? `_${element.contentReferences.length}` : '') +\n\t\t\t\t\t\t\t// Rerender request if we got new content references in the response\n\t\t\t\t\t\t\t// since this may change how we render the corresponding attachments in the request\n\t\t\t\t\t\t\t(isRequestVM(element) && element.contentReferences ? `_${element.contentReferences?.length}` : '');\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!skipDynamicLayout && this._dynamicMessageLayoutData) {\n\t\t\t\tthis.layoutDynamicChatTreeItemMode();\n\t\t\t}\n\n\t\t\tconst lastItem = treeItems[treeItems.length - 1]?.element;\n\t\t\tif (lastItem && isResponseVM(lastItem) && lastItem.isComplete) {\n\t\t\t\tthis.renderFollowups(lastItem.replyFollowups, lastItem);\n\t\t\t} else if (lastItem && isWelcomeVM(lastItem)) {\n\t\t\t\tthis.renderFollowups(lastItem.sampleQuestions);\n\t\t\t} else {\n\t\t\t\tthis.renderFollowups(undefined);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async renderFollowups(items: IChatFollowup[] | undefined, response?: IChatResponseViewModel): Promise<void> {\n\t\tthis.inputPart.renderFollowups(items, response);\n\n\t\tif (this.bodyDimension) {\n\t\t\tthis.layout(this.bodyDimension.height, this.bodyDimension.width);\n\t\t}\n\t}\n\n\tsetVisible(visible: boolean): void {\n\t\tconst wasVisible = this._visible;\n\t\tthis._visible = visible;\n\t\tthis.visibleChangeCount++;\n\t\tthis.renderer.setVisible(visible);\n\t\tthis.input.setVisible(visible);\n\n\t\tif (visible) {\n\t\t\tthis._register(disposableTimeout(() => {\n\t\t\t\t// Progressive rendering paused while hidden, so start it up again.\n\t\t\t\t// Do it after a timeout because the container is not visible yet (it should be but offsetHeight returns 0 here)\n\t\t\t\tif (this._visible) {\n\t\t\t\t\tthis.onDidChangeItems(true);\n\t\t\t\t}\n\t\t\t}, 0));\n\t\t} else if (wasVisible) {\n\t\t\tthis._onDidHide.fire();\n\t\t}\n\t}\n\n\tprivate createList(listContainer: HTMLElement, options: IChatListItemRendererOptions): void {\n\t\tconst scopedInstantiationService = this._register(this._register(this.instantiationService.createChild(new ServiceCollection([IContextKeyService, this.contextKeyService]))));\n\t\tconst delegate = scopedInstantiationService.createInstance(ChatListDelegate, this.viewOptions.defaultElementHeight ?? 200);\n\t\tconst rendererDelegate: IChatRendererDelegate = {\n\t\t\tgetListLength: () => this.tree.getNode(null).visibleChildrenCount,\n\t\t\tonDidScroll: this.onDidScroll,\n\t\t};\n\n\t\t// Create a dom element to hold UI from editor widgets embedded in chat messages\n\t\tconst overflowWidgetsContainer = document.createElement('div');\n\t\toverflowWidgetsContainer.classList.add('chat-overflow-widget-container', 'monaco-editor');\n\t\tlistContainer.append(overflowWidgetsContainer);\n\n\t\tthis.renderer = this._register(scopedInstantiationService.createInstance(\n\t\t\tChatListItemRenderer,\n\t\t\tthis.editorOptions,\n\t\t\tthis.location,\n\t\t\toptions,\n\t\t\trendererDelegate,\n\t\t\tthis._codeBlockModelCollection,\n\t\t\toverflowWidgetsContainer,\n\t\t));\n\t\tthis._register(this.renderer.onDidClickFollowup(item => {\n\t\t\t// is this used anymore?\n\t\t\tthis.acceptInput(item.message);\n\t\t}));\n\t\tthis._register(this.renderer.onDidClickRerunWithAgentOrCommandDetection(item => {\n\t\t\tconst request = this.chatService.getSession(item.sessionId)?.getRequests().find(candidate => candidate.id === item.requestId);\n\t\t\tif (request) {\n\t\t\t\tthis.chatService.resendRequest(request, { noCommandDetection: true, attempt: request.attempt + 1, location: this.location }).catch(e => this.logService.error('FAILED to rerun request', e));\n\t\t\t}\n\t\t}));\n\n\t\tthis.tree = this._register(<WorkbenchObjectTree<ChatTreeItem>>scopedInstantiationService.createInstance(\n\t\t\tWorkbenchObjectTree,\n\t\t\t'Chat',\n\t\t\tlistContainer,\n\t\t\tdelegate,\n\t\t\t[this.renderer],\n\t\t\t{\n\t\t\t\tidentityProvider: { getId: (e: ChatTreeItem) => e.id },\n\t\t\t\thorizontalScrolling: false,\n\t\t\t\talwaysConsumeMouseWheel: false,\n\t\t\t\tsupportDynamicHeights: true,\n\t\t\t\thideTwistiesOfChildlessElements: true,\n\t\t\t\taccessibilityProvider: this.instantiationService.createInstance(ChatAccessibilityProvider),\n\t\t\t\tkeyboardNavigationLabelProvider: { getKeyboardNavigationLabel: (e: ChatTreeItem) => isRequestVM(e) ? e.message : isResponseVM(e) ? e.response.value : '' }, // TODO\n\t\t\t\tsetRowLineHeight: false,\n\t\t\t\tfilter: this.viewOptions.filter ? { filter: this.viewOptions.filter.bind(this.viewOptions), } : undefined,\n\t\t\t\toverrideStyles: {\n\t\t\t\t\tlistFocusBackground: this.styles.listBackground,\n\t\t\t\t\tlistInactiveFocusBackground: this.styles.listBackground,\n\t\t\t\t\tlistActiveSelectionBackground: this.styles.listBackground,\n\t\t\t\t\tlistFocusAndSelectionBackground: this.styles.listBackground,\n\t\t\t\t\tlistInactiveSelectionBackground: this.styles.listBackground,\n\t\t\t\t\tlistHoverBackground: this.styles.listBackground,\n\t\t\t\t\tlistBackground: this.styles.listBackground,\n\t\t\t\t\tlistFocusForeground: this.styles.listForeground,\n\t\t\t\t\tlistHoverForeground: this.styles.listForeground,\n\t\t\t\t\tlistInactiveFocusForeground: this.styles.listForeground,\n\t\t\t\t\tlistInactiveSelectionForeground: this.styles.listForeground,\n\t\t\t\t\tlistActiveSelectionForeground: this.styles.listForeground,\n\t\t\t\t\tlistFocusAndSelectionForeground: this.styles.listForeground,\n\t\t\t\t}\n\t\t\t}));\n\t\tthis._register(this.tree.onContextMenu(e => this.onContextMenu(e)));\n\n\t\tthis._register(this.tree.onDidChangeContentHeight(() => {\n\t\t\tthis.onDidChangeTreeContentHeight();\n\t\t}));\n\t\tthis._register(this.renderer.onDidChangeItemHeight(e => {\n\t\t\tthis.tree.updateElementHeight(e.element, e.height);\n\t\t}));\n\t\tthis._register(this.tree.onDidFocus(() => {\n\t\t\tthis._onDidFocus.fire();\n\t\t}));\n\t\tthis._register(this.tree.onDidScroll(() => {\n\t\t\tthis._onDidScroll.fire();\n\t\t}));\n\t}\n\n\tprivate onContextMenu(e: ITreeContextMenuEvent<ChatTreeItem | null>): void {\n\t\te.browserEvent.preventDefault();\n\t\te.browserEvent.stopPropagation();\n\n\t\tconst selected = e.element;\n\t\tconst scopedContextKeyService = this.contextKeyService.createOverlay([\n\t\t\t[CONTEXT_RESPONSE_FILTERED.key, isResponseVM(selected) && !!selected.errorDetails?.responseIsFiltered]\n\t\t]);\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tmenuId: MenuId.ChatContext,\n\t\t\tmenuActionOptions: { shouldForwardArgs: true },\n\t\t\tcontextKeyService: scopedContextKeyService,\n\t\t\tgetAnchor: () => e.anchor,\n\t\t\tgetActionsContext: () => selected,\n\t\t});\n\t}\n\n\tprivate onDidChangeTreeContentHeight(): void {\n\t\tif (this.tree.scrollHeight !== this.previousTreeScrollHeight) {\n\t\t\t// Due to rounding, the scrollTop + renderHeight will not exactly match the scrollHeight.\n\t\t\t// Consider the tree to be scrolled all the way down if it is within 2px of the bottom.\n\t\t\tconst lastElementWasVisible = this.tree.scrollTop + this.tree.renderHeight >= this.previousTreeScrollHeight - 2;\n\t\t\tif (lastElementWasVisible) {\n\t\t\t\tdom.scheduleAtNextAnimationFrame(dom.getWindow(this.listContainer), () => {\n\t\t\t\t\t// Can't set scrollTop during this event listener, the list might overwrite the change\n\t\t\t\t\trevealLastElement(this.tree);\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t}\n\n\t\tthis.previousTreeScrollHeight = this.tree.scrollHeight;\n\t\tthis._onDidChangeContentHeight.fire();\n\t}\n\n\tprivate createInput(container: HTMLElement, options?: { renderFollowups: boolean; renderStyle?: 'default' | 'compact' | 'minimal' }): void {\n\t\tthis.inputPart = this._register(this.instantiationService.createInstance(ChatInputPart,\n\t\t\tthis.location,\n\t\t\t{\n\t\t\t\trenderFollowups: options?.renderFollowups ?? true,\n\t\t\t\trenderStyle: options?.renderStyle === 'minimal' ? 'compact' : options?.renderStyle,\n\t\t\t\tmenus: { executeToolbar: MenuId.ChatExecute, ...this.viewOptions.menus },\n\t\t\t\teditorOverflowWidgetsDomNode: this.viewOptions.editorOverflowWidgetsDomNode,\n\t\t\t},\n\t\t\t() => this.collectInputState()\n\t\t));\n\t\tthis.inputPart.render(container, '', this);\n\n\t\tthis._register(this.inputPart.onDidLoadInputState(state => {\n\t\t\tthis.contribs.forEach(c => {\n\t\t\t\tif (c.setInputState) {\n\t\t\t\t\tconst contribState = (typeof state === 'object' && state?.[c.id]) ?? {};\n\t\t\t\t\tc.setInputState(contribState);\n\t\t\t\t}\n\t\t\t});\n\t\t}));\n\t\tthis._register(this.inputPart.onDidFocus(() => this._onDidFocus.fire()));\n\t\tthis._register(this.inputPart.onDidChangeContext((e) => this._onDidChangeContext.fire(e)));\n\t\tthis._register(this.inputPart.onDidAcceptFollowup(e => {\n\t\t\tif (!this.viewModel) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet msg = '';\n\t\t\tif (e.followup.agentId && e.followup.agentId !== this.chatAgentService.getDefaultAgent(this.location)?.id) {\n\t\t\t\tconst agent = this.chatAgentService.getAgent(e.followup.agentId);\n\t\t\t\tif (!agent) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.lastSelectedAgent = agent;\n\t\t\t\tmsg = `${chatAgentLeader}${agent.name} `;\n\t\t\t\tif (e.followup.subCommand) {\n\t\t\t\t\tmsg += `${chatSubcommandLeader}${e.followup.subCommand} `;\n\t\t\t\t}\n\t\t\t} else if (!e.followup.agentId && e.followup.subCommand && this.chatSlashCommandService.hasCommand(e.followup.subCommand)) {\n\t\t\t\tmsg = `${chatSubcommandLeader}${e.followup.subCommand} `;\n\t\t\t}\n\n\t\t\tmsg += e.followup.message;\n\t\t\tthis.acceptInput(msg);\n\n\t\t\tif (!e.response) {\n\t\t\t\t// Followups can be shown by the welcome message, then there is no response associated.\n\t\t\t\t// At some point we probably want telemetry for these too.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.chatService.notifyUserAction({\n\t\t\t\tsessionId: this.viewModel.sessionId,\n\t\t\t\trequestId: e.response.requestId,\n\t\t\t\tagentId: e.response.agent?.id,\n\t\t\t\tcommand: e.response.slashCommand?.name,\n\t\t\t\tresult: e.response.result,\n\t\t\t\taction: {\n\t\t\t\t\tkind: 'followUp',\n\t\t\t\t\tfollowup: e.followup\n\t\t\t\t},\n\t\t\t});\n\t\t}));\n\t\tthis._register(this.inputPart.onDidChangeHeight(() => {\n\t\t\tif (this.bodyDimension) {\n\t\t\t\tthis.layout(this.bodyDimension.height, this.bodyDimension.width);\n\t\t\t}\n\t\t\tthis._onDidChangeContentHeight.fire();\n\t\t}));\n\t\tthis._register(this.inputEditor.onDidChangeModelContent(() => this.parsedChatRequest = undefined));\n\t\tthis._register(this.chatAgentService.onDidChangeAgents(() => this.parsedChatRequest = undefined));\n\t}\n\n\tprivate onDidStyleChange(): void {\n\t\tthis.container.style.setProperty('--vscode-interactive-result-editor-background-color', this.editorOptions.configuration.resultEditor.backgroundColor?.toString() ?? '');\n\t\tthis.container.style.setProperty('--vscode-interactive-session-foreground', this.editorOptions.configuration.foreground?.toString() ?? '');\n\t\tthis.container.style.setProperty('--vscode-chat-list-background', this.themeService.getColorTheme().getColor(this.styles.listBackground)?.toString() ?? '');\n\t}\n\n\tsetModel(model: IChatModel, viewState: IChatViewState): void {\n\t\tif (!this.container) {\n\t\t\tthrow new Error('Call render() before setModel()');\n\t\t}\n\n\t\tif (model.sessionId === this.viewModel?.sessionId) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._codeBlockModelCollection.clear();\n\n\t\tthis.container.setAttribute('data-session-id', model.sessionId);\n\t\tthis.viewModel = this.instantiationService.createInstance(ChatViewModel, model, this._codeBlockModelCollection);\n\t\tthis.viewModelDisposables.add(Event.accumulate(this.viewModel.onDidChange, 0)(events => {\n\t\t\tif (!this.viewModel) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.requestInProgress.set(this.viewModel.requestInProgress);\n\n\t\t\tthis.onDidChangeItems();\n\t\t\tif (events.some(e => e?.kind === 'addRequest') && this.visible) {\n\t\t\t\trevealLastElement(this.tree);\n\t\t\t\tthis.focusInput();\n\t\t\t}\n\t\t}));\n\t\tthis.viewModelDisposables.add(this.viewModel.onDidDisposeModel(() => {\n\t\t\t// Ensure that view state is saved here, because we will load it again when a new model is assigned\n\t\t\tthis.inputPart.saveState();\n\n\t\t\t// Disposes the viewmodel and listeners\n\t\t\tthis.viewModel = undefined;\n\t\t\tthis.onDidChangeItems();\n\t\t}));\n\t\tthis.inputPart.initForNewChatModel(viewState.inputValue, viewState.inputState ?? this.collectInputState());\n\t\tthis.contribs.forEach(c => {\n\t\t\tif (c.setInputState && viewState.inputState?.[c.id]) {\n\t\t\t\tc.setInputState(viewState.inputState?.[c.id]);\n\t\t\t}\n\t\t});\n\t\tthis.viewModelDisposables.add(model.onDidChange((e) => {\n\t\t\tif (e.kind === 'setAgent') {\n\t\t\t\tthis._onDidChangeAgent.fire({ agent: e.agent, slashCommand: e.command });\n\t\t\t}\n\t\t}));\n\n\t\tif (this.tree) {\n\t\t\tthis.onDidChangeItems();\n\t\t\trevealLastElement(this.tree);\n\t\t}\n\n\t}\n\n\tgetFocus(): ChatTreeItem | undefined {\n\t\treturn this.tree.getFocus()[0] ?? undefined;\n\t}\n\n\treveal(item: ChatTreeItem, relativeTop?: number): void {\n\t\tthis.tree.reveal(item, relativeTop);\n\t}\n\n\tfocus(item: ChatTreeItem): void {\n\t\tconst items = this.tree.getNode(null).children;\n\t\tconst node = items.find(i => i.element?.id === item.id);\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.tree.setFocus([node.element]);\n\t\tthis.tree.domFocus();\n\t}\n\n\trefilter() {\n\t\tthis.tree.refilter();\n\t}\n\n\tsetInputPlaceholder(placeholder: string): void {\n\t\tthis.viewModel?.setInputPlaceholder(placeholder);\n\t}\n\n\tresetInputPlaceholder(): void {\n\t\tthis.viewModel?.resetInputPlaceholder();\n\t}\n\n\tsetInput(value = ''): void {\n\t\tthis.inputPart.setValue(value, false);\n\t}\n\n\tgetInput(): string {\n\t\treturn this.inputPart.inputEditor.getValue();\n\t}\n\n\tlogInputHistory(): void {\n\t\tthis.inputPart.logInputHistory();\n\t}\n\n\tasync acceptInput(query?: string): Promise<IChatResponseModel | undefined> {\n\t\treturn this._acceptInput(query ? { query } : undefined);\n\t}\n\n\tasync acceptInputWithPrefix(prefix: string): Promise<void> {\n\t\tthis._acceptInput({ prefix });\n\t}\n\n\tprivate collectInputState(): IChatInputState {\n\t\tconst inputState: IChatInputState = {};\n\t\tthis.contribs.forEach(c => {\n\t\t\tif (c.getInputState) {\n\t\t\t\tinputState[c.id] = c.getInputState();\n\t\t\t}\n\t\t});\n\t\treturn inputState;\n\t}\n\n\tprivate async _acceptInput(opts: { query: string } | { prefix: string } | undefined): Promise<IChatResponseModel | undefined> {\n\t\tif (this.viewModel) {\n\t\t\tthis._onDidAcceptInput.fire();\n\n\t\t\tconst editorValue = this.getInput();\n\t\t\tconst requestId = this.chatAccessibilityService.acceptRequest();\n\t\t\tconst input = !opts ? editorValue :\n\t\t\t\t'query' in opts ? opts.query :\n\t\t\t\t\t`${opts.prefix} ${editorValue}`;\n\t\t\tconst isUserQuery = !opts || 'prefix' in opts;\n\t\t\tconst result = await this.chatService.sendRequest(this.viewModel.sessionId, input, {\n\t\t\t\tlocation: this.location,\n\t\t\t\tlocationData: this._location.resolveData?.(),\n\t\t\t\tparserContext: { selectedAgent: this._lastSelectedAgent },\n\t\t\t\tattachedContext: [...this.inputPart.attachedContext.values()]\n\t\t\t});\n\n\t\t\tif (result) {\n\t\t\t\tthis.inputPart.acceptInput(isUserQuery);\n\t\t\t\tthis._onDidSubmitAgent.fire({ agent: result.agent, slashCommand: result.slashCommand });\n\t\t\t\tresult.responseCompletePromise.then(() => {\n\t\t\t\t\tconst responses = this.viewModel?.getItems().filter(isResponseVM);\n\t\t\t\t\tconst lastResponse = responses?.[responses.length - 1];\n\t\t\t\t\tthis.chatAccessibilityService.acceptResponse(lastResponse, requestId);\n\t\t\t\t\tif (lastResponse?.result?.nextQuestion) {\n\t\t\t\t\t\tconst { prompt, participant, command } = lastResponse.result.nextQuestion;\n\t\t\t\t\t\tconst question = formatChatQuestion(this.chatAgentService, this.location, prompt, participant, command);\n\t\t\t\t\t\tif (question) {\n\t\t\t\t\t\t\tthis.input.setValue(question, false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn result.responseCreatedPromise;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tsetContext(overwrite: boolean, ...contentReferences: IChatRequestVariableEntry[]) {\n\t\tthis.inputPart.attachContext(overwrite, ...contentReferences);\n\t}\n\n\tgetCodeBlockInfosForResponse(response: IChatResponseViewModel): IChatCodeBlockInfo[] {\n\t\treturn this.renderer.getCodeBlockInfosForResponse(response);\n\t}\n\n\tgetCodeBlockInfoForEditor(uri: URI): IChatCodeBlockInfo | undefined {\n\t\treturn this.renderer.getCodeBlockInfoForEditor(uri);\n\t}\n\n\tgetFileTreeInfosForResponse(response: IChatResponseViewModel): IChatFileTreeInfo[] {\n\t\treturn this.renderer.getFileTreeInfosForResponse(response);\n\t}\n\n\tgetLastFocusedFileTreeForResponse(response: IChatResponseViewModel): IChatFileTreeInfo | undefined {\n\t\treturn this.renderer.getLastFocusedFileTreeForResponse(response);\n\t}\n\n\tfocusLastMessage(): void {\n\t\tif (!this.viewModel) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst items = this.tree.getNode(null).children;\n\t\tconst lastItem = items[items.length - 1];\n\t\tif (!lastItem) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.tree.setFocus([lastItem.element]);\n\t\tthis.tree.domFocus();\n\t}\n\n\tlayout(height: number, width: number): void {\n\t\twidth = Math.min(width, 850);\n\t\tthis.bodyDimension = new dom.Dimension(width, height);\n\n\t\tthis.inputPart.layout(height, width);\n\t\tconst inputPartHeight = this.inputPart.inputPartHeight;\n\t\tconst lastElementVisible = this.tree.scrollTop + this.tree.renderHeight >= this.tree.scrollHeight;\n\n\t\tconst listHeight = height - inputPartHeight;\n\n\t\tthis.tree.layout(listHeight, width);\n\t\tthis.tree.getHTMLElement().style.height = `${listHeight}px`;\n\t\tthis.renderer.layout(width);\n\t\tif (lastElementVisible) {\n\t\t\trevealLastElement(this.tree);\n\t\t}\n\n\t\tthis.listContainer.style.height = `${height - inputPartHeight}px`;\n\n\t\tthis._onDidChangeHeight.fire(height);\n\t}\n\n\tprivate _dynamicMessageLayoutData?: { numOfMessages: number; maxHeight: number; enabled: boolean };\n\n\t// An alternative to layout, this allows you to specify the number of ChatTreeItems\n\t// you want to show, and the max height of the container. It will then layout the\n\t// tree to show that many items.\n\t// TODO@TylerLeonhardt: This could use some refactoring to make it clear which layout strategy is being used\n\tsetDynamicChatTreeItemLayout(numOfChatTreeItems: number, maxHeight: number) {\n\t\tthis._dynamicMessageLayoutData = { numOfMessages: numOfChatTreeItems, maxHeight, enabled: true };\n\t\tthis._register(this.renderer.onDidChangeItemHeight(() => this.layoutDynamicChatTreeItemMode()));\n\n\t\tconst mutableDisposable = this._register(new MutableDisposable());\n\t\tthis._register(this.tree.onDidScroll((e) => {\n\t\t\t// TODO@TylerLeonhardt this should probably just be disposed when this is disabled\n\t\t\t// and then set up again when it is enabled again\n\t\t\tif (!this._dynamicMessageLayoutData?.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tmutableDisposable.value = dom.scheduleAtNextAnimationFrame(dom.getWindow(this.listContainer), () => {\n\t\t\t\tif (!e.scrollTopChanged || e.heightChanged || e.scrollHeightChanged) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst renderHeight = e.height;\n\t\t\t\tconst diff = e.scrollHeight - renderHeight - e.scrollTop;\n\t\t\t\tif (diff === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst possibleMaxHeight = (this._dynamicMessageLayoutData?.maxHeight ?? maxHeight);\n\t\t\t\tconst width = this.bodyDimension?.width ?? this.container.offsetWidth;\n\t\t\t\tthis.inputPart.layout(possibleMaxHeight, width);\n\t\t\t\tconst inputPartHeight = this.inputPart.inputPartHeight;\n\t\t\t\tconst newHeight = Math.min(renderHeight + diff, possibleMaxHeight - inputPartHeight);\n\t\t\t\tthis.layout(newHeight + inputPartHeight, width);\n\t\t\t});\n\t\t}));\n\t}\n\n\tupdateDynamicChatTreeItemLayout(numOfChatTreeItems: number, maxHeight: number) {\n\t\tthis._dynamicMessageLayoutData = { numOfMessages: numOfChatTreeItems, maxHeight, enabled: true };\n\t\tlet hasChanged = false;\n\t\tlet height = this.bodyDimension!.height;\n\t\tlet width = this.bodyDimension!.width;\n\t\tif (maxHeight < this.bodyDimension!.height) {\n\t\t\theight = maxHeight;\n\t\t\thasChanged = true;\n\t\t}\n\t\tconst containerWidth = this.container.offsetWidth;\n\t\tif (this.bodyDimension?.width !== containerWidth) {\n\t\t\twidth = containerWidth;\n\t\t\thasChanged = true;\n\t\t}\n\t\tif (hasChanged) {\n\t\t\tthis.layout(height, width);\n\t\t}\n\t}\n\n\tget isDynamicChatTreeItemLayoutEnabled(): boolean {\n\t\treturn this._dynamicMessageLayoutData?.enabled ?? false;\n\t}\n\n\tset isDynamicChatTreeItemLayoutEnabled(value: boolean) {\n\t\tif (!this._dynamicMessageLayoutData) {\n\t\t\treturn;\n\t\t}\n\t\tthis._dynamicMessageLayoutData.enabled = value;\n\t}\n\n\tlayoutDynamicChatTreeItemMode(): void {\n\t\tif (!this.viewModel || !this._dynamicMessageLayoutData?.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst width = this.bodyDimension?.width ?? this.container.offsetWidth;\n\t\tthis.inputPart.layout(this._dynamicMessageLayoutData.maxHeight, width);\n\t\tconst inputHeight = this.inputPart.inputPartHeight;\n\n\t\tconst totalMessages = this.viewModel.getItems();\n\t\t// grab the last N messages\n\t\tconst messages = totalMessages.slice(-this._dynamicMessageLayoutData.numOfMessages);\n\n\t\tconst needsRerender = messages.some(m => m.currentRenderedHeight === undefined);\n\t\tconst listHeight = needsRerender\n\t\t\t? this._dynamicMessageLayoutData.maxHeight\n\t\t\t: messages.reduce((acc, message) => acc + message.currentRenderedHeight!, 0);\n\n\t\tthis.layout(\n\t\t\tMath.min(\n\t\t\t\t// we add an additional 18px in order to show that there is scrollable content\n\t\t\t\tinputHeight + listHeight + (totalMessages.length > 2 ? 18 : 0),\n\t\t\t\tthis._dynamicMessageLayoutData.maxHeight\n\t\t\t),\n\t\t\twidth\n\t\t);\n\n\t\tif (needsRerender || !listHeight) {\n\t\t\t// TODO: figure out a better place to reveal the last element\n\t\t\trevealLastElement(this.tree);\n\t\t}\n\t}\n\n\tsaveState(): void {\n\t\tthis.inputPart.saveState();\n\t}\n\n\tgetViewState(): IChatViewState {\n\t\treturn { inputValue: this.getInput(), inputState: this.collectInputState() };\n\t}\n}\n\nexport class ChatWidgetService implements IChatWidgetService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _widgets: ChatWidget[] = [];\n\tprivate _lastFocusedWidget: ChatWidget | undefined = undefined;\n\n\tget lastFocusedWidget(): ChatWidget | undefined {\n\t\treturn this._lastFocusedWidget;\n\t}\n\n\tconstructor() { }\n\n\tgetWidgetByInputUri(uri: URI): ChatWidget | undefined {\n\t\treturn this._widgets.find(w => isEqual(w.inputUri, uri));\n\t}\n\n\tgetWidgetBySessionId(sessionId: string): ChatWidget | undefined {\n\t\treturn this._widgets.find(w => w.viewModel?.sessionId === sessionId);\n\t}\n\n\tprivate setLastFocusedWidget(widget: ChatWidget | undefined): void {\n\t\tif (widget === this._lastFocusedWidget) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._lastFocusedWidget = widget;\n\t}\n\n\tregister(newWidget: ChatWidget): IDisposable {\n\t\tif (this._widgets.some(widget => widget === newWidget)) {\n\t\t\tthrow new Error('Cannot register the same widget multiple times');\n\t\t}\n\n\t\tthis._widgets.push(newWidget);\n\n\t\treturn combinedDisposable(\n\t\t\tnewWidget.onDidFocus(() => this.setLastFocusedWidget(newWidget)),\n\t\t\ttoDisposable(() => this._widgets.splice(this._widgets.indexOf(newWidget), 1))\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["item"]
}
