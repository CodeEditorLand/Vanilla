{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/chatContentParts/chatWarningContentPart.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../../../base/browser/dom.js\";\nimport { renderIcon } from \"../../../../../base/browser/ui/iconLabel/iconLabels.js\";\nimport { Codicon } from \"../../../../../base/common/codicons.js\";\nimport type { IMarkdownString } from \"../../../../../base/common/htmlContent.js\";\nimport { Disposable } from \"../../../../../base/common/lifecycle.js\";\nimport type { MarkdownRenderer } from \"../../../../../editor/browser/widget/markdownRenderer/browser/markdownRenderer.js\";\nimport type { IChatProgressRenderableResponseContent } from \"../../common/chatModel.js\";\nimport type { IChatContentPart } from \"./chatContentParts.js\";\n\nconst $ = dom.$;\n\nexport class ChatWarningContentPart\n\textends Disposable\n\timplements IChatContentPart\n{\n\tpublic readonly domNode: HTMLElement;\n\n\tconstructor(\n\t\tkind: \"info\" | \"warning\" | \"error\",\n\t\tcontent: IMarkdownString,\n\t\trenderer: MarkdownRenderer,\n\t) {\n\t\tsuper();\n\n\t\tthis.domNode = $(\".chat-notification-widget\");\n\t\tlet icon;\n\t\tlet iconClass;\n\t\tswitch (kind) {\n\t\t\tcase \"warning\":\n\t\t\t\ticon = Codicon.warning;\n\t\t\t\ticonClass = \".chat-warning-codicon\";\n\t\t\t\tbreak;\n\t\t\tcase \"error\":\n\t\t\t\ticon = Codicon.error;\n\t\t\t\ticonClass = \".chat-error-codicon\";\n\t\t\t\tbreak;\n\t\t\tcase \"info\":\n\t\t\t\ticon = Codicon.info;\n\t\t\t\ticonClass = \".chat-info-codicon\";\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.domNode.appendChild($(iconClass, undefined, renderIcon(icon)));\n\t\tconst markdownContent = renderer.render(content);\n\t\tthis.domNode.appendChild(markdownContent.element);\n\t}\n\n\thasSameContent(other: IChatProgressRenderableResponseContent): boolean {\n\t\t// No other change allowed for this content type\n\t\treturn other.kind === \"warning\";\n\t}\n}\n"],
  "mappings": ";;AAKA,YAAY,SAAS;AACrB,SAAS,kBAAkB;AAC3B,SAAS,eAAe;AAExB,SAAS,kBAAkB;AAK3B,MAAM,IAAI,IAAI;AAEP,MAAM,+BACJ,WAET;AAAA,EAnBA,OAmBA;AAAA;AAAA;AAAA,EACiB;AAAA,EAEhB,YACC,MACA,SACA,UACC;AACD,UAAM;AAEN,SAAK,UAAU,EAAE,2BAA2B;AAC5C,QAAI;AACJ,QAAI;AACJ,YAAQ,MAAM;AAAA,MACb,KAAK;AACJ,eAAO,QAAQ;AACf,oBAAY;AACZ;AAAA,MACD,KAAK;AACJ,eAAO,QAAQ;AACf,oBAAY;AACZ;AAAA,MACD,KAAK;AACJ,eAAO,QAAQ;AACf,oBAAY;AACZ;AAAA,IACF;AACA,SAAK,QAAQ,YAAY,EAAE,WAAW,QAAW,WAAW,IAAI,CAAC,CAAC;AAClE,UAAM,kBAAkB,SAAS,OAAO,OAAO;AAC/C,SAAK,QAAQ,YAAY,gBAAgB,OAAO;AAAA,EACjD;AAAA,EAEA,eAAe,OAAwD;AAEtE,WAAO,MAAM,SAAS;AAAA,EACvB;AACD;",
  "names": []
}
