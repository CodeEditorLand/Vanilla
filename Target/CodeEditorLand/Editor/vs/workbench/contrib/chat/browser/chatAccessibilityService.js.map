{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/chatAccessibilityService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { status } from '../../../../base/browser/ui/aria/aria.js';\nimport { Disposable, DisposableMap } from '../../../../base/common/lifecycle.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { AccessibilityProgressSignalScheduler } from '../../../../platform/accessibilitySignal/browser/progressAccessibilitySignalScheduler.js';\nimport { IChatAccessibilityService } from './chat.js';\nimport { IChatResponseViewModel } from '../common/chatViewModel.js';\nimport { renderStringAsPlaintext } from '../../../../base/browser/markdownRenderer.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { AccessibilityVoiceSettingId } from '../../accessibility/browser/accessibilityConfiguration.js';\n\nconst CHAT_RESPONSE_PENDING_ALLOWANCE_MS = 4000;\nexport class ChatAccessibilityService extends Disposable implements IChatAccessibilityService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _pendingSignalMap: DisposableMap<number, AccessibilityProgressSignalScheduler> = this._register(new DisposableMap());\n\n\tprivate _requestId: number = 0;\n\n\tconstructor(\n\t\t@IAccessibilitySignalService private readonly _accessibilitySignalService: IAccessibilitySignalService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\t}\n\tacceptRequest(): number {\n\t\tthis._requestId++;\n\t\tthis._accessibilitySignalService.playSignal(AccessibilitySignal.chatRequestSent, { allowManyInParallel: true });\n\t\tthis._pendingSignalMap.set(this._requestId, this._instantiationService.createInstance(AccessibilityProgressSignalScheduler, CHAT_RESPONSE_PENDING_ALLOWANCE_MS, undefined));\n\t\treturn this._requestId;\n\t}\n\tacceptResponse(response: IChatResponseViewModel | string | undefined, requestId: number): void {\n\t\tthis._pendingSignalMap.deleteAndDispose(requestId);\n\t\tconst isPanelChat = typeof response !== 'string';\n\t\tconst responseContent = typeof response === 'string' ? response : response?.response.toString();\n\t\tthis._accessibilitySignalService.playSignal(AccessibilitySignal.chatResponseReceived, { allowManyInParallel: true });\n\t\tif (!response || !responseContent) {\n\t\t\treturn;\n\t\t}\n\t\tconst errorDetails = isPanelChat && response.errorDetails ? ` ${response.errorDetails.message}` : '';\n\t\tconst plainTextResponse = renderStringAsPlaintext(new MarkdownString(responseContent));\n\t\tif (this._configurationService.getValue(AccessibilityVoiceSettingId.AutoSynthesize) !== 'on') {\n\t\t\tstatus(plainTextResponse + errorDetails);\n\t\t}\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,cAAc;AACvB,SAAS,YAAY,qBAAqB;AAC1C,SAAS,qBAAqB,mCAAmC;AACjE,SAAS,6BAA6B;AACtC,SAAS,4CAA4C;AACrD,SAAS,iCAAiC;AAC1C,SAAS,8BAA8B;AACvC,SAAS,+BAA+B;AACxC,SAAS,sBAAsB;AAC/B,SAAS,6BAA6B;AACtC,SAAS,mCAAmC;AAE5C,MAAM,qCAAqC;AACpC,IAAM,2BAAN,cAAuC,WAAgD;AAAA,EAQ7F,YAC+C,6BACN,uBACA,uBACvC;AACD,UAAM;AAJwC;AACN;AACA;AAAA,EAGzC;AAAA,EAhCD,OAkB8F;AAAA;AAAA;AAAA,EAIrF,oBAAiF,KAAK,UAAU,IAAI,cAAc,CAAC;AAAA,EAEnH,aAAqB;AAAA,EAS7B,gBAAwB;AACvB,SAAK;AACL,SAAK,4BAA4B,WAAW,oBAAoB,iBAAiB,EAAE,qBAAqB,KAAK,CAAC;AAC9G,SAAK,kBAAkB,IAAI,KAAK,YAAY,KAAK,sBAAsB,eAAe,sCAAsC,oCAAoC,MAAS,CAAC;AAC1K,WAAO,KAAK;AAAA,EACb;AAAA,EACA,eAAe,UAAuD,WAAyB;AAC9F,SAAK,kBAAkB,iBAAiB,SAAS;AACjD,UAAM,cAAc,OAAO,aAAa;AACxC,UAAM,kBAAkB,OAAO,aAAa,WAAW,WAAW,UAAU,SAAS,SAAS;AAC9F,SAAK,4BAA4B,WAAW,oBAAoB,sBAAsB,EAAE,qBAAqB,KAAK,CAAC;AACnH,QAAI,CAAC,YAAY,CAAC,iBAAiB;AAClC;AAAA,IACD;AACA,UAAM,eAAe,eAAe,SAAS,eAAe,IAAI,SAAS,aAAa,OAAO,KAAK;AAClG,UAAM,oBAAoB,wBAAwB,IAAI,eAAe,eAAe,CAAC;AACrF,QAAI,KAAK,sBAAsB,SAAS,4BAA4B,cAAc,MAAM,MAAM;AAC7F,aAAO,oBAAoB,YAAY;AAAA,IACxC;AAAA,EACD;AACD;AAnCa,2BAAN;AAAA,EASJ;AAAA,EACA;AAAA,EACA;AAAA,GAXU;",
  "names": []
}
