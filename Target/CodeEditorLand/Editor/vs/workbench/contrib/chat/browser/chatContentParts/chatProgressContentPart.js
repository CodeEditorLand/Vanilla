import{$ as l}from"../../../../../base/browser/dom.js";import{alert as c}from"../../../../../base/browser/ui/aria/aria.js";import{Codicon as i}from"../../../../../base/common/codicons.js";import{MarkdownString as I}from"../../../../../base/common/htmlContent.js";import{Disposable as f}from"../../../../../base/common/lifecycle.js";import{ThemeIcon as g}from"../../../../../base/common/themables.js";import"../../../../../editor/browser/widget/markdownRenderer/browser/markdownRenderer.js";import"../chat.js";import"./chatContentParts.js";import"../../common/chatService.js";import{isResponseVM as u}from"../../common/chatViewModel.js";class j extends f{domNode;showSpinner;constructor(e,o,t,n,h){super();const s=t.content.slice(t.index+1);if(this.showSpinner=n??m(s,t.element),h!==!0&&s.some(C=>C.kind!=="progressMessage")){this.domNode=l("");return}this.showSpinner&&c(e.content.value);const d=this.showSpinner?g.modify(i.loading,"spin").id:i.check.id,p=new I(`$(${d}) ${e.content.value}`,{supportThemeIcons:!0}),a=this._register(o.render(p));a.element.classList.add("progress-step"),this.domNode=a.element}hasSameContent(e,o,t){const n=m(o,t);return e.kind==="progressMessage"&&this.showSpinner===n}}function m(r,e){return u(e)&&!e.isComplete&&r.length===0}export{j as ChatProgressContentPart};
