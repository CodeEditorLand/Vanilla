import{$ as c}from"../../../../../base/browser/dom.js";import{alert as l}from"../../../../../base/browser/ui/aria/aria.js";import{Codicon as i}from"../../../../../base/common/codicons.js";import{MarkdownString as w}from"../../../../../base/common/htmlContent.js";import{Disposable as g}from"../../../../../base/common/lifecycle.js";import{ThemeIcon as I}from"../../../../../base/common/themables.js";import{isResponseVM as f}from"../../common/chatViewModel.js";class T extends g{domNode;showSpinner;constructor(e,o,t,r,d){super();const s=t.content.slice(t.index+1);if(this.showSpinner=r??m(s,t.element),d!==!0&&s.some(C=>C.kind!=="progressMessage")){this.domNode=c("");return}this.showSpinner&&l(e.content.value);const h=this.showSpinner?I.modify(i.loading,"spin").id:i.check.id,p=new w(`$(${h}) ${e.content.value}`,{supportThemeIcons:!0}),a=this._register(o.render(p));a.element.classList.add("progress-step"),this.domNode=a.element}hasSameContent(e,o,t){const r=m(o,t);return e.kind==="progressMessage"&&this.showSpinner===r}}function m(n,e){return f(e)&&!e.isComplete&&n.length===0}export{T as ChatProgressContentPart};
