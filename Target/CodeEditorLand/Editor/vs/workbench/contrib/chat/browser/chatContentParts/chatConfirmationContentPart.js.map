{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/chatContentParts/chatConfirmationContentPart.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from \"../../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n} from \"../../../../../base/common/lifecycle.js\";\nimport { localize } from \"../../../../../nls.js\";\nimport { IInstantiationService } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport type { IChatProgressRenderableResponseContent } from \"../../common/chatModel.js\";\nimport {\n\ttype IChatConfirmation,\n\ttype IChatSendRequestOptions,\n\tIChatService,\n} from \"../../common/chatService.js\";\nimport { isResponseVM } from \"../../common/chatViewModel.js\";\nimport { ChatConfirmationWidget } from \"./chatConfirmationWidget.js\";\nimport type {\n\tIChatContentPart,\n\tIChatContentPartRenderContext,\n} from \"./chatContentParts.js\";\n\nexport class ChatConfirmationContentPart\n\textends Disposable\n\timplements IChatContentPart\n{\n\tpublic readonly domNode: HTMLElement;\n\n\tprivate readonly _onDidChangeHeight = this._register(new Emitter<void>());\n\tpublic readonly onDidChangeHeight = this._onDidChangeHeight.event;\n\n\tconstructor(\n\t\tconfirmation: IChatConfirmation,\n\t\tcontext: IChatContentPartRenderContext,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\t@IChatService private readonly chatService: IChatService,\n\t) {\n\t\tsuper();\n\n\t\tconst element = context.element;\n\t\tconst buttons = confirmation.buttons\n\t\t\t? confirmation.buttons.map((button) => ({\n\t\t\t\t\tlabel: button,\n\t\t\t\t\tdata: confirmation.data,\n\t\t\t\t}))\n\t\t\t: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: localize(\"accept\", \"Accept\"),\n\t\t\t\t\t\tdata: confirmation.data,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: localize(\"dismiss\", \"Dismiss\"),\n\t\t\t\t\t\tdata: confirmation.data,\n\t\t\t\t\t\tisSecondary: true,\n\t\t\t\t\t},\n\t\t\t\t];\n\t\tconst confirmationWidget = this._register(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tChatConfirmationWidget,\n\t\t\t\tconfirmation.title,\n\t\t\t\tconfirmation.message,\n\t\t\t\tbuttons,\n\t\t\t),\n\t\t);\n\t\tconfirmationWidget.setShowButtons(!confirmation.isUsed);\n\n\t\tthis._register(\n\t\t\tconfirmationWidget.onDidClick(async (e) => {\n\t\t\t\tif (isResponseVM(element)) {\n\t\t\t\t\tconst prompt = `${e.label}: \"${confirmation.title}\"`;\n\t\t\t\t\tconst data: IChatSendRequestOptions = e.isSecondary\n\t\t\t\t\t\t? { rejectedConfirmationData: [e.data] }\n\t\t\t\t\t\t: { acceptedConfirmationData: [e.data] };\n\t\t\t\t\tdata.agentId = element.agent?.id;\n\t\t\t\t\tdata.slashCommand = element.slashCommand?.name;\n\t\t\t\t\tdata.confirmation = e.label;\n\t\t\t\t\tif (\n\t\t\t\t\t\tawait this.chatService.sendRequest(\n\t\t\t\t\t\t\telement.sessionId,\n\t\t\t\t\t\t\tprompt,\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconfirmation.isUsed = true;\n\t\t\t\t\t\tconfirmationWidget.setShowButtons(false);\n\t\t\t\t\t\tthis._onDidChangeHeight.fire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis.domNode = confirmationWidget.domNode;\n\t}\n\n\thasSameContent(other: IChatProgressRenderableResponseContent): boolean {\n\t\t// No other change allowed for this content type\n\t\treturn other.kind === \"confirmation\";\n\t}\n\n\taddDisposable(disposable: IDisposable): void {\n\t\tthis._register(disposable);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,eAAe;AACxB;AAAA,EACC;AAAA,OAEM;AACP,SAAS,gBAAgB;AACzB,SAAS,6BAA6B;AAEtC;AAAA,EAGC;AAAA,OACM;AACP,SAAS,oBAAoB;AAC7B,SAAS,8BAA8B;AAMhC,IAAM,8BAAN,cACE,WAET;AAAA,EAMC,YACC,cACA,SAEiB,sBACc,aAC9B;AACD,UAAM;AAHW;AACc;AAI/B,UAAM,UAAU,QAAQ;AACxB,UAAM,UAAU,aAAa,UAC1B,aAAa,QAAQ,IAAI,CAAC,YAAY;AAAA,MACtC,OAAO;AAAA,MACP,MAAM,aAAa;AAAA,IACpB,EAAE,IACD;AAAA,MACA;AAAA,QACC,OAAO,SAAS,UAAU,QAAQ;AAAA,QAClC,MAAM,aAAa;AAAA,MACpB;AAAA,MACA;AAAA,QACC,OAAO,SAAS,WAAW,SAAS;AAAA,QACpC,MAAM,aAAa;AAAA,QACnB,aAAa;AAAA,MACd;AAAA,IACD;AACF,UAAM,qBAAqB,KAAK;AAAA,MAC/B,KAAK,qBAAqB;AAAA,QACzB;AAAA,QACA,aAAa;AAAA,QACb,aAAa;AAAA,QACb;AAAA,MACD;AAAA,IACD;AACA,uBAAmB,eAAe,CAAC,aAAa,MAAM;AAEtD,SAAK;AAAA,MACJ,mBAAmB,WAAW,OAAO,MAAM;AAC1C,YAAI,aAAa,OAAO,GAAG;AAC1B,gBAAM,SAAS,GAAG,EAAE,KAAK,MAAM,aAAa,KAAK;AACjD,gBAAM,OAAgC,EAAE,cACrC,EAAE,0BAA0B,CAAC,EAAE,IAAI,EAAE,IACrC,EAAE,0BAA0B,CAAC,EAAE,IAAI,EAAE;AACxC,eAAK,UAAU,QAAQ,OAAO;AAC9B,eAAK,eAAe,QAAQ,cAAc;AAC1C,eAAK,eAAe,EAAE;AACtB,cACC,MAAM,KAAK,YAAY;AAAA,YACtB,QAAQ;AAAA,YACR;AAAA,YACA;AAAA,UACD,GACC;AACD,yBAAa,SAAS;AACtB,+BAAmB,eAAe,KAAK;AACvC,iBAAK,mBAAmB,KAAK;AAAA,UAC9B;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAEA,SAAK,UAAU,mBAAmB;AAAA,EACnC;AAAA,EAhGD,OA4BA;AAAA;AAAA;AAAA,EACiB;AAAA,EAEC,qBAAqB,KAAK,UAAU,IAAI,QAAc,CAAC;AAAA,EACxD,oBAAoB,KAAK,mBAAmB;AAAA,EAkE5D,eAAe,OAAwD;AAEtE,WAAO,MAAM,SAAS;AAAA,EACvB;AAAA,EAEA,cAAc,YAA+B;AAC5C,SAAK,UAAU,UAAU;AAAA,EAC1B;AACD;AAjFa,8BAAN;AAAA,EAYJ;AAAA,EAEA;AAAA,GAdU;",
  "names": []
}
