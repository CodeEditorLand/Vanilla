import{coalesce as Q}from"../../../../../base/common/arrays.js";import{Codicon as g}from"../../../../../base/common/codicons.js";import{fromNowByDay as W}from"../../../../../base/common/date.js";import{KeyCode as w,KeyMod as d}from"../../../../../base/common/keyCodes.js";import{DisposableStore as B}from"../../../../../base/common/lifecycle.js";import{ThemeIcon as T}from"../../../../../base/common/themables.js";import{EditorAction2 as U}from"../../../../../editor/browser/editorExtensions.js";import{localize as h,localize2 as a}from"../../../../../nls.js";import{Action2 as C,MenuId as K,registerAction2 as l}from"../../../../../platform/actions/common/actions.js";import{ContextKeyExpr as A}from"../../../../../platform/contextkey/common/contextkey.js";import{IsLinuxContext as F,IsWindowsContext as G}from"../../../../../platform/contextkey/common/contextkeys.js";import{KeybindingWeight as k}from"../../../../../platform/keybinding/common/keybindingsRegistry.js";import{IQuickInputService as L}from"../../../../../platform/quickinput/common/quickInput.js";import{IEditorGroupsService as j}from"../../../../services/editor/common/editorGroupsService.js";import{ACTIVE_GROUP as X,IEditorService as q}from"../../../../services/editor/common/editorService.js";import{IViewsService as V}from"../../../../services/views/common/viewsService.js";import{CONTEXT_CHAT_ENABLED as E,CONTEXT_CHAT_INPUT_CURSOR_AT_TOP as $,CONTEXT_IN_CHAT_INPUT as N,CONTEXT_IN_CHAT_SESSION as z}from"../../common/chatContextKeys.js";import{IChatService as O}from"../../common/chatService.js";import{isRequestVM as Y}from"../../common/chatViewModel.js";import{IChatWidgetHistoryService as J}from"../../common/chatWidgetHistoryService.js";import{CHAT_VIEW_ID as P,IChatWidgetService as D,showChatView as Z}from"../chat.js";import{ChatEditorInput as x}from"../chatEditorInput.js";import{clearChatEditor as ee}from"./chatClear.js";function Ve(i){return i instanceof Object&&"chatView"in i}const m=a("chat.category","Chat"),te="workbench.action.chat.open";class ie extends C{constructor(){super({id:te,title:a("openChat","Open Chat"),icon:g.commentDiscussion,f1:!1,category:m,keybinding:{weight:k.WorkbenchContrib,primary:d.CtrlCmd|d.Alt|w.KeyI,mac:{primary:d.CtrlCmd|d.WinCtrl|w.KeyI}}})}async run(e,t){t=typeof t=="string"?{query:t}:t;const r=e.get(O),o=await Z(e.get(V));if(o){if(t?.previousRequests?.length&&o.viewModel)for(const{request:v,response:u}of t.previousRequests)r.addCompleteRequest(o.viewModel.sessionId,v,void 0,0,{message:u});t?.query&&(t.isPartialQuery?o.setInput(t.query):o.acceptInput(t.query)),o.focusInput()}}}class re extends C{constructor(){super({id:"workbench.action.chat.history",title:a("chat.history.label","Show Chats..."),menu:{id:K.ViewTitle,when:A.equals("view",P),group:"navigation",order:-1},category:m,icon:g.history,f1:!0,precondition:E})}async run(e){const t=e.get(O),r=e.get(L),o=e.get(V),v=e.get(q),u=()=>{const S={iconClass:T.asClassName(g.file),tooltip:h("interactiveSession.history.editor","Open in Editor")},I={iconClass:T.asClassName(g.x),tooltip:h("interactiveSession.history.delete","Delete")},b={iconClass:T.asClassName(g.pencil),tooltip:h("chat.history.rename","Rename")},H=()=>{const s=t.getHistory();s.sort((p,f)=>(f.lastMessageDate??0)-(p.lastMessageDate??0));let c;const _=s.flatMap(p=>{const f=W(p.lastMessageDate,!0,!0),M=f!==c?{type:"separator",label:f}:void 0;return c=f,[M,{label:p.title,description:p.isActive?`(${h("currentChatLabel","current")})`:"",chat:p,buttons:p.isActive?[b]:[b,S,I]}]});return Q(_)},y=new B,n=y.add(r.createQuickPick({useSeparators:!0}));n.placeholder=h("interactiveSession.history.pick","Switch to chat");const R=H();n.items=R,y.add(n.onDidTriggerItemButton(async s=>{if(s.button===S){const c={target:{sessionId:s.item.chat.sessionId},pinned:!0};v.openEditor({resource:x.getNewEditorUri(),options:c},X),n.hide()}else if(s.button===I)t.removeHistoryEntry(s.item.chat.sessionId),n.items=H();else if(s.button===b){const c=await r.input({title:h("newChatTitle","New chat title"),value:s.item.chat.title});c&&t.setChatSessionTitle(s.item.chat.sessionId,c),u()}})),y.add(n.onDidAccept(async()=>{try{const c=n.selectedItems[0].chat.sessionId;(await o.openView(P)).loadSession(c)}finally{n.hide()}})),y.add(n.onDidHide(()=>y.dispose())),n.show()};u()}}class oe extends C{constructor(){super({id:"workbench.action.openChat",title:a("interactiveSession.open","Open Editor"),f1:!0,category:m,precondition:E})}async run(e){await e.get(q).openEditor({resource:x.getNewEditorUri(),options:{pinned:!0}})}}function _e(){l(ie),l(re),l(oe),l(class extends C{constructor(){super({id:"workbench.action.chat.clearInputHistory",title:a("interactiveSession.clearHistory.label","Clear Input History"),precondition:E,category:m,f1:!0})}async run(e,...t){e.get(J).clearHistory()}}),l(class extends C{constructor(){super({id:"workbench.action.chat.clearHistory",title:a("chat.clear.label","Clear All Workspace Chats"),precondition:E,category:m,f1:!0})}async run(e,...t){const r=e.get(j),o=e.get(V);e.get(O).clearAllHistoryEntries();const u=o.getViewWithId(P);u&&u.widget.clear(),r.groups.forEach(S=>{S.editors.forEach(I=>{I instanceof x&&ee(e,I)})})}}),l(class extends U{constructor(){super({id:"chat.action.focus",title:a("actions.interactiveSession.focus","Focus Chat List"),precondition:A.and(N),category:m,keybinding:[{when:$,primary:d.CtrlCmd|w.UpArrow,weight:k.EditorContrib},{when:A.or(G,F),primary:d.CtrlCmd|w.UpArrow,weight:k.EditorContrib}]})}runEditorCommand(e,t){const r=t.getModel()?.uri;r&&e.get(D).getWidgetByInputUri(r)?.focusLastMessage()}}),l(class extends C{constructor(){super({id:"workbench.action.chat.focusInput",title:a("interactiveSession.focusInput.label","Focus Chat Input"),f1:!1,keybinding:{primary:d.CtrlCmd|w.DownArrow,weight:k.WorkbenchContrib,when:A.and(z,N.negate())}})}run(e,...t){e.get(D).lastFocusedWidget?.focusInput()}})}function qe(i,e=!0){return Y(i)?(e?`${i.username}: `:"")+i.messageText:(e?`${i.username}: `:"")+i.response.toString()}export{m as CHAT_CATEGORY,te as CHAT_OPEN_ACTION_ID,Ve as isChatViewTitleActionContext,_e as registerChatActions,qe as stringifyItem};
