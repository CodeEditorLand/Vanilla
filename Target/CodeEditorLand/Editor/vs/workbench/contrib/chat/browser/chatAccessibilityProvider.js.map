{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/chatAccessibilityProvider.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { AriaRole } from '../../../../base/browser/ui/aria/aria.js';\nimport { IListAccessibilityProvider } from '../../../../base/browser/ui/list/listWidget.js';\nimport { marked } from '../../../../base/common/marked/marked.js';\nimport { localize } from '../../../../nls.js';\nimport { AccessibilityVerbositySettingId } from '../../accessibility/browser/accessibilityConfiguration.js';\nimport { IAccessibleViewService } from '../../../../platform/accessibility/browser/accessibleView.js';\nimport { ChatTreeItem } from './chat.js';\nimport { isRequestVM, isResponseVM, isWelcomeVM, IChatResponseViewModel } from '../common/chatViewModel.js';\n\nexport class ChatAccessibilityProvider implements IListAccessibilityProvider<ChatTreeItem> {\n\n\tconstructor(\n\t\t@IAccessibleViewService private readonly _accessibleViewService: IAccessibleViewService\n\t) {\n\n\t}\n\tgetWidgetRole(): AriaRole {\n\t\treturn 'list';\n\t}\n\n\tgetRole(element: ChatTreeItem): AriaRole | undefined {\n\t\treturn 'listitem';\n\t}\n\n\tgetWidgetAriaLabel(): string {\n\t\treturn localize('chat', \"Chat\");\n\t}\n\n\tgetAriaLabel(element: ChatTreeItem): string {\n\t\tif (isRequestVM(element)) {\n\t\t\treturn element.messageText;\n\t\t}\n\n\t\tif (isResponseVM(element)) {\n\t\t\treturn this._getLabelWithCodeBlockCount(element);\n\t\t}\n\n\t\tif (isWelcomeVM(element)) {\n\t\t\treturn element.content.map(c => 'value' in c ? c.value : c.map(followup => followup.message).join('\\n')).join('\\n');\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tprivate _getLabelWithCodeBlockCount(element: IChatResponseViewModel): string {\n\t\tconst accessibleViewHint = this._accessibleViewService.getOpenAriaHint(AccessibilityVerbositySettingId.Chat);\n\t\tlet label: string = '';\n\t\tconst fileTreeCount = element.response.value.filter((v) => !('value' in v))?.length ?? 0;\n\t\tlet fileTreeCountHint = '';\n\t\tswitch (fileTreeCount) {\n\t\t\tcase 0:\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tfileTreeCountHint = localize('singleFileTreeHint', \"1 file tree\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tfileTreeCountHint = localize('multiFileTreeHint', \"{0} file trees\", fileTreeCount);\n\t\t\t\tbreak;\n\t\t}\n\t\tconst codeBlockCount = marked.lexer(element.response.toString()).filter(token => token.type === 'code')?.length ?? 0;\n\t\tswitch (codeBlockCount) {\n\t\t\tcase 0:\n\t\t\t\tlabel = accessibleViewHint ? localize('noCodeBlocksHint', \"{0} {1} {2}\", fileTreeCountHint, element.response.toString(), accessibleViewHint) : localize('noCodeBlocks', \"{0} {1}\", fileTreeCountHint, element.response.toString());\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tlabel = accessibleViewHint ? localize('singleCodeBlockHint', \"{0} 1 code block: {1} {2}\", fileTreeCountHint, element.response.toString(), accessibleViewHint) : localize('singleCodeBlock', \"{0} 1 code block: {1}\", fileTreeCountHint, element.response.toString());\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlabel = accessibleViewHint ? localize('multiCodeBlockHint', \"{0} {1} code blocks: {2}\", fileTreeCountHint, codeBlockCount, element.response.toString(), accessibleViewHint) : localize('multiCodeBlock', \"{0} {1} code blocks\", fileTreeCountHint, codeBlockCount, element.response.toString());\n\t\t\t\tbreak;\n\t\t}\n\t\treturn label;\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,gBAAgB;AACzB,SAAS,kCAAkC;AAC3C,SAAS,cAAc;AACvB,SAAS,gBAAgB;AACzB,SAAS,uCAAuC;AAChD,SAAS,8BAA8B;AACvC,SAAS,oBAAoB;AAC7B,SAAS,aAAa,cAAc,aAAa,8BAA8B;AAExE,IAAM,4BAAN,MAAoF;AAAA,EAE1F,YAC0C,wBACxC;AADwC;AAAA,EAG1C;AAAA,EApBD,OAc2F;AAAA;AAAA;AAAA,EAO1F,gBAA0B;AACzB,WAAO;AAAA,EACR;AAAA,EAEA,QAAQ,SAA6C;AACpD,WAAO;AAAA,EACR;AAAA,EAEA,qBAA6B;AAC5B,WAAO,SAAS,QAAQ,MAAM;AAAA,EAC/B;AAAA,EAEA,aAAa,SAA+B;AAC3C,QAAI,YAAY,OAAO,GAAG;AACzB,aAAO,QAAQ;AAAA,IAChB;AAEA,QAAI,aAAa,OAAO,GAAG;AAC1B,aAAO,KAAK,4BAA4B,OAAO;AAAA,IAChD;AAEA,QAAI,YAAY,OAAO,GAAG;AACzB,aAAO,QAAQ,QAAQ,IAAI,OAAK,WAAW,IAAI,EAAE,QAAQ,EAAE,IAAI,cAAY,SAAS,OAAO,EAAE,KAAK,IAAI,CAAC,EAAE,KAAK,IAAI;AAAA,IACnH;AAEA,WAAO;AAAA,EACR;AAAA,EAEQ,4BAA4B,SAAyC;AAC5E,UAAM,qBAAqB,KAAK,uBAAuB,gBAAgB,gCAAgC,IAAI;AAC3G,QAAI,QAAgB;AACpB,UAAM,gBAAgB,QAAQ,SAAS,MAAM,OAAO,CAAC,MAAM,EAAE,WAAW,EAAE,GAAG,UAAU;AACvF,QAAI,oBAAoB;AACxB,YAAQ,eAAe;AAAA,MACtB,KAAK;AACJ;AAAA,MACD,KAAK;AACJ,4BAAoB,SAAS,sBAAsB,aAAa;AAChE;AAAA,MACD;AACC,4BAAoB,SAAS,qBAAqB,kBAAkB,aAAa;AACjF;AAAA,IACF;AACA,UAAM,iBAAiB,OAAO,MAAM,QAAQ,SAAS,SAAS,CAAC,EAAE,OAAO,WAAS,MAAM,SAAS,MAAM,GAAG,UAAU;AACnH,YAAQ,gBAAgB;AAAA,MACvB,KAAK;AACJ,gBAAQ,qBAAqB,SAAS,oBAAoB,eAAe,mBAAmB,QAAQ,SAAS,SAAS,GAAG,kBAAkB,IAAI,SAAS,gBAAgB,WAAW,mBAAmB,QAAQ,SAAS,SAAS,CAAC;AACjO;AAAA,MACD,KAAK;AACJ,gBAAQ,qBAAqB,SAAS,uBAAuB,6BAA6B,mBAAmB,QAAQ,SAAS,SAAS,GAAG,kBAAkB,IAAI,SAAS,mBAAmB,yBAAyB,mBAAmB,QAAQ,SAAS,SAAS,CAAC;AACnQ;AAAA,MACD;AACC,gBAAQ,qBAAqB,SAAS,sBAAsB,4BAA4B,mBAAmB,gBAAgB,QAAQ,SAAS,SAAS,GAAG,kBAAkB,IAAI,SAAS,kBAAkB,uBAAuB,mBAAmB,gBAAgB,QAAQ,SAAS,SAAS,CAAC;AAC9R;AAAA,IACF;AACA,WAAO;AAAA,EACR;AACD;AAhEa,4BAAN;AAAA,EAGJ;AAAA,GAHU;",
  "names": []
}
