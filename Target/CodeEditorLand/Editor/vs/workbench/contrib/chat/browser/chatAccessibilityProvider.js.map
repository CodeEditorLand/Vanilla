{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/chatAccessibilityProvider.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { AriaRole } from \"../../../../base/browser/ui/aria/aria.js\";\nimport type { IListAccessibilityProvider } from \"../../../../base/browser/ui/list/listWidget.js\";\nimport { marked } from \"../../../../base/common/marked/marked.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IAccessibleViewService } from \"../../../../platform/accessibility/browser/accessibleView.js\";\nimport { AccessibilityVerbositySettingId } from \"../../accessibility/browser/accessibilityConfiguration.js\";\nimport {\n\ttype IChatResponseViewModel,\n\tisRequestVM,\n\tisResponseVM,\n\tisWelcomeVM,\n} from \"../common/chatViewModel.js\";\nimport type { ChatTreeItem } from \"./chat.js\";\n\nexport class ChatAccessibilityProvider\n\timplements IListAccessibilityProvider<ChatTreeItem>\n{\n\tconstructor(\n\t\t@IAccessibleViewService\n\t\tprivate readonly _accessibleViewService: IAccessibleViewService,\n\t) {}\n\tgetWidgetRole(): AriaRole {\n\t\treturn \"list\";\n\t}\n\n\tgetRole(element: ChatTreeItem): AriaRole | undefined {\n\t\treturn \"listitem\";\n\t}\n\n\tgetWidgetAriaLabel(): string {\n\t\treturn localize(\"chat\", \"Chat\");\n\t}\n\n\tgetAriaLabel(element: ChatTreeItem): string {\n\t\tif (isRequestVM(element)) {\n\t\t\treturn element.messageText;\n\t\t}\n\n\t\tif (isResponseVM(element)) {\n\t\t\treturn this._getLabelWithCodeBlockCount(element);\n\t\t}\n\n\t\tif (isWelcomeVM(element)) {\n\t\t\treturn element.content\n\t\t\t\t.map((c) =>\n\t\t\t\t\t\"value\" in c\n\t\t\t\t\t\t? c.value\n\t\t\t\t\t\t: c.map((followup) => followup.message).join(\"\\n\"),\n\t\t\t\t)\n\t\t\t\t.join(\"\\n\");\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\tprivate _getLabelWithCodeBlockCount(\n\t\telement: IChatResponseViewModel,\n\t): string {\n\t\tconst accessibleViewHint = this._accessibleViewService.getOpenAriaHint(\n\t\t\tAccessibilityVerbositySettingId.Chat,\n\t\t);\n\t\tlet label = \"\";\n\t\tconst fileTreeCount =\n\t\t\telement.response.value.filter((v) => !(\"value\" in v))?.length ?? 0;\n\t\tlet fileTreeCountHint = \"\";\n\t\tswitch (fileTreeCount) {\n\t\t\tcase 0:\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tfileTreeCountHint = localize(\n\t\t\t\t\t\"singleFileTreeHint\",\n\t\t\t\t\t\"1 file tree\",\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tfileTreeCountHint = localize(\n\t\t\t\t\t\"multiFileTreeHint\",\n\t\t\t\t\t\"{0} file trees\",\n\t\t\t\t\tfileTreeCount,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t}\n\t\tconst codeBlockCount =\n\t\t\tmarked\n\t\t\t\t.lexer(element.response.toString())\n\t\t\t\t.filter((token) => token.type === \"code\")?.length ?? 0;\n\t\tswitch (codeBlockCount) {\n\t\t\tcase 0:\n\t\t\t\tlabel = accessibleViewHint\n\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\"noCodeBlocksHint\",\n\t\t\t\t\t\t\t\"{0} {1} {2}\",\n\t\t\t\t\t\t\tfileTreeCountHint,\n\t\t\t\t\t\t\telement.response.toString(),\n\t\t\t\t\t\t\taccessibleViewHint,\n\t\t\t\t\t\t)\n\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\"noCodeBlocks\",\n\t\t\t\t\t\t\t\"{0} {1}\",\n\t\t\t\t\t\t\tfileTreeCountHint,\n\t\t\t\t\t\t\telement.response.toString(),\n\t\t\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tlabel = accessibleViewHint\n\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\"singleCodeBlockHint\",\n\t\t\t\t\t\t\t\"{0} 1 code block: {1} {2}\",\n\t\t\t\t\t\t\tfileTreeCountHint,\n\t\t\t\t\t\t\telement.response.toString(),\n\t\t\t\t\t\t\taccessibleViewHint,\n\t\t\t\t\t\t)\n\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\"singleCodeBlock\",\n\t\t\t\t\t\t\t\"{0} 1 code block: {1}\",\n\t\t\t\t\t\t\tfileTreeCountHint,\n\t\t\t\t\t\t\telement.response.toString(),\n\t\t\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlabel = accessibleViewHint\n\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\"multiCodeBlockHint\",\n\t\t\t\t\t\t\t\"{0} {1} code blocks: {2}\",\n\t\t\t\t\t\t\tfileTreeCountHint,\n\t\t\t\t\t\t\tcodeBlockCount,\n\t\t\t\t\t\t\telement.response.toString(),\n\t\t\t\t\t\t\taccessibleViewHint,\n\t\t\t\t\t\t)\n\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\"multiCodeBlock\",\n\t\t\t\t\t\t\t\"{0} {1} code blocks\",\n\t\t\t\t\t\t\tfileTreeCountHint,\n\t\t\t\t\t\t\tcodeBlockCount,\n\t\t\t\t\t\t\telement.response.toString(),\n\t\t\t\t\t\t);\n\t\t\t\tbreak;\n\t\t}\n\t\treturn label;\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAOA,SAAS,cAAc;AACvB,SAAS,gBAAgB;AACzB,SAAS,8BAA8B;AACvC,SAAS,uCAAuC;AAChD;AAAA,EAEC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAGA,IAAM,4BAAN,MAEP;AAAA,EACC,YAEkB,wBAChB;AADgB;AAAA,EACf;AAAA,EAzBJ,OAqBA;AAAA;AAAA;AAAA,EAKC,gBAA0B;AACzB,WAAO;AAAA,EACR;AAAA,EAEA,QAAQ,SAA6C;AACpD,WAAO;AAAA,EACR;AAAA,EAEA,qBAA6B;AAC5B,WAAO,SAAS,QAAQ,MAAM;AAAA,EAC/B;AAAA,EAEA,aAAa,SAA+B;AAC3C,QAAI,YAAY,OAAO,GAAG;AACzB,aAAO,QAAQ;AAAA,IAChB;AAEA,QAAI,aAAa,OAAO,GAAG;AAC1B,aAAO,KAAK,4BAA4B,OAAO;AAAA,IAChD;AAEA,QAAI,YAAY,OAAO,GAAG;AACzB,aAAO,QAAQ,QACb;AAAA,QAAI,CAAC,MACL,WAAW,IACR,EAAE,QACF,EAAE,IAAI,CAAC,aAAa,SAAS,OAAO,EAAE,KAAK,IAAI;AAAA,MACnD,EACC,KAAK,IAAI;AAAA,IACZ;AAEA,WAAO;AAAA,EACR;AAAA,EAEQ,4BACP,SACS;AACT,UAAM,qBAAqB,KAAK,uBAAuB;AAAA,MACtD,gCAAgC;AAAA,IACjC;AACA,QAAI,QAAQ;AACZ,UAAM,gBACL,QAAQ,SAAS,MAAM,OAAO,CAAC,MAAM,EAAE,WAAW,EAAE,GAAG,UAAU;AAClE,QAAI,oBAAoB;AACxB,YAAQ,eAAe;AAAA,MACtB,KAAK;AACJ;AAAA,MACD,KAAK;AACJ,4BAAoB;AAAA,UACnB;AAAA,UACA;AAAA,QACD;AACA;AAAA,MACD;AACC,4BAAoB;AAAA,UACnB;AAAA,UACA;AAAA,UACA;AAAA,QACD;AACA;AAAA,IACF;AACA,UAAM,iBACL,OACE,MAAM,QAAQ,SAAS,SAAS,CAAC,EACjC,OAAO,CAAC,UAAU,MAAM,SAAS,MAAM,GAAG,UAAU;AACvD,YAAQ,gBAAgB;AAAA,MACvB,KAAK;AACJ,gBAAQ,qBACL;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA,QAAQ,SAAS,SAAS;AAAA,UAC1B;AAAA,QACD,IACC;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA,QAAQ,SAAS,SAAS;AAAA,QAC3B;AACF;AAAA,MACD,KAAK;AACJ,gBAAQ,qBACL;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA,QAAQ,SAAS,SAAS;AAAA,UAC1B;AAAA,QACD,IACC;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA,QAAQ,SAAS,SAAS;AAAA,QAC3B;AACF;AAAA,MACD;AACC,gBAAQ,qBACL;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA,QAAQ,SAAS,SAAS;AAAA,UAC1B;AAAA,QACD,IACC;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA,QAAQ,SAAS,SAAS;AAAA,QAC3B;AACF;AAAA,IACF;AACA,WAAO;AAAA,EACR;AACD;AA9Ha,4BAAN;AAAA,EAIJ;AAAA,GAJU;",
  "names": []
}
