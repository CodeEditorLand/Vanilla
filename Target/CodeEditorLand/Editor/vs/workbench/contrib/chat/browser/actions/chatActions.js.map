{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/actions/chatActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from \"../../../../../base/common/arrays.js\";\nimport { Codicon } from \"../../../../../base/common/codicons.js\";\nimport { fromNowByDay } from \"../../../../../base/common/date.js\";\nimport { KeyCode, KeyMod } from \"../../../../../base/common/keyCodes.js\";\nimport { DisposableStore } from \"../../../../../base/common/lifecycle.js\";\nimport { ThemeIcon } from \"../../../../../base/common/themables.js\";\nimport type { ICodeEditor } from \"../../../../../editor/browser/editorBrowser.js\";\nimport {\n\tEditorAction2,\n\ttype ServicesAccessor,\n} from \"../../../../../editor/browser/editorExtensions.js\";\nimport { localize, localize2 } from \"../../../../../nls.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../../platform/actions/common/actions.js\";\nimport { ContextKeyExpr } from \"../../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tIsLinuxContext,\n\tIsWindowsContext,\n} from \"../../../../../platform/contextkey/common/contextkeys.js\";\nimport { KeybindingWeight } from \"../../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport {\n\ttype IQuickInputButton,\n\tIQuickInputService,\n\ttype IQuickPickItem,\n\ttype IQuickPickSeparator,\n} from \"../../../../../platform/quickinput/common/quickInput.js\";\nimport { IEditorGroupsService } from \"../../../../services/editor/common/editorGroupsService.js\";\nimport {\n\tACTIVE_GROUP,\n\tIEditorService,\n} from \"../../../../services/editor/common/editorService.js\";\nimport { IViewsService } from \"../../../../services/views/common/viewsService.js\";\nimport {\n\tCONTEXT_CHAT_ENABLED,\n\tCONTEXT_CHAT_INPUT_CURSOR_AT_TOP,\n\tCONTEXT_IN_CHAT_INPUT,\n\tCONTEXT_IN_CHAT_SESSION,\n\tCONTEXT_IN_QUICK_CHAT,\n} from \"../../common/chatContextKeys.js\";\nimport { type IChatDetail, IChatService } from \"../../common/chatService.js\";\nimport {\n\ttype IChatRequestViewModel,\n\ttype IChatResponseViewModel,\n\tisRequestVM,\n} from \"../../common/chatViewModel.js\";\nimport { IChatWidgetHistoryService } from \"../../common/chatWidgetHistoryService.js\";\nimport { CHAT_VIEW_ID, IChatWidgetService, showChatView } from \"../chat.js\";\nimport type { IChatEditorOptions } from \"../chatEditor.js\";\nimport { ChatEditorInput } from \"../chatEditorInput.js\";\nimport type { ChatViewPane } from \"../chatViewPane.js\";\nimport { clearChatEditor } from \"./chatClear.js\";\n\nexport interface IChatViewTitleActionContext {\n\tchatView: ChatViewPane;\n}\n\nexport function isChatViewTitleActionContext(\n\tobj: unknown,\n): obj is IChatViewTitleActionContext {\n\treturn obj instanceof Object && \"chatView\" in obj;\n}\n\nexport const CHAT_CATEGORY = localize2(\"chat.category\", \"Chat\");\nexport const CHAT_OPEN_ACTION_ID = \"workbench.action.chat.open\";\n\nexport interface IChatViewOpenOptions {\n\t/**\n\t * The query for quick chat.\n\t */\n\tquery: string;\n\t/**\n\t * Whether the query is partial and will await more input from the user.\n\t */\n\tisPartialQuery?: boolean;\n\t/**\n\t * Any previous chat requests and responses that should be shown in the chat view.\n\t */\n\tpreviousRequests?: IChatViewOpenRequestEntry[];\n}\n\nexport interface IChatViewOpenRequestEntry {\n\trequest: string;\n\tresponse: string;\n}\n\nclass OpenChatGlobalAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CHAT_OPEN_ACTION_ID,\n\t\t\ttitle: localize2(\"openChat\", \"Open Chat\"),\n\t\t\ticon: Codicon.commentDiscussion,\n\t\t\tf1: false,\n\t\t\tcategory: CHAT_CATEGORY,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyI,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.WinCtrl | KeyCode.KeyI,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\toverride async run(\n\t\taccessor: ServicesAccessor,\n\t\topts?: string | IChatViewOpenOptions,\n\t): Promise<void> {\n\t\topts = typeof opts === \"string\" ? { query: opts } : opts;\n\n\t\tconst chatService = accessor.get(IChatService);\n\t\tconst chatWidget = await showChatView(accessor.get(IViewsService));\n\t\tif (!chatWidget) {\n\t\t\treturn;\n\t\t}\n\t\tif (opts?.previousRequests?.length && chatWidget.viewModel) {\n\t\t\tfor (const { request, response } of opts.previousRequests) {\n\t\t\t\tchatService.addCompleteRequest(\n\t\t\t\t\tchatWidget.viewModel.sessionId,\n\t\t\t\t\trequest,\n\t\t\t\t\tundefined,\n\t\t\t\t\t0,\n\t\t\t\t\t{ message: response },\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (opts?.query) {\n\t\t\tif (opts.isPartialQuery) {\n\t\t\t\tchatWidget.setInput(opts.query);\n\t\t\t} else {\n\t\t\t\tchatWidget.acceptInput(opts.query);\n\t\t\t}\n\t\t}\n\n\t\tchatWidget.focusInput();\n\t}\n}\n\nclass ChatHistoryAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: `workbench.action.chat.history`,\n\t\t\ttitle: localize2(\"chat.history.label\", \"Show Chats...\"),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\twhen: ContextKeyExpr.equals(\"view\", CHAT_VIEW_ID),\n\t\t\t\tgroup: \"navigation\",\n\t\t\t\torder: -1,\n\t\t\t},\n\t\t\tcategory: CHAT_CATEGORY,\n\t\t\ticon: Codicon.history,\n\t\t\tf1: true,\n\t\t\tprecondition: CONTEXT_CHAT_ENABLED,\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor) {\n\t\tconst chatService = accessor.get(IChatService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tconst showPicker = () => {\n\t\t\tconst openInEditorButton: IQuickInputButton = {\n\t\t\t\ticonClass: ThemeIcon.asClassName(Codicon.file),\n\t\t\t\ttooltip: localize(\n\t\t\t\t\t\"interactiveSession.history.editor\",\n\t\t\t\t\t\"Open in Editor\",\n\t\t\t\t),\n\t\t\t};\n\t\t\tconst deleteButton: IQuickInputButton = {\n\t\t\t\ticonClass: ThemeIcon.asClassName(Codicon.x),\n\t\t\t\ttooltip: localize(\n\t\t\t\t\t\"interactiveSession.history.delete\",\n\t\t\t\t\t\"Delete\",\n\t\t\t\t),\n\t\t\t};\n\t\t\tconst renameButton: IQuickInputButton = {\n\t\t\t\ticonClass: ThemeIcon.asClassName(Codicon.pencil),\n\t\t\t\ttooltip: localize(\"chat.history.rename\", \"Rename\"),\n\t\t\t};\n\n\t\t\tinterface IChatPickerItem extends IQuickPickItem {\n\t\t\t\tchat: IChatDetail;\n\t\t\t}\n\n\t\t\tconst getPicks = () => {\n\t\t\t\tconst items = chatService.getHistory();\n\t\t\t\titems.sort(\n\t\t\t\t\t(a, b) =>\n\t\t\t\t\t\t(b.lastMessageDate ?? 0) - (a.lastMessageDate ?? 0),\n\t\t\t\t);\n\n\t\t\t\tlet lastDate: string | undefined;\n\t\t\t\tconst picks = items.flatMap(\n\t\t\t\t\t(i): [IQuickPickSeparator | undefined, IChatPickerItem] => {\n\t\t\t\t\t\tconst timeAgoStr = fromNowByDay(\n\t\t\t\t\t\t\ti.lastMessageDate,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst separator: IQuickPickSeparator | undefined =\n\t\t\t\t\t\t\ttimeAgoStr !== lastDate\n\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\t\t\t\t\t\tlabel: timeAgoStr,\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t: undefined;\n\t\t\t\t\t\tlastDate = timeAgoStr;\n\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\tseparator,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: i.title,\n\t\t\t\t\t\t\t\tdescription: i.isActive\n\t\t\t\t\t\t\t\t\t? `(${localize(\"currentChatLabel\", \"current\")})`\n\t\t\t\t\t\t\t\t\t: \"\",\n\t\t\t\t\t\t\t\tchat: i,\n\t\t\t\t\t\t\t\tbuttons: i.isActive\n\t\t\t\t\t\t\t\t\t? [renameButton]\n\t\t\t\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t\t\t\t\trenameButton,\n\t\t\t\t\t\t\t\t\t\t\topenInEditorButton,\n\t\t\t\t\t\t\t\t\t\t\tdeleteButton,\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t];\n\t\t\t\t\t},\n\t\t\t\t);\n\n\t\t\t\treturn coalesce(picks);\n\t\t\t};\n\n\t\t\tconst store = new DisposableStore();\n\t\t\tconst picker = store.add(\n\t\t\t\tquickInputService.createQuickPick<IChatPickerItem>({\n\t\t\t\t\tuseSeparators: true,\n\t\t\t\t}),\n\t\t\t);\n\t\t\tpicker.placeholder = localize(\n\t\t\t\t\"interactiveSession.history.pick\",\n\t\t\t\t\"Switch to chat\",\n\t\t\t);\n\t\t\tconst picks = getPicks();\n\t\t\tpicker.items = picks;\n\t\t\tstore.add(\n\t\t\t\tpicker.onDidTriggerItemButton(async (context) => {\n\t\t\t\t\tif (context.button === openInEditorButton) {\n\t\t\t\t\t\tconst options: IChatEditorOptions = {\n\t\t\t\t\t\t\ttarget: { sessionId: context.item.chat.sessionId },\n\t\t\t\t\t\t\tpinned: true,\n\t\t\t\t\t\t};\n\t\t\t\t\t\teditorService.openEditor(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tresource: ChatEditorInput.getNewEditorUri(),\n\t\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tACTIVE_GROUP,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tpicker.hide();\n\t\t\t\t\t} else if (context.button === deleteButton) {\n\t\t\t\t\t\tchatService.removeHistoryEntry(\n\t\t\t\t\t\t\tcontext.item.chat.sessionId,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tpicker.items = getPicks();\n\t\t\t\t\t} else if (context.button === renameButton) {\n\t\t\t\t\t\tconst title = await quickInputService.input({\n\t\t\t\t\t\t\ttitle: localize(\"newChatTitle\", \"New chat title\"),\n\t\t\t\t\t\t\tvalue: context.item.chat.title,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (title) {\n\t\t\t\t\t\t\tchatService.setChatSessionTitle(\n\t\t\t\t\t\t\t\tcontext.item.chat.sessionId,\n\t\t\t\t\t\t\t\ttitle,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// The quick input hides the picker, it gets disposed, so we kick it off from scratch\n\t\t\t\t\t\tshowPicker();\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t\tstore.add(\n\t\t\t\tpicker.onDidAccept(async () => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst item = picker.selectedItems[0];\n\t\t\t\t\t\tconst sessionId = item.chat.sessionId;\n\t\t\t\t\t\tconst view = (await viewsService.openView(\n\t\t\t\t\t\t\tCHAT_VIEW_ID,\n\t\t\t\t\t\t)) as ChatViewPane;\n\t\t\t\t\t\tview.loadSession(sessionId);\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tpicker.hide();\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t\tstore.add(picker.onDidHide(() => store.dispose()));\n\n\t\t\tpicker.show();\n\t\t};\n\t\tshowPicker();\n\t}\n}\n\nclass OpenChatEditorAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: `workbench.action.openChat`,\n\t\t\ttitle: localize2(\"interactiveSession.open\", \"Open Editor\"),\n\t\t\tf1: true,\n\t\t\tcategory: CHAT_CATEGORY,\n\t\t\tprecondition: CONTEXT_CHAT_ENABLED,\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor) {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tawait editorService.openEditor({\n\t\t\tresource: ChatEditorInput.getNewEditorUri(),\n\t\t\toptions: { pinned: true } satisfies IChatEditorOptions,\n\t\t});\n\t}\n}\n\nexport function registerChatActions() {\n\tregisterAction2(OpenChatGlobalAction);\n\tregisterAction2(ChatHistoryAction);\n\tregisterAction2(OpenChatEditorAction);\n\n\tregisterAction2(\n\t\tclass ClearChatInputHistoryAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: \"workbench.action.chat.clearInputHistory\",\n\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\"interactiveSession.clearHistory.label\",\n\t\t\t\t\t\t\"Clear Input History\",\n\t\t\t\t\t),\n\t\t\t\t\tprecondition: CONTEXT_CHAT_ENABLED,\n\t\t\t\t\tcategory: CHAT_CATEGORY,\n\t\t\t\t\tf1: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor, ...args: any[]) {\n\t\t\t\tconst historyService = accessor.get(IChatWidgetHistoryService);\n\t\t\t\thistoryService.clearHistory();\n\t\t\t}\n\t\t},\n\t);\n\n\tregisterAction2(\n\t\tclass ClearChatHistoryAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: \"workbench.action.chat.clearHistory\",\n\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\"chat.clear.label\",\n\t\t\t\t\t\t\"Clear All Workspace Chats\",\n\t\t\t\t\t),\n\t\t\t\t\tprecondition: CONTEXT_CHAT_ENABLED,\n\t\t\t\t\tcategory: CHAT_CATEGORY,\n\t\t\t\t\tf1: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor, ...args: any[]) {\n\t\t\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\t\t\tconst viewsService = accessor.get(IViewsService);\n\n\t\t\t\tconst chatService = accessor.get(IChatService);\n\t\t\t\tchatService.clearAllHistoryEntries();\n\n\t\t\t\tconst chatView = viewsService.getViewWithId(CHAT_VIEW_ID) as\n\t\t\t\t\t| ChatViewPane\n\t\t\t\t\t| undefined;\n\t\t\t\tif (chatView) {\n\t\t\t\t\tchatView.widget.clear();\n\t\t\t\t}\n\n\t\t\t\t// Clear all chat editors. Have to go this route because the chat editor may be in the background and\n\t\t\t\t// not have a ChatEditorInput.\n\t\t\t\teditorGroupsService.groups.forEach((group) => {\n\t\t\t\t\tgroup.editors.forEach((editor) => {\n\t\t\t\t\t\tif (editor instanceof ChatEditorInput) {\n\t\t\t\t\t\t\tclearChatEditor(accessor, editor);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t);\n\n\tregisterAction2(\n\t\tclass FocusChatAction extends EditorAction2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: \"chat.action.focus\",\n\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\"actions.interactiveSession.focus\",\n\t\t\t\t\t\t\"Focus Chat List\",\n\t\t\t\t\t),\n\t\t\t\t\tprecondition: ContextKeyExpr.and(CONTEXT_IN_CHAT_INPUT),\n\t\t\t\t\tcategory: CHAT_CATEGORY,\n\t\t\t\t\tkeybinding: [\n\t\t\t\t\t\t// On mac, require that the cursor is at the top of the input, to avoid stealing cmd+up to move the cursor to the top\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\twhen: CONTEXT_CHAT_INPUT_CURSOR_AT_TOP,\n\t\t\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.UpArrow,\n\t\t\t\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t// On win/linux, ctrl+up can always focus the chat list\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\twhen: ContextKeyExpr.or(\n\t\t\t\t\t\t\t\tIsWindowsContext,\n\t\t\t\t\t\t\t\tIsLinuxContext,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.UpArrow,\n\t\t\t\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\t\tCONTEXT_IN_CHAT_SESSION,\n\t\t\t\t\t\t\t\tCONTEXT_IN_QUICK_CHAT,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.DownArrow,\n\t\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t});\n\t\t\t}\n\n\t\t\trunEditorCommand(\n\t\t\t\taccessor: ServicesAccessor,\n\t\t\t\teditor: ICodeEditor,\n\t\t\t): void | Promise<void> {\n\t\t\t\tconst editorUri = editor.getModel()?.uri;\n\t\t\t\tif (editorUri) {\n\t\t\t\t\tconst widgetService = accessor.get(IChatWidgetService);\n\t\t\t\t\twidgetService\n\t\t\t\t\t\t.getWidgetByInputUri(editorUri)\n\t\t\t\t\t\t?.focusLastMessage();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t);\n\n\tregisterAction2(\n\t\tclass FocusChatInputAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: \"workbench.action.chat.focusInput\",\n\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\"interactiveSession.focusInput.label\",\n\t\t\t\t\t\t\"Focus Chat Input\",\n\t\t\t\t\t),\n\t\t\t\t\tf1: false,\n\t\t\t\t\tkeybinding: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.DownArrow,\n\t\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\t\tCONTEXT_IN_CHAT_SESSION,\n\t\t\t\t\t\t\t\tCONTEXT_IN_CHAT_INPUT.negate(),\n\t\t\t\t\t\t\t\tCONTEXT_IN_QUICK_CHAT.negate(),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\t\tCONTEXT_IN_CHAT_SESSION,\n\t\t\t\t\t\t\t\tCONTEXT_IN_CHAT_INPUT.negate(),\n\t\t\t\t\t\t\t\tCONTEXT_IN_QUICK_CHAT,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.UpArrow,\n\t\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\t\t\tconst widgetService = accessor.get(IChatWidgetService);\n\t\t\t\twidgetService.lastFocusedWidget?.focusInput();\n\t\t\t}\n\t\t},\n\t);\n}\n\nexport function stringifyItem(\n\titem: IChatRequestViewModel | IChatResponseViewModel,\n\tincludeName = true,\n): string {\n\tif (isRequestVM(item)) {\n\t\treturn (includeName ? `${item.username}: ` : \"\") + item.messageText;\n\t} else {\n\t\treturn (\n\t\t\t(includeName ? `${item.username}: ` : \"\") + item.response.toString()\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["picks"]
}
