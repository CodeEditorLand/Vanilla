import{VSBuffer as A}from"../../../../../base/common/buffer.js";import{joinPath as l}from"../../../../../base/common/resources.js";import"../../../../../editor/browser/editorExtensions.js";import{localize as I,localize2 as f}from"../../../../../nls.js";import{Action2 as p,registerAction2 as m}from"../../../../../platform/actions/common/actions.js";import{IFileDialogService as d}from"../../../../../platform/dialogs/common/dialogs.js";import{IFileService as h}from"../../../../../platform/files/common/files.js";import{CHAT_CATEGORY as g}from"./chatActions.js";import{IChatWidgetService as x}from"../chat.js";import"../chatEditor.js";import{ChatEditorInput as F}from"../chatEditorInput.js";import{CONTEXT_CHAT_ENABLED as u}from"../../common/chatContextKeys.js";import{isExportableSessionData as y}from"../../common/chatModel.js";import{IChatService as D}from"../../common/chatService.js";import{IEditorService as O}from"../../../../services/editor/common/editorService.js";const S="chat.json",v=[{name:I("chat.file.label","Chat Session"),extensions:["json"]}];function Y(){m(class extends p{constructor(){super({id:"workbench.action.chat.export",category:g,title:f("chat.export.label","Export Chat..."),precondition:u,f1:!0})}async run(t,...E){const r=t.get(x),i=t.get(d),a=t.get(h),c=t.get(D),o=r.lastFocusedWidget;if(!o||!o.viewModel)return;const s=l(await i.defaultFilePath(),S),e=await i.showSaveDialog({defaultUri:s,filters:v});if(!e)return;const n=c.getSession(o.viewModel.sessionId);if(!n)return;const C=A.fromString(JSON.stringify(n.toExport(),void 0,2));await a.writeFile(e,C)}}),m(class extends p{constructor(){super({id:"workbench.action.chat.import",title:f("chat.import.label","Import Chat..."),category:g,precondition:u,f1:!0})}async run(t,...E){const r=t.get(d),i=t.get(h),a=t.get(O),c=l(await r.defaultFilePath(),S),o=await r.showOpenDialog({defaultUri:c,canSelectFiles:!0,filters:v});if(!o)return;const s=await i.readFile(o[0]);try{const e=JSON.parse(s.value.toString());if(!y(e))throw new Error("Invalid chat session data");const n={target:{data:e},pinned:!0};await a.openEditor({resource:F.getNewEditorUri(),options:n})}catch(e){throw e}}})}export{Y as registerChatExportActions};
