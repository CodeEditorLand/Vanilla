var y=Object.defineProperty;var D=Object.getOwnPropertyDescriptor;var I=(h,a,e,t)=>{for(var i=t>1?void 0:t?D(a,e):a,l=h.length-1,o;l>=0;l--)(o=h[l])&&(i=(t?o(a,e,i):o(i))||i);return t&&i&&y(a,e,i),i},C=(h,a)=>(e,t)=>a(e,t,h);import{coalesce as u}from"../../../../../vs/base/common/arrays.js";import"../../../../../vs/base/common/cancellation.js";import{onUnexpectedExternalError as v}from"../../../../../vs/base/common/errors.js";import{Iterable as V}from"../../../../../vs/base/common/iterator.js";import{toDisposable as w}from"../../../../../vs/base/common/lifecycle.js";import{basename as P}from"../../../../../vs/base/common/path.js";import{ThemeIcon as S}from"../../../../../vs/base/common/themables.js";import{URI as q}from"../../../../../vs/base/common/uri.js";import"../../../../../vs/editor/common/languages.js";import{IChatWidgetService as x,showChatView as L}from"../../../../../vs/workbench/contrib/chat/browser/chat.js";import{ChatContextAttachments as R}from"../../../../../vs/workbench/contrib/chat/browser/contrib/chatContextAttachments.js";import{ChatDynamicVariableModel as T}from"../../../../../vs/workbench/contrib/chat/browser/contrib/chatDynamicVariables.js";import{ChatAgentLocation as p}from"../../../../../vs/workbench/contrib/chat/common/chatAgents.js";import"../../../../../vs/workbench/contrib/chat/common/chatModel.js";import{ChatRequestDynamicVariablePart as _,ChatRequestToolPart as E,ChatRequestVariablePart as A}from"../../../../../vs/workbench/contrib/chat/common/chatParserTypes.js";import"../../../../../vs/workbench/contrib/chat/common/chatService.js";import"../../../../../vs/workbench/contrib/chat/common/chatVariables.js";import{ILanguageModelToolsService as M}from"../../../../../vs/workbench/contrib/chat/common/languageModelToolsService.js";import{IViewsService as N}from"../../../../../vs/workbench/services/views/common/viewsService.js";let g=class{constructor(a,e,t){this.chatWidgetService=a;this.viewsService=e;this.toolsService=t}_resolver=new Map;async resolveVariables(a,e,t,i,l){let o=[];const d=[];a.parts.forEach((r,c)=>{if(r instanceof A){const s=this._resolver.get(r.variableName.toLowerCase());if(s){const m=[],b=n=>{if(n.kind==="reference"){m.push(n);return}i(n)};d.push(s.resolver(a.text,r.variableArg,t,b,l).then(n=>{n&&(o[c]={id:s.data.id,modelDescription:s.data.modelDescription,name:r.variableName,range:r.range,value:n,references:m,fullName:s.data.fullName,icon:s.data.icon})}).catch(v))}}else if(r instanceof _)o[c]={id:r.id,name:r.referenceText,range:r.range,value:r.data};else if(r instanceof E){const s=this.toolsService.getTool(r.toolId);s&&(o[c]={id:r.toolId,name:r.toolName,range:r.range,value:void 0,isTool:!0,icon:S.isThemeIcon(s.icon)?s.icon:void 0,fullName:s.displayName})}});const f=[];return e?.forEach((r,c)=>{const s=this._resolver.get(r.name?.toLowerCase());if(s){const m=[],b=n=>{if(n.kind==="reference"){m.push(n);return}i(n)};d.push(s.resolver(a.text,"",t,b,l).then(n=>{n&&(f[c]={id:s.data.id,modelDescription:s.data.modelDescription,name:r.name,fullName:r.fullName,range:r.range,value:n,references:m,icon:r.icon})}).catch(v))}else(r.isDynamic||r.isTool)&&(f[c]={...r})}),await Promise.allSettled(d),o=u(o),o.sort((r,c)=>c.range.start-r.range.start),o.push(...u(f)),{variables:o}}async resolveVariable(a,e,t,i,l){const o=this._resolver.get(a.toLowerCase());if(o)return await o.resolver(e,void 0,t,i,l)}hasVariable(a){return this._resolver.has(a.toLowerCase())}getVariable(a){return this._resolver.get(a.toLowerCase())?.data}getVariables(a){const e=V.map(this._resolver.values(),t=>t.data);return V.filter(e,t=>a!==p.Editor||!new Set(["selection","editor"]).has(t.name))}getDynamicVariables(a){const e=this.chatWidgetService.getWidgetBySessionId(a);if(!e||!e.viewModel||!e.supportsFileReferences)return[];const t=e.getContrib(T.ID);return t?t.variables:[]}registerVariable(a,e){const t=a.name.toLowerCase();if(this._resolver.has(t))throw new Error(`A chat variable with the name '${a.name}' already exists.`);return this._resolver.set(t,{data:a,resolver:e}),w(()=>{this._resolver.delete(t)})}async attachContext(a,e,t){if(t!==p.Panel)return;const i=await L(this.viewsService);if(!i||!i.viewModel)return;const l=a.toLowerCase();if(l==="file"&&typeof e!="string"){const d=q.isUri(e)?e:e.uri,f="range"in e?e.range:void 0;i.getContrib(R.ID)?.setContext(!1,{value:e,id:d.toString()+(f?.toString()??""),name:P(d.path),isFile:!0,isDynamic:!0});return}const o=this._resolver.get(l);o&&i.getContrib(R.ID)?.setContext(!1,{...o.data,value:e})}};g=I([C(0,x),C(1,N),C(2,M)],g);export{g as ChatVariablesService};
