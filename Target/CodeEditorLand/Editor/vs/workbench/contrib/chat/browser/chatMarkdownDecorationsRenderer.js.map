{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/chatMarkdownDecorationsRenderer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport { Button } from \"../../../../base/browser/ui/button/button.js\";\nimport { getDefaultHoverDelegate } from \"../../../../base/browser/ui/hover/hoverDelegateFactory.js\";\nimport { toErrorMessage } from \"../../../../base/common/errorMessage.js\";\nimport { Lazy } from \"../../../../base/common/lazy.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { revive } from \"../../../../base/common/marshalling.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { ILabelService } from \"../../../../platform/label/common/label.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { asCssVariable } from \"../../../../platform/theme/common/colorUtils.js\";\nimport { type ContentRefData, contentRefUrl } from \"../common/annotations.js\";\nimport {\n\ttype IChatAgentCommand,\n\ttype IChatAgentData,\n\tIChatAgentNameService,\n\tIChatAgentService,\n\tgetFullyQualifiedId,\n} from \"../common/chatAgents.js\";\nimport {\n\tchatSlashCommandBackground,\n\tchatSlashCommandForeground,\n} from \"../common/chatColors.js\";\nimport {\n\tChatRequestAgentPart,\n\tChatRequestAgentSubcommandPart,\n\tChatRequestDynamicVariablePart,\n\tChatRequestSlashCommandPart,\n\tChatRequestTextPart,\n\tChatRequestToolPart,\n\tChatRequestVariablePart,\n\ttype IParsedChatRequest,\n\ttype IParsedChatRequestPart,\n\tchatAgentLeader,\n\tchatSubcommandLeader,\n} from \"../common/chatParserTypes.js\";\nimport { IChatService } from \"../common/chatService.js\";\nimport { IChatVariablesService } from \"../common/chatVariables.js\";\nimport { ILanguageModelToolsService } from \"../common/languageModelToolsService.js\";\nimport { IChatWidgetService } from \"./chat.js\";\nimport { ChatAgentHover, getChatAgentHoverOptions } from \"./chatAgentHover.js\";\nimport { InlineAnchorWidget } from \"./chatInlineAnchorWidget.js\";\nimport \"./media/chatInlineAnchorWidget.css\";\n\n/** For rendering slash commands, variables */\nconst decorationRefUrl = `http://_vscodedecoration_`;\n\n/** For rendering agent decorations with hover */\nconst agentRefUrl = `http://_chatagent_`;\n\n/** For rendering agent decorations with hover */\nconst agentSlashRefUrl = `http://_chatslash_`;\n\nexport function agentToMarkdown(\n\tagent: IChatAgentData,\n\tisClickable: boolean,\n\taccessor: ServicesAccessor,\n): string {\n\tconst chatAgentNameService = accessor.get(IChatAgentNameService);\n\tconst chatAgentService = accessor.get(IChatAgentService);\n\n\tconst isAllowed = chatAgentNameService.getAgentNameRestriction(agent);\n\tlet name = `${isAllowed ? agent.name : getFullyQualifiedId(agent)}`;\n\tconst isDupe = isAllowed && chatAgentService.agentHasDupeName(agent.id);\n\tif (isDupe) {\n\t\tname += ` (${agent.publisherDisplayName})`;\n\t}\n\n\tconst args: IAgentWidgetArgs = { agentId: agent.id, name, isClickable };\n\treturn `[${agent.name}](${agentRefUrl}?${encodeURIComponent(JSON.stringify(args))})`;\n}\n\ninterface IAgentWidgetArgs {\n\tagentId: string;\n\tname: string;\n\tisClickable?: boolean;\n}\n\nexport function agentSlashCommandToMarkdown(\n\tagent: IChatAgentData,\n\tcommand: IChatAgentCommand,\n): string {\n\tconst text = `${chatSubcommandLeader}${command.name}`;\n\tconst args: ISlashCommandWidgetArgs = {\n\t\tagentId: agent.id,\n\t\tcommand: command.name,\n\t};\n\treturn `[${text}](${agentSlashRefUrl}?${encodeURIComponent(JSON.stringify(args))})`;\n}\n\ninterface ISlashCommandWidgetArgs {\n\tagentId: string;\n\tcommand: string;\n}\n\ninterface IDecorationWidgetArgs {\n\ttitle?: string;\n}\n\nexport class ChatMarkdownDecorationsRenderer extends Disposable {\n\tconstructor(\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IChatAgentService private readonly chatAgentService: IChatAgentService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t\t@IChatService private readonly chatService: IChatService,\n\t\t@IChatWidgetService private readonly chatWidgetService: IChatWidgetService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IChatVariablesService private readonly chatVariablesService: IChatVariablesService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@ILanguageModelToolsService private readonly toolsService: ILanguageModelToolsService,\n\t) {\n\t\tsuper();\n\t}\n\n\tconvertParsedRequestToMarkdown(parsedRequest: IParsedChatRequest): string {\n\t\tlet result = \"\";\n\t\tfor (const part of parsedRequest.parts) {\n\t\t\tif (part instanceof ChatRequestTextPart) {\n\t\t\t\tresult += part.text;\n\t\t\t} else if (part instanceof ChatRequestAgentPart) {\n\t\t\t\tresult += this.instantiationService.invokeFunction((accessor) =>\n\t\t\t\t\tagentToMarkdown(part.agent, false, accessor),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresult += this.genericDecorationToMarkdown(part);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate genericDecorationToMarkdown(part: IParsedChatRequestPart): string {\n\t\tconst uri =\n\t\t\tpart instanceof ChatRequestDynamicVariablePart &&\n\t\t\tpart.data instanceof URI\n\t\t\t\t? part.data\n\t\t\t\t: undefined;\n\t\tconst title = uri\n\t\t\t? this.labelService.getUriLabel(uri, { relative: true })\n\t\t\t: part instanceof ChatRequestSlashCommandPart\n\t\t\t\t? part.slashCommand.detail\n\t\t\t\t: part instanceof ChatRequestAgentSubcommandPart\n\t\t\t\t\t? part.command.description\n\t\t\t\t\t: part instanceof ChatRequestVariablePart\n\t\t\t\t\t\t? this.chatVariablesService.getVariable(\n\t\t\t\t\t\t\t\tpart.variableName,\n\t\t\t\t\t\t\t)?.description\n\t\t\t\t\t\t: part instanceof ChatRequestToolPart\n\t\t\t\t\t\t\t? this.toolsService.getTool(part.toolId)\n\t\t\t\t\t\t\t\t\t?.userDescription\n\t\t\t\t\t\t\t: \"\";\n\n\t\tconst args: IDecorationWidgetArgs = { title };\n\t\tconst text = part.text;\n\t\treturn `[${text}](${decorationRefUrl}?${encodeURIComponent(JSON.stringify(args))})`;\n\t}\n\n\twalkTreeAndAnnotateReferenceLinks(element: HTMLElement): IDisposable {\n\t\tconst store = new DisposableStore();\n\t\telement.querySelectorAll(\"a\").forEach((a) => {\n\t\t\tconst href = a.getAttribute(\"data-href\");\n\t\t\tif (href) {\n\t\t\t\tif (href.startsWith(agentRefUrl)) {\n\t\t\t\t\tlet args: IAgentWidgetArgs | undefined;\n\t\t\t\t\ttry {\n\t\t\t\t\t\targs = JSON.parse(\n\t\t\t\t\t\t\tdecodeURIComponent(\n\t\t\t\t\t\t\t\thref.slice(agentRefUrl.length + 1),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthis.logService.error(\n\t\t\t\t\t\t\t\"Invalid chat widget render data JSON\",\n\t\t\t\t\t\t\ttoErrorMessage(e),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (args) {\n\t\t\t\t\t\ta.parentElement!.replaceChild(\n\t\t\t\t\t\t\tthis.renderAgentWidget(args, store),\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (href.startsWith(agentSlashRefUrl)) {\n\t\t\t\t\tlet args: ISlashCommandWidgetArgs | undefined;\n\t\t\t\t\ttry {\n\t\t\t\t\t\targs = JSON.parse(\n\t\t\t\t\t\t\tdecodeURIComponent(\n\t\t\t\t\t\t\t\thref.slice(agentRefUrl.length + 1),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthis.logService.error(\n\t\t\t\t\t\t\t\"Invalid chat slash command render data JSON\",\n\t\t\t\t\t\t\ttoErrorMessage(e),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (args) {\n\t\t\t\t\t\ta.parentElement!.replaceChild(\n\t\t\t\t\t\t\tthis.renderSlashCommandWidget(\n\t\t\t\t\t\t\t\ta.textContent!,\n\t\t\t\t\t\t\t\targs,\n\t\t\t\t\t\t\t\tstore,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (href.startsWith(decorationRefUrl)) {\n\t\t\t\t\tlet args: IDecorationWidgetArgs | undefined;\n\t\t\t\t\ttry {\n\t\t\t\t\t\targs = JSON.parse(\n\t\t\t\t\t\t\tdecodeURIComponent(\n\t\t\t\t\t\t\t\thref.slice(decorationRefUrl.length + 1),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t} catch (e) {}\n\n\t\t\t\t\ta.parentElement!.replaceChild(\n\t\t\t\t\t\tthis.renderResourceWidget(a.textContent!, args, store),\n\t\t\t\t\t\ta,\n\t\t\t\t\t);\n\t\t\t\t} else if (href.startsWith(contentRefUrl)) {\n\t\t\t\t\tthis.renderFileWidget(href, a, store);\n\t\t\t\t} else if (href.startsWith(\"command:\")) {\n\t\t\t\t\tthis.injectKeybindingHint(a, href, this.keybindingService);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn store;\n\t}\n\n\tprivate renderAgentWidget(\n\t\targs: IAgentWidgetArgs,\n\t\tstore: DisposableStore,\n\t): HTMLElement {\n\t\tconst nameWithLeader = `${chatAgentLeader}${args.name}`;\n\t\tlet container: HTMLElement;\n\t\tif (args.isClickable) {\n\t\t\tcontainer = dom.$(\"span.chat-agent-widget\");\n\t\t\tconst button = store.add(\n\t\t\t\tnew Button(container, {\n\t\t\t\t\tbuttonBackground: asCssVariable(chatSlashCommandBackground),\n\t\t\t\t\tbuttonForeground: asCssVariable(chatSlashCommandForeground),\n\t\t\t\t\tbuttonHoverBackground: undefined,\n\t\t\t\t}),\n\t\t\t);\n\t\t\tbutton.label = nameWithLeader;\n\t\t\tstore.add(\n\t\t\t\tbutton.onDidClick(() => {\n\t\t\t\t\tconst agent = this.chatAgentService.getAgent(args.agentId);\n\t\t\t\t\tconst widget = this.chatWidgetService.lastFocusedWidget;\n\t\t\t\t\tif (!widget || !agent) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.chatService.sendRequest(\n\t\t\t\t\t\twidget.viewModel!.sessionId,\n\t\t\t\t\t\tagent.metadata.sampleRequest ?? \"\",\n\t\t\t\t\t\t{ location: widget.location, agentId: agent.id },\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t);\n\t\t} else {\n\t\t\tcontainer = this.renderResourceWidget(\n\t\t\t\tnameWithLeader,\n\t\t\t\tundefined,\n\t\t\t\tstore,\n\t\t\t);\n\t\t}\n\n\t\tconst agent = this.chatAgentService.getAgent(args.agentId);\n\t\tconst hover: Lazy<ChatAgentHover> = new Lazy(() =>\n\t\t\tstore.add(this.instantiationService.createInstance(ChatAgentHover)),\n\t\t);\n\t\tstore.add(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"element\"),\n\t\t\t\tcontainer,\n\t\t\t\t() => {\n\t\t\t\t\thover.value.setAgent(args.agentId);\n\t\t\t\t\treturn hover.value.domNode;\n\t\t\t\t},\n\t\t\t\tagent &&\n\t\t\t\t\tgetChatAgentHoverOptions(() => agent, this.commandService),\n\t\t\t),\n\t\t);\n\t\treturn container;\n\t}\n\n\tprivate renderSlashCommandWidget(\n\t\tname: string,\n\t\targs: ISlashCommandWidgetArgs,\n\t\tstore: DisposableStore,\n\t): HTMLElement {\n\t\tconst container = dom.$(\"span.chat-agent-widget.chat-command-widget\");\n\t\tconst agent = this.chatAgentService.getAgent(args.agentId);\n\t\tconst button = store.add(\n\t\t\tnew Button(container, {\n\t\t\t\tbuttonBackground: asCssVariable(chatSlashCommandBackground),\n\t\t\t\tbuttonForeground: asCssVariable(chatSlashCommandForeground),\n\t\t\t\tbuttonHoverBackground: undefined,\n\t\t\t}),\n\t\t);\n\t\tbutton.label = name;\n\t\tstore.add(\n\t\t\tbutton.onDidClick(() => {\n\t\t\t\tconst widget = this.chatWidgetService.lastFocusedWidget;\n\t\t\t\tif (!widget || !agent) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst command = agent.slashCommands.find(\n\t\t\t\t\t(c) => c.name === args.command,\n\t\t\t\t);\n\t\t\t\tthis.chatService.sendRequest(\n\t\t\t\t\twidget.viewModel!.sessionId,\n\t\t\t\t\tcommand?.sampleRequest ?? \"\",\n\t\t\t\t\t{\n\t\t\t\t\t\tlocation: widget.location,\n\t\t\t\t\t\tagentId: agent.id,\n\t\t\t\t\t\tslashCommand: args.command,\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\treturn container;\n\t}\n\n\tprivate renderFileWidget(\n\t\thref: string,\n\t\ta: HTMLAnchorElement,\n\t\tstore: DisposableStore,\n\t): void {\n\t\t// TODO this can be a nicer FileLabel widget with an icon. Do a simple link for now.\n\t\tconst fullUri = URI.parse(href);\n\t\tlet data: ContentRefData;\n\t\ttry {\n\t\t\tdata = revive(JSON.parse(fullUri.fragment));\n\t\t} catch (err) {\n\t\t\tthis.logService.error(\n\t\t\t\t\"Invalid chat widget render data JSON\",\n\t\t\t\ttoErrorMessage(err),\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tif (data.kind !== \"symbol\" && !URI.isUri(data.uri)) {\n\t\t\tthis.logService.error(\n\t\t\t\t`Invalid chat widget render data: ${fullUri.fragment}`,\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tstore.add(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tInlineAnchorWidget,\n\t\t\t\ta,\n\t\t\t\tdata,\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate renderResourceWidget(\n\t\tname: string,\n\t\targs: IDecorationWidgetArgs | undefined,\n\t\tstore: DisposableStore,\n\t): HTMLElement {\n\t\tconst container = dom.$(\"span.chat-resource-widget\");\n\t\tconst alias = dom.$(\"span\", undefined, name);\n\t\tif (args?.title) {\n\t\t\tstore.add(\n\t\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\t\tgetDefaultHoverDelegate(\"element\"),\n\t\t\t\t\tcontainer,\n\t\t\t\t\targs.title,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tcontainer.appendChild(alias);\n\t\treturn container;\n\t}\n\n\tprivate injectKeybindingHint(\n\t\ta: HTMLAnchorElement,\n\t\thref: string,\n\t\tkeybindingService: IKeybindingService,\n\t): void {\n\t\tconst command = href.match(/command:([^)]+)/)?.[1];\n\t\tif (command) {\n\t\t\tconst kb = keybindingService.lookupKeybinding(command);\n\t\t\tif (kb) {\n\t\t\t\tconst keybinding = kb.getLabel();\n\t\t\t\tif (keybinding) {\n\t\t\t\t\ta.textContent = `${a.textContent} (${keybinding})`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["agent"]
}
