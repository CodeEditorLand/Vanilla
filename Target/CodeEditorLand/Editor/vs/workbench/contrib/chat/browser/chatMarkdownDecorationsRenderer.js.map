{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/chatMarkdownDecorationsRenderer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Button } from '../../../../base/browser/ui/button/button.js';\nimport { getDefaultHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegateFactory.js';\nimport { toErrorMessage } from '../../../../base/common/errorMessage.js';\nimport { Lazy } from '../../../../base/common/lazy.js';\nimport { Disposable, DisposableStore, IDisposable } from '../../../../base/common/lifecycle.js';\nimport { revive } from '../../../../base/common/marshalling.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { asCssVariable } from '../../../../platform/theme/common/colorUtils.js';\nimport { ContentRefData, contentRefUrl } from '../common/annotations.js';\nimport { getFullyQualifiedId, IChatAgentCommand, IChatAgentData, IChatAgentNameService, IChatAgentService } from '../common/chatAgents.js';\nimport { chatSlashCommandBackground, chatSlashCommandForeground } from '../common/chatColors.js';\nimport { chatAgentLeader, ChatRequestAgentPart, ChatRequestAgentSubcommandPart, ChatRequestDynamicVariablePart, ChatRequestSlashCommandPart, ChatRequestTextPart, ChatRequestToolPart, ChatRequestVariablePart, chatSubcommandLeader, IParsedChatRequest, IParsedChatRequestPart } from '../common/chatParserTypes.js';\nimport { IChatService } from '../common/chatService.js';\nimport { IChatVariablesService } from '../common/chatVariables.js';\nimport { ILanguageModelToolsService } from '../common/languageModelToolsService.js';\nimport { IChatWidgetService } from './chat.js';\nimport { ChatAgentHover, getChatAgentHoverOptions } from './chatAgentHover.js';\nimport { InlineAnchorWidget } from './chatInlineAnchorWidget.js';\nimport './media/chatInlineAnchorWidget.css';\n\n/** For rendering slash commands, variables */\nconst decorationRefUrl = `http://_vscodedecoration_`;\n\n/** For rendering agent decorations with hover */\nconst agentRefUrl = `http://_chatagent_`;\n\n/** For rendering agent decorations with hover */\nconst agentSlashRefUrl = `http://_chatslash_`;\n\nexport function agentToMarkdown(agent: IChatAgentData, isClickable: boolean, accessor: ServicesAccessor): string {\n\tconst chatAgentNameService = accessor.get(IChatAgentNameService);\n\tconst chatAgentService = accessor.get(IChatAgentService);\n\n\tconst isAllowed = chatAgentNameService.getAgentNameRestriction(agent);\n\tlet name = `${isAllowed ? agent.name : getFullyQualifiedId(agent)}`;\n\tconst isDupe = isAllowed && chatAgentService.agentHasDupeName(agent.id);\n\tif (isDupe) {\n\t\tname += ` (${agent.publisherDisplayName})`;\n\t}\n\n\tconst args: IAgentWidgetArgs = { agentId: agent.id, name, isClickable };\n\treturn `[${agent.name}](${agentRefUrl}?${encodeURIComponent(JSON.stringify(args))})`;\n}\n\ninterface IAgentWidgetArgs {\n\tagentId: string;\n\tname: string;\n\tisClickable?: boolean;\n}\n\nexport function agentSlashCommandToMarkdown(agent: IChatAgentData, command: IChatAgentCommand): string {\n\tconst text = `${chatSubcommandLeader}${command.name}`;\n\tconst args: ISlashCommandWidgetArgs = { agentId: agent.id, command: command.name };\n\treturn `[${text}](${agentSlashRefUrl}?${encodeURIComponent(JSON.stringify(args))})`;\n}\n\ninterface ISlashCommandWidgetArgs {\n\tagentId: string;\n\tcommand: string;\n}\n\ninterface IDecorationWidgetArgs {\n\ttitle?: string;\n}\n\nexport class ChatMarkdownDecorationsRenderer extends Disposable {\n\n\tconstructor(\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IChatAgentService private readonly chatAgentService: IChatAgentService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t\t@IChatService private readonly chatService: IChatService,\n\t\t@IChatWidgetService private readonly chatWidgetService: IChatWidgetService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IChatVariablesService private readonly chatVariablesService: IChatVariablesService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@ILanguageModelToolsService private readonly toolsService: ILanguageModelToolsService,\n\t) {\n\t\tsuper();\n\t}\n\n\tconvertParsedRequestToMarkdown(parsedRequest: IParsedChatRequest): string {\n\t\tlet result = '';\n\t\tfor (const part of parsedRequest.parts) {\n\t\t\tif (part instanceof ChatRequestTextPart) {\n\t\t\t\tresult += part.text;\n\t\t\t} else if (part instanceof ChatRequestAgentPart) {\n\t\t\t\tresult += this.instantiationService.invokeFunction(accessor => agentToMarkdown(part.agent, false, accessor));\n\t\t\t} else {\n\t\t\t\tresult += this.genericDecorationToMarkdown(part);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate genericDecorationToMarkdown(part: IParsedChatRequestPart): string {\n\t\tconst uri = part instanceof ChatRequestDynamicVariablePart && part.data instanceof URI ?\n\t\t\tpart.data :\n\t\t\tundefined;\n\t\tconst title = uri ? this.labelService.getUriLabel(uri, { relative: true }) :\n\t\t\tpart instanceof ChatRequestSlashCommandPart ? part.slashCommand.detail :\n\t\t\t\tpart instanceof ChatRequestAgentSubcommandPart ? part.command.description :\n\t\t\t\t\tpart instanceof ChatRequestVariablePart ? (this.chatVariablesService.getVariable(part.variableName)?.description) :\n\t\t\t\t\t\tpart instanceof ChatRequestToolPart ? (this.toolsService.getTool(part.toolId)?.userDescription) :\n\t\t\t\t\t\t\t'';\n\n\t\tconst args: IDecorationWidgetArgs = { title };\n\t\tconst text = part.text;\n\t\treturn `[${text}](${decorationRefUrl}?${encodeURIComponent(JSON.stringify(args))})`;\n\t}\n\n\twalkTreeAndAnnotateReferenceLinks(element: HTMLElement): IDisposable {\n\t\tconst store = new DisposableStore();\n\t\telement.querySelectorAll('a').forEach(a => {\n\t\t\tconst href = a.getAttribute('data-href');\n\t\t\tif (href) {\n\t\t\t\tif (href.startsWith(agentRefUrl)) {\n\t\t\t\t\tlet args: IAgentWidgetArgs | undefined;\n\t\t\t\t\ttry {\n\t\t\t\t\t\targs = JSON.parse(decodeURIComponent(href.slice(agentRefUrl.length + 1)));\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthis.logService.error('Invalid chat widget render data JSON', toErrorMessage(e));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (args) {\n\t\t\t\t\t\ta.parentElement!.replaceChild(\n\t\t\t\t\t\t\tthis.renderAgentWidget(args, store),\n\t\t\t\t\t\t\ta);\n\t\t\t\t\t}\n\t\t\t\t} else if (href.startsWith(agentSlashRefUrl)) {\n\t\t\t\t\tlet args: ISlashCommandWidgetArgs | undefined;\n\t\t\t\t\ttry {\n\t\t\t\t\t\targs = JSON.parse(decodeURIComponent(href.slice(agentRefUrl.length + 1)));\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthis.logService.error('Invalid chat slash command render data JSON', toErrorMessage(e));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (args) {\n\t\t\t\t\t\ta.parentElement!.replaceChild(\n\t\t\t\t\t\t\tthis.renderSlashCommandWidget(a.textContent!, args, store),\n\t\t\t\t\t\t\ta);\n\t\t\t\t\t}\n\t\t\t\t} else if (href.startsWith(decorationRefUrl)) {\n\t\t\t\t\tlet args: IDecorationWidgetArgs | undefined;\n\t\t\t\t\ttry {\n\t\t\t\t\t\targs = JSON.parse(decodeURIComponent(href.slice(decorationRefUrl.length + 1)));\n\t\t\t\t\t} catch (e) { }\n\n\t\t\t\t\ta.parentElement!.replaceChild(\n\t\t\t\t\t\tthis.renderResourceWidget(a.textContent!, args, store),\n\t\t\t\t\t\ta);\n\t\t\t\t} else if (href.startsWith(contentRefUrl)) {\n\t\t\t\t\tthis.renderFileWidget(href, a, store);\n\t\t\t\t} else if (href.startsWith('command:')) {\n\t\t\t\t\tthis.injectKeybindingHint(a, href, this.keybindingService);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn store;\n\t}\n\n\tprivate renderAgentWidget(args: IAgentWidgetArgs, store: DisposableStore): HTMLElement {\n\t\tconst nameWithLeader = `${chatAgentLeader}${args.name}`;\n\t\tlet container: HTMLElement;\n\t\tif (args.isClickable) {\n\t\t\tcontainer = dom.$('span.chat-agent-widget');\n\t\t\tconst button = store.add(new Button(container, {\n\t\t\t\tbuttonBackground: asCssVariable(chatSlashCommandBackground),\n\t\t\t\tbuttonForeground: asCssVariable(chatSlashCommandForeground),\n\t\t\t\tbuttonHoverBackground: undefined\n\t\t\t}));\n\t\t\tbutton.label = nameWithLeader;\n\t\t\tstore.add(button.onDidClick(() => {\n\t\t\t\tconst agent = this.chatAgentService.getAgent(args.agentId);\n\t\t\t\tconst widget = this.chatWidgetService.lastFocusedWidget;\n\t\t\t\tif (!widget || !agent) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.chatService.sendRequest(widget.viewModel!.sessionId, agent.metadata.sampleRequest ?? '', { location: widget.location, agentId: agent.id });\n\t\t\t}));\n\t\t} else {\n\t\t\tcontainer = this.renderResourceWidget(nameWithLeader, undefined, store);\n\t\t}\n\n\t\tconst agent = this.chatAgentService.getAgent(args.agentId);\n\t\tconst hover: Lazy<ChatAgentHover> = new Lazy(() => store.add(this.instantiationService.createInstance(ChatAgentHover)));\n\t\tstore.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('element'), container, () => {\n\t\t\thover.value.setAgent(args.agentId);\n\t\t\treturn hover.value.domNode;\n\t\t}, agent && getChatAgentHoverOptions(() => agent, this.commandService)));\n\t\treturn container;\n\t}\n\n\tprivate renderSlashCommandWidget(name: string, args: ISlashCommandWidgetArgs, store: DisposableStore): HTMLElement {\n\t\tconst container = dom.$('span.chat-agent-widget.chat-command-widget');\n\t\tconst agent = this.chatAgentService.getAgent(args.agentId);\n\t\tconst button = store.add(new Button(container, {\n\t\t\tbuttonBackground: asCssVariable(chatSlashCommandBackground),\n\t\t\tbuttonForeground: asCssVariable(chatSlashCommandForeground),\n\t\t\tbuttonHoverBackground: undefined\n\t\t}));\n\t\tbutton.label = name;\n\t\tstore.add(button.onDidClick(() => {\n\t\t\tconst widget = this.chatWidgetService.lastFocusedWidget;\n\t\t\tif (!widget || !agent) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst command = agent.slashCommands.find(c => c.name === args.command);\n\t\t\tthis.chatService.sendRequest(widget.viewModel!.sessionId, command?.sampleRequest ?? '', { location: widget.location, agentId: agent.id, slashCommand: args.command });\n\t\t}));\n\n\t\treturn container;\n\t}\n\n\tprivate renderFileWidget(href: string, a: HTMLAnchorElement, store: DisposableStore): void {\n\t\t// TODO this can be a nicer FileLabel widget with an icon. Do a simple link for now.\n\t\tconst fullUri = URI.parse(href);\n\t\tlet data: ContentRefData;\n\t\ttry {\n\t\t\tdata = revive(JSON.parse(fullUri.fragment));\n\t\t} catch (err) {\n\t\t\tthis.logService.error('Invalid chat widget render data JSON', toErrorMessage(err));\n\t\t\treturn;\n\t\t}\n\n\t\tif (data.kind !== 'symbol' && !URI.isUri(data.uri)) {\n\t\t\tthis.logService.error(`Invalid chat widget render data: ${fullUri.fragment}`);\n\t\t\treturn;\n\t\t}\n\n\t\tstore.add(this.instantiationService.createInstance(InlineAnchorWidget, a, data));\n\t}\n\n\tprivate renderResourceWidget(name: string, args: IDecorationWidgetArgs | undefined, store: DisposableStore): HTMLElement {\n\t\tconst container = dom.$('span.chat-resource-widget');\n\t\tconst alias = dom.$('span', undefined, name);\n\t\tif (args?.title) {\n\t\t\tstore.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('element'), container, args.title));\n\t\t}\n\n\t\tcontainer.appendChild(alias);\n\t\treturn container;\n\t}\n\n\n\tprivate injectKeybindingHint(a: HTMLAnchorElement, href: string, keybindingService: IKeybindingService): void {\n\t\tconst command = href.match(/command:([^\\)]+)/)?.[1];\n\t\tif (command) {\n\t\t\tconst kb = keybindingService.lookupKeybinding(command);\n\t\t\tif (kb) {\n\t\t\t\tconst keybinding = kb.getLabel();\n\t\t\t\tif (keybinding) {\n\t\t\t\t\ta.textContent = `${a.textContent} (${keybinding})`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["agent"]
}
