import{Codicon as s}from"../../../../../base/common/codicons.js";import{KeyCode as l,KeyMod as m}from"../../../../../base/common/keyCodes.js";import"../../../../../editor/browser/editorExtensions.js";import{localize2 as C}from"../../../../../nls.js";import{AccessibilitySignal as A,IAccessibilitySignalService as d}from"../../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js";import{Action2 as p,MenuId as r,registerAction2 as h}from"../../../../../platform/actions/common/actions.js";import{ContextKeyExpr as y}from"../../../../../platform/contextkey/common/contextkey.js";import{KeybindingWeight as S}from"../../../../../platform/keybinding/common/keybindingsRegistry.js";import{ActiveEditorContext as E}from"../../../../common/contextkeys.js";import{IViewsService as v}from"../../../../services/views/common/viewsService.js";import{CONTEXT_CHAT_ENABLED as w,CONTEXT_IN_CHAT_SESSION as I}from"../../common/chatContextKeys.js";import{CHAT_VIEW_ID as g,IChatWidgetService as T}from"../chat.js";import{ChatEditorInput as b}from"../chatEditorInput.js";import"../chatViewPane.js";import{CHAT_CATEGORY as _,isChatViewTitleActionContext as N}from"./chatActions.js";import{clearChatEditor as V}from"./chatClear.js";const x="workbench.action.chat.newChat";function Z(){h(class extends p{constructor(){super({id:"workbench.action.chatEditor.newChat",title:C("chat.newChat.label","New Chat"),icon:s.plus,f1:!1,precondition:w,menu:[{id:r.EditorTitle,group:"navigation",order:0,when:E.isEqualTo(b.EditorID)}]})}async run(t,...c){n(t.get(d)),await V(t)}}),h(class extends p{constructor(){super({id:x,title:C("chat.newChat.label","New Chat"),category:_,icon:s.plus,precondition:w,f1:!0,keybinding:{weight:S.WorkbenchContrib,primary:m.CtrlCmd|l.KeyL,mac:{primary:m.WinCtrl|l.KeyL},when:I},menu:[{id:r.ChatContext,group:"z_clear"},{id:r.ViewTitle,when:y.equals("view",g),group:"navigation",order:-1}]})}async run(t,...c){const o=c[0],a=t.get(d);if(N(o))n(a),o.chatView.widget.clear(),o.chatView.widget.focusInput();else{const u=t.get(T),f=t.get(v);let e=u.lastFocusedWidget;e||(e=(await f.openView(g)).widget),n(a),e.clear(),e.focusInput()}}})}function n(i){i.playSignal(A.clear)}export{x as ACTION_ID_NEW_CHAT,Z as registerNewChatActions};
