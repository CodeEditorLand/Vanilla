{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/chatDragAndDrop.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DataTransfers } from \"../../../../base/browser/dnd.js\";\nimport { $, DragAndDropObserver } from \"../../../../base/browser/dom.js\";\nimport { renderLabelWithIcons } from \"../../../../base/browser/ui/iconLabel/iconLabels.js\";\nimport { coalesce } from \"../../../../base/common/arrays.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { basename } from \"../../../../base/common/resources.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\ttype IDraggedResourceEditorInput,\n\tcontainsDragType,\n\textractEditorsDropData,\n} from \"../../../../platform/dnd/browser/dnd.js\";\nimport {\n\tIThemeService,\n\tThemable,\n} from \"../../../../platform/theme/common/themeService.js\";\nimport type { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport type { IChatRequestVariableEntry } from \"../common/chatModel.js\";\nimport type { ChatInputPart } from \"./chatInputPart.js\";\nimport type { IChatWidgetStyles } from \"./chatWidget.js\";\n\nenum ChatDragAndDropType {\n\tFILE = 0,\n}\n\nexport class ChatDragAndDrop extends Themable {\n\tprivate readonly overlay: HTMLElement;\n\tprivate overlayText?: HTMLElement;\n\tprivate overlayTextBackground = \"\";\n\n\tconstructor(\n\t\tprivate readonly contianer: HTMLElement,\n\t\tprivate readonly inputPart: ChatInputPart,\n\t\tprivate readonly styles: IChatWidgetStyles,\n\t\t@IThemeService themeService: IThemeService,\n\t) {\n\t\tsuper(themeService);\n\n\t\t// If the mouse enters and leaves the overlay quickly,\n\t\t// the overlay may stick around due to too many drag enter events\n\t\t// Make sure the mouse enters only once\n\t\tlet mouseInside = false;\n\t\tthis._register(\n\t\t\tnew DragAndDropObserver(this.contianer, {\n\t\t\t\tonDragEnter: (e) => {\n\t\t\t\t\tif (!mouseInside) {\n\t\t\t\t\t\tmouseInside = true;\n\t\t\t\t\t\tthis.onDragEnter(e);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonDragOver: (e) => {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t},\n\t\t\t\tonDragLeave: (e) => {\n\t\t\t\t\tthis.onDragLeave(e);\n\t\t\t\t\tmouseInside = false;\n\t\t\t\t},\n\t\t\t\tonDrop: (e) => {\n\t\t\t\t\tthis.onDrop(e);\n\t\t\t\t\tmouseInside = false;\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\n\t\tthis.overlay = document.createElement(\"div\");\n\t\tthis.overlay.classList.add(\"chat-dnd-overlay\");\n\t\tthis.contianer.appendChild(this.overlay);\n\n\t\tthis.updateStyles();\n\t}\n\n\tprivate onDragEnter(e: DragEvent): void {\n\t\tconst dropType = this.getActiveDropType(e);\n\t\tthis.updateDropFeedback(e, dropType);\n\t}\n\n\tprivate onDragLeave(e: DragEvent): void {\n\t\tthis.updateDropFeedback(e, undefined);\n\t}\n\n\tprivate onDrop(e: DragEvent): void {\n\t\tthis.updateDropFeedback(e, undefined);\n\n\t\tconst contexts = this.getAttachContext(e);\n\t\tif (contexts.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure to attach only new contexts\n\t\tconst currentContextIds = new Set(\n\t\t\tArray.from(this.inputPart.attachedContext).map(\n\t\t\t\t(context) => context.id,\n\t\t\t),\n\t\t);\n\t\tconst filteredContext = [];\n\t\tfor (const context of contexts) {\n\t\t\tif (!currentContextIds.has(context.id)) {\n\t\t\t\tcurrentContextIds.add(context.id);\n\t\t\t\tfilteredContext.push(context);\n\t\t\t}\n\t\t}\n\n\t\tthis.inputPart.attachContext(false, ...filteredContext);\n\t}\n\n\tprivate updateDropFeedback(\n\t\te: DragEvent,\n\t\tdropType: ChatDragAndDropType | undefined,\n\t): void {\n\t\te.stopPropagation();\n\n\t\tconst showOverlay = dropType !== undefined;\n\t\tif (e.dataTransfer) {\n\t\t\te.dataTransfer.dropEffect = showOverlay ? \"copy\" : \"none\";\n\t\t}\n\n\t\tthis.setOverlay(dropType);\n\t}\n\n\tprivate getActiveDropType(e: DragEvent): ChatDragAndDropType | undefined {\n\t\tif (\n\t\t\tcontainsDragType(\n\t\t\t\te,\n\t\t\t\tDataTransfers.FILES,\n\t\t\t\tDataTransfers.INTERNAL_URI_LIST,\n\t\t\t)\n\t\t) {\n\t\t\treturn ChatDragAndDropType.FILE;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate getDropTypeName(type: ChatDragAndDropType): string {\n\t\tswitch (type) {\n\t\t\tcase ChatDragAndDropType.FILE:\n\t\t\t\treturn localize(\"file\", \"File\");\n\t\t}\n\t}\n\n\tprivate getAttachContext(e: DragEvent): IChatRequestVariableEntry[] {\n\t\tswitch (this.getActiveDropType(e)) {\n\t\t\tcase ChatDragAndDropType.FILE: {\n\t\t\t\tconst data = extractEditorsDropData(e);\n\t\t\t\tconst contexts = data.map((editorInput) =>\n\t\t\t\t\tgetEditorAttachContext(editorInput),\n\t\t\t\t);\n\t\t\t\treturn coalesce(contexts);\n\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate setOverlay(type: ChatDragAndDropType | undefined): void {\n\t\t// Remove any previous overlay text\n\t\tthis.overlayText?.remove();\n\t\tthis.overlayText = undefined;\n\n\t\tif (type !== undefined) {\n\t\t\t// Render the overlay text\n\t\t\tconst typeName = this.getDropTypeName(type);\n\n\t\t\tconst iconAndtextElements = renderLabelWithIcons(\n\t\t\t\t`$(${Codicon.attach.id}) ${localize(\"attach\", \"Attach\")} ${typeName}`,\n\t\t\t);\n\t\t\tconst htmlElements = iconAndtextElements.map((element) => {\n\t\t\t\tif (typeof element === \"string\") {\n\t\t\t\t\treturn $(\"span.overlay-text\", undefined, element);\n\t\t\t\t}\n\t\t\t\treturn element;\n\t\t\t});\n\n\t\t\tthis.overlayText = $(\n\t\t\t\t\"span.attach-context-overlay-text\",\n\t\t\t\tundefined,\n\t\t\t\t...htmlElements,\n\t\t\t);\n\t\t\tthis.overlayText.style.backgroundColor = this.overlayTextBackground;\n\t\t\tthis.overlay.appendChild(this.overlayText);\n\t\t}\n\n\t\tthis.overlay.classList.toggle(\"visible\", type !== undefined);\n\t}\n\n\toverride updateStyles(): void {\n\t\tthis.overlay.style.backgroundColor =\n\t\t\tthis.getColor(this.styles.overlayBackground) || \"\";\n\t\tthis.overlay.style.color =\n\t\t\tthis.getColor(this.styles.listForeground) || \"\";\n\t\tthis.overlayTextBackground =\n\t\t\tthis.getColor(this.styles.listBackground) || \"\";\n\t}\n}\n\nfunction getEditorAttachContext(\n\teditor: EditorInput | IDraggedResourceEditorInput,\n): IChatRequestVariableEntry | undefined {\n\tif (!editor.resource) {\n\t\treturn undefined;\n\t}\n\n\treturn getFileAttachContext(editor.resource);\n}\n\nfunction getFileAttachContext(\n\tresource: URI,\n): IChatRequestVariableEntry | undefined {\n\treturn {\n\t\tvalue: resource,\n\t\tid: resource.toString(),\n\t\tname: basename(resource),\n\t\tisFile: true,\n\t\tisDynamic: true,\n\t};\n}\n"],
  "mappings": "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",
  "names": ["ChatDragAndDropType"]
}
