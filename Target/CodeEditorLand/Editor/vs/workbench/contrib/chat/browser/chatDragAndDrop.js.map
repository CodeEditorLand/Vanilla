{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/chatDragAndDrop.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DataTransfers } from '../../../../base/browser/dnd.js';\nimport { $, DragAndDropObserver } from '../../../../base/browser/dom.js';\nimport { renderLabelWithIcons } from '../../../../base/browser/ui/iconLabel/iconLabels.js';\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { basename } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { localize } from '../../../../nls.js';\nimport { containsDragType, extractEditorsDropData, IDraggedResourceEditorInput } from '../../../../platform/dnd/browser/dnd.js';\nimport { IThemeService, Themable } from '../../../../platform/theme/common/themeService.js';\nimport { EditorInput } from '../../../common/editor/editorInput.js';\nimport { IChatRequestVariableEntry } from '../common/chatModel.js';\nimport { ChatInputPart } from './chatInputPart.js';\nimport { IChatWidgetStyles } from './chatWidget.js';\n\nenum ChatDragAndDropType {\n\tFILE,\n}\n\nexport class ChatDragAndDrop extends Themable {\n\n\tprivate readonly overlay: HTMLElement;\n\tprivate overlayText?: HTMLElement;\n\tprivate overlayTextBackground: string = '';\n\n\tconstructor(\n\t\tprivate readonly contianer: HTMLElement,\n\t\tprivate readonly inputPart: ChatInputPart,\n\t\tprivate readonly styles: IChatWidgetStyles,\n\t\t@IThemeService themeService: IThemeService\n\t) {\n\t\tsuper(themeService);\n\n\t\t// If the mouse enters and leaves the overlay quickly,\n\t\t// the overlay may stick around due to too many drag enter events\n\t\t// Make sure the mouse enters only once\n\t\tlet mouseInside = false;\n\t\tthis._register(new DragAndDropObserver(this.contianer, {\n\t\t\tonDragEnter: (e) => {\n\t\t\t\tif (!mouseInside) {\n\t\t\t\t\tmouseInside = true;\n\t\t\t\t\tthis.onDragEnter(e);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonDragOver: (e) => {\n\t\t\t\te.stopPropagation();\n\t\t\t},\n\t\t\tonDragLeave: (e) => {\n\t\t\t\tthis.onDragLeave(e);\n\t\t\t\tmouseInside = false;\n\t\t\t},\n\t\t\tonDrop: (e) => {\n\t\t\t\tthis.onDrop(e);\n\t\t\t\tmouseInside = false;\n\t\t\t},\n\t\t}));\n\n\t\tthis.overlay = document.createElement('div');\n\t\tthis.overlay.classList.add('chat-dnd-overlay');\n\t\tthis.contianer.appendChild(this.overlay);\n\n\t\tthis.updateStyles();\n\t}\n\n\tprivate onDragEnter(e: DragEvent): void {\n\t\tconst dropType = this.getActiveDropType(e);\n\t\tthis.updateDropFeedback(e, dropType);\n\t}\n\n\tprivate onDragLeave(e: DragEvent): void {\n\t\tthis.updateDropFeedback(e, undefined);\n\t}\n\n\tprivate onDrop(e: DragEvent): void {\n\t\tthis.updateDropFeedback(e, undefined);\n\n\t\tconst contexts = this.getAttachContext(e);\n\t\tif (contexts.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure to attach only new contexts\n\t\tconst currentContextIds = new Set(Array.from(this.inputPart.attachedContext).map(context => context.id));\n\t\tconst filteredContext = [];\n\t\tfor (const context of contexts) {\n\t\t\tif (!currentContextIds.has(context.id)) {\n\t\t\t\tcurrentContextIds.add(context.id);\n\t\t\t\tfilteredContext.push(context);\n\t\t\t}\n\t\t}\n\n\t\tthis.inputPart.attachContext(false, ...filteredContext);\n\t}\n\n\tprivate updateDropFeedback(e: DragEvent, dropType: ChatDragAndDropType | undefined): void {\n\t\te.stopPropagation();\n\n\t\tconst showOverlay = dropType !== undefined;\n\t\tif (e.dataTransfer) {\n\t\t\te.dataTransfer.dropEffect = showOverlay ? 'copy' : 'none';\n\t\t}\n\n\t\tthis.setOverlay(dropType);\n\t}\n\n\tprivate getActiveDropType(e: DragEvent): ChatDragAndDropType | undefined {\n\t\tif (containsDragType(e, DataTransfers.FILES, DataTransfers.INTERNAL_URI_LIST)) {\n\t\t\treturn ChatDragAndDropType.FILE;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate getDropTypeName(type: ChatDragAndDropType): string {\n\t\tswitch (type) {\n\t\t\tcase ChatDragAndDropType.FILE: return localize('file', 'File');\n\t\t}\n\t}\n\n\tprivate getAttachContext(e: DragEvent): IChatRequestVariableEntry[] {\n\t\tswitch (this.getActiveDropType(e)) {\n\n\t\t\tcase ChatDragAndDropType.FILE: {\n\t\t\t\tconst data = extractEditorsDropData(e);\n\t\t\t\tconst contexts = data.map(editorInput => getEditorAttachContext(editorInput));\n\t\t\t\treturn coalesce(contexts);\n\t\t\t}\n\n\t\t\tdefault: return [];\n\t\t}\n\t}\n\n\tprivate setOverlay(type: ChatDragAndDropType | undefined): void {\n\t\t// Remove any previous overlay text\n\t\tthis.overlayText?.remove();\n\t\tthis.overlayText = undefined;\n\n\t\tif (type !== undefined) {\n\t\t\t// Render the overlay text\n\t\t\tconst typeName = this.getDropTypeName(type);\n\n\t\t\tconst iconAndtextElements = renderLabelWithIcons(`$(${Codicon.attach.id}) ${localize('attach', 'Attach')} ${typeName}`);\n\t\t\tconst htmlElements = iconAndtextElements.map(element => {\n\t\t\t\tif (typeof element === 'string') {\n\t\t\t\t\treturn $('span.overlay-text', undefined, element);\n\t\t\t\t}\n\t\t\t\treturn element;\n\t\t\t});\n\n\t\t\tthis.overlayText = $('span.attach-context-overlay-text', undefined, ...htmlElements);\n\t\t\tthis.overlayText.style.backgroundColor = this.overlayTextBackground;\n\t\t\tthis.overlay.appendChild(this.overlayText);\n\t\t}\n\n\t\tthis.overlay.classList.toggle('visible', type !== undefined);\n\t}\n\n\toverride updateStyles(): void {\n\t\tthis.overlay.style.backgroundColor = this.getColor(this.styles.overlayBackground) || '';\n\t\tthis.overlay.style.color = this.getColor(this.styles.listForeground) || '';\n\t\tthis.overlayTextBackground = this.getColor(this.styles.listBackground) || '';\n\t}\n}\n\nfunction getEditorAttachContext(editor: EditorInput | IDraggedResourceEditorInput): IChatRequestVariableEntry | undefined {\n\tif (!editor.resource) {\n\t\treturn undefined;\n\t}\n\n\treturn getFileAttachContext(editor.resource);\n}\n\nfunction getFileAttachContext(resource: URI): IChatRequestVariableEntry | undefined {\n\treturn {\n\t\tvalue: resource,\n\t\tid: resource.toString(),\n\t\tname: basename(resource),\n\t\tisFile: true,\n\t\tisDynamic: true\n\t};\n}\n"],
  "mappings": "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",
  "names": ["ChatDragAndDropType"]
}
