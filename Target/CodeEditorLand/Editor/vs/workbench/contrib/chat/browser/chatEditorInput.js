var m=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var l=(o,t,e,i)=>{for(var s=i>1?void 0:i?I(t,e):t,d=o.length-1,n;d>=0;d--)(n=o[d])&&(s=(i?n(t,e,s):n(s))||s);return i&&s&&m(t,e,s),s},p=(o,t)=>(e,i)=>t(e,i,o);import{CancellationToken as f}from"../../../../base/common/cancellation.js";import{Codicon as g}from"../../../../base/common/codicons.js";import{Emitter as v}from"../../../../base/common/event.js";import{Disposable as S,toDisposable as y}from"../../../../base/common/lifecycle.js";import{Schemas as b}from"../../../../base/common/network.js";import{URI as h}from"../../../../base/common/uri.js";import*as u from"../../../../nls.js";import{registerIcon as C}from"../../../../platform/theme/common/iconRegistry.js";import{EditorInputCapabilities as E}from"../../../common/editor.js";import{EditorInput as D}from"../../../common/editor/editorInput.js";import{ChatAgentLocation as z}from"../common/chatAgents.js";import{IChatService as R}from"../common/chatService.js";const x=C("chat-editor-label-icon",g.commentDiscussion,u.localize("chatEditorLabelIcon","Icon of the chat editor label."));let r=class extends D{constructor(e,i,s){super();this.resource=e;this.options=i;this.chatService=s;if(typeof a.parse(e)?.handle!="number")throw new Error("Invalid chat URI");this.sessionId=i.target&&"sessionId"in i.target?i.target.sessionId:void 0,this.inputCount=r.getNextCount(),r.countsInUse.add(this.inputCount),this._register(y(()=>r.countsInUse.delete(this.inputCount)))}static countsInUse=new Set;static TypeID="workbench.input.chatSession";static EditorID="workbench.editor.chatSession";inputCount;sessionId;model;static getNewEditorUri(){const e=Math.floor(Math.random()*1e9);return a.generate(e)}static getNextCount(){let e=0;for(;r.countsInUse.has(e);)e++;return e}get editorId(){return r.EditorID}get capabilities(){return super.capabilities|E.Singleton}matches(e){return e instanceof r&&e.resource.toString()===this.resource.toString()}get typeId(){return r.TypeID}getName(){return this.model?.title||u.localize("chatEditorName","Chat")+(this.inputCount>0?` ${this.inputCount+1}`:"")}getIcon(){return x}async resolve(){return typeof this.sessionId=="string"?this.model=this.chatService.getOrRestoreSession(this.sessionId):this.options.target?"data"in this.options.target&&(this.model=this.chatService.loadSessionFromContent(this.options.target.data)):this.model=this.chatService.startSession(z.Panel,f.None),this.model?(this.sessionId=this.model.sessionId,this._register(this.model.onDidChange(()=>this._onDidChangeLabel.fire())),this._register(new U(this.model))):null}dispose(){super.dispose(),this.sessionId&&this.chatService.clearSession(this.sessionId)}};r=l([p(2,R)],r);class U extends S{constructor(e){super();this.model=e}_onWillDispose=this._register(new v);onWillDispose=this._onWillDispose.event;_isDisposed=!1;_isResolved=!1;async resolve(){this._isResolved=!0}isResolved(){return this._isResolved}isDisposed(){return this._isDisposed}dispose(){super.dispose(),this._isDisposed=!0}}var a;(i=>{i.scheme=b.vscodeChatSesssion;function t(s){return h.from({scheme:i.scheme,path:`chat-${s}`})}i.generate=t;function e(s){if(s.scheme!==i.scheme)return;const n=s.path.match(/chat-(\d+)/)?.[1];if(typeof n!="string")return;const c=parseInt(n);if(!isNaN(c))return{handle:c}}i.parse=e})(a||={});class Q{canSerialize(t){return t instanceof r&&typeof t.sessionId=="string"}serialize(t){if(!this.canSerialize(t))return;const e={options:t.options,sessionId:t.sessionId,resource:t.resource};return JSON.stringify(e)}deserialize(t,e){try{const i=JSON.parse(e),s=h.revive(i.resource);return t.createInstance(r,s,{...i.options,target:{sessionId:i.sessionId}})}catch{return}}}export{r as ChatEditorInput,Q as ChatEditorInputSerializer,U as ChatEditorModel,a as ChatUri};
