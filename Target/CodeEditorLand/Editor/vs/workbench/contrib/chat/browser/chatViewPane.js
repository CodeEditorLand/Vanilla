var C=Object.defineProperty;var _=Object.getOwnPropertyDescriptor;var l=(n,o,e,t)=>{for(var i=t>1?void 0:t?_(o,e):o,s=n.length-1,a;s>=0;s--)(a=n[s])&&(i=(t?a(o,e,i):a(i))||i);return t&&i&&C(o,e,i),i},r=(n,o)=>(e,t)=>o(e,t,n);import{CancellationToken as V}from"../../../../base/common/cancellation.js";import{DisposableStore as y}from"../../../../base/common/lifecycle.js";import{IConfigurationService as M}from"../../../../platform/configuration/common/configuration.js";import{IContextKeyService as g}from"../../../../platform/contextkey/common/contextkey.js";import{IContextMenuService as D}from"../../../../platform/contextview/browser/contextView.js";import{IHoverService as A}from"../../../../platform/hover/browser/hover.js";import{IInstantiationService as b}from"../../../../platform/instantiation/common/instantiation.js";import{ServiceCollection as P}from"../../../../platform/instantiation/common/serviceCollection.js";import{IKeybindingService as R}from"../../../../platform/keybinding/common/keybinding.js";import{ILogService as B}from"../../../../platform/log/common/log.js";import{IOpenerService as x}from"../../../../platform/opener/common/opener.js";import{IStorageService as O,StorageScope as E,StorageTarget as T}from"../../../../platform/storage/common/storage.js";import{ITelemetryService as k}from"../../../../platform/telemetry/common/telemetry.js";import{editorBackground as L}from"../../../../platform/theme/common/colorRegistry.js";import{IThemeService as F}from"../../../../platform/theme/common/themeService.js";import{ViewPane as W}from"../../../browser/parts/views/viewPane.js";import{Memento as H}from"../../../common/memento.js";import{SIDE_BAR_FOREGROUND as K}from"../../../common/theme.js";import{IViewDescriptorService as z}from"../../../common/views.js";import{ChatAgentLocation as c,IChatAgentService as U}from"../common/chatAgents.js";import{ChatModelInitState as N}from"../common/chatModel.js";import{CHAT_PROVIDER_ID as G}from"../common/chatParticipantContribTypes.js";import{IChatService as j}from"../common/chatService.js";import"./actions/chatActions.js";import{ChatWidget as q}from"./chatWidget.js";const be="workbench.panel.chatSidebar";let h=class extends W{constructor(e,t,i,s,a,v,d,p,I,u,w,J,Q,X,Y){super(e,t,i,s,a,v,d,p,I,u,w);this.storageService=J;this.chatService=Q;this.chatAgentService=X;this.logService=Y;this.memento=new H("interactive-session-view-"+G,this.storageService),this.viewState=this.memento.getMemento(E.WORKSPACE,T.MACHINE),this._register(this.chatAgentService.onDidChangeAgents(()=>{if(this.isInitialized=!0,this.chatAgentService.getDefaultAgent(c.Panel)){if(!this._widget?.viewModel){const S=this.getSessionId(),m=S?this.chatService.getOrRestoreSession(S):void 0,f=this._widget.visible;try{this._widget.setVisible(!1),this.updateModel(m),this.didProviderRegistrationFail=!1,this.didUnregisterProvider=!1,this._onDidChangeViewWelcomeState.fire()}finally{this.widget.setVisible(f)}}}else this._widget?.viewModel?.initState===N.Initialized&&(this.didUnregisterProvider=!0);this._onDidChangeViewWelcomeState.fire()}))}_widget;get widget(){return this._widget}modelDisposables=this._register(new y);memento;viewState;didProviderRegistrationFail=!1;didUnregisterProvider=!1;isInitialized=!1;getActionsContext(){return{chatView:this}}updateModel(e,t){if(this.modelDisposables.clear(),e=e??(this.chatService.transferredSessionData?.sessionId?this.chatService.getOrRestoreSession(this.chatService.transferredSessionData.sessionId):this.chatService.startSession(c.Panel,V.None)),!e)throw new Error("Could not start chat session");t&&this.updateViewState(t),this.viewState.sessionId=e.sessionId,this._widget.setModel(e,{...this.viewState})}shouldShowWelcome(){if(!this.chatAgentService.getContributedDefaultAgent(c.Panel))return!0;const e=!this.chatService.hasSessions();return this.didUnregisterProvider||!this._widget?.viewModel&&(e||this.didProviderRegistrationFail)||!this.isInitialized}getSessionId(){let e;return this.chatService.transferredSessionData?(e=this.chatService.transferredSessionData.sessionId,this.viewState.inputValue=this.chatService.transferredSessionData.inputValue):e=this.viewState.sessionId,e}renderBody(e){try{super.renderBody(e);const t=this._register(this.instantiationService.createChild(new P([g,this.scopedContextKeyService]))),i=this.getLocationBasedColors();this._widget=this._register(t.createInstance(q,c.Panel,{viewId:this.id},{supportsFileReferences:!0},{listForeground:K,listBackground:i.background,overlayBackground:i.overlayBackground,inputEditorBackground:i.background,resultEditorBackground:L})),this._register(this.onDidChangeBodyVisibility(d=>{this._widget.setVisible(d)})),this._register(this._widget.onDidClear(()=>this.clear())),this._widget.render(e);const s=this.getSessionId(),a=s?this._register(this.chatService.onDidDisposeSession(d=>{d.reason==="initializationFailed"&&(this.didProviderRegistrationFail=!0,a?.dispose(),this._onDidChangeViewWelcomeState.fire())})):void 0,v=s?this.chatService.getOrRestoreSession(s):void 0;this.updateModel(v)}catch(t){throw this.logService.error(t),t}}acceptInput(e){this._widget.acceptInput(e)}clear(){this.widget.viewModel&&this.chatService.clearSession(this.widget.viewModel.sessionId),this.updateViewState(),this.updateModel(void 0)}loadSession(e,t){this.widget.viewModel&&this.chatService.clearSession(this.widget.viewModel.sessionId);const i=this.chatService.getOrRestoreSession(e);this.updateModel(i,t)}focusInput(){this._widget.focusInput()}focus(){super.focus(),this._widget.focusInput()}layoutBody(e,t){super.layoutBody(e,t),this._widget.layout(e,t)}saveState(){this._widget&&(this._widget.saveState(),this.updateViewState(),this.memento.saveMemento()),super.saveState()}updateViewState(e){const t=e??this._widget.getViewState();this.viewState.inputValue=t.inputValue,this.viewState.inputState=t.inputState,this.viewState.selectedLanguageModelId=t.selectedLanguageModelId}};h=l([r(1,R),r(2,D),r(3,M),r(4,g),r(5,z),r(6,b),r(7,x),r(8,F),r(9,k),r(10,A),r(11,O),r(12,j),r(13,U),r(14,B)],h);export{be as CHAT_SIDEBAR_PANEL_ID,h as ChatViewPane};
