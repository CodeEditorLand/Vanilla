{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/chatContentParts/chatCollections.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable, Disposable } from '../../../../../base/common/lifecycle.js';\n\nexport class ResourcePool<T extends IDisposable> extends Disposable {\n\tprivate readonly pool: T[] = [];\n\n\tprivate _inUse = new Set<T>;\n\tpublic get inUse(): ReadonlySet<T> {\n\t\treturn this._inUse;\n\t}\n\n\tconstructor(\n\t\tprivate readonly _itemFactory: () => T,\n\t) {\n\t\tsuper();\n\t}\n\n\tget(): T {\n\t\tif (this.pool.length > 0) {\n\t\t\tconst item = this.pool.pop()!;\n\t\t\tthis._inUse.add(item);\n\t\t\treturn item;\n\t\t}\n\n\t\tconst item = this._register(this._itemFactory());\n\t\tthis._inUse.add(item);\n\t\treturn item;\n\t}\n\n\trelease(item: T): void {\n\t\tthis._inUse.delete(item);\n\t\tthis.pool.push(item);\n\t}\n}\n\nexport interface IDisposableReference<T> extends IDisposable {\n\tobject: T;\n\tisStale: () => boolean;\n}\n"],
  "mappings": ";;AAKA,SAAS,aAAa,kBAAkB;AAEjC,MAAM,qBAA4C,WAAW;AAAA,EAQnE,YACkB,cAChB;AACD,UAAM;AAFW;AAAA,EAGlB;AAAA,EAnBD,OAOoE;AAAA;AAAA;AAAA,EAClD,OAAY,CAAC;AAAA,EAEtB,SAAS,oBAAI;AAAA,EACrB,IAAW,QAAwB;AAClC,WAAO,KAAK;AAAA,EACb;AAAA,EAQA,MAAS;AACR,QAAI,KAAK,KAAK,SAAS,GAAG;AACzB,YAAMA,QAAO,KAAK,KAAK,IAAI;AAC3B,WAAK,OAAO,IAAIA,KAAI;AACpB,aAAOA;AAAA,IACR;AAEA,UAAM,OAAO,KAAK,UAAU,KAAK,aAAa,CAAC;AAC/C,SAAK,OAAO,IAAI,IAAI;AACpB,WAAO;AAAA,EACR;AAAA,EAEA,QAAQ,MAAe;AACtB,SAAK,OAAO,OAAO,IAAI;AACvB,SAAK,KAAK,KAAK,IAAI;AAAA,EACpB;AACD;",
  "names": ["item"]
}
