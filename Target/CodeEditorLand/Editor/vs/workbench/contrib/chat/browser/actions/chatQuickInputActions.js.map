{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/actions/chatQuickInputActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from \"../../../../../base/common/codicons.js\";\nimport { KeyCode, KeyMod } from \"../../../../../base/common/keyCodes.js\";\nimport { ICodeEditorService } from \"../../../../../editor/browser/services/codeEditorService.js\";\nimport { Selection } from \"../../../../../editor/common/core/selection.js\";\nimport { localize, localize2 } from \"../../../../../nls.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../../platform/actions/common/actions.js\";\nimport type { ServicesAccessor } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { InlineChatController } from \"../../../inlineChat/browser/inlineChatController.js\";\nimport { CONTEXT_CHAT_ENABLED } from \"../../common/chatContextKeys.js\";\nimport { type IQuickChatOpenOptions, IQuickChatService } from \"../chat.js\";\nimport { CHAT_CATEGORY } from \"./chatActions.js\";\n\nexport const ASK_QUICK_QUESTION_ACTION_ID = \"workbench.action.quickchat.toggle\";\nexport function registerQuickChatActions() {\n\tregisterAction2(QuickChatGlobalAction);\n\tregisterAction2(AskQuickChatAction);\n\n\tregisterAction2(\n\t\tclass OpenInChatViewAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: \"workbench.action.quickchat.openInChatView\",\n\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\"chat.openInChatView.label\",\n\t\t\t\t\t\t\"Open in Chat View\",\n\t\t\t\t\t),\n\t\t\t\t\tf1: false,\n\t\t\t\t\tcategory: CHAT_CATEGORY,\n\t\t\t\t\ticon: Codicon.commentDiscussion,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.ChatInputSide,\n\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\torder: 10,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\trun(accessor: ServicesAccessor) {\n\t\t\t\tconst quickChatService = accessor.get(IQuickChatService);\n\t\t\t\tquickChatService.openInChatView();\n\t\t\t}\n\t\t},\n\t);\n\n\tregisterAction2(\n\t\tclass CloseQuickChatAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: \"workbench.action.quickchat.close\",\n\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\"chat.closeQuickChat.label\",\n\t\t\t\t\t\t\"Close Quick Chat\",\n\t\t\t\t\t),\n\t\t\t\t\tf1: false,\n\t\t\t\t\tcategory: CHAT_CATEGORY,\n\t\t\t\t\ticon: Codicon.close,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.ChatInputSide,\n\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\torder: 20,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\trun(accessor: ServicesAccessor) {\n\t\t\t\tconst quickChatService = accessor.get(IQuickChatService);\n\t\t\t\tquickChatService.close();\n\t\t\t}\n\t\t},\n\t);\n\n\tregisterAction2(\n\t\tclass LaunchInlineChatFromQuickChatAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: \"workbench.action.quickchat.launchInlineChat\",\n\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\"chat.launchInlineChat.label\",\n\t\t\t\t\t\t\"Launch Inline Chat\",\n\t\t\t\t\t),\n\t\t\t\t\tf1: false,\n\t\t\t\t\tcategory: CHAT_CATEGORY,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tasync run(accessor: ServicesAccessor) {\n\t\t\t\tconst quickChatService = accessor.get(IQuickChatService);\n\t\t\t\tconst codeEditorService = accessor.get(ICodeEditorService);\n\t\t\t\tif (quickChatService.focused) {\n\t\t\t\t\tquickChatService.close();\n\t\t\t\t}\n\t\t\t\tconst codeEditor = codeEditorService.getActiveCodeEditor();\n\t\t\t\tif (!codeEditor) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst controller = InlineChatController.get(codeEditor);\n\t\t\t\tif (!controller) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tawait controller.run();\n\t\t\t\tcontroller.focus();\n\t\t\t}\n\t\t},\n\t);\n}\n\nclass QuickChatGlobalAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ASK_QUICK_QUESTION_ACTION_ID,\n\t\t\ttitle: localize2(\"quickChat\", \"Quick Chat\"),\n\t\t\tprecondition: CONTEXT_CHAT_ENABLED,\n\t\t\ticon: Codicon.commentDiscussion,\n\t\t\tf1: false,\n\t\t\tcategory: CHAT_CATEGORY,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyI,\n\t\t\t\tlinux: {\n\t\t\t\t\tprimary:\n\t\t\t\t\t\tKeyMod.CtrlCmd |\n\t\t\t\t\t\tKeyMod.Shift |\n\t\t\t\t\t\tKeyMod.Alt |\n\t\t\t\t\t\tKeyCode.KeyI,\n\t\t\t\t},\n\t\t\t},\n\t\t\tmetadata: {\n\t\t\t\tdescription: localize(\"toggle.desc\", \"Toggle the quick chat\"),\n\t\t\t\targs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"args\",\n\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\tanyOf: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\t\t\t\trequired: [\"query\"],\n\t\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\t\tquery: {\n\t\t\t\t\t\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\t\t\t\t\t\"toggle.query\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"The query to open the quick chat with\",\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tisPartialQuery: {\n\t\t\t\t\t\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\t\t\t\t\t\"toggle.isPartialQuery\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"Whether the query is partial; it will wait for more user input\",\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\t\t\t\"toggle.query\",\n\t\t\t\t\t\t\t\t\t\t\"The query to open the quick chat with\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t});\n\t}\n\n\toverride run(\n\t\taccessor: ServicesAccessor,\n\t\tquery?: string | Omit<IQuickChatOpenOptions, \"selection\">,\n\t): void {\n\t\tconst quickChatService = accessor.get(IQuickChatService);\n\t\tlet options: IQuickChatOpenOptions | undefined;\n\t\tswitch (typeof query) {\n\t\t\tcase \"string\":\n\t\t\t\toptions = { query };\n\t\t\t\tbreak;\n\t\t\tcase \"object\":\n\t\t\t\toptions = query;\n\t\t\t\tbreak;\n\t\t}\n\t\tif (options?.query) {\n\t\t\toptions.selection = new Selection(\n\t\t\t\t1,\n\t\t\t\toptions.query.length + 1,\n\t\t\t\t1,\n\t\t\t\toptions.query.length + 1,\n\t\t\t);\n\t\t}\n\t\tquickChatService.toggle(options);\n\t}\n}\n\nclass AskQuickChatAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: `workbench.action.openQuickChat`,\n\t\t\tcategory: CHAT_CATEGORY,\n\t\t\ttitle: localize2(\"interactiveSession.open\", \"Open Quick Chat\"),\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor, query?: string): void {\n\t\tconst quickChatService = accessor.get(IQuickChatService);\n\t\tquickChatService.toggle(\n\t\t\tquery\n\t\t\t\t? {\n\t\t\t\t\t\tquery,\n\t\t\t\t\t\tselection: new Selection(\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\tquery.length + 1,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\tquery.length + 1,\n\t\t\t\t\t\t),\n\t\t\t\t\t}\n\t\t\t\t: undefined,\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
