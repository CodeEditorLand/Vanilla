var v=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var p=(o,i,t,e)=>{for(var a=e>1?void 0:e?y(i,t):i,n=o.length-1,r;n>=0;n--)(r=o[n])&&(a=(e?r(i,t,a):r(a))||a);return e&&a&&v(i,t,a),a},l=(o,i)=>(t,e)=>i(t,e,o);import{DataTransfers as c}from"../../../../base/browser/dnd.js";import{$ as h,DragAndDropObserver as f}from"../../../../base/browser/dom.js";import{renderLabelWithIcons as g}from"../../../../base/browser/ui/iconLabel/iconLabels.js";import{coalesce as m}from"../../../../base/common/arrays.js";import{Codicon as D}from"../../../../base/common/codicons.js";import{basename as E}from"../../../../base/common/resources.js";import"../../../../base/common/uri.js";import{localize as u}from"../../../../nls.js";import{containsDragType as T,extractEditorsDropData as I}from"../../../../platform/dnd/browser/dnd.js";import{IThemeService as x,Themable as C}from"../../../../platform/theme/common/themeService.js";import"../../../common/editor/editorInput.js";import"../common/chatModel.js";import"./chatInputPart.js";import"./chatWidget.js";var L=(i=>(i[i.FILE=0]="FILE",i))(L||{});let d=class extends C{constructor(t,e,a,n){super(n);this.contianer=t;this.inputPart=e;this.styles=a;let r=!1;this._register(new f(this.contianer,{onDragEnter:s=>{r||(r=!0,this.onDragEnter(s))},onDragOver:s=>{s.stopPropagation()},onDragLeave:s=>{this.onDragLeave(s),r=!1},onDrop:s=>{this.onDrop(s),r=!1}})),this.overlay=document.createElement("div"),this.overlay.classList.add("chat-dnd-overlay"),this.contianer.appendChild(this.overlay),this.updateStyles()}overlay;overlayText;overlayTextBackground="";onDragEnter(t){const e=this.getActiveDropType(t);this.updateDropFeedback(t,e)}onDragLeave(t){this.updateDropFeedback(t,void 0)}onDrop(t){this.updateDropFeedback(t,void 0);const e=this.getAttachContext(t);if(e.length===0)return;const a=new Set(Array.from(this.inputPart.attachedContext).map(r=>r.id)),n=[];for(const r of e)a.has(r.id)||(a.add(r.id),n.push(r));this.inputPart.attachContext(!1,...n)}updateDropFeedback(t,e){t.stopPropagation();const a=e!==void 0;t.dataTransfer&&(t.dataTransfer.dropEffect=a?"copy":"none"),this.setOverlay(e)}getActiveDropType(t){if(T(t,c.FILES,c.INTERNAL_URI_LIST))return 0}getDropTypeName(t){switch(t){case 0:return u("file","File")}}getAttachContext(t){switch(this.getActiveDropType(t)){case 0:{const a=I(t).map(n=>b(n));return m(a)}default:return[]}}setOverlay(t){if(this.overlayText?.remove(),this.overlayText=void 0,t!==void 0){const e=this.getDropTypeName(t),n=g(`$(${D.attach.id}) ${u("attach","Attach")} ${e}`).map(r=>typeof r=="string"?h("span.overlay-text",void 0,r):r);this.overlayText=h("span.attach-context-overlay-text",void 0,...n),this.overlayText.style.backgroundColor=this.overlayTextBackground,this.overlay.appendChild(this.overlayText)}this.overlay.classList.toggle("visible",t!==void 0)}updateStyles(){this.overlay.style.backgroundColor=this.getColor(this.styles.overlayBackground)||"",this.overlay.style.color=this.getColor(this.styles.listForeground)||"",this.overlayTextBackground=this.getColor(this.styles.listBackground)||""}};d=p([l(3,x)],d);function b(o){if(o.resource)return A(o.resource)}function A(o){return{value:o,id:o.toString(),name:E(o),isFile:!0,isDynamic:!0}}export{d as ChatDragAndDrop};
