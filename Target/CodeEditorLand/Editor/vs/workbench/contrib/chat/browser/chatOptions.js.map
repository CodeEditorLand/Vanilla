{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/chatOptions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Color } from '../../../../base/common/color.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { IBracketPairColorizationOptions, IEditorOptions } from '../../../../editor/common/config/editorOptions.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { IViewDescriptorService } from '../../../common/views.js';\n\nexport interface IChatConfiguration {\n\teditor: {\n\t\treadonly fontSize: number;\n\t\treadonly fontFamily: string;\n\t\treadonly lineHeight: number;\n\t\treadonly fontWeight: string;\n\t\treadonly wordWrap: 'off' | 'on';\n\t};\n}\n\nexport interface IChatEditorConfiguration {\n\treadonly foreground: Color | undefined;\n\treadonly inputEditor: IChatInputEditorOptions;\n\treadonly resultEditor: IChatResultEditorOptions;\n}\n\nexport interface IChatInputEditorOptions {\n\treadonly backgroundColor: Color | undefined;\n\treadonly accessibilitySupport: string;\n}\n\nexport interface IChatResultEditorOptions {\n\treadonly fontSize: number;\n\treadonly fontFamily: string | undefined;\n\treadonly lineHeight: number;\n\treadonly fontWeight: string;\n\treadonly backgroundColor: Color | undefined;\n\treadonly bracketPairColorization: IBracketPairColorizationOptions;\n\treadonly fontLigatures: boolean | string | undefined;\n\treadonly wordWrap: 'off' | 'on';\n\n\t// Bring these back if we make the editors editable\n\t// readonly cursorBlinking: string;\n\t// readonly accessibilitySupport: string;\n}\n\n\nexport class ChatEditorOptions extends Disposable {\n\tprivate static readonly lineHeightEm = 1.4;\n\n\tprivate readonly _onDidChange = this._register(new Emitter<void>());\n\treadonly onDidChange = this._onDidChange.event;\n\n\tprivate _config!: IChatEditorConfiguration;\n\tpublic get configuration(): IChatEditorConfiguration {\n\t\treturn this._config;\n\t}\n\n\tprivate static readonly relevantSettingIds = [\n\t\t'chat.editor.lineHeight',\n\t\t'chat.editor.fontSize',\n\t\t'chat.editor.fontFamily',\n\t\t'chat.editor.fontWeight',\n\t\t'chat.editor.wordWrap',\n\t\t'editor.cursorBlinking',\n\t\t'editor.fontLigatures',\n\t\t'editor.accessibilitySupport',\n\t\t'editor.bracketPairColorization.enabled',\n\t\t'editor.bracketPairColorization.independentColorPoolPerBracketType',\n\t];\n\n\tconstructor(\n\t\tviewId: string | undefined,\n\t\tprivate readonly foreground: string,\n\t\tprivate readonly inputEditorBackgroundColor: string,\n\t\tprivate readonly resultEditorBackgroundColor: string,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IViewDescriptorService private readonly viewDescriptorService: IViewDescriptorService\n\t) {\n\t\tsuper();\n\n\t\tthis._register(this.themeService.onDidColorThemeChange(e => this.update()));\n\t\tthis._register(this.viewDescriptorService.onDidChangeLocation(e => {\n\t\t\tif (e.views.some(v => v.id === viewId)) {\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t}));\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (ChatEditorOptions.relevantSettingIds.some(id => e.affectsConfiguration(id))) {\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t}));\n\t\tthis.update();\n\t}\n\n\tprivate update() {\n\t\tconst editorConfig = this.configurationService.getValue<IEditorOptions>('editor');\n\n\t\t// TODO shouldn't the setting keys be more specific?\n\t\tconst chatEditorConfig = this.configurationService.getValue<IChatConfiguration>('chat')?.editor;\n\t\tconst accessibilitySupport = this.configurationService.getValue<'auto' | 'off' | 'on'>('editor.accessibilitySupport');\n\t\tthis._config = {\n\t\t\tforeground: this.themeService.getColorTheme().getColor(this.foreground),\n\t\t\tinputEditor: {\n\t\t\t\tbackgroundColor: this.themeService.getColorTheme().getColor(this.inputEditorBackgroundColor),\n\t\t\t\taccessibilitySupport,\n\t\t\t},\n\t\t\tresultEditor: {\n\t\t\t\tbackgroundColor: this.themeService.getColorTheme().getColor(this.resultEditorBackgroundColor),\n\t\t\t\tfontSize: chatEditorConfig.fontSize,\n\t\t\t\tfontFamily: chatEditorConfig.fontFamily === 'default' ? editorConfig.fontFamily : chatEditorConfig.fontFamily,\n\t\t\t\tfontWeight: chatEditorConfig.fontWeight,\n\t\t\t\tlineHeight: chatEditorConfig.lineHeight ? chatEditorConfig.lineHeight : ChatEditorOptions.lineHeightEm * chatEditorConfig.fontSize,\n\t\t\t\tbracketPairColorization: {\n\t\t\t\t\tenabled: this.configurationService.getValue<boolean>('editor.bracketPairColorization.enabled'),\n\t\t\t\t\tindependentColorPoolPerBracketType: this.configurationService.getValue<boolean>('editor.bracketPairColorization.independentColorPoolPerBracketType'),\n\t\t\t\t},\n\t\t\t\twordWrap: chatEditorConfig.wordWrap,\n\t\t\t\tfontLigatures: editorConfig.fontLigatures,\n\t\t\t}\n\n\t\t};\n\t\tthis._onDidChange.fire();\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,aAAa;AACtB,SAAS,eAAe;AACxB,SAAS,kBAAkB;AAC3B,SAAS,iCAAiC,sBAAsB;AAChE,SAAS,6BAA6B;AACtC,SAAS,qBAAqB;AAC9B,SAAS,8BAA8B;AAuChC,IAAM,oBAAN,cAAgC,WAAW;AAAA,EAwBjD,YACC,QACiB,YACA,4BACA,6BACuB,sBACR,cACS,uBACxC;AACD,UAAM;AAPW;AACA;AACA;AACuB;AACR;AACS;AAIzC,SAAK,UAAU,KAAK,aAAa,sBAAsB,OAAK,KAAK,OAAO,CAAC,CAAC;AAC1E,SAAK,UAAU,KAAK,sBAAsB,oBAAoB,OAAK;AAClE,UAAI,EAAE,MAAM,KAAK,OAAK,EAAE,OAAO,MAAM,GAAG;AACvC,aAAK,OAAO;AAAA,MACb;AAAA,IACD,CAAC,CAAC;AACF,SAAK,UAAU,KAAK,qBAAqB,yBAAyB,OAAK;AACtE,UAAI,kBAAkB,mBAAmB,KAAK,QAAM,EAAE,qBAAqB,EAAE,CAAC,GAAG;AAChF,aAAK,OAAO;AAAA,MACb;AAAA,IACD,CAAC,CAAC;AACF,SAAK,OAAO;AAAA,EACb;AAAA,EAjGD,OAkDkD;AAAA;AAAA;AAAA,EACjD,OAAwB,eAAe;AAAA,EAEtB,eAAe,KAAK,UAAU,IAAI,QAAc,CAAC;AAAA,EACzD,cAAc,KAAK,aAAa;AAAA,EAEjC;AAAA,EACR,IAAW,gBAA0C;AACpD,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,OAAwB,qBAAqB;AAAA,IAC5C;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AAAA,EA2BQ,SAAS;AAChB,UAAM,eAAe,KAAK,qBAAqB,SAAyB,QAAQ;AAGhF,UAAM,mBAAmB,KAAK,qBAAqB,SAA6B,MAAM,GAAG;AACzF,UAAM,uBAAuB,KAAK,qBAAqB,SAAgC,6BAA6B;AACpH,SAAK,UAAU;AAAA,MACd,YAAY,KAAK,aAAa,cAAc,EAAE,SAAS,KAAK,UAAU;AAAA,MACtE,aAAa;AAAA,QACZ,iBAAiB,KAAK,aAAa,cAAc,EAAE,SAAS,KAAK,0BAA0B;AAAA,QAC3F;AAAA,MACD;AAAA,MACA,cAAc;AAAA,QACb,iBAAiB,KAAK,aAAa,cAAc,EAAE,SAAS,KAAK,2BAA2B;AAAA,QAC5F,UAAU,iBAAiB;AAAA,QAC3B,YAAY,iBAAiB,eAAe,YAAY,aAAa,aAAa,iBAAiB;AAAA,QACnG,YAAY,iBAAiB;AAAA,QAC7B,YAAY,iBAAiB,aAAa,iBAAiB,aAAa,kBAAkB,eAAe,iBAAiB;AAAA,QAC1H,yBAAyB;AAAA,UACxB,SAAS,KAAK,qBAAqB,SAAkB,wCAAwC;AAAA,UAC7F,oCAAoC,KAAK,qBAAqB,SAAkB,mEAAmE;AAAA,QACpJ;AAAA,QACA,UAAU,iBAAiB;AAAA,QAC3B,eAAe,aAAa;AAAA,MAC7B;AAAA,IAED;AACA,SAAK,aAAa,KAAK;AAAA,EACxB;AACD;AA9Ea,oBAAN;AAAA,EA6BJ;AAAA,EACA;AAAA,EACA;AAAA,GA/BU;",
  "names": []
}
