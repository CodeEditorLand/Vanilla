{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/chatVariables.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from \"../../../../base/common/arrays.js\";\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { onUnexpectedExternalError } from \"../../../../base/common/errors.js\";\nimport { Iterable } from \"../../../../base/common/iterator.js\";\nimport {\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { basename } from \"../../../../base/common/path.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport type { Location } from \"../../../../editor/common/languages.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport { ChatAgentLocation } from \"../common/chatAgents.js\";\nimport type {\n\tIChatModel,\n\tIChatRequestVariableData,\n\tIChatRequestVariableEntry,\n} from \"../common/chatModel.js\";\nimport {\n\tChatRequestDynamicVariablePart,\n\tChatRequestToolPart,\n\tChatRequestVariablePart,\n\ttype IParsedChatRequest,\n} from \"../common/chatParserTypes.js\";\nimport type { IChatContentReference } from \"../common/chatService.js\";\nimport type {\n\tIChatRequestVariableValue,\n\tIChatVariableData,\n\tIChatVariableResolver,\n\tIChatVariableResolverProgress,\n\tIChatVariablesService,\n\tIDynamicVariable,\n} from \"../common/chatVariables.js\";\nimport { ILanguageModelToolsService } from \"../common/languageModelToolsService.js\";\nimport { IChatWidgetService, showChatView } from \"./chat.js\";\nimport { ChatContextAttachments } from \"./contrib/chatContextAttachments.js\";\nimport { ChatDynamicVariableModel } from \"./contrib/chatDynamicVariables.js\";\n\ninterface IChatData {\n\tdata: IChatVariableData;\n\tresolver: IChatVariableResolver;\n}\n\nexport class ChatVariablesService implements IChatVariablesService {\n\tdeclare _serviceBrand: undefined;\n\n\tprivate _resolver = new Map<string, IChatData>();\n\n\tconstructor(\n\t\t@IChatWidgetService\n\t\tprivate readonly chatWidgetService: IChatWidgetService,\n\t\t@IViewsService private readonly viewsService: IViewsService,\n\t\t@ILanguageModelToolsService\n\t\tprivate readonly toolsService: ILanguageModelToolsService,\n\t) {}\n\n\tasync resolveVariables(\n\t\tprompt: IParsedChatRequest,\n\t\tattachedContextVariables: IChatRequestVariableEntry[] | undefined,\n\t\tmodel: IChatModel,\n\t\tprogress: (part: IChatVariableResolverProgress) => void,\n\t\ttoken: CancellationToken,\n\t): Promise<IChatRequestVariableData> {\n\t\tlet resolvedVariables: IChatRequestVariableEntry[] = [];\n\t\tconst jobs: Promise<any>[] = [];\n\n\t\tprompt.parts.forEach((part, i) => {\n\t\t\tif (part instanceof ChatRequestVariablePart) {\n\t\t\t\tconst data = this._resolver.get(\n\t\t\t\t\tpart.variableName.toLowerCase(),\n\t\t\t\t);\n\t\t\t\tif (data) {\n\t\t\t\t\tconst references: IChatContentReference[] = [];\n\t\t\t\t\tconst variableProgressCallback = (\n\t\t\t\t\t\titem: IChatVariableResolverProgress,\n\t\t\t\t\t) => {\n\t\t\t\t\t\tif (item.kind === \"reference\") {\n\t\t\t\t\t\t\treferences.push(item);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprogress(item);\n\t\t\t\t\t};\n\t\t\t\t\tjobs.push(\n\t\t\t\t\t\tdata\n\t\t\t\t\t\t\t.resolver(\n\t\t\t\t\t\t\t\tprompt.text,\n\t\t\t\t\t\t\t\tpart.variableArg,\n\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\tvariableProgressCallback,\n\t\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.then((value) => {\n\t\t\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\t\t\tresolvedVariables[i] = {\n\t\t\t\t\t\t\t\t\t\tid: data.data.id,\n\t\t\t\t\t\t\t\t\t\tmodelDescription:\n\t\t\t\t\t\t\t\t\t\t\tdata.data.modelDescription,\n\t\t\t\t\t\t\t\t\t\tname: part.variableName,\n\t\t\t\t\t\t\t\t\t\trange: part.range,\n\t\t\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t\t\t\treferences,\n\t\t\t\t\t\t\t\t\t\tfullName: data.data.fullName,\n\t\t\t\t\t\t\t\t\t\ticon: data.data.icon,\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(onUnexpectedExternalError),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else if (part instanceof ChatRequestDynamicVariablePart) {\n\t\t\t\tresolvedVariables[i] = {\n\t\t\t\t\tid: part.id,\n\t\t\t\t\tname: part.referenceText,\n\t\t\t\t\trange: part.range,\n\t\t\t\t\tvalue: part.data,\n\t\t\t\t};\n\t\t\t} else if (part instanceof ChatRequestToolPart) {\n\t\t\t\tconst tool = this.toolsService.getTool(part.toolId);\n\t\t\t\tif (tool) {\n\t\t\t\t\tresolvedVariables[i] = {\n\t\t\t\t\t\tid: part.toolId,\n\t\t\t\t\t\tname: part.toolName,\n\t\t\t\t\t\trange: part.range,\n\t\t\t\t\t\tvalue: undefined,\n\t\t\t\t\t\tisTool: true,\n\t\t\t\t\t\ticon: ThemeIcon.isThemeIcon(tool.icon)\n\t\t\t\t\t\t\t? tool.icon\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\tfullName: tool.displayName,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst resolvedAttachedContext: IChatRequestVariableEntry[] = [];\n\t\tattachedContextVariables?.forEach((attachment, i) => {\n\t\t\tconst data = this._resolver.get(attachment.name?.toLowerCase());\n\t\t\tif (data) {\n\t\t\t\tconst references: IChatContentReference[] = [];\n\t\t\t\tconst variableProgressCallback = (\n\t\t\t\t\titem: IChatVariableResolverProgress,\n\t\t\t\t) => {\n\t\t\t\t\tif (item.kind === \"reference\") {\n\t\t\t\t\t\treferences.push(item);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tprogress(item);\n\t\t\t\t};\n\t\t\t\tjobs.push(\n\t\t\t\t\tdata\n\t\t\t\t\t\t.resolver(\n\t\t\t\t\t\t\tprompt.text,\n\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\tvariableProgressCallback,\n\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.then((value) => {\n\t\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\t\tresolvedAttachedContext[i] = {\n\t\t\t\t\t\t\t\t\tid: data.data.id,\n\t\t\t\t\t\t\t\t\tmodelDescription:\n\t\t\t\t\t\t\t\t\t\tdata.data.modelDescription,\n\t\t\t\t\t\t\t\t\tname: attachment.name,\n\t\t\t\t\t\t\t\t\tfullName: attachment.fullName,\n\t\t\t\t\t\t\t\t\trange: attachment.range,\n\t\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t\t\treferences,\n\t\t\t\t\t\t\t\t\ticon: attachment.icon,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(onUnexpectedExternalError),\n\t\t\t\t);\n\t\t\t} else if (attachment.isDynamic || attachment.isTool) {\n\t\t\t\tresolvedAttachedContext[i] = { ...attachment };\n\t\t\t}\n\t\t});\n\n\t\tawait Promise.allSettled(jobs);\n\n\t\t// Make array not sparse\n\t\tresolvedVariables =\n\t\t\tcoalesce<IChatRequestVariableEntry>(resolvedVariables);\n\n\t\t// \"reverse\", high index first so that replacement is simple\n\t\tresolvedVariables.sort((a, b) => b.range!.start - a.range!.start);\n\n\t\t// resolvedAttachedContext is a sparse array\n\t\tresolvedVariables.push(...coalesce(resolvedAttachedContext));\n\n\t\treturn {\n\t\t\tvariables: resolvedVariables,\n\t\t};\n\t}\n\n\tasync resolveVariable(\n\t\tvariableName: string,\n\t\tpromptText: string,\n\t\tmodel: IChatModel,\n\t\tprogress: (part: IChatVariableResolverProgress) => void,\n\t\ttoken: CancellationToken,\n\t): Promise<IChatRequestVariableValue | undefined> {\n\t\tconst data = this._resolver.get(variableName.toLowerCase());\n\t\tif (!data) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn await data.resolver(\n\t\t\tpromptText,\n\t\t\tundefined,\n\t\t\tmodel,\n\t\t\tprogress,\n\t\t\ttoken,\n\t\t);\n\t}\n\n\thasVariable(name: string): boolean {\n\t\treturn this._resolver.has(name.toLowerCase());\n\t}\n\n\tgetVariable(name: string): IChatVariableData | undefined {\n\t\treturn this._resolver.get(name.toLowerCase())?.data;\n\t}\n\n\tgetVariables(\n\t\tlocation: ChatAgentLocation,\n\t): Iterable<Readonly<IChatVariableData>> {\n\t\tconst all = Iterable.map(this._resolver.values(), (data) => data.data);\n\t\treturn Iterable.filter(all, (data) => {\n\t\t\t// TODO@jrieken this is improper and should be know from the variable registeration data\n\t\t\treturn (\n\t\t\t\tlocation !== ChatAgentLocation.Editor ||\n\t\t\t\t!new Set([\"selection\", \"editor\"]).has(data.name)\n\t\t\t);\n\t\t});\n\t}\n\n\tgetDynamicVariables(sessionId: string): ReadonlyArray<IDynamicVariable> {\n\t\t// This is slightly wrong... the parser pulls dynamic references from the input widget, but there is no guarantee that message came from the input here.\n\t\t// Need to ...\n\t\t// - Parser takes list of dynamic references (annoying)\n\t\t// - Or the parser is known to implicitly act on the input widget, and we need to call it before calling the chat service (maybe incompatible with the future, but easy)\n\t\tconst widget = this.chatWidgetService.getWidgetBySessionId(sessionId);\n\t\tif (!widget || !widget.viewModel || !widget.supportsFileReferences) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst model = widget.getContrib<ChatDynamicVariableModel>(\n\t\t\tChatDynamicVariableModel.ID,\n\t\t);\n\t\tif (!model) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn model.variables;\n\t}\n\n\tregisterVariable(\n\t\tdata: IChatVariableData,\n\t\tresolver: IChatVariableResolver,\n\t): IDisposable {\n\t\tconst key = data.name.toLowerCase();\n\t\tif (this._resolver.has(key)) {\n\t\t\tthrow new Error(\n\t\t\t\t`A chat variable with the name '${data.name}' already exists.`,\n\t\t\t);\n\t\t}\n\t\tthis._resolver.set(key, { data, resolver });\n\t\treturn toDisposable(() => {\n\t\t\tthis._resolver.delete(key);\n\t\t});\n\t}\n\n\tasync attachContext(\n\t\tname: string,\n\t\tvalue: string | URI | Location,\n\t\tlocation: ChatAgentLocation,\n\t) {\n\t\tif (location !== ChatAgentLocation.Panel) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst widget =\n\t\t\tthis.chatWidgetService.lastFocusedWidget ??\n\t\t\t(await showChatView(this.viewsService));\n\t\tif (!widget || !widget.viewModel) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst key = name.toLowerCase();\n\t\tif (key === \"file\" && typeof value !== \"string\") {\n\t\t\tconst uri = URI.isUri(value) ? value : value.uri;\n\t\t\tconst range = \"range\" in value ? value.range : undefined;\n\t\t\twidget\n\t\t\t\t.getContrib<ChatContextAttachments>(ChatContextAttachments.ID)\n\t\t\t\t?.setContext(false, {\n\t\t\t\t\tvalue,\n\t\t\t\t\tid: uri.toString() + (range?.toString() ?? \"\"),\n\t\t\t\t\tname: basename(uri.path),\n\t\t\t\t\tisFile: true,\n\t\t\t\t\tisDynamic: true,\n\t\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconst resolved = this._resolver.get(key);\n\t\tif (!resolved) {\n\t\t\treturn;\n\t\t}\n\n\t\twidget\n\t\t\t.getContrib<ChatContextAttachments>(ChatContextAttachments.ID)\n\t\t\t?.setContext(false, { ...resolved.data, value });\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
