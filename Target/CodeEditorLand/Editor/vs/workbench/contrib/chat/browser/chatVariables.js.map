{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/chatVariables.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { basename } from '../../../../base/common/path.js';\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { IDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Location } from '../../../../editor/common/languages.js';\nimport { IChatWidgetService, showChatView } from './chat.js';\nimport { ChatDynamicVariableModel } from './contrib/chatDynamicVariables.js';\nimport { ChatAgentLocation } from '../common/chatAgents.js';\nimport { IChatModel, IChatRequestVariableData, IChatRequestVariableEntry } from '../common/chatModel.js';\nimport { ChatRequestDynamicVariablePart, ChatRequestToolPart, ChatRequestVariablePart, IParsedChatRequest } from '../common/chatParserTypes.js';\nimport { IChatContentReference } from '../common/chatService.js';\nimport { IChatRequestVariableValue, IChatVariableData, IChatVariableResolver, IChatVariableResolverProgress, IChatVariablesService, IDynamicVariable } from '../common/chatVariables.js';\nimport { ChatContextAttachments } from './contrib/chatContextAttachments.js';\nimport { IViewsService } from '../../../services/views/common/viewsService.js';\nimport { ILanguageModelToolsService } from '../common/languageModelToolsService.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\n\ninterface IChatData {\n\tdata: IChatVariableData;\n\tresolver: IChatVariableResolver;\n}\n\nexport class ChatVariablesService implements IChatVariablesService {\n\tdeclare _serviceBrand: undefined;\n\n\tprivate _resolver = new Map<string, IChatData>();\n\n\tconstructor(\n\t\t@IChatWidgetService private readonly chatWidgetService: IChatWidgetService,\n\t\t@IViewsService private readonly viewsService: IViewsService,\n\t\t@ILanguageModelToolsService private readonly toolsService: ILanguageModelToolsService,\n\t) {\n\t}\n\n\tasync resolveVariables(prompt: IParsedChatRequest, attachedContextVariables: IChatRequestVariableEntry[] | undefined, model: IChatModel, progress: (part: IChatVariableResolverProgress) => void, token: CancellationToken): Promise<IChatRequestVariableData> {\n\t\tlet resolvedVariables: IChatRequestVariableEntry[] = [];\n\t\tconst jobs: Promise<any>[] = [];\n\n\t\tprompt.parts\n\t\t\t.forEach((part, i) => {\n\t\t\t\tif (part instanceof ChatRequestVariablePart) {\n\t\t\t\t\tconst data = this._resolver.get(part.variableName.toLowerCase());\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tconst references: IChatContentReference[] = [];\n\t\t\t\t\t\tconst variableProgressCallback = (item: IChatVariableResolverProgress) => {\n\t\t\t\t\t\t\tif (item.kind === 'reference') {\n\t\t\t\t\t\t\t\treferences.push(item);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprogress(item);\n\t\t\t\t\t\t};\n\t\t\t\t\t\tjobs.push(data.resolver(prompt.text, part.variableArg, model, variableProgressCallback, token).then(value => {\n\t\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\t\tresolvedVariables[i] = { id: data.data.id, modelDescription: data.data.modelDescription, name: part.variableName, range: part.range, value, references, fullName: data.data.fullName, icon: data.data.icon };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}).catch(onUnexpectedExternalError));\n\t\t\t\t\t}\n\t\t\t\t} else if (part instanceof ChatRequestDynamicVariablePart) {\n\t\t\t\t\tresolvedVariables[i] = { id: part.id, name: part.referenceText, range: part.range, value: part.data, };\n\t\t\t\t} else if (part instanceof ChatRequestToolPart) {\n\t\t\t\t\tconst tool = this.toolsService.getTool(part.toolId);\n\t\t\t\t\tif (tool) {\n\t\t\t\t\t\tresolvedVariables[i] = { id: part.toolId, name: part.toolName, range: part.range, value: undefined, isTool: true, icon: ThemeIcon.isThemeIcon(tool.icon) ? tool.icon : undefined, fullName: tool.displayName };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\tconst resolvedAttachedContext: IChatRequestVariableEntry[] = [];\n\t\tattachedContextVariables\n\t\t\t?.forEach((attachment, i) => {\n\t\t\t\tconst data = this._resolver.get(attachment.name?.toLowerCase());\n\t\t\t\tif (data) {\n\t\t\t\t\tconst references: IChatContentReference[] = [];\n\t\t\t\t\tconst variableProgressCallback = (item: IChatVariableResolverProgress) => {\n\t\t\t\t\t\tif (item.kind === 'reference') {\n\t\t\t\t\t\t\treferences.push(item);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprogress(item);\n\t\t\t\t\t};\n\t\t\t\t\tjobs.push(data.resolver(prompt.text, '', model, variableProgressCallback, token).then(value => {\n\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\tresolvedAttachedContext[i] = { id: data.data.id, modelDescription: data.data.modelDescription, name: attachment.name, fullName: attachment.fullName, range: attachment.range, value, references, icon: attachment.icon };\n\t\t\t\t\t\t}\n\t\t\t\t\t}).catch(onUnexpectedExternalError));\n\t\t\t\t} else if (attachment.isDynamic || attachment.isTool) {\n\t\t\t\t\tresolvedAttachedContext[i] = { ...attachment };\n\t\t\t\t}\n\t\t\t});\n\n\t\tawait Promise.allSettled(jobs);\n\n\t\t// Make array not sparse\n\t\tresolvedVariables = coalesce<IChatRequestVariableEntry>(resolvedVariables);\n\n\t\t// \"reverse\", high index first so that replacement is simple\n\t\tresolvedVariables.sort((a, b) => b.range!.start - a.range!.start);\n\n\t\t// resolvedAttachedContext is a sparse array\n\t\tresolvedVariables.push(...coalesce(resolvedAttachedContext));\n\n\n\t\treturn {\n\t\t\tvariables: resolvedVariables,\n\t\t};\n\t}\n\n\tasync resolveVariable(variableName: string, promptText: string, model: IChatModel, progress: (part: IChatVariableResolverProgress) => void, token: CancellationToken): Promise<IChatRequestVariableValue | undefined> {\n\t\tconst data = this._resolver.get(variableName.toLowerCase());\n\t\tif (!data) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn (await data.resolver(promptText, undefined, model, progress, token));\n\t}\n\n\thasVariable(name: string): boolean {\n\t\treturn this._resolver.has(name.toLowerCase());\n\t}\n\n\tgetVariable(name: string): IChatVariableData | undefined {\n\t\treturn this._resolver.get(name.toLowerCase())?.data;\n\t}\n\n\tgetVariables(location: ChatAgentLocation): Iterable<Readonly<IChatVariableData>> {\n\t\tconst all = Iterable.map(this._resolver.values(), data => data.data);\n\t\treturn Iterable.filter(all, data => {\n\t\t\t// TODO@jrieken this is improper and should be know from the variable registeration data\n\t\t\treturn location !== ChatAgentLocation.Editor || !new Set(['selection', 'editor']).has(data.name);\n\t\t});\n\t}\n\n\tgetDynamicVariables(sessionId: string): ReadonlyArray<IDynamicVariable> {\n\t\t// This is slightly wrong... the parser pulls dynamic references from the input widget, but there is no guarantee that message came from the input here.\n\t\t// Need to ...\n\t\t// - Parser takes list of dynamic references (annoying)\n\t\t// - Or the parser is known to implicitly act on the input widget, and we need to call it before calling the chat service (maybe incompatible with the future, but easy)\n\t\tconst widget = this.chatWidgetService.getWidgetBySessionId(sessionId);\n\t\tif (!widget || !widget.viewModel || !widget.supportsFileReferences) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst model = widget.getContrib<ChatDynamicVariableModel>(ChatDynamicVariableModel.ID);\n\t\tif (!model) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn model.variables;\n\t}\n\n\tregisterVariable(data: IChatVariableData, resolver: IChatVariableResolver): IDisposable {\n\t\tconst key = data.name.toLowerCase();\n\t\tif (this._resolver.has(key)) {\n\t\t\tthrow new Error(`A chat variable with the name '${data.name}' already exists.`);\n\t\t}\n\t\tthis._resolver.set(key, { data, resolver });\n\t\treturn toDisposable(() => {\n\t\t\tthis._resolver.delete(key);\n\t\t});\n\t}\n\n\tasync attachContext(name: string, value: string | URI | Location, location: ChatAgentLocation) {\n\t\tif (location !== ChatAgentLocation.Panel) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst widget = this.chatWidgetService.lastFocusedWidget ?? await showChatView(this.viewsService);\n\t\tif (!widget || !widget.viewModel) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst key = name.toLowerCase();\n\t\tif (key === 'file' && typeof value !== 'string') {\n\t\t\tconst uri = URI.isUri(value) ? value : value.uri;\n\t\t\tconst range = 'range' in value ? value.range : undefined;\n\t\t\twidget.getContrib<ChatContextAttachments>(ChatContextAttachments.ID)?.setContext(false, { value, id: uri.toString() + (range?.toString() ?? ''), name: basename(uri.path), isFile: true, isDynamic: true });\n\t\t\treturn;\n\t\t}\n\n\t\tconst resolved = this._resolver.get(key);\n\t\tif (!resolved) {\n\t\t\treturn;\n\t\t}\n\n\t\twidget.getContrib<ChatContextAttachments>(ChatContextAttachments.ID)?.setContext(false, { ...resolved.data, value });\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
