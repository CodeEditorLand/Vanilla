{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/contrib/chatContextAttachments.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { IChatWidget } from '../chat.js';\nimport { ChatWidget, IChatWidgetContrib } from '../chatWidget.js';\nimport { IChatRequestVariableEntry } from '../../common/chatModel.js';\n\nexport class ChatContextAttachments extends Disposable implements IChatWidgetContrib {\n\n\tprivate _attachedContext = new Set<IChatRequestVariableEntry>();\n\n\tpublic static readonly ID = 'chatContextAttachments';\n\n\tget id() {\n\t\treturn ChatContextAttachments.ID;\n\t}\n\n\tconstructor(readonly widget: IChatWidget) {\n\t\tsuper();\n\n\t\tthis._register(this.widget.onDidChangeContext((e) => {\n\t\t\tif (e.removed) {\n\t\t\t\tthis._removeContext(e.removed);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.widget.onDidSubmitAgent(() => {\n\t\t\tthis._clearAttachedContext();\n\t\t}));\n\t}\n\n\tgetInputState(): IChatRequestVariableEntry[] {\n\t\treturn [...this._attachedContext.values()];\n\t}\n\n\tsetInputState(s: any): void {\n\t\tif (!Array.isArray(s)) {\n\t\t\ts = [];\n\t\t}\n\n\t\tthis._attachedContext.clear();\n\t\tfor (const attachment of s) {\n\t\t\tthis._attachedContext.add(attachment);\n\t\t}\n\n\t\tthis.widget.setContext(true, ...s);\n\t}\n\n\tgetContext() {\n\t\treturn new Set([...this._attachedContext.values()].map((v) => v.id));\n\t}\n\n\tsetContext(overwrite: boolean, ...attachments: IChatRequestVariableEntry[]) {\n\t\tif (overwrite) {\n\t\t\tthis._attachedContext.clear();\n\t\t}\n\t\tfor (const attachment of attachments) {\n\t\t\tthis._attachedContext.add(attachment);\n\t\t}\n\n\t\tthis.widget.setContext(overwrite, ...attachments);\n\t}\n\n\tprivate _removeContext(attachments: IChatRequestVariableEntry[]) {\n\t\tif (attachments.length) {\n\t\t\tattachments.forEach(this._attachedContext.delete, this._attachedContext);\n\t\t}\n\t}\n\n\tprivate _clearAttachedContext() {\n\t\tthis._attachedContext.clear();\n\t}\n}\n\nChatWidget.CONTRIBS.push(ChatContextAttachments);\n"],
  "mappings": ";;AAKA,SAAS,kBAAkB;AAC3B,SAAS,mBAAmB;AAC5B,SAAS,YAAY,0BAA0B;AAC/C,SAAS,iCAAiC;AAEnC,MAAM,+BAA+B,WAAyC;AAAA,EAUpF,YAAqB,QAAqB;AACzC,UAAM;AADc;AAGpB,SAAK,UAAU,KAAK,OAAO,mBAAmB,CAAC,MAAM;AACpD,UAAI,EAAE,SAAS;AACd,aAAK,eAAe,EAAE,OAAO;AAAA,MAC9B;AAAA,IACD,CAAC,CAAC;AAEF,SAAK,UAAU,KAAK,OAAO,iBAAiB,MAAM;AACjD,WAAK,sBAAsB;AAAA,IAC5B,CAAC,CAAC;AAAA,EACH;AAAA,EAhCD,OAUqF;AAAA;AAAA;AAAA,EAE5E,mBAAmB,oBAAI,IAA+B;AAAA,EAE9D,OAAuB,KAAK;AAAA,EAE5B,IAAI,KAAK;AACR,WAAO,uBAAuB;AAAA,EAC/B;AAAA,EAgBA,gBAA6C;AAC5C,WAAO,CAAC,GAAG,KAAK,iBAAiB,OAAO,CAAC;AAAA,EAC1C;AAAA,EAEA,cAAc,GAAc;AAC3B,QAAI,CAAC,MAAM,QAAQ,CAAC,GAAG;AACtB,UAAI,CAAC;AAAA,IACN;AAEA,SAAK,iBAAiB,MAAM;AAC5B,eAAW,cAAc,GAAG;AAC3B,WAAK,iBAAiB,IAAI,UAAU;AAAA,IACrC;AAEA,SAAK,OAAO,WAAW,MAAM,GAAG,CAAC;AAAA,EAClC;AAAA,EAEA,aAAa;AACZ,WAAO,IAAI,IAAI,CAAC,GAAG,KAAK,iBAAiB,OAAO,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AAAA,EACpE;AAAA,EAEA,WAAW,cAAuB,aAA0C;AAC3E,QAAI,WAAW;AACd,WAAK,iBAAiB,MAAM;AAAA,IAC7B;AACA,eAAW,cAAc,aAAa;AACrC,WAAK,iBAAiB,IAAI,UAAU;AAAA,IACrC;AAEA,SAAK,OAAO,WAAW,WAAW,GAAG,WAAW;AAAA,EACjD;AAAA,EAEQ,eAAe,aAA0C;AAChE,QAAI,YAAY,QAAQ;AACvB,kBAAY,QAAQ,KAAK,iBAAiB,QAAQ,KAAK,gBAAgB;AAAA,IACxE;AAAA,EACD;AAAA,EAEQ,wBAAwB;AAC/B,SAAK,iBAAiB,MAAM;AAAA,EAC7B;AACD;AAEA,WAAW,SAAS,KAAK,sBAAsB;",
  "names": []
}
