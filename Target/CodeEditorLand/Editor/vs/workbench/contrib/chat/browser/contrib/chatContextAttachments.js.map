{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/contrib/chatContextAttachments.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from \"../../../../../base/common/lifecycle.js\";\nimport type { IChatRequestVariableEntry } from \"../../common/chatModel.js\";\nimport type { IChatWidget } from \"../chat.js\";\nimport { ChatWidget, type IChatWidgetContrib } from \"../chatWidget.js\";\n\nexport class ChatContextAttachments\n\textends Disposable\n\timplements IChatWidgetContrib\n{\n\tprivate _attachedContext = new Set<IChatRequestVariableEntry>();\n\n\tpublic static readonly ID = \"chatContextAttachments\";\n\n\tget id() {\n\t\treturn ChatContextAttachments.ID;\n\t}\n\n\tconstructor(readonly widget: IChatWidget) {\n\t\tsuper();\n\n\t\tthis._register(\n\t\t\tthis.widget.onDidChangeContext((e) => {\n\t\t\t\tif (e.removed) {\n\t\t\t\t\tthis._removeContext(e.removed);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.widget.onDidSubmitAgent(() => {\n\t\t\t\tthis._clearAttachedContext();\n\t\t\t}),\n\t\t);\n\t}\n\n\tgetInputState(): IChatRequestVariableEntry[] {\n\t\treturn [...this._attachedContext.values()];\n\t}\n\n\tsetInputState(s: any): void {\n\t\tif (!Array.isArray(s)) {\n\t\t\ts = [];\n\t\t}\n\n\t\tthis._attachedContext.clear();\n\t\tfor (const attachment of s) {\n\t\t\tthis._attachedContext.add(attachment);\n\t\t}\n\n\t\tthis.widget.setContext(true, ...s);\n\t}\n\n\tgetContext() {\n\t\treturn new Set([...this._attachedContext.values()].map((v) => v.id));\n\t}\n\n\tsetContext(\n\t\toverwrite: boolean,\n\t\t...attachments: IChatRequestVariableEntry[]\n\t) {\n\t\tif (overwrite) {\n\t\t\tthis._attachedContext.clear();\n\t\t}\n\t\tfor (const attachment of attachments) {\n\t\t\tthis._attachedContext.add(attachment);\n\t\t}\n\n\t\tthis.widget.setContext(overwrite, ...attachments);\n\t}\n\n\tprivate _removeContext(attachments: IChatRequestVariableEntry[]) {\n\t\tif (attachments.length) {\n\t\t\tattachments.forEach(\n\t\t\t\tthis._attachedContext.delete,\n\t\t\t\tthis._attachedContext,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _clearAttachedContext() {\n\t\tthis._attachedContext.clear();\n\t}\n}\n\nChatWidget.CONTRIBS.push(ChatContextAttachments);\n"],
  "mappings": ";;AAKA,SAAS,kBAAkB;AAG3B,SAAS,kBAA2C;AAE7C,MAAM,+BACJ,WAET;AAAA,EASC,YAAqB,QAAqB;AACzC,UAAM;AADc;AAGpB,SAAK;AAAA,MACJ,KAAK,OAAO,mBAAmB,CAAC,MAAM;AACrC,YAAI,EAAE,SAAS;AACd,eAAK,eAAe,EAAE,OAAO;AAAA,QAC9B;AAAA,MACD,CAAC;AAAA,IACF;AAEA,SAAK;AAAA,MACJ,KAAK,OAAO,iBAAiB,MAAM;AAClC,aAAK,sBAAsB;AAAA,MAC5B,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAtCD,OAaA;AAAA;AAAA;AAAA,EACS,mBAAmB,oBAAI,IAA+B;AAAA,EAE9D,OAAuB,KAAK;AAAA,EAE5B,IAAI,KAAK;AACR,WAAO,uBAAuB;AAAA,EAC/B;AAAA,EAoBA,gBAA6C;AAC5C,WAAO,CAAC,GAAG,KAAK,iBAAiB,OAAO,CAAC;AAAA,EAC1C;AAAA,EAEA,cAAc,GAAc;AAC3B,QAAI,CAAC,MAAM,QAAQ,CAAC,GAAG;AACtB,UAAI,CAAC;AAAA,IACN;AAEA,SAAK,iBAAiB,MAAM;AAC5B,eAAW,cAAc,GAAG;AAC3B,WAAK,iBAAiB,IAAI,UAAU;AAAA,IACrC;AAEA,SAAK,OAAO,WAAW,MAAM,GAAG,CAAC;AAAA,EAClC;AAAA,EAEA,aAAa;AACZ,WAAO,IAAI,IAAI,CAAC,GAAG,KAAK,iBAAiB,OAAO,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AAAA,EACpE;AAAA,EAEA,WACC,cACG,aACF;AACD,QAAI,WAAW;AACd,WAAK,iBAAiB,MAAM;AAAA,IAC7B;AACA,eAAW,cAAc,aAAa;AACrC,WAAK,iBAAiB,IAAI,UAAU;AAAA,IACrC;AAEA,SAAK,OAAO,WAAW,WAAW,GAAG,WAAW;AAAA,EACjD;AAAA,EAEQ,eAAe,aAA0C;AAChE,QAAI,YAAY,QAAQ;AACvB,kBAAY;AAAA,QACX,KAAK,iBAAiB;AAAA,QACtB,KAAK;AAAA,MACN;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,wBAAwB;AAC/B,SAAK,iBAAiB,MAAM;AAAA,EAC7B;AACD;AAEA,WAAW,SAAS,KAAK,sBAAsB;",
  "names": []
}
