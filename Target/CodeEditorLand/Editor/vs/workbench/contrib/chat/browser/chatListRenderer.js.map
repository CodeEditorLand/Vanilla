{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/chatListRenderer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport { renderFormattedText } from \"../../../../base/browser/formattedTextRenderer.js\";\nimport { StandardKeyboardEvent } from \"../../../../base/browser/keyboardEvent.js\";\nimport type { IActionViewItemOptions } from \"../../../../base/browser/ui/actionbar/actionViewItems.js\";\nimport {\n\tDropdownMenuActionViewItem,\n\ttype IDropdownMenuActionViewItemOptions,\n} from \"../../../../base/browser/ui/dropdown/dropdownActionViewItem.js\";\nimport { getDefaultHoverDelegate } from \"../../../../base/browser/ui/hover/hoverDelegateFactory.js\";\nimport type { IListVirtualDelegate } from \"../../../../base/browser/ui/list/list.js\";\nimport type {\n\tITreeNode,\n\tITreeRenderer,\n} from \"../../../../base/browser/ui/tree/tree.js\";\nimport type { IAction } from \"../../../../base/common/actions.js\";\nimport { coalesce, distinct } from \"../../../../base/common/arrays.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { Emitter, type Event } from \"../../../../base/common/event.js\";\nimport type { FuzzyScore } from \"../../../../base/common/filters.js\";\nimport {\n\ttype IMarkdownString,\n\tMarkdownString,\n} from \"../../../../base/common/htmlContent.js\";\nimport { KeyCode } from \"../../../../base/common/keyCodes.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\tdispose,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { ResourceMap } from \"../../../../base/common/map.js\";\nimport { FileAccess } from \"../../../../base/common/network.js\";\nimport { clamp } from \"../../../../base/common/numbers.js\";\nimport { autorun } from \"../../../../base/common/observable.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport type { MarkdownRenderer } from \"../../../../editor/browser/widget/markdownRenderer/browser/markdownRenderer.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\ttype IMenuEntryActionViewItemOptions,\n\tcreateActionViewItem,\n} from \"../../../../platform/actions/browser/menuEntryActionViewItem.js\";\nimport { MenuWorkbenchToolBar } from \"../../../../platform/actions/browser/toolbar.js\";\nimport {\n\tMenuId,\n\tMenuItemAction,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextMenuService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ServiceCollection } from \"../../../../platform/instantiation/common/serviceCollection.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { ColorScheme } from \"../../../../platform/theme/common/theme.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport { IWorkbenchIssueService } from \"../../issue/common/issue.js\";\nimport { annotateSpecialMarkdownContent } from \"../common/annotations.js\";\nimport type {\n\tChatAgentLocation,\n\tIChatAgentMetadata,\n} from \"../common/chatAgents.js\";\nimport {\n\tCONTEXT_CHAT_RESPONSE_SUPPORT_ISSUE_REPORTING,\n\tCONTEXT_REQUEST,\n\tCONTEXT_RESPONSE,\n\tCONTEXT_RESPONSE_DETECTED_AGENT_COMMAND,\n\tCONTEXT_RESPONSE_ERROR,\n\tCONTEXT_RESPONSE_FILTERED,\n\tCONTEXT_RESPONSE_VOTE,\n} from \"../common/chatContextKeys.js\";\nimport type {\n\tIChatRequestVariableEntry,\n\tIChatTextEditGroup,\n} from \"../common/chatModel.js\";\nimport { chatSubcommandLeader } from \"../common/chatParserTypes.js\";\nimport {\n\tChatAgentVoteDirection,\n\tChatAgentVoteDownReason,\n\ttype IChatConfirmation,\n\ttype IChatContentReference,\n\ttype IChatFollowup,\n\ttype IChatTask,\n\ttype IChatTreeData,\n} from \"../common/chatService.js\";\nimport {\n\ttype IChatCodeCitations,\n\ttype IChatReferences,\n\ttype IChatRendererContent,\n\ttype IChatRequestViewModel,\n\ttype IChatResponseViewModel,\n\ttype IChatWelcomeMessageViewModel,\n\tisRequestVM,\n\tisResponseVM,\n\tisWelcomeVM,\n} from \"../common/chatViewModel.js\";\nimport { getNWords } from \"../common/chatWordCounter.js\";\nimport type { CodeBlockModelCollection } from \"../common/codeBlockModelCollection.js\";\nimport { MarkUnhelpfulActionId } from \"./actions/chatTitleActions.js\";\nimport {\n\ttype ChatTreeItem,\n\tGeneratingPhrase,\n\ttype IChatCodeBlockInfo,\n\ttype IChatFileTreeInfo,\n\ttype IChatListItemRendererOptions,\n} from \"./chat.js\";\nimport { ChatAgentHover, getChatAgentHoverOptions } from \"./chatAgentHover.js\";\nimport { ChatAttachmentsContentPart } from \"./chatContentParts/chatAttachmentsContentPart.js\";\nimport { ChatCodeCitationContentPart } from \"./chatContentParts/chatCodeCitationContentPart.js\";\nimport { ChatCommandButtonContentPart } from \"./chatContentParts/chatCommandContentPart.js\";\nimport { ChatConfirmationContentPart } from \"./chatContentParts/chatConfirmationContentPart.js\";\nimport type {\n\tIChatContentPart,\n\tIChatContentPartRenderContext,\n} from \"./chatContentParts/chatContentParts.js\";\nimport {\n\tChatMarkdownContentPart,\n\tEditorPool,\n} from \"./chatContentParts/chatMarkdownContentPart.js\";\nimport { ChatProgressContentPart } from \"./chatContentParts/chatProgressContentPart.js\";\nimport {\n\tChatCollapsibleListContentPart,\n\tCollapsibleListPool,\n} from \"./chatContentParts/chatReferencesContentPart.js\";\nimport { ChatTaskContentPart } from \"./chatContentParts/chatTaskContentPart.js\";\nimport {\n\tChatTextEditContentPart,\n\tDiffEditorPool,\n} from \"./chatContentParts/chatTextEditContentPart.js\";\nimport {\n\tChatTreeContentPart,\n\tTreePool,\n} from \"./chatContentParts/chatTreeContentPart.js\";\nimport { ChatWarningContentPart } from \"./chatContentParts/chatWarningContentPart.js\";\nimport { ChatFollowups } from \"./chatFollowups.js\";\nimport { ChatMarkdownDecorationsRenderer } from \"./chatMarkdownDecorationsRenderer.js\";\nimport { ChatMarkdownRenderer } from \"./chatMarkdownRenderer.js\";\nimport type { ChatEditorOptions } from \"./chatOptions.js\";\nimport {\n\tChatCodeBlockContentProvider,\n\ttype CodeBlockPart,\n} from \"./codeBlockPart.js\";\n\nconst $ = dom.$;\n\ninterface IChatListItemTemplate {\n\tcurrentElement?: ChatTreeItem;\n\trenderedParts?: IChatContentPart[];\n\treadonly rowContainer: HTMLElement;\n\treadonly titleToolbar?: MenuWorkbenchToolBar;\n\treadonly avatarContainer: HTMLElement;\n\treadonly username: HTMLElement;\n\treadonly detail: HTMLElement;\n\treadonly value: HTMLElement;\n\treadonly contextKeyService: IContextKeyService;\n\treadonly instantiationService: IInstantiationService;\n\treadonly templateDisposables: IDisposable;\n\treadonly elementDisposables: DisposableStore;\n\treadonly agentHover: ChatAgentHover;\n}\n\ninterface IItemHeightChangeParams {\n\telement: ChatTreeItem;\n\theight: number;\n}\n\nconst forceVerboseLayoutTracing = false;\n// || Boolean(\"TRUE\") // causes a linter warning so that it cannot be pushed\n\nexport interface IChatRendererDelegate {\n\tgetListLength(): number;\n\n\treadonly onDidScroll?: Event<void>;\n}\n\nexport class ChatListItemRenderer\n\textends Disposable\n\timplements ITreeRenderer<ChatTreeItem, FuzzyScore, IChatListItemTemplate>\n{\n\tstatic readonly ID = \"item\";\n\n\tprivate readonly codeBlocksByResponseId = new Map<\n\t\tstring,\n\t\tIChatCodeBlockInfo[]\n\t>();\n\tprivate readonly codeBlocksByEditorUri =\n\t\tnew ResourceMap<IChatCodeBlockInfo>();\n\n\tprivate readonly fileTreesByResponseId = new Map<\n\t\tstring,\n\t\tIChatFileTreeInfo[]\n\t>();\n\tprivate readonly focusedFileTreesByResponseId = new Map<string, number>();\n\n\tprivate readonly renderer: MarkdownRenderer;\n\tprivate readonly markdownDecorationsRenderer: ChatMarkdownDecorationsRenderer;\n\n\tprotected readonly _onDidClickFollowup = this._register(\n\t\tnew Emitter<IChatFollowup>(),\n\t);\n\treadonly onDidClickFollowup: Event<IChatFollowup> =\n\t\tthis._onDidClickFollowup.event;\n\n\tprivate readonly _onDidClickRerunWithAgentOrCommandDetection =\n\t\tnew Emitter<IChatResponseViewModel>();\n\treadonly onDidClickRerunWithAgentOrCommandDetection: Event<IChatResponseViewModel> =\n\t\tthis._onDidClickRerunWithAgentOrCommandDetection.event;\n\n\tprotected readonly _onDidChangeItemHeight = this._register(\n\t\tnew Emitter<IItemHeightChangeParams>(),\n\t);\n\treadonly onDidChangeItemHeight: Event<IItemHeightChangeParams> =\n\t\tthis._onDidChangeItemHeight.event;\n\n\tprivate readonly _editorPool: EditorPool;\n\tprivate readonly _diffEditorPool: DiffEditorPool;\n\tprivate readonly _treePool: TreePool;\n\tprivate readonly _contentReferencesListPool: CollapsibleListPool;\n\n\tprivate _currentLayoutWidth = 0;\n\tprivate _isVisible = true;\n\tprivate _onDidChangeVisibility = this._register(new Emitter<boolean>());\n\n\tconstructor(\n\t\teditorOptions: ChatEditorOptions,\n\t\tprivate readonly location: ChatAgentLocation,\n\t\tprivate readonly rendererOptions: IChatListItemRendererOptions,\n\t\tprivate readonly delegate: IChatRendererDelegate,\n\t\tprivate readonly codeBlockModelCollection: CodeBlockModelCollection,\n\t\toverflowWidgetsDomNode: HTMLElement | undefined,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IConfigurationService configService: IConfigurationService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t) {\n\t\tsuper();\n\n\t\tthis.renderer = this._register(this.instantiationService.createInstance(ChatMarkdownRenderer, undefined));\n\t\tthis.markdownDecorationsRenderer = this.instantiationService.createInstance(ChatMarkdownDecorationsRenderer);\n\t\tthis._editorPool = this._register(this.instantiationService.createInstance(EditorPool, editorOptions, delegate, overflowWidgetsDomNode));\n\t\tthis._diffEditorPool = this._register(this.instantiationService.createInstance(DiffEditorPool, editorOptions, delegate, overflowWidgetsDomNode));\n\t\tthis._treePool = this._register(this.instantiationService.createInstance(TreePool, this._onDidChangeVisibility.event));\n\t\tthis._contentReferencesListPool = this._register(this.instantiationService.createInstance(CollapsibleListPool, this._onDidChangeVisibility.event));\n\n\t\tthis._register(this.instantiationService.createInstance(ChatCodeBlockContentProvider));\n\t}\n\n\tget templateId(): string {\n\t\treturn ChatListItemRenderer.ID;\n\t}\n\n\teditorsInUse(): Iterable<CodeBlockPart> {\n\t\treturn this._editorPool.inUse();\n\t}\n\n\tprivate traceLayout(method: string, message: string) {\n\t\tif (forceVerboseLayoutTracing) {\n\t\t\tthis.logService.info(`ChatListItemRenderer#${method}: ${message}`);\n\t\t} else {\n\t\t\tthis.logService.trace(`ChatListItemRenderer#${method}: ${message}`);\n\t\t}\n\t}\n\n\t/**\n\t * Compute a rate to render at in words/s.\n\t */\n\tprivate getProgressiveRenderRate(element: IChatResponseViewModel): number {\n\t\tif (element.isComplete) {\n\t\t\treturn 80;\n\t\t}\n\n\t\tif (\n\t\t\telement.contentUpdateTimings &&\n\t\t\telement.contentUpdateTimings.impliedWordLoadRate\n\t\t) {\n\t\t\tconst minRate = 5;\n\t\t\tconst maxRate = 80;\n\n\t\t\tconst rate = element.contentUpdateTimings.impliedWordLoadRate;\n\t\t\treturn clamp(rate, minRate, maxRate);\n\t\t}\n\n\t\treturn 8;\n\t}\n\n\tgetCodeBlockInfosForResponse(\n\t\tresponse: IChatResponseViewModel,\n\t): IChatCodeBlockInfo[] {\n\t\tconst codeBlocks = this.codeBlocksByResponseId.get(response.id);\n\t\treturn codeBlocks ?? [];\n\t}\n\n\tgetCodeBlockInfoForEditor(uri: URI): IChatCodeBlockInfo | undefined {\n\t\treturn this.codeBlocksByEditorUri.get(uri);\n\t}\n\n\tgetFileTreeInfosForResponse(\n\t\tresponse: IChatResponseViewModel,\n\t): IChatFileTreeInfo[] {\n\t\tconst fileTrees = this.fileTreesByResponseId.get(response.id);\n\t\treturn fileTrees ?? [];\n\t}\n\n\tgetLastFocusedFileTreeForResponse(\n\t\tresponse: IChatResponseViewModel,\n\t): IChatFileTreeInfo | undefined {\n\t\tconst fileTrees = this.fileTreesByResponseId.get(response.id);\n\t\tconst lastFocusedFileTreeIndex = this.focusedFileTreesByResponseId.get(\n\t\t\tresponse.id,\n\t\t);\n\t\tif (\n\t\t\tfileTrees?.length &&\n\t\t\tlastFocusedFileTreeIndex !== undefined &&\n\t\t\tlastFocusedFileTreeIndex < fileTrees.length\n\t\t) {\n\t\t\treturn fileTrees[lastFocusedFileTreeIndex];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tsetVisible(visible: boolean): void {\n\t\tthis._isVisible = visible;\n\t\tthis._onDidChangeVisibility.fire(visible);\n\t}\n\n\tlayout(width: number): void {\n\t\tthis._currentLayoutWidth =\n\t\t\twidth - (this.rendererOptions.noPadding ? 0 : 40); // padding\n\t\tfor (const editor of this._editorPool.inUse()) {\n\t\t\teditor.layout(this._currentLayoutWidth);\n\t\t}\n\t\tfor (const diffEditor of this._diffEditorPool.inUse()) {\n\t\t\tdiffEditor.layout(this._currentLayoutWidth);\n\t\t}\n\t}\n\n\trenderTemplate(container: HTMLElement): IChatListItemTemplate {\n\t\tconst templateDisposables = new DisposableStore();\n\t\tconst rowContainer = dom.append(\n\t\t\tcontainer,\n\t\t\t$(\".interactive-item-container\"),\n\t\t);\n\t\tif (this.rendererOptions.renderStyle === \"compact\") {\n\t\t\trowContainer.classList.add(\"interactive-item-compact\");\n\t\t}\n\t\tif (this.rendererOptions.noPadding) {\n\t\t\trowContainer.classList.add(\"no-padding\");\n\t\t}\n\n\t\tlet headerParent = rowContainer;\n\t\tlet valueParent = rowContainer;\n\t\tlet detailContainerParent: HTMLElement | undefined;\n\t\tlet toolbarParent: HTMLElement | undefined;\n\n\t\tif (this.rendererOptions.renderStyle === \"minimal\") {\n\t\t\trowContainer.classList.add(\"interactive-item-compact\");\n\t\t\trowContainer.classList.add(\"minimal\");\n\t\t\t// -----------------------------------------------------\n\t\t\t//  icon | details\n\t\t\t//       | references\n\t\t\t//       | value\n\t\t\t// -----------------------------------------------------\n\t\t\tconst lhsContainer = dom.append(rowContainer, $(\".column.left\"));\n\t\t\tconst rhsContainer = dom.append(rowContainer, $(\".column.right\"));\n\n\t\t\theaderParent = lhsContainer;\n\t\t\tdetailContainerParent = rhsContainer;\n\t\t\tvalueParent = rhsContainer;\n\t\t\ttoolbarParent = dom.append(rowContainer, $(\".header\"));\n\t\t}\n\n\t\tconst header = dom.append(headerParent, $(\".header\"));\n\t\tconst user = dom.append(header, $(\".user\"));\n\t\tuser.tabIndex = 0;\n\t\tuser.role = \"toolbar\";\n\t\tconst avatarContainer = dom.append(user, $(\".avatar-container\"));\n\t\tconst username = dom.append(user, $(\"h3.username\"));\n\t\tconst detailContainer = dom.append(\n\t\t\tdetailContainerParent ?? user,\n\t\t\t$(\"span.detail-container\"),\n\t\t);\n\t\tconst detail = dom.append(detailContainer, $(\"span.detail\"));\n\t\tdom.append(detailContainer, $(\"span.chat-animated-ellipsis\"));\n\t\tconst value = dom.append(valueParent, $(\".value\"));\n\t\tconst elementDisposables = new DisposableStore();\n\n\t\tconst contextKeyService = templateDisposables.add(\n\t\t\tthis.contextKeyService.createScoped(rowContainer),\n\t\t);\n\t\tconst scopedInstantiationService = templateDisposables.add(\n\t\t\tthis.instantiationService.createChild(\n\t\t\t\tnew ServiceCollection([IContextKeyService, contextKeyService]),\n\t\t\t),\n\t\t);\n\n\t\tlet titleToolbar: MenuWorkbenchToolBar | undefined;\n\t\tif (this.rendererOptions.noHeader) {\n\t\t\theader.classList.add(\"hidden\");\n\t\t} else {\n\t\t\ttitleToolbar = templateDisposables.add(\n\t\t\t\tscopedInstantiationService.createInstance(\n\t\t\t\t\tMenuWorkbenchToolBar,\n\t\t\t\t\ttoolbarParent ?? header,\n\t\t\t\t\tMenuId.ChatMessageTitle,\n\t\t\t\t\t{\n\t\t\t\t\t\tmenuOptions: {\n\t\t\t\t\t\t\tshouldForwardArgs: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttoolbarOptions: {\n\t\t\t\t\t\t\tshouldInlineSubmenu: (submenu) =>\n\t\t\t\t\t\t\t\tsubmenu.actions.length <= 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tactionViewItemProvider: (\n\t\t\t\t\t\t\taction: IAction,\n\t\t\t\t\t\t\toptions: IActionViewItemOptions,\n\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\taction instanceof MenuItemAction &&\n\t\t\t\t\t\t\t\taction.item.id === MarkUnhelpfulActionId\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn scopedInstantiationService.createInstance(\n\t\t\t\t\t\t\t\t\tChatVoteDownButton,\n\t\t\t\t\t\t\t\t\taction,\n\t\t\t\t\t\t\t\t\toptions as IMenuEntryActionViewItemOptions,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn createActionViewItem(\n\t\t\t\t\t\t\t\tscopedInstantiationService,\n\t\t\t\t\t\t\t\taction,\n\t\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tconst agentHover = templateDisposables.add(\n\t\t\tthis.instantiationService.createInstance(ChatAgentHover),\n\t\t);\n\t\tconst hoverContent = () => {\n\t\t\tif (\n\t\t\t\tisResponseVM(template.currentElement) &&\n\t\t\t\ttemplate.currentElement.agent &&\n\t\t\t\t!template.currentElement.agent.isDefault\n\t\t\t) {\n\t\t\t\tagentHover.setAgent(template.currentElement.agent.id);\n\t\t\t\treturn agentHover.domNode;\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t};\n\t\tconst hoverOptions = getChatAgentHoverOptions(\n\t\t\t() =>\n\t\t\t\tisResponseVM(template.currentElement)\n\t\t\t\t\t? template.currentElement.agent\n\t\t\t\t\t: undefined,\n\t\t\tthis.commandService,\n\t\t);\n\t\ttemplateDisposables.add(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"element\"),\n\t\t\t\tuser,\n\t\t\t\thoverContent,\n\t\t\t\thoverOptions,\n\t\t\t),\n\t\t);\n\t\ttemplateDisposables.add(\n\t\t\tdom.addDisposableListener(user, dom.EventType.KEY_DOWN, (e) => {\n\t\t\t\tconst ev = new StandardKeyboardEvent(e);\n\t\t\t\tif (ev.equals(KeyCode.Space) || ev.equals(KeyCode.Enter)) {\n\t\t\t\t\tconst content = hoverContent();\n\t\t\t\t\tif (content) {\n\t\t\t\t\t\tthis.hoverService.showHover(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontent,\n\t\t\t\t\t\t\t\ttarget: user,\n\t\t\t\t\t\t\t\ttrapFocus: true,\n\t\t\t\t\t\t\t\tactions: hoverOptions.actions,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (ev.equals(KeyCode.Escape)) {\n\t\t\t\t\tthis.hoverService.hideHover();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tconst template: IChatListItemTemplate = {\n\t\t\tavatarContainer,\n\t\t\tusername,\n\t\t\tdetail,\n\t\t\tvalue,\n\t\t\trowContainer,\n\t\t\telementDisposables,\n\t\t\ttemplateDisposables,\n\t\t\tcontextKeyService,\n\t\t\tinstantiationService: scopedInstantiationService,\n\t\t\tagentHover,\n\t\t\ttitleToolbar,\n\t\t};\n\t\treturn template;\n\t}\n\n\trenderElement(\n\t\tnode: ITreeNode<ChatTreeItem, FuzzyScore>,\n\t\tindex: number,\n\t\ttemplateData: IChatListItemTemplate,\n\t): void {\n\t\tthis.renderChatTreeItem(node.element, index, templateData);\n\t}\n\n\trenderChatTreeItem(\n\t\telement: ChatTreeItem,\n\t\tindex: number,\n\t\ttemplateData: IChatListItemTemplate,\n\t): void {\n\t\ttemplateData.currentElement = element;\n\t\tconst kind = isRequestVM(element)\n\t\t\t? \"request\"\n\t\t\t: isResponseVM(element)\n\t\t\t\t? \"response\"\n\t\t\t\t: \"welcome\";\n\t\tthis.traceLayout(\"renderElement\", `${kind}, index=${index}`);\n\n\t\tCONTEXT_RESPONSE.bindTo(templateData.contextKeyService).set(\n\t\t\tisResponseVM(element),\n\t\t);\n\t\tCONTEXT_REQUEST.bindTo(templateData.contextKeyService).set(\n\t\t\tisRequestVM(element),\n\t\t);\n\t\tCONTEXT_RESPONSE_DETECTED_AGENT_COMMAND.bindTo(\n\t\t\ttemplateData.contextKeyService,\n\t\t).set(isResponseVM(element) && element.agentOrSlashCommandDetected);\n\t\tif (isResponseVM(element)) {\n\t\t\tCONTEXT_CHAT_RESPONSE_SUPPORT_ISSUE_REPORTING.bindTo(\n\t\t\t\ttemplateData.contextKeyService,\n\t\t\t).set(!!element.agent?.metadata.supportIssueReporting);\n\t\t\tCONTEXT_RESPONSE_VOTE.bindTo(templateData.contextKeyService).set(\n\t\t\t\telement.vote === ChatAgentVoteDirection.Up\n\t\t\t\t\t? \"up\"\n\t\t\t\t\t: element.vote === ChatAgentVoteDirection.Down\n\t\t\t\t\t\t? \"down\"\n\t\t\t\t\t\t: \"\",\n\t\t\t);\n\t\t} else {\n\t\t\tCONTEXT_RESPONSE_VOTE.bindTo(templateData.contextKeyService).set(\n\t\t\t\t\"\",\n\t\t\t);\n\t\t}\n\n\t\tif (templateData.titleToolbar) {\n\t\t\ttemplateData.titleToolbar.context = element;\n\t\t}\n\n\t\tCONTEXT_RESPONSE_ERROR.bindTo(templateData.contextKeyService).set(\n\t\t\tisResponseVM(element) && !!element.errorDetails,\n\t\t);\n\t\tconst isFiltered = !!(\n\t\t\tisResponseVM(element) && element.errorDetails?.responseIsFiltered\n\t\t);\n\t\tCONTEXT_RESPONSE_FILTERED.bindTo(templateData.contextKeyService).set(\n\t\t\tisFiltered,\n\t\t);\n\n\t\ttemplateData.rowContainer.classList.toggle(\n\t\t\t\"interactive-request\",\n\t\t\tisRequestVM(element),\n\t\t);\n\t\ttemplateData.rowContainer.classList.toggle(\n\t\t\t\"interactive-response\",\n\t\t\tisResponseVM(element),\n\t\t);\n\t\ttemplateData.rowContainer.classList.toggle(\n\t\t\t\"interactive-welcome\",\n\t\t\tisWelcomeVM(element),\n\t\t);\n\t\ttemplateData.rowContainer.classList.toggle(\n\t\t\t\"show-detail-progress\",\n\t\t\tisResponseVM(element) &&\n\t\t\t\t!element.isComplete &&\n\t\t\t\t!element.progressMessages.length,\n\t\t);\n\t\ttemplateData.username.textContent = element.username;\n\t\tif (!this.rendererOptions.noHeader) {\n\t\t\tthis.renderAvatar(element, templateData);\n\t\t}\n\n\t\tdom.clearNode(templateData.detail);\n\t\tif (isResponseVM(element)) {\n\t\t\tthis.renderDetail(element, templateData);\n\t\t}\n\n\t\tif (isRequestVM(element) && element.confirmation) {\n\t\t\tthis.renderConfirmationAction(element, templateData);\n\t\t}\n\n\t\t// Do a progressive render if\n\t\t// - This the last response in the list\n\t\t// - And it has some content\n\t\t// - And the response is not complete\n\t\t//   - Or, we previously started a progressive rendering of this element (if the element is complete, we will finish progressive rendering with a very fast rate)\n\t\tif (\n\t\t\tisResponseVM(element) &&\n\t\t\tindex === this.delegate.getListLength() - 1 &&\n\t\t\t(!element.isComplete || element.renderData) &&\n\t\t\telement.response.value.length\n\t\t) {\n\t\t\tthis.traceLayout(\n\t\t\t\t\"renderElement\",\n\t\t\t\t`start progressive render ${kind}, index=${index}`,\n\t\t\t);\n\n\t\t\tconst timer = templateData.elementDisposables.add(\n\t\t\t\tnew dom.WindowIntervalTimer(),\n\t\t\t);\n\t\t\tconst runProgressiveRender = (initial?: boolean) => {\n\t\t\t\ttry {\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.doNextProgressiveRender(\n\t\t\t\t\t\t\telement,\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\ttemplateData,\n\t\t\t\t\t\t\t!!initial,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\ttimer.cancel();\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Kill the timer if anything went wrong, avoid getting stuck in a nasty rendering loop.\n\t\t\t\t\ttimer.cancel();\n\t\t\t\t\tthis.logService.error(err);\n\t\t\t\t}\n\t\t\t};\n\t\t\ttimer.cancelAndSet(\n\t\t\t\trunProgressiveRender,\n\t\t\t\t50,\n\t\t\t\tdom.getWindow(templateData.rowContainer),\n\t\t\t);\n\t\t\trunProgressiveRender(true);\n\t\t} else if (isResponseVM(element)) {\n\t\t\tthis.basicRenderElement(element, index, templateData);\n\t\t} else if (isRequestVM(element)) {\n\t\t\tthis.basicRenderElement(element, index, templateData);\n\t\t} else {\n\t\t\tthis.renderWelcomeMessage(element, templateData);\n\t\t}\n\t}\n\n\tprivate renderDetail(\n\t\telement: IChatResponseViewModel,\n\t\ttemplateData: IChatListItemTemplate,\n\t): void {\n\t\ttemplateData.elementDisposables.add(\n\t\t\tautorun((reader) => {\n\t\t\t\tthis._renderDetail(element, templateData);\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate _renderDetail(\n\t\telement: IChatResponseViewModel,\n\t\ttemplateData: IChatListItemTemplate,\n\t): void {\n\t\tdom.clearNode(templateData.detail);\n\n\t\tif (element.agentOrSlashCommandDetected) {\n\t\t\tconst msg = element.slashCommand\n\t\t\t\t? localize(\n\t\t\t\t\t\t\"usedAgentSlashCommand\",\n\t\t\t\t\t\t\"used {0} [[(rerun without)]]\",\n\t\t\t\t\t\t`${chatSubcommandLeader}${element.slashCommand.name}`,\n\t\t\t\t\t)\n\t\t\t\t: localize(\"usedAgent\", \"[[(rerun without)]]\");\n\t\t\tdom.reset(\n\t\t\t\ttemplateData.detail,\n\t\t\t\trenderFormattedText(msg, {\n\t\t\t\t\tclassName: \"agentOrSlashCommandDetected\",\n\t\t\t\t\tinline: true,\n\t\t\t\t\tactionHandler: {\n\t\t\t\t\t\tdisposables: templateData.elementDisposables,\n\t\t\t\t\t\tcallback: (content) => {\n\t\t\t\t\t\t\tthis._onDidClickRerunWithAgentOrCommandDetection.fire(\n\t\t\t\t\t\t\t\telement,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t} else if (!element.isComplete) {\n\t\t\ttemplateData.detail.textContent = GeneratingPhrase;\n\t\t}\n\t}\n\n\tprivate renderConfirmationAction(\n\t\telement: IChatRequestViewModel,\n\t\ttemplateData: IChatListItemTemplate,\n\t) {\n\t\tdom.clearNode(templateData.detail);\n\t\tif (element.confirmation) {\n\t\t\ttemplateData.detail.textContent = localize(\n\t\t\t\t\"chatConfirmationAction\",\n\t\t\t\t'selected \"{0}\"',\n\t\t\t\telement.confirmation,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate renderAvatar(\n\t\telement: ChatTreeItem,\n\t\ttemplateData: IChatListItemTemplate,\n\t): void {\n\t\tconst icon = isResponseVM(element)\n\t\t\t? this.getAgentIcon(element.agent?.metadata)\n\t\t\t: (element.avatarIcon ?? Codicon.account);\n\t\tif (icon instanceof URI) {\n\t\t\tconst avatarIcon = dom.$<HTMLImageElement>(\"img.icon\");\n\t\t\tavatarIcon.src = FileAccess.uriToBrowserUri(icon).toString(true);\n\t\t\ttemplateData.avatarContainer.replaceChildren(\n\t\t\t\tdom.$(\".avatar\", undefined, avatarIcon),\n\t\t\t);\n\t\t} else {\n\t\t\tconst avatarIcon = dom.$(ThemeIcon.asCSSSelector(icon));\n\t\t\ttemplateData.avatarContainer.replaceChildren(\n\t\t\t\tdom.$(\".avatar.codicon-avatar\", undefined, avatarIcon),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate getAgentIcon(\n\t\tagent: IChatAgentMetadata | undefined,\n\t): URI | ThemeIcon {\n\t\tif (agent?.themeIcon) {\n\t\t\treturn agent.themeIcon;\n\t\t} else if (\n\t\t\tagent?.iconDark &&\n\t\t\tthis.themeService.getColorTheme().type === ColorScheme.DARK\n\t\t) {\n\t\t\treturn agent.iconDark;\n\t\t} else if (agent?.icon) {\n\t\t\treturn agent.icon;\n\t\t} else {\n\t\t\treturn Codicon.copilot;\n\t\t}\n\t}\n\n\tprivate basicRenderElement(\n\t\telement: ChatTreeItem,\n\t\tindex: number,\n\t\ttemplateData: IChatListItemTemplate,\n\t) {\n\t\tlet value: IChatRendererContent[] = [];\n\t\tif (isRequestVM(element) && !element.confirmation) {\n\t\t\tconst markdown =\n\t\t\t\t\"message\" in element.message\n\t\t\t\t\t? element.message.message\n\t\t\t\t\t: this.markdownDecorationsRenderer.convertParsedRequestToMarkdown(\n\t\t\t\t\t\t\telement.message,\n\t\t\t\t\t\t);\n\t\t\tvalue = [\n\t\t\t\t{\n\t\t\t\t\tcontent: new MarkdownString(markdown),\n\t\t\t\t\tkind: \"markdownContent\",\n\t\t\t\t},\n\t\t\t];\n\t\t} else if (isResponseVM(element)) {\n\t\t\tif (element.contentReferences.length) {\n\t\t\t\tvalue.push({\n\t\t\t\t\tkind: \"references\",\n\t\t\t\t\treferences: element.contentReferences,\n\t\t\t\t});\n\t\t\t}\n\t\t\tvalue.push(\n\t\t\t\t...annotateSpecialMarkdownContent(element.response.value),\n\t\t\t);\n\t\t\tif (element.codeCitations.length) {\n\t\t\t\tvalue.push({\n\t\t\t\t\tkind: \"codeCitations\",\n\t\t\t\t\tcitations: element.codeCitations,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tdom.clearNode(templateData.value);\n\n\t\tif (isResponseVM(element)) {\n\t\t\tthis.renderDetail(element, templateData);\n\t\t}\n\n\t\tconst isFiltered = !!(\n\t\t\tisResponseVM(element) && element.errorDetails?.responseIsFiltered\n\t\t);\n\n\t\tconst parts: IChatContentPart[] = [];\n\t\tif (!isFiltered) {\n\t\t\tvalue.forEach((data, index) => {\n\t\t\t\tconst context: IChatContentPartRenderContext = {\n\t\t\t\t\telement,\n\t\t\t\t\tindex,\n\t\t\t\t\tcontent: value,\n\t\t\t\t\tpreceedingContentParts: parts,\n\t\t\t\t};\n\t\t\t\tconst newPart = this.renderChatContentPart(\n\t\t\t\t\tdata,\n\t\t\t\t\ttemplateData,\n\t\t\t\t\tcontext,\n\t\t\t\t);\n\t\t\t\tif (newPart) {\n\t\t\t\t\ttemplateData.value.appendChild(newPart.domNode);\n\t\t\t\t\tparts.push(newPart);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (templateData.renderedParts) {\n\t\t\tdispose(templateData.renderedParts);\n\t\t}\n\t\ttemplateData.renderedParts = parts;\n\n\t\tif (!isFiltered) {\n\t\t\tif (isRequestVM(element) && element.variables.length) {\n\t\t\t\tconst newPart = this.renderAttachments(\n\t\t\t\t\telement.variables,\n\t\t\t\t\telement.contentReferences,\n\t\t\t\t\ttemplateData,\n\t\t\t\t);\n\t\t\t\tif (newPart) {\n\t\t\t\t\ttemplateData.value.appendChild(newPart.domNode);\n\t\t\t\t\ttemplateData.elementDisposables.add(newPart);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (isResponseVM(element) && element.errorDetails?.message) {\n\t\t\tconst renderedError = this.instantiationService.createInstance(\n\t\t\t\tChatWarningContentPart,\n\t\t\t\telement.errorDetails.responseIsFiltered ? \"info\" : \"error\",\n\t\t\t\tnew MarkdownString(element.errorDetails.message),\n\t\t\t\tthis.renderer,\n\t\t\t);\n\t\t\ttemplateData.elementDisposables.add(renderedError);\n\t\t\ttemplateData.value.appendChild(renderedError.domNode);\n\t\t}\n\n\t\tconst newHeight = templateData.rowContainer.offsetHeight;\n\t\tconst fireEvent =\n\t\t\t!element.currentRenderedHeight ||\n\t\t\telement.currentRenderedHeight !== newHeight;\n\t\telement.currentRenderedHeight = newHeight;\n\t\tif (fireEvent) {\n\t\t\tconst disposable = templateData.elementDisposables.add(\n\t\t\t\tdom.scheduleAtNextAnimationFrame(\n\t\t\t\t\tdom.getWindow(templateData.value),\n\t\t\t\t\t() => {\n\t\t\t\t\t\t// Have to recompute the height here because codeblock rendering is currently async and it may have changed.\n\t\t\t\t\t\t// If it becomes properly sync, then this could be removed.\n\t\t\t\t\t\telement.currentRenderedHeight =\n\t\t\t\t\t\t\ttemplateData.rowContainer.offsetHeight;\n\t\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\t\tthis._onDidChangeItemHeight.fire({\n\t\t\t\t\t\t\telement,\n\t\t\t\t\t\t\theight: element.currentRenderedHeight,\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate updateItemHeight(templateData: IChatListItemTemplate): void {\n\t\tif (!templateData.currentElement) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newHeight = templateData.rowContainer.offsetHeight;\n\t\ttemplateData.currentElement.currentRenderedHeight = newHeight;\n\t\tthis._onDidChangeItemHeight.fire({\n\t\t\telement: templateData.currentElement,\n\t\t\theight: newHeight,\n\t\t});\n\t}\n\n\tprivate renderWelcomeMessage(\n\t\telement: IChatWelcomeMessageViewModel,\n\t\ttemplateData: IChatListItemTemplate,\n\t) {\n\t\tdom.clearNode(templateData.value);\n\n\t\telement.content.forEach((item, i) => {\n\t\t\tif (Array.isArray(item)) {\n\t\t\t\tconst scopedInstaService = templateData.elementDisposables.add(\n\t\t\t\t\tthis.instantiationService.createChild(\n\t\t\t\t\t\tnew ServiceCollection([\n\t\t\t\t\t\t\tIContextKeyService,\n\t\t\t\t\t\t\ttemplateData.contextKeyService,\n\t\t\t\t\t\t]),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\ttemplateData.elementDisposables.add(\n\t\t\t\t\tscopedInstaService.createInstance<\n\t\t\t\t\t\ttypeof ChatFollowups<IChatFollowup>,\n\t\t\t\t\t\tChatFollowups<IChatFollowup>\n\t\t\t\t\t>(\n\t\t\t\t\t\tChatFollowups,\n\t\t\t\t\t\ttemplateData.value,\n\t\t\t\t\t\titem,\n\t\t\t\t\t\tthis.location,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t(followup) => this._onDidClickFollowup.fire(followup),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tconst context: IChatContentPartRenderContext = {\n\t\t\t\t\telement,\n\t\t\t\t\tindex: i,\n\t\t\t\t\t// NA for welcome msg\n\t\t\t\t\tcontent: [],\n\t\t\t\t\tpreceedingContentParts: [],\n\t\t\t\t};\n\t\t\t\tconst result = this.renderMarkdown(item, templateData, context);\n\t\t\t\ttemplateData.value.appendChild(result.domNode);\n\t\t\t\ttemplateData.elementDisposables.add(result);\n\t\t\t}\n\t\t});\n\n\t\tconst newHeight = templateData.rowContainer.offsetHeight;\n\t\tconst fireEvent =\n\t\t\t!element.currentRenderedHeight ||\n\t\t\telement.currentRenderedHeight !== newHeight;\n\t\telement.currentRenderedHeight = newHeight;\n\t\tif (fireEvent) {\n\t\t\tconst disposable = templateData.elementDisposables.add(\n\t\t\t\tdom.scheduleAtNextAnimationFrame(\n\t\t\t\t\tdom.getWindow(templateData.value),\n\t\t\t\t\t() => {\n\t\t\t\t\t\t// Have to recompute the height here because codeblock rendering is currently async and it may have changed.\n\t\t\t\t\t\t// If it becomes properly sync, then this could be removed.\n\t\t\t\t\t\telement.currentRenderedHeight =\n\t\t\t\t\t\t\ttemplateData.rowContainer.offsetHeight;\n\t\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\t\tthis._onDidChangeItemHeight.fire({\n\t\t\t\t\t\t\telement,\n\t\t\t\t\t\t\theight: element.currentRenderedHeight,\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t *\t@returns true if progressive rendering should be considered complete- the element's data is fully rendered or the view is not visible\n\t */\n\tprivate doNextProgressiveRender(\n\t\telement: IChatResponseViewModel,\n\t\tindex: number,\n\t\ttemplateData: IChatListItemTemplate,\n\t\tisInRenderElement: boolean,\n\t): boolean {\n\t\tif (!this._isVisible) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (element.isCanceled) {\n\t\t\tthis.traceLayout(\n\t\t\t\t\"doNextProgressiveRender\",\n\t\t\t\t`canceled, index=${index}`,\n\t\t\t);\n\t\t\telement.renderData = undefined;\n\t\t\tthis.basicRenderElement(element, index, templateData);\n\t\t\treturn true;\n\t\t}\n\n\t\tlet isFullyRendered = false;\n\t\tthis.traceLayout(\n\t\t\t\"doNextProgressiveRender\",\n\t\t\t`START progressive render, index=${index}, renderData=${JSON.stringify(element.renderData)}`,\n\t\t);\n\t\tconst contentForThisTurn =\n\t\t\tthis.getNextProgressiveRenderContent(element);\n\t\tconst partsToRender = this.diff(\n\t\t\ttemplateData.renderedParts ?? [],\n\t\t\tcontentForThisTurn,\n\t\t\telement,\n\t\t);\n\t\tisFullyRendered = partsToRender.every((part) => part === null);\n\n\t\tif (isFullyRendered) {\n\t\t\tif (element.isComplete) {\n\t\t\t\t// Response is done and content is rendered, so do a normal render\n\t\t\t\tthis.traceLayout(\n\t\t\t\t\t\"doNextProgressiveRender\",\n\t\t\t\t\t`END progressive render, index=${index} and clearing renderData, response is complete`,\n\t\t\t\t);\n\t\t\t\telement.renderData = undefined;\n\t\t\t\tthis.basicRenderElement(element, index, templateData);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Nothing new to render, not done, keep waiting\n\t\t\tthis.traceLayout(\n\t\t\t\t\"doNextProgressiveRender\",\n\t\t\t\t\"caught up with the stream- no new content to render\",\n\t\t\t);\n\t\t\treturn false;\n\t\t}\n\n\t\t// Do an actual progressive render\n\t\tthis.traceLayout(\n\t\t\t\"doNextProgressiveRender\",\n\t\t\t`doing progressive render, ${partsToRender.length} parts to render`,\n\t\t);\n\t\tthis.renderChatContentDiff(\n\t\t\tpartsToRender,\n\t\t\tcontentForThisTurn,\n\t\t\telement,\n\t\t\ttemplateData,\n\t\t);\n\n\t\tconst height = templateData.rowContainer.offsetHeight;\n\t\telement.currentRenderedHeight = height;\n\t\tif (!isInRenderElement) {\n\t\t\tthis._onDidChangeItemHeight.fire({\n\t\t\t\telement,\n\t\t\t\theight: templateData.rowContainer.offsetHeight,\n\t\t\t});\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate renderChatContentDiff(\n\t\tpartsToRender: ReadonlyArray<IChatRendererContent | null>,\n\t\tcontentForThisTurn: ReadonlyArray<IChatRendererContent>,\n\t\telement: IChatResponseViewModel,\n\t\ttemplateData: IChatListItemTemplate,\n\t): void {\n\t\tconst renderedParts = templateData.renderedParts ?? [];\n\t\ttemplateData.renderedParts = renderedParts;\n\t\tpartsToRender.forEach((partToRender, index) => {\n\t\t\tif (!partToRender) {\n\t\t\t\t// null=no change\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst alreadyRenderedPart = templateData.renderedParts?.[index];\n\t\t\tif (alreadyRenderedPart) {\n\t\t\t\talreadyRenderedPart.dispose();\n\t\t\t}\n\n\t\t\tconst preceedingContentParts = renderedParts.slice(0, index);\n\t\t\tconst context: IChatContentPartRenderContext = {\n\t\t\t\telement,\n\t\t\t\tcontent: contentForThisTurn,\n\t\t\t\tpreceedingContentParts,\n\t\t\t\tindex,\n\t\t\t};\n\t\t\tconst newPart = this.renderChatContentPart(\n\t\t\t\tpartToRender,\n\t\t\t\ttemplateData,\n\t\t\t\tcontext,\n\t\t\t);\n\t\t\tif (newPart) {\n\t\t\t\t// Maybe the part can't be rendered in this context, but this shouldn't really happen\n\t\t\t\tif (alreadyRenderedPart) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// This method can throw HierarchyRequestError\n\t\t\t\t\t\talreadyRenderedPart.domNode.replaceWith(\n\t\t\t\t\t\t\tnewPart.domNode,\n\t\t\t\t\t\t);\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tthis.logService.error(\n\t\t\t\t\t\t\t\"ChatListItemRenderer#renderChatContentDiff: error replacing part\",\n\t\t\t\t\t\t\terr,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttemplateData.value.appendChild(newPart.domNode);\n\t\t\t\t}\n\n\t\t\t\trenderedParts[index] = newPart;\n\t\t\t} else if (alreadyRenderedPart) {\n\t\t\t\talreadyRenderedPart.domNode.remove();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Returns all content parts that should be rendered, and trimmed markdown content. We will diff this with the current rendered set.\n\t */\n\tprivate getNextProgressiveRenderContent(\n\t\telement: IChatResponseViewModel,\n\t): IChatRendererContent[] {\n\t\tconst data = this.getDataForProgressiveRender(element);\n\n\t\tconst renderableResponse = annotateSpecialMarkdownContent(\n\t\t\telement.response.value,\n\t\t);\n\n\t\tthis.traceLayout(\n\t\t\t\"getNextProgressiveRenderContent\",\n\t\t\t`Want to render ${data.numWordsToRender} at ${data.rate} words/s, counting...`,\n\t\t);\n\t\tlet numNeededWords = data.numWordsToRender;\n\t\tconst partsToRender: IChatRendererContent[] = [];\n\t\tif (element.contentReferences.length) {\n\t\t\tpartsToRender.push({\n\t\t\t\tkind: \"references\",\n\t\t\t\treferences: element.contentReferences,\n\t\t\t});\n\t\t}\n\n\t\tfor (let i = 0; i < renderableResponse.length; i++) {\n\t\t\tconst part = renderableResponse[i];\n\t\t\tif (numNeededWords <= 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (part.kind === \"markdownContent\") {\n\t\t\t\tconst wordCountResult = getNWords(\n\t\t\t\t\tpart.content.value,\n\t\t\t\t\tnumNeededWords,\n\t\t\t\t);\n\t\t\t\tif (wordCountResult.isFullString) {\n\t\t\t\t\tpartsToRender.push(part);\n\t\t\t\t} else {\n\t\t\t\t\tpartsToRender.push({\n\t\t\t\t\t\tkind: \"markdownContent\",\n\t\t\t\t\t\tcontent: new MarkdownString(\n\t\t\t\t\t\t\twordCountResult.value,\n\t\t\t\t\t\t\tpart.content,\n\t\t\t\t\t\t),\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.traceLayout(\n\t\t\t\t\t\"getNextProgressiveRenderContent\",\n\t\t\t\t\t`  Chunk ${i}: Want to render ${numNeededWords} words and found ${wordCountResult.returnedWordCount} words. Total words in chunk: ${wordCountResult.totalWordCount}`,\n\t\t\t\t);\n\t\t\t\tnumNeededWords -= wordCountResult.returnedWordCount;\n\t\t\t} else {\n\t\t\t\tpartsToRender.push(part);\n\t\t\t}\n\t\t}\n\n\t\tconst lastWordCount = element.contentUpdateTimings?.lastWordCount ?? 0;\n\t\tconst newRenderedWordCount = data.numWordsToRender - numNeededWords;\n\t\tconst bufferWords = lastWordCount - newRenderedWordCount;\n\t\tthis.traceLayout(\n\t\t\t\"getNextProgressiveRenderContent\",\n\t\t\t`Want to render ${data.numWordsToRender} words. Rendering ${newRenderedWordCount} words. Buffer: ${bufferWords} words`,\n\t\t);\n\t\tif (\n\t\t\tnewRenderedWordCount > 0 &&\n\t\t\tnewRenderedWordCount !== element.renderData?.renderedWordCount\n\t\t) {\n\t\t\t// Only update lastRenderTime when we actually render new content\n\t\t\telement.renderData = {\n\t\t\t\tlastRenderTime: Date.now(),\n\t\t\t\trenderedWordCount: newRenderedWordCount,\n\t\t\t\trenderedParts: partsToRender,\n\t\t\t};\n\t\t}\n\n\t\treturn partsToRender;\n\t}\n\n\tprivate getDataForProgressiveRender(element: IChatResponseViewModel) {\n\t\tconst renderData = element.renderData ?? {\n\t\t\tlastRenderTime: 0,\n\t\t\trenderedWordCount: 0,\n\t\t};\n\n\t\tconst rate = this.getProgressiveRenderRate(element);\n\t\tconst numWordsToRender =\n\t\t\trenderData.lastRenderTime === 0\n\t\t\t\t? 1\n\t\t\t\t: renderData.renderedWordCount +\n\t\t\t\t\t// Additional words to render beyond what's already rendered\n\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t((Date.now() - renderData.lastRenderTime) / 1000) *\n\t\t\t\t\t\t\trate,\n\t\t\t\t\t);\n\n\t\treturn {\n\t\t\tnumWordsToRender,\n\t\t\trate,\n\t\t};\n\t}\n\n\tprivate diff(\n\t\trenderedParts: ReadonlyArray<IChatContentPart>,\n\t\tcontentToRender: ReadonlyArray<IChatRendererContent>,\n\t\telement: ChatTreeItem,\n\t): ReadonlyArray<IChatRendererContent | null> {\n\t\tconst diff: (IChatRendererContent | null)[] = [];\n\t\tfor (let i = 0; i < contentToRender.length; i++) {\n\t\t\tconst content = contentToRender[i];\n\t\t\tconst renderedPart = renderedParts[i];\n\n\t\t\tif (\n\t\t\t\t!renderedPart ||\n\t\t\t\t!renderedPart.hasSameContent(\n\t\t\t\t\tcontent,\n\t\t\t\t\tcontentToRender.slice(i + 1),\n\t\t\t\t\telement,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tdiff.push(content);\n\t\t\t} else {\n\t\t\t\t// null -> no change\n\t\t\t\tdiff.push(null);\n\t\t\t}\n\t\t}\n\n\t\treturn diff;\n\t}\n\n\tprivate renderChatContentPart(\n\t\tcontent: IChatRendererContent,\n\t\ttemplateData: IChatListItemTemplate,\n\t\tcontext: IChatContentPartRenderContext,\n\t): IChatContentPart | undefined {\n\t\tif (content.kind === \"treeData\") {\n\t\t\treturn this.renderTreeData(content, templateData, context);\n\t\t} else if (content.kind === \"progressMessage\") {\n\t\t\treturn this.instantiationService.createInstance(\n\t\t\t\tChatProgressContentPart,\n\t\t\t\tcontent,\n\t\t\t\tthis.renderer,\n\t\t\t\tcontext,\n\t\t\t);\n\t\t} else if (content.kind === \"progressTask\") {\n\t\t\treturn this.renderProgressTask(content, templateData, context);\n\t\t} else if (content.kind === \"command\") {\n\t\t\treturn this.instantiationService.createInstance(\n\t\t\t\tChatCommandButtonContentPart,\n\t\t\t\tcontent,\n\t\t\t\tcontext,\n\t\t\t);\n\t\t} else if (content.kind === \"textEditGroup\") {\n\t\t\treturn this.renderTextEdit(context, content, templateData);\n\t\t} else if (content.kind === \"confirmation\") {\n\t\t\treturn this.renderConfirmation(context, content, templateData);\n\t\t} else if (content.kind === \"warning\") {\n\t\t\treturn this.instantiationService.createInstance(\n\t\t\t\tChatWarningContentPart,\n\t\t\t\t\"warning\",\n\t\t\t\tcontent.content,\n\t\t\t\tthis.renderer,\n\t\t\t);\n\t\t} else if (content.kind === \"markdownContent\") {\n\t\t\treturn this.renderMarkdown(content.content, templateData, context);\n\t\t} else if (content.kind === \"references\") {\n\t\t\treturn this.renderContentReferencesListData(\n\t\t\t\tcontent,\n\t\t\t\tundefined,\n\t\t\t\tcontext,\n\t\t\t\ttemplateData,\n\t\t\t);\n\t\t} else if (content.kind === \"codeCitations\") {\n\t\t\treturn this.renderCodeCitationsListData(\n\t\t\t\tcontent,\n\t\t\t\tcontext,\n\t\t\t\ttemplateData,\n\t\t\t);\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate renderTreeData(\n\t\tcontent: IChatTreeData,\n\t\ttemplateData: IChatListItemTemplate,\n\t\tcontext: IChatContentPartRenderContext,\n\t): IChatContentPart {\n\t\tconst data = content.treeData;\n\t\tconst treeDataIndex = context.preceedingContentParts.filter(\n\t\t\t(part) => part instanceof ChatTreeContentPart,\n\t\t).length;\n\t\tconst treePart = this.instantiationService.createInstance(\n\t\t\tChatTreeContentPart,\n\t\t\tdata,\n\t\t\tcontext.element,\n\t\t\tthis._treePool,\n\t\t\ttreeDataIndex,\n\t\t);\n\n\t\ttreePart.addDisposable(\n\t\t\ttreePart.onDidChangeHeight(() => {\n\t\t\t\tthis.updateItemHeight(templateData);\n\t\t\t}),\n\t\t);\n\n\t\tif (isResponseVM(context.element)) {\n\t\t\tconst fileTreeFocusInfo = {\n\t\t\t\ttreeDataId: data.uri.toString(),\n\t\t\t\ttreeIndex: treeDataIndex,\n\t\t\t\tfocus() {\n\t\t\t\t\ttreePart.domFocus();\n\t\t\t\t},\n\t\t\t};\n\n\t\t\t// TODO@roblourens there's got to be a better way to navigate trees\n\t\t\ttreePart.addDisposable(\n\t\t\t\ttreePart.onDidFocus(() => {\n\t\t\t\t\tthis.focusedFileTreesByResponseId.set(\n\t\t\t\t\t\tcontext.element.id,\n\t\t\t\t\t\tfileTreeFocusInfo.treeIndex,\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst fileTrees =\n\t\t\t\tthis.fileTreesByResponseId.get(context.element.id) ?? [];\n\t\t\tfileTrees.push(fileTreeFocusInfo);\n\t\t\tthis.fileTreesByResponseId.set(\n\t\t\t\tcontext.element.id,\n\t\t\t\tdistinct(fileTrees, (v) => v.treeDataId),\n\t\t\t);\n\t\t\ttreePart.addDisposable(\n\t\t\t\ttoDisposable(() =>\n\t\t\t\t\tthis.fileTreesByResponseId.set(\n\t\t\t\t\t\tcontext.element.id,\n\t\t\t\t\t\tfileTrees.filter(\n\t\t\t\t\t\t\t(v) => v.treeDataId !== data.uri.toString(),\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\treturn treePart;\n\t}\n\n\tprivate renderContentReferencesListData(\n\t\treferences: IChatReferences,\n\t\tlabelOverride: string | undefined,\n\t\tcontext: IChatContentPartRenderContext,\n\t\ttemplateData: IChatListItemTemplate,\n\t): ChatCollapsibleListContentPart {\n\t\tconst referencesPart = this.instantiationService.createInstance(\n\t\t\tChatCollapsibleListContentPart,\n\t\t\treferences.references,\n\t\t\tlabelOverride,\n\t\t\tcontext.element as IChatResponseViewModel,\n\t\t\tthis._contentReferencesListPool,\n\t\t);\n\t\treferencesPart.addDisposable(\n\t\t\treferencesPart.onDidChangeHeight(() => {\n\t\t\t\tthis.updateItemHeight(templateData);\n\t\t\t}),\n\t\t);\n\n\t\treturn referencesPart;\n\t}\n\n\tprivate renderCodeCitationsListData(\n\t\tcitations: IChatCodeCitations,\n\t\tcontext: IChatContentPartRenderContext,\n\t\ttemplateData: IChatListItemTemplate,\n\t): ChatCodeCitationContentPart {\n\t\tconst citationsPart = this.instantiationService.createInstance(\n\t\t\tChatCodeCitationContentPart,\n\t\t\tcitations,\n\t\t\tcontext,\n\t\t);\n\t\treturn citationsPart;\n\t}\n\n\tprivate renderProgressTask(\n\t\ttask: IChatTask,\n\t\ttemplateData: IChatListItemTemplate,\n\t\tcontext: IChatContentPartRenderContext,\n\t): IChatContentPart | undefined {\n\t\tif (!isResponseVM(context.element)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst taskPart = this.instantiationService.createInstance(\n\t\t\tChatTaskContentPart,\n\t\t\ttask,\n\t\t\tthis._contentReferencesListPool,\n\t\t\tthis.renderer,\n\t\t\tcontext,\n\t\t);\n\t\ttaskPart.addDisposable(\n\t\t\ttaskPart.onDidChangeHeight(() => {\n\t\t\t\tthis.updateItemHeight(templateData);\n\t\t\t}),\n\t\t);\n\t\treturn taskPart;\n\t}\n\n\tprivate renderConfirmation(\n\t\tcontext: IChatContentPartRenderContext,\n\t\tconfirmation: IChatConfirmation,\n\t\ttemplateData: IChatListItemTemplate,\n\t): IChatContentPart {\n\t\tconst part = this.instantiationService.createInstance(\n\t\t\tChatConfirmationContentPart,\n\t\t\tconfirmation,\n\t\t\tcontext,\n\t\t);\n\t\tpart.addDisposable(\n\t\t\tpart.onDidChangeHeight(() => this.updateItemHeight(templateData)),\n\t\t);\n\t\treturn part;\n\t}\n\n\tprivate renderAttachments(\n\t\tvariables: IChatRequestVariableEntry[],\n\t\tcontentReferences: ReadonlyArray<IChatContentReference> | undefined,\n\t\ttemplateData: IChatListItemTemplate,\n\t) {\n\t\treturn this.instantiationService.createInstance(\n\t\t\tChatAttachmentsContentPart,\n\t\t\tvariables,\n\t\t\tcontentReferences,\n\t\t\tundefined,\n\t\t);\n\t}\n\n\tprivate renderTextEdit(\n\t\tcontext: IChatContentPartRenderContext,\n\t\tchatTextEdit: IChatTextEditGroup,\n\t\ttemplateData: IChatListItemTemplate,\n\t): IChatContentPart {\n\t\tconst textEditPart = this.instantiationService.createInstance(\n\t\t\tChatTextEditContentPart,\n\t\t\tchatTextEdit,\n\t\t\tcontext,\n\t\t\tthis.rendererOptions,\n\t\t\tthis._diffEditorPool,\n\t\t\tthis._currentLayoutWidth,\n\t\t);\n\t\ttextEditPart.addDisposable(\n\t\t\ttextEditPart.onDidChangeHeight(() => {\n\t\t\t\ttextEditPart.layout(this._currentLayoutWidth);\n\t\t\t\tthis.updateItemHeight(templateData);\n\t\t\t}),\n\t\t);\n\n\t\treturn textEditPart;\n\t}\n\n\tprivate renderMarkdown(\n\t\tmarkdown: IMarkdownString,\n\t\ttemplateData: IChatListItemTemplate,\n\t\tcontext: IChatContentPartRenderContext,\n\t): IChatContentPart {\n\t\tconst element = context.element;\n\t\tconst fillInIncompleteTokens =\n\t\t\tisResponseVM(element) &&\n\t\t\t(!element.isComplete ||\n\t\t\t\telement.isCanceled ||\n\t\t\t\telement.errorDetails?.responseIsFiltered ||\n\t\t\t\telement.errorDetails?.responseIsIncomplete ||\n\t\t\t\t!!element.renderData);\n\t\tconst codeBlockStartIndex = context.preceedingContentParts.reduce(\n\t\t\t(acc, part) =>\n\t\t\t\tacc +\n\t\t\t\t(part instanceof ChatMarkdownContentPart\n\t\t\t\t\t? part.codeblocks.length\n\t\t\t\t\t: 0),\n\t\t\t0,\n\t\t);\n\t\tconst markdownPart = this.instantiationService.createInstance(\n\t\t\tChatMarkdownContentPart,\n\t\t\tmarkdown,\n\t\t\tcontext,\n\t\t\tthis._editorPool,\n\t\t\tfillInIncompleteTokens,\n\t\t\tcodeBlockStartIndex,\n\t\t\tthis.renderer,\n\t\t\tthis._currentLayoutWidth,\n\t\t\tthis.codeBlockModelCollection,\n\t\t\tthis.rendererOptions,\n\t\t);\n\t\tmarkdownPart.addDisposable(\n\t\t\tmarkdownPart.onDidChangeHeight(() => {\n\t\t\t\tmarkdownPart.layout(this._currentLayoutWidth);\n\t\t\t\tthis.updateItemHeight(templateData);\n\t\t\t}),\n\t\t);\n\n\t\tconst codeBlocksByResponseId =\n\t\t\tthis.codeBlocksByResponseId.get(element.id) ?? [];\n\t\tthis.codeBlocksByResponseId.set(element.id, codeBlocksByResponseId);\n\t\tmarkdownPart.addDisposable(\n\t\t\ttoDisposable(() => {\n\t\t\t\tconst codeBlocksByResponseId = this.codeBlocksByResponseId.get(\n\t\t\t\t\telement.id,\n\t\t\t\t);\n\t\t\t\tif (codeBlocksByResponseId) {\n\t\t\t\t\tmarkdownPart.codeblocks.forEach(\n\t\t\t\t\t\t(info, i) =>\n\t\t\t\t\t\t\tdelete codeBlocksByResponseId[\n\t\t\t\t\t\t\t\tcodeBlockStartIndex + i\n\t\t\t\t\t\t\t],\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tmarkdownPart.codeblocks.forEach((info, i) => {\n\t\t\tcodeBlocksByResponseId[codeBlockStartIndex + i] = info;\n\t\t\tif (info.uri) {\n\t\t\t\tconst uri = info.uri;\n\t\t\t\tthis.codeBlocksByEditorUri.set(uri, info);\n\t\t\t\tmarkdownPart.addDisposable(\n\t\t\t\t\ttoDisposable(() => this.codeBlocksByEditorUri.delete(uri)),\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\treturn markdownPart;\n\t}\n\n\tdisposeElement(\n\t\tnode: ITreeNode<ChatTreeItem, FuzzyScore>,\n\t\tindex: number,\n\t\ttemplateData: IChatListItemTemplate,\n\t): void {\n\t\tthis.traceLayout(\"disposeElement\", `Disposing element, index=${index}`);\n\n\t\t// We could actually reuse a template across a renderElement call?\n\t\tif (templateData.renderedParts) {\n\t\t\ttry {\n\t\t\t\tdispose(coalesce(templateData.renderedParts));\n\t\t\t\ttemplateData.renderedParts = undefined;\n\t\t\t\tdom.clearNode(templateData.value);\n\t\t\t} catch (err) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\n\t\ttemplateData.currentElement = undefined;\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: IChatListItemTemplate): void {\n\t\ttemplateData.templateDisposables.dispose();\n\t}\n}\n\nexport class ChatListDelegate implements IListVirtualDelegate<ChatTreeItem> {\n\tconstructor(\n\t\tprivate readonly defaultElementHeight: number,\n\t\t@ILogService private readonly logService: ILogService\n\t) { }\n\n\tprivate _traceLayout(method: string, message: string) {\n\t\tif (forceVerboseLayoutTracing) {\n\t\t\tthis.logService.info(`ChatListDelegate#${method}: ${message}`);\n\t\t} else {\n\t\t\tthis.logService.trace(`ChatListDelegate#${method}: ${message}`);\n\t\t}\n\t}\n\n\tgetHeight(element: ChatTreeItem): number {\n\t\tconst kind = isRequestVM(element) ? \"request\" : \"response\";\n\t\tconst height =\n\t\t\t(\"currentRenderedHeight\" in element\n\t\t\t\t? element.currentRenderedHeight\n\t\t\t\t: undefined) ?? this.defaultElementHeight;\n\t\tthis._traceLayout(\"getHeight\", `${kind}, height=${height}`);\n\t\treturn height;\n\t}\n\n\tgetTemplateId(element: ChatTreeItem): string {\n\t\treturn ChatListItemRenderer.ID;\n\t}\n\n\thasDynamicHeight(element: ChatTreeItem): boolean {\n\t\treturn true;\n\t}\n}\n\nconst voteDownDetailLabels: Record<ChatAgentVoteDownReason, string> = {\n\t[ChatAgentVoteDownReason.IncorrectCode]: localize(\n\t\t\"incorrectCode\",\n\t\t\"Suggested incorrect code\",\n\t),\n\t[ChatAgentVoteDownReason.DidNotFollowInstructions]: localize(\n\t\t\"didNotFollowInstructions\",\n\t\t\"Didn't follow instructions\",\n\t),\n\t[ChatAgentVoteDownReason.MissingContext]: localize(\n\t\t\"missingContext\",\n\t\t\"Missing context\",\n\t),\n\t[ChatAgentVoteDownReason.OffensiveOrUnsafe]: localize(\n\t\t\"offensiveOrUnsafe\",\n\t\t\"Offensive or unsafe\",\n\t),\n\t[ChatAgentVoteDownReason.PoorlyWrittenOrFormatted]: localize(\n\t\t\"poorlyWrittenOrFormatted\",\n\t\t\"Poorly written or formatted\",\n\t),\n\t[ChatAgentVoteDownReason.RefusedAValidRequest]: localize(\n\t\t\"refusedAValidRequest\",\n\t\t\"Refused a valid request\",\n\t),\n\t[ChatAgentVoteDownReason.IncompleteCode]: localize(\n\t\t\"incompleteCode\",\n\t\t\"Incomplete code\",\n\t),\n\t[ChatAgentVoteDownReason.WillReportIssue]: localize(\n\t\t\"reportIssue\",\n\t\t\"Report an issue\",\n\t),\n\t[ChatAgentVoteDownReason.Other]: localize(\"other\", \"Other\"),\n};\n\nexport class ChatVoteDownButton extends DropdownMenuActionViewItem {\n\tconstructor(\n\t\taction: IAction,\n\t\toptions: IDropdownMenuActionViewItemOptions | undefined,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IWorkbenchIssueService private readonly issueService: IWorkbenchIssueService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t) {\n\t\tsuper(action,\n\t\t\t{ getActions: () => this.getActions(), },\n\t\t\tcontextMenuService,\n\t\t\t{\n\t\t\t\t...options,\n\t\t\t\tclassNames: ThemeIcon.asClassNameArray(Codicon.thumbsdown),\n\t\t\t});\n\t}\n\n\tgetActions(): readonly IAction[] {\n\t\treturn [\n\t\t\tthis.getVoteDownDetailAction(ChatAgentVoteDownReason.IncorrectCode),\n\t\t\tthis.getVoteDownDetailAction(\n\t\t\t\tChatAgentVoteDownReason.DidNotFollowInstructions,\n\t\t\t),\n\t\t\tthis.getVoteDownDetailAction(\n\t\t\t\tChatAgentVoteDownReason.IncompleteCode,\n\t\t\t),\n\t\t\tthis.getVoteDownDetailAction(\n\t\t\t\tChatAgentVoteDownReason.MissingContext,\n\t\t\t),\n\t\t\tthis.getVoteDownDetailAction(\n\t\t\t\tChatAgentVoteDownReason.PoorlyWrittenOrFormatted,\n\t\t\t),\n\t\t\tthis.getVoteDownDetailAction(\n\t\t\t\tChatAgentVoteDownReason.RefusedAValidRequest,\n\t\t\t),\n\t\t\tthis.getVoteDownDetailAction(\n\t\t\t\tChatAgentVoteDownReason.OffensiveOrUnsafe,\n\t\t\t),\n\t\t\tthis.getVoteDownDetailAction(ChatAgentVoteDownReason.Other),\n\t\t\t{\n\t\t\t\tid: \"reportIssue\",\n\t\t\t\tlabel: voteDownDetailLabels[\n\t\t\t\t\tChatAgentVoteDownReason.WillReportIssue\n\t\t\t\t],\n\t\t\t\ttooltip: \"\",\n\t\t\t\tenabled: true,\n\t\t\t\tclass: undefined,\n\t\t\t\trun: async (context: IChatResponseViewModel) => {\n\t\t\t\t\tif (!isResponseVM(context)) {\n\t\t\t\t\t\tthis.logService.error(\n\t\t\t\t\t\t\t\"ChatVoteDownButton#run: invalid context\",\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tawait this.commandService.executeCommand(\n\t\t\t\t\t\tMarkUnhelpfulActionId,\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t\tChatAgentVoteDownReason.WillReportIssue,\n\t\t\t\t\t);\n\t\t\t\t\tawait this.issueService.openReporter({\n\t\t\t\t\t\textensionId: context.agent?.extensionId.value,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\n\t\tthis.element?.classList.toggle(\"checked\", this.action.checked);\n\t}\n\n\tprivate getVoteDownDetailAction(reason: ChatAgentVoteDownReason): IAction {\n\t\tconst label = voteDownDetailLabels[reason];\n\t\treturn {\n\t\t\tid: MarkUnhelpfulActionId,\n\t\t\tlabel,\n\t\t\ttooltip: \"\",\n\t\t\tenabled: true,\n\t\t\tchecked:\n\t\t\t\t(this._context as IChatResponseViewModel).voteDownReason ===\n\t\t\t\treason,\n\t\t\tclass: undefined,\n\t\t\trun: async (context: IChatResponseViewModel) => {\n\t\t\t\tif (!isResponseVM(context)) {\n\t\t\t\t\tthis.logService.error(\n\t\t\t\t\t\t\"ChatVoteDownButton#getVoteDownDetailAction: invalid context\",\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tawait this.commandService.executeCommand(\n\t\t\t\t\tMarkUnhelpfulActionId,\n\t\t\t\t\tcontext,\n\t\t\t\t\treason,\n\t\t\t\t);\n\t\t\t},\n\t\t};\n\t}\n}\n"],
  "mappings": "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",
  "names": ["index", "codeBlocksByResponseId"]
}
