{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/chatListRenderer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { renderFormattedText } from '../../../../base/browser/formattedTextRenderer.js';\nimport { StandardKeyboardEvent } from '../../../../base/browser/keyboardEvent.js';\nimport { IActionViewItemOptions } from '../../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { DropdownMenuActionViewItem, IDropdownMenuActionViewItemOptions } from '../../../../base/browser/ui/dropdown/dropdownActionViewItem.js';\nimport { getDefaultHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegateFactory.js';\nimport { IListVirtualDelegate } from '../../../../base/browser/ui/list/list.js';\nimport { ITreeNode, ITreeRenderer } from '../../../../base/browser/ui/tree/tree.js';\nimport { IAction } from '../../../../base/common/actions.js';\nimport { coalesce, distinct } from '../../../../base/common/arrays.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { FuzzyScore } from '../../../../base/common/filters.js';\nimport { IMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { KeyCode } from '../../../../base/common/keyCodes.js';\nimport { Disposable, DisposableStore, IDisposable, dispose, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { ResourceMap } from '../../../../base/common/map.js';\nimport { FileAccess } from '../../../../base/common/network.js';\nimport { clamp } from '../../../../base/common/numbers.js';\nimport { autorun } from '../../../../base/common/observable.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { MarkdownRenderer } from '../../../../editor/browser/widget/markdownRenderer/browser/markdownRenderer.js';\nimport { localize } from '../../../../nls.js';\nimport { IMenuEntryActionViewItemOptions, createActionViewItem } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { MenuWorkbenchToolBar } from '../../../../platform/actions/browser/toolbar.js';\nimport { MenuId, MenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { ColorScheme } from '../../../../platform/theme/common/theme.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { IWorkbenchIssueService } from '../../issue/common/issue.js';\nimport { annotateSpecialMarkdownContent } from '../common/annotations.js';\nimport { ChatAgentLocation, IChatAgentMetadata } from '../common/chatAgents.js';\nimport { CONTEXT_CHAT_RESPONSE_SUPPORT_ISSUE_REPORTING, CONTEXT_REQUEST, CONTEXT_RESPONSE, CONTEXT_RESPONSE_DETECTED_AGENT_COMMAND, CONTEXT_RESPONSE_ERROR, CONTEXT_RESPONSE_FILTERED, CONTEXT_RESPONSE_VOTE } from '../common/chatContextKeys.js';\nimport { IChatRequestVariableEntry, IChatTextEditGroup } from '../common/chatModel.js';\nimport { chatSubcommandLeader } from '../common/chatParserTypes.js';\nimport { ChatAgentVoteDirection, ChatAgentVoteDownReason, IChatConfirmation, IChatContentReference, IChatFollowup, IChatTask, IChatTreeData } from '../common/chatService.js';\nimport { IChatCodeCitations, IChatReferences, IChatRendererContent, IChatRequestViewModel, IChatResponseViewModel, IChatWelcomeMessageViewModel, isRequestVM, isResponseVM, isWelcomeVM } from '../common/chatViewModel.js';\nimport { getNWords } from '../common/chatWordCounter.js';\nimport { CodeBlockModelCollection } from '../common/codeBlockModelCollection.js';\nimport { MarkUnhelpfulActionId } from './actions/chatTitleActions.js';\nimport { ChatTreeItem, GeneratingPhrase, IChatCodeBlockInfo, IChatFileTreeInfo, IChatListItemRendererOptions } from './chat.js';\nimport { ChatAgentHover, getChatAgentHoverOptions } from './chatAgentHover.js';\nimport { ChatAttachmentsContentPart } from './chatContentParts/chatAttachmentsContentPart.js';\nimport { ChatCodeCitationContentPart } from './chatContentParts/chatCodeCitationContentPart.js';\nimport { ChatCommandButtonContentPart } from './chatContentParts/chatCommandContentPart.js';\nimport { ChatConfirmationContentPart } from './chatContentParts/chatConfirmationContentPart.js';\nimport { IChatContentPart, IChatContentPartRenderContext } from './chatContentParts/chatContentParts.js';\nimport { ChatMarkdownContentPart, EditorPool } from './chatContentParts/chatMarkdownContentPart.js';\nimport { ChatProgressContentPart } from './chatContentParts/chatProgressContentPart.js';\nimport { ChatCollapsibleListContentPart, CollapsibleListPool } from './chatContentParts/chatReferencesContentPart.js';\nimport { ChatTaskContentPart } from './chatContentParts/chatTaskContentPart.js';\nimport { ChatTextEditContentPart, DiffEditorPool } from './chatContentParts/chatTextEditContentPart.js';\nimport { ChatTreeContentPart, TreePool } from './chatContentParts/chatTreeContentPart.js';\nimport { ChatWarningContentPart } from './chatContentParts/chatWarningContentPart.js';\nimport { ChatFollowups } from './chatFollowups.js';\nimport { ChatMarkdownDecorationsRenderer } from './chatMarkdownDecorationsRenderer.js';\nimport { ChatMarkdownRenderer } from './chatMarkdownRenderer.js';\nimport { ChatEditorOptions } from './chatOptions.js';\nimport { ChatCodeBlockContentProvider, CodeBlockPart } from './codeBlockPart.js';\n\nconst $ = dom.$;\n\ninterface IChatListItemTemplate {\n\tcurrentElement?: ChatTreeItem;\n\trenderedParts?: IChatContentPart[];\n\treadonly rowContainer: HTMLElement;\n\treadonly titleToolbar?: MenuWorkbenchToolBar;\n\treadonly avatarContainer: HTMLElement;\n\treadonly username: HTMLElement;\n\treadonly detail: HTMLElement;\n\treadonly value: HTMLElement;\n\treadonly contextKeyService: IContextKeyService;\n\treadonly instantiationService: IInstantiationService;\n\treadonly templateDisposables: IDisposable;\n\treadonly elementDisposables: DisposableStore;\n\treadonly agentHover: ChatAgentHover;\n}\n\ninterface IItemHeightChangeParams {\n\telement: ChatTreeItem;\n\theight: number;\n}\n\nconst forceVerboseLayoutTracing = false\n\t// || Boolean(\"TRUE\") // causes a linter warning so that it cannot be pushed\n\t;\n\nexport interface IChatRendererDelegate {\n\tgetListLength(): number;\n\n\treadonly onDidScroll?: Event<void>;\n}\n\nexport class ChatListItemRenderer extends Disposable implements ITreeRenderer<ChatTreeItem, FuzzyScore, IChatListItemTemplate> {\n\tstatic readonly ID = 'item';\n\n\tprivate readonly codeBlocksByResponseId = new Map<string, IChatCodeBlockInfo[]>();\n\tprivate readonly codeBlocksByEditorUri = new ResourceMap<IChatCodeBlockInfo>();\n\n\tprivate readonly fileTreesByResponseId = new Map<string, IChatFileTreeInfo[]>();\n\tprivate readonly focusedFileTreesByResponseId = new Map<string, number>();\n\n\tprivate readonly renderer: MarkdownRenderer;\n\tprivate readonly markdownDecorationsRenderer: ChatMarkdownDecorationsRenderer;\n\n\tprotected readonly _onDidClickFollowup = this._register(new Emitter<IChatFollowup>());\n\treadonly onDidClickFollowup: Event<IChatFollowup> = this._onDidClickFollowup.event;\n\n\tprivate readonly _onDidClickRerunWithAgentOrCommandDetection = new Emitter<IChatResponseViewModel>();\n\treadonly onDidClickRerunWithAgentOrCommandDetection: Event<IChatResponseViewModel> = this._onDidClickRerunWithAgentOrCommandDetection.event;\n\n\tprotected readonly _onDidChangeItemHeight = this._register(new Emitter<IItemHeightChangeParams>());\n\treadonly onDidChangeItemHeight: Event<IItemHeightChangeParams> = this._onDidChangeItemHeight.event;\n\n\tprivate readonly _editorPool: EditorPool;\n\tprivate readonly _diffEditorPool: DiffEditorPool;\n\tprivate readonly _treePool: TreePool;\n\tprivate readonly _contentReferencesListPool: CollapsibleListPool;\n\n\tprivate _currentLayoutWidth: number = 0;\n\tprivate _isVisible = true;\n\tprivate _onDidChangeVisibility = this._register(new Emitter<boolean>());\n\n\tconstructor(\n\t\teditorOptions: ChatEditorOptions,\n\t\tprivate readonly location: ChatAgentLocation,\n\t\tprivate readonly rendererOptions: IChatListItemRendererOptions,\n\t\tprivate readonly delegate: IChatRendererDelegate,\n\t\tprivate readonly codeBlockModelCollection: CodeBlockModelCollection,\n\t\toverflowWidgetsDomNode: HTMLElement | undefined,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IConfigurationService configService: IConfigurationService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t) {\n\t\tsuper();\n\n\t\tthis.renderer = this._register(this.instantiationService.createInstance(ChatMarkdownRenderer, undefined));\n\t\tthis.markdownDecorationsRenderer = this.instantiationService.createInstance(ChatMarkdownDecorationsRenderer);\n\t\tthis._editorPool = this._register(this.instantiationService.createInstance(EditorPool, editorOptions, delegate, overflowWidgetsDomNode));\n\t\tthis._diffEditorPool = this._register(this.instantiationService.createInstance(DiffEditorPool, editorOptions, delegate, overflowWidgetsDomNode));\n\t\tthis._treePool = this._register(this.instantiationService.createInstance(TreePool, this._onDidChangeVisibility.event));\n\t\tthis._contentReferencesListPool = this._register(this.instantiationService.createInstance(CollapsibleListPool, this._onDidChangeVisibility.event));\n\n\t\tthis._register(this.instantiationService.createInstance(ChatCodeBlockContentProvider));\n\t}\n\n\tget templateId(): string {\n\t\treturn ChatListItemRenderer.ID;\n\t}\n\n\teditorsInUse(): Iterable<CodeBlockPart> {\n\t\treturn this._editorPool.inUse();\n\t}\n\n\tprivate traceLayout(method: string, message: string) {\n\t\tif (forceVerboseLayoutTracing) {\n\t\t\tthis.logService.info(`ChatListItemRenderer#${method}: ${message}`);\n\t\t} else {\n\t\t\tthis.logService.trace(`ChatListItemRenderer#${method}: ${message}`);\n\t\t}\n\t}\n\n\t/**\n\t * Compute a rate to render at in words/s.\n\t */\n\tprivate getProgressiveRenderRate(element: IChatResponseViewModel): number {\n\t\tif (element.isComplete) {\n\t\t\treturn 80;\n\t\t}\n\n\t\tif (element.contentUpdateTimings && element.contentUpdateTimings.impliedWordLoadRate) {\n\t\t\tconst minRate = 5;\n\t\t\tconst maxRate = 80;\n\n\t\t\tconst rate = element.contentUpdateTimings.impliedWordLoadRate;\n\t\t\treturn clamp(rate, minRate, maxRate);\n\t\t}\n\n\t\treturn 8;\n\t}\n\n\tgetCodeBlockInfosForResponse(response: IChatResponseViewModel): IChatCodeBlockInfo[] {\n\t\tconst codeBlocks = this.codeBlocksByResponseId.get(response.id);\n\t\treturn codeBlocks ?? [];\n\t}\n\n\tgetCodeBlockInfoForEditor(uri: URI): IChatCodeBlockInfo | undefined {\n\t\treturn this.codeBlocksByEditorUri.get(uri);\n\t}\n\n\tgetFileTreeInfosForResponse(response: IChatResponseViewModel): IChatFileTreeInfo[] {\n\t\tconst fileTrees = this.fileTreesByResponseId.get(response.id);\n\t\treturn fileTrees ?? [];\n\t}\n\n\tgetLastFocusedFileTreeForResponse(response: IChatResponseViewModel): IChatFileTreeInfo | undefined {\n\t\tconst fileTrees = this.fileTreesByResponseId.get(response.id);\n\t\tconst lastFocusedFileTreeIndex = this.focusedFileTreesByResponseId.get(response.id);\n\t\tif (fileTrees?.length && lastFocusedFileTreeIndex !== undefined && lastFocusedFileTreeIndex < fileTrees.length) {\n\t\t\treturn fileTrees[lastFocusedFileTreeIndex];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tsetVisible(visible: boolean): void {\n\t\tthis._isVisible = visible;\n\t\tthis._onDidChangeVisibility.fire(visible);\n\t}\n\n\tlayout(width: number): void {\n\t\tthis._currentLayoutWidth = width - (this.rendererOptions.noPadding ? 0 : 40); // padding\n\t\tfor (const editor of this._editorPool.inUse()) {\n\t\t\teditor.layout(this._currentLayoutWidth);\n\t\t}\n\t\tfor (const diffEditor of this._diffEditorPool.inUse()) {\n\t\t\tdiffEditor.layout(this._currentLayoutWidth);\n\t\t}\n\t}\n\n\trenderTemplate(container: HTMLElement): IChatListItemTemplate {\n\t\tconst templateDisposables = new DisposableStore();\n\t\tconst rowContainer = dom.append(container, $('.interactive-item-container'));\n\t\tif (this.rendererOptions.renderStyle === 'compact') {\n\t\t\trowContainer.classList.add('interactive-item-compact');\n\t\t}\n\t\tif (this.rendererOptions.noPadding) {\n\t\t\trowContainer.classList.add('no-padding');\n\t\t}\n\n\t\tlet headerParent = rowContainer;\n\t\tlet valueParent = rowContainer;\n\t\tlet detailContainerParent: HTMLElement | undefined;\n\t\tlet toolbarParent: HTMLElement | undefined;\n\n\t\tif (this.rendererOptions.renderStyle === 'minimal') {\n\t\t\trowContainer.classList.add('interactive-item-compact');\n\t\t\trowContainer.classList.add('minimal');\n\t\t\t// -----------------------------------------------------\n\t\t\t//  icon | details\n\t\t\t//       | references\n\t\t\t//       | value\n\t\t\t// -----------------------------------------------------\n\t\t\tconst lhsContainer = dom.append(rowContainer, $('.column.left'));\n\t\t\tconst rhsContainer = dom.append(rowContainer, $('.column.right'));\n\n\t\t\theaderParent = lhsContainer;\n\t\t\tdetailContainerParent = rhsContainer;\n\t\t\tvalueParent = rhsContainer;\n\t\t\ttoolbarParent = dom.append(rowContainer, $('.header'));\n\t\t}\n\n\t\tconst header = dom.append(headerParent, $('.header'));\n\t\tconst user = dom.append(header, $('.user'));\n\t\tuser.tabIndex = 0;\n\t\tuser.role = 'toolbar';\n\t\tconst avatarContainer = dom.append(user, $('.avatar-container'));\n\t\tconst username = dom.append(user, $('h3.username'));\n\t\tconst detailContainer = dom.append(detailContainerParent ?? user, $('span.detail-container'));\n\t\tconst detail = dom.append(detailContainer, $('span.detail'));\n\t\tdom.append(detailContainer, $('span.chat-animated-ellipsis'));\n\t\tconst value = dom.append(valueParent, $('.value'));\n\t\tconst elementDisposables = new DisposableStore();\n\n\t\tconst contextKeyService = templateDisposables.add(this.contextKeyService.createScoped(rowContainer));\n\t\tconst scopedInstantiationService = templateDisposables.add(this.instantiationService.createChild(new ServiceCollection([IContextKeyService, contextKeyService])));\n\n\t\tlet titleToolbar: MenuWorkbenchToolBar | undefined;\n\t\tif (this.rendererOptions.noHeader) {\n\t\t\theader.classList.add('hidden');\n\t\t} else {\n\t\t\ttitleToolbar = templateDisposables.add(scopedInstantiationService.createInstance(MenuWorkbenchToolBar, toolbarParent ?? header, MenuId.ChatMessageTitle, {\n\t\t\t\tmenuOptions: {\n\t\t\t\t\tshouldForwardArgs: true\n\t\t\t\t},\n\t\t\t\ttoolbarOptions: {\n\t\t\t\t\tshouldInlineSubmenu: submenu => submenu.actions.length <= 1\n\t\t\t\t},\n\t\t\t\tactionViewItemProvider: (action: IAction, options: IActionViewItemOptions) => {\n\t\t\t\t\tif (action instanceof MenuItemAction && action.item.id === MarkUnhelpfulActionId) {\n\t\t\t\t\t\treturn scopedInstantiationService.createInstance(ChatVoteDownButton, action, options as IMenuEntryActionViewItemOptions);\n\t\t\t\t\t}\n\t\t\t\t\treturn createActionViewItem(scopedInstantiationService, action, options);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tconst agentHover = templateDisposables.add(this.instantiationService.createInstance(ChatAgentHover));\n\t\tconst hoverContent = () => {\n\t\t\tif (isResponseVM(template.currentElement) && template.currentElement.agent && !template.currentElement.agent.isDefault) {\n\t\t\t\tagentHover.setAgent(template.currentElement.agent.id);\n\t\t\t\treturn agentHover.domNode;\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t};\n\t\tconst hoverOptions = getChatAgentHoverOptions(() => isResponseVM(template.currentElement) ? template.currentElement.agent : undefined, this.commandService);\n\t\ttemplateDisposables.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('element'), user, hoverContent, hoverOptions));\n\t\ttemplateDisposables.add(dom.addDisposableListener(user, dom.EventType.KEY_DOWN, e => {\n\t\t\tconst ev = new StandardKeyboardEvent(e);\n\t\t\tif (ev.equals(KeyCode.Space) || ev.equals(KeyCode.Enter)) {\n\t\t\t\tconst content = hoverContent();\n\t\t\t\tif (content) {\n\t\t\t\t\tthis.hoverService.showHover({ content, target: user, trapFocus: true, actions: hoverOptions.actions }, true);\n\t\t\t\t}\n\t\t\t} else if (ev.equals(KeyCode.Escape)) {\n\t\t\t\tthis.hoverService.hideHover();\n\t\t\t}\n\t\t}));\n\t\tconst template: IChatListItemTemplate = { avatarContainer, username, detail, value, rowContainer, elementDisposables, templateDisposables, contextKeyService, instantiationService: scopedInstantiationService, agentHover, titleToolbar };\n\t\treturn template;\n\t}\n\n\trenderElement(node: ITreeNode<ChatTreeItem, FuzzyScore>, index: number, templateData: IChatListItemTemplate): void {\n\t\tthis.renderChatTreeItem(node.element, index, templateData);\n\t}\n\n\trenderChatTreeItem(element: ChatTreeItem, index: number, templateData: IChatListItemTemplate): void {\n\t\ttemplateData.currentElement = element;\n\t\tconst kind = isRequestVM(element) ? 'request' :\n\t\t\tisResponseVM(element) ? 'response' :\n\t\t\t\t'welcome';\n\t\tthis.traceLayout('renderElement', `${kind}, index=${index}`);\n\n\t\tCONTEXT_RESPONSE.bindTo(templateData.contextKeyService).set(isResponseVM(element));\n\t\tCONTEXT_REQUEST.bindTo(templateData.contextKeyService).set(isRequestVM(element));\n\t\tCONTEXT_RESPONSE_DETECTED_AGENT_COMMAND.bindTo(templateData.contextKeyService).set(isResponseVM(element) && element.agentOrSlashCommandDetected);\n\t\tif (isResponseVM(element)) {\n\t\t\tCONTEXT_CHAT_RESPONSE_SUPPORT_ISSUE_REPORTING.bindTo(templateData.contextKeyService).set(!!element.agent?.metadata.supportIssueReporting);\n\t\t\tCONTEXT_RESPONSE_VOTE.bindTo(templateData.contextKeyService).set(element.vote === ChatAgentVoteDirection.Up ? 'up' : element.vote === ChatAgentVoteDirection.Down ? 'down' : '');\n\t\t} else {\n\t\t\tCONTEXT_RESPONSE_VOTE.bindTo(templateData.contextKeyService).set('');\n\t\t}\n\n\t\tif (templateData.titleToolbar) {\n\t\t\ttemplateData.titleToolbar.context = element;\n\t\t}\n\n\t\tCONTEXT_RESPONSE_ERROR.bindTo(templateData.contextKeyService).set(isResponseVM(element) && !!element.errorDetails);\n\t\tconst isFiltered = !!(isResponseVM(element) && element.errorDetails?.responseIsFiltered);\n\t\tCONTEXT_RESPONSE_FILTERED.bindTo(templateData.contextKeyService).set(isFiltered);\n\n\t\ttemplateData.rowContainer.classList.toggle('interactive-request', isRequestVM(element));\n\t\ttemplateData.rowContainer.classList.toggle('interactive-response', isResponseVM(element));\n\t\ttemplateData.rowContainer.classList.toggle('interactive-welcome', isWelcomeVM(element));\n\t\ttemplateData.rowContainer.classList.toggle('show-detail-progress', isResponseVM(element) && !element.isComplete && !element.progressMessages.length);\n\t\ttemplateData.username.textContent = element.username;\n\t\tif (!this.rendererOptions.noHeader) {\n\t\t\tthis.renderAvatar(element, templateData);\n\t\t}\n\n\t\tdom.clearNode(templateData.detail);\n\t\tif (isResponseVM(element)) {\n\t\t\tthis.renderDetail(element, templateData);\n\t\t}\n\n\t\tif (isRequestVM(element) && element.confirmation) {\n\t\t\tthis.renderConfirmationAction(element, templateData);\n\t\t}\n\n\t\t// Do a progressive render if\n\t\t// - This the last response in the list\n\t\t// - And it has some content\n\t\t// - And the response is not complete\n\t\t//   - Or, we previously started a progressive rendering of this element (if the element is complete, we will finish progressive rendering with a very fast rate)\n\t\tif (isResponseVM(element) && index === this.delegate.getListLength() - 1 && (!element.isComplete || element.renderData) && element.response.value.length) {\n\t\t\tthis.traceLayout('renderElement', `start progressive render ${kind}, index=${index}`);\n\n\t\t\tconst timer = templateData.elementDisposables.add(new dom.WindowIntervalTimer());\n\t\t\tconst runProgressiveRender = (initial?: boolean) => {\n\t\t\t\ttry {\n\t\t\t\t\tif (this.doNextProgressiveRender(element, index, templateData, !!initial)) {\n\t\t\t\t\t\ttimer.cancel();\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Kill the timer if anything went wrong, avoid getting stuck in a nasty rendering loop.\n\t\t\t\t\ttimer.cancel();\n\t\t\t\t\tthis.logService.error(err);\n\t\t\t\t}\n\t\t\t};\n\t\t\ttimer.cancelAndSet(runProgressiveRender, 50, dom.getWindow(templateData.rowContainer));\n\t\t\trunProgressiveRender(true);\n\t\t} else if (isResponseVM(element)) {\n\t\t\tthis.basicRenderElement(element, index, templateData);\n\t\t} else if (isRequestVM(element)) {\n\t\t\tthis.basicRenderElement(element, index, templateData);\n\t\t} else {\n\t\t\tthis.renderWelcomeMessage(element, templateData);\n\t\t}\n\t}\n\n\tprivate renderDetail(element: IChatResponseViewModel, templateData: IChatListItemTemplate): void {\n\t\ttemplateData.elementDisposables.add(autorun(reader => {\n\t\t\tthis._renderDetail(element, templateData);\n\t\t}));\n\t}\n\n\tprivate _renderDetail(element: IChatResponseViewModel, templateData: IChatListItemTemplate): void {\n\n\t\tdom.clearNode(templateData.detail);\n\n\t\tif (element.agentOrSlashCommandDetected) {\n\t\t\tconst msg = element.slashCommand ? localize('usedAgentSlashCommand', \"used {0} [[(rerun without)]]\", `${chatSubcommandLeader}${element.slashCommand.name}`) : localize('usedAgent', \"[[(rerun without)]]\");\n\t\t\tdom.reset(templateData.detail, renderFormattedText(msg, {\n\t\t\t\tclassName: 'agentOrSlashCommandDetected',\n\t\t\t\tinline: true,\n\t\t\t\tactionHandler: {\n\t\t\t\t\tdisposables: templateData.elementDisposables,\n\t\t\t\t\tcallback: (content) => {\n\t\t\t\t\t\tthis._onDidClickRerunWithAgentOrCommandDetection.fire(element);\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t}));\n\n\t\t} else if (!element.isComplete) {\n\t\t\ttemplateData.detail.textContent = GeneratingPhrase;\n\t\t}\n\t}\n\n\tprivate renderConfirmationAction(element: IChatRequestViewModel, templateData: IChatListItemTemplate) {\n\t\tdom.clearNode(templateData.detail);\n\t\tif (element.confirmation) {\n\t\t\ttemplateData.detail.textContent = localize('chatConfirmationAction', 'selected \"{0}\"', element.confirmation);\n\t\t}\n\t}\n\n\tprivate renderAvatar(element: ChatTreeItem, templateData: IChatListItemTemplate): void {\n\t\tconst icon = isResponseVM(element) ?\n\t\t\tthis.getAgentIcon(element.agent?.metadata) :\n\t\t\t(element.avatarIcon ?? Codicon.account);\n\t\tif (icon instanceof URI) {\n\t\t\tconst avatarIcon = dom.$<HTMLImageElement>('img.icon');\n\t\t\tavatarIcon.src = FileAccess.uriToBrowserUri(icon).toString(true);\n\t\t\ttemplateData.avatarContainer.replaceChildren(dom.$('.avatar', undefined, avatarIcon));\n\t\t} else {\n\t\t\tconst avatarIcon = dom.$(ThemeIcon.asCSSSelector(icon));\n\t\t\ttemplateData.avatarContainer.replaceChildren(dom.$('.avatar.codicon-avatar', undefined, avatarIcon));\n\t\t}\n\t}\n\n\tprivate getAgentIcon(agent: IChatAgentMetadata | undefined): URI | ThemeIcon {\n\t\tif (agent?.themeIcon) {\n\t\t\treturn agent.themeIcon;\n\t\t} else if (agent?.iconDark && this.themeService.getColorTheme().type === ColorScheme.DARK) {\n\t\t\treturn agent.iconDark;\n\t\t} else if (agent?.icon) {\n\t\t\treturn agent.icon;\n\t\t} else {\n\t\t\treturn Codicon.copilot;\n\t\t}\n\t}\n\n\tprivate basicRenderElement(element: ChatTreeItem, index: number, templateData: IChatListItemTemplate) {\n\t\tlet value: IChatRendererContent[] = [];\n\t\tif (isRequestVM(element) && !element.confirmation) {\n\t\t\tconst markdown = 'message' in element.message ?\n\t\t\t\telement.message.message :\n\t\t\t\tthis.markdownDecorationsRenderer.convertParsedRequestToMarkdown(element.message);\n\t\t\tvalue = [{ content: new MarkdownString(markdown), kind: 'markdownContent' }];\n\t\t} else if (isResponseVM(element)) {\n\t\t\tif (element.contentReferences.length) {\n\t\t\t\tvalue.push({ kind: 'references', references: element.contentReferences });\n\t\t\t}\n\t\t\tvalue.push(...annotateSpecialMarkdownContent(element.response.value));\n\t\t\tif (element.codeCitations.length) {\n\t\t\t\tvalue.push({ kind: 'codeCitations', citations: element.codeCitations });\n\t\t\t}\n\t\t}\n\n\t\tdom.clearNode(templateData.value);\n\n\t\tif (isResponseVM(element)) {\n\t\t\tthis.renderDetail(element, templateData);\n\t\t}\n\n\t\tconst isFiltered = !!(isResponseVM(element) && element.errorDetails?.responseIsFiltered);\n\n\t\tconst parts: IChatContentPart[] = [];\n\t\tif (!isFiltered) {\n\t\t\tvalue.forEach((data, index) => {\n\t\t\t\tconst context: IChatContentPartRenderContext = {\n\t\t\t\t\telement,\n\t\t\t\t\tindex,\n\t\t\t\t\tcontent: value,\n\t\t\t\t\tpreceedingContentParts: parts,\n\t\t\t\t};\n\t\t\t\tconst newPart = this.renderChatContentPart(data, templateData, context);\n\t\t\t\tif (newPart) {\n\t\t\t\t\ttemplateData.value.appendChild(newPart.domNode);\n\t\t\t\t\tparts.push(newPart);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (templateData.renderedParts) {\n\t\t\tdispose(templateData.renderedParts);\n\t\t}\n\t\ttemplateData.renderedParts = parts;\n\n\t\tif (!isFiltered) {\n\t\t\tif (isRequestVM(element) && element.variables.length) {\n\t\t\t\tconst newPart = this.renderAttachments(element.variables, element.contentReferences, templateData);\n\t\t\t\tif (newPart) {\n\t\t\t\t\ttemplateData.value.appendChild(newPart.domNode);\n\t\t\t\t\ttemplateData.elementDisposables.add(newPart);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (isResponseVM(element) && element.errorDetails?.message) {\n\t\t\tconst renderedError = this.instantiationService.createInstance(ChatWarningContentPart, element.errorDetails.responseIsFiltered ? 'info' : 'error', new MarkdownString(element.errorDetails.message), this.renderer);\n\t\t\ttemplateData.elementDisposables.add(renderedError);\n\t\t\ttemplateData.value.appendChild(renderedError.domNode);\n\t\t}\n\n\t\tconst newHeight = templateData.rowContainer.offsetHeight;\n\t\tconst fireEvent = !element.currentRenderedHeight || element.currentRenderedHeight !== newHeight;\n\t\telement.currentRenderedHeight = newHeight;\n\t\tif (fireEvent) {\n\t\t\tconst disposable = templateData.elementDisposables.add(dom.scheduleAtNextAnimationFrame(dom.getWindow(templateData.value), () => {\n\t\t\t\t// Have to recompute the height here because codeblock rendering is currently async and it may have changed.\n\t\t\t\t// If it becomes properly sync, then this could be removed.\n\t\t\t\telement.currentRenderedHeight = templateData.rowContainer.offsetHeight;\n\t\t\t\tdisposable.dispose();\n\t\t\t\tthis._onDidChangeItemHeight.fire({ element, height: element.currentRenderedHeight });\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate updateItemHeight(templateData: IChatListItemTemplate): void {\n\t\tif (!templateData.currentElement) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newHeight = templateData.rowContainer.offsetHeight;\n\t\ttemplateData.currentElement.currentRenderedHeight = newHeight;\n\t\tthis._onDidChangeItemHeight.fire({ element: templateData.currentElement, height: newHeight });\n\t}\n\n\tprivate renderWelcomeMessage(element: IChatWelcomeMessageViewModel, templateData: IChatListItemTemplate) {\n\t\tdom.clearNode(templateData.value);\n\n\t\telement.content.forEach((item, i) => {\n\t\t\tif (Array.isArray(item)) {\n\t\t\t\tconst scopedInstaService = templateData.elementDisposables.add(this.instantiationService.createChild(new ServiceCollection([IContextKeyService, templateData.contextKeyService])));\n\t\t\t\ttemplateData.elementDisposables.add(\n\t\t\t\t\tscopedInstaService.createInstance<typeof ChatFollowups<IChatFollowup>, ChatFollowups<IChatFollowup>>(\n\t\t\t\t\t\tChatFollowups,\n\t\t\t\t\t\ttemplateData.value,\n\t\t\t\t\t\titem,\n\t\t\t\t\t\tthis.location,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tfollowup => this._onDidClickFollowup.fire(followup)));\n\t\t\t} else {\n\t\t\t\tconst context: IChatContentPartRenderContext = {\n\t\t\t\t\telement,\n\t\t\t\t\tindex: i,\n\t\t\t\t\t// NA for welcome msg\n\t\t\t\t\tcontent: [],\n\t\t\t\t\tpreceedingContentParts: []\n\t\t\t\t};\n\t\t\t\tconst result = this.renderMarkdown(item, templateData, context);\n\t\t\t\ttemplateData.value.appendChild(result.domNode);\n\t\t\t\ttemplateData.elementDisposables.add(result);\n\t\t\t}\n\t\t});\n\n\t\tconst newHeight = templateData.rowContainer.offsetHeight;\n\t\tconst fireEvent = !element.currentRenderedHeight || element.currentRenderedHeight !== newHeight;\n\t\telement.currentRenderedHeight = newHeight;\n\t\tif (fireEvent) {\n\t\t\tconst disposable = templateData.elementDisposables.add(dom.scheduleAtNextAnimationFrame(dom.getWindow(templateData.value), () => {\n\t\t\t\t// Have to recompute the height here because codeblock rendering is currently async and it may have changed.\n\t\t\t\t// If it becomes properly sync, then this could be removed.\n\t\t\t\telement.currentRenderedHeight = templateData.rowContainer.offsetHeight;\n\t\t\t\tdisposable.dispose();\n\t\t\t\tthis._onDidChangeItemHeight.fire({ element, height: element.currentRenderedHeight });\n\t\t\t}));\n\t\t}\n\t}\n\n\t/**\n\t *\t@returns true if progressive rendering should be considered complete- the element's data is fully rendered or the view is not visible\n\t */\n\tprivate doNextProgressiveRender(element: IChatResponseViewModel, index: number, templateData: IChatListItemTemplate, isInRenderElement: boolean): boolean {\n\t\tif (!this._isVisible) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (element.isCanceled) {\n\t\t\tthis.traceLayout('doNextProgressiveRender', `canceled, index=${index}`);\n\t\t\telement.renderData = undefined;\n\t\t\tthis.basicRenderElement(element, index, templateData);\n\t\t\treturn true;\n\t\t}\n\n\t\tlet isFullyRendered = false;\n\t\tthis.traceLayout('doNextProgressiveRender', `START progressive render, index=${index}, renderData=${JSON.stringify(element.renderData)}`);\n\t\tconst contentForThisTurn = this.getNextProgressiveRenderContent(element);\n\t\tconst partsToRender = this.diff(templateData.renderedParts ?? [], contentForThisTurn, element);\n\t\tisFullyRendered = partsToRender.every(part => part === null);\n\n\t\tif (isFullyRendered) {\n\t\t\tif (element.isComplete) {\n\t\t\t\t// Response is done and content is rendered, so do a normal render\n\t\t\t\tthis.traceLayout('doNextProgressiveRender', `END progressive render, index=${index} and clearing renderData, response is complete`);\n\t\t\t\telement.renderData = undefined;\n\t\t\t\tthis.basicRenderElement(element, index, templateData);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Nothing new to render, not done, keep waiting\n\t\t\tthis.traceLayout('doNextProgressiveRender', 'caught up with the stream- no new content to render');\n\t\t\treturn false;\n\t\t}\n\n\t\t// Do an actual progressive render\n\t\tthis.traceLayout('doNextProgressiveRender', `doing progressive render, ${partsToRender.length} parts to render`);\n\t\tthis.renderChatContentDiff(partsToRender, contentForThisTurn, element, templateData);\n\n\t\tconst height = templateData.rowContainer.offsetHeight;\n\t\telement.currentRenderedHeight = height;\n\t\tif (!isInRenderElement) {\n\t\t\tthis._onDidChangeItemHeight.fire({ element, height: templateData.rowContainer.offsetHeight });\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate renderChatContentDiff(partsToRender: ReadonlyArray<IChatRendererContent | null>, contentForThisTurn: ReadonlyArray<IChatRendererContent>, element: IChatResponseViewModel, templateData: IChatListItemTemplate): void {\n\t\tconst renderedParts = templateData.renderedParts ?? [];\n\t\ttemplateData.renderedParts = renderedParts;\n\t\tpartsToRender.forEach((partToRender, index) => {\n\t\t\tif (!partToRender) {\n\t\t\t\t// null=no change\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst alreadyRenderedPart = templateData.renderedParts?.[index];\n\t\t\tif (alreadyRenderedPart) {\n\t\t\t\talreadyRenderedPart.dispose();\n\t\t\t}\n\n\t\t\tconst preceedingContentParts = renderedParts.slice(0, index);\n\t\t\tconst context: IChatContentPartRenderContext = {\n\t\t\t\telement,\n\t\t\t\tcontent: contentForThisTurn,\n\t\t\t\tpreceedingContentParts,\n\t\t\t\tindex\n\t\t\t};\n\t\t\tconst newPart = this.renderChatContentPart(partToRender, templateData, context);\n\t\t\tif (newPart) {\n\t\t\t\t// Maybe the part can't be rendered in this context, but this shouldn't really happen\n\t\t\t\tif (alreadyRenderedPart) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// This method can throw HierarchyRequestError\n\t\t\t\t\t\talreadyRenderedPart.domNode.replaceWith(newPart.domNode);\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tthis.logService.error('ChatListItemRenderer#renderChatContentDiff: error replacing part', err);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttemplateData.value.appendChild(newPart.domNode);\n\t\t\t\t}\n\n\t\t\t\trenderedParts[index] = newPart;\n\t\t\t} else if (alreadyRenderedPart) {\n\t\t\t\talreadyRenderedPart.domNode.remove();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Returns all content parts that should be rendered, and trimmed markdown content. We will diff this with the current rendered set.\n\t */\n\tprivate getNextProgressiveRenderContent(element: IChatResponseViewModel): IChatRendererContent[] {\n\t\tconst data = this.getDataForProgressiveRender(element);\n\n\t\tconst renderableResponse = annotateSpecialMarkdownContent(element.response.value);\n\n\t\tthis.traceLayout('getNextProgressiveRenderContent', `Want to render ${data.numWordsToRender} at ${data.rate} words/s, counting...`);\n\t\tlet numNeededWords = data.numWordsToRender;\n\t\tconst partsToRender: IChatRendererContent[] = [];\n\t\tif (element.contentReferences.length) {\n\t\t\tpartsToRender.push({ kind: 'references', references: element.contentReferences });\n\t\t}\n\n\t\tfor (let i = 0; i < renderableResponse.length; i++) {\n\t\t\tconst part = renderableResponse[i];\n\t\t\tif (numNeededWords <= 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (part.kind === 'markdownContent') {\n\t\t\t\tconst wordCountResult = getNWords(part.content.value, numNeededWords);\n\t\t\t\tif (wordCountResult.isFullString) {\n\t\t\t\t\tpartsToRender.push(part);\n\t\t\t\t} else {\n\t\t\t\t\tpartsToRender.push({ kind: 'markdownContent', content: new MarkdownString(wordCountResult.value, part.content) });\n\t\t\t\t}\n\n\t\t\t\tthis.traceLayout('getNextProgressiveRenderContent', `  Chunk ${i}: Want to render ${numNeededWords} words and found ${wordCountResult.returnedWordCount} words. Total words in chunk: ${wordCountResult.totalWordCount}`);\n\t\t\t\tnumNeededWords -= wordCountResult.returnedWordCount;\n\t\t\t} else {\n\t\t\t\tpartsToRender.push(part);\n\t\t\t}\n\t\t}\n\n\t\tconst lastWordCount = element.contentUpdateTimings?.lastWordCount ?? 0;\n\t\tconst newRenderedWordCount = data.numWordsToRender - numNeededWords;\n\t\tconst bufferWords = lastWordCount - newRenderedWordCount;\n\t\tthis.traceLayout('getNextProgressiveRenderContent', `Want to render ${data.numWordsToRender} words. Rendering ${newRenderedWordCount} words. Buffer: ${bufferWords} words`);\n\t\tif (newRenderedWordCount > 0 && newRenderedWordCount !== element.renderData?.renderedWordCount) {\n\t\t\t// Only update lastRenderTime when we actually render new content\n\t\t\telement.renderData = { lastRenderTime: Date.now(), renderedWordCount: newRenderedWordCount, renderedParts: partsToRender };\n\t\t}\n\n\t\treturn partsToRender;\n\t}\n\n\tprivate getDataForProgressiveRender(element: IChatResponseViewModel) {\n\t\tconst renderData = element.renderData ?? { lastRenderTime: 0, renderedWordCount: 0 };\n\n\t\tconst rate = this.getProgressiveRenderRate(element);\n\t\tconst numWordsToRender = renderData.lastRenderTime === 0 ?\n\t\t\t1 :\n\t\t\trenderData.renderedWordCount +\n\t\t\t// Additional words to render beyond what's already rendered\n\t\t\tMath.floor((Date.now() - renderData.lastRenderTime) / 1000 * rate);\n\n\t\treturn {\n\t\t\tnumWordsToRender,\n\t\t\trate\n\t\t};\n\t}\n\n\tprivate diff(renderedParts: ReadonlyArray<IChatContentPart>, contentToRender: ReadonlyArray<IChatRendererContent>, element: ChatTreeItem): ReadonlyArray<IChatRendererContent | null> {\n\t\tconst diff: (IChatRendererContent | null)[] = [];\n\t\tfor (let i = 0; i < contentToRender.length; i++) {\n\t\t\tconst content = contentToRender[i];\n\t\t\tconst renderedPart = renderedParts[i];\n\n\t\t\tif (!renderedPart || !renderedPart.hasSameContent(content, contentToRender.slice(i + 1), element)) {\n\t\t\t\tdiff.push(content);\n\t\t\t} else {\n\t\t\t\t// null -> no change\n\t\t\t\tdiff.push(null);\n\t\t\t}\n\t\t}\n\n\t\treturn diff;\n\t}\n\n\tprivate renderChatContentPart(content: IChatRendererContent, templateData: IChatListItemTemplate, context: IChatContentPartRenderContext): IChatContentPart | undefined {\n\t\tif (content.kind === 'treeData') {\n\t\t\treturn this.renderTreeData(content, templateData, context);\n\t\t} else if (content.kind === 'progressMessage') {\n\t\t\treturn this.instantiationService.createInstance(ChatProgressContentPart, content, this.renderer, context);\n\t\t} else if (content.kind === 'progressTask') {\n\t\t\treturn this.renderProgressTask(content, templateData, context);\n\t\t} else if (content.kind === 'command') {\n\t\t\treturn this.instantiationService.createInstance(ChatCommandButtonContentPart, content, context);\n\t\t} else if (content.kind === 'textEditGroup') {\n\t\t\treturn this.renderTextEdit(context, content, templateData);\n\t\t} else if (content.kind === 'confirmation') {\n\t\t\treturn this.renderConfirmation(context, content, templateData);\n\t\t} else if (content.kind === 'warning') {\n\t\t\treturn this.instantiationService.createInstance(ChatWarningContentPart, 'warning', content.content, this.renderer);\n\t\t} else if (content.kind === 'markdownContent') {\n\t\t\treturn this.renderMarkdown(content.content, templateData, context);\n\t\t} else if (content.kind === 'references') {\n\t\t\treturn this.renderContentReferencesListData(content, undefined, context, templateData);\n\t\t} else if (content.kind === 'codeCitations') {\n\t\t\treturn this.renderCodeCitationsListData(content, context, templateData);\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate renderTreeData(content: IChatTreeData, templateData: IChatListItemTemplate, context: IChatContentPartRenderContext): IChatContentPart {\n\t\tconst data = content.treeData;\n\t\tconst treeDataIndex = context.preceedingContentParts.filter(part => part instanceof ChatTreeContentPart).length;\n\t\tconst treePart = this.instantiationService.createInstance(ChatTreeContentPart, data, context.element, this._treePool, treeDataIndex);\n\n\t\ttreePart.addDisposable(treePart.onDidChangeHeight(() => {\n\t\t\tthis.updateItemHeight(templateData);\n\t\t}));\n\n\t\tif (isResponseVM(context.element)) {\n\t\t\tconst fileTreeFocusInfo = {\n\t\t\t\ttreeDataId: data.uri.toString(),\n\t\t\t\ttreeIndex: treeDataIndex,\n\t\t\t\tfocus() {\n\t\t\t\t\ttreePart.domFocus();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// TODO@roblourens there's got to be a better way to navigate trees\n\t\t\ttreePart.addDisposable(treePart.onDidFocus(() => {\n\t\t\t\tthis.focusedFileTreesByResponseId.set(context.element.id, fileTreeFocusInfo.treeIndex);\n\t\t\t}));\n\n\t\t\tconst fileTrees = this.fileTreesByResponseId.get(context.element.id) ?? [];\n\t\t\tfileTrees.push(fileTreeFocusInfo);\n\t\t\tthis.fileTreesByResponseId.set(context.element.id, distinct(fileTrees, (v) => v.treeDataId));\n\t\t\ttreePart.addDisposable(toDisposable(() => this.fileTreesByResponseId.set(context.element.id, fileTrees.filter(v => v.treeDataId !== data.uri.toString()))));\n\t\t}\n\n\t\treturn treePart;\n\t}\n\n\tprivate renderContentReferencesListData(references: IChatReferences, labelOverride: string | undefined, context: IChatContentPartRenderContext, templateData: IChatListItemTemplate): ChatCollapsibleListContentPart {\n\t\tconst referencesPart = this.instantiationService.createInstance(ChatCollapsibleListContentPart, references.references, labelOverride, context.element as IChatResponseViewModel, this._contentReferencesListPool);\n\t\treferencesPart.addDisposable(referencesPart.onDidChangeHeight(() => {\n\t\t\tthis.updateItemHeight(templateData);\n\t\t}));\n\n\t\treturn referencesPart;\n\t}\n\n\tprivate renderCodeCitationsListData(citations: IChatCodeCitations, context: IChatContentPartRenderContext, templateData: IChatListItemTemplate): ChatCodeCitationContentPart {\n\t\tconst citationsPart = this.instantiationService.createInstance(ChatCodeCitationContentPart, citations, context);\n\t\treturn citationsPart;\n\t}\n\n\tprivate renderProgressTask(task: IChatTask, templateData: IChatListItemTemplate, context: IChatContentPartRenderContext): IChatContentPart | undefined {\n\t\tif (!isResponseVM(context.element)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst taskPart = this.instantiationService.createInstance(ChatTaskContentPart, task, this._contentReferencesListPool, this.renderer, context);\n\t\ttaskPart.addDisposable(taskPart.onDidChangeHeight(() => {\n\t\t\tthis.updateItemHeight(templateData);\n\t\t}));\n\t\treturn taskPart;\n\t}\n\n\tprivate renderConfirmation(context: IChatContentPartRenderContext, confirmation: IChatConfirmation, templateData: IChatListItemTemplate): IChatContentPart {\n\t\tconst part = this.instantiationService.createInstance(ChatConfirmationContentPart, confirmation, context);\n\t\tpart.addDisposable(part.onDidChangeHeight(() => this.updateItemHeight(templateData)));\n\t\treturn part;\n\t}\n\n\tprivate renderAttachments(variables: IChatRequestVariableEntry[], contentReferences: ReadonlyArray<IChatContentReference> | undefined, templateData: IChatListItemTemplate) {\n\t\treturn this.instantiationService.createInstance(ChatAttachmentsContentPart, variables, contentReferences, undefined);\n\t}\n\n\tprivate renderTextEdit(context: IChatContentPartRenderContext, chatTextEdit: IChatTextEditGroup, templateData: IChatListItemTemplate): IChatContentPart {\n\t\tconst textEditPart = this.instantiationService.createInstance(ChatTextEditContentPart, chatTextEdit, context, this.rendererOptions, this._diffEditorPool, this._currentLayoutWidth);\n\t\ttextEditPart.addDisposable(textEditPart.onDidChangeHeight(() => {\n\t\t\ttextEditPart.layout(this._currentLayoutWidth);\n\t\t\tthis.updateItemHeight(templateData);\n\t\t}));\n\n\t\treturn textEditPart;\n\t}\n\n\tprivate renderMarkdown(markdown: IMarkdownString, templateData: IChatListItemTemplate, context: IChatContentPartRenderContext): IChatContentPart {\n\t\tconst element = context.element;\n\t\tconst fillInIncompleteTokens = isResponseVM(element) && (!element.isComplete || element.isCanceled || element.errorDetails?.responseIsFiltered || element.errorDetails?.responseIsIncomplete || !!element.renderData);\n\t\tconst codeBlockStartIndex = context.preceedingContentParts.reduce((acc, part) => acc + (part instanceof ChatMarkdownContentPart ? part.codeblocks.length : 0), 0);\n\t\tconst markdownPart = this.instantiationService.createInstance(ChatMarkdownContentPart, markdown, context, this._editorPool, fillInIncompleteTokens, codeBlockStartIndex, this.renderer, this._currentLayoutWidth, this.codeBlockModelCollection, this.rendererOptions);\n\t\tmarkdownPart.addDisposable(markdownPart.onDidChangeHeight(() => {\n\t\t\tmarkdownPart.layout(this._currentLayoutWidth);\n\t\t\tthis.updateItemHeight(templateData);\n\t\t}));\n\n\t\tconst codeBlocksByResponseId = this.codeBlocksByResponseId.get(element.id) ?? [];\n\t\tthis.codeBlocksByResponseId.set(element.id, codeBlocksByResponseId);\n\t\tmarkdownPart.addDisposable(toDisposable(() => {\n\t\t\tconst codeBlocksByResponseId = this.codeBlocksByResponseId.get(element.id);\n\t\t\tif (codeBlocksByResponseId) {\n\t\t\t\tmarkdownPart.codeblocks.forEach((info, i) => delete codeBlocksByResponseId[codeBlockStartIndex + i]);\n\t\t\t}\n\t\t}));\n\n\t\tmarkdownPart.codeblocks.forEach((info, i) => {\n\t\t\tcodeBlocksByResponseId[codeBlockStartIndex + i] = info;\n\t\t\tif (info.uri) {\n\t\t\t\tconst uri = info.uri;\n\t\t\t\tthis.codeBlocksByEditorUri.set(uri, info);\n\t\t\t\tmarkdownPart.addDisposable(toDisposable(() => this.codeBlocksByEditorUri.delete(uri)));\n\t\t\t}\n\t\t});\n\n\t\treturn markdownPart;\n\t}\n\n\tdisposeElement(node: ITreeNode<ChatTreeItem, FuzzyScore>, index: number, templateData: IChatListItemTemplate): void {\n\t\tthis.traceLayout('disposeElement', `Disposing element, index=${index}`);\n\n\t\t// We could actually reuse a template across a renderElement call?\n\t\tif (templateData.renderedParts) {\n\t\t\ttry {\n\t\t\t\tdispose(coalesce(templateData.renderedParts));\n\t\t\t\ttemplateData.renderedParts = undefined;\n\t\t\t\tdom.clearNode(templateData.value);\n\t\t\t} catch (err) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\n\t\ttemplateData.currentElement = undefined;\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: IChatListItemTemplate): void {\n\t\ttemplateData.templateDisposables.dispose();\n\t}\n}\n\nexport class ChatListDelegate implements IListVirtualDelegate<ChatTreeItem> {\n\tconstructor(\n\t\tprivate readonly defaultElementHeight: number,\n\t\t@ILogService private readonly logService: ILogService\n\t) { }\n\n\tprivate _traceLayout(method: string, message: string) {\n\t\tif (forceVerboseLayoutTracing) {\n\t\t\tthis.logService.info(`ChatListDelegate#${method}: ${message}`);\n\t\t} else {\n\t\t\tthis.logService.trace(`ChatListDelegate#${method}: ${message}`);\n\t\t}\n\t}\n\n\tgetHeight(element: ChatTreeItem): number {\n\t\tconst kind = isRequestVM(element) ? 'request' : 'response';\n\t\tconst height = ('currentRenderedHeight' in element ? element.currentRenderedHeight : undefined) ?? this.defaultElementHeight;\n\t\tthis._traceLayout('getHeight', `${kind}, height=${height}`);\n\t\treturn height;\n\t}\n\n\tgetTemplateId(element: ChatTreeItem): string {\n\t\treturn ChatListItemRenderer.ID;\n\t}\n\n\thasDynamicHeight(element: ChatTreeItem): boolean {\n\t\treturn true;\n\t}\n}\n\nconst voteDownDetailLabels: Record<ChatAgentVoteDownReason, string> = {\n\t[ChatAgentVoteDownReason.IncorrectCode]: localize('incorrectCode', \"Suggested incorrect code\"),\n\t[ChatAgentVoteDownReason.DidNotFollowInstructions]: localize('didNotFollowInstructions', \"Didn't follow instructions\"),\n\t[ChatAgentVoteDownReason.MissingContext]: localize('missingContext', \"Missing context\"),\n\t[ChatAgentVoteDownReason.OffensiveOrUnsafe]: localize('offensiveOrUnsafe', \"Offensive or unsafe\"),\n\t[ChatAgentVoteDownReason.PoorlyWrittenOrFormatted]: localize('poorlyWrittenOrFormatted', \"Poorly written or formatted\"),\n\t[ChatAgentVoteDownReason.RefusedAValidRequest]: localize('refusedAValidRequest', \"Refused a valid request\"),\n\t[ChatAgentVoteDownReason.IncompleteCode]: localize('incompleteCode', \"Incomplete code\"),\n\t[ChatAgentVoteDownReason.WillReportIssue]: localize('reportIssue', \"Report an issue\"),\n\t[ChatAgentVoteDownReason.Other]: localize('other', \"Other\"),\n};\n\nexport class ChatVoteDownButton extends DropdownMenuActionViewItem {\n\tconstructor(\n\t\taction: IAction,\n\t\toptions: IDropdownMenuActionViewItemOptions | undefined,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IWorkbenchIssueService private readonly issueService: IWorkbenchIssueService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t) {\n\t\tsuper(action,\n\t\t\t{ getActions: () => this.getActions(), },\n\t\t\tcontextMenuService,\n\t\t\t{\n\t\t\t\t...options,\n\t\t\t\tclassNames: ThemeIcon.asClassNameArray(Codicon.thumbsdown),\n\t\t\t});\n\t}\n\n\tgetActions(): readonly IAction[] {\n\t\treturn [\n\t\t\tthis.getVoteDownDetailAction(ChatAgentVoteDownReason.IncorrectCode),\n\t\t\tthis.getVoteDownDetailAction(ChatAgentVoteDownReason.DidNotFollowInstructions),\n\t\t\tthis.getVoteDownDetailAction(ChatAgentVoteDownReason.IncompleteCode),\n\t\t\tthis.getVoteDownDetailAction(ChatAgentVoteDownReason.MissingContext),\n\t\t\tthis.getVoteDownDetailAction(ChatAgentVoteDownReason.PoorlyWrittenOrFormatted),\n\t\t\tthis.getVoteDownDetailAction(ChatAgentVoteDownReason.RefusedAValidRequest),\n\t\t\tthis.getVoteDownDetailAction(ChatAgentVoteDownReason.OffensiveOrUnsafe),\n\t\t\tthis.getVoteDownDetailAction(ChatAgentVoteDownReason.Other),\n\t\t\t{\n\t\t\t\tid: 'reportIssue',\n\t\t\t\tlabel: voteDownDetailLabels[ChatAgentVoteDownReason.WillReportIssue],\n\t\t\t\ttooltip: '',\n\t\t\t\tenabled: true,\n\t\t\t\tclass: undefined,\n\t\t\t\trun: async (context: IChatResponseViewModel) => {\n\t\t\t\t\tif (!isResponseVM(context)) {\n\t\t\t\t\t\tthis.logService.error('ChatVoteDownButton#run: invalid context');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tawait this.commandService.executeCommand(MarkUnhelpfulActionId, context, ChatAgentVoteDownReason.WillReportIssue);\n\t\t\t\t\tawait this.issueService.openReporter({ extensionId: context.agent?.extensionId.value });\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\n\t\tthis.element?.classList.toggle('checked', this.action.checked);\n\t}\n\n\tprivate getVoteDownDetailAction(reason: ChatAgentVoteDownReason): IAction {\n\t\tconst label = voteDownDetailLabels[reason];\n\t\treturn {\n\t\t\tid: MarkUnhelpfulActionId,\n\t\t\tlabel,\n\t\t\ttooltip: '',\n\t\t\tenabled: true,\n\t\t\tchecked: (this._context as IChatResponseViewModel).voteDownReason === reason,\n\t\t\tclass: undefined,\n\t\t\trun: async (context: IChatResponseViewModel) => {\n\t\t\t\tif (!isResponseVM(context)) {\n\t\t\t\t\tthis.logService.error('ChatVoteDownButton#getVoteDownDetailAction: invalid context');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tawait this.commandService.executeCommand(MarkUnhelpfulActionId, context, reason);\n\t\t\t}\n\t\t};\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,YAAY,SAAS;AACrB,SAAS,2BAA2B;AACpC,SAAS,6BAA6B;AACtC,SAAS,8BAA8B;AACvC,SAAS,4BAA4B,0CAA0C;AAC/E,SAAS,+BAA+B;AACxC,SAAS,4BAA4B;AACrC,SAAS,WAAW,qBAAqB;AACzC,SAAS,eAAe;AACxB,SAAS,UAAU,gBAAgB;AACnC,SAAS,eAAe;AACxB,SAAS,SAAS,aAAa;AAC/B,SAAS,kBAAkB;AAC3B,SAAS,iBAAiB,sBAAsB;AAChD,SAAS,eAAe;AACxB,SAAS,YAAY,iBAAiB,aAAa,SAAS,oBAAoB;AAChF,SAAS,mBAAmB;AAC5B,SAAS,kBAAkB;AAC3B,SAAS,aAAa;AACtB,SAAS,eAAe;AACxB,SAAS,iBAAiB;AAC1B,SAAS,WAAW;AACpB,SAAS,wBAAwB;AACjC,SAAS,gBAAgB;AACzB,SAAS,iCAAiC,4BAA4B;AACtE,SAAS,4BAA4B;AACrC,SAAS,QAAQ,sBAAsB;AACvC,SAAS,uBAAuB;AAChC,SAAS,6BAA6B;AACtC,SAAS,0BAA0B;AACnC,SAAS,2BAA2B;AACpC,SAAS,qBAAqB;AAC9B,SAAS,6BAA6B;AACtC,SAAS,yBAAyB;AAClC,SAAS,mBAAmB;AAC5B,SAAS,mBAAmB;AAC5B,SAAS,qBAAqB;AAC9B,SAAS,8BAA8B;AACvC,SAAS,sCAAsC;AAC/C,SAAS,mBAAmB,0BAA0B;AACtD,SAAS,+CAA+C,iBAAiB,kBAAkB,yCAAyC,wBAAwB,2BAA2B,6BAA6B;AACpN,SAAS,2BAA2B,0BAA0B;AAC9D,SAAS,4BAA4B;AACrC,SAAS,wBAAwB,yBAAyB,mBAAmB,uBAAuB,eAAe,WAAW,qBAAqB;AACnJ,SAAS,oBAAoB,iBAAiB,sBAAsB,uBAAuB,wBAAwB,8BAA8B,aAAa,cAAc,mBAAmB;AAC/L,SAAS,iBAAiB;AAC1B,SAAS,gCAAgC;AACzC,SAAS,6BAA6B;AACtC,SAAS,cAAc,kBAAkB,oBAAoB,mBAAmB,oCAAoC;AACpH,SAAS,gBAAgB,gCAAgC;AACzD,SAAS,kCAAkC;AAC3C,SAAS,mCAAmC;AAC5C,SAAS,oCAAoC;AAC7C,SAAS,mCAAmC;AAC5C,SAAS,kBAAkB,qCAAqC;AAChE,SAAS,yBAAyB,kBAAkB;AACpD,SAAS,+BAA+B;AACxC,SAAS,gCAAgC,2BAA2B;AACpE,SAAS,2BAA2B;AACpC,SAAS,yBAAyB,sBAAsB;AACxD,SAAS,qBAAqB,gBAAgB;AAC9C,SAAS,8BAA8B;AACvC,SAAS,qBAAqB;AAC9B,SAAS,uCAAuC;AAChD,SAAS,4BAA4B;AACrC,SAAS,yBAAyB;AAClC,SAAS,8BAA8B,qBAAqB;AAE5D,MAAM,IAAI,IAAI;AAuBd,MAAM,4BAA4B;AAU3B,IAAM,uBAAN,cAAmC,WAAqF;AAAA,EA8B9H,YACC,eACiB,UACA,iBACA,UACA,0BACjB,wBACwC,sBACjB,eACO,YACO,mBACL,cACE,gBACF,cAC/B;AACD,UAAM;AAbW;AACA;AACA;AACA;AAEuB;AAEV;AACO;AACL;AACE;AACF;AAIhC,SAAK,WAAW,KAAK,UAAU,KAAK,qBAAqB,eAAe,sBAAsB,MAAS,CAAC;AACxG,SAAK,8BAA8B,KAAK,qBAAqB,eAAe,+BAA+B;AAC3G,SAAK,cAAc,KAAK,UAAU,KAAK,qBAAqB,eAAe,YAAY,eAAe,UAAU,sBAAsB,CAAC;AACvI,SAAK,kBAAkB,KAAK,UAAU,KAAK,qBAAqB,eAAe,gBAAgB,eAAe,UAAU,sBAAsB,CAAC;AAC/I,SAAK,YAAY,KAAK,UAAU,KAAK,qBAAqB,eAAe,UAAU,KAAK,uBAAuB,KAAK,CAAC;AACrH,SAAK,6BAA6B,KAAK,UAAU,KAAK,qBAAqB,eAAe,qBAAqB,KAAK,uBAAuB,KAAK,CAAC;AAEjJ,SAAK,UAAU,KAAK,qBAAqB,eAAe,4BAA4B,CAAC;AAAA,EACtF;AAAA,EAjKD,OA0G+H;AAAA;AAAA;AAAA,EAC9H,OAAgB,KAAK;AAAA,EAEJ,yBAAyB,oBAAI,IAAkC;AAAA,EAC/D,wBAAwB,IAAI,YAAgC;AAAA,EAE5D,wBAAwB,oBAAI,IAAiC;AAAA,EAC7D,+BAA+B,oBAAI,IAAoB;AAAA,EAEvD;AAAA,EACA;AAAA,EAEE,sBAAsB,KAAK,UAAU,IAAI,QAAuB,CAAC;AAAA,EAC3E,qBAA2C,KAAK,oBAAoB;AAAA,EAE5D,8CAA8C,IAAI,QAAgC;AAAA,EAC1F,6CAA4E,KAAK,4CAA4C;AAAA,EAEnH,yBAAyB,KAAK,UAAU,IAAI,QAAiC,CAAC;AAAA,EACxF,wBAAwD,KAAK,uBAAuB;AAAA,EAE5E;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAET,sBAA8B;AAAA,EAC9B,aAAa;AAAA,EACb,yBAAyB,KAAK,UAAU,IAAI,QAAiB,CAAC;AAAA,EA6BtE,IAAI,aAAqB;AACxB,WAAO,qBAAqB;AAAA,EAC7B;AAAA,EAEA,eAAwC;AACvC,WAAO,KAAK,YAAY,MAAM;AAAA,EAC/B;AAAA,EAEQ,YAAY,QAAgB,SAAiB;AACpD,QAAI,2BAA2B;AAC9B,WAAK,WAAW,KAAK,wBAAwB,MAAM,KAAK,OAAO,EAAE;AAAA,IAClE,OAAO;AACN,WAAK,WAAW,MAAM,wBAAwB,MAAM,KAAK,OAAO,EAAE;AAAA,IACnE;AAAA,EACD;AAAA;AAAA;AAAA;AAAA,EAKQ,yBAAyB,SAAyC;AACzE,QAAI,QAAQ,YAAY;AACvB,aAAO;AAAA,IACR;AAEA,QAAI,QAAQ,wBAAwB,QAAQ,qBAAqB,qBAAqB;AACrF,YAAM,UAAU;AAChB,YAAM,UAAU;AAEhB,YAAM,OAAO,QAAQ,qBAAqB;AAC1C,aAAO,MAAM,MAAM,SAAS,OAAO;AAAA,IACpC;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,6BAA6B,UAAwD;AACpF,UAAM,aAAa,KAAK,uBAAuB,IAAI,SAAS,EAAE;AAC9D,WAAO,cAAc,CAAC;AAAA,EACvB;AAAA,EAEA,0BAA0B,KAA0C;AACnE,WAAO,KAAK,sBAAsB,IAAI,GAAG;AAAA,EAC1C;AAAA,EAEA,4BAA4B,UAAuD;AAClF,UAAM,YAAY,KAAK,sBAAsB,IAAI,SAAS,EAAE;AAC5D,WAAO,aAAa,CAAC;AAAA,EACtB;AAAA,EAEA,kCAAkC,UAAiE;AAClG,UAAM,YAAY,KAAK,sBAAsB,IAAI,SAAS,EAAE;AAC5D,UAAM,2BAA2B,KAAK,6BAA6B,IAAI,SAAS,EAAE;AAClF,QAAI,WAAW,UAAU,6BAA6B,UAAa,2BAA2B,UAAU,QAAQ;AAC/G,aAAO,UAAU,wBAAwB;AAAA,IAC1C;AACA,WAAO;AAAA,EACR;AAAA,EAEA,WAAW,SAAwB;AAClC,SAAK,aAAa;AAClB,SAAK,uBAAuB,KAAK,OAAO;AAAA,EACzC;AAAA,EAEA,OAAO,OAAqB;AAC3B,SAAK,sBAAsB,SAAS,KAAK,gBAAgB,YAAY,IAAI;AACzE,eAAW,UAAU,KAAK,YAAY,MAAM,GAAG;AAC9C,aAAO,OAAO,KAAK,mBAAmB;AAAA,IACvC;AACA,eAAW,cAAc,KAAK,gBAAgB,MAAM,GAAG;AACtD,iBAAW,OAAO,KAAK,mBAAmB;AAAA,IAC3C;AAAA,EACD;AAAA,EAEA,eAAe,WAA+C;AAC7D,UAAM,sBAAsB,IAAI,gBAAgB;AAChD,UAAM,eAAe,IAAI,OAAO,WAAW,EAAE,6BAA6B,CAAC;AAC3E,QAAI,KAAK,gBAAgB,gBAAgB,WAAW;AACnD,mBAAa,UAAU,IAAI,0BAA0B;AAAA,IACtD;AACA,QAAI,KAAK,gBAAgB,WAAW;AACnC,mBAAa,UAAU,IAAI,YAAY;AAAA,IACxC;AAEA,QAAI,eAAe;AACnB,QAAI,cAAc;AAClB,QAAI;AACJ,QAAI;AAEJ,QAAI,KAAK,gBAAgB,gBAAgB,WAAW;AACnD,mBAAa,UAAU,IAAI,0BAA0B;AACrD,mBAAa,UAAU,IAAI,SAAS;AAMpC,YAAM,eAAe,IAAI,OAAO,cAAc,EAAE,cAAc,CAAC;AAC/D,YAAM,eAAe,IAAI,OAAO,cAAc,EAAE,eAAe,CAAC;AAEhE,qBAAe;AACf,8BAAwB;AACxB,oBAAc;AACd,sBAAgB,IAAI,OAAO,cAAc,EAAE,SAAS,CAAC;AAAA,IACtD;AAEA,UAAM,SAAS,IAAI,OAAO,cAAc,EAAE,SAAS,CAAC;AACpD,UAAM,OAAO,IAAI,OAAO,QAAQ,EAAE,OAAO,CAAC;AAC1C,SAAK,WAAW;AAChB,SAAK,OAAO;AACZ,UAAM,kBAAkB,IAAI,OAAO,MAAM,EAAE,mBAAmB,CAAC;AAC/D,UAAM,WAAW,IAAI,OAAO,MAAM,EAAE,aAAa,CAAC;AAClD,UAAM,kBAAkB,IAAI,OAAO,yBAAyB,MAAM,EAAE,uBAAuB,CAAC;AAC5F,UAAM,SAAS,IAAI,OAAO,iBAAiB,EAAE,aAAa,CAAC;AAC3D,QAAI,OAAO,iBAAiB,EAAE,6BAA6B,CAAC;AAC5D,UAAM,QAAQ,IAAI,OAAO,aAAa,EAAE,QAAQ,CAAC;AACjD,UAAM,qBAAqB,IAAI,gBAAgB;AAE/C,UAAM,oBAAoB,oBAAoB,IAAI,KAAK,kBAAkB,aAAa,YAAY,CAAC;AACnG,UAAM,6BAA6B,oBAAoB,IAAI,KAAK,qBAAqB,YAAY,IAAI,kBAAkB,CAAC,oBAAoB,iBAAiB,CAAC,CAAC,CAAC;AAEhK,QAAI;AACJ,QAAI,KAAK,gBAAgB,UAAU;AAClC,aAAO,UAAU,IAAI,QAAQ;AAAA,IAC9B,OAAO;AACN,qBAAe,oBAAoB,IAAI,2BAA2B,eAAe,sBAAsB,iBAAiB,QAAQ,OAAO,kBAAkB;AAAA,QACxJ,aAAa;AAAA,UACZ,mBAAmB;AAAA,QACpB;AAAA,QACA,gBAAgB;AAAA,UACf,qBAAqB,oCAAW,QAAQ,QAAQ,UAAU,GAArC;AAAA,QACtB;AAAA,QACA,wBAAwB,wBAAC,QAAiB,YAAoC;AAC7E,cAAI,kBAAkB,kBAAkB,OAAO,KAAK,OAAO,uBAAuB;AACjF,mBAAO,2BAA2B,eAAe,oBAAoB,QAAQ,OAA0C;AAAA,UACxH;AACA,iBAAO,qBAAqB,4BAA4B,QAAQ,OAAO;AAAA,QACxE,GALwB;AAAA,MAMzB,CAAC,CAAC;AAAA,IACH;AAEA,UAAM,aAAa,oBAAoB,IAAI,KAAK,qBAAqB,eAAe,cAAc,CAAC;AACnG,UAAM,eAAe,6BAAM;AAC1B,UAAI,aAAa,SAAS,cAAc,KAAK,SAAS,eAAe,SAAS,CAAC,SAAS,eAAe,MAAM,WAAW;AACvH,mBAAW,SAAS,SAAS,eAAe,MAAM,EAAE;AACpD,eAAO,WAAW;AAAA,MACnB;AAEA,aAAO;AAAA,IACR,GAPqB;AAQrB,UAAM,eAAe,yBAAyB,MAAM,aAAa,SAAS,cAAc,IAAI,SAAS,eAAe,QAAQ,QAAW,KAAK,cAAc;AAC1J,wBAAoB,IAAI,KAAK,aAAa,kBAAkB,wBAAwB,SAAS,GAAG,MAAM,cAAc,YAAY,CAAC;AACjI,wBAAoB,IAAI,IAAI,sBAAsB,MAAM,IAAI,UAAU,UAAU,OAAK;AACpF,YAAM,KAAK,IAAI,sBAAsB,CAAC;AACtC,UAAI,GAAG,OAAO,QAAQ,KAAK,KAAK,GAAG,OAAO,QAAQ,KAAK,GAAG;AACzD,cAAM,UAAU,aAAa;AAC7B,YAAI,SAAS;AACZ,eAAK,aAAa,UAAU,EAAE,SAAS,QAAQ,MAAM,WAAW,MAAM,SAAS,aAAa,QAAQ,GAAG,IAAI;AAAA,QAC5G;AAAA,MACD,WAAW,GAAG,OAAO,QAAQ,MAAM,GAAG;AACrC,aAAK,aAAa,UAAU;AAAA,MAC7B;AAAA,IACD,CAAC,CAAC;AACF,UAAM,WAAkC,EAAE,iBAAiB,UAAU,QAAQ,OAAO,cAAc,oBAAoB,qBAAqB,mBAAmB,sBAAsB,4BAA4B,YAAY,aAAa;AACzO,WAAO;AAAA,EACR;AAAA,EAEA,cAAc,MAA2C,OAAe,cAA2C;AAClH,SAAK,mBAAmB,KAAK,SAAS,OAAO,YAAY;AAAA,EAC1D;AAAA,EAEA,mBAAmB,SAAuB,OAAe,cAA2C;AACnG,iBAAa,iBAAiB;AAC9B,UAAM,OAAO,YAAY,OAAO,IAAI,YACnC,aAAa,OAAO,IAAI,aACvB;AACF,SAAK,YAAY,iBAAiB,GAAG,IAAI,WAAW,KAAK,EAAE;AAE3D,qBAAiB,OAAO,aAAa,iBAAiB,EAAE,IAAI,aAAa,OAAO,CAAC;AACjF,oBAAgB,OAAO,aAAa,iBAAiB,EAAE,IAAI,YAAY,OAAO,CAAC;AAC/E,4CAAwC,OAAO,aAAa,iBAAiB,EAAE,IAAI,aAAa,OAAO,KAAK,QAAQ,2BAA2B;AAC/I,QAAI,aAAa,OAAO,GAAG;AAC1B,oDAA8C,OAAO,aAAa,iBAAiB,EAAE,IAAI,CAAC,CAAC,QAAQ,OAAO,SAAS,qBAAqB;AACxI,4BAAsB,OAAO,aAAa,iBAAiB,EAAE,IAAI,QAAQ,SAAS,uBAAuB,KAAK,OAAO,QAAQ,SAAS,uBAAuB,OAAO,SAAS,EAAE;AAAA,IAChL,OAAO;AACN,4BAAsB,OAAO,aAAa,iBAAiB,EAAE,IAAI,EAAE;AAAA,IACpE;AAEA,QAAI,aAAa,cAAc;AAC9B,mBAAa,aAAa,UAAU;AAAA,IACrC;AAEA,2BAAuB,OAAO,aAAa,iBAAiB,EAAE,IAAI,aAAa,OAAO,KAAK,CAAC,CAAC,QAAQ,YAAY;AACjH,UAAM,aAAa,CAAC,EAAE,aAAa,OAAO,KAAK,QAAQ,cAAc;AACrE,8BAA0B,OAAO,aAAa,iBAAiB,EAAE,IAAI,UAAU;AAE/E,iBAAa,aAAa,UAAU,OAAO,uBAAuB,YAAY,OAAO,CAAC;AACtF,iBAAa,aAAa,UAAU,OAAO,wBAAwB,aAAa,OAAO,CAAC;AACxF,iBAAa,aAAa,UAAU,OAAO,uBAAuB,YAAY,OAAO,CAAC;AACtF,iBAAa,aAAa,UAAU,OAAO,wBAAwB,aAAa,OAAO,KAAK,CAAC,QAAQ,cAAc,CAAC,QAAQ,iBAAiB,MAAM;AACnJ,iBAAa,SAAS,cAAc,QAAQ;AAC5C,QAAI,CAAC,KAAK,gBAAgB,UAAU;AACnC,WAAK,aAAa,SAAS,YAAY;AAAA,IACxC;AAEA,QAAI,UAAU,aAAa,MAAM;AACjC,QAAI,aAAa,OAAO,GAAG;AAC1B,WAAK,aAAa,SAAS,YAAY;AAAA,IACxC;AAEA,QAAI,YAAY,OAAO,KAAK,QAAQ,cAAc;AACjD,WAAK,yBAAyB,SAAS,YAAY;AAAA,IACpD;AAOA,QAAI,aAAa,OAAO,KAAK,UAAU,KAAK,SAAS,cAAc,IAAI,MAAM,CAAC,QAAQ,cAAc,QAAQ,eAAe,QAAQ,SAAS,MAAM,QAAQ;AACzJ,WAAK,YAAY,iBAAiB,4BAA4B,IAAI,WAAW,KAAK,EAAE;AAEpF,YAAM,QAAQ,aAAa,mBAAmB,IAAI,IAAI,IAAI,oBAAoB,CAAC;AAC/E,YAAM,uBAAuB,wBAAC,YAAsB;AACnD,YAAI;AACH,cAAI,KAAK,wBAAwB,SAAS,OAAO,cAAc,CAAC,CAAC,OAAO,GAAG;AAC1E,kBAAM,OAAO;AAAA,UACd;AAAA,QACD,SAAS,KAAK;AAEb,gBAAM,OAAO;AACb,eAAK,WAAW,MAAM,GAAG;AAAA,QAC1B;AAAA,MACD,GAV6B;AAW7B,YAAM,aAAa,sBAAsB,IAAI,IAAI,UAAU,aAAa,YAAY,CAAC;AACrF,2BAAqB,IAAI;AAAA,IAC1B,WAAW,aAAa,OAAO,GAAG;AACjC,WAAK,mBAAmB,SAAS,OAAO,YAAY;AAAA,IACrD,WAAW,YAAY,OAAO,GAAG;AAChC,WAAK,mBAAmB,SAAS,OAAO,YAAY;AAAA,IACrD,OAAO;AACN,WAAK,qBAAqB,SAAS,YAAY;AAAA,IAChD;AAAA,EACD;AAAA,EAEQ,aAAa,SAAiC,cAA2C;AAChG,iBAAa,mBAAmB,IAAI,QAAQ,YAAU;AACrD,WAAK,cAAc,SAAS,YAAY;AAAA,IACzC,CAAC,CAAC;AAAA,EACH;AAAA,EAEQ,cAAc,SAAiC,cAA2C;AAEjG,QAAI,UAAU,aAAa,MAAM;AAEjC,QAAI,QAAQ,6BAA6B;AACxC,YAAM,MAAM,QAAQ,eAAe,SAAS,yBAAyB,gCAAgC,GAAG,oBAAoB,GAAG,QAAQ,aAAa,IAAI,EAAE,IAAI,SAAS,aAAa,qBAAqB;AACzM,UAAI,MAAM,aAAa,QAAQ,oBAAoB,KAAK;AAAA,QACvD,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,eAAe;AAAA,UACd,aAAa,aAAa;AAAA,UAC1B,UAAU,wBAAC,YAAY;AACtB,iBAAK,4CAA4C,KAAK,OAAO;AAAA,UAC9D,GAFU;AAAA,QAGX;AAAA,MACD,CAAC,CAAC;AAAA,IAEH,WAAW,CAAC,QAAQ,YAAY;AAC/B,mBAAa,OAAO,cAAc;AAAA,IACnC;AAAA,EACD;AAAA,EAEQ,yBAAyB,SAAgC,cAAqC;AACrG,QAAI,UAAU,aAAa,MAAM;AACjC,QAAI,QAAQ,cAAc;AACzB,mBAAa,OAAO,cAAc,SAAS,0BAA0B,kBAAkB,QAAQ,YAAY;AAAA,IAC5G;AAAA,EACD;AAAA,EAEQ,aAAa,SAAuB,cAA2C;AACtF,UAAM,OAAO,aAAa,OAAO,IAChC,KAAK,aAAa,QAAQ,OAAO,QAAQ,IACxC,QAAQ,cAAc,QAAQ;AAChC,QAAI,gBAAgB,KAAK;AACxB,YAAM,aAAa,IAAI,EAAoB,UAAU;AACrD,iBAAW,MAAM,WAAW,gBAAgB,IAAI,EAAE,SAAS,IAAI;AAC/D,mBAAa,gBAAgB,gBAAgB,IAAI,EAAE,WAAW,QAAW,UAAU,CAAC;AAAA,IACrF,OAAO;AACN,YAAM,aAAa,IAAI,EAAE,UAAU,cAAc,IAAI,CAAC;AACtD,mBAAa,gBAAgB,gBAAgB,IAAI,EAAE,0BAA0B,QAAW,UAAU,CAAC;AAAA,IACpG;AAAA,EACD;AAAA,EAEQ,aAAa,OAAwD;AAC5E,QAAI,OAAO,WAAW;AACrB,aAAO,MAAM;AAAA,IACd,WAAW,OAAO,YAAY,KAAK,aAAa,cAAc,EAAE,SAAS,YAAY,MAAM;AAC1F,aAAO,MAAM;AAAA,IACd,WAAW,OAAO,MAAM;AACvB,aAAO,MAAM;AAAA,IACd,OAAO;AACN,aAAO,QAAQ;AAAA,IAChB;AAAA,EACD;AAAA,EAEQ,mBAAmB,SAAuB,OAAe,cAAqC;AACrG,QAAI,QAAgC,CAAC;AACrC,QAAI,YAAY,OAAO,KAAK,CAAC,QAAQ,cAAc;AAClD,YAAM,WAAW,aAAa,QAAQ,UACrC,QAAQ,QAAQ,UAChB,KAAK,4BAA4B,+BAA+B,QAAQ,OAAO;AAChF,cAAQ,CAAC,EAAE,SAAS,IAAI,eAAe,QAAQ,GAAG,MAAM,kBAAkB,CAAC;AAAA,IAC5E,WAAW,aAAa,OAAO,GAAG;AACjC,UAAI,QAAQ,kBAAkB,QAAQ;AACrC,cAAM,KAAK,EAAE,MAAM,cAAc,YAAY,QAAQ,kBAAkB,CAAC;AAAA,MACzE;AACA,YAAM,KAAK,GAAG,+BAA+B,QAAQ,SAAS,KAAK,CAAC;AACpE,UAAI,QAAQ,cAAc,QAAQ;AACjC,cAAM,KAAK,EAAE,MAAM,iBAAiB,WAAW,QAAQ,cAAc,CAAC;AAAA,MACvE;AAAA,IACD;AAEA,QAAI,UAAU,aAAa,KAAK;AAEhC,QAAI,aAAa,OAAO,GAAG;AAC1B,WAAK,aAAa,SAAS,YAAY;AAAA,IACxC;AAEA,UAAM,aAAa,CAAC,EAAE,aAAa,OAAO,KAAK,QAAQ,cAAc;AAErE,UAAM,QAA4B,CAAC;AACnC,QAAI,CAAC,YAAY;AAChB,YAAM,QAAQ,CAAC,MAAMA,WAAU;AAC9B,cAAM,UAAyC;AAAA,UAC9C;AAAA,UACA,OAAAA;AAAA,UACA,SAAS;AAAA,UACT,wBAAwB;AAAA,QACzB;AACA,cAAM,UAAU,KAAK,sBAAsB,MAAM,cAAc,OAAO;AACtE,YAAI,SAAS;AACZ,uBAAa,MAAM,YAAY,QAAQ,OAAO;AAC9C,gBAAM,KAAK,OAAO;AAAA,QACnB;AAAA,MACD,CAAC;AAAA,IACF;AAEA,QAAI,aAAa,eAAe;AAC/B,cAAQ,aAAa,aAAa;AAAA,IACnC;AACA,iBAAa,gBAAgB;AAE7B,QAAI,CAAC,YAAY;AAChB,UAAI,YAAY,OAAO,KAAK,QAAQ,UAAU,QAAQ;AACrD,cAAM,UAAU,KAAK,kBAAkB,QAAQ,WAAW,QAAQ,mBAAmB,YAAY;AACjG,YAAI,SAAS;AACZ,uBAAa,MAAM,YAAY,QAAQ,OAAO;AAC9C,uBAAa,mBAAmB,IAAI,OAAO;AAAA,QAC5C;AAAA,MACD;AAAA,IACD;AAEA,QAAI,aAAa,OAAO,KAAK,QAAQ,cAAc,SAAS;AAC3D,YAAM,gBAAgB,KAAK,qBAAqB,eAAe,wBAAwB,QAAQ,aAAa,qBAAqB,SAAS,SAAS,IAAI,eAAe,QAAQ,aAAa,OAAO,GAAG,KAAK,QAAQ;AAClN,mBAAa,mBAAmB,IAAI,aAAa;AACjD,mBAAa,MAAM,YAAY,cAAc,OAAO;AAAA,IACrD;AAEA,UAAM,YAAY,aAAa,aAAa;AAC5C,UAAM,YAAY,CAAC,QAAQ,yBAAyB,QAAQ,0BAA0B;AACtF,YAAQ,wBAAwB;AAChC,QAAI,WAAW;AACd,YAAM,aAAa,aAAa,mBAAmB,IAAI,IAAI,6BAA6B,IAAI,UAAU,aAAa,KAAK,GAAG,MAAM;AAGhI,gBAAQ,wBAAwB,aAAa,aAAa;AAC1D,mBAAW,QAAQ;AACnB,aAAK,uBAAuB,KAAK,EAAE,SAAS,QAAQ,QAAQ,sBAAsB,CAAC;AAAA,MACpF,CAAC,CAAC;AAAA,IACH;AAAA,EACD;AAAA,EAEQ,iBAAiB,cAA2C;AACnE,QAAI,CAAC,aAAa,gBAAgB;AACjC;AAAA,IACD;AAEA,UAAM,YAAY,aAAa,aAAa;AAC5C,iBAAa,eAAe,wBAAwB;AACpD,SAAK,uBAAuB,KAAK,EAAE,SAAS,aAAa,gBAAgB,QAAQ,UAAU,CAAC;AAAA,EAC7F;AAAA,EAEQ,qBAAqB,SAAuC,cAAqC;AACxG,QAAI,UAAU,aAAa,KAAK;AAEhC,YAAQ,QAAQ,QAAQ,CAAC,MAAM,MAAM;AACpC,UAAI,MAAM,QAAQ,IAAI,GAAG;AACxB,cAAM,qBAAqB,aAAa,mBAAmB,IAAI,KAAK,qBAAqB,YAAY,IAAI,kBAAkB,CAAC,oBAAoB,aAAa,iBAAiB,CAAC,CAAC,CAAC;AACjL,qBAAa,mBAAmB;AAAA,UAC/B,mBAAmB;AAAA,YAClB;AAAA,YACA,aAAa;AAAA,YACb;AAAA,YACA,KAAK;AAAA,YACL;AAAA,YACA,cAAY,KAAK,oBAAoB,KAAK,QAAQ;AAAA,UAAC;AAAA,QAAC;AAAA,MACvD,OAAO;AACN,cAAM,UAAyC;AAAA,UAC9C;AAAA,UACA,OAAO;AAAA;AAAA,UAEP,SAAS,CAAC;AAAA,UACV,wBAAwB,CAAC;AAAA,QAC1B;AACA,cAAM,SAAS,KAAK,eAAe,MAAM,cAAc,OAAO;AAC9D,qBAAa,MAAM,YAAY,OAAO,OAAO;AAC7C,qBAAa,mBAAmB,IAAI,MAAM;AAAA,MAC3C;AAAA,IACD,CAAC;AAED,UAAM,YAAY,aAAa,aAAa;AAC5C,UAAM,YAAY,CAAC,QAAQ,yBAAyB,QAAQ,0BAA0B;AACtF,YAAQ,wBAAwB;AAChC,QAAI,WAAW;AACd,YAAM,aAAa,aAAa,mBAAmB,IAAI,IAAI,6BAA6B,IAAI,UAAU,aAAa,KAAK,GAAG,MAAM;AAGhI,gBAAQ,wBAAwB,aAAa,aAAa;AAC1D,mBAAW,QAAQ;AACnB,aAAK,uBAAuB,KAAK,EAAE,SAAS,QAAQ,QAAQ,sBAAsB,CAAC;AAAA,MACpF,CAAC,CAAC;AAAA,IACH;AAAA,EACD;AAAA;AAAA;AAAA;AAAA,EAKQ,wBAAwB,SAAiC,OAAe,cAAqC,mBAAqC;AACzJ,QAAI,CAAC,KAAK,YAAY;AACrB,aAAO;AAAA,IACR;AAEA,QAAI,QAAQ,YAAY;AACvB,WAAK,YAAY,2BAA2B,mBAAmB,KAAK,EAAE;AACtE,cAAQ,aAAa;AACrB,WAAK,mBAAmB,SAAS,OAAO,YAAY;AACpD,aAAO;AAAA,IACR;AAEA,QAAI,kBAAkB;AACtB,SAAK,YAAY,2BAA2B,mCAAmC,KAAK,gBAAgB,KAAK,UAAU,QAAQ,UAAU,CAAC,EAAE;AACxI,UAAM,qBAAqB,KAAK,gCAAgC,OAAO;AACvE,UAAM,gBAAgB,KAAK,KAAK,aAAa,iBAAiB,CAAC,GAAG,oBAAoB,OAAO;AAC7F,sBAAkB,cAAc,MAAM,UAAQ,SAAS,IAAI;AAE3D,QAAI,iBAAiB;AACpB,UAAI,QAAQ,YAAY;AAEvB,aAAK,YAAY,2BAA2B,iCAAiC,KAAK,gDAAgD;AAClI,gBAAQ,aAAa;AACrB,aAAK,mBAAmB,SAAS,OAAO,YAAY;AACpD,eAAO;AAAA,MACR;AAGA,WAAK,YAAY,2BAA2B,qDAAqD;AACjG,aAAO;AAAA,IACR;AAGA,SAAK,YAAY,2BAA2B,6BAA6B,cAAc,MAAM,kBAAkB;AAC/G,SAAK,sBAAsB,eAAe,oBAAoB,SAAS,YAAY;AAEnF,UAAM,SAAS,aAAa,aAAa;AACzC,YAAQ,wBAAwB;AAChC,QAAI,CAAC,mBAAmB;AACvB,WAAK,uBAAuB,KAAK,EAAE,SAAS,QAAQ,aAAa,aAAa,aAAa,CAAC;AAAA,IAC7F;AAEA,WAAO;AAAA,EACR;AAAA,EAEQ,sBAAsB,eAA2D,oBAAyD,SAAiC,cAA2C;AAC7N,UAAM,gBAAgB,aAAa,iBAAiB,CAAC;AACrD,iBAAa,gBAAgB;AAC7B,kBAAc,QAAQ,CAAC,cAAc,UAAU;AAC9C,UAAI,CAAC,cAAc;AAElB;AAAA,MACD;AAEA,YAAM,sBAAsB,aAAa,gBAAgB,KAAK;AAC9D,UAAI,qBAAqB;AACxB,4BAAoB,QAAQ;AAAA,MAC7B;AAEA,YAAM,yBAAyB,cAAc,MAAM,GAAG,KAAK;AAC3D,YAAM,UAAyC;AAAA,QAC9C;AAAA,QACA,SAAS;AAAA,QACT;AAAA,QACA;AAAA,MACD;AACA,YAAM,UAAU,KAAK,sBAAsB,cAAc,cAAc,OAAO;AAC9E,UAAI,SAAS;AAEZ,YAAI,qBAAqB;AACxB,cAAI;AAEH,gCAAoB,QAAQ,YAAY,QAAQ,OAAO;AAAA,UACxD,SAAS,KAAK;AACb,iBAAK,WAAW,MAAM,oEAAoE,GAAG;AAAA,UAC9F;AAAA,QACD,OAAO;AACN,uBAAa,MAAM,YAAY,QAAQ,OAAO;AAAA,QAC/C;AAEA,sBAAc,KAAK,IAAI;AAAA,MACxB,WAAW,qBAAqB;AAC/B,4BAAoB,QAAQ,OAAO;AAAA,MACpC;AAAA,IACD,CAAC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKQ,gCAAgC,SAAyD;AAChG,UAAM,OAAO,KAAK,4BAA4B,OAAO;AAErD,UAAM,qBAAqB,+BAA+B,QAAQ,SAAS,KAAK;AAEhF,SAAK,YAAY,mCAAmC,kBAAkB,KAAK,gBAAgB,OAAO,KAAK,IAAI,uBAAuB;AAClI,QAAI,iBAAiB,KAAK;AAC1B,UAAM,gBAAwC,CAAC;AAC/C,QAAI,QAAQ,kBAAkB,QAAQ;AACrC,oBAAc,KAAK,EAAE,MAAM,cAAc,YAAY,QAAQ,kBAAkB,CAAC;AAAA,IACjF;AAEA,aAAS,IAAI,GAAG,IAAI,mBAAmB,QAAQ,KAAK;AACnD,YAAM,OAAO,mBAAmB,CAAC;AACjC,UAAI,kBAAkB,GAAG;AACxB;AAAA,MACD;AAEA,UAAI,KAAK,SAAS,mBAAmB;AACpC,cAAM,kBAAkB,UAAU,KAAK,QAAQ,OAAO,cAAc;AACpE,YAAI,gBAAgB,cAAc;AACjC,wBAAc,KAAK,IAAI;AAAA,QACxB,OAAO;AACN,wBAAc,KAAK,EAAE,MAAM,mBAAmB,SAAS,IAAI,eAAe,gBAAgB,OAAO,KAAK,OAAO,EAAE,CAAC;AAAA,QACjH;AAEA,aAAK,YAAY,mCAAmC,WAAW,CAAC,oBAAoB,cAAc,oBAAoB,gBAAgB,iBAAiB,iCAAiC,gBAAgB,cAAc,EAAE;AACxN,0BAAkB,gBAAgB;AAAA,MACnC,OAAO;AACN,sBAAc,KAAK,IAAI;AAAA,MACxB;AAAA,IACD;AAEA,UAAM,gBAAgB,QAAQ,sBAAsB,iBAAiB;AACrE,UAAM,uBAAuB,KAAK,mBAAmB;AACrD,UAAM,cAAc,gBAAgB;AACpC,SAAK,YAAY,mCAAmC,kBAAkB,KAAK,gBAAgB,qBAAqB,oBAAoB,mBAAmB,WAAW,QAAQ;AAC1K,QAAI,uBAAuB,KAAK,yBAAyB,QAAQ,YAAY,mBAAmB;AAE/F,cAAQ,aAAa,EAAE,gBAAgB,KAAK,IAAI,GAAG,mBAAmB,sBAAsB,eAAe,cAAc;AAAA,IAC1H;AAEA,WAAO;AAAA,EACR;AAAA,EAEQ,4BAA4B,SAAiC;AACpE,UAAM,aAAa,QAAQ,cAAc,EAAE,gBAAgB,GAAG,mBAAmB,EAAE;AAEnF,UAAM,OAAO,KAAK,yBAAyB,OAAO;AAClD,UAAM,mBAAmB,WAAW,mBAAmB,IACtD,IACA,WAAW;AAAA,IAEX,KAAK,OAAO,KAAK,IAAI,IAAI,WAAW,kBAAkB,MAAO,IAAI;AAElE,WAAO;AAAA,MACN;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,KAAK,eAAgD,iBAAsD,SAAmE;AACrL,UAAM,OAAwC,CAAC;AAC/C,aAAS,IAAI,GAAG,IAAI,gBAAgB,QAAQ,KAAK;AAChD,YAAM,UAAU,gBAAgB,CAAC;AACjC,YAAM,eAAe,cAAc,CAAC;AAEpC,UAAI,CAAC,gBAAgB,CAAC,aAAa,eAAe,SAAS,gBAAgB,MAAM,IAAI,CAAC,GAAG,OAAO,GAAG;AAClG,aAAK,KAAK,OAAO;AAAA,MAClB,OAAO;AAEN,aAAK,KAAK,IAAI;AAAA,MACf;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AAAA,EAEQ,sBAAsB,SAA+B,cAAqC,SAAsE;AACvK,QAAI,QAAQ,SAAS,YAAY;AAChC,aAAO,KAAK,eAAe,SAAS,cAAc,OAAO;AAAA,IAC1D,WAAW,QAAQ,SAAS,mBAAmB;AAC9C,aAAO,KAAK,qBAAqB,eAAe,yBAAyB,SAAS,KAAK,UAAU,OAAO;AAAA,IACzG,WAAW,QAAQ,SAAS,gBAAgB;AAC3C,aAAO,KAAK,mBAAmB,SAAS,cAAc,OAAO;AAAA,IAC9D,WAAW,QAAQ,SAAS,WAAW;AACtC,aAAO,KAAK,qBAAqB,eAAe,8BAA8B,SAAS,OAAO;AAAA,IAC/F,WAAW,QAAQ,SAAS,iBAAiB;AAC5C,aAAO,KAAK,eAAe,SAAS,SAAS,YAAY;AAAA,IAC1D,WAAW,QAAQ,SAAS,gBAAgB;AAC3C,aAAO,KAAK,mBAAmB,SAAS,SAAS,YAAY;AAAA,IAC9D,WAAW,QAAQ,SAAS,WAAW;AACtC,aAAO,KAAK,qBAAqB,eAAe,wBAAwB,WAAW,QAAQ,SAAS,KAAK,QAAQ;AAAA,IAClH,WAAW,QAAQ,SAAS,mBAAmB;AAC9C,aAAO,KAAK,eAAe,QAAQ,SAAS,cAAc,OAAO;AAAA,IAClE,WAAW,QAAQ,SAAS,cAAc;AACzC,aAAO,KAAK,gCAAgC,SAAS,QAAW,SAAS,YAAY;AAAA,IACtF,WAAW,QAAQ,SAAS,iBAAiB;AAC5C,aAAO,KAAK,4BAA4B,SAAS,SAAS,YAAY;AAAA,IACvE;AAEA,WAAO;AAAA,EACR;AAAA,EAEQ,eAAe,SAAwB,cAAqC,SAA0D;AAC7I,UAAM,OAAO,QAAQ;AACrB,UAAM,gBAAgB,QAAQ,uBAAuB,OAAO,UAAQ,gBAAgB,mBAAmB,EAAE;AACzG,UAAM,WAAW,KAAK,qBAAqB,eAAe,qBAAqB,MAAM,QAAQ,SAAS,KAAK,WAAW,aAAa;AAEnI,aAAS,cAAc,SAAS,kBAAkB,MAAM;AACvD,WAAK,iBAAiB,YAAY;AAAA,IACnC,CAAC,CAAC;AAEF,QAAI,aAAa,QAAQ,OAAO,GAAG;AAClC,YAAM,oBAAoB;AAAA,QACzB,YAAY,KAAK,IAAI,SAAS;AAAA,QAC9B,WAAW;AAAA,QACX,QAAQ;AACP,mBAAS,SAAS;AAAA,QACnB;AAAA,MACD;AAGA,eAAS,cAAc,SAAS,WAAW,MAAM;AAChD,aAAK,6BAA6B,IAAI,QAAQ,QAAQ,IAAI,kBAAkB,SAAS;AAAA,MACtF,CAAC,CAAC;AAEF,YAAM,YAAY,KAAK,sBAAsB,IAAI,QAAQ,QAAQ,EAAE,KAAK,CAAC;AACzE,gBAAU,KAAK,iBAAiB;AAChC,WAAK,sBAAsB,IAAI,QAAQ,QAAQ,IAAI,SAAS,WAAW,CAAC,MAAM,EAAE,UAAU,CAAC;AAC3F,eAAS,cAAc,aAAa,MAAM,KAAK,sBAAsB,IAAI,QAAQ,QAAQ,IAAI,UAAU,OAAO,OAAK,EAAE,eAAe,KAAK,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC;AAAA,IAC3J;AAEA,WAAO;AAAA,EACR;AAAA,EAEQ,gCAAgC,YAA6B,eAAmC,SAAwC,cAAqE;AACpN,UAAM,iBAAiB,KAAK,qBAAqB,eAAe,gCAAgC,WAAW,YAAY,eAAe,QAAQ,SAAmC,KAAK,0BAA0B;AAChN,mBAAe,cAAc,eAAe,kBAAkB,MAAM;AACnE,WAAK,iBAAiB,YAAY;AAAA,IACnC,CAAC,CAAC;AAEF,WAAO;AAAA,EACR;AAAA,EAEQ,4BAA4B,WAA+B,SAAwC,cAAkE;AAC5K,UAAM,gBAAgB,KAAK,qBAAqB,eAAe,6BAA6B,WAAW,OAAO;AAC9G,WAAO;AAAA,EACR;AAAA,EAEQ,mBAAmB,MAAiB,cAAqC,SAAsE;AACtJ,QAAI,CAAC,aAAa,QAAQ,OAAO,GAAG;AACnC;AAAA,IACD;AAEA,UAAM,WAAW,KAAK,qBAAqB,eAAe,qBAAqB,MAAM,KAAK,4BAA4B,KAAK,UAAU,OAAO;AAC5I,aAAS,cAAc,SAAS,kBAAkB,MAAM;AACvD,WAAK,iBAAiB,YAAY;AAAA,IACnC,CAAC,CAAC;AACF,WAAO;AAAA,EACR;AAAA,EAEQ,mBAAmB,SAAwC,cAAiC,cAAuD;AAC1J,UAAM,OAAO,KAAK,qBAAqB,eAAe,6BAA6B,cAAc,OAAO;AACxG,SAAK,cAAc,KAAK,kBAAkB,MAAM,KAAK,iBAAiB,YAAY,CAAC,CAAC;AACpF,WAAO;AAAA,EACR;AAAA,EAEQ,kBAAkB,WAAwC,mBAAqE,cAAqC;AAC3K,WAAO,KAAK,qBAAqB,eAAe,4BAA4B,WAAW,mBAAmB,MAAS;AAAA,EACpH;AAAA,EAEQ,eAAe,SAAwC,cAAkC,cAAuD;AACvJ,UAAM,eAAe,KAAK,qBAAqB,eAAe,yBAAyB,cAAc,SAAS,KAAK,iBAAiB,KAAK,iBAAiB,KAAK,mBAAmB;AAClL,iBAAa,cAAc,aAAa,kBAAkB,MAAM;AAC/D,mBAAa,OAAO,KAAK,mBAAmB;AAC5C,WAAK,iBAAiB,YAAY;AAAA,IACnC,CAAC,CAAC;AAEF,WAAO;AAAA,EACR;AAAA,EAEQ,eAAe,UAA2B,cAAqC,SAA0D;AAChJ,UAAM,UAAU,QAAQ;AACxB,UAAM,yBAAyB,aAAa,OAAO,MAAM,CAAC,QAAQ,cAAc,QAAQ,cAAc,QAAQ,cAAc,sBAAsB,QAAQ,cAAc,wBAAwB,CAAC,CAAC,QAAQ;AAC1M,UAAM,sBAAsB,QAAQ,uBAAuB,OAAO,CAAC,KAAK,SAAS,OAAO,gBAAgB,0BAA0B,KAAK,WAAW,SAAS,IAAI,CAAC;AAChK,UAAM,eAAe,KAAK,qBAAqB,eAAe,yBAAyB,UAAU,SAAS,KAAK,aAAa,wBAAwB,qBAAqB,KAAK,UAAU,KAAK,qBAAqB,KAAK,0BAA0B,KAAK,eAAe;AACrQ,iBAAa,cAAc,aAAa,kBAAkB,MAAM;AAC/D,mBAAa,OAAO,KAAK,mBAAmB;AAC5C,WAAK,iBAAiB,YAAY;AAAA,IACnC,CAAC,CAAC;AAEF,UAAM,yBAAyB,KAAK,uBAAuB,IAAI,QAAQ,EAAE,KAAK,CAAC;AAC/E,SAAK,uBAAuB,IAAI,QAAQ,IAAI,sBAAsB;AAClE,iBAAa,cAAc,aAAa,MAAM;AAC7C,YAAMC,0BAAyB,KAAK,uBAAuB,IAAI,QAAQ,EAAE;AACzE,UAAIA,yBAAwB;AAC3B,qBAAa,WAAW,QAAQ,CAAC,MAAM,MAAM,OAAOA,wBAAuB,sBAAsB,CAAC,CAAC;AAAA,MACpG;AAAA,IACD,CAAC,CAAC;AAEF,iBAAa,WAAW,QAAQ,CAAC,MAAM,MAAM;AAC5C,6BAAuB,sBAAsB,CAAC,IAAI;AAClD,UAAI,KAAK,KAAK;AACb,cAAM,MAAM,KAAK;AACjB,aAAK,sBAAsB,IAAI,KAAK,IAAI;AACxC,qBAAa,cAAc,aAAa,MAAM,KAAK,sBAAsB,OAAO,GAAG,CAAC,CAAC;AAAA,MACtF;AAAA,IACD,CAAC;AAED,WAAO;AAAA,EACR;AAAA,EAEA,eAAe,MAA2C,OAAe,cAA2C;AACnH,SAAK,YAAY,kBAAkB,4BAA4B,KAAK,EAAE;AAGtE,QAAI,aAAa,eAAe;AAC/B,UAAI;AACH,gBAAQ,SAAS,aAAa,aAAa,CAAC;AAC5C,qBAAa,gBAAgB;AAC7B,YAAI,UAAU,aAAa,KAAK;AAAA,MACjC,SAAS,KAAK;AACb,cAAM;AAAA,MACP;AAAA,IACD;AAEA,iBAAa,iBAAiB;AAC9B,iBAAa,mBAAmB,MAAM;AAAA,EACvC;AAAA,EAEA,gBAAgB,cAA2C;AAC1D,iBAAa,oBAAoB,QAAQ;AAAA,EAC1C;AACD;AAlzBa,uBAAN;AAAA,EAqCJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GA3CU;AAozBN,IAAM,mBAAN,MAAqE;AAAA,EAC3E,YACkB,sBACa,YAC7B;AAFgB;AACa;AAAA,EAC3B;AAAA,EAl6BL,OA85B4E;AAAA;AAAA;AAAA,EAMnE,aAAa,QAAgB,SAAiB;AACrD,QAAI,2BAA2B;AAC9B,WAAK,WAAW,KAAK,oBAAoB,MAAM,KAAK,OAAO,EAAE;AAAA,IAC9D,OAAO;AACN,WAAK,WAAW,MAAM,oBAAoB,MAAM,KAAK,OAAO,EAAE;AAAA,IAC/D;AAAA,EACD;AAAA,EAEA,UAAU,SAA+B;AACxC,UAAM,OAAO,YAAY,OAAO,IAAI,YAAY;AAChD,UAAM,UAAU,2BAA2B,UAAU,QAAQ,wBAAwB,WAAc,KAAK;AACxG,SAAK,aAAa,aAAa,GAAG,IAAI,YAAY,MAAM,EAAE;AAC1D,WAAO;AAAA,EACR;AAAA,EAEA,cAAc,SAA+B;AAC5C,WAAO,qBAAqB;AAAA,EAC7B;AAAA,EAEA,iBAAiB,SAAgC;AAChD,WAAO;AAAA,EACR;AACD;AA5Ba,mBAAN;AAAA,EAGJ;AAAA,GAHU;AA8Bb,MAAM,uBAAgE;AAAA,EACrE,CAAC,wBAAwB,aAAa,GAAG,SAAS,iBAAiB,0BAA0B;AAAA,EAC7F,CAAC,wBAAwB,wBAAwB,GAAG,SAAS,4BAA4B,4BAA4B;AAAA,EACrH,CAAC,wBAAwB,cAAc,GAAG,SAAS,kBAAkB,iBAAiB;AAAA,EACtF,CAAC,wBAAwB,iBAAiB,GAAG,SAAS,qBAAqB,qBAAqB;AAAA,EAChG,CAAC,wBAAwB,wBAAwB,GAAG,SAAS,4BAA4B,6BAA6B;AAAA,EACtH,CAAC,wBAAwB,oBAAoB,GAAG,SAAS,wBAAwB,yBAAyB;AAAA,EAC1G,CAAC,wBAAwB,cAAc,GAAG,SAAS,kBAAkB,iBAAiB;AAAA,EACtF,CAAC,wBAAwB,eAAe,GAAG,SAAS,eAAe,iBAAiB;AAAA,EACpF,CAAC,wBAAwB,KAAK,GAAG,SAAS,SAAS,OAAO;AAC3D;AAEO,IAAM,qBAAN,cAAiC,2BAA2B;AAAA,EAClE,YACC,QACA,SACkC,gBACO,cACX,YACT,oBACpB;AACD;AAAA,MAAM;AAAA,MACL,EAAE,YAAY,6BAAM,KAAK,WAAW,GAAtB,cAAyB;AAAA,MACvC;AAAA,MACA;AAAA,QACC,GAAG;AAAA,QACH,YAAY,UAAU,iBAAiB,QAAQ,UAAU;AAAA,MAC1D;AAAA,IAAC;AAXgC;AACO;AACX;AAAA,EAU/B;AAAA,EAx9BD,OAw8BmE;AAAA;AAAA;AAAA,EAkBlE,aAAiC;AAChC,WAAO;AAAA,MACN,KAAK,wBAAwB,wBAAwB,aAAa;AAAA,MAClE,KAAK,wBAAwB,wBAAwB,wBAAwB;AAAA,MAC7E,KAAK,wBAAwB,wBAAwB,cAAc;AAAA,MACnE,KAAK,wBAAwB,wBAAwB,cAAc;AAAA,MACnE,KAAK,wBAAwB,wBAAwB,wBAAwB;AAAA,MAC7E,KAAK,wBAAwB,wBAAwB,oBAAoB;AAAA,MACzE,KAAK,wBAAwB,wBAAwB,iBAAiB;AAAA,MACtE,KAAK,wBAAwB,wBAAwB,KAAK;AAAA,MAC1D;AAAA,QACC,IAAI;AAAA,QACJ,OAAO,qBAAqB,wBAAwB,eAAe;AAAA,QACnE,SAAS;AAAA,QACT,SAAS;AAAA,QACT,OAAO;AAAA,QACP,KAAK,8BAAO,YAAoC;AAC/C,cAAI,CAAC,aAAa,OAAO,GAAG;AAC3B,iBAAK,WAAW,MAAM,yCAAyC;AAC/D;AAAA,UACD;AAEA,gBAAM,KAAK,eAAe,eAAe,uBAAuB,SAAS,wBAAwB,eAAe;AAChH,gBAAM,KAAK,aAAa,aAAa,EAAE,aAAa,QAAQ,OAAO,YAAY,MAAM,CAAC;AAAA,QACvF,GARK;AAAA,MASN;AAAA,IACD;AAAA,EACD;AAAA,EAES,OAAO,WAA8B;AAC7C,UAAM,OAAO,SAAS;AAEtB,SAAK,SAAS,UAAU,OAAO,WAAW,KAAK,OAAO,OAAO;AAAA,EAC9D;AAAA,EAEQ,wBAAwB,QAA0C;AACzE,UAAM,QAAQ,qBAAqB,MAAM;AACzC,WAAO;AAAA,MACN,IAAI;AAAA,MACJ;AAAA,MACA,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAU,KAAK,SAAoC,mBAAmB;AAAA,MACtE,OAAO;AAAA,MACP,KAAK,8BAAO,YAAoC;AAC/C,YAAI,CAAC,aAAa,OAAO,GAAG;AAC3B,eAAK,WAAW,MAAM,6DAA6D;AACnF;AAAA,QACD;AAEA,cAAM,KAAK,eAAe,eAAe,uBAAuB,SAAS,MAAM;AAAA,MAChF,GAPK;AAAA,IAQN;AAAA,EACD;AACD;AAxEa,qBAAN;AAAA,EAIJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAPU;",
  "names": ["index", "codeBlocksByResponseId"]
}
