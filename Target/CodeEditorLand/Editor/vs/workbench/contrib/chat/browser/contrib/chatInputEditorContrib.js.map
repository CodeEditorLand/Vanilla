{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/contrib/chatInputEditorContrib.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { MarkdownString } from '../../../../../base/common/htmlContent.js';\nimport { Disposable, MutableDisposable } from '../../../../../base/common/lifecycle.js';\nimport { ICodeEditorService } from '../../../../../editor/browser/services/codeEditorService.js';\nimport { Range } from '../../../../../editor/common/core/range.js';\nimport { IDecorationOptions } from '../../../../../editor/common/editorCommon.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { inputPlaceholderForeground } from '../../../../../platform/theme/common/colorRegistry.js';\nimport { IThemeService } from '../../../../../platform/theme/common/themeService.js';\nimport { IChatWidget } from '../chat.js';\nimport { ChatWidget } from '../chatWidget.js';\nimport { dynamicVariableDecorationType } from './chatDynamicVariables.js';\nimport { IChatAgentCommand, IChatAgentData, IChatAgentService } from '../../common/chatAgents.js';\nimport { chatSlashCommandBackground, chatSlashCommandForeground } from '../../common/chatColors.js';\nimport { ChatRequestAgentPart, ChatRequestAgentSubcommandPart, ChatRequestSlashCommandPart, ChatRequestTextPart, ChatRequestToolPart, ChatRequestVariablePart, IParsedChatRequestPart, chatAgentLeader, chatSubcommandLeader } from '../../common/chatParserTypes.js';\nimport { ChatRequestParser } from '../../common/chatRequestParser.js';\n\nconst decorationDescription = 'chat';\nconst placeholderDecorationType = 'chat-session-detail';\nconst slashCommandTextDecorationType = 'chat-session-text';\nconst variableTextDecorationType = 'chat-variable-text';\n\nfunction agentAndCommandToKey(agent: IChatAgentData, subcommand: string | undefined): string {\n\treturn subcommand ? `${agent.id}__${subcommand}` : agent.id;\n}\n\nclass InputEditorDecorations extends Disposable {\n\n\tpublic readonly id = 'inputEditorDecorations';\n\n\tprivate readonly previouslyUsedAgents = new Set<string>();\n\n\tprivate readonly viewModelDisposables = this._register(new MutableDisposable());\n\n\tconstructor(\n\t\tprivate readonly widget: IChatWidget,\n\t\t@ICodeEditorService private readonly codeEditorService: ICodeEditorService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IChatAgentService private readonly chatAgentService: IChatAgentService,\n\t) {\n\t\tsuper();\n\n\t\tthis.codeEditorService.registerDecorationType(decorationDescription, placeholderDecorationType, {});\n\n\t\tthis._register(this.themeService.onDidColorThemeChange(() => this.updateRegisteredDecorationTypes()));\n\t\tthis.updateRegisteredDecorationTypes();\n\n\t\tthis.updateInputEditorDecorations();\n\t\tthis._register(this.widget.inputEditor.onDidChangeModelContent(() => this.updateInputEditorDecorations()));\n\t\tthis._register(this.widget.onDidChangeParsedInput(() => this.updateInputEditorDecorations()));\n\t\tthis._register(this.widget.onDidChangeViewModel(() => {\n\t\t\tthis.registerViewModelListeners();\n\t\t\tthis.previouslyUsedAgents.clear();\n\t\t\tthis.updateInputEditorDecorations();\n\t\t}));\n\t\tthis._register(this.widget.onDidSubmitAgent((e) => {\n\t\t\tthis.previouslyUsedAgents.add(agentAndCommandToKey(e.agent, e.slashCommand?.name));\n\t\t}));\n\t\tthis._register(this.chatAgentService.onDidChangeAgents(() => this.updateInputEditorDecorations()));\n\n\t\tthis.registerViewModelListeners();\n\t}\n\n\tprivate registerViewModelListeners(): void {\n\t\tthis.viewModelDisposables.value = this.widget.viewModel?.onDidChange(e => {\n\t\t\tif (e?.kind === 'changePlaceholder' || e?.kind === 'initialize') {\n\t\t\t\tthis.updateInputEditorDecorations();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate updateRegisteredDecorationTypes() {\n\t\tthis.codeEditorService.removeDecorationType(variableTextDecorationType);\n\t\tthis.codeEditorService.removeDecorationType(dynamicVariableDecorationType);\n\t\tthis.codeEditorService.removeDecorationType(slashCommandTextDecorationType);\n\n\t\tconst theme = this.themeService.getColorTheme();\n\t\tthis.codeEditorService.registerDecorationType(decorationDescription, slashCommandTextDecorationType, {\n\t\t\tcolor: theme.getColor(chatSlashCommandForeground)?.toString(),\n\t\t\tbackgroundColor: theme.getColor(chatSlashCommandBackground)?.toString(),\n\t\t\tborderRadius: '3px'\n\t\t});\n\t\tthis.codeEditorService.registerDecorationType(decorationDescription, variableTextDecorationType, {\n\t\t\tcolor: theme.getColor(chatSlashCommandForeground)?.toString(),\n\t\t\tbackgroundColor: theme.getColor(chatSlashCommandBackground)?.toString(),\n\t\t\tborderRadius: '3px'\n\t\t});\n\t\tthis.codeEditorService.registerDecorationType(decorationDescription, dynamicVariableDecorationType, {\n\t\t\tcolor: theme.getColor(chatSlashCommandForeground)?.toString(),\n\t\t\tbackgroundColor: theme.getColor(chatSlashCommandBackground)?.toString(),\n\t\t\tborderRadius: '3px'\n\t\t});\n\t\tthis.updateInputEditorDecorations();\n\t}\n\n\tprivate getPlaceholderColor(): string | undefined {\n\t\tconst theme = this.themeService.getColorTheme();\n\t\tconst transparentForeground = theme.getColor(inputPlaceholderForeground);\n\t\treturn transparentForeground?.toString();\n\t}\n\n\tprivate async updateInputEditorDecorations() {\n\t\tconst inputValue = this.widget.inputEditor.getValue();\n\n\t\tconst viewModel = this.widget.viewModel;\n\t\tif (!viewModel) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!inputValue) {\n\t\t\tconst defaultAgent = this.chatAgentService.getDefaultAgent(this.widget.location);\n\t\t\tconst decoration: IDecorationOptions[] = [\n\t\t\t\t{\n\t\t\t\t\trange: {\n\t\t\t\t\t\tstartLineNumber: 1,\n\t\t\t\t\t\tendLineNumber: 1,\n\t\t\t\t\t\tstartColumn: 1,\n\t\t\t\t\t\tendColumn: 1000\n\t\t\t\t\t},\n\t\t\t\t\trenderOptions: {\n\t\t\t\t\t\tafter: {\n\t\t\t\t\t\t\tcontentText: viewModel.inputPlaceholder || (defaultAgent?.description ?? ''),\n\t\t\t\t\t\t\tcolor: this.getPlaceholderColor()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t];\n\t\t\tthis.widget.inputEditor.setDecorationsByType(decorationDescription, placeholderDecorationType, decoration);\n\t\t\treturn;\n\t\t}\n\n\t\tconst parsedRequest = this.widget.parsedInput.parts;\n\n\t\tlet placeholderDecoration: IDecorationOptions[] | undefined;\n\t\tconst agentPart = parsedRequest.find((p): p is ChatRequestAgentPart => p instanceof ChatRequestAgentPart);\n\t\tconst agentSubcommandPart = parsedRequest.find((p): p is ChatRequestAgentSubcommandPart => p instanceof ChatRequestAgentSubcommandPart);\n\t\tconst slashCommandPart = parsedRequest.find((p): p is ChatRequestSlashCommandPart => p instanceof ChatRequestSlashCommandPart);\n\n\t\tconst exactlyOneSpaceAfterPart = (part: IParsedChatRequestPart): boolean => {\n\t\t\tconst partIdx = parsedRequest.indexOf(part);\n\t\t\tif (parsedRequest.length > partIdx + 2) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst nextPart = parsedRequest[partIdx + 1];\n\t\t\treturn nextPart && nextPart instanceof ChatRequestTextPart && nextPart.text === ' ';\n\t\t};\n\n\t\tconst getRangeForPlaceholder = (part: IParsedChatRequestPart) => ({\n\t\t\tstartLineNumber: part.editorRange.startLineNumber,\n\t\t\tendLineNumber: part.editorRange.endLineNumber,\n\t\t\tstartColumn: part.editorRange.endColumn + 1,\n\t\t\tendColumn: 1000\n\t\t});\n\n\t\tconst onlyAgentAndWhitespace = agentPart && parsedRequest.every(p => p instanceof ChatRequestTextPart && !p.text.trim().length || p instanceof ChatRequestAgentPart);\n\t\tif (onlyAgentAndWhitespace) {\n\t\t\t// Agent reference with no other text - show the placeholder\n\t\t\tconst isFollowupSlashCommand = this.previouslyUsedAgents.has(agentAndCommandToKey(agentPart.agent, undefined));\n\t\t\tconst shouldRenderFollowupPlaceholder = isFollowupSlashCommand && agentPart.agent.metadata.followupPlaceholder;\n\t\t\tif (agentPart.agent.description && exactlyOneSpaceAfterPart(agentPart)) {\n\t\t\t\tplaceholderDecoration = [{\n\t\t\t\t\trange: getRangeForPlaceholder(agentPart),\n\t\t\t\t\trenderOptions: {\n\t\t\t\t\t\tafter: {\n\t\t\t\t\t\t\tcontentText: shouldRenderFollowupPlaceholder ? agentPart.agent.metadata.followupPlaceholder : agentPart.agent.description,\n\t\t\t\t\t\t\tcolor: this.getPlaceholderColor(),\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}];\n\t\t\t}\n\t\t}\n\n\t\tconst onlyAgentAndAgentCommandAndWhitespace = agentPart && agentSubcommandPart && parsedRequest.every(p => p instanceof ChatRequestTextPart && !p.text.trim().length || p instanceof ChatRequestAgentPart || p instanceof ChatRequestAgentSubcommandPart);\n\t\tif (onlyAgentAndAgentCommandAndWhitespace) {\n\t\t\t// Agent reference and subcommand with no other text - show the placeholder\n\t\t\tconst isFollowupSlashCommand = this.previouslyUsedAgents.has(agentAndCommandToKey(agentPart.agent, agentSubcommandPart.command.name));\n\t\t\tconst shouldRenderFollowupPlaceholder = isFollowupSlashCommand && agentSubcommandPart.command.followupPlaceholder;\n\t\t\tif (agentSubcommandPart?.command.description && exactlyOneSpaceAfterPart(agentSubcommandPart)) {\n\t\t\t\tplaceholderDecoration = [{\n\t\t\t\t\trange: getRangeForPlaceholder(agentSubcommandPart),\n\t\t\t\t\trenderOptions: {\n\t\t\t\t\t\tafter: {\n\t\t\t\t\t\t\tcontentText: shouldRenderFollowupPlaceholder ? agentSubcommandPart.command.followupPlaceholder : agentSubcommandPart.command.description,\n\t\t\t\t\t\t\tcolor: this.getPlaceholderColor(),\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}];\n\t\t\t}\n\t\t}\n\n\t\tconst onlyAgentCommandAndWhitespace = agentSubcommandPart && parsedRequest.every(p => p instanceof ChatRequestTextPart && !p.text.trim().length || p instanceof ChatRequestAgentSubcommandPart);\n\t\tif (onlyAgentCommandAndWhitespace) {\n\t\t\t// Agent subcommand with no other text - show the placeholder\n\t\t\tif (agentSubcommandPart?.command.description && exactlyOneSpaceAfterPart(agentSubcommandPart)) {\n\t\t\t\tplaceholderDecoration = [{\n\t\t\t\t\trange: getRangeForPlaceholder(agentSubcommandPart),\n\t\t\t\t\trenderOptions: {\n\t\t\t\t\t\tafter: {\n\t\t\t\t\t\t\tcontentText: agentSubcommandPart.command.description,\n\t\t\t\t\t\t\tcolor: this.getPlaceholderColor(),\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}];\n\t\t\t}\n\t\t}\n\n\t\tthis.widget.inputEditor.setDecorationsByType(decorationDescription, placeholderDecorationType, placeholderDecoration ?? []);\n\n\t\tconst textDecorations: IDecorationOptions[] | undefined = [];\n\t\tif (agentPart) {\n\t\t\ttextDecorations.push({ range: agentPart.editorRange });\n\t\t}\n\t\tif (agentSubcommandPart) {\n\t\t\ttextDecorations.push({ range: agentSubcommandPart.editorRange, hoverMessage: new MarkdownString(agentSubcommandPart.command.description) });\n\t\t}\n\n\t\tif (slashCommandPart) {\n\t\t\ttextDecorations.push({ range: slashCommandPart.editorRange });\n\t\t}\n\n\t\tthis.widget.inputEditor.setDecorationsByType(decorationDescription, slashCommandTextDecorationType, textDecorations);\n\n\t\tconst varDecorations: IDecorationOptions[] = [];\n\t\tconst variableParts = parsedRequest.filter((p): p is ChatRequestVariablePart => p instanceof ChatRequestVariablePart);\n\t\tfor (const variable of variableParts) {\n\t\t\tvarDecorations.push({ range: variable.editorRange });\n\t\t}\n\n\t\tconst toolParts = parsedRequest.filter((p): p is ChatRequestToolPart => p instanceof ChatRequestToolPart);\n\t\tfor (const tool of toolParts) {\n\t\t\tvarDecorations.push({ range: tool.editorRange });\n\t\t}\n\n\t\tthis.widget.inputEditor.setDecorationsByType(decorationDescription, variableTextDecorationType, varDecorations);\n\t}\n}\n\nclass InputEditorSlashCommandMode extends Disposable {\n\tpublic readonly id = 'InputEditorSlashCommandMode';\n\n\tconstructor(\n\t\tprivate readonly widget: IChatWidget\n\t) {\n\t\tsuper();\n\t\tthis._register(this.widget.onDidChangeAgent(e => {\n\t\t\tif (e.slashCommand && e.slashCommand.isSticky || !e.slashCommand && e.agent.metadata.isSticky) {\n\t\t\t\tthis.repopulateAgentCommand(e.agent, e.slashCommand);\n\t\t\t}\n\t\t}));\n\t\tthis._register(this.widget.onDidSubmitAgent(e => {\n\t\t\tthis.repopulateAgentCommand(e.agent, e.slashCommand);\n\t\t}));\n\t}\n\n\tprivate async repopulateAgentCommand(agent: IChatAgentData, slashCommand: IChatAgentCommand | undefined) {\n\t\t// Make sure we don't repopulate if the user already has something in the input\n\t\tif (this.widget.inputEditor.getValue().trim()) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet value: string | undefined;\n\t\tif (slashCommand && slashCommand.isSticky) {\n\t\t\tvalue = `${chatAgentLeader}${agent.name} ${chatSubcommandLeader}${slashCommand.name} `;\n\t\t} else if (agent.metadata.isSticky) {\n\t\t\tvalue = `${chatAgentLeader}${agent.name} `;\n\t\t}\n\n\t\tif (value) {\n\t\t\tthis.widget.inputEditor.setValue(value);\n\t\t\tthis.widget.inputEditor.setPosition({ lineNumber: 1, column: value.length + 1 });\n\t\t}\n\t}\n}\n\nChatWidget.CONTRIBS.push(InputEditorDecorations, InputEditorSlashCommandMode);\n\nclass ChatTokenDeleter extends Disposable {\n\n\tpublic readonly id = 'chatTokenDeleter';\n\n\tconstructor(\n\t\tprivate readonly widget: IChatWidget,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tconst parser = this.instantiationService.createInstance(ChatRequestParser);\n\t\tconst inputValue = this.widget.inputEditor.getValue();\n\t\tlet previousInputValue: string | undefined;\n\t\tlet previousSelectedAgent: IChatAgentData | undefined;\n\n\t\t// A simple heuristic to delete the previous token when the user presses backspace.\n\t\t// The sophisticated way to do this would be to have a parse tree that can be updated incrementally.\n\t\tthis._register(this.widget.inputEditor.onDidChangeModelContent(e => {\n\t\t\tif (!previousInputValue) {\n\t\t\t\tpreviousInputValue = inputValue;\n\t\t\t\tpreviousSelectedAgent = this.widget.lastSelectedAgent;\n\t\t\t}\n\n\t\t\t// Don't try to handle multicursor edits right now\n\t\t\tconst change = e.changes[0];\n\n\t\t\t// If this was a simple delete, try to find out whether it was inside a token\n\t\t\tif (!change.text && this.widget.viewModel) {\n\t\t\t\tconst previousParsedValue = parser.parseChatRequest(this.widget.viewModel.sessionId, previousInputValue, widget.location, { selectedAgent: previousSelectedAgent });\n\n\t\t\t\t// For dynamic variables, this has to happen in ChatDynamicVariableModel with the other bookkeeping\n\t\t\t\tconst deletableTokens = previousParsedValue.parts.filter(p => p instanceof ChatRequestAgentPart || p instanceof ChatRequestAgentSubcommandPart || p instanceof ChatRequestSlashCommandPart || p instanceof ChatRequestVariablePart || p instanceof ChatRequestToolPart);\n\t\t\t\tdeletableTokens.forEach(token => {\n\t\t\t\t\tconst deletedRangeOfToken = Range.intersectRanges(token.editorRange, change.range);\n\t\t\t\t\t// Part of this token was deleted, or the space after it was deleted, and the deletion range doesn't go off the front of the token, for simpler math\n\t\t\t\t\tif (deletedRangeOfToken && Range.compareRangesUsingStarts(token.editorRange, change.range) < 0) {\n\t\t\t\t\t\t// Assume single line tokens\n\t\t\t\t\t\tconst length = deletedRangeOfToken.endColumn - deletedRangeOfToken.startColumn;\n\t\t\t\t\t\tconst rangeToDelete = new Range(token.editorRange.startLineNumber, token.editorRange.startColumn, token.editorRange.endLineNumber, token.editorRange.endColumn - length);\n\t\t\t\t\t\tthis.widget.inputEditor.executeEdits(this.id, [{\n\t\t\t\t\t\t\trange: rangeToDelete,\n\t\t\t\t\t\t\ttext: '',\n\t\t\t\t\t\t}]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tpreviousInputValue = this.widget.inputEditor.getValue();\n\t\t\tpreviousSelectedAgent = this.widget.lastSelectedAgent;\n\t\t}));\n\t}\n}\nChatWidget.CONTRIBS.push(ChatTokenDeleter);\n"],
  "mappings": "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",
  "names": []
}
