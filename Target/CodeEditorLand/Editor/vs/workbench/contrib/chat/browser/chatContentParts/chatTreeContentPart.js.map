{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/chatContentParts/chatTreeContentPart.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../../base/browser/dom.js';\nimport { IListVirtualDelegate } from '../../../../../base/browser/ui/list/list.js';\nimport { ITreeCompressionDelegate } from '../../../../../base/browser/ui/tree/asyncDataTree.js';\nimport { ICompressedTreeNode } from '../../../../../base/browser/ui/tree/compressedObjectTreeModel.js';\nimport { ICompressibleTreeRenderer } from '../../../../../base/browser/ui/tree/objectTree.js';\nimport { IAsyncDataSource, ITreeNode } from '../../../../../base/browser/ui/tree/tree.js';\nimport { Emitter, Event } from '../../../../../base/common/event.js';\nimport { Disposable, DisposableStore, IDisposable } from '../../../../../base/common/lifecycle.js';\nimport { localize } from '../../../../../nls.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { FileKind, FileType } from '../../../../../platform/files/common/files.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { WorkbenchCompressibleAsyncDataTree } from '../../../../../platform/list/browser/listService.js';\nimport { IOpenerService } from '../../../../../platform/opener/common/opener.js';\nimport { IThemeService } from '../../../../../platform/theme/common/themeService.js';\nimport { IResourceLabel, ResourceLabels } from '../../../../browser/labels.js';\nimport { ChatTreeItem } from '../chat.js';\nimport { IDisposableReference, ResourcePool } from './chatCollections.js';\nimport { IChatContentPart } from './chatContentParts.js';\nimport { IChatProgressRenderableResponseContent } from '../../common/chatModel.js';\nimport { IChatResponseProgressFileTreeData } from '../../common/chatService.js';\nimport { createFileIconThemableTreeContainerScope } from '../../../files/browser/views/explorerView.js';\nimport { IFilesConfiguration } from '../../../files/common/files.js';\n\nconst $ = dom.$;\n\nexport class ChatTreeContentPart extends Disposable implements IChatContentPart {\n\tpublic readonly domNode: HTMLElement;\n\n\tprivate readonly _onDidChangeHeight = this._register(new Emitter<void>());\n\tpublic readonly onDidChangeHeight = this._onDidChangeHeight.event;\n\n\tpublic readonly onDidFocus: Event<void>;\n\n\tprivate tree: WorkbenchCompressibleAsyncDataTree<IChatResponseProgressFileTreeData, IChatResponseProgressFileTreeData, void>;\n\n\tconstructor(\n\t\tdata: IChatResponseProgressFileTreeData,\n\t\telement: ChatTreeItem,\n\t\ttreePool: TreePool,\n\t\ttreeDataIndex: number,\n\t\t@IOpenerService private readonly openerService: IOpenerService\n\t) {\n\t\tsuper();\n\n\t\tconst ref = this._register(treePool.get());\n\t\tthis.tree = ref.object;\n\t\tthis.onDidFocus = this.tree.onDidFocus;\n\n\t\tthis._register(this.tree.onDidOpen((e) => {\n\t\t\tif (e.element && !('children' in e.element)) {\n\t\t\t\tthis.openerService.open(e.element.uri);\n\t\t\t}\n\t\t}));\n\t\tthis._register(this.tree.onDidChangeCollapseState(() => {\n\t\t\tthis._onDidChangeHeight.fire();\n\t\t}));\n\t\tthis._register(this.tree.onContextMenu((e) => {\n\t\t\te.browserEvent.preventDefault();\n\t\t\te.browserEvent.stopPropagation();\n\t\t}));\n\n\t\tthis.tree.setInput(data).then(() => {\n\t\t\tif (!ref.isStale()) {\n\t\t\t\tthis.tree.layout();\n\t\t\t\tthis._onDidChangeHeight.fire();\n\t\t\t}\n\t\t});\n\n\t\tthis.domNode = this.tree.getHTMLElement().parentElement!;\n\t}\n\n\tdomFocus() {\n\t\tthis.tree.domFocus();\n\t}\n\n\thasSameContent(other: IChatProgressRenderableResponseContent): boolean {\n\t\t// No other change allowed for this content type\n\t\treturn other.kind === 'treeData';\n\t}\n\n\taddDisposable(disposable: IDisposable): void {\n\t\tthis._register(disposable);\n\t}\n}\n\nexport class TreePool extends Disposable {\n\tprivate _pool: ResourcePool<WorkbenchCompressibleAsyncDataTree<IChatResponseProgressFileTreeData, IChatResponseProgressFileTreeData, void>>;\n\n\tpublic get inUse(): ReadonlySet<WorkbenchCompressibleAsyncDataTree<IChatResponseProgressFileTreeData, IChatResponseProgressFileTreeData, void>> {\n\t\treturn this._pool.inUse;\n\t}\n\n\tconstructor(\n\t\tprivate _onDidChangeVisibility: Event<boolean>,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IConfigurationService private readonly configService: IConfigurationService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t) {\n\t\tsuper();\n\t\tthis._pool = this._register(new ResourcePool(() => this.treeFactory()));\n\t}\n\n\tprivate treeFactory(): WorkbenchCompressibleAsyncDataTree<IChatResponseProgressFileTreeData, IChatResponseProgressFileTreeData, void> {\n\t\tconst resourceLabels = this._register(this.instantiationService.createInstance(ResourceLabels, { onDidChangeVisibility: this._onDidChangeVisibility }));\n\n\t\tconst container = $('.interactive-response-progress-tree');\n\t\tthis._register(createFileIconThemableTreeContainerScope(container, this.themeService));\n\n\t\tconst tree = this.instantiationService.createInstance(\n\t\t\tWorkbenchCompressibleAsyncDataTree<IChatResponseProgressFileTreeData, IChatResponseProgressFileTreeData>,\n\t\t\t'ChatListRenderer',\n\t\t\tcontainer,\n\t\t\tnew ChatListTreeDelegate(),\n\t\t\tnew ChatListTreeCompressionDelegate(),\n\t\t\t[new ChatListTreeRenderer(resourceLabels, this.configService.getValue('explorer.decorations'))],\n\t\t\tnew ChatListTreeDataSource(),\n\t\t\t{\n\t\t\t\tcollapseByDefault: () => false,\n\t\t\t\texpandOnlyOnTwistieClick: () => false,\n\t\t\t\tidentityProvider: {\n\t\t\t\t\tgetId: (e: IChatResponseProgressFileTreeData) => e.uri.toString()\n\t\t\t\t},\n\t\t\t\taccessibilityProvider: {\n\t\t\t\t\tgetAriaLabel: (element: IChatResponseProgressFileTreeData) => element.label,\n\t\t\t\t\tgetWidgetAriaLabel: () => localize('treeAriaLabel', \"File Tree\")\n\t\t\t\t},\n\t\t\t\talwaysConsumeMouseWheel: false\n\t\t\t});\n\n\t\treturn tree;\n\t}\n\n\tget(): IDisposableReference<WorkbenchCompressibleAsyncDataTree<IChatResponseProgressFileTreeData, IChatResponseProgressFileTreeData, void>> {\n\t\tconst object = this._pool.get();\n\t\tlet stale = false;\n\t\treturn {\n\t\t\tobject,\n\t\t\tisStale: () => stale,\n\t\t\tdispose: () => {\n\t\t\t\tstale = true;\n\t\t\t\tthis._pool.release(object);\n\t\t\t}\n\t\t};\n\t}\n}\n\nclass ChatListTreeDelegate implements IListVirtualDelegate<IChatResponseProgressFileTreeData> {\n\tstatic readonly ITEM_HEIGHT = 22;\n\n\tgetHeight(element: IChatResponseProgressFileTreeData): number {\n\t\treturn ChatListTreeDelegate.ITEM_HEIGHT;\n\t}\n\n\tgetTemplateId(element: IChatResponseProgressFileTreeData): string {\n\t\treturn 'chatListTreeTemplate';\n\t}\n}\n\nclass ChatListTreeCompressionDelegate implements ITreeCompressionDelegate<IChatResponseProgressFileTreeData> {\n\tisIncompressible(element: IChatResponseProgressFileTreeData): boolean {\n\t\treturn !element.children;\n\t}\n}\n\ninterface IChatListTreeRendererTemplate {\n\ttemplateDisposables: DisposableStore;\n\tlabel: IResourceLabel;\n}\n\nclass ChatListTreeRenderer implements ICompressibleTreeRenderer<IChatResponseProgressFileTreeData, void, IChatListTreeRendererTemplate> {\n\ttemplateId: string = 'chatListTreeTemplate';\n\n\tconstructor(private labels: ResourceLabels, private decorations: IFilesConfiguration['explorer']['decorations']) { }\n\n\trenderCompressedElements(element: ITreeNode<ICompressedTreeNode<IChatResponseProgressFileTreeData>, void>, index: number, templateData: IChatListTreeRendererTemplate, height: number | undefined): void {\n\t\ttemplateData.label.element.style.display = 'flex';\n\t\tconst label = element.element.elements.map((e) => e.label);\n\t\ttemplateData.label.setResource({ resource: element.element.elements[0].uri, name: label }, {\n\t\t\ttitle: element.element.elements[0].label,\n\t\t\tfileKind: element.children ? FileKind.FOLDER : FileKind.FILE,\n\t\t\textraClasses: ['explorer-item'],\n\t\t\tfileDecorations: this.decorations\n\t\t});\n\t}\n\trenderTemplate(container: HTMLElement): IChatListTreeRendererTemplate {\n\t\tconst templateDisposables = new DisposableStore();\n\t\tconst label = templateDisposables.add(this.labels.create(container, { supportHighlights: true }));\n\t\treturn { templateDisposables, label };\n\t}\n\trenderElement(element: ITreeNode<IChatResponseProgressFileTreeData, void>, index: number, templateData: IChatListTreeRendererTemplate, height: number | undefined): void {\n\t\ttemplateData.label.element.style.display = 'flex';\n\t\tif (!element.children.length && element.element.type !== FileType.Directory) {\n\t\t\ttemplateData.label.setFile(element.element.uri, {\n\t\t\t\tfileKind: FileKind.FILE,\n\t\t\t\thidePath: true,\n\t\t\t\tfileDecorations: this.decorations,\n\t\t\t});\n\t\t} else {\n\t\t\ttemplateData.label.setResource({ resource: element.element.uri, name: element.element.label }, {\n\t\t\t\ttitle: element.element.label,\n\t\t\t\tfileKind: FileKind.FOLDER,\n\t\t\t\tfileDecorations: this.decorations\n\t\t\t});\n\t\t}\n\t}\n\tdisposeTemplate(templateData: IChatListTreeRendererTemplate): void {\n\t\ttemplateData.templateDisposables.dispose();\n\t}\n}\n\nclass ChatListTreeDataSource implements IAsyncDataSource<IChatResponseProgressFileTreeData, IChatResponseProgressFileTreeData> {\n\thasChildren(element: IChatResponseProgressFileTreeData): boolean {\n\t\treturn !!element.children;\n\t}\n\n\tasync getChildren(element: IChatResponseProgressFileTreeData): Promise<Iterable<IChatResponseProgressFileTreeData>> {\n\t\treturn element.children ?? [];\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
