var v=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var c=(s,r,e,t)=>{for(var i=t>1?void 0:t?h(r,e):r,a=s.length-1,o;a>=0;a--)(o=s[a])&&(i=(t?o(r,e,i):o(i))||i);return t&&i&&v(r,e,i),i},n=(s,r)=>(e,t)=>r(e,t,s);import{IContextKeyService as p}from"../../../../platform/contextkey/common/contextkey.js";import{IInstantiationService as l}from"../../../../platform/instantiation/common/instantiation.js";import{ServiceCollection as S}from"../../../../platform/instantiation/common/serviceCollection.js";import{IStorageService as u,StorageScope as I,StorageTarget as g}from"../../../../platform/storage/common/storage.js";import{ITelemetryService as f}from"../../../../platform/telemetry/common/telemetry.js";import{editorBackground as m,editorForeground as w,inputBackground as C}from"../../../../platform/theme/common/colorRegistry.js";import{IThemeService as y}from"../../../../platform/theme/common/themeService.js";import{EditorPane as E}from"../../../browser/parts/editor/editorPane.js";import{Memento as x}from"../../../common/memento.js";import{ChatAgentLocation as _}from"../common/chatAgents.js";import{CHAT_PROVIDER_ID as M}from"../common/chatParticipantContribTypes.js";import{clearChatEditor as V}from"./actions/chatClear.js";import{ChatEditorInput as b}from"./chatEditorInput.js";import{ChatWidget as K}from"./chatWidget.js";let d=class extends E{constructor(e,t,i,a,o,D){super(b.EditorID,e,t,i,o);this.instantiationService=a;this.storageService=o;this.contextKeyService=D}widget;_scopedContextKeyService;get scopedContextKeyService(){return this._scopedContextKeyService}_memento;_viewState;async clear(){if(this.input)return this.instantiationService.invokeFunction(V,this.input)}createEditor(e){this._scopedContextKeyService=this._register(this.contextKeyService.createScoped(e));const t=this._register(this.instantiationService.createChild(new S([p,this.scopedContextKeyService])));this.widget=this._register(t.createInstance(K,_.Panel,void 0,{supportsFileReferences:!0},{listForeground:w,listBackground:m,inputEditorBackground:C,resultEditorBackground:m})),this._register(this.widget.onDidClear(()=>this.clear())),this.widget.render(e),this.widget.setVisible(!0)}setEditorVisible(e){super.setEditorVisible(e),this.widget?.setVisible(e)}focus(){super.focus(),this.widget?.focusInput()}clearInput(){this.saveState(),super.clearInput()}async setInput(e,t,i,a){super.setInput(e,t,i,a);const o=await e.resolve();if(!o)throw new Error(`Failed to get model for chat editor. id: ${e.sessionId}`);if(!this.widget)throw new Error("ChatEditor lifecycle issue: no editor widget");this.updateModel(o.model,t?.viewState??e.options.viewState)}updateModel(e,t){this._memento=new x("interactive-session-editor-"+M,this.storageService),this._viewState=t??this._memento.getMemento(I.WORKSPACE,g.MACHINE),this.widget.setModel(e,{...this._viewState})}saveState(){if(this.widget?.saveState(),this._memento&&this._viewState){const e=this.widget.getViewState();this._viewState.inputValue=e.inputValue,this._memento.saveMemento()}}layout(e,t){this.widget&&this.widget.layout(e.height,e.width)}};d=c([n(1,f),n(2,y),n(3,l),n(4,u),n(5,p)],d);export{d as ChatEditor};
