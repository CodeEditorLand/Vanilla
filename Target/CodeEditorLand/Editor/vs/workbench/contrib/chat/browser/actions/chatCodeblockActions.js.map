{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/actions/chatCodeblockActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from '../../../../../base/common/arrays.js';\nimport { AsyncIterableObject } from '../../../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../../../base/common/cancellation.js';\nimport { CharCode } from '../../../../../base/common/charCode.js';\nimport { Codicon } from '../../../../../base/common/codicons.js';\nimport { KeyCode, KeyMod } from '../../../../../base/common/keyCodes.js';\nimport { ResourceMap } from '../../../../../base/common/map.js';\nimport { isEqual } from '../../../../../base/common/resources.js';\nimport * as strings from '../../../../../base/common/strings.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { IActiveCodeEditor, ICodeEditor, isCodeEditor, isDiffEditor } from '../../../../../editor/browser/editorBrowser.js';\nimport { ServicesAccessor } from '../../../../../editor/browser/editorExtensions.js';\nimport { IBulkEditService, ResourceTextEdit } from '../../../../../editor/browser/services/bulkEditService.js';\nimport { ICodeEditorService } from '../../../../../editor/browser/services/codeEditorService.js';\nimport { Range } from '../../../../../editor/common/core/range.js';\nimport { EditorContextKeys } from '../../../../../editor/common/editorContextKeys.js';\nimport { ConversationRequest, ConversationResponse, DocumentContextItem, isLocation, IWorkspaceFileEdit, IWorkspaceTextEdit } from '../../../../../editor/common/languages.js';\nimport { ILanguageService } from '../../../../../editor/common/languages/language.js';\nimport { ITextModel } from '../../../../../editor/common/model.js';\nimport { ILanguageFeaturesService } from '../../../../../editor/common/services/languageFeatures.js';\nimport { CopyAction } from '../../../../../editor/contrib/clipboard/browser/clipboard.js';\nimport { localize, localize2 } from '../../../../../nls.js';\nimport { Action2, MenuId, registerAction2 } from '../../../../../platform/actions/common/actions.js';\nimport { IClipboardService } from '../../../../../platform/clipboard/common/clipboardService.js';\nimport { ContextKeyExpr } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingWeight } from '../../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { INotificationService, Severity } from '../../../../../platform/notification/common/notification.js';\nimport { IProgressService, ProgressLocation } from '../../../../../platform/progress/common/progress.js';\nimport { TerminalLocation } from '../../../../../platform/terminal/common/terminal.js';\nimport { IUntitledTextResourceEditorInput } from '../../../../common/editor.js';\nimport { IEditorService } from '../../../../services/editor/common/editorService.js';\nimport { ITextFileService } from '../../../../services/textfile/common/textfiles.js';\nimport { accessibleViewInCodeBlock } from '../../../accessibility/browser/accessibilityConfiguration.js';\nimport { InlineChatController } from '../../../inlineChat/browser/inlineChatController.js';\nimport { insertCell } from '../../../notebook/browser/controller/cellOperations.js';\nimport { INotebookEditor } from '../../../notebook/browser/notebookBrowser.js';\nimport { CellKind, NOTEBOOK_EDITOR_ID } from '../../../notebook/common/notebookCommon.js';\nimport { ITerminalEditorService, ITerminalGroupService, ITerminalService } from '../../../terminal/browser/terminal.js';\nimport { CONTEXT_CHAT_EDIT_APPLIED, CONTEXT_CHAT_ENABLED, CONTEXT_IN_CHAT_INPUT, CONTEXT_IN_CHAT_SESSION } from '../../common/chatContextKeys.js';\nimport { ChatCopyKind, IChatContentReference, IChatService, IDocumentContext } from '../../common/chatService.js';\nimport { IChatResponseViewModel, isRequestVM, isResponseVM } from '../../common/chatViewModel.js';\nimport { IChatCodeBlockContextProviderService, IChatWidgetService } from '../chat.js';\nimport { DefaultChatTextEditor, ICodeBlockActionContext, ICodeCompareBlockActionContext } from '../codeBlockPart.js';\nimport { CHAT_CATEGORY } from './chatActions.js';\n\nconst shellLangIds = [\n\t'fish',\n\t'ps1',\n\t'pwsh',\n\t'powershell',\n\t'sh',\n\t'shellscript',\n\t'zsh'\n];\n\nexport interface IChatCodeBlockActionContext extends ICodeBlockActionContext {\n\telement: IChatResponseViewModel;\n}\n\nexport function isCodeBlockActionContext(thing: unknown): thing is ICodeBlockActionContext {\n\treturn typeof thing === 'object' && thing !== null && 'code' in thing && 'element' in thing;\n}\n\nexport function isCodeCompareBlockActionContext(thing: unknown): thing is ICodeCompareBlockActionContext {\n\treturn typeof thing === 'object' && thing !== null && 'element' in thing;\n}\n\nfunction isResponseFiltered(context: ICodeBlockActionContext) {\n\treturn isResponseVM(context.element) && context.element.errorDetails?.responseIsFiltered;\n}\n\nfunction getUsedDocuments(context: ICodeBlockActionContext): IDocumentContext[] | undefined {\n\treturn isResponseVM(context.element) ? context.element.usedContext?.documents : undefined;\n}\n\n\nfunction getReferencesAsDocumentContext(res: readonly IChatContentReference[]): DocumentContextItem[] {\n\tconst map = new ResourceMap<DocumentContextItem>();\n\tfor (const r of res) {\n\t\tlet uri;\n\t\tlet range;\n\t\tif (URI.isUri(r.reference)) {\n\t\t\turi = r.reference;\n\t\t} else if (isLocation(r.reference)) {\n\t\t\turi = r.reference.uri;\n\t\t\trange = r.reference.range;\n\t\t}\n\t\tif (uri) {\n\t\t\tconst item = map.get(uri);\n\t\t\tif (item) {\n\t\t\t\tif (range) {\n\t\t\t\t\titem.ranges.push(range);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmap.set(uri, { uri, version: -1, ranges: range ? [range] : [] });\n\t\t\t}\n\t\t}\n\t}\n\treturn [...map.values()];\n}\n\n\nfunction getChatConversation(context: ICodeBlockActionContext): (ConversationRequest | ConversationResponse)[] {\n\t// TODO@aeschli for now create a conversation with just the current element\n\t// this will be expanded in the future to include the request and any other responses\n\n\tif (isResponseVM(context.element)) {\n\t\treturn [{\n\t\t\ttype: 'response',\n\t\t\tmessage: context.element.response.toMarkdown(),\n\t\t\treferences: getReferencesAsDocumentContext(context.element.contentReferences)\n\t\t}];\n\t} else if (isRequestVM(context.element)) {\n\t\treturn [{\n\t\t\ttype: 'request',\n\t\t\tmessage: context.element.messageText,\n\t\t}];\n\t} else {\n\t\treturn [];\n\t}\n}\n\nabstract class ChatCodeBlockAction extends Action2 {\n\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\tlet context = args[0];\n\t\tif (!isCodeBlockActionContext(context)) {\n\t\t\tconst codeEditorService = accessor.get(ICodeEditorService);\n\t\t\tconst editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n\t\t\tif (!editor) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcontext = getContextFromEditor(editor, accessor);\n\t\t\tif (!isCodeBlockActionContext(context)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\treturn this.runWithContext(accessor, context);\n\t}\n\n\tabstract runWithContext(accessor: ServicesAccessor, context: ICodeBlockActionContext): any;\n}\n\ninterface IComputeEditsResult {\n\treadonly edits: Array<IWorkspaceTextEdit | IWorkspaceFileEdit>;\n\treadonly codeMapper?: string;\n}\n\nabstract class InsertCodeBlockAction extends ChatCodeBlockAction {\n\n\toverride async runWithContext(accessor: ServicesAccessor, context: ICodeBlockActionContext) {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst textFileService = accessor.get(ITextFileService);\n\t\tconst bulkEditService = accessor.get(IBulkEditService);\n\t\tconst codeEditorService = accessor.get(ICodeEditorService);\n\t\tconst chatService = accessor.get(IChatService);\n\t\tconst languageFeaturesService = accessor.get(ILanguageFeaturesService);\n\t\tconst notificationService = accessor.get(INotificationService);\n\t\tconst progressService = accessor.get(IProgressService);\n\t\tconst languageService = accessor.get(ILanguageService);\n\n\t\tif (isResponseFiltered(context)) {\n\t\t\t// When run from command palette\n\t\t\treturn;\n\t\t}\n\n\t\tif (context.codemapperUri) {\n\t\t\t// If the code block is from a code mapper, first reveal the target file\n\t\t\tawait editorService.openEditor({ resource: context.codemapperUri });\n\t\t}\n\n\t\tif (editorService.activeEditorPane?.getId() === NOTEBOOK_EDITOR_ID) {\n\t\t\treturn this.handleNotebookEditor(languageService, progressService, notificationService, languageFeaturesService, bulkEditService, codeEditorService, chatService, editorService.activeEditorPane.getControl() as INotebookEditor, context);\n\t\t}\n\n\t\tlet activeEditorControl = editorService.activeTextEditorControl;\n\t\tif (isDiffEditor(activeEditorControl)) {\n\t\t\tactiveEditorControl = activeEditorControl.getOriginalEditor().hasTextFocus() ? activeEditorControl.getOriginalEditor() : activeEditorControl.getModifiedEditor();\n\t\t}\n\n\t\tif (!isCodeEditor(activeEditorControl)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!activeEditorControl.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst activeModelUri = activeEditorControl.getModel().uri;\n\n\t\t// Check if model is editable, currently only support untitled and text file\n\t\tconst activeTextModel = textFileService.files.get(activeModelUri) ?? textFileService.untitled.get(activeModelUri);\n\t\tif (!activeTextModel || activeTextModel.isReadonly()) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.handleTextEditor(progressService, notificationService, languageFeaturesService, bulkEditService, codeEditorService, chatService, activeEditorControl, context);\n\t}\n\n\tprivate async handleNotebookEditor(languageService: ILanguageService, progressService: IProgressService, notificationService: INotificationService, languageFeaturesService: ILanguageFeaturesService, bulkEditService: IBulkEditService, codeEditorService: ICodeEditorService, chatService: IChatService, notebookEditor: INotebookEditor, context: ICodeBlockActionContext) {\n\t\tif (!notebookEditor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (notebookEditor.isReadOnly) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (notebookEditor.activeCodeEditor?.hasTextFocus()) {\n\t\t\tconst codeEditor = notebookEditor.activeCodeEditor;\n\t\t\tif (codeEditor.hasModel()) {\n\t\t\t\treturn this.handleTextEditor(progressService, notificationService, languageFeaturesService, bulkEditService, codeEditorService, chatService, codeEditor, context);\n\t\t\t}\n\t\t}\n\n\t\tconst focusRange = notebookEditor.getFocus();\n\t\tconst next = Math.max(focusRange.end - 1, 0);\n\t\tinsertCell(languageService, notebookEditor, next, CellKind.Code, 'below', context.code, true);\n\t\tthis.notifyUserAction(chatService, context);\n\t}\n\n\tprotected async computeEdits(progressService: IProgressService, notificationService: INotificationService, languageFeaturesService: ILanguageFeaturesService, bulkEditService: IBulkEditService, codeEditorService: ICodeEditorService, chatService: IChatService, codeEditor: IActiveCodeEditor, codeBlockActionContext: ICodeBlockActionContext): Promise<IComputeEditsResult | undefined> {\n\t\tconst activeModel = codeEditor.getModel();\n\t\tconst range = codeEditor.getSelection() ?? new Range(activeModel.getLineCount(), 1, activeModel.getLineCount(), 1);\n\t\tconst text = reindent(codeBlockActionContext.code, activeModel, range.startLineNumber);\n\t\tif (text !== undefined) {\n\t\t\treturn { edits: [new ResourceTextEdit(activeModel.uri, { range, text })] };\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprotected get showPreview() {\n\t\treturn false;\n\t}\n\n\tprivate async handleTextEditor(progressService: IProgressService, notificationService: INotificationService, languageFeaturesService: ILanguageFeaturesService, bulkEditService: IBulkEditService, codeEditorService: ICodeEditorService, chatService: IChatService, codeEditor: IActiveCodeEditor, codeBlockActionContext: ICodeBlockActionContext) {\n\t\tconst result = await this.computeEdits(progressService, notificationService, languageFeaturesService, bulkEditService, codeEditorService, chatService, codeEditor, codeBlockActionContext);\n\t\tthis.notifyUserAction(chatService, codeBlockActionContext, result);\n\t\tif (!result) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.showPreview) {\n\t\t\tconst showWithPreview = await this.applyWithInlinePreview(codeEditorService, result.edits, codeEditor);\n\t\t\tif (!showWithPreview) {\n\t\t\t\tawait bulkEditService.apply(result.edits, { showPreview: true });\n\t\t\t\tconst activeModel = codeEditor.getModel();\n\t\t\t\tcodeEditorService.listCodeEditors().find(editor => editor.getModel()?.uri.toString() === activeModel.uri.toString())?.focus();\n\t\t\t}\n\t\t} else {\n\t\t\tawait bulkEditService.apply(result.edits);\n\t\t\tconst activeModel = codeEditor.getModel();\n\t\t\tcodeEditorService.listCodeEditors().find(editor => editor.getModel()?.uri.toString() === activeModel.uri.toString())?.focus();\n\t\t}\n\t}\n\n\tprivate async applyWithInlinePreview(codeEditorService: ICodeEditorService, edits: Array<IWorkspaceTextEdit | IWorkspaceFileEdit>, codeEditor: IActiveCodeEditor) {\n\t\tconst firstEdit = edits[0];\n\t\tif (!ResourceTextEdit.is(firstEdit)) {\n\t\t\treturn false;\n\t\t}\n\t\tconst resource = firstEdit.resource;\n\t\tconst textEdits = coalesce(edits.map(edit => ResourceTextEdit.is(edit) && isEqual(resource, edit.resource) ? edit.textEdit : undefined));\n\t\tif (textEdits.length !== edits.length) { // more than one file has changed\n\t\t\treturn false;\n\t\t}\n\t\tconst editorToApply = await codeEditorService.openCodeEditor({ resource }, codeEditor);\n\t\tif (editorToApply) {\n\t\t\tconst inlineChatController = InlineChatController.get(editorToApply);\n\t\t\tif (inlineChatController) {\n\t\t\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\t\t\ttry {\n\t\t\t\t\treturn await inlineChatController.reviewEdits(textEdits[0].range, AsyncIterableObject.fromArray(textEdits), cancellationTokenSource.token);\n\t\t\t\t} finally {\n\t\t\t\t\tcancellationTokenSource.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate notifyUserAction(chatService: IChatService, context: ICodeBlockActionContext, result?: IComputeEditsResult) {\n\t\tif (isResponseVM(context.element)) {\n\t\t\tchatService.notifyUserAction({\n\t\t\t\tagentId: context.element.agent?.id,\n\t\t\t\tcommand: context.element.slashCommand?.name,\n\t\t\t\tsessionId: context.element.sessionId,\n\t\t\t\trequestId: context.element.requestId,\n\t\t\t\tresult: context.element.result,\n\t\t\t\taction: {\n\t\t\t\t\tkind: 'insert',\n\t\t\t\t\tcodeBlockIndex: context.codeBlockIndex,\n\t\t\t\t\ttotalCharacters: context.code.length,\n\t\t\t\t\tuserAction: this.desc.id,\n\t\t\t\t\tcodeMapper: result?.codeMapper,\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n}\n\nfunction reindent(codeBlockContent: string, model: ITextModel, seletionStartLine: number): string | undefined {\n\tconst newContent = strings.splitLines(codeBlockContent);\n\tif (newContent.length === 0) {\n\t\treturn undefined;\n\t}\n\n\tconst formattingOptions = model.getFormattingOptions();\n\tconst codeIndentLevel = computeIndentation(model.getLineContent(seletionStartLine), formattingOptions.tabSize).level;\n\n\tconst indents = newContent.map(line => computeIndentation(line, formattingOptions.tabSize));\n\n\t// find the smallest indent level in the code block\n\tconst newContentIndentLevel = indents.reduce<number>((min, indent, index) => {\n\t\tif (indent.length !== newContent[index].length) { // ignore empty lines\n\t\t\treturn Math.min(indent.level, min);\n\t\t}\n\t\treturn min;\n\t}, Number.MAX_VALUE);\n\n\tif (newContentIndentLevel === Number.MAX_VALUE || newContentIndentLevel === codeIndentLevel) {\n\t\t// all lines are empty or the indent is already correct\n\t\treturn undefined;\n\t}\n\tconst newLines = [];\n\tfor (let i = 0; i < newContent.length; i++) {\n\t\tconst { level, length } = indents[i];\n\t\tconst newLevel = Math.max(0, codeIndentLevel + level - newContentIndentLevel);\n\t\tconst newIndentation = formattingOptions.insertSpaces ? ' '.repeat(formattingOptions.tabSize * newLevel) : '\\t'.repeat(newLevel);\n\t\tnewLines.push(newIndentation + newContent[i].substring(length));\n\t}\n\treturn newLines.join('\\n');\n}\n\n// TODO: Merge with `computeIndentLevel` from `vs/editor/common/model/utils.ts`\nfunction computeIndentation(line: string, tabSize: number): { level: number; length: number } {\n\tlet nSpaces = 0;\n\tlet level = 0;\n\tlet i = 0;\n\tlet length = 0;\n\tconst len = line.length;\n\twhile (i < len) {\n\t\tconst chCode = line.charCodeAt(i);\n\t\tif (chCode === CharCode.Space) {\n\t\t\tnSpaces++;\n\t\t\tif (nSpaces === tabSize) {\n\t\t\t\tlevel++;\n\t\t\t\tnSpaces = 0;\n\t\t\t\tlength = i + 1;\n\t\t\t}\n\t\t} else if (chCode === CharCode.Tab) {\n\t\t\tlevel++;\n\t\t\tnSpaces = 0;\n\t\t\tlength = i + 1;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn { level, length };\n}\n\nexport function registerChatCodeBlockActions() {\n\tregisterAction2(class CopyCodeBlockAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'workbench.action.chat.copyCodeBlock',\n\t\t\t\ttitle: localize2('interactive.copyCodeBlock.label', \"Copy\"),\n\t\t\t\tf1: false,\n\t\t\t\tcategory: CHAT_CATEGORY,\n\t\t\t\ticon: Codicon.copy,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.ChatCodeBlock,\n\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\torder: 30\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\t\tconst context = args[0];\n\t\t\tif (!isCodeBlockActionContext(context) || isResponseFiltered(context)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst clipboardService = accessor.get(IClipboardService);\n\t\t\tclipboardService.writeText(context.code);\n\n\t\t\tif (isResponseVM(context.element)) {\n\t\t\t\tconst chatService = accessor.get(IChatService);\n\t\t\t\tchatService.notifyUserAction({\n\t\t\t\t\tagentId: context.element.agent?.id,\n\t\t\t\t\tcommand: context.element.slashCommand?.name,\n\t\t\t\t\tsessionId: context.element.sessionId,\n\t\t\t\t\trequestId: context.element.requestId,\n\t\t\t\t\tresult: context.element.result,\n\t\t\t\t\taction: {\n\t\t\t\t\t\tkind: 'copy',\n\t\t\t\t\t\tcodeBlockIndex: context.codeBlockIndex,\n\t\t\t\t\t\tcopyKind: ChatCopyKind.Toolbar,\n\t\t\t\t\t\tcopiedCharacters: context.code.length,\n\t\t\t\t\t\ttotalCharacters: context.code.length,\n\t\t\t\t\t\tcopiedText: context.code,\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\n\tCopyAction?.addImplementation(50000, 'chat-codeblock', (accessor) => {\n\t\t// get active code editor\n\t\tconst editor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n\t\tif (!editor) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst editorModel = editor.getModel();\n\t\tif (!editorModel) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst context = getContextFromEditor(editor, accessor);\n\t\tif (!context) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst noSelection = editor.getSelections()?.length === 1 && editor.getSelection()?.isEmpty();\n\t\tconst copiedText = noSelection ?\n\t\t\teditorModel.getValue() :\n\t\t\teditor.getSelections()?.reduce((acc, selection) => acc + editorModel.getValueInRange(selection), '') ?? '';\n\t\tconst totalCharacters = editorModel.getValueLength();\n\n\t\t// Report copy to extensions\n\t\tconst chatService = accessor.get(IChatService);\n\t\tconst element = context.element as IChatResponseViewModel | undefined;\n\t\tif (element) {\n\t\t\tchatService.notifyUserAction({\n\t\t\t\tagentId: element.agent?.id,\n\t\t\t\tcommand: element.slashCommand?.name,\n\t\t\t\tsessionId: element.sessionId,\n\t\t\t\trequestId: element.requestId,\n\t\t\t\tresult: element.result,\n\t\t\t\taction: {\n\t\t\t\t\tkind: 'copy',\n\t\t\t\t\tcodeBlockIndex: context.codeBlockIndex,\n\t\t\t\t\tcopyKind: ChatCopyKind.Action,\n\t\t\t\t\tcopiedText,\n\t\t\t\t\tcopiedCharacters: copiedText.length,\n\t\t\t\t\ttotalCharacters,\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Copy full cell if no selection, otherwise fall back on normal editor implementation\n\t\tif (noSelection) {\n\t\t\taccessor.get(IClipboardService).writeText(context.code);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t});\n\n\tregisterAction2(class SmartApplyInEditorAction extends InsertCodeBlockAction {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'workbench.action.chat.applyInEditor',\n\t\t\t\ttitle: localize2('interactive.applyInEditor.label', \"Apply in Editor\"),\n\t\t\t\tprecondition: CONTEXT_CHAT_ENABLED,\n\t\t\t\tf1: true,\n\t\t\t\tcategory: CHAT_CATEGORY,\n\t\t\t\ticon: Codicon.sparkle,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.ChatCodeBlock,\n\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tCONTEXT_IN_CHAT_SESSION,\n\t\t\t\t\t\t...shellLangIds.map(e => ContextKeyExpr.notEquals(EditorContextKeys.languageId.key, e))\n\t\t\t\t\t),\n\t\t\t\t\torder: 10\n\t\t\t\t},\n\t\t\t\tkeybinding: {\n\t\t\t\t\twhen: ContextKeyExpr.or(ContextKeyExpr.and(CONTEXT_IN_CHAT_SESSION, CONTEXT_IN_CHAT_INPUT.negate()), accessibleViewInCodeBlock),\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\t\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.Enter },\n\t\t\t\t\tweight: KeybindingWeight.ExternalExtension + 1\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tprotected override async computeEdits(progressService: IProgressService, notificationService: INotificationService, languageFeaturesService: ILanguageFeaturesService, bulkEditService: IBulkEditService, codeEditorService: ICodeEditorService, chatService: IChatService, codeEditor: IActiveCodeEditor, codeBlockActionContext: ICodeBlockActionContext): Promise<IComputeEditsResult | undefined> {\n\n\n\t\t\tconst activeModel = codeEditor.getModel();\n\n\t\t\tconst mappedEditsProviders = languageFeaturesService.mappedEditsProvider.ordered(activeModel);\n\t\t\tif (mappedEditsProviders.length > 0) {\n\n\t\t\t\t// 0th sub-array - editor selections array if there are any selections\n\t\t\t\t// 1st sub-array - array with documents used to get the chat reply\n\t\t\t\tconst docRefs: DocumentContextItem[][] = [];\n\n\t\t\t\tconst currentDocUri = activeModel.uri;\n\t\t\t\tconst currentDocVersion = activeModel.getVersionId();\n\t\t\t\tconst selections = codeEditor.getSelections();\n\t\t\t\tif (selections.length > 0) {\n\t\t\t\t\tdocRefs.push([\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\turi: currentDocUri,\n\t\t\t\t\t\t\tversion: currentDocVersion,\n\t\t\t\t\t\t\tranges: selections,\n\t\t\t\t\t\t}\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t\tconst usedDocuments = getUsedDocuments(codeBlockActionContext);\n\t\t\t\tif (usedDocuments) {\n\t\t\t\t\tdocRefs.push(usedDocuments);\n\t\t\t\t}\n\n\t\t\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\t\t\ttry {\n\t\t\t\t\tconst edits = await progressService.withProgress<IComputeEditsResult | undefined>(\n\t\t\t\t\t\t{ location: ProgressLocation.Notification, delay: 500, sticky: true, cancellable: true },\n\t\t\t\t\t\tasync progress => {\n\t\t\t\t\t\t\tfor (const provider of mappedEditsProviders) {\n\t\t\t\t\t\t\t\tprogress.report({ message: localize('applyCodeBlock.progress', \"Applying code block using {0}...\", provider.displayName) });\n\t\t\t\t\t\t\t\tconst mappedEdits = await provider.provideMappedEdits(\n\t\t\t\t\t\t\t\t\tactiveModel,\n\t\t\t\t\t\t\t\t\t[codeBlockActionContext.code],\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tdocuments: docRefs,\n\t\t\t\t\t\t\t\t\t\tconversation: getChatConversation(codeBlockActionContext),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tcancellationTokenSource.token\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (mappedEdits) {\n\t\t\t\t\t\t\t\t\treturn { edits: mappedEdits.edits, codeMapper: provider.displayName };\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() => cancellationTokenSource.cancel()\n\t\t\t\t\t);\n\t\t\t\t\tif (edits) {\n\t\t\t\t\t\treturn edits;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tnotificationService.notify({ severity: Severity.Error, message: localize('applyCodeBlock.error', \"Failed to apply code block: {0}\", e.message) });\n\t\t\t\t} finally {\n\t\t\t\t\tcancellationTokenSource.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\n\n\t\tprotected override get showPreview() {\n\t\t\treturn true;\n\t\t}\n\n\t});\n\n\tregisterAction2(class SmartApplyInEditorAction extends InsertCodeBlockAction {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'workbench.action.chat.insertCodeBlock',\n\t\t\t\ttitle: localize2('interactive.insertCodeBlock.label', \"Insert At Cursor\"),\n\t\t\t\tprecondition: CONTEXT_CHAT_ENABLED,\n\t\t\t\tf1: true,\n\t\t\t\tcategory: CHAT_CATEGORY,\n\t\t\t\ticon: Codicon.insert,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.ChatCodeBlock,\n\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\twhen: CONTEXT_IN_CHAT_SESSION,\n\t\t\t\t\torder: 20\n\t\t\t\t},\n\t\t\t\tkeybinding: {\n\t\t\t\t\twhen: ContextKeyExpr.or(ContextKeyExpr.and(CONTEXT_IN_CHAT_SESSION, CONTEXT_IN_CHAT_INPUT.negate()), accessibleViewInCodeBlock),\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\t\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.Enter },\n\t\t\t\t\tweight: KeybindingWeight.ExternalExtension + 1\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t});\n\n\tregisterAction2(class InsertIntoNewFileAction extends ChatCodeBlockAction {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'workbench.action.chat.insertIntoNewFile',\n\t\t\t\ttitle: localize2('interactive.insertIntoNewFile.label', \"Insert into New File\"),\n\t\t\t\tprecondition: CONTEXT_CHAT_ENABLED,\n\t\t\t\tf1: true,\n\t\t\t\tcategory: CHAT_CATEGORY,\n\t\t\t\ticon: Codicon.newFile,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.ChatCodeBlock,\n\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\tisHiddenByDefault: true,\n\t\t\t\t\torder: 40,\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\toverride async runWithContext(accessor: ServicesAccessor, context: ICodeBlockActionContext) {\n\t\t\tif (isResponseFiltered(context)) {\n\t\t\t\t// When run from command palette\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst chatService = accessor.get(IChatService);\n\n\t\t\teditorService.openEditor({ contents: context.code, languageId: context.languageId, resource: undefined } satisfies IUntitledTextResourceEditorInput);\n\n\t\t\tif (isResponseVM(context.element)) {\n\t\t\t\tchatService.notifyUserAction({\n\t\t\t\t\tagentId: context.element.agent?.id,\n\t\t\t\t\tcommand: context.element.slashCommand?.name,\n\t\t\t\t\tsessionId: context.element.sessionId,\n\t\t\t\t\trequestId: context.element.requestId,\n\t\t\t\t\tresult: context.element.result,\n\t\t\t\t\taction: {\n\t\t\t\t\t\tkind: 'insert',\n\t\t\t\t\t\tcodeBlockIndex: context.codeBlockIndex,\n\t\t\t\t\t\ttotalCharacters: context.code.length,\n\t\t\t\t\t\tnewFile: true,\n\t\t\t\t\t\tuserAction: this.desc.id,\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\n\tregisterAction2(class RunInTerminalAction extends ChatCodeBlockAction {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'workbench.action.chat.runInTerminal',\n\t\t\t\ttitle: localize2('interactive.runInTerminal.label', \"Insert into Terminal\"),\n\t\t\t\tprecondition: CONTEXT_CHAT_ENABLED,\n\t\t\t\tf1: true,\n\t\t\t\tcategory: CHAT_CATEGORY,\n\t\t\t\ticon: Codicon.terminal,\n\t\t\t\tmenu: [{\n\t\t\t\t\tid: MenuId.ChatCodeBlock,\n\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tCONTEXT_IN_CHAT_SESSION,\n\t\t\t\t\t\tContextKeyExpr.or(...shellLangIds.map(e => ContextKeyExpr.equals(EditorContextKeys.languageId.key, e)))\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.ChatCodeBlock,\n\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\tisHiddenByDefault: true,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tCONTEXT_IN_CHAT_SESSION,\n\t\t\t\t\t\t...shellLangIds.map(e => ContextKeyExpr.notEquals(EditorContextKeys.languageId.key, e))\n\t\t\t\t\t)\n\t\t\t\t}],\n\t\t\t\tkeybinding: [{\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Enter,\n\t\t\t\t\tmac: {\n\t\t\t\t\t\tprimary: KeyMod.WinCtrl | KeyMod.Alt | KeyCode.Enter\n\t\t\t\t\t},\n\t\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\t\twhen: ContextKeyExpr.or(CONTEXT_IN_CHAT_SESSION, accessibleViewInCodeBlock),\n\t\t\t\t}]\n\t\t\t});\n\t\t}\n\n\t\toverride async runWithContext(accessor: ServicesAccessor, context: ICodeBlockActionContext) {\n\t\t\tif (isResponseFiltered(context)) {\n\t\t\t\t// When run from command palette\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst chatService = accessor.get(IChatService);\n\t\t\tconst terminalService = accessor.get(ITerminalService);\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst terminalEditorService = accessor.get(ITerminalEditorService);\n\t\t\tconst terminalGroupService = accessor.get(ITerminalGroupService);\n\n\t\t\tlet terminal = await terminalService.getActiveOrCreateInstance();\n\n\t\t\t// isFeatureTerminal = debug terminal or task terminal\n\t\t\tconst unusableTerminal = terminal.xterm?.isStdinDisabled || terminal.shellLaunchConfig.isFeatureTerminal;\n\t\t\tterminal = unusableTerminal ? await terminalService.createTerminal() : terminal;\n\n\t\t\tterminalService.setActiveInstance(terminal);\n\t\t\tawait terminal.focusWhenReady(true);\n\t\t\tif (terminal.target === TerminalLocation.Editor) {\n\t\t\t\tconst existingEditors = editorService.findEditors(terminal.resource);\n\t\t\t\tterminalEditorService.openEditor(terminal, { viewColumn: existingEditors?.[0].groupId });\n\t\t\t} else {\n\t\t\t\tterminalGroupService.showPanel(true);\n\t\t\t}\n\n\t\t\tterminal.runCommand(context.code, false);\n\n\t\t\tif (isResponseVM(context.element)) {\n\t\t\t\tchatService.notifyUserAction({\n\t\t\t\t\tagentId: context.element.agent?.id,\n\t\t\t\t\tcommand: context.element.slashCommand?.name,\n\t\t\t\t\tsessionId: context.element.sessionId,\n\t\t\t\t\trequestId: context.element.requestId,\n\t\t\t\t\tresult: context.element.result,\n\t\t\t\t\taction: {\n\t\t\t\t\t\tkind: 'runInTerminal',\n\t\t\t\t\t\tcodeBlockIndex: context.codeBlockIndex,\n\t\t\t\t\t\tlanguageId: context.languageId,\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction navigateCodeBlocks(accessor: ServicesAccessor, reverse?: boolean): void {\n\t\tconst codeEditorService = accessor.get(ICodeEditorService);\n\t\tconst chatWidgetService = accessor.get(IChatWidgetService);\n\t\tconst widget = chatWidgetService.lastFocusedWidget;\n\t\tif (!widget) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = codeEditorService.getFocusedCodeEditor();\n\t\tconst editorUri = editor?.getModel()?.uri;\n\t\tconst curCodeBlockInfo = editorUri ? widget.getCodeBlockInfoForEditor(editorUri) : undefined;\n\t\tconst focused = !widget.inputEditor.hasWidgetFocus() && widget.getFocus();\n\t\tconst focusedResponse = isResponseVM(focused) ? focused : undefined;\n\n\t\tconst currentResponse = curCodeBlockInfo ?\n\t\t\tcurCodeBlockInfo.element :\n\t\t\t(focusedResponse ?? widget.viewModel?.getItems().reverse().find((item): item is IChatResponseViewModel => isResponseVM(item)));\n\t\tif (!currentResponse || !isResponseVM(currentResponse)) {\n\t\t\treturn;\n\t\t}\n\n\t\twidget.reveal(currentResponse);\n\t\tconst responseCodeblocks = widget.getCodeBlockInfosForResponse(currentResponse);\n\t\tconst focusIdx = curCodeBlockInfo ?\n\t\t\t(curCodeBlockInfo.codeBlockIndex + (reverse ? -1 : 1) + responseCodeblocks.length) % responseCodeblocks.length :\n\t\t\treverse ? responseCodeblocks.length - 1 : 0;\n\n\t\tresponseCodeblocks[focusIdx]?.focus();\n\t}\n\n\tregisterAction2(class NextCodeBlockAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'workbench.action.chat.nextCodeBlock',\n\t\t\t\ttitle: localize2('interactive.nextCodeBlock.label', \"Next Code Block\"),\n\t\t\t\tkeybinding: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.PageDown,\n\t\t\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.PageDown, },\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\twhen: CONTEXT_IN_CHAT_SESSION,\n\t\t\t\t},\n\t\t\t\tprecondition: CONTEXT_CHAT_ENABLED,\n\t\t\t\tf1: true,\n\t\t\t\tcategory: CHAT_CATEGORY,\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\t\tnavigateCodeBlocks(accessor);\n\t\t}\n\t});\n\n\tregisterAction2(class PreviousCodeBlockAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'workbench.action.chat.previousCodeBlock',\n\t\t\t\ttitle: localize2('interactive.previousCodeBlock.label', \"Previous Code Block\"),\n\t\t\t\tkeybinding: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.PageUp,\n\t\t\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.PageUp, },\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\twhen: CONTEXT_IN_CHAT_SESSION,\n\t\t\t\t},\n\t\t\t\tprecondition: CONTEXT_CHAT_ENABLED,\n\t\t\t\tf1: true,\n\t\t\t\tcategory: CHAT_CATEGORY,\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\t\tnavigateCodeBlocks(accessor, true);\n\t\t}\n\t});\n}\n\nfunction getContextFromEditor(editor: ICodeEditor, accessor: ServicesAccessor): ICodeBlockActionContext | undefined {\n\tconst chatWidgetService = accessor.get(IChatWidgetService);\n\tconst chatCodeBlockContextProviderService = accessor.get(IChatCodeBlockContextProviderService);\n\tconst model = editor.getModel();\n\tif (!model) {\n\t\treturn;\n\t}\n\n\tconst widget = chatWidgetService.lastFocusedWidget;\n\tconst codeBlockInfo = widget?.getCodeBlockInfoForEditor(model.uri);\n\tif (!codeBlockInfo) {\n\t\tfor (const provider of chatCodeBlockContextProviderService.providers) {\n\t\t\tconst context = provider.getCodeBlockContext(editor);\n\t\t\tif (context) {\n\t\t\t\treturn context;\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\treturn {\n\t\telement: codeBlockInfo.element,\n\t\tcodeBlockIndex: codeBlockInfo.codeBlockIndex,\n\t\tcode: editor.getValue(),\n\t\tlanguageId: editor.getModel()!.getLanguageId(),\n\t\tcodemapperUri: codeBlockInfo.codemapperUri\n\t};\n}\n\nexport function registerChatCodeCompareBlockActions() {\n\n\tabstract class ChatCompareCodeBlockAction extends Action2 {\n\t\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\t\tconst context = args[0];\n\t\t\tif (!isCodeCompareBlockActionContext(context)) {\n\t\t\t\treturn;\n\t\t\t\t// TODO@jrieken derive context\n\t\t\t}\n\n\t\t\treturn this.runWithContext(accessor, context);\n\t\t}\n\n\t\tabstract runWithContext(accessor: ServicesAccessor, context: ICodeCompareBlockActionContext): any;\n\t}\n\n\tregisterAction2(class ApplyEditsCompareBlockAction extends ChatCompareCodeBlockAction {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'workbench.action.chat.applyCompareEdits',\n\t\t\t\ttitle: localize2('interactive.compare.apply', \"Apply Edits\"),\n\t\t\t\tf1: false,\n\t\t\t\tcategory: CHAT_CATEGORY,\n\t\t\t\ticon: Codicon.check,\n\t\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.hasChanges, CONTEXT_CHAT_EDIT_APPLIED.negate()),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.ChatCompareBlock,\n\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\torder: 1,\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tasync runWithContext(accessor: ServicesAccessor, context: ICodeCompareBlockActionContext): Promise<any> {\n\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst instaService = accessor.get(IInstantiationService);\n\n\t\t\tconst editor = instaService.createInstance(DefaultChatTextEditor);\n\t\t\tawait editor.apply(context.element, context.edit, context.diffEditor);\n\n\t\t\tawait editorService.openEditor({\n\t\t\t\tresource: context.edit.uri,\n\t\t\t\toptions: { revealIfVisible: true },\n\t\t\t});\n\t\t}\n\t});\n\n\tregisterAction2(class DiscardEditsCompareBlockAction extends ChatCompareCodeBlockAction {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'workbench.action.chat.discardCompareEdits',\n\t\t\t\ttitle: localize2('interactive.compare.discard', \"Discard Edits\"),\n\t\t\t\tf1: false,\n\t\t\t\tcategory: CHAT_CATEGORY,\n\t\t\t\ticon: Codicon.trash,\n\t\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.hasChanges, CONTEXT_CHAT_EDIT_APPLIED.negate()),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.ChatCompareBlock,\n\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\torder: 2,\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tasync runWithContext(accessor: ServicesAccessor, context: ICodeCompareBlockActionContext): Promise<any> {\n\t\t\tconst instaService = accessor.get(IInstantiationService);\n\t\t\tconst editor = instaService.createInstance(DefaultChatTextEditor);\n\t\t\teditor.discard(context.element, context.edit);\n\t\t}\n\t});\n}\n"],
  "mappings": "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",
  "names": []
}
