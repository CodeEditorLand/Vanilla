{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/actions/chatCodeblockActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from \"../../../../../base/common/arrays.js\";\nimport { AsyncIterableObject } from \"../../../../../base/common/async.js\";\nimport { CancellationTokenSource } from \"../../../../../base/common/cancellation.js\";\nimport { CharCode } from \"../../../../../base/common/charCode.js\";\nimport { Codicon } from \"../../../../../base/common/codicons.js\";\nimport { KeyCode, KeyMod } from \"../../../../../base/common/keyCodes.js\";\nimport { ResourceMap } from \"../../../../../base/common/map.js\";\nimport { isEqual } from \"../../../../../base/common/resources.js\";\nimport * as strings from \"../../../../../base/common/strings.js\";\nimport { URI } from \"../../../../../base/common/uri.js\";\nimport {\n\ttype IActiveCodeEditor,\n\ttype ICodeEditor,\n\tisCodeEditor,\n\tisDiffEditor,\n} from \"../../../../../editor/browser/editorBrowser.js\";\nimport type { ServicesAccessor } from \"../../../../../editor/browser/editorExtensions.js\";\nimport {\n\tIBulkEditService,\n\tResourceTextEdit,\n} from \"../../../../../editor/browser/services/bulkEditService.js\";\nimport { ICodeEditorService } from \"../../../../../editor/browser/services/codeEditorService.js\";\nimport { Range } from \"../../../../../editor/common/core/range.js\";\nimport { EditorContextKeys } from \"../../../../../editor/common/editorContextKeys.js\";\nimport {\n\ttype ConversationRequest,\n\ttype ConversationResponse,\n\ttype DocumentContextItem,\n\ttype IWorkspaceFileEdit,\n\ttype IWorkspaceTextEdit,\n\tisLocation,\n} from \"../../../../../editor/common/languages.js\";\nimport { ILanguageService } from \"../../../../../editor/common/languages/language.js\";\nimport type { ITextModel } from \"../../../../../editor/common/model.js\";\nimport { ILanguageFeaturesService } from \"../../../../../editor/common/services/languageFeatures.js\";\nimport { CopyAction } from \"../../../../../editor/contrib/clipboard/browser/clipboard.js\";\nimport { localize, localize2 } from \"../../../../../nls.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../../platform/actions/common/actions.js\";\nimport { IClipboardService } from \"../../../../../platform/clipboard/common/clipboardService.js\";\nimport { ContextKeyExpr } from \"../../../../../platform/contextkey/common/contextkey.js\";\nimport { IInstantiationService } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport {\n\tINotificationService,\n\tSeverity,\n} from \"../../../../../platform/notification/common/notification.js\";\nimport {\n\tIProgressService,\n\tProgressLocation,\n} from \"../../../../../platform/progress/common/progress.js\";\nimport { TerminalLocation } from \"../../../../../platform/terminal/common/terminal.js\";\nimport type { IUntitledTextResourceEditorInput } from \"../../../../common/editor.js\";\nimport { IEditorService } from \"../../../../services/editor/common/editorService.js\";\nimport { ITextFileService } from \"../../../../services/textfile/common/textfiles.js\";\nimport { accessibleViewInCodeBlock } from \"../../../accessibility/browser/accessibilityConfiguration.js\";\nimport { InlineChatController } from \"../../../inlineChat/browser/inlineChatController.js\";\nimport { insertCell } from \"../../../notebook/browser/controller/cellOperations.js\";\nimport type { INotebookEditor } from \"../../../notebook/browser/notebookBrowser.js\";\nimport {\n\tCellKind,\n\tNOTEBOOK_EDITOR_ID,\n} from \"../../../notebook/common/notebookCommon.js\";\nimport {\n\tITerminalEditorService,\n\tITerminalGroupService,\n\tITerminalService,\n} from \"../../../terminal/browser/terminal.js\";\nimport {\n\tCONTEXT_CHAT_EDIT_APPLIED,\n\tCONTEXT_CHAT_ENABLED,\n\tCONTEXT_IN_CHAT_INPUT,\n\tCONTEXT_IN_CHAT_SESSION,\n} from \"../../common/chatContextKeys.js\";\nimport {\n\tChatCopyKind,\n\ttype IChatContentReference,\n\tIChatService,\n\ttype IDocumentContext,\n} from \"../../common/chatService.js\";\nimport {\n\ttype IChatResponseViewModel,\n\tisRequestVM,\n\tisResponseVM,\n} from \"../../common/chatViewModel.js\";\nimport {\n\tIChatCodeBlockContextProviderService,\n\tIChatWidgetService,\n} from \"../chat.js\";\nimport {\n\tDefaultChatTextEditor,\n\ttype ICodeBlockActionContext,\n\ttype ICodeCompareBlockActionContext,\n} from \"../codeBlockPart.js\";\nimport { CHAT_CATEGORY } from \"./chatActions.js\";\n\nconst shellLangIds = [\n\t\"fish\",\n\t\"ps1\",\n\t\"pwsh\",\n\t\"powershell\",\n\t\"sh\",\n\t\"shellscript\",\n\t\"zsh\",\n];\n\nexport interface IChatCodeBlockActionContext extends ICodeBlockActionContext {\n\telement: IChatResponseViewModel;\n}\n\nexport function isCodeBlockActionContext(\n\tthing: unknown,\n): thing is ICodeBlockActionContext {\n\treturn (\n\t\ttypeof thing === \"object\" &&\n\t\tthing !== null &&\n\t\t\"code\" in thing &&\n\t\t\"element\" in thing\n\t);\n}\n\nexport function isCodeCompareBlockActionContext(\n\tthing: unknown,\n): thing is ICodeCompareBlockActionContext {\n\treturn typeof thing === \"object\" && thing !== null && \"element\" in thing;\n}\n\nfunction isResponseFiltered(context: ICodeBlockActionContext) {\n\treturn (\n\t\tisResponseVM(context.element) &&\n\t\tcontext.element.errorDetails?.responseIsFiltered\n\t);\n}\n\nfunction getUsedDocuments(\n\tcontext: ICodeBlockActionContext,\n): IDocumentContext[] | undefined {\n\treturn isResponseVM(context.element)\n\t\t? context.element.usedContext?.documents\n\t\t: undefined;\n}\n\nfunction getReferencesAsDocumentContext(\n\tres: readonly IChatContentReference[],\n): DocumentContextItem[] {\n\tconst map = new ResourceMap<DocumentContextItem>();\n\tfor (const r of res) {\n\t\tlet uri;\n\t\tlet range;\n\t\tif (URI.isUri(r.reference)) {\n\t\t\turi = r.reference;\n\t\t} else if (isLocation(r.reference)) {\n\t\t\turi = r.reference.uri;\n\t\t\trange = r.reference.range;\n\t\t}\n\t\tif (uri) {\n\t\t\tconst item = map.get(uri);\n\t\t\tif (item) {\n\t\t\t\tif (range) {\n\t\t\t\t\titem.ranges.push(range);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmap.set(uri, {\n\t\t\t\t\turi,\n\t\t\t\t\tversion: -1,\n\t\t\t\t\tranges: range ? [range] : [],\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\treturn [...map.values()];\n}\n\nfunction getChatConversation(\n\tcontext: ICodeBlockActionContext,\n): (ConversationRequest | ConversationResponse)[] {\n\t// TODO@aeschli for now create a conversation with just the current element\n\t// this will be expanded in the future to include the request and any other responses\n\n\tif (isResponseVM(context.element)) {\n\t\treturn [\n\t\t\t{\n\t\t\t\ttype: \"response\",\n\t\t\t\tmessage: context.element.response.toMarkdown(),\n\t\t\t\treferences: getReferencesAsDocumentContext(\n\t\t\t\t\tcontext.element.contentReferences,\n\t\t\t\t),\n\t\t\t},\n\t\t];\n\t} else if (isRequestVM(context.element)) {\n\t\treturn [\n\t\t\t{\n\t\t\t\ttype: \"request\",\n\t\t\t\tmessage: context.element.messageText,\n\t\t\t},\n\t\t];\n\t} else {\n\t\treturn [];\n\t}\n}\n\nabstract class ChatCodeBlockAction extends Action2 {\n\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\tlet context = args[0];\n\t\tif (!isCodeBlockActionContext(context)) {\n\t\t\tconst codeEditorService = accessor.get(ICodeEditorService);\n\t\t\tconst editor =\n\t\t\t\tcodeEditorService.getFocusedCodeEditor() ||\n\t\t\t\tcodeEditorService.getActiveCodeEditor();\n\t\t\tif (!editor) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcontext = getContextFromEditor(editor, accessor);\n\t\t\tif (!isCodeBlockActionContext(context)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\treturn this.runWithContext(accessor, context);\n\t}\n\n\tabstract runWithContext(\n\t\taccessor: ServicesAccessor,\n\t\tcontext: ICodeBlockActionContext,\n\t): any;\n}\n\ninterface IComputeEditsResult {\n\treadonly edits: Array<IWorkspaceTextEdit | IWorkspaceFileEdit>;\n\treadonly codeMapper?: string;\n}\n\nabstract class InsertCodeBlockAction extends ChatCodeBlockAction {\n\toverride async runWithContext(\n\t\taccessor: ServicesAccessor,\n\t\tcontext: ICodeBlockActionContext,\n\t) {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst textFileService = accessor.get(ITextFileService);\n\t\tconst bulkEditService = accessor.get(IBulkEditService);\n\t\tconst codeEditorService = accessor.get(ICodeEditorService);\n\t\tconst chatService = accessor.get(IChatService);\n\t\tconst languageFeaturesService = accessor.get(ILanguageFeaturesService);\n\t\tconst notificationService = accessor.get(INotificationService);\n\t\tconst progressService = accessor.get(IProgressService);\n\t\tconst languageService = accessor.get(ILanguageService);\n\n\t\tif (isResponseFiltered(context)) {\n\t\t\t// When run from command palette\n\t\t\treturn;\n\t\t}\n\n\t\tif (context.codemapperUri) {\n\t\t\t// If the code block is from a code mapper, first reveal the target file\n\t\t\tawait editorService.openEditor({ resource: context.codemapperUri });\n\t\t}\n\n\t\tif (editorService.activeEditorPane?.getId() === NOTEBOOK_EDITOR_ID) {\n\t\t\treturn this.handleNotebookEditor(\n\t\t\t\tlanguageService,\n\t\t\t\tprogressService,\n\t\t\t\tnotificationService,\n\t\t\t\tlanguageFeaturesService,\n\t\t\t\tbulkEditService,\n\t\t\t\tcodeEditorService,\n\t\t\t\tchatService,\n\t\t\t\teditorService.activeEditorPane.getControl() as INotebookEditor,\n\t\t\t\tcontext,\n\t\t\t);\n\t\t}\n\n\t\tlet activeEditorControl = editorService.activeTextEditorControl;\n\t\tif (isDiffEditor(activeEditorControl)) {\n\t\t\tactiveEditorControl = activeEditorControl\n\t\t\t\t.getOriginalEditor()\n\t\t\t\t.hasTextFocus()\n\t\t\t\t? activeEditorControl.getOriginalEditor()\n\t\t\t\t: activeEditorControl.getModifiedEditor();\n\t\t}\n\n\t\tif (!isCodeEditor(activeEditorControl)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!activeEditorControl.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst activeModelUri = activeEditorControl.getModel().uri;\n\n\t\t// Check if model is editable, currently only support untitled and text file\n\t\tconst activeTextModel =\n\t\t\ttextFileService.files.get(activeModelUri) ??\n\t\t\ttextFileService.untitled.get(activeModelUri);\n\t\tif (!activeTextModel || activeTextModel.isReadonly()) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.handleTextEditor(\n\t\t\tprogressService,\n\t\t\tnotificationService,\n\t\t\tlanguageFeaturesService,\n\t\t\tbulkEditService,\n\t\t\tcodeEditorService,\n\t\t\tchatService,\n\t\t\tactiveEditorControl,\n\t\t\tcontext,\n\t\t);\n\t}\n\n\tprivate async handleNotebookEditor(\n\t\tlanguageService: ILanguageService,\n\t\tprogressService: IProgressService,\n\t\tnotificationService: INotificationService,\n\t\tlanguageFeaturesService: ILanguageFeaturesService,\n\t\tbulkEditService: IBulkEditService,\n\t\tcodeEditorService: ICodeEditorService,\n\t\tchatService: IChatService,\n\t\tnotebookEditor: INotebookEditor,\n\t\tcontext: ICodeBlockActionContext,\n\t) {\n\t\tif (!notebookEditor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (notebookEditor.isReadOnly) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (notebookEditor.activeCodeEditor?.hasTextFocus()) {\n\t\t\tconst codeEditor = notebookEditor.activeCodeEditor;\n\t\t\tif (codeEditor.hasModel()) {\n\t\t\t\treturn this.handleTextEditor(\n\t\t\t\t\tprogressService,\n\t\t\t\t\tnotificationService,\n\t\t\t\t\tlanguageFeaturesService,\n\t\t\t\t\tbulkEditService,\n\t\t\t\t\tcodeEditorService,\n\t\t\t\t\tchatService,\n\t\t\t\t\tcodeEditor,\n\t\t\t\t\tcontext,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst focusRange = notebookEditor.getFocus();\n\t\tconst next = Math.max(focusRange.end - 1, 0);\n\t\tinsertCell(\n\t\t\tlanguageService,\n\t\t\tnotebookEditor,\n\t\t\tnext,\n\t\t\tCellKind.Code,\n\t\t\t\"below\",\n\t\t\tcontext.code,\n\t\t\ttrue,\n\t\t);\n\t\tthis.notifyUserAction(chatService, context);\n\t}\n\n\tprotected async computeEdits(\n\t\tprogressService: IProgressService,\n\t\tnotificationService: INotificationService,\n\t\tlanguageFeaturesService: ILanguageFeaturesService,\n\t\tbulkEditService: IBulkEditService,\n\t\tcodeEditorService: ICodeEditorService,\n\t\tchatService: IChatService,\n\t\tcodeEditor: IActiveCodeEditor,\n\t\tcodeBlockActionContext: ICodeBlockActionContext,\n\t): Promise<IComputeEditsResult | undefined> {\n\t\tconst activeModel = codeEditor.getModel();\n\t\tconst range =\n\t\t\tcodeEditor.getSelection() ??\n\t\t\tnew Range(\n\t\t\t\tactiveModel.getLineCount(),\n\t\t\t\t1,\n\t\t\t\tactiveModel.getLineCount(),\n\t\t\t\t1,\n\t\t\t);\n\t\tconst text = reindent(\n\t\t\tcodeBlockActionContext.code,\n\t\t\tactiveModel,\n\t\t\trange.startLineNumber,\n\t\t);\n\t\tif (text !== undefined) {\n\t\t\treturn {\n\t\t\t\tedits: [new ResourceTextEdit(activeModel.uri, { range, text })],\n\t\t\t};\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprotected get showPreview() {\n\t\treturn false;\n\t}\n\n\tprivate async handleTextEditor(\n\t\tprogressService: IProgressService,\n\t\tnotificationService: INotificationService,\n\t\tlanguageFeaturesService: ILanguageFeaturesService,\n\t\tbulkEditService: IBulkEditService,\n\t\tcodeEditorService: ICodeEditorService,\n\t\tchatService: IChatService,\n\t\tcodeEditor: IActiveCodeEditor,\n\t\tcodeBlockActionContext: ICodeBlockActionContext,\n\t) {\n\t\tconst result = await this.computeEdits(\n\t\t\tprogressService,\n\t\t\tnotificationService,\n\t\t\tlanguageFeaturesService,\n\t\t\tbulkEditService,\n\t\t\tcodeEditorService,\n\t\t\tchatService,\n\t\t\tcodeEditor,\n\t\t\tcodeBlockActionContext,\n\t\t);\n\t\tthis.notifyUserAction(chatService, codeBlockActionContext, result);\n\t\tif (!result) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.showPreview) {\n\t\t\tconst showWithPreview = await this.applyWithInlinePreview(\n\t\t\t\tcodeEditorService,\n\t\t\t\tresult.edits,\n\t\t\t\tcodeEditor,\n\t\t\t);\n\t\t\tif (!showWithPreview) {\n\t\t\t\tawait bulkEditService.apply(result.edits, {\n\t\t\t\t\tshowPreview: true,\n\t\t\t\t});\n\t\t\t\tconst activeModel = codeEditor.getModel();\n\t\t\t\tcodeEditorService\n\t\t\t\t\t.listCodeEditors()\n\t\t\t\t\t.find(\n\t\t\t\t\t\t(editor) =>\n\t\t\t\t\t\t\teditor.getModel()?.uri.toString() ===\n\t\t\t\t\t\t\tactiveModel.uri.toString(),\n\t\t\t\t\t)\n\t\t\t\t\t?.focus();\n\t\t\t}\n\t\t} else {\n\t\t\tawait bulkEditService.apply(result.edits);\n\t\t\tconst activeModel = codeEditor.getModel();\n\t\t\tcodeEditorService\n\t\t\t\t.listCodeEditors()\n\t\t\t\t.find(\n\t\t\t\t\t(editor) =>\n\t\t\t\t\t\teditor.getModel()?.uri.toString() ===\n\t\t\t\t\t\tactiveModel.uri.toString(),\n\t\t\t\t)\n\t\t\t\t?.focus();\n\t\t}\n\t}\n\n\tprivate async applyWithInlinePreview(\n\t\tcodeEditorService: ICodeEditorService,\n\t\tedits: Array<IWorkspaceTextEdit | IWorkspaceFileEdit>,\n\t\tcodeEditor: IActiveCodeEditor,\n\t) {\n\t\tconst firstEdit = edits[0];\n\t\tif (!ResourceTextEdit.is(firstEdit)) {\n\t\t\treturn false;\n\t\t}\n\t\tconst resource = firstEdit.resource;\n\t\tconst textEdits = coalesce(\n\t\t\tedits.map((edit) =>\n\t\t\t\tResourceTextEdit.is(edit) && isEqual(resource, edit.resource)\n\t\t\t\t\t? edit.textEdit\n\t\t\t\t\t: undefined,\n\t\t\t),\n\t\t);\n\t\tif (textEdits.length !== edits.length) {\n\t\t\t// more than one file has changed\n\t\t\treturn false;\n\t\t}\n\t\tconst editorToApply = await codeEditorService.openCodeEditor(\n\t\t\t{ resource },\n\t\t\tcodeEditor,\n\t\t);\n\t\tif (editorToApply) {\n\t\t\tconst inlineChatController =\n\t\t\t\tInlineChatController.get(editorToApply);\n\t\t\tif (inlineChatController) {\n\t\t\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\t\t\ttry {\n\t\t\t\t\treturn await inlineChatController.reviewEdits(\n\t\t\t\t\t\ttextEdits[0].range,\n\t\t\t\t\t\tAsyncIterableObject.fromArray(textEdits),\n\t\t\t\t\t\tcancellationTokenSource.token,\n\t\t\t\t\t);\n\t\t\t\t} finally {\n\t\t\t\t\tcancellationTokenSource.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate notifyUserAction(\n\t\tchatService: IChatService,\n\t\tcontext: ICodeBlockActionContext,\n\t\tresult?: IComputeEditsResult,\n\t) {\n\t\tif (isResponseVM(context.element)) {\n\t\t\tchatService.notifyUserAction({\n\t\t\t\tagentId: context.element.agent?.id,\n\t\t\t\tcommand: context.element.slashCommand?.name,\n\t\t\t\tsessionId: context.element.sessionId,\n\t\t\t\trequestId: context.element.requestId,\n\t\t\t\tresult: context.element.result,\n\t\t\t\taction: {\n\t\t\t\t\tkind: \"insert\",\n\t\t\t\t\tcodeBlockIndex: context.codeBlockIndex,\n\t\t\t\t\ttotalCharacters: context.code.length,\n\t\t\t\t\tuserAction: this.desc.id,\n\t\t\t\t\tcodeMapper: result?.codeMapper,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n}\n\nfunction reindent(\n\tcodeBlockContent: string,\n\tmodel: ITextModel,\n\tseletionStartLine: number,\n): string | undefined {\n\tconst newContent = strings.splitLines(codeBlockContent);\n\tif (newContent.length === 0) {\n\t\treturn undefined;\n\t}\n\n\tconst formattingOptions = model.getFormattingOptions();\n\tconst codeIndentLevel = computeIndentation(\n\t\tmodel.getLineContent(seletionStartLine),\n\t\tformattingOptions.tabSize,\n\t).level;\n\n\tconst indents = newContent.map((line) =>\n\t\tcomputeIndentation(line, formattingOptions.tabSize),\n\t);\n\n\t// find the smallest indent level in the code block\n\tconst newContentIndentLevel = indents.reduce<number>(\n\t\t(min, indent, index) => {\n\t\t\tif (indent.length !== newContent[index].length) {\n\t\t\t\t// ignore empty lines\n\t\t\t\treturn Math.min(indent.level, min);\n\t\t\t}\n\t\t\treturn min;\n\t\t},\n\t\tNumber.MAX_VALUE,\n\t);\n\n\tif (\n\t\tnewContentIndentLevel === Number.MAX_VALUE ||\n\t\tnewContentIndentLevel === codeIndentLevel\n\t) {\n\t\t// all lines are empty or the indent is already correct\n\t\treturn undefined;\n\t}\n\tconst newLines = [];\n\tfor (let i = 0; i < newContent.length; i++) {\n\t\tconst { level, length } = indents[i];\n\t\tconst newLevel = Math.max(\n\t\t\t0,\n\t\t\tcodeIndentLevel + level - newContentIndentLevel,\n\t\t);\n\t\tconst newIndentation = formattingOptions.insertSpaces\n\t\t\t? \" \".repeat(formattingOptions.tabSize * newLevel)\n\t\t\t: \"\\t\".repeat(newLevel);\n\t\tnewLines.push(newIndentation + newContent[i].substring(length));\n\t}\n\treturn newLines.join(\"\\n\");\n}\n\n// TODO: Merge with `computeIndentLevel` from `vs/editor/common/model/utils.ts`\nfunction computeIndentation(\n\tline: string,\n\ttabSize: number,\n): { level: number; length: number } {\n\tlet nSpaces = 0;\n\tlet level = 0;\n\tlet i = 0;\n\tlet length = 0;\n\tconst len = line.length;\n\twhile (i < len) {\n\t\tconst chCode = line.charCodeAt(i);\n\t\tif (chCode === CharCode.Space) {\n\t\t\tnSpaces++;\n\t\t\tif (nSpaces === tabSize) {\n\t\t\t\tlevel++;\n\t\t\t\tnSpaces = 0;\n\t\t\t\tlength = i + 1;\n\t\t\t}\n\t\t} else if (chCode === CharCode.Tab) {\n\t\t\tlevel++;\n\t\t\tnSpaces = 0;\n\t\t\tlength = i + 1;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn { level, length };\n}\n\nexport function registerChatCodeBlockActions() {\n\tregisterAction2(\n\t\tclass CopyCodeBlockAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: \"workbench.action.chat.copyCodeBlock\",\n\t\t\t\t\ttitle: localize2(\"interactive.copyCodeBlock.label\", \"Copy\"),\n\t\t\t\t\tf1: false,\n\t\t\t\t\tcategory: CHAT_CATEGORY,\n\t\t\t\t\ticon: Codicon.copy,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.ChatCodeBlock,\n\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\torder: 30,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\t\t\tconst context = args[0];\n\t\t\t\tif (\n\t\t\t\t\t!isCodeBlockActionContext(context) ||\n\t\t\t\t\tisResponseFiltered(context)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst clipboardService = accessor.get(IClipboardService);\n\t\t\t\tclipboardService.writeText(context.code);\n\n\t\t\t\tif (isResponseVM(context.element)) {\n\t\t\t\t\tconst chatService = accessor.get(IChatService);\n\t\t\t\t\tchatService.notifyUserAction({\n\t\t\t\t\t\tagentId: context.element.agent?.id,\n\t\t\t\t\t\tcommand: context.element.slashCommand?.name,\n\t\t\t\t\t\tsessionId: context.element.sessionId,\n\t\t\t\t\t\trequestId: context.element.requestId,\n\t\t\t\t\t\tresult: context.element.result,\n\t\t\t\t\t\taction: {\n\t\t\t\t\t\t\tkind: \"copy\",\n\t\t\t\t\t\t\tcodeBlockIndex: context.codeBlockIndex,\n\t\t\t\t\t\t\tcopyKind: ChatCopyKind.Toolbar,\n\t\t\t\t\t\t\tcopiedCharacters: context.code.length,\n\t\t\t\t\t\t\ttotalCharacters: context.code.length,\n\t\t\t\t\t\t\tcopiedText: context.code,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t);\n\n\tCopyAction?.addImplementation(50000, \"chat-codeblock\", (accessor) => {\n\t\t// get active code editor\n\t\tconst editor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n\t\tif (!editor) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst editorModel = editor.getModel();\n\t\tif (!editorModel) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst context = getContextFromEditor(editor, accessor);\n\t\tif (!context) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst noSelection =\n\t\t\teditor.getSelections()?.length === 1 &&\n\t\t\teditor.getSelection()?.isEmpty();\n\t\tconst copiedText = noSelection\n\t\t\t? editorModel.getValue()\n\t\t\t: (editor\n\t\t\t\t\t.getSelections()\n\t\t\t\t\t?.reduce(\n\t\t\t\t\t\t(acc, selection) =>\n\t\t\t\t\t\t\tacc + editorModel.getValueInRange(selection),\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t) ?? \"\");\n\t\tconst totalCharacters = editorModel.getValueLength();\n\n\t\t// Report copy to extensions\n\t\tconst chatService = accessor.get(IChatService);\n\t\tconst element = context.element as IChatResponseViewModel | undefined;\n\t\tif (element) {\n\t\t\tchatService.notifyUserAction({\n\t\t\t\tagentId: element.agent?.id,\n\t\t\t\tcommand: element.slashCommand?.name,\n\t\t\t\tsessionId: element.sessionId,\n\t\t\t\trequestId: element.requestId,\n\t\t\t\tresult: element.result,\n\t\t\t\taction: {\n\t\t\t\t\tkind: \"copy\",\n\t\t\t\t\tcodeBlockIndex: context.codeBlockIndex,\n\t\t\t\t\tcopyKind: ChatCopyKind.Action,\n\t\t\t\t\tcopiedText,\n\t\t\t\t\tcopiedCharacters: copiedText.length,\n\t\t\t\t\ttotalCharacters,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\t// Copy full cell if no selection, otherwise fall back on normal editor implementation\n\t\tif (noSelection) {\n\t\t\taccessor.get(IClipboardService).writeText(context.code);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t});\n\n\tregisterAction2(\n\t\tclass SmartApplyInEditorAction extends InsertCodeBlockAction {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: \"workbench.action.chat.applyInEditor\",\n\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\"interactive.applyInEditor.label\",\n\t\t\t\t\t\t\"Apply in Editor\",\n\t\t\t\t\t),\n\t\t\t\t\tprecondition: CONTEXT_CHAT_ENABLED,\n\t\t\t\t\tf1: true,\n\t\t\t\t\tcategory: CHAT_CATEGORY,\n\t\t\t\t\ticon: Codicon.sparkle,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.ChatCodeBlock,\n\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tCONTEXT_IN_CHAT_SESSION,\n\t\t\t\t\t\t\t...shellLangIds.map((e) =>\n\t\t\t\t\t\t\t\tContextKeyExpr.notEquals(\n\t\t\t\t\t\t\t\t\tEditorContextKeys.languageId.key,\n\t\t\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t\torder: 10,\n\t\t\t\t\t},\n\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\twhen: ContextKeyExpr.or(\n\t\t\t\t\t\t\tContextKeyExpr.and(\n\t\t\t\t\t\t\t\tCONTEXT_IN_CHAT_SESSION,\n\t\t\t\t\t\t\t\tCONTEXT_IN_CHAT_INPUT.negate(),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\taccessibleViewInCodeBlock,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\t\t\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.Enter },\n\t\t\t\t\t\tweight: KeybindingWeight.ExternalExtension + 1,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tprotected override async computeEdits(\n\t\t\t\tprogressService: IProgressService,\n\t\t\t\tnotificationService: INotificationService,\n\t\t\t\tlanguageFeaturesService: ILanguageFeaturesService,\n\t\t\t\tbulkEditService: IBulkEditService,\n\t\t\t\tcodeEditorService: ICodeEditorService,\n\t\t\t\tchatService: IChatService,\n\t\t\t\tcodeEditor: IActiveCodeEditor,\n\t\t\t\tcodeBlockActionContext: ICodeBlockActionContext,\n\t\t\t): Promise<IComputeEditsResult | undefined> {\n\t\t\t\tconst activeModel = codeEditor.getModel();\n\n\t\t\t\tconst mappedEditsProviders =\n\t\t\t\t\tlanguageFeaturesService.mappedEditsProvider.ordered(\n\t\t\t\t\t\tactiveModel,\n\t\t\t\t\t);\n\t\t\t\tif (mappedEditsProviders.length > 0) {\n\t\t\t\t\t// 0th sub-array - editor selections array if there are any selections\n\t\t\t\t\t// 1st sub-array - array with documents used to get the chat reply\n\t\t\t\t\tconst docRefs: DocumentContextItem[][] = [];\n\n\t\t\t\t\tconst currentDocUri = activeModel.uri;\n\t\t\t\t\tconst currentDocVersion = activeModel.getVersionId();\n\t\t\t\t\tconst selections = codeEditor.getSelections();\n\t\t\t\t\tif (selections.length > 0) {\n\t\t\t\t\t\tdocRefs.push([\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\turi: currentDocUri,\n\t\t\t\t\t\t\t\tversion: currentDocVersion,\n\t\t\t\t\t\t\t\tranges: selections,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]);\n\t\t\t\t\t}\n\t\t\t\t\tconst usedDocuments = getUsedDocuments(\n\t\t\t\t\t\tcodeBlockActionContext,\n\t\t\t\t\t);\n\t\t\t\t\tif (usedDocuments) {\n\t\t\t\t\t\tdocRefs.push(usedDocuments);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst cancellationTokenSource =\n\t\t\t\t\t\tnew CancellationTokenSource();\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst edits = await progressService.withProgress<\n\t\t\t\t\t\t\tIComputeEditsResult | undefined\n\t\t\t\t\t\t>(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlocation: ProgressLocation.Notification,\n\t\t\t\t\t\t\t\tdelay: 500,\n\t\t\t\t\t\t\t\tsticky: true,\n\t\t\t\t\t\t\t\tcancellable: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tasync (progress) => {\n\t\t\t\t\t\t\t\tfor (const provider of mappedEditsProviders) {\n\t\t\t\t\t\t\t\t\tprogress.report({\n\t\t\t\t\t\t\t\t\t\tmessage: localize(\n\t\t\t\t\t\t\t\t\t\t\t\"applyCodeBlock.progress\",\n\t\t\t\t\t\t\t\t\t\t\t\"Applying code block using {0}...\",\n\t\t\t\t\t\t\t\t\t\t\tprovider.displayName,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tconst mappedEdits =\n\t\t\t\t\t\t\t\t\t\tawait provider.provideMappedEdits(\n\t\t\t\t\t\t\t\t\t\t\tactiveModel,\n\t\t\t\t\t\t\t\t\t\t\t[codeBlockActionContext.code],\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tdocuments: docRefs,\n\t\t\t\t\t\t\t\t\t\t\t\tconversation:\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetChatConversation(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcodeBlockActionContext,\n\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tcancellationTokenSource.token,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tif (mappedEdits) {\n\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\tedits: mappedEdits.edits,\n\t\t\t\t\t\t\t\t\t\t\tcodeMapper: provider.displayName,\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() => cancellationTokenSource.cancel(),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (edits) {\n\t\t\t\t\t\t\treturn edits;\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tnotificationService.notify({\n\t\t\t\t\t\t\tseverity: Severity.Error,\n\t\t\t\t\t\t\tmessage: localize(\n\t\t\t\t\t\t\t\t\"applyCodeBlock.error\",\n\t\t\t\t\t\t\t\t\"Failed to apply code block: {0}\",\n\t\t\t\t\t\t\t\te.message,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t});\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tcancellationTokenSource.dispose();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tprotected override get showPreview() {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t);\n\n\tregisterAction2(\n\t\tclass SmartApplyInEditorAction extends InsertCodeBlockAction {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: \"workbench.action.chat.insertCodeBlock\",\n\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\"interactive.insertCodeBlock.label\",\n\t\t\t\t\t\t\"Insert At Cursor\",\n\t\t\t\t\t),\n\t\t\t\t\tprecondition: CONTEXT_CHAT_ENABLED,\n\t\t\t\t\tf1: true,\n\t\t\t\t\tcategory: CHAT_CATEGORY,\n\t\t\t\t\ticon: Codicon.insert,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.ChatCodeBlock,\n\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\twhen: CONTEXT_IN_CHAT_SESSION,\n\t\t\t\t\t\torder: 20,\n\t\t\t\t\t},\n\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\twhen: ContextKeyExpr.or(\n\t\t\t\t\t\t\tContextKeyExpr.and(\n\t\t\t\t\t\t\t\tCONTEXT_IN_CHAT_SESSION,\n\t\t\t\t\t\t\t\tCONTEXT_IN_CHAT_INPUT.negate(),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\taccessibleViewInCodeBlock,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\t\t\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.Enter },\n\t\t\t\t\t\tweight: KeybindingWeight.ExternalExtension + 1,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t);\n\n\tregisterAction2(\n\t\tclass InsertIntoNewFileAction extends ChatCodeBlockAction {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: \"workbench.action.chat.insertIntoNewFile\",\n\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\"interactive.insertIntoNewFile.label\",\n\t\t\t\t\t\t\"Insert into New File\",\n\t\t\t\t\t),\n\t\t\t\t\tprecondition: CONTEXT_CHAT_ENABLED,\n\t\t\t\t\tf1: true,\n\t\t\t\t\tcategory: CHAT_CATEGORY,\n\t\t\t\t\ticon: Codicon.newFile,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.ChatCodeBlock,\n\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\tisHiddenByDefault: true,\n\t\t\t\t\t\torder: 40,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\toverride async runWithContext(\n\t\t\t\taccessor: ServicesAccessor,\n\t\t\t\tcontext: ICodeBlockActionContext,\n\t\t\t) {\n\t\t\t\tif (isResponseFiltered(context)) {\n\t\t\t\t\t// When run from command palette\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\t\tconst chatService = accessor.get(IChatService);\n\n\t\t\t\teditorService.openEditor({\n\t\t\t\t\tcontents: context.code,\n\t\t\t\t\tlanguageId: context.languageId,\n\t\t\t\t\tresource: undefined,\n\t\t\t\t} satisfies IUntitledTextResourceEditorInput);\n\n\t\t\t\tif (isResponseVM(context.element)) {\n\t\t\t\t\tchatService.notifyUserAction({\n\t\t\t\t\t\tagentId: context.element.agent?.id,\n\t\t\t\t\t\tcommand: context.element.slashCommand?.name,\n\t\t\t\t\t\tsessionId: context.element.sessionId,\n\t\t\t\t\t\trequestId: context.element.requestId,\n\t\t\t\t\t\tresult: context.element.result,\n\t\t\t\t\t\taction: {\n\t\t\t\t\t\t\tkind: \"insert\",\n\t\t\t\t\t\t\tcodeBlockIndex: context.codeBlockIndex,\n\t\t\t\t\t\t\ttotalCharacters: context.code.length,\n\t\t\t\t\t\t\tnewFile: true,\n\t\t\t\t\t\t\tuserAction: this.desc.id,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t);\n\n\tregisterAction2(\n\t\tclass RunInTerminalAction extends ChatCodeBlockAction {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: \"workbench.action.chat.runInTerminal\",\n\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\"interactive.runInTerminal.label\",\n\t\t\t\t\t\t\"Insert into Terminal\",\n\t\t\t\t\t),\n\t\t\t\t\tprecondition: CONTEXT_CHAT_ENABLED,\n\t\t\t\t\tf1: true,\n\t\t\t\t\tcategory: CHAT_CATEGORY,\n\t\t\t\t\ticon: Codicon.terminal,\n\t\t\t\t\tmenu: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: MenuId.ChatCodeBlock,\n\t\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\t\tCONTEXT_IN_CHAT_SESSION,\n\t\t\t\t\t\t\t\tContextKeyExpr.or(\n\t\t\t\t\t\t\t\t\t...shellLangIds.map((e) =>\n\t\t\t\t\t\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\t\t\t\t\tEditorContextKeys.languageId.key,\n\t\t\t\t\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: MenuId.ChatCodeBlock,\n\t\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\t\tisHiddenByDefault: true,\n\t\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\t\tCONTEXT_IN_CHAT_SESSION,\n\t\t\t\t\t\t\t\t...shellLangIds.map((e) =>\n\t\t\t\t\t\t\t\t\tContextKeyExpr.notEquals(\n\t\t\t\t\t\t\t\t\t\tEditorContextKeys.languageId.key,\n\t\t\t\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tkeybinding: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprimary:\n\t\t\t\t\t\t\t\tKeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Enter,\n\t\t\t\t\t\t\tmac: {\n\t\t\t\t\t\t\t\tprimary:\n\t\t\t\t\t\t\t\t\tKeyMod.WinCtrl | KeyMod.Alt | KeyCode.Enter,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\t\t\t\twhen: ContextKeyExpr.or(\n\t\t\t\t\t\t\t\tCONTEXT_IN_CHAT_SESSION,\n\t\t\t\t\t\t\t\taccessibleViewInCodeBlock,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t});\n\t\t\t}\n\n\t\t\toverride async runWithContext(\n\t\t\t\taccessor: ServicesAccessor,\n\t\t\t\tcontext: ICodeBlockActionContext,\n\t\t\t) {\n\t\t\t\tif (isResponseFiltered(context)) {\n\t\t\t\t\t// When run from command palette\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst chatService = accessor.get(IChatService);\n\t\t\t\tconst terminalService = accessor.get(ITerminalService);\n\t\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\t\tconst terminalEditorService = accessor.get(\n\t\t\t\t\tITerminalEditorService,\n\t\t\t\t);\n\t\t\t\tconst terminalGroupService = accessor.get(\n\t\t\t\t\tITerminalGroupService,\n\t\t\t\t);\n\n\t\t\t\tlet terminal =\n\t\t\t\t\tawait terminalService.getActiveOrCreateInstance();\n\n\t\t\t\t// isFeatureTerminal = debug terminal or task terminal\n\t\t\t\tconst unusableTerminal =\n\t\t\t\t\tterminal.xterm?.isStdinDisabled ||\n\t\t\t\t\tterminal.shellLaunchConfig.isFeatureTerminal;\n\t\t\t\tterminal = unusableTerminal\n\t\t\t\t\t? await terminalService.createTerminal()\n\t\t\t\t\t: terminal;\n\n\t\t\t\tterminalService.setActiveInstance(terminal);\n\t\t\t\tawait terminal.focusWhenReady(true);\n\t\t\t\tif (terminal.target === TerminalLocation.Editor) {\n\t\t\t\t\tconst existingEditors = editorService.findEditors(\n\t\t\t\t\t\tterminal.resource,\n\t\t\t\t\t);\n\t\t\t\t\tterminalEditorService.openEditor(terminal, {\n\t\t\t\t\t\tviewColumn: existingEditors?.[0].groupId,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tterminalGroupService.showPanel(true);\n\t\t\t\t}\n\n\t\t\t\tterminal.runCommand(context.code, false);\n\n\t\t\t\tif (isResponseVM(context.element)) {\n\t\t\t\t\tchatService.notifyUserAction({\n\t\t\t\t\t\tagentId: context.element.agent?.id,\n\t\t\t\t\t\tcommand: context.element.slashCommand?.name,\n\t\t\t\t\t\tsessionId: context.element.sessionId,\n\t\t\t\t\t\trequestId: context.element.requestId,\n\t\t\t\t\t\tresult: context.element.result,\n\t\t\t\t\t\taction: {\n\t\t\t\t\t\t\tkind: \"runInTerminal\",\n\t\t\t\t\t\t\tcodeBlockIndex: context.codeBlockIndex,\n\t\t\t\t\t\t\tlanguageId: context.languageId,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t);\n\n\tfunction navigateCodeBlocks(\n\t\taccessor: ServicesAccessor,\n\t\treverse?: boolean,\n\t): void {\n\t\tconst codeEditorService = accessor.get(ICodeEditorService);\n\t\tconst chatWidgetService = accessor.get(IChatWidgetService);\n\t\tconst widget = chatWidgetService.lastFocusedWidget;\n\t\tif (!widget) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = codeEditorService.getFocusedCodeEditor();\n\t\tconst editorUri = editor?.getModel()?.uri;\n\t\tconst curCodeBlockInfo = editorUri\n\t\t\t? widget.getCodeBlockInfoForEditor(editorUri)\n\t\t\t: undefined;\n\t\tconst focused =\n\t\t\t!widget.inputEditor.hasWidgetFocus() && widget.getFocus();\n\t\tconst focusedResponse = isResponseVM(focused) ? focused : undefined;\n\n\t\tconst currentResponse = curCodeBlockInfo\n\t\t\t? curCodeBlockInfo.element\n\t\t\t: (focusedResponse ??\n\t\t\t\twidget.viewModel\n\t\t\t\t\t?.getItems()\n\t\t\t\t\t.reverse()\n\t\t\t\t\t.find((item): item is IChatResponseViewModel =>\n\t\t\t\t\t\tisResponseVM(item),\n\t\t\t\t\t));\n\t\tif (!currentResponse || !isResponseVM(currentResponse)) {\n\t\t\treturn;\n\t\t}\n\n\t\twidget.reveal(currentResponse);\n\t\tconst responseCodeblocks =\n\t\t\twidget.getCodeBlockInfosForResponse(currentResponse);\n\t\tconst focusIdx = curCodeBlockInfo\n\t\t\t? (curCodeBlockInfo.codeBlockIndex +\n\t\t\t\t\t(reverse ? -1 : 1) +\n\t\t\t\t\tresponseCodeblocks.length) %\n\t\t\t\tresponseCodeblocks.length\n\t\t\t: reverse\n\t\t\t\t? responseCodeblocks.length - 1\n\t\t\t\t: 0;\n\n\t\tresponseCodeblocks[focusIdx]?.focus();\n\t}\n\n\tregisterAction2(\n\t\tclass NextCodeBlockAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: \"workbench.action.chat.nextCodeBlock\",\n\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\"interactive.nextCodeBlock.label\",\n\t\t\t\t\t\t\"Next Code Block\",\n\t\t\t\t\t),\n\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.PageDown,\n\t\t\t\t\t\tmac: {\n\t\t\t\t\t\t\tprimary:\n\t\t\t\t\t\t\t\tKeyMod.CtrlCmd | KeyMod.Alt | KeyCode.PageDown,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\twhen: CONTEXT_IN_CHAT_SESSION,\n\t\t\t\t\t},\n\t\t\t\t\tprecondition: CONTEXT_CHAT_ENABLED,\n\t\t\t\t\tf1: true,\n\t\t\t\t\tcategory: CHAT_CATEGORY,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\t\t\tnavigateCodeBlocks(accessor);\n\t\t\t}\n\t\t},\n\t);\n\n\tregisterAction2(\n\t\tclass PreviousCodeBlockAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: \"workbench.action.chat.previousCodeBlock\",\n\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\"interactive.previousCodeBlock.label\",\n\t\t\t\t\t\t\"Previous Code Block\",\n\t\t\t\t\t),\n\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.PageUp,\n\t\t\t\t\t\tmac: {\n\t\t\t\t\t\t\tprimary:\n\t\t\t\t\t\t\t\tKeyMod.CtrlCmd | KeyMod.Alt | KeyCode.PageUp,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\twhen: CONTEXT_IN_CHAT_SESSION,\n\t\t\t\t\t},\n\t\t\t\t\tprecondition: CONTEXT_CHAT_ENABLED,\n\t\t\t\t\tf1: true,\n\t\t\t\t\tcategory: CHAT_CATEGORY,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\t\t\tnavigateCodeBlocks(accessor, true);\n\t\t\t}\n\t\t},\n\t);\n}\n\nfunction getContextFromEditor(\n\teditor: ICodeEditor,\n\taccessor: ServicesAccessor,\n): ICodeBlockActionContext | undefined {\n\tconst chatWidgetService = accessor.get(IChatWidgetService);\n\tconst chatCodeBlockContextProviderService = accessor.get(\n\t\tIChatCodeBlockContextProviderService,\n\t);\n\tconst model = editor.getModel();\n\tif (!model) {\n\t\treturn;\n\t}\n\n\tconst widget = chatWidgetService.lastFocusedWidget;\n\tconst codeBlockInfo = widget?.getCodeBlockInfoForEditor(model.uri);\n\tif (!codeBlockInfo) {\n\t\tfor (const provider of chatCodeBlockContextProviderService.providers) {\n\t\t\tconst context = provider.getCodeBlockContext(editor);\n\t\t\tif (context) {\n\t\t\t\treturn context;\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\treturn {\n\t\telement: codeBlockInfo.element,\n\t\tcodeBlockIndex: codeBlockInfo.codeBlockIndex,\n\t\tcode: editor.getValue(),\n\t\tlanguageId: editor.getModel()!.getLanguageId(),\n\t\tcodemapperUri: codeBlockInfo.codemapperUri,\n\t};\n}\n\nexport function registerChatCodeCompareBlockActions() {\n\tabstract class ChatCompareCodeBlockAction extends Action2 {\n\t\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\t\tconst context = args[0];\n\t\t\tif (!isCodeCompareBlockActionContext(context)) {\n\t\t\t\treturn;\n\t\t\t\t// TODO@jrieken derive context\n\t\t\t}\n\n\t\t\treturn this.runWithContext(accessor, context);\n\t\t}\n\n\t\tabstract runWithContext(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tcontext: ICodeCompareBlockActionContext,\n\t\t): any;\n\t}\n\n\tregisterAction2(\n\t\tclass ApplyEditsCompareBlockAction extends ChatCompareCodeBlockAction {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: \"workbench.action.chat.applyCompareEdits\",\n\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\"interactive.compare.apply\",\n\t\t\t\t\t\t\"Apply Edits\",\n\t\t\t\t\t),\n\t\t\t\t\tf1: false,\n\t\t\t\t\tcategory: CHAT_CATEGORY,\n\t\t\t\t\ticon: Codicon.check,\n\t\t\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\t\t\tEditorContextKeys.hasChanges,\n\t\t\t\t\t\tCONTEXT_CHAT_EDIT_APPLIED.negate(),\n\t\t\t\t\t),\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.ChatCompareBlock,\n\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\torder: 1,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tasync runWithContext(\n\t\t\t\taccessor: ServicesAccessor,\n\t\t\t\tcontext: ICodeCompareBlockActionContext,\n\t\t\t): Promise<any> {\n\t\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\t\tconst instaService = accessor.get(IInstantiationService);\n\n\t\t\t\tconst editor = instaService.createInstance(\n\t\t\t\t\tDefaultChatTextEditor,\n\t\t\t\t);\n\t\t\t\tawait editor.apply(\n\t\t\t\t\tcontext.element,\n\t\t\t\t\tcontext.edit,\n\t\t\t\t\tcontext.diffEditor,\n\t\t\t\t);\n\n\t\t\t\tawait editorService.openEditor({\n\t\t\t\t\tresource: context.edit.uri,\n\t\t\t\t\toptions: { revealIfVisible: true },\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t);\n\n\tregisterAction2(\n\t\tclass DiscardEditsCompareBlockAction extends ChatCompareCodeBlockAction {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: \"workbench.action.chat.discardCompareEdits\",\n\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\"interactive.compare.discard\",\n\t\t\t\t\t\t\"Discard Edits\",\n\t\t\t\t\t),\n\t\t\t\t\tf1: false,\n\t\t\t\t\tcategory: CHAT_CATEGORY,\n\t\t\t\t\ticon: Codicon.trash,\n\t\t\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\t\t\tEditorContextKeys.hasChanges,\n\t\t\t\t\t\tCONTEXT_CHAT_EDIT_APPLIED.negate(),\n\t\t\t\t\t),\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.ChatCompareBlock,\n\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\torder: 2,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tasync runWithContext(\n\t\t\t\taccessor: ServicesAccessor,\n\t\t\t\tcontext: ICodeCompareBlockActionContext,\n\t\t\t): Promise<any> {\n\t\t\t\tconst instaService = accessor.get(IInstantiationService);\n\t\t\t\tconst editor = instaService.createInstance(\n\t\t\t\t\tDefaultChatTextEditor,\n\t\t\t\t);\n\t\t\t\teditor.discard(context.element, context.edit);\n\t\t\t}\n\t\t},\n\t);\n}\n"],
  "mappings": "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",
  "names": []
}
