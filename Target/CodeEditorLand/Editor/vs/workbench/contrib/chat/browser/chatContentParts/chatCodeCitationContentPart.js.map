{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/chat/browser/chatContentParts/chatCodeCitationContentPart.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../../base/browser/dom.js';\nimport { Button } from '../../../../../base/browser/ui/button/button.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { localize } from '../../../../../nls.js';\nimport { ITelemetryService } from '../../../../../platform/telemetry/common/telemetry.js';\nimport { ChatTreeItem } from '../chat.js';\nimport { IChatContentPart, IChatContentPartRenderContext } from './chatContentParts.js';\nimport { getCodeCitationsMessage } from '../../common/chatModel.js';\nimport { IChatCodeCitations, IChatRendererContent } from '../../common/chatViewModel.js';\nimport { IEditorService } from '../../../../services/editor/common/editorService.js';\n\ntype ChatCodeCitationOpenedClassification = {\n\towner: 'roblourens';\n\tcomment: 'Indicates when a user opens chat code citations';\n};\n\nexport class ChatCodeCitationContentPart extends Disposable implements IChatContentPart {\n\tpublic readonly domNode: HTMLElement;\n\n\tconstructor(\n\t\tcitations: IChatCodeCitations,\n\t\tcontext: IChatContentPartRenderContext,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService\n\t) {\n\t\tsuper();\n\n\t\tconst label = getCodeCitationsMessage(citations.citations);\n\t\tconst elements = dom.h('.chat-code-citation-message@root', [\n\t\t\tdom.h('span.chat-code-citation-label@label'),\n\t\t\tdom.h('.chat-code-citation-button-container@button'),\n\t\t]);\n\t\telements.label.textContent = label + ' - ';\n\t\tconst button = this._register(new Button(elements.button, {\n\t\t\tbuttonBackground: undefined,\n\t\t\tbuttonBorder: undefined,\n\t\t\tbuttonForeground: undefined,\n\t\t\tbuttonHoverBackground: undefined,\n\t\t\tbuttonSecondaryBackground: undefined,\n\t\t\tbuttonSecondaryForeground: undefined,\n\t\t\tbuttonSecondaryHoverBackground: undefined,\n\t\t\tbuttonSeparator: undefined\n\t\t}));\n\t\tbutton.label = localize('viewMatches', \"View matches\");\n\t\tthis._register(button.onDidClick(() => {\n\t\t\tconst citationText = `# Code Citations\\n\\n` + citations.citations.map(c => `## License: ${c.license}\\n${c.value.toString()}\\n\\n\\`\\`\\`\\n${c.snippet}\\n\\`\\`\\`\\n\\n`).join('\\n');\n\t\t\tthis.editorService.openEditor({ resource: undefined, contents: citationText, languageId: 'markdown' });\n\t\t\tthis.telemetryService.publicLog2<{}, ChatCodeCitationOpenedClassification>('openedChatCodeCitations');\n\t\t}));\n\t\tthis.domNode = elements.root;\n\t}\n\n\thasSameContent(other: IChatRendererContent, followingContent: IChatRendererContent[], element: ChatTreeItem): boolean {\n\t\treturn other.kind === 'codeCitations';\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,YAAY,SAAS;AACrB,SAAS,cAAc;AACvB,SAAS,kBAAkB;AAC3B,SAAS,gBAAgB;AACzB,SAAS,yBAAyB;AAClC,SAAS,oBAAoB;AAC7B,SAAS,kBAAkB,qCAAqC;AAChE,SAAS,+BAA+B;AACxC,SAAS,oBAAoB,4BAA4B;AACzD,SAAS,sBAAsB;AAOxB,IAAM,8BAAN,cAA0C,WAAuC;AAAA,EAGvF,YACC,WACA,SACiC,eACG,kBACnC;AACD,UAAM;AAH2B;AACG;AAIpC,UAAM,QAAQ,wBAAwB,UAAU,SAAS;AACzD,UAAM,WAAW,IAAI,EAAE,oCAAoC;AAAA,MAC1D,IAAI,EAAE,qCAAqC;AAAA,MAC3C,IAAI,EAAE,6CAA6C;AAAA,IACpD,CAAC;AACD,aAAS,MAAM,cAAc,QAAQ;AACrC,UAAM,SAAS,KAAK,UAAU,IAAI,OAAO,SAAS,QAAQ;AAAA,MACzD,kBAAkB;AAAA,MAClB,cAAc;AAAA,MACd,kBAAkB;AAAA,MAClB,uBAAuB;AAAA,MACvB,2BAA2B;AAAA,MAC3B,2BAA2B;AAAA,MAC3B,gCAAgC;AAAA,MAChC,iBAAiB;AAAA,IAClB,CAAC,CAAC;AACF,WAAO,QAAQ,SAAS,eAAe,cAAc;AACrD,SAAK,UAAU,OAAO,WAAW,MAAM;AACtC,YAAM,eAAe;AAAA;AAAA,IAAyB,UAAU,UAAU,IAAI,OAAK,eAAe,EAAE,OAAO;AAAA,EAAK,EAAE,MAAM,SAAS,CAAC;AAAA;AAAA;AAAA,EAAe,EAAE,OAAO;AAAA;AAAA;AAAA,CAAc,EAAE,KAAK,IAAI;AAC3K,WAAK,cAAc,WAAW,EAAE,UAAU,QAAW,UAAU,cAAc,YAAY,WAAW,CAAC;AACrG,WAAK,iBAAiB,WAAqD,yBAAyB;AAAA,IACrG,CAAC,CAAC;AACF,SAAK,UAAU,SAAS;AAAA,EACzB;AAAA,EAvDD,OAqBwF;AAAA;AAAA;AAAA,EACvE;AAAA,EAmChB,eAAe,OAA6B,kBAA0C,SAAgC;AACrH,WAAO,MAAM,SAAS;AAAA,EACvB;AACD;AAvCa,8BAAN;AAAA,EAMJ;AAAA,EACA;AAAA,GAPU;",
  "names": []
}
