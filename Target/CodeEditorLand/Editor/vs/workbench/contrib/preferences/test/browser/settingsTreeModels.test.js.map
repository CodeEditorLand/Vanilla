{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/preferences/test/browser/settingsTreeModels.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { settingKeyToDisplayFormat, parseQuery, IParsedQuery } from '../../browser/settingsTreeModels.js';\n\nsuite('SettingsTree', () => {\n\ttest('settingKeyToDisplayFormat', () => {\n\t\tassert.deepStrictEqual(\n\t\t\tsettingKeyToDisplayFormat('foo.bar'),\n\t\t\t{\n\t\t\t\tcategory: 'Foo',\n\t\t\t\tlabel: 'Bar'\n\t\t\t});\n\n\t\tassert.deepStrictEqual(\n\t\t\tsettingKeyToDisplayFormat('foo.bar.etc'),\n\t\t\t{\n\t\t\t\tcategory: 'Foo \u203A Bar',\n\t\t\t\tlabel: 'Etc'\n\t\t\t});\n\n\t\tassert.deepStrictEqual(\n\t\t\tsettingKeyToDisplayFormat('fooBar.etcSomething'),\n\t\t\t{\n\t\t\t\tcategory: 'Foo Bar',\n\t\t\t\tlabel: 'Etc Something'\n\t\t\t});\n\n\t\tassert.deepStrictEqual(\n\t\t\tsettingKeyToDisplayFormat('foo'),\n\t\t\t{\n\t\t\t\tcategory: '',\n\t\t\t\tlabel: 'Foo'\n\t\t\t});\n\n\t\tassert.deepStrictEqual(\n\t\t\tsettingKeyToDisplayFormat('foo.1leading.number'),\n\t\t\t{\n\t\t\t\tcategory: 'Foo \u203A 1leading',\n\t\t\t\tlabel: 'Number'\n\t\t\t});\n\n\t\tassert.deepStrictEqual(\n\t\t\tsettingKeyToDisplayFormat('foo.1Leading.number'),\n\t\t\t{\n\t\t\t\tcategory: 'Foo \u203A 1 Leading',\n\t\t\t\tlabel: 'Number'\n\t\t\t});\n\t});\n\n\ttest('settingKeyToDisplayFormat - with category', () => {\n\t\tassert.deepStrictEqual(\n\t\t\tsettingKeyToDisplayFormat('foo.bar', 'foo'),\n\t\t\t{\n\t\t\t\tcategory: '',\n\t\t\t\tlabel: 'Bar'\n\t\t\t});\n\n\t\tassert.deepStrictEqual(\n\t\t\tsettingKeyToDisplayFormat('disableligatures.ligatures', 'disableligatures'),\n\t\t\t{\n\t\t\t\tcategory: '',\n\t\t\t\tlabel: 'Ligatures'\n\t\t\t});\n\n\t\tassert.deepStrictEqual(\n\t\t\tsettingKeyToDisplayFormat('foo.bar.etc', 'foo'),\n\t\t\t{\n\t\t\t\tcategory: 'Bar',\n\t\t\t\tlabel: 'Etc'\n\t\t\t});\n\n\t\tassert.deepStrictEqual(\n\t\t\tsettingKeyToDisplayFormat('fooBar.etcSomething', 'foo'),\n\t\t\t{\n\t\t\t\tcategory: 'Foo Bar',\n\t\t\t\tlabel: 'Etc Something'\n\t\t\t});\n\n\t\tassert.deepStrictEqual(\n\t\t\tsettingKeyToDisplayFormat('foo.bar.etc', 'foo/bar'),\n\t\t\t{\n\t\t\t\tcategory: '',\n\t\t\t\tlabel: 'Etc'\n\t\t\t});\n\n\t\tassert.deepStrictEqual(\n\t\t\tsettingKeyToDisplayFormat('foo.bar.etc', 'something/foo'),\n\t\t\t{\n\t\t\t\tcategory: 'Bar',\n\t\t\t\tlabel: 'Etc'\n\t\t\t});\n\n\t\tassert.deepStrictEqual(\n\t\t\tsettingKeyToDisplayFormat('bar.etc', 'something.bar'),\n\t\t\t{\n\t\t\t\tcategory: '',\n\t\t\t\tlabel: 'Etc'\n\t\t\t});\n\n\t\tassert.deepStrictEqual(\n\t\t\tsettingKeyToDisplayFormat('fooBar.etc', 'fooBar'),\n\t\t\t{\n\t\t\t\tcategory: '',\n\t\t\t\tlabel: 'Etc'\n\t\t\t});\n\n\n\t\tassert.deepStrictEqual(\n\t\t\tsettingKeyToDisplayFormat('fooBar.somethingElse.etc', 'fooBar'),\n\t\t\t{\n\t\t\t\tcategory: 'Something Else',\n\t\t\t\tlabel: 'Etc'\n\t\t\t});\n\t});\n\n\ttest('settingKeyToDisplayFormat - known acronym/term', () => {\n\t\tassert.deepStrictEqual(\n\t\t\tsettingKeyToDisplayFormat('css.someCssSetting'),\n\t\t\t{\n\t\t\t\tcategory: 'CSS',\n\t\t\t\tlabel: 'Some CSS Setting'\n\t\t\t});\n\n\t\tassert.deepStrictEqual(\n\t\t\tsettingKeyToDisplayFormat('powershell.somePowerShellSetting'),\n\t\t\t{\n\t\t\t\tcategory: 'PowerShell',\n\t\t\t\tlabel: 'Some PowerShell Setting'\n\t\t\t});\n\t});\n\n\ttest('parseQuery', () => {\n\t\tfunction testParseQuery(input: string, expected: IParsedQuery) {\n\t\t\tassert.deepStrictEqual(\n\t\t\t\tparseQuery(input),\n\t\t\t\texpected,\n\t\t\t\tinput\n\t\t\t);\n\t\t}\n\n\t\ttestParseQuery(\n\t\t\t'',\n\t\t\t<IParsedQuery>{\n\t\t\t\ttags: [],\n\t\t\t\textensionFilters: [],\n\t\t\t\tquery: '',\n\t\t\t\tfeatureFilters: [],\n\t\t\t\tidFilters: [],\n\t\t\t\tlanguageFilter: undefined\n\t\t\t});\n\n\t\ttestParseQuery(\n\t\t\t'@modified',\n\t\t\t<IParsedQuery>{\n\t\t\t\ttags: ['modified'],\n\t\t\t\textensionFilters: [],\n\t\t\t\tquery: '',\n\t\t\t\tfeatureFilters: [],\n\t\t\t\tidFilters: [],\n\t\t\t\tlanguageFilter: undefined\n\t\t\t});\n\n\t\ttestParseQuery(\n\t\t\t'@tag:foo',\n\t\t\t<IParsedQuery>{\n\t\t\t\ttags: ['foo'],\n\t\t\t\textensionFilters: [],\n\t\t\t\tquery: '',\n\t\t\t\tfeatureFilters: [],\n\t\t\t\tidFilters: [],\n\t\t\t\tlanguageFilter: undefined\n\t\t\t});\n\n\t\ttestParseQuery(\n\t\t\t'@modified foo',\n\t\t\t<IParsedQuery>{\n\t\t\t\ttags: ['modified'],\n\t\t\t\textensionFilters: [],\n\t\t\t\tquery: 'foo',\n\t\t\t\tfeatureFilters: [],\n\t\t\t\tidFilters: [],\n\t\t\t\tlanguageFilter: undefined\n\t\t\t});\n\n\t\ttestParseQuery(\n\t\t\t'@tag:foo @modified',\n\t\t\t<IParsedQuery>{\n\t\t\t\ttags: ['foo', 'modified'],\n\t\t\t\textensionFilters: [],\n\t\t\t\tquery: '',\n\t\t\t\tfeatureFilters: [],\n\t\t\t\tidFilters: [],\n\t\t\t\tlanguageFilter: undefined\n\t\t\t});\n\n\t\ttestParseQuery(\n\t\t\t'@tag:foo @modified my query',\n\t\t\t<IParsedQuery>{\n\t\t\t\ttags: ['foo', 'modified'],\n\t\t\t\textensionFilters: [],\n\t\t\t\tquery: 'my query',\n\t\t\t\tfeatureFilters: [],\n\t\t\t\tidFilters: [],\n\t\t\t\tlanguageFilter: undefined\n\t\t\t});\n\n\t\ttestParseQuery(\n\t\t\t'test @modified query',\n\t\t\t<IParsedQuery>{\n\t\t\t\ttags: ['modified'],\n\t\t\t\textensionFilters: [],\n\t\t\t\tquery: 'test  query',\n\t\t\t\tfeatureFilters: [],\n\t\t\t\tidFilters: [],\n\t\t\t\tlanguageFilter: undefined\n\t\t\t});\n\n\t\ttestParseQuery(\n\t\t\t'test @modified',\n\t\t\t<IParsedQuery>{\n\t\t\t\ttags: ['modified'],\n\t\t\t\textensionFilters: [],\n\t\t\t\tquery: 'test',\n\t\t\t\tfeatureFilters: [],\n\t\t\t\tidFilters: [],\n\t\t\t\tlanguageFilter: undefined\n\t\t\t});\n\n\t\ttestParseQuery(\n\t\t\t'query has @ for some reason',\n\t\t\t<IParsedQuery>{\n\t\t\t\ttags: [],\n\t\t\t\textensionFilters: [],\n\t\t\t\tquery: 'query has @ for some reason',\n\t\t\t\tfeatureFilters: [],\n\t\t\t\tidFilters: [],\n\t\t\t\tlanguageFilter: undefined\n\t\t\t});\n\n\t\ttestParseQuery(\n\t\t\t'@ext:github.vscode-pull-request-github',\n\t\t\t<IParsedQuery>{\n\t\t\t\ttags: [],\n\t\t\t\textensionFilters: ['github.vscode-pull-request-github'],\n\t\t\t\tquery: '',\n\t\t\t\tfeatureFilters: [],\n\t\t\t\tidFilters: [],\n\t\t\t\tlanguageFilter: undefined\n\t\t\t});\n\n\t\ttestParseQuery(\n\t\t\t'@ext:github.vscode-pull-request-github,vscode.git',\n\t\t\t<IParsedQuery>{\n\t\t\t\ttags: [],\n\t\t\t\textensionFilters: ['github.vscode-pull-request-github', 'vscode.git'],\n\t\t\t\tquery: '',\n\t\t\t\tfeatureFilters: [],\n\t\t\t\tidFilters: [],\n\t\t\t\tlanguageFilter: undefined\n\t\t\t});\n\t\ttestParseQuery(\n\t\t\t'@feature:scm',\n\t\t\t<IParsedQuery>{\n\t\t\t\ttags: [],\n\t\t\t\textensionFilters: [],\n\t\t\t\tfeatureFilters: ['scm'],\n\t\t\t\tquery: '',\n\t\t\t\tidFilters: [],\n\t\t\t\tlanguageFilter: undefined\n\t\t\t});\n\n\t\ttestParseQuery(\n\t\t\t'@feature:scm,terminal',\n\t\t\t<IParsedQuery>{\n\t\t\t\ttags: [],\n\t\t\t\textensionFilters: [],\n\t\t\t\tfeatureFilters: ['scm', 'terminal'],\n\t\t\t\tquery: '',\n\t\t\t\tidFilters: [],\n\t\t\t\tlanguageFilter: undefined\n\t\t\t});\n\t\ttestParseQuery(\n\t\t\t'@id:files.autoSave',\n\t\t\t<IParsedQuery>{\n\t\t\t\ttags: [],\n\t\t\t\textensionFilters: [],\n\t\t\t\tfeatureFilters: [],\n\t\t\t\tquery: '',\n\t\t\t\tidFilters: ['files.autoSave'],\n\t\t\t\tlanguageFilter: undefined\n\t\t\t});\n\n\t\ttestParseQuery(\n\t\t\t'@id:files.autoSave,terminal.integrated.commandsToSkipShell',\n\t\t\t<IParsedQuery>{\n\t\t\t\ttags: [],\n\t\t\t\textensionFilters: [],\n\t\t\t\tfeatureFilters: [],\n\t\t\t\tquery: '',\n\t\t\t\tidFilters: ['files.autoSave', 'terminal.integrated.commandsToSkipShell'],\n\t\t\t\tlanguageFilter: undefined\n\t\t\t});\n\n\t\ttestParseQuery(\n\t\t\t'@lang:cpp',\n\t\t\t<IParsedQuery>{\n\t\t\t\ttags: [],\n\t\t\t\textensionFilters: [],\n\t\t\t\tfeatureFilters: [],\n\t\t\t\tquery: '',\n\t\t\t\tidFilters: [],\n\t\t\t\tlanguageFilter: 'cpp'\n\t\t\t});\n\n\t\ttestParseQuery(\n\t\t\t'@lang:cpp,python',\n\t\t\t<IParsedQuery>{\n\t\t\t\ttags: [],\n\t\t\t\textensionFilters: [],\n\t\t\t\tfeatureFilters: [],\n\t\t\t\tquery: '',\n\t\t\t\tidFilters: [],\n\t\t\t\tlanguageFilter: 'cpp'\n\t\t\t});\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": []
}
