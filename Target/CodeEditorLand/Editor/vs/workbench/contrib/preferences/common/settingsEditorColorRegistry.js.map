{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/preferences/common/settingsEditorColorRegistry.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Color, RGBA } from \"../../../../base/common/color.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\tcheckboxBackground,\n\tcheckboxBorder,\n\tcheckboxForeground,\n\teditorWidgetBorder,\n\tfocusBorder,\n\tinputBackground,\n\tinputBorder,\n\tinputForeground,\n\tlistHoverBackground,\n\tregisterColor,\n\tselectBackground,\n\tselectBorder,\n\tselectForeground,\n\ttransparent,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport { PANEL_BORDER } from \"../../../common/theme.js\";\n\n// General setting colors\nexport const settingsHeaderForeground = registerColor(\n\t\"settings.headerForeground\",\n\t{\n\t\tlight: \"#444444\",\n\t\tdark: \"#e7e7e7\",\n\t\thcDark: \"#ffffff\",\n\t\thcLight: \"#292929\",\n\t},\n\tlocalize(\n\t\t\"headerForeground\",\n\t\t\"The foreground color for a section header or active title.\",\n\t),\n);\nexport const settingsHeaderHoverForeground = registerColor(\n\t\"settings.settingsHeaderHoverForeground\",\n\ttransparent(settingsHeaderForeground, 0.7),\n\tlocalize(\n\t\t\"settingsHeaderHoverForeground\",\n\t\t\"The foreground color for a section header or hovered title.\",\n\t),\n);\nexport const modifiedItemIndicator = registerColor(\n\t\"settings.modifiedItemIndicator\",\n\t{\n\t\tlight: new Color(new RGBA(102, 175, 224)),\n\t\tdark: new Color(new RGBA(12, 125, 157)),\n\t\thcDark: new Color(new RGBA(0, 73, 122)),\n\t\thcLight: new Color(new RGBA(102, 175, 224)),\n\t},\n\tlocalize(\n\t\t\"modifiedItemForeground\",\n\t\t\"The color of the modified setting indicator.\",\n\t),\n);\nexport const settingsHeaderBorder = registerColor(\n\t\"settings.headerBorder\",\n\tPANEL_BORDER,\n\tlocalize(\n\t\t\"settingsHeaderBorder\",\n\t\t\"The color of the header container border.\",\n\t),\n);\nexport const settingsSashBorder = registerColor(\n\t\"settings.sashBorder\",\n\tPANEL_BORDER,\n\tlocalize(\n\t\t\"settingsSashBorder\",\n\t\t\"The color of the Settings editor splitview sash border.\",\n\t),\n);\n\n// Enum control colors\nexport const settingsSelectBackground = registerColor(\n\t`settings.dropdownBackground`,\n\tselectBackground,\n\tlocalize(\n\t\t\"settingsDropdownBackground\",\n\t\t\"Settings editor dropdown background.\",\n\t),\n);\nexport const settingsSelectForeground = registerColor(\n\t\"settings.dropdownForeground\",\n\tselectForeground,\n\tlocalize(\n\t\t\"settingsDropdownForeground\",\n\t\t\"Settings editor dropdown foreground.\",\n\t),\n);\nexport const settingsSelectBorder = registerColor(\n\t\"settings.dropdownBorder\",\n\tselectBorder,\n\tlocalize(\"settingsDropdownBorder\", \"Settings editor dropdown border.\"),\n);\nexport const settingsSelectListBorder = registerColor(\n\t\"settings.dropdownListBorder\",\n\teditorWidgetBorder,\n\tlocalize(\n\t\t\"settingsDropdownListBorder\",\n\t\t\"Settings editor dropdown list border. This surrounds the options and separates the options from the description.\",\n\t),\n);\n\n// Bool control colors\nexport const settingsCheckboxBackground = registerColor(\n\t\"settings.checkboxBackground\",\n\tcheckboxBackground,\n\tlocalize(\n\t\t\"settingsCheckboxBackground\",\n\t\t\"Settings editor checkbox background.\",\n\t),\n);\nexport const settingsCheckboxForeground = registerColor(\n\t\"settings.checkboxForeground\",\n\tcheckboxForeground,\n\tlocalize(\n\t\t\"settingsCheckboxForeground\",\n\t\t\"Settings editor checkbox foreground.\",\n\t),\n);\nexport const settingsCheckboxBorder = registerColor(\n\t\"settings.checkboxBorder\",\n\tcheckboxBorder,\n\tlocalize(\"settingsCheckboxBorder\", \"Settings editor checkbox border.\"),\n);\n\n// Text control colors\nexport const settingsTextInputBackground = registerColor(\n\t\"settings.textInputBackground\",\n\tinputBackground,\n\tlocalize(\n\t\t\"textInputBoxBackground\",\n\t\t\"Settings editor text input box background.\",\n\t),\n);\nexport const settingsTextInputForeground = registerColor(\n\t\"settings.textInputForeground\",\n\tinputForeground,\n\tlocalize(\n\t\t\"textInputBoxForeground\",\n\t\t\"Settings editor text input box foreground.\",\n\t),\n);\nexport const settingsTextInputBorder = registerColor(\n\t\"settings.textInputBorder\",\n\tinputBorder,\n\tlocalize(\"textInputBoxBorder\", \"Settings editor text input box border.\"),\n);\n\n// Number control colors\nexport const settingsNumberInputBackground = registerColor(\n\t\"settings.numberInputBackground\",\n\tinputBackground,\n\tlocalize(\n\t\t\"numberInputBoxBackground\",\n\t\t\"Settings editor number input box background.\",\n\t),\n);\nexport const settingsNumberInputForeground = registerColor(\n\t\"settings.numberInputForeground\",\n\tinputForeground,\n\tlocalize(\n\t\t\"numberInputBoxForeground\",\n\t\t\"Settings editor number input box foreground.\",\n\t),\n);\nexport const settingsNumberInputBorder = registerColor(\n\t\"settings.numberInputBorder\",\n\tinputBorder,\n\tlocalize(\n\t\t\"numberInputBoxBorder\",\n\t\t\"Settings editor number input box border.\",\n\t),\n);\n\nexport const focusedRowBackground = registerColor(\n\t\"settings.focusedRowBackground\",\n\t{\n\t\tdark: transparent(listHoverBackground, 0.6),\n\t\tlight: transparent(listHoverBackground, 0.6),\n\t\thcDark: null,\n\t\thcLight: null,\n\t},\n\tlocalize(\n\t\t\"focusedRowBackground\",\n\t\t\"The background color of a settings row when focused.\",\n\t),\n);\n\nexport const rowHoverBackground = registerColor(\n\t\"settings.rowHoverBackground\",\n\t{\n\t\tdark: transparent(listHoverBackground, 0.3),\n\t\tlight: transparent(listHoverBackground, 0.3),\n\t\thcDark: null,\n\t\thcLight: null,\n\t},\n\tlocalize(\n\t\t\"settings.rowHoverBackground\",\n\t\t\"The background color of a settings row when hovered.\",\n\t),\n);\n\nexport const focusedRowBorder = registerColor(\n\t\"settings.focusedRowBorder\",\n\tfocusBorder,\n\tlocalize(\n\t\t\"settings.focusedRowBorder\",\n\t\t\"The color of the row's top and bottom border when the row is focused.\",\n\t),\n);\n"],
  "mappings": "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",
  "names": []
}
