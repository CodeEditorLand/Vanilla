{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/preferences/browser/keybindingsEditorContribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from \"../../../../base/common/async.js\";\nimport { MarkdownString } from \"../../../../base/common/htmlContent.js\";\nimport { type Node, parseTree } from \"../../../../base/common/json.js\";\nimport { KeybindingParser } from \"../../../../base/common/keybindingParser.js\";\nimport {\n\tDisposable,\n\tMutableDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { isEqual } from \"../../../../base/common/resources.js\";\nimport type { ThemeColor } from \"../../../../base/common/themables.js\";\nimport { assertIsDefined } from \"../../../../base/common/types.js\";\nimport type { ICodeEditor } from \"../../../../editor/browser/editorBrowser.js\";\nimport {\n\tEditorContributionInstantiation,\n\tregisterEditorContribution,\n} from \"../../../../editor/browser/editorExtensions.js\";\nimport {\n\toverviewRulerError,\n\toverviewRulerInfo,\n} from \"../../../../editor/common/core/editorColorRegistry.js\";\nimport { Range } from \"../../../../editor/common/core/range.js\";\nimport {\n\ttype IModelDeltaDecoration,\n\ttype ITextModel,\n\tOverviewRulerLane,\n\tTrackedRangeStickiness,\n} from \"../../../../editor/common/model.js\";\nimport { SnippetController2 } from \"../../../../editor/contrib/snippet/browser/snippetController2.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { themeColorFromId } from \"../../../../platform/theme/common/themeService.js\";\nimport { WindowsNativeResolvedKeybinding } from \"../../../services/keybinding/common/windowsKeyboardMapper.js\";\nimport {\n\tDEFINE_KEYBINDING_EDITOR_CONTRIB_ID,\n\ttype IDefineKeybindingEditorContribution,\n} from \"../../../services/preferences/common/preferences.js\";\nimport { IUserDataProfileService } from \"../../../services/userDataProfile/common/userDataProfile.js\";\nimport { SmartSnippetInserter } from \"../common/smartSnippetInserter.js\";\nimport { DefineKeybindingOverlayWidget } from \"./keybindingWidgets.js\";\n\nconst NLS_KB_LAYOUT_ERROR_MESSAGE = nls.localize(\n\t\"defineKeybinding.kbLayoutErrorMessage\",\n\t\"You won't be able to produce this key combination under your current keyboard layout.\",\n);\n\nclass DefineKeybindingEditorContribution\n\textends Disposable\n\timplements IDefineKeybindingEditorContribution\n{\n\tprivate readonly _keybindingDecorationRenderer = this._register(\n\t\tnew MutableDisposable<KeybindingEditorDecorationsRenderer>(),\n\t);\n\n\tprivate readonly _defineWidget: DefineKeybindingOverlayWidget;\n\n\tconstructor(\n\t\tprivate _editor: ICodeEditor,\n\t\t@IInstantiationService\n\t\tprivate readonly _instantiationService: IInstantiationService,\n\t\t@IUserDataProfileService\n\t\tprivate readonly _userDataProfileService: IUserDataProfileService,\n\t) {\n\t\tsuper();\n\n\t\tthis._defineWidget = this._register(\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\tDefineKeybindingOverlayWidget,\n\t\t\t\tthis._editor,\n\t\t\t),\n\t\t);\n\t\tthis._register(this._editor.onDidChangeModel((e) => this._update()));\n\t\tthis._update();\n\t}\n\n\tprivate _update(): void {\n\t\tthis._keybindingDecorationRenderer.value = isInterestingEditorModel(\n\t\t\tthis._editor,\n\t\t\tthis._userDataProfileService,\n\t\t)\n\t\t\t? // Decorations are shown for the default keybindings.json **and** for the user keybindings.json\n\t\t\t\tthis._instantiationService.createInstance(\n\t\t\t\t\tKeybindingEditorDecorationsRenderer,\n\t\t\t\t\tthis._editor,\n\t\t\t\t)\n\t\t\t: undefined;\n\t}\n\n\tshowDefineKeybindingWidget(): void {\n\t\tif (\n\t\t\tisInterestingEditorModel(this._editor, this._userDataProfileService)\n\t\t) {\n\t\t\tthis._defineWidget\n\t\t\t\t.start()\n\t\t\t\t.then((keybinding) => this._onAccepted(keybinding));\n\t\t}\n\t}\n\n\tprivate _onAccepted(keybinding: string | null): void {\n\t\tthis._editor.focus();\n\t\tif (keybinding && this._editor.hasModel()) {\n\t\t\tconst regexp = new RegExp(/\\\\/g);\n\t\t\tconst backslash = regexp.test(keybinding);\n\t\t\tif (backslash) {\n\t\t\t\tkeybinding = keybinding.slice(0, -1) + \"\\\\\\\\\";\n\t\t\t}\n\t\t\tlet snippetText = [\n\t\t\t\t\"{\",\n\t\t\t\t'\\t\"key\": ' + JSON.stringify(keybinding) + \",\",\n\t\t\t\t'\\t\"command\": \"${1:commandId}\",',\n\t\t\t\t'\\t\"when\": \"${2:editorTextFocus}\"',\n\t\t\t\t\"}$0\",\n\t\t\t].join(\"\\n\");\n\n\t\t\tconst smartInsertInfo = SmartSnippetInserter.insertSnippet(\n\t\t\t\tthis._editor.getModel(),\n\t\t\t\tthis._editor.getPosition(),\n\t\t\t);\n\t\t\tsnippetText =\n\t\t\t\tsmartInsertInfo.prepend + snippetText + smartInsertInfo.append;\n\t\t\tthis._editor.setPosition(smartInsertInfo.position);\n\n\t\t\tSnippetController2.get(this._editor)?.insert(snippetText, {\n\t\t\t\toverwriteBefore: 0,\n\t\t\t\toverwriteAfter: 0,\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport class KeybindingEditorDecorationsRenderer extends Disposable {\n\tprivate _updateDecorations: RunOnceScheduler;\n\tprivate readonly _dec = this._editor.createDecorationsCollection();\n\n\tconstructor(\n\t\tprivate _editor: ICodeEditor,\n\t\t@IKeybindingService\n\t\tprivate readonly _keybindingService: IKeybindingService,\n\t) {\n\t\tsuper();\n\n\t\tthis._updateDecorations = this._register(\n\t\t\tnew RunOnceScheduler(() => this._updateDecorationsNow(), 500),\n\t\t);\n\n\t\tconst model = assertIsDefined(this._editor.getModel());\n\t\tthis._register(\n\t\t\tmodel.onDidChangeContent(() => this._updateDecorations.schedule()),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._keybindingService.onDidUpdateKeybindings(() =>\n\t\t\t\tthis._updateDecorations.schedule(),\n\t\t\t),\n\t\t);\n\t\tthis._register({\n\t\t\tdispose: () => {\n\t\t\t\tthis._dec.clear();\n\t\t\t\tthis._updateDecorations.cancel();\n\t\t\t},\n\t\t});\n\t\tthis._updateDecorations.schedule();\n\t}\n\n\tprivate _updateDecorationsNow(): void {\n\t\tconst model = assertIsDefined(this._editor.getModel());\n\n\t\tconst newDecorations: IModelDeltaDecoration[] = [];\n\n\t\tconst root = parseTree(model.getValue());\n\t\tif (root && Array.isArray(root.children)) {\n\t\t\tfor (let i = 0, len = root.children.length; i < len; i++) {\n\t\t\t\tconst entry = root.children[i];\n\t\t\t\tconst dec = this._getDecorationForEntry(model, entry);\n\t\t\t\tif (dec !== null) {\n\t\t\t\t\tnewDecorations.push(dec);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._dec.set(newDecorations);\n\t}\n\n\tprivate _getDecorationForEntry(\n\t\tmodel: ITextModel,\n\t\tentry: Node,\n\t): IModelDeltaDecoration | null {\n\t\tif (!Array.isArray(entry.children)) {\n\t\t\treturn null;\n\t\t}\n\t\tfor (let i = 0, len = entry.children.length; i < len; i++) {\n\t\t\tconst prop = entry.children[i];\n\t\t\tif (prop.type !== \"property\") {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!Array.isArray(prop.children) || prop.children.length !== 2) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst key = prop.children[0];\n\t\t\tif (key.value !== \"key\") {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst value = prop.children[1];\n\t\t\tif (value.type !== \"string\") {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst resolvedKeybindings =\n\t\t\t\tthis._keybindingService.resolveUserBinding(value.value);\n\t\t\tif (resolvedKeybindings.length === 0) {\n\t\t\t\treturn this._createDecoration(true, null, null, model, value);\n\t\t\t}\n\t\t\tconst resolvedKeybinding = resolvedKeybindings[0];\n\t\t\tlet usLabel: string | null = null;\n\t\t\tif (resolvedKeybinding instanceof WindowsNativeResolvedKeybinding) {\n\t\t\t\tusLabel = resolvedKeybinding.getUSLabel();\n\t\t\t}\n\t\t\tif (!resolvedKeybinding.isWYSIWYG()) {\n\t\t\t\tconst uiLabel = resolvedKeybinding.getLabel();\n\t\t\t\tif (\n\t\t\t\t\ttypeof uiLabel === \"string\" &&\n\t\t\t\t\tvalue.value.toLowerCase() === uiLabel.toLowerCase()\n\t\t\t\t) {\n\t\t\t\t\t// coincidentally, this is actually WYSIWYG\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn this._createDecoration(\n\t\t\t\t\tfalse,\n\t\t\t\t\tresolvedKeybinding.getLabel(),\n\t\t\t\t\tusLabel,\n\t\t\t\t\tmodel,\n\t\t\t\t\tvalue,\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (/abnt_|oem_/.test(value.value)) {\n\t\t\t\treturn this._createDecoration(\n\t\t\t\t\tfalse,\n\t\t\t\t\tresolvedKeybinding.getLabel(),\n\t\t\t\t\tusLabel,\n\t\t\t\t\tmodel,\n\t\t\t\t\tvalue,\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst expectedUserSettingsLabel =\n\t\t\t\tresolvedKeybinding.getUserSettingsLabel();\n\t\t\tif (\n\t\t\t\ttypeof expectedUserSettingsLabel === \"string\" &&\n\t\t\t\t!KeybindingEditorDecorationsRenderer._userSettingsFuzzyEquals(\n\t\t\t\t\tvalue.value,\n\t\t\t\t\texpectedUserSettingsLabel,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\treturn this._createDecoration(\n\t\t\t\t\tfalse,\n\t\t\t\t\tresolvedKeybinding.getLabel(),\n\t\t\t\t\tusLabel,\n\t\t\t\t\tmodel,\n\t\t\t\t\tvalue,\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\treturn null;\n\t}\n\n\tstatic _userSettingsFuzzyEquals(a: string, b: string): boolean {\n\t\ta = a.trim().toLowerCase();\n\t\tb = b.trim().toLowerCase();\n\n\t\tif (a === b) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst aKeybinding = KeybindingParser.parseKeybinding(a);\n\t\tconst bKeybinding = KeybindingParser.parseKeybinding(b);\n\t\tif (aKeybinding === null && bKeybinding === null) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!aKeybinding || !bKeybinding) {\n\t\t\treturn false;\n\t\t}\n\t\treturn aKeybinding.equals(bKeybinding);\n\t}\n\n\tprivate _createDecoration(\n\t\tisError: boolean,\n\t\tuiLabel: string | null,\n\t\tusLabel: string | null,\n\t\tmodel: ITextModel,\n\t\tkeyNode: Node,\n\t): IModelDeltaDecoration {\n\t\tlet msg: MarkdownString;\n\t\tlet className: string;\n\t\tlet overviewRulerColor: ThemeColor;\n\n\t\tif (isError) {\n\t\t\t// this is the error case\n\t\t\tmsg = new MarkdownString().appendText(NLS_KB_LAYOUT_ERROR_MESSAGE);\n\t\t\tclassName = \"keybindingError\";\n\t\t\toverviewRulerColor = themeColorFromId(overviewRulerError);\n\t\t} else {\n\t\t\t// this is the info case\n\t\t\tif (usLabel && uiLabel !== usLabel) {\n\t\t\t\tmsg = new MarkdownString(\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"defineKeybinding.kbLayoutLocalAndUSMessage\",\n\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\"Please translate maintaining the stars (*) around the placeholders such that they will be rendered in bold.\",\n\t\t\t\t\t\t\t\t\"The placeholders will contain a keyboard combination e.g. Ctrl+Shift+/\",\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"**{0}** for your current keyboard layout (**{1}** for US standard).\",\n\t\t\t\t\t\tuiLabel,\n\t\t\t\t\t\tusLabel,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tmsg = new MarkdownString(\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"defineKeybinding.kbLayoutLocalMessage\",\n\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\"Please translate maintaining the stars (*) around the placeholder such that it will be rendered in bold.\",\n\t\t\t\t\t\t\t\t\"The placeholder will contain a keyboard combination e.g. Ctrl+Shift+/\",\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"**{0}** for your current keyboard layout.\",\n\t\t\t\t\t\tuiLabel,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t\tclassName = \"keybindingInfo\";\n\t\t\toverviewRulerColor = themeColorFromId(overviewRulerInfo);\n\t\t}\n\n\t\tconst startPosition = model.getPositionAt(keyNode.offset);\n\t\tconst endPosition = model.getPositionAt(\n\t\t\tkeyNode.offset + keyNode.length,\n\t\t);\n\t\tconst range = new Range(\n\t\t\tstartPosition.lineNumber,\n\t\t\tstartPosition.column,\n\t\t\tendPosition.lineNumber,\n\t\t\tendPosition.column,\n\t\t);\n\n\t\t// icon + highlight + message decoration\n\t\treturn {\n\t\t\trange: range,\n\t\t\toptions: {\n\t\t\t\tdescription: \"keybindings-widget\",\n\t\t\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\t\t\tclassName: className,\n\t\t\t\thoverMessage: msg,\n\t\t\t\toverviewRuler: {\n\t\t\t\t\tcolor: overviewRulerColor,\n\t\t\t\t\tposition: OverviewRulerLane.Right,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n}\n\nfunction isInterestingEditorModel(\n\teditor: ICodeEditor,\n\tuserDataProfileService: IUserDataProfileService,\n): boolean {\n\tconst model = editor.getModel();\n\tif (!model) {\n\t\treturn false;\n\t}\n\treturn isEqual(\n\t\tmodel.uri,\n\t\tuserDataProfileService.currentProfile.keybindingsResource,\n\t);\n}\n\nregisterEditorContribution(\n\tDEFINE_KEYBINDING_EDITOR_CONTRIB_ID,\n\tDefineKeybindingEditorContribution,\n\tEditorContributionInstantiation.AfterFirstRender,\n);\n"],
  "mappings": "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",
  "names": []
}
