{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/preferences/browser/preferences.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyChord, KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { Disposable, DisposableStore, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { isBoolean, isObject, isString } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport './media/preferences.css';\nimport { EditorContributionInstantiation, registerEditorContribution } from '../../../../editor/browser/editorExtensions.js';\nimport { Context as SuggestContext } from '../../../../editor/contrib/suggest/browser/suggest.js';\nimport * as nls from '../../../../nls.js';\nimport { Action2, MenuId, MenuRegistry, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { InputFocusedContext, IsMacNativeContext } from '../../../../platform/contextkey/common/contextkeys.js';\nimport { SyncDescriptor } from '../../../../platform/instantiation/common/descriptors.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingsRegistry, KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { IWorkspaceContextService, IWorkspaceFolder, WorkbenchState } from '../../../../platform/workspace/common/workspace.js';\nimport { PICK_WORKSPACE_FOLDER_COMMAND_ID } from '../../../browser/actions/workspaceCommands.js';\nimport { EditorPaneDescriptor, IEditorPaneRegistry } from '../../../browser/editor.js';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContribution, IWorkbenchContributionsRegistry, WorkbenchPhase, registerWorkbenchContribution2 } from '../../../common/contributions.js';\nimport { EditorExtensions, IEditorFactoryRegistry, IEditorSerializer } from '../../../common/editor.js';\nimport { EditorInput } from '../../../common/editor/editorInput.js';\nimport { ResourceContextKey, RemoteNameContext, WorkbenchStateContext } from '../../../common/contextkeys.js';\nimport { ExplorerFolderContext, ExplorerRootContext } from '../../files/common/files.js';\nimport { KeybindingsEditor } from './keybindingsEditor.js';\nimport { ConfigureLanguageBasedSettingsAction } from './preferencesActions.js';\nimport { SettingsEditorContribution } from './preferencesEditor.js';\nimport { preferencesOpenSettingsIcon } from './preferencesIcons.js';\nimport { SettingsEditor2, SettingsFocusContext } from './settingsEditor2.js';\nimport { CONTEXT_KEYBINDINGS_EDITOR, CONTEXT_KEYBINDINGS_SEARCH_FOCUS, CONTEXT_KEYBINDING_FOCUS, CONTEXT_SETTINGS_EDITOR, CONTEXT_SETTINGS_JSON_EDITOR, CONTEXT_SETTINGS_ROW_FOCUS, CONTEXT_SETTINGS_SEARCH_FOCUS, CONTEXT_TOC_ROW_FOCUS, CONTEXT_WHEN_FOCUS, KEYBINDINGS_EDITOR_COMMAND_ACCEPT_WHEN, KEYBINDINGS_EDITOR_COMMAND_ADD, KEYBINDINGS_EDITOR_COMMAND_CLEAR_SEARCH_HISTORY, KEYBINDINGS_EDITOR_COMMAND_CLEAR_SEARCH_RESULTS, KEYBINDINGS_EDITOR_COMMAND_COPY, KEYBINDINGS_EDITOR_COMMAND_COPY_COMMAND, KEYBINDINGS_EDITOR_COMMAND_COPY_COMMAND_TITLE, KEYBINDINGS_EDITOR_COMMAND_DEFINE, KEYBINDINGS_EDITOR_COMMAND_DEFINE_WHEN, KEYBINDINGS_EDITOR_COMMAND_FOCUS_KEYBINDINGS, KEYBINDINGS_EDITOR_COMMAND_RECORD_SEARCH_KEYS, KEYBINDINGS_EDITOR_COMMAND_REJECT_WHEN, KEYBINDINGS_EDITOR_COMMAND_REMOVE, KEYBINDINGS_EDITOR_COMMAND_RESET, KEYBINDINGS_EDITOR_COMMAND_SEARCH, KEYBINDINGS_EDITOR_COMMAND_SHOW_SIMILAR, KEYBINDINGS_EDITOR_COMMAND_SORTBY_PRECEDENCE, KEYBINDINGS_EDITOR_SHOW_DEFAULT_KEYBINDINGS, KEYBINDINGS_EDITOR_SHOW_EXTENSION_KEYBINDINGS, KEYBINDINGS_EDITOR_SHOW_USER_KEYBINDINGS, REQUIRE_TRUSTED_WORKSPACE_SETTING_TAG, SETTINGS_EDITOR_COMMAND_CLEAR_SEARCH_RESULTS, SETTINGS_EDITOR_COMMAND_SHOW_CONTEXT_MENU } from '../common/preferences.js';\nimport { PreferencesContribution } from '../common/preferencesContribution.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IWorkbenchEnvironmentService } from '../../../services/environment/common/environmentService.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { LifecyclePhase } from '../../../services/lifecycle/common/lifecycle.js';\nimport { KeybindingsEditorInput } from '../../../services/preferences/browser/keybindingsEditorInput.js';\nimport { DEFINE_KEYBINDING_EDITOR_CONTRIB_ID, IDefineKeybindingEditorContribution, IPreferencesService } from '../../../services/preferences/common/preferences.js';\nimport { SettingsEditor2Input } from '../../../services/preferences/common/preferencesEditorInput.js';\nimport { IUserDataProfileService, CURRENT_PROFILE_CONTEXT } from '../../../services/userDataProfile/common/userDataProfile.js';\nimport { IUserDataProfilesService } from '../../../../platform/userDataProfile/common/userDataProfile.js';\nimport { isCodeEditor } from '../../../../editor/browser/editorBrowser.js';\nimport { Categories } from '../../../../platform/action/common/actionCommonCategories.js';\n\nconst SETTINGS_EDITOR_COMMAND_SEARCH = 'settings.action.search';\n\nconst SETTINGS_EDITOR_COMMAND_FOCUS_FILE = 'settings.action.focusSettingsFile';\nconst SETTINGS_EDITOR_COMMAND_FOCUS_SETTINGS_FROM_SEARCH = 'settings.action.focusSettingsFromSearch';\nconst SETTINGS_EDITOR_COMMAND_FOCUS_SETTINGS_LIST = 'settings.action.focusSettingsList';\nconst SETTINGS_EDITOR_COMMAND_FOCUS_TOC = 'settings.action.focusTOC';\nconst SETTINGS_EDITOR_COMMAND_FOCUS_CONTROL = 'settings.action.focusSettingControl';\nconst SETTINGS_EDITOR_COMMAND_FOCUS_UP = 'settings.action.focusLevelUp';\n\nconst SETTINGS_EDITOR_COMMAND_SWITCH_TO_JSON = 'settings.switchToJSON';\nconst SETTINGS_EDITOR_COMMAND_FILTER_ONLINE = 'settings.filterByOnline';\nconst SETTINGS_EDITOR_COMMAND_FILTER_UNTRUSTED = 'settings.filterUntrusted';\n\nconst SETTINGS_COMMAND_OPEN_SETTINGS = 'workbench.action.openSettings';\nconst SETTINGS_COMMAND_FILTER_TELEMETRY = 'settings.filterByTelemetry';\n\nRegistry.as<IEditorPaneRegistry>(EditorExtensions.EditorPane).registerEditorPane(\n\tEditorPaneDescriptor.create(\n\t\tSettingsEditor2,\n\t\tSettingsEditor2.ID,\n\t\tnls.localize('settingsEditor2', \"Settings Editor 2\")\n\t),\n\t[\n\t\tnew SyncDescriptor(SettingsEditor2Input)\n\t]\n);\n\nRegistry.as<IEditorPaneRegistry>(EditorExtensions.EditorPane).registerEditorPane(\n\tEditorPaneDescriptor.create(\n\t\tKeybindingsEditor,\n\t\tKeybindingsEditor.ID,\n\t\tnls.localize('keybindingsEditor', \"Keybindings Editor\")\n\t),\n\t[\n\t\tnew SyncDescriptor(KeybindingsEditorInput)\n\t]\n);\n\nclass KeybindingsEditorInputSerializer implements IEditorSerializer {\n\n\tcanSerialize(editorInput: EditorInput): boolean {\n\t\treturn true;\n\t}\n\n\tserialize(editorInput: EditorInput): string {\n\t\treturn '';\n\t}\n\n\tdeserialize(instantiationService: IInstantiationService): EditorInput {\n\t\treturn instantiationService.createInstance(KeybindingsEditorInput);\n\t}\n}\n\nclass SettingsEditor2InputSerializer implements IEditorSerializer {\n\n\tcanSerialize(editorInput: EditorInput): boolean {\n\t\treturn true;\n\t}\n\n\tserialize(input: SettingsEditor2Input): string {\n\t\treturn '';\n\t}\n\n\tdeserialize(instantiationService: IInstantiationService): SettingsEditor2Input {\n\t\treturn instantiationService.createInstance(SettingsEditor2Input);\n\t}\n}\n\nRegistry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory).registerEditorSerializer(KeybindingsEditorInput.ID, KeybindingsEditorInputSerializer);\nRegistry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory).registerEditorSerializer(SettingsEditor2Input.ID, SettingsEditor2InputSerializer);\n\nconst OPEN_USER_SETTINGS_UI_TITLE = nls.localize2('openSettings2', \"Open Settings (UI)\");\nconst OPEN_USER_SETTINGS_JSON_TITLE = nls.localize2('openUserSettingsJson', \"Open User Settings (JSON)\");\nconst OPEN_APPLICATION_SETTINGS_JSON_TITLE = nls.localize2('openApplicationSettingsJson', \"Open Application Settings (JSON)\");\nconst category = Categories.Preferences;\n\ninterface IOpenSettingsActionOptions {\n\topenToSide?: boolean;\n\tquery?: string;\n\trevealSetting?: {\n\t\tkey: string;\n\t\tedit?: boolean;\n\t};\n\tfocusSearch?: boolean;\n}\n\nfunction sanitizeBoolean(arg: any): boolean | undefined {\n\treturn isBoolean(arg) ? arg : undefined;\n}\n\nfunction sanitizeString(arg: any): string | undefined {\n\treturn isString(arg) ? arg : undefined;\n}\n\nfunction sanitizeOpenSettingsArgs(args: any): IOpenSettingsActionOptions {\n\tif (!isObject(args)) {\n\t\targs = {};\n\t}\n\n\tlet sanitizedObject: IOpenSettingsActionOptions = {\n\t\tfocusSearch: sanitizeBoolean(args?.focusSearch),\n\t\topenToSide: sanitizeBoolean(args?.openToSide),\n\t\tquery: sanitizeString(args?.query)\n\t};\n\n\tif (isString(args?.revealSetting?.key)) {\n\t\tsanitizedObject = {\n\t\t\t...sanitizedObject,\n\t\t\trevealSetting: {\n\t\t\t\tkey: args.revealSetting.key,\n\t\t\t\tedit: sanitizeBoolean(args.revealSetting?.edit)\n\t\t\t}\n\t\t};\n\t}\n\n\treturn sanitizedObject;\n}\n\nclass PreferencesActionsContribution extends Disposable implements IWorkbenchContribution {\n\n\tstatic readonly ID = 'workbench.contrib.preferencesActions';\n\n\tconstructor(\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IPreferencesService private readonly preferencesService: IPreferencesService,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t) {\n\t\tsuper();\n\n\t\tthis.registerSettingsActions();\n\t\tthis.registerKeybindingsActions();\n\n\t\tthis.updatePreferencesEditorMenuItem();\n\t\tthis._register(workspaceContextService.onDidChangeWorkbenchState(() => this.updatePreferencesEditorMenuItem()));\n\t\tthis._register(workspaceContextService.onDidChangeWorkspaceFolders(() => this.updatePreferencesEditorMenuItemForWorkspaceFolders()));\n\t}\n\n\tprivate registerSettingsActions() {\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: SETTINGS_COMMAND_OPEN_SETTINGS,\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\t...nls.localize2('settings', \"Settings\"),\n\t\t\t\t\t\tmnemonicTitle: nls.localize({ key: 'miOpenSettings', comment: ['&& denotes a mnemonic'] }, \"&&Settings\"),\n\t\t\t\t\t},\n\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\twhen: null,\n\t\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Comma,\n\t\t\t\t\t},\n\t\t\t\t\tmenu: [{\n\t\t\t\t\t\tid: MenuId.GlobalActivity,\n\t\t\t\t\t\tgroup: '2_configuration',\n\t\t\t\t\t\torder: 2\n\t\t\t\t\t}, {\n\t\t\t\t\t\tid: MenuId.MenubarPreferencesMenu,\n\t\t\t\t\t\tgroup: '2_configuration',\n\t\t\t\t\t\torder: 2\n\t\t\t\t\t}],\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor, args: string | IOpenSettingsActionOptions) {\n\t\t\t\t// args takes a string for backcompat\n\t\t\t\tconst opts = typeof args === 'string' ? { query: args } : sanitizeOpenSettingsArgs(args);\n\t\t\t\treturn accessor.get(IPreferencesService).openSettings(opts);\n\t\t\t}\n\t\t}));\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.action.openSettings2',\n\t\t\t\t\ttitle: nls.localize2('openSettings2', \"Open Settings (UI)\"),\n\t\t\t\t\tcategory,\n\t\t\t\t\tf1: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor, args: IOpenSettingsActionOptions) {\n\t\t\t\targs = sanitizeOpenSettingsArgs(args);\n\t\t\t\treturn accessor.get(IPreferencesService).openSettings({ jsonEditor: false, ...args });\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.action.openSettingsJson',\n\t\t\t\t\ttitle: OPEN_USER_SETTINGS_JSON_TITLE,\n\t\t\t\t\tmetadata: {\n\t\t\t\t\t\tdescription: nls.localize2('workbench.action.openSettingsJson.description', \"Opens the JSON file containing the current user profile settings\")\n\t\t\t\t\t},\n\t\t\t\t\tcategory,\n\t\t\t\t\tf1: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor, args: IOpenSettingsActionOptions) {\n\t\t\t\targs = sanitizeOpenSettingsArgs(args);\n\t\t\t\treturn accessor.get(IPreferencesService).openSettings({ jsonEditor: true, ...args });\n\t\t\t}\n\t\t}));\n\n\t\tconst that = this;\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.action.openApplicationSettingsJson',\n\t\t\t\t\ttitle: OPEN_APPLICATION_SETTINGS_JSON_TITLE,\n\t\t\t\t\tcategory,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t\twhen: ContextKeyExpr.notEquals(CURRENT_PROFILE_CONTEXT.key, that.userDataProfilesService.defaultProfile.id)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor, args: IOpenSettingsActionOptions) {\n\t\t\t\targs = sanitizeOpenSettingsArgs(args);\n\t\t\t\treturn accessor.get(IPreferencesService).openApplicationSettings({ jsonEditor: true, ...args });\n\t\t\t}\n\t\t}));\n\n\t\t// Opens the User tab of the Settings editor\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.action.openGlobalSettings',\n\t\t\t\t\ttitle: nls.localize2('openGlobalSettings', \"Open User Settings\"),\n\t\t\t\t\tcategory,\n\t\t\t\t\tf1: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor, args: IOpenSettingsActionOptions) {\n\t\t\t\targs = sanitizeOpenSettingsArgs(args);\n\t\t\t\treturn accessor.get(IPreferencesService).openUserSettings(args);\n\t\t\t}\n\t\t}));\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.action.openRawDefaultSettings',\n\t\t\t\t\ttitle: nls.localize2('openRawDefaultSettings', \"Open Default Settings (JSON)\"),\n\t\t\t\t\tcategory,\n\t\t\t\t\tf1: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor) {\n\t\t\t\treturn accessor.get(IPreferencesService).openRawDefaultSettings();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: ConfigureLanguageBasedSettingsAction.ID,\n\t\t\t\t\ttitle: ConfigureLanguageBasedSettingsAction.LABEL,\n\t\t\t\t\tcategory,\n\t\t\t\t\tf1: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor) {\n\t\t\t\treturn accessor.get(IInstantiationService).createInstance(ConfigureLanguageBasedSettingsAction, ConfigureLanguageBasedSettingsAction.ID, ConfigureLanguageBasedSettingsAction.LABEL.value).run();\n\t\t\t}\n\t\t}));\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.action.openWorkspaceSettings',\n\t\t\t\t\ttitle: nls.localize2('openWorkspaceSettings', \"Open Workspace Settings\"),\n\t\t\t\t\tcategory,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t\twhen: WorkbenchStateContext.notEqualsTo('empty')\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor, args?: string | IOpenSettingsActionOptions) {\n\t\t\t\t// Match the behaviour of workbench.action.openSettings\n\t\t\t\targs = typeof args === 'string' ? { query: args } : sanitizeOpenSettingsArgs(args);\n\t\t\t\treturn accessor.get(IPreferencesService).openWorkspaceSettings(args);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.action.openAccessibilitySettings',\n\t\t\t\t\ttitle: nls.localize2('openAccessibilitySettings', \"Open Accessibility Settings\"),\n\t\t\t\t\tcategory,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t\twhen: WorkbenchStateContext.notEqualsTo('empty')\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor) {\n\t\t\t\tawait accessor.get(IPreferencesService).openSettings({ jsonEditor: false, query: '@tag:accessibility' });\n\t\t\t}\n\t\t}));\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.action.openWorkspaceSettingsFile',\n\t\t\t\t\ttitle: nls.localize2('openWorkspaceSettingsFile', \"Open Workspace Settings (JSON)\"),\n\t\t\t\t\tcategory,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t\twhen: WorkbenchStateContext.notEqualsTo('empty')\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor, args?: IOpenSettingsActionOptions) {\n\t\t\t\targs = sanitizeOpenSettingsArgs(args);\n\t\t\t\treturn accessor.get(IPreferencesService).openWorkspaceSettings({ jsonEditor: true, ...args });\n\t\t\t}\n\t\t}));\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.action.openFolderSettings',\n\t\t\t\t\ttitle: nls.localize2('openFolderSettings', \"Open Folder Settings\"),\n\t\t\t\t\tcategory,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t\twhen: WorkbenchStateContext.isEqualTo('workspace')\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor, args?: IOpenSettingsActionOptions) {\n\t\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\t\tconst preferencesService = accessor.get(IPreferencesService);\n\t\t\t\tconst workspaceFolder = await commandService.executeCommand<IWorkspaceFolder>(PICK_WORKSPACE_FOLDER_COMMAND_ID);\n\t\t\t\tif (workspaceFolder) {\n\t\t\t\t\targs = sanitizeOpenSettingsArgs(args);\n\t\t\t\t\tawait preferencesService.openFolderSettings({ folderUri: workspaceFolder.uri, ...args });\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.action.openFolderSettingsFile',\n\t\t\t\t\ttitle: nls.localize2('openFolderSettingsFile', \"Open Folder Settings (JSON)\"),\n\t\t\t\t\tcategory,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t\twhen: WorkbenchStateContext.isEqualTo('workspace')\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor, args?: IOpenSettingsActionOptions) {\n\t\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\t\tconst preferencesService = accessor.get(IPreferencesService);\n\t\t\t\tconst workspaceFolder = await commandService.executeCommand<IWorkspaceFolder>(PICK_WORKSPACE_FOLDER_COMMAND_ID);\n\t\t\t\tif (workspaceFolder) {\n\t\t\t\t\targs = sanitizeOpenSettingsArgs(args);\n\t\t\t\t\tawait preferencesService.openFolderSettings({ folderUri: workspaceFolder.uri, jsonEditor: true, ...args });\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: '_workbench.action.openFolderSettings',\n\t\t\t\t\ttitle: nls.localize('openFolderSettings', \"Open Folder Settings\"),\n\t\t\t\t\tcategory,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.ExplorerContext,\n\t\t\t\t\t\tgroup: '2_workspace',\n\t\t\t\t\t\torder: 20,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(ExplorerRootContext, ExplorerFolderContext)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor, resource?: URI) {\n\t\t\t\tif (URI.isUri(resource)) {\n\t\t\t\t\tawait accessor.get(IPreferencesService).openFolderSettings({ folderUri: resource });\n\t\t\t\t} else {\n\t\t\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\t\t\tconst preferencesService = accessor.get(IPreferencesService);\n\t\t\t\t\tconst workspaceFolder = await commandService.executeCommand<IWorkspaceFolder>(PICK_WORKSPACE_FOLDER_COMMAND_ID);\n\t\t\t\t\tif (workspaceFolder) {\n\t\t\t\t\t\tawait preferencesService.openFolderSettings({ folderUri: workspaceFolder.uri });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: SETTINGS_EDITOR_COMMAND_FILTER_ONLINE,\n\t\t\t\t\ttitle: nls.localize({ key: 'miOpenOnlineSettings', comment: ['&& denotes a mnemonic'] }, \"&&Online Services Settings\"),\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.MenubarPreferencesMenu,\n\t\t\t\t\t\tgroup: '3_settings',\n\t\t\t\t\t\torder: 1,\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor) {\n\t\t\t\tconst editorPane = accessor.get(IEditorService).activeEditorPane;\n\t\t\t\tif (editorPane instanceof SettingsEditor2) {\n\t\t\t\t\teditorPane.focusSearch(`@tag:usesOnlineServices`);\n\t\t\t\t} else {\n\t\t\t\t\taccessor.get(IPreferencesService).openSettings({ jsonEditor: false, query: '@tag:usesOnlineServices' });\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: SETTINGS_EDITOR_COMMAND_FILTER_UNTRUSTED,\n\t\t\t\t\ttitle: nls.localize2('filterUntrusted', \"Show untrusted workspace settings\"),\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor) {\n\t\t\t\taccessor.get(IPreferencesService).openWorkspaceSettings({ jsonEditor: false, query: `@tag:${REQUIRE_TRUSTED_WORKSPACE_SETTING_TAG}` });\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: SETTINGS_COMMAND_FILTER_TELEMETRY,\n\t\t\t\t\ttitle: nls.localize({ key: 'miOpenTelemetrySettings', comment: ['&& denotes a mnemonic'] }, \"&&Telemetry Settings\")\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor) {\n\t\t\t\tconst editorPane = accessor.get(IEditorService).activeEditorPane;\n\t\t\t\tif (editorPane instanceof SettingsEditor2) {\n\t\t\t\t\teditorPane.focusSearch(`@tag:telemetry`);\n\t\t\t\t} else {\n\t\t\t\t\taccessor.get(IPreferencesService).openSettings({ jsonEditor: false, query: '@tag:telemetry' });\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis.registerSettingsEditorActions();\n\n\t\tthis.extensionService.whenInstalledExtensionsRegistered()\n\t\t\t.then(() => {\n\t\t\t\tconst remoteAuthority = this.environmentService.remoteAuthority;\n\t\t\t\tconst hostLabel = this.labelService.getHostLabel(Schemas.vscodeRemote, remoteAuthority) || remoteAuthority;\n\t\t\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: 'workbench.action.openRemoteSettings',\n\t\t\t\t\t\t\ttitle: nls.localize2('openRemoteSettings', \"Open Remote Settings ({0})\", hostLabel),\n\t\t\t\t\t\t\tcategory,\n\t\t\t\t\t\t\tmenu: {\n\t\t\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t\t\t\twhen: RemoteNameContext.notEqualsTo('')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\trun(accessor: ServicesAccessor, args?: IOpenSettingsActionOptions) {\n\t\t\t\t\t\targs = sanitizeOpenSettingsArgs(args);\n\t\t\t\t\t\treturn accessor.get(IPreferencesService).openRemoteSettings(args);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: 'workbench.action.openRemoteSettingsFile',\n\t\t\t\t\t\t\ttitle: nls.localize2('openRemoteSettingsJSON', \"Open Remote Settings (JSON) ({0})\", hostLabel),\n\t\t\t\t\t\t\tcategory,\n\t\t\t\t\t\t\tmenu: {\n\t\t\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t\t\t\twhen: RemoteNameContext.notEqualsTo('')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\trun(accessor: ServicesAccessor, args?: IOpenSettingsActionOptions) {\n\t\t\t\t\t\targs = sanitizeOpenSettingsArgs(args);\n\t\t\t\t\t\treturn accessor.get(IPreferencesService).openRemoteSettings({ jsonEditor: true, ...args });\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t});\n\t}\n\n\tprivate registerSettingsEditorActions() {\n\t\tfunction getPreferencesEditor(accessor: ServicesAccessor): SettingsEditor2 | null {\n\t\t\tconst activeEditorPane = accessor.get(IEditorService).activeEditorPane;\n\t\t\tif (activeEditorPane instanceof SettingsEditor2) {\n\t\t\t\treturn activeEditorPane;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tfunction settingsEditorFocusSearch(accessor: ServicesAccessor) {\n\t\t\tconst preferencesEditor = getPreferencesEditor(accessor);\n\t\t\tpreferencesEditor?.focusSearch();\n\t\t}\n\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: SETTINGS_EDITOR_COMMAND_SEARCH,\n\t\t\t\t\tprecondition: CONTEXT_SETTINGS_EDITOR,\n\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyF,\n\t\t\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\t\t\twhen: null\n\t\t\t\t\t},\n\t\t\t\t\tcategory,\n\t\t\t\t\tf1: true,\n\t\t\t\t\ttitle: nls.localize2('settings.focusSearch', \"Focus Settings Search\")\n\t\t\t\t});\n\t\t\t}\n\n\t\t\trun(accessor: ServicesAccessor) { settingsEditorFocusSearch(accessor); }\n\t\t}));\n\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: SETTINGS_EDITOR_COMMAND_CLEAR_SEARCH_RESULTS,\n\t\t\t\t\tprecondition: CONTEXT_SETTINGS_EDITOR,\n\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\t\t\twhen: CONTEXT_SETTINGS_SEARCH_FOCUS\n\t\t\t\t\t},\n\t\t\t\t\tcategory,\n\t\t\t\t\tf1: true,\n\t\t\t\t\ttitle: nls.localize2('settings.clearResults', \"Clear Settings Search Results\")\n\t\t\t\t});\n\t\t\t}\n\n\t\t\trun(accessor: ServicesAccessor) {\n\t\t\t\tconst preferencesEditor = getPreferencesEditor(accessor);\n\t\t\t\tpreferencesEditor?.clearSearchResults();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: SETTINGS_EDITOR_COMMAND_FOCUS_FILE,\n\t\t\t\t\tprecondition: ContextKeyExpr.and(CONTEXT_SETTINGS_SEARCH_FOCUS, SuggestContext.Visible.toNegated()),\n\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\tprimary: KeyCode.DownArrow,\n\t\t\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\t\t\twhen: null\n\t\t\t\t\t},\n\t\t\t\t\ttitle: nls.localize('settings.focusFile', \"Focus settings file\")\n\t\t\t\t});\n\t\t\t}\n\n\t\t\trun(accessor: ServicesAccessor, args: any): void {\n\t\t\t\tconst preferencesEditor = getPreferencesEditor(accessor);\n\t\t\t\tpreferencesEditor?.focusSettings();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: SETTINGS_EDITOR_COMMAND_FOCUS_SETTINGS_FROM_SEARCH,\n\t\t\t\t\tprecondition: ContextKeyExpr.and(CONTEXT_SETTINGS_SEARCH_FOCUS, SuggestContext.Visible.toNegated()),\n\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\tprimary: KeyCode.DownArrow,\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\twhen: null\n\t\t\t\t\t},\n\t\t\t\t\ttitle: nls.localize('settings.focusFile', \"Focus settings file\")\n\t\t\t\t});\n\t\t\t}\n\n\t\t\trun(accessor: ServicesAccessor, args: any): void {\n\t\t\t\tconst preferencesEditor = getPreferencesEditor(accessor);\n\t\t\t\tpreferencesEditor?.focusSettings();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: SETTINGS_EDITOR_COMMAND_FOCUS_SETTINGS_LIST,\n\t\t\t\t\tprecondition: ContextKeyExpr.and(CONTEXT_SETTINGS_EDITOR, CONTEXT_TOC_ROW_FOCUS),\n\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\tprimary: KeyCode.Enter,\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\twhen: null\n\t\t\t\t\t},\n\t\t\t\t\ttitle: nls.localize('settings.focusSettingsList', \"Focus settings list\")\n\t\t\t\t});\n\t\t\t}\n\n\t\t\trun(accessor: ServicesAccessor): void {\n\t\t\t\tconst preferencesEditor = getPreferencesEditor(accessor);\n\t\t\t\tif (preferencesEditor instanceof SettingsEditor2) {\n\t\t\t\t\tpreferencesEditor.focusSettings();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: SETTINGS_EDITOR_COMMAND_FOCUS_TOC,\n\t\t\t\t\tprecondition: CONTEXT_SETTINGS_EDITOR,\n\t\t\t\t\tf1: true,\n\t\t\t\t\tkeybinding: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprimary: KeyCode.LeftArrow,\n\t\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\t\twhen: CONTEXT_SETTINGS_ROW_FOCUS\n\t\t\t\t\t\t}],\n\t\t\t\t\tcategory,\n\t\t\t\t\ttitle: nls.localize2('settings.focusSettingsTOC', \"Focus Settings Table of Contents\")\n\t\t\t\t});\n\t\t\t}\n\n\t\t\trun(accessor: ServicesAccessor): void {\n\t\t\t\tconst preferencesEditor = getPreferencesEditor(accessor);\n\t\t\t\tif (!(preferencesEditor instanceof SettingsEditor2)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tpreferencesEditor.focusTOC();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: SETTINGS_EDITOR_COMMAND_FOCUS_CONTROL,\n\t\t\t\t\tprecondition: ContextKeyExpr.and(CONTEXT_SETTINGS_EDITOR, CONTEXT_SETTINGS_ROW_FOCUS),\n\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\tprimary: KeyCode.Enter,\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t},\n\t\t\t\t\ttitle: nls.localize('settings.focusSettingControl', \"Focus Setting Control\")\n\t\t\t\t});\n\t\t\t}\n\n\t\t\trun(accessor: ServicesAccessor): void {\n\t\t\t\tconst preferencesEditor = getPreferencesEditor(accessor);\n\t\t\t\tif (!(preferencesEditor instanceof SettingsEditor2)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst activeElement = preferencesEditor.getContainer()?.ownerDocument.activeElement;\n\t\t\t\tif (activeElement?.classList.contains('monaco-list')) {\n\t\t\t\t\tpreferencesEditor.focusSettings(true);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: SETTINGS_EDITOR_COMMAND_SHOW_CONTEXT_MENU,\n\t\t\t\t\tprecondition: CONTEXT_SETTINGS_EDITOR,\n\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\tprimary: KeyMod.Shift | KeyCode.F9,\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\twhen: null\n\t\t\t\t\t},\n\t\t\t\t\tf1: true,\n\t\t\t\t\tcategory,\n\t\t\t\t\ttitle: nls.localize2('settings.showContextMenu', \"Show Setting Context Menu\")\n\t\t\t\t});\n\t\t\t}\n\n\t\t\trun(accessor: ServicesAccessor): void {\n\t\t\t\tconst preferencesEditor = getPreferencesEditor(accessor);\n\t\t\t\tif (preferencesEditor instanceof SettingsEditor2) {\n\t\t\t\t\tpreferencesEditor.showContextMenu();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: SETTINGS_EDITOR_COMMAND_FOCUS_UP,\n\t\t\t\t\tprecondition: ContextKeyExpr.and(CONTEXT_SETTINGS_EDITOR, CONTEXT_SETTINGS_SEARCH_FOCUS.toNegated(), CONTEXT_SETTINGS_JSON_EDITOR.toNegated()),\n\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\twhen: null\n\t\t\t\t\t},\n\t\t\t\t\tf1: true,\n\t\t\t\t\tcategory,\n\t\t\t\t\ttitle: nls.localize2('settings.focusLevelUp', \"Move Focus Up One Level\")\n\t\t\t\t});\n\t\t\t}\n\n\t\t\trun(accessor: ServicesAccessor): void {\n\t\t\t\tconst preferencesEditor = getPreferencesEditor(accessor);\n\t\t\t\tif (!(preferencesEditor instanceof SettingsEditor2)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (preferencesEditor.currentFocusContext === SettingsFocusContext.SettingControl) {\n\t\t\t\t\tpreferencesEditor.focusSettings();\n\t\t\t\t} else if (preferencesEditor.currentFocusContext === SettingsFocusContext.SettingTree) {\n\t\t\t\t\tpreferencesEditor.focusTOC();\n\t\t\t\t} else if (preferencesEditor.currentFocusContext === SettingsFocusContext.TableOfContents) {\n\t\t\t\t\tpreferencesEditor.focusSearch();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerKeybindingsActions() {\n\t\tconst that = this;\n\t\tconst category = nls.localize2('preferences', \"Preferences\");\n\t\tconst id = 'workbench.action.openGlobalKeybindings';\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid,\n\t\t\t\t\ttitle: nls.localize2('openGlobalKeybindings', \"Open Keyboard Shortcuts\"),\n\t\t\t\t\tshortTitle: nls.localize('keyboardShortcuts', \"Keyboard Shortcuts\"),\n\t\t\t\t\tcategory,\n\t\t\t\t\ticon: preferencesOpenSettingsIcon,\n\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\twhen: null,\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyS)\n\t\t\t\t\t},\n\t\t\t\t\tmenu: [\n\t\t\t\t\t\t{ id: MenuId.CommandPalette },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\t\t\twhen: ResourceContextKey.Resource.isEqualTo(that.userDataProfileService.currentProfile.keybindingsResource.toString()),\n\t\t\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\t\t\torder: 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: MenuId.GlobalActivity,\n\t\t\t\t\t\t\tgroup: '2_configuration',\n\t\t\t\t\t\t\torder: 4\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor, args: string | undefined) {\n\t\t\t\tconst query = typeof args === 'string' ? args : undefined;\n\t\t\t\treturn accessor.get(IPreferencesService).openGlobalKeybindingSettings(false, { query });\n\t\t\t}\n\t\t}));\n\t\tthis._register(MenuRegistry.appendMenuItem(MenuId.MenubarPreferencesMenu, {\n\t\t\tcommand: {\n\t\t\t\tid,\n\t\t\t\ttitle: nls.localize('keyboardShortcuts', \"Keyboard Shortcuts\"),\n\t\t\t},\n\t\t\tgroup: '2_configuration',\n\t\t\torder: 4\n\t\t}));\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.action.openDefaultKeybindingsFile',\n\t\t\t\t\ttitle: nls.localize2('openDefaultKeybindingsFile', \"Open Default Keyboard Shortcuts (JSON)\"),\n\t\t\t\t\tcategory,\n\t\t\t\t\tmenu: { id: MenuId.CommandPalette }\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor) {\n\t\t\t\treturn accessor.get(IPreferencesService).openDefaultKeybindingsFile();\n\t\t\t}\n\t\t}));\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.action.openGlobalKeybindingsFile',\n\t\t\t\t\ttitle: nls.localize2('openGlobalKeybindingsFile', \"Open Keyboard Shortcuts (JSON)\"),\n\t\t\t\t\tcategory,\n\t\t\t\t\ticon: preferencesOpenSettingsIcon,\n\t\t\t\t\tmenu: [\n\t\t\t\t\t\t{ id: MenuId.CommandPalette },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_KEYBINDINGS_EDITOR),\n\t\t\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor) {\n\t\t\t\treturn accessor.get(IPreferencesService).openGlobalKeybindingSettings(true);\n\t\t\t}\n\t\t}));\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: KEYBINDINGS_EDITOR_SHOW_DEFAULT_KEYBINDINGS,\n\t\t\t\t\ttitle: nls.localize2('showDefaultKeybindings', \"Show System Keybindings\"),\n\t\t\t\t\tmenu: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_KEYBINDINGS_EDITOR),\n\t\t\t\t\t\t\tgroup: '1_keyboard_preferences_actions'\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor) {\n\t\t\t\tconst editorPane = accessor.get(IEditorService).activeEditorPane;\n\t\t\t\tif (editorPane instanceof KeybindingsEditor) {\n\t\t\t\t\teditorPane.search('@source:system');\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: KEYBINDINGS_EDITOR_SHOW_EXTENSION_KEYBINDINGS,\n\t\t\t\t\ttitle: nls.localize2('showExtensionKeybindings', \"Show Extension Keybindings\"),\n\t\t\t\t\tmenu: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_KEYBINDINGS_EDITOR),\n\t\t\t\t\t\t\tgroup: '1_keyboard_preferences_actions'\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor) {\n\t\t\t\tconst editorPane = accessor.get(IEditorService).activeEditorPane;\n\t\t\t\tif (editorPane instanceof KeybindingsEditor) {\n\t\t\t\t\teditorPane.search('@source:extension');\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: KEYBINDINGS_EDITOR_SHOW_USER_KEYBINDINGS,\n\t\t\t\t\ttitle: nls.localize2('showUserKeybindings', \"Show User Keybindings\"),\n\t\t\t\t\tmenu: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_KEYBINDINGS_EDITOR),\n\t\t\t\t\t\t\tgroup: '1_keyboard_preferences_actions'\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor) {\n\t\t\t\tconst editorPane = accessor.get(IEditorService).activeEditorPane;\n\t\t\t\tif (editorPane instanceof KeybindingsEditor) {\n\t\t\t\t\teditorPane.search('@source:user');\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: KEYBINDINGS_EDITOR_COMMAND_CLEAR_SEARCH_RESULTS,\n\t\t\t\t\ttitle: nls.localize('clear', \"Clear Search Results\"),\n\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_KEYBINDINGS_EDITOR, CONTEXT_KEYBINDINGS_SEARCH_FOCUS),\n\t\t\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor) {\n\t\t\t\tconst editorPane = accessor.get(IEditorService).activeEditorPane;\n\t\t\t\tif (editorPane instanceof KeybindingsEditor) {\n\t\t\t\t\teditorPane.clearSearchResults();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: KEYBINDINGS_EDITOR_COMMAND_CLEAR_SEARCH_HISTORY,\n\t\t\t\t\ttitle: nls.localize('clearHistory', \"Clear Keyboard Shortcuts Search History\"),\n\t\t\t\t\tcategory,\n\t\t\t\t\tmenu: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_KEYBINDINGS_EDITOR),\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor) {\n\t\t\t\tconst editorPane = accessor.get(IEditorService).activeEditorPane;\n\t\t\t\tif (editorPane instanceof KeybindingsEditor) {\n\t\t\t\t\teditorPane.clearKeyboardShortcutSearchHistory();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis.registerKeybindingEditorActions();\n\t}\n\n\tprivate registerKeybindingEditorActions(): void {\n\t\tconst that = this;\n\n\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\tid: KEYBINDINGS_EDITOR_COMMAND_DEFINE,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: ContextKeyExpr.and(CONTEXT_KEYBINDINGS_EDITOR, CONTEXT_KEYBINDING_FOCUS, CONTEXT_WHEN_FOCUS.toNegated()),\n\t\t\tprimary: KeyCode.Enter,\n\t\t\thandler: (accessor, args: any) => {\n\t\t\t\tconst editorPane = accessor.get(IEditorService).activeEditorPane;\n\t\t\t\tif (editorPane instanceof KeybindingsEditor) {\n\t\t\t\t\teditorPane.defineKeybinding(editorPane.activeKeybindingEntry!, false);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\tid: KEYBINDINGS_EDITOR_COMMAND_ADD,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: ContextKeyExpr.and(CONTEXT_KEYBINDINGS_EDITOR, CONTEXT_KEYBINDING_FOCUS),\n\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyA),\n\t\t\thandler: (accessor, args: any) => {\n\t\t\t\tconst editorPane = accessor.get(IEditorService).activeEditorPane;\n\t\t\t\tif (editorPane instanceof KeybindingsEditor) {\n\t\t\t\t\teditorPane.defineKeybinding(editorPane.activeKeybindingEntry!, true);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\tid: KEYBINDINGS_EDITOR_COMMAND_DEFINE_WHEN,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: ContextKeyExpr.and(CONTEXT_KEYBINDINGS_EDITOR, CONTEXT_KEYBINDING_FOCUS),\n\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyE),\n\t\t\thandler: (accessor, args: any) => {\n\t\t\t\tconst editorPane = accessor.get(IEditorService).activeEditorPane;\n\t\t\t\tif (editorPane instanceof KeybindingsEditor && editorPane.activeKeybindingEntry!.keybindingItem.keybinding) {\n\t\t\t\t\teditorPane.defineWhenExpression(editorPane.activeKeybindingEntry!);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\tid: KEYBINDINGS_EDITOR_COMMAND_REMOVE,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: ContextKeyExpr.and(CONTEXT_KEYBINDINGS_EDITOR, CONTEXT_KEYBINDING_FOCUS, InputFocusedContext.toNegated()),\n\t\t\tprimary: KeyCode.Delete,\n\t\t\tmac: {\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Backspace\n\t\t\t},\n\t\t\thandler: (accessor, args: any) => {\n\t\t\t\tconst editorPane = accessor.get(IEditorService).activeEditorPane;\n\t\t\t\tif (editorPane instanceof KeybindingsEditor) {\n\t\t\t\t\teditorPane.removeKeybinding(editorPane.activeKeybindingEntry!);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\tid: KEYBINDINGS_EDITOR_COMMAND_RESET,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: ContextKeyExpr.and(CONTEXT_KEYBINDINGS_EDITOR, CONTEXT_KEYBINDING_FOCUS),\n\t\t\tprimary: 0,\n\t\t\thandler: (accessor, args: any) => {\n\t\t\t\tconst editorPane = accessor.get(IEditorService).activeEditorPane;\n\t\t\t\tif (editorPane instanceof KeybindingsEditor) {\n\t\t\t\t\teditorPane.resetKeybinding(editorPane.activeKeybindingEntry!);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\tid: KEYBINDINGS_EDITOR_COMMAND_SEARCH,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: ContextKeyExpr.and(CONTEXT_KEYBINDINGS_EDITOR),\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyF,\n\t\t\thandler: (accessor, args: any) => {\n\t\t\t\tconst editorPane = accessor.get(IEditorService).activeEditorPane;\n\t\t\t\tif (editorPane instanceof KeybindingsEditor) {\n\t\t\t\t\teditorPane.focusSearch();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\tid: KEYBINDINGS_EDITOR_COMMAND_RECORD_SEARCH_KEYS,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: ContextKeyExpr.and(CONTEXT_KEYBINDINGS_EDITOR, CONTEXT_KEYBINDINGS_SEARCH_FOCUS),\n\t\t\tprimary: KeyMod.Alt | KeyCode.KeyK,\n\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyK },\n\t\t\thandler: (accessor, args: any) => {\n\t\t\t\tconst editorPane = accessor.get(IEditorService).activeEditorPane;\n\t\t\t\tif (editorPane instanceof KeybindingsEditor) {\n\t\t\t\t\teditorPane.recordSearchKeys();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\tid: KEYBINDINGS_EDITOR_COMMAND_SORTBY_PRECEDENCE,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: ContextKeyExpr.and(CONTEXT_KEYBINDINGS_EDITOR),\n\t\t\tprimary: KeyMod.Alt | KeyCode.KeyP,\n\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyP },\n\t\t\thandler: (accessor, args: any) => {\n\t\t\t\tconst editorPane = accessor.get(IEditorService).activeEditorPane;\n\t\t\t\tif (editorPane instanceof KeybindingsEditor) {\n\t\t\t\t\teditorPane.toggleSortByPrecedence();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\tid: KEYBINDINGS_EDITOR_COMMAND_SHOW_SIMILAR,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: ContextKeyExpr.and(CONTEXT_KEYBINDINGS_EDITOR, CONTEXT_KEYBINDING_FOCUS),\n\t\t\tprimary: 0,\n\t\t\thandler: (accessor, args: any) => {\n\t\t\t\tconst editorPane = accessor.get(IEditorService).activeEditorPane;\n\t\t\t\tif (editorPane instanceof KeybindingsEditor) {\n\t\t\t\t\teditorPane.showSimilarKeybindings(editorPane.activeKeybindingEntry!);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\tid: KEYBINDINGS_EDITOR_COMMAND_COPY,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: ContextKeyExpr.and(CONTEXT_KEYBINDINGS_EDITOR, CONTEXT_KEYBINDING_FOCUS, CONTEXT_WHEN_FOCUS.negate()),\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyC,\n\t\t\thandler: async (accessor, args: any) => {\n\t\t\t\tconst editorPane = accessor.get(IEditorService).activeEditorPane;\n\t\t\t\tif (editorPane instanceof KeybindingsEditor) {\n\t\t\t\t\tawait editorPane.copyKeybinding(editorPane.activeKeybindingEntry!);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\tid: KEYBINDINGS_EDITOR_COMMAND_COPY_COMMAND,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: ContextKeyExpr.and(CONTEXT_KEYBINDINGS_EDITOR, CONTEXT_KEYBINDING_FOCUS),\n\t\t\tprimary: 0,\n\t\t\thandler: async (accessor, args: any) => {\n\t\t\t\tconst editorPane = accessor.get(IEditorService).activeEditorPane;\n\t\t\t\tif (editorPane instanceof KeybindingsEditor) {\n\t\t\t\t\tawait editorPane.copyKeybindingCommand(editorPane.activeKeybindingEntry!);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\tid: KEYBINDINGS_EDITOR_COMMAND_COPY_COMMAND_TITLE,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: ContextKeyExpr.and(CONTEXT_KEYBINDINGS_EDITOR, CONTEXT_KEYBINDING_FOCUS),\n\t\t\tprimary: 0,\n\t\t\thandler: async (accessor, args: any) => {\n\t\t\t\tconst editorPane = accessor.get(IEditorService).activeEditorPane;\n\t\t\t\tif (editorPane instanceof KeybindingsEditor) {\n\t\t\t\t\tawait editorPane.copyKeybindingCommandTitle(editorPane.activeKeybindingEntry!);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\tid: KEYBINDINGS_EDITOR_COMMAND_FOCUS_KEYBINDINGS,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: ContextKeyExpr.and(CONTEXT_KEYBINDINGS_EDITOR, CONTEXT_KEYBINDINGS_SEARCH_FOCUS),\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.DownArrow,\n\t\t\thandler: (accessor, args: any) => {\n\t\t\t\tconst editorPane = accessor.get(IEditorService).activeEditorPane;\n\t\t\t\tif (editorPane instanceof KeybindingsEditor) {\n\t\t\t\t\teditorPane.focusKeybindings();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\tid: KEYBINDINGS_EDITOR_COMMAND_REJECT_WHEN,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: ContextKeyExpr.and(CONTEXT_KEYBINDINGS_EDITOR, CONTEXT_WHEN_FOCUS, SuggestContext.Visible.toNegated()),\n\t\t\tprimary: KeyCode.Escape,\n\t\t\thandler: async (accessor, args: any) => {\n\t\t\t\tconst editorPane = accessor.get(IEditorService).activeEditorPane;\n\t\t\t\tif (editorPane instanceof KeybindingsEditor) {\n\t\t\t\t\teditorPane.rejectWhenExpression(editorPane.activeKeybindingEntry!);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\tid: KEYBINDINGS_EDITOR_COMMAND_ACCEPT_WHEN,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: ContextKeyExpr.and(CONTEXT_KEYBINDINGS_EDITOR, CONTEXT_WHEN_FOCUS, SuggestContext.Visible.toNegated()),\n\t\t\tprimary: KeyCode.Enter,\n\t\t\thandler: async (accessor, args: any) => {\n\t\t\t\tconst editorPane = accessor.get(IEditorService).activeEditorPane;\n\t\t\t\tif (editorPane instanceof KeybindingsEditor) {\n\t\t\t\t\teditorPane.acceptWhenExpression(editorPane.activeKeybindingEntry!);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst profileScopedActionDisposables = this._register(new DisposableStore());\n\t\tconst registerProfileScopedActions = () => {\n\t\t\tprofileScopedActionDisposables.clear();\n\t\t\tprofileScopedActionDisposables.add(registerAction2(class DefineKeybindingAction extends Action2 {\n\t\t\t\tconstructor() {\n\t\t\t\t\tconst when = ResourceContextKey.Resource.isEqualTo(that.userDataProfileService.currentProfile.keybindingsResource.toString());\n\t\t\t\t\tsuper({\n\t\t\t\t\t\tid: 'editor.action.defineKeybinding',\n\t\t\t\t\t\ttitle: nls.localize2('defineKeybinding.start', \"Define Keybinding\"),\n\t\t\t\t\t\tf1: true,\n\t\t\t\t\t\tprecondition: when,\n\t\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\t\twhen,\n\t\t\t\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyK)\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmenu: {\n\t\t\t\t\t\t\tid: MenuId.EditorContent,\n\t\t\t\t\t\t\twhen,\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\t\tconst codeEditor = accessor.get(IEditorService).activeTextEditorControl;\n\t\t\t\t\tif (isCodeEditor(codeEditor)) {\n\t\t\t\t\t\tcodeEditor.getContribution<IDefineKeybindingEditorContribution>(DEFINE_KEYBINDING_EDITOR_CONTRIB_ID)?.showDefineKeybindingWidget();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\t};\n\n\t\tregisterProfileScopedActions();\n\t\tthis._register(this.userDataProfileService.onDidChangeCurrentProfile(() => registerProfileScopedActions()));\n\t}\n\n\tprivate updatePreferencesEditorMenuItem() {\n\t\tconst commandId = '_workbench.openWorkspaceSettingsEditor';\n\t\tif (this.workspaceContextService.getWorkbenchState() === WorkbenchState.WORKSPACE && !CommandsRegistry.getCommand(commandId)) {\n\t\t\tCommandsRegistry.registerCommand(commandId, () => this.preferencesService.openWorkspaceSettings({ jsonEditor: false }));\n\t\t\tMenuRegistry.appendMenuItem(MenuId.EditorTitle, {\n\t\t\t\tcommand: {\n\t\t\t\t\tid: commandId,\n\t\t\t\t\ttitle: OPEN_USER_SETTINGS_UI_TITLE,\n\t\t\t\t\ticon: preferencesOpenSettingsIcon\n\t\t\t\t},\n\t\t\t\twhen: ContextKeyExpr.and(ResourceContextKey.Resource.isEqualTo(this.preferencesService.workspaceSettingsResource!.toString()), WorkbenchStateContext.isEqualTo('workspace'), ContextKeyExpr.not('isInDiffEditor')),\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 1\n\t\t\t});\n\t\t}\n\t\tthis.updatePreferencesEditorMenuItemForWorkspaceFolders();\n\t}\n\n\tprivate updatePreferencesEditorMenuItemForWorkspaceFolders() {\n\t\tfor (const folder of this.workspaceContextService.getWorkspace().folders) {\n\t\t\tconst commandId = `_workbench.openFolderSettings.${folder.uri.toString()}`;\n\t\t\tif (!CommandsRegistry.getCommand(commandId)) {\n\t\t\t\tCommandsRegistry.registerCommand(commandId, () => {\n\t\t\t\t\tif (this.workspaceContextService.getWorkbenchState() === WorkbenchState.FOLDER) {\n\t\t\t\t\t\treturn this.preferencesService.openWorkspaceSettings({ jsonEditor: false });\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this.preferencesService.openFolderSettings({ folderUri: folder.uri, jsonEditor: false });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tMenuRegistry.appendMenuItem(MenuId.EditorTitle, {\n\t\t\t\t\tcommand: {\n\t\t\t\t\t\tid: commandId,\n\t\t\t\t\t\ttitle: OPEN_USER_SETTINGS_UI_TITLE,\n\t\t\t\t\t\ticon: preferencesOpenSettingsIcon\n\t\t\t\t\t},\n\t\t\t\t\twhen: ContextKeyExpr.and(ResourceContextKey.Resource.isEqualTo(this.preferencesService.getFolderSettingsResource(folder.uri)!.toString()), ContextKeyExpr.not('isInDiffEditor')),\n\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\torder: 1\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass SettingsEditorTitleContribution extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t) {\n\t\tsuper();\n\t\tthis.registerSettingsEditorTitleActions();\n\t}\n\n\tprivate registerSettingsEditorTitleActions() {\n\t\tconst registerOpenUserSettingsEditorFromJsonActionDisposables = this._register(new MutableDisposable());\n\t\tconst openUserSettingsEditorWhen = ContextKeyExpr.and(\n\t\t\tContextKeyExpr.or(\n\t\t\t\tResourceContextKey.Resource.isEqualTo(this.userDataProfileService.currentProfile.settingsResource.toString()),\n\t\t\t\tResourceContextKey.Resource.isEqualTo(this.userDataProfilesService.defaultProfile.settingsResource.toString())),\n\t\t\tContextKeyExpr.not('isInDiffEditor'));\n\t\tconst registerOpenUserSettingsEditorFromJsonAction = () => {\n\t\t\tregisterOpenUserSettingsEditorFromJsonActionDisposables.value = undefined;\n\t\t\tregisterOpenUserSettingsEditorFromJsonActionDisposables.value = registerAction2(class extends Action2 {\n\t\t\t\tconstructor() {\n\t\t\t\t\tsuper({\n\t\t\t\t\t\tid: '_workbench.openUserSettingsEditor',\n\t\t\t\t\t\ttitle: OPEN_USER_SETTINGS_UI_TITLE,\n\t\t\t\t\t\ticon: preferencesOpenSettingsIcon,\n\t\t\t\t\t\tmenu: [{\n\t\t\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\t\t\twhen: openUserSettingsEditorWhen,\n\t\t\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\t\t\torder: 1\n\t\t\t\t\t\t}]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\trun(accessor: ServicesAccessor, args: IOpenSettingsActionOptions) {\n\t\t\t\t\targs = sanitizeOpenSettingsArgs(args);\n\t\t\t\t\treturn accessor.get(IPreferencesService).openUserSettings({ jsonEditor: false, ...args });\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tregisterOpenUserSettingsEditorFromJsonAction();\n\t\tthis._register(this.userDataProfileService.onDidChangeCurrentProfile(() => {\n\t\t\t// Force the action to check the context again.\n\t\t\tregisterOpenUserSettingsEditorFromJsonAction();\n\t\t}));\n\n\t\tconst openSettingsJsonWhen = ContextKeyExpr.and(CONTEXT_SETTINGS_EDITOR, CONTEXT_SETTINGS_JSON_EDITOR.toNegated());\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: SETTINGS_EDITOR_COMMAND_SWITCH_TO_JSON,\n\t\t\t\t\ttitle: nls.localize2('openSettingsJson', \"Open Settings (JSON)\"),\n\t\t\t\t\ticon: preferencesOpenSettingsIcon,\n\t\t\t\t\tmenu: [{\n\t\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\t\twhen: openSettingsJsonWhen,\n\t\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\t\torder: 1\n\t\t\t\t\t}]\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor) {\n\t\t\t\tconst editorPane = accessor.get(IEditorService).activeEditorPane;\n\t\t\t\tif (editorPane instanceof SettingsEditor2) {\n\t\t\t\t\treturn editorPane.switchToSettingsFile();\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}));\n\t}\n}\n\nconst workbenchContributionsRegistry = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench);\nregisterWorkbenchContribution2(PreferencesActionsContribution.ID, PreferencesActionsContribution, WorkbenchPhase.BlockStartup);\nregisterWorkbenchContribution2(PreferencesContribution.ID, PreferencesContribution, WorkbenchPhase.BlockStartup);\nworkbenchContributionsRegistry.registerWorkbenchContribution(SettingsEditorTitleContribution, LifecyclePhase.Restored);\n\nregisterEditorContribution(SettingsEditorContribution.ID, SettingsEditorContribution, EditorContributionInstantiation.AfterFirstRender);\n\n// Preferences menu\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\ttitle: nls.localize({ key: 'miPreferences', comment: ['&& denotes a mnemonic'] }, \"&&Preferences\"),\n\tsubmenu: MenuId.MenubarPreferencesMenu,\n\tgroup: '5_autosave',\n\torder: 2,\n\twhen: IsMacNativeContext.toNegated() // on macOS native the preferences menu is separate under the application menu\n});\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,UAAU,SAAS,cAAc;AAC1C,SAAS,YAAY,iBAAiB,yBAAyB;AAC/D,SAAS,eAAe;AACxB,SAAS,WAAW,UAAU,gBAAgB;AAC9C,SAAS,WAAW;AACpB,OAAO;AACP,SAAS,iCAAiC,kCAAkC;AAC5E,SAAS,WAAW,sBAAsB;AAC1C,YAAY,SAAS;AACrB,SAAS,SAAS,QAAQ,cAAc,uBAAuB;AAC/D,SAAS,kBAAkB,uBAAuB;AAClD,SAAS,sBAAsB;AAC/B,SAAS,qBAAqB,0BAA0B;AACxD,SAAS,sBAAsB;AAC/B,SAAS,uBAAuB,wBAAwB;AACxD,SAAS,qBAAqB,wBAAwB;AACtD,SAAS,qBAAqB;AAC9B,SAAS,gBAAgB;AACzB,SAAS,0BAA0B,kBAAkB,sBAAsB;AAC3E,SAAS,wCAAwC;AACjD,SAAS,sBAAsB,2BAA2B;AAC1D,SAAS,cAAc,qBAAqB,wBAAwB,iCAAiC,gBAAgB,sCAAsC;AAC3J,SAAS,kBAAkB,wBAAwB,yBAAyB;AAC5E,SAAS,mBAAmB;AAC5B,SAAS,oBAAoB,mBAAmB,6BAA6B;AAC7E,SAAS,uBAAuB,2BAA2B;AAC3D,SAAS,yBAAyB;AAClC,SAAS,4CAA4C;AACrD,SAAS,kCAAkC;AAC3C,SAAS,mCAAmC;AAC5C,SAAS,iBAAiB,4BAA4B;AACtD,SAAS,4BAA4B,kCAAkC,0BAA0B,yBAAyB,8BAA8B,4BAA4B,+BAA+B,uBAAuB,oBAAoB,wCAAwC,gCAAgC,iDAAiD,iDAAiD,iCAAiC,yCAAyC,+CAA+C,mCAAmC,wCAAwC,8CAA8C,+CAA+C,wCAAwC,mCAAmC,kCAAkC,mCAAmC,yCAAyC,8CAA8C,6CAA6C,+CAA+C,0CAA0C,uCAAuC,8CAA8C,iDAAiD;AAC5rC,SAAS,+BAA+B;AACxC,SAAS,sBAAsB;AAC/B,SAAS,oCAAoC;AAC7C,SAAS,yBAAyB;AAClC,SAAS,sBAAsB;AAC/B,SAAS,8BAA8B;AACvC,SAAS,qCAAqC,qCAAqC,2BAA2B;AAC9G,SAAS,4BAA4B;AACrC,SAAS,yBAAyB,+BAA+B;AACjE,SAAS,gCAAgC;AACzC,SAAS,oBAAoB;AAC7B,SAAS,kBAAkB;AAE3B,MAAM,iCAAiC;AAEvC,MAAM,qCAAqC;AAC3C,MAAM,qDAAqD;AAC3D,MAAM,8CAA8C;AACpD,MAAM,oCAAoC;AAC1C,MAAM,wCAAwC;AAC9C,MAAM,mCAAmC;AAEzC,MAAM,yCAAyC;AAC/C,MAAM,wCAAwC;AAC9C,MAAM,2CAA2C;AAEjD,MAAM,iCAAiC;AACvC,MAAM,oCAAoC;AAE1C,SAAS,GAAwB,iBAAiB,UAAU,EAAE;AAAA,EAC7D,qBAAqB;AAAA,IACpB;AAAA,IACA,gBAAgB;AAAA,IAChB,IAAI,SAAS,mBAAmB,mBAAmB;AAAA,EACpD;AAAA,EACA;AAAA,IACC,IAAI,eAAe,oBAAoB;AAAA,EACxC;AACD;AAEA,SAAS,GAAwB,iBAAiB,UAAU,EAAE;AAAA,EAC7D,qBAAqB;AAAA,IACpB;AAAA,IACA,kBAAkB;AAAA,IAClB,IAAI,SAAS,qBAAqB,oBAAoB;AAAA,EACvD;AAAA,EACA;AAAA,IACC,IAAI,eAAe,sBAAsB;AAAA,EAC1C;AACD;AAEA,MAAM,iCAA8D;AAAA,EAxFpE,OAwFoE;AAAA;AAAA;AAAA,EAEnE,aAAa,aAAmC;AAC/C,WAAO;AAAA,EACR;AAAA,EAEA,UAAU,aAAkC;AAC3C,WAAO;AAAA,EACR;AAAA,EAEA,YAAY,sBAA0D;AACrE,WAAO,qBAAqB,eAAe,sBAAsB;AAAA,EAClE;AACD;AAEA,MAAM,+BAA4D;AAAA,EAvGlE,OAuGkE;AAAA;AAAA;AAAA,EAEjE,aAAa,aAAmC;AAC/C,WAAO;AAAA,EACR;AAAA,EAEA,UAAU,OAAqC;AAC9C,WAAO;AAAA,EACR;AAAA,EAEA,YAAY,sBAAmE;AAC9E,WAAO,qBAAqB,eAAe,oBAAoB;AAAA,EAChE;AACD;AAEA,SAAS,GAA2B,iBAAiB,aAAa,EAAE,yBAAyB,uBAAuB,IAAI,gCAAgC;AACxJ,SAAS,GAA2B,iBAAiB,aAAa,EAAE,yBAAyB,qBAAqB,IAAI,8BAA8B;AAEpJ,MAAM,8BAA8B,IAAI,UAAU,iBAAiB,oBAAoB;AACvF,MAAM,gCAAgC,IAAI,UAAU,wBAAwB,2BAA2B;AACvG,MAAM,uCAAuC,IAAI,UAAU,+BAA+B,kCAAkC;AAC5H,MAAM,WAAW,WAAW;AAY5B,SAAS,gBAAgB,KAA+B;AACvD,SAAO,UAAU,GAAG,IAAI,MAAM;AAC/B;AAFS;AAIT,SAAS,eAAe,KAA8B;AACrD,SAAO,SAAS,GAAG,IAAI,MAAM;AAC9B;AAFS;AAIT,SAAS,yBAAyB,MAAuC;AACxE,MAAI,CAAC,SAAS,IAAI,GAAG;AACpB,WAAO,CAAC;AAAA,EACT;AAEA,MAAI,kBAA8C;AAAA,IACjD,aAAa,gBAAgB,MAAM,WAAW;AAAA,IAC9C,YAAY,gBAAgB,MAAM,UAAU;AAAA,IAC5C,OAAO,eAAe,MAAM,KAAK;AAAA,EAClC;AAEA,MAAI,SAAS,MAAM,eAAe,GAAG,GAAG;AACvC,sBAAkB;AAAA,MACjB,GAAG;AAAA,MACH,eAAe;AAAA,QACd,KAAK,KAAK,cAAc;AAAA,QACxB,MAAM,gBAAgB,KAAK,eAAe,IAAI;AAAA,MAC/C;AAAA,IACD;AAAA,EACD;AAEA,SAAO;AACR;AAtBS;AAwBT,IAAM,iCAAN,cAA6C,WAA6C;AAAA,EAIzF,YACgD,oBACL,wBACJ,oBACK,yBACX,cACI,kBACO,yBAC1C;AACD,UAAM;AARyC;AACL;AACJ;AACK;AACX;AACI;AACO;AAI3C,SAAK,wBAAwB;AAC7B,SAAK,2BAA2B;AAEhC,SAAK,gCAAgC;AACrC,SAAK,UAAU,wBAAwB,0BAA0B,MAAM,KAAK,gCAAgC,CAAC,CAAC;AAC9G,SAAK,UAAU,wBAAwB,4BAA4B,MAAM,KAAK,mDAAmD,CAAC,CAAC;AAAA,EACpI;AAAA,EA7LD,OAwK0F;AAAA;AAAA;AAAA,EAEzF,OAAgB,KAAK;AAAA,EAqBb,0BAA0B;AACjC,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,OAAO;AAAA,YACN,GAAG,IAAI,UAAU,YAAY,UAAU;AAAA,YACvC,eAAe,IAAI,SAAS,EAAE,KAAK,kBAAkB,SAAS,CAAC,uBAAuB,EAAE,GAAG,YAAY;AAAA,UACxG;AAAA,UACA,YAAY;AAAA,YACX,QAAQ,iBAAiB;AAAA,YACzB,MAAM;AAAA,YACN,SAAS,OAAO,UAAU,QAAQ;AAAA,UACnC;AAAA,UACA,MAAM,CAAC;AAAA,YACN,IAAI,OAAO;AAAA,YACX,OAAO;AAAA,YACP,OAAO;AAAA,UACR,GAAG;AAAA,YACF,IAAI,OAAO;AAAA,YACX,OAAO;AAAA,YACP,OAAO;AAAA,UACR,CAAC;AAAA,QACF,CAAC;AAAA,MACF;AAAA,MACA,IAAI,UAA4B,MAA2C;AAE1E,cAAM,OAAO,OAAO,SAAS,WAAW,EAAE,OAAO,KAAK,IAAI,yBAAyB,IAAI;AACvF,eAAO,SAAS,IAAI,mBAAmB,EAAE,aAAa,IAAI;AAAA,MAC3D;AAAA,IACD,CAAC,CAAC;AACF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,OAAO,IAAI,UAAU,iBAAiB,oBAAoB;AAAA,UAC1D;AAAA,UACA,IAAI;AAAA,QACL,CAAC;AAAA,MACF;AAAA,MACA,IAAI,UAA4B,MAAkC;AACjE,eAAO,yBAAyB,IAAI;AACpC,eAAO,SAAS,IAAI,mBAAmB,EAAE,aAAa,EAAE,YAAY,OAAO,GAAG,KAAK,CAAC;AAAA,MACrF;AAAA,IACD,CAAC,CAAC;AAEF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,OAAO;AAAA,UACP,UAAU;AAAA,YACT,aAAa,IAAI,UAAU,iDAAiD,kEAAkE;AAAA,UAC/I;AAAA,UACA;AAAA,UACA,IAAI;AAAA,QACL,CAAC;AAAA,MACF;AAAA,MACA,IAAI,UAA4B,MAAkC;AACjE,eAAO,yBAAyB,IAAI;AACpC,eAAO,SAAS,IAAI,mBAAmB,EAAE,aAAa,EAAE,YAAY,MAAM,GAAG,KAAK,CAAC;AAAA,MACpF;AAAA,IACD,CAAC,CAAC;AAEF,UAAM,OAAO;AACb,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,OAAO;AAAA,UACP;AAAA,UACA,MAAM;AAAA,YACL,IAAI,OAAO;AAAA,YACX,MAAM,eAAe,UAAU,wBAAwB,KAAK,KAAK,wBAAwB,eAAe,EAAE;AAAA,UAC3G;AAAA,QACD,CAAC;AAAA,MACF;AAAA,MACA,IAAI,UAA4B,MAAkC;AACjE,eAAO,yBAAyB,IAAI;AACpC,eAAO,SAAS,IAAI,mBAAmB,EAAE,wBAAwB,EAAE,YAAY,MAAM,GAAG,KAAK,CAAC;AAAA,MAC/F;AAAA,IACD,CAAC,CAAC;AAGF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,OAAO,IAAI,UAAU,sBAAsB,oBAAoB;AAAA,UAC/D;AAAA,UACA,IAAI;AAAA,QACL,CAAC;AAAA,MACF;AAAA,MACA,IAAI,UAA4B,MAAkC;AACjE,eAAO,yBAAyB,IAAI;AACpC,eAAO,SAAS,IAAI,mBAAmB,EAAE,iBAAiB,IAAI;AAAA,MAC/D;AAAA,IACD,CAAC,CAAC;AACF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,OAAO,IAAI,UAAU,0BAA0B,8BAA8B;AAAA,UAC7E;AAAA,UACA,IAAI;AAAA,QACL,CAAC;AAAA,MACF;AAAA,MACA,IAAI,UAA4B;AAC/B,eAAO,SAAS,IAAI,mBAAmB,EAAE,uBAAuB;AAAA,MACjE;AAAA,IACD,CAAC,CAAC;AAEF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI,qCAAqC;AAAA,UACzC,OAAO,qCAAqC;AAAA,UAC5C;AAAA,UACA,IAAI;AAAA,QACL,CAAC;AAAA,MACF;AAAA,MACA,IAAI,UAA4B;AAC/B,eAAO,SAAS,IAAI,qBAAqB,EAAE,eAAe,sCAAsC,qCAAqC,IAAI,qCAAqC,MAAM,KAAK,EAAE,IAAI;AAAA,MAChM;AAAA,IACD,CAAC,CAAC;AACF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,OAAO,IAAI,UAAU,yBAAyB,yBAAyB;AAAA,UACvE;AAAA,UACA,MAAM;AAAA,YACL,IAAI,OAAO;AAAA,YACX,MAAM,sBAAsB,YAAY,OAAO;AAAA,UAChD;AAAA,QACD,CAAC;AAAA,MACF;AAAA,MACA,IAAI,UAA4B,MAA4C;AAE3E,eAAO,OAAO,SAAS,WAAW,EAAE,OAAO,KAAK,IAAI,yBAAyB,IAAI;AACjF,eAAO,SAAS,IAAI,mBAAmB,EAAE,sBAAsB,IAAI;AAAA,MACpE;AAAA,IACD,CAAC,CAAC;AAEF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,OAAO,IAAI,UAAU,6BAA6B,6BAA6B;AAAA,UAC/E;AAAA,UACA,MAAM;AAAA,YACL,IAAI,OAAO;AAAA,YACX,MAAM,sBAAsB,YAAY,OAAO;AAAA,UAChD;AAAA,QACD,CAAC;AAAA,MACF;AAAA,MACA,MAAM,IAAI,UAA4B;AACrC,cAAM,SAAS,IAAI,mBAAmB,EAAE,aAAa,EAAE,YAAY,OAAO,OAAO,qBAAqB,CAAC;AAAA,MACxG;AAAA,IACD,CAAC,CAAC;AACF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,OAAO,IAAI,UAAU,6BAA6B,gCAAgC;AAAA,UAClF;AAAA,UACA,MAAM;AAAA,YACL,IAAI,OAAO;AAAA,YACX,MAAM,sBAAsB,YAAY,OAAO;AAAA,UAChD;AAAA,QACD,CAAC;AAAA,MACF;AAAA,MACA,IAAI,UAA4B,MAAmC;AAClE,eAAO,yBAAyB,IAAI;AACpC,eAAO,SAAS,IAAI,mBAAmB,EAAE,sBAAsB,EAAE,YAAY,MAAM,GAAG,KAAK,CAAC;AAAA,MAC7F;AAAA,IACD,CAAC,CAAC;AACF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,OAAO,IAAI,UAAU,sBAAsB,sBAAsB;AAAA,UACjE;AAAA,UACA,MAAM;AAAA,YACL,IAAI,OAAO;AAAA,YACX,MAAM,sBAAsB,UAAU,WAAW;AAAA,UAClD;AAAA,QACD,CAAC;AAAA,MACF;AAAA,MACA,MAAM,IAAI,UAA4B,MAAmC;AACxE,cAAM,iBAAiB,SAAS,IAAI,eAAe;AACnD,cAAM,qBAAqB,SAAS,IAAI,mBAAmB;AAC3D,cAAM,kBAAkB,MAAM,eAAe,eAAiC,gCAAgC;AAC9G,YAAI,iBAAiB;AACpB,iBAAO,yBAAyB,IAAI;AACpC,gBAAM,mBAAmB,mBAAmB,EAAE,WAAW,gBAAgB,KAAK,GAAG,KAAK,CAAC;AAAA,QACxF;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AACF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,OAAO,IAAI,UAAU,0BAA0B,6BAA6B;AAAA,UAC5E;AAAA,UACA,MAAM;AAAA,YACL,IAAI,OAAO;AAAA,YACX,MAAM,sBAAsB,UAAU,WAAW;AAAA,UAClD;AAAA,QACD,CAAC;AAAA,MACF;AAAA,MACA,MAAM,IAAI,UAA4B,MAAmC;AACxE,cAAM,iBAAiB,SAAS,IAAI,eAAe;AACnD,cAAM,qBAAqB,SAAS,IAAI,mBAAmB;AAC3D,cAAM,kBAAkB,MAAM,eAAe,eAAiC,gCAAgC;AAC9G,YAAI,iBAAiB;AACpB,iBAAO,yBAAyB,IAAI;AACpC,gBAAM,mBAAmB,mBAAmB,EAAE,WAAW,gBAAgB,KAAK,YAAY,MAAM,GAAG,KAAK,CAAC;AAAA,QAC1G;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AACF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,OAAO,IAAI,SAAS,sBAAsB,sBAAsB;AAAA,UAChE;AAAA,UACA,MAAM;AAAA,YACL,IAAI,OAAO;AAAA,YACX,OAAO;AAAA,YACP,OAAO;AAAA,YACP,MAAM,eAAe,IAAI,qBAAqB,qBAAqB;AAAA,UACpE;AAAA,QACD,CAAC;AAAA,MACF;AAAA,MACA,MAAM,IAAI,UAA4B,UAAgB;AACrD,YAAI,IAAI,MAAM,QAAQ,GAAG;AACxB,gBAAM,SAAS,IAAI,mBAAmB,EAAE,mBAAmB,EAAE,WAAW,SAAS,CAAC;AAAA,QACnF,OAAO;AACN,gBAAM,iBAAiB,SAAS,IAAI,eAAe;AACnD,gBAAM,qBAAqB,SAAS,IAAI,mBAAmB;AAC3D,gBAAM,kBAAkB,MAAM,eAAe,eAAiC,gCAAgC;AAC9G,cAAI,iBAAiB;AACpB,kBAAM,mBAAmB,mBAAmB,EAAE,WAAW,gBAAgB,IAAI,CAAC;AAAA,UAC/E;AAAA,QACD;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AACF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,OAAO,IAAI,SAAS,EAAE,KAAK,wBAAwB,SAAS,CAAC,uBAAuB,EAAE,GAAG,4BAA4B;AAAA,UACrH,MAAM;AAAA,YACL,IAAI,OAAO;AAAA,YACX,OAAO;AAAA,YACP,OAAO;AAAA,UACR;AAAA,QACD,CAAC;AAAA,MACF;AAAA,MACA,IAAI,UAA4B;AAC/B,cAAM,aAAa,SAAS,IAAI,cAAc,EAAE;AAChD,YAAI,sBAAsB,iBAAiB;AAC1C,qBAAW,YAAY,yBAAyB;AAAA,QACjD,OAAO;AACN,mBAAS,IAAI,mBAAmB,EAAE,aAAa,EAAE,YAAY,OAAO,OAAO,0BAA0B,CAAC;AAAA,QACvG;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAEF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,OAAO,IAAI,UAAU,mBAAmB,mCAAmC;AAAA,QAC5E,CAAC;AAAA,MACF;AAAA,MACA,IAAI,UAA4B;AAC/B,iBAAS,IAAI,mBAAmB,EAAE,sBAAsB,EAAE,YAAY,OAAO,OAAO,QAAQ,qCAAqC,GAAG,CAAC;AAAA,MACtI;AAAA,IACD,CAAC,CAAC;AAEF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,OAAO,IAAI,SAAS,EAAE,KAAK,2BAA2B,SAAS,CAAC,uBAAuB,EAAE,GAAG,sBAAsB;AAAA,QACnH,CAAC;AAAA,MACF;AAAA,MACA,IAAI,UAA4B;AAC/B,cAAM,aAAa,SAAS,IAAI,cAAc,EAAE;AAChD,YAAI,sBAAsB,iBAAiB;AAC1C,qBAAW,YAAY,gBAAgB;AAAA,QACxC,OAAO;AACN,mBAAS,IAAI,mBAAmB,EAAE,aAAa,EAAE,YAAY,OAAO,OAAO,iBAAiB,CAAC;AAAA,QAC9F;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAEF,SAAK,8BAA8B;AAEnC,SAAK,iBAAiB,kCAAkC,EACtD,KAAK,MAAM;AACX,YAAM,kBAAkB,KAAK,mBAAmB;AAChD,YAAM,YAAY,KAAK,aAAa,aAAa,QAAQ,cAAc,eAAe,KAAK;AAC3F,WAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,QACpD,cAAc;AACb,gBAAM;AAAA,YACL,IAAI;AAAA,YACJ,OAAO,IAAI,UAAU,sBAAsB,8BAA8B,SAAS;AAAA,YAClF;AAAA,YACA,MAAM;AAAA,cACL,IAAI,OAAO;AAAA,cACX,MAAM,kBAAkB,YAAY,EAAE;AAAA,YACvC;AAAA,UACD,CAAC;AAAA,QACF;AAAA,QACA,IAAI,UAA4B,MAAmC;AAClE,iBAAO,yBAAyB,IAAI;AACpC,iBAAO,SAAS,IAAI,mBAAmB,EAAE,mBAAmB,IAAI;AAAA,QACjE;AAAA,MACD,CAAC,CAAC;AACF,WAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,QACpD,cAAc;AACb,gBAAM;AAAA,YACL,IAAI;AAAA,YACJ,OAAO,IAAI,UAAU,0BAA0B,qCAAqC,SAAS;AAAA,YAC7F;AAAA,YACA,MAAM;AAAA,cACL,IAAI,OAAO;AAAA,cACX,MAAM,kBAAkB,YAAY,EAAE;AAAA,YACvC;AAAA,UACD,CAAC;AAAA,QACF;AAAA,QACA,IAAI,UAA4B,MAAmC;AAClE,iBAAO,yBAAyB,IAAI;AACpC,iBAAO,SAAS,IAAI,mBAAmB,EAAE,mBAAmB,EAAE,YAAY,MAAM,GAAG,KAAK,CAAC;AAAA,QAC1F;AAAA,MACD,CAAC,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAAA,EAEQ,gCAAgC;AACvC,aAAS,qBAAqB,UAAoD;AACjF,YAAM,mBAAmB,SAAS,IAAI,cAAc,EAAE;AACtD,UAAI,4BAA4B,iBAAiB;AAChD,eAAO;AAAA,MACR;AACA,aAAO;AAAA,IACR;AANS;AAQT,aAAS,0BAA0B,UAA4B;AAC9D,YAAM,oBAAoB,qBAAqB,QAAQ;AACvD,yBAAmB,YAAY;AAAA,IAChC;AAHS;AAKT,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,cAAc;AAAA,UACd,YAAY;AAAA,YACX,SAAS,OAAO,UAAU,QAAQ;AAAA,YAClC,QAAQ,iBAAiB;AAAA,YACzB,MAAM;AAAA,UACP;AAAA,UACA;AAAA,UACA,IAAI;AAAA,UACJ,OAAO,IAAI,UAAU,wBAAwB,uBAAuB;AAAA,QACrE,CAAC;AAAA,MACF;AAAA,MAEA,IAAI,UAA4B;AAAE,kCAA0B,QAAQ;AAAA,MAAG;AAAA,IACxE,CAAC,CAAC;AAEF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,cAAc;AAAA,UACd,YAAY;AAAA,YACX,SAAS,QAAQ;AAAA,YACjB,QAAQ,iBAAiB;AAAA,YACzB,MAAM;AAAA,UACP;AAAA,UACA;AAAA,UACA,IAAI;AAAA,UACJ,OAAO,IAAI,UAAU,yBAAyB,+BAA+B;AAAA,QAC9E,CAAC;AAAA,MACF;AAAA,MAEA,IAAI,UAA4B;AAC/B,cAAM,oBAAoB,qBAAqB,QAAQ;AACvD,2BAAmB,mBAAmB;AAAA,MACvC;AAAA,IACD,CAAC,CAAC;AAEF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,cAAc,eAAe,IAAI,+BAA+B,eAAe,QAAQ,UAAU,CAAC;AAAA,UAClG,YAAY;AAAA,YACX,SAAS,QAAQ;AAAA,YACjB,QAAQ,iBAAiB;AAAA,YACzB,MAAM;AAAA,UACP;AAAA,UACA,OAAO,IAAI,SAAS,sBAAsB,qBAAqB;AAAA,QAChE,CAAC;AAAA,MACF;AAAA,MAEA,IAAI,UAA4B,MAAiB;AAChD,cAAM,oBAAoB,qBAAqB,QAAQ;AACvD,2BAAmB,cAAc;AAAA,MAClC;AAAA,IACD,CAAC,CAAC;AAEF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,cAAc,eAAe,IAAI,+BAA+B,eAAe,QAAQ,UAAU,CAAC;AAAA,UAClG,YAAY;AAAA,YACX,SAAS,QAAQ;AAAA,YACjB,QAAQ,iBAAiB;AAAA,YACzB,MAAM;AAAA,UACP;AAAA,UACA,OAAO,IAAI,SAAS,sBAAsB,qBAAqB;AAAA,QAChE,CAAC;AAAA,MACF;AAAA,MAEA,IAAI,UAA4B,MAAiB;AAChD,cAAM,oBAAoB,qBAAqB,QAAQ;AACvD,2BAAmB,cAAc;AAAA,MAClC;AAAA,IACD,CAAC,CAAC;AAEF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,cAAc,eAAe,IAAI,yBAAyB,qBAAqB;AAAA,UAC/E,YAAY;AAAA,YACX,SAAS,QAAQ;AAAA,YACjB,QAAQ,iBAAiB;AAAA,YACzB,MAAM;AAAA,UACP;AAAA,UACA,OAAO,IAAI,SAAS,8BAA8B,qBAAqB;AAAA,QACxE,CAAC;AAAA,MACF;AAAA,MAEA,IAAI,UAAkC;AACrC,cAAM,oBAAoB,qBAAqB,QAAQ;AACvD,YAAI,6BAA6B,iBAAiB;AACjD,4BAAkB,cAAc;AAAA,QACjC;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAEF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,cAAc;AAAA,UACd,IAAI;AAAA,UACJ,YAAY;AAAA,YACX;AAAA,cACC,SAAS,QAAQ;AAAA,cACjB,QAAQ,iBAAiB;AAAA,cACzB,MAAM;AAAA,YACP;AAAA,UAAC;AAAA,UACF;AAAA,UACA,OAAO,IAAI,UAAU,6BAA6B,kCAAkC;AAAA,QACrF,CAAC;AAAA,MACF;AAAA,MAEA,IAAI,UAAkC;AACrC,cAAM,oBAAoB,qBAAqB,QAAQ;AACvD,YAAI,EAAE,6BAA6B,kBAAkB;AACpD;AAAA,QACD;AAEA,0BAAkB,SAAS;AAAA,MAC5B;AAAA,IACD,CAAC,CAAC;AAEF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,cAAc,eAAe,IAAI,yBAAyB,0BAA0B;AAAA,UACpF,YAAY;AAAA,YACX,SAAS,QAAQ;AAAA,YACjB,QAAQ,iBAAiB;AAAA,UAC1B;AAAA,UACA,OAAO,IAAI,SAAS,gCAAgC,uBAAuB;AAAA,QAC5E,CAAC;AAAA,MACF;AAAA,MAEA,IAAI,UAAkC;AACrC,cAAM,oBAAoB,qBAAqB,QAAQ;AACvD,YAAI,EAAE,6BAA6B,kBAAkB;AACpD;AAAA,QACD;AAEA,cAAM,gBAAgB,kBAAkB,aAAa,GAAG,cAAc;AACtE,YAAI,eAAe,UAAU,SAAS,aAAa,GAAG;AACrD,4BAAkB,cAAc,IAAI;AAAA,QACrC;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAEF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,cAAc;AAAA,UACd,YAAY;AAAA,YACX,SAAS,OAAO,QAAQ,QAAQ;AAAA,YAChC,QAAQ,iBAAiB;AAAA,YACzB,MAAM;AAAA,UACP;AAAA,UACA,IAAI;AAAA,UACJ;AAAA,UACA,OAAO,IAAI,UAAU,4BAA4B,2BAA2B;AAAA,QAC7E,CAAC;AAAA,MACF;AAAA,MAEA,IAAI,UAAkC;AACrC,cAAM,oBAAoB,qBAAqB,QAAQ;AACvD,YAAI,6BAA6B,iBAAiB;AACjD,4BAAkB,gBAAgB;AAAA,QACnC;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAEF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,cAAc,eAAe,IAAI,yBAAyB,8BAA8B,UAAU,GAAG,6BAA6B,UAAU,CAAC;AAAA,UAC7I,YAAY;AAAA,YACX,SAAS,QAAQ;AAAA,YACjB,QAAQ,iBAAiB;AAAA,YACzB,MAAM;AAAA,UACP;AAAA,UACA,IAAI;AAAA,UACJ;AAAA,UACA,OAAO,IAAI,UAAU,yBAAyB,yBAAyB;AAAA,QACxE,CAAC;AAAA,MACF;AAAA,MAEA,IAAI,UAAkC;AACrC,cAAM,oBAAoB,qBAAqB,QAAQ;AACvD,YAAI,EAAE,6BAA6B,kBAAkB;AACpD;AAAA,QACD;AAEA,YAAI,kBAAkB,wBAAwB,qBAAqB,gBAAgB;AAClF,4BAAkB,cAAc;AAAA,QACjC,WAAW,kBAAkB,wBAAwB,qBAAqB,aAAa;AACtF,4BAAkB,SAAS;AAAA,QAC5B,WAAW,kBAAkB,wBAAwB,qBAAqB,iBAAiB;AAC1F,4BAAkB,YAAY;AAAA,QAC/B;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAAA,EACH;AAAA,EAEQ,6BAA6B;AACpC,UAAM,OAAO;AACb,UAAMA,YAAW,IAAI,UAAU,eAAe,aAAa;AAC3D,UAAM,KAAK;AACX,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL;AAAA,UACA,OAAO,IAAI,UAAU,yBAAyB,yBAAyB;AAAA,UACvE,YAAY,IAAI,SAAS,qBAAqB,oBAAoB;AAAA,UAClE,UAAAA;AAAA,UACA,MAAM;AAAA,UACN,YAAY;AAAA,YACX,MAAM;AAAA,YACN,QAAQ,iBAAiB;AAAA,YACzB,SAAS,SAAS,OAAO,UAAU,QAAQ,MAAM,OAAO,UAAU,QAAQ,IAAI;AAAA,UAC/E;AAAA,UACA,MAAM;AAAA,YACL,EAAE,IAAI,OAAO,eAAe;AAAA,YAC5B;AAAA,cACC,IAAI,OAAO;AAAA,cACX,MAAM,mBAAmB,SAAS,UAAU,KAAK,uBAAuB,eAAe,oBAAoB,SAAS,CAAC;AAAA,cACrH,OAAO;AAAA,cACP,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,IAAI,OAAO;AAAA,cACX,OAAO;AAAA,cACP,OAAO;AAAA,YACR;AAAA,UACD;AAAA,QACD,CAAC;AAAA,MACF;AAAA,MACA,IAAI,UAA4B,MAA0B;AACzD,cAAM,QAAQ,OAAO,SAAS,WAAW,OAAO;AAChD,eAAO,SAAS,IAAI,mBAAmB,EAAE,6BAA6B,OAAO,EAAE,MAAM,CAAC;AAAA,MACvF;AAAA,IACD,CAAC,CAAC;AACF,SAAK,UAAU,aAAa,eAAe,OAAO,wBAAwB;AAAA,MACzE,SAAS;AAAA,QACR;AAAA,QACA,OAAO,IAAI,SAAS,qBAAqB,oBAAoB;AAAA,MAC9D;AAAA,MACA,OAAO;AAAA,MACP,OAAO;AAAA,IACR,CAAC,CAAC;AACF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,OAAO,IAAI,UAAU,8BAA8B,wCAAwC;AAAA,UAC3F,UAAAA;AAAA,UACA,MAAM,EAAE,IAAI,OAAO,eAAe;AAAA,QACnC,CAAC;AAAA,MACF;AAAA,MACA,IAAI,UAA4B;AAC/B,eAAO,SAAS,IAAI,mBAAmB,EAAE,2BAA2B;AAAA,MACrE;AAAA,IACD,CAAC,CAAC;AACF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,OAAO,IAAI,UAAU,6BAA6B,gCAAgC;AAAA,UAClF,UAAAA;AAAA,UACA,MAAM;AAAA,UACN,MAAM;AAAA,YACL,EAAE,IAAI,OAAO,eAAe;AAAA,YAC5B;AAAA,cACC,IAAI,OAAO;AAAA,cACX,MAAM,eAAe,IAAI,0BAA0B;AAAA,cACnD,OAAO;AAAA,YACR;AAAA,UACD;AAAA,QACD,CAAC;AAAA,MACF;AAAA,MACA,IAAI,UAA4B;AAC/B,eAAO,SAAS,IAAI,mBAAmB,EAAE,6BAA6B,IAAI;AAAA,MAC3E;AAAA,IACD,CAAC,CAAC;AACF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,OAAO,IAAI,UAAU,0BAA0B,yBAAyB;AAAA,UACxE,MAAM;AAAA,YACL;AAAA,cACC,IAAI,OAAO;AAAA,cACX,MAAM,eAAe,IAAI,0BAA0B;AAAA,cACnD,OAAO;AAAA,YACR;AAAA,UACD;AAAA,QACD,CAAC;AAAA,MACF;AAAA,MACA,IAAI,UAA4B;AAC/B,cAAM,aAAa,SAAS,IAAI,cAAc,EAAE;AAChD,YAAI,sBAAsB,mBAAmB;AAC5C,qBAAW,OAAO,gBAAgB;AAAA,QACnC;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AACF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,OAAO,IAAI,UAAU,4BAA4B,4BAA4B;AAAA,UAC7E,MAAM;AAAA,YACL;AAAA,cACC,IAAI,OAAO;AAAA,cACX,MAAM,eAAe,IAAI,0BAA0B;AAAA,cACnD,OAAO;AAAA,YACR;AAAA,UACD;AAAA,QACD,CAAC;AAAA,MACF;AAAA,MACA,IAAI,UAA4B;AAC/B,cAAM,aAAa,SAAS,IAAI,cAAc,EAAE;AAChD,YAAI,sBAAsB,mBAAmB;AAC5C,qBAAW,OAAO,mBAAmB;AAAA,QACtC;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AACF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,OAAO,IAAI,UAAU,uBAAuB,uBAAuB;AAAA,UACnE,MAAM;AAAA,YACL;AAAA,cACC,IAAI,OAAO;AAAA,cACX,MAAM,eAAe,IAAI,0BAA0B;AAAA,cACnD,OAAO;AAAA,YACR;AAAA,UACD;AAAA,QACD,CAAC;AAAA,MACF;AAAA,MACA,IAAI,UAA4B;AAC/B,cAAM,aAAa,SAAS,IAAI,cAAc,EAAE;AAChD,YAAI,sBAAsB,mBAAmB;AAC5C,qBAAW,OAAO,cAAc;AAAA,QACjC;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AACF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,OAAO,IAAI,SAAS,SAAS,sBAAsB;AAAA,UACnD,YAAY;AAAA,YACX,QAAQ,iBAAiB;AAAA,YACzB,MAAM,eAAe,IAAI,4BAA4B,gCAAgC;AAAA,YACrF,SAAS,QAAQ;AAAA,UAClB;AAAA,QACD,CAAC;AAAA,MACF;AAAA,MACA,IAAI,UAA4B;AAC/B,cAAM,aAAa,SAAS,IAAI,cAAc,EAAE;AAChD,YAAI,sBAAsB,mBAAmB;AAC5C,qBAAW,mBAAmB;AAAA,QAC/B;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAEF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,OAAO,IAAI,SAAS,gBAAgB,yCAAyC;AAAA,UAC7E,UAAAA;AAAA,UACA,MAAM;AAAA,YACL;AAAA,cACC,IAAI,OAAO;AAAA,cACX,MAAM,eAAe,IAAI,0BAA0B;AAAA,YACpD;AAAA,UACD;AAAA,QACD,CAAC;AAAA,MACF;AAAA,MACA,IAAI,UAA4B;AAC/B,cAAM,aAAa,SAAS,IAAI,cAAc,EAAE;AAChD,YAAI,sBAAsB,mBAAmB;AAC5C,qBAAW,mCAAmC;AAAA,QAC/C;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAEF,SAAK,gCAAgC;AAAA,EACtC;AAAA,EAEQ,kCAAwC;AAC/C,UAAM,OAAO;AAEb,wBAAoB,iCAAiC;AAAA,MACpD,IAAI;AAAA,MACJ,QAAQ,iBAAiB;AAAA,MACzB,MAAM,eAAe,IAAI,4BAA4B,0BAA0B,mBAAmB,UAAU,CAAC;AAAA,MAC7G,SAAS,QAAQ;AAAA,MACjB,SAAS,wBAAC,UAAU,SAAc;AACjC,cAAM,aAAa,SAAS,IAAI,cAAc,EAAE;AAChD,YAAI,sBAAsB,mBAAmB;AAC5C,qBAAW,iBAAiB,WAAW,uBAAwB,KAAK;AAAA,QACrE;AAAA,MACD,GALS;AAAA,IAMV,CAAC;AAED,wBAAoB,iCAAiC;AAAA,MACpD,IAAI;AAAA,MACJ,QAAQ,iBAAiB;AAAA,MACzB,MAAM,eAAe,IAAI,4BAA4B,wBAAwB;AAAA,MAC7E,SAAS,SAAS,OAAO,UAAU,QAAQ,MAAM,OAAO,UAAU,QAAQ,IAAI;AAAA,MAC9E,SAAS,wBAAC,UAAU,SAAc;AACjC,cAAM,aAAa,SAAS,IAAI,cAAc,EAAE;AAChD,YAAI,sBAAsB,mBAAmB;AAC5C,qBAAW,iBAAiB,WAAW,uBAAwB,IAAI;AAAA,QACpE;AAAA,MACD,GALS;AAAA,IAMV,CAAC;AAED,wBAAoB,iCAAiC;AAAA,MACpD,IAAI;AAAA,MACJ,QAAQ,iBAAiB;AAAA,MACzB,MAAM,eAAe,IAAI,4BAA4B,wBAAwB;AAAA,MAC7E,SAAS,SAAS,OAAO,UAAU,QAAQ,MAAM,OAAO,UAAU,QAAQ,IAAI;AAAA,MAC9E,SAAS,wBAAC,UAAU,SAAc;AACjC,cAAM,aAAa,SAAS,IAAI,cAAc,EAAE;AAChD,YAAI,sBAAsB,qBAAqB,WAAW,sBAAuB,eAAe,YAAY;AAC3G,qBAAW,qBAAqB,WAAW,qBAAsB;AAAA,QAClE;AAAA,MACD,GALS;AAAA,IAMV,CAAC;AAED,wBAAoB,iCAAiC;AAAA,MACpD,IAAI;AAAA,MACJ,QAAQ,iBAAiB;AAAA,MACzB,MAAM,eAAe,IAAI,4BAA4B,0BAA0B,oBAAoB,UAAU,CAAC;AAAA,MAC9G,SAAS,QAAQ;AAAA,MACjB,KAAK;AAAA,QACJ,SAAS,OAAO,UAAU,QAAQ;AAAA,MACnC;AAAA,MACA,SAAS,wBAAC,UAAU,SAAc;AACjC,cAAM,aAAa,SAAS,IAAI,cAAc,EAAE;AAChD,YAAI,sBAAsB,mBAAmB;AAC5C,qBAAW,iBAAiB,WAAW,qBAAsB;AAAA,QAC9D;AAAA,MACD,GALS;AAAA,IAMV,CAAC;AAED,wBAAoB,iCAAiC;AAAA,MACpD,IAAI;AAAA,MACJ,QAAQ,iBAAiB;AAAA,MACzB,MAAM,eAAe,IAAI,4BAA4B,wBAAwB;AAAA,MAC7E,SAAS;AAAA,MACT,SAAS,wBAAC,UAAU,SAAc;AACjC,cAAM,aAAa,SAAS,IAAI,cAAc,EAAE;AAChD,YAAI,sBAAsB,mBAAmB;AAC5C,qBAAW,gBAAgB,WAAW,qBAAsB;AAAA,QAC7D;AAAA,MACD,GALS;AAAA,IAMV,CAAC;AAED,wBAAoB,iCAAiC;AAAA,MACpD,IAAI;AAAA,MACJ,QAAQ,iBAAiB;AAAA,MACzB,MAAM,eAAe,IAAI,0BAA0B;AAAA,MACnD,SAAS,OAAO,UAAU,QAAQ;AAAA,MAClC,SAAS,wBAAC,UAAU,SAAc;AACjC,cAAM,aAAa,SAAS,IAAI,cAAc,EAAE;AAChD,YAAI,sBAAsB,mBAAmB;AAC5C,qBAAW,YAAY;AAAA,QACxB;AAAA,MACD,GALS;AAAA,IAMV,CAAC;AAED,wBAAoB,iCAAiC;AAAA,MACpD,IAAI;AAAA,MACJ,QAAQ,iBAAiB;AAAA,MACzB,MAAM,eAAe,IAAI,4BAA4B,gCAAgC;AAAA,MACrF,SAAS,OAAO,MAAM,QAAQ;AAAA,MAC9B,KAAK,EAAE,SAAS,OAAO,UAAU,OAAO,MAAM,QAAQ,KAAK;AAAA,MAC3D,SAAS,wBAAC,UAAU,SAAc;AACjC,cAAM,aAAa,SAAS,IAAI,cAAc,EAAE;AAChD,YAAI,sBAAsB,mBAAmB;AAC5C,qBAAW,iBAAiB;AAAA,QAC7B;AAAA,MACD,GALS;AAAA,IAMV,CAAC;AAED,wBAAoB,iCAAiC;AAAA,MACpD,IAAI;AAAA,MACJ,QAAQ,iBAAiB;AAAA,MACzB,MAAM,eAAe,IAAI,0BAA0B;AAAA,MACnD,SAAS,OAAO,MAAM,QAAQ;AAAA,MAC9B,KAAK,EAAE,SAAS,OAAO,UAAU,OAAO,MAAM,QAAQ,KAAK;AAAA,MAC3D,SAAS,wBAAC,UAAU,SAAc;AACjC,cAAM,aAAa,SAAS,IAAI,cAAc,EAAE;AAChD,YAAI,sBAAsB,mBAAmB;AAC5C,qBAAW,uBAAuB;AAAA,QACnC;AAAA,MACD,GALS;AAAA,IAMV,CAAC;AAED,wBAAoB,iCAAiC;AAAA,MACpD,IAAI;AAAA,MACJ,QAAQ,iBAAiB;AAAA,MACzB,MAAM,eAAe,IAAI,4BAA4B,wBAAwB;AAAA,MAC7E,SAAS;AAAA,MACT,SAAS,wBAAC,UAAU,SAAc;AACjC,cAAM,aAAa,SAAS,IAAI,cAAc,EAAE;AAChD,YAAI,sBAAsB,mBAAmB;AAC5C,qBAAW,uBAAuB,WAAW,qBAAsB;AAAA,QACpE;AAAA,MACD,GALS;AAAA,IAMV,CAAC;AAED,wBAAoB,iCAAiC;AAAA,MACpD,IAAI;AAAA,MACJ,QAAQ,iBAAiB;AAAA,MACzB,MAAM,eAAe,IAAI,4BAA4B,0BAA0B,mBAAmB,OAAO,CAAC;AAAA,MAC1G,SAAS,OAAO,UAAU,QAAQ;AAAA,MAClC,SAAS,8BAAO,UAAU,SAAc;AACvC,cAAM,aAAa,SAAS,IAAI,cAAc,EAAE;AAChD,YAAI,sBAAsB,mBAAmB;AAC5C,gBAAM,WAAW,eAAe,WAAW,qBAAsB;AAAA,QAClE;AAAA,MACD,GALS;AAAA,IAMV,CAAC;AAED,wBAAoB,iCAAiC;AAAA,MACpD,IAAI;AAAA,MACJ,QAAQ,iBAAiB;AAAA,MACzB,MAAM,eAAe,IAAI,4BAA4B,wBAAwB;AAAA,MAC7E,SAAS;AAAA,MACT,SAAS,8BAAO,UAAU,SAAc;AACvC,cAAM,aAAa,SAAS,IAAI,cAAc,EAAE;AAChD,YAAI,sBAAsB,mBAAmB;AAC5C,gBAAM,WAAW,sBAAsB,WAAW,qBAAsB;AAAA,QACzE;AAAA,MACD,GALS;AAAA,IAMV,CAAC;AAED,wBAAoB,iCAAiC;AAAA,MACpD,IAAI;AAAA,MACJ,QAAQ,iBAAiB;AAAA,MACzB,MAAM,eAAe,IAAI,4BAA4B,wBAAwB;AAAA,MAC7E,SAAS;AAAA,MACT,SAAS,8BAAO,UAAU,SAAc;AACvC,cAAM,aAAa,SAAS,IAAI,cAAc,EAAE;AAChD,YAAI,sBAAsB,mBAAmB;AAC5C,gBAAM,WAAW,2BAA2B,WAAW,qBAAsB;AAAA,QAC9E;AAAA,MACD,GALS;AAAA,IAMV,CAAC;AAED,wBAAoB,iCAAiC;AAAA,MACpD,IAAI;AAAA,MACJ,QAAQ,iBAAiB;AAAA,MACzB,MAAM,eAAe,IAAI,4BAA4B,gCAAgC;AAAA,MACrF,SAAS,OAAO,UAAU,QAAQ;AAAA,MAClC,SAAS,wBAAC,UAAU,SAAc;AACjC,cAAM,aAAa,SAAS,IAAI,cAAc,EAAE;AAChD,YAAI,sBAAsB,mBAAmB;AAC5C,qBAAW,iBAAiB;AAAA,QAC7B;AAAA,MACD,GALS;AAAA,IAMV,CAAC;AAED,wBAAoB,iCAAiC;AAAA,MACpD,IAAI;AAAA,MACJ,QAAQ,iBAAiB;AAAA,MACzB,MAAM,eAAe,IAAI,4BAA4B,oBAAoB,eAAe,QAAQ,UAAU,CAAC;AAAA,MAC3G,SAAS,QAAQ;AAAA,MACjB,SAAS,8BAAO,UAAU,SAAc;AACvC,cAAM,aAAa,SAAS,IAAI,cAAc,EAAE;AAChD,YAAI,sBAAsB,mBAAmB;AAC5C,qBAAW,qBAAqB,WAAW,qBAAsB;AAAA,QAClE;AAAA,MACD,GALS;AAAA,IAMV,CAAC;AAED,wBAAoB,iCAAiC;AAAA,MACpD,IAAI;AAAA,MACJ,QAAQ,iBAAiB;AAAA,MACzB,MAAM,eAAe,IAAI,4BAA4B,oBAAoB,eAAe,QAAQ,UAAU,CAAC;AAAA,MAC3G,SAAS,QAAQ;AAAA,MACjB,SAAS,8BAAO,UAAU,SAAc;AACvC,cAAM,aAAa,SAAS,IAAI,cAAc,EAAE;AAChD,YAAI,sBAAsB,mBAAmB;AAC5C,qBAAW,qBAAqB,WAAW,qBAAsB;AAAA,QAClE;AAAA,MACD,GALS;AAAA,IAMV,CAAC;AAED,UAAM,iCAAiC,KAAK,UAAU,IAAI,gBAAgB,CAAC;AAC3E,UAAM,+BAA+B,6BAAM;AAC1C,qCAA+B,MAAM;AACrC,qCAA+B,IAAI,gBAAgB,MAAM,+BAA+B,QAAQ;AAAA,QAloCnG,OAkoCmG;AAAA;AAAA;AAAA,QAC/F,cAAc;AACb,gBAAM,OAAO,mBAAmB,SAAS,UAAU,KAAK,uBAAuB,eAAe,oBAAoB,SAAS,CAAC;AAC5H,gBAAM;AAAA,YACL,IAAI;AAAA,YACJ,OAAO,IAAI,UAAU,0BAA0B,mBAAmB;AAAA,YAClE,IAAI;AAAA,YACJ,cAAc;AAAA,YACd,YAAY;AAAA,cACX,QAAQ,iBAAiB;AAAA,cACzB;AAAA,cACA,SAAS,SAAS,OAAO,UAAU,QAAQ,MAAM,OAAO,UAAU,QAAQ,IAAI;AAAA,YAC/E;AAAA,YACA,MAAM;AAAA,cACL,IAAI,OAAO;AAAA,cACX;AAAA,YACD;AAAA,UACD,CAAC;AAAA,QACF;AAAA,QAEA,MAAM,IAAI,UAA2C;AACpD,gBAAM,aAAa,SAAS,IAAI,cAAc,EAAE;AAChD,cAAI,aAAa,UAAU,GAAG;AAC7B,uBAAW,gBAAqD,mCAAmC,GAAG,2BAA2B;AAAA,UAClI;AAAA,QACD;AAAA,MACD,CAAC,CAAC;AAAA,IACH,GA7BqC;AA+BrC,iCAA6B;AAC7B,SAAK,UAAU,KAAK,uBAAuB,0BAA0B,MAAM,6BAA6B,CAAC,CAAC;AAAA,EAC3G;AAAA,EAEQ,kCAAkC;AACzC,UAAM,YAAY;AAClB,QAAI,KAAK,wBAAwB,kBAAkB,MAAM,eAAe,aAAa,CAAC,iBAAiB,WAAW,SAAS,GAAG;AAC7H,uBAAiB,gBAAgB,WAAW,MAAM,KAAK,mBAAmB,sBAAsB,EAAE,YAAY,MAAM,CAAC,CAAC;AACtH,mBAAa,eAAe,OAAO,aAAa;AAAA,QAC/C,SAAS;AAAA,UACR,IAAI;AAAA,UACJ,OAAO;AAAA,UACP,MAAM;AAAA,QACP;AAAA,QACA,MAAM,eAAe,IAAI,mBAAmB,SAAS,UAAU,KAAK,mBAAmB,0BAA2B,SAAS,CAAC,GAAG,sBAAsB,UAAU,WAAW,GAAG,eAAe,IAAI,gBAAgB,CAAC;AAAA,QACjN,OAAO;AAAA,QACP,OAAO;AAAA,MACR,CAAC;AAAA,IACF;AACA,SAAK,mDAAmD;AAAA,EACzD;AAAA,EAEQ,qDAAqD;AAC5D,eAAW,UAAU,KAAK,wBAAwB,aAAa,EAAE,SAAS;AACzE,YAAM,YAAY,iCAAiC,OAAO,IAAI,SAAS,CAAC;AACxE,UAAI,CAAC,iBAAiB,WAAW,SAAS,GAAG;AAC5C,yBAAiB,gBAAgB,WAAW,MAAM;AACjD,cAAI,KAAK,wBAAwB,kBAAkB,MAAM,eAAe,QAAQ;AAC/E,mBAAO,KAAK,mBAAmB,sBAAsB,EAAE,YAAY,MAAM,CAAC;AAAA,UAC3E,OAAO;AACN,mBAAO,KAAK,mBAAmB,mBAAmB,EAAE,WAAW,OAAO,KAAK,YAAY,MAAM,CAAC;AAAA,UAC/F;AAAA,QACD,CAAC;AACD,qBAAa,eAAe,OAAO,aAAa;AAAA,UAC/C,SAAS;AAAA,YACR,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,MAAM;AAAA,UACP;AAAA,UACA,MAAM,eAAe,IAAI,mBAAmB,SAAS,UAAU,KAAK,mBAAmB,0BAA0B,OAAO,GAAG,EAAG,SAAS,CAAC,GAAG,eAAe,IAAI,gBAAgB,CAAC;AAAA,UAC/K,OAAO;AAAA,UACP,OAAO;AAAA,QACR,CAAC;AAAA,MACF;AAAA,IACD;AAAA,EACD;AACD;AAriCM,iCAAN;AAAA,EAKG;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAXG;AAuiCN,IAAM,kCAAN,cAA8C,WAA6C;AAAA,EAC1F,YAC2C,wBACC,yBAC1C;AACD,UAAM;AAHoC;AACC;AAG3C,SAAK,mCAAmC;AAAA,EACzC;AAAA,EAttCD,OA+sC2F;AAAA;AAAA;AAAA,EASlF,qCAAqC;AAC5C,UAAM,0DAA0D,KAAK,UAAU,IAAI,kBAAkB,CAAC;AACtG,UAAM,6BAA6B,eAAe;AAAA,MACjD,eAAe;AAAA,QACd,mBAAmB,SAAS,UAAU,KAAK,uBAAuB,eAAe,iBAAiB,SAAS,CAAC;AAAA,QAC5G,mBAAmB,SAAS,UAAU,KAAK,wBAAwB,eAAe,iBAAiB,SAAS,CAAC;AAAA,MAAC;AAAA,MAC/G,eAAe,IAAI,gBAAgB;AAAA,IAAC;AACrC,UAAM,+CAA+C,6BAAM;AAC1D,8DAAwD,QAAQ;AAChE,8DAAwD,QAAQ,gBAAgB,cAAc,QAAQ;AAAA,QACrG,cAAc;AACb,gBAAM;AAAA,YACL,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,MAAM;AAAA,YACN,MAAM,CAAC;AAAA,cACN,IAAI,OAAO;AAAA,cACX,MAAM;AAAA,cACN,OAAO;AAAA,cACP,OAAO;AAAA,YACR,CAAC;AAAA,UACF,CAAC;AAAA,QACF;AAAA,QACA,IAAI,UAA4B,MAAkC;AACjE,iBAAO,yBAAyB,IAAI;AACpC,iBAAO,SAAS,IAAI,mBAAmB,EAAE,iBAAiB,EAAE,YAAY,OAAO,GAAG,KAAK,CAAC;AAAA,QACzF;AAAA,MACD,CAAC;AAAA,IACF,GArBqD;AAuBrD,iDAA6C;AAC7C,SAAK,UAAU,KAAK,uBAAuB,0BAA0B,MAAM;AAE1E,mDAA6C;AAAA,IAC9C,CAAC,CAAC;AAEF,UAAM,uBAAuB,eAAe,IAAI,yBAAyB,6BAA6B,UAAU,CAAC;AACjH,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,OAAO,IAAI,UAAU,oBAAoB,sBAAsB;AAAA,UAC/D,MAAM;AAAA,UACN,MAAM,CAAC;AAAA,YACN,IAAI,OAAO;AAAA,YACX,MAAM;AAAA,YACN,OAAO;AAAA,YACP,OAAO;AAAA,UACR,CAAC;AAAA,QACF,CAAC;AAAA,MACF;AAAA,MACA,IAAI,UAA4B;AAC/B,cAAM,aAAa,SAAS,IAAI,cAAc,EAAE;AAChD,YAAI,sBAAsB,iBAAiB;AAC1C,iBAAO,WAAW,qBAAqB;AAAA,QACxC;AACA,eAAO;AAAA,MACR;AAAA,IACD,CAAC,CAAC;AAAA,EACH;AACD;AArEM,kCAAN;AAAA,EAEG;AAAA,EACA;AAAA,GAHG;AAuEN,MAAM,iCAAiC,SAAS,GAAoC,oBAAoB,SAAS;AACjH,+BAA+B,+BAA+B,IAAI,gCAAgC,eAAe,YAAY;AAC7H,+BAA+B,wBAAwB,IAAI,yBAAyB,eAAe,YAAY;AAC/G,+BAA+B,8BAA8B,iCAAiC,eAAe,QAAQ;AAErH,2BAA2B,2BAA2B,IAAI,4BAA4B,gCAAgC,gBAAgB;AAItI,aAAa,eAAe,OAAO,iBAAiB;AAAA,EACnD,OAAO,IAAI,SAAS,EAAE,KAAK,iBAAiB,SAAS,CAAC,uBAAuB,EAAE,GAAG,eAAe;AAAA,EACjG,SAAS,OAAO;AAAA,EAChB,OAAO;AAAA,EACP,OAAO;AAAA,EACP,MAAM,mBAAmB,UAAU;AAAA;AACpC,CAAC;",
  "names": ["category"]
}
