{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/preferences/browser/tocTree.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from \"../../../../base/browser/dom.js\";\nimport { getDefaultHoverDelegate } from \"../../../../base/browser/ui/hover/hoverDelegateFactory.js\";\nimport type { IListVirtualDelegate } from \"../../../../base/browser/ui/list/list.js\";\nimport {\n\tDefaultStyleController,\n\ttype IListAccessibilityProvider,\n} from \"../../../../base/browser/ui/list/listWidget.js\";\nimport { RenderIndentGuides } from \"../../../../base/browser/ui/tree/abstractTree.js\";\nimport type {\n\tITreeElement,\n\tITreeNode,\n\tITreeRenderer,\n} from \"../../../../base/browser/ui/tree/tree.js\";\nimport { Iterable } from \"../../../../base/common/iterator.js\";\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tIListService,\n\ttype IWorkbenchObjectTreeOptions,\n\tWorkbenchObjectTree,\n} from \"../../../../platform/list/browser/listService.js\";\nimport { getListStyles } from \"../../../../platform/theme/browser/defaultStyles.js\";\nimport {\n\teditorBackground,\n\tfocusBorder,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport { IWorkbenchEnvironmentService } from \"../../../services/environment/common/environmentService.js\";\nimport {\n\tsettingsHeaderForeground,\n\tsettingsHeaderHoverForeground,\n} from \"../common/settingsEditorColorRegistry.js\";\nimport { SettingsTreeFilter } from \"./settingsTree.js\";\nimport {\n\ttype ISettingsEditorViewState,\n\ttype SearchResultModel,\n\ttype SettingsTreeElement,\n\tSettingsTreeGroupElement,\n\tSettingsTreeSettingElement,\n} from \"./settingsTreeModels.js\";\n\nconst $ = DOM.$;\n\nexport class TOCTreeModel {\n\tprivate _currentSearchModel: SearchResultModel | null = null;\n\tprivate _settingsTreeRoot!: SettingsTreeGroupElement;\n\n\tconstructor(\n\t\tprivate _viewState: ISettingsEditorViewState,\n\t\t@IWorkbenchEnvironmentService private environmentService: IWorkbenchEnvironmentService\n\t) {\n\t}\n\n\tget settingsTreeRoot(): SettingsTreeGroupElement {\n\t\treturn this._settingsTreeRoot;\n\t}\n\n\tset settingsTreeRoot(value: SettingsTreeGroupElement) {\n\t\tthis._settingsTreeRoot = value;\n\t\tthis.update();\n\t}\n\n\tget currentSearchModel(): SearchResultModel | null {\n\t\treturn this._currentSearchModel;\n\t}\n\n\tset currentSearchModel(model: SearchResultModel | null) {\n\t\tthis._currentSearchModel = model;\n\t\tthis.update();\n\t}\n\n\tget children(): SettingsTreeElement[] {\n\t\treturn this._settingsTreeRoot.children;\n\t}\n\n\tupdate(): void {\n\t\tif (this._settingsTreeRoot) {\n\t\t\tthis.updateGroupCount(this._settingsTreeRoot);\n\t\t}\n\t}\n\n\tprivate updateGroupCount(group: SettingsTreeGroupElement): void {\n\t\tgroup.children.forEach((child) => {\n\t\t\tif (child instanceof SettingsTreeGroupElement) {\n\t\t\t\tthis.updateGroupCount(child);\n\t\t\t}\n\t\t});\n\n\t\tconst childCount = group.children\n\t\t\t.filter((child) => child instanceof SettingsTreeGroupElement)\n\t\t\t.reduce(\n\t\t\t\t(acc, cur) => acc + (<SettingsTreeGroupElement>cur).count!,\n\t\t\t\t0,\n\t\t\t);\n\n\t\tgroup.count = childCount + this.getGroupCount(group);\n\t}\n\n\tprivate getGroupCount(group: SettingsTreeGroupElement): number {\n\t\treturn group.children.filter((child) => {\n\t\t\tif (!(child instanceof SettingsTreeSettingElement)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tthis._currentSearchModel &&\n\t\t\t\t!this._currentSearchModel.root.containsSetting(\n\t\t\t\t\tchild.setting.key,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Check everything that the SettingsFilter checks except whether it's filtered by a category\n\t\t\tconst isRemote = !!this.environmentService.remoteAuthority;\n\t\t\treturn (\n\t\t\t\tchild.matchesScope(this._viewState.settingsTarget, isRemote) &&\n\t\t\t\tchild.matchesAllTags(this._viewState.tagFilters) &&\n\t\t\t\tchild.matchesAnyFeature(this._viewState.featureFilters) &&\n\t\t\t\tchild.matchesAnyExtension(this._viewState.extensionFilters) &&\n\t\t\t\tchild.matchesAnyId(this._viewState.idFilters)\n\t\t\t);\n\t\t}).length;\n\t}\n}\n\nconst TOC_ENTRY_TEMPLATE_ID = \"settings.toc.entry\";\n\ninterface ITOCEntryTemplate {\n\tlabelElement: HTMLElement;\n\tcountElement: HTMLElement;\n\telementDisposables: DisposableStore;\n}\n\nexport class TOCRenderer\n\timplements ITreeRenderer<SettingsTreeGroupElement, never, ITOCEntryTemplate>\n{\n\ttemplateId = TOC_ENTRY_TEMPLATE_ID;\n\n\tconstructor(private readonly _hoverService: IHoverService) {}\n\n\trenderTemplate(container: HTMLElement): ITOCEntryTemplate {\n\t\treturn {\n\t\t\tlabelElement: DOM.append(container, $(\".settings-toc-entry\")),\n\t\t\tcountElement: DOM.append(container, $(\".settings-toc-count\")),\n\t\t\telementDisposables: new DisposableStore(),\n\t\t};\n\t}\n\n\trenderElement(\n\t\tnode: ITreeNode<SettingsTreeGroupElement>,\n\t\tindex: number,\n\t\ttemplate: ITOCEntryTemplate,\n\t): void {\n\t\ttemplate.elementDisposables.clear();\n\n\t\tconst element = node.element;\n\t\tconst count = element.count;\n\t\tconst label = element.label;\n\n\t\ttemplate.labelElement.textContent = label;\n\t\ttemplate.elementDisposables.add(\n\t\t\tthis._hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\ttemplate.labelElement,\n\t\t\t\tlabel,\n\t\t\t),\n\t\t);\n\n\t\tif (count) {\n\t\t\ttemplate.countElement.textContent = ` (${count})`;\n\t\t} else {\n\t\t\ttemplate.countElement.textContent = \"\";\n\t\t}\n\t}\n\n\tdisposeTemplate(templateData: ITOCEntryTemplate): void {\n\t\ttemplateData.elementDisposables.dispose();\n\t}\n}\n\nclass TOCTreeDelegate implements IListVirtualDelegate<SettingsTreeElement> {\n\tgetTemplateId(element: SettingsTreeElement): string {\n\t\treturn TOC_ENTRY_TEMPLATE_ID;\n\t}\n\n\tgetHeight(element: SettingsTreeElement): number {\n\t\treturn 22;\n\t}\n}\n\nexport function createTOCIterator(\n\tmodel: TOCTreeModel | SettingsTreeGroupElement,\n\ttree: TOCTree,\n): Iterable<ITreeElement<SettingsTreeGroupElement>> {\n\tconst groupChildren = <SettingsTreeGroupElement[]>(\n\t\tmodel.children.filter((c) => c instanceof SettingsTreeGroupElement)\n\t);\n\n\treturn Iterable.map(groupChildren, (g) => {\n\t\tconst hasGroupChildren = g.children.some(\n\t\t\t(c) => c instanceof SettingsTreeGroupElement,\n\t\t);\n\n\t\treturn {\n\t\t\telement: g,\n\t\t\tcollapsed: undefined,\n\t\t\tcollapsible: hasGroupChildren,\n\t\t\tchildren:\n\t\t\t\tg instanceof SettingsTreeGroupElement\n\t\t\t\t\t? createTOCIterator(g, tree)\n\t\t\t\t\t: undefined,\n\t\t};\n\t});\n}\n\nclass SettingsAccessibilityProvider\n\timplements IListAccessibilityProvider<SettingsTreeGroupElement>\n{\n\tgetWidgetAriaLabel(): string {\n\t\treturn localize(\n\t\t\t{\n\t\t\t\tkey: \"settingsTOC\",\n\t\t\t\tcomment: [\n\t\t\t\t\t\"A label for the table of contents for the full settings list\",\n\t\t\t\t],\n\t\t\t},\n\t\t\t\"Settings Table of Contents\",\n\t\t);\n\t}\n\n\tgetAriaLabel(element: SettingsTreeElement): string {\n\t\tif (!element) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\tif (element instanceof SettingsTreeGroupElement) {\n\t\t\treturn localize(\"groupRowAriaLabel\", \"{0}, group\", element.label);\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\tgetAriaLevel(element: SettingsTreeGroupElement): number {\n\t\tlet i = 1;\n\t\twhile (element instanceof SettingsTreeGroupElement && element.parent) {\n\t\t\ti++;\n\t\t\telement = element.parent;\n\t\t}\n\n\t\treturn i;\n\t}\n}\n\nexport class TOCTree extends WorkbenchObjectTree<SettingsTreeGroupElement> {\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\tviewState: ISettingsEditorViewState,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IListService listService: IListService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\t// test open mode\n\n\t\tconst filter = instantiationService.createInstance(\n\t\t\tSettingsTreeFilter,\n\t\t\tviewState,\n\t\t);\n\t\tconst options: IWorkbenchObjectTreeOptions<\n\t\t\tSettingsTreeGroupElement,\n\t\t\tvoid\n\t\t> = {\n\t\t\tfilter,\n\t\t\tmultipleSelectionSupport: false,\n\t\t\tidentityProvider: {\n\t\t\t\tgetId(e) {\n\t\t\t\t\treturn e.id;\n\t\t\t\t},\n\t\t\t},\n\t\t\tstyleController: (id) =>\n\t\t\t\tnew DefaultStyleController(DOM.createStyleSheet(container), id),\n\t\t\taccessibilityProvider: instantiationService.createInstance(\n\t\t\t\tSettingsAccessibilityProvider,\n\t\t\t),\n\t\t\tcollapseByDefault: true,\n\t\t\thorizontalScrolling: false,\n\t\t\thideTwistiesOfChildlessElements: true,\n\t\t\trenderIndentGuides: RenderIndentGuides.None,\n\t\t};\n\n\t\tsuper(\n\t\t\t\"SettingsTOC\",\n\t\t\tcontainer,\n\t\t\tnew TOCTreeDelegate(),\n\t\t\t[new TOCRenderer(hoverService)],\n\t\t\toptions,\n\t\t\tinstantiationService,\n\t\t\tcontextKeyService,\n\t\t\tlistService,\n\t\t\tconfigurationService,\n\t\t);\n\n\t\tthis.style(\n\t\t\tgetListStyles({\n\t\t\t\tlistBackground: editorBackground,\n\t\t\t\tlistFocusOutline: focusBorder,\n\t\t\t\tlistActiveSelectionBackground: editorBackground,\n\t\t\t\tlistActiveSelectionForeground: settingsHeaderForeground,\n\t\t\t\tlistFocusAndSelectionBackground: editorBackground,\n\t\t\t\tlistFocusAndSelectionForeground: settingsHeaderForeground,\n\t\t\t\tlistFocusBackground: editorBackground,\n\t\t\t\tlistFocusForeground: settingsHeaderHoverForeground,\n\t\t\t\tlistHoverForeground: settingsHeaderHoverForeground,\n\t\t\t\tlistHoverBackground: editorBackground,\n\t\t\t\tlistInactiveSelectionBackground: editorBackground,\n\t\t\t\tlistInactiveSelectionForeground: settingsHeaderForeground,\n\t\t\t\tlistInactiveFocusBackground: editorBackground,\n\t\t\t\tlistInactiveFocusOutline: editorBackground,\n\t\t\t\ttreeIndentGuidesStroke: undefined,\n\t\t\t\ttreeInactiveIndentGuidesStroke: undefined,\n\t\t\t}),\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
