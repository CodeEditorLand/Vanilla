{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/preferences/browser/preferencesEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tDisposable,\n\tDisposableStore,\n} from \"../../../../base/common/lifecycle.js\";\nimport type { ICodeEditor } from \"../../../../editor/browser/editorBrowser.js\";\nimport { ConfigurationTarget } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IWorkspaceContextService } from \"../../../../platform/workspace/common/workspace.js\";\nimport { IPreferencesService } from \"../../../services/preferences/common/preferences.js\";\nimport { SettingsEditorModel } from \"../../../services/preferences/common/preferencesModels.js\";\nimport {\n\ttype IPreferencesRenderer,\n\tUserSettingsRenderer,\n\tWorkspaceSettingsRenderer,\n} from \"./preferencesRenderers.js\";\n\nexport class SettingsEditorContribution extends Disposable {\n\tstatic readonly ID: string = \"editor.contrib.settings\";\n\n\tprivate currentRenderer: IPreferencesRenderer | undefined;\n\tprivate readonly disposables = this._register(new DisposableStore());\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IPreferencesService private readonly preferencesService: IPreferencesService,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService\n\t) {\n\t\tsuper();\n\t\tthis._createPreferencesRenderer();\n\t\tthis._register(this.editor.onDidChangeModel(e => this._createPreferencesRenderer()));\n\t\tthis._register(this.workspaceContextService.onDidChangeWorkbenchState(() => this._createPreferencesRenderer()));\n\t}\n\n\tprivate async _createPreferencesRenderer(): Promise<void> {\n\t\tthis.disposables.clear();\n\t\tthis.currentRenderer = undefined;\n\n\t\tconst model = this.editor.getModel();\n\t\tif (model && /\\.(json|code-workspace)$/.test(model.uri.path)) {\n\t\t\t// Fast check: the preferences renderer can only appear\n\t\t\t// in settings files or workspace files\n\t\t\tconst settingsModel =\n\t\t\t\tawait this.preferencesService.createPreferencesEditorModel(\n\t\t\t\t\tmodel.uri,\n\t\t\t\t);\n\t\t\tif (\n\t\t\t\tsettingsModel instanceof SettingsEditorModel &&\n\t\t\t\tthis.editor.getModel()\n\t\t\t) {\n\t\t\t\tthis.disposables.add(settingsModel);\n\t\t\t\tswitch (settingsModel.configurationTarget) {\n\t\t\t\t\tcase ConfigurationTarget.WORKSPACE:\n\t\t\t\t\t\tthis.currentRenderer = this.disposables.add(\n\t\t\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\t\t\tWorkspaceSettingsRenderer,\n\t\t\t\t\t\t\t\tthis.editor,\n\t\t\t\t\t\t\t\tsettingsModel,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis.currentRenderer = this.disposables.add(\n\t\t\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\t\t\tUserSettingsRenderer,\n\t\t\t\t\t\t\t\tthis.editor,\n\t\t\t\t\t\t\t\tsettingsModel,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.currentRenderer?.render();\n\t\t}\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA;AAAA,EACC;AAAA,EACA;AAAA,OACM;AAEP,SAAS,2BAA2B;AACpC,SAAS,6BAA6B;AACtC,SAAS,gCAAgC;AACzC,SAAS,2BAA2B;AACpC,SAAS,2BAA2B;AACpC;AAAA,EAEC;AAAA,EACA;AAAA,OACM;AAEA,IAAM,6BAAN,cAAyC,WAAW;AAAA,EAM1D,YACkB,QACuB,sBACF,oBACK,yBAC1C;AACD,UAAM;AALW;AACuB;AACF;AACK;AAG3C,SAAK,2BAA2B;AAChC,SAAK,UAAU,KAAK,OAAO,iBAAiB,OAAK,KAAK,2BAA2B,CAAC,CAAC;AACnF,SAAK,UAAU,KAAK,wBAAwB,0BAA0B,MAAM,KAAK,2BAA2B,CAAC,CAAC;AAAA,EAC/G;AAAA,EArCD,OAqB2D;AAAA;AAAA;AAAA,EAC1D,OAAgB,KAAa;AAAA,EAErB;AAAA,EACS,cAAc,KAAK,UAAU,IAAI,gBAAgB,CAAC;AAAA,EAcnE,MAAc,6BAA4C;AACzD,SAAK,YAAY,MAAM;AACvB,SAAK,kBAAkB;AAEvB,UAAM,QAAQ,KAAK,OAAO,SAAS;AACnC,QAAI,SAAS,2BAA2B,KAAK,MAAM,IAAI,IAAI,GAAG;AAG7D,YAAM,gBACL,MAAM,KAAK,mBAAmB;AAAA,QAC7B,MAAM;AAAA,MACP;AACD,UACC,yBAAyB,uBACzB,KAAK,OAAO,SAAS,GACpB;AACD,aAAK,YAAY,IAAI,aAAa;AAClC,gBAAQ,cAAc,qBAAqB;AAAA,UAC1C,KAAK,oBAAoB;AACxB,iBAAK,kBAAkB,KAAK,YAAY;AAAA,cACvC,KAAK,qBAAqB;AAAA,gBACzB;AAAA,gBACA,KAAK;AAAA,gBACL;AAAA,cACD;AAAA,YACD;AACA;AAAA,UACD;AACC,iBAAK,kBAAkB,KAAK,YAAY;AAAA,cACvC,KAAK,qBAAqB;AAAA,gBACzB;AAAA,gBACA,KAAK;AAAA,gBACL;AAAA,cACD;AAAA,YACD;AACA;AAAA,QACF;AAAA,MACD;AAEA,WAAK,iBAAiB,OAAO;AAAA,IAC9B;AAAA,EACD;AACD;AA5Da,6BAAN;AAAA,EAQJ;AAAA,EACA;AAAA,EACA;AAAA,GAVU;",
  "names": []
}
