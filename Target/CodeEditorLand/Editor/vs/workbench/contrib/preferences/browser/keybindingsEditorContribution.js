var k=Object.defineProperty;var M=Object.getOwnPropertyDescriptor;var m=(l,a,e,i)=>{for(var t=i>1?void 0:i?M(a,e):a,r=l.length-1,o;r>=0;r--)(o=l[r])&&(t=(i?o(a,e,t):o(t))||t);return i&&t&&k(a,e,t),t},g=(l,a)=>(e,i)=>a(e,i,l);import*as _ from"../../../../nls.js";import{RunOnceScheduler as C}from"../../../../base/common/async.js";import{MarkdownString as v}from"../../../../base/common/htmlContent.js";import{Disposable as b,MutableDisposable as E}from"../../../../base/common/lifecycle.js";import{IKeybindingService as R}from"../../../../platform/keybinding/common/keybinding.js";import{IInstantiationService as L}from"../../../../platform/instantiation/common/instantiation.js";import{Range as A}from"../../../../editor/common/core/range.js";import{registerEditorContribution as P,EditorContributionInstantiation as T}from"../../../../editor/browser/editorExtensions.js";import{SnippetController2 as K}from"../../../../editor/contrib/snippet/browser/snippetController2.js";import{SmartSnippetInserter as N}from"../common/smartSnippetInserter.js";import{DefineKeybindingOverlayWidget as x}from"./keybindingWidgets.js";import{parseTree as U}from"../../../../base/common/json.js";import{WindowsNativeResolvedKeybinding as O}from"../../../services/keybinding/common/windowsKeyboardMapper.js";import{themeColorFromId as D}from"../../../../platform/theme/common/themeService.js";import{overviewRulerInfo as W,overviewRulerError as F}from"../../../../editor/common/core/editorColorRegistry.js";import{TrackedRangeStickiness as z,OverviewRulerLane as B}from"../../../../editor/common/model.js";import{KeybindingParser as I}from"../../../../base/common/keybindingParser.js";import{assertIsDefined as S}from"../../../../base/common/types.js";import{isEqual as Y}from"../../../../base/common/resources.js";import{IUserDataProfileService as q}from"../../../services/userDataProfile/common/userDataProfile.js";import{DEFINE_KEYBINDING_EDITOR_CONTRIB_ID as G}from"../../../services/preferences/common/preferences.js";const $=_.localize("defineKeybinding.kbLayoutErrorMessage","You won't be able to produce this key combination under your current keyboard layout.");let p=class extends b{constructor(e,i,t){super();this._editor=e;this._instantiationService=i;this._userDataProfileService=t;this._defineWidget=this._register(this._instantiationService.createInstance(x,this._editor)),this._register(this._editor.onDidChangeModel(r=>this._update())),this._update()}_keybindingDecorationRenderer=this._register(new E);_defineWidget;_update(){this._keybindingDecorationRenderer.value=w(this._editor,this._userDataProfileService)?this._instantiationService.createInstance(u,this._editor):void 0}showDefineKeybindingWidget(){w(this._editor,this._userDataProfileService)&&this._defineWidget.start().then(e=>this._onAccepted(e))}_onAccepted(e){if(this._editor.focus(),e&&this._editor.hasModel()){new RegExp(/\\/g).test(e)&&(e=e.slice(0,-1)+"\\\\");let r=["{",'	"key": '+JSON.stringify(e)+",",'	"command": "${1:commandId}",','	"when": "${2:editorTextFocus}"',"}$0"].join(`
`);const o=N.insertSnippet(this._editor.getModel(),this._editor.getPosition());r=o.prepend+r+o.append,this._editor.setPosition(o.position),K.get(this._editor)?.insert(r,{overwriteBefore:0,overwriteAfter:0})}}};p=m([g(1,L),g(2,q)],p);let u=class extends b{constructor(e,i){super();this._editor=e;this._keybindingService=i;this._updateDecorations=this._register(new C(()=>this._updateDecorationsNow(),500));const t=S(this._editor.getModel());this._register(t.onDidChangeContent(()=>this._updateDecorations.schedule())),this._register(this._keybindingService.onDidUpdateKeybindings(()=>this._updateDecorations.schedule())),this._register({dispose:()=>{this._dec.clear(),this._updateDecorations.cancel()}}),this._updateDecorations.schedule()}_updateDecorations;_dec=this._editor.createDecorationsCollection();_updateDecorationsNow(){const e=S(this._editor.getModel()),i=[],t=U(e.getValue());if(t&&Array.isArray(t.children))for(let r=0,o=t.children.length;r<o;r++){const d=t.children[r],n=this._getDecorationForEntry(e,d);n!==null&&i.push(n)}this._dec.set(i)}_getDecorationForEntry(e,i){if(!Array.isArray(i.children))return null;for(let t=0,r=i.children.length;t<r;t++){const o=i.children[t];if(o.type!=="property"||!Array.isArray(o.children)||o.children.length!==2||o.children[0].value!=="key")continue;const n=o.children[1];if(n.type!=="string")continue;const h=this._keybindingService.resolveUserBinding(n.value);if(h.length===0)return this._createDecoration(!0,null,null,e,n);const s=h[0];let c=null;if(s instanceof O&&(c=s.getUSLabel()),!s.isWYSIWYG()){const y=s.getLabel();return typeof y=="string"&&n.value.toLowerCase()===y.toLowerCase()?null:this._createDecoration(!1,s.getLabel(),c,e,n)}if(/abnt_|oem_/.test(n.value))return this._createDecoration(!1,s.getLabel(),c,e,n);const f=s.getUserSettingsLabel();return typeof f=="string"&&!u._userSettingsFuzzyEquals(n.value,f)?this._createDecoration(!1,s.getLabel(),c,e,n):null}return null}static _userSettingsFuzzyEquals(e,i){if(e=e.trim().toLowerCase(),i=i.trim().toLowerCase(),e===i)return!0;const t=I.parseKeybinding(e),r=I.parseKeybinding(i);return t===null&&r===null?!0:!t||!r?!1:t.equals(r)}_createDecoration(e,i,t,r,o){let d,n,h;e?(d=new v().appendText($),n="keybindingError",h=D(F)):(t&&i!==t?d=new v(_.localize({key:"defineKeybinding.kbLayoutLocalAndUSMessage",comment:["Please translate maintaining the stars (*) around the placeholders such that they will be rendered in bold.","The placeholders will contain a keyboard combination e.g. Ctrl+Shift+/"]},"**{0}** for your current keyboard layout (**{1}** for US standard).",i,t)):d=new v(_.localize({key:"defineKeybinding.kbLayoutLocalMessage",comment:["Please translate maintaining the stars (*) around the placeholder such that it will be rendered in bold.","The placeholder will contain a keyboard combination e.g. Ctrl+Shift+/"]},"**{0}** for your current keyboard layout.",i)),n="keybindingInfo",h=D(W));const s=r.getPositionAt(o.offset),c=r.getPositionAt(o.offset+o.length);return{range:new A(s.lineNumber,s.column,c.lineNumber,c.column),options:{description:"keybindings-widget",stickiness:z.NeverGrowsWhenTypingAtEdges,className:n,hoverMessage:d,overviewRuler:{color:h,position:B.Right}}}}};u=m([g(1,R)],u);function w(l,a){const e=l.getModel();return e?Y(e.uri,a.currentProfile.keybindingsResource):!1}P(G,p,T.AfterFirstRender);export{u as KeybindingEditorDecorationsRenderer};
