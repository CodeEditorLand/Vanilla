{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/preferences/browser/preferencesIcons.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { localize } from '../../../../nls.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\n\nexport const settingsScopeDropDownIcon = registerIcon('settings-folder-dropdown', Codicon.triangleDown, localize('settingsScopeDropDownIcon', 'Icon for the folder dropdown button in the split JSON Settings editor.'));\nexport const settingsMoreActionIcon = registerIcon('settings-more-action', Codicon.gear, localize('settingsMoreActionIcon', 'Icon for the \\'more actions\\' action in the Settings UI.'));\n\nexport const keybindingsRecordKeysIcon = registerIcon('keybindings-record-keys', Codicon.recordKeys, localize('keybindingsRecordKeysIcon', 'Icon for the \\'record keys\\' action in the keybinding UI.'));\nexport const keybindingsSortIcon = registerIcon('keybindings-sort', Codicon.sortPrecedence, localize('keybindingsSortIcon', 'Icon for the \\'sort by precedence\\' toggle in the keybinding UI.'));\n\nexport const keybindingsEditIcon = registerIcon('keybindings-edit', Codicon.edit, localize('keybindingsEditIcon', 'Icon for the edit action in the keybinding UI.'));\nexport const keybindingsAddIcon = registerIcon('keybindings-add', Codicon.add, localize('keybindingsAddIcon', 'Icon for the add action in the keybinding UI.'));\n\nexport const settingsEditIcon = registerIcon('settings-edit', Codicon.edit, localize('settingsEditIcon', 'Icon for the edit action in the Settings UI.'));\n\nexport const settingsRemoveIcon = registerIcon('settings-remove', Codicon.close, localize('settingsRemoveIcon', 'Icon for the remove action in the Settings UI.'));\nexport const settingsDiscardIcon = registerIcon('settings-discard', Codicon.discard, localize('preferencesDiscardIcon', 'Icon for the discard action in the Settings UI.'));\n\nexport const preferencesClearInputIcon = registerIcon('preferences-clear-input', Codicon.clearAll, localize('preferencesClearInput', 'Icon for clear input in the Settings and keybinding UI.'));\nexport const preferencesFilterIcon = registerIcon('preferences-filter', Codicon.filter, localize('settingsFilter', 'Icon for the button that suggests filters for the Settings UI.'));\nexport const preferencesOpenSettingsIcon = registerIcon('preferences-open-settings', Codicon.goToFile, localize('preferencesOpenSettings', 'Icon for open settings commands.'));\n"],
  "mappings": "AAKA,SAAS,eAAe;AACxB,SAAS,gBAAgB;AACzB,SAAS,oBAAoB;AAEtB,MAAM,4BAA4B,aAAa,4BAA4B,QAAQ,cAAc,SAAS,6BAA6B,wEAAwE,CAAC;AAChN,MAAM,yBAAyB,aAAa,wBAAwB,QAAQ,MAAM,SAAS,0BAA0B,wDAA0D,CAAC;AAEhL,MAAM,4BAA4B,aAAa,2BAA2B,QAAQ,YAAY,SAAS,6BAA6B,yDAA2D,CAAC;AAChM,MAAM,sBAAsB,aAAa,oBAAoB,QAAQ,gBAAgB,SAAS,uBAAuB,gEAAkE,CAAC;AAExL,MAAM,sBAAsB,aAAa,oBAAoB,QAAQ,MAAM,SAAS,uBAAuB,gDAAgD,CAAC;AAC5J,MAAM,qBAAqB,aAAa,mBAAmB,QAAQ,KAAK,SAAS,sBAAsB,+CAA+C,CAAC;AAEvJ,MAAM,mBAAmB,aAAa,iBAAiB,QAAQ,MAAM,SAAS,oBAAoB,8CAA8C,CAAC;AAEjJ,MAAM,qBAAqB,aAAa,mBAAmB,QAAQ,OAAO,SAAS,sBAAsB,gDAAgD,CAAC;AAC1J,MAAM,sBAAsB,aAAa,oBAAoB,QAAQ,SAAS,SAAS,0BAA0B,iDAAiD,CAAC;AAEnK,MAAM,4BAA4B,aAAa,2BAA2B,QAAQ,UAAU,SAAS,yBAAyB,yDAAyD,CAAC;AACxL,MAAM,wBAAwB,aAAa,sBAAsB,QAAQ,QAAQ,SAAS,kBAAkB,gEAAgE,CAAC;AAC7K,MAAM,8BAA8B,aAAa,6BAA6B,QAAQ,UAAU,SAAS,2BAA2B,kCAAkC,CAAC;",
  "names": []
}
