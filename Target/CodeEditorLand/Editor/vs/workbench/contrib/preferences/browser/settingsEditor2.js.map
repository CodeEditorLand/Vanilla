{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/preferences/browser/settingsEditor2.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from \"../../../../base/browser/dom.js\";\nimport { StandardKeyboardEvent } from \"../../../../base/browser/keyboardEvent.js\";\nimport { ActionBar } from \"../../../../base/browser/ui/actionbar/actionbar.js\";\nimport * as aria from \"../../../../base/browser/ui/aria/aria.js\";\nimport { Button } from \"../../../../base/browser/ui/button/button.js\";\nimport type { ITreeElement } from \"../../../../base/browser/ui/tree/tree.js\";\nimport { Action } from \"../../../../base/common/actions.js\";\nimport { Delayer } from \"../../../../base/common/async.js\";\nimport {\n\tCancellationToken,\n\tCancellationTokenSource,\n} from \"../../../../base/common/cancellation.js\";\nimport { fromNow } from \"../../../../base/common/date.js\";\nimport { isCancellationError } from \"../../../../base/common/errors.js\";\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport { Iterable } from \"../../../../base/common/iterator.js\";\nimport { KeyCode } from \"../../../../base/common/keyCodes.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\tMutableDisposable,\n\tdispose,\n} from \"../../../../base/common/lifecycle.js\";\nimport * as platform from \"../../../../base/common/platform.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport \"./media/settingsEditor2.css\";\nimport {\n\tOrientation,\n\tSizing,\n\tSplitView,\n} from \"../../../../base/browser/ui/splitview/splitview.js\";\nimport type { CodeWindow } from \"../../../../base/browser/window.js\";\nimport { Color } from \"../../../../base/common/color.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { ILanguageService } from \"../../../../editor/common/languages/language.js\";\nimport { ITextResourceConfigurationService } from \"../../../../editor/common/services/textResourceConfiguration.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport {\n\tConfigurationTarget,\n\ttype IConfigurationUpdateOverrides,\n} from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tConfigurationScope,\n\tExtensions,\n\ttype IConfigurationRegistry,\n} from \"../../../../platform/configuration/common/configurationRegistry.js\";\nimport {\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tIExtensionGalleryService,\n\tIExtensionManagementService,\n\ttype IGalleryExtension,\n} from \"../../../../platform/extensionManagement/common/extensionManagement.js\";\nimport type { IExtensionManifest } from \"../../../../platform/extensions/common/extensions.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport { IEditorProgressService } from \"../../../../platform/progress/common/progress.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { defaultButtonStyles } from \"../../../../platform/theme/browser/defaultStyles.js\";\nimport {\n\tasCssVariable,\n\tbadgeBackground,\n\tbadgeForeground,\n\tcontrastBorder,\n\teditorForeground,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport {\n\tIUserDataSyncEnablementService,\n\tIUserDataSyncService,\n\tSyncStatus,\n} from \"../../../../platform/userDataSync/common/userDataSync.js\";\nimport { IWorkspaceTrustManagementService } from \"../../../../platform/workspace/common/workspaceTrust.js\";\nimport { registerNavigableContainer } from \"../../../browser/actions/widgetNavigationCommands.js\";\nimport { EditorPane } from \"../../../browser/parts/editor/editorPane.js\";\nimport type {\n\tIEditorMemento,\n\tIEditorOpenContext,\n\tIEditorPane,\n} from \"../../../common/editor.js\";\nimport { IWorkbenchConfigurationService } from \"../../../services/configuration/common/configuration.js\";\nimport {\n\ttype IEditorGroup,\n\tIEditorGroupsService,\n} from \"../../../services/editor/common/editorGroupsService.js\";\nimport { IExtensionService } from \"../../../services/extensions/common/extensions.js\";\nimport {\n\ttype IOpenSettingsOptions,\n\tIPreferencesService,\n\ttype ISearchResult,\n\ttype ISetting,\n\ttype ISettingsEditorModel,\n\ttype ISettingsEditorOptions,\n\ttype ISettingsGroup,\n\tSettingMatchType,\n\tSettingValueType,\n\tvalidateSettingsEditorOptions,\n} from \"../../../services/preferences/common/preferences.js\";\nimport type { SettingsEditor2Input } from \"../../../services/preferences/common/preferencesEditorInput.js\";\nimport {\n\tSettings2EditorModel,\n\tnullRange,\n} from \"../../../services/preferences/common/preferencesModels.js\";\nimport { IUserDataProfileService } from \"../../../services/userDataProfile/common/userDataProfile.js\";\nimport { IUserDataSyncWorkbenchService } from \"../../../services/userDataSync/common/userDataSync.js\";\nimport { SuggestEnabledInput } from \"../../codeEditor/browser/suggestEnabledInput/suggestEnabledInput.js\";\nimport {\n\tCONTEXT_SETTINGS_EDITOR,\n\tCONTEXT_SETTINGS_ROW_FOCUS,\n\tCONTEXT_SETTINGS_SEARCH_FOCUS,\n\tCONTEXT_TOC_ROW_FOCUS,\n\tENABLE_LANGUAGE_FILTER,\n\tEXTENSION_SETTING_TAG,\n\tFEATURE_SETTING_TAG,\n\tID_SETTING_TAG,\n\tIPreferencesSearchService,\n\ttype ISearchProvider,\n\tLANGUAGE_SETTING_TAG,\n\tMODIFIED_SETTING_TAG,\n\tPOLICY_SETTING_TAG,\n\tREQUIRE_TRUSTED_WORKSPACE_SETTING_TAG,\n\tSETTINGS_EDITOR_COMMAND_CLEAR_SEARCH_RESULTS,\n\tSETTINGS_EDITOR_COMMAND_SUGGEST_FILTERS,\n\tWORKSPACE_TRUST_SETTING_TAG,\n\tgetExperimentalExtensionToggleData,\n} from \"../common/preferences.js\";\nimport {\n\tsettingsHeaderBorder,\n\tsettingsSashBorder,\n\tsettingsTextInputBorder,\n} from \"../common/settingsEditorColorRegistry.js\";\nimport {\n\tpreferencesClearInputIcon,\n\tpreferencesFilterIcon,\n} from \"./preferencesIcons.js\";\nimport {\n\ttype SettingsTarget,\n\tSettingsTargetsWidget,\n} from \"./preferencesWidgets.js\";\nimport type { ISettingOverrideClickEvent } from \"./settingsEditorSettingIndicators.js\";\nimport {\n\ttype ITOCEntry,\n\tgetCommonlyUsedData,\n\ttocData,\n} from \"./settingsLayout.js\";\nimport { SettingsSearchFilterDropdownMenuActionViewItem } from \"./settingsSearchMenu.js\";\nimport {\n\tAbstractSettingRenderer,\n\ttype HeightChangeParams,\n\ttype ISettingLinkClickEvent,\n\tSettingTreeRenderers,\n\tSettingsTree,\n\tcreateTocTreeForExtensionSettings,\n\tresolveConfiguredUntrustedSettings,\n\tresolveSettingsTree,\n} from \"./settingsTree.js\";\nimport {\n\ttype ISettingsEditorViewState,\n\tSearchResultIdx,\n\tSearchResultModel,\n\ttype SettingsTreeElement,\n\ttype SettingsTreeGroupChild,\n\tSettingsTreeGroupElement,\n\tSettingsTreeModel,\n\tSettingsTreeSettingElement,\n\tparseQuery,\n} from \"./settingsTreeModels.js\";\nimport { TOCTree, TOCTreeModel, createTOCIterator } from \"./tocTree.js\";\n\nexport enum SettingsFocusContext {\n\tSearch = 0,\n\tTableOfContents = 1,\n\tSettingTree = 2,\n\tSettingControl = 3,\n}\n\nexport function createGroupIterator(\n\tgroup: SettingsTreeGroupElement,\n): Iterable<ITreeElement<SettingsTreeGroupChild>> {\n\treturn Iterable.map(group.children, (g) => {\n\t\treturn {\n\t\t\telement: g,\n\t\t\tchildren:\n\t\t\t\tg instanceof SettingsTreeGroupElement\n\t\t\t\t\t? createGroupIterator(g)\n\t\t\t\t\t: undefined,\n\t\t};\n\t});\n}\n\nconst $ = DOM.$;\n\ninterface IFocusEventFromScroll extends KeyboardEvent {\n\tfromScroll: true;\n}\n\nconst searchBoxLabel = localize(\"SearchSettings.AriaLabel\", \"Search settings\");\nconst SEARCH_TOC_BEHAVIOR_KEY = \"workbench.settings.settingsSearchTocBehavior\";\n\nconst SETTINGS_EDITOR_STATE_KEY = \"settingsEditorState\";\nexport class SettingsEditor2 extends EditorPane {\n\tstatic readonly ID: string = \"workbench.editor.settings2\";\n\tprivate static NUM_INSTANCES = 0;\n\tprivate static SEARCH_DEBOUNCE = 200;\n\tprivate static SETTING_UPDATE_FAST_DEBOUNCE = 200;\n\tprivate static SETTING_UPDATE_SLOW_DEBOUNCE = 1000;\n\tprivate static CONFIG_SCHEMA_UPDATE_DELAYER = 500;\n\tprivate static TOC_MIN_WIDTH = 100;\n\tprivate static TOC_RESET_WIDTH = 200;\n\tprivate static EDITOR_MIN_WIDTH = 500;\n\t// Below NARROW_TOTAL_WIDTH, we only render the editor rather than the ToC.\n\tprivate static NARROW_TOTAL_WIDTH: number =\n\t\tthis.TOC_RESET_WIDTH + this.EDITOR_MIN_WIDTH;\n\n\tprivate static SUGGESTIONS: string[] = [\n\t\t`@${MODIFIED_SETTING_TAG}`,\n\t\t\"@tag:notebookLayout\",\n\t\t\"@tag:notebookOutputLayout\",\n\t\t`@tag:${REQUIRE_TRUSTED_WORKSPACE_SETTING_TAG}`,\n\t\t`@tag:${WORKSPACE_TRUST_SETTING_TAG}`,\n\t\t\"@tag:sync\",\n\t\t\"@tag:usesOnlineServices\",\n\t\t\"@tag:telemetry\",\n\t\t\"@tag:accessibility\",\n\t\t`@${ID_SETTING_TAG}`,\n\t\t`@${EXTENSION_SETTING_TAG}`,\n\t\t`@${FEATURE_SETTING_TAG}scm`,\n\t\t`@${FEATURE_SETTING_TAG}explorer`,\n\t\t`@${FEATURE_SETTING_TAG}search`,\n\t\t`@${FEATURE_SETTING_TAG}debug`,\n\t\t`@${FEATURE_SETTING_TAG}extensions`,\n\t\t`@${FEATURE_SETTING_TAG}terminal`,\n\t\t`@${FEATURE_SETTING_TAG}task`,\n\t\t`@${FEATURE_SETTING_TAG}problems`,\n\t\t`@${FEATURE_SETTING_TAG}output`,\n\t\t`@${FEATURE_SETTING_TAG}comments`,\n\t\t`@${FEATURE_SETTING_TAG}remote`,\n\t\t`@${FEATURE_SETTING_TAG}timeline`,\n\t\t`@${FEATURE_SETTING_TAG}notebook`,\n\t\t`@${POLICY_SETTING_TAG}`,\n\t];\n\n\tprivate static shouldSettingUpdateFast(\n\t\ttype: SettingValueType | SettingValueType[],\n\t): boolean {\n\t\tif (Array.isArray(type)) {\n\t\t\t// nullable integer/number or complex\n\t\t\treturn false;\n\t\t}\n\t\treturn (\n\t\t\ttype === SettingValueType.Enum ||\n\t\t\ttype === SettingValueType.Array ||\n\t\t\ttype === SettingValueType.BooleanObject ||\n\t\t\ttype === SettingValueType.Object ||\n\t\t\ttype === SettingValueType.Complex ||\n\t\t\ttype === SettingValueType.Boolean ||\n\t\t\ttype === SettingValueType.Exclude ||\n\t\t\ttype === SettingValueType.Include\n\t\t);\n\t}\n\n\t// (!) Lots of props that are set once on the first render\n\tprivate defaultSettingsEditorModel!: Settings2EditorModel;\n\tprivate readonly modelDisposables: DisposableStore;\n\n\tprivate rootElement!: HTMLElement;\n\tprivate headerContainer!: HTMLElement;\n\tprivate bodyContainer!: HTMLElement;\n\tprivate searchWidget!: SuggestEnabledInput;\n\tprivate countElement!: HTMLElement;\n\tprivate controlsElement!: HTMLElement;\n\tprivate settingsTargetsWidget!: SettingsTargetsWidget;\n\n\tprivate splitView!: SplitView<number>;\n\n\tprivate settingsTreeContainer!: HTMLElement;\n\tprivate settingsTree!: SettingsTree;\n\tprivate settingRenderers!: SettingTreeRenderers;\n\tprivate tocTreeModel!: TOCTreeModel;\n\tprivate settingsTreeModel!: SettingsTreeModel;\n\tprivate noResultsMessage!: HTMLElement;\n\tprivate clearFilterLinkContainer!: HTMLElement;\n\n\tprivate tocTreeContainer!: HTMLElement;\n\tprivate tocTree!: TOCTree;\n\n\tprivate delayedFilterLogging: Delayer<void>;\n\tprivate searchDelayer: Delayer<void>;\n\tprivate searchInProgress: CancellationTokenSource | null = null;\n\n\tprivate searchInputDelayer: Delayer<void>;\n\tprivate updatedConfigSchemaDelayer: Delayer<void>;\n\n\tprivate settingFastUpdateDelayer: Delayer<void>;\n\tprivate settingSlowUpdateDelayer: Delayer<void>;\n\tprivate pendingSettingUpdate: {\n\t\tkey: string;\n\t\tvalue: any;\n\t\tlanguageFilter: string | undefined;\n\t} | null = null;\n\n\tprivate readonly viewState: ISettingsEditorViewState;\n\tprivate _searchResultModel: SearchResultModel | null = null;\n\tprivate searchResultLabel: string | null = null;\n\tprivate lastSyncedLabel: string | null = null;\n\tprivate settingsOrderByTocIndex: Map<string, number> | null = null;\n\n\tprivate tocRowFocused: IContextKey<boolean>;\n\tprivate settingRowFocused: IContextKey<boolean>;\n\tprivate inSettingsEditorContextKey: IContextKey<boolean>;\n\tprivate searchFocusContextKey: IContextKey<boolean>;\n\n\tprivate scheduledRefreshes: Map<string, DOM.IFocusTracker>;\n\tprivate _currentFocusContext: SettingsFocusContext =\n\t\tSettingsFocusContext.Search;\n\n\t/** Don't spam warnings */\n\tprivate hasWarnedMissingSettings = false;\n\tprivate tocTreeDisposed = false;\n\n\t/** Persist the search query upon reloads */\n\tprivate editorMemento: IEditorMemento<ISettingsEditor2State>;\n\n\tprivate tocFocusedElement: SettingsTreeGroupElement | null = null;\n\tprivate treeFocusedElement: SettingsTreeElement | null = null;\n\tprivate settingsTreeScrollTop = 0;\n\tprivate dimension!: DOM.Dimension;\n\n\tprivate installedExtensionIds: string[] = [];\n\tprivate dismissedExtensionSettings: string[] = [];\n\n\tprivate readonly DISMISSED_EXTENSION_SETTINGS_STORAGE_KEY =\n\t\t\"settingsEditor2.dismissedExtensionSettings\";\n\tprivate readonly DISMISSED_EXTENSION_SETTINGS_DELIMITER = \"\\t\";\n\n\tprivate readonly inputChangeListener: MutableDisposable<IDisposable>;\n\n\tconstructor(\n\t\tgroup: IEditorGroup,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IWorkbenchConfigurationService\n\t\tprivate readonly configurationService: IWorkbenchConfigurationService,\n\t\t@ITextResourceConfigurationService\n\t\ttextResourceConfigurationService: ITextResourceConfigurationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IPreferencesService\n\t\tprivate readonly preferencesService: IPreferencesService,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\t@IPreferencesSearchService\n\t\tprivate readonly preferencesSearchService: IPreferencesSearchService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IEditorGroupsService\n\t\tprotected editorGroupService: IEditorGroupsService,\n\t\t@IUserDataSyncWorkbenchService\n\t\tprivate readonly userDataSyncWorkbenchService: IUserDataSyncWorkbenchService,\n\t\t@IUserDataSyncEnablementService\n\t\tprivate readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@IWorkspaceTrustManagementService\n\t\tprivate readonly workspaceTrustManagementService: IWorkspaceTrustManagementService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@IExtensionManagementService\n\t\tprivate readonly extensionManagementService: IExtensionManagementService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IExtensionGalleryService\n\t\tprivate readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@IEditorProgressService\n\t\tprivate readonly editorProgressService: IEditorProgressService,\n\t\t@IUserDataProfileService\n\t\tuserDataProfileService: IUserDataProfileService,\n\t) {\n\t\tsuper(\n\t\t\tSettingsEditor2.ID,\n\t\t\tgroup,\n\t\t\ttelemetryService,\n\t\t\tthemeService,\n\t\t\tstorageService,\n\t\t);\n\t\tthis.delayedFilterLogging = new Delayer<void>(1000);\n\t\tthis.searchDelayer = new Delayer(300);\n\t\tthis.viewState = { settingsTarget: ConfigurationTarget.USER_LOCAL };\n\n\t\tthis.settingFastUpdateDelayer = new Delayer<void>(\n\t\t\tSettingsEditor2.SETTING_UPDATE_FAST_DEBOUNCE,\n\t\t);\n\t\tthis.settingSlowUpdateDelayer = new Delayer<void>(\n\t\t\tSettingsEditor2.SETTING_UPDATE_SLOW_DEBOUNCE,\n\t\t);\n\n\t\tthis.searchInputDelayer = new Delayer<void>(\n\t\t\tSettingsEditor2.SEARCH_DEBOUNCE,\n\t\t);\n\t\tthis.updatedConfigSchemaDelayer = new Delayer<void>(\n\t\t\tSettingsEditor2.CONFIG_SCHEMA_UPDATE_DELAYER,\n\t\t);\n\n\t\tthis.inSettingsEditorContextKey =\n\t\t\tCONTEXT_SETTINGS_EDITOR.bindTo(contextKeyService);\n\t\tthis.searchFocusContextKey =\n\t\t\tCONTEXT_SETTINGS_SEARCH_FOCUS.bindTo(contextKeyService);\n\t\tthis.tocRowFocused = CONTEXT_TOC_ROW_FOCUS.bindTo(contextKeyService);\n\t\tthis.settingRowFocused =\n\t\t\tCONTEXT_SETTINGS_ROW_FOCUS.bindTo(contextKeyService);\n\n\t\tthis.scheduledRefreshes = new Map<string, DOM.IFocusTracker>();\n\n\t\tthis.editorMemento = this.getEditorMemento<ISettingsEditor2State>(\n\t\t\teditorGroupService,\n\t\t\ttextResourceConfigurationService,\n\t\t\tSETTINGS_EDITOR_STATE_KEY,\n\t\t);\n\n\t\tthis.dismissedExtensionSettings = this.storageService\n\t\t\t.get(\n\t\t\t\tthis.DISMISSED_EXTENSION_SETTINGS_STORAGE_KEY,\n\t\t\t\tStorageScope.PROFILE,\n\t\t\t\t\"\",\n\t\t\t)\n\t\t\t.split(this.DISMISSED_EXTENSION_SETTINGS_DELIMITER);\n\n\t\tthis._register(\n\t\t\tconfigurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (e.source !== ConfigurationTarget.DEFAULT) {\n\t\t\t\t\tthis.onConfigUpdate(e.affectedKeys);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tuserDataProfileService.onDidChangeCurrentProfile((e) => {\n\t\t\t\te.join(this.whenCurrentProfileChanged());\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tworkspaceTrustManagementService.onDidChangeTrust(() => {\n\t\t\t\tthis.searchResultModel?.updateWorkspaceTrust(\n\t\t\t\t\tworkspaceTrustManagementService.isWorkspaceTrusted(),\n\t\t\t\t);\n\n\t\t\t\tif (this.settingsTreeModel) {\n\t\t\t\t\tthis.settingsTreeModel.updateWorkspaceTrust(\n\t\t\t\t\t\tworkspaceTrustManagementService.isWorkspaceTrusted(),\n\t\t\t\t\t);\n\t\t\t\t\tthis.renderTree();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tconfigurationService.onDidChangeRestrictedSettings((e) => {\n\t\t\t\tif (e.default.length && this.currentSettingsModel) {\n\t\t\t\t\tthis.updateElementsByKey(new Set(e.default));\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\textensionManagementService.onDidInstallExtensions(() => {\n\t\t\t\tthis.refreshInstalledExtensionsList();\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\textensionManagementService.onDidUninstallExtension(() => {\n\t\t\t\tthis.refreshInstalledExtensionsList();\n\t\t\t}),\n\t\t);\n\n\t\tthis.modelDisposables = this._register(new DisposableStore());\n\n\t\tif (\n\t\t\tENABLE_LANGUAGE_FILTER &&\n\t\t\t!SettingsEditor2.SUGGESTIONS.includes(`@${LANGUAGE_SETTING_TAG}`)\n\t\t) {\n\t\t\tSettingsEditor2.SUGGESTIONS.push(`@${LANGUAGE_SETTING_TAG}`);\n\t\t}\n\t\tthis.inputChangeListener = this._register(new MutableDisposable());\n\t}\n\n\tprivate async whenCurrentProfileChanged(): Promise<void> {\n\t\tthis.updatedConfigSchemaDelayer.trigger(() => {\n\t\t\tthis.dismissedExtensionSettings = this.storageService\n\t\t\t\t.get(\n\t\t\t\t\tthis.DISMISSED_EXTENSION_SETTINGS_STORAGE_KEY,\n\t\t\t\t\tStorageScope.PROFILE,\n\t\t\t\t\t\"\",\n\t\t\t\t)\n\t\t\t\t.split(this.DISMISSED_EXTENSION_SETTINGS_DELIMITER);\n\t\t\tthis.onConfigUpdate(undefined, true);\n\t\t});\n\t}\n\n\toverride get minimumWidth(): number {\n\t\treturn SettingsEditor2.EDITOR_MIN_WIDTH;\n\t}\n\toverride get maximumWidth(): number {\n\t\treturn Number.POSITIVE_INFINITY;\n\t}\n\toverride get minimumHeight() {\n\t\treturn 180;\n\t}\n\n\t// these setters need to exist because this extends from EditorPane\n\toverride set minimumWidth(value: number) {\n\t\t/*noop*/\n\t}\n\toverride set maximumWidth(value: number) {\n\t\t/*noop*/\n\t}\n\n\tprivate get currentSettingsModel() {\n\t\treturn this.searchResultModel || this.settingsTreeModel;\n\t}\n\n\tprivate get searchResultModel(): SearchResultModel | null {\n\t\treturn this._searchResultModel;\n\t}\n\n\tprivate set searchResultModel(value: SearchResultModel | null) {\n\t\tthis._searchResultModel = value;\n\n\t\tthis.rootElement.classList.toggle(\n\t\t\t\"search-mode\",\n\t\t\t!!this._searchResultModel,\n\t\t);\n\t}\n\n\tprivate get focusedSettingDOMElement(): HTMLElement | undefined {\n\t\tconst focused = this.settingsTree.getFocus()[0];\n\t\tif (!(focused instanceof SettingsTreeSettingElement)) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.settingRenderers.getDOMElementsForSettingKey(\n\t\t\tthis.settingsTree.getHTMLElement(),\n\t\t\tfocused.setting.key,\n\t\t)[0];\n\t}\n\n\tget currentFocusContext() {\n\t\treturn this._currentFocusContext;\n\t}\n\n\tprotected createEditor(parent: HTMLElement): void {\n\t\tparent.setAttribute(\"tabindex\", \"-1\");\n\t\tthis.rootElement = DOM.append(\n\t\t\tparent,\n\t\t\t$(\".settings-editor\", { tabindex: \"-1\" }),\n\t\t);\n\n\t\tthis.createHeader(this.rootElement);\n\t\tthis.createBody(this.rootElement);\n\t\tthis.addCtrlAInterceptor(this.rootElement);\n\t\tthis.updateStyles();\n\n\t\tthis._register(\n\t\t\tregisterNavigableContainer({\n\t\t\t\tname: \"settingsEditor2\",\n\t\t\t\tfocusNotifiers: [this],\n\t\t\t\tfocusNextWidget: () => {\n\t\t\t\t\tif (this.searchWidget.inputWidget.hasWidgetFocus()) {\n\t\t\t\t\t\tthis.focusTOC();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfocusPreviousWidget: () => {\n\t\t\t\t\tif (!this.searchWidget.inputWidget.hasWidgetFocus()) {\n\t\t\t\t\t\tthis.focusSearch();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\t}\n\n\toverride async setInput(\n\t\tinput: SettingsEditor2Input,\n\t\toptions: ISettingsEditorOptions | undefined,\n\t\tcontext: IEditorOpenContext,\n\t\ttoken: CancellationToken,\n\t): Promise<void> {\n\t\tthis.inSettingsEditorContextKey.set(true);\n\t\tawait super.setInput(input, options, context, token);\n\t\tif (!this.input) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = await this.input.resolve();\n\t\tif (\n\t\t\ttoken.isCancellationRequested ||\n\t\t\t!(model instanceof Settings2EditorModel)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.modelDisposables.clear();\n\t\tthis.modelDisposables.add(\n\t\t\tmodel.onDidChangeGroups(() => {\n\t\t\t\tthis.updatedConfigSchemaDelayer.trigger(() => {\n\t\t\t\t\tthis.onConfigUpdate(undefined, false, true);\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\t\tthis.defaultSettingsEditorModel = model;\n\n\t\toptions = options || validateSettingsEditorOptions({});\n\t\tif (\n\t\t\t!this.viewState.settingsTarget ||\n\t\t\t!this.settingsTargetsWidget.settingsTarget\n\t\t) {\n\t\t\tconst optionsHasViewStateTarget =\n\t\t\t\toptions.viewState &&\n\t\t\t\t(options.viewState as ISettingsEditorViewState).settingsTarget;\n\t\t\tif (!options.target && !optionsHasViewStateTarget) {\n\t\t\t\toptions.target = ConfigurationTarget.USER_LOCAL;\n\t\t\t}\n\t\t}\n\t\tthis._setOptions(options);\n\n\t\t// Don't block setInput on render (which can trigger an async search)\n\t\tthis.onConfigUpdate(undefined, true).then(() => {\n\t\t\tthis.inputChangeListener.value = input.onWillDispose(() => {\n\t\t\t\tthis.searchWidget.setValue(\"\");\n\t\t\t});\n\n\t\t\t// Init TOC selection\n\t\t\tthis.updateTreeScrollSync();\n\t\t});\n\n\t\tawait this.refreshInstalledExtensionsList();\n\t}\n\n\tprivate async refreshInstalledExtensionsList(): Promise<void> {\n\t\tconst installedExtensions =\n\t\t\tawait this.extensionManagementService.getInstalled();\n\t\tthis.installedExtensionIds = installedExtensions\n\t\t\t.filter((ext) => ext.manifest.contributes?.configuration)\n\t\t\t.map((ext) => ext.identifier.id);\n\t}\n\n\tprivate restoreCachedState(): ISettingsEditor2State | null {\n\t\tconst cachedState =\n\t\t\tthis.input &&\n\t\t\tthis.editorMemento.loadEditorState(this.group, this.input);\n\t\tif (cachedState && typeof cachedState.target === \"object\") {\n\t\t\tcachedState.target = URI.revive(cachedState.target);\n\t\t}\n\n\t\tif (cachedState) {\n\t\t\tconst settingsTarget = cachedState.target;\n\t\t\tthis.settingsTargetsWidget.settingsTarget = settingsTarget;\n\t\t\tthis.viewState.settingsTarget = settingsTarget;\n\t\t\tif (!this.searchWidget.getValue()) {\n\t\t\t\tthis.searchWidget.setValue(cachedState.searchQuery);\n\t\t\t}\n\t\t}\n\n\t\tif (this.input) {\n\t\t\tthis.editorMemento.clearEditorState(this.input, this.group);\n\t\t}\n\n\t\treturn cachedState ?? null;\n\t}\n\n\toverride getViewState(): object | undefined {\n\t\treturn this.viewState;\n\t}\n\n\toverride setOptions(options: ISettingsEditorOptions | undefined): void {\n\t\tsuper.setOptions(options);\n\n\t\tif (options) {\n\t\t\tthis._setOptions(options);\n\t\t}\n\t}\n\n\tprivate _setOptions(options: ISettingsEditorOptions): void {\n\t\tif (options.focusSearch && !platform.isIOS) {\n\t\t\t// isIOS - #122044\n\t\t\tthis.focusSearch();\n\t\t}\n\n\t\tconst recoveredViewState = options.viewState\n\t\t\t? (options.viewState as ISettingsEditorViewState)\n\t\t\t: undefined;\n\n\t\tconst query: string | undefined =\n\t\t\trecoveredViewState?.query ?? options.query;\n\t\tif (query !== undefined) {\n\t\t\tthis.searchWidget.setValue(query);\n\t\t\tthis.viewState.query = query;\n\t\t}\n\n\t\tconst target: SettingsTarget | undefined =\n\t\t\toptions.folderUri ??\n\t\t\trecoveredViewState?.settingsTarget ??\n\t\t\t<SettingsTarget | undefined>options.target;\n\t\tif (target) {\n\t\t\tthis.settingsTargetsWidget.updateTarget(target);\n\t\t}\n\t}\n\n\toverride clearInput(): void {\n\t\tthis.inSettingsEditorContextKey.set(false);\n\t\tsuper.clearInput();\n\t}\n\n\tlayout(dimension: DOM.Dimension): void {\n\t\tthis.dimension = dimension;\n\n\t\tif (!this.isVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.layoutSplitView(dimension);\n\n\t\tconst innerWidth =\n\t\t\tMath.min(this.headerContainer.clientWidth, dimension.width) -\n\t\t\t24 * 2; // 24px padding on left and right;\n\t\t// minus padding inside inputbox, countElement width, controls width, extra padding before countElement\n\t\tconst monacoWidth =\n\t\t\tinnerWidth -\n\t\t\t10 -\n\t\t\tthis.countElement.clientWidth -\n\t\t\tthis.controlsElement.clientWidth -\n\t\t\t12;\n\t\tthis.searchWidget.layout(new DOM.Dimension(monacoWidth, 20));\n\n\t\tthis.rootElement.classList.toggle(\n\t\t\t\"narrow-width\",\n\t\t\tdimension.width < SettingsEditor2.NARROW_TOTAL_WIDTH,\n\t\t);\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\n\t\tif (this._currentFocusContext === SettingsFocusContext.Search) {\n\t\t\tif (!platform.isIOS) {\n\t\t\t\t// #122044\n\t\t\t\tthis.focusSearch();\n\t\t\t}\n\t\t} else if (\n\t\t\tthis._currentFocusContext === SettingsFocusContext.SettingControl\n\t\t) {\n\t\t\tconst element = this.focusedSettingDOMElement;\n\t\t\tif (element) {\n\t\t\t\tconst control = element.querySelector(\n\t\t\t\t\tAbstractSettingRenderer.CONTROL_SELECTOR,\n\t\t\t\t);\n\t\t\t\tif (control) {\n\t\t\t\t\t(<HTMLElement>control).focus();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (\n\t\t\tthis._currentFocusContext === SettingsFocusContext.SettingTree\n\t\t) {\n\t\t\tthis.settingsTree.domFocus();\n\t\t} else if (\n\t\t\tthis._currentFocusContext === SettingsFocusContext.TableOfContents\n\t\t) {\n\t\t\tthis.tocTree.domFocus();\n\t\t}\n\t}\n\n\tprotected override setEditorVisible(visible: boolean): void {\n\t\tsuper.setEditorVisible(visible);\n\n\t\tif (!visible) {\n\t\t\t// Wait for editor to be removed from DOM #106303\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.searchWidget.onHide();\n\t\t\t}, 0);\n\t\t}\n\t}\n\n\tfocusSettings(focusSettingInput = false): void {\n\t\tconst focused = this.settingsTree.getFocus();\n\t\tif (!focused.length) {\n\t\t\tthis.settingsTree.focusFirst();\n\t\t}\n\n\t\tthis.settingsTree.domFocus();\n\n\t\tif (focusSettingInput) {\n\t\t\tconst controlInFocusedRow = this.settingsTree\n\t\t\t\t.getHTMLElement()\n\t\t\t\t.querySelector(\n\t\t\t\t\t`.focused ${AbstractSettingRenderer.CONTROL_SELECTOR}`,\n\t\t\t\t);\n\t\t\tif (controlInFocusedRow) {\n\t\t\t\t(<HTMLElement>controlInFocusedRow).focus();\n\t\t\t}\n\t\t}\n\t}\n\n\tfocusTOC(): void {\n\t\tthis.tocTree.domFocus();\n\t}\n\n\tshowContextMenu(): void {\n\t\tconst focused = this.settingsTree.getFocus()[0];\n\t\tconst rowElement = this.focusedSettingDOMElement;\n\t\tif (rowElement && focused instanceof SettingsTreeSettingElement) {\n\t\t\tthis.settingRenderers.showContextMenu(focused, rowElement);\n\t\t}\n\t}\n\n\tfocusSearch(filter?: string, selectAll = true): void {\n\t\tif (filter && this.searchWidget) {\n\t\t\tthis.searchWidget.setValue(filter);\n\t\t}\n\n\t\t// Do not select all if the user is already searching.\n\t\tthis.searchWidget.focus(\n\t\t\tselectAll && !this.searchInputDelayer.isTriggered,\n\t\t);\n\t}\n\n\tclearSearchResults(): void {\n\t\tthis.searchWidget.setValue(\"\");\n\t\tthis.focusSearch();\n\t}\n\n\tclearSearchFilters(): void {\n\t\tconst query = this.searchWidget.getValue();\n\n\t\tconst splitQuery = query.split(\" \").filter((word) => {\n\t\t\treturn (\n\t\t\t\tword.length &&\n\t\t\t\t!SettingsEditor2.SUGGESTIONS.some((suggestion) =>\n\t\t\t\t\tword.startsWith(suggestion),\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\n\t\tthis.searchWidget.setValue(splitQuery.join(\" \"));\n\t}\n\n\tprivate updateInputAriaLabel() {\n\t\tlet label = searchBoxLabel;\n\t\tif (this.searchResultLabel) {\n\t\t\tlabel += `. ${this.searchResultLabel}`;\n\t\t}\n\n\t\tif (this.lastSyncedLabel) {\n\t\t\tlabel += `. ${this.lastSyncedLabel}`;\n\t\t}\n\n\t\tthis.searchWidget.updateAriaLabel(label);\n\t}\n\n\t/**\n\t * Render the header of the Settings editor, which includes the content above the splitview.\n\t */\n\tprivate createHeader(parent: HTMLElement): void {\n\t\tthis.headerContainer = DOM.append(parent, $(\".settings-header\"));\n\n\t\tconst searchContainer = DOM.append(\n\t\t\tthis.headerContainer,\n\t\t\t$(\".search-container\"),\n\t\t);\n\n\t\tconst clearInputAction = new Action(\n\t\t\tSETTINGS_EDITOR_COMMAND_CLEAR_SEARCH_RESULTS,\n\t\t\tlocalize(\"clearInput\", \"Clear Settings Search Input\"),\n\t\t\tThemeIcon.asClassName(preferencesClearInputIcon),\n\t\t\tfalse,\n\t\t\tasync () => this.clearSearchResults(),\n\t\t);\n\t\tconst filterAction = new Action(\n\t\t\tSETTINGS_EDITOR_COMMAND_SUGGEST_FILTERS,\n\t\t\tlocalize(\"filterInput\", \"Filter Settings\"),\n\t\t\tThemeIcon.asClassName(preferencesFilterIcon),\n\t\t);\n\t\tthis.searchWidget = this._register(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tSuggestEnabledInput,\n\t\t\t\t`${SettingsEditor2.ID}.searchbox`,\n\t\t\t\tsearchContainer,\n\t\t\t\t{\n\t\t\t\t\ttriggerCharacters: [\"@\", \":\"],\n\t\t\t\t\tprovideResults: (query: string) => {\n\t\t\t\t\t\t// Based on testing, the trigger character is always at the end of the query.\n\t\t\t\t\t\t// for the ':' trigger, only return suggestions if there was a '@' before it in the same word.\n\t\t\t\t\t\tconst queryParts = query.split(/\\s/g);\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tqueryParts[queryParts.length - 1].startsWith(\n\t\t\t\t\t\t\t\t`@${LANGUAGE_SETTING_TAG}`,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst sortedLanguages = this.languageService\n\t\t\t\t\t\t\t\t.getRegisteredLanguageIds()\n\t\t\t\t\t\t\t\t.map((languageId) => {\n\t\t\t\t\t\t\t\t\treturn `@${LANGUAGE_SETTING_TAG}${languageId} `;\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.sort();\n\t\t\t\t\t\t\treturn sortedLanguages.filter(\n\t\t\t\t\t\t\t\t(langFilter) => !query.includes(langFilter),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tqueryParts[queryParts.length - 1].startsWith(\n\t\t\t\t\t\t\t\t`@${EXTENSION_SETTING_TAG}`,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst installedExtensionsTags =\n\t\t\t\t\t\t\t\tthis.installedExtensionIds\n\t\t\t\t\t\t\t\t\t.map((extensionId) => {\n\t\t\t\t\t\t\t\t\t\treturn `@${EXTENSION_SETTING_TAG}${extensionId} `;\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.sort();\n\t\t\t\t\t\t\treturn installedExtensionsTags.filter(\n\t\t\t\t\t\t\t\t(extFilter) => !query.includes(extFilter),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tqueryParts[queryParts.length - 1].startsWith(\"@\")\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn SettingsEditor2.SUGGESTIONS.filter(\n\t\t\t\t\t\t\t\t(tag) => !query.includes(tag),\n\t\t\t\t\t\t\t).map((tag) =>\n\t\t\t\t\t\t\t\ttag.endsWith(\":\") ? tag : tag + \" \",\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tsearchBoxLabel,\n\t\t\t\t\"settingseditor:searchinput\" + SettingsEditor2.NUM_INSTANCES++,\n\t\t\t\t{\n\t\t\t\t\tplaceholderText: searchBoxLabel,\n\t\t\t\t\tfocusContextKey: this.searchFocusContextKey,\n\t\t\t\t\tstyleOverrides: {\n\t\t\t\t\t\tinputBorder: settingsTextInputBorder,\n\t\t\t\t\t},\n\t\t\t\t\t// TODO: Aria-live\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.searchWidget.onDidFocus(() => {\n\t\t\t\tthis._currentFocusContext = SettingsFocusContext.Search;\n\t\t\t}),\n\t\t);\n\n\t\tthis.countElement = DOM.append(\n\t\t\tsearchContainer,\n\t\t\tDOM.$(\".settings-count-widget.monaco-count-badge.long\"),\n\t\t);\n\n\t\tthis.countElement.style.backgroundColor =\n\t\t\tasCssVariable(badgeBackground);\n\t\tthis.countElement.style.color = asCssVariable(badgeForeground);\n\t\tthis.countElement.style.border = `1px solid ${asCssVariable(contrastBorder)}`;\n\n\t\tthis._register(\n\t\t\tthis.searchWidget.onInputDidChange(() => {\n\t\t\t\tconst searchVal = this.searchWidget.getValue();\n\t\t\t\tclearInputAction.enabled = !!searchVal;\n\t\t\t\tthis.searchInputDelayer.trigger(() =>\n\t\t\t\t\tthis.onSearchInputChanged(),\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\tconst headerControlsContainer = DOM.append(\n\t\t\tthis.headerContainer,\n\t\t\t$(\".settings-header-controls\"),\n\t\t);\n\t\theaderControlsContainer.style.borderColor =\n\t\t\tasCssVariable(settingsHeaderBorder);\n\n\t\tconst targetWidgetContainer = DOM.append(\n\t\t\theaderControlsContainer,\n\t\t\t$(\".settings-target-container\"),\n\t\t);\n\t\tthis.settingsTargetsWidget = this._register(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tSettingsTargetsWidget,\n\t\t\t\ttargetWidgetContainer,\n\t\t\t\t{ enableRemoteSettings: true },\n\t\t\t),\n\t\t);\n\t\tthis.settingsTargetsWidget.settingsTarget =\n\t\t\tConfigurationTarget.USER_LOCAL;\n\t\tthis.settingsTargetsWidget.onDidTargetChange((target) =>\n\t\t\tthis.onDidSettingsTargetChange(target),\n\t\t);\n\t\tthis._register(\n\t\t\tDOM.addDisposableListener(\n\t\t\t\ttargetWidgetContainer,\n\t\t\t\tDOM.EventType.KEY_DOWN,\n\t\t\t\t(e) => {\n\t\t\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\t\t\tif (event.keyCode === KeyCode.DownArrow) {\n\t\t\t\t\t\tthis.focusSettings();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tif (\n\t\t\tthis.userDataSyncWorkbenchService.enabled &&\n\t\t\tthis.userDataSyncEnablementService.canToggleEnablement()\n\t\t) {\n\t\t\tconst syncControls = this._register(\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tSyncControls,\n\t\t\t\t\tthis.window,\n\t\t\t\t\theaderControlsContainer,\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tsyncControls.onDidChangeLastSyncedLabel((lastSyncedLabel) => {\n\t\t\t\t\tthis.lastSyncedLabel = lastSyncedLabel;\n\t\t\t\t\tthis.updateInputAriaLabel();\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\tthis.controlsElement = DOM.append(\n\t\t\tsearchContainer,\n\t\t\tDOM.$(\".settings-clear-widget\"),\n\t\t);\n\n\t\tconst actionBar = this._register(\n\t\t\tnew ActionBar(this.controlsElement, {\n\t\t\t\tactionViewItemProvider: (action, options) => {\n\t\t\t\t\tif (action.id === filterAction.id) {\n\t\t\t\t\t\treturn this.instantiationService.createInstance(\n\t\t\t\t\t\t\tSettingsSearchFilterDropdownMenuActionViewItem,\n\t\t\t\t\t\t\taction,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tthis.actionRunner,\n\t\t\t\t\t\t\tthis.searchWidget,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn undefined;\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\n\t\tactionBar.push([clearInputAction, filterAction], {\n\t\t\tlabel: false,\n\t\t\ticon: true,\n\t\t});\n\t}\n\n\tprivate onDidSettingsTargetChange(target: SettingsTarget): void {\n\t\tthis.viewState.settingsTarget = target;\n\n\t\t// TODO Instead of rebuilding the whole model, refresh and uncache the inspected setting value\n\t\tthis.onConfigUpdate(undefined, true);\n\t}\n\n\tprivate onDidDismissExtensionSetting(extensionId: string): void {\n\t\tif (!this.dismissedExtensionSettings.includes(extensionId)) {\n\t\t\tthis.dismissedExtensionSettings.push(extensionId);\n\t\t}\n\t\tthis.storageService.store(\n\t\t\tthis.DISMISSED_EXTENSION_SETTINGS_STORAGE_KEY,\n\t\t\tthis.dismissedExtensionSettings.join(\n\t\t\t\tthis.DISMISSED_EXTENSION_SETTINGS_DELIMITER,\n\t\t\t),\n\t\t\tStorageScope.PROFILE,\n\t\t\tStorageTarget.USER,\n\t\t);\n\t\tthis.onConfigUpdate(undefined, true);\n\t}\n\n\tprivate onDidClickSetting(\n\t\tevt: ISettingLinkClickEvent,\n\t\trecursed?: boolean,\n\t): void {\n\t\tconst targetElement = this.currentSettingsModel.getElementsByName(\n\t\t\tevt.targetKey,\n\t\t)?.[0];\n\t\tlet revealFailed = false;\n\t\tif (targetElement) {\n\t\t\tlet sourceTop = 0.5;\n\t\t\ttry {\n\t\t\t\tconst _sourceTop = this.settingsTree.getRelativeTop(evt.source);\n\t\t\t\tif (_sourceTop !== null) {\n\t\t\t\t\tsourceTop = _sourceTop;\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\t// e.g. clicked a searched element, now the search has been cleared\n\t\t\t}\n\n\t\t\t// If we search for something and focus on a category, the settings tree\n\t\t\t// only renders settings in that category.\n\t\t\t// If the target display category is different than the source's, unfocus the category\n\t\t\t// so that we can render all found settings again.\n\t\t\t// Then, the reveal call will correctly find the target setting.\n\t\t\tif (\n\t\t\t\tthis.viewState.filterToCategory &&\n\t\t\t\tevt.source.displayCategory !== targetElement.displayCategory\n\t\t\t) {\n\t\t\t\tthis.tocTree.setFocus([]);\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tthis.settingsTree.reveal(targetElement, sourceTop);\n\t\t\t} catch (_) {\n\t\t\t\t// The listwidget couldn't find the setting to reveal,\n\t\t\t\t// even though it's in the model, meaning there might be a filter\n\t\t\t\t// preventing it from showing up.\n\t\t\t\trevealFailed = true;\n\t\t\t}\n\n\t\t\tif (!revealFailed) {\n\t\t\t\t// We need to shift focus from the setting that contains the link to the setting that's\n\t\t\t\t// linked. Clicking on the link sets focus on the setting that contains the link,\n\t\t\t\t// which is why we need the setTimeout.\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.settingsTree.setFocus([targetElement]);\n\t\t\t\t}, 50);\n\n\t\t\t\tconst domElements =\n\t\t\t\t\tthis.settingRenderers.getDOMElementsForSettingKey(\n\t\t\t\t\t\tthis.settingsTree.getHTMLElement(),\n\t\t\t\t\t\tevt.targetKey,\n\t\t\t\t\t);\n\t\t\t\tif (domElements && domElements[0]) {\n\t\t\t\t\tconst control = domElements[0].querySelector(\n\t\t\t\t\t\tAbstractSettingRenderer.CONTROL_SELECTOR,\n\t\t\t\t\t);\n\t\t\t\t\tif (control) {\n\t\t\t\t\t\t(<HTMLElement>control).focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!recursed && (!targetElement || revealFailed)) {\n\t\t\t// We'll call this event handler again after clearing the search query,\n\t\t\t// so that more settings show up in the list.\n\t\t\tconst p = this.triggerSearch(\"\");\n\t\t\tp.then(() => {\n\t\t\t\tthis.searchWidget.setValue(\"\");\n\t\t\t\tthis.onDidClickSetting(evt, true);\n\t\t\t});\n\t\t}\n\t}\n\n\tswitchToSettingsFile(): Promise<IEditorPane | undefined> {\n\t\tconst query = parseQuery(this.searchWidget.getValue()).query;\n\t\treturn this.openSettingsFile({ query });\n\t}\n\n\tprivate async openSettingsFile(\n\t\toptions?: ISettingsEditorOptions,\n\t): Promise<IEditorPane | undefined> {\n\t\tconst currentSettingsTarget = this.settingsTargetsWidget.settingsTarget;\n\n\t\tconst openOptions: IOpenSettingsOptions = {\n\t\t\tjsonEditor: true,\n\t\t\t...options,\n\t\t};\n\t\tif (currentSettingsTarget === ConfigurationTarget.USER_LOCAL) {\n\t\t\tif (options?.revealSetting) {\n\t\t\t\tconst configurationProperties =\n\t\t\t\t\tRegistry.as<IConfigurationRegistry>(\n\t\t\t\t\t\tExtensions.Configuration,\n\t\t\t\t\t).getConfigurationProperties();\n\t\t\t\tconst configurationScope =\n\t\t\t\t\tconfigurationProperties[options?.revealSetting.key]?.scope;\n\t\t\t\tif (configurationScope === ConfigurationScope.APPLICATION) {\n\t\t\t\t\treturn this.preferencesService.openApplicationSettings(\n\t\t\t\t\t\topenOptions,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.preferencesService.openUserSettings(openOptions);\n\t\t} else if (currentSettingsTarget === ConfigurationTarget.USER_REMOTE) {\n\t\t\treturn this.preferencesService.openRemoteSettings(openOptions);\n\t\t} else if (currentSettingsTarget === ConfigurationTarget.WORKSPACE) {\n\t\t\treturn this.preferencesService.openWorkspaceSettings(openOptions);\n\t\t} else if (URI.isUri(currentSettingsTarget)) {\n\t\t\treturn this.preferencesService.openFolderSettings({\n\t\t\t\tfolderUri: currentSettingsTarget,\n\t\t\t\t...openOptions,\n\t\t\t});\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate createBody(parent: HTMLElement): void {\n\t\tthis.bodyContainer = DOM.append(parent, $(\".settings-body\"));\n\n\t\tthis.noResultsMessage = DOM.append(\n\t\t\tthis.bodyContainer,\n\t\t\t$(\".no-results-message\"),\n\t\t);\n\n\t\tthis.noResultsMessage.innerText = localize(\n\t\t\t\"noResults\",\n\t\t\t\"No Settings Found\",\n\t\t);\n\n\t\tthis.clearFilterLinkContainer = $(\"span.clear-search-filters\");\n\n\t\tthis.clearFilterLinkContainer.textContent = \" - \";\n\t\tconst clearFilterLink = DOM.append(\n\t\t\tthis.clearFilterLinkContainer,\n\t\t\t$(\n\t\t\t\t\"a.pointer.prominent\",\n\t\t\t\t{ tabindex: 0 },\n\t\t\t\tlocalize(\"clearSearchFilters\", \"Clear Filters\"),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tDOM.addDisposableListener(\n\t\t\t\tclearFilterLink,\n\t\t\t\tDOM.EventType.CLICK,\n\t\t\t\t(e: MouseEvent) => {\n\t\t\t\t\tDOM.EventHelper.stop(e, false);\n\t\t\t\t\tthis.clearSearchFilters();\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tDOM.append(this.noResultsMessage, this.clearFilterLinkContainer);\n\n\t\tthis.noResultsMessage.style.color = asCssVariable(editorForeground);\n\n\t\tthis.tocTreeContainer = $(\".settings-toc-container\");\n\t\tthis.settingsTreeContainer = $(\".settings-tree-container\");\n\n\t\tthis.createTOC(this.tocTreeContainer);\n\t\tthis.createSettingsTree(this.settingsTreeContainer);\n\n\t\tthis.splitView = this._register(\n\t\t\tnew SplitView(this.bodyContainer, {\n\t\t\t\torientation: Orientation.HORIZONTAL,\n\t\t\t\tproportionalLayout: true,\n\t\t\t}),\n\t\t);\n\t\tconst startingWidth = this.storageService.getNumber(\n\t\t\t\"settingsEditor2.splitViewWidth\",\n\t\t\tStorageScope.PROFILE,\n\t\t\tSettingsEditor2.TOC_RESET_WIDTH,\n\t\t);\n\t\tthis.splitView.addView(\n\t\t\t{\n\t\t\t\tonDidChange: Event.None,\n\t\t\t\telement: this.tocTreeContainer,\n\t\t\t\tminimumSize: SettingsEditor2.TOC_MIN_WIDTH,\n\t\t\t\tmaximumSize: Number.POSITIVE_INFINITY,\n\t\t\t\tlayout: (width, _, height) => {\n\t\t\t\t\tthis.tocTreeContainer.style.width = `${width}px`;\n\t\t\t\t\tthis.tocTree.layout(height, width);\n\t\t\t\t},\n\t\t\t},\n\t\t\tstartingWidth,\n\t\t\tundefined,\n\t\t\ttrue,\n\t\t);\n\t\tthis.splitView.addView(\n\t\t\t{\n\t\t\t\tonDidChange: Event.None,\n\t\t\t\telement: this.settingsTreeContainer,\n\t\t\t\tminimumSize: SettingsEditor2.EDITOR_MIN_WIDTH,\n\t\t\t\tmaximumSize: Number.POSITIVE_INFINITY,\n\t\t\t\tlayout: (width, _, height) => {\n\t\t\t\t\tthis.settingsTreeContainer.style.width = `${width}px`;\n\t\t\t\t\tthis.settingsTree.layout(height, width);\n\t\t\t\t},\n\t\t\t},\n\t\t\tSizing.Distribute,\n\t\t\tundefined,\n\t\t\ttrue,\n\t\t);\n\t\tthis._register(\n\t\t\tthis.splitView.onDidSashReset(() => {\n\t\t\t\tconst totalSize =\n\t\t\t\t\tthis.splitView.getViewSize(0) +\n\t\t\t\t\tthis.splitView.getViewSize(1);\n\t\t\t\tthis.splitView.resizeView(0, SettingsEditor2.TOC_RESET_WIDTH);\n\t\t\t\tthis.splitView.resizeView(\n\t\t\t\t\t1,\n\t\t\t\t\ttotalSize - SettingsEditor2.TOC_RESET_WIDTH,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.splitView.onDidSashChange(() => {\n\t\t\t\tconst width = this.splitView.getViewSize(0);\n\t\t\t\tthis.storageService.store(\n\t\t\t\t\t\"settingsEditor2.splitViewWidth\",\n\t\t\t\t\twidth,\n\t\t\t\t\tStorageScope.PROFILE,\n\t\t\t\t\tStorageTarget.USER,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\t\tconst borderColor = this.theme.getColor(settingsSashBorder)!;\n\t\tthis.splitView.style({ separatorBorder: borderColor });\n\t}\n\n\tprivate addCtrlAInterceptor(container: HTMLElement): void {\n\t\tthis._register(\n\t\t\tDOM.addStandardDisposableListener(\n\t\t\t\tcontainer,\n\t\t\t\tDOM.EventType.KEY_DOWN,\n\t\t\t\t(e: StandardKeyboardEvent) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\te.keyCode === KeyCode.KeyA &&\n\t\t\t\t\t\t(platform.isMacintosh ? e.metaKey : e.ctrlKey) &&\n\t\t\t\t\t\t!DOM.isEditableElement(e.target)\n\t\t\t\t\t) {\n\t\t\t\t\t\t// Avoid browser ctrl+a\n\t\t\t\t\t\te.browserEvent.stopPropagation();\n\t\t\t\t\t\te.browserEvent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate createTOC(container: HTMLElement): void {\n\t\tthis.tocTreeModel = this.instantiationService.createInstance(\n\t\t\tTOCTreeModel,\n\t\t\tthis.viewState,\n\t\t);\n\n\t\tthis.tocTree = this._register(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tTOCTree,\n\t\t\t\tDOM.append(\n\t\t\t\t\tcontainer,\n\t\t\t\t\t$(\".settings-toc-wrapper\", {\n\t\t\t\t\t\trole: \"navigation\",\n\t\t\t\t\t\t\"aria-label\": localize(\"settings\", \"Settings\"),\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t\tthis.viewState,\n\t\t\t),\n\t\t);\n\t\tthis.tocTreeDisposed = false;\n\n\t\tthis._register(\n\t\t\tthis.tocTree.onDidFocus(() => {\n\t\t\t\tthis._currentFocusContext =\n\t\t\t\t\tSettingsFocusContext.TableOfContents;\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.tocTree.onDidChangeFocus((e) => {\n\t\t\t\tconst element: SettingsTreeGroupElement | null =\n\t\t\t\t\te.elements?.[0] ?? null;\n\t\t\t\tif (this.tocFocusedElement === element) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.tocFocusedElement = element;\n\t\t\t\tthis.tocTree.setSelection(element ? [element] : []);\n\t\t\t\tif (this.searchResultModel) {\n\t\t\t\t\tif (this.viewState.filterToCategory !== element) {\n\t\t\t\t\t\tthis.viewState.filterToCategory = element ?? undefined;\n\t\t\t\t\t\t// Force render in this case, because\n\t\t\t\t\t\t// onDidClickSetting relies on the updated view.\n\t\t\t\t\t\tthis.renderTree(undefined, true);\n\t\t\t\t\t\tthis.settingsTree.scrollTop = 0;\n\t\t\t\t\t}\n\t\t\t\t} else if (\n\t\t\t\t\telement &&\n\t\t\t\t\t(!e.browserEvent ||\n\t\t\t\t\t\t!(<IFocusEventFromScroll>e.browserEvent).fromScroll)\n\t\t\t\t) {\n\t\t\t\t\tthis.settingsTree.reveal(element, 0);\n\t\t\t\t\tthis.settingsTree.setFocus([element]);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.tocTree.onDidFocus(() => {\n\t\t\t\tthis.tocRowFocused.set(true);\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.tocTree.onDidBlur(() => {\n\t\t\t\tthis.tocRowFocused.set(false);\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.tocTree.onDidDispose(() => {\n\t\t\t\tthis.tocTreeDisposed = true;\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate applyFilter(filter: string) {\n\t\tif (\n\t\t\tthis.searchWidget &&\n\t\t\t!this.searchWidget.getValue().includes(filter)\n\t\t) {\n\t\t\t// Prepend the filter to the query.\n\t\t\tconst newQuery = `${filter} ${this.searchWidget.getValue().trimStart()}`;\n\t\t\tthis.focusSearch(newQuery, false);\n\t\t}\n\t}\n\n\tprivate removeLanguageFilters() {\n\t\tif (\n\t\t\tthis.searchWidget &&\n\t\t\tthis.searchWidget.getValue().includes(`@${LANGUAGE_SETTING_TAG}`)\n\t\t) {\n\t\t\tconst query = this.searchWidget.getValue().split(\" \");\n\t\t\tconst newQuery = query\n\t\t\t\t.filter((word) => !word.startsWith(`@${LANGUAGE_SETTING_TAG}`))\n\t\t\t\t.join(\" \");\n\t\t\tthis.focusSearch(newQuery, false);\n\t\t}\n\t}\n\n\tprivate createSettingsTree(container: HTMLElement): void {\n\t\tthis.settingRenderers = this._register(\n\t\t\tthis.instantiationService.createInstance(SettingTreeRenderers),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.settingRenderers.onDidChangeSetting((e) =>\n\t\t\t\tthis.onDidChangeSetting(\n\t\t\t\t\te.key,\n\t\t\t\t\te.value,\n\t\t\t\t\te.type,\n\t\t\t\t\te.manualReset,\n\t\t\t\t\te.scope,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.settingRenderers.onDidDismissExtensionSetting((e) =>\n\t\t\t\tthis.onDidDismissExtensionSetting(e),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.settingRenderers.onDidOpenSettings((settingKey) => {\n\t\t\t\tthis.openSettingsFile({\n\t\t\t\t\trevealSetting: { key: settingKey, edit: true },\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.settingRenderers.onDidClickSettingLink((settingName) =>\n\t\t\t\tthis.onDidClickSetting(settingName),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.settingRenderers.onDidFocusSetting((element) => {\n\t\t\t\tthis.settingsTree.setFocus([element]);\n\t\t\t\tthis._currentFocusContext = SettingsFocusContext.SettingControl;\n\t\t\t\tthis.settingRowFocused.set(false);\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.settingRenderers.onDidChangeSettingHeight(\n\t\t\t\t(params: HeightChangeParams) => {\n\t\t\t\t\tconst { element, height } = params;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.settingsTree.updateElementHeight(element, height);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// the element was not found\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.settingRenderers.onApplyFilter((filter) =>\n\t\t\t\tthis.applyFilter(filter),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.settingRenderers.onDidClickOverrideElement(\n\t\t\t\t(element: ISettingOverrideClickEvent) => {\n\t\t\t\t\tthis.removeLanguageFilters();\n\t\t\t\t\tif (element.language) {\n\t\t\t\t\t\tthis.applyFilter(\n\t\t\t\t\t\t\t`@${LANGUAGE_SETTING_TAG}${element.language}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (element.scope === \"workspace\") {\n\t\t\t\t\t\tthis.settingsTargetsWidget.updateTarget(\n\t\t\t\t\t\t\tConfigurationTarget.WORKSPACE,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (element.scope === \"user\") {\n\t\t\t\t\t\tthis.settingsTargetsWidget.updateTarget(\n\t\t\t\t\t\t\tConfigurationTarget.USER_LOCAL,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (element.scope === \"remote\") {\n\t\t\t\t\t\tthis.settingsTargetsWidget.updateTarget(\n\t\t\t\t\t\t\tConfigurationTarget.USER_REMOTE,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tthis.applyFilter(`@${ID_SETTING_TAG}${element.settingKey}`);\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis.settingsTree = this._register(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tSettingsTree,\n\t\t\t\tcontainer,\n\t\t\t\tthis.viewState,\n\t\t\t\tthis.settingRenderers.allRenderers,\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.settingsTree.onDidScroll(() => {\n\t\t\t\tif (\n\t\t\t\t\tthis.settingsTree.scrollTop === this.settingsTreeScrollTop\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.settingsTreeScrollTop = this.settingsTree.scrollTop;\n\n\t\t\t\t// setTimeout because calling setChildren on the settingsTree can trigger onDidScroll, so it fires when\n\t\t\t\t// setChildren has called on the settings tree but not the toc tree yet, so their rendered elements are out of sync\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.updateTreeScrollSync();\n\t\t\t\t}, 0);\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.settingsTree.onDidFocus(() => {\n\t\t\t\tconst classList =\n\t\t\t\t\tcontainer.ownerDocument.activeElement?.classList;\n\t\t\t\tif (\n\t\t\t\t\tclassList &&\n\t\t\t\t\tclassList.contains(\"monaco-list\") &&\n\t\t\t\t\tclassList.contains(\"settings-editor-tree\")\n\t\t\t\t) {\n\t\t\t\t\tthis._currentFocusContext =\n\t\t\t\t\t\tSettingsFocusContext.SettingTree;\n\t\t\t\t\tthis.settingRowFocused.set(true);\n\t\t\t\t\tthis.treeFocusedElement ??=\n\t\t\t\t\t\tthis.settingsTree.firstVisibleElement ?? null;\n\t\t\t\t\tif (this.treeFocusedElement) {\n\t\t\t\t\t\tthis.treeFocusedElement.tabbable = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.settingsTree.onDidBlur(() => {\n\t\t\t\tthis.settingRowFocused.set(false);\n\t\t\t\t// Clear out the focused element, otherwise it could be\n\t\t\t\t// out of date during the next onDidFocus event.\n\t\t\t\tthis.treeFocusedElement = null;\n\t\t\t}),\n\t\t);\n\n\t\t// There is no different select state in the settings tree\n\t\tthis._register(\n\t\t\tthis.settingsTree.onDidChangeFocus((e) => {\n\t\t\t\tconst element = e.elements[0];\n\t\t\t\tif (this.treeFocusedElement === element) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.treeFocusedElement) {\n\t\t\t\t\tthis.treeFocusedElement.tabbable = false;\n\t\t\t\t}\n\n\t\t\t\tthis.treeFocusedElement = element;\n\n\t\t\t\tif (this.treeFocusedElement) {\n\t\t\t\t\tthis.treeFocusedElement.tabbable = true;\n\t\t\t\t}\n\n\t\t\t\tthis.settingsTree.setSelection(element ? [element] : []);\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate onDidChangeSetting(\n\t\tkey: string,\n\t\tvalue: any,\n\t\ttype: SettingValueType | SettingValueType[],\n\t\tmanualReset: boolean,\n\t\tscope: ConfigurationScope | undefined,\n\t): void {\n\t\tconst parsedQuery = parseQuery(this.searchWidget.getValue());\n\t\tconst languageFilter = parsedQuery.languageFilter;\n\t\tif (\n\t\t\tmanualReset ||\n\t\t\t(this.pendingSettingUpdate && this.pendingSettingUpdate.key !== key)\n\t\t) {\n\t\t\tthis.updateChangedSetting(\n\t\t\t\tkey,\n\t\t\t\tvalue,\n\t\t\t\tmanualReset,\n\t\t\t\tlanguageFilter,\n\t\t\t\tscope,\n\t\t\t);\n\t\t}\n\n\t\tthis.pendingSettingUpdate = { key, value, languageFilter };\n\t\tif (SettingsEditor2.shouldSettingUpdateFast(type)) {\n\t\t\tthis.settingFastUpdateDelayer.trigger(() =>\n\t\t\t\tthis.updateChangedSetting(\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tmanualReset,\n\t\t\t\t\tlanguageFilter,\n\t\t\t\t\tscope,\n\t\t\t\t),\n\t\t\t);\n\t\t} else {\n\t\t\tthis.settingSlowUpdateDelayer.trigger(() =>\n\t\t\t\tthis.updateChangedSetting(\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tmanualReset,\n\t\t\t\t\tlanguageFilter,\n\t\t\t\t\tscope,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate updateTreeScrollSync(): void {\n\t\tthis.settingRenderers.cancelSuggesters();\n\t\tif (this.searchResultModel) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.tocTreeModel) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst elementToSync = this.settingsTree.firstVisibleElement;\n\t\tconst element =\n\t\t\telementToSync instanceof SettingsTreeSettingElement\n\t\t\t\t? elementToSync.parent\n\t\t\t\t: elementToSync instanceof SettingsTreeGroupElement\n\t\t\t\t\t? elementToSync\n\t\t\t\t\t: null;\n\n\t\t// It's possible for this to be called when the TOC and settings tree are out of sync - e.g. when the settings tree has deferred a refresh because\n\t\t// it is focused. So, bail if element doesn't exist in the TOC.\n\t\tlet nodeExists = true;\n\t\ttry {\n\t\t\tthis.tocTree.getNode(element);\n\t\t} catch (e) {\n\t\t\tnodeExists = false;\n\t\t}\n\t\tif (!nodeExists) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (element && this.tocTree.getSelection()[0] !== element) {\n\t\t\tconst ancestors = this.getAncestors(element);\n\t\t\tancestors.forEach((e) =>\n\t\t\t\tthis.tocTree.expand(<SettingsTreeGroupElement>e),\n\t\t\t);\n\n\t\t\tthis.tocTree.reveal(element);\n\t\t\tconst elementTop = this.tocTree.getRelativeTop(element);\n\t\t\tif (typeof elementTop !== \"number\") {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.tocTree.collapseAll();\n\n\t\t\tancestors.forEach((e) =>\n\t\t\t\tthis.tocTree.expand(<SettingsTreeGroupElement>e),\n\t\t\t);\n\t\t\tif (elementTop < 0 || elementTop > 1) {\n\t\t\t\tthis.tocTree.reveal(element);\n\t\t\t} else {\n\t\t\t\tthis.tocTree.reveal(element, elementTop);\n\t\t\t}\n\n\t\t\tthis.tocTree.expand(element);\n\n\t\t\tthis.tocTree.setSelection([element]);\n\n\t\t\tconst fakeKeyboardEvent = new KeyboardEvent(\"keydown\");\n\t\t\t(<IFocusEventFromScroll>fakeKeyboardEvent).fromScroll = true;\n\t\t\tthis.tocTree.setFocus([element], fakeKeyboardEvent);\n\t\t}\n\t}\n\n\tprivate getAncestors(element: SettingsTreeElement): SettingsTreeElement[] {\n\t\tconst ancestors: any[] = [];\n\n\t\twhile (element.parent) {\n\t\t\tif (element.parent.id !== \"root\") {\n\t\t\t\tancestors.push(element.parent);\n\t\t\t}\n\n\t\t\telement = element.parent;\n\t\t}\n\n\t\treturn ancestors.reverse();\n\t}\n\n\tprivate updateChangedSetting(\n\t\tkey: string,\n\t\tvalue: any,\n\t\tmanualReset: boolean,\n\t\tlanguageFilter: string | undefined,\n\t\tscope: ConfigurationScope | undefined,\n\t): Promise<void> {\n\t\t// ConfigurationService displays the error if this fails.\n\t\t// Force a render afterwards because onDidConfigurationUpdate doesn't fire if the update doesn't result in an effective setting value change.\n\t\tconst settingsTarget = this.settingsTargetsWidget.settingsTarget;\n\t\tconst resource = URI.isUri(settingsTarget) ? settingsTarget : undefined;\n\t\tconst configurationTarget =\n\t\t\t<ConfigurationTarget | null>(\n\t\t\t\t(resource\n\t\t\t\t\t? ConfigurationTarget.WORKSPACE_FOLDER\n\t\t\t\t\t: settingsTarget)\n\t\t\t) ?? ConfigurationTarget.USER_LOCAL;\n\t\tconst overrides: IConfigurationUpdateOverrides = {\n\t\t\tresource,\n\t\t\toverrideIdentifiers: languageFilter ? [languageFilter] : undefined,\n\t\t};\n\n\t\tconst configurationTargetIsWorkspace =\n\t\t\tconfigurationTarget === ConfigurationTarget.WORKSPACE ||\n\t\t\tconfigurationTarget === ConfigurationTarget.WORKSPACE_FOLDER;\n\n\t\tconst userPassedInManualReset =\n\t\t\tconfigurationTargetIsWorkspace || !!languageFilter;\n\t\tconst isManualReset = userPassedInManualReset\n\t\t\t? manualReset\n\t\t\t: value === undefined;\n\n\t\t// If the user is changing the value back to the default, and we're not targeting a workspace scope, do a 'reset' instead\n\t\tconst inspected = this.configurationService.inspect(key, overrides);\n\t\tif (!userPassedInManualReset && inspected.defaultValue === value) {\n\t\t\tvalue = undefined;\n\t\t}\n\n\t\treturn this.configurationService\n\t\t\t.updateValue(key, value, overrides, configurationTarget, {\n\t\t\t\thandleDirtyFile: \"save\",\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tconst query = this.searchWidget.getValue();\n\t\t\t\tif (query.includes(`@${MODIFIED_SETTING_TAG}`)) {\n\t\t\t\t\t// The user might have reset a setting.\n\t\t\t\t\tthis.refreshTOCTree();\n\t\t\t\t}\n\t\t\t\tthis.renderTree(key, isManualReset);\n\t\t\t\tconst reportModifiedProps = {\n\t\t\t\t\tkey,\n\t\t\t\t\tquery,\n\t\t\t\t\tsearchResults:\n\t\t\t\t\t\tthis.searchResultModel?.getUniqueResults() ?? null,\n\t\t\t\t\trawResults: this.searchResultModel?.getRawResults() ?? null,\n\t\t\t\t\tshowConfiguredOnly:\n\t\t\t\t\t\t!!this.viewState.tagFilters &&\n\t\t\t\t\t\tthis.viewState.tagFilters.has(MODIFIED_SETTING_TAG),\n\t\t\t\t\tisReset: typeof value === \"undefined\",\n\t\t\t\t\tsettingsTarget: this.settingsTargetsWidget\n\t\t\t\t\t\t.settingsTarget as SettingsTarget,\n\t\t\t\t};\n\n\t\t\t\tthis.pendingSettingUpdate = null;\n\t\t\t\treturn this.reportModifiedSetting(reportModifiedProps);\n\t\t\t});\n\t}\n\n\tprivate reportModifiedSetting(props: {\n\t\tkey: string;\n\t\tquery: string;\n\t\tsearchResults: ISearchResult | null;\n\t\trawResults: ISearchResult[] | null;\n\t\tshowConfiguredOnly: boolean;\n\t\tisReset: boolean;\n\t\tsettingsTarget: SettingsTarget;\n\t}): void {\n\t\ttype SettingsEditorModifiedSettingEvent = {\n\t\t\tkey: string;\n\t\t\tgroupId: string | undefined;\n\t\t\tnlpIndex: number | undefined;\n\t\t\tdisplayIndex: number | undefined;\n\t\t\tshowConfiguredOnly: boolean;\n\t\t\tisReset: boolean;\n\t\t\ttarget: string;\n\t\t};\n\t\ttype SettingsEditorModifiedSettingClassification = {\n\t\t\tkey: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"The setting that is being modified.\";\n\t\t\t};\n\t\t\tgroupId: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Whether the setting is from the local search or remote search provider, if applicable.\";\n\t\t\t};\n\t\t\tnlpIndex: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"The index of the setting in the remote search provider results, if applicable.\";\n\t\t\t};\n\t\t\tdisplayIndex: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"The index of the setting in the combined search results, if applicable.\";\n\t\t\t};\n\t\t\tshowConfiguredOnly: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Whether the user is in the modified view, which shows configured settings only.\";\n\t\t\t};\n\t\t\tisReset: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Identifies whether a setting was reset to its default value.\";\n\t\t\t};\n\t\t\ttarget: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"The scope of the setting, such as user or workspace.\";\n\t\t\t};\n\t\t\towner: \"rzhao271\";\n\t\t\tcomment: \"Event emitted when the user modifies a setting in the Settings editor\";\n\t\t};\n\n\t\tlet groupId: string | undefined;\n\t\tlet nlpIndex: number | undefined;\n\t\tlet displayIndex: number | undefined;\n\t\tif (props.searchResults) {\n\t\t\tdisplayIndex = props.searchResults.filterMatches.findIndex(\n\t\t\t\t(m) => m.setting.key === props.key,\n\t\t\t);\n\n\t\t\tif (this.searchResultModel) {\n\t\t\t\tconst rawResults = this.searchResultModel.getRawResults();\n\t\t\t\tif (rawResults[SearchResultIdx.Local] && displayIndex >= 0) {\n\t\t\t\t\tconst settingInLocalResults = rawResults[\n\t\t\t\t\t\tSearchResultIdx.Local\n\t\t\t\t\t].filterMatches.some((m) => m.setting.key === props.key);\n\t\t\t\t\tgroupId = settingInLocalResults ? \"local\" : \"remote\";\n\t\t\t\t}\n\t\t\t\tif (rawResults[SearchResultIdx.Remote]) {\n\t\t\t\t\tconst _nlpIndex = rawResults[\n\t\t\t\t\t\tSearchResultIdx.Remote\n\t\t\t\t\t].filterMatches.findIndex(\n\t\t\t\t\t\t(m) => m.setting.key === props.key,\n\t\t\t\t\t);\n\t\t\t\t\tnlpIndex = _nlpIndex >= 0 ? _nlpIndex : undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst reportedTarget =\n\t\t\tprops.settingsTarget === ConfigurationTarget.USER_LOCAL\n\t\t\t\t? \"user\"\n\t\t\t\t: props.settingsTarget === ConfigurationTarget.USER_REMOTE\n\t\t\t\t\t? \"user_remote\"\n\t\t\t\t\t: props.settingsTarget === ConfigurationTarget.WORKSPACE\n\t\t\t\t\t\t? \"workspace\"\n\t\t\t\t\t\t: \"folder\";\n\n\t\tconst data = {\n\t\t\tkey: props.key,\n\t\t\tgroupId,\n\t\t\tnlpIndex,\n\t\t\tdisplayIndex,\n\t\t\tshowConfiguredOnly: props.showConfiguredOnly,\n\t\t\tisReset: props.isReset,\n\t\t\ttarget: reportedTarget,\n\t\t};\n\n\t\tthis.telemetryService.publicLog2<\n\t\t\tSettingsEditorModifiedSettingEvent,\n\t\t\tSettingsEditorModifiedSettingClassification\n\t\t>(\"settingsEditor.settingModified\", data);\n\t}\n\n\tprivate scheduleRefresh(element: HTMLElement, key = \"\"): void {\n\t\tif (key && this.scheduledRefreshes.has(key)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!key) {\n\t\t\tdispose(this.scheduledRefreshes.values());\n\t\t\tthis.scheduledRefreshes.clear();\n\t\t}\n\n\t\tconst scheduledRefreshTracker = DOM.trackFocus(element);\n\t\tthis.scheduledRefreshes.set(key, scheduledRefreshTracker);\n\t\tscheduledRefreshTracker.onDidBlur(() => {\n\t\t\tscheduledRefreshTracker.dispose();\n\t\t\tthis.scheduledRefreshes.delete(key);\n\t\t\tthis.onConfigUpdate(new Set([key]));\n\t\t});\n\t}\n\n\tprivate createSettingsOrderByTocIndex(\n\t\tresolvedSettingsRoot: ITOCEntry<ISetting>,\n\t): Map<string, number> {\n\t\tconst index = new Map<string, number>();\n\t\tfunction indexSettings(\n\t\t\tresolvedSettingsRoot: ITOCEntry<ISetting>,\n\t\t\tcounter = 0,\n\t\t): number {\n\t\t\tif (resolvedSettingsRoot.settings) {\n\t\t\t\tfor (const setting of resolvedSettingsRoot.settings) {\n\t\t\t\t\tif (!index.has(setting.key)) {\n\t\t\t\t\t\tindex.set(setting.key, counter++);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (resolvedSettingsRoot.children) {\n\t\t\t\tfor (const child of resolvedSettingsRoot.children) {\n\t\t\t\t\tcounter = indexSettings(child, counter);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn counter;\n\t\t}\n\t\tindexSettings(resolvedSettingsRoot);\n\t\treturn index;\n\t}\n\n\tprivate refreshModels(resolvedSettingsRoot: ITOCEntry<ISetting>) {\n\t\tthis.settingsTreeModel.update(resolvedSettingsRoot);\n\t\tthis.tocTreeModel.settingsTreeRoot = this.settingsTreeModel.root;\n\t\tthis.settingsOrderByTocIndex =\n\t\t\tthis.createSettingsOrderByTocIndex(resolvedSettingsRoot);\n\t}\n\n\tprivate async onConfigUpdate(\n\t\tkeys?: ReadonlySet<string>,\n\t\tforceRefresh = false,\n\t\tschemaChange = false,\n\t): Promise<void> {\n\t\tif (keys && this.settingsTreeModel) {\n\t\t\treturn this.updateElementsByKey(keys);\n\t\t}\n\n\t\tif (!this.defaultSettingsEditorModel) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst groups = this.defaultSettingsEditorModel.settingsGroups.slice(1); // Without commonlyUsed\n\n\t\tconst coreSettings = groups.filter((g) => !g.extensionInfo);\n\t\tconst settingsResult = resolveSettingsTree(\n\t\t\ttocData,\n\t\t\tcoreSettings,\n\t\t\tthis.logService,\n\t\t);\n\t\tconst resolvedSettingsRoot = settingsResult.tree;\n\n\t\t// Warn for settings not included in layout\n\t\tif (\n\t\t\tsettingsResult.leftoverSettings.size &&\n\t\t\t!this.hasWarnedMissingSettings\n\t\t) {\n\t\t\tconst settingKeyList: string[] = [];\n\t\t\tsettingsResult.leftoverSettings.forEach((s) => {\n\t\t\t\tsettingKeyList.push(s.key);\n\t\t\t});\n\n\t\t\tthis.logService.warn(\n\t\t\t\t`SettingsEditor2: Settings not included in settingsLayout.ts: ${settingKeyList.join(\", \")}`,\n\t\t\t);\n\t\t\tthis.hasWarnedMissingSettings = true;\n\t\t}\n\n\t\tconst additionalGroups: ISettingsGroup[] = [];\n\t\tlet setAdditionalGroups = false;\n\t\tconst toggleData = await getExperimentalExtensionToggleData(\n\t\t\tthis.extensionGalleryService,\n\t\t\tthis.productService,\n\t\t);\n\t\tif (toggleData && groups.filter((g) => g.extensionInfo).length) {\n\t\t\tfor (const key in toggleData.settingsEditorRecommendedExtensions) {\n\t\t\t\tconst extension: IGalleryExtension =\n\t\t\t\t\ttoggleData.recommendedExtensionsGalleryInfo[key];\n\t\t\t\tif (!extension) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst extensionId = extension.identifier.id;\n\t\t\t\tconst extensionInstalled =\n\t\t\t\t\tthis.installedExtensionIds.includes(extensionId);\n\n\t\t\t\t// Drill down to see whether the group and setting already exist\n\t\t\t\t// and need to be removed.\n\t\t\t\tconst matchingGroupIndex = groups.findIndex(\n\t\t\t\t\t(g) =>\n\t\t\t\t\t\tg.extensionInfo &&\n\t\t\t\t\t\tg.extensionInfo!.id.toLowerCase() ===\n\t\t\t\t\t\t\textensionId.toLowerCase() &&\n\t\t\t\t\t\tg.sections.length === 1 &&\n\t\t\t\t\t\tg.sections[0].settings.length === 1 &&\n\t\t\t\t\t\tg.sections[0].settings[0].displayExtensionId,\n\t\t\t\t);\n\t\t\t\tif (\n\t\t\t\t\textensionInstalled ||\n\t\t\t\t\tthis.dismissedExtensionSettings.includes(extensionId)\n\t\t\t\t) {\n\t\t\t\t\tif (matchingGroupIndex !== -1) {\n\t\t\t\t\t\tgroups.splice(matchingGroupIndex, 1);\n\t\t\t\t\t\tsetAdditionalGroups = true;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (matchingGroupIndex !== -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Create the entry. extensionInstalled is false in this case.\n\t\t\t\tlet manifest: IExtensionManifest | null = null;\n\t\t\t\ttry {\n\t\t\t\t\tmanifest = await this.extensionGalleryService.getManifest(\n\t\t\t\t\t\textension,\n\t\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\t);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// Likely a networking issue.\n\t\t\t\t\t// Skip adding a button for this extension to the Settings editor.\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst contributesConfiguration =\n\t\t\t\t\tmanifest?.contributes?.configuration;\n\n\t\t\t\tlet groupTitle: string | undefined;\n\t\t\t\tif (!Array.isArray(contributesConfiguration)) {\n\t\t\t\t\tgroupTitle = contributesConfiguration?.title;\n\t\t\t\t} else if (contributesConfiguration.length === 1) {\n\t\t\t\t\tgroupTitle = contributesConfiguration[0].title;\n\t\t\t\t}\n\n\t\t\t\tconst recommendationInfo =\n\t\t\t\t\ttoggleData.settingsEditorRecommendedExtensions[key];\n\t\t\t\tconst extensionName =\n\t\t\t\t\textension.displayName ?? extension.name ?? extensionId;\n\t\t\t\tconst settingKey = `${key}.manageExtension`;\n\t\t\t\tconst setting: ISetting = {\n\t\t\t\t\trange: nullRange,\n\t\t\t\t\tkey: settingKey,\n\t\t\t\t\tkeyRange: nullRange,\n\t\t\t\t\tvalue: null,\n\t\t\t\t\tvalueRange: nullRange,\n\t\t\t\t\tdescription: [\n\t\t\t\t\t\trecommendationInfo.onSettingsEditorOpen\n\t\t\t\t\t\t\t?.descriptionOverride ?? extension.description,\n\t\t\t\t\t],\n\t\t\t\t\tdescriptionIsMarkdown: false,\n\t\t\t\t\tdescriptionRanges: [],\n\t\t\t\t\tscope: ConfigurationScope.WINDOW,\n\t\t\t\t\ttype: \"null\",\n\t\t\t\t\tdisplayExtensionId: extensionId,\n\t\t\t\t\textensionGroupTitle: groupTitle ?? extensionName,\n\t\t\t\t\tcategoryLabel: \"Extensions\",\n\t\t\t\t\ttitle: extensionName,\n\t\t\t\t};\n\t\t\t\tconst additionalGroup: ISettingsGroup = {\n\t\t\t\t\tsections: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsettings: [setting],\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tid: extensionId,\n\t\t\t\t\ttitle: setting.extensionGroupTitle!,\n\t\t\t\t\ttitleRange: nullRange,\n\t\t\t\t\trange: nullRange,\n\t\t\t\t\textensionInfo: {\n\t\t\t\t\t\tid: extensionId,\n\t\t\t\t\t\tdisplayName: extension.displayName,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\tgroups.push(additionalGroup);\n\t\t\t\tadditionalGroups.push(additionalGroup);\n\t\t\t\tsetAdditionalGroups = true;\n\t\t\t}\n\t\t}\n\n\t\tresolvedSettingsRoot.children!.push(\n\t\t\tawait createTocTreeForExtensionSettings(\n\t\t\t\tthis.extensionService,\n\t\t\t\tgroups.filter((g) => g.extensionInfo),\n\t\t\t),\n\t\t);\n\n\t\tconst commonlyUsedDataToUse = getCommonlyUsedData(toggleData);\n\t\tconst commonlyUsed = resolveSettingsTree(\n\t\t\tcommonlyUsedDataToUse,\n\t\t\tgroups,\n\t\t\tthis.logService,\n\t\t);\n\t\tresolvedSettingsRoot.children!.unshift(commonlyUsed.tree);\n\n\t\tif (toggleData && setAdditionalGroups) {\n\t\t\t// Add the additional groups to the model to help with searching.\n\t\t\tthis.defaultSettingsEditorModel.setAdditionalGroups(\n\t\t\t\tadditionalGroups,\n\t\t\t);\n\t\t}\n\n\t\tif (\n\t\t\t!this.workspaceTrustManagementService.isWorkspaceTrusted() &&\n\t\t\t(this.viewState.settingsTarget instanceof URI ||\n\t\t\t\tthis.viewState.settingsTarget === ConfigurationTarget.WORKSPACE)\n\t\t) {\n\t\t\tconst configuredUntrustedWorkspaceSettings =\n\t\t\t\tresolveConfiguredUntrustedSettings(\n\t\t\t\t\tgroups,\n\t\t\t\t\tthis.viewState.settingsTarget,\n\t\t\t\t\tthis.viewState.languageFilter,\n\t\t\t\t\tthis.configurationService,\n\t\t\t\t);\n\t\t\tif (configuredUntrustedWorkspaceSettings.length) {\n\t\t\t\tresolvedSettingsRoot.children!.unshift({\n\t\t\t\t\tid: \"workspaceTrust\",\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\"settings require trust\",\n\t\t\t\t\t\t\"Workspace Trust\",\n\t\t\t\t\t),\n\t\t\t\t\tsettings: configuredUntrustedWorkspaceSettings,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tthis.searchResultModel?.updateChildren();\n\n\t\tif (this.settingsTreeModel) {\n\t\t\tthis.refreshModels(resolvedSettingsRoot);\n\n\t\t\tif (schemaChange && !!this.searchResultModel) {\n\t\t\t\t// If an extension's settings were just loaded and a search is active, retrigger the search so it shows up\n\t\t\t\treturn await this.onSearchInputChanged();\n\t\t\t}\n\n\t\t\tthis.refreshTOCTree();\n\t\t\tthis.renderTree(undefined, forceRefresh);\n\t\t} else {\n\t\t\tthis.settingsTreeModel = this.instantiationService.createInstance(\n\t\t\t\tSettingsTreeModel,\n\t\t\t\tthis.viewState,\n\t\t\t\tthis.workspaceTrustManagementService.isWorkspaceTrusted(),\n\t\t\t);\n\t\t\tthis.refreshModels(resolvedSettingsRoot);\n\n\t\t\t// Don't restore the cached state if we already have a query value from calling _setOptions().\n\t\t\tconst cachedState = this.viewState.query\n\t\t\t\t? undefined\n\t\t\t\t: this.restoreCachedState();\n\t\t\tif (cachedState?.searchQuery || this.searchWidget.getValue()) {\n\t\t\t\tawait this.onSearchInputChanged();\n\t\t\t} else {\n\t\t\t\tthis.refreshTOCTree();\n\t\t\t\tthis.refreshTree();\n\t\t\t\tthis.tocTree.collapseAll();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateElementsByKey(keys: ReadonlySet<string>): void {\n\t\tif (keys.size) {\n\t\t\tif (this.searchResultModel) {\n\t\t\t\tkeys.forEach((key) =>\n\t\t\t\t\tthis.searchResultModel!.updateElementsByName(key),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (this.settingsTreeModel) {\n\t\t\t\tkeys.forEach((key) =>\n\t\t\t\t\tthis.settingsTreeModel.updateElementsByName(key),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tkeys.forEach((key) => this.renderTree(key));\n\t\t} else {\n\t\t\tthis.renderTree();\n\t\t}\n\t}\n\n\tprivate getActiveControlInSettingsTree(): HTMLElement | null {\n\t\tconst element = this.settingsTree.getHTMLElement();\n\t\tconst activeElement = element.ownerDocument.activeElement;\n\t\treturn activeElement && DOM.isAncestorOfActiveElement(element)\n\t\t\t? <HTMLElement>activeElement\n\t\t\t: null;\n\t}\n\n\tprivate renderTree(key?: string, force = false): void {\n\t\tif (!force && key && this.scheduledRefreshes.has(key)) {\n\t\t\tthis.updateModifiedLabelForKey(key);\n\t\t\treturn;\n\t\t}\n\n\t\t// If the context view is focused, delay rendering settings\n\t\tif (this.contextViewFocused()) {\n\t\t\tconst element = this.window.document.querySelector(\".context-view\");\n\t\t\tif (element) {\n\t\t\t\tthis.scheduleRefresh(element as HTMLElement, key);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// If a setting control is currently focused, schedule a refresh for later\n\t\tconst activeElement = this.getActiveControlInSettingsTree();\n\t\tconst focusedSetting =\n\t\t\tactiveElement &&\n\t\t\tthis.settingRenderers.getSettingDOMElementForDOMElement(\n\t\t\t\tactiveElement,\n\t\t\t);\n\t\tif (focusedSetting && !force) {\n\t\t\t// If a single setting is being refreshed, it's ok to refresh now if that is not the focused setting\n\t\t\tif (key) {\n\t\t\t\tconst focusedKey = focusedSetting.getAttribute(\n\t\t\t\t\tAbstractSettingRenderer.SETTING_KEY_ATTR,\n\t\t\t\t);\n\t\t\t\tif (\n\t\t\t\t\tfocusedKey === key &&\n\t\t\t\t\t// update `list`s live, as they have a separate \"submit edit\" step built in before this\n\t\t\t\t\tfocusedSetting.parentElement &&\n\t\t\t\t\t!focusedSetting.parentElement.classList.contains(\n\t\t\t\t\t\t\"setting-item-list\",\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tthis.updateModifiedLabelForKey(key);\n\t\t\t\t\tthis.scheduleRefresh(focusedSetting, key);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.scheduleRefresh(focusedSetting);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.renderResultCountMessages();\n\n\t\tif (key) {\n\t\t\tconst elements = this.currentSettingsModel.getElementsByName(key);\n\t\t\tif (elements && elements.length) {\n\t\t\t\tif (elements.length >= 2) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\"More than one setting with key \" + key + \" found\",\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tthis.refreshSingleElement(elements[0]);\n\t\t\t} else {\n\t\t\t\t// Refresh requested for a key that we don't know about\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.refreshTree();\n\t\t}\n\n\t\treturn;\n\t}\n\n\tprivate contextViewFocused(): boolean {\n\t\treturn !!DOM.findParentWithClass(\n\t\t\t<HTMLElement>this.rootElement.ownerDocument.activeElement,\n\t\t\t\"context-view\",\n\t\t);\n\t}\n\n\tprivate refreshSingleElement(element: SettingsTreeSettingElement): void {\n\t\tif (this.isVisible()) {\n\t\t\tthis.settingsTree.rerender(element);\n\t\t}\n\t}\n\n\tprivate refreshTree(): void {\n\t\tif (this.isVisible()) {\n\t\t\tthis.settingsTree.setChildren(\n\t\t\t\tnull,\n\t\t\t\tcreateGroupIterator(this.currentSettingsModel.root),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate refreshTOCTree(): void {\n\t\tif (this.isVisible()) {\n\t\t\tthis.tocTreeModel.update();\n\t\t\tthis.tocTree.setChildren(\n\t\t\t\tnull,\n\t\t\t\tcreateTOCIterator(this.tocTreeModel, this.tocTree),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate updateModifiedLabelForKey(key: string): void {\n\t\tconst dataElements = this.currentSettingsModel.getElementsByName(key);\n\t\tconst isModified =\n\t\t\tdataElements && dataElements[0] && dataElements[0].isConfigured; // all elements are either configured or not\n\t\tconst elements = this.settingRenderers.getDOMElementsForSettingKey(\n\t\t\tthis.settingsTree.getHTMLElement(),\n\t\t\tkey,\n\t\t);\n\t\tif (elements && elements[0]) {\n\t\t\telements[0].classList.toggle(\"is-configured\", !!isModified);\n\t\t}\n\t}\n\n\tprivate async onSearchInputChanged(): Promise<void> {\n\t\tif (!this.currentSettingsModel) {\n\t\t\t// Initializing search widget value\n\t\t\treturn;\n\t\t}\n\n\t\tconst query = this.searchWidget.getValue().trim();\n\t\tthis.viewState.query = query;\n\t\tthis.delayedFilterLogging.cancel();\n\t\tawait this.triggerSearch(query.replace(/\\u203A/g, \" \"));\n\n\t\tif (query && this.searchResultModel) {\n\t\t\tthis.delayedFilterLogging.trigger(() =>\n\t\t\t\tthis.reportFilteringUsed(this.searchResultModel),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate parseSettingFromJSON(query: string): string | null {\n\t\tconst match = query.match(/\"([a-zA-Z.]+)\": /);\n\t\treturn match && match[1];\n\t}\n\n\t/**\n\t * Toggles the visibility of the Settings editor table of contents during a search\n\t * depending on the behavior.\n\t */\n\tprivate toggleTocBySearchBehaviorType() {\n\t\tconst tocBehavior = this.configurationService.getValue<\n\t\t\t\"filter\" | \"hide\"\n\t\t>(SEARCH_TOC_BEHAVIOR_KEY);\n\t\tconst hideToc = tocBehavior === \"hide\";\n\t\tif (hideToc) {\n\t\t\tthis.splitView.setViewVisible(0, false);\n\t\t\tthis.splitView.style({\n\t\t\t\tseparatorBorder: Color.transparent,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.splitView.setViewVisible(0, true);\n\t\t\tthis.splitView.style({\n\t\t\t\tseparatorBorder: this.theme.getColor(settingsSashBorder)!,\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate async triggerSearch(query: string): Promise<void> {\n\t\tconst progressRunner = this.editorProgressService.show(true);\n\t\tthis.viewState.tagFilters = new Set<string>();\n\t\tthis.viewState.extensionFilters = new Set<string>();\n\t\tthis.viewState.featureFilters = new Set<string>();\n\t\tthis.viewState.idFilters = new Set<string>();\n\t\tthis.viewState.languageFilter = undefined;\n\t\tif (query) {\n\t\t\tconst parsedQuery = parseQuery(query);\n\t\t\tquery = parsedQuery.query;\n\t\t\tparsedQuery.tags.forEach((tag) =>\n\t\t\t\tthis.viewState.tagFilters!.add(tag),\n\t\t\t);\n\t\t\tparsedQuery.extensionFilters.forEach((extensionId) =>\n\t\t\t\tthis.viewState.extensionFilters!.add(extensionId),\n\t\t\t);\n\t\t\tparsedQuery.featureFilters.forEach((feature) =>\n\t\t\t\tthis.viewState.featureFilters!.add(feature),\n\t\t\t);\n\t\t\tparsedQuery.idFilters.forEach((id) =>\n\t\t\t\tthis.viewState.idFilters!.add(id),\n\t\t\t);\n\t\t\tthis.viewState.languageFilter = parsedQuery.languageFilter;\n\t\t}\n\n\t\tthis.settingsTargetsWidget.updateLanguageFilterIndicators(\n\t\t\tthis.viewState.languageFilter,\n\t\t);\n\n\t\tif (query && query !== \"@\") {\n\t\t\tquery = this.parseSettingFromJSON(query) || query;\n\t\t\tawait this.triggerFilterPreferences(query);\n\t\t\tthis.toggleTocBySearchBehaviorType();\n\t\t} else {\n\t\t\tif (\n\t\t\t\tthis.viewState.tagFilters.size ||\n\t\t\t\tthis.viewState.extensionFilters.size ||\n\t\t\t\tthis.viewState.featureFilters.size ||\n\t\t\t\tthis.viewState.idFilters.size ||\n\t\t\t\tthis.viewState.languageFilter\n\t\t\t) {\n\t\t\t\tthis.searchResultModel = this.createFilterModel();\n\t\t\t} else {\n\t\t\t\tthis.searchResultModel = null;\n\t\t\t}\n\n\t\t\tthis.searchDelayer.cancel();\n\t\t\tif (this.searchInProgress) {\n\t\t\t\tthis.searchInProgress.cancel();\n\t\t\t\tthis.searchInProgress.dispose();\n\t\t\t\tthis.searchInProgress = null;\n\t\t\t}\n\n\t\t\tthis.tocTree.setFocus([]);\n\t\t\tthis.viewState.filterToCategory = undefined;\n\t\t\tthis.tocTreeModel.currentSearchModel = this.searchResultModel;\n\n\t\t\tif (this.searchResultModel) {\n\t\t\t\t// Added a filter model\n\t\t\t\tthis.tocTree.setSelection([]);\n\t\t\t\tthis.tocTree.expandAll();\n\t\t\t\tthis.refreshTOCTree();\n\t\t\t\tthis.renderResultCountMessages();\n\t\t\t\tthis.refreshTree();\n\t\t\t\tthis.toggleTocBySearchBehaviorType();\n\t\t\t} else if (!this.tocTreeDisposed) {\n\t\t\t\t// Leaving search mode\n\t\t\t\tthis.tocTree.collapseAll();\n\t\t\t\tthis.refreshTOCTree();\n\t\t\t\tthis.renderResultCountMessages();\n\t\t\t\tthis.refreshTree();\n\t\t\t\t// Always show the ToC when leaving search mode\n\t\t\t\tthis.splitView.setViewVisible(0, true);\n\t\t\t}\n\t\t}\n\t\tprogressRunner.done();\n\t}\n\n\t/**\n\t * Return a fake SearchResultModel which can hold a flat list of all settings, to be filtered (@modified etc)\n\t */\n\tprivate createFilterModel(): SearchResultModel {\n\t\tconst filterModel = this.instantiationService.createInstance(\n\t\t\tSearchResultModel,\n\t\t\tthis.viewState,\n\t\t\tthis.settingsOrderByTocIndex,\n\t\t\tthis.workspaceTrustManagementService.isWorkspaceTrusted(),\n\t\t);\n\n\t\tconst fullResult: ISearchResult = {\n\t\t\tfilterMatches: [],\n\t\t};\n\t\tfor (const g of this.defaultSettingsEditorModel.settingsGroups.slice(\n\t\t\t1,\n\t\t)) {\n\t\t\tfor (const sect of g.sections) {\n\t\t\t\tfor (const setting of sect.settings) {\n\t\t\t\t\tfullResult.filterMatches.push({\n\t\t\t\t\t\tsetting,\n\t\t\t\t\t\tmatches: [],\n\t\t\t\t\t\tmatchType: SettingMatchType.None,\n\t\t\t\t\t\tscore: 0,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfilterModel.setResult(0, fullResult);\n\t\treturn filterModel;\n\t}\n\n\tprivate reportFilteringUsed(\n\t\tsearchResultModel: SearchResultModel | null,\n\t): void {\n\t\tif (!searchResultModel) {\n\t\t\treturn;\n\t\t}\n\n\t\ttype SettingsEditorFilterEvent = {\n\t\t\t\"counts.nlpResult\": number | undefined;\n\t\t\t\"counts.filterResult\": number | undefined;\n\t\t\t\"counts.uniqueResultsCount\": number | undefined;\n\t\t};\n\t\ttype SettingsEditorFilterClassification = {\n\t\t\t\"counts.nlpResult\": {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"The number of matches found by the remote search provider, if applicable.\";\n\t\t\t};\n\t\t\t\"counts.filterResult\": {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"The number of matches found by the local search provider, if applicable.\";\n\t\t\t};\n\t\t\t\"counts.uniqueResultsCount\": {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"The number of unique matches over both search providers, if applicable.\";\n\t\t\t};\n\t\t\towner: \"rzhao271\";\n\t\t\tcomment: \"Tracks the performance of the built-in search providers\";\n\t\t};\n\t\t// Count unique results\n\t\tconst counts: { nlpResult?: number; filterResult?: number } = {};\n\t\tconst rawResults = searchResultModel.getRawResults();\n\t\tconst filterResult = rawResults[SearchResultIdx.Local];\n\t\tif (filterResult) {\n\t\t\tcounts[\"filterResult\"] = filterResult.filterMatches.length;\n\t\t}\n\t\tconst nlpResult = rawResults[SearchResultIdx.Remote];\n\t\tif (nlpResult) {\n\t\t\tcounts[\"nlpResult\"] = nlpResult.filterMatches.length;\n\t\t}\n\n\t\tconst uniqueResults = searchResultModel.getUniqueResults();\n\t\tconst data = {\n\t\t\t\"counts.nlpResult\": counts[\"nlpResult\"],\n\t\t\t\"counts.filterResult\": counts[\"filterResult\"],\n\t\t\t\"counts.uniqueResultsCount\": uniqueResults?.filterMatches.length,\n\t\t};\n\t\tthis.telemetryService.publicLog2<\n\t\t\tSettingsEditorFilterEvent,\n\t\t\tSettingsEditorFilterClassification\n\t\t>(\"settingsEditor.filter\", data);\n\t}\n\n\tprivate async triggerFilterPreferences(query: string): Promise<void> {\n\t\tif (this.searchInProgress) {\n\t\t\tthis.searchInProgress.cancel();\n\t\t\tthis.searchInProgress = null;\n\t\t}\n\n\t\t// Trigger the local search. If it didn't find an exact match, trigger the remote search.\n\t\tconst searchInProgress = (this.searchInProgress =\n\t\t\tnew CancellationTokenSource());\n\t\treturn this.searchDelayer.trigger(async () => {\n\t\t\tif (!searchInProgress.token.isCancellationRequested) {\n\t\t\t\tconst localResults = await this.localFilterPreferences(\n\t\t\t\t\tquery,\n\t\t\t\t\tsearchInProgress.token,\n\t\t\t\t);\n\t\t\t\tif (\n\t\t\t\t\tlocalResults &&\n\t\t\t\t\t!localResults.exactMatch &&\n\t\t\t\t\t!searchInProgress.token.isCancellationRequested\n\t\t\t\t) {\n\t\t\t\t\tawait this.remoteSearchPreferences(\n\t\t\t\t\t\tquery,\n\t\t\t\t\t\tsearchInProgress.token,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Update UI only after all the search results are in\n\t\t\t\t// ref https://github.com/microsoft/vscode/issues/224946\n\t\t\t\tthis.onDidFinishSearch();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate onDidFinishSearch() {\n\t\tthis.tocTreeModel.currentSearchModel = this.searchResultModel;\n\t\tthis.tocTreeModel.update();\n\t\tthis.tocTree.setFocus([]);\n\t\tthis.viewState.filterToCategory = undefined;\n\t\tthis.tocTree.expandAll();\n\t\tthis.settingsTree.scrollTop = 0;\n\t\tthis.refreshTOCTree();\n\t\tthis.renderTree(undefined, true);\n\t}\n\n\tprivate localFilterPreferences(\n\t\tquery: string,\n\t\ttoken?: CancellationToken,\n\t): Promise<ISearchResult | null> {\n\t\tconst localSearchProvider =\n\t\t\tthis.preferencesSearchService.getLocalSearchProvider(query);\n\t\treturn this.filterOrSearchPreferences(\n\t\t\tquery,\n\t\t\tSearchResultIdx.Local,\n\t\t\tlocalSearchProvider,\n\t\t\ttoken,\n\t\t);\n\t}\n\n\tprivate remoteSearchPreferences(\n\t\tquery: string,\n\t\ttoken?: CancellationToken,\n\t): Promise<ISearchResult | null> {\n\t\tconst remoteSearchProvider =\n\t\t\tthis.preferencesSearchService.getRemoteSearchProvider(query);\n\t\treturn this.filterOrSearchPreferences(\n\t\t\tquery,\n\t\t\tSearchResultIdx.Remote,\n\t\t\tremoteSearchProvider,\n\t\t\ttoken,\n\t\t);\n\t}\n\n\tprivate async filterOrSearchPreferences(\n\t\tquery: string,\n\t\ttype: SearchResultIdx,\n\t\tsearchProvider?: ISearchProvider,\n\t\ttoken?: CancellationToken,\n\t): Promise<ISearchResult | null> {\n\t\tconst result = await this._filterOrSearchPreferencesModel(\n\t\t\tquery,\n\t\t\tthis.defaultSettingsEditorModel,\n\t\t\tsearchProvider,\n\t\t\ttoken,\n\t\t);\n\t\tif (token?.isCancellationRequested) {\n\t\t\t// Handle cancellation like this because cancellation is lost inside the search provider due to async/await\n\t\t\treturn null;\n\t\t}\n\t\tthis.searchResultModel ??= this.instantiationService.createInstance(\n\t\t\tSearchResultModel,\n\t\t\tthis.viewState,\n\t\t\tthis.settingsOrderByTocIndex,\n\t\t\tthis.workspaceTrustManagementService.isWorkspaceTrusted(),\n\t\t);\n\t\tthis.searchResultModel.setResult(type, result);\n\t\treturn result;\n\t}\n\n\tprivate renderResultCountMessages() {\n\t\tif (!this.currentSettingsModel) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearFilterLinkContainer.style.display =\n\t\t\tthis.viewState.tagFilters && this.viewState.tagFilters.size > 0\n\t\t\t\t? \"initial\"\n\t\t\t\t: \"none\";\n\n\t\tif (this.searchResultModel) {\n\t\t\tconst count = this.searchResultModel.getUniqueResultsCount();\n\t\t\tlet resultString: string;\n\t\t\tswitch (count) {\n\t\t\t\tcase 0:\n\t\t\t\t\tresultString = localize(\"noResults\", \"No Settings Found\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tresultString = localize(\"oneResult\", \"1 Setting Found\");\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tresultString = localize(\n\t\t\t\t\t\t\"moreThanOneResult\",\n\t\t\t\t\t\t\"{0} Settings Found\",\n\t\t\t\t\t\tcount,\n\t\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.searchResultLabel = resultString;\n\t\t\tthis.updateInputAriaLabel();\n\t\t\tthis.countElement.innerText = resultString;\n\t\t\taria.status(resultString);\n\n\t\t\tif (this.countElement.style.display !== \"block\") {\n\t\t\t\tthis.countElement.style.display = \"block\";\n\t\t\t\tthis.layout(this.dimension);\n\t\t\t}\n\t\t\tthis.rootElement.classList.toggle(\"no-results\", count === 0);\n\t\t\tthis.splitView.el.style.visibility =\n\t\t\t\tcount === 0 ? \"hidden\" : \"visible\";\n\t\t} else {\n\t\t\tif (this.countElement.style.display !== \"none\") {\n\t\t\t\tthis.searchResultLabel = null;\n\t\t\t\tthis.updateInputAriaLabel();\n\t\t\t\tthis.countElement.style.display = \"none\";\n\t\t\t\tthis.countElement.innerText = \"\";\n\t\t\t\tthis.layout(this.dimension);\n\t\t\t}\n\n\t\t\tthis.rootElement.classList.remove(\"no-results\");\n\t\t\tthis.splitView.el.style.visibility = \"visible\";\n\t\t\treturn;\n\t\t}\n\t}\n\n\tprivate _filterOrSearchPreferencesModel(\n\t\tfilter: string,\n\t\tmodel: ISettingsEditorModel,\n\t\tprovider?: ISearchProvider,\n\t\ttoken?: CancellationToken,\n\t): Promise<ISearchResult | null> {\n\t\tconst searchP = provider\n\t\t\t? provider.searchModel(model, token)\n\t\t\t: Promise.resolve(null);\n\t\treturn searchP.then<ISearchResult, ISearchResult | null>(\n\t\t\tundefined,\n\t\t\t(err) => {\n\t\t\t\tif (isCancellationError(err)) {\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t} else {\n\t\t\t\t\t// type SettingsSearchErrorEvent = {\n\t\t\t\t\t// \t'message': string;\n\t\t\t\t\t// };\n\t\t\t\t\t// type SettingsSearchErrorClassification = {\n\t\t\t\t\t// \towner: 'rzhao271';\n\t\t\t\t\t// \tcomment: 'Helps understand when settings search errors out';\n\t\t\t\t\t// \t'message': { 'classification': 'CallstackOrException'; 'purpose': 'FeatureInsight'; 'owner': 'rzhao271'; 'comment': 'The error message of the search error.' };\n\t\t\t\t\t// };\n\n\t\t\t\t\t// const message = getErrorMessage(err).trim();\n\t\t\t\t\t// if (message && message !== 'Error') {\n\t\t\t\t\t// \t// \"Error\" = any generic network error\n\t\t\t\t\t// \tthis.telemetryService.publicLogError2<SettingsSearchErrorEvent, SettingsSearchErrorClassification>('settingsEditor.searchError', { message });\n\t\t\t\t\t// \tthis.logService.info('Setting search error: ' + message);\n\t\t\t\t\t// }\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t}\n\n\tprivate layoutSplitView(dimension: DOM.Dimension): void {\n\t\tconst listHeight =\n\t\t\tdimension.height -\n\t\t\t(72 + 11 + 14) /* header height + editor padding */;\n\n\t\tthis.splitView.el.style.height = `${listHeight}px`;\n\n\t\t// We call layout first so the splitView has an idea of how much\n\t\t// space it has, otherwise setViewVisible results in the first panel\n\t\t// showing up at the minimum size whenever the Settings editor\n\t\t// opens for the first time.\n\t\tthis.splitView.layout(this.bodyContainer.clientWidth, listHeight);\n\n\t\tconst tocBehavior = this.configurationService.getValue<\n\t\t\t\"filter\" | \"hide\"\n\t\t>(SEARCH_TOC_BEHAVIOR_KEY);\n\t\tconst hideTocForSearch =\n\t\t\ttocBehavior === \"hide\" && this.searchResultModel;\n\t\tif (!hideTocForSearch) {\n\t\t\tconst firstViewWasVisible = this.splitView.isViewVisible(0);\n\t\t\tconst firstViewVisible =\n\t\t\t\tthis.bodyContainer.clientWidth >=\n\t\t\t\tSettingsEditor2.NARROW_TOTAL_WIDTH;\n\n\t\t\tthis.splitView.setViewVisible(0, firstViewVisible);\n\t\t\t// If the first view is again visible, and we have enough space, immediately set the\n\t\t\t// editor to use the reset width rather than the cached min width\n\t\t\tif (\n\t\t\t\t!firstViewWasVisible &&\n\t\t\t\tfirstViewVisible &&\n\t\t\t\tthis.bodyContainer.clientWidth >=\n\t\t\t\t\tSettingsEditor2.EDITOR_MIN_WIDTH +\n\t\t\t\t\t\tSettingsEditor2.TOC_RESET_WIDTH\n\t\t\t) {\n\t\t\t\tthis.splitView.resizeView(0, SettingsEditor2.TOC_RESET_WIDTH);\n\t\t\t}\n\t\t\tthis.splitView.style({\n\t\t\t\tseparatorBorder: firstViewVisible\n\t\t\t\t\t? this.theme.getColor(settingsSashBorder)!\n\t\t\t\t\t: Color.transparent,\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected override saveState(): void {\n\t\tif (this.isVisible()) {\n\t\t\tconst searchQuery = this.searchWidget.getValue().trim();\n\t\t\tconst target = this.settingsTargetsWidget\n\t\t\t\t.settingsTarget as SettingsTarget;\n\t\t\tif (this.input) {\n\t\t\t\tthis.editorMemento.saveEditorState(this.group, this.input, {\n\t\t\t\t\tsearchQuery,\n\t\t\t\t\ttarget,\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (this.input) {\n\t\t\tthis.editorMemento.clearEditorState(this.input, this.group);\n\t\t}\n\n\t\tsuper.saveState();\n\t}\n}\n\nclass SyncControls extends Disposable {\n\tprivate readonly lastSyncedLabel!: HTMLElement;\n\tprivate readonly turnOnSyncButton!: Button;\n\n\tprivate readonly _onDidChangeLastSyncedLabel = this._register(\n\t\tnew Emitter<string>(),\n\t);\n\tpublic readonly onDidChangeLastSyncedLabel =\n\t\tthis._onDidChangeLastSyncedLabel.event;\n\n\tconstructor(\n\t\twindow: CodeWindow,\n\t\tcontainer: HTMLElement,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IUserDataSyncService\n\t\tprivate readonly userDataSyncService: IUserDataSyncService,\n\t\t@IUserDataSyncEnablementService\n\t\tprivate readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t) {\n\t\tsuper();\n\n\t\tconst headerRightControlsContainer = DOM.append(\n\t\t\tcontainer,\n\t\t\t$(\".settings-right-controls\"),\n\t\t);\n\t\tconst turnOnSyncButtonContainer = DOM.append(\n\t\t\theaderRightControlsContainer,\n\t\t\t$(\".turn-on-sync\"),\n\t\t);\n\t\tthis.turnOnSyncButton = this._register(\n\t\t\tnew Button(turnOnSyncButtonContainer, {\n\t\t\t\ttitle: true,\n\t\t\t\t...defaultButtonStyles,\n\t\t\t}),\n\t\t);\n\t\tthis.lastSyncedLabel = DOM.append(\n\t\t\theaderRightControlsContainer,\n\t\t\t$(\".last-synced-label\"),\n\t\t);\n\t\tDOM.hide(this.lastSyncedLabel);\n\n\t\tthis.turnOnSyncButton.enabled = true;\n\t\tthis.turnOnSyncButton.label = localize(\n\t\t\t\"turnOnSyncButton\",\n\t\t\t\"Backup and Sync Settings\",\n\t\t);\n\t\tDOM.hide(this.turnOnSyncButton.element);\n\n\t\tthis._register(\n\t\t\tthis.turnOnSyncButton.onDidClick(async () => {\n\t\t\t\ttelemetryService.publicLog2<\n\t\t\t\t\t{},\n\t\t\t\t\t{\n\t\t\t\t\t\towner: \"sandy081\";\n\t\t\t\t\t\tcomment: \"This event tracks whenever settings sync is turned on from settings editor.\";\n\t\t\t\t\t}\n\t\t\t\t>(\"sync/turnOnSyncFromSettings\");\n\t\t\t\tawait this.commandService.executeCommand(\n\t\t\t\t\t\"workbench.userDataSync.actions.turnOn\",\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\tthis.updateLastSyncedTime();\n\t\tthis._register(\n\t\t\tthis.userDataSyncService.onDidChangeLastSyncTime(() => {\n\t\t\t\tthis.updateLastSyncedTime();\n\t\t\t}),\n\t\t);\n\n\t\tconst updateLastSyncedTimer = this._register(\n\t\t\tnew DOM.WindowIntervalTimer(),\n\t\t);\n\t\tupdateLastSyncedTimer.cancelAndSet(\n\t\t\t() => this.updateLastSyncedTime(),\n\t\t\t60 * 1000,\n\t\t\twindow,\n\t\t);\n\n\t\tthis.update();\n\t\tthis._register(\n\t\t\tthis.userDataSyncService.onDidChangeStatus(() => {\n\t\t\t\tthis.update();\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.userDataSyncEnablementService.onDidChangeEnablement(() => {\n\t\t\t\tthis.update();\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate updateLastSyncedTime(): void {\n\t\tconst last = this.userDataSyncService.lastSyncTime;\n\t\tlet label: string;\n\t\tif (typeof last === \"number\") {\n\t\t\tconst d = fromNow(last, true, undefined, true);\n\t\t\tlabel = localize(\"lastSyncedLabel\", \"Last synced: {0}\", d);\n\t\t} else {\n\t\t\tlabel = \"\";\n\t\t}\n\n\t\tthis.lastSyncedLabel.textContent = label;\n\t\tthis._onDidChangeLastSyncedLabel.fire(label);\n\t}\n\n\tprivate update(): void {\n\t\tif (this.userDataSyncService.status === SyncStatus.Uninitialized) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tthis.userDataSyncEnablementService.isEnabled() ||\n\t\t\tthis.userDataSyncService.status !== SyncStatus.Idle\n\t\t) {\n\t\t\tDOM.show(this.lastSyncedLabel);\n\t\t\tDOM.hide(this.turnOnSyncButton.element);\n\t\t} else {\n\t\t\tDOM.hide(this.lastSyncedLabel);\n\t\t\tDOM.show(this.turnOnSyncButton.element);\n\t\t}\n\t}\n}\n\ninterface ISettingsEditor2State {\n\tsearchQuery: string;\n\ttarget: SettingsTarget;\n}\n"],
  "mappings": "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",
  "names": ["SettingsFocusContext", "resolvedSettingsRoot"]
}
