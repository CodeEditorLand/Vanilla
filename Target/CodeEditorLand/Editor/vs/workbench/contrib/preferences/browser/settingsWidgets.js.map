{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/preferences/browser/settingsWidgets.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BrowserFeatures } from '../../../../base/browser/canIUse.js';\nimport * as DOM from '../../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../../base/browser/keyboardEvent.js';\nimport { ActionBar } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { Button } from '../../../../base/browser/ui/button/button.js';\nimport { Toggle, unthemedToggleStyles } from '../../../../base/browser/ui/toggle/toggle.js';\nimport { InputBox } from '../../../../base/browser/ui/inputbox/inputBox.js';\nimport { SelectBox } from '../../../../base/browser/ui/selectBox/selectBox.js';\nimport { IAction } from '../../../../base/common/actions.js';\nimport { disposableTimeout } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { KeyCode } from '../../../../base/common/keyCodes.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { isIOS } from '../../../../base/common/platform.js';\nimport { isDefined, isUndefinedOrNull } from '../../../../base/common/types.js';\nimport './media/settingsWidgets.css';\nimport { localize } from '../../../../nls.js';\nimport { IContextViewService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { settingsDiscardIcon, settingsEditIcon, settingsRemoveIcon } from './preferencesIcons.js';\nimport { settingsSelectBackground, settingsSelectBorder, settingsSelectForeground, settingsSelectListBorder, settingsTextInputBackground, settingsTextInputBorder, settingsTextInputForeground } from '../common/settingsEditorColorRegistry.js';\nimport { defaultButtonStyles, getInputBoxStyle, getSelectBoxStyles } from '../../../../platform/theme/browser/defaultStyles.js';\nimport { getDefaultHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegateFactory.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { IManagedHoverTooltipMarkdownString } from '../../../../base/browser/ui/hover/hover.js';\nimport { SettingValueType } from '../../../services/preferences/common/preferences.js';\n\nconst $ = DOM.$;\n\ntype EditKey = 'none' | 'create' | number;\n\ntype RowElementGroup = {\n\trowElement: HTMLElement;\n\tkeyElement: HTMLElement;\n\tvalueElement?: HTMLElement;\n};\n\ntype IListViewItem<TDataItem extends object> = TDataItem & {\n\tediting?: boolean;\n\tselected?: boolean;\n};\n\nexport class ListSettingListModel<TDataItem extends object> {\n\tprotected _dataItems: TDataItem[] = [];\n\tprivate _editKey: EditKey | null = null;\n\tprivate _selectedIdx: number | null = null;\n\tprivate _newDataItem: TDataItem;\n\n\tget items(): IListViewItem<TDataItem>[] {\n\t\tconst items = this._dataItems.map((item, i) => {\n\t\t\tconst editing = typeof this._editKey === 'number' && this._editKey === i;\n\t\t\treturn {\n\t\t\t\t...item,\n\t\t\t\tediting,\n\t\t\t\tselected: i === this._selectedIdx || editing\n\t\t\t};\n\t\t});\n\n\t\tif (this._editKey === 'create') {\n\t\t\titems.push({\n\t\t\t\tediting: true,\n\t\t\t\tselected: true,\n\t\t\t\t...this._newDataItem,\n\t\t\t});\n\t\t}\n\n\t\treturn items;\n\t}\n\n\tconstructor(newItem: TDataItem) {\n\t\tthis._newDataItem = newItem;\n\t}\n\n\tsetEditKey(key: EditKey): void {\n\t\tthis._editKey = key;\n\t}\n\n\tsetValue(listData: TDataItem[]): void {\n\t\tthis._dataItems = listData;\n\t}\n\n\tselect(idx: number | null): void {\n\t\tthis._selectedIdx = idx;\n\t}\n\n\tgetSelected(): number | null {\n\t\treturn this._selectedIdx;\n\t}\n\n\tselectNext(): void {\n\t\tif (typeof this._selectedIdx === 'number') {\n\t\t\tthis._selectedIdx = Math.min(this._selectedIdx + 1, this._dataItems.length - 1);\n\t\t} else {\n\t\t\tthis._selectedIdx = 0;\n\t\t}\n\t}\n\n\tselectPrevious(): void {\n\t\tif (typeof this._selectedIdx === 'number') {\n\t\t\tthis._selectedIdx = Math.max(this._selectedIdx - 1, 0);\n\t\t} else {\n\t\t\tthis._selectedIdx = 0;\n\t\t}\n\t}\n}\n\nexport interface ISettingListChangeEvent<TDataItem extends object> {\n\ttype: 'change';\n\toriginalItem: TDataItem;\n\tnewItem: TDataItem;\n\ttargetIndex: number;\n}\n\nexport interface ISettingListAddEvent<TDataItem extends object> {\n\ttype: 'add';\n\tnewItem: TDataItem;\n\ttargetIndex: number;\n}\n\nexport interface ISettingListMoveEvent<TDataItem extends object> {\n\ttype: 'move';\n\toriginalItem: TDataItem;\n\tnewItem: TDataItem;\n\ttargetIndex: number;\n\tsourceIndex: number;\n}\n\nexport interface ISettingListRemoveEvent<TDataItem extends object> {\n\ttype: 'remove';\n\toriginalItem: TDataItem;\n\ttargetIndex: number;\n}\n\nexport interface ISettingListResetEvent<TDataItem extends object> {\n\ttype: 'reset';\n\toriginalItem: TDataItem;\n\ttargetIndex: number;\n}\n\nexport type SettingListEvent<TDataItem extends object> = ISettingListChangeEvent<TDataItem> | ISettingListAddEvent<TDataItem> | ISettingListMoveEvent<TDataItem> | ISettingListRemoveEvent<TDataItem> | ISettingListResetEvent<TDataItem>;\n\nexport abstract class AbstractListSettingWidget<TDataItem extends object> extends Disposable {\n\tprivate listElement: HTMLElement;\n\tprivate rowElements: HTMLElement[] = [];\n\n\tprotected readonly _onDidChangeList = this._register(new Emitter<SettingListEvent<TDataItem>>());\n\tprotected readonly model = new ListSettingListModel<TDataItem>(this.getEmptyItem());\n\tprotected readonly listDisposables = this._register(new DisposableStore());\n\n\treadonly onDidChangeList: Event<SettingListEvent<TDataItem>> = this._onDidChangeList.event;\n\n\tget domNode(): HTMLElement {\n\t\treturn this.listElement;\n\t}\n\n\tget items(): TDataItem[] {\n\t\treturn this.model.items;\n\t}\n\n\tget inReadMode(): boolean {\n\t\treturn this.model.items.every(item => !item.editing);\n\t}\n\n\tconstructor(\n\t\tprivate container: HTMLElement,\n\t\t@IThemeService protected readonly themeService: IThemeService,\n\t\t@IContextViewService protected readonly contextViewService: IContextViewService\n\t) {\n\t\tsuper();\n\n\t\tthis.listElement = DOM.append(container, $('div'));\n\t\tthis.listElement.setAttribute('role', 'list');\n\t\tthis.getContainerClasses().forEach(c => this.listElement.classList.add(c));\n\t\tDOM.append(container, this.renderAddButton());\n\t\tthis.renderList();\n\n\t\tthis._register(DOM.addDisposableListener(this.listElement, DOM.EventType.POINTER_DOWN, e => this.onListClick(e)));\n\t\tthis._register(DOM.addDisposableListener(this.listElement, DOM.EventType.DBLCLICK, e => this.onListDoubleClick(e)));\n\n\t\tthis._register(DOM.addStandardDisposableListener(this.listElement, 'keydown', (e: StandardKeyboardEvent) => {\n\t\t\tif (e.equals(KeyCode.UpArrow)) {\n\t\t\t\tthis.selectPreviousRow();\n\t\t\t} else if (e.equals(KeyCode.DownArrow)) {\n\t\t\t\tthis.selectNextRow();\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t}));\n\t}\n\n\tsetValue(listData: TDataItem[]): void {\n\t\tthis.model.setValue(listData);\n\t\tthis.renderList();\n\t}\n\n\tabstract isItemNew(item: TDataItem): boolean;\n\tprotected abstract getEmptyItem(): TDataItem;\n\tprotected abstract getContainerClasses(): string[];\n\tprotected abstract getActionsForItem(item: TDataItem, idx: number): IAction[];\n\tprotected abstract renderItem(item: TDataItem, idx: number): RowElementGroup;\n\tprotected abstract renderEdit(item: TDataItem, idx: number): HTMLElement;\n\tprotected abstract addTooltipsToRow(rowElement: RowElementGroup, item: TDataItem): void;\n\tprotected abstract getLocalizedStrings(): {\n\t\tdeleteActionTooltip: string;\n\t\teditActionTooltip: string;\n\t\taddButtonLabel: string;\n\t};\n\n\tprotected renderHeader(): HTMLElement | undefined {\n\t\treturn;\n\t}\n\n\tprotected isAddButtonVisible(): boolean {\n\t\treturn true;\n\t}\n\n\tprotected renderList(): void {\n\t\tconst focused = DOM.isAncestorOfActiveElement(this.listElement);\n\n\t\tDOM.clearNode(this.listElement);\n\t\tthis.listDisposables.clear();\n\n\t\tconst newMode = this.model.items.some(item => !!(item.editing && this.isItemNew(item)));\n\t\tthis.container.classList.toggle('setting-list-hide-add-button', !this.isAddButtonVisible() || newMode);\n\n\t\tif (this.model.items.length) {\n\t\t\tthis.listElement.tabIndex = 0;\n\t\t} else {\n\t\t\tthis.listElement.removeAttribute('tabIndex');\n\t\t}\n\n\t\tconst header = this.renderHeader();\n\n\t\tif (header) {\n\t\t\tthis.listElement.appendChild(header);\n\t\t}\n\n\t\tthis.rowElements = this.model.items.map((item, i) => this.renderDataOrEditItem(item, i, focused));\n\t\tthis.rowElements.forEach(rowElement => this.listElement.appendChild(rowElement));\n\n\t}\n\n\tprotected createBasicSelectBox(value: IObjectEnumData): SelectBox {\n\t\tconst selectBoxOptions = value.options.map(({ value, description }) => ({ text: value, description }));\n\t\tconst selected = value.options.findIndex(option => value.data === option.value);\n\n\t\tconst styles = getSelectBoxStyles({\n\t\t\tselectBackground: settingsSelectBackground,\n\t\t\tselectForeground: settingsSelectForeground,\n\t\t\tselectBorder: settingsSelectBorder,\n\t\t\tselectListBorder: settingsSelectListBorder\n\t\t});\n\n\n\t\tconst selectBox = new SelectBox(selectBoxOptions, selected, this.contextViewService, styles, {\n\t\t\tuseCustomDrawn: !(isIOS && BrowserFeatures.pointerEvents)\n\t\t});\n\t\treturn selectBox;\n\t}\n\n\tprotected editSetting(idx: number): void {\n\t\tthis.model.setEditKey(idx);\n\t\tthis.renderList();\n\t}\n\n\tpublic cancelEdit(): void {\n\t\tthis.model.setEditKey('none');\n\t\tthis.renderList();\n\t}\n\n\tprotected handleItemChange(originalItem: TDataItem, changedItem: TDataItem, idx: number) {\n\t\tthis.model.setEditKey('none');\n\n\t\tif (this.isItemNew(originalItem)) {\n\t\t\tthis._onDidChangeList.fire({\n\t\t\t\ttype: 'add',\n\t\t\t\tnewItem: changedItem,\n\t\t\t\ttargetIndex: idx,\n\t\t\t});\n\t\t} else {\n\t\t\tthis._onDidChangeList.fire({\n\t\t\t\ttype: 'change',\n\t\t\t\toriginalItem,\n\t\t\t\tnewItem: changedItem,\n\t\t\t\ttargetIndex: idx,\n\t\t\t});\n\t\t}\n\n\t\tthis.renderList();\n\t}\n\n\tprotected renderDataOrEditItem(item: IListViewItem<TDataItem>, idx: number, listFocused: boolean): HTMLElement {\n\t\tconst rowElement = item.editing ?\n\t\t\tthis.renderEdit(item, idx) :\n\t\t\tthis.renderDataItem(item, idx, listFocused);\n\n\t\trowElement.setAttribute('role', 'listitem');\n\n\t\treturn rowElement;\n\t}\n\n\tprivate renderDataItem(item: IListViewItem<TDataItem>, idx: number, listFocused: boolean): HTMLElement {\n\t\tconst rowElementGroup = this.renderItem(item, idx);\n\t\tconst rowElement = rowElementGroup.rowElement;\n\n\t\trowElement.setAttribute('data-index', idx + '');\n\t\trowElement.setAttribute('tabindex', item.selected ? '0' : '-1');\n\t\trowElement.classList.toggle('selected', item.selected);\n\n\t\tconst actionBar = new ActionBar(rowElement);\n\t\tthis.listDisposables.add(actionBar);\n\n\t\tactionBar.push(this.getActionsForItem(item, idx), { icon: true, label: true });\n\t\tthis.addTooltipsToRow(rowElementGroup, item);\n\n\t\tif (item.selected && listFocused) {\n\t\t\tdisposableTimeout(() => rowElement.focus(), undefined, this.listDisposables);\n\t\t}\n\n\t\tthis.listDisposables.add(DOM.addDisposableListener(rowElement, 'click', (e) => {\n\t\t\t// There is a parent list widget, which is the one that holds the list of settings.\n\t\t\t// Prevent the parent widget from trying to interpret this click event.\n\t\t\te.stopPropagation();\n\t\t}));\n\n\t\treturn rowElement;\n\t}\n\n\tprivate renderAddButton(): HTMLElement {\n\t\tconst rowElement = $('.setting-list-new-row');\n\n\t\tconst startAddButton = this._register(new Button(rowElement, defaultButtonStyles));\n\t\tstartAddButton.label = this.getLocalizedStrings().addButtonLabel;\n\t\tstartAddButton.element.classList.add('setting-list-addButton');\n\n\t\tthis._register(startAddButton.onDidClick(() => {\n\t\t\tthis.model.setEditKey('create');\n\t\t\tthis.renderList();\n\t\t}));\n\n\t\treturn rowElement;\n\t}\n\n\tprivate onListClick(e: PointerEvent): void {\n\t\tconst targetIdx = this.getClickedItemIndex(e);\n\t\tif (targetIdx < 0) {\n\t\t\treturn;\n\t\t}\n\n\t\te.preventDefault();\n\t\te.stopImmediatePropagation();\n\t\tif (this.model.getSelected() === targetIdx) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.selectRow(targetIdx);\n\t}\n\n\tprivate onListDoubleClick(e: MouseEvent): void {\n\t\tconst targetIdx = this.getClickedItemIndex(e);\n\t\tif (targetIdx < 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst item = this.model.items[targetIdx];\n\t\tif (item) {\n\t\t\tthis.editSetting(targetIdx);\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t}\n\t}\n\n\tprivate getClickedItemIndex(e: MouseEvent): number {\n\t\tif (!e.target) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tconst actionbar = DOM.findParentWithClass(e.target as HTMLElement, 'monaco-action-bar');\n\t\tif (actionbar) {\n\t\t\t// Don't handle doubleclicks inside the action bar\n\t\t\treturn -1;\n\t\t}\n\n\t\tconst element = DOM.findParentWithClass(e.target as HTMLElement, 'setting-list-row');\n\t\tif (!element) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tconst targetIdxStr = element.getAttribute('data-index');\n\t\tif (!targetIdxStr) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tconst targetIdx = parseInt(targetIdxStr);\n\t\treturn targetIdx;\n\t}\n\n\tprivate selectRow(idx: number): void {\n\t\tthis.model.select(idx);\n\t\tthis.rowElements.forEach(row => row.classList.remove('selected'));\n\n\t\tconst selectedRow = this.rowElements[this.model.getSelected()!];\n\n\t\tselectedRow.classList.add('selected');\n\t\tselectedRow.focus();\n\t}\n\n\tprivate selectNextRow(): void {\n\t\tthis.model.selectNext();\n\t\tthis.selectRow(this.model.getSelected()!);\n\t}\n\n\tprivate selectPreviousRow(): void {\n\t\tthis.model.selectPrevious();\n\t\tthis.selectRow(this.model.getSelected()!);\n\t}\n}\n\ninterface IListSetValueOptions {\n\tshowAddButton: boolean;\n\tkeySuggester?: IObjectKeySuggester;\n}\n\nexport interface IListDataItem {\n\tvalue: ObjectKey;\n\tsibling?: string;\n}\n\ninterface ListSettingWidgetDragDetails<TListDataItem extends IListDataItem> {\n\telement: HTMLElement;\n\titem: TListDataItem;\n\titemIndex: number;\n}\n\nexport class ListSettingWidget<TListDataItem extends IListDataItem> extends AbstractListSettingWidget<TListDataItem> {\n\tprivate keyValueSuggester: IObjectKeySuggester | undefined;\n\tprivate showAddButton: boolean = true;\n\n\toverride setValue(listData: TListDataItem[], options?: IListSetValueOptions) {\n\t\tthis.keyValueSuggester = options?.keySuggester;\n\t\tthis.showAddButton = options?.showAddButton ?? true;\n\t\tsuper.setValue(listData);\n\t}\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IContextViewService contextViewService: IContextViewService,\n\t\t@IHoverService protected readonly hoverService: IHoverService\n\t) {\n\t\tsuper(container, themeService, contextViewService);\n\t}\n\n\tprotected getEmptyItem(): TListDataItem {\n\t\treturn {\n\t\t\tvalue: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdata: ''\n\t\t\t}\n\t\t} as TListDataItem;\n\t}\n\n\tprotected override isAddButtonVisible(): boolean {\n\t\treturn this.showAddButton;\n\t}\n\n\tprotected getContainerClasses(): string[] {\n\t\treturn ['setting-list-widget'];\n\t}\n\n\tprotected getActionsForItem(item: TListDataItem, idx: number): IAction[] {\n\t\treturn [\n\t\t\t{\n\t\t\t\tclass: ThemeIcon.asClassName(settingsEditIcon),\n\t\t\t\tenabled: true,\n\t\t\t\tid: 'workbench.action.editListItem',\n\t\t\t\ttooltip: this.getLocalizedStrings().editActionTooltip,\n\t\t\t\trun: () => this.editSetting(idx)\n\t\t\t},\n\t\t\t{\n\t\t\t\tclass: ThemeIcon.asClassName(settingsRemoveIcon),\n\t\t\t\tenabled: true,\n\t\t\t\tid: 'workbench.action.removeListItem',\n\t\t\t\ttooltip: this.getLocalizedStrings().deleteActionTooltip,\n\t\t\t\trun: () => this._onDidChangeList.fire({ type: 'remove', originalItem: item, targetIndex: idx })\n\t\t\t}\n\t\t] as IAction[];\n\t}\n\n\tprivate dragDetails: ListSettingWidgetDragDetails<TListDataItem> | undefined;\n\n\tprivate getDragImage(item: TListDataItem): HTMLElement {\n\t\tconst dragImage = $('.monaco-drag-image');\n\t\tdragImage.textContent = item.value.data;\n\t\treturn dragImage;\n\t}\n\n\tprotected renderItem(item: TListDataItem, idx: number): RowElementGroup {\n\t\tconst rowElement = $('.setting-list-row');\n\t\tconst valueElement = DOM.append(rowElement, $('.setting-list-value'));\n\t\tconst siblingElement = DOM.append(rowElement, $('.setting-list-sibling'));\n\n\t\tvalueElement.textContent = item.value.data.toString();\n\t\tsiblingElement.textContent = item.sibling ? `when: ${item.sibling}` : null;\n\n\t\tthis.addDragAndDrop(rowElement, item, idx);\n\t\treturn { rowElement, keyElement: valueElement, valueElement: siblingElement };\n\t}\n\n\tprotected addDragAndDrop(rowElement: HTMLElement, item: TListDataItem, idx: number) {\n\t\tif (this.inReadMode) {\n\t\t\trowElement.draggable = true;\n\t\t\trowElement.classList.add('draggable');\n\t\t} else {\n\t\t\trowElement.draggable = false;\n\t\t\trowElement.classList.remove('draggable');\n\t\t}\n\n\t\tthis.listDisposables.add(DOM.addDisposableListener(rowElement, DOM.EventType.DRAG_START, (ev) => {\n\t\t\tthis.dragDetails = {\n\t\t\t\telement: rowElement,\n\t\t\t\titem,\n\t\t\t\titemIndex: idx\n\t\t\t};\n\t\t\tif (ev.dataTransfer) {\n\t\t\t\tev.dataTransfer.dropEffect = 'move';\n\t\t\t\tconst dragImage = this.getDragImage(item);\n\t\t\t\trowElement.ownerDocument.body.appendChild(dragImage);\n\t\t\t\tev.dataTransfer.setDragImage(dragImage, -10, -10);\n\t\t\t\tsetTimeout(() => dragImage.remove(), 0);\n\t\t\t}\n\t\t}));\n\t\tthis.listDisposables.add(DOM.addDisposableListener(rowElement, DOM.EventType.DRAG_OVER, (ev) => {\n\t\t\tif (!this.dragDetails) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tev.preventDefault();\n\t\t\tif (ev.dataTransfer) {\n\t\t\t\tev.dataTransfer.dropEffect = 'move';\n\t\t\t}\n\t\t\treturn true;\n\t\t}));\n\t\tlet counter = 0;\n\t\tthis.listDisposables.add(DOM.addDisposableListener(rowElement, DOM.EventType.DRAG_ENTER, (ev) => {\n\t\t\tcounter++;\n\t\t\trowElement.classList.add('drag-hover');\n\t\t}));\n\t\tthis.listDisposables.add(DOM.addDisposableListener(rowElement, DOM.EventType.DRAG_LEAVE, (ev) => {\n\t\t\tcounter--;\n\t\t\tif (!counter) {\n\t\t\t\trowElement.classList.remove('drag-hover');\n\t\t\t}\n\t\t}));\n\t\tthis.listDisposables.add(DOM.addDisposableListener(rowElement, DOM.EventType.DROP, (ev) => {\n\t\t\t// cancel the op if we dragged to a completely different setting\n\t\t\tif (!this.dragDetails) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tev.preventDefault();\n\t\t\tcounter = 0;\n\t\t\tif (this.dragDetails.element !== rowElement) {\n\t\t\t\tthis._onDidChangeList.fire({\n\t\t\t\t\ttype: 'move',\n\t\t\t\t\toriginalItem: this.dragDetails.item,\n\t\t\t\t\tsourceIndex: this.dragDetails.itemIndex,\n\t\t\t\t\tnewItem: item,\n\t\t\t\t\ttargetIndex: idx\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn true;\n\t\t}));\n\t\tthis.listDisposables.add(DOM.addDisposableListener(rowElement, DOM.EventType.DRAG_END, (ev) => {\n\t\t\tcounter = 0;\n\t\t\trowElement.classList.remove('drag-hover');\n\t\t\tev.dataTransfer?.clearData();\n\t\t\tif (this.dragDetails) {\n\t\t\t\tthis.dragDetails = undefined;\n\t\t\t}\n\t\t}));\n\t}\n\n\tprotected renderEdit(item: TListDataItem, idx: number): HTMLElement {\n\t\tconst rowElement = $('.setting-list-edit-row');\n\t\tlet valueInput: InputBox | SelectBox;\n\t\tlet currentDisplayValue: string;\n\t\tlet currentEnumOptions: IObjectEnumOption[] | undefined;\n\n\t\tif (this.keyValueSuggester) {\n\t\t\tconst enumData = this.keyValueSuggester(this.model.items.map(({ value: { data } }) => data), idx);\n\t\t\titem = {\n\t\t\t\t...item,\n\t\t\t\tvalue: {\n\t\t\t\t\ttype: 'enum',\n\t\t\t\t\tdata: item.value.data,\n\t\t\t\t\toptions: enumData ? enumData.options : []\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tswitch (item.value.type) {\n\t\t\tcase 'string':\n\t\t\t\tvalueInput = this.renderInputBox(item.value, rowElement);\n\t\t\t\tbreak;\n\t\t\tcase 'enum':\n\t\t\t\tvalueInput = this.renderDropdown(item.value, rowElement);\n\t\t\t\tcurrentEnumOptions = item.value.options;\n\t\t\t\tif (item.value.options.length) {\n\t\t\t\t\tcurrentDisplayValue = this.isItemNew(item) ?\n\t\t\t\t\t\tcurrentEnumOptions[0].value : item.value.data;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst updatedInputBoxItem = (): TListDataItem => {\n\t\t\tconst inputBox = valueInput as InputBox;\n\t\t\treturn {\n\t\t\t\tvalue: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdata: inputBox.value\n\t\t\t\t},\n\t\t\t\tsibling: siblingInput?.value\n\t\t\t} as TListDataItem;\n\t\t};\n\t\tconst updatedSelectBoxItem = (selectedValue: string): TListDataItem => {\n\t\t\treturn {\n\t\t\t\tvalue: {\n\t\t\t\t\ttype: 'enum',\n\t\t\t\t\tdata: selectedValue,\n\t\t\t\t\toptions: currentEnumOptions ?? []\n\t\t\t\t}\n\t\t\t} as TListDataItem;\n\t\t};\n\t\tconst onKeyDown = (e: StandardKeyboardEvent) => {\n\t\t\tif (e.equals(KeyCode.Enter)) {\n\t\t\t\tthis.handleItemChange(item, updatedInputBoxItem(), idx);\n\t\t\t} else if (e.equals(KeyCode.Escape)) {\n\t\t\t\tthis.cancelEdit();\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t\trowElement?.focus();\n\t\t};\n\n\t\tif (item.value.type !== 'string') {\n\t\t\tconst selectBox = valueInput as SelectBox;\n\t\t\tthis.listDisposables.add(\n\t\t\t\tselectBox.onDidSelect(({ selected }) => {\n\t\t\t\t\tcurrentDisplayValue = selected;\n\t\t\t\t})\n\t\t\t);\n\t\t} else {\n\t\t\tconst inputBox = valueInput as InputBox;\n\t\t\tthis.listDisposables.add(\n\t\t\t\tDOM.addStandardDisposableListener(inputBox.inputElement, DOM.EventType.KEY_DOWN, onKeyDown)\n\t\t\t);\n\t\t}\n\n\t\tlet siblingInput: InputBox | undefined;\n\t\tif (!isUndefinedOrNull(item.sibling)) {\n\t\t\tsiblingInput = new InputBox(rowElement, this.contextViewService, {\n\t\t\t\tplaceholder: this.getLocalizedStrings().siblingInputPlaceholder,\n\t\t\t\tinputBoxStyles: getInputBoxStyle({\n\t\t\t\t\tinputBackground: settingsTextInputBackground,\n\t\t\t\t\tinputForeground: settingsTextInputForeground,\n\t\t\t\t\tinputBorder: settingsTextInputBorder\n\t\t\t\t})\n\t\t\t});\n\t\t\tsiblingInput.element.classList.add('setting-list-siblingInput');\n\t\t\tthis.listDisposables.add(siblingInput);\n\t\t\tsiblingInput.value = item.sibling;\n\n\t\t\tthis.listDisposables.add(\n\t\t\t\tDOM.addStandardDisposableListener(siblingInput.inputElement, DOM.EventType.KEY_DOWN, onKeyDown)\n\t\t\t);\n\t\t} else if (valueInput instanceof InputBox) {\n\t\t\tvalueInput.element.classList.add('no-sibling');\n\t\t}\n\n\t\tconst okButton = this.listDisposables.add(new Button(rowElement, defaultButtonStyles));\n\t\tokButton.label = localize('okButton', \"OK\");\n\t\tokButton.element.classList.add('setting-list-ok-button');\n\n\t\tthis.listDisposables.add(okButton.onDidClick(() => {\n\t\t\tif (item.value.type === 'string') {\n\t\t\t\tthis.handleItemChange(item, updatedInputBoxItem(), idx);\n\t\t\t} else {\n\t\t\t\tthis.handleItemChange(item, updatedSelectBoxItem(currentDisplayValue), idx);\n\t\t\t}\n\t\t}));\n\n\t\tconst cancelButton = this.listDisposables.add(new Button(rowElement, { secondary: true, ...defaultButtonStyles }));\n\t\tcancelButton.label = localize('cancelButton', \"Cancel\");\n\t\tcancelButton.element.classList.add('setting-list-cancel-button');\n\n\t\tthis.listDisposables.add(cancelButton.onDidClick(() => this.cancelEdit()));\n\n\t\tthis.listDisposables.add(\n\t\t\tdisposableTimeout(() => {\n\t\t\t\tvalueInput.focus();\n\t\t\t\tif (valueInput instanceof InputBox) {\n\t\t\t\t\tvalueInput.select();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\treturn rowElement;\n\t}\n\n\toverride isItemNew(item: TListDataItem): boolean {\n\t\treturn item.value.data === '';\n\t}\n\n\tprotected addTooltipsToRow(rowElementGroup: RowElementGroup, { value, sibling }: TListDataItem) {\n\t\tconst title = isUndefinedOrNull(sibling)\n\t\t\t? localize('listValueHintLabel', \"List item `{0}`\", value.data)\n\t\t\t: localize('listSiblingHintLabel', \"List item `{0}` with sibling `${1}`\", value.data, sibling);\n\n\t\tconst { rowElement } = rowElementGroup;\n\t\tthis.listDisposables.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), rowElement, title));\n\t\trowElement.setAttribute('aria-label', title);\n\t}\n\n\tprotected getLocalizedStrings() {\n\t\treturn {\n\t\t\tdeleteActionTooltip: localize('removeItem', \"Remove Item\"),\n\t\t\teditActionTooltip: localize('editItem', \"Edit Item\"),\n\t\t\taddButtonLabel: localize('addItem', \"Add Item\"),\n\t\t\tinputPlaceholder: localize('itemInputPlaceholder', \"Item...\"),\n\t\t\tsiblingInputPlaceholder: localize('listSiblingInputPlaceholder', \"Sibling...\"),\n\t\t};\n\t}\n\n\tprivate renderInputBox(value: ObjectValue, rowElement: HTMLElement): InputBox {\n\t\tconst valueInput = new InputBox(rowElement, this.contextViewService, {\n\t\t\tplaceholder: this.getLocalizedStrings().inputPlaceholder,\n\t\t\tinputBoxStyles: getInputBoxStyle({\n\t\t\t\tinputBackground: settingsTextInputBackground,\n\t\t\t\tinputForeground: settingsTextInputForeground,\n\t\t\t\tinputBorder: settingsTextInputBorder\n\t\t\t})\n\t\t});\n\n\t\tvalueInput.element.classList.add('setting-list-valueInput');\n\t\tthis.listDisposables.add(valueInput);\n\t\tvalueInput.value = value.data.toString();\n\n\t\treturn valueInput;\n\t}\n\n\tprivate renderDropdown(value: ObjectKey, rowElement: HTMLElement): SelectBox {\n\t\tif (value.type !== 'enum') {\n\t\t\tthrow new Error('Valuetype must be enum.');\n\t\t}\n\t\tconst selectBox = this.createBasicSelectBox(value);\n\n\t\tconst wrapper = $('.setting-list-object-list-row');\n\t\tselectBox.render(wrapper);\n\t\trowElement.appendChild(wrapper);\n\n\t\treturn selectBox;\n\t}\n}\n\nexport class ExcludeSettingWidget extends ListSettingWidget<IIncludeExcludeDataItem> {\n\tprotected override getContainerClasses() {\n\t\treturn ['setting-list-include-exclude-widget'];\n\t}\n\n\tprotected override addDragAndDrop(rowElement: HTMLElement, item: IIncludeExcludeDataItem, idx: number) {\n\t\treturn;\n\t}\n\n\tprotected override addTooltipsToRow(rowElementGroup: RowElementGroup, item: IIncludeExcludeDataItem): void {\n\t\tlet title = isUndefinedOrNull(item.sibling)\n\t\t\t? localize('excludePatternHintLabel', \"Exclude files matching `{0}`\", item.value.data)\n\t\t\t: localize('excludeSiblingHintLabel', \"Exclude files matching `{0}`, only when a file matching `{1}` is present\", item.value.data, item.sibling);\n\n\t\tif (item.source) {\n\t\t\ttitle += localize('excludeIncludeSource', \". Default value provided by `{0}`\", item.source);\n\t\t}\n\n\t\tconst markdownTitle = new MarkdownString().appendMarkdown(title);\n\n\t\tconst { rowElement } = rowElementGroup;\n\t\tthis.listDisposables.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), rowElement, { markdown: markdownTitle, markdownNotSupportedFallback: title }));\n\t\trowElement.setAttribute('aria-label', title);\n\t}\n\n\tprotected override getLocalizedStrings() {\n\t\treturn {\n\t\t\tdeleteActionTooltip: localize('removeExcludeItem', \"Remove Exclude Item\"),\n\t\t\teditActionTooltip: localize('editExcludeItem', \"Edit Exclude Item\"),\n\t\t\taddButtonLabel: localize('addPattern', \"Add Pattern\"),\n\t\t\tinputPlaceholder: localize('excludePatternInputPlaceholder', \"Exclude Pattern...\"),\n\t\t\tsiblingInputPlaceholder: localize('excludeSiblingInputPlaceholder', \"When Pattern Is Present...\"),\n\t\t};\n\t}\n}\n\nexport class IncludeSettingWidget extends ListSettingWidget<IIncludeExcludeDataItem> {\n\tprotected override getContainerClasses() {\n\t\treturn ['setting-list-include-exclude-widget'];\n\t}\n\n\tprotected override addDragAndDrop(rowElement: HTMLElement, item: IIncludeExcludeDataItem, idx: number) {\n\t\treturn;\n\t}\n\n\tprotected override addTooltipsToRow(rowElementGroup: RowElementGroup, item: IIncludeExcludeDataItem): void {\n\t\tlet title = isUndefinedOrNull(item.sibling)\n\t\t\t? localize('includePatternHintLabel', \"Include files matching `{0}`\", item.value.data)\n\t\t\t: localize('includeSiblingHintLabel', \"Include files matching `{0}`, only when a file matching `{1}` is present\", item.value.data, item.sibling);\n\n\t\tif (item.source) {\n\t\t\ttitle += localize('excludeIncludeSource', \". Default value provided by `{0}`\", item.source);\n\t\t}\n\n\t\tconst markdownTitle = new MarkdownString().appendMarkdown(title);\n\n\t\tconst { rowElement } = rowElementGroup;\n\t\tthis.listDisposables.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), rowElement, { markdown: markdownTitle, markdownNotSupportedFallback: title }));\n\t\trowElement.setAttribute('aria-label', title);\n\t}\n\n\tprotected override getLocalizedStrings() {\n\t\treturn {\n\t\t\tdeleteActionTooltip: localize('removeIncludeItem', \"Remove Include Item\"),\n\t\t\teditActionTooltip: localize('editIncludeItem', \"Edit Include Item\"),\n\t\t\taddButtonLabel: localize('addPattern', \"Add Pattern\"),\n\t\t\tinputPlaceholder: localize('includePatternInputPlaceholder', \"Include Pattern...\"),\n\t\t\tsiblingInputPlaceholder: localize('includeSiblingInputPlaceholder', \"When Pattern Is Present...\"),\n\t\t};\n\t}\n}\n\ninterface IObjectStringData {\n\ttype: 'string';\n\tdata: string;\n}\n\nexport interface IObjectEnumOption {\n\tvalue: string;\n\tdescription?: string;\n}\n\ninterface IObjectEnumData {\n\ttype: 'enum';\n\tdata: string;\n\toptions: IObjectEnumOption[];\n}\n\ninterface IObjectBoolData {\n\ttype: 'boolean';\n\tdata: boolean;\n}\n\ntype ObjectKey = IObjectStringData | IObjectEnumData;\nexport type ObjectValue = IObjectStringData | IObjectEnumData | IObjectBoolData;\ntype ObjectWidget = InputBox | SelectBox;\n\nexport interface IObjectDataItem {\n\tkey: ObjectKey;\n\tvalue: ObjectValue;\n\tkeyDescription?: string;\n\tsource?: string;\n\tremovable: boolean;\n\tresetable: boolean;\n}\n\nexport interface IIncludeExcludeDataItem {\n\tvalue: ObjectKey;\n\telementType: SettingValueType;\n\tsibling?: string;\n\tsource?: string;\n}\n\nexport interface IObjectValueSuggester {\n\t(key: string): ObjectValue | undefined;\n}\n\nexport interface IObjectKeySuggester {\n\t(existingKeys: string[], idx?: number): IObjectEnumData | undefined;\n}\n\ninterface IObjectSetValueOptions {\n\tsettingKey: string;\n\tshowAddButton: boolean;\n\tkeySuggester: IObjectKeySuggester;\n\tvalueSuggester: IObjectValueSuggester;\n}\n\ninterface IObjectRenderEditWidgetOptions {\n\tisKey: boolean;\n\tidx: number;\n\treadonly originalItem: IObjectDataItem;\n\treadonly changedItem: IObjectDataItem;\n\tupdate(keyOrValue: ObjectKey | ObjectValue): void;\n}\n\nexport class ObjectSettingDropdownWidget extends AbstractListSettingWidget<IObjectDataItem> {\n\tprivate currentSettingKey: string = '';\n\tprivate showAddButton: boolean = true;\n\tprivate keySuggester: IObjectKeySuggester = () => undefined;\n\tprivate valueSuggester: IObjectValueSuggester = () => undefined;\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IContextViewService contextViewService: IContextViewService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t) {\n\t\tsuper(container, themeService, contextViewService);\n\t}\n\n\toverride setValue(listData: IObjectDataItem[], options?: IObjectSetValueOptions): void {\n\t\tthis.showAddButton = options?.showAddButton ?? this.showAddButton;\n\t\tthis.keySuggester = options?.keySuggester ?? this.keySuggester;\n\t\tthis.valueSuggester = options?.valueSuggester ?? this.valueSuggester;\n\n\t\tif (isDefined(options) && options.settingKey !== this.currentSettingKey) {\n\t\t\tthis.model.setEditKey('none');\n\t\t\tthis.model.select(null);\n\t\t\tthis.currentSettingKey = options.settingKey;\n\t\t}\n\n\t\tsuper.setValue(listData);\n\t}\n\n\toverride isItemNew(item: IObjectDataItem): boolean {\n\t\treturn item.key.data === '' && item.value.data === '';\n\t}\n\n\tprotected override isAddButtonVisible(): boolean {\n\t\treturn this.showAddButton;\n\t}\n\n\tprotected getEmptyItem(): IObjectDataItem {\n\t\treturn {\n\t\t\tkey: { type: 'string', data: '' },\n\t\t\tvalue: { type: 'string', data: '' },\n\t\t\tremovable: true,\n\t\t\tresetable: false\n\t\t};\n\t}\n\n\tprotected getContainerClasses() {\n\t\treturn ['setting-list-object-widget'];\n\t}\n\n\tprotected getActionsForItem(item: IObjectDataItem, idx: number): IAction[] {\n\t\tconst actions: IAction[] = [\n\t\t\t{\n\t\t\t\tclass: ThemeIcon.asClassName(settingsEditIcon),\n\t\t\t\tenabled: true,\n\t\t\t\tid: 'workbench.action.editListItem',\n\t\t\t\tlabel: '',\n\t\t\t\ttooltip: this.getLocalizedStrings().editActionTooltip,\n\t\t\t\trun: () => this.editSetting(idx)\n\t\t\t},\n\t\t];\n\n\t\tif (item.resetable) {\n\t\t\tactions.push({\n\t\t\t\tclass: ThemeIcon.asClassName(settingsDiscardIcon),\n\t\t\t\tenabled: true,\n\t\t\t\tid: 'workbench.action.resetListItem',\n\t\t\t\tlabel: '',\n\t\t\t\ttooltip: this.getLocalizedStrings().resetActionTooltip,\n\t\t\t\trun: () => this._onDidChangeList.fire({ type: 'reset', originalItem: item, targetIndex: idx })\n\t\t\t});\n\t\t}\n\n\t\tif (item.removable) {\n\t\t\tactions.push({\n\t\t\t\tclass: ThemeIcon.asClassName(settingsRemoveIcon),\n\t\t\t\tenabled: true,\n\t\t\t\tid: 'workbench.action.removeListItem',\n\t\t\t\tlabel: '',\n\t\t\t\ttooltip: this.getLocalizedStrings().deleteActionTooltip,\n\t\t\t\trun: () => this._onDidChangeList.fire({ type: 'remove', originalItem: item, targetIndex: idx })\n\t\t\t});\n\t\t}\n\n\t\treturn actions;\n\t}\n\n\tprotected override renderHeader() {\n\t\tconst header = $('.setting-list-row-header');\n\t\tconst keyHeader = DOM.append(header, $('.setting-list-object-key'));\n\t\tconst valueHeader = DOM.append(header, $('.setting-list-object-value'));\n\t\tconst { keyHeaderText, valueHeaderText } = this.getLocalizedStrings();\n\n\t\tkeyHeader.textContent = keyHeaderText;\n\t\tvalueHeader.textContent = valueHeaderText;\n\n\t\treturn header;\n\t}\n\n\tprotected renderItem(item: IObjectDataItem, idx: number): RowElementGroup {\n\t\tconst rowElement = $('.setting-list-row');\n\t\trowElement.classList.add('setting-list-object-row');\n\n\t\tconst keyElement = DOM.append(rowElement, $('.setting-list-object-key'));\n\t\tconst valueElement = DOM.append(rowElement, $('.setting-list-object-value'));\n\n\t\tkeyElement.textContent = item.key.data;\n\t\tvalueElement.textContent = item.value.data.toString();\n\n\t\treturn { rowElement, keyElement, valueElement };\n\t}\n\n\tprotected renderEdit(item: IObjectDataItem, idx: number): HTMLElement {\n\t\tconst rowElement = $('.setting-list-edit-row.setting-list-object-row');\n\n\t\tconst changedItem = { ...item };\n\t\tconst onKeyChange = (key: ObjectKey) => {\n\t\t\tchangedItem.key = key;\n\t\t\tokButton.enabled = key.data !== '';\n\n\t\t\tconst suggestedValue = this.valueSuggester(key.data) ?? item.value;\n\n\t\t\tif (this.shouldUseSuggestion(item.value, changedItem.value, suggestedValue)) {\n\t\t\t\tonValueChange(suggestedValue);\n\t\t\t\trenderLatestValue();\n\t\t\t}\n\t\t};\n\t\tconst onValueChange = (value: ObjectValue) => {\n\t\t\tchangedItem.value = value;\n\t\t};\n\n\t\tlet keyWidget: ObjectWidget | undefined;\n\t\tlet keyElement: HTMLElement;\n\n\t\tif (this.showAddButton) {\n\t\t\tif (this.isItemNew(item)) {\n\t\t\t\tconst suggestedKey = this.keySuggester(this.model.items.map(({ key: { data } }) => data));\n\n\t\t\t\tif (isDefined(suggestedKey)) {\n\t\t\t\t\tchangedItem.key = suggestedKey;\n\t\t\t\t\tconst suggestedValue = this.valueSuggester(changedItem.key.data);\n\t\t\t\t\tonValueChange(suggestedValue ?? changedItem.value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst { widget, element } = this.renderEditWidget(changedItem.key, {\n\t\t\t\tidx,\n\t\t\t\tisKey: true,\n\t\t\t\toriginalItem: item,\n\t\t\t\tchangedItem,\n\t\t\t\tupdate: onKeyChange,\n\t\t\t});\n\t\t\tkeyWidget = widget;\n\t\t\tkeyElement = element;\n\t\t} else {\n\t\t\tkeyElement = $('.setting-list-object-key');\n\t\t\tkeyElement.textContent = item.key.data;\n\t\t}\n\n\t\tlet valueWidget: ObjectWidget;\n\t\tconst valueContainer = $('.setting-list-object-value-container');\n\n\t\tconst renderLatestValue = () => {\n\t\t\tconst { widget, element } = this.renderEditWidget(changedItem.value, {\n\t\t\t\tidx,\n\t\t\t\tisKey: false,\n\t\t\t\toriginalItem: item,\n\t\t\t\tchangedItem,\n\t\t\t\tupdate: onValueChange,\n\t\t\t});\n\n\t\t\tvalueWidget = widget;\n\n\t\t\tDOM.clearNode(valueContainer);\n\t\t\tvalueContainer.append(element);\n\t\t};\n\n\t\trenderLatestValue();\n\n\t\trowElement.append(keyElement, valueContainer);\n\n\t\tconst okButton = this.listDisposables.add(new Button(rowElement, defaultButtonStyles));\n\t\tokButton.enabled = changedItem.key.data !== '';\n\t\tokButton.label = localize('okButton', \"OK\");\n\t\tokButton.element.classList.add('setting-list-ok-button');\n\n\t\tthis.listDisposables.add(okButton.onDidClick(() => this.handleItemChange(item, changedItem, idx)));\n\n\t\tconst cancelButton = this.listDisposables.add(new Button(rowElement, { secondary: true, ...defaultButtonStyles }));\n\t\tcancelButton.label = localize('cancelButton', \"Cancel\");\n\t\tcancelButton.element.classList.add('setting-list-cancel-button');\n\n\t\tthis.listDisposables.add(cancelButton.onDidClick(() => this.cancelEdit()));\n\n\t\tthis.listDisposables.add(\n\t\t\tdisposableTimeout(() => {\n\t\t\t\tconst widget = keyWidget ?? valueWidget;\n\n\t\t\t\twidget.focus();\n\n\t\t\t\tif (widget instanceof InputBox) {\n\t\t\t\t\twidget.select();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\treturn rowElement;\n\t}\n\n\tprivate renderEditWidget(\n\t\tkeyOrValue: ObjectKey | ObjectValue,\n\t\toptions: IObjectRenderEditWidgetOptions,\n\t) {\n\t\tswitch (keyOrValue.type) {\n\t\t\tcase 'string':\n\t\t\t\treturn this.renderStringEditWidget(keyOrValue, options);\n\t\t\tcase 'enum':\n\t\t\t\treturn this.renderEnumEditWidget(keyOrValue, options);\n\t\t\tcase 'boolean':\n\t\t\t\treturn this.renderEnumEditWidget(\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'enum',\n\t\t\t\t\t\tdata: keyOrValue.data.toString(),\n\t\t\t\t\t\toptions: [{ value: 'true' }, { value: 'false' }],\n\t\t\t\t\t},\n\t\t\t\t\toptions,\n\t\t\t\t);\n\t\t}\n\t}\n\n\tprivate renderStringEditWidget(\n\t\tkeyOrValue: IObjectStringData,\n\t\t{ idx, isKey, originalItem, changedItem, update }: IObjectRenderEditWidgetOptions,\n\t) {\n\t\tconst wrapper = $(isKey ? '.setting-list-object-input-key' : '.setting-list-object-input-value');\n\t\tconst inputBox = new InputBox(wrapper, this.contextViewService, {\n\t\t\tplaceholder: isKey\n\t\t\t\t? localize('objectKeyInputPlaceholder', \"Key\")\n\t\t\t\t: localize('objectValueInputPlaceholder', \"Value\"),\n\t\t\tinputBoxStyles: getInputBoxStyle({\n\t\t\t\tinputBackground: settingsTextInputBackground,\n\t\t\t\tinputForeground: settingsTextInputForeground,\n\t\t\t\tinputBorder: settingsTextInputBorder\n\t\t\t})\n\t\t});\n\n\t\tinputBox.element.classList.add('setting-list-object-input');\n\n\t\tthis.listDisposables.add(inputBox);\n\t\tinputBox.value = keyOrValue.data;\n\n\t\tthis.listDisposables.add(inputBox.onDidChange(value => update({ ...keyOrValue, data: value })));\n\n\t\tconst onKeyDown = (e: StandardKeyboardEvent) => {\n\t\t\tif (e.equals(KeyCode.Enter)) {\n\t\t\t\tthis.handleItemChange(originalItem, changedItem, idx);\n\t\t\t} else if (e.equals(KeyCode.Escape)) {\n\t\t\t\tthis.cancelEdit();\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t};\n\n\t\tthis.listDisposables.add(\n\t\t\tDOM.addStandardDisposableListener(inputBox.inputElement, DOM.EventType.KEY_DOWN, onKeyDown)\n\t\t);\n\n\t\treturn { widget: inputBox, element: wrapper };\n\t}\n\n\tprivate renderEnumEditWidget(\n\t\tkeyOrValue: IObjectEnumData,\n\t\t{ isKey, changedItem, update }: IObjectRenderEditWidgetOptions,\n\t) {\n\t\tconst selectBox = this.createBasicSelectBox(keyOrValue);\n\n\t\tconst changedKeyOrValue = isKey ? changedItem.key : changedItem.value;\n\t\tthis.listDisposables.add(\n\t\t\tselectBox.onDidSelect(({ selected }) =>\n\t\t\t\tupdate(\n\t\t\t\t\tchangedKeyOrValue.type === 'boolean'\n\t\t\t\t\t\t? { ...changedKeyOrValue, data: selected === 'true' ? true : false }\n\t\t\t\t\t\t: { ...changedKeyOrValue, data: selected },\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\tconst wrapper = $('.setting-list-object-input');\n\t\twrapper.classList.add(\n\t\t\tisKey ? 'setting-list-object-input-key' : 'setting-list-object-input-value',\n\t\t);\n\n\t\tselectBox.render(wrapper);\n\n\t\t// Switch to the first item if the user set something invalid in the json\n\t\tconst selected = keyOrValue.options.findIndex(option => keyOrValue.data === option.value);\n\t\tif (selected === -1 && keyOrValue.options.length) {\n\t\t\tupdate(\n\t\t\t\tchangedKeyOrValue.type === 'boolean'\n\t\t\t\t\t? { ...changedKeyOrValue, data: true }\n\t\t\t\t\t: { ...changedKeyOrValue, data: keyOrValue.options[0].value }\n\t\t\t);\n\t\t} else if (changedKeyOrValue.type === 'boolean') {\n\t\t\t// https://github.com/microsoft/vscode/issues/129581\n\t\t\tupdate({ ...changedKeyOrValue, data: keyOrValue.data === 'true' });\n\t\t}\n\n\t\treturn { widget: selectBox, element: wrapper };\n\t}\n\n\tprivate shouldUseSuggestion(originalValue: ObjectValue, previousValue: ObjectValue, newValue: ObjectValue): boolean {\n\t\t// suggestion is exactly the same\n\t\tif (newValue.type !== 'enum' && newValue.type === previousValue.type && newValue.data === previousValue.data) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// item is new, use suggestion\n\t\tif (originalValue.data === '') {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (previousValue.type === newValue.type && newValue.type !== 'enum') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// check if all enum options are the same\n\t\tif (previousValue.type === 'enum' && newValue.type === 'enum') {\n\t\t\tconst previousEnums = new Set(previousValue.options.map(({ value }) => value));\n\t\t\tnewValue.options.forEach(({ value }) => previousEnums.delete(value));\n\n\t\t\t// all options are the same\n\t\t\tif (previousEnums.size === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprotected addTooltipsToRow(rowElementGroup: RowElementGroup, item: IObjectDataItem): void {\n\t\tconst { keyElement, valueElement, rowElement } = rowElementGroup;\n\n\t\tlet accessibleDescription;\n\t\tif (item.source) {\n\t\t\taccessibleDescription = localize('objectPairHintLabelWithSource', \"The property `{0}` is set to `{1}` by `{2}`.\", item.key.data, item.value.data, item.source);\n\t\t} else {\n\t\t\taccessibleDescription = localize('objectPairHintLabel', \"The property `{0}` is set to `{1}`.\", item.key.data, item.value.data);\n\t\t}\n\n\t\tconst markdownString = { markdown: new MarkdownString().appendMarkdown(accessibleDescription), markdownNotSupportedFallback: accessibleDescription };\n\n\t\tconst keyDescription: string | IManagedHoverTooltipMarkdownString = this.getEnumDescription(item.key) ?? item.keyDescription ?? markdownString;\n\t\tthis.listDisposables.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), keyElement, keyDescription));\n\n\t\tconst valueDescription: string | IManagedHoverTooltipMarkdownString = this.getEnumDescription(item.value) ?? markdownString;\n\t\tthis.listDisposables.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), valueElement!, valueDescription));\n\n\t\trowElement.setAttribute('aria-label', accessibleDescription);\n\t}\n\n\tprivate getEnumDescription(keyOrValue: ObjectKey | ObjectValue): string | undefined {\n\t\tconst enumDescription = keyOrValue.type === 'enum'\n\t\t\t? keyOrValue.options.find(({ value }) => keyOrValue.data === value)?.description\n\t\t\t: undefined;\n\t\treturn enumDescription;\n\t}\n\n\tprotected getLocalizedStrings() {\n\t\treturn {\n\t\t\tdeleteActionTooltip: localize('removeItem', \"Remove Item\"),\n\t\t\tresetActionTooltip: localize('resetItem', \"Reset Item\"),\n\t\t\teditActionTooltip: localize('editItem', \"Edit Item\"),\n\t\t\taddButtonLabel: localize('addItem', \"Add Item\"),\n\t\t\tkeyHeaderText: localize('objectKeyHeader', \"Item\"),\n\t\t\tvalueHeaderText: localize('objectValueHeader', \"Value\"),\n\t\t};\n\t}\n}\n\ninterface IBoolObjectSetValueOptions {\n\tsettingKey: string;\n}\n\nexport interface IBoolObjectDataItem {\n\tkey: IObjectStringData;\n\tvalue: IObjectBoolData;\n\tkeyDescription?: string;\n\tsource?: string;\n\tremovable: false;\n\tresetable: boolean;\n}\n\nexport class ObjectSettingCheckboxWidget extends AbstractListSettingWidget<IBoolObjectDataItem> {\n\tprivate currentSettingKey: string = '';\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IContextViewService contextViewService: IContextViewService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t) {\n\t\tsuper(container, themeService, contextViewService);\n\t}\n\n\toverride setValue(listData: IBoolObjectDataItem[], options?: IBoolObjectSetValueOptions): void {\n\t\tif (isDefined(options) && options.settingKey !== this.currentSettingKey) {\n\t\t\tthis.model.setEditKey('none');\n\t\t\tthis.model.select(null);\n\t\t\tthis.currentSettingKey = options.settingKey;\n\t\t}\n\n\t\tsuper.setValue(listData);\n\t}\n\n\toverride isItemNew(item: IBoolObjectDataItem): boolean {\n\t\treturn !item.key.data && !item.value.data;\n\t}\n\n\tprotected getEmptyItem(): IBoolObjectDataItem {\n\t\treturn {\n\t\t\tkey: { type: 'string', data: '' },\n\t\t\tvalue: { type: 'boolean', data: false },\n\t\t\tremovable: false,\n\t\t\tresetable: true\n\t\t};\n\t}\n\n\tprotected getContainerClasses() {\n\t\treturn ['setting-list-object-widget'];\n\t}\n\n\tprotected getActionsForItem(item: IBoolObjectDataItem, idx: number): IAction[] {\n\t\treturn [];\n\t}\n\n\tprotected override isAddButtonVisible(): boolean {\n\t\treturn false;\n\t}\n\n\tprotected override renderHeader() {\n\t\treturn undefined;\n\t}\n\n\tprotected override renderDataOrEditItem(item: IListViewItem<IBoolObjectDataItem>, idx: number, listFocused: boolean): HTMLElement {\n\t\tconst rowElement = this.renderEdit(item, idx);\n\t\trowElement.setAttribute('role', 'listitem');\n\t\treturn rowElement;\n\t}\n\n\tprotected renderItem(item: IBoolObjectDataItem, idx: number): RowElementGroup {\n\t\t// Return just the containers, since we always render in edit mode anyway\n\t\tconst rowElement = $('.blank-row');\n\t\tconst keyElement = $('.blank-row-key');\n\t\treturn { rowElement, keyElement };\n\t}\n\n\tprotected renderEdit(item: IBoolObjectDataItem, idx: number): HTMLElement {\n\t\tconst rowElement = $('.setting-list-edit-row.setting-list-object-row.setting-item-bool');\n\n\t\tconst changedItem = { ...item };\n\t\tconst onValueChange = (newValue: boolean) => {\n\t\t\tchangedItem.value.data = newValue;\n\t\t\tthis.handleItemChange(item, changedItem, idx);\n\t\t};\n\t\tconst checkboxDescription = item.keyDescription ? `${item.keyDescription} (${item.key.data})` : item.key.data;\n\t\tconst { element, widget: checkbox } = this.renderEditWidget((changedItem.value as IObjectBoolData).data, checkboxDescription, onValueChange);\n\t\trowElement.appendChild(element);\n\n\t\tconst valueElement = DOM.append(rowElement, $('.setting-list-object-value'));\n\t\tvalueElement.textContent = checkboxDescription;\n\n\t\t// We add the tooltips here, because the method is not called by default\n\t\t// for widgets in edit mode\n\t\tconst rowElementGroup = { rowElement, keyElement: valueElement, valueElement: checkbox.domNode };\n\t\tthis.addTooltipsToRow(rowElementGroup, item);\n\n\t\tthis._register(DOM.addDisposableListener(valueElement, DOM.EventType.MOUSE_DOWN, e => {\n\t\t\tconst targetElement = <HTMLElement>e.target;\n\t\t\tif (targetElement.tagName.toLowerCase() !== 'a') {\n\t\t\t\tcheckbox.checked = !checkbox.checked;\n\t\t\t\tonValueChange(checkbox.checked);\n\t\t\t}\n\t\t\tDOM.EventHelper.stop(e);\n\t\t}));\n\n\t\treturn rowElement;\n\t}\n\n\tprivate renderEditWidget(\n\t\tvalue: boolean,\n\t\tcheckboxDescription: string,\n\t\tonValueChange: (newValue: boolean) => void\n\t) {\n\t\tconst checkbox = new Toggle({\n\t\t\ticon: Codicon.check,\n\t\t\tactionClassName: 'setting-value-checkbox',\n\t\t\tisChecked: value,\n\t\t\ttitle: checkboxDescription,\n\t\t\t...unthemedToggleStyles\n\t\t});\n\n\t\tthis.listDisposables.add(checkbox);\n\n\t\tconst wrapper = $('.setting-list-object-input');\n\t\twrapper.classList.add('setting-list-object-input-key-checkbox');\n\t\tcheckbox.domNode.classList.add('setting-value-checkbox');\n\t\twrapper.appendChild(checkbox.domNode);\n\n\t\tthis._register(DOM.addDisposableListener(wrapper, DOM.EventType.MOUSE_DOWN, e => {\n\t\t\tcheckbox.checked = !checkbox.checked;\n\t\t\tonValueChange(checkbox.checked);\n\n\t\t\t// Without this line, the settings editor assumes\n\t\t\t// we lost focus on this setting completely.\n\t\t\te.stopImmediatePropagation();\n\t\t}));\n\n\t\treturn { widget: checkbox, element: wrapper };\n\t}\n\n\tprotected addTooltipsToRow(rowElementGroup: RowElementGroup, item: IBoolObjectDataItem): void {\n\t\tconst accessibleDescription = localize('objectPairHintLabel', \"The property `{0}` is set to `{1}`.\", item.key.data, item.value.data);\n\t\tconst title = item.keyDescription ?? accessibleDescription;\n\t\tconst { rowElement, keyElement, valueElement } = rowElementGroup;\n\n\t\tthis.listDisposables.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), keyElement, title));\n\t\tvalueElement!.setAttribute('aria-label', accessibleDescription);\n\t\trowElement.setAttribute('aria-label', accessibleDescription);\n\t}\n\n\tprotected getLocalizedStrings() {\n\t\treturn {\n\t\t\tdeleteActionTooltip: localize('removeItem', \"Remove Item\"),\n\t\t\tresetActionTooltip: localize('resetItem', \"Reset Item\"),\n\t\t\teditActionTooltip: localize('editItem', \"Edit Item\"),\n\t\t\taddButtonLabel: localize('addItem', \"Add Item\"),\n\t\t\tkeyHeaderText: localize('objectKeyHeader', \"Item\"),\n\t\t\tvalueHeaderText: localize('objectValueHeader', \"Value\"),\n\t\t};\n\t}\n}\n"],
  "mappings": "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",
  "names": ["value", "selected"]
}
