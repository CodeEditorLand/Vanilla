{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/preferences/browser/keybindingWidgets.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/keybindings.css\";\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport {\n\ttype FastDomNode,\n\tcreateFastDomNode,\n} from \"../../../../base/browser/fastDomNode.js\";\nimport {\n\ttype IKeyboardEvent,\n\tStandardKeyboardEvent,\n} from \"../../../../base/browser/keyboardEvent.js\";\nimport * as aria from \"../../../../base/browser/ui/aria/aria.js\";\nimport { KeybindingLabel } from \"../../../../base/browser/ui/keybindingLabel/keybindingLabel.js\";\nimport { Widget } from \"../../../../base/browser/ui/widget.js\";\nimport { Promises, timeout } from \"../../../../base/common/async.js\";\nimport { Emitter, type Event } from \"../../../../base/common/event.js\";\nimport { KeyCode } from \"../../../../base/common/keyCodes.js\";\nimport type { ResolvedKeybinding } from \"../../../../base/common/keybindings.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { OS } from \"../../../../base/common/platform.js\";\nimport type {\n\tICodeEditor,\n\tIOverlayWidget,\n\tIOverlayWidgetPosition,\n} from \"../../../../editor/browser/editorBrowser.js\";\nimport { ScrollType } from \"../../../../editor/common/editorCommon.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextViewService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport {\n\tdefaultInputBoxStyles,\n\tdefaultKeybindingLabelStyles,\n} from \"../../../../platform/theme/browser/defaultStyles.js\";\nimport {\n\tasCssVariable,\n\teditorWidgetBackground,\n\teditorWidgetForeground,\n\twidgetShadow,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport { type SearchOptions, SearchWidget } from \"./preferencesWidgets.js\";\n\nexport interface KeybindingsSearchOptions extends SearchOptions {\n\trecordEnter?: boolean;\n\tquoteRecordedKeys?: boolean;\n}\n\nexport class KeybindingsSearchWidget extends SearchWidget {\n\tprivate _chords: ResolvedKeybinding[] | null;\n\tprivate _inputValue: string;\n\n\tprivate readonly recordDisposables = this._register(new DisposableStore());\n\n\tprivate _onKeybinding = this._register(\n\t\tnew Emitter<ResolvedKeybinding[] | null>(),\n\t);\n\treadonly onKeybinding: Event<ResolvedKeybinding[] | null> =\n\t\tthis._onKeybinding.event;\n\n\tprivate _onEnter = this._register(new Emitter<void>());\n\treadonly onEnter: Event<void> = this._onEnter.event;\n\n\tprivate _onEscape = this._register(new Emitter<void>());\n\treadonly onEscape: Event<void> = this._onEscape.event;\n\n\tprivate _onBlur = this._register(new Emitter<void>());\n\treadonly onBlur: Event<void> = this._onBlur.event;\n\n\tconstructor(\n\t\tparent: HTMLElement,\n\t\toptions: KeybindingsSearchOptions,\n\t\t@IContextViewService contextViewService: IContextViewService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t) {\n\t\tsuper(\n\t\t\tparent,\n\t\t\toptions,\n\t\t\tcontextViewService,\n\t\t\tinstantiationService,\n\t\t\tcontextKeyService,\n\t\t\tkeybindingService,\n\t\t);\n\n\t\tthis._register(toDisposable(() => this.stopRecordingKeys()));\n\n\t\tthis._chords = null;\n\t\tthis._inputValue = \"\";\n\t}\n\n\toverride clear(): void {\n\t\tthis._chords = null;\n\t\tsuper.clear();\n\t}\n\n\tstartRecordingKeys(): void {\n\t\tthis.recordDisposables.add(\n\t\t\tdom.addDisposableListener(\n\t\t\t\tthis.inputBox.inputElement,\n\t\t\t\tdom.EventType.KEY_DOWN,\n\t\t\t\t(e: KeyboardEvent) =>\n\t\t\t\t\tthis._onKeyDown(new StandardKeyboardEvent(e)),\n\t\t\t),\n\t\t);\n\t\tthis.recordDisposables.add(\n\t\t\tdom.addDisposableListener(\n\t\t\t\tthis.inputBox.inputElement,\n\t\t\t\tdom.EventType.BLUR,\n\t\t\t\t() => this._onBlur.fire(),\n\t\t\t),\n\t\t);\n\t\tthis.recordDisposables.add(\n\t\t\tdom.addDisposableListener(\n\t\t\t\tthis.inputBox.inputElement,\n\t\t\t\tdom.EventType.INPUT,\n\t\t\t\t() => {\n\t\t\t\t\t// Prevent other characters from showing up\n\t\t\t\t\tthis.setInputValue(this._inputValue);\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tstopRecordingKeys(): void {\n\t\tthis._chords = null;\n\t\tthis.recordDisposables.clear();\n\t}\n\n\tsetInputValue(value: string): void {\n\t\tthis._inputValue = value;\n\t\tthis.inputBox.value = this._inputValue;\n\t}\n\n\tprivate _onKeyDown(keyboardEvent: IKeyboardEvent): void {\n\t\tkeyboardEvent.preventDefault();\n\t\tkeyboardEvent.stopPropagation();\n\t\tconst options = this.options as KeybindingsSearchOptions;\n\t\tif (!options.recordEnter && keyboardEvent.equals(KeyCode.Enter)) {\n\t\t\tthis._onEnter.fire();\n\t\t\treturn;\n\t\t}\n\t\tif (keyboardEvent.equals(KeyCode.Escape)) {\n\t\t\tthis._onEscape.fire();\n\t\t\treturn;\n\t\t}\n\t\tthis.printKeybinding(keyboardEvent);\n\t}\n\n\tprivate printKeybinding(keyboardEvent: IKeyboardEvent): void {\n\t\tconst keybinding =\n\t\t\tthis.keybindingService.resolveKeyboardEvent(keyboardEvent);\n\t\tconst info = `code: ${keyboardEvent.browserEvent.code}, keyCode: ${keyboardEvent.browserEvent.keyCode}, key: ${keyboardEvent.browserEvent.key} => UI: ${keybinding.getAriaLabel()}, user settings: ${keybinding.getUserSettingsLabel()}, dispatch: ${keybinding.getDispatchChords()[0]}`;\n\t\tconst options = this.options as KeybindingsSearchOptions;\n\n\t\tif (!this._chords) {\n\t\t\tthis._chords = [];\n\t\t}\n\n\t\t// TODO: note that we allow a keybinding \"shift shift\", but this widget doesn't allow input \"shift shift\" because the first \"shift\" will be incomplete - this is _not_ a regression\n\t\tconst hasIncompleteChord =\n\t\t\tthis._chords.length > 0 &&\n\t\t\tthis._chords[this._chords.length - 1].getDispatchChords()[0] ===\n\t\t\t\tnull;\n\t\tif (hasIncompleteChord) {\n\t\t\tthis._chords[this._chords.length - 1] = keybinding;\n\t\t} else {\n\t\t\tif (this._chords.length === 2) {\n\t\t\t\t// TODO: limit chords # to 2 for now\n\t\t\t\tthis._chords = [];\n\t\t\t}\n\t\t\tthis._chords.push(keybinding);\n\t\t}\n\n\t\tconst value = this._chords\n\t\t\t.map((keybinding) => keybinding.getUserSettingsLabel() || \"\")\n\t\t\t.join(\" \");\n\t\tthis.setInputValue(options.quoteRecordedKeys ? `\"${value}\"` : value);\n\n\t\tthis.inputBox.inputElement.title = info;\n\t\tthis._onKeybinding.fire(this._chords);\n\t}\n}\n\nexport class DefineKeybindingWidget extends Widget {\n\tprivate static readonly WIDTH = 400;\n\tprivate static readonly HEIGHT = 110;\n\n\tprivate _domNode: FastDomNode<HTMLElement>;\n\tprivate _keybindingInputWidget: KeybindingsSearchWidget;\n\tprivate _outputNode: HTMLElement;\n\tprivate _showExistingKeybindingsNode: HTMLElement;\n\tprivate readonly _keybindingDisposables = this._register(\n\t\tnew DisposableStore(),\n\t);\n\n\tprivate _chords: ResolvedKeybinding[] | null = null;\n\tprivate _isVisible = false;\n\n\tprivate _onHide = this._register(new Emitter<void>());\n\n\tprivate _onDidChange = this._register(new Emitter<string>());\n\tonDidChange: Event<string> = this._onDidChange.event;\n\n\tprivate _onShowExistingKeybindings = this._register(\n\t\tnew Emitter<string | null>(),\n\t);\n\treadonly onShowExistingKeybidings: Event<string | null> =\n\t\tthis._onShowExistingKeybindings.event;\n\n\tconstructor(\n\t\tparent: HTMLElement | null,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._domNode = createFastDomNode(document.createElement('div'));\n\t\tthis._domNode.setDisplay('none');\n\t\tthis._domNode.setClassName('defineKeybindingWidget');\n\t\tthis._domNode.setWidth(DefineKeybindingWidget.WIDTH);\n\t\tthis._domNode.setHeight(DefineKeybindingWidget.HEIGHT);\n\n\t\tconst message = nls.localize('defineKeybinding.initial', \"Press desired key combination and then press ENTER.\");\n\t\tdom.append(this._domNode.domNode, dom.$('.message', undefined, message));\n\n\t\tthis._domNode.domNode.style.backgroundColor = asCssVariable(editorWidgetBackground);\n\t\tthis._domNode.domNode.style.color = asCssVariable(editorWidgetForeground);\n\t\tthis._domNode.domNode.style.boxShadow = `0 2px 8px ${asCssVariable(widgetShadow)}`;\n\n\t\tthis._keybindingInputWidget = this._register(this.instantiationService.createInstance(KeybindingsSearchWidget, this._domNode.domNode, { ariaLabel: message, history: [], inputBoxStyles: defaultInputBoxStyles }));\n\t\tthis._keybindingInputWidget.startRecordingKeys();\n\t\tthis._register(this._keybindingInputWidget.onKeybinding(keybinding => this.onKeybinding(keybinding)));\n\t\tthis._register(this._keybindingInputWidget.onEnter(() => this.hide()));\n\t\tthis._register(this._keybindingInputWidget.onEscape(() => this.clearOrHide()));\n\t\tthis._register(this._keybindingInputWidget.onBlur(() => this.onCancel()));\n\n\t\tthis._outputNode = dom.append(this._domNode.domNode, dom.$('.output'));\n\t\tthis._showExistingKeybindingsNode = dom.append(this._domNode.domNode, dom.$('.existing'));\n\n\t\tif (parent) {\n\t\t\tdom.append(parent, this._domNode.domNode);\n\t\t}\n\t}\n\n\tget domNode(): HTMLElement {\n\t\treturn this._domNode.domNode;\n\t}\n\n\tdefine(): Promise<string | null> {\n\t\tthis._keybindingInputWidget.clear();\n\t\treturn Promises.withAsyncBody<string | null>(async (c) => {\n\t\t\tif (!this._isVisible) {\n\t\t\t\tthis._isVisible = true;\n\t\t\t\tthis._domNode.setDisplay(\"block\");\n\n\t\t\t\tthis._chords = null;\n\t\t\t\tthis._keybindingInputWidget.setInputValue(\"\");\n\t\t\t\tdom.clearNode(this._outputNode);\n\t\t\t\tdom.clearNode(this._showExistingKeybindingsNode);\n\n\t\t\t\t// Input is not getting focus without timeout in safari\n\t\t\t\t// https://github.com/microsoft/vscode/issues/108817\n\t\t\t\tawait timeout(0);\n\n\t\t\t\tthis._keybindingInputWidget.focus();\n\t\t\t}\n\t\t\tconst disposable = this._onHide.event(() => {\n\t\t\t\tc(this.getUserSettingsLabel());\n\t\t\t\tdisposable.dispose();\n\t\t\t});\n\t\t});\n\t}\n\n\tlayout(layout: dom.Dimension): void {\n\t\tconst top = Math.round(\n\t\t\t(layout.height - DefineKeybindingWidget.HEIGHT) / 2,\n\t\t);\n\t\tthis._domNode.setTop(top);\n\n\t\tconst left = Math.round(\n\t\t\t(layout.width - DefineKeybindingWidget.WIDTH) / 2,\n\t\t);\n\t\tthis._domNode.setLeft(left);\n\t}\n\n\tprintExisting(numberOfExisting: number): void {\n\t\tif (numberOfExisting > 0) {\n\t\t\tconst existingElement = dom.$(\"span.existingText\");\n\t\t\tconst text =\n\t\t\t\tnumberOfExisting === 1\n\t\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\t\"defineKeybinding.oneExists\",\n\t\t\t\t\t\t\t\"1 existing command has this keybinding\",\n\t\t\t\t\t\t\tnumberOfExisting,\n\t\t\t\t\t\t)\n\t\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\t\"defineKeybinding.existing\",\n\t\t\t\t\t\t\t\"{0} existing commands have this keybinding\",\n\t\t\t\t\t\t\tnumberOfExisting,\n\t\t\t\t\t\t);\n\t\t\tdom.append(existingElement, document.createTextNode(text));\n\t\t\taria.alert(text);\n\t\t\tthis._showExistingKeybindingsNode.appendChild(existingElement);\n\t\t\texistingElement.onmousedown = (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t};\n\t\t\texistingElement.onmouseup = (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t};\n\t\t\texistingElement.onclick = () => {\n\t\t\t\tthis._onShowExistingKeybindings.fire(\n\t\t\t\t\tthis.getUserSettingsLabel(),\n\t\t\t\t);\n\t\t\t};\n\t\t}\n\t}\n\n\tprivate onKeybinding(keybinding: ResolvedKeybinding[] | null): void {\n\t\tthis._keybindingDisposables.clear();\n\t\tthis._chords = keybinding;\n\t\tdom.clearNode(this._outputNode);\n\t\tdom.clearNode(this._showExistingKeybindingsNode);\n\n\t\tconst firstLabel = this._keybindingDisposables.add(\n\t\t\tnew KeybindingLabel(\n\t\t\t\tthis._outputNode,\n\t\t\t\tOS,\n\t\t\t\tdefaultKeybindingLabelStyles,\n\t\t\t),\n\t\t);\n\t\tfirstLabel.set(this._chords?.[0] ?? undefined);\n\n\t\tif (this._chords) {\n\t\t\tfor (let i = 1; i < this._chords.length; i++) {\n\t\t\t\tthis._outputNode.appendChild(\n\t\t\t\t\tdocument.createTextNode(\n\t\t\t\t\t\tnls.localize(\"defineKeybinding.chordsTo\", \"chord to\"),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tconst chordLabel = this._keybindingDisposables.add(\n\t\t\t\t\tnew KeybindingLabel(\n\t\t\t\t\t\tthis._outputNode,\n\t\t\t\t\t\tOS,\n\t\t\t\t\t\tdefaultKeybindingLabelStyles,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tchordLabel.set(this._chords[i]);\n\t\t\t}\n\t\t}\n\n\t\tconst label = this.getUserSettingsLabel();\n\t\tif (label) {\n\t\t\tthis._onDidChange.fire(label);\n\t\t}\n\t}\n\n\tprivate getUserSettingsLabel(): string | null {\n\t\tlet label: string | null = null;\n\t\tif (this._chords) {\n\t\t\tlabel = this._chords\n\t\t\t\t.map((keybinding) => keybinding.getUserSettingsLabel())\n\t\t\t\t.join(\" \");\n\t\t}\n\t\treturn label;\n\t}\n\n\tprivate onCancel(): void {\n\t\tthis._chords = null;\n\t\tthis.hide();\n\t}\n\n\tprivate clearOrHide(): void {\n\t\tif (this._chords === null) {\n\t\t\tthis.hide();\n\t\t} else {\n\t\t\tthis._chords = null;\n\t\t\tthis._keybindingInputWidget.clear();\n\t\t\tdom.clearNode(this._outputNode);\n\t\t\tdom.clearNode(this._showExistingKeybindingsNode);\n\t\t}\n\t}\n\n\tprivate hide(): void {\n\t\tthis._domNode.setDisplay(\"none\");\n\t\tthis._isVisible = false;\n\t\tthis._onHide.fire();\n\t}\n}\n\nexport class DefineKeybindingOverlayWidget\n\textends Disposable\n\timplements IOverlayWidget\n{\n\tprivate static readonly ID = \"editor.contrib.defineKeybindingWidget\";\n\n\tprivate readonly _widget: DefineKeybindingWidget;\n\n\tconstructor(\n\t\tprivate _editor: ICodeEditor,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._widget = this._register(\n\t\t\tinstantiationService.createInstance(DefineKeybindingWidget, null),\n\t\t);\n\t\tthis._editor.addOverlayWidget(this);\n\t}\n\n\tgetId(): string {\n\t\treturn DefineKeybindingOverlayWidget.ID;\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this._widget.domNode;\n\t}\n\n\tgetPosition(): IOverlayWidgetPosition {\n\t\treturn {\n\t\t\tpreference: null,\n\t\t};\n\t}\n\n\toverride dispose(): void {\n\t\tthis._editor.removeOverlayWidget(this);\n\t\tsuper.dispose();\n\t}\n\n\tstart(): Promise<string | null> {\n\t\tif (this._editor.hasModel()) {\n\t\t\tthis._editor.revealPositionInCenterIfOutsideViewport(\n\t\t\t\tthis._editor.getPosition(),\n\t\t\t\tScrollType.Smooth,\n\t\t\t);\n\t\t}\n\t\tconst layoutInfo = this._editor.getLayoutInfo();\n\t\tthis._widget.layout(\n\t\t\tnew dom.Dimension(layoutInfo.width, layoutInfo.height),\n\t\t);\n\t\treturn this._widget.define();\n\t}\n}\n"],
  "mappings": "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",
  "names": ["keybinding"]
}
