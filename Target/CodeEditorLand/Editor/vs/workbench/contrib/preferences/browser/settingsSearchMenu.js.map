{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/preferences/browser/settingsSearchMenu.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IActionViewItemOptions } from '../../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { AnchorAlignment } from '../../../../base/browser/ui/contextview/contextview.js';\nimport { DropdownMenuActionViewItem } from '../../../../base/browser/ui/dropdown/dropdownActionViewItem.js';\nimport { IAction, IActionRunner } from '../../../../base/common/actions.js';\nimport { SuggestController } from '../../../../editor/contrib/suggest/browser/suggestController.js';\nimport { localize } from '../../../../nls.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { SuggestEnabledInput } from '../../codeEditor/browser/suggestEnabledInput/suggestEnabledInput.js';\nimport { EXTENSION_SETTING_TAG, FEATURE_SETTING_TAG, GENERAL_TAG_SETTING_TAG, LANGUAGE_SETTING_TAG, MODIFIED_SETTING_TAG, POLICY_SETTING_TAG } from '../common/preferences.js';\n\nexport class SettingsSearchFilterDropdownMenuActionViewItem extends DropdownMenuActionViewItem {\n\tprivate readonly suggestController: SuggestController | null;\n\n\tconstructor(\n\t\taction: IAction,\n\t\toptions: IActionViewItemOptions,\n\t\tactionRunner: IActionRunner | undefined,\n\t\tprivate readonly searchWidget: SuggestEnabledInput,\n\t\t@IContextMenuService contextMenuService: IContextMenuService\n\t) {\n\t\tsuper(action,\n\t\t\t{ getActions: () => this.getActions() },\n\t\t\tcontextMenuService,\n\t\t\t{\n\t\t\t\t...options,\n\t\t\t\tactionRunner,\n\t\t\t\tclassNames: action.class,\n\t\t\t\tanchorAlignmentProvider: () => AnchorAlignment.RIGHT,\n\t\t\t\tmenuAsChild: true\n\t\t\t}\n\t\t);\n\n\t\tthis.suggestController = SuggestController.get(this.searchWidget.inputWidget);\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\t}\n\n\tprivate doSearchWidgetAction(queryToAppend: string, triggerSuggest: boolean) {\n\t\tthis.searchWidget.setValue(this.searchWidget.getValue().trimEnd() + ' ' + queryToAppend);\n\t\tthis.searchWidget.focus();\n\t\tif (triggerSuggest && this.suggestController) {\n\t\t\tthis.suggestController.triggerSuggest();\n\t\t}\n\t}\n\n\t/**\n\t * The created action appends a query to the search widget search string. It optionally triggers suggestions.\n\t */\n\tprivate createAction(id: string, label: string, tooltip: string, queryToAppend: string, triggerSuggest: boolean): IAction {\n\t\treturn {\n\t\t\tid,\n\t\t\tlabel,\n\t\t\ttooltip,\n\t\t\tclass: undefined,\n\t\t\tenabled: true,\n\t\t\trun: () => { this.doSearchWidgetAction(queryToAppend, triggerSuggest); }\n\t\t};\n\t}\n\n\t/**\n\t * The created action appends a query to the search widget search string, if the query does not exist.\n\t * Otherwise, it removes the query from the search widget search string.\n\t * The action does not trigger suggestions after adding or removing the query.\n\t */\n\tprivate createToggleAction(id: string, label: string, tooltip: string, queryToAppend: string): IAction {\n\t\tconst splitCurrentQuery = this.searchWidget.getValue().split(' ');\n\t\tconst queryContainsQueryToAppend = splitCurrentQuery.includes(queryToAppend);\n\t\treturn {\n\t\t\tid,\n\t\t\tlabel,\n\t\t\ttooltip,\n\t\t\tclass: undefined,\n\t\t\tenabled: true,\n\t\t\tchecked: queryContainsQueryToAppend,\n\t\t\trun: () => {\n\t\t\t\tif (!queryContainsQueryToAppend) {\n\t\t\t\t\tconst trimmedCurrentQuery = this.searchWidget.getValue().trimEnd();\n\t\t\t\t\tconst newQuery = trimmedCurrentQuery ? trimmedCurrentQuery + ' ' + queryToAppend : queryToAppend;\n\t\t\t\t\tthis.searchWidget.setValue(newQuery);\n\t\t\t\t} else {\n\t\t\t\t\tconst queryWithRemovedTags = this.searchWidget.getValue().split(' ')\n\t\t\t\t\t\t.filter(word => word !== queryToAppend).join(' ');\n\t\t\t\t\tthis.searchWidget.setValue(queryWithRemovedTags);\n\t\t\t\t}\n\t\t\t\tthis.searchWidget.focus();\n\t\t\t}\n\t\t};\n\t}\n\n\tgetActions(): IAction[] {\n\t\treturn [\n\t\t\tthis.createToggleAction(\n\t\t\t\t'modifiedSettingsSearch',\n\t\t\t\tlocalize('modifiedSettingsSearch', \"Modified\"),\n\t\t\t\tlocalize('modifiedSettingsSearchTooltip', \"Add or remove modified settings filter\"),\n\t\t\t\t`@${MODIFIED_SETTING_TAG}`\n\t\t\t),\n\t\t\tthis.createAction(\n\t\t\t\t'extSettingsSearch',\n\t\t\t\tlocalize('extSettingsSearch', \"Extension ID...\"),\n\t\t\t\tlocalize('extSettingsSearchTooltip', \"Add extension ID filter\"),\n\t\t\t\t`@${EXTENSION_SETTING_TAG}`,\n\t\t\t\ttrue\n\t\t\t),\n\t\t\tthis.createAction(\n\t\t\t\t'featuresSettingsSearch',\n\t\t\t\tlocalize('featureSettingsSearch', \"Feature...\"),\n\t\t\t\tlocalize('featureSettingsSearchTooltip', \"Add feature filter\"),\n\t\t\t\t`@${FEATURE_SETTING_TAG}`,\n\t\t\t\ttrue\n\t\t\t),\n\t\t\tthis.createAction(\n\t\t\t\t'tagSettingsSearch',\n\t\t\t\tlocalize('tagSettingsSearch', \"Tag...\"),\n\t\t\t\tlocalize('tagSettingsSearchTooltip', \"Add tag filter\"),\n\t\t\t\t`@${GENERAL_TAG_SETTING_TAG}`,\n\t\t\t\ttrue\n\t\t\t),\n\t\t\tthis.createAction(\n\t\t\t\t'langSettingsSearch',\n\t\t\t\tlocalize('langSettingsSearch', \"Language...\"),\n\t\t\t\tlocalize('langSettingsSearchTooltip', \"Add language ID filter\"),\n\t\t\t\t`@${LANGUAGE_SETTING_TAG}`,\n\t\t\t\ttrue\n\t\t\t),\n\t\t\tthis.createToggleAction(\n\t\t\t\t'onlineSettingsSearch',\n\t\t\t\tlocalize('onlineSettingsSearch', \"Online services\"),\n\t\t\t\tlocalize('onlineSettingsSearchTooltip', \"Show settings for online services\"),\n\t\t\t\t'@tag:usesOnlineServices'\n\t\t\t),\n\t\t\tthis.createToggleAction(\n\t\t\t\t'policySettingsSearch',\n\t\t\t\tlocalize('policySettingsSearch', \"Policy services\"),\n\t\t\t\tlocalize('policySettingsSearchTooltip', \"Show settings for policy services\"),\n\t\t\t\t`@${POLICY_SETTING_TAG}`\n\t\t\t)\n\t\t];\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
