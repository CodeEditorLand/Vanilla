{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/preferences/browser/settingsSearchMenu.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IActionViewItemOptions } from \"../../../../base/browser/ui/actionbar/actionViewItems.js\";\nimport { AnchorAlignment } from \"../../../../base/browser/ui/contextview/contextview.js\";\nimport { DropdownMenuActionViewItem } from \"../../../../base/browser/ui/dropdown/dropdownActionViewItem.js\";\nimport type {\n\tIAction,\n\tIActionRunner,\n} from \"../../../../base/common/actions.js\";\nimport { SuggestController } from \"../../../../editor/contrib/suggest/browser/suggestController.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IContextMenuService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport type { SuggestEnabledInput } from \"../../codeEditor/browser/suggestEnabledInput/suggestEnabledInput.js\";\nimport {\n\tEXTENSION_SETTING_TAG,\n\tFEATURE_SETTING_TAG,\n\tGENERAL_TAG_SETTING_TAG,\n\tLANGUAGE_SETTING_TAG,\n\tMODIFIED_SETTING_TAG,\n\tPOLICY_SETTING_TAG,\n} from \"../common/preferences.js\";\n\nexport class SettingsSearchFilterDropdownMenuActionViewItem extends DropdownMenuActionViewItem {\n\tprivate readonly suggestController: SuggestController | null;\n\n\tconstructor(\n\t\taction: IAction,\n\t\toptions: IActionViewItemOptions,\n\t\tactionRunner: IActionRunner | undefined,\n\t\tprivate readonly searchWidget: SuggestEnabledInput,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t) {\n\t\tsuper(\n\t\t\taction,\n\t\t\t{ getActions: () => this.getActions() },\n\t\t\tcontextMenuService,\n\t\t\t{\n\t\t\t\t...options,\n\t\t\t\tactionRunner,\n\t\t\t\tclassNames: action.class,\n\t\t\t\tanchorAlignmentProvider: () => AnchorAlignment.RIGHT,\n\t\t\t\tmenuAsChild: true,\n\t\t\t},\n\t\t);\n\n\t\tthis.suggestController = SuggestController.get(\n\t\t\tthis.searchWidget.inputWidget,\n\t\t);\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\t}\n\n\tprivate doSearchWidgetAction(\n\t\tqueryToAppend: string,\n\t\ttriggerSuggest: boolean,\n\t) {\n\t\tthis.searchWidget.setValue(\n\t\t\tthis.searchWidget.getValue().trimEnd() + \" \" + queryToAppend,\n\t\t);\n\t\tthis.searchWidget.focus();\n\t\tif (triggerSuggest && this.suggestController) {\n\t\t\tthis.suggestController.triggerSuggest();\n\t\t}\n\t}\n\n\t/**\n\t * The created action appends a query to the search widget search string. It optionally triggers suggestions.\n\t */\n\tprivate createAction(\n\t\tid: string,\n\t\tlabel: string,\n\t\ttooltip: string,\n\t\tqueryToAppend: string,\n\t\ttriggerSuggest: boolean,\n\t): IAction {\n\t\treturn {\n\t\t\tid,\n\t\t\tlabel,\n\t\t\ttooltip,\n\t\t\tclass: undefined,\n\t\t\tenabled: true,\n\t\t\trun: () => {\n\t\t\t\tthis.doSearchWidgetAction(queryToAppend, triggerSuggest);\n\t\t\t},\n\t\t};\n\t}\n\n\t/**\n\t * The created action appends a query to the search widget search string, if the query does not exist.\n\t * Otherwise, it removes the query from the search widget search string.\n\t * The action does not trigger suggestions after adding or removing the query.\n\t */\n\tprivate createToggleAction(\n\t\tid: string,\n\t\tlabel: string,\n\t\ttooltip: string,\n\t\tqueryToAppend: string,\n\t): IAction {\n\t\tconst splitCurrentQuery = this.searchWidget.getValue().split(\" \");\n\t\tconst queryContainsQueryToAppend =\n\t\t\tsplitCurrentQuery.includes(queryToAppend);\n\t\treturn {\n\t\t\tid,\n\t\t\tlabel,\n\t\t\ttooltip,\n\t\t\tclass: undefined,\n\t\t\tenabled: true,\n\t\t\tchecked: queryContainsQueryToAppend,\n\t\t\trun: () => {\n\t\t\t\tif (queryContainsQueryToAppend) {\n\t\t\t\t\tconst queryWithRemovedTags = this.searchWidget\n\t\t\t\t\t\t.getValue()\n\t\t\t\t\t\t.split(\" \")\n\t\t\t\t\t\t.filter((word) => word !== queryToAppend)\n\t\t\t\t\t\t.join(\" \");\n\t\t\t\t\tthis.searchWidget.setValue(queryWithRemovedTags);\n\t\t\t\t} else {\n\t\t\t\t\tconst trimmedCurrentQuery = this.searchWidget\n\t\t\t\t\t\t.getValue()\n\t\t\t\t\t\t.trimEnd();\n\t\t\t\t\tconst newQuery = trimmedCurrentQuery\n\t\t\t\t\t\t? trimmedCurrentQuery + \" \" + queryToAppend\n\t\t\t\t\t\t: queryToAppend;\n\t\t\t\t\tthis.searchWidget.setValue(newQuery);\n\t\t\t\t}\n\t\t\t\tthis.searchWidget.focus();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetActions(): IAction[] {\n\t\treturn [\n\t\t\tthis.createToggleAction(\n\t\t\t\t\"modifiedSettingsSearch\",\n\t\t\t\tlocalize(\"modifiedSettingsSearch\", \"Modified\"),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"modifiedSettingsSearchTooltip\",\n\t\t\t\t\t\"Add or remove modified settings filter\",\n\t\t\t\t),\n\t\t\t\t`@${MODIFIED_SETTING_TAG}`,\n\t\t\t),\n\t\t\tthis.createAction(\n\t\t\t\t\"extSettingsSearch\",\n\t\t\t\tlocalize(\"extSettingsSearch\", \"Extension ID...\"),\n\t\t\t\tlocalize(\"extSettingsSearchTooltip\", \"Add extension ID filter\"),\n\t\t\t\t`@${EXTENSION_SETTING_TAG}`,\n\t\t\t\ttrue,\n\t\t\t),\n\t\t\tthis.createAction(\n\t\t\t\t\"featuresSettingsSearch\",\n\t\t\t\tlocalize(\"featureSettingsSearch\", \"Feature...\"),\n\t\t\t\tlocalize(\"featureSettingsSearchTooltip\", \"Add feature filter\"),\n\t\t\t\t`@${FEATURE_SETTING_TAG}`,\n\t\t\t\ttrue,\n\t\t\t),\n\t\t\tthis.createAction(\n\t\t\t\t\"tagSettingsSearch\",\n\t\t\t\tlocalize(\"tagSettingsSearch\", \"Tag...\"),\n\t\t\t\tlocalize(\"tagSettingsSearchTooltip\", \"Add tag filter\"),\n\t\t\t\t`@${GENERAL_TAG_SETTING_TAG}`,\n\t\t\t\ttrue,\n\t\t\t),\n\t\t\tthis.createAction(\n\t\t\t\t\"langSettingsSearch\",\n\t\t\t\tlocalize(\"langSettingsSearch\", \"Language...\"),\n\t\t\t\tlocalize(\"langSettingsSearchTooltip\", \"Add language ID filter\"),\n\t\t\t\t`@${LANGUAGE_SETTING_TAG}`,\n\t\t\t\ttrue,\n\t\t\t),\n\t\t\tthis.createToggleAction(\n\t\t\t\t\"onlineSettingsSearch\",\n\t\t\t\tlocalize(\"onlineSettingsSearch\", \"Online services\"),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"onlineSettingsSearchTooltip\",\n\t\t\t\t\t\"Show settings for online services\",\n\t\t\t\t),\n\t\t\t\t\"@tag:usesOnlineServices\",\n\t\t\t),\n\t\t\tthis.createToggleAction(\n\t\t\t\t\"policySettingsSearch\",\n\t\t\t\tlocalize(\"policySettingsSearch\", \"Policy services\"),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"policySettingsSearchTooltip\",\n\t\t\t\t\t\"Show settings for policy services\",\n\t\t\t\t),\n\t\t\t\t`@${POLICY_SETTING_TAG}`,\n\t\t\t),\n\t\t];\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
