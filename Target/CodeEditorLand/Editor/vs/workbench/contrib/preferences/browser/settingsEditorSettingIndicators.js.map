{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/preferences/browser/settingsEditorSettingIndicators.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from \"../../../../base/browser/dom.js\";\nimport { StandardKeyboardEvent } from \"../../../../base/browser/keyboardEvent.js\";\nimport type {\n\tIHoverOptions,\n\tIHoverWidget,\n} from \"../../../../base/browser/ui/hover/hover.js\";\nimport { HoverPosition } from \"../../../../base/browser/ui/hover/hoverWidget.js\";\nimport { SimpleIconLabel } from \"../../../../base/browser/ui/iconLabel/simpleIconLabel.js\";\nimport { RunOnceScheduler } from \"../../../../base/common/async.js\";\nimport type { Emitter } from \"../../../../base/common/event.js\";\nimport {\n\ttype IMarkdownString,\n\tMarkdownString,\n} from \"../../../../base/common/htmlContent.js\";\nimport { KeyCode } from \"../../../../base/common/keyCodes.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { ILanguageService } from \"../../../../editor/common/languages/language.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { ConfigurationTarget } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport { IUserDataProfilesService } from \"../../../../platform/userDataProfile/common/userDataProfile.js\";\nimport { IUserDataSyncEnablementService } from \"../../../../platform/userDataSync/common/userDataSync.js\";\nimport { IWorkbenchConfigurationService } from \"../../../services/configuration/common/configuration.js\";\nimport { POLICY_SETTING_TAG } from \"../common/preferences.js\";\nimport type { SettingsTreeSettingElement } from \"./settingsTreeModels.js\";\n\nconst $ = DOM.$;\n\ntype ScopeString = \"workspace\" | \"user\" | \"remote\" | \"default\";\n\nexport interface ISettingOverrideClickEvent {\n\tscope: ScopeString;\n\tlanguage: string;\n\tsettingKey: string;\n}\n\ninterface SettingIndicator {\n\telement: HTMLElement;\n\t/**\n\t * The element to focus on when navigating with keyboard.\n\t * When undefined, use {@link element} instead.\n\t */\n\tfocusElement?: HTMLElement;\n\tlabel: SimpleIconLabel;\n\tdisposables: DisposableStore;\n}\n\n/**\n * Contains a set of the sync-ignored settings\n * to keep the sync ignored indicator and the getIndicatorsLabelAriaLabel() function in sync.\n * SettingsTreeIndicatorsLabel#updateSyncIgnored provides the source of truth.\n */\nlet cachedSyncIgnoredSettingsSet: Set<string> = new Set<string>();\n\n/**\n * Contains a copy of the sync-ignored settings to determine when to update\n * cachedSyncIgnoredSettingsSet.\n */\nlet cachedSyncIgnoredSettings: string[] = [];\n\n/**\n * Renders the indicators next to a setting, such as \"Also Modified In\".\n */\nexport class SettingsTreeIndicatorsLabel implements IDisposable {\n\tprivate readonly indicatorsContainerElement: HTMLElement;\n\n\tprivate readonly workspaceTrustIndicator: SettingIndicator;\n\tprivate readonly scopeOverridesIndicator: SettingIndicator;\n\tprivate readonly syncIgnoredIndicator: SettingIndicator;\n\tprivate readonly defaultOverrideIndicator: SettingIndicator;\n\tprivate readonly allIndicators: SettingIndicator[];\n\n\tprivate readonly profilesEnabled: boolean;\n\n\tprivate readonly keybindingListeners: DisposableStore =\n\t\tnew DisposableStore();\n\tprivate focusedIndex = 0;\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\t@IWorkbenchConfigurationService\n\t\tprivate readonly configurationService: IWorkbenchConfigurationService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t\t@IUserDataSyncEnablementService\n\t\tprivate readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@IUserDataProfilesService\n\t\tprivate readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t) {\n\t\tthis.indicatorsContainerElement = DOM.append(\n\t\t\tcontainer,\n\t\t\t$(\".setting-indicators-container\"),\n\t\t);\n\t\tthis.indicatorsContainerElement.style.display = \"inline\";\n\n\t\tthis.profilesEnabled = this.userDataProfilesService.isEnabled();\n\n\t\tthis.workspaceTrustIndicator = this.createWorkspaceTrustIndicator();\n\t\tthis.scopeOverridesIndicator = this.createScopeOverridesIndicator();\n\t\tthis.syncIgnoredIndicator = this.createSyncIgnoredIndicator();\n\t\tthis.defaultOverrideIndicator = this.createDefaultOverrideIndicator();\n\t\tthis.allIndicators = [\n\t\t\tthis.workspaceTrustIndicator,\n\t\t\tthis.scopeOverridesIndicator,\n\t\t\tthis.syncIgnoredIndicator,\n\t\t\tthis.defaultOverrideIndicator,\n\t\t];\n\t}\n\n\tprivate defaultHoverOptions: Partial<IHoverOptions> = {\n\t\ttrapFocus: true,\n\t\tposition: {\n\t\t\thoverPosition: HoverPosition.BELOW,\n\t\t},\n\t\tappearance: {\n\t\t\tshowPointer: true,\n\t\t\tcompact: false,\n\t\t},\n\t};\n\n\tprivate addHoverDisposables(\n\t\tdisposables: DisposableStore,\n\t\telement: HTMLElement,\n\t\tshowHover: (focus: boolean) => IHoverWidget | undefined,\n\t) {\n\t\tdisposables.clear();\n\t\tconst scheduler: RunOnceScheduler = disposables.add(\n\t\t\tnew RunOnceScheduler(() => {\n\t\t\t\tconst hover = showHover(false);\n\t\t\t\tif (hover) {\n\t\t\t\t\tdisposables.add(hover);\n\t\t\t\t}\n\t\t\t}, this.configurationService.getValue<number>(\n\t\t\t\t\"workbench.hover.delay\",\n\t\t\t)),\n\t\t);\n\t\tdisposables.add(\n\t\t\tDOM.addDisposableListener(element, DOM.EventType.MOUSE_OVER, () => {\n\t\t\t\tif (!scheduler.isScheduled()) {\n\t\t\t\t\tscheduler.schedule();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tdisposables.add(\n\t\t\tDOM.addDisposableListener(\n\t\t\t\telement,\n\t\t\t\tDOM.EventType.MOUSE_LEAVE,\n\t\t\t\t() => {\n\t\t\t\t\tscheduler.cancel();\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tdisposables.add(\n\t\t\tDOM.addDisposableListener(element, DOM.EventType.KEY_DOWN, (e) => {\n\t\t\t\tconst evt = new StandardKeyboardEvent(e);\n\t\t\t\tif (evt.equals(KeyCode.Space) || evt.equals(KeyCode.Enter)) {\n\t\t\t\t\tconst hover = showHover(true);\n\t\t\t\t\tif (hover) {\n\t\t\t\t\t\tdisposables.add(hover);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate createWorkspaceTrustIndicator(): SettingIndicator {\n\t\tconst disposables = new DisposableStore();\n\t\tconst workspaceTrustElement = $(\n\t\t\t\"span.setting-indicator.setting-item-workspace-trust\",\n\t\t);\n\t\tconst workspaceTrustLabel = disposables.add(\n\t\t\tnew SimpleIconLabel(workspaceTrustElement),\n\t\t);\n\t\tworkspaceTrustLabel.text =\n\t\t\t\"$(warning) \" +\n\t\t\tlocalize(\"workspaceUntrustedLabel\", \"Setting value not applied\");\n\n\t\tconst content = localize(\n\t\t\t\"trustLabel\",\n\t\t\t\"The setting value can only be applied in a trusted workspace.\",\n\t\t);\n\t\tconst showHover = (focus: boolean) => {\n\t\t\treturn this.hoverService.showHover(\n\t\t\t\t{\n\t\t\t\t\t...this.defaultHoverOptions,\n\t\t\t\t\tcontent,\n\t\t\t\t\ttarget: workspaceTrustElement,\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\t\"manageWorkspaceTrust\",\n\t\t\t\t\t\t\t\t\"Manage Workspace Trust\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tcommandId: \"workbench.trust.manage\",\n\t\t\t\t\t\t\trun: (target: HTMLElement) => {\n\t\t\t\t\t\t\t\tthis.commandService.executeCommand(\n\t\t\t\t\t\t\t\t\t\"workbench.trust.manage\",\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\tfocus,\n\t\t\t);\n\t\t};\n\t\tthis.addHoverDisposables(disposables, workspaceTrustElement, showHover);\n\t\treturn {\n\t\t\telement: workspaceTrustElement,\n\t\t\tlabel: workspaceTrustLabel,\n\t\t\tdisposables,\n\t\t};\n\t}\n\n\tprivate createScopeOverridesIndicator(): SettingIndicator {\n\t\tconst disposables = new DisposableStore();\n\t\t// Don't add .setting-indicator class here, because it gets conditionally added later.\n\t\tconst otherOverridesElement = $(\"span.setting-item-overrides\");\n\t\tconst otherOverridesLabel = disposables.add(\n\t\t\tnew SimpleIconLabel(otherOverridesElement),\n\t\t);\n\t\treturn {\n\t\t\telement: otherOverridesElement,\n\t\t\tlabel: otherOverridesLabel,\n\t\t\tdisposables,\n\t\t};\n\t}\n\n\tprivate createSyncIgnoredIndicator(): SettingIndicator {\n\t\tconst disposables = new DisposableStore();\n\t\tconst syncIgnoredElement = $(\n\t\t\t\"span.setting-indicator.setting-item-ignored\",\n\t\t);\n\t\tconst syncIgnoredLabel = disposables.add(\n\t\t\tnew SimpleIconLabel(syncIgnoredElement),\n\t\t);\n\t\tsyncIgnoredLabel.text = localize(\n\t\t\t\"extensionSyncIgnoredLabel\",\n\t\t\t\"Not synced\",\n\t\t);\n\n\t\tconst syncIgnoredHoverContent = localize(\n\t\t\t\"syncIgnoredTitle\",\n\t\t\t\"This setting is ignored during sync\",\n\t\t);\n\t\tconst showHover = (focus: boolean) => {\n\t\t\treturn this.hoverService.showHover(\n\t\t\t\t{\n\t\t\t\t\t...this.defaultHoverOptions,\n\t\t\t\t\tcontent: syncIgnoredHoverContent,\n\t\t\t\t\ttarget: syncIgnoredElement,\n\t\t\t\t},\n\t\t\t\tfocus,\n\t\t\t);\n\t\t};\n\t\tthis.addHoverDisposables(disposables, syncIgnoredElement, showHover);\n\n\t\treturn {\n\t\t\telement: syncIgnoredElement,\n\t\t\tlabel: syncIgnoredLabel,\n\t\t\tdisposables,\n\t\t};\n\t}\n\n\tprivate createDefaultOverrideIndicator(): SettingIndicator {\n\t\tconst disposables = new DisposableStore();\n\t\tconst defaultOverrideIndicator = $(\n\t\t\t\"span.setting-indicator.setting-item-default-overridden\",\n\t\t);\n\t\tconst defaultOverrideLabel = disposables.add(\n\t\t\tnew SimpleIconLabel(defaultOverrideIndicator),\n\t\t);\n\t\tdefaultOverrideLabel.text = localize(\n\t\t\t\"defaultOverriddenLabel\",\n\t\t\t\"Default value changed\",\n\t\t);\n\n\t\treturn {\n\t\t\telement: defaultOverrideIndicator,\n\t\t\tlabel: defaultOverrideLabel,\n\t\t\tdisposables,\n\t\t};\n\t}\n\n\tprivate render() {\n\t\tconst indicatorsToShow = this.allIndicators.filter((indicator) => {\n\t\t\treturn indicator.element.style.display !== \"none\";\n\t\t});\n\n\t\tthis.indicatorsContainerElement.innerText = \"\";\n\t\tthis.indicatorsContainerElement.style.display = \"none\";\n\t\tif (indicatorsToShow.length) {\n\t\t\tthis.indicatorsContainerElement.style.display = \"inline\";\n\t\t\tDOM.append(\n\t\t\t\tthis.indicatorsContainerElement,\n\t\t\t\t$(\"span\", undefined, \"(\"),\n\t\t\t);\n\t\t\tfor (let i = 0; i < indicatorsToShow.length - 1; i++) {\n\t\t\t\tDOM.append(\n\t\t\t\t\tthis.indicatorsContainerElement,\n\t\t\t\t\tindicatorsToShow[i].element,\n\t\t\t\t);\n\t\t\t\tDOM.append(\n\t\t\t\t\tthis.indicatorsContainerElement,\n\t\t\t\t\t$(\"span.comma\", undefined, \" \u2022 \"),\n\t\t\t\t);\n\t\t\t}\n\t\t\tDOM.append(\n\t\t\t\tthis.indicatorsContainerElement,\n\t\t\t\tindicatorsToShow[indicatorsToShow.length - 1].element,\n\t\t\t);\n\t\t\tDOM.append(\n\t\t\t\tthis.indicatorsContainerElement,\n\t\t\t\t$(\"span\", undefined, \")\"),\n\t\t\t);\n\t\t\tthis.resetIndicatorNavigationKeyBindings(indicatorsToShow);\n\t\t}\n\t}\n\n\tprivate resetIndicatorNavigationKeyBindings(\n\t\tindicators: SettingIndicator[],\n\t) {\n\t\tthis.keybindingListeners.clear();\n\t\tthis.indicatorsContainerElement.role =\n\t\t\tindicators.length >= 1 ? \"toolbar\" : \"button\";\n\t\tif (!indicators.length) {\n\t\t\treturn;\n\t\t}\n\t\tconst firstElement =\n\t\t\tindicators[0].focusElement ?? indicators[0].element;\n\t\tfirstElement.tabIndex = 0;\n\t\tthis.keybindingListeners.add(\n\t\t\tDOM.addDisposableListener(\n\t\t\t\tthis.indicatorsContainerElement,\n\t\t\t\t\"keydown\",\n\t\t\t\t(e) => {\n\t\t\t\t\tconst ev = new StandardKeyboardEvent(e);\n\t\t\t\t\tlet handled = true;\n\t\t\t\t\tif (ev.equals(KeyCode.Home)) {\n\t\t\t\t\t\tthis.focusIndicatorAt(indicators, 0);\n\t\t\t\t\t} else if (ev.equals(KeyCode.End)) {\n\t\t\t\t\t\tthis.focusIndicatorAt(\n\t\t\t\t\t\t\tindicators,\n\t\t\t\t\t\t\tindicators.length - 1,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (ev.equals(KeyCode.RightArrow)) {\n\t\t\t\t\t\tconst indexToFocus =\n\t\t\t\t\t\t\t(this.focusedIndex + 1) % indicators.length;\n\t\t\t\t\t\tthis.focusIndicatorAt(indicators, indexToFocus);\n\t\t\t\t\t} else if (ev.equals(KeyCode.LeftArrow)) {\n\t\t\t\t\t\tconst indexToFocus = this.focusedIndex\n\t\t\t\t\t\t\t? this.focusedIndex - 1\n\t\t\t\t\t\t\t: indicators.length - 1;\n\t\t\t\t\t\tthis.focusIndicatorAt(indicators, indexToFocus);\n\t\t\t\t\t} else {\n\t\t\t\t\t\thandled = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (handled) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate focusIndicatorAt(indicators: SettingIndicator[], index: number) {\n\t\tif (index === this.focusedIndex) {\n\t\t\treturn;\n\t\t}\n\t\tconst indicator = indicators[index];\n\t\tconst elementToFocus = indicator.focusElement ?? indicator.element;\n\t\telementToFocus.tabIndex = 0;\n\t\telementToFocus.focus();\n\n\t\tconst currentlyFocusedIndicator = indicators[this.focusedIndex];\n\t\tconst previousFocusedElement =\n\t\t\tcurrentlyFocusedIndicator.focusElement ??\n\t\t\tcurrentlyFocusedIndicator.element;\n\t\tpreviousFocusedElement.tabIndex = -1;\n\n\t\tthis.focusedIndex = index;\n\t}\n\n\tupdateWorkspaceTrust(element: SettingsTreeSettingElement) {\n\t\tthis.workspaceTrustIndicator.element.style.display = element.isUntrusted\n\t\t\t? \"inline\"\n\t\t\t: \"none\";\n\t\tthis.render();\n\t}\n\n\tupdateSyncIgnored(\n\t\telement: SettingsTreeSettingElement,\n\t\tignoredSettings: string[],\n\t) {\n\t\tthis.syncIgnoredIndicator.element.style.display =\n\t\t\tthis.userDataSyncEnablementService.isEnabled() &&\n\t\t\tignoredSettings.includes(element.setting.key)\n\t\t\t\t? \"inline\"\n\t\t\t\t: \"none\";\n\t\tthis.render();\n\t\tif (cachedSyncIgnoredSettings !== ignoredSettings) {\n\t\t\tcachedSyncIgnoredSettings = ignoredSettings;\n\t\t\tcachedSyncIgnoredSettingsSet = new Set<string>(\n\t\t\t\tcachedSyncIgnoredSettings,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate getInlineScopeDisplayText(completeScope: string): string {\n\t\tconst [scope, language] = completeScope.split(\":\");\n\t\tconst localizedScope =\n\t\t\tscope === \"user\"\n\t\t\t\t? localize(\"user\", \"User\")\n\t\t\t\t: scope === \"workspace\"\n\t\t\t\t\t? localize(\"workspace\", \"Workspace\")\n\t\t\t\t\t: localize(\"remote\", \"Remote\");\n\t\tif (language) {\n\t\t\treturn `${this.languageService.getLanguageName(language)} > ${localizedScope}`;\n\t\t}\n\t\treturn localizedScope;\n\t}\n\n\tdispose() {\n\t\tthis.keybindingListeners.dispose();\n\t\tfor (const indicator of this.allIndicators) {\n\t\t\tindicator.disposables.dispose();\n\t\t}\n\t}\n\n\tupdateScopeOverrides(\n\t\telement: SettingsTreeSettingElement,\n\t\tonDidClickOverrideElement: Emitter<ISettingOverrideClickEvent>,\n\t\tonApplyFilter: Emitter<string>,\n\t) {\n\t\tthis.scopeOverridesIndicator.element.innerText = \"\";\n\t\tthis.scopeOverridesIndicator.element.style.display = \"none\";\n\t\tthis.scopeOverridesIndicator.focusElement =\n\t\t\tthis.scopeOverridesIndicator.element;\n\t\tif (element.hasPolicyValue) {\n\t\t\t// If the setting falls under a policy, then no matter what the user sets, the policy value takes effect.\n\t\t\tthis.scopeOverridesIndicator.element.style.display = \"inline\";\n\t\t\tthis.scopeOverridesIndicator.element.classList.add(\n\t\t\t\t\"setting-indicator\",\n\t\t\t);\n\n\t\t\tthis.scopeOverridesIndicator.label.text =\n\t\t\t\t\"$(warning) \" +\n\t\t\t\tlocalize(\"policyLabelText\", \"Setting value not applied\");\n\t\t\tconst content = localize(\n\t\t\t\t\"policyDescription\",\n\t\t\t\t\"This setting is managed by your organization and its applied value cannot be changed.\",\n\t\t\t);\n\t\t\tconst showHover = (focus: boolean) => {\n\t\t\t\treturn this.hoverService.showHover(\n\t\t\t\t\t{\n\t\t\t\t\t\t...this.defaultHoverOptions,\n\t\t\t\t\t\tcontent,\n\t\t\t\t\t\tactions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\t\t\"policyFilterLink\",\n\t\t\t\t\t\t\t\t\t\"View policy settings\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tcommandId:\n\t\t\t\t\t\t\t\t\t\"_settings.action.viewPolicySettings\",\n\t\t\t\t\t\t\t\trun: (_) => {\n\t\t\t\t\t\t\t\t\tonApplyFilter.fire(\n\t\t\t\t\t\t\t\t\t\t`@${POLICY_SETTING_TAG}`,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\ttarget: this.scopeOverridesIndicator.element,\n\t\t\t\t\t},\n\t\t\t\t\tfocus,\n\t\t\t\t);\n\t\t\t};\n\t\t\tthis.addHoverDisposables(\n\t\t\t\tthis.scopeOverridesIndicator.disposables,\n\t\t\t\tthis.scopeOverridesIndicator.element,\n\t\t\t\tshowHover,\n\t\t\t);\n\t\t} else if (\n\t\t\tthis.profilesEnabled &&\n\t\t\telement.settingsTarget === ConfigurationTarget.USER_LOCAL &&\n\t\t\tthis.configurationService.isSettingAppliedForAllProfiles(\n\t\t\t\telement.setting.key,\n\t\t\t)\n\t\t) {\n\t\t\tthis.scopeOverridesIndicator.element.style.display = \"inline\";\n\t\t\tthis.scopeOverridesIndicator.element.classList.add(\n\t\t\t\t\"setting-indicator\",\n\t\t\t);\n\n\t\t\tthis.scopeOverridesIndicator.label.text = localize(\n\t\t\t\t\"applicationSetting\",\n\t\t\t\t\"Applies to all profiles\",\n\t\t\t);\n\n\t\t\tconst content = localize(\n\t\t\t\t\"applicationSettingDescription\",\n\t\t\t\t\"The setting is not specific to the current profile, and will retain its value when switching profiles.\",\n\t\t\t);\n\t\t\tconst showHover = (focus: boolean) => {\n\t\t\t\treturn this.hoverService.showHover(\n\t\t\t\t\t{\n\t\t\t\t\t\t...this.defaultHoverOptions,\n\t\t\t\t\t\tcontent,\n\t\t\t\t\t\ttarget: this.scopeOverridesIndicator.element,\n\t\t\t\t\t},\n\t\t\t\t\tfocus,\n\t\t\t\t);\n\t\t\t};\n\t\t\tthis.addHoverDisposables(\n\t\t\t\tthis.scopeOverridesIndicator.disposables,\n\t\t\t\tthis.scopeOverridesIndicator.element,\n\t\t\t\tshowHover,\n\t\t\t);\n\t\t} else if (\n\t\t\telement.overriddenScopeList.length ||\n\t\t\telement.overriddenDefaultsLanguageList.length\n\t\t) {\n\t\t\tif (\n\t\t\t\telement.overriddenScopeList.length === 1 &&\n\t\t\t\t!element.overriddenDefaultsLanguageList.length\n\t\t\t) {\n\t\t\t\t// We can inline the override and show all the text in the label\n\t\t\t\t// so that users don't have to wait for the hover to load\n\t\t\t\t// just to click into the one override there is.\n\t\t\t\tthis.scopeOverridesIndicator.element.style.display = \"inline\";\n\t\t\t\tthis.scopeOverridesIndicator.element.classList.remove(\n\t\t\t\t\t\"setting-indicator\",\n\t\t\t\t);\n\t\t\t\tthis.scopeOverridesIndicator.disposables.clear();\n\n\t\t\t\tconst prefaceText = element.isConfigured\n\t\t\t\t\t? localize(\"alsoConfiguredIn\", \"Also modified in\")\n\t\t\t\t\t: localize(\"configuredIn\", \"Modified in\");\n\t\t\t\tthis.scopeOverridesIndicator.label.text = `${prefaceText} `;\n\n\t\t\t\tconst overriddenScope = element.overriddenScopeList[0];\n\t\t\t\tconst view = DOM.append(\n\t\t\t\t\tthis.scopeOverridesIndicator.element,\n\t\t\t\t\t$(\n\t\t\t\t\t\t\"a.modified-scope\",\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tthis.getInlineScopeDisplayText(overriddenScope),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tview.tabIndex = -1;\n\t\t\t\tthis.scopeOverridesIndicator.focusElement = view;\n\t\t\t\tconst onClickOrKeydown = (e: UIEvent) => {\n\t\t\t\t\tconst [scope, language] = overriddenScope.split(\":\");\n\t\t\t\t\tonDidClickOverrideElement.fire({\n\t\t\t\t\t\tsettingKey: element.setting.key,\n\t\t\t\t\t\tscope: scope as ScopeString,\n\t\t\t\t\t\tlanguage,\n\t\t\t\t\t});\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t};\n\t\t\t\tthis.scopeOverridesIndicator.disposables.add(\n\t\t\t\t\tDOM.addDisposableListener(\n\t\t\t\t\t\tview,\n\t\t\t\t\t\tDOM.EventType.CLICK,\n\t\t\t\t\t\t(e) => {\n\t\t\t\t\t\t\tonClickOrKeydown(e);\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tthis.scopeOverridesIndicator.disposables.add(\n\t\t\t\t\tDOM.addDisposableListener(\n\t\t\t\t\t\tview,\n\t\t\t\t\t\tDOM.EventType.KEY_DOWN,\n\t\t\t\t\t\t(e) => {\n\t\t\t\t\t\t\tconst ev = new StandardKeyboardEvent(e);\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tev.equals(KeyCode.Space) ||\n\t\t\t\t\t\t\t\tev.equals(KeyCode.Enter)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tonClickOrKeydown(e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.scopeOverridesIndicator.element.style.display = \"inline\";\n\t\t\t\tthis.scopeOverridesIndicator.element.classList.add(\n\t\t\t\t\t\"setting-indicator\",\n\t\t\t\t);\n\t\t\t\tconst scopeOverridesLabelText = element.isConfigured\n\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\"alsoConfiguredElsewhere\",\n\t\t\t\t\t\t\t\"Also modified elsewhere\",\n\t\t\t\t\t\t)\n\t\t\t\t\t: localize(\"configuredElsewhere\", \"Modified elsewhere\");\n\t\t\t\tthis.scopeOverridesIndicator.label.text =\n\t\t\t\t\tscopeOverridesLabelText;\n\n\t\t\t\tlet contentMarkdownString = \"\";\n\t\t\t\tif (element.overriddenScopeList.length) {\n\t\t\t\t\tconst prefaceText = element.isConfigured\n\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\"alsoModifiedInScopes\",\n\t\t\t\t\t\t\t\t\"The setting has also been modified in the following scopes:\",\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\"modifiedInScopes\",\n\t\t\t\t\t\t\t\t\"The setting has been modified in the following scopes:\",\n\t\t\t\t\t\t\t);\n\t\t\t\t\tcontentMarkdownString = prefaceText;\n\t\t\t\t\tfor (const scope of element.overriddenScopeList) {\n\t\t\t\t\t\tconst scopeDisplayText =\n\t\t\t\t\t\t\tthis.getInlineScopeDisplayText(scope);\n\t\t\t\t\t\tcontentMarkdownString += `\\n- [${scopeDisplayText}](${encodeURIComponent(scope)} \"${getAccessibleScopeDisplayText(scope, this.languageService)}\")`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (element.overriddenDefaultsLanguageList.length) {\n\t\t\t\t\tif (contentMarkdownString) {\n\t\t\t\t\t\tcontentMarkdownString += `\\n\\n`;\n\t\t\t\t\t}\n\t\t\t\t\tconst prefaceText = localize(\n\t\t\t\t\t\t\"hasDefaultOverridesForLanguages\",\n\t\t\t\t\t\t\"The following languages have default overrides:\",\n\t\t\t\t\t);\n\t\t\t\t\tcontentMarkdownString += prefaceText;\n\t\t\t\t\tfor (const language of element.overriddenDefaultsLanguageList) {\n\t\t\t\t\t\tconst scopeDisplayText =\n\t\t\t\t\t\t\tthis.languageService.getLanguageName(language);\n\t\t\t\t\t\tcontentMarkdownString += `\\n- [${scopeDisplayText}](${encodeURIComponent(`default:${language}`)} \"${scopeDisplayText}\")`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst content: IMarkdownString = {\n\t\t\t\t\tvalue: contentMarkdownString,\n\t\t\t\t\tisTrusted: false,\n\t\t\t\t\tsupportHtml: false,\n\t\t\t\t};\n\t\t\t\tconst showHover = (focus: boolean) => {\n\t\t\t\t\treturn this.hoverService.showHover(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...this.defaultHoverOptions,\n\t\t\t\t\t\t\tcontent,\n\t\t\t\t\t\t\tlinkHandler: (url: string) => {\n\t\t\t\t\t\t\t\tconst [scope, language] =\n\t\t\t\t\t\t\t\t\tdecodeURIComponent(url).split(\":\");\n\t\t\t\t\t\t\t\tonDidClickOverrideElement.fire({\n\t\t\t\t\t\t\t\t\tsettingKey: element.setting.key,\n\t\t\t\t\t\t\t\t\tscope: scope as ScopeString,\n\t\t\t\t\t\t\t\t\tlanguage,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttarget: this.scopeOverridesIndicator.element,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfocus,\n\t\t\t\t\t);\n\t\t\t\t};\n\t\t\t\tthis.addHoverDisposables(\n\t\t\t\t\tthis.scopeOverridesIndicator.disposables,\n\t\t\t\t\tthis.scopeOverridesIndicator.element,\n\t\t\t\t\tshowHover,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tthis.render();\n\t}\n\n\tupdateDefaultOverrideIndicator(element: SettingsTreeSettingElement) {\n\t\tthis.defaultOverrideIndicator.element.style.display = \"none\";\n\t\tlet sourceToDisplay = getDefaultValueSourceToDisplay(element);\n\t\tif (sourceToDisplay !== undefined) {\n\t\t\tthis.defaultOverrideIndicator.element.style.display = \"inline\";\n\t\t\tthis.defaultOverrideIndicator.disposables.clear();\n\n\t\t\t// Show source of default value when hovered\n\t\t\tif (\n\t\t\t\tArray.isArray(sourceToDisplay) &&\n\t\t\t\tsourceToDisplay.length === 1\n\t\t\t) {\n\t\t\t\tsourceToDisplay = sourceToDisplay[0];\n\t\t\t}\n\n\t\t\tlet defaultOverrideHoverContent;\n\t\t\tif (Array.isArray(sourceToDisplay)) {\n\t\t\t\tsourceToDisplay = sourceToDisplay.map(\n\t\t\t\t\t(source) => `\\`${source}\\``,\n\t\t\t\t);\n\t\t\t\tdefaultOverrideHoverContent = localize(\n\t\t\t\t\t\"multipledefaultOverriddenDetails\",\n\t\t\t\t\t\"A default values has been set by {0}\",\n\t\t\t\t\tsourceToDisplay.slice(0, -1).join(\", \") +\n\t\t\t\t\t\t\" & \" +\n\t\t\t\t\t\tsourceToDisplay.slice(-1),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tdefaultOverrideHoverContent = localize(\n\t\t\t\t\t\"defaultOverriddenDetails\",\n\t\t\t\t\t\"Default setting value overridden by `{0}`\",\n\t\t\t\t\tsourceToDisplay,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst showHover = (focus: boolean) => {\n\t\t\t\treturn this.hoverService.showHover(\n\t\t\t\t\t{\n\t\t\t\t\t\tcontent: new MarkdownString().appendMarkdown(\n\t\t\t\t\t\t\tdefaultOverrideHoverContent,\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttarget: this.defaultOverrideIndicator.element,\n\t\t\t\t\t\tposition: {\n\t\t\t\t\t\t\thoverPosition: HoverPosition.BELOW,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tappearance: {\n\t\t\t\t\t\t\tshowPointer: true,\n\t\t\t\t\t\t\tcompact: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tfocus,\n\t\t\t\t);\n\t\t\t};\n\t\t\tthis.addHoverDisposables(\n\t\t\t\tthis.defaultOverrideIndicator.disposables,\n\t\t\t\tthis.defaultOverrideIndicator.element,\n\t\t\t\tshowHover,\n\t\t\t);\n\t\t}\n\t\tthis.render();\n\t}\n}\n\nfunction getDefaultValueSourceToDisplay(\n\telement: SettingsTreeSettingElement,\n): string | undefined | string[] {\n\tlet sourceToDisplay: string | undefined | string[];\n\tconst defaultValueSource = element.defaultValueSource;\n\tif (defaultValueSource) {\n\t\tif (defaultValueSource instanceof Map) {\n\t\t\tsourceToDisplay = [];\n\t\t\tfor (const [, value] of defaultValueSource) {\n\t\t\t\tconst newValue =\n\t\t\t\t\ttypeof value !== \"string\"\n\t\t\t\t\t\t? (value.displayName ?? value.id)\n\t\t\t\t\t\t: value;\n\t\t\t\tif (!sourceToDisplay.includes(newValue)) {\n\t\t\t\t\tsourceToDisplay.push(newValue);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (typeof defaultValueSource === \"string\") {\n\t\t\tsourceToDisplay = defaultValueSource;\n\t\t} else {\n\t\t\tsourceToDisplay =\n\t\t\t\tdefaultValueSource.displayName ?? defaultValueSource.id;\n\t\t}\n\t}\n\treturn sourceToDisplay;\n}\n\nfunction getAccessibleScopeDisplayText(\n\tcompleteScope: string,\n\tlanguageService: ILanguageService,\n): string {\n\tconst [scope, language] = completeScope.split(\":\");\n\tconst localizedScope =\n\t\tscope === \"user\"\n\t\t\t? localize(\"user\", \"User\")\n\t\t\t: scope === \"workspace\"\n\t\t\t\t? localize(\"workspace\", \"Workspace\")\n\t\t\t\t: localize(\"remote\", \"Remote\");\n\tif (language) {\n\t\treturn localize(\n\t\t\t\"modifiedInScopeForLanguage\",\n\t\t\t\"The {0} scope for {1}\",\n\t\t\tlocalizedScope,\n\t\t\tlanguageService.getLanguageName(language),\n\t\t);\n\t}\n\treturn localizedScope;\n}\n\nfunction getAccessibleScopeDisplayMidSentenceText(\n\tcompleteScope: string,\n\tlanguageService: ILanguageService,\n): string {\n\tconst [scope, language] = completeScope.split(\":\");\n\tconst localizedScope =\n\t\tscope === \"user\"\n\t\t\t? localize(\"user\", \"User\")\n\t\t\t: scope === \"workspace\"\n\t\t\t\t? localize(\"workspace\", \"Workspace\")\n\t\t\t\t: localize(\"remote\", \"Remote\");\n\tif (language) {\n\t\treturn localize(\n\t\t\t\"modifiedInScopeForLanguageMidSentence\",\n\t\t\t\"the {0} scope for {1}\",\n\t\t\tlocalizedScope.toLowerCase(),\n\t\t\tlanguageService.getLanguageName(language),\n\t\t);\n\t}\n\treturn localizedScope;\n}\n\nexport function getIndicatorsLabelAriaLabel(\n\telement: SettingsTreeSettingElement,\n\tconfigurationService: IWorkbenchConfigurationService,\n\tuserDataProfilesService: IUserDataProfilesService,\n\tlanguageService: ILanguageService,\n): string {\n\tconst ariaLabelSections: string[] = [];\n\n\t// Add workspace trust text\n\tif (element.isUntrusted) {\n\t\tariaLabelSections.push(\n\t\t\tlocalize(\n\t\t\t\t\"workspaceUntrustedAriaLabel\",\n\t\t\t\t\"Workspace untrusted; setting value not applied\",\n\t\t\t),\n\t\t);\n\t}\n\n\tif (element.hasPolicyValue) {\n\t\tariaLabelSections.push(\n\t\t\tlocalize(\n\t\t\t\t\"policyDescriptionAccessible\",\n\t\t\t\t\"Managed by organization policy; setting value not applied\",\n\t\t\t),\n\t\t);\n\t} else if (\n\t\tuserDataProfilesService.isEnabled() &&\n\t\telement.settingsTarget === ConfigurationTarget.USER_LOCAL &&\n\t\tconfigurationService.isSettingAppliedForAllProfiles(element.setting.key)\n\t) {\n\t\tariaLabelSections.push(\n\t\t\tlocalize(\n\t\t\t\t\"applicationSettingDescriptionAccessible\",\n\t\t\t\t\"Setting value retained when switching profiles\",\n\t\t\t),\n\t\t);\n\t} else {\n\t\t// Add other overrides text\n\t\tconst otherOverridesStart = element.isConfigured\n\t\t\t? localize(\"alsoConfiguredIn\", \"Also modified in\")\n\t\t\t: localize(\"configuredIn\", \"Modified in\");\n\t\tconst otherOverridesList = element.overriddenScopeList\n\t\t\t.map((scope) =>\n\t\t\t\tgetAccessibleScopeDisplayMidSentenceText(\n\t\t\t\t\tscope,\n\t\t\t\t\tlanguageService,\n\t\t\t\t),\n\t\t\t)\n\t\t\t.join(\", \");\n\t\tif (element.overriddenScopeList.length) {\n\t\t\tariaLabelSections.push(\n\t\t\t\t`${otherOverridesStart} ${otherOverridesList}`,\n\t\t\t);\n\t\t}\n\t}\n\n\t// Add sync ignored text\n\tif (cachedSyncIgnoredSettingsSet.has(element.setting.key)) {\n\t\tariaLabelSections.push(\n\t\t\tlocalize(\"syncIgnoredAriaLabel\", \"Setting ignored during sync\"),\n\t\t);\n\t}\n\n\t// Add default override indicator text\n\tlet sourceToDisplay = getDefaultValueSourceToDisplay(element);\n\tif (sourceToDisplay !== undefined) {\n\t\tif (Array.isArray(sourceToDisplay) && sourceToDisplay.length === 1) {\n\t\t\tsourceToDisplay = sourceToDisplay[0];\n\t\t}\n\n\t\tlet overriddenDetailsText;\n\t\tif (Array.isArray(sourceToDisplay)) {\n\t\t\toverriddenDetailsText = localize(\n\t\t\t\t\"multipleDefaultOverriddenDetailsAriaLabel\",\n\t\t\t\t\"{0} override the default value\",\n\t\t\t\tsourceToDisplay.slice(0, -1).join(\", \") +\n\t\t\t\t\t\" & \" +\n\t\t\t\t\tsourceToDisplay.slice(-1),\n\t\t\t);\n\t\t} else {\n\t\t\toverriddenDetailsText = localize(\n\t\t\t\t\"defaultOverriddenDetailsAriaLabel\",\n\t\t\t\t\"{0} overrides the default value\",\n\t\t\t\tsourceToDisplay,\n\t\t\t);\n\t\t}\n\t\tariaLabelSections.push(overriddenDetailsText);\n\t}\n\n\t// Add text about default values being overridden in other languages\n\tconst otherLanguageOverridesList = element.overriddenDefaultsLanguageList\n\t\t.map((language) => languageService.getLanguageName(language))\n\t\t.join(\", \");\n\tif (element.overriddenDefaultsLanguageList.length) {\n\t\tconst otherLanguageOverridesText = localize(\n\t\t\t\"defaultOverriddenLanguagesList\",\n\t\t\t\"Language-specific default values exist for {0}\",\n\t\t\totherLanguageOverridesList,\n\t\t);\n\t\tariaLabelSections.push(otherLanguageOverridesText);\n\t}\n\n\tconst ariaLabel = ariaLabelSections.join(\". \");\n\treturn ariaLabel;\n}\n"],
  "mappings": "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",
  "names": []
}
