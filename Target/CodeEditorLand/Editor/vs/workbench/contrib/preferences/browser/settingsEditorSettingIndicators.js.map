{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/preferences/browser/settingsEditorSettingIndicators.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from '../../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../../base/browser/keyboardEvent.js';\nimport { HoverPosition } from '../../../../base/browser/ui/hover/hoverWidget.js';\nimport { SimpleIconLabel } from '../../../../base/browser/ui/iconLabel/simpleIconLabel.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { IMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { KeyCode } from '../../../../base/common/keyCodes.js';\nimport { IDisposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ILanguageService } from '../../../../editor/common/languages/language.js';\nimport { localize } from '../../../../nls.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ConfigurationTarget } from '../../../../platform/configuration/common/configuration.js';\nimport { IUserDataProfilesService } from '../../../../platform/userDataProfile/common/userDataProfile.js';\nimport { IUserDataSyncEnablementService } from '../../../../platform/userDataSync/common/userDataSync.js';\nimport { SettingsTreeSettingElement } from './settingsTreeModels.js';\nimport { POLICY_SETTING_TAG } from '../common/preferences.js';\nimport { IWorkbenchConfigurationService } from '../../../services/configuration/common/configuration.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\nimport type { IHoverOptions, IHoverWidget } from '../../../../base/browser/ui/hover/hover.js';\n\nconst $ = DOM.$;\n\ntype ScopeString = 'workspace' | 'user' | 'remote' | 'default';\n\nexport interface ISettingOverrideClickEvent {\n\tscope: ScopeString;\n\tlanguage: string;\n\tsettingKey: string;\n}\n\ninterface SettingIndicator {\n\telement: HTMLElement;\n\t/**\n\t * The element to focus on when navigating with keyboard.\n\t * When undefined, use {@link element} instead.\n\t */\n\tfocusElement?: HTMLElement;\n\tlabel: SimpleIconLabel;\n\tdisposables: DisposableStore;\n}\n\n/**\n * Contains a set of the sync-ignored settings\n * to keep the sync ignored indicator and the getIndicatorsLabelAriaLabel() function in sync.\n * SettingsTreeIndicatorsLabel#updateSyncIgnored provides the source of truth.\n */\nlet cachedSyncIgnoredSettingsSet: Set<string> = new Set<string>();\n\n/**\n * Contains a copy of the sync-ignored settings to determine when to update\n * cachedSyncIgnoredSettingsSet.\n */\nlet cachedSyncIgnoredSettings: string[] = [];\n\n/**\n * Renders the indicators next to a setting, such as \"Also Modified In\".\n */\nexport class SettingsTreeIndicatorsLabel implements IDisposable {\n\tprivate readonly indicatorsContainerElement: HTMLElement;\n\n\tprivate readonly workspaceTrustIndicator: SettingIndicator;\n\tprivate readonly scopeOverridesIndicator: SettingIndicator;\n\tprivate readonly syncIgnoredIndicator: SettingIndicator;\n\tprivate readonly defaultOverrideIndicator: SettingIndicator;\n\tprivate readonly allIndicators: SettingIndicator[];\n\n\tprivate readonly profilesEnabled: boolean;\n\n\tprivate readonly keybindingListeners: DisposableStore = new DisposableStore();\n\tprivate focusedIndex = 0;\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\t@IWorkbenchConfigurationService private readonly configurationService: IWorkbenchConfigurationService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t\t@IUserDataSyncEnablementService private readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@ICommandService private readonly commandService: ICommandService) {\n\t\tthis.indicatorsContainerElement = DOM.append(container, $('.setting-indicators-container'));\n\t\tthis.indicatorsContainerElement.style.display = 'inline';\n\n\t\tthis.profilesEnabled = this.userDataProfilesService.isEnabled();\n\n\t\tthis.workspaceTrustIndicator = this.createWorkspaceTrustIndicator();\n\t\tthis.scopeOverridesIndicator = this.createScopeOverridesIndicator();\n\t\tthis.syncIgnoredIndicator = this.createSyncIgnoredIndicator();\n\t\tthis.defaultOverrideIndicator = this.createDefaultOverrideIndicator();\n\t\tthis.allIndicators = [this.workspaceTrustIndicator, this.scopeOverridesIndicator, this.syncIgnoredIndicator, this.defaultOverrideIndicator];\n\t}\n\n\tprivate defaultHoverOptions: Partial<IHoverOptions> = {\n\t\ttrapFocus: true,\n\t\tposition: {\n\t\t\thoverPosition: HoverPosition.BELOW,\n\t\t},\n\t\tappearance: {\n\t\t\tshowPointer: true,\n\t\t\tcompact: false,\n\t\t}\n\t};\n\n\tprivate addHoverDisposables(disposables: DisposableStore, element: HTMLElement, showHover: (focus: boolean) => IHoverWidget | undefined) {\n\t\tdisposables.clear();\n\t\tconst scheduler: RunOnceScheduler = disposables.add(new RunOnceScheduler(() => {\n\t\t\tconst hover = showHover(false);\n\t\t\tif (hover) {\n\t\t\t\tdisposables.add(hover);\n\t\t\t}\n\t\t}, this.configurationService.getValue<number>('workbench.hover.delay')));\n\t\tdisposables.add(DOM.addDisposableListener(element, DOM.EventType.MOUSE_OVER, () => {\n\t\t\tif (!scheduler.isScheduled()) {\n\t\t\t\tscheduler.schedule();\n\t\t\t}\n\t\t}));\n\t\tdisposables.add(DOM.addDisposableListener(element, DOM.EventType.MOUSE_LEAVE, () => {\n\t\t\tscheduler.cancel();\n\t\t}));\n\t\tdisposables.add(DOM.addDisposableListener(element, DOM.EventType.KEY_DOWN, (e) => {\n\t\t\tconst evt = new StandardKeyboardEvent(e);\n\t\t\tif (evt.equals(KeyCode.Space) || evt.equals(KeyCode.Enter)) {\n\t\t\t\tconst hover = showHover(true);\n\t\t\t\tif (hover) {\n\t\t\t\t\tdisposables.add(hover);\n\t\t\t\t}\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate createWorkspaceTrustIndicator(): SettingIndicator {\n\t\tconst disposables = new DisposableStore();\n\t\tconst workspaceTrustElement = $('span.setting-indicator.setting-item-workspace-trust');\n\t\tconst workspaceTrustLabel = disposables.add(new SimpleIconLabel(workspaceTrustElement));\n\t\tworkspaceTrustLabel.text = '$(warning) ' + localize('workspaceUntrustedLabel', \"Setting value not applied\");\n\n\t\tconst content = localize('trustLabel', \"The setting value can only be applied in a trusted workspace.\");\n\t\tconst showHover = (focus: boolean) => {\n\t\t\treturn this.hoverService.showHover({\n\t\t\t\t...this.defaultHoverOptions,\n\t\t\t\tcontent,\n\t\t\t\ttarget: workspaceTrustElement,\n\t\t\t\tactions: [{\n\t\t\t\t\tlabel: localize('manageWorkspaceTrust', \"Manage Workspace Trust\"),\n\t\t\t\t\tcommandId: 'workbench.trust.manage',\n\t\t\t\t\trun: (target: HTMLElement) => {\n\t\t\t\t\t\tthis.commandService.executeCommand('workbench.trust.manage');\n\t\t\t\t\t}\n\t\t\t\t}],\n\t\t\t}, focus);\n\t\t};\n\t\tthis.addHoverDisposables(disposables, workspaceTrustElement, showHover);\n\t\treturn {\n\t\t\telement: workspaceTrustElement,\n\t\t\tlabel: workspaceTrustLabel,\n\t\t\tdisposables\n\t\t};\n\t}\n\n\tprivate createScopeOverridesIndicator(): SettingIndicator {\n\t\tconst disposables = new DisposableStore();\n\t\t// Don't add .setting-indicator class here, because it gets conditionally added later.\n\t\tconst otherOverridesElement = $('span.setting-item-overrides');\n\t\tconst otherOverridesLabel = disposables.add(new SimpleIconLabel(otherOverridesElement));\n\t\treturn {\n\t\t\telement: otherOverridesElement,\n\t\t\tlabel: otherOverridesLabel,\n\t\t\tdisposables\n\t\t};\n\t}\n\n\tprivate createSyncIgnoredIndicator(): SettingIndicator {\n\t\tconst disposables = new DisposableStore();\n\t\tconst syncIgnoredElement = $('span.setting-indicator.setting-item-ignored');\n\t\tconst syncIgnoredLabel = disposables.add(new SimpleIconLabel(syncIgnoredElement));\n\t\tsyncIgnoredLabel.text = localize('extensionSyncIgnoredLabel', 'Not synced');\n\n\t\tconst syncIgnoredHoverContent = localize('syncIgnoredTitle', \"This setting is ignored during sync\");\n\t\tconst showHover = (focus: boolean) => {\n\t\t\treturn this.hoverService.showHover({\n\t\t\t\t...this.defaultHoverOptions,\n\t\t\t\tcontent: syncIgnoredHoverContent,\n\t\t\t\ttarget: syncIgnoredElement\n\t\t\t}, focus);\n\t\t};\n\t\tthis.addHoverDisposables(disposables, syncIgnoredElement, showHover);\n\n\t\treturn {\n\t\t\telement: syncIgnoredElement,\n\t\t\tlabel: syncIgnoredLabel,\n\t\t\tdisposables\n\t\t};\n\t}\n\n\tprivate createDefaultOverrideIndicator(): SettingIndicator {\n\t\tconst disposables = new DisposableStore();\n\t\tconst defaultOverrideIndicator = $('span.setting-indicator.setting-item-default-overridden');\n\t\tconst defaultOverrideLabel = disposables.add(new SimpleIconLabel(defaultOverrideIndicator));\n\t\tdefaultOverrideLabel.text = localize('defaultOverriddenLabel', \"Default value changed\");\n\n\t\treturn {\n\t\t\telement: defaultOverrideIndicator,\n\t\t\tlabel: defaultOverrideLabel,\n\t\t\tdisposables\n\t\t};\n\t}\n\n\tprivate render() {\n\t\tconst indicatorsToShow = this.allIndicators.filter(indicator => {\n\t\t\treturn indicator.element.style.display !== 'none';\n\t\t});\n\n\t\tthis.indicatorsContainerElement.innerText = '';\n\t\tthis.indicatorsContainerElement.style.display = 'none';\n\t\tif (indicatorsToShow.length) {\n\t\t\tthis.indicatorsContainerElement.style.display = 'inline';\n\t\t\tDOM.append(this.indicatorsContainerElement, $('span', undefined, '('));\n\t\t\tfor (let i = 0; i < indicatorsToShow.length - 1; i++) {\n\t\t\t\tDOM.append(this.indicatorsContainerElement, indicatorsToShow[i].element);\n\t\t\t\tDOM.append(this.indicatorsContainerElement, $('span.comma', undefined, ' \u2022 '));\n\t\t\t}\n\t\t\tDOM.append(this.indicatorsContainerElement, indicatorsToShow[indicatorsToShow.length - 1].element);\n\t\t\tDOM.append(this.indicatorsContainerElement, $('span', undefined, ')'));\n\t\t\tthis.resetIndicatorNavigationKeyBindings(indicatorsToShow);\n\t\t}\n\t}\n\n\tprivate resetIndicatorNavigationKeyBindings(indicators: SettingIndicator[]) {\n\t\tthis.keybindingListeners.clear();\n\t\tthis.indicatorsContainerElement.role = indicators.length >= 1 ? 'toolbar' : 'button';\n\t\tif (!indicators.length) {\n\t\t\treturn;\n\t\t}\n\t\tconst firstElement = indicators[0].focusElement ?? indicators[0].element;\n\t\tfirstElement.tabIndex = 0;\n\t\tthis.keybindingListeners.add(DOM.addDisposableListener(this.indicatorsContainerElement, 'keydown', (e) => {\n\t\t\tconst ev = new StandardKeyboardEvent(e);\n\t\t\tlet handled = true;\n\t\t\tif (ev.equals(KeyCode.Home)) {\n\t\t\t\tthis.focusIndicatorAt(indicators, 0);\n\t\t\t} else if (ev.equals(KeyCode.End)) {\n\t\t\t\tthis.focusIndicatorAt(indicators, indicators.length - 1);\n\t\t\t} else if (ev.equals(KeyCode.RightArrow)) {\n\t\t\t\tconst indexToFocus = (this.focusedIndex + 1) % indicators.length;\n\t\t\t\tthis.focusIndicatorAt(indicators, indexToFocus);\n\t\t\t} else if (ev.equals(KeyCode.LeftArrow)) {\n\t\t\t\tconst indexToFocus = this.focusedIndex ? this.focusedIndex - 1 : indicators.length - 1;\n\t\t\t\tthis.focusIndicatorAt(indicators, indexToFocus);\n\t\t\t} else {\n\t\t\t\thandled = false;\n\t\t\t}\n\n\t\t\tif (handled) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate focusIndicatorAt(indicators: SettingIndicator[], index: number) {\n\t\tif (index === this.focusedIndex) {\n\t\t\treturn;\n\t\t}\n\t\tconst indicator = indicators[index];\n\t\tconst elementToFocus = indicator.focusElement ?? indicator.element;\n\t\telementToFocus.tabIndex = 0;\n\t\telementToFocus.focus();\n\n\t\tconst currentlyFocusedIndicator = indicators[this.focusedIndex];\n\t\tconst previousFocusedElement = currentlyFocusedIndicator.focusElement ?? currentlyFocusedIndicator.element;\n\t\tpreviousFocusedElement.tabIndex = -1;\n\n\t\tthis.focusedIndex = index;\n\t}\n\n\tupdateWorkspaceTrust(element: SettingsTreeSettingElement) {\n\t\tthis.workspaceTrustIndicator.element.style.display = element.isUntrusted ? 'inline' : 'none';\n\t\tthis.render();\n\t}\n\n\tupdateSyncIgnored(element: SettingsTreeSettingElement, ignoredSettings: string[]) {\n\t\tthis.syncIgnoredIndicator.element.style.display = this.userDataSyncEnablementService.isEnabled()\n\t\t\t&& ignoredSettings.includes(element.setting.key) ? 'inline' : 'none';\n\t\tthis.render();\n\t\tif (cachedSyncIgnoredSettings !== ignoredSettings) {\n\t\t\tcachedSyncIgnoredSettings = ignoredSettings;\n\t\t\tcachedSyncIgnoredSettingsSet = new Set<string>(cachedSyncIgnoredSettings);\n\t\t}\n\t}\n\n\tprivate getInlineScopeDisplayText(completeScope: string): string {\n\t\tconst [scope, language] = completeScope.split(':');\n\t\tconst localizedScope = scope === 'user' ?\n\t\t\tlocalize('user', \"User\") : scope === 'workspace' ?\n\t\t\t\tlocalize('workspace', \"Workspace\") : localize('remote', \"Remote\");\n\t\tif (language) {\n\t\t\treturn `${this.languageService.getLanguageName(language)} > ${localizedScope}`;\n\t\t}\n\t\treturn localizedScope;\n\t}\n\n\tdispose() {\n\t\tthis.keybindingListeners.dispose();\n\t\tfor (const indicator of this.allIndicators) {\n\t\t\tindicator.disposables.dispose();\n\t\t}\n\t}\n\n\tupdateScopeOverrides(element: SettingsTreeSettingElement, onDidClickOverrideElement: Emitter<ISettingOverrideClickEvent>, onApplyFilter: Emitter<string>) {\n\t\tthis.scopeOverridesIndicator.element.innerText = '';\n\t\tthis.scopeOverridesIndicator.element.style.display = 'none';\n\t\tthis.scopeOverridesIndicator.focusElement = this.scopeOverridesIndicator.element;\n\t\tif (element.hasPolicyValue) {\n\t\t\t// If the setting falls under a policy, then no matter what the user sets, the policy value takes effect.\n\t\t\tthis.scopeOverridesIndicator.element.style.display = 'inline';\n\t\t\tthis.scopeOverridesIndicator.element.classList.add('setting-indicator');\n\n\t\t\tthis.scopeOverridesIndicator.label.text = '$(warning) ' + localize('policyLabelText', \"Setting value not applied\");\n\t\t\tconst content = localize('policyDescription', \"This setting is managed by your organization and its applied value cannot be changed.\");\n\t\t\tconst showHover = (focus: boolean) => {\n\t\t\t\treturn this.hoverService.showHover({\n\t\t\t\t\t...this.defaultHoverOptions,\n\t\t\t\t\tcontent,\n\t\t\t\t\tactions: [{\n\t\t\t\t\t\tlabel: localize('policyFilterLink', \"View policy settings\"),\n\t\t\t\t\t\tcommandId: '_settings.action.viewPolicySettings',\n\t\t\t\t\t\trun: (_) => {\n\t\t\t\t\t\t\tonApplyFilter.fire(`@${POLICY_SETTING_TAG}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}],\n\t\t\t\t\ttarget: this.scopeOverridesIndicator.element\n\t\t\t\t}, focus);\n\t\t\t};\n\t\t\tthis.addHoverDisposables(this.scopeOverridesIndicator.disposables, this.scopeOverridesIndicator.element, showHover);\n\t\t} else if (this.profilesEnabled && element.settingsTarget === ConfigurationTarget.USER_LOCAL && this.configurationService.isSettingAppliedForAllProfiles(element.setting.key)) {\n\t\t\tthis.scopeOverridesIndicator.element.style.display = 'inline';\n\t\t\tthis.scopeOverridesIndicator.element.classList.add('setting-indicator');\n\n\t\t\tthis.scopeOverridesIndicator.label.text = localize('applicationSetting', \"Applies to all profiles\");\n\n\t\t\tconst content = localize('applicationSettingDescription', \"The setting is not specific to the current profile, and will retain its value when switching profiles.\");\n\t\t\tconst showHover = (focus: boolean) => {\n\t\t\t\treturn this.hoverService.showHover({\n\t\t\t\t\t...this.defaultHoverOptions,\n\t\t\t\t\tcontent,\n\t\t\t\t\ttarget: this.scopeOverridesIndicator.element\n\t\t\t\t}, focus);\n\t\t\t};\n\t\t\tthis.addHoverDisposables(this.scopeOverridesIndicator.disposables, this.scopeOverridesIndicator.element, showHover);\n\t\t} else if (element.overriddenScopeList.length || element.overriddenDefaultsLanguageList.length) {\n\t\t\tif (element.overriddenScopeList.length === 1 && !element.overriddenDefaultsLanguageList.length) {\n\t\t\t\t// We can inline the override and show all the text in the label\n\t\t\t\t// so that users don't have to wait for the hover to load\n\t\t\t\t// just to click into the one override there is.\n\t\t\t\tthis.scopeOverridesIndicator.element.style.display = 'inline';\n\t\t\t\tthis.scopeOverridesIndicator.element.classList.remove('setting-indicator');\n\t\t\t\tthis.scopeOverridesIndicator.disposables.clear();\n\n\t\t\t\tconst prefaceText = element.isConfigured ?\n\t\t\t\t\tlocalize('alsoConfiguredIn', \"Also modified in\") :\n\t\t\t\t\tlocalize('configuredIn', \"Modified in\");\n\t\t\t\tthis.scopeOverridesIndicator.label.text = `${prefaceText} `;\n\n\t\t\t\tconst overriddenScope = element.overriddenScopeList[0];\n\t\t\t\tconst view = DOM.append(this.scopeOverridesIndicator.element, $('a.modified-scope', undefined, this.getInlineScopeDisplayText(overriddenScope)));\n\t\t\t\tview.tabIndex = -1;\n\t\t\t\tthis.scopeOverridesIndicator.focusElement = view;\n\t\t\t\tconst onClickOrKeydown = (e: UIEvent) => {\n\t\t\t\t\tconst [scope, language] = overriddenScope.split(':');\n\t\t\t\t\tonDidClickOverrideElement.fire({\n\t\t\t\t\t\tsettingKey: element.setting.key,\n\t\t\t\t\t\tscope: scope as ScopeString,\n\t\t\t\t\t\tlanguage\n\t\t\t\t\t});\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t};\n\t\t\t\tthis.scopeOverridesIndicator.disposables.add(DOM.addDisposableListener(view, DOM.EventType.CLICK, (e) => {\n\t\t\t\t\tonClickOrKeydown(e);\n\t\t\t\t}));\n\t\t\t\tthis.scopeOverridesIndicator.disposables.add(DOM.addDisposableListener(view, DOM.EventType.KEY_DOWN, (e) => {\n\t\t\t\t\tconst ev = new StandardKeyboardEvent(e);\n\t\t\t\t\tif (ev.equals(KeyCode.Space) || ev.equals(KeyCode.Enter)) {\n\t\t\t\t\t\tonClickOrKeydown(e);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tthis.scopeOverridesIndicator.element.style.display = 'inline';\n\t\t\t\tthis.scopeOverridesIndicator.element.classList.add('setting-indicator');\n\t\t\t\tconst scopeOverridesLabelText = element.isConfigured ?\n\t\t\t\t\tlocalize('alsoConfiguredElsewhere', \"Also modified elsewhere\") :\n\t\t\t\t\tlocalize('configuredElsewhere', \"Modified elsewhere\");\n\t\t\t\tthis.scopeOverridesIndicator.label.text = scopeOverridesLabelText;\n\n\t\t\t\tlet contentMarkdownString = '';\n\t\t\t\tif (element.overriddenScopeList.length) {\n\t\t\t\t\tconst prefaceText = element.isConfigured ?\n\t\t\t\t\t\tlocalize('alsoModifiedInScopes', \"The setting has also been modified in the following scopes:\") :\n\t\t\t\t\t\tlocalize('modifiedInScopes', \"The setting has been modified in the following scopes:\");\n\t\t\t\t\tcontentMarkdownString = prefaceText;\n\t\t\t\t\tfor (const scope of element.overriddenScopeList) {\n\t\t\t\t\t\tconst scopeDisplayText = this.getInlineScopeDisplayText(scope);\n\t\t\t\t\t\tcontentMarkdownString += `\\n- [${scopeDisplayText}](${encodeURIComponent(scope)} \"${getAccessibleScopeDisplayText(scope, this.languageService)}\")`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (element.overriddenDefaultsLanguageList.length) {\n\t\t\t\t\tif (contentMarkdownString) {\n\t\t\t\t\t\tcontentMarkdownString += `\\n\\n`;\n\t\t\t\t\t}\n\t\t\t\t\tconst prefaceText = localize('hasDefaultOverridesForLanguages', \"The following languages have default overrides:\");\n\t\t\t\t\tcontentMarkdownString += prefaceText;\n\t\t\t\t\tfor (const language of element.overriddenDefaultsLanguageList) {\n\t\t\t\t\t\tconst scopeDisplayText = this.languageService.getLanguageName(language);\n\t\t\t\t\t\tcontentMarkdownString += `\\n- [${scopeDisplayText}](${encodeURIComponent(`default:${language}`)} \"${scopeDisplayText}\")`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst content: IMarkdownString = {\n\t\t\t\t\tvalue: contentMarkdownString,\n\t\t\t\t\tisTrusted: false,\n\t\t\t\t\tsupportHtml: false\n\t\t\t\t};\n\t\t\t\tconst showHover = (focus: boolean) => {\n\t\t\t\t\treturn this.hoverService.showHover({\n\t\t\t\t\t\t...this.defaultHoverOptions,\n\t\t\t\t\t\tcontent,\n\t\t\t\t\t\tlinkHandler: (url: string) => {\n\t\t\t\t\t\t\tconst [scope, language] = decodeURIComponent(url).split(':');\n\t\t\t\t\t\t\tonDidClickOverrideElement.fire({\n\t\t\t\t\t\t\t\tsettingKey: element.setting.key,\n\t\t\t\t\t\t\t\tscope: scope as ScopeString,\n\t\t\t\t\t\t\t\tlanguage\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttarget: this.scopeOverridesIndicator.element\n\t\t\t\t\t}, focus);\n\t\t\t\t};\n\t\t\t\tthis.addHoverDisposables(this.scopeOverridesIndicator.disposables, this.scopeOverridesIndicator.element, showHover);\n\t\t\t}\n\t\t}\n\t\tthis.render();\n\t}\n\n\tupdateDefaultOverrideIndicator(element: SettingsTreeSettingElement) {\n\t\tthis.defaultOverrideIndicator.element.style.display = 'none';\n\t\tlet sourceToDisplay = getDefaultValueSourceToDisplay(element);\n\t\tif (sourceToDisplay !== undefined) {\n\t\t\tthis.defaultOverrideIndicator.element.style.display = 'inline';\n\t\t\tthis.defaultOverrideIndicator.disposables.clear();\n\n\t\t\t// Show source of default value when hovered\n\t\t\tif (Array.isArray(sourceToDisplay) && sourceToDisplay.length === 1) {\n\t\t\t\tsourceToDisplay = sourceToDisplay[0];\n\t\t\t}\n\n\t\t\tlet defaultOverrideHoverContent;\n\t\t\tif (!Array.isArray(sourceToDisplay)) {\n\t\t\t\tdefaultOverrideHoverContent = localize('defaultOverriddenDetails', \"Default setting value overridden by `{0}`\", sourceToDisplay);\n\t\t\t} else {\n\t\t\t\tsourceToDisplay = sourceToDisplay.map(source => `\\`${source}\\``);\n\t\t\t\tdefaultOverrideHoverContent = localize('multipledefaultOverriddenDetails', \"A default values has been set by {0}\", sourceToDisplay.slice(0, -1).join(', ') + ' & ' + sourceToDisplay.slice(-1));\n\t\t\t}\n\n\t\t\tconst showHover = (focus: boolean) => {\n\t\t\t\treturn this.hoverService.showHover({\n\t\t\t\t\tcontent: new MarkdownString().appendMarkdown(defaultOverrideHoverContent),\n\t\t\t\t\ttarget: this.defaultOverrideIndicator.element,\n\t\t\t\t\tposition: {\n\t\t\t\t\t\thoverPosition: HoverPosition.BELOW,\n\t\t\t\t\t},\n\t\t\t\t\tappearance: {\n\t\t\t\t\t\tshowPointer: true,\n\t\t\t\t\t\tcompact: false\n\t\t\t\t\t}\n\t\t\t\t}, focus);\n\t\t\t};\n\t\t\tthis.addHoverDisposables(this.defaultOverrideIndicator.disposables, this.defaultOverrideIndicator.element, showHover);\n\t\t}\n\t\tthis.render();\n\t}\n}\n\nfunction getDefaultValueSourceToDisplay(element: SettingsTreeSettingElement): string | undefined | string[] {\n\tlet sourceToDisplay: string | undefined | string[];\n\tconst defaultValueSource = element.defaultValueSource;\n\tif (defaultValueSource) {\n\t\tif (defaultValueSource instanceof Map) {\n\t\t\tsourceToDisplay = [];\n\t\t\tfor (const [, value] of defaultValueSource) {\n\t\t\t\tconst newValue = typeof value !== 'string' ? value.displayName ?? value.id : value;\n\t\t\t\tif (!sourceToDisplay.includes(newValue)) {\n\t\t\t\t\tsourceToDisplay.push(newValue);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (typeof defaultValueSource === 'string') {\n\t\t\tsourceToDisplay = defaultValueSource;\n\t\t} else {\n\t\t\tsourceToDisplay = defaultValueSource.displayName ?? defaultValueSource.id;\n\t\t}\n\t}\n\treturn sourceToDisplay;\n}\n\nfunction getAccessibleScopeDisplayText(completeScope: string, languageService: ILanguageService): string {\n\tconst [scope, language] = completeScope.split(':');\n\tconst localizedScope = scope === 'user' ?\n\t\tlocalize('user', \"User\") : scope === 'workspace' ?\n\t\t\tlocalize('workspace', \"Workspace\") : localize('remote', \"Remote\");\n\tif (language) {\n\t\treturn localize('modifiedInScopeForLanguage', \"The {0} scope for {1}\", localizedScope, languageService.getLanguageName(language));\n\t}\n\treturn localizedScope;\n}\n\nfunction getAccessibleScopeDisplayMidSentenceText(completeScope: string, languageService: ILanguageService): string {\n\tconst [scope, language] = completeScope.split(':');\n\tconst localizedScope = scope === 'user' ?\n\t\tlocalize('user', \"User\") : scope === 'workspace' ?\n\t\t\tlocalize('workspace', \"Workspace\") : localize('remote', \"Remote\");\n\tif (language) {\n\t\treturn localize('modifiedInScopeForLanguageMidSentence', \"the {0} scope for {1}\", localizedScope.toLowerCase(), languageService.getLanguageName(language));\n\t}\n\treturn localizedScope;\n}\n\nexport function getIndicatorsLabelAriaLabel(element: SettingsTreeSettingElement, configurationService: IWorkbenchConfigurationService, userDataProfilesService: IUserDataProfilesService, languageService: ILanguageService): string {\n\tconst ariaLabelSections: string[] = [];\n\n\t// Add workspace trust text\n\tif (element.isUntrusted) {\n\t\tariaLabelSections.push(localize('workspaceUntrustedAriaLabel', \"Workspace untrusted; setting value not applied\"));\n\t}\n\n\tif (element.hasPolicyValue) {\n\t\tariaLabelSections.push(localize('policyDescriptionAccessible', \"Managed by organization policy; setting value not applied\"));\n\t} else if (userDataProfilesService.isEnabled() && element.settingsTarget === ConfigurationTarget.USER_LOCAL && configurationService.isSettingAppliedForAllProfiles(element.setting.key)) {\n\t\tariaLabelSections.push(localize('applicationSettingDescriptionAccessible', \"Setting value retained when switching profiles\"));\n\t} else {\n\t\t// Add other overrides text\n\t\tconst otherOverridesStart = element.isConfigured ?\n\t\t\tlocalize('alsoConfiguredIn', \"Also modified in\") :\n\t\t\tlocalize('configuredIn', \"Modified in\");\n\t\tconst otherOverridesList = element.overriddenScopeList\n\t\t\t.map(scope => getAccessibleScopeDisplayMidSentenceText(scope, languageService)).join(', ');\n\t\tif (element.overriddenScopeList.length) {\n\t\t\tariaLabelSections.push(`${otherOverridesStart} ${otherOverridesList}`);\n\t\t}\n\t}\n\n\t// Add sync ignored text\n\tif (cachedSyncIgnoredSettingsSet.has(element.setting.key)) {\n\t\tariaLabelSections.push(localize('syncIgnoredAriaLabel', \"Setting ignored during sync\"));\n\t}\n\n\t// Add default override indicator text\n\tlet sourceToDisplay = getDefaultValueSourceToDisplay(element);\n\tif (sourceToDisplay !== undefined) {\n\t\tif (Array.isArray(sourceToDisplay) && sourceToDisplay.length === 1) {\n\t\t\tsourceToDisplay = sourceToDisplay[0];\n\t\t}\n\n\t\tlet overriddenDetailsText;\n\t\tif (!Array.isArray(sourceToDisplay)) {\n\t\t\toverriddenDetailsText = localize('defaultOverriddenDetailsAriaLabel', \"{0} overrides the default value\", sourceToDisplay);\n\t\t} else {\n\t\t\toverriddenDetailsText = localize('multipleDefaultOverriddenDetailsAriaLabel', \"{0} override the default value\", sourceToDisplay.slice(0, -1).join(', ') + ' & ' + sourceToDisplay.slice(-1));\n\t\t}\n\t\tariaLabelSections.push(overriddenDetailsText);\n\t}\n\n\t// Add text about default values being overridden in other languages\n\tconst otherLanguageOverridesList = element.overriddenDefaultsLanguageList\n\t\t.map(language => languageService.getLanguageName(language)).join(', ');\n\tif (element.overriddenDefaultsLanguageList.length) {\n\t\tconst otherLanguageOverridesText = localize('defaultOverriddenLanguagesList', \"Language-specific default values exist for {0}\", otherLanguageOverridesList);\n\t\tariaLabelSections.push(otherLanguageOverridesText);\n\t}\n\n\tconst ariaLabel = ariaLabelSections.join('. ');\n\treturn ariaLabel;\n}\n"],
  "mappings": "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",
  "names": []
}
