var D=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var b=(a,e,t,n)=>{for(var i=n>1?void 0:n?k(e,t):e,r=a.length-1,o;r>=0;r--)(o=a[r])&&(i=(n?o(e,t,i):o(i))||i);return n&&i&&D(e,t,i),i},f=(a,e)=>(t,n)=>e(t,n,a);import*as c from"../../../../base/browser/dom.js";import{StandardKeyboardEvent as S}from"../../../../base/browser/keyboardEvent.js";import{HoverPosition as L}from"../../../../base/browser/ui/hover/hoverWidget.js";import{SimpleIconLabel as m}from"../../../../base/browser/ui/iconLabel/simpleIconLabel.js";import{RunOnceScheduler as H}from"../../../../base/common/async.js";import{MarkdownString as x}from"../../../../base/common/htmlContent.js";import{KeyCode as v}from"../../../../base/common/keyCodes.js";import{DisposableStore as h}from"../../../../base/common/lifecycle.js";import{ILanguageService as C}from"../../../../editor/common/languages/language.js";import{localize as s}from"../../../../nls.js";import{ICommandService as A}from"../../../../platform/commands/common/commands.js";import{ConfigurationTarget as O}from"../../../../platform/configuration/common/configuration.js";import{IHoverService as M}from"../../../../platform/hover/browser/hover.js";import{IUserDataProfilesService as U}from"../../../../platform/userDataProfile/common/userDataProfile.js";import{IUserDataSyncEnablementService as P}from"../../../../platform/userDataSync/common/userDataSync.js";import{IWorkbenchConfigurationService as W}from"../../../services/configuration/common/configuration.js";import{POLICY_SETTING_TAG as $}from"../common/preferences.js";const u=c.$;let w=new Set,y=[],I=class{constructor(e,t,n,i,r,o,p){this.configurationService=t;this.hoverService=n;this.userDataSyncEnablementService=i;this.languageService=r;this.userDataProfilesService=o;this.commandService=p;this.indicatorsContainerElement=c.append(e,u(".setting-indicators-container")),this.indicatorsContainerElement.style.display="inline",this.profilesEnabled=this.userDataProfilesService.isEnabled(),this.workspaceTrustIndicator=this.createWorkspaceTrustIndicator(),this.scopeOverridesIndicator=this.createScopeOverridesIndicator(),this.syncIgnoredIndicator=this.createSyncIgnoredIndicator(),this.defaultOverrideIndicator=this.createDefaultOverrideIndicator(),this.allIndicators=[this.workspaceTrustIndicator,this.scopeOverridesIndicator,this.syncIgnoredIndicator,this.defaultOverrideIndicator]}indicatorsContainerElement;workspaceTrustIndicator;scopeOverridesIndicator;syncIgnoredIndicator;defaultOverrideIndicator;allIndicators;profilesEnabled;keybindingListeners=new h;focusedIndex=0;defaultHoverOptions={trapFocus:!0,position:{hoverPosition:L.BELOW},appearance:{showPointer:!0,compact:!1}};addHoverDisposables(e,t,n){e.clear();const i=e.add(new H(()=>{const r=n(!1);r&&e.add(r)},this.configurationService.getValue("workbench.hover.delay")));e.add(c.addDisposableListener(t,c.EventType.MOUSE_OVER,()=>{i.isScheduled()||i.schedule()})),e.add(c.addDisposableListener(t,c.EventType.MOUSE_LEAVE,()=>{i.cancel()})),e.add(c.addDisposableListener(t,c.EventType.KEY_DOWN,r=>{const o=new S(r);if(o.equals(v.Space)||o.equals(v.Enter)){const p=n(!0);p&&e.add(p),r.preventDefault()}}))}createWorkspaceTrustIndicator(){const e=new h,t=u("span.setting-indicator.setting-item-workspace-trust"),n=e.add(new m(t));n.text="$(warning) "+s("workspaceUntrustedLabel","Setting value not applied");const i=s("trustLabel","The setting value can only be applied in a trusted workspace."),r=o=>this.hoverService.showHover({...this.defaultHoverOptions,content:i,target:t,actions:[{label:s("manageWorkspaceTrust","Manage Workspace Trust"),commandId:"workbench.trust.manage",run:p=>{this.commandService.executeCommand("workbench.trust.manage")}}]},o);return this.addHoverDisposables(e,t,r),{element:t,label:n,disposables:e}}createScopeOverridesIndicator(){const e=new h,t=u("span.setting-item-overrides"),n=e.add(new m(t));return{element:t,label:n,disposables:e}}createSyncIgnoredIndicator(){const e=new h,t=u("span.setting-indicator.setting-item-ignored"),n=e.add(new m(t));n.text=s("extensionSyncIgnoredLabel","Not synced");const i=s("syncIgnoredTitle","This setting is ignored during sync"),r=o=>this.hoverService.showHover({...this.defaultHoverOptions,content:i,target:t},o);return this.addHoverDisposables(e,t,r),{element:t,label:n,disposables:e}}createDefaultOverrideIndicator(){const e=new h,t=u("span.setting-indicator.setting-item-default-overridden"),n=e.add(new m(t));return n.text=s("defaultOverriddenLabel","Default value changed"),{element:t,label:n,disposables:e}}render(){const e=this.allIndicators.filter(t=>t.element.style.display!=="none");if(this.indicatorsContainerElement.innerText="",this.indicatorsContainerElement.style.display="none",e.length){this.indicatorsContainerElement.style.display="inline",c.append(this.indicatorsContainerElement,u("span",void 0,"("));for(let t=0;t<e.length-1;t++)c.append(this.indicatorsContainerElement,e[t].element),c.append(this.indicatorsContainerElement,u("span.comma",void 0," \u2022 "));c.append(this.indicatorsContainerElement,e[e.length-1].element),c.append(this.indicatorsContainerElement,u("span",void 0,")")),this.resetIndicatorNavigationKeyBindings(e)}}resetIndicatorNavigationKeyBindings(e){if(this.keybindingListeners.clear(),this.indicatorsContainerElement.role=e.length>=1?"toolbar":"button",!e.length)return;const t=e[0].focusElement??e[0].element;t.tabIndex=0,this.keybindingListeners.add(c.addDisposableListener(this.indicatorsContainerElement,"keydown",n=>{const i=new S(n);let r=!0;if(i.equals(v.Home))this.focusIndicatorAt(e,0);else if(i.equals(v.End))this.focusIndicatorAt(e,e.length-1);else if(i.equals(v.RightArrow)){const o=(this.focusedIndex+1)%e.length;this.focusIndicatorAt(e,o)}else if(i.equals(v.LeftArrow)){const o=this.focusedIndex?this.focusedIndex-1:e.length-1;this.focusIndicatorAt(e,o)}else r=!1;r&&(n.preventDefault(),n.stopPropagation())}))}focusIndicatorAt(e,t){if(t===this.focusedIndex)return;const n=e[t],i=n.focusElement??n.element;i.tabIndex=0,i.focus();const r=e[this.focusedIndex],o=r.focusElement??r.element;o.tabIndex=-1,this.focusedIndex=t}updateWorkspaceTrust(e){this.workspaceTrustIndicator.element.style.display=e.isUntrusted?"inline":"none",this.render()}updateSyncIgnored(e,t){this.syncIgnoredIndicator.element.style.display=this.userDataSyncEnablementService.isEnabled()&&t.includes(e.setting.key)?"inline":"none",this.render(),y!==t&&(y=t,w=new Set(y))}getInlineScopeDisplayText(e){const[t,n]=e.split(":"),i=t==="user"?s("user","User"):t==="workspace"?s("workspace","Workspace"):s("remote","Remote");return n?`${this.languageService.getLanguageName(n)} > ${i}`:i}dispose(){this.keybindingListeners.dispose();for(const e of this.allIndicators)e.disposables.dispose()}updateScopeOverrides(e,t,n){if(this.scopeOverridesIndicator.element.innerText="",this.scopeOverridesIndicator.element.style.display="none",this.scopeOverridesIndicator.focusElement=this.scopeOverridesIndicator.element,e.hasPolicyValue){this.scopeOverridesIndicator.element.style.display="inline",this.scopeOverridesIndicator.element.classList.add("setting-indicator"),this.scopeOverridesIndicator.label.text="$(warning) "+s("policyLabelText","Setting value not applied");const i=s("policyDescription","This setting is managed by your organization and its applied value cannot be changed."),r=o=>this.hoverService.showHover({...this.defaultHoverOptions,content:i,actions:[{label:s("policyFilterLink","View policy settings"),commandId:"_settings.action.viewPolicySettings",run:p=>{n.fire(`@${$}`)}}],target:this.scopeOverridesIndicator.element},o);this.addHoverDisposables(this.scopeOverridesIndicator.disposables,this.scopeOverridesIndicator.element,r)}else if(this.profilesEnabled&&e.settingsTarget===O.USER_LOCAL&&this.configurationService.isSettingAppliedForAllProfiles(e.setting.key)){this.scopeOverridesIndicator.element.style.display="inline",this.scopeOverridesIndicator.element.classList.add("setting-indicator"),this.scopeOverridesIndicator.label.text=s("applicationSetting","Applies to all profiles");const i=s("applicationSettingDescription","The setting is not specific to the current profile, and will retain its value when switching profiles."),r=o=>this.hoverService.showHover({...this.defaultHoverOptions,content:i,target:this.scopeOverridesIndicator.element},o);this.addHoverDisposables(this.scopeOverridesIndicator.disposables,this.scopeOverridesIndicator.element,r)}else if(e.overriddenScopeList.length||e.overriddenDefaultsLanguageList.length)if(e.overriddenScopeList.length===1&&!e.overriddenDefaultsLanguageList.length){this.scopeOverridesIndicator.element.style.display="inline",this.scopeOverridesIndicator.element.classList.remove("setting-indicator"),this.scopeOverridesIndicator.disposables.clear();const i=e.isConfigured?s("alsoConfiguredIn","Also modified in"):s("configuredIn","Modified in");this.scopeOverridesIndicator.label.text=`${i} `;const r=e.overriddenScopeList[0],o=c.append(this.scopeOverridesIndicator.element,u("a.modified-scope",void 0,this.getInlineScopeDisplayText(r)));o.tabIndex=-1,this.scopeOverridesIndicator.focusElement=o;const p=d=>{const[l,g]=r.split(":");t.fire({settingKey:e.setting.key,scope:l,language:g}),d.preventDefault(),d.stopPropagation()};this.scopeOverridesIndicator.disposables.add(c.addDisposableListener(o,c.EventType.CLICK,d=>{p(d)})),this.scopeOverridesIndicator.disposables.add(c.addDisposableListener(o,c.EventType.KEY_DOWN,d=>{const l=new S(d);(l.equals(v.Space)||l.equals(v.Enter))&&p(d)}))}else{this.scopeOverridesIndicator.element.style.display="inline",this.scopeOverridesIndicator.element.classList.add("setting-indicator");const i=e.isConfigured?s("alsoConfiguredElsewhere","Also modified elsewhere"):s("configuredElsewhere","Modified elsewhere");this.scopeOverridesIndicator.label.text=i;let r="";if(e.overriddenScopeList.length){r=e.isConfigured?s("alsoModifiedInScopes","The setting has also been modified in the following scopes:"):s("modifiedInScopes","The setting has been modified in the following scopes:");for(const l of e.overriddenScopeList){const g=this.getInlineScopeDisplayText(l);r+=`
- [${g}](${encodeURIComponent(l)} "${N(l,this.languageService)}")`}}if(e.overriddenDefaultsLanguageList.length){r&&(r+=`

`);const d=s("hasDefaultOverridesForLanguages","The following languages have default overrides:");r+=d;for(const l of e.overriddenDefaultsLanguageList){const g=this.languageService.getLanguageName(l);r+=`
- [${g}](${encodeURIComponent(`default:${l}`)} "${g}")`}}const o={value:r,isTrusted:!1,supportHtml:!1},p=d=>this.hoverService.showHover({...this.defaultHoverOptions,content:o,linkHandler:l=>{const[g,T]=decodeURIComponent(l).split(":");t.fire({settingKey:e.setting.key,scope:g,language:T})},target:this.scopeOverridesIndicator.element},d);this.addHoverDisposables(this.scopeOverridesIndicator.disposables,this.scopeOverridesIndicator.element,p)}this.render()}updateDefaultOverrideIndicator(e){this.defaultOverrideIndicator.element.style.display="none";let t=E(e);if(t!==void 0){this.defaultOverrideIndicator.element.style.display="inline",this.defaultOverrideIndicator.disposables.clear(),Array.isArray(t)&&t.length===1&&(t=t[0]);let n;Array.isArray(t)?(t=t.map(r=>`\`${r}\``),n=s("multipledefaultOverriddenDetails","A default values has been set by {0}",t.slice(0,-1).join(", ")+" & "+t.slice(-1))):n=s("defaultOverriddenDetails","Default setting value overridden by `{0}`",t);const i=r=>this.hoverService.showHover({content:new x().appendMarkdown(n),target:this.defaultOverrideIndicator.element,position:{hoverPosition:L.BELOW},appearance:{showPointer:!0,compact:!1}},r);this.addHoverDisposables(this.defaultOverrideIndicator.disposables,this.defaultOverrideIndicator.element,i)}this.render()}};I=b([f(1,W),f(2,M),f(3,P),f(4,C),f(5,U),f(6,A)],I);function E(a){let e;const t=a.defaultValueSource;if(t)if(t instanceof Map){e=[];for(const[,n]of t){const i=typeof n!="string"?n.displayName??n.id:n;e.includes(i)||e.push(i)}}else typeof t=="string"?e=t:e=t.displayName??t.id;return e}function N(a,e){const[t,n]=a.split(":"),i=t==="user"?s("user","User"):t==="workspace"?s("workspace","Workspace"):s("remote","Remote");return n?s("modifiedInScopeForLanguage","The {0} scope for {1}",i,e.getLanguageName(n)):i}function F(a,e){const[t,n]=a.split(":"),i=t==="user"?s("user","User"):t==="workspace"?s("workspace","Workspace"):s("remote","Remote");return n?s("modifiedInScopeForLanguageMidSentence","the {0} scope for {1}",i.toLowerCase(),e.getLanguageName(n)):i}function ne(a,e,t,n){const i=[];if(a.isUntrusted&&i.push(s("workspaceUntrustedAriaLabel","Workspace untrusted; setting value not applied")),a.hasPolicyValue)i.push(s("policyDescriptionAccessible","Managed by organization policy; setting value not applied"));else if(t.isEnabled()&&a.settingsTarget===O.USER_LOCAL&&e.isSettingAppliedForAllProfiles(a.setting.key))i.push(s("applicationSettingDescriptionAccessible","Setting value retained when switching profiles"));else{const d=a.isConfigured?s("alsoConfiguredIn","Also modified in"):s("configuredIn","Modified in"),l=a.overriddenScopeList.map(g=>F(g,n)).join(", ");a.overriddenScopeList.length&&i.push(`${d} ${l}`)}w.has(a.setting.key)&&i.push(s("syncIgnoredAriaLabel","Setting ignored during sync"));let r=E(a);if(r!==void 0){Array.isArray(r)&&r.length===1&&(r=r[0]);let d;Array.isArray(r)?d=s("multipleDefaultOverriddenDetailsAriaLabel","{0} override the default value",r.slice(0,-1).join(", ")+" & "+r.slice(-1)):d=s("defaultOverriddenDetailsAriaLabel","{0} overrides the default value",r),i.push(d)}const o=a.overriddenDefaultsLanguageList.map(d=>n.getLanguageName(d)).join(", ");if(a.overriddenDefaultsLanguageList.length){const d=s("defaultOverriddenLanguagesList","Language-specific default values exist for {0}",o);i.push(d)}return i.join(". ")}export{I as SettingsTreeIndicatorsLabel,ne as getIndicatorsLabelAriaLabel};
