{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/preferences/browser/preferencesWidgets.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from '../../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../../base/browser/keyboardEvent.js';\nimport { ActionBar, ActionsOrientation } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { BaseActionViewItem, IActionViewItemOptions } from '../../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { HistoryInputBox, IHistoryInputOptions } from '../../../../base/browser/ui/inputbox/inputBox.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { Action, IAction } from '../../../../base/common/actions.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { KeyCode } from '../../../../base/common/keyCodes.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { isEqual } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ICodeEditor, IEditorMouseEvent, MouseTargetType } from '../../../../editor/browser/editorBrowser.js';\nimport { IModelDeltaDecoration, TrackedRangeStickiness } from '../../../../editor/common/model.js';\nimport { localize } from '../../../../nls.js';\nimport { ContextScopedHistoryInputBox } from '../../../../platform/history/browser/contextScopedHistoryWidget.js';\nimport { showHistoryKeybindingHint } from '../../../../platform/history/browser/historyWidgetKeybindingHint.js';\nimport { ConfigurationTarget } from '../../../../platform/configuration/common/configuration.js';\nimport { IContextKey, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService, IContextViewService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { asCssVariable, badgeBackground, badgeForeground, contrastBorder } from '../../../../platform/theme/common/colorRegistry.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { isWorkspaceFolder, IWorkspaceContextService, IWorkspaceFolder, WorkbenchState } from '../../../../platform/workspace/common/workspace.js';\nimport { settingsEditIcon, settingsScopeDropDownIcon } from './preferencesIcons.js';\nimport { IWorkbenchEnvironmentService } from '../../../services/environment/common/environmentService.js';\nimport { ILanguageService } from '../../../../editor/common/languages/language.js';\nimport { getDefaultHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegateFactory.js';\nimport type { IManagedHover } from '../../../../base/browser/ui/hover/hover.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\n\nexport class FolderSettingsActionViewItem extends BaseActionViewItem {\n\n\tprivate _folder: IWorkspaceFolder | null;\n\tprivate _folderSettingCounts = new Map<string, number>();\n\n\tprivate container!: HTMLElement;\n\tprivate anchorElement!: HTMLElement;\n\tprivate anchorElementHover!: IManagedHover;\n\tprivate labelElement!: HTMLElement;\n\tprivate detailsElement!: HTMLElement;\n\tprivate dropDownElement!: HTMLElement;\n\n\tconstructor(\n\t\taction: IAction,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t) {\n\t\tsuper(null, action);\n\t\tconst workspace = this.contextService.getWorkspace();\n\t\tthis._folder = workspace.folders.length === 1 ? workspace.folders[0] : null;\n\t\tthis._register(this.contextService.onDidChangeWorkspaceFolders(() => this.onWorkspaceFoldersChanged()));\n\t}\n\n\tget folder(): IWorkspaceFolder | null {\n\t\treturn this._folder;\n\t}\n\n\tset folder(folder: IWorkspaceFolder | null) {\n\t\tthis._folder = folder;\n\t\tthis.update();\n\t}\n\n\tsetCount(settingsTarget: URI, count: number): void {\n\t\tconst workspaceFolder = this.contextService.getWorkspaceFolder(settingsTarget);\n\t\tif (!workspaceFolder) {\n\t\t\tthrow new Error('unknown folder');\n\t\t}\n\t\tconst folder = workspaceFolder.uri;\n\t\tthis._folderSettingCounts.set(folder.toString(), count);\n\t\tthis.update();\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tthis.element = container;\n\n\t\tthis.container = container;\n\t\tthis.labelElement = DOM.$('.action-title');\n\t\tthis.detailsElement = DOM.$('.action-details');\n\t\tthis.dropDownElement = DOM.$('.dropdown-icon.hide' + ThemeIcon.asCSSSelector(settingsScopeDropDownIcon));\n\t\tthis.anchorElement = DOM.$('a.action-label.folder-settings', {\n\t\t\trole: 'button',\n\t\t\t'aria-haspopup': 'true',\n\t\t\t'tabindex': '0'\n\t\t}, this.labelElement, this.detailsElement, this.dropDownElement);\n\t\tthis.anchorElementHover = this._register(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), this.anchorElement, ''));\n\t\tthis._register(DOM.addDisposableListener(this.anchorElement, DOM.EventType.MOUSE_DOWN, e => DOM.EventHelper.stop(e)));\n\t\tthis._register(DOM.addDisposableListener(this.anchorElement, DOM.EventType.CLICK, e => this.onClick(e)));\n\t\tthis._register(DOM.addDisposableListener(this.container, DOM.EventType.KEY_UP, e => this.onKeyUp(e)));\n\n\t\tDOM.append(this.container, this.anchorElement);\n\n\t\tthis.update();\n\t}\n\n\tprivate onKeyUp(event: KeyboardEvent): void {\n\t\tconst keyboardEvent = new StandardKeyboardEvent(event);\n\t\tswitch (keyboardEvent.keyCode) {\n\t\t\tcase KeyCode.Enter:\n\t\t\tcase KeyCode.Space:\n\t\t\t\tthis.onClick(event);\n\t\t\t\treturn;\n\t\t}\n\t}\n\n\toverride onClick(event: DOM.EventLike): void {\n\t\tDOM.EventHelper.stop(event, true);\n\t\tif (!this.folder || this._action.checked) {\n\t\t\tthis.showMenu();\n\t\t} else {\n\t\t\tthis._action.run(this._folder);\n\t\t}\n\t}\n\n\tprotected override updateEnabled(): void {\n\t\tthis.update();\n\t}\n\n\tprotected override updateChecked(): void {\n\t\tthis.update();\n\t}\n\n\tprivate onWorkspaceFoldersChanged(): void {\n\t\tconst oldFolder = this._folder;\n\t\tconst workspace = this.contextService.getWorkspace();\n\t\tif (oldFolder) {\n\t\t\tthis._folder = workspace.folders.filter(folder => isEqual(folder.uri, oldFolder.uri))[0] || workspace.folders[0];\n\t\t}\n\t\tthis._folder = this._folder ? this._folder : workspace.folders.length === 1 ? workspace.folders[0] : null;\n\n\t\tthis.update();\n\n\t\tif (this._action.checked) {\n\t\t\tthis._action.run(this._folder);\n\t\t}\n\t}\n\n\tprivate update(): void {\n\t\tlet total = 0;\n\t\tthis._folderSettingCounts.forEach(n => total += n);\n\n\t\tconst workspace = this.contextService.getWorkspace();\n\t\tif (this._folder) {\n\t\t\tthis.labelElement.textContent = this._folder.name;\n\t\t\tthis.anchorElementHover.update(this._folder.name);\n\t\t\tconst detailsText = this.labelWithCount(this._action.label, total);\n\t\t\tthis.detailsElement.textContent = detailsText;\n\t\t\tthis.dropDownElement.classList.toggle('hide', workspace.folders.length === 1 || !this._action.checked);\n\t\t} else {\n\t\t\tconst labelText = this.labelWithCount(this._action.label, total);\n\t\t\tthis.labelElement.textContent = labelText;\n\t\t\tthis.detailsElement.textContent = '';\n\t\t\tthis.anchorElementHover.update(this._action.label);\n\t\t\tthis.dropDownElement.classList.remove('hide');\n\t\t}\n\n\t\tthis.anchorElement.classList.toggle('checked', this._action.checked);\n\t\tthis.container.classList.toggle('disabled', !this._action.enabled);\n\t}\n\n\tprivate showMenu(): void {\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => this.container,\n\t\t\tgetActions: () => this.getDropdownMenuActions(),\n\t\t\tgetActionViewItem: () => undefined,\n\t\t\tonHide: () => {\n\t\t\t\tthis.anchorElement.blur();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate getDropdownMenuActions(): IAction[] {\n\t\tconst actions: IAction[] = [];\n\t\tconst workspaceFolders = this.contextService.getWorkspace().folders;\n\t\tif (this.contextService.getWorkbenchState() === WorkbenchState.WORKSPACE && workspaceFolders.length > 0) {\n\t\t\tactions.push(...workspaceFolders.map((folder, index) => {\n\t\t\t\tconst folderCount = this._folderSettingCounts.get(folder.uri.toString());\n\t\t\t\treturn {\n\t\t\t\t\tid: 'folderSettingsTarget' + index,\n\t\t\t\t\tlabel: this.labelWithCount(folder.name, folderCount),\n\t\t\t\t\ttooltip: this.labelWithCount(folder.name, folderCount),\n\t\t\t\t\tchecked: !!this.folder && isEqual(this.folder.uri, folder.uri),\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tclass: undefined,\n\t\t\t\t\trun: () => this._action.run(folder)\n\t\t\t\t};\n\t\t\t}));\n\t\t}\n\t\treturn actions;\n\t}\n\n\tprivate labelWithCount(label: string, count: number | undefined): string {\n\t\t// Append the count if it's >0 and not undefined\n\t\tif (count) {\n\t\t\tlabel += ` (${count})`;\n\t\t}\n\n\t\treturn label;\n\t}\n}\n\nexport type SettingsTarget = ConfigurationTarget.APPLICATION | ConfigurationTarget.USER_LOCAL | ConfigurationTarget.USER_REMOTE | ConfigurationTarget.WORKSPACE | URI;\n\nexport interface ISettingsTargetsWidgetOptions {\n\tenableRemoteSettings?: boolean;\n}\n\nexport class SettingsTargetsWidget extends Widget {\n\n\tprivate settingsSwitcherBar!: ActionBar;\n\tprivate userLocalSettings!: Action;\n\tprivate userRemoteSettings!: Action;\n\tprivate workspaceSettings!: Action;\n\tprivate folderSettingsAction!: Action;\n\tprivate folderSettings!: FolderSettingsActionViewItem;\n\tprivate options: ISettingsTargetsWidgetOptions;\n\n\tprivate _settingsTarget: SettingsTarget | null = null;\n\n\tprivate readonly _onDidTargetChange = this._register(new Emitter<SettingsTarget>());\n\treadonly onDidTargetChange: Event<SettingsTarget> = this._onDidTargetChange.event;\n\n\tconstructor(\n\t\tparent: HTMLElement,\n\t\toptions: ISettingsTargetsWidgetOptions | undefined,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@ILanguageService private readonly languageService: ILanguageService\n\t) {\n\t\tsuper();\n\t\tthis.options = options ?? {};\n\t\tthis.create(parent);\n\t\tthis._register(this.contextService.onDidChangeWorkbenchState(() => this.onWorkbenchStateChanged()));\n\t\tthis._register(this.contextService.onDidChangeWorkspaceFolders(() => this.update()));\n\t}\n\n\tprivate resetLabels() {\n\t\tconst remoteAuthority = this.environmentService.remoteAuthority;\n\t\tconst hostLabel = remoteAuthority && this.labelService.getHostLabel(Schemas.vscodeRemote, remoteAuthority);\n\t\tthis.userLocalSettings.label = localize('userSettings', \"User\");\n\t\tthis.userRemoteSettings.label = localize('userSettingsRemote', \"Remote\") + (hostLabel ? ` [${hostLabel}]` : '');\n\t\tthis.workspaceSettings.label = localize('workspaceSettings', \"Workspace\");\n\t\tthis.folderSettingsAction.label = localize('folderSettings', \"Folder\");\n\t}\n\n\tprivate create(parent: HTMLElement): void {\n\t\tconst settingsTabsWidget = DOM.append(parent, DOM.$('.settings-tabs-widget'));\n\t\tthis.settingsSwitcherBar = this._register(new ActionBar(settingsTabsWidget, {\n\t\t\torientation: ActionsOrientation.HORIZONTAL,\n\t\t\tfocusOnlyEnabledItems: true,\n\t\t\tariaLabel: localize('settingsSwitcherBarAriaLabel', \"Settings Switcher\"),\n\t\t\tariaRole: 'tablist',\n\t\t\tactionViewItemProvider: (action: IAction, options: IActionViewItemOptions) => action.id === 'folderSettings' ? this.folderSettings : undefined\n\t\t}));\n\n\t\tthis.userLocalSettings = new Action('userSettings', '', '.settings-tab', true, () => this.updateTarget(ConfigurationTarget.USER_LOCAL));\n\t\tthis.userLocalSettings.tooltip = localize('userSettings', \"User\");\n\n\t\tthis.userRemoteSettings = new Action('userSettingsRemote', '', '.settings-tab', true, () => this.updateTarget(ConfigurationTarget.USER_REMOTE));\n\t\tconst remoteAuthority = this.environmentService.remoteAuthority;\n\t\tconst hostLabel = remoteAuthority && this.labelService.getHostLabel(Schemas.vscodeRemote, remoteAuthority);\n\t\tthis.userRemoteSettings.tooltip = localize('userSettingsRemote', \"Remote\") + (hostLabel ? ` [${hostLabel}]` : '');\n\n\t\tthis.workspaceSettings = new Action('workspaceSettings', '', '.settings-tab', false, () => this.updateTarget(ConfigurationTarget.WORKSPACE));\n\n\t\tthis.folderSettingsAction = new Action('folderSettings', '', '.settings-tab', false, async folder => {\n\t\t\tthis.updateTarget(isWorkspaceFolder(folder) ? folder.uri : ConfigurationTarget.USER_LOCAL);\n\t\t});\n\t\tthis.folderSettings = this.instantiationService.createInstance(FolderSettingsActionViewItem, this.folderSettingsAction);\n\n\t\tthis.resetLabels();\n\t\tthis.update();\n\n\t\tthis.settingsSwitcherBar.push([this.userLocalSettings, this.userRemoteSettings, this.workspaceSettings, this.folderSettingsAction]);\n\t}\n\n\tget settingsTarget(): SettingsTarget | null {\n\t\treturn this._settingsTarget;\n\t}\n\n\tset settingsTarget(settingsTarget: SettingsTarget | null) {\n\t\tthis._settingsTarget = settingsTarget;\n\t\tthis.userLocalSettings.checked = ConfigurationTarget.USER_LOCAL === this.settingsTarget;\n\t\tthis.userRemoteSettings.checked = ConfigurationTarget.USER_REMOTE === this.settingsTarget;\n\t\tthis.workspaceSettings.checked = ConfigurationTarget.WORKSPACE === this.settingsTarget;\n\t\tif (this.settingsTarget instanceof URI) {\n\t\t\tthis.folderSettings.action.checked = true;\n\t\t\tthis.folderSettings.folder = this.contextService.getWorkspaceFolder(this.settingsTarget as URI);\n\t\t} else {\n\t\t\tthis.folderSettings.action.checked = false;\n\t\t}\n\t}\n\n\tsetResultCount(settingsTarget: SettingsTarget, count: number): void {\n\t\tif (settingsTarget === ConfigurationTarget.WORKSPACE) {\n\t\t\tlet label = localize('workspaceSettings', \"Workspace\");\n\t\t\tif (count) {\n\t\t\t\tlabel += ` (${count})`;\n\t\t\t}\n\n\t\t\tthis.workspaceSettings.label = label;\n\t\t} else if (settingsTarget === ConfigurationTarget.USER_LOCAL) {\n\t\t\tlet label = localize('userSettings', \"User\");\n\t\t\tif (count) {\n\t\t\t\tlabel += ` (${count})`;\n\t\t\t}\n\n\t\t\tthis.userLocalSettings.label = label;\n\t\t} else if (settingsTarget instanceof URI) {\n\t\t\tthis.folderSettings.setCount(settingsTarget, count);\n\t\t}\n\t}\n\n\tupdateLanguageFilterIndicators(filter: string | undefined) {\n\t\tthis.resetLabels();\n\t\tif (filter) {\n\t\t\tconst languageToUse = this.languageService.getLanguageName(filter);\n\t\t\tif (languageToUse) {\n\t\t\t\tconst languageSuffix = ` [${languageToUse}]`;\n\t\t\t\tthis.userLocalSettings.label += languageSuffix;\n\t\t\t\tthis.userRemoteSettings.label += languageSuffix;\n\t\t\t\tthis.workspaceSettings.label += languageSuffix;\n\t\t\t\tthis.folderSettingsAction.label += languageSuffix;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onWorkbenchStateChanged(): void {\n\t\tthis.folderSettings.folder = null;\n\t\tthis.update();\n\t\tif (this.settingsTarget === ConfigurationTarget.WORKSPACE && this.contextService.getWorkbenchState() === WorkbenchState.WORKSPACE) {\n\t\t\tthis.updateTarget(ConfigurationTarget.USER_LOCAL);\n\t\t}\n\t}\n\n\tupdateTarget(settingsTarget: SettingsTarget): Promise<void> {\n\t\tconst isSameTarget = this.settingsTarget === settingsTarget ||\n\t\t\tsettingsTarget instanceof URI &&\n\t\t\tthis.settingsTarget instanceof URI &&\n\t\t\tisEqual(this.settingsTarget, settingsTarget);\n\n\t\tif (!isSameTarget) {\n\t\t\tthis.settingsTarget = settingsTarget;\n\t\t\tthis._onDidTargetChange.fire(this.settingsTarget);\n\t\t}\n\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tprivate async update(): Promise<void> {\n\t\tthis.settingsSwitcherBar.domNode.classList.toggle('empty-workbench', this.contextService.getWorkbenchState() === WorkbenchState.EMPTY);\n\t\tthis.userRemoteSettings.enabled = !!(this.options.enableRemoteSettings && this.environmentService.remoteAuthority);\n\t\tthis.workspaceSettings.enabled = this.contextService.getWorkbenchState() !== WorkbenchState.EMPTY;\n\t\tthis.folderSettings.action.enabled = this.contextService.getWorkbenchState() === WorkbenchState.WORKSPACE && this.contextService.getWorkspace().folders.length > 0;\n\n\t\tthis.workspaceSettings.tooltip = localize('workspaceSettings', \"Workspace\");\n\t}\n}\n\nexport interface SearchOptions extends IHistoryInputOptions {\n\tfocusKey?: IContextKey<boolean>;\n\tshowResultCount?: boolean;\n\tariaLive?: string;\n\tariaLabelledBy?: string;\n}\n\nexport class SearchWidget extends Widget {\n\n\tdomNode!: HTMLElement;\n\n\tprivate countElement!: HTMLElement;\n\tprivate searchContainer!: HTMLElement;\n\tinputBox!: HistoryInputBox;\n\tprivate controlsDiv!: HTMLElement;\n\n\tprivate readonly _onDidChange: Emitter<string> = this._register(new Emitter<string>());\n\treadonly onDidChange: Event<string> = this._onDidChange.event;\n\n\tprivate readonly _onFocus: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onFocus: Event<void> = this._onFocus.event;\n\n\tconstructor(parent: HTMLElement, protected options: SearchOptions,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t\t@IInstantiationService protected instantiationService: IInstantiationService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IKeybindingService protected readonly keybindingService: IKeybindingService\n\t) {\n\t\tsuper();\n\t\tthis.create(parent);\n\t}\n\n\tprivate create(parent: HTMLElement) {\n\t\tthis.domNode = DOM.append(parent, DOM.$('div.settings-header-widget'));\n\t\tthis.createSearchContainer(DOM.append(this.domNode, DOM.$('div.settings-search-container')));\n\t\tthis.controlsDiv = DOM.append(this.domNode, DOM.$('div.settings-search-controls'));\n\n\t\tif (this.options.showResultCount) {\n\t\t\tthis.countElement = DOM.append(this.controlsDiv, DOM.$('.settings-count-widget'));\n\n\t\t\tthis.countElement.style.backgroundColor = asCssVariable(badgeBackground);\n\t\t\tthis.countElement.style.color = asCssVariable(badgeForeground);\n\t\t\tthis.countElement.style.border = `1px solid ${asCssVariable(contrastBorder)}`;\n\t\t}\n\n\t\tthis.inputBox.inputElement.setAttribute('aria-live', this.options.ariaLive || 'off');\n\t\tif (this.options.ariaLabelledBy) {\n\t\t\tthis.inputBox.inputElement.setAttribute('aria-labelledBy', this.options.ariaLabelledBy);\n\t\t}\n\t\tconst focusTracker = this._register(DOM.trackFocus(this.inputBox.inputElement));\n\t\tthis._register(focusTracker.onDidFocus(() => this._onFocus.fire()));\n\n\t\tconst focusKey = this.options.focusKey;\n\t\tif (focusKey) {\n\t\t\tthis._register(focusTracker.onDidFocus(() => focusKey.set(true)));\n\t\t\tthis._register(focusTracker.onDidBlur(() => focusKey.set(false)));\n\t\t}\n\t}\n\n\tprivate createSearchContainer(searchContainer: HTMLElement) {\n\t\tthis.searchContainer = searchContainer;\n\t\tconst searchInput = DOM.append(this.searchContainer, DOM.$('div.settings-search-input'));\n\t\tthis.inputBox = this._register(this.createInputBox(searchInput));\n\t\tthis._register(this.inputBox.onDidChange(value => this._onDidChange.fire(value)));\n\t}\n\n\tprotected createInputBox(parent: HTMLElement): HistoryInputBox {\n\t\tconst showHistoryHint = () => showHistoryKeybindingHint(this.keybindingService);\n\t\treturn new ContextScopedHistoryInputBox(parent, this.contextViewService, { ...this.options, showHistoryHint }, this.contextKeyService);\n\t}\n\n\tshowMessage(message: string): void {\n\t\t// Avoid setting the aria-label unnecessarily, the screenreader will read the count every time it's set, since it's aria-live:assertive. #50968\n\t\tif (this.countElement && message !== this.countElement.textContent) {\n\t\t\tthis.countElement.textContent = message;\n\t\t\tthis.inputBox.inputElement.setAttribute('aria-label', message);\n\t\t\tthis.inputBox.inputElement.style.paddingRight = this.getControlsWidth() + 'px';\n\t\t}\n\t}\n\n\tlayout(dimension: DOM.Dimension) {\n\t\tif (dimension.width < 400) {\n\t\t\tthis.countElement?.classList.add('hide');\n\n\t\t\tthis.inputBox.inputElement.style.paddingRight = '0px';\n\t\t} else {\n\t\t\tthis.countElement?.classList.remove('hide');\n\n\t\t\tthis.inputBox.inputElement.style.paddingRight = this.getControlsWidth() + 'px';\n\t\t}\n\t}\n\n\tprivate getControlsWidth(): number {\n\t\tconst countWidth = this.countElement ? DOM.getTotalWidth(this.countElement) : 0;\n\t\treturn countWidth + 20;\n\t}\n\n\tfocus() {\n\t\tthis.inputBox.focus();\n\t\tif (this.getValue()) {\n\t\t\tthis.inputBox.select();\n\t\t}\n\t}\n\n\thasFocus(): boolean {\n\t\treturn this.inputBox.hasFocus();\n\t}\n\n\tclear() {\n\t\tthis.inputBox.value = '';\n\t}\n\n\tgetValue(): string {\n\t\treturn this.inputBox.value;\n\t}\n\n\tsetValue(value: string): string {\n\t\treturn this.inputBox.value = value;\n\t}\n\n\toverride dispose(): void {\n\t\tthis.options.focusKey?.set(false);\n\t\tsuper.dispose();\n\t}\n}\n\nexport class EditPreferenceWidget<T> extends Disposable {\n\n\tprivate _line: number = -1;\n\tprivate _preferences: T[] = [];\n\n\tprivate readonly _editPreferenceDecoration = this.editor.createDecorationsCollection();\n\n\tprivate readonly _onClick = this._register(new Emitter<IEditorMouseEvent>());\n\treadonly onClick: Event<IEditorMouseEvent> = this._onClick.event;\n\n\tconstructor(private editor: ICodeEditor) {\n\t\tsuper();\n\t\tthis._register(this.editor.onMouseDown((e: IEditorMouseEvent) => {\n\t\t\tif (e.target.type !== MouseTargetType.GUTTER_GLYPH_MARGIN || e.target.detail.isAfterLines || !this.isVisible()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._onClick.fire(e);\n\t\t}));\n\t}\n\n\tget preferences(): T[] {\n\t\treturn this._preferences;\n\t}\n\n\tgetLine(): number {\n\t\treturn this._line;\n\t}\n\n\tshow(line: number, hoverMessage: string, preferences: T[]): void {\n\t\tthis._preferences = preferences;\n\t\tconst newDecoration: IModelDeltaDecoration[] = [];\n\t\tthis._line = line;\n\t\tnewDecoration.push({\n\t\t\toptions: {\n\t\t\t\tdescription: 'edit-preference-widget-decoration',\n\t\t\t\tglyphMarginClassName: ThemeIcon.asClassName(settingsEditIcon),\n\t\t\t\tglyphMarginHoverMessage: new MarkdownString().appendText(hoverMessage),\n\t\t\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\t\t},\n\t\t\trange: {\n\t\t\t\tstartLineNumber: line,\n\t\t\t\tstartColumn: 1,\n\t\t\t\tendLineNumber: line,\n\t\t\t\tendColumn: 1\n\t\t\t}\n\t\t});\n\t\tthis._editPreferenceDecoration.set(newDecoration);\n\t}\n\n\thide(): void {\n\t\tthis._editPreferenceDecoration.clear();\n\t}\n\n\tisVisible(): boolean {\n\t\treturn this._editPreferenceDecoration.length > 0;\n\t}\n\n\toverride dispose(): void {\n\t\tthis.hide();\n\t\tsuper.dispose();\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,YAAY,SAAS;AACrB,SAAS,6BAA6B;AACtC,SAAS,WAAW,0BAA0B;AAC9C,SAAS,oBAAoB,8BAA8B;AAC3D,SAAS,iBAAiB,4BAA4B;AACtD,SAAS,cAAc;AACvB,SAAS,QAAQ,eAAe;AAChC,SAAS,SAAS,aAAa;AAC/B,SAAS,sBAAsB;AAC/B,SAAS,eAAe;AACxB,SAAS,kBAAkB;AAC3B,SAAS,eAAe;AACxB,SAAS,eAAe;AACxB,SAAS,WAAW;AACpB,SAAS,aAAa,mBAAmB,uBAAuB;AAChE,SAAS,uBAAuB,8BAA8B;AAC9D,SAAS,gBAAgB;AACzB,SAAS,oCAAoC;AAC7C,SAAS,iCAAiC;AAC1C,SAAS,2BAA2B;AACpC,SAAS,aAAa,0BAA0B;AAChD,SAAS,qBAAqB,2BAA2B;AACzD,SAAS,6BAA6B;AACtC,SAAS,0BAA0B;AACnC,SAAS,qBAAqB;AAC9B,SAAS,eAAe,iBAAiB,iBAAiB,sBAAsB;AAChF,SAAS,iBAAiB;AAC1B,SAAS,mBAAmB,0BAA0B,kBAAkB,sBAAsB;AAC9F,SAAS,kBAAkB,iCAAiC;AAC5D,SAAS,oCAAoC;AAC7C,SAAS,wBAAwB;AACjC,SAAS,+BAA+B;AAExC,SAAS,qBAAqB;AAEvB,IAAM,+BAAN,cAA2C,mBAAmB;AAAA,EAYpE,YACC,QAC2C,gBACL,oBACN,cAC/B;AACD,UAAM,MAAM,MAAM;AAJyB;AACL;AACN;AAGhC,UAAM,YAAY,KAAK,eAAe,aAAa;AACnD,SAAK,UAAU,UAAU,QAAQ,WAAW,IAAI,UAAU,QAAQ,CAAC,IAAI;AACvE,SAAK,UAAU,KAAK,eAAe,4BAA4B,MAAM,KAAK,0BAA0B,CAAC,CAAC;AAAA,EACvG;AAAA,EA9DD,OAwCqE;AAAA;AAAA;AAAA,EAE5D;AAAA,EACA,uBAAuB,oBAAI,IAAoB;AAAA,EAE/C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAcR,IAAI,SAAkC;AACrC,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAI,OAAO,QAAiC;AAC3C,SAAK,UAAU;AACf,SAAK,OAAO;AAAA,EACb;AAAA,EAEA,SAAS,gBAAqB,OAAqB;AAClD,UAAM,kBAAkB,KAAK,eAAe,mBAAmB,cAAc;AAC7E,QAAI,CAAC,iBAAiB;AACrB,YAAM,IAAI,MAAM,gBAAgB;AAAA,IACjC;AACA,UAAM,SAAS,gBAAgB;AAC/B,SAAK,qBAAqB,IAAI,OAAO,SAAS,GAAG,KAAK;AACtD,SAAK,OAAO;AAAA,EACb;AAAA,EAES,OAAO,WAA8B;AAC7C,SAAK,UAAU;AAEf,SAAK,YAAY;AACjB,SAAK,eAAe,IAAI,EAAE,eAAe;AACzC,SAAK,iBAAiB,IAAI,EAAE,iBAAiB;AAC7C,SAAK,kBAAkB,IAAI,EAAE,wBAAwB,UAAU,cAAc,yBAAyB,CAAC;AACvG,SAAK,gBAAgB,IAAI,EAAE,kCAAkC;AAAA,MAC5D,MAAM;AAAA,MACN,iBAAiB;AAAA,MACjB,YAAY;AAAA,IACb,GAAG,KAAK,cAAc,KAAK,gBAAgB,KAAK,eAAe;AAC/D,SAAK,qBAAqB,KAAK,UAAU,KAAK,aAAa,kBAAkB,wBAAwB,OAAO,GAAG,KAAK,eAAe,EAAE,CAAC;AACtI,SAAK,UAAU,IAAI,sBAAsB,KAAK,eAAe,IAAI,UAAU,YAAY,OAAK,IAAI,YAAY,KAAK,CAAC,CAAC,CAAC;AACpH,SAAK,UAAU,IAAI,sBAAsB,KAAK,eAAe,IAAI,UAAU,OAAO,OAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;AACvG,SAAK,UAAU,IAAI,sBAAsB,KAAK,WAAW,IAAI,UAAU,QAAQ,OAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;AAEpG,QAAI,OAAO,KAAK,WAAW,KAAK,aAAa;AAE7C,SAAK,OAAO;AAAA,EACb;AAAA,EAEQ,QAAQ,OAA4B;AAC3C,UAAM,gBAAgB,IAAI,sBAAsB,KAAK;AACrD,YAAQ,cAAc,SAAS;AAAA,MAC9B,KAAK,QAAQ;AAAA,MACb,KAAK,QAAQ;AACZ,aAAK,QAAQ,KAAK;AAClB;AAAA,IACF;AAAA,EACD;AAAA,EAES,QAAQ,OAA4B;AAC5C,QAAI,YAAY,KAAK,OAAO,IAAI;AAChC,QAAI,CAAC,KAAK,UAAU,KAAK,QAAQ,SAAS;AACzC,WAAK,SAAS;AAAA,IACf,OAAO;AACN,WAAK,QAAQ,IAAI,KAAK,OAAO;AAAA,IAC9B;AAAA,EACD;AAAA,EAEmB,gBAAsB;AACxC,SAAK,OAAO;AAAA,EACb;AAAA,EAEmB,gBAAsB;AACxC,SAAK,OAAO;AAAA,EACb;AAAA,EAEQ,4BAAkC;AACzC,UAAM,YAAY,KAAK;AACvB,UAAM,YAAY,KAAK,eAAe,aAAa;AACnD,QAAI,WAAW;AACd,WAAK,UAAU,UAAU,QAAQ,OAAO,YAAU,QAAQ,OAAO,KAAK,UAAU,GAAG,CAAC,EAAE,CAAC,KAAK,UAAU,QAAQ,CAAC;AAAA,IAChH;AACA,SAAK,UAAU,KAAK,UAAU,KAAK,UAAU,UAAU,QAAQ,WAAW,IAAI,UAAU,QAAQ,CAAC,IAAI;AAErG,SAAK,OAAO;AAEZ,QAAI,KAAK,QAAQ,SAAS;AACzB,WAAK,QAAQ,IAAI,KAAK,OAAO;AAAA,IAC9B;AAAA,EACD;AAAA,EAEQ,SAAe;AACtB,QAAI,QAAQ;AACZ,SAAK,qBAAqB,QAAQ,OAAK,SAAS,CAAC;AAEjD,UAAM,YAAY,KAAK,eAAe,aAAa;AACnD,QAAI,KAAK,SAAS;AACjB,WAAK,aAAa,cAAc,KAAK,QAAQ;AAC7C,WAAK,mBAAmB,OAAO,KAAK,QAAQ,IAAI;AAChD,YAAM,cAAc,KAAK,eAAe,KAAK,QAAQ,OAAO,KAAK;AACjE,WAAK,eAAe,cAAc;AAClC,WAAK,gBAAgB,UAAU,OAAO,QAAQ,UAAU,QAAQ,WAAW,KAAK,CAAC,KAAK,QAAQ,OAAO;AAAA,IACtG,OAAO;AACN,YAAM,YAAY,KAAK,eAAe,KAAK,QAAQ,OAAO,KAAK;AAC/D,WAAK,aAAa,cAAc;AAChC,WAAK,eAAe,cAAc;AAClC,WAAK,mBAAmB,OAAO,KAAK,QAAQ,KAAK;AACjD,WAAK,gBAAgB,UAAU,OAAO,MAAM;AAAA,IAC7C;AAEA,SAAK,cAAc,UAAU,OAAO,WAAW,KAAK,QAAQ,OAAO;AACnE,SAAK,UAAU,UAAU,OAAO,YAAY,CAAC,KAAK,QAAQ,OAAO;AAAA,EAClE;AAAA,EAEQ,WAAiB;AACxB,SAAK,mBAAmB,gBAAgB;AAAA,MACvC,WAAW,6BAAM,KAAK,WAAX;AAAA,MACX,YAAY,6BAAM,KAAK,uBAAuB,GAAlC;AAAA,MACZ,mBAAmB,6BAAM,QAAN;AAAA,MACnB,QAAQ,6BAAM;AACb,aAAK,cAAc,KAAK;AAAA,MACzB,GAFQ;AAAA,IAGT,CAAC;AAAA,EACF;AAAA,EAEQ,yBAAoC;AAC3C,UAAM,UAAqB,CAAC;AAC5B,UAAM,mBAAmB,KAAK,eAAe,aAAa,EAAE;AAC5D,QAAI,KAAK,eAAe,kBAAkB,MAAM,eAAe,aAAa,iBAAiB,SAAS,GAAG;AACxG,cAAQ,KAAK,GAAG,iBAAiB,IAAI,CAAC,QAAQ,UAAU;AACvD,cAAM,cAAc,KAAK,qBAAqB,IAAI,OAAO,IAAI,SAAS,CAAC;AACvE,eAAO;AAAA,UACN,IAAI,yBAAyB;AAAA,UAC7B,OAAO,KAAK,eAAe,OAAO,MAAM,WAAW;AAAA,UACnD,SAAS,KAAK,eAAe,OAAO,MAAM,WAAW;AAAA,UACrD,SAAS,CAAC,CAAC,KAAK,UAAU,QAAQ,KAAK,OAAO,KAAK,OAAO,GAAG;AAAA,UAC7D,SAAS;AAAA,UACT,OAAO;AAAA,UACP,KAAK,6BAAM,KAAK,QAAQ,IAAI,MAAM,GAA7B;AAAA,QACN;AAAA,MACD,CAAC,CAAC;AAAA,IACH;AACA,WAAO;AAAA,EACR;AAAA,EAEQ,eAAe,OAAe,OAAmC;AAExE,QAAI,OAAO;AACV,eAAS,KAAK,KAAK;AAAA,IACpB;AAEA,WAAO;AAAA,EACR;AACD;AAzKa,+BAAN;AAAA,EAcJ;AAAA,EACA;AAAA,EACA;AAAA,GAhBU;AAiLN,IAAM,wBAAN,cAAoC,OAAO;AAAA,EAejD,YACC,QACA,SAC2C,gBACH,sBACO,oBACf,cACG,iBAClC;AACD,UAAM;AANqC;AACH;AACO;AACf;AACG;AAGnC,SAAK,UAAU,WAAW,CAAC;AAC3B,SAAK,OAAO,MAAM;AAClB,SAAK,UAAU,KAAK,eAAe,0BAA0B,MAAM,KAAK,wBAAwB,CAAC,CAAC;AAClG,SAAK,UAAU,KAAK,eAAe,4BAA4B,MAAM,KAAK,OAAO,CAAC,CAAC;AAAA,EACpF;AAAA,EAtPD,OAyNkD;AAAA;AAAA;AAAA,EAEzC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAEA,kBAAyC;AAAA,EAEhC,qBAAqB,KAAK,UAAU,IAAI,QAAwB,CAAC;AAAA,EACzE,oBAA2C,KAAK,mBAAmB;AAAA,EAkBpE,cAAc;AACrB,UAAM,kBAAkB,KAAK,mBAAmB;AAChD,UAAM,YAAY,mBAAmB,KAAK,aAAa,aAAa,QAAQ,cAAc,eAAe;AACzG,SAAK,kBAAkB,QAAQ,SAAS,gBAAgB,MAAM;AAC9D,SAAK,mBAAmB,QAAQ,SAAS,sBAAsB,QAAQ,KAAK,YAAY,KAAK,SAAS,MAAM;AAC5G,SAAK,kBAAkB,QAAQ,SAAS,qBAAqB,WAAW;AACxE,SAAK,qBAAqB,QAAQ,SAAS,kBAAkB,QAAQ;AAAA,EACtE;AAAA,EAEQ,OAAO,QAA2B;AACzC,UAAM,qBAAqB,IAAI,OAAO,QAAQ,IAAI,EAAE,uBAAuB,CAAC;AAC5E,SAAK,sBAAsB,KAAK,UAAU,IAAI,UAAU,oBAAoB;AAAA,MAC3E,aAAa,mBAAmB;AAAA,MAChC,uBAAuB;AAAA,MACvB,WAAW,SAAS,gCAAgC,mBAAmB;AAAA,MACvE,UAAU;AAAA,MACV,wBAAwB,wBAAC,QAAiB,YAAoC,OAAO,OAAO,mBAAmB,KAAK,iBAAiB,QAA7G;AAAA,IACzB,CAAC,CAAC;AAEF,SAAK,oBAAoB,IAAI,OAAO,gBAAgB,IAAI,iBAAiB,MAAM,MAAM,KAAK,aAAa,oBAAoB,UAAU,CAAC;AACtI,SAAK,kBAAkB,UAAU,SAAS,gBAAgB,MAAM;AAEhE,SAAK,qBAAqB,IAAI,OAAO,sBAAsB,IAAI,iBAAiB,MAAM,MAAM,KAAK,aAAa,oBAAoB,WAAW,CAAC;AAC9I,UAAM,kBAAkB,KAAK,mBAAmB;AAChD,UAAM,YAAY,mBAAmB,KAAK,aAAa,aAAa,QAAQ,cAAc,eAAe;AACzG,SAAK,mBAAmB,UAAU,SAAS,sBAAsB,QAAQ,KAAK,YAAY,KAAK,SAAS,MAAM;AAE9G,SAAK,oBAAoB,IAAI,OAAO,qBAAqB,IAAI,iBAAiB,OAAO,MAAM,KAAK,aAAa,oBAAoB,SAAS,CAAC;AAE3I,SAAK,uBAAuB,IAAI,OAAO,kBAAkB,IAAI,iBAAiB,OAAO,OAAM,WAAU;AACpG,WAAK,aAAa,kBAAkB,MAAM,IAAI,OAAO,MAAM,oBAAoB,UAAU;AAAA,IAC1F,CAAC;AACD,SAAK,iBAAiB,KAAK,qBAAqB,eAAe,8BAA8B,KAAK,oBAAoB;AAEtH,SAAK,YAAY;AACjB,SAAK,OAAO;AAEZ,SAAK,oBAAoB,KAAK,CAAC,KAAK,mBAAmB,KAAK,oBAAoB,KAAK,mBAAmB,KAAK,oBAAoB,CAAC;AAAA,EACnI;AAAA,EAEA,IAAI,iBAAwC;AAC3C,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAI,eAAe,gBAAuC;AACzD,SAAK,kBAAkB;AACvB,SAAK,kBAAkB,UAAU,oBAAoB,eAAe,KAAK;AACzE,SAAK,mBAAmB,UAAU,oBAAoB,gBAAgB,KAAK;AAC3E,SAAK,kBAAkB,UAAU,oBAAoB,cAAc,KAAK;AACxE,QAAI,KAAK,0BAA0B,KAAK;AACvC,WAAK,eAAe,OAAO,UAAU;AACrC,WAAK,eAAe,SAAS,KAAK,eAAe,mBAAmB,KAAK,cAAqB;AAAA,IAC/F,OAAO;AACN,WAAK,eAAe,OAAO,UAAU;AAAA,IACtC;AAAA,EACD;AAAA,EAEA,eAAe,gBAAgC,OAAqB;AACnE,QAAI,mBAAmB,oBAAoB,WAAW;AACrD,UAAI,QAAQ,SAAS,qBAAqB,WAAW;AACrD,UAAI,OAAO;AACV,iBAAS,KAAK,KAAK;AAAA,MACpB;AAEA,WAAK,kBAAkB,QAAQ;AAAA,IAChC,WAAW,mBAAmB,oBAAoB,YAAY;AAC7D,UAAI,QAAQ,SAAS,gBAAgB,MAAM;AAC3C,UAAI,OAAO;AACV,iBAAS,KAAK,KAAK;AAAA,MACpB;AAEA,WAAK,kBAAkB,QAAQ;AAAA,IAChC,WAAW,0BAA0B,KAAK;AACzC,WAAK,eAAe,SAAS,gBAAgB,KAAK;AAAA,IACnD;AAAA,EACD;AAAA,EAEA,+BAA+B,QAA4B;AAC1D,SAAK,YAAY;AACjB,QAAI,QAAQ;AACX,YAAM,gBAAgB,KAAK,gBAAgB,gBAAgB,MAAM;AACjE,UAAI,eAAe;AAClB,cAAM,iBAAiB,KAAK,aAAa;AACzC,aAAK,kBAAkB,SAAS;AAChC,aAAK,mBAAmB,SAAS;AACjC,aAAK,kBAAkB,SAAS;AAChC,aAAK,qBAAqB,SAAS;AAAA,MACpC;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,0BAAgC;AACvC,SAAK,eAAe,SAAS;AAC7B,SAAK,OAAO;AACZ,QAAI,KAAK,mBAAmB,oBAAoB,aAAa,KAAK,eAAe,kBAAkB,MAAM,eAAe,WAAW;AAClI,WAAK,aAAa,oBAAoB,UAAU;AAAA,IACjD;AAAA,EACD;AAAA,EAEA,aAAa,gBAA+C;AAC3D,UAAM,eAAe,KAAK,mBAAmB,kBAC5C,0BAA0B,OAC1B,KAAK,0BAA0B,OAC/B,QAAQ,KAAK,gBAAgB,cAAc;AAE5C,QAAI,CAAC,cAAc;AAClB,WAAK,iBAAiB;AACtB,WAAK,mBAAmB,KAAK,KAAK,cAAc;AAAA,IACjD;AAEA,WAAO,QAAQ,QAAQ,MAAS;AAAA,EACjC;AAAA,EAEA,MAAc,SAAwB;AACrC,SAAK,oBAAoB,QAAQ,UAAU,OAAO,mBAAmB,KAAK,eAAe,kBAAkB,MAAM,eAAe,KAAK;AACrI,SAAK,mBAAmB,UAAU,CAAC,EAAE,KAAK,QAAQ,wBAAwB,KAAK,mBAAmB;AAClG,SAAK,kBAAkB,UAAU,KAAK,eAAe,kBAAkB,MAAM,eAAe;AAC5F,SAAK,eAAe,OAAO,UAAU,KAAK,eAAe,kBAAkB,MAAM,eAAe,aAAa,KAAK,eAAe,aAAa,EAAE,QAAQ,SAAS;AAEjK,SAAK,kBAAkB,UAAU,SAAS,qBAAqB,WAAW;AAAA,EAC3E;AACD;AAxJa,wBAAN;AAAA,EAkBJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAtBU;AAiKN,IAAM,eAAN,cAA2B,OAAO;AAAA,EAexC,YAAY,QAA+B,SACJ,oBACL,sBACI,mBACE,mBACtC;AACD,UAAM;AANoC;AACJ;AACL;AACI;AACE;AAGvC,SAAK,OAAO,MAAM;AAAA,EACnB;AAAA,EAjZD,OA0XyC;AAAA;AAAA;AAAA,EAExC;AAAA,EAEQ;AAAA,EACA;AAAA,EACR;AAAA,EACQ;AAAA,EAES,eAAgC,KAAK,UAAU,IAAI,QAAgB,CAAC;AAAA,EAC5E,cAA6B,KAAK,aAAa;AAAA,EAEvC,WAA0B,KAAK,UAAU,IAAI,QAAc,CAAC;AAAA,EACpE,UAAuB,KAAK,SAAS;AAAA,EAYtC,OAAO,QAAqB;AACnC,SAAK,UAAU,IAAI,OAAO,QAAQ,IAAI,EAAE,4BAA4B,CAAC;AACrE,SAAK,sBAAsB,IAAI,OAAO,KAAK,SAAS,IAAI,EAAE,+BAA+B,CAAC,CAAC;AAC3F,SAAK,cAAc,IAAI,OAAO,KAAK,SAAS,IAAI,EAAE,8BAA8B,CAAC;AAEjF,QAAI,KAAK,QAAQ,iBAAiB;AACjC,WAAK,eAAe,IAAI,OAAO,KAAK,aAAa,IAAI,EAAE,wBAAwB,CAAC;AAEhF,WAAK,aAAa,MAAM,kBAAkB,cAAc,eAAe;AACvE,WAAK,aAAa,MAAM,QAAQ,cAAc,eAAe;AAC7D,WAAK,aAAa,MAAM,SAAS,aAAa,cAAc,cAAc,CAAC;AAAA,IAC5E;AAEA,SAAK,SAAS,aAAa,aAAa,aAAa,KAAK,QAAQ,YAAY,KAAK;AACnF,QAAI,KAAK,QAAQ,gBAAgB;AAChC,WAAK,SAAS,aAAa,aAAa,mBAAmB,KAAK,QAAQ,cAAc;AAAA,IACvF;AACA,UAAM,eAAe,KAAK,UAAU,IAAI,WAAW,KAAK,SAAS,YAAY,CAAC;AAC9E,SAAK,UAAU,aAAa,WAAW,MAAM,KAAK,SAAS,KAAK,CAAC,CAAC;AAElE,UAAM,WAAW,KAAK,QAAQ;AAC9B,QAAI,UAAU;AACb,WAAK,UAAU,aAAa,WAAW,MAAM,SAAS,IAAI,IAAI,CAAC,CAAC;AAChE,WAAK,UAAU,aAAa,UAAU,MAAM,SAAS,IAAI,KAAK,CAAC,CAAC;AAAA,IACjE;AAAA,EACD;AAAA,EAEQ,sBAAsB,iBAA8B;AAC3D,SAAK,kBAAkB;AACvB,UAAM,cAAc,IAAI,OAAO,KAAK,iBAAiB,IAAI,EAAE,2BAA2B,CAAC;AACvF,SAAK,WAAW,KAAK,UAAU,KAAK,eAAe,WAAW,CAAC;AAC/D,SAAK,UAAU,KAAK,SAAS,YAAY,WAAS,KAAK,aAAa,KAAK,KAAK,CAAC,CAAC;AAAA,EACjF;AAAA,EAEU,eAAe,QAAsC;AAC9D,UAAM,kBAAkB,6BAAM,0BAA0B,KAAK,iBAAiB,GAAtD;AACxB,WAAO,IAAI,6BAA6B,QAAQ,KAAK,oBAAoB,EAAE,GAAG,KAAK,SAAS,gBAAgB,GAAG,KAAK,iBAAiB;AAAA,EACtI;AAAA,EAEA,YAAY,SAAuB;AAElC,QAAI,KAAK,gBAAgB,YAAY,KAAK,aAAa,aAAa;AACnE,WAAK,aAAa,cAAc;AAChC,WAAK,SAAS,aAAa,aAAa,cAAc,OAAO;AAC7D,WAAK,SAAS,aAAa,MAAM,eAAe,KAAK,iBAAiB,IAAI;AAAA,IAC3E;AAAA,EACD;AAAA,EAEA,OAAO,WAA0B;AAChC,QAAI,UAAU,QAAQ,KAAK;AAC1B,WAAK,cAAc,UAAU,IAAI,MAAM;AAEvC,WAAK,SAAS,aAAa,MAAM,eAAe;AAAA,IACjD,OAAO;AACN,WAAK,cAAc,UAAU,OAAO,MAAM;AAE1C,WAAK,SAAS,aAAa,MAAM,eAAe,KAAK,iBAAiB,IAAI;AAAA,IAC3E;AAAA,EACD;AAAA,EAEQ,mBAA2B;AAClC,UAAM,aAAa,KAAK,eAAe,IAAI,cAAc,KAAK,YAAY,IAAI;AAC9E,WAAO,aAAa;AAAA,EACrB;AAAA,EAEA,QAAQ;AACP,SAAK,SAAS,MAAM;AACpB,QAAI,KAAK,SAAS,GAAG;AACpB,WAAK,SAAS,OAAO;AAAA,IACtB;AAAA,EACD;AAAA,EAEA,WAAoB;AACnB,WAAO,KAAK,SAAS,SAAS;AAAA,EAC/B;AAAA,EAEA,QAAQ;AACP,SAAK,SAAS,QAAQ;AAAA,EACvB;AAAA,EAEA,WAAmB;AAClB,WAAO,KAAK,SAAS;AAAA,EACtB;AAAA,EAEA,SAAS,OAAuB;AAC/B,WAAO,KAAK,SAAS,QAAQ;AAAA,EAC9B;AAAA,EAES,UAAgB;AACxB,SAAK,QAAQ,UAAU,IAAI,KAAK;AAChC,UAAM,QAAQ;AAAA,EACf;AACD;AArHa,eAAN;AAAA,EAgBJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAnBU;AAuHN,MAAM,6BAAgC,WAAW;AAAA,EAUvD,YAAoB,QAAqB;AACxC,UAAM;AADa;AAEnB,SAAK,UAAU,KAAK,OAAO,YAAY,CAAC,MAAyB;AAChE,UAAI,EAAE,OAAO,SAAS,gBAAgB,uBAAuB,EAAE,OAAO,OAAO,gBAAgB,CAAC,KAAK,UAAU,GAAG;AAC/G;AAAA,MACD;AACA,WAAK,SAAS,KAAK,CAAC;AAAA,IACrB,CAAC,CAAC;AAAA,EACH;AAAA,EAngBD,OAifwD;AAAA;AAAA;AAAA,EAE/C,QAAgB;AAAA,EAChB,eAAoB,CAAC;AAAA,EAEZ,4BAA4B,KAAK,OAAO,4BAA4B;AAAA,EAEpE,WAAW,KAAK,UAAU,IAAI,QAA2B,CAAC;AAAA,EAClE,UAAoC,KAAK,SAAS;AAAA,EAY3D,IAAI,cAAmB;AACtB,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,UAAkB;AACjB,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,KAAK,MAAc,cAAsB,aAAwB;AAChE,SAAK,eAAe;AACpB,UAAM,gBAAyC,CAAC;AAChD,SAAK,QAAQ;AACb,kBAAc,KAAK;AAAA,MAClB,SAAS;AAAA,QACR,aAAa;AAAA,QACb,sBAAsB,UAAU,YAAY,gBAAgB;AAAA,QAC5D,yBAAyB,IAAI,eAAe,EAAE,WAAW,YAAY;AAAA,QACrE,YAAY,uBAAuB;AAAA,MACpC;AAAA,MACA,OAAO;AAAA,QACN,iBAAiB;AAAA,QACjB,aAAa;AAAA,QACb,eAAe;AAAA,QACf,WAAW;AAAA,MACZ;AAAA,IACD,CAAC;AACD,SAAK,0BAA0B,IAAI,aAAa;AAAA,EACjD;AAAA,EAEA,OAAa;AACZ,SAAK,0BAA0B,MAAM;AAAA,EACtC;AAAA,EAEA,YAAqB;AACpB,WAAO,KAAK,0BAA0B,SAAS;AAAA,EAChD;AAAA,EAES,UAAgB;AACxB,SAAK,KAAK;AACV,UAAM,QAAQ;AAAA,EACf;AACD;",
  "names": []
}
