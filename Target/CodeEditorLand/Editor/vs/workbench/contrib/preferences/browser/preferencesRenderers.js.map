{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/preferences/browser/preferencesRenderers.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EventHelper, getDomNodePagePosition } from '../../../../base/browser/dom.js';\nimport { IAction, SubmenuAction } from '../../../../base/common/actions.js';\nimport { Delayer } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { IStringDictionary } from '../../../../base/common/collections.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { IJSONSchema } from '../../../../base/common/jsonSchema.js';\nimport { Disposable, IDisposable } from '../../../../base/common/lifecycle.js';\nimport { ResourceMap } from '../../../../base/common/map.js';\nimport { isEqual } from '../../../../base/common/resources.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { ICodeEditor, IEditorMouseEvent, MouseTargetType } from '../../../../editor/browser/editorBrowser.js';\nimport { EditorOption } from '../../../../editor/common/config/editorOptions.js';\nimport { Position } from '../../../../editor/common/core/position.js';\nimport { IRange, Range } from '../../../../editor/common/core/range.js';\nimport { Selection } from '../../../../editor/common/core/selection.js';\nimport { ICursorPositionChangedEvent } from '../../../../editor/common/cursorEvents.js';\nimport * as editorCommon from '../../../../editor/common/editorCommon.js';\nimport * as languages from '../../../../editor/common/languages.js';\nimport { IModelDeltaDecoration, ITextModel, TrackedRangeStickiness } from '../../../../editor/common/model.js';\nimport { ModelDecorationOptions } from '../../../../editor/common/model/textModel.js';\nimport { ILanguageFeaturesService } from '../../../../editor/common/services/languageFeatures.js';\nimport { CodeActionKind } from '../../../../editor/contrib/codeAction/common/types.js';\nimport * as nls from '../../../../nls.js';\nimport { ConfigurationTarget, IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { Extensions as ConfigurationExtensions, ConfigurationScope, IConfigurationPropertySchema, IConfigurationRegistry, IRegisteredConfigurationPropertySchema, OVERRIDE_PROPERTY_REGEX, overrideIdentifiersFromKey } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IMarkerData, IMarkerService, MarkerSeverity, MarkerTag } from '../../../../platform/markers/common/markers.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { IUserDataProfilesService } from '../../../../platform/userDataProfile/common/userDataProfile.js';\nimport { IWorkspaceContextService, WorkbenchState } from '../../../../platform/workspace/common/workspace.js';\nimport { IWorkspaceTrustManagementService } from '../../../../platform/workspace/common/workspaceTrust.js';\nimport { RangeHighlightDecorations } from '../../../browser/codeeditor.js';\nimport { settingsEditIcon } from './preferencesIcons.js';\nimport { EditPreferenceWidget } from './preferencesWidgets.js';\nimport { APPLY_ALL_PROFILES_SETTING, IWorkbenchConfigurationService } from '../../../services/configuration/common/configuration.js';\nimport { IWorkbenchEnvironmentService } from '../../../services/environment/common/environmentService.js';\nimport { IPreferencesEditorModel, IPreferencesService, ISetting, ISettingsEditorModel, ISettingsGroup } from '../../../services/preferences/common/preferences.js';\nimport { DefaultSettingsEditorModel, SettingsEditorModel, WorkspaceConfigurationEditorModel } from '../../../services/preferences/common/preferencesModels.js';\nimport { IUserDataProfileService } from '../../../services/userDataProfile/common/userDataProfile.js';\n\nexport interface IPreferencesRenderer extends IDisposable {\n\trender(): void;\n\tupdatePreference(key: string, value: any, source: ISetting): void;\n\tfocusPreference(setting: ISetting): void;\n\tclearFocus(setting: ISetting): void;\n\teditPreference(setting: ISetting): boolean;\n}\n\nexport class UserSettingsRenderer extends Disposable implements IPreferencesRenderer {\n\n\tprivate settingHighlighter: SettingHighlighter;\n\tprivate editSettingActionRenderer: EditSettingRenderer;\n\tprivate modelChangeDelayer: Delayer<void> = new Delayer<void>(200);\n\tprivate associatedPreferencesModel!: IPreferencesEditorModel<ISetting>;\n\n\tprivate unsupportedSettingsRenderer: UnsupportedSettingsRenderer;\n\n\tconstructor(protected editor: ICodeEditor, readonly preferencesModel: SettingsEditorModel,\n\t\t@IPreferencesService protected preferencesService: IPreferencesService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IInstantiationService protected instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\t\tthis.settingHighlighter = this._register(instantiationService.createInstance(SettingHighlighter, editor));\n\t\tthis.editSettingActionRenderer = this._register(this.instantiationService.createInstance(EditSettingRenderer, this.editor, this.preferencesModel, this.settingHighlighter));\n\t\tthis._register(this.editSettingActionRenderer.onUpdateSetting(({ key, value, source }) => this.updatePreference(key, value, source)));\n\t\tthis._register(this.editor.getModel()!.onDidChangeContent(() => this.modelChangeDelayer.trigger(() => this.onModelChanged())));\n\t\tthis.unsupportedSettingsRenderer = this._register(instantiationService.createInstance(UnsupportedSettingsRenderer, editor, preferencesModel));\n\t}\n\n\trender(): void {\n\t\tthis.editSettingActionRenderer.render(this.preferencesModel.settingsGroups, this.associatedPreferencesModel);\n\t\tthis.unsupportedSettingsRenderer.render();\n\t}\n\n\tupdatePreference(key: string, value: any, source: IIndexedSetting): void {\n\t\tconst overrideIdentifiers = source.overrideOf ? overrideIdentifiersFromKey(source.overrideOf.key) : null;\n\t\tconst resource = this.preferencesModel.uri;\n\t\tthis.configurationService.updateValue(key, value, { overrideIdentifiers, resource }, this.preferencesModel.configurationTarget)\n\t\t\t.then(() => this.onSettingUpdated(source));\n\t}\n\n\tprivate onModelChanged(): void {\n\t\tif (!this.editor.hasModel()) {\n\t\t\t// model could have been disposed during the delay\n\t\t\treturn;\n\t\t}\n\t\tthis.render();\n\t}\n\n\tprivate onSettingUpdated(setting: ISetting) {\n\t\tthis.editor.focus();\n\t\tsetting = this.getSetting(setting)!;\n\t\tif (setting) {\n\t\t\t// TODO:@sandy Selection range should be template range\n\t\t\tthis.editor.setSelection(setting.valueRange);\n\t\t\tthis.settingHighlighter.highlight(setting, true);\n\t\t}\n\t}\n\n\tprivate getSetting(setting: ISetting): ISetting | undefined {\n\t\tconst { key, overrideOf } = setting;\n\t\tif (overrideOf) {\n\t\t\tconst setting = this.getSetting(overrideOf);\n\t\t\tfor (const override of setting!.overrides!) {\n\t\t\t\tif (override.key === key) {\n\t\t\t\t\treturn override;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this.preferencesModel.getPreference(key);\n\t}\n\n\tfocusPreference(setting: ISetting): void {\n\t\tconst s = this.getSetting(setting);\n\t\tif (s) {\n\t\t\tthis.settingHighlighter.highlight(s, true);\n\t\t\tthis.editor.setPosition({ lineNumber: s.keyRange.startLineNumber, column: s.keyRange.startColumn });\n\t\t} else {\n\t\t\tthis.settingHighlighter.clear(true);\n\t\t}\n\t}\n\n\tclearFocus(setting: ISetting): void {\n\t\tthis.settingHighlighter.clear(true);\n\t}\n\n\teditPreference(setting: ISetting): boolean {\n\t\tconst editableSetting = this.getSetting(setting);\n\t\treturn !!(editableSetting && this.editSettingActionRenderer.activateOnSetting(editableSetting));\n\t}\n\n}\n\nexport class WorkspaceSettingsRenderer extends UserSettingsRenderer implements IPreferencesRenderer {\n\n\tprivate workspaceConfigurationRenderer: WorkspaceConfigurationRenderer;\n\n\tconstructor(editor: ICodeEditor, preferencesModel: SettingsEditorModel,\n\t\t@IPreferencesService preferencesService: IPreferencesService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tsuper(editor, preferencesModel, preferencesService, configurationService, instantiationService);\n\t\tthis.workspaceConfigurationRenderer = this._register(instantiationService.createInstance(WorkspaceConfigurationRenderer, editor, preferencesModel));\n\t}\n\n\toverride render(): void {\n\t\tsuper.render();\n\t\tthis.workspaceConfigurationRenderer.render();\n\t}\n}\n\nexport interface IIndexedSetting extends ISetting {\n\tindex: number;\n\tgroupId: string;\n}\n\nclass EditSettingRenderer extends Disposable {\n\n\tprivate editPreferenceWidgetForCursorPosition: EditPreferenceWidget<IIndexedSetting>;\n\tprivate editPreferenceWidgetForMouseMove: EditPreferenceWidget<IIndexedSetting>;\n\n\tprivate settingsGroups: ISettingsGroup[] = [];\n\tassociatedPreferencesModel!: IPreferencesEditorModel<ISetting>;\n\tprivate toggleEditPreferencesForMouseMoveDelayer: Delayer<void>;\n\n\tprivate readonly _onUpdateSetting: Emitter<{ key: string; value: any; source: IIndexedSetting }> = new Emitter<{ key: string; value: any; source: IIndexedSetting }>();\n\treadonly onUpdateSetting: Event<{ key: string; value: any; source: IIndexedSetting }> = this._onUpdateSetting.event;\n\n\tconstructor(private editor: ICodeEditor, private primarySettingsModel: ISettingsEditorModel,\n\t\tprivate settingHighlighter: SettingHighlighter,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService\n\t) {\n\t\tsuper();\n\n\t\tthis.editPreferenceWidgetForCursorPosition = <EditPreferenceWidget<IIndexedSetting>>this._register(this.instantiationService.createInstance(EditPreferenceWidget, editor));\n\t\tthis.editPreferenceWidgetForMouseMove = <EditPreferenceWidget<IIndexedSetting>>this._register(this.instantiationService.createInstance(EditPreferenceWidget, editor));\n\t\tthis.toggleEditPreferencesForMouseMoveDelayer = new Delayer<void>(75);\n\n\t\tthis._register(this.editPreferenceWidgetForCursorPosition.onClick(e => this.onEditSettingClicked(this.editPreferenceWidgetForCursorPosition, e)));\n\t\tthis._register(this.editPreferenceWidgetForMouseMove.onClick(e => this.onEditSettingClicked(this.editPreferenceWidgetForMouseMove, e)));\n\n\t\tthis._register(this.editor.onDidChangeCursorPosition(positionChangeEvent => this.onPositionChanged(positionChangeEvent)));\n\t\tthis._register(this.editor.onMouseMove(mouseMoveEvent => this.onMouseMoved(mouseMoveEvent)));\n\t\tthis._register(this.editor.onDidChangeConfiguration(() => this.onConfigurationChanged()));\n\t}\n\n\trender(settingsGroups: ISettingsGroup[], associatedPreferencesModel: IPreferencesEditorModel<ISetting>): void {\n\t\tthis.editPreferenceWidgetForCursorPosition.hide();\n\t\tthis.editPreferenceWidgetForMouseMove.hide();\n\t\tthis.settingsGroups = settingsGroups;\n\t\tthis.associatedPreferencesModel = associatedPreferencesModel;\n\n\t\tconst settings = this.getSettings(this.editor.getPosition()!.lineNumber);\n\t\tif (settings.length) {\n\t\t\tthis.showEditPreferencesWidget(this.editPreferenceWidgetForCursorPosition, settings);\n\t\t}\n\t}\n\n\tprivate isDefaultSettings(): boolean {\n\t\treturn this.primarySettingsModel instanceof DefaultSettingsEditorModel;\n\t}\n\n\tprivate onConfigurationChanged(): void {\n\t\tif (!this.editor.getOption(EditorOption.glyphMargin)) {\n\t\t\tthis.editPreferenceWidgetForCursorPosition.hide();\n\t\t\tthis.editPreferenceWidgetForMouseMove.hide();\n\t\t}\n\t}\n\n\tprivate onPositionChanged(positionChangeEvent: ICursorPositionChangedEvent) {\n\t\tthis.editPreferenceWidgetForMouseMove.hide();\n\t\tconst settings = this.getSettings(positionChangeEvent.position.lineNumber);\n\t\tif (settings.length) {\n\t\t\tthis.showEditPreferencesWidget(this.editPreferenceWidgetForCursorPosition, settings);\n\t\t} else {\n\t\t\tthis.editPreferenceWidgetForCursorPosition.hide();\n\t\t}\n\t}\n\n\tprivate onMouseMoved(mouseMoveEvent: IEditorMouseEvent): void {\n\t\tconst editPreferenceWidget = this.getEditPreferenceWidgetUnderMouse(mouseMoveEvent);\n\t\tif (editPreferenceWidget) {\n\t\t\tthis.onMouseOver(editPreferenceWidget);\n\t\t\treturn;\n\t\t}\n\t\tthis.settingHighlighter.clear();\n\t\tthis.toggleEditPreferencesForMouseMoveDelayer.trigger(() => this.toggleEditPreferenceWidgetForMouseMove(mouseMoveEvent));\n\t}\n\n\tprivate getEditPreferenceWidgetUnderMouse(mouseMoveEvent: IEditorMouseEvent): EditPreferenceWidget<ISetting> | undefined {\n\t\tif (mouseMoveEvent.target.type === MouseTargetType.GUTTER_GLYPH_MARGIN) {\n\t\t\tconst line = mouseMoveEvent.target.position.lineNumber;\n\t\t\tif (this.editPreferenceWidgetForMouseMove.getLine() === line && this.editPreferenceWidgetForMouseMove.isVisible()) {\n\t\t\t\treturn this.editPreferenceWidgetForMouseMove;\n\t\t\t}\n\t\t\tif (this.editPreferenceWidgetForCursorPosition.getLine() === line && this.editPreferenceWidgetForCursorPosition.isVisible()) {\n\t\t\t\treturn this.editPreferenceWidgetForCursorPosition;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate toggleEditPreferenceWidgetForMouseMove(mouseMoveEvent: IEditorMouseEvent): void {\n\t\tconst settings = mouseMoveEvent.target.position ? this.getSettings(mouseMoveEvent.target.position.lineNumber) : null;\n\t\tif (settings && settings.length) {\n\t\t\tthis.showEditPreferencesWidget(this.editPreferenceWidgetForMouseMove, settings);\n\t\t} else {\n\t\t\tthis.editPreferenceWidgetForMouseMove.hide();\n\t\t}\n\t}\n\n\tprivate showEditPreferencesWidget(editPreferencesWidget: EditPreferenceWidget<ISetting>, settings: IIndexedSetting[]) {\n\t\tconst line = settings[0].valueRange.startLineNumber;\n\t\tif (this.editor.getOption(EditorOption.glyphMargin) && this.marginFreeFromOtherDecorations(line)) {\n\t\t\teditPreferencesWidget.show(line, nls.localize('editTtile', \"Edit\"), settings);\n\t\t\tconst editPreferenceWidgetToHide = editPreferencesWidget === this.editPreferenceWidgetForCursorPosition ? this.editPreferenceWidgetForMouseMove : this.editPreferenceWidgetForCursorPosition;\n\t\t\teditPreferenceWidgetToHide.hide();\n\t\t}\n\t}\n\n\tprivate marginFreeFromOtherDecorations(line: number): boolean {\n\t\tconst decorations = this.editor.getLineDecorations(line);\n\t\tif (decorations) {\n\t\t\tfor (const { options } of decorations) {\n\t\t\t\tif (options.glyphMarginClassName && options.glyphMarginClassName.indexOf(ThemeIcon.asClassName(settingsEditIcon)) === -1) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate getSettings(lineNumber: number): IIndexedSetting[] {\n\t\tconst configurationMap = this.getConfigurationsMap();\n\t\treturn this.getSettingsAtLineNumber(lineNumber).filter(setting => {\n\t\t\tconst configurationNode = configurationMap[setting.key];\n\t\t\tif (configurationNode) {\n\t\t\t\tif (configurationNode.policy && this.configurationService.inspect(setting.key).policyValue !== undefined) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (this.isDefaultSettings()) {\n\t\t\t\t\tif (setting.key === 'launch') {\n\t\t\t\t\t\t// Do not show because of https://github.com/microsoft/vscode/issues/32593\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (configurationNode.type === 'boolean' || configurationNode.enum) {\n\t\t\t\t\tif ((<SettingsEditorModel>this.primarySettingsModel).configurationTarget !== ConfigurationTarget.WORKSPACE_FOLDER) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (configurationNode.scope === ConfigurationScope.RESOURCE || configurationNode.scope === ConfigurationScope.LANGUAGE_OVERRIDABLE) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate getSettingsAtLineNumber(lineNumber: number): IIndexedSetting[] {\n\t\t// index of setting, across all groups/sections\n\t\tlet index = 0;\n\n\t\tconst settings: IIndexedSetting[] = [];\n\t\tfor (const group of this.settingsGroups) {\n\t\t\tif (group.range.startLineNumber > lineNumber) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (lineNumber >= group.range.startLineNumber && lineNumber <= group.range.endLineNumber) {\n\t\t\t\tfor (const section of group.sections) {\n\t\t\t\t\tfor (const setting of section.settings) {\n\t\t\t\t\t\tif (setting.range.startLineNumber > lineNumber) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (lineNumber >= setting.range.startLineNumber && lineNumber <= setting.range.endLineNumber) {\n\t\t\t\t\t\t\tif (!this.isDefaultSettings() && setting.overrides!.length) {\n\t\t\t\t\t\t\t\t// Only one level because override settings cannot have override settings\n\t\t\t\t\t\t\t\tfor (const overrideSetting of setting.overrides!) {\n\t\t\t\t\t\t\t\t\tif (lineNumber >= overrideSetting.range.startLineNumber && lineNumber <= overrideSetting.range.endLineNumber) {\n\t\t\t\t\t\t\t\t\t\tsettings.push({ ...overrideSetting, index, groupId: group.id });\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsettings.push({ ...setting, index, groupId: group.id });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn settings;\n\t}\n\n\tprivate onMouseOver(editPreferenceWidget: EditPreferenceWidget<ISetting>): void {\n\t\tthis.settingHighlighter.highlight(editPreferenceWidget.preferences[0]);\n\t}\n\n\tprivate onEditSettingClicked(editPreferenceWidget: EditPreferenceWidget<IIndexedSetting>, e: IEditorMouseEvent): void {\n\t\tEventHelper.stop(e.event, true);\n\n\t\tconst actions = this.getSettings(editPreferenceWidget.getLine()).length === 1 ? this.getActions(editPreferenceWidget.preferences[0], this.getConfigurationsMap()[editPreferenceWidget.preferences[0].key])\n\t\t\t: editPreferenceWidget.preferences.map(setting => new SubmenuAction(`preferences.submenu.${setting.key}`, setting.key, this.getActions(setting, this.getConfigurationsMap()[setting.key])));\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => e.event,\n\t\t\tgetActions: () => actions\n\t\t});\n\t}\n\n\tactivateOnSetting(setting: ISetting): boolean {\n\t\tconst startLine = setting.keyRange.startLineNumber;\n\t\tconst settings = this.getSettings(startLine);\n\t\tif (!settings.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.editPreferenceWidgetForMouseMove.show(startLine, '', settings);\n\t\tconst actions = this.getActions(this.editPreferenceWidgetForMouseMove.preferences[0], this.getConfigurationsMap()[this.editPreferenceWidgetForMouseMove.preferences[0].key]);\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => this.toAbsoluteCoords(new Position(startLine, 1)),\n\t\t\tgetActions: () => actions\n\t\t});\n\n\t\treturn true;\n\t}\n\n\tprivate toAbsoluteCoords(position: Position): { x: number; y: number } {\n\t\tconst positionCoords = this.editor.getScrolledVisiblePosition(position);\n\t\tconst editorCoords = getDomNodePagePosition(this.editor.getDomNode()!);\n\t\tconst x = editorCoords.left + positionCoords!.left;\n\t\tconst y = editorCoords.top + positionCoords!.top + positionCoords!.height;\n\n\t\treturn { x, y: y + 10 };\n\t}\n\n\tprivate getConfigurationsMap(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).getConfigurationProperties();\n\t}\n\n\tprivate getActions(setting: IIndexedSetting, jsonSchema: IJSONSchema): IAction[] {\n\t\tif (jsonSchema.type === 'boolean') {\n\t\t\treturn [{\n\t\t\t\tid: 'truthyValue',\n\t\t\t\tlabel: 'true',\n\t\t\t\ttooltip: 'true',\n\t\t\t\tenabled: true,\n\t\t\t\trun: () => this.updateSetting(setting.key, true, setting),\n\t\t\t\tclass: undefined\n\t\t\t}, {\n\t\t\t\tid: 'falsyValue',\n\t\t\t\tlabel: 'false',\n\t\t\t\ttooltip: 'false',\n\t\t\t\tenabled: true,\n\t\t\t\trun: () => this.updateSetting(setting.key, false, setting),\n\t\t\t\tclass: undefined\n\t\t\t}];\n\t\t}\n\t\tif (jsonSchema.enum) {\n\t\t\treturn jsonSchema.enum.map(value => {\n\t\t\t\treturn {\n\t\t\t\t\tid: value,\n\t\t\t\t\tlabel: JSON.stringify(value),\n\t\t\t\t\ttooltip: JSON.stringify(value),\n\t\t\t\t\tenabled: true,\n\t\t\t\t\trun: () => this.updateSetting(setting.key, value, setting),\n\t\t\t\t\tclass: undefined\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\treturn this.getDefaultActions(setting);\n\t}\n\n\tprivate getDefaultActions(setting: IIndexedSetting): IAction[] {\n\t\tif (this.isDefaultSettings()) {\n\t\t\tconst settingInOtherModel = this.associatedPreferencesModel.getPreference(setting.key);\n\t\t\treturn [{\n\t\t\t\tid: 'setDefaultValue',\n\t\t\t\tlabel: settingInOtherModel ? nls.localize('replaceDefaultValue', \"Replace in Settings\") : nls.localize('copyDefaultValue', \"Copy to Settings\"),\n\t\t\t\ttooltip: settingInOtherModel ? nls.localize('replaceDefaultValue', \"Replace in Settings\") : nls.localize('copyDefaultValue', \"Copy to Settings\"),\n\t\t\t\tenabled: true,\n\t\t\t\trun: () => this.updateSetting(setting.key, setting.value, setting),\n\t\t\t\tclass: undefined\n\t\t\t}];\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate updateSetting(key: string, value: any, source: IIndexedSetting): void {\n\t\tthis._onUpdateSetting.fire({ key, value, source });\n\t}\n}\n\nclass SettingHighlighter extends Disposable {\n\n\tprivate fixedHighlighter: RangeHighlightDecorations;\n\tprivate volatileHighlighter: RangeHighlightDecorations;\n\n\tconstructor(private editor: ICodeEditor, @IInstantiationService instantiationService: IInstantiationService) {\n\t\tsuper();\n\t\tthis.fixedHighlighter = this._register(instantiationService.createInstance(RangeHighlightDecorations));\n\t\tthis.volatileHighlighter = this._register(instantiationService.createInstance(RangeHighlightDecorations));\n\t}\n\n\thighlight(setting: ISetting, fix: boolean = false) {\n\t\tthis.volatileHighlighter.removeHighlightRange();\n\t\tthis.fixedHighlighter.removeHighlightRange();\n\n\t\tconst highlighter = fix ? this.fixedHighlighter : this.volatileHighlighter;\n\t\thighlighter.highlightRange({\n\t\t\trange: setting.valueRange,\n\t\t\tresource: this.editor.getModel()!.uri\n\t\t}, this.editor);\n\n\t\tthis.editor.revealLineInCenterIfOutsideViewport(setting.valueRange.startLineNumber, editorCommon.ScrollType.Smooth);\n\t}\n\n\tclear(fix: boolean = false): void {\n\t\tthis.volatileHighlighter.removeHighlightRange();\n\t\tif (fix) {\n\t\t\tthis.fixedHighlighter.removeHighlightRange();\n\t\t}\n\t}\n}\n\nclass UnsupportedSettingsRenderer extends Disposable implements languages.CodeActionProvider {\n\n\tprivate renderingDelayer: Delayer<void> = new Delayer<void>(200);\n\n\tprivate readonly codeActions = new ResourceMap<[Range, languages.CodeAction[]][]>(uri => this.uriIdentityService.extUri.getComparisonKey(uri));\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\tprivate readonly settingsEditorModel: SettingsEditorModel,\n\t\t@IMarkerService private readonly markerService: IMarkerService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IWorkbenchConfigurationService private readonly configurationService: IWorkbenchConfigurationService,\n\t\t@IWorkspaceTrustManagementService private readonly workspaceTrustManagementService: IWorkspaceTrustManagementService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t) {\n\t\tsuper();\n\t\tthis._register(this.editor.getModel()!.onDidChangeContent(() => this.delayedRender()));\n\t\tthis._register(Event.filter(this.configurationService.onDidChangeConfiguration, e => e.source === ConfigurationTarget.DEFAULT)(() => this.delayedRender()));\n\t\tthis._register(languageFeaturesService.codeActionProvider.register({ pattern: settingsEditorModel.uri.path }, this));\n\t\tthis._register(userDataProfileService.onDidChangeCurrentProfile(() => this.delayedRender()));\n\t}\n\n\tprivate delayedRender(): void {\n\t\tthis.renderingDelayer.trigger(() => this.render());\n\t}\n\n\tpublic render(): void {\n\t\tthis.codeActions.clear();\n\t\tconst markerData: IMarkerData[] = this.generateMarkerData();\n\t\tif (markerData.length) {\n\t\t\tthis.markerService.changeOne('UnsupportedSettingsRenderer', this.settingsEditorModel.uri, markerData);\n\t\t} else {\n\t\t\tthis.markerService.remove('UnsupportedSettingsRenderer', [this.settingsEditorModel.uri]);\n\t\t}\n\t}\n\n\tasync provideCodeActions(model: ITextModel, range: Range | Selection, context: languages.CodeActionContext, token: CancellationToken): Promise<languages.CodeActionList> {\n\t\tconst actions: languages.CodeAction[] = [];\n\t\tconst codeActionsByRange = this.codeActions.get(model.uri);\n\t\tif (codeActionsByRange) {\n\t\t\tfor (const [codeActionsRange, codeActions] of codeActionsByRange) {\n\t\t\t\tif (codeActionsRange.containsRange(range)) {\n\t\t\t\t\tactions.push(...codeActions);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tactions,\n\t\t\tdispose: () => { }\n\t\t};\n\t}\n\n\tprivate generateMarkerData(): IMarkerData[] {\n\t\tconst markerData: IMarkerData[] = [];\n\t\tconst configurationRegistry = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).getConfigurationProperties();\n\t\tfor (const settingsGroup of this.settingsEditorModel.settingsGroups) {\n\t\t\tfor (const section of settingsGroup.sections) {\n\t\t\t\tfor (const setting of section.settings) {\n\t\t\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(setting.key)) {\n\t\t\t\t\t\tif (setting.overrides) {\n\t\t\t\t\t\t\tthis.handleOverrides(setting.overrides, configurationRegistry, markerData);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tconst configuration = configurationRegistry[setting.key];\n\t\t\t\t\tif (configuration) {\n\t\t\t\t\t\tif (this.handlePolicyConfiguration(setting, configuration, markerData)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tswitch (this.settingsEditorModel.configurationTarget) {\n\t\t\t\t\t\t\tcase ConfigurationTarget.USER_LOCAL:\n\t\t\t\t\t\t\t\tthis.handleLocalUserConfiguration(setting, configuration, markerData);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase ConfigurationTarget.USER_REMOTE:\n\t\t\t\t\t\t\t\tthis.handleRemoteUserConfiguration(setting, configuration, markerData);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase ConfigurationTarget.WORKSPACE:\n\t\t\t\t\t\t\t\tthis.handleWorkspaceConfiguration(setting, configuration, markerData);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase ConfigurationTarget.WORKSPACE_FOLDER:\n\t\t\t\t\t\t\t\tthis.handleWorkspaceFolderConfiguration(setting, configuration, markerData);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmarkerData.push(this.gemerateUnknownConfigurationMarker(setting));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn markerData;\n\t}\n\n\tprivate handlePolicyConfiguration(setting: ISetting, configuration: IConfigurationPropertySchema, markerData: IMarkerData[]): boolean {\n\t\tif (!configuration.policy) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.configurationService.inspect(setting.key).policyValue === undefined) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.settingsEditorModel.configurationTarget === ConfigurationTarget.DEFAULT) {\n\t\t\treturn false;\n\t\t}\n\t\tmarkerData.push({\n\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t...setting.range,\n\t\t\tmessage: nls.localize('unsupportedPolicySetting', \"This setting cannot be applied because it is configured in the system policy.\")\n\t\t});\n\t\treturn true;\n\t}\n\n\tprivate handleOverrides(overrides: ISetting[], configurationRegistry: IStringDictionary<IRegisteredConfigurationPropertySchema>, markerData: IMarkerData[]): void {\n\t\tfor (const setting of overrides || []) {\n\t\t\tconst configuration = configurationRegistry[setting.key];\n\t\t\tif (configuration) {\n\t\t\t\tif (configuration.scope !== ConfigurationScope.LANGUAGE_OVERRIDABLE) {\n\t\t\t\t\tmarkerData.push({\n\t\t\t\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\t\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t\t\t\t...setting.range,\n\t\t\t\t\t\tmessage: nls.localize('unsupportLanguageOverrideSetting', \"This setting cannot be applied because it is not registered as language override setting.\")\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmarkerData.push(this.gemerateUnknownConfigurationMarker(setting));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate handleLocalUserConfiguration(setting: ISetting, configuration: IConfigurationPropertySchema, markerData: IMarkerData[]): void {\n\t\tif (!this.userDataProfileService.currentProfile.isDefault && !this.userDataProfileService.currentProfile.useDefaultFlags?.settings) {\n\t\t\tif (isEqual(this.userDataProfilesService.defaultProfile.settingsResource, this.settingsEditorModel.uri) && !this.configurationService.isSettingAppliedForAllProfiles(setting.key)) {\n\t\t\t\t// If we're in the default profile setting file, and the setting cannot be applied in all profiles\n\t\t\t\tmarkerData.push({\n\t\t\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t\t\t...setting.range,\n\t\t\t\t\tmessage: nls.localize('defaultProfileSettingWhileNonDefaultActive', \"This setting cannot be applied while a non-default profile is active. It will be applied when the default profile is active.\")\n\t\t\t\t});\n\t\t\t} else if (isEqual(this.userDataProfileService.currentProfile.settingsResource, this.settingsEditorModel.uri)) {\n\t\t\t\tif (configuration.scope === ConfigurationScope.APPLICATION) {\n\t\t\t\t\t// If we're in a profile setting file, and the setting is application-scoped, fade it out.\n\t\t\t\t\tmarkerData.push(this.generateUnsupportedApplicationSettingMarker(setting));\n\t\t\t\t} else if (this.configurationService.isSettingAppliedForAllProfiles(setting.key)) {\n\t\t\t\t\t// If we're in the non-default profile setting file, and the setting can be applied in all profiles, fade it out.\n\t\t\t\t\tmarkerData.push({\n\t\t\t\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\t\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t\t\t\t...setting.range,\n\t\t\t\t\t\tmessage: nls.localize('allProfileSettingWhileInNonDefaultProfileSetting', \"This setting cannot be applied because it is configured to be applied in all profiles using setting {0}. Value from the default profile will be used instead.\", APPLY_ALL_PROFILES_SETTING)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this.environmentService.remoteAuthority && (configuration.scope === ConfigurationScope.MACHINE || configuration.scope === ConfigurationScope.MACHINE_OVERRIDABLE)) {\n\t\t\tmarkerData.push({\n\t\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t\t...setting.range,\n\t\t\t\tmessage: nls.localize('unsupportedRemoteMachineSetting', \"This setting cannot be applied in this window. It will be applied when you open a local window.\")\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate handleRemoteUserConfiguration(setting: ISetting, configuration: IConfigurationPropertySchema, markerData: IMarkerData[]): void {\n\t\tif (configuration.scope === ConfigurationScope.APPLICATION) {\n\t\t\tmarkerData.push(this.generateUnsupportedApplicationSettingMarker(setting));\n\t\t}\n\t}\n\n\tprivate handleWorkspaceConfiguration(setting: ISetting, configuration: IConfigurationPropertySchema, markerData: IMarkerData[]): void {\n\t\tif (configuration.scope === ConfigurationScope.APPLICATION) {\n\t\t\tmarkerData.push(this.generateUnsupportedApplicationSettingMarker(setting));\n\t\t}\n\n\t\tif (configuration.scope === ConfigurationScope.MACHINE) {\n\t\t\tmarkerData.push(this.generateUnsupportedMachineSettingMarker(setting));\n\t\t}\n\n\t\tif (!this.workspaceTrustManagementService.isWorkspaceTrusted() && configuration.restricted) {\n\t\t\tconst marker = this.generateUntrustedSettingMarker(setting);\n\t\t\tmarkerData.push(marker);\n\t\t\tconst codeActions = this.generateUntrustedSettingCodeActions([marker]);\n\t\t\tthis.addCodeActions(marker, codeActions);\n\t\t}\n\t}\n\n\tprivate handleWorkspaceFolderConfiguration(setting: ISetting, configuration: IConfigurationPropertySchema, markerData: IMarkerData[]): void {\n\t\tif (configuration.scope === ConfigurationScope.APPLICATION) {\n\t\t\tmarkerData.push(this.generateUnsupportedApplicationSettingMarker(setting));\n\t\t}\n\n\t\tif (configuration.scope === ConfigurationScope.MACHINE) {\n\t\t\tmarkerData.push(this.generateUnsupportedMachineSettingMarker(setting));\n\t\t}\n\n\t\tif (configuration.scope === ConfigurationScope.WINDOW) {\n\t\t\tmarkerData.push({\n\t\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t\t...setting.range,\n\t\t\t\tmessage: nls.localize('unsupportedWindowSetting', \"This setting cannot be applied in this workspace. It will be applied when you open the containing workspace folder directly.\")\n\t\t\t});\n\t\t}\n\n\t\tif (!this.workspaceTrustManagementService.isWorkspaceTrusted() && configuration.restricted) {\n\t\t\tconst marker = this.generateUntrustedSettingMarker(setting);\n\t\t\tmarkerData.push(marker);\n\t\t\tconst codeActions = this.generateUntrustedSettingCodeActions([marker]);\n\t\t\tthis.addCodeActions(marker, codeActions);\n\t\t}\n\t}\n\n\tprivate generateUnsupportedApplicationSettingMarker(setting: ISetting): IMarkerData {\n\t\treturn {\n\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t...setting.range,\n\t\t\tmessage: nls.localize('unsupportedApplicationSetting', \"This setting has an application scope and can be set only in the user settings file.\")\n\t\t};\n\t}\n\n\tprivate generateUnsupportedMachineSettingMarker(setting: ISetting): IMarkerData {\n\t\treturn {\n\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t...setting.range,\n\t\t\tmessage: nls.localize('unsupportedMachineSetting', \"This setting can only be applied in user settings in local window or in remote settings in remote window.\")\n\t\t};\n\t}\n\n\tprivate generateUntrustedSettingMarker(setting: ISetting): IMarkerData {\n\t\treturn {\n\t\t\tseverity: MarkerSeverity.Warning,\n\t\t\t...setting.range,\n\t\t\tmessage: nls.localize('untrustedSetting', \"This setting can only be applied in a trusted workspace.\")\n\t\t};\n\t}\n\n\tprivate gemerateUnknownConfigurationMarker(setting: ISetting): IMarkerData {\n\t\treturn {\n\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t...setting.range,\n\t\t\tmessage: nls.localize('unknown configuration setting', \"Unknown Configuration Setting\")\n\t\t};\n\t}\n\n\tprivate generateUntrustedSettingCodeActions(diagnostics: IMarkerData[]): languages.CodeAction[] {\n\t\treturn [{\n\t\t\ttitle: nls.localize('manage workspace trust', \"Manage Workspace Trust\"),\n\t\t\tcommand: {\n\t\t\t\tid: 'workbench.trust.manage',\n\t\t\t\ttitle: nls.localize('manage workspace trust', \"Manage Workspace Trust\")\n\t\t\t},\n\t\t\tdiagnostics,\n\t\t\tkind: CodeActionKind.QuickFix.value\n\t\t}];\n\t}\n\n\tprivate addCodeActions(range: IRange, codeActions: languages.CodeAction[]): void {\n\t\tlet actions = this.codeActions.get(this.settingsEditorModel.uri);\n\t\tif (!actions) {\n\t\t\tactions = [];\n\t\t\tthis.codeActions.set(this.settingsEditorModel.uri, actions);\n\t\t}\n\t\tactions.push([Range.lift(range), codeActions]);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis.markerService.remove('UnsupportedSettingsRenderer', [this.settingsEditorModel.uri]);\n\t\tthis.codeActions.clear();\n\t\tsuper.dispose();\n\t}\n\n}\n\nclass WorkspaceConfigurationRenderer extends Disposable {\n\tprivate static readonly supportedKeys = ['folders', 'tasks', 'launch', 'extensions', 'settings', 'remoteAuthority', 'transient'];\n\n\tprivate readonly decorations = this.editor.createDecorationsCollection();\n\tprivate renderingDelayer: Delayer<void> = new Delayer<void>(200);\n\n\tconstructor(private editor: ICodeEditor, private workspaceSettingsEditorModel: SettingsEditorModel,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IMarkerService private readonly markerService: IMarkerService\n\t) {\n\t\tsuper();\n\t\tthis._register(this.editor.getModel()!.onDidChangeContent(() => this.renderingDelayer.trigger(() => this.render())));\n\t}\n\n\trender(): void {\n\t\tconst markerData: IMarkerData[] = [];\n\t\tif (this.workspaceContextService.getWorkbenchState() === WorkbenchState.WORKSPACE && this.workspaceSettingsEditorModel instanceof WorkspaceConfigurationEditorModel) {\n\t\t\tconst ranges: IRange[] = [];\n\t\t\tfor (const settingsGroup of this.workspaceSettingsEditorModel.configurationGroups) {\n\t\t\t\tfor (const section of settingsGroup.sections) {\n\t\t\t\t\tfor (const setting of section.settings) {\n\t\t\t\t\t\tif (!WorkspaceConfigurationRenderer.supportedKeys.includes(setting.key)) {\n\t\t\t\t\t\t\tmarkerData.push({\n\t\t\t\t\t\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\t\t\t\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t\t\t\t\t\t...setting.range,\n\t\t\t\t\t\t\t\tmessage: nls.localize('unsupportedProperty', \"Unsupported Property\")\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.decorations.set(ranges.map(range => this.createDecoration(range)));\n\t\t}\n\t\tif (markerData.length) {\n\t\t\tthis.markerService.changeOne('WorkspaceConfigurationRenderer', this.workspaceSettingsEditorModel.uri, markerData);\n\t\t} else {\n\t\t\tthis.markerService.remove('WorkspaceConfigurationRenderer', [this.workspaceSettingsEditorModel.uri]);\n\t\t}\n\t}\n\n\tprivate static readonly _DIM_CONFIGURATION_ = ModelDecorationOptions.register({\n\t\tdescription: 'dim-configuration',\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tinlineClassName: 'dim-configuration'\n\t});\n\n\tprivate createDecoration(range: IRange): IModelDeltaDecoration {\n\t\treturn {\n\t\t\trange,\n\t\t\toptions: WorkspaceConfigurationRenderer._DIM_CONFIGURATION_\n\t\t};\n\t}\n\n\toverride dispose(): void {\n\t\tthis.markerService.remove('WorkspaceConfigurationRenderer', [this.workspaceSettingsEditorModel.uri]);\n\t\tthis.decorations.clear();\n\t\tsuper.dispose();\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,aAAa,8BAA8B;AACpD,SAAS,SAAS,qBAAqB;AACvC,SAAS,eAAe;AACxB,SAAS,yBAAyB;AAClC,SAAS,yBAAyB;AAClC,SAAS,SAAS,aAAa;AAC/B,SAAS,mBAAmB;AAC5B,SAAS,YAAY,mBAAmB;AACxC,SAAS,mBAAmB;AAC5B,SAAS,eAAe;AACxB,SAAS,iBAAiB;AAC1B,SAAS,aAAa,mBAAmB,uBAAuB;AAChE,SAAS,oBAAoB;AAC7B,SAAS,gBAAgB;AACzB,SAAS,QAAQ,aAAa;AAC9B,SAAS,iBAAiB;AAC1B,SAAS,mCAAmC;AAC5C,YAAY,kBAAkB;AAC9B,YAAY,eAAe;AAC3B,SAAS,uBAAuB,YAAY,8BAA8B;AAC1E,SAAS,8BAA8B;AACvC,SAAS,gCAAgC;AACzC,SAAS,sBAAsB;AAC/B,YAAY,SAAS;AACrB,SAAS,qBAAqB,6BAA6B;AAC3D,SAAS,cAAc,yBAAyB,oBAAoB,8BAA8B,wBAAwB,wCAAwC,yBAAyB,kCAAkC;AAC7N,SAAS,2BAA2B;AACpC,SAAS,6BAA6B;AACtC,SAAS,aAAa,gBAAgB,gBAAgB,iBAAiB;AACvE,SAAS,gBAAgB;AACzB,SAAS,2BAA2B;AACpC,SAAS,gCAAgC;AACzC,SAAS,0BAA0B,sBAAsB;AACzD,SAAS,wCAAwC;AACjD,SAAS,iCAAiC;AAC1C,SAAS,wBAAwB;AACjC,SAAS,4BAA4B;AACrC,SAAS,4BAA4B,sCAAsC;AAC3E,SAAS,oCAAoC;AAC7C,SAAS,yBAAyB,qBAAqB,UAAU,sBAAsB,sBAAsB;AAC7G,SAAS,4BAA4B,qBAAqB,yCAAyC;AACnG,SAAS,+BAA+B;AAUjC,IAAM,uBAAN,cAAmC,WAA2C;AAAA,EASpF,YAAsB,QAA8B,kBACpB,oBACS,sBACP,sBAChC;AACD,UAAM;AALe;AAA8B;AACpB;AACS;AACP;AAGjC,SAAK,qBAAqB,KAAK,UAAU,qBAAqB,eAAe,oBAAoB,MAAM,CAAC;AACxG,SAAK,4BAA4B,KAAK,UAAU,KAAK,qBAAqB,eAAe,qBAAqB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,CAAC;AAC1K,SAAK,UAAU,KAAK,0BAA0B,gBAAgB,CAAC,EAAE,KAAK,OAAO,OAAO,MAAM,KAAK,iBAAiB,KAAK,OAAO,MAAM,CAAC,CAAC;AACpI,SAAK,UAAU,KAAK,OAAO,SAAS,EAAG,mBAAmB,MAAM,KAAK,mBAAmB,QAAQ,MAAM,KAAK,eAAe,CAAC,CAAC,CAAC;AAC7H,SAAK,8BAA8B,KAAK,UAAU,qBAAqB,eAAe,6BAA6B,QAAQ,gBAAgB,CAAC;AAAA,EAC7I;AAAA,EA5ED,OAwDqF;AAAA;AAAA;AAAA,EAE5E;AAAA,EACA;AAAA,EACA,qBAAoC,IAAI,QAAc,GAAG;AAAA,EACzD;AAAA,EAEA;AAAA,EAeR,SAAe;AACd,SAAK,0BAA0B,OAAO,KAAK,iBAAiB,gBAAgB,KAAK,0BAA0B;AAC3G,SAAK,4BAA4B,OAAO;AAAA,EACzC;AAAA,EAEA,iBAAiB,KAAa,OAAY,QAA+B;AACxE,UAAM,sBAAsB,OAAO,aAAa,2BAA2B,OAAO,WAAW,GAAG,IAAI;AACpG,UAAM,WAAW,KAAK,iBAAiB;AACvC,SAAK,qBAAqB,YAAY,KAAK,OAAO,EAAE,qBAAqB,SAAS,GAAG,KAAK,iBAAiB,mBAAmB,EAC5H,KAAK,MAAM,KAAK,iBAAiB,MAAM,CAAC;AAAA,EAC3C;AAAA,EAEQ,iBAAuB;AAC9B,QAAI,CAAC,KAAK,OAAO,SAAS,GAAG;AAE5B;AAAA,IACD;AACA,SAAK,OAAO;AAAA,EACb;AAAA,EAEQ,iBAAiB,SAAmB;AAC3C,SAAK,OAAO,MAAM;AAClB,cAAU,KAAK,WAAW,OAAO;AACjC,QAAI,SAAS;AAEZ,WAAK,OAAO,aAAa,QAAQ,UAAU;AAC3C,WAAK,mBAAmB,UAAU,SAAS,IAAI;AAAA,IAChD;AAAA,EACD;AAAA,EAEQ,WAAW,SAAyC;AAC3D,UAAM,EAAE,KAAK,WAAW,IAAI;AAC5B,QAAI,YAAY;AACf,YAAMA,WAAU,KAAK,WAAW,UAAU;AAC1C,iBAAW,YAAYA,SAAS,WAAY;AAC3C,YAAI,SAAS,QAAQ,KAAK;AACzB,iBAAO;AAAA,QACR;AAAA,MACD;AACA,aAAO;AAAA,IACR;AAEA,WAAO,KAAK,iBAAiB,cAAc,GAAG;AAAA,EAC/C;AAAA,EAEA,gBAAgB,SAAyB;AACxC,UAAM,IAAI,KAAK,WAAW,OAAO;AACjC,QAAI,GAAG;AACN,WAAK,mBAAmB,UAAU,GAAG,IAAI;AACzC,WAAK,OAAO,YAAY,EAAE,YAAY,EAAE,SAAS,iBAAiB,QAAQ,EAAE,SAAS,YAAY,CAAC;AAAA,IACnG,OAAO;AACN,WAAK,mBAAmB,MAAM,IAAI;AAAA,IACnC;AAAA,EACD;AAAA,EAEA,WAAW,SAAyB;AACnC,SAAK,mBAAmB,MAAM,IAAI;AAAA,EACnC;AAAA,EAEA,eAAe,SAA4B;AAC1C,UAAM,kBAAkB,KAAK,WAAW,OAAO;AAC/C,WAAO,CAAC,EAAE,mBAAmB,KAAK,0BAA0B,kBAAkB,eAAe;AAAA,EAC9F;AAED;AAtFa,uBAAN;AAAA,EAUJ;AAAA,EACA;AAAA,EACA;AAAA,GAZU;AAwFN,IAAM,4BAAN,cAAwC,qBAAqD;AAAA,EAhJpG,OAgJoG;AAAA;AAAA;AAAA,EAE3F;AAAA,EAER,YAAY,QAAqB,kBACX,oBACE,sBACA,sBACtB;AACD,UAAM,QAAQ,kBAAkB,oBAAoB,sBAAsB,oBAAoB;AAC9F,SAAK,iCAAiC,KAAK,UAAU,qBAAqB,eAAe,gCAAgC,QAAQ,gBAAgB,CAAC;AAAA,EACnJ;AAAA,EAES,SAAe;AACvB,UAAM,OAAO;AACb,SAAK,+BAA+B,OAAO;AAAA,EAC5C;AACD;AAjBa,4BAAN;AAAA,EAKJ;AAAA,EACA;AAAA,EACA;AAAA,GAPU;AAwBb,IAAM,sBAAN,cAAkC,WAAW;AAAA,EAY5C,YAAoB,QAA6B,sBACxC,oBACgC,sBACA,sBACF,oBACrC;AACD,UAAM;AANa;AAA6B;AACxC;AACgC;AACA;AACF;AAItC,SAAK,wCAA+E,KAAK,UAAU,KAAK,qBAAqB,eAAe,sBAAsB,MAAM,CAAC;AACzK,SAAK,mCAA0E,KAAK,UAAU,KAAK,qBAAqB,eAAe,sBAAsB,MAAM,CAAC;AACpK,SAAK,2CAA2C,IAAI,QAAc,EAAE;AAEpE,SAAK,UAAU,KAAK,sCAAsC,QAAQ,OAAK,KAAK,qBAAqB,KAAK,uCAAuC,CAAC,CAAC,CAAC;AAChJ,SAAK,UAAU,KAAK,iCAAiC,QAAQ,OAAK,KAAK,qBAAqB,KAAK,kCAAkC,CAAC,CAAC,CAAC;AAEtI,SAAK,UAAU,KAAK,OAAO,0BAA0B,yBAAuB,KAAK,kBAAkB,mBAAmB,CAAC,CAAC;AACxH,SAAK,UAAU,KAAK,OAAO,YAAY,oBAAkB,KAAK,aAAa,cAAc,CAAC,CAAC;AAC3F,SAAK,UAAU,KAAK,OAAO,yBAAyB,MAAM,KAAK,uBAAuB,CAAC,CAAC;AAAA,EACzF;AAAA,EAtMD,OAwK6C;AAAA;AAAA;AAAA,EAEpC;AAAA,EACA;AAAA,EAEA,iBAAmC,CAAC;AAAA,EAC5C;AAAA,EACQ;AAAA,EAES,mBAAkF,IAAI,QAA8D;AAAA,EAC5J,kBAA+E,KAAK,iBAAiB;AAAA,EAsB9G,OAAO,gBAAkC,4BAAqE;AAC7G,SAAK,sCAAsC,KAAK;AAChD,SAAK,iCAAiC,KAAK;AAC3C,SAAK,iBAAiB;AACtB,SAAK,6BAA6B;AAElC,UAAM,WAAW,KAAK,YAAY,KAAK,OAAO,YAAY,EAAG,UAAU;AACvE,QAAI,SAAS,QAAQ;AACpB,WAAK,0BAA0B,KAAK,uCAAuC,QAAQ;AAAA,IACpF;AAAA,EACD;AAAA,EAEQ,oBAA6B;AACpC,WAAO,KAAK,gCAAgC;AAAA,EAC7C;AAAA,EAEQ,yBAA+B;AACtC,QAAI,CAAC,KAAK,OAAO,UAAU,aAAa,WAAW,GAAG;AACrD,WAAK,sCAAsC,KAAK;AAChD,WAAK,iCAAiC,KAAK;AAAA,IAC5C;AAAA,EACD;AAAA,EAEQ,kBAAkB,qBAAkD;AAC3E,SAAK,iCAAiC,KAAK;AAC3C,UAAM,WAAW,KAAK,YAAY,oBAAoB,SAAS,UAAU;AACzE,QAAI,SAAS,QAAQ;AACpB,WAAK,0BAA0B,KAAK,uCAAuC,QAAQ;AAAA,IACpF,OAAO;AACN,WAAK,sCAAsC,KAAK;AAAA,IACjD;AAAA,EACD;AAAA,EAEQ,aAAa,gBAAyC;AAC7D,UAAM,uBAAuB,KAAK,kCAAkC,cAAc;AAClF,QAAI,sBAAsB;AACzB,WAAK,YAAY,oBAAoB;AACrC;AAAA,IACD;AACA,SAAK,mBAAmB,MAAM;AAC9B,SAAK,yCAAyC,QAAQ,MAAM,KAAK,uCAAuC,cAAc,CAAC;AAAA,EACxH;AAAA,EAEQ,kCAAkC,gBAA+E;AACxH,QAAI,eAAe,OAAO,SAAS,gBAAgB,qBAAqB;AACvE,YAAM,OAAO,eAAe,OAAO,SAAS;AAC5C,UAAI,KAAK,iCAAiC,QAAQ,MAAM,QAAQ,KAAK,iCAAiC,UAAU,GAAG;AAClH,eAAO,KAAK;AAAA,MACb;AACA,UAAI,KAAK,sCAAsC,QAAQ,MAAM,QAAQ,KAAK,sCAAsC,UAAU,GAAG;AAC5H,eAAO,KAAK;AAAA,MACb;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EAEQ,uCAAuC,gBAAyC;AACvF,UAAM,WAAW,eAAe,OAAO,WAAW,KAAK,YAAY,eAAe,OAAO,SAAS,UAAU,IAAI;AAChH,QAAI,YAAY,SAAS,QAAQ;AAChC,WAAK,0BAA0B,KAAK,kCAAkC,QAAQ;AAAA,IAC/E,OAAO;AACN,WAAK,iCAAiC,KAAK;AAAA,IAC5C;AAAA,EACD;AAAA,EAEQ,0BAA0B,uBAAuD,UAA6B;AACrH,UAAM,OAAO,SAAS,CAAC,EAAE,WAAW;AACpC,QAAI,KAAK,OAAO,UAAU,aAAa,WAAW,KAAK,KAAK,+BAA+B,IAAI,GAAG;AACjG,4BAAsB,KAAK,MAAM,IAAI,SAAS,aAAa,MAAM,GAAG,QAAQ;AAC5E,YAAM,6BAA6B,0BAA0B,KAAK,wCAAwC,KAAK,mCAAmC,KAAK;AACvJ,iCAA2B,KAAK;AAAA,IACjC;AAAA,EACD;AAAA,EAEQ,+BAA+B,MAAuB;AAC7D,UAAM,cAAc,KAAK,OAAO,mBAAmB,IAAI;AACvD,QAAI,aAAa;AAChB,iBAAW,EAAE,QAAQ,KAAK,aAAa;AACtC,YAAI,QAAQ,wBAAwB,QAAQ,qBAAqB,QAAQ,UAAU,YAAY,gBAAgB,CAAC,MAAM,IAAI;AACzH,iBAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EAEQ,YAAY,YAAuC;AAC1D,UAAM,mBAAmB,KAAK,qBAAqB;AACnD,WAAO,KAAK,wBAAwB,UAAU,EAAE,OAAO,aAAW;AACjE,YAAM,oBAAoB,iBAAiB,QAAQ,GAAG;AACtD,UAAI,mBAAmB;AACtB,YAAI,kBAAkB,UAAU,KAAK,qBAAqB,QAAQ,QAAQ,GAAG,EAAE,gBAAgB,QAAW;AACzG,iBAAO;AAAA,QACR;AACA,YAAI,KAAK,kBAAkB,GAAG;AAC7B,cAAI,QAAQ,QAAQ,UAAU;AAE7B,mBAAO;AAAA,UACR;AACA,iBAAO;AAAA,QACR;AACA,YAAI,kBAAkB,SAAS,aAAa,kBAAkB,MAAM;AACnE,cAA0B,KAAK,qBAAsB,wBAAwB,oBAAoB,kBAAkB;AAClH,mBAAO;AAAA,UACR;AACA,cAAI,kBAAkB,UAAU,mBAAmB,YAAY,kBAAkB,UAAU,mBAAmB,sBAAsB;AACnI,mBAAO;AAAA,UACR;AAAA,QACD;AAAA,MACD;AACA,aAAO;AAAA,IACR,CAAC;AAAA,EACF;AAAA,EAEQ,wBAAwB,YAAuC;AAEtE,QAAI,QAAQ;AAEZ,UAAM,WAA8B,CAAC;AACrC,eAAW,SAAS,KAAK,gBAAgB;AACxC,UAAI,MAAM,MAAM,kBAAkB,YAAY;AAC7C;AAAA,MACD;AACA,UAAI,cAAc,MAAM,MAAM,mBAAmB,cAAc,MAAM,MAAM,eAAe;AACzF,mBAAW,WAAW,MAAM,UAAU;AACrC,qBAAW,WAAW,QAAQ,UAAU;AACvC,gBAAI,QAAQ,MAAM,kBAAkB,YAAY;AAC/C;AAAA,YACD;AACA,gBAAI,cAAc,QAAQ,MAAM,mBAAmB,cAAc,QAAQ,MAAM,eAAe;AAC7F,kBAAI,CAAC,KAAK,kBAAkB,KAAK,QAAQ,UAAW,QAAQ;AAE3D,2BAAW,mBAAmB,QAAQ,WAAY;AACjD,sBAAI,cAAc,gBAAgB,MAAM,mBAAmB,cAAc,gBAAgB,MAAM,eAAe;AAC7G,6BAAS,KAAK,EAAE,GAAG,iBAAiB,OAAO,SAAS,MAAM,GAAG,CAAC;AAAA,kBAC/D;AAAA,gBACD;AAAA,cACD,OAAO;AACN,yBAAS,KAAK,EAAE,GAAG,SAAS,OAAO,SAAS,MAAM,GAAG,CAAC;AAAA,cACvD;AAAA,YACD;AAEA;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EAEQ,YAAY,sBAA4D;AAC/E,SAAK,mBAAmB,UAAU,qBAAqB,YAAY,CAAC,CAAC;AAAA,EACtE;AAAA,EAEQ,qBAAqB,sBAA6D,GAA4B;AACrH,gBAAY,KAAK,EAAE,OAAO,IAAI;AAE9B,UAAM,UAAU,KAAK,YAAY,qBAAqB,QAAQ,CAAC,EAAE,WAAW,IAAI,KAAK,WAAW,qBAAqB,YAAY,CAAC,GAAG,KAAK,qBAAqB,EAAE,qBAAqB,YAAY,CAAC,EAAE,GAAG,CAAC,IACtM,qBAAqB,YAAY,IAAI,aAAW,IAAI,cAAc,uBAAuB,QAAQ,GAAG,IAAI,QAAQ,KAAK,KAAK,WAAW,SAAS,KAAK,qBAAqB,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC;AAC3L,SAAK,mBAAmB,gBAAgB;AAAA,MACvC,WAAW,6BAAM,EAAE,OAAR;AAAA,MACX,YAAY,6BAAM,SAAN;AAAA,IACb,CAAC;AAAA,EACF;AAAA,EAEA,kBAAkB,SAA4B;AAC7C,UAAM,YAAY,QAAQ,SAAS;AACnC,UAAM,WAAW,KAAK,YAAY,SAAS;AAC3C,QAAI,CAAC,SAAS,QAAQ;AACrB,aAAO;AAAA,IACR;AAEA,SAAK,iCAAiC,KAAK,WAAW,IAAI,QAAQ;AAClE,UAAM,UAAU,KAAK,WAAW,KAAK,iCAAiC,YAAY,CAAC,GAAG,KAAK,qBAAqB,EAAE,KAAK,iCAAiC,YAAY,CAAC,EAAE,GAAG,CAAC;AAC3K,SAAK,mBAAmB,gBAAgB;AAAA,MACvC,WAAW,6BAAM,KAAK,iBAAiB,IAAI,SAAS,WAAW,CAAC,CAAC,GAAtD;AAAA,MACX,YAAY,6BAAM,SAAN;AAAA,IACb,CAAC;AAED,WAAO;AAAA,EACR;AAAA,EAEQ,iBAAiB,UAA8C;AACtE,UAAM,iBAAiB,KAAK,OAAO,2BAA2B,QAAQ;AACtE,UAAM,eAAe,uBAAuB,KAAK,OAAO,WAAW,CAAE;AACrE,UAAM,IAAI,aAAa,OAAO,eAAgB;AAC9C,UAAM,IAAI,aAAa,MAAM,eAAgB,MAAM,eAAgB;AAEnE,WAAO,EAAE,GAAG,GAAG,IAAI,GAAG;AAAA,EACvB;AAAA,EAEQ,uBAAiF;AACxF,WAAO,SAAS,GAA2B,wBAAwB,aAAa,EAAE,2BAA2B;AAAA,EAC9G;AAAA,EAEQ,WAAW,SAA0B,YAAoC;AAChF,QAAI,WAAW,SAAS,WAAW;AAClC,aAAO,CAAC;AAAA,QACP,IAAI;AAAA,QACJ,OAAO;AAAA,QACP,SAAS;AAAA,QACT,SAAS;AAAA,QACT,KAAK,6BAAM,KAAK,cAAc,QAAQ,KAAK,MAAM,OAAO,GAAnD;AAAA,QACL,OAAO;AAAA,MACR,GAAG;AAAA,QACF,IAAI;AAAA,QACJ,OAAO;AAAA,QACP,SAAS;AAAA,QACT,SAAS;AAAA,QACT,KAAK,6BAAM,KAAK,cAAc,QAAQ,KAAK,OAAO,OAAO,GAApD;AAAA,QACL,OAAO;AAAA,MACR,CAAC;AAAA,IACF;AACA,QAAI,WAAW,MAAM;AACpB,aAAO,WAAW,KAAK,IAAI,WAAS;AACnC,eAAO;AAAA,UACN,IAAI;AAAA,UACJ,OAAO,KAAK,UAAU,KAAK;AAAA,UAC3B,SAAS,KAAK,UAAU,KAAK;AAAA,UAC7B,SAAS;AAAA,UACT,KAAK,6BAAM,KAAK,cAAc,QAAQ,KAAK,OAAO,OAAO,GAApD;AAAA,UACL,OAAO;AAAA,QACR;AAAA,MACD,CAAC;AAAA,IACF;AACA,WAAO,KAAK,kBAAkB,OAAO;AAAA,EACtC;AAAA,EAEQ,kBAAkB,SAAqC;AAC9D,QAAI,KAAK,kBAAkB,GAAG;AAC7B,YAAM,sBAAsB,KAAK,2BAA2B,cAAc,QAAQ,GAAG;AACrF,aAAO,CAAC;AAAA,QACP,IAAI;AAAA,QACJ,OAAO,sBAAsB,IAAI,SAAS,uBAAuB,qBAAqB,IAAI,IAAI,SAAS,oBAAoB,kBAAkB;AAAA,QAC7I,SAAS,sBAAsB,IAAI,SAAS,uBAAuB,qBAAqB,IAAI,IAAI,SAAS,oBAAoB,kBAAkB;AAAA,QAC/I,SAAS;AAAA,QACT,KAAK,6BAAM,KAAK,cAAc,QAAQ,KAAK,QAAQ,OAAO,OAAO,GAA5D;AAAA,QACL,OAAO;AAAA,MACR,CAAC;AAAA,IACF;AACA,WAAO,CAAC;AAAA,EACT;AAAA,EAEQ,cAAc,KAAa,OAAY,QAA+B;AAC7E,SAAK,iBAAiB,KAAK,EAAE,KAAK,OAAO,OAAO,CAAC;AAAA,EAClD;AACD;AAtRM,sBAAN;AAAA,EAcG;AAAA,EACA;AAAA,EACA;AAAA,GAhBG;AAwRN,IAAM,qBAAN,cAAiC,WAAW;AAAA,EAK3C,YAAoB,QAA4C,sBAA6C;AAC5G,UAAM;AADa;AAEnB,SAAK,mBAAmB,KAAK,UAAU,qBAAqB,eAAe,yBAAyB,CAAC;AACrG,SAAK,sBAAsB,KAAK,UAAU,qBAAqB,eAAe,yBAAyB,CAAC;AAAA,EACzG;AAAA,EAzcD,OAgc4C;AAAA;AAAA;AAAA,EAEnC;AAAA,EACA;AAAA,EAQR,UAAU,SAAmB,MAAe,OAAO;AAClD,SAAK,oBAAoB,qBAAqB;AAC9C,SAAK,iBAAiB,qBAAqB;AAE3C,UAAM,cAAc,MAAM,KAAK,mBAAmB,KAAK;AACvD,gBAAY,eAAe;AAAA,MAC1B,OAAO,QAAQ;AAAA,MACf,UAAU,KAAK,OAAO,SAAS,EAAG;AAAA,IACnC,GAAG,KAAK,MAAM;AAEd,SAAK,OAAO,oCAAoC,QAAQ,WAAW,iBAAiB,aAAa,WAAW,MAAM;AAAA,EACnH;AAAA,EAEA,MAAM,MAAe,OAAa;AACjC,SAAK,oBAAoB,qBAAqB;AAC9C,QAAI,KAAK;AACR,WAAK,iBAAiB,qBAAqB;AAAA,IAC5C;AAAA,EACD;AACD;AA9BM,qBAAN;AAAA,EAK2C;AAAA,GALrC;AAgCN,IAAM,8BAAN,cAA0C,WAAmD;AAAA,EAM5F,YACkB,QACA,qBACgB,eACc,oBACE,sBACE,iCACb,oBACZ,yBACgB,wBACC,yBAC1C;AACD,UAAM;AAXW;AACA;AACgB;AACc;AACE;AACE;AACb;AAEI;AACC;AAG3C,SAAK,UAAU,KAAK,OAAO,SAAS,EAAG,mBAAmB,MAAM,KAAK,cAAc,CAAC,CAAC;AACrF,SAAK,UAAU,MAAM,OAAO,KAAK,qBAAqB,0BAA0B,OAAK,EAAE,WAAW,oBAAoB,OAAO,EAAE,MAAM,KAAK,cAAc,CAAC,CAAC;AAC1J,SAAK,UAAU,wBAAwB,mBAAmB,SAAS,EAAE,SAAS,oBAAoB,IAAI,KAAK,GAAG,IAAI,CAAC;AACnH,SAAK,UAAU,uBAAuB,0BAA0B,MAAM,KAAK,cAAc,CAAC,CAAC;AAAA,EAC5F;AAAA,EAvfD,OAge6F;AAAA;AAAA;AAAA,EAEpF,mBAAkC,IAAI,QAAc,GAAG;AAAA,EAE9C,cAAc,IAAI,YAA+C,SAAO,KAAK,mBAAmB,OAAO,iBAAiB,GAAG,CAAC;AAAA,EAqBrI,gBAAsB;AAC7B,SAAK,iBAAiB,QAAQ,MAAM,KAAK,OAAO,CAAC;AAAA,EAClD;AAAA,EAEO,SAAe;AACrB,SAAK,YAAY,MAAM;AACvB,UAAM,aAA4B,KAAK,mBAAmB;AAC1D,QAAI,WAAW,QAAQ;AACtB,WAAK,cAAc,UAAU,+BAA+B,KAAK,oBAAoB,KAAK,UAAU;AAAA,IACrG,OAAO;AACN,WAAK,cAAc,OAAO,+BAA+B,CAAC,KAAK,oBAAoB,GAAG,CAAC;AAAA,IACxF;AAAA,EACD;AAAA,EAEA,MAAM,mBAAmB,OAAmB,OAA0B,SAAsC,OAA6D;AACxK,UAAM,UAAkC,CAAC;AACzC,UAAM,qBAAqB,KAAK,YAAY,IAAI,MAAM,GAAG;AACzD,QAAI,oBAAoB;AACvB,iBAAW,CAAC,kBAAkB,WAAW,KAAK,oBAAoB;AACjE,YAAI,iBAAiB,cAAc,KAAK,GAAG;AAC1C,kBAAQ,KAAK,GAAG,WAAW;AAAA,QAC5B;AAAA,MACD;AAAA,IACD;AACA,WAAO;AAAA,MACN;AAAA,MACA,SAAS,6BAAM;AAAA,MAAE,GAAR;AAAA,IACV;AAAA,EACD;AAAA,EAEQ,qBAAoC;AAC3C,UAAM,aAA4B,CAAC;AACnC,UAAM,wBAAwB,SAAS,GAA2B,wBAAwB,aAAa,EAAE,2BAA2B;AACpI,eAAW,iBAAiB,KAAK,oBAAoB,gBAAgB;AACpE,iBAAW,WAAW,cAAc,UAAU;AAC7C,mBAAW,WAAW,QAAQ,UAAU;AACvC,cAAI,wBAAwB,KAAK,QAAQ,GAAG,GAAG;AAC9C,gBAAI,QAAQ,WAAW;AACtB,mBAAK,gBAAgB,QAAQ,WAAW,uBAAuB,UAAU;AAAA,YAC1E;AACA;AAAA,UACD;AACA,gBAAM,gBAAgB,sBAAsB,QAAQ,GAAG;AACvD,cAAI,eAAe;AAClB,gBAAI,KAAK,0BAA0B,SAAS,eAAe,UAAU,GAAG;AACvE;AAAA,YACD;AACA,oBAAQ,KAAK,oBAAoB,qBAAqB;AAAA,cACrD,KAAK,oBAAoB;AACxB,qBAAK,6BAA6B,SAAS,eAAe,UAAU;AACpE;AAAA,cACD,KAAK,oBAAoB;AACxB,qBAAK,8BAA8B,SAAS,eAAe,UAAU;AACrE;AAAA,cACD,KAAK,oBAAoB;AACxB,qBAAK,6BAA6B,SAAS,eAAe,UAAU;AACpE;AAAA,cACD,KAAK,oBAAoB;AACxB,qBAAK,mCAAmC,SAAS,eAAe,UAAU;AAC1E;AAAA,YACF;AAAA,UACD,OAAO;AACN,uBAAW,KAAK,KAAK,mCAAmC,OAAO,CAAC;AAAA,UACjE;AAAA,QACD;AAAA,MACD;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EAEQ,0BAA0B,SAAmB,eAA6C,YAAoC;AACrI,QAAI,CAAC,cAAc,QAAQ;AAC1B,aAAO;AAAA,IACR;AACA,QAAI,KAAK,qBAAqB,QAAQ,QAAQ,GAAG,EAAE,gBAAgB,QAAW;AAC7E,aAAO;AAAA,IACR;AACA,QAAI,KAAK,oBAAoB,wBAAwB,oBAAoB,SAAS;AACjF,aAAO;AAAA,IACR;AACA,eAAW,KAAK;AAAA,MACf,UAAU,eAAe;AAAA,MACzB,MAAM,CAAC,UAAU,WAAW;AAAA,MAC5B,GAAG,QAAQ;AAAA,MACX,SAAS,IAAI,SAAS,4BAA4B,+EAA+E;AAAA,IAClI,CAAC;AACD,WAAO;AAAA,EACR;AAAA,EAEQ,gBAAgB,WAAuB,uBAAkF,YAAiC;AACjK,eAAW,WAAW,aAAa,CAAC,GAAG;AACtC,YAAM,gBAAgB,sBAAsB,QAAQ,GAAG;AACvD,UAAI,eAAe;AAClB,YAAI,cAAc,UAAU,mBAAmB,sBAAsB;AACpE,qBAAW,KAAK;AAAA,YACf,UAAU,eAAe;AAAA,YACzB,MAAM,CAAC,UAAU,WAAW;AAAA,YAC5B,GAAG,QAAQ;AAAA,YACX,SAAS,IAAI,SAAS,oCAAoC,2FAA2F;AAAA,UACtJ,CAAC;AAAA,QACF;AAAA,MACD,OAAO;AACN,mBAAW,KAAK,KAAK,mCAAmC,OAAO,CAAC;AAAA,MACjE;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,6BAA6B,SAAmB,eAA6C,YAAiC;AACrI,QAAI,CAAC,KAAK,uBAAuB,eAAe,aAAa,CAAC,KAAK,uBAAuB,eAAe,iBAAiB,UAAU;AACnI,UAAI,QAAQ,KAAK,wBAAwB,eAAe,kBAAkB,KAAK,oBAAoB,GAAG,KAAK,CAAC,KAAK,qBAAqB,+BAA+B,QAAQ,GAAG,GAAG;AAElL,mBAAW,KAAK;AAAA,UACf,UAAU,eAAe;AAAA,UACzB,MAAM,CAAC,UAAU,WAAW;AAAA,UAC5B,GAAG,QAAQ;AAAA,UACX,SAAS,IAAI,SAAS,8CAA8C,8HAA8H;AAAA,QACnM,CAAC;AAAA,MACF,WAAW,QAAQ,KAAK,uBAAuB,eAAe,kBAAkB,KAAK,oBAAoB,GAAG,GAAG;AAC9G,YAAI,cAAc,UAAU,mBAAmB,aAAa;AAE3D,qBAAW,KAAK,KAAK,4CAA4C,OAAO,CAAC;AAAA,QAC1E,WAAW,KAAK,qBAAqB,+BAA+B,QAAQ,GAAG,GAAG;AAEjF,qBAAW,KAAK;AAAA,YACf,UAAU,eAAe;AAAA,YACzB,MAAM,CAAC,UAAU,WAAW;AAAA,YAC5B,GAAG,QAAQ;AAAA,YACX,SAAS,IAAI,SAAS,oDAAoD,iKAAiK,0BAA0B;AAAA,UACtQ,CAAC;AAAA,QACF;AAAA,MACD;AAAA,IACD;AACA,QAAI,KAAK,mBAAmB,oBAAoB,cAAc,UAAU,mBAAmB,WAAW,cAAc,UAAU,mBAAmB,sBAAsB;AACtK,iBAAW,KAAK;AAAA,QACf,UAAU,eAAe;AAAA,QACzB,MAAM,CAAC,UAAU,WAAW;AAAA,QAC5B,GAAG,QAAQ;AAAA,QACX,SAAS,IAAI,SAAS,mCAAmC,iGAAiG;AAAA,MAC3J,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAEQ,8BAA8B,SAAmB,eAA6C,YAAiC;AACtI,QAAI,cAAc,UAAU,mBAAmB,aAAa;AAC3D,iBAAW,KAAK,KAAK,4CAA4C,OAAO,CAAC;AAAA,IAC1E;AAAA,EACD;AAAA,EAEQ,6BAA6B,SAAmB,eAA6C,YAAiC;AACrI,QAAI,cAAc,UAAU,mBAAmB,aAAa;AAC3D,iBAAW,KAAK,KAAK,4CAA4C,OAAO,CAAC;AAAA,IAC1E;AAEA,QAAI,cAAc,UAAU,mBAAmB,SAAS;AACvD,iBAAW,KAAK,KAAK,wCAAwC,OAAO,CAAC;AAAA,IACtE;AAEA,QAAI,CAAC,KAAK,gCAAgC,mBAAmB,KAAK,cAAc,YAAY;AAC3F,YAAM,SAAS,KAAK,+BAA+B,OAAO;AAC1D,iBAAW,KAAK,MAAM;AACtB,YAAM,cAAc,KAAK,oCAAoC,CAAC,MAAM,CAAC;AACrE,WAAK,eAAe,QAAQ,WAAW;AAAA,IACxC;AAAA,EACD;AAAA,EAEQ,mCAAmC,SAAmB,eAA6C,YAAiC;AAC3I,QAAI,cAAc,UAAU,mBAAmB,aAAa;AAC3D,iBAAW,KAAK,KAAK,4CAA4C,OAAO,CAAC;AAAA,IAC1E;AAEA,QAAI,cAAc,UAAU,mBAAmB,SAAS;AACvD,iBAAW,KAAK,KAAK,wCAAwC,OAAO,CAAC;AAAA,IACtE;AAEA,QAAI,cAAc,UAAU,mBAAmB,QAAQ;AACtD,iBAAW,KAAK;AAAA,QACf,UAAU,eAAe;AAAA,QACzB,MAAM,CAAC,UAAU,WAAW;AAAA,QAC5B,GAAG,QAAQ;AAAA,QACX,SAAS,IAAI,SAAS,4BAA4B,8HAA8H;AAAA,MACjL,CAAC;AAAA,IACF;AAEA,QAAI,CAAC,KAAK,gCAAgC,mBAAmB,KAAK,cAAc,YAAY;AAC3F,YAAM,SAAS,KAAK,+BAA+B,OAAO;AAC1D,iBAAW,KAAK,MAAM;AACtB,YAAM,cAAc,KAAK,oCAAoC,CAAC,MAAM,CAAC;AACrE,WAAK,eAAe,QAAQ,WAAW;AAAA,IACxC;AAAA,EACD;AAAA,EAEQ,4CAA4C,SAAgC;AACnF,WAAO;AAAA,MACN,UAAU,eAAe;AAAA,MACzB,MAAM,CAAC,UAAU,WAAW;AAAA,MAC5B,GAAG,QAAQ;AAAA,MACX,SAAS,IAAI,SAAS,iCAAiC,sFAAsF;AAAA,IAC9I;AAAA,EACD;AAAA,EAEQ,wCAAwC,SAAgC;AAC/E,WAAO;AAAA,MACN,UAAU,eAAe;AAAA,MACzB,MAAM,CAAC,UAAU,WAAW;AAAA,MAC5B,GAAG,QAAQ;AAAA,MACX,SAAS,IAAI,SAAS,6BAA6B,2GAA2G;AAAA,IAC/J;AAAA,EACD;AAAA,EAEQ,+BAA+B,SAAgC;AACtE,WAAO;AAAA,MACN,UAAU,eAAe;AAAA,MACzB,GAAG,QAAQ;AAAA,MACX,SAAS,IAAI,SAAS,oBAAoB,0DAA0D;AAAA,IACrG;AAAA,EACD;AAAA,EAEQ,mCAAmC,SAAgC;AAC1E,WAAO;AAAA,MACN,UAAU,eAAe;AAAA,MACzB,MAAM,CAAC,UAAU,WAAW;AAAA,MAC5B,GAAG,QAAQ;AAAA,MACX,SAAS,IAAI,SAAS,iCAAiC,+BAA+B;AAAA,IACvF;AAAA,EACD;AAAA,EAEQ,oCAAoC,aAAoD;AAC/F,WAAO,CAAC;AAAA,MACP,OAAO,IAAI,SAAS,0BAA0B,wBAAwB;AAAA,MACtE,SAAS;AAAA,QACR,IAAI;AAAA,QACJ,OAAO,IAAI,SAAS,0BAA0B,wBAAwB;AAAA,MACvE;AAAA,MACA;AAAA,MACA,MAAM,eAAe,SAAS;AAAA,IAC/B,CAAC;AAAA,EACF;AAAA,EAEQ,eAAe,OAAe,aAA2C;AAChF,QAAI,UAAU,KAAK,YAAY,IAAI,KAAK,oBAAoB,GAAG;AAC/D,QAAI,CAAC,SAAS;AACb,gBAAU,CAAC;AACX,WAAK,YAAY,IAAI,KAAK,oBAAoB,KAAK,OAAO;AAAA,IAC3D;AACA,YAAQ,KAAK,CAAC,MAAM,KAAK,KAAK,GAAG,WAAW,CAAC;AAAA,EAC9C;AAAA,EAEgB,UAAgB;AAC/B,SAAK,cAAc,OAAO,+BAA+B,CAAC,KAAK,oBAAoB,GAAG,CAAC;AACvF,SAAK,YAAY,MAAM;AACvB,UAAM,QAAQ;AAAA,EACf;AAED;AAtRM,8BAAN;AAAA,EASG;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAhBG;AAwRN,IAAM,iCAAN,cAA6C,WAAW;AAAA,EAMvD,YAAoB,QAA6B,8BACL,yBACV,eAChC;AACD,UAAM;AAJa;AAA6B;AACL;AACV;AAGjC,SAAK,UAAU,KAAK,OAAO,SAAS,EAAG,mBAAmB,MAAM,KAAK,iBAAiB,QAAQ,MAAM,KAAK,OAAO,CAAC,CAAC,CAAC;AAAA,EACpH;AAAA,EApwBD,OAwvBwD;AAAA;AAAA;AAAA,EACvD,OAAwB,gBAAgB,CAAC,WAAW,SAAS,UAAU,cAAc,YAAY,mBAAmB,WAAW;AAAA,EAE9G,cAAc,KAAK,OAAO,4BAA4B;AAAA,EAC/D,mBAAkC,IAAI,QAAc,GAAG;AAAA,EAU/D,SAAe;AACd,UAAM,aAA4B,CAAC;AACnC,QAAI,KAAK,wBAAwB,kBAAkB,MAAM,eAAe,aAAa,KAAK,wCAAwC,mCAAmC;AACpK,YAAM,SAAmB,CAAC;AAC1B,iBAAW,iBAAiB,KAAK,6BAA6B,qBAAqB;AAClF,mBAAW,WAAW,cAAc,UAAU;AAC7C,qBAAW,WAAW,QAAQ,UAAU;AACvC,gBAAI,CAAC,+BAA+B,cAAc,SAAS,QAAQ,GAAG,GAAG;AACxE,yBAAW,KAAK;AAAA,gBACf,UAAU,eAAe;AAAA,gBACzB,MAAM,CAAC,UAAU,WAAW;AAAA,gBAC5B,GAAG,QAAQ;AAAA,gBACX,SAAS,IAAI,SAAS,uBAAuB,sBAAsB;AAAA,cACpE,CAAC;AAAA,YACF;AAAA,UACD;AAAA,QACD;AAAA,MACD;AACA,WAAK,YAAY,IAAI,OAAO,IAAI,WAAS,KAAK,iBAAiB,KAAK,CAAC,CAAC;AAAA,IACvE;AACA,QAAI,WAAW,QAAQ;AACtB,WAAK,cAAc,UAAU,kCAAkC,KAAK,6BAA6B,KAAK,UAAU;AAAA,IACjH,OAAO;AACN,WAAK,cAAc,OAAO,kCAAkC,CAAC,KAAK,6BAA6B,GAAG,CAAC;AAAA,IACpG;AAAA,EACD;AAAA,EAEA,OAAwB,sBAAsB,uBAAuB,SAAS;AAAA,IAC7E,aAAa;AAAA,IACb,YAAY,uBAAuB;AAAA,IACnC,iBAAiB;AAAA,EAClB,CAAC;AAAA,EAEO,iBAAiB,OAAsC;AAC9D,WAAO;AAAA,MACN;AAAA,MACA,SAAS,+BAA+B;AAAA,IACzC;AAAA,EACD;AAAA,EAES,UAAgB;AACxB,SAAK,cAAc,OAAO,kCAAkC,CAAC,KAAK,6BAA6B,GAAG,CAAC;AACnG,SAAK,YAAY,MAAM;AACvB,UAAM,QAAQ;AAAA,EACf;AACD;AA3DM,iCAAN;AAAA,EAOG;AAAA,EACA;AAAA,GARG;",
  "names": ["setting"]
}
