{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/preferences/browser/preferencesRenderers.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tEventHelper,\n\tgetDomNodePagePosition,\n} from \"../../../../base/browser/dom.js\";\nimport {\n\ttype IAction,\n\tSubmenuAction,\n} from \"../../../../base/common/actions.js\";\nimport { Delayer } from \"../../../../base/common/async.js\";\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport type { IStringDictionary } from \"../../../../base/common/collections.js\";\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport type { IJSONSchema } from \"../../../../base/common/jsonSchema.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { ResourceMap } from \"../../../../base/common/map.js\";\nimport { isEqual } from \"../../../../base/common/resources.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport {\n\ttype ICodeEditor,\n\ttype IEditorMouseEvent,\n\tMouseTargetType,\n} from \"../../../../editor/browser/editorBrowser.js\";\nimport { EditorOption } from \"../../../../editor/common/config/editorOptions.js\";\nimport { Position } from \"../../../../editor/common/core/position.js\";\nimport { type IRange, Range } from \"../../../../editor/common/core/range.js\";\nimport type { Selection } from \"../../../../editor/common/core/selection.js\";\nimport type { ICursorPositionChangedEvent } from \"../../../../editor/common/cursorEvents.js\";\nimport * as editorCommon from \"../../../../editor/common/editorCommon.js\";\nimport type * as languages from \"../../../../editor/common/languages.js\";\nimport {\n\ttype IModelDeltaDecoration,\n\ttype ITextModel,\n\tTrackedRangeStickiness,\n} from \"../../../../editor/common/model.js\";\nimport { ModelDecorationOptions } from \"../../../../editor/common/model/textModel.js\";\nimport { ILanguageFeaturesService } from \"../../../../editor/common/services/languageFeatures.js\";\nimport { CodeActionKind } from \"../../../../editor/contrib/codeAction/common/types.js\";\nimport * as nls from \"../../../../nls.js\";\nimport {\n\tConfigurationTarget,\n\tIConfigurationService,\n} from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tExtensions as ConfigurationExtensions,\n\tConfigurationScope,\n\ttype IConfigurationPropertySchema,\n\ttype IConfigurationRegistry,\n\ttype IRegisteredConfigurationPropertySchema,\n\tOVERRIDE_PROPERTY_REGEX,\n\toverrideIdentifiersFromKey,\n} from \"../../../../platform/configuration/common/configurationRegistry.js\";\nimport { IContextMenuService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\ttype IMarkerData,\n\tIMarkerService,\n\tMarkerSeverity,\n\tMarkerTag,\n} from \"../../../../platform/markers/common/markers.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport { IUserDataProfilesService } from \"../../../../platform/userDataProfile/common/userDataProfile.js\";\nimport {\n\tIWorkspaceContextService,\n\tWorkbenchState,\n} from \"../../../../platform/workspace/common/workspace.js\";\nimport { IWorkspaceTrustManagementService } from \"../../../../platform/workspace/common/workspaceTrust.js\";\nimport { RangeHighlightDecorations } from \"../../../browser/codeeditor.js\";\nimport {\n\tAPPLY_ALL_PROFILES_SETTING,\n\tIWorkbenchConfigurationService,\n} from \"../../../services/configuration/common/configuration.js\";\nimport { IWorkbenchEnvironmentService } from \"../../../services/environment/common/environmentService.js\";\nimport {\n\ttype IPreferencesEditorModel,\n\tIPreferencesService,\n\ttype ISetting,\n\ttype ISettingsEditorModel,\n\ttype ISettingsGroup,\n} from \"../../../services/preferences/common/preferences.js\";\nimport {\n\tDefaultSettingsEditorModel,\n\ttype SettingsEditorModel,\n\tWorkspaceConfigurationEditorModel,\n} from \"../../../services/preferences/common/preferencesModels.js\";\nimport { IUserDataProfileService } from \"../../../services/userDataProfile/common/userDataProfile.js\";\nimport { settingsEditIcon } from \"./preferencesIcons.js\";\nimport { EditPreferenceWidget } from \"./preferencesWidgets.js\";\n\nexport interface IPreferencesRenderer extends IDisposable {\n\trender(): void;\n\tupdatePreference(key: string, value: any, source: ISetting): void;\n\tfocusPreference(setting: ISetting): void;\n\tclearFocus(setting: ISetting): void;\n\teditPreference(setting: ISetting): boolean;\n}\n\nexport class UserSettingsRenderer\n\textends Disposable\n\timplements IPreferencesRenderer\n{\n\tprivate settingHighlighter: SettingHighlighter;\n\tprivate editSettingActionRenderer: EditSettingRenderer;\n\tprivate modelChangeDelayer: Delayer<void> = new Delayer<void>(200);\n\tprivate associatedPreferencesModel!: IPreferencesEditorModel<ISetting>;\n\n\tprivate unsupportedSettingsRenderer: UnsupportedSettingsRenderer;\n\n\tconstructor(protected editor: ICodeEditor, readonly preferencesModel: SettingsEditorModel,\n\t\t@IPreferencesService protected preferencesService: IPreferencesService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IInstantiationService protected instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\t\tthis.settingHighlighter = this._register(instantiationService.createInstance(SettingHighlighter, editor));\n\t\tthis.editSettingActionRenderer = this._register(this.instantiationService.createInstance(EditSettingRenderer, this.editor, this.preferencesModel, this.settingHighlighter));\n\t\tthis._register(this.editSettingActionRenderer.onUpdateSetting(({ key, value, source }) => this.updatePreference(key, value, source)));\n\t\tthis._register(this.editor.getModel()!.onDidChangeContent(() => this.modelChangeDelayer.trigger(() => this.onModelChanged())));\n\t\tthis.unsupportedSettingsRenderer = this._register(instantiationService.createInstance(UnsupportedSettingsRenderer, editor, preferencesModel));\n\t}\n\n\trender(): void {\n\t\tthis.editSettingActionRenderer.render(\n\t\t\tthis.preferencesModel.settingsGroups,\n\t\t\tthis.associatedPreferencesModel,\n\t\t);\n\t\tthis.unsupportedSettingsRenderer.render();\n\t}\n\n\tupdatePreference(key: string, value: any, source: IIndexedSetting): void {\n\t\tconst overrideIdentifiers = source.overrideOf\n\t\t\t? overrideIdentifiersFromKey(source.overrideOf.key)\n\t\t\t: null;\n\t\tconst resource = this.preferencesModel.uri;\n\t\tthis.configurationService\n\t\t\t.updateValue(\n\t\t\t\tkey,\n\t\t\t\tvalue,\n\t\t\t\t{ overrideIdentifiers, resource },\n\t\t\t\tthis.preferencesModel.configurationTarget,\n\t\t\t)\n\t\t\t.then(() => this.onSettingUpdated(source));\n\t}\n\n\tprivate onModelChanged(): void {\n\t\tif (!this.editor.hasModel()) {\n\t\t\t// model could have been disposed during the delay\n\t\t\treturn;\n\t\t}\n\t\tthis.render();\n\t}\n\n\tprivate onSettingUpdated(setting: ISetting) {\n\t\tthis.editor.focus();\n\t\tsetting = this.getSetting(setting)!;\n\t\tif (setting) {\n\t\t\t// TODO:@sandy Selection range should be template range\n\t\t\tthis.editor.setSelection(setting.valueRange);\n\t\t\tthis.settingHighlighter.highlight(setting, true);\n\t\t}\n\t}\n\n\tprivate getSetting(setting: ISetting): ISetting | undefined {\n\t\tconst { key, overrideOf } = setting;\n\t\tif (overrideOf) {\n\t\t\tconst setting = this.getSetting(overrideOf);\n\t\t\tfor (const override of setting!.overrides!) {\n\t\t\t\tif (override.key === key) {\n\t\t\t\t\treturn override;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this.preferencesModel.getPreference(key);\n\t}\n\n\tfocusPreference(setting: ISetting): void {\n\t\tconst s = this.getSetting(setting);\n\t\tif (s) {\n\t\t\tthis.settingHighlighter.highlight(s, true);\n\t\t\tthis.editor.setPosition({\n\t\t\t\tlineNumber: s.keyRange.startLineNumber,\n\t\t\t\tcolumn: s.keyRange.startColumn,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.settingHighlighter.clear(true);\n\t\t}\n\t}\n\n\tclearFocus(setting: ISetting): void {\n\t\tthis.settingHighlighter.clear(true);\n\t}\n\n\teditPreference(setting: ISetting): boolean {\n\t\tconst editableSetting = this.getSetting(setting);\n\t\treturn !!(\n\t\t\teditableSetting &&\n\t\t\tthis.editSettingActionRenderer.activateOnSetting(editableSetting)\n\t\t);\n\t}\n}\n\nexport class WorkspaceSettingsRenderer\n\textends UserSettingsRenderer\n\timplements IPreferencesRenderer\n{\n\tprivate workspaceConfigurationRenderer: WorkspaceConfigurationRenderer;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\tpreferencesModel: SettingsEditorModel,\n\t\t@IPreferencesService preferencesService: IPreferencesService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper(\n\t\t\teditor,\n\t\t\tpreferencesModel,\n\t\t\tpreferencesService,\n\t\t\tconfigurationService,\n\t\t\tinstantiationService,\n\t\t);\n\t\tthis.workspaceConfigurationRenderer = this._register(\n\t\t\tinstantiationService.createInstance(\n\t\t\t\tWorkspaceConfigurationRenderer,\n\t\t\t\teditor,\n\t\t\t\tpreferencesModel,\n\t\t\t),\n\t\t);\n\t}\n\n\toverride render(): void {\n\t\tsuper.render();\n\t\tthis.workspaceConfigurationRenderer.render();\n\t}\n}\n\nexport interface IIndexedSetting extends ISetting {\n\tindex: number;\n\tgroupId: string;\n}\n\nclass EditSettingRenderer extends Disposable {\n\tprivate editPreferenceWidgetForCursorPosition: EditPreferenceWidget<IIndexedSetting>;\n\tprivate editPreferenceWidgetForMouseMove: EditPreferenceWidget<IIndexedSetting>;\n\n\tprivate settingsGroups: ISettingsGroup[] = [];\n\tassociatedPreferencesModel!: IPreferencesEditorModel<ISetting>;\n\tprivate toggleEditPreferencesForMouseMoveDelayer: Delayer<void>;\n\n\tprivate readonly _onUpdateSetting: Emitter<{\n\t\tkey: string;\n\t\tvalue: any;\n\t\tsource: IIndexedSetting;\n\t}> = new Emitter<{ key: string; value: any; source: IIndexedSetting }>();\n\treadonly onUpdateSetting: Event<{\n\t\tkey: string;\n\t\tvalue: any;\n\t\tsource: IIndexedSetting;\n\t}> = this._onUpdateSetting.event;\n\n\tconstructor(private editor: ICodeEditor, private primarySettingsModel: ISettingsEditorModel,\n\t\tprivate settingHighlighter: SettingHighlighter,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService\n\t) {\n\t\tsuper();\n\n\t\tthis.editPreferenceWidgetForCursorPosition = <EditPreferenceWidget<IIndexedSetting>>this._register(this.instantiationService.createInstance(EditPreferenceWidget, editor));\n\t\tthis.editPreferenceWidgetForMouseMove = <EditPreferenceWidget<IIndexedSetting>>this._register(this.instantiationService.createInstance(EditPreferenceWidget, editor));\n\t\tthis.toggleEditPreferencesForMouseMoveDelayer = new Delayer<void>(75);\n\n\t\tthis._register(this.editPreferenceWidgetForCursorPosition.onClick(e => this.onEditSettingClicked(this.editPreferenceWidgetForCursorPosition, e)));\n\t\tthis._register(this.editPreferenceWidgetForMouseMove.onClick(e => this.onEditSettingClicked(this.editPreferenceWidgetForMouseMove, e)));\n\n\t\tthis._register(this.editor.onDidChangeCursorPosition(positionChangeEvent => this.onPositionChanged(positionChangeEvent)));\n\t\tthis._register(this.editor.onMouseMove(mouseMoveEvent => this.onMouseMoved(mouseMoveEvent)));\n\t\tthis._register(this.editor.onDidChangeConfiguration(() => this.onConfigurationChanged()));\n\t}\n\n\trender(\n\t\tsettingsGroups: ISettingsGroup[],\n\t\tassociatedPreferencesModel: IPreferencesEditorModel<ISetting>,\n\t): void {\n\t\tthis.editPreferenceWidgetForCursorPosition.hide();\n\t\tthis.editPreferenceWidgetForMouseMove.hide();\n\t\tthis.settingsGroups = settingsGroups;\n\t\tthis.associatedPreferencesModel = associatedPreferencesModel;\n\n\t\tconst settings = this.getSettings(\n\t\t\tthis.editor.getPosition()!.lineNumber,\n\t\t);\n\t\tif (settings.length) {\n\t\t\tthis.showEditPreferencesWidget(\n\t\t\t\tthis.editPreferenceWidgetForCursorPosition,\n\t\t\t\tsettings,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate isDefaultSettings(): boolean {\n\t\treturn this.primarySettingsModel instanceof DefaultSettingsEditorModel;\n\t}\n\n\tprivate onConfigurationChanged(): void {\n\t\tif (!this.editor.getOption(EditorOption.glyphMargin)) {\n\t\t\tthis.editPreferenceWidgetForCursorPosition.hide();\n\t\t\tthis.editPreferenceWidgetForMouseMove.hide();\n\t\t}\n\t}\n\n\tprivate onPositionChanged(\n\t\tpositionChangeEvent: ICursorPositionChangedEvent,\n\t) {\n\t\tthis.editPreferenceWidgetForMouseMove.hide();\n\t\tconst settings = this.getSettings(\n\t\t\tpositionChangeEvent.position.lineNumber,\n\t\t);\n\t\tif (settings.length) {\n\t\t\tthis.showEditPreferencesWidget(\n\t\t\t\tthis.editPreferenceWidgetForCursorPosition,\n\t\t\t\tsettings,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.editPreferenceWidgetForCursorPosition.hide();\n\t\t}\n\t}\n\n\tprivate onMouseMoved(mouseMoveEvent: IEditorMouseEvent): void {\n\t\tconst editPreferenceWidget =\n\t\t\tthis.getEditPreferenceWidgetUnderMouse(mouseMoveEvent);\n\t\tif (editPreferenceWidget) {\n\t\t\tthis.onMouseOver(editPreferenceWidget);\n\t\t\treturn;\n\t\t}\n\t\tthis.settingHighlighter.clear();\n\t\tthis.toggleEditPreferencesForMouseMoveDelayer.trigger(() =>\n\t\t\tthis.toggleEditPreferenceWidgetForMouseMove(mouseMoveEvent),\n\t\t);\n\t}\n\n\tprivate getEditPreferenceWidgetUnderMouse(\n\t\tmouseMoveEvent: IEditorMouseEvent,\n\t): EditPreferenceWidget<ISetting> | undefined {\n\t\tif (\n\t\t\tmouseMoveEvent.target.type === MouseTargetType.GUTTER_GLYPH_MARGIN\n\t\t) {\n\t\t\tconst line = mouseMoveEvent.target.position.lineNumber;\n\t\t\tif (\n\t\t\t\tthis.editPreferenceWidgetForMouseMove.getLine() === line &&\n\t\t\t\tthis.editPreferenceWidgetForMouseMove.isVisible()\n\t\t\t) {\n\t\t\t\treturn this.editPreferenceWidgetForMouseMove;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tthis.editPreferenceWidgetForCursorPosition.getLine() === line &&\n\t\t\t\tthis.editPreferenceWidgetForCursorPosition.isVisible()\n\t\t\t) {\n\t\t\t\treturn this.editPreferenceWidgetForCursorPosition;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate toggleEditPreferenceWidgetForMouseMove(\n\t\tmouseMoveEvent: IEditorMouseEvent,\n\t): void {\n\t\tconst settings = mouseMoveEvent.target.position\n\t\t\t? this.getSettings(mouseMoveEvent.target.position.lineNumber)\n\t\t\t: null;\n\t\tif (settings && settings.length) {\n\t\t\tthis.showEditPreferencesWidget(\n\t\t\t\tthis.editPreferenceWidgetForMouseMove,\n\t\t\t\tsettings,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.editPreferenceWidgetForMouseMove.hide();\n\t\t}\n\t}\n\n\tprivate showEditPreferencesWidget(\n\t\teditPreferencesWidget: EditPreferenceWidget<ISetting>,\n\t\tsettings: IIndexedSetting[],\n\t) {\n\t\tconst line = settings[0].valueRange.startLineNumber;\n\t\tif (\n\t\t\tthis.editor.getOption(EditorOption.glyphMargin) &&\n\t\t\tthis.marginFreeFromOtherDecorations(line)\n\t\t) {\n\t\t\teditPreferencesWidget.show(\n\t\t\t\tline,\n\t\t\t\tnls.localize(\"editTtile\", \"Edit\"),\n\t\t\t\tsettings,\n\t\t\t);\n\t\t\tconst editPreferenceWidgetToHide =\n\t\t\t\teditPreferencesWidget ===\n\t\t\t\tthis.editPreferenceWidgetForCursorPosition\n\t\t\t\t\t? this.editPreferenceWidgetForMouseMove\n\t\t\t\t\t: this.editPreferenceWidgetForCursorPosition;\n\t\t\teditPreferenceWidgetToHide.hide();\n\t\t}\n\t}\n\n\tprivate marginFreeFromOtherDecorations(line: number): boolean {\n\t\tconst decorations = this.editor.getLineDecorations(line);\n\t\tif (decorations) {\n\t\t\tfor (const { options } of decorations) {\n\t\t\t\tif (\n\t\t\t\t\toptions.glyphMarginClassName &&\n\t\t\t\t\toptions.glyphMarginClassName.indexOf(\n\t\t\t\t\t\tThemeIcon.asClassName(settingsEditIcon),\n\t\t\t\t\t) === -1\n\t\t\t\t) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate getSettings(lineNumber: number): IIndexedSetting[] {\n\t\tconst configurationMap = this.getConfigurationsMap();\n\t\treturn this.getSettingsAtLineNumber(lineNumber).filter((setting) => {\n\t\t\tconst configurationNode = configurationMap[setting.key];\n\t\t\tif (configurationNode) {\n\t\t\t\tif (\n\t\t\t\t\tconfigurationNode.policy &&\n\t\t\t\t\tthis.configurationService.inspect(setting.key)\n\t\t\t\t\t\t.policyValue !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (this.isDefaultSettings()) {\n\t\t\t\t\tif (setting.key === \"launch\") {\n\t\t\t\t\t\t// Do not show because of https://github.com/microsoft/vscode/issues/32593\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tconfigurationNode.type === \"boolean\" ||\n\t\t\t\t\tconfigurationNode.enum\n\t\t\t\t) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t(<SettingsEditorModel>this.primarySettingsModel)\n\t\t\t\t\t\t\t.configurationTarget !==\n\t\t\t\t\t\tConfigurationTarget.WORKSPACE_FOLDER\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\tconfigurationNode.scope ===\n\t\t\t\t\t\t\tConfigurationScope.RESOURCE ||\n\t\t\t\t\t\tconfigurationNode.scope ===\n\t\t\t\t\t\t\tConfigurationScope.LANGUAGE_OVERRIDABLE\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate getSettingsAtLineNumber(lineNumber: number): IIndexedSetting[] {\n\t\t// index of setting, across all groups/sections\n\t\tlet index = 0;\n\n\t\tconst settings: IIndexedSetting[] = [];\n\t\tfor (const group of this.settingsGroups) {\n\t\t\tif (group.range.startLineNumber > lineNumber) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tlineNumber >= group.range.startLineNumber &&\n\t\t\t\tlineNumber <= group.range.endLineNumber\n\t\t\t) {\n\t\t\t\tfor (const section of group.sections) {\n\t\t\t\t\tfor (const setting of section.settings) {\n\t\t\t\t\t\tif (setting.range.startLineNumber > lineNumber) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tlineNumber >= setting.range.startLineNumber &&\n\t\t\t\t\t\t\tlineNumber <= setting.range.endLineNumber\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t!this.isDefaultSettings() &&\n\t\t\t\t\t\t\t\tsetting.overrides!.length\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t// Only one level because override settings cannot have override settings\n\t\t\t\t\t\t\t\tfor (const overrideSetting of setting.overrides!) {\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tlineNumber >=\n\t\t\t\t\t\t\t\t\t\t\toverrideSetting.range\n\t\t\t\t\t\t\t\t\t\t\t\t.startLineNumber &&\n\t\t\t\t\t\t\t\t\t\tlineNumber <=\n\t\t\t\t\t\t\t\t\t\t\toverrideSetting.range.endLineNumber\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tsettings.push({\n\t\t\t\t\t\t\t\t\t\t\t...overrideSetting,\n\t\t\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\t\t\tgroupId: group.id,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsettings.push({\n\t\t\t\t\t\t\t\t\t...setting,\n\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\tgroupId: group.id,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn settings;\n\t}\n\n\tprivate onMouseOver(\n\t\teditPreferenceWidget: EditPreferenceWidget<ISetting>,\n\t): void {\n\t\tthis.settingHighlighter.highlight(editPreferenceWidget.preferences[0]);\n\t}\n\n\tprivate onEditSettingClicked(\n\t\teditPreferenceWidget: EditPreferenceWidget<IIndexedSetting>,\n\t\te: IEditorMouseEvent,\n\t): void {\n\t\tEventHelper.stop(e.event, true);\n\n\t\tconst actions =\n\t\t\tthis.getSettings(editPreferenceWidget.getLine()).length === 1\n\t\t\t\t? this.getActions(\n\t\t\t\t\t\teditPreferenceWidget.preferences[0],\n\t\t\t\t\t\tthis.getConfigurationsMap()[\n\t\t\t\t\t\t\teditPreferenceWidget.preferences[0].key\n\t\t\t\t\t\t],\n\t\t\t\t\t)\n\t\t\t\t: editPreferenceWidget.preferences.map(\n\t\t\t\t\t\t(setting) =>\n\t\t\t\t\t\t\tnew SubmenuAction(\n\t\t\t\t\t\t\t\t`preferences.submenu.${setting.key}`,\n\t\t\t\t\t\t\t\tsetting.key,\n\t\t\t\t\t\t\t\tthis.getActions(\n\t\t\t\t\t\t\t\t\tsetting,\n\t\t\t\t\t\t\t\t\tthis.getConfigurationsMap()[setting.key],\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => e.event,\n\t\t\tgetActions: () => actions,\n\t\t});\n\t}\n\n\tactivateOnSetting(setting: ISetting): boolean {\n\t\tconst startLine = setting.keyRange.startLineNumber;\n\t\tconst settings = this.getSettings(startLine);\n\t\tif (!settings.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.editPreferenceWidgetForMouseMove.show(startLine, \"\", settings);\n\t\tconst actions = this.getActions(\n\t\t\tthis.editPreferenceWidgetForMouseMove.preferences[0],\n\t\t\tthis.getConfigurationsMap()[\n\t\t\t\tthis.editPreferenceWidgetForMouseMove.preferences[0].key\n\t\t\t],\n\t\t);\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => this.toAbsoluteCoords(new Position(startLine, 1)),\n\t\t\tgetActions: () => actions,\n\t\t});\n\n\t\treturn true;\n\t}\n\n\tprivate toAbsoluteCoords(position: Position): { x: number; y: number } {\n\t\tconst positionCoords = this.editor.getScrolledVisiblePosition(position);\n\t\tconst editorCoords = getDomNodePagePosition(this.editor.getDomNode()!);\n\t\tconst x = editorCoords.left + positionCoords!.left;\n\t\tconst y =\n\t\t\teditorCoords.top + positionCoords!.top + positionCoords!.height;\n\n\t\treturn { x, y: y + 10 };\n\t}\n\n\tprivate getConfigurationsMap(): {\n\t\t[qualifiedKey: string]: IConfigurationPropertySchema;\n\t} {\n\t\treturn Registry.as<IConfigurationRegistry>(\n\t\t\tConfigurationExtensions.Configuration,\n\t\t).getConfigurationProperties();\n\t}\n\n\tprivate getActions(\n\t\tsetting: IIndexedSetting,\n\t\tjsonSchema: IJSONSchema,\n\t): IAction[] {\n\t\tif (jsonSchema.type === \"boolean\") {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tid: \"truthyValue\",\n\t\t\t\t\tlabel: \"true\",\n\t\t\t\t\ttooltip: \"true\",\n\t\t\t\t\tenabled: true,\n\t\t\t\t\trun: () => this.updateSetting(setting.key, true, setting),\n\t\t\t\t\tclass: undefined,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: \"falsyValue\",\n\t\t\t\t\tlabel: \"false\",\n\t\t\t\t\ttooltip: \"false\",\n\t\t\t\t\tenabled: true,\n\t\t\t\t\trun: () => this.updateSetting(setting.key, false, setting),\n\t\t\t\t\tclass: undefined,\n\t\t\t\t},\n\t\t\t];\n\t\t}\n\t\tif (jsonSchema.enum) {\n\t\t\treturn jsonSchema.enum.map((value) => {\n\t\t\t\treturn {\n\t\t\t\t\tid: value,\n\t\t\t\t\tlabel: JSON.stringify(value),\n\t\t\t\t\ttooltip: JSON.stringify(value),\n\t\t\t\t\tenabled: true,\n\t\t\t\t\trun: () => this.updateSetting(setting.key, value, setting),\n\t\t\t\t\tclass: undefined,\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\treturn this.getDefaultActions(setting);\n\t}\n\n\tprivate getDefaultActions(setting: IIndexedSetting): IAction[] {\n\t\tif (this.isDefaultSettings()) {\n\t\t\tconst settingInOtherModel =\n\t\t\t\tthis.associatedPreferencesModel.getPreference(setting.key);\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tid: \"setDefaultValue\",\n\t\t\t\t\tlabel: settingInOtherModel\n\t\t\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\t\t\"replaceDefaultValue\",\n\t\t\t\t\t\t\t\t\"Replace in Settings\",\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: nls.localize(\"copyDefaultValue\", \"Copy to Settings\"),\n\t\t\t\t\ttooltip: settingInOtherModel\n\t\t\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\t\t\"replaceDefaultValue\",\n\t\t\t\t\t\t\t\t\"Replace in Settings\",\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: nls.localize(\"copyDefaultValue\", \"Copy to Settings\"),\n\t\t\t\t\tenabled: true,\n\t\t\t\t\trun: () =>\n\t\t\t\t\t\tthis.updateSetting(setting.key, setting.value, setting),\n\t\t\t\t\tclass: undefined,\n\t\t\t\t},\n\t\t\t];\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate updateSetting(\n\t\tkey: string,\n\t\tvalue: any,\n\t\tsource: IIndexedSetting,\n\t): void {\n\t\tthis._onUpdateSetting.fire({ key, value, source });\n\t}\n}\n\nclass SettingHighlighter extends Disposable {\n\tprivate fixedHighlighter: RangeHighlightDecorations;\n\tprivate volatileHighlighter: RangeHighlightDecorations;\n\n\tconstructor(\n\t\tprivate editor: ICodeEditor,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis.fixedHighlighter = this._register(\n\t\t\tinstantiationService.createInstance(RangeHighlightDecorations),\n\t\t);\n\t\tthis.volatileHighlighter = this._register(\n\t\t\tinstantiationService.createInstance(RangeHighlightDecorations),\n\t\t);\n\t}\n\n\thighlight(setting: ISetting, fix = false) {\n\t\tthis.volatileHighlighter.removeHighlightRange();\n\t\tthis.fixedHighlighter.removeHighlightRange();\n\n\t\tconst highlighter = fix\n\t\t\t? this.fixedHighlighter\n\t\t\t: this.volatileHighlighter;\n\t\thighlighter.highlightRange(\n\t\t\t{\n\t\t\t\trange: setting.valueRange,\n\t\t\t\tresource: this.editor.getModel()!.uri,\n\t\t\t},\n\t\t\tthis.editor,\n\t\t);\n\n\t\tthis.editor.revealLineInCenterIfOutsideViewport(\n\t\t\tsetting.valueRange.startLineNumber,\n\t\t\teditorCommon.ScrollType.Smooth,\n\t\t);\n\t}\n\n\tclear(fix = false): void {\n\t\tthis.volatileHighlighter.removeHighlightRange();\n\t\tif (fix) {\n\t\t\tthis.fixedHighlighter.removeHighlightRange();\n\t\t}\n\t}\n}\n\nclass UnsupportedSettingsRenderer\n\textends Disposable\n\timplements languages.CodeActionProvider\n{\n\tprivate renderingDelayer: Delayer<void> = new Delayer<void>(200);\n\n\tprivate readonly codeActions = new ResourceMap<\n\t\t[Range, languages.CodeAction[]][]\n\t>((uri) => this.uriIdentityService.extUri.getComparisonKey(uri));\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\tprivate readonly settingsEditorModel: SettingsEditorModel,\n\t\t@IMarkerService private readonly markerService: IMarkerService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IWorkbenchConfigurationService private readonly configurationService: IWorkbenchConfigurationService,\n\t\t@IWorkspaceTrustManagementService private readonly workspaceTrustManagementService: IWorkspaceTrustManagementService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t) {\n\t\tsuper();\n\t\tthis._register(this.editor.getModel()!.onDidChangeContent(() => this.delayedRender()));\n\t\tthis._register(Event.filter(this.configurationService.onDidChangeConfiguration, e => e.source === ConfigurationTarget.DEFAULT)(() => this.delayedRender()));\n\t\tthis._register(languageFeaturesService.codeActionProvider.register({ pattern: settingsEditorModel.uri.path }, this));\n\t\tthis._register(userDataProfileService.onDidChangeCurrentProfile(() => this.delayedRender()));\n\t}\n\n\tprivate delayedRender(): void {\n\t\tthis.renderingDelayer.trigger(() => this.render());\n\t}\n\n\tpublic render(): void {\n\t\tthis.codeActions.clear();\n\t\tconst markerData: IMarkerData[] = this.generateMarkerData();\n\t\tif (markerData.length) {\n\t\t\tthis.markerService.changeOne(\n\t\t\t\t\"UnsupportedSettingsRenderer\",\n\t\t\t\tthis.settingsEditorModel.uri,\n\t\t\t\tmarkerData,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.markerService.remove(\"UnsupportedSettingsRenderer\", [\n\t\t\t\tthis.settingsEditorModel.uri,\n\t\t\t]);\n\t\t}\n\t}\n\n\tasync provideCodeActions(\n\t\tmodel: ITextModel,\n\t\trange: Range | Selection,\n\t\tcontext: languages.CodeActionContext,\n\t\ttoken: CancellationToken,\n\t): Promise<languages.CodeActionList> {\n\t\tconst actions: languages.CodeAction[] = [];\n\t\tconst codeActionsByRange = this.codeActions.get(model.uri);\n\t\tif (codeActionsByRange) {\n\t\t\tfor (const [codeActionsRange, codeActions] of codeActionsByRange) {\n\t\t\t\tif (codeActionsRange.containsRange(range)) {\n\t\t\t\t\tactions.push(...codeActions);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tactions,\n\t\t\tdispose: () => {},\n\t\t};\n\t}\n\n\tprivate generateMarkerData(): IMarkerData[] {\n\t\tconst markerData: IMarkerData[] = [];\n\t\tconst configurationRegistry = Registry.as<IConfigurationRegistry>(\n\t\t\tConfigurationExtensions.Configuration,\n\t\t).getConfigurationProperties();\n\t\tfor (const settingsGroup of this.settingsEditorModel.settingsGroups) {\n\t\t\tfor (const section of settingsGroup.sections) {\n\t\t\t\tfor (const setting of section.settings) {\n\t\t\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(setting.key)) {\n\t\t\t\t\t\tif (setting.overrides) {\n\t\t\t\t\t\t\tthis.handleOverrides(\n\t\t\t\t\t\t\t\tsetting.overrides,\n\t\t\t\t\t\t\t\tconfigurationRegistry,\n\t\t\t\t\t\t\t\tmarkerData,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tconst configuration = configurationRegistry[setting.key];\n\t\t\t\t\tif (configuration) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis.handlePolicyConfiguration(\n\t\t\t\t\t\t\t\tsetting,\n\t\t\t\t\t\t\t\tconfiguration,\n\t\t\t\t\t\t\t\tmarkerData,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tswitch (this.settingsEditorModel.configurationTarget) {\n\t\t\t\t\t\t\tcase ConfigurationTarget.USER_LOCAL:\n\t\t\t\t\t\t\t\tthis.handleLocalUserConfiguration(\n\t\t\t\t\t\t\t\t\tsetting,\n\t\t\t\t\t\t\t\t\tconfiguration,\n\t\t\t\t\t\t\t\t\tmarkerData,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase ConfigurationTarget.USER_REMOTE:\n\t\t\t\t\t\t\t\tthis.handleRemoteUserConfiguration(\n\t\t\t\t\t\t\t\t\tsetting,\n\t\t\t\t\t\t\t\t\tconfiguration,\n\t\t\t\t\t\t\t\t\tmarkerData,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase ConfigurationTarget.WORKSPACE:\n\t\t\t\t\t\t\t\tthis.handleWorkspaceConfiguration(\n\t\t\t\t\t\t\t\t\tsetting,\n\t\t\t\t\t\t\t\t\tconfiguration,\n\t\t\t\t\t\t\t\t\tmarkerData,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase ConfigurationTarget.WORKSPACE_FOLDER:\n\t\t\t\t\t\t\t\tthis.handleWorkspaceFolderConfiguration(\n\t\t\t\t\t\t\t\t\tsetting,\n\t\t\t\t\t\t\t\t\tconfiguration,\n\t\t\t\t\t\t\t\t\tmarkerData,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmarkerData.push(\n\t\t\t\t\t\t\tthis.gemerateUnknownConfigurationMarker(setting),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn markerData;\n\t}\n\n\tprivate handlePolicyConfiguration(\n\t\tsetting: ISetting,\n\t\tconfiguration: IConfigurationPropertySchema,\n\t\tmarkerData: IMarkerData[],\n\t): boolean {\n\t\tif (!configuration.policy) {\n\t\t\treturn false;\n\t\t}\n\t\tif (\n\t\t\tthis.configurationService.inspect(setting.key).policyValue ===\n\t\t\tundefined\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\tif (\n\t\t\tthis.settingsEditorModel.configurationTarget ===\n\t\t\tConfigurationTarget.DEFAULT\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\tmarkerData.push({\n\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t...setting.range,\n\t\t\tmessage: nls.localize(\n\t\t\t\t\"unsupportedPolicySetting\",\n\t\t\t\t\"This setting cannot be applied because it is configured in the system policy.\",\n\t\t\t),\n\t\t});\n\t\treturn true;\n\t}\n\n\tprivate handleOverrides(\n\t\toverrides: ISetting[],\n\t\tconfigurationRegistry: IStringDictionary<IRegisteredConfigurationPropertySchema>,\n\t\tmarkerData: IMarkerData[],\n\t): void {\n\t\tfor (const setting of overrides || []) {\n\t\t\tconst configuration = configurationRegistry[setting.key];\n\t\t\tif (configuration) {\n\t\t\t\tif (\n\t\t\t\t\tconfiguration.scope !==\n\t\t\t\t\tConfigurationScope.LANGUAGE_OVERRIDABLE\n\t\t\t\t) {\n\t\t\t\t\tmarkerData.push({\n\t\t\t\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\t\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t\t\t\t...setting.range,\n\t\t\t\t\t\tmessage: nls.localize(\n\t\t\t\t\t\t\t\"unsupportLanguageOverrideSetting\",\n\t\t\t\t\t\t\t\"This setting cannot be applied because it is not registered as language override setting.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmarkerData.push(\n\t\t\t\t\tthis.gemerateUnknownConfigurationMarker(setting),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate handleLocalUserConfiguration(\n\t\tsetting: ISetting,\n\t\tconfiguration: IConfigurationPropertySchema,\n\t\tmarkerData: IMarkerData[],\n\t): void {\n\t\tif (\n\t\t\t!this.userDataProfileService.currentProfile.isDefault &&\n\t\t\t!this.userDataProfileService.currentProfile.useDefaultFlags\n\t\t\t\t?.settings\n\t\t) {\n\t\t\tif (\n\t\t\t\tisEqual(\n\t\t\t\t\tthis.userDataProfilesService.defaultProfile\n\t\t\t\t\t\t.settingsResource,\n\t\t\t\t\tthis.settingsEditorModel.uri,\n\t\t\t\t) &&\n\t\t\t\t!this.configurationService.isSettingAppliedForAllProfiles(\n\t\t\t\t\tsetting.key,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// If we're in the default profile setting file, and the setting cannot be applied in all profiles\n\t\t\t\tmarkerData.push({\n\t\t\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t\t\t...setting.range,\n\t\t\t\t\tmessage: nls.localize(\n\t\t\t\t\t\t\"defaultProfileSettingWhileNonDefaultActive\",\n\t\t\t\t\t\t\"This setting cannot be applied while a non-default profile is active. It will be applied when the default profile is active.\",\n\t\t\t\t\t),\n\t\t\t\t});\n\t\t\t} else if (\n\t\t\t\tisEqual(\n\t\t\t\t\tthis.userDataProfileService.currentProfile.settingsResource,\n\t\t\t\t\tthis.settingsEditorModel.uri,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tif (configuration.scope === ConfigurationScope.APPLICATION) {\n\t\t\t\t\t// If we're in a profile setting file, and the setting is application-scoped, fade it out.\n\t\t\t\t\tmarkerData.push(\n\t\t\t\t\t\tthis.generateUnsupportedApplicationSettingMarker(\n\t\t\t\t\t\t\tsetting,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t} else if (\n\t\t\t\t\tthis.configurationService.isSettingAppliedForAllProfiles(\n\t\t\t\t\t\tsetting.key,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\t// If we're in the non-default profile setting file, and the setting can be applied in all profiles, fade it out.\n\t\t\t\t\tmarkerData.push({\n\t\t\t\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\t\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t\t\t\t...setting.range,\n\t\t\t\t\t\tmessage: nls.localize(\n\t\t\t\t\t\t\t\"allProfileSettingWhileInNonDefaultProfileSetting\",\n\t\t\t\t\t\t\t\"This setting cannot be applied because it is configured to be applied in all profiles using setting {0}. Value from the default profile will be used instead.\",\n\t\t\t\t\t\t\tAPPLY_ALL_PROFILES_SETTING,\n\t\t\t\t\t\t),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\tthis.environmentService.remoteAuthority &&\n\t\t\t(configuration.scope === ConfigurationScope.MACHINE ||\n\t\t\t\tconfiguration.scope === ConfigurationScope.MACHINE_OVERRIDABLE)\n\t\t) {\n\t\t\tmarkerData.push({\n\t\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t\t...setting.range,\n\t\t\t\tmessage: nls.localize(\n\t\t\t\t\t\"unsupportedRemoteMachineSetting\",\n\t\t\t\t\t\"This setting cannot be applied in this window. It will be applied when you open a local window.\",\n\t\t\t\t),\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate handleRemoteUserConfiguration(\n\t\tsetting: ISetting,\n\t\tconfiguration: IConfigurationPropertySchema,\n\t\tmarkerData: IMarkerData[],\n\t): void {\n\t\tif (configuration.scope === ConfigurationScope.APPLICATION) {\n\t\t\tmarkerData.push(\n\t\t\t\tthis.generateUnsupportedApplicationSettingMarker(setting),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate handleWorkspaceConfiguration(\n\t\tsetting: ISetting,\n\t\tconfiguration: IConfigurationPropertySchema,\n\t\tmarkerData: IMarkerData[],\n\t): void {\n\t\tif (configuration.scope === ConfigurationScope.APPLICATION) {\n\t\t\tmarkerData.push(\n\t\t\t\tthis.generateUnsupportedApplicationSettingMarker(setting),\n\t\t\t);\n\t\t}\n\n\t\tif (configuration.scope === ConfigurationScope.MACHINE) {\n\t\t\tmarkerData.push(\n\t\t\t\tthis.generateUnsupportedMachineSettingMarker(setting),\n\t\t\t);\n\t\t}\n\n\t\tif (\n\t\t\t!this.workspaceTrustManagementService.isWorkspaceTrusted() &&\n\t\t\tconfiguration.restricted\n\t\t) {\n\t\t\tconst marker = this.generateUntrustedSettingMarker(setting);\n\t\t\tmarkerData.push(marker);\n\t\t\tconst codeActions = this.generateUntrustedSettingCodeActions([\n\t\t\t\tmarker,\n\t\t\t]);\n\t\t\tthis.addCodeActions(marker, codeActions);\n\t\t}\n\t}\n\n\tprivate handleWorkspaceFolderConfiguration(\n\t\tsetting: ISetting,\n\t\tconfiguration: IConfigurationPropertySchema,\n\t\tmarkerData: IMarkerData[],\n\t): void {\n\t\tif (configuration.scope === ConfigurationScope.APPLICATION) {\n\t\t\tmarkerData.push(\n\t\t\t\tthis.generateUnsupportedApplicationSettingMarker(setting),\n\t\t\t);\n\t\t}\n\n\t\tif (configuration.scope === ConfigurationScope.MACHINE) {\n\t\t\tmarkerData.push(\n\t\t\t\tthis.generateUnsupportedMachineSettingMarker(setting),\n\t\t\t);\n\t\t}\n\n\t\tif (configuration.scope === ConfigurationScope.WINDOW) {\n\t\t\tmarkerData.push({\n\t\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t\t...setting.range,\n\t\t\t\tmessage: nls.localize(\n\t\t\t\t\t\"unsupportedWindowSetting\",\n\t\t\t\t\t\"This setting cannot be applied in this workspace. It will be applied when you open the containing workspace folder directly.\",\n\t\t\t\t),\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\t!this.workspaceTrustManagementService.isWorkspaceTrusted() &&\n\t\t\tconfiguration.restricted\n\t\t) {\n\t\t\tconst marker = this.generateUntrustedSettingMarker(setting);\n\t\t\tmarkerData.push(marker);\n\t\t\tconst codeActions = this.generateUntrustedSettingCodeActions([\n\t\t\t\tmarker,\n\t\t\t]);\n\t\t\tthis.addCodeActions(marker, codeActions);\n\t\t}\n\t}\n\n\tprivate generateUnsupportedApplicationSettingMarker(\n\t\tsetting: ISetting,\n\t): IMarkerData {\n\t\treturn {\n\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t...setting.range,\n\t\t\tmessage: nls.localize(\n\t\t\t\t\"unsupportedApplicationSetting\",\n\t\t\t\t\"This setting has an application scope and can be set only in the user settings file.\",\n\t\t\t),\n\t\t};\n\t}\n\n\tprivate generateUnsupportedMachineSettingMarker(\n\t\tsetting: ISetting,\n\t): IMarkerData {\n\t\treturn {\n\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t...setting.range,\n\t\t\tmessage: nls.localize(\n\t\t\t\t\"unsupportedMachineSetting\",\n\t\t\t\t\"This setting can only be applied in user settings in local window or in remote settings in remote window.\",\n\t\t\t),\n\t\t};\n\t}\n\n\tprivate generateUntrustedSettingMarker(setting: ISetting): IMarkerData {\n\t\treturn {\n\t\t\tseverity: MarkerSeverity.Warning,\n\t\t\t...setting.range,\n\t\t\tmessage: nls.localize(\n\t\t\t\t\"untrustedSetting\",\n\t\t\t\t\"This setting can only be applied in a trusted workspace.\",\n\t\t\t),\n\t\t};\n\t}\n\n\tprivate gemerateUnknownConfigurationMarker(setting: ISetting): IMarkerData {\n\t\treturn {\n\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t...setting.range,\n\t\t\tmessage: nls.localize(\n\t\t\t\t\"unknown configuration setting\",\n\t\t\t\t\"Unknown Configuration Setting\",\n\t\t\t),\n\t\t};\n\t}\n\n\tprivate generateUntrustedSettingCodeActions(\n\t\tdiagnostics: IMarkerData[],\n\t): languages.CodeAction[] {\n\t\treturn [\n\t\t\t{\n\t\t\t\ttitle: nls.localize(\n\t\t\t\t\t\"manage workspace trust\",\n\t\t\t\t\t\"Manage Workspace Trust\",\n\t\t\t\t),\n\t\t\t\tcommand: {\n\t\t\t\t\tid: \"workbench.trust.manage\",\n\t\t\t\t\ttitle: nls.localize(\n\t\t\t\t\t\t\"manage workspace trust\",\n\t\t\t\t\t\t\"Manage Workspace Trust\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tdiagnostics,\n\t\t\t\tkind: CodeActionKind.QuickFix.value,\n\t\t\t},\n\t\t];\n\t}\n\n\tprivate addCodeActions(\n\t\trange: IRange,\n\t\tcodeActions: languages.CodeAction[],\n\t): void {\n\t\tlet actions = this.codeActions.get(this.settingsEditorModel.uri);\n\t\tif (!actions) {\n\t\t\tactions = [];\n\t\t\tthis.codeActions.set(this.settingsEditorModel.uri, actions);\n\t\t}\n\t\tactions.push([Range.lift(range), codeActions]);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis.markerService.remove(\"UnsupportedSettingsRenderer\", [\n\t\t\tthis.settingsEditorModel.uri,\n\t\t]);\n\t\tthis.codeActions.clear();\n\t\tsuper.dispose();\n\t}\n}\n\nclass WorkspaceConfigurationRenderer extends Disposable {\n\tprivate static readonly supportedKeys = [\n\t\t\"folders\",\n\t\t\"tasks\",\n\t\t\"launch\",\n\t\t\"extensions\",\n\t\t\"settings\",\n\t\t\"remoteAuthority\",\n\t\t\"transient\",\n\t];\n\n\tprivate readonly decorations = this.editor.createDecorationsCollection();\n\tprivate renderingDelayer: Delayer<void> = new Delayer<void>(200);\n\n\tconstructor(private editor: ICodeEditor, private workspaceSettingsEditorModel: SettingsEditorModel,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IMarkerService private readonly markerService: IMarkerService\n\t) {\n\t\tsuper();\n\t\tthis._register(this.editor.getModel()!.onDidChangeContent(() => this.renderingDelayer.trigger(() => this.render())));\n\t}\n\n\trender(): void {\n\t\tconst markerData: IMarkerData[] = [];\n\t\tif (\n\t\t\tthis.workspaceContextService.getWorkbenchState() ===\n\t\t\t\tWorkbenchState.WORKSPACE &&\n\t\t\tthis.workspaceSettingsEditorModel instanceof\n\t\t\t\tWorkspaceConfigurationEditorModel\n\t\t) {\n\t\t\tconst ranges: IRange[] = [];\n\t\t\tfor (const settingsGroup of this.workspaceSettingsEditorModel\n\t\t\t\t.configurationGroups) {\n\t\t\t\tfor (const section of settingsGroup.sections) {\n\t\t\t\t\tfor (const setting of section.settings) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!WorkspaceConfigurationRenderer.supportedKeys.includes(\n\t\t\t\t\t\t\t\tsetting.key,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tmarkerData.push({\n\t\t\t\t\t\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\t\t\t\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t\t\t\t\t\t...setting.range,\n\t\t\t\t\t\t\t\tmessage: nls.localize(\n\t\t\t\t\t\t\t\t\t\"unsupportedProperty\",\n\t\t\t\t\t\t\t\t\t\"Unsupported Property\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.decorations.set(\n\t\t\t\tranges.map((range) => this.createDecoration(range)),\n\t\t\t);\n\t\t}\n\t\tif (markerData.length) {\n\t\t\tthis.markerService.changeOne(\n\t\t\t\t\"WorkspaceConfigurationRenderer\",\n\t\t\t\tthis.workspaceSettingsEditorModel.uri,\n\t\t\t\tmarkerData,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.markerService.remove(\"WorkspaceConfigurationRenderer\", [\n\t\t\t\tthis.workspaceSettingsEditorModel.uri,\n\t\t\t]);\n\t\t}\n\t}\n\n\tprivate static readonly _DIM_CONFIGURATION_ =\n\t\tModelDecorationOptions.register({\n\t\t\tdescription: \"dim-configuration\",\n\t\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\t\tinlineClassName: \"dim-configuration\",\n\t\t});\n\n\tprivate createDecoration(range: IRange): IModelDeltaDecoration {\n\t\treturn {\n\t\t\trange,\n\t\t\toptions: WorkspaceConfigurationRenderer._DIM_CONFIGURATION_,\n\t\t};\n\t}\n\n\toverride dispose(): void {\n\t\tthis.markerService.remove(\"WorkspaceConfigurationRenderer\", [\n\t\t\tthis.workspaceSettingsEditorModel.uri,\n\t\t]);\n\t\tthis.decorations.clear();\n\t\tsuper.dispose();\n\t}\n}\n"],
  "mappings": "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",
  "names": ["setting"]
}
