{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/preferences/browser/settingsTree.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BrowserFeatures } from '../../../../base/browser/canIUse.js';\nimport * as DOM from '../../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../../base/browser/keyboardEvent.js';\nimport { renderMarkdownAsPlaintext } from '../../../../base/browser/markdownRenderer.js';\nimport { IMouseEvent } from '../../../../base/browser/mouseEvent.js';\nimport * as aria from '../../../../base/browser/ui/aria/aria.js';\nimport { Button } from '../../../../base/browser/ui/button/button.js';\nimport { SimpleIconLabel } from '../../../../base/browser/ui/iconLabel/simpleIconLabel.js';\nimport { IInputOptions, InputBox } from '../../../../base/browser/ui/inputbox/inputBox.js';\nimport { CachedListVirtualDelegate } from '../../../../base/browser/ui/list/list.js';\nimport { DefaultStyleController, IListAccessibilityProvider } from '../../../../base/browser/ui/list/listWidget.js';\nimport { ISelectOptionItem, SelectBox } from '../../../../base/browser/ui/selectBox/selectBox.js';\nimport { Toggle, unthemedToggleStyles } from '../../../../base/browser/ui/toggle/toggle.js';\nimport { ToolBar } from '../../../../base/browser/ui/toolbar/toolbar.js';\nimport { RenderIndentGuides } from '../../../../base/browser/ui/tree/abstractTree.js';\nimport { IObjectTreeOptions } from '../../../../base/browser/ui/tree/objectTree.js';\nimport { ObjectTreeModel } from '../../../../base/browser/ui/tree/objectTreeModel.js';\nimport { ITreeFilter, ITreeModel, ITreeNode, ITreeRenderer, TreeFilterResult, TreeVisibility } from '../../../../base/browser/ui/tree/tree.js';\nimport { Action, IAction, Separator } from '../../../../base/common/actions.js';\nimport { distinct } from '../../../../base/common/arrays.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { IJSONSchema } from '../../../../base/common/jsonSchema.js';\nimport { KeyCode } from '../../../../base/common/keyCodes.js';\nimport { Disposable, DisposableStore, dispose, isDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { isIOS } from '../../../../base/common/platform.js';\nimport { escapeRegExpCharacters } from '../../../../base/common/strings.js';\nimport { isDefined, isUndefinedOrNull } from '../../../../base/common/types.js';\nimport { ILanguageService } from '../../../../editor/common/languages/language.js';\nimport { MarkdownRenderer } from '../../../../editor/browser/widget/markdownRenderer/browser/markdownRenderer.js';\nimport { localize } from '../../../../nls.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ConfigurationTarget, IConfigurationService, getLanguageTagSettingPlainKey } from '../../../../platform/configuration/common/configuration.js';\nimport { ConfigurationScope } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService, IContextViewService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { IListService, WorkbenchObjectTree } from '../../../../platform/list/browser/listService.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { IProductService } from '../../../../platform/product/common/productService.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { defaultButtonStyles, getInputBoxStyle, getListStyles, getSelectBoxStyles } from '../../../../platform/theme/browser/defaultStyles.js';\nimport { editorBackground, foreground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { IUserDataProfilesService } from '../../../../platform/userDataProfile/common/userDataProfile.js';\nimport { getIgnoredSettings } from '../../../../platform/userDataSync/common/settingsMerge.js';\nimport { IUserDataSyncEnablementService, getDefaultIgnoredSettings } from '../../../../platform/userDataSync/common/userDataSync.js';\nimport { IExtensionsWorkbenchService } from '../../extensions/common/extensions.js';\nimport { settingsMoreActionIcon } from './preferencesIcons.js';\nimport { SettingsTarget } from './preferencesWidgets.js';\nimport { ISettingOverrideClickEvent, SettingsTreeIndicatorsLabel, getIndicatorsLabelAriaLabel } from './settingsEditorSettingIndicators.js';\nimport { ITOCEntry } from './settingsLayout.js';\nimport { ISettingsEditorViewState, SettingsTreeElement, SettingsTreeGroupChild, SettingsTreeGroupElement, SettingsTreeNewExtensionsElement, SettingsTreeSettingElement, inspectSetting, objectSettingSupportsRemoveDefaultValue, settingKeyToDisplayFormat } from './settingsTreeModels.js';\nimport { ExcludeSettingWidget, IBoolObjectDataItem, IIncludeExcludeDataItem, IListDataItem, IObjectDataItem, IObjectEnumOption, IObjectKeySuggester, IObjectValueSuggester, IncludeSettingWidget, ListSettingWidget, ObjectSettingCheckboxWidget, ObjectSettingDropdownWidget, ObjectValue, SettingListEvent } from './settingsWidgets.js';\nimport { LANGUAGE_SETTING_TAG, SETTINGS_EDITOR_COMMAND_SHOW_CONTEXT_MENU, compareTwoNullableNumbers } from '../common/preferences.js';\nimport { settingsNumberInputBackground, settingsNumberInputBorder, settingsNumberInputForeground, settingsSelectBackground, settingsSelectBorder, settingsSelectForeground, settingsSelectListBorder, settingsTextInputBackground, settingsTextInputBorder, settingsTextInputForeground } from '../common/settingsEditorColorRegistry.js';\nimport { APPLY_ALL_PROFILES_SETTING, IWorkbenchConfigurationService } from '../../../services/configuration/common/configuration.js';\nimport { IWorkbenchEnvironmentService } from '../../../services/environment/common/environmentService.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { ISetting, ISettingsGroup, SETTINGS_AUTHORITY, SettingValueType } from '../../../services/preferences/common/preferences.js';\nimport { getInvalidTypeError } from '../../../services/preferences/common/preferencesValidation.js';\nimport { getDefaultHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegateFactory.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\nimport { URI } from '../../../../base/common/uri.js';\n\nconst $ = DOM.$;\n\nfunction getIncludeExcludeDisplayValue(element: SettingsTreeSettingElement): IIncludeExcludeDataItem[] {\n\tconst elementDefaultValue: Record<string, unknown> = typeof element.defaultValue === 'object'\n\t\t? element.defaultValue ?? {}\n\t\t: {};\n\n\tconst data = element.isConfigured ?\n\t\t{ ...elementDefaultValue, ...element.scopeValue } :\n\t\telementDefaultValue;\n\n\treturn Object.keys(data)\n\t\t.filter(key => !!data[key])\n\t\t.map(key => {\n\t\t\tconst defaultValue = elementDefaultValue[key];\n\n\t\t\t// Get source if it's a default value\n\t\t\tlet source: string | undefined;\n\t\t\tif (defaultValue === data[key] && element.setting.type === 'object' && element.defaultValueSource instanceof Map) {\n\t\t\t\tconst defaultSource = element.defaultValueSource.get(`${element.setting.key}.${key}`);\n\t\t\t\tsource = typeof defaultSource === 'string' ? defaultSource : defaultSource?.displayName;\n\t\t\t}\n\n\t\t\tconst value = data[key];\n\t\t\tconst sibling = typeof value === 'boolean' ? undefined : value.when;\n\t\t\treturn {\n\t\t\t\tvalue: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdata: key\n\t\t\t\t},\n\t\t\t\tsibling,\n\t\t\t\telementType: element.valueType,\n\t\t\t\tsource\n\t\t\t};\n\t\t});\n}\n\nfunction areAllPropertiesDefined(properties: string[], itemsToDisplay: IObjectDataItem[]): boolean {\n\tconst staticProperties = new Set(properties);\n\titemsToDisplay.forEach(({ key }) => staticProperties.delete(key.data));\n\treturn staticProperties.size === 0;\n}\n\nfunction getEnumOptionsFromSchema(schema: IJSONSchema): IObjectEnumOption[] {\n\tif (schema.anyOf) {\n\t\treturn schema.anyOf.map(getEnumOptionsFromSchema).flat();\n\t}\n\n\tconst enumDescriptions = schema.enumDescriptions ?? [];\n\n\treturn (schema.enum ?? []).map((value, idx) => {\n\t\tconst description = idx < enumDescriptions.length\n\t\t\t? enumDescriptions[idx]\n\t\t\t: undefined;\n\n\t\treturn { value, description };\n\t});\n}\n\nfunction getObjectValueType(schema: IJSONSchema): ObjectValue['type'] {\n\tif (schema.anyOf) {\n\t\tconst subTypes = schema.anyOf.map(getObjectValueType);\n\t\tif (subTypes.some(type => type === 'enum')) {\n\t\t\treturn 'enum';\n\t\t}\n\t\treturn 'string';\n\t}\n\n\tif (schema.type === 'boolean') {\n\t\treturn 'boolean';\n\t} else if (schema.type === 'string' && isDefined(schema.enum) && schema.enum.length > 0) {\n\t\treturn 'enum';\n\t} else {\n\t\treturn 'string';\n\t}\n}\n\nfunction getObjectEntryValueDisplayValue(type: ObjectValue['type'], data: unknown, options: IObjectEnumOption[]): ObjectValue {\n\tif (type === 'boolean') {\n\t\treturn { type, data: !!data };\n\t} else if (type === 'enum') {\n\t\treturn { type, data: '' + data, options };\n\t} else {\n\t\treturn { type, data: '' + data };\n\t}\n}\n\nfunction getObjectDisplayValue(element: SettingsTreeSettingElement): IObjectDataItem[] {\n\tconst elementDefaultValue: Record<string, unknown> = typeof element.defaultValue === 'object'\n\t\t? element.defaultValue ?? {}\n\t\t: {};\n\n\tconst elementScopeValue: Record<string, unknown> = typeof element.scopeValue === 'object'\n\t\t? element.scopeValue ?? {}\n\t\t: {};\n\n\tconst data = element.isConfigured ?\n\t\t{ ...elementDefaultValue, ...elementScopeValue } :\n\t\telementDefaultValue;\n\n\tconst { objectProperties, objectPatternProperties, objectAdditionalProperties } = element.setting;\n\tconst patternsAndSchemas = Object\n\t\t.entries(objectPatternProperties ?? {})\n\t\t.map(([pattern, schema]) => ({\n\t\t\tpattern: new RegExp(pattern),\n\t\t\tschema\n\t\t}));\n\n\tconst wellDefinedKeyEnumOptions = Object.entries(objectProperties ?? {}).map(\n\t\t([key, schema]) => ({ value: key, description: schema.description })\n\t);\n\n\treturn Object.keys(data).map(key => {\n\t\tconst defaultValue = elementDefaultValue[key];\n\n\t\t// Get source if it's a default value\n\t\tlet source: string | undefined;\n\t\tif (defaultValue === data[key] && element.setting.type === 'object' && element.defaultValueSource instanceof Map) {\n\t\t\tconst defaultSource = element.defaultValueSource.get(`${element.setting.key}.${key}`);\n\t\t\tsource = typeof defaultSource === 'string' ? defaultSource : defaultSource?.displayName;\n\t\t}\n\n\t\tif (isDefined(objectProperties) && key in objectProperties) {\n\t\t\tconst valueEnumOptions = getEnumOptionsFromSchema(objectProperties[key]);\n\t\t\treturn {\n\t\t\t\tkey: {\n\t\t\t\t\ttype: 'enum',\n\t\t\t\t\tdata: key,\n\t\t\t\t\toptions: wellDefinedKeyEnumOptions,\n\t\t\t\t},\n\t\t\t\tvalue: getObjectEntryValueDisplayValue(getObjectValueType(objectProperties[key]), data[key], valueEnumOptions),\n\t\t\t\tkeyDescription: objectProperties[key].description,\n\t\t\t\tremovable: isUndefinedOrNull(defaultValue),\n\t\t\t\tresetable: !isUndefinedOrNull(defaultValue),\n\t\t\t\tsource\n\t\t\t} satisfies IObjectDataItem;\n\t\t}\n\n\t\t// The row is removable if it doesn't have a default value assigned or the setting supports removing the default value.\n\t\t// If a default value is assigned and the user modified the default, it can be reset back to the default.\n\t\tconst removable = defaultValue === undefined || objectSettingSupportsRemoveDefaultValue(element.setting.key);\n\t\tconst resetable = !!defaultValue && defaultValue !== data[key];\n\t\tconst schema = patternsAndSchemas.find(({ pattern }) => pattern.test(key))?.schema;\n\t\tif (schema) {\n\t\t\tconst valueEnumOptions = getEnumOptionsFromSchema(schema);\n\t\t\treturn {\n\t\t\t\tkey: { type: 'string', data: key },\n\t\t\t\tvalue: getObjectEntryValueDisplayValue(getObjectValueType(schema), data[key], valueEnumOptions),\n\t\t\t\tkeyDescription: schema.description,\n\t\t\t\tremovable,\n\t\t\t\tresetable,\n\t\t\t\tsource\n\t\t\t} satisfies IObjectDataItem;\n\t\t}\n\n\t\tconst additionalValueEnums = getEnumOptionsFromSchema(\n\t\t\ttypeof objectAdditionalProperties === 'boolean'\n\t\t\t\t? {}\n\t\t\t\t: objectAdditionalProperties ?? {}\n\t\t);\n\n\t\treturn {\n\t\t\tkey: { type: 'string', data: key },\n\t\t\tvalue: getObjectEntryValueDisplayValue(\n\t\t\t\ttypeof objectAdditionalProperties === 'object' ? getObjectValueType(objectAdditionalProperties) : 'string',\n\t\t\t\tdata[key],\n\t\t\t\tadditionalValueEnums,\n\t\t\t),\n\t\t\tkeyDescription: typeof objectAdditionalProperties === 'object' ? objectAdditionalProperties.description : undefined,\n\t\t\tremovable,\n\t\t\tresetable,\n\t\t\tsource\n\t\t} satisfies IObjectDataItem;\n\t}).filter(item => !isUndefinedOrNull(item.value.data));\n}\n\nfunction getBoolObjectDisplayValue(element: SettingsTreeSettingElement): IBoolObjectDataItem[] {\n\tconst elementDefaultValue: Record<string, unknown> = typeof element.defaultValue === 'object'\n\t\t? element.defaultValue ?? {}\n\t\t: {};\n\n\tconst elementScopeValue: Record<string, unknown> = typeof element.scopeValue === 'object'\n\t\t? element.scopeValue ?? {}\n\t\t: {};\n\n\tconst data = element.isConfigured ?\n\t\t{ ...elementDefaultValue, ...elementScopeValue } :\n\t\telementDefaultValue;\n\n\tconst { objectProperties } = element.setting;\n\tconst displayValues: IBoolObjectDataItem[] = [];\n\tfor (const key in objectProperties) {\n\t\tconst defaultValue = elementDefaultValue[key];\n\n\t\t// Get source if it's a default value\n\t\tlet source: string | undefined;\n\t\tif (defaultValue === data[key] && element.setting.type === 'object' && element.defaultValueSource instanceof Map) {\n\t\t\tconst defaultSource = element.defaultValueSource.get(key);\n\t\t\tsource = typeof defaultSource === 'string' ? defaultSource : defaultSource?.displayName;\n\t\t}\n\n\t\tdisplayValues.push({\n\t\t\tkey: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdata: key\n\t\t\t},\n\t\t\tvalue: {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdata: !!data[key]\n\t\t\t},\n\t\t\tkeyDescription: objectProperties[key].description,\n\t\t\tremovable: false,\n\t\t\tresetable: true,\n\t\t\tsource\n\t\t});\n\t}\n\treturn displayValues;\n}\n\nfunction createArraySuggester(element: SettingsTreeSettingElement): IObjectKeySuggester {\n\treturn (keys, idx) => {\n\t\tconst enumOptions: IObjectEnumOption[] = [];\n\n\t\tif (element.setting.enum) {\n\t\t\telement.setting.enum.forEach((key, i) => {\n\t\t\t\t// include the currently selected value, even if uniqueItems is true\n\t\t\t\tif (!element.setting.uniqueItems || (idx !== undefined && key === keys[idx]) || !keys.includes(key)) {\n\t\t\t\t\tconst description = element.setting.enumDescriptions?.[i];\n\t\t\t\t\tenumOptions.push({ value: key, description });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn enumOptions.length > 0\n\t\t\t? { type: 'enum', data: enumOptions[0].value, options: enumOptions }\n\t\t\t: undefined;\n\t};\n}\n\nfunction createObjectKeySuggester(element: SettingsTreeSettingElement): IObjectKeySuggester {\n\tconst { objectProperties } = element.setting;\n\tconst allStaticKeys = Object.keys(objectProperties ?? {});\n\n\treturn keys => {\n\t\tconst existingKeys = new Set(keys);\n\t\tconst enumOptions: IObjectEnumOption[] = [];\n\n\t\tallStaticKeys.forEach(staticKey => {\n\t\t\tif (!existingKeys.has(staticKey)) {\n\t\t\t\tenumOptions.push({ value: staticKey, description: objectProperties![staticKey].description });\n\t\t\t}\n\t\t});\n\n\t\treturn enumOptions.length > 0\n\t\t\t? { type: 'enum', data: enumOptions[0].value, options: enumOptions }\n\t\t\t: undefined;\n\t};\n}\n\nfunction createObjectValueSuggester(element: SettingsTreeSettingElement): IObjectValueSuggester {\n\tconst { objectProperties, objectPatternProperties, objectAdditionalProperties } = element.setting;\n\n\tconst patternsAndSchemas = Object\n\t\t.entries(objectPatternProperties ?? {})\n\t\t.map(([pattern, schema]) => ({\n\t\t\tpattern: new RegExp(pattern),\n\t\t\tschema\n\t\t}));\n\n\treturn (key: string) => {\n\t\tlet suggestedSchema: IJSONSchema | undefined;\n\n\t\tif (isDefined(objectProperties) && key in objectProperties) {\n\t\t\tsuggestedSchema = objectProperties[key];\n\t\t}\n\n\t\tconst patternSchema = suggestedSchema ?? patternsAndSchemas.find(({ pattern }) => pattern.test(key))?.schema;\n\n\t\tif (isDefined(patternSchema)) {\n\t\t\tsuggestedSchema = patternSchema;\n\t\t} else if (isDefined(objectAdditionalProperties) && typeof objectAdditionalProperties === 'object') {\n\t\t\tsuggestedSchema = objectAdditionalProperties;\n\t\t}\n\n\t\tif (isDefined(suggestedSchema)) {\n\t\t\tconst type = getObjectValueType(suggestedSchema);\n\n\t\t\tif (type === 'boolean') {\n\t\t\t\treturn { type, data: suggestedSchema.default ?? true };\n\t\t\t} else if (type === 'enum') {\n\t\t\t\tconst options = getEnumOptionsFromSchema(suggestedSchema);\n\t\t\t\treturn { type, data: suggestedSchema.default ?? options[0].value, options };\n\t\t\t} else {\n\t\t\t\treturn { type, data: suggestedSchema.default ?? '' };\n\t\t\t}\n\t\t}\n\n\t\treturn;\n\t};\n}\n\nfunction isNonNullableNumericType(type: unknown): type is 'number' | 'integer' {\n\treturn type === 'number' || type === 'integer';\n}\n\nfunction parseNumericObjectValues(dataElement: SettingsTreeSettingElement, v: Record<string, unknown>): Record<string, unknown> {\n\tconst newRecord: Record<string, unknown> = {};\n\tfor (const key in v) {\n\t\t// Set to true/false once we're sure of the answer\n\t\tlet keyMatchesNumericProperty: boolean | undefined;\n\t\tconst patternProperties = dataElement.setting.objectPatternProperties;\n\t\tconst properties = dataElement.setting.objectProperties;\n\t\tconst additionalProperties = dataElement.setting.objectAdditionalProperties;\n\n\t\t// Match the current record key against the properties of the object\n\t\tif (properties) {\n\t\t\tfor (const propKey in properties) {\n\t\t\t\tif (propKey === key) {\n\t\t\t\t\tkeyMatchesNumericProperty = isNonNullableNumericType(properties[propKey].type);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (keyMatchesNumericProperty === undefined && patternProperties) {\n\t\t\tfor (const patternKey in patternProperties) {\n\t\t\t\tif (key.match(patternKey)) {\n\t\t\t\t\tkeyMatchesNumericProperty = isNonNullableNumericType(patternProperties[patternKey].type);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (keyMatchesNumericProperty === undefined && additionalProperties && typeof additionalProperties !== 'boolean') {\n\t\t\tif (isNonNullableNumericType(additionalProperties.type)) {\n\t\t\t\tkeyMatchesNumericProperty = true;\n\t\t\t}\n\t\t}\n\t\tnewRecord[key] = keyMatchesNumericProperty ? Number(v[key]) : v[key];\n\t}\n\treturn newRecord;\n}\n\nfunction getListDisplayValue(element: SettingsTreeSettingElement): IListDataItem[] {\n\tif (!element.value || !Array.isArray(element.value)) {\n\t\treturn [];\n\t}\n\n\tif (element.setting.arrayItemType === 'enum') {\n\t\tlet enumOptions: IObjectEnumOption[] = [];\n\t\tif (element.setting.enum) {\n\t\t\tenumOptions = element.setting.enum.map((setting, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tvalue: setting,\n\t\t\t\t\tdescription: element.setting.enumDescriptions?.[i]\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\treturn element.value.map((key: string) => {\n\t\t\treturn {\n\t\t\t\tvalue: {\n\t\t\t\t\ttype: 'enum',\n\t\t\t\t\tdata: key,\n\t\t\t\t\toptions: enumOptions\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t} else {\n\t\treturn element.value.map((key: string) => {\n\t\t\treturn {\n\t\t\t\tvalue: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdata: key\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}\n}\n\nfunction getShowAddButtonList(dataElement: SettingsTreeSettingElement, listDisplayValue: IListDataItem[]): boolean {\n\tif (dataElement.setting.enum && dataElement.setting.uniqueItems) {\n\t\treturn dataElement.setting.enum.length - listDisplayValue.length > 0;\n\t} else {\n\t\treturn true;\n\t}\n}\n\nexport function resolveSettingsTree(tocData: ITOCEntry<string>, coreSettingsGroups: ISettingsGroup[], logService: ILogService): { tree: ITOCEntry<ISetting>; leftoverSettings: Set<ISetting> } {\n\tconst allSettings = getFlatSettings(coreSettingsGroups);\n\treturn {\n\t\ttree: _resolveSettingsTree(tocData, allSettings, logService),\n\t\tleftoverSettings: allSettings\n\t};\n}\n\nexport function resolveConfiguredUntrustedSettings(groups: ISettingsGroup[], target: SettingsTarget, languageFilter: string | undefined, configurationService: IWorkbenchConfigurationService): ISetting[] {\n\tconst allSettings = getFlatSettings(groups);\n\treturn [...allSettings].filter(setting => setting.restricted && inspectSetting(setting.key, target, languageFilter, configurationService).isConfigured);\n}\n\nexport async function createTocTreeForExtensionSettings(extensionService: IExtensionService, groups: ISettingsGroup[]): Promise<ITOCEntry<ISetting>> {\n\tconst extGroupTree = new Map<string, ITOCEntry<ISetting>>();\n\tconst addEntryToTree = (extensionId: string, extensionName: string, childEntry: ITOCEntry<ISetting>) => {\n\t\tif (!extGroupTree.has(extensionId)) {\n\t\t\tconst rootEntry = {\n\t\t\t\tid: extensionId,\n\t\t\t\tlabel: extensionName,\n\t\t\t\tchildren: []\n\t\t\t};\n\t\t\textGroupTree.set(extensionId, rootEntry);\n\t\t}\n\t\textGroupTree.get(extensionId)!.children!.push(childEntry);\n\t};\n\tconst processGroupEntry = async (group: ISettingsGroup) => {\n\t\tconst flatSettings = group.sections.map(section => section.settings).flat();\n\n\t\tconst extensionId = group.extensionInfo!.id;\n\t\tconst extension = await extensionService.getExtension(extensionId);\n\t\tconst extensionName = extension?.displayName ?? extension?.name ?? extensionId;\n\n\t\t// Each group represents a single category of settings.\n\t\t// If the extension author forgets to specify an id for the group,\n\t\t// fall back to the title given to the group.\n\t\tconst childEntry: ITOCEntry<ISetting> = {\n\t\t\tid: group.id || group.title,\n\t\t\tlabel: group.title,\n\t\t\torder: group.order,\n\t\t\tsettings: flatSettings\n\t\t};\n\t\taddEntryToTree(extensionId, extensionName, childEntry);\n\t};\n\n\tconst processPromises = groups.map(g => processGroupEntry(g));\n\treturn Promise.all(processPromises).then(() => {\n\t\tconst extGroups: ITOCEntry<ISetting>[] = [];\n\t\tfor (const extensionRootEntry of extGroupTree.values()) {\n\t\t\tfor (const child of extensionRootEntry.children!) {\n\t\t\t\t// Sort the individual settings of the child by order.\n\t\t\t\t// Leave the undefined order settings untouched.\n\t\t\t\tchild.settings?.sort((a, b) => {\n\t\t\t\t\treturn compareTwoNullableNumbers(a.order, b.order);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (extensionRootEntry.children!.length === 1) {\n\t\t\t\t// There is a single category for this extension.\n\t\t\t\t// Push a flattened setting.\n\t\t\t\textGroups.push({\n\t\t\t\t\tid: extensionRootEntry.id,\n\t\t\t\t\tlabel: extensionRootEntry.children![0].label,\n\t\t\t\t\tsettings: extensionRootEntry.children![0].settings\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Sort the categories.\n\t\t\t\t// Leave the undefined order categories untouched.\n\t\t\t\textensionRootEntry.children!.sort((a, b) => {\n\t\t\t\t\treturn compareTwoNullableNumbers(a.order, b.order);\n\t\t\t\t});\n\n\t\t\t\t// If there is a category that matches the setting name,\n\t\t\t\t// add the settings in manually as \"ungrouped\" settings.\n\t\t\t\t// https://github.com/microsoft/vscode/issues/137259\n\t\t\t\tconst ungroupedChild = extensionRootEntry.children!.find(child => child.label === extensionRootEntry.label);\n\t\t\t\tif (ungroupedChild && !ungroupedChild.children) {\n\t\t\t\t\tconst groupedChildren = extensionRootEntry.children!.filter(child => child !== ungroupedChild);\n\t\t\t\t\textGroups.push({\n\t\t\t\t\t\tid: extensionRootEntry.id,\n\t\t\t\t\t\tlabel: extensionRootEntry.label,\n\t\t\t\t\t\tsettings: ungroupedChild.settings,\n\t\t\t\t\t\tchildren: groupedChildren\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// Push all the groups as-is.\n\t\t\t\t\textGroups.push(extensionRootEntry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Sort the outermost settings.\n\t\textGroups.sort((a, b) => a.label.localeCompare(b.label));\n\n\t\treturn {\n\t\t\tid: 'extensions',\n\t\t\tlabel: localize('extensions', \"Extensions\"),\n\t\t\tchildren: extGroups\n\t\t};\n\t});\n}\n\nfunction _resolveSettingsTree(tocData: ITOCEntry<string>, allSettings: Set<ISetting>, logService: ILogService): ITOCEntry<ISetting> {\n\tlet children: ITOCEntry<ISetting>[] | undefined;\n\tif (tocData.children) {\n\t\tchildren = tocData.children\n\t\t\t.map(child => _resolveSettingsTree(child, allSettings, logService))\n\t\t\t.filter(child => child.children?.length || child.settings?.length);\n\t}\n\n\tlet settings: ISetting[] | undefined;\n\tif (tocData.settings) {\n\t\tsettings = tocData.settings.map(pattern => getMatchingSettings(allSettings, pattern, logService)).flat();\n\t}\n\n\tif (!children && !settings) {\n\t\tthrow new Error(`TOC node has no child groups or settings: ${tocData.id}`);\n\t}\n\n\treturn {\n\t\tid: tocData.id,\n\t\tlabel: tocData.label,\n\t\tchildren,\n\t\tsettings\n\t};\n}\n\nconst knownDynamicSettingGroups = [\n\t/^settingsSync\\..*/,\n\t/^sync\\..*/,\n\t/^workbench.fontAliasing$/,\n];\n\nfunction getMatchingSettings(allSettings: Set<ISetting>, pattern: string, logService: ILogService): ISetting[] {\n\tconst result: ISetting[] = [];\n\n\tallSettings.forEach(s => {\n\t\tif (settingMatches(s, pattern)) {\n\t\t\tresult.push(s);\n\t\t\tallSettings.delete(s);\n\t\t}\n\t});\n\n\tif (!result.length && !knownDynamicSettingGroups.some(r => r.test(pattern))) {\n\t\tlogService.warn(`Settings pattern \"${pattern}\" doesn't match any settings`);\n\t}\n\n\treturn result.sort((a, b) => a.key.localeCompare(b.key));\n}\n\nconst settingPatternCache = new Map<string, RegExp>();\n\nexport function createSettingMatchRegExp(pattern: string): RegExp {\n\tpattern = escapeRegExpCharacters(pattern)\n\t\t.replace(/\\\\\\*/g, '.*');\n\n\treturn new RegExp(`^${pattern}$`, 'i');\n}\n\nfunction settingMatches(s: ISetting, pattern: string): boolean {\n\tlet regExp = settingPatternCache.get(pattern);\n\tif (!regExp) {\n\t\tregExp = createSettingMatchRegExp(pattern);\n\t\tsettingPatternCache.set(pattern, regExp);\n\t}\n\n\treturn regExp.test(s.key);\n}\n\nfunction getFlatSettings(settingsGroups: ISettingsGroup[]) {\n\tconst result: Set<ISetting> = new Set();\n\n\tfor (const group of settingsGroups) {\n\t\tfor (const section of group.sections) {\n\t\t\tfor (const s of section.settings) {\n\t\t\t\tif (!s.overrides || !s.overrides.length) {\n\t\t\t\t\tresult.add(s);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\ninterface IDisposableTemplate {\n\treadonly toDispose: DisposableStore;\n}\n\ninterface ISettingItemTemplate<T = any> extends IDisposableTemplate {\n\tonChange?: (value: T) => void;\n\n\tcontext?: SettingsTreeSettingElement;\n\tcontainerElement: HTMLElement;\n\tcategoryElement: HTMLElement;\n\tlabelElement: SimpleIconLabel;\n\tdescriptionElement: HTMLElement;\n\tcontrolElement: HTMLElement;\n\tdeprecationWarningElement: HTMLElement;\n\tindicatorsLabel: SettingsTreeIndicatorsLabel;\n\ttoolbar: ToolBar;\n\treadonly elementDisposables: DisposableStore;\n}\n\ninterface ISettingBoolItemTemplate extends ISettingItemTemplate<boolean> {\n\tcheckbox: Toggle;\n}\n\ninterface ISettingExtensionToggleItemTemplate extends ISettingItemTemplate<undefined> {\n\tactionButton: Button;\n\tdismissButton: Button;\n}\n\ninterface ISettingTextItemTemplate extends ISettingItemTemplate<string> {\n\tinputBox: InputBox;\n\tvalidationErrorMessageElement: HTMLElement;\n}\n\ntype ISettingNumberItemTemplate = ISettingTextItemTemplate;\n\ninterface ISettingEnumItemTemplate extends ISettingItemTemplate<number> {\n\tselectBox: SelectBox;\n\tselectElement: HTMLSelectElement | null;\n\tenumDescriptionElement: HTMLElement;\n}\n\ninterface ISettingComplexItemTemplate extends ISettingItemTemplate<void> {\n\tbutton: HTMLElement;\n\tvalidationErrorMessageElement: HTMLElement;\n}\n\ninterface ISettingListItemTemplate extends ISettingItemTemplate<string[] | undefined> {\n\tlistWidget: ListSettingWidget<IListDataItem>;\n\tvalidationErrorMessageElement: HTMLElement;\n}\n\ninterface ISettingIncludeExcludeItemTemplate extends ISettingItemTemplate<void> {\n\tincludeExcludeWidget: ListSettingWidget<IIncludeExcludeDataItem>;\n}\n\ninterface ISettingObjectItemTemplate extends ISettingItemTemplate<Record<string, unknown> | undefined> {\n\tobjectDropdownWidget?: ObjectSettingDropdownWidget;\n\tobjectCheckboxWidget?: ObjectSettingCheckboxWidget;\n\tvalidationErrorMessageElement: HTMLElement;\n}\n\ninterface ISettingNewExtensionsTemplate extends IDisposableTemplate {\n\tbutton: Button;\n\tcontext?: SettingsTreeNewExtensionsElement;\n}\n\ninterface IGroupTitleTemplate extends IDisposableTemplate {\n\tcontext?: SettingsTreeGroupElement;\n\tparent: HTMLElement;\n}\n\nconst SETTINGS_TEXT_TEMPLATE_ID = 'settings.text.template';\nconst SETTINGS_MULTILINE_TEXT_TEMPLATE_ID = 'settings.multilineText.template';\nconst SETTINGS_NUMBER_TEMPLATE_ID = 'settings.number.template';\nconst SETTINGS_ENUM_TEMPLATE_ID = 'settings.enum.template';\nconst SETTINGS_BOOL_TEMPLATE_ID = 'settings.bool.template';\nconst SETTINGS_ARRAY_TEMPLATE_ID = 'settings.array.template';\nconst SETTINGS_EXCLUDE_TEMPLATE_ID = 'settings.exclude.template';\nconst SETTINGS_INCLUDE_TEMPLATE_ID = 'settings.include.template';\nconst SETTINGS_OBJECT_TEMPLATE_ID = 'settings.object.template';\nconst SETTINGS_BOOL_OBJECT_TEMPLATE_ID = 'settings.boolObject.template';\nconst SETTINGS_COMPLEX_TEMPLATE_ID = 'settings.complex.template';\nconst SETTINGS_NEW_EXTENSIONS_TEMPLATE_ID = 'settings.newExtensions.template';\nconst SETTINGS_ELEMENT_TEMPLATE_ID = 'settings.group.template';\nconst SETTINGS_EXTENSION_TOGGLE_TEMPLATE_ID = 'settings.extensionToggle.template';\n\nexport interface ISettingChangeEvent {\n\tkey: string;\n\tvalue: any; // undefined => reset/unconfigure\n\ttype: SettingValueType | SettingValueType[];\n\tmanualReset: boolean;\n\tscope: ConfigurationScope | undefined;\n}\n\nexport interface ISettingLinkClickEvent {\n\tsource: SettingsTreeSettingElement;\n\ttargetKey: string;\n}\n\nfunction removeChildrenFromTabOrder(node: Element): void {\n\tconst focusableElements = node.querySelectorAll(`\n\t\t[tabindex=\"0\"],\n\t\tinput:not([tabindex=\"-1\"]),\n\t\tselect:not([tabindex=\"-1\"]),\n\t\ttextarea:not([tabindex=\"-1\"]),\n\t\ta:not([tabindex=\"-1\"]),\n\t\tbutton:not([tabindex=\"-1\"]),\n\t\tarea:not([tabindex=\"-1\"])\n\t`);\n\n\tfocusableElements.forEach(element => {\n\t\telement.setAttribute(AbstractSettingRenderer.ELEMENT_FOCUSABLE_ATTR, 'true');\n\t\telement.setAttribute('tabindex', '-1');\n\t});\n}\n\nfunction addChildrenToTabOrder(node: Element): void {\n\tconst focusableElements = node.querySelectorAll(\n\t\t`[${AbstractSettingRenderer.ELEMENT_FOCUSABLE_ATTR}=\"true\"]`\n\t);\n\n\tfocusableElements.forEach(element => {\n\t\telement.removeAttribute(AbstractSettingRenderer.ELEMENT_FOCUSABLE_ATTR);\n\t\telement.setAttribute('tabindex', '0');\n\t});\n}\n\nexport interface HeightChangeParams {\n\telement: SettingsTreeElement;\n\theight: number;\n}\n\nexport abstract class AbstractSettingRenderer extends Disposable implements ITreeRenderer<SettingsTreeElement, never, any> {\n\t/** To override */\n\tabstract get templateId(): string;\n\n\tstatic readonly CONTROL_CLASS = 'setting-control-focus-target';\n\tstatic readonly CONTROL_SELECTOR = '.' + this.CONTROL_CLASS;\n\tstatic readonly CONTENTS_CLASS = 'setting-item-contents';\n\tstatic readonly CONTENTS_SELECTOR = '.' + this.CONTENTS_CLASS;\n\tstatic readonly ALL_ROWS_SELECTOR = '.monaco-list-row';\n\n\tstatic readonly SETTING_KEY_ATTR = 'data-key';\n\tstatic readonly SETTING_ID_ATTR = 'data-id';\n\tstatic readonly ELEMENT_FOCUSABLE_ATTR = 'data-focusable';\n\n\tprivate readonly _onDidClickOverrideElement = this._register(new Emitter<ISettingOverrideClickEvent>());\n\treadonly onDidClickOverrideElement: Event<ISettingOverrideClickEvent> = this._onDidClickOverrideElement.event;\n\n\tprotected readonly _onDidChangeSetting = this._register(new Emitter<ISettingChangeEvent>());\n\treadonly onDidChangeSetting: Event<ISettingChangeEvent> = this._onDidChangeSetting.event;\n\n\tprotected readonly _onDidOpenSettings = this._register(new Emitter<string>());\n\treadonly onDidOpenSettings: Event<string> = this._onDidOpenSettings.event;\n\n\tprivate readonly _onDidClickSettingLink = this._register(new Emitter<ISettingLinkClickEvent>());\n\treadonly onDidClickSettingLink: Event<ISettingLinkClickEvent> = this._onDidClickSettingLink.event;\n\n\tprotected readonly _onDidFocusSetting = this._register(new Emitter<SettingsTreeSettingElement>());\n\treadonly onDidFocusSetting: Event<SettingsTreeSettingElement> = this._onDidFocusSetting.event;\n\n\tprivate ignoredSettings: string[];\n\tprivate readonly _onDidChangeIgnoredSettings = this._register(new Emitter<void>());\n\treadonly onDidChangeIgnoredSettings: Event<void> = this._onDidChangeIgnoredSettings.event;\n\n\tprotected readonly _onDidChangeSettingHeight = this._register(new Emitter<HeightChangeParams>());\n\treadonly onDidChangeSettingHeight: Event<HeightChangeParams> = this._onDidChangeSettingHeight.event;\n\n\tprotected readonly _onApplyFilter = this._register(new Emitter<string>());\n\treadonly onApplyFilter: Event<string> = this._onApplyFilter.event;\n\n\tprivate readonly markdownRenderer: MarkdownRenderer;\n\n\tconstructor(\n\t\tprivate readonly settingActions: IAction[],\n\t\tprivate readonly disposableActionFactory: (setting: ISetting, settingTarget: SettingsTarget) => IAction[],\n\t\t@IThemeService protected readonly _themeService: IThemeService,\n\t\t@IContextViewService protected readonly _contextViewService: IContextViewService,\n\t\t@IOpenerService protected readonly _openerService: IOpenerService,\n\t\t@IInstantiationService protected readonly _instantiationService: IInstantiationService,\n\t\t@ICommandService protected readonly _commandService: ICommandService,\n\t\t@IContextMenuService protected readonly _contextMenuService: IContextMenuService,\n\t\t@IKeybindingService protected readonly _keybindingService: IKeybindingService,\n\t\t@IConfigurationService protected readonly _configService: IConfigurationService,\n\t\t@IExtensionService protected readonly _extensionsService: IExtensionService,\n\t\t@IExtensionsWorkbenchService protected readonly _extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IProductService protected readonly _productService: IProductService,\n\t\t@ITelemetryService protected readonly _telemetryService: ITelemetryService,\n\t\t@IHoverService protected readonly _hoverService: IHoverService,\n\t) {\n\t\tsuper();\n\n\t\tthis.markdownRenderer = this._register(_instantiationService.createInstance(MarkdownRenderer, {}));\n\n\t\tthis.ignoredSettings = getIgnoredSettings(getDefaultIgnoredSettings(), this._configService);\n\t\tthis._register(this._configService.onDidChangeConfiguration(e => {\n\t\t\tthis.ignoredSettings = getIgnoredSettings(getDefaultIgnoredSettings(), this._configService);\n\t\t\tthis._onDidChangeIgnoredSettings.fire();\n\t\t}));\n\t}\n\n\tabstract renderTemplate(container: HTMLElement): any;\n\n\tabstract renderElement(element: ITreeNode<SettingsTreeSettingElement, never>, index: number, templateData: any): void;\n\n\tprotected renderCommonTemplate(tree: any, _container: HTMLElement, typeClass: string): ISettingItemTemplate {\n\t\t_container.classList.add('setting-item');\n\t\t_container.classList.add('setting-item-' + typeClass);\n\n\t\tconst toDispose = new DisposableStore();\n\n\t\tconst container = DOM.append(_container, $(AbstractSettingRenderer.CONTENTS_SELECTOR));\n\t\tcontainer.classList.add('settings-row-inner-container');\n\t\tconst titleElement = DOM.append(container, $('.setting-item-title'));\n\t\tconst labelCategoryContainer = DOM.append(titleElement, $('.setting-item-cat-label-container'));\n\t\tconst categoryElement = DOM.append(labelCategoryContainer, $('span.setting-item-category'));\n\t\tconst labelElementContainer = DOM.append(labelCategoryContainer, $('span.setting-item-label'));\n\t\tconst labelElement = toDispose.add(new SimpleIconLabel(labelElementContainer));\n\t\tconst indicatorsLabel = this._instantiationService.createInstance(SettingsTreeIndicatorsLabel, titleElement);\n\t\ttoDispose.add(indicatorsLabel);\n\n\t\tconst descriptionElement = DOM.append(container, $('.setting-item-description'));\n\t\tconst modifiedIndicatorElement = DOM.append(container, $('.setting-item-modified-indicator'));\n\t\ttoDispose.add(this._hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), modifiedIndicatorElement, () => localize('modified', \"The setting has been configured in the current scope.\")));\n\n\t\tconst valueElement = DOM.append(container, $('.setting-item-value'));\n\t\tconst controlElement = DOM.append(valueElement, $('div.setting-item-control'));\n\n\t\tconst deprecationWarningElement = DOM.append(container, $('.setting-item-deprecation-message'));\n\n\t\tconst toolbarContainer = DOM.append(container, $('.setting-toolbar-container'));\n\t\tconst toolbar = this.renderSettingToolbar(toolbarContainer);\n\n\t\tconst template: ISettingItemTemplate = {\n\t\t\ttoDispose,\n\t\t\telementDisposables: toDispose.add(new DisposableStore()),\n\n\t\t\tcontainerElement: container,\n\t\t\tcategoryElement,\n\t\t\tlabelElement,\n\t\t\tdescriptionElement,\n\t\t\tcontrolElement,\n\t\t\tdeprecationWarningElement,\n\t\t\tindicatorsLabel,\n\t\t\ttoolbar\n\t\t};\n\n\t\t// Prevent clicks from being handled by list\n\t\ttoDispose.add(DOM.addDisposableListener(controlElement, DOM.EventType.MOUSE_DOWN, e => e.stopPropagation()));\n\n\t\ttoDispose.add(DOM.addDisposableListener(titleElement, DOM.EventType.MOUSE_ENTER, e => container.classList.add('mouseover')));\n\t\ttoDispose.add(DOM.addDisposableListener(titleElement, DOM.EventType.MOUSE_LEAVE, e => container.classList.remove('mouseover')));\n\n\t\treturn template;\n\t}\n\n\tprotected addSettingElementFocusHandler(template: ISettingItemTemplate): void {\n\t\tconst focusTracker = DOM.trackFocus(template.containerElement);\n\t\ttemplate.toDispose.add(focusTracker);\n\t\tfocusTracker.onDidBlur(() => {\n\t\t\tif (template.containerElement.classList.contains('focused')) {\n\t\t\t\ttemplate.containerElement.classList.remove('focused');\n\t\t\t}\n\t\t});\n\n\t\tfocusTracker.onDidFocus(() => {\n\t\t\ttemplate.containerElement.classList.add('focused');\n\n\t\t\tif (template.context) {\n\t\t\t\tthis._onDidFocusSetting.fire(template.context);\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected renderSettingToolbar(container: HTMLElement): ToolBar {\n\t\tconst toggleMenuKeybinding = this._keybindingService.lookupKeybinding(SETTINGS_EDITOR_COMMAND_SHOW_CONTEXT_MENU);\n\t\tlet toggleMenuTitle = localize('settingsContextMenuTitle', \"More Actions... \");\n\t\tif (toggleMenuKeybinding) {\n\t\t\ttoggleMenuTitle += ` (${toggleMenuKeybinding && toggleMenuKeybinding.getLabel()})`;\n\t\t}\n\n\t\tconst toolbar = new ToolBar(container, this._contextMenuService, {\n\t\t\ttoggleMenuTitle,\n\t\t\trenderDropdownAsChildElement: !isIOS,\n\t\t\tmoreIcon: settingsMoreActionIcon\n\t\t});\n\t\treturn toolbar;\n\t}\n\n\tprotected renderSettingElement(node: ITreeNode<SettingsTreeSettingElement, never>, index: number, template: ISettingItemTemplate | ISettingBoolItemTemplate): void {\n\t\tconst element = node.element;\n\n\t\t// The element must inspect itself to get information for\n\t\t// the modified indicator and the overridden Settings indicators.\n\t\telement.inspectSelf();\n\n\t\ttemplate.context = element;\n\t\ttemplate.toolbar.context = element;\n\t\tconst actions = this.disposableActionFactory(element.setting, element.settingsTarget);\n\t\tactions.forEach(a => isDisposable(a) && template.elementDisposables.add(a));\n\t\ttemplate.toolbar.setActions([], [...this.settingActions, ...actions]);\n\n\t\tconst setting = element.setting;\n\n\t\ttemplate.containerElement.classList.toggle('is-configured', element.isConfigured);\n\t\ttemplate.containerElement.setAttribute(AbstractSettingRenderer.SETTING_KEY_ATTR, element.setting.key);\n\t\ttemplate.containerElement.setAttribute(AbstractSettingRenderer.SETTING_ID_ATTR, element.id);\n\n\t\tconst titleTooltip = setting.key + (element.isConfigured ? ' - Modified' : '');\n\t\ttemplate.categoryElement.textContent = element.displayCategory ? (element.displayCategory + ': ') : '';\n\t\ttemplate.elementDisposables.add(this._hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), template.categoryElement, titleTooltip));\n\n\t\ttemplate.labelElement.text = element.displayLabel;\n\t\ttemplate.labelElement.title = titleTooltip;\n\n\t\ttemplate.descriptionElement.innerText = '';\n\t\tif (element.setting.descriptionIsMarkdown) {\n\t\t\tconst renderedDescription = this.renderSettingMarkdown(element, template.containerElement, element.description, template.elementDisposables);\n\t\t\ttemplate.descriptionElement.appendChild(renderedDescription);\n\t\t} else {\n\t\t\ttemplate.descriptionElement.innerText = element.description;\n\t\t}\n\n\t\ttemplate.indicatorsLabel.updateScopeOverrides(element, this._onDidClickOverrideElement, this._onApplyFilter);\n\t\ttemplate.elementDisposables.add(this._configService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(APPLY_ALL_PROFILES_SETTING)) {\n\t\t\t\ttemplate.indicatorsLabel.updateScopeOverrides(element, this._onDidClickOverrideElement, this._onApplyFilter);\n\t\t\t}\n\t\t}));\n\n\t\tconst onChange = (value: any) => this._onDidChangeSetting.fire({\n\t\t\tkey: element.setting.key,\n\t\t\tvalue,\n\t\t\ttype: template.context!.valueType,\n\t\t\tmanualReset: false,\n\t\t\tscope: element.setting.scope\n\t\t});\n\t\tconst deprecationText = element.setting.deprecationMessage || '';\n\t\tif (deprecationText && element.setting.deprecationMessageIsMarkdown) {\n\t\t\ttemplate.deprecationWarningElement.innerText = '';\n\t\t\ttemplate.deprecationWarningElement.appendChild(this.renderSettingMarkdown(element, template.containerElement, element.setting.deprecationMessage!, template.elementDisposables));\n\t\t} else {\n\t\t\ttemplate.deprecationWarningElement.innerText = deprecationText;\n\t\t}\n\t\ttemplate.deprecationWarningElement.prepend($('.codicon.codicon-error'));\n\t\ttemplate.containerElement.classList.toggle('is-deprecated', !!deprecationText);\n\n\t\tthis.renderValue(element, <ISettingItemTemplate>template, onChange);\n\n\t\ttemplate.indicatorsLabel.updateWorkspaceTrust(element);\n\t\ttemplate.indicatorsLabel.updateSyncIgnored(element, this.ignoredSettings);\n\t\ttemplate.indicatorsLabel.updateDefaultOverrideIndicator(element);\n\t\ttemplate.elementDisposables.add(this.onDidChangeIgnoredSettings(() => {\n\t\t\ttemplate.indicatorsLabel.updateSyncIgnored(element, this.ignoredSettings);\n\t\t}));\n\n\t\tthis.updateSettingTabbable(element, template);\n\t\ttemplate.elementDisposables.add(element.onDidChangeTabbable(() => {\n\t\t\tthis.updateSettingTabbable(element, template);\n\t\t}));\n\t}\n\n\tprivate updateSettingTabbable(element: SettingsTreeSettingElement, template: ISettingItemTemplate | ISettingBoolItemTemplate): void {\n\t\tif (element.tabbable) {\n\t\t\taddChildrenToTabOrder(template.containerElement);\n\t\t} else {\n\t\t\tremoveChildrenFromTabOrder(template.containerElement);\n\t\t}\n\t}\n\n\tprivate renderSettingMarkdown(element: SettingsTreeSettingElement, container: HTMLElement, text: string, disposables: DisposableStore): HTMLElement {\n\t\t// Rewrite `#editor.fontSize#` to link format\n\t\ttext = fixSettingLinks(text);\n\n\t\tconst renderedMarkdown = this.markdownRenderer.render({ value: text, isTrusted: true }, {\n\t\t\tactionHandler: {\n\t\t\t\tcallback: (content: string) => {\n\t\t\t\t\tif (content.startsWith('#')) {\n\t\t\t\t\t\tconst e: ISettingLinkClickEvent = {\n\t\t\t\t\t\t\tsource: element,\n\t\t\t\t\t\t\ttargetKey: content.substring(1)\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis._onDidClickSettingLink.fire(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._openerService.open(content, { allowCommands: true }).catch(onUnexpectedError);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdisposables\n\t\t\t},\n\t\t\tasyncRenderCallback: () => {\n\t\t\t\tconst height = container.clientHeight;\n\t\t\t\tif (height) {\n\t\t\t\t\tthis._onDidChangeSettingHeight.fire({ element, height });\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\tdisposables.add(renderedMarkdown);\n\n\t\trenderedMarkdown.element.classList.add('setting-item-markdown');\n\t\tcleanRenderedMarkdown(renderedMarkdown.element);\n\t\treturn renderedMarkdown.element;\n\t}\n\n\tprotected abstract renderValue(dataElement: SettingsTreeSettingElement, template: ISettingItemTemplate, onChange: (value: any) => void): void;\n\n\tdisposeTemplate(template: IDisposableTemplate): void {\n\t\ttemplate.toDispose.dispose();\n\t}\n\n\tdisposeElement(_element: ITreeNode<SettingsTreeElement>, _index: number, template: IDisposableTemplate, _height: number | undefined): void {\n\t\t(template as ISettingItemTemplate).elementDisposables?.clear();\n\t}\n}\n\nclass SettingGroupRenderer implements ITreeRenderer<SettingsTreeGroupElement, never, IGroupTitleTemplate> {\n\ttemplateId = SETTINGS_ELEMENT_TEMPLATE_ID;\n\n\trenderTemplate(container: HTMLElement): IGroupTitleTemplate {\n\t\tcontainer.classList.add('group-title');\n\n\t\tconst template: IGroupTitleTemplate = {\n\t\t\tparent: container,\n\t\t\ttoDispose: new DisposableStore()\n\t\t};\n\n\t\treturn template;\n\t}\n\n\trenderElement(element: ITreeNode<SettingsTreeGroupElement, never>, index: number, templateData: IGroupTitleTemplate): void {\n\t\ttemplateData.parent.innerText = '';\n\t\tconst labelElement = DOM.append(templateData.parent, $('div.settings-group-title-label.settings-row-inner-container'));\n\t\tlabelElement.classList.add(`settings-group-level-${element.element.level}`);\n\t\tlabelElement.textContent = element.element.label;\n\n\t\tif (element.element.isFirstGroup) {\n\t\t\tlabelElement.classList.add('settings-group-first');\n\t\t}\n\t}\n\n\tdisposeTemplate(templateData: IGroupTitleTemplate): void {\n\t}\n}\n\nexport class SettingNewExtensionsRenderer implements ITreeRenderer<SettingsTreeNewExtensionsElement, never, ISettingNewExtensionsTemplate> {\n\ttemplateId = SETTINGS_NEW_EXTENSIONS_TEMPLATE_ID;\n\n\tconstructor(\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t) {\n\t}\n\n\trenderTemplate(container: HTMLElement): ISettingNewExtensionsTemplate {\n\t\tconst toDispose = new DisposableStore();\n\n\t\tcontainer.classList.add('setting-item-new-extensions');\n\n\t\tconst button = new Button(container, { title: true, ...defaultButtonStyles });\n\t\ttoDispose.add(button);\n\t\ttoDispose.add(button.onDidClick(() => {\n\t\t\tif (template.context) {\n\t\t\t\tthis._commandService.executeCommand('workbench.extensions.action.showExtensionsWithIds', template.context.extensionIds);\n\t\t\t}\n\t\t}));\n\t\tbutton.label = localize('newExtensionsButtonLabel', \"Show matching extensions\");\n\t\tbutton.element.classList.add('settings-new-extensions-button');\n\n\t\tconst template: ISettingNewExtensionsTemplate = {\n\t\t\tbutton,\n\t\t\ttoDispose\n\t\t};\n\n\t\treturn template;\n\t}\n\n\trenderElement(element: ITreeNode<SettingsTreeNewExtensionsElement, never>, index: number, templateData: ISettingNewExtensionsTemplate): void {\n\t\ttemplateData.context = element.element;\n\t}\n\n\tdisposeTemplate(template: IDisposableTemplate): void {\n\t\tdispose(template.toDispose);\n\t}\n}\n\nexport class SettingComplexRenderer extends AbstractSettingRenderer implements ITreeRenderer<SettingsTreeSettingElement, never, ISettingComplexItemTemplate> {\n\tprivate static readonly EDIT_IN_JSON_LABEL = localize('editInSettingsJson', \"Edit in settings.json\");\n\n\ttemplateId = SETTINGS_COMPLEX_TEMPLATE_ID;\n\n\trenderTemplate(container: HTMLElement): ISettingComplexItemTemplate {\n\t\tconst common = this.renderCommonTemplate(null, container, 'complex');\n\n\t\tconst openSettingsButton = DOM.append(common.controlElement, $('a.edit-in-settings-button'));\n\t\topenSettingsButton.classList.add(AbstractSettingRenderer.CONTROL_CLASS);\n\t\topenSettingsButton.role = 'button';\n\n\t\tconst validationErrorMessageElement = $('.setting-item-validation-message');\n\t\tcommon.containerElement.appendChild(validationErrorMessageElement);\n\n\t\tconst template: ISettingComplexItemTemplate = {\n\t\t\t...common,\n\t\t\tbutton: openSettingsButton,\n\t\t\tvalidationErrorMessageElement\n\t\t};\n\n\t\tthis.addSettingElementFocusHandler(template);\n\n\t\treturn template;\n\t}\n\n\trenderElement(element: ITreeNode<SettingsTreeSettingElement, never>, index: number, templateData: ISettingComplexItemTemplate): void {\n\t\tsuper.renderSettingElement(element, index, templateData);\n\t}\n\n\tprotected renderValue(dataElement: SettingsTreeSettingElement, template: ISettingComplexItemTemplate, onChange: (value: string) => void): void {\n\t\tconst plainKey = getLanguageTagSettingPlainKey(dataElement.setting.key);\n\t\tconst editLanguageSettingLabel = localize('editLanguageSettingLabel', \"Edit settings for {0}\", plainKey);\n\t\tconst isLanguageTagSetting = dataElement.setting.isLanguageTagSetting;\n\t\ttemplate.button.textContent = isLanguageTagSetting\n\t\t\t? editLanguageSettingLabel\n\t\t\t: SettingComplexRenderer.EDIT_IN_JSON_LABEL;\n\n\t\tconst onClickOrKeydown = (e: UIEvent) => {\n\t\t\tif (isLanguageTagSetting) {\n\t\t\t\tthis._onApplyFilter.fire(`@${LANGUAGE_SETTING_TAG}${plainKey}`);\n\t\t\t} else {\n\t\t\t\tthis._onDidOpenSettings.fire(dataElement.setting.key);\n\t\t\t}\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t};\n\t\ttemplate.elementDisposables.add(DOM.addDisposableListener(template.button, DOM.EventType.CLICK, (e) => {\n\t\t\tonClickOrKeydown(e);\n\t\t}));\n\t\ttemplate.elementDisposables.add(DOM.addDisposableListener(template.button, DOM.EventType.KEY_DOWN, (e) => {\n\t\t\tconst ev = new StandardKeyboardEvent(e);\n\t\t\tif (ev.equals(KeyCode.Space) || ev.equals(KeyCode.Enter)) {\n\t\t\t\tonClickOrKeydown(e);\n\t\t\t}\n\t\t}));\n\n\t\tthis.renderValidations(dataElement, template);\n\n\t\tif (isLanguageTagSetting) {\n\t\t\ttemplate.button.setAttribute('aria-label', editLanguageSettingLabel);\n\t\t} else {\n\t\t\ttemplate.button.setAttribute('aria-label', `${SettingComplexRenderer.EDIT_IN_JSON_LABEL}: ${dataElement.setting.key}`);\n\t\t}\n\t}\n\n\tprivate renderValidations(dataElement: SettingsTreeSettingElement, template: ISettingComplexItemTemplate) {\n\t\tconst errMsg = dataElement.isConfigured && getInvalidTypeError(dataElement.value, dataElement.setting.type);\n\t\tif (errMsg) {\n\t\t\ttemplate.containerElement.classList.add('invalid-input');\n\t\t\ttemplate.validationErrorMessageElement.innerText = errMsg;\n\t\t\treturn;\n\t\t}\n\n\t\ttemplate.containerElement.classList.remove('invalid-input');\n\t}\n}\n\nclass SettingArrayRenderer extends AbstractSettingRenderer implements ITreeRenderer<SettingsTreeSettingElement, never, ISettingListItemTemplate> {\n\ttemplateId = SETTINGS_ARRAY_TEMPLATE_ID;\n\n\trenderTemplate(container: HTMLElement): ISettingListItemTemplate {\n\t\tconst common = this.renderCommonTemplate(null, container, 'list');\n\t\tconst descriptionElement = common.containerElement.querySelector('.setting-item-description')!;\n\t\tconst validationErrorMessageElement = $('.setting-item-validation-message');\n\t\tdescriptionElement.after(validationErrorMessageElement);\n\n\t\tconst listWidget = this._instantiationService.createInstance(ListSettingWidget, common.controlElement);\n\t\tlistWidget.domNode.classList.add(AbstractSettingRenderer.CONTROL_CLASS);\n\t\tcommon.toDispose.add(listWidget);\n\n\t\tconst template: ISettingListItemTemplate = {\n\t\t\t...common,\n\t\t\tlistWidget,\n\t\t\tvalidationErrorMessageElement\n\t\t};\n\n\t\tthis.addSettingElementFocusHandler(template);\n\n\t\tcommon.toDispose.add(\n\t\t\tlistWidget.onDidChangeList(e => {\n\t\t\t\tconst newList = this.computeNewList(template, e);\n\t\t\t\ttemplate.onChange?.(newList);\n\t\t\t})\n\t\t);\n\n\t\treturn template;\n\t}\n\n\tprivate computeNewList(template: ISettingListItemTemplate, e: SettingListEvent<IListDataItem>): string[] | undefined {\n\t\tif (template.context) {\n\t\t\tlet newValue: string[] = [];\n\t\t\tif (Array.isArray(template.context.scopeValue)) {\n\t\t\t\tnewValue = [...template.context.scopeValue];\n\t\t\t} else if (Array.isArray(template.context.value)) {\n\t\t\t\tnewValue = [...template.context.value];\n\t\t\t}\n\n\t\t\tif (e.type === 'move') {\n\t\t\t\t// A drag and drop occurred\n\t\t\t\tconst sourceIndex = e.sourceIndex;\n\t\t\t\tconst targetIndex = e.targetIndex;\n\t\t\t\tconst splicedElem = newValue.splice(sourceIndex, 1)[0];\n\t\t\t\tnewValue.splice(targetIndex, 0, splicedElem);\n\t\t\t} else if (e.type === 'remove' || e.type === 'reset') {\n\t\t\t\tnewValue.splice(e.targetIndex, 1);\n\t\t\t} else if (e.type === 'change') {\n\t\t\t\tconst itemValueData = e.newItem.value.data.toString();\n\n\t\t\t\t// Update value\n\t\t\t\tif (e.targetIndex > -1) {\n\t\t\t\t\tnewValue[e.targetIndex] = itemValueData;\n\t\t\t\t}\n\t\t\t\t// For some reason, we are updating and cannot find original value\n\t\t\t\t// Just append the value in this case\n\t\t\t\telse {\n\t\t\t\t\tnewValue.push(itemValueData);\n\t\t\t\t}\n\t\t\t} else if (e.type === 'add') {\n\t\t\t\tnewValue.push(e.newItem.value.data.toString());\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttemplate.context.defaultValue &&\n\t\t\t\tArray.isArray(template.context.defaultValue) &&\n\t\t\t\ttemplate.context.defaultValue.length === newValue.length &&\n\t\t\t\ttemplate.context.defaultValue.join() === newValue.join()\n\t\t\t) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn newValue;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\trenderElement(element: ITreeNode<SettingsTreeSettingElement, never>, index: number, templateData: ISettingListItemTemplate): void {\n\t\tsuper.renderSettingElement(element, index, templateData);\n\t}\n\n\tprotected renderValue(dataElement: SettingsTreeSettingElement, template: ISettingListItemTemplate, onChange: (value: string[] | number[] | undefined) => void): void {\n\t\tconst value = getListDisplayValue(dataElement);\n\t\tconst keySuggester = dataElement.setting.enum ? createArraySuggester(dataElement) : undefined;\n\t\ttemplate.listWidget.setValue(value, {\n\t\t\tshowAddButton: getShowAddButtonList(dataElement, value),\n\t\t\tkeySuggester\n\t\t});\n\t\ttemplate.context = dataElement;\n\n\t\ttemplate.elementDisposables.add(toDisposable(() => {\n\t\t\ttemplate.listWidget.cancelEdit();\n\t\t}));\n\n\t\ttemplate.onChange = (v: string[] | undefined) => {\n\t\t\tif (v && !renderArrayValidations(dataElement, template, v, false)) {\n\t\t\t\tconst itemType = dataElement.setting.arrayItemType;\n\t\t\t\tconst arrToSave = isNonNullableNumericType(itemType) ? v.map(a => +a) : v;\n\t\t\t\tonChange(arrToSave);\n\t\t\t} else {\n\t\t\t\t// Save the setting unparsed and containing the errors.\n\t\t\t\t// renderArrayValidations will render relevant error messages.\n\t\t\t\tonChange(v);\n\t\t\t}\n\t\t};\n\n\t\trenderArrayValidations(dataElement, template, value.map(v => v.value.data.toString()), true);\n\t}\n}\n\nabstract class AbstractSettingObjectRenderer extends AbstractSettingRenderer implements ITreeRenderer<SettingsTreeSettingElement, never, ISettingObjectItemTemplate> {\n\n\tprotected renderTemplateWithWidget(common: ISettingItemTemplate, widget: ObjectSettingCheckboxWidget | ObjectSettingDropdownWidget): ISettingObjectItemTemplate {\n\t\twidget.domNode.classList.add(AbstractSettingRenderer.CONTROL_CLASS);\n\t\tcommon.toDispose.add(widget);\n\n\t\tconst descriptionElement = common.containerElement.querySelector('.setting-item-description')!;\n\t\tconst validationErrorMessageElement = $('.setting-item-validation-message');\n\t\tdescriptionElement.after(validationErrorMessageElement);\n\n\t\tconst template: ISettingObjectItemTemplate = {\n\t\t\t...common,\n\t\t\tvalidationErrorMessageElement\n\t\t};\n\t\tif (widget instanceof ObjectSettingCheckboxWidget) {\n\t\t\ttemplate.objectCheckboxWidget = widget;\n\t\t} else {\n\t\t\ttemplate.objectDropdownWidget = widget;\n\t\t}\n\n\t\tthis.addSettingElementFocusHandler(template);\n\t\treturn template;\n\t}\n\n\trenderElement(element: ITreeNode<SettingsTreeSettingElement, never>, index: number, templateData: ISettingObjectItemTemplate): void {\n\t\tsuper.renderSettingElement(element, index, templateData);\n\t}\n}\n\nclass SettingObjectRenderer extends AbstractSettingObjectRenderer implements ITreeRenderer<SettingsTreeSettingElement, never, ISettingObjectItemTemplate> {\n\toverride templateId = SETTINGS_OBJECT_TEMPLATE_ID;\n\n\trenderTemplate(container: HTMLElement): ISettingObjectItemTemplate {\n\t\tconst common = this.renderCommonTemplate(null, container, 'list');\n\t\tconst widget = this._instantiationService.createInstance(ObjectSettingDropdownWidget, common.controlElement);\n\t\tconst template = this.renderTemplateWithWidget(common, widget);\n\t\tcommon.toDispose.add(widget.onDidChangeList(e => {\n\t\t\tthis.onDidChangeObject(template, e);\n\t\t}));\n\t\treturn template;\n\t}\n\n\tprivate onDidChangeObject(template: ISettingObjectItemTemplate, e: SettingListEvent<IObjectDataItem>): void {\n\t\tconst widget = template.objectDropdownWidget!;\n\t\tif (template.context) {\n\t\t\tconst settingSupportsRemoveDefault = objectSettingSupportsRemoveDefaultValue(template.context.setting.key);\n\t\t\tconst defaultValue: Record<string, unknown> = typeof template.context.defaultValue === 'object'\n\t\t\t\t? template.context.defaultValue ?? {}\n\t\t\t\t: {};\n\n\t\t\tconst scopeValue: Record<string, unknown> = typeof template.context.scopeValue === 'object'\n\t\t\t\t? template.context.scopeValue ?? {}\n\t\t\t\t: {};\n\n\t\t\tconst newValue: Record<string, unknown> = { ...template.context.scopeValue }; // Initialize with scoped values as removed default values are not rendered\n\t\t\tconst newItems: IObjectDataItem[] = [];\n\n\t\t\twidget.items.forEach((item, idx) => {\n\t\t\t\t// Item was updated\n\t\t\t\tif ((e.type === 'change' || e.type === 'move') && e.targetIndex === idx) {\n\t\t\t\t\t// If the key of the default value is changed, remove the default value\n\t\t\t\t\tif (e.originalItem.key.data !== e.newItem.key.data && settingSupportsRemoveDefault && e.originalItem.key.data in defaultValue) {\n\t\t\t\t\t\tnewValue[e.originalItem.key.data] = null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelete newValue[e.originalItem.key.data];\n\t\t\t\t\t}\n\t\t\t\t\tnewValue[e.newItem.key.data] = e.newItem.value.data;\n\t\t\t\t\tnewItems.push(e.newItem);\n\t\t\t\t}\n\t\t\t\t// All remaining items, but skip the one that we just updated\n\t\t\t\telse if ((e.type !== 'change' && e.type !== 'move') || e.newItem.key.data !== item.key.data) {\n\t\t\t\t\tnewValue[item.key.data] = item.value.data;\n\t\t\t\t\tnewItems.push(item);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Item was deleted\n\t\t\tif (e.type === 'remove' || e.type === 'reset') {\n\t\t\t\tconst objectKey = e.originalItem.key.data;\n\t\t\t\tconst removingDefaultValue = e.type === 'remove' && settingSupportsRemoveDefault && defaultValue[objectKey] === e.originalItem.value.data;\n\t\t\t\tif (removingDefaultValue) {\n\t\t\t\t\tnewValue[objectKey] = null;\n\t\t\t\t} else {\n\t\t\t\t\tdelete newValue[objectKey];\n\t\t\t\t}\n\n\t\t\t\tconst itemToDelete = newItems.findIndex(item => item.key.data === objectKey);\n\t\t\t\tconst defaultItemValue = defaultValue[objectKey] as string | boolean;\n\n\t\t\t\t// Item does not have a default or default is bing removed\n\t\t\t\tif (removingDefaultValue || isUndefinedOrNull(defaultValue[objectKey]) && itemToDelete > -1) {\n\t\t\t\t\tnewItems.splice(itemToDelete, 1);\n\t\t\t\t} else if (!removingDefaultValue && itemToDelete > -1) {\n\t\t\t\t\tnewItems[itemToDelete].value.data = defaultItemValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// New item was added\n\t\t\telse if (e.type === 'add') {\n\t\t\t\tnewValue[e.newItem.key.data] = e.newItem.value.data;\n\t\t\t\tnewItems.push(e.newItem);\n\t\t\t}\n\n\t\t\tObject.entries(newValue).forEach(([key, value]) => {\n\t\t\t\t// value from the scope has changed back to the default\n\t\t\t\tif (scopeValue[key] !== value && defaultValue[key] === value && !(settingSupportsRemoveDefault && value === null)) {\n\t\t\t\t\tdelete newValue[key];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst newObject = Object.keys(newValue).length === 0 ? undefined : newValue;\n\t\t\ttemplate.objectDropdownWidget!.setValue(newItems);\n\t\t\ttemplate.onChange?.(newObject);\n\t\t}\n\t}\n\n\tprotected renderValue(dataElement: SettingsTreeSettingElement, template: ISettingObjectItemTemplate, onChange: (value: Record<string, unknown> | undefined) => void): void {\n\t\tconst items = getObjectDisplayValue(dataElement);\n\t\tconst { key, objectProperties, objectPatternProperties, objectAdditionalProperties } = dataElement.setting;\n\n\t\ttemplate.objectDropdownWidget!.setValue(items, {\n\t\t\tsettingKey: key,\n\t\t\tshowAddButton: objectAdditionalProperties === false\n\t\t\t\t? (\n\t\t\t\t\t!areAllPropertiesDefined(Object.keys(objectProperties ?? {}), items) ||\n\t\t\t\t\tisDefined(objectPatternProperties)\n\t\t\t\t)\n\t\t\t\t: true,\n\t\t\tkeySuggester: createObjectKeySuggester(dataElement),\n\t\t\tvalueSuggester: createObjectValueSuggester(dataElement)\n\t\t});\n\n\t\ttemplate.context = dataElement;\n\n\t\ttemplate.elementDisposables.add(toDisposable(() => {\n\t\t\ttemplate.objectDropdownWidget!.cancelEdit();\n\t\t}));\n\n\t\ttemplate.onChange = (v: Record<string, unknown> | undefined) => {\n\t\t\tif (v && !renderArrayValidations(dataElement, template, v, false)) {\n\t\t\t\tconst parsedRecord = parseNumericObjectValues(dataElement, v);\n\t\t\t\tonChange(parsedRecord);\n\t\t\t} else {\n\t\t\t\t// Save the setting unparsed and containing the errors.\n\t\t\t\t// renderArrayValidations will render relevant error messages.\n\t\t\t\tonChange(v);\n\t\t\t}\n\t\t};\n\t\trenderArrayValidations(dataElement, template, dataElement.value, true);\n\t}\n}\n\nclass SettingBoolObjectRenderer extends AbstractSettingObjectRenderer implements ITreeRenderer<SettingsTreeSettingElement, never, ISettingObjectItemTemplate> {\n\toverride templateId = SETTINGS_BOOL_OBJECT_TEMPLATE_ID;\n\n\trenderTemplate(container: HTMLElement): ISettingObjectItemTemplate {\n\t\tconst common = this.renderCommonTemplate(null, container, 'list');\n\t\tconst widget = this._instantiationService.createInstance(ObjectSettingCheckboxWidget, common.controlElement);\n\t\tconst template = this.renderTemplateWithWidget(common, widget);\n\t\tcommon.toDispose.add(widget.onDidChangeList(e => {\n\t\t\tthis.onDidChangeObject(template, e);\n\t\t}));\n\t\treturn template;\n\t}\n\n\tprotected onDidChangeObject(template: ISettingObjectItemTemplate, e: SettingListEvent<IBoolObjectDataItem>): void {\n\t\tif (template.context) {\n\t\t\tconst widget = template.objectCheckboxWidget!;\n\t\t\tconst defaultValue: Record<string, unknown> = typeof template.context.defaultValue === 'object'\n\t\t\t\t? template.context.defaultValue ?? {}\n\t\t\t\t: {};\n\n\t\t\tconst scopeValue: Record<string, unknown> = typeof template.context.scopeValue === 'object'\n\t\t\t\t? template.context.scopeValue ?? {}\n\t\t\t\t: {};\n\n\t\t\tconst newValue: Record<string, unknown> = { ...template.context.scopeValue }; // Initialize with scoped values as removed default values are not rendered\n\t\t\tconst newItems: IBoolObjectDataItem[] = [];\n\n\t\t\tif (e.type !== 'change') {\n\t\t\t\tconsole.warn('Unexpected event type', e.type, 'for bool object setting', template.context.setting.key);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\twidget.items.forEach((item, idx) => {\n\t\t\t\t// Item was updated\n\t\t\t\tif (e.targetIndex === idx) {\n\t\t\t\t\tnewValue[e.newItem.key.data] = e.newItem.value.data;\n\t\t\t\t\tnewItems.push(e.newItem);\n\t\t\t\t}\n\t\t\t\t// All remaining items, but skip the one that we just updated\n\t\t\t\telse if (e.newItem.key.data !== item.key.data) {\n\t\t\t\t\tnewValue[item.key.data] = item.value.data;\n\t\t\t\t\tnewItems.push(item);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tObject.entries(newValue).forEach(([key, value]) => {\n\t\t\t\t// value from the scope has changed back to the default\n\t\t\t\tif (scopeValue[key] !== value && defaultValue[key] === value) {\n\t\t\t\t\tdelete newValue[key];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst newObject = Object.keys(newValue).length === 0 ? undefined : newValue;\n\t\t\ttemplate.objectCheckboxWidget!.setValue(newItems);\n\t\t\ttemplate.onChange?.(newObject);\n\n\t\t\t// Focus this setting explicitly, in case we were previously\n\t\t\t// focused on another setting and clicked a checkbox/value container\n\t\t\t// for this setting.\n\t\t\tthis._onDidFocusSetting.fire(template.context);\n\t\t}\n\t}\n\n\tprotected renderValue(dataElement: SettingsTreeSettingElement, template: ISettingObjectItemTemplate, onChange: (value: Record<string, unknown> | undefined) => void): void {\n\t\tconst items = getBoolObjectDisplayValue(dataElement);\n\t\tconst { key } = dataElement.setting;\n\n\t\ttemplate.objectCheckboxWidget!.setValue(items, {\n\t\t\tsettingKey: key\n\t\t});\n\n\t\ttemplate.context = dataElement;\n\t\ttemplate.onChange = (v: Record<string, unknown> | undefined) => {\n\t\t\tonChange(v);\n\t\t};\n\t}\n}\n\nabstract class SettingIncludeExcludeRenderer extends AbstractSettingRenderer implements ITreeRenderer<SettingsTreeSettingElement, never, ISettingIncludeExcludeItemTemplate> {\n\n\tprotected abstract isExclude(): boolean;\n\n\trenderTemplate(container: HTMLElement): ISettingIncludeExcludeItemTemplate {\n\t\tconst common = this.renderCommonTemplate(null, container, 'list');\n\n\t\tconst includeExcludeWidget = this._instantiationService.createInstance(this.isExclude() ? ExcludeSettingWidget : IncludeSettingWidget, common.controlElement);\n\t\tincludeExcludeWidget.domNode.classList.add(AbstractSettingRenderer.CONTROL_CLASS);\n\t\tcommon.toDispose.add(includeExcludeWidget);\n\n\t\tconst template: ISettingIncludeExcludeItemTemplate = {\n\t\t\t...common,\n\t\t\tincludeExcludeWidget\n\t\t};\n\n\t\tthis.addSettingElementFocusHandler(template);\n\n\t\tcommon.toDispose.add(includeExcludeWidget.onDidChangeList(e => this.onDidChangeIncludeExclude(template, e)));\n\n\t\treturn template;\n\t}\n\n\tprivate onDidChangeIncludeExclude(template: ISettingIncludeExcludeItemTemplate, e: SettingListEvent<IListDataItem>): void {\n\t\tif (template.context) {\n\t\t\tconst newValue = { ...template.context.scopeValue };\n\n\t\t\t// first delete the existing entry, if present\n\t\t\tif (e.type !== 'add') {\n\t\t\t\tif (e.originalItem.value.data.toString() in template.context.defaultValue) {\n\t\t\t\t\t// delete a default by overriding it\n\t\t\t\t\tnewValue[e.originalItem.value.data.toString()] = false;\n\t\t\t\t} else {\n\t\t\t\t\tdelete newValue[e.originalItem.value.data.toString()];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// then add the new or updated entry, if present\n\t\t\tif (e.type === 'change' || e.type === 'add' || e.type === 'move') {\n\t\t\t\tif (e.newItem.value.data.toString() in template.context.defaultValue && !e.newItem.sibling) {\n\t\t\t\t\t// add a default by deleting its override\n\t\t\t\t\tdelete newValue[e.newItem.value.data.toString()];\n\t\t\t\t} else {\n\t\t\t\t\tnewValue[e.newItem.value.data.toString()] = e.newItem.sibling ? { when: e.newItem.sibling } : true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction sortKeys<T extends object>(obj: T) {\n\t\t\t\tconst sortedKeys = Object.keys(obj)\n\t\t\t\t\t.sort((a, b) => a.localeCompare(b)) as Array<keyof T>;\n\n\t\t\t\tconst retVal: Partial<T> = {};\n\t\t\t\tfor (const key of sortedKeys) {\n\t\t\t\t\tretVal[key] = obj[key];\n\t\t\t\t}\n\t\t\t\treturn retVal;\n\t\t\t}\n\n\t\t\tthis._onDidChangeSetting.fire({\n\t\t\t\tkey: template.context.setting.key,\n\t\t\t\tvalue: Object.keys(newValue).length === 0 ? undefined : sortKeys(newValue),\n\t\t\t\ttype: template.context.valueType,\n\t\t\t\tmanualReset: false,\n\t\t\t\tscope: template.context.setting.scope\n\t\t\t});\n\t\t}\n\t}\n\n\trenderElement(element: ITreeNode<SettingsTreeSettingElement, never>, index: number, templateData: ISettingIncludeExcludeItemTemplate): void {\n\t\tsuper.renderSettingElement(element, index, templateData);\n\t}\n\n\tprotected renderValue(dataElement: SettingsTreeSettingElement, template: ISettingIncludeExcludeItemTemplate, onChange: (value: string) => void): void {\n\t\tconst value = getIncludeExcludeDisplayValue(dataElement);\n\t\ttemplate.includeExcludeWidget.setValue(value);\n\t\ttemplate.context = dataElement;\n\t\ttemplate.elementDisposables.add(toDisposable(() => {\n\t\t\ttemplate.includeExcludeWidget.cancelEdit();\n\t\t}));\n\t}\n}\n\nclass SettingExcludeRenderer extends SettingIncludeExcludeRenderer {\n\ttemplateId = SETTINGS_EXCLUDE_TEMPLATE_ID;\n\n\tprotected override isExclude(): boolean {\n\t\treturn true;\n\t}\n}\n\nclass SettingIncludeRenderer extends SettingIncludeExcludeRenderer {\n\ttemplateId = SETTINGS_INCLUDE_TEMPLATE_ID;\n\n\tprotected override isExclude(): boolean {\n\t\treturn false;\n\t}\n}\n\nconst settingsInputBoxStyles = getInputBoxStyle({\n\tinputBackground: settingsTextInputBackground,\n\tinputForeground: settingsTextInputForeground,\n\tinputBorder: settingsTextInputBorder\n});\n\nabstract class AbstractSettingTextRenderer extends AbstractSettingRenderer implements ITreeRenderer<SettingsTreeSettingElement, never, ISettingTextItemTemplate> {\n\tprivate readonly MULTILINE_MAX_HEIGHT = 150;\n\n\trenderTemplate(_container: HTMLElement, useMultiline?: boolean): ISettingTextItemTemplate {\n\t\tconst common = this.renderCommonTemplate(null, _container, 'text');\n\t\tconst validationErrorMessageElement = DOM.append(common.containerElement, $('.setting-item-validation-message'));\n\n\t\tconst inputBoxOptions: IInputOptions = {\n\t\t\tflexibleHeight: useMultiline,\n\t\t\tflexibleWidth: false,\n\t\t\tflexibleMaxHeight: this.MULTILINE_MAX_HEIGHT,\n\t\t\tinputBoxStyles: settingsInputBoxStyles\n\t\t};\n\t\tconst inputBox = new InputBox(common.controlElement, this._contextViewService, inputBoxOptions);\n\t\tcommon.toDispose.add(inputBox);\n\t\tcommon.toDispose.add(\n\t\t\tinputBox.onDidChange(e => {\n\t\t\t\ttemplate.onChange?.(e);\n\t\t\t}));\n\t\tcommon.toDispose.add(inputBox);\n\t\tinputBox.inputElement.classList.add(AbstractSettingRenderer.CONTROL_CLASS);\n\t\tinputBox.inputElement.tabIndex = 0;\n\n\t\tconst template: ISettingTextItemTemplate = {\n\t\t\t...common,\n\t\t\tinputBox,\n\t\t\tvalidationErrorMessageElement\n\t\t};\n\n\t\tthis.addSettingElementFocusHandler(template);\n\n\t\treturn template;\n\t}\n\n\trenderElement(element: ITreeNode<SettingsTreeSettingElement, never>, index: number, templateData: ISettingTextItemTemplate): void {\n\t\tsuper.renderSettingElement(element, index, templateData);\n\t}\n\n\tprotected renderValue(dataElement: SettingsTreeSettingElement, template: ISettingTextItemTemplate, onChange: (value: string) => void): void {\n\t\ttemplate.onChange = undefined;\n\t\ttemplate.inputBox.value = dataElement.value;\n\t\ttemplate.inputBox.setAriaLabel(dataElement.setting.key);\n\t\ttemplate.onChange = value => {\n\t\t\tif (!renderValidations(dataElement, template, false)) {\n\t\t\t\tonChange(value);\n\t\t\t}\n\t\t};\n\n\t\trenderValidations(dataElement, template, true);\n\t}\n}\n\nclass SettingTextRenderer extends AbstractSettingTextRenderer implements ITreeRenderer<SettingsTreeSettingElement, never, ISettingTextItemTemplate> {\n\ttemplateId = SETTINGS_TEXT_TEMPLATE_ID;\n\n\toverride renderTemplate(_container: HTMLElement): ISettingTextItemTemplate {\n\t\tconst template = super.renderTemplate(_container, false);\n\n\t\t// TODO@9at8: listWidget filters out all key events from input boxes, so we need to come up with a better way\n\t\t// Disable ArrowUp and ArrowDown behaviour in favor of list navigation\n\t\ttemplate.toDispose.add(DOM.addStandardDisposableListener(template.inputBox.inputElement, DOM.EventType.KEY_DOWN, e => {\n\t\t\tif (e.equals(KeyCode.UpArrow) || e.equals(KeyCode.DownArrow)) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t}));\n\n\t\treturn template;\n\t}\n}\n\nclass SettingMultilineTextRenderer extends AbstractSettingTextRenderer implements ITreeRenderer<SettingsTreeSettingElement, never, ISettingTextItemTemplate> {\n\ttemplateId = SETTINGS_MULTILINE_TEXT_TEMPLATE_ID;\n\n\toverride renderTemplate(_container: HTMLElement): ISettingTextItemTemplate {\n\t\treturn super.renderTemplate(_container, true);\n\t}\n\n\tprotected override renderValue(dataElement: SettingsTreeSettingElement, template: ISettingTextItemTemplate, onChange: (value: string) => void) {\n\t\tconst onChangeOverride = (value: string) => {\n\t\t\t// Ensure the model is up to date since a different value will be rendered as different height when probing the height.\n\t\t\tdataElement.value = value;\n\t\t\tonChange(value);\n\t\t};\n\t\tsuper.renderValue(dataElement, template, onChangeOverride);\n\t\ttemplate.elementDisposables.add(\n\t\t\ttemplate.inputBox.onDidHeightChange(e => {\n\t\t\t\tconst height = template.containerElement.clientHeight;\n\t\t\t\t// Don't fire event if height is reported as 0,\n\t\t\t\t// which sometimes happens when clicking onto a new setting.\n\t\t\t\tif (height) {\n\t\t\t\t\tthis._onDidChangeSettingHeight.fire({\n\t\t\t\t\t\telement: dataElement,\n\t\t\t\t\t\theight: template.containerElement.clientHeight\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\ttemplate.inputBox.layout();\n\t}\n}\n\nclass SettingEnumRenderer extends AbstractSettingRenderer implements ITreeRenderer<SettingsTreeSettingElement, never, ISettingEnumItemTemplate> {\n\ttemplateId = SETTINGS_ENUM_TEMPLATE_ID;\n\n\trenderTemplate(container: HTMLElement): ISettingEnumItemTemplate {\n\t\tconst common = this.renderCommonTemplate(null, container, 'enum');\n\n\t\tconst styles = getSelectBoxStyles({\n\t\t\tselectBackground: settingsSelectBackground,\n\t\t\tselectForeground: settingsSelectForeground,\n\t\t\tselectBorder: settingsSelectBorder,\n\t\t\tselectListBorder: settingsSelectListBorder\n\t\t});\n\n\t\tconst selectBox = new SelectBox([], 0, this._contextViewService, styles, {\n\t\t\tuseCustomDrawn: !(isIOS && BrowserFeatures.pointerEvents)\n\t\t});\n\n\t\tcommon.toDispose.add(selectBox);\n\t\tselectBox.render(common.controlElement);\n\t\tconst selectElement = common.controlElement.querySelector('select');\n\t\tif (selectElement) {\n\t\t\tselectElement.classList.add(AbstractSettingRenderer.CONTROL_CLASS);\n\t\t\tselectElement.tabIndex = 0;\n\t\t}\n\n\t\tcommon.toDispose.add(\n\t\t\tselectBox.onDidSelect(e => {\n\t\t\t\ttemplate.onChange?.(e.index);\n\t\t\t}));\n\n\t\tconst enumDescriptionElement = common.containerElement.insertBefore($('.setting-item-enumDescription'), common.descriptionElement.nextSibling);\n\n\t\tconst template: ISettingEnumItemTemplate = {\n\t\t\t...common,\n\t\t\tselectBox,\n\t\t\tselectElement,\n\t\t\tenumDescriptionElement\n\t\t};\n\n\t\tthis.addSettingElementFocusHandler(template);\n\n\t\treturn template;\n\t}\n\n\trenderElement(element: ITreeNode<SettingsTreeSettingElement, never>, index: number, templateData: ISettingEnumItemTemplate): void {\n\t\tsuper.renderSettingElement(element, index, templateData);\n\t}\n\n\tprotected renderValue(dataElement: SettingsTreeSettingElement, template: ISettingEnumItemTemplate, onChange: (value: string) => void): void {\n\t\t// Make shallow copies here so that we don't modify the actual dataElement later\n\t\tconst enumItemLabels = dataElement.setting.enumItemLabels ? [...dataElement.setting.enumItemLabels] : [];\n\t\tconst enumDescriptions = dataElement.setting.enumDescriptions ? [...dataElement.setting.enumDescriptions] : [];\n\t\tconst settingEnum = [...dataElement.setting.enum!];\n\t\tconst enumDescriptionsAreMarkdown = dataElement.setting.enumDescriptionsAreMarkdown;\n\n\t\tconst disposables = new DisposableStore();\n\t\ttemplate.elementDisposables.add(disposables);\n\n\t\tlet createdDefault = false;\n\t\tif (!settingEnum.includes(dataElement.defaultValue)) {\n\t\t\t// Add a new potentially blank default setting\n\t\t\tsettingEnum.unshift(dataElement.defaultValue);\n\t\t\tenumDescriptions.unshift('');\n\t\t\tenumItemLabels.unshift('');\n\t\t\tcreatedDefault = true;\n\t\t}\n\n\t\t// Use String constructor in case of null or undefined values\n\t\tconst stringifiedDefaultValue = escapeInvisibleChars(String(dataElement.defaultValue));\n\t\tconst displayOptions: ISelectOptionItem[] = settingEnum\n\t\t\t.map(String)\n\t\t\t.map(escapeInvisibleChars)\n\t\t\t.map((data, index) => {\n\t\t\t\tconst description = (enumDescriptions[index] && (enumDescriptionsAreMarkdown ? fixSettingLinks(enumDescriptions[index], false) : enumDescriptions[index]));\n\t\t\t\treturn {\n\t\t\t\t\ttext: enumItemLabels[index] ? enumItemLabels[index] : data,\n\t\t\t\t\tdetail: enumItemLabels[index] ? data : '',\n\t\t\t\t\tdescription,\n\t\t\t\t\tdescriptionIsMarkdown: enumDescriptionsAreMarkdown,\n\t\t\t\t\tdescriptionMarkdownActionHandler: {\n\t\t\t\t\t\tcallback: (content) => {\n\t\t\t\t\t\t\tthis._openerService.open(content).catch(onUnexpectedError);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdisposables: disposables\n\t\t\t\t\t},\n\t\t\t\t\tdecoratorRight: (((data === stringifiedDefaultValue) || (createdDefault && index === 0)) ? localize('settings.Default', \"default\") : '')\n\t\t\t\t} satisfies ISelectOptionItem;\n\t\t\t});\n\n\t\ttemplate.selectBox.setOptions(displayOptions);\n\t\ttemplate.selectBox.setAriaLabel(dataElement.setting.key);\n\n\t\tlet idx = settingEnum.indexOf(dataElement.value);\n\t\tif (idx === -1) {\n\t\t\tidx = 0;\n\t\t}\n\n\t\ttemplate.onChange = undefined;\n\t\ttemplate.selectBox.select(idx);\n\t\ttemplate.onChange = (idx) => {\n\t\t\tif (createdDefault && idx === 0) {\n\t\t\t\tonChange(dataElement.defaultValue);\n\t\t\t} else {\n\t\t\t\tonChange(settingEnum[idx]);\n\t\t\t}\n\t\t};\n\n\t\ttemplate.enumDescriptionElement.innerText = '';\n\t}\n}\n\nconst settingsNumberInputBoxStyles = getInputBoxStyle({\n\tinputBackground: settingsNumberInputBackground,\n\tinputForeground: settingsNumberInputForeground,\n\tinputBorder: settingsNumberInputBorder\n});\n\nclass SettingNumberRenderer extends AbstractSettingRenderer implements ITreeRenderer<SettingsTreeSettingElement, never, ISettingNumberItemTemplate> {\n\ttemplateId = SETTINGS_NUMBER_TEMPLATE_ID;\n\n\trenderTemplate(_container: HTMLElement): ISettingNumberItemTemplate {\n\t\tconst common = super.renderCommonTemplate(null, _container, 'number');\n\t\tconst validationErrorMessageElement = DOM.append(common.containerElement, $('.setting-item-validation-message'));\n\n\t\tconst inputBox = new InputBox(common.controlElement, this._contextViewService, { type: 'number', inputBoxStyles: settingsNumberInputBoxStyles });\n\t\tcommon.toDispose.add(inputBox);\n\t\tcommon.toDispose.add(\n\t\t\tinputBox.onDidChange(e => {\n\t\t\t\ttemplate.onChange?.(e);\n\t\t\t}));\n\t\tcommon.toDispose.add(inputBox);\n\t\tinputBox.inputElement.classList.add(AbstractSettingRenderer.CONTROL_CLASS);\n\t\tinputBox.inputElement.tabIndex = 0;\n\n\t\tconst template: ISettingNumberItemTemplate = {\n\t\t\t...common,\n\t\t\tinputBox,\n\t\t\tvalidationErrorMessageElement\n\t\t};\n\n\t\tthis.addSettingElementFocusHandler(template);\n\n\t\treturn template;\n\t}\n\n\trenderElement(element: ITreeNode<SettingsTreeSettingElement, never>, index: number, templateData: ISettingNumberItemTemplate): void {\n\t\tsuper.renderSettingElement(element, index, templateData);\n\t}\n\n\tprotected renderValue(dataElement: SettingsTreeSettingElement, template: ISettingNumberItemTemplate, onChange: (value: number | null) => void): void {\n\t\tconst numParseFn = (dataElement.valueType === 'integer' || dataElement.valueType === 'nullable-integer')\n\t\t\t? parseInt : parseFloat;\n\n\t\tconst nullNumParseFn = (dataElement.valueType === 'nullable-integer' || dataElement.valueType === 'nullable-number')\n\t\t\t? ((v: string) => v === '' ? null : numParseFn(v)) : numParseFn;\n\n\t\ttemplate.onChange = undefined;\n\t\ttemplate.inputBox.value = typeof dataElement.value === 'number' ?\n\t\t\tdataElement.value.toString() : '';\n\t\ttemplate.inputBox.step = dataElement.valueType.includes('integer') ? '1' : 'any';\n\t\ttemplate.inputBox.setAriaLabel(dataElement.setting.key);\n\t\ttemplate.onChange = value => {\n\t\t\tif (!renderValidations(dataElement, template, false)) {\n\t\t\t\tonChange(nullNumParseFn(value));\n\t\t\t}\n\t\t};\n\n\t\trenderValidations(dataElement, template, true);\n\t}\n}\n\nclass SettingBoolRenderer extends AbstractSettingRenderer implements ITreeRenderer<SettingsTreeSettingElement, never, ISettingBoolItemTemplate> {\n\ttemplateId = SETTINGS_BOOL_TEMPLATE_ID;\n\n\trenderTemplate(_container: HTMLElement): ISettingBoolItemTemplate {\n\t\t_container.classList.add('setting-item');\n\t\t_container.classList.add('setting-item-bool');\n\n\t\tconst toDispose = new DisposableStore();\n\n\t\tconst container = DOM.append(_container, $(AbstractSettingRenderer.CONTENTS_SELECTOR));\n\t\tcontainer.classList.add('settings-row-inner-container');\n\n\t\tconst titleElement = DOM.append(container, $('.setting-item-title'));\n\t\tconst categoryElement = DOM.append(titleElement, $('span.setting-item-category'));\n\t\tconst labelElementContainer = DOM.append(titleElement, $('span.setting-item-label'));\n\t\tconst labelElement = toDispose.add(new SimpleIconLabel(labelElementContainer));\n\t\tconst indicatorsLabel = this._instantiationService.createInstance(SettingsTreeIndicatorsLabel, titleElement);\n\n\t\tconst descriptionAndValueElement = DOM.append(container, $('.setting-item-value-description'));\n\t\tconst controlElement = DOM.append(descriptionAndValueElement, $('.setting-item-bool-control'));\n\t\tconst descriptionElement = DOM.append(descriptionAndValueElement, $('.setting-item-description'));\n\t\tconst modifiedIndicatorElement = DOM.append(container, $('.setting-item-modified-indicator'));\n\t\ttoDispose.add(this._hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), modifiedIndicatorElement, localize('modified', \"The setting has been configured in the current scope.\")));\n\n\t\tconst deprecationWarningElement = DOM.append(container, $('.setting-item-deprecation-message'));\n\n\t\tconst checkbox = new Toggle({ icon: Codicon.check, actionClassName: 'setting-value-checkbox', isChecked: true, title: '', ...unthemedToggleStyles });\n\t\tcontrolElement.appendChild(checkbox.domNode);\n\t\ttoDispose.add(checkbox);\n\t\ttoDispose.add(checkbox.onChange(() => {\n\t\t\ttemplate.onChange!(checkbox.checked);\n\t\t}));\n\n\t\t// Need to listen for mouse clicks on description and toggle checkbox - use target ID for safety\n\t\t// Also have to ignore embedded links - too buried to stop propagation\n\t\ttoDispose.add(DOM.addDisposableListener(descriptionElement, DOM.EventType.MOUSE_DOWN, (e) => {\n\t\t\tconst targetElement = <HTMLElement>e.target;\n\n\t\t\t// Toggle target checkbox\n\t\t\tif (targetElement.tagName.toLowerCase() !== 'a') {\n\t\t\t\ttemplate.checkbox.checked = !template.checkbox.checked;\n\t\t\t\ttemplate.onChange!(checkbox.checked);\n\t\t\t}\n\t\t\tDOM.EventHelper.stop(e);\n\t\t}));\n\n\n\t\tcheckbox.domNode.classList.add(AbstractSettingRenderer.CONTROL_CLASS);\n\t\tconst toolbarContainer = DOM.append(container, $('.setting-toolbar-container'));\n\t\tconst toolbar = this.renderSettingToolbar(toolbarContainer);\n\t\ttoDispose.add(toolbar);\n\n\t\tconst template: ISettingBoolItemTemplate = {\n\t\t\ttoDispose,\n\t\t\telementDisposables: toDispose.add(new DisposableStore()),\n\n\t\t\tcontainerElement: container,\n\t\t\tcategoryElement,\n\t\t\tlabelElement,\n\t\t\tcontrolElement,\n\t\t\tcheckbox,\n\t\t\tdescriptionElement,\n\t\t\tdeprecationWarningElement,\n\t\t\tindicatorsLabel,\n\t\t\ttoolbar\n\t\t};\n\n\t\tthis.addSettingElementFocusHandler(template);\n\n\t\t// Prevent clicks from being handled by list\n\t\ttoDispose.add(DOM.addDisposableListener(controlElement, 'mousedown', (e: IMouseEvent) => e.stopPropagation()));\n\t\ttoDispose.add(DOM.addDisposableListener(titleElement, DOM.EventType.MOUSE_ENTER, e => container.classList.add('mouseover')));\n\t\ttoDispose.add(DOM.addDisposableListener(titleElement, DOM.EventType.MOUSE_LEAVE, e => container.classList.remove('mouseover')));\n\n\t\treturn template;\n\t}\n\n\trenderElement(element: ITreeNode<SettingsTreeSettingElement, never>, index: number, templateData: ISettingBoolItemTemplate): void {\n\t\tsuper.renderSettingElement(element, index, templateData);\n\t}\n\n\tprotected renderValue(dataElement: SettingsTreeSettingElement, template: ISettingBoolItemTemplate, onChange: (value: boolean) => void): void {\n\t\ttemplate.onChange = undefined;\n\t\ttemplate.checkbox.checked = dataElement.value;\n\t\ttemplate.checkbox.setTitle(dataElement.setting.key);\n\t\ttemplate.onChange = onChange;\n\t}\n}\n\ntype ManageExtensionClickTelemetryClassification = {\n\textensionId: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The extension the user went to manage.' };\n\towner: 'rzhao271';\n\tcomment: 'Event used to gain insights into when users interact with an extension management setting';\n};\n\nclass SettingsExtensionToggleRenderer extends AbstractSettingRenderer implements ITreeRenderer<SettingsTreeSettingElement, never, ISettingExtensionToggleItemTemplate> {\n\ttemplateId = SETTINGS_EXTENSION_TOGGLE_TEMPLATE_ID;\n\n\tprivate readonly _onDidDismissExtensionSetting = this._register(new Emitter<string>());\n\treadonly onDidDismissExtensionSetting = this._onDidDismissExtensionSetting.event;\n\n\trenderTemplate(_container: HTMLElement): ISettingExtensionToggleItemTemplate {\n\t\tconst common = super.renderCommonTemplate(null, _container, 'extension-toggle');\n\n\t\tconst actionButton = new Button(common.containerElement, {\n\t\t\ttitle: false,\n\t\t\t...defaultButtonStyles\n\t\t});\n\t\tactionButton.element.classList.add('setting-item-extension-toggle-button');\n\t\tactionButton.label = localize('showExtension', \"Show Extension\");\n\n\t\tconst dismissButton = new Button(common.containerElement, {\n\t\t\ttitle: false,\n\t\t\tsecondary: true,\n\t\t\t...defaultButtonStyles\n\t\t});\n\t\tdismissButton.element.classList.add('setting-item-extension-dismiss-button');\n\t\tdismissButton.label = localize('dismiss', \"Dismiss\");\n\n\t\tconst template: ISettingExtensionToggleItemTemplate = {\n\t\t\t...common,\n\t\t\tactionButton,\n\t\t\tdismissButton\n\t\t};\n\n\t\tthis.addSettingElementFocusHandler(template);\n\n\t\treturn template;\n\t}\n\n\trenderElement(element: ITreeNode<SettingsTreeSettingElement, never>, index: number, templateData: ISettingExtensionToggleItemTemplate): void {\n\t\tsuper.renderSettingElement(element, index, templateData);\n\t}\n\n\tprotected renderValue(dataElement: SettingsTreeSettingElement, template: ISettingExtensionToggleItemTemplate, onChange: (_: undefined) => void): void {\n\t\ttemplate.elementDisposables.clear();\n\n\t\tconst extensionId = dataElement.setting.displayExtensionId!;\n\t\ttemplate.elementDisposables.add(template.actionButton.onDidClick(async () => {\n\t\t\tthis._telemetryService.publicLog2<{ extensionId: String }, ManageExtensionClickTelemetryClassification>('ManageExtensionClick', { extensionId });\n\t\t\tthis._commandService.executeCommand('extension.open', extensionId);\n\t\t}));\n\n\t\ttemplate.elementDisposables.add(template.dismissButton.onDidClick(async () => {\n\t\t\tthis._telemetryService.publicLog2<{ extensionId: String }, ManageExtensionClickTelemetryClassification>('DismissExtensionClick', { extensionId });\n\t\t\tthis._onDidDismissExtensionSetting.fire(extensionId);\n\t\t}));\n\t}\n}\n\nexport class SettingTreeRenderers extends Disposable {\n\treadonly onDidClickOverrideElement: Event<ISettingOverrideClickEvent>;\n\n\tprivate readonly _onDidChangeSetting = this._register(new Emitter<ISettingChangeEvent>());\n\treadonly onDidChangeSetting: Event<ISettingChangeEvent>;\n\n\treadonly onDidDismissExtensionSetting: Event<string>;\n\n\treadonly onDidOpenSettings: Event<string>;\n\n\treadonly onDidClickSettingLink: Event<ISettingLinkClickEvent>;\n\n\treadonly onDidFocusSetting: Event<SettingsTreeSettingElement>;\n\n\treadonly onDidChangeSettingHeight: Event<HeightChangeParams>;\n\n\treadonly onApplyFilter: Event<string>;\n\n\treadonly allRenderers: ITreeRenderer<SettingsTreeElement, never, any>[];\n\n\tprivate readonly settingActions: IAction[];\n\n\tconstructor(\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IContextMenuService private readonly _contextMenuService: IContextMenuService,\n\t\t@IContextViewService private readonly _contextViewService: IContextViewService,\n\t\t@IUserDataProfilesService private readonly _userDataProfilesService: IUserDataProfilesService,\n\t\t@IUserDataSyncEnablementService private readonly _userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t) {\n\t\tsuper();\n\t\tthis.settingActions = [\n\t\t\tnew Action('settings.resetSetting', localize('resetSettingLabel', \"Reset Setting\"), undefined, undefined, async context => {\n\t\t\t\tif (context instanceof SettingsTreeSettingElement) {\n\t\t\t\t\tif (!context.isUntrusted) {\n\t\t\t\t\t\tthis._onDidChangeSetting.fire({\n\t\t\t\t\t\t\tkey: context.setting.key,\n\t\t\t\t\t\t\tvalue: undefined,\n\t\t\t\t\t\t\ttype: context.setting.type as SettingValueType,\n\t\t\t\t\t\t\tmanualReset: true,\n\t\t\t\t\t\t\tscope: context.setting.scope\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t\tnew Separator(),\n\t\t\tthis._instantiationService.createInstance(CopySettingIdAction),\n\t\t\tthis._instantiationService.createInstance(CopySettingAsJSONAction),\n\t\t\tthis._instantiationService.createInstance(CopySettingAsURLAction),\n\t\t];\n\n\t\tconst actionFactory = (setting: ISetting, settingTarget: SettingsTarget) => this.getActionsForSetting(setting, settingTarget);\n\t\tconst emptyActionFactory = (_: ISetting) => [];\n\t\tconst extensionRenderer = this._instantiationService.createInstance(SettingsExtensionToggleRenderer, [], emptyActionFactory);\n\t\tconst settingRenderers = [\n\t\t\tthis._instantiationService.createInstance(SettingBoolRenderer, this.settingActions, actionFactory),\n\t\t\tthis._instantiationService.createInstance(SettingNumberRenderer, this.settingActions, actionFactory),\n\t\t\tthis._instantiationService.createInstance(SettingArrayRenderer, this.settingActions, actionFactory),\n\t\t\tthis._instantiationService.createInstance(SettingComplexRenderer, this.settingActions, actionFactory),\n\t\t\tthis._instantiationService.createInstance(SettingTextRenderer, this.settingActions, actionFactory),\n\t\t\tthis._instantiationService.createInstance(SettingMultilineTextRenderer, this.settingActions, actionFactory),\n\t\t\tthis._instantiationService.createInstance(SettingExcludeRenderer, this.settingActions, actionFactory),\n\t\t\tthis._instantiationService.createInstance(SettingIncludeRenderer, this.settingActions, actionFactory),\n\t\t\tthis._instantiationService.createInstance(SettingEnumRenderer, this.settingActions, actionFactory),\n\t\t\tthis._instantiationService.createInstance(SettingObjectRenderer, this.settingActions, actionFactory),\n\t\t\tthis._instantiationService.createInstance(SettingBoolObjectRenderer, this.settingActions, actionFactory),\n\t\t\textensionRenderer\n\t\t];\n\n\t\tthis.onDidClickOverrideElement = Event.any(...settingRenderers.map(r => r.onDidClickOverrideElement));\n\t\tthis.onDidChangeSetting = Event.any(\n\t\t\t...settingRenderers.map(r => r.onDidChangeSetting),\n\t\t\tthis._onDidChangeSetting.event\n\t\t);\n\t\tthis.onDidDismissExtensionSetting = extensionRenderer.onDidDismissExtensionSetting;\n\t\tthis.onDidOpenSettings = Event.any(...settingRenderers.map(r => r.onDidOpenSettings));\n\t\tthis.onDidClickSettingLink = Event.any(...settingRenderers.map(r => r.onDidClickSettingLink));\n\t\tthis.onDidFocusSetting = Event.any(...settingRenderers.map(r => r.onDidFocusSetting));\n\t\tthis.onDidChangeSettingHeight = Event.any(...settingRenderers.map(r => r.onDidChangeSettingHeight));\n\t\tthis.onApplyFilter = Event.any(...settingRenderers.map(r => r.onApplyFilter));\n\n\t\tthis.allRenderers = [\n\t\t\t...settingRenderers,\n\t\t\tthis._instantiationService.createInstance(SettingGroupRenderer),\n\t\t\tthis._instantiationService.createInstance(SettingNewExtensionsRenderer),\n\t\t];\n\t}\n\n\tprivate getActionsForSetting(setting: ISetting, settingTarget: SettingsTarget): IAction[] {\n\t\tconst actions: IAction[] = [];\n\t\tif (this._userDataProfilesService.isEnabled() && setting.scope !== ConfigurationScope.APPLICATION && settingTarget === ConfigurationTarget.USER_LOCAL) {\n\t\t\tactions.push(this._instantiationService.createInstance(ApplySettingToAllProfilesAction, setting));\n\t\t}\n\t\tif (this._userDataSyncEnablementService.isEnabled() && !setting.disallowSyncIgnore) {\n\t\t\tactions.push(this._instantiationService.createInstance(SyncSettingAction, setting));\n\t\t}\n\t\tif (actions.length) {\n\t\t\tactions.splice(0, 0, new Separator());\n\t\t}\n\t\treturn actions;\n\t}\n\n\tcancelSuggesters() {\n\t\tthis._contextViewService.hideContextView();\n\t}\n\n\tshowContextMenu(element: SettingsTreeSettingElement, settingDOMElement: HTMLElement): void {\n\t\tconst toolbarElement = settingDOMElement.querySelector('.monaco-toolbar');\n\t\tif (toolbarElement) {\n\t\t\tthis._contextMenuService.showContextMenu({\n\t\t\t\tgetActions: () => this.settingActions,\n\t\t\t\tgetAnchor: () => <HTMLElement>toolbarElement,\n\t\t\t\tgetActionsContext: () => element\n\t\t\t});\n\t\t}\n\t}\n\n\tgetSettingDOMElementForDOMElement(domElement: HTMLElement): HTMLElement | null {\n\t\tconst parent = DOM.findParentWithClass(domElement, AbstractSettingRenderer.CONTENTS_CLASS);\n\t\tif (parent) {\n\t\t\treturn parent;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tgetDOMElementsForSettingKey(treeContainer: HTMLElement, key: string): NodeListOf<HTMLElement> {\n\t\treturn treeContainer.querySelectorAll(`[${AbstractSettingRenderer.SETTING_KEY_ATTR}=\"${key}\"]`);\n\t}\n\n\tgetKeyForDOMElementInSetting(element: HTMLElement): string | null {\n\t\tconst settingElement = this.getSettingDOMElementForDOMElement(element);\n\t\treturn settingElement && settingElement.getAttribute(AbstractSettingRenderer.SETTING_KEY_ATTR);\n\t}\n\n\tgetIdForDOMElementInSetting(element: HTMLElement): string | null {\n\t\tconst settingElement = this.getSettingDOMElementForDOMElement(element);\n\t\treturn settingElement && settingElement.getAttribute(AbstractSettingRenderer.SETTING_ID_ATTR);\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.settingActions.forEach(action => {\n\t\t\tif (isDisposable(action)) {\n\t\t\t\taction.dispose();\n\t\t\t}\n\t\t});\n\t\tthis.allRenderers.forEach(renderer => {\n\t\t\tif (isDisposable(renderer)) {\n\t\t\t\trenderer.dispose();\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * Validate and render any error message. Returns true if the value is invalid.\n */\nfunction renderValidations(dataElement: SettingsTreeSettingElement, template: ISettingTextItemTemplate, calledOnStartup: boolean): boolean {\n\tif (dataElement.setting.validator) {\n\t\tconst errMsg = dataElement.setting.validator(template.inputBox.value);\n\t\tif (errMsg) {\n\t\t\ttemplate.containerElement.classList.add('invalid-input');\n\t\t\ttemplate.validationErrorMessageElement.innerText = errMsg;\n\t\t\tconst validationError = localize('validationError', \"Validation Error.\");\n\t\t\ttemplate.inputBox.inputElement.parentElement!.setAttribute('aria-label', [validationError, errMsg].join(' '));\n\t\t\tif (!calledOnStartup) { aria.status(validationError + ' ' + errMsg); }\n\t\t\treturn true;\n\t\t} else {\n\t\t\ttemplate.inputBox.inputElement.parentElement!.removeAttribute('aria-label');\n\t\t}\n\t}\n\ttemplate.containerElement.classList.remove('invalid-input');\n\treturn false;\n}\n\n/**\n * Validate and render any error message for arrays. Returns true if the value is invalid.\n */\nfunction renderArrayValidations(\n\tdataElement: SettingsTreeSettingElement,\n\ttemplate: ISettingListItemTemplate | ISettingObjectItemTemplate,\n\tvalue: string[] | Record<string, unknown> | undefined,\n\tcalledOnStartup: boolean\n): boolean {\n\ttemplate.containerElement.classList.add('invalid-input');\n\tif (dataElement.setting.validator) {\n\t\tconst errMsg = dataElement.setting.validator(value);\n\t\tif (errMsg && errMsg !== '') {\n\t\t\ttemplate.containerElement.classList.add('invalid-input');\n\t\t\ttemplate.validationErrorMessageElement.innerText = errMsg;\n\t\t\tconst validationError = localize('validationError', \"Validation Error.\");\n\t\t\ttemplate.containerElement.setAttribute('aria-label', [dataElement.setting.key, validationError, errMsg].join(' '));\n\t\t\tif (!calledOnStartup) { aria.status(validationError + ' ' + errMsg); }\n\t\t\treturn true;\n\t\t} else {\n\t\t\ttemplate.containerElement.setAttribute('aria-label', dataElement.setting.key);\n\t\t\ttemplate.containerElement.classList.remove('invalid-input');\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction cleanRenderedMarkdown(element: Node): void {\n\tfor (let i = 0; i < element.childNodes.length; i++) {\n\t\tconst child = element.childNodes.item(i);\n\n\t\tconst tagName = (<Element>child).tagName && (<Element>child).tagName.toLowerCase();\n\t\tif (tagName === 'img') {\n\t\t\tchild.remove();\n\t\t} else {\n\t\t\tcleanRenderedMarkdown(child);\n\t\t}\n\t}\n}\n\nfunction fixSettingLinks(text: string, linkify = true): string {\n\treturn text.replace(/`#([^#\\s`]+)#`|'#([^#\\s']+)#'/g, (match, backticksGroup, quotesGroup) => {\n\t\tconst settingKey: string = backticksGroup ?? quotesGroup;\n\t\tconst targetDisplayFormat = settingKeyToDisplayFormat(settingKey);\n\t\tconst targetName = `${targetDisplayFormat.category}: ${targetDisplayFormat.label}`;\n\t\treturn linkify ?\n\t\t\t`[${targetName}](#${settingKey} \"${settingKey}\")` :\n\t\t\t`\"${targetName}\"`;\n\t});\n}\n\nfunction escapeInvisibleChars(enumValue: string): string {\n\treturn enumValue && enumValue\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\r/g, '\\\\r');\n}\n\n\nexport class SettingsTreeFilter implements ITreeFilter<SettingsTreeElement> {\n\tconstructor(\n\t\tprivate viewState: ISettingsEditorViewState,\n\t\t@IWorkbenchEnvironmentService private environmentService: IWorkbenchEnvironmentService,\n\t) { }\n\n\tfilter(element: SettingsTreeElement, parentVisibility: TreeVisibility): TreeFilterResult<void> {\n\t\t// Filter during search\n\t\tif (this.viewState.filterToCategory && element instanceof SettingsTreeSettingElement) {\n\t\t\tif (!this.settingContainedInGroup(element.setting, this.viewState.filterToCategory)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Non-user scope selected\n\t\tif (element instanceof SettingsTreeSettingElement && this.viewState.settingsTarget !== ConfigurationTarget.USER_LOCAL) {\n\t\t\tconst isRemote = !!this.environmentService.remoteAuthority;\n\t\t\tif (!element.matchesScope(this.viewState.settingsTarget, isRemote)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Group with no visible children\n\t\tif (element instanceof SettingsTreeGroupElement) {\n\t\t\tif (typeof element.count === 'number') {\n\t\t\t\treturn element.count > 0;\n\t\t\t}\n\n\t\t\treturn TreeVisibility.Recurse;\n\t\t}\n\n\t\t// Filtered \"new extensions\" button\n\t\tif (element instanceof SettingsTreeNewExtensionsElement) {\n\t\t\tif (this.viewState.tagFilters?.size || this.viewState.filterToCategory) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate settingContainedInGroup(setting: ISetting, group: SettingsTreeGroupElement): boolean {\n\t\treturn group.children.some(child => {\n\t\t\tif (child instanceof SettingsTreeGroupElement) {\n\t\t\t\treturn this.settingContainedInGroup(setting, child);\n\t\t\t} else if (child instanceof SettingsTreeSettingElement) {\n\t\t\t\treturn child.setting.key === setting.key;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass SettingsTreeDelegate extends CachedListVirtualDelegate<SettingsTreeGroupChild> {\n\n\tgetTemplateId(element: SettingsTreeGroupElement | SettingsTreeSettingElement | SettingsTreeNewExtensionsElement): string {\n\t\tif (element instanceof SettingsTreeGroupElement) {\n\t\t\treturn SETTINGS_ELEMENT_TEMPLATE_ID;\n\t\t}\n\n\t\tif (element instanceof SettingsTreeSettingElement) {\n\t\t\tif (element.valueType === SettingValueType.ExtensionToggle) {\n\t\t\t\treturn SETTINGS_EXTENSION_TOGGLE_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\tconst invalidTypeError = element.isConfigured && getInvalidTypeError(element.value, element.setting.type);\n\t\t\tif (invalidTypeError) {\n\t\t\t\treturn SETTINGS_COMPLEX_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\tif (element.valueType === SettingValueType.Boolean) {\n\t\t\t\treturn SETTINGS_BOOL_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\tif (element.valueType === SettingValueType.Integer ||\n\t\t\t\telement.valueType === SettingValueType.Number ||\n\t\t\t\telement.valueType === SettingValueType.NullableInteger ||\n\t\t\t\telement.valueType === SettingValueType.NullableNumber) {\n\t\t\t\treturn SETTINGS_NUMBER_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\tif (element.valueType === SettingValueType.MultilineString) {\n\t\t\t\treturn SETTINGS_MULTILINE_TEXT_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\tif (element.valueType === SettingValueType.String) {\n\t\t\t\treturn SETTINGS_TEXT_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\tif (element.valueType === SettingValueType.Enum) {\n\t\t\t\treturn SETTINGS_ENUM_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\tif (element.valueType === SettingValueType.Array) {\n\t\t\t\treturn SETTINGS_ARRAY_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\tif (element.valueType === SettingValueType.Exclude) {\n\t\t\t\treturn SETTINGS_EXCLUDE_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\tif (element.valueType === SettingValueType.Include) {\n\t\t\t\treturn SETTINGS_INCLUDE_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\tif (element.valueType === SettingValueType.Object) {\n\t\t\t\treturn SETTINGS_OBJECT_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\tif (element.valueType === SettingValueType.BooleanObject) {\n\t\t\t\treturn SETTINGS_BOOL_OBJECT_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\tif (element.valueType === SettingValueType.LanguageTag) {\n\t\t\t\treturn SETTINGS_COMPLEX_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\treturn SETTINGS_COMPLEX_TEMPLATE_ID;\n\t\t}\n\n\t\tif (element instanceof SettingsTreeNewExtensionsElement) {\n\t\t\treturn SETTINGS_NEW_EXTENSIONS_TEMPLATE_ID;\n\t\t}\n\n\t\tthrow new Error('unknown element type: ' + element);\n\t}\n\n\thasDynamicHeight(element: SettingsTreeGroupElement | SettingsTreeSettingElement | SettingsTreeNewExtensionsElement): boolean {\n\t\treturn !(element instanceof SettingsTreeGroupElement);\n\t}\n\n\tprotected estimateHeight(element: SettingsTreeGroupChild): number {\n\t\tif (element instanceof SettingsTreeGroupElement) {\n\t\t\treturn 42;\n\t\t}\n\n\t\treturn element instanceof SettingsTreeSettingElement && element.valueType === SettingValueType.Boolean ? 78 : 104;\n\t}\n}\n\nexport class NonCollapsibleObjectTreeModel<T> extends ObjectTreeModel<T> {\n\toverride isCollapsible(element: T): boolean {\n\t\treturn false;\n\t}\n\n\toverride setCollapsed(element: T, collapsed?: boolean, recursive?: boolean): boolean {\n\t\treturn false;\n\t}\n}\n\nclass SettingsTreeAccessibilityProvider implements IListAccessibilityProvider<SettingsTreeElement> {\n\tconstructor(private readonly configurationService: IWorkbenchConfigurationService, private readonly languageService: ILanguageService, private readonly userDataProfilesService: IUserDataProfilesService) {\n\t}\n\n\tgetAriaLabel(element: SettingsTreeElement) {\n\t\tif (element instanceof SettingsTreeSettingElement) {\n\t\t\tconst ariaLabelSections: string[] = [];\n\t\t\tariaLabelSections.push(`${element.displayCategory} ${element.displayLabel}.`);\n\n\t\t\tif (element.isConfigured) {\n\t\t\t\tconst modifiedText = localize('settings.Modified', 'Modified.');\n\t\t\t\tariaLabelSections.push(modifiedText);\n\t\t\t}\n\n\t\t\tconst indicatorsLabelAriaLabel = getIndicatorsLabelAriaLabel(element, this.configurationService, this.userDataProfilesService, this.languageService);\n\t\t\tif (indicatorsLabelAriaLabel.length) {\n\t\t\t\tariaLabelSections.push(`${indicatorsLabelAriaLabel}.`);\n\t\t\t}\n\n\t\t\tconst descriptionWithoutSettingLinks = renderMarkdownAsPlaintext({ value: fixSettingLinks(element.description, false) });\n\t\t\tif (descriptionWithoutSettingLinks.length) {\n\t\t\t\tariaLabelSections.push(descriptionWithoutSettingLinks);\n\t\t\t}\n\t\t\treturn ariaLabelSections.join(' ');\n\t\t} else if (element instanceof SettingsTreeGroupElement) {\n\t\t\treturn element.label;\n\t\t} else {\n\t\t\treturn element.id;\n\t\t}\n\t}\n\n\tgetWidgetAriaLabel() {\n\t\treturn localize('settings', \"Settings\");\n\t}\n}\n\nexport class SettingsTree extends WorkbenchObjectTree<SettingsTreeElement> {\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\tviewState: ISettingsEditorViewState,\n\t\trenderers: ITreeRenderer<any, void, any>[],\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IListService listService: IListService,\n\t\t@IWorkbenchConfigurationService configurationService: IWorkbenchConfigurationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ILanguageService languageService: ILanguageService,\n\t\t@IUserDataProfilesService userDataProfilesService: IUserDataProfilesService\n\t) {\n\t\tsuper('SettingsTree', container,\n\t\t\tnew SettingsTreeDelegate(),\n\t\t\trenderers,\n\t\t\t{\n\t\t\t\thorizontalScrolling: false,\n\t\t\t\tsupportDynamicHeights: true,\n\t\t\t\tidentityProvider: {\n\t\t\t\t\tgetId(e) {\n\t\t\t\t\t\treturn e.id;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\taccessibilityProvider: new SettingsTreeAccessibilityProvider(configurationService, languageService, userDataProfilesService),\n\t\t\t\tstyleController: id => new DefaultStyleController(DOM.createStyleSheet(container), id),\n\t\t\t\tfilter: instantiationService.createInstance(SettingsTreeFilter, viewState),\n\t\t\t\tsmoothScrolling: configurationService.getValue<boolean>('workbench.list.smoothScrolling'),\n\t\t\t\tmultipleSelectionSupport: false,\n\t\t\t\tfindWidgetEnabled: false,\n\t\t\t\trenderIndentGuides: RenderIndentGuides.None,\n\t\t\t\ttransformOptimization: false // Disable transform optimization #177470\n\t\t\t},\n\t\t\tinstantiationService,\n\t\t\tcontextKeyService,\n\t\t\tlistService,\n\t\t\tconfigurationService,\n\t\t);\n\n\t\tthis.getHTMLElement().classList.add('settings-editor-tree');\n\n\t\tthis.style(getListStyles({\n\t\t\tlistBackground: editorBackground,\n\t\t\tlistActiveSelectionBackground: editorBackground,\n\t\t\tlistActiveSelectionForeground: foreground,\n\t\t\tlistFocusAndSelectionBackground: editorBackground,\n\t\t\tlistFocusAndSelectionForeground: foreground,\n\t\t\tlistFocusBackground: editorBackground,\n\t\t\tlistFocusForeground: foreground,\n\t\t\tlistHoverForeground: foreground,\n\t\t\tlistHoverBackground: editorBackground,\n\t\t\tlistHoverOutline: editorBackground,\n\t\t\tlistFocusOutline: editorBackground,\n\t\t\tlistInactiveSelectionBackground: editorBackground,\n\t\t\tlistInactiveSelectionForeground: foreground,\n\t\t\tlistInactiveFocusBackground: editorBackground,\n\t\t\tlistInactiveFocusOutline: editorBackground,\n\t\t\ttreeIndentGuidesStroke: undefined,\n\t\t\ttreeInactiveIndentGuidesStroke: undefined,\n\t\t}));\n\n\t\tthis.disposables.add(configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('workbench.list.smoothScrolling')) {\n\t\t\t\tthis.updateOptions({\n\t\t\t\t\tsmoothScrolling: configurationService.getValue<boolean>('workbench.list.smoothScrolling')\n\t\t\t\t});\n\t\t\t}\n\t\t}));\n\t}\n\n\tprotected override createModel(user: string, options: IObjectTreeOptions<SettingsTreeGroupChild>): ITreeModel<SettingsTreeGroupChild | null, void, SettingsTreeGroupChild | null> {\n\t\treturn new NonCollapsibleObjectTreeModel<SettingsTreeGroupChild>(user, options);\n\t}\n}\n\nclass CopySettingIdAction extends Action {\n\tstatic readonly ID = 'settings.copySettingId';\n\tstatic readonly LABEL = localize('copySettingIdLabel', \"Copy Setting ID\");\n\n\tconstructor(\n\t\t@IClipboardService private readonly clipboardService: IClipboardService\n\t) {\n\t\tsuper(CopySettingIdAction.ID, CopySettingIdAction.LABEL);\n\t}\n\n\toverride async run(context: SettingsTreeSettingElement): Promise<void> {\n\t\tif (context) {\n\t\t\tawait this.clipboardService.writeText(context.setting.key);\n\t\t}\n\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n\nclass CopySettingAsJSONAction extends Action {\n\tstatic readonly ID = 'settings.copySettingAsJSON';\n\tstatic readonly LABEL = localize('copySettingAsJSONLabel', \"Copy Setting as JSON\");\n\n\tconstructor(\n\t\t@IClipboardService private readonly clipboardService: IClipboardService\n\t) {\n\t\tsuper(CopySettingAsJSONAction.ID, CopySettingAsJSONAction.LABEL);\n\t}\n\n\toverride async run(context: SettingsTreeSettingElement): Promise<void> {\n\t\tif (context) {\n\t\t\tconst jsonResult = `\"${context.setting.key}\": ${JSON.stringify(context.value, undefined, '  ')}`;\n\t\t\tawait this.clipboardService.writeText(jsonResult);\n\t\t}\n\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n\nclass CopySettingAsURLAction extends Action {\n\tstatic readonly ID = 'settings.copySettingAsURL';\n\tstatic readonly LABEL = localize('copySettingAsURLLabel', \"Copy Setting as URL\");\n\n\tconstructor(\n\t\t@IClipboardService private readonly clipboardService: IClipboardService,\n\t\t@IProductService private readonly productService: IProductService,\n\t) {\n\t\tsuper(CopySettingAsURLAction.ID, CopySettingAsURLAction.LABEL);\n\t}\n\n\toverride async run(context: SettingsTreeSettingElement): Promise<void> {\n\t\tif (context) {\n\t\t\tconst settingKey = context.setting.key;\n\t\t\tconst product = this.productService.urlProtocol;\n\t\t\tconst uri = URI.from({ scheme: product, authority: SETTINGS_AUTHORITY, path: `/${settingKey}` }, true);\n\t\t\tawait this.clipboardService.writeText(uri.toString());\n\t\t}\n\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n\nclass SyncSettingAction extends Action {\n\tstatic readonly ID = 'settings.stopSyncingSetting';\n\tstatic readonly LABEL = localize('stopSyncingSetting', \"Sync This Setting\");\n\n\tconstructor(\n\t\tprivate readonly setting: ISetting,\n\t\t@IConfigurationService private readonly configService: IConfigurationService,\n\t) {\n\t\tsuper(SyncSettingAction.ID, SyncSettingAction.LABEL);\n\t\tthis._register(Event.filter(configService.onDidChangeConfiguration, e => e.affectsConfiguration('settingsSync.ignoredSettings'))(() => this.update()));\n\t\tthis.update();\n\t}\n\n\tasync update() {\n\t\tconst ignoredSettings = getIgnoredSettings(getDefaultIgnoredSettings(), this.configService);\n\t\tthis.checked = !ignoredSettings.includes(this.setting.key);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\t// first remove the current setting completely from ignored settings\n\t\tlet currentValue = [...this.configService.getValue<string[]>('settingsSync.ignoredSettings')];\n\t\tcurrentValue = currentValue.filter(v => v !== this.setting.key && v !== `-${this.setting.key}`);\n\n\t\tconst defaultIgnoredSettings = getDefaultIgnoredSettings();\n\t\tconst isDefaultIgnored = defaultIgnoredSettings.includes(this.setting.key);\n\t\tconst askedToSync = !this.checked;\n\n\t\t// If asked to sync, then add only if it is ignored by default\n\t\tif (askedToSync && isDefaultIgnored) {\n\t\t\tcurrentValue.push(`-${this.setting.key}`);\n\t\t}\n\n\t\t// If asked not to sync, then add only if it is not ignored by default\n\t\tif (!askedToSync && !isDefaultIgnored) {\n\t\t\tcurrentValue.push(this.setting.key);\n\t\t}\n\n\t\tthis.configService.updateValue('settingsSync.ignoredSettings', currentValue.length ? currentValue : undefined, ConfigurationTarget.USER);\n\n\t\treturn Promise.resolve(undefined);\n\t}\n\n}\n\nclass ApplySettingToAllProfilesAction extends Action {\n\tstatic readonly ID = 'settings.applyToAllProfiles';\n\tstatic readonly LABEL = localize('applyToAllProfiles', \"Apply Setting to all Profiles\");\n\n\tconstructor(\n\t\tprivate readonly setting: ISetting,\n\t\t@IWorkbenchConfigurationService private readonly configService: IWorkbenchConfigurationService,\n\t) {\n\t\tsuper(ApplySettingToAllProfilesAction.ID, ApplySettingToAllProfilesAction.LABEL);\n\t\tthis._register(Event.filter(configService.onDidChangeConfiguration, e => e.affectsConfiguration(APPLY_ALL_PROFILES_SETTING))(() => this.update()));\n\t\tthis.update();\n\t}\n\n\tupdate() {\n\t\tconst allProfilesSettings = this.configService.getValue<string[]>(APPLY_ALL_PROFILES_SETTING);\n\t\tthis.checked = allProfilesSettings.includes(this.setting.key);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\t// first remove the current setting completely from ignored settings\n\t\tconst value = this.configService.getValue<string[]>(APPLY_ALL_PROFILES_SETTING) ?? [];\n\n\t\tif (this.checked) {\n\t\t\tvalue.splice(value.indexOf(this.setting.key), 1);\n\t\t} else {\n\t\t\tvalue.push(this.setting.key);\n\t\t}\n\n\t\tconst newValue = distinct(value);\n\t\tif (this.checked) {\n\t\t\tawait this.configService.updateValue(this.setting.key, this.configService.inspect(this.setting.key).application?.value, ConfigurationTarget.USER_LOCAL);\n\t\t\tawait this.configService.updateValue(APPLY_ALL_PROFILES_SETTING, newValue.length ? newValue : undefined, ConfigurationTarget.USER_LOCAL);\n\t\t} else {\n\t\t\tawait this.configService.updateValue(APPLY_ALL_PROFILES_SETTING, newValue.length ? newValue : undefined, ConfigurationTarget.USER_LOCAL);\n\t\t\tawait this.configService.updateValue(this.setting.key, this.configService.inspect(this.setting.key).userLocal?.value, ConfigurationTarget.USER_LOCAL);\n\t\t}\n\t}\n\n}\n"],
  "mappings": "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",
  "names": ["sortKeys", "idx"]
}
