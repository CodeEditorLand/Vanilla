{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/preferences/browser/settingsTree.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BrowserFeatures } from \"../../../../base/browser/canIUse.js\";\nimport * as DOM from \"../../../../base/browser/dom.js\";\nimport { StandardKeyboardEvent } from \"../../../../base/browser/keyboardEvent.js\";\nimport { renderMarkdownAsPlaintext } from \"../../../../base/browser/markdownRenderer.js\";\nimport type { IMouseEvent } from \"../../../../base/browser/mouseEvent.js\";\nimport * as aria from \"../../../../base/browser/ui/aria/aria.js\";\nimport { Button } from \"../../../../base/browser/ui/button/button.js\";\nimport { getDefaultHoverDelegate } from \"../../../../base/browser/ui/hover/hoverDelegateFactory.js\";\nimport { SimpleIconLabel } from \"../../../../base/browser/ui/iconLabel/simpleIconLabel.js\";\nimport {\n\ttype IInputOptions,\n\tInputBox,\n} from \"../../../../base/browser/ui/inputbox/inputBox.js\";\nimport { CachedListVirtualDelegate } from \"../../../../base/browser/ui/list/list.js\";\nimport {\n\tDefaultStyleController,\n\ttype IListAccessibilityProvider,\n} from \"../../../../base/browser/ui/list/listWidget.js\";\nimport {\n\ttype ISelectOptionItem,\n\tSelectBox,\n} from \"../../../../base/browser/ui/selectBox/selectBox.js\";\nimport {\n\tToggle,\n\tunthemedToggleStyles,\n} from \"../../../../base/browser/ui/toggle/toggle.js\";\nimport { ToolBar } from \"../../../../base/browser/ui/toolbar/toolbar.js\";\nimport { RenderIndentGuides } from \"../../../../base/browser/ui/tree/abstractTree.js\";\nimport type { IObjectTreeOptions } from \"../../../../base/browser/ui/tree/objectTree.js\";\nimport { ObjectTreeModel } from \"../../../../base/browser/ui/tree/objectTreeModel.js\";\nimport {\n\ttype ITreeFilter,\n\ttype ITreeModel,\n\ttype ITreeNode,\n\ttype ITreeRenderer,\n\ttype TreeFilterResult,\n\tTreeVisibility,\n} from \"../../../../base/browser/ui/tree/tree.js\";\nimport {\n\tAction,\n\ttype IAction,\n\tSeparator,\n} from \"../../../../base/common/actions.js\";\nimport { distinct } from \"../../../../base/common/arrays.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { onUnexpectedError } from \"../../../../base/common/errors.js\";\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport type { IJSONSchema } from \"../../../../base/common/jsonSchema.js\";\nimport { KeyCode } from \"../../../../base/common/keyCodes.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\tdispose,\n\tisDisposable,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { isIOS } from \"../../../../base/common/platform.js\";\nimport { escapeRegExpCharacters } from \"../../../../base/common/strings.js\";\nimport { isDefined, isUndefinedOrNull } from \"../../../../base/common/types.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { MarkdownRenderer } from \"../../../../editor/browser/widget/markdownRenderer/browser/markdownRenderer.js\";\nimport { ILanguageService } from \"../../../../editor/common/languages/language.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IClipboardService } from \"../../../../platform/clipboard/common/clipboardService.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport {\n\tConfigurationTarget,\n\tIConfigurationService,\n\tgetLanguageTagSettingPlainKey,\n} from \"../../../../platform/configuration/common/configuration.js\";\nimport { ConfigurationScope } from \"../../../../platform/configuration/common/configurationRegistry.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tIContextMenuService,\n\tIContextViewService,\n} from \"../../../../platform/contextview/browser/contextView.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport {\n\tIListService,\n\tWorkbenchObjectTree,\n} from \"../../../../platform/list/browser/listService.js\";\nimport type { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport {\n\tdefaultButtonStyles,\n\tgetInputBoxStyle,\n\tgetListStyles,\n\tgetSelectBoxStyles,\n} from \"../../../../platform/theme/browser/defaultStyles.js\";\nimport {\n\teditorBackground,\n\tforeground,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport { IUserDataProfilesService } from \"../../../../platform/userDataProfile/common/userDataProfile.js\";\nimport { getIgnoredSettings } from \"../../../../platform/userDataSync/common/settingsMerge.js\";\nimport {\n\tIUserDataSyncEnablementService,\n\tgetDefaultIgnoredSettings,\n} from \"../../../../platform/userDataSync/common/userDataSync.js\";\nimport {\n\tAPPLY_ALL_PROFILES_SETTING,\n\tIWorkbenchConfigurationService,\n} from \"../../../services/configuration/common/configuration.js\";\nimport { IWorkbenchEnvironmentService } from \"../../../services/environment/common/environmentService.js\";\nimport { IExtensionService } from \"../../../services/extensions/common/extensions.js\";\nimport {\n\ttype ISetting,\n\ttype ISettingsGroup,\n\tSETTINGS_AUTHORITY,\n\tSettingValueType,\n} from \"../../../services/preferences/common/preferences.js\";\nimport { getInvalidTypeError } from \"../../../services/preferences/common/preferencesValidation.js\";\nimport { IExtensionsWorkbenchService } from \"../../extensions/common/extensions.js\";\nimport {\n\tLANGUAGE_SETTING_TAG,\n\tSETTINGS_EDITOR_COMMAND_SHOW_CONTEXT_MENU,\n\tcompareTwoNullableNumbers,\n} from \"../common/preferences.js\";\nimport {\n\tsettingsNumberInputBackground,\n\tsettingsNumberInputBorder,\n\tsettingsNumberInputForeground,\n\tsettingsSelectBackground,\n\tsettingsSelectBorder,\n\tsettingsSelectForeground,\n\tsettingsSelectListBorder,\n\tsettingsTextInputBackground,\n\tsettingsTextInputBorder,\n\tsettingsTextInputForeground,\n} from \"../common/settingsEditorColorRegistry.js\";\nimport { settingsMoreActionIcon } from \"./preferencesIcons.js\";\nimport type { SettingsTarget } from \"./preferencesWidgets.js\";\nimport {\n\ttype ISettingOverrideClickEvent,\n\tSettingsTreeIndicatorsLabel,\n\tgetIndicatorsLabelAriaLabel,\n} from \"./settingsEditorSettingIndicators.js\";\nimport type { ITOCEntry } from \"./settingsLayout.js\";\nimport {\n\ttype ISettingsEditorViewState,\n\ttype SettingsTreeElement,\n\ttype SettingsTreeGroupChild,\n\tSettingsTreeGroupElement,\n\tSettingsTreeNewExtensionsElement,\n\tSettingsTreeSettingElement,\n\tinspectSetting,\n\tobjectSettingSupportsRemoveDefaultValue,\n\tsettingKeyToDisplayFormat,\n} from \"./settingsTreeModels.js\";\nimport {\n\tExcludeSettingWidget,\n\ttype IBoolObjectDataItem,\n\ttype IIncludeExcludeDataItem,\n\ttype IListDataItem,\n\ttype IObjectDataItem,\n\ttype IObjectEnumOption,\n\ttype IObjectKeySuggester,\n\ttype IObjectValueSuggester,\n\tIncludeSettingWidget,\n\tListSettingWidget,\n\tObjectSettingCheckboxWidget,\n\tObjectSettingDropdownWidget,\n\ttype ObjectValue,\n\ttype SettingListEvent,\n} from \"./settingsWidgets.js\";\n\nconst $ = DOM.$;\n\nfunction getIncludeExcludeDisplayValue(\n\telement: SettingsTreeSettingElement,\n): IIncludeExcludeDataItem[] {\n\tconst elementDefaultValue: Record<string, unknown> =\n\t\ttypeof element.defaultValue === \"object\"\n\t\t\t? (element.defaultValue ?? {})\n\t\t\t: {};\n\n\tconst data = element.isConfigured\n\t\t? { ...elementDefaultValue, ...element.scopeValue }\n\t\t: elementDefaultValue;\n\n\treturn Object.keys(data)\n\t\t.filter((key) => !!data[key])\n\t\t.map((key) => {\n\t\t\tconst defaultValue = elementDefaultValue[key];\n\n\t\t\t// Get source if it's a default value\n\t\t\tlet source: string | undefined;\n\t\t\tif (\n\t\t\t\tdefaultValue === data[key] &&\n\t\t\t\telement.setting.type === \"object\" &&\n\t\t\t\telement.defaultValueSource instanceof Map\n\t\t\t) {\n\t\t\t\tconst defaultSource = element.defaultValueSource.get(\n\t\t\t\t\t`${element.setting.key}.${key}`,\n\t\t\t\t);\n\t\t\t\tsource =\n\t\t\t\t\ttypeof defaultSource === \"string\"\n\t\t\t\t\t\t? defaultSource\n\t\t\t\t\t\t: defaultSource?.displayName;\n\t\t\t}\n\n\t\t\tconst value = data[key];\n\t\t\tconst sibling = typeof value === \"boolean\" ? undefined : value.when;\n\t\t\treturn {\n\t\t\t\tvalue: {\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t\tdata: key,\n\t\t\t\t},\n\t\t\t\tsibling,\n\t\t\t\telementType: element.valueType,\n\t\t\t\tsource,\n\t\t\t};\n\t\t});\n}\n\nfunction areAllPropertiesDefined(\n\tproperties: string[],\n\titemsToDisplay: IObjectDataItem[],\n): boolean {\n\tconst staticProperties = new Set(properties);\n\titemsToDisplay.forEach(({ key }) => staticProperties.delete(key.data));\n\treturn staticProperties.size === 0;\n}\n\nfunction getEnumOptionsFromSchema(schema: IJSONSchema): IObjectEnumOption[] {\n\tif (schema.anyOf) {\n\t\treturn schema.anyOf.flatMap(getEnumOptionsFromSchema);\n\t}\n\n\tconst enumDescriptions = schema.enumDescriptions ?? [];\n\n\treturn (schema.enum ?? []).map((value, idx) => {\n\t\tconst description =\n\t\t\tidx < enumDescriptions.length ? enumDescriptions[idx] : undefined;\n\n\t\treturn { value, description };\n\t});\n}\n\nfunction getObjectValueType(schema: IJSONSchema): ObjectValue[\"type\"] {\n\tif (schema.anyOf) {\n\t\tconst subTypes = schema.anyOf.map(getObjectValueType);\n\t\tif (subTypes.some((type) => type === \"enum\")) {\n\t\t\treturn \"enum\";\n\t\t}\n\t\treturn \"string\";\n\t}\n\n\tif (schema.type === \"boolean\") {\n\t\treturn \"boolean\";\n\t} else if (\n\t\tschema.type === \"string\" &&\n\t\tisDefined(schema.enum) &&\n\t\tschema.enum.length > 0\n\t) {\n\t\treturn \"enum\";\n\t} else {\n\t\treturn \"string\";\n\t}\n}\n\nfunction getObjectEntryValueDisplayValue(\n\ttype: ObjectValue[\"type\"],\n\tdata: unknown,\n\toptions: IObjectEnumOption[],\n): ObjectValue {\n\tif (type === \"boolean\") {\n\t\treturn { type, data: !!data };\n\t} else if (type === \"enum\") {\n\t\treturn { type, data: \"\" + data, options };\n\t} else {\n\t\treturn { type, data: \"\" + data };\n\t}\n}\n\nfunction getObjectDisplayValue(\n\telement: SettingsTreeSettingElement,\n): IObjectDataItem[] {\n\tconst elementDefaultValue: Record<string, unknown> =\n\t\ttypeof element.defaultValue === \"object\"\n\t\t\t? (element.defaultValue ?? {})\n\t\t\t: {};\n\n\tconst elementScopeValue: Record<string, unknown> =\n\t\ttypeof element.scopeValue === \"object\"\n\t\t\t? (element.scopeValue ?? {})\n\t\t\t: {};\n\n\tconst data = element.isConfigured\n\t\t? { ...elementDefaultValue, ...elementScopeValue }\n\t\t: elementDefaultValue;\n\n\tconst {\n\t\tobjectProperties,\n\t\tobjectPatternProperties,\n\t\tobjectAdditionalProperties,\n\t} = element.setting;\n\tconst patternsAndSchemas = Object.entries(\n\t\tobjectPatternProperties ?? {},\n\t).map(([pattern, schema]) => ({\n\t\tpattern: new RegExp(pattern),\n\t\tschema,\n\t}));\n\n\tconst wellDefinedKeyEnumOptions = Object.entries(\n\t\tobjectProperties ?? {},\n\t).map(([key, schema]) => ({ value: key, description: schema.description }));\n\n\treturn Object.keys(data)\n\t\t.map((key) => {\n\t\t\tconst defaultValue = elementDefaultValue[key];\n\n\t\t\t// Get source if it's a default value\n\t\t\tlet source: string | undefined;\n\t\t\tif (\n\t\t\t\tdefaultValue === data[key] &&\n\t\t\t\telement.setting.type === \"object\" &&\n\t\t\t\telement.defaultValueSource instanceof Map\n\t\t\t) {\n\t\t\t\tconst defaultSource = element.defaultValueSource.get(\n\t\t\t\t\t`${element.setting.key}.${key}`,\n\t\t\t\t);\n\t\t\t\tsource =\n\t\t\t\t\ttypeof defaultSource === \"string\"\n\t\t\t\t\t\t? defaultSource\n\t\t\t\t\t\t: defaultSource?.displayName;\n\t\t\t}\n\n\t\t\tif (isDefined(objectProperties) && key in objectProperties) {\n\t\t\t\tconst valueEnumOptions = getEnumOptionsFromSchema(\n\t\t\t\t\tobjectProperties[key],\n\t\t\t\t);\n\t\t\t\treturn {\n\t\t\t\t\tkey: {\n\t\t\t\t\t\ttype: \"enum\",\n\t\t\t\t\t\tdata: key,\n\t\t\t\t\t\toptions: wellDefinedKeyEnumOptions,\n\t\t\t\t\t},\n\t\t\t\t\tvalue: getObjectEntryValueDisplayValue(\n\t\t\t\t\t\tgetObjectValueType(objectProperties[key]),\n\t\t\t\t\t\tdata[key],\n\t\t\t\t\t\tvalueEnumOptions,\n\t\t\t\t\t),\n\t\t\t\t\tkeyDescription: objectProperties[key].description,\n\t\t\t\t\tremovable: isUndefinedOrNull(defaultValue),\n\t\t\t\t\tresetable: !isUndefinedOrNull(defaultValue),\n\t\t\t\t\tsource,\n\t\t\t\t} satisfies IObjectDataItem;\n\t\t\t}\n\n\t\t\t// The row is removable if it doesn't have a default value assigned or the setting supports removing the default value.\n\t\t\t// If a default value is assigned and the user modified the default, it can be reset back to the default.\n\t\t\tconst removable =\n\t\t\t\tdefaultValue === undefined ||\n\t\t\t\tobjectSettingSupportsRemoveDefaultValue(element.setting.key);\n\t\t\tconst resetable = !!defaultValue && defaultValue !== data[key];\n\t\t\tconst schema = patternsAndSchemas.find(({ pattern }) =>\n\t\t\t\tpattern.test(key),\n\t\t\t)?.schema;\n\t\t\tif (schema) {\n\t\t\t\tconst valueEnumOptions = getEnumOptionsFromSchema(schema);\n\t\t\t\treturn {\n\t\t\t\t\tkey: { type: \"string\", data: key },\n\t\t\t\t\tvalue: getObjectEntryValueDisplayValue(\n\t\t\t\t\t\tgetObjectValueType(schema),\n\t\t\t\t\t\tdata[key],\n\t\t\t\t\t\tvalueEnumOptions,\n\t\t\t\t\t),\n\t\t\t\t\tkeyDescription: schema.description,\n\t\t\t\t\tremovable,\n\t\t\t\t\tresetable,\n\t\t\t\t\tsource,\n\t\t\t\t} satisfies IObjectDataItem;\n\t\t\t}\n\n\t\t\tconst additionalValueEnums = getEnumOptionsFromSchema(\n\t\t\t\ttypeof objectAdditionalProperties === \"boolean\"\n\t\t\t\t\t? {}\n\t\t\t\t\t: (objectAdditionalProperties ?? {}),\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\tkey: { type: \"string\", data: key },\n\t\t\t\tvalue: getObjectEntryValueDisplayValue(\n\t\t\t\t\ttypeof objectAdditionalProperties === \"object\"\n\t\t\t\t\t\t? getObjectValueType(objectAdditionalProperties)\n\t\t\t\t\t\t: \"string\",\n\t\t\t\t\tdata[key],\n\t\t\t\t\tadditionalValueEnums,\n\t\t\t\t),\n\t\t\t\tkeyDescription:\n\t\t\t\t\ttypeof objectAdditionalProperties === \"object\"\n\t\t\t\t\t\t? objectAdditionalProperties.description\n\t\t\t\t\t\t: undefined,\n\t\t\t\tremovable,\n\t\t\t\tresetable,\n\t\t\t\tsource,\n\t\t\t} satisfies IObjectDataItem;\n\t\t})\n\t\t.filter((item) => !isUndefinedOrNull(item.value.data));\n}\n\nfunction getBoolObjectDisplayValue(\n\telement: SettingsTreeSettingElement,\n): IBoolObjectDataItem[] {\n\tconst elementDefaultValue: Record<string, unknown> =\n\t\ttypeof element.defaultValue === \"object\"\n\t\t\t? (element.defaultValue ?? {})\n\t\t\t: {};\n\n\tconst elementScopeValue: Record<string, unknown> =\n\t\ttypeof element.scopeValue === \"object\"\n\t\t\t? (element.scopeValue ?? {})\n\t\t\t: {};\n\n\tconst data = element.isConfigured\n\t\t? { ...elementDefaultValue, ...elementScopeValue }\n\t\t: elementDefaultValue;\n\n\tconst { objectProperties } = element.setting;\n\tconst displayValues: IBoolObjectDataItem[] = [];\n\tfor (const key in objectProperties) {\n\t\tconst defaultValue = elementDefaultValue[key];\n\n\t\t// Get source if it's a default value\n\t\tlet source: string | undefined;\n\t\tif (\n\t\t\tdefaultValue === data[key] &&\n\t\t\telement.setting.type === \"object\" &&\n\t\t\telement.defaultValueSource instanceof Map\n\t\t) {\n\t\t\tconst defaultSource = element.defaultValueSource.get(key);\n\t\t\tsource =\n\t\t\t\ttypeof defaultSource === \"string\"\n\t\t\t\t\t? defaultSource\n\t\t\t\t\t: defaultSource?.displayName;\n\t\t}\n\n\t\tdisplayValues.push({\n\t\t\tkey: {\n\t\t\t\ttype: \"string\",\n\t\t\t\tdata: key,\n\t\t\t},\n\t\t\tvalue: {\n\t\t\t\ttype: \"boolean\",\n\t\t\t\tdata: !!data[key],\n\t\t\t},\n\t\t\tkeyDescription: objectProperties[key].description,\n\t\t\tremovable: false,\n\t\t\tresetable: true,\n\t\t\tsource,\n\t\t});\n\t}\n\treturn displayValues;\n}\n\nfunction createArraySuggester(\n\telement: SettingsTreeSettingElement,\n): IObjectKeySuggester {\n\treturn (keys, idx) => {\n\t\tconst enumOptions: IObjectEnumOption[] = [];\n\n\t\tif (element.setting.enum) {\n\t\t\telement.setting.enum.forEach((key, i) => {\n\t\t\t\t// include the currently selected value, even if uniqueItems is true\n\t\t\t\tif (\n\t\t\t\t\t!element.setting.uniqueItems ||\n\t\t\t\t\t(idx !== undefined && key === keys[idx]) ||\n\t\t\t\t\t!keys.includes(key)\n\t\t\t\t) {\n\t\t\t\t\tconst description = element.setting.enumDescriptions?.[i];\n\t\t\t\t\tenumOptions.push({ value: key, description });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn enumOptions.length > 0\n\t\t\t? { type: \"enum\", data: enumOptions[0].value, options: enumOptions }\n\t\t\t: undefined;\n\t};\n}\n\nfunction createObjectKeySuggester(\n\telement: SettingsTreeSettingElement,\n): IObjectKeySuggester {\n\tconst { objectProperties } = element.setting;\n\tconst allStaticKeys = Object.keys(objectProperties ?? {});\n\n\treturn (keys) => {\n\t\tconst existingKeys = new Set(keys);\n\t\tconst enumOptions: IObjectEnumOption[] = [];\n\n\t\tallStaticKeys.forEach((staticKey) => {\n\t\t\tif (!existingKeys.has(staticKey)) {\n\t\t\t\tenumOptions.push({\n\t\t\t\t\tvalue: staticKey,\n\t\t\t\t\tdescription: objectProperties![staticKey].description,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn enumOptions.length > 0\n\t\t\t? { type: \"enum\", data: enumOptions[0].value, options: enumOptions }\n\t\t\t: undefined;\n\t};\n}\n\nfunction createObjectValueSuggester(\n\telement: SettingsTreeSettingElement,\n): IObjectValueSuggester {\n\tconst {\n\t\tobjectProperties,\n\t\tobjectPatternProperties,\n\t\tobjectAdditionalProperties,\n\t} = element.setting;\n\n\tconst patternsAndSchemas = Object.entries(\n\t\tobjectPatternProperties ?? {},\n\t).map(([pattern, schema]) => ({\n\t\tpattern: new RegExp(pattern),\n\t\tschema,\n\t}));\n\n\treturn (key: string) => {\n\t\tlet suggestedSchema: IJSONSchema | undefined;\n\n\t\tif (isDefined(objectProperties) && key in objectProperties) {\n\t\t\tsuggestedSchema = objectProperties[key];\n\t\t}\n\n\t\tconst patternSchema =\n\t\t\tsuggestedSchema ??\n\t\t\tpatternsAndSchemas.find(({ pattern }) => pattern.test(key))?.schema;\n\n\t\tif (isDefined(patternSchema)) {\n\t\t\tsuggestedSchema = patternSchema;\n\t\t} else if (\n\t\t\tisDefined(objectAdditionalProperties) &&\n\t\t\ttypeof objectAdditionalProperties === \"object\"\n\t\t) {\n\t\t\tsuggestedSchema = objectAdditionalProperties;\n\t\t}\n\n\t\tif (isDefined(suggestedSchema)) {\n\t\t\tconst type = getObjectValueType(suggestedSchema);\n\n\t\t\tif (type === \"boolean\") {\n\t\t\t\treturn { type, data: suggestedSchema.default ?? true };\n\t\t\t} else if (type === \"enum\") {\n\t\t\t\tconst options = getEnumOptionsFromSchema(suggestedSchema);\n\t\t\t\treturn {\n\t\t\t\t\ttype,\n\t\t\t\t\tdata: suggestedSchema.default ?? options[0].value,\n\t\t\t\t\toptions,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn { type, data: suggestedSchema.default ?? \"\" };\n\t\t\t}\n\t\t}\n\n\t\treturn;\n\t};\n}\n\nfunction isNonNullableNumericType(type: unknown): type is \"number\" | \"integer\" {\n\treturn type === \"number\" || type === \"integer\";\n}\n\nfunction parseNumericObjectValues(\n\tdataElement: SettingsTreeSettingElement,\n\tv: Record<string, unknown>,\n): Record<string, unknown> {\n\tconst newRecord: Record<string, unknown> = {};\n\tfor (const key in v) {\n\t\t// Set to true/false once we're sure of the answer\n\t\tlet keyMatchesNumericProperty: boolean | undefined;\n\t\tconst patternProperties = dataElement.setting.objectPatternProperties;\n\t\tconst properties = dataElement.setting.objectProperties;\n\t\tconst additionalProperties =\n\t\t\tdataElement.setting.objectAdditionalProperties;\n\n\t\t// Match the current record key against the properties of the object\n\t\tif (properties) {\n\t\t\tfor (const propKey in properties) {\n\t\t\t\tif (propKey === key) {\n\t\t\t\t\tkeyMatchesNumericProperty = isNonNullableNumericType(\n\t\t\t\t\t\tproperties[propKey].type,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (keyMatchesNumericProperty === undefined && patternProperties) {\n\t\t\tfor (const patternKey in patternProperties) {\n\t\t\t\tif (key.match(patternKey)) {\n\t\t\t\t\tkeyMatchesNumericProperty = isNonNullableNumericType(\n\t\t\t\t\t\tpatternProperties[patternKey].type,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\tkeyMatchesNumericProperty === undefined &&\n\t\t\tadditionalProperties &&\n\t\t\ttypeof additionalProperties !== \"boolean\"\n\t\t) {\n\t\t\tif (isNonNullableNumericType(additionalProperties.type)) {\n\t\t\t\tkeyMatchesNumericProperty = true;\n\t\t\t}\n\t\t}\n\t\tnewRecord[key] = keyMatchesNumericProperty ? Number(v[key]) : v[key];\n\t}\n\treturn newRecord;\n}\n\nfunction getListDisplayValue(\n\telement: SettingsTreeSettingElement,\n): IListDataItem[] {\n\tif (!element.value || !Array.isArray(element.value)) {\n\t\treturn [];\n\t}\n\n\tif (element.setting.arrayItemType === \"enum\") {\n\t\tlet enumOptions: IObjectEnumOption[] = [];\n\t\tif (element.setting.enum) {\n\t\t\tenumOptions = element.setting.enum.map((setting, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tvalue: setting,\n\t\t\t\t\tdescription: element.setting.enumDescriptions?.[i],\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\treturn element.value.map((key: string) => {\n\t\t\treturn {\n\t\t\t\tvalue: {\n\t\t\t\t\ttype: \"enum\",\n\t\t\t\t\tdata: key,\n\t\t\t\t\toptions: enumOptions,\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\t} else {\n\t\treturn element.value.map((key: string) => {\n\t\t\treturn {\n\t\t\t\tvalue: {\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t\tdata: key,\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\t}\n}\n\nfunction getShowAddButtonList(\n\tdataElement: SettingsTreeSettingElement,\n\tlistDisplayValue: IListDataItem[],\n): boolean {\n\tif (dataElement.setting.enum && dataElement.setting.uniqueItems) {\n\t\treturn dataElement.setting.enum.length - listDisplayValue.length > 0;\n\t} else {\n\t\treturn true;\n\t}\n}\n\nexport function resolveSettingsTree(\n\ttocData: ITOCEntry<string>,\n\tcoreSettingsGroups: ISettingsGroup[],\n\tlogService: ILogService,\n): { tree: ITOCEntry<ISetting>; leftoverSettings: Set<ISetting> } {\n\tconst allSettings = getFlatSettings(coreSettingsGroups);\n\treturn {\n\t\ttree: _resolveSettingsTree(tocData, allSettings, logService),\n\t\tleftoverSettings: allSettings,\n\t};\n}\n\nexport function resolveConfiguredUntrustedSettings(\n\tgroups: ISettingsGroup[],\n\ttarget: SettingsTarget,\n\tlanguageFilter: string | undefined,\n\tconfigurationService: IWorkbenchConfigurationService,\n): ISetting[] {\n\tconst allSettings = getFlatSettings(groups);\n\treturn [...allSettings].filter(\n\t\t(setting) =>\n\t\t\tsetting.restricted &&\n\t\t\tinspectSetting(\n\t\t\t\tsetting.key,\n\t\t\t\ttarget,\n\t\t\t\tlanguageFilter,\n\t\t\t\tconfigurationService,\n\t\t\t).isConfigured,\n\t);\n}\n\nexport async function createTocTreeForExtensionSettings(\n\textensionService: IExtensionService,\n\tgroups: ISettingsGroup[],\n): Promise<ITOCEntry<ISetting>> {\n\tconst extGroupTree = new Map<string, ITOCEntry<ISetting>>();\n\tconst addEntryToTree = (\n\t\textensionId: string,\n\t\textensionName: string,\n\t\tchildEntry: ITOCEntry<ISetting>,\n\t) => {\n\t\tif (!extGroupTree.has(extensionId)) {\n\t\t\tconst rootEntry = {\n\t\t\t\tid: extensionId,\n\t\t\t\tlabel: extensionName,\n\t\t\t\tchildren: [],\n\t\t\t};\n\t\t\textGroupTree.set(extensionId, rootEntry);\n\t\t}\n\t\textGroupTree.get(extensionId)!.children!.push(childEntry);\n\t};\n\tconst processGroupEntry = async (group: ISettingsGroup) => {\n\t\tconst flatSettings = group.sections.flatMap(\n\t\t\t(section) => section.settings,\n\t\t);\n\n\t\tconst extensionId = group.extensionInfo!.id;\n\t\tconst extension = await extensionService.getExtension(extensionId);\n\t\tconst extensionName =\n\t\t\textension?.displayName ?? extension?.name ?? extensionId;\n\n\t\t// Each group represents a single category of settings.\n\t\t// If the extension author forgets to specify an id for the group,\n\t\t// fall back to the title given to the group.\n\t\tconst childEntry: ITOCEntry<ISetting> = {\n\t\t\tid: group.id || group.title,\n\t\t\tlabel: group.title,\n\t\t\torder: group.order,\n\t\t\tsettings: flatSettings,\n\t\t};\n\t\taddEntryToTree(extensionId, extensionName, childEntry);\n\t};\n\n\tconst processPromises = groups.map((g) => processGroupEntry(g));\n\treturn Promise.all(processPromises).then(() => {\n\t\tconst extGroups: ITOCEntry<ISetting>[] = [];\n\t\tfor (const extensionRootEntry of extGroupTree.values()) {\n\t\t\tfor (const child of extensionRootEntry.children!) {\n\t\t\t\t// Sort the individual settings of the child by order.\n\t\t\t\t// Leave the undefined order settings untouched.\n\t\t\t\tchild.settings?.sort((a, b) => {\n\t\t\t\t\treturn compareTwoNullableNumbers(a.order, b.order);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (extensionRootEntry.children!.length === 1) {\n\t\t\t\t// There is a single category for this extension.\n\t\t\t\t// Push a flattened setting.\n\t\t\t\textGroups.push({\n\t\t\t\t\tid: extensionRootEntry.id,\n\t\t\t\t\tlabel: extensionRootEntry.children![0].label,\n\t\t\t\t\tsettings: extensionRootEntry.children![0].settings,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Sort the categories.\n\t\t\t\t// Leave the undefined order categories untouched.\n\t\t\t\textensionRootEntry.children!.sort((a, b) => {\n\t\t\t\t\treturn compareTwoNullableNumbers(a.order, b.order);\n\t\t\t\t});\n\n\t\t\t\t// If there is a category that matches the setting name,\n\t\t\t\t// add the settings in manually as \"ungrouped\" settings.\n\t\t\t\t// https://github.com/microsoft/vscode/issues/137259\n\t\t\t\tconst ungroupedChild = extensionRootEntry.children!.find(\n\t\t\t\t\t(child) => child.label === extensionRootEntry.label,\n\t\t\t\t);\n\t\t\t\tif (ungroupedChild && !ungroupedChild.children) {\n\t\t\t\t\tconst groupedChildren = extensionRootEntry.children!.filter(\n\t\t\t\t\t\t(child) => child !== ungroupedChild,\n\t\t\t\t\t);\n\t\t\t\t\textGroups.push({\n\t\t\t\t\t\tid: extensionRootEntry.id,\n\t\t\t\t\t\tlabel: extensionRootEntry.label,\n\t\t\t\t\t\tsettings: ungroupedChild.settings,\n\t\t\t\t\t\tchildren: groupedChildren,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// Push all the groups as-is.\n\t\t\t\t\textGroups.push(extensionRootEntry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Sort the outermost settings.\n\t\textGroups.sort((a, b) => a.label.localeCompare(b.label));\n\n\t\treturn {\n\t\t\tid: \"extensions\",\n\t\t\tlabel: localize(\"extensions\", \"Extensions\"),\n\t\t\tchildren: extGroups,\n\t\t};\n\t});\n}\n\nfunction _resolveSettingsTree(\n\ttocData: ITOCEntry<string>,\n\tallSettings: Set<ISetting>,\n\tlogService: ILogService,\n): ITOCEntry<ISetting> {\n\tlet children: ITOCEntry<ISetting>[] | undefined;\n\tif (tocData.children) {\n\t\tchildren = tocData.children\n\t\t\t.map((child) =>\n\t\t\t\t_resolveSettingsTree(child, allSettings, logService),\n\t\t\t)\n\t\t\t.filter(\n\t\t\t\t(child) => child.children?.length || child.settings?.length,\n\t\t\t);\n\t}\n\n\tlet settings: ISetting[] | undefined;\n\tif (tocData.settings) {\n\t\tsettings = tocData.settings.flatMap((pattern) =>\n\t\t\tgetMatchingSettings(allSettings, pattern, logService),\n\t\t);\n\t}\n\n\tif (!children && !settings) {\n\t\tthrow new Error(\n\t\t\t`TOC node has no child groups or settings: ${tocData.id}`,\n\t\t);\n\t}\n\n\treturn {\n\t\tid: tocData.id,\n\t\tlabel: tocData.label,\n\t\tchildren,\n\t\tsettings,\n\t};\n}\n\nconst knownDynamicSettingGroups = [\n\t/^settingsSync\\..*/,\n\t/^sync\\..*/,\n\t/^workbench.fontAliasing$/,\n];\n\nfunction getMatchingSettings(\n\tallSettings: Set<ISetting>,\n\tpattern: string,\n\tlogService: ILogService,\n): ISetting[] {\n\tconst result: ISetting[] = [];\n\n\tallSettings.forEach((s) => {\n\t\tif (settingMatches(s, pattern)) {\n\t\t\tresult.push(s);\n\t\t\tallSettings.delete(s);\n\t\t}\n\t});\n\n\tif (\n\t\t!result.length &&\n\t\t!knownDynamicSettingGroups.some((r) => r.test(pattern))\n\t) {\n\t\tlogService.warn(\n\t\t\t`Settings pattern \"${pattern}\" doesn't match any settings`,\n\t\t);\n\t}\n\n\treturn result.sort((a, b) => a.key.localeCompare(b.key));\n}\n\nconst settingPatternCache = new Map<string, RegExp>();\n\nexport function createSettingMatchRegExp(pattern: string): RegExp {\n\tpattern = escapeRegExpCharacters(pattern).replace(/\\\\\\*/g, \".*\");\n\n\treturn new RegExp(`^${pattern}$`, \"i\");\n}\n\nfunction settingMatches(s: ISetting, pattern: string): boolean {\n\tlet regExp = settingPatternCache.get(pattern);\n\tif (!regExp) {\n\t\tregExp = createSettingMatchRegExp(pattern);\n\t\tsettingPatternCache.set(pattern, regExp);\n\t}\n\n\treturn regExp.test(s.key);\n}\n\nfunction getFlatSettings(settingsGroups: ISettingsGroup[]) {\n\tconst result: Set<ISetting> = new Set();\n\n\tfor (const group of settingsGroups) {\n\t\tfor (const section of group.sections) {\n\t\t\tfor (const s of section.settings) {\n\t\t\t\tif (!s.overrides || !s.overrides.length) {\n\t\t\t\t\tresult.add(s);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\ninterface IDisposableTemplate {\n\treadonly toDispose: DisposableStore;\n}\n\ninterface ISettingItemTemplate<T = any> extends IDisposableTemplate {\n\tonChange?: (value: T) => void;\n\n\tcontext?: SettingsTreeSettingElement;\n\tcontainerElement: HTMLElement;\n\tcategoryElement: HTMLElement;\n\tlabelElement: SimpleIconLabel;\n\tdescriptionElement: HTMLElement;\n\tcontrolElement: HTMLElement;\n\tdeprecationWarningElement: HTMLElement;\n\tindicatorsLabel: SettingsTreeIndicatorsLabel;\n\ttoolbar: ToolBar;\n\treadonly elementDisposables: DisposableStore;\n}\n\ninterface ISettingBoolItemTemplate extends ISettingItemTemplate<boolean> {\n\tcheckbox: Toggle;\n}\n\ninterface ISettingExtensionToggleItemTemplate\n\textends ISettingItemTemplate<undefined> {\n\tactionButton: Button;\n\tdismissButton: Button;\n}\n\ninterface ISettingTextItemTemplate extends ISettingItemTemplate<string> {\n\tinputBox: InputBox;\n\tvalidationErrorMessageElement: HTMLElement;\n}\n\ntype ISettingNumberItemTemplate = ISettingTextItemTemplate;\n\ninterface ISettingEnumItemTemplate extends ISettingItemTemplate<number> {\n\tselectBox: SelectBox;\n\tselectElement: HTMLSelectElement | null;\n\tenumDescriptionElement: HTMLElement;\n}\n\ninterface ISettingComplexItemTemplate extends ISettingItemTemplate<void> {\n\tbutton: HTMLElement;\n\tvalidationErrorMessageElement: HTMLElement;\n}\n\ninterface ISettingListItemTemplate\n\textends ISettingItemTemplate<string[] | undefined> {\n\tlistWidget: ListSettingWidget<IListDataItem>;\n\tvalidationErrorMessageElement: HTMLElement;\n}\n\ninterface ISettingIncludeExcludeItemTemplate\n\textends ISettingItemTemplate<void> {\n\tincludeExcludeWidget: ListSettingWidget<IIncludeExcludeDataItem>;\n}\n\ninterface ISettingObjectItemTemplate\n\textends ISettingItemTemplate<Record<string, unknown> | undefined> {\n\tobjectDropdownWidget?: ObjectSettingDropdownWidget;\n\tobjectCheckboxWidget?: ObjectSettingCheckboxWidget;\n\tvalidationErrorMessageElement: HTMLElement;\n}\n\ninterface ISettingNewExtensionsTemplate extends IDisposableTemplate {\n\tbutton: Button;\n\tcontext?: SettingsTreeNewExtensionsElement;\n}\n\ninterface IGroupTitleTemplate extends IDisposableTemplate {\n\tcontext?: SettingsTreeGroupElement;\n\tparent: HTMLElement;\n}\n\nconst SETTINGS_TEXT_TEMPLATE_ID = \"settings.text.template\";\nconst SETTINGS_MULTILINE_TEXT_TEMPLATE_ID = \"settings.multilineText.template\";\nconst SETTINGS_NUMBER_TEMPLATE_ID = \"settings.number.template\";\nconst SETTINGS_ENUM_TEMPLATE_ID = \"settings.enum.template\";\nconst SETTINGS_BOOL_TEMPLATE_ID = \"settings.bool.template\";\nconst SETTINGS_ARRAY_TEMPLATE_ID = \"settings.array.template\";\nconst SETTINGS_EXCLUDE_TEMPLATE_ID = \"settings.exclude.template\";\nconst SETTINGS_INCLUDE_TEMPLATE_ID = \"settings.include.template\";\nconst SETTINGS_OBJECT_TEMPLATE_ID = \"settings.object.template\";\nconst SETTINGS_BOOL_OBJECT_TEMPLATE_ID = \"settings.boolObject.template\";\nconst SETTINGS_COMPLEX_TEMPLATE_ID = \"settings.complex.template\";\nconst SETTINGS_NEW_EXTENSIONS_TEMPLATE_ID = \"settings.newExtensions.template\";\nconst SETTINGS_ELEMENT_TEMPLATE_ID = \"settings.group.template\";\nconst SETTINGS_EXTENSION_TOGGLE_TEMPLATE_ID =\n\t\"settings.extensionToggle.template\";\n\nexport interface ISettingChangeEvent {\n\tkey: string;\n\tvalue: any; // undefined => reset/unconfigure\n\ttype: SettingValueType | SettingValueType[];\n\tmanualReset: boolean;\n\tscope: ConfigurationScope | undefined;\n}\n\nexport interface ISettingLinkClickEvent {\n\tsource: SettingsTreeSettingElement;\n\ttargetKey: string;\n}\n\nfunction removeChildrenFromTabOrder(node: Element): void {\n\tconst focusableElements = node.querySelectorAll(`\n\t\t[tabindex=\"0\"],\n\t\tinput:not([tabindex=\"-1\"]),\n\t\tselect:not([tabindex=\"-1\"]),\n\t\ttextarea:not([tabindex=\"-1\"]),\n\t\ta:not([tabindex=\"-1\"]),\n\t\tbutton:not([tabindex=\"-1\"]),\n\t\tarea:not([tabindex=\"-1\"])\n\t`);\n\n\tfocusableElements.forEach((element) => {\n\t\telement.setAttribute(\n\t\t\tAbstractSettingRenderer.ELEMENT_FOCUSABLE_ATTR,\n\t\t\t\"true\",\n\t\t);\n\t\telement.setAttribute(\"tabindex\", \"-1\");\n\t});\n}\n\nfunction addChildrenToTabOrder(node: Element): void {\n\tconst focusableElements = node.querySelectorAll(\n\t\t`[${AbstractSettingRenderer.ELEMENT_FOCUSABLE_ATTR}=\"true\"]`,\n\t);\n\n\tfocusableElements.forEach((element) => {\n\t\telement.removeAttribute(AbstractSettingRenderer.ELEMENT_FOCUSABLE_ATTR);\n\t\telement.setAttribute(\"tabindex\", \"0\");\n\t});\n}\n\nexport interface HeightChangeParams {\n\telement: SettingsTreeElement;\n\theight: number;\n}\n\nexport abstract class AbstractSettingRenderer\n\textends Disposable\n\timplements ITreeRenderer<SettingsTreeElement, never, any>\n{\n\t/** To override */\n\tabstract get templateId(): string;\n\n\tstatic readonly CONTROL_CLASS = \"setting-control-focus-target\";\n\tstatic readonly CONTROL_SELECTOR = \".\" + this.CONTROL_CLASS;\n\tstatic readonly CONTENTS_CLASS = \"setting-item-contents\";\n\tstatic readonly CONTENTS_SELECTOR = \".\" + this.CONTENTS_CLASS;\n\tstatic readonly ALL_ROWS_SELECTOR = \".monaco-list-row\";\n\n\tstatic readonly SETTING_KEY_ATTR = \"data-key\";\n\tstatic readonly SETTING_ID_ATTR = \"data-id\";\n\tstatic readonly ELEMENT_FOCUSABLE_ATTR = \"data-focusable\";\n\n\tprivate readonly _onDidClickOverrideElement = this._register(\n\t\tnew Emitter<ISettingOverrideClickEvent>(),\n\t);\n\treadonly onDidClickOverrideElement: Event<ISettingOverrideClickEvent> =\n\t\tthis._onDidClickOverrideElement.event;\n\n\tprotected readonly _onDidChangeSetting = this._register(\n\t\tnew Emitter<ISettingChangeEvent>(),\n\t);\n\treadonly onDidChangeSetting: Event<ISettingChangeEvent> =\n\t\tthis._onDidChangeSetting.event;\n\n\tprotected readonly _onDidOpenSettings = this._register(\n\t\tnew Emitter<string>(),\n\t);\n\treadonly onDidOpenSettings: Event<string> = this._onDidOpenSettings.event;\n\n\tprivate readonly _onDidClickSettingLink = this._register(\n\t\tnew Emitter<ISettingLinkClickEvent>(),\n\t);\n\treadonly onDidClickSettingLink: Event<ISettingLinkClickEvent> =\n\t\tthis._onDidClickSettingLink.event;\n\n\tprotected readonly _onDidFocusSetting = this._register(\n\t\tnew Emitter<SettingsTreeSettingElement>(),\n\t);\n\treadonly onDidFocusSetting: Event<SettingsTreeSettingElement> =\n\t\tthis._onDidFocusSetting.event;\n\n\tprivate ignoredSettings: string[];\n\tprivate readonly _onDidChangeIgnoredSettings = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onDidChangeIgnoredSettings: Event<void> =\n\t\tthis._onDidChangeIgnoredSettings.event;\n\n\tprotected readonly _onDidChangeSettingHeight = this._register(\n\t\tnew Emitter<HeightChangeParams>(),\n\t);\n\treadonly onDidChangeSettingHeight: Event<HeightChangeParams> =\n\t\tthis._onDidChangeSettingHeight.event;\n\n\tprotected readonly _onApplyFilter = this._register(new Emitter<string>());\n\treadonly onApplyFilter: Event<string> = this._onApplyFilter.event;\n\n\tprivate readonly markdownRenderer: MarkdownRenderer;\n\n\tconstructor(\n\t\tprivate readonly settingActions: IAction[],\n\t\tprivate readonly disposableActionFactory: (\n\t\t\tsetting: ISetting,\n\t\t\tsettingTarget: SettingsTarget,\n\t\t) => IAction[],\n\t\t@IThemeService protected readonly _themeService: IThemeService,\n\t\t@IContextViewService\n\t\tprotected readonly _contextViewService: IContextViewService,\n\t\t@IOpenerService protected readonly _openerService: IOpenerService,\n\t\t@IInstantiationService\n\t\tprotected readonly _instantiationService: IInstantiationService,\n\t\t@ICommandService protected readonly _commandService: ICommandService,\n\t\t@IContextMenuService\n\t\tprotected readonly _contextMenuService: IContextMenuService,\n\t\t@IKeybindingService\n\t\tprotected readonly _keybindingService: IKeybindingService,\n\t\t@IConfigurationService\n\t\tprotected readonly _configService: IConfigurationService,\n\t\t@IExtensionService\n\t\tprotected readonly _extensionsService: IExtensionService,\n\t\t@IExtensionsWorkbenchService\n\t\tprotected readonly _extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IProductService protected readonly _productService: IProductService,\n\t\t@ITelemetryService\n\t\tprotected readonly _telemetryService: ITelemetryService,\n\t\t@IHoverService protected readonly _hoverService: IHoverService,\n\t) {\n\t\tsuper();\n\n\t\tthis.markdownRenderer = this._register(\n\t\t\t_instantiationService.createInstance(MarkdownRenderer, {}),\n\t\t);\n\n\t\tthis.ignoredSettings = getIgnoredSettings(\n\t\t\tgetDefaultIgnoredSettings(),\n\t\t\tthis._configService,\n\t\t);\n\t\tthis._register(\n\t\t\tthis._configService.onDidChangeConfiguration((e) => {\n\t\t\t\tthis.ignoredSettings = getIgnoredSettings(\n\t\t\t\t\tgetDefaultIgnoredSettings(),\n\t\t\t\t\tthis._configService,\n\t\t\t\t);\n\t\t\t\tthis._onDidChangeIgnoredSettings.fire();\n\t\t\t}),\n\t\t);\n\t}\n\n\tabstract renderTemplate(container: HTMLElement): any;\n\n\tabstract renderElement(\n\t\telement: ITreeNode<SettingsTreeSettingElement, never>,\n\t\tindex: number,\n\t\ttemplateData: any,\n\t): void;\n\n\tprotected renderCommonTemplate(\n\t\ttree: any,\n\t\t_container: HTMLElement,\n\t\ttypeClass: string,\n\t): ISettingItemTemplate {\n\t\t_container.classList.add(\"setting-item\");\n\t\t_container.classList.add(\"setting-item-\" + typeClass);\n\n\t\tconst toDispose = new DisposableStore();\n\n\t\tconst container = DOM.append(\n\t\t\t_container,\n\t\t\t$(AbstractSettingRenderer.CONTENTS_SELECTOR),\n\t\t);\n\t\tcontainer.classList.add(\"settings-row-inner-container\");\n\t\tconst titleElement = DOM.append(container, $(\".setting-item-title\"));\n\t\tconst labelCategoryContainer = DOM.append(\n\t\t\ttitleElement,\n\t\t\t$(\".setting-item-cat-label-container\"),\n\t\t);\n\t\tconst categoryElement = DOM.append(\n\t\t\tlabelCategoryContainer,\n\t\t\t$(\"span.setting-item-category\"),\n\t\t);\n\t\tconst labelElementContainer = DOM.append(\n\t\t\tlabelCategoryContainer,\n\t\t\t$(\"span.setting-item-label\"),\n\t\t);\n\t\tconst labelElement = toDispose.add(\n\t\t\tnew SimpleIconLabel(labelElementContainer),\n\t\t);\n\t\tconst indicatorsLabel = this._instantiationService.createInstance(\n\t\t\tSettingsTreeIndicatorsLabel,\n\t\t\ttitleElement,\n\t\t);\n\t\ttoDispose.add(indicatorsLabel);\n\n\t\tconst descriptionElement = DOM.append(\n\t\t\tcontainer,\n\t\t\t$(\".setting-item-description\"),\n\t\t);\n\t\tconst modifiedIndicatorElement = DOM.append(\n\t\t\tcontainer,\n\t\t\t$(\".setting-item-modified-indicator\"),\n\t\t);\n\t\ttoDispose.add(\n\t\t\tthis._hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\tmodifiedIndicatorElement,\n\t\t\t\t() =>\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"modified\",\n\t\t\t\t\t\t\"The setting has been configured in the current scope.\",\n\t\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\tconst valueElement = DOM.append(container, $(\".setting-item-value\"));\n\t\tconst controlElement = DOM.append(\n\t\t\tvalueElement,\n\t\t\t$(\"div.setting-item-control\"),\n\t\t);\n\n\t\tconst deprecationWarningElement = DOM.append(\n\t\t\tcontainer,\n\t\t\t$(\".setting-item-deprecation-message\"),\n\t\t);\n\n\t\tconst toolbarContainer = DOM.append(\n\t\t\tcontainer,\n\t\t\t$(\".setting-toolbar-container\"),\n\t\t);\n\t\tconst toolbar = this.renderSettingToolbar(toolbarContainer);\n\n\t\tconst template: ISettingItemTemplate = {\n\t\t\ttoDispose,\n\t\t\telementDisposables: toDispose.add(new DisposableStore()),\n\n\t\t\tcontainerElement: container,\n\t\t\tcategoryElement,\n\t\t\tlabelElement,\n\t\t\tdescriptionElement,\n\t\t\tcontrolElement,\n\t\t\tdeprecationWarningElement,\n\t\t\tindicatorsLabel,\n\t\t\ttoolbar,\n\t\t};\n\n\t\t// Prevent clicks from being handled by list\n\t\ttoDispose.add(\n\t\t\tDOM.addDisposableListener(\n\t\t\t\tcontrolElement,\n\t\t\t\tDOM.EventType.MOUSE_DOWN,\n\t\t\t\t(e) => e.stopPropagation(),\n\t\t\t),\n\t\t);\n\n\t\ttoDispose.add(\n\t\t\tDOM.addDisposableListener(\n\t\t\t\ttitleElement,\n\t\t\t\tDOM.EventType.MOUSE_ENTER,\n\t\t\t\t(e) => container.classList.add(\"mouseover\"),\n\t\t\t),\n\t\t);\n\t\ttoDispose.add(\n\t\t\tDOM.addDisposableListener(\n\t\t\t\ttitleElement,\n\t\t\t\tDOM.EventType.MOUSE_LEAVE,\n\t\t\t\t(e) => container.classList.remove(\"mouseover\"),\n\t\t\t),\n\t\t);\n\n\t\treturn template;\n\t}\n\n\tprotected addSettingElementFocusHandler(\n\t\ttemplate: ISettingItemTemplate,\n\t): void {\n\t\tconst focusTracker = DOM.trackFocus(template.containerElement);\n\t\ttemplate.toDispose.add(focusTracker);\n\t\tfocusTracker.onDidBlur(() => {\n\t\t\tif (template.containerElement.classList.contains(\"focused\")) {\n\t\t\t\ttemplate.containerElement.classList.remove(\"focused\");\n\t\t\t}\n\t\t});\n\n\t\tfocusTracker.onDidFocus(() => {\n\t\t\ttemplate.containerElement.classList.add(\"focused\");\n\n\t\t\tif (template.context) {\n\t\t\t\tthis._onDidFocusSetting.fire(template.context);\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected renderSettingToolbar(container: HTMLElement): ToolBar {\n\t\tconst toggleMenuKeybinding = this._keybindingService.lookupKeybinding(\n\t\t\tSETTINGS_EDITOR_COMMAND_SHOW_CONTEXT_MENU,\n\t\t);\n\t\tlet toggleMenuTitle = localize(\n\t\t\t\"settingsContextMenuTitle\",\n\t\t\t\"More Actions... \",\n\t\t);\n\t\tif (toggleMenuKeybinding) {\n\t\t\ttoggleMenuTitle += ` (${toggleMenuKeybinding && toggleMenuKeybinding.getLabel()})`;\n\t\t}\n\n\t\tconst toolbar = new ToolBar(container, this._contextMenuService, {\n\t\t\ttoggleMenuTitle,\n\t\t\trenderDropdownAsChildElement: !isIOS,\n\t\t\tmoreIcon: settingsMoreActionIcon,\n\t\t});\n\t\treturn toolbar;\n\t}\n\n\tprotected renderSettingElement(\n\t\tnode: ITreeNode<SettingsTreeSettingElement, never>,\n\t\tindex: number,\n\t\ttemplate: ISettingItemTemplate | ISettingBoolItemTemplate,\n\t): void {\n\t\tconst element = node.element;\n\n\t\t// The element must inspect itself to get information for\n\t\t// the modified indicator and the overridden Settings indicators.\n\t\telement.inspectSelf();\n\n\t\ttemplate.context = element;\n\t\ttemplate.toolbar.context = element;\n\t\tconst actions = this.disposableActionFactory(\n\t\t\telement.setting,\n\t\t\telement.settingsTarget,\n\t\t);\n\t\tactions.forEach(\n\t\t\t(a) => isDisposable(a) && template.elementDisposables.add(a),\n\t\t);\n\t\ttemplate.toolbar.setActions([], [...this.settingActions, ...actions]);\n\n\t\tconst setting = element.setting;\n\n\t\ttemplate.containerElement.classList.toggle(\n\t\t\t\"is-configured\",\n\t\t\telement.isConfigured,\n\t\t);\n\t\ttemplate.containerElement.setAttribute(\n\t\t\tAbstractSettingRenderer.SETTING_KEY_ATTR,\n\t\t\telement.setting.key,\n\t\t);\n\t\ttemplate.containerElement.setAttribute(\n\t\t\tAbstractSettingRenderer.SETTING_ID_ATTR,\n\t\t\telement.id,\n\t\t);\n\n\t\tconst titleTooltip =\n\t\t\tsetting.key + (element.isConfigured ? \" - Modified\" : \"\");\n\t\ttemplate.categoryElement.textContent = element.displayCategory\n\t\t\t? element.displayCategory + \": \"\n\t\t\t: \"\";\n\t\ttemplate.elementDisposables.add(\n\t\t\tthis._hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\ttemplate.categoryElement,\n\t\t\t\ttitleTooltip,\n\t\t\t),\n\t\t);\n\n\t\ttemplate.labelElement.text = element.displayLabel;\n\t\ttemplate.labelElement.title = titleTooltip;\n\n\t\ttemplate.descriptionElement.innerText = \"\";\n\t\tif (element.setting.descriptionIsMarkdown) {\n\t\t\tconst renderedDescription = this.renderSettingMarkdown(\n\t\t\t\telement,\n\t\t\t\ttemplate.containerElement,\n\t\t\t\telement.description,\n\t\t\t\ttemplate.elementDisposables,\n\t\t\t);\n\t\t\ttemplate.descriptionElement.appendChild(renderedDescription);\n\t\t} else {\n\t\t\ttemplate.descriptionElement.innerText = element.description;\n\t\t}\n\n\t\ttemplate.indicatorsLabel.updateScopeOverrides(\n\t\t\telement,\n\t\t\tthis._onDidClickOverrideElement,\n\t\t\tthis._onApplyFilter,\n\t\t);\n\t\ttemplate.elementDisposables.add(\n\t\t\tthis._configService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (e.affectsConfiguration(APPLY_ALL_PROFILES_SETTING)) {\n\t\t\t\t\ttemplate.indicatorsLabel.updateScopeOverrides(\n\t\t\t\t\t\telement,\n\t\t\t\t\t\tthis._onDidClickOverrideElement,\n\t\t\t\t\t\tthis._onApplyFilter,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tconst onChange = (value: any) =>\n\t\t\tthis._onDidChangeSetting.fire({\n\t\t\t\tkey: element.setting.key,\n\t\t\t\tvalue,\n\t\t\t\ttype: template.context!.valueType,\n\t\t\t\tmanualReset: false,\n\t\t\t\tscope: element.setting.scope,\n\t\t\t});\n\t\tconst deprecationText = element.setting.deprecationMessage || \"\";\n\t\tif (deprecationText && element.setting.deprecationMessageIsMarkdown) {\n\t\t\ttemplate.deprecationWarningElement.innerText = \"\";\n\t\t\ttemplate.deprecationWarningElement.appendChild(\n\t\t\t\tthis.renderSettingMarkdown(\n\t\t\t\t\telement,\n\t\t\t\t\ttemplate.containerElement,\n\t\t\t\t\telement.setting.deprecationMessage!,\n\t\t\t\t\ttemplate.elementDisposables,\n\t\t\t\t),\n\t\t\t);\n\t\t} else {\n\t\t\ttemplate.deprecationWarningElement.innerText = deprecationText;\n\t\t}\n\t\ttemplate.deprecationWarningElement.prepend($(\".codicon.codicon-error\"));\n\t\ttemplate.containerElement.classList.toggle(\n\t\t\t\"is-deprecated\",\n\t\t\t!!deprecationText,\n\t\t);\n\n\t\tthis.renderValue(element, <ISettingItemTemplate>template, onChange);\n\n\t\ttemplate.indicatorsLabel.updateWorkspaceTrust(element);\n\t\ttemplate.indicatorsLabel.updateSyncIgnored(\n\t\t\telement,\n\t\t\tthis.ignoredSettings,\n\t\t);\n\t\ttemplate.indicatorsLabel.updateDefaultOverrideIndicator(element);\n\t\ttemplate.elementDisposables.add(\n\t\t\tthis.onDidChangeIgnoredSettings(() => {\n\t\t\t\ttemplate.indicatorsLabel.updateSyncIgnored(\n\t\t\t\t\telement,\n\t\t\t\t\tthis.ignoredSettings,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\tthis.updateSettingTabbable(element, template);\n\t\ttemplate.elementDisposables.add(\n\t\t\telement.onDidChangeTabbable(() => {\n\t\t\t\tthis.updateSettingTabbable(element, template);\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate updateSettingTabbable(\n\t\telement: SettingsTreeSettingElement,\n\t\ttemplate: ISettingItemTemplate | ISettingBoolItemTemplate,\n\t): void {\n\t\tif (element.tabbable) {\n\t\t\taddChildrenToTabOrder(template.containerElement);\n\t\t} else {\n\t\t\tremoveChildrenFromTabOrder(template.containerElement);\n\t\t}\n\t}\n\n\tprivate renderSettingMarkdown(\n\t\telement: SettingsTreeSettingElement,\n\t\tcontainer: HTMLElement,\n\t\ttext: string,\n\t\tdisposables: DisposableStore,\n\t): HTMLElement {\n\t\t// Rewrite `#editor.fontSize#` to link format\n\t\ttext = fixSettingLinks(text);\n\n\t\tconst renderedMarkdown = this.markdownRenderer.render(\n\t\t\t{ value: text, isTrusted: true },\n\t\t\t{\n\t\t\t\tactionHandler: {\n\t\t\t\t\tcallback: (content: string) => {\n\t\t\t\t\t\tif (content.startsWith(\"#\")) {\n\t\t\t\t\t\t\tconst e: ISettingLinkClickEvent = {\n\t\t\t\t\t\t\t\tsource: element,\n\t\t\t\t\t\t\t\ttargetKey: content.substring(1),\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tthis._onDidClickSettingLink.fire(e);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._openerService\n\t\t\t\t\t\t\t\t.open(content, { allowCommands: true })\n\t\t\t\t\t\t\t\t.catch(onUnexpectedError);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tdisposables,\n\t\t\t\t},\n\t\t\t\tasyncRenderCallback: () => {\n\t\t\t\t\tconst height = container.clientHeight;\n\t\t\t\t\tif (height) {\n\t\t\t\t\t\tthis._onDidChangeSettingHeight.fire({\n\t\t\t\t\t\t\telement,\n\t\t\t\t\t\t\theight,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t\tdisposables.add(renderedMarkdown);\n\n\t\trenderedMarkdown.element.classList.add(\"setting-item-markdown\");\n\t\tcleanRenderedMarkdown(renderedMarkdown.element);\n\t\treturn renderedMarkdown.element;\n\t}\n\n\tprotected abstract renderValue(\n\t\tdataElement: SettingsTreeSettingElement,\n\t\ttemplate: ISettingItemTemplate,\n\t\tonChange: (value: any) => void,\n\t): void;\n\n\tdisposeTemplate(template: IDisposableTemplate): void {\n\t\ttemplate.toDispose.dispose();\n\t}\n\n\tdisposeElement(\n\t\t_element: ITreeNode<SettingsTreeElement>,\n\t\t_index: number,\n\t\ttemplate: IDisposableTemplate,\n\t\t_height: number | undefined,\n\t): void {\n\t\t(template as ISettingItemTemplate).elementDisposables?.clear();\n\t}\n}\n\nclass SettingGroupRenderer\n\timplements\n\t\tITreeRenderer<SettingsTreeGroupElement, never, IGroupTitleTemplate>\n{\n\ttemplateId = SETTINGS_ELEMENT_TEMPLATE_ID;\n\n\trenderTemplate(container: HTMLElement): IGroupTitleTemplate {\n\t\tcontainer.classList.add(\"group-title\");\n\n\t\tconst template: IGroupTitleTemplate = {\n\t\t\tparent: container,\n\t\t\ttoDispose: new DisposableStore(),\n\t\t};\n\n\t\treturn template;\n\t}\n\n\trenderElement(\n\t\telement: ITreeNode<SettingsTreeGroupElement, never>,\n\t\tindex: number,\n\t\ttemplateData: IGroupTitleTemplate,\n\t): void {\n\t\ttemplateData.parent.innerText = \"\";\n\t\tconst labelElement = DOM.append(\n\t\t\ttemplateData.parent,\n\t\t\t$(\"div.settings-group-title-label.settings-row-inner-container\"),\n\t\t);\n\t\tlabelElement.classList.add(\n\t\t\t`settings-group-level-${element.element.level}`,\n\t\t);\n\t\tlabelElement.textContent = element.element.label;\n\n\t\tif (element.element.isFirstGroup) {\n\t\t\tlabelElement.classList.add(\"settings-group-first\");\n\t\t}\n\t}\n\n\tdisposeTemplate(templateData: IGroupTitleTemplate): void {}\n}\n\nexport class SettingNewExtensionsRenderer\n\timplements\n\t\tITreeRenderer<\n\t\t\tSettingsTreeNewExtensionsElement,\n\t\t\tnever,\n\t\t\tISettingNewExtensionsTemplate\n\t\t>\n{\n\ttemplateId = SETTINGS_NEW_EXTENSIONS_TEMPLATE_ID;\n\n\tconstructor(\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t) {}\n\n\trenderTemplate(container: HTMLElement): ISettingNewExtensionsTemplate {\n\t\tconst toDispose = new DisposableStore();\n\n\t\tcontainer.classList.add(\"setting-item-new-extensions\");\n\n\t\tconst button = new Button(container, {\n\t\t\ttitle: true,\n\t\t\t...defaultButtonStyles,\n\t\t});\n\t\ttoDispose.add(button);\n\t\ttoDispose.add(\n\t\t\tbutton.onDidClick(() => {\n\t\t\t\tif (template.context) {\n\t\t\t\t\tthis._commandService.executeCommand(\n\t\t\t\t\t\t\"workbench.extensions.action.showExtensionsWithIds\",\n\t\t\t\t\t\ttemplate.context.extensionIds,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tbutton.label = localize(\n\t\t\t\"newExtensionsButtonLabel\",\n\t\t\t\"Show matching extensions\",\n\t\t);\n\t\tbutton.element.classList.add(\"settings-new-extensions-button\");\n\n\t\tconst template: ISettingNewExtensionsTemplate = {\n\t\t\tbutton,\n\t\t\ttoDispose,\n\t\t};\n\n\t\treturn template;\n\t}\n\n\trenderElement(\n\t\telement: ITreeNode<SettingsTreeNewExtensionsElement, never>,\n\t\tindex: number,\n\t\ttemplateData: ISettingNewExtensionsTemplate,\n\t): void {\n\t\ttemplateData.context = element.element;\n\t}\n\n\tdisposeTemplate(template: IDisposableTemplate): void {\n\t\tdispose(template.toDispose);\n\t}\n}\n\nexport class SettingComplexRenderer\n\textends AbstractSettingRenderer\n\timplements\n\t\tITreeRenderer<\n\t\t\tSettingsTreeSettingElement,\n\t\t\tnever,\n\t\t\tISettingComplexItemTemplate\n\t\t>\n{\n\tprivate static readonly EDIT_IN_JSON_LABEL = localize(\n\t\t\"editInSettingsJson\",\n\t\t\"Edit in settings.json\",\n\t);\n\n\ttemplateId = SETTINGS_COMPLEX_TEMPLATE_ID;\n\n\trenderTemplate(container: HTMLElement): ISettingComplexItemTemplate {\n\t\tconst common = this.renderCommonTemplate(null, container, \"complex\");\n\n\t\tconst openSettingsButton = DOM.append(\n\t\t\tcommon.controlElement,\n\t\t\t$(\"a.edit-in-settings-button\"),\n\t\t);\n\t\topenSettingsButton.classList.add(AbstractSettingRenderer.CONTROL_CLASS);\n\t\topenSettingsButton.role = \"button\";\n\n\t\tconst validationErrorMessageElement = $(\n\t\t\t\".setting-item-validation-message\",\n\t\t);\n\t\tcommon.containerElement.appendChild(validationErrorMessageElement);\n\n\t\tconst template: ISettingComplexItemTemplate = {\n\t\t\t...common,\n\t\t\tbutton: openSettingsButton,\n\t\t\tvalidationErrorMessageElement,\n\t\t};\n\n\t\tthis.addSettingElementFocusHandler(template);\n\n\t\treturn template;\n\t}\n\n\trenderElement(\n\t\telement: ITreeNode<SettingsTreeSettingElement, never>,\n\t\tindex: number,\n\t\ttemplateData: ISettingComplexItemTemplate,\n\t): void {\n\t\tsuper.renderSettingElement(element, index, templateData);\n\t}\n\n\tprotected renderValue(\n\t\tdataElement: SettingsTreeSettingElement,\n\t\ttemplate: ISettingComplexItemTemplate,\n\t\tonChange: (value: string) => void,\n\t): void {\n\t\tconst plainKey = getLanguageTagSettingPlainKey(dataElement.setting.key);\n\t\tconst editLanguageSettingLabel = localize(\n\t\t\t\"editLanguageSettingLabel\",\n\t\t\t\"Edit settings for {0}\",\n\t\t\tplainKey,\n\t\t);\n\t\tconst isLanguageTagSetting = dataElement.setting.isLanguageTagSetting;\n\t\ttemplate.button.textContent = isLanguageTagSetting\n\t\t\t? editLanguageSettingLabel\n\t\t\t: SettingComplexRenderer.EDIT_IN_JSON_LABEL;\n\n\t\tconst onClickOrKeydown = (e: UIEvent) => {\n\t\t\tif (isLanguageTagSetting) {\n\t\t\t\tthis._onApplyFilter.fire(`@${LANGUAGE_SETTING_TAG}${plainKey}`);\n\t\t\t} else {\n\t\t\t\tthis._onDidOpenSettings.fire(dataElement.setting.key);\n\t\t\t}\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t};\n\t\ttemplate.elementDisposables.add(\n\t\t\tDOM.addDisposableListener(\n\t\t\t\ttemplate.button,\n\t\t\t\tDOM.EventType.CLICK,\n\t\t\t\t(e) => {\n\t\t\t\t\tonClickOrKeydown(e);\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\ttemplate.elementDisposables.add(\n\t\t\tDOM.addDisposableListener(\n\t\t\t\ttemplate.button,\n\t\t\t\tDOM.EventType.KEY_DOWN,\n\t\t\t\t(e) => {\n\t\t\t\t\tconst ev = new StandardKeyboardEvent(e);\n\t\t\t\t\tif (ev.equals(KeyCode.Space) || ev.equals(KeyCode.Enter)) {\n\t\t\t\t\t\tonClickOrKeydown(e);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis.renderValidations(dataElement, template);\n\n\t\tif (isLanguageTagSetting) {\n\t\t\ttemplate.button.setAttribute(\n\t\t\t\t\"aria-label\",\n\t\t\t\teditLanguageSettingLabel,\n\t\t\t);\n\t\t} else {\n\t\t\ttemplate.button.setAttribute(\n\t\t\t\t\"aria-label\",\n\t\t\t\t`${SettingComplexRenderer.EDIT_IN_JSON_LABEL}: ${dataElement.setting.key}`,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate renderValidations(\n\t\tdataElement: SettingsTreeSettingElement,\n\t\ttemplate: ISettingComplexItemTemplate,\n\t) {\n\t\tconst errMsg =\n\t\t\tdataElement.isConfigured &&\n\t\t\tgetInvalidTypeError(dataElement.value, dataElement.setting.type);\n\t\tif (errMsg) {\n\t\t\ttemplate.containerElement.classList.add(\"invalid-input\");\n\t\t\ttemplate.validationErrorMessageElement.innerText = errMsg;\n\t\t\treturn;\n\t\t}\n\n\t\ttemplate.containerElement.classList.remove(\"invalid-input\");\n\t}\n}\n\nclass SettingArrayRenderer\n\textends AbstractSettingRenderer\n\timplements\n\t\tITreeRenderer<\n\t\t\tSettingsTreeSettingElement,\n\t\t\tnever,\n\t\t\tISettingListItemTemplate\n\t\t>\n{\n\ttemplateId = SETTINGS_ARRAY_TEMPLATE_ID;\n\n\trenderTemplate(container: HTMLElement): ISettingListItemTemplate {\n\t\tconst common = this.renderCommonTemplate(null, container, \"list\");\n\t\tconst descriptionElement = common.containerElement.querySelector(\n\t\t\t\".setting-item-description\",\n\t\t)!;\n\t\tconst validationErrorMessageElement = $(\n\t\t\t\".setting-item-validation-message\",\n\t\t);\n\t\tdescriptionElement.after(validationErrorMessageElement);\n\n\t\tconst listWidget = this._instantiationService.createInstance(\n\t\t\tListSettingWidget,\n\t\t\tcommon.controlElement,\n\t\t);\n\t\tlistWidget.domNode.classList.add(AbstractSettingRenderer.CONTROL_CLASS);\n\t\tcommon.toDispose.add(listWidget);\n\n\t\tconst template: ISettingListItemTemplate = {\n\t\t\t...common,\n\t\t\tlistWidget,\n\t\t\tvalidationErrorMessageElement,\n\t\t};\n\n\t\tthis.addSettingElementFocusHandler(template);\n\n\t\tcommon.toDispose.add(\n\t\t\tlistWidget.onDidChangeList((e) => {\n\t\t\t\tconst newList = this.computeNewList(template, e);\n\t\t\t\ttemplate.onChange?.(newList);\n\t\t\t}),\n\t\t);\n\n\t\treturn template;\n\t}\n\n\tprivate computeNewList(\n\t\ttemplate: ISettingListItemTemplate,\n\t\te: SettingListEvent<IListDataItem>,\n\t): string[] | undefined {\n\t\tif (template.context) {\n\t\t\tlet newValue: string[] = [];\n\t\t\tif (Array.isArray(template.context.scopeValue)) {\n\t\t\t\tnewValue = [...template.context.scopeValue];\n\t\t\t} else if (Array.isArray(template.context.value)) {\n\t\t\t\tnewValue = [...template.context.value];\n\t\t\t}\n\n\t\t\tif (e.type === \"move\") {\n\t\t\t\t// A drag and drop occurred\n\t\t\t\tconst sourceIndex = e.sourceIndex;\n\t\t\t\tconst targetIndex = e.targetIndex;\n\t\t\t\tconst splicedElem = newValue.splice(sourceIndex, 1)[0];\n\t\t\t\tnewValue.splice(targetIndex, 0, splicedElem);\n\t\t\t} else if (e.type === \"remove\" || e.type === \"reset\") {\n\t\t\t\tnewValue.splice(e.targetIndex, 1);\n\t\t\t} else if (e.type === \"change\") {\n\t\t\t\tconst itemValueData = e.newItem.value.data.toString();\n\n\t\t\t\t// Update value\n\t\t\t\tif (e.targetIndex > -1) {\n\t\t\t\t\tnewValue[e.targetIndex] = itemValueData;\n\t\t\t\t}\n\t\t\t\t// For some reason, we are updating and cannot find original value\n\t\t\t\t// Just append the value in this case\n\t\t\t\telse {\n\t\t\t\t\tnewValue.push(itemValueData);\n\t\t\t\t}\n\t\t\t} else if (e.type === \"add\") {\n\t\t\t\tnewValue.push(e.newItem.value.data.toString());\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttemplate.context.defaultValue &&\n\t\t\t\tArray.isArray(template.context.defaultValue) &&\n\t\t\t\ttemplate.context.defaultValue.length === newValue.length &&\n\t\t\t\ttemplate.context.defaultValue.join() === newValue.join()\n\t\t\t) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn newValue;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\trenderElement(\n\t\telement: ITreeNode<SettingsTreeSettingElement, never>,\n\t\tindex: number,\n\t\ttemplateData: ISettingListItemTemplate,\n\t): void {\n\t\tsuper.renderSettingElement(element, index, templateData);\n\t}\n\n\tprotected renderValue(\n\t\tdataElement: SettingsTreeSettingElement,\n\t\ttemplate: ISettingListItemTemplate,\n\t\tonChange: (value: string[] | number[] | undefined) => void,\n\t): void {\n\t\tconst value = getListDisplayValue(dataElement);\n\t\tconst keySuggester = dataElement.setting.enum\n\t\t\t? createArraySuggester(dataElement)\n\t\t\t: undefined;\n\t\ttemplate.listWidget.setValue(value, {\n\t\t\tshowAddButton: getShowAddButtonList(dataElement, value),\n\t\t\tkeySuggester,\n\t\t});\n\t\ttemplate.context = dataElement;\n\n\t\ttemplate.elementDisposables.add(\n\t\t\ttoDisposable(() => {\n\t\t\t\ttemplate.listWidget.cancelEdit();\n\t\t\t}),\n\t\t);\n\n\t\ttemplate.onChange = (v: string[] | undefined) => {\n\t\t\tif (v && !renderArrayValidations(dataElement, template, v, false)) {\n\t\t\t\tconst itemType = dataElement.setting.arrayItemType;\n\t\t\t\tconst arrToSave = isNonNullableNumericType(itemType)\n\t\t\t\t\t? v.map((a) => +a)\n\t\t\t\t\t: v;\n\t\t\t\tonChange(arrToSave);\n\t\t\t} else {\n\t\t\t\t// Save the setting unparsed and containing the errors.\n\t\t\t\t// renderArrayValidations will render relevant error messages.\n\t\t\t\tonChange(v);\n\t\t\t}\n\t\t};\n\n\t\trenderArrayValidations(\n\t\t\tdataElement,\n\t\t\ttemplate,\n\t\t\tvalue.map((v) => v.value.data.toString()),\n\t\t\ttrue,\n\t\t);\n\t}\n}\n\nabstract class AbstractSettingObjectRenderer\n\textends AbstractSettingRenderer\n\timplements\n\t\tITreeRenderer<\n\t\t\tSettingsTreeSettingElement,\n\t\t\tnever,\n\t\t\tISettingObjectItemTemplate\n\t\t>\n{\n\tprotected renderTemplateWithWidget(\n\t\tcommon: ISettingItemTemplate,\n\t\twidget: ObjectSettingCheckboxWidget | ObjectSettingDropdownWidget,\n\t): ISettingObjectItemTemplate {\n\t\twidget.domNode.classList.add(AbstractSettingRenderer.CONTROL_CLASS);\n\t\tcommon.toDispose.add(widget);\n\n\t\tconst descriptionElement = common.containerElement.querySelector(\n\t\t\t\".setting-item-description\",\n\t\t)!;\n\t\tconst validationErrorMessageElement = $(\n\t\t\t\".setting-item-validation-message\",\n\t\t);\n\t\tdescriptionElement.after(validationErrorMessageElement);\n\n\t\tconst template: ISettingObjectItemTemplate = {\n\t\t\t...common,\n\t\t\tvalidationErrorMessageElement,\n\t\t};\n\t\tif (widget instanceof ObjectSettingCheckboxWidget) {\n\t\t\ttemplate.objectCheckboxWidget = widget;\n\t\t} else {\n\t\t\ttemplate.objectDropdownWidget = widget;\n\t\t}\n\n\t\tthis.addSettingElementFocusHandler(template);\n\t\treturn template;\n\t}\n\n\trenderElement(\n\t\telement: ITreeNode<SettingsTreeSettingElement, never>,\n\t\tindex: number,\n\t\ttemplateData: ISettingObjectItemTemplate,\n\t): void {\n\t\tsuper.renderSettingElement(element, index, templateData);\n\t}\n}\n\nclass SettingObjectRenderer\n\textends AbstractSettingObjectRenderer\n\timplements\n\t\tITreeRenderer<\n\t\t\tSettingsTreeSettingElement,\n\t\t\tnever,\n\t\t\tISettingObjectItemTemplate\n\t\t>\n{\n\toverride templateId = SETTINGS_OBJECT_TEMPLATE_ID;\n\n\trenderTemplate(container: HTMLElement): ISettingObjectItemTemplate {\n\t\tconst common = this.renderCommonTemplate(null, container, \"list\");\n\t\tconst widget = this._instantiationService.createInstance(\n\t\t\tObjectSettingDropdownWidget,\n\t\t\tcommon.controlElement,\n\t\t);\n\t\tconst template = this.renderTemplateWithWidget(common, widget);\n\t\tcommon.toDispose.add(\n\t\t\twidget.onDidChangeList((e) => {\n\t\t\t\tthis.onDidChangeObject(template, e);\n\t\t\t}),\n\t\t);\n\t\treturn template;\n\t}\n\n\tprivate onDidChangeObject(\n\t\ttemplate: ISettingObjectItemTemplate,\n\t\te: SettingListEvent<IObjectDataItem>,\n\t): void {\n\t\tconst widget = template.objectDropdownWidget!;\n\t\tif (template.context) {\n\t\t\tconst settingSupportsRemoveDefault =\n\t\t\t\tobjectSettingSupportsRemoveDefaultValue(\n\t\t\t\t\ttemplate.context.setting.key,\n\t\t\t\t);\n\t\t\tconst defaultValue: Record<string, unknown> =\n\t\t\t\ttypeof template.context.defaultValue === \"object\"\n\t\t\t\t\t? (template.context.defaultValue ?? {})\n\t\t\t\t\t: {};\n\n\t\t\tconst scopeValue: Record<string, unknown> =\n\t\t\t\ttypeof template.context.scopeValue === \"object\"\n\t\t\t\t\t? (template.context.scopeValue ?? {})\n\t\t\t\t\t: {};\n\n\t\t\tconst newValue: Record<string, unknown> = {\n\t\t\t\t...template.context.scopeValue,\n\t\t\t}; // Initialize with scoped values as removed default values are not rendered\n\t\t\tconst newItems: IObjectDataItem[] = [];\n\n\t\t\twidget.items.forEach((item, idx) => {\n\t\t\t\t// Item was updated\n\t\t\t\tif (\n\t\t\t\t\t(e.type === \"change\" || e.type === \"move\") &&\n\t\t\t\t\te.targetIndex === idx\n\t\t\t\t) {\n\t\t\t\t\t// If the key of the default value is changed, remove the default value\n\t\t\t\t\tif (\n\t\t\t\t\t\te.originalItem.key.data !== e.newItem.key.data &&\n\t\t\t\t\t\tsettingSupportsRemoveDefault &&\n\t\t\t\t\t\te.originalItem.key.data in defaultValue\n\t\t\t\t\t) {\n\t\t\t\t\t\tnewValue[e.originalItem.key.data] = null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelete newValue[e.originalItem.key.data];\n\t\t\t\t\t}\n\t\t\t\t\tnewValue[e.newItem.key.data] = e.newItem.value.data;\n\t\t\t\t\tnewItems.push(e.newItem);\n\t\t\t\t}\n\t\t\t\t// All remaining items, but skip the one that we just updated\n\t\t\t\telse if (\n\t\t\t\t\t(e.type !== \"change\" && e.type !== \"move\") ||\n\t\t\t\t\te.newItem.key.data !== item.key.data\n\t\t\t\t) {\n\t\t\t\t\tnewValue[item.key.data] = item.value.data;\n\t\t\t\t\tnewItems.push(item);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Item was deleted\n\t\t\tif (e.type === \"remove\" || e.type === \"reset\") {\n\t\t\t\tconst objectKey = e.originalItem.key.data;\n\t\t\t\tconst removingDefaultValue =\n\t\t\t\t\te.type === \"remove\" &&\n\t\t\t\t\tsettingSupportsRemoveDefault &&\n\t\t\t\t\tdefaultValue[objectKey] === e.originalItem.value.data;\n\t\t\t\tif (removingDefaultValue) {\n\t\t\t\t\tnewValue[objectKey] = null;\n\t\t\t\t} else {\n\t\t\t\t\tdelete newValue[objectKey];\n\t\t\t\t}\n\n\t\t\t\tconst itemToDelete = newItems.findIndex(\n\t\t\t\t\t(item) => item.key.data === objectKey,\n\t\t\t\t);\n\t\t\t\tconst defaultItemValue = defaultValue[objectKey] as\n\t\t\t\t\t| string\n\t\t\t\t\t| boolean;\n\n\t\t\t\t// Item does not have a default or default is bing removed\n\t\t\t\tif (\n\t\t\t\t\tremovingDefaultValue ||\n\t\t\t\t\t(isUndefinedOrNull(defaultValue[objectKey]) &&\n\t\t\t\t\t\titemToDelete > -1)\n\t\t\t\t) {\n\t\t\t\t\tnewItems.splice(itemToDelete, 1);\n\t\t\t\t} else if (!removingDefaultValue && itemToDelete > -1) {\n\t\t\t\t\tnewItems[itemToDelete].value.data = defaultItemValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// New item was added\n\t\t\telse if (e.type === \"add\") {\n\t\t\t\tnewValue[e.newItem.key.data] = e.newItem.value.data;\n\t\t\t\tnewItems.push(e.newItem);\n\t\t\t}\n\n\t\t\tObject.entries(newValue).forEach(([key, value]) => {\n\t\t\t\t// value from the scope has changed back to the default\n\t\t\t\tif (\n\t\t\t\t\tscopeValue[key] !== value &&\n\t\t\t\t\tdefaultValue[key] === value &&\n\t\t\t\t\t!(settingSupportsRemoveDefault && value === null)\n\t\t\t\t) {\n\t\t\t\t\tdelete newValue[key];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst newObject =\n\t\t\t\tObject.keys(newValue).length === 0 ? undefined : newValue;\n\t\t\ttemplate.objectDropdownWidget!.setValue(newItems);\n\t\t\ttemplate.onChange?.(newObject);\n\t\t}\n\t}\n\n\tprotected renderValue(\n\t\tdataElement: SettingsTreeSettingElement,\n\t\ttemplate: ISettingObjectItemTemplate,\n\t\tonChange: (value: Record<string, unknown> | undefined) => void,\n\t): void {\n\t\tconst items = getObjectDisplayValue(dataElement);\n\t\tconst {\n\t\t\tkey,\n\t\t\tobjectProperties,\n\t\t\tobjectPatternProperties,\n\t\t\tobjectAdditionalProperties,\n\t\t} = dataElement.setting;\n\n\t\ttemplate.objectDropdownWidget!.setValue(items, {\n\t\t\tsettingKey: key,\n\t\t\tshowAddButton:\n\t\t\t\tobjectAdditionalProperties === false\n\t\t\t\t\t? !areAllPropertiesDefined(\n\t\t\t\t\t\t\tObject.keys(objectProperties ?? {}),\n\t\t\t\t\t\t\titems,\n\t\t\t\t\t\t) || isDefined(objectPatternProperties)\n\t\t\t\t\t: true,\n\t\t\tkeySuggester: createObjectKeySuggester(dataElement),\n\t\t\tvalueSuggester: createObjectValueSuggester(dataElement),\n\t\t});\n\n\t\ttemplate.context = dataElement;\n\n\t\ttemplate.elementDisposables.add(\n\t\t\ttoDisposable(() => {\n\t\t\t\ttemplate.objectDropdownWidget!.cancelEdit();\n\t\t\t}),\n\t\t);\n\n\t\ttemplate.onChange = (v: Record<string, unknown> | undefined) => {\n\t\t\tif (v && !renderArrayValidations(dataElement, template, v, false)) {\n\t\t\t\tconst parsedRecord = parseNumericObjectValues(dataElement, v);\n\t\t\t\tonChange(parsedRecord);\n\t\t\t} else {\n\t\t\t\t// Save the setting unparsed and containing the errors.\n\t\t\t\t// renderArrayValidations will render relevant error messages.\n\t\t\t\tonChange(v);\n\t\t\t}\n\t\t};\n\t\trenderArrayValidations(dataElement, template, dataElement.value, true);\n\t}\n}\n\nclass SettingBoolObjectRenderer\n\textends AbstractSettingObjectRenderer\n\timplements\n\t\tITreeRenderer<\n\t\t\tSettingsTreeSettingElement,\n\t\t\tnever,\n\t\t\tISettingObjectItemTemplate\n\t\t>\n{\n\toverride templateId = SETTINGS_BOOL_OBJECT_TEMPLATE_ID;\n\n\trenderTemplate(container: HTMLElement): ISettingObjectItemTemplate {\n\t\tconst common = this.renderCommonTemplate(null, container, \"list\");\n\t\tconst widget = this._instantiationService.createInstance(\n\t\t\tObjectSettingCheckboxWidget,\n\t\t\tcommon.controlElement,\n\t\t);\n\t\tconst template = this.renderTemplateWithWidget(common, widget);\n\t\tcommon.toDispose.add(\n\t\t\twidget.onDidChangeList((e) => {\n\t\t\t\tthis.onDidChangeObject(template, e);\n\t\t\t}),\n\t\t);\n\t\treturn template;\n\t}\n\n\tprotected onDidChangeObject(\n\t\ttemplate: ISettingObjectItemTemplate,\n\t\te: SettingListEvent<IBoolObjectDataItem>,\n\t): void {\n\t\tif (template.context) {\n\t\t\tconst widget = template.objectCheckboxWidget!;\n\t\t\tconst defaultValue: Record<string, unknown> =\n\t\t\t\ttypeof template.context.defaultValue === \"object\"\n\t\t\t\t\t? (template.context.defaultValue ?? {})\n\t\t\t\t\t: {};\n\n\t\t\tconst scopeValue: Record<string, unknown> =\n\t\t\t\ttypeof template.context.scopeValue === \"object\"\n\t\t\t\t\t? (template.context.scopeValue ?? {})\n\t\t\t\t\t: {};\n\n\t\t\tconst newValue: Record<string, unknown> = {\n\t\t\t\t...template.context.scopeValue,\n\t\t\t}; // Initialize with scoped values as removed default values are not rendered\n\t\t\tconst newItems: IBoolObjectDataItem[] = [];\n\n\t\t\tif (e.type !== \"change\") {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t\"Unexpected event type\",\n\t\t\t\t\te.type,\n\t\t\t\t\t\"for bool object setting\",\n\t\t\t\t\ttemplate.context.setting.key,\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\twidget.items.forEach((item, idx) => {\n\t\t\t\t// Item was updated\n\t\t\t\tif (e.targetIndex === idx) {\n\t\t\t\t\tnewValue[e.newItem.key.data] = e.newItem.value.data;\n\t\t\t\t\tnewItems.push(e.newItem);\n\t\t\t\t}\n\t\t\t\t// All remaining items, but skip the one that we just updated\n\t\t\t\telse if (e.newItem.key.data !== item.key.data) {\n\t\t\t\t\tnewValue[item.key.data] = item.value.data;\n\t\t\t\t\tnewItems.push(item);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tObject.entries(newValue).forEach(([key, value]) => {\n\t\t\t\t// value from the scope has changed back to the default\n\t\t\t\tif (scopeValue[key] !== value && defaultValue[key] === value) {\n\t\t\t\t\tdelete newValue[key];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst newObject =\n\t\t\t\tObject.keys(newValue).length === 0 ? undefined : newValue;\n\t\t\ttemplate.objectCheckboxWidget!.setValue(newItems);\n\t\t\ttemplate.onChange?.(newObject);\n\n\t\t\t// Focus this setting explicitly, in case we were previously\n\t\t\t// focused on another setting and clicked a checkbox/value container\n\t\t\t// for this setting.\n\t\t\tthis._onDidFocusSetting.fire(template.context);\n\t\t}\n\t}\n\n\tprotected renderValue(\n\t\tdataElement: SettingsTreeSettingElement,\n\t\ttemplate: ISettingObjectItemTemplate,\n\t\tonChange: (value: Record<string, unknown> | undefined) => void,\n\t): void {\n\t\tconst items = getBoolObjectDisplayValue(dataElement);\n\t\tconst { key } = dataElement.setting;\n\n\t\ttemplate.objectCheckboxWidget!.setValue(items, {\n\t\t\tsettingKey: key,\n\t\t});\n\n\t\ttemplate.context = dataElement;\n\t\ttemplate.onChange = (v: Record<string, unknown> | undefined) => {\n\t\t\tonChange(v);\n\t\t};\n\t}\n}\n\nabstract class SettingIncludeExcludeRenderer\n\textends AbstractSettingRenderer\n\timplements\n\t\tITreeRenderer<\n\t\t\tSettingsTreeSettingElement,\n\t\t\tnever,\n\t\t\tISettingIncludeExcludeItemTemplate\n\t\t>\n{\n\tprotected abstract isExclude(): boolean;\n\n\trenderTemplate(container: HTMLElement): ISettingIncludeExcludeItemTemplate {\n\t\tconst common = this.renderCommonTemplate(null, container, \"list\");\n\n\t\tconst includeExcludeWidget = this._instantiationService.createInstance(\n\t\t\tthis.isExclude() ? ExcludeSettingWidget : IncludeSettingWidget,\n\t\t\tcommon.controlElement,\n\t\t);\n\t\tincludeExcludeWidget.domNode.classList.add(\n\t\t\tAbstractSettingRenderer.CONTROL_CLASS,\n\t\t);\n\t\tcommon.toDispose.add(includeExcludeWidget);\n\n\t\tconst template: ISettingIncludeExcludeItemTemplate = {\n\t\t\t...common,\n\t\t\tincludeExcludeWidget,\n\t\t};\n\n\t\tthis.addSettingElementFocusHandler(template);\n\n\t\tcommon.toDispose.add(\n\t\t\tincludeExcludeWidget.onDidChangeList((e) =>\n\t\t\t\tthis.onDidChangeIncludeExclude(template, e),\n\t\t\t),\n\t\t);\n\n\t\treturn template;\n\t}\n\n\tprivate onDidChangeIncludeExclude(\n\t\ttemplate: ISettingIncludeExcludeItemTemplate,\n\t\te: SettingListEvent<IListDataItem>,\n\t): void {\n\t\tif (template.context) {\n\t\t\tconst newValue = { ...template.context.scopeValue };\n\n\t\t\t// first delete the existing entry, if present\n\t\t\tif (e.type !== \"add\") {\n\t\t\t\tif (\n\t\t\t\t\te.originalItem.value.data.toString() in\n\t\t\t\t\ttemplate.context.defaultValue\n\t\t\t\t) {\n\t\t\t\t\t// delete a default by overriding it\n\t\t\t\t\tnewValue[e.originalItem.value.data.toString()] = false;\n\t\t\t\t} else {\n\t\t\t\t\tdelete newValue[e.originalItem.value.data.toString()];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// then add the new or updated entry, if present\n\t\t\tif (e.type === \"change\" || e.type === \"add\" || e.type === \"move\") {\n\t\t\t\tif (\n\t\t\t\t\te.newItem.value.data.toString() in\n\t\t\t\t\t\ttemplate.context.defaultValue &&\n\t\t\t\t\t!e.newItem.sibling\n\t\t\t\t) {\n\t\t\t\t\t// add a default by deleting its override\n\t\t\t\t\tdelete newValue[e.newItem.value.data.toString()];\n\t\t\t\t} else {\n\t\t\t\t\tnewValue[e.newItem.value.data.toString()] = e.newItem\n\t\t\t\t\t\t.sibling\n\t\t\t\t\t\t? { when: e.newItem.sibling }\n\t\t\t\t\t\t: true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction sortKeys<T extends object>(obj: T) {\n\t\t\t\tconst sortedKeys = Object.keys(obj).sort((a, b) =>\n\t\t\t\t\ta.localeCompare(b),\n\t\t\t\t) as Array<keyof T>;\n\n\t\t\t\tconst retVal: Partial<T> = {};\n\t\t\t\tfor (const key of sortedKeys) {\n\t\t\t\t\tretVal[key] = obj[key];\n\t\t\t\t}\n\t\t\t\treturn retVal;\n\t\t\t}\n\n\t\t\tthis._onDidChangeSetting.fire({\n\t\t\t\tkey: template.context.setting.key,\n\t\t\t\tvalue:\n\t\t\t\t\tObject.keys(newValue).length === 0\n\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t: sortKeys(newValue),\n\t\t\t\ttype: template.context.valueType,\n\t\t\t\tmanualReset: false,\n\t\t\t\tscope: template.context.setting.scope,\n\t\t\t});\n\t\t}\n\t}\n\n\trenderElement(\n\t\telement: ITreeNode<SettingsTreeSettingElement, never>,\n\t\tindex: number,\n\t\ttemplateData: ISettingIncludeExcludeItemTemplate,\n\t): void {\n\t\tsuper.renderSettingElement(element, index, templateData);\n\t}\n\n\tprotected renderValue(\n\t\tdataElement: SettingsTreeSettingElement,\n\t\ttemplate: ISettingIncludeExcludeItemTemplate,\n\t\tonChange: (value: string) => void,\n\t): void {\n\t\tconst value = getIncludeExcludeDisplayValue(dataElement);\n\t\ttemplate.includeExcludeWidget.setValue(value);\n\t\ttemplate.context = dataElement;\n\t\ttemplate.elementDisposables.add(\n\t\t\ttoDisposable(() => {\n\t\t\t\ttemplate.includeExcludeWidget.cancelEdit();\n\t\t\t}),\n\t\t);\n\t}\n}\n\nclass SettingExcludeRenderer extends SettingIncludeExcludeRenderer {\n\ttemplateId = SETTINGS_EXCLUDE_TEMPLATE_ID;\n\n\tprotected override isExclude(): boolean {\n\t\treturn true;\n\t}\n}\n\nclass SettingIncludeRenderer extends SettingIncludeExcludeRenderer {\n\ttemplateId = SETTINGS_INCLUDE_TEMPLATE_ID;\n\n\tprotected override isExclude(): boolean {\n\t\treturn false;\n\t}\n}\n\nconst settingsInputBoxStyles = getInputBoxStyle({\n\tinputBackground: settingsTextInputBackground,\n\tinputForeground: settingsTextInputForeground,\n\tinputBorder: settingsTextInputBorder,\n});\n\nabstract class AbstractSettingTextRenderer\n\textends AbstractSettingRenderer\n\timplements\n\t\tITreeRenderer<\n\t\t\tSettingsTreeSettingElement,\n\t\t\tnever,\n\t\t\tISettingTextItemTemplate\n\t\t>\n{\n\tprivate readonly MULTILINE_MAX_HEIGHT = 150;\n\n\trenderTemplate(\n\t\t_container: HTMLElement,\n\t\tuseMultiline?: boolean,\n\t): ISettingTextItemTemplate {\n\t\tconst common = this.renderCommonTemplate(null, _container, \"text\");\n\t\tconst validationErrorMessageElement = DOM.append(\n\t\t\tcommon.containerElement,\n\t\t\t$(\".setting-item-validation-message\"),\n\t\t);\n\n\t\tconst inputBoxOptions: IInputOptions = {\n\t\t\tflexibleHeight: useMultiline,\n\t\t\tflexibleWidth: false,\n\t\t\tflexibleMaxHeight: this.MULTILINE_MAX_HEIGHT,\n\t\t\tinputBoxStyles: settingsInputBoxStyles,\n\t\t};\n\t\tconst inputBox = new InputBox(\n\t\t\tcommon.controlElement,\n\t\t\tthis._contextViewService,\n\t\t\tinputBoxOptions,\n\t\t);\n\t\tcommon.toDispose.add(inputBox);\n\t\tcommon.toDispose.add(\n\t\t\tinputBox.onDidChange((e) => {\n\t\t\t\ttemplate.onChange?.(e);\n\t\t\t}),\n\t\t);\n\t\tcommon.toDispose.add(inputBox);\n\t\tinputBox.inputElement.classList.add(\n\t\t\tAbstractSettingRenderer.CONTROL_CLASS,\n\t\t);\n\t\tinputBox.inputElement.tabIndex = 0;\n\n\t\tconst template: ISettingTextItemTemplate = {\n\t\t\t...common,\n\t\t\tinputBox,\n\t\t\tvalidationErrorMessageElement,\n\t\t};\n\n\t\tthis.addSettingElementFocusHandler(template);\n\n\t\treturn template;\n\t}\n\n\trenderElement(\n\t\telement: ITreeNode<SettingsTreeSettingElement, never>,\n\t\tindex: number,\n\t\ttemplateData: ISettingTextItemTemplate,\n\t): void {\n\t\tsuper.renderSettingElement(element, index, templateData);\n\t}\n\n\tprotected renderValue(\n\t\tdataElement: SettingsTreeSettingElement,\n\t\ttemplate: ISettingTextItemTemplate,\n\t\tonChange: (value: string) => void,\n\t): void {\n\t\ttemplate.onChange = undefined;\n\t\ttemplate.inputBox.value = dataElement.value;\n\t\ttemplate.inputBox.setAriaLabel(dataElement.setting.key);\n\t\ttemplate.onChange = (value) => {\n\t\t\tif (!renderValidations(dataElement, template, false)) {\n\t\t\t\tonChange(value);\n\t\t\t}\n\t\t};\n\n\t\trenderValidations(dataElement, template, true);\n\t}\n}\n\nclass SettingTextRenderer\n\textends AbstractSettingTextRenderer\n\timplements\n\t\tITreeRenderer<\n\t\t\tSettingsTreeSettingElement,\n\t\t\tnever,\n\t\t\tISettingTextItemTemplate\n\t\t>\n{\n\ttemplateId = SETTINGS_TEXT_TEMPLATE_ID;\n\n\toverride renderTemplate(_container: HTMLElement): ISettingTextItemTemplate {\n\t\tconst template = super.renderTemplate(_container, false);\n\n\t\t// TODO@9at8: listWidget filters out all key events from input boxes, so we need to come up with a better way\n\t\t// Disable ArrowUp and ArrowDown behaviour in favor of list navigation\n\t\ttemplate.toDispose.add(\n\t\t\tDOM.addStandardDisposableListener(\n\t\t\t\ttemplate.inputBox.inputElement,\n\t\t\t\tDOM.EventType.KEY_DOWN,\n\t\t\t\t(e) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\te.equals(KeyCode.UpArrow) ||\n\t\t\t\t\t\te.equals(KeyCode.DownArrow)\n\t\t\t\t\t) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\treturn template;\n\t}\n}\n\nclass SettingMultilineTextRenderer\n\textends AbstractSettingTextRenderer\n\timplements\n\t\tITreeRenderer<\n\t\t\tSettingsTreeSettingElement,\n\t\t\tnever,\n\t\t\tISettingTextItemTemplate\n\t\t>\n{\n\ttemplateId = SETTINGS_MULTILINE_TEXT_TEMPLATE_ID;\n\n\toverride renderTemplate(_container: HTMLElement): ISettingTextItemTemplate {\n\t\treturn super.renderTemplate(_container, true);\n\t}\n\n\tprotected override renderValue(\n\t\tdataElement: SettingsTreeSettingElement,\n\t\ttemplate: ISettingTextItemTemplate,\n\t\tonChange: (value: string) => void,\n\t) {\n\t\tconst onChangeOverride = (value: string) => {\n\t\t\t// Ensure the model is up to date since a different value will be rendered as different height when probing the height.\n\t\t\tdataElement.value = value;\n\t\t\tonChange(value);\n\t\t};\n\t\tsuper.renderValue(dataElement, template, onChangeOverride);\n\t\ttemplate.elementDisposables.add(\n\t\t\ttemplate.inputBox.onDidHeightChange((e) => {\n\t\t\t\tconst height = template.containerElement.clientHeight;\n\t\t\t\t// Don't fire event if height is reported as 0,\n\t\t\t\t// which sometimes happens when clicking onto a new setting.\n\t\t\t\tif (height) {\n\t\t\t\t\tthis._onDidChangeSettingHeight.fire({\n\t\t\t\t\t\telement: dataElement,\n\t\t\t\t\t\theight: template.containerElement.clientHeight,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\ttemplate.inputBox.layout();\n\t}\n}\n\nclass SettingEnumRenderer\n\textends AbstractSettingRenderer\n\timplements\n\t\tITreeRenderer<\n\t\t\tSettingsTreeSettingElement,\n\t\t\tnever,\n\t\t\tISettingEnumItemTemplate\n\t\t>\n{\n\ttemplateId = SETTINGS_ENUM_TEMPLATE_ID;\n\n\trenderTemplate(container: HTMLElement): ISettingEnumItemTemplate {\n\t\tconst common = this.renderCommonTemplate(null, container, \"enum\");\n\n\t\tconst styles = getSelectBoxStyles({\n\t\t\tselectBackground: settingsSelectBackground,\n\t\t\tselectForeground: settingsSelectForeground,\n\t\t\tselectBorder: settingsSelectBorder,\n\t\t\tselectListBorder: settingsSelectListBorder,\n\t\t});\n\n\t\tconst selectBox = new SelectBox(\n\t\t\t[],\n\t\t\t0,\n\t\t\tthis._contextViewService,\n\t\t\tstyles,\n\t\t\t{\n\t\t\t\tuseCustomDrawn: !(isIOS && BrowserFeatures.pointerEvents),\n\t\t\t},\n\t\t);\n\n\t\tcommon.toDispose.add(selectBox);\n\t\tselectBox.render(common.controlElement);\n\t\tconst selectElement = common.controlElement.querySelector(\"select\");\n\t\tif (selectElement) {\n\t\t\tselectElement.classList.add(AbstractSettingRenderer.CONTROL_CLASS);\n\t\t\tselectElement.tabIndex = 0;\n\t\t}\n\n\t\tcommon.toDispose.add(\n\t\t\tselectBox.onDidSelect((e) => {\n\t\t\t\ttemplate.onChange?.(e.index);\n\t\t\t}),\n\t\t);\n\n\t\tconst enumDescriptionElement = common.containerElement.insertBefore(\n\t\t\t$(\".setting-item-enumDescription\"),\n\t\t\tcommon.descriptionElement.nextSibling,\n\t\t);\n\n\t\tconst template: ISettingEnumItemTemplate = {\n\t\t\t...common,\n\t\t\tselectBox,\n\t\t\tselectElement,\n\t\t\tenumDescriptionElement,\n\t\t};\n\n\t\tthis.addSettingElementFocusHandler(template);\n\n\t\treturn template;\n\t}\n\n\trenderElement(\n\t\telement: ITreeNode<SettingsTreeSettingElement, never>,\n\t\tindex: number,\n\t\ttemplateData: ISettingEnumItemTemplate,\n\t): void {\n\t\tsuper.renderSettingElement(element, index, templateData);\n\t}\n\n\tprotected renderValue(\n\t\tdataElement: SettingsTreeSettingElement,\n\t\ttemplate: ISettingEnumItemTemplate,\n\t\tonChange: (value: string) => void,\n\t): void {\n\t\t// Make shallow copies here so that we don't modify the actual dataElement later\n\t\tconst enumItemLabels = dataElement.setting.enumItemLabels\n\t\t\t? [...dataElement.setting.enumItemLabels]\n\t\t\t: [];\n\t\tconst enumDescriptions = dataElement.setting.enumDescriptions\n\t\t\t? [...dataElement.setting.enumDescriptions]\n\t\t\t: [];\n\t\tconst settingEnum = [...dataElement.setting.enum!];\n\t\tconst enumDescriptionsAreMarkdown =\n\t\t\tdataElement.setting.enumDescriptionsAreMarkdown;\n\n\t\tconst disposables = new DisposableStore();\n\t\ttemplate.elementDisposables.add(disposables);\n\n\t\tlet createdDefault = false;\n\t\tif (!settingEnum.includes(dataElement.defaultValue)) {\n\t\t\t// Add a new potentially blank default setting\n\t\t\tsettingEnum.unshift(dataElement.defaultValue);\n\t\t\tenumDescriptions.unshift(\"\");\n\t\t\tenumItemLabels.unshift(\"\");\n\t\t\tcreatedDefault = true;\n\t\t}\n\n\t\t// Use String constructor in case of null or undefined values\n\t\tconst stringifiedDefaultValue = escapeInvisibleChars(\n\t\t\tString(dataElement.defaultValue),\n\t\t);\n\t\tconst displayOptions: ISelectOptionItem[] = settingEnum\n\t\t\t.map(String)\n\t\t\t.map(escapeInvisibleChars)\n\t\t\t.map((data, index) => {\n\t\t\t\tconst description =\n\t\t\t\t\tenumDescriptions[index] &&\n\t\t\t\t\t(enumDescriptionsAreMarkdown\n\t\t\t\t\t\t? fixSettingLinks(enumDescriptions[index], false)\n\t\t\t\t\t\t: enumDescriptions[index]);\n\t\t\t\treturn {\n\t\t\t\t\ttext: enumItemLabels[index] ? enumItemLabels[index] : data,\n\t\t\t\t\tdetail: enumItemLabels[index] ? data : \"\",\n\t\t\t\t\tdescription,\n\t\t\t\t\tdescriptionIsMarkdown: enumDescriptionsAreMarkdown,\n\t\t\t\t\tdescriptionMarkdownActionHandler: {\n\t\t\t\t\t\tcallback: (content) => {\n\t\t\t\t\t\t\tthis._openerService\n\t\t\t\t\t\t\t\t.open(content)\n\t\t\t\t\t\t\t\t.catch(onUnexpectedError);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdisposables: disposables,\n\t\t\t\t\t},\n\t\t\t\t\tdecoratorRight:\n\t\t\t\t\t\tdata === stringifiedDefaultValue ||\n\t\t\t\t\t\t(createdDefault && index === 0)\n\t\t\t\t\t\t\t? localize(\"settings.Default\", \"default\")\n\t\t\t\t\t\t\t: \"\",\n\t\t\t\t} satisfies ISelectOptionItem;\n\t\t\t});\n\n\t\ttemplate.selectBox.setOptions(displayOptions);\n\t\ttemplate.selectBox.setAriaLabel(dataElement.setting.key);\n\n\t\tlet idx = settingEnum.indexOf(dataElement.value);\n\t\tif (idx === -1) {\n\t\t\tidx = 0;\n\t\t}\n\n\t\ttemplate.onChange = undefined;\n\t\ttemplate.selectBox.select(idx);\n\t\ttemplate.onChange = (idx) => {\n\t\t\tif (createdDefault && idx === 0) {\n\t\t\t\tonChange(dataElement.defaultValue);\n\t\t\t} else {\n\t\t\t\tonChange(settingEnum[idx]);\n\t\t\t}\n\t\t};\n\n\t\ttemplate.enumDescriptionElement.innerText = \"\";\n\t}\n}\n\nconst settingsNumberInputBoxStyles = getInputBoxStyle({\n\tinputBackground: settingsNumberInputBackground,\n\tinputForeground: settingsNumberInputForeground,\n\tinputBorder: settingsNumberInputBorder,\n});\n\nclass SettingNumberRenderer\n\textends AbstractSettingRenderer\n\timplements\n\t\tITreeRenderer<\n\t\t\tSettingsTreeSettingElement,\n\t\t\tnever,\n\t\t\tISettingNumberItemTemplate\n\t\t>\n{\n\ttemplateId = SETTINGS_NUMBER_TEMPLATE_ID;\n\n\trenderTemplate(_container: HTMLElement): ISettingNumberItemTemplate {\n\t\tconst common = super.renderCommonTemplate(null, _container, \"number\");\n\t\tconst validationErrorMessageElement = DOM.append(\n\t\t\tcommon.containerElement,\n\t\t\t$(\".setting-item-validation-message\"),\n\t\t);\n\n\t\tconst inputBox = new InputBox(\n\t\t\tcommon.controlElement,\n\t\t\tthis._contextViewService,\n\t\t\t{ type: \"number\", inputBoxStyles: settingsNumberInputBoxStyles },\n\t\t);\n\t\tcommon.toDispose.add(inputBox);\n\t\tcommon.toDispose.add(\n\t\t\tinputBox.onDidChange((e) => {\n\t\t\t\ttemplate.onChange?.(e);\n\t\t\t}),\n\t\t);\n\t\tcommon.toDispose.add(inputBox);\n\t\tinputBox.inputElement.classList.add(\n\t\t\tAbstractSettingRenderer.CONTROL_CLASS,\n\t\t);\n\t\tinputBox.inputElement.tabIndex = 0;\n\n\t\tconst template: ISettingNumberItemTemplate = {\n\t\t\t...common,\n\t\t\tinputBox,\n\t\t\tvalidationErrorMessageElement,\n\t\t};\n\n\t\tthis.addSettingElementFocusHandler(template);\n\n\t\treturn template;\n\t}\n\n\trenderElement(\n\t\telement: ITreeNode<SettingsTreeSettingElement, never>,\n\t\tindex: number,\n\t\ttemplateData: ISettingNumberItemTemplate,\n\t): void {\n\t\tsuper.renderSettingElement(element, index, templateData);\n\t}\n\n\tprotected renderValue(\n\t\tdataElement: SettingsTreeSettingElement,\n\t\ttemplate: ISettingNumberItemTemplate,\n\t\tonChange: (value: number | null) => void,\n\t): void {\n\t\tconst numParseFn =\n\t\t\tdataElement.valueType === \"integer\" ||\n\t\t\tdataElement.valueType === \"nullable-integer\"\n\t\t\t\t? Number.parseInt\n\t\t\t\t: Number.parseFloat;\n\n\t\tconst nullNumParseFn =\n\t\t\tdataElement.valueType === \"nullable-integer\" ||\n\t\t\tdataElement.valueType === \"nullable-number\"\n\t\t\t\t? (v: string) => (v === \"\" ? null : numParseFn(v))\n\t\t\t\t: numParseFn;\n\n\t\ttemplate.onChange = undefined;\n\t\ttemplate.inputBox.value =\n\t\t\ttypeof dataElement.value === \"number\"\n\t\t\t\t? dataElement.value.toString()\n\t\t\t\t: \"\";\n\t\ttemplate.inputBox.step = dataElement.valueType.includes(\"integer\")\n\t\t\t? \"1\"\n\t\t\t: \"any\";\n\t\ttemplate.inputBox.setAriaLabel(dataElement.setting.key);\n\t\ttemplate.onChange = (value) => {\n\t\t\tif (!renderValidations(dataElement, template, false)) {\n\t\t\t\tonChange(nullNumParseFn(value));\n\t\t\t}\n\t\t};\n\n\t\trenderValidations(dataElement, template, true);\n\t}\n}\n\nclass SettingBoolRenderer\n\textends AbstractSettingRenderer\n\timplements\n\t\tITreeRenderer<\n\t\t\tSettingsTreeSettingElement,\n\t\t\tnever,\n\t\t\tISettingBoolItemTemplate\n\t\t>\n{\n\ttemplateId = SETTINGS_BOOL_TEMPLATE_ID;\n\n\trenderTemplate(_container: HTMLElement): ISettingBoolItemTemplate {\n\t\t_container.classList.add(\"setting-item\");\n\t\t_container.classList.add(\"setting-item-bool\");\n\n\t\tconst toDispose = new DisposableStore();\n\n\t\tconst container = DOM.append(\n\t\t\t_container,\n\t\t\t$(AbstractSettingRenderer.CONTENTS_SELECTOR),\n\t\t);\n\t\tcontainer.classList.add(\"settings-row-inner-container\");\n\n\t\tconst titleElement = DOM.append(container, $(\".setting-item-title\"));\n\t\tconst categoryElement = DOM.append(\n\t\t\ttitleElement,\n\t\t\t$(\"span.setting-item-category\"),\n\t\t);\n\t\tconst labelElementContainer = DOM.append(\n\t\t\ttitleElement,\n\t\t\t$(\"span.setting-item-label\"),\n\t\t);\n\t\tconst labelElement = toDispose.add(\n\t\t\tnew SimpleIconLabel(labelElementContainer),\n\t\t);\n\t\tconst indicatorsLabel = this._instantiationService.createInstance(\n\t\t\tSettingsTreeIndicatorsLabel,\n\t\t\ttitleElement,\n\t\t);\n\n\t\tconst descriptionAndValueElement = DOM.append(\n\t\t\tcontainer,\n\t\t\t$(\".setting-item-value-description\"),\n\t\t);\n\t\tconst controlElement = DOM.append(\n\t\t\tdescriptionAndValueElement,\n\t\t\t$(\".setting-item-bool-control\"),\n\t\t);\n\t\tconst descriptionElement = DOM.append(\n\t\t\tdescriptionAndValueElement,\n\t\t\t$(\".setting-item-description\"),\n\t\t);\n\t\tconst modifiedIndicatorElement = DOM.append(\n\t\t\tcontainer,\n\t\t\t$(\".setting-item-modified-indicator\"),\n\t\t);\n\t\ttoDispose.add(\n\t\t\tthis._hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\tmodifiedIndicatorElement,\n\t\t\t\tlocalize(\n\t\t\t\t\t\"modified\",\n\t\t\t\t\t\"The setting has been configured in the current scope.\",\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\tconst deprecationWarningElement = DOM.append(\n\t\t\tcontainer,\n\t\t\t$(\".setting-item-deprecation-message\"),\n\t\t);\n\n\t\tconst checkbox = new Toggle({\n\t\t\ticon: Codicon.check,\n\t\t\tactionClassName: \"setting-value-checkbox\",\n\t\t\tisChecked: true,\n\t\t\ttitle: \"\",\n\t\t\t...unthemedToggleStyles,\n\t\t});\n\t\tcontrolElement.appendChild(checkbox.domNode);\n\t\ttoDispose.add(checkbox);\n\t\ttoDispose.add(\n\t\t\tcheckbox.onChange(() => {\n\t\t\t\ttemplate.onChange!(checkbox.checked);\n\t\t\t}),\n\t\t);\n\n\t\t// Need to listen for mouse clicks on description and toggle checkbox - use target ID for safety\n\t\t// Also have to ignore embedded links - too buried to stop propagation\n\t\ttoDispose.add(\n\t\t\tDOM.addDisposableListener(\n\t\t\t\tdescriptionElement,\n\t\t\t\tDOM.EventType.MOUSE_DOWN,\n\t\t\t\t(e) => {\n\t\t\t\t\tconst targetElement = <HTMLElement>e.target;\n\n\t\t\t\t\t// Toggle target checkbox\n\t\t\t\t\tif (targetElement.tagName.toLowerCase() !== \"a\") {\n\t\t\t\t\t\ttemplate.checkbox.checked = !template.checkbox.checked;\n\t\t\t\t\t\ttemplate.onChange!(checkbox.checked);\n\t\t\t\t\t}\n\t\t\t\t\tDOM.EventHelper.stop(e);\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tcheckbox.domNode.classList.add(AbstractSettingRenderer.CONTROL_CLASS);\n\t\tconst toolbarContainer = DOM.append(\n\t\t\tcontainer,\n\t\t\t$(\".setting-toolbar-container\"),\n\t\t);\n\t\tconst toolbar = this.renderSettingToolbar(toolbarContainer);\n\t\ttoDispose.add(toolbar);\n\n\t\tconst template: ISettingBoolItemTemplate = {\n\t\t\ttoDispose,\n\t\t\telementDisposables: toDispose.add(new DisposableStore()),\n\n\t\t\tcontainerElement: container,\n\t\t\tcategoryElement,\n\t\t\tlabelElement,\n\t\t\tcontrolElement,\n\t\t\tcheckbox,\n\t\t\tdescriptionElement,\n\t\t\tdeprecationWarningElement,\n\t\t\tindicatorsLabel,\n\t\t\ttoolbar,\n\t\t};\n\n\t\tthis.addSettingElementFocusHandler(template);\n\n\t\t// Prevent clicks from being handled by list\n\t\ttoDispose.add(\n\t\t\tDOM.addDisposableListener(\n\t\t\t\tcontrolElement,\n\t\t\t\t\"mousedown\",\n\t\t\t\t(e: IMouseEvent) => e.stopPropagation(),\n\t\t\t),\n\t\t);\n\t\ttoDispose.add(\n\t\t\tDOM.addDisposableListener(\n\t\t\t\ttitleElement,\n\t\t\t\tDOM.EventType.MOUSE_ENTER,\n\t\t\t\t(e) => container.classList.add(\"mouseover\"),\n\t\t\t),\n\t\t);\n\t\ttoDispose.add(\n\t\t\tDOM.addDisposableListener(\n\t\t\t\ttitleElement,\n\t\t\t\tDOM.EventType.MOUSE_LEAVE,\n\t\t\t\t(e) => container.classList.remove(\"mouseover\"),\n\t\t\t),\n\t\t);\n\n\t\treturn template;\n\t}\n\n\trenderElement(\n\t\telement: ITreeNode<SettingsTreeSettingElement, never>,\n\t\tindex: number,\n\t\ttemplateData: ISettingBoolItemTemplate,\n\t): void {\n\t\tsuper.renderSettingElement(element, index, templateData);\n\t}\n\n\tprotected renderValue(\n\t\tdataElement: SettingsTreeSettingElement,\n\t\ttemplate: ISettingBoolItemTemplate,\n\t\tonChange: (value: boolean) => void,\n\t): void {\n\t\ttemplate.onChange = undefined;\n\t\ttemplate.checkbox.checked = dataElement.value;\n\t\ttemplate.checkbox.setTitle(dataElement.setting.key);\n\t\ttemplate.onChange = onChange;\n\t}\n}\n\ntype ManageExtensionClickTelemetryClassification = {\n\textensionId: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"The extension the user went to manage.\";\n\t};\n\towner: \"rzhao271\";\n\tcomment: \"Event used to gain insights into when users interact with an extension management setting\";\n};\n\nclass SettingsExtensionToggleRenderer\n\textends AbstractSettingRenderer\n\timplements\n\t\tITreeRenderer<\n\t\t\tSettingsTreeSettingElement,\n\t\t\tnever,\n\t\t\tISettingExtensionToggleItemTemplate\n\t\t>\n{\n\ttemplateId = SETTINGS_EXTENSION_TOGGLE_TEMPLATE_ID;\n\n\tprivate readonly _onDidDismissExtensionSetting = this._register(\n\t\tnew Emitter<string>(),\n\t);\n\treadonly onDidDismissExtensionSetting =\n\t\tthis._onDidDismissExtensionSetting.event;\n\n\trenderTemplate(\n\t\t_container: HTMLElement,\n\t): ISettingExtensionToggleItemTemplate {\n\t\tconst common = super.renderCommonTemplate(\n\t\t\tnull,\n\t\t\t_container,\n\t\t\t\"extension-toggle\",\n\t\t);\n\n\t\tconst actionButton = new Button(common.containerElement, {\n\t\t\ttitle: false,\n\t\t\t...defaultButtonStyles,\n\t\t});\n\t\tactionButton.element.classList.add(\n\t\t\t\"setting-item-extension-toggle-button\",\n\t\t);\n\t\tactionButton.label = localize(\"showExtension\", \"Show Extension\");\n\n\t\tconst dismissButton = new Button(common.containerElement, {\n\t\t\ttitle: false,\n\t\t\tsecondary: true,\n\t\t\t...defaultButtonStyles,\n\t\t});\n\t\tdismissButton.element.classList.add(\n\t\t\t\"setting-item-extension-dismiss-button\",\n\t\t);\n\t\tdismissButton.label = localize(\"dismiss\", \"Dismiss\");\n\n\t\tconst template: ISettingExtensionToggleItemTemplate = {\n\t\t\t...common,\n\t\t\tactionButton,\n\t\t\tdismissButton,\n\t\t};\n\n\t\tthis.addSettingElementFocusHandler(template);\n\n\t\treturn template;\n\t}\n\n\trenderElement(\n\t\telement: ITreeNode<SettingsTreeSettingElement, never>,\n\t\tindex: number,\n\t\ttemplateData: ISettingExtensionToggleItemTemplate,\n\t): void {\n\t\tsuper.renderSettingElement(element, index, templateData);\n\t}\n\n\tprotected renderValue(\n\t\tdataElement: SettingsTreeSettingElement,\n\t\ttemplate: ISettingExtensionToggleItemTemplate,\n\t\tonChange: (_: undefined) => void,\n\t): void {\n\t\ttemplate.elementDisposables.clear();\n\n\t\tconst extensionId = dataElement.setting.displayExtensionId!;\n\t\ttemplate.elementDisposables.add(\n\t\t\ttemplate.actionButton.onDidClick(async () => {\n\t\t\t\tthis._telemetryService.publicLog2<\n\t\t\t\t\t{ extensionId: string },\n\t\t\t\t\tManageExtensionClickTelemetryClassification\n\t\t\t\t>(\"ManageExtensionClick\", { extensionId });\n\t\t\t\tthis._commandService.executeCommand(\n\t\t\t\t\t\"extension.open\",\n\t\t\t\t\textensionId,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\ttemplate.elementDisposables.add(\n\t\t\ttemplate.dismissButton.onDidClick(async () => {\n\t\t\t\tthis._telemetryService.publicLog2<\n\t\t\t\t\t{ extensionId: string },\n\t\t\t\t\tManageExtensionClickTelemetryClassification\n\t\t\t\t>(\"DismissExtensionClick\", { extensionId });\n\t\t\t\tthis._onDidDismissExtensionSetting.fire(extensionId);\n\t\t\t}),\n\t\t);\n\t}\n}\n\nexport class SettingTreeRenderers extends Disposable {\n\treadonly onDidClickOverrideElement: Event<ISettingOverrideClickEvent>;\n\n\tprivate readonly _onDidChangeSetting = this._register(\n\t\tnew Emitter<ISettingChangeEvent>(),\n\t);\n\treadonly onDidChangeSetting: Event<ISettingChangeEvent>;\n\n\treadonly onDidDismissExtensionSetting: Event<string>;\n\n\treadonly onDidOpenSettings: Event<string>;\n\n\treadonly onDidClickSettingLink: Event<ISettingLinkClickEvent>;\n\n\treadonly onDidFocusSetting: Event<SettingsTreeSettingElement>;\n\n\treadonly onDidChangeSettingHeight: Event<HeightChangeParams>;\n\n\treadonly onApplyFilter: Event<string>;\n\n\treadonly allRenderers: ITreeRenderer<SettingsTreeElement, never, any>[];\n\n\tprivate readonly settingActions: IAction[];\n\n\tconstructor(\n\t\t@IInstantiationService\n\t\tprivate readonly _instantiationService: IInstantiationService,\n\t\t@IContextMenuService\n\t\tprivate readonly _contextMenuService: IContextMenuService,\n\t\t@IContextViewService\n\t\tprivate readonly _contextViewService: IContextViewService,\n\t\t@IUserDataProfilesService\n\t\tprivate readonly _userDataProfilesService: IUserDataProfilesService,\n\t\t@IUserDataSyncEnablementService\n\t\tprivate readonly _userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t) {\n\t\tsuper();\n\t\tthis.settingActions = [\n\t\t\tnew Action(\n\t\t\t\t\"settings.resetSetting\",\n\t\t\t\tlocalize(\"resetSettingLabel\", \"Reset Setting\"),\n\t\t\t\tundefined,\n\t\t\t\tundefined,\n\t\t\t\tasync (context) => {\n\t\t\t\t\tif (context instanceof SettingsTreeSettingElement) {\n\t\t\t\t\t\tif (!context.isUntrusted) {\n\t\t\t\t\t\t\tthis._onDidChangeSetting.fire({\n\t\t\t\t\t\t\t\tkey: context.setting.key,\n\t\t\t\t\t\t\t\tvalue: undefined,\n\t\t\t\t\t\t\t\ttype: context.setting.type as SettingValueType,\n\t\t\t\t\t\t\t\tmanualReset: true,\n\t\t\t\t\t\t\t\tscope: context.setting.scope,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t\tnew Separator(),\n\t\t\tthis._instantiationService.createInstance(CopySettingIdAction),\n\t\t\tthis._instantiationService.createInstance(CopySettingAsJSONAction),\n\t\t\tthis._instantiationService.createInstance(CopySettingAsURLAction),\n\t\t];\n\n\t\tconst actionFactory = (\n\t\t\tsetting: ISetting,\n\t\t\tsettingTarget: SettingsTarget,\n\t\t) => this.getActionsForSetting(setting, settingTarget);\n\t\tconst emptyActionFactory = (_: ISetting) => [];\n\t\tconst extensionRenderer = this._instantiationService.createInstance(\n\t\t\tSettingsExtensionToggleRenderer,\n\t\t\t[],\n\t\t\temptyActionFactory,\n\t\t);\n\t\tconst settingRenderers = [\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\tSettingBoolRenderer,\n\t\t\t\tthis.settingActions,\n\t\t\t\tactionFactory,\n\t\t\t),\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\tSettingNumberRenderer,\n\t\t\t\tthis.settingActions,\n\t\t\t\tactionFactory,\n\t\t\t),\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\tSettingArrayRenderer,\n\t\t\t\tthis.settingActions,\n\t\t\t\tactionFactory,\n\t\t\t),\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\tSettingComplexRenderer,\n\t\t\t\tthis.settingActions,\n\t\t\t\tactionFactory,\n\t\t\t),\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\tSettingTextRenderer,\n\t\t\t\tthis.settingActions,\n\t\t\t\tactionFactory,\n\t\t\t),\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\tSettingMultilineTextRenderer,\n\t\t\t\tthis.settingActions,\n\t\t\t\tactionFactory,\n\t\t\t),\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\tSettingExcludeRenderer,\n\t\t\t\tthis.settingActions,\n\t\t\t\tactionFactory,\n\t\t\t),\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\tSettingIncludeRenderer,\n\t\t\t\tthis.settingActions,\n\t\t\t\tactionFactory,\n\t\t\t),\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\tSettingEnumRenderer,\n\t\t\t\tthis.settingActions,\n\t\t\t\tactionFactory,\n\t\t\t),\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\tSettingObjectRenderer,\n\t\t\t\tthis.settingActions,\n\t\t\t\tactionFactory,\n\t\t\t),\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\tSettingBoolObjectRenderer,\n\t\t\t\tthis.settingActions,\n\t\t\t\tactionFactory,\n\t\t\t),\n\t\t\textensionRenderer,\n\t\t];\n\n\t\tthis.onDidClickOverrideElement = Event.any(\n\t\t\t...settingRenderers.map((r) => r.onDidClickOverrideElement),\n\t\t);\n\t\tthis.onDidChangeSetting = Event.any(\n\t\t\t...settingRenderers.map((r) => r.onDidChangeSetting),\n\t\t\tthis._onDidChangeSetting.event,\n\t\t);\n\t\tthis.onDidDismissExtensionSetting =\n\t\t\textensionRenderer.onDidDismissExtensionSetting;\n\t\tthis.onDidOpenSettings = Event.any(\n\t\t\t...settingRenderers.map((r) => r.onDidOpenSettings),\n\t\t);\n\t\tthis.onDidClickSettingLink = Event.any(\n\t\t\t...settingRenderers.map((r) => r.onDidClickSettingLink),\n\t\t);\n\t\tthis.onDidFocusSetting = Event.any(\n\t\t\t...settingRenderers.map((r) => r.onDidFocusSetting),\n\t\t);\n\t\tthis.onDidChangeSettingHeight = Event.any(\n\t\t\t...settingRenderers.map((r) => r.onDidChangeSettingHeight),\n\t\t);\n\t\tthis.onApplyFilter = Event.any(\n\t\t\t...settingRenderers.map((r) => r.onApplyFilter),\n\t\t);\n\n\t\tthis.allRenderers = [\n\t\t\t...settingRenderers,\n\t\t\tthis._instantiationService.createInstance(SettingGroupRenderer),\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\tSettingNewExtensionsRenderer,\n\t\t\t),\n\t\t];\n\t}\n\n\tprivate getActionsForSetting(\n\t\tsetting: ISetting,\n\t\tsettingTarget: SettingsTarget,\n\t): IAction[] {\n\t\tconst actions: IAction[] = [];\n\t\tif (\n\t\t\tthis._userDataProfilesService.isEnabled() &&\n\t\t\tsetting.scope !== ConfigurationScope.APPLICATION &&\n\t\t\tsettingTarget === ConfigurationTarget.USER_LOCAL\n\t\t) {\n\t\t\tactions.push(\n\t\t\t\tthis._instantiationService.createInstance(\n\t\t\t\t\tApplySettingToAllProfilesAction,\n\t\t\t\t\tsetting,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\tif (\n\t\t\tthis._userDataSyncEnablementService.isEnabled() &&\n\t\t\t!setting.disallowSyncIgnore\n\t\t) {\n\t\t\tactions.push(\n\t\t\t\tthis._instantiationService.createInstance(\n\t\t\t\t\tSyncSettingAction,\n\t\t\t\t\tsetting,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\tif (actions.length) {\n\t\t\tactions.splice(0, 0, new Separator());\n\t\t}\n\t\treturn actions;\n\t}\n\n\tcancelSuggesters() {\n\t\tthis._contextViewService.hideContextView();\n\t}\n\n\tshowContextMenu(\n\t\telement: SettingsTreeSettingElement,\n\t\tsettingDOMElement: HTMLElement,\n\t): void {\n\t\tconst toolbarElement =\n\t\t\tsettingDOMElement.querySelector(\".monaco-toolbar\");\n\t\tif (toolbarElement) {\n\t\t\tthis._contextMenuService.showContextMenu({\n\t\t\t\tgetActions: () => this.settingActions,\n\t\t\t\tgetAnchor: () => <HTMLElement>toolbarElement,\n\t\t\t\tgetActionsContext: () => element,\n\t\t\t});\n\t\t}\n\t}\n\n\tgetSettingDOMElementForDOMElement(\n\t\tdomElement: HTMLElement,\n\t): HTMLElement | null {\n\t\tconst parent = DOM.findParentWithClass(\n\t\t\tdomElement,\n\t\t\tAbstractSettingRenderer.CONTENTS_CLASS,\n\t\t);\n\t\tif (parent) {\n\t\t\treturn parent;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tgetDOMElementsForSettingKey(\n\t\ttreeContainer: HTMLElement,\n\t\tkey: string,\n\t): NodeListOf<HTMLElement> {\n\t\treturn treeContainer.querySelectorAll(\n\t\t\t`[${AbstractSettingRenderer.SETTING_KEY_ATTR}=\"${key}\"]`,\n\t\t);\n\t}\n\n\tgetKeyForDOMElementInSetting(element: HTMLElement): string | null {\n\t\tconst settingElement = this.getSettingDOMElementForDOMElement(element);\n\t\treturn (\n\t\t\tsettingElement &&\n\t\t\tsettingElement.getAttribute(\n\t\t\t\tAbstractSettingRenderer.SETTING_KEY_ATTR,\n\t\t\t)\n\t\t);\n\t}\n\n\tgetIdForDOMElementInSetting(element: HTMLElement): string | null {\n\t\tconst settingElement = this.getSettingDOMElementForDOMElement(element);\n\t\treturn (\n\t\t\tsettingElement &&\n\t\t\tsettingElement.getAttribute(AbstractSettingRenderer.SETTING_ID_ATTR)\n\t\t);\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.settingActions.forEach((action) => {\n\t\t\tif (isDisposable(action)) {\n\t\t\t\taction.dispose();\n\t\t\t}\n\t\t});\n\t\tthis.allRenderers.forEach((renderer) => {\n\t\t\tif (isDisposable(renderer)) {\n\t\t\t\trenderer.dispose();\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * Validate and render any error message. Returns true if the value is invalid.\n */\nfunction renderValidations(\n\tdataElement: SettingsTreeSettingElement,\n\ttemplate: ISettingTextItemTemplate,\n\tcalledOnStartup: boolean,\n): boolean {\n\tif (dataElement.setting.validator) {\n\t\tconst errMsg = dataElement.setting.validator(template.inputBox.value);\n\t\tif (errMsg) {\n\t\t\ttemplate.containerElement.classList.add(\"invalid-input\");\n\t\t\ttemplate.validationErrorMessageElement.innerText = errMsg;\n\t\t\tconst validationError = localize(\n\t\t\t\t\"validationError\",\n\t\t\t\t\"Validation Error.\",\n\t\t\t);\n\t\t\ttemplate.inputBox.inputElement.parentElement!.setAttribute(\n\t\t\t\t\"aria-label\",\n\t\t\t\t[validationError, errMsg].join(\" \"),\n\t\t\t);\n\t\t\tif (!calledOnStartup) {\n\t\t\t\taria.status(validationError + \" \" + errMsg);\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\ttemplate.inputBox.inputElement.parentElement!.removeAttribute(\n\t\t\t\t\"aria-label\",\n\t\t\t);\n\t\t}\n\t}\n\ttemplate.containerElement.classList.remove(\"invalid-input\");\n\treturn false;\n}\n\n/**\n * Validate and render any error message for arrays. Returns true if the value is invalid.\n */\nfunction renderArrayValidations(\n\tdataElement: SettingsTreeSettingElement,\n\ttemplate: ISettingListItemTemplate | ISettingObjectItemTemplate,\n\tvalue: string[] | Record<string, unknown> | undefined,\n\tcalledOnStartup: boolean,\n): boolean {\n\ttemplate.containerElement.classList.add(\"invalid-input\");\n\tif (dataElement.setting.validator) {\n\t\tconst errMsg = dataElement.setting.validator(value);\n\t\tif (errMsg && errMsg !== \"\") {\n\t\t\ttemplate.containerElement.classList.add(\"invalid-input\");\n\t\t\ttemplate.validationErrorMessageElement.innerText = errMsg;\n\t\t\tconst validationError = localize(\n\t\t\t\t\"validationError\",\n\t\t\t\t\"Validation Error.\",\n\t\t\t);\n\t\t\ttemplate.containerElement.setAttribute(\n\t\t\t\t\"aria-label\",\n\t\t\t\t[dataElement.setting.key, validationError, errMsg].join(\" \"),\n\t\t\t);\n\t\t\tif (!calledOnStartup) {\n\t\t\t\taria.status(validationError + \" \" + errMsg);\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\ttemplate.containerElement.setAttribute(\n\t\t\t\t\"aria-label\",\n\t\t\t\tdataElement.setting.key,\n\t\t\t);\n\t\t\ttemplate.containerElement.classList.remove(\"invalid-input\");\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction cleanRenderedMarkdown(element: Node): void {\n\tfor (let i = 0; i < element.childNodes.length; i++) {\n\t\tconst child = element.childNodes.item(i);\n\n\t\tconst tagName =\n\t\t\t(<Element>child).tagName && (<Element>child).tagName.toLowerCase();\n\t\tif (tagName === \"img\") {\n\t\t\tchild.remove();\n\t\t} else {\n\t\t\tcleanRenderedMarkdown(child);\n\t\t}\n\t}\n}\n\nfunction fixSettingLinks(text: string, linkify = true): string {\n\treturn text.replace(\n\t\t/`#([^#\\s`]+)#`|'#([^#\\s']+)#'/g,\n\t\t(match, backticksGroup, quotesGroup) => {\n\t\t\tconst settingKey: string = backticksGroup ?? quotesGroup;\n\t\t\tconst targetDisplayFormat = settingKeyToDisplayFormat(settingKey);\n\t\t\tconst targetName = `${targetDisplayFormat.category}: ${targetDisplayFormat.label}`;\n\t\t\treturn linkify\n\t\t\t\t? `[${targetName}](#${settingKey} \"${settingKey}\")`\n\t\t\t\t: `\"${targetName}\"`;\n\t\t},\n\t);\n}\n\nfunction escapeInvisibleChars(enumValue: string): string {\n\treturn enumValue && enumValue.replace(/\\n/g, \"\\\\n\").replace(/\\r/g, \"\\\\r\");\n}\n\nexport class SettingsTreeFilter implements ITreeFilter<SettingsTreeElement> {\n\tconstructor(\n\t\tprivate viewState: ISettingsEditorViewState,\n\t\t@IWorkbenchEnvironmentService\n\t\tprivate environmentService: IWorkbenchEnvironmentService,\n\t) {}\n\n\tfilter(\n\t\telement: SettingsTreeElement,\n\t\tparentVisibility: TreeVisibility,\n\t): TreeFilterResult<void> {\n\t\t// Filter during search\n\t\tif (\n\t\t\tthis.viewState.filterToCategory &&\n\t\t\telement instanceof SettingsTreeSettingElement\n\t\t) {\n\t\t\tif (\n\t\t\t\t!this.settingContainedInGroup(\n\t\t\t\t\telement.setting,\n\t\t\t\t\tthis.viewState.filterToCategory,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Non-user scope selected\n\t\tif (\n\t\t\telement instanceof SettingsTreeSettingElement &&\n\t\t\tthis.viewState.settingsTarget !== ConfigurationTarget.USER_LOCAL\n\t\t) {\n\t\t\tconst isRemote = !!this.environmentService.remoteAuthority;\n\t\t\tif (\n\t\t\t\t!element.matchesScope(this.viewState.settingsTarget, isRemote)\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Group with no visible children\n\t\tif (element instanceof SettingsTreeGroupElement) {\n\t\t\tif (typeof element.count === \"number\") {\n\t\t\t\treturn element.count > 0;\n\t\t\t}\n\n\t\t\treturn TreeVisibility.Recurse;\n\t\t}\n\n\t\t// Filtered \"new extensions\" button\n\t\tif (element instanceof SettingsTreeNewExtensionsElement) {\n\t\t\tif (\n\t\t\t\tthis.viewState.tagFilters?.size ||\n\t\t\t\tthis.viewState.filterToCategory\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate settingContainedInGroup(\n\t\tsetting: ISetting,\n\t\tgroup: SettingsTreeGroupElement,\n\t): boolean {\n\t\treturn group.children.some((child) => {\n\t\t\tif (child instanceof SettingsTreeGroupElement) {\n\t\t\t\treturn this.settingContainedInGroup(setting, child);\n\t\t\t} else if (child instanceof SettingsTreeSettingElement) {\n\t\t\t\treturn child.setting.key === setting.key;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass SettingsTreeDelegate extends CachedListVirtualDelegate<SettingsTreeGroupChild> {\n\tgetTemplateId(\n\t\telement:\n\t\t\t| SettingsTreeGroupElement\n\t\t\t| SettingsTreeSettingElement\n\t\t\t| SettingsTreeNewExtensionsElement,\n\t): string {\n\t\tif (element instanceof SettingsTreeGroupElement) {\n\t\t\treturn SETTINGS_ELEMENT_TEMPLATE_ID;\n\t\t}\n\n\t\tif (element instanceof SettingsTreeSettingElement) {\n\t\t\tif (element.valueType === SettingValueType.ExtensionToggle) {\n\t\t\t\treturn SETTINGS_EXTENSION_TOGGLE_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\tconst invalidTypeError =\n\t\t\t\telement.isConfigured &&\n\t\t\t\tgetInvalidTypeError(element.value, element.setting.type);\n\t\t\tif (invalidTypeError) {\n\t\t\t\treturn SETTINGS_COMPLEX_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\tif (element.valueType === SettingValueType.Boolean) {\n\t\t\t\treturn SETTINGS_BOOL_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\telement.valueType === SettingValueType.Integer ||\n\t\t\t\telement.valueType === SettingValueType.Number ||\n\t\t\t\telement.valueType === SettingValueType.NullableInteger ||\n\t\t\t\telement.valueType === SettingValueType.NullableNumber\n\t\t\t) {\n\t\t\t\treturn SETTINGS_NUMBER_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\tif (element.valueType === SettingValueType.MultilineString) {\n\t\t\t\treturn SETTINGS_MULTILINE_TEXT_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\tif (element.valueType === SettingValueType.String) {\n\t\t\t\treturn SETTINGS_TEXT_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\tif (element.valueType === SettingValueType.Enum) {\n\t\t\t\treturn SETTINGS_ENUM_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\tif (element.valueType === SettingValueType.Array) {\n\t\t\t\treturn SETTINGS_ARRAY_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\tif (element.valueType === SettingValueType.Exclude) {\n\t\t\t\treturn SETTINGS_EXCLUDE_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\tif (element.valueType === SettingValueType.Include) {\n\t\t\t\treturn SETTINGS_INCLUDE_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\tif (element.valueType === SettingValueType.Object) {\n\t\t\t\treturn SETTINGS_OBJECT_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\tif (element.valueType === SettingValueType.BooleanObject) {\n\t\t\t\treturn SETTINGS_BOOL_OBJECT_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\tif (element.valueType === SettingValueType.LanguageTag) {\n\t\t\t\treturn SETTINGS_COMPLEX_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\treturn SETTINGS_COMPLEX_TEMPLATE_ID;\n\t\t}\n\n\t\tif (element instanceof SettingsTreeNewExtensionsElement) {\n\t\t\treturn SETTINGS_NEW_EXTENSIONS_TEMPLATE_ID;\n\t\t}\n\n\t\tthrow new Error(\"unknown element type: \" + element);\n\t}\n\n\thasDynamicHeight(\n\t\telement:\n\t\t\t| SettingsTreeGroupElement\n\t\t\t| SettingsTreeSettingElement\n\t\t\t| SettingsTreeNewExtensionsElement,\n\t): boolean {\n\t\treturn !(element instanceof SettingsTreeGroupElement);\n\t}\n\n\tprotected estimateHeight(element: SettingsTreeGroupChild): number {\n\t\tif (element instanceof SettingsTreeGroupElement) {\n\t\t\treturn 42;\n\t\t}\n\n\t\treturn element instanceof SettingsTreeSettingElement &&\n\t\t\telement.valueType === SettingValueType.Boolean\n\t\t\t? 78\n\t\t\t: 104;\n\t}\n}\n\nexport class NonCollapsibleObjectTreeModel<T> extends ObjectTreeModel<T> {\n\toverride isCollapsible(element: T): boolean {\n\t\treturn false;\n\t}\n\n\toverride setCollapsed(\n\t\telement: T,\n\t\tcollapsed?: boolean,\n\t\trecursive?: boolean,\n\t): boolean {\n\t\treturn false;\n\t}\n}\n\nclass SettingsTreeAccessibilityProvider\n\timplements IListAccessibilityProvider<SettingsTreeElement>\n{\n\tconstructor(\n\t\tprivate readonly configurationService: IWorkbenchConfigurationService,\n\t\tprivate readonly languageService: ILanguageService,\n\t\tprivate readonly userDataProfilesService: IUserDataProfilesService,\n\t) {}\n\n\tgetAriaLabel(element: SettingsTreeElement) {\n\t\tif (element instanceof SettingsTreeSettingElement) {\n\t\t\tconst ariaLabelSections: string[] = [];\n\t\t\tariaLabelSections.push(\n\t\t\t\t`${element.displayCategory} ${element.displayLabel}.`,\n\t\t\t);\n\n\t\t\tif (element.isConfigured) {\n\t\t\t\tconst modifiedText = localize(\"settings.Modified\", \"Modified.\");\n\t\t\t\tariaLabelSections.push(modifiedText);\n\t\t\t}\n\n\t\t\tconst indicatorsLabelAriaLabel = getIndicatorsLabelAriaLabel(\n\t\t\t\telement,\n\t\t\t\tthis.configurationService,\n\t\t\t\tthis.userDataProfilesService,\n\t\t\t\tthis.languageService,\n\t\t\t);\n\t\t\tif (indicatorsLabelAriaLabel.length) {\n\t\t\t\tariaLabelSections.push(`${indicatorsLabelAriaLabel}.`);\n\t\t\t}\n\n\t\t\tconst descriptionWithoutSettingLinks = renderMarkdownAsPlaintext({\n\t\t\t\tvalue: fixSettingLinks(element.description, false),\n\t\t\t});\n\t\t\tif (descriptionWithoutSettingLinks.length) {\n\t\t\t\tariaLabelSections.push(descriptionWithoutSettingLinks);\n\t\t\t}\n\t\t\treturn ariaLabelSections.join(\" \");\n\t\t} else if (element instanceof SettingsTreeGroupElement) {\n\t\t\treturn element.label;\n\t\t} else {\n\t\t\treturn element.id;\n\t\t}\n\t}\n\n\tgetWidgetAriaLabel() {\n\t\treturn localize(\"settings\", \"Settings\");\n\t}\n}\n\nexport class SettingsTree extends WorkbenchObjectTree<SettingsTreeElement> {\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\tviewState: ISettingsEditorViewState,\n\t\trenderers: ITreeRenderer<any, void, any>[],\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IListService listService: IListService,\n\t\t@IWorkbenchConfigurationService\n\t\tconfigurationService: IWorkbenchConfigurationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ILanguageService languageService: ILanguageService,\n\t\t@IUserDataProfilesService userDataProfilesService: IUserDataProfilesService,\n\t) {\n\t\tsuper(\n\t\t\t\"SettingsTree\",\n\t\t\tcontainer,\n\t\t\tnew SettingsTreeDelegate(),\n\t\t\trenderers,\n\t\t\t{\n\t\t\t\thorizontalScrolling: false,\n\t\t\t\tsupportDynamicHeights: true,\n\t\t\t\tidentityProvider: {\n\t\t\t\t\tgetId(e) {\n\t\t\t\t\t\treturn e.id;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\taccessibilityProvider: new SettingsTreeAccessibilityProvider(\n\t\t\t\t\tconfigurationService,\n\t\t\t\t\tlanguageService,\n\t\t\t\t\tuserDataProfilesService,\n\t\t\t\t),\n\t\t\t\tstyleController: (id) =>\n\t\t\t\t\tnew DefaultStyleController(\n\t\t\t\t\t\tDOM.createStyleSheet(container),\n\t\t\t\t\t\tid,\n\t\t\t\t\t),\n\t\t\t\tfilter: instantiationService.createInstance(\n\t\t\t\t\tSettingsTreeFilter,\n\t\t\t\t\tviewState,\n\t\t\t\t),\n\t\t\t\tsmoothScrolling: configurationService.getValue<boolean>(\n\t\t\t\t\t\"workbench.list.smoothScrolling\",\n\t\t\t\t),\n\t\t\t\tmultipleSelectionSupport: false,\n\t\t\t\tfindWidgetEnabled: false,\n\t\t\t\trenderIndentGuides: RenderIndentGuides.None,\n\t\t\t\ttransformOptimization: false, // Disable transform optimization #177470\n\t\t\t},\n\t\t\tinstantiationService,\n\t\t\tcontextKeyService,\n\t\t\tlistService,\n\t\t\tconfigurationService,\n\t\t);\n\n\t\tthis.getHTMLElement().classList.add(\"settings-editor-tree\");\n\n\t\tthis.style(\n\t\t\tgetListStyles({\n\t\t\t\tlistBackground: editorBackground,\n\t\t\t\tlistActiveSelectionBackground: editorBackground,\n\t\t\t\tlistActiveSelectionForeground: foreground,\n\t\t\t\tlistFocusAndSelectionBackground: editorBackground,\n\t\t\t\tlistFocusAndSelectionForeground: foreground,\n\t\t\t\tlistFocusBackground: editorBackground,\n\t\t\t\tlistFocusForeground: foreground,\n\t\t\t\tlistHoverForeground: foreground,\n\t\t\t\tlistHoverBackground: editorBackground,\n\t\t\t\tlistHoverOutline: editorBackground,\n\t\t\t\tlistFocusOutline: editorBackground,\n\t\t\t\tlistInactiveSelectionBackground: editorBackground,\n\t\t\t\tlistInactiveSelectionForeground: foreground,\n\t\t\t\tlistInactiveFocusBackground: editorBackground,\n\t\t\t\tlistInactiveFocusOutline: editorBackground,\n\t\t\t\ttreeIndentGuidesStroke: undefined,\n\t\t\t\ttreeInactiveIndentGuidesStroke: undefined,\n\t\t\t}),\n\t\t);\n\n\t\tthis.disposables.add(\n\t\t\tconfigurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (e.affectsConfiguration(\"workbench.list.smoothScrolling\")) {\n\t\t\t\t\tthis.updateOptions({\n\t\t\t\t\t\tsmoothScrolling: configurationService.getValue<boolean>(\n\t\t\t\t\t\t\t\"workbench.list.smoothScrolling\",\n\t\t\t\t\t\t),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprotected override createModel(\n\t\tuser: string,\n\t\toptions: IObjectTreeOptions<SettingsTreeGroupChild>,\n\t): ITreeModel<\n\t\tSettingsTreeGroupChild | null,\n\t\tvoid,\n\t\tSettingsTreeGroupChild | null\n\t> {\n\t\treturn new NonCollapsibleObjectTreeModel<SettingsTreeGroupChild>(\n\t\t\tuser,\n\t\t\toptions,\n\t\t);\n\t}\n}\n\nclass CopySettingIdAction extends Action {\n\tstatic readonly ID = \"settings.copySettingId\";\n\tstatic readonly LABEL = localize(\"copySettingIdLabel\", \"Copy Setting ID\");\n\n\tconstructor(\n\t\t@IClipboardService private readonly clipboardService: IClipboardService,\n\t) {\n\t\tsuper(CopySettingIdAction.ID, CopySettingIdAction.LABEL);\n\t}\n\n\toverride async run(context: SettingsTreeSettingElement): Promise<void> {\n\t\tif (context) {\n\t\t\tawait this.clipboardService.writeText(context.setting.key);\n\t\t}\n\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n\nclass CopySettingAsJSONAction extends Action {\n\tstatic readonly ID = \"settings.copySettingAsJSON\";\n\tstatic readonly LABEL = localize(\n\t\t\"copySettingAsJSONLabel\",\n\t\t\"Copy Setting as JSON\",\n\t);\n\n\tconstructor(\n\t\t@IClipboardService private readonly clipboardService: IClipboardService,\n\t) {\n\t\tsuper(CopySettingAsJSONAction.ID, CopySettingAsJSONAction.LABEL);\n\t}\n\n\toverride async run(context: SettingsTreeSettingElement): Promise<void> {\n\t\tif (context) {\n\t\t\tconst jsonResult = `\"${context.setting.key}\": ${JSON.stringify(context.value, undefined, \"  \")}`;\n\t\t\tawait this.clipboardService.writeText(jsonResult);\n\t\t}\n\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n\nclass CopySettingAsURLAction extends Action {\n\tstatic readonly ID = \"settings.copySettingAsURL\";\n\tstatic readonly LABEL = localize(\n\t\t\"copySettingAsURLLabel\",\n\t\t\"Copy Setting as URL\",\n\t);\n\n\tconstructor(\n\t\t@IClipboardService private readonly clipboardService: IClipboardService,\n\t\t@IProductService private readonly productService: IProductService,\n\t) {\n\t\tsuper(CopySettingAsURLAction.ID, CopySettingAsURLAction.LABEL);\n\t}\n\n\toverride async run(context: SettingsTreeSettingElement): Promise<void> {\n\t\tif (context) {\n\t\t\tconst settingKey = context.setting.key;\n\t\t\tconst product = this.productService.urlProtocol;\n\t\t\tconst uri = URI.from(\n\t\t\t\t{\n\t\t\t\t\tscheme: product,\n\t\t\t\t\tauthority: SETTINGS_AUTHORITY,\n\t\t\t\t\tpath: `/${settingKey}`,\n\t\t\t\t},\n\t\t\t\ttrue,\n\t\t\t);\n\t\t\tawait this.clipboardService.writeText(uri.toString());\n\t\t}\n\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n\nclass SyncSettingAction extends Action {\n\tstatic readonly ID = \"settings.stopSyncingSetting\";\n\tstatic readonly LABEL = localize(\"stopSyncingSetting\", \"Sync This Setting\");\n\n\tconstructor(\n\t\tprivate readonly setting: ISetting,\n\t\t@IConfigurationService\n\t\tprivate readonly configService: IConfigurationService,\n\t) {\n\t\tsuper(SyncSettingAction.ID, SyncSettingAction.LABEL);\n\t\tthis._register(\n\t\t\tEvent.filter(configService.onDidChangeConfiguration, (e) =>\n\t\t\t\te.affectsConfiguration(\"settingsSync.ignoredSettings\"),\n\t\t\t)(() => this.update()),\n\t\t);\n\t\tthis.update();\n\t}\n\n\tasync update() {\n\t\tconst ignoredSettings = getIgnoredSettings(\n\t\t\tgetDefaultIgnoredSettings(),\n\t\t\tthis.configService,\n\t\t);\n\t\tthis.checked = !ignoredSettings.includes(this.setting.key);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\t// first remove the current setting completely from ignored settings\n\t\tlet currentValue = [\n\t\t\t...this.configService.getValue<string[]>(\n\t\t\t\t\"settingsSync.ignoredSettings\",\n\t\t\t),\n\t\t];\n\t\tcurrentValue = currentValue.filter(\n\t\t\t(v) => v !== this.setting.key && v !== `-${this.setting.key}`,\n\t\t);\n\n\t\tconst defaultIgnoredSettings = getDefaultIgnoredSettings();\n\t\tconst isDefaultIgnored = defaultIgnoredSettings.includes(\n\t\t\tthis.setting.key,\n\t\t);\n\t\tconst askedToSync = !this.checked;\n\n\t\t// If asked to sync, then add only if it is ignored by default\n\t\tif (askedToSync && isDefaultIgnored) {\n\t\t\tcurrentValue.push(`-${this.setting.key}`);\n\t\t}\n\n\t\t// If asked not to sync, then add only if it is not ignored by default\n\t\tif (!askedToSync && !isDefaultIgnored) {\n\t\t\tcurrentValue.push(this.setting.key);\n\t\t}\n\n\t\tthis.configService.updateValue(\n\t\t\t\"settingsSync.ignoredSettings\",\n\t\t\tcurrentValue.length ? currentValue : undefined,\n\t\t\tConfigurationTarget.USER,\n\t\t);\n\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n\nclass ApplySettingToAllProfilesAction extends Action {\n\tstatic readonly ID = \"settings.applyToAllProfiles\";\n\tstatic readonly LABEL = localize(\n\t\t\"applyToAllProfiles\",\n\t\t\"Apply Setting to all Profiles\",\n\t);\n\n\tconstructor(\n\t\tprivate readonly setting: ISetting,\n\t\t@IWorkbenchConfigurationService\n\t\tprivate readonly configService: IWorkbenchConfigurationService,\n\t) {\n\t\tsuper(\n\t\t\tApplySettingToAllProfilesAction.ID,\n\t\t\tApplySettingToAllProfilesAction.LABEL,\n\t\t);\n\t\tthis._register(\n\t\t\tEvent.filter(configService.onDidChangeConfiguration, (e) =>\n\t\t\t\te.affectsConfiguration(APPLY_ALL_PROFILES_SETTING),\n\t\t\t)(() => this.update()),\n\t\t);\n\t\tthis.update();\n\t}\n\n\tupdate() {\n\t\tconst allProfilesSettings = this.configService.getValue<string[]>(\n\t\t\tAPPLY_ALL_PROFILES_SETTING,\n\t\t);\n\t\tthis.checked = allProfilesSettings.includes(this.setting.key);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\t// first remove the current setting completely from ignored settings\n\t\tconst value =\n\t\t\tthis.configService.getValue<string[]>(APPLY_ALL_PROFILES_SETTING) ??\n\t\t\t[];\n\n\t\tif (this.checked) {\n\t\t\tvalue.splice(value.indexOf(this.setting.key), 1);\n\t\t} else {\n\t\t\tvalue.push(this.setting.key);\n\t\t}\n\n\t\tconst newValue = distinct(value);\n\t\tif (this.checked) {\n\t\t\tawait this.configService.updateValue(\n\t\t\t\tthis.setting.key,\n\t\t\t\tthis.configService.inspect(this.setting.key).application?.value,\n\t\t\t\tConfigurationTarget.USER_LOCAL,\n\t\t\t);\n\t\t\tawait this.configService.updateValue(\n\t\t\t\tAPPLY_ALL_PROFILES_SETTING,\n\t\t\t\tnewValue.length ? newValue : undefined,\n\t\t\t\tConfigurationTarget.USER_LOCAL,\n\t\t\t);\n\t\t} else {\n\t\t\tawait this.configService.updateValue(\n\t\t\t\tAPPLY_ALL_PROFILES_SETTING,\n\t\t\t\tnewValue.length ? newValue : undefined,\n\t\t\t\tConfigurationTarget.USER_LOCAL,\n\t\t\t);\n\t\t\tawait this.configService.updateValue(\n\t\t\t\tthis.setting.key,\n\t\t\t\tthis.configService.inspect(this.setting.key).userLocal?.value,\n\t\t\t\tConfigurationTarget.USER_LOCAL,\n\t\t\t);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["sortKeys", "idx"]
}
