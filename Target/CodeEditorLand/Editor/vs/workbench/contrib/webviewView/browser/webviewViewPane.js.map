{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/webviewView/browser/webviewViewPane.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tDimension,\n\tEventType,\n\taddDisposableListener,\n\tfindParentWithClass,\n\tgetWindow,\n} from \"../../../../base/browser/dom.js\";\nimport { CancellationTokenSource } from \"../../../../base/common/cancellation.js\";\nimport { Emitter } from \"../../../../base/common/event.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n\tMutableDisposable,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { MenuId } from \"../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextMenuService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport type { ExtensionIdentifier } from \"../../../../platform/extensions/common/extensions.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport { IProgressService } from \"../../../../platform/progress/common/progress.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport {\n\tViewPane,\n\tViewPaneShowActions,\n} from \"../../../browser/parts/views/viewPane.js\";\nimport type { IViewletViewOptions } from \"../../../browser/parts/views/viewsViewlet.js\";\nimport { Memento, type MementoObject } from \"../../../common/memento.js\";\nimport {\n\ttype IViewBadge,\n\tIViewDescriptorService,\n} from \"../../../common/views.js\";\nimport {\n\tIActivityService,\n\tNumberBadge,\n} from \"../../../services/activity/common/activity.js\";\nimport { IExtensionService } from \"../../../services/extensions/common/extensions.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport {\n\tExtensionKeyedWebviewOriginStore,\n\ttype IOverlayWebview,\n\tIWebviewService,\n\tWebviewContentPurpose,\n} from \"../../webview/browser/webview.js\";\nimport { WebviewWindowDragMonitor } from \"../../webview/browser/webviewWindowDragMonitor.js\";\nimport { IWebviewViewService, type WebviewView } from \"./webviewViewService.js\";\n\ndeclare const ResizeObserver: any;\n\nconst storageKeys = {\n\twebviewState: \"webviewState\",\n} as const;\n\nexport class WebviewViewPane extends ViewPane {\n\tprivate static _originStore?: ExtensionKeyedWebviewOriginStore;\n\n\tprivate static getOriginStore(\n\t\tstorageService: IStorageService,\n\t): ExtensionKeyedWebviewOriginStore {\n\t\tthis._originStore ??= new ExtensionKeyedWebviewOriginStore(\n\t\t\t\"webviewViews.origins\",\n\t\t\tstorageService,\n\t\t);\n\t\treturn this._originStore;\n\t}\n\n\tprivate readonly _webview = this._register(\n\t\tnew MutableDisposable<IOverlayWebview>(),\n\t);\n\tprivate readonly _webviewDisposables = this._register(\n\t\tnew DisposableStore(),\n\t);\n\tprivate _activated = false;\n\n\tprivate _container?: HTMLElement;\n\tprivate _rootContainer?: HTMLElement;\n\tprivate _resizeObserver?: any;\n\n\tprivate readonly defaultTitle: string;\n\tprivate setTitle: string | undefined;\n\n\tprivate badge: IViewBadge | undefined;\n\tprivate readonly activity = this._register(\n\t\tnew MutableDisposable<IDisposable>(),\n\t);\n\n\tprivate readonly memento: Memento;\n\tprivate readonly viewState: MementoObject;\n\tprivate readonly extensionId?: ExtensionIdentifier;\n\n\tprivate _repositionTimeout?: any;\n\n\tconstructor(\n\t\toptions: IViewletViewOptions,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IActivityService private readonly activityService: IActivityService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IProgressService private readonly progressService: IProgressService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IViewsService private readonly viewService: IViewsService,\n\t\t@IWebviewService private readonly webviewService: IWebviewService,\n\t\t@IWebviewViewService private readonly webviewViewService: IWebviewViewService,\n\t) {\n\t\tsuper({ ...options, titleMenuId: MenuId.ViewTitle, showActions: ViewPaneShowActions.WhenExpanded }, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService, hoverService);\n\t\tthis.extensionId = options.fromExtensionId;\n\t\tthis.defaultTitle = this.title;\n\n\t\tthis.memento = new Memento(`webviewView.${this.id}`, storageService);\n\t\tthis.viewState = this.memento.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\n\t\tthis._register(this.onDidChangeBodyVisibility(() => this.updateTreeVisibility()));\n\n\t\tthis._register(this.webviewViewService.onNewResolverRegistered(e => {\n\t\t\tif (e.viewType === this.id) {\n\t\t\t\t// Potentially re-activate if we have a new resolver\n\t\t\t\tthis.updateTreeVisibility();\n\t\t\t}\n\t\t}));\n\n\t\tthis.updateTreeVisibility();\n\t}\n\n\tprivate readonly _onDidChangeVisibility = this._register(\n\t\tnew Emitter<boolean>(),\n\t);\n\treadonly onDidChangeVisibility = this._onDidChangeVisibility.event;\n\n\tprivate readonly _onDispose = this._register(new Emitter<void>());\n\treadonly onDispose = this._onDispose.event;\n\n\toverride dispose() {\n\t\tthis._onDispose.fire();\n\n\t\tclearTimeout(this._repositionTimeout);\n\n\t\tsuper.dispose();\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\t\tthis._webview.value?.focus();\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tthis._container = container;\n\t\tthis._rootContainer = undefined;\n\n\t\tif (!this._resizeObserver) {\n\t\t\tthis._resizeObserver = new ResizeObserver(() => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.layoutWebview();\n\t\t\t\t}, 0);\n\t\t\t});\n\n\t\t\tthis._register(\n\t\t\t\ttoDisposable(() => {\n\t\t\t\t\tthis._resizeObserver.disconnect();\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis._resizeObserver.observe(container);\n\t\t}\n\t}\n\n\tpublic override saveState() {\n\t\tif (this._webview.value) {\n\t\t\tthis.viewState[storageKeys.webviewState] =\n\t\t\t\tthis._webview.value.state;\n\t\t}\n\n\t\tthis.memento.saveMemento();\n\t\tsuper.saveState();\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\n\t\tthis.layoutWebview(new Dimension(width, height));\n\t}\n\n\tprivate updateTreeVisibility() {\n\t\tif (this.isBodyVisible()) {\n\t\t\tthis.activate();\n\t\t\tthis._webview.value?.claim(\n\t\t\t\tthis,\n\t\t\t\tgetWindow(this.element),\n\t\t\t\tundefined,\n\t\t\t);\n\t\t} else {\n\t\t\tthis._webview.value?.release(this);\n\t\t}\n\t}\n\n\tprivate activate() {\n\t\tif (this._activated) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._activated = true;\n\n\t\tconst origin = this.extensionId\n\t\t\t? WebviewViewPane.getOriginStore(this.storageService).getOrigin(\n\t\t\t\t\tthis.id,\n\t\t\t\t\tthis.extensionId,\n\t\t\t\t)\n\t\t\t: undefined;\n\t\tconst webview = this.webviewService.createWebviewOverlay({\n\t\t\torigin,\n\t\t\tprovidedViewType: this.id,\n\t\t\ttitle: this.title,\n\t\t\toptions: { purpose: WebviewContentPurpose.WebviewView },\n\t\t\tcontentOptions: {},\n\t\t\textension: this.extensionId ? { id: this.extensionId } : undefined,\n\t\t});\n\t\twebview.state = this.viewState[storageKeys.webviewState];\n\t\tthis._webview.value = webview;\n\n\t\tif (this._container) {\n\t\t\tthis.layoutWebview();\n\t\t}\n\n\t\tthis._webviewDisposables.add(\n\t\t\ttoDisposable(() => {\n\t\t\t\tthis._webview.value?.release(this);\n\t\t\t}),\n\t\t);\n\n\t\tthis._webviewDisposables.add(\n\t\t\twebview.onDidUpdateState(() => {\n\t\t\t\tthis.viewState[storageKeys.webviewState] = webview.state;\n\t\t\t}),\n\t\t);\n\n\t\t// Re-dispatch all drag events back to the drop target to support view drag drop\n\t\tfor (const event of [\n\t\t\tEventType.DRAG,\n\t\t\tEventType.DRAG_END,\n\t\t\tEventType.DRAG_ENTER,\n\t\t\tEventType.DRAG_LEAVE,\n\t\t\tEventType.DRAG_START,\n\t\t]) {\n\t\t\tthis._webviewDisposables.add(\n\t\t\t\taddDisposableListener(\n\t\t\t\t\tthis._webview.value.container,\n\t\t\t\t\tevent,\n\t\t\t\t\t(e) => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\tthis.dropTargetElement.dispatchEvent(\n\t\t\t\t\t\t\tnew DragEvent(e.type, e),\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tthis._webviewDisposables.add(\n\t\t\tnew WebviewWindowDragMonitor(\n\t\t\t\tgetWindow(this.element),\n\t\t\t\t() => this._webview.value,\n\t\t\t),\n\t\t);\n\n\t\tconst source = this._webviewDisposables.add(\n\t\t\tnew CancellationTokenSource(),\n\t\t);\n\n\t\tthis.withProgress(async () => {\n\t\t\tawait this.extensionService.activateByEvent(`onView:${this.id}`);\n\n\t\t\tconst self = this;\n\t\t\tconst webviewView: WebviewView = {\n\t\t\t\twebview,\n\t\t\t\tonDidChangeVisibility: this.onDidChangeBodyVisibility,\n\t\t\t\tonDispose: this.onDispose,\n\n\t\t\t\tget title(): string | undefined {\n\t\t\t\t\treturn self.setTitle;\n\t\t\t\t},\n\t\t\t\tset title(value: string | undefined) {\n\t\t\t\t\tself.updateTitle(value);\n\t\t\t\t},\n\n\t\t\t\tget description(): string | undefined {\n\t\t\t\t\treturn self.titleDescription;\n\t\t\t\t},\n\t\t\t\tset description(value: string | undefined) {\n\t\t\t\t\tself.updateTitleDescription(value);\n\t\t\t\t},\n\n\t\t\t\tget badge(): IViewBadge | undefined {\n\t\t\t\t\treturn self.badge;\n\t\t\t\t},\n\t\t\t\tset badge(badge: IViewBadge | undefined) {\n\t\t\t\t\tself.updateBadge(badge);\n\t\t\t\t},\n\n\t\t\t\tdispose: () => {\n\t\t\t\t\t// Only reset and clear the webview itself. Don't dispose of the view container\n\t\t\t\t\tthis._activated = false;\n\t\t\t\t\tthis._webview.clear();\n\t\t\t\t\tthis._webviewDisposables.clear();\n\t\t\t\t},\n\n\t\t\t\tshow: (preserveFocus) => {\n\t\t\t\t\tthis.viewService.openView(this.id, !preserveFocus);\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tawait this.webviewViewService.resolve(\n\t\t\t\tthis.id,\n\t\t\t\twebviewView,\n\t\t\t\tsource.token,\n\t\t\t);\n\t\t});\n\t}\n\n\tprotected override updateTitle(value: string | undefined) {\n\t\tthis.setTitle = value;\n\t\tsuper.updateTitle(\n\t\t\ttypeof value === \"string\" ? value : this.defaultTitle,\n\t\t);\n\t}\n\n\tprotected updateBadge(badge: IViewBadge | undefined) {\n\t\tif (\n\t\t\tthis.badge?.value === badge?.value &&\n\t\t\tthis.badge?.tooltip === badge?.tooltip\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.badge = badge;\n\t\tif (badge) {\n\t\t\tconst activity = {\n\t\t\t\tbadge: new NumberBadge(badge.value, () => badge.tooltip),\n\t\t\t\tpriority: 150,\n\t\t\t};\n\t\t\tthis.activity.value = this.activityService.showViewActivity(\n\t\t\t\tthis.id,\n\t\t\t\tactivity,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate async withProgress(task: () => Promise<void>): Promise<void> {\n\t\treturn this.progressService.withProgress(\n\t\t\t{ location: this.id, delay: 500 },\n\t\t\ttask,\n\t\t);\n\t}\n\n\toverride onDidScrollRoot() {\n\t\tthis.layoutWebview();\n\t}\n\n\tprivate doLayoutWebview(dimension?: Dimension) {\n\t\tconst webviewEntry = this._webview.value;\n\t\tif (!this._container || !webviewEntry) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._rootContainer || !this._rootContainer.isConnected) {\n\t\t\tthis._rootContainer = this.findRootContainer(this._container);\n\t\t}\n\n\t\twebviewEntry.layoutWebviewOverElement(\n\t\t\tthis._container,\n\t\t\tdimension,\n\t\t\tthis._rootContainer,\n\t\t);\n\t}\n\n\tprivate layoutWebview(dimension?: Dimension) {\n\t\tthis.doLayoutWebview(dimension);\n\t\t// Temporary fix for https://github.com/microsoft/vscode/issues/110450\n\t\t// There is an animation that lasts about 200ms, update the webview positioning once this animation is complete.\n\t\tclearTimeout(this._repositionTimeout);\n\t\tthis._repositionTimeout = setTimeout(\n\t\t\t() => this.doLayoutWebview(dimension),\n\t\t\t200,\n\t\t);\n\t}\n\n\tprivate findRootContainer(container: HTMLElement): HTMLElement | undefined {\n\t\treturn (\n\t\t\tfindParentWithClass(container, \"monaco-scrollable-element\") ??\n\t\t\tundefined\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
