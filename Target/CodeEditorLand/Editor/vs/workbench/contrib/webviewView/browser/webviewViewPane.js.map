{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/webviewView/browser/webviewViewPane.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableListener, Dimension, EventType, findParentWithClass, getWindow } from '../../../../base/browser/dom.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { DisposableStore, IDisposable, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { ExtensionIdentifier } from '../../../../platform/extensions/common/extensions.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { IProgressService } from '../../../../platform/progress/common/progress.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../platform/storage/common/storage.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { ViewPane, ViewPaneShowActions } from '../../../browser/parts/views/viewPane.js';\nimport { IViewletViewOptions } from '../../../browser/parts/views/viewsViewlet.js';\nimport { Memento, MementoObject } from '../../../common/memento.js';\nimport { IViewBadge, IViewDescriptorService } from '../../../common/views.js';\nimport { IViewsService } from '../../../services/views/common/viewsService.js';\nimport { ExtensionKeyedWebviewOriginStore, IOverlayWebview, IWebviewService, WebviewContentPurpose } from '../../webview/browser/webview.js';\nimport { WebviewWindowDragMonitor } from '../../webview/browser/webviewWindowDragMonitor.js';\nimport { IWebviewViewService, WebviewView } from './webviewViewService.js';\nimport { IActivityService, NumberBadge } from '../../../services/activity/common/activity.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\n\ndeclare const ResizeObserver: any;\n\nconst storageKeys = {\n\twebviewState: 'webviewState',\n} as const;\n\nexport class WebviewViewPane extends ViewPane {\n\n\tprivate static _originStore?: ExtensionKeyedWebviewOriginStore;\n\n\tprivate static getOriginStore(storageService: IStorageService): ExtensionKeyedWebviewOriginStore {\n\t\tthis._originStore ??= new ExtensionKeyedWebviewOriginStore('webviewViews.origins', storageService);\n\t\treturn this._originStore;\n\t}\n\n\tprivate readonly _webview = this._register(new MutableDisposable<IOverlayWebview>());\n\tprivate readonly _webviewDisposables = this._register(new DisposableStore());\n\tprivate _activated = false;\n\n\tprivate _container?: HTMLElement;\n\tprivate _rootContainer?: HTMLElement;\n\tprivate _resizeObserver?: any;\n\n\tprivate readonly defaultTitle: string;\n\tprivate setTitle: string | undefined;\n\n\tprivate badge: IViewBadge | undefined;\n\tprivate readonly activity = this._register(new MutableDisposable<IDisposable>());\n\n\tprivate readonly memento: Memento;\n\tprivate readonly viewState: MementoObject;\n\tprivate readonly extensionId?: ExtensionIdentifier;\n\n\tprivate _repositionTimeout?: any;\n\n\tconstructor(\n\t\toptions: IViewletViewOptions,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IActivityService private readonly activityService: IActivityService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IProgressService private readonly progressService: IProgressService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IViewsService private readonly viewService: IViewsService,\n\t\t@IWebviewService private readonly webviewService: IWebviewService,\n\t\t@IWebviewViewService private readonly webviewViewService: IWebviewViewService,\n\t) {\n\t\tsuper({ ...options, titleMenuId: MenuId.ViewTitle, showActions: ViewPaneShowActions.WhenExpanded }, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService, hoverService);\n\t\tthis.extensionId = options.fromExtensionId;\n\t\tthis.defaultTitle = this.title;\n\n\t\tthis.memento = new Memento(`webviewView.${this.id}`, storageService);\n\t\tthis.viewState = this.memento.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\n\t\tthis._register(this.onDidChangeBodyVisibility(() => this.updateTreeVisibility()));\n\n\t\tthis._register(this.webviewViewService.onNewResolverRegistered(e => {\n\t\t\tif (e.viewType === this.id) {\n\t\t\t\t// Potentially re-activate if we have a new resolver\n\t\t\t\tthis.updateTreeVisibility();\n\t\t\t}\n\t\t}));\n\n\t\tthis.updateTreeVisibility();\n\t}\n\n\tprivate readonly _onDidChangeVisibility = this._register(new Emitter<boolean>());\n\treadonly onDidChangeVisibility = this._onDidChangeVisibility.event;\n\n\tprivate readonly _onDispose = this._register(new Emitter<void>());\n\treadonly onDispose = this._onDispose.event;\n\n\toverride dispose() {\n\t\tthis._onDispose.fire();\n\n\t\tclearTimeout(this._repositionTimeout);\n\n\t\tsuper.dispose();\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\t\tthis._webview.value?.focus();\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tthis._container = container;\n\t\tthis._rootContainer = undefined;\n\n\t\tif (!this._resizeObserver) {\n\t\t\tthis._resizeObserver = new ResizeObserver(() => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.layoutWebview();\n\t\t\t\t}, 0);\n\t\t\t});\n\n\t\t\tthis._register(toDisposable(() => {\n\t\t\t\tthis._resizeObserver.disconnect();\n\t\t\t}));\n\t\t\tthis._resizeObserver.observe(container);\n\t\t}\n\t}\n\n\tpublic override saveState() {\n\t\tif (this._webview.value) {\n\t\t\tthis.viewState[storageKeys.webviewState] = this._webview.value.state;\n\t\t}\n\n\t\tthis.memento.saveMemento();\n\t\tsuper.saveState();\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\n\t\tthis.layoutWebview(new Dimension(width, height));\n\t}\n\n\tprivate updateTreeVisibility() {\n\t\tif (this.isBodyVisible()) {\n\t\t\tthis.activate();\n\t\t\tthis._webview.value?.claim(this, getWindow(this.element), undefined);\n\t\t} else {\n\t\t\tthis._webview.value?.release(this);\n\t\t}\n\t}\n\n\tprivate activate() {\n\t\tif (this._activated) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._activated = true;\n\n\t\tconst origin = this.extensionId ? WebviewViewPane.getOriginStore(this.storageService).getOrigin(this.id, this.extensionId) : undefined;\n\t\tconst webview = this.webviewService.createWebviewOverlay({\n\t\t\torigin,\n\t\t\tprovidedViewType: this.id,\n\t\t\ttitle: this.title,\n\t\t\toptions: { purpose: WebviewContentPurpose.WebviewView },\n\t\t\tcontentOptions: {},\n\t\t\textension: this.extensionId ? { id: this.extensionId } : undefined\n\t\t});\n\t\twebview.state = this.viewState[storageKeys.webviewState];\n\t\tthis._webview.value = webview;\n\n\t\tif (this._container) {\n\t\t\tthis.layoutWebview();\n\t\t}\n\n\t\tthis._webviewDisposables.add(toDisposable(() => {\n\t\t\tthis._webview.value?.release(this);\n\t\t}));\n\n\t\tthis._webviewDisposables.add(webview.onDidUpdateState(() => {\n\t\t\tthis.viewState[storageKeys.webviewState] = webview.state;\n\t\t}));\n\n\t\t// Re-dispatch all drag events back to the drop target to support view drag drop\n\t\tfor (const event of [EventType.DRAG, EventType.DRAG_END, EventType.DRAG_ENTER, EventType.DRAG_LEAVE, EventType.DRAG_START]) {\n\t\t\tthis._webviewDisposables.add(addDisposableListener(this._webview.value.container, event, e => {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopImmediatePropagation();\n\t\t\t\tthis.dropTargetElement.dispatchEvent(new DragEvent(e.type, e));\n\t\t\t}));\n\t\t}\n\n\t\tthis._webviewDisposables.add(new WebviewWindowDragMonitor(getWindow(this.element), () => this._webview.value));\n\n\t\tconst source = this._webviewDisposables.add(new CancellationTokenSource());\n\n\t\tthis.withProgress(async () => {\n\t\t\tawait this.extensionService.activateByEvent(`onView:${this.id}`);\n\n\t\t\tconst self = this;\n\t\t\tconst webviewView: WebviewView = {\n\t\t\t\twebview,\n\t\t\t\tonDidChangeVisibility: this.onDidChangeBodyVisibility,\n\t\t\t\tonDispose: this.onDispose,\n\n\t\t\t\tget title(): string | undefined { return self.setTitle; },\n\t\t\t\tset title(value: string | undefined) { self.updateTitle(value); },\n\n\t\t\t\tget description(): string | undefined { return self.titleDescription; },\n\t\t\t\tset description(value: string | undefined) { self.updateTitleDescription(value); },\n\n\t\t\t\tget badge(): IViewBadge | undefined { return self.badge; },\n\t\t\t\tset badge(badge: IViewBadge | undefined) { self.updateBadge(badge); },\n\n\t\t\t\tdispose: () => {\n\t\t\t\t\t// Only reset and clear the webview itself. Don't dispose of the view container\n\t\t\t\t\tthis._activated = false;\n\t\t\t\t\tthis._webview.clear();\n\t\t\t\t\tthis._webviewDisposables.clear();\n\t\t\t\t},\n\n\t\t\t\tshow: (preserveFocus) => {\n\t\t\t\t\tthis.viewService.openView(this.id, !preserveFocus);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tawait this.webviewViewService.resolve(this.id, webviewView, source.token);\n\t\t});\n\t}\n\n\tprotected override updateTitle(value: string | undefined) {\n\t\tthis.setTitle = value;\n\t\tsuper.updateTitle(typeof value === 'string' ? value : this.defaultTitle);\n\t}\n\n\tprotected updateBadge(badge: IViewBadge | undefined) {\n\n\t\tif (this.badge?.value === badge?.value &&\n\t\t\tthis.badge?.tooltip === badge?.tooltip) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.badge = badge;\n\t\tif (badge) {\n\t\t\tconst activity = {\n\t\t\t\tbadge: new NumberBadge(badge.value, () => badge.tooltip),\n\t\t\t\tpriority: 150\n\t\t\t};\n\t\t\tthis.activity.value = this.activityService.showViewActivity(this.id, activity);\n\t\t}\n\t}\n\n\tprivate async withProgress(task: () => Promise<void>): Promise<void> {\n\t\treturn this.progressService.withProgress({ location: this.id, delay: 500 }, task);\n\t}\n\n\toverride onDidScrollRoot() {\n\t\tthis.layoutWebview();\n\t}\n\n\tprivate doLayoutWebview(dimension?: Dimension) {\n\t\tconst webviewEntry = this._webview.value;\n\t\tif (!this._container || !webviewEntry) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._rootContainer || !this._rootContainer.isConnected) {\n\t\t\tthis._rootContainer = this.findRootContainer(this._container);\n\t\t}\n\n\t\twebviewEntry.layoutWebviewOverElement(this._container, dimension, this._rootContainer);\n\t}\n\n\tprivate layoutWebview(dimension?: Dimension) {\n\t\tthis.doLayoutWebview(dimension);\n\t\t// Temporary fix for https://github.com/microsoft/vscode/issues/110450\n\t\t// There is an animation that lasts about 200ms, update the webview positioning once this animation is complete.\n\t\tclearTimeout(this._repositionTimeout);\n\t\tthis._repositionTimeout = setTimeout(() => this.doLayoutWebview(dimension), 200);\n\t}\n\n\tprivate findRootContainer(container: HTMLElement): HTMLElement | undefined {\n\t\treturn findParentWithClass(container, 'monaco-scrollable-element') ?? undefined;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
