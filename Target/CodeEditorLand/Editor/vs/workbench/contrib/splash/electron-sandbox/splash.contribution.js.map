{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/splash/electron-sandbox/splash.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { WorkbenchPhase, registerWorkbenchContribution2 } from '../../../common/contributions.js';\nimport { ISplashStorageService } from '../browser/splash.js';\nimport { INativeHostService } from '../../../../platform/native/common/native.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { PartsSplash } from '../browser/partsSplash.js';\nimport { IPartsSplash } from '../../../../platform/theme/common/themeService.js';\n\nclass SplashStorageService implements ISplashStorageService {\n\t_serviceBrand: undefined;\n\treadonly saveWindowSplash: (splash: IPartsSplash) => Promise<void>;\n\n\tconstructor(@INativeHostService nativeHostService: INativeHostService) {\n\t\tthis.saveWindowSplash = nativeHostService.saveWindowSplash.bind(nativeHostService);\n\t}\n}\n\nregisterSingleton(ISplashStorageService, SplashStorageService, InstantiationType.Delayed);\n\nregisterWorkbenchContribution2(\n\tPartsSplash.ID,\n\tPartsSplash,\n\tWorkbenchPhase.BlockStartup\n);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,gBAAgB,sCAAsC;AAC/D,SAAS,6BAA6B;AACtC,SAAS,0BAA0B;AACnC,SAAS,mBAAmB,yBAAyB;AACrD,SAAS,mBAAmB;AAC5B,SAAS,oBAAoB;AAE7B,IAAM,uBAAN,MAA4D;AAAA,EAZ5D,OAY4D;AAAA;AAAA;AAAA,EAC3D;AAAA,EACS;AAAA,EAET,YAAgC,mBAAuC;AACtE,SAAK,mBAAmB,kBAAkB,iBAAiB,KAAK,iBAAiB;AAAA,EAClF;AACD;AAPM,uBAAN;AAAA,EAIc;AAAA,GAJR;AASN,kBAAkB,uBAAuB,sBAAsB,kBAAkB,OAAO;AAExF;AAAA,EACC,YAAY;AAAA,EACZ;AAAA,EACA,eAAe;AAChB;",
  "names": []
}
