{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/replNotebook/browser/replEditorInput.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IReference } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IResolvedTextEditorModel, ITextModelService } from '../../../../editor/common/services/resolverService.js';\nimport { ITextResourceConfigurationService } from '../../../../editor/common/services/textResourceConfiguration.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IFileDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { EditorInputCapabilities } from '../../../common/editor.js';\nimport { IInteractiveHistoryService } from '../../interactive/browser/interactiveHistoryService.js';\nimport { NotebookTextModel } from '../../notebook/common/model/notebookTextModel.js';\nimport { CellEditType, CellKind, NotebookSetting } from '../../notebook/common/notebookCommon.js';\nimport { ICompositeNotebookEditorInput, NotebookEditorInput } from '../../notebook/common/notebookEditorInput.js';\nimport { INotebookEditorModelResolverService } from '../../notebook/common/notebookEditorModelResolverService.js';\nimport { INotebookService } from '../../notebook/common/notebookService.js';\nimport { ICustomEditorLabelService } from '../../../services/editor/common/customEditorLabelService.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { IFilesConfigurationService } from '../../../services/filesConfiguration/common/filesConfigurationService.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { localize } from '../../../../nls.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\n\nconst replTabIcon = registerIcon('repl-editor-label-icon', Codicon.debugLineByLine, localize('replEditorLabelIcon', 'Icon of the REPL editor label.'));\n\nexport class ReplEditorInput extends NotebookEditorInput implements ICompositeNotebookEditorInput {\n\tstatic override ID: string = 'workbench.editorinputs.replEditorInput';\n\n\tprivate inputModelRef: IReference<IResolvedTextEditorModel> | undefined;\n\tprivate isScratchpad: boolean;\n\tprivate label: string;\n\tprivate isDisposing = false;\n\n\tconstructor(\n\t\tresource: URI,\n\t\tlabel: string | undefined,\n\t\t@INotebookService _notebookService: INotebookService,\n\t\t@INotebookEditorModelResolverService _notebookModelResolverService: INotebookEditorModelResolverService,\n\t\t@IFileDialogService _fileDialogService: IFileDialogService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IFilesConfigurationService filesConfigurationService: IFilesConfigurationService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@ITextResourceConfigurationService textResourceConfigurationService: ITextResourceConfigurationService,\n\t\t@ICustomEditorLabelService customEditorLabelService: ICustomEditorLabelService,\n\t\t@IInteractiveHistoryService public readonly historyService: IInteractiveHistoryService,\n\t\t@ITextModelService private readonly _textModelService: ITextModelService,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tsuper(resource, undefined, 'jupyter-notebook', {}, _notebookService, _notebookModelResolverService, _fileDialogService, labelService, fileService, filesConfigurationService, extensionService, editorService, textResourceConfigurationService, customEditorLabelService);\n\t\tthis.isScratchpad = resource.scheme === 'untitled' && configurationService.getValue<boolean>(NotebookSetting.InteractiveWindowPromptToSave) !== true;\n\t\tthis.label = label ?? this.createEditorLabel(resource);\n\t}\n\n\toverride getIcon(): ThemeIcon | undefined {\n\t\treturn replTabIcon;\n\t}\n\n\tprivate createEditorLabel(resource: URI | undefined): string {\n\t\tif (!resource) {\n\t\t\treturn 'REPL';\n\t\t}\n\n\t\tif (resource.scheme === 'untitled') {\n\t\t\tconst match = new RegExp('Untitled-(\\\\d+)\\.').exec(resource.path);\n\t\t\tif (match?.length === 2) {\n\t\t\t\treturn `REPL - ${match[1]}`;\n\t\t\t}\n\t\t}\n\n\t\tconst filename = resource.path.split('/').pop();\n\t\treturn filename ? `REPL - ${filename}` : 'REPL';\n\t}\n\n\toverride get typeId(): string {\n\t\treturn ReplEditorInput.ID;\n\t}\n\n\toverride get editorId(): string | undefined {\n\t\treturn 'repl';\n\t}\n\n\toverride getName() {\n\t\treturn this.label;\n\t}\n\n\tget editorInputs() {\n\t\treturn [this];\n\t}\n\n\toverride get capabilities() {\n\t\tconst capabilities = super.capabilities;\n\t\tconst scratchPad = this.isScratchpad ? EditorInputCapabilities.Scratchpad : 0;\n\n\t\treturn capabilities\n\t\t\t| EditorInputCapabilities.Readonly\n\t\t\t| scratchPad;\n\t}\n\n\toverride async resolve() {\n\t\tconst model = await super.resolve();\n\t\tif (model) {\n\t\t\tawait this.ensureInputBoxCell(model.notebook);\n\t\t}\n\n\t\treturn model;\n\t}\n\n\tprivate async ensureInputBoxCell(notebook: NotebookTextModel) {\n\t\tconst lastCell = notebook.cells[notebook.cells.length - 1];\n\n\t\tif (!lastCell || lastCell.cellKind === CellKind.Markup || lastCell.outputs.length > 0 || lastCell.internalMetadata.executionOrder !== undefined) {\n\t\t\tnotebook.applyEdits([\n\t\t\t\t{\n\t\t\t\t\teditType: CellEditType.Replace,\n\t\t\t\t\tindex: notebook.cells.length,\n\t\t\t\t\tcount: 0,\n\t\t\t\t\tcells: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcellKind: CellKind.Code,\n\t\t\t\t\t\t\tlanguage: 'python',\n\t\t\t\t\t\t\tmime: undefined,\n\t\t\t\t\t\t\toutputs: [],\n\t\t\t\t\t\t\tsource: ''\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t], true, undefined, () => undefined, undefined, false);\n\t\t}\n\t}\n\n\tasync resolveInput(notebook: NotebookTextModel) {\n\t\tif (this.inputModelRef) {\n\t\t\treturn this.inputModelRef.object.textEditorModel;\n\t\t}\n\t\tconst lastCell = notebook.cells[notebook.cells.length - 1];\n\t\tif (!lastCell) {\n\t\t\tthrow new Error('The REPL editor requires at least one cell for the input box.');\n\t\t}\n\n\t\tthis.inputModelRef = await this._textModelService.createModelReference(lastCell.uri);\n\t\treturn this.inputModelRef.object.textEditorModel;\n\t}\n\n\toverride dispose() {\n\t\tif (!this.isDisposing) {\n\t\t\tthis.isDisposing = true;\n\t\t\tthis.editorModelReference?.object.revert({ soft: true });\n\t\t\tthis.inputModelRef?.dispose();\n\t\t\tsuper.dispose();\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
