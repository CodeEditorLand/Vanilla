var x=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var k=(i,o,t,e)=>{for(var r=e>1?void 0:e?T(o,t):o,d=i.length-1,s;d>=0;d--)(s=i[d])&&(r=(e?s(o,t,r):s(r))||r);return e&&r&&x(o,t,r),r},l=(i,o)=>(t,e)=>o(t,e,i);import{KeyCode as g,KeyMod as v}from"../../../../base/common/keyCodes.js";import{Disposable as S}from"../../../../base/common/lifecycle.js";import{parse as D}from"../../../../base/common/marshalling.js";import{extname as P,isEqual as O}from"../../../../base/common/resources.js";import{isFalsyOrWhitespace as _}from"../../../../base/common/strings.js";import{assertType as K}from"../../../../base/common/types.js";import{URI as h}from"../../../../base/common/uri.js";import{IBulkEditService as z}from"../../../../editor/browser/services/bulkEditService.js";import"../../../../editor/browser/widget/codeEditor/codeEditorWidget.js";import{PLAINTEXT_LANGUAGE_ID as A}from"../../../../editor/common/languages/modesRegistry.js";import{localize2 as M}from"../../../../nls.js";import{Action2 as U,MenuId as F,registerAction2 as L}from"../../../../platform/actions/common/actions.js";import{IConfigurationService as V}from"../../../../platform/configuration/common/configuration.js";import{ContextKeyExpr as u}from"../../../../platform/contextkey/common/contextkey.js";import{SyncDescriptor as B}from"../../../../platform/instantiation/common/descriptors.js";import{IInstantiationService as R}from"../../../../platform/instantiation/common/instantiation.js";import{KeybindingsRegistry as q,KeybindingWeight as H}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{Registry as w}from"../../../../platform/registry/common/platform.js";import{EditorPaneDescriptor as G}from"../../../browser/editor.js";import{registerWorkbenchContribution2 as C,WorkbenchPhase as W}from"../../../common/contributions.js";import{EditorExtensions as N}from"../../../common/editor.js";import"../../../common/editor/editorInput.js";import{IEditorResolverService as j,RegisteredEditorPriority as J}from"../../../services/editor/common/editorResolverService.js";import{IEditorService as X}from"../../../services/editor/common/editorService.js";import{IExtensionService as Q}from"../../../services/extensions/common/extensions.js";import{IViewsService as Y}from"../../../services/views/common/viewsService.js";import"../../../services/workingCopy/common/workingCopy.js";import{IWorkingCopyEditorService as Z}from"../../../services/workingCopy/common/workingCopyEditorService.js";import{ResourceNotebookCellEdit as $}from"../../bulkEdit/browser/bulkCellEdits.js";import{getReplView as ee}from"../../debug/browser/repl.js";import{REPL_VIEW_ID as te}from"../../debug/common/debug.js";import{IInteractiveHistoryService as oe}from"../../interactive/browser/interactiveHistoryService.js";import{NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT as y}from"../../notebook/browser/controller/coreActions.js";import"../../notebook/browser/notebookBrowser.js";import"../../notebook/browser/notebookEditorWidget.js";import*as re from"../../notebook/browser/notebookIcons.js";import{INotebookEditorService as ie}from"../../notebook/browser/services/notebookEditorService.js";import{CellEditType as ne,CellKind as de,NotebookSetting as se,NotebookWorkingCopyTypeIdentifier as ae,REPL_EDITOR_ID as ce}from"../../notebook/common/notebookCommon.js";import"../../notebook/common/notebookEditorInput.js";import{INotebookEditorModelResolverService as pe}from"../../notebook/common/notebookEditorModelResolverService.js";import{INotebookService as le}from"../../notebook/common/notebookService.js";import{ReplEditor as ue}from"./replEditor.js";import{ReplEditorInput as p}from"./replEditorInput.js";class Ee{canSerialize(o){return o.typeId===p.ID}serialize(o){K(o instanceof p);const t={resource:o.resource,preferredResource:o.preferredResource,viewType:o.viewType,options:o.options,label:o.getName()};return JSON.stringify(t)}deserialize(o,t){const e=D(t);if(!e)return;const{resource:r,viewType:d}=e;return!e||!h.isUri(r)||typeof d!="string"?void 0:o.createInstance(p,r,e.label)}}w.as(N.EditorPane).registerEditorPane(G.create(ue,ce,"REPL Editor"),[new B(p)]),w.as(N.EditorFactory).registerEditorSerializer(p.ID,Ee);let E=class extends S{constructor(t,e,r,d,s){super();this.notebookEditorModelResolverService=r;this.instantiationService=d;this.configurationService=s;e.registerEditor(" ",{id:"repl",label:"repl Editor",priority:J.option},{canSupportResource:c=>t.getNotebookTextModel(c)!==void 0,singlePerResource:!0},{createUntitledEditorInput:async({resource:c,options:n})=>{const a=this.configurationService.getValue(se.InteractiveWindowPromptToSave)!==!0,f=await this.notebookEditorModelResolverService.resolve({untitledResource:c},"jupyter-notebook",{scratchpad:a});f.object.notebook.onWillDispose(()=>{f.dispose()});const I=n?.label??void 0;return{editor:this.instantiationService.createInstance(p,c,I),options:n}},createEditorInput:async({resource:c,options:n})=>{const a=n?.label??void 0;return{editor:this.instantiationService.createInstance(p,c,a),options:n}}})}static ID="workbench.contrib.replDocument"};E=k([l(0,le),l(1,j),l(2,pe),l(3,R),l(4,V)],E);let m=class extends S{constructor(t,e,r){super();this.instantiationService=t;this.workingCopyEditorService=e;this.extensionService=r;this._installHandler()}static ID="workbench.contrib.replWorkingCopyEditorHandler";handles(t){const e=this._getViewType(t);return!!e&&e==="jupyter-notebook"&&P(t.resource)===".replNotebook"}isOpen(t,e){return this.handles(t)?e instanceof p&&O(t.resource,e.resource):!1}createEditor(t){return this.instantiationService.createInstance(p,t.resource,void 0)}async _installHandler(){await this.extensionService.whenInstalledExtensionsRegistered(),this._register(this.workingCopyEditorService.registerHandler(this))}_getViewType(t){return ae.parse(t.typeId)}};m=k([l(0,R),l(1,Z),l(2,Q)],m),C(m.ID,m,W.BlockRestore),C(E.ID,E,W.BlockRestore),L(class extends U{constructor(){super({id:"repl.execute",title:M("repl.execute","Execute REPL input"),category:"REPL",keybinding:[{when:u.equals("activeEditor","workbench.editor.repl"),primary:v.CtrlCmd|g.Enter,weight:y},{when:u.and(u.equals("activeEditor","workbench.editor.repl"),u.equals("config.interactiveWindow.executeWithShiftEnter",!0)),primary:v.Shift|g.Enter,weight:y},{when:u.and(u.equals("activeEditor","workbench.editor.repl"),u.equals("config.interactiveWindow.executeWithShiftEnter",!1)),primary:g.Enter,weight:y}],menu:[{id:F.ReplInputExecute}],icon:re.executeIcon,f1:!1,metadata:{description:"Execute the Contents of the Input Box",args:[{name:"resource",description:"Interactive resource Uri",isOptional:!0}]}})}async run(i,o){const t=i.get(X),e=i.get(z),r=i.get(oe),d=i.get(ie);let s;if(o){const c=h.revive(o),n=t.findEditors(c);for(const a of n)if(a.editor.typeId===p.ID){s=(await t.openEditor(a.editor,a.groupId))?.getControl();break}}else s=t.activeEditorPane?.getControl();s&&me(e,r,d,s)}});async function me(i,o,t,e){if(e&&e.notebookEditor&&e.codeEditor){const r=e.notebookEditor.textModel,d=e.codeEditor.getModel(),c=e.notebookEditor.activeKernel?.supportedLanguages[0]??A;if(r&&d){const n=r.length-1,a=d.getValue();if(_(a))return;o.replaceLast(r.uri,a),o.addToHistory(r.uri,""),d.setValue(""),r.cells[n].resetTextBuffer(d.getTextBuffer());const f=e.notebookEditor.notebookOptions.getDisplayOptions().interactiveWindowCollapseCodeCells==="fromEditor"?{inputCollapsed:!1,outputCollapsed:!1}:void 0;await i.apply([new $(r.uri,{editType:ne.Replace,index:n,count:0,cells:[{cellKind:de.Code,mime:void 0,language:c,source:a,outputs:[],metadata:{},collapseState:f}]})]);const I={start:n,end:n+1};e.notebookEditor.revealCellRangeInView(I),await e.notebookEditor.executeNotebookCells(e.notebookEditor.getCellsInRange({start:n,end:n+1}));const b=t.getNotebookEditor(e.notebookEditor.getId());b&&(b.setSelections([I]),b.setFocus(I))}}}q.registerCommandAndKeybindingRule({id:"list.find.replInputFocus",weight:H.WorkbenchContrib+1,when:u.equals("view",te),primary:v.CtrlCmd|v.Alt|g.KeyF,secondary:[g.F3],handler:i=>{ee(i.get(Y))?.openFind()}});export{E as ReplDocumentContribution};
