var S=Object.defineProperty;var E=Object.getOwnPropertyDescriptor;var c=(s,r,e,t)=>{for(var o=t>1?void 0:t?E(r,e):r,l=s.length-1,d;l>=0;l--)(d=s[l])&&(o=(t?d(r,e,o):d(o))||o);return t&&o&&S(r,e,o),o},i=(s,r)=>(e,t)=>r(e,t,s);import"../../../../base/common/lifecycle.js";import"../../../../base/common/uri.js";import{ITextModelService as x}from"../../../../editor/common/services/resolverService.js";import{ITextResourceConfigurationService as R}from"../../../../editor/common/services/textResourceConfiguration.js";import{IConfigurationService as M}from"../../../../platform/configuration/common/configuration.js";import{IFileDialogService as C}from"../../../../platform/dialogs/common/dialogs.js";import{IFileService as y}from"../../../../platform/files/common/files.js";import{ILabelService as T}from"../../../../platform/label/common/label.js";import{EditorInputCapabilities as a}from"../../../common/editor.js";import{IInteractiveHistoryService as L}from"../../interactive/browser/interactiveHistoryService.js";import"../../notebook/common/model/notebookTextModel.js";import{CellEditType as N,CellKind as p,NotebookSetting as k}from"../../notebook/common/notebookCommon.js";import{NotebookEditorInput as w}from"../../notebook/common/notebookEditorInput.js";import{INotebookEditorModelResolverService as P}from"../../notebook/common/notebookEditorModelResolverService.js";import{INotebookService as D}from"../../notebook/common/notebookService.js";import{ICustomEditorLabelService as F}from"../../../services/editor/common/customEditorLabelService.js";import{IEditorService as j}from"../../../services/editor/common/editorService.js";import{IExtensionService as U}from"../../../services/extensions/common/extensions.js";import{IFilesConfigurationService as B}from"../../../services/filesConfiguration/common/filesConfigurationService.js";import"../../../../base/common/themables.js";import{Codicon as K}from"../../../../base/common/codicons.js";import{localize as H}from"../../../../nls.js";import{registerIcon as $}from"../../../../platform/theme/common/iconRegistry.js";const q=$("repl-editor-label-icon",K.debugLineByLine,H("replEditorLabelIcon","Icon of the REPL editor label."));let n=class extends w{constructor(e,t,o,l,d,u,f,m,v,I,h,b,z,O,g){super(e,void 0,"jupyter-notebook",{},o,l,d,u,f,m,v,I,h,b);this.historyService=z;this._textModelService=O;this.isScratchpad=e.scheme==="untitled"&&g.getValue(k.InteractiveWindowPromptToSave)!==!0,this.label=t??this.createEditorLabel(e)}static ID="workbench.editorinputs.replEditorInput";inputModelRef;isScratchpad;label;isDisposing=!1;getIcon(){return q}createEditorLabel(e){if(!e)return"REPL";if(e.scheme==="untitled"){const o=new RegExp("Untitled-(\\d+).").exec(e.path);if(o?.length===2)return`REPL - ${o[1]}`}const t=e.path.split("/").pop();return t?`REPL - ${t}`:"REPL"}get typeId(){return n.ID}get editorId(){return"repl"}getName(){return this.label}get editorInputs(){return[this]}get capabilities(){const e=super.capabilities,t=this.isScratchpad?a.Scratchpad:0;return e|a.Readonly|t}async resolve(){const e=await super.resolve();return e&&await this.ensureInputBoxCell(e.notebook),e}async ensureInputBoxCell(e){const t=e.cells[e.cells.length-1];(!t||t.cellKind===p.Markup||t.outputs.length>0||t.internalMetadata.executionOrder!==void 0)&&e.applyEdits([{editType:N.Replace,index:e.cells.length,count:0,cells:[{cellKind:p.Code,language:"python",mime:void 0,outputs:[],source:""}]}],!0,void 0,()=>{},void 0,!1)}async resolveInput(e){if(this.inputModelRef)return this.inputModelRef.object.textEditorModel;const t=e.cells[e.cells.length-1];if(!t)throw new Error("The REPL editor requires at least one cell for the input box.");return this.inputModelRef=await this._textModelService.createModelReference(t.uri),this.inputModelRef.object.textEditorModel}dispose(){this.isDisposing||(this.isDisposing=!0,this.editorModelReference?.object.revert({soft:!0}),this.inputModelRef?.dispose(),super.dispose())}};n=c([i(2,D),i(3,P),i(4,C),i(5,T),i(6,y),i(7,B),i(8,U),i(9,j),i(10,R),i(11,F),i(12,L),i(13,x),i(14,M)],n);export{n as ReplEditorInput};
