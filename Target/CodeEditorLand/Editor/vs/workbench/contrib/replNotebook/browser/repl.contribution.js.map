{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/replNotebook/browser/repl.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { parse } from \"../../../../base/common/marshalling.js\";\nimport { extname, isEqual } from \"../../../../base/common/resources.js\";\nimport { isFalsyOrWhitespace } from \"../../../../base/common/strings.js\";\nimport { assertType } from \"../../../../base/common/types.js\";\nimport { URI, type UriComponents } from \"../../../../base/common/uri.js\";\nimport { IBulkEditService } from \"../../../../editor/browser/services/bulkEditService.js\";\nimport type { CodeEditorWidget } from \"../../../../editor/browser/widget/codeEditor/codeEditorWidget.js\";\nimport { PLAINTEXT_LANGUAGE_ID } from \"../../../../editor/common/languages/modesRegistry.js\";\nimport { localize2 } from \"../../../../nls.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { SyncDescriptor } from \"../../../../platform/instantiation/common/descriptors.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tKeybindingWeight,\n\tKeybindingsRegistry,\n} from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\tEditorPaneDescriptor,\n\ttype IEditorPaneRegistry,\n} from \"../../../browser/editor.js\";\nimport {\n\ttype IWorkbenchContribution,\n\tWorkbenchPhase,\n\tregisterWorkbenchContribution2,\n} from \"../../../common/contributions.js\";\nimport {\n\tEditorExtensions,\n\ttype IEditorFactoryRegistry,\n\ttype IEditorSerializer,\n} from \"../../../common/editor.js\";\nimport type { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport {\n\tIEditorResolverService,\n\tRegisteredEditorPriority,\n} from \"../../../services/editor/common/editorResolverService.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { IExtensionService } from \"../../../services/extensions/common/extensions.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport type { IWorkingCopyIdentifier } from \"../../../services/workingCopy/common/workingCopy.js\";\nimport {\n\ttype IWorkingCopyEditorHandler,\n\tIWorkingCopyEditorService,\n} from \"../../../services/workingCopy/common/workingCopyEditorService.js\";\nimport { ResourceNotebookCellEdit } from \"../../bulkEdit/browser/bulkCellEdits.js\";\nimport { getReplView } from \"../../debug/browser/repl.js\";\nimport { REPL_VIEW_ID } from \"../../debug/common/debug.js\";\nimport { IInteractiveHistoryService } from \"../../interactive/browser/interactiveHistoryService.js\";\nimport { NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT } from \"../../notebook/browser/controller/coreActions.js\";\nimport type { INotebookEditorOptions } from \"../../notebook/browser/notebookBrowser.js\";\nimport type { NotebookEditorWidget } from \"../../notebook/browser/notebookEditorWidget.js\";\nimport * as icons from \"../../notebook/browser/notebookIcons.js\";\nimport { INotebookEditorService } from \"../../notebook/browser/services/notebookEditorService.js\";\nimport {\n\tCellEditType,\n\tCellKind,\n\tNotebookSetting,\n\tNotebookWorkingCopyTypeIdentifier,\n\tREPL_EDITOR_ID,\n} from \"../../notebook/common/notebookCommon.js\";\nimport type { NotebookEditorInputOptions } from \"../../notebook/common/notebookEditorInput.js\";\nimport { INotebookEditorModelResolverService } from \"../../notebook/common/notebookEditorModelResolverService.js\";\nimport { INotebookService } from \"../../notebook/common/notebookService.js\";\nimport { ReplEditor } from \"./replEditor.js\";\nimport { ReplEditorInput } from \"./replEditorInput.js\";\n\ntype SerializedNotebookEditorData = {\n\tresource: URI;\n\tpreferredResource: URI;\n\tviewType: string;\n\toptions?: NotebookEditorInputOptions;\n\tlabel?: string;\n};\nclass ReplEditorSerializer implements IEditorSerializer {\n\tcanSerialize(input: EditorInput): boolean {\n\t\treturn input.typeId === ReplEditorInput.ID;\n\t}\n\tserialize(input: EditorInput): string {\n\t\tassertType(input instanceof ReplEditorInput);\n\t\tconst data: SerializedNotebookEditorData = {\n\t\t\tresource: input.resource,\n\t\t\tpreferredResource: input.preferredResource,\n\t\t\tviewType: input.viewType,\n\t\t\toptions: input.options,\n\t\t\tlabel: input.getName(),\n\t\t};\n\t\treturn JSON.stringify(data);\n\t}\n\tdeserialize(instantiationService: IInstantiationService, raw: string) {\n\t\tconst data = <SerializedNotebookEditorData>parse(raw);\n\t\tif (!data) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst { resource, viewType } = data;\n\t\tif (!data || !URI.isUri(resource) || typeof viewType !== \"string\") {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst input = instantiationService.createInstance(\n\t\t\tReplEditorInput,\n\t\t\tresource,\n\t\t\tdata.label,\n\t\t);\n\t\treturn input;\n\t}\n}\n\nRegistry.as<IEditorPaneRegistry>(\n\tEditorExtensions.EditorPane,\n).registerEditorPane(\n\tEditorPaneDescriptor.create(ReplEditor, REPL_EDITOR_ID, \"REPL Editor\"),\n\t[new SyncDescriptor(ReplEditorInput)],\n);\n\nRegistry.as<IEditorFactoryRegistry>(\n\tEditorExtensions.EditorFactory,\n).registerEditorSerializer(ReplEditorInput.ID, ReplEditorSerializer);\n\nexport class ReplDocumentContribution\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tstatic readonly ID = \"workbench.contrib.replDocument\";\n\n\tconstructor(\n\t\t@INotebookService notebookService: INotebookService,\n\t\t@IEditorResolverService editorResolverService: IEditorResolverService,\n\t\t@INotebookEditorModelResolverService private readonly notebookEditorModelResolverService: INotebookEditorModelResolverService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\n\t\teditorResolverService.registerEditor(\n\t\t\t// don't match anything, we don't need to support re-opening files as REPL editor at this point\n\t\t\t` `,\n\t\t\t{\n\t\t\t\tid: 'repl',\n\t\t\t\tlabel: 'repl Editor',\n\t\t\t\tpriority: RegisteredEditorPriority.option\n\t\t\t},\n\t\t\t{\n\t\t\t\t// We want to support all notebook types which could have any file extension,\n\t\t\t\t// so we just check if the resource corresponds to a notebook\n\t\t\t\tcanSupportResource: uri => notebookService.getNotebookTextModel(uri) !== undefined,\n\t\t\t\tsinglePerResource: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tcreateUntitledEditorInput: async ({ resource, options }) => {\n\t\t\t\t\tconst scratchpad = this.configurationService.getValue<boolean>(NotebookSetting.InteractiveWindowPromptToSave) !== true;\n\t\t\t\t\tconst ref = await this.notebookEditorModelResolverService.resolve({ untitledResource: resource }, 'jupyter-notebook', { scratchpad });\n\n\t\t\t\t\t// untitled notebooks are disposed when they get saved. we should not hold a reference\n\t\t\t\t\t// to such a disposed notebook and therefore dispose the reference as well\n\t\t\t\t\tref.object.notebook.onWillDispose(() => {\n\t\t\t\t\t\tref.dispose();\n\t\t\t\t\t});\n\t\t\t\t\tconst label = (options as INotebookEditorOptions)?.label ?? undefined;\n\t\t\t\t\treturn { editor: this.instantiationService.createInstance(ReplEditorInput, resource!, label), options };\n\t\t\t\t},\n\t\t\t\tcreateEditorInput: async ({ resource, options }) => {\n\t\t\t\t\tconst label = (options as INotebookEditorOptions)?.label ?? undefined;\n\t\t\t\t\treturn { editor: this.instantiationService.createInstance(ReplEditorInput, resource, label), options };\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n}\n\nclass ReplWindowWorkingCopyEditorHandler\n\textends Disposable\n\timplements IWorkbenchContribution, IWorkingCopyEditorHandler\n{\n\tstatic readonly ID = \"workbench.contrib.replWorkingCopyEditorHandler\";\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IWorkingCopyEditorService private readonly workingCopyEditorService: IWorkingCopyEditorService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t) {\n\t\tsuper();\n\n\t\tthis._installHandler();\n\t}\n\n\thandles(workingCopy: IWorkingCopyIdentifier): boolean {\n\t\tconst viewType = this._getViewType(workingCopy);\n\t\treturn (\n\t\t\t!!viewType &&\n\t\t\tviewType === \"jupyter-notebook\" &&\n\t\t\textname(workingCopy.resource) === \".replNotebook\"\n\t\t);\n\t}\n\n\tisOpen(workingCopy: IWorkingCopyIdentifier, editor: EditorInput): boolean {\n\t\tif (!this.handles(workingCopy)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn (\n\t\t\teditor instanceof ReplEditorInput &&\n\t\t\tisEqual(workingCopy.resource, editor.resource)\n\t\t);\n\t}\n\n\tcreateEditor(workingCopy: IWorkingCopyIdentifier): EditorInput {\n\t\treturn this.instantiationService.createInstance(\n\t\t\tReplEditorInput,\n\t\t\tworkingCopy.resource,\n\t\t\tundefined,\n\t\t);\n\t}\n\n\tprivate async _installHandler(): Promise<void> {\n\t\tawait this.extensionService.whenInstalledExtensionsRegistered();\n\n\t\tthis._register(this.workingCopyEditorService.registerHandler(this));\n\t}\n\n\tprivate _getViewType(\n\t\tworkingCopy: IWorkingCopyIdentifier,\n\t): string | undefined {\n\t\treturn NotebookWorkingCopyTypeIdentifier.parse(workingCopy.typeId);\n\t}\n}\n\nregisterWorkbenchContribution2(\n\tReplWindowWorkingCopyEditorHandler.ID,\n\tReplWindowWorkingCopyEditorHandler,\n\tWorkbenchPhase.BlockRestore,\n);\nregisterWorkbenchContribution2(\n\tReplDocumentContribution.ID,\n\tReplDocumentContribution,\n\tWorkbenchPhase.BlockRestore,\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"repl.execute\",\n\t\t\t\ttitle: localize2(\"repl.execute\", \"Execute REPL input\"),\n\t\t\t\tcategory: \"REPL\",\n\t\t\t\tkeybinding: [\n\t\t\t\t\t{\n\t\t\t\t\t\twhen: ContextKeyExpr.equals(\n\t\t\t\t\t\t\t\"activeEditor\",\n\t\t\t\t\t\t\t\"workbench.editor.repl\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\t\t\t\t\t\tweight: NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\t\t\"activeEditor\",\n\t\t\t\t\t\t\t\t\"workbench.editor.repl\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\t\t\"config.interactiveWindow.executeWithShiftEnter\",\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tprimary: KeyMod.Shift | KeyCode.Enter,\n\t\t\t\t\t\tweight: NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\t\t\"activeEditor\",\n\t\t\t\t\t\t\t\t\"workbench.editor.repl\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\t\t\"config.interactiveWindow.executeWithShiftEnter\",\n\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tprimary: KeyCode.Enter,\n\t\t\t\t\t\tweight: NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.ReplInputExecute,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\ticon: icons.executeIcon,\n\t\t\t\tf1: false,\n\t\t\t\tmetadata: {\n\t\t\t\t\tdescription: \"Execute the Contents of the Input Box\",\n\t\t\t\t\targs: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"resource\",\n\t\t\t\t\t\t\tdescription: \"Interactive resource Uri\",\n\t\t\t\t\t\t\tisOptional: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tasync run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tcontext?: UriComponents,\n\t\t): Promise<void> {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst bulkEditService = accessor.get(IBulkEditService);\n\t\t\tconst historyService = accessor.get(IInteractiveHistoryService);\n\t\t\tconst notebookEditorService = accessor.get(INotebookEditorService);\n\t\t\tlet editorControl:\n\t\t\t\t| {\n\t\t\t\t\t\tnotebookEditor: NotebookEditorWidget | undefined;\n\t\t\t\t\t\tcodeEditor: CodeEditorWidget;\n\t\t\t\t  }\n\t\t\t\t| undefined;\n\t\t\tif (context) {\n\t\t\t\tconst resourceUri = URI.revive(context);\n\t\t\t\tconst editors = editorService.findEditors(resourceUri);\n\t\t\t\tfor (const found of editors) {\n\t\t\t\t\tif (found.editor.typeId === ReplEditorInput.ID) {\n\t\t\t\t\t\tconst editor = await editorService.openEditor(\n\t\t\t\t\t\t\tfound.editor,\n\t\t\t\t\t\t\tfound.groupId,\n\t\t\t\t\t\t);\n\t\t\t\t\t\teditorControl = editor?.getControl() as\n\t\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t\tnotebookEditor:\n\t\t\t\t\t\t\t\t\t\t| NotebookEditorWidget\n\t\t\t\t\t\t\t\t\t\t| undefined;\n\t\t\t\t\t\t\t\t\tcodeEditor: CodeEditorWidget;\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t| undefined;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\teditorControl = editorService.activeEditorPane?.getControl() as\n\t\t\t\t\t| {\n\t\t\t\t\t\t\tnotebookEditor: NotebookEditorWidget | undefined;\n\t\t\t\t\t\t\tcodeEditor: CodeEditorWidget;\n\t\t\t\t\t  }\n\t\t\t\t\t| undefined;\n\t\t\t}\n\n\t\t\tif (editorControl) {\n\t\t\t\texecuteReplInput(\n\t\t\t\t\tbulkEditService,\n\t\t\t\t\thistoryService,\n\t\t\t\t\tnotebookEditorService,\n\t\t\t\t\teditorControl,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n);\n\nasync function executeReplInput(\n\tbulkEditService: IBulkEditService,\n\thistoryService: IInteractiveHistoryService,\n\tnotebookEditorService: INotebookEditorService,\n\teditorControl: {\n\t\tnotebookEditor: NotebookEditorWidget | undefined;\n\t\tcodeEditor: CodeEditorWidget;\n\t},\n) {\n\tif (\n\t\teditorControl &&\n\t\teditorControl.notebookEditor &&\n\t\teditorControl.codeEditor\n\t) {\n\t\tconst notebookDocument = editorControl.notebookEditor.textModel;\n\t\tconst textModel = editorControl.codeEditor.getModel();\n\t\tconst activeKernel = editorControl.notebookEditor.activeKernel;\n\t\tconst language =\n\t\t\tactiveKernel?.supportedLanguages[0] ?? PLAINTEXT_LANGUAGE_ID;\n\n\t\tif (notebookDocument && textModel) {\n\t\t\tconst index = notebookDocument.length - 1;\n\t\t\tconst value = textModel.getValue();\n\n\t\t\tif (isFalsyOrWhitespace(value)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\thistoryService.replaceLast(notebookDocument.uri, value);\n\t\t\thistoryService.addToHistory(notebookDocument.uri, \"\");\n\t\t\ttextModel.setValue(\"\");\n\t\t\tnotebookDocument.cells[index].resetTextBuffer(\n\t\t\t\ttextModel.getTextBuffer(),\n\t\t\t);\n\n\t\t\tconst collapseState =\n\t\t\t\teditorControl.notebookEditor.notebookOptions.getDisplayOptions()\n\t\t\t\t\t.interactiveWindowCollapseCodeCells === \"fromEditor\"\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tinputCollapsed: false,\n\t\t\t\t\t\t\toutputCollapsed: false,\n\t\t\t\t\t\t}\n\t\t\t\t\t: undefined;\n\n\t\t\tawait bulkEditService.apply([\n\t\t\t\tnew ResourceNotebookCellEdit(notebookDocument.uri, {\n\t\t\t\t\teditType: CellEditType.Replace,\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcount: 0,\n\t\t\t\t\tcells: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcellKind: CellKind.Code,\n\t\t\t\t\t\t\tmime: undefined,\n\t\t\t\t\t\t\tlanguage,\n\t\t\t\t\t\t\tsource: value,\n\t\t\t\t\t\t\toutputs: [],\n\t\t\t\t\t\t\tmetadata: {},\n\t\t\t\t\t\t\tcollapseState,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t}),\n\t\t\t]);\n\n\t\t\t// reveal the cell into view first\n\t\t\tconst range = { start: index, end: index + 1 };\n\t\t\teditorControl.notebookEditor.revealCellRangeInView(range);\n\t\t\tawait editorControl.notebookEditor.executeNotebookCells(\n\t\t\t\teditorControl.notebookEditor.getCellsInRange({\n\t\t\t\t\tstart: index,\n\t\t\t\t\tend: index + 1,\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\t// update the selection and focus in the extension host model\n\t\t\tconst editor = notebookEditorService.getNotebookEditor(\n\t\t\t\teditorControl.notebookEditor.getId(),\n\t\t\t);\n\t\t\tif (editor) {\n\t\t\t\teditor.setSelections([range]);\n\t\t\t\teditor.setFocus(range);\n\t\t\t}\n\t\t}\n\t}\n}\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"list.find.replInputFocus\",\n\tweight: KeybindingWeight.WorkbenchContrib + 1,\n\twhen: ContextKeyExpr.equals(\"view\", REPL_VIEW_ID),\n\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyF,\n\tsecondary: [KeyCode.F3],\n\thandler: (accessor) => {\n\t\tgetReplView(accessor.get(IViewsService))?.openFind();\n\t},\n});\n"],
  "mappings": "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",
  "names": []
}
