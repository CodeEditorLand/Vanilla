{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/common/debugger.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type {\n\tIJSONSchema,\n\tIJSONSchemaMap,\n\tIJSONSchemaSnippet,\n} from \"../../../../base/common/jsonSchema.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { filter } from \"../../../../base/common/objects.js\";\nimport { isObject } from \"../../../../base/common/types.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { ITextResourcePropertiesService } from \"../../../../editor/common/services/textResourceConfiguration.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tContextKeyExpr,\n\ttype ContextKeyExpression,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport type { IExtensionDescription } from \"../../../../platform/extensions/common/extensions.js\";\nimport type { ITelemetryEndpoint } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { cleanRemoteAuthority } from \"../../../../platform/telemetry/common/telemetryUtils.js\";\nimport type { IWorkspaceFolder } from \"../../../../platform/workspace/common/workspace.js\";\nimport { IConfigurationResolverService } from \"../../../services/configurationResolver/common/configurationResolver.js\";\nimport * as ConfigurationResolverUtils from \"../../../services/configurationResolver/common/configurationResolverUtils.js\";\nimport { IWorkbenchEnvironmentService } from \"../../../services/environment/common/environmentService.js\";\nimport {\n\tDebugConfigurationProviderTriggerKind,\n\ttype IAdapterManager,\n\ttype IConfig,\n\ttype IDebugAdapter,\n\tIDebugService,\n\ttype IDebugSession,\n\ttype IDebugger,\n\ttype IDebuggerContribution,\n\ttype IDebuggerMetadata,\n\tdebuggerDisabledMessage,\n} from \"./debug.js\";\nimport { isDebuggerMainContribution } from \"./debugUtils.js\";\n\nexport class Debugger implements IDebugger, IDebuggerMetadata {\n\tprivate debuggerContribution: IDebuggerContribution;\n\tprivate mergedExtensionDescriptions: IExtensionDescription[] = [];\n\tprivate mainExtensionDescription: IExtensionDescription | undefined;\n\n\tprivate debuggerWhen: ContextKeyExpression | undefined;\n\tprivate debuggerHiddenWhen: ContextKeyExpression | undefined;\n\n\tconstructor(\n\t\tprivate adapterManager: IAdapterManager,\n\t\tdbgContribution: IDebuggerContribution,\n\t\textensionDescription: IExtensionDescription,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ITextResourcePropertiesService private readonly resourcePropertiesService: ITextResourcePropertiesService,\n\t\t@IConfigurationResolverService private readonly configurationResolverService: IConfigurationResolverService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t) {\n\t\tthis.debuggerContribution = { type: dbgContribution.type };\n\t\tthis.merge(dbgContribution, extensionDescription);\n\n\t\tthis.debuggerWhen = typeof this.debuggerContribution.when === 'string' ? ContextKeyExpr.deserialize(this.debuggerContribution.when) : undefined;\n\t\tthis.debuggerHiddenWhen = typeof this.debuggerContribution.hiddenWhen === 'string' ? ContextKeyExpr.deserialize(this.debuggerContribution.hiddenWhen) : undefined;\n\t}\n\n\tmerge(\n\t\totherDebuggerContribution: IDebuggerContribution,\n\t\textensionDescription: IExtensionDescription,\n\t): void {\n\t\t/**\n\t\t * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n\t\t * if existing non-structured properties on the destination should be overwritten or not. Defaults to true (overwrite).\n\t\t */\n\t\tfunction mixin(\n\t\t\tdestination: any,\n\t\t\tsource: any,\n\t\t\toverwrite: boolean,\n\t\t\tlevel = 0,\n\t\t): any {\n\t\t\tif (!isObject(destination)) {\n\t\t\t\treturn source;\n\t\t\t}\n\n\t\t\tif (isObject(source)) {\n\t\t\t\tObject.keys(source).forEach((key) => {\n\t\t\t\t\tif (key !== \"__proto__\") {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tisObject(destination[key]) &&\n\t\t\t\t\t\t\tisObject(source[key])\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tmixin(\n\t\t\t\t\t\t\t\tdestination[key],\n\t\t\t\t\t\t\t\tsource[key],\n\t\t\t\t\t\t\t\toverwrite,\n\t\t\t\t\t\t\t\tlevel + 1,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (key in destination) {\n\t\t\t\t\t\t\tif (overwrite) {\n\t\t\t\t\t\t\t\tif (level === 0 && key === \"type\") {\n\t\t\t\t\t\t\t\t\t// don't merge the 'type' property\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn destination;\n\t\t}\n\n\t\t// only if not already merged\n\t\tif (\n\t\t\tthis.mergedExtensionDescriptions.indexOf(extensionDescription) < 0\n\t\t) {\n\t\t\t// remember all extensions that have been merged for this debugger\n\t\t\tthis.mergedExtensionDescriptions.push(extensionDescription);\n\n\t\t\t// merge new debugger contribution into existing contributions (and don't overwrite values in built-in extensions)\n\t\t\tmixin(\n\t\t\t\tthis.debuggerContribution,\n\t\t\t\totherDebuggerContribution,\n\t\t\t\textensionDescription.isBuiltin,\n\t\t\t);\n\n\t\t\t// remember the extension that is considered the \"main\" debugger contribution\n\t\t\tif (isDebuggerMainContribution(otherDebuggerContribution)) {\n\t\t\t\tthis.mainExtensionDescription = extensionDescription;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync startDebugging(\n\t\tconfiguration: IConfig,\n\t\tparentSessionId: string,\n\t): Promise<boolean> {\n\t\tconst parentSession = this.debugService\n\t\t\t.getModel()\n\t\t\t.getSession(parentSessionId);\n\t\treturn await this.debugService.startDebugging(\n\t\t\tundefined,\n\t\t\tconfiguration,\n\t\t\t{ parentSession },\n\t\t\tundefined,\n\t\t);\n\t}\n\n\tasync createDebugAdapter(session: IDebugSession): Promise<IDebugAdapter> {\n\t\tawait this.adapterManager.activateDebuggers(\n\t\t\t\"onDebugAdapterProtocolTracker\",\n\t\t\tthis.type,\n\t\t);\n\t\tconst da = this.adapterManager.createDebugAdapter(session);\n\t\tif (da) {\n\t\t\treturn Promise.resolve(da);\n\t\t}\n\t\tthrow new Error(\n\t\t\tnls.localize(\n\t\t\t\t\"cannot.find.da\",\n\t\t\t\t\"Cannot find debug adapter for type '{0}'.\",\n\t\t\t\tthis.type,\n\t\t\t),\n\t\t);\n\t}\n\n\tasync substituteVariables(\n\t\tfolder: IWorkspaceFolder | undefined,\n\t\tconfig: IConfig,\n\t): Promise<IConfig> {\n\t\tconst substitutedConfig = await this.adapterManager.substituteVariables(\n\t\t\tthis.type,\n\t\t\tfolder,\n\t\t\tconfig,\n\t\t);\n\t\treturn await this.configurationResolverService.resolveWithInteractionReplace(\n\t\t\tfolder,\n\t\t\tsubstitutedConfig,\n\t\t\t\"launch\",\n\t\t\tthis.variables,\n\t\t\tsubstitutedConfig.__configurationTarget,\n\t\t);\n\t}\n\n\trunInTerminal(\n\t\targs: DebugProtocol.RunInTerminalRequestArguments,\n\t\tsessionId: string,\n\t): Promise<number | undefined> {\n\t\treturn this.adapterManager.runInTerminal(this.type, args, sessionId);\n\t}\n\n\tget label(): string {\n\t\treturn (\n\t\t\tthis.debuggerContribution.label || this.debuggerContribution.type\n\t\t);\n\t}\n\n\tget type(): string {\n\t\treturn this.debuggerContribution.type;\n\t}\n\n\tget variables(): { [key: string]: string } | undefined {\n\t\treturn this.debuggerContribution.variables;\n\t}\n\n\tget configurationSnippets(): IJSONSchemaSnippet[] | undefined {\n\t\treturn this.debuggerContribution.configurationSnippets;\n\t}\n\n\tget languages(): string[] | undefined {\n\t\treturn this.debuggerContribution.languages;\n\t}\n\n\tget when(): ContextKeyExpression | undefined {\n\t\treturn this.debuggerWhen;\n\t}\n\n\tget hiddenWhen(): ContextKeyExpression | undefined {\n\t\treturn this.debuggerHiddenWhen;\n\t}\n\n\tget enabled() {\n\t\treturn (\n\t\t\t!this.debuggerWhen ||\n\t\t\tthis.contextKeyService.contextMatchesRules(this.debuggerWhen)\n\t\t);\n\t}\n\n\tget isHiddenFromDropdown() {\n\t\tif (!this.debuggerHiddenWhen) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.contextKeyService.contextMatchesRules(\n\t\t\tthis.debuggerHiddenWhen,\n\t\t);\n\t}\n\n\tget strings() {\n\t\treturn (\n\t\t\tthis.debuggerContribution.strings ??\n\t\t\t(this.debuggerContribution as any).uiMessages\n\t\t);\n\t}\n\n\tinterestedInLanguage(languageId: string): boolean {\n\t\treturn !!(this.languages && this.languages.indexOf(languageId) >= 0);\n\t}\n\n\thasInitialConfiguration(): boolean {\n\t\treturn !!this.debuggerContribution.initialConfigurations;\n\t}\n\n\thasDynamicConfigurationProviders(): boolean {\n\t\treturn this.debugService\n\t\t\t.getConfigurationManager()\n\t\t\t.hasDebugConfigurationProvider(\n\t\t\t\tthis.type,\n\t\t\t\tDebugConfigurationProviderTriggerKind.Dynamic,\n\t\t\t);\n\t}\n\n\thasConfigurationProvider(): boolean {\n\t\treturn this.debugService\n\t\t\t.getConfigurationManager()\n\t\t\t.hasDebugConfigurationProvider(this.type);\n\t}\n\n\tgetInitialConfigurationContent(\n\t\tinitialConfigs?: IConfig[],\n\t): Promise<string> {\n\t\t// at this point we got some configs from the package.json and/or from registered DebugConfigurationProviders\n\t\tlet initialConfigurations =\n\t\t\tthis.debuggerContribution.initialConfigurations || [];\n\t\tif (initialConfigs) {\n\t\t\tinitialConfigurations =\n\t\t\t\tinitialConfigurations.concat(initialConfigs);\n\t\t}\n\n\t\tconst eol =\n\t\t\tthis.resourcePropertiesService.getEOL(\n\t\t\t\tURI.from({ scheme: Schemas.untitled, path: \"1\" }),\n\t\t\t) === \"\\r\\n\"\n\t\t\t\t? \"\\r\\n\"\n\t\t\t\t: \"\\n\";\n\t\tconst configs = JSON.stringify(initialConfigurations, null, \"\\t\")\n\t\t\t.split(\"\\n\")\n\t\t\t.map((line) => \"\\t\" + line)\n\t\t\t.join(eol)\n\t\t\t.trim();\n\t\tconst comment1 = nls.localize(\n\t\t\t\"launch.config.comment1\",\n\t\t\t\"Use IntelliSense to learn about possible attributes.\",\n\t\t);\n\t\tconst comment2 = nls.localize(\n\t\t\t\"launch.config.comment2\",\n\t\t\t\"Hover to view descriptions of existing attributes.\",\n\t\t);\n\t\tconst comment3 = nls.localize(\n\t\t\t\"launch.config.comment3\",\n\t\t\t\"For more information, visit: {0}\",\n\t\t\t\"https://go.microsoft.com/fwlink/?linkid=830387\",\n\t\t);\n\n\t\tlet content = [\n\t\t\t\"{\",\n\t\t\t`\\t// ${comment1}`,\n\t\t\t`\\t// ${comment2}`,\n\t\t\t`\\t// ${comment3}`,\n\t\t\t`\\t\"version\": \"0.2.0\",`,\n\t\t\t`\\t\"configurations\": ${configs}`,\n\t\t\t\"}\",\n\t\t].join(eol);\n\n\t\t// fix formatting\n\t\tconst editorConfig = this.configurationService.getValue<any>();\n\t\tif (editorConfig.editor && editorConfig.editor.insertSpaces) {\n\t\t\tcontent = content.replace(\n\t\t\t\t/\\t/g,\n\t\t\t\t\" \".repeat(editorConfig.editor.tabSize),\n\t\t\t);\n\t\t}\n\n\t\treturn Promise.resolve(content);\n\t}\n\n\tgetMainExtensionDescriptor(): IExtensionDescription {\n\t\treturn (\n\t\t\tthis.mainExtensionDescription || this.mergedExtensionDescriptions[0]\n\t\t);\n\t}\n\n\tgetCustomTelemetryEndpoint(): ITelemetryEndpoint | undefined {\n\t\tconst aiKey = this.debuggerContribution.aiKey;\n\t\tif (!aiKey) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst sendErrorTelemtry =\n\t\t\tcleanRemoteAuthority(this.environmentService.remoteAuthority) !==\n\t\t\t\"other\";\n\t\treturn {\n\t\t\tid: `${this.getMainExtensionDescriptor().publisher}.${this.type}`,\n\t\t\taiKey,\n\t\t\tsendErrorTelemetry: sendErrorTelemtry,\n\t\t};\n\t}\n\n\tgetSchemaAttributes(definitions: IJSONSchemaMap): IJSONSchema[] | null {\n\t\tif (!this.debuggerContribution.configurationAttributes) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// fill in the default configuration attributes shared by all adapters.\n\t\treturn Object.keys(\n\t\t\tthis.debuggerContribution.configurationAttributes,\n\t\t).map((request) => {\n\t\t\tconst definitionId = `${this.type}:${request}`;\n\t\t\tconst platformSpecificDefinitionId = `${this.type}:${request}:platform`;\n\t\t\tconst attributes: IJSONSchema =\n\t\t\t\tthis.debuggerContribution.configurationAttributes[request];\n\t\t\tconst defaultRequired = [\"name\", \"type\", \"request\"];\n\t\t\tattributes.required =\n\t\t\t\tattributes.required && attributes.required.length\n\t\t\t\t\t? defaultRequired.concat(attributes.required)\n\t\t\t\t\t: defaultRequired;\n\t\t\tattributes.additionalProperties = false;\n\t\t\tattributes.type = \"object\";\n\t\t\tif (!attributes.properties) {\n\t\t\t\tattributes.properties = {};\n\t\t\t}\n\t\t\tconst properties = attributes.properties;\n\t\t\tproperties[\"type\"] = {\n\t\t\t\tenum: [this.type],\n\t\t\t\tenumDescriptions: [this.label],\n\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\"debugType\",\n\t\t\t\t\t\"Type of configuration.\",\n\t\t\t\t),\n\t\t\t\tpattern: \"^(?!node2)\",\n\t\t\t\tdeprecationMessage:\n\t\t\t\t\tthis.debuggerContribution.deprecated ||\n\t\t\t\t\t(this.enabled\n\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t: debuggerDisabledMessage(this.type)),\n\t\t\t\tdoNotSuggest: !!this.debuggerContribution.deprecated,\n\t\t\t\terrorMessage: nls.localize(\n\t\t\t\t\t\"debugTypeNotRecognised\",\n\t\t\t\t\t\"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.\",\n\t\t\t\t),\n\t\t\t\tpatternErrorMessage: nls.localize(\n\t\t\t\t\t\"node2NotSupported\",\n\t\t\t\t\t'\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\".',\n\t\t\t\t),\n\t\t\t};\n\t\t\tproperties[\"request\"] = {\n\t\t\t\tenum: [request],\n\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\"debugRequest\",\n\t\t\t\t\t'Request type of configuration. Can be \"launch\" or \"attach\".',\n\t\t\t\t),\n\t\t\t};\n\t\t\tfor (const prop in definitions[\"common\"].properties) {\n\t\t\t\tproperties[prop] = {\n\t\t\t\t\t$ref: `#/definitions/common/properties/${prop}`,\n\t\t\t\t};\n\t\t\t}\n\t\t\tObject.keys(properties).forEach((name) => {\n\t\t\t\t// Use schema allOf property to get independent error reporting #21113\n\t\t\t\tConfigurationResolverUtils.applyDeprecatedVariableMessage(\n\t\t\t\t\tproperties[name],\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tdefinitions[definitionId] = { ...attributes };\n\t\t\tdefinitions[platformSpecificDefinitionId] = {\n\t\t\t\ttype: \"object\",\n\t\t\t\tadditionalProperties: false,\n\t\t\t\tproperties: filter(\n\t\t\t\t\tproperties,\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tkey !== \"type\" && key !== \"request\" && key !== \"name\",\n\t\t\t\t),\n\t\t\t};\n\n\t\t\t// Don't add the OS props to the real attributes object so they don't show up in 'definitions'\n\t\t\tconst attributesCopy = { ...attributes };\n\t\t\tattributesCopy.properties = {\n\t\t\t\t...properties,\n\t\t\t\t...{\n\t\t\t\t\twindows: {\n\t\t\t\t\t\t$ref: `#/definitions/${platformSpecificDefinitionId}`,\n\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\"debugWindowsConfiguration\",\n\t\t\t\t\t\t\t\"Windows specific launch configuration attributes.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\tosx: {\n\t\t\t\t\t\t$ref: `#/definitions/${platformSpecificDefinitionId}`,\n\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\"debugOSXConfiguration\",\n\t\t\t\t\t\t\t\"OS X specific launch configuration attributes.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\tlinux: {\n\t\t\t\t\t\t$ref: `#/definitions/${platformSpecificDefinitionId}`,\n\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\"debugLinuxConfiguration\",\n\t\t\t\t\t\t\t\"Linux specific launch configuration attributes.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\t\treturn attributesCopy;\n\t\t});\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAUA,SAAS,eAAe;AACxB,SAAS,cAAc;AACvB,SAAS,gBAAgB;AACzB,SAAS,WAAW;AACpB,SAAS,sCAAsC;AAC/C,YAAY,SAAS;AACrB,SAAS,6BAA6B;AACtC;AAAA,EACC;AAAA,EAEA;AAAA,OACM;AAGP,SAAS,4BAA4B;AAErC,SAAS,qCAAqC;AAC9C,YAAY,gCAAgC;AAC5C,SAAS,oCAAoC;AAC7C;AAAA,EACC;AAAA,EAIA;AAAA,EAKA;AAAA,OACM;AACP,SAAS,kCAAkC;AAEpC,IAAM,WAAN,MAAuD;AAAA,EAQ7D,YACS,gBACR,iBACA,sBACwC,sBACS,2BACD,8BACD,oBACf,cACK,mBACpC;AATO;AAGgC;AACS;AACD;AACD;AACf;AACK;AAErC,SAAK,uBAAuB,EAAE,MAAM,gBAAgB,KAAK;AACzD,SAAK,MAAM,iBAAiB,oBAAoB;AAEhD,SAAK,eAAe,OAAO,KAAK,qBAAqB,SAAS,WAAW,eAAe,YAAY,KAAK,qBAAqB,IAAI,IAAI;AACtI,SAAK,qBAAqB,OAAO,KAAK,qBAAqB,eAAe,WAAW,eAAe,YAAY,KAAK,qBAAqB,UAAU,IAAI;AAAA,EACzJ;AAAA,EAnED,OA2C8D;AAAA;AAAA;AAAA,EACrD;AAAA,EACA,8BAAuD,CAAC;AAAA,EACxD;AAAA,EAEA;AAAA,EACA;AAAA,EAoBR,MACC,2BACA,sBACO;AAKP,aAAS,MACR,aACA,QACA,WACA,QAAQ,GACF;AACN,UAAI,CAAC,SAAS,WAAW,GAAG;AAC3B,eAAO;AAAA,MACR;AAEA,UAAI,SAAS,MAAM,GAAG;AACrB,eAAO,KAAK,MAAM,EAAE,QAAQ,CAAC,QAAQ;AACpC,cAAI,QAAQ,aAAa;AACxB,gBACC,SAAS,YAAY,GAAG,CAAC,KACzB,SAAS,OAAO,GAAG,CAAC,GACnB;AACD;AAAA,gBACC,YAAY,GAAG;AAAA,gBACf,OAAO,GAAG;AAAA,gBACV;AAAA,gBACA,QAAQ;AAAA,cACT;AAAA,YACD,WAAW,OAAO,aAAa;AAC9B,kBAAI,WAAW;AACd,oBAAI,UAAU,KAAK,QAAQ,QAAQ;AAAA,gBAEnC,OAAO;AACN,8BAAY,GAAG,IAAI,OAAO,GAAG;AAAA,gBAC9B;AAAA,cACD;AAAA,YACD,OAAO;AACN,0BAAY,GAAG,IAAI,OAAO,GAAG;AAAA,YAC9B;AAAA,UACD;AAAA,QACD,CAAC;AAAA,MACF;AAEA,aAAO;AAAA,IACR;AAvCS;AA0CT,QACC,KAAK,4BAA4B,QAAQ,oBAAoB,IAAI,GAChE;AAED,WAAK,4BAA4B,KAAK,oBAAoB;AAG1D;AAAA,QACC,KAAK;AAAA,QACL;AAAA,QACA,qBAAqB;AAAA,MACtB;AAGA,UAAI,2BAA2B,yBAAyB,GAAG;AAC1D,aAAK,2BAA2B;AAAA,MACjC;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAM,eACL,eACA,iBACmB;AACnB,UAAM,gBAAgB,KAAK,aACzB,SAAS,EACT,WAAW,eAAe;AAC5B,WAAO,MAAM,KAAK,aAAa;AAAA,MAC9B;AAAA,MACA;AAAA,MACA,EAAE,cAAc;AAAA,MAChB;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAM,mBAAmB,SAAgD;AACxE,UAAM,KAAK,eAAe;AAAA,MACzB;AAAA,MACA,KAAK;AAAA,IACN;AACA,UAAM,KAAK,KAAK,eAAe,mBAAmB,OAAO;AACzD,QAAI,IAAI;AACP,aAAO,QAAQ,QAAQ,EAAE;AAAA,IAC1B;AACA,UAAM,IAAI;AAAA,MACT,IAAI;AAAA,QACH;AAAA,QACA;AAAA,QACA,KAAK;AAAA,MACN;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAM,oBACL,QACA,QACmB;AACnB,UAAM,oBAAoB,MAAM,KAAK,eAAe;AAAA,MACnD,KAAK;AAAA,MACL;AAAA,MACA;AAAA,IACD;AACA,WAAO,MAAM,KAAK,6BAA6B;AAAA,MAC9C;AAAA,MACA;AAAA,MACA;AAAA,MACA,KAAK;AAAA,MACL,kBAAkB;AAAA,IACnB;AAAA,EACD;AAAA,EAEA,cACC,MACA,WAC8B;AAC9B,WAAO,KAAK,eAAe,cAAc,KAAK,MAAM,MAAM,SAAS;AAAA,EACpE;AAAA,EAEA,IAAI,QAAgB;AACnB,WACC,KAAK,qBAAqB,SAAS,KAAK,qBAAqB;AAAA,EAE/D;AAAA,EAEA,IAAI,OAAe;AAClB,WAAO,KAAK,qBAAqB;AAAA,EAClC;AAAA,EAEA,IAAI,YAAmD;AACtD,WAAO,KAAK,qBAAqB;AAAA,EAClC;AAAA,EAEA,IAAI,wBAA0D;AAC7D,WAAO,KAAK,qBAAqB;AAAA,EAClC;AAAA,EAEA,IAAI,YAAkC;AACrC,WAAO,KAAK,qBAAqB;AAAA,EAClC;AAAA,EAEA,IAAI,OAAyC;AAC5C,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAI,aAA+C;AAClD,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAI,UAAU;AACb,WACC,CAAC,KAAK,gBACN,KAAK,kBAAkB,oBAAoB,KAAK,YAAY;AAAA,EAE9D;AAAA,EAEA,IAAI,uBAAuB;AAC1B,QAAI,CAAC,KAAK,oBAAoB;AAC7B,aAAO;AAAA,IACR;AACA,WAAO,KAAK,kBAAkB;AAAA,MAC7B,KAAK;AAAA,IACN;AAAA,EACD;AAAA,EAEA,IAAI,UAAU;AACb,WACC,KAAK,qBAAqB,WACzB,KAAK,qBAA6B;AAAA,EAErC;AAAA,EAEA,qBAAqB,YAA6B;AACjD,WAAO,CAAC,EAAE,KAAK,aAAa,KAAK,UAAU,QAAQ,UAAU,KAAK;AAAA,EACnE;AAAA,EAEA,0BAAmC;AAClC,WAAO,CAAC,CAAC,KAAK,qBAAqB;AAAA,EACpC;AAAA,EAEA,mCAA4C;AAC3C,WAAO,KAAK,aACV,wBAAwB,EACxB;AAAA,MACA,KAAK;AAAA,MACL,sCAAsC;AAAA,IACvC;AAAA,EACF;AAAA,EAEA,2BAAoC;AACnC,WAAO,KAAK,aACV,wBAAwB,EACxB,8BAA8B,KAAK,IAAI;AAAA,EAC1C;AAAA,EAEA,+BACC,gBACkB;AAElB,QAAI,wBACH,KAAK,qBAAqB,yBAAyB,CAAC;AACrD,QAAI,gBAAgB;AACnB,8BACC,sBAAsB,OAAO,cAAc;AAAA,IAC7C;AAEA,UAAM,MACL,KAAK,0BAA0B;AAAA,MAC9B,IAAI,KAAK,EAAE,QAAQ,QAAQ,UAAU,MAAM,IAAI,CAAC;AAAA,IACjD,MAAM,SACH,SACA;AACJ,UAAM,UAAU,KAAK,UAAU,uBAAuB,MAAM,GAAI,EAC9D,MAAM,IAAI,EACV,IAAI,CAAC,SAAS,MAAO,IAAI,EACzB,KAAK,GAAG,EACR,KAAK;AACP,UAAM,WAAW,IAAI;AAAA,MACpB;AAAA,MACA;AAAA,IACD;AACA,UAAM,WAAW,IAAI;AAAA,MACpB;AAAA,MACA;AAAA,IACD;AACA,UAAM,WAAW,IAAI;AAAA,MACpB;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAEA,QAAI,UAAU;AAAA,MACb;AAAA,MACA,OAAQ,QAAQ;AAAA,MAChB,OAAQ,QAAQ;AAAA,MAChB,OAAQ,QAAQ;AAAA,MAChB;AAAA,MACA,sBAAuB,OAAO;AAAA,MAC9B;AAAA,IACD,EAAE,KAAK,GAAG;AAGV,UAAM,eAAe,KAAK,qBAAqB,SAAc;AAC7D,QAAI,aAAa,UAAU,aAAa,OAAO,cAAc;AAC5D,gBAAU,QAAQ;AAAA,QACjB;AAAA,QACA,IAAI,OAAO,aAAa,OAAO,OAAO;AAAA,MACvC;AAAA,IACD;AAEA,WAAO,QAAQ,QAAQ,OAAO;AAAA,EAC/B;AAAA,EAEA,6BAAoD;AACnD,WACC,KAAK,4BAA4B,KAAK,4BAA4B,CAAC;AAAA,EAErE;AAAA,EAEA,6BAA6D;AAC5D,UAAM,QAAQ,KAAK,qBAAqB;AACxC,QAAI,CAAC,OAAO;AACX,aAAO;AAAA,IACR;AAEA,UAAM,oBACL,qBAAqB,KAAK,mBAAmB,eAAe,MAC5D;AACD,WAAO;AAAA,MACN,IAAI,GAAG,KAAK,2BAA2B,EAAE,SAAS,IAAI,KAAK,IAAI;AAAA,MAC/D;AAAA,MACA,oBAAoB;AAAA,IACrB;AAAA,EACD;AAAA,EAEA,oBAAoB,aAAmD;AACtE,QAAI,CAAC,KAAK,qBAAqB,yBAAyB;AACvD,aAAO;AAAA,IACR;AAGA,WAAO,OAAO;AAAA,MACb,KAAK,qBAAqB;AAAA,IAC3B,EAAE,IAAI,CAAC,YAAY;AAClB,YAAM,eAAe,GAAG,KAAK,IAAI,IAAI,OAAO;AAC5C,YAAM,+BAA+B,GAAG,KAAK,IAAI,IAAI,OAAO;AAC5D,YAAM,aACL,KAAK,qBAAqB,wBAAwB,OAAO;AAC1D,YAAM,kBAAkB,CAAC,QAAQ,QAAQ,SAAS;AAClD,iBAAW,WACV,WAAW,YAAY,WAAW,SAAS,SACxC,gBAAgB,OAAO,WAAW,QAAQ,IAC1C;AACJ,iBAAW,uBAAuB;AAClC,iBAAW,OAAO;AAClB,UAAI,CAAC,WAAW,YAAY;AAC3B,mBAAW,aAAa,CAAC;AAAA,MAC1B;AACA,YAAM,aAAa,WAAW;AAC9B,iBAAW,MAAM,IAAI;AAAA,QACpB,MAAM,CAAC,KAAK,IAAI;AAAA,QAChB,kBAAkB,CAAC,KAAK,KAAK;AAAA,QAC7B,aAAa,IAAI;AAAA,UAChB;AAAA,UACA;AAAA,QACD;AAAA,QACA,SAAS;AAAA,QACT,oBACC,KAAK,qBAAqB,eACzB,KAAK,UACH,SACA,wBAAwB,KAAK,IAAI;AAAA,QACrC,cAAc,CAAC,CAAC,KAAK,qBAAqB;AAAA,QAC1C,cAAc,IAAI;AAAA,UACjB;AAAA,UACA;AAAA,QACD;AAAA,QACA,qBAAqB,IAAI;AAAA,UACxB;AAAA,UACA;AAAA,QACD;AAAA,MACD;AACA,iBAAW,SAAS,IAAI;AAAA,QACvB,MAAM,CAAC,OAAO;AAAA,QACd,aAAa,IAAI;AAAA,UAChB;AAAA,UACA;AAAA,QACD;AAAA,MACD;AACA,iBAAW,QAAQ,YAAY,QAAQ,EAAE,YAAY;AACpD,mBAAW,IAAI,IAAI;AAAA,UAClB,MAAM,mCAAmC,IAAI;AAAA,QAC9C;AAAA,MACD;AACA,aAAO,KAAK,UAAU,EAAE,QAAQ,CAAC,SAAS;AAEzC,mCAA2B;AAAA,UAC1B,WAAW,IAAI;AAAA,QAChB;AAAA,MACD,CAAC;AAED,kBAAY,YAAY,IAAI,EAAE,GAAG,WAAW;AAC5C,kBAAY,4BAA4B,IAAI;AAAA,QAC3C,MAAM;AAAA,QACN,sBAAsB;AAAA,QACtB,YAAY;AAAA,UACX;AAAA,UACA,CAAC,QACA,QAAQ,UAAU,QAAQ,aAAa,QAAQ;AAAA,QACjD;AAAA,MACD;AAGA,YAAM,iBAAiB,EAAE,GAAG,WAAW;AACvC,qBAAe,aAAa;AAAA,QAC3B,GAAG;AAAA,QACH,GAAG;AAAA,UACF,SAAS;AAAA,YACR,MAAM,iBAAiB,4BAA4B;AAAA,YACnD,aAAa,IAAI;AAAA,cAChB;AAAA,cACA;AAAA,YACD;AAAA,UACD;AAAA,UACA,KAAK;AAAA,YACJ,MAAM,iBAAiB,4BAA4B;AAAA,YACnD,aAAa,IAAI;AAAA,cAChB;AAAA,cACA;AAAA,YACD;AAAA,UACD;AAAA,UACA,OAAO;AAAA,YACN,MAAM,iBAAiB,4BAA4B;AAAA,YACnD,aAAa,IAAI;AAAA,cAChB;AAAA,cACA;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAEA,aAAO;AAAA,IACR,CAAC;AAAA,EACF;AACD;AAnaa,WAAN;AAAA,EAYJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAjBU;",
  "names": []
}
