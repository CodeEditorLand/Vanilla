import{matchesFuzzy as m}from"../../../../base/common/filters.js";import{DisposableStore as l}from"../../../../base/common/lifecycle.js";import{ILanguageService as p}from"../../../../editor/common/languages/language.js";import{getIconClasses as I}from"../../../../editor/common/services/getIconClasses.js";import{IModelService as g}from"../../../../editor/common/services/model.js";import*as S from"../../../../nls.js";import{IQuickInputService as f}from"../../../../platform/quickinput/common/quickInput.js";import{IEditorService as k}from"../../../services/editor/common/editorService.js";import{IDebugService as b}from"./debug.js";import{dirname as v}from"../../../../base/common/resources.js";import{ILabelService as P}from"../../../../platform/label/common/label.js";async function O(i){const a=i.get(f),u=i.get(b),n=i.get(k),s=u.getModel().getSessions(!1),c=i.get(g),r=i.get(p),o=i.get(P),t=new l,e=a.createQuickPick({useSeparators:!0});t.add(e),e.matchOnLabel=e.matchOnDescription=e.matchOnDetail=e.sortByLabel=!1,e.placeholder=S.localize("moveFocusedView.selectView","Search loaded scripts by name"),e.items=await d(e.value,s,n,c,r,o),t.add(e.onDidChangeValue(async()=>{e.items=await d(e.value,s,n,c,r,o)})),t.add(e.onDidAccept(()=>{e.selectedItems[0].accept(),e.hide(),t.dispose()})),e.show()}async function h(i,a,u,n,s,c){const r=[];return r.push({type:"separator",label:i.name}),(await i.getLoadedSources()).forEach(t=>{const e=y(t,a,u,n,s,c);e&&r.push(e)}),r}async function d(i,a,u,n,s,c){const r=[],o=await Promise.all(a.map(t=>h(t,i,u,n,s,c)));for(const t of o)for(const e of t)r.push(e);return r}function y(i,a,u,n,s,c){const r=c.getUriBasenameLabel(i.uri),o=c.getUriLabel(v(i.uri)),t=m(a,r,!0),e=m(a,o,!0);if(t||e)return{label:r,description:o==="."?void 0:o,highlights:{label:t??void 0,description:e??void 0},iconClasses:I(n,s,i.uri),accept:()=>{i.available&&i.openInEditor(u,{startLineNumber:0,startColumn:0,endLineNumber:0,endColumn:0})}}}export{O as showLoadedScriptMenu};
