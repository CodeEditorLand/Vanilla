import{Schemas as l}from"../../../../base/common/network.js";import{isAbsolute as g,normalize as p}from"../../../../base/common/path.js";import*as f from"../../../../base/common/resources.js";import{URI as u}from"../../../../base/common/uri.js";import"../../../../editor/common/core/range.js";import*as d from"../../../../nls.js";import{TextEditorSelectionRevealType as h}from"../../../../platform/editor/common/editor.js";import"../../../../platform/log/common/log.js";import"../../../../platform/uriIdentity/common/uriIdentity.js";import"../../../common/editor.js";import{ACTIVE_GROUP as b,SIDE_GROUP as I}from"../../../services/editor/common/editorService.js";import{DEBUG_SCHEME as s}from"./debug.js";import{isUri as S}from"./debugUtils.js";const m=d.localize("unknownSource","Unknown Source");class T{uri;available;raw;constructor(e,r,i,n){let o;e?(this.raw=e,o=this.raw.path||this.raw.name||"",this.available=!0):(this.raw={name:m},this.available=!1,o=`${s}:${m}`),this.uri=v(this.raw,o,r,i,n)}get name(){return this.raw.name||f.basenameOrAuthority(this.uri)}get origin(){return this.raw.origin}get presentationHint(){return this.raw.presentationHint}get reference(){return this.raw.sourceReference}get inMemory(){return this.uri.scheme===s}openInEditor(e,r,i,n,o){return this.available?e.openEditor({resource:this.uri,description:this.origin,options:{preserveFocus:i,selection:r,revealIfOpened:!0,selectionRevealType:h.CenterIfOutsideViewport,pinned:o}},n?I:b):Promise.resolve(void 0)}static getEncodedDebugData(e){let r,i,n;switch(e.scheme){case l.file:r=p(e.fsPath);break;case s:if(r=e.path,e.query){const o=e.query.split("&");for(const t of o){const c=t.split("=");if(c.length===2)switch(c[0]){case"session":n=c[1];break;case"ref":i=parseInt(c[1]);break}}}break;default:r=e.toString();break}return{name:f.basenameOrAuthority(e),path:r,sourceReference:i,sessionId:n}}}function v(a,e,r,i,n){const o=t=>typeof a.sourceReference=="number"&&a.sourceReference>0?u.from({scheme:s,path:t?.replace(/^\/+/g,"/"),query:`session=${r}&ref=${a.sourceReference}`}):t&&S(t)?i.asCanonicalUri(u.parse(t)):t&&g(t)?i.asCanonicalUri(u.file(t)):i.asCanonicalUri(u.from({scheme:s,path:t,query:`session=${r}`}));try{return o(e)}catch{return n.error("Invalid path from debug adapter: "+e),o("/invalidDebugSource")}}export{T as Source,m as UNKNOWN_SOURCE_LABEL,v as getUriFromSource};
