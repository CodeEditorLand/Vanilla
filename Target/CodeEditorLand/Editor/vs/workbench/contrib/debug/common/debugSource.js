import{Schemas as l}from"../../../../base/common/network.js";import{isAbsolute as p,normalize as g}from"../../../../base/common/path.js";import*as m from"../../../../base/common/resources.js";import{URI as u}from"../../../../base/common/uri.js";import*as d from"../../../../nls.js";import{TextEditorSelectionRevealType as h}from"../../../../platform/editor/common/editor.js";import{ACTIVE_GROUP as I,SIDE_GROUP as b}from"../../../services/editor/common/editorService.js";import{DEBUG_SCHEME as s}from"./debug.js";import{isUri as y}from"./debugUtils.js";const f=d.localize("unknownSource","Unknown Source");class D{uri;available;raw;constructor(e,r,o,n){let i;e?(this.raw=e,i=this.raw.path||this.raw.name||"",this.available=!0):(this.raw={name:f},this.available=!1,i=`${s}:${f}`),this.uri=S(this.raw,i,r,o,n)}get name(){return this.raw.name||m.basenameOrAuthority(this.uri)}get origin(){return this.raw.origin}get presentationHint(){return this.raw.presentationHint}get reference(){return this.raw.sourceReference}get inMemory(){return this.uri.scheme===s}openInEditor(e,r,o,n,i){return this.available?e.openEditor({resource:this.uri,description:this.origin,options:{preserveFocus:o,selection:r,revealIfOpened:!0,selectionRevealType:h.CenterIfOutsideViewport,pinned:i}},n?b:I):Promise.resolve(void 0)}static getEncodedDebugData(e){let r,o,n;switch(e.scheme){case l.file:r=g(e.fsPath);break;case s:if(r=e.path,e.query){const i=e.query.split("&");for(const t of i){const c=t.split("=");if(c.length===2)switch(c[0]){case"session":n=c[1];break;case"ref":o=Number.parseInt(c[1]);break}}}break;default:r=e.toString();break}return{name:m.basenameOrAuthority(e),path:r,sourceReference:o,sessionId:n}}}function S(a,e,r,o,n){const i=t=>typeof a.sourceReference=="number"&&a.sourceReference>0?u.from({scheme:s,path:t?.replace(/^\/+/g,"/"),query:`session=${r}&ref=${a.sourceReference}`}):t&&y(t)?o.asCanonicalUri(u.parse(t)):t&&p(t)?o.asCanonicalUri(u.file(t)):o.asCanonicalUri(u.from({scheme:s,path:t,query:`session=${r}`}));try{return i(e)}catch{return n.error("Invalid path from debug adapter: "+e),i("/invalidDebugSource")}}export{D as Source,f as UNKNOWN_SOURCE_LABEL,S as getUriFromSource};
