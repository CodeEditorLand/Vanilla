{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/common/replModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, type Event } from \"../../../../base/common/event.js\";\nimport severity from \"../../../../base/common/severity.js\";\nimport { isObject, isString } from \"../../../../base/common/types.js\";\nimport { generateUuid } from \"../../../../base/common/uuid.js\";\nimport * as nls from \"../../../../nls.js\";\nimport type { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport type {\n\tIDebugConfiguration,\n\tIDebugSession,\n\tIExpression,\n\tINestingReplElement,\n\tIReplElement,\n\tIReplElementSource,\n\tIStackFrame,\n} from \"./debug.js\";\nimport { ExpressionContainer } from \"./debugModel.js\";\n\nconst MAX_REPL_LENGTH = 10000;\nlet topReplElementCounter = 0;\nconst getUniqueId = () => `topReplElement:${topReplElementCounter++}`;\n\n/**\n * General case of data from DAP the `output` event. {@link ReplVariableElement}\n * is used instead only if there is a `variablesReference` with no `output` text.\n */\nexport class ReplOutputElement implements INestingReplElement {\n\tprivate _count = 1;\n\tprivate _onDidChangeCount = new Emitter<void>();\n\n\tconstructor(\n\t\tpublic session: IDebugSession,\n\t\tprivate id: string,\n\t\tpublic value: string,\n\t\tpublic severity: severity,\n\t\tpublic sourceData?: IReplElementSource,\n\t\tpublic readonly expression?: IExpression,\n\t) {}\n\n\ttoString(includeSource = false): string {\n\t\tlet valueRespectCount = this.value;\n\t\tfor (let i = 1; i < this.count; i++) {\n\t\t\tvalueRespectCount +=\n\t\t\t\t(valueRespectCount.endsWith(\"\\n\") ? \"\" : \"\\n\") + this.value;\n\t\t}\n\t\tconst sourceStr =\n\t\t\tthis.sourceData && includeSource\n\t\t\t\t? ` ${this.sourceData.source.name}`\n\t\t\t\t: \"\";\n\t\treturn valueRespectCount + sourceStr;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetChildren(): Promise<IReplElement[]> {\n\t\treturn this.expression?.getChildren() || Promise.resolve([]);\n\t}\n\n\tset count(value: number) {\n\t\tthis._count = value;\n\t\tthis._onDidChangeCount.fire();\n\t}\n\n\tget count(): number {\n\t\treturn this._count;\n\t}\n\n\tget onDidChangeCount(): Event<void> {\n\t\treturn this._onDidChangeCount.event;\n\t}\n\n\tget hasChildren() {\n\t\treturn !!this.expression?.hasChildren;\n\t}\n}\n\n/** Top-level variable logged via DAP output when there's no `output` string */\nexport class ReplVariableElement implements INestingReplElement {\n\tpublic readonly hasChildren: boolean;\n\tprivate readonly id = generateUuid();\n\n\tconstructor(\n\t\tprivate readonly session: IDebugSession,\n\t\tpublic readonly expression: IExpression,\n\t\tpublic readonly severity: severity,\n\t\tpublic readonly sourceData?: IReplElementSource,\n\t) {\n\t\tthis.hasChildren = expression.hasChildren;\n\t}\n\n\tgetSession() {\n\t\treturn this.session;\n\t}\n\n\tgetChildren(): IReplElement[] | Promise<IReplElement[]> {\n\t\treturn this.expression.getChildren();\n\t}\n\n\ttoString(): string {\n\t\treturn this.expression.toString();\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n}\n\nexport class RawObjectReplElement implements IExpression, INestingReplElement {\n\tprivate static readonly MAX_CHILDREN = 1000; // upper bound of children per value\n\n\tconstructor(\n\t\tprivate id: string,\n\t\tpublic name: string,\n\t\tpublic valueObj: any,\n\t\tpublic sourceData?: IReplElementSource,\n\t\tpublic annotation?: string,\n\t) {}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetSession(): IDebugSession | undefined {\n\t\treturn undefined;\n\t}\n\n\tget value(): string {\n\t\tif (this.valueObj === null) {\n\t\t\treturn \"null\";\n\t\t} else if (Array.isArray(this.valueObj)) {\n\t\t\treturn `Array[${this.valueObj.length}]`;\n\t\t} else if (isObject(this.valueObj)) {\n\t\t\treturn \"Object\";\n\t\t} else if (isString(this.valueObj)) {\n\t\t\treturn `\"${this.valueObj}\"`;\n\t\t}\n\n\t\treturn String(this.valueObj) || \"\";\n\t}\n\n\tget hasChildren(): boolean {\n\t\treturn (\n\t\t\t(Array.isArray(this.valueObj) && this.valueObj.length > 0) ||\n\t\t\t(isObject(this.valueObj) &&\n\t\t\t\tObject.getOwnPropertyNames(this.valueObj).length > 0)\n\t\t);\n\t}\n\n\tevaluateLazy(): Promise<void> {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\tgetChildren(): Promise<IExpression[]> {\n\t\tlet result: IExpression[] = [];\n\t\tif (Array.isArray(this.valueObj)) {\n\t\t\tresult = (<any[]>this.valueObj)\n\t\t\t\t.slice(0, RawObjectReplElement.MAX_CHILDREN)\n\t\t\t\t.map(\n\t\t\t\t\t(v, index) =>\n\t\t\t\t\t\tnew RawObjectReplElement(\n\t\t\t\t\t\t\t`${this.id}:${index}`,\n\t\t\t\t\t\t\tString(index),\n\t\t\t\t\t\t\tv,\n\t\t\t\t\t\t),\n\t\t\t\t);\n\t\t} else if (isObject(this.valueObj)) {\n\t\t\tresult = Object.getOwnPropertyNames(this.valueObj)\n\t\t\t\t.slice(0, RawObjectReplElement.MAX_CHILDREN)\n\t\t\t\t.map(\n\t\t\t\t\t(key, index) =>\n\t\t\t\t\t\tnew RawObjectReplElement(\n\t\t\t\t\t\t\t`${this.id}:${index}`,\n\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\tthis.valueObj[key],\n\t\t\t\t\t\t),\n\t\t\t\t);\n\t\t}\n\n\t\treturn Promise.resolve(result);\n\t}\n\n\ttoString(): string {\n\t\treturn `${this.name}\\n${this.value}`;\n\t}\n}\n\nexport class ReplEvaluationInput implements IReplElement {\n\tprivate id: string;\n\n\tconstructor(public value: string) {\n\t\tthis.id = generateUuid();\n\t}\n\n\ttoString(): string {\n\t\treturn this.value;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n}\n\nexport class ReplEvaluationResult\n\textends ExpressionContainer\n\timplements IReplElement\n{\n\tprivate _available = true;\n\n\tget available(): boolean {\n\t\treturn this._available;\n\t}\n\n\tconstructor(public readonly originalExpression: string) {\n\t\tsuper(undefined, undefined, 0, generateUuid());\n\t}\n\n\toverride async evaluateExpression(\n\t\texpression: string,\n\t\tsession: IDebugSession | undefined,\n\t\tstackFrame: IStackFrame | undefined,\n\t\tcontext: string,\n\t): Promise<boolean> {\n\t\tconst result = await super.evaluateExpression(\n\t\t\texpression,\n\t\t\tsession,\n\t\t\tstackFrame,\n\t\t\tcontext,\n\t\t);\n\t\tthis._available = result;\n\n\t\treturn result;\n\t}\n\n\toverride toString(): string {\n\t\treturn `${this.value}`;\n\t}\n}\n\nexport class ReplGroup implements INestingReplElement {\n\tprivate children: IReplElement[] = [];\n\tprivate id: string;\n\tprivate ended = false;\n\tstatic COUNTER = 0;\n\n\tconstructor(\n\t\tpublic readonly session: IDebugSession,\n\t\tpublic name: string,\n\t\tpublic autoExpand: boolean,\n\t\tpublic sourceData?: IReplElementSource,\n\t) {\n\t\tthis.id = `replGroup:${ReplGroup.COUNTER++}`;\n\t}\n\n\tget hasChildren() {\n\t\treturn true;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\ttoString(includeSource = false): string {\n\t\tconst sourceStr =\n\t\t\tincludeSource && this.sourceData\n\t\t\t\t? ` ${this.sourceData.source.name}`\n\t\t\t\t: \"\";\n\t\treturn this.name + sourceStr;\n\t}\n\n\taddChild(child: IReplElement): void {\n\t\tconst lastElement = this.children.length\n\t\t\t? this.children[this.children.length - 1]\n\t\t\t: undefined;\n\t\tif (lastElement instanceof ReplGroup && !lastElement.hasEnded) {\n\t\t\tlastElement.addChild(child);\n\t\t} else {\n\t\t\tthis.children.push(child);\n\t\t}\n\t}\n\n\tgetChildren(): IReplElement[] {\n\t\treturn this.children;\n\t}\n\n\tend(): void {\n\t\tconst lastElement = this.children.length\n\t\t\t? this.children[this.children.length - 1]\n\t\t\t: undefined;\n\t\tif (lastElement instanceof ReplGroup && !lastElement.hasEnded) {\n\t\t\tlastElement.end();\n\t\t} else {\n\t\t\tthis.ended = true;\n\t\t}\n\t}\n\n\tget hasEnded(): boolean {\n\t\treturn this.ended;\n\t}\n}\n\nfunction areSourcesEqual(\n\tfirst: IReplElementSource | undefined,\n\tsecond: IReplElementSource | undefined,\n): boolean {\n\tif (!first && !second) {\n\t\treturn true;\n\t}\n\tif (first && second) {\n\t\treturn (\n\t\t\tfirst.column === second.column &&\n\t\t\tfirst.lineNumber === second.lineNumber &&\n\t\t\tfirst.source.uri.toString() === second.source.uri.toString()\n\t\t);\n\t}\n\n\treturn false;\n}\n\nexport interface INewReplElementData {\n\toutput: string;\n\texpression?: IExpression;\n\tsev: severity;\n\tsource?: IReplElementSource;\n}\n\nexport class ReplModel {\n\tprivate replElements: IReplElement[] = [];\n\tprivate readonly _onDidChangeElements = new Emitter<\n\t\tIReplElement | undefined\n\t>();\n\treadonly onDidChangeElements = this._onDidChangeElements.event;\n\n\tconstructor(private readonly configurationService: IConfigurationService) {}\n\n\tgetReplElements(): IReplElement[] {\n\t\treturn this.replElements;\n\t}\n\n\tasync addReplExpression(\n\t\tsession: IDebugSession,\n\t\tstackFrame: IStackFrame | undefined,\n\t\texpression: string,\n\t): Promise<void> {\n\t\tthis.addReplElement(new ReplEvaluationInput(expression));\n\t\tconst result = new ReplEvaluationResult(expression);\n\t\tawait result.evaluateExpression(\n\t\t\texpression,\n\t\t\tsession,\n\t\t\tstackFrame,\n\t\t\t\"repl\",\n\t\t);\n\t\tthis.addReplElement(result);\n\t}\n\n\tappendToRepl(\n\t\tsession: IDebugSession,\n\t\t{ output, expression, sev, source }: INewReplElementData,\n\t): void {\n\t\tconst clearAnsiSequence = \"\\u001b[2J\";\n\t\tconst clearAnsiIndex = output.lastIndexOf(clearAnsiSequence);\n\t\tif (clearAnsiIndex !== -1) {\n\t\t\t// [2J is the ansi escape sequence for clearing the display http://ascii-table.com/ansi-escape-sequences.php\n\t\t\tthis.removeReplExpressions();\n\t\t\tthis.appendToRepl(session, {\n\t\t\t\toutput: nls.localize(\"consoleCleared\", \"Console was cleared\"),\n\t\t\t\tsev: severity.Ignore,\n\t\t\t});\n\t\t\toutput = output.substring(\n\t\t\t\tclearAnsiIndex + clearAnsiSequence.length,\n\t\t\t);\n\t\t}\n\n\t\tif (expression) {\n\t\t\t// if there is an output string, prefer to show that, since the DA could\n\t\t\t// have formatted it nicely e.g. with ANSI color codes.\n\t\t\tthis.addReplElement(\n\t\t\t\toutput\n\t\t\t\t\t? new ReplOutputElement(\n\t\t\t\t\t\t\tsession,\n\t\t\t\t\t\t\tgetUniqueId(),\n\t\t\t\t\t\t\toutput,\n\t\t\t\t\t\t\tsev,\n\t\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\texpression,\n\t\t\t\t\t\t)\n\t\t\t\t\t: new ReplVariableElement(session, expression, sev, source),\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst previousElement = this.replElements.length\n\t\t\t? this.replElements[this.replElements.length - 1]\n\t\t\t: undefined;\n\t\tif (\n\t\t\tpreviousElement instanceof ReplOutputElement &&\n\t\t\tpreviousElement.severity === sev\n\t\t) {\n\t\t\tconst config =\n\t\t\t\tthis.configurationService.getValue<IDebugConfiguration>(\n\t\t\t\t\t\"debug\",\n\t\t\t\t);\n\t\t\tif (\n\t\t\t\tpreviousElement.value === output &&\n\t\t\t\tareSourcesEqual(previousElement.sourceData, source) &&\n\t\t\t\tconfig.console.collapseIdenticalLines\n\t\t\t) {\n\t\t\t\tpreviousElement.count++;\n\t\t\t\t// No need to fire an event, just the count updates and badge will adjust automatically\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (\n\t\t\t\t!previousElement.value.endsWith(\"\\n\") &&\n\t\t\t\t!previousElement.value.endsWith(\"\\r\\n\") &&\n\t\t\t\tpreviousElement.count === 1\n\t\t\t) {\n\t\t\t\tthis.replElements[this.replElements.length - 1] =\n\t\t\t\t\tnew ReplOutputElement(\n\t\t\t\t\t\tsession,\n\t\t\t\t\t\tgetUniqueId(),\n\t\t\t\t\t\tpreviousElement.value + output,\n\t\t\t\t\t\tsev,\n\t\t\t\t\t\tsource,\n\t\t\t\t\t);\n\t\t\t\tthis._onDidChangeElements.fire(undefined);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst element = new ReplOutputElement(\n\t\t\tsession,\n\t\t\tgetUniqueId(),\n\t\t\toutput,\n\t\t\tsev,\n\t\t\tsource,\n\t\t);\n\t\tthis.addReplElement(element);\n\t}\n\n\tstartGroup(\n\t\tsession: IDebugSession,\n\t\tname: string,\n\t\tautoExpand: boolean,\n\t\tsourceData?: IReplElementSource,\n\t): void {\n\t\tconst group = new ReplGroup(session, name, autoExpand, sourceData);\n\t\tthis.addReplElement(group);\n\t}\n\n\tendGroup(): void {\n\t\tconst lastElement = this.replElements[this.replElements.length - 1];\n\t\tif (lastElement instanceof ReplGroup) {\n\t\t\tlastElement.end();\n\t\t}\n\t}\n\n\tprivate addReplElement(newElement: IReplElement): void {\n\t\tconst lastElement = this.replElements.length\n\t\t\t? this.replElements[this.replElements.length - 1]\n\t\t\t: undefined;\n\t\tif (lastElement instanceof ReplGroup && !lastElement.hasEnded) {\n\t\t\tlastElement.addChild(newElement);\n\t\t} else {\n\t\t\tthis.replElements.push(newElement);\n\t\t\tif (this.replElements.length > MAX_REPL_LENGTH) {\n\t\t\t\tthis.replElements.splice(\n\t\t\t\t\t0,\n\t\t\t\t\tthis.replElements.length - MAX_REPL_LENGTH,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tthis._onDidChangeElements.fire(newElement);\n\t}\n\n\tremoveReplExpressions(): void {\n\t\tif (this.replElements.length > 0) {\n\t\t\tthis.replElements = [];\n\t\t\tthis._onDidChangeElements.fire(undefined);\n\t\t}\n\t}\n\n\t/** Returns a new REPL model that's a copy of this one. */\n\tclone() {\n\t\tconst newRepl = new ReplModel(this.configurationService);\n\t\tnewRepl.replElements = this.replElements.slice();\n\t\treturn newRepl;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["severity"]
}
