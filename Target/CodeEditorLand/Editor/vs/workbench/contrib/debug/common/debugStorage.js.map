{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/common/debugStorage.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { observableValue } from \"../../../../base/common/observable.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport { ITextFileService } from \"../../../services/textfile/common/textfiles.js\";\nimport type { IDebugModel, IEvaluate, IExpression } from \"./debug.js\";\nimport {\n\tBreakpoint,\n\tDataBreakpoint,\n\tExceptionBreakpoint,\n\tExpression,\n\tFunctionBreakpoint,\n} from \"./debugModel.js\";\n\nconst DEBUG_BREAKPOINTS_KEY = \"debug.breakpoint\";\nconst DEBUG_FUNCTION_BREAKPOINTS_KEY = \"debug.functionbreakpoint\";\nconst DEBUG_DATA_BREAKPOINTS_KEY = \"debug.databreakpoint\";\nconst DEBUG_EXCEPTION_BREAKPOINTS_KEY = \"debug.exceptionbreakpoint\";\nconst DEBUG_WATCH_EXPRESSIONS_KEY = \"debug.watchexpressions\";\nconst DEBUG_CHOSEN_ENVIRONMENTS_KEY = \"debug.chosenenvironment\";\nconst DEBUG_UX_STATE_KEY = \"debug.uxstate\";\n\nexport class DebugStorage extends Disposable {\n\tpublic readonly breakpoints = observableValue(this, this.loadBreakpoints());\n\tpublic readonly functionBreakpoints = observableValue(\n\t\tthis,\n\t\tthis.loadFunctionBreakpoints(),\n\t);\n\tpublic readonly exceptionBreakpoints = observableValue(\n\t\tthis,\n\t\tthis.loadExceptionBreakpoints(),\n\t);\n\tpublic readonly dataBreakpoints = observableValue(\n\t\tthis,\n\t\tthis.loadDataBreakpoints(),\n\t);\n\tpublic readonly watchExpressions = observableValue(\n\t\tthis,\n\t\tthis.loadWatchExpressions(),\n\t);\n\n\tconstructor(\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\n\t\tthis._register(storageService.onDidChangeValue(StorageScope.WORKSPACE, undefined, this._store)(e => {\n\t\t\tif (e.external) {\n\t\t\t\tswitch (e.key) {\n\t\t\t\t\tcase DEBUG_BREAKPOINTS_KEY:\n\t\t\t\t\t\treturn this.breakpoints.set(this.loadBreakpoints(), undefined);\n\t\t\t\t\tcase DEBUG_FUNCTION_BREAKPOINTS_KEY:\n\t\t\t\t\t\treturn this.functionBreakpoints.set(this.loadFunctionBreakpoints(), undefined);\n\t\t\t\t\tcase DEBUG_EXCEPTION_BREAKPOINTS_KEY:\n\t\t\t\t\t\treturn this.exceptionBreakpoints.set(this.loadExceptionBreakpoints(), undefined);\n\t\t\t\t\tcase DEBUG_DATA_BREAKPOINTS_KEY:\n\t\t\t\t\t\treturn this.dataBreakpoints.set(this.loadDataBreakpoints(), undefined);\n\t\t\t\t\tcase DEBUG_WATCH_EXPRESSIONS_KEY:\n\t\t\t\t\t\treturn this.watchExpressions.set(this.loadWatchExpressions(), undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tloadDebugUxState(): \"simple\" | \"default\" {\n\t\treturn this.storageService.get(\n\t\t\tDEBUG_UX_STATE_KEY,\n\t\t\tStorageScope.WORKSPACE,\n\t\t\t\"default\",\n\t\t) as \"simple\" | \"default\";\n\t}\n\n\tstoreDebugUxState(value: \"simple\" | \"default\"): void {\n\t\tthis.storageService.store(\n\t\t\tDEBUG_UX_STATE_KEY,\n\t\t\tvalue,\n\t\t\tStorageScope.WORKSPACE,\n\t\t\tStorageTarget.MACHINE,\n\t\t);\n\t}\n\n\tprivate loadBreakpoints(): Breakpoint[] {\n\t\tlet result: Breakpoint[] | undefined;\n\t\ttry {\n\t\t\tresult = JSON.parse(\n\t\t\t\tthis.storageService.get(\n\t\t\t\t\tDEBUG_BREAKPOINTS_KEY,\n\t\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\t\t\"[]\",\n\t\t\t\t),\n\t\t\t).map((breakpoint: ReturnType<Breakpoint[\"toJSON\"]>) => {\n\t\t\t\tbreakpoint.uri = URI.revive(breakpoint.uri);\n\t\t\t\treturn new Breakpoint(\n\t\t\t\t\tbreakpoint,\n\t\t\t\t\tthis.textFileService,\n\t\t\t\t\tthis.uriIdentityService,\n\t\t\t\t\tthis.logService,\n\t\t\t\t\tbreakpoint.id,\n\t\t\t\t);\n\t\t\t});\n\t\t} catch (e) {}\n\n\t\treturn result || [];\n\t}\n\n\tprivate loadFunctionBreakpoints(): FunctionBreakpoint[] {\n\t\tlet result: FunctionBreakpoint[] | undefined;\n\t\ttry {\n\t\t\tresult = JSON.parse(\n\t\t\t\tthis.storageService.get(\n\t\t\t\t\tDEBUG_FUNCTION_BREAKPOINTS_KEY,\n\t\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\t\t\"[]\",\n\t\t\t\t),\n\t\t\t).map((fb: ReturnType<FunctionBreakpoint[\"toJSON\"]>) => {\n\t\t\t\treturn new FunctionBreakpoint(fb, fb.id);\n\t\t\t});\n\t\t} catch (e) {}\n\n\t\treturn result || [];\n\t}\n\n\tprivate loadExceptionBreakpoints(): ExceptionBreakpoint[] {\n\t\tlet result: ExceptionBreakpoint[] | undefined;\n\t\ttry {\n\t\t\tresult = JSON.parse(\n\t\t\t\tthis.storageService.get(\n\t\t\t\t\tDEBUG_EXCEPTION_BREAKPOINTS_KEY,\n\t\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\t\t\"[]\",\n\t\t\t\t),\n\t\t\t).map((exBreakpoint: ReturnType<ExceptionBreakpoint[\"toJSON\"]>) => {\n\t\t\t\treturn new ExceptionBreakpoint(exBreakpoint, exBreakpoint.id);\n\t\t\t});\n\t\t} catch (e) {}\n\n\t\treturn result || [];\n\t}\n\n\tprivate loadDataBreakpoints(): DataBreakpoint[] {\n\t\tlet result: DataBreakpoint[] | undefined;\n\t\ttry {\n\t\t\tresult = JSON.parse(\n\t\t\t\tthis.storageService.get(\n\t\t\t\t\tDEBUG_DATA_BREAKPOINTS_KEY,\n\t\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\t\t\"[]\",\n\t\t\t\t),\n\t\t\t).map((dbp: ReturnType<DataBreakpoint[\"toJSON\"]>) => {\n\t\t\t\treturn new DataBreakpoint(dbp, dbp.id);\n\t\t\t});\n\t\t} catch (e) {}\n\n\t\treturn result || [];\n\t}\n\n\tprivate loadWatchExpressions(): Expression[] {\n\t\tlet result: Expression[] | undefined;\n\t\ttry {\n\t\t\tresult = JSON.parse(\n\t\t\t\tthis.storageService.get(\n\t\t\t\t\tDEBUG_WATCH_EXPRESSIONS_KEY,\n\t\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\t\t\"[]\",\n\t\t\t\t),\n\t\t\t).map((watchStoredData: { name: string; id: string }) => {\n\t\t\t\treturn new Expression(watchStoredData.name, watchStoredData.id);\n\t\t\t});\n\t\t} catch (e) {}\n\n\t\treturn result || [];\n\t}\n\n\tloadChosenEnvironments(): { [key: string]: string } {\n\t\treturn JSON.parse(\n\t\t\tthis.storageService.get(\n\t\t\t\tDEBUG_CHOSEN_ENVIRONMENTS_KEY,\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\t\"{}\",\n\t\t\t),\n\t\t);\n\t}\n\n\tstoreChosenEnvironments(environments: { [key: string]: string }): void {\n\t\tthis.storageService.store(\n\t\t\tDEBUG_CHOSEN_ENVIRONMENTS_KEY,\n\t\t\tJSON.stringify(environments),\n\t\t\tStorageScope.WORKSPACE,\n\t\t\tStorageTarget.MACHINE,\n\t\t);\n\t}\n\n\tstoreWatchExpressions(watchExpressions: (IExpression & IEvaluate)[]): void {\n\t\tif (watchExpressions.length) {\n\t\t\tthis.storageService.store(\n\t\t\t\tDEBUG_WATCH_EXPRESSIONS_KEY,\n\t\t\t\tJSON.stringify(\n\t\t\t\t\twatchExpressions.map((we) => ({\n\t\t\t\t\t\tname: we.name,\n\t\t\t\t\t\tid: we.getId(),\n\t\t\t\t\t})),\n\t\t\t\t),\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\tStorageTarget.MACHINE,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.storageService.remove(\n\t\t\t\tDEBUG_WATCH_EXPRESSIONS_KEY,\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t);\n\t\t}\n\t}\n\n\tstoreBreakpoints(debugModel: IDebugModel): void {\n\t\tconst breakpoints = debugModel.getBreakpoints();\n\t\tif (breakpoints.length) {\n\t\t\tthis.storageService.store(\n\t\t\t\tDEBUG_BREAKPOINTS_KEY,\n\t\t\t\tJSON.stringify(breakpoints),\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\tStorageTarget.MACHINE,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.storageService.remove(\n\t\t\t\tDEBUG_BREAKPOINTS_KEY,\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t);\n\t\t}\n\n\t\tconst functionBreakpoints = debugModel.getFunctionBreakpoints();\n\t\tif (functionBreakpoints.length) {\n\t\t\tthis.storageService.store(\n\t\t\t\tDEBUG_FUNCTION_BREAKPOINTS_KEY,\n\t\t\t\tJSON.stringify(functionBreakpoints),\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\tStorageTarget.MACHINE,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.storageService.remove(\n\t\t\t\tDEBUG_FUNCTION_BREAKPOINTS_KEY,\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t);\n\t\t}\n\n\t\tconst dataBreakpoints = debugModel\n\t\t\t.getDataBreakpoints()\n\t\t\t.filter((dbp) => dbp.canPersist);\n\t\tif (dataBreakpoints.length) {\n\t\t\tthis.storageService.store(\n\t\t\t\tDEBUG_DATA_BREAKPOINTS_KEY,\n\t\t\t\tJSON.stringify(dataBreakpoints),\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\tStorageTarget.MACHINE,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.storageService.remove(\n\t\t\t\tDEBUG_DATA_BREAKPOINTS_KEY,\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t);\n\t\t}\n\n\t\tconst exceptionBreakpoints = debugModel.getExceptionBreakpoints();\n\t\tif (exceptionBreakpoints.length) {\n\t\t\tthis.storageService.store(\n\t\t\t\tDEBUG_EXCEPTION_BREAKPOINTS_KEY,\n\t\t\t\tJSON.stringify(exceptionBreakpoints),\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\tStorageTarget.MACHINE,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.storageService.remove(\n\t\t\t\tDEBUG_EXCEPTION_BREAKPOINTS_KEY,\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
