{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/common/debugSchemas.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IJSONSchema } from \"../../../../base/common/jsonSchema.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport * as nls from \"../../../../nls.js\";\nimport type { IExtensionManifest } from \"../../../../platform/extensions/common/extensions.js\";\nimport { SyncDescriptor } from \"../../../../platform/instantiation/common/descriptors.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { launchSchemaId } from \"../../../services/configuration/common/configuration.js\";\nimport { inputsSchema } from \"../../../services/configurationResolver/common/configurationResolverSchema.js\";\nimport {\n\tExtensions,\n\ttype IExtensionFeatureTableRenderer,\n\ttype IExtensionFeaturesRegistry,\n\ttype IRenderedData,\n\ttype IRowData,\n\ttype ITableData,\n} from \"../../../services/extensionManagement/common/extensionFeatures.js\";\nimport * as extensionsRegistry from \"../../../services/extensions/common/extensionsRegistry.js\";\nimport type {\n\tIBreakpointContribution,\n\tICompound,\n\tIDebuggerContribution,\n} from \"./debug.js\";\n\n// debuggers extension point\nexport const debuggersExtPoint =\n\textensionsRegistry.ExtensionsRegistry.registerExtensionPoint<\n\t\tIDebuggerContribution[]\n\t>({\n\t\textensionPoint: \"debuggers\",\n\t\tdefaultExtensionKind: [\"workspace\"],\n\t\tjsonSchema: {\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"vscode.extension.contributes.debuggers\",\n\t\t\t\t\"Contributes debug adapters.\",\n\t\t\t),\n\t\t\ttype: \"array\",\n\t\t\tdefaultSnippets: [{ body: [{ type: \"\" }] }],\n\t\t\titems: {\n\t\t\t\tadditionalProperties: false,\n\t\t\t\ttype: \"object\",\n\t\t\t\tdefaultSnippets: [\n\t\t\t\t\t{ body: { type: \"\", program: \"\", runtime: \"\" } },\n\t\t\t\t],\n\t\t\t\tproperties: {\n\t\t\t\t\ttype: {\n\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.debuggers.type\",\n\t\t\t\t\t\t\t\"Unique identifier for this debug adapter.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t},\n\t\t\t\t\tlabel: {\n\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.debuggers.label\",\n\t\t\t\t\t\t\t\"Display name for this debug adapter.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t},\n\t\t\t\t\tprogram: {\n\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.debuggers.program\",\n\t\t\t\t\t\t\t\"Path to the debug adapter program. Path is either absolute or relative to the extension folder.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t},\n\t\t\t\t\targs: {\n\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.debuggers.args\",\n\t\t\t\t\t\t\t\"Optional arguments to pass to the adapter.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"array\",\n\t\t\t\t\t},\n\t\t\t\t\truntime: {\n\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.debuggers.runtime\",\n\t\t\t\t\t\t\t\"Optional runtime in case the program attribute is not an executable but requires a runtime.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t},\n\t\t\t\t\truntimeArgs: {\n\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.debuggers.runtimeArgs\",\n\t\t\t\t\t\t\t\"Optional runtime arguments.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"array\",\n\t\t\t\t\t},\n\t\t\t\t\tvariables: {\n\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.debuggers.variables\",\n\t\t\t\t\t\t\t\"Mapping from interactive variables (e.g. ${action.pickProcess}) in `launch.json` to a command.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t},\n\t\t\t\t\tinitialConfigurations: {\n\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.debuggers.initialConfigurations\",\n\t\t\t\t\t\t\t\"Configurations for generating the initial 'launch.json'.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: [\"array\", \"string\"],\n\t\t\t\t\t},\n\t\t\t\t\tlanguages: {\n\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.debuggers.languages\",\n\t\t\t\t\t\t\t'List of languages for which the debug extension could be considered the \"default debugger\".',\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"array\",\n\t\t\t\t\t},\n\t\t\t\t\tconfigurationSnippets: {\n\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.debuggers.configurationSnippets\",\n\t\t\t\t\t\t\t\"Snippets for adding new configurations in 'launch.json'.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"array\",\n\t\t\t\t\t},\n\t\t\t\t\tconfigurationAttributes: {\n\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.debuggers.configurationAttributes\",\n\t\t\t\t\t\t\t\"JSON schema configurations for validating 'launch.json'.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t},\n\t\t\t\t\twhen: {\n\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.debuggers.when\",\n\t\t\t\t\t\t\t\"Condition which must be true to enable this type of debugger. Consider using 'shellExecutionSupported', 'virtualWorkspace', 'resourceScheme' or an extension-defined context key as appropriate for this.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tdefault: \"\",\n\t\t\t\t\t},\n\t\t\t\t\thiddenWhen: {\n\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.debuggers.hiddenWhen\",\n\t\t\t\t\t\t\t\"When this condition is true, this debugger type is hidden from the debugger list, but is still enabled.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tdefault: \"\",\n\t\t\t\t\t},\n\t\t\t\t\tdeprecated: {\n\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.debuggers.deprecated\",\n\t\t\t\t\t\t\t\"Optional message to mark this debug type as being deprecated.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tdefault: \"\",\n\t\t\t\t\t},\n\t\t\t\t\twindows: {\n\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.debuggers.windows\",\n\t\t\t\t\t\t\t\"Windows specific settings.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\truntime: {\n\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\"vscode.extension.contributes.debuggers.windows.runtime\",\n\t\t\t\t\t\t\t\t\t\"Runtime used for Windows.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tosx: {\n\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.debuggers.osx\",\n\t\t\t\t\t\t\t\"macOS specific settings.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\truntime: {\n\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\"vscode.extension.contributes.debuggers.osx.runtime\",\n\t\t\t\t\t\t\t\t\t\"Runtime used for macOS.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tlinux: {\n\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.debuggers.linux\",\n\t\t\t\t\t\t\t\"Linux specific settings.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\truntime: {\n\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\"vscode.extension.contributes.debuggers.linux.runtime\",\n\t\t\t\t\t\t\t\t\t\"Runtime used for Linux.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstrings: {\n\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.debuggers.strings\",\n\t\t\t\t\t\t\t\"UI strings contributed by this debug adapter.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tunverifiedBreakpoints: {\n\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\"vscode.extension.contributes.debuggers.strings.unverifiedBreakpoints\",\n\t\t\t\t\t\t\t\t\t\"When there are unverified breakpoints in a language supported by this debug adapter, this message will appear on the breakpoint hover and in the breakpoints view. Markdown and command links are supported.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t});\n\n// breakpoints extension point #9037\nexport const breakpointsExtPoint =\n\textensionsRegistry.ExtensionsRegistry.registerExtensionPoint<\n\t\tIBreakpointContribution[]\n\t>({\n\t\textensionPoint: \"breakpoints\",\n\t\tjsonSchema: {\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"vscode.extension.contributes.breakpoints\",\n\t\t\t\t\"Contributes breakpoints.\",\n\t\t\t),\n\t\t\ttype: \"array\",\n\t\t\tdefaultSnippets: [{ body: [{ language: \"\" }] }],\n\t\t\titems: {\n\t\t\t\ttype: \"object\",\n\t\t\t\tadditionalProperties: false,\n\t\t\t\tdefaultSnippets: [{ body: { language: \"\" } }],\n\t\t\t\tproperties: {\n\t\t\t\t\tlanguage: {\n\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.breakpoints.language\",\n\t\t\t\t\t\t\t\"Allow breakpoints for this language.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t},\n\t\t\t\t\twhen: {\n\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.breakpoints.when\",\n\t\t\t\t\t\t\t\"Condition which must be true to enable breakpoints in this language. Consider matching this to the debugger when clause as appropriate.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tdefault: \"\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t});\n\n// debug general schema\n\nexport const presentationSchema: IJSONSchema = {\n\ttype: \"object\",\n\tdescription: nls.localize(\n\t\t\"presentation\",\n\t\t\"Presentation options on how to show this configuration in the debug configuration dropdown and the command palette.\",\n\t),\n\tproperties: {\n\t\thidden: {\n\t\t\ttype: \"boolean\",\n\t\t\tdefault: false,\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"presentation.hidden\",\n\t\t\t\t\"Controls if this configuration should be shown in the configuration dropdown and the command palette.\",\n\t\t\t),\n\t\t},\n\t\tgroup: {\n\t\t\ttype: \"string\",\n\t\t\tdefault: \"\",\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"presentation.group\",\n\t\t\t\t\"Group that this configuration belongs to. Used for grouping and sorting in the configuration dropdown and the command palette.\",\n\t\t\t),\n\t\t},\n\t\torder: {\n\t\t\ttype: \"number\",\n\t\t\tdefault: 1,\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"presentation.order\",\n\t\t\t\t\"Order of this configuration within a group. Used for grouping and sorting in the configuration dropdown and the command palette.\",\n\t\t\t),\n\t\t},\n\t},\n\tdefault: {\n\t\thidden: false,\n\t\tgroup: \"\",\n\t\torder: 1,\n\t},\n};\nconst defaultCompound: ICompound = { name: \"Compound\", configurations: [] };\nexport const launchSchema: IJSONSchema = {\n\tid: launchSchemaId,\n\ttype: \"object\",\n\ttitle: nls.localize(\"app.launch.json.title\", \"Launch\"),\n\tallowTrailingCommas: true,\n\tallowComments: true,\n\trequired: [],\n\tdefault: { version: \"0.2.0\", configurations: [], compounds: [] },\n\tproperties: {\n\t\tversion: {\n\t\t\ttype: \"string\",\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"app.launch.json.version\",\n\t\t\t\t\"Version of this file format.\",\n\t\t\t),\n\t\t\tdefault: \"0.2.0\",\n\t\t},\n\t\tconfigurations: {\n\t\t\ttype: \"array\",\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"app.launch.json.configurations\",\n\t\t\t\t\"List of configurations. Add new configurations or edit existing ones by using IntelliSense.\",\n\t\t\t),\n\t\t\titems: {\n\t\t\t\tdefaultSnippets: [],\n\t\t\t\ttype: \"object\",\n\t\t\t\toneOf: [],\n\t\t\t},\n\t\t},\n\t\tcompounds: {\n\t\t\ttype: \"array\",\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"app.launch.json.compounds\",\n\t\t\t\t\"List of compounds. Each compound references multiple configurations which will get launched together.\",\n\t\t\t),\n\t\t\titems: {\n\t\t\t\ttype: \"object\",\n\t\t\t\trequired: [\"name\", \"configurations\"],\n\t\t\t\tproperties: {\n\t\t\t\t\tname: {\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\"app.launch.json.compound.name\",\n\t\t\t\t\t\t\t\"Name of compound. Appears in the launch configuration drop down menu.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\tpresentation: presentationSchema,\n\t\t\t\t\tconfigurations: {\n\t\t\t\t\t\ttype: \"array\",\n\t\t\t\t\t\tdefault: [],\n\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\toneOf: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tenum: [],\n\t\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\t\"useUniqueNames\",\n\t\t\t\t\t\t\t\t\t\t\"Please use unique configuration names.\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\t\t\t\trequired: [\"name\"],\n\t\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\t\t\t\tenum: [],\n\t\t\t\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\t\t\t\"app.launch.json.compound.name\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"Name of compound. Appears in the launch configuration drop down menu.\",\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tfolder: {\n\t\t\t\t\t\t\t\t\t\t\tenum: [],\n\t\t\t\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\t\t\t\"app.launch.json.compound.folder\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"Name of folder in which the compound is located.\",\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\"app.launch.json.compounds.configurations\",\n\t\t\t\t\t\t\t\"Names of configurations that will be started as part of this compound.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\tstopAll: {\n\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\"app.launch.json.compound.stopAll\",\n\t\t\t\t\t\t\t\"Controls whether manually terminating one session will stop all of the compound sessions.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\tpreLaunchTask: {\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tdefault: \"\",\n\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\"compoundPrelaunchTask\",\n\t\t\t\t\t\t\t\"Task to run before any of the compound configurations start.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: defaultCompound,\n\t\t\t},\n\t\t\tdefault: [defaultCompound],\n\t\t},\n\t\tinputs: inputsSchema.definitions!.inputs,\n\t},\n};\n\nclass DebuggersDataRenderer\n\textends Disposable\n\timplements IExtensionFeatureTableRenderer\n{\n\treadonly type = \"table\";\n\n\tshouldRender(manifest: IExtensionManifest): boolean {\n\t\treturn !!manifest.contributes?.debuggers;\n\t}\n\n\trender(manifest: IExtensionManifest): IRenderedData<ITableData> {\n\t\tconst contrib = manifest.contributes?.debuggers || [];\n\t\tif (!contrib.length) {\n\t\t\treturn { data: { headers: [], rows: [] }, dispose: () => {} };\n\t\t}\n\n\t\tconst headers = [\n\t\t\tnls.localize(\"debugger name\", \"Name\"),\n\t\t\tnls.localize(\"debugger type\", \"Type\"),\n\t\t];\n\n\t\tconst rows: IRowData[][] = contrib.map((d) => {\n\t\t\treturn [d.label ?? \"\", d.type];\n\t\t});\n\n\t\treturn {\n\t\t\tdata: {\n\t\t\t\theaders,\n\t\t\t\trows,\n\t\t\t},\n\t\t\tdispose: () => {},\n\t\t};\n\t}\n}\n\nRegistry.as<IExtensionFeaturesRegistry>(\n\tExtensions.ExtensionFeaturesRegistry,\n).registerExtensionFeature({\n\tid: \"debuggers\",\n\tlabel: nls.localize(\"debuggers\", \"Debuggers\"),\n\taccess: {\n\t\tcanToggle: false,\n\t},\n\trenderer: new SyncDescriptor(DebuggersDataRenderer),\n});\n"],
  "mappings": "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",
  "names": []
}
