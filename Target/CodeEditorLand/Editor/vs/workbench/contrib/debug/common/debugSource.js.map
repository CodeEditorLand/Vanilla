{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/common/debugSource.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { normalize, isAbsolute } from '../../../../base/common/path.js';\nimport * as resources from '../../../../base/common/resources.js';\nimport { DEBUG_SCHEME } from './debug.js';\nimport { IRange } from '../../../../editor/common/core/range.js';\nimport { IEditorService, SIDE_GROUP, ACTIVE_GROUP } from '../../../services/editor/common/editorService.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { isUri } from './debugUtils.js';\nimport { IEditorPane } from '../../../common/editor.js';\nimport { TextEditorSelectionRevealType } from '../../../../platform/editor/common/editor.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\n\nexport const UNKNOWN_SOURCE_LABEL = nls.localize('unknownSource', \"Unknown Source\");\n\n/**\n * Debug URI format\n *\n * a debug URI represents a Source object and the debug session where the Source comes from.\n *\n *       debug:arbitrary_path?session=123e4567-e89b-12d3-a456-426655440000&ref=1016\n *       \\___/ \\____________/ \\__________________________________________/ \\______/\n *         |          |                             |                          |\n *      scheme   source.path                    session id            source.reference\n *\n *\n */\n\nexport class Source {\n\n\treadonly uri: URI;\n\tavailable: boolean;\n\traw: DebugProtocol.Source;\n\n\tconstructor(raw_: DebugProtocol.Source | undefined, sessionId: string, uriIdentityService: IUriIdentityService, logService: ILogService) {\n\t\tlet path: string;\n\t\tif (raw_) {\n\t\t\tthis.raw = raw_;\n\t\t\tpath = this.raw.path || this.raw.name || '';\n\t\t\tthis.available = true;\n\t\t} else {\n\t\t\tthis.raw = { name: UNKNOWN_SOURCE_LABEL };\n\t\t\tthis.available = false;\n\t\t\tpath = `${DEBUG_SCHEME}:${UNKNOWN_SOURCE_LABEL}`;\n\t\t}\n\n\t\tthis.uri = getUriFromSource(this.raw, path, sessionId, uriIdentityService, logService);\n\t}\n\n\tget name() {\n\t\treturn this.raw.name || resources.basenameOrAuthority(this.uri);\n\t}\n\n\tget origin() {\n\t\treturn this.raw.origin;\n\t}\n\n\tget presentationHint() {\n\t\treturn this.raw.presentationHint;\n\t}\n\n\tget reference() {\n\t\treturn this.raw.sourceReference;\n\t}\n\n\tget inMemory() {\n\t\treturn this.uri.scheme === DEBUG_SCHEME;\n\t}\n\n\topenInEditor(editorService: IEditorService, selection: IRange, preserveFocus?: boolean, sideBySide?: boolean, pinned?: boolean): Promise<IEditorPane | undefined> {\n\t\treturn !this.available ? Promise.resolve(undefined) : editorService.openEditor({\n\t\t\tresource: this.uri,\n\t\t\tdescription: this.origin,\n\t\t\toptions: {\n\t\t\t\tpreserveFocus,\n\t\t\t\tselection,\n\t\t\t\trevealIfOpened: true,\n\t\t\t\tselectionRevealType: TextEditorSelectionRevealType.CenterIfOutsideViewport,\n\t\t\t\tpinned\n\t\t\t}\n\t\t}, sideBySide ? SIDE_GROUP : ACTIVE_GROUP);\n\t}\n\n\tstatic getEncodedDebugData(modelUri: URI): { name: string; path: string; sessionId?: string; sourceReference?: number } {\n\t\tlet path: string;\n\t\tlet sourceReference: number | undefined;\n\t\tlet sessionId: string | undefined;\n\n\t\tswitch (modelUri.scheme) {\n\t\t\tcase Schemas.file:\n\t\t\t\tpath = normalize(modelUri.fsPath);\n\t\t\t\tbreak;\n\t\t\tcase DEBUG_SCHEME:\n\t\t\t\tpath = modelUri.path;\n\t\t\t\tif (modelUri.query) {\n\t\t\t\t\tconst keyvalues = modelUri.query.split('&');\n\t\t\t\t\tfor (const keyvalue of keyvalues) {\n\t\t\t\t\t\tconst pair = keyvalue.split('=');\n\t\t\t\t\t\tif (pair.length === 2) {\n\t\t\t\t\t\t\tswitch (pair[0]) {\n\t\t\t\t\t\t\t\tcase 'session':\n\t\t\t\t\t\t\t\t\tsessionId = pair[1];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'ref':\n\t\t\t\t\t\t\t\t\tsourceReference = parseInt(pair[1]);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tpath = modelUri.toString();\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn {\n\t\t\tname: resources.basenameOrAuthority(modelUri),\n\t\t\tpath,\n\t\t\tsourceReference,\n\t\t\tsessionId\n\t\t};\n\t}\n}\n\nexport function getUriFromSource(raw: DebugProtocol.Source, path: string | undefined, sessionId: string, uriIdentityService: IUriIdentityService, logService: ILogService): URI {\n\tconst _getUriFromSource = (path: string | undefined) => {\n\t\tif (typeof raw.sourceReference === 'number' && raw.sourceReference > 0) {\n\t\t\treturn URI.from({\n\t\t\t\tscheme: DEBUG_SCHEME,\n\t\t\t\tpath: path?.replace(/^\\/+/g, '/'), // #174054\n\t\t\t\tquery: `session=${sessionId}&ref=${raw.sourceReference}`\n\t\t\t});\n\t\t}\n\n\t\tif (path && isUri(path)) {\t// path looks like a uri\n\t\t\treturn uriIdentityService.asCanonicalUri(URI.parse(path));\n\t\t}\n\t\t// assume a filesystem path\n\t\tif (path && isAbsolute(path)) {\n\t\t\treturn uriIdentityService.asCanonicalUri(URI.file(path));\n\t\t}\n\t\t// path is relative: since VS Code cannot deal with this by itself\n\t\t// create a debug url that will result in a DAP 'source' request when the url is resolved.\n\t\treturn uriIdentityService.asCanonicalUri(URI.from({\n\t\t\tscheme: DEBUG_SCHEME,\n\t\t\tpath,\n\t\t\tquery: `session=${sessionId}`\n\t\t}));\n\t};\n\n\n\ttry {\n\t\treturn _getUriFromSource(path);\n\t} catch (err) {\n\t\tlogService.error('Invalid path from debug adapter: ' + path);\n\t\treturn _getUriFromSource('/invalidDebugSource');\n\t}\n}\n"],
  "mappings": "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",
  "names": ["path"]
}
