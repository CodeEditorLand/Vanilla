{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/common/debugSource.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { isAbsolute, normalize } from \"../../../../base/common/path.js\";\nimport * as resources from \"../../../../base/common/resources.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport type { IRange } from \"../../../../editor/common/core/range.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { TextEditorSelectionRevealType } from \"../../../../platform/editor/common/editor.js\";\nimport type { ILogService } from \"../../../../platform/log/common/log.js\";\nimport type { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport type { IEditorPane } from \"../../../common/editor.js\";\nimport {\n\tACTIVE_GROUP,\n\ttype IEditorService,\n\tSIDE_GROUP,\n} from \"../../../services/editor/common/editorService.js\";\nimport { DEBUG_SCHEME } from \"./debug.js\";\nimport { isUri } from \"./debugUtils.js\";\n\nexport const UNKNOWN_SOURCE_LABEL = nls.localize(\n\t\"unknownSource\",\n\t\"Unknown Source\",\n);\n\n/**\n * Debug URI format\n *\n * a debug URI represents a Source object and the debug session where the Source comes from.\n *\n *       debug:arbitrary_path?session=123e4567-e89b-12d3-a456-426655440000&ref=1016\n *       \\___/ \\____________/ \\__________________________________________/ \\______/\n *         |          |                             |                          |\n *      scheme   source.path                    session id            source.reference\n *\n *\n */\n\nexport class Source {\n\treadonly uri: URI;\n\tavailable: boolean;\n\traw: DebugProtocol.Source;\n\n\tconstructor(\n\t\traw_: DebugProtocol.Source | undefined,\n\t\tsessionId: string,\n\t\turiIdentityService: IUriIdentityService,\n\t\tlogService: ILogService,\n\t) {\n\t\tlet path: string;\n\t\tif (raw_) {\n\t\t\tthis.raw = raw_;\n\t\t\tpath = this.raw.path || this.raw.name || \"\";\n\t\t\tthis.available = true;\n\t\t} else {\n\t\t\tthis.raw = { name: UNKNOWN_SOURCE_LABEL };\n\t\t\tthis.available = false;\n\t\t\tpath = `${DEBUG_SCHEME}:${UNKNOWN_SOURCE_LABEL}`;\n\t\t}\n\n\t\tthis.uri = getUriFromSource(\n\t\t\tthis.raw,\n\t\t\tpath,\n\t\t\tsessionId,\n\t\t\turiIdentityService,\n\t\t\tlogService,\n\t\t);\n\t}\n\n\tget name() {\n\t\treturn this.raw.name || resources.basenameOrAuthority(this.uri);\n\t}\n\n\tget origin() {\n\t\treturn this.raw.origin;\n\t}\n\n\tget presentationHint() {\n\t\treturn this.raw.presentationHint;\n\t}\n\n\tget reference() {\n\t\treturn this.raw.sourceReference;\n\t}\n\n\tget inMemory() {\n\t\treturn this.uri.scheme === DEBUG_SCHEME;\n\t}\n\n\topenInEditor(\n\t\teditorService: IEditorService,\n\t\tselection: IRange,\n\t\tpreserveFocus?: boolean,\n\t\tsideBySide?: boolean,\n\t\tpinned?: boolean,\n\t): Promise<IEditorPane | undefined> {\n\t\treturn this.available\n\t\t\t? editorService.openEditor(\n\t\t\t\t\t{\n\t\t\t\t\t\tresource: this.uri,\n\t\t\t\t\t\tdescription: this.origin,\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tpreserveFocus,\n\t\t\t\t\t\t\tselection,\n\t\t\t\t\t\t\trevealIfOpened: true,\n\t\t\t\t\t\t\tselectionRevealType:\n\t\t\t\t\t\t\t\tTextEditorSelectionRevealType.CenterIfOutsideViewport,\n\t\t\t\t\t\t\tpinned,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tsideBySide ? SIDE_GROUP : ACTIVE_GROUP,\n\t\t\t\t)\n\t\t\t: Promise.resolve(undefined);\n\t}\n\n\tstatic getEncodedDebugData(modelUri: URI): {\n\t\tname: string;\n\t\tpath: string;\n\t\tsessionId?: string;\n\t\tsourceReference?: number;\n\t} {\n\t\tlet path: string;\n\t\tlet sourceReference: number | undefined;\n\t\tlet sessionId: string | undefined;\n\n\t\tswitch (modelUri.scheme) {\n\t\t\tcase Schemas.file:\n\t\t\t\tpath = normalize(modelUri.fsPath);\n\t\t\t\tbreak;\n\t\t\tcase DEBUG_SCHEME:\n\t\t\t\tpath = modelUri.path;\n\t\t\t\tif (modelUri.query) {\n\t\t\t\t\tconst keyvalues = modelUri.query.split(\"&\");\n\t\t\t\t\tfor (const keyvalue of keyvalues) {\n\t\t\t\t\t\tconst pair = keyvalue.split(\"=\");\n\t\t\t\t\t\tif (pair.length === 2) {\n\t\t\t\t\t\t\tswitch (pair[0]) {\n\t\t\t\t\t\t\t\tcase \"session\":\n\t\t\t\t\t\t\t\t\tsessionId = pair[1];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"ref\":\n\t\t\t\t\t\t\t\t\tsourceReference = Number.parseInt(pair[1]);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tpath = modelUri.toString();\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn {\n\t\t\tname: resources.basenameOrAuthority(modelUri),\n\t\t\tpath,\n\t\t\tsourceReference,\n\t\t\tsessionId,\n\t\t};\n\t}\n}\n\nexport function getUriFromSource(\n\traw: DebugProtocol.Source,\n\tpath: string | undefined,\n\tsessionId: string,\n\turiIdentityService: IUriIdentityService,\n\tlogService: ILogService,\n): URI {\n\tconst _getUriFromSource = (path: string | undefined) => {\n\t\tif (\n\t\t\ttypeof raw.sourceReference === \"number\" &&\n\t\t\traw.sourceReference > 0\n\t\t) {\n\t\t\treturn URI.from({\n\t\t\t\tscheme: DEBUG_SCHEME,\n\t\t\t\tpath: path?.replace(/^\\/+/g, \"/\"), // #174054\n\t\t\t\tquery: `session=${sessionId}&ref=${raw.sourceReference}`,\n\t\t\t});\n\t\t}\n\n\t\tif (path && isUri(path)) {\n\t\t\t// path looks like a uri\n\t\t\treturn uriIdentityService.asCanonicalUri(URI.parse(path));\n\t\t}\n\t\t// assume a filesystem path\n\t\tif (path && isAbsolute(path)) {\n\t\t\treturn uriIdentityService.asCanonicalUri(URI.file(path));\n\t\t}\n\t\t// path is relative: since VS Code cannot deal with this by itself\n\t\t// create a debug url that will result in a DAP 'source' request when the url is resolved.\n\t\treturn uriIdentityService.asCanonicalUri(\n\t\t\tURI.from({\n\t\t\t\tscheme: DEBUG_SCHEME,\n\t\t\t\tpath,\n\t\t\t\tquery: `session=${sessionId}`,\n\t\t\t}),\n\t\t);\n\t};\n\n\ttry {\n\t\treturn _getUriFromSource(path);\n\t} catch (err) {\n\t\tlogService.error(\"Invalid path from debug adapter: \" + path);\n\t\treturn _getUriFromSource(\"/invalidDebugSource\");\n\t}\n}\n"],
  "mappings": "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",
  "names": ["path"]
}
