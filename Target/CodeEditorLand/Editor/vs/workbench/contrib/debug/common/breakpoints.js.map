{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/common/breakpoints.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tContextKeyExpr,\n\ttype ContextKeyExpression,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport type { IBreakpointContribution } from \"./debug.js\";\n\nexport class Breakpoints {\n\tprivate breakpointsWhen: ContextKeyExpression | undefined;\n\n\tconstructor(\n\t\tprivate readonly breakpointContribution: IBreakpointContribution,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t) {\n\t\tthis.breakpointsWhen = typeof breakpointContribution.when === 'string' ? ContextKeyExpr.deserialize(breakpointContribution.when) : undefined;\n\t}\n\n\tget language(): string {\n\t\treturn this.breakpointContribution.language;\n\t}\n\n\tget enabled(): boolean {\n\t\treturn (\n\t\t\t!this.breakpointsWhen ||\n\t\t\tthis.contextKeyService.contextMatchesRules(this.breakpointsWhen)\n\t\t);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA;AAAA,EACC;AAAA,EAEA;AAAA,OACM;AAGA,IAAM,cAAN,MAAkB;AAAA,EAGxB,YACkB,wBACoB,mBACpC;AAFgB;AACoB;AAErC,SAAK,kBAAkB,OAAO,uBAAuB,SAAS,WAAW,eAAe,YAAY,uBAAuB,IAAI,IAAI;AAAA,EACpI;AAAA,EApBD,OAYyB;AAAA;AAAA;AAAA,EAChB;AAAA,EASR,IAAI,WAAmB;AACtB,WAAO,KAAK,uBAAuB;AAAA,EACpC;AAAA,EAEA,IAAI,UAAmB;AACtB,WACC,CAAC,KAAK,mBACN,KAAK,kBAAkB,oBAAoB,KAAK,eAAe;AAAA,EAEjE;AACD;AApBa,cAAN;AAAA,EAKJ;AAAA,GALU;",
  "names": []
}
