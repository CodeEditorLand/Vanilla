{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/common/breakpoints.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ContextKeyExpr, ContextKeyExpression, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IBreakpointContribution } from './debug.js';\n\nexport class Breakpoints {\n\n\tprivate breakpointsWhen: ContextKeyExpression | undefined;\n\n\tconstructor(\n\t\tprivate readonly breakpointContribution: IBreakpointContribution,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t) {\n\t\tthis.breakpointsWhen = typeof breakpointContribution.when === 'string' ? ContextKeyExpr.deserialize(breakpointContribution.when) : undefined;\n\t}\n\n\tget language(): string {\n\t\treturn this.breakpointContribution.language;\n\t}\n\n\tget enabled(): boolean {\n\t\treturn !this.breakpointsWhen || this.contextKeyService.contextMatchesRules(this.breakpointsWhen);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,gBAAgB,sBAAsB,0BAA0B;AACzE,SAAS,+BAA+B;AAEjC,IAAM,cAAN,MAAkB;AAAA,EAIxB,YACkB,wBACoB,mBACpC;AAFgB;AACoB;AAErC,SAAK,kBAAkB,OAAO,uBAAuB,SAAS,WAAW,eAAe,YAAY,uBAAuB,IAAI,IAAI;AAAA,EACpI;AAAA,EAjBD,OAQyB;AAAA;AAAA;AAAA,EAEhB;AAAA,EASR,IAAI,WAAmB;AACtB,WAAO,KAAK,uBAAuB;AAAA,EACpC;AAAA,EAEA,IAAI,UAAmB;AACtB,WAAO,CAAC,KAAK,mBAAmB,KAAK,kBAAkB,oBAAoB,KAAK,eAAe;AAAA,EAChG;AACD;AAlBa,cAAN;AAAA,EAMJ;AAAA,GANU;",
  "names": []
}
