var v=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var c=(s,r,t,e)=>{for(var i=e>1?void 0:e?u(r,t):r,o=s.length-1,a;o>=0;o--)(a=s[o])&&(i=(e?a(r,t,i):a(i))||i);return e&&i&&v(r,t,i),i},n=(s,r)=>(t,e)=>r(t,e,s);import{IDebugService as b}from"./debug.js";import{Disposable as p,MutableDisposable as g}from"../../../../base/common/lifecycle.js";import"../../../common/contributions.js";import{ILogService as m}from"../../../../platform/log/common/log.js";import{IAccessibilityService as h}from"../../../../platform/accessibility/common/accessibility.js";import{IConfigurationService as d}from"../../../../platform/configuration/common/configuration.js";import{Expression as f}from"./debugModel.js";let l=class extends p{constructor(t,e,i,o){super();this._debugService=t;this._logService=e;this._accessibilityService=i;this._configurationService=o;this._setListener(),this._register(o.onDidChangeConfiguration(a=>{a.affectsConfiguration("accessibility.debugWatchVariableAnnouncements")&&this._setListener()}))}static ID="workbench.contrib.debugWatchAccessibilityAnnouncer";_listener=this._register(new g);_setListener(){this._configurationService.getValue("accessibility.debugWatchVariableAnnouncements")&&!this._listener.value?this._listener.value=this._debugService.getModel().onDidChangeWatchExpressionValue(e=>{!e||e.value===f.DEFAULT_VALUE||(this._accessibilityService.alert(`${e.name} = ${e.value}`),this._logService.trace(`debugAccessibilityAnnouncerValueChanged ${e.name} ${e.value}`))}):this._listener.clear()}};l=c([n(0,b),n(1,m),n(2,h),n(3,d)],l);export{l as DebugWatchAccessibilityAnnouncer};
