var u=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var l=(o,r,t,e)=>{for(var i=e>1?void 0:e?v(r,t):r,s=o.length-1,a;s>=0;s--)(a=o[s])&&(i=(e?a(r,t,i):a(i))||i);return e&&i&&u(r,t,i),i},n=(o,r)=>(t,e)=>r(t,e,o);import{Disposable as b,MutableDisposable as p}from"../../../../base/common/lifecycle.js";import{IAccessibilityService as m}from"../../../../platform/accessibility/common/accessibility.js";import{IConfigurationService as g}from"../../../../platform/configuration/common/configuration.js";import{ILogService as h}from"../../../../platform/log/common/log.js";import{IDebugService as d}from"./debug.js";import{Expression as f}from"./debugModel.js";let c=class extends b{constructor(t,e,i,s){super();this._debugService=t;this._logService=e;this._accessibilityService=i;this._configurationService=s;this._setListener(),this._register(s.onDidChangeConfiguration(a=>{a.affectsConfiguration("accessibility.debugWatchVariableAnnouncements")&&this._setListener()}))}static ID="workbench.contrib.debugWatchAccessibilityAnnouncer";_listener=this._register(new p);_setListener(){this._configurationService.getValue("accessibility.debugWatchVariableAnnouncements")&&!this._listener.value?this._listener.value=this._debugService.getModel().onDidChangeWatchExpressionValue(e=>{!e||e.value===f.DEFAULT_VALUE||(this._accessibilityService.alert(`${e.name} = ${e.value}`),this._logService.trace(`debugAccessibilityAnnouncerValueChanged ${e.name} ${e.value}`))}):this._listener.clear()}};c=l([n(0,d),n(1,h),n(2,m),n(3,g)],c);export{c as DebugWatchAccessibilityAnnouncer};
