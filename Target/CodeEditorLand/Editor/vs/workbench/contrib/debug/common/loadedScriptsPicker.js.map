{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/common/loadedScriptsPicker.ts"],
  "sourcesContent": ["import { matchesFuzzy } from \"../../../../base/common/filters.js\";\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { ILanguageService } from \"../../../../editor/common/languages/language.js\";\nimport { getIconClasses } from \"../../../../editor/common/services/getIconClasses.js\";\nimport { IModelService } from \"../../../../editor/common/services/model.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from \"../../../../nls.js\";\nimport {\n\tIQuickInputService,\n\ttype IQuickPickItem,\n\ttype IQuickPickSeparator,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { IDebugService, type IDebugSession } from \"./debug.js\";\nimport type { Source } from \"./debugSource.js\";\n\nimport { dirname } from \"../../../../base/common/resources.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ILabelService } from \"../../../../platform/label/common/label.js\";\n\nexport interface IPickerDebugItem extends IQuickPickItem {\n\taccept(): void;\n}\n\n/**\n * This function takes a regular quickpick and makes one for loaded scripts that has persistent headers\n * e.g. when some picks are filtered out, the ones that are visible still have its header.\n */\nexport async function showLoadedScriptMenu(accessor: ServicesAccessor) {\n\tconst quickInputService = accessor.get(IQuickInputService);\n\tconst debugService = accessor.get(IDebugService);\n\tconst editorService = accessor.get(IEditorService);\n\tconst sessions = debugService.getModel().getSessions(false);\n\tconst modelService = accessor.get(IModelService);\n\tconst languageService = accessor.get(ILanguageService);\n\tconst labelService = accessor.get(ILabelService);\n\n\tconst localDisposableStore = new DisposableStore();\n\tconst quickPick = quickInputService.createQuickPick<IPickerDebugItem>({\n\t\tuseSeparators: true,\n\t});\n\tlocalDisposableStore.add(quickPick);\n\tquickPick.matchOnLabel =\n\t\tquickPick.matchOnDescription =\n\t\tquickPick.matchOnDetail =\n\t\tquickPick.sortByLabel =\n\t\t\tfalse;\n\tquickPick.placeholder = nls.localize(\n\t\t\"moveFocusedView.selectView\",\n\t\t\"Search loaded scripts by name\",\n\t);\n\tquickPick.items = await _getPicks(\n\t\tquickPick.value,\n\t\tsessions,\n\t\teditorService,\n\t\tmodelService,\n\t\tlanguageService,\n\t\tlabelService,\n\t);\n\n\tlocalDisposableStore.add(\n\t\tquickPick.onDidChangeValue(async () => {\n\t\t\tquickPick.items = await _getPicks(\n\t\t\t\tquickPick.value,\n\t\t\t\tsessions,\n\t\t\t\teditorService,\n\t\t\t\tmodelService,\n\t\t\t\tlanguageService,\n\t\t\t\tlabelService,\n\t\t\t);\n\t\t}),\n\t);\n\tlocalDisposableStore.add(\n\t\tquickPick.onDidAccept(() => {\n\t\t\tconst selectedItem = quickPick.selectedItems[0];\n\t\t\tselectedItem.accept();\n\t\t\tquickPick.hide();\n\t\t\tlocalDisposableStore.dispose();\n\t\t}),\n\t);\n\tquickPick.show();\n}\n\nasync function _getPicksFromSession(\n\tsession: IDebugSession,\n\tfilter: string,\n\teditorService: IEditorService,\n\tmodelService: IModelService,\n\tlanguageService: ILanguageService,\n\tlabelService: ILabelService,\n): Promise<Array<IPickerDebugItem | IQuickPickSeparator>> {\n\tconst items: Array<IPickerDebugItem | IQuickPickSeparator> = [];\n\titems.push({ type: \"separator\", label: session.name });\n\tconst sources = await session.getLoadedSources();\n\n\tsources.forEach((element: Source) => {\n\t\tconst pick = _createPick(\n\t\t\telement,\n\t\t\tfilter,\n\t\t\teditorService,\n\t\t\tmodelService,\n\t\t\tlanguageService,\n\t\t\tlabelService,\n\t\t);\n\t\tif (pick) {\n\t\t\titems.push(pick);\n\t\t}\n\t});\n\treturn items;\n}\nasync function _getPicks(\n\tfilter: string,\n\tsessions: IDebugSession[],\n\teditorService: IEditorService,\n\tmodelService: IModelService,\n\tlanguageService: ILanguageService,\n\tlabelService: ILabelService,\n): Promise<Array<IPickerDebugItem | IQuickPickSeparator>> {\n\tconst loadedScriptPicks: Array<IPickerDebugItem | IQuickPickSeparator> = [];\n\n\tconst picks = await Promise.all(\n\t\tsessions.map((session) =>\n\t\t\t_getPicksFromSession(\n\t\t\t\tsession,\n\t\t\t\tfilter,\n\t\t\t\teditorService,\n\t\t\t\tmodelService,\n\t\t\t\tlanguageService,\n\t\t\t\tlabelService,\n\t\t\t),\n\t\t),\n\t);\n\n\tfor (const row of picks) {\n\t\tfor (const elem of row) {\n\t\t\tloadedScriptPicks.push(elem);\n\t\t}\n\t}\n\treturn loadedScriptPicks;\n}\n\nfunction _createPick(\n\tsource: Source,\n\tfilter: string,\n\teditorService: IEditorService,\n\tmodelService: IModelService,\n\tlanguageService: ILanguageService,\n\tlabelService: ILabelService,\n): IPickerDebugItem | undefined {\n\tconst label = labelService.getUriBasenameLabel(source.uri);\n\tconst desc = labelService.getUriLabel(dirname(source.uri));\n\n\t// manually filter so that headers don't get filtered out\n\tconst labelHighlights = matchesFuzzy(filter, label, true);\n\tconst descHighlights = matchesFuzzy(filter, desc, true);\n\tif (labelHighlights || descHighlights) {\n\t\treturn {\n\t\t\tlabel,\n\t\t\tdescription: desc === \".\" ? undefined : desc,\n\t\t\thighlights: {\n\t\t\t\tlabel: labelHighlights ?? undefined,\n\t\t\t\tdescription: descHighlights ?? undefined,\n\t\t\t},\n\t\t\ticonClasses: getIconClasses(\n\t\t\t\tmodelService,\n\t\t\t\tlanguageService,\n\t\t\t\tsource.uri,\n\t\t\t),\n\t\t\taccept: () => {\n\t\t\t\tif (source.available) {\n\t\t\t\t\tsource.openInEditor(editorService, {\n\t\t\t\t\t\tstartLineNumber: 0,\n\t\t\t\t\t\tstartColumn: 0,\n\t\t\t\t\t\tendLineNumber: 0,\n\t\t\t\t\t\tendColumn: 0,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t}\n\treturn undefined;\n}\n"],
  "mappings": ";;AAAA,SAAS,oBAAoB;AAC7B,SAAS,uBAAuB;AAChC,SAAS,wBAAwB;AACjC,SAAS,sBAAsB;AAC/B,SAAS,qBAAqB;AAK9B,YAAY,SAAS;AACrB;AAAA,EACC;AAAA,OAGM;AACP,SAAS,sBAAsB;AAC/B,SAAS,qBAAyC;AAGlD,SAAS,eAAe;AAExB,SAAS,qBAAqB;AAU9B,eAAsB,qBAAqB,UAA4B;AACtE,QAAM,oBAAoB,SAAS,IAAI,kBAAkB;AACzD,QAAM,eAAe,SAAS,IAAI,aAAa;AAC/C,QAAM,gBAAgB,SAAS,IAAI,cAAc;AACjD,QAAM,WAAW,aAAa,SAAS,EAAE,YAAY,KAAK;AAC1D,QAAM,eAAe,SAAS,IAAI,aAAa;AAC/C,QAAM,kBAAkB,SAAS,IAAI,gBAAgB;AACrD,QAAM,eAAe,SAAS,IAAI,aAAa;AAE/C,QAAM,uBAAuB,IAAI,gBAAgB;AACjD,QAAM,YAAY,kBAAkB,gBAAkC;AAAA,IACrE,eAAe;AAAA,EAChB,CAAC;AACD,uBAAqB,IAAI,SAAS;AAClC,YAAU,eACT,UAAU,qBACV,UAAU,gBACV,UAAU,cACT;AACF,YAAU,cAAc,IAAI;AAAA,IAC3B;AAAA,IACA;AAAA,EACD;AACA,YAAU,QAAQ,MAAM;AAAA,IACvB,UAAU;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AAEA,uBAAqB;AAAA,IACpB,UAAU,iBAAiB,YAAY;AACtC,gBAAU,QAAQ,MAAM;AAAA,QACvB,UAAU;AAAA,QACV;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AACA,uBAAqB;AAAA,IACpB,UAAU,YAAY,MAAM;AAC3B,YAAM,eAAe,UAAU,cAAc,CAAC;AAC9C,mBAAa,OAAO;AACpB,gBAAU,KAAK;AACf,2BAAqB,QAAQ;AAAA,IAC9B,CAAC;AAAA,EACF;AACA,YAAU,KAAK;AAChB;AArDsB;AAuDtB,eAAe,qBACd,SACA,QACA,eACA,cACA,iBACA,cACyD;AACzD,QAAM,QAAuD,CAAC;AAC9D,QAAM,KAAK,EAAE,MAAM,aAAa,OAAO,QAAQ,KAAK,CAAC;AACrD,QAAM,UAAU,MAAM,QAAQ,iBAAiB;AAE/C,UAAQ,QAAQ,CAAC,YAAoB;AACpC,UAAM,OAAO;AAAA,MACZ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AACA,QAAI,MAAM;AACT,YAAM,KAAK,IAAI;AAAA,IAChB;AAAA,EACD,CAAC;AACD,SAAO;AACR;AA1Be;AA2Bf,eAAe,UACd,QACA,UACA,eACA,cACA,iBACA,cACyD;AACzD,QAAM,oBAAmE,CAAC;AAE1E,QAAM,QAAQ,MAAM,QAAQ;AAAA,IAC3B,SAAS;AAAA,MAAI,CAAC,YACb;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAEA,aAAW,OAAO,OAAO;AACxB,eAAW,QAAQ,KAAK;AACvB,wBAAkB,KAAK,IAAI;AAAA,IAC5B;AAAA,EACD;AACA,SAAO;AACR;AA7Be;AA+Bf,SAAS,YACR,QACA,QACA,eACA,cACA,iBACA,cAC+B;AAC/B,QAAM,QAAQ,aAAa,oBAAoB,OAAO,GAAG;AACzD,QAAM,OAAO,aAAa,YAAY,QAAQ,OAAO,GAAG,CAAC;AAGzD,QAAM,kBAAkB,aAAa,QAAQ,OAAO,IAAI;AACxD,QAAM,iBAAiB,aAAa,QAAQ,MAAM,IAAI;AACtD,MAAI,mBAAmB,gBAAgB;AACtC,WAAO;AAAA,MACN;AAAA,MACA,aAAa,SAAS,MAAM,SAAY;AAAA,MACxC,YAAY;AAAA,QACX,OAAO,mBAAmB;AAAA,QAC1B,aAAa,kBAAkB;AAAA,MAChC;AAAA,MACA,aAAa;AAAA,QACZ;AAAA,QACA;AAAA,QACA,OAAO;AAAA,MACR;AAAA,MACA,QAAQ,6BAAM;AACb,YAAI,OAAO,WAAW;AACrB,iBAAO,aAAa,eAAe;AAAA,YAClC,iBAAiB;AAAA,YACjB,aAAa;AAAA,YACb,eAAe;AAAA,YACf,WAAW;AAAA,UACZ,CAAC;AAAA,QACF;AAAA,MACD,GATQ;AAAA,IAUT;AAAA,EACD;AACA,SAAO;AACR;AAxCS;",
  "names": []
}
