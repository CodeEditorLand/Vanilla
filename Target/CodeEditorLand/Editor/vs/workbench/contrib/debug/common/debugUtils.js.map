{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/common/debugUtils.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equalsIgnoreCase } from '../../../../base/common/strings.js';\nimport { IDebuggerContribution, IDebugSession, IConfigPresentation } from './debug.js';\nimport { URI as uri } from '../../../../base/common/uri.js';\nimport { isAbsolute } from '../../../../base/common/path.js';\nimport { deepClone } from '../../../../base/common/objects.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ITextModel } from '../../../../editor/common/model.js';\nimport { Position } from '../../../../editor/common/core/position.js';\nimport { IRange, Range } from '../../../../editor/common/core/range.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { ILanguageFeaturesService } from '../../../../editor/common/services/languageFeatures.js';\n\nconst _formatPIIRegexp = /{([^}]+)}/g;\n\nexport function formatPII(value: string, excludePII: boolean, args: { [key: string]: string } | undefined): string {\n\treturn value.replace(_formatPIIRegexp, function (match, group) {\n\t\tif (excludePII && group.length > 0 && group[0] !== '_') {\n\t\t\treturn match;\n\t\t}\n\n\t\treturn args && args.hasOwnProperty(group) ?\n\t\t\targs[group] :\n\t\t\tmatch;\n\t});\n}\n\n/**\n * Filters exceptions (keys marked with \"!\") from the given object. Used to\n * ensure exception data is not sent on web remotes, see #97628.\n */\nexport function filterExceptionsFromTelemetry<T extends { [key: string]: unknown }>(data: T): Partial<T> {\n\tconst output: Partial<T> = {};\n\tfor (const key of Object.keys(data) as (keyof T & string)[]) {\n\t\tif (!key.startsWith('!')) {\n\t\t\toutput[key] = data[key];\n\t\t}\n\t}\n\n\treturn output;\n}\n\n\nexport function isSessionAttach(session: IDebugSession): boolean {\n\treturn session.configuration.request === 'attach' && !getExtensionHostDebugSession(session) && (!session.parentSession || isSessionAttach(session.parentSession));\n}\n\n/**\n * Returns the session or any parent which is an extension host debug session.\n * Returns undefined if there's none.\n */\nexport function getExtensionHostDebugSession(session: IDebugSession): IDebugSession | void {\n\tlet type = session.configuration.type;\n\tif (!type) {\n\t\treturn;\n\t}\n\n\tif (type === 'vslsShare') {\n\t\ttype = (<any>session.configuration).adapterProxy.configuration.type;\n\t}\n\n\tif (equalsIgnoreCase(type, 'extensionhost') || equalsIgnoreCase(type, 'pwa-extensionhost')) {\n\t\treturn session;\n\t}\n\n\treturn session.parentSession ? getExtensionHostDebugSession(session.parentSession) : undefined;\n}\n\n// only a debugger contributions with a label, program, or runtime attribute is considered a \"defining\" or \"main\" debugger contribution\nexport function isDebuggerMainContribution(dbg: IDebuggerContribution) {\n\treturn dbg.type && (dbg.label || dbg.program || dbg.runtime);\n}\n\nexport function getExactExpressionStartAndEnd(lineContent: string, looseStart: number, looseEnd: number): { start: number; end: number } {\n\tlet matchingExpression: string | undefined = undefined;\n\tlet startOffset = 0;\n\n\t// Some example supported expressions: myVar.prop, a.b.c.d, myVar?.prop, myVar->prop, MyClass::StaticProp, *myVar\n\t// Match any character except a set of characters which often break interesting sub-expressions\n\tconst expression: RegExp = /([^()\\[\\]{}<>\\s+\\-/%~#^;=|,`!]|\\->)+/g;\n\tlet result: RegExpExecArray | null = null;\n\n\t// First find the full expression under the cursor\n\twhile (result = expression.exec(lineContent)) {\n\t\tconst start = result.index + 1;\n\t\tconst end = start + result[0].length;\n\n\t\tif (start <= looseStart && end >= looseEnd) {\n\t\t\tmatchingExpression = result[0];\n\t\t\tstartOffset = start;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// If there are non-word characters after the cursor, we want to truncate the expression then.\n\t// For example in expression 'a.b.c.d', if the focus was under 'b', 'a.b' would be evaluated.\n\tif (matchingExpression) {\n\t\tconst subExpression: RegExp = /(\\w|\\p{L})+/gu;\n\t\tlet subExpressionResult: RegExpExecArray | null = null;\n\t\twhile (subExpressionResult = subExpression.exec(matchingExpression)) {\n\t\t\tconst subEnd = subExpressionResult.index + 1 + startOffset + subExpressionResult[0].length;\n\t\t\tif (subEnd >= looseEnd) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (subExpressionResult) {\n\t\t\tmatchingExpression = matchingExpression.substring(0, subExpression.lastIndex);\n\t\t}\n\t}\n\n\treturn matchingExpression ?\n\t\t{ start: startOffset, end: startOffset + matchingExpression.length - 1 } :\n\t\t{ start: 0, end: 0 };\n}\n\nexport async function getEvaluatableExpressionAtPosition(languageFeaturesService: ILanguageFeaturesService, model: ITextModel, position: Position, token?: CancellationToken): Promise<{ range: IRange; matchingExpression: string } | null> {\n\tif (languageFeaturesService.evaluatableExpressionProvider.has(model)) {\n\t\tconst supports = languageFeaturesService.evaluatableExpressionProvider.ordered(model);\n\n\t\tconst results = coalesce(await Promise.all(supports.map(async support => {\n\t\t\ttry {\n\t\t\t\treturn await support.provideEvaluatableExpression(model, position, token ?? CancellationToken.None);\n\t\t\t} catch (err) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t})));\n\n\t\tif (results.length > 0) {\n\t\t\tlet matchingExpression = results[0].expression;\n\t\t\tconst range = results[0].range;\n\n\t\t\tif (!matchingExpression) {\n\t\t\t\tconst lineContent = model.getLineContent(position.lineNumber);\n\t\t\t\tmatchingExpression = lineContent.substring(range.startColumn - 1, range.endColumn - 1);\n\t\t\t}\n\n\t\t\treturn { range, matchingExpression };\n\t\t}\n\t} else { // old one-size-fits-all strategy\n\t\tconst lineContent = model.getLineContent(position.lineNumber);\n\t\tconst { start, end } = getExactExpressionStartAndEnd(lineContent, position.column, position.column);\n\n\t\t// use regex to extract the sub-expression #9821\n\t\tconst matchingExpression = lineContent.substring(start - 1, end);\n\t\treturn {\n\t\t\tmatchingExpression,\n\t\t\trange: new Range(position.lineNumber, start, position.lineNumber, start + matchingExpression.length)\n\t\t};\n\t}\n\n\treturn null;\n}\n\n// RFC 2396, Appendix A: https://www.ietf.org/rfc/rfc2396.txt\nconst _schemePattern = /^[a-zA-Z][a-zA-Z0-9\\+\\-\\.]+:/;\n\nexport function isUri(s: string | undefined): boolean {\n\t// heuristics: a valid uri starts with a scheme and\n\t// the scheme has at least 2 characters so that it doesn't look like a drive letter.\n\treturn !!(s && s.match(_schemePattern));\n}\n\nfunction stringToUri(source: PathContainer): string | undefined {\n\tif (typeof source.path === 'string') {\n\t\tif (typeof source.sourceReference === 'number' && source.sourceReference > 0) {\n\t\t\t// if there is a source reference, don't touch path\n\t\t} else {\n\t\t\tif (isUri(source.path)) {\n\t\t\t\treturn <string><unknown>uri.parse(source.path);\n\t\t\t} else {\n\t\t\t\t// assume path\n\t\t\t\tif (isAbsolute(source.path)) {\n\t\t\t\t\treturn <string><unknown>uri.file(source.path);\n\t\t\t\t} else {\n\t\t\t\t\t// leave relative path as is\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn source.path;\n}\n\nfunction uriToString(source: PathContainer): string | undefined {\n\tif (typeof source.path === 'object') {\n\t\tconst u = uri.revive(source.path);\n\t\tif (u) {\n\t\t\tif (u.scheme === Schemas.file) {\n\t\t\t\treturn u.fsPath;\n\t\t\t} else {\n\t\t\t\treturn u.toString();\n\t\t\t}\n\t\t}\n\t}\n\treturn source.path;\n}\n\n// path hooks helpers\n\ninterface PathContainer {\n\tpath?: string;\n\tsourceReference?: number;\n}\n\nexport function convertToDAPaths(message: DebugProtocol.ProtocolMessage, toUri: boolean): DebugProtocol.ProtocolMessage {\n\n\tconst fixPath = toUri ? stringToUri : uriToString;\n\n\t// since we modify Source.paths in the message in place, we need to make a copy of it (see #61129)\n\tconst msg = deepClone(message);\n\n\tconvertPaths(msg, (toDA: boolean, source: PathContainer | undefined) => {\n\t\tif (toDA && source) {\n\t\t\tsource.path = fixPath(source);\n\t\t}\n\t});\n\treturn msg;\n}\n\nexport function convertToVSCPaths(message: DebugProtocol.ProtocolMessage, toUri: boolean): DebugProtocol.ProtocolMessage {\n\n\tconst fixPath = toUri ? stringToUri : uriToString;\n\n\t// since we modify Source.paths in the message in place, we need to make a copy of it (see #61129)\n\tconst msg = deepClone(message);\n\n\tconvertPaths(msg, (toDA: boolean, source: PathContainer | undefined) => {\n\t\tif (!toDA && source) {\n\t\t\tsource.path = fixPath(source);\n\t\t}\n\t});\n\treturn msg;\n}\n\nfunction convertPaths(msg: DebugProtocol.ProtocolMessage, fixSourcePath: (toDA: boolean, source: PathContainer | undefined) => void): void {\n\n\tswitch (msg.type) {\n\t\tcase 'event': {\n\t\t\tconst event = <DebugProtocol.Event>msg;\n\t\t\tswitch (event.event) {\n\t\t\t\tcase 'output':\n\t\t\t\t\tfixSourcePath(false, (<DebugProtocol.OutputEvent>event).body.source);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'loadedSource':\n\t\t\t\t\tfixSourcePath(false, (<DebugProtocol.LoadedSourceEvent>event).body.source);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'breakpoint':\n\t\t\t\t\tfixSourcePath(false, (<DebugProtocol.BreakpointEvent>event).body.breakpoint.source);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase 'request': {\n\t\t\tconst request = <DebugProtocol.Request>msg;\n\t\t\tswitch (request.command) {\n\t\t\t\tcase 'setBreakpoints':\n\t\t\t\t\tfixSourcePath(true, (<DebugProtocol.SetBreakpointsArguments>request.arguments).source);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'breakpointLocations':\n\t\t\t\t\tfixSourcePath(true, (<DebugProtocol.BreakpointLocationsArguments>request.arguments).source);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'source':\n\t\t\t\t\tfixSourcePath(true, (<DebugProtocol.SourceArguments>request.arguments).source);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gotoTargets':\n\t\t\t\t\tfixSourcePath(true, (<DebugProtocol.GotoTargetsArguments>request.arguments).source);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'launchVSCode':\n\t\t\t\t\trequest.arguments.args.forEach((arg: PathContainer | undefined) => fixSourcePath(false, arg));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase 'response': {\n\t\t\tconst response = <DebugProtocol.Response>msg;\n\t\t\tif (response.success && response.body) {\n\t\t\t\tswitch (response.command) {\n\t\t\t\t\tcase 'stackTrace':\n\t\t\t\t\t\t(<DebugProtocol.StackTraceResponse>response).body.stackFrames.forEach(frame => fixSourcePath(false, frame.source));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'loadedSources':\n\t\t\t\t\t\t(<DebugProtocol.LoadedSourcesResponse>response).body.sources.forEach(source => fixSourcePath(false, source));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'scopes':\n\t\t\t\t\t\t(<DebugProtocol.ScopesResponse>response).body.scopes.forEach(scope => fixSourcePath(false, scope.source));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'setFunctionBreakpoints':\n\t\t\t\t\t\t(<DebugProtocol.SetFunctionBreakpointsResponse>response).body.breakpoints.forEach(bp => fixSourcePath(false, bp.source));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'setBreakpoints':\n\t\t\t\t\t\t(<DebugProtocol.SetBreakpointsResponse>response).body.breakpoints.forEach(bp => fixSourcePath(false, bp.source));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'disassemble':\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst di = <DebugProtocol.DisassembleResponse>response;\n\t\t\t\t\t\t\tdi.body?.instructions.forEach(di => fixSourcePath(false, di.location));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'locations':\n\t\t\t\t\t\tfixSourcePath(false, (<DebugProtocol.LocationsResponse>response).body?.source);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport function getVisibleAndSorted<T extends { presentation?: IConfigPresentation }>(array: T[]): T[] {\n\treturn array.filter(config => !config.presentation?.hidden).sort((first, second) => {\n\t\tif (!first.presentation) {\n\t\t\tif (!second.presentation) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn 1;\n\t\t}\n\t\tif (!second.presentation) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (!first.presentation.group) {\n\t\t\tif (!second.presentation.group) {\n\t\t\t\treturn compareOrders(first.presentation.order, second.presentation.order);\n\t\t\t}\n\t\t\treturn 1;\n\t\t}\n\t\tif (!second.presentation.group) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (first.presentation.group !== second.presentation.group) {\n\t\t\treturn first.presentation.group.localeCompare(second.presentation.group);\n\t\t}\n\n\t\treturn compareOrders(first.presentation.order, second.presentation.order);\n\t});\n}\n\nfunction compareOrders(first: number | undefined, second: number | undefined): number {\n\tif (typeof first !== 'number') {\n\t\tif (typeof second !== 'number') {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn 1;\n\t}\n\tif (typeof second !== 'number') {\n\t\treturn -1;\n\t}\n\n\treturn first - second;\n}\n\nexport async function saveAllBeforeDebugStart(configurationService: IConfigurationService, editorService: IEditorService): Promise<void> {\n\tconst saveBeforeStartConfig: string = configurationService.getValue('debug.saveBeforeStart', { overrideIdentifier: editorService.activeTextEditorLanguageId });\n\tif (saveBeforeStartConfig !== 'none') {\n\t\tawait editorService.saveAll();\n\t\tif (saveBeforeStartConfig === 'allEditorsInActiveGroup') {\n\t\t\tconst activeEditor = editorService.activeEditorPane;\n\t\t\tif (activeEditor && activeEditor.input.resource?.scheme === Schemas.untitled) {\n\t\t\t\t// Make sure to save the active editor in case it is in untitled file it wont be saved as part of saveAll #111850\n\t\t\t\tawait editorService.save({ editor: activeEditor.input, groupId: activeEditor.group.id });\n\t\t\t}\n\t\t}\n\t}\n\tawait configurationService.reloadConfiguration();\n}\n\nexport const sourcesEqual = (a: DebugProtocol.Source | undefined, b: DebugProtocol.Source | undefined): boolean =>\n\t!a || !b ? a === b : a.name === b.name && a.path === b.path && a.sourceReference === b.sourceReference;\n"],
  "mappings": "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",
  "names": ["di"]
}
