import{Emitter as i}from"../../../../base/common/event.js";import{CONTEXT_DISASSEMBLE_REQUEST_SUPPORTED as p,CONTEXT_EXPRESSION_SELECTED as u,CONTEXT_FOCUSED_SESSION_IS_ATTACH as S,CONTEXT_FOCUSED_SESSION_IS_NO_DEBUG as E,CONTEXT_FOCUSED_STACK_FRAME_HAS_INSTRUCTION_POINTER_REFERENCE as l,CONTEXT_JUMP_TO_CURSOR_SUPPORTED as T,CONTEXT_LOADED_SCRIPTS_SUPPORTED as h,CONTEXT_MULTI_SESSION_DEBUG as c,CONTEXT_RESTART_FRAME_SUPPORTED as I,CONTEXT_SET_DATA_BREAKPOINT_BYTES_SUPPORTED as b,CONTEXT_SET_EXPRESSION_SUPPORTED as _,CONTEXT_SET_VARIABLE_SUPPORTED as f,CONTEXT_STEP_BACK_SUPPORTED as D,CONTEXT_STEP_INTO_TARGETS_SUPPORTED as g,CONTEXT_SUSPEND_DEBUGGEE_SUPPORTED as C,CONTEXT_TERMINATE_DEBUGGEE_SUPPORTED as x}from"./debug.js";import{isSessionAttach as m}from"./debugUtils.js";class R{constructor(e){this.contextKeyService=e;e.bufferChangeEvents(()=>{this.expressionSelectedContextKey=u.bindTo(e),this.loadedScriptsSupportedContextKey=h.bindTo(e),this.stepBackSupportedContextKey=D.bindTo(e),this.focusedSessionIsAttach=S.bindTo(e),this.focusedSessionIsNoDebug=E.bindTo(e),this.restartFrameSupportedContextKey=I.bindTo(e),this.stepIntoTargetsSupported=g.bindTo(e),this.jumpToCursorSupported=T.bindTo(e),this.setVariableSupported=f.bindTo(e),this.setDataBreakpointAtByteSupported=b.bindTo(e),this.setExpressionSupported=_.bindTo(e),this.multiSessionDebug=c.bindTo(e),this.terminateDebuggeeSupported=x.bindTo(e),this.suspendDebuggeeSupported=C.bindTo(e),this.disassembleRequestSupported=p.bindTo(e),this.focusedStackFrameHasInstructionPointerReference=l.bindTo(e)})}firstSessionStart=!0;_focusedStackFrame;_focusedSession;_focusedThread;selectedExpression;_onDidFocusSession=new i;_onDidFocusThread=new i;_onDidFocusStackFrame=new i;_onDidSelectExpression=new i;_onDidEvaluateLazyExpression=new i;_onWillUpdateViews=new i;_onDidChangeVisualization=new i;visualized=new WeakMap;preferredVisualizers=new Map;expressionSelectedContextKey;loadedScriptsSupportedContextKey;stepBackSupportedContextKey;focusedSessionIsAttach;focusedSessionIsNoDebug;restartFrameSupportedContextKey;stepIntoTargetsSupported;jumpToCursorSupported;setVariableSupported;setDataBreakpointAtByteSupported;setExpressionSupported;multiSessionDebug;terminateDebuggeeSupported;suspendDebuggeeSupported;disassembleRequestSupported;focusedStackFrameHasInstructionPointerReference;getId(){return"root"}get focusedSession(){return this._focusedSession}get focusedThread(){return this._focusedThread}get focusedStackFrame(){return this._focusedStackFrame}setFocus(e,s,t,o){const n=this._focusedStackFrame!==e,r=this._focusedSession!==t,a=this._focusedThread!==s;this._focusedStackFrame=e,this._focusedThread=s,this._focusedSession=t,this.contextKeyService.bufferChangeEvents(()=>{this.loadedScriptsSupportedContextKey.set(!!t?.capabilities.supportsLoadedSourcesRequest),this.stepBackSupportedContextKey.set(!!t?.capabilities.supportsStepBack),this.restartFrameSupportedContextKey.set(!!t?.capabilities.supportsRestartFrame),this.stepIntoTargetsSupported.set(!!t?.capabilities.supportsStepInTargetsRequest),this.jumpToCursorSupported.set(!!t?.capabilities.supportsGotoTargetsRequest),this.setVariableSupported.set(!!t?.capabilities.supportsSetVariable),this.setDataBreakpointAtByteSupported.set(!!t?.capabilities.supportsDataBreakpointBytes),this.setExpressionSupported.set(!!t?.capabilities.supportsSetExpression),this.terminateDebuggeeSupported.set(!!t?.capabilities.supportTerminateDebuggee),this.suspendDebuggeeSupported.set(!!t?.capabilities.supportSuspendDebuggee),this.disassembleRequestSupported.set(!!t?.capabilities.supportsDisassembleRequest),this.focusedStackFrameHasInstructionPointerReference.set(!!e?.instructionPointerReference);const d=!!t&&m(t);this.focusedSessionIsAttach.set(d),this.focusedSessionIsNoDebug.set(!!t&&!!t.configuration.noDebug)}),r&&this._onDidFocusSession.fire(t),n?this._onDidFocusStackFrame.fire({stackFrame:e,explicit:o,session:t}):a&&this._onDidFocusThread.fire({thread:s,explicit:o,session:t})}get onDidFocusSession(){return this._onDidFocusSession.event}get onDidFocusThread(){return this._onDidFocusThread.event}get onDidFocusStackFrame(){return this._onDidFocusStackFrame.event}get onDidChangeVisualization(){return this._onDidChangeVisualization.event}getSelectedExpression(){return this.selectedExpression}setSelectedExpression(e,s){this.selectedExpression=e?{expression:e,settingWatch:s}:void 0,this.expressionSelectedContextKey.set(!!e),this._onDidSelectExpression.fire(this.selectedExpression)}get onDidSelectExpression(){return this._onDidSelectExpression.event}get onDidEvaluateLazyExpression(){return this._onDidEvaluateLazyExpression.event}updateViews(){this._onWillUpdateViews.fire()}get onWillUpdateViews(){return this._onWillUpdateViews.event}isMultiSessionView(){return!!this.multiSessionDebug.get()}setMultiSessionView(e){this.multiSessionDebug.set(e)}setVisualizedExpression(e,s){const t=this.visualized.get(e)||e,o=this.getPreferredVisualizedKey(e);s?(this.visualized.set(e,s),this.preferredVisualizers.set(o,s.treeId)):(this.visualized.delete(e),this.preferredVisualizers.delete(o)),this._onDidChangeVisualization.fire({original:t,replacement:s||e})}getVisualizedExpression(e){return this.visualized.get(e)||this.preferredVisualizers.get(this.getPreferredVisualizedKey(e))}async evaluateLazyExpression(e){await e.evaluateLazy(),this._onDidEvaluateLazyExpression.fire(e)}getPreferredVisualizedKey(e){return JSON.stringify([e.name,e.type,!!e.memoryReference].join("\0"))}}export{R as ViewModel};
