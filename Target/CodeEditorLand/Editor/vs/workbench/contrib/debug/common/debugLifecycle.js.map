{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/common/debugLifecycle.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IDisposable } from \"../../../../base/common/lifecycle.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IDialogService } from \"../../../../platform/dialogs/common/dialogs.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport {\n\tILifecycleService,\n\ttype ShutdownReason,\n} from \"../../../services/lifecycle/common/lifecycle.js\";\nimport { type IDebugConfiguration, IDebugService } from \"./debug.js\";\n\nexport class DebugLifecycle implements IWorkbenchContribution {\n\tprivate disposable: IDisposable;\n\n\tconstructor(\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IConfigurationService\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t) {\n\t\tthis.disposable = lifecycleService.onBeforeShutdown(async (e) =>\n\t\t\te.veto(this.shouldVetoShutdown(e.reason), \"veto.debug\"),\n\t\t);\n\t}\n\n\tprivate shouldVetoShutdown(\n\t\t_reason: ShutdownReason,\n\t): boolean | Promise<boolean> {\n\t\tconst rootSessions = this.debugService\n\t\t\t.getModel()\n\t\t\t.getSessions()\n\t\t\t.filter((s) => s.parentSession === undefined);\n\t\tif (rootSessions.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst shouldConfirmOnExit =\n\t\t\tthis.configurationService.getValue<IDebugConfiguration>(\n\t\t\t\t\"debug\",\n\t\t\t).confirmOnExit;\n\t\tif (shouldConfirmOnExit === \"never\") {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.showWindowCloseConfirmation(rootSessions.length);\n\t}\n\n\tpublic dispose() {\n\t\treturn this.disposable.dispose();\n\t}\n\n\tprivate async showWindowCloseConfirmation(\n\t\tnumSessions: number,\n\t): Promise<boolean> {\n\t\tlet message: string;\n\t\tif (numSessions === 1) {\n\t\t\tmessage = nls.localize(\n\t\t\t\t\"debug.debugSessionCloseConfirmationSingular\",\n\t\t\t\t\"There is an active debug session, are you sure you want to stop it?\",\n\t\t\t);\n\t\t} else {\n\t\t\tmessage = nls.localize(\n\t\t\t\t\"debug.debugSessionCloseConfirmationPlural\",\n\t\t\t\t\"There are active debug sessions, are you sure you want to stop them?\",\n\t\t\t);\n\t\t}\n\t\tconst res = await this.dialogService.confirm({\n\t\t\tmessage,\n\t\t\ttype: \"warning\",\n\t\t\tprimaryButton: nls.localize(\n\t\t\t\t{ key: \"debug.stop\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\"&&Stop Debugging\",\n\t\t\t),\n\t\t});\n\t\treturn !res.confirmed;\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAMA,YAAY,SAAS;AACrB,SAAS,6BAA6B;AACtC,SAAS,sBAAsB;AAE/B;AAAA,EACC;AAAA,OAEM;AACP,SAAmC,qBAAqB;AAEjD,IAAM,iBAAN,MAAuD;AAAA,EAG7D,YACoB,kBACa,cAEf,sBACgB,eAChC;AAJ+B;AAEf;AACgB;AAEjC,SAAK,aAAa,iBAAiB;AAAA,MAAiB,OAAO,MAC1D,EAAE,KAAK,KAAK,mBAAmB,EAAE,MAAM,GAAG,YAAY;AAAA,IACvD;AAAA,EACD;AAAA,EA7BD,OAgB8D;AAAA;AAAA;AAAA,EACrD;AAAA,EAcA,mBACP,SAC6B;AAC7B,UAAM,eAAe,KAAK,aACxB,SAAS,EACT,YAAY,EACZ,OAAO,CAAC,MAAM,EAAE,kBAAkB,MAAS;AAC7C,QAAI,aAAa,WAAW,GAAG;AAC9B,aAAO;AAAA,IACR;AAEA,UAAM,sBACL,KAAK,qBAAqB;AAAA,MACzB;AAAA,IACD,EAAE;AACH,QAAI,wBAAwB,SAAS;AACpC,aAAO;AAAA,IACR;AAEA,WAAO,KAAK,4BAA4B,aAAa,MAAM;AAAA,EAC5D;AAAA,EAEO,UAAU;AAChB,WAAO,KAAK,WAAW,QAAQ;AAAA,EAChC;AAAA,EAEA,MAAc,4BACb,aACmB;AACnB,QAAI;AACJ,QAAI,gBAAgB,GAAG;AACtB,gBAAU,IAAI;AAAA,QACb;AAAA,QACA;AAAA,MACD;AAAA,IACD,OAAO;AACN,gBAAU,IAAI;AAAA,QACb;AAAA,QACA;AAAA,MACD;AAAA,IACD;AACA,UAAM,MAAM,MAAM,KAAK,cAAc,QAAQ;AAAA,MAC5C;AAAA,MACA,MAAM;AAAA,MACN,eAAe,IAAI;AAAA,QAClB,EAAE,KAAK,cAAc,SAAS,CAAC,uBAAuB,EAAE;AAAA,QACxD;AAAA,MACD;AAAA,IACD,CAAC;AACD,WAAO,CAAC,IAAI;AAAA,EACb;AACD;AAlEa,iBAAN;AAAA,EAIJ;AAAA,EACA;AAAA,EACA;AAAA,EAEA;AAAA,GARU;",
  "names": []
}
