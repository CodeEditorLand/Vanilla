{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/test/browser/debugUtils.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { IConfig } from '../../common/debug.js';\nimport { formatPII, getExactExpressionStartAndEnd, getVisibleAndSorted } from '../../common/debugUtils.js';\n\nsuite('Debug - Utils', () => {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('formatPII', () => {\n\t\tassert.strictEqual(formatPII('Foo Bar', false, {}), 'Foo Bar');\n\t\tassert.strictEqual(formatPII('Foo {key} Bar', false, {}), 'Foo {key} Bar');\n\t\tassert.strictEqual(formatPII('Foo {key} Bar', false, { 'key': 'yes' }), 'Foo yes Bar');\n\t\tassert.strictEqual(formatPII('Foo {_0} Bar {_0}', true, { '_0': 'yes' }), 'Foo yes Bar yes');\n\t\tassert.strictEqual(formatPII('Foo {0} Bar {1}{2}', false, { '0': 'yes' }), 'Foo yes Bar {1}{2}');\n\t\tassert.strictEqual(formatPII('Foo {0} Bar {1}{2}', false, { '0': 'yes', '1': 'undefined' }), 'Foo yes Bar undefined{2}');\n\t\tassert.strictEqual(formatPII('Foo {_key0} Bar {key1}{key2}', true, { '_key0': 'yes', 'key1': '5', 'key2': 'false' }), 'Foo yes Bar {key1}{key2}');\n\t\tassert.strictEqual(formatPII('Foo {_key0} Bar {key1}{key2}', false, { '_key0': 'yes', 'key1': '5', 'key2': 'false' }), 'Foo yes Bar 5false');\n\t\tassert.strictEqual(formatPII('Unable to display threads:\"{e}\"', false, { 'e': 'detached from process' }), 'Unable to display threads:\"detached from process\"');\n\t});\n\n\ttest('getExactExpressionStartAndEnd', () => {\n\t\tassert.deepStrictEqual(getExactExpressionStartAndEnd('foo', 1, 2), { start: 1, end: 3 });\n\t\tassert.deepStrictEqual(getExactExpressionStartAndEnd('foo', 1, 3), { start: 1, end: 3 });\n\t\tassert.deepStrictEqual(getExactExpressionStartAndEnd('foo', 1, 4), { start: 1, end: 3 });\n\t\tassert.deepStrictEqual(getExactExpressionStartAndEnd('this.name = \"John\"', 1, 10), { start: 1, end: 9 });\n\t\tassert.deepStrictEqual(getExactExpressionStartAndEnd('this.name = \"John\"', 6, 10), { start: 1, end: 9 });\n\t\t// Hovers over \"address\" should pick up this->address\n\t\tassert.deepStrictEqual(getExactExpressionStartAndEnd('this->address = \"Main street\"', 6, 10), { start: 1, end: 13 });\n\t\t// Hovers over \"name\" should pick up a.b.c.d.name\n\t\tassert.deepStrictEqual(getExactExpressionStartAndEnd('var t = a.b.c.d.name', 16, 20), { start: 9, end: 20 });\n\t\tassert.deepStrictEqual(getExactExpressionStartAndEnd('MyClass::StaticProp', 10, 20), { start: 1, end: 19 });\n\t\tassert.deepStrictEqual(getExactExpressionStartAndEnd('largeNumber = myVar?.prop', 21, 25), { start: 15, end: 25 });\n\n\t\t// For example in expression 'a.b.c.d', hover was under 'b', 'a.b' should be the exact range\n\t\tassert.deepStrictEqual(getExactExpressionStartAndEnd('var t = a.b.c.d.name', 11, 12), { start: 9, end: 11 });\n\n\t\tassert.deepStrictEqual(getExactExpressionStartAndEnd('var t = a.b;c.d.name', 16, 20), { start: 13, end: 20 });\n\t\tassert.deepStrictEqual(getExactExpressionStartAndEnd('var t = a.b.c-d.name', 16, 20), { start: 15, end: 20 });\n\n\t\tassert.deepStrictEqual(getExactExpressionStartAndEnd('var a\u00F8\u00F1\u00E9\u00E5\u6587 = a.b.c-d.name', 5, 5), { start: 5, end: 10 });\n\t\tassert.deepStrictEqual(getExactExpressionStartAndEnd('a\u00F8\u00F1\u00E9\u00E5\u6587.a\u00F8\u00F1\u00E9\u00E5\u6587.a\u00F8\u00F1\u00E9\u00E5\u6587', 9, 9), { start: 1, end: 13 });\n\t});\n\n\ttest('config presentation', () => {\n\t\tconst configs: IConfig[] = [];\n\t\tconfigs.push({\n\t\t\ttype: 'node',\n\t\t\trequest: 'launch',\n\t\t\tname: 'p'\n\t\t});\n\t\tconfigs.push({\n\t\t\ttype: 'node',\n\t\t\trequest: 'launch',\n\t\t\tname: 'a'\n\t\t});\n\t\tconfigs.push({\n\t\t\ttype: 'node',\n\t\t\trequest: 'launch',\n\t\t\tname: 'b',\n\t\t\tpresentation: {\n\t\t\t\thidden: false\n\t\t\t}\n\t\t});\n\t\tconfigs.push({\n\t\t\ttype: 'node',\n\t\t\trequest: 'launch',\n\t\t\tname: 'c',\n\t\t\tpresentation: {\n\t\t\t\thidden: true\n\t\t\t}\n\t\t});\n\t\tconfigs.push({\n\t\t\ttype: 'node',\n\t\t\trequest: 'launch',\n\t\t\tname: 'd',\n\t\t\tpresentation: {\n\t\t\t\tgroup: '2_group',\n\t\t\t\torder: 5\n\t\t\t}\n\t\t});\n\t\tconfigs.push({\n\t\t\ttype: 'node',\n\t\t\trequest: 'launch',\n\t\t\tname: 'e',\n\t\t\tpresentation: {\n\t\t\t\tgroup: '2_group',\n\t\t\t\torder: 52\n\t\t\t}\n\t\t});\n\t\tconfigs.push({\n\t\t\ttype: 'node',\n\t\t\trequest: 'launch',\n\t\t\tname: 'f',\n\t\t\tpresentation: {\n\t\t\t\tgroup: '1_group',\n\t\t\t\torder: 500\n\t\t\t}\n\t\t});\n\t\tconfigs.push({\n\t\t\ttype: 'node',\n\t\t\trequest: 'launch',\n\t\t\tname: 'g',\n\t\t\tpresentation: {\n\t\t\t\tgroup: '5_group',\n\t\t\t\torder: 500\n\t\t\t}\n\t\t});\n\t\tconfigs.push({\n\t\t\ttype: 'node',\n\t\t\trequest: 'launch',\n\t\t\tname: 'h',\n\t\t\tpresentation: {\n\t\t\t\torder: 700\n\t\t\t}\n\t\t});\n\t\tconfigs.push({\n\t\t\ttype: 'node',\n\t\t\trequest: 'launch',\n\t\t\tname: 'i',\n\t\t\tpresentation: {\n\t\t\t\torder: 1000\n\t\t\t}\n\t\t});\n\n\t\tconst sorted = getVisibleAndSorted(configs);\n\t\tassert.strictEqual(sorted.length, 9);\n\t\tassert.strictEqual(sorted[0].name, 'f');\n\t\tassert.strictEqual(sorted[1].name, 'd');\n\t\tassert.strictEqual(sorted[2].name, 'e');\n\t\tassert.strictEqual(sorted[3].name, 'g');\n\t\tassert.strictEqual(sorted[4].name, 'h');\n\t\tassert.strictEqual(sorted[5].name, 'i');\n\t\tassert.strictEqual(sorted[6].name, 'b');\n\t\tassert.strictEqual(sorted[7].name, 'p');\n\t\tassert.strictEqual(sorted[8].name, 'a');\n\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
