{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/test/node/debugger.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { join, normalize } from '../../../../../base/common/path.js';\nimport * as platform from '../../../../../base/common/platform.js';\nimport { IDebugAdapterExecutable, IConfig, IDebugSession, IAdapterManager } from '../../common/debug.js';\nimport { Debugger } from '../../common/debugger.js';\nimport { TestConfigurationService } from '../../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { ExecutableDebugAdapter } from '../../node/debugAdapter.js';\nimport { TestTextResourcePropertiesService } from '../../../../../editor/test/common/services/testTextResourcePropertiesService.js';\nimport { ExtensionIdentifier, IExtensionDescription, TargetPlatform } from '../../../../../platform/extensions/common/extensions.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\n\n\nsuite('Debug - Debugger', () => {\n\tlet _debugger: Debugger;\n\n\tconst extensionFolderPath = '/a/b/c/';\n\tconst debuggerContribution = {\n\t\ttype: 'mock',\n\t\tlabel: 'Mock Debug',\n\t\tprogram: './out/mock/mockDebug.js',\n\t\targs: ['arg1', 'arg2'],\n\t\tconfigurationAttributes: {\n\t\t\tlaunch: {\n\t\t\t\trequired: ['program'],\n\t\t\t\tproperties: {\n\t\t\t\t\tprogram: {\n\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t'description': 'Workspace relative path to a text file.',\n\t\t\t\t\t\t'default': 'readme.md'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tvariables: null!,\n\t\tinitialConfigurations: [\n\t\t\t{\n\t\t\t\tname: 'Mock-Debug',\n\t\t\t\ttype: 'mock',\n\t\t\t\trequest: 'launch',\n\t\t\t\tprogram: 'readme.md'\n\t\t\t}\n\t\t]\n\t};\n\n\tconst extensionDescriptor0 = <IExtensionDescription>{\n\t\tid: 'adapter',\n\t\tidentifier: new ExtensionIdentifier('adapter'),\n\t\tname: 'myAdapter',\n\t\tversion: '1.0.0',\n\t\tpublisher: 'vscode',\n\t\textensionLocation: URI.file(extensionFolderPath),\n\t\tisBuiltin: false,\n\t\tisUserBuiltin: false,\n\t\tisUnderDevelopment: false,\n\t\tengines: null!,\n\t\ttargetPlatform: TargetPlatform.UNDEFINED,\n\t\tcontributes: {\n\t\t\t'debuggers': [\n\t\t\t\tdebuggerContribution\n\t\t\t]\n\t\t},\n\t\tenabledApiProposals: undefined,\n\t};\n\n\tconst extensionDescriptor1 = {\n\t\tid: 'extension1',\n\t\tidentifier: new ExtensionIdentifier('extension1'),\n\t\tname: 'extension1',\n\t\tversion: '1.0.0',\n\t\tpublisher: 'vscode',\n\t\textensionLocation: URI.file('/e1/b/c/'),\n\t\tisBuiltin: false,\n\t\tisUserBuiltin: false,\n\t\tisUnderDevelopment: false,\n\t\tengines: null!,\n\t\ttargetPlatform: TargetPlatform.UNDEFINED,\n\t\tcontributes: {\n\t\t\t'debuggers': [\n\t\t\t\t{\n\t\t\t\t\ttype: 'mock',\n\t\t\t\t\truntime: 'runtime',\n\t\t\t\t\truntimeArgs: ['rarg'],\n\t\t\t\t\tprogram: 'mockprogram',\n\t\t\t\t\targs: ['parg']\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\tenabledApiProposals: undefined,\n\t};\n\n\tconst extensionDescriptor2 = {\n\t\tid: 'extension2',\n\t\tidentifier: new ExtensionIdentifier('extension2'),\n\t\tname: 'extension2',\n\t\tversion: '1.0.0',\n\t\tpublisher: 'vscode',\n\t\textensionLocation: URI.file('/e2/b/c/'),\n\t\tisBuiltin: false,\n\t\tisUserBuiltin: false,\n\t\tisUnderDevelopment: false,\n\t\tengines: null!,\n\t\ttargetPlatform: TargetPlatform.UNDEFINED,\n\t\tcontributes: {\n\t\t\t'debuggers': [\n\t\t\t\t{\n\t\t\t\t\ttype: 'mock',\n\t\t\t\t\twin: {\n\t\t\t\t\t\truntime: 'winRuntime',\n\t\t\t\t\t\tprogram: 'winProgram'\n\t\t\t\t\t},\n\t\t\t\t\tlinux: {\n\t\t\t\t\t\truntime: 'linuxRuntime',\n\t\t\t\t\t\tprogram: 'linuxProgram'\n\t\t\t\t\t},\n\t\t\t\t\tosx: {\n\t\t\t\t\t\truntime: 'osxRuntime',\n\t\t\t\t\t\tprogram: 'osxProgram'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\tenabledApiProposals: undefined,\n\t};\n\n\n\tconst adapterManager = <IAdapterManager>{\n\t\tgetDebugAdapterDescriptor(session: IDebugSession, config: IConfig): Promise<IDebugAdapterExecutable | undefined> {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t};\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tconst configurationService = new TestConfigurationService();\n\tconst testResourcePropertiesService = new TestTextResourcePropertiesService(configurationService);\n\n\tsetup(() => {\n\t\t_debugger = new Debugger(adapterManager, debuggerContribution, extensionDescriptor0, configurationService, testResourcePropertiesService, undefined!, undefined!, undefined!, undefined!);\n\t});\n\n\tteardown(() => {\n\t\t_debugger = null!;\n\t});\n\n\ttest('attributes', () => {\n\t\tassert.strictEqual(_debugger.type, debuggerContribution.type);\n\t\tassert.strictEqual(_debugger.label, debuggerContribution.label);\n\n\t\tconst ae = ExecutableDebugAdapter.platformAdapterExecutable([extensionDescriptor0], 'mock');\n\n\t\tassert.strictEqual(ae!.command, join(extensionFolderPath, debuggerContribution.program));\n\t\tassert.deepStrictEqual(ae!.args, debuggerContribution.args);\n\t});\n\n\ttest('merge platform specific attributes', function () {\n\t\tif (!process.versions.electron) {\n\t\t\tthis.skip(); //TODO@debug this test fails when run in node.js environments\n\t\t}\n\t\tconst ae = ExecutableDebugAdapter.platformAdapterExecutable([extensionDescriptor1, extensionDescriptor2], 'mock')!;\n\t\tassert.strictEqual(ae.command, platform.isLinux ? 'linuxRuntime' : (platform.isMacintosh ? 'osxRuntime' : 'winRuntime'));\n\t\tconst xprogram = platform.isLinux ? 'linuxProgram' : (platform.isMacintosh ? 'osxProgram' : 'winProgram');\n\t\tassert.deepStrictEqual(ae.args, ['rarg', normalize('/e2/b/c/') + xprogram, 'parg']);\n\t});\n\n\ttest('initial config file content', () => {\n\n\t\tconst expected = ['{',\n\t\t\t'\t// Use IntelliSense to learn about possible attributes.',\n\t\t\t'\t// Hover to view descriptions of existing attributes.',\n\t\t\t'\t// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387',\n\t\t\t'\t\"version\": \"0.2.0\",',\n\t\t\t'\t\"configurations\": [',\n\t\t\t'\t\t{',\n\t\t\t'\t\t\t\"name\": \"Mock-Debug\",',\n\t\t\t'\t\t\t\"type\": \"mock\",',\n\t\t\t'\t\t\t\"request\": \"launch\",',\n\t\t\t'\t\t\t\"program\": \"readme.md\"',\n\t\t\t'\t\t}',\n\t\t\t'\t]',\n\t\t\t'}'].join(testResourcePropertiesService.getEOL(URI.file('somefile')));\n\n\t\treturn _debugger.getInitialConfigurationContent().then(content => {\n\t\t\tassert.strictEqual(content, expected);\n\t\t}, err => assert.fail(err));\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
