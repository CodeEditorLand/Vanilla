import*as i from"assert";import*as k from"../../../../../base/browser/dom.js";import{HighlightedLabel as V}from"../../../../../base/browser/ui/highlightedlabel/highlightedLabel.js";import{DisposableStore as f}from"../../../../../base/common/lifecycle.js";import{ensureNoDisposablesAreLeakedInTestSuite as M}from"../../../../../base/test/common/utils.js";import"../../../../../platform/instantiation/test/common/instantiationServiceMock.js";import{WatchExpressionsRenderer as p}from"../../browser/watchExpressionsView.js";import{Scope as T,StackFrame as q,Thread as W,Variable as y}from"../../common/debugModel.js";import{MockDebugService as L,MockSession as N}from"../common/mockDebug.js";import{workbenchInstantiationService as F}from"../../../../test/browser/workbenchTestServices.js";import{IHoverService as H}from"../../../../../platform/hover/browser/hover.js";import{NullHoverService as R}from"../../../../../platform/hover/test/browser/nullHoverService.js";import{IDebugService as B}from"../../common/debug.js";import{IConfigurationService as b}from"../../../../../platform/configuration/common/configuration.js";import{TestConfigurationService as w}from"../../../../../platform/configuration/test/common/testConfigurationService.js";const r=k.$;function S(t,n,e){const o=new N,s=new W(o,"mockthread",1),g={startLineNumber:1,startColumn:1,endLineNumber:void 0,endColumn:void 0},h=new q(s,1,null,"app.js","normal",g,0,!0),v=new T(h,1,"local",1,!1,10,10),a={element:new y(o,1,v,2,"foo","bar.foo",void 0,0,0,void 0,{},"string"),depth:0,visibleChildrenCount:1,visibleChildIndex:-1,collapsible:!1,collapsed:!1,visible:!0,filterData:void 0,children:[]},x=r("."),d=r("."),u=r("."),c=r("."),l=t.add(new V(d)),C=r("."),E=r("."),I=t.add(new f),D=t.add(new f),m={expression:x,name:d,type:u,value:c,label:l,lazyButton:C,inputBoxContainer:E,elementDisposable:I,templateDisposable:D,currentElement:void 0};n.renderElement(a,0,m),i.strictEqual(c.textContent,""),i.strictEqual(l.element.textContent,e?"foo: ":"foo ="),a.element.value="xpto",n.renderElement(a,0,m),i.strictEqual(c.textContent,"xpto"),i.strictEqual(u.textContent,e?"string =":""),i.strictEqual(l.element.textContent,e?"foo: ":"foo =")}suite("Debug - Watch Debug View",()=>{const t=M();let n,e,o;setup(()=>{e=F(void 0,t);const s=new L;e.stub(H,R),s.getViewModel=()=>({focusedStackFrame:void 0,getSelectedExpression:()=>{}}),s.getViewModel().getSelectedExpression=()=>{},e.stub(B,s)}),test("watch expressions with display type",()=>{o=new w({debug:{showVariableTypes:!0}}),e.stub(b,o),n=e.createInstance(p,null),S(t,n,!0)}),test("watch expressions",()=>{o=new w({debug:{showVariableTypes:!1}}),e.stub(b,o),n=e.createInstance(p,null),S(t,n,!1)})});
