{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/test/browser/variablesView.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport * as dom from '../../../../../base/browser/dom.js';\nimport { HighlightedLabel } from '../../../../../base/browser/ui/highlightedlabel/highlightedLabel.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { TestConfigurationService } from '../../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { IHoverService } from '../../../../../platform/hover/browser/hover.js';\nimport { NullHoverService } from '../../../../../platform/hover/test/browser/nullHoverService.js';\nimport { TestInstantiationService } from '../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { workbenchInstantiationService } from '../../../../test/browser/workbenchTestServices.js';\nimport { DebugExpressionRenderer } from '../../browser/debugExpressionRenderer.js';\nimport { VariablesRenderer } from '../../browser/variablesView.js';\nimport { IDebugService, IViewModel } from '../../common/debug.js';\nimport { Scope, StackFrame, Thread, Variable } from '../../common/debugModel.js';\nimport { MockDebugService, MockSession } from '../common/mockDebug.js';\n\nconst $ = dom.$;\n\nfunction assertVariable(disposables: Pick<DisposableStore, \"add\">, variablesRenderer: VariablesRenderer, displayType: boolean) {\n\tconst session = new MockSession();\n\tconst thread = new Thread(session, 'mockthread', 1);\n\tconst range = {\n\t\tstartLineNumber: 1,\n\t\tstartColumn: 1,\n\t\tendLineNumber: undefined!,\n\t\tendColumn: undefined!\n\t};\n\tconst stackFrame = new StackFrame(thread, 1, null!, 'app.js', 'normal', range, 0, true);\n\tconst scope = new Scope(stackFrame, 1, 'local', 1, false, 10, 10);\n\tconst node = {\n\t\telement: new Variable(session, 1, scope, 2, 'foo', 'bar.foo', undefined, 0, 0, undefined, {}, 'string'),\n\t\tdepth: 0,\n\t\tvisibleChildrenCount: 1,\n\t\tvisibleChildIndex: -1,\n\t\tcollapsible: false,\n\t\tcollapsed: false,\n\t\tvisible: true,\n\t\tfilterData: undefined,\n\t\tchildren: []\n\t};\n\tconst expression = $('.');\n\tconst name = $('.');\n\tconst type = $('.');\n\tconst value = $('.');\n\tconst label = disposables.add(new HighlightedLabel(name));\n\tconst lazyButton = $('.');\n\tconst inputBoxContainer = $('.');\n\tconst elementDisposable = disposables.add(new DisposableStore());\n\tconst templateDisposable = disposables.add(new DisposableStore());\n\tconst currentElement = undefined;\n\tconst data = {\n\t\texpression,\n\t\tname,\n\t\ttype,\n\t\tvalue,\n\t\tlabel,\n\t\tlazyButton,\n\t\tinputBoxContainer,\n\t\telementDisposable,\n\t\ttemplateDisposable,\n\t\tcurrentElement\n\t};\n\tvariablesRenderer.renderElement(node, 0, data);\n\tassert.strictEqual(value.textContent, '');\n\tassert.strictEqual(label.element.textContent, 'foo');\n\n\tnode.element.value = 'xpto';\n\tvariablesRenderer.renderElement(node, 0, data);\n\tassert.strictEqual(value.textContent, 'xpto');\n\tassert.strictEqual(type.textContent, displayType ? 'string =' : '');\n\tassert.strictEqual(label.element.textContent, displayType ? 'foo: ' : 'foo =');\n\n\tvariablesRenderer.disposeTemplate(data);\n}\n\nsuite('Debug - Variable Debug View', () => {\n\tconst disposables = ensureNoDisposablesAreLeakedInTestSuite();\n\tlet variablesRenderer: VariablesRenderer;\n\tlet instantiationService: TestInstantiationService;\n\tlet expressionRenderer: DebugExpressionRenderer;\n\tlet configurationService: TestConfigurationService;\n\n\tsetup(() => {\n\t\tinstantiationService = workbenchInstantiationService(undefined, disposables);\n\t\tconfigurationService = instantiationService.createInstance(TestConfigurationService);\n\t\tinstantiationService.stub(IConfigurationService, configurationService);\n\t\texpressionRenderer = instantiationService.createInstance(DebugExpressionRenderer);\n\t\tconst debugService = new MockDebugService();\n\t\tinstantiationService.stub(IHoverService, NullHoverService);\n\t\tdebugService.getViewModel = () => <IViewModel>{ focusedStackFrame: undefined, getSelectedExpression: () => undefined };\n\t\tdebugService.getViewModel().getSelectedExpression = () => undefined;\n\t\tinstantiationService.stub(IDebugService, debugService);\n\t});\n\n\ttest('variable expressions with display type', () => {\n\t\tconfigurationService.setUserConfiguration('debug.showVariableTypes', true);\n\t\tinstantiationService.stub(IConfigurationService, configurationService);\n\t\tvariablesRenderer = instantiationService.createInstance(VariablesRenderer, expressionRenderer);\n\t\tassertVariable(disposables, variablesRenderer, true);\n\t});\n\n\ttest('variable expressions', () => {\n\t\tconfigurationService.setUserConfiguration('debug.showVariableTypes', false);\n\t\tinstantiationService.stub(IConfigurationService, configurationService);\n\t\tvariablesRenderer = instantiationService.createInstance(VariablesRenderer, expressionRenderer);\n\t\tassertVariable(disposables, variablesRenderer, false);\n\t});\n});\n"],
  "mappings": ";;AAKA,YAAY,YAAY;AACxB,YAAY,SAAS;AACrB,SAAS,wBAAwB;AACjC,SAAS,uBAAuB;AAChC,SAAS,+CAA+C;AACxD,SAAS,6BAA6B;AACtC,SAAS,gCAAgC;AACzC,SAAS,qBAAqB;AAC9B,SAAS,wBAAwB;AACjC,SAAS,gCAAgC;AACzC,SAAS,qCAAqC;AAC9C,SAAS,+BAA+B;AACxC,SAAS,yBAAyB;AAClC,SAAS,eAAe,kBAAkB;AAC1C,SAAS,OAAO,YAAY,QAAQ,gBAAgB;AACpD,SAAS,kBAAkB,mBAAmB;AAE9C,MAAM,IAAI,IAAI;AAEd,SAAS,eAAe,aAA2C,mBAAsC,aAAsB;AAC9H,QAAM,UAAU,IAAI,YAAY;AAChC,QAAM,SAAS,IAAI,OAAO,SAAS,cAAc,CAAC;AAClD,QAAM,QAAQ;AAAA,IACb,iBAAiB;AAAA,IACjB,aAAa;AAAA,IACb,eAAe;AAAA,IACf,WAAW;AAAA,EACZ;AACA,QAAM,aAAa,IAAI,WAAW,QAAQ,GAAG,MAAO,UAAU,UAAU,OAAO,GAAG,IAAI;AACtF,QAAM,QAAQ,IAAI,MAAM,YAAY,GAAG,SAAS,GAAG,OAAO,IAAI,EAAE;AAChE,QAAM,OAAO;AAAA,IACZ,SAAS,IAAI,SAAS,SAAS,GAAG,OAAO,GAAG,OAAO,WAAW,QAAW,GAAG,GAAG,QAAW,CAAC,GAAG,QAAQ;AAAA,IACtG,OAAO;AAAA,IACP,sBAAsB;AAAA,IACtB,mBAAmB;AAAA,IACnB,aAAa;AAAA,IACb,WAAW;AAAA,IACX,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,UAAU,CAAC;AAAA,EACZ;AACA,QAAM,aAAa,EAAE,GAAG;AACxB,QAAM,OAAO,EAAE,GAAG;AAClB,QAAM,OAAO,EAAE,GAAG;AAClB,QAAM,QAAQ,EAAE,GAAG;AACnB,QAAM,QAAQ,YAAY,IAAI,IAAI,iBAAiB,IAAI,CAAC;AACxD,QAAM,aAAa,EAAE,GAAG;AACxB,QAAM,oBAAoB,EAAE,GAAG;AAC/B,QAAM,oBAAoB,YAAY,IAAI,IAAI,gBAAgB,CAAC;AAC/D,QAAM,qBAAqB,YAAY,IAAI,IAAI,gBAAgB,CAAC;AAChE,QAAM,iBAAiB;AACvB,QAAM,OAAO;AAAA,IACZ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AACA,oBAAkB,cAAc,MAAM,GAAG,IAAI;AAC7C,SAAO,YAAY,MAAM,aAAa,EAAE;AACxC,SAAO,YAAY,MAAM,QAAQ,aAAa,KAAK;AAEnD,OAAK,QAAQ,QAAQ;AACrB,oBAAkB,cAAc,MAAM,GAAG,IAAI;AAC7C,SAAO,YAAY,MAAM,aAAa,MAAM;AAC5C,SAAO,YAAY,KAAK,aAAa,cAAc,aAAa,EAAE;AAClE,SAAO,YAAY,MAAM,QAAQ,aAAa,cAAc,UAAU,OAAO;AAE7E,oBAAkB,gBAAgB,IAAI;AACvC;AAvDS;AAyDT,MAAM,+BAA+B,MAAM;AAC1C,QAAM,cAAc,wCAAwC;AAC5D,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AAEJ,QAAM,MAAM;AACX,2BAAuB,8BAA8B,QAAW,WAAW;AAC3E,2BAAuB,qBAAqB,eAAe,wBAAwB;AACnF,yBAAqB,KAAK,uBAAuB,oBAAoB;AACrE,yBAAqB,qBAAqB,eAAe,uBAAuB;AAChF,UAAM,eAAe,IAAI,iBAAiB;AAC1C,yBAAqB,KAAK,eAAe,gBAAgB;AACzD,iBAAa,eAAe,OAAkB,EAAE,mBAAmB,QAAW,uBAAuB,6BAAM,QAAN,yBAAgB;AACrH,iBAAa,aAAa,EAAE,wBAAwB,MAAM;AAC1D,yBAAqB,KAAK,eAAe,YAAY;AAAA,EACtD,CAAC;AAED,OAAK,0CAA0C,MAAM;AACpD,yBAAqB,qBAAqB,2BAA2B,IAAI;AACzE,yBAAqB,KAAK,uBAAuB,oBAAoB;AACrE,wBAAoB,qBAAqB,eAAe,mBAAmB,kBAAkB;AAC7F,mBAAe,aAAa,mBAAmB,IAAI;AAAA,EACpD,CAAC;AAED,OAAK,wBAAwB,MAAM;AAClC,yBAAqB,qBAAqB,2BAA2B,KAAK;AAC1E,yBAAqB,KAAK,uBAAuB,oBAAoB;AACrE,wBAAoB,qBAAqB,eAAe,mBAAmB,kBAAkB;AAC7F,mBAAe,aAAa,mBAAmB,KAAK;AAAA,EACrD,CAAC;AACF,CAAC;",
  "names": []
}
