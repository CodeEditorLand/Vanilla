import t from"assert";import*as S from"../../../../../base/browser/dom.js";import{HighlightedLabel as z}from"../../../../../base/browser/ui/highlightedlabel/highlightedLabel.js";import{DisposableStore as w}from"../../../../../base/common/lifecycle.js";import{isWindows as h}from"../../../../../base/common/platform.js";import{ensureNoDisposablesAreLeakedInTestSuite as V}from"../../../../../base/test/common/utils.js";import{NullCommandService as p}from"../../../../../platform/commands/test/common/nullCommandService.js";import{IHoverService as M}from"../../../../../platform/hover/browser/hover.js";import{NullHoverService as l}from"../../../../../platform/hover/test/browser/nullHoverService.js";import"../../../../../platform/instantiation/test/common/instantiationServiceMock.js";import{renderExpressionValue as x,renderVariable as g,renderViewTree as R}from"../../browser/baseDebugView.js";import{LinkDetector as H}from"../../browser/linkDetector.js";import{isStatusbarInDebugMode as q}from"../../browser/statusbarColorProvider.js";import{State as v}from"../../common/debug.js";import{Expression as F,Scope as k,StackFrame as N,Thread as L,Variable as C}from"../../common/debugModel.js";import{createTestSession as D}from"./callStack.test.js";import{createMockDebugModel as B}from"./mockDebugModel.js";import{MockSession as I}from"../common/mockDebug.js";import{workbenchInstantiationService as $}from"../../../../test/browser/workbenchTestServices.js";const r=S.$;function j(d,f,e,o,n){let s=new C(d,1,f,2,"foo","bar.foo",void 0,0,0,void 0,{},"string"),i=r("."),u=r("."),c=r("."),a=r(".");const m=new z(u),E=r("."),b=e.add(new w);g(b,p,l,s,{expression:i,name:u,type:c,value:a,label:m,lazyButton:E},!1,[],void 0,n),t.strictEqual(m.element.textContent,"foo"),t.strictEqual(a.textContent,""),s.value="hey",i=r("."),u=r("."),c=r("."),a=r("."),g(b,p,l,s,{expression:i,name:u,type:c,value:a,label:m,lazyButton:E},!1,[],o,n),t.strictEqual(a.textContent,"hey"),t.strictEqual(m.element.textContent,n?"foo: ":"foo ="),t.strictEqual(c.textContent,n?"string =":""),s.value=h?"C:\\foo.js:5":"/foo.js:5",i=r("."),u=r("."),c=r("."),a=r("."),g(b,p,l,s,{expression:i,name:u,type:c,value:a,label:m,lazyButton:E},!1,[],o,n),t.ok(a.querySelector("a")),t.strictEqual(a.querySelector("a").textContent,s.value),s=new C(d,1,f,2,"console","console","5",0,0,void 0,{kind:"virtual"}),i=r("."),u=r("."),c=r("."),a=r("."),g(b,p,l,s,{expression:i,name:u,type:c,value:a,label:m,lazyButton:E},!1,[],o,n),t.strictEqual(u.className,"virtual"),t.strictEqual(m.element.textContent,"console ="),t.strictEqual(a.className,"value number"),s=new C(d,1,f,2,"xpto","xpto.xpto",void 0,0,0,void 0,{},"custom-type"),g(b,p,l,s,{expression:i,name:u,type:c,value:a,label:m,lazyButton:E},!1,[],o,n),t.strictEqual(m.element.textContent,"xpto"),t.strictEqual(a.textContent,""),s.value="2",i=r("."),u=r("."),c=r("."),a=r("."),g(b,p,l,s,{expression:i,name:u,type:c,value:a,label:m,lazyButton:E},!1,[],o,n),t.strictEqual(a.textContent,"2"),t.strictEqual(m.element.textContent,n?"xpto: ":"xpto ="),t.strictEqual(c.textContent,n?"custom-type =":""),m.dispose()}suite("Debug - Base Debug View",()=>{const d=V();let f;setup(()=>{const e=$(void 0,d);f=e.createInstance(H),e.stub(M,l)}),test("render view tree",()=>{const e=r(".container"),o=R(e);t.strictEqual(o.className,"debug-view-content"),t.strictEqual(e.childElementCount,1),t.strictEqual(e.firstChild,o),t.strictEqual(S.isHTMLDivElement(o),!0)}),test("render expression value",()=>{let e=r(".container");const o=d.add(new w);x(o,`render 
 me`,e,{},l),t.strictEqual(e.className,"value"),t.strictEqual(e.textContent,`render 
 me`);const n=new F("console");n.value="Object",e=r(".container"),x(o,n,e,{colorize:!0},l),t.strictEqual(e.className,"value unavailable error"),n.available=!0,n.value='"string value"',e=r(".container"),x(o,n,e,{colorize:!0,linkDetector:f},l),t.strictEqual(e.className,"value string"),t.strictEqual(e.textContent,'"string value"'),n.type="boolean",e=r(".container"),x(o,n,e,{colorize:!0},l),t.strictEqual(e.className,"value boolean"),t.strictEqual(e.textContent,n.value),n.value="this is a long string",e=r(".container"),x(o,n,e,{colorize:!0,maxValueLength:4,linkDetector:f},l),t.strictEqual(e.textContent,"this..."),n.value=h?"C:\\foo.js:5":"/foo.js:5",e=r(".container"),x(o,n,e,{colorize:!0,linkDetector:f},l),t.ok(e.querySelector("a")),t.strictEqual(e.querySelector("a").textContent,n.value)}),test("render variable",()=>{const e=new I,o=new L(e,"mockthread",1),n={startLineNumber:1,startColumn:1,endLineNumber:void 0,endColumn:void 0},s=new N(o,1,null,"app.js","normal",n,0,!0),i=new k(s,1,"local",1,!1,10,10);j(e,i,d,f,!1)}),test("render variable with display type setting",()=>{const e=new I,o=new L(e,"mockthread",1),n={startLineNumber:1,startColumn:1,endLineNumber:void 0,endColumn:void 0},s=new N(o,1,null,"app.js","normal",n,0,!0),i=new k(s,1,"local",1,!1,10,10);j(e,i,d,f,!0)}),test("statusbar in debug mode",()=>{const e=B(d),o=d.add(D(e)),n=d.add(D(e,void 0,{suppressDebugStatusbar:!0}));t.strictEqual(q(v.Inactive,[]),!1),t.strictEqual(q(v.Initializing,[o]),!1),t.strictEqual(q(v.Running,[o]),!0),t.strictEqual(q(v.Stopped,[o]),!0),t.strictEqual(q(v.Running,[n]),!1),t.strictEqual(q(v.Running,[o,n]),!0),o.configuration.noDebug=!0,t.strictEqual(q(v.Running,[o]),!1),t.strictEqual(q(v.Running,[o,n]),!1)})});
