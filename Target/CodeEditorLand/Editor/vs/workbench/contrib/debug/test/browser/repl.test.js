import e from"assert";import{TreeVisibility as f}from"../../../../../base/browser/ui/tree/tree.js";import{timeout as I}from"../../../../../base/common/async.js";import s from"../../../../../base/common/severity.js";import{ensureNoDisposablesAreLeakedInTestSuite as b}from"../../../../../base/test/common/utils.js";import{TestConfigurationService as w}from"../../../../../platform/configuration/test/common/testConfigurationService.js";import{RawDebugSession as y}from"../../browser/rawDebugSession.js";import{ReplFilter as S}from"../../browser/replFilter.js";import{StackFrame as O,Thread as k}from"../../common/debugModel.js";import{RawObjectReplElement as x,ReplModel as g}from"../../common/replModel.js";import{createTestSession as o}from"./callStack.test.js";import{createMockDebugModel as C}from"./mockDebugModel.js";import{MockDebugAdapter as G,MockRawSession as V}from"../common/mockDebug.js";suite("Debug - REPL",()=>{let u,R;const p=b(),c=new w({debug:{console:{collapseIdenticalLines:!0}}});setup(()=>{u=C(p),R=new V}),test("repl output",()=>{const t=p.add(o(u)),l=new g(c);l.appendToRepl(t,{output:`first line
`,sev:s.Error}),l.appendToRepl(t,{output:"second line ",sev:s.Error}),l.appendToRepl(t,{output:"third line ",sev:s.Error}),l.appendToRepl(t,{output:"fourth line",sev:s.Error});let n=l.getReplElements();e.strictEqual(n.length,2),e.strictEqual(n[0].value,`first line
`),e.strictEqual(n[0].severity,s.Error),e.strictEqual(n[1].value,"second line third line fourth line"),e.strictEqual(n[1].severity,s.Error),l.appendToRepl(t,{output:"1",sev:s.Warning}),n=l.getReplElements(),e.strictEqual(n.length,3),e.strictEqual(n[2].value,"1"),e.strictEqual(n[2].severity,s.Warning);const r={key1:2,key2:"value"};l.appendToRepl(t,{output:"",expression:new x("fakeid","fake",r),sev:s.Info});const i=l.getReplElements()[3];e.strictEqual(i.expression.value,"Object"),e.deepStrictEqual(i.expression.valueObj,r),l.removeReplExpressions(),e.strictEqual(l.getReplElements().length,0),l.appendToRepl(t,{output:`1
`,sev:s.Info}),l.appendToRepl(t,{output:"2",sev:s.Info}),l.appendToRepl(t,{output:`3
4`,sev:s.Info}),l.appendToRepl(t,{output:`5
`,sev:s.Info}),l.appendToRepl(t,{output:"6",sev:s.Info}),n=l.getReplElements(),e.strictEqual(n.length,3),e.strictEqual(n[0].toString(),`1
`),e.strictEqual(n[1].toString(),`23
45
`),e.strictEqual(n[2].toString(),"6"),l.removeReplExpressions(),l.appendToRepl(t,{output:`first line
`,sev:s.Info}),l.appendToRepl(t,{output:`first line
`,sev:s.Info}),l.appendToRepl(t,{output:`first line
`,sev:s.Info}),l.appendToRepl(t,{output:"second line",sev:s.Info}),l.appendToRepl(t,{output:"second line",sev:s.Info}),l.appendToRepl(t,{output:"third line",sev:s.Info}),n=l.getReplElements(),e.strictEqual(n.length,3),e.strictEqual(n[0].value,`first line
`),e.strictEqual(n[0].count,3),e.strictEqual(n[1].value,"second line"),e.strictEqual(n[1].count,2),e.strictEqual(n[2].value,"third line"),e.strictEqual(n[2].count,1)}),test("repl output count",()=>{const t=p.add(o(u)),l=new g(c);l.appendToRepl(t,{output:`first line
`,sev:s.Info}),l.appendToRepl(t,{output:`first line
`,sev:s.Info}),l.appendToRepl(t,{output:`first line
`,sev:s.Info}),l.appendToRepl(t,{output:"second line",sev:s.Info}),l.appendToRepl(t,{output:"second line",sev:s.Info}),l.appendToRepl(t,{output:"third line",sev:s.Info});const n=l.getReplElements();e.strictEqual(n.length,3),e.strictEqual(n[0].value,`first line
`),e.strictEqual(n[0].toString(),`first line
first line
first line
`),e.strictEqual(n[0].count,3),e.strictEqual(n[1].value,"second line"),e.strictEqual(n[1].toString(),`second line
second line`),e.strictEqual(n[1].count,2),e.strictEqual(n[2].value,"third line"),e.strictEqual(n[2].count,1)}),test("repl merging",()=>{const t=p.add(o(u,"parent",{repl:"mergeWithParent"})),l=p.add(o(u,"child1",{parentSession:t,repl:"separate"})),n=p.add(o(u,"child2",{parentSession:t,repl:"mergeWithParent"})),r=p.add(o(u,"grandChild",{parentSession:n,repl:"mergeWithParent"})),i=p.add(o(u,"child3",{parentSession:t}));let a=0;p.add(t.onDidChangeReplElements(()=>++a)),t.appendToRepl({output:`1
`,sev:s.Info}),e.strictEqual(a,1),e.strictEqual(t.getReplElements().length,1),e.strictEqual(l.getReplElements().length,0),e.strictEqual(n.getReplElements().length,1),e.strictEqual(r.getReplElements().length,1),e.strictEqual(i.getReplElements().length,0),r.appendToRepl({output:`2
`,sev:s.Info}),e.strictEqual(a,2),e.strictEqual(t.getReplElements().length,2),e.strictEqual(l.getReplElements().length,0),e.strictEqual(n.getReplElements().length,2),e.strictEqual(r.getReplElements().length,2),e.strictEqual(i.getReplElements().length,0),i.appendToRepl({output:`3
`,sev:s.Info}),e.strictEqual(a,2),e.strictEqual(t.getReplElements().length,2),e.strictEqual(l.getReplElements().length,0),e.strictEqual(n.getReplElements().length,2),e.strictEqual(r.getReplElements().length,2),e.strictEqual(i.getReplElements().length,1),l.appendToRepl({output:`4
`,sev:s.Info}),e.strictEqual(a,2),e.strictEqual(t.getReplElements().length,2),e.strictEqual(l.getReplElements().length,1),e.strictEqual(n.getReplElements().length,2),e.strictEqual(r.getReplElements().length,2),e.strictEqual(i.getReplElements().length,1)}),test("repl expressions",()=>{const t=p.add(o(u));e.strictEqual(t.getReplElements().length,0),u.addSession(t),t.raw=R;const l=new k(t,"mockthread",1),n=new O(l,1,void 0,"app.js","normal",{startLineNumber:1,startColumn:1,endLineNumber:1,endColumn:10},1,!0),r=new g(c);r.addReplExpression(t,n,"myVariable").then(),r.addReplExpression(t,n,"myVariable").then(),r.addReplExpression(t,n,"myVariable").then(),e.strictEqual(r.getReplElements().length,3),r.getReplElements().forEach(i=>{e.strictEqual(i.value,"myVariable")}),r.removeReplExpressions(),e.strictEqual(r.getReplElements().length,0)}),test("repl ordering",async()=>{const t=p.add(o(u));u.addSession(t);const l=new G,n=p.add(new y(l,void 0,"","",void 0,void 0,void 0,void 0));t.initializeForTest(n),await t.addReplExpression(void 0,"before.1"),e.strictEqual(t.getReplElements().length,3),e.strictEqual(t.getReplElements()[0].value,"before.1"),e.strictEqual(t.getReplElements()[1].value,"before.1"),e.strictEqual(t.getReplElements()[2].value,"=before.1"),await t.addReplExpression(void 0,"after.2"),await I(0),e.strictEqual(t.getReplElements().length,6),e.strictEqual(t.getReplElements()[3].value,"after.2"),e.strictEqual(t.getReplElements()[4].value,"=after.2"),e.strictEqual(t.getReplElements()[5].value,"after.2")}),test("repl groups",async()=>{const t=p.add(o(u)),l=new g(c);l.appendToRepl(t,{output:"first global line",sev:s.Info}),l.startGroup("group_1",!0),l.appendToRepl(t,{output:"first line in group",sev:s.Info}),l.appendToRepl(t,{output:"second line in group",sev:s.Info});const n=l.getReplElements();e.strictEqual(n.length,2);const r=n[1];e.strictEqual(r.name,"group_1"),e.strictEqual(r.autoExpand,!0),e.strictEqual(r.hasChildren,!0),e.strictEqual(r.hasEnded,!1),l.startGroup("group_2",!1),l.appendToRepl(t,{output:"first line in subgroup",sev:s.Info}),l.appendToRepl(t,{output:"second line in subgroup",sev:s.Info});const i=r.getChildren();e.strictEqual(i.length,3),e.strictEqual(i[0].value,"first line in group"),e.strictEqual(i[1].value,"second line in group"),e.strictEqual(i[2].name,"group_2"),e.strictEqual(i[2].hasEnded,!1),e.strictEqual(i[2].getChildren().length,2),l.endGroup(),e.strictEqual(i[2].hasEnded,!0),l.appendToRepl(t,{output:"third line in group",sev:s.Info}),e.strictEqual(r.getChildren().length,4),e.strictEqual(r.hasEnded,!1),l.endGroup(),e.strictEqual(r.hasEnded,!0),l.appendToRepl(t,{output:"second global line",sev:s.Info}),e.strictEqual(l.getReplElements().length,3),e.strictEqual(l.getReplElements()[2].value,"second global line")}),test("repl filter",async()=>{const t=p.add(o(u)),l=new g(c),n=new S,r=()=>l.getReplElements().filter(T=>{const m=n.filter(T,f.Visible);return m===!0||m===f.Visible});l.appendToRepl(t,{output:`first line
`,sev:s.Info}),l.appendToRepl(t,{output:`second line
`,sev:s.Info}),l.appendToRepl(t,{output:`third line
`,sev:s.Info}),l.appendToRepl(t,{output:`fourth line
`,sev:s.Info}),n.filterQuery="first";const i=r();e.strictEqual(i.length,1),e.strictEqual(i[0].value,`first line
`),n.filterQuery="!first";const a=r();e.strictEqual(i.length,1),e.strictEqual(a[0].value,`second line
`),e.strictEqual(a[1].value,`third line
`),e.strictEqual(a[2].value,`fourth line
`),n.filterQuery="first, line";const E=r();e.strictEqual(E.length,4),e.strictEqual(E[0].value,`first line
`),e.strictEqual(E[1].value,`second line
`),e.strictEqual(E[2].value,`third line
`),e.strictEqual(E[3].value,`fourth line
`),n.filterQuery="line, !second";const d=r();e.strictEqual(d.length,3),e.strictEqual(d[0].value,`first line
`),e.strictEqual(d[1].value,`third line
`),e.strictEqual(d[2].value,`fourth line
`),n.filterQuery="!second, line";const q=r();e.strictEqual(d.length,q.length),n.filterQuery="!line";const h=r();e.strictEqual(h.length,0),n.filterQuery="smth";const v=r();e.strictEqual(v.length,0)})});
