{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/debugQuickAccess.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IQuickPickSeparator } from '../../../../platform/quickinput/common/quickInput.js';\nimport { PickerQuickAccessProvider, IPickerQuickAccessItem, TriggerAction } from '../../../../platform/quickinput/browser/pickerQuickAccess.js';\nimport { localize } from '../../../../nls.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IDebugService } from '../common/debug.js';\nimport { IWorkspaceContextService, WorkbenchState } from '../../../../platform/workspace/common/workspace.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { matchesFuzzy } from '../../../../base/common/filters.js';\nimport { ADD_CONFIGURATION_ID, DEBUG_QUICK_ACCESS_PREFIX } from './debugCommands.js';\nimport { debugConfigure, debugRemoveConfig } from './debugIcons.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\n\nexport class StartDebugQuickAccessProvider extends PickerQuickAccessProvider<IPickerQuickAccessItem> {\n\n\tconstructor(\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t) {\n\t\tsuper(DEBUG_QUICK_ACCESS_PREFIX, {\n\t\t\tnoResultsPick: {\n\t\t\t\tlabel: localize('noDebugResults', \"No matching launch configurations\")\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected async _getPicks(filter: string): Promise<(IQuickPickSeparator | IPickerQuickAccessItem)[]> {\n\t\tconst picks: Array<IPickerQuickAccessItem | IQuickPickSeparator> = [];\n\t\tif (!this.debugService.getAdapterManager().hasEnabledDebuggers()) {\n\t\t\treturn [];\n\t\t}\n\n\t\tpicks.push({ type: 'separator', label: 'launch.json' });\n\n\t\tconst configManager = this.debugService.getConfigurationManager();\n\n\t\t// Entries: configs\n\t\tlet lastGroup: string | undefined;\n\t\tfor (const config of configManager.getAllConfigurations()) {\n\t\t\tconst highlights = matchesFuzzy(filter, config.name, true);\n\t\t\tif (highlights) {\n\n\t\t\t\t// Separator\n\t\t\t\tif (lastGroup !== config.presentation?.group) {\n\t\t\t\t\tpicks.push({ type: 'separator' });\n\t\t\t\t\tlastGroup = config.presentation?.group;\n\t\t\t\t}\n\n\t\t\t\t// Launch entry\n\t\t\t\tpicks.push({\n\t\t\t\t\tlabel: config.name,\n\t\t\t\t\tdescription: this.contextService.getWorkbenchState() === WorkbenchState.WORKSPACE ? config.launch.name : '',\n\t\t\t\t\thighlights: { label: highlights },\n\t\t\t\t\tbuttons: [{\n\t\t\t\t\t\ticonClass: ThemeIcon.asClassName(debugConfigure),\n\t\t\t\t\t\ttooltip: localize('customizeLaunchConfig', \"Configure Launch Configuration\")\n\t\t\t\t\t}],\n\t\t\t\t\ttrigger: () => {\n\t\t\t\t\t\tconfig.launch.openConfigFile({ preserveFocus: false });\n\n\t\t\t\t\t\treturn TriggerAction.CLOSE_PICKER;\n\t\t\t\t\t},\n\t\t\t\t\taccept: async () => {\n\t\t\t\t\t\tawait configManager.selectConfiguration(config.launch, config.name);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait this.debugService.startDebugging(config.launch, undefined, { startedByUser: true });\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthis.notificationService.error(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// Entries detected configurations\n\t\tconst dynamicProviders = await configManager.getDynamicProviders();\n\t\tif (dynamicProviders.length > 0) {\n\t\t\tpicks.push({\n\t\t\t\ttype: 'separator', label: localize({\n\t\t\t\t\tkey: 'contributed',\n\t\t\t\t\tcomment: ['contributed is lower case because it looks better like that in UI. Nothing preceeds it. It is a name of the grouping of debug configurations.']\n\t\t\t\t}, \"contributed\")\n\t\t\t});\n\t\t}\n\n\t\tconfigManager.getRecentDynamicConfigurations().forEach(({ name, type }) => {\n\t\t\tconst highlights = matchesFuzzy(filter, name, true);\n\t\t\tif (highlights) {\n\t\t\t\tpicks.push({\n\t\t\t\t\tlabel: name,\n\t\t\t\t\thighlights: { label: highlights },\n\t\t\t\t\tbuttons: [{\n\t\t\t\t\t\ticonClass: ThemeIcon.asClassName(debugRemoveConfig),\n\t\t\t\t\t\ttooltip: localize('removeLaunchConfig', \"Remove Launch Configuration\")\n\t\t\t\t\t}],\n\t\t\t\t\ttrigger: () => {\n\t\t\t\t\t\tconfigManager.removeRecentDynamicConfigurations(name, type);\n\t\t\t\t\t\treturn TriggerAction.CLOSE_PICKER;\n\t\t\t\t\t},\n\t\t\t\t\taccept: async () => {\n\t\t\t\t\t\tawait configManager.selectConfiguration(undefined, name, undefined, { type });\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst { launch, getConfig } = configManager.selectedConfiguration;\n\t\t\t\t\t\t\tconst config = await getConfig();\n\t\t\t\t\t\t\tawait this.debugService.startDebugging(launch, config, { startedByUser: true });\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthis.notificationService.error(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tdynamicProviders.forEach(provider => {\n\t\t\tpicks.push({\n\t\t\t\tlabel: `$(folder) ${provider.label}...`,\n\t\t\t\tariaLabel: localize({ key: 'providerAriaLabel', comment: ['Placeholder stands for the provider label. For example \"NodeJS\".'] }, \"{0} contributed configurations\", provider.label),\n\t\t\t\taccept: async () => {\n\t\t\t\t\tconst pick = await provider.pick();\n\t\t\t\t\tif (pick) {\n\t\t\t\t\t\t// Use the type of the provider, not of the config since config sometimes have subtypes (for example \"node-terminal\")\n\t\t\t\t\t\tawait configManager.selectConfiguration(pick.launch, pick.config.name, pick.config, { type: provider.type });\n\t\t\t\t\t\tthis.debugService.startDebugging(pick.launch, pick.config, { startedByUser: true });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\n\t\t// Entries: launches\n\t\tconst visibleLaunches = configManager.getLaunches().filter(launch => !launch.hidden);\n\n\t\t// Separator\n\t\tif (visibleLaunches.length > 0) {\n\t\t\tpicks.push({ type: 'separator', label: localize('configure', \"configure\") });\n\t\t}\n\n\t\tfor (const launch of visibleLaunches) {\n\t\t\tconst label = this.contextService.getWorkbenchState() === WorkbenchState.WORKSPACE ?\n\t\t\t\tlocalize(\"addConfigTo\", \"Add Config ({0})...\", launch.name) :\n\t\t\t\tlocalize('addConfiguration', \"Add Configuration...\");\n\n\t\t\t// Add Config entry\n\t\t\tpicks.push({\n\t\t\t\tlabel,\n\t\t\t\tdescription: this.contextService.getWorkbenchState() === WorkbenchState.WORKSPACE ? launch.name : '',\n\t\t\t\thighlights: { label: matchesFuzzy(filter, label, true) ?? undefined },\n\t\t\t\taccept: () => this.commandService.executeCommand(ADD_CONFIGURATION_ID, launch.uri.toString())\n\t\t\t});\n\t\t}\n\n\t\treturn picks;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
