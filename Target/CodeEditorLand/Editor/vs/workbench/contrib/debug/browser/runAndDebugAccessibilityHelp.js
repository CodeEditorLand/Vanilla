var p=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var l=(c,i,a,t)=>{for(var o=t>1?void 0:t?k(i,a):i,u=c.length-1,b;u>=0;u--)(b=c[u])&&(o=(t?b(i,a,o):b(o))||o);return t&&o&&p(i,a,o),o},d=(c,i)=>(a,t)=>i(a,t,c);import{Disposable as v}from"../../../../../vs/base/common/lifecycle.js";import"../../../../../vs/editor/browser/editorExtensions.js";import{AccessibilityHelpNLS as g}from"../../../../../vs/editor/common/standaloneStrings.js";import{localize as e}from"../../../../../vs/nls.js";import{AccessibleViewProviderId as f,AccessibleViewType as m}from"../../../../../vs/platform/accessibility/browser/accessibleView.js";import"../../../../../vs/platform/accessibility/browser/accessibleViewRegistry.js";import{ICommandService as w}from"../../../../../vs/platform/commands/common/commands.js";import{ContextKeyExpr as n}from"../../../../../vs/platform/contextkey/common/contextkey.js";import{FocusedViewContext as s,SidebarFocusContext as V}from"../../../../../vs/workbench/common/contextkeys.js";import{AccessibilityVerbositySettingId as y}from"../../../../../vs/workbench/contrib/accessibility/browser/accessibilityConfiguration.js";import{BREAKPOINTS_VIEW_ID as S,CALLSTACK_VIEW_ID as D,LOADED_SCRIPTS_VIEW_ID as I,VARIABLES_VIEW_ID as C,WATCH_VIEW_ID as _}from"../../../../../vs/workbench/contrib/debug/common/debug.js";import{IViewsService as h}from"../../../../../vs/workbench/services/views/common/viewsService.js";class z{priority=120;name="runAndDebugHelp";when=n.or(n.and(n.equals("activeViewlet","workbench.view.debug"),V),n.equals(s.key,C),n.equals(s.key,_),n.equals(s.key,D),n.equals(s.key,I),n.equals(s.key,S));type=m.Help;getProvider(i){return new r(i.get(w),i.get(h))}}let r=class extends v{constructor(a,t){super();this._commandService=a;this._viewsService=t;this._focusedView=this._viewsService.getFocusedViewName()}id=f.RunAndDebug;verbositySettingKey=y.Debug;options={type:m.Help};_focusedView;onClose(){switch(this._focusedView){case"Watch":this._commandService.executeCommand("workbench.debug.action.focusWatchView");break;case"Variables":this._commandService.executeCommand("workbench.debug.action.focusVariablesView");break;case"Call Stack":this._commandService.executeCommand("workbench.debug.action.focusCallStackView");break;case"Breakpoints":this._commandService.executeCommand("workbench.debug.action.focusBreakpointsView");break;default:this._commandService.executeCommand("workbench.view.debug")}}provideContent(){return[e("debug.showRunAndDebug","The Show Run and Debug view command{0} will open the current view.","<keybinding:workbench.view.debug>"),e("debug.startDebugging","The Debug: Start Debugging command{0} will start a debug session.","<keybinding:workbench.action.debug.start>"),g.setBreakpoint,g.addToWatch,e("onceDebugging","Once debugging, the following commands will be available:"),e("debug.restartDebugging","- Debug: Restart Debugging command{0} will restart the current debug session.","<keybinding:workbench.action.debug.restart>"),e("debug.stopDebugging","- Debug: Stop Debugging command{0} will stop the current debugging session.","<keybinding:workbench.action.debug.stop>"),e("debug.continue","- Debug: Continue command{0} will continue execution until the next breakpoint.","<keybinding:workbench.action.debug.continue>"),e("debug.stepInto","- Debug: Step Into command{0} will step into the next function call.","<keybinding:workbench.action.debug.stepInto>"),e("debug.stepOver","- Debug: Step Over command{0} will step over the current function call.","<keybinding:workbench.action.debug.stepOver>"),e("debug.stepOut","- Debug: Step Out command{0} will step out of the current function call.","<keybinding:workbench.action.debug.stepOut>"),e("debug.views","The debug viewlet is comprised of several views that can be focused with the following commands or navigated to via tab then arrow keys:"),e("debug.focusBreakpoints","- Debug: Focus Breakpoints View command{0} will focus the breakpoints view.","<keybinding:workbench.debug.action.focusBreakpointsView>"),e("debug.focusCallStack","- Debug: Focus Call Stack View command{0} will focus the call stack view.","<keybinding:workbench.debug.action.focusCallStackView>"),e("debug.focusVariables","- Debug: Focus Variables View command{0} will focus the variables view.","<keybinding:workbench.debug.action.focusVariablesView>"),e("debug.focusWatch","- Debug: Focus Watch View command{0} will focus the watch view.","<keybinding:workbench.debug.action.focusWatchView>"),e("debug.help","The debug console is a Read-Eval-Print-Loop that allows you to evaluate expressions and run commands and can be focused with{0}.","<keybinding:workbench.panel.repl.view.focus>"),e("debug.watchSetting","The setting {0} controls whether watch variable changes are announced.","accessibility.debugWatchVariableAnnouncements")].join(`
`)}};r=l([d(0,w),d(1,h)],r);export{z as RunAndDebugAccessibilityHelp};
