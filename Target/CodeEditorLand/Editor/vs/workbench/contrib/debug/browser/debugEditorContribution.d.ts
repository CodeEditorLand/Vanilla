import { IMouseEvent } from "vs/base/browser/mouseEvent";
import { ICodeEditor } from "vs/editor/browser/editorBrowser";
import { Position } from "vs/editor/common/core/position";
import { ILanguageFeatureDebounceService } from "vs/editor/common/services/languageFeatureDebounce";
import { ILanguageFeaturesService } from "vs/editor/common/services/languageFeatures";
import { ICommandService } from "vs/platform/commands/common/commands";
import { IConfigurationService } from "vs/platform/configuration/common/configuration";
import { IContextKeyService } from "vs/platform/contextkey/common/contextkey";
import { IInstantiationService } from "vs/platform/instantiation/common/instantiation";
import { IUriIdentityService } from "vs/platform/uriIdentity/common/uriIdentity";
import { IDebugEditorContribution, IDebugService } from "vs/workbench/contrib/debug/common/debug";
import { IHostService } from "vs/workbench/services/host/browser/host";
export declare const debugInlineForeground: any;
export declare const debugInlineBackground: any;
export declare class DebugEditorContribution implements IDebugEditorContribution {
    private editor;
    private readonly debugService;
    private readonly instantiationService;
    private readonly commandService;
    private readonly configurationService;
    private readonly hostService;
    private readonly uriIdentityService;
    private readonly languageFeaturesService;
    private toDispose;
    private hoverWidget;
    private hoverPosition?;
    private mouseDown;
    private exceptionWidgetVisible;
    private gutterIsHovered;
    private exceptionWidget;
    private configurationWidget;
    private readonly altListener;
    private altPressed;
    private oldDecorations;
    private readonly displayedStore;
    private editorHoverOptions;
    private readonly debounceInfo;
    private readonly defaultHoverLockout;
    constructor(editor: ICodeEditor, debugService: IDebugService, instantiationService: IInstantiationService, commandService: ICommandService, configurationService: IConfigurationService, hostService: IHostService, uriIdentityService: IUriIdentityService, contextKeyService: IContextKeyService, languageFeaturesService: ILanguageFeaturesService, featureDebounceService: ILanguageFeatureDebounceService);
    private registerListeners;
    private _wordToLineNumbersMap;
    private updateHoverConfiguration;
    private addDocumentListeners;
    private applyDocumentListeners;
    showHover(position: Position, focus: boolean, mouseEvent?: IMouseEvent): Promise<void>;
    private preventDefaultEditorHover;
    private showEditorHover;
    private onFocusStackFrame;
    private get hoverDelay();
    private get showHoverScheduler();
    private hideHoverWidget;
    private onEditorMouseDown;
    private onEditorMouseMove;
    private onKeyDown;
    private toggleExceptionWidget;
    private showExceptionWidget;
    closeExceptionWidget(): void;
    addLaunchConfiguration(): Promise<any>;
    private get removeInlineValuesScheduler();
    private get updateInlineValuesScheduler();
    private updateInlineValueDecorations;
    dispose(): void;
}
