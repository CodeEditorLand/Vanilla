{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/repl.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport type { IHistoryNavigationWidget } from \"../../../../base/browser/history.js\";\nimport type { IActionViewItem } from \"../../../../base/browser/ui/actionbar/actionbar.js\";\nimport * as aria from \"../../../../base/browser/ui/aria/aria.js\";\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from \"../../../../base/browser/ui/mouseCursor/mouseCursor.js\";\nimport type {\n\tIAsyncDataSource,\n\tITreeContextMenuEvent,\n\tITreeNode,\n} from \"../../../../base/browser/ui/tree/tree.js\";\nimport type { IAction } from \"../../../../base/common/actions.js\";\nimport { RunOnceScheduler } from \"../../../../base/common/async.js\";\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { memoize } from \"../../../../base/common/decorators.js\";\nimport { Emitter } from \"../../../../base/common/event.js\";\nimport type { FuzzyScore } from \"../../../../base/common/filters.js\";\nimport { HistoryNavigator } from \"../../../../base/common/history.js\";\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { removeAnsiEscapeCodes } from \"../../../../base/common/strings.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { URI as uri } from \"../../../../base/common/uri.js\";\nimport {\n\ttype ICodeEditor,\n\tisCodeEditor,\n} from \"../../../../editor/browser/editorBrowser.js\";\nimport {\n\tEditorAction,\n\tregisterEditorAction,\n} from \"../../../../editor/browser/editorExtensions.js\";\nimport { ICodeEditorService } from \"../../../../editor/browser/services/codeEditorService.js\";\nimport { CodeEditorWidget } from \"../../../../editor/browser/widget/codeEditor/codeEditorWidget.js\";\nimport {\n\tEDITOR_FONT_DEFAULTS,\n\tEditorOption,\n} from \"../../../../editor/common/config/editorOptions.js\";\nimport type { Position } from \"../../../../editor/common/core/position.js\";\nimport { Range } from \"../../../../editor/common/core/range.js\";\nimport type { IDecorationOptions } from \"../../../../editor/common/editorCommon.js\";\nimport { EditorContextKeys } from \"../../../../editor/common/editorContextKeys.js\";\nimport {\n\ttype CompletionContext,\n\ttype CompletionItem,\n\tCompletionItemInsertTextRule,\n\tCompletionItemKind,\n\tCompletionItemKinds,\n\ttype CompletionList,\n} from \"../../../../editor/common/languages.js\";\nimport type { ITextModel } from \"../../../../editor/common/model.js\";\nimport { ILanguageFeaturesService } from \"../../../../editor/common/services/languageFeatures.js\";\nimport { IModelService } from \"../../../../editor/common/services/model.js\";\nimport { ITextResourcePropertiesService } from \"../../../../editor/common/services/textResourceConfiguration.js\";\nimport { SuggestController } from \"../../../../editor/contrib/suggest/browser/suggestController.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport {\n\tAccessibilitySignal,\n\tIAccessibilitySignalService,\n} from \"../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js\";\nimport { createAndFillInContextMenuActions } from \"../../../../platform/actions/browser/menuEntryActionViewItem.js\";\nimport {\n\tAction2,\n\ttype IMenu,\n\tIMenuService,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { IClipboardService } from \"../../../../platform/clipboard/common/clipboardService.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tContextKeyExpr,\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextMenuService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport { registerAndCreateHistoryNavigationContext } from \"../../../../platform/history/browser/contextScopedHistoryWidget.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ServiceCollection } from \"../../../../platform/instantiation/common/serviceCollection.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { WorkbenchAsyncDataTree } from \"../../../../platform/list/browser/listService.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport {\n\teditorForeground,\n\tresolveColorValue,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport { registerNavigableContainer } from \"../../../browser/actions/widgetNavigationCommands.js\";\nimport {\n\tFilterViewPane,\n\ttype IViewPaneOptions,\n\tViewAction,\n} from \"../../../browser/parts/views/viewPane.js\";\nimport { IViewDescriptorService } from \"../../../common/views.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport { AccessibilityVerbositySettingId } from \"../../accessibility/browser/accessibilityConfiguration.js\";\nimport { AccessibilityCommandId } from \"../../accessibility/common/accessibilityCommands.js\";\nimport {\n\tgetSimpleCodeEditorWidgetOptions,\n\tgetSimpleEditorOptions,\n} from \"../../codeEditor/browser/simpleEditorOptions.js\";\nimport {\n\tCONTEXT_DEBUG_STATE,\n\tCONTEXT_IN_DEBUG_REPL,\n\tCONTEXT_MULTI_SESSION_REPL,\n\tDEBUG_SCHEME,\n\ttype IDebugConfiguration,\n\tIDebugService,\n\ttype IDebugSession,\n\ttype IReplConfiguration,\n\ttype IReplElement,\n\ttype IReplOptions,\n\tREPL_VIEW_ID,\n\tState,\n\tgetStateLabel,\n} from \"../common/debug.js\";\nimport { Variable } from \"../common/debugModel.js\";\nimport { ReplEvaluationResult, ReplGroup } from \"../common/replModel.js\";\nimport { FocusSessionActionViewItem } from \"./debugActionViewItems.js\";\nimport { DebugExpressionRenderer } from \"./debugExpressionRenderer.js\";\nimport {\n\tdebugConsoleClearAll,\n\tdebugConsoleEvaluationPrompt,\n} from \"./debugIcons.js\";\nimport \"./media/repl.css\";\nimport { ReplFilter } from \"./replFilter.js\";\nimport {\n\tReplAccessibilityProvider,\n\tReplDataSource,\n\tReplDelegate,\n\tReplEvaluationInputsRenderer,\n\tReplEvaluationResultsRenderer,\n\tReplGroupRenderer,\n\tReplOutputElementRenderer,\n\tReplRawObjectsRenderer,\n\tReplVariablesRenderer,\n} from \"./replViewer.js\";\n\nconst $ = dom.$;\n\nconst HISTORY_STORAGE_KEY = \"debug.repl.history\";\nconst FILTER_HISTORY_STORAGE_KEY = \"debug.repl.filterHistory\";\nconst FILTER_VALUE_STORAGE_KEY = \"debug.repl.filterValue\";\nconst DECORATION_KEY = \"replinputdecoration\";\n\nfunction revealLastElement(tree: WorkbenchAsyncDataTree<any, any, any>) {\n\ttree.scrollTop = tree.scrollHeight - tree.renderHeight;\n\t// tree.scrollTop = 1e6;\n}\n\nconst sessionsToIgnore = new Set<IDebugSession>();\nconst identityProvider = { getId: (element: IReplElement) => element.getId() };\n\nexport class Repl extends FilterViewPane implements IHistoryNavigationWidget {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static readonly REFRESH_DELAY = 50; // delay in ms to refresh the repl for new elements to show\n\tprivate static readonly URI = uri.parse(`${DEBUG_SCHEME}:replinput`);\n\n\tprivate history: HistoryNavigator<string>;\n\tprivate tree?: WorkbenchAsyncDataTree<\n\t\tIDebugSession,\n\t\tIReplElement,\n\t\tFuzzyScore\n\t>;\n\tprivate replOptions: ReplOptions;\n\tprivate previousTreeScrollHeight = 0;\n\tprivate replDelegate!: ReplDelegate;\n\tprivate container!: HTMLElement;\n\tprivate treeContainer!: HTMLElement;\n\tprivate replInput!: CodeEditorWidget;\n\tprivate replInputContainer!: HTMLElement;\n\tprivate bodyContentDimension: dom.Dimension | undefined;\n\tprivate replInputLineCount = 1;\n\tprivate model: ITextModel | undefined;\n\tprivate setHistoryNavigationEnablement!: (enabled: boolean) => void;\n\tprivate scopedInstantiationService!: IInstantiationService;\n\tprivate replElementsChangeListener: IDisposable | undefined;\n\tprivate styleElement: HTMLStyleElement | undefined;\n\tprivate styleChangedWhenInvisible = false;\n\tprivate completionItemProvider: IDisposable | undefined;\n\tprivate modelChangeListener: IDisposable = Disposable.None;\n\tprivate filter: ReplFilter;\n\tprivate multiSessionRepl: IContextKey<boolean>;\n\tprivate menu: IMenu;\n\tprivate replDataSource:\n\t\t| IAsyncDataSource<IDebugSession, IReplElement>\n\t\t| undefined;\n\tprivate findIsOpen = false;\n\n\tconstructor(\n\t\toptions: IViewPaneOptions,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IConfigurationService\n\t\tprotected override readonly configurationService: IConfigurationService,\n\t\t@ITextResourcePropertiesService\n\t\tprivate readonly textResourcePropertiesService: ITextResourcePropertiesService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IKeybindingService\n\t\tprotected override readonly keybindingService: IKeybindingService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@ILanguageFeaturesService\n\t\tprivate readonly languageFeaturesService: ILanguageFeaturesService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tconst filterText = storageService.get(\n\t\t\tFILTER_VALUE_STORAGE_KEY,\n\t\t\tStorageScope.WORKSPACE,\n\t\t\t\"\",\n\t\t);\n\t\tsuper(\n\t\t\t{\n\t\t\t\t...options,\n\t\t\t\tfilterOptions: {\n\t\t\t\t\tplaceholder: localize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"workbench.debug.filter.placeholder\",\n\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\"Text in the brackets after e.g. is not localizable\",\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"Filter (e.g. text, !exclude, \\\\escape)\",\n\t\t\t\t\t),\n\t\t\t\t\ttext: filterText,\n\t\t\t\t\thistory: JSON.parse(\n\t\t\t\t\t\tstorageService.get(\n\t\t\t\t\t\t\tFILTER_HISTORY_STORAGE_KEY,\n\t\t\t\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\t\t\t\t\"[]\",\n\t\t\t\t\t\t),\n\t\t\t\t\t) as string[],\n\t\t\t\t},\n\t\t\t},\n\t\t\tkeybindingService,\n\t\t\tcontextMenuService,\n\t\t\tconfigurationService,\n\t\t\tcontextKeyService,\n\t\t\tviewDescriptorService,\n\t\t\tinstantiationService,\n\t\t\topenerService,\n\t\t\tthemeService,\n\t\t\ttelemetryService,\n\t\t\thoverService,\n\t\t);\n\n\t\tthis.menu = menuService.createMenu(\n\t\t\tMenuId.DebugConsoleContext,\n\t\t\tcontextKeyService,\n\t\t);\n\t\tthis._register(this.menu);\n\t\tthis.history = new HistoryNavigator(\n\t\t\tJSON.parse(\n\t\t\t\tthis.storageService.get(\n\t\t\t\t\tHISTORY_STORAGE_KEY,\n\t\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\t\t\"[]\",\n\t\t\t\t),\n\t\t\t),\n\t\t\t100,\n\t\t);\n\t\tthis.filter = new ReplFilter();\n\t\tthis.filter.filterQuery = filterText;\n\t\tthis.multiSessionRepl =\n\t\t\tCONTEXT_MULTI_SESSION_REPL.bindTo(contextKeyService);\n\t\tthis.replOptions = this._register(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tReplOptions,\n\t\t\t\tthis.id,\n\t\t\t\t() => this.getLocationBasedColors().background,\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.replOptions.onDidChange(() => this.onDidStyleChange()),\n\t\t);\n\n\t\tcodeEditorService.registerDecorationType(\n\t\t\t\"repl-decoration\",\n\t\t\tDECORATION_KEY,\n\t\t\t{},\n\t\t);\n\t\tthis.multiSessionRepl.set(this.isMultiSessionView);\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tif (this.debugService.getViewModel().focusedSession) {\n\t\t\tthis.onDidFocusSession(\n\t\t\t\tthis.debugService.getViewModel().focusedSession,\n\t\t\t);\n\t\t}\n\n\t\tthis._register(\n\t\t\tthis.debugService\n\t\t\t\t.getViewModel()\n\t\t\t\t.onDidFocusSession(async (session) =>\n\t\t\t\t\tthis.onDidFocusSession(session),\n\t\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.debugService\n\t\t\t\t.getViewModel()\n\t\t\t\t.onDidEvaluateLazyExpression(async (e) => {\n\t\t\t\t\tif (e instanceof Variable && this.tree?.hasNode(e)) {\n\t\t\t\t\t\tawait this.tree.updateChildren(e, false, true);\n\t\t\t\t\t\tawait this.tree.expand(e);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.debugService.onWillNewSession(async (newSession) => {\n\t\t\t\t// Need to listen to output events for sessions which are not yet fully initialised\n\t\t\t\tconst input = this.tree?.getInput();\n\t\t\t\tif (!input || input.state === State.Inactive) {\n\t\t\t\t\tawait this.selectSession(newSession);\n\t\t\t\t}\n\t\t\t\tthis.multiSessionRepl.set(this.isMultiSessionView);\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.debugService.onDidEndSession(async () => {\n\t\t\t\t// Update view, since orphaned sessions might now be separate\n\t\t\t\tawait Promise.resolve(); // allow other listeners to go first, so sessions can update parents\n\t\t\t\tthis.multiSessionRepl.set(this.isMultiSessionView);\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.themeService.onDidColorThemeChange(() => {\n\t\t\t\tthis.refreshReplElements(false);\n\t\t\t\tif (this.isVisible()) {\n\t\t\t\t\tthis.updateInputDecoration();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.onDidChangeBodyVisibility((visible) => {\n\t\t\t\tif (visible) {\n\t\t\t\t\tif (!this.model) {\n\t\t\t\t\t\tthis.model =\n\t\t\t\t\t\t\tthis.modelService.getModel(Repl.URI) ||\n\t\t\t\t\t\t\tthis.modelService.createModel(\n\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\tRepl.URI,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tthis.setMode();\n\t\t\t\t\tthis.replInput.setModel(this.model);\n\t\t\t\t\tthis.updateInputDecoration();\n\t\t\t\t\tthis.refreshReplElements(true);\n\t\t\t\t\tif (this.styleChangedWhenInvisible) {\n\t\t\t\t\t\tthis.styleChangedWhenInvisible = false;\n\t\t\t\t\t\tthis.onDidStyleChange();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (\n\t\t\t\t\te.affectsConfiguration(\"debug.console.wordWrap\") &&\n\t\t\t\t\tthis.tree\n\t\t\t\t) {\n\t\t\t\t\tthis.tree.dispose();\n\t\t\t\t\tthis.treeContainer.innerText = \"\";\n\t\t\t\t\tdom.clearNode(this.treeContainer);\n\t\t\t\t\tthis.createReplTree();\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\t\"debug.console.acceptSuggestionOnEnter\",\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tconst config =\n\t\t\t\t\t\tthis.configurationService.getValue<IDebugConfiguration>(\n\t\t\t\t\t\t\t\"debug\",\n\t\t\t\t\t\t);\n\t\t\t\t\tthis.replInput.updateOptions({\n\t\t\t\t\t\tacceptSuggestionOnEnter:\n\t\t\t\t\t\t\tconfig.console.acceptSuggestionOnEnter === \"on\"\n\t\t\t\t\t\t\t\t? \"on\"\n\t\t\t\t\t\t\t\t: \"off\",\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.editorService.onDidActiveEditorChange(() => {\n\t\t\t\tthis.setMode();\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.filterWidget.onDidChangeFilterText(() => {\n\t\t\t\tthis.filter.filterQuery = this.filterWidget.getFilterText();\n\t\t\t\tif (this.tree) {\n\t\t\t\t\tthis.tree.refilter();\n\t\t\t\t\trevealLastElement(this.tree);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate async onDidFocusSession(\n\t\tsession: IDebugSession | undefined,\n\t): Promise<void> {\n\t\tif (session) {\n\t\t\tsessionsToIgnore.delete(session);\n\t\t\tthis.completionItemProvider?.dispose();\n\t\t\tif (session.capabilities.supportsCompletionsRequest) {\n\t\t\t\tthis.completionItemProvider =\n\t\t\t\t\tthis.languageFeaturesService.completionProvider.register(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tscheme: DEBUG_SCHEME,\n\t\t\t\t\t\t\tpattern: \"**/replinput\",\n\t\t\t\t\t\t\thasAccessToAllModels: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_debugDisplayName: \"debugConsole\",\n\t\t\t\t\t\t\ttriggerCharacters: session.capabilities\n\t\t\t\t\t\t\t\t.completionTriggerCharacters || [\".\"],\n\t\t\t\t\t\t\tprovideCompletionItems: async (\n\t\t\t\t\t\t\t\t_: ITextModel,\n\t\t\t\t\t\t\t\tposition: Position,\n\t\t\t\t\t\t\t\t_context: CompletionContext,\n\t\t\t\t\t\t\t\ttoken: CancellationToken,\n\t\t\t\t\t\t\t): Promise<CompletionList> => {\n\t\t\t\t\t\t\t\t// Disable history navigation because up and down are used to navigate through the suggest widget\n\t\t\t\t\t\t\t\tthis.setHistoryNavigationEnablement(false);\n\n\t\t\t\t\t\t\t\tconst model = this.replInput.getModel();\n\t\t\t\t\t\t\t\tif (model) {\n\t\t\t\t\t\t\t\t\tconst word =\n\t\t\t\t\t\t\t\t\t\tmodel.getWordAtPosition(position);\n\t\t\t\t\t\t\t\t\tconst overwriteBefore = word\n\t\t\t\t\t\t\t\t\t\t? word.word.length\n\t\t\t\t\t\t\t\t\t\t: 0;\n\t\t\t\t\t\t\t\t\tconst text = model.getValue();\n\t\t\t\t\t\t\t\t\tconst focusedStackFrame =\n\t\t\t\t\t\t\t\t\t\tthis.debugService.getViewModel()\n\t\t\t\t\t\t\t\t\t\t\t.focusedStackFrame;\n\t\t\t\t\t\t\t\t\tconst frameId = focusedStackFrame\n\t\t\t\t\t\t\t\t\t\t? focusedStackFrame.frameId\n\t\t\t\t\t\t\t\t\t\t: undefined;\n\t\t\t\t\t\t\t\t\tconst response = await session.completions(\n\t\t\t\t\t\t\t\t\t\tframeId,\n\t\t\t\t\t\t\t\t\t\tfocusedStackFrame?.thread.threadId || 0,\n\t\t\t\t\t\t\t\t\t\ttext,\n\t\t\t\t\t\t\t\t\t\tposition,\n\t\t\t\t\t\t\t\t\t\toverwriteBefore,\n\t\t\t\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tconst suggestions: CompletionItem[] = [];\n\t\t\t\t\t\t\t\t\tconst computeRange = (length: number) =>\n\t\t\t\t\t\t\t\t\t\tRange.fromPositions(\n\t\t\t\t\t\t\t\t\t\t\tposition.delta(0, -length),\n\t\t\t\t\t\t\t\t\t\t\tposition,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tresponse &&\n\t\t\t\t\t\t\t\t\t\tresponse.body &&\n\t\t\t\t\t\t\t\t\t\tresponse.body.targets\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tresponse.body.targets.forEach(\n\t\t\t\t\t\t\t\t\t\t\t(item) => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (item && item.label) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet insertTextRules:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t| CompletionItemInsertTextRule\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t| undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet insertText =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.text || item.label;\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeof item.selectionStart ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// If a debug completion item sets a selection we need to use snippets to make sure the selection is selected #90974\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tinsertTextRules =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCompletionItemInsertTextRule.InsertAsSnippet;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst selectionLength =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeof item.selectionLength ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? item.selectionLength\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst placeholder =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectionLength > 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"${1:\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinsertText.substring(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.selectionStart,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.selectionStart +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectionLength,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"}$0\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"$0\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tinsertText =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinsertText.substring(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.selectionStart,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinsertText.substring(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.selectionStart +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectionLength,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tsuggestions.push({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: item.label,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tinsertText,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdetail: item.detail,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkind: CompletionItemKinds.fromString(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.type ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"property\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterText:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.start &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.length\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? text\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.substring(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.start,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.start +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.length,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.concat(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.label,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trange: computeRange(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.length ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverwriteBefore,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsortText: item.sortText,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tinsertTextRules,\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tthis.configurationService.getValue<IDebugConfiguration>(\n\t\t\t\t\t\t\t\t\t\t\t\"debug\",\n\t\t\t\t\t\t\t\t\t\t).console.historySuggestions\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tconst history =\n\t\t\t\t\t\t\t\t\t\t\tthis.history.getHistory();\n\t\t\t\t\t\t\t\t\t\tconst idxLength = String(\n\t\t\t\t\t\t\t\t\t\t\thistory.length,\n\t\t\t\t\t\t\t\t\t\t).length;\n\t\t\t\t\t\t\t\t\t\thistory.forEach((h, i) =>\n\t\t\t\t\t\t\t\t\t\t\tsuggestions.push({\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: h,\n\t\t\t\t\t\t\t\t\t\t\t\tinsertText: h,\n\t\t\t\t\t\t\t\t\t\t\t\tkind: CompletionItemKind.Text,\n\t\t\t\t\t\t\t\t\t\t\t\trange: computeRange(h.length),\n\t\t\t\t\t\t\t\t\t\t\t\tsortText:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"ZZZ\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\tString(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thistory.length - i,\n\t\t\t\t\t\t\t\t\t\t\t\t\t).padStart(idxLength, \"0\"),\n\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturn { suggestions };\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn Promise.resolve({ suggestions: [] });\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tawait this.selectSession();\n\t}\n\n\tgetFilterStats(): { total: number; filtered: number } {\n\t\t// This could be called before the tree is created when setting this.filterState.filterText value\n\t\treturn {\n\t\t\ttotal: this.tree?.getNode().children.length ?? 0,\n\t\t\tfiltered:\n\t\t\t\tthis.tree?.getNode().children.filter((c) => c.visible).length ??\n\t\t\t\t0,\n\t\t};\n\t}\n\n\tget isReadonly(): boolean {\n\t\t// Do not allow to edit inactive sessions\n\t\tconst session = this.tree?.getInput();\n\t\tif (session && session.state !== State.Inactive) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tshowPreviousValue(): void {\n\t\tif (!this.isReadonly) {\n\t\t\tthis.navigateHistory(true);\n\t\t}\n\t}\n\n\tshowNextValue(): void {\n\t\tif (!this.isReadonly) {\n\t\t\tthis.navigateHistory(false);\n\t\t}\n\t}\n\n\tfocusFilter(): void {\n\t\tthis.filterWidget.focus();\n\t}\n\n\topenFind(): void {\n\t\tthis.tree?.openFind();\n\t}\n\n\tprivate setMode(): void {\n\t\tif (!this.isVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst activeEditorControl = this.editorService.activeTextEditorControl;\n\t\tif (isCodeEditor(activeEditorControl)) {\n\t\t\tthis.modelChangeListener.dispose();\n\t\t\tthis.modelChangeListener =\n\t\t\t\tactiveEditorControl.onDidChangeModelLanguage(() =>\n\t\t\t\t\tthis.setMode(),\n\t\t\t\t);\n\t\t\tif (this.model && activeEditorControl.hasModel()) {\n\t\t\t\tthis.model.setLanguage(\n\t\t\t\t\tactiveEditorControl.getModel().getLanguageId(),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onDidStyleChange(): void {\n\t\tif (!this.isVisible()) {\n\t\t\tthis.styleChangedWhenInvisible = true;\n\t\t\treturn;\n\t\t}\n\t\tif (this.styleElement) {\n\t\t\tthis.replInput.updateOptions({\n\t\t\t\tfontSize: this.replOptions.replConfiguration.fontSize,\n\t\t\t\tlineHeight: this.replOptions.replConfiguration.lineHeight,\n\t\t\t\tfontFamily:\n\t\t\t\t\tthis.replOptions.replConfiguration.fontFamily === \"default\"\n\t\t\t\t\t\t? EDITOR_FONT_DEFAULTS.fontFamily\n\t\t\t\t\t\t: this.replOptions.replConfiguration.fontFamily,\n\t\t\t});\n\n\t\t\tconst replInputLineHeight = this.replInput.getOption(\n\t\t\t\tEditorOption.lineHeight,\n\t\t\t);\n\n\t\t\t// Set the font size, font family, line height and align the twistie to be centered, and input theme color\n\t\t\tthis.styleElement.textContent = `\n\t\t\t\t.repl .repl-input-wrapper .repl-input-chevron {\n\t\t\t\t\tline-height: ${replInputLineHeight}px\n\t\t\t\t}\n\n\t\t\t\t.repl .repl-input-wrapper .monaco-editor .lines-content {\n\t\t\t\t\tbackground-color: ${this.replOptions.replConfiguration.backgroundColor};\n\t\t\t\t}\n\t\t\t`;\n\t\t\tconst cssFontFamily =\n\t\t\t\tthis.replOptions.replConfiguration.fontFamily === \"default\"\n\t\t\t\t\t? \"var(--monaco-monospace-font)\"\n\t\t\t\t\t: this.replOptions.replConfiguration.fontFamily;\n\t\t\tthis.container.style.setProperty(\n\t\t\t\t`--vscode-repl-font-family`,\n\t\t\t\tcssFontFamily,\n\t\t\t);\n\t\t\tthis.container.style.setProperty(\n\t\t\t\t`--vscode-repl-font-size`,\n\t\t\t\t`${this.replOptions.replConfiguration.fontSize}px`,\n\t\t\t);\n\t\t\tthis.container.style.setProperty(\n\t\t\t\t`--vscode-repl-font-size-for-twistie`,\n\t\t\t\t`${this.replOptions.replConfiguration.fontSizeForTwistie}px`,\n\t\t\t);\n\t\t\tthis.container.style.setProperty(\n\t\t\t\t`--vscode-repl-line-height`,\n\t\t\t\tthis.replOptions.replConfiguration.cssLineHeight,\n\t\t\t);\n\n\t\t\tthis.tree?.rerender();\n\n\t\t\tif (this.bodyContentDimension) {\n\t\t\t\tthis.layoutBodyContent(\n\t\t\t\t\tthis.bodyContentDimension.height,\n\t\t\t\t\tthis.bodyContentDimension.width,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate navigateHistory(previous: boolean): void {\n\t\tconst historyInput =\n\t\t\t(previous\n\t\t\t\t? (this.history.previous() ?? this.history.first())\n\t\t\t\t: this.history.next()) ?? \"\";\n\t\tthis.replInput.setValue(historyInput);\n\t\taria.status(historyInput);\n\t\t// always leave cursor at the end.\n\t\tthis.replInput.setPosition({\n\t\t\tlineNumber: 1,\n\t\t\tcolumn: historyInput.length + 1,\n\t\t});\n\t\tthis.setHistoryNavigationEnablement(true);\n\t}\n\n\tasync selectSession(session?: IDebugSession): Promise<void> {\n\t\tconst treeInput = this.tree?.getInput();\n\t\tif (!session) {\n\t\t\tconst focusedSession =\n\t\t\t\tthis.debugService.getViewModel().focusedSession;\n\t\t\t// If there is a focusedSession focus on that one, otherwise just show any other not ignored session\n\t\t\tif (focusedSession) {\n\t\t\t\tsession = focusedSession;\n\t\t\t} else if (!treeInput || sessionsToIgnore.has(treeInput)) {\n\t\t\t\tsession = this.debugService\n\t\t\t\t\t.getModel()\n\t\t\t\t\t.getSessions(true)\n\t\t\t\t\t.find((s) => !sessionsToIgnore.has(s));\n\t\t\t}\n\t\t}\n\t\tif (session) {\n\t\t\tthis.replElementsChangeListener?.dispose();\n\t\t\tthis.replElementsChangeListener = session.onDidChangeReplElements(\n\t\t\t\t() => {\n\t\t\t\t\tthis.refreshReplElements(\n\t\t\t\t\t\tsession.getReplElements().length === 0,\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tif (this.tree && treeInput !== session) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.tree.setInput(session);\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Ignore error because this may happen multiple times while refreshing,\n\t\t\t\t\t// then changing the root may fail. Log to help with debugging if needed.\n\t\t\t\t\tthis.logService.error(err);\n\t\t\t\t}\n\t\t\t\trevealLastElement(this.tree);\n\t\t\t}\n\t\t}\n\n\t\tthis.replInput?.updateOptions({ readOnly: this.isReadonly });\n\t\tthis.updateInputDecoration();\n\t}\n\n\tasync clearRepl(): Promise<void> {\n\t\tconst session = this.tree?.getInput();\n\t\tif (session) {\n\t\t\tsession.removeReplExpressions();\n\t\t\tif (session.state === State.Inactive) {\n\t\t\t\t// Ignore inactive sessions which got cleared - so they are not shown any more\n\t\t\t\tsessionsToIgnore.add(session);\n\t\t\t\tawait this.selectSession();\n\t\t\t\tthis.multiSessionRepl.set(this.isMultiSessionView);\n\t\t\t}\n\t\t}\n\t\tthis.replInput.focus();\n\t}\n\n\tacceptReplInput(): void {\n\t\tconst session = this.tree?.getInput();\n\t\tif (session && !this.isReadonly) {\n\t\t\tsession.addReplExpression(\n\t\t\t\tthis.debugService.getViewModel().focusedStackFrame,\n\t\t\t\tthis.replInput.getValue(),\n\t\t\t);\n\t\t\trevealLastElement(this.tree!);\n\t\t\tthis.history.add(this.replInput.getValue());\n\t\t\tthis.replInput.setValue(\"\");\n\t\t\tconst shouldRelayout = this.replInputLineCount > 1;\n\t\t\tthis.replInputLineCount = 1;\n\t\t\tif (shouldRelayout && this.bodyContentDimension) {\n\t\t\t\t// Trigger a layout to shrink a potential multi line input\n\t\t\t\tthis.layoutBodyContent(\n\t\t\t\t\tthis.bodyContentDimension.height,\n\t\t\t\t\tthis.bodyContentDimension.width,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tsendReplInput(input: string): void {\n\t\tconst session = this.tree?.getInput();\n\t\tif (session && !this.isReadonly) {\n\t\t\tsession.addReplExpression(\n\t\t\t\tthis.debugService.getViewModel().focusedStackFrame,\n\t\t\t\tinput,\n\t\t\t);\n\t\t\trevealLastElement(this.tree!);\n\t\t\tthis.history.add(input);\n\t\t}\n\t}\n\n\tgetVisibleContent(): string {\n\t\tlet text = \"\";\n\t\tif (this.model && this.tree) {\n\t\t\tconst lineDelimiter = this.textResourcePropertiesService.getEOL(\n\t\t\t\tthis.model.uri,\n\t\t\t);\n\t\t\tconst traverseAndAppend = (\n\t\t\t\tnode: ITreeNode<IReplElement, FuzzyScore>,\n\t\t\t) => {\n\t\t\t\tnode.children.forEach((child) => {\n\t\t\t\t\tif (child.visible) {\n\t\t\t\t\t\ttext +=\n\t\t\t\t\t\t\tchild.element.toString().trimEnd() + lineDelimiter;\n\t\t\t\t\t\tif (!child.collapsed && child.children.length) {\n\t\t\t\t\t\t\ttraverseAndAppend(child);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t\ttraverseAndAppend(this.tree.getNode());\n\t\t}\n\n\t\treturn removeAnsiEscapeCodes(text);\n\t}\n\n\tprotected layoutBodyContent(height: number, width: number): void {\n\t\tthis.bodyContentDimension = new dom.Dimension(width, height);\n\t\tconst replInputHeight = Math.min(\n\t\t\tthis.replInput.getContentHeight(),\n\t\t\theight,\n\t\t);\n\t\tif (this.tree) {\n\t\t\tconst lastElementVisible =\n\t\t\t\tthis.tree.scrollTop + this.tree.renderHeight >=\n\t\t\t\tthis.tree.scrollHeight;\n\t\t\tconst treeHeight = height - replInputHeight;\n\t\t\tthis.tree.getHTMLElement().style.height = `${treeHeight}px`;\n\t\t\tthis.tree.layout(treeHeight, width);\n\t\t\tif (lastElementVisible) {\n\t\t\t\trevealLastElement(this.tree);\n\t\t\t}\n\t\t}\n\t\tthis.replInputContainer.style.height = `${replInputHeight}px`;\n\n\t\tthis.replInput.layout({ width: width - 30, height: replInputHeight });\n\t}\n\n\tcollapseAll(): void {\n\t\tthis.tree?.collapseAll();\n\t}\n\n\tgetDebugSession(): IDebugSession | undefined {\n\t\treturn this.tree?.getInput();\n\t}\n\n\tgetReplInput(): CodeEditorWidget {\n\t\treturn this.replInput;\n\t}\n\n\tgetReplDataSource():\n\t\t| IAsyncDataSource<IDebugSession, IReplElement>\n\t\t| undefined {\n\t\treturn this.replDataSource;\n\t}\n\n\tgetFocusedElement(): IReplElement | undefined {\n\t\treturn this.tree?.getFocus()?.[0];\n\t}\n\n\tfocusTree(): void {\n\t\tthis.tree?.domFocus();\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\t\tsetTimeout(() => this.replInput.focus(), 0);\n\t}\n\n\toverride getActionViewItem(action: IAction): IActionViewItem | undefined {\n\t\tif (action.id === selectReplCommandId) {\n\t\t\tconst session =\n\t\t\t\t(this.tree ? this.tree.getInput() : undefined) ??\n\t\t\t\tthis.debugService.getViewModel().focusedSession;\n\t\t\treturn this.instantiationService.createInstance(\n\t\t\t\tSelectReplActionViewItem,\n\t\t\t\taction,\n\t\t\t\tsession,\n\t\t\t);\n\t\t}\n\n\t\treturn super.getActionViewItem(action);\n\t}\n\n\tprivate get isMultiSessionView(): boolean {\n\t\treturn (\n\t\t\tthis.debugService\n\t\t\t\t.getModel()\n\t\t\t\t.getSessions(true)\n\t\t\t\t.filter((s) => s.hasSeparateRepl() && !sessionsToIgnore.has(s))\n\t\t\t\t.length > 1\n\t\t);\n\t}\n\n\t// --- Cached locals\n\n\t@memoize\n\tprivate get refreshScheduler(): RunOnceScheduler {\n\t\tconst autoExpanded = new Set<string>();\n\t\treturn new RunOnceScheduler(async () => {\n\t\t\tif (!this.tree) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this.tree.getInput()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait this.tree.updateChildren(undefined, true, false, {\n\t\t\t\tdiffIdentityProvider: identityProvider,\n\t\t\t});\n\n\t\t\tconst session = this.tree.getInput();\n\t\t\tif (session) {\n\t\t\t\t// Automatically expand repl group elements when specified\n\t\t\t\tconst autoExpandElements = async (elements: IReplElement[]) => {\n\t\t\t\t\tfor (const element of elements) {\n\t\t\t\t\t\tif (element instanceof ReplGroup) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\telement.autoExpand &&\n\t\t\t\t\t\t\t\t!autoExpanded.has(element.getId())\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tautoExpanded.add(element.getId());\n\t\t\t\t\t\t\t\tawait this.tree!.expand(element);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!this.tree!.isCollapsed(element)) {\n\t\t\t\t\t\t\t\t// Repl groups can have children which are repl groups thus we might need to expand those as well\n\t\t\t\t\t\t\t\tawait autoExpandElements(element.getChildren());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tawait autoExpandElements(session.getReplElements());\n\t\t\t}\n\t\t\t// Repl elements count changed, need to update filter stats on the badge\n\t\t\tconst { total, filtered } = this.getFilterStats();\n\t\t\tthis.filterWidget.updateBadge(\n\t\t\t\ttotal === filtered || total === 0\n\t\t\t\t\t? undefined\n\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\"showing filtered repl lines\",\n\t\t\t\t\t\t\t\"Showing {0} of {1}\",\n\t\t\t\t\t\t\tfiltered,\n\t\t\t\t\t\t\ttotal,\n\t\t\t\t\t\t),\n\t\t\t);\n\t\t}, Repl.REFRESH_DELAY);\n\t}\n\n\t// --- Creation\n\n\toverride render(): void {\n\t\tsuper.render();\n\t\tthis._register(\n\t\t\tregisterNavigableContainer({\n\t\t\t\tname: \"repl\",\n\t\t\t\tfocusNotifiers: [this, this.filterWidget],\n\t\t\t\tfocusNextWidget: () => {\n\t\t\t\t\tconst element = this.tree?.getHTMLElement();\n\t\t\t\t\tif (this.filterWidget.hasFocus()) {\n\t\t\t\t\t\tthis.tree?.domFocus();\n\t\t\t\t\t} else if (element && dom.isActiveElement(element)) {\n\t\t\t\t\t\tthis.focus();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfocusPreviousWidget: () => {\n\t\t\t\t\tconst element = this.tree?.getHTMLElement();\n\t\t\t\t\tif (this.replInput.hasTextFocus()) {\n\t\t\t\t\t\tthis.tree?.domFocus();\n\t\t\t\t\t} else if (element && dom.isActiveElement(element)) {\n\t\t\t\t\t\tthis.focusFilter();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\t}\n\n\tprotected override renderBody(parent: HTMLElement): void {\n\t\tsuper.renderBody(parent);\n\t\tthis.container = dom.append(parent, $(\".repl\"));\n\t\tthis.treeContainer = dom.append(\n\t\t\tthis.container,\n\t\t\t$(`.repl-tree.${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`),\n\t\t);\n\t\tthis.createReplInput(this.container);\n\t\tthis.createReplTree();\n\t}\n\n\tprivate createReplTree(): void {\n\t\tthis.replDelegate = new ReplDelegate(\n\t\t\tthis.configurationService,\n\t\t\tthis.replOptions,\n\t\t);\n\t\tconst wordWrap =\n\t\t\tthis.configurationService.getValue<IDebugConfiguration>(\"debug\")\n\t\t\t\t.console.wordWrap;\n\t\tthis.treeContainer.classList.toggle(\"word-wrap\", wordWrap);\n\t\tconst expressionRenderer = this.instantiationService.createInstance(\n\t\t\tDebugExpressionRenderer,\n\t\t);\n\t\tthis.replDataSource = new ReplDataSource();\n\n\t\tconst tree = (this.tree = <\n\t\t\tWorkbenchAsyncDataTree<IDebugSession, IReplElement, FuzzyScore>\n\t\t>this.instantiationService.createInstance(\n\t\t\tWorkbenchAsyncDataTree,\n\t\t\t\"DebugRepl\",\n\t\t\tthis.treeContainer,\n\t\t\tthis.replDelegate,\n\t\t\t[\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tReplVariablesRenderer,\n\t\t\t\t\texpressionRenderer,\n\t\t\t\t),\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tReplOutputElementRenderer,\n\t\t\t\t\texpressionRenderer,\n\t\t\t\t),\n\t\t\t\tnew ReplEvaluationInputsRenderer(),\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tReplGroupRenderer,\n\t\t\t\t\texpressionRenderer,\n\t\t\t\t),\n\t\t\t\tnew ReplEvaluationResultsRenderer(expressionRenderer),\n\t\t\t\tnew ReplRawObjectsRenderer(expressionRenderer),\n\t\t\t],\n\t\t\tthis.replDataSource,\n\t\t\t{\n\t\t\t\tfilter: this.filter,\n\t\t\t\taccessibilityProvider: new ReplAccessibilityProvider(),\n\t\t\t\tidentityProvider,\n\t\t\t\tmouseSupport: false,\n\t\t\t\tfindWidgetEnabled: true,\n\t\t\t\tkeyboardNavigationLabelProvider: {\n\t\t\t\t\tgetKeyboardNavigationLabel: (e: IReplElement) =>\n\t\t\t\t\t\te.toString(true),\n\t\t\t\t},\n\t\t\t\thorizontalScrolling: !wordWrap,\n\t\t\t\tsetRowLineHeight: false,\n\t\t\t\tsupportDynamicHeights: wordWrap,\n\t\t\t\toverrideStyles:\n\t\t\t\t\tthis.getLocationBasedColors().listOverrideStyles,\n\t\t\t},\n\t\t));\n\n\t\tthis._register(\n\t\t\ttree.onDidChangeContentHeight(() => {\n\t\t\t\tif (tree.scrollHeight !== this.previousTreeScrollHeight) {\n\t\t\t\t\t// Due to rounding, the scrollTop + renderHeight will not exactly match the scrollHeight.\n\t\t\t\t\t// Consider the tree to be scrolled all the way down if it is within 2px of the bottom.\n\t\t\t\t\tconst lastElementWasVisible =\n\t\t\t\t\t\ttree.scrollTop + tree.renderHeight >=\n\t\t\t\t\t\tthis.previousTreeScrollHeight - 2;\n\t\t\t\t\tif (lastElementWasVisible) {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t// Can't set scrollTop during this event listener, the list might overwrite the change\n\t\t\t\t\t\t\trevealLastElement(tree);\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.previousTreeScrollHeight = tree.scrollHeight;\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(tree.onContextMenu((e) => this.onContextMenu(e)));\n\t\tthis._register(\n\t\t\ttree.onDidChangeFindOpenState((open) => (this.findIsOpen = open)),\n\t\t);\n\n\t\tlet lastSelectedString: string;\n\t\tthis._register(\n\t\t\ttree.onMouseClick(() => {\n\t\t\t\tif (this.findIsOpen) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst selection = dom\n\t\t\t\t\t.getWindow(this.treeContainer)\n\t\t\t\t\t.getSelection();\n\t\t\t\tif (\n\t\t\t\t\t!selection ||\n\t\t\t\t\tselection.type !== \"Range\" ||\n\t\t\t\t\tlastSelectedString === selection.toString()\n\t\t\t\t) {\n\t\t\t\t\t// only focus the input if the user is not currently selecting and find isn't open.\n\t\t\t\t\tthis.replInput.focus();\n\t\t\t\t}\n\t\t\t\tlastSelectedString = selection ? selection.toString() : \"\";\n\t\t\t}),\n\t\t);\n\t\t// Make sure to select the session if debugging is already active\n\t\tthis.selectSession();\n\t\tthis.styleElement = dom.createStyleSheet(this.container);\n\t\tthis.onDidStyleChange();\n\t}\n\n\tprivate createReplInput(container: HTMLElement): void {\n\t\tthis.replInputContainer = dom.append(\n\t\t\tcontainer,\n\t\t\t$(\".repl-input-wrapper\"),\n\t\t);\n\t\tdom.append(\n\t\t\tthis.replInputContainer,\n\t\t\t$(\n\t\t\t\t\".repl-input-chevron\" +\n\t\t\t\t\tThemeIcon.asCSSSelector(debugConsoleEvaluationPrompt),\n\t\t\t),\n\t\t);\n\n\t\tconst {\n\t\t\thistoryNavigationBackwardsEnablement,\n\t\t\thistoryNavigationForwardsEnablement,\n\t\t} = this._register(\n\t\t\tregisterAndCreateHistoryNavigationContext(\n\t\t\t\tthis.scopedContextKeyService,\n\t\t\t\tthis,\n\t\t\t),\n\t\t);\n\t\tthis.setHistoryNavigationEnablement = (enabled) => {\n\t\t\thistoryNavigationBackwardsEnablement.set(enabled);\n\t\t\thistoryNavigationForwardsEnablement.set(enabled);\n\t\t};\n\t\tCONTEXT_IN_DEBUG_REPL.bindTo(this.scopedContextKeyService).set(true);\n\n\t\tthis.scopedInstantiationService = this._register(\n\t\t\tthis.instantiationService.createChild(\n\t\t\t\tnew ServiceCollection([\n\t\t\t\t\tIContextKeyService,\n\t\t\t\t\tthis.scopedContextKeyService,\n\t\t\t\t]),\n\t\t\t),\n\t\t);\n\t\tconst options = getSimpleEditorOptions(this.configurationService);\n\t\toptions.readOnly = true;\n\t\toptions.suggest = { showStatusBar: true };\n\t\tconst config =\n\t\t\tthis.configurationService.getValue<IDebugConfiguration>(\"debug\");\n\t\toptions.acceptSuggestionOnEnter =\n\t\t\tconfig.console.acceptSuggestionOnEnter === \"on\" ? \"on\" : \"off\";\n\t\toptions.ariaLabel = this.getAriaLabel();\n\n\t\tthis.replInput = this.scopedInstantiationService.createInstance(\n\t\t\tCodeEditorWidget,\n\t\t\tthis.replInputContainer,\n\t\t\toptions,\n\t\t\tgetSimpleCodeEditorWidgetOptions(),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.replInput.onDidChangeModelContent(() => {\n\t\t\t\tconst model = this.replInput.getModel();\n\t\t\t\tthis.setHistoryNavigationEnablement(\n\t\t\t\t\t!!model && model.getValue() === \"\",\n\t\t\t\t);\n\t\t\t\tconst lineCount = model\n\t\t\t\t\t? Math.min(10, model.getLineCount())\n\t\t\t\t\t: 1;\n\t\t\t\tif (lineCount !== this.replInputLineCount) {\n\t\t\t\t\tthis.replInputLineCount = lineCount;\n\t\t\t\t\tif (this.bodyContentDimension) {\n\t\t\t\t\t\tthis.layoutBodyContent(\n\t\t\t\t\t\t\tthis.bodyContentDimension.height,\n\t\t\t\t\t\t\tthis.bodyContentDimension.width,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\t// We add the input decoration only when the focus is in the input #61126\n\t\tthis._register(\n\t\t\tthis.replInput.onDidFocusEditorText(() =>\n\t\t\t\tthis.updateInputDecoration(),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.replInput.onDidBlurEditorText(() =>\n\t\t\t\tthis.updateInputDecoration(),\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tdom.addStandardDisposableListener(\n\t\t\t\tthis.replInputContainer,\n\t\t\t\tdom.EventType.FOCUS,\n\t\t\t\t() => this.replInputContainer.classList.add(\"synthetic-focus\"),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tdom.addStandardDisposableListener(\n\t\t\t\tthis.replInputContainer,\n\t\t\t\tdom.EventType.BLUR,\n\t\t\t\t() =>\n\t\t\t\t\tthis.replInputContainer.classList.remove(\"synthetic-focus\"),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate getAriaLabel(): string {\n\t\tlet ariaLabel = localize(\"debugConsole\", \"Debug Console\");\n\t\tif (\n\t\t\t!this.configurationService.getValue(\n\t\t\t\tAccessibilityVerbositySettingId.Debug,\n\t\t\t)\n\t\t) {\n\t\t\treturn ariaLabel;\n\t\t}\n\t\tconst keybinding = this.keybindingService\n\t\t\t.lookupKeybinding(AccessibilityCommandId.OpenAccessibilityHelp)\n\t\t\t?.getAriaLabel();\n\t\tif (keybinding) {\n\t\t\tariaLabel = localize(\n\t\t\t\t\"commentLabelWithKeybinding\",\n\t\t\t\t\"{0}, use ({1}) for accessibility help\",\n\t\t\t\tariaLabel,\n\t\t\t\tkeybinding,\n\t\t\t);\n\t\t} else {\n\t\t\tariaLabel = localize(\n\t\t\t\t\"commentLabelWithKeybindingNoKeybinding\",\n\t\t\t\t\"{0}, run the command Open Accessibility Help which is currently not triggerable via keybinding.\",\n\t\t\t\tariaLabel,\n\t\t\t);\n\t\t}\n\n\t\treturn ariaLabel;\n\t}\n\n\tprivate onContextMenu(e: ITreeContextMenuEvent<IReplElement>): void {\n\t\tconst actions: IAction[] = [];\n\t\tcreateAndFillInContextMenuActions(\n\t\t\tthis.menu,\n\t\t\t{ arg: e.element, shouldForwardArgs: false },\n\t\t\tactions,\n\t\t);\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => e.anchor,\n\t\t\tgetActions: () => actions,\n\t\t\tgetActionsContext: () => e.element,\n\t\t});\n\t}\n\n\t// --- Update\n\n\tprivate refreshReplElements(noDelay: boolean): void {\n\t\tif (this.tree && this.isVisible()) {\n\t\t\tif (this.refreshScheduler.isScheduled()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.refreshScheduler.schedule(noDelay ? 0 : undefined);\n\t\t}\n\t}\n\n\tprivate updateInputDecoration(): void {\n\t\tif (!this.replInput) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst decorations: IDecorationOptions[] = [];\n\t\tif (\n\t\t\tthis.isReadonly &&\n\t\t\tthis.replInput.hasTextFocus() &&\n\t\t\t!this.replInput.getValue()\n\t\t) {\n\t\t\tconst transparentForeground = resolveColorValue(\n\t\t\t\teditorForeground,\n\t\t\t\tthis.themeService.getColorTheme(),\n\t\t\t)?.transparent(0.4);\n\t\t\tdecorations.push({\n\t\t\t\trange: {\n\t\t\t\t\tstartLineNumber: 0,\n\t\t\t\t\tendLineNumber: 0,\n\t\t\t\t\tstartColumn: 0,\n\t\t\t\t\tendColumn: 1,\n\t\t\t\t},\n\t\t\t\trenderOptions: {\n\t\t\t\t\tafter: {\n\t\t\t\t\t\tcontentText: localize(\n\t\t\t\t\t\t\t\"startDebugFirst\",\n\t\t\t\t\t\t\t\"Please start a debug session to evaluate expressions\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcolor: transparentForeground\n\t\t\t\t\t\t\t? transparentForeground.toString()\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tthis.replInput.setDecorationsByType(\n\t\t\t\"repl-decoration\",\n\t\t\tDECORATION_KEY,\n\t\t\tdecorations,\n\t\t);\n\t}\n\n\toverride saveState(): void {\n\t\tconst replHistory = this.history.getHistory();\n\t\tif (replHistory.length) {\n\t\t\tthis.storageService.store(\n\t\t\t\tHISTORY_STORAGE_KEY,\n\t\t\t\tJSON.stringify(replHistory),\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\tStorageTarget.MACHINE,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.storageService.remove(\n\t\t\t\tHISTORY_STORAGE_KEY,\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t);\n\t\t}\n\t\tconst filterHistory = this.filterWidget.getHistory();\n\t\tif (filterHistory.length) {\n\t\t\tthis.storageService.store(\n\t\t\t\tFILTER_HISTORY_STORAGE_KEY,\n\t\t\t\tJSON.stringify(filterHistory),\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\tStorageTarget.MACHINE,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.storageService.remove(\n\t\t\t\tFILTER_HISTORY_STORAGE_KEY,\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t);\n\t\t}\n\t\tconst filterValue = this.filterWidget.getFilterText();\n\t\tif (filterValue) {\n\t\t\tthis.storageService.store(\n\t\t\t\tFILTER_VALUE_STORAGE_KEY,\n\t\t\t\tfilterValue,\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\tStorageTarget.MACHINE,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.storageService.remove(\n\t\t\t\tFILTER_VALUE_STORAGE_KEY,\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t);\n\t\t}\n\n\t\tsuper.saveState();\n\t}\n\n\toverride dispose(): void {\n\t\tthis.replInput?.dispose(); // Disposed before rendered? #174558\n\t\tthis.replElementsChangeListener?.dispose();\n\t\tthis.refreshScheduler.dispose();\n\t\tthis.modelChangeListener.dispose();\n\t\tsuper.dispose();\n\t}\n}\n\nclass ReplOptions extends Disposable implements IReplOptions {\n\tprivate static readonly lineHeightEm = 1.4;\n\n\tprivate readonly _onDidChange = this._register(new Emitter<void>());\n\treadonly onDidChange = this._onDidChange.event;\n\n\tprivate _replConfig!: IReplConfiguration;\n\tpublic get replConfiguration(): IReplConfiguration {\n\t\treturn this._replConfig;\n\t}\n\n\tconstructor(\n\t\tviewId: string,\n\t\tprivate readonly backgroundColorDelegate: () => string,\n\t\t@IConfigurationService\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IViewDescriptorService\n\t\tprivate readonly viewDescriptorService: IViewDescriptorService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(\n\t\t\tthis.themeService.onDidColorThemeChange((e) => this.update()),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.viewDescriptorService.onDidChangeLocation((e) => {\n\t\t\t\tif (e.views.some((v) => v.id === viewId)) {\n\t\t\t\t\tthis.update();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (\n\t\t\t\t\te.affectsConfiguration(\"debug.console.lineHeight\") ||\n\t\t\t\t\te.affectsConfiguration(\"debug.console.fontSize\") ||\n\t\t\t\t\te.affectsConfiguration(\"debug.console.fontFamily\")\n\t\t\t\t) {\n\t\t\t\t\tthis.update();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis.update();\n\t}\n\n\tprivate update() {\n\t\tconst debugConsole =\n\t\t\tthis.configurationService.getValue<IDebugConfiguration>(\n\t\t\t\t\"debug\",\n\t\t\t).console;\n\t\tthis._replConfig = {\n\t\t\tfontSize: debugConsole.fontSize,\n\t\t\tfontFamily: debugConsole.fontFamily,\n\t\t\tlineHeight: debugConsole.lineHeight\n\t\t\t\t? debugConsole.lineHeight\n\t\t\t\t: ReplOptions.lineHeightEm * debugConsole.fontSize,\n\t\t\tcssLineHeight: debugConsole.lineHeight\n\t\t\t\t? `${debugConsole.lineHeight}px`\n\t\t\t\t: `${ReplOptions.lineHeightEm}em`,\n\t\t\tbackgroundColor: this.themeService\n\t\t\t\t.getColorTheme()\n\t\t\t\t.getColor(this.backgroundColorDelegate()),\n\t\t\tfontSizeForTwistie:\n\t\t\t\t(debugConsole.fontSize * ReplOptions.lineHeightEm) / 2 - 8,\n\t\t};\n\t\tthis._onDidChange.fire();\n\t}\n}\n\n// Repl actions and commands\n\nclass AcceptReplInputAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"repl.action.acceptInput\",\n\t\t\tlabel: localize(\n\t\t\t\t{\n\t\t\t\t\tkey: \"actions.repl.acceptInput\",\n\t\t\t\t\tcomment: [\"Apply input from the debug console input box\"],\n\t\t\t\t},\n\t\t\t\t\"Debug Console: Accept Input\",\n\t\t\t),\n\t\t\talias: \"Debug Console: Accept Input\",\n\t\t\tprecondition: CONTEXT_IN_DEBUG_REPL,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyCode.Enter,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, editor: ICodeEditor): void | Promise<void> {\n\t\tSuggestController.get(editor)?.cancelSuggestWidget();\n\t\tconst repl = getReplView(accessor.get(IViewsService));\n\t\trepl?.acceptReplInput();\n\t}\n}\n\nclass FilterReplAction extends ViewAction<Repl> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tviewId: REPL_VIEW_ID,\n\t\t\tid: \"repl.action.filter\",\n\t\t\ttitle: localize(\n\t\t\t\t\"repl.action.filter\",\n\t\t\t\t\"Debug Console: Focus Filter\",\n\t\t\t),\n\t\t\tprecondition: CONTEXT_IN_DEBUG_REPL,\n\t\t\tkeybinding: [\n\t\t\t\t{\n\t\t\t\t\twhen: EditorContextKeys.textInputFocus,\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyF,\n\t\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\trunInView(accessor: ServicesAccessor, repl: Repl): void | Promise<void> {\n\t\trepl.focusFilter();\n\t}\n}\n\nclass FindReplAction extends ViewAction<Repl> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tviewId: REPL_VIEW_ID,\n\t\t\tid: \"repl.action.find\",\n\t\t\ttitle: localize(\"repl.action.find\", \"Debug Console: Focus Find\"),\n\t\t\tprecondition: CONTEXT_IN_DEBUG_REPL,\n\t\t\tkeybinding: [\n\t\t\t\t{\n\t\t\t\t\twhen: ContextKeyExpr.or(\n\t\t\t\t\t\tCONTEXT_IN_DEBUG_REPL,\n\t\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\t\"focusedView\",\n\t\t\t\t\t\t\t\"workbench.panel.repl.view\",\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyF,\n\t\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\t},\n\t\t\t],\n\t\t\ticon: Codicon.search,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\twhen: ContextKeyExpr.equals(\"view\", REPL_VIEW_ID),\n\t\t\t\t\torder: 15,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.DebugConsoleContext,\n\t\t\t\t\tgroup: \"z_commands\",\n\t\t\t\t\torder: 25,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\trunInView(accessor: ServicesAccessor, view: Repl): void | Promise<void> {\n\t\tview.openFind();\n\t}\n}\n\nclass ReplCopyAllAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"repl.action.copyAll\",\n\t\t\tlabel: localize(\"actions.repl.copyAll\", \"Debug: Console Copy All\"),\n\t\t\talias: \"Debug Console Copy All\",\n\t\t\tprecondition: CONTEXT_IN_DEBUG_REPL,\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, editor: ICodeEditor): void | Promise<void> {\n\t\tconst clipboardService = accessor.get(IClipboardService);\n\t\tconst repl = getReplView(accessor.get(IViewsService));\n\t\tif (repl) {\n\t\t\treturn clipboardService.writeText(repl.getVisibleContent());\n\t\t}\n\t}\n}\n\nregisterEditorAction(AcceptReplInputAction);\nregisterEditorAction(ReplCopyAllAction);\nregisterAction2(FilterReplAction);\nregisterAction2(FindReplAction);\n\nclass SelectReplActionViewItem extends FocusSessionActionViewItem {\n\tprotected override getSessions(): ReadonlyArray<IDebugSession> {\n\t\treturn this.debugService\n\t\t\t.getModel()\n\t\t\t.getSessions(true)\n\t\t\t.filter((s) => s.hasSeparateRepl() && !sessionsToIgnore.has(s));\n\t}\n\n\tprotected override mapFocusedSessionToSelected(\n\t\tfocusedSession: IDebugSession,\n\t): IDebugSession {\n\t\twhile (\n\t\t\tfocusedSession.parentSession &&\n\t\t\t!focusedSession.hasSeparateRepl()\n\t\t) {\n\t\t\tfocusedSession = focusedSession.parentSession;\n\t\t}\n\t\treturn focusedSession;\n\t}\n}\n\nexport function getReplView(viewsService: IViewsService): Repl | undefined {\n\treturn (\n\t\t(viewsService.getActiveViewWithId(REPL_VIEW_ID) as Repl) ?? undefined\n\t);\n}\n\nconst selectReplCommandId = \"workbench.action.debug.selectRepl\";\nregisterAction2(\n\tclass extends ViewAction<Repl> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: selectReplCommandId,\n\t\t\t\tviewId: REPL_VIEW_ID,\n\t\t\t\ttitle: localize(\"selectRepl\", \"Select Debug Console\"),\n\t\t\t\tf1: false,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tContextKeyExpr.equals(\"view\", REPL_VIEW_ID),\n\t\t\t\t\t\tCONTEXT_MULTI_SESSION_REPL,\n\t\t\t\t\t),\n\t\t\t\t\torder: 20,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tasync runInView(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tview: Repl,\n\t\t\tsession: IDebugSession | undefined,\n\t\t) {\n\t\t\tconst debugService = accessor.get(IDebugService);\n\t\t\t// If session is already the focused session we need to manualy update the tree since view model will not send a focused change event\n\t\t\tif (\n\t\t\t\tsession &&\n\t\t\t\tsession.state !== State.Inactive &&\n\t\t\t\tsession !== debugService.getViewModel().focusedSession\n\t\t\t) {\n\t\t\t\tif (session.state !== State.Stopped) {\n\t\t\t\t\t// Focus child session instead if it is stopped #112595\n\t\t\t\t\tconst stopppedChildSession = debugService\n\t\t\t\t\t\t.getModel()\n\t\t\t\t\t\t.getSessions()\n\t\t\t\t\t\t.find(\n\t\t\t\t\t\t\t(s) =>\n\t\t\t\t\t\t\t\ts.parentSession === session &&\n\t\t\t\t\t\t\t\ts.state === State.Stopped,\n\t\t\t\t\t\t);\n\t\t\t\t\tif (stopppedChildSession) {\n\t\t\t\t\t\tsession = stopppedChildSession;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tawait debugService.focusStackFrame(\n\t\t\t\t\tundefined,\n\t\t\t\t\tundefined,\n\t\t\t\t\tsession,\n\t\t\t\t\t{ explicit: true },\n\t\t\t\t);\n\t\t\t}\n\t\t\t// Need to select the session in the view since the focussed session might not have changed\n\t\t\tawait view.selectSession(session);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends ViewAction<Repl> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.debug.panel.action.clearReplAction\",\n\t\t\t\tviewId: REPL_VIEW_ID,\n\t\t\t\ttitle: localize2(\"clearRepl\", \"Clear Console\"),\n\t\t\t\tmetadata: {\n\t\t\t\t\tdescription: localize2(\n\t\t\t\t\t\t\"clearRepl.descriotion\",\n\t\t\t\t\t\t\"Clears all program output from your debug REPL\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tf1: true,\n\t\t\t\ticon: debugConsoleClearAll,\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\twhen: ContextKeyExpr.equals(\"view\", REPL_VIEW_ID),\n\t\t\t\t\t\torder: 30,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.DebugConsoleContext,\n\t\t\t\t\t\tgroup: \"z_commands\",\n\t\t\t\t\t\torder: 20,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tkeybinding: [\n\t\t\t\t\t{\n\t\t\t\t\t\tprimary: 0,\n\t\t\t\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyCode.KeyK },\n\t\t\t\t\t\t// Weight is higher than work workbench contributions so the keybinding remains\n\t\t\t\t\t\t// highest priority when chords are registered afterwards\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib + 1,\n\t\t\t\t\t\twhen: ContextKeyExpr.equals(\n\t\t\t\t\t\t\t\"focusedView\",\n\t\t\t\t\t\t\t\"workbench.panel.repl.view\",\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\trunInView(_accessor: ServicesAccessor, view: Repl): void {\n\t\t\tconst accessibilitySignalService = _accessor.get(\n\t\t\t\tIAccessibilitySignalService,\n\t\t\t);\n\t\t\tview.clearRepl();\n\t\t\taccessibilitySignalService.playSignal(AccessibilitySignal.clear);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends ViewAction<Repl> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"debug.collapseRepl\",\n\t\t\t\ttitle: localize(\"collapse\", \"Collapse All\"),\n\t\t\t\tviewId: REPL_VIEW_ID,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.DebugConsoleContext,\n\t\t\t\t\tgroup: \"z_commands\",\n\t\t\t\t\torder: 10,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\trunInView(_accessor: ServicesAccessor, view: Repl): void {\n\t\t\tview.collapseAll();\n\t\t\tview.focus();\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends ViewAction<Repl> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"debug.replPaste\",\n\t\t\t\ttitle: localize(\"paste\", \"Paste\"),\n\t\t\t\tviewId: REPL_VIEW_ID,\n\t\t\t\tprecondition: CONTEXT_DEBUG_STATE.notEqualsTo(\n\t\t\t\t\tgetStateLabel(State.Inactive),\n\t\t\t\t),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.DebugConsoleContext,\n\t\t\t\t\tgroup: \"2_cutcopypaste\",\n\t\t\t\t\torder: 30,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tasync runInView(accessor: ServicesAccessor, view: Repl): Promise<void> {\n\t\t\tconst clipboardService = accessor.get(IClipboardService);\n\t\t\tconst clipboardText = await clipboardService.readText();\n\t\t\tif (clipboardText) {\n\t\t\t\tconst replInput = view.getReplInput();\n\t\t\t\treplInput.setValue(replInput.getValue().concat(clipboardText));\n\t\t\t\tview.focus();\n\t\t\t\tconst model = replInput.getModel();\n\t\t\t\tconst lineNumber = model ? model.getLineCount() : 0;\n\t\t\t\tconst column = model?.getLineMaxColumn(lineNumber);\n\t\t\t\tif (\n\t\t\t\t\ttypeof lineNumber === \"number\" &&\n\t\t\t\t\ttypeof column === \"number\"\n\t\t\t\t) {\n\t\t\t\t\treplInput.setPosition({ lineNumber, column });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends ViewAction<Repl> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.debug.action.copyAll\",\n\t\t\t\ttitle: localize(\"copyAll\", \"Copy All\"),\n\t\t\t\tviewId: REPL_VIEW_ID,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.DebugConsoleContext,\n\t\t\t\t\tgroup: \"2_cutcopypaste\",\n\t\t\t\t\torder: 20,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tasync runInView(accessor: ServicesAccessor, view: Repl): Promise<void> {\n\t\t\tconst clipboardService = accessor.get(IClipboardService);\n\t\t\tawait clipboardService.writeText(view.getVisibleContent());\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"debug.replCopy\",\n\t\t\t\ttitle: localize(\"copy\", \"Copy\"),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.DebugConsoleContext,\n\t\t\t\t\tgroup: \"2_cutcopypaste\",\n\t\t\t\t\torder: 10,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tasync run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\telement: IReplElement,\n\t\t): Promise<void> {\n\t\t\tconst clipboardService = accessor.get(IClipboardService);\n\t\t\tconst debugService = accessor.get(IDebugService);\n\t\t\tconst nativeSelection = dom.getActiveWindow().getSelection();\n\t\t\tconst selectedText = nativeSelection?.toString();\n\t\t\tif (selectedText && selectedText.length > 0) {\n\t\t\t\treturn clipboardService.writeText(selectedText);\n\t\t\t} else if (element) {\n\t\t\t\treturn clipboardService.writeText(\n\t\t\t\t\t(await this.tryEvaluateAndCopy(debugService, element)) ||\n\t\t\t\t\t\telement.toString(),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tprivate async tryEvaluateAndCopy(\n\t\t\tdebugService: IDebugService,\n\t\t\telement: IReplElement,\n\t\t): Promise<string | undefined> {\n\t\t\t// todo: we should expand DAP to allow copying more types here (#187784)\n\t\t\tif (!(element instanceof ReplEvaluationResult)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst stackFrame = debugService.getViewModel().focusedStackFrame;\n\t\t\tconst session = debugService.getViewModel().focusedSession;\n\t\t\tif (\n\t\t\t\t!stackFrame ||\n\t\t\t\t!session ||\n\t\t\t\t!session.capabilities.supportsClipboardContext\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst evaluation = await session.evaluate(\n\t\t\t\t\telement.originalExpression,\n\t\t\t\t\tstackFrame.frameId,\n\t\t\t\t\t\"clipboard\",\n\t\t\t\t);\n\t\t\t\treturn evaluation?.body.result;\n\t\t\t} catch (e) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t},\n);\n"],
  "mappings": "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",
  "names": []
}
