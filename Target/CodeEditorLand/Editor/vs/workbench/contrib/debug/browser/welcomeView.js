var U=Object.defineProperty;var F=Object.getOwnPropertyDescriptor;var v=(c,i,a,r)=>{for(var n=r>1?void 0:r?F(i,a):i,u=c.length-1,m;u>=0;u--)(m=c[u])&&(n=(r?m(i,a,n):m(n))||n);return r&&n&&U(i,a,n),n},e=(c,i)=>(a,r)=>i(a,r,c);import"../../../browser/parts/views/viewsViewlet.js";import{IThemeService as P}from"../../../../platform/theme/common/themeService.js";import{IKeybindingService as $}from"../../../../platform/keybinding/common/keybinding.js";import{IContextMenuService as X}from"../../../../platform/contextview/browser/contextView.js";import{IConfigurationService as j}from"../../../../platform/configuration/common/configuration.js";import{IContextKeyService as H,RawContextKey as w,ContextKeyExpr as h}from"../../../../platform/contextkey/common/contextkey.js";import{localize as d,localize2 as q}from"../../../../nls.js";import{IDebugService as J,CONTEXT_DEBUGGERS_AVAILABLE as I,CONTEXT_DEBUG_EXTENSION_AVAILABLE as Q}from"../common/debug.js";import{IEditorService as Y}from"../../../services/editor/common/editorService.js";import{ViewPane as Z}from"../../../browser/parts/views/viewPane.js";import{IInstantiationService as ee}from"../../../../platform/instantiation/common/instantiation.js";import{IViewDescriptorService as te,Extensions as oe,ViewContentGroups as g}from"../../../common/views.js";import{Registry as ne}from"../../../../platform/registry/common/platform.js";import{IOpenerService as re}from"../../../../platform/opener/common/opener.js";import{WorkbenchStateContext as y}from"../../../common/contextkeys.js";import{OpenFolderAction as ie,OpenFileAction as ae,OpenFileFolderAction as T}from"../../../browser/actions/workspaceActions.js";import{isMacintosh as A,isWeb as x}from"../../../../base/common/platform.js";import{isCodeEditor as _,isDiffEditor as L}from"../../../../editor/browser/editorBrowser.js";import{IStorageService as de,StorageScope as R,StorageTarget as ge}from"../../../../platform/storage/common/storage.js";import{ITelemetryService as se}from"../../../../platform/telemetry/common/telemetry.js";import{DisposableStore as ce}from"../../../../base/common/lifecycle.js";import{SELECT_AND_START_ID as ue,DEBUG_CONFIGURE_COMMAND_ID as me,DEBUG_START_COMMAND_ID as O}from"./debugCommands.js";import"../../../../platform/action/common/action.js";import{IHoverService as le}from"../../../../platform/hover/browser/hover.js";const f="debugStartLanguage",Ie=new w(f,void 0),V=new w("debuggerInterestedInActiveEditor",!1);let o=class extends Z{constructor(a,r,n,u,m,b,pe,M,K,G,k,D,B,W){super(a,n,u,m,b,G,K,k,r,B,W);this.debugService=pe;this.editorService=M;this.debugStartLanguageContext=Ie.bindTo(b),this.debuggerInterestedContext=V.bindTo(b);const z=D.get(f,R.WORKSPACE);this.debugStartLanguageContext.set(z);const l=()=>{let t=this.editorService.activeTextEditorControl;if(L(t)&&(t=t.getModifiedEditor()),_(t)){const E=t.getModel(),p=E?E.getLanguageId():void 0;if(p&&this.debugService.getAdapterManager().someDebuggerInterestedInLanguage(p)){this.debugStartLanguageContext.set(p),this.debuggerInterestedContext.set(!0),D.store(f,p,R.WORKSPACE,ge.MACHINE);return}}this.debuggerInterestedContext.set(!1)},S=new ce;this._register(S),this._register(M.onDidActiveEditorChange(()=>{S.clear();let t=this.editorService.activeTextEditorControl;L(t)&&(t=t.getModifiedEditor()),_(t)&&S.add(t.onDidChangeModelLanguage(l)),l()})),this._register(this.debugService.getAdapterManager().onDidRegisterDebugger(l)),this._register(this.onDidChangeBodyVisibility(t=>{t&&l()})),l();const C=this.keybindingService.lookupKeybinding(O);N=C?` (${C.getLabel()})`:""}static ID="workbench.debug.welcome";static LABEL=q("run","Run");debugStartLanguageContext;debuggerInterestedContext;shouldShowWelcome(){return!0}};o=v([e(1,P),e(2,$),e(3,X),e(4,j),e(5,H),e(6,J),e(7,Y),e(8,ee),e(9,te),e(10,re),e(11,de),e(12,se),e(13,le)],o);const s=ne.as(oe.ViewsRegistry);s.registerViewWelcomeContent(o.ID,{content:d({key:"openAFileWhichCanBeDebugged",comment:['Please do not translate the word "command", it is part of our internal syntax which must not change','{Locked="](command:{0})"}']},"[Open a file](command:{0}) which can be debugged or run.",A&&!x?T.ID:ae.ID),when:h.and(I,V.toNegated()),group:g.Open});let N="";s.registerViewWelcomeContent(o.ID,{content:`[${d("runAndDebugAction","Run and Debug")}${N}](command:${O})`,when:I,group:g.Debug,order:1}),s.registerViewWelcomeContent(o.ID,{content:`[${d("detectThenRunAndDebug","Show all automatic debug configurations")}](command:${ue}).`,when:I,group:g.Debug,order:10}),s.registerViewWelcomeContent(o.ID,{content:d({key:"customizeRunAndDebug",comment:['Please do not translate the word "command", it is part of our internal syntax which must not change','{Locked="](command:{0})"}']},"To customize Run and Debug [create a launch.json file](command:{0}).",me),when:h.and(I,y.notEqualsTo("empty")),group:g.Debug}),s.registerViewWelcomeContent(o.ID,{content:d({key:"customizeRunAndDebugOpenFolder",comment:['Please do not translate the word "command", it is part of our internal syntax which must not change','Please do not translate "launch.json", it is the specific configuration file name','{Locked="](command:{0})"}']},"To customize Run and Debug, [open a folder](command:{0}) and create a launch.json file.",A&&!x?T.ID:ie.ID),when:h.and(I,y.isEqualTo("empty")),group:g.Debug}),s.registerViewWelcomeContent(o.ID,{content:d("allDebuggersDisabled","All debug extensions are disabled. Enable a debug extension or install a new one from the Marketplace."),when:Q.toNegated(),group:g.Debug});export{o as WelcomeView};
