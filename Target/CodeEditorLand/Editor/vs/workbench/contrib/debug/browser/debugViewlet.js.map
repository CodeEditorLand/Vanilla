{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/debugViewlet.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IActionViewItem } from \"../../../../base/browser/ui/actionbar/actionbar.js\";\nimport type { IAction } from \"../../../../base/common/actions.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n\tdispose,\n} from \"../../../../base/common/lifecycle.js\";\nimport \"./media/debugViewlet.css\";\nimport type { IBaseActionViewItemOptions } from \"../../../../base/browser/ui/actionbar/actionViewItems.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { createActionViewItem } from \"../../../../platform/actions/browser/menuEntryActionViewItem.js\";\nimport {\n\tAction2,\n\tMenuId,\n\ttype MenuItemAction,\n\tMenuRegistry,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tContextKeyExpr,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tIContextMenuService,\n\tIContextViewService,\n} from \"../../../../platform/contextview/browser/contextView.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IProgressService } from \"../../../../platform/progress/common/progress.js\";\nimport { IQuickInputService } from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { IStorageService } from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport { IWorkspaceContextService } from \"../../../../platform/workspace/common/workspace.js\";\nimport type { ViewPane } from \"../../../browser/parts/views/viewPane.js\";\nimport {\n\tViewPaneContainer,\n\tViewsSubMenu,\n} from \"../../../browser/parts/views/viewPaneContainer.js\";\nimport { WorkbenchStateContext } from \"../../../common/contextkeys.js\";\nimport { IViewDescriptorService } from \"../../../common/views.js\";\nimport { IExtensionService } from \"../../../services/extensions/common/extensions.js\";\nimport { IWorkbenchLayoutService } from \"../../../services/layout/browser/layoutService.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport {\n\tBREAKPOINTS_VIEW_ID,\n\tCONTEXT_DEBUGGERS_AVAILABLE,\n\tCONTEXT_DEBUG_STATE,\n\tCONTEXT_DEBUG_UX,\n\tCONTEXT_DEBUG_UX_KEY,\n\tIDebugService,\n\ttype ILaunch,\n\tREPL_VIEW_ID,\n\tState,\n\tVIEWLET_ID,\n\tgetStateLabel,\n} from \"../common/debug.js\";\nimport {\n\tFocusSessionActionViewItem,\n\tStartDebugActionViewItem,\n} from \"./debugActionViewItems.js\";\nimport {\n\tDEBUG_CONFIGURE_COMMAND_ID,\n\tDEBUG_CONFIGURE_LABEL,\n\tDEBUG_START_COMMAND_ID,\n\tDEBUG_START_LABEL,\n\tDISCONNECT_ID,\n\tFOCUS_SESSION_ID,\n\tSELECT_AND_START_ID,\n\tSTOP_ID,\n} from \"./debugCommands.js\";\nimport { debugConfigure } from \"./debugIcons.js\";\nimport { createDisconnectMenuItemAction } from \"./debugToolBar.js\";\nimport { WelcomeView } from \"./welcomeView.js\";\n\nexport class DebugViewPaneContainer extends ViewPaneContainer {\n\tprivate startDebugActionViewItem: StartDebugActionViewItem | undefined;\n\tprivate progressResolve: (() => void) | undefined;\n\tprivate breakpointView: ViewPane | undefined;\n\tprivate paneListeners = new Map<string, IDisposable>();\n\n\tprivate readonly stopActionViewItemDisposables = this._register(\n\t\tnew DisposableStore(),\n\t);\n\n\tconstructor(\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IProgressService private readonly progressService: IProgressService,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextViewService\n\t\tprivate readonly contextViewService: IContextViewService,\n\t\t@IContextKeyService\n\t\tprivate readonly contextKeyService: IContextKeyService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t) {\n\t\tsuper(\n\t\t\tVIEWLET_ID,\n\t\t\t{ mergeViewWithContainerWhenSingleView: true },\n\t\t\tinstantiationService,\n\t\t\tconfigurationService,\n\t\t\tlayoutService,\n\t\t\tcontextMenuService,\n\t\t\ttelemetryService,\n\t\t\textensionService,\n\t\t\tthemeService,\n\t\t\tstorageService,\n\t\t\tcontextService,\n\t\t\tviewDescriptorService,\n\t\t);\n\n\t\t// When there are potential updates to the docked debug toolbar we need to update it\n\t\tthis._register(\n\t\t\tthis.debugService.onDidChangeState((state) =>\n\t\t\t\tthis.onDebugServiceStateChange(state),\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.contextKeyService.onDidChangeContext((e) => {\n\t\t\t\tif (\n\t\t\t\t\te.affectsSome(\n\t\t\t\t\t\tnew Set([CONTEXT_DEBUG_UX_KEY, \"inDebugMode\"]),\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tthis.updateTitleArea();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.contextService.onDidChangeWorkbenchState(() =>\n\t\t\t\tthis.updateTitleArea(),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (\n\t\t\t\t\te.affectsConfiguration(\"debug.toolBarLocation\") ||\n\t\t\t\t\te.affectsConfiguration(\"debug.hideLauncherWhileDebugging\")\n\t\t\t\t) {\n\t\t\t\t\tthis.updateTitleArea();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\toverride create(parent: HTMLElement): void {\n\t\tsuper.create(parent);\n\t\tparent.classList.add(\"debug-viewlet\");\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\n\t\tif (this.startDebugActionViewItem) {\n\t\t\tthis.startDebugActionViewItem.focus();\n\t\t} else {\n\t\t\tthis.focusView(WelcomeView.ID);\n\t\t}\n\t}\n\n\toverride getActionViewItem(\n\t\taction: IAction,\n\t\toptions: IBaseActionViewItemOptions,\n\t): IActionViewItem | undefined {\n\t\tif (action.id === DEBUG_START_COMMAND_ID) {\n\t\t\tthis.startDebugActionViewItem =\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tStartDebugActionViewItem,\n\t\t\t\t\tnull,\n\t\t\t\t\taction,\n\t\t\t\t\toptions,\n\t\t\t\t);\n\t\t\treturn this.startDebugActionViewItem;\n\t\t}\n\t\tif (action.id === FOCUS_SESSION_ID) {\n\t\t\treturn new FocusSessionActionViewItem(\n\t\t\t\taction,\n\t\t\t\tundefined,\n\t\t\t\tthis.debugService,\n\t\t\t\tthis.contextViewService,\n\t\t\t\tthis.configurationService,\n\t\t\t);\n\t\t}\n\n\t\tif (action.id === STOP_ID || action.id === DISCONNECT_ID) {\n\t\t\tthis.stopActionViewItemDisposables.clear();\n\t\t\tconst item = this.instantiationService.invokeFunction((accessor) =>\n\t\t\t\tcreateDisconnectMenuItemAction(\n\t\t\t\t\taction as MenuItemAction,\n\t\t\t\t\tthis.stopActionViewItemDisposables,\n\t\t\t\t\taccessor,\n\t\t\t\t\t{ hoverDelegate: options.hoverDelegate },\n\t\t\t\t),\n\t\t\t);\n\t\t\tif (item) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\n\t\treturn createActionViewItem(this.instantiationService, action, options);\n\t}\n\n\tfocusView(id: string): void {\n\t\tconst view = this.getView(id);\n\t\tif (view) {\n\t\t\tview.focus();\n\t\t}\n\t}\n\n\tprivate onDebugServiceStateChange(state: State): void {\n\t\tif (this.progressResolve) {\n\t\t\tthis.progressResolve();\n\t\t\tthis.progressResolve = undefined;\n\t\t}\n\n\t\tif (state === State.Initializing) {\n\t\t\tthis.progressService.withProgress(\n\t\t\t\t{ location: VIEWLET_ID },\n\t\t\t\t(_progress) => {\n\t\t\t\t\treturn new Promise<void>(\n\t\t\t\t\t\t(resolve) => (this.progressResolve = resolve),\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t}\n\n\toverride addPanes(\n\t\tpanes: {\n\t\t\tpane: ViewPane;\n\t\t\tsize: number;\n\t\t\tindex?: number;\n\t\t\tdisposable: IDisposable;\n\t\t}[],\n\t): void {\n\t\tsuper.addPanes(panes);\n\n\t\tfor (const { pane } of panes) {\n\t\t\t// attach event listener to\n\t\t\tif (pane.id === BREAKPOINTS_VIEW_ID) {\n\t\t\t\tthis.breakpointView = pane;\n\t\t\t\tthis.updateBreakpointsMaxSize();\n\t\t\t} else {\n\t\t\t\tthis.paneListeners.set(\n\t\t\t\t\tpane.id,\n\t\t\t\t\tpane.onDidChange(() => this.updateBreakpointsMaxSize()),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\toverride removePanes(panes: ViewPane[]): void {\n\t\tsuper.removePanes(panes);\n\t\tfor (const pane of panes) {\n\t\t\tdispose(this.paneListeners.get(pane.id));\n\t\t\tthis.paneListeners.delete(pane.id);\n\t\t}\n\t}\n\n\tprivate updateBreakpointsMaxSize(): void {\n\t\tif (this.breakpointView) {\n\t\t\t// We need to update the breakpoints view since all other views are collapsed #25384\n\t\t\tconst allOtherCollapsed = this.panes.every(\n\t\t\t\t(view) => !view.isExpanded() || view === this.breakpointView,\n\t\t\t);\n\t\t\tthis.breakpointView.maximumBodySize = allOtherCollapsed\n\t\t\t\t? Number.POSITIVE_INFINITY\n\t\t\t\t: this.breakpointView.minimumBodySize;\n\t\t}\n\t}\n}\n\nMenuRegistry.appendMenuItem(MenuId.ViewContainerTitle, {\n\twhen: ContextKeyExpr.and(\n\t\tContextKeyExpr.equals(\"viewContainer\", VIEWLET_ID),\n\t\tCONTEXT_DEBUG_UX.notEqualsTo(\"simple\"),\n\t\tWorkbenchStateContext.notEqualsTo(\"empty\"),\n\t\tContextKeyExpr.or(\n\t\t\tCONTEXT_DEBUG_STATE.isEqualTo(\"inactive\"),\n\t\t\tContextKeyExpr.notEquals(\"config.debug.toolBarLocation\", \"docked\"),\n\t\t),\n\t\tContextKeyExpr.or(\n\t\t\tContextKeyExpr.not(\"config.debug.hideLauncherWhileDebugging\"),\n\t\t\tContextKeyExpr.not(\"inDebugMode\"),\n\t\t),\n\t),\n\torder: 10,\n\tgroup: \"navigation\",\n\tcommand: {\n\t\tprecondition: CONTEXT_DEBUG_STATE.notEqualsTo(\n\t\t\tgetStateLabel(State.Initializing),\n\t\t),\n\t\tid: DEBUG_START_COMMAND_ID,\n\t\ttitle: DEBUG_START_LABEL,\n\t},\n});\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: DEBUG_CONFIGURE_COMMAND_ID,\n\t\t\t\ttitle: {\n\t\t\t\t\tvalue: DEBUG_CONFIGURE_LABEL,\n\t\t\t\t\toriginal: \"Open 'launch.json'\",\n\t\t\t\t\tmnemonicTitle: nls.localize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"miOpenConfigurations\",\n\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"Open &&Configurations\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tmetadata: {\n\t\t\t\t\tdescription: nls.localize2(\n\t\t\t\t\t\t\"openLaunchConfigDescription\",\n\t\t\t\t\t\t\"Opens the file used to configure how your program is debugged\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tf1: true,\n\t\t\t\ticon: debugConfigure,\n\t\t\t\tprecondition: CONTEXT_DEBUG_UX.notEqualsTo(\"simple\"),\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.ViewContainerTitle,\n\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\torder: 20,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tContextKeyExpr.equals(\"viewContainer\", VIEWLET_ID),\n\t\t\t\t\t\t\tCONTEXT_DEBUG_UX.notEqualsTo(\"simple\"),\n\t\t\t\t\t\t\tWorkbenchStateContext.notEqualsTo(\"empty\"),\n\t\t\t\t\t\t\tContextKeyExpr.or(\n\t\t\t\t\t\t\t\tCONTEXT_DEBUG_STATE.isEqualTo(\"inactive\"),\n\t\t\t\t\t\t\t\tContextKeyExpr.notEquals(\n\t\t\t\t\t\t\t\t\t\"config.debug.toolBarLocation\",\n\t\t\t\t\t\t\t\t\t\"docked\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.ViewContainerTitle,\n\t\t\t\t\t\torder: 20,\n\t\t\t\t\t\t// Show in debug viewlet secondary actions when debugging and debug toolbar is docked\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tContextKeyExpr.equals(\"viewContainer\", VIEWLET_ID),\n\t\t\t\t\t\t\tCONTEXT_DEBUG_STATE.notEqualsTo(\"inactive\"),\n\t\t\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\t\t\"config.debug.toolBarLocation\",\n\t\t\t\t\t\t\t\t\"docked\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.MenubarDebugMenu,\n\t\t\t\t\t\tgroup: \"2_configuration\",\n\t\t\t\t\t\torder: 1,\n\t\t\t\t\t\twhen: CONTEXT_DEBUGGERS_AVAILABLE,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst debugService = accessor.get(IDebugService);\n\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\tconst configurationManager = debugService.getConfigurationManager();\n\t\t\tlet launch: ILaunch | undefined;\n\t\t\tif (configurationManager.selectedConfiguration.name) {\n\t\t\t\tlaunch = configurationManager.selectedConfiguration.launch;\n\t\t\t} else {\n\t\t\t\tconst launches = configurationManager\n\t\t\t\t\t.getLaunches()\n\t\t\t\t\t.filter((l) => !l.hidden);\n\t\t\t\tif (launches.length === 1) {\n\t\t\t\t\tlaunch = launches[0];\n\t\t\t\t} else {\n\t\t\t\t\tconst picks = launches.map((l) => ({\n\t\t\t\t\t\tlabel: l.name,\n\t\t\t\t\t\tlaunch: l,\n\t\t\t\t\t}));\n\t\t\t\t\tconst picked = await quickInputService.pick<{\n\t\t\t\t\t\tlabel: string;\n\t\t\t\t\t\tlaunch: ILaunch;\n\t\t\t\t\t}>(picks, {\n\t\t\t\t\t\tactiveItem: picks[0],\n\t\t\t\t\t\tplaceHolder: nls.localize(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"selectWorkspaceFolder\",\n\t\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\t\"User picks a workspace folder or a workspace configuration file here. Workspace configuration files can contain settings and thus a launch.json configuration can be written into one.\",\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"Select a workspace folder to create a launch.json file in or add it to the workspace config file\",\n\t\t\t\t\t\t),\n\t\t\t\t\t});\n\t\t\t\t\tif (picked) {\n\t\t\t\t\t\tlaunch = picked.launch;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (launch) {\n\t\t\t\tawait launch.openConfigFile({ preserveFocus: false });\n\t\t\t}\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"debug.toggleReplIgnoreFocus\",\n\t\t\t\ttitle: nls.localize(\"debugPanel\", \"Debug Console\"),\n\t\t\t\ttoggled: ContextKeyExpr.has(`view.${REPL_VIEW_ID}.visible`),\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: ViewsSubMenu,\n\t\t\t\t\t\tgroup: \"3_toggleRepl\",\n\t\t\t\t\t\torder: 30,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tContextKeyExpr.equals(\"viewContainer\", VIEWLET_ID),\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst viewsService = accessor.get(IViewsService);\n\t\t\tif (viewsService.isViewVisible(REPL_VIEW_ID)) {\n\t\t\t\tviewsService.closeView(REPL_VIEW_ID);\n\t\t\t} else {\n\t\t\t\tawait viewsService.openView(REPL_VIEW_ID);\n\t\t\t}\n\t\t}\n\t},\n);\n\nMenuRegistry.appendMenuItem(MenuId.ViewContainerTitle, {\n\twhen: ContextKeyExpr.and(\n\t\tContextKeyExpr.equals(\"viewContainer\", VIEWLET_ID),\n\t\tCONTEXT_DEBUG_STATE.notEqualsTo(\"inactive\"),\n\t\tContextKeyExpr.or(\n\t\t\tContextKeyExpr.equals(\"config.debug.toolBarLocation\", \"docked\"),\n\t\t\tContextKeyExpr.has(\"config.debug.hideLauncherWhileDebugging\"),\n\t\t),\n\t),\n\torder: 10,\n\tcommand: {\n\t\tid: SELECT_AND_START_ID,\n\t\ttitle: nls.localize(\n\t\t\t\"startAdditionalSession\",\n\t\t\t\"Start Additional Session\",\n\t\t),\n\t},\n});\n"],
  "mappings": "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",
  "names": []
}
