{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/debugViewlet.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IActionViewItem } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { IAction } from '../../../../base/common/actions.js';\nimport { DisposableStore, dispose, IDisposable } from '../../../../base/common/lifecycle.js';\nimport './media/debugViewlet.css';\nimport * as nls from '../../../../nls.js';\nimport { createActionViewItem } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { Action2, MenuId, MenuItemAction, MenuRegistry, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService, IContextViewService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IProgressService } from '../../../../platform/progress/common/progress.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nimport { ViewPane } from '../../../browser/parts/views/viewPane.js';\nimport { ViewPaneContainer, ViewsSubMenu } from '../../../browser/parts/views/viewPaneContainer.js';\nimport { WorkbenchStateContext } from '../../../common/contextkeys.js';\nimport { IViewDescriptorService } from '../../../common/views.js';\nimport { IViewsService } from '../../../services/views/common/viewsService.js';\nimport { FocusSessionActionViewItem, StartDebugActionViewItem } from './debugActionViewItems.js';\nimport { DEBUG_CONFIGURE_COMMAND_ID, DEBUG_CONFIGURE_LABEL, DEBUG_START_COMMAND_ID, DEBUG_START_LABEL, DISCONNECT_ID, FOCUS_SESSION_ID, SELECT_AND_START_ID, STOP_ID } from './debugCommands.js';\nimport { debugConfigure } from './debugIcons.js';\nimport { createDisconnectMenuItemAction } from './debugToolBar.js';\nimport { WelcomeView } from './welcomeView.js';\nimport { BREAKPOINTS_VIEW_ID, CONTEXT_DEBUGGERS_AVAILABLE, CONTEXT_DEBUG_STATE, CONTEXT_DEBUG_UX, CONTEXT_DEBUG_UX_KEY, getStateLabel, IDebugService, ILaunch, REPL_VIEW_ID, State, VIEWLET_ID } from '../common/debug.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { IWorkbenchLayoutService } from '../../../services/layout/browser/layoutService.js';\nimport { IBaseActionViewItemOptions } from '../../../../base/browser/ui/actionbar/actionViewItems.js';\n\nexport class DebugViewPaneContainer extends ViewPaneContainer {\n\n\tprivate startDebugActionViewItem: StartDebugActionViewItem | undefined;\n\tprivate progressResolve: (() => void) | undefined;\n\tprivate breakpointView: ViewPane | undefined;\n\tprivate paneListeners = new Map<string, IDisposable>();\n\n\tprivate readonly stopActionViewItemDisposables = this._register(new DisposableStore());\n\n\tconstructor(\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IProgressService private readonly progressService: IProgressService,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t) {\n\t\tsuper(VIEWLET_ID, { mergeViewWithContainerWhenSingleView: true }, instantiationService, configurationService, layoutService, contextMenuService, telemetryService, extensionService, themeService, storageService, contextService, viewDescriptorService);\n\n\t\t// When there are potential updates to the docked debug toolbar we need to update it\n\t\tthis._register(this.debugService.onDidChangeState(state => this.onDebugServiceStateChange(state)));\n\n\t\tthis._register(this.contextKeyService.onDidChangeContext(e => {\n\t\t\tif (e.affectsSome(new Set([CONTEXT_DEBUG_UX_KEY, 'inDebugMode']))) {\n\t\t\t\tthis.updateTitleArea();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.contextService.onDidChangeWorkbenchState(() => this.updateTitleArea()));\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('debug.toolBarLocation') || e.affectsConfiguration('debug.hideLauncherWhileDebugging')) {\n\t\t\t\tthis.updateTitleArea();\n\t\t\t}\n\t\t}));\n\t}\n\n\toverride create(parent: HTMLElement): void {\n\t\tsuper.create(parent);\n\t\tparent.classList.add('debug-viewlet');\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\n\t\tif (this.startDebugActionViewItem) {\n\t\t\tthis.startDebugActionViewItem.focus();\n\t\t} else {\n\t\t\tthis.focusView(WelcomeView.ID);\n\t\t}\n\t}\n\n\toverride getActionViewItem(action: IAction, options: IBaseActionViewItemOptions): IActionViewItem | undefined {\n\t\tif (action.id === DEBUG_START_COMMAND_ID) {\n\t\t\tthis.startDebugActionViewItem = this.instantiationService.createInstance(StartDebugActionViewItem, null, action, options);\n\t\t\treturn this.startDebugActionViewItem;\n\t\t}\n\t\tif (action.id === FOCUS_SESSION_ID) {\n\t\t\treturn new FocusSessionActionViewItem(action, undefined, this.debugService, this.contextViewService, this.configurationService);\n\t\t}\n\n\t\tif (action.id === STOP_ID || action.id === DISCONNECT_ID) {\n\t\t\tthis.stopActionViewItemDisposables.clear();\n\t\t\tconst item = this.instantiationService.invokeFunction(accessor => createDisconnectMenuItemAction(action as MenuItemAction, this.stopActionViewItemDisposables, accessor, { hoverDelegate: options.hoverDelegate }));\n\t\t\tif (item) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\n\t\treturn createActionViewItem(this.instantiationService, action, options);\n\t}\n\n\tfocusView(id: string): void {\n\t\tconst view = this.getView(id);\n\t\tif (view) {\n\t\t\tview.focus();\n\t\t}\n\t}\n\n\tprivate onDebugServiceStateChange(state: State): void {\n\t\tif (this.progressResolve) {\n\t\t\tthis.progressResolve();\n\t\t\tthis.progressResolve = undefined;\n\t\t}\n\n\t\tif (state === State.Initializing) {\n\t\t\tthis.progressService.withProgress({ location: VIEWLET_ID, }, _progress => {\n\t\t\t\treturn new Promise<void>(resolve => this.progressResolve = resolve);\n\t\t\t});\n\t\t}\n\t}\n\n\toverride addPanes(panes: { pane: ViewPane; size: number; index?: number; disposable: IDisposable }[]): void {\n\t\tsuper.addPanes(panes);\n\n\t\tfor (const { pane: pane } of panes) {\n\t\t\t// attach event listener to\n\t\t\tif (pane.id === BREAKPOINTS_VIEW_ID) {\n\t\t\t\tthis.breakpointView = pane;\n\t\t\t\tthis.updateBreakpointsMaxSize();\n\t\t\t} else {\n\t\t\t\tthis.paneListeners.set(pane.id, pane.onDidChange(() => this.updateBreakpointsMaxSize()));\n\t\t\t}\n\t\t}\n\t}\n\n\toverride removePanes(panes: ViewPane[]): void {\n\t\tsuper.removePanes(panes);\n\t\tfor (const pane of panes) {\n\t\t\tdispose(this.paneListeners.get(pane.id));\n\t\t\tthis.paneListeners.delete(pane.id);\n\t\t}\n\t}\n\n\tprivate updateBreakpointsMaxSize(): void {\n\t\tif (this.breakpointView) {\n\t\t\t// We need to update the breakpoints view since all other views are collapsed #25384\n\t\t\tconst allOtherCollapsed = this.panes.every(view => !view.isExpanded() || view === this.breakpointView);\n\t\t\tthis.breakpointView.maximumBodySize = allOtherCollapsed ? Number.POSITIVE_INFINITY : this.breakpointView.minimumBodySize;\n\t\t}\n\t}\n}\n\nMenuRegistry.appendMenuItem(MenuId.ViewContainerTitle, {\n\twhen: ContextKeyExpr.and(\n\t\tContextKeyExpr.equals('viewContainer', VIEWLET_ID),\n\t\tCONTEXT_DEBUG_UX.notEqualsTo('simple'),\n\t\tWorkbenchStateContext.notEqualsTo('empty'),\n\t\tContextKeyExpr.or(\n\t\t\tCONTEXT_DEBUG_STATE.isEqualTo('inactive'),\n\t\t\tContextKeyExpr.notEquals('config.debug.toolBarLocation', 'docked')\n\t\t),\n\t\tContextKeyExpr.or(\n\t\t\tContextKeyExpr.not('config.debug.hideLauncherWhileDebugging'),\n\t\t\tContextKeyExpr.not('inDebugMode')\n\t\t)\n\t),\n\torder: 10,\n\tgroup: 'navigation',\n\tcommand: {\n\t\tprecondition: CONTEXT_DEBUG_STATE.notEqualsTo(getStateLabel(State.Initializing)),\n\t\tid: DEBUG_START_COMMAND_ID,\n\t\ttitle: DEBUG_START_LABEL\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: DEBUG_CONFIGURE_COMMAND_ID,\n\t\t\ttitle: {\n\t\t\t\tvalue: DEBUG_CONFIGURE_LABEL,\n\t\t\t\toriginal: 'Open \\'launch.json\\'',\n\t\t\t\tmnemonicTitle: nls.localize({ key: 'miOpenConfigurations', comment: ['&& denotes a mnemonic'] }, \"Open &&Configurations\")\n\t\t\t},\n\t\t\tmetadata: {\n\t\t\t\tdescription: nls.localize2('openLaunchConfigDescription', 'Opens the file used to configure how your program is debugged')\n\t\t\t},\n\t\t\tf1: true,\n\t\t\ticon: debugConfigure,\n\t\t\tprecondition: CONTEXT_DEBUG_UX.notEqualsTo('simple'),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.ViewContainerTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 20,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('viewContainer', VIEWLET_ID), CONTEXT_DEBUG_UX.notEqualsTo('simple'), WorkbenchStateContext.notEqualsTo('empty'),\n\t\t\t\t\tContextKeyExpr.or(CONTEXT_DEBUG_STATE.isEqualTo('inactive'), ContextKeyExpr.notEquals('config.debug.toolBarLocation', 'docked')))\n\t\t\t}, {\n\t\t\t\tid: MenuId.ViewContainerTitle,\n\t\t\t\torder: 20,\n\t\t\t\t// Show in debug viewlet secondary actions when debugging and debug toolbar is docked\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('viewContainer', VIEWLET_ID), CONTEXT_DEBUG_STATE.notEqualsTo('inactive'), ContextKeyExpr.equals('config.debug.toolBarLocation', 'docked'))\n\t\t\t}, {\n\t\t\t\tid: MenuId.MenubarDebugMenu,\n\t\t\t\tgroup: '2_configuration',\n\t\t\t\torder: 1,\n\t\t\t\twhen: CONTEXT_DEBUGGERS_AVAILABLE\n\t\t\t}]\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst configurationManager = debugService.getConfigurationManager();\n\t\tlet launch: ILaunch | undefined;\n\t\tif (configurationManager.selectedConfiguration.name) {\n\t\t\tlaunch = configurationManager.selectedConfiguration.launch;\n\t\t} else {\n\t\t\tconst launches = configurationManager.getLaunches().filter(l => !l.hidden);\n\t\t\tif (launches.length === 1) {\n\t\t\t\tlaunch = launches[0];\n\t\t\t} else {\n\t\t\t\tconst picks = launches.map(l => ({ label: l.name, launch: l }));\n\t\t\t\tconst picked = await quickInputService.pick<{ label: string; launch: ILaunch }>(picks, {\n\t\t\t\t\tactiveItem: picks[0],\n\t\t\t\t\tplaceHolder: nls.localize({ key: 'selectWorkspaceFolder', comment: ['User picks a workspace folder or a workspace configuration file here. Workspace configuration files can contain settings and thus a launch.json configuration can be written into one.'] }, \"Select a workspace folder to create a launch.json file in or add it to the workspace config file\")\n\t\t\t\t});\n\t\t\t\tif (picked) {\n\t\t\t\t\tlaunch = picked.launch;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (launch) {\n\t\t\tawait launch.openConfigFile({ preserveFocus: false });\n\t\t}\n\t}\n});\n\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'debug.toggleReplIgnoreFocus',\n\t\t\ttitle: nls.localize('debugPanel', \"Debug Console\"),\n\t\t\ttoggled: ContextKeyExpr.has(`view.${REPL_VIEW_ID}.visible`),\n\t\t\tmenu: [{\n\t\t\t\tid: ViewsSubMenu,\n\t\t\t\tgroup: '3_toggleRepl',\n\t\t\t\torder: 30,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('viewContainer', VIEWLET_ID))\n\t\t\t}]\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tif (viewsService.isViewVisible(REPL_VIEW_ID)) {\n\t\t\tviewsService.closeView(REPL_VIEW_ID);\n\t\t} else {\n\t\t\tawait viewsService.openView(REPL_VIEW_ID);\n\t\t}\n\t}\n});\n\nMenuRegistry.appendMenuItem(MenuId.ViewContainerTitle, {\n\twhen: ContextKeyExpr.and(\n\t\tContextKeyExpr.equals('viewContainer', VIEWLET_ID),\n\t\tCONTEXT_DEBUG_STATE.notEqualsTo('inactive'),\n\t\tContextKeyExpr.or(\n\t\t\tContextKeyExpr.equals('config.debug.toolBarLocation', 'docked'),\n\t\t\tContextKeyExpr.has('config.debug.hideLauncherWhileDebugging')\n\t\t)\n\t),\n\torder: 10,\n\tcommand: {\n\t\tid: SELECT_AND_START_ID,\n\t\ttitle: nls.localize('startAdditionalSession', \"Start Additional Session\"),\n\t}\n});\n"],
  "mappings": "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",
  "names": []
}
