{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/watchExpressionsView.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IDragAndDropData } from \"../../../../base/browser/dnd.js\";\nimport type { ActionBar } from \"../../../../base/browser/ui/actionbar/actionbar.js\";\nimport type { IHighlight } from \"../../../../base/browser/ui/highlightedlabel/highlightedLabel.js\";\nimport {\n\ttype IListVirtualDelegate,\n\tListDragOverEffectPosition,\n\tListDragOverEffectType,\n} from \"../../../../base/browser/ui/list/list.js\";\nimport {\n\tElementsDragAndDropData,\n\tListViewTargetSector,\n} from \"../../../../base/browser/ui/list/listView.js\";\nimport type { IListAccessibilityProvider } from \"../../../../base/browser/ui/list/listWidget.js\";\nimport type {\n\tITreeContextMenuEvent,\n\tITreeDragAndDrop,\n\tITreeDragOverReaction,\n\tITreeMouseEvent,\n\tITreeNode,\n} from \"../../../../base/browser/ui/tree/tree.js\";\nimport type { IAction } from \"../../../../base/common/actions.js\";\nimport { RunOnceScheduler } from \"../../../../base/common/async.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport type { FuzzyScore } from \"../../../../base/common/filters.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { createAndFillInContextMenuActions } from \"../../../../platform/actions/browser/menuEntryActionViewItem.js\";\nimport {\n\tAction2,\n\ttype IMenu,\n\tIMenuService,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tContextKeyExpr,\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tIContextMenuService,\n\tIContextViewService,\n} from \"../../../../platform/contextview/browser/contextView.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { WorkbenchAsyncDataTree } from \"../../../../platform/list/browser/listService.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport { ViewAction, ViewPane } from \"../../../browser/parts/views/viewPane.js\";\nimport type { IViewletViewOptions } from \"../../../browser/parts/views/viewsViewlet.js\";\nimport { IViewDescriptorService } from \"../../../common/views.js\";\nimport {\n\tCONTEXT_CAN_VIEW_MEMORY,\n\tCONTEXT_VARIABLE_IS_READONLY,\n\tCONTEXT_WATCH_EXPRESSIONS_EXIST,\n\tCONTEXT_WATCH_EXPRESSIONS_FOCUSED,\n\tCONTEXT_WATCH_ITEM_TYPE,\n\ttype IDebugConfiguration,\n\tIDebugService,\n\ttype IExpression,\n\tWATCH_VIEW_ID,\n} from \"../common/debug.js\";\nimport {\n\tExpression,\n\tVariable,\n\tVisualizedExpression,\n} from \"../common/debugModel.js\";\nimport {\n\tAbstractExpressionDataSource,\n\tAbstractExpressionsRenderer,\n\ttype IExpressionTemplateData,\n\ttype IInputBoxOptions,\n\trenderViewTree,\n} from \"./baseDebugView.js\";\nimport { DebugExpressionRenderer } from \"./debugExpressionRenderer.js\";\nimport {\n\twatchExpressionsAdd,\n\twatchExpressionsRemoveAll,\n} from \"./debugIcons.js\";\nimport {\n\tVariablesRenderer,\n\tVisualizedVariableRenderer,\n} from \"./variablesView.js\";\n\nconst MAX_VALUE_RENDER_LENGTH_IN_VIEWLET = 1024;\nlet ignoreViewUpdates = false;\nlet useCachedEvaluation = false;\n\nexport class WatchExpressionsView extends ViewPane {\n\tprivate watchExpressionsUpdatedScheduler: RunOnceScheduler;\n\tprivate needsRefresh = false;\n\tprivate tree!: WorkbenchAsyncDataTree<\n\t\tIDebugService | IExpression,\n\t\tIExpression,\n\t\tFuzzyScore\n\t>;\n\tprivate watchExpressionsExist: IContextKey<boolean>;\n\tprivate watchItemType: IContextKey<string | undefined>;\n\tprivate variableReadonly: IContextKey<boolean>;\n\tprivate menu: IMenu;\n\tprivate expressionRenderer: DebugExpressionRenderer;\n\n\tconstructor(\n\t\toptions: IViewletViewOptions,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IMenuService menuService: IMenuService,\n\t) {\n\t\tsuper(\n\t\t\toptions,\n\t\t\tkeybindingService,\n\t\t\tcontextMenuService,\n\t\t\tconfigurationService,\n\t\t\tcontextKeyService,\n\t\t\tviewDescriptorService,\n\t\t\tinstantiationService,\n\t\t\topenerService,\n\t\t\tthemeService,\n\t\t\ttelemetryService,\n\t\t\thoverService,\n\t\t);\n\n\t\tthis.menu = menuService.createMenu(\n\t\t\tMenuId.DebugWatchContext,\n\t\t\tcontextKeyService,\n\t\t);\n\t\tthis._register(this.menu);\n\t\tthis.watchExpressionsUpdatedScheduler = new RunOnceScheduler(() => {\n\t\t\tthis.needsRefresh = false;\n\t\t\tthis.tree.updateChildren();\n\t\t}, 50);\n\t\tthis.watchExpressionsExist =\n\t\t\tCONTEXT_WATCH_EXPRESSIONS_EXIST.bindTo(contextKeyService);\n\t\tthis.variableReadonly =\n\t\t\tCONTEXT_VARIABLE_IS_READONLY.bindTo(contextKeyService);\n\t\tthis.watchExpressionsExist.set(\n\t\t\tthis.debugService.getModel().getWatchExpressions().length > 0,\n\t\t);\n\t\tthis.watchItemType = CONTEXT_WATCH_ITEM_TYPE.bindTo(contextKeyService);\n\t\tthis.expressionRenderer = instantiationService.createInstance(\n\t\t\tDebugExpressionRenderer,\n\t\t);\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tthis.element.classList.add(\"debug-pane\");\n\t\tcontainer.classList.add(\"debug-watch\");\n\t\tconst treeContainer = renderViewTree(container);\n\n\t\tconst expressionsRenderer = this.instantiationService.createInstance(\n\t\t\tWatchExpressionsRenderer,\n\t\t\tthis.expressionRenderer,\n\t\t);\n\t\tthis.tree = <\n\t\t\tWorkbenchAsyncDataTree<\n\t\t\t\tIDebugService | IExpression,\n\t\t\t\tIExpression,\n\t\t\t\tFuzzyScore\n\t\t\t>\n\t\t>this.instantiationService.createInstance(\n\t\t\tWorkbenchAsyncDataTree,\n\t\t\t\"WatchExpressions\",\n\t\t\ttreeContainer,\n\t\t\tnew WatchExpressionsDelegate(),\n\t\t\t[\n\t\t\t\texpressionsRenderer,\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tVariablesRenderer,\n\t\t\t\t\tthis.expressionRenderer,\n\t\t\t\t),\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tVisualizedVariableRenderer,\n\t\t\t\t\tthis.expressionRenderer,\n\t\t\t\t),\n\t\t\t],\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tWatchExpressionsDataSource,\n\t\t\t),\n\t\t\t{\n\t\t\t\taccessibilityProvider:\n\t\t\t\t\tnew WatchExpressionsAccessibilityProvider(),\n\t\t\t\tidentityProvider: {\n\t\t\t\t\tgetId: (element: IExpression) => element.getId(),\n\t\t\t\t},\n\t\t\t\tkeyboardNavigationLabelProvider: {\n\t\t\t\t\tgetKeyboardNavigationLabel: (e: IExpression) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\te ===\n\t\t\t\t\t\t\tthis.debugService\n\t\t\t\t\t\t\t\t.getViewModel()\n\t\t\t\t\t\t\t\t.getSelectedExpression()?.expression\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// Don't filter input box\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn e.name;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdnd: new WatchExpressionsDragAndDrop(this.debugService),\n\t\t\t\toverrideStyles:\n\t\t\t\t\tthis.getLocationBasedColors().listOverrideStyles,\n\t\t\t},\n\t\t);\n\t\tthis.tree.setInput(this.debugService);\n\t\tCONTEXT_WATCH_EXPRESSIONS_FOCUSED.bindTo(this.tree.contextKeyService);\n\n\t\tthis._register(\n\t\t\tVisualizedVariableRenderer.rendererOnVisualizationRange(\n\t\t\t\tthis.debugService.getViewModel(),\n\t\t\t\tthis.tree,\n\t\t\t),\n\t\t);\n\t\tthis._register(this.tree.onContextMenu((e) => this.onContextMenu(e)));\n\t\tthis._register(\n\t\t\tthis.tree.onMouseDblClick((e) => this.onMouseDblClick(e)),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.debugService\n\t\t\t\t.getModel()\n\t\t\t\t.onDidChangeWatchExpressions(async (we) => {\n\t\t\t\t\tthis.watchExpressionsExist.set(\n\t\t\t\t\t\tthis.debugService.getModel().getWatchExpressions()\n\t\t\t\t\t\t\t.length > 0,\n\t\t\t\t\t);\n\t\t\t\t\tif (this.isBodyVisible()) {\n\t\t\t\t\t\tif (we && !we.name) {\n\t\t\t\t\t\t\t// We are adding a new input box, no need to re-evaluate watch expressions\n\t\t\t\t\t\t\tuseCachedEvaluation = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait this.tree.updateChildren();\n\t\t\t\t\t\tuseCachedEvaluation = false;\n\t\t\t\t\t\tif (we instanceof Expression) {\n\t\t\t\t\t\t\tthis.tree.reveal(we);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.needsRefresh = true;\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.debugService.getViewModel().onDidFocusStackFrame(() => {\n\t\t\t\tif (!this.isBodyVisible()) {\n\t\t\t\t\tthis.needsRefresh = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!this.watchExpressionsUpdatedScheduler.isScheduled()) {\n\t\t\t\t\tthis.watchExpressionsUpdatedScheduler.schedule();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.debugService.getViewModel().onWillUpdateViews(() => {\n\t\t\t\tif (!ignoreViewUpdates) {\n\t\t\t\t\tthis.tree.updateChildren();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.onDidChangeBodyVisibility((visible) => {\n\t\t\t\tif (visible && this.needsRefresh) {\n\t\t\t\t\tthis.watchExpressionsUpdatedScheduler.schedule();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tlet horizontalScrolling: boolean | undefined;\n\t\tthis._register(\n\t\t\tthis.debugService.getViewModel().onDidSelectExpression((e) => {\n\t\t\t\tconst expression = e?.expression;\n\t\t\t\tif (expression && this.tree.hasNode(expression)) {\n\t\t\t\t\thorizontalScrolling = this.tree.options.horizontalScrolling;\n\t\t\t\t\tif (horizontalScrolling) {\n\t\t\t\t\t\tthis.tree.updateOptions({ horizontalScrolling: false });\n\t\t\t\t\t}\n\n\t\t\t\t\tif (expression.name) {\n\t\t\t\t\t\t// Only rerender if the input is already done since otherwise the tree is not yet aware of the new element\n\t\t\t\t\t\tthis.tree.rerender(expression);\n\t\t\t\t\t}\n\t\t\t\t} else if (!expression && horizontalScrolling !== undefined) {\n\t\t\t\t\tthis.tree.updateOptions({\n\t\t\t\t\t\thorizontalScrolling: horizontalScrolling,\n\t\t\t\t\t});\n\t\t\t\t\thorizontalScrolling = undefined;\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.debugService\n\t\t\t\t.getViewModel()\n\t\t\t\t.onDidEvaluateLazyExpression(async (e) => {\n\t\t\t\t\tif (e instanceof Variable && this.tree.hasNode(e)) {\n\t\t\t\t\t\tawait this.tree.updateChildren(e, false, true);\n\t\t\t\t\t\tawait this.tree.expand(e);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t);\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\t\tthis.tree.layout(height, width);\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\t\tthis.tree.domFocus();\n\t}\n\n\tcollapseAll(): void {\n\t\tthis.tree.collapseAll();\n\t}\n\n\tprivate onMouseDblClick(e: ITreeMouseEvent<IExpression>): void {\n\t\tif (\n\t\t\t(e.browserEvent.target as HTMLElement).className.indexOf(\n\t\t\t\t\"twistie\",\n\t\t\t) >= 0\n\t\t) {\n\t\t\t// Ignore double click events on twistie\n\t\t\treturn;\n\t\t}\n\n\t\tconst element = e.element;\n\t\t// double click on primitive value: open input box to be able to select and copy value.\n\t\tconst selectedExpression = this.debugService\n\t\t\t.getViewModel()\n\t\t\t.getSelectedExpression();\n\t\tif (\n\t\t\t(element instanceof Expression &&\n\t\t\t\telement !== selectedExpression?.expression) ||\n\t\t\t(element instanceof VisualizedExpression &&\n\t\t\t\telement.treeItem.canEdit)\n\t\t) {\n\t\t\tthis.debugService\n\t\t\t\t.getViewModel()\n\t\t\t\t.setSelectedExpression(element, false);\n\t\t} else if (!element) {\n\t\t\t// Double click in watch panel triggers to add a new watch expression\n\t\t\tthis.debugService.addWatchExpression();\n\t\t}\n\t}\n\n\tprivate onContextMenu(e: ITreeContextMenuEvent<IExpression>): void {\n\t\tconst element = e.element;\n\t\tconst selection = this.tree.getSelection();\n\n\t\tthis.watchItemType.set(\n\t\t\telement instanceof Expression\n\t\t\t\t? \"expression\"\n\t\t\t\t: element instanceof Variable\n\t\t\t\t\t? \"variable\"\n\t\t\t\t\t: undefined,\n\t\t);\n\t\tconst actions: IAction[] = [];\n\t\tconst attributes =\n\t\t\telement instanceof Variable\n\t\t\t\t? element.presentationHint?.attributes\n\t\t\t\t: undefined;\n\t\tthis.variableReadonly.set(\n\t\t\t(!!attributes && attributes.indexOf(\"readOnly\") >= 0) ||\n\t\t\t\t!!element?.presentationHint?.lazy,\n\t\t);\n\t\tcreateAndFillInContextMenuActions(\n\t\t\tthis.menu,\n\t\t\t{ arg: element, shouldForwardArgs: true },\n\t\t\tactions,\n\t\t);\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => e.anchor,\n\t\t\tgetActions: () => actions,\n\t\t\tgetActionsContext: () =>\n\t\t\t\telement && selection.includes(element)\n\t\t\t\t\t? selection\n\t\t\t\t\t: element\n\t\t\t\t\t\t? [element]\n\t\t\t\t\t\t: [],\n\t\t});\n\t}\n}\n\nclass WatchExpressionsDelegate implements IListVirtualDelegate<IExpression> {\n\tgetHeight(_element: IExpression): number {\n\t\treturn 22;\n\t}\n\n\tgetTemplateId(element: IExpression): string {\n\t\tif (element instanceof Expression) {\n\t\t\treturn WatchExpressionsRenderer.ID;\n\t\t}\n\n\t\tif (element instanceof VisualizedExpression) {\n\t\t\treturn VisualizedVariableRenderer.ID;\n\t\t}\n\n\t\t// Variable\n\t\treturn VariablesRenderer.ID;\n\t}\n}\n\nfunction isDebugService(element: any): element is IDebugService {\n\treturn typeof element.getConfigurationManager === \"function\";\n}\n\nclass WatchExpressionsDataSource extends AbstractExpressionDataSource<\n\tIDebugService,\n\tIExpression\n> {\n\tpublic override hasChildren(element: IExpression | IDebugService): boolean {\n\t\treturn isDebugService(element) || element.hasChildren;\n\t}\n\n\tprotected override doGetChildren(\n\t\telement: IDebugService | IExpression,\n\t): Promise<Array<IExpression>> {\n\t\tif (isDebugService(element)) {\n\t\t\tconst debugService = element as IDebugService;\n\t\t\tconst watchExpressions = debugService\n\t\t\t\t.getModel()\n\t\t\t\t.getWatchExpressions();\n\t\t\tconst viewModel = debugService.getViewModel();\n\t\t\treturn Promise.all(\n\t\t\t\twatchExpressions.map((we) =>\n\t\t\t\t\t!!we.name && !useCachedEvaluation\n\t\t\t\t\t\t? we\n\t\t\t\t\t\t\t\t.evaluate(\n\t\t\t\t\t\t\t\t\tviewModel.focusedSession!,\n\t\t\t\t\t\t\t\t\tviewModel.focusedStackFrame!,\n\t\t\t\t\t\t\t\t\t\"watch\",\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.then(() => we)\n\t\t\t\t\t\t: Promise.resolve(we),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\treturn element.getChildren();\n\t}\n}\n\nexport class WatchExpressionsRenderer extends AbstractExpressionsRenderer {\n\tstatic readonly ID = \"watchexpression\";\n\n\tconstructor(\n\t\tprivate readonly expressionRenderer: DebugExpressionRenderer,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IContextKeyService\n\t\tprivate readonly contextKeyService: IContextKeyService,\n\t\t@IDebugService debugService: IDebugService,\n\t\t@IContextViewService contextViewService: IContextViewService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IConfigurationService\n\t\tprivate configurationService: IConfigurationService,\n\t) {\n\t\tsuper(debugService, contextViewService, hoverService);\n\t}\n\n\tget templateId() {\n\t\treturn WatchExpressionsRenderer.ID;\n\t}\n\n\tpublic override renderElement(\n\t\tnode: ITreeNode<IExpression, FuzzyScore>,\n\t\tindex: number,\n\t\tdata: IExpressionTemplateData,\n\t): void {\n\t\tdata.elementDisposable.clear();\n\t\tdata.elementDisposable.add(\n\t\t\tthis.configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (e.affectsConfiguration(\"debug.showVariableTypes\")) {\n\t\t\t\t\tsuper.renderExpressionElement(node.element, node, data);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tsuper.renderExpressionElement(node.element, node, data);\n\t}\n\n\tprotected renderExpression(\n\t\texpression: IExpression,\n\t\tdata: IExpressionTemplateData,\n\t\thighlights: IHighlight[],\n\t): void {\n\t\tlet text: string;\n\t\tdata.type.textContent = \"\";\n\t\tconst showType =\n\t\t\tthis.configurationService.getValue<IDebugConfiguration>(\n\t\t\t\t\"debug\",\n\t\t\t).showVariableTypes;\n\t\tif (showType && expression.type) {\n\t\t\ttext =\n\t\t\t\ttypeof expression.value === \"string\"\n\t\t\t\t\t? `${expression.name}: `\n\t\t\t\t\t: expression.name;\n\t\t\t//render type\n\t\t\tdata.type.textContent = expression.type + \" =\";\n\t\t} else {\n\t\t\ttext =\n\t\t\t\ttypeof expression.value === \"string\"\n\t\t\t\t\t? `${expression.name} =`\n\t\t\t\t\t: expression.name;\n\t\t}\n\n\t\tlet title: string;\n\t\tif (expression.type) {\n\t\t\tif (showType) {\n\t\t\t\ttitle = `${expression.name}`;\n\t\t\t} else {\n\t\t\t\ttitle =\n\t\t\t\t\texpression.type === expression.value\n\t\t\t\t\t\t? expression.type\n\t\t\t\t\t\t: `${expression.type}`;\n\t\t\t}\n\t\t} else {\n\t\t\ttitle = expression.value;\n\t\t}\n\n\t\tdata.label.set(text, highlights, title);\n\t\tdata.elementDisposable.add(\n\t\t\tthis.expressionRenderer.renderValue(data.value, expression, {\n\t\t\t\tshowChanged: true,\n\t\t\t\tmaxValueLength: MAX_VALUE_RENDER_LENGTH_IN_VIEWLET,\n\t\t\t\tcolorize: true,\n\t\t\t\tsession: expression.getSession(),\n\t\t\t}),\n\t\t);\n\t}\n\n\tprotected getInputBoxOptions(\n\t\texpression: IExpression,\n\t\tsettingValue: boolean,\n\t): IInputBoxOptions {\n\t\tif (settingValue) {\n\t\t\treturn {\n\t\t\t\tinitialValue: expression.value,\n\t\t\t\tariaLabel: localize(\"typeNewValue\", \"Type new value\"),\n\t\t\t\tonFinish: async (value: string, success: boolean) => {\n\t\t\t\t\tif (success && value) {\n\t\t\t\t\t\tconst focusedFrame =\n\t\t\t\t\t\t\tthis.debugService.getViewModel().focusedStackFrame;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tfocusedFrame &&\n\t\t\t\t\t\t\t(expression instanceof Variable ||\n\t\t\t\t\t\t\t\texpression instanceof Expression)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tawait expression.setExpression(value, focusedFrame);\n\t\t\t\t\t\t\tthis.debugService.getViewModel().updateViews();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tinitialValue: expression.name ? expression.name : \"\",\n\t\t\tariaLabel: localize(\n\t\t\t\t\"watchExpressionInputAriaLabel\",\n\t\t\t\t\"Type watch expression\",\n\t\t\t),\n\t\t\tplaceholder: localize(\n\t\t\t\t\"watchExpressionPlaceholder\",\n\t\t\t\t\"Expression to watch\",\n\t\t\t),\n\t\t\tonFinish: (value: string, success: boolean) => {\n\t\t\t\tif (success && value) {\n\t\t\t\t\tthis.debugService.renameWatchExpression(\n\t\t\t\t\t\texpression.getId(),\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t);\n\t\t\t\t\tignoreViewUpdates = true;\n\t\t\t\t\tthis.debugService.getViewModel().updateViews();\n\t\t\t\t\tignoreViewUpdates = false;\n\t\t\t\t} else if (!expression.name) {\n\t\t\t\t\tthis.debugService.removeWatchExpressions(\n\t\t\t\t\t\texpression.getId(),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t}\n\n\tprotected override renderActionBar(\n\t\tactionBar: ActionBar,\n\t\texpression: IExpression,\n\t) {\n\t\tconst contextKeyService = getContextForWatchExpressionMenu(\n\t\t\tthis.contextKeyService,\n\t\t\texpression,\n\t\t);\n\t\tconst context = expression;\n\t\tconst menu = this.menuService.getMenuActions(\n\t\t\tMenuId.DebugWatchContext,\n\t\t\tcontextKeyService,\n\t\t\t{ arg: context, shouldForwardArgs: false },\n\t\t);\n\n\t\tconst primary: IAction[] = [];\n\t\tcreateAndFillInContextMenuActions(\n\t\t\tmenu,\n\t\t\t{ primary, secondary: [] },\n\t\t\t\"inline\",\n\t\t);\n\n\t\tactionBar.clear();\n\t\tactionBar.context = context;\n\t\tactionBar.push(primary, { icon: true, label: false });\n\t}\n}\n\n/**\n * Gets a context key overlay that has context for the given expression.\n */\nfunction getContextForWatchExpressionMenu(\n\tparentContext: IContextKeyService,\n\texpression: IExpression,\n) {\n\treturn parentContext.createOverlay([\n\t\t[CONTEXT_CAN_VIEW_MEMORY.key, expression.memoryReference !== undefined],\n\t\t[CONTEXT_WATCH_ITEM_TYPE.key, \"expression\"],\n\t]);\n}\n\nclass WatchExpressionsAccessibilityProvider\n\timplements IListAccessibilityProvider<IExpression>\n{\n\tgetWidgetAriaLabel(): string {\n\t\treturn localize(\n\t\t\t{\n\t\t\t\tcomment: [\"Debug is a noun in this context, not a verb.\"],\n\t\t\t\tkey: \"watchAriaTreeLabel\",\n\t\t\t},\n\t\t\t\"Debug Watch Expressions\",\n\t\t);\n\t}\n\n\tgetAriaLabel(element: IExpression): string {\n\t\tif (element instanceof Expression) {\n\t\t\treturn localize(\n\t\t\t\t\"watchExpressionAriaLabel\",\n\t\t\t\t\"{0}, value {1}\",\n\t\t\t\t(<Expression>element).name,\n\t\t\t\t(<Expression>element).value,\n\t\t\t);\n\t\t}\n\n\t\t// Variable\n\t\treturn localize(\n\t\t\t\"watchVariableAriaLabel\",\n\t\t\t\"{0}, value {1}\",\n\t\t\t(<Variable>element).name,\n\t\t\t(<Variable>element).value,\n\t\t);\n\t}\n}\n\nclass WatchExpressionsDragAndDrop implements ITreeDragAndDrop<IExpression> {\n\tconstructor(private debugService: IDebugService) {}\n\n\tonDragOver(\n\t\tdata: IDragAndDropData,\n\t\ttargetElement: IExpression | undefined,\n\t\ttargetIndex: number | undefined,\n\t\ttargetSector: ListViewTargetSector | undefined,\n\t\toriginalEvent: DragEvent,\n\t): boolean | ITreeDragOverReaction {\n\t\tif (!(data instanceof ElementsDragAndDropData)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst expressions = (data as ElementsDragAndDropData<IExpression>)\n\t\t\t.elements;\n\t\tif (!(expressions.length > 0 && expressions[0] instanceof Expression)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet dropEffectPosition: ListDragOverEffectPosition | undefined;\n\t\tif (targetIndex === undefined) {\n\t\t\t// Hovering over the list\n\t\t\tdropEffectPosition = ListDragOverEffectPosition.After;\n\t\t\ttargetIndex = -1;\n\t\t} else {\n\t\t\t// Hovering over an element\n\t\t\tswitch (targetSector) {\n\t\t\t\tcase ListViewTargetSector.TOP:\n\t\t\t\tcase ListViewTargetSector.CENTER_TOP:\n\t\t\t\t\tdropEffectPosition = ListDragOverEffectPosition.Before;\n\t\t\t\t\tbreak;\n\t\t\t\tcase ListViewTargetSector.CENTER_BOTTOM:\n\t\t\t\tcase ListViewTargetSector.BOTTOM:\n\t\t\t\t\tdropEffectPosition = ListDragOverEffectPosition.After;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\taccept: true,\n\t\t\teffect: {\n\t\t\t\ttype: ListDragOverEffectType.Move,\n\t\t\t\tposition: dropEffectPosition,\n\t\t\t},\n\t\t\tfeedback: [targetIndex],\n\t\t} satisfies ITreeDragOverReaction;\n\t}\n\n\tgetDragURI(element: IExpression): string | null {\n\t\tif (\n\t\t\t!(element instanceof Expression) ||\n\t\t\telement ===\n\t\t\t\tthis.debugService.getViewModel().getSelectedExpression()\n\t\t\t\t\t?.expression\n\t\t) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn element.getId();\n\t}\n\n\tgetDragLabel(elements: IExpression[]): string | undefined {\n\t\tif (elements.length === 1) {\n\t\t\treturn elements[0].name;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tdrop(\n\t\tdata: IDragAndDropData,\n\t\ttargetElement: IExpression,\n\t\ttargetIndex: number | undefined,\n\t\ttargetSector: ListViewTargetSector | undefined,\n\t\toriginalEvent: DragEvent,\n\t): void {\n\t\tif (!(data instanceof ElementsDragAndDropData)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst draggedElement = (data as ElementsDragAndDropData<IExpression>)\n\t\t\t.elements[0];\n\t\tif (!(draggedElement instanceof Expression)) {\n\t\t\tthrow new Error(\"Invalid dragged element\");\n\t\t}\n\n\t\tconst watches = this.debugService.getModel().getWatchExpressions();\n\t\tconst sourcePosition = watches.indexOf(draggedElement);\n\n\t\tlet targetPosition;\n\t\tif (targetElement instanceof Expression) {\n\t\t\ttargetPosition = watches.indexOf(targetElement);\n\n\t\t\tswitch (targetSector) {\n\t\t\t\tcase ListViewTargetSector.BOTTOM:\n\t\t\t\tcase ListViewTargetSector.CENTER_BOTTOM:\n\t\t\t\t\ttargetPosition++;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (sourcePosition < targetPosition) {\n\t\t\t\ttargetPosition--;\n\t\t\t}\n\t\t} else {\n\t\t\ttargetPosition = watches.length - 1;\n\t\t}\n\n\t\tthis.debugService.moveWatchExpression(\n\t\t\tdraggedElement.getId(),\n\t\t\ttargetPosition,\n\t\t);\n\t}\n\n\tdispose(): void {}\n}\n\nregisterAction2(\n\tclass Collapse extends ViewAction<WatchExpressionsView> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"watch.collapse\",\n\t\t\t\tviewId: WATCH_VIEW_ID,\n\t\t\t\ttitle: localize(\"collapse\", \"Collapse All\"),\n\t\t\t\tf1: false,\n\t\t\t\ticon: Codicon.collapseAll,\n\t\t\t\tprecondition: CONTEXT_WATCH_EXPRESSIONS_EXIST,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\torder: 30,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\twhen: ContextKeyExpr.equals(\"view\", WATCH_VIEW_ID),\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\trunInView(_accessor: ServicesAccessor, view: WatchExpressionsView) {\n\t\t\tview.collapseAll();\n\t\t}\n\t},\n);\n\nexport const ADD_WATCH_ID = \"workbench.debug.viewlet.action.addWatchExpression\"; // Use old and long id for backwards compatibility\nexport const ADD_WATCH_LABEL = localize(\"addWatchExpression\", \"Add Expression\");\n\nregisterAction2(\n\tclass AddWatchExpressionAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: ADD_WATCH_ID,\n\t\t\t\ttitle: ADD_WATCH_LABEL,\n\t\t\t\tf1: false,\n\t\t\t\ticon: watchExpressionsAdd,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\twhen: ContextKeyExpr.equals(\"view\", WATCH_VIEW_ID),\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor): void {\n\t\t\tconst debugService = accessor.get(IDebugService);\n\t\t\tdebugService.addWatchExpression();\n\t\t}\n\t},\n);\n\nexport const REMOVE_WATCH_EXPRESSIONS_COMMAND_ID =\n\t\"workbench.debug.viewlet.action.removeAllWatchExpressions\";\nexport const REMOVE_WATCH_EXPRESSIONS_LABEL = localize(\n\t\"removeAllWatchExpressions\",\n\t\"Remove All Expressions\",\n);\nregisterAction2(\n\tclass RemoveAllWatchExpressionsAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: REMOVE_WATCH_EXPRESSIONS_COMMAND_ID, // Use old and long id for backwards compatibility\n\t\t\t\ttitle: REMOVE_WATCH_EXPRESSIONS_LABEL,\n\t\t\t\tf1: false,\n\t\t\t\ticon: watchExpressionsRemoveAll,\n\t\t\t\tprecondition: CONTEXT_WATCH_EXPRESSIONS_EXIST,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\torder: 20,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\twhen: ContextKeyExpr.equals(\"view\", WATCH_VIEW_ID),\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor): void {\n\t\t\tconst debugService = accessor.get(IDebugService);\n\t\t\tdebugService.removeWatchExpressions();\n\t\t}\n\t},\n);\n"],
  "mappings": "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",
  "names": []
}
