{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/welcomeView.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { isMacintosh, isWeb } from \"../../../../base/common/platform.js\";\nimport {\n\tisCodeEditor,\n\tisDiffEditor,\n} from \"../../../../editor/browser/editorBrowser.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport type { ILocalizedString } from \"../../../../platform/action/common/action.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tContextKeyExpr,\n\ttype IContextKey,\n\tIContextKeyService,\n\tRawContextKey,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextMenuService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport {\n\tOpenFileAction,\n\tOpenFileFolderAction,\n\tOpenFolderAction,\n} from \"../../../browser/actions/workspaceActions.js\";\nimport { ViewPane } from \"../../../browser/parts/views/viewPane.js\";\nimport type { IViewletViewOptions } from \"../../../browser/parts/views/viewsViewlet.js\";\nimport { WorkbenchStateContext } from \"../../../common/contextkeys.js\";\nimport {\n\tExtensions,\n\tIViewDescriptorService,\n\ttype IViewsRegistry,\n\tViewContentGroups,\n} from \"../../../common/views.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport {\n\tCONTEXT_DEBUGGERS_AVAILABLE,\n\tCONTEXT_DEBUG_EXTENSION_AVAILABLE,\n\tIDebugService,\n} from \"../common/debug.js\";\nimport {\n\tDEBUG_CONFIGURE_COMMAND_ID,\n\tDEBUG_START_COMMAND_ID,\n\tSELECT_AND_START_ID,\n} from \"./debugCommands.js\";\n\nconst debugStartLanguageKey = \"debugStartLanguage\";\nconst CONTEXT_DEBUG_START_LANGUAGE = new RawContextKey<string>(\n\tdebugStartLanguageKey,\n\tundefined,\n);\nconst CONTEXT_DEBUGGER_INTERESTED_IN_ACTIVE_EDITOR = new RawContextKey<boolean>(\n\t\"debuggerInterestedInActiveEditor\",\n\tfalse,\n);\n\nexport class WelcomeView extends ViewPane {\n\tstatic readonly ID = \"workbench.debug.welcome\";\n\tstatic readonly LABEL: ILocalizedString = localize2(\"run\", \"Run\");\n\n\tprivate debugStartLanguageContext: IContextKey<string | undefined>;\n\tprivate debuggerInterestedContext: IContextKey<boolean>;\n\n\tconstructor(\n\t\toptions: IViewletViewOptions,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IStorageService storageSevice: IStorageService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IHoverService hoverService: IHoverService,\n\t) {\n\t\tsuper(\n\t\t\toptions,\n\t\t\tkeybindingService,\n\t\t\tcontextMenuService,\n\t\t\tconfigurationService,\n\t\t\tcontextKeyService,\n\t\t\tviewDescriptorService,\n\t\t\tinstantiationService,\n\t\t\topenerService,\n\t\t\tthemeService,\n\t\t\ttelemetryService,\n\t\t\thoverService,\n\t\t);\n\n\t\tthis.debugStartLanguageContext =\n\t\t\tCONTEXT_DEBUG_START_LANGUAGE.bindTo(contextKeyService);\n\t\tthis.debuggerInterestedContext =\n\t\t\tCONTEXT_DEBUGGER_INTERESTED_IN_ACTIVE_EDITOR.bindTo(\n\t\t\t\tcontextKeyService,\n\t\t\t);\n\t\tconst lastSetLanguage = storageSevice.get(\n\t\t\tdebugStartLanguageKey,\n\t\t\tStorageScope.WORKSPACE,\n\t\t);\n\t\tthis.debugStartLanguageContext.set(lastSetLanguage);\n\n\t\tconst setContextKey = () => {\n\t\t\tlet editorControl = this.editorService.activeTextEditorControl;\n\t\t\tif (isDiffEditor(editorControl)) {\n\t\t\t\teditorControl = editorControl.getModifiedEditor();\n\t\t\t}\n\n\t\t\tif (isCodeEditor(editorControl)) {\n\t\t\t\tconst model = editorControl.getModel();\n\t\t\t\tconst language = model ? model.getLanguageId() : undefined;\n\t\t\t\tif (\n\t\t\t\t\tlanguage &&\n\t\t\t\t\tthis.debugService\n\t\t\t\t\t\t.getAdapterManager()\n\t\t\t\t\t\t.someDebuggerInterestedInLanguage(language)\n\t\t\t\t) {\n\t\t\t\t\tthis.debugStartLanguageContext.set(language);\n\t\t\t\t\tthis.debuggerInterestedContext.set(true);\n\t\t\t\t\tstorageSevice.store(\n\t\t\t\t\t\tdebugStartLanguageKey,\n\t\t\t\t\t\tlanguage,\n\t\t\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\t\t\tStorageTarget.MACHINE,\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.debuggerInterestedContext.set(false);\n\t\t};\n\n\t\tconst disposables = new DisposableStore();\n\t\tthis._register(disposables);\n\n\t\tthis._register(\n\t\t\teditorService.onDidActiveEditorChange(() => {\n\t\t\t\tdisposables.clear();\n\n\t\t\t\tlet editorControl = this.editorService.activeTextEditorControl;\n\t\t\t\tif (isDiffEditor(editorControl)) {\n\t\t\t\t\teditorControl = editorControl.getModifiedEditor();\n\t\t\t\t}\n\n\t\t\t\tif (isCodeEditor(editorControl)) {\n\t\t\t\t\tdisposables.add(\n\t\t\t\t\t\teditorControl.onDidChangeModelLanguage(setContextKey),\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tsetContextKey();\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.debugService\n\t\t\t\t.getAdapterManager()\n\t\t\t\t.onDidRegisterDebugger(setContextKey),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.onDidChangeBodyVisibility((visible) => {\n\t\t\t\tif (visible) {\n\t\t\t\t\tsetContextKey();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tsetContextKey();\n\n\t\tconst debugKeybinding = this.keybindingService.lookupKeybinding(\n\t\t\tDEBUG_START_COMMAND_ID,\n\t\t);\n\t\tdebugKeybindingLabel = debugKeybinding\n\t\t\t? ` (${debugKeybinding.getLabel()})`\n\t\t\t: \"\";\n\t}\n\n\toverride shouldShowWelcome(): boolean {\n\t\treturn true;\n\t}\n}\n\nconst viewsRegistry = Registry.as<IViewsRegistry>(Extensions.ViewsRegistry);\nviewsRegistry.registerViewWelcomeContent(WelcomeView.ID, {\n\tcontent: localize(\n\t\t{\n\t\t\tkey: \"openAFileWhichCanBeDebugged\",\n\t\t\tcomment: [\n\t\t\t\t'Please do not translate the word \"command\", it is part of our internal syntax which must not change',\n\t\t\t\t'{Locked=\"](command:{0})\"}',\n\t\t\t],\n\t\t},\n\t\t\"[Open a file](command:{0}) which can be debugged or run.\",\n\t\tisMacintosh && !isWeb ? OpenFileFolderAction.ID : OpenFileAction.ID,\n\t),\n\twhen: ContextKeyExpr.and(\n\t\tCONTEXT_DEBUGGERS_AVAILABLE,\n\t\tCONTEXT_DEBUGGER_INTERESTED_IN_ACTIVE_EDITOR.toNegated(),\n\t),\n\tgroup: ViewContentGroups.Open,\n});\n\nlet debugKeybindingLabel = \"\";\nviewsRegistry.registerViewWelcomeContent(WelcomeView.ID, {\n\tcontent: `[${localize(\"runAndDebugAction\", \"Run and Debug\")}${debugKeybindingLabel}](command:${DEBUG_START_COMMAND_ID})`,\n\twhen: CONTEXT_DEBUGGERS_AVAILABLE,\n\tgroup: ViewContentGroups.Debug,\n\t// Allow inserting more buttons directly after this one (by setting order to 1).\n\torder: 1,\n});\n\nviewsRegistry.registerViewWelcomeContent(WelcomeView.ID, {\n\tcontent: `[${localize(\"detectThenRunAndDebug\", \"Show all automatic debug configurations\")}](command:${SELECT_AND_START_ID}).`,\n\twhen: CONTEXT_DEBUGGERS_AVAILABLE,\n\tgroup: ViewContentGroups.Debug,\n\torder: 10,\n});\n\nviewsRegistry.registerViewWelcomeContent(WelcomeView.ID, {\n\tcontent: localize(\n\t\t{\n\t\t\tkey: \"customizeRunAndDebug\",\n\t\t\tcomment: [\n\t\t\t\t'Please do not translate the word \"command\", it is part of our internal syntax which must not change',\n\t\t\t\t'{Locked=\"](command:{0})\"}',\n\t\t\t],\n\t\t},\n\t\t\"To customize Run and Debug [create a launch.json file](command:{0}).\",\n\t\tDEBUG_CONFIGURE_COMMAND_ID,\n\t),\n\twhen: ContextKeyExpr.and(\n\t\tCONTEXT_DEBUGGERS_AVAILABLE,\n\t\tWorkbenchStateContext.notEqualsTo(\"empty\"),\n\t),\n\tgroup: ViewContentGroups.Debug,\n});\n\nviewsRegistry.registerViewWelcomeContent(WelcomeView.ID, {\n\tcontent: localize(\n\t\t{\n\t\t\tkey: \"customizeRunAndDebugOpenFolder\",\n\t\t\tcomment: [\n\t\t\t\t'Please do not translate the word \"command\", it is part of our internal syntax which must not change',\n\t\t\t\t'Please do not translate \"launch.json\", it is the specific configuration file name',\n\t\t\t\t'{Locked=\"](command:{0})\"}',\n\t\t\t],\n\t\t},\n\t\t\"To customize Run and Debug, [open a folder](command:{0}) and create a launch.json file.\",\n\t\tisMacintosh && !isWeb ? OpenFileFolderAction.ID : OpenFolderAction.ID,\n\t),\n\twhen: ContextKeyExpr.and(\n\t\tCONTEXT_DEBUGGERS_AVAILABLE,\n\t\tWorkbenchStateContext.isEqualTo(\"empty\"),\n\t),\n\tgroup: ViewContentGroups.Debug,\n});\n\nviewsRegistry.registerViewWelcomeContent(WelcomeView.ID, {\n\tcontent: localize(\n\t\t\"allDebuggersDisabled\",\n\t\t\"All debug extensions are disabled. Enable a debug extension or install a new one from the Marketplace.\",\n\t),\n\twhen: CONTEXT_DEBUG_EXTENSION_AVAILABLE.toNegated(),\n\tgroup: ViewContentGroups.Debug,\n});\n"],
  "mappings": "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",
  "names": []
}
