{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/linkDetector.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getWindow } from \"../../../../base/browser/dom.js\";\nimport { StandardKeyboardEvent } from \"../../../../base/browser/keyboardEvent.js\";\nimport { getDefaultHoverDelegate } from \"../../../../base/browser/ui/hover/hoverDelegateFactory.js\";\nimport { KeyCode } from \"../../../../base/common/keyCodes.js\";\nimport type { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport * as osPath from \"../../../../base/common/path.js\";\nimport * as platform from \"../../../../base/common/platform.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport { ITunnelService } from \"../../../../platform/tunnel/common/tunnel.js\";\nimport type { IWorkspaceFolder } from \"../../../../platform/workspace/common/workspace.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { IWorkbenchEnvironmentService } from \"../../../services/environment/common/environmentService.js\";\nimport { IPathService } from \"../../../services/path/common/pathService.js\";\nimport type { IDebugSession } from \"../common/debug.js\";\n\nconst CONTROL_CODES = \"\\\\u0000-\\\\u0020\\\\u007f-\\\\u009f\";\nconst WEB_LINK_REGEX = new RegExp(\n\t\"(?:[a-zA-Z][a-zA-Z0-9+.-]{2,}:\\\\/\\\\/|data:|www\\\\.)[^\\\\s\" +\n\t\tCONTROL_CODES +\n\t\t'\"]{2,}[^\\\\s' +\n\t\tCONTROL_CODES +\n\t\t\"\\\"')}\\\\],:;.!?]\",\n\t\"ug\",\n);\n\nconst WIN_ABSOLUTE_PATH = /(?:[a-zA-Z]:(?:(?:\\\\|\\/)[\\w.-]*)+)/;\nconst WIN_RELATIVE_PATH = /(?:(?:~|\\.)(?:(?:\\\\|\\/)[\\w.-]*)+)/;\nconst WIN_PATH = new RegExp(\n\t`(${WIN_ABSOLUTE_PATH.source}|${WIN_RELATIVE_PATH.source})`,\n);\nconst POSIX_PATH = /((?:~|\\.)?(?:\\/[\\w.-]*)+)/;\nconst LINE_COLUMN = /(?::([\\d]+))?(?::([\\d]+))?/;\nconst PATH_LINK_REGEX = new RegExp(\n\t`${platform.isWindows ? WIN_PATH.source : POSIX_PATH.source}${LINE_COLUMN.source}`,\n\t\"g\",\n);\nconst LINE_COLUMN_REGEX = /:([\\d]+)(?::([\\d]+))?$/;\n\nconst MAX_LENGTH = 2000;\n\ntype LinkKind = \"web\" | \"path\" | \"text\";\ntype LinkPart = {\n\tkind: LinkKind;\n\tvalue: string;\n\tcaptures: string[];\n};\n\nexport enum DebugLinkHoverBehavior {\n\t/** A nice workbench hover */\n\tRich = 0,\n\t/**\n\t * Basic browser hover\n\t * @deprecated Consumers should adopt `rich` by propagating disposables appropriately\n\t */\n\tBasic = 1,\n\t/** No hover */\n\tNone = 2,\n}\n\n/** Store implies HoverBehavior=rich */\nexport type DebugLinkHoverBehaviorTypeData =\n\t| { type: DebugLinkHoverBehavior.None | DebugLinkHoverBehavior.Basic }\n\t| { type: DebugLinkHoverBehavior.Rich; store: DisposableStore };\n\nexport interface ILinkDetector {\n\tlinkify(\n\t\ttext: string,\n\t\tsplitLines?: boolean,\n\t\tworkspaceFolder?: IWorkspaceFolder,\n\t\tincludeFulltext?: boolean,\n\t\thoverBehavior?: DebugLinkHoverBehaviorTypeData,\n\t): HTMLElement;\n\tlinkifyLocation(\n\t\ttext: string,\n\t\tlocationReference: number,\n\t\tsession: IDebugSession,\n\t\thoverBehavior?: DebugLinkHoverBehaviorTypeData,\n\t): HTMLElement;\n}\n\nexport class LinkDetector implements ILinkDetector {\n\tconstructor(\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@IPathService private readonly pathService: IPathService,\n\t\t@ITunnelService private readonly tunnelService: ITunnelService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t) {\n\t\t// noop\n\t}\n\n\t/**\n\t * Matches and handles web urls, absolute and relative file links in the string provided.\n\t * Returns <span/> element that wraps the processed string, where matched links are replaced by <a/>.\n\t * 'onclick' event is attached to all anchored links that opens them in the editor.\n\t * When splitLines is true, each line of the text, even if it contains no links, is wrapped in a <span>\n\t * and added as a child of the returned <span>.\n\t * If a `hoverBehavior` is passed, hovers may be added using the workbench hover service.\n\t * This should be preferred for new code where hovers are desirable.\n\t */\n\tlinkify(\n\t\ttext: string,\n\t\tsplitLines?: boolean,\n\t\tworkspaceFolder?: IWorkspaceFolder,\n\t\tincludeFulltext?: boolean,\n\t\thoverBehavior?: DebugLinkHoverBehaviorTypeData,\n\t): HTMLElement {\n\t\treturn this._linkify(\n\t\t\ttext,\n\t\t\tsplitLines,\n\t\t\tworkspaceFolder,\n\t\t\tincludeFulltext,\n\t\t\thoverBehavior,\n\t\t);\n\t}\n\n\tprivate _linkify(\n\t\ttext: string,\n\t\tsplitLines?: boolean,\n\t\tworkspaceFolder?: IWorkspaceFolder,\n\t\tincludeFulltext?: boolean,\n\t\thoverBehavior?: DebugLinkHoverBehaviorTypeData,\n\t\tdefaultRef?: { locationReference: number; session: IDebugSession },\n\t): HTMLElement {\n\t\tif (splitLines) {\n\t\t\tconst lines = text.split(\"\\n\");\n\t\t\tfor (let i = 0; i < lines.length - 1; i++) {\n\t\t\t\tlines[i] = lines[i] + \"\\n\";\n\t\t\t}\n\t\t\tif (!lines[lines.length - 1]) {\n\t\t\t\t// Remove the last element ('') that split added.\n\t\t\t\tlines.pop();\n\t\t\t}\n\t\t\tconst elements = lines.map((line) =>\n\t\t\t\tthis._linkify(\n\t\t\t\t\tline,\n\t\t\t\t\tfalse,\n\t\t\t\t\tworkspaceFolder,\n\t\t\t\t\tincludeFulltext,\n\t\t\t\t\thoverBehavior,\n\t\t\t\t\tdefaultRef,\n\t\t\t\t),\n\t\t\t);\n\t\t\tif (elements.length === 1) {\n\t\t\t\t// Do not wrap single line with extra span.\n\t\t\t\treturn elements[0];\n\t\t\t}\n\t\t\tconst container = document.createElement(\"span\");\n\t\t\telements.forEach((e) => container.appendChild(e));\n\t\t\treturn container;\n\t\t}\n\n\t\tconst container = document.createElement(\"span\");\n\t\tfor (const part of this.detectLinks(text)) {\n\t\t\ttry {\n\t\t\t\tswitch (part.kind) {\n\t\t\t\t\tcase \"text\":\n\t\t\t\t\t\tcontainer.appendChild(\n\t\t\t\t\t\t\tdefaultRef\n\t\t\t\t\t\t\t\t? this.linkifyLocation(\n\t\t\t\t\t\t\t\t\t\tpart.value,\n\t\t\t\t\t\t\t\t\t\tdefaultRef.locationReference,\n\t\t\t\t\t\t\t\t\t\tdefaultRef.session,\n\t\t\t\t\t\t\t\t\t\thoverBehavior,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: document.createTextNode(part.value),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"web\":\n\t\t\t\t\t\tcontainer.appendChild(\n\t\t\t\t\t\t\tthis.createWebLink(\n\t\t\t\t\t\t\t\tincludeFulltext ? text : undefined,\n\t\t\t\t\t\t\t\tpart.value,\n\t\t\t\t\t\t\t\thoverBehavior,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"path\": {\n\t\t\t\t\t\tconst path = part.captures[0];\n\t\t\t\t\t\tconst lineNumber = part.captures[1]\n\t\t\t\t\t\t\t? Number(part.captures[1])\n\t\t\t\t\t\t\t: 0;\n\t\t\t\t\t\tconst columnNumber = part.captures[2]\n\t\t\t\t\t\t\t? Number(part.captures[2])\n\t\t\t\t\t\t\t: 0;\n\t\t\t\t\t\tcontainer.appendChild(\n\t\t\t\t\t\t\tthis.createPathLink(\n\t\t\t\t\t\t\t\tincludeFulltext ? text : undefined,\n\t\t\t\t\t\t\t\tpart.value,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tlineNumber,\n\t\t\t\t\t\t\t\tcolumnNumber,\n\t\t\t\t\t\t\t\tworkspaceFolder,\n\t\t\t\t\t\t\t\thoverBehavior,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tcontainer.appendChild(document.createTextNode(part.value));\n\t\t\t}\n\t\t}\n\t\treturn container;\n\t}\n\n\t/**\n\t * Linkifies a location reference.\n\t */\n\tlinkifyLocation(\n\t\ttext: string,\n\t\tlocationReference: number,\n\t\tsession: IDebugSession,\n\t\thoverBehavior?: DebugLinkHoverBehaviorTypeData,\n\t) {\n\t\tconst link = this.createLink(text);\n\t\tthis.decorateLink(\n\t\t\tlink,\n\t\t\tundefined,\n\t\t\ttext,\n\t\t\thoverBehavior,\n\t\t\tasync (preserveFocus: boolean) => {\n\t\t\t\tconst location =\n\t\t\t\t\tawait session.resolveLocationReference(locationReference);\n\t\t\t\tawait location.source.openInEditor(\n\t\t\t\t\tthis.editorService,\n\t\t\t\t\t{\n\t\t\t\t\t\tstartLineNumber: location.line,\n\t\t\t\t\t\tstartColumn: location.column,\n\t\t\t\t\t\tendLineNumber: location.endLine ?? location.line,\n\t\t\t\t\t\tendColumn: location.endColumn ?? location.column,\n\t\t\t\t\t},\n\t\t\t\t\tpreserveFocus,\n\t\t\t\t);\n\t\t\t},\n\t\t);\n\n\t\treturn link;\n\t}\n\n\t/**\n\t * Makes an {@link ILinkDetector} that links everything in the output to the\n\t * reference if they don't have other explicit links.\n\t */\n\tmakeReferencedLinkDetector(\n\t\tlocationReference: number,\n\t\tsession: IDebugSession,\n\t): ILinkDetector {\n\t\treturn {\n\t\t\tlinkify: (\n\t\t\t\ttext,\n\t\t\t\tsplitLines,\n\t\t\t\tworkspaceFolder,\n\t\t\t\tincludeFulltext,\n\t\t\t\thoverBehavior,\n\t\t\t) =>\n\t\t\t\tthis._linkify(\n\t\t\t\t\ttext,\n\t\t\t\t\tsplitLines,\n\t\t\t\t\tworkspaceFolder,\n\t\t\t\t\tincludeFulltext,\n\t\t\t\t\thoverBehavior,\n\t\t\t\t\t{ locationReference, session },\n\t\t\t\t),\n\t\t\tlinkifyLocation: this.linkifyLocation.bind(this),\n\t\t};\n\t}\n\n\tprivate createWebLink(\n\t\tfulltext: string | undefined,\n\t\turl: string,\n\t\thoverBehavior?: DebugLinkHoverBehaviorTypeData,\n\t): Node {\n\t\tconst link = this.createLink(url);\n\n\t\tlet uri = URI.parse(url);\n\t\t// if the URI ends with something like `foo.js:12:3`, parse\n\t\t// that into a fragment to reveal that location (#150702)\n\t\tconst lineCol = LINE_COLUMN_REGEX.exec(uri.path);\n\t\tif (lineCol) {\n\t\t\turi = uri.with({\n\t\t\t\tpath: uri.path.slice(0, lineCol.index),\n\t\t\t\tfragment: `L${lineCol[0].slice(1)}`,\n\t\t\t});\n\t\t}\n\n\t\tthis.decorateLink(link, uri, fulltext, hoverBehavior, async () => {\n\t\t\tif (uri.scheme === Schemas.file) {\n\t\t\t\t// Just using fsPath here is unsafe: https://github.com/microsoft/vscode/issues/109076\n\t\t\t\tconst fsPath = uri.fsPath;\n\t\t\t\tconst path = await this.pathService.path;\n\t\t\t\tconst fileUrl = osPath.normalize(\n\t\t\t\t\tpath.sep === osPath.posix.sep && platform.isWindows\n\t\t\t\t\t\t? fsPath.replace(/\\\\/g, osPath.posix.sep)\n\t\t\t\t\t\t: fsPath,\n\t\t\t\t);\n\n\t\t\t\tconst fileUri = URI.parse(fileUrl);\n\t\t\t\tconst exists = await this.fileService.exists(fileUri);\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tawait this.editorService.openEditor({\n\t\t\t\t\tresource: fileUri,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tpinned: true,\n\t\t\t\t\t\tselection: lineCol\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\tstartLineNumber: +lineCol[1],\n\t\t\t\t\t\t\t\t\tstartColumn: +lineCol[2],\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.openerService.open(url, {\n\t\t\t\tallowTunneling:\n\t\t\t\t\t!!this.environmentService.remoteAuthority &&\n\t\t\t\t\tthis.configurationService.getValue(\"remote.forwardOnOpen\"),\n\t\t\t});\n\t\t});\n\n\t\treturn link;\n\t}\n\n\tprivate createPathLink(\n\t\tfulltext: string | undefined,\n\t\ttext: string,\n\t\tpath: string,\n\t\tlineNumber: number,\n\t\tcolumnNumber: number,\n\t\tworkspaceFolder: IWorkspaceFolder | undefined,\n\t\thoverBehavior?: DebugLinkHoverBehaviorTypeData,\n\t): Node {\n\t\tif (path[0] === \"/\" && path[1] === \"/\") {\n\t\t\t// Most likely a url part which did not match, for example ftp://path.\n\t\t\treturn document.createTextNode(text);\n\t\t}\n\n\t\tconst options = {\n\t\t\tselection: {\n\t\t\t\tstartLineNumber: lineNumber,\n\t\t\t\tstartColumn: columnNumber,\n\t\t\t},\n\t\t};\n\t\tif (path[0] === \".\") {\n\t\t\tif (!workspaceFolder) {\n\t\t\t\treturn document.createTextNode(text);\n\t\t\t}\n\t\t\tconst uri = workspaceFolder.toResource(path);\n\t\t\tconst link = this.createLink(text);\n\t\t\tthis.decorateLink(\n\t\t\t\tlink,\n\t\t\t\turi,\n\t\t\t\tfulltext,\n\t\t\t\thoverBehavior,\n\t\t\t\t(preserveFocus: boolean) =>\n\t\t\t\t\tthis.editorService.openEditor({\n\t\t\t\t\t\tresource: uri,\n\t\t\t\t\t\toptions: { ...options, preserveFocus },\n\t\t\t\t\t}),\n\t\t\t);\n\t\t\treturn link;\n\t\t}\n\n\t\tif (path[0] === \"~\") {\n\t\t\tconst userHome = this.pathService.resolvedUserHome;\n\t\t\tif (userHome) {\n\t\t\t\tpath = osPath.join(userHome.fsPath, path.substring(1));\n\t\t\t}\n\t\t}\n\n\t\tconst link = this.createLink(text);\n\t\tlink.tabIndex = 0;\n\t\tconst uri = URI.file(osPath.normalize(path));\n\t\tthis.fileService\n\t\t\t.stat(uri)\n\t\t\t.then((stat) => {\n\t\t\t\tif (stat.isDirectory) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.decorateLink(\n\t\t\t\t\tlink,\n\t\t\t\t\turi,\n\t\t\t\t\tfulltext,\n\t\t\t\t\thoverBehavior,\n\t\t\t\t\t(preserveFocus: boolean) =>\n\t\t\t\t\t\tthis.editorService.openEditor({\n\t\t\t\t\t\t\tresource: uri,\n\t\t\t\t\t\t\toptions: { ...options, preserveFocus },\n\t\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\t// If the uri can not be resolved we should not spam the console with error, remain quite #86587\n\t\t\t});\n\t\treturn link;\n\t}\n\n\tprivate createLink(text: string): HTMLElement {\n\t\tconst link = document.createElement(\"a\");\n\t\tlink.textContent = text;\n\t\treturn link;\n\t}\n\n\tprivate decorateLink(\n\t\tlink: HTMLElement,\n\t\turi: URI | undefined,\n\t\tfulltext: string | undefined,\n\t\thoverBehavior: DebugLinkHoverBehaviorTypeData | undefined,\n\t\tonClick: (preserveFocus: boolean) => void,\n\t) {\n\t\tlink.classList.add(\"link\");\n\t\tconst followLink =\n\t\t\turi && this.tunnelService.canTunnel(uri)\n\t\t\t\t? localize(\n\t\t\t\t\t\t\"followForwardedLink\",\n\t\t\t\t\t\t\"follow link using forwarded port\",\n\t\t\t\t\t)\n\t\t\t\t: localize(\"followLink\", \"follow link\");\n\t\tconst title = (link.ariaLabel = fulltext\n\t\t\t? platform.isMacintosh\n\t\t\t\t? localize(\n\t\t\t\t\t\t\"fileLinkWithPathMac\",\n\t\t\t\t\t\t\"Cmd + click to {0}\\n{1}\",\n\t\t\t\t\t\tfollowLink,\n\t\t\t\t\t\tfulltext,\n\t\t\t\t\t)\n\t\t\t\t: localize(\n\t\t\t\t\t\t\"fileLinkWithPath\",\n\t\t\t\t\t\t\"Ctrl + click to {0}\\n{1}\",\n\t\t\t\t\t\tfollowLink,\n\t\t\t\t\t\tfulltext,\n\t\t\t\t\t)\n\t\t\t: platform.isMacintosh\n\t\t\t\t? localize(\"fileLinkMac\", \"Cmd + click to {0}\", followLink)\n\t\t\t\t: localize(\"fileLink\", \"Ctrl + click to {0}\", followLink));\n\n\t\tif (hoverBehavior?.type === DebugLinkHoverBehavior.Rich) {\n\t\t\thoverBehavior.store.add(\n\t\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\t\tgetDefaultHoverDelegate(\"element\"),\n\t\t\t\t\tlink,\n\t\t\t\t\ttitle,\n\t\t\t\t),\n\t\t\t);\n\t\t} else if (hoverBehavior?.type !== DebugLinkHoverBehavior.None) {\n\t\t\tlink.title = title;\n\t\t}\n\n\t\tlink.onmousemove = (event) => {\n\t\t\tlink.classList.toggle(\n\t\t\t\t\"pointer\",\n\t\t\t\tplatform.isMacintosh ? event.metaKey : event.ctrlKey,\n\t\t\t);\n\t\t};\n\t\tlink.onmouseleave = () => link.classList.remove(\"pointer\");\n\t\tlink.onclick = (event) => {\n\t\t\tconst selection = getWindow(link).getSelection();\n\t\t\tif (!selection || selection.type === \"Range\") {\n\t\t\t\treturn; // do not navigate when user is selecting\n\t\t\t}\n\t\t\tif (!(platform.isMacintosh ? event.metaKey : event.ctrlKey)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopImmediatePropagation();\n\t\t\tonClick(false);\n\t\t};\n\t\tlink.onkeydown = (e) => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\tif (\n\t\t\t\tevent.keyCode === KeyCode.Enter ||\n\t\t\t\tevent.keyCode === KeyCode.Space\n\t\t\t) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tonClick(event.keyCode === KeyCode.Space);\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate detectLinks(text: string): LinkPart[] {\n\t\tif (text.length > MAX_LENGTH) {\n\t\t\treturn [{ kind: \"text\", value: text, captures: [] }];\n\t\t}\n\n\t\tconst regexes: RegExp[] = [WEB_LINK_REGEX, PATH_LINK_REGEX];\n\t\tconst kinds: LinkKind[] = [\"web\", \"path\"];\n\t\tconst result: LinkPart[] = [];\n\n\t\tconst splitOne = (text: string, regexIndex: number) => {\n\t\t\tif (regexIndex >= regexes.length) {\n\t\t\t\tresult.push({ value: text, kind: \"text\", captures: [] });\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst regex = regexes[regexIndex];\n\t\t\tlet currentIndex = 0;\n\t\t\tlet match;\n\t\t\tregex.lastIndex = 0;\n\t\t\twhile ((match = regex.exec(text)) !== null) {\n\t\t\t\tconst stringBeforeMatch = text.substring(\n\t\t\t\t\tcurrentIndex,\n\t\t\t\t\tmatch.index,\n\t\t\t\t);\n\t\t\t\tif (stringBeforeMatch) {\n\t\t\t\t\tsplitOne(stringBeforeMatch, regexIndex + 1);\n\t\t\t\t}\n\t\t\t\tconst value = match[0];\n\t\t\t\tresult.push({\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tkind: kinds[regexIndex],\n\t\t\t\t\tcaptures: match.slice(1),\n\t\t\t\t});\n\t\t\t\tcurrentIndex = match.index + value.length;\n\t\t\t}\n\t\t\tconst stringAfterMatches = text.substring(currentIndex);\n\t\t\tif (stringAfterMatches) {\n\t\t\t\tsplitOne(stringAfterMatches, regexIndex + 1);\n\t\t\t}\n\t\t};\n\n\t\tsplitOne(text, 0);\n\t\treturn result;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["DebugLinkHoverBehavior", "container", "uri", "link", "text"]
}
