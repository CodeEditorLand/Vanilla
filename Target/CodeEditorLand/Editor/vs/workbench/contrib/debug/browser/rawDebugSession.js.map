{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/rawDebugSession.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\nimport { Event, Emitter } from '../../../../base/common/event.js';\nimport * as objects from '../../../../base/common/objects.js';\nimport { toAction } from '../../../../base/common/actions.js';\nimport * as errors from '../../../../base/common/errors.js';\nimport { createErrorWithActions } from '../../../../base/common/errorMessage.js';\nimport { formatPII, isUri } from '../common/debugUtils.js';\nimport { IDebugAdapter, IConfig, AdapterEndEvent, IDebugger } from '../common/debug.js';\nimport { IExtensionHostDebugService, IOpenExtensionWindowResult } from '../../../../platform/debug/common/extensionHostDebug.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { IDisposable, dispose } from '../../../../base/common/lifecycle.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nimport { Schemas } from '../../../../base/common/network.js';\n\n/**\n * This interface represents a single command line argument split into a \"prefix\" and a \"path\" half.\n * The optional \"prefix\" contains arbitrary text and the optional \"path\" contains a file system path.\n * Concatenating both results in the original command line argument.\n */\ninterface ILaunchVSCodeArgument {\n\tprefix?: string;\n\tpath?: string;\n}\n\ninterface ILaunchVSCodeArguments {\n\targs: ILaunchVSCodeArgument[];\n\tdebugRenderer?: boolean;\n\tenv?: { [key: string]: string | null };\n}\n\n/**\n * Encapsulates the DebugAdapter lifecycle and some idiosyncrasies of the Debug Adapter Protocol.\n */\nexport class RawDebugSession implements IDisposable {\n\n\tprivate allThreadsContinued = true;\n\tprivate _readyForBreakpoints = false;\n\tprivate _capabilities: DebugProtocol.Capabilities;\n\n\t// shutdown\n\tprivate debugAdapterStopped = false;\n\tprivate inShutdown = false;\n\tprivate terminated = false;\n\tprivate firedAdapterExitEvent = false;\n\n\t// telemetry\n\tprivate startTime = 0;\n\tprivate didReceiveStoppedEvent = false;\n\n\t// DAP events\n\tprivate readonly _onDidInitialize = new Emitter<DebugProtocol.InitializedEvent>();\n\tprivate readonly _onDidStop = new Emitter<DebugProtocol.StoppedEvent>();\n\tprivate readonly _onDidContinued = new Emitter<DebugProtocol.ContinuedEvent>();\n\tprivate readonly _onDidTerminateDebugee = new Emitter<DebugProtocol.TerminatedEvent>();\n\tprivate readonly _onDidExitDebugee = new Emitter<DebugProtocol.ExitedEvent>();\n\tprivate readonly _onDidThread = new Emitter<DebugProtocol.ThreadEvent>();\n\tprivate readonly _onDidOutput = new Emitter<DebugProtocol.OutputEvent>();\n\tprivate readonly _onDidBreakpoint = new Emitter<DebugProtocol.BreakpointEvent>();\n\tprivate readonly _onDidLoadedSource = new Emitter<DebugProtocol.LoadedSourceEvent>();\n\tprivate readonly _onDidProgressStart = new Emitter<DebugProtocol.ProgressStartEvent>();\n\tprivate readonly _onDidProgressUpdate = new Emitter<DebugProtocol.ProgressUpdateEvent>();\n\tprivate readonly _onDidProgressEnd = new Emitter<DebugProtocol.ProgressEndEvent>();\n\tprivate readonly _onDidInvalidated = new Emitter<DebugProtocol.InvalidatedEvent>();\n\tprivate readonly _onDidInvalidateMemory = new Emitter<DebugProtocol.MemoryEvent>();\n\tprivate readonly _onDidCustomEvent = new Emitter<DebugProtocol.Event>();\n\tprivate readonly _onDidEvent = new Emitter<DebugProtocol.Event>();\n\n\t// DA events\n\tprivate readonly _onDidExitAdapter = new Emitter<AdapterEndEvent>();\n\tprivate debugAdapter: IDebugAdapter | null;\n\tprivate stoppedSinceLastStep = false;\n\n\tprivate toDispose: IDisposable[] = [];\n\n\tconstructor(\n\t\tdebugAdapter: IDebugAdapter,\n\t\tpublic readonly dbgr: IDebugger,\n\t\tprivate readonly sessionId: string,\n\t\tprivate readonly name: string,\n\t\t@IExtensionHostDebugService private readonly extensionHostDebugService: IExtensionHostDebugService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IDialogService private readonly dialogSerivce: IDialogService,\n\t) {\n\t\tthis.debugAdapter = debugAdapter;\n\t\tthis._capabilities = Object.create(null);\n\n\t\tthis.toDispose.push(this.debugAdapter.onError(err => {\n\t\t\tthis.shutdown(err);\n\t\t}));\n\n\t\tthis.toDispose.push(this.debugAdapter.onExit(code => {\n\t\t\tif (code !== 0) {\n\t\t\t\tthis.shutdown(new Error(`exit code: ${code}`));\n\t\t\t} else {\n\t\t\t\t// normal exit\n\t\t\t\tthis.shutdown();\n\t\t\t}\n\t\t}));\n\n\t\tthis.debugAdapter.onEvent(event => {\n\t\t\tswitch (event.event) {\n\t\t\t\tcase 'initialized':\n\t\t\t\t\tthis._readyForBreakpoints = true;\n\t\t\t\t\tthis._onDidInitialize.fire(event);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'loadedSource':\n\t\t\t\t\tthis._onDidLoadedSource.fire(<DebugProtocol.LoadedSourceEvent>event);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'capabilities':\n\t\t\t\t\tif (event.body) {\n\t\t\t\t\t\tconst capabilities = (<DebugProtocol.CapabilitiesEvent>event).body.capabilities;\n\t\t\t\t\t\tthis.mergeCapabilities(capabilities);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'stopped':\n\t\t\t\t\tthis.didReceiveStoppedEvent = true;\t\t// telemetry: remember that debugger stopped successfully\n\t\t\t\t\tthis.stoppedSinceLastStep = true;\n\t\t\t\t\tthis._onDidStop.fire(<DebugProtocol.StoppedEvent>event);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'continued':\n\t\t\t\t\tthis.allThreadsContinued = (<DebugProtocol.ContinuedEvent>event).body.allThreadsContinued === false ? false : true;\n\t\t\t\t\tthis._onDidContinued.fire(<DebugProtocol.ContinuedEvent>event);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'thread':\n\t\t\t\t\tthis._onDidThread.fire(<DebugProtocol.ThreadEvent>event);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'output':\n\t\t\t\t\tthis._onDidOutput.fire(<DebugProtocol.OutputEvent>event);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'breakpoint':\n\t\t\t\t\tthis._onDidBreakpoint.fire(<DebugProtocol.BreakpointEvent>event);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'terminated':\n\t\t\t\t\tthis._onDidTerminateDebugee.fire(<DebugProtocol.TerminatedEvent>event);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'exited':\n\t\t\t\t\tthis._onDidExitDebugee.fire(<DebugProtocol.ExitedEvent>event);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'progressStart':\n\t\t\t\t\tthis._onDidProgressStart.fire(event as DebugProtocol.ProgressStartEvent);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'progressUpdate':\n\t\t\t\t\tthis._onDidProgressUpdate.fire(event as DebugProtocol.ProgressUpdateEvent);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'progressEnd':\n\t\t\t\t\tthis._onDidProgressEnd.fire(event as DebugProtocol.ProgressEndEvent);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'invalidated':\n\t\t\t\t\tthis._onDidInvalidated.fire(event as DebugProtocol.InvalidatedEvent);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'memory':\n\t\t\t\t\tthis._onDidInvalidateMemory.fire(event as DebugProtocol.MemoryEvent);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'process':\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'module':\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis._onDidCustomEvent.fire(event);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._onDidEvent.fire(event);\n\t\t});\n\n\t\tthis.debugAdapter.onRequest(request => this.dispatchRequest(request));\n\t}\n\n\tget isInShutdown() {\n\t\treturn this.inShutdown;\n\t}\n\n\tget onDidExitAdapter(): Event<AdapterEndEvent> {\n\t\treturn this._onDidExitAdapter.event;\n\t}\n\n\tget capabilities(): DebugProtocol.Capabilities {\n\t\treturn this._capabilities;\n\t}\n\n\t/**\n\t * DA is ready to accepts setBreakpoint requests.\n\t * Becomes true after \"initialized\" events has been received.\n\t */\n\tget readyForBreakpoints(): boolean {\n\t\treturn this._readyForBreakpoints;\n\t}\n\n\t//---- DAP events\n\n\tget onDidInitialize(): Event<DebugProtocol.InitializedEvent> {\n\t\treturn this._onDidInitialize.event;\n\t}\n\n\tget onDidStop(): Event<DebugProtocol.StoppedEvent> {\n\t\treturn this._onDidStop.event;\n\t}\n\n\tget onDidContinued(): Event<DebugProtocol.ContinuedEvent> {\n\t\treturn this._onDidContinued.event;\n\t}\n\n\tget onDidTerminateDebugee(): Event<DebugProtocol.TerminatedEvent> {\n\t\treturn this._onDidTerminateDebugee.event;\n\t}\n\n\tget onDidExitDebugee(): Event<DebugProtocol.ExitedEvent> {\n\t\treturn this._onDidExitDebugee.event;\n\t}\n\n\tget onDidThread(): Event<DebugProtocol.ThreadEvent> {\n\t\treturn this._onDidThread.event;\n\t}\n\n\tget onDidOutput(): Event<DebugProtocol.OutputEvent> {\n\t\treturn this._onDidOutput.event;\n\t}\n\n\tget onDidBreakpoint(): Event<DebugProtocol.BreakpointEvent> {\n\t\treturn this._onDidBreakpoint.event;\n\t}\n\n\tget onDidLoadedSource(): Event<DebugProtocol.LoadedSourceEvent> {\n\t\treturn this._onDidLoadedSource.event;\n\t}\n\n\tget onDidCustomEvent(): Event<DebugProtocol.Event> {\n\t\treturn this._onDidCustomEvent.event;\n\t}\n\n\tget onDidProgressStart(): Event<DebugProtocol.ProgressStartEvent> {\n\t\treturn this._onDidProgressStart.event;\n\t}\n\n\tget onDidProgressUpdate(): Event<DebugProtocol.ProgressUpdateEvent> {\n\t\treturn this._onDidProgressUpdate.event;\n\t}\n\n\tget onDidProgressEnd(): Event<DebugProtocol.ProgressEndEvent> {\n\t\treturn this._onDidProgressEnd.event;\n\t}\n\n\tget onDidInvalidated(): Event<DebugProtocol.InvalidatedEvent> {\n\t\treturn this._onDidInvalidated.event;\n\t}\n\n\tget onDidInvalidateMemory(): Event<DebugProtocol.MemoryEvent> {\n\t\treturn this._onDidInvalidateMemory.event;\n\t}\n\n\tget onDidEvent(): Event<DebugProtocol.Event> {\n\t\treturn this._onDidEvent.event;\n\t}\n\n\t//---- DebugAdapter lifecycle\n\n\t/**\n\t * Starts the underlying debug adapter and tracks the session time for telemetry.\n\t */\n\tasync start(): Promise<void> {\n\t\tif (!this.debugAdapter) {\n\t\t\treturn Promise.reject(new Error(nls.localize('noDebugAdapterStart', \"No debug adapter, can not start debug session.\")));\n\t\t}\n\n\t\tawait this.debugAdapter.startSession();\n\t\tthis.startTime = new Date().getTime();\n\t}\n\n\t/**\n\t * Send client capabilities to the debug adapter and receive DA capabilities in return.\n\t */\n\tasync initialize(args: DebugProtocol.InitializeRequestArguments): Promise<DebugProtocol.InitializeResponse | undefined> {\n\t\tconst response = await this.send('initialize', args, undefined, undefined, false);\n\t\tif (response) {\n\t\t\tthis.mergeCapabilities(response.body);\n\t\t}\n\n\t\treturn response;\n\t}\n\n\t/**\n\t * Terminate the debuggee and shutdown the adapter\n\t */\n\tdisconnect(args: DebugProtocol.DisconnectArguments): Promise<any> {\n\t\tconst terminateDebuggee = this.capabilities.supportTerminateDebuggee ? args.terminateDebuggee : undefined;\n\t\tconst suspendDebuggee = this.capabilities.supportTerminateDebuggee && this.capabilities.supportSuspendDebuggee ? args.suspendDebuggee : undefined;\n\t\treturn this.shutdown(undefined, args.restart, terminateDebuggee, suspendDebuggee);\n\t}\n\n\t//---- DAP requests\n\n\tasync launchOrAttach(config: IConfig): Promise<DebugProtocol.Response | undefined> {\n\t\tconst response = await this.send(config.request, config, undefined, undefined, false);\n\t\tif (response) {\n\t\t\tthis.mergeCapabilities(response.body);\n\t\t}\n\n\t\treturn response;\n\t}\n\n\t/**\n\t * Try killing the debuggee softly...\n\t */\n\tterminate(restart = false): Promise<DebugProtocol.TerminateResponse | undefined> {\n\t\tif (this.capabilities.supportsTerminateRequest) {\n\t\t\tif (!this.terminated) {\n\t\t\t\tthis.terminated = true;\n\t\t\t\treturn this.send('terminate', { restart }, undefined);\n\t\t\t}\n\t\t\treturn this.disconnect({ terminateDebuggee: true, restart });\n\t\t}\n\t\treturn Promise.reject(new Error('terminated not supported'));\n\t}\n\n\trestart(args: DebugProtocol.RestartArguments): Promise<DebugProtocol.RestartResponse | undefined> {\n\t\tif (this.capabilities.supportsRestartRequest) {\n\t\t\treturn this.send('restart', args);\n\t\t}\n\t\treturn Promise.reject(new Error('restart not supported'));\n\t}\n\n\tasync next(args: DebugProtocol.NextArguments): Promise<DebugProtocol.NextResponse | undefined> {\n\t\tthis.stoppedSinceLastStep = false;\n\t\tconst response = await this.send('next', args);\n\t\tif (!this.stoppedSinceLastStep) {\n\t\t\tthis.fireSimulatedContinuedEvent(args.threadId);\n\t\t}\n\t\treturn response;\n\t}\n\n\tasync stepIn(args: DebugProtocol.StepInArguments): Promise<DebugProtocol.StepInResponse | undefined> {\n\t\tthis.stoppedSinceLastStep = false;\n\t\tconst response = await this.send('stepIn', args);\n\t\tif (!this.stoppedSinceLastStep) {\n\t\t\tthis.fireSimulatedContinuedEvent(args.threadId);\n\t\t}\n\t\treturn response;\n\t}\n\n\tasync stepOut(args: DebugProtocol.StepOutArguments): Promise<DebugProtocol.StepOutResponse | undefined> {\n\t\tthis.stoppedSinceLastStep = false;\n\t\tconst response = await this.send('stepOut', args);\n\t\tif (!this.stoppedSinceLastStep) {\n\t\t\tthis.fireSimulatedContinuedEvent(args.threadId);\n\t\t}\n\t\treturn response;\n\t}\n\n\tasync continue(args: DebugProtocol.ContinueArguments): Promise<DebugProtocol.ContinueResponse | undefined> {\n\t\tthis.stoppedSinceLastStep = false;\n\t\tconst response = await this.send<DebugProtocol.ContinueResponse>('continue', args);\n\t\tif (response && response.body && response.body.allThreadsContinued !== undefined) {\n\t\t\tthis.allThreadsContinued = response.body.allThreadsContinued;\n\t\t}\n\t\tif (!this.stoppedSinceLastStep) {\n\t\t\tthis.fireSimulatedContinuedEvent(args.threadId, this.allThreadsContinued);\n\t\t}\n\n\t\treturn response;\n\t}\n\n\tpause(args: DebugProtocol.PauseArguments): Promise<DebugProtocol.PauseResponse | undefined> {\n\t\treturn this.send('pause', args);\n\t}\n\n\tterminateThreads(args: DebugProtocol.TerminateThreadsArguments): Promise<DebugProtocol.TerminateThreadsResponse | undefined> {\n\t\tif (this.capabilities.supportsTerminateThreadsRequest) {\n\t\t\treturn this.send('terminateThreads', args);\n\t\t}\n\t\treturn Promise.reject(new Error('terminateThreads not supported'));\n\t}\n\n\tsetVariable(args: DebugProtocol.SetVariableArguments): Promise<DebugProtocol.SetVariableResponse | undefined> {\n\t\tif (this.capabilities.supportsSetVariable) {\n\t\t\treturn this.send<DebugProtocol.SetVariableResponse>('setVariable', args);\n\t\t}\n\t\treturn Promise.reject(new Error('setVariable not supported'));\n\t}\n\n\tsetExpression(args: DebugProtocol.SetExpressionArguments): Promise<DebugProtocol.SetExpressionResponse | undefined> {\n\t\tif (this.capabilities.supportsSetExpression) {\n\t\t\treturn this.send<DebugProtocol.SetExpressionResponse>('setExpression', args);\n\t\t}\n\t\treturn Promise.reject(new Error('setExpression not supported'));\n\t}\n\n\tasync restartFrame(args: DebugProtocol.RestartFrameArguments, threadId: number): Promise<DebugProtocol.RestartFrameResponse | undefined> {\n\t\tif (this.capabilities.supportsRestartFrame) {\n\t\t\tthis.stoppedSinceLastStep = false;\n\t\t\tconst response = await this.send('restartFrame', args);\n\t\t\tif (!this.stoppedSinceLastStep) {\n\t\t\t\tthis.fireSimulatedContinuedEvent(threadId);\n\t\t\t}\n\t\t\treturn response;\n\t\t}\n\t\treturn Promise.reject(new Error('restartFrame not supported'));\n\t}\n\n\tstepInTargets(args: DebugProtocol.StepInTargetsArguments): Promise<DebugProtocol.StepInTargetsResponse | undefined> {\n\t\tif (this.capabilities.supportsStepInTargetsRequest) {\n\t\t\treturn this.send('stepInTargets', args);\n\t\t}\n\t\treturn Promise.reject(new Error('stepInTargets not supported'));\n\t}\n\n\tcompletions(args: DebugProtocol.CompletionsArguments, token: CancellationToken): Promise<DebugProtocol.CompletionsResponse | undefined> {\n\t\tif (this.capabilities.supportsCompletionsRequest) {\n\t\t\treturn this.send<DebugProtocol.CompletionsResponse>('completions', args, token);\n\t\t}\n\t\treturn Promise.reject(new Error('completions not supported'));\n\t}\n\n\tsetBreakpoints(args: DebugProtocol.SetBreakpointsArguments): Promise<DebugProtocol.SetBreakpointsResponse | undefined> {\n\t\treturn this.send<DebugProtocol.SetBreakpointsResponse>('setBreakpoints', args);\n\t}\n\n\tsetFunctionBreakpoints(args: DebugProtocol.SetFunctionBreakpointsArguments): Promise<DebugProtocol.SetFunctionBreakpointsResponse | undefined> {\n\t\tif (this.capabilities.supportsFunctionBreakpoints) {\n\t\t\treturn this.send<DebugProtocol.SetFunctionBreakpointsResponse>('setFunctionBreakpoints', args);\n\t\t}\n\t\treturn Promise.reject(new Error('setFunctionBreakpoints not supported'));\n\t}\n\n\tdataBreakpointInfo(args: DebugProtocol.DataBreakpointInfoArguments): Promise<DebugProtocol.DataBreakpointInfoResponse | undefined> {\n\t\tif (this.capabilities.supportsDataBreakpoints) {\n\t\t\treturn this.send<DebugProtocol.DataBreakpointInfoResponse>('dataBreakpointInfo', args);\n\t\t}\n\t\treturn Promise.reject(new Error('dataBreakpointInfo not supported'));\n\t}\n\n\tsetDataBreakpoints(args: DebugProtocol.SetDataBreakpointsArguments): Promise<DebugProtocol.SetDataBreakpointsResponse | undefined> {\n\t\tif (this.capabilities.supportsDataBreakpoints) {\n\t\t\treturn this.send<DebugProtocol.SetDataBreakpointsResponse>('setDataBreakpoints', args);\n\t\t}\n\t\treturn Promise.reject(new Error('setDataBreakpoints not supported'));\n\t}\n\n\tsetExceptionBreakpoints(args: DebugProtocol.SetExceptionBreakpointsArguments): Promise<DebugProtocol.SetExceptionBreakpointsResponse | undefined> {\n\t\treturn this.send<DebugProtocol.SetExceptionBreakpointsResponse>('setExceptionBreakpoints', args);\n\t}\n\n\tbreakpointLocations(args: DebugProtocol.BreakpointLocationsArguments): Promise<DebugProtocol.BreakpointLocationsResponse | undefined> {\n\t\tif (this.capabilities.supportsBreakpointLocationsRequest) {\n\t\t\treturn this.send('breakpointLocations', args);\n\t\t}\n\t\treturn Promise.reject(new Error('breakpointLocations is not supported'));\n\t}\n\n\tconfigurationDone(): Promise<DebugProtocol.ConfigurationDoneResponse | undefined> {\n\t\tif (this.capabilities.supportsConfigurationDoneRequest) {\n\t\t\treturn this.send('configurationDone', null);\n\t\t}\n\t\treturn Promise.reject(new Error('configurationDone not supported'));\n\t}\n\n\tstackTrace(args: DebugProtocol.StackTraceArguments, token: CancellationToken): Promise<DebugProtocol.StackTraceResponse | undefined> {\n\t\treturn this.send<DebugProtocol.StackTraceResponse>('stackTrace', args, token);\n\t}\n\n\texceptionInfo(args: DebugProtocol.ExceptionInfoArguments): Promise<DebugProtocol.ExceptionInfoResponse | undefined> {\n\t\tif (this.capabilities.supportsExceptionInfoRequest) {\n\t\t\treturn this.send<DebugProtocol.ExceptionInfoResponse>('exceptionInfo', args);\n\t\t}\n\t\treturn Promise.reject(new Error('exceptionInfo not supported'));\n\t}\n\n\tscopes(args: DebugProtocol.ScopesArguments, token: CancellationToken): Promise<DebugProtocol.ScopesResponse | undefined> {\n\t\treturn this.send<DebugProtocol.ScopesResponse>('scopes', args, token);\n\t}\n\n\tvariables(args: DebugProtocol.VariablesArguments, token?: CancellationToken): Promise<DebugProtocol.VariablesResponse | undefined> {\n\t\treturn this.send<DebugProtocol.VariablesResponse>('variables', args, token);\n\t}\n\n\tsource(args: DebugProtocol.SourceArguments): Promise<DebugProtocol.SourceResponse | undefined> {\n\t\treturn this.send<DebugProtocol.SourceResponse>('source', args);\n\t}\n\n\tlocations(args: DebugProtocol.LocationsArguments): Promise<DebugProtocol.LocationsResponse | undefined> {\n\t\treturn this.send<DebugProtocol.LocationsResponse>('locations', args);\n\t}\n\n\tloadedSources(args: DebugProtocol.LoadedSourcesArguments): Promise<DebugProtocol.LoadedSourcesResponse | undefined> {\n\t\tif (this.capabilities.supportsLoadedSourcesRequest) {\n\t\t\treturn this.send<DebugProtocol.LoadedSourcesResponse>('loadedSources', args);\n\t\t}\n\t\treturn Promise.reject(new Error('loadedSources not supported'));\n\t}\n\n\tthreads(): Promise<DebugProtocol.ThreadsResponse | undefined> {\n\t\treturn this.send<DebugProtocol.ThreadsResponse>('threads', null);\n\t}\n\n\tevaluate(args: DebugProtocol.EvaluateArguments): Promise<DebugProtocol.EvaluateResponse | undefined> {\n\t\treturn this.send<DebugProtocol.EvaluateResponse>('evaluate', args);\n\t}\n\n\tasync stepBack(args: DebugProtocol.StepBackArguments): Promise<DebugProtocol.StepBackResponse | undefined> {\n\t\tif (this.capabilities.supportsStepBack) {\n\t\t\tthis.stoppedSinceLastStep = false;\n\t\t\tconst response = await this.send('stepBack', args);\n\t\t\tif (!this.stoppedSinceLastStep) {\n\t\t\t\tthis.fireSimulatedContinuedEvent(args.threadId);\n\t\t\t}\n\t\t\treturn response;\n\t\t}\n\t\treturn Promise.reject(new Error('stepBack not supported'));\n\t}\n\n\tasync reverseContinue(args: DebugProtocol.ReverseContinueArguments): Promise<DebugProtocol.ReverseContinueResponse | undefined> {\n\t\tif (this.capabilities.supportsStepBack) {\n\t\t\tthis.stoppedSinceLastStep = false;\n\t\t\tconst response = await this.send('reverseContinue', args);\n\t\t\tif (!this.stoppedSinceLastStep) {\n\t\t\t\tthis.fireSimulatedContinuedEvent(args.threadId);\n\t\t\t}\n\t\t\treturn response;\n\t\t}\n\t\treturn Promise.reject(new Error('reverseContinue not supported'));\n\t}\n\n\tgotoTargets(args: DebugProtocol.GotoTargetsArguments): Promise<DebugProtocol.GotoTargetsResponse | undefined> {\n\t\tif (this.capabilities.supportsGotoTargetsRequest) {\n\t\t\treturn this.send('gotoTargets', args);\n\t\t}\n\t\treturn Promise.reject(new Error('gotoTargets is not supported'));\n\t}\n\n\tasync goto(args: DebugProtocol.GotoArguments): Promise<DebugProtocol.GotoResponse | undefined> {\n\t\tif (this.capabilities.supportsGotoTargetsRequest) {\n\t\t\tthis.stoppedSinceLastStep = false;\n\t\t\tconst response = await this.send('goto', args);\n\t\t\tif (!this.stoppedSinceLastStep) {\n\t\t\t\tthis.fireSimulatedContinuedEvent(args.threadId);\n\t\t\t}\n\t\t\treturn response;\n\t\t}\n\n\t\treturn Promise.reject(new Error('goto is not supported'));\n\t}\n\n\tasync setInstructionBreakpoints(args: DebugProtocol.SetInstructionBreakpointsArguments): Promise<DebugProtocol.SetInstructionBreakpointsResponse | undefined> {\n\t\tif (this.capabilities.supportsInstructionBreakpoints) {\n\t\t\treturn await this.send('setInstructionBreakpoints', args);\n\t\t}\n\n\t\treturn Promise.reject(new Error('setInstructionBreakpoints is not supported'));\n\t}\n\n\tasync disassemble(args: DebugProtocol.DisassembleArguments): Promise<DebugProtocol.DisassembleResponse | undefined> {\n\t\tif (this.capabilities.supportsDisassembleRequest) {\n\t\t\treturn await this.send('disassemble', args);\n\t\t}\n\n\t\treturn Promise.reject(new Error('disassemble is not supported'));\n\t}\n\n\tasync readMemory(args: DebugProtocol.ReadMemoryArguments): Promise<DebugProtocol.ReadMemoryResponse | undefined> {\n\t\tif (this.capabilities.supportsReadMemoryRequest) {\n\t\t\treturn await this.send('readMemory', args);\n\t\t}\n\n\t\treturn Promise.reject(new Error('readMemory is not supported'));\n\t}\n\n\tasync writeMemory(args: DebugProtocol.WriteMemoryArguments): Promise<DebugProtocol.WriteMemoryResponse | undefined> {\n\t\tif (this.capabilities.supportsWriteMemoryRequest) {\n\t\t\treturn await this.send('writeMemory', args);\n\t\t}\n\n\t\treturn Promise.reject(new Error('writeMemory is not supported'));\n\t}\n\n\tcancel(args: DebugProtocol.CancelArguments): Promise<DebugProtocol.CancelResponse | undefined> {\n\t\treturn this.send('cancel', args);\n\t}\n\n\tcustom(request: string, args: any): Promise<DebugProtocol.Response | undefined> {\n\t\treturn this.send(request, args);\n\t}\n\n\t//---- private\n\n\tprivate async shutdown(error?: Error, restart = false, terminateDebuggee: boolean | undefined = undefined, suspendDebuggee: boolean | undefined = undefined): Promise<any> {\n\t\tif (!this.inShutdown) {\n\t\t\tthis.inShutdown = true;\n\t\t\tif (this.debugAdapter) {\n\t\t\t\ttry {\n\t\t\t\t\tconst args: DebugProtocol.DisconnectArguments = { restart };\n\t\t\t\t\tif (typeof terminateDebuggee === 'boolean') {\n\t\t\t\t\t\targs.terminateDebuggee = terminateDebuggee;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof suspendDebuggee === 'boolean') {\n\t\t\t\t\t\targs.suspendDebuggee = suspendDebuggee;\n\t\t\t\t\t}\n\n\t\t\t\t\t// if there's an error, the DA is probably already gone, so give it a much shorter timeout.\n\t\t\t\t\tawait this.send('disconnect', args, undefined, error ? 200 : 2000);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// Catch the potential 'disconnect' error - no need to show it to the user since the adapter is shutting down\n\t\t\t\t} finally {\n\t\t\t\t\tawait this.stopAdapter(error);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn this.stopAdapter(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async stopAdapter(error?: Error): Promise<any> {\n\t\ttry {\n\t\t\tif (this.debugAdapter) {\n\t\t\t\tconst da = this.debugAdapter;\n\t\t\t\tthis.debugAdapter = null;\n\t\t\t\tawait da.stopSession();\n\t\t\t\tthis.debugAdapterStopped = true;\n\t\t\t}\n\t\t} finally {\n\t\t\tthis.fireAdapterExitEvent(error);\n\t\t}\n\t}\n\n\tprivate fireAdapterExitEvent(error?: Error): void {\n\t\tif (!this.firedAdapterExitEvent) {\n\t\t\tthis.firedAdapterExitEvent = true;\n\n\t\t\tconst e: AdapterEndEvent = {\n\t\t\t\temittedStopped: this.didReceiveStoppedEvent,\n\t\t\t\tsessionLengthInSeconds: (new Date().getTime() - this.startTime) / 1000\n\t\t\t};\n\t\t\tif (error && !this.debugAdapterStopped) {\n\t\t\t\te.error = error;\n\t\t\t}\n\t\t\tthis._onDidExitAdapter.fire(e);\n\t\t}\n\t}\n\n\tprivate async dispatchRequest(request: DebugProtocol.Request): Promise<void> {\n\n\t\tconst response: DebugProtocol.Response = {\n\t\t\ttype: 'response',\n\t\t\tseq: 0,\n\t\t\tcommand: request.command,\n\t\t\trequest_seq: request.seq,\n\t\t\tsuccess: true\n\t\t};\n\n\t\tconst safeSendResponse = (response: DebugProtocol.Response) => this.debugAdapter && this.debugAdapter.sendResponse(response);\n\n\t\tif (request.command === 'launchVSCode') {\n\t\t\ttry {\n\t\t\t\tlet result = await this.launchVsCode(<ILaunchVSCodeArguments>request.arguments);\n\t\t\t\tif (!result.success) {\n\t\t\t\t\tconst { confirmed } = await this.dialogSerivce.confirm({\n\t\t\t\t\t\ttype: Severity.Warning,\n\t\t\t\t\t\tmessage: nls.localize('canNotStart', \"The debugger needs to open a new tab or window for the debuggee but the browser prevented this. You must give permission to continue.\"),\n\t\t\t\t\t\tprimaryButton: nls.localize({ key: 'continue', comment: ['&& denotes a mnemonic'] }, \"&&Continue\")\n\t\t\t\t\t});\n\t\t\t\t\tif (confirmed) {\n\t\t\t\t\t\tresult = await this.launchVsCode(<ILaunchVSCodeArguments>request.arguments);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresponse.success = false;\n\t\t\t\t\t\tsafeSendResponse(response);\n\t\t\t\t\t\tawait this.shutdown();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresponse.body = {\n\t\t\t\t\trendererDebugPort: result.rendererDebugPort,\n\t\t\t\t};\n\t\t\t\tsafeSendResponse(response);\n\t\t\t} catch (err) {\n\t\t\t\tresponse.success = false;\n\t\t\t\tresponse.message = err.message;\n\t\t\t\tsafeSendResponse(response);\n\t\t\t}\n\t\t} else if (request.command === 'runInTerminal') {\n\t\t\ttry {\n\t\t\t\tconst shellProcessId = await this.dbgr.runInTerminal(request.arguments as DebugProtocol.RunInTerminalRequestArguments, this.sessionId);\n\t\t\t\tconst resp = response as DebugProtocol.RunInTerminalResponse;\n\t\t\t\tresp.body = {};\n\t\t\t\tif (typeof shellProcessId === 'number') {\n\t\t\t\t\tresp.body.shellProcessId = shellProcessId;\n\t\t\t\t}\n\t\t\t\tsafeSendResponse(resp);\n\t\t\t} catch (err) {\n\t\t\t\tresponse.success = false;\n\t\t\t\tresponse.message = err.message;\n\t\t\t\tsafeSendResponse(response);\n\t\t\t}\n\t\t} else if (request.command === 'startDebugging') {\n\t\t\ttry {\n\t\t\t\tconst args = (request.arguments as DebugProtocol.StartDebuggingRequestArguments);\n\t\t\t\tconst config: IConfig = {\n\t\t\t\t\t...args.configuration,\n\t\t\t\t\t...{\n\t\t\t\t\t\trequest: args.request,\n\t\t\t\t\t\ttype: this.dbgr.type,\n\t\t\t\t\t\tname: args.configuration.name || this.name\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tconst success = await this.dbgr.startDebugging(config, this.sessionId);\n\t\t\t\tif (success) {\n\t\t\t\t\tsafeSendResponse(response);\n\t\t\t\t} else {\n\t\t\t\t\tresponse.success = false;\n\t\t\t\t\tresponse.message = 'Failed to start debugging';\n\t\t\t\t\tsafeSendResponse(response);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tresponse.success = false;\n\t\t\t\tresponse.message = err.message;\n\t\t\t\tsafeSendResponse(response);\n\t\t\t}\n\t\t} else {\n\t\t\tresponse.success = false;\n\t\t\tresponse.message = `unknown request '${request.command}'`;\n\t\t\tsafeSendResponse(response);\n\t\t}\n\t}\n\n\tprivate launchVsCode(vscodeArgs: ILaunchVSCodeArguments): Promise<IOpenExtensionWindowResult> {\n\n\t\tconst args: string[] = [];\n\n\t\tfor (const arg of vscodeArgs.args) {\n\t\t\tconst a2 = (arg.prefix || '') + (arg.path || '');\n\t\t\tconst match = /^--(.+)=(.+)$/.exec(a2);\n\t\t\tif (match && match.length === 3) {\n\t\t\t\tconst key = match[1];\n\t\t\t\tlet value = match[2];\n\n\t\t\t\tif ((key === 'file-uri' || key === 'folder-uri') && !isUri(arg.path)) {\n\t\t\t\t\tvalue = isUri(value) ? value : URI.file(value).toString();\n\t\t\t\t}\n\t\t\t\targs.push(`--${key}=${value}`);\n\t\t\t} else {\n\t\t\t\targs.push(a2);\n\t\t\t}\n\t\t}\n\n\t\tif (vscodeArgs.env) {\n\t\t\targs.push(`--extensionEnvironment=${JSON.stringify(vscodeArgs.env)}`);\n\t\t}\n\n\t\treturn this.extensionHostDebugService.openExtensionDevelopmentHostWindow(args, !!vscodeArgs.debugRenderer);\n\t}\n\n\tprivate send<R extends DebugProtocol.Response>(command: string, args: any, token?: CancellationToken, timeout?: number, showErrors = true): Promise<R | undefined> {\n\t\treturn new Promise<DebugProtocol.Response | undefined>((completeDispatch, errorDispatch) => {\n\t\t\tif (!this.debugAdapter) {\n\t\t\t\tif (this.inShutdown) {\n\t\t\t\t\t// We are in shutdown silently complete\n\t\t\t\t\tcompleteDispatch(undefined);\n\t\t\t\t} else {\n\t\t\t\t\terrorDispatch(new Error(nls.localize('noDebugAdapter', \"No debugger available found. Can not send '{0}'.\", command)));\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet cancelationListener: IDisposable;\n\t\t\tconst requestId = this.debugAdapter.sendRequest(command, args, (response: DebugProtocol.Response) => {\n\t\t\t\tcancelationListener?.dispose();\n\n\t\t\t\tif (response.success) {\n\t\t\t\t\tcompleteDispatch(response);\n\t\t\t\t} else {\n\t\t\t\t\terrorDispatch(response);\n\t\t\t\t}\n\t\t\t}, timeout);\n\n\t\t\tif (token) {\n\t\t\t\tcancelationListener = token.onCancellationRequested(() => {\n\t\t\t\t\tcancelationListener.dispose();\n\t\t\t\t\tif (this.capabilities.supportsCancelRequest) {\n\t\t\t\t\t\tthis.cancel({ requestId });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}).then(undefined, err => Promise.reject(this.handleErrorResponse(err, showErrors)));\n\t}\n\n\tprivate handleErrorResponse(errorResponse: DebugProtocol.Response, showErrors: boolean): Error {\n\n\t\tif (errorResponse.command === 'canceled' && errorResponse.message === 'canceled') {\n\t\t\treturn new errors.CancellationError();\n\t\t}\n\n\t\tconst error: DebugProtocol.Message | undefined = errorResponse?.body?.error;\n\t\tconst errorMessage = errorResponse?.message || '';\n\n\t\tconst userMessage = error ? formatPII(error.format, false, error.variables) : errorMessage;\n\t\tconst url = error?.url;\n\t\tif (error && url) {\n\t\t\tconst label = error.urlLabel ? error.urlLabel : nls.localize('moreInfo', \"More Info\");\n\t\t\tconst uri = URI.parse(url);\n\t\t\t// Use a suffixed id if uri invokes a command, so default 'Open launch.json' command is suppressed on dialog\n\t\t\tconst actionId = uri.scheme === Schemas.command ? 'debug.moreInfo.command' : 'debug.moreInfo';\n\t\t\treturn createErrorWithActions(userMessage, [toAction({ id: actionId, label, run: () => this.openerService.open(uri, { allowCommands: true }) })]);\n\t\t}\n\t\tif (showErrors && error && error.format && error.showUser) {\n\t\t\tthis.notificationService.error(userMessage);\n\t\t}\n\t\tconst result = new errors.ErrorNoTelemetry(userMessage);\n\t\t(<any>result).showUser = error?.showUser;\n\n\t\treturn result;\n\t}\n\n\tprivate mergeCapabilities(capabilities: DebugProtocol.Capabilities | undefined): void {\n\t\tif (capabilities) {\n\t\t\tthis._capabilities = objects.mixin(this._capabilities, capabilities);\n\t\t}\n\t}\n\n\tprivate fireSimulatedContinuedEvent(threadId: number, allThreadsContinued = false): void {\n\t\tthis._onDidContinued.fire({\n\t\t\ttype: 'event',\n\t\t\tevent: 'continued',\n\t\t\tbody: {\n\t\t\t\tthreadId,\n\t\t\t\tallThreadsContinued\n\t\t\t},\n\t\t\tseq: undefined!\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tdispose(this.toDispose);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["response"]
}
