{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/debugExpressionRenderer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { IHighlight } from '../../../../base/browser/ui/highlightedlabel/highlightedLabel.js';\nimport { getDefaultHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegateFactory.js';\nimport { DisposableStore, IDisposable } from '../../../../base/common/lifecycle.js';\nimport { IObservable } from '../../../../base/common/observable.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { observableConfigValue } from '../../../../platform/observable/common/platformObservableUtils.js';\nimport { IDebugSession, IExpressionValue } from '../common/debug.js';\nimport { Expression, ExpressionContainer, Variable } from '../common/debugModel.js';\nimport { ReplEvaluationResult } from '../common/replModel.js';\nimport { IVariableTemplateData } from './baseDebugView.js';\nimport { handleANSIOutput } from './debugANSIHandling.js';\nimport { COPY_EVALUATE_PATH_ID, COPY_VALUE_ID } from './debugCommands.js';\nimport { DebugLinkHoverBehavior, DebugLinkHoverBehaviorTypeData, ILinkDetector, LinkDetector } from './linkDetector.js';\n\nexport interface IValueHoverOptions {\n\t/** Commands to show in the hover footer. */\n\tcommands?: { id: string; args: unknown[] }[];\n}\n\nexport interface IRenderValueOptions {\n\tshowChanged?: boolean;\n\tmaxValueLength?: number;\n\t/** If not false, a rich hover will be shown on the element. */\n\thover?: false | IValueHoverOptions;\n\tcolorize?: boolean;\n\n\t/** @deprecated */\n\twasANSI?: boolean;\n\tsession?: IDebugSession;\n\tlocationReference?: number;\n}\n\nexport interface IRenderVariableOptions {\n\tshowChanged?: boolean;\n\thighlights?: IHighlight[];\n}\n\n\nconst MAX_VALUE_RENDER_LENGTH_IN_VIEWLET = 1024;\nconst booleanRegex = /^(true|false)$/i;\nconst stringRegex = /^(['\"]).*\\1$/;\n\nexport class DebugExpressionRenderer {\n\tprivate displayType: IObservable<boolean>;\n\tprivate readonly linkDetector: LinkDetector;\n\n\tconstructor(\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t) {\n\t\tthis.linkDetector = instantiationService.createInstance(LinkDetector);\n\t\tthis.displayType = observableConfigValue('debug.showVariableTypes', false, configurationService);\n\t}\n\n\trenderVariable(data: IVariableTemplateData, variable: Variable, options: IRenderVariableOptions = {}): IDisposable {\n\t\tconst displayType = this.displayType.get();\n\n\t\tif (variable.available) {\n\t\t\tdata.type.textContent = '';\n\t\t\tlet text = variable.name;\n\t\t\tif (variable.value && typeof variable.name === 'string') {\n\t\t\t\tif (variable.type && displayType) {\n\t\t\t\t\ttext += ': ';\n\t\t\t\t\tdata.type.textContent = variable.type + ' =';\n\t\t\t\t} else {\n\t\t\t\t\ttext += ' =';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdata.label.set(text, options.highlights, variable.type && !displayType ? variable.type : variable.name);\n\t\t\tdata.name.classList.toggle('virtual', variable.presentationHint?.kind === 'virtual');\n\t\t\tdata.name.classList.toggle('internal', variable.presentationHint?.visibility === 'internal');\n\t\t} else if (variable.value && typeof variable.name === 'string' && variable.name) {\n\t\t\tdata.label.set(':');\n\t\t}\n\n\t\tdata.expression.classList.toggle('lazy', !!variable.presentationHint?.lazy);\n\t\tconst commands = [\n\t\t\t{ id: COPY_VALUE_ID, args: [variable, [variable]] as unknown[] }\n\t\t];\n\t\tif (variable.evaluateName) {\n\t\t\tcommands.push({ id: COPY_EVALUATE_PATH_ID, args: [{ variable }] });\n\t\t}\n\n\t\treturn this.renderValue(data.value, variable, {\n\t\t\tshowChanged: options.showChanged,\n\t\t\tmaxValueLength: MAX_VALUE_RENDER_LENGTH_IN_VIEWLET,\n\t\t\thover: { commands },\n\t\t\tcolorize: true,\n\t\t\tsession: variable.getSession(),\n\t\t});\n\t}\n\n\trenderValue(container: HTMLElement, expressionOrValue: IExpressionValue | string, options: IRenderValueOptions = {}): IDisposable {\n\t\tconst store = new DisposableStore();\n\t\tconst supportsANSI = !!options.session?.capabilities.supportsANSIStyling;\n\n\t\tlet value = typeof expressionOrValue === 'string' ? expressionOrValue : expressionOrValue.value;\n\n\t\t// remove stale classes\n\t\tcontainer.className = 'value';\n\t\t// when resolving expressions we represent errors from the server as a variable with name === null.\n\t\tif (value === null || ((expressionOrValue instanceof Expression || expressionOrValue instanceof Variable || expressionOrValue instanceof ReplEvaluationResult) && !expressionOrValue.available)) {\n\t\t\tcontainer.classList.add('unavailable');\n\t\t\tif (value !== Expression.DEFAULT_VALUE) {\n\t\t\t\tcontainer.classList.add('error');\n\t\t\t}\n\t\t} else {\n\t\t\tif (typeof expressionOrValue !== 'string' && options.showChanged && expressionOrValue.valueChanged && value !== Expression.DEFAULT_VALUE) {\n\t\t\t\t// value changed color has priority over other colors.\n\t\t\t\tcontainer.className = 'value changed';\n\t\t\t\texpressionOrValue.valueChanged = false;\n\t\t\t}\n\n\t\t\tif (options.colorize && typeof expressionOrValue !== 'string') {\n\t\t\t\tif (expressionOrValue.type === 'number' || expressionOrValue.type === 'boolean' || expressionOrValue.type === 'string') {\n\t\t\t\t\tcontainer.classList.add(expressionOrValue.type);\n\t\t\t\t} else if (!isNaN(+value)) {\n\t\t\t\t\tcontainer.classList.add('number');\n\t\t\t\t} else if (booleanRegex.test(value)) {\n\t\t\t\t\tcontainer.classList.add('boolean');\n\t\t\t\t} else if (stringRegex.test(value)) {\n\t\t\t\t\tcontainer.classList.add('string');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (options.maxValueLength && value && value.length > options.maxValueLength) {\n\t\t\tvalue = value.substring(0, options.maxValueLength) + '...';\n\t\t}\n\t\tif (!value) {\n\t\t\tvalue = '';\n\t\t}\n\n\t\tconst session = options.session ?? ((expressionOrValue instanceof ExpressionContainer) ? expressionOrValue.getSession() : undefined);\n\t\t// Only use hovers for links if thre's not going to be a hover for the value.\n\t\tconst hoverBehavior: DebugLinkHoverBehaviorTypeData = options.hover === false ? { type: DebugLinkHoverBehavior.Rich, store } : { type: DebugLinkHoverBehavior.None };\n\t\tdom.clearNode(container);\n\t\tconst locationReference = options.locationReference ?? (expressionOrValue instanceof ExpressionContainer && expressionOrValue.valueLocationReference);\n\n\t\tlet linkDetector: ILinkDetector = this.linkDetector;\n\t\tif (locationReference && session) {\n\t\t\tlinkDetector = this.linkDetector.makeReferencedLinkDetector(locationReference, session);\n\t\t}\n\n\t\tif (supportsANSI) {\n\t\t\tcontainer.appendChild(handleANSIOutput(value, linkDetector, session ? session.root : undefined));\n\t\t} else {\n\t\t\tcontainer.appendChild(linkDetector.linkify(value, false, session?.root, true, hoverBehavior));\n\t\t}\n\n\t\tif (options.hover !== false) {\n\t\t\tconst { commands = [] } = options.hover || {};\n\t\t\tstore.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), container, () => {\n\t\t\t\tconst container = dom.$('div');\n\t\t\t\tconst markdownHoverElement = dom.$('div.hover-row');\n\t\t\t\tconst hoverContentsElement = dom.append(markdownHoverElement, dom.$('div.hover-contents'));\n\t\t\t\tconst hoverContentsPre = dom.append(hoverContentsElement, dom.$('pre.debug-var-hover-pre'));\n\t\t\t\tif (supportsANSI) {\n\t\t\t\t\t// note: intentionally using `this.linkDetector` so we don't blindly linkify the\n\t\t\t\t\t// entire contents and instead only link file paths that it contains.\n\t\t\t\t\thoverContentsPre.appendChild(handleANSIOutput(value, this.linkDetector, session ? session.root : undefined));\n\t\t\t\t} else {\n\t\t\t\t\thoverContentsPre.textContent = value;\n\t\t\t\t}\n\t\t\t\tcontainer.appendChild(markdownHoverElement);\n\t\t\t\treturn container;\n\t\t\t}, {\n\t\t\t\tactions: commands.map(({ id, args }) => {\n\t\t\t\t\tconst description = CommandsRegistry.getCommand(id)?.metadata?.description;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tlabel: typeof description === 'string' ? description : description ? description.value : id,\n\t\t\t\t\t\tcommandId: id,\n\t\t\t\t\t\trun: () => this.commandService.executeCommand(id, ...args),\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t}));\n\t\t}\n\n\t\treturn store;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["container"]
}
