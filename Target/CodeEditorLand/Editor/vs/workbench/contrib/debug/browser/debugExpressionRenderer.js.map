{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/debugExpressionRenderer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport type { IHighlight } from \"../../../../base/browser/ui/highlightedlabel/highlightedLabel.js\";\nimport { getDefaultHoverDelegate } from \"../../../../base/browser/ui/hover/hoverDelegateFactory.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport type { IObservable } from \"../../../../base/common/observable.js\";\nimport {\n\tCommandsRegistry,\n\tICommandService,\n} from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { observableConfigValue } from \"../../../../platform/observable/common/platformObservableUtils.js\";\nimport type { IDebugSession, IExpressionValue } from \"../common/debug.js\";\nimport {\n\tExpression,\n\tExpressionContainer,\n\tVariable,\n} from \"../common/debugModel.js\";\nimport { ReplEvaluationResult } from \"../common/replModel.js\";\nimport type { IVariableTemplateData } from \"./baseDebugView.js\";\nimport { handleANSIOutput } from \"./debugANSIHandling.js\";\nimport { COPY_EVALUATE_PATH_ID, COPY_VALUE_ID } from \"./debugCommands.js\";\nimport {\n\tDebugLinkHoverBehavior,\n\ttype DebugLinkHoverBehaviorTypeData,\n\ttype ILinkDetector,\n\tLinkDetector,\n} from \"./linkDetector.js\";\n\nexport interface IValueHoverOptions {\n\t/** Commands to show in the hover footer. */\n\tcommands?: { id: string; args: unknown[] }[];\n}\n\nexport interface IRenderValueOptions {\n\tshowChanged?: boolean;\n\tmaxValueLength?: number;\n\t/** If not false, a rich hover will be shown on the element. */\n\thover?: false | IValueHoverOptions;\n\tcolorize?: boolean;\n\n\t/** @deprecated */\n\twasANSI?: boolean;\n\tsession?: IDebugSession;\n\tlocationReference?: number;\n}\n\nexport interface IRenderVariableOptions {\n\tshowChanged?: boolean;\n\thighlights?: IHighlight[];\n}\n\nconst MAX_VALUE_RENDER_LENGTH_IN_VIEWLET = 1024;\nconst booleanRegex = /^(true|false)$/i;\nconst stringRegex = /^(['\"]).*\\1$/;\n\nexport class DebugExpressionRenderer {\n\tprivate displayType: IObservable<boolean>;\n\tprivate readonly linkDetector: LinkDetector;\n\n\tconstructor(\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t) {\n\t\tthis.linkDetector = instantiationService.createInstance(LinkDetector);\n\t\tthis.displayType = observableConfigValue(\n\t\t\t\"debug.showVariableTypes\",\n\t\t\tfalse,\n\t\t\tconfigurationService,\n\t\t);\n\t}\n\n\trenderVariable(\n\t\tdata: IVariableTemplateData,\n\t\tvariable: Variable,\n\t\toptions: IRenderVariableOptions = {},\n\t): IDisposable {\n\t\tconst displayType = this.displayType.get();\n\n\t\tif (variable.available) {\n\t\t\tdata.type.textContent = \"\";\n\t\t\tlet text = variable.name;\n\t\t\tif (variable.value && typeof variable.name === \"string\") {\n\t\t\t\tif (variable.type && displayType) {\n\t\t\t\t\ttext += \": \";\n\t\t\t\t\tdata.type.textContent = variable.type + \" =\";\n\t\t\t\t} else {\n\t\t\t\t\ttext += \" =\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdata.label.set(\n\t\t\t\ttext,\n\t\t\t\toptions.highlights,\n\t\t\t\tvariable.type && !displayType ? variable.type : variable.name,\n\t\t\t);\n\t\t\tdata.name.classList.toggle(\n\t\t\t\t\"virtual\",\n\t\t\t\tvariable.presentationHint?.kind === \"virtual\",\n\t\t\t);\n\t\t\tdata.name.classList.toggle(\n\t\t\t\t\"internal\",\n\t\t\t\tvariable.presentationHint?.visibility === \"internal\",\n\t\t\t);\n\t\t} else if (\n\t\t\tvariable.value &&\n\t\t\ttypeof variable.name === \"string\" &&\n\t\t\tvariable.name\n\t\t) {\n\t\t\tdata.label.set(\":\");\n\t\t}\n\n\t\tdata.expression.classList.toggle(\n\t\t\t\"lazy\",\n\t\t\t!!variable.presentationHint?.lazy,\n\t\t);\n\t\tconst commands = [\n\t\t\t{ id: COPY_VALUE_ID, args: [variable, [variable]] as unknown[] },\n\t\t];\n\t\tif (variable.evaluateName) {\n\t\t\tcommands.push({ id: COPY_EVALUATE_PATH_ID, args: [{ variable }] });\n\t\t}\n\n\t\treturn this.renderValue(data.value, variable, {\n\t\t\tshowChanged: options.showChanged,\n\t\t\tmaxValueLength: MAX_VALUE_RENDER_LENGTH_IN_VIEWLET,\n\t\t\thover: { commands },\n\t\t\tcolorize: true,\n\t\t\tsession: variable.getSession(),\n\t\t});\n\t}\n\n\trenderValue(\n\t\tcontainer: HTMLElement,\n\t\texpressionOrValue: IExpressionValue | string,\n\t\toptions: IRenderValueOptions = {},\n\t): IDisposable {\n\t\tconst store = new DisposableStore();\n\t\tconst supportsANSI =\n\t\t\t!!options.session?.capabilities.supportsANSIStyling;\n\n\t\tlet value =\n\t\t\ttypeof expressionOrValue === \"string\"\n\t\t\t\t? expressionOrValue\n\t\t\t\t: expressionOrValue.value;\n\n\t\t// remove stale classes\n\t\tcontainer.className = \"value\";\n\t\t// when resolving expressions we represent errors from the server as a variable with name === null.\n\t\tif (\n\t\t\tvalue === null ||\n\t\t\t((expressionOrValue instanceof Expression ||\n\t\t\t\texpressionOrValue instanceof Variable ||\n\t\t\t\texpressionOrValue instanceof ReplEvaluationResult) &&\n\t\t\t\t!expressionOrValue.available)\n\t\t) {\n\t\t\tcontainer.classList.add(\"unavailable\");\n\t\t\tif (value !== Expression.DEFAULT_VALUE) {\n\t\t\t\tcontainer.classList.add(\"error\");\n\t\t\t}\n\t\t} else {\n\t\t\tif (\n\t\t\t\ttypeof expressionOrValue !== \"string\" &&\n\t\t\t\toptions.showChanged &&\n\t\t\t\texpressionOrValue.valueChanged &&\n\t\t\t\tvalue !== Expression.DEFAULT_VALUE\n\t\t\t) {\n\t\t\t\t// value changed color has priority over other colors.\n\t\t\t\tcontainer.className = \"value changed\";\n\t\t\t\texpressionOrValue.valueChanged = false;\n\t\t\t}\n\n\t\t\tif (options.colorize && typeof expressionOrValue !== \"string\") {\n\t\t\t\tif (\n\t\t\t\t\texpressionOrValue.type === \"number\" ||\n\t\t\t\t\texpressionOrValue.type === \"boolean\" ||\n\t\t\t\t\texpressionOrValue.type === \"string\"\n\t\t\t\t) {\n\t\t\t\t\tcontainer.classList.add(expressionOrValue.type);\n\t\t\t\t} else if (!isNaN(+value)) {\n\t\t\t\t\tcontainer.classList.add(\"number\");\n\t\t\t\t} else if (booleanRegex.test(value)) {\n\t\t\t\t\tcontainer.classList.add(\"boolean\");\n\t\t\t\t} else if (stringRegex.test(value)) {\n\t\t\t\t\tcontainer.classList.add(\"string\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\toptions.maxValueLength &&\n\t\t\tvalue &&\n\t\t\tvalue.length > options.maxValueLength\n\t\t) {\n\t\t\tvalue = value.substring(0, options.maxValueLength) + \"...\";\n\t\t}\n\t\tif (!value) {\n\t\t\tvalue = \"\";\n\t\t}\n\n\t\tconst session =\n\t\t\toptions.session ??\n\t\t\t(expressionOrValue instanceof ExpressionContainer\n\t\t\t\t? expressionOrValue.getSession()\n\t\t\t\t: undefined);\n\t\t// Only use hovers for links if thre's not going to be a hover for the value.\n\t\tconst hoverBehavior: DebugLinkHoverBehaviorTypeData =\n\t\t\toptions.hover === false\n\t\t\t\t? { type: DebugLinkHoverBehavior.Rich, store }\n\t\t\t\t: { type: DebugLinkHoverBehavior.None };\n\t\tdom.clearNode(container);\n\t\tconst locationReference =\n\t\t\toptions.locationReference ??\n\t\t\t(expressionOrValue instanceof ExpressionContainer &&\n\t\t\t\texpressionOrValue.valueLocationReference);\n\n\t\tlet linkDetector: ILinkDetector = this.linkDetector;\n\t\tif (locationReference && session) {\n\t\t\tlinkDetector = this.linkDetector.makeReferencedLinkDetector(\n\t\t\t\tlocationReference,\n\t\t\t\tsession,\n\t\t\t);\n\t\t}\n\n\t\tif (supportsANSI) {\n\t\t\tcontainer.appendChild(\n\t\t\t\thandleANSIOutput(\n\t\t\t\t\tvalue,\n\t\t\t\t\tlinkDetector,\n\t\t\t\t\tsession ? session.root : undefined,\n\t\t\t\t),\n\t\t\t);\n\t\t} else {\n\t\t\tcontainer.appendChild(\n\t\t\t\tlinkDetector.linkify(\n\t\t\t\t\tvalue,\n\t\t\t\t\tfalse,\n\t\t\t\t\tsession?.root,\n\t\t\t\t\ttrue,\n\t\t\t\t\thoverBehavior,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tif (options.hover !== false) {\n\t\t\tconst { commands = [] } = options.hover || {};\n\t\t\tstore.add(\n\t\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\t\tcontainer,\n\t\t\t\t\t() => {\n\t\t\t\t\t\tconst container = dom.$(\"div\");\n\t\t\t\t\t\tconst markdownHoverElement = dom.$(\"div.hover-row\");\n\t\t\t\t\t\tconst hoverContentsElement = dom.append(\n\t\t\t\t\t\t\tmarkdownHoverElement,\n\t\t\t\t\t\t\tdom.$(\"div.hover-contents\"),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst hoverContentsPre = dom.append(\n\t\t\t\t\t\t\thoverContentsElement,\n\t\t\t\t\t\t\tdom.$(\"pre.debug-var-hover-pre\"),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (supportsANSI) {\n\t\t\t\t\t\t\t// note: intentionally using `this.linkDetector` so we don't blindly linkify the\n\t\t\t\t\t\t\t// entire contents and instead only link file paths that it contains.\n\t\t\t\t\t\t\thoverContentsPre.appendChild(\n\t\t\t\t\t\t\t\thandleANSIOutput(\n\t\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t\t\tthis.linkDetector,\n\t\t\t\t\t\t\t\t\tsession ? session.root : undefined,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\thoverContentsPre.textContent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontainer.appendChild(markdownHoverElement);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tactions: commands.map(({ id, args }) => {\n\t\t\t\t\t\t\tconst description =\n\t\t\t\t\t\t\t\tCommandsRegistry.getCommand(id)?.metadata\n\t\t\t\t\t\t\t\t\t?.description;\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tlabel:\n\t\t\t\t\t\t\t\t\ttypeof description === \"string\"\n\t\t\t\t\t\t\t\t\t\t? description\n\t\t\t\t\t\t\t\t\t\t: description\n\t\t\t\t\t\t\t\t\t\t\t? description.value\n\t\t\t\t\t\t\t\t\t\t\t: id,\n\t\t\t\t\t\t\t\tcommandId: id,\n\t\t\t\t\t\t\t\trun: () =>\n\t\t\t\t\t\t\t\t\tthis.commandService.executeCommand(\n\t\t\t\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\t\t\t\t...args,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}),\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\treturn store;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["container"]
}
