{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/debugHover.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport type { IKeyboardEvent } from \"../../../../base/browser/keyboardEvent.js\";\nimport type { IMouseEvent } from \"../../../../base/browser/mouseEvent.js\";\nimport type { IListVirtualDelegate } from \"../../../../base/browser/ui/list/list.js\";\nimport type { IListAccessibilityProvider } from \"../../../../base/browser/ui/list/listWidget.js\";\nimport { DomScrollableElement } from \"../../../../base/browser/ui/scrollbar/scrollableElement.js\";\nimport type { AsyncDataTree } from \"../../../../base/browser/ui/tree/asyncDataTree.js\";\nimport type { ITreeContextMenuEvent } from \"../../../../base/browser/ui/tree/tree.js\";\nimport { coalesce } from \"../../../../base/common/arrays.js\";\nimport {\n\ttype CancellationToken,\n\tCancellationTokenSource,\n} from \"../../../../base/common/cancellation.js\";\nimport { KeyCode } from \"../../../../base/common/keyCodes.js\";\nimport * as lifecycle from \"../../../../base/common/lifecycle.js\";\nimport { clamp } from \"../../../../base/common/numbers.js\";\nimport { isMacintosh } from \"../../../../base/common/platform.js\";\nimport { ScrollbarVisibility } from \"../../../../base/common/scrollable.js\";\nimport {\n\tContentWidgetPositionPreference,\n\ttype ICodeEditor,\n\ttype IContentWidget,\n\ttype IContentWidgetPosition,\n} from \"../../../../editor/browser/editorBrowser.js\";\nimport {\n\ttype ConfigurationChangedEvent,\n\tEditorOption,\n} from \"../../../../editor/common/config/editorOptions.js\";\nimport type { IDimension } from \"../../../../editor/common/core/dimension.js\";\nimport type { Position } from \"../../../../editor/common/core/position.js\";\nimport { Range } from \"../../../../editor/common/core/range.js\";\nimport { ModelDecorationOptions } from \"../../../../editor/common/model/textModel.js\";\nimport { ILanguageFeaturesService } from \"../../../../editor/common/services/languageFeatures.js\";\nimport * as nls from \"../../../../nls.js\";\nimport {\n\tIMenuService,\n\tMenuId,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextMenuService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { WorkbenchAsyncDataTree } from \"../../../../platform/list/browser/listService.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport {\n\tasCssVariable,\n\teditorHoverBackground,\n\teditorHoverBorder,\n\teditorHoverForeground,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport {\n\tIDebugService,\n\ttype IDebugSession,\n\ttype IExpression,\n\ttype IExpressionContainer,\n\ttype IStackFrame,\n} from \"../common/debug.js\";\nimport {\n\tExpression,\n\tVariable,\n\tVisualizedExpression,\n} from \"../common/debugModel.js\";\nimport { getEvaluatableExpressionAtPosition } from \"../common/debugUtils.js\";\nimport { AbstractExpressionDataSource } from \"./baseDebugView.js\";\nimport { DebugExpressionRenderer } from \"./debugExpressionRenderer.js\";\nimport {\n\tVariablesRenderer,\n\tVisualizedVariableRenderer,\n\topenContextMenuForVariableTreeElement,\n} from \"./variablesView.js\";\n\nconst $ = dom.$;\n\nexport enum ShowDebugHoverResult {\n\tNOT_CHANGED = 0,\n\tNOT_AVAILABLE = 1,\n\tCANCELLED = 2,\n}\n\nasync function doFindExpression(\n\tcontainer: IExpressionContainer,\n\tnamesToFind: string[],\n): Promise<IExpression | null> {\n\tif (!container) {\n\t\treturn null;\n\t}\n\n\tconst children = await container.getChildren();\n\t// look for our variable in the list. First find the parents of the hovered variable if there are any.\n\tconst filtered = children.filter((v) => namesToFind[0] === v.name);\n\tif (filtered.length !== 1) {\n\t\treturn null;\n\t}\n\n\tif (namesToFind.length === 1) {\n\t\treturn filtered[0];\n\t} else {\n\t\treturn doFindExpression(filtered[0], namesToFind.slice(1));\n\t}\n}\n\nexport async function findExpressionInStackFrame(\n\tstackFrame: IStackFrame,\n\tnamesToFind: string[],\n): Promise<IExpression | undefined> {\n\tconst scopes = await stackFrame.getScopes();\n\tconst nonExpensive = scopes.filter((s) => !s.expensive);\n\tconst expressions = coalesce(\n\t\tawait Promise.all(\n\t\t\tnonExpensive.map((scope) => doFindExpression(scope, namesToFind)),\n\t\t),\n\t);\n\n\t// only show if all expressions found have the same value\n\treturn expressions.length > 0 &&\n\t\texpressions.every((e) => e.value === expressions[0].value)\n\t\t? expressions[0]\n\t\t: undefined;\n}\n\nexport class DebugHoverWidget implements IContentWidget {\n\tstatic readonly ID = \"debug.hoverWidget\";\n\t// editor.IContentWidget.allowEditorOverflow\n\treadonly allowEditorOverflow = true;\n\n\t// todo@connor4312: move more properties that are only valid while a hover\n\t// is happening into `_isVisible`\n\tprivate _isVisible?: {\n\t\tstore: lifecycle.DisposableStore;\n\t};\n\tprivate safeTriangle?: dom.SafeTriangle;\n\tprivate showCancellationSource?: CancellationTokenSource;\n\tprivate domNode!: HTMLElement;\n\tprivate tree!: AsyncDataTree<IExpression, IExpression, any>;\n\tprivate showAtPosition: Position | null;\n\tprivate positionPreference: ContentWidgetPositionPreference[];\n\tprivate readonly highlightDecorations =\n\t\tthis.editor.createDecorationsCollection();\n\tprivate complexValueContainer!: HTMLElement;\n\tprivate complexValueTitle!: HTMLElement;\n\tprivate valueContainer!: HTMLElement;\n\tprivate treeContainer!: HTMLElement;\n\tprivate toDispose: lifecycle.IDisposable[];\n\tprivate scrollbar!: DomScrollableElement;\n\tprivate debugHoverComputer: DebugHoverComputer;\n\tprivate expressionRenderer: DebugExpressionRenderer;\n\n\tprivate expressionToRender: IExpression | undefined;\n\tprivate isUpdatingTree = false;\n\n\tpublic get isShowingComplexValue() {\n\t\treturn this.complexValueContainer?.hidden === false;\n\t}\n\n\tconstructor(\n\t\tprivate editor: ICodeEditor,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IContextKeyService\n\t\tprivate readonly contextKeyService: IContextKeyService,\n\t\t@IContextMenuService\n\t\tprivate readonly contextMenuService: IContextMenuService,\n\t) {\n\t\tthis.toDispose = [];\n\n\t\tthis.showAtPosition = null;\n\t\tthis.positionPreference = [\n\t\t\tContentWidgetPositionPreference.ABOVE,\n\t\t\tContentWidgetPositionPreference.BELOW,\n\t\t];\n\t\tthis.debugHoverComputer = this.instantiationService.createInstance(\n\t\t\tDebugHoverComputer,\n\t\t\tthis.editor,\n\t\t);\n\t\tthis.expressionRenderer = this.instantiationService.createInstance(\n\t\t\tDebugExpressionRenderer,\n\t\t);\n\t}\n\n\tprivate create(): void {\n\t\tthis.domNode = $(\".debug-hover-widget\");\n\t\tthis.complexValueContainer = dom.append(\n\t\t\tthis.domNode,\n\t\t\t$(\".complex-value\"),\n\t\t);\n\t\tthis.complexValueTitle = dom.append(\n\t\t\tthis.complexValueContainer,\n\t\t\t$(\".title\"),\n\t\t);\n\t\tthis.treeContainer = dom.append(\n\t\t\tthis.complexValueContainer,\n\t\t\t$(\".debug-hover-tree\"),\n\t\t);\n\t\tthis.treeContainer.setAttribute(\"role\", \"tree\");\n\t\tconst tip = dom.append(this.complexValueContainer, $(\".tip\"));\n\t\ttip.textContent = nls.localize(\n\t\t\t{\n\t\t\t\tkey: \"quickTip\",\n\t\t\t\tcomment: [\n\t\t\t\t\t'\"switch to editor language hover\" means to show the programming language hover widget instead of the debug hover',\n\t\t\t\t],\n\t\t\t},\n\t\t\t\"Hold {0} key to switch to editor language hover\",\n\t\t\tisMacintosh ? \"Option\" : \"Alt\",\n\t\t);\n\t\tconst dataSource =\n\t\t\tthis.instantiationService.createInstance(DebugHoverDataSource);\n\t\tthis.tree = <WorkbenchAsyncDataTree<IExpression, IExpression, any>>(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tWorkbenchAsyncDataTree,\n\t\t\t\t\"DebugHover\",\n\t\t\t\tthis.treeContainer,\n\t\t\t\tnew DebugHoverDelegate(),\n\t\t\t\t[\n\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\tVariablesRenderer,\n\t\t\t\t\t\tthis.expressionRenderer,\n\t\t\t\t\t),\n\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\tVisualizedVariableRenderer,\n\t\t\t\t\t\tthis.expressionRenderer,\n\t\t\t\t\t),\n\t\t\t\t],\n\t\t\t\tdataSource,\n\t\t\t\t{\n\t\t\t\t\taccessibilityProvider:\n\t\t\t\t\t\tnew DebugHoverAccessibilityProvider(),\n\t\t\t\t\tmouseSupport: false,\n\t\t\t\t\thorizontalScrolling: true,\n\t\t\t\t\tuseShadows: false,\n\t\t\t\t\tkeyboardNavigationLabelProvider: {\n\t\t\t\t\t\tgetKeyboardNavigationLabel: (e: IExpression) => e.name,\n\t\t\t\t\t},\n\t\t\t\t\toverrideStyles: {\n\t\t\t\t\t\tlistBackground: editorHoverBackground,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t)\n\t\t);\n\n\t\tthis.toDispose.push(\n\t\t\tVisualizedVariableRenderer.rendererOnVisualizationRange(\n\t\t\t\tthis.debugService.getViewModel(),\n\t\t\t\tthis.tree,\n\t\t\t),\n\t\t);\n\n\t\tthis.valueContainer = $(\".value\");\n\t\tthis.valueContainer.tabIndex = 0;\n\t\tthis.valueContainer.setAttribute(\"role\", \"tooltip\");\n\t\tthis.scrollbar = new DomScrollableElement(this.valueContainer, {\n\t\t\thorizontal: ScrollbarVisibility.Hidden,\n\t\t});\n\t\tthis.domNode.appendChild(this.scrollbar.getDomNode());\n\t\tthis.toDispose.push(this.scrollbar);\n\n\t\tthis.editor.applyFontInfo(this.domNode);\n\t\tthis.domNode.style.backgroundColor = asCssVariable(\n\t\t\teditorHoverBackground,\n\t\t);\n\t\tthis.domNode.style.border = `1px solid ${asCssVariable(editorHoverBorder)}`;\n\t\tthis.domNode.style.color = asCssVariable(editorHoverForeground);\n\n\t\tthis.toDispose.push(\n\t\t\tthis.tree.onContextMenu(async (e) => await this.onContextMenu(e)),\n\t\t);\n\n\t\tthis.toDispose.push(\n\t\t\tthis.tree.onDidChangeContentHeight(() => {\n\t\t\t\tif (!this.isUpdatingTree) {\n\t\t\t\t\t// Don't do a layout in the middle of the async setInput\n\t\t\t\t\tthis.layoutTreeAndContainer();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis.toDispose.push(\n\t\t\tthis.tree.onDidChangeContentWidth(() => {\n\t\t\t\tif (!this.isUpdatingTree) {\n\t\t\t\t\t// Don't do a layout in the middle of the async setInput\n\t\t\t\t\tthis.layoutTreeAndContainer();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis.registerListeners();\n\t\tthis.editor.addContentWidget(this);\n\t}\n\n\tprivate async onContextMenu(\n\t\te: ITreeContextMenuEvent<IExpression>,\n\t): Promise<void> {\n\t\tconst variable = e.element;\n\t\tif (!(variable instanceof Variable) || !variable.value) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn openContextMenuForVariableTreeElement(\n\t\t\tthis.contextKeyService,\n\t\t\tthis.menuService,\n\t\t\tthis.contextMenuService,\n\t\t\tMenuId.DebugHoverContext,\n\t\t\te,\n\t\t);\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis.toDispose.push(\n\t\t\tdom.addStandardDisposableListener(\n\t\t\t\tthis.domNode,\n\t\t\t\t\"keydown\",\n\t\t\t\t(e: IKeyboardEvent) => {\n\t\t\t\t\tif (e.equals(KeyCode.Escape)) {\n\t\t\t\t\t\tthis.hide();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tthis.toDispose.push(\n\t\t\tthis.editor.onDidChangeConfiguration(\n\t\t\t\t(e: ConfigurationChangedEvent) => {\n\t\t\t\t\tif (e.hasChanged(EditorOption.fontInfo)) {\n\t\t\t\t\t\tthis.editor.applyFontInfo(this.domNode);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis.toDispose.push(\n\t\t\tthis.debugService\n\t\t\t\t.getViewModel()\n\t\t\t\t.onDidEvaluateLazyExpression(async (e) => {\n\t\t\t\t\tif (e instanceof Variable && this.tree.hasNode(e)) {\n\t\t\t\t\t\tawait this.tree.updateChildren(e, false, true);\n\t\t\t\t\t\tawait this.tree.expand(e);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t);\n\t}\n\n\tisHovered(): boolean {\n\t\treturn !!this.domNode?.matches(\":hover\");\n\t}\n\n\tisVisible(): boolean {\n\t\treturn !!this._isVisible;\n\t}\n\n\twillBeVisible(): boolean {\n\t\treturn !!this.showCancellationSource;\n\t}\n\n\tgetId(): string {\n\t\treturn DebugHoverWidget.ID;\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this.domNode;\n\t}\n\n\t/**\n\t * Gets whether the given coordinates are in the safe triangle formed from\n\t * the position at which the hover was initiated.\n\t */\n\tisInSafeTriangle(x: number, y: number) {\n\t\treturn this._isVisible && !!this.safeTriangle?.contains(x, y);\n\t}\n\n\tasync showAt(\n\t\tposition: Position,\n\t\tfocus: boolean,\n\t\tmouseEvent?: IMouseEvent,\n\t): Promise<void | ShowDebugHoverResult> {\n\t\tthis.showCancellationSource?.dispose(true);\n\t\tconst cancellationSource = (this.showCancellationSource =\n\t\t\tnew CancellationTokenSource());\n\t\tconst session = this.debugService.getViewModel().focusedSession;\n\n\t\tif (!session || !this.editor.hasModel()) {\n\t\t\tthis.hide();\n\t\t\treturn ShowDebugHoverResult.NOT_AVAILABLE;\n\t\t}\n\n\t\tconst result = await this.debugHoverComputer.compute(\n\t\t\tposition,\n\t\t\tcancellationSource.token,\n\t\t);\n\t\tif (cancellationSource.token.isCancellationRequested) {\n\t\t\tthis.hide();\n\t\t\treturn ShowDebugHoverResult.CANCELLED;\n\t\t}\n\n\t\tif (!result.range) {\n\t\t\tthis.hide();\n\t\t\treturn ShowDebugHoverResult.NOT_AVAILABLE;\n\t\t}\n\n\t\tif (this.isVisible() && !result.rangeChanged) {\n\t\t\treturn ShowDebugHoverResult.NOT_CHANGED;\n\t\t}\n\n\t\tconst expression = await this.debugHoverComputer.evaluate(session);\n\t\tif (cancellationSource.token.isCancellationRequested) {\n\t\t\tthis.hide();\n\t\t\treturn ShowDebugHoverResult.CANCELLED;\n\t\t}\n\n\t\tif (\n\t\t\t!expression ||\n\t\t\t(expression instanceof Expression && !expression.available)\n\t\t) {\n\t\t\tthis.hide();\n\t\t\treturn ShowDebugHoverResult.NOT_AVAILABLE;\n\t\t}\n\n\t\tthis.highlightDecorations.set([\n\t\t\t{\n\t\t\t\trange: result.range,\n\t\t\t\toptions: DebugHoverWidget._HOVER_HIGHLIGHT_DECORATION_OPTIONS,\n\t\t\t},\n\t\t]);\n\n\t\treturn this.doShow(\n\t\t\tsession,\n\t\t\tresult.range.getStartPosition(),\n\t\t\texpression,\n\t\t\tfocus,\n\t\t\tmouseEvent,\n\t\t);\n\t}\n\n\tprivate static readonly _HOVER_HIGHLIGHT_DECORATION_OPTIONS =\n\t\tModelDecorationOptions.register({\n\t\t\tdescription: \"bdebug-hover-highlight\",\n\t\t\tclassName: \"hoverHighlight\",\n\t\t});\n\n\tprivate async doShow(\n\t\tsession: IDebugSession | undefined,\n\t\tposition: Position,\n\t\texpression: IExpression,\n\t\tfocus: boolean,\n\t\tmouseEvent: IMouseEvent | undefined,\n\t): Promise<void> {\n\t\tif (!this.domNode) {\n\t\t\tthis.create();\n\t\t}\n\n\t\tthis.showAtPosition = position;\n\t\tconst store = new lifecycle.DisposableStore();\n\t\tthis._isVisible = { store };\n\n\t\tif (!expression.hasChildren) {\n\t\t\tthis.complexValueContainer.hidden = true;\n\t\t\tthis.valueContainer.hidden = false;\n\t\t\tstore.add(\n\t\t\t\tthis.expressionRenderer.renderValue(\n\t\t\t\t\tthis.valueContainer,\n\t\t\t\t\texpression,\n\t\t\t\t\t{\n\t\t\t\t\t\tshowChanged: false,\n\t\t\t\t\t\tcolorize: true,\n\t\t\t\t\t\thover: false,\n\t\t\t\t\t\tsession,\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis.valueContainer.title = \"\";\n\t\t\tthis.editor.layoutContentWidget(this);\n\t\t\tthis.scrollbar.scanDomNode();\n\t\t\tif (focus) {\n\t\t\t\tthis.editor.render();\n\t\t\t\tthis.valueContainer.focus();\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis.valueContainer.hidden = true;\n\n\t\tthis.expressionToRender = expression;\n\t\tthis.complexValueTitle.textContent = expression.value;\n\t\tthis.complexValueTitle.title = expression.value;\n\t\tthis.editor.layoutContentWidget(this);\n\t\tthis.tree.scrollTop = 0;\n\t\tthis.tree.scrollLeft = 0;\n\t\tthis.complexValueContainer.hidden = false;\n\t\tthis.safeTriangle =\n\t\t\tmouseEvent &&\n\t\t\tnew dom.SafeTriangle(\n\t\t\t\tmouseEvent.posx,\n\t\t\t\tmouseEvent.posy,\n\t\t\t\tthis.domNode,\n\t\t\t);\n\n\t\tif (focus) {\n\t\t\tthis.editor.render();\n\t\t\tthis.tree.domFocus();\n\t\t}\n\t}\n\n\tprivate layoutTreeAndContainer(): void {\n\t\tthis.layoutTree();\n\t\tthis.editor.layoutContentWidget(this);\n\t}\n\n\tprivate layoutTree(): void {\n\t\tconst scrollBarHeight = 10;\n\t\tlet maxHeightToAvoidCursorOverlay = Number.POSITIVE_INFINITY;\n\t\tif (this.showAtPosition) {\n\t\t\tconst editorTop = this.editor.getDomNode()?.offsetTop || 0;\n\t\t\tconst containerTop = this.treeContainer.offsetTop + editorTop;\n\t\t\tconst hoveredCharTop =\n\t\t\t\tthis.editor.getTopForLineNumber(\n\t\t\t\t\tthis.showAtPosition.lineNumber,\n\t\t\t\t\ttrue,\n\t\t\t\t) - this.editor.getScrollTop();\n\t\t\tif (containerTop < hoveredCharTop) {\n\t\t\t\tmaxHeightToAvoidCursorOverlay = hoveredCharTop + editorTop - 22; // 22 is monaco top padding https://github.com/microsoft/vscode/blob/a1df2d7319382d42f66ad7f411af01e4cc49c80a/src/vs/editor/browser/viewParts/contentWidgets/contentWidgets.ts#L364\n\t\t\t}\n\t\t}\n\t\tconst treeHeight = Math.min(\n\t\t\tMath.max(266, this.editor.getLayoutInfo().height * 0.55),\n\t\t\tthis.tree.contentHeight + scrollBarHeight,\n\t\t\tmaxHeightToAvoidCursorOverlay,\n\t\t);\n\n\t\tconst realTreeWidth = this.tree.contentWidth;\n\t\tconst treeWidth = clamp(realTreeWidth, 400, 550);\n\t\tthis.tree.layout(treeHeight, treeWidth);\n\t\tthis.treeContainer.style.height = `${treeHeight}px`;\n\t\tthis.scrollbar.scanDomNode();\n\t}\n\n\tbeforeRender(): IDimension | null {\n\t\t// beforeRender will be called each time the hover size changes, and the content widget is layed out again.\n\t\tif (this.expressionToRender) {\n\t\t\tconst expression = this.expressionToRender;\n\t\t\tthis.expressionToRender = undefined;\n\n\t\t\t// Do this in beforeRender once the content widget is no longer display=none so that its elements' sizes will be measured correctly.\n\t\t\tthis.isUpdatingTree = true;\n\t\t\tthis.tree.setInput(expression).finally(() => {\n\t\t\t\tthis.isUpdatingTree = false;\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tafterRender(positionPreference: ContentWidgetPositionPreference | null) {\n\t\tif (positionPreference) {\n\t\t\t// Remember where the editor placed you to keep position stable #109226\n\t\t\tthis.positionPreference = [positionPreference];\n\t\t}\n\t}\n\n\thide(): void {\n\t\tif (this.showCancellationSource) {\n\t\t\tthis.showCancellationSource.dispose(true);\n\t\t\tthis.showCancellationSource = undefined;\n\t\t}\n\n\t\tif (!this._isVisible) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (dom.isAncestorOfActiveElement(this.domNode)) {\n\t\t\tthis.editor.focus();\n\t\t}\n\t\tthis._isVisible.store.dispose();\n\t\tthis._isVisible = undefined;\n\n\t\tthis.highlightDecorations.clear();\n\t\tthis.editor.layoutContentWidget(this);\n\t\tthis.positionPreference = [\n\t\t\tContentWidgetPositionPreference.ABOVE,\n\t\t\tContentWidgetPositionPreference.BELOW,\n\t\t];\n\t}\n\n\tgetPosition(): IContentWidgetPosition | null {\n\t\treturn this._isVisible\n\t\t\t? {\n\t\t\t\t\tposition: this.showAtPosition,\n\t\t\t\t\tpreference: this.positionPreference,\n\t\t\t\t}\n\t\t\t: null;\n\t}\n\n\tdispose(): void {\n\t\tthis.toDispose = lifecycle.dispose(this.toDispose);\n\t}\n}\n\nclass DebugHoverAccessibilityProvider\n\timplements IListAccessibilityProvider<IExpression>\n{\n\tgetWidgetAriaLabel(): string {\n\t\treturn nls.localize(\"treeAriaLabel\", \"Debug Hover\");\n\t}\n\n\tgetAriaLabel(element: IExpression): string {\n\t\treturn nls.localize(\n\t\t\t{\n\t\t\t\tkey: \"variableAriaLabel\",\n\t\t\t\tcomment: [\n\t\t\t\t\t\"Do not translate placeholders. Placeholders are name and value of a variable.\",\n\t\t\t\t],\n\t\t\t},\n\t\t\t\"{0}, value {1}, variables, debug\",\n\t\t\telement.name,\n\t\t\telement.value,\n\t\t);\n\t}\n}\n\nclass DebugHoverDataSource extends AbstractExpressionDataSource<\n\tIExpression,\n\tIExpression\n> {\n\tpublic override hasChildren(element: IExpression): boolean {\n\t\treturn element.hasChildren;\n\t}\n\n\tprotected override doGetChildren(\n\t\telement: IExpression,\n\t): Promise<IExpression[]> {\n\t\treturn element.getChildren();\n\t}\n}\n\nclass DebugHoverDelegate implements IListVirtualDelegate<IExpression> {\n\tgetHeight(element: IExpression): number {\n\t\treturn 18;\n\t}\n\n\tgetTemplateId(element: IExpression): string {\n\t\tif (element instanceof VisualizedExpression) {\n\t\t\treturn VisualizedVariableRenderer.ID;\n\t\t}\n\t\treturn VariablesRenderer.ID;\n\t}\n}\n\ninterface IDebugHoverComputeResult {\n\trangeChanged: boolean;\n\trange?: Range;\n}\n\nclass DebugHoverComputer {\n\tprivate _current?: {\n\t\trange: Range;\n\t\texpression: string;\n\t};\n\n\tconstructor(\n\t\tprivate editor: ICodeEditor,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@ILanguageFeaturesService\n\t\tprivate readonly languageFeaturesService: ILanguageFeaturesService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {}\n\n\tpublic async compute(\n\t\tposition: Position,\n\t\ttoken: CancellationToken,\n\t): Promise<IDebugHoverComputeResult> {\n\t\tconst session = this.debugService.getViewModel().focusedSession;\n\t\tif (!session || !this.editor.hasModel()) {\n\t\t\treturn { rangeChanged: false };\n\t\t}\n\n\t\tconst model = this.editor.getModel();\n\t\tconst result = await getEvaluatableExpressionAtPosition(\n\t\t\tthis.languageFeaturesService,\n\t\t\tmodel,\n\t\t\tposition,\n\t\t\ttoken,\n\t\t);\n\t\tif (!result) {\n\t\t\treturn { rangeChanged: false };\n\t\t}\n\n\t\tconst { range, matchingExpression } = result;\n\t\tconst rangeChanged = !this._current?.range.equalsRange(range);\n\t\tthis._current = {\n\t\t\texpression: matchingExpression,\n\t\t\trange: Range.lift(range),\n\t\t};\n\t\treturn { rangeChanged, range: this._current.range };\n\t}\n\n\tasync evaluate(session: IDebugSession): Promise<IExpression | undefined> {\n\t\tif (!this._current) {\n\t\t\tthis.logService.error(\"No expression to evaluate\");\n\t\t\treturn;\n\t\t}\n\n\t\tconst textModel = this.editor.getModel();\n\t\tconst debugSource =\n\t\t\ttextModel && session.getSourceForUri(textModel?.uri);\n\n\t\tif (session.capabilities.supportsEvaluateForHovers) {\n\t\t\tconst expression = new Expression(this._current.expression);\n\t\t\tawait expression.evaluate(\n\t\t\t\tsession,\n\t\t\t\tthis.debugService.getViewModel().focusedStackFrame,\n\t\t\t\t\"hover\",\n\t\t\t\tundefined,\n\t\t\t\tdebugSource\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tline: this._current.range.startLineNumber,\n\t\t\t\t\t\t\tcolumn: this._current.range.startColumn,\n\t\t\t\t\t\t\tsource: debugSource.raw,\n\t\t\t\t\t\t}\n\t\t\t\t\t: undefined,\n\t\t\t);\n\t\t\treturn expression;\n\t\t} else {\n\t\t\tconst focusedStackFrame =\n\t\t\t\tthis.debugService.getViewModel().focusedStackFrame;\n\t\t\tif (focusedStackFrame) {\n\t\t\t\treturn await findExpressionInStackFrame(\n\t\t\t\t\tfocusedStackFrame,\n\t\t\t\t\tcoalesce(\n\t\t\t\t\t\tthis._current.expression\n\t\t\t\t\t\t\t.split(\".\")\n\t\t\t\t\t\t\t.map((word) => word.trim()),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["ShowDebugHoverResult"]
}
