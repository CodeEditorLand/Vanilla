{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/debugHover.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { IKeyboardEvent } from '../../../../base/browser/keyboardEvent.js';\nimport { IMouseEvent } from '../../../../base/browser/mouseEvent.js';\nimport { IListVirtualDelegate } from '../../../../base/browser/ui/list/list.js';\nimport { IListAccessibilityProvider } from '../../../../base/browser/ui/list/listWidget.js';\nimport { DomScrollableElement } from '../../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { AsyncDataTree } from '../../../../base/browser/ui/tree/asyncDataTree.js';\nimport { ITreeContextMenuEvent } from '../../../../base/browser/ui/tree/tree.js';\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { KeyCode } from '../../../../base/common/keyCodes.js';\nimport * as lifecycle from '../../../../base/common/lifecycle.js';\nimport { clamp } from '../../../../base/common/numbers.js';\nimport { isMacintosh } from '../../../../base/common/platform.js';\nimport { ScrollbarVisibility } from '../../../../base/common/scrollable.js';\nimport { ContentWidgetPositionPreference, ICodeEditor, IContentWidget, IContentWidgetPosition } from '../../../../editor/browser/editorBrowser.js';\nimport { ConfigurationChangedEvent, EditorOption } from '../../../../editor/common/config/editorOptions.js';\nimport { IDimension } from '../../../../editor/common/core/dimension.js';\nimport { Position } from '../../../../editor/common/core/position.js';\nimport { Range } from '../../../../editor/common/core/range.js';\nimport { ModelDecorationOptions } from '../../../../editor/common/model/textModel.js';\nimport { ILanguageFeaturesService } from '../../../../editor/common/services/languageFeatures.js';\nimport * as nls from '../../../../nls.js';\nimport { IMenuService, MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { WorkbenchAsyncDataTree } from '../../../../platform/list/browser/listService.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { asCssVariable, editorHoverBackground, editorHoverBorder, editorHoverForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { IDebugService, IDebugSession, IExpression, IExpressionContainer, IStackFrame } from '../common/debug.js';\nimport { Expression, Variable, VisualizedExpression } from '../common/debugModel.js';\nimport { getEvaluatableExpressionAtPosition } from '../common/debugUtils.js';\nimport { AbstractExpressionDataSource } from './baseDebugView.js';\nimport { DebugExpressionRenderer } from './debugExpressionRenderer.js';\nimport { VariablesRenderer, VisualizedVariableRenderer, openContextMenuForVariableTreeElement } from './variablesView.js';\n\nconst $ = dom.$;\n\nexport const enum ShowDebugHoverResult {\n\tNOT_CHANGED,\n\tNOT_AVAILABLE,\n\tCANCELLED,\n}\n\nasync function doFindExpression(container: IExpressionContainer, namesToFind: string[]): Promise<IExpression | null> {\n\tif (!container) {\n\t\treturn null;\n\t}\n\n\tconst children = await container.getChildren();\n\t// look for our variable in the list. First find the parents of the hovered variable if there are any.\n\tconst filtered = children.filter(v => namesToFind[0] === v.name);\n\tif (filtered.length !== 1) {\n\t\treturn null;\n\t}\n\n\tif (namesToFind.length === 1) {\n\t\treturn filtered[0];\n\t} else {\n\t\treturn doFindExpression(filtered[0], namesToFind.slice(1));\n\t}\n}\n\nexport async function findExpressionInStackFrame(stackFrame: IStackFrame, namesToFind: string[]): Promise<IExpression | undefined> {\n\tconst scopes = await stackFrame.getScopes();\n\tconst nonExpensive = scopes.filter(s => !s.expensive);\n\tconst expressions = coalesce(await Promise.all(nonExpensive.map(scope => doFindExpression(scope, namesToFind))));\n\n\t// only show if all expressions found have the same value\n\treturn expressions.length > 0 && expressions.every(e => e.value === expressions[0].value) ? expressions[0] : undefined;\n}\n\nexport class DebugHoverWidget implements IContentWidget {\n\n\tstatic readonly ID = 'debug.hoverWidget';\n\t// editor.IContentWidget.allowEditorOverflow\n\treadonly allowEditorOverflow = true;\n\n\t// todo@connor4312: move more properties that are only valid while a hover\n\t// is happening into `_isVisible`\n\tprivate _isVisible?: {\n\t\tstore: lifecycle.DisposableStore;\n\t};\n\tprivate safeTriangle?: dom.SafeTriangle;\n\tprivate showCancellationSource?: CancellationTokenSource;\n\tprivate domNode!: HTMLElement;\n\tprivate tree!: AsyncDataTree<IExpression, IExpression, any>;\n\tprivate showAtPosition: Position | null;\n\tprivate positionPreference: ContentWidgetPositionPreference[];\n\tprivate readonly highlightDecorations = this.editor.createDecorationsCollection();\n\tprivate complexValueContainer!: HTMLElement;\n\tprivate complexValueTitle!: HTMLElement;\n\tprivate valueContainer!: HTMLElement;\n\tprivate treeContainer!: HTMLElement;\n\tprivate toDispose: lifecycle.IDisposable[];\n\tprivate scrollbar!: DomScrollableElement;\n\tprivate debugHoverComputer: DebugHoverComputer;\n\tprivate expressionRenderer: DebugExpressionRenderer;\n\n\tprivate expressionToRender: IExpression | undefined;\n\tprivate isUpdatingTree = false;\n\n\tpublic get isShowingComplexValue() {\n\t\treturn this.complexValueContainer?.hidden === false;\n\t}\n\n\tconstructor(\n\t\tprivate editor: ICodeEditor,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t) {\n\t\tthis.toDispose = [];\n\n\t\tthis.showAtPosition = null;\n\t\tthis.positionPreference = [ContentWidgetPositionPreference.ABOVE, ContentWidgetPositionPreference.BELOW];\n\t\tthis.debugHoverComputer = this.instantiationService.createInstance(DebugHoverComputer, this.editor);\n\t\tthis.expressionRenderer = this.instantiationService.createInstance(DebugExpressionRenderer);\n\t}\n\n\tprivate create(): void {\n\t\tthis.domNode = $('.debug-hover-widget');\n\t\tthis.complexValueContainer = dom.append(this.domNode, $('.complex-value'));\n\t\tthis.complexValueTitle = dom.append(this.complexValueContainer, $('.title'));\n\t\tthis.treeContainer = dom.append(this.complexValueContainer, $('.debug-hover-tree'));\n\t\tthis.treeContainer.setAttribute('role', 'tree');\n\t\tconst tip = dom.append(this.complexValueContainer, $('.tip'));\n\t\ttip.textContent = nls.localize({ key: 'quickTip', comment: ['\"switch to editor language hover\" means to show the programming language hover widget instead of the debug hover'] }, 'Hold {0} key to switch to editor language hover', isMacintosh ? 'Option' : 'Alt');\n\t\tconst dataSource = this.instantiationService.createInstance(DebugHoverDataSource);\n\t\tthis.tree = <WorkbenchAsyncDataTree<IExpression, IExpression, any>>this.instantiationService.createInstance(WorkbenchAsyncDataTree, 'DebugHover', this.treeContainer, new DebugHoverDelegate(), [\n\t\t\tthis.instantiationService.createInstance(VariablesRenderer, this.expressionRenderer),\n\t\t\tthis.instantiationService.createInstance(VisualizedVariableRenderer, this.expressionRenderer),\n\t\t],\n\t\t\tdataSource, {\n\t\t\taccessibilityProvider: new DebugHoverAccessibilityProvider(),\n\t\t\tmouseSupport: false,\n\t\t\thorizontalScrolling: true,\n\t\t\tuseShadows: false,\n\t\t\tkeyboardNavigationLabelProvider: { getKeyboardNavigationLabel: (e: IExpression) => e.name },\n\t\t\toverrideStyles: {\n\t\t\t\tlistBackground: editorHoverBackground\n\t\t\t}\n\t\t});\n\n\t\tthis.toDispose.push(VisualizedVariableRenderer.rendererOnVisualizationRange(this.debugService.getViewModel(), this.tree));\n\n\t\tthis.valueContainer = $('.value');\n\t\tthis.valueContainer.tabIndex = 0;\n\t\tthis.valueContainer.setAttribute('role', 'tooltip');\n\t\tthis.scrollbar = new DomScrollableElement(this.valueContainer, { horizontal: ScrollbarVisibility.Hidden });\n\t\tthis.domNode.appendChild(this.scrollbar.getDomNode());\n\t\tthis.toDispose.push(this.scrollbar);\n\n\t\tthis.editor.applyFontInfo(this.domNode);\n\t\tthis.domNode.style.backgroundColor = asCssVariable(editorHoverBackground);\n\t\tthis.domNode.style.border = `1px solid ${asCssVariable(editorHoverBorder)}`;\n\t\tthis.domNode.style.color = asCssVariable(editorHoverForeground);\n\n\t\tthis.toDispose.push(this.tree.onContextMenu(async e => await this.onContextMenu(e)));\n\n\t\tthis.toDispose.push(this.tree.onDidChangeContentHeight(() => {\n\t\t\tif (!this.isUpdatingTree) {\n\t\t\t\t// Don't do a layout in the middle of the async setInput\n\t\t\t\tthis.layoutTreeAndContainer();\n\t\t\t}\n\t\t}));\n\t\tthis.toDispose.push(this.tree.onDidChangeContentWidth(() => {\n\t\t\tif (!this.isUpdatingTree) {\n\t\t\t\t// Don't do a layout in the middle of the async setInput\n\t\t\t\tthis.layoutTreeAndContainer();\n\t\t\t}\n\t\t}));\n\n\t\tthis.registerListeners();\n\t\tthis.editor.addContentWidget(this);\n\t}\n\n\tprivate async onContextMenu(e: ITreeContextMenuEvent<IExpression>): Promise<void> {\n\t\tconst variable = e.element;\n\t\tif (!(variable instanceof Variable) || !variable.value) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn openContextMenuForVariableTreeElement(this.contextKeyService, this.menuService, this.contextMenuService, MenuId.DebugHoverContext, e);\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis.toDispose.push(dom.addStandardDisposableListener(this.domNode, 'keydown', (e: IKeyboardEvent) => {\n\t\t\tif (e.equals(KeyCode.Escape)) {\n\t\t\t\tthis.hide();\n\t\t\t}\n\t\t}));\n\t\tthis.toDispose.push(this.editor.onDidChangeConfiguration((e: ConfigurationChangedEvent) => {\n\t\t\tif (e.hasChanged(EditorOption.fontInfo)) {\n\t\t\t\tthis.editor.applyFontInfo(this.domNode);\n\t\t\t}\n\t\t}));\n\n\t\tthis.toDispose.push(this.debugService.getViewModel().onDidEvaluateLazyExpression(async e => {\n\t\t\tif (e instanceof Variable && this.tree.hasNode(e)) {\n\t\t\t\tawait this.tree.updateChildren(e, false, true);\n\t\t\t\tawait this.tree.expand(e);\n\t\t\t}\n\t\t}));\n\t}\n\n\tisHovered(): boolean {\n\t\treturn !!this.domNode?.matches(':hover');\n\t}\n\n\tisVisible(): boolean {\n\t\treturn !!this._isVisible;\n\t}\n\n\twillBeVisible(): boolean {\n\t\treturn !!this.showCancellationSource;\n\t}\n\n\tgetId(): string {\n\t\treturn DebugHoverWidget.ID;\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this.domNode;\n\t}\n\n\t/**\n\t * Gets whether the given coordinates are in the safe triangle formed from\n\t * the position at which the hover was initiated.\n\t */\n\tisInSafeTriangle(x: number, y: number) {\n\t\treturn this._isVisible && !!this.safeTriangle?.contains(x, y);\n\t}\n\n\tasync showAt(position: Position, focus: boolean, mouseEvent?: IMouseEvent): Promise<void | ShowDebugHoverResult> {\n\t\tthis.showCancellationSource?.dispose(true);\n\t\tconst cancellationSource = this.showCancellationSource = new CancellationTokenSource();\n\t\tconst session = this.debugService.getViewModel().focusedSession;\n\n\t\tif (!session || !this.editor.hasModel()) {\n\t\t\tthis.hide();\n\t\t\treturn ShowDebugHoverResult.NOT_AVAILABLE;\n\t\t}\n\n\t\tconst result = await this.debugHoverComputer.compute(position, cancellationSource.token);\n\t\tif (cancellationSource.token.isCancellationRequested) {\n\t\t\tthis.hide();\n\t\t\treturn ShowDebugHoverResult.CANCELLED;\n\t\t}\n\n\t\tif (!result.range) {\n\t\t\tthis.hide();\n\t\t\treturn ShowDebugHoverResult.NOT_AVAILABLE;\n\t\t}\n\n\t\tif (this.isVisible() && !result.rangeChanged) {\n\t\t\treturn ShowDebugHoverResult.NOT_CHANGED;\n\t\t}\n\n\t\tconst expression = await this.debugHoverComputer.evaluate(session);\n\t\tif (cancellationSource.token.isCancellationRequested) {\n\t\t\tthis.hide();\n\t\t\treturn ShowDebugHoverResult.CANCELLED;\n\t\t}\n\n\t\tif (!expression || (expression instanceof Expression && !expression.available)) {\n\t\t\tthis.hide();\n\t\t\treturn ShowDebugHoverResult.NOT_AVAILABLE;\n\t\t}\n\n\t\tthis.highlightDecorations.set([{\n\t\t\trange: result.range,\n\t\t\toptions: DebugHoverWidget._HOVER_HIGHLIGHT_DECORATION_OPTIONS\n\t\t}]);\n\n\t\treturn this.doShow(session, result.range.getStartPosition(), expression, focus, mouseEvent);\n\t}\n\n\tprivate static readonly _HOVER_HIGHLIGHT_DECORATION_OPTIONS = ModelDecorationOptions.register({\n\t\tdescription: 'bdebug-hover-highlight',\n\t\tclassName: 'hoverHighlight'\n\t});\n\n\tprivate async doShow(session: IDebugSession | undefined, position: Position, expression: IExpression, focus: boolean, mouseEvent: IMouseEvent | undefined): Promise<void> {\n\t\tif (!this.domNode) {\n\t\t\tthis.create();\n\t\t}\n\n\t\tthis.showAtPosition = position;\n\t\tconst store = new lifecycle.DisposableStore();\n\t\tthis._isVisible = { store };\n\n\t\tif (!expression.hasChildren) {\n\t\t\tthis.complexValueContainer.hidden = true;\n\t\t\tthis.valueContainer.hidden = false;\n\t\t\tstore.add(this.expressionRenderer.renderValue(this.valueContainer, expression, {\n\t\t\t\tshowChanged: false,\n\t\t\t\tcolorize: true,\n\t\t\t\thover: false,\n\t\t\t\tsession,\n\t\t\t}));\n\t\t\tthis.valueContainer.title = '';\n\t\t\tthis.editor.layoutContentWidget(this);\n\t\t\tthis.scrollbar.scanDomNode();\n\t\t\tif (focus) {\n\t\t\t\tthis.editor.render();\n\t\t\t\tthis.valueContainer.focus();\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis.valueContainer.hidden = true;\n\n\t\tthis.expressionToRender = expression;\n\t\tthis.complexValueTitle.textContent = expression.value;\n\t\tthis.complexValueTitle.title = expression.value;\n\t\tthis.editor.layoutContentWidget(this);\n\t\tthis.tree.scrollTop = 0;\n\t\tthis.tree.scrollLeft = 0;\n\t\tthis.complexValueContainer.hidden = false;\n\t\tthis.safeTriangle = mouseEvent && new dom.SafeTriangle(mouseEvent.posx, mouseEvent.posy, this.domNode);\n\n\t\tif (focus) {\n\t\t\tthis.editor.render();\n\t\t\tthis.tree.domFocus();\n\t\t}\n\t}\n\n\tprivate layoutTreeAndContainer(): void {\n\t\tthis.layoutTree();\n\t\tthis.editor.layoutContentWidget(this);\n\t}\n\n\tprivate layoutTree(): void {\n\t\tconst scrollBarHeight = 10;\n\t\tlet maxHeightToAvoidCursorOverlay = Infinity;\n\t\tif (this.showAtPosition) {\n\t\t\tconst editorTop = this.editor.getDomNode()?.offsetTop || 0;\n\t\t\tconst containerTop = this.treeContainer.offsetTop + editorTop;\n\t\t\tconst hoveredCharTop = this.editor.getTopForLineNumber(this.showAtPosition.lineNumber, true) - this.editor.getScrollTop();\n\t\t\tif (containerTop < hoveredCharTop) {\n\t\t\t\tmaxHeightToAvoidCursorOverlay = hoveredCharTop + editorTop - 22; // 22 is monaco top padding https://github.com/microsoft/vscode/blob/a1df2d7319382d42f66ad7f411af01e4cc49c80a/src/vs/editor/browser/viewParts/contentWidgets/contentWidgets.ts#L364\n\t\t\t}\n\t\t}\n\t\tconst treeHeight = Math.min(Math.max(266, this.editor.getLayoutInfo().height * 0.55), this.tree.contentHeight + scrollBarHeight, maxHeightToAvoidCursorOverlay);\n\n\t\tconst realTreeWidth = this.tree.contentWidth;\n\t\tconst treeWidth = clamp(realTreeWidth, 400, 550);\n\t\tthis.tree.layout(treeHeight, treeWidth);\n\t\tthis.treeContainer.style.height = `${treeHeight}px`;\n\t\tthis.scrollbar.scanDomNode();\n\t}\n\n\tbeforeRender(): IDimension | null {\n\t\t// beforeRender will be called each time the hover size changes, and the content widget is layed out again.\n\t\tif (this.expressionToRender) {\n\t\t\tconst expression = this.expressionToRender;\n\t\t\tthis.expressionToRender = undefined;\n\n\t\t\t// Do this in beforeRender once the content widget is no longer display=none so that its elements' sizes will be measured correctly.\n\t\t\tthis.isUpdatingTree = true;\n\t\t\tthis.tree.setInput(expression).finally(() => {\n\t\t\t\tthis.isUpdatingTree = false;\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tafterRender(positionPreference: ContentWidgetPositionPreference | null) {\n\t\tif (positionPreference) {\n\t\t\t// Remember where the editor placed you to keep position stable #109226\n\t\t\tthis.positionPreference = [positionPreference];\n\t\t}\n\t}\n\n\n\thide(): void {\n\t\tif (this.showCancellationSource) {\n\t\t\tthis.showCancellationSource.dispose(true);\n\t\t\tthis.showCancellationSource = undefined;\n\t\t}\n\n\t\tif (!this._isVisible) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (dom.isAncestorOfActiveElement(this.domNode)) {\n\t\t\tthis.editor.focus();\n\t\t}\n\t\tthis._isVisible.store.dispose();\n\t\tthis._isVisible = undefined;\n\n\t\tthis.highlightDecorations.clear();\n\t\tthis.editor.layoutContentWidget(this);\n\t\tthis.positionPreference = [ContentWidgetPositionPreference.ABOVE, ContentWidgetPositionPreference.BELOW];\n\t}\n\n\tgetPosition(): IContentWidgetPosition | null {\n\t\treturn this._isVisible ? {\n\t\t\tposition: this.showAtPosition,\n\t\t\tpreference: this.positionPreference\n\t\t} : null;\n\t}\n\n\tdispose(): void {\n\t\tthis.toDispose = lifecycle.dispose(this.toDispose);\n\t}\n}\n\nclass DebugHoverAccessibilityProvider implements IListAccessibilityProvider<IExpression> {\n\n\tgetWidgetAriaLabel(): string {\n\t\treturn nls.localize('treeAriaLabel', \"Debug Hover\");\n\t}\n\n\tgetAriaLabel(element: IExpression): string {\n\t\treturn nls.localize({ key: 'variableAriaLabel', comment: ['Do not translate placeholders. Placeholders are name and value of a variable.'] }, \"{0}, value {1}, variables, debug\", element.name, element.value);\n\t}\n}\n\nclass DebugHoverDataSource extends AbstractExpressionDataSource<IExpression, IExpression> {\n\n\tpublic override hasChildren(element: IExpression): boolean {\n\t\treturn element.hasChildren;\n\t}\n\n\tprotected override doGetChildren(element: IExpression): Promise<IExpression[]> {\n\t\treturn element.getChildren();\n\t}\n}\n\nclass DebugHoverDelegate implements IListVirtualDelegate<IExpression> {\n\tgetHeight(element: IExpression): number {\n\t\treturn 18;\n\t}\n\n\tgetTemplateId(element: IExpression): string {\n\t\tif (element instanceof VisualizedExpression) {\n\t\t\treturn VisualizedVariableRenderer.ID;\n\t\t}\n\t\treturn VariablesRenderer.ID;\n\t}\n}\n\ninterface IDebugHoverComputeResult {\n\trangeChanged: boolean;\n\trange?: Range;\n}\n\nclass DebugHoverComputer {\n\tprivate _current?: {\n\t\trange: Range;\n\t\texpression: string;\n\t};\n\n\tconstructor(\n\t\tprivate editor: ICodeEditor,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@ILanguageFeaturesService private readonly languageFeaturesService: ILanguageFeaturesService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) { }\n\n\tpublic async compute(position: Position, token: CancellationToken): Promise<IDebugHoverComputeResult> {\n\t\tconst session = this.debugService.getViewModel().focusedSession;\n\t\tif (!session || !this.editor.hasModel()) {\n\t\t\treturn { rangeChanged: false };\n\t\t}\n\n\t\tconst model = this.editor.getModel();\n\t\tconst result = await getEvaluatableExpressionAtPosition(this.languageFeaturesService, model, position, token);\n\t\tif (!result) {\n\t\t\treturn { rangeChanged: false };\n\t\t}\n\n\t\tconst { range, matchingExpression } = result;\n\t\tconst rangeChanged = !this._current?.range.equalsRange(range);\n\t\tthis._current = { expression: matchingExpression, range: Range.lift(range) };\n\t\treturn { rangeChanged, range: this._current.range };\n\t}\n\n\tasync evaluate(session: IDebugSession): Promise<IExpression | undefined> {\n\t\tif (!this._current) {\n\t\t\tthis.logService.error('No expression to evaluate');\n\t\t\treturn;\n\t\t}\n\n\t\tconst textModel = this.editor.getModel();\n\t\tconst debugSource = textModel && session.getSourceForUri(textModel?.uri);\n\n\t\tif (session.capabilities.supportsEvaluateForHovers) {\n\t\t\tconst expression = new Expression(this._current.expression);\n\t\t\tawait expression.evaluate(session, this.debugService.getViewModel().focusedStackFrame, 'hover', undefined, debugSource ? {\n\t\t\t\tline: this._current.range.startLineNumber,\n\t\t\t\tcolumn: this._current.range.startColumn,\n\t\t\t\tsource: debugSource.raw,\n\t\t\t} : undefined);\n\t\t\treturn expression;\n\t\t} else {\n\t\t\tconst focusedStackFrame = this.debugService.getViewModel().focusedStackFrame;\n\t\t\tif (focusedStackFrame) {\n\t\t\t\treturn await findExpressionInStackFrame(\n\t\t\t\t\tfocusedStackFrame,\n\t\t\t\t\tcoalesce(this._current.expression.split('.').map(word => word.trim()))\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["ShowDebugHoverResult"]
}
