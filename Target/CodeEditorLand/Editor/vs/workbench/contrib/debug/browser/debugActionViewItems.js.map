{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/debugActionViewItems.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\nimport { IAction } from '../../../../base/common/actions.js';\nimport { KeyCode } from '../../../../base/common/keyCodes.js';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../../base/browser/keyboardEvent.js';\nimport { SelectBox, ISelectOptionItem } from '../../../../base/browser/ui/selectBox/selectBox.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IDebugService, IDebugSession, IDebugConfiguration, IConfig, ILaunch, State } from '../common/debug.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { selectBorder, selectBackground, asCssVariable } from '../../../../platform/theme/common/colorRegistry.js';\nimport { IContextViewService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IWorkspaceContextService, WorkbenchState } from '../../../../platform/workspace/common/workspace.js';\nimport { IDisposable, dispose } from '../../../../base/common/lifecycle.js';\nimport { ADD_CONFIGURATION_ID } from './debugCommands.js';\nimport { BaseActionViewItem, IBaseActionViewItemOptions, SelectActionViewItem } from '../../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { debugStart } from './debugIcons.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { defaultSelectBoxStyles } from '../../../../platform/theme/browser/defaultStyles.js';\nimport { getDefaultHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegateFactory.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\nimport { AccessibilityVerbositySettingId } from '../../accessibility/browser/accessibilityConfiguration.js';\nimport { AccessibilityCommandId } from '../../accessibility/common/accessibilityCommands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\n\nconst $ = dom.$;\n\nexport class StartDebugActionViewItem extends BaseActionViewItem {\n\n\tprivate static readonly SEPARATOR = '\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500';\n\n\tprivate container!: HTMLElement;\n\tprivate start!: HTMLElement;\n\tprivate selectBox: SelectBox;\n\tprivate debugOptions: { label: string; handler: (() => Promise<boolean>) }[] = [];\n\tprivate toDispose: IDisposable[];\n\tprivate selected = 0;\n\tprivate providers: { label: string; type: string; pick: () => Promise<{ launch: ILaunch; config: IConfig } | undefined> }[] = [];\n\n\tconstructor(\n\t\tprivate context: unknown,\n\t\taction: IAction,\n\t\toptions: IBaseActionViewItemOptions,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IContextViewService contextViewService: IContextViewService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService\n\t) {\n\t\tsuper(context, action, options);\n\t\tthis.toDispose = [];\n\t\tthis.selectBox = new SelectBox([], -1, contextViewService, defaultSelectBoxStyles, { ariaLabel: nls.localize('debugLaunchConfigurations', 'Debug Launch Configurations') });\n\t\tthis.selectBox.setFocusable(false);\n\t\tthis.toDispose.push(this.selectBox);\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis.toDispose.push(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('launch')) {\n\t\t\t\tthis.updateOptions();\n\t\t\t}\n\t\t}));\n\t\tthis.toDispose.push(this.debugService.getConfigurationManager().onDidSelectConfiguration(() => {\n\t\t\tthis.updateOptions();\n\t\t}));\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tthis.container = container;\n\t\tcontainer.classList.add('start-debug-action-item');\n\t\tthis.start = dom.append(container, $(ThemeIcon.asCSSSelector(debugStart)));\n\t\tconst keybinding = this.keybindingService.lookupKeybinding(this.action.id)?.getLabel();\n\t\tconst keybindingLabel = keybinding ? ` (${keybinding})` : '';\n\t\tconst title = this.action.label + keybindingLabel;\n\t\tthis.toDispose.push(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), this.start, title));\n\t\tthis.start.setAttribute('role', 'button');\n\t\tthis._setAriaLabel(title);\n\n\t\tthis.toDispose.push(dom.addDisposableListener(this.start, dom.EventType.CLICK, () => {\n\t\t\tthis.start.blur();\n\t\t\tif (this.debugService.state !== State.Initializing) {\n\t\t\t\tthis.actionRunner.run(this.action, this.context);\n\t\t\t}\n\t\t}));\n\n\t\tthis.toDispose.push(dom.addDisposableListener(this.start, dom.EventType.MOUSE_DOWN, (e: MouseEvent) => {\n\t\t\tif (this.action.enabled && e.button === 0) {\n\t\t\t\tthis.start.classList.add('active');\n\t\t\t}\n\t\t}));\n\t\tthis.toDispose.push(dom.addDisposableListener(this.start, dom.EventType.MOUSE_UP, () => {\n\t\t\tthis.start.classList.remove('active');\n\t\t}));\n\t\tthis.toDispose.push(dom.addDisposableListener(this.start, dom.EventType.MOUSE_OUT, () => {\n\t\t\tthis.start.classList.remove('active');\n\t\t}));\n\n\t\tthis.toDispose.push(dom.addDisposableListener(this.start, dom.EventType.KEY_DOWN, (e: KeyboardEvent) => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\tif (event.equals(KeyCode.RightArrow)) {\n\t\t\t\tthis.start.tabIndex = -1;\n\t\t\t\tthis.selectBox.focus();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t}));\n\t\tthis.toDispose.push(this.selectBox.onDidSelect(async e => {\n\t\t\tconst target = this.debugOptions[e.index];\n\t\t\tconst shouldBeSelected = target.handler ? await target.handler() : false;\n\t\t\tif (shouldBeSelected) {\n\t\t\t\tthis.selected = e.index;\n\t\t\t} else {\n\t\t\t\t// Some select options should not remain selected https://github.com/microsoft/vscode/issues/31526\n\t\t\t\tthis.selectBox.select(this.selected);\n\t\t\t}\n\t\t}));\n\n\t\tconst selectBoxContainer = $('.configuration');\n\t\tthis.selectBox.render(dom.append(container, selectBoxContainer));\n\t\tthis.toDispose.push(dom.addDisposableListener(selectBoxContainer, dom.EventType.KEY_DOWN, (e: KeyboardEvent) => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\tif (event.equals(KeyCode.LeftArrow)) {\n\t\t\t\tthis.selectBox.setFocusable(false);\n\t\t\t\tthis.start.tabIndex = 0;\n\t\t\t\tthis.start.focus();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t}));\n\t\tthis.container.style.border = `1px solid ${asCssVariable(selectBorder)}`;\n\t\tselectBoxContainer.style.borderLeft = `1px solid ${asCssVariable(selectBorder)}`;\n\t\tthis.container.style.backgroundColor = asCssVariable(selectBackground);\n\n\t\tconst configManager = this.debugService.getConfigurationManager();\n\t\tconst updateDynamicConfigs = () => configManager.getDynamicProviders().then(providers => {\n\t\t\tif (providers.length !== this.providers.length) {\n\t\t\t\tthis.providers = providers;\n\t\t\t\tthis.updateOptions();\n\t\t\t}\n\t\t});\n\n\t\tthis.toDispose.push(configManager.onDidChangeConfigurationProviders(updateDynamicConfigs));\n\t\tupdateDynamicConfigs();\n\t\tthis.updateOptions();\n\t}\n\n\toverride setActionContext(context: any): void {\n\t\tthis.context = context;\n\t}\n\n\toverride isEnabled(): boolean {\n\t\treturn true;\n\t}\n\n\toverride focus(fromRight?: boolean): void {\n\t\tif (fromRight) {\n\t\t\tthis.selectBox.focus();\n\t\t} else {\n\t\t\tthis.start.tabIndex = 0;\n\t\t\tthis.start.focus();\n\t\t}\n\t}\n\n\toverride blur(): void {\n\t\tthis.start.tabIndex = -1;\n\t\tthis.selectBox.blur();\n\t\tthis.container.blur();\n\t}\n\n\toverride setFocusable(focusable: boolean): void {\n\t\tif (focusable) {\n\t\t\tthis.start.tabIndex = 0;\n\t\t} else {\n\t\t\tthis.start.tabIndex = -1;\n\t\t\tthis.selectBox.setFocusable(false);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.toDispose = dispose(this.toDispose);\n\t\tsuper.dispose();\n\t}\n\n\tprivate updateOptions(): void {\n\t\tthis.selected = 0;\n\t\tthis.debugOptions = [];\n\t\tconst manager = this.debugService.getConfigurationManager();\n\t\tconst inWorkspace = this.contextService.getWorkbenchState() === WorkbenchState.WORKSPACE;\n\t\tlet lastGroup: string | undefined;\n\t\tconst disabledIdxs: number[] = [];\n\t\tmanager.getAllConfigurations().forEach(({ launch, name, presentation }) => {\n\t\t\tif (lastGroup !== presentation?.group) {\n\t\t\t\tlastGroup = presentation?.group;\n\t\t\t\tif (this.debugOptions.length) {\n\t\t\t\t\tthis.debugOptions.push({ label: StartDebugActionViewItem.SEPARATOR, handler: () => Promise.resolve(false) });\n\t\t\t\t\tdisabledIdxs.push(this.debugOptions.length - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (name === manager.selectedConfiguration.name && launch === manager.selectedConfiguration.launch) {\n\t\t\t\tthis.selected = this.debugOptions.length;\n\t\t\t}\n\n\t\t\tconst label = inWorkspace ? `${name} (${launch.name})` : name;\n\t\t\tthis.debugOptions.push({\n\t\t\t\tlabel, handler: async () => {\n\t\t\t\t\tawait manager.selectConfiguration(launch, name);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// Only take 3 elements from the recent dynamic configurations to not clutter the dropdown\n\t\tmanager.getRecentDynamicConfigurations().slice(0, 3).forEach(({ name, type }) => {\n\t\t\tif (type === manager.selectedConfiguration.type && manager.selectedConfiguration.name === name) {\n\t\t\t\tthis.selected = this.debugOptions.length;\n\t\t\t}\n\t\t\tthis.debugOptions.push({\n\t\t\t\tlabel: name,\n\t\t\t\thandler: async () => {\n\t\t\t\t\tawait manager.selectConfiguration(undefined, name, undefined, { type });\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tif (this.debugOptions.length === 0) {\n\t\t\tthis.debugOptions.push({ label: nls.localize('noConfigurations', \"No Configurations\"), handler: async () => false });\n\t\t}\n\n\t\tthis.debugOptions.push({ label: StartDebugActionViewItem.SEPARATOR, handler: () => Promise.resolve(false) });\n\t\tdisabledIdxs.push(this.debugOptions.length - 1);\n\n\t\tthis.providers.forEach(p => {\n\n\t\t\tthis.debugOptions.push({\n\t\t\t\tlabel: `${p.label}...`,\n\t\t\t\thandler: async () => {\n\t\t\t\t\tconst picked = await p.pick();\n\t\t\t\t\tif (picked) {\n\t\t\t\t\t\tawait manager.selectConfiguration(picked.launch, picked.config.name, picked.config, { type: p.type });\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tmanager.getLaunches().filter(l => !l.hidden).forEach(l => {\n\t\t\tconst label = inWorkspace ? nls.localize(\"addConfigTo\", \"Add Config ({0})...\", l.name) : nls.localize('addConfiguration', \"Add Configuration...\");\n\t\t\tthis.debugOptions.push({\n\t\t\t\tlabel, handler: async () => {\n\t\t\t\t\tawait this.commandService.executeCommand(ADD_CONFIGURATION_ID, l.uri.toString());\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tthis.selectBox.setOptions(this.debugOptions.map((data, index): ISelectOptionItem => ({ text: data.label, isDisabled: disabledIdxs.indexOf(index) !== -1 })), this.selected);\n\t}\n\n\tprivate _setAriaLabel(title: string): void {\n\t\tlet ariaLabel = title;\n\t\tlet keybinding: string | undefined;\n\t\tconst verbose = this.configurationService.getValue(AccessibilityVerbositySettingId.Debug);\n\t\tif (verbose) {\n\t\t\tkeybinding = this.keybindingService.lookupKeybinding(AccessibilityCommandId.OpenAccessibilityHelp, this.contextKeyService)?.getLabel() ?? undefined;\n\t\t}\n\t\tif (keybinding) {\n\t\t\tariaLabel = nls.localize('commentLabelWithKeybinding', \"{0}, use ({1}) for accessibility help\", ariaLabel, keybinding);\n\t\t} else {\n\t\t\tariaLabel = nls.localize('commentLabelWithKeybindingNoKeybinding', \"{0}, run the command Open Accessibility Help which is currently not triggerable via keybinding.\", ariaLabel);\n\t\t}\n\t\tthis.start.ariaLabel = ariaLabel;\n\t}\n}\n\nexport class FocusSessionActionViewItem extends SelectActionViewItem<IDebugSession> {\n\tconstructor(\n\t\taction: IAction,\n\t\tsession: IDebugSession | undefined,\n\t\t@IDebugService protected readonly debugService: IDebugService,\n\t\t@IContextViewService contextViewService: IContextViewService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper(null, action, [], -1, contextViewService, defaultSelectBoxStyles, { ariaLabel: nls.localize('debugSession', 'Debug Session') });\n\n\t\tthis._register(this.debugService.getViewModel().onDidFocusSession(() => {\n\t\t\tconst session = this.getSelectedSession();\n\t\t\tif (session) {\n\t\t\t\tconst index = this.getSessions().indexOf(session);\n\t\t\t\tthis.select(index);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.debugService.onDidNewSession(session => {\n\t\t\tconst sessionListeners: IDisposable[] = [];\n\t\t\tsessionListeners.push(session.onDidChangeName(() => this.update()));\n\t\t\tsessionListeners.push(session.onDidEndAdapter(() => dispose(sessionListeners)));\n\t\t\tthis.update();\n\t\t}));\n\t\tthis.getSessions().forEach(session => {\n\t\t\tthis._register(session.onDidChangeName(() => this.update()));\n\t\t});\n\t\tthis._register(this.debugService.onDidEndSession(() => this.update()));\n\n\t\tconst selectedSession = session ? this.mapFocusedSessionToSelected(session) : undefined;\n\t\tthis.update(selectedSession);\n\t}\n\n\tprotected override getActionContext(_: string, index: number): IDebugSession {\n\t\treturn this.getSessions()[index];\n\t}\n\n\tprivate update(session?: IDebugSession) {\n\t\tif (!session) {\n\t\t\tsession = this.getSelectedSession();\n\t\t}\n\t\tconst sessions = this.getSessions();\n\t\tconst names = sessions.map(s => {\n\t\t\tconst label = s.getLabel();\n\t\t\tif (s.parentSession) {\n\t\t\t\t// Indent child sessions so they look like children\n\t\t\t\treturn `\\u00A0\\u00A0${label}`;\n\t\t\t}\n\n\t\t\treturn label;\n\t\t});\n\t\tthis.setOptions(names.map((data): ISelectOptionItem => ({ text: data })), session ? sessions.indexOf(session) : undefined);\n\t}\n\n\tprivate getSelectedSession(): IDebugSession | undefined {\n\t\tconst session = this.debugService.getViewModel().focusedSession;\n\t\treturn session ? this.mapFocusedSessionToSelected(session) : undefined;\n\t}\n\n\tprotected getSessions(): ReadonlyArray<IDebugSession> {\n\t\tconst showSubSessions = this.configurationService.getValue<IDebugConfiguration>('debug').showSubSessionsInToolBar;\n\t\tconst sessions = this.debugService.getModel().getSessions();\n\n\t\treturn showSubSessions ? sessions : sessions.filter(s => !s.parentSession);\n\t}\n\n\tprotected mapFocusedSessionToSelected(focusedSession: IDebugSession): IDebugSession {\n\t\tconst showSubSessions = this.configurationService.getValue<IDebugConfiguration>('debug').showSubSessionsInToolBar;\n\t\twhile (focusedSession.parentSession && !showSubSessions) {\n\t\t\tfocusedSession = focusedSession.parentSession;\n\t\t}\n\t\treturn focusedSession;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["session"]
}
