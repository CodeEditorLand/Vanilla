{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/callStackView.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport { ActionBar } from \"../../../../base/browser/ui/actionbar/actionbar.js\";\nimport type { AriaRole } from \"../../../../base/browser/ui/aria/aria.js\";\nimport { HighlightedLabel } from \"../../../../base/browser/ui/highlightedlabel/highlightedLabel.js\";\nimport type { IManagedHover } from \"../../../../base/browser/ui/hover/hover.js\";\nimport { getDefaultHoverDelegate } from \"../../../../base/browser/ui/hover/hoverDelegateFactory.js\";\nimport type { IListVirtualDelegate } from \"../../../../base/browser/ui/list/list.js\";\nimport type { IListAccessibilityProvider } from \"../../../../base/browser/ui/list/listWidget.js\";\nimport type { ITreeCompressionDelegate } from \"../../../../base/browser/ui/tree/asyncDataTree.js\";\nimport type { ICompressedTreeNode } from \"../../../../base/browser/ui/tree/compressedObjectTreeModel.js\";\nimport type { ICompressibleTreeRenderer } from \"../../../../base/browser/ui/tree/objectTree.js\";\nimport type {\n\tIAsyncDataSource,\n\tITreeContextMenuEvent,\n\tITreeNode,\n} from \"../../../../base/browser/ui/tree/tree.js\";\nimport { Action, type IAction } from \"../../../../base/common/actions.js\";\nimport { RunOnceScheduler } from \"../../../../base/common/async.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { Event } from \"../../../../base/common/event.js\";\nimport {\n\ttype FuzzyScore,\n\ttype IMatch,\n\tcreateMatches,\n} from \"../../../../base/common/filters.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n\tdispose,\n} from \"../../../../base/common/lifecycle.js\";\nimport { posix } from \"../../../../base/common/path.js\";\nimport { commonSuffixLength } from \"../../../../base/common/strings.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { localize } from \"../../../../nls.js\";\nimport type {\n\tICommandActionTitle,\n\tIcon,\n} from \"../../../../platform/action/common/action.js\";\nimport {\n\tMenuEntryActionViewItem,\n\tSubmenuEntryActionViewItem,\n\tcreateAndFillInActionBarActions,\n\tcreateAndFillInContextMenuActions,\n} from \"../../../../platform/actions/browser/menuEntryActionViewItem.js\";\nimport {\n\tIMenuService,\n\tMenuId,\n\tMenuItemAction,\n\tMenuRegistry,\n\tSubmenuItemAction,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tContextKeyExpr,\n\ttype ContextKeyExpression,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextMenuService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { ILabelService } from \"../../../../platform/label/common/label.js\";\nimport { WorkbenchCompressibleAsyncDataTree } from \"../../../../platform/list/browser/listService.js\";\nimport { INotificationService } from \"../../../../platform/notification/common/notification.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport {\n\tasCssVariable,\n\ttextLinkForeground,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport { ViewAction, ViewPane } from \"../../../browser/parts/views/viewPane.js\";\nimport type { IViewletViewOptions } from \"../../../browser/parts/views/viewsViewlet.js\";\nimport { IViewDescriptorService } from \"../../../common/views.js\";\nimport {\n\tCALLSTACK_VIEW_ID,\n\tCONTEXT_CALLSTACK_ITEM_STOPPED,\n\tCONTEXT_CALLSTACK_ITEM_TYPE,\n\tCONTEXT_CALLSTACK_SESSION_HAS_ONE_THREAD,\n\tCONTEXT_CALLSTACK_SESSION_IS_ATTACH,\n\tCONTEXT_DEBUG_STATE,\n\tCONTEXT_FOCUSED_SESSION_IS_NO_DEBUG,\n\tCONTEXT_STACK_FRAME_SUPPORTS_RESTART,\n\ttype IDebugModel,\n\tIDebugService,\n\ttype IDebugSession,\n\ttype IRawStoppedDetails,\n\ttype IStackFrame,\n\ttype IThread,\n\tState,\n\tgetStateLabel,\n\tisFrameDeemphasized,\n} from \"../common/debug.js\";\nimport {\n\tStackFrame,\n\tThread,\n\tThreadAndSessionIds,\n} from \"../common/debugModel.js\";\nimport { isSessionAttach } from \"../common/debugUtils.js\";\nimport { renderViewTree } from \"./baseDebugView.js\";\nimport {\n\tCONTINUE_ID,\n\tCONTINUE_LABEL,\n\tDISCONNECT_ID,\n\tDISCONNECT_LABEL,\n\tPAUSE_ID,\n\tPAUSE_LABEL,\n\tRESTART_LABEL,\n\tRESTART_SESSION_ID,\n\tSTEP_INTO_ID,\n\tSTEP_INTO_LABEL,\n\tSTEP_OUT_ID,\n\tSTEP_OUT_LABEL,\n\tSTEP_OVER_ID,\n\tSTEP_OVER_LABEL,\n\tSTOP_ID,\n\tSTOP_LABEL,\n} from \"./debugCommands.js\";\nimport * as icons from \"./debugIcons.js\";\nimport { createDisconnectMenuItemAction } from \"./debugToolBar.js\";\n\nconst $ = dom.$;\n\ntype CallStackItem =\n\t| IStackFrame\n\t| IThread\n\t| IDebugSession\n\t| string\n\t| ThreadAndSessionIds\n\t| IStackFrame[];\n\nfunction assignSessionContext(element: IDebugSession, context: any) {\n\tcontext.sessionId = element.getId();\n\treturn context;\n}\n\nfunction assignThreadContext(element: IThread, context: any) {\n\tcontext.threadId = element.getId();\n\tassignSessionContext(element.session, context);\n\treturn context;\n}\n\nfunction assignStackFrameContext(element: StackFrame, context: any) {\n\tcontext.frameId = element.getId();\n\tcontext.frameName = element.name;\n\tcontext.frameLocation = {\n\t\trange: element.range,\n\t\tsource: element.source.raw,\n\t};\n\tassignThreadContext(element.thread, context);\n\treturn context;\n}\n\nexport function getContext(element: CallStackItem | null): any {\n\tif (element instanceof StackFrame) {\n\t\treturn assignStackFrameContext(element, {});\n\t} else if (element instanceof Thread) {\n\t\treturn assignThreadContext(element, {});\n\t} else if (isDebugSession(element)) {\n\t\treturn assignSessionContext(element, {});\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\n// Extensions depend on this context, should not be changed even though it is not fully deterministic\nexport function getContextForContributedActions(\n\telement: CallStackItem | null,\n): string | number {\n\tif (element instanceof StackFrame) {\n\t\tif (element.source.inMemory) {\n\t\t\treturn (\n\t\t\t\telement.source.raw.path ||\n\t\t\t\telement.source.reference ||\n\t\t\t\telement.source.name\n\t\t\t);\n\t\t}\n\n\t\treturn element.source.uri.toString();\n\t}\n\tif (element instanceof Thread) {\n\t\treturn element.threadId;\n\t}\n\tif (isDebugSession(element)) {\n\t\treturn element.getId();\n\t}\n\n\treturn \"\";\n}\n\nexport function getSpecificSourceName(stackFrame: IStackFrame): string {\n\t// To reduce flashing of the path name and the way we fetch stack frames\n\t// We need to compute the source name based on the other frames in the stale call stack\n\tlet callStack = (<Thread>stackFrame.thread).getStaleCallStack();\n\tcallStack =\n\t\tcallStack.length > 0 ? callStack : stackFrame.thread.getCallStack();\n\tconst otherSources = callStack\n\t\t.map((sf) => sf.source)\n\t\t.filter((s) => s !== stackFrame.source);\n\tlet suffixLength = 0;\n\totherSources.forEach((s) => {\n\t\tif (s.name === stackFrame.source.name) {\n\t\t\tsuffixLength = Math.max(\n\t\t\t\tsuffixLength,\n\t\t\t\tcommonSuffixLength(stackFrame.source.uri.path, s.uri.path),\n\t\t\t);\n\t\t}\n\t});\n\tif (suffixLength === 0) {\n\t\treturn stackFrame.source.name;\n\t}\n\n\tconst from = Math.max(\n\t\t0,\n\t\tstackFrame.source.uri.path.lastIndexOf(\n\t\t\tposix.sep,\n\t\t\tstackFrame.source.uri.path.length - suffixLength - 1,\n\t\t),\n\t);\n\treturn (from > 0 ? \"...\" : \"\") + stackFrame.source.uri.path.substring(from);\n}\n\nasync function expandTo(\n\tsession: IDebugSession,\n\ttree: WorkbenchCompressibleAsyncDataTree<\n\t\tIDebugModel,\n\t\tCallStackItem,\n\t\tFuzzyScore\n\t>,\n): Promise<void> {\n\tif (session.parentSession) {\n\t\tawait expandTo(session.parentSession, tree);\n\t}\n\tawait tree.expand(session);\n}\n\nexport class CallStackView extends ViewPane {\n\tprivate stateMessage!: HTMLSpanElement;\n\tprivate stateMessageLabel!: HTMLSpanElement;\n\tprivate stateMessageLabelHover!: IManagedHover;\n\tprivate onCallStackChangeScheduler: RunOnceScheduler;\n\tprivate needsRefresh = false;\n\tprivate ignoreSelectionChangedEvent = false;\n\tprivate ignoreFocusStackFrameEvent = false;\n\n\tprivate dataSource!: CallStackDataSource;\n\tprivate tree!: WorkbenchCompressibleAsyncDataTree<\n\t\tIDebugModel,\n\t\tCallStackItem,\n\t\tFuzzyScore\n\t>;\n\tprivate autoExpandedSessions = new Set<IDebugSession>();\n\tprivate selectionNeedsUpdate = false;\n\n\tconstructor(\n\t\tprivate options: IViewletViewOptions,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService, hoverService);\n\n\t\t// Create scheduler to prevent unnecessary flashing of tree when reacting to changes\n\t\tthis.onCallStackChangeScheduler = this._register(new RunOnceScheduler(async () => {\n\t\t\t// Only show the global pause message if we do not display threads.\n\t\t\t// Otherwise there will be a pause message per thread and there is no need for a global one.\n\t\t\tconst sessions = this.debugService.getModel().getSessions();\n\t\t\tif (sessions.length === 0) {\n\t\t\t\tthis.autoExpandedSessions.clear();\n\t\t\t}\n\n\t\t\tconst thread = sessions.length === 1 && sessions[0].getAllThreads().length === 1 ? sessions[0].getAllThreads()[0] : undefined;\n\t\t\tconst stoppedDetails = sessions.length === 1 ? sessions[0].getStoppedDetails() : undefined;\n\t\t\tif (stoppedDetails && (thread || typeof stoppedDetails.threadId !== 'number')) {\n\t\t\t\tthis.stateMessageLabel.textContent = stoppedDescription(stoppedDetails);\n\t\t\t\tthis.stateMessageLabelHover.update(stoppedText(stoppedDetails));\n\t\t\t\tthis.stateMessageLabel.classList.toggle('exception', stoppedDetails.reason === 'exception');\n\t\t\t\tthis.stateMessage.hidden = false;\n\t\t\t} else if (sessions.length === 1 && sessions[0].state === State.Running) {\n\t\t\t\tthis.stateMessageLabel.textContent = localize({ key: 'running', comment: ['indicates state'] }, \"Running\");\n\t\t\t\tthis.stateMessageLabelHover.update(sessions[0].getLabel());\n\t\t\t\tthis.stateMessageLabel.classList.remove('exception');\n\t\t\t\tthis.stateMessage.hidden = false;\n\t\t\t} else {\n\t\t\t\tthis.stateMessage.hidden = true;\n\t\t\t}\n\t\t\tthis.updateActions();\n\n\t\t\tthis.needsRefresh = false;\n\t\t\tthis.dataSource.deemphasizedStackFramesToShow = [];\n\t\t\tawait this.tree.updateChildren();\n\t\t\ttry {\n\t\t\t\tconst toExpand = new Set<IDebugSession>();\n\t\t\t\tsessions.forEach(s => {\n\t\t\t\t\t// Automatically expand sessions that have children, but only do this once.\n\t\t\t\t\tif (s.parentSession && !this.autoExpandedSessions.has(s.parentSession)) {\n\t\t\t\t\t\ttoExpand.add(s.parentSession);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tfor (const session of toExpand) {\n\t\t\t\t\tawait expandTo(session, this.tree);\n\t\t\t\t\tthis.autoExpandedSessions.add(session);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t// Ignore tree expand errors if element no longer present\n\t\t\t}\n\t\t\tif (this.selectionNeedsUpdate) {\n\t\t\t\tthis.selectionNeedsUpdate = false;\n\t\t\t\tawait this.updateTreeSelection();\n\t\t\t}\n\t\t}, 50));\n\t}\n\n\tprotected override renderHeaderTitle(container: HTMLElement): void {\n\t\tsuper.renderHeaderTitle(container, this.options.title);\n\n\t\tthis.stateMessage = dom.append(\n\t\t\tcontainer,\n\t\t\t$(\"span.call-stack-state-message\"),\n\t\t);\n\t\tthis.stateMessage.hidden = true;\n\t\tthis.stateMessageLabel = dom.append(this.stateMessage, $(\"span.label\"));\n\t\tthis.stateMessageLabelHover = this._register(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\tthis.stateMessage,\n\t\t\t\t\"\",\n\t\t\t),\n\t\t);\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\t\tthis.element.classList.add(\"debug-pane\");\n\t\tcontainer.classList.add(\"debug-call-stack\");\n\t\tconst treeContainer = renderViewTree(container);\n\n\t\tthis.dataSource = new CallStackDataSource(this.debugService);\n\t\tthis.tree = <\n\t\t\tWorkbenchCompressibleAsyncDataTree<\n\t\t\t\tIDebugModel,\n\t\t\t\tCallStackItem,\n\t\t\t\tFuzzyScore\n\t\t\t>\n\t\t>this.instantiationService.createInstance(\n\t\t\tWorkbenchCompressibleAsyncDataTree,\n\t\t\t\"CallStackView\",\n\t\t\ttreeContainer,\n\t\t\tnew CallStackDelegate(),\n\t\t\tnew CallStackCompressionDelegate(this.debugService),\n\t\t\t[\n\t\t\t\tthis.instantiationService.createInstance(SessionsRenderer),\n\t\t\t\tthis.instantiationService.createInstance(ThreadsRenderer),\n\t\t\t\tthis.instantiationService.createInstance(StackFramesRenderer),\n\t\t\t\tthis.instantiationService.createInstance(ErrorsRenderer),\n\t\t\t\tnew LoadMoreRenderer(),\n\t\t\t\tnew ShowMoreRenderer(),\n\t\t\t],\n\t\t\tthis.dataSource,\n\t\t\t{\n\t\t\t\taccessibilityProvider: new CallStackAccessibilityProvider(),\n\t\t\t\tcompressionEnabled: true,\n\t\t\t\tautoExpandSingleChildren: true,\n\t\t\t\tidentityProvider: {\n\t\t\t\t\tgetId: (element: CallStackItem) => {\n\t\t\t\t\t\tif (typeof element === \"string\") {\n\t\t\t\t\t\t\treturn element;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (element instanceof Array) {\n\t\t\t\t\t\t\treturn `showMore ${element[0].getId()}`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn element.getId();\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tkeyboardNavigationLabelProvider: {\n\t\t\t\t\tgetKeyboardNavigationLabel: (e: CallStackItem) => {\n\t\t\t\t\t\tif (isDebugSession(e)) {\n\t\t\t\t\t\t\treturn e.getLabel();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (e instanceof Thread) {\n\t\t\t\t\t\t\treturn `${e.name} ${e.stateLabel}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (e instanceof StackFrame || typeof e === \"string\") {\n\t\t\t\t\t\t\treturn e;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (e instanceof ThreadAndSessionIds) {\n\t\t\t\t\t\t\treturn LoadMoreRenderer.LABEL;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn localize(\n\t\t\t\t\t\t\t\"showMoreStackFrames2\",\n\t\t\t\t\t\t\t\"Show More Stack Frames\",\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tgetCompressedNodeKeyboardNavigationLabel: (\n\t\t\t\t\t\te: CallStackItem[],\n\t\t\t\t\t) => {\n\t\t\t\t\t\tconst firstItem = e[0];\n\t\t\t\t\t\tif (isDebugSession(firstItem)) {\n\t\t\t\t\t\t\treturn firstItem.getLabel();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\texpandOnlyOnTwistieClick: true,\n\t\t\t\toverrideStyles:\n\t\t\t\t\tthis.getLocationBasedColors().listOverrideStyles,\n\t\t\t},\n\t\t);\n\n\t\tthis.tree.setInput(this.debugService.getModel());\n\t\tthis._register(this.tree);\n\t\tthis._register(\n\t\t\tthis.tree.onDidOpen(async (e) => {\n\t\t\t\tif (this.ignoreSelectionChangedEvent) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst focusStackFrame = (\n\t\t\t\t\tstackFrame: IStackFrame | undefined,\n\t\t\t\t\tthread: IThread | undefined,\n\t\t\t\t\tsession: IDebugSession,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\texplicit?: boolean;\n\t\t\t\t\t\tpreserveFocus?: boolean;\n\t\t\t\t\t\tsideBySide?: boolean;\n\t\t\t\t\t\tpinned?: boolean;\n\t\t\t\t\t} = {},\n\t\t\t\t) => {\n\t\t\t\t\tthis.ignoreFocusStackFrameEvent = true;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.debugService.focusStackFrame(\n\t\t\t\t\t\t\tstackFrame,\n\t\t\t\t\t\t\tthread,\n\t\t\t\t\t\t\tsession,\n\t\t\t\t\t\t\t{ ...options, ...{ explicit: true } },\n\t\t\t\t\t\t);\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tthis.ignoreFocusStackFrameEvent = false;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tconst element = e.element;\n\t\t\t\tif (element instanceof StackFrame) {\n\t\t\t\t\tconst opts = {\n\t\t\t\t\t\tpreserveFocus: e.editorOptions.preserveFocus,\n\t\t\t\t\t\tsideBySide: e.sideBySide,\n\t\t\t\t\t\tpinned: e.editorOptions.pinned,\n\t\t\t\t\t};\n\t\t\t\t\tfocusStackFrame(\n\t\t\t\t\t\telement,\n\t\t\t\t\t\telement.thread,\n\t\t\t\t\t\telement.thread.session,\n\t\t\t\t\t\topts,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (element instanceof Thread) {\n\t\t\t\t\tfocusStackFrame(undefined, element, element.session);\n\t\t\t\t}\n\t\t\t\tif (isDebugSession(element)) {\n\t\t\t\t\tfocusStackFrame(undefined, undefined, element);\n\t\t\t\t}\n\t\t\t\tif (element instanceof ThreadAndSessionIds) {\n\t\t\t\t\tconst session = this.debugService\n\t\t\t\t\t\t.getModel()\n\t\t\t\t\t\t.getSession(element.sessionId);\n\t\t\t\t\tconst thread =\n\t\t\t\t\t\tsession && session.getThread(element.threadId);\n\t\t\t\t\tif (thread) {\n\t\t\t\t\t\tconst totalFrames = thread.stoppedDetails?.totalFrames;\n\t\t\t\t\t\tconst remainingFramesCount =\n\t\t\t\t\t\t\ttypeof totalFrames === \"number\"\n\t\t\t\t\t\t\t\t? totalFrames - thread.getCallStack().length\n\t\t\t\t\t\t\t\t: undefined;\n\t\t\t\t\t\t// Get all the remaining frames\n\t\t\t\t\t\tawait (<Thread>thread).fetchCallStack(\n\t\t\t\t\t\t\tremainingFramesCount,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tawait this.tree.updateChildren();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (element instanceof Array) {\n\t\t\t\t\tthis.dataSource.deemphasizedStackFramesToShow.push(\n\t\t\t\t\t\t...element,\n\t\t\t\t\t);\n\t\t\t\t\tthis.tree.updateChildren();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.debugService.getModel().onDidChangeCallStack(() => {\n\t\t\t\tif (!this.isBodyVisible()) {\n\t\t\t\t\tthis.needsRefresh = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!this.onCallStackChangeScheduler.isScheduled()) {\n\t\t\t\t\tthis.onCallStackChangeScheduler.schedule();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tconst onFocusChange = Event.any<any>(\n\t\t\tthis.debugService.getViewModel().onDidFocusStackFrame,\n\t\t\tthis.debugService.getViewModel().onDidFocusSession,\n\t\t);\n\t\tthis._register(\n\t\t\tonFocusChange(async () => {\n\t\t\t\tif (this.ignoreFocusStackFrameEvent) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!this.isBodyVisible()) {\n\t\t\t\t\tthis.needsRefresh = true;\n\t\t\t\t\tthis.selectionNeedsUpdate = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this.onCallStackChangeScheduler.isScheduled()) {\n\t\t\t\t\tthis.selectionNeedsUpdate = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tawait this.updateTreeSelection();\n\t\t\t}),\n\t\t);\n\t\tthis._register(this.tree.onContextMenu((e) => this.onContextMenu(e)));\n\n\t\t// Schedule the update of the call stack tree if the viewlet is opened after a session started #14684\n\t\tif (this.debugService.state === State.Stopped) {\n\t\t\tthis.onCallStackChangeScheduler.schedule(0);\n\t\t}\n\n\t\tthis._register(\n\t\t\tthis.onDidChangeBodyVisibility((visible) => {\n\t\t\t\tif (visible && this.needsRefresh) {\n\t\t\t\t\tthis.onCallStackChangeScheduler.schedule();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.debugService.onDidNewSession((s) => {\n\t\t\t\tconst sessionListeners: IDisposable[] = [];\n\t\t\t\tsessionListeners.push(\n\t\t\t\t\ts.onDidChangeName(() => {\n\t\t\t\t\t\t// this.tree.updateChildren is called on a delay after a session is added,\n\t\t\t\t\t\t// so don't rerender if the tree doesn't have the node yet\n\t\t\t\t\t\tif (this.tree.hasNode(s)) {\n\t\t\t\t\t\t\tthis.tree.rerender(s);\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\tsessionListeners.push(\n\t\t\t\t\ts.onDidEndAdapter(() => dispose(sessionListeners)),\n\t\t\t\t);\n\t\t\t\tif (s.parentSession) {\n\t\t\t\t\t// A session we already expanded has a new child session, allow to expand it again.\n\t\t\t\t\tthis.autoExpandedSessions.delete(s.parentSession);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\t\tthis.tree.layout(height, width);\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\t\tthis.tree.domFocus();\n\t}\n\n\tcollapseAll(): void {\n\t\tthis.tree.collapseAll();\n\t}\n\n\tprivate async updateTreeSelection(): Promise<void> {\n\t\tif (!this.tree || !this.tree.getInput()) {\n\t\t\t// Tree not initialized yet\n\t\t\treturn;\n\t\t}\n\n\t\tconst updateSelectionAndReveal = (\n\t\t\telement: IStackFrame | IDebugSession,\n\t\t) => {\n\t\t\tthis.ignoreSelectionChangedEvent = true;\n\t\t\ttry {\n\t\t\t\tthis.tree.setSelection([element]);\n\t\t\t\t// If the element is outside of the screen bounds,\n\t\t\t\t// position it in the middle\n\t\t\t\tif (this.tree.getRelativeTop(element) === null) {\n\t\t\t\t\tthis.tree.reveal(element, 0.5);\n\t\t\t\t} else {\n\t\t\t\t\tthis.tree.reveal(element);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t} finally {\n\t\t\t\tthis.ignoreSelectionChangedEvent = false;\n\t\t\t}\n\t\t};\n\n\t\tconst thread = this.debugService.getViewModel().focusedThread;\n\t\tconst session = this.debugService.getViewModel().focusedSession;\n\t\tconst stackFrame = this.debugService.getViewModel().focusedStackFrame;\n\t\tif (thread) {\n\t\t\t// Ignore errors from this expansions because we are not aware if we rendered the threads and sessions or we hide them to declutter the view\n\t\t\ttry {\n\t\t\t\tawait expandTo(thread.session, this.tree);\n\t\t\t} catch (e) {}\n\t\t\ttry {\n\t\t\t\tawait this.tree.expand(thread);\n\t\t\t} catch (e) {}\n\n\t\t\tconst toReveal = stackFrame || session;\n\t\t\tif (toReveal) {\n\t\t\t\tupdateSelectionAndReveal(toReveal);\n\t\t\t}\n\t\t} else if (session) {\n\t\t\tupdateSelectionAndReveal(session);\n\t\t} else {\n\t\t\tthis.tree.setSelection([]);\n\t\t}\n\t}\n\n\tprivate onContextMenu(e: ITreeContextMenuEvent<CallStackItem>): void {\n\t\tconst element = e.element;\n\t\tlet overlay: [string, any][] = [];\n\t\tif (isDebugSession(element)) {\n\t\t\toverlay = getSessionContextOverlay(element);\n\t\t} else if (element instanceof Thread) {\n\t\t\toverlay = getThreadContextOverlay(element);\n\t\t} else if (element instanceof StackFrame) {\n\t\t\toverlay = getStackFrameContextOverlay(element);\n\t\t}\n\n\t\tconst primary: IAction[] = [];\n\t\tconst secondary: IAction[] = [];\n\t\tconst result = { primary, secondary };\n\t\tconst contextKeyService = this.contextKeyService.createOverlay(overlay);\n\t\tconst menu = this.menuService.getMenuActions(\n\t\t\tMenuId.DebugCallStackContext,\n\t\t\tcontextKeyService,\n\t\t\t{\n\t\t\t\targ: getContextForContributedActions(element),\n\t\t\t\tshouldForwardArgs: true,\n\t\t\t},\n\t\t);\n\t\tcreateAndFillInContextMenuActions(menu, result, \"inline\");\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => e.anchor,\n\t\t\tgetActions: () => result.secondary,\n\t\t\tgetActionsContext: () => getContext(element),\n\t\t});\n\t}\n}\n\ninterface IThreadTemplateData {\n\tthread: HTMLElement;\n\tname: HTMLElement;\n\tstateLabel: HTMLSpanElement;\n\tlabel: HighlightedLabel;\n\tactionBar: ActionBar;\n\telementDisposable: DisposableStore;\n\ttemplateDisposable: IDisposable;\n}\n\ninterface ISessionTemplateData {\n\tsession: HTMLElement;\n\tname: HTMLElement;\n\tstateLabel: HTMLSpanElement;\n\tlabel: HighlightedLabel;\n\tactionBar: ActionBar;\n\telementDisposable: DisposableStore;\n\ttemplateDisposable: IDisposable;\n}\n\ninterface IErrorTemplateData {\n\tlabel: HTMLElement;\n\ttemplateDisposable: DisposableStore;\n}\n\ninterface ILabelTemplateData {\n\tlabel: HTMLElement;\n}\n\ninterface IStackFrameTemplateData {\n\tstackFrame: HTMLElement;\n\tfile: HTMLElement;\n\tfileName: HTMLElement;\n\tlineNumber: HTMLElement;\n\tlabel: HighlightedLabel;\n\tactionBar: ActionBar;\n\ttemplateDisposable: DisposableStore;\n}\n\nfunction getSessionContextOverlay(session: IDebugSession): [string, any][] {\n\treturn [\n\t\t[CONTEXT_CALLSTACK_ITEM_TYPE.key, \"session\"],\n\t\t[CONTEXT_CALLSTACK_SESSION_IS_ATTACH.key, isSessionAttach(session)],\n\t\t[CONTEXT_CALLSTACK_ITEM_STOPPED.key, session.state === State.Stopped],\n\t\t[\n\t\t\tCONTEXT_CALLSTACK_SESSION_HAS_ONE_THREAD.key,\n\t\t\tsession.getAllThreads().length === 1,\n\t\t],\n\t];\n}\n\nclass SessionsRenderer\n\timplements\n\t\tICompressibleTreeRenderer<\n\t\t\tIDebugSession,\n\t\t\tFuzzyScore,\n\t\t\tISessionTemplateData\n\t\t>\n{\n\tstatic readonly ID = \"session\";\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t) { }\n\n\tget templateId(): string {\n\t\treturn SessionsRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): ISessionTemplateData {\n\t\tconst session = dom.append(container, $(\".session\"));\n\t\tdom.append(\n\t\t\tsession,\n\t\t\t$(ThemeIcon.asCSSSelector(icons.callstackViewSession)),\n\t\t);\n\t\tconst name = dom.append(session, $(\".name\"));\n\t\tconst stateLabel = dom.append(\n\t\t\tsession,\n\t\t\t$(\"span.state.label.monaco-count-badge.long\"),\n\t\t);\n\t\tconst templateDisposable = new DisposableStore();\n\t\tconst label = templateDisposable.add(new HighlightedLabel(name));\n\n\t\tconst stopActionViewItemDisposables = templateDisposable.add(\n\t\t\tnew DisposableStore(),\n\t\t);\n\t\tconst actionBar = templateDisposable.add(\n\t\t\tnew ActionBar(session, {\n\t\t\t\tactionViewItemProvider: (action, options) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t(action.id === STOP_ID ||\n\t\t\t\t\t\t\taction.id === DISCONNECT_ID) &&\n\t\t\t\t\t\taction instanceof MenuItemAction\n\t\t\t\t\t) {\n\t\t\t\t\t\tstopActionViewItemDisposables.clear();\n\t\t\t\t\t\tconst item = this.instantiationService.invokeFunction(\n\t\t\t\t\t\t\t(accessor) =>\n\t\t\t\t\t\t\t\tcreateDisconnectMenuItemAction(\n\t\t\t\t\t\t\t\t\taction as MenuItemAction,\n\t\t\t\t\t\t\t\t\tstopActionViewItemDisposables,\n\t\t\t\t\t\t\t\t\taccessor,\n\t\t\t\t\t\t\t\t\t{ ...options, menuAsChild: false },\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (item) {\n\t\t\t\t\t\t\treturn item;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (action instanceof MenuItemAction) {\n\t\t\t\t\t\treturn this.instantiationService.createInstance(\n\t\t\t\t\t\t\tMenuEntryActionViewItem,\n\t\t\t\t\t\t\taction,\n\t\t\t\t\t\t\t{ hoverDelegate: options.hoverDelegate },\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (action instanceof SubmenuItemAction) {\n\t\t\t\t\t\treturn this.instantiationService.createInstance(\n\t\t\t\t\t\t\tSubmenuEntryActionViewItem,\n\t\t\t\t\t\t\taction,\n\t\t\t\t\t\t\t{ hoverDelegate: options.hoverDelegate },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn undefined;\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\n\t\tconst elementDisposable = templateDisposable.add(new DisposableStore());\n\t\treturn {\n\t\t\tsession,\n\t\t\tname,\n\t\t\tstateLabel,\n\t\t\tlabel,\n\t\t\tactionBar,\n\t\t\telementDisposable,\n\t\t\ttemplateDisposable,\n\t\t};\n\t}\n\n\trenderElement(\n\t\telement: ITreeNode<IDebugSession, FuzzyScore>,\n\t\t_: number,\n\t\tdata: ISessionTemplateData,\n\t): void {\n\t\tthis.doRenderElement(\n\t\t\telement.element,\n\t\t\tcreateMatches(element.filterData),\n\t\t\tdata,\n\t\t);\n\t}\n\n\trenderCompressedElements(\n\t\tnode: ITreeNode<ICompressedTreeNode<IDebugSession>, FuzzyScore>,\n\t\t_index: number,\n\t\ttemplateData: ISessionTemplateData,\n\t): void {\n\t\tconst lastElement =\n\t\t\tnode.element.elements[node.element.elements.length - 1];\n\t\tconst matches = createMatches(node.filterData);\n\t\tthis.doRenderElement(lastElement, matches, templateData);\n\t}\n\n\tprivate doRenderElement(\n\t\tsession: IDebugSession,\n\t\tmatches: IMatch[],\n\t\tdata: ISessionTemplateData,\n\t): void {\n\t\tconst sessionHover = data.elementDisposable.add(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\tdata.session,\n\t\t\t\tlocalize(\n\t\t\t\t\t{ key: \"session\", comment: [\"Session is a noun\"] },\n\t\t\t\t\t\"Session\",\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t\tdata.label.set(session.getLabel(), matches);\n\t\tconst stoppedDetails = session.getStoppedDetails();\n\t\tconst thread = session.getAllThreads().find((t) => t.stopped);\n\n\t\tconst contextKeyService = this.contextKeyService.createOverlay(\n\t\t\tgetSessionContextOverlay(session),\n\t\t);\n\t\tconst menu = data.elementDisposable.add(\n\t\t\tthis.menuService.createMenu(\n\t\t\t\tMenuId.DebugCallStackContext,\n\t\t\t\tcontextKeyService,\n\t\t\t),\n\t\t);\n\n\t\tconst setupActionBar = () => {\n\t\t\tdata.actionBar.clear();\n\n\t\t\tconst primary: IAction[] = [];\n\t\t\tconst secondary: IAction[] = [];\n\t\t\tconst result = { primary, secondary };\n\n\t\t\tcreateAndFillInActionBarActions(\n\t\t\t\tmenu,\n\t\t\t\t{\n\t\t\t\t\targ: getContextForContributedActions(session),\n\t\t\t\t\tshouldForwardArgs: true,\n\t\t\t\t},\n\t\t\t\tresult,\n\t\t\t\t\"inline\",\n\t\t\t);\n\t\t\tdata.actionBar.push(primary, { icon: true, label: false });\n\t\t\t// We need to set our internal context on the action bar, since our commands depend on that one\n\t\t\t// While the external context our extensions rely on\n\t\t\tdata.actionBar.context = getContext(session);\n\t\t};\n\t\tdata.elementDisposable.add(menu.onDidChange(() => setupActionBar()));\n\t\tsetupActionBar();\n\n\t\tdata.stateLabel.style.display = \"\";\n\n\t\tif (stoppedDetails) {\n\t\t\tdata.stateLabel.textContent = stoppedDescription(stoppedDetails);\n\t\t\tsessionHover.update(\n\t\t\t\t`${session.getLabel()}: ${stoppedText(stoppedDetails)}`,\n\t\t\t);\n\t\t\tdata.stateLabel.classList.toggle(\n\t\t\t\t\"exception\",\n\t\t\t\tstoppedDetails.reason === \"exception\",\n\t\t\t);\n\t\t} else if (thread && thread.stoppedDetails) {\n\t\t\tdata.stateLabel.textContent = stoppedDescription(\n\t\t\t\tthread.stoppedDetails,\n\t\t\t);\n\t\t\tsessionHover.update(\n\t\t\t\t`${session.getLabel()}: ${stoppedText(thread.stoppedDetails)}`,\n\t\t\t);\n\t\t\tdata.stateLabel.classList.toggle(\n\t\t\t\t\"exception\",\n\t\t\t\tthread.stoppedDetails.reason === \"exception\",\n\t\t\t);\n\t\t} else {\n\t\t\tdata.stateLabel.textContent = localize(\n\t\t\t\t{ key: \"running\", comment: [\"indicates state\"] },\n\t\t\t\t\"Running\",\n\t\t\t);\n\t\t\tdata.stateLabel.classList.remove(\"exception\");\n\t\t}\n\t}\n\n\tdisposeTemplate(templateData: ISessionTemplateData): void {\n\t\ttemplateData.templateDisposable.dispose();\n\t}\n\n\tdisposeElement(\n\t\t_element: ITreeNode<IDebugSession, FuzzyScore>,\n\t\t_: number,\n\t\ttemplateData: ISessionTemplateData,\n\t): void {\n\t\ttemplateData.elementDisposable.clear();\n\t}\n\n\tdisposeCompressedElements(\n\t\tnode: ITreeNode<ICompressedTreeNode<IDebugSession>, FuzzyScore>,\n\t\tindex: number,\n\t\ttemplateData: ISessionTemplateData,\n\t\theight: number | undefined,\n\t): void {\n\t\ttemplateData.elementDisposable.clear();\n\t}\n}\n\nfunction getThreadContextOverlay(thread: IThread): [string, any][] {\n\treturn [\n\t\t[CONTEXT_CALLSTACK_ITEM_TYPE.key, \"thread\"],\n\t\t[CONTEXT_CALLSTACK_ITEM_STOPPED.key, thread.stopped],\n\t];\n}\n\nclass ThreadsRenderer\n\timplements\n\t\tICompressibleTreeRenderer<IThread, FuzzyScore, IThreadTemplateData>\n{\n\tstatic readonly ID = \"thread\";\n\n\tconstructor(\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t) { }\n\n\tget templateId(): string {\n\t\treturn ThreadsRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IThreadTemplateData {\n\t\tconst thread = dom.append(container, $(\".thread\"));\n\t\tconst name = dom.append(thread, $(\".name\"));\n\t\tconst stateLabel = dom.append(\n\t\t\tthread,\n\t\t\t$(\"span.state.label.monaco-count-badge.long\"),\n\t\t);\n\n\t\tconst templateDisposable = new DisposableStore();\n\t\tconst label = templateDisposable.add(new HighlightedLabel(name));\n\n\t\tconst actionBar = templateDisposable.add(new ActionBar(thread));\n\t\tconst elementDisposable = templateDisposable.add(new DisposableStore());\n\n\t\treturn {\n\t\t\tthread,\n\t\t\tname,\n\t\t\tstateLabel,\n\t\t\tlabel,\n\t\t\tactionBar,\n\t\t\telementDisposable,\n\t\t\ttemplateDisposable,\n\t\t};\n\t}\n\n\trenderElement(\n\t\telement: ITreeNode<IThread, FuzzyScore>,\n\t\t_index: number,\n\t\tdata: IThreadTemplateData,\n\t): void {\n\t\tconst thread = element.element;\n\t\tdata.elementDisposable.add(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\tdata.thread,\n\t\t\t\tthread.name,\n\t\t\t),\n\t\t);\n\t\tdata.label.set(thread.name, createMatches(element.filterData));\n\t\tdata.stateLabel.textContent = thread.stateLabel;\n\t\tdata.stateLabel.classList.toggle(\n\t\t\t\"exception\",\n\t\t\tthread.stoppedDetails?.reason === \"exception\",\n\t\t);\n\n\t\tconst contextKeyService = this.contextKeyService.createOverlay(\n\t\t\tgetThreadContextOverlay(thread),\n\t\t);\n\t\tconst menu = data.elementDisposable.add(\n\t\t\tthis.menuService.createMenu(\n\t\t\t\tMenuId.DebugCallStackContext,\n\t\t\t\tcontextKeyService,\n\t\t\t),\n\t\t);\n\n\t\tconst setupActionBar = () => {\n\t\t\tdata.actionBar.clear();\n\n\t\t\tconst primary: IAction[] = [];\n\t\t\tconst secondary: IAction[] = [];\n\t\t\tconst result = { primary, secondary };\n\n\t\t\tcreateAndFillInActionBarActions(\n\t\t\t\tmenu,\n\t\t\t\t{\n\t\t\t\t\targ: getContextForContributedActions(thread),\n\t\t\t\t\tshouldForwardArgs: true,\n\t\t\t\t},\n\t\t\t\tresult,\n\t\t\t\t\"inline\",\n\t\t\t);\n\t\t\tdata.actionBar.push(primary, { icon: true, label: false });\n\t\t\t// We need to set our internal context on the action bar, since our commands depend on that one\n\t\t\t// While the external context our extensions rely on\n\t\t\tdata.actionBar.context = getContext(thread);\n\t\t};\n\t\tdata.elementDisposable.add(menu.onDidChange(() => setupActionBar()));\n\t\tsetupActionBar();\n\t}\n\n\trenderCompressedElements(\n\t\t_node: ITreeNode<ICompressedTreeNode<IThread>, FuzzyScore>,\n\t\t_index: number,\n\t\t_templateData: IThreadTemplateData,\n\t\t_height: number | undefined,\n\t): void {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\tdisposeElement(\n\t\t_element: any,\n\t\t_index: number,\n\t\ttemplateData: IThreadTemplateData,\n\t): void {\n\t\ttemplateData.elementDisposable.clear();\n\t}\n\n\tdisposeTemplate(templateData: IThreadTemplateData): void {\n\t\ttemplateData.templateDisposable.dispose();\n\t}\n}\n\nfunction getStackFrameContextOverlay(stackFrame: IStackFrame): [string, any][] {\n\treturn [\n\t\t[CONTEXT_CALLSTACK_ITEM_TYPE.key, \"stackFrame\"],\n\t\t[CONTEXT_STACK_FRAME_SUPPORTS_RESTART.key, stackFrame.canRestart],\n\t];\n}\n\nclass StackFramesRenderer\n\timplements\n\t\tICompressibleTreeRenderer<\n\t\t\tIStackFrame,\n\t\t\tFuzzyScore,\n\t\t\tIStackFrameTemplateData\n\t\t>\n{\n\tstatic readonly ID = \"stackFrame\";\n\n\tconstructor(\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t) { }\n\n\tget templateId(): string {\n\t\treturn StackFramesRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IStackFrameTemplateData {\n\t\tconst stackFrame = dom.append(container, $(\".stack-frame\"));\n\t\tconst labelDiv = dom.append(stackFrame, $(\"span.label.expression\"));\n\t\tconst file = dom.append(stackFrame, $(\".file\"));\n\t\tconst fileName = dom.append(file, $(\"span.file-name\"));\n\t\tconst wrapper = dom.append(file, $(\"span.line-number-wrapper\"));\n\t\tconst lineNumber = dom.append(\n\t\t\twrapper,\n\t\t\t$(\"span.line-number.monaco-count-badge\"),\n\t\t);\n\n\t\tconst templateDisposable = new DisposableStore();\n\t\tconst label = templateDisposable.add(new HighlightedLabel(labelDiv));\n\n\t\tconst actionBar = templateDisposable.add(new ActionBar(stackFrame));\n\n\t\treturn {\n\t\t\tfile,\n\t\t\tfileName,\n\t\t\tlabel,\n\t\t\tlineNumber,\n\t\t\tstackFrame,\n\t\t\tactionBar,\n\t\t\ttemplateDisposable,\n\t\t};\n\t}\n\n\trenderElement(\n\t\telement: ITreeNode<IStackFrame, FuzzyScore>,\n\t\tindex: number,\n\t\tdata: IStackFrameTemplateData,\n\t): void {\n\t\tconst stackFrame = element.element;\n\t\tdata.stackFrame.classList.toggle(\n\t\t\t\"disabled\",\n\t\t\t!stackFrame.source ||\n\t\t\t\t!stackFrame.source.available ||\n\t\t\t\tisFrameDeemphasized(stackFrame),\n\t\t);\n\t\tdata.stackFrame.classList.toggle(\n\t\t\t\"label\",\n\t\t\tstackFrame.presentationHint === \"label\",\n\t\t);\n\t\tconst hasActions =\n\t\t\t!!stackFrame.thread.session.capabilities.supportsRestartFrame &&\n\t\t\tstackFrame.presentationHint !== \"label\" &&\n\t\t\tstackFrame.presentationHint !== \"subtle\" &&\n\t\t\tstackFrame.canRestart;\n\t\tdata.stackFrame.classList.toggle(\"has-actions\", hasActions);\n\n\t\tlet title = stackFrame.source.inMemory\n\t\t\t? stackFrame.source.uri.path\n\t\t\t: this.labelService.getUriLabel(stackFrame.source.uri);\n\t\tif (stackFrame.source.raw.origin) {\n\t\t\ttitle += `\\n${stackFrame.source.raw.origin}`;\n\t\t}\n\t\tdata.templateDisposable.add(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\tdata.file,\n\t\t\t\ttitle,\n\t\t\t),\n\t\t);\n\n\t\tdata.label.set(\n\t\t\tstackFrame.name,\n\t\t\tcreateMatches(element.filterData),\n\t\t\tstackFrame.name,\n\t\t);\n\t\tdata.fileName.textContent = getSpecificSourceName(stackFrame);\n\t\tif (stackFrame.range.startLineNumber !== undefined) {\n\t\t\tdata.lineNumber.textContent = `${stackFrame.range.startLineNumber}`;\n\t\t\tif (stackFrame.range.startColumn) {\n\t\t\t\tdata.lineNumber.textContent += `:${stackFrame.range.startColumn}`;\n\t\t\t}\n\t\t\tdata.lineNumber.classList.remove(\"unavailable\");\n\t\t} else {\n\t\t\tdata.lineNumber.classList.add(\"unavailable\");\n\t\t}\n\n\t\tdata.actionBar.clear();\n\t\tif (hasActions) {\n\t\t\tconst action = new Action(\n\t\t\t\t\"debug.callStack.restartFrame\",\n\t\t\t\tlocalize(\"restartFrame\", \"Restart Frame\"),\n\t\t\t\tThemeIcon.asClassName(icons.debugRestartFrame),\n\t\t\t\ttrue,\n\t\t\t\tasync () => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait stackFrame.restart();\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthis.notificationService.error(e);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\t\t\tdata.actionBar.push(action, { icon: true, label: false });\n\t\t}\n\t}\n\n\trenderCompressedElements(\n\t\tnode: ITreeNode<ICompressedTreeNode<IStackFrame>, FuzzyScore>,\n\t\tindex: number,\n\t\ttemplateData: IStackFrameTemplateData,\n\t\theight: number | undefined,\n\t): void {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\tdisposeTemplate(templateData: IStackFrameTemplateData): void {\n\t\ttemplateData.actionBar.dispose();\n\t}\n}\n\nclass ErrorsRenderer\n\timplements ICompressibleTreeRenderer<string, FuzzyScore, IErrorTemplateData>\n{\n\tstatic readonly ID = \"error\";\n\n\tget templateId(): string {\n\t\treturn ErrorsRenderer.ID;\n\t}\n\n\tconstructor(\n\t\t@IHoverService private readonly hoverService: IHoverService\n\t) {\n\t}\n\n\trenderTemplate(container: HTMLElement): IErrorTemplateData {\n\t\tconst label = dom.append(container, $(\".error\"));\n\n\t\treturn { label, templateDisposable: new DisposableStore() };\n\t}\n\n\trenderElement(\n\t\telement: ITreeNode<string, FuzzyScore>,\n\t\tindex: number,\n\t\tdata: IErrorTemplateData,\n\t): void {\n\t\tconst error = element.element;\n\t\tdata.label.textContent = error;\n\t\tdata.templateDisposable.add(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\tdata.label,\n\t\t\t\terror,\n\t\t\t),\n\t\t);\n\t}\n\n\trenderCompressedElements(\n\t\tnode: ITreeNode<ICompressedTreeNode<string>, FuzzyScore>,\n\t\tindex: number,\n\t\ttemplateData: IErrorTemplateData,\n\t\theight: number | undefined,\n\t): void {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\tdisposeTemplate(templateData: IErrorTemplateData): void {\n\t\t// noop\n\t}\n}\n\nclass LoadMoreRenderer\n\timplements\n\t\tICompressibleTreeRenderer<\n\t\t\tThreadAndSessionIds,\n\t\t\tFuzzyScore,\n\t\t\tILabelTemplateData\n\t\t>\n{\n\tstatic readonly ID = \"loadMore\";\n\tstatic readonly LABEL = localize(\n\t\t\"loadAllStackFrames\",\n\t\t\"Load More Stack Frames\",\n\t);\n\n\tconstructor() {}\n\n\tget templateId(): string {\n\t\treturn LoadMoreRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): ILabelTemplateData {\n\t\tconst label = dom.append(container, $(\".load-all\"));\n\t\tlabel.style.color = asCssVariable(textLinkForeground);\n\t\treturn { label };\n\t}\n\n\trenderElement(\n\t\telement: ITreeNode<ThreadAndSessionIds, FuzzyScore>,\n\t\tindex: number,\n\t\tdata: ILabelTemplateData,\n\t): void {\n\t\tdata.label.textContent = LoadMoreRenderer.LABEL;\n\t}\n\n\trenderCompressedElements(\n\t\tnode: ITreeNode<ICompressedTreeNode<ThreadAndSessionIds>, FuzzyScore>,\n\t\tindex: number,\n\t\ttemplateData: ILabelTemplateData,\n\t\theight: number | undefined,\n\t): void {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\tdisposeTemplate(templateData: ILabelTemplateData): void {\n\t\t// noop\n\t}\n}\n\nclass ShowMoreRenderer\n\timplements\n\t\tICompressibleTreeRenderer<IStackFrame[], FuzzyScore, ILabelTemplateData>\n{\n\tstatic readonly ID = \"showMore\";\n\n\tconstructor() {}\n\n\tget templateId(): string {\n\t\treturn ShowMoreRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): ILabelTemplateData {\n\t\tconst label = dom.append(container, $(\".show-more\"));\n\t\tlabel.style.color = asCssVariable(textLinkForeground);\n\t\treturn { label };\n\t}\n\n\trenderElement(\n\t\telement: ITreeNode<IStackFrame[], FuzzyScore>,\n\t\tindex: number,\n\t\tdata: ILabelTemplateData,\n\t): void {\n\t\tconst stackFrames = element.element;\n\t\tif (\n\t\t\tstackFrames.every(\n\t\t\t\t(sf) =>\n\t\t\t\t\t!!(\n\t\t\t\t\t\tsf.source &&\n\t\t\t\t\t\tsf.source.origin &&\n\t\t\t\t\t\tsf.source.origin === stackFrames[0].source.origin\n\t\t\t\t\t),\n\t\t\t)\n\t\t) {\n\t\t\tdata.label.textContent = localize(\n\t\t\t\t\"showMoreAndOrigin\",\n\t\t\t\t\"Show {0} More: {1}\",\n\t\t\t\tstackFrames.length,\n\t\t\t\tstackFrames[0].source.origin,\n\t\t\t);\n\t\t} else {\n\t\t\tdata.label.textContent = localize(\n\t\t\t\t\"showMoreStackFrames\",\n\t\t\t\t\"Show {0} More Stack Frames\",\n\t\t\t\tstackFrames.length,\n\t\t\t);\n\t\t}\n\t}\n\n\trenderCompressedElements(\n\t\tnode: ITreeNode<ICompressedTreeNode<IStackFrame[]>, FuzzyScore>,\n\t\tindex: number,\n\t\ttemplateData: ILabelTemplateData,\n\t\theight: number | undefined,\n\t): void {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\tdisposeTemplate(templateData: ILabelTemplateData): void {\n\t\t// noop\n\t}\n}\n\nclass CallStackDelegate implements IListVirtualDelegate<CallStackItem> {\n\tgetHeight(element: CallStackItem): number {\n\t\tif (\n\t\t\telement instanceof StackFrame &&\n\t\t\telement.presentationHint === \"label\"\n\t\t) {\n\t\t\treturn 16;\n\t\t}\n\t\tif (\n\t\t\telement instanceof ThreadAndSessionIds ||\n\t\t\telement instanceof Array\n\t\t) {\n\t\t\treturn 16;\n\t\t}\n\n\t\treturn 22;\n\t}\n\n\tgetTemplateId(element: CallStackItem): string {\n\t\tif (isDebugSession(element)) {\n\t\t\treturn SessionsRenderer.ID;\n\t\t}\n\t\tif (element instanceof Thread) {\n\t\t\treturn ThreadsRenderer.ID;\n\t\t}\n\t\tif (element instanceof StackFrame) {\n\t\t\treturn StackFramesRenderer.ID;\n\t\t}\n\t\tif (typeof element === \"string\") {\n\t\t\treturn ErrorsRenderer.ID;\n\t\t}\n\t\tif (element instanceof ThreadAndSessionIds) {\n\t\t\treturn LoadMoreRenderer.ID;\n\t\t}\n\n\t\t// element instanceof Array\n\t\treturn ShowMoreRenderer.ID;\n\t}\n}\n\nfunction stoppedText(stoppedDetails: IRawStoppedDetails): string {\n\treturn stoppedDetails.text ?? stoppedDescription(stoppedDetails);\n}\n\nfunction stoppedDescription(stoppedDetails: IRawStoppedDetails): string {\n\treturn (\n\t\tstoppedDetails.description ||\n\t\t(stoppedDetails.reason\n\t\t\t? localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"pausedOn\",\n\t\t\t\t\t\tcomment: [\"indicates reason for program being paused\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"Paused on {0}\",\n\t\t\t\t\tstoppedDetails.reason,\n\t\t\t\t)\n\t\t\t: localize(\"paused\", \"Paused\"))\n\t);\n}\n\nfunction isDebugModel(obj: any): obj is IDebugModel {\n\treturn typeof obj.getSessions === \"function\";\n}\n\nfunction isDebugSession(obj: any): obj is IDebugSession {\n\treturn obj && typeof obj.getAllThreads === \"function\";\n}\n\nclass CallStackDataSource\n\timplements IAsyncDataSource<IDebugModel, CallStackItem>\n{\n\tdeemphasizedStackFramesToShow: IStackFrame[] = [];\n\n\tconstructor(private debugService: IDebugService) {}\n\n\thasChildren(element: IDebugModel | CallStackItem): boolean {\n\t\tif (isDebugSession(element)) {\n\t\t\tconst threads = element.getAllThreads();\n\t\t\treturn (\n\t\t\t\tthreads.length > 1 ||\n\t\t\t\t(threads.length === 1 && threads[0].stopped) ||\n\t\t\t\t!!this.debugService\n\t\t\t\t\t.getModel()\n\t\t\t\t\t.getSessions()\n\t\t\t\t\t.find((s) => s.parentSession === element)\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\tisDebugModel(element) ||\n\t\t\t(element instanceof Thread && element.stopped)\n\t\t);\n\t}\n\n\tasync getChildren(\n\t\telement: IDebugModel | CallStackItem,\n\t): Promise<CallStackItem[]> {\n\t\tif (isDebugModel(element)) {\n\t\t\tconst sessions = element.getSessions();\n\t\t\tif (sessions.length === 0) {\n\t\t\t\treturn Promise.resolve([]);\n\t\t\t}\n\t\t\tif (\n\t\t\t\tsessions.length > 1 ||\n\t\t\t\tthis.debugService.getViewModel().isMultiSessionView()\n\t\t\t) {\n\t\t\t\treturn Promise.resolve(\n\t\t\t\t\tsessions.filter((s) => !s.parentSession),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst threads = sessions[0].getAllThreads();\n\t\t\t// Only show the threads in the call stack if there is more than 1 thread.\n\t\t\treturn threads.length === 1\n\t\t\t\t? this.getThreadChildren(<Thread>threads[0])\n\t\t\t\t: Promise.resolve(threads);\n\t\t} else if (isDebugSession(element)) {\n\t\t\tconst childSessions = this.debugService\n\t\t\t\t.getModel()\n\t\t\t\t.getSessions()\n\t\t\t\t.filter((s) => s.parentSession === element);\n\t\t\tconst threads: CallStackItem[] = element.getAllThreads();\n\t\t\tif (threads.length === 1) {\n\t\t\t\t// Do not show thread when there is only one to be compact.\n\t\t\t\tconst children = await this.getThreadChildren(\n\t\t\t\t\t<Thread>threads[0],\n\t\t\t\t);\n\t\t\t\treturn children.concat(childSessions);\n\t\t\t}\n\n\t\t\treturn Promise.resolve(threads.concat(childSessions));\n\t\t} else {\n\t\t\treturn this.getThreadChildren(<Thread>element);\n\t\t}\n\t}\n\n\tprivate getThreadChildren(thread: Thread): Promise<CallStackItem[]> {\n\t\treturn this.getThreadCallstack(thread).then((children) => {\n\t\t\t// Check if some stack frames should be hidden under a parent element since they are deemphasized\n\t\t\tconst result: CallStackItem[] = [];\n\t\t\tchildren.forEach((child, index) => {\n\t\t\t\tif (\n\t\t\t\t\tchild instanceof StackFrame &&\n\t\t\t\t\tchild.source &&\n\t\t\t\t\tisFrameDeemphasized(child)\n\t\t\t\t) {\n\t\t\t\t\t// Check if the user clicked to show the deemphasized source\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.deemphasizedStackFramesToShow.indexOf(child) === -1\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (result.length) {\n\t\t\t\t\t\t\tconst last = result[result.length - 1];\n\t\t\t\t\t\t\tif (last instanceof Array) {\n\t\t\t\t\t\t\t\t// Collect all the stackframes that will be \"collapsed\"\n\t\t\t\t\t\t\t\tlast.push(child);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst nextChild =\n\t\t\t\t\t\t\tindex < children.length - 1\n\t\t\t\t\t\t\t\t? children[index + 1]\n\t\t\t\t\t\t\t\t: undefined;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tnextChild instanceof StackFrame &&\n\t\t\t\t\t\t\tnextChild.source &&\n\t\t\t\t\t\t\tisFrameDeemphasized(nextChild)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// Start collecting stackframes that will be \"collapsed\"\n\t\t\t\t\t\t\tresult.push([child]);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresult.push(child);\n\t\t\t});\n\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprivate async getThreadCallstack(\n\t\tthread: Thread,\n\t): Promise<Array<IStackFrame | string | ThreadAndSessionIds>> {\n\t\tlet callStack: any[] = thread.getCallStack();\n\t\tif (!callStack || !callStack.length) {\n\t\t\tawait thread.fetchCallStack();\n\t\t\tcallStack = thread.getCallStack();\n\t\t}\n\n\t\tif (\n\t\t\tcallStack.length === 1 &&\n\t\t\tthread.session.capabilities.supportsDelayedStackTraceLoading &&\n\t\t\tthread.stoppedDetails &&\n\t\t\tthread.stoppedDetails.totalFrames &&\n\t\t\tthread.stoppedDetails.totalFrames > 1\n\t\t) {\n\t\t\t// To reduce flashing of the call stack view simply append the stale call stack\n\t\t\t// once we have the correct data the tree will refresh and we will no longer display it.\n\t\t\tcallStack = callStack.concat(thread.getStaleCallStack().slice(1));\n\t\t}\n\n\t\tif (thread.stoppedDetails && thread.stoppedDetails.framesErrorMessage) {\n\t\t\tcallStack = callStack.concat([\n\t\t\t\tthread.stoppedDetails.framesErrorMessage,\n\t\t\t]);\n\t\t}\n\t\tif (!thread.reachedEndOfCallStack && thread.stoppedDetails) {\n\t\t\tcallStack = callStack.concat([\n\t\t\t\tnew ThreadAndSessionIds(\n\t\t\t\t\tthread.session.getId(),\n\t\t\t\t\tthread.threadId,\n\t\t\t\t),\n\t\t\t]);\n\t\t}\n\n\t\treturn callStack;\n\t}\n}\n\nclass CallStackAccessibilityProvider\n\timplements IListAccessibilityProvider<CallStackItem>\n{\n\tgetWidgetAriaLabel(): string {\n\t\treturn localize(\n\t\t\t{\n\t\t\t\tcomment: [\"Debug is a noun in this context, not a verb.\"],\n\t\t\t\tkey: \"callStackAriaLabel\",\n\t\t\t},\n\t\t\t\"Debug Call Stack\",\n\t\t);\n\t}\n\n\tgetWidgetRole(): AriaRole {\n\t\t// Use treegrid as a role since each element can have additional actions inside #146210\n\t\treturn \"treegrid\";\n\t}\n\n\tgetRole(_element: CallStackItem): AriaRole | undefined {\n\t\treturn \"row\";\n\t}\n\n\tgetAriaLabel(element: CallStackItem): string {\n\t\tif (element instanceof Thread) {\n\t\t\treturn localize(\n\t\t\t\t{\n\t\t\t\t\tkey: \"threadAriaLabel\",\n\t\t\t\t\tcomment: [\n\t\t\t\t\t\t'Placeholders stand for the thread name and the thread state.For example \"Thread 1\" and \"Stopped',\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t\"Thread {0} {1}\",\n\t\t\t\telement.name,\n\t\t\t\telement.stateLabel,\n\t\t\t);\n\t\t}\n\t\tif (element instanceof StackFrame) {\n\t\t\treturn localize(\n\t\t\t\t\"stackFrameAriaLabel\",\n\t\t\t\t\"Stack Frame {0}, line {1}, {2}\",\n\t\t\t\telement.name,\n\t\t\t\telement.range.startLineNumber,\n\t\t\t\tgetSpecificSourceName(element),\n\t\t\t);\n\t\t}\n\t\tif (isDebugSession(element)) {\n\t\t\tconst thread = element.getAllThreads().find((t) => t.stopped);\n\t\t\tconst state = thread\n\t\t\t\t? thread.stateLabel\n\t\t\t\t: localize(\n\t\t\t\t\t\t{ key: \"running\", comment: [\"indicates state\"] },\n\t\t\t\t\t\t\"Running\",\n\t\t\t\t\t);\n\t\t\treturn localize(\n\t\t\t\t{\n\t\t\t\t\tkey: \"sessionLabel\",\n\t\t\t\t\tcomment: [\n\t\t\t\t\t\t'Placeholders stand for the session name and the session state. For example \"Launch Program\" and \"Running\"',\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t\"Session {0} {1}\",\n\t\t\t\telement.getLabel(),\n\t\t\t\tstate,\n\t\t\t);\n\t\t}\n\t\tif (typeof element === \"string\") {\n\t\t\treturn element;\n\t\t}\n\t\tif (element instanceof Array) {\n\t\t\treturn localize(\n\t\t\t\t\"showMoreStackFrames\",\n\t\t\t\t\"Show {0} More Stack Frames\",\n\t\t\t\telement.length,\n\t\t\t);\n\t\t}\n\n\t\t// element instanceof ThreadAndSessionIds\n\t\treturn LoadMoreRenderer.LABEL;\n\t}\n}\n\nclass CallStackCompressionDelegate\n\timplements ITreeCompressionDelegate<CallStackItem>\n{\n\tconstructor(private readonly debugService: IDebugService) {}\n\n\tisIncompressible(stat: CallStackItem): boolean {\n\t\tif (isDebugSession(stat)) {\n\t\t\tif (stat.compact) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst sessions = this.debugService.getModel().getSessions();\n\t\t\tif (sessions.some((s) => s.parentSession === stat && s.compact)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\nregisterAction2(\n\tclass Collapse extends ViewAction<CallStackView> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"callStack.collapse\",\n\t\t\t\tviewId: CALLSTACK_VIEW_ID,\n\t\t\t\ttitle: localize(\"collapse\", \"Collapse All\"),\n\t\t\t\tf1: false,\n\t\t\t\ticon: Codicon.collapseAll,\n\t\t\t\tprecondition: CONTEXT_DEBUG_STATE.isEqualTo(\n\t\t\t\t\tgetStateLabel(State.Stopped),\n\t\t\t\t),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\torder: 10,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\twhen: ContextKeyExpr.equals(\"view\", CALLSTACK_VIEW_ID),\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\trunInView(_accessor: ServicesAccessor, view: CallStackView) {\n\t\t\tview.collapseAll();\n\t\t}\n\t},\n);\n\nfunction registerCallStackInlineMenuItem(\n\tid: string,\n\ttitle: string | ICommandActionTitle,\n\ticon: Icon,\n\twhen: ContextKeyExpression,\n\torder: number,\n\tprecondition?: ContextKeyExpression,\n): void {\n\tMenuRegistry.appendMenuItem(MenuId.DebugCallStackContext, {\n\t\tgroup: \"inline\",\n\t\torder,\n\t\twhen,\n\t\tcommand: { id, title, icon, precondition },\n\t});\n}\n\nconst threadOrSessionWithOneThread = ContextKeyExpr.or(\n\tCONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo(\"thread\"),\n\tContextKeyExpr.and(\n\t\tCONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo(\"session\"),\n\t\tCONTEXT_CALLSTACK_SESSION_HAS_ONE_THREAD,\n\t),\n)!;\nregisterCallStackInlineMenuItem(\n\tPAUSE_ID,\n\tPAUSE_LABEL,\n\ticons.debugPause,\n\tContextKeyExpr.and(\n\t\tthreadOrSessionWithOneThread,\n\t\tCONTEXT_CALLSTACK_ITEM_STOPPED.toNegated(),\n\t)!,\n\t10,\n\tCONTEXT_FOCUSED_SESSION_IS_NO_DEBUG.toNegated(),\n);\nregisterCallStackInlineMenuItem(\n\tCONTINUE_ID,\n\tCONTINUE_LABEL,\n\ticons.debugContinue,\n\tContextKeyExpr.and(\n\t\tthreadOrSessionWithOneThread,\n\t\tCONTEXT_CALLSTACK_ITEM_STOPPED,\n\t)!,\n\t10,\n);\nregisterCallStackInlineMenuItem(\n\tSTEP_OVER_ID,\n\tSTEP_OVER_LABEL,\n\ticons.debugStepOver,\n\tthreadOrSessionWithOneThread,\n\t20,\n\tCONTEXT_CALLSTACK_ITEM_STOPPED,\n);\nregisterCallStackInlineMenuItem(\n\tSTEP_INTO_ID,\n\tSTEP_INTO_LABEL,\n\ticons.debugStepInto,\n\tthreadOrSessionWithOneThread,\n\t30,\n\tCONTEXT_CALLSTACK_ITEM_STOPPED,\n);\nregisterCallStackInlineMenuItem(\n\tSTEP_OUT_ID,\n\tSTEP_OUT_LABEL,\n\ticons.debugStepOut,\n\tthreadOrSessionWithOneThread,\n\t40,\n\tCONTEXT_CALLSTACK_ITEM_STOPPED,\n);\nregisterCallStackInlineMenuItem(\n\tRESTART_SESSION_ID,\n\tRESTART_LABEL,\n\ticons.debugRestart,\n\tCONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo(\"session\"),\n\t50,\n);\nregisterCallStackInlineMenuItem(\n\tSTOP_ID,\n\tSTOP_LABEL,\n\ticons.debugStop,\n\tContextKeyExpr.and(\n\t\tCONTEXT_CALLSTACK_SESSION_IS_ATTACH.toNegated(),\n\t\tCONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo(\"session\"),\n\t)!,\n\t60,\n);\nregisterCallStackInlineMenuItem(\n\tDISCONNECT_ID,\n\tDISCONNECT_LABEL,\n\ticons.debugDisconnect,\n\tContextKeyExpr.and(\n\t\tCONTEXT_CALLSTACK_SESSION_IS_ATTACH,\n\t\tCONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo(\"session\"),\n\t)!,\n\t60,\n);\n"],
  "mappings": "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",
  "names": []
}
