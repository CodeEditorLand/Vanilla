{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/callStackView.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { ActionBar } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { AriaRole } from '../../../../base/browser/ui/aria/aria.js';\nimport { HighlightedLabel } from '../../../../base/browser/ui/highlightedlabel/highlightedLabel.js';\nimport { IListVirtualDelegate } from '../../../../base/browser/ui/list/list.js';\nimport { IListAccessibilityProvider } from '../../../../base/browser/ui/list/listWidget.js';\nimport { ITreeCompressionDelegate } from '../../../../base/browser/ui/tree/asyncDataTree.js';\nimport { ICompressedTreeNode } from '../../../../base/browser/ui/tree/compressedObjectTreeModel.js';\nimport { ICompressibleTreeRenderer } from '../../../../base/browser/ui/tree/objectTree.js';\nimport { IAsyncDataSource, ITreeContextMenuEvent, ITreeNode } from '../../../../base/browser/ui/tree/tree.js';\nimport { Action, IAction } from '../../../../base/common/actions.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { createMatches, FuzzyScore, IMatch } from '../../../../base/common/filters.js';\nimport { DisposableStore, dispose, IDisposable } from '../../../../base/common/lifecycle.js';\nimport { posix } from '../../../../base/common/path.js';\nimport { commonSuffixLength } from '../../../../base/common/strings.js';\nimport { localize } from '../../../../nls.js';\nimport { ICommandActionTitle, Icon } from '../../../../platform/action/common/action.js';\nimport { createAndFillInActionBarActions, createAndFillInContextMenuActions, MenuEntryActionViewItem, SubmenuEntryActionViewItem } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { IMenuService, MenuId, MenuItemAction, MenuRegistry, registerAction2, SubmenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr, ContextKeyExpression, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { WorkbenchCompressibleAsyncDataTree } from '../../../../platform/list/browser/listService.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { asCssVariable, textLinkForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { ViewAction, ViewPane } from '../../../browser/parts/views/viewPane.js';\nimport { IViewletViewOptions } from '../../../browser/parts/views/viewsViewlet.js';\nimport { IViewDescriptorService } from '../../../common/views.js';\nimport { renderViewTree } from './baseDebugView.js';\nimport { CONTINUE_ID, CONTINUE_LABEL, DISCONNECT_ID, DISCONNECT_LABEL, PAUSE_ID, PAUSE_LABEL, RESTART_LABEL, RESTART_SESSION_ID, STEP_INTO_ID, STEP_INTO_LABEL, STEP_OUT_ID, STEP_OUT_LABEL, STEP_OVER_ID, STEP_OVER_LABEL, STOP_ID, STOP_LABEL } from './debugCommands.js';\nimport * as icons from './debugIcons.js';\nimport { createDisconnectMenuItemAction } from './debugToolBar.js';\nimport { CALLSTACK_VIEW_ID, CONTEXT_CALLSTACK_ITEM_STOPPED, CONTEXT_CALLSTACK_ITEM_TYPE, CONTEXT_CALLSTACK_SESSION_HAS_ONE_THREAD, CONTEXT_CALLSTACK_SESSION_IS_ATTACH, CONTEXT_DEBUG_STATE, CONTEXT_FOCUSED_SESSION_IS_NO_DEBUG, CONTEXT_STACK_FRAME_SUPPORTS_RESTART, getStateLabel, IDebugModel, IDebugService, IDebugSession, IRawStoppedDetails, isFrameDeemphasized, IStackFrame, IThread, State } from '../common/debug.js';\nimport { StackFrame, Thread, ThreadAndSessionIds } from '../common/debugModel.js';\nimport { isSessionAttach } from '../common/debugUtils.js';\nimport { getDefaultHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegateFactory.js';\nimport type { IManagedHover } from '../../../../base/browser/ui/hover/hover.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\n\nconst $ = dom.$;\n\ntype CallStackItem = IStackFrame | IThread | IDebugSession | string | ThreadAndSessionIds | IStackFrame[];\n\nfunction assignSessionContext(element: IDebugSession, context: any) {\n\tcontext.sessionId = element.getId();\n\treturn context;\n}\n\nfunction assignThreadContext(element: IThread, context: any) {\n\tcontext.threadId = element.getId();\n\tassignSessionContext(element.session, context);\n\treturn context;\n}\n\nfunction assignStackFrameContext(element: StackFrame, context: any) {\n\tcontext.frameId = element.getId();\n\tcontext.frameName = element.name;\n\tcontext.frameLocation = { range: element.range, source: element.source.raw };\n\tassignThreadContext(element.thread, context);\n\treturn context;\n}\n\nexport function getContext(element: CallStackItem | null): any {\n\tif (element instanceof StackFrame) {\n\t\treturn assignStackFrameContext(element, {});\n\t} else if (element instanceof Thread) {\n\t\treturn assignThreadContext(element, {});\n\t} else if (isDebugSession(element)) {\n\t\treturn assignSessionContext(element, {});\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\n// Extensions depend on this context, should not be changed even though it is not fully deterministic\nexport function getContextForContributedActions(element: CallStackItem | null): string | number {\n\tif (element instanceof StackFrame) {\n\t\tif (element.source.inMemory) {\n\t\t\treturn element.source.raw.path || element.source.reference || element.source.name;\n\t\t}\n\n\t\treturn element.source.uri.toString();\n\t}\n\tif (element instanceof Thread) {\n\t\treturn element.threadId;\n\t}\n\tif (isDebugSession(element)) {\n\t\treturn element.getId();\n\t}\n\n\treturn '';\n}\n\nexport function getSpecificSourceName(stackFrame: IStackFrame): string {\n\t// To reduce flashing of the path name and the way we fetch stack frames\n\t// We need to compute the source name based on the other frames in the stale call stack\n\tlet callStack = (<Thread>stackFrame.thread).getStaleCallStack();\n\tcallStack = callStack.length > 0 ? callStack : stackFrame.thread.getCallStack();\n\tconst otherSources = callStack.map(sf => sf.source).filter(s => s !== stackFrame.source);\n\tlet suffixLength = 0;\n\totherSources.forEach(s => {\n\t\tif (s.name === stackFrame.source.name) {\n\t\t\tsuffixLength = Math.max(suffixLength, commonSuffixLength(stackFrame.source.uri.path, s.uri.path));\n\t\t}\n\t});\n\tif (suffixLength === 0) {\n\t\treturn stackFrame.source.name;\n\t}\n\n\tconst from = Math.max(0, stackFrame.source.uri.path.lastIndexOf(posix.sep, stackFrame.source.uri.path.length - suffixLength - 1));\n\treturn (from > 0 ? '...' : '') + stackFrame.source.uri.path.substring(from);\n}\n\nasync function expandTo(session: IDebugSession, tree: WorkbenchCompressibleAsyncDataTree<IDebugModel, CallStackItem, FuzzyScore>): Promise<void> {\n\tif (session.parentSession) {\n\t\tawait expandTo(session.parentSession, tree);\n\t}\n\tawait tree.expand(session);\n}\n\nexport class CallStackView extends ViewPane {\n\tprivate stateMessage!: HTMLSpanElement;\n\tprivate stateMessageLabel!: HTMLSpanElement;\n\tprivate stateMessageLabelHover!: IManagedHover;\n\tprivate onCallStackChangeScheduler: RunOnceScheduler;\n\tprivate needsRefresh = false;\n\tprivate ignoreSelectionChangedEvent = false;\n\tprivate ignoreFocusStackFrameEvent = false;\n\n\tprivate dataSource!: CallStackDataSource;\n\tprivate tree!: WorkbenchCompressibleAsyncDataTree<IDebugModel, CallStackItem, FuzzyScore>;\n\tprivate autoExpandedSessions = new Set<IDebugSession>();\n\tprivate selectionNeedsUpdate = false;\n\n\tconstructor(\n\t\tprivate options: IViewletViewOptions,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService, hoverService);\n\n\t\t// Create scheduler to prevent unnecessary flashing of tree when reacting to changes\n\t\tthis.onCallStackChangeScheduler = this._register(new RunOnceScheduler(async () => {\n\t\t\t// Only show the global pause message if we do not display threads.\n\t\t\t// Otherwise there will be a pause message per thread and there is no need for a global one.\n\t\t\tconst sessions = this.debugService.getModel().getSessions();\n\t\t\tif (sessions.length === 0) {\n\t\t\t\tthis.autoExpandedSessions.clear();\n\t\t\t}\n\n\t\t\tconst thread = sessions.length === 1 && sessions[0].getAllThreads().length === 1 ? sessions[0].getAllThreads()[0] : undefined;\n\t\t\tconst stoppedDetails = sessions.length === 1 ? sessions[0].getStoppedDetails() : undefined;\n\t\t\tif (stoppedDetails && (thread || typeof stoppedDetails.threadId !== 'number')) {\n\t\t\t\tthis.stateMessageLabel.textContent = stoppedDescription(stoppedDetails);\n\t\t\t\tthis.stateMessageLabelHover.update(stoppedText(stoppedDetails));\n\t\t\t\tthis.stateMessageLabel.classList.toggle('exception', stoppedDetails.reason === 'exception');\n\t\t\t\tthis.stateMessage.hidden = false;\n\t\t\t} else if (sessions.length === 1 && sessions[0].state === State.Running) {\n\t\t\t\tthis.stateMessageLabel.textContent = localize({ key: 'running', comment: ['indicates state'] }, \"Running\");\n\t\t\t\tthis.stateMessageLabelHover.update(sessions[0].getLabel());\n\t\t\t\tthis.stateMessageLabel.classList.remove('exception');\n\t\t\t\tthis.stateMessage.hidden = false;\n\t\t\t} else {\n\t\t\t\tthis.stateMessage.hidden = true;\n\t\t\t}\n\t\t\tthis.updateActions();\n\n\t\t\tthis.needsRefresh = false;\n\t\t\tthis.dataSource.deemphasizedStackFramesToShow = [];\n\t\t\tawait this.tree.updateChildren();\n\t\t\ttry {\n\t\t\t\tconst toExpand = new Set<IDebugSession>();\n\t\t\t\tsessions.forEach(s => {\n\t\t\t\t\t// Automatically expand sessions that have children, but only do this once.\n\t\t\t\t\tif (s.parentSession && !this.autoExpandedSessions.has(s.parentSession)) {\n\t\t\t\t\t\ttoExpand.add(s.parentSession);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tfor (const session of toExpand) {\n\t\t\t\t\tawait expandTo(session, this.tree);\n\t\t\t\t\tthis.autoExpandedSessions.add(session);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t// Ignore tree expand errors if element no longer present\n\t\t\t}\n\t\t\tif (this.selectionNeedsUpdate) {\n\t\t\t\tthis.selectionNeedsUpdate = false;\n\t\t\t\tawait this.updateTreeSelection();\n\t\t\t}\n\t\t}, 50));\n\t}\n\n\tprotected override renderHeaderTitle(container: HTMLElement): void {\n\t\tsuper.renderHeaderTitle(container, this.options.title);\n\n\t\tthis.stateMessage = dom.append(container, $('span.call-stack-state-message'));\n\t\tthis.stateMessage.hidden = true;\n\t\tthis.stateMessageLabel = dom.append(this.stateMessage, $('span.label'));\n\t\tthis.stateMessageLabelHover = this._register(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), this.stateMessage, ''));\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\t\tthis.element.classList.add('debug-pane');\n\t\tcontainer.classList.add('debug-call-stack');\n\t\tconst treeContainer = renderViewTree(container);\n\n\t\tthis.dataSource = new CallStackDataSource(this.debugService);\n\t\tthis.tree = <WorkbenchCompressibleAsyncDataTree<IDebugModel, CallStackItem, FuzzyScore>>this.instantiationService.createInstance(WorkbenchCompressibleAsyncDataTree, 'CallStackView', treeContainer, new CallStackDelegate(), new CallStackCompressionDelegate(this.debugService), [\n\t\t\tthis.instantiationService.createInstance(SessionsRenderer),\n\t\t\tthis.instantiationService.createInstance(ThreadsRenderer),\n\t\t\tthis.instantiationService.createInstance(StackFramesRenderer),\n\t\t\tthis.instantiationService.createInstance(ErrorsRenderer),\n\t\t\tnew LoadMoreRenderer(),\n\t\t\tnew ShowMoreRenderer()\n\t\t], this.dataSource, {\n\t\t\taccessibilityProvider: new CallStackAccessibilityProvider(),\n\t\t\tcompressionEnabled: true,\n\t\t\tautoExpandSingleChildren: true,\n\t\t\tidentityProvider: {\n\t\t\t\tgetId: (element: CallStackItem) => {\n\t\t\t\t\tif (typeof element === 'string') {\n\t\t\t\t\t\treturn element;\n\t\t\t\t\t}\n\t\t\t\t\tif (element instanceof Array) {\n\t\t\t\t\t\treturn `showMore ${element[0].getId()}`;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn element.getId();\n\t\t\t\t}\n\t\t\t},\n\t\t\tkeyboardNavigationLabelProvider: {\n\t\t\t\tgetKeyboardNavigationLabel: (e: CallStackItem) => {\n\t\t\t\t\tif (isDebugSession(e)) {\n\t\t\t\t\t\treturn e.getLabel();\n\t\t\t\t\t}\n\t\t\t\t\tif (e instanceof Thread) {\n\t\t\t\t\t\treturn `${e.name} ${e.stateLabel}`;\n\t\t\t\t\t}\n\t\t\t\t\tif (e instanceof StackFrame || typeof e === 'string') {\n\t\t\t\t\t\treturn e;\n\t\t\t\t\t}\n\t\t\t\t\tif (e instanceof ThreadAndSessionIds) {\n\t\t\t\t\t\treturn LoadMoreRenderer.LABEL;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn localize('showMoreStackFrames2', \"Show More Stack Frames\");\n\t\t\t\t},\n\t\t\t\tgetCompressedNodeKeyboardNavigationLabel: (e: CallStackItem[]) => {\n\t\t\t\t\tconst firstItem = e[0];\n\t\t\t\t\tif (isDebugSession(firstItem)) {\n\t\t\t\t\t\treturn firstItem.getLabel();\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t},\n\t\t\texpandOnlyOnTwistieClick: true,\n\t\t\toverrideStyles: this.getLocationBasedColors().listOverrideStyles\n\t\t});\n\n\t\tthis.tree.setInput(this.debugService.getModel());\n\t\tthis._register(this.tree);\n\t\tthis._register(this.tree.onDidOpen(async e => {\n\t\t\tif (this.ignoreSelectionChangedEvent) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst focusStackFrame = (stackFrame: IStackFrame | undefined, thread: IThread | undefined, session: IDebugSession, options: { explicit?: boolean; preserveFocus?: boolean; sideBySide?: boolean; pinned?: boolean } = {}) => {\n\t\t\t\tthis.ignoreFocusStackFrameEvent = true;\n\t\t\t\ttry {\n\t\t\t\t\tthis.debugService.focusStackFrame(stackFrame, thread, session, { ...options, ...{ explicit: true } });\n\t\t\t\t} finally {\n\t\t\t\t\tthis.ignoreFocusStackFrameEvent = false;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst element = e.element;\n\t\t\tif (element instanceof StackFrame) {\n\t\t\t\tconst opts = {\n\t\t\t\t\tpreserveFocus: e.editorOptions.preserveFocus,\n\t\t\t\t\tsideBySide: e.sideBySide,\n\t\t\t\t\tpinned: e.editorOptions.pinned\n\t\t\t\t};\n\t\t\t\tfocusStackFrame(element, element.thread, element.thread.session, opts);\n\t\t\t}\n\t\t\tif (element instanceof Thread) {\n\t\t\t\tfocusStackFrame(undefined, element, element.session);\n\t\t\t}\n\t\t\tif (isDebugSession(element)) {\n\t\t\t\tfocusStackFrame(undefined, undefined, element);\n\t\t\t}\n\t\t\tif (element instanceof ThreadAndSessionIds) {\n\t\t\t\tconst session = this.debugService.getModel().getSession(element.sessionId);\n\t\t\t\tconst thread = session && session.getThread(element.threadId);\n\t\t\t\tif (thread) {\n\t\t\t\t\tconst totalFrames = thread.stoppedDetails?.totalFrames;\n\t\t\t\t\tconst remainingFramesCount = typeof totalFrames === 'number' ? (totalFrames - thread.getCallStack().length) : undefined;\n\t\t\t\t\t// Get all the remaining frames\n\t\t\t\t\tawait (<Thread>thread).fetchCallStack(remainingFramesCount);\n\t\t\t\t\tawait this.tree.updateChildren();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (element instanceof Array) {\n\t\t\t\tthis.dataSource.deemphasizedStackFramesToShow.push(...element);\n\t\t\t\tthis.tree.updateChildren();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.debugService.getModel().onDidChangeCallStack(() => {\n\t\t\tif (!this.isBodyVisible()) {\n\t\t\t\tthis.needsRefresh = true;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this.onCallStackChangeScheduler.isScheduled()) {\n\t\t\t\tthis.onCallStackChangeScheduler.schedule();\n\t\t\t}\n\t\t}));\n\t\tconst onFocusChange = Event.any<any>(this.debugService.getViewModel().onDidFocusStackFrame, this.debugService.getViewModel().onDidFocusSession);\n\t\tthis._register(onFocusChange(async () => {\n\t\t\tif (this.ignoreFocusStackFrameEvent) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this.isBodyVisible()) {\n\t\t\t\tthis.needsRefresh = true;\n\t\t\t\tthis.selectionNeedsUpdate = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this.onCallStackChangeScheduler.isScheduled()) {\n\t\t\t\tthis.selectionNeedsUpdate = true;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait this.updateTreeSelection();\n\t\t}));\n\t\tthis._register(this.tree.onContextMenu(e => this.onContextMenu(e)));\n\n\t\t// Schedule the update of the call stack tree if the viewlet is opened after a session started #14684\n\t\tif (this.debugService.state === State.Stopped) {\n\t\t\tthis.onCallStackChangeScheduler.schedule(0);\n\t\t}\n\n\t\tthis._register(this.onDidChangeBodyVisibility(visible => {\n\t\t\tif (visible && this.needsRefresh) {\n\t\t\t\tthis.onCallStackChangeScheduler.schedule();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.debugService.onDidNewSession(s => {\n\t\t\tconst sessionListeners: IDisposable[] = [];\n\t\t\tsessionListeners.push(s.onDidChangeName(() => {\n\t\t\t\t// this.tree.updateChildren is called on a delay after a session is added,\n\t\t\t\t// so don't rerender if the tree doesn't have the node yet\n\t\t\t\tif (this.tree.hasNode(s)) {\n\t\t\t\t\tthis.tree.rerender(s);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tsessionListeners.push(s.onDidEndAdapter(() => dispose(sessionListeners)));\n\t\t\tif (s.parentSession) {\n\t\t\t\t// A session we already expanded has a new child session, allow to expand it again.\n\t\t\t\tthis.autoExpandedSessions.delete(s.parentSession);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\t\tthis.tree.layout(height, width);\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\t\tthis.tree.domFocus();\n\t}\n\n\tcollapseAll(): void {\n\t\tthis.tree.collapseAll();\n\t}\n\n\tprivate async updateTreeSelection(): Promise<void> {\n\t\tif (!this.tree || !this.tree.getInput()) {\n\t\t\t// Tree not initialized yet\n\t\t\treturn;\n\t\t}\n\n\t\tconst updateSelectionAndReveal = (element: IStackFrame | IDebugSession) => {\n\t\t\tthis.ignoreSelectionChangedEvent = true;\n\t\t\ttry {\n\t\t\t\tthis.tree.setSelection([element]);\n\t\t\t\t// If the element is outside of the screen bounds,\n\t\t\t\t// position it in the middle\n\t\t\t\tif (this.tree.getRelativeTop(element) === null) {\n\t\t\t\t\tthis.tree.reveal(element, 0.5);\n\t\t\t\t} else {\n\t\t\t\t\tthis.tree.reveal(element);\n\t\t\t\t}\n\t\t\t} catch (e) { }\n\t\t\tfinally {\n\t\t\t\tthis.ignoreSelectionChangedEvent = false;\n\t\t\t}\n\t\t};\n\n\t\tconst thread = this.debugService.getViewModel().focusedThread;\n\t\tconst session = this.debugService.getViewModel().focusedSession;\n\t\tconst stackFrame = this.debugService.getViewModel().focusedStackFrame;\n\t\tif (!thread) {\n\t\t\tif (!session) {\n\t\t\t\tthis.tree.setSelection([]);\n\t\t\t} else {\n\t\t\t\tupdateSelectionAndReveal(session);\n\t\t\t}\n\t\t} else {\n\t\t\t// Ignore errors from this expansions because we are not aware if we rendered the threads and sessions or we hide them to declutter the view\n\t\t\ttry {\n\t\t\t\tawait expandTo(thread.session, this.tree);\n\t\t\t} catch (e) { }\n\t\t\ttry {\n\t\t\t\tawait this.tree.expand(thread);\n\t\t\t} catch (e) { }\n\n\t\t\tconst toReveal = stackFrame || session;\n\t\t\tif (toReveal) {\n\t\t\t\tupdateSelectionAndReveal(toReveal);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onContextMenu(e: ITreeContextMenuEvent<CallStackItem>): void {\n\t\tconst element = e.element;\n\t\tlet overlay: [string, any][] = [];\n\t\tif (isDebugSession(element)) {\n\t\t\toverlay = getSessionContextOverlay(element);\n\t\t} else if (element instanceof Thread) {\n\t\t\toverlay = getThreadContextOverlay(element);\n\t\t} else if (element instanceof StackFrame) {\n\t\t\toverlay = getStackFrameContextOverlay(element);\n\t\t}\n\n\t\tconst primary: IAction[] = [];\n\t\tconst secondary: IAction[] = [];\n\t\tconst result = { primary, secondary };\n\t\tconst contextKeyService = this.contextKeyService.createOverlay(overlay);\n\t\tconst menu = this.menuService.getMenuActions(MenuId.DebugCallStackContext, contextKeyService, { arg: getContextForContributedActions(element), shouldForwardArgs: true });\n\t\tcreateAndFillInContextMenuActions(menu, result, 'inline');\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => e.anchor,\n\t\t\tgetActions: () => result.secondary,\n\t\t\tgetActionsContext: () => getContext(element)\n\t\t});\n\t}\n}\n\ninterface IThreadTemplateData {\n\tthread: HTMLElement;\n\tname: HTMLElement;\n\tstateLabel: HTMLSpanElement;\n\tlabel: HighlightedLabel;\n\tactionBar: ActionBar;\n\telementDisposable: DisposableStore;\n\ttemplateDisposable: IDisposable;\n}\n\ninterface ISessionTemplateData {\n\tsession: HTMLElement;\n\tname: HTMLElement;\n\tstateLabel: HTMLSpanElement;\n\tlabel: HighlightedLabel;\n\tactionBar: ActionBar;\n\telementDisposable: DisposableStore;\n\ttemplateDisposable: IDisposable;\n}\n\ninterface IErrorTemplateData {\n\tlabel: HTMLElement;\n\ttemplateDisposable: DisposableStore;\n}\n\ninterface ILabelTemplateData {\n\tlabel: HTMLElement;\n}\n\ninterface IStackFrameTemplateData {\n\tstackFrame: HTMLElement;\n\tfile: HTMLElement;\n\tfileName: HTMLElement;\n\tlineNumber: HTMLElement;\n\tlabel: HighlightedLabel;\n\tactionBar: ActionBar;\n\ttemplateDisposable: DisposableStore;\n}\n\nfunction getSessionContextOverlay(session: IDebugSession): [string, any][] {\n\treturn [\n\t\t[CONTEXT_CALLSTACK_ITEM_TYPE.key, 'session'],\n\t\t[CONTEXT_CALLSTACK_SESSION_IS_ATTACH.key, isSessionAttach(session)],\n\t\t[CONTEXT_CALLSTACK_ITEM_STOPPED.key, session.state === State.Stopped],\n\t\t[CONTEXT_CALLSTACK_SESSION_HAS_ONE_THREAD.key, session.getAllThreads().length === 1],\n\t];\n}\n\nclass SessionsRenderer implements ICompressibleTreeRenderer<IDebugSession, FuzzyScore, ISessionTemplateData> {\n\tstatic readonly ID = 'session';\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t) { }\n\n\tget templateId(): string {\n\t\treturn SessionsRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): ISessionTemplateData {\n\t\tconst session = dom.append(container, $('.session'));\n\t\tdom.append(session, $(ThemeIcon.asCSSSelector(icons.callstackViewSession)));\n\t\tconst name = dom.append(session, $('.name'));\n\t\tconst stateLabel = dom.append(session, $('span.state.label.monaco-count-badge.long'));\n\t\tconst templateDisposable = new DisposableStore();\n\t\tconst label = templateDisposable.add(new HighlightedLabel(name));\n\n\t\tconst stopActionViewItemDisposables = templateDisposable.add(new DisposableStore());\n\t\tconst actionBar = templateDisposable.add(new ActionBar(session, {\n\t\t\tactionViewItemProvider: (action, options) => {\n\t\t\t\tif ((action.id === STOP_ID || action.id === DISCONNECT_ID) && action instanceof MenuItemAction) {\n\t\t\t\t\tstopActionViewItemDisposables.clear();\n\t\t\t\t\tconst item = this.instantiationService.invokeFunction(accessor => createDisconnectMenuItemAction(action as MenuItemAction, stopActionViewItemDisposables, accessor, { ...options, menuAsChild: false }));\n\t\t\t\t\tif (item) {\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (action instanceof MenuItemAction) {\n\t\t\t\t\treturn this.instantiationService.createInstance(MenuEntryActionViewItem, action, { hoverDelegate: options.hoverDelegate });\n\t\t\t\t} else if (action instanceof SubmenuItemAction) {\n\t\t\t\t\treturn this.instantiationService.createInstance(SubmenuEntryActionViewItem, action, { hoverDelegate: options.hoverDelegate });\n\t\t\t\t}\n\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}));\n\n\t\tconst elementDisposable = templateDisposable.add(new DisposableStore());\n\t\treturn { session, name, stateLabel, label, actionBar, elementDisposable, templateDisposable };\n\t}\n\n\trenderElement(element: ITreeNode<IDebugSession, FuzzyScore>, _: number, data: ISessionTemplateData): void {\n\t\tthis.doRenderElement(element.element, createMatches(element.filterData), data);\n\t}\n\n\trenderCompressedElements(node: ITreeNode<ICompressedTreeNode<IDebugSession>, FuzzyScore>, _index: number, templateData: ISessionTemplateData): void {\n\t\tconst lastElement = node.element.elements[node.element.elements.length - 1];\n\t\tconst matches = createMatches(node.filterData);\n\t\tthis.doRenderElement(lastElement, matches, templateData);\n\t}\n\n\tprivate doRenderElement(session: IDebugSession, matches: IMatch[], data: ISessionTemplateData): void {\n\t\tconst sessionHover = data.elementDisposable.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), data.session, localize({ key: 'session', comment: ['Session is a noun'] }, \"Session\")));\n\t\tdata.label.set(session.getLabel(), matches);\n\t\tconst stoppedDetails = session.getStoppedDetails();\n\t\tconst thread = session.getAllThreads().find(t => t.stopped);\n\n\t\tconst contextKeyService = this.contextKeyService.createOverlay(getSessionContextOverlay(session));\n\t\tconst menu = data.elementDisposable.add(this.menuService.createMenu(MenuId.DebugCallStackContext, contextKeyService));\n\n\t\tconst setupActionBar = () => {\n\t\t\tdata.actionBar.clear();\n\n\t\t\tconst primary: IAction[] = [];\n\t\t\tconst secondary: IAction[] = [];\n\t\t\tconst result = { primary, secondary };\n\n\t\t\tcreateAndFillInActionBarActions(menu, { arg: getContextForContributedActions(session), shouldForwardArgs: true }, result, 'inline');\n\t\t\tdata.actionBar.push(primary, { icon: true, label: false });\n\t\t\t// We need to set our internal context on the action bar, since our commands depend on that one\n\t\t\t// While the external context our extensions rely on\n\t\t\tdata.actionBar.context = getContext(session);\n\t\t};\n\t\tdata.elementDisposable.add(menu.onDidChange(() => setupActionBar()));\n\t\tsetupActionBar();\n\n\t\tdata.stateLabel.style.display = '';\n\n\t\tif (stoppedDetails) {\n\t\t\tdata.stateLabel.textContent = stoppedDescription(stoppedDetails);\n\t\t\tsessionHover.update(`${session.getLabel()}: ${stoppedText(stoppedDetails)}`);\n\t\t\tdata.stateLabel.classList.toggle('exception', stoppedDetails.reason === 'exception');\n\t\t} else if (thread && thread.stoppedDetails) {\n\t\t\tdata.stateLabel.textContent = stoppedDescription(thread.stoppedDetails);\n\t\t\tsessionHover.update(`${session.getLabel()}: ${stoppedText(thread.stoppedDetails)}`);\n\t\t\tdata.stateLabel.classList.toggle('exception', thread.stoppedDetails.reason === 'exception');\n\t\t} else {\n\t\t\tdata.stateLabel.textContent = localize({ key: 'running', comment: ['indicates state'] }, \"Running\");\n\t\t\tdata.stateLabel.classList.remove('exception');\n\t\t}\n\t}\n\n\tdisposeTemplate(templateData: ISessionTemplateData): void {\n\t\ttemplateData.templateDisposable.dispose();\n\t}\n\n\tdisposeElement(_element: ITreeNode<IDebugSession, FuzzyScore>, _: number, templateData: ISessionTemplateData): void {\n\t\ttemplateData.elementDisposable.clear();\n\t}\n\n\tdisposeCompressedElements(node: ITreeNode<ICompressedTreeNode<IDebugSession>, FuzzyScore>, index: number, templateData: ISessionTemplateData, height: number | undefined): void {\n\t\ttemplateData.elementDisposable.clear();\n\t}\n}\n\nfunction getThreadContextOverlay(thread: IThread): [string, any][] {\n\treturn [\n\t\t[CONTEXT_CALLSTACK_ITEM_TYPE.key, 'thread'],\n\t\t[CONTEXT_CALLSTACK_ITEM_STOPPED.key, thread.stopped]\n\t];\n}\n\nclass ThreadsRenderer implements ICompressibleTreeRenderer<IThread, FuzzyScore, IThreadTemplateData> {\n\tstatic readonly ID = 'thread';\n\n\tconstructor(\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t) { }\n\n\tget templateId(): string {\n\t\treturn ThreadsRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IThreadTemplateData {\n\t\tconst thread = dom.append(container, $('.thread'));\n\t\tconst name = dom.append(thread, $('.name'));\n\t\tconst stateLabel = dom.append(thread, $('span.state.label.monaco-count-badge.long'));\n\n\t\tconst templateDisposable = new DisposableStore();\n\t\tconst label = templateDisposable.add(new HighlightedLabel(name));\n\n\t\tconst actionBar = templateDisposable.add(new ActionBar(thread));\n\t\tconst elementDisposable = templateDisposable.add(new DisposableStore());\n\n\t\treturn { thread, name, stateLabel, label, actionBar, elementDisposable, templateDisposable };\n\t}\n\n\trenderElement(element: ITreeNode<IThread, FuzzyScore>, _index: number, data: IThreadTemplateData): void {\n\t\tconst thread = element.element;\n\t\tdata.elementDisposable.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), data.thread, thread.name));\n\t\tdata.label.set(thread.name, createMatches(element.filterData));\n\t\tdata.stateLabel.textContent = thread.stateLabel;\n\t\tdata.stateLabel.classList.toggle('exception', thread.stoppedDetails?.reason === 'exception');\n\n\t\tconst contextKeyService = this.contextKeyService.createOverlay(getThreadContextOverlay(thread));\n\t\tconst menu = data.elementDisposable.add(this.menuService.createMenu(MenuId.DebugCallStackContext, contextKeyService));\n\n\t\tconst setupActionBar = () => {\n\t\t\tdata.actionBar.clear();\n\n\t\t\tconst primary: IAction[] = [];\n\t\t\tconst secondary: IAction[] = [];\n\t\t\tconst result = { primary, secondary };\n\n\t\t\tcreateAndFillInActionBarActions(menu, { arg: getContextForContributedActions(thread), shouldForwardArgs: true }, result, 'inline');\n\t\t\tdata.actionBar.push(primary, { icon: true, label: false });\n\t\t\t// We need to set our internal context on the action bar, since our commands depend on that one\n\t\t\t// While the external context our extensions rely on\n\t\t\tdata.actionBar.context = getContext(thread);\n\t\t};\n\t\tdata.elementDisposable.add(menu.onDidChange(() => setupActionBar()));\n\t\tsetupActionBar();\n\t}\n\n\trenderCompressedElements(_node: ITreeNode<ICompressedTreeNode<IThread>, FuzzyScore>, _index: number, _templateData: IThreadTemplateData, _height: number | undefined): void {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tdisposeElement(_element: any, _index: number, templateData: IThreadTemplateData): void {\n\t\ttemplateData.elementDisposable.clear();\n\t}\n\n\tdisposeTemplate(templateData: IThreadTemplateData): void {\n\t\ttemplateData.templateDisposable.dispose();\n\t}\n}\n\nfunction getStackFrameContextOverlay(stackFrame: IStackFrame): [string, any][] {\n\treturn [\n\t\t[CONTEXT_CALLSTACK_ITEM_TYPE.key, 'stackFrame'],\n\t\t[CONTEXT_STACK_FRAME_SUPPORTS_RESTART.key, stackFrame.canRestart]\n\t];\n}\n\nclass StackFramesRenderer implements ICompressibleTreeRenderer<IStackFrame, FuzzyScore, IStackFrameTemplateData> {\n\tstatic readonly ID = 'stackFrame';\n\n\tconstructor(\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t) { }\n\n\tget templateId(): string {\n\t\treturn StackFramesRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IStackFrameTemplateData {\n\t\tconst stackFrame = dom.append(container, $('.stack-frame'));\n\t\tconst labelDiv = dom.append(stackFrame, $('span.label.expression'));\n\t\tconst file = dom.append(stackFrame, $('.file'));\n\t\tconst fileName = dom.append(file, $('span.file-name'));\n\t\tconst wrapper = dom.append(file, $('span.line-number-wrapper'));\n\t\tconst lineNumber = dom.append(wrapper, $('span.line-number.monaco-count-badge'));\n\n\t\tconst templateDisposable = new DisposableStore();\n\t\tconst label = templateDisposable.add(new HighlightedLabel(labelDiv));\n\n\t\tconst actionBar = templateDisposable.add(new ActionBar(stackFrame));\n\n\t\treturn { file, fileName, label, lineNumber, stackFrame, actionBar, templateDisposable };\n\t}\n\n\trenderElement(element: ITreeNode<IStackFrame, FuzzyScore>, index: number, data: IStackFrameTemplateData): void {\n\t\tconst stackFrame = element.element;\n\t\tdata.stackFrame.classList.toggle('disabled', !stackFrame.source || !stackFrame.source.available || isFrameDeemphasized(stackFrame));\n\t\tdata.stackFrame.classList.toggle('label', stackFrame.presentationHint === 'label');\n\t\tconst hasActions = !!stackFrame.thread.session.capabilities.supportsRestartFrame && stackFrame.presentationHint !== 'label' && stackFrame.presentationHint !== 'subtle' && stackFrame.canRestart;\n\t\tdata.stackFrame.classList.toggle('has-actions', hasActions);\n\n\t\tlet title = stackFrame.source.inMemory ? stackFrame.source.uri.path : this.labelService.getUriLabel(stackFrame.source.uri);\n\t\tif (stackFrame.source.raw.origin) {\n\t\t\ttitle += `\\n${stackFrame.source.raw.origin}`;\n\t\t}\n\t\tdata.templateDisposable.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), data.file, title));\n\n\t\tdata.label.set(stackFrame.name, createMatches(element.filterData), stackFrame.name);\n\t\tdata.fileName.textContent = getSpecificSourceName(stackFrame);\n\t\tif (stackFrame.range.startLineNumber !== undefined) {\n\t\t\tdata.lineNumber.textContent = `${stackFrame.range.startLineNumber}`;\n\t\t\tif (stackFrame.range.startColumn) {\n\t\t\t\tdata.lineNumber.textContent += `:${stackFrame.range.startColumn}`;\n\t\t\t}\n\t\t\tdata.lineNumber.classList.remove('unavailable');\n\t\t} else {\n\t\t\tdata.lineNumber.classList.add('unavailable');\n\t\t}\n\n\t\tdata.actionBar.clear();\n\t\tif (hasActions) {\n\t\t\tconst action = new Action('debug.callStack.restartFrame', localize('restartFrame', \"Restart Frame\"), ThemeIcon.asClassName(icons.debugRestartFrame), true, async () => {\n\t\t\t\ttry {\n\t\t\t\t\tawait stackFrame.restart();\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthis.notificationService.error(e);\n\t\t\t\t}\n\t\t\t});\n\t\t\tdata.actionBar.push(action, { icon: true, label: false });\n\t\t}\n\t}\n\n\trenderCompressedElements(node: ITreeNode<ICompressedTreeNode<IStackFrame>, FuzzyScore>, index: number, templateData: IStackFrameTemplateData, height: number | undefined): void {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tdisposeTemplate(templateData: IStackFrameTemplateData): void {\n\t\ttemplateData.actionBar.dispose();\n\t}\n}\n\nclass ErrorsRenderer implements ICompressibleTreeRenderer<string, FuzzyScore, IErrorTemplateData> {\n\tstatic readonly ID = 'error';\n\n\tget templateId(): string {\n\t\treturn ErrorsRenderer.ID;\n\t}\n\n\tconstructor(\n\t\t@IHoverService private readonly hoverService: IHoverService\n\t) {\n\t}\n\n\trenderTemplate(container: HTMLElement): IErrorTemplateData {\n\t\tconst label = dom.append(container, $('.error'));\n\n\t\treturn { label, templateDisposable: new DisposableStore() };\n\t}\n\n\trenderElement(element: ITreeNode<string, FuzzyScore>, index: number, data: IErrorTemplateData): void {\n\t\tconst error = element.element;\n\t\tdata.label.textContent = error;\n\t\tdata.templateDisposable.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), data.label, error));\n\t}\n\n\trenderCompressedElements(node: ITreeNode<ICompressedTreeNode<string>, FuzzyScore>, index: number, templateData: IErrorTemplateData, height: number | undefined): void {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tdisposeTemplate(templateData: IErrorTemplateData): void {\n\t\t// noop\n\t}\n}\n\nclass LoadMoreRenderer implements ICompressibleTreeRenderer<ThreadAndSessionIds, FuzzyScore, ILabelTemplateData> {\n\tstatic readonly ID = 'loadMore';\n\tstatic readonly LABEL = localize('loadAllStackFrames', \"Load More Stack Frames\");\n\n\tconstructor() { }\n\n\tget templateId(): string {\n\t\treturn LoadMoreRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): ILabelTemplateData {\n\t\tconst label = dom.append(container, $('.load-all'));\n\t\tlabel.style.color = asCssVariable(textLinkForeground);\n\t\treturn { label };\n\t}\n\n\trenderElement(element: ITreeNode<ThreadAndSessionIds, FuzzyScore>, index: number, data: ILabelTemplateData): void {\n\t\tdata.label.textContent = LoadMoreRenderer.LABEL;\n\t}\n\n\trenderCompressedElements(node: ITreeNode<ICompressedTreeNode<ThreadAndSessionIds>, FuzzyScore>, index: number, templateData: ILabelTemplateData, height: number | undefined): void {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tdisposeTemplate(templateData: ILabelTemplateData): void {\n\t\t// noop\n\t}\n}\n\nclass ShowMoreRenderer implements ICompressibleTreeRenderer<IStackFrame[], FuzzyScore, ILabelTemplateData> {\n\tstatic readonly ID = 'showMore';\n\n\tconstructor() { }\n\n\n\tget templateId(): string {\n\t\treturn ShowMoreRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): ILabelTemplateData {\n\t\tconst label = dom.append(container, $('.show-more'));\n\t\tlabel.style.color = asCssVariable(textLinkForeground);\n\t\treturn { label };\n\t}\n\n\trenderElement(element: ITreeNode<IStackFrame[], FuzzyScore>, index: number, data: ILabelTemplateData): void {\n\t\tconst stackFrames = element.element;\n\t\tif (stackFrames.every(sf => !!(sf.source && sf.source.origin && sf.source.origin === stackFrames[0].source.origin))) {\n\t\t\tdata.label.textContent = localize('showMoreAndOrigin', \"Show {0} More: {1}\", stackFrames.length, stackFrames[0].source.origin);\n\t\t} else {\n\t\t\tdata.label.textContent = localize('showMoreStackFrames', \"Show {0} More Stack Frames\", stackFrames.length);\n\t\t}\n\t}\n\n\trenderCompressedElements(node: ITreeNode<ICompressedTreeNode<IStackFrame[]>, FuzzyScore>, index: number, templateData: ILabelTemplateData, height: number | undefined): void {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tdisposeTemplate(templateData: ILabelTemplateData): void {\n\t\t// noop\n\t}\n}\n\nclass CallStackDelegate implements IListVirtualDelegate<CallStackItem> {\n\n\tgetHeight(element: CallStackItem): number {\n\t\tif (element instanceof StackFrame && element.presentationHint === 'label') {\n\t\t\treturn 16;\n\t\t}\n\t\tif (element instanceof ThreadAndSessionIds || element instanceof Array) {\n\t\t\treturn 16;\n\t\t}\n\n\t\treturn 22;\n\t}\n\n\tgetTemplateId(element: CallStackItem): string {\n\t\tif (isDebugSession(element)) {\n\t\t\treturn SessionsRenderer.ID;\n\t\t}\n\t\tif (element instanceof Thread) {\n\t\t\treturn ThreadsRenderer.ID;\n\t\t}\n\t\tif (element instanceof StackFrame) {\n\t\t\treturn StackFramesRenderer.ID;\n\t\t}\n\t\tif (typeof element === 'string') {\n\t\t\treturn ErrorsRenderer.ID;\n\t\t}\n\t\tif (element instanceof ThreadAndSessionIds) {\n\t\t\treturn LoadMoreRenderer.ID;\n\t\t}\n\n\t\t// element instanceof Array\n\t\treturn ShowMoreRenderer.ID;\n\t}\n}\n\nfunction stoppedText(stoppedDetails: IRawStoppedDetails): string {\n\treturn stoppedDetails.text ?? stoppedDescription(stoppedDetails);\n}\n\nfunction stoppedDescription(stoppedDetails: IRawStoppedDetails): string {\n\treturn stoppedDetails.description ||\n\t\t(stoppedDetails.reason ? localize({ key: 'pausedOn', comment: ['indicates reason for program being paused'] }, \"Paused on {0}\", stoppedDetails.reason) : localize('paused', \"Paused\"));\n}\n\nfunction isDebugModel(obj: any): obj is IDebugModel {\n\treturn typeof obj.getSessions === 'function';\n}\n\nfunction isDebugSession(obj: any): obj is IDebugSession {\n\treturn obj && typeof obj.getAllThreads === 'function';\n}\n\nclass CallStackDataSource implements IAsyncDataSource<IDebugModel, CallStackItem> {\n\tdeemphasizedStackFramesToShow: IStackFrame[] = [];\n\n\tconstructor(private debugService: IDebugService) { }\n\n\thasChildren(element: IDebugModel | CallStackItem): boolean {\n\t\tif (isDebugSession(element)) {\n\t\t\tconst threads = element.getAllThreads();\n\t\t\treturn (threads.length > 1) || (threads.length === 1 && threads[0].stopped) || !!(this.debugService.getModel().getSessions().find(s => s.parentSession === element));\n\t\t}\n\n\t\treturn isDebugModel(element) || (element instanceof Thread && element.stopped);\n\t}\n\n\tasync getChildren(element: IDebugModel | CallStackItem): Promise<CallStackItem[]> {\n\t\tif (isDebugModel(element)) {\n\t\t\tconst sessions = element.getSessions();\n\t\t\tif (sessions.length === 0) {\n\t\t\t\treturn Promise.resolve([]);\n\t\t\t}\n\t\t\tif (sessions.length > 1 || this.debugService.getViewModel().isMultiSessionView()) {\n\t\t\t\treturn Promise.resolve(sessions.filter(s => !s.parentSession));\n\t\t\t}\n\n\t\t\tconst threads = sessions[0].getAllThreads();\n\t\t\t// Only show the threads in the call stack if there is more than 1 thread.\n\t\t\treturn threads.length === 1 ? this.getThreadChildren(<Thread>threads[0]) : Promise.resolve(threads);\n\t\t} else if (isDebugSession(element)) {\n\t\t\tconst childSessions = this.debugService.getModel().getSessions().filter(s => s.parentSession === element);\n\t\t\tconst threads: CallStackItem[] = element.getAllThreads();\n\t\t\tif (threads.length === 1) {\n\t\t\t\t// Do not show thread when there is only one to be compact.\n\t\t\t\tconst children = await this.getThreadChildren(<Thread>threads[0]);\n\t\t\t\treturn children.concat(childSessions);\n\t\t\t}\n\n\t\t\treturn Promise.resolve(threads.concat(childSessions));\n\t\t} else {\n\t\t\treturn this.getThreadChildren(<Thread>element);\n\t\t}\n\t}\n\n\tprivate getThreadChildren(thread: Thread): Promise<CallStackItem[]> {\n\t\treturn this.getThreadCallstack(thread).then(children => {\n\t\t\t// Check if some stack frames should be hidden under a parent element since they are deemphasized\n\t\t\tconst result: CallStackItem[] = [];\n\t\t\tchildren.forEach((child, index) => {\n\t\t\t\tif (child instanceof StackFrame && child.source && isFrameDeemphasized(child)) {\n\t\t\t\t\t// Check if the user clicked to show the deemphasized source\n\t\t\t\t\tif (this.deemphasizedStackFramesToShow.indexOf(child) === -1) {\n\t\t\t\t\t\tif (result.length) {\n\t\t\t\t\t\t\tconst last = result[result.length - 1];\n\t\t\t\t\t\t\tif (last instanceof Array) {\n\t\t\t\t\t\t\t\t// Collect all the stackframes that will be \"collapsed\"\n\t\t\t\t\t\t\t\tlast.push(child);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst nextChild = index < children.length - 1 ? children[index + 1] : undefined;\n\t\t\t\t\t\tif (nextChild instanceof StackFrame && nextChild.source && isFrameDeemphasized(nextChild)) {\n\t\t\t\t\t\t\t// Start collecting stackframes that will be \"collapsed\"\n\t\t\t\t\t\t\tresult.push([child]);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresult.push(child);\n\t\t\t});\n\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprivate async getThreadCallstack(thread: Thread): Promise<Array<IStackFrame | string | ThreadAndSessionIds>> {\n\t\tlet callStack: any[] = thread.getCallStack();\n\t\tif (!callStack || !callStack.length) {\n\t\t\tawait thread.fetchCallStack();\n\t\t\tcallStack = thread.getCallStack();\n\t\t}\n\n\t\tif (callStack.length === 1 && thread.session.capabilities.supportsDelayedStackTraceLoading && thread.stoppedDetails && thread.stoppedDetails.totalFrames && thread.stoppedDetails.totalFrames > 1) {\n\t\t\t// To reduce flashing of the call stack view simply append the stale call stack\n\t\t\t// once we have the correct data the tree will refresh and we will no longer display it.\n\t\t\tcallStack = callStack.concat(thread.getStaleCallStack().slice(1));\n\t\t}\n\n\t\tif (thread.stoppedDetails && thread.stoppedDetails.framesErrorMessage) {\n\t\t\tcallStack = callStack.concat([thread.stoppedDetails.framesErrorMessage]);\n\t\t}\n\t\tif (!thread.reachedEndOfCallStack && thread.stoppedDetails) {\n\t\t\tcallStack = callStack.concat([new ThreadAndSessionIds(thread.session.getId(), thread.threadId)]);\n\t\t}\n\n\t\treturn callStack;\n\t}\n}\n\nclass CallStackAccessibilityProvider implements IListAccessibilityProvider<CallStackItem> {\n\n\tgetWidgetAriaLabel(): string {\n\t\treturn localize({ comment: ['Debug is a noun in this context, not a verb.'], key: 'callStackAriaLabel' }, \"Debug Call Stack\");\n\t}\n\n\tgetWidgetRole(): AriaRole {\n\t\t// Use treegrid as a role since each element can have additional actions inside #146210\n\t\treturn 'treegrid';\n\t}\n\n\tgetRole(_element: CallStackItem): AriaRole | undefined {\n\t\treturn 'row';\n\t}\n\n\tgetAriaLabel(element: CallStackItem): string {\n\t\tif (element instanceof Thread) {\n\t\t\treturn localize({ key: 'threadAriaLabel', comment: ['Placeholders stand for the thread name and the thread state.For example \"Thread 1\" and \"Stopped'] }, \"Thread {0} {1}\", element.name, element.stateLabel);\n\t\t}\n\t\tif (element instanceof StackFrame) {\n\t\t\treturn localize('stackFrameAriaLabel', \"Stack Frame {0}, line {1}, {2}\", element.name, element.range.startLineNumber, getSpecificSourceName(element));\n\t\t}\n\t\tif (isDebugSession(element)) {\n\t\t\tconst thread = element.getAllThreads().find(t => t.stopped);\n\t\t\tconst state = thread ? thread.stateLabel : localize({ key: 'running', comment: ['indicates state'] }, \"Running\");\n\t\t\treturn localize({ key: 'sessionLabel', comment: ['Placeholders stand for the session name and the session state. For example \"Launch Program\" and \"Running\"'] }, \"Session {0} {1}\", element.getLabel(), state);\n\t\t}\n\t\tif (typeof element === 'string') {\n\t\t\treturn element;\n\t\t}\n\t\tif (element instanceof Array) {\n\t\t\treturn localize('showMoreStackFrames', \"Show {0} More Stack Frames\", element.length);\n\t\t}\n\n\t\t// element instanceof ThreadAndSessionIds\n\t\treturn LoadMoreRenderer.LABEL;\n\t}\n}\n\nclass CallStackCompressionDelegate implements ITreeCompressionDelegate<CallStackItem> {\n\n\tconstructor(private readonly debugService: IDebugService) { }\n\n\tisIncompressible(stat: CallStackItem): boolean {\n\t\tif (isDebugSession(stat)) {\n\t\t\tif (stat.compact) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst sessions = this.debugService.getModel().getSessions();\n\t\t\tif (sessions.some(s => s.parentSession === stat && s.compact)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\nregisterAction2(class Collapse extends ViewAction<CallStackView> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'callStack.collapse',\n\t\t\tviewId: CALLSTACK_VIEW_ID,\n\t\t\ttitle: localize('collapse', \"Collapse All\"),\n\t\t\tf1: false,\n\t\t\ticon: Codicon.collapseAll,\n\t\t\tprecondition: CONTEXT_DEBUG_STATE.isEqualTo(getStateLabel(State.Stopped)),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\torder: 10,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\twhen: ContextKeyExpr.equals('view', CALLSTACK_VIEW_ID)\n\t\t\t}\n\t\t});\n\t}\n\n\trunInView(_accessor: ServicesAccessor, view: CallStackView) {\n\t\tview.collapseAll();\n\t}\n});\n\nfunction registerCallStackInlineMenuItem(id: string, title: string | ICommandActionTitle, icon: Icon, when: ContextKeyExpression, order: number, precondition?: ContextKeyExpression): void {\n\tMenuRegistry.appendMenuItem(MenuId.DebugCallStackContext, {\n\t\tgroup: 'inline',\n\t\torder,\n\t\twhen,\n\t\tcommand: { id, title, icon, precondition }\n\t});\n}\n\nconst threadOrSessionWithOneThread = ContextKeyExpr.or(CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('thread'), ContextKeyExpr.and(CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('session'), CONTEXT_CALLSTACK_SESSION_HAS_ONE_THREAD))!;\nregisterCallStackInlineMenuItem(PAUSE_ID, PAUSE_LABEL, icons.debugPause, ContextKeyExpr.and(threadOrSessionWithOneThread, CONTEXT_CALLSTACK_ITEM_STOPPED.toNegated())!, 10, CONTEXT_FOCUSED_SESSION_IS_NO_DEBUG.toNegated());\nregisterCallStackInlineMenuItem(CONTINUE_ID, CONTINUE_LABEL, icons.debugContinue, ContextKeyExpr.and(threadOrSessionWithOneThread, CONTEXT_CALLSTACK_ITEM_STOPPED)!, 10);\nregisterCallStackInlineMenuItem(STEP_OVER_ID, STEP_OVER_LABEL, icons.debugStepOver, threadOrSessionWithOneThread, 20, CONTEXT_CALLSTACK_ITEM_STOPPED);\nregisterCallStackInlineMenuItem(STEP_INTO_ID, STEP_INTO_LABEL, icons.debugStepInto, threadOrSessionWithOneThread, 30, CONTEXT_CALLSTACK_ITEM_STOPPED);\nregisterCallStackInlineMenuItem(STEP_OUT_ID, STEP_OUT_LABEL, icons.debugStepOut, threadOrSessionWithOneThread, 40, CONTEXT_CALLSTACK_ITEM_STOPPED);\nregisterCallStackInlineMenuItem(RESTART_SESSION_ID, RESTART_LABEL, icons.debugRestart, CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('session'), 50);\nregisterCallStackInlineMenuItem(STOP_ID, STOP_LABEL, icons.debugStop, ContextKeyExpr.and(CONTEXT_CALLSTACK_SESSION_IS_ATTACH.toNegated(), CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('session'))!, 60);\nregisterCallStackInlineMenuItem(DISCONNECT_ID, DISCONNECT_LABEL, icons.debugDisconnect, ContextKeyExpr.and(CONTEXT_CALLSTACK_SESSION_IS_ATTACH, CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('session'))!, 60);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,YAAY,SAAS;AACrB,SAAS,iBAAiB;AAC1B,SAAS,gBAAgB;AACzB,SAAS,wBAAwB;AACjC,SAAS,4BAA4B;AACrC,SAAS,kCAAkC;AAC3C,SAAS,gCAAgC;AACzC,SAAS,2BAA2B;AACpC,SAAS,iCAAiC;AAC1C,SAAS,kBAAkB,uBAAuB,iBAAiB;AACnE,SAAS,QAAQ,eAAe;AAChC,SAAS,wBAAwB;AACjC,SAAS,eAAe;AACxB,SAAS,aAAa;AACtB,SAAS,eAAe,YAAY,cAAc;AAClD,SAAS,iBAAiB,SAAS,mBAAmB;AACtD,SAAS,aAAa;AACtB,SAAS,0BAA0B;AACnC,SAAS,gBAAgB;AACzB,SAAS,qBAAqB,YAAY;AAC1C,SAAS,iCAAiC,mCAAmC,yBAAyB,kCAAkC;AACxI,SAAS,cAAc,QAAQ,gBAAgB,cAAc,iBAAiB,yBAAyB;AACvG,SAAS,6BAA6B;AACtC,SAAS,gBAAgB,sBAAsB,0BAA0B;AACzE,SAAS,2BAA2B;AACpC,SAAS,uBAAuB,wBAAwB;AACxD,SAAS,0BAA0B;AACnC,SAAS,qBAAqB;AAC9B,SAAS,0CAA0C;AACnD,SAAS,4BAA4B;AACrC,SAAS,sBAAsB;AAC/B,SAAS,yBAAyB;AAClC,SAAS,eAAe,0BAA0B;AAClD,SAAS,qBAAqB;AAC9B,SAAS,iBAAiB;AAC1B,SAAS,YAAY,gBAAgB;AACrC,SAAS,2BAA2B;AACpC,SAAS,8BAA8B;AACvC,SAAS,sBAAsB;AAC/B,SAAS,aAAa,gBAAgB,eAAe,kBAAkB,UAAU,aAAa,eAAe,oBAAoB,cAAc,iBAAiB,aAAa,gBAAgB,cAAc,iBAAiB,SAAS,kBAAkB;AACvP,YAAY,WAAW;AACvB,SAAS,sCAAsC;AAC/C,SAAS,mBAAmB,gCAAgC,6BAA6B,0CAA0C,qCAAqC,qBAAqB,qCAAqC,sCAAsC,eAAe,aAAa,eAAe,eAAe,oBAAoB,qBAAqB,aAAa,SAAS,aAAa;AAC9Y,SAAS,YAAY,QAAQ,2BAA2B;AACxD,SAAS,uBAAuB;AAChC,SAAS,+BAA+B;AAExC,SAAS,qBAAqB;AAE9B,MAAM,IAAI,IAAI;AAId,SAAS,qBAAqB,SAAwB,SAAc;AACnE,UAAQ,YAAY,QAAQ,MAAM;AAClC,SAAO;AACR;AAHS;AAKT,SAAS,oBAAoB,SAAkB,SAAc;AAC5D,UAAQ,WAAW,QAAQ,MAAM;AACjC,uBAAqB,QAAQ,SAAS,OAAO;AAC7C,SAAO;AACR;AAJS;AAMT,SAAS,wBAAwB,SAAqB,SAAc;AACnE,UAAQ,UAAU,QAAQ,MAAM;AAChC,UAAQ,YAAY,QAAQ;AAC5B,UAAQ,gBAAgB,EAAE,OAAO,QAAQ,OAAO,QAAQ,QAAQ,OAAO,IAAI;AAC3E,sBAAoB,QAAQ,QAAQ,OAAO;AAC3C,SAAO;AACR;AANS;AAQF,SAAS,WAAW,SAAoC;AAC9D,MAAI,mBAAmB,YAAY;AAClC,WAAO,wBAAwB,SAAS,CAAC,CAAC;AAAA,EAC3C,WAAW,mBAAmB,QAAQ;AACrC,WAAO,oBAAoB,SAAS,CAAC,CAAC;AAAA,EACvC,WAAW,eAAe,OAAO,GAAG;AACnC,WAAO,qBAAqB,SAAS,CAAC,CAAC;AAAA,EACxC,OAAO;AACN,WAAO;AAAA,EACR;AACD;AAVgB;AAaT,SAAS,gCAAgC,SAAgD;AAC/F,MAAI,mBAAmB,YAAY;AAClC,QAAI,QAAQ,OAAO,UAAU;AAC5B,aAAO,QAAQ,OAAO,IAAI,QAAQ,QAAQ,OAAO,aAAa,QAAQ,OAAO;AAAA,IAC9E;AAEA,WAAO,QAAQ,OAAO,IAAI,SAAS;AAAA,EACpC;AACA,MAAI,mBAAmB,QAAQ;AAC9B,WAAO,QAAQ;AAAA,EAChB;AACA,MAAI,eAAe,OAAO,GAAG;AAC5B,WAAO,QAAQ,MAAM;AAAA,EACtB;AAEA,SAAO;AACR;AAhBgB;AAkBT,SAAS,sBAAsB,YAAiC;AAGtE,MAAI,YAAqB,WAAW,OAAQ,kBAAkB;AAC9D,cAAY,UAAU,SAAS,IAAI,YAAY,WAAW,OAAO,aAAa;AAC9E,QAAM,eAAe,UAAU,IAAI,QAAM,GAAG,MAAM,EAAE,OAAO,OAAK,MAAM,WAAW,MAAM;AACvF,MAAI,eAAe;AACnB,eAAa,QAAQ,OAAK;AACzB,QAAI,EAAE,SAAS,WAAW,OAAO,MAAM;AACtC,qBAAe,KAAK,IAAI,cAAc,mBAAmB,WAAW,OAAO,IAAI,MAAM,EAAE,IAAI,IAAI,CAAC;AAAA,IACjG;AAAA,EACD,CAAC;AACD,MAAI,iBAAiB,GAAG;AACvB,WAAO,WAAW,OAAO;AAAA,EAC1B;AAEA,QAAM,OAAO,KAAK,IAAI,GAAG,WAAW,OAAO,IAAI,KAAK,YAAY,MAAM,KAAK,WAAW,OAAO,IAAI,KAAK,SAAS,eAAe,CAAC,CAAC;AAChI,UAAQ,OAAO,IAAI,QAAQ,MAAM,WAAW,OAAO,IAAI,KAAK,UAAU,IAAI;AAC3E;AAlBgB;AAoBhB,eAAe,SAAS,SAAwB,MAAiG;AAChJ,MAAI,QAAQ,eAAe;AAC1B,UAAM,SAAS,QAAQ,eAAe,IAAI;AAAA,EAC3C;AACA,QAAM,KAAK,OAAO,OAAO;AAC1B;AALe;AAOR,IAAM,gBAAN,cAA4B,SAAS;AAAA,EAc3C,YACS,SACa,oBACW,cACZ,mBACG,sBACC,uBACD,sBACH,mBACJ,eACD,cACI,kBACJ,cACgB,aAC9B;AACD,UAAM,SAAS,mBAAmB,oBAAoB,sBAAsB,mBAAmB,uBAAuB,sBAAsB,eAAe,cAAc,kBAAkB,YAAY;AAd/L;AAEwB;AAUD;AAK/B,SAAK,6BAA6B,KAAK,UAAU,IAAI,iBAAiB,YAAY;AAGjF,YAAM,WAAW,KAAK,aAAa,SAAS,EAAE,YAAY;AAC1D,UAAI,SAAS,WAAW,GAAG;AAC1B,aAAK,qBAAqB,MAAM;AAAA,MACjC;AAEA,YAAM,SAAS,SAAS,WAAW,KAAK,SAAS,CAAC,EAAE,cAAc,EAAE,WAAW,IAAI,SAAS,CAAC,EAAE,cAAc,EAAE,CAAC,IAAI;AACpH,YAAM,iBAAiB,SAAS,WAAW,IAAI,SAAS,CAAC,EAAE,kBAAkB,IAAI;AACjF,UAAI,mBAAmB,UAAU,OAAO,eAAe,aAAa,WAAW;AAC9E,aAAK,kBAAkB,cAAc,mBAAmB,cAAc;AACtE,aAAK,uBAAuB,OAAO,YAAY,cAAc,CAAC;AAC9D,aAAK,kBAAkB,UAAU,OAAO,aAAa,eAAe,WAAW,WAAW;AAC1F,aAAK,aAAa,SAAS;AAAA,MAC5B,WAAW,SAAS,WAAW,KAAK,SAAS,CAAC,EAAE,UAAU,MAAM,SAAS;AACxE,aAAK,kBAAkB,cAAc,SAAS,EAAE,KAAK,WAAW,SAAS,CAAC,iBAAiB,EAAE,GAAG,SAAS;AACzG,aAAK,uBAAuB,OAAO,SAAS,CAAC,EAAE,SAAS,CAAC;AACzD,aAAK,kBAAkB,UAAU,OAAO,WAAW;AACnD,aAAK,aAAa,SAAS;AAAA,MAC5B,OAAO;AACN,aAAK,aAAa,SAAS;AAAA,MAC5B;AACA,WAAK,cAAc;AAEnB,WAAK,eAAe;AACpB,WAAK,WAAW,gCAAgC,CAAC;AACjD,YAAM,KAAK,KAAK,eAAe;AAC/B,UAAI;AACH,cAAM,WAAW,oBAAI,IAAmB;AACxC,iBAAS,QAAQ,OAAK;AAErB,cAAI,EAAE,iBAAiB,CAAC,KAAK,qBAAqB,IAAI,EAAE,aAAa,GAAG;AACvE,qBAAS,IAAI,EAAE,aAAa;AAAA,UAC7B;AAAA,QACD,CAAC;AACD,mBAAW,WAAW,UAAU;AAC/B,gBAAM,SAAS,SAAS,KAAK,IAAI;AACjC,eAAK,qBAAqB,IAAI,OAAO;AAAA,QACtC;AAAA,MACD,SAAS,GAAG;AAAA,MAEZ;AACA,UAAI,KAAK,sBAAsB;AAC9B,aAAK,uBAAuB;AAC5B,cAAM,KAAK,oBAAoB;AAAA,MAChC;AAAA,IACD,GAAG,EAAE,CAAC;AAAA,EACP;AAAA,EAvND,OAuI4C;AAAA;AAAA;AAAA,EACnC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,eAAe;AAAA,EACf,8BAA8B;AAAA,EAC9B,6BAA6B;AAAA,EAE7B;AAAA,EACA;AAAA,EACA,uBAAuB,oBAAI,IAAmB;AAAA,EAC9C,uBAAuB;AAAA,EAsEZ,kBAAkB,WAA8B;AAClE,UAAM,kBAAkB,WAAW,KAAK,QAAQ,KAAK;AAErD,SAAK,eAAe,IAAI,OAAO,WAAW,EAAE,+BAA+B,CAAC;AAC5E,SAAK,aAAa,SAAS;AAC3B,SAAK,oBAAoB,IAAI,OAAO,KAAK,cAAc,EAAE,YAAY,CAAC;AACtE,SAAK,yBAAyB,KAAK,UAAU,KAAK,aAAa,kBAAkB,wBAAwB,OAAO,GAAG,KAAK,cAAc,EAAE,CAAC;AAAA,EAC1I;AAAA,EAEmB,WAAW,WAA8B;AAC3D,UAAM,WAAW,SAAS;AAC1B,SAAK,QAAQ,UAAU,IAAI,YAAY;AACvC,cAAU,UAAU,IAAI,kBAAkB;AAC1C,UAAM,gBAAgB,eAAe,SAAS;AAE9C,SAAK,aAAa,IAAI,oBAAoB,KAAK,YAAY;AAC3D,SAAK,OAAmF,KAAK,qBAAqB,eAAe,oCAAoC,iBAAiB,eAAe,IAAI,kBAAkB,GAAG,IAAI,6BAA6B,KAAK,YAAY,GAAG;AAAA,MAClR,KAAK,qBAAqB,eAAe,gBAAgB;AAAA,MACzD,KAAK,qBAAqB,eAAe,eAAe;AAAA,MACxD,KAAK,qBAAqB,eAAe,mBAAmB;AAAA,MAC5D,KAAK,qBAAqB,eAAe,cAAc;AAAA,MACvD,IAAI,iBAAiB;AAAA,MACrB,IAAI,iBAAiB;AAAA,IACtB,GAAG,KAAK,YAAY;AAAA,MACnB,uBAAuB,IAAI,+BAA+B;AAAA,MAC1D,oBAAoB;AAAA,MACpB,0BAA0B;AAAA,MAC1B,kBAAkB;AAAA,QACjB,OAAO,wBAAC,YAA2B;AAClC,cAAI,OAAO,YAAY,UAAU;AAChC,mBAAO;AAAA,UACR;AACA,cAAI,mBAAmB,OAAO;AAC7B,mBAAO,YAAY,QAAQ,CAAC,EAAE,MAAM,CAAC;AAAA,UACtC;AAEA,iBAAO,QAAQ,MAAM;AAAA,QACtB,GATO;AAAA,MAUR;AAAA,MACA,iCAAiC;AAAA,QAChC,4BAA4B,wBAAC,MAAqB;AACjD,cAAI,eAAe,CAAC,GAAG;AACtB,mBAAO,EAAE,SAAS;AAAA,UACnB;AACA,cAAI,aAAa,QAAQ;AACxB,mBAAO,GAAG,EAAE,IAAI,IAAI,EAAE,UAAU;AAAA,UACjC;AACA,cAAI,aAAa,cAAc,OAAO,MAAM,UAAU;AACrD,mBAAO;AAAA,UACR;AACA,cAAI,aAAa,qBAAqB;AACrC,mBAAO,iBAAiB;AAAA,UACzB;AAEA,iBAAO,SAAS,wBAAwB,wBAAwB;AAAA,QACjE,GAf4B;AAAA,QAgB5B,0CAA0C,wBAAC,MAAuB;AACjE,gBAAM,YAAY,EAAE,CAAC;AACrB,cAAI,eAAe,SAAS,GAAG;AAC9B,mBAAO,UAAU,SAAS;AAAA,UAC3B;AACA,iBAAO;AAAA,QACR,GAN0C;AAAA,MAO3C;AAAA,MACA,0BAA0B;AAAA,MAC1B,gBAAgB,KAAK,uBAAuB,EAAE;AAAA,IAC/C,CAAC;AAED,SAAK,KAAK,SAAS,KAAK,aAAa,SAAS,CAAC;AAC/C,SAAK,UAAU,KAAK,IAAI;AACxB,SAAK,UAAU,KAAK,KAAK,UAAU,OAAM,MAAK;AAC7C,UAAI,KAAK,6BAA6B;AACrC;AAAA,MACD;AAEA,YAAM,kBAAkB,wBAAC,YAAqC,QAA6B,SAAwB,UAAmG,CAAC,MAAM;AAC5N,aAAK,6BAA6B;AAClC,YAAI;AACH,eAAK,aAAa,gBAAgB,YAAY,QAAQ,SAAS,EAAE,GAAG,SAAS,GAAG,EAAE,UAAU,KAAK,EAAE,CAAC;AAAA,QACrG,UAAE;AACD,eAAK,6BAA6B;AAAA,QACnC;AAAA,MACD,GAPwB;AASxB,YAAM,UAAU,EAAE;AAClB,UAAI,mBAAmB,YAAY;AAClC,cAAM,OAAO;AAAA,UACZ,eAAe,EAAE,cAAc;AAAA,UAC/B,YAAY,EAAE;AAAA,UACd,QAAQ,EAAE,cAAc;AAAA,QACzB;AACA,wBAAgB,SAAS,QAAQ,QAAQ,QAAQ,OAAO,SAAS,IAAI;AAAA,MACtE;AACA,UAAI,mBAAmB,QAAQ;AAC9B,wBAAgB,QAAW,SAAS,QAAQ,OAAO;AAAA,MACpD;AACA,UAAI,eAAe,OAAO,GAAG;AAC5B,wBAAgB,QAAW,QAAW,OAAO;AAAA,MAC9C;AACA,UAAI,mBAAmB,qBAAqB;AAC3C,cAAM,UAAU,KAAK,aAAa,SAAS,EAAE,WAAW,QAAQ,SAAS;AACzE,cAAM,SAAS,WAAW,QAAQ,UAAU,QAAQ,QAAQ;AAC5D,YAAI,QAAQ;AACX,gBAAM,cAAc,OAAO,gBAAgB;AAC3C,gBAAM,uBAAuB,OAAO,gBAAgB,WAAY,cAAc,OAAO,aAAa,EAAE,SAAU;AAE9G,gBAAe,OAAQ,eAAe,oBAAoB;AAC1D,gBAAM,KAAK,KAAK,eAAe;AAAA,QAChC;AAAA,MACD;AACA,UAAI,mBAAmB,OAAO;AAC7B,aAAK,WAAW,8BAA8B,KAAK,GAAG,OAAO;AAC7D,aAAK,KAAK,eAAe;AAAA,MAC1B;AAAA,IACD,CAAC,CAAC;AAEF,SAAK,UAAU,KAAK,aAAa,SAAS,EAAE,qBAAqB,MAAM;AACtE,UAAI,CAAC,KAAK,cAAc,GAAG;AAC1B,aAAK,eAAe;AACpB;AAAA,MACD;AAEA,UAAI,CAAC,KAAK,2BAA2B,YAAY,GAAG;AACnD,aAAK,2BAA2B,SAAS;AAAA,MAC1C;AAAA,IACD,CAAC,CAAC;AACF,UAAM,gBAAgB,MAAM,IAAS,KAAK,aAAa,aAAa,EAAE,sBAAsB,KAAK,aAAa,aAAa,EAAE,iBAAiB;AAC9I,SAAK,UAAU,cAAc,YAAY;AACxC,UAAI,KAAK,4BAA4B;AACpC;AAAA,MACD;AACA,UAAI,CAAC,KAAK,cAAc,GAAG;AAC1B,aAAK,eAAe;AACpB,aAAK,uBAAuB;AAC5B;AAAA,MACD;AACA,UAAI,KAAK,2BAA2B,YAAY,GAAG;AAClD,aAAK,uBAAuB;AAC5B;AAAA,MACD;AAEA,YAAM,KAAK,oBAAoB;AAAA,IAChC,CAAC,CAAC;AACF,SAAK,UAAU,KAAK,KAAK,cAAc,OAAK,KAAK,cAAc,CAAC,CAAC,CAAC;AAGlE,QAAI,KAAK,aAAa,UAAU,MAAM,SAAS;AAC9C,WAAK,2BAA2B,SAAS,CAAC;AAAA,IAC3C;AAEA,SAAK,UAAU,KAAK,0BAA0B,aAAW;AACxD,UAAI,WAAW,KAAK,cAAc;AACjC,aAAK,2BAA2B,SAAS;AAAA,MAC1C;AAAA,IACD,CAAC,CAAC;AAEF,SAAK,UAAU,KAAK,aAAa,gBAAgB,OAAK;AACrD,YAAM,mBAAkC,CAAC;AACzC,uBAAiB,KAAK,EAAE,gBAAgB,MAAM;AAG7C,YAAI,KAAK,KAAK,QAAQ,CAAC,GAAG;AACzB,eAAK,KAAK,SAAS,CAAC;AAAA,QACrB;AAAA,MACD,CAAC,CAAC;AACF,uBAAiB,KAAK,EAAE,gBAAgB,MAAM,QAAQ,gBAAgB,CAAC,CAAC;AACxE,UAAI,EAAE,eAAe;AAEpB,aAAK,qBAAqB,OAAO,EAAE,aAAa;AAAA,MACjD;AAAA,IACD,CAAC,CAAC;AAAA,EACH;AAAA,EAEmB,WAAW,QAAgB,OAAqB;AAClE,UAAM,WAAW,QAAQ,KAAK;AAC9B,SAAK,KAAK,OAAO,QAAQ,KAAK;AAAA,EAC/B;AAAA,EAES,QAAc;AACtB,UAAM,MAAM;AACZ,SAAK,KAAK,SAAS;AAAA,EACpB;AAAA,EAEA,cAAoB;AACnB,SAAK,KAAK,YAAY;AAAA,EACvB;AAAA,EAEA,MAAc,sBAAqC;AAClD,QAAI,CAAC,KAAK,QAAQ,CAAC,KAAK,KAAK,SAAS,GAAG;AAExC;AAAA,IACD;AAEA,UAAM,2BAA2B,wBAAC,YAAyC;AAC1E,WAAK,8BAA8B;AACnC,UAAI;AACH,aAAK,KAAK,aAAa,CAAC,OAAO,CAAC;AAGhC,YAAI,KAAK,KAAK,eAAe,OAAO,MAAM,MAAM;AAC/C,eAAK,KAAK,OAAO,SAAS,GAAG;AAAA,QAC9B,OAAO;AACN,eAAK,KAAK,OAAO,OAAO;AAAA,QACzB;AAAA,MACD,SAAS,GAAG;AAAA,MAAE,UACd;AACC,aAAK,8BAA8B;AAAA,MACpC;AAAA,IACD,GAfiC;AAiBjC,UAAM,SAAS,KAAK,aAAa,aAAa,EAAE;AAChD,UAAM,UAAU,KAAK,aAAa,aAAa,EAAE;AACjD,UAAM,aAAa,KAAK,aAAa,aAAa,EAAE;AACpD,QAAI,CAAC,QAAQ;AACZ,UAAI,CAAC,SAAS;AACb,aAAK,KAAK,aAAa,CAAC,CAAC;AAAA,MAC1B,OAAO;AACN,iCAAyB,OAAO;AAAA,MACjC;AAAA,IACD,OAAO;AAEN,UAAI;AACH,cAAM,SAAS,OAAO,SAAS,KAAK,IAAI;AAAA,MACzC,SAAS,GAAG;AAAA,MAAE;AACd,UAAI;AACH,cAAM,KAAK,KAAK,OAAO,MAAM;AAAA,MAC9B,SAAS,GAAG;AAAA,MAAE;AAEd,YAAM,WAAW,cAAc;AAC/B,UAAI,UAAU;AACb,iCAAyB,QAAQ;AAAA,MAClC;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,cAAc,GAA+C;AACpE,UAAM,UAAU,EAAE;AAClB,QAAI,UAA2B,CAAC;AAChC,QAAI,eAAe,OAAO,GAAG;AAC5B,gBAAU,yBAAyB,OAAO;AAAA,IAC3C,WAAW,mBAAmB,QAAQ;AACrC,gBAAU,wBAAwB,OAAO;AAAA,IAC1C,WAAW,mBAAmB,YAAY;AACzC,gBAAU,4BAA4B,OAAO;AAAA,IAC9C;AAEA,UAAM,UAAqB,CAAC;AAC5B,UAAM,YAAuB,CAAC;AAC9B,UAAM,SAAS,EAAE,SAAS,UAAU;AACpC,UAAM,oBAAoB,KAAK,kBAAkB,cAAc,OAAO;AACtE,UAAM,OAAO,KAAK,YAAY,eAAe,OAAO,uBAAuB,mBAAmB,EAAE,KAAK,gCAAgC,OAAO,GAAG,mBAAmB,KAAK,CAAC;AACxK,sCAAkC,MAAM,QAAQ,QAAQ;AACxD,SAAK,mBAAmB,gBAAgB;AAAA,MACvC,WAAW,6BAAM,EAAE,QAAR;AAAA,MACX,YAAY,6BAAM,OAAO,WAAb;AAAA,MACZ,mBAAmB,6BAAM,WAAW,OAAO,GAAxB;AAAA,IACpB,CAAC;AAAA,EACF;AACD;AApVa,gBAAN;AAAA,EAgBJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GA3BU;AA6Xb,SAAS,yBAAyB,SAAyC;AAC1E,SAAO;AAAA,IACN,CAAC,4BAA4B,KAAK,SAAS;AAAA,IAC3C,CAAC,oCAAoC,KAAK,gBAAgB,OAAO,CAAC;AAAA,IAClE,CAAC,+BAA+B,KAAK,QAAQ,UAAU,MAAM,OAAO;AAAA,IACpE,CAAC,yCAAyC,KAAK,QAAQ,cAAc,EAAE,WAAW,CAAC;AAAA,EACpF;AACD;AAPS;AAST,IAAM,mBAAN,MAA6G;AAAA,EAG5G,YACyC,sBACH,mBACL,cACD,aAC9B;AAJuC;AACH;AACL;AACD;AAAA,EAC5B;AAAA,EArhBL,OA6gB6G;AAAA;AAAA;AAAA,EAC5G,OAAgB,KAAK;AAAA,EASrB,IAAI,aAAqB;AACxB,WAAO,iBAAiB;AAAA,EACzB;AAAA,EAEA,eAAe,WAA8C;AAC5D,UAAM,UAAU,IAAI,OAAO,WAAW,EAAE,UAAU,CAAC;AACnD,QAAI,OAAO,SAAS,EAAE,UAAU,cAAc,MAAM,oBAAoB,CAAC,CAAC;AAC1E,UAAM,OAAO,IAAI,OAAO,SAAS,EAAE,OAAO,CAAC;AAC3C,UAAM,aAAa,IAAI,OAAO,SAAS,EAAE,0CAA0C,CAAC;AACpF,UAAM,qBAAqB,IAAI,gBAAgB;AAC/C,UAAM,QAAQ,mBAAmB,IAAI,IAAI,iBAAiB,IAAI,CAAC;AAE/D,UAAM,gCAAgC,mBAAmB,IAAI,IAAI,gBAAgB,CAAC;AAClF,UAAM,YAAY,mBAAmB,IAAI,IAAI,UAAU,SAAS;AAAA,MAC/D,wBAAwB,wBAAC,QAAQ,YAAY;AAC5C,aAAK,OAAO,OAAO,WAAW,OAAO,OAAO,kBAAkB,kBAAkB,gBAAgB;AAC/F,wCAA8B,MAAM;AACpC,gBAAM,OAAO,KAAK,qBAAqB,eAAe,cAAY,+BAA+B,QAA0B,+BAA+B,UAAU,EAAE,GAAG,SAAS,aAAa,MAAM,CAAC,CAAC;AACvM,cAAI,MAAM;AACT,mBAAO;AAAA,UACR;AAAA,QACD;AAEA,YAAI,kBAAkB,gBAAgB;AACrC,iBAAO,KAAK,qBAAqB,eAAe,yBAAyB,QAAQ,EAAE,eAAe,QAAQ,cAAc,CAAC;AAAA,QAC1H,WAAW,kBAAkB,mBAAmB;AAC/C,iBAAO,KAAK,qBAAqB,eAAe,4BAA4B,QAAQ,EAAE,eAAe,QAAQ,cAAc,CAAC;AAAA,QAC7H;AAEA,eAAO;AAAA,MACR,GAhBwB;AAAA,IAiBzB,CAAC,CAAC;AAEF,UAAM,oBAAoB,mBAAmB,IAAI,IAAI,gBAAgB,CAAC;AACtE,WAAO,EAAE,SAAS,MAAM,YAAY,OAAO,WAAW,mBAAmB,mBAAmB;AAAA,EAC7F;AAAA,EAEA,cAAc,SAA+C,GAAW,MAAkC;AACzG,SAAK,gBAAgB,QAAQ,SAAS,cAAc,QAAQ,UAAU,GAAG,IAAI;AAAA,EAC9E;AAAA,EAEA,yBAAyB,MAAiE,QAAgB,cAA0C;AACnJ,UAAM,cAAc,KAAK,QAAQ,SAAS,KAAK,QAAQ,SAAS,SAAS,CAAC;AAC1E,UAAM,UAAU,cAAc,KAAK,UAAU;AAC7C,SAAK,gBAAgB,aAAa,SAAS,YAAY;AAAA,EACxD;AAAA,EAEQ,gBAAgB,SAAwB,SAAmB,MAAkC;AACpG,UAAM,eAAe,KAAK,kBAAkB,IAAI,KAAK,aAAa,kBAAkB,wBAAwB,OAAO,GAAG,KAAK,SAAS,SAAS,EAAE,KAAK,WAAW,SAAS,CAAC,mBAAmB,EAAE,GAAG,SAAS,CAAC,CAAC;AAC5M,SAAK,MAAM,IAAI,QAAQ,SAAS,GAAG,OAAO;AAC1C,UAAM,iBAAiB,QAAQ,kBAAkB;AACjD,UAAM,SAAS,QAAQ,cAAc,EAAE,KAAK,OAAK,EAAE,OAAO;AAE1D,UAAM,oBAAoB,KAAK,kBAAkB,cAAc,yBAAyB,OAAO,CAAC;AAChG,UAAM,OAAO,KAAK,kBAAkB,IAAI,KAAK,YAAY,WAAW,OAAO,uBAAuB,iBAAiB,CAAC;AAEpH,UAAM,iBAAiB,6BAAM;AAC5B,WAAK,UAAU,MAAM;AAErB,YAAM,UAAqB,CAAC;AAC5B,YAAM,YAAuB,CAAC;AAC9B,YAAM,SAAS,EAAE,SAAS,UAAU;AAEpC,sCAAgC,MAAM,EAAE,KAAK,gCAAgC,OAAO,GAAG,mBAAmB,KAAK,GAAG,QAAQ,QAAQ;AAClI,WAAK,UAAU,KAAK,SAAS,EAAE,MAAM,MAAM,OAAO,MAAM,CAAC;AAGzD,WAAK,UAAU,UAAU,WAAW,OAAO;AAAA,IAC5C,GAZuB;AAavB,SAAK,kBAAkB,IAAI,KAAK,YAAY,MAAM,eAAe,CAAC,CAAC;AACnE,mBAAe;AAEf,SAAK,WAAW,MAAM,UAAU;AAEhC,QAAI,gBAAgB;AACnB,WAAK,WAAW,cAAc,mBAAmB,cAAc;AAC/D,mBAAa,OAAO,GAAG,QAAQ,SAAS,CAAC,KAAK,YAAY,cAAc,CAAC,EAAE;AAC3E,WAAK,WAAW,UAAU,OAAO,aAAa,eAAe,WAAW,WAAW;AAAA,IACpF,WAAW,UAAU,OAAO,gBAAgB;AAC3C,WAAK,WAAW,cAAc,mBAAmB,OAAO,cAAc;AACtE,mBAAa,OAAO,GAAG,QAAQ,SAAS,CAAC,KAAK,YAAY,OAAO,cAAc,CAAC,EAAE;AAClF,WAAK,WAAW,UAAU,OAAO,aAAa,OAAO,eAAe,WAAW,WAAW;AAAA,IAC3F,OAAO;AACN,WAAK,WAAW,cAAc,SAAS,EAAE,KAAK,WAAW,SAAS,CAAC,iBAAiB,EAAE,GAAG,SAAS;AAClG,WAAK,WAAW,UAAU,OAAO,WAAW;AAAA,IAC7C;AAAA,EACD;AAAA,EAEA,gBAAgB,cAA0C;AACzD,iBAAa,mBAAmB,QAAQ;AAAA,EACzC;AAAA,EAEA,eAAe,UAAgD,GAAW,cAA0C;AACnH,iBAAa,kBAAkB,MAAM;AAAA,EACtC;AAAA,EAEA,0BAA0B,MAAiE,OAAe,cAAoC,QAAkC;AAC/K,iBAAa,kBAAkB,MAAM;AAAA,EACtC;AACD;AA7GM,mBAAN;AAAA,EAIG;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAPG;AA+GN,SAAS,wBAAwB,QAAkC;AAClE,SAAO;AAAA,IACN,CAAC,4BAA4B,KAAK,QAAQ;AAAA,IAC1C,CAAC,+BAA+B,KAAK,OAAO,OAAO;AAAA,EACpD;AACD;AALS;AAOT,IAAM,kBAAN,MAAqG;AAAA,EAGpG,YACsC,mBACL,cACD,aAC9B;AAHoC;AACL;AACD;AAAA,EAC5B;AAAA,EA1oBL,OAmoBqG;AAAA;AAAA;AAAA,EACpG,OAAgB,KAAK;AAAA,EAQrB,IAAI,aAAqB;AACxB,WAAO,gBAAgB;AAAA,EACxB;AAAA,EAEA,eAAe,WAA6C;AAC3D,UAAM,SAAS,IAAI,OAAO,WAAW,EAAE,SAAS,CAAC;AACjD,UAAM,OAAO,IAAI,OAAO,QAAQ,EAAE,OAAO,CAAC;AAC1C,UAAM,aAAa,IAAI,OAAO,QAAQ,EAAE,0CAA0C,CAAC;AAEnF,UAAM,qBAAqB,IAAI,gBAAgB;AAC/C,UAAM,QAAQ,mBAAmB,IAAI,IAAI,iBAAiB,IAAI,CAAC;AAE/D,UAAM,YAAY,mBAAmB,IAAI,IAAI,UAAU,MAAM,CAAC;AAC9D,UAAM,oBAAoB,mBAAmB,IAAI,IAAI,gBAAgB,CAAC;AAEtE,WAAO,EAAE,QAAQ,MAAM,YAAY,OAAO,WAAW,mBAAmB,mBAAmB;AAAA,EAC5F;AAAA,EAEA,cAAc,SAAyC,QAAgB,MAAiC;AACvG,UAAM,SAAS,QAAQ;AACvB,SAAK,kBAAkB,IAAI,KAAK,aAAa,kBAAkB,wBAAwB,OAAO,GAAG,KAAK,QAAQ,OAAO,IAAI,CAAC;AAC1H,SAAK,MAAM,IAAI,OAAO,MAAM,cAAc,QAAQ,UAAU,CAAC;AAC7D,SAAK,WAAW,cAAc,OAAO;AACrC,SAAK,WAAW,UAAU,OAAO,aAAa,OAAO,gBAAgB,WAAW,WAAW;AAE3F,UAAM,oBAAoB,KAAK,kBAAkB,cAAc,wBAAwB,MAAM,CAAC;AAC9F,UAAM,OAAO,KAAK,kBAAkB,IAAI,KAAK,YAAY,WAAW,OAAO,uBAAuB,iBAAiB,CAAC;AAEpH,UAAM,iBAAiB,6BAAM;AAC5B,WAAK,UAAU,MAAM;AAErB,YAAM,UAAqB,CAAC;AAC5B,YAAM,YAAuB,CAAC;AAC9B,YAAM,SAAS,EAAE,SAAS,UAAU;AAEpC,sCAAgC,MAAM,EAAE,KAAK,gCAAgC,MAAM,GAAG,mBAAmB,KAAK,GAAG,QAAQ,QAAQ;AACjI,WAAK,UAAU,KAAK,SAAS,EAAE,MAAM,MAAM,OAAO,MAAM,CAAC;AAGzD,WAAK,UAAU,UAAU,WAAW,MAAM;AAAA,IAC3C,GAZuB;AAavB,SAAK,kBAAkB,IAAI,KAAK,YAAY,MAAM,eAAe,CAAC,CAAC;AACnE,mBAAe;AAAA,EAChB;AAAA,EAEA,yBAAyB,OAA4D,QAAgB,eAAoC,SAAmC;AAC3K,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC1C;AAAA,EAEA,eAAe,UAAe,QAAgB,cAAyC;AACtF,iBAAa,kBAAkB,MAAM;AAAA,EACtC;AAAA,EAEA,gBAAgB,cAAyC;AACxD,iBAAa,mBAAmB,QAAQ;AAAA,EACzC;AACD;AAjEM,kBAAN;AAAA,EAIG;AAAA,EACA;AAAA,EACA;AAAA,GANG;AAmEN,SAAS,4BAA4B,YAA0C;AAC9E,SAAO;AAAA,IACN,CAAC,4BAA4B,KAAK,YAAY;AAAA,IAC9C,CAAC,qCAAqC,KAAK,WAAW,UAAU;AAAA,EACjE;AACD;AALS;AAOT,IAAM,sBAAN,MAAiH;AAAA,EAGhH,YACiC,cACA,cACO,qBACtC;AAH+B;AACA;AACO;AAAA,EACpC;AAAA,EAptBL,OA6sBiH;AAAA;AAAA;AAAA,EAChH,OAAgB,KAAK;AAAA,EAQrB,IAAI,aAAqB;AACxB,WAAO,oBAAoB;AAAA,EAC5B;AAAA,EAEA,eAAe,WAAiD;AAC/D,UAAM,aAAa,IAAI,OAAO,WAAW,EAAE,cAAc,CAAC;AAC1D,UAAM,WAAW,IAAI,OAAO,YAAY,EAAE,uBAAuB,CAAC;AAClE,UAAM,OAAO,IAAI,OAAO,YAAY,EAAE,OAAO,CAAC;AAC9C,UAAM,WAAW,IAAI,OAAO,MAAM,EAAE,gBAAgB,CAAC;AACrD,UAAM,UAAU,IAAI,OAAO,MAAM,EAAE,0BAA0B,CAAC;AAC9D,UAAM,aAAa,IAAI,OAAO,SAAS,EAAE,qCAAqC,CAAC;AAE/E,UAAM,qBAAqB,IAAI,gBAAgB;AAC/C,UAAM,QAAQ,mBAAmB,IAAI,IAAI,iBAAiB,QAAQ,CAAC;AAEnE,UAAM,YAAY,mBAAmB,IAAI,IAAI,UAAU,UAAU,CAAC;AAElE,WAAO,EAAE,MAAM,UAAU,OAAO,YAAY,YAAY,WAAW,mBAAmB;AAAA,EACvF;AAAA,EAEA,cAAc,SAA6C,OAAe,MAAqC;AAC9G,UAAM,aAAa,QAAQ;AAC3B,SAAK,WAAW,UAAU,OAAO,YAAY,CAAC,WAAW,UAAU,CAAC,WAAW,OAAO,aAAa,oBAAoB,UAAU,CAAC;AAClI,SAAK,WAAW,UAAU,OAAO,SAAS,WAAW,qBAAqB,OAAO;AACjF,UAAM,aAAa,CAAC,CAAC,WAAW,OAAO,QAAQ,aAAa,wBAAwB,WAAW,qBAAqB,WAAW,WAAW,qBAAqB,YAAY,WAAW;AACtL,SAAK,WAAW,UAAU,OAAO,eAAe,UAAU;AAE1D,QAAI,QAAQ,WAAW,OAAO,WAAW,WAAW,OAAO,IAAI,OAAO,KAAK,aAAa,YAAY,WAAW,OAAO,GAAG;AACzH,QAAI,WAAW,OAAO,IAAI,QAAQ;AACjC,eAAS;AAAA,EAAK,WAAW,OAAO,IAAI,MAAM;AAAA,IAC3C;AACA,SAAK,mBAAmB,IAAI,KAAK,aAAa,kBAAkB,wBAAwB,OAAO,GAAG,KAAK,MAAM,KAAK,CAAC;AAEnH,SAAK,MAAM,IAAI,WAAW,MAAM,cAAc,QAAQ,UAAU,GAAG,WAAW,IAAI;AAClF,SAAK,SAAS,cAAc,sBAAsB,UAAU;AAC5D,QAAI,WAAW,MAAM,oBAAoB,QAAW;AACnD,WAAK,WAAW,cAAc,GAAG,WAAW,MAAM,eAAe;AACjE,UAAI,WAAW,MAAM,aAAa;AACjC,aAAK,WAAW,eAAe,IAAI,WAAW,MAAM,WAAW;AAAA,MAChE;AACA,WAAK,WAAW,UAAU,OAAO,aAAa;AAAA,IAC/C,OAAO;AACN,WAAK,WAAW,UAAU,IAAI,aAAa;AAAA,IAC5C;AAEA,SAAK,UAAU,MAAM;AACrB,QAAI,YAAY;AACf,YAAM,SAAS,IAAI,OAAO,gCAAgC,SAAS,gBAAgB,eAAe,GAAG,UAAU,YAAY,MAAM,iBAAiB,GAAG,MAAM,YAAY;AACtK,YAAI;AACH,gBAAM,WAAW,QAAQ;AAAA,QAC1B,SAAS,GAAG;AACX,eAAK,oBAAoB,MAAM,CAAC;AAAA,QACjC;AAAA,MACD,CAAC;AACD,WAAK,UAAU,KAAK,QAAQ,EAAE,MAAM,MAAM,OAAO,MAAM,CAAC;AAAA,IACzD;AAAA,EACD;AAAA,EAEA,yBAAyB,MAA+D,OAAe,cAAuC,QAAkC;AAC/K,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC1C;AAAA,EAEA,gBAAgB,cAA6C;AAC5D,iBAAa,UAAU,QAAQ;AAAA,EAChC;AACD;AA1EM,sBAAN;AAAA,EAIG;AAAA,EACA;AAAA,EACA;AAAA,GANG;AA4EN,IAAM,iBAAN,MAAkG;AAAA,EAOjG,YACiC,cAC/B;AAD+B;AAAA,EAEjC;AAAA,EAnyBD,OAyxBkG;AAAA;AAAA;AAAA,EACjG,OAAgB,KAAK;AAAA,EAErB,IAAI,aAAqB;AACxB,WAAO,eAAe;AAAA,EACvB;AAAA,EAOA,eAAe,WAA4C;AAC1D,UAAM,QAAQ,IAAI,OAAO,WAAW,EAAE,QAAQ,CAAC;AAE/C,WAAO,EAAE,OAAO,oBAAoB,IAAI,gBAAgB,EAAE;AAAA,EAC3D;AAAA,EAEA,cAAc,SAAwC,OAAe,MAAgC;AACpG,UAAM,QAAQ,QAAQ;AACtB,SAAK,MAAM,cAAc;AACzB,SAAK,mBAAmB,IAAI,KAAK,aAAa,kBAAkB,wBAAwB,OAAO,GAAG,KAAK,OAAO,KAAK,CAAC;AAAA,EACrH;AAAA,EAEA,yBAAyB,MAA0D,OAAe,cAAkC,QAAkC;AACrK,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC1C;AAAA,EAEA,gBAAgB,cAAwC;AAAA,EAExD;AACD;AA/BM,iBAAN;AAAA,EAQG;AAAA,GARG;AAiCN,MAAM,iBAA2G;AAAA,EA1zBjH,OA0zBiH;AAAA;AAAA;AAAA,EAChH,OAAgB,KAAK;AAAA,EACrB,OAAgB,QAAQ,SAAS,sBAAsB,wBAAwB;AAAA,EAE/E,cAAc;AAAA,EAAE;AAAA,EAEhB,IAAI,aAAqB;AACxB,WAAO,iBAAiB;AAAA,EACzB;AAAA,EAEA,eAAe,WAA4C;AAC1D,UAAM,QAAQ,IAAI,OAAO,WAAW,EAAE,WAAW,CAAC;AAClD,UAAM,MAAM,QAAQ,cAAc,kBAAkB;AACpD,WAAO,EAAE,MAAM;AAAA,EAChB;AAAA,EAEA,cAAc,SAAqD,OAAe,MAAgC;AACjH,SAAK,MAAM,cAAc,iBAAiB;AAAA,EAC3C;AAAA,EAEA,yBAAyB,MAAuE,OAAe,cAAkC,QAAkC;AAClL,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC1C;AAAA,EAEA,gBAAgB,cAAwC;AAAA,EAExD;AACD;AAEA,MAAM,iBAAqG;AAAA,EAv1B3G,OAu1B2G;AAAA;AAAA;AAAA,EAC1G,OAAgB,KAAK;AAAA,EAErB,cAAc;AAAA,EAAE;AAAA,EAGhB,IAAI,aAAqB;AACxB,WAAO,iBAAiB;AAAA,EACzB;AAAA,EAEA,eAAe,WAA4C;AAC1D,UAAM,QAAQ,IAAI,OAAO,WAAW,EAAE,YAAY,CAAC;AACnD,UAAM,MAAM,QAAQ,cAAc,kBAAkB;AACpD,WAAO,EAAE,MAAM;AAAA,EAChB;AAAA,EAEA,cAAc,SAA+C,OAAe,MAAgC;AAC3G,UAAM,cAAc,QAAQ;AAC5B,QAAI,YAAY,MAAM,QAAM,CAAC,EAAE,GAAG,UAAU,GAAG,OAAO,UAAU,GAAG,OAAO,WAAW,YAAY,CAAC,EAAE,OAAO,OAAO,GAAG;AACpH,WAAK,MAAM,cAAc,SAAS,qBAAqB,sBAAsB,YAAY,QAAQ,YAAY,CAAC,EAAE,OAAO,MAAM;AAAA,IAC9H,OAAO;AACN,WAAK,MAAM,cAAc,SAAS,uBAAuB,8BAA8B,YAAY,MAAM;AAAA,IAC1G;AAAA,EACD;AAAA,EAEA,yBAAyB,MAAiE,OAAe,cAAkC,QAAkC;AAC5K,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC1C;AAAA,EAEA,gBAAgB,cAAwC;AAAA,EAExD;AACD;AAEA,MAAM,kBAAiE;AAAA,EAz3BvE,OAy3BuE;AAAA;AAAA;AAAA,EAEtE,UAAU,SAAgC;AACzC,QAAI,mBAAmB,cAAc,QAAQ,qBAAqB,SAAS;AAC1E,aAAO;AAAA,IACR;AACA,QAAI,mBAAmB,uBAAuB,mBAAmB,OAAO;AACvE,aAAO;AAAA,IACR;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,cAAc,SAAgC;AAC7C,QAAI,eAAe,OAAO,GAAG;AAC5B,aAAO,iBAAiB;AAAA,IACzB;AACA,QAAI,mBAAmB,QAAQ;AAC9B,aAAO,gBAAgB;AAAA,IACxB;AACA,QAAI,mBAAmB,YAAY;AAClC,aAAO,oBAAoB;AAAA,IAC5B;AACA,QAAI,OAAO,YAAY,UAAU;AAChC,aAAO,eAAe;AAAA,IACvB;AACA,QAAI,mBAAmB,qBAAqB;AAC3C,aAAO,iBAAiB;AAAA,IACzB;AAGA,WAAO,iBAAiB;AAAA,EACzB;AACD;AAEA,SAAS,YAAY,gBAA4C;AAChE,SAAO,eAAe,QAAQ,mBAAmB,cAAc;AAChE;AAFS;AAIT,SAAS,mBAAmB,gBAA4C;AACvE,SAAO,eAAe,gBACpB,eAAe,SAAS,SAAS,EAAE,KAAK,YAAY,SAAS,CAAC,2CAA2C,EAAE,GAAG,iBAAiB,eAAe,MAAM,IAAI,SAAS,UAAU,QAAQ;AACtL;AAHS;AAKT,SAAS,aAAa,KAA8B;AACnD,SAAO,OAAO,IAAI,gBAAgB;AACnC;AAFS;AAIT,SAAS,eAAe,KAAgC;AACvD,SAAO,OAAO,OAAO,IAAI,kBAAkB;AAC5C;AAFS;AAIT,MAAM,oBAA4E;AAAA,EAGjF,YAAoB,cAA6B;AAA7B;AAAA,EAA+B;AAAA,EAh7BpD,OA66BkF;AAAA;AAAA;AAAA,EACjF,gCAA+C,CAAC;AAAA,EAIhD,YAAY,SAA+C;AAC1D,QAAI,eAAe,OAAO,GAAG;AAC5B,YAAM,UAAU,QAAQ,cAAc;AACtC,aAAQ,QAAQ,SAAS,KAAO,QAAQ,WAAW,KAAK,QAAQ,CAAC,EAAE,WAAY,CAAC,CAAE,KAAK,aAAa,SAAS,EAAE,YAAY,EAAE,KAAK,OAAK,EAAE,kBAAkB,OAAO;AAAA,IACnK;AAEA,WAAO,aAAa,OAAO,KAAM,mBAAmB,UAAU,QAAQ;AAAA,EACvE;AAAA,EAEA,MAAM,YAAY,SAAgE;AACjF,QAAI,aAAa,OAAO,GAAG;AAC1B,YAAM,WAAW,QAAQ,YAAY;AACrC,UAAI,SAAS,WAAW,GAAG;AAC1B,eAAO,QAAQ,QAAQ,CAAC,CAAC;AAAA,MAC1B;AACA,UAAI,SAAS,SAAS,KAAK,KAAK,aAAa,aAAa,EAAE,mBAAmB,GAAG;AACjF,eAAO,QAAQ,QAAQ,SAAS,OAAO,OAAK,CAAC,EAAE,aAAa,CAAC;AAAA,MAC9D;AAEA,YAAM,UAAU,SAAS,CAAC,EAAE,cAAc;AAE1C,aAAO,QAAQ,WAAW,IAAI,KAAK,kBAA0B,QAAQ,CAAC,CAAC,IAAI,QAAQ,QAAQ,OAAO;AAAA,IACnG,WAAW,eAAe,OAAO,GAAG;AACnC,YAAM,gBAAgB,KAAK,aAAa,SAAS,EAAE,YAAY,EAAE,OAAO,OAAK,EAAE,kBAAkB,OAAO;AACxG,YAAM,UAA2B,QAAQ,cAAc;AACvD,UAAI,QAAQ,WAAW,GAAG;AAEzB,cAAM,WAAW,MAAM,KAAK,kBAA0B,QAAQ,CAAC,CAAC;AAChE,eAAO,SAAS,OAAO,aAAa;AAAA,MACrC;AAEA,aAAO,QAAQ,QAAQ,QAAQ,OAAO,aAAa,CAAC;AAAA,IACrD,OAAO;AACN,aAAO,KAAK,kBAA0B,OAAO;AAAA,IAC9C;AAAA,EACD;AAAA,EAEQ,kBAAkB,QAA0C;AACnE,WAAO,KAAK,mBAAmB,MAAM,EAAE,KAAK,cAAY;AAEvD,YAAM,SAA0B,CAAC;AACjC,eAAS,QAAQ,CAAC,OAAO,UAAU;AAClC,YAAI,iBAAiB,cAAc,MAAM,UAAU,oBAAoB,KAAK,GAAG;AAE9E,cAAI,KAAK,8BAA8B,QAAQ,KAAK,MAAM,IAAI;AAC7D,gBAAI,OAAO,QAAQ;AAClB,oBAAM,OAAO,OAAO,OAAO,SAAS,CAAC;AACrC,kBAAI,gBAAgB,OAAO;AAE1B,qBAAK,KAAK,KAAK;AACf;AAAA,cACD;AAAA,YACD;AAEA,kBAAM,YAAY,QAAQ,SAAS,SAAS,IAAI,SAAS,QAAQ,CAAC,IAAI;AACtE,gBAAI,qBAAqB,cAAc,UAAU,UAAU,oBAAoB,SAAS,GAAG;AAE1F,qBAAO,KAAK,CAAC,KAAK,CAAC;AACnB;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAEA,eAAO,KAAK,KAAK;AAAA,MAClB,CAAC;AAED,aAAO;AAAA,IACR,CAAC;AAAA,EACF;AAAA,EAEA,MAAc,mBAAmB,QAA4E;AAC5G,QAAI,YAAmB,OAAO,aAAa;AAC3C,QAAI,CAAC,aAAa,CAAC,UAAU,QAAQ;AACpC,YAAM,OAAO,eAAe;AAC5B,kBAAY,OAAO,aAAa;AAAA,IACjC;AAEA,QAAI,UAAU,WAAW,KAAK,OAAO,QAAQ,aAAa,oCAAoC,OAAO,kBAAkB,OAAO,eAAe,eAAe,OAAO,eAAe,cAAc,GAAG;AAGlM,kBAAY,UAAU,OAAO,OAAO,kBAAkB,EAAE,MAAM,CAAC,CAAC;AAAA,IACjE;AAEA,QAAI,OAAO,kBAAkB,OAAO,eAAe,oBAAoB;AACtE,kBAAY,UAAU,OAAO,CAAC,OAAO,eAAe,kBAAkB,CAAC;AAAA,IACxE;AACA,QAAI,CAAC,OAAO,yBAAyB,OAAO,gBAAgB;AAC3D,kBAAY,UAAU,OAAO,CAAC,IAAI,oBAAoB,OAAO,QAAQ,MAAM,GAAG,OAAO,QAAQ,CAAC,CAAC;AAAA,IAChG;AAEA,WAAO;AAAA,EACR;AACD;AAEA,MAAM,+BAAoF;AAAA,EAhhC1F,OAghC0F;AAAA;AAAA;AAAA,EAEzF,qBAA6B;AAC5B,WAAO,SAAS,EAAE,SAAS,CAAC,8CAA8C,GAAG,KAAK,qBAAqB,GAAG,kBAAkB;AAAA,EAC7H;AAAA,EAEA,gBAA0B;AAEzB,WAAO;AAAA,EACR;AAAA,EAEA,QAAQ,UAA+C;AACtD,WAAO;AAAA,EACR;AAAA,EAEA,aAAa,SAAgC;AAC5C,QAAI,mBAAmB,QAAQ;AAC9B,aAAO,SAAS,EAAE,KAAK,mBAAmB,SAAS,CAAC,iGAAiG,EAAE,GAAG,kBAAkB,QAAQ,MAAM,QAAQ,UAAU;AAAA,IAC7M;AACA,QAAI,mBAAmB,YAAY;AAClC,aAAO,SAAS,uBAAuB,kCAAkC,QAAQ,MAAM,QAAQ,MAAM,iBAAiB,sBAAsB,OAAO,CAAC;AAAA,IACrJ;AACA,QAAI,eAAe,OAAO,GAAG;AAC5B,YAAM,SAAS,QAAQ,cAAc,EAAE,KAAK,OAAK,EAAE,OAAO;AAC1D,YAAM,QAAQ,SAAS,OAAO,aAAa,SAAS,EAAE,KAAK,WAAW,SAAS,CAAC,iBAAiB,EAAE,GAAG,SAAS;AAC/G,aAAO,SAAS,EAAE,KAAK,gBAAgB,SAAS,CAAC,2GAA2G,EAAE,GAAG,mBAAmB,QAAQ,SAAS,GAAG,KAAK;AAAA,IAC9M;AACA,QAAI,OAAO,YAAY,UAAU;AAChC,aAAO;AAAA,IACR;AACA,QAAI,mBAAmB,OAAO;AAC7B,aAAO,SAAS,uBAAuB,8BAA8B,QAAQ,MAAM;AAAA,IACpF;AAGA,WAAO,iBAAiB;AAAA,EACzB;AACD;AAEA,MAAM,6BAAgF;AAAA,EAErF,YAA6B,cAA6B;AAA7B;AAAA,EAA+B;AAAA,EAzjC7D,OAujCsF;AAAA;AAAA;AAAA,EAIrF,iBAAiB,MAA8B;AAC9C,QAAI,eAAe,IAAI,GAAG;AACzB,UAAI,KAAK,SAAS;AACjB,eAAO;AAAA,MACR;AACA,YAAM,WAAW,KAAK,aAAa,SAAS,EAAE,YAAY;AAC1D,UAAI,SAAS,KAAK,OAAK,EAAE,kBAAkB,QAAQ,EAAE,OAAO,GAAG;AAC9D,eAAO;AAAA,MACR;AAEA,aAAO;AAAA,IACR;AAEA,WAAO;AAAA,EACR;AACD;AAEA,gBAAgB,MAAM,iBAAiB,WAA0B;AAAA,EA5kCjE,OA4kCiE;AAAA;AAAA;AAAA,EAChE,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,OAAO,SAAS,YAAY,cAAc;AAAA,MAC1C,IAAI;AAAA,MACJ,MAAM,QAAQ;AAAA,MACd,cAAc,oBAAoB,UAAU,cAAc,MAAM,OAAO,CAAC;AAAA,MACxE,MAAM;AAAA,QACL,IAAI,OAAO;AAAA,QACX,OAAO;AAAA,QACP,OAAO;AAAA,QACP,MAAM,eAAe,OAAO,QAAQ,iBAAiB;AAAA,MACtD;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,UAAU,WAA6B,MAAqB;AAC3D,SAAK,YAAY;AAAA,EAClB;AACD,CAAC;AAED,SAAS,gCAAgC,IAAY,OAAqC,MAAY,MAA4B,OAAe,cAA2C;AAC3L,eAAa,eAAe,OAAO,uBAAuB;AAAA,IACzD,OAAO;AAAA,IACP;AAAA,IACA;AAAA,IACA,SAAS,EAAE,IAAI,OAAO,MAAM,aAAa;AAAA,EAC1C,CAAC;AACF;AAPS;AAST,MAAM,+BAA+B,eAAe,GAAG,4BAA4B,UAAU,QAAQ,GAAG,eAAe,IAAI,4BAA4B,UAAU,SAAS,GAAG,wCAAwC,CAAC;AACtN,gCAAgC,UAAU,aAAa,MAAM,YAAY,eAAe,IAAI,8BAA8B,+BAA+B,UAAU,CAAC,GAAI,IAAI,oCAAoC,UAAU,CAAC;AAC3N,gCAAgC,aAAa,gBAAgB,MAAM,eAAe,eAAe,IAAI,8BAA8B,8BAA8B,GAAI,EAAE;AACvK,gCAAgC,cAAc,iBAAiB,MAAM,eAAe,8BAA8B,IAAI,8BAA8B;AACpJ,gCAAgC,cAAc,iBAAiB,MAAM,eAAe,8BAA8B,IAAI,8BAA8B;AACpJ,gCAAgC,aAAa,gBAAgB,MAAM,cAAc,8BAA8B,IAAI,8BAA8B;AACjJ,gCAAgC,oBAAoB,eAAe,MAAM,cAAc,4BAA4B,UAAU,SAAS,GAAG,EAAE;AAC3I,gCAAgC,SAAS,YAAY,MAAM,WAAW,eAAe,IAAI,oCAAoC,UAAU,GAAG,4BAA4B,UAAU,SAAS,CAAC,GAAI,EAAE;AAChM,gCAAgC,eAAe,kBAAkB,MAAM,iBAAiB,eAAe,IAAI,qCAAqC,4BAA4B,UAAU,SAAS,CAAC,GAAI,EAAE;",
  "names": []
}
