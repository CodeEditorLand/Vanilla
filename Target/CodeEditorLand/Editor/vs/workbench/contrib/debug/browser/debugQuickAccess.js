var k=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var b=(u,a,r,i)=>{for(var t=i>1?void 0:i?y(a,r):a,c=u.length-1,s;c>=0;c--)(s=u[c])&&(t=(i?s(a,r,t):s(t))||t);return i&&t&&k(a,r,t),t},g=(u,a)=>(r,i)=>a(r,i,u);import{matchesFuzzy as m}from"../../../../../vs/base/common/filters.js";import{ThemeIcon as C}from"../../../../../vs/base/common/themables.js";import{localize as n}from"../../../../../vs/nls.js";import{ICommandService as P}from"../../../../../vs/platform/commands/common/commands.js";import{INotificationService as A}from"../../../../../vs/platform/notification/common/notification.js";import{PickerQuickAccessProvider as E,TriggerAction as S}from"../../../../../vs/platform/quickinput/browser/pickerQuickAccess.js";import"../../../../../vs/platform/quickinput/common/quickInput.js";import{IWorkspaceContextService as R,WorkbenchState as p}from"../../../../../vs/platform/workspace/common/workspace.js";import{ADD_CONFIGURATION_ID as D,DEBUG_QUICK_ACCESS_PREFIX as x}from"../../../../../vs/workbench/contrib/debug/browser/debugCommands.js";import{debugConfigure as L,debugRemoveConfig as w}from"../../../../../vs/workbench/contrib/debug/browser/debugIcons.js";import{IDebugService as N}from"../../../../../vs/workbench/contrib/debug/common/debug.js";let f=class extends E{constructor(r,i,t,c){super(x,{noResultsPick:{label:n("noDebugResults","No matching launch configurations")}});this.debugService=r;this.contextService=i;this.commandService=t;this.notificationService=c}async _getPicks(r){const i=[];if(!this.debugService.getAdapterManager().hasEnabledDebuggers())return[];i.push({type:"separator",label:"launch.json"});const t=this.debugService.getConfigurationManager();let c;for(const e of t.getAllConfigurations()){const o=m(r,e.name,!0);o&&(c!==e.presentation?.group&&(i.push({type:"separator"}),c=e.presentation?.group),i.push({label:e.name,description:this.contextService.getWorkbenchState()===p.WORKSPACE?e.launch.name:"",highlights:{label:o},buttons:[{iconClass:C.asClassName(L),tooltip:n("customizeLaunchConfig","Configure Launch Configuration")}],trigger:()=>(e.launch.openConfigFile({preserveFocus:!1}),S.CLOSE_PICKER),accept:async()=>{await t.selectConfiguration(e.launch,e.name);try{await this.debugService.startDebugging(e.launch,void 0,{startedByUser:!0})}catch(l){this.notificationService.error(l)}}}))}const s=await t.getDynamicProviders();s.length>0&&i.push({type:"separator",label:n({key:"contributed",comment:["contributed is lower case because it looks better like that in UI. Nothing preceeds it. It is a name of the grouping of debug configurations."]},"contributed")}),t.getRecentDynamicConfigurations().forEach(({name:e,type:o})=>{const l=m(r,e,!0);l&&i.push({label:e,highlights:{label:l},buttons:[{iconClass:C.asClassName(w),tooltip:n("removeLaunchConfig","Remove Launch Configuration")}],trigger:()=>(t.removeRecentDynamicConfigurations(e,o),S.CLOSE_PICKER),accept:async()=>{await t.selectConfiguration(void 0,e,void 0,{type:o});try{const{launch:h,getConfig:v}=t.selectedConfiguration,I=await v();await this.debugService.startDebugging(h,I,{startedByUser:!0})}catch(h){this.notificationService.error(h)}}})}),s.forEach(e=>{i.push({label:`$(folder) ${e.label}...`,ariaLabel:n({key:"providerAriaLabel",comment:['Placeholder stands for the provider label. For example "NodeJS".']},"{0} contributed configurations",e.label),accept:async()=>{const o=await e.pick();o&&(await t.selectConfiguration(o.launch,o.config.name,o.config,{type:e.type}),this.debugService.startDebugging(o.launch,o.config,{startedByUser:!0}))}})});const d=t.getLaunches().filter(e=>!e.hidden);d.length>0&&i.push({type:"separator",label:n("configure","configure")});for(const e of d){const o=this.contextService.getWorkbenchState()===p.WORKSPACE?n("addConfigTo","Add Config ({0})...",e.name):n("addConfiguration","Add Configuration...");i.push({label:o,description:this.contextService.getWorkbenchState()===p.WORKSPACE?e.name:"",highlights:{label:m(r,o,!0)??void 0},accept:()=>this.commandService.executeCommand(D,e.uri.toString())})}return i}};f=b([g(0,N),g(1,R),g(2,P),g(3,A)],f);export{f as StartDebugQuickAccessProvider};
