{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/debug.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { FileAccess } from '../../../../base/common/network.js';\nimport { isMacintosh, isWeb } from '../../../../base/common/platform.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport './media/debug.contribution.css';\nimport './media/debugHover.css';\nimport { EditorContributionInstantiation, registerEditorContribution } from '../../../../editor/browser/editorExtensions.js';\nimport * as nls from '../../../../nls.js';\nimport { AccessibleViewRegistry } from '../../../../platform/accessibility/browser/accessibleViewRegistry.js';\nimport { ICommandActionTitle, Icon } from '../../../../platform/action/common/action.js';\nimport { MenuId, MenuRegistry } from '../../../../platform/actions/common/actions.js';\nimport { Extensions as ConfigurationExtensions, ConfigurationScope, IConfigurationRegistry } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { ContextKeyExpr, ContextKeyExpression } from '../../../../platform/contextkey/common/contextkey.js';\nimport { SyncDescriptor } from '../../../../platform/instantiation/common/descriptors.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { IQuickAccessRegistry, Extensions as QuickAccessExtensions } from '../../../../platform/quickinput/common/quickAccess.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { EditorPaneDescriptor, IEditorPaneRegistry } from '../../../browser/editor.js';\nimport { ViewPaneContainer } from '../../../browser/parts/views/viewPaneContainer.js';\nimport { IWorkbenchContributionsRegistry, registerWorkbenchContribution2, Extensions as WorkbenchExtensions, WorkbenchPhase } from '../../../common/contributions.js';\nimport { EditorExtensions } from '../../../common/editor.js';\nimport { IViewContainersRegistry, IViewsRegistry, ViewContainer, ViewContainerLocation, Extensions as ViewExtensions } from '../../../common/views.js';\nimport { BreakpointEditorContribution } from './breakpointEditorContribution.js';\nimport { BreakpointsView } from './breakpointsView.js';\nimport { CallStackEditorContribution } from './callStackEditorContribution.js';\nimport { CallStackView } from './callStackView.js';\nimport { ReplAccessibleView } from './replAccessibleView.js';\nimport { registerColors } from './debugColors.js';\nimport { ADD_CONFIGURATION_ID, ADD_TO_WATCH_ID, ADD_TO_WATCH_LABEL, CALLSTACK_BOTTOM_ID, CALLSTACK_BOTTOM_LABEL, CALLSTACK_DOWN_ID, CALLSTACK_DOWN_LABEL, CALLSTACK_TOP_ID, CALLSTACK_TOP_LABEL, CALLSTACK_UP_ID, CALLSTACK_UP_LABEL, CONTINUE_ID, CONTINUE_LABEL, COPY_EVALUATE_PATH_ID, COPY_EVALUATE_PATH_LABEL, COPY_STACK_TRACE_ID, COPY_VALUE_ID, COPY_VALUE_LABEL, DEBUG_COMMAND_CATEGORY, DEBUG_CONSOLE_QUICK_ACCESS_PREFIX, DEBUG_QUICK_ACCESS_PREFIX, DEBUG_RUN_COMMAND_ID, DEBUG_RUN_LABEL, DEBUG_START_COMMAND_ID, DEBUG_START_LABEL, DISCONNECT_AND_SUSPEND_ID, DISCONNECT_AND_SUSPEND_LABEL, DISCONNECT_ID, DISCONNECT_LABEL, EDIT_EXPRESSION_COMMAND_ID, FOCUS_REPL_ID, JUMP_TO_CURSOR_ID, NEXT_DEBUG_CONSOLE_ID, NEXT_DEBUG_CONSOLE_LABEL, OPEN_LOADED_SCRIPTS_LABEL, PAUSE_ID, PAUSE_LABEL, PREV_DEBUG_CONSOLE_ID, PREV_DEBUG_CONSOLE_LABEL, REMOVE_EXPRESSION_COMMAND_ID, RESTART_FRAME_ID, RESTART_LABEL, RESTART_SESSION_ID, SELECT_AND_START_ID, SELECT_AND_START_LABEL, SELECT_DEBUG_CONSOLE_ID, SELECT_DEBUG_CONSOLE_LABEL, SELECT_DEBUG_SESSION_ID, SELECT_DEBUG_SESSION_LABEL, SET_EXPRESSION_COMMAND_ID, SHOW_LOADED_SCRIPTS_ID, STEP_INTO_ID, STEP_INTO_LABEL, STEP_INTO_TARGET_ID, STEP_INTO_TARGET_LABEL, STEP_OUT_ID, STEP_OUT_LABEL, STEP_OVER_ID, STEP_OVER_LABEL, STOP_ID, STOP_LABEL, TERMINATE_THREAD_ID, TOGGLE_INLINE_BREAKPOINT_ID } from './debugCommands.js';\nimport { DebugConsoleQuickAccess } from './debugConsoleQuickAccess.js';\nimport { RunToCursorAction, SelectionToReplAction, SelectionToWatchExpressionsAction } from './debugEditorActions.js';\nimport { DebugEditorContribution } from './debugEditorContribution.js';\nimport * as icons from './debugIcons.js';\nimport { DebugProgressContribution } from './debugProgress.js';\nimport { StartDebugQuickAccessProvider } from './debugQuickAccess.js';\nimport { DebugService } from './debugService.js';\nimport { DebugStatusContribution } from './debugStatus.js';\nimport { DebugTitleContribution } from './debugTitle.js';\nimport { DebugToolBar } from './debugToolBar.js';\nimport { DebugViewPaneContainer } from './debugViewlet.js';\nimport { DisassemblyView, DisassemblyViewContribution } from './disassemblyView.js';\nimport { LoadedScriptsView } from './loadedScriptsView.js';\nimport { Repl } from './repl.js';\nimport { StatusBarColorProvider } from './statusbarColorProvider.js';\nimport { BREAK_WHEN_VALUE_CHANGES_ID, BREAK_WHEN_VALUE_IS_ACCESSED_ID, BREAK_WHEN_VALUE_IS_READ_ID, SET_VARIABLE_ID, VIEW_MEMORY_ID, VariablesView } from './variablesView.js';\nimport { ADD_WATCH_ID, ADD_WATCH_LABEL, REMOVE_WATCH_EXPRESSIONS_COMMAND_ID, REMOVE_WATCH_EXPRESSIONS_LABEL, WatchExpressionsView } from './watchExpressionsView.js';\nimport { WelcomeView } from './welcomeView.js';\nimport { BREAKPOINTS_VIEW_ID, BREAKPOINT_EDITOR_CONTRIBUTION_ID, CALLSTACK_VIEW_ID, CONTEXT_BREAKPOINTS_EXIST, CONTEXT_BREAK_WHEN_VALUE_CHANGES_SUPPORTED, CONTEXT_BREAK_WHEN_VALUE_IS_ACCESSED_SUPPORTED, CONTEXT_BREAK_WHEN_VALUE_IS_READ_SUPPORTED, CONTEXT_CALLSTACK_ITEM_TYPE, CONTEXT_CAN_VIEW_MEMORY, CONTEXT_DEBUGGERS_AVAILABLE, CONTEXT_DEBUG_STATE, CONTEXT_DEBUG_UX, CONTEXT_FOCUSED_SESSION_IS_ATTACH, CONTEXT_FOCUSED_SESSION_IS_NO_DEBUG, CONTEXT_HAS_DEBUGGED, CONTEXT_IN_DEBUG_MODE, CONTEXT_JUMP_TO_CURSOR_SUPPORTED, CONTEXT_LOADED_SCRIPTS_SUPPORTED, CONTEXT_RESTART_FRAME_SUPPORTED, CONTEXT_SET_EXPRESSION_SUPPORTED, CONTEXT_SET_VARIABLE_SUPPORTED, CONTEXT_STACK_FRAME_SUPPORTS_RESTART, CONTEXT_STEP_INTO_TARGETS_SUPPORTED, CONTEXT_SUSPEND_DEBUGGEE_SUPPORTED, CONTEXT_TERMINATE_DEBUGGEE_SUPPORTED, CONTEXT_VARIABLE_EVALUATE_NAME_PRESENT, CONTEXT_VARIABLE_IS_READONLY, CONTEXT_VARIABLE_VALUE, CONTEXT_WATCH_ITEM_TYPE, DEBUG_PANEL_ID, DISASSEMBLY_VIEW_ID, EDITOR_CONTRIBUTION_ID, IDebugService, INTERNAL_CONSOLE_OPTIONS_SCHEMA, LOADED_SCRIPTS_VIEW_ID, REPL_VIEW_ID, State, VARIABLES_VIEW_ID, VIEWLET_ID, WATCH_VIEW_ID, getStateLabel } from '../common/debug.js';\nimport { DebugContentProvider } from '../common/debugContentProvider.js';\nimport { DebugLifecycle } from '../common/debugLifecycle.js';\nimport { DebugVisualizerService, IDebugVisualizerService } from '../common/debugVisualizers.js';\nimport { DisassemblyViewInput } from '../common/disassemblyViewInput.js';\nimport { COPY_NOTEBOOK_VARIABLE_VALUE_ID, COPY_NOTEBOOK_VARIABLE_VALUE_LABEL } from '../../notebook/browser/contrib/notebookVariables/notebookVariableCommands.js';\nimport { launchSchemaId } from '../../../services/configuration/common/configuration.js';\nimport { LifecyclePhase } from '../../../services/lifecycle/common/lifecycle.js';\nimport './debugSettingMigration.js';\nimport { ReplAccessibilityHelp } from './replAccessibilityHelp.js';\nimport { ReplAccessibilityAnnouncer } from '../common/replAccessibilityAnnouncer.js';\nimport { RunAndDebugAccessibilityHelp } from './runAndDebugAccessibilityHelp.js';\nimport { DebugWatchAccessibilityAnnouncer } from '../common/debugAccessibilityAnnouncer.js';\n\nconst debugCategory = nls.localize('debugCategory', \"Debug\");\nregisterColors();\nregisterSingleton(IDebugService, DebugService, InstantiationType.Delayed);\nregisterSingleton(IDebugVisualizerService, DebugVisualizerService, InstantiationType.Delayed);\n\n// Register Debug Workbench Contributions\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(DebugStatusContribution, LifecyclePhase.Eventually);\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(DebugProgressContribution, LifecyclePhase.Eventually);\nif (isWeb) {\n\tRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(DebugTitleContribution, LifecyclePhase.Eventually);\n}\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(DebugToolBar, LifecyclePhase.Restored);\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(DebugContentProvider, LifecyclePhase.Eventually);\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(StatusBarColorProvider, LifecyclePhase.Eventually);\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(DisassemblyViewContribution, LifecyclePhase.Eventually);\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(DebugLifecycle, LifecyclePhase.Eventually);\n\n// Register Quick Access\nRegistry.as<IQuickAccessRegistry>(QuickAccessExtensions.Quickaccess).registerQuickAccessProvider({\n\tctor: StartDebugQuickAccessProvider,\n\tprefix: DEBUG_QUICK_ACCESS_PREFIX,\n\tcontextKey: 'inLaunchConfigurationsPicker',\n\tplaceholder: nls.localize('startDebugPlaceholder', \"Type the name of a launch configuration to run.\"),\n\thelpEntries: [{\n\t\tdescription: nls.localize('startDebuggingHelp', \"Start Debugging\"),\n\t\tcommandId: SELECT_AND_START_ID,\n\t\tcommandCenterOrder: 50\n\t}]\n});\n\n// Register quick access for debug console\nRegistry.as<IQuickAccessRegistry>(QuickAccessExtensions.Quickaccess).registerQuickAccessProvider({\n\tctor: DebugConsoleQuickAccess,\n\tprefix: DEBUG_CONSOLE_QUICK_ACCESS_PREFIX,\n\tcontextKey: 'inDebugConsolePicker',\n\tplaceholder: nls.localize('tasksQuickAccessPlaceholder', \"Type the name of a debug console to open.\"),\n\thelpEntries: [{ description: nls.localize('tasksQuickAccessHelp', \"Show All Debug Consoles\"), commandId: SELECT_DEBUG_CONSOLE_ID }]\n});\n\nregisterEditorContribution('editor.contrib.callStack', CallStackEditorContribution, EditorContributionInstantiation.AfterFirstRender);\nregisterEditorContribution(BREAKPOINT_EDITOR_CONTRIBUTION_ID, BreakpointEditorContribution, EditorContributionInstantiation.AfterFirstRender);\nregisterEditorContribution(EDITOR_CONTRIBUTION_ID, DebugEditorContribution, EditorContributionInstantiation.BeforeFirstInteraction);\n\nconst registerDebugCommandPaletteItem = (id: string, title: ICommandActionTitle, when?: ContextKeyExpression, precondition?: ContextKeyExpression) => {\n\tMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\t\twhen: ContextKeyExpr.and(CONTEXT_DEBUGGERS_AVAILABLE, when),\n\t\tgroup: debugCategory,\n\t\tcommand: {\n\t\t\tid,\n\t\t\ttitle,\n\t\t\tcategory: DEBUG_COMMAND_CATEGORY,\n\t\t\tprecondition\n\t\t}\n\t});\n};\n\nregisterDebugCommandPaletteItem(RESTART_SESSION_ID, RESTART_LABEL);\nregisterDebugCommandPaletteItem(TERMINATE_THREAD_ID, nls.localize2('terminateThread', \"Terminate Thread\"), CONTEXT_IN_DEBUG_MODE);\nregisterDebugCommandPaletteItem(STEP_OVER_ID, STEP_OVER_LABEL, CONTEXT_IN_DEBUG_MODE, CONTEXT_DEBUG_STATE.isEqualTo('stopped'));\nregisterDebugCommandPaletteItem(STEP_INTO_ID, STEP_INTO_LABEL, CONTEXT_IN_DEBUG_MODE, CONTEXT_DEBUG_STATE.isEqualTo('stopped'));\nregisterDebugCommandPaletteItem(STEP_INTO_TARGET_ID, STEP_INTO_TARGET_LABEL, CONTEXT_IN_DEBUG_MODE, ContextKeyExpr.and(CONTEXT_STEP_INTO_TARGETS_SUPPORTED, CONTEXT_IN_DEBUG_MODE, CONTEXT_DEBUG_STATE.isEqualTo('stopped')));\nregisterDebugCommandPaletteItem(STEP_OUT_ID, STEP_OUT_LABEL, CONTEXT_IN_DEBUG_MODE, CONTEXT_DEBUG_STATE.isEqualTo('stopped'));\nregisterDebugCommandPaletteItem(PAUSE_ID, PAUSE_LABEL, CONTEXT_IN_DEBUG_MODE, ContextKeyExpr.and(CONTEXT_DEBUG_STATE.isEqualTo('running'), CONTEXT_FOCUSED_SESSION_IS_NO_DEBUG.toNegated()));\nregisterDebugCommandPaletteItem(DISCONNECT_ID, DISCONNECT_LABEL, CONTEXT_IN_DEBUG_MODE, ContextKeyExpr.or(CONTEXT_FOCUSED_SESSION_IS_ATTACH, CONTEXT_TERMINATE_DEBUGGEE_SUPPORTED));\nregisterDebugCommandPaletteItem(DISCONNECT_AND_SUSPEND_ID, DISCONNECT_AND_SUSPEND_LABEL, CONTEXT_IN_DEBUG_MODE, ContextKeyExpr.or(CONTEXT_FOCUSED_SESSION_IS_ATTACH, ContextKeyExpr.and(CONTEXT_SUSPEND_DEBUGGEE_SUPPORTED, CONTEXT_TERMINATE_DEBUGGEE_SUPPORTED)));\nregisterDebugCommandPaletteItem(STOP_ID, STOP_LABEL, CONTEXT_IN_DEBUG_MODE, ContextKeyExpr.or(CONTEXT_FOCUSED_SESSION_IS_ATTACH.toNegated(), CONTEXT_TERMINATE_DEBUGGEE_SUPPORTED));\nregisterDebugCommandPaletteItem(CONTINUE_ID, CONTINUE_LABEL, CONTEXT_IN_DEBUG_MODE, CONTEXT_DEBUG_STATE.isEqualTo('stopped'));\nregisterDebugCommandPaletteItem(FOCUS_REPL_ID, nls.localize2({ comment: ['Debug is a noun in this context, not a verb.'], key: 'debugFocusConsole' }, \"Focus on Debug Console View\"));\nregisterDebugCommandPaletteItem(JUMP_TO_CURSOR_ID, nls.localize2('jumpToCursor', \"Jump to Cursor\"), CONTEXT_JUMP_TO_CURSOR_SUPPORTED);\nregisterDebugCommandPaletteItem(JUMP_TO_CURSOR_ID, nls.localize2('SetNextStatement', \"Set Next Statement\"), CONTEXT_JUMP_TO_CURSOR_SUPPORTED);\nregisterDebugCommandPaletteItem(RunToCursorAction.ID, RunToCursorAction.LABEL, CONTEXT_DEBUGGERS_AVAILABLE);\nregisterDebugCommandPaletteItem(SelectionToReplAction.ID, SelectionToReplAction.LABEL, CONTEXT_IN_DEBUG_MODE);\nregisterDebugCommandPaletteItem(SelectionToWatchExpressionsAction.ID, SelectionToWatchExpressionsAction.LABEL);\nregisterDebugCommandPaletteItem(TOGGLE_INLINE_BREAKPOINT_ID, nls.localize2('inlineBreakpoint', \"Inline Breakpoint\"));\nregisterDebugCommandPaletteItem(DEBUG_START_COMMAND_ID, DEBUG_START_LABEL, ContextKeyExpr.and(CONTEXT_DEBUGGERS_AVAILABLE, CONTEXT_DEBUG_STATE.notEqualsTo(getStateLabel(State.Initializing))));\nregisterDebugCommandPaletteItem(DEBUG_RUN_COMMAND_ID, DEBUG_RUN_LABEL, ContextKeyExpr.and(CONTEXT_DEBUGGERS_AVAILABLE, CONTEXT_DEBUG_STATE.notEqualsTo(getStateLabel(State.Initializing))));\nregisterDebugCommandPaletteItem(SELECT_AND_START_ID, SELECT_AND_START_LABEL, ContextKeyExpr.and(CONTEXT_DEBUGGERS_AVAILABLE, CONTEXT_DEBUG_STATE.notEqualsTo(getStateLabel(State.Initializing))));\nregisterDebugCommandPaletteItem(NEXT_DEBUG_CONSOLE_ID, NEXT_DEBUG_CONSOLE_LABEL);\nregisterDebugCommandPaletteItem(PREV_DEBUG_CONSOLE_ID, PREV_DEBUG_CONSOLE_LABEL);\nregisterDebugCommandPaletteItem(SHOW_LOADED_SCRIPTS_ID, OPEN_LOADED_SCRIPTS_LABEL, CONTEXT_IN_DEBUG_MODE);\nregisterDebugCommandPaletteItem(SELECT_DEBUG_CONSOLE_ID, SELECT_DEBUG_CONSOLE_LABEL);\nregisterDebugCommandPaletteItem(SELECT_DEBUG_SESSION_ID, SELECT_DEBUG_SESSION_LABEL);\nregisterDebugCommandPaletteItem(CALLSTACK_TOP_ID, CALLSTACK_TOP_LABEL, CONTEXT_IN_DEBUG_MODE, CONTEXT_DEBUG_STATE.isEqualTo('stopped'));\nregisterDebugCommandPaletteItem(CALLSTACK_BOTTOM_ID, CALLSTACK_BOTTOM_LABEL, CONTEXT_IN_DEBUG_MODE, CONTEXT_DEBUG_STATE.isEqualTo('stopped'));\nregisterDebugCommandPaletteItem(CALLSTACK_UP_ID, CALLSTACK_UP_LABEL, CONTEXT_IN_DEBUG_MODE, CONTEXT_DEBUG_STATE.isEqualTo('stopped'));\nregisterDebugCommandPaletteItem(CALLSTACK_DOWN_ID, CALLSTACK_DOWN_LABEL, CONTEXT_IN_DEBUG_MODE, CONTEXT_DEBUG_STATE.isEqualTo('stopped'));\n\n// Debug callstack context menu\nconst registerDebugViewMenuItem = (menuId: MenuId, id: string, title: string | ICommandActionTitle, order: number, when?: ContextKeyExpression, precondition?: ContextKeyExpression, group = 'navigation', icon?: Icon) => {\n\tMenuRegistry.appendMenuItem(menuId, {\n\t\tgroup,\n\t\twhen,\n\t\torder,\n\t\ticon,\n\t\tcommand: {\n\t\t\tid,\n\t\t\ttitle,\n\t\t\ticon,\n\t\t\tprecondition\n\t\t}\n\t});\n};\nregisterDebugViewMenuItem(MenuId.DebugCallStackContext, RESTART_SESSION_ID, RESTART_LABEL, 10, CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('session'), undefined, '3_modification');\nregisterDebugViewMenuItem(MenuId.DebugCallStackContext, DISCONNECT_ID, DISCONNECT_LABEL, 20, CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('session'), undefined, '3_modification');\nregisterDebugViewMenuItem(MenuId.DebugCallStackContext, DISCONNECT_AND_SUSPEND_ID, DISCONNECT_AND_SUSPEND_LABEL, 21, ContextKeyExpr.and(CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('session'), CONTEXT_SUSPEND_DEBUGGEE_SUPPORTED, CONTEXT_TERMINATE_DEBUGGEE_SUPPORTED), undefined, '3_modification');\nregisterDebugViewMenuItem(MenuId.DebugCallStackContext, STOP_ID, STOP_LABEL, 30, CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('session'), undefined, '3_modification');\nregisterDebugViewMenuItem(MenuId.DebugCallStackContext, PAUSE_ID, PAUSE_LABEL, 10, ContextKeyExpr.and(CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('thread'), ContextKeyExpr.and(CONTEXT_DEBUG_STATE.isEqualTo('running'), CONTEXT_FOCUSED_SESSION_IS_NO_DEBUG.toNegated())));\nregisterDebugViewMenuItem(MenuId.DebugCallStackContext, CONTINUE_ID, CONTINUE_LABEL, 10, ContextKeyExpr.and(CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('thread'), CONTEXT_DEBUG_STATE.isEqualTo('stopped')));\nregisterDebugViewMenuItem(MenuId.DebugCallStackContext, STEP_OVER_ID, STEP_OVER_LABEL, 20, CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('thread'), CONTEXT_DEBUG_STATE.isEqualTo('stopped'));\nregisterDebugViewMenuItem(MenuId.DebugCallStackContext, STEP_INTO_ID, STEP_INTO_LABEL, 30, CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('thread'), CONTEXT_DEBUG_STATE.isEqualTo('stopped'));\nregisterDebugViewMenuItem(MenuId.DebugCallStackContext, STEP_OUT_ID, STEP_OUT_LABEL, 40, CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('thread'), CONTEXT_DEBUG_STATE.isEqualTo('stopped'));\nregisterDebugViewMenuItem(MenuId.DebugCallStackContext, TERMINATE_THREAD_ID, nls.localize('terminateThread', \"Terminate Thread\"), 10, CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('thread'), undefined, 'termination');\nregisterDebugViewMenuItem(MenuId.DebugCallStackContext, RESTART_FRAME_ID, nls.localize('restartFrame', \"Restart Frame\"), 10, ContextKeyExpr.and(CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('stackFrame'), CONTEXT_RESTART_FRAME_SUPPORTED), CONTEXT_STACK_FRAME_SUPPORTS_RESTART);\nregisterDebugViewMenuItem(MenuId.DebugCallStackContext, COPY_STACK_TRACE_ID, nls.localize('copyStackTrace', \"Copy Call Stack\"), 20, CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('stackFrame'), undefined, '3_modification');\n\nregisterDebugViewMenuItem(MenuId.DebugVariablesContext, VIEW_MEMORY_ID, nls.localize('viewMemory', \"View Binary Data\"), 15, CONTEXT_CAN_VIEW_MEMORY, CONTEXT_IN_DEBUG_MODE, 'inline', icons.debugInspectMemory);\nregisterDebugViewMenuItem(MenuId.DebugVariablesContext, SET_VARIABLE_ID, nls.localize('setValue', \"Set Value\"), 10, ContextKeyExpr.or(CONTEXT_SET_VARIABLE_SUPPORTED, ContextKeyExpr.and(CONTEXT_VARIABLE_EVALUATE_NAME_PRESENT, CONTEXT_SET_EXPRESSION_SUPPORTED)), CONTEXT_VARIABLE_IS_READONLY.toNegated(), '3_modification');\nregisterDebugViewMenuItem(MenuId.DebugVariablesContext, COPY_VALUE_ID, COPY_VALUE_LABEL, 10, undefined, undefined, '5_cutcopypaste');\nregisterDebugViewMenuItem(MenuId.DebugVariablesContext, COPY_EVALUATE_PATH_ID, COPY_EVALUATE_PATH_LABEL, 20, CONTEXT_VARIABLE_EVALUATE_NAME_PRESENT, undefined, '5_cutcopypaste');\nregisterDebugViewMenuItem(MenuId.DebugVariablesContext, ADD_TO_WATCH_ID, ADD_TO_WATCH_LABEL, 100, CONTEXT_VARIABLE_EVALUATE_NAME_PRESENT, undefined, 'z_commands');\nregisterDebugViewMenuItem(MenuId.DebugVariablesContext, BREAK_WHEN_VALUE_IS_READ_ID, nls.localize('breakWhenValueIsRead', \"Break on Value Read\"), 200, CONTEXT_BREAK_WHEN_VALUE_IS_READ_SUPPORTED, undefined, 'z_commands');\nregisterDebugViewMenuItem(MenuId.DebugVariablesContext, BREAK_WHEN_VALUE_CHANGES_ID, nls.localize('breakWhenValueChanges', \"Break on Value Change\"), 210, CONTEXT_BREAK_WHEN_VALUE_CHANGES_SUPPORTED, undefined, 'z_commands');\nregisterDebugViewMenuItem(MenuId.DebugVariablesContext, BREAK_WHEN_VALUE_IS_ACCESSED_ID, nls.localize('breakWhenValueIsAccessed', \"Break on Value Access\"), 220, CONTEXT_BREAK_WHEN_VALUE_IS_ACCESSED_SUPPORTED, undefined, 'z_commands');\n\nregisterDebugViewMenuItem(MenuId.DebugHoverContext, VIEW_MEMORY_ID, nls.localize('viewMemory', \"View Binary Data\"), 15, CONTEXT_CAN_VIEW_MEMORY, CONTEXT_IN_DEBUG_MODE, 'inline', icons.debugInspectMemory);\nregisterDebugViewMenuItem(MenuId.DebugHoverContext, COPY_VALUE_ID, COPY_VALUE_LABEL, 10, undefined, undefined, '5_cutcopypaste');\nregisterDebugViewMenuItem(MenuId.DebugHoverContext, COPY_EVALUATE_PATH_ID, COPY_EVALUATE_PATH_LABEL, 20, CONTEXT_VARIABLE_EVALUATE_NAME_PRESENT, undefined, '5_cutcopypaste');\nregisterDebugViewMenuItem(MenuId.DebugHoverContext, ADD_TO_WATCH_ID, ADD_TO_WATCH_LABEL, 100, CONTEXT_VARIABLE_EVALUATE_NAME_PRESENT, undefined, 'z_commands');\nregisterDebugViewMenuItem(MenuId.DebugHoverContext, BREAK_WHEN_VALUE_IS_READ_ID, nls.localize('breakWhenValueIsRead', \"Break on Value Read\"), 200, CONTEXT_BREAK_WHEN_VALUE_IS_READ_SUPPORTED, undefined, 'z_commands');\nregisterDebugViewMenuItem(MenuId.DebugHoverContext, BREAK_WHEN_VALUE_CHANGES_ID, nls.localize('breakWhenValueChanges', \"Break on Value Change\"), 210, CONTEXT_BREAK_WHEN_VALUE_CHANGES_SUPPORTED, undefined, 'z_commands');\nregisterDebugViewMenuItem(MenuId.DebugHoverContext, BREAK_WHEN_VALUE_IS_ACCESSED_ID, nls.localize('breakWhenValueIsAccessed', \"Break on Value Access\"), 220, CONTEXT_BREAK_WHEN_VALUE_IS_ACCESSED_SUPPORTED, undefined, 'z_commands');\n\nregisterDebugViewMenuItem(MenuId.DebugWatchContext, ADD_WATCH_ID, ADD_WATCH_LABEL, 10, undefined, undefined, '3_modification');\nregisterDebugViewMenuItem(MenuId.DebugWatchContext, EDIT_EXPRESSION_COMMAND_ID, nls.localize('editWatchExpression', \"Edit Expression\"), 20, CONTEXT_WATCH_ITEM_TYPE.isEqualTo('expression'), undefined, '3_modification');\nregisterDebugViewMenuItem(MenuId.DebugWatchContext, SET_EXPRESSION_COMMAND_ID, nls.localize('setValue', \"Set Value\"), 30, ContextKeyExpr.or(ContextKeyExpr.and(CONTEXT_WATCH_ITEM_TYPE.isEqualTo('expression'), CONTEXT_SET_EXPRESSION_SUPPORTED), ContextKeyExpr.and(CONTEXT_WATCH_ITEM_TYPE.isEqualTo('variable'), CONTEXT_SET_VARIABLE_SUPPORTED)), CONTEXT_VARIABLE_IS_READONLY.toNegated(), '3_modification');\nregisterDebugViewMenuItem(MenuId.DebugWatchContext, COPY_VALUE_ID, nls.localize('copyValue', \"Copy Value\"), 40, ContextKeyExpr.or(CONTEXT_WATCH_ITEM_TYPE.isEqualTo('expression'), CONTEXT_WATCH_ITEM_TYPE.isEqualTo('variable')), CONTEXT_IN_DEBUG_MODE, '3_modification');\nregisterDebugViewMenuItem(MenuId.DebugWatchContext, VIEW_MEMORY_ID, nls.localize('viewMemory', \"View Binary Data\"), 10, CONTEXT_CAN_VIEW_MEMORY, undefined, 'inline', icons.debugInspectMemory);\nregisterDebugViewMenuItem(MenuId.DebugWatchContext, REMOVE_EXPRESSION_COMMAND_ID, nls.localize('removeWatchExpression', \"Remove Expression\"), 20, CONTEXT_WATCH_ITEM_TYPE.isEqualTo('expression'), undefined, 'inline', icons.watchExpressionRemove);\nregisterDebugViewMenuItem(MenuId.DebugWatchContext, REMOVE_WATCH_EXPRESSIONS_COMMAND_ID, REMOVE_WATCH_EXPRESSIONS_LABEL, 20, undefined, undefined, 'z_commands');\n\nregisterDebugViewMenuItem(MenuId.NotebookVariablesContext, COPY_NOTEBOOK_VARIABLE_VALUE_ID, COPY_NOTEBOOK_VARIABLE_VALUE_LABEL, 20, CONTEXT_VARIABLE_VALUE);\n\n// Touch Bar\nif (isMacintosh) {\n\n\tconst registerTouchBarEntry = (id: string, title: string | ICommandActionTitle, order: number, when: ContextKeyExpression | undefined, iconUri: URI) => {\n\t\tMenuRegistry.appendMenuItem(MenuId.TouchBarContext, {\n\t\t\tcommand: {\n\t\t\t\tid,\n\t\t\t\ttitle,\n\t\t\t\ticon: { dark: iconUri }\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.and(CONTEXT_DEBUGGERS_AVAILABLE, when),\n\t\t\tgroup: '9_debug',\n\t\t\torder\n\t\t});\n\t};\n\n\tregisterTouchBarEntry(DEBUG_RUN_COMMAND_ID, DEBUG_RUN_LABEL, 0, CONTEXT_IN_DEBUG_MODE.toNegated(), FileAccess.asFileUri('vs/workbench/contrib/debug/browser/media/continue-tb.png'));\n\tregisterTouchBarEntry(DEBUG_START_COMMAND_ID, DEBUG_START_LABEL, 1, CONTEXT_IN_DEBUG_MODE.toNegated(), FileAccess.asFileUri('vs/workbench/contrib/debug/browser/media/run-with-debugging-tb.png'));\n\tregisterTouchBarEntry(CONTINUE_ID, CONTINUE_LABEL, 0, CONTEXT_DEBUG_STATE.isEqualTo('stopped'), FileAccess.asFileUri('vs/workbench/contrib/debug/browser/media/continue-tb.png'));\n\tregisterTouchBarEntry(PAUSE_ID, PAUSE_LABEL, 1, ContextKeyExpr.and(CONTEXT_IN_DEBUG_MODE, ContextKeyExpr.and(CONTEXT_DEBUG_STATE.isEqualTo('running'), CONTEXT_FOCUSED_SESSION_IS_NO_DEBUG.toNegated())), FileAccess.asFileUri('vs/workbench/contrib/debug/browser/media/pause-tb.png'));\n\tregisterTouchBarEntry(STEP_OVER_ID, STEP_OVER_LABEL, 2, CONTEXT_IN_DEBUG_MODE, FileAccess.asFileUri('vs/workbench/contrib/debug/browser/media/stepover-tb.png'));\n\tregisterTouchBarEntry(STEP_INTO_ID, STEP_INTO_LABEL, 3, CONTEXT_IN_DEBUG_MODE, FileAccess.asFileUri('vs/workbench/contrib/debug/browser/media/stepinto-tb.png'));\n\tregisterTouchBarEntry(STEP_OUT_ID, STEP_OUT_LABEL, 4, CONTEXT_IN_DEBUG_MODE, FileAccess.asFileUri('vs/workbench/contrib/debug/browser/media/stepout-tb.png'));\n\tregisterTouchBarEntry(RESTART_SESSION_ID, RESTART_LABEL, 5, CONTEXT_IN_DEBUG_MODE, FileAccess.asFileUri('vs/workbench/contrib/debug/browser/media/restart-tb.png'));\n\tregisterTouchBarEntry(STOP_ID, STOP_LABEL, 6, CONTEXT_IN_DEBUG_MODE, FileAccess.asFileUri('vs/workbench/contrib/debug/browser/media/stop-tb.png'));\n}\n\n// Editor Title Menu's \"Run/Debug\" dropdown item\n\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, { submenu: MenuId.EditorTitleRun, rememberDefaultAction: true, title: nls.localize2('run', \"Run or Debug...\"), icon: icons.debugRun, group: 'navigation', order: -1 });\n\n// Debug menu\n\nMenuRegistry.appendMenuItem(MenuId.MenubarMainMenu, {\n\tsubmenu: MenuId.MenubarDebugMenu,\n\ttitle: {\n\t\t...nls.localize2('runMenu', \"Run\"),\n\t\tmnemonicTitle: nls.localize({ key: 'mRun', comment: ['&& denotes a mnemonic'] }, \"&&Run\")\n\t},\n\torder: 6\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarDebugMenu, {\n\tgroup: '1_debug',\n\tcommand: {\n\t\tid: DEBUG_START_COMMAND_ID,\n\t\ttitle: nls.localize({ key: 'miStartDebugging', comment: ['&& denotes a mnemonic'] }, \"&&Start Debugging\")\n\t},\n\torder: 1,\n\twhen: CONTEXT_DEBUGGERS_AVAILABLE\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarDebugMenu, {\n\tgroup: '1_debug',\n\tcommand: {\n\t\tid: DEBUG_RUN_COMMAND_ID,\n\t\ttitle: nls.localize({ key: 'miRun', comment: ['&& denotes a mnemonic'] }, \"Run &&Without Debugging\")\n\t},\n\torder: 2,\n\twhen: CONTEXT_DEBUGGERS_AVAILABLE\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarDebugMenu, {\n\tgroup: '1_debug',\n\tcommand: {\n\t\tid: STOP_ID,\n\t\ttitle: nls.localize({ key: 'miStopDebugging', comment: ['&& denotes a mnemonic'] }, \"&&Stop Debugging\"),\n\t\tprecondition: CONTEXT_IN_DEBUG_MODE\n\t},\n\torder: 3,\n\twhen: CONTEXT_DEBUGGERS_AVAILABLE\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarDebugMenu, {\n\tgroup: '1_debug',\n\tcommand: {\n\t\tid: RESTART_SESSION_ID,\n\t\ttitle: nls.localize({ key: 'miRestart Debugging', comment: ['&& denotes a mnemonic'] }, \"&&Restart Debugging\"),\n\t\tprecondition: CONTEXT_IN_DEBUG_MODE\n\t},\n\torder: 4,\n\twhen: CONTEXT_DEBUGGERS_AVAILABLE\n});\n\n// Configuration\n\nMenuRegistry.appendMenuItem(MenuId.MenubarDebugMenu, {\n\tgroup: '2_configuration',\n\tcommand: {\n\t\tid: ADD_CONFIGURATION_ID,\n\t\ttitle: nls.localize({ key: 'miAddConfiguration', comment: ['&& denotes a mnemonic'] }, \"A&&dd Configuration...\")\n\t},\n\torder: 2,\n\twhen: CONTEXT_DEBUGGERS_AVAILABLE\n});\n\n// Step Commands\nMenuRegistry.appendMenuItem(MenuId.MenubarDebugMenu, {\n\tgroup: '3_step',\n\tcommand: {\n\t\tid: STEP_OVER_ID,\n\t\ttitle: nls.localize({ key: 'miStepOver', comment: ['&& denotes a mnemonic'] }, \"Step &&Over\"),\n\t\tprecondition: CONTEXT_DEBUG_STATE.isEqualTo('stopped')\n\t},\n\torder: 1,\n\twhen: CONTEXT_DEBUGGERS_AVAILABLE\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarDebugMenu, {\n\tgroup: '3_step',\n\tcommand: {\n\t\tid: STEP_INTO_ID,\n\t\ttitle: nls.localize({ key: 'miStepInto', comment: ['&& denotes a mnemonic'] }, \"Step &&Into\"),\n\t\tprecondition: CONTEXT_DEBUG_STATE.isEqualTo('stopped')\n\t},\n\torder: 2,\n\twhen: CONTEXT_DEBUGGERS_AVAILABLE\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarDebugMenu, {\n\tgroup: '3_step',\n\tcommand: {\n\t\tid: STEP_OUT_ID,\n\t\ttitle: nls.localize({ key: 'miStepOut', comment: ['&& denotes a mnemonic'] }, \"Step O&&ut\"),\n\t\tprecondition: CONTEXT_DEBUG_STATE.isEqualTo('stopped')\n\t},\n\torder: 3,\n\twhen: CONTEXT_DEBUGGERS_AVAILABLE\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarDebugMenu, {\n\tgroup: '3_step',\n\tcommand: {\n\t\tid: CONTINUE_ID,\n\t\ttitle: nls.localize({ key: 'miContinue', comment: ['&& denotes a mnemonic'] }, \"&&Continue\"),\n\t\tprecondition: CONTEXT_DEBUG_STATE.isEqualTo('stopped')\n\t},\n\torder: 4,\n\twhen: CONTEXT_DEBUGGERS_AVAILABLE\n});\n\n// New Breakpoints\n\nMenuRegistry.appendMenuItem(MenuId.MenubarNewBreakpointMenu, {\n\tgroup: '1_breakpoints',\n\tcommand: {\n\t\tid: TOGGLE_INLINE_BREAKPOINT_ID,\n\t\ttitle: nls.localize({ key: 'miInlineBreakpoint', comment: ['&& denotes a mnemonic'] }, \"Inline Breakp&&oint\")\n\t},\n\torder: 2,\n\twhen: CONTEXT_DEBUGGERS_AVAILABLE\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarDebugMenu, {\n\tgroup: '4_new_breakpoint',\n\ttitle: nls.localize({ key: 'miNewBreakpoint', comment: ['&& denotes a mnemonic'] }, \"&&New Breakpoint\"),\n\tsubmenu: MenuId.MenubarNewBreakpointMenu,\n\torder: 2,\n\twhen: CONTEXT_DEBUGGERS_AVAILABLE\n});\n\n// Breakpoint actions are registered from breakpointsView.ts\n\n// Install Debuggers\nMenuRegistry.appendMenuItem(MenuId.MenubarDebugMenu, {\n\tgroup: 'z_install',\n\tcommand: {\n\t\tid: 'debug.installAdditionalDebuggers',\n\t\ttitle: nls.localize({ key: 'miInstallAdditionalDebuggers', comment: ['&& denotes a mnemonic'] }, \"&&Install Additional Debuggers...\")\n\t},\n\torder: 1\n});\n\n// register repl panel\n\nconst VIEW_CONTAINER: ViewContainer = Registry.as<IViewContainersRegistry>(ViewExtensions.ViewContainersRegistry).registerViewContainer({\n\tid: DEBUG_PANEL_ID,\n\ttitle: nls.localize2({ comment: ['Debug is a noun in this context, not a verb.'], key: 'debugPanel' }, \"Debug Console\"),\n\ticon: icons.debugConsoleViewIcon,\n\tctorDescriptor: new SyncDescriptor(ViewPaneContainer, [DEBUG_PANEL_ID, { mergeViewWithContainerWhenSingleView: true }]),\n\tstorageId: DEBUG_PANEL_ID,\n\thideIfEmpty: true,\n\torder: 2,\n}, ViewContainerLocation.Panel, { doNotRegisterOpenCommand: true });\n\nRegistry.as<IViewsRegistry>(ViewExtensions.ViewsRegistry).registerViews([{\n\tid: REPL_VIEW_ID,\n\tname: nls.localize2({ comment: ['Debug is a noun in this context, not a verb.'], key: 'debugPanel' }, \"Debug Console\"),\n\tcontainerIcon: icons.debugConsoleViewIcon,\n\tcanToggleVisibility: false,\n\tcanMoveView: true,\n\twhen: CONTEXT_DEBUGGERS_AVAILABLE,\n\tctorDescriptor: new SyncDescriptor(Repl),\n\topenCommandActionDescriptor: {\n\t\tid: 'workbench.debug.action.toggleRepl',\n\t\tmnemonicTitle: nls.localize({ key: 'miToggleDebugConsole', comment: ['&& denotes a mnemonic'] }, \"De&&bug Console\"),\n\t\tkeybindings: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyY },\n\t\torder: 2\n\t}\n}], VIEW_CONTAINER);\n\n\nconst viewContainer = Registry.as<IViewContainersRegistry>(ViewExtensions.ViewContainersRegistry).registerViewContainer({\n\tid: VIEWLET_ID,\n\ttitle: nls.localize2('run and debug', \"Run and Debug\"),\n\topenCommandActionDescriptor: {\n\t\tid: VIEWLET_ID,\n\t\tmnemonicTitle: nls.localize({ key: 'miViewRun', comment: ['&& denotes a mnemonic'] }, \"&&Run\"),\n\t\tkeybindings: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyD },\n\t\torder: 3\n\t},\n\tctorDescriptor: new SyncDescriptor(DebugViewPaneContainer),\n\ticon: icons.runViewIcon,\n\talwaysUseContainerInfo: true,\n\torder: 3,\n}, ViewContainerLocation.Sidebar);\n\n// Register default debug views\nconst viewsRegistry = Registry.as<IViewsRegistry>(ViewExtensions.ViewsRegistry);\nviewsRegistry.registerViews([{ id: VARIABLES_VIEW_ID, name: nls.localize2('variables', \"Variables\"), containerIcon: icons.variablesViewIcon, ctorDescriptor: new SyncDescriptor(VariablesView), order: 10, weight: 40, canToggleVisibility: true, canMoveView: true, focusCommand: { id: 'workbench.debug.action.focusVariablesView' }, when: CONTEXT_DEBUG_UX.isEqualTo('default') }], viewContainer);\nviewsRegistry.registerViews([{ id: WATCH_VIEW_ID, name: nls.localize2('watch', \"Watch\"), containerIcon: icons.watchViewIcon, ctorDescriptor: new SyncDescriptor(WatchExpressionsView), order: 20, weight: 10, canToggleVisibility: true, canMoveView: true, focusCommand: { id: 'workbench.debug.action.focusWatchView' }, when: CONTEXT_DEBUG_UX.isEqualTo('default') }], viewContainer);\nviewsRegistry.registerViews([{ id: CALLSTACK_VIEW_ID, name: nls.localize2('callStack', \"Call Stack\"), containerIcon: icons.callStackViewIcon, ctorDescriptor: new SyncDescriptor(CallStackView), order: 30, weight: 30, canToggleVisibility: true, canMoveView: true, focusCommand: { id: 'workbench.debug.action.focusCallStackView' }, when: CONTEXT_DEBUG_UX.isEqualTo('default') }], viewContainer);\nviewsRegistry.registerViews([{ id: BREAKPOINTS_VIEW_ID, name: nls.localize2('breakpoints', \"Breakpoints\"), containerIcon: icons.breakpointsViewIcon, ctorDescriptor: new SyncDescriptor(BreakpointsView), order: 40, weight: 20, canToggleVisibility: true, canMoveView: true, focusCommand: { id: 'workbench.debug.action.focusBreakpointsView' }, when: ContextKeyExpr.or(CONTEXT_BREAKPOINTS_EXIST, CONTEXT_DEBUG_UX.isEqualTo('default'), CONTEXT_HAS_DEBUGGED) }], viewContainer);\nviewsRegistry.registerViews([{ id: WelcomeView.ID, name: WelcomeView.LABEL, containerIcon: icons.runViewIcon, ctorDescriptor: new SyncDescriptor(WelcomeView), order: 1, weight: 40, canToggleVisibility: true, when: CONTEXT_DEBUG_UX.isEqualTo('simple') }], viewContainer);\nviewsRegistry.registerViews([{ id: LOADED_SCRIPTS_VIEW_ID, name: nls.localize2('loadedScripts', \"Loaded Scripts\"), containerIcon: icons.loadedScriptsViewIcon, ctorDescriptor: new SyncDescriptor(LoadedScriptsView), order: 35, weight: 5, canToggleVisibility: true, canMoveView: true, collapsed: true, when: ContextKeyExpr.and(CONTEXT_LOADED_SCRIPTS_SUPPORTED, CONTEXT_DEBUG_UX.isEqualTo('default')) }], viewContainer);\n\n// Register disassembly view\n\nRegistry.as<IEditorPaneRegistry>(EditorExtensions.EditorPane).registerEditorPane(\n\tEditorPaneDescriptor.create(DisassemblyView, DISASSEMBLY_VIEW_ID, nls.localize('disassembly', \"Disassembly\")),\n\t[new SyncDescriptor(DisassemblyViewInput)]\n);\n\n// Register configuration\nconst configurationRegistry = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration);\nconfigurationRegistry.registerConfiguration({\n\tid: 'debug',\n\torder: 20,\n\ttitle: nls.localize('debugConfigurationTitle', \"Debug\"),\n\ttype: 'object',\n\tproperties: {\n\t\t'debug.showVariableTypes': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize({ comment: ['This is the description for a setting'], key: 'showVariableTypes' }, \"Show variable type in variable pane during debug session\"),\n\t\t\tdefault: false\n\t\t},\n\t\t'debug.allowBreakpointsEverywhere': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize({ comment: ['This is the description for a setting'], key: 'allowBreakpointsEverywhere' }, \"Allow setting breakpoints in any file.\"),\n\t\t\tdefault: false\n\t\t},\n\t\t'debug.gutterMiddleClickAction': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['logpoint', 'conditionalBreakpoint', 'triggeredBreakpoint', 'none'],\n\t\t\tdescription: nls.localize({ comment: ['This is the description for a setting'], key: 'gutterMiddleClickAction' }, 'Controls the action to perform when clicking the editor gutter with the middle mouse button.'),\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('debug.gutterMiddleClickAction.logpoint', \"Add Logpoint.\"),\n\t\t\t\tnls.localize('debug.gutterMiddleClickAction.conditionalBreakpoint', \"Add Conditional Breakpoint.\"),\n\t\t\t\tnls.localize('debug.gutterMiddleClickAction.triggeredBreakpoint', \"Add Triggered Breakpoint.\"),\n\t\t\t\tnls.localize('debug.gutterMiddleClickAction.none', \"Don't perform any action.\"),\n\t\t\t],\n\t\t\tdefault: 'logpoint',\n\t\t},\n\t\t'debug.openExplorerOnEnd': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize({ comment: ['This is the description for a setting'], key: 'openExplorerOnEnd' }, \"Automatically open the explorer view at the end of a debug session.\"),\n\t\t\tdefault: false\n\t\t},\n\t\t'debug.closeReadonlyTabsOnEnd': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize({ comment: ['This is the description for a setting'], key: 'closeReadonlyTabsOnEnd' }, \"At the end of a debug session, all the read-only tabs associated with that session will be closed\"),\n\t\t\tdefault: false\n\t\t},\n\t\t'debug.inlineValues': {\n\t\t\ttype: 'string',\n\t\t\t'enum': ['on', 'off', 'auto'],\n\t\t\tdescription: nls.localize({ comment: ['This is the description for a setting'], key: 'inlineValues' }, \"Show variable values inline in editor while debugging.\"),\n\t\t\t'enumDescriptions': [\n\t\t\t\tnls.localize('inlineValues.on', \"Always show variable values inline in editor while debugging.\"),\n\t\t\t\tnls.localize('inlineValues.off', \"Never show variable values inline in editor while debugging.\"),\n\t\t\t\tnls.localize('inlineValues.focusNoScroll', \"Show variable values inline in editor while debugging when the language supports inline value locations.\"),\n\t\t\t],\n\t\t\tdefault: 'auto'\n\t\t},\n\t\t'debug.toolBarLocation': {\n\t\t\tenum: ['floating', 'docked', 'commandCenter', 'hidden'],\n\t\t\tmarkdownDescription: nls.localize({ comment: ['This is the description for a setting'], key: 'toolBarLocation' }, \"Controls the location of the debug toolbar. Either `floating` in all views, `docked` in the debug view, `commandCenter` (requires {0}), or `hidden`.\", '`#window.commandCenter#`'),\n\t\t\tdefault: 'floating',\n\t\t\tmarkdownEnumDescriptions: [\n\t\t\t\tnls.localize('debugToolBar.floating', \"Show debug toolbar in all views.\"),\n\t\t\t\tnls.localize('debugToolBar.docked', \"Show debug toolbar only in debug views.\"),\n\t\t\t\tnls.localize('debugToolBar.commandCenter', \"`(Experimental)` Show debug toolbar in the command center.\"),\n\t\t\t\tnls.localize('debugToolBar.hidden', \"Do not show debug toolbar.\"),\n\t\t\t]\n\t\t},\n\t\t'debug.showInStatusBar': {\n\t\t\tenum: ['never', 'always', 'onFirstSessionStart'],\n\t\t\tenumDescriptions: [nls.localize('never', \"Never show debug in Status bar\"), nls.localize('always', \"Always show debug in Status bar\"), nls.localize('onFirstSessionStart', \"Show debug in Status bar only after debug was started for the first time\")],\n\t\t\tdescription: nls.localize({ comment: ['This is the description for a setting'], key: 'showInStatusBar' }, \"Controls when the debug Status bar should be visible.\"),\n\t\t\tdefault: 'onFirstSessionStart'\n\t\t},\n\t\t'debug.internalConsoleOptions': INTERNAL_CONSOLE_OPTIONS_SCHEMA,\n\t\t'debug.console.closeOnEnd': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('debug.console.closeOnEnd', \"Controls if the Debug Console should be automatically closed when the debug session ends.\"),\n\t\t\tdefault: false\n\t\t},\n\t\t'debug.terminal.clearBeforeReusing': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize({ comment: ['This is the description for a setting'], key: 'debug.terminal.clearBeforeReusing' }, \"Before starting a new debug session in an integrated or external terminal, clear the terminal.\"),\n\t\t\tdefault: false\n\t\t},\n\t\t'debug.openDebug': {\n\t\t\tenum: ['neverOpen', 'openOnSessionStart', 'openOnFirstSessionStart', 'openOnDebugBreak'],\n\t\t\tdefault: 'openOnDebugBreak',\n\t\t\tdescription: nls.localize('openDebug', \"Controls when the debug view should open.\")\n\t\t},\n\t\t'debug.showSubSessionsInToolBar': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize({ comment: ['This is the description for a setting'], key: 'showSubSessionsInToolBar' }, \"Controls whether the debug sub-sessions are shown in the debug tool bar. When this setting is false the stop command on a sub-session will also stop the parent session.\"),\n\t\t\tdefault: false\n\t\t},\n\t\t'debug.console.fontSize': {\n\t\t\ttype: 'number',\n\t\t\tdescription: nls.localize('debug.console.fontSize', \"Controls the font size in pixels in the Debug Console.\"),\n\t\t\tdefault: isMacintosh ? 12 : 14,\n\t\t},\n\t\t'debug.console.fontFamily': {\n\t\t\ttype: 'string',\n\t\t\tdescription: nls.localize('debug.console.fontFamily', \"Controls the font family in the Debug Console.\"),\n\t\t\tdefault: 'default'\n\t\t},\n\t\t'debug.console.lineHeight': {\n\t\t\ttype: 'number',\n\t\t\tdescription: nls.localize('debug.console.lineHeight', \"Controls the line height in pixels in the Debug Console. Use 0 to compute the line height from the font size.\"),\n\t\t\tdefault: 0\n\t\t},\n\t\t'debug.console.wordWrap': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('debug.console.wordWrap', \"Controls if the lines should wrap in the Debug Console.\"),\n\t\t\tdefault: true\n\t\t},\n\t\t'debug.console.historySuggestions': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('debug.console.historySuggestions', \"Controls if the Debug Console should suggest previously typed input.\"),\n\t\t\tdefault: true\n\t\t},\n\t\t'debug.console.collapseIdenticalLines': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('debug.console.collapseIdenticalLines', \"Controls if the Debug Console should collapse identical lines and show a number of occurrences with a badge.\"),\n\t\t\tdefault: true\n\t\t},\n\t\t'debug.console.acceptSuggestionOnEnter': {\n\t\t\tenum: ['off', 'on'],\n\t\t\tdescription: nls.localize('debug.console.acceptSuggestionOnEnter', \"Controls whether suggestions should be accepted on Enter in the Debug Console. Enter is also used to evaluate whatever is typed in the Debug Console.\"),\n\t\t\tdefault: 'off'\n\t\t},\n\t\t'launch': {\n\t\t\ttype: 'object',\n\t\t\tdescription: nls.localize({ comment: ['This is the description for a setting'], key: 'launch' }, \"Global debug launch configuration. Should be used as an alternative to 'launch.json' that is shared across workspaces.\"),\n\t\t\tdefault: { configurations: [], compounds: [] },\n\t\t\t$ref: launchSchemaId,\n\t\t\tdisallowConfigurationDefault: true\n\t\t},\n\t\t'debug.focusWindowOnBreak': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('debug.focusWindowOnBreak', \"Controls whether the workbench window should be focused when the debugger breaks.\"),\n\t\t\tdefault: true\n\t\t},\n\t\t'debug.focusEditorOnBreak': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('debug.focusEditorOnBreak', \"Controls whether the editor should be focused when the debugger breaks.\"),\n\t\t\tdefault: true\n\t\t},\n\t\t'debug.onTaskErrors': {\n\t\t\tenum: ['debugAnyway', 'showErrors', 'prompt', 'abort'],\n\t\t\tenumDescriptions: [nls.localize('debugAnyway', \"Ignore task errors and start debugging.\"), nls.localize('showErrors', \"Show the Problems view and do not start debugging.\"), nls.localize('prompt', \"Prompt user.\"), nls.localize('cancel', \"Cancel debugging.\")],\n\t\t\tdescription: nls.localize('debug.onTaskErrors', \"Controls what to do when errors are encountered after running a preLaunchTask.\"),\n\t\t\tdefault: 'prompt'\n\t\t},\n\t\t'debug.showBreakpointsInOverviewRuler': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize({ comment: ['This is the description for a setting'], key: 'showBreakpointsInOverviewRuler' }, \"Controls whether breakpoints should be shown in the overview ruler.\"),\n\t\t\tdefault: false\n\t\t},\n\t\t'debug.showInlineBreakpointCandidates': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize({ comment: ['This is the description for a setting'], key: 'showInlineBreakpointCandidates' }, \"Controls whether inline breakpoints candidate decorations should be shown in the editor while debugging.\"),\n\t\t\tdefault: true\n\t\t},\n\t\t'debug.saveBeforeStart': {\n\t\t\tdescription: nls.localize('debug.saveBeforeStart', \"Controls what editors to save before starting a debug session.\"),\n\t\t\tenum: ['allEditorsInActiveGroup', 'nonUntitledEditorsInActiveGroup', 'none'],\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('debug.saveBeforeStart.allEditorsInActiveGroup', \"Save all editors in the active group before starting a debug session.\"),\n\t\t\t\tnls.localize('debug.saveBeforeStart.nonUntitledEditorsInActiveGroup', \"Save all editors in the active group except untitled ones before starting a debug session.\"),\n\t\t\t\tnls.localize('debug.saveBeforeStart.none', \"Don't save any editors before starting a debug session.\"),\n\t\t\t],\n\t\t\tdefault: 'allEditorsInActiveGroup',\n\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE\n\t\t},\n\t\t'debug.confirmOnExit': {\n\t\t\tdescription: nls.localize('debug.confirmOnExit', \"Controls whether to confirm when the window closes if there are active debug sessions.\"),\n\t\t\ttype: 'string',\n\t\t\tenum: ['never', 'always'],\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('debug.confirmOnExit.never', \"Never confirm.\"),\n\t\t\t\tnls.localize('debug.confirmOnExit.always', \"Always confirm if there are debug sessions.\"),\n\t\t\t],\n\t\t\tdefault: 'never'\n\t\t},\n\t\t'debug.disassemblyView.showSourceCode': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tdescription: nls.localize('debug.disassemblyView.showSourceCode', \"Show Source Code in Disassembly View.\")\n\t\t},\n\t\t'debug.autoExpandLazyVariables': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['auto', 'on', 'off'],\n\t\t\tdefault: 'auto',\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('debug.autoExpandLazyVariables.auto', \"When in screen reader optimized mode, automatically expand lazy variables.\"),\n\t\t\t\tnls.localize('debug.autoExpandLazyVariables.on', \"Always automatically expand lazy variables.\"),\n\t\t\t\tnls.localize('debug.autoExpandLazyVariables.off', \"Never automatically expand lazy variables.\")\n\t\t\t],\n\t\t\tdescription: nls.localize('debug.autoExpandLazyVariables', \"Controls whether variables that are lazily resolved, such as getters, are automatically resolved and expanded by the debugger.\")\n\t\t},\n\t\t'debug.enableStatusBarColor': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('debug.enableStatusBarColor', \"Color of the Status bar when debugger is active.\"),\n\t\t\tdefault: true\n\t\t},\n\t\t'debug.hideLauncherWhileDebugging': {\n\t\t\ttype: 'boolean',\n\t\t\tmarkdownDescription: nls.localize({ comment: ['This is the description for a setting'], key: 'debug.hideLauncherWhileDebugging' }, \"Hide 'Start Debugging' control in title bar of 'Run and Debug' view while debugging is active. Only relevant when {0} is not `docked`.\", '`#debug.toolBarLocation#`'),\n\t\t\tdefault: false\n\t\t}\n\t}\n});\n\nAccessibleViewRegistry.register(new ReplAccessibleView());\nAccessibleViewRegistry.register(new ReplAccessibilityHelp());\nAccessibleViewRegistry.register(new RunAndDebugAccessibilityHelp());\nregisterWorkbenchContribution2(ReplAccessibilityAnnouncer.ID, ReplAccessibilityAnnouncer, WorkbenchPhase.AfterRestored);\nregisterWorkbenchContribution2(DebugWatchAccessibilityAnnouncer.ID, DebugWatchAccessibilityAnnouncer, WorkbenchPhase.AfterRestored);\n"],
  "mappings": ";;AAKA,SAAS,SAAS,cAAc;AAChC,SAAS,kBAAkB;AAC3B,SAAS,aAAa,aAAa;AACnC,SAAS,WAAW;AACpB,OAAO;AACP,OAAO;AACP,SAAS,iCAAiC,kCAAkC;AAC5E,YAAY,SAAS;AACrB,SAAS,8BAA8B;AACvC,SAAS,qBAAqB,YAAY;AAC1C,SAAS,QAAQ,oBAAoB;AACrC,SAAS,cAAc,yBAAyB,oBAAoB,8BAA8B;AAClG,SAAS,gBAAgB,4BAA4B;AACrD,SAAS,sBAAsB;AAC/B,SAAS,mBAAmB,yBAAyB;AACrD,SAAS,sBAAsB,cAAc,6BAA6B;AAC1E,SAAS,gBAAgB;AACzB,SAAS,sBAAsB,2BAA2B;AAC1D,SAAS,yBAAyB;AAClC,SAAS,iCAAiC,gCAAgC,cAAc,qBAAqB,sBAAsB;AACnI,SAAS,wBAAwB;AACjC,SAAS,yBAAyB,gBAAgB,eAAe,uBAAuB,cAAc,sBAAsB;AAC5H,SAAS,oCAAoC;AAC7C,SAAS,uBAAuB;AAChC,SAAS,mCAAmC;AAC5C,SAAS,qBAAqB;AAC9B,SAAS,0BAA0B;AACnC,SAAS,sBAAsB;AAC/B,SAAS,sBAAsB,iBAAiB,oBAAoB,qBAAqB,wBAAwB,mBAAmB,sBAAsB,kBAAkB,qBAAqB,iBAAiB,oBAAoB,aAAa,gBAAgB,uBAAuB,0BAA0B,qBAAqB,eAAe,kBAAkB,wBAAwB,mCAAmC,2BAA2B,sBAAsB,iBAAiB,wBAAwB,mBAAmB,2BAA2B,8BAA8B,eAAe,kBAAkB,4BAA4B,eAAe,mBAAmB,uBAAuB,0BAA0B,2BAA2B,UAAU,aAAa,uBAAuB,0BAA0B,8BAA8B,kBAAkB,eAAe,oBAAoB,qBAAqB,wBAAwB,yBAAyB,4BAA4B,yBAAyB,4BAA4B,2BAA2B,wBAAwB,cAAc,iBAAiB,qBAAqB,wBAAwB,aAAa,gBAAgB,cAAc,iBAAiB,SAAS,YAAY,qBAAqB,mCAAmC;AAChzC,SAAS,+BAA+B;AACxC,SAAS,mBAAmB,uBAAuB,yCAAyC;AAC5F,SAAS,+BAA+B;AACxC,YAAY,WAAW;AACvB,SAAS,iCAAiC;AAC1C,SAAS,qCAAqC;AAC9C,SAAS,oBAAoB;AAC7B,SAAS,+BAA+B;AACxC,SAAS,8BAA8B;AACvC,SAAS,oBAAoB;AAC7B,SAAS,8BAA8B;AACvC,SAAS,iBAAiB,mCAAmC;AAC7D,SAAS,yBAAyB;AAClC,SAAS,YAAY;AACrB,SAAS,8BAA8B;AACvC,SAAS,6BAA6B,iCAAiC,6BAA6B,iBAAiB,gBAAgB,qBAAqB;AAC1J,SAAS,cAAc,iBAAiB,qCAAqC,gCAAgC,4BAA4B;AACzI,SAAS,mBAAmB;AAC5B,SAAS,qBAAqB,mCAAmC,mBAAmB,2BAA2B,4CAA4C,gDAAgD,4CAA4C,6BAA6B,yBAAyB,6BAA6B,qBAAqB,kBAAkB,mCAAmC,qCAAqC,sBAAsB,uBAAuB,kCAAkC,kCAAkC,iCAAiC,kCAAkC,gCAAgC,sCAAsC,qCAAqC,oCAAoC,sCAAsC,wCAAwC,8BAA8B,wBAAwB,yBAAyB,gBAAgB,qBAAqB,wBAAwB,eAAe,iCAAiC,wBAAwB,cAAc,OAAO,mBAAmB,YAAY,eAAe,qBAAqB;AACtnC,SAAS,4BAA4B;AACrC,SAAS,sBAAsB;AAC/B,SAAS,wBAAwB,+BAA+B;AAChE,SAAS,4BAA4B;AACrC,SAAS,iCAAiC,0CAA0C;AACpF,SAAS,sBAAsB;AAC/B,SAAS,sBAAsB;AAC/B,OAAO;AACP,SAAS,6BAA6B;AACtC,SAAS,kCAAkC;AAC3C,SAAS,oCAAoC;AAC7C,SAAS,wCAAwC;AAEjD,MAAM,gBAAgB,IAAI,SAAS,iBAAiB,OAAO;AAC3D,eAAe;AACf,kBAAkB,eAAe,cAAc,kBAAkB,OAAO;AACxE,kBAAkB,yBAAyB,wBAAwB,kBAAkB,OAAO;AAG5F,SAAS,GAAoC,oBAAoB,SAAS,EAAE,8BAA8B,yBAAyB,eAAe,UAAU;AAC5J,SAAS,GAAoC,oBAAoB,SAAS,EAAE,8BAA8B,2BAA2B,eAAe,UAAU;AAC9J,IAAI,OAAO;AACV,WAAS,GAAoC,oBAAoB,SAAS,EAAE,8BAA8B,wBAAwB,eAAe,UAAU;AAC5J;AACA,SAAS,GAAoC,oBAAoB,SAAS,EAAE,8BAA8B,cAAc,eAAe,QAAQ;AAC/I,SAAS,GAAoC,oBAAoB,SAAS,EAAE,8BAA8B,sBAAsB,eAAe,UAAU;AACzJ,SAAS,GAAoC,oBAAoB,SAAS,EAAE,8BAA8B,wBAAwB,eAAe,UAAU;AAC3J,SAAS,GAAoC,oBAAoB,SAAS,EAAE,8BAA8B,6BAA6B,eAAe,UAAU;AAChK,SAAS,GAAoC,oBAAoB,SAAS,EAAE,8BAA8B,gBAAgB,eAAe,UAAU;AAGnJ,SAAS,GAAyB,sBAAsB,WAAW,EAAE,4BAA4B;AAAA,EAChG,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,YAAY;AAAA,EACZ,aAAa,IAAI,SAAS,yBAAyB,iDAAiD;AAAA,EACpG,aAAa,CAAC;AAAA,IACb,aAAa,IAAI,SAAS,sBAAsB,iBAAiB;AAAA,IACjE,WAAW;AAAA,IACX,oBAAoB;AAAA,EACrB,CAAC;AACF,CAAC;AAGD,SAAS,GAAyB,sBAAsB,WAAW,EAAE,4BAA4B;AAAA,EAChG,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,YAAY;AAAA,EACZ,aAAa,IAAI,SAAS,+BAA+B,2CAA2C;AAAA,EACpG,aAAa,CAAC,EAAE,aAAa,IAAI,SAAS,wBAAwB,yBAAyB,GAAG,WAAW,wBAAwB,CAAC;AACnI,CAAC;AAED,2BAA2B,4BAA4B,6BAA6B,gCAAgC,gBAAgB;AACpI,2BAA2B,mCAAmC,8BAA8B,gCAAgC,gBAAgB;AAC5I,2BAA2B,wBAAwB,yBAAyB,gCAAgC,sBAAsB;AAElI,MAAM,kCAAkC,wBAAC,IAAY,OAA4B,MAA6B,iBAAwC;AACrJ,eAAa,eAAe,OAAO,gBAAgB;AAAA,IAClD,MAAM,eAAe,IAAI,6BAA6B,IAAI;AAAA,IAC1D,OAAO;AAAA,IACP,SAAS;AAAA,MACR;AAAA,MACA;AAAA,MACA,UAAU;AAAA,MACV;AAAA,IACD;AAAA,EACD,CAAC;AACF,GAXwC;AAaxC,gCAAgC,oBAAoB,aAAa;AACjE,gCAAgC,qBAAqB,IAAI,UAAU,mBAAmB,kBAAkB,GAAG,qBAAqB;AAChI,gCAAgC,cAAc,iBAAiB,uBAAuB,oBAAoB,UAAU,SAAS,CAAC;AAC9H,gCAAgC,cAAc,iBAAiB,uBAAuB,oBAAoB,UAAU,SAAS,CAAC;AAC9H,gCAAgC,qBAAqB,wBAAwB,uBAAuB,eAAe,IAAI,qCAAqC,uBAAuB,oBAAoB,UAAU,SAAS,CAAC,CAAC;AAC5N,gCAAgC,aAAa,gBAAgB,uBAAuB,oBAAoB,UAAU,SAAS,CAAC;AAC5H,gCAAgC,UAAU,aAAa,uBAAuB,eAAe,IAAI,oBAAoB,UAAU,SAAS,GAAG,oCAAoC,UAAU,CAAC,CAAC;AAC3L,gCAAgC,eAAe,kBAAkB,uBAAuB,eAAe,GAAG,mCAAmC,oCAAoC,CAAC;AAClL,gCAAgC,2BAA2B,8BAA8B,uBAAuB,eAAe,GAAG,mCAAmC,eAAe,IAAI,oCAAoC,oCAAoC,CAAC,CAAC;AAClQ,gCAAgC,SAAS,YAAY,uBAAuB,eAAe,GAAG,kCAAkC,UAAU,GAAG,oCAAoC,CAAC;AAClL,gCAAgC,aAAa,gBAAgB,uBAAuB,oBAAoB,UAAU,SAAS,CAAC;AAC5H,gCAAgC,eAAe,IAAI,UAAU,EAAE,SAAS,CAAC,8CAA8C,GAAG,KAAK,oBAAoB,GAAG,6BAA6B,CAAC;AACpL,gCAAgC,mBAAmB,IAAI,UAAU,gBAAgB,gBAAgB,GAAG,gCAAgC;AACpI,gCAAgC,mBAAmB,IAAI,UAAU,oBAAoB,oBAAoB,GAAG,gCAAgC;AAC5I,gCAAgC,kBAAkB,IAAI,kBAAkB,OAAO,2BAA2B;AAC1G,gCAAgC,sBAAsB,IAAI,sBAAsB,OAAO,qBAAqB;AAC5G,gCAAgC,kCAAkC,IAAI,kCAAkC,KAAK;AAC7G,gCAAgC,6BAA6B,IAAI,UAAU,oBAAoB,mBAAmB,CAAC;AACnH,gCAAgC,wBAAwB,mBAAmB,eAAe,IAAI,6BAA6B,oBAAoB,YAAY,cAAc,MAAM,YAAY,CAAC,CAAC,CAAC;AAC9L,gCAAgC,sBAAsB,iBAAiB,eAAe,IAAI,6BAA6B,oBAAoB,YAAY,cAAc,MAAM,YAAY,CAAC,CAAC,CAAC;AAC1L,gCAAgC,qBAAqB,wBAAwB,eAAe,IAAI,6BAA6B,oBAAoB,YAAY,cAAc,MAAM,YAAY,CAAC,CAAC,CAAC;AAChM,gCAAgC,uBAAuB,wBAAwB;AAC/E,gCAAgC,uBAAuB,wBAAwB;AAC/E,gCAAgC,wBAAwB,2BAA2B,qBAAqB;AACxG,gCAAgC,yBAAyB,0BAA0B;AACnF,gCAAgC,yBAAyB,0BAA0B;AACnF,gCAAgC,kBAAkB,qBAAqB,uBAAuB,oBAAoB,UAAU,SAAS,CAAC;AACtI,gCAAgC,qBAAqB,wBAAwB,uBAAuB,oBAAoB,UAAU,SAAS,CAAC;AAC5I,gCAAgC,iBAAiB,oBAAoB,uBAAuB,oBAAoB,UAAU,SAAS,CAAC;AACpI,gCAAgC,mBAAmB,sBAAsB,uBAAuB,oBAAoB,UAAU,SAAS,CAAC;AAGxI,MAAM,4BAA4B,wBAAC,QAAgB,IAAY,OAAqC,OAAe,MAA6B,cAAqC,QAAQ,cAAc,SAAgB;AAC1N,eAAa,eAAe,QAAQ;AAAA,IACnC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,SAAS;AAAA,MACR;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD,CAAC;AACF,GAbkC;AAclC,0BAA0B,OAAO,uBAAuB,oBAAoB,eAAe,IAAI,4BAA4B,UAAU,SAAS,GAAG,QAAW,gBAAgB;AAC5K,0BAA0B,OAAO,uBAAuB,eAAe,kBAAkB,IAAI,4BAA4B,UAAU,SAAS,GAAG,QAAW,gBAAgB;AAC1K,0BAA0B,OAAO,uBAAuB,2BAA2B,8BAA8B,IAAI,eAAe,IAAI,4BAA4B,UAAU,SAAS,GAAG,oCAAoC,oCAAoC,GAAG,QAAW,gBAAgB;AAChS,0BAA0B,OAAO,uBAAuB,SAAS,YAAY,IAAI,4BAA4B,UAAU,SAAS,GAAG,QAAW,gBAAgB;AAC9J,0BAA0B,OAAO,uBAAuB,UAAU,aAAa,IAAI,eAAe,IAAI,4BAA4B,UAAU,QAAQ,GAAG,eAAe,IAAI,oBAAoB,UAAU,SAAS,GAAG,oCAAoC,UAAU,CAAC,CAAC,CAAC;AACrQ,0BAA0B,OAAO,uBAAuB,aAAa,gBAAgB,IAAI,eAAe,IAAI,4BAA4B,UAAU,QAAQ,GAAG,oBAAoB,UAAU,SAAS,CAAC,CAAC;AACtM,0BAA0B,OAAO,uBAAuB,cAAc,iBAAiB,IAAI,4BAA4B,UAAU,QAAQ,GAAG,oBAAoB,UAAU,SAAS,CAAC;AACpL,0BAA0B,OAAO,uBAAuB,cAAc,iBAAiB,IAAI,4BAA4B,UAAU,QAAQ,GAAG,oBAAoB,UAAU,SAAS,CAAC;AACpL,0BAA0B,OAAO,uBAAuB,aAAa,gBAAgB,IAAI,4BAA4B,UAAU,QAAQ,GAAG,oBAAoB,UAAU,SAAS,CAAC;AAClL,0BAA0B,OAAO,uBAAuB,qBAAqB,IAAI,SAAS,mBAAmB,kBAAkB,GAAG,IAAI,4BAA4B,UAAU,QAAQ,GAAG,QAAW,aAAa;AAC/M,0BAA0B,OAAO,uBAAuB,kBAAkB,IAAI,SAAS,gBAAgB,eAAe,GAAG,IAAI,eAAe,IAAI,4BAA4B,UAAU,YAAY,GAAG,+BAA+B,GAAG,oCAAoC;AAC3Q,0BAA0B,OAAO,uBAAuB,qBAAqB,IAAI,SAAS,kBAAkB,iBAAiB,GAAG,IAAI,4BAA4B,UAAU,YAAY,GAAG,QAAW,gBAAgB;AAEpN,0BAA0B,OAAO,uBAAuB,gBAAgB,IAAI,SAAS,cAAc,kBAAkB,GAAG,IAAI,yBAAyB,uBAAuB,UAAU,MAAM,kBAAkB;AAC9M,0BAA0B,OAAO,uBAAuB,iBAAiB,IAAI,SAAS,YAAY,WAAW,GAAG,IAAI,eAAe,GAAG,gCAAgC,eAAe,IAAI,wCAAwC,gCAAgC,CAAC,GAAG,6BAA6B,UAAU,GAAG,gBAAgB;AAC/T,0BAA0B,OAAO,uBAAuB,eAAe,kBAAkB,IAAI,QAAW,QAAW,gBAAgB;AACnI,0BAA0B,OAAO,uBAAuB,uBAAuB,0BAA0B,IAAI,wCAAwC,QAAW,gBAAgB;AAChL,0BAA0B,OAAO,uBAAuB,iBAAiB,oBAAoB,KAAK,wCAAwC,QAAW,YAAY;AACjK,0BAA0B,OAAO,uBAAuB,6BAA6B,IAAI,SAAS,wBAAwB,qBAAqB,GAAG,KAAK,4CAA4C,QAAW,YAAY;AAC1N,0BAA0B,OAAO,uBAAuB,6BAA6B,IAAI,SAAS,yBAAyB,uBAAuB,GAAG,KAAK,4CAA4C,QAAW,YAAY;AAC7N,0BAA0B,OAAO,uBAAuB,iCAAiC,IAAI,SAAS,4BAA4B,uBAAuB,GAAG,KAAK,gDAAgD,QAAW,YAAY;AAExO,0BAA0B,OAAO,mBAAmB,gBAAgB,IAAI,SAAS,cAAc,kBAAkB,GAAG,IAAI,yBAAyB,uBAAuB,UAAU,MAAM,kBAAkB;AAC1M,0BAA0B,OAAO,mBAAmB,eAAe,kBAAkB,IAAI,QAAW,QAAW,gBAAgB;AAC/H,0BAA0B,OAAO,mBAAmB,uBAAuB,0BAA0B,IAAI,wCAAwC,QAAW,gBAAgB;AAC5K,0BAA0B,OAAO,mBAAmB,iBAAiB,oBAAoB,KAAK,wCAAwC,QAAW,YAAY;AAC7J,0BAA0B,OAAO,mBAAmB,6BAA6B,IAAI,SAAS,wBAAwB,qBAAqB,GAAG,KAAK,4CAA4C,QAAW,YAAY;AACtN,0BAA0B,OAAO,mBAAmB,6BAA6B,IAAI,SAAS,yBAAyB,uBAAuB,GAAG,KAAK,4CAA4C,QAAW,YAAY;AACzN,0BAA0B,OAAO,mBAAmB,iCAAiC,IAAI,SAAS,4BAA4B,uBAAuB,GAAG,KAAK,gDAAgD,QAAW,YAAY;AAEpO,0BAA0B,OAAO,mBAAmB,cAAc,iBAAiB,IAAI,QAAW,QAAW,gBAAgB;AAC7H,0BAA0B,OAAO,mBAAmB,4BAA4B,IAAI,SAAS,uBAAuB,iBAAiB,GAAG,IAAI,wBAAwB,UAAU,YAAY,GAAG,QAAW,gBAAgB;AACxN,0BAA0B,OAAO,mBAAmB,2BAA2B,IAAI,SAAS,YAAY,WAAW,GAAG,IAAI,eAAe,GAAG,eAAe,IAAI,wBAAwB,UAAU,YAAY,GAAG,gCAAgC,GAAG,eAAe,IAAI,wBAAwB,UAAU,UAAU,GAAG,8BAA8B,CAAC,GAAG,6BAA6B,UAAU,GAAG,gBAAgB;AACjZ,0BAA0B,OAAO,mBAAmB,eAAe,IAAI,SAAS,aAAa,YAAY,GAAG,IAAI,eAAe,GAAG,wBAAwB,UAAU,YAAY,GAAG,wBAAwB,UAAU,UAAU,CAAC,GAAG,uBAAuB,gBAAgB;AAC1Q,0BAA0B,OAAO,mBAAmB,gBAAgB,IAAI,SAAS,cAAc,kBAAkB,GAAG,IAAI,yBAAyB,QAAW,UAAU,MAAM,kBAAkB;AAC9L,0BAA0B,OAAO,mBAAmB,8BAA8B,IAAI,SAAS,yBAAyB,mBAAmB,GAAG,IAAI,wBAAwB,UAAU,YAAY,GAAG,QAAW,UAAU,MAAM,qBAAqB;AACnP,0BAA0B,OAAO,mBAAmB,qCAAqC,gCAAgC,IAAI,QAAW,QAAW,YAAY;AAE/J,0BAA0B,OAAO,0BAA0B,iCAAiC,oCAAoC,IAAI,sBAAsB;AAG1J,IAAI,aAAa;AAEhB,QAAM,wBAAwB,wBAAC,IAAY,OAAqC,OAAe,MAAwC,YAAiB;AACvJ,iBAAa,eAAe,OAAO,iBAAiB;AAAA,MACnD,SAAS;AAAA,QACR;AAAA,QACA;AAAA,QACA,MAAM,EAAE,MAAM,QAAQ;AAAA,MACvB;AAAA,MACA,MAAM,eAAe,IAAI,6BAA6B,IAAI;AAAA,MAC1D,OAAO;AAAA,MACP;AAAA,IACD,CAAC;AAAA,EACF,GAX8B;AAa9B,wBAAsB,sBAAsB,iBAAiB,GAAG,sBAAsB,UAAU,GAAG,WAAW,UAAU,0DAA0D,CAAC;AACnL,wBAAsB,wBAAwB,mBAAmB,GAAG,sBAAsB,UAAU,GAAG,WAAW,UAAU,oEAAoE,CAAC;AACjM,wBAAsB,aAAa,gBAAgB,GAAG,oBAAoB,UAAU,SAAS,GAAG,WAAW,UAAU,0DAA0D,CAAC;AAChL,wBAAsB,UAAU,aAAa,GAAG,eAAe,IAAI,uBAAuB,eAAe,IAAI,oBAAoB,UAAU,SAAS,GAAG,oCAAoC,UAAU,CAAC,CAAC,GAAG,WAAW,UAAU,uDAAuD,CAAC;AACvR,wBAAsB,cAAc,iBAAiB,GAAG,uBAAuB,WAAW,UAAU,0DAA0D,CAAC;AAC/J,wBAAsB,cAAc,iBAAiB,GAAG,uBAAuB,WAAW,UAAU,0DAA0D,CAAC;AAC/J,wBAAsB,aAAa,gBAAgB,GAAG,uBAAuB,WAAW,UAAU,yDAAyD,CAAC;AAC5J,wBAAsB,oBAAoB,eAAe,GAAG,uBAAuB,WAAW,UAAU,yDAAyD,CAAC;AAClK,wBAAsB,SAAS,YAAY,GAAG,uBAAuB,WAAW,UAAU,sDAAsD,CAAC;AAClJ;AAIA,aAAa,eAAe,OAAO,aAAa,EAAE,SAAS,OAAO,gBAAgB,uBAAuB,MAAM,OAAO,IAAI,UAAU,OAAO,iBAAiB,GAAG,MAAM,MAAM,UAAU,OAAO,cAAc,OAAO,GAAG,CAAC;AAIrN,aAAa,eAAe,OAAO,iBAAiB;AAAA,EACnD,SAAS,OAAO;AAAA,EAChB,OAAO;AAAA,IACN,GAAG,IAAI,UAAU,WAAW,KAAK;AAAA,IACjC,eAAe,IAAI,SAAS,EAAE,KAAK,QAAQ,SAAS,CAAC,uBAAuB,EAAE,GAAG,OAAO;AAAA,EACzF;AAAA,EACA,OAAO;AACR,CAAC;AAED,aAAa,eAAe,OAAO,kBAAkB;AAAA,EACpD,OAAO;AAAA,EACP,SAAS;AAAA,IACR,IAAI;AAAA,IACJ,OAAO,IAAI,SAAS,EAAE,KAAK,oBAAoB,SAAS,CAAC,uBAAuB,EAAE,GAAG,mBAAmB;AAAA,EACzG;AAAA,EACA,OAAO;AAAA,EACP,MAAM;AACP,CAAC;AAED,aAAa,eAAe,OAAO,kBAAkB;AAAA,EACpD,OAAO;AAAA,EACP,SAAS;AAAA,IACR,IAAI;AAAA,IACJ,OAAO,IAAI,SAAS,EAAE,KAAK,SAAS,SAAS,CAAC,uBAAuB,EAAE,GAAG,yBAAyB;AAAA,EACpG;AAAA,EACA,OAAO;AAAA,EACP,MAAM;AACP,CAAC;AAED,aAAa,eAAe,OAAO,kBAAkB;AAAA,EACpD,OAAO;AAAA,EACP,SAAS;AAAA,IACR,IAAI;AAAA,IACJ,OAAO,IAAI,SAAS,EAAE,KAAK,mBAAmB,SAAS,CAAC,uBAAuB,EAAE,GAAG,kBAAkB;AAAA,IACtG,cAAc;AAAA,EACf;AAAA,EACA,OAAO;AAAA,EACP,MAAM;AACP,CAAC;AAED,aAAa,eAAe,OAAO,kBAAkB;AAAA,EACpD,OAAO;AAAA,EACP,SAAS;AAAA,IACR,IAAI;AAAA,IACJ,OAAO,IAAI,SAAS,EAAE,KAAK,uBAAuB,SAAS,CAAC,uBAAuB,EAAE,GAAG,qBAAqB;AAAA,IAC7G,cAAc;AAAA,EACf;AAAA,EACA,OAAO;AAAA,EACP,MAAM;AACP,CAAC;AAID,aAAa,eAAe,OAAO,kBAAkB;AAAA,EACpD,OAAO;AAAA,EACP,SAAS;AAAA,IACR,IAAI;AAAA,IACJ,OAAO,IAAI,SAAS,EAAE,KAAK,sBAAsB,SAAS,CAAC,uBAAuB,EAAE,GAAG,wBAAwB;AAAA,EAChH;AAAA,EACA,OAAO;AAAA,EACP,MAAM;AACP,CAAC;AAGD,aAAa,eAAe,OAAO,kBAAkB;AAAA,EACpD,OAAO;AAAA,EACP,SAAS;AAAA,IACR,IAAI;AAAA,IACJ,OAAO,IAAI,SAAS,EAAE,KAAK,cAAc,SAAS,CAAC,uBAAuB,EAAE,GAAG,aAAa;AAAA,IAC5F,cAAc,oBAAoB,UAAU,SAAS;AAAA,EACtD;AAAA,EACA,OAAO;AAAA,EACP,MAAM;AACP,CAAC;AAED,aAAa,eAAe,OAAO,kBAAkB;AAAA,EACpD,OAAO;AAAA,EACP,SAAS;AAAA,IACR,IAAI;AAAA,IACJ,OAAO,IAAI,SAAS,EAAE,KAAK,cAAc,SAAS,CAAC,uBAAuB,EAAE,GAAG,aAAa;AAAA,IAC5F,cAAc,oBAAoB,UAAU,SAAS;AAAA,EACtD;AAAA,EACA,OAAO;AAAA,EACP,MAAM;AACP,CAAC;AAED,aAAa,eAAe,OAAO,kBAAkB;AAAA,EACpD,OAAO;AAAA,EACP,SAAS;AAAA,IACR,IAAI;AAAA,IACJ,OAAO,IAAI,SAAS,EAAE,KAAK,aAAa,SAAS,CAAC,uBAAuB,EAAE,GAAG,YAAY;AAAA,IAC1F,cAAc,oBAAoB,UAAU,SAAS;AAAA,EACtD;AAAA,EACA,OAAO;AAAA,EACP,MAAM;AACP,CAAC;AAED,aAAa,eAAe,OAAO,kBAAkB;AAAA,EACpD,OAAO;AAAA,EACP,SAAS;AAAA,IACR,IAAI;AAAA,IACJ,OAAO,IAAI,SAAS,EAAE,KAAK,cAAc,SAAS,CAAC,uBAAuB,EAAE,GAAG,YAAY;AAAA,IAC3F,cAAc,oBAAoB,UAAU,SAAS;AAAA,EACtD;AAAA,EACA,OAAO;AAAA,EACP,MAAM;AACP,CAAC;AAID,aAAa,eAAe,OAAO,0BAA0B;AAAA,EAC5D,OAAO;AAAA,EACP,SAAS;AAAA,IACR,IAAI;AAAA,IACJ,OAAO,IAAI,SAAS,EAAE,KAAK,sBAAsB,SAAS,CAAC,uBAAuB,EAAE,GAAG,qBAAqB;AAAA,EAC7G;AAAA,EACA,OAAO;AAAA,EACP,MAAM;AACP,CAAC;AAED,aAAa,eAAe,OAAO,kBAAkB;AAAA,EACpD,OAAO;AAAA,EACP,OAAO,IAAI,SAAS,EAAE,KAAK,mBAAmB,SAAS,CAAC,uBAAuB,EAAE,GAAG,kBAAkB;AAAA,EACtG,SAAS,OAAO;AAAA,EAChB,OAAO;AAAA,EACP,MAAM;AACP,CAAC;AAKD,aAAa,eAAe,OAAO,kBAAkB;AAAA,EACpD,OAAO;AAAA,EACP,SAAS;AAAA,IACR,IAAI;AAAA,IACJ,OAAO,IAAI,SAAS,EAAE,KAAK,gCAAgC,SAAS,CAAC,uBAAuB,EAAE,GAAG,mCAAmC;AAAA,EACrI;AAAA,EACA,OAAO;AACR,CAAC;AAID,MAAM,iBAAgC,SAAS,GAA4B,eAAe,sBAAsB,EAAE,sBAAsB;AAAA,EACvI,IAAI;AAAA,EACJ,OAAO,IAAI,UAAU,EAAE,SAAS,CAAC,8CAA8C,GAAG,KAAK,aAAa,GAAG,eAAe;AAAA,EACtH,MAAM,MAAM;AAAA,EACZ,gBAAgB,IAAI,eAAe,mBAAmB,CAAC,gBAAgB,EAAE,sCAAsC,KAAK,CAAC,CAAC;AAAA,EACtH,WAAW;AAAA,EACX,aAAa;AAAA,EACb,OAAO;AACR,GAAG,sBAAsB,OAAO,EAAE,0BAA0B,KAAK,CAAC;AAElE,SAAS,GAAmB,eAAe,aAAa,EAAE,cAAc,CAAC;AAAA,EACxE,IAAI;AAAA,EACJ,MAAM,IAAI,UAAU,EAAE,SAAS,CAAC,8CAA8C,GAAG,KAAK,aAAa,GAAG,eAAe;AAAA,EACrH,eAAe,MAAM;AAAA,EACrB,qBAAqB;AAAA,EACrB,aAAa;AAAA,EACb,MAAM;AAAA,EACN,gBAAgB,IAAI,eAAe,IAAI;AAAA,EACvC,6BAA6B;AAAA,IAC5B,IAAI;AAAA,IACJ,eAAe,IAAI,SAAS,EAAE,KAAK,wBAAwB,SAAS,CAAC,uBAAuB,EAAE,GAAG,iBAAiB;AAAA,IAClH,aAAa,EAAE,SAAS,OAAO,UAAU,OAAO,QAAQ,QAAQ,KAAK;AAAA,IACrE,OAAO;AAAA,EACR;AACD,CAAC,GAAG,cAAc;AAGlB,MAAM,gBAAgB,SAAS,GAA4B,eAAe,sBAAsB,EAAE,sBAAsB;AAAA,EACvH,IAAI;AAAA,EACJ,OAAO,IAAI,UAAU,iBAAiB,eAAe;AAAA,EACrD,6BAA6B;AAAA,IAC5B,IAAI;AAAA,IACJ,eAAe,IAAI,SAAS,EAAE,KAAK,aAAa,SAAS,CAAC,uBAAuB,EAAE,GAAG,OAAO;AAAA,IAC7F,aAAa,EAAE,SAAS,OAAO,UAAU,OAAO,QAAQ,QAAQ,KAAK;AAAA,IACrE,OAAO;AAAA,EACR;AAAA,EACA,gBAAgB,IAAI,eAAe,sBAAsB;AAAA,EACzD,MAAM,MAAM;AAAA,EACZ,wBAAwB;AAAA,EACxB,OAAO;AACR,GAAG,sBAAsB,OAAO;AAGhC,MAAM,gBAAgB,SAAS,GAAmB,eAAe,aAAa;AAC9E,cAAc,cAAc,CAAC,EAAE,IAAI,mBAAmB,MAAM,IAAI,UAAU,aAAa,WAAW,GAAG,eAAe,MAAM,mBAAmB,gBAAgB,IAAI,eAAe,aAAa,GAAG,OAAO,IAAI,QAAQ,IAAI,qBAAqB,MAAM,aAAa,MAAM,cAAc,EAAE,IAAI,4CAA4C,GAAG,MAAM,iBAAiB,UAAU,SAAS,EAAE,CAAC,GAAG,aAAa;AACrY,cAAc,cAAc,CAAC,EAAE,IAAI,eAAe,MAAM,IAAI,UAAU,SAAS,OAAO,GAAG,eAAe,MAAM,eAAe,gBAAgB,IAAI,eAAe,oBAAoB,GAAG,OAAO,IAAI,QAAQ,IAAI,qBAAqB,MAAM,aAAa,MAAM,cAAc,EAAE,IAAI,wCAAwC,GAAG,MAAM,iBAAiB,UAAU,SAAS,EAAE,CAAC,GAAG,aAAa;AACxX,cAAc,cAAc,CAAC,EAAE,IAAI,mBAAmB,MAAM,IAAI,UAAU,aAAa,YAAY,GAAG,eAAe,MAAM,mBAAmB,gBAAgB,IAAI,eAAe,aAAa,GAAG,OAAO,IAAI,QAAQ,IAAI,qBAAqB,MAAM,aAAa,MAAM,cAAc,EAAE,IAAI,4CAA4C,GAAG,MAAM,iBAAiB,UAAU,SAAS,EAAE,CAAC,GAAG,aAAa;AACtY,cAAc,cAAc,CAAC,EAAE,IAAI,qBAAqB,MAAM,IAAI,UAAU,eAAe,aAAa,GAAG,eAAe,MAAM,qBAAqB,gBAAgB,IAAI,eAAe,eAAe,GAAG,OAAO,IAAI,QAAQ,IAAI,qBAAqB,MAAM,aAAa,MAAM,cAAc,EAAE,IAAI,8CAA8C,GAAG,MAAM,eAAe,GAAG,2BAA2B,iBAAiB,UAAU,SAAS,GAAG,oBAAoB,EAAE,CAAC,GAAG,aAAa;AACrd,cAAc,cAAc,CAAC,EAAE,IAAI,YAAY,IAAI,MAAM,YAAY,OAAO,eAAe,MAAM,aAAa,gBAAgB,IAAI,eAAe,WAAW,GAAG,OAAO,GAAG,QAAQ,IAAI,qBAAqB,MAAM,MAAM,iBAAiB,UAAU,QAAQ,EAAE,CAAC,GAAG,aAAa;AAC5Q,cAAc,cAAc,CAAC,EAAE,IAAI,wBAAwB,MAAM,IAAI,UAAU,iBAAiB,gBAAgB,GAAG,eAAe,MAAM,uBAAuB,gBAAgB,IAAI,eAAe,iBAAiB,GAAG,OAAO,IAAI,QAAQ,GAAG,qBAAqB,MAAM,aAAa,MAAM,WAAW,MAAM,MAAM,eAAe,IAAI,kCAAkC,iBAAiB,UAAU,SAAS,CAAC,EAAE,CAAC,GAAG,aAAa;AAI9Z,SAAS,GAAwB,iBAAiB,UAAU,EAAE;AAAA,EAC7D,qBAAqB,OAAO,iBAAiB,qBAAqB,IAAI,SAAS,eAAe,aAAa,CAAC;AAAA,EAC5G,CAAC,IAAI,eAAe,oBAAoB,CAAC;AAC1C;AAGA,MAAM,wBAAwB,SAAS,GAA2B,wBAAwB,aAAa;AACvG,sBAAsB,sBAAsB;AAAA,EAC3C,IAAI;AAAA,EACJ,OAAO;AAAA,EACP,OAAO,IAAI,SAAS,2BAA2B,OAAO;AAAA,EACtD,MAAM;AAAA,EACN,YAAY;AAAA,IACX,2BAA2B;AAAA,MAC1B,MAAM;AAAA,MACN,aAAa,IAAI,SAAS,EAAE,SAAS,CAAC,uCAAuC,GAAG,KAAK,oBAAoB,GAAG,0DAA0D;AAAA,MACtK,SAAS;AAAA,IACV;AAAA,IACA,oCAAoC;AAAA,MACnC,MAAM;AAAA,MACN,aAAa,IAAI,SAAS,EAAE,SAAS,CAAC,uCAAuC,GAAG,KAAK,6BAA6B,GAAG,wCAAwC;AAAA,MAC7J,SAAS;AAAA,IACV;AAAA,IACA,iCAAiC;AAAA,MAChC,MAAM;AAAA,MACN,MAAM,CAAC,YAAY,yBAAyB,uBAAuB,MAAM;AAAA,MACzE,aAAa,IAAI,SAAS,EAAE,SAAS,CAAC,uCAAuC,GAAG,KAAK,0BAA0B,GAAG,8FAA8F;AAAA,MAChN,kBAAkB;AAAA,QACjB,IAAI,SAAS,0CAA0C,eAAe;AAAA,QACtE,IAAI,SAAS,uDAAuD,6BAA6B;AAAA,QACjG,IAAI,SAAS,qDAAqD,2BAA2B;AAAA,QAC7F,IAAI,SAAS,sCAAsC,2BAA2B;AAAA,MAC/E;AAAA,MACA,SAAS;AAAA,IACV;AAAA,IACA,2BAA2B;AAAA,MAC1B,MAAM;AAAA,MACN,aAAa,IAAI,SAAS,EAAE,SAAS,CAAC,uCAAuC,GAAG,KAAK,oBAAoB,GAAG,qEAAqE;AAAA,MACjL,SAAS;AAAA,IACV;AAAA,IACA,gCAAgC;AAAA,MAC/B,MAAM;AAAA,MACN,aAAa,IAAI,SAAS,EAAE,SAAS,CAAC,uCAAuC,GAAG,KAAK,yBAAyB,GAAG,mGAAmG;AAAA,MACpN,SAAS;AAAA,IACV;AAAA,IACA,sBAAsB;AAAA,MACrB,MAAM;AAAA,MACN,QAAQ,CAAC,MAAM,OAAO,MAAM;AAAA,MAC5B,aAAa,IAAI,SAAS,EAAE,SAAS,CAAC,uCAAuC,GAAG,KAAK,eAAe,GAAG,wDAAwD;AAAA,MAC/J,oBAAoB;AAAA,QACnB,IAAI,SAAS,mBAAmB,+DAA+D;AAAA,QAC/F,IAAI,SAAS,oBAAoB,8DAA8D;AAAA,QAC/F,IAAI,SAAS,8BAA8B,0GAA0G;AAAA,MACtJ;AAAA,MACA,SAAS;AAAA,IACV;AAAA,IACA,yBAAyB;AAAA,MACxB,MAAM,CAAC,YAAY,UAAU,iBAAiB,QAAQ;AAAA,MACtD,qBAAqB,IAAI,SAAS,EAAE,SAAS,CAAC,uCAAuC,GAAG,KAAK,kBAAkB,GAAG,wJAAwJ,0BAA0B;AAAA,MACpS,SAAS;AAAA,MACT,0BAA0B;AAAA,QACzB,IAAI,SAAS,yBAAyB,kCAAkC;AAAA,QACxE,IAAI,SAAS,uBAAuB,yCAAyC;AAAA,QAC7E,IAAI,SAAS,8BAA8B,4DAA4D;AAAA,QACvG,IAAI,SAAS,uBAAuB,4BAA4B;AAAA,MACjE;AAAA,IACD;AAAA,IACA,yBAAyB;AAAA,MACxB,MAAM,CAAC,SAAS,UAAU,qBAAqB;AAAA,MAC/C,kBAAkB,CAAC,IAAI,SAAS,SAAS,gCAAgC,GAAG,IAAI,SAAS,UAAU,iCAAiC,GAAG,IAAI,SAAS,uBAAuB,0EAA0E,CAAC;AAAA,MACtP,aAAa,IAAI,SAAS,EAAE,SAAS,CAAC,uCAAuC,GAAG,KAAK,kBAAkB,GAAG,uDAAuD;AAAA,MACjK,SAAS;AAAA,IACV;AAAA,IACA,gCAAgC;AAAA,IAChC,4BAA4B;AAAA,MAC3B,MAAM;AAAA,MACN,aAAa,IAAI,SAAS,4BAA4B,2FAA2F;AAAA,MACjJ,SAAS;AAAA,IACV;AAAA,IACA,qCAAqC;AAAA,MACpC,MAAM;AAAA,MACN,aAAa,IAAI,SAAS,EAAE,SAAS,CAAC,uCAAuC,GAAG,KAAK,oCAAoC,GAAG,gGAAgG;AAAA,MAC5N,SAAS;AAAA,IACV;AAAA,IACA,mBAAmB;AAAA,MAClB,MAAM,CAAC,aAAa,sBAAsB,2BAA2B,kBAAkB;AAAA,MACvF,SAAS;AAAA,MACT,aAAa,IAAI,SAAS,aAAa,2CAA2C;AAAA,IACnF;AAAA,IACA,kCAAkC;AAAA,MACjC,MAAM;AAAA,MACN,aAAa,IAAI,SAAS,EAAE,SAAS,CAAC,uCAAuC,GAAG,KAAK,2BAA2B,GAAG,0KAA0K;AAAA,MAC7R,SAAS;AAAA,IACV;AAAA,IACA,0BAA0B;AAAA,MACzB,MAAM;AAAA,MACN,aAAa,IAAI,SAAS,0BAA0B,wDAAwD;AAAA,MAC5G,SAAS,cAAc,KAAK;AAAA,IAC7B;AAAA,IACA,4BAA4B;AAAA,MAC3B,MAAM;AAAA,MACN,aAAa,IAAI,SAAS,4BAA4B,gDAAgD;AAAA,MACtG,SAAS;AAAA,IACV;AAAA,IACA,4BAA4B;AAAA,MAC3B,MAAM;AAAA,MACN,aAAa,IAAI,SAAS,4BAA4B,+GAA+G;AAAA,MACrK,SAAS;AAAA,IACV;AAAA,IACA,0BAA0B;AAAA,MACzB,MAAM;AAAA,MACN,aAAa,IAAI,SAAS,0BAA0B,yDAAyD;AAAA,MAC7G,SAAS;AAAA,IACV;AAAA,IACA,oCAAoC;AAAA,MACnC,MAAM;AAAA,MACN,aAAa,IAAI,SAAS,oCAAoC,sEAAsE;AAAA,MACpI,SAAS;AAAA,IACV;AAAA,IACA,wCAAwC;AAAA,MACvC,MAAM;AAAA,MACN,aAAa,IAAI,SAAS,wCAAwC,8GAA8G;AAAA,MAChL,SAAS;AAAA,IACV;AAAA,IACA,yCAAyC;AAAA,MACxC,MAAM,CAAC,OAAO,IAAI;AAAA,MAClB,aAAa,IAAI,SAAS,yCAAyC,uJAAuJ;AAAA,MAC1N,SAAS;AAAA,IACV;AAAA,IACA,UAAU;AAAA,MACT,MAAM;AAAA,MACN,aAAa,IAAI,SAAS,EAAE,SAAS,CAAC,uCAAuC,GAAG,KAAK,SAAS,GAAG,wHAAwH;AAAA,MACzN,SAAS,EAAE,gBAAgB,CAAC,GAAG,WAAW,CAAC,EAAE;AAAA,MAC7C,MAAM;AAAA,MACN,8BAA8B;AAAA,IAC/B;AAAA,IACA,4BAA4B;AAAA,MAC3B,MAAM;AAAA,MACN,aAAa,IAAI,SAAS,4BAA4B,mFAAmF;AAAA,MACzI,SAAS;AAAA,IACV;AAAA,IACA,4BAA4B;AAAA,MAC3B,MAAM;AAAA,MACN,aAAa,IAAI,SAAS,4BAA4B,yEAAyE;AAAA,MAC/H,SAAS;AAAA,IACV;AAAA,IACA,sBAAsB;AAAA,MACrB,MAAM,CAAC,eAAe,cAAc,UAAU,OAAO;AAAA,MACrD,kBAAkB,CAAC,IAAI,SAAS,eAAe,yCAAyC,GAAG,IAAI,SAAS,cAAc,oDAAoD,GAAG,IAAI,SAAS,UAAU,cAAc,GAAG,IAAI,SAAS,UAAU,mBAAmB,CAAC;AAAA,MAChQ,aAAa,IAAI,SAAS,sBAAsB,gFAAgF;AAAA,MAChI,SAAS;AAAA,IACV;AAAA,IACA,wCAAwC;AAAA,MACvC,MAAM;AAAA,MACN,aAAa,IAAI,SAAS,EAAE,SAAS,CAAC,uCAAuC,GAAG,KAAK,iCAAiC,GAAG,qEAAqE;AAAA,MAC9L,SAAS;AAAA,IACV;AAAA,IACA,wCAAwC;AAAA,MACvC,MAAM;AAAA,MACN,aAAa,IAAI,SAAS,EAAE,SAAS,CAAC,uCAAuC,GAAG,KAAK,iCAAiC,GAAG,0GAA0G;AAAA,MACnO,SAAS;AAAA,IACV;AAAA,IACA,yBAAyB;AAAA,MACxB,aAAa,IAAI,SAAS,yBAAyB,gEAAgE;AAAA,MACnH,MAAM,CAAC,2BAA2B,mCAAmC,MAAM;AAAA,MAC3E,kBAAkB;AAAA,QACjB,IAAI,SAAS,iDAAiD,uEAAuE;AAAA,QACrI,IAAI,SAAS,yDAAyD,4FAA4F;AAAA,QAClK,IAAI,SAAS,8BAA8B,yDAAyD;AAAA,MACrG;AAAA,MACA,SAAS;AAAA,MACT,OAAO,mBAAmB;AAAA,IAC3B;AAAA,IACA,uBAAuB;AAAA,MACtB,aAAa,IAAI,SAAS,uBAAuB,wFAAwF;AAAA,MACzI,MAAM;AAAA,MACN,MAAM,CAAC,SAAS,QAAQ;AAAA,MACxB,kBAAkB;AAAA,QACjB,IAAI,SAAS,6BAA6B,gBAAgB;AAAA,QAC1D,IAAI,SAAS,8BAA8B,6CAA6C;AAAA,MACzF;AAAA,MACA,SAAS;AAAA,IACV;AAAA,IACA,wCAAwC;AAAA,MACvC,MAAM;AAAA,MACN,SAAS;AAAA,MACT,aAAa,IAAI,SAAS,wCAAwC,uCAAuC;AAAA,IAC1G;AAAA,IACA,iCAAiC;AAAA,MAChC,MAAM;AAAA,MACN,MAAM,CAAC,QAAQ,MAAM,KAAK;AAAA,MAC1B,SAAS;AAAA,MACT,kBAAkB;AAAA,QACjB,IAAI,SAAS,sCAAsC,4EAA4E;AAAA,QAC/H,IAAI,SAAS,oCAAoC,6CAA6C;AAAA,QAC9F,IAAI,SAAS,qCAAqC,4CAA4C;AAAA,MAC/F;AAAA,MACA,aAAa,IAAI,SAAS,iCAAiC,gIAAgI;AAAA,IAC5L;AAAA,IACA,8BAA8B;AAAA,MAC7B,MAAM;AAAA,MACN,aAAa,IAAI,SAAS,8BAA8B,kDAAkD;AAAA,MAC1G,SAAS;AAAA,IACV;AAAA,IACA,oCAAoC;AAAA,MACnC,MAAM;AAAA,MACN,qBAAqB,IAAI,SAAS,EAAE,SAAS,CAAC,uCAAuC,GAAG,KAAK,mCAAmC,GAAG,0IAA0I,2BAA2B;AAAA,MACxS,SAAS;AAAA,IACV;AAAA,EACD;AACD,CAAC;AAED,uBAAuB,SAAS,IAAI,mBAAmB,CAAC;AACxD,uBAAuB,SAAS,IAAI,sBAAsB,CAAC;AAC3D,uBAAuB,SAAS,IAAI,6BAA6B,CAAC;AAClE,+BAA+B,2BAA2B,IAAI,4BAA4B,eAAe,aAAa;AACtH,+BAA+B,iCAAiC,IAAI,kCAAkC,eAAe,aAAa;",
  "names": []
}
