{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/runAndDebugAccessibilityHelp.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport type { ServicesAccessor } from \"../../../../editor/browser/editorExtensions.js\";\nimport { AccessibilityHelpNLS } from \"../../../../editor/common/standaloneStrings.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\tAccessibleViewProviderId,\n\tAccessibleViewType,\n\ttype IAccessibleViewContentProvider,\n} from \"../../../../platform/accessibility/browser/accessibleView.js\";\nimport type { IAccessibleViewImplentation } from \"../../../../platform/accessibility/browser/accessibleViewRegistry.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tFocusedViewContext,\n\tSidebarFocusContext,\n} from \"../../../common/contextkeys.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport { AccessibilityVerbositySettingId } from \"../../accessibility/browser/accessibilityConfiguration.js\";\nimport {\n\tBREAKPOINTS_VIEW_ID,\n\tCALLSTACK_VIEW_ID,\n\tLOADED_SCRIPTS_VIEW_ID,\n\tVARIABLES_VIEW_ID,\n\tWATCH_VIEW_ID,\n} from \"../common/debug.js\";\n\nexport class RunAndDebugAccessibilityHelp\n\timplements IAccessibleViewImplentation\n{\n\tpriority = 120;\n\tname = \"runAndDebugHelp\";\n\twhen = ContextKeyExpr.or(\n\t\tContextKeyExpr.and(\n\t\t\tContextKeyExpr.equals(\"activeViewlet\", \"workbench.view.debug\"),\n\t\t\tSidebarFocusContext,\n\t\t),\n\t\tContextKeyExpr.equals(FocusedViewContext.key, VARIABLES_VIEW_ID),\n\t\tContextKeyExpr.equals(FocusedViewContext.key, WATCH_VIEW_ID),\n\t\tContextKeyExpr.equals(FocusedViewContext.key, CALLSTACK_VIEW_ID),\n\t\tContextKeyExpr.equals(FocusedViewContext.key, LOADED_SCRIPTS_VIEW_ID),\n\t\tContextKeyExpr.equals(FocusedViewContext.key, BREAKPOINTS_VIEW_ID),\n\t);\n\ttype: AccessibleViewType = AccessibleViewType.Help;\n\tgetProvider(accessor: ServicesAccessor) {\n\t\treturn new RunAndDebugAccessibilityHelpProvider(\n\t\t\taccessor.get(ICommandService),\n\t\t\taccessor.get(IViewsService),\n\t\t);\n\t}\n}\n\nclass RunAndDebugAccessibilityHelpProvider\n\textends Disposable\n\timplements IAccessibleViewContentProvider\n{\n\tpublic readonly id = AccessibleViewProviderId.RunAndDebug;\n\tpublic readonly verbositySettingKey = AccessibilityVerbositySettingId.Debug;\n\tpublic readonly options = { type: AccessibleViewType.Help };\n\tprivate _focusedView: string | undefined;\n\tconstructor(\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IViewsService private readonly _viewsService: IViewsService,\n\t) {\n\t\tsuper();\n\t\tthis._focusedView = this._viewsService.getFocusedViewName();\n\t}\n\n\tpublic onClose(): void {\n\t\tswitch (this._focusedView) {\n\t\t\tcase \"Watch\":\n\t\t\t\tthis._commandService.executeCommand(\n\t\t\t\t\t\"workbench.debug.action.focusWatchView\",\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase \"Variables\":\n\t\t\t\tthis._commandService.executeCommand(\n\t\t\t\t\t\"workbench.debug.action.focusVariablesView\",\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase \"Call Stack\":\n\t\t\t\tthis._commandService.executeCommand(\n\t\t\t\t\t\"workbench.debug.action.focusCallStackView\",\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase \"Breakpoints\":\n\t\t\t\tthis._commandService.executeCommand(\n\t\t\t\t\t\"workbench.debug.action.focusBreakpointsView\",\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis._commandService.executeCommand(\"workbench.view.debug\");\n\t\t}\n\t}\n\n\tpublic provideContent(): string {\n\t\treturn [\n\t\t\tlocalize(\n\t\t\t\t\"debug.showRunAndDebug\",\n\t\t\t\t\"The Show Run and Debug view command{0} will open the current view.\",\n\t\t\t\t\"<keybinding:workbench.view.debug>\",\n\t\t\t),\n\t\t\tlocalize(\n\t\t\t\t\"debug.startDebugging\",\n\t\t\t\t\"The Debug: Start Debugging command{0} will start a debug session.\",\n\t\t\t\t\"<keybinding:workbench.action.debug.start>\",\n\t\t\t),\n\t\t\tlocalize(\n\t\t\t\t\"debug.help\",\n\t\t\t\t\"Access debug output and evaluate expressions in the debug console, which can be focused with{0}.\",\n\t\t\t\t\"<keybinding:workbench.panel.repl.view.focus>\",\n\t\t\t),\n\t\t\tAccessibilityHelpNLS.setBreakpoint,\n\t\t\tAccessibilityHelpNLS.addToWatch,\n\t\t\tlocalize(\n\t\t\t\t\"onceDebugging\",\n\t\t\t\t\"Once debugging, the following commands will be available:\",\n\t\t\t),\n\t\t\tlocalize(\n\t\t\t\t\"debug.restartDebugging\",\n\t\t\t\t\"- Debug: Restart Debugging command{0} will restart the current debug session.\",\n\t\t\t\t\"<keybinding:workbench.action.debug.restart>\",\n\t\t\t),\n\t\t\tlocalize(\n\t\t\t\t\"debug.stopDebugging\",\n\t\t\t\t\"- Debug: Stop Debugging command{0} will stop the current debugging session.\",\n\t\t\t\t\"<keybinding:workbench.action.debug.stop>\",\n\t\t\t),\n\t\t\tlocalize(\n\t\t\t\t\"debug.continue\",\n\t\t\t\t\"- Debug: Continue command{0} will continue execution until the next breakpoint.\",\n\t\t\t\t\"<keybinding:workbench.action.debug.continue>\",\n\t\t\t),\n\t\t\tlocalize(\n\t\t\t\t\"debug.stepInto\",\n\t\t\t\t\"- Debug: Step Into command{0} will step into the next function call.\",\n\t\t\t\t\"<keybinding:workbench.action.debug.stepInto>\",\n\t\t\t),\n\t\t\tlocalize(\n\t\t\t\t\"debug.stepOver\",\n\t\t\t\t\"- Debug: Step Over command{0} will step over the current function call.\",\n\t\t\t\t\"<keybinding:workbench.action.debug.stepOver>\",\n\t\t\t),\n\t\t\tlocalize(\n\t\t\t\t\"debug.stepOut\",\n\t\t\t\t\"- Debug: Step Out command{0} will step out of the current function call.\",\n\t\t\t\t\"<keybinding:workbench.action.debug.stepOut>\",\n\t\t\t),\n\t\t\tlocalize(\n\t\t\t\t\"debug.views\",\n\t\t\t\t\"The debug viewlet is comprised of several views that can be focused with the following commands or navigated to via tab then arrow keys:\",\n\t\t\t),\n\t\t\tlocalize(\n\t\t\t\t\"debug.focusBreakpoints\",\n\t\t\t\t\"- Debug: Focus Breakpoints View command{0} will focus the breakpoints view.\",\n\t\t\t\t\"<keybinding:workbench.debug.action.focusBreakpointsView>\",\n\t\t\t),\n\t\t\tlocalize(\n\t\t\t\t\"debug.focusCallStack\",\n\t\t\t\t\"- Debug: Focus Call Stack View command{0} will focus the call stack view.\",\n\t\t\t\t\"<keybinding:workbench.debug.action.focusCallStackView>\",\n\t\t\t),\n\t\t\tlocalize(\n\t\t\t\t\"debug.focusVariables\",\n\t\t\t\t\"- Debug: Focus Variables View command{0} will focus the variables view.\",\n\t\t\t\t\"<keybinding:workbench.debug.action.focusVariablesView>\",\n\t\t\t),\n\t\t\tlocalize(\n\t\t\t\t\"debug.focusWatch\",\n\t\t\t\t\"- Debug: Focus Watch View command{0} will focus the watch view.\",\n\t\t\t\t\"<keybinding:workbench.debug.action.focusWatchView>\",\n\t\t\t),\n\t\t\tlocalize(\n\t\t\t\t\"debug.watchSetting\",\n\t\t\t\t\"The setting {0} controls whether watch variable changes are announced.\",\n\t\t\t\t\"accessibility.debugWatchVariableAnnouncements\",\n\t\t\t),\n\t\t].join(\"\\n\");\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,kBAAkB;AAE3B,SAAS,4BAA4B;AACrC,SAAS,gBAAgB;AACzB;AAAA,EACC;AAAA,EACA;AAAA,OAEM;AAEP,SAAS,uBAAuB;AAChC,SAAS,sBAAsB;AAC/B;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,qBAAqB;AAC9B,SAAS,uCAAuC;AAChD;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAEA,MAAM,6BAEb;AAAA,EAjCA,OAiCA;AAAA;AAAA;AAAA,EACC,WAAW;AAAA,EACX,OAAO;AAAA,EACP,OAAO,eAAe;AAAA,IACrB,eAAe;AAAA,MACd,eAAe,OAAO,iBAAiB,sBAAsB;AAAA,MAC7D;AAAA,IACD;AAAA,IACA,eAAe,OAAO,mBAAmB,KAAK,iBAAiB;AAAA,IAC/D,eAAe,OAAO,mBAAmB,KAAK,aAAa;AAAA,IAC3D,eAAe,OAAO,mBAAmB,KAAK,iBAAiB;AAAA,IAC/D,eAAe,OAAO,mBAAmB,KAAK,sBAAsB;AAAA,IACpE,eAAe,OAAO,mBAAmB,KAAK,mBAAmB;AAAA,EAClE;AAAA,EACA,OAA2B,mBAAmB;AAAA,EAC9C,YAAY,UAA4B;AACvC,WAAO,IAAI;AAAA,MACV,SAAS,IAAI,eAAe;AAAA,MAC5B,SAAS,IAAI,aAAa;AAAA,IAC3B;AAAA,EACD;AACD;AAEA,IAAM,uCAAN,cACS,WAET;AAAA,EAKC,YACmC,iBACF,eAC/B;AACD,UAAM;AAH4B;AACF;AAGhC,SAAK,eAAe,KAAK,cAAc,mBAAmB;AAAA,EAC3D;AAAA,EAtED,OA2DA;AAAA;AAAA;AAAA,EACiB,KAAK,yBAAyB;AAAA,EAC9B,sBAAsB,gCAAgC;AAAA,EACtD,UAAU,EAAE,MAAM,mBAAmB,KAAK;AAAA,EAClD;AAAA,EASD,UAAgB;AACtB,YAAQ,KAAK,cAAc;AAAA,MAC1B,KAAK;AACJ,aAAK,gBAAgB;AAAA,UACpB;AAAA,QACD;AACA;AAAA,MACD,KAAK;AACJ,aAAK,gBAAgB;AAAA,UACpB;AAAA,QACD;AACA;AAAA,MACD,KAAK;AACJ,aAAK,gBAAgB;AAAA,UACpB;AAAA,QACD;AACA;AAAA,MACD,KAAK;AACJ,aAAK,gBAAgB;AAAA,UACpB;AAAA,QACD;AACA;AAAA,MACD;AACC,aAAK,gBAAgB,eAAe,sBAAsB;AAAA,IAC5D;AAAA,EACD;AAAA,EAEO,iBAAyB;AAC/B,WAAO;AAAA,MACN;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,MACA;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,MACA;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,MACA,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACruCAAN;AAAA,EASG;AAAA,EACA;AAAA,GAVG;",
  "names": []
}
