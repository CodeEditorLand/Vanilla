{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/replFilter.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\ttype ITreeFilter,\n\ttype TreeFilterResult,\n\tTreeVisibility,\n} from \"../../../../base/browser/ui/tree/tree.js\";\nimport { matchesFuzzy } from \"../../../../base/common/filters.js\";\nimport { splitGlobAware } from \"../../../../base/common/glob.js\";\nimport type { IReplElement } from \"../common/debug.js\";\nimport { Variable } from \"../common/debugModel.js\";\nimport {\n\tReplEvaluationInput,\n\tReplEvaluationResult,\n} from \"../common/replModel.js\";\n\ntype ParsedQuery = {\n\ttype: \"include\" | \"exclude\";\n\tquery: string;\n};\n\nexport class ReplFilter implements ITreeFilter<IReplElement> {\n\tstatic matchQuery = matchesFuzzy;\n\n\tprivate _parsedQueries: ParsedQuery[] = [];\n\tset filterQuery(query: string) {\n\t\tthis._parsedQueries = [];\n\t\tquery = query.trim();\n\n\t\tif (query && query !== \"\") {\n\t\t\tconst filters = splitGlobAware(query, \",\")\n\t\t\t\t.map((s) => s.trim())\n\t\t\t\t.filter((s) => !!s.length);\n\t\t\tfor (const f of filters) {\n\t\t\t\tif (f.startsWith(\"\\\\\")) {\n\t\t\t\t\tthis._parsedQueries.push({\n\t\t\t\t\t\ttype: \"include\",\n\t\t\t\t\t\tquery: f.slice(1),\n\t\t\t\t\t});\n\t\t\t\t} else if (f.startsWith(\"!\")) {\n\t\t\t\t\tthis._parsedQueries.push({\n\t\t\t\t\t\ttype: \"exclude\",\n\t\t\t\t\t\tquery: f.slice(1),\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis._parsedQueries.push({ type: \"include\", query: f });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfilter(\n\t\telement: IReplElement,\n\t\tparentVisibility: TreeVisibility,\n\t): TreeFilterResult<void> {\n\t\tif (\n\t\t\telement instanceof ReplEvaluationInput ||\n\t\t\telement instanceof ReplEvaluationResult ||\n\t\t\telement instanceof Variable\n\t\t) {\n\t\t\t// Only filter the output events, everything else is visible https://github.com/microsoft/vscode/issues/105863\n\t\t\treturn TreeVisibility.Visible;\n\t\t}\n\n\t\tlet includeQueryPresent = false;\n\t\tlet includeQueryMatched = false;\n\n\t\tconst text = element.toString(true);\n\n\t\tfor (const { type, query } of this._parsedQueries) {\n\t\t\tif (type === \"exclude\" && ReplFilter.matchQuery(query, text)) {\n\t\t\t\t// If exclude query matches, ignore all other queries and hide\n\t\t\t\treturn false;\n\t\t\t} else if (type === \"include\") {\n\t\t\t\tincludeQueryPresent = true;\n\t\t\t\tif (ReplFilter.matchQuery(query, text)) {\n\t\t\t\t\tincludeQueryMatched = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn includeQueryPresent\n\t\t\t? includeQueryMatched\n\t\t\t: typeof parentVisibility !== \"undefined\"\n\t\t\t\t? parentVisibility\n\t\t\t\t: TreeVisibility.Visible;\n\t}\n}\n"],
  "mappings": ";;AAKA;AAAA,EAGC;AAAA,OACM;AACP,SAAS,oBAAoB;AAC7B,SAAS,sBAAsB;AAE/B,SAAS,gBAAgB;AACzB;AAAA,EACC;AAAA,EACA;AAAA,OACM;AAOA,MAAM,WAAgD;AAAA,EAxB7D,OAwB6D;AAAA;AAAA;AAAA,EAC5D,OAAO,aAAa;AAAA,EAEZ,iBAAgC,CAAC;AAAA,EACzC,IAAI,YAAY,OAAe;AAC9B,SAAK,iBAAiB,CAAC;AACvB,YAAQ,MAAM,KAAK;AAEnB,QAAI,SAAS,UAAU,IAAI;AAC1B,YAAM,UAAU,eAAe,OAAO,GAAG,EACvC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,EACnB,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM;AAC1B,iBAAW,KAAK,SAAS;AACxB,YAAI,EAAE,WAAW,IAAI,GAAG;AACvB,eAAK,eAAe,KAAK;AAAA,YACxB,MAAM;AAAA,YACN,OAAO,EAAE,MAAM,CAAC;AAAA,UACjB,CAAC;AAAA,QACF,WAAW,EAAE,WAAW,GAAG,GAAG;AAC7B,eAAK,eAAe,KAAK;AAAA,YACxB,MAAM;AAAA,YACN,OAAO,EAAE,MAAM,CAAC;AAAA,UACjB,CAAC;AAAA,QACF,OAAO;AACN,eAAK,eAAe,KAAK,EAAE,MAAM,WAAW,OAAO,EAAE,CAAC;AAAA,QACvD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,OACC,SACA,kBACyB;AACzB,QACC,mBAAmB,uBACnB,mBAAmB,wBACnB,mBAAmB,UAClB;AAED,aAAO,eAAe;AAAA,IACvB;AAEA,QAAI,sBAAsB;AAC1B,QAAI,sBAAsB;AAE1B,UAAM,OAAO,QAAQ,SAAS,IAAI;AAElC,eAAW,EAAE,MAAM,MAAM,KAAK,KAAK,gBAAgB;AAClD,UAAI,SAAS,aAAa,WAAW,WAAW,OAAO,IAAI,GAAG;AAE7D,eAAO;AAAA,MACR,WAAW,SAAS,WAAW;AAC9B,8BAAsB;AACtB,YAAI,WAAW,WAAW,OAAO,IAAI,GAAG;AACvC,gCAAsB;AAAA,QACvB;AAAA,MACD;AAAA,IACD;AAEA,WAAO,sBACJ,sBACA,OAAO,qBAAqB,cAC3B,mBACA,eAAe;AAAA,EACpB;AACD;",
  "names": []
}
