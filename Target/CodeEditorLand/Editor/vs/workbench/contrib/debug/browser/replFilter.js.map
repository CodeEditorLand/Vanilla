{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/replFilter.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { matchesFuzzy } from '../../../../base/common/filters.js';\nimport { splitGlobAware } from '../../../../base/common/glob.js';\nimport { ITreeFilter, TreeVisibility, TreeFilterResult } from '../../../../base/browser/ui/tree/tree.js';\nimport { IReplElement } from '../common/debug.js';\nimport { ReplEvaluationResult, ReplEvaluationInput } from '../common/replModel.js';\nimport { Variable } from '../common/debugModel.js';\n\n\ntype ParsedQuery = {\n\ttype: 'include' | 'exclude';\n\tquery: string;\n};\n\nexport class ReplFilter implements ITreeFilter<IReplElement> {\n\n\tstatic matchQuery = matchesFuzzy;\n\n\tprivate _parsedQueries: ParsedQuery[] = [];\n\tset filterQuery(query: string) {\n\t\tthis._parsedQueries = [];\n\t\tquery = query.trim();\n\n\t\tif (query && query !== '') {\n\t\t\tconst filters = splitGlobAware(query, ',').map(s => s.trim()).filter(s => !!s.length);\n\t\t\tfor (const f of filters) {\n\t\t\t\tif (f.startsWith('\\\\')) {\n\t\t\t\t\tthis._parsedQueries.push({ type: 'include', query: f.slice(1) });\n\t\t\t\t} else if (f.startsWith('!')) {\n\t\t\t\t\tthis._parsedQueries.push({ type: 'exclude', query: f.slice(1) });\n\t\t\t\t} else {\n\t\t\t\t\tthis._parsedQueries.push({ type: 'include', query: f });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfilter(element: IReplElement, parentVisibility: TreeVisibility): TreeFilterResult<void> {\n\t\tif (element instanceof ReplEvaluationInput || element instanceof ReplEvaluationResult || element instanceof Variable) {\n\t\t\t// Only filter the output events, everything else is visible https://github.com/microsoft/vscode/issues/105863\n\t\t\treturn TreeVisibility.Visible;\n\t\t}\n\n\t\tlet includeQueryPresent = false;\n\t\tlet includeQueryMatched = false;\n\n\t\tconst text = element.toString(true);\n\n\t\tfor (const { type, query } of this._parsedQueries) {\n\t\t\tif (type === 'exclude' && ReplFilter.matchQuery(query, text)) {\n\t\t\t\t// If exclude query matches, ignore all other queries and hide\n\t\t\t\treturn false;\n\t\t\t} else if (type === 'include') {\n\t\t\t\tincludeQueryPresent = true;\n\t\t\t\tif (ReplFilter.matchQuery(query, text)) {\n\t\t\t\t\tincludeQueryMatched = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn includeQueryPresent ? includeQueryMatched : (typeof parentVisibility !== 'undefined' ? parentVisibility : TreeVisibility.Visible);\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,oBAAoB;AAC7B,SAAS,sBAAsB;AAC/B,SAAS,aAAa,gBAAgB,wBAAwB;AAC9D,SAAS,oBAAoB;AAC7B,SAAS,sBAAsB,2BAA2B;AAC1D,SAAS,gBAAgB;AAQlB,MAAM,WAAgD;AAAA,EAlB7D,OAkB6D;AAAA;AAAA;AAAA,EAE5D,OAAO,aAAa;AAAA,EAEZ,iBAAgC,CAAC;AAAA,EACzC,IAAI,YAAY,OAAe;AAC9B,SAAK,iBAAiB,CAAC;AACvB,YAAQ,MAAM,KAAK;AAEnB,QAAI,SAAS,UAAU,IAAI;AAC1B,YAAM,UAAU,eAAe,OAAO,GAAG,EAAE,IAAI,OAAK,EAAE,KAAK,CAAC,EAAE,OAAO,OAAK,CAAC,CAAC,EAAE,MAAM;AACpF,iBAAW,KAAK,SAAS;AACxB,YAAI,EAAE,WAAW,IAAI,GAAG;AACvB,eAAK,eAAe,KAAK,EAAE,MAAM,WAAW,OAAO,EAAE,MAAM,CAAC,EAAE,CAAC;AAAA,QAChE,WAAW,EAAE,WAAW,GAAG,GAAG;AAC7B,eAAK,eAAe,KAAK,EAAE,MAAM,WAAW,OAAO,EAAE,MAAM,CAAC,EAAE,CAAC;AAAA,QAChE,OAAO;AACN,eAAK,eAAe,KAAK,EAAE,MAAM,WAAW,OAAO,EAAE,CAAC;AAAA,QACvD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,OAAO,SAAuB,kBAA0D;AACvF,QAAI,mBAAmB,uBAAuB,mBAAmB,wBAAwB,mBAAmB,UAAU;AAErH,aAAO,eAAe;AAAA,IACvB;AAEA,QAAI,sBAAsB;AAC1B,QAAI,sBAAsB;AAE1B,UAAM,OAAO,QAAQ,SAAS,IAAI;AAElC,eAAW,EAAE,MAAM,MAAM,KAAK,KAAK,gBAAgB;AAClD,UAAI,SAAS,aAAa,WAAW,WAAW,OAAO,IAAI,GAAG;AAE7D,eAAO;AAAA,MACR,WAAW,SAAS,WAAW;AAC9B,8BAAsB;AACtB,YAAI,WAAW,WAAW,OAAO,IAAI,GAAG;AACvC,gCAAsB;AAAA,QACvB;AAAA,MACD;AAAA,IACD;AAEA,WAAO,sBAAsB,sBAAuB,OAAO,qBAAqB,cAAc,mBAAmB,eAAe;AAAA,EACjI;AACD;",
  "names": []
}
