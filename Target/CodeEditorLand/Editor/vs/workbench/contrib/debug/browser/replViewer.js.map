{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/replViewer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport { CountBadge } from \"../../../../base/browser/ui/countBadge/countBadge.js\";\nimport {\n\tHighlightedLabel,\n\ttype IHighlight,\n} from \"../../../../base/browser/ui/highlightedlabel/highlightedLabel.js\";\nimport type { IManagedHover } from \"../../../../base/browser/ui/hover/hover.js\";\nimport { getDefaultHoverDelegate } from \"../../../../base/browser/ui/hover/hoverDelegateFactory.js\";\nimport { CachedListVirtualDelegate } from \"../../../../base/browser/ui/list/list.js\";\nimport type { IListAccessibilityProvider } from \"../../../../base/browser/ui/list/listWidget.js\";\nimport type {\n\tIAsyncDataSource,\n\tITreeNode,\n\tITreeRenderer,\n} from \"../../../../base/browser/ui/tree/tree.js\";\nimport {\n\ttype FuzzyScore,\n\tcreateMatches,\n} from \"../../../../base/common/filters.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { basename } from \"../../../../base/common/path.js\";\nimport severity from \"../../../../base/common/severity.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { localize } from \"../../../../nls.js\";\nimport type { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IContextViewService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ILabelService } from \"../../../../platform/label/common/label.js\";\nimport { defaultCountBadgeStyles } from \"../../../../platform/theme/browser/defaultStyles.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport {\n\ttype IDebugConfiguration,\n\tIDebugService,\n\ttype IDebugSession,\n\ttype IExpression,\n\ttype IExpressionContainer,\n\ttype INestingReplElement,\n\ttype IReplElement,\n\ttype IReplElementSource,\n\ttype IReplOptions,\n} from \"../common/debug.js\";\nimport { Variable } from \"../common/debugModel.js\";\nimport {\n\tRawObjectReplElement,\n\tReplEvaluationInput,\n\tReplEvaluationResult,\n\tReplGroup,\n\tReplOutputElement,\n\tReplVariableElement,\n} from \"../common/replModel.js\";\nimport {\n\tAbstractExpressionsRenderer,\n\ttype IExpressionTemplateData,\n\ttype IInputBoxOptions,\n} from \"./baseDebugView.js\";\nimport type { DebugExpressionRenderer } from \"./debugExpressionRenderer.js\";\nimport { debugConsoleEvaluationInput } from \"./debugIcons.js\";\n\nconst $ = dom.$;\n\ninterface IReplEvaluationInputTemplateData {\n\tlabel: HighlightedLabel;\n}\n\ninterface IReplGroupTemplateData {\n\tlabel: HTMLElement;\n\tsource: SourceWidget;\n\telementDisposable?: IDisposable;\n}\n\ninterface IReplEvaluationResultTemplateData {\n\tvalue: HTMLElement;\n\telementStore: DisposableStore;\n}\n\ninterface IOutputReplElementTemplateData {\n\tcontainer: HTMLElement;\n\tcount: CountBadge;\n\tcountContainer: HTMLElement;\n\tvalue: HTMLElement;\n\tsource: SourceWidget;\n\tgetReplElementSource(): IReplElementSource | undefined;\n\telementDisposable: DisposableStore;\n}\n\ninterface IRawObjectReplTemplateData {\n\tcontainer: HTMLElement;\n\texpression: HTMLElement;\n\tname: HTMLElement;\n\tvalue: HTMLElement;\n\tlabel: HighlightedLabel;\n\telementStore: DisposableStore;\n}\n\nexport class ReplEvaluationInputsRenderer\n\timplements\n\t\tITreeRenderer<\n\t\t\tReplEvaluationInput,\n\t\t\tFuzzyScore,\n\t\t\tIReplEvaluationInputTemplateData\n\t\t>\n{\n\tstatic readonly ID = \"replEvaluationInput\";\n\n\tget templateId(): string {\n\t\treturn ReplEvaluationInputsRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IReplEvaluationInputTemplateData {\n\t\tdom.append(\n\t\t\tcontainer,\n\t\t\t$(\n\t\t\t\t\"span.arrow\" +\n\t\t\t\t\tThemeIcon.asCSSSelector(debugConsoleEvaluationInput),\n\t\t\t),\n\t\t);\n\t\tconst input = dom.append(container, $(\".expression\"));\n\t\tconst label = new HighlightedLabel(input);\n\t\treturn { label };\n\t}\n\n\trenderElement(\n\t\telement: ITreeNode<ReplEvaluationInput, FuzzyScore>,\n\t\tindex: number,\n\t\ttemplateData: IReplEvaluationInputTemplateData,\n\t): void {\n\t\tconst evaluation = element.element;\n\t\ttemplateData.label.set(\n\t\t\tevaluation.value,\n\t\t\tcreateMatches(element.filterData),\n\t\t);\n\t}\n\n\tdisposeTemplate(templateData: IReplEvaluationInputTemplateData): void {\n\t\ttemplateData.label.dispose();\n\t}\n}\n\nexport class ReplGroupRenderer\n\timplements ITreeRenderer<ReplGroup, FuzzyScore, IReplGroupTemplateData>\n{\n\tstatic readonly ID = \"replGroup\";\n\n\tconstructor(\n\t\tprivate readonly expressionRenderer: DebugExpressionRenderer,\n\t\t@IInstantiationService\n\t\tprivate readonly instaService: IInstantiationService,\n\t) {}\n\n\tget templateId(): string {\n\t\treturn ReplGroupRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IReplGroupTemplateData {\n\t\tcontainer.classList.add(\"group\");\n\t\tconst expression = dom.append(\n\t\t\tcontainer,\n\t\t\t$(\".output.expression.value-and-source\"),\n\t\t);\n\t\tconst label = dom.append(expression, $(\"span.label\"));\n\t\tconst source = this.instaService.createInstance(\n\t\t\tSourceWidget,\n\t\t\texpression,\n\t\t);\n\t\treturn { label, source };\n\t}\n\n\trenderElement(\n\t\telement: ITreeNode<ReplGroup, FuzzyScore>,\n\t\t_index: number,\n\t\ttemplateData: IReplGroupTemplateData,\n\t): void {\n\t\ttemplateData.elementDisposable?.dispose();\n\t\tconst replGroup = element.element;\n\t\tdom.clearNode(templateData.label);\n\t\ttemplateData.elementDisposable = this.expressionRenderer.renderValue(\n\t\t\ttemplateData.label,\n\t\t\treplGroup.name,\n\t\t\t{ wasANSI: true, session: element.element.session },\n\t\t);\n\t\ttemplateData.source.setSource(replGroup.sourceData);\n\t}\n\n\tdisposeTemplate(templateData: IReplGroupTemplateData): void {\n\t\ttemplateData.elementDisposable?.dispose();\n\t\ttemplateData.source.dispose();\n\t}\n}\n\nexport class ReplEvaluationResultsRenderer\n\timplements\n\t\tITreeRenderer<\n\t\t\tReplEvaluationResult | Variable,\n\t\t\tFuzzyScore,\n\t\t\tIReplEvaluationResultTemplateData\n\t\t>\n{\n\tstatic readonly ID = \"replEvaluationResult\";\n\n\tget templateId(): string {\n\t\treturn ReplEvaluationResultsRenderer.ID;\n\t}\n\n\tconstructor(private readonly expressionRenderer: DebugExpressionRenderer) {}\n\n\trenderTemplate(container: HTMLElement): IReplEvaluationResultTemplateData {\n\t\tconst output = dom.append(\n\t\t\tcontainer,\n\t\t\t$(\".evaluation-result.expression\"),\n\t\t);\n\t\tconst value = dom.append(output, $(\"span.value\"));\n\n\t\treturn { value, elementStore: new DisposableStore() };\n\t}\n\n\trenderElement(\n\t\telement: ITreeNode<ReplEvaluationResult | Variable, FuzzyScore>,\n\t\tindex: number,\n\t\ttemplateData: IReplEvaluationResultTemplateData,\n\t): void {\n\t\ttemplateData.elementStore.clear();\n\t\tconst expression = element.element;\n\t\ttemplateData.elementStore.add(\n\t\t\tthis.expressionRenderer.renderValue(\n\t\t\t\ttemplateData.value,\n\t\t\t\texpression,\n\t\t\t\t{\n\t\t\t\t\tcolorize: true,\n\t\t\t\t\thover: false,\n\t\t\t\t\tsession: element.element.getSession(),\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tdisposeTemplate(templateData: IReplEvaluationResultTemplateData): void {\n\t\ttemplateData.elementStore.dispose();\n\t}\n}\n\nexport class ReplOutputElementRenderer\n\timplements\n\t\tITreeRenderer<\n\t\t\tReplOutputElement,\n\t\t\tFuzzyScore,\n\t\t\tIOutputReplElementTemplateData\n\t\t>\n{\n\tstatic readonly ID = \"outputReplElement\";\n\n\tconstructor(\n\t\tprivate readonly expressionRenderer: DebugExpressionRenderer,\n\t\t@IInstantiationService\n\t\tprivate readonly instaService: IInstantiationService,\n\t) {}\n\n\tget templateId(): string {\n\t\treturn ReplOutputElementRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IOutputReplElementTemplateData {\n\t\tconst data: IOutputReplElementTemplateData = Object.create(null);\n\t\tcontainer.classList.add(\"output\");\n\t\tconst expression = dom.append(\n\t\t\tcontainer,\n\t\t\t$(\".output.expression.value-and-source\"),\n\t\t);\n\n\t\tdata.container = container;\n\t\tdata.countContainer = dom.append(expression, $(\".count-badge-wrapper\"));\n\t\tdata.count = new CountBadge(\n\t\t\tdata.countContainer,\n\t\t\t{},\n\t\t\tdefaultCountBadgeStyles,\n\t\t);\n\t\tdata.value = dom.append(expression, $(\"span.value.label\"));\n\t\tdata.source = this.instaService.createInstance(\n\t\t\tSourceWidget,\n\t\t\texpression,\n\t\t);\n\t\tdata.elementDisposable = new DisposableStore();\n\n\t\treturn data;\n\t}\n\n\trenderElement(\n\t\t{ element }: ITreeNode<ReplOutputElement, FuzzyScore>,\n\t\tindex: number,\n\t\ttemplateData: IOutputReplElementTemplateData,\n\t): void {\n\t\ttemplateData.elementDisposable.clear();\n\t\tthis.setElementCount(element, templateData);\n\t\ttemplateData.elementDisposable.add(\n\t\t\telement.onDidChangeCount(() =>\n\t\t\t\tthis.setElementCount(element, templateData),\n\t\t\t),\n\t\t);\n\t\t// value\n\t\tdom.clearNode(templateData.value);\n\t\t// Reset classes to clear ansi decorations since templates are reused\n\t\ttemplateData.value.className = \"value\";\n\n\t\tconst locationReference = element.expression?.valueLocationReference;\n\t\ttemplateData.elementDisposable.add(\n\t\t\tthis.expressionRenderer.renderValue(\n\t\t\t\ttemplateData.value,\n\t\t\t\telement.value,\n\t\t\t\t{ wasANSI: true, session: element.session, locationReference },\n\t\t\t),\n\t\t);\n\n\t\ttemplateData.value.classList.add(\n\t\t\telement.severity === severity.Warning\n\t\t\t\t? \"warn\"\n\t\t\t\t: element.severity === severity.Error\n\t\t\t\t\t? \"error\"\n\t\t\t\t\t: element.severity === severity.Ignore\n\t\t\t\t\t\t? \"ignore\"\n\t\t\t\t\t\t: \"info\",\n\t\t);\n\t\ttemplateData.source.setSource(element.sourceData);\n\t\ttemplateData.getReplElementSource = () => element.sourceData;\n\t}\n\n\tprivate setElementCount(\n\t\telement: ReplOutputElement,\n\t\ttemplateData: IOutputReplElementTemplateData,\n\t): void {\n\t\tif (element.count >= 2) {\n\t\t\ttemplateData.count.setCount(element.count);\n\t\t\ttemplateData.countContainer.hidden = false;\n\t\t} else {\n\t\t\ttemplateData.countContainer.hidden = true;\n\t\t}\n\t}\n\n\tdisposeTemplate(templateData: IOutputReplElementTemplateData): void {\n\t\ttemplateData.source.dispose();\n\t\ttemplateData.elementDisposable.dispose();\n\t}\n\n\tdisposeElement(\n\t\t_element: ITreeNode<ReplOutputElement, FuzzyScore>,\n\t\t_index: number,\n\t\ttemplateData: IOutputReplElementTemplateData,\n\t): void {\n\t\ttemplateData.elementDisposable.clear();\n\t}\n}\n\nexport class ReplVariablesRenderer extends AbstractExpressionsRenderer<\n\tIExpression | ReplVariableElement\n> {\n\tstatic readonly ID = \"replVariable\";\n\n\tget templateId(): string {\n\t\treturn ReplVariablesRenderer.ID;\n\t}\n\n\tconstructor(\n\t\tprivate readonly expressionRenderer: DebugExpressionRenderer,\n\t\t@IDebugService debugService: IDebugService,\n\t\t@IContextViewService contextViewService: IContextViewService,\n\t\t@IHoverService hoverService: IHoverService,\n\t) {\n\t\tsuper(debugService, contextViewService, hoverService);\n\t}\n\n\tpublic renderElement(\n\t\tnode: ITreeNode<IExpression | ReplVariableElement, FuzzyScore>,\n\t\t_index: number,\n\t\tdata: IExpressionTemplateData,\n\t): void {\n\t\tconst element = node.element;\n\t\tdata.elementDisposable.clear();\n\t\tsuper.renderExpressionElement(\n\t\t\telement instanceof ReplVariableElement\n\t\t\t\t? element.expression\n\t\t\t\t: element,\n\t\t\tnode,\n\t\t\tdata,\n\t\t);\n\t}\n\n\tprotected renderExpression(\n\t\texpression: IExpression | ReplVariableElement,\n\t\tdata: IExpressionTemplateData,\n\t\thighlights: IHighlight[],\n\t): void {\n\t\tconst isReplVariable = expression instanceof ReplVariableElement;\n\t\tif (isReplVariable || !expression.name) {\n\t\t\tdata.label.set(\"\");\n\t\t\tconst value = isReplVariable ? expression.expression : expression;\n\t\t\tdata.elementDisposable.add(\n\t\t\t\tthis.expressionRenderer.renderValue(data.value, value, {\n\t\t\t\t\tcolorize: true,\n\t\t\t\t\thover: false,\n\t\t\t\t\tsession: expression.getSession(),\n\t\t\t\t}),\n\t\t\t);\n\t\t\tdata.expression.classList.remove(\"nested-variable\");\n\t\t} else {\n\t\t\tdata.elementDisposable.add(\n\t\t\t\tthis.expressionRenderer.renderVariable(\n\t\t\t\t\tdata,\n\t\t\t\t\texpression as Variable,\n\t\t\t\t\t{ showChanged: true, highlights },\n\t\t\t\t),\n\t\t\t);\n\t\t\tdata.expression.classList.toggle(\n\t\t\t\t\"nested-variable\",\n\t\t\t\tisNestedVariable(expression),\n\t\t\t);\n\t\t}\n\t}\n\n\tprotected getInputBoxOptions(\n\t\texpression: IExpression,\n\t): IInputBoxOptions | undefined {\n\t\treturn undefined;\n\t}\n}\n\nexport class ReplRawObjectsRenderer\n\timplements\n\t\tITreeRenderer<\n\t\t\tRawObjectReplElement,\n\t\t\tFuzzyScore,\n\t\t\tIRawObjectReplTemplateData\n\t\t>\n{\n\tstatic readonly ID = \"rawObject\";\n\n\tconstructor(private readonly expressionRenderer: DebugExpressionRenderer) {}\n\n\tget templateId(): string {\n\t\treturn ReplRawObjectsRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IRawObjectReplTemplateData {\n\t\tcontainer.classList.add(\"output\");\n\n\t\tconst expression = dom.append(container, $(\".output.expression\"));\n\t\tconst name = dom.append(expression, $(\"span.name\"));\n\t\tconst label = new HighlightedLabel(name);\n\t\tconst value = dom.append(expression, $(\"span.value\"));\n\n\t\treturn {\n\t\t\tcontainer,\n\t\t\texpression,\n\t\t\tname,\n\t\t\tlabel,\n\t\t\tvalue,\n\t\t\telementStore: new DisposableStore(),\n\t\t};\n\t}\n\n\trenderElement(\n\t\tnode: ITreeNode<RawObjectReplElement, FuzzyScore>,\n\t\tindex: number,\n\t\ttemplateData: IRawObjectReplTemplateData,\n\t): void {\n\t\ttemplateData.elementStore.clear();\n\n\t\t// key\n\t\tconst element = node.element;\n\t\ttemplateData.label.set(\n\t\t\telement.name ? `${element.name}:` : \"\",\n\t\t\tcreateMatches(node.filterData),\n\t\t);\n\t\tif (element.name) {\n\t\t\ttemplateData.name.textContent = `${element.name}:`;\n\t\t} else {\n\t\t\ttemplateData.name.textContent = \"\";\n\t\t}\n\n\t\t// value\n\t\ttemplateData.elementStore.add(\n\t\t\tthis.expressionRenderer.renderValue(\n\t\t\t\ttemplateData.value,\n\t\t\t\telement.value,\n\t\t\t\t{\n\t\t\t\t\thover: false,\n\t\t\t\t\tsession: node.element.getSession(),\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tdisposeTemplate(templateData: IRawObjectReplTemplateData): void {\n\t\ttemplateData.elementStore.dispose();\n\t\ttemplateData.label.dispose();\n\t}\n}\n\nfunction isNestedVariable(element: IReplElement) {\n\treturn (\n\t\telement instanceof Variable &&\n\t\t(element.parent instanceof ReplEvaluationResult ||\n\t\t\telement.parent instanceof Variable)\n\t);\n}\n\nexport class ReplDelegate extends CachedListVirtualDelegate<IReplElement> {\n\tconstructor(\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\tprivate readonly replOptions: IReplOptions,\n\t) {\n\t\tsuper();\n\t}\n\n\toverride getHeight(element: IReplElement): number {\n\t\tconst config =\n\t\t\tthis.configurationService.getValue<IDebugConfiguration>(\"debug\");\n\n\t\tif (!config.console.wordWrap) {\n\t\t\treturn this.estimateHeight(element, true);\n\t\t}\n\n\t\treturn super.getHeight(element);\n\t}\n\n\t/**\n\t * With wordWrap enabled, this is an estimate. With wordWrap disabled, this is the real height that the list will use.\n\t */\n\tprotected estimateHeight(\n\t\telement: IReplElement,\n\t\tignoreValueLength = false,\n\t): number {\n\t\tconst lineHeight = this.replOptions.replConfiguration.lineHeight;\n\t\tconst countNumberOfLines = (str: string) =>\n\t\t\tstr.match(/\\n/g)?.length ?? 0;\n\t\tconst hasValue = (e: any): e is { value: string } =>\n\t\t\ttypeof e.value === \"string\";\n\n\t\tif (hasValue(element) && !isNestedVariable(element)) {\n\t\t\tconst value = element.value;\n\t\t\tconst valueRows =\n\t\t\t\tcountNumberOfLines(value) +\n\t\t\t\t(ignoreValueLength ? 0 : Math.floor(value.length / 70)) + // Make an estimate for wrapping\n\t\t\t\t(element instanceof ReplOutputElement ? 0 : 1); // A SimpleReplElement ends in \\n if it's a complete line\n\n\t\t\treturn Math.max(valueRows, 1) * lineHeight;\n\t\t}\n\n\t\treturn lineHeight;\n\t}\n\n\tgetTemplateId(element: IReplElement): string {\n\t\tif (\n\t\t\telement instanceof Variable ||\n\t\t\telement instanceof ReplVariableElement\n\t\t) {\n\t\t\treturn ReplVariablesRenderer.ID;\n\t\t}\n\t\tif (element instanceof ReplEvaluationResult) {\n\t\t\treturn ReplEvaluationResultsRenderer.ID;\n\t\t}\n\t\tif (element instanceof ReplEvaluationInput) {\n\t\t\treturn ReplEvaluationInputsRenderer.ID;\n\t\t}\n\t\tif (element instanceof ReplOutputElement) {\n\t\t\treturn ReplOutputElementRenderer.ID;\n\t\t}\n\t\tif (element instanceof ReplGroup) {\n\t\t\treturn ReplGroupRenderer.ID;\n\t\t}\n\n\t\treturn ReplRawObjectsRenderer.ID;\n\t}\n\n\thasDynamicHeight(element: IReplElement): boolean {\n\t\tif (isNestedVariable(element)) {\n\t\t\t// Nested variables should always be in one line #111843\n\t\t\treturn false;\n\t\t}\n\t\t// Empty elements should not have dynamic height since they will be invisible\n\t\treturn element.toString().length > 0;\n\t}\n}\n\nfunction isDebugSession(obj: any): obj is IDebugSession {\n\treturn typeof obj.getReplElements === \"function\";\n}\n\nexport class ReplDataSource\n\timplements IAsyncDataSource<IDebugSession, IReplElement>\n{\n\thasChildren(element: IReplElement | IDebugSession): boolean {\n\t\tif (isDebugSession(element)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn !!(<IExpressionContainer | INestingReplElement>element)\n\t\t\t.hasChildren;\n\t}\n\n\tgetChildren(\n\t\telement: IReplElement | IDebugSession,\n\t): Promise<IReplElement[]> {\n\t\tif (isDebugSession(element)) {\n\t\t\treturn Promise.resolve(element.getReplElements());\n\t\t}\n\n\t\treturn Promise.resolve(\n\t\t\t(<IExpression | INestingReplElement>element).getChildren(),\n\t\t);\n\t}\n}\n\nexport class ReplAccessibilityProvider\n\timplements IListAccessibilityProvider<IReplElement>\n{\n\tgetWidgetAriaLabel(): string {\n\t\treturn localize(\"debugConsole\", \"Debug Console\");\n\t}\n\n\tgetAriaLabel(element: IReplElement): string {\n\t\tif (element instanceof Variable) {\n\t\t\treturn localize(\n\t\t\t\t\"replVariableAriaLabel\",\n\t\t\t\t\"Variable {0}, value {1}\",\n\t\t\t\telement.name,\n\t\t\t\telement.value,\n\t\t\t);\n\t\t}\n\t\tif (\n\t\t\telement instanceof ReplOutputElement ||\n\t\t\telement instanceof ReplEvaluationInput ||\n\t\t\telement instanceof ReplEvaluationResult\n\t\t) {\n\t\t\treturn (\n\t\t\t\telement.value +\n\t\t\t\t(element instanceof ReplOutputElement && element.count > 1\n\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"occurred\",\n\t\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\t\"Front will the value of the debug console element. Placeholder will be replaced by a number which represents occurrance count.\",\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\", occurred {0} times\",\n\t\t\t\t\t\t\telement.count,\n\t\t\t\t\t\t)\n\t\t\t\t\t: \"\")\n\t\t\t);\n\t\t}\n\t\tif (element instanceof RawObjectReplElement) {\n\t\t\treturn localize(\n\t\t\t\t\"replRawObjectAriaLabel\",\n\t\t\t\t\"Debug console variable {0}, value {1}\",\n\t\t\t\telement.name,\n\t\t\t\telement.value,\n\t\t\t);\n\t\t}\n\t\tif (element instanceof ReplGroup) {\n\t\t\treturn localize(\n\t\t\t\t\"replGroup\",\n\t\t\t\t\"Debug console group {0}\",\n\t\t\t\telement.name,\n\t\t\t);\n\t\t}\n\n\t\treturn \"\";\n\t}\n}\n\nclass SourceWidget extends Disposable {\n\tprivate readonly el: HTMLElement;\n\tprivate source?: IReplElementSource;\n\tprivate hover?: IManagedHover;\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t) {\n\t\tsuper();\n\t\tthis.el = dom.append(container, $(\".source\"));\n\t\tthis._register(\n\t\t\tdom.addDisposableListener(this.el, \"click\", (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t\tif (this.source) {\n\t\t\t\t\tthis.source.source.openInEditor(editorService, {\n\t\t\t\t\t\tstartLineNumber: this.source.lineNumber,\n\t\t\t\t\t\tstartColumn: this.source.column,\n\t\t\t\t\t\tendLineNumber: this.source.lineNumber,\n\t\t\t\t\t\tendColumn: this.source.column,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tpublic setSource(source?: IReplElementSource) {\n\t\tthis.source = source;\n\t\tthis.el.textContent = source\n\t\t\t? `${basename(source.source.name)}:${source.lineNumber}`\n\t\t\t: \"\";\n\n\t\tthis.hover ??= this._register(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\tthis.el,\n\t\t\t\t\"\",\n\t\t\t),\n\t\t);\n\t\tthis.hover.update(\n\t\t\tsource\n\t\t\t\t? `${this.labelService.getUriLabel(source.source.uri)}:${source.lineNumber}`\n\t\t\t\t: \"\",\n\t\t);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,YAAY,SAAS;AACrB,SAAS,kBAAkB;AAC3B;AAAA,EACC;AAAA,OAEM;AAEP,SAAS,+BAA+B;AACxC,SAAS,iCAAiC;AAO1C;AAAA,EAEC;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OAEM;AACP,SAAS,gBAAgB;AACzB,OAAO,cAAc;AACrB,SAAS,iBAAiB;AAC1B,SAAS,gBAAgB;AAEzB,SAAS,2BAA2B;AACpC,SAAS,qBAAqB;AAC9B,SAAS,6BAA6B;AACtC,SAAS,qBAAqB;AAC9B,SAAS,+BAA+B;AACxC,SAAS,sBAAsB;AAC/B;AAAA,EAEC;AAAA,OAQM;AACP,SAAS,gBAAgB;AACzB;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,OAGM;AAEP,SAAS,mCAAmC;AAE5C,MAAM,IAAI,IAAI;AAoCP,MAAM,6BAOb;AAAA,EA/GA,OA+GA;AAAA;AAAA;AAAA,EACC,OAAgB,KAAK;AAAA,EAErB,IAAI,aAAqB;AACxB,WAAO,6BAA6B;AAAA,EACrC;AAAA,EAEA,eAAe,WAA0D;AACxE,QAAI;AAAA,MACH;AAAA,MACA;AAAA,QACC,eACC,UAAU,cAAc,2BAA2B;AAAA,MACrD;AAAA,IACD;AACA,UAAM,QAAQ,IAAI,OAAO,WAAW,EAAE,aAAa,CAAC;AACpD,UAAM,QAAQ,IAAI,iBAAiB,KAAK;AACxC,WAAO,EAAE,MAAM;AAAA,EAChB;AAAA,EAEA,cACC,SACA,OACA,cACO;AACP,UAAM,aAAa,QAAQ;AAC3B,iBAAa,MAAM;AAAA,MAClB,WAAW;AAAA,MACX,cAAc,QAAQ,UAAU;AAAA,IACjC;AAAA,EACD;AAAA,EAEA,gBAAgB,cAAsD;AACrE,iBAAa,MAAM,QAAQ;AAAA,EAC5B;AACD;AAEO,IAAM,oBAAN,MAEP;AAAA,EAGC,YACkB,oBAEA,cAChB;AAHgB;AAEA;AAAA,EACf;AAAA,EA7JJ,OAsJA;AAAA;AAAA;AAAA,EACC,OAAgB,KAAK;AAAA,EAQrB,IAAI,aAAqB;AACxB,WAAO,kBAAkB;AAAA,EAC1B;AAAA,EAEA,eAAe,WAAgD;AAC9D,cAAU,UAAU,IAAI,OAAO;AAC/B,UAAM,aAAa,IAAI;AAAA,MACtB;AAAA,MACA,EAAE,qCAAqC;AAAA,IACxC;AACA,UAAM,QAAQ,IAAI,OAAO,YAAY,EAAE,YAAY,CAAC;AACpD,UAAM,SAAS,KAAK,aAAa;AAAA,MAChC;AAAA,MACA;AAAA,IACD;AACA,WAAO,EAAE,OAAO,OAAO;AAAA,EACxB;AAAA,EAEA,cACC,SACA,QACA,cACO;AACP,iBAAa,mBAAmB,QAAQ;AACxC,UAAM,YAAY,QAAQ;AAC1B,QAAI,UAAU,aAAa,KAAK;AAChC,iBAAa,oBAAoB,KAAK,mBAAmB;AAAA,MACxD,aAAa;AAAA,MACb,UAAU;AAAA,MACV,EAAE,SAAS,MAAM,SAAS,QAAQ,QAAQ,QAAQ;AAAA,IACnD;AACA,iBAAa,OAAO,UAAU,UAAU,UAAU;AAAA,EACnD;AAAA,EAEA,gBAAgB,cAA4C;AAC3D,iBAAa,mBAAmB,QAAQ;AACxC,iBAAa,OAAO,QAAQ;AAAA,EAC7B;AACD;AAjDa,oBAAN;AAAA,EAOJ;AAAA,GAPU;AAmDN,MAAM,8BAOb;AAAA,EAOC,YAA6B,oBAA6C;AAA7C;AAAA,EAA8C;AAAA,EArN5E,OA8MA;AAAA;AAAA;AAAA,EACC,OAAgB,KAAK;AAAA,EAErB,IAAI,aAAqB;AACxB,WAAO,8BAA8B;AAAA,EACtC;AAAA,EAIA,eAAe,WAA2D;AACzE,UAAM,SAAS,IAAI;AAAA,MAClB;AAAA,MACA,EAAE,+BAA+B;AAAA,IAClC;AACA,UAAM,QAAQ,IAAI,OAAO,QAAQ,EAAE,YAAY,CAAC;AAEhD,WAAO,EAAE,OAAO,cAAc,IAAI,gBAAgB,EAAE;AAAA,EACrD;AAAA,EAEA,cACC,SACA,OACA,cACO;AACP,iBAAa,aAAa,MAAM;AAChC,UAAM,aAAa,QAAQ;AAC3B,iBAAa,aAAa;AAAA,MACzB,KAAK,mBAAmB;AAAA,QACvB,aAAa;AAAA,QACb;AAAA,QACA;AAAA,UACC,UAAU;AAAA,UACV,OAAO;AAAA,UACP,SAAS,QAAQ,QAAQ,WAAW;AAAA,QACrC;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,gBAAgB,cAAuD;AACtE,iBAAa,aAAa,QAAQ;AAAA,EACnC;AACD;AAEO,IAAM,4BAAN,MAOP;AAAA,EAGC,YACkB,oBAEA,cAChB;AAHgB;AAEA;AAAA,EACf;AAAA,EAxQJ,OAiQA;AAAA;AAAA;AAAA,EACC,OAAgB,KAAK;AAAA,EAQrB,IAAI,aAAqB;AACxB,WAAO,0BAA0B;AAAA,EAClC;AAAA,EAEA,eAAe,WAAwD;AACtE,UAAM,OAAuC,uBAAO,OAAO,IAAI;AAC/D,cAAU,UAAU,IAAI,QAAQ;AAChC,UAAM,aAAa,IAAI;AAAA,MACtB;AAAA,MACA,EAAE,qCAAqC;AAAA,IACxC;AAEA,SAAK,YAAY;AACjB,SAAK,iBAAiB,IAAI,OAAO,YAAY,EAAE,sBAAsB,CAAC;AACtE,SAAK,QAAQ,IAAI;AAAA,MAChB,KAAK;AAAA,MACL,CAAC;AAAA,MACD;AAAA,IACD;AACA,SAAK,QAAQ,IAAI,OAAO,YAAY,EAAE,kBAAkB,CAAC;AACzD,SAAK,SAAS,KAAK,aAAa;AAAA,MAC/B;AAAA,MACA;AAAA,IACD;AACA,SAAK,oBAAoB,IAAI,gBAAgB;AAE7C,WAAO;AAAA,EACR;AAAA,EAEA,cACC,EAAE,QAAQ,GACV,OACA,cACO;AACP,iBAAa,kBAAkB,MAAM;AACrC,SAAK,gBAAgB,SAAS,YAAY;AAC1C,iBAAa,kBAAkB;AAAA,MAC9B,QAAQ;AAAA,QAAiB,MACxB,KAAK,gBAAgB,SAAS,YAAY;AAAA,MAC3C;AAAA,IACD;AAEA,QAAI,UAAU,aAAa,KAAK;AAEhC,iBAAa,MAAM,YAAY;AAE/B,UAAM,oBAAoB,QAAQ,YAAY;AAC9C,iBAAa,kBAAkB;AAAA,MAC9B,KAAK,mBAAmB;AAAA,QACvB,aAAa;AAAA,QACb,QAAQ;AAAA,QACR,EAAE,SAAS,MAAM,SAAS,QAAQ,SAAS,kBAAkB;AAAA,MAC9D;AAAA,IACD;AAEA,iBAAa,MAAM,UAAU;AAAA,MAC5B,QAAQ,aAAa,SAAS,UAC3B,SACA,QAAQ,aAAa,SAAS,QAC7B,UACA,QAAQ,aAAa,SAAS,SAC7B,WACA;AAAA,IACN;AACA,iBAAa,OAAO,UAAU,QAAQ,UAAU;AAChD,iBAAa,uBAAuB,MAAM,QAAQ;AAAA,EACnD;AAAA,EAEQ,gBACP,SACA,cACO;AACP,QAAI,QAAQ,SAAS,GAAG;AACvB,mBAAa,MAAM,SAAS,QAAQ,KAAK;AACzC,mBAAa,eAAe,SAAS;AAAA,IACtC,OAAO;AACN,mBAAa,eAAe,SAAS;AAAA,IACtC;AAAA,EACD;AAAA,EAEA,gBAAgB,cAAoD;AACnE,iBAAa,OAAO,QAAQ;AAC5B,iBAAa,kBAAkB,QAAQ;AAAA,EACxC;AAAA,EAEA,eACC,UACA,QACA,cACO;AACP,iBAAa,kBAAkB,MAAM;AAAA,EACtC;AACD;AA5Ga,4BAAN;AAAA,EAYJ;AAAA,GAZU;AA8GN,IAAM,wBAAN,cAAoC,4BAEzC;AAAA,EAOD,YACkB,oBACF,cACM,oBACN,cACd;AACD,UAAM,cAAc,oBAAoB,YAAY;AALnC;AAAA,EAMlB;AAAA,EAxXD,OA0WE;AAAA;AAAA;AAAA,EACD,OAAgB,KAAK;AAAA,EAErB,IAAI,aAAqB;AACxB,WAAO,sBAAsB;AAAA,EAC9B;AAAA,EAWO,cACN,MACA,QACA,MACO;AACP,UAAM,UAAU,KAAK;AACrB,SAAK,kBAAkB,MAAM;AAC7B,UAAM;AAAA,MACL,mBAAmB,sBAChB,QAAQ,aACR;AAAA,MACH;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAAA,EAEU,iBACT,YACA,MACA,YACO;AACP,UAAM,iBAAiB,sBAAsB;AAC7C,QAAI,kBAAkB,CAAC,WAAW,MAAM;AACvC,WAAK,MAAM,IAAI,EAAE;AACjB,YAAM,QAAQ,iBAAiB,WAAW,aAAa;AACvD,WAAK,kBAAkB;AAAA,QACtB,KAAK,mBAAmB,YAAY,KAAK,OAAO,OAAO;AAAA,UACtD,UAAU;AAAA,UACV,OAAO;AAAA,UACP,SAAS,WAAW,WAAW;AAAA,QAChC,CAAC;AAAA,MACF;AACA,WAAK,WAAW,UAAU,OAAO,iBAAiB;AAAA,IACnD,OAAO;AACN,WAAK,kBAAkB;AAAA,QACtB,KAAK,mBAAmB;AAAA,UACvB;AAAA,UACA;AAAA,UACA,EAAE,aAAa,MAAM,WAAW;AAAA,QACjC;AAAA,MACD;AACA,WAAK,WAAW,UAAU;AAAA,QACzB;AAAA,QACA,iBAAiB,UAAU;AAAA,MAC5B;AAAA,IACD;AAAA,EACD;AAAA,EAEU,mBACT,YAC+B;AAC/B,WAAO;AAAA,EACR;AACD;AAvEa,wBAAN;AAAA,EAWJ;AAAA,EACA;AAAA,EACA;AAAA,GAbU;AAyEN,MAAM,uBAOb;AAAA,EAGC,YAA6B,oBAA6C;AAA7C;AAAA,EAA8C;AAAA,EA3b5E,OAwbA;AAAA;AAAA;AAAA,EACC,OAAgB,KAAK;AAAA,EAIrB,IAAI,aAAqB;AACxB,WAAO,uBAAuB;AAAA,EAC/B;AAAA,EAEA,eAAe,WAAoD;AAClE,cAAU,UAAU,IAAI,QAAQ;AAEhC,UAAM,aAAa,IAAI,OAAO,WAAW,EAAE,oBAAoB,CAAC;AAChE,UAAM,OAAO,IAAI,OAAO,YAAY,EAAE,WAAW,CAAC;AAClD,UAAM,QAAQ,IAAI,iBAAiB,IAAI;AACvC,UAAM,QAAQ,IAAI,OAAO,YAAY,EAAE,YAAY,CAAC;AAEpD,WAAO;AAAA,MACN;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,cAAc,IAAI,gBAAgB;AAAA,IACnC;AAAA,EACD;AAAA,EAEA,cACC,MACA,OACA,cACO;AACP,iBAAa,aAAa,MAAM;AAGhC,UAAM,UAAU,KAAK;AACrB,iBAAa,MAAM;AAAA,MAClB,QAAQ,OAAO,GAAG,QAAQ,IAAI,MAAM;AAAA,MACpC,cAAc,KAAK,UAAU;AAAA,IAC9B;AACA,QAAI,QAAQ,MAAM;AACjB,mBAAa,KAAK,cAAc,GAAG,QAAQ,IAAI;AAAA,IAChD,OAAO;AACN,mBAAa,KAAK,cAAc;AAAA,IACjC;AAGA,iBAAa,aAAa;AAAA,MACzB,KAAK,mBAAmB;AAAA,QACvB,aAAa;AAAA,QACb,QAAQ;AAAA,QACR;AAAA,UACC,OAAO;AAAA,UACP,SAAS,KAAK,QAAQ,WAAW;AAAA,QAClC;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,gBAAgB,cAAgD;AAC/D,iBAAa,aAAa,QAAQ;AAClC,iBAAa,MAAM,QAAQ;AAAA,EAC5B;AACD;AAEA,SAAS,iBAAiB,SAAuB;AAChD,SACC,mBAAmB,aAClB,QAAQ,kBAAkB,wBAC1B,QAAQ,kBAAkB;AAE7B;AANS;AAQF,MAAM,qBAAqB,0BAAwC;AAAA,EACzE,YACkB,sBACA,aAChB;AACD,UAAM;AAHW;AACA;AAAA,EAGlB;AAAA,EAvgBD,OAigB0E;AAAA;AAAA;AAAA,EAQhE,UAAU,SAA+B;AACjD,UAAM,SACL,KAAK,qBAAqB,SAA8B,OAAO;AAEhE,QAAI,CAAC,OAAO,QAAQ,UAAU;AAC7B,aAAO,KAAK,eAAe,SAAS,IAAI;AAAA,IACzC;AAEA,WAAO,MAAM,UAAU,OAAO;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA,EAKU,eACT,SACA,oBAAoB,OACX;AACT,UAAM,aAAa,KAAK,YAAY,kBAAkB;AACtD,UAAM,qBAAqB,wBAAC,QAC3B,IAAI,MAAM,KAAK,GAAG,UAAU,GADF;AAE3B,UAAM,WAAW,wBAAC,MACjB,OAAO,EAAE,UAAU,UADH;AAGjB,QAAI,SAAS,OAAO,KAAK,CAAC,iBAAiB,OAAO,GAAG;AACpD,YAAM,QAAQ,QAAQ;AACtB,YAAM,YACL,mBAAmB,KAAK,KACvB,oBAAoB,IAAI,KAAK,MAAM,MAAM,SAAS,EAAE;AAAA,OACpD,mBAAmB,oBAAoB,IAAI;AAE7C,aAAO,KAAK,IAAI,WAAW,CAAC,IAAI;AAAA,IACjC;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,cAAc,SAA+B;AAC5C,QACC,mBAAmB,YACnB,mBAAmB,qBAClB;AACD,aAAO,sBAAsB;AAAA,IAC9B;AACA,QAAI,mBAAmB,sBAAsB;AAC5C,aAAO,8BAA8B;AAAA,IACtC;AACA,QAAI,mBAAmB,qBAAqB;AAC3C,aAAO,6BAA6B;AAAA,IACrC;AACA,QAAI,mBAAmB,mBAAmB;AACzC,aAAO,0BAA0B;AAAA,IAClC;AACA,QAAI,mBAAmB,WAAW;AACjC,aAAO,kBAAkB;AAAA,IAC1B;AAEA,WAAO,uBAAuB;AAAA,EAC/B;AAAA,EAEA,iBAAiB,SAAgC;AAChD,QAAI,iBAAiB,OAAO,GAAG;AAE9B,aAAO;AAAA,IACR;AAEA,WAAO,QAAQ,SAAS,EAAE,SAAS;AAAA,EACpC;AACD;AAEA,SAAS,eAAe,KAAgC;AACvD,SAAO,OAAO,IAAI,oBAAoB;AACvC;AAFS;AAIF,MAAM,eAEb;AAAA,EArlBA,OAqlBA;AAAA;AAAA;AAAA,EACC,YAAY,SAAgD;AAC3D,QAAI,eAAe,OAAO,GAAG;AAC5B,aAAO;AAAA,IACR;AAEA,WAAO,CAAC,CAA8C,QACpD;AAAA,EACH;AAAA,EAEA,YACC,SAC0B;AAC1B,QAAI,eAAe,OAAO,GAAG;AAC5B,aAAO,QAAQ,QAAQ,QAAQ,gBAAgB,CAAC;AAAA,IACjD;AAEA,WAAO,QAAQ;AAAA,MACsB,QAAS,YAAY;AAAA,IAC1D;AAAA,EACD;AACD;AAEO,MAAM,0BAEb;AAAA,EA9mBA,OA8mBA;AAAA;AAAA;AAAA,EACC,qBAA6B;AAC5B,WAAO,SAAS,gBAAgB,eAAe;AAAA,EAChD;AAAA,EAEA,aAAa,SAA+B;AAC3C,QAAI,mBAAmB,UAAU;AAChC,aAAO;AAAA,QACN;AAAA,QACA;AAAA,QACA,QAAQ;AAAA,QACR,QAAQ;AAAA,MACT;AAAA,IACD;AACA,QACC,mBAAmB,qBACnB,mBAAmB,uBACnB,mBAAmB,sBAClB;AACD,aACC,QAAQ,SACP,mBAAmB,qBAAqB,QAAQ,QAAQ,IACtD;AAAA,QACA;AAAA,UACC,KAAK;AAAA,UACL,SAAS;AAAA,YACR;AAAA,UACD;AAAA,QACD;AAAA,QACA;AAAA,QACA,QAAQ;AAAA,MACT,IACC;AAAA,IAEL;AACA,QAAI,mBAAmB,sBAAsB;AAC5C,aAAO;AAAA,QACN;AAAA,QACA;AAAA,QACA,QAAQ;AAAA,QACR,QAAQ;AAAA,MACT;AAAA,IACD;AACA,QAAI,mBAAmB,WAAW;AACjC,aAAO;AAAA,QACN;AAAA,QACA;AAAA,QACA,QAAQ;AAAA,MACT;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AACD;AAEA,IAAM,eAAN,cAA2B,WAAW;AAAA,EAKrC,YACC,WACgB,eACgB,cACA,cAC/B;AACD,UAAM;AAH0B;AACA;AAGhC,SAAK,KAAK,IAAI,OAAO,WAAW,EAAE,SAAS,CAAC;AAC5C,SAAK;AAAA,MACJ,IAAI,sBAAsB,KAAK,IAAI,SAAS,CAAC,MAAM;AAClD,UAAE,eAAe;AACjB,UAAE,gBAAgB;AAClB,YAAI,KAAK,QAAQ;AAChB,eAAK,OAAO,OAAO,aAAa,eAAe;AAAA,YAC9C,iBAAiB,KAAK,OAAO;AAAA,YAC7B,aAAa,KAAK,OAAO;AAAA,YACzB,eAAe,KAAK,OAAO;AAAA,YAC3B,WAAW,KAAK,OAAO;AAAA,UACxB,CAAC;AAAA,QACF;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAhsBD,OAqqBsC;AAAA;AAAA;AAAA,EACpB;AAAA,EACT;AAAA,EACA;AAAA,EA0BD,UAAU,QAA6B;AAC7C,SAAK,SAAS;AACd,SAAK,GAAG,cAAc,SACnB,GAAG,SAAS,OAAO,OAAO,IAAI,CAAC,IAAI,OAAO,UAAU,KACpD;AAEH,SAAK,UAAU,KAAK;AAAA,MACnB,KAAK,aAAa;AAAA,QACjB,wBAAwB,OAAO;AAAA,QAC/B,KAAK;AAAA,QACL;AAAA,MACD;AAAA,IACD;AACA,SAAK,MAAM;AAAA,MACV,SACG,GAAG,KAAK,aAAa,YAAY,OAAO,OAAO,GAAG,CAAC,IAAI,OAAO,UAAU,KACxE;AAAA,IACJ;AAAA,EACD;AACD;AAhDM,eAAN;AAAA,EAOG;AAAA,EACA;AAAA,EACA;AAAA,GATG;",
  "names": []
}
