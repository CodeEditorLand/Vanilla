{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/replViewer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { CountBadge } from '../../../../base/browser/ui/countBadge/countBadge.js';\nimport { HighlightedLabel, IHighlight } from '../../../../base/browser/ui/highlightedlabel/highlightedLabel.js';\nimport { IManagedHover } from '../../../../base/browser/ui/hover/hover.js';\nimport { getDefaultHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegateFactory.js';\nimport { CachedListVirtualDelegate } from '../../../../base/browser/ui/list/list.js';\nimport { IListAccessibilityProvider } from '../../../../base/browser/ui/list/listWidget.js';\nimport { IAsyncDataSource, ITreeNode, ITreeRenderer } from '../../../../base/browser/ui/tree/tree.js';\nimport { createMatches, FuzzyScore } from '../../../../base/common/filters.js';\nimport { Disposable, DisposableStore, IDisposable } from '../../../../base/common/lifecycle.js';\nimport { basename } from '../../../../base/common/path.js';\nimport severity from '../../../../base/common/severity.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { localize } from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IContextViewService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { defaultCountBadgeStyles } from '../../../../platform/theme/browser/defaultStyles.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IDebugConfiguration, IDebugService, IDebugSession, IExpression, IExpressionContainer, INestingReplElement, IReplElement, IReplElementSource, IReplOptions } from '../common/debug.js';\nimport { Variable } from '../common/debugModel.js';\nimport { RawObjectReplElement, ReplEvaluationInput, ReplEvaluationResult, ReplGroup, ReplOutputElement, ReplVariableElement } from '../common/replModel.js';\nimport { AbstractExpressionsRenderer, IExpressionTemplateData, IInputBoxOptions } from './baseDebugView.js';\nimport { DebugExpressionRenderer } from './debugExpressionRenderer.js';\nimport { debugConsoleEvaluationInput } from './debugIcons.js';\n\nconst $ = dom.$;\n\ninterface IReplEvaluationInputTemplateData {\n\tlabel: HighlightedLabel;\n}\n\ninterface IReplGroupTemplateData {\n\tlabel: HTMLElement;\n\tsource: SourceWidget;\n\telementDisposable?: IDisposable;\n}\n\ninterface IReplEvaluationResultTemplateData {\n\tvalue: HTMLElement;\n\telementStore: DisposableStore;\n}\n\ninterface IOutputReplElementTemplateData {\n\tcontainer: HTMLElement;\n\tcount: CountBadge;\n\tcountContainer: HTMLElement;\n\tvalue: HTMLElement;\n\tsource: SourceWidget;\n\tgetReplElementSource(): IReplElementSource | undefined;\n\telementDisposable: DisposableStore;\n}\n\ninterface IRawObjectReplTemplateData {\n\tcontainer: HTMLElement;\n\texpression: HTMLElement;\n\tname: HTMLElement;\n\tvalue: HTMLElement;\n\tlabel: HighlightedLabel;\n\telementStore: DisposableStore;\n}\n\nexport class ReplEvaluationInputsRenderer implements ITreeRenderer<ReplEvaluationInput, FuzzyScore, IReplEvaluationInputTemplateData> {\n\tstatic readonly ID = 'replEvaluationInput';\n\n\tget templateId(): string {\n\t\treturn ReplEvaluationInputsRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IReplEvaluationInputTemplateData {\n\t\tdom.append(container, $('span.arrow' + ThemeIcon.asCSSSelector(debugConsoleEvaluationInput)));\n\t\tconst input = dom.append(container, $('.expression'));\n\t\tconst label = new HighlightedLabel(input);\n\t\treturn { label };\n\t}\n\n\trenderElement(element: ITreeNode<ReplEvaluationInput, FuzzyScore>, index: number, templateData: IReplEvaluationInputTemplateData): void {\n\t\tconst evaluation = element.element;\n\t\ttemplateData.label.set(evaluation.value, createMatches(element.filterData));\n\t}\n\n\tdisposeTemplate(templateData: IReplEvaluationInputTemplateData): void {\n\t\ttemplateData.label.dispose();\n\t}\n}\n\nexport class ReplGroupRenderer implements ITreeRenderer<ReplGroup, FuzzyScore, IReplGroupTemplateData> {\n\tstatic readonly ID = 'replGroup';\n\n\tconstructor(\n\t\tprivate readonly expressionRenderer: DebugExpressionRenderer,\n\t\t@IInstantiationService private readonly instaService: IInstantiationService,\n\t) { }\n\n\tget templateId(): string {\n\t\treturn ReplGroupRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IReplGroupTemplateData {\n\t\tcontainer.classList.add('group');\n\t\tconst expression = dom.append(container, $('.output.expression.value-and-source'));\n\t\tconst label = dom.append(expression, $('span.label'));\n\t\tconst source = this.instaService.createInstance(SourceWidget, expression);\n\t\treturn { label, source };\n\t}\n\n\trenderElement(element: ITreeNode<ReplGroup, FuzzyScore>, _index: number, templateData: IReplGroupTemplateData): void {\n\n\t\ttemplateData.elementDisposable?.dispose();\n\t\tconst replGroup = element.element;\n\t\tdom.clearNode(templateData.label);\n\t\ttemplateData.elementDisposable = this.expressionRenderer.renderValue(templateData.label, replGroup.name, { wasANSI: true, session: element.element.session });\n\t\ttemplateData.source.setSource(replGroup.sourceData);\n\t}\n\n\tdisposeTemplate(templateData: IReplGroupTemplateData): void {\n\t\ttemplateData.elementDisposable?.dispose();\n\t\ttemplateData.source.dispose();\n\t}\n}\n\nexport class ReplEvaluationResultsRenderer implements ITreeRenderer<ReplEvaluationResult | Variable, FuzzyScore, IReplEvaluationResultTemplateData> {\n\tstatic readonly ID = 'replEvaluationResult';\n\n\tget templateId(): string {\n\t\treturn ReplEvaluationResultsRenderer.ID;\n\t}\n\n\tconstructor(\n\t\tprivate readonly expressionRenderer: DebugExpressionRenderer,\n\t) { }\n\n\trenderTemplate(container: HTMLElement): IReplEvaluationResultTemplateData {\n\t\tconst output = dom.append(container, $('.evaluation-result.expression'));\n\t\tconst value = dom.append(output, $('span.value'));\n\n\t\treturn { value, elementStore: new DisposableStore() };\n\t}\n\n\trenderElement(element: ITreeNode<ReplEvaluationResult | Variable, FuzzyScore>, index: number, templateData: IReplEvaluationResultTemplateData): void {\n\t\ttemplateData.elementStore.clear();\n\t\tconst expression = element.element;\n\t\ttemplateData.elementStore.add(this.expressionRenderer.renderValue(templateData.value, expression, {\n\t\t\tcolorize: true,\n\t\t\thover: false,\n\t\t\tsession: element.element.getSession(),\n\t\t}));\n\t}\n\n\tdisposeTemplate(templateData: IReplEvaluationResultTemplateData): void {\n\t\ttemplateData.elementStore.dispose();\n\t}\n}\n\nexport class ReplOutputElementRenderer implements ITreeRenderer<ReplOutputElement, FuzzyScore, IOutputReplElementTemplateData> {\n\tstatic readonly ID = 'outputReplElement';\n\n\tconstructor(\n\t\tprivate readonly expressionRenderer: DebugExpressionRenderer,\n\t\t@IInstantiationService private readonly instaService: IInstantiationService,\n\t) { }\n\n\tget templateId(): string {\n\t\treturn ReplOutputElementRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IOutputReplElementTemplateData {\n\t\tconst data: IOutputReplElementTemplateData = Object.create(null);\n\t\tcontainer.classList.add('output');\n\t\tconst expression = dom.append(container, $('.output.expression.value-and-source'));\n\n\t\tdata.container = container;\n\t\tdata.countContainer = dom.append(expression, $('.count-badge-wrapper'));\n\t\tdata.count = new CountBadge(data.countContainer, {}, defaultCountBadgeStyles);\n\t\tdata.value = dom.append(expression, $('span.value.label'));\n\t\tdata.source = this.instaService.createInstance(SourceWidget, expression);\n\t\tdata.elementDisposable = new DisposableStore();\n\n\t\treturn data;\n\t}\n\n\trenderElement({ element }: ITreeNode<ReplOutputElement, FuzzyScore>, index: number, templateData: IOutputReplElementTemplateData): void {\n\t\ttemplateData.elementDisposable.clear();\n\t\tthis.setElementCount(element, templateData);\n\t\ttemplateData.elementDisposable.add(element.onDidChangeCount(() => this.setElementCount(element, templateData)));\n\t\t// value\n\t\tdom.clearNode(templateData.value);\n\t\t// Reset classes to clear ansi decorations since templates are reused\n\t\ttemplateData.value.className = 'value';\n\n\t\tconst locationReference = element.expression?.valueLocationReference;\n\t\ttemplateData.elementDisposable.add(this.expressionRenderer.renderValue(templateData.value, element.value, { wasANSI: true, session: element.session, locationReference }));\n\n\t\ttemplateData.value.classList.add((element.severity === severity.Warning) ? 'warn' : (element.severity === severity.Error) ? 'error' : (element.severity === severity.Ignore) ? 'ignore' : 'info');\n\t\ttemplateData.source.setSource(element.sourceData);\n\t\ttemplateData.getReplElementSource = () => element.sourceData;\n\t}\n\n\tprivate setElementCount(element: ReplOutputElement, templateData: IOutputReplElementTemplateData): void {\n\t\tif (element.count >= 2) {\n\t\t\ttemplateData.count.setCount(element.count);\n\t\t\ttemplateData.countContainer.hidden = false;\n\t\t} else {\n\t\t\ttemplateData.countContainer.hidden = true;\n\t\t}\n\t}\n\n\tdisposeTemplate(templateData: IOutputReplElementTemplateData): void {\n\t\ttemplateData.source.dispose();\n\t\ttemplateData.elementDisposable.dispose();\n\t}\n\n\tdisposeElement(_element: ITreeNode<ReplOutputElement, FuzzyScore>, _index: number, templateData: IOutputReplElementTemplateData): void {\n\t\ttemplateData.elementDisposable.clear();\n\t}\n}\n\nexport class ReplVariablesRenderer extends AbstractExpressionsRenderer<IExpression | ReplVariableElement> {\n\n\tstatic readonly ID = 'replVariable';\n\n\tget templateId(): string {\n\t\treturn ReplVariablesRenderer.ID;\n\t}\n\n\tconstructor(\n\t\tprivate readonly expressionRenderer: DebugExpressionRenderer,\n\t\t@IDebugService debugService: IDebugService,\n\t\t@IContextViewService contextViewService: IContextViewService,\n\t\t@IHoverService hoverService: IHoverService,\n\t) {\n\t\tsuper(debugService, contextViewService, hoverService);\n\t}\n\n\tpublic renderElement(node: ITreeNode<IExpression | ReplVariableElement, FuzzyScore>, _index: number, data: IExpressionTemplateData): void {\n\t\tconst element = node.element;\n\t\tdata.elementDisposable.clear();\n\t\tsuper.renderExpressionElement(element instanceof ReplVariableElement ? element.expression : element, node, data);\n\t}\n\n\tprotected renderExpression(expression: IExpression | ReplVariableElement, data: IExpressionTemplateData, highlights: IHighlight[]): void {\n\t\tconst isReplVariable = expression instanceof ReplVariableElement;\n\t\tif (isReplVariable || !expression.name) {\n\t\t\tdata.label.set('');\n\t\t\tconst value = isReplVariable ? expression.expression : expression;\n\t\t\tdata.elementDisposable.add(this.expressionRenderer.renderValue(data.value, value, { colorize: true, hover: false, session: expression.getSession() }));\n\t\t\tdata.expression.classList.remove('nested-variable');\n\t\t} else {\n\t\t\tdata.elementDisposable.add(this.expressionRenderer.renderVariable(data, expression as Variable, { showChanged: true, highlights }));\n\t\t\tdata.expression.classList.toggle('nested-variable', isNestedVariable(expression));\n\t\t}\n\t}\n\n\tprotected getInputBoxOptions(expression: IExpression): IInputBoxOptions | undefined {\n\t\treturn undefined;\n\t}\n}\n\nexport class ReplRawObjectsRenderer implements ITreeRenderer<RawObjectReplElement, FuzzyScore, IRawObjectReplTemplateData> {\n\tstatic readonly ID = 'rawObject';\n\n\tconstructor(\n\t\tprivate readonly expressionRenderer: DebugExpressionRenderer,\n\t) { }\n\n\tget templateId(): string {\n\t\treturn ReplRawObjectsRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IRawObjectReplTemplateData {\n\t\tcontainer.classList.add('output');\n\n\t\tconst expression = dom.append(container, $('.output.expression'));\n\t\tconst name = dom.append(expression, $('span.name'));\n\t\tconst label = new HighlightedLabel(name);\n\t\tconst value = dom.append(expression, $('span.value'));\n\n\t\treturn { container, expression, name, label, value, elementStore: new DisposableStore() };\n\t}\n\n\trenderElement(node: ITreeNode<RawObjectReplElement, FuzzyScore>, index: number, templateData: IRawObjectReplTemplateData): void {\n\t\ttemplateData.elementStore.clear();\n\n\t\t// key\n\t\tconst element = node.element;\n\t\ttemplateData.label.set(element.name ? `${element.name}:` : '', createMatches(node.filterData));\n\t\tif (element.name) {\n\t\t\ttemplateData.name.textContent = `${element.name}:`;\n\t\t} else {\n\t\t\ttemplateData.name.textContent = '';\n\t\t}\n\n\t\t// value\n\t\ttemplateData.elementStore.add(this.expressionRenderer.renderValue(templateData.value, element.value, {\n\t\t\thover: false,\n\t\t\tsession: node.element.getSession(),\n\t\t}));\n\t}\n\n\tdisposeTemplate(templateData: IRawObjectReplTemplateData): void {\n\t\ttemplateData.elementStore.dispose();\n\t\ttemplateData.label.dispose();\n\t}\n}\n\nfunction isNestedVariable(element: IReplElement) {\n\treturn element instanceof Variable && (element.parent instanceof ReplEvaluationResult || element.parent instanceof Variable);\n}\n\nexport class ReplDelegate extends CachedListVirtualDelegate<IReplElement> {\n\n\tconstructor(\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\tprivate readonly replOptions: IReplOptions\n\t) {\n\t\tsuper();\n\t}\n\n\toverride getHeight(element: IReplElement): number {\n\t\tconst config = this.configurationService.getValue<IDebugConfiguration>('debug');\n\n\t\tif (!config.console.wordWrap) {\n\t\t\treturn this.estimateHeight(element, true);\n\t\t}\n\n\t\treturn super.getHeight(element);\n\t}\n\n\t/**\n\t * With wordWrap enabled, this is an estimate. With wordWrap disabled, this is the real height that the list will use.\n\t */\n\tprotected estimateHeight(element: IReplElement, ignoreValueLength = false): number {\n\t\tconst lineHeight = this.replOptions.replConfiguration.lineHeight;\n\t\tconst countNumberOfLines = (str: string) => str.match(/\\n/g)?.length ?? 0;\n\t\tconst hasValue = (e: any): e is { value: string } => typeof e.value === 'string';\n\n\t\tif (hasValue(element) && !isNestedVariable(element)) {\n\t\t\tconst value = element.value;\n\t\t\tconst valueRows = countNumberOfLines(value)\n\t\t\t\t+ (ignoreValueLength ? 0 : Math.floor(value.length / 70)) // Make an estimate for wrapping\n\t\t\t\t+ (element instanceof ReplOutputElement ? 0 : 1); // A SimpleReplElement ends in \\n if it's a complete line\n\n\t\t\treturn Math.max(valueRows, 1) * lineHeight;\n\t\t}\n\n\t\treturn lineHeight;\n\t}\n\n\tgetTemplateId(element: IReplElement): string {\n\t\tif (element instanceof Variable || element instanceof ReplVariableElement) {\n\t\t\treturn ReplVariablesRenderer.ID;\n\t\t}\n\t\tif (element instanceof ReplEvaluationResult) {\n\t\t\treturn ReplEvaluationResultsRenderer.ID;\n\t\t}\n\t\tif (element instanceof ReplEvaluationInput) {\n\t\t\treturn ReplEvaluationInputsRenderer.ID;\n\t\t}\n\t\tif (element instanceof ReplOutputElement) {\n\t\t\treturn ReplOutputElementRenderer.ID;\n\t\t}\n\t\tif (element instanceof ReplGroup) {\n\t\t\treturn ReplGroupRenderer.ID;\n\t\t}\n\n\t\treturn ReplRawObjectsRenderer.ID;\n\t}\n\n\thasDynamicHeight(element: IReplElement): boolean {\n\t\tif (isNestedVariable(element)) {\n\t\t\t// Nested variables should always be in one line #111843\n\t\t\treturn false;\n\t\t}\n\t\t// Empty elements should not have dynamic height since they will be invisible\n\t\treturn element.toString().length > 0;\n\t}\n}\n\nfunction isDebugSession(obj: any): obj is IDebugSession {\n\treturn typeof obj.getReplElements === 'function';\n}\n\nexport class ReplDataSource implements IAsyncDataSource<IDebugSession, IReplElement> {\n\n\thasChildren(element: IReplElement | IDebugSession): boolean {\n\t\tif (isDebugSession(element)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn !!(<IExpressionContainer | INestingReplElement>element).hasChildren;\n\t}\n\n\tgetChildren(element: IReplElement | IDebugSession): Promise<IReplElement[]> {\n\t\tif (isDebugSession(element)) {\n\t\t\treturn Promise.resolve(element.getReplElements());\n\t\t}\n\n\t\treturn Promise.resolve((<IExpression | INestingReplElement>element).getChildren());\n\t}\n}\n\nexport class ReplAccessibilityProvider implements IListAccessibilityProvider<IReplElement> {\n\n\tgetWidgetAriaLabel(): string {\n\t\treturn localize('debugConsole', \"Debug Console\");\n\t}\n\n\tgetAriaLabel(element: IReplElement): string {\n\t\tif (element instanceof Variable) {\n\t\t\treturn localize('replVariableAriaLabel', \"Variable {0}, value {1}\", element.name, element.value);\n\t\t}\n\t\tif (element instanceof ReplOutputElement || element instanceof ReplEvaluationInput || element instanceof ReplEvaluationResult) {\n\t\t\treturn element.value + (element instanceof ReplOutputElement && element.count > 1 ? localize({ key: 'occurred', comment: ['Front will the value of the debug console element. Placeholder will be replaced by a number which represents occurrance count.'] },\n\t\t\t\t\", occurred {0} times\", element.count) : '');\n\t\t}\n\t\tif (element instanceof RawObjectReplElement) {\n\t\t\treturn localize('replRawObjectAriaLabel', \"Debug console variable {0}, value {1}\", element.name, element.value);\n\t\t}\n\t\tif (element instanceof ReplGroup) {\n\t\t\treturn localize('replGroup', \"Debug console group {0}\", element.name);\n\t\t}\n\n\t\treturn '';\n\t}\n}\n\nclass SourceWidget extends Disposable {\n\tprivate readonly el: HTMLElement;\n\tprivate source?: IReplElementSource;\n\tprivate hover?: IManagedHover;\n\n\tconstructor(container: HTMLElement,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t) {\n\t\tsuper();\n\t\tthis.el = dom.append(container, $('.source'));\n\t\tthis._register(dom.addDisposableListener(this.el, 'click', e => {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tif (this.source) {\n\t\t\t\tthis.source.source.openInEditor(editorService, {\n\t\t\t\t\tstartLineNumber: this.source.lineNumber,\n\t\t\t\t\tstartColumn: this.source.column,\n\t\t\t\t\tendLineNumber: this.source.lineNumber,\n\t\t\t\t\tendColumn: this.source.column\n\t\t\t\t});\n\t\t\t}\n\t\t}));\n\n\t}\n\n\tpublic setSource(source?: IReplElementSource) {\n\t\tthis.source = source;\n\t\tthis.el.textContent = source ? `${basename(source.source.name)}:${source.lineNumber}` : '';\n\n\t\tthis.hover ??= this._register(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), this.el, ''));\n\t\tthis.hover.update(source ? `${this.labelService.getUriLabel(source.source.uri)}:${source.lineNumber}` : '');\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
