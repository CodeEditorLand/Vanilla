{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/debugProgress.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from \"../../../../base/common/event.js\";\nimport {\n\ttype IDisposable,\n\tdispose,\n} from \"../../../../base/common/lifecycle.js\";\nimport {\n\tIProgressService,\n\tProgressLocation,\n} from \"../../../../platform/progress/common/progress.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport {\n\tIDebugService,\n\ttype IDebugSession,\n\tVIEWLET_ID,\n} from \"../common/debug.js\";\n\nexport class DebugProgressContribution implements IWorkbenchContribution {\n\tprivate toDispose: IDisposable[] = [];\n\n\tconstructor(\n\t\t@IDebugService debugService: IDebugService,\n\t\t@IProgressService progressService: IProgressService,\n\t\t@IViewsService viewsService: IViewsService,\n\t) {\n\t\tlet progressListener: IDisposable | undefined;\n\t\tconst listenOnProgress = (session: IDebugSession | undefined) => {\n\t\t\tif (progressListener) {\n\t\t\t\tprogressListener.dispose();\n\t\t\t\tprogressListener = undefined;\n\t\t\t}\n\t\t\tif (session) {\n\t\t\t\tprogressListener = session.onDidProgressStart(\n\t\t\t\t\tasync (progressStartEvent) => {\n\t\t\t\t\t\tconst promise = new Promise<void>((r) => {\n\t\t\t\t\t\t\t// Show progress until a progress end event comes or the session ends\n\t\t\t\t\t\t\tconst listener = Event.any(\n\t\t\t\t\t\t\t\tEvent.filter(\n\t\t\t\t\t\t\t\t\tsession.onDidProgressEnd,\n\t\t\t\t\t\t\t\t\t(e) =>\n\t\t\t\t\t\t\t\t\t\te.body.progressId ===\n\t\t\t\t\t\t\t\t\t\tprogressStartEvent.body.progressId,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tsession.onDidEndAdapter,\n\t\t\t\t\t\t\t)(() => {\n\t\t\t\t\t\t\t\tlistener.dispose();\n\t\t\t\t\t\t\t\tr();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (viewsService.isViewContainerVisible(VIEWLET_ID)) {\n\t\t\t\t\t\t\tprogressService.withProgress(\n\t\t\t\t\t\t\t\t{ location: VIEWLET_ID },\n\t\t\t\t\t\t\t\t() => promise,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst source = debugService\n\t\t\t\t\t\t\t.getAdapterManager()\n\t\t\t\t\t\t\t.getDebuggerLabel(session.configuration.type);\n\t\t\t\t\t\tprogressService.withProgress(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlocation: ProgressLocation.Notification,\n\t\t\t\t\t\t\t\ttitle: progressStartEvent.body.title,\n\t\t\t\t\t\t\t\tcancellable:\n\t\t\t\t\t\t\t\t\tprogressStartEvent.body.cancellable,\n\t\t\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\t\tdelay: 500,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t(progressStep) => {\n\t\t\t\t\t\t\t\tlet total = 0;\n\t\t\t\t\t\t\t\tconst reportProgress = (progress: {\n\t\t\t\t\t\t\t\t\tmessage?: string;\n\t\t\t\t\t\t\t\t\tpercentage?: number;\n\t\t\t\t\t\t\t\t}) => {\n\t\t\t\t\t\t\t\t\tlet increment;\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\ttypeof progress.percentage === \"number\"\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tincrement = progress.percentage - total;\n\t\t\t\t\t\t\t\t\t\ttotal += increment;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tprogressStep.report({\n\t\t\t\t\t\t\t\t\t\tmessage: progress.message,\n\t\t\t\t\t\t\t\t\t\tincrement,\n\t\t\t\t\t\t\t\t\t\ttotal:\n\t\t\t\t\t\t\t\t\t\t\ttypeof increment === \"number\"\n\t\t\t\t\t\t\t\t\t\t\t\t? 100\n\t\t\t\t\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tif (progressStartEvent.body.message) {\n\t\t\t\t\t\t\t\t\treportProgress(progressStartEvent.body);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst progressUpdateListener =\n\t\t\t\t\t\t\t\t\tsession.onDidProgressUpdate((e) => {\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\te.body.progressId ===\n\t\t\t\t\t\t\t\t\t\t\tprogressStartEvent.body.progressId\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\treportProgress(e.body);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\treturn promise.then(() =>\n\t\t\t\t\t\t\t\t\tprogressUpdateListener.dispose(),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\tsession.cancel(\n\t\t\t\t\t\t\t\t\tprogressStartEvent.body.progressId,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\t\tthis.toDispose.push(\n\t\t\tdebugService.getViewModel().onDidFocusSession(listenOnProgress),\n\t\t);\n\t\tlistenOnProgress(debugService.getViewModel().focusedSession);\n\t\tthis.toDispose.push(\n\t\t\tdebugService.onWillNewSession((session) => {\n\t\t\t\tif (!progressListener) {\n\t\t\t\t\tlistenOnProgress(session);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tdispose(this.toDispose);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,aAAa;AACtB;AAAA,EAEC;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AAEP,SAAS,qBAAqB;AAC9B;AAAA,EACC;AAAA,EAEA;AAAA,OACM;AAEA,IAAM,4BAAN,MAAkE;AAAA,EAtBzE,OAsByE;AAAA;AAAA;AAAA,EAChE,YAA2B,CAAC;AAAA,EAEpC,YACgB,cACG,iBACH,cACd;AACD,QAAI;AACJ,UAAM,mBAAmB,wBAAC,YAAuC;AAChE,UAAI,kBAAkB;AACrB,yBAAiB,QAAQ;AACzB,2BAAmB;AAAA,MACpB;AACA,UAAI,SAAS;AACZ,2BAAmB,QAAQ;AAAA,UAC1B,OAAO,uBAAuB;AAC7B,kBAAM,UAAU,IAAI,QAAc,CAAC,MAAM;AAExC,oBAAM,WAAW,MAAM;AAAA,gBACtB,MAAM;AAAA,kBACL,QAAQ;AAAA,kBACR,CAAC,MACA,EAAE,KAAK,eACP,mBAAmB,KAAK;AAAA,gBAC1B;AAAA,gBACA,QAAQ;AAAA,cACT,EAAE,MAAM;AACP,yBAAS,QAAQ;AACjB,kBAAE;AAAA,cACH,CAAC;AAAA,YACF,CAAC;AAED,gBAAI,aAAa,uBAAuB,UAAU,GAAG;AACpD,8BAAgB;AAAA,gBACf,EAAE,UAAU,WAAW;AAAA,gBACvB,MAAM;AAAA,cACP;AAAA,YACD;AACA,kBAAM,SAAS,aACb,kBAAkB,EAClB,iBAAiB,QAAQ,cAAc,IAAI;AAC7C,4BAAgB;AAAA,cACf;AAAA,gBACC,UAAU,iBAAiB;AAAA,gBAC3B,OAAO,mBAAmB,KAAK;AAAA,gBAC/B,aACC,mBAAmB,KAAK;AAAA,gBACzB;AAAA,gBACA,OAAO;AAAA,cACR;AAAA,cACA,CAAC,iBAAiB;AACjB,oBAAI,QAAQ;AACZ,sBAAM,iBAAiB,wBAAC,aAGlB;AACL,sBAAI;AACJ,sBACC,OAAO,SAAS,eAAe,UAC9B;AACD,gCAAY,SAAS,aAAa;AAClC,6BAAS;AAAA,kBACV;AACA,+BAAa,OAAO;AAAA,oBACnB,SAAS,SAAS;AAAA,oBAClB;AAAA,oBACA,OACC,OAAO,cAAc,WAClB,MACA;AAAA,kBACL,CAAC;AAAA,gBACF,GAnBuB;AAqBvB,oBAAI,mBAAmB,KAAK,SAAS;AACpC,iCAAe,mBAAmB,IAAI;AAAA,gBACvC;AACA,sBAAM,yBACL,QAAQ,oBAAoB,CAAC,MAAM;AAClC,sBACC,EAAE,KAAK,eACP,mBAAmB,KAAK,YACvB;AACD,mCAAe,EAAE,IAAI;AAAA,kBACtB;AAAA,gBACD,CAAC;AAEF,uBAAO,QAAQ;AAAA,kBAAK,MACnB,uBAAuB,QAAQ;AAAA,gBAChC;AAAA,cACD;AAAA,cACA,MACC,QAAQ;AAAA,gBACP,mBAAmB,KAAK;AAAA,cACzB;AAAA,YACF;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD,GA1FyB;AA2FzB,SAAK,UAAU;AAAA,MACd,aAAa,aAAa,EAAE,kBAAkB,gBAAgB;AAAA,IAC/D;AACA,qBAAiB,aAAa,aAAa,EAAE,cAAc;AAC3D,SAAK,UAAU;AAAA,MACd,aAAa,iBAAiB,CAAC,YAAY;AAC1C,YAAI,CAAC,kBAAkB;AACtB,2BAAiB,OAAO;AAAA,QACzB;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAEA,UAAgB;AACf,YAAQ,KAAK,SAAS;AAAA,EACvB;AACD;AApHa,4BAAN;AAAA,EAIJ;AAAA,EACA;AAAA,EACA;AAAA,GANU;",
  "names": []
}
