{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/breakpointsView.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport type { IKeyboardEvent } from \"../../../../base/browser/keyboardEvent.js\";\nimport { Gesture } from \"../../../../base/browser/touch.js\";\nimport { ActionBar } from \"../../../../base/browser/ui/actionbar/actionbar.js\";\nimport type { AriaRole } from \"../../../../base/browser/ui/aria/aria.js\";\nimport { getDefaultHoverDelegate } from \"../../../../base/browser/ui/hover/hoverDelegateFactory.js\";\nimport { IconLabel } from \"../../../../base/browser/ui/iconLabel/iconLabel.js\";\nimport { InputBox } from \"../../../../base/browser/ui/inputbox/inputBox.js\";\nimport type {\n\tIListContextMenuEvent,\n\tIListRenderer,\n\tIListVirtualDelegate,\n} from \"../../../../base/browser/ui/list/list.js\";\nimport type { IListAccessibilityProvider } from \"../../../../base/browser/ui/list/listWidget.js\";\nimport { Orientation } from \"../../../../base/browser/ui/splitview/splitview.js\";\nimport { Action, type IAction } from \"../../../../base/common/actions.js\";\nimport { equals } from \"../../../../base/common/arrays.js\";\nimport { RunOnceScheduler } from \"../../../../base/common/async.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { MarkdownString } from \"../../../../base/common/htmlContent.js\";\nimport { KeyCode } from \"../../../../base/common/keyCodes.js\";\nimport { DisposableStore, dispose } from \"../../../../base/common/lifecycle.js\";\nimport * as resources from \"../../../../base/common/resources.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { Constants } from \"../../../../base/common/uint.js\";\nimport { isCodeEditor } from \"../../../../editor/browser/editorBrowser.js\";\nimport type { ServicesAccessor } from \"../../../../editor/browser/editorExtensions.js\";\nimport { ILanguageService } from \"../../../../editor/common/languages/language.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport {\n\tcreateAndFillInActionBarActions,\n\tcreateAndFillInContextMenuActions,\n} from \"../../../../platform/actions/browser/menuEntryActionViewItem.js\";\nimport {\n\tAction2,\n\ttype IMenu,\n\tIMenuService,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tContextKeyExpr,\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tIContextMenuService,\n\tIContextViewService,\n} from \"../../../../platform/contextview/browser/contextView.js\";\nimport { TextEditorSelectionRevealType } from \"../../../../platform/editor/common/editor.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { ILabelService } from \"../../../../platform/label/common/label.js\";\nimport { WorkbenchList } from \"../../../../platform/list/browser/listService.js\";\nimport { INotificationService } from \"../../../../platform/notification/common/notification.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport { IQuickInputService } from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { defaultInputBoxStyles } from \"../../../../platform/theme/browser/defaultStyles.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport { ViewAction, ViewPane } from \"../../../browser/parts/views/viewPane.js\";\nimport type { IViewletViewOptions } from \"../../../browser/parts/views/viewsViewlet.js\";\nimport type { IEditorPane } from \"../../../common/editor.js\";\nimport { IViewDescriptorService } from \"../../../common/views.js\";\nimport {\n\tACTIVE_GROUP,\n\tIEditorService,\n\tSIDE_GROUP,\n} from \"../../../services/editor/common/editorService.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport {\n\tBREAKPOINTS_VIEW_ID,\n\tBREAKPOINT_EDITOR_CONTRIBUTION_ID,\n\tCONTEXT_BREAKPOINTS_EXIST,\n\tCONTEXT_BREAKPOINTS_FOCUSED,\n\tCONTEXT_BREAKPOINT_HAS_MODES,\n\tCONTEXT_BREAKPOINT_INPUT_FOCUSED,\n\tCONTEXT_BREAKPOINT_ITEM_IS_DATA_BYTES,\n\tCONTEXT_BREAKPOINT_ITEM_TYPE,\n\tCONTEXT_BREAKPOINT_SUPPORTS_CONDITION,\n\tCONTEXT_DEBUGGERS_AVAILABLE,\n\tCONTEXT_IN_DEBUG_MODE,\n\tCONTEXT_SET_DATA_BREAKPOINT_BYTES_SUPPORTED,\n\tDEBUG_SCHEME,\n\tDataBreakpointSetType,\n\ttype DataBreakpointSource,\n\tDebuggerString,\n\ttype IBaseBreakpoint,\n\ttype IBreakpoint,\n\ttype IBreakpointEditorContribution,\n\ttype IBreakpointUpdateData,\n\ttype IDataBreakpoint,\n\ttype IDataBreakpointInfoResponse,\n\ttype IDebugModel,\n\tIDebugService,\n\ttype IEnablement,\n\ttype IExceptionBreakpoint,\n\ttype IFunctionBreakpoint,\n\ttype IInstructionBreakpoint,\n\tState,\n} from \"../common/debug.js\";\nimport {\n\tBreakpoint,\n\tDataBreakpoint,\n\tExceptionBreakpoint,\n\tFunctionBreakpoint,\n\tInstructionBreakpoint,\n} from \"../common/debugModel.js\";\nimport { DisassemblyViewInput } from \"../common/disassemblyViewInput.js\";\nimport * as icons from \"./debugIcons.js\";\nimport type { DisassemblyView } from \"./disassemblyView.js\";\n\nconst $ = dom.$;\n\nfunction createCheckbox(disposables: DisposableStore): HTMLInputElement {\n\tconst checkbox = <HTMLInputElement>$(\"input\");\n\tcheckbox.type = \"checkbox\";\n\tcheckbox.tabIndex = -1;\n\tdisposables.add(Gesture.ignoreTarget(checkbox));\n\n\treturn checkbox;\n}\n\nconst MAX_VISIBLE_BREAKPOINTS = 9;\nexport function getExpandedBodySize(\n\tmodel: IDebugModel,\n\tsessionId: string | undefined,\n\tcountLimit: number,\n): number {\n\tconst length =\n\t\tmodel.getBreakpoints().length +\n\t\tmodel.getExceptionBreakpointsForSession(sessionId).length +\n\t\tmodel.getFunctionBreakpoints().length +\n\t\tmodel.getDataBreakpoints().length +\n\t\tmodel.getInstructionBreakpoints().length;\n\treturn Math.min(countLimit, length) * 22;\n}\ntype BreakpointItem =\n\t| IBreakpoint\n\t| IFunctionBreakpoint\n\t| IDataBreakpoint\n\t| IExceptionBreakpoint\n\t| IInstructionBreakpoint;\n\ninterface InputBoxData {\n\tbreakpoint: IFunctionBreakpoint | IExceptionBreakpoint | IDataBreakpoint;\n\ttype: \"condition\" | \"hitCount\" | \"name\";\n}\n\nexport class BreakpointsView extends ViewPane {\n\tprivate list!: WorkbenchList<BreakpointItem>;\n\tprivate needsRefresh = false;\n\tprivate needsStateChange = false;\n\tprivate ignoreLayout = false;\n\tprivate menu: IMenu;\n\tprivate breakpointItemType: IContextKey<string | undefined>;\n\tprivate breakpointIsDataBytes: IContextKey<boolean | undefined>;\n\tprivate breakpointHasMultipleModes: IContextKey<boolean>;\n\tprivate breakpointSupportsCondition: IContextKey<boolean>;\n\tprivate _inputBoxData: InputBoxData | undefined;\n\tbreakpointInputFocused: IContextKey<boolean>;\n\tprivate autoFocusedIndex = -1;\n\n\tprivate hintContainer: IconLabel | undefined;\n\tprivate hintDelayer: RunOnceScheduler;\n\n\tconstructor(\n\t\toptions: IViewletViewOptions,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService, hoverService);\n\n\t\tthis.menu = menuService.createMenu(MenuId.DebugBreakpointsContext, contextKeyService);\n\t\tthis._register(this.menu);\n\t\tthis.breakpointItemType = CONTEXT_BREAKPOINT_ITEM_TYPE.bindTo(contextKeyService);\n\t\tthis.breakpointIsDataBytes = CONTEXT_BREAKPOINT_ITEM_IS_DATA_BYTES.bindTo(contextKeyService);\n\t\tthis.breakpointHasMultipleModes = CONTEXT_BREAKPOINT_HAS_MODES.bindTo(contextKeyService);\n\t\tthis.breakpointSupportsCondition = CONTEXT_BREAKPOINT_SUPPORTS_CONDITION.bindTo(contextKeyService);\n\t\tthis.breakpointInputFocused = CONTEXT_BREAKPOINT_INPUT_FOCUSED.bindTo(contextKeyService);\n\t\tthis._register(this.debugService.getModel().onDidChangeBreakpoints(() => this.onBreakpointsChange()));\n\t\tthis._register(this.debugService.getViewModel().onDidFocusSession(() => this.onBreakpointsChange()));\n\t\tthis._register(this.debugService.onDidChangeState(() => this.onStateChange()));\n\t\tthis.hintDelayer = this._register(new RunOnceScheduler(() => this.updateBreakpointsHint(true), 4000));\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tthis.element.classList.add(\"debug-pane\");\n\t\tcontainer.classList.add(\"debug-breakpoints\");\n\t\tconst delegate = new BreakpointsDelegate(this);\n\n\t\tthis.list = this.instantiationService.createInstance(\n\t\t\tWorkbenchList,\n\t\t\t\"Breakpoints\",\n\t\t\tcontainer,\n\t\t\tdelegate,\n\t\t\t[\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tBreakpointsRenderer,\n\t\t\t\t\tthis.menu,\n\t\t\t\t\tthis.breakpointHasMultipleModes,\n\t\t\t\t\tthis.breakpointSupportsCondition,\n\t\t\t\t\tthis.breakpointItemType,\n\t\t\t\t),\n\t\t\t\tnew ExceptionBreakpointsRenderer(\n\t\t\t\t\tthis.menu,\n\t\t\t\t\tthis.breakpointHasMultipleModes,\n\t\t\t\t\tthis.breakpointSupportsCondition,\n\t\t\t\t\tthis.breakpointItemType,\n\t\t\t\t\tthis.debugService,\n\t\t\t\t\tthis.hoverService,\n\t\t\t\t),\n\t\t\t\tnew ExceptionBreakpointInputRenderer(\n\t\t\t\t\tthis,\n\t\t\t\t\tthis.debugService,\n\t\t\t\t\tthis.contextViewService,\n\t\t\t\t),\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tFunctionBreakpointsRenderer,\n\t\t\t\t\tthis.menu,\n\t\t\t\t\tthis.breakpointSupportsCondition,\n\t\t\t\t\tthis.breakpointItemType,\n\t\t\t\t),\n\t\t\t\tnew FunctionBreakpointInputRenderer(\n\t\t\t\t\tthis,\n\t\t\t\t\tthis.debugService,\n\t\t\t\t\tthis.contextViewService,\n\t\t\t\t\tthis.hoverService,\n\t\t\t\t\tthis.labelService,\n\t\t\t\t),\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tDataBreakpointsRenderer,\n\t\t\t\t\tthis.menu,\n\t\t\t\t\tthis.breakpointHasMultipleModes,\n\t\t\t\t\tthis.breakpointSupportsCondition,\n\t\t\t\t\tthis.breakpointItemType,\n\t\t\t\t\tthis.breakpointIsDataBytes,\n\t\t\t\t),\n\t\t\t\tnew DataBreakpointInputRenderer(\n\t\t\t\t\tthis,\n\t\t\t\t\tthis.debugService,\n\t\t\t\t\tthis.contextViewService,\n\t\t\t\t\tthis.hoverService,\n\t\t\t\t\tthis.labelService,\n\t\t\t\t),\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tInstructionBreakpointsRenderer,\n\t\t\t\t),\n\t\t\t],\n\t\t\t{\n\t\t\t\tidentityProvider: {\n\t\t\t\t\tgetId: (element: IEnablement) => element.getId(),\n\t\t\t\t},\n\t\t\t\tmultipleSelectionSupport: false,\n\t\t\t\tkeyboardNavigationLabelProvider: {\n\t\t\t\t\tgetKeyboardNavigationLabel: (e: IEnablement) => e,\n\t\t\t\t},\n\t\t\t\taccessibilityProvider: new BreakpointsAccessibilityProvider(\n\t\t\t\t\tthis.debugService,\n\t\t\t\t\tthis.labelService,\n\t\t\t\t),\n\t\t\t\toverrideStyles:\n\t\t\t\t\tthis.getLocationBasedColors().listOverrideStyles,\n\t\t\t},\n\t\t) as WorkbenchList<BreakpointItem>;\n\n\t\tCONTEXT_BREAKPOINTS_FOCUSED.bindTo(this.list.contextKeyService);\n\n\t\tthis._register(this.list.onContextMenu(this.onListContextMenu, this));\n\n\t\tthis.list.onMouseMiddleClick(async ({ element }) => {\n\t\t\tif (element instanceof Breakpoint) {\n\t\t\t\tawait this.debugService.removeBreakpoints(element.getId());\n\t\t\t} else if (element instanceof FunctionBreakpoint) {\n\t\t\t\tawait this.debugService.removeFunctionBreakpoints(\n\t\t\t\t\telement.getId(),\n\t\t\t\t);\n\t\t\t} else if (element instanceof DataBreakpoint) {\n\t\t\t\tawait this.debugService.removeDataBreakpoints(element.getId());\n\t\t\t} else if (element instanceof InstructionBreakpoint) {\n\t\t\t\tawait this.debugService.removeInstructionBreakpoints(\n\t\t\t\t\telement.instructionReference,\n\t\t\t\t\telement.offset,\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\tthis._register(\n\t\t\tthis.list.onDidOpen(async (e) => {\n\t\t\t\tif (!e.element) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tdom.isMouseEvent(e.browserEvent) &&\n\t\t\t\t\te.browserEvent.button === 1\n\t\t\t\t) {\n\t\t\t\t\t// middle click\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (e.element instanceof Breakpoint) {\n\t\t\t\t\topenBreakpointSource(\n\t\t\t\t\t\te.element,\n\t\t\t\t\t\te.sideBySide,\n\t\t\t\t\t\te.editorOptions.preserveFocus || false,\n\t\t\t\t\t\te.editorOptions.pinned ||\n\t\t\t\t\t\t\t!e.editorOptions.preserveFocus,\n\t\t\t\t\t\tthis.debugService,\n\t\t\t\t\t\tthis.editorService,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (e.element instanceof InstructionBreakpoint) {\n\t\t\t\t\tconst disassemblyView = await this.editorService.openEditor(\n\t\t\t\t\t\tDisassemblyViewInput.instance,\n\t\t\t\t\t);\n\t\t\t\t\t// Focus on double click\n\t\t\t\t\t(\n\t\t\t\t\t\tdisassemblyView as DisassemblyView\n\t\t\t\t\t).goToInstructionAndOffset(\n\t\t\t\t\t\te.element.instructionReference,\n\t\t\t\t\t\te.element.offset,\n\t\t\t\t\t\tdom.isMouseEvent(e.browserEvent) &&\n\t\t\t\t\t\t\te.browserEvent.detail === 2,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tdom.isMouseEvent(e.browserEvent) &&\n\t\t\t\t\te.browserEvent.detail === 2 &&\n\t\t\t\t\te.element instanceof FunctionBreakpoint &&\n\t\t\t\t\te.element !== this.inputBoxData?.breakpoint\n\t\t\t\t) {\n\t\t\t\t\t// double click\n\t\t\t\t\tthis.renderInputBox({\n\t\t\t\t\t\tbreakpoint: e.element,\n\t\t\t\t\t\ttype: \"name\",\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis.list.splice(0, this.list.length, this.elements);\n\n\t\tthis._register(\n\t\t\tthis.onDidChangeBodyVisibility((visible) => {\n\t\t\t\tif (visible) {\n\t\t\t\t\tif (this.needsRefresh) {\n\t\t\t\t\t\tthis.onBreakpointsChange();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.needsStateChange) {\n\t\t\t\t\t\tthis.onStateChange();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tconst containerModel = this.viewDescriptorService.getViewContainerModel(\n\t\t\tthis.viewDescriptorService.getViewContainerByViewId(this.id)!,\n\t\t)!;\n\t\tthis._register(\n\t\t\tcontainerModel.onDidChangeAllViewDescriptors(() => {\n\t\t\t\tthis.updateSize();\n\t\t\t}),\n\t\t);\n\t}\n\n\tprotected override renderHeaderTitle(\n\t\tcontainer: HTMLElement,\n\t\ttitle: string,\n\t): void {\n\t\tsuper.renderHeaderTitle(container, title);\n\n\t\tconst iconLabelContainer = dom.append(\n\t\t\tcontainer,\n\t\t\t$(\"span.breakpoint-warning\"),\n\t\t);\n\t\tthis.hintContainer = this._register(\n\t\t\tnew IconLabel(iconLabelContainer, {\n\t\t\t\tsupportIcons: true,\n\t\t\t\thoverDelegate: {\n\t\t\t\t\tshowHover: (options, focus?) =>\n\t\t\t\t\t\tthis.hoverService.showHover(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontent: options.content,\n\t\t\t\t\t\t\t\ttarget: this.hintContainer!.element,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfocus,\n\t\t\t\t\t\t),\n\t\t\t\t\tdelay: <number>(\n\t\t\t\t\t\tthis.configurationService.getValue(\n\t\t\t\t\t\t\t\"workbench.hover.delay\",\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\t\tdom.hide(this.hintContainer.element);\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\t\tthis.list?.domFocus();\n\t}\n\n\trenderInputBox(data: InputBoxData | undefined): void {\n\t\tthis._inputBoxData = data;\n\t\tthis.onBreakpointsChange();\n\t\tthis._inputBoxData = undefined;\n\t}\n\n\tget inputBoxData(): InputBoxData | undefined {\n\t\treturn this._inputBoxData;\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tif (this.ignoreLayout) {\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.layoutBody(height, width);\n\t\tthis.list?.layout(height, width);\n\t\ttry {\n\t\t\tthis.ignoreLayout = true;\n\t\t\tthis.updateSize();\n\t\t} finally {\n\t\t\tthis.ignoreLayout = false;\n\t\t}\n\t}\n\n\tprivate onListContextMenu(e: IListContextMenuEvent<IEnablement>): void {\n\t\tconst element = e.element;\n\t\tconst type =\n\t\t\telement instanceof Breakpoint\n\t\t\t\t? \"breakpoint\"\n\t\t\t\t: element instanceof ExceptionBreakpoint\n\t\t\t\t\t? \"exceptionBreakpoint\"\n\t\t\t\t\t: element instanceof FunctionBreakpoint\n\t\t\t\t\t\t? \"functionBreakpoint\"\n\t\t\t\t\t\t: element instanceof DataBreakpoint\n\t\t\t\t\t\t\t? \"dataBreakpoint\"\n\t\t\t\t\t\t\t: element instanceof InstructionBreakpoint\n\t\t\t\t\t\t\t\t? \"instructionBreakpoint\"\n\t\t\t\t\t\t\t\t: undefined;\n\t\tthis.breakpointItemType.set(type);\n\t\tconst session = this.debugService.getViewModel().focusedSession;\n\t\tconst conditionSupported =\n\t\t\telement instanceof ExceptionBreakpoint\n\t\t\t\t? element.supportsCondition\n\t\t\t\t: !session ||\n\t\t\t\t\t!!session.capabilities.supportsConditionalBreakpoints;\n\t\tthis.breakpointSupportsCondition.set(conditionSupported);\n\t\tthis.breakpointIsDataBytes.set(\n\t\t\telement instanceof DataBreakpoint &&\n\t\t\t\telement.src.type === DataBreakpointSetType.Address,\n\t\t);\n\n\t\tconst secondary: IAction[] = [];\n\t\tcreateAndFillInContextMenuActions(\n\t\t\tthis.menu,\n\t\t\t{ arg: e.element, shouldForwardArgs: false },\n\t\t\t{ primary: [], secondary },\n\t\t\t\"inline\",\n\t\t);\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => e.anchor,\n\t\t\tgetActions: () => secondary,\n\t\t\tgetActionsContext: () => element,\n\t\t});\n\t}\n\n\tprivate updateSize(): void {\n\t\tconst containerModel = this.viewDescriptorService.getViewContainerModel(\n\t\t\tthis.viewDescriptorService.getViewContainerByViewId(this.id)!,\n\t\t)!;\n\n\t\t// Adjust expanded body size\n\t\tconst sessionId = this.debugService\n\t\t\t.getViewModel()\n\t\t\t.focusedSession?.getId();\n\t\tthis.minimumBodySize =\n\t\t\tthis.orientation === Orientation.VERTICAL\n\t\t\t\t? getExpandedBodySize(\n\t\t\t\t\t\tthis.debugService.getModel(),\n\t\t\t\t\t\tsessionId,\n\t\t\t\t\t\tMAX_VISIBLE_BREAKPOINTS,\n\t\t\t\t\t)\n\t\t\t\t: 170;\n\t\tthis.maximumBodySize =\n\t\t\tthis.orientation === Orientation.VERTICAL &&\n\t\t\tcontainerModel.visibleViewDescriptors.length > 1\n\t\t\t\t? getExpandedBodySize(\n\t\t\t\t\t\tthis.debugService.getModel(),\n\t\t\t\t\t\tsessionId,\n\t\t\t\t\t\tNumber.POSITIVE_INFINITY,\n\t\t\t\t\t)\n\t\t\t\t: Number.POSITIVE_INFINITY;\n\t}\n\n\tprivate updateBreakpointsHint(delayed = false): void {\n\t\tif (!this.hintContainer) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentType =\n\t\t\tthis.debugService.getViewModel().focusedSession?.configuration.type;\n\t\tconst dbg = currentType\n\t\t\t? this.debugService.getAdapterManager().getDebugger(currentType)\n\t\t\t: undefined;\n\t\tconst message = dbg?.strings?.[DebuggerString.UnverifiedBreakpoints];\n\t\tconst debuggerHasUnverifiedBps =\n\t\t\tmessage &&\n\t\t\tthis.debugService\n\t\t\t\t.getModel()\n\t\t\t\t.getBreakpoints()\n\t\t\t\t.filter((bp) => {\n\t\t\t\t\tif (bp.verified || !bp.enabled) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst langId =\n\t\t\t\t\t\tthis.languageService.guessLanguageIdByFilepathOrFirstLine(\n\t\t\t\t\t\t\tbp.uri,\n\t\t\t\t\t\t);\n\t\t\t\t\treturn langId && dbg.interestedInLanguage(langId);\n\t\t\t\t});\n\n\t\tif (\n\t\t\tmessage &&\n\t\t\tdebuggerHasUnverifiedBps?.length &&\n\t\t\tthis.debugService.getModel().areBreakpointsActivated()\n\t\t) {\n\t\t\tif (delayed) {\n\t\t\t\tconst mdown = new MarkdownString(undefined, {\n\t\t\t\t\tisTrusted: true,\n\t\t\t\t}).appendMarkdown(message);\n\t\t\t\tthis.hintContainer.setLabel(\"$(warning)\", undefined, {\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\tmarkdown: mdown,\n\t\t\t\t\t\tmarkdownNotSupportedFallback: message,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tdom.show(this.hintContainer.element);\n\t\t\t} else {\n\t\t\t\tthis.hintDelayer.schedule();\n\t\t\t}\n\t\t} else {\n\t\t\tdom.hide(this.hintContainer.element);\n\t\t}\n\t}\n\n\tprivate onBreakpointsChange(): void {\n\t\tif (this.isBodyVisible()) {\n\t\t\tthis.updateSize();\n\t\t\tif (this.list) {\n\t\t\t\tconst lastFocusIndex = this.list.getFocus()[0];\n\t\t\t\t// Check whether focused element was removed\n\t\t\t\tconst needsRefocus =\n\t\t\t\t\tlastFocusIndex &&\n\t\t\t\t\t!this.elements.includes(this.list.element(lastFocusIndex));\n\t\t\t\tthis.list.splice(0, this.list.length, this.elements);\n\t\t\t\tthis.needsRefresh = false;\n\t\t\t\tif (needsRefocus) {\n\t\t\t\t\tthis.list.focusNth(\n\t\t\t\t\t\tMath.min(lastFocusIndex, this.list.length - 1),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.updateBreakpointsHint();\n\t\t} else {\n\t\t\tthis.needsRefresh = true;\n\t\t}\n\t}\n\n\tprivate onStateChange(): void {\n\t\tif (this.isBodyVisible()) {\n\t\t\tthis.needsStateChange = false;\n\t\t\tconst thread = this.debugService.getViewModel().focusedThread;\n\t\t\tlet found = false;\n\t\t\tif (\n\t\t\t\tthread &&\n\t\t\t\tthread.stoppedDetails &&\n\t\t\t\tthread.stoppedDetails.hitBreakpointIds &&\n\t\t\t\tthread.stoppedDetails.hitBreakpointIds.length > 0\n\t\t\t) {\n\t\t\t\tconst hitBreakpointIds = thread.stoppedDetails.hitBreakpointIds;\n\t\t\t\tconst elements = this.elements;\n\t\t\t\tconst index = elements.findIndex((e) => {\n\t\t\t\t\tconst id = e.getIdFromAdapter(thread.session.getId());\n\t\t\t\t\treturn (\n\t\t\t\t\t\ttypeof id === \"number\" &&\n\t\t\t\t\t\thitBreakpointIds.indexOf(id) !== -1\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\tthis.list.setFocus([index]);\n\t\t\t\t\tthis.list.setSelection([index]);\n\t\t\t\t\tfound = true;\n\t\t\t\t\tthis.autoFocusedIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!found) {\n\t\t\t\t// Deselect breakpoint in breakpoint view when no longer stopped on it #125528\n\t\t\t\tconst focus = this.list.getFocus();\n\t\t\t\tconst selection = this.list.getSelection();\n\t\t\t\tif (\n\t\t\t\t\tthis.autoFocusedIndex >= 0 &&\n\t\t\t\t\tequals(focus, selection) &&\n\t\t\t\t\tfocus.indexOf(this.autoFocusedIndex) >= 0\n\t\t\t\t) {\n\t\t\t\t\tthis.list.setFocus([]);\n\t\t\t\t\tthis.list.setSelection([]);\n\t\t\t\t}\n\t\t\t\tthis.autoFocusedIndex = -1;\n\t\t\t}\n\t\t\tthis.updateBreakpointsHint();\n\t\t} else {\n\t\t\tthis.needsStateChange = true;\n\t\t}\n\t}\n\n\tprivate get elements(): BreakpointItem[] {\n\t\tconst model = this.debugService.getModel();\n\t\tconst sessionId = this.debugService\n\t\t\t.getViewModel()\n\t\t\t.focusedSession?.getId();\n\t\tconst elements = (<ReadonlyArray<IEnablement>>(\n\t\t\tmodel.getExceptionBreakpointsForSession(sessionId)\n\t\t))\n\t\t\t.concat(model.getFunctionBreakpoints())\n\t\t\t.concat(model.getDataBreakpoints())\n\t\t\t.concat(model.getBreakpoints())\n\t\t\t.concat(model.getInstructionBreakpoints());\n\n\t\treturn elements as BreakpointItem[];\n\t}\n}\n\nclass BreakpointsDelegate implements IListVirtualDelegate<BreakpointItem> {\n\tconstructor(private view: BreakpointsView) {\n\t\t// noop\n\t}\n\n\tgetHeight(_element: BreakpointItem): number {\n\t\treturn 22;\n\t}\n\n\tgetTemplateId(element: BreakpointItem): string {\n\t\tif (element instanceof Breakpoint) {\n\t\t\treturn BreakpointsRenderer.ID;\n\t\t}\n\t\tif (element instanceof FunctionBreakpoint) {\n\t\t\tconst inputBoxBreakpoint = this.view.inputBoxData?.breakpoint;\n\t\t\tif (\n\t\t\t\t!element.name ||\n\t\t\t\t(inputBoxBreakpoint &&\n\t\t\t\t\tinputBoxBreakpoint.getId() === element.getId())\n\t\t\t) {\n\t\t\t\treturn FunctionBreakpointInputRenderer.ID;\n\t\t\t}\n\n\t\t\treturn FunctionBreakpointsRenderer.ID;\n\t\t}\n\t\tif (element instanceof ExceptionBreakpoint) {\n\t\t\tconst inputBoxBreakpoint = this.view.inputBoxData?.breakpoint;\n\t\t\tif (\n\t\t\t\tinputBoxBreakpoint &&\n\t\t\t\tinputBoxBreakpoint.getId() === element.getId()\n\t\t\t) {\n\t\t\t\treturn ExceptionBreakpointInputRenderer.ID;\n\t\t\t}\n\t\t\treturn ExceptionBreakpointsRenderer.ID;\n\t\t}\n\t\tif (element instanceof DataBreakpoint) {\n\t\t\tconst inputBoxBreakpoint = this.view.inputBoxData?.breakpoint;\n\t\t\tif (\n\t\t\t\tinputBoxBreakpoint &&\n\t\t\t\tinputBoxBreakpoint.getId() === element.getId()\n\t\t\t) {\n\t\t\t\treturn DataBreakpointInputRenderer.ID;\n\t\t\t}\n\n\t\t\treturn DataBreakpointsRenderer.ID;\n\t\t}\n\t\tif (element instanceof InstructionBreakpoint) {\n\t\t\treturn InstructionBreakpointsRenderer.ID;\n\t\t}\n\n\t\treturn \"\";\n\t}\n}\n\ninterface IBaseBreakpointTemplateData {\n\tbreakpoint: HTMLElement;\n\tname: HTMLElement;\n\tcheckbox: HTMLInputElement;\n\tcontext: BreakpointItem;\n\tactionBar: ActionBar;\n\ttemplateDisposables: DisposableStore;\n\telementDisposables: DisposableStore;\n\tbadge: HTMLElement;\n}\n\ninterface IBaseBreakpointWithIconTemplateData\n\textends IBaseBreakpointTemplateData {\n\ticon: HTMLElement;\n}\n\ninterface IBreakpointTemplateData extends IBaseBreakpointWithIconTemplateData {\n\tfilePath: HTMLElement;\n}\n\ninterface IExceptionBreakpointTemplateData extends IBaseBreakpointTemplateData {\n\tcondition: HTMLElement;\n}\n\ninterface IFunctionBreakpointTemplateData\n\textends IBaseBreakpointWithIconTemplateData {\n\tcondition: HTMLElement;\n}\n\ninterface IDataBreakpointTemplateData\n\textends IBaseBreakpointWithIconTemplateData {\n\taccessType: HTMLElement;\n\tcondition: HTMLElement;\n}\n\ninterface IInstructionBreakpointTemplateData\n\textends IBaseBreakpointWithIconTemplateData {\n\taddress: HTMLElement;\n}\n\ninterface IFunctionBreakpointInputTemplateData {\n\tinputBox: InputBox;\n\tcheckbox: HTMLInputElement;\n\ticon: HTMLElement;\n\tbreakpoint: IFunctionBreakpoint;\n\ttemplateDisposables: DisposableStore;\n\telementDisposables: DisposableStore;\n\ttype: \"hitCount\" | \"condition\" | \"name\";\n\tupdating?: boolean;\n}\n\ninterface IDataBreakpointInputTemplateData {\n\tinputBox: InputBox;\n\tcheckbox: HTMLInputElement;\n\ticon: HTMLElement;\n\tbreakpoint: IDataBreakpoint;\n\telementDisposables: DisposableStore;\n\ttemplateDisposables: DisposableStore;\n\ttype: \"hitCount\" | \"condition\" | \"name\";\n\tupdating?: boolean;\n}\n\ninterface IExceptionBreakpointInputTemplateData {\n\tinputBox: InputBox;\n\tcheckbox: HTMLInputElement;\n\tbreakpoint: IExceptionBreakpoint;\n\ttemplateDisposables: DisposableStore;\n\telementDisposables: DisposableStore;\n}\n\nconst breakpointIdToActionBarDomeNode = new Map<string, HTMLElement>();\nclass BreakpointsRenderer\n\timplements IListRenderer<IBreakpoint, IBreakpointTemplateData>\n{\n\tconstructor(\n\t\tprivate menu: IMenu,\n\t\tprivate breakpointHasMultipleModes: IContextKey<boolean>,\n\t\tprivate breakpointSupportsCondition: IContextKey<boolean>,\n\t\tprivate breakpointItemType: IContextKey<string | undefined>,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t\t@ILabelService private readonly labelService: ILabelService\n\t) {\n\t\t// noop\n\t}\n\n\tstatic readonly ID = \"breakpoints\";\n\n\tget templateId() {\n\t\treturn BreakpointsRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IBreakpointTemplateData {\n\t\tconst data: IBreakpointTemplateData = Object.create(null);\n\t\tdata.elementDisposables = new DisposableStore();\n\t\tdata.templateDisposables = new DisposableStore();\n\t\tdata.templateDisposables.add(data.elementDisposables);\n\n\t\tdata.breakpoint = dom.append(container, $(\".breakpoint\"));\n\n\t\tdata.icon = $(\".icon\");\n\t\tdata.checkbox = createCheckbox(data.templateDisposables);\n\n\t\tdata.templateDisposables.add(\n\t\t\tdom.addStandardDisposableListener(data.checkbox, \"change\", (e) => {\n\t\t\t\tthis.debugService.enableOrDisableBreakpoints(\n\t\t\t\t\t!data.context.enabled,\n\t\t\t\t\tdata.context,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\tdom.append(data.breakpoint, data.icon);\n\t\tdom.append(data.breakpoint, data.checkbox);\n\n\t\tdata.name = dom.append(data.breakpoint, $(\"span.name\"));\n\n\t\tdata.filePath = dom.append(data.breakpoint, $(\"span.file-path\"));\n\t\tdata.actionBar = new ActionBar(data.breakpoint);\n\t\tdata.templateDisposables.add(data.actionBar);\n\t\tconst badgeContainer = dom.append(\n\t\t\tdata.breakpoint,\n\t\t\t$(\".badge-container\"),\n\t\t);\n\t\tdata.badge = dom.append(\n\t\t\tbadgeContainer,\n\t\t\t$(\"span.line-number.monaco-count-badge\"),\n\t\t);\n\n\t\treturn data;\n\t}\n\n\trenderElement(\n\t\tbreakpoint: IBreakpoint,\n\t\tindex: number,\n\t\tdata: IBreakpointTemplateData,\n\t): void {\n\t\tdata.context = breakpoint;\n\t\tdata.breakpoint.classList.toggle(\n\t\t\t\"disabled\",\n\t\t\t!this.debugService.getModel().areBreakpointsActivated(),\n\t\t);\n\n\t\tdata.name.textContent = resources.basenameOrAuthority(breakpoint.uri);\n\t\tlet badgeContent = breakpoint.lineNumber.toString();\n\t\tif (breakpoint.column) {\n\t\t\tbadgeContent += `:${breakpoint.column}`;\n\t\t}\n\t\tif (breakpoint.modeLabel) {\n\t\t\tbadgeContent = `${breakpoint.modeLabel}: ${badgeContent}`;\n\t\t}\n\t\tdata.badge.textContent = badgeContent;\n\t\tdata.filePath.textContent = this.labelService.getUriLabel(\n\t\t\tresources.dirname(breakpoint.uri),\n\t\t\t{ relative: true },\n\t\t);\n\t\tdata.checkbox.checked = breakpoint.enabled;\n\n\t\tconst { message, icon } = getBreakpointMessageAndIcon(\n\t\t\tthis.debugService.state,\n\t\t\tthis.debugService.getModel().areBreakpointsActivated(),\n\t\t\tbreakpoint,\n\t\t\tthis.labelService,\n\t\t\tthis.debugService.getModel(),\n\t\t);\n\t\tdata.icon.className = ThemeIcon.asClassName(icon);\n\t\tdata.elementDisposables.add(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\tdata.breakpoint,\n\t\t\t\tbreakpoint.message || message || \"\",\n\t\t\t),\n\t\t);\n\n\t\tconst debugActive =\n\t\t\tthis.debugService.state === State.Running ||\n\t\t\tthis.debugService.state === State.Stopped;\n\t\tif (debugActive && !breakpoint.verified) {\n\t\t\tdata.breakpoint.classList.add(\"disabled\");\n\t\t}\n\n\t\tconst primary: IAction[] = [];\n\t\tconst session = this.debugService.getViewModel().focusedSession;\n\t\tthis.breakpointSupportsCondition.set(\n\t\t\t!session || !!session.capabilities.supportsConditionalBreakpoints,\n\t\t);\n\t\tthis.breakpointItemType.set(\"breakpoint\");\n\t\tthis.breakpointHasMultipleModes.set(\n\t\t\tthis.debugService.getModel().getBreakpointModes(\"source\").length >\n\t\t\t\t1,\n\t\t);\n\t\tcreateAndFillInActionBarActions(\n\t\t\tthis.menu,\n\t\t\t{ arg: breakpoint, shouldForwardArgs: true },\n\t\t\t{ primary, secondary: [] },\n\t\t\t\"inline\",\n\t\t);\n\t\tdata.actionBar.clear();\n\t\tdata.actionBar.push(primary, { icon: true, label: false });\n\t\tbreakpointIdToActionBarDomeNode.set(\n\t\t\tbreakpoint.getId(),\n\t\t\tdata.actionBar.domNode,\n\t\t);\n\t}\n\n\tdisposeElement(\n\t\ta: any,\n\t\tindex: number,\n\t\ttemplate: IBreakpointTemplateData,\n\t): void {\n\t\ttemplate.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: IBreakpointTemplateData): void {\n\t\ttemplateData.templateDisposables.dispose();\n\t}\n}\n\nclass ExceptionBreakpointsRenderer\n\timplements\n\t\tIListRenderer<IExceptionBreakpoint, IExceptionBreakpointTemplateData>\n{\n\tconstructor(\n\t\tprivate menu: IMenu,\n\t\tprivate breakpointHasMultipleModes: IContextKey<boolean>,\n\t\tprivate breakpointSupportsCondition: IContextKey<boolean>,\n\t\tprivate breakpointItemType: IContextKey<string | undefined>,\n\t\tprivate debugService: IDebugService,\n\t\tprivate readonly hoverService: IHoverService,\n\t) {\n\t\t// noop\n\t}\n\n\tstatic readonly ID = \"exceptionbreakpoints\";\n\n\tget templateId() {\n\t\treturn ExceptionBreakpointsRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IExceptionBreakpointTemplateData {\n\t\tconst data: IExceptionBreakpointTemplateData = Object.create(null);\n\t\tdata.elementDisposables = new DisposableStore();\n\t\tdata.templateDisposables = new DisposableStore();\n\t\tdata.templateDisposables.add(data.elementDisposables);\n\t\tdata.breakpoint = dom.append(container, $(\".breakpoint\"));\n\n\t\tdata.checkbox = createCheckbox(data.templateDisposables);\n\t\tdata.templateDisposables.add(\n\t\t\tdom.addStandardDisposableListener(data.checkbox, \"change\", (e) => {\n\t\t\t\tthis.debugService.enableOrDisableBreakpoints(\n\t\t\t\t\t!data.context.enabled,\n\t\t\t\t\tdata.context,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\tdom.append(data.breakpoint, data.checkbox);\n\n\t\tdata.name = dom.append(data.breakpoint, $(\"span.name\"));\n\t\tdata.condition = dom.append(data.breakpoint, $(\"span.condition\"));\n\t\tdata.breakpoint.classList.add(\"exception\");\n\n\t\tdata.actionBar = new ActionBar(data.breakpoint);\n\t\tdata.templateDisposables.add(data.actionBar);\n\t\tconst badgeContainer = dom.append(\n\t\t\tdata.breakpoint,\n\t\t\t$(\".badge-container\"),\n\t\t);\n\t\tdata.badge = dom.append(\n\t\t\tbadgeContainer,\n\t\t\t$(\"span.line-number.monaco-count-badge\"),\n\t\t);\n\n\t\treturn data;\n\t}\n\n\trenderElement(\n\t\texceptionBreakpoint: IExceptionBreakpoint,\n\t\tindex: number,\n\t\tdata: IExceptionBreakpointTemplateData,\n\t): void {\n\t\tdata.context = exceptionBreakpoint;\n\t\tdata.name.textContent =\n\t\t\texceptionBreakpoint.label ||\n\t\t\t`${exceptionBreakpoint.filter} exceptions`;\n\t\tconst exceptionBreakpointtitle = exceptionBreakpoint.verified\n\t\t\t? exceptionBreakpoint.description || data.name.textContent\n\t\t\t: exceptionBreakpoint.message ||\n\t\t\t\tlocalize(\n\t\t\t\t\t\"unverifiedExceptionBreakpoint\",\n\t\t\t\t\t\"Unverified Exception Breakpoint\",\n\t\t\t\t);\n\t\tdata.elementDisposables.add(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\tdata.breakpoint,\n\t\t\t\texceptionBreakpointtitle,\n\t\t\t),\n\t\t);\n\t\tdata.breakpoint.classList.toggle(\n\t\t\t\"disabled\",\n\t\t\t!exceptionBreakpoint.verified,\n\t\t);\n\t\tdata.checkbox.checked = exceptionBreakpoint.enabled;\n\t\tdata.condition.textContent = exceptionBreakpoint.condition || \"\";\n\t\tdata.elementDisposables.add(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\tdata.condition,\n\t\t\t\tlocalize(\n\t\t\t\t\t\"expressionCondition\",\n\t\t\t\t\t\"Expression condition: {0}\",\n\t\t\t\t\texceptionBreakpoint.condition,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\tif (exceptionBreakpoint.modeLabel) {\n\t\t\tdata.badge.textContent = exceptionBreakpoint.modeLabel;\n\t\t\tdata.badge.style.display = \"block\";\n\t\t} else {\n\t\t\tdata.badge.style.display = \"none\";\n\t\t}\n\n\t\tconst primary: IAction[] = [];\n\t\tthis.breakpointSupportsCondition.set(\n\t\t\t(exceptionBreakpoint as ExceptionBreakpoint).supportsCondition,\n\t\t);\n\t\tthis.breakpointItemType.set(\"exceptionBreakpoint\");\n\t\tthis.breakpointHasMultipleModes.set(\n\t\t\tthis.debugService.getModel().getBreakpointModes(\"exception\")\n\t\t\t\t.length > 1,\n\t\t);\n\t\tcreateAndFillInActionBarActions(\n\t\t\tthis.menu,\n\t\t\t{ arg: exceptionBreakpoint, shouldForwardArgs: true },\n\t\t\t{ primary, secondary: [] },\n\t\t\t\"inline\",\n\t\t);\n\t\tdata.actionBar.clear();\n\t\tdata.actionBar.push(primary, { icon: true, label: false });\n\t\tbreakpointIdToActionBarDomeNode.set(\n\t\t\texceptionBreakpoint.getId(),\n\t\t\tdata.actionBar.domNode,\n\t\t);\n\t}\n\n\tdisposeElement(\n\t\telement: IExceptionBreakpoint,\n\t\tindex: number,\n\t\ttemplateData: IExceptionBreakpointTemplateData,\n\t\theight: number | undefined,\n\t): void {\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: IExceptionBreakpointTemplateData): void {\n\t\ttemplateData.templateDisposables.dispose();\n\t}\n}\n\nclass FunctionBreakpointsRenderer\n\timplements\n\t\tIListRenderer<FunctionBreakpoint, IFunctionBreakpointTemplateData>\n{\n\tconstructor(\n\t\tprivate menu: IMenu,\n\t\tprivate breakpointSupportsCondition: IContextKey<boolean>,\n\t\tprivate breakpointItemType: IContextKey<string | undefined>,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t\t@ILabelService private readonly labelService: ILabelService\n\t) {\n\t\t// noop\n\t}\n\n\tstatic readonly ID = \"functionbreakpoints\";\n\n\tget templateId() {\n\t\treturn FunctionBreakpointsRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IFunctionBreakpointTemplateData {\n\t\tconst data: IFunctionBreakpointTemplateData = Object.create(null);\n\t\tdata.elementDisposables = new DisposableStore();\n\t\tdata.templateDisposables = new DisposableStore();\n\t\tdata.templateDisposables.add(data.elementDisposables);\n\t\tdata.breakpoint = dom.append(container, $(\".breakpoint\"));\n\n\t\tdata.icon = $(\".icon\");\n\t\tdata.checkbox = createCheckbox(data.templateDisposables);\n\t\tdata.templateDisposables.add(\n\t\t\tdom.addStandardDisposableListener(data.checkbox, \"change\", (e) => {\n\t\t\t\tthis.debugService.enableOrDisableBreakpoints(\n\t\t\t\t\t!data.context.enabled,\n\t\t\t\t\tdata.context,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\tdom.append(data.breakpoint, data.icon);\n\t\tdom.append(data.breakpoint, data.checkbox);\n\n\t\tdata.name = dom.append(data.breakpoint, $(\"span.name\"));\n\t\tdata.condition = dom.append(data.breakpoint, $(\"span.condition\"));\n\n\t\tdata.actionBar = new ActionBar(data.breakpoint);\n\t\tdata.templateDisposables.add(data.actionBar);\n\t\tconst badgeContainer = dom.append(\n\t\t\tdata.breakpoint,\n\t\t\t$(\".badge-container\"),\n\t\t);\n\t\tdata.badge = dom.append(\n\t\t\tbadgeContainer,\n\t\t\t$(\"span.line-number.monaco-count-badge\"),\n\t\t);\n\n\t\treturn data;\n\t}\n\n\trenderElement(\n\t\tfunctionBreakpoint: FunctionBreakpoint,\n\t\t_index: number,\n\t\tdata: IFunctionBreakpointTemplateData,\n\t): void {\n\t\tdata.context = functionBreakpoint;\n\t\tdata.name.textContent = functionBreakpoint.name;\n\t\tconst { icon, message } = getBreakpointMessageAndIcon(\n\t\t\tthis.debugService.state,\n\t\t\tthis.debugService.getModel().areBreakpointsActivated(),\n\t\t\tfunctionBreakpoint,\n\t\t\tthis.labelService,\n\t\t\tthis.debugService.getModel(),\n\t\t);\n\t\tdata.icon.className = ThemeIcon.asClassName(icon);\n\t\tdata.elementDisposables.add(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\tdata.icon,\n\t\t\t\tmessage ? message : \"\",\n\t\t\t),\n\t\t);\n\t\tdata.checkbox.checked = functionBreakpoint.enabled;\n\t\tdata.elementDisposables.add(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\tdata.breakpoint,\n\t\t\t\tmessage ? message : \"\",\n\t\t\t),\n\t\t);\n\t\tif (functionBreakpoint.condition && functionBreakpoint.hitCondition) {\n\t\t\tdata.condition.textContent = localize(\n\t\t\t\t\"expressionAndHitCount\",\n\t\t\t\t\"Condition: {0} | Hit Count: {1}\",\n\t\t\t\tfunctionBreakpoint.condition,\n\t\t\t\tfunctionBreakpoint.hitCondition,\n\t\t\t);\n\t\t} else {\n\t\t\tdata.condition.textContent =\n\t\t\t\tfunctionBreakpoint.condition ||\n\t\t\t\tfunctionBreakpoint.hitCondition ||\n\t\t\t\t\"\";\n\t\t}\n\n\t\tif (functionBreakpoint.modeLabel) {\n\t\t\tdata.badge.textContent = functionBreakpoint.modeLabel;\n\t\t\tdata.badge.style.display = \"block\";\n\t\t} else {\n\t\t\tdata.badge.style.display = \"none\";\n\t\t}\n\n\t\t// Mark function breakpoints as disabled if deactivated or if debug type does not support them #9099\n\t\tconst session = this.debugService.getViewModel().focusedSession;\n\t\tdata.breakpoint.classList.toggle(\n\t\t\t\"disabled\",\n\t\t\t(session && !session.capabilities.supportsFunctionBreakpoints) ||\n\t\t\t\t!this.debugService.getModel().areBreakpointsActivated(),\n\t\t);\n\t\tif (session && !session.capabilities.supportsFunctionBreakpoints) {\n\t\t\tdata.elementDisposables.add(\n\t\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\t\tdata.breakpoint,\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"functionBreakpointsNotSupported\",\n\t\t\t\t\t\t\"Function breakpoints are not supported by this debug type\",\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tconst primary: IAction[] = [];\n\t\tthis.breakpointSupportsCondition.set(\n\t\t\t!session || !!session.capabilities.supportsConditionalBreakpoints,\n\t\t);\n\t\tthis.breakpointItemType.set(\"functionBreakpoint\");\n\t\tcreateAndFillInActionBarActions(\n\t\t\tthis.menu,\n\t\t\t{ arg: functionBreakpoint, shouldForwardArgs: true },\n\t\t\t{ primary, secondary: [] },\n\t\t\t\"inline\",\n\t\t);\n\t\tdata.actionBar.clear();\n\t\tdata.actionBar.push(primary, { icon: true, label: false });\n\t\tbreakpointIdToActionBarDomeNode.set(\n\t\t\tfunctionBreakpoint.getId(),\n\t\t\tdata.actionBar.domNode,\n\t\t);\n\t}\n\n\tdisposeElement(\n\t\telement: FunctionBreakpoint,\n\t\tindex: number,\n\t\ttemplateData: IFunctionBreakpointTemplateData,\n\t\theight: number | undefined,\n\t): void {\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: IFunctionBreakpointTemplateData): void {\n\t\ttemplateData.templateDisposables.dispose();\n\t}\n}\n\nclass DataBreakpointsRenderer\n\timplements IListRenderer<DataBreakpoint, IDataBreakpointTemplateData>\n{\n\tconstructor(\n\t\tprivate menu: IMenu,\n\t\tprivate breakpointHasMultipleModes: IContextKey<boolean>,\n\t\tprivate breakpointSupportsCondition: IContextKey<boolean>,\n\t\tprivate breakpointItemType: IContextKey<string | undefined>,\n\t\tprivate breakpointIsDataBytes: IContextKey<boolean | undefined>,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t\t@ILabelService private readonly labelService: ILabelService\n\t) {\n\t\t// noop\n\t}\n\n\tstatic readonly ID = \"databreakpoints\";\n\n\tget templateId() {\n\t\treturn DataBreakpointsRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IDataBreakpointTemplateData {\n\t\tconst data: IDataBreakpointTemplateData = Object.create(null);\n\t\tdata.breakpoint = dom.append(container, $(\".breakpoint\"));\n\t\tdata.elementDisposables = new DisposableStore();\n\t\tdata.templateDisposables = new DisposableStore();\n\t\tdata.templateDisposables.add(data.elementDisposables);\n\n\t\tdata.icon = $(\".icon\");\n\t\tdata.checkbox = createCheckbox(data.templateDisposables);\n\t\tdata.templateDisposables.add(\n\t\t\tdom.addStandardDisposableListener(data.checkbox, \"change\", (e) => {\n\t\t\t\tthis.debugService.enableOrDisableBreakpoints(\n\t\t\t\t\t!data.context.enabled,\n\t\t\t\t\tdata.context,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\tdom.append(data.breakpoint, data.icon);\n\t\tdom.append(data.breakpoint, data.checkbox);\n\n\t\tdata.name = dom.append(data.breakpoint, $(\"span.name\"));\n\t\tdata.accessType = dom.append(data.breakpoint, $(\"span.access-type\"));\n\t\tdata.condition = dom.append(data.breakpoint, $(\"span.condition\"));\n\n\t\tdata.actionBar = new ActionBar(data.breakpoint);\n\t\tdata.templateDisposables.add(data.actionBar);\n\t\tconst badgeContainer = dom.append(\n\t\t\tdata.breakpoint,\n\t\t\t$(\".badge-container\"),\n\t\t);\n\t\tdata.badge = dom.append(\n\t\t\tbadgeContainer,\n\t\t\t$(\"span.line-number.monaco-count-badge\"),\n\t\t);\n\n\t\treturn data;\n\t}\n\n\trenderElement(\n\t\tdataBreakpoint: DataBreakpoint,\n\t\t_index: number,\n\t\tdata: IDataBreakpointTemplateData,\n\t): void {\n\t\tdata.context = dataBreakpoint;\n\t\tdata.name.textContent = dataBreakpoint.description;\n\t\tconst { icon, message } = getBreakpointMessageAndIcon(\n\t\t\tthis.debugService.state,\n\t\t\tthis.debugService.getModel().areBreakpointsActivated(),\n\t\t\tdataBreakpoint,\n\t\t\tthis.labelService,\n\t\t\tthis.debugService.getModel(),\n\t\t);\n\t\tdata.icon.className = ThemeIcon.asClassName(icon);\n\t\tdata.elementDisposables.add(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\tdata.icon,\n\t\t\t\tmessage ? message : \"\",\n\t\t\t),\n\t\t);\n\t\tdata.checkbox.checked = dataBreakpoint.enabled;\n\t\tdata.elementDisposables.add(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\tdata.breakpoint,\n\t\t\t\tmessage ? message : \"\",\n\t\t\t),\n\t\t);\n\n\t\tif (dataBreakpoint.modeLabel) {\n\t\t\tdata.badge.textContent = dataBreakpoint.modeLabel;\n\t\t\tdata.badge.style.display = \"block\";\n\t\t} else {\n\t\t\tdata.badge.style.display = \"none\";\n\t\t}\n\n\t\t// Mark data breakpoints as disabled if deactivated or if debug type does not support them\n\t\tconst session = this.debugService.getViewModel().focusedSession;\n\t\tdata.breakpoint.classList.toggle(\n\t\t\t\"disabled\",\n\t\t\t(session && !session.capabilities.supportsDataBreakpoints) ||\n\t\t\t\t!this.debugService.getModel().areBreakpointsActivated(),\n\t\t);\n\t\tif (session && !session.capabilities.supportsDataBreakpoints) {\n\t\t\tdata.elementDisposables.add(\n\t\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\t\tdata.breakpoint,\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"dataBreakpointsNotSupported\",\n\t\t\t\t\t\t\"Data breakpoints are not supported by this debug type\",\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\tif (dataBreakpoint.accessType) {\n\t\t\tconst accessType =\n\t\t\t\tdataBreakpoint.accessType === \"read\"\n\t\t\t\t\t? localize(\"read\", \"Read\")\n\t\t\t\t\t: dataBreakpoint.accessType === \"write\"\n\t\t\t\t\t\t? localize(\"write\", \"Write\")\n\t\t\t\t\t\t: localize(\"access\", \"Access\");\n\t\t\tdata.accessType.textContent = accessType;\n\t\t} else {\n\t\t\tdata.accessType.textContent = \"\";\n\t\t}\n\t\tif (dataBreakpoint.condition && dataBreakpoint.hitCondition) {\n\t\t\tdata.condition.textContent = localize(\n\t\t\t\t\"expressionAndHitCount\",\n\t\t\t\t\"Condition: {0} | Hit Count: {1}\",\n\t\t\t\tdataBreakpoint.condition,\n\t\t\t\tdataBreakpoint.hitCondition,\n\t\t\t);\n\t\t} else {\n\t\t\tdata.condition.textContent =\n\t\t\t\tdataBreakpoint.condition || dataBreakpoint.hitCondition || \"\";\n\t\t}\n\n\t\tconst primary: IAction[] = [];\n\t\tthis.breakpointSupportsCondition.set(\n\t\t\t!session || !!session.capabilities.supportsConditionalBreakpoints,\n\t\t);\n\t\tthis.breakpointHasMultipleModes.set(\n\t\t\tthis.debugService.getModel().getBreakpointModes(\"data\").length > 1,\n\t\t);\n\t\tthis.breakpointItemType.set(\"dataBreakpoint\");\n\t\tthis.breakpointIsDataBytes.set(\n\t\t\tdataBreakpoint.src.type === DataBreakpointSetType.Address,\n\t\t);\n\t\tcreateAndFillInActionBarActions(\n\t\t\tthis.menu,\n\t\t\t{ arg: dataBreakpoint, shouldForwardArgs: true },\n\t\t\t{ primary, secondary: [] },\n\t\t\t\"inline\",\n\t\t);\n\t\tdata.actionBar.clear();\n\t\tdata.actionBar.push(primary, { icon: true, label: false });\n\t\tbreakpointIdToActionBarDomeNode.set(\n\t\t\tdataBreakpoint.getId(),\n\t\t\tdata.actionBar.domNode,\n\t\t);\n\t\tthis.breakpointIsDataBytes.reset();\n\t}\n\n\tdisposeElement(\n\t\telement: DataBreakpoint,\n\t\tindex: number,\n\t\ttemplateData: IDataBreakpointTemplateData,\n\t\theight: number | undefined,\n\t): void {\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: IBaseBreakpointWithIconTemplateData): void {\n\t\ttemplateData.templateDisposables.dispose();\n\t}\n}\n\nclass InstructionBreakpointsRenderer\n\timplements\n\t\tIListRenderer<\n\t\t\tIInstructionBreakpoint,\n\t\t\tIInstructionBreakpointTemplateData\n\t\t>\n{\n\tconstructor(\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t\t@ILabelService private readonly labelService: ILabelService\n\t) {\n\t\t// noop\n\t}\n\n\tstatic readonly ID = \"instructionBreakpoints\";\n\n\tget templateId() {\n\t\treturn InstructionBreakpointsRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IInstructionBreakpointTemplateData {\n\t\tconst data: IInstructionBreakpointTemplateData = Object.create(null);\n\t\tdata.elementDisposables = new DisposableStore();\n\t\tdata.templateDisposables = new DisposableStore();\n\t\tdata.templateDisposables.add(data.elementDisposables);\n\t\tdata.breakpoint = dom.append(container, $(\".breakpoint\"));\n\n\t\tdata.icon = $(\".icon\");\n\t\tdata.checkbox = createCheckbox(data.templateDisposables);\n\t\tdata.templateDisposables.add(\n\t\t\tdom.addStandardDisposableListener(data.checkbox, \"change\", (e) => {\n\t\t\t\tthis.debugService.enableOrDisableBreakpoints(\n\t\t\t\t\t!data.context.enabled,\n\t\t\t\t\tdata.context,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\tdom.append(data.breakpoint, data.icon);\n\t\tdom.append(data.breakpoint, data.checkbox);\n\n\t\tdata.name = dom.append(data.breakpoint, $(\"span.name\"));\n\n\t\tdata.address = dom.append(data.breakpoint, $(\"span.file-path\"));\n\t\tdata.actionBar = new ActionBar(data.breakpoint);\n\t\tdata.templateDisposables.add(data.actionBar);\n\t\tconst badgeContainer = dom.append(\n\t\t\tdata.breakpoint,\n\t\t\t$(\".badge-container\"),\n\t\t);\n\t\tdata.badge = dom.append(\n\t\t\tbadgeContainer,\n\t\t\t$(\"span.line-number.monaco-count-badge\"),\n\t\t);\n\n\t\treturn data;\n\t}\n\n\trenderElement(\n\t\tbreakpoint: IInstructionBreakpoint,\n\t\tindex: number,\n\t\tdata: IInstructionBreakpointTemplateData,\n\t): void {\n\t\tdata.context = breakpoint;\n\t\tdata.breakpoint.classList.toggle(\n\t\t\t\"disabled\",\n\t\t\t!this.debugService.getModel().areBreakpointsActivated(),\n\t\t);\n\n\t\tdata.name.textContent = \"0x\" + breakpoint.address.toString(16);\n\t\tdata.elementDisposables.add(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\tdata.name,\n\t\t\t\t`Decimal address: breakpoint.address.toString()`,\n\t\t\t),\n\t\t);\n\t\tdata.checkbox.checked = breakpoint.enabled;\n\n\t\tconst { message, icon } = getBreakpointMessageAndIcon(\n\t\t\tthis.debugService.state,\n\t\t\tthis.debugService.getModel().areBreakpointsActivated(),\n\t\t\tbreakpoint,\n\t\t\tthis.labelService,\n\t\t\tthis.debugService.getModel(),\n\t\t);\n\t\tdata.icon.className = ThemeIcon.asClassName(icon);\n\t\tdata.elementDisposables.add(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\tdata.breakpoint,\n\t\t\t\tbreakpoint.message || message || \"\",\n\t\t\t),\n\t\t);\n\n\t\tconst debugActive =\n\t\t\tthis.debugService.state === State.Running ||\n\t\t\tthis.debugService.state === State.Stopped;\n\t\tif (debugActive && !breakpoint.verified) {\n\t\t\tdata.breakpoint.classList.add(\"disabled\");\n\t\t}\n\n\t\tif (breakpoint.modeLabel) {\n\t\t\tdata.badge.textContent = breakpoint.modeLabel;\n\t\t\tdata.badge.style.display = \"block\";\n\t\t} else {\n\t\t\tdata.badge.style.display = \"none\";\n\t\t}\n\t}\n\n\tdisposeElement(\n\t\telement: IInstructionBreakpoint,\n\t\tindex: number,\n\t\ttemplateData: IInstructionBreakpointTemplateData,\n\t\theight: number | undefined,\n\t): void {\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: IInstructionBreakpointTemplateData): void {\n\t\ttemplateData.templateDisposables.dispose();\n\t}\n}\n\nclass FunctionBreakpointInputRenderer\n\timplements\n\t\tIListRenderer<IFunctionBreakpoint, IFunctionBreakpointInputTemplateData>\n{\n\tconstructor(\n\t\tprivate view: BreakpointsView,\n\t\tprivate debugService: IDebugService,\n\t\tprivate contextViewService: IContextViewService,\n\t\tprivate readonly hoverService: IHoverService,\n\t\tprivate labelService: ILabelService,\n\t) {}\n\n\tstatic readonly ID = \"functionbreakpointinput\";\n\n\tget templateId() {\n\t\treturn FunctionBreakpointInputRenderer.ID;\n\t}\n\n\trenderTemplate(\n\t\tcontainer: HTMLElement,\n\t): IFunctionBreakpointInputTemplateData {\n\t\tconst template: IFunctionBreakpointInputTemplateData =\n\t\t\tObject.create(null);\n\t\tconst toDispose = new DisposableStore();\n\n\t\tconst breakpoint = dom.append(container, $(\".breakpoint\"));\n\t\ttemplate.icon = $(\".icon\");\n\t\ttemplate.checkbox = createCheckbox(toDispose);\n\n\t\tdom.append(breakpoint, template.icon);\n\t\tdom.append(breakpoint, template.checkbox);\n\t\tthis.view.breakpointInputFocused.set(true);\n\t\tconst inputBoxContainer = dom.append(\n\t\t\tbreakpoint,\n\t\t\t$(\".inputBoxContainer\"),\n\t\t);\n\n\t\tconst inputBox = new InputBox(\n\t\t\tinputBoxContainer,\n\t\t\tthis.contextViewService,\n\t\t\t{ inputBoxStyles: defaultInputBoxStyles },\n\t\t);\n\n\t\ttoDispose.add(inputBox);\n\n\t\tconst wrapUp = (success: boolean) => {\n\t\t\ttemplate.updating = true;\n\t\t\ttry {\n\t\t\t\tthis.view.breakpointInputFocused.set(false);\n\t\t\t\tconst id = template.breakpoint.getId();\n\n\t\t\t\tif (success) {\n\t\t\t\t\tif (template.type === \"name\") {\n\t\t\t\t\t\tthis.debugService.updateFunctionBreakpoint(id, {\n\t\t\t\t\t\t\tname: inputBox.value,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (template.type === \"condition\") {\n\t\t\t\t\t\tthis.debugService.updateFunctionBreakpoint(id, {\n\t\t\t\t\t\t\tcondition: inputBox.value,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (template.type === \"hitCount\") {\n\t\t\t\t\t\tthis.debugService.updateFunctionBreakpoint(id, {\n\t\t\t\t\t\t\thitCondition: inputBox.value,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else if (\n\t\t\t\t\ttemplate.type === \"name\" &&\n\t\t\t\t\t!template.breakpoint.name\n\t\t\t\t) {\n\t\t\t\t\tthis.debugService.removeFunctionBreakpoints(id);\n\t\t\t\t} else {\n\t\t\t\t\tthis.view.renderInputBox(undefined);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\ttemplate.updating = false;\n\t\t\t}\n\t\t};\n\n\t\ttoDispose.add(\n\t\t\tdom.addStandardDisposableListener(\n\t\t\t\tinputBox.inputElement,\n\t\t\t\t\"keydown\",\n\t\t\t\t(e: IKeyboardEvent) => {\n\t\t\t\t\tconst isEscape = e.equals(KeyCode.Escape);\n\t\t\t\t\tconst isEnter = e.equals(KeyCode.Enter);\n\t\t\t\t\tif (isEscape || isEnter) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\twrapUp(isEnter);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\ttoDispose.add(\n\t\t\tdom.addDisposableListener(inputBox.inputElement, \"blur\", () => {\n\t\t\t\tif (!template.updating) {\n\t\t\t\t\twrapUp(!!inputBox.value);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\ttemplate.inputBox = inputBox;\n\t\ttemplate.elementDisposables = new DisposableStore();\n\t\ttemplate.templateDisposables = toDispose;\n\t\ttemplate.templateDisposables.add(template.elementDisposables);\n\t\treturn template;\n\t}\n\n\trenderElement(\n\t\tfunctionBreakpoint: FunctionBreakpoint,\n\t\t_index: number,\n\t\tdata: IFunctionBreakpointInputTemplateData,\n\t): void {\n\t\tdata.breakpoint = functionBreakpoint;\n\t\tdata.type = this.view.inputBoxData?.type || \"name\"; // If there is no type set take the 'name' as the default\n\t\tconst { icon, message } = getBreakpointMessageAndIcon(\n\t\t\tthis.debugService.state,\n\t\t\tthis.debugService.getModel().areBreakpointsActivated(),\n\t\t\tfunctionBreakpoint,\n\t\t\tthis.labelService,\n\t\t\tthis.debugService.getModel(),\n\t\t);\n\n\t\tdata.icon.className = ThemeIcon.asClassName(icon);\n\t\tdata.elementDisposables.add(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\tdata.icon,\n\t\t\t\tmessage ? message : \"\",\n\t\t\t),\n\t\t);\n\t\tdata.checkbox.checked = functionBreakpoint.enabled;\n\t\tdata.checkbox.disabled = true;\n\t\tdata.inputBox.value = functionBreakpoint.name || \"\";\n\n\t\tlet placeholder = localize(\n\t\t\t\"functionBreakpointPlaceholder\",\n\t\t\t\"Function to break on\",\n\t\t);\n\t\tlet ariaLabel = localize(\n\t\t\t\"functionBreakPointInputAriaLabel\",\n\t\t\t\"Type function breakpoint.\",\n\t\t);\n\t\tif (data.type === \"condition\") {\n\t\t\tdata.inputBox.value = functionBreakpoint.condition || \"\";\n\t\t\tplaceholder = localize(\n\t\t\t\t\"functionBreakpointExpressionPlaceholder\",\n\t\t\t\t\"Break when expression evaluates to true\",\n\t\t\t);\n\t\t\tariaLabel = localize(\n\t\t\t\t\"functionBreakPointExpresionAriaLabel\",\n\t\t\t\t\"Type expression. Function breakpoint will break when expression evaluates to true\",\n\t\t\t);\n\t\t} else if (data.type === \"hitCount\") {\n\t\t\tdata.inputBox.value = functionBreakpoint.hitCondition || \"\";\n\t\t\tplaceholder = localize(\n\t\t\t\t\"functionBreakpointHitCountPlaceholder\",\n\t\t\t\t\"Break when hit count is met\",\n\t\t\t);\n\t\t\tariaLabel = localize(\n\t\t\t\t\"functionBreakPointHitCountAriaLabel\",\n\t\t\t\t\"Type hit count. Function breakpoint will break when hit count is met.\",\n\t\t\t);\n\t\t}\n\t\tdata.inputBox.setAriaLabel(ariaLabel);\n\t\tdata.inputBox.setPlaceHolder(placeholder);\n\n\t\tsetTimeout(() => {\n\t\t\tdata.inputBox.focus();\n\t\t\tdata.inputBox.select();\n\t\t}, 0);\n\t}\n\n\tdisposeElement(\n\t\telement: IFunctionBreakpoint,\n\t\tindex: number,\n\t\ttemplateData: IFunctionBreakpointInputTemplateData,\n\t\theight: number | undefined,\n\t): void {\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: IFunctionBreakpointInputTemplateData): void {\n\t\ttemplateData.templateDisposables.dispose();\n\t}\n}\n\nclass DataBreakpointInputRenderer\n\timplements IListRenderer<IDataBreakpoint, IDataBreakpointInputTemplateData>\n{\n\tconstructor(\n\t\tprivate view: BreakpointsView,\n\t\tprivate debugService: IDebugService,\n\t\tprivate contextViewService: IContextViewService,\n\t\tprivate readonly hoverService: IHoverService,\n\t\tprivate labelService: ILabelService,\n\t) {}\n\n\tstatic readonly ID = \"databreakpointinput\";\n\n\tget templateId() {\n\t\treturn DataBreakpointInputRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IDataBreakpointInputTemplateData {\n\t\tconst template: IDataBreakpointInputTemplateData = Object.create(null);\n\t\tconst toDispose = new DisposableStore();\n\n\t\tconst breakpoint = dom.append(container, $(\".breakpoint\"));\n\t\ttemplate.icon = $(\".icon\");\n\t\ttemplate.checkbox = createCheckbox(toDispose);\n\n\t\tdom.append(breakpoint, template.icon);\n\t\tdom.append(breakpoint, template.checkbox);\n\t\tthis.view.breakpointInputFocused.set(true);\n\t\tconst inputBoxContainer = dom.append(\n\t\t\tbreakpoint,\n\t\t\t$(\".inputBoxContainer\"),\n\t\t);\n\n\t\tconst inputBox = new InputBox(\n\t\t\tinputBoxContainer,\n\t\t\tthis.contextViewService,\n\t\t\t{ inputBoxStyles: defaultInputBoxStyles },\n\t\t);\n\t\ttoDispose.add(inputBox);\n\n\t\tconst wrapUp = (success: boolean) => {\n\t\t\ttemplate.updating = true;\n\t\t\ttry {\n\t\t\t\tthis.view.breakpointInputFocused.set(false);\n\t\t\t\tconst id = template.breakpoint.getId();\n\n\t\t\t\tif (success) {\n\t\t\t\t\tif (template.type === \"condition\") {\n\t\t\t\t\t\tthis.debugService.updateDataBreakpoint(id, {\n\t\t\t\t\t\t\tcondition: inputBox.value,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (template.type === \"hitCount\") {\n\t\t\t\t\t\tthis.debugService.updateDataBreakpoint(id, {\n\t\t\t\t\t\t\thitCondition: inputBox.value,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.view.renderInputBox(undefined);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\ttemplate.updating = false;\n\t\t\t}\n\t\t};\n\n\t\ttoDispose.add(\n\t\t\tdom.addStandardDisposableListener(\n\t\t\t\tinputBox.inputElement,\n\t\t\t\t\"keydown\",\n\t\t\t\t(e: IKeyboardEvent) => {\n\t\t\t\t\tconst isEscape = e.equals(KeyCode.Escape);\n\t\t\t\t\tconst isEnter = e.equals(KeyCode.Enter);\n\t\t\t\t\tif (isEscape || isEnter) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\twrapUp(isEnter);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\ttoDispose.add(\n\t\t\tdom.addDisposableListener(inputBox.inputElement, \"blur\", () => {\n\t\t\t\tif (!template.updating) {\n\t\t\t\t\twrapUp(!!inputBox.value);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\ttemplate.inputBox = inputBox;\n\t\ttemplate.elementDisposables = new DisposableStore();\n\t\ttemplate.templateDisposables = toDispose;\n\t\ttemplate.templateDisposables.add(template.elementDisposables);\n\t\treturn template;\n\t}\n\n\trenderElement(\n\t\tdataBreakpoint: DataBreakpoint,\n\t\t_index: number,\n\t\tdata: IDataBreakpointInputTemplateData,\n\t): void {\n\t\tdata.breakpoint = dataBreakpoint;\n\t\tdata.type = this.view.inputBoxData?.type || \"condition\"; // If there is no type set take the 'condition' as the default\n\t\tconst { icon, message } = getBreakpointMessageAndIcon(\n\t\t\tthis.debugService.state,\n\t\t\tthis.debugService.getModel().areBreakpointsActivated(),\n\t\t\tdataBreakpoint,\n\t\t\tthis.labelService,\n\t\t\tthis.debugService.getModel(),\n\t\t);\n\n\t\tdata.icon.className = ThemeIcon.asClassName(icon);\n\t\tdata.elementDisposables.add(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\tdata.icon,\n\t\t\t\tmessage ?? \"\",\n\t\t\t),\n\t\t);\n\t\tdata.checkbox.checked = dataBreakpoint.enabled;\n\t\tdata.checkbox.disabled = true;\n\t\tdata.inputBox.value = \"\";\n\t\tlet placeholder = \"\";\n\t\tlet ariaLabel = \"\";\n\t\tif (data.type === \"condition\") {\n\t\t\tdata.inputBox.value = dataBreakpoint.condition || \"\";\n\t\t\tplaceholder = localize(\n\t\t\t\t\"dataBreakpointExpressionPlaceholder\",\n\t\t\t\t\"Break when expression evaluates to true\",\n\t\t\t);\n\t\t\tariaLabel = localize(\n\t\t\t\t\"dataBreakPointExpresionAriaLabel\",\n\t\t\t\t\"Type expression. Data breakpoint will break when expression evaluates to true\",\n\t\t\t);\n\t\t} else if (data.type === \"hitCount\") {\n\t\t\tdata.inputBox.value = dataBreakpoint.hitCondition || \"\";\n\t\t\tplaceholder = localize(\n\t\t\t\t\"dataBreakpointHitCountPlaceholder\",\n\t\t\t\t\"Break when hit count is met\",\n\t\t\t);\n\t\t\tariaLabel = localize(\n\t\t\t\t\"dataBreakPointHitCountAriaLabel\",\n\t\t\t\t\"Type hit count. Data breakpoint will break when hit count is met.\",\n\t\t\t);\n\t\t}\n\t\tdata.inputBox.setAriaLabel(ariaLabel);\n\t\tdata.inputBox.setPlaceHolder(placeholder);\n\n\t\tsetTimeout(() => {\n\t\t\tdata.inputBox.focus();\n\t\t\tdata.inputBox.select();\n\t\t}, 0);\n\t}\n\n\tdisposeElement(\n\t\telement: IDataBreakpoint,\n\t\tindex: number,\n\t\ttemplateData: IDataBreakpointInputTemplateData,\n\t\theight: number | undefined,\n\t): void {\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: IDataBreakpointInputTemplateData): void {\n\t\ttemplateData.templateDisposables.dispose();\n\t}\n}\n\nclass ExceptionBreakpointInputRenderer\n\timplements\n\t\tIListRenderer<\n\t\t\tIExceptionBreakpoint,\n\t\t\tIExceptionBreakpointInputTemplateData\n\t\t>\n{\n\tconstructor(\n\t\tprivate view: BreakpointsView,\n\t\tprivate debugService: IDebugService,\n\t\tprivate contextViewService: IContextViewService,\n\t) {\n\t\t// noop\n\t}\n\n\tstatic readonly ID = \"exceptionbreakpointinput\";\n\n\tget templateId() {\n\t\treturn ExceptionBreakpointInputRenderer.ID;\n\t}\n\n\trenderTemplate(\n\t\tcontainer: HTMLElement,\n\t): IExceptionBreakpointInputTemplateData {\n\t\tconst template: IExceptionBreakpointInputTemplateData =\n\t\t\tObject.create(null);\n\t\tconst toDispose = new DisposableStore();\n\n\t\tconst breakpoint = dom.append(container, $(\".breakpoint\"));\n\t\tbreakpoint.classList.add(\"exception\");\n\t\ttemplate.checkbox = createCheckbox(toDispose);\n\n\t\tdom.append(breakpoint, template.checkbox);\n\t\tthis.view.breakpointInputFocused.set(true);\n\t\tconst inputBoxContainer = dom.append(\n\t\t\tbreakpoint,\n\t\t\t$(\".inputBoxContainer\"),\n\t\t);\n\t\tconst inputBox = new InputBox(\n\t\t\tinputBoxContainer,\n\t\t\tthis.contextViewService,\n\t\t\t{\n\t\t\t\tariaLabel: localize(\n\t\t\t\t\t\"exceptionBreakpointAriaLabel\",\n\t\t\t\t\t\"Type exception breakpoint condition\",\n\t\t\t\t),\n\t\t\t\tinputBoxStyles: defaultInputBoxStyles,\n\t\t\t},\n\t\t);\n\n\t\ttemplate.templateDisposables.add(inputBox);\n\t\tconst wrapUp = (success: boolean) => {\n\t\t\tthis.view.breakpointInputFocused.set(false);\n\t\t\tlet newCondition = template.breakpoint.condition;\n\t\t\tif (success) {\n\t\t\t\tnewCondition =\n\t\t\t\t\tinputBox.value !== \"\" ? inputBox.value : undefined;\n\t\t\t}\n\t\t\tthis.debugService.setExceptionBreakpointCondition(\n\t\t\t\ttemplate.breakpoint,\n\t\t\t\tnewCondition,\n\t\t\t);\n\t\t};\n\n\t\ttoDispose.add(\n\t\t\tdom.addStandardDisposableListener(\n\t\t\t\tinputBox.inputElement,\n\t\t\t\t\"keydown\",\n\t\t\t\t(e: IKeyboardEvent) => {\n\t\t\t\t\tconst isEscape = e.equals(KeyCode.Escape);\n\t\t\t\t\tconst isEnter = e.equals(KeyCode.Enter);\n\t\t\t\t\tif (isEscape || isEnter) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\twrapUp(isEnter);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\ttoDispose.add(\n\t\t\tdom.addDisposableListener(inputBox.inputElement, \"blur\", () => {\n\t\t\t\t// Need to react with a timeout on the blur event due to possible concurent splices #56443\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\twrapUp(true);\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\n\t\ttemplate.inputBox = inputBox;\n\t\ttemplate.elementDisposables = new DisposableStore();\n\t\ttemplate.templateDisposables = toDispose;\n\t\ttemplate.templateDisposables.add(template.elementDisposables);\n\t\treturn template;\n\t}\n\n\trenderElement(\n\t\texceptionBreakpoint: ExceptionBreakpoint,\n\t\t_index: number,\n\t\tdata: IExceptionBreakpointInputTemplateData,\n\t): void {\n\t\tconst placeHolder =\n\t\t\texceptionBreakpoint.conditionDescription ||\n\t\t\tlocalize(\n\t\t\t\t\"exceptionBreakpointPlaceholder\",\n\t\t\t\t\"Break when expression evaluates to true\",\n\t\t\t);\n\t\tdata.inputBox.setPlaceHolder(placeHolder);\n\t\tdata.breakpoint = exceptionBreakpoint;\n\t\tdata.checkbox.checked = exceptionBreakpoint.enabled;\n\t\tdata.checkbox.disabled = true;\n\t\tdata.inputBox.value = exceptionBreakpoint.condition || \"\";\n\t\tsetTimeout(() => {\n\t\t\tdata.inputBox.focus();\n\t\t\tdata.inputBox.select();\n\t\t}, 0);\n\t}\n\n\tdisposeElement(\n\t\telement: IExceptionBreakpoint,\n\t\tindex: number,\n\t\ttemplateData: IExceptionBreakpointInputTemplateData,\n\t\theight: number | undefined,\n\t): void {\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: IExceptionBreakpointInputTemplateData): void {\n\t\ttemplateData.templateDisposables.dispose();\n\t}\n}\n\nclass BreakpointsAccessibilityProvider\n\timplements IListAccessibilityProvider<BreakpointItem>\n{\n\tconstructor(\n\t\tprivate readonly debugService: IDebugService,\n\t\tprivate readonly labelService: ILabelService,\n\t) {}\n\n\tgetWidgetAriaLabel(): string {\n\t\treturn localize(\"breakpoints\", \"Breakpoints\");\n\t}\n\n\tgetRole(): AriaRole {\n\t\treturn \"checkbox\";\n\t}\n\n\tisChecked(breakpoint: IEnablement) {\n\t\treturn breakpoint.enabled;\n\t}\n\n\tgetAriaLabel(element: BreakpointItem): string | null {\n\t\tif (element instanceof ExceptionBreakpoint) {\n\t\t\treturn element.toString();\n\t\t}\n\n\t\tconst { message } = getBreakpointMessageAndIcon(\n\t\t\tthis.debugService.state,\n\t\t\tthis.debugService.getModel().areBreakpointsActivated(),\n\t\t\telement as IBreakpoint | IDataBreakpoint | IFunctionBreakpoint,\n\t\t\tthis.labelService,\n\t\t\tthis.debugService.getModel(),\n\t\t);\n\t\tconst toString = element.toString();\n\n\t\treturn message ? `${toString}, ${message}` : toString;\n\t}\n}\n\nexport function openBreakpointSource(\n\tbreakpoint: IBreakpoint,\n\tsideBySide: boolean,\n\tpreserveFocus: boolean,\n\tpinned: boolean,\n\tdebugService: IDebugService,\n\teditorService: IEditorService,\n): Promise<IEditorPane | undefined> {\n\tif (\n\t\tbreakpoint.uri.scheme === DEBUG_SCHEME &&\n\t\tdebugService.state === State.Inactive\n\t) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tconst selection = breakpoint.endLineNumber\n\t\t? {\n\t\t\t\tstartLineNumber: breakpoint.lineNumber,\n\t\t\t\tendLineNumber: breakpoint.endLineNumber,\n\t\t\t\tstartColumn: breakpoint.column || 1,\n\t\t\t\tendColumn:\n\t\t\t\t\tbreakpoint.endColumn || Constants.MAX_SAFE_SMALL_INTEGER,\n\t\t\t}\n\t\t: {\n\t\t\t\tstartLineNumber: breakpoint.lineNumber,\n\t\t\t\tstartColumn: breakpoint.column || 1,\n\t\t\t\tendLineNumber: breakpoint.lineNumber,\n\t\t\t\tendColumn:\n\t\t\t\t\tbreakpoint.column || Constants.MAX_SAFE_SMALL_INTEGER,\n\t\t\t};\n\n\treturn editorService.openEditor(\n\t\t{\n\t\t\tresource: breakpoint.uri,\n\t\t\toptions: {\n\t\t\t\tpreserveFocus,\n\t\t\t\tselection,\n\t\t\t\trevealIfOpened: true,\n\t\t\t\tselectionRevealType:\n\t\t\t\t\tTextEditorSelectionRevealType.CenterIfOutsideViewport,\n\t\t\t\tpinned,\n\t\t\t},\n\t\t},\n\t\tsideBySide ? SIDE_GROUP : ACTIVE_GROUP,\n\t);\n}\n\nexport function getBreakpointMessageAndIcon(\n\tstate: State,\n\tbreakpointsActivated: boolean,\n\tbreakpoint: BreakpointItem,\n\tlabelService: ILabelService,\n\tdebugModel: IDebugModel,\n): {\n\tmessage?: string;\n\ticon: ThemeIcon;\n\tshowAdapterUnverifiedMessage?: boolean;\n} {\n\tconst debugActive = state === State.Running || state === State.Stopped;\n\n\tconst breakpointIcon =\n\t\tbreakpoint instanceof DataBreakpoint\n\t\t\t? icons.dataBreakpoint\n\t\t\t: breakpoint instanceof FunctionBreakpoint\n\t\t\t\t? icons.functionBreakpoint\n\t\t\t\t: breakpoint.logMessage\n\t\t\t\t\t? icons.logBreakpoint\n\t\t\t\t\t: icons.breakpoint;\n\n\tif (!breakpoint.enabled || !breakpointsActivated) {\n\t\treturn {\n\t\t\ticon: breakpointIcon.disabled,\n\t\t\tmessage: breakpoint.logMessage\n\t\t\t\t? localize(\"disabledLogpoint\", \"Disabled Logpoint\")\n\t\t\t\t: localize(\"disabledBreakpoint\", \"Disabled Breakpoint\"),\n\t\t};\n\t}\n\n\tconst appendMessage = (text: string): string => {\n\t\treturn \"message\" in breakpoint && breakpoint.message\n\t\t\t? text.concat(\", \" + breakpoint.message)\n\t\t\t: text;\n\t};\n\n\tif (debugActive && breakpoint instanceof Breakpoint && breakpoint.pending) {\n\t\treturn {\n\t\t\ticon: icons.breakpoint.pending,\n\t\t};\n\t}\n\n\tif (debugActive && !breakpoint.verified) {\n\t\treturn {\n\t\t\ticon: breakpointIcon.unverified,\n\t\t\tmessage:\n\t\t\t\t\"message\" in breakpoint && breakpoint.message\n\t\t\t\t\t? breakpoint.message\n\t\t\t\t\t: breakpoint.logMessage\n\t\t\t\t\t\t? localize(\"unverifiedLogpoint\", \"Unverified Logpoint\")\n\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\"unverifiedBreakpoint\",\n\t\t\t\t\t\t\t\t\"Unverified Breakpoint\",\n\t\t\t\t\t\t\t),\n\t\t\tshowAdapterUnverifiedMessage: true,\n\t\t};\n\t}\n\n\tif (breakpoint instanceof DataBreakpoint) {\n\t\tif (!breakpoint.supported) {\n\t\t\treturn {\n\t\t\t\ticon: breakpointIcon.unverified,\n\t\t\t\tmessage: localize(\n\t\t\t\t\t\"dataBreakpointUnsupported\",\n\t\t\t\t\t\"Data breakpoints not supported by this debug type\",\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\ticon: breakpointIcon.regular,\n\t\t\tmessage:\n\t\t\t\tbreakpoint.message ||\n\t\t\t\tlocalize(\"dataBreakpoint\", \"Data Breakpoint\"),\n\t\t};\n\t}\n\n\tif (breakpoint instanceof FunctionBreakpoint) {\n\t\tif (!breakpoint.supported) {\n\t\t\treturn {\n\t\t\t\ticon: breakpointIcon.unverified,\n\t\t\t\tmessage: localize(\n\t\t\t\t\t\"functionBreakpointUnsupported\",\n\t\t\t\t\t\"Function breakpoints not supported by this debug type\",\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\t\tconst messages: string[] = [];\n\t\tmessages.push(\n\t\t\tbreakpoint.message ||\n\t\t\t\tlocalize(\"functionBreakpoint\", \"Function Breakpoint\"),\n\t\t);\n\t\tif (breakpoint.condition) {\n\t\t\tmessages.push(\n\t\t\t\tlocalize(\"expression\", \"Condition: {0}\", breakpoint.condition),\n\t\t\t);\n\t\t}\n\t\tif (breakpoint.hitCondition) {\n\t\t\tmessages.push(\n\t\t\t\tlocalize(\"hitCount\", \"Hit Count: {0}\", breakpoint.hitCondition),\n\t\t\t);\n\t\t}\n\n\t\treturn {\n\t\t\ticon: breakpointIcon.regular,\n\t\t\tmessage: appendMessage(messages.join(\"\\n\")),\n\t\t};\n\t}\n\n\tif (breakpoint instanceof InstructionBreakpoint) {\n\t\tif (!breakpoint.supported) {\n\t\t\treturn {\n\t\t\t\ticon: breakpointIcon.unverified,\n\t\t\t\tmessage: localize(\n\t\t\t\t\t\"instructionBreakpointUnsupported\",\n\t\t\t\t\t\"Instruction breakpoints not supported by this debug type\",\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\t\tconst messages: string[] = [];\n\t\tif (breakpoint.message) {\n\t\t\tmessages.push(breakpoint.message);\n\t\t} else if (breakpoint.instructionReference) {\n\t\t\tmessages.push(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"instructionBreakpointAtAddress\",\n\t\t\t\t\t\"Instruction breakpoint at address {0}\",\n\t\t\t\t\tbreakpoint.instructionReference,\n\t\t\t\t),\n\t\t\t);\n\t\t} else {\n\t\t\tmessages.push(\n\t\t\t\tlocalize(\"instructionBreakpoint\", \"Instruction breakpoint\"),\n\t\t\t);\n\t\t}\n\n\t\tif (breakpoint.hitCondition) {\n\t\t\tmessages.push(\n\t\t\t\tlocalize(\"hitCount\", \"Hit Count: {0}\", breakpoint.hitCondition),\n\t\t\t);\n\t\t}\n\n\t\treturn {\n\t\t\ticon: breakpointIcon.regular,\n\t\t\tmessage: appendMessage(messages.join(\"\\n\")),\n\t\t};\n\t}\n\n\t// can change this when all breakpoint supports dependent breakpoint condition\n\tlet triggeringBreakpoint: IBreakpoint | undefined;\n\tif (breakpoint instanceof Breakpoint && breakpoint.triggeredBy) {\n\t\ttriggeringBreakpoint = debugModel\n\t\t\t.getBreakpoints()\n\t\t\t.find((bp) => bp.getId() === breakpoint.triggeredBy);\n\t}\n\n\tif (\n\t\tbreakpoint.logMessage ||\n\t\tbreakpoint.condition ||\n\t\tbreakpoint.hitCondition ||\n\t\ttriggeringBreakpoint\n\t) {\n\t\tconst messages: string[] = [];\n\t\tlet icon = breakpoint.logMessage\n\t\t\t? icons.logBreakpoint.regular\n\t\t\t: icons.conditionalBreakpoint.regular;\n\t\tif (!breakpoint.supported) {\n\t\t\ticon = icons.debugBreakpointUnsupported;\n\t\t\tmessages.push(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"breakpointUnsupported\",\n\t\t\t\t\t\"Breakpoints of this type are not supported by the debugger\",\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tif (breakpoint.logMessage) {\n\t\t\tmessages.push(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"logMessage\",\n\t\t\t\t\t\"Log Message: {0}\",\n\t\t\t\t\tbreakpoint.logMessage,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\tif (breakpoint.condition) {\n\t\t\tmessages.push(\n\t\t\t\tlocalize(\"expression\", \"Condition: {0}\", breakpoint.condition),\n\t\t\t);\n\t\t}\n\t\tif (breakpoint.hitCondition) {\n\t\t\tmessages.push(\n\t\t\t\tlocalize(\"hitCount\", \"Hit Count: {0}\", breakpoint.hitCondition),\n\t\t\t);\n\t\t}\n\t\tif (triggeringBreakpoint) {\n\t\t\tmessages.push(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"triggeredBy\",\n\t\t\t\t\t\"Hit after breakpoint: {0}\",\n\t\t\t\t\t`${labelService.getUriLabel(triggeringBreakpoint.uri, { relative: true })}: ${triggeringBreakpoint.lineNumber}`,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\treturn {\n\t\t\ticon,\n\t\t\tmessage: appendMessage(messages.join(\"\\n\")),\n\t\t};\n\t}\n\n\tconst message =\n\t\t\"message\" in breakpoint && breakpoint.message\n\t\t\t? breakpoint.message\n\t\t\t: breakpoint instanceof Breakpoint && labelService\n\t\t\t\t? labelService.getUriLabel(breakpoint.uri)\n\t\t\t\t: localize(\"breakpoint\", \"Breakpoint\");\n\treturn {\n\t\ticon: breakpointIcon.regular,\n\t\tmessage,\n\t};\n}\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.debug.viewlet.action.addFunctionBreakpointAction\",\n\t\t\t\ttitle: {\n\t\t\t\t\t...localize2(\n\t\t\t\t\t\t\"addFunctionBreakpoint\",\n\t\t\t\t\t\t\"Add Function Breakpoint\",\n\t\t\t\t\t),\n\t\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"miFunctionBreakpoint\",\n\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"&&Function Breakpoint...\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tf1: true,\n\t\t\t\ticon: icons.watchExpressionsAddFuncBreakpoint,\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\torder: 10,\n\t\t\t\t\t\twhen: ContextKeyExpr.equals(\n\t\t\t\t\t\t\t\"view\",\n\t\t\t\t\t\t\tBREAKPOINTS_VIEW_ID,\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.MenubarNewBreakpointMenu,\n\t\t\t\t\t\tgroup: \"1_breakpoints\",\n\t\t\t\t\t\torder: 3,\n\t\t\t\t\t\twhen: CONTEXT_DEBUGGERS_AVAILABLE,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst debugService = accessor.get(IDebugService);\n\t\t\tconst viewService = accessor.get(IViewsService);\n\t\t\tawait viewService.openView(BREAKPOINTS_VIEW_ID);\n\t\t\tdebugService.addFunctionBreakpoint();\n\t\t}\n\t},\n);\n\nabstract class MemoryBreakpointAction extends Action2 {\n\tasync run(\n\t\taccessor: ServicesAccessor,\n\t\texistingBreakpoint?: IDataBreakpoint,\n\t): Promise<void> {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst session = debugService.getViewModel().focusedSession;\n\t\tif (!session) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet defaultValue;\n\t\tif (\n\t\t\texistingBreakpoint &&\n\t\t\texistingBreakpoint.src.type === DataBreakpointSetType.Address\n\t\t) {\n\t\t\tdefaultValue = `${existingBreakpoint.src.address} + ${existingBreakpoint.src.bytes}`;\n\t\t}\n\n\t\tconst quickInput = accessor.get(IQuickInputService);\n\t\tconst notifications = accessor.get(INotificationService);\n\t\tconst range = await this.getRange(quickInput, defaultValue);\n\t\tif (!range) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet info: IDataBreakpointInfoResponse | undefined;\n\t\ttry {\n\t\t\tinfo = await session.dataBytesBreakpointInfo(\n\t\t\t\trange.address,\n\t\t\t\trange.bytes,\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tnotifications.error(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"dataBreakpointError\",\n\t\t\t\t\t\"Failed to set data breakpoint at {0}: {1}\",\n\t\t\t\t\trange.address,\n\t\t\t\t\te.message,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tif (!info?.dataId) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet accessType: DebugProtocol.DataBreakpointAccessType = \"write\";\n\t\tif (info.accessTypes && info.accessTypes?.length > 1) {\n\t\t\tconst accessTypes = info.accessTypes.map((type) => ({\n\t\t\t\tlabel: type,\n\t\t\t}));\n\t\t\tconst selectedAccessType = await quickInput.pick(accessTypes, {\n\t\t\t\tplaceHolder: localize(\n\t\t\t\t\t\"dataBreakpointAccessType\",\n\t\t\t\t\t\"Select the access type to monitor\",\n\t\t\t\t),\n\t\t\t});\n\t\t\tif (!selectedAccessType) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccessType = selectedAccessType.label;\n\t\t}\n\n\t\tconst src: DataBreakpointSource = {\n\t\t\ttype: DataBreakpointSetType.Address,\n\t\t\t...range,\n\t\t};\n\t\tif (existingBreakpoint) {\n\t\t\tawait debugService.removeDataBreakpoints(\n\t\t\t\texistingBreakpoint.getId(),\n\t\t\t);\n\t\t}\n\n\t\tawait debugService.addDataBreakpoint({\n\t\t\tdescription: info.description,\n\t\t\tsrc,\n\t\t\tcanPersist: true,\n\t\t\taccessTypes: info.accessTypes,\n\t\t\taccessType: accessType,\n\t\t\tinitialSessionData: { session, dataId: info.dataId },\n\t\t});\n\t}\n\n\tprivate getRange(quickInput: IQuickInputService, defaultValue?: string) {\n\t\treturn new Promise<{ address: string; bytes: number } | undefined>(\n\t\t\t(resolve) => {\n\t\t\t\tconst disposables = new DisposableStore();\n\t\t\t\tconst input = disposables.add(quickInput.createInputBox());\n\t\t\t\tinput.prompt = localize(\n\t\t\t\t\t\"dataBreakpointMemoryRangePrompt\",\n\t\t\t\t\t\"Enter a memory range in which to break\",\n\t\t\t\t);\n\t\t\t\tinput.placeholder = localize(\n\t\t\t\t\t\"dataBreakpointMemoryRangePlaceholder\",\n\t\t\t\t\t\"Absolute range (0x1234 - 0x1300) or range of bytes after an address (0x1234 + 0xff)\",\n\t\t\t\t);\n\t\t\t\tif (defaultValue) {\n\t\t\t\t\tinput.value = defaultValue;\n\t\t\t\t\tinput.valueSelection = [0, defaultValue.length];\n\t\t\t\t}\n\t\t\t\tdisposables.add(\n\t\t\t\t\tinput.onDidChangeValue((e) => {\n\t\t\t\t\t\tconst err = this.parseAddress(e, false);\n\t\t\t\t\t\tinput.validationMessage = err?.error;\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\tdisposables.add(\n\t\t\t\t\tinput.onDidAccept(() => {\n\t\t\t\t\t\tconst r = this.parseAddress(input.value, true);\n\t\t\t\t\t\tif (\"error\" in r) {\n\t\t\t\t\t\t\tinput.validationMessage = r.error;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresolve(r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinput.dispose();\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\tdisposables.add(\n\t\t\t\t\tinput.onDidHide(() => {\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t\tdisposables.dispose();\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\tinput.ignoreFocusOut = true;\n\t\t\t\tinput.show();\n\t\t\t},\n\t\t);\n\t}\n\n\tprivate parseAddress(\n\t\trange: string,\n\t\tisFinal: false,\n\t): { error: string } | undefined;\n\tprivate parseAddress(\n\t\trange: string,\n\t\tisFinal: true,\n\t): { error: string } | { address: string; bytes: number };\n\tprivate parseAddress(\n\t\trange: string,\n\t\tisFinal: boolean,\n\t): { error: string } | { address: string; bytes: number } | undefined {\n\t\tconst parts = /^(\\S+)\\s*(?:([+-])\\s*(\\S+))?/.exec(range);\n\t\tif (!parts) {\n\t\t\treturn {\n\t\t\t\terror: localize(\n\t\t\t\t\t\"dataBreakpointAddrFormat\",\n\t\t\t\t\t'Address should be a range of numbers the form \"[Start] - [End]\" or \"[Start] + [Bytes]\"',\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\tconst isNum = (e: string) =>\n\t\t\tisFinal\n\t\t\t\t? /^0x[0-9a-f]*|[0-9]*$/i.test(e)\n\t\t\t\t: /^0x[0-9a-f]+|[0-9]+$/i.test(e);\n\t\tconst [, startStr, sign = \"+\", endStr = \"1\"] = parts;\n\n\t\tfor (const n of [startStr, endStr]) {\n\t\t\tif (!isNum(n)) {\n\t\t\t\treturn {\n\t\t\t\t\terror: localize(\n\t\t\t\t\t\t\"dataBreakpointAddrStartEnd\",\n\t\t\t\t\t\t'Number must be a decimal integer or hex value starting with \"0x\", got {0}',\n\t\t\t\t\t\tn,\n\t\t\t\t\t),\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (!isFinal) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst start = BigInt(startStr);\n\t\tconst end = BigInt(endStr);\n\t\tconst address = `0x${start.toString(16)}`;\n\t\tif (sign === \"-\") {\n\t\t\treturn { address, bytes: Number(start - end) };\n\t\t}\n\n\t\treturn { address, bytes: Number(end) };\n\t}\n}\n\nregisterAction2(\n\tclass extends MemoryBreakpointAction {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.debug.viewlet.action.addDataBreakpointOnAddress\",\n\t\t\t\ttitle: {\n\t\t\t\t\t...localize2(\n\t\t\t\t\t\t\"addDataBreakpointOnAddress\",\n\t\t\t\t\t\t\"Add Data Breakpoint at Address\",\n\t\t\t\t\t),\n\t\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"miDataBreakpoint\",\n\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"&&Data Breakpoint...\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tf1: true,\n\t\t\t\ticon: icons.watchExpressionsAddDataBreakpoint,\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\torder: 11,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tCONTEXT_SET_DATA_BREAKPOINT_BYTES_SUPPORTED,\n\t\t\t\t\t\t\tContextKeyExpr.equals(\"view\", BREAKPOINTS_VIEW_ID),\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.MenubarNewBreakpointMenu,\n\t\t\t\t\t\tgroup: \"1_breakpoints\",\n\t\t\t\t\t\torder: 4,\n\t\t\t\t\t\twhen: CONTEXT_SET_DATA_BREAKPOINT_BYTES_SUPPORTED,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends MemoryBreakpointAction {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.debug.viewlet.action.editDataBreakpointOnAddress\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"editDataBreakpointOnAddress\",\n\t\t\t\t\t\"Edit Address...\",\n\t\t\t\t),\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.DebugBreakpointsContext,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tCONTEXT_SET_DATA_BREAKPOINT_BYTES_SUPPORTED,\n\t\t\t\t\t\t\tCONTEXT_BREAKPOINT_ITEM_IS_DATA_BYTES,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\torder: 15,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.debug.viewlet.action.toggleBreakpointsActivatedAction\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"activateBreakpoints\",\n\t\t\t\t\t\"Toggle Activate Breakpoints\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\ticon: icons.breakpointsActivate,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\torder: 20,\n\t\t\t\t\twhen: ContextKeyExpr.equals(\"view\", BREAKPOINTS_VIEW_ID),\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor): void {\n\t\t\tconst debugService = accessor.get(IDebugService);\n\t\t\tdebugService.setBreakpointsActivated(\n\t\t\t\t!debugService.getModel().areBreakpointsActivated(),\n\t\t\t);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.debug.viewlet.action.removeBreakpoint\",\n\t\t\t\ttitle: localize(\"removeBreakpoint\", \"Remove Breakpoint\"),\n\t\t\t\ticon: Codicon.removeClose,\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.DebugBreakpointsContext,\n\t\t\t\t\t\tgroup: \"3_modification\",\n\t\t\t\t\t\torder: 10,\n\t\t\t\t\t\twhen: CONTEXT_BREAKPOINT_ITEM_TYPE.notEqualsTo(\n\t\t\t\t\t\t\t\"exceptionBreakpoint\",\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.DebugBreakpointsContext,\n\t\t\t\t\t\tgroup: \"inline\",\n\t\t\t\t\t\torder: 20,\n\t\t\t\t\t\twhen: CONTEXT_BREAKPOINT_ITEM_TYPE.notEqualsTo(\n\t\t\t\t\t\t\t\"exceptionBreakpoint\",\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\tasync run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tbreakpoint: IBaseBreakpoint,\n\t\t): Promise<void> {\n\t\t\tconst debugService = accessor.get(IDebugService);\n\t\t\tif (breakpoint instanceof Breakpoint) {\n\t\t\t\tawait debugService.removeBreakpoints(breakpoint.getId());\n\t\t\t} else if (breakpoint instanceof FunctionBreakpoint) {\n\t\t\t\tawait debugService.removeFunctionBreakpoints(\n\t\t\t\t\tbreakpoint.getId(),\n\t\t\t\t);\n\t\t\t} else if (breakpoint instanceof DataBreakpoint) {\n\t\t\t\tawait debugService.removeDataBreakpoints(breakpoint.getId());\n\t\t\t} else if (breakpoint instanceof InstructionBreakpoint) {\n\t\t\t\tawait debugService.removeInstructionBreakpoints(\n\t\t\t\t\tbreakpoint.instructionReference,\n\t\t\t\t\tbreakpoint.offset,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.debug.viewlet.action.removeAllBreakpoints\",\n\t\t\t\ttitle: {\n\t\t\t\t\t...localize2(\n\t\t\t\t\t\t\"removeAllBreakpoints\",\n\t\t\t\t\t\t\"Remove All Breakpoints\",\n\t\t\t\t\t),\n\t\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"miRemoveAllBreakpoints\",\n\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"Remove &&All Breakpoints\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tf1: true,\n\t\t\t\ticon: icons.breakpointsRemoveAll,\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\torder: 30,\n\t\t\t\t\t\twhen: ContextKeyExpr.equals(\n\t\t\t\t\t\t\t\"view\",\n\t\t\t\t\t\t\tBREAKPOINTS_VIEW_ID,\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.DebugBreakpointsContext,\n\t\t\t\t\t\tgroup: \"3_modification\",\n\t\t\t\t\t\torder: 20,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tCONTEXT_BREAKPOINTS_EXIST,\n\t\t\t\t\t\t\tCONTEXT_BREAKPOINT_ITEM_TYPE.notEqualsTo(\n\t\t\t\t\t\t\t\t\"exceptionBreakpoint\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.MenubarDebugMenu,\n\t\t\t\t\t\tgroup: \"5_breakpoints\",\n\t\t\t\t\t\torder: 3,\n\t\t\t\t\t\twhen: CONTEXT_DEBUGGERS_AVAILABLE,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor): void {\n\t\t\tconst debugService = accessor.get(IDebugService);\n\t\t\tdebugService.removeBreakpoints();\n\t\t\tdebugService.removeFunctionBreakpoints();\n\t\t\tdebugService.removeDataBreakpoints();\n\t\t\tdebugService.removeInstructionBreakpoints();\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.debug.viewlet.action.enableAllBreakpoints\",\n\t\t\t\ttitle: {\n\t\t\t\t\t...localize2(\n\t\t\t\t\t\t\"enableAllBreakpoints\",\n\t\t\t\t\t\t\"Enable All Breakpoints\",\n\t\t\t\t\t),\n\t\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"miEnableAllBreakpoints\",\n\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"&&Enable All Breakpoints\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tf1: true,\n\t\t\t\tprecondition: CONTEXT_DEBUGGERS_AVAILABLE,\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.DebugBreakpointsContext,\n\t\t\t\t\t\tgroup: \"z_commands\",\n\t\t\t\t\t\torder: 10,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tCONTEXT_BREAKPOINTS_EXIST,\n\t\t\t\t\t\t\tCONTEXT_BREAKPOINT_ITEM_TYPE.notEqualsTo(\n\t\t\t\t\t\t\t\t\"exceptionBreakpoint\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.MenubarDebugMenu,\n\t\t\t\t\t\tgroup: \"5_breakpoints\",\n\t\t\t\t\t\torder: 1,\n\t\t\t\t\t\twhen: CONTEXT_DEBUGGERS_AVAILABLE,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst debugService = accessor.get(IDebugService);\n\t\t\tawait debugService.enableOrDisableBreakpoints(true);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.debug.viewlet.action.disableAllBreakpoints\",\n\t\t\t\ttitle: {\n\t\t\t\t\t...localize2(\n\t\t\t\t\t\t\"disableAllBreakpoints\",\n\t\t\t\t\t\t\"Disable All Breakpoints\",\n\t\t\t\t\t),\n\t\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"miDisableAllBreakpoints\",\n\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"Disable A&&ll Breakpoints\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tf1: true,\n\t\t\t\tprecondition: CONTEXT_DEBUGGERS_AVAILABLE,\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.DebugBreakpointsContext,\n\t\t\t\t\t\tgroup: \"z_commands\",\n\t\t\t\t\t\torder: 20,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tCONTEXT_BREAKPOINTS_EXIST,\n\t\t\t\t\t\t\tCONTEXT_BREAKPOINT_ITEM_TYPE.notEqualsTo(\n\t\t\t\t\t\t\t\t\"exceptionBreakpoint\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.MenubarDebugMenu,\n\t\t\t\t\t\tgroup: \"5_breakpoints\",\n\t\t\t\t\t\torder: 2,\n\t\t\t\t\t\twhen: CONTEXT_DEBUGGERS_AVAILABLE,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst debugService = accessor.get(IDebugService);\n\t\t\tawait debugService.enableOrDisableBreakpoints(false);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.debug.viewlet.action.reapplyBreakpointsAction\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"reapplyAllBreakpoints\",\n\t\t\t\t\t\"Reapply All Breakpoints\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tprecondition: CONTEXT_IN_DEBUG_MODE,\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.DebugBreakpointsContext,\n\t\t\t\t\t\tgroup: \"z_commands\",\n\t\t\t\t\t\torder: 30,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tCONTEXT_BREAKPOINTS_EXIST,\n\t\t\t\t\t\t\tCONTEXT_BREAKPOINT_ITEM_TYPE.notEqualsTo(\n\t\t\t\t\t\t\t\t\"exceptionBreakpoint\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst debugService = accessor.get(IDebugService);\n\t\t\tawait debugService.setBreakpointsActivated(true);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends ViewAction<BreakpointsView> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"debug.editBreakpoint\",\n\t\t\t\tviewId: BREAKPOINTS_VIEW_ID,\n\t\t\t\ttitle: localize(\"editCondition\", \"Edit Condition...\"),\n\t\t\t\ticon: Codicon.edit,\n\t\t\t\tprecondition: CONTEXT_BREAKPOINT_SUPPORTS_CONDITION,\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.DebugBreakpointsContext,\n\t\t\t\t\t\twhen: CONTEXT_BREAKPOINT_ITEM_TYPE.notEqualsTo(\n\t\t\t\t\t\t\t\"functionBreakpoint\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\torder: 10,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.DebugBreakpointsContext,\n\t\t\t\t\t\tgroup: \"inline\",\n\t\t\t\t\t\torder: 10,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\tasync runInView(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tview: BreakpointsView,\n\t\t\tbreakpoint:\n\t\t\t\t| ExceptionBreakpoint\n\t\t\t\t| Breakpoint\n\t\t\t\t| FunctionBreakpoint\n\t\t\t\t| DataBreakpoint,\n\t\t): Promise<void> {\n\t\t\tconst debugService = accessor.get(IDebugService);\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tif (breakpoint instanceof Breakpoint) {\n\t\t\t\tconst editor = await openBreakpointSource(\n\t\t\t\t\tbreakpoint,\n\t\t\t\t\tfalse,\n\t\t\t\t\tfalse,\n\t\t\t\t\ttrue,\n\t\t\t\t\tdebugService,\n\t\t\t\t\teditorService,\n\t\t\t\t);\n\t\t\t\tif (editor) {\n\t\t\t\t\tconst codeEditor = editor.getControl();\n\t\t\t\t\tif (isCodeEditor(codeEditor)) {\n\t\t\t\t\t\tcodeEditor\n\t\t\t\t\t\t\t.getContribution<IBreakpointEditorContribution>(\n\t\t\t\t\t\t\t\tBREAKPOINT_EDITOR_CONTRIBUTION_ID,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t?.showBreakpointWidget(\n\t\t\t\t\t\t\t\tbreakpoint.lineNumber,\n\t\t\t\t\t\t\t\tbreakpoint.column,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (breakpoint instanceof FunctionBreakpoint) {\n\t\t\t\tconst contextMenuService = accessor.get(IContextMenuService);\n\t\t\t\tconst actions: Action[] = [\n\t\t\t\t\tnew Action(\n\t\t\t\t\t\t\"breakpoint.editCondition\",\n\t\t\t\t\t\tlocalize(\"editCondition\", \"Edit Condition...\"),\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tasync () =>\n\t\t\t\t\t\t\tview.renderInputBox({\n\t\t\t\t\t\t\t\tbreakpoint,\n\t\t\t\t\t\t\t\ttype: \"condition\",\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\t\tnew Action(\n\t\t\t\t\t\t\"breakpoint.editCondition\",\n\t\t\t\t\t\tlocalize(\"editHitCount\", \"Edit Hit Count...\"),\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tasync () =>\n\t\t\t\t\t\t\tview.renderInputBox({\n\t\t\t\t\t\t\t\tbreakpoint,\n\t\t\t\t\t\t\t\ttype: \"hitCount\",\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\t];\n\t\t\t\tconst domNode = breakpointIdToActionBarDomeNode.get(\n\t\t\t\t\tbreakpoint.getId(),\n\t\t\t\t);\n\n\t\t\t\tif (domNode) {\n\t\t\t\t\tcontextMenuService.showContextMenu({\n\t\t\t\t\t\tgetActions: () => actions,\n\t\t\t\t\t\tgetAnchor: () => domNode,\n\t\t\t\t\t\tonHide: () => dispose(actions),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tview.renderInputBox({ breakpoint, type: \"condition\" });\n\t\t\t}\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends ViewAction<BreakpointsView> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"debug.editFunctionBreakpoint\",\n\t\t\t\tviewId: BREAKPOINTS_VIEW_ID,\n\t\t\t\ttitle: localize(\"editBreakpoint\", \"Edit Function Condition...\"),\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.DebugBreakpointsContext,\n\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\torder: 10,\n\t\t\t\t\t\twhen: CONTEXT_BREAKPOINT_ITEM_TYPE.isEqualTo(\n\t\t\t\t\t\t\t\"functionBreakpoint\",\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\trunInView(\n\t\t\t_accessor: ServicesAccessor,\n\t\t\tview: BreakpointsView,\n\t\t\tbreakpoint: IFunctionBreakpoint,\n\t\t) {\n\t\t\tview.renderInputBox({ breakpoint, type: \"name\" });\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends ViewAction<BreakpointsView> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"debug.editFunctionBreakpointHitCount\",\n\t\t\t\tviewId: BREAKPOINTS_VIEW_ID,\n\t\t\t\ttitle: localize(\"editHitCount\", \"Edit Hit Count...\"),\n\t\t\t\tprecondition: CONTEXT_BREAKPOINT_SUPPORTS_CONDITION,\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.DebugBreakpointsContext,\n\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\torder: 20,\n\t\t\t\t\t\twhen: ContextKeyExpr.or(\n\t\t\t\t\t\t\tCONTEXT_BREAKPOINT_ITEM_TYPE.isEqualTo(\n\t\t\t\t\t\t\t\t\"functionBreakpoint\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tCONTEXT_BREAKPOINT_ITEM_TYPE.isEqualTo(\n\t\t\t\t\t\t\t\t\"dataBreakpoint\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\trunInView(\n\t\t\t_accessor: ServicesAccessor,\n\t\t\tview: BreakpointsView,\n\t\t\tbreakpoint: IFunctionBreakpoint,\n\t\t) {\n\t\t\tview.renderInputBox({ breakpoint, type: \"hitCount\" });\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends ViewAction<BreakpointsView> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"debug.editBreakpointMode\",\n\t\t\t\tviewId: BREAKPOINTS_VIEW_ID,\n\t\t\t\ttitle: localize(\"editMode\", \"Edit Mode...\"),\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.DebugBreakpointsContext,\n\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\torder: 20,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tCONTEXT_BREAKPOINT_HAS_MODES,\n\t\t\t\t\t\t\tContextKeyExpr.or(\n\t\t\t\t\t\t\t\tCONTEXT_BREAKPOINT_ITEM_TYPE.isEqualTo(\n\t\t\t\t\t\t\t\t\t\"breakpoint\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tCONTEXT_BREAKPOINT_ITEM_TYPE.isEqualTo(\n\t\t\t\t\t\t\t\t\t\"exceptionBreakpoint\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tCONTEXT_BREAKPOINT_ITEM_TYPE.isEqualTo(\n\t\t\t\t\t\t\t\t\t\"instructionBreakpoint\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\tasync runInView(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tview: BreakpointsView,\n\t\t\tbreakpoint: IBreakpoint,\n\t\t) {\n\t\t\tconst kind =\n\t\t\t\tbreakpoint instanceof Breakpoint\n\t\t\t\t\t? \"source\"\n\t\t\t\t\t: breakpoint instanceof InstructionBreakpoint\n\t\t\t\t\t\t? \"instruction\"\n\t\t\t\t\t\t: \"exception\";\n\t\t\tconst debugService = accessor.get(IDebugService);\n\t\t\tconst modes = debugService.getModel().getBreakpointModes(kind);\n\t\t\tconst picked = await accessor.get(IQuickInputService).pick(\n\t\t\t\tmodes.map((mode) => ({\n\t\t\t\t\tlabel: mode.label,\n\t\t\t\t\tdescription: mode.description,\n\t\t\t\t\tmode: mode.mode,\n\t\t\t\t})),\n\t\t\t\t{\n\t\t\t\t\tplaceHolder: localize(\n\t\t\t\t\t\t\"selectBreakpointMode\",\n\t\t\t\t\t\t\"Select Breakpoint Mode\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tif (!picked) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (kind === \"source\") {\n\t\t\t\tconst data = new Map<string, IBreakpointUpdateData>();\n\t\t\t\tdata.set(breakpoint.getId(), {\n\t\t\t\t\tmode: picked.mode,\n\t\t\t\t\tmodeLabel: picked.label,\n\t\t\t\t});\n\t\t\t\tdebugService.updateBreakpoints(\n\t\t\t\t\tbreakpoint.originalUri,\n\t\t\t\t\tdata,\n\t\t\t\t\tfalse,\n\t\t\t\t);\n\t\t\t} else if (breakpoint instanceof InstructionBreakpoint) {\n\t\t\t\tdebugService.removeInstructionBreakpoints(\n\t\t\t\t\tbreakpoint.instructionReference,\n\t\t\t\t\tbreakpoint.offset,\n\t\t\t\t);\n\t\t\t\tdebugService.addInstructionBreakpoint({\n\t\t\t\t\t...breakpoint.toJSON(),\n\t\t\t\t\tmode: picked.mode,\n\t\t\t\t\tmodeLabel: picked.label,\n\t\t\t\t});\n\t\t\t} else if (breakpoint instanceof ExceptionBreakpoint) {\n\t\t\t\tbreakpoint.mode = picked.mode;\n\t\t\t\tbreakpoint.modeLabel = picked.label;\n\t\t\t\tdebugService.setExceptionBreakpointCondition(\n\t\t\t\t\tbreakpoint,\n\t\t\t\t\tbreakpoint.condition,\n\t\t\t\t); // no-op to trigger a re-send\n\t\t\t}\n\t\t}\n\t},\n);\n"],
  "mappings": "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",
  "names": []
}
