{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/breakpointsView.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { IKeyboardEvent } from '../../../../base/browser/keyboardEvent.js';\nimport { Gesture } from '../../../../base/browser/touch.js';\nimport { ActionBar } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { AriaRole } from '../../../../base/browser/ui/aria/aria.js';\nimport { getDefaultHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegateFactory.js';\nimport { IconLabel } from '../../../../base/browser/ui/iconLabel/iconLabel.js';\nimport { InputBox } from '../../../../base/browser/ui/inputbox/inputBox.js';\nimport { IListContextMenuEvent, IListRenderer, IListVirtualDelegate } from '../../../../base/browser/ui/list/list.js';\nimport { IListAccessibilityProvider } from '../../../../base/browser/ui/list/listWidget.js';\nimport { Orientation } from '../../../../base/browser/ui/splitview/splitview.js';\nimport { Action, IAction } from '../../../../base/common/actions.js';\nimport { equals } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { KeyCode } from '../../../../base/common/keyCodes.js';\nimport { DisposableStore, dispose } from '../../../../base/common/lifecycle.js';\nimport * as resources from '../../../../base/common/resources.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { Constants } from '../../../../base/common/uint.js';\nimport { isCodeEditor } from '../../../../editor/browser/editorBrowser.js';\nimport { ServicesAccessor } from '../../../../editor/browser/editorExtensions.js';\nimport { ILanguageService } from '../../../../editor/common/languages/language.js';\nimport { localize, localize2 } from '../../../../nls.js';\nimport { createAndFillInActionBarActions, createAndFillInContextMenuActions } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { Action2, IMenu, IMenuService, MenuId, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr, IContextKey, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService, IContextViewService } from '../../../../platform/contextview/browser/contextView.js';\nimport { TextEditorSelectionRevealType } from '../../../../platform/editor/common/editor.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { WorkbenchList } from '../../../../platform/list/browser/listService.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { defaultInputBoxStyles } from '../../../../platform/theme/browser/defaultStyles.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { ViewAction, ViewPane } from '../../../browser/parts/views/viewPane.js';\nimport { IViewletViewOptions } from '../../../browser/parts/views/viewsViewlet.js';\nimport { IEditorPane } from '../../../common/editor.js';\nimport { IViewDescriptorService } from '../../../common/views.js';\nimport { ACTIVE_GROUP, IEditorService, SIDE_GROUP } from '../../../services/editor/common/editorService.js';\nimport { IViewsService } from '../../../services/views/common/viewsService.js';\nimport { BREAKPOINTS_VIEW_ID, BREAKPOINT_EDITOR_CONTRIBUTION_ID, CONTEXT_BREAKPOINTS_EXIST, CONTEXT_BREAKPOINTS_FOCUSED, CONTEXT_BREAKPOINT_HAS_MODES, CONTEXT_BREAKPOINT_INPUT_FOCUSED, CONTEXT_BREAKPOINT_ITEM_IS_DATA_BYTES, CONTEXT_BREAKPOINT_ITEM_TYPE, CONTEXT_BREAKPOINT_SUPPORTS_CONDITION, CONTEXT_DEBUGGERS_AVAILABLE, CONTEXT_IN_DEBUG_MODE, CONTEXT_SET_DATA_BREAKPOINT_BYTES_SUPPORTED, DEBUG_SCHEME, DataBreakpointSetType, DataBreakpointSource, DebuggerString, IBaseBreakpoint, IBreakpoint, IBreakpointEditorContribution, IBreakpointUpdateData, IDataBreakpoint, IDataBreakpointInfoResponse, IDebugModel, IDebugService, IEnablement, IExceptionBreakpoint, IFunctionBreakpoint, IInstructionBreakpoint, State } from '../common/debug.js';\nimport { Breakpoint, DataBreakpoint, ExceptionBreakpoint, FunctionBreakpoint, InstructionBreakpoint } from '../common/debugModel.js';\nimport { DisassemblyViewInput } from '../common/disassemblyViewInput.js';\nimport * as icons from './debugIcons.js';\nimport { DisassemblyView } from './disassemblyView.js';\n\nconst $ = dom.$;\n\nfunction createCheckbox(disposables: DisposableStore): HTMLInputElement {\n\tconst checkbox = <HTMLInputElement>$('input');\n\tcheckbox.type = 'checkbox';\n\tcheckbox.tabIndex = -1;\n\tdisposables.add(Gesture.ignoreTarget(checkbox));\n\n\treturn checkbox;\n}\n\nconst MAX_VISIBLE_BREAKPOINTS = 9;\nexport function getExpandedBodySize(model: IDebugModel, sessionId: string | undefined, countLimit: number): number {\n\tconst length = model.getBreakpoints().length + model.getExceptionBreakpointsForSession(sessionId).length + model.getFunctionBreakpoints().length + model.getDataBreakpoints().length + model.getInstructionBreakpoints().length;\n\treturn Math.min(countLimit, length) * 22;\n}\ntype BreakpointItem = IBreakpoint | IFunctionBreakpoint | IDataBreakpoint | IExceptionBreakpoint | IInstructionBreakpoint;\n\ninterface InputBoxData {\n\tbreakpoint: IFunctionBreakpoint | IExceptionBreakpoint | IDataBreakpoint;\n\ttype: 'condition' | 'hitCount' | 'name';\n}\n\nexport class BreakpointsView extends ViewPane {\n\n\tprivate list!: WorkbenchList<BreakpointItem>;\n\tprivate needsRefresh = false;\n\tprivate needsStateChange = false;\n\tprivate ignoreLayout = false;\n\tprivate menu: IMenu;\n\tprivate breakpointItemType: IContextKey<string | undefined>;\n\tprivate breakpointIsDataBytes: IContextKey<boolean | undefined>;\n\tprivate breakpointHasMultipleModes: IContextKey<boolean>;\n\tprivate breakpointSupportsCondition: IContextKey<boolean>;\n\tprivate _inputBoxData: InputBoxData | undefined;\n\tbreakpointInputFocused: IContextKey<boolean>;\n\tprivate autoFocusedIndex = -1;\n\n\tprivate hintContainer: IconLabel | undefined;\n\tprivate hintDelayer: RunOnceScheduler;\n\n\tconstructor(\n\t\toptions: IViewletViewOptions,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService, hoverService);\n\n\t\tthis.menu = menuService.createMenu(MenuId.DebugBreakpointsContext, contextKeyService);\n\t\tthis._register(this.menu);\n\t\tthis.breakpointItemType = CONTEXT_BREAKPOINT_ITEM_TYPE.bindTo(contextKeyService);\n\t\tthis.breakpointIsDataBytes = CONTEXT_BREAKPOINT_ITEM_IS_DATA_BYTES.bindTo(contextKeyService);\n\t\tthis.breakpointHasMultipleModes = CONTEXT_BREAKPOINT_HAS_MODES.bindTo(contextKeyService);\n\t\tthis.breakpointSupportsCondition = CONTEXT_BREAKPOINT_SUPPORTS_CONDITION.bindTo(contextKeyService);\n\t\tthis.breakpointInputFocused = CONTEXT_BREAKPOINT_INPUT_FOCUSED.bindTo(contextKeyService);\n\t\tthis._register(this.debugService.getModel().onDidChangeBreakpoints(() => this.onBreakpointsChange()));\n\t\tthis._register(this.debugService.getViewModel().onDidFocusSession(() => this.onBreakpointsChange()));\n\t\tthis._register(this.debugService.onDidChangeState(() => this.onStateChange()));\n\t\tthis.hintDelayer = this._register(new RunOnceScheduler(() => this.updateBreakpointsHint(true), 4000));\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tthis.element.classList.add('debug-pane');\n\t\tcontainer.classList.add('debug-breakpoints');\n\t\tconst delegate = new BreakpointsDelegate(this);\n\n\t\tthis.list = this.instantiationService.createInstance(WorkbenchList, 'Breakpoints', container, delegate, [\n\t\t\tthis.instantiationService.createInstance(BreakpointsRenderer, this.menu, this.breakpointHasMultipleModes, this.breakpointSupportsCondition, this.breakpointItemType),\n\t\t\tnew ExceptionBreakpointsRenderer(this.menu, this.breakpointHasMultipleModes, this.breakpointSupportsCondition, this.breakpointItemType, this.debugService, this.hoverService),\n\t\t\tnew ExceptionBreakpointInputRenderer(this, this.debugService, this.contextViewService),\n\t\t\tthis.instantiationService.createInstance(FunctionBreakpointsRenderer, this.menu, this.breakpointSupportsCondition, this.breakpointItemType),\n\t\t\tnew FunctionBreakpointInputRenderer(this, this.debugService, this.contextViewService, this.hoverService, this.labelService),\n\t\t\tthis.instantiationService.createInstance(DataBreakpointsRenderer, this.menu, this.breakpointHasMultipleModes, this.breakpointSupportsCondition, this.breakpointItemType, this.breakpointIsDataBytes),\n\t\t\tnew DataBreakpointInputRenderer(this, this.debugService, this.contextViewService, this.hoverService, this.labelService),\n\t\t\tthis.instantiationService.createInstance(InstructionBreakpointsRenderer),\n\t\t], {\n\t\t\tidentityProvider: { getId: (element: IEnablement) => element.getId() },\n\t\t\tmultipleSelectionSupport: false,\n\t\t\tkeyboardNavigationLabelProvider: { getKeyboardNavigationLabel: (e: IEnablement) => e },\n\t\t\taccessibilityProvider: new BreakpointsAccessibilityProvider(this.debugService, this.labelService),\n\t\t\toverrideStyles: this.getLocationBasedColors().listOverrideStyles\n\t\t}) as WorkbenchList<BreakpointItem>;\n\n\t\tCONTEXT_BREAKPOINTS_FOCUSED.bindTo(this.list.contextKeyService);\n\n\t\tthis._register(this.list.onContextMenu(this.onListContextMenu, this));\n\n\t\tthis.list.onMouseMiddleClick(async ({ element }) => {\n\t\t\tif (element instanceof Breakpoint) {\n\t\t\t\tawait this.debugService.removeBreakpoints(element.getId());\n\t\t\t} else if (element instanceof FunctionBreakpoint) {\n\t\t\t\tawait this.debugService.removeFunctionBreakpoints(element.getId());\n\t\t\t} else if (element instanceof DataBreakpoint) {\n\t\t\t\tawait this.debugService.removeDataBreakpoints(element.getId());\n\t\t\t} else if (element instanceof InstructionBreakpoint) {\n\t\t\t\tawait this.debugService.removeInstructionBreakpoints(element.instructionReference, element.offset);\n\t\t\t}\n\t\t});\n\n\t\tthis._register(this.list.onDidOpen(async e => {\n\t\t\tif (!e.element) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (dom.isMouseEvent(e.browserEvent) && e.browserEvent.button === 1) { // middle click\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (e.element instanceof Breakpoint) {\n\t\t\t\topenBreakpointSource(e.element, e.sideBySide, e.editorOptions.preserveFocus || false, e.editorOptions.pinned || !e.editorOptions.preserveFocus, this.debugService, this.editorService);\n\t\t\t}\n\t\t\tif (e.element instanceof InstructionBreakpoint) {\n\t\t\t\tconst disassemblyView = await this.editorService.openEditor(DisassemblyViewInput.instance);\n\t\t\t\t// Focus on double click\n\t\t\t\t(disassemblyView as DisassemblyView).goToInstructionAndOffset(e.element.instructionReference, e.element.offset, dom.isMouseEvent(e.browserEvent) && e.browserEvent.detail === 2);\n\t\t\t}\n\t\t\tif (dom.isMouseEvent(e.browserEvent) && e.browserEvent.detail === 2 && e.element instanceof FunctionBreakpoint && e.element !== this.inputBoxData?.breakpoint) {\n\t\t\t\t// double click\n\t\t\t\tthis.renderInputBox({ breakpoint: e.element, type: 'name' });\n\t\t\t}\n\t\t}));\n\n\t\tthis.list.splice(0, this.list.length, this.elements);\n\n\t\tthis._register(this.onDidChangeBodyVisibility(visible => {\n\t\t\tif (visible) {\n\t\t\t\tif (this.needsRefresh) {\n\t\t\t\t\tthis.onBreakpointsChange();\n\t\t\t\t}\n\n\t\t\t\tif (this.needsStateChange) {\n\t\t\t\t\tthis.onStateChange();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tconst containerModel = this.viewDescriptorService.getViewContainerModel(this.viewDescriptorService.getViewContainerByViewId(this.id)!)!;\n\t\tthis._register(containerModel.onDidChangeAllViewDescriptors(() => {\n\t\t\tthis.updateSize();\n\t\t}));\n\t}\n\n\tprotected override renderHeaderTitle(container: HTMLElement, title: string): void {\n\t\tsuper.renderHeaderTitle(container, title);\n\n\t\tconst iconLabelContainer = dom.append(container, $('span.breakpoint-warning'));\n\t\tthis.hintContainer = this._register(new IconLabel(iconLabelContainer, {\n\t\t\tsupportIcons: true, hoverDelegate: {\n\t\t\t\tshowHover: (options, focus?) => this.hoverService.showHover({ content: options.content, target: this.hintContainer!.element }, focus),\n\t\t\t\tdelay: <number>this.configurationService.getValue('workbench.hover.delay')\n\t\t\t}\n\t\t}));\n\t\tdom.hide(this.hintContainer.element);\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\t\tthis.list?.domFocus();\n\t}\n\n\trenderInputBox(data: InputBoxData | undefined): void {\n\t\tthis._inputBoxData = data;\n\t\tthis.onBreakpointsChange();\n\t\tthis._inputBoxData = undefined;\n\t}\n\n\tget inputBoxData(): InputBoxData | undefined {\n\t\treturn this._inputBoxData;\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tif (this.ignoreLayout) {\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.layoutBody(height, width);\n\t\tthis.list?.layout(height, width);\n\t\ttry {\n\t\t\tthis.ignoreLayout = true;\n\t\t\tthis.updateSize();\n\t\t} finally {\n\t\t\tthis.ignoreLayout = false;\n\t\t}\n\t}\n\n\tprivate onListContextMenu(e: IListContextMenuEvent<IEnablement>): void {\n\t\tconst element = e.element;\n\t\tconst type = element instanceof Breakpoint ? 'breakpoint' : element instanceof ExceptionBreakpoint ? 'exceptionBreakpoint' :\n\t\t\telement instanceof FunctionBreakpoint ? 'functionBreakpoint' : element instanceof DataBreakpoint ? 'dataBreakpoint' :\n\t\t\t\telement instanceof InstructionBreakpoint ? 'instructionBreakpoint' : undefined;\n\t\tthis.breakpointItemType.set(type);\n\t\tconst session = this.debugService.getViewModel().focusedSession;\n\t\tconst conditionSupported = element instanceof ExceptionBreakpoint ? element.supportsCondition : (!session || !!session.capabilities.supportsConditionalBreakpoints);\n\t\tthis.breakpointSupportsCondition.set(conditionSupported);\n\t\tthis.breakpointIsDataBytes.set(element instanceof DataBreakpoint && element.src.type === DataBreakpointSetType.Address);\n\n\t\tconst secondary: IAction[] = [];\n\t\tcreateAndFillInContextMenuActions(this.menu, { arg: e.element, shouldForwardArgs: false }, { primary: [], secondary }, 'inline');\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => e.anchor,\n\t\t\tgetActions: () => secondary,\n\t\t\tgetActionsContext: () => element\n\t\t});\n\t}\n\n\tprivate updateSize(): void {\n\t\tconst containerModel = this.viewDescriptorService.getViewContainerModel(this.viewDescriptorService.getViewContainerByViewId(this.id)!)!;\n\n\t\t// Adjust expanded body size\n\t\tconst sessionId = this.debugService.getViewModel().focusedSession?.getId();\n\t\tthis.minimumBodySize = this.orientation === Orientation.VERTICAL ? getExpandedBodySize(this.debugService.getModel(), sessionId, MAX_VISIBLE_BREAKPOINTS) : 170;\n\t\tthis.maximumBodySize = this.orientation === Orientation.VERTICAL && containerModel.visibleViewDescriptors.length > 1 ? getExpandedBodySize(this.debugService.getModel(), sessionId, Number.POSITIVE_INFINITY) : Number.POSITIVE_INFINITY;\n\t}\n\n\tprivate updateBreakpointsHint(delayed = false): void {\n\t\tif (!this.hintContainer) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentType = this.debugService.getViewModel().focusedSession?.configuration.type;\n\t\tconst dbg = currentType ? this.debugService.getAdapterManager().getDebugger(currentType) : undefined;\n\t\tconst message = dbg?.strings?.[DebuggerString.UnverifiedBreakpoints];\n\t\tconst debuggerHasUnverifiedBps = message && this.debugService.getModel().getBreakpoints().filter(bp => {\n\t\t\tif (bp.verified || !bp.enabled) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst langId = this.languageService.guessLanguageIdByFilepathOrFirstLine(bp.uri);\n\t\t\treturn langId && dbg.interestedInLanguage(langId);\n\t\t});\n\n\t\tif (message && debuggerHasUnverifiedBps?.length && this.debugService.getModel().areBreakpointsActivated()) {\n\t\t\tif (delayed) {\n\t\t\t\tconst mdown = new MarkdownString(undefined, { isTrusted: true }).appendMarkdown(message);\n\t\t\t\tthis.hintContainer.setLabel('$(warning)', undefined, { title: { markdown: mdown, markdownNotSupportedFallback: message } });\n\t\t\t\tdom.show(this.hintContainer.element);\n\t\t\t} else {\n\t\t\t\tthis.hintDelayer.schedule();\n\t\t\t}\n\t\t} else {\n\t\t\tdom.hide(this.hintContainer.element);\n\t\t}\n\t}\n\n\tprivate onBreakpointsChange(): void {\n\t\tif (this.isBodyVisible()) {\n\t\t\tthis.updateSize();\n\t\t\tif (this.list) {\n\t\t\t\tconst lastFocusIndex = this.list.getFocus()[0];\n\t\t\t\t// Check whether focused element was removed\n\t\t\t\tconst needsRefocus = lastFocusIndex && !this.elements.includes(this.list.element(lastFocusIndex));\n\t\t\t\tthis.list.splice(0, this.list.length, this.elements);\n\t\t\t\tthis.needsRefresh = false;\n\t\t\t\tif (needsRefocus) {\n\t\t\t\t\tthis.list.focusNth(Math.min(lastFocusIndex, this.list.length - 1));\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.updateBreakpointsHint();\n\t\t} else {\n\t\t\tthis.needsRefresh = true;\n\t\t}\n\t}\n\n\tprivate onStateChange(): void {\n\t\tif (this.isBodyVisible()) {\n\t\t\tthis.needsStateChange = false;\n\t\t\tconst thread = this.debugService.getViewModel().focusedThread;\n\t\t\tlet found = false;\n\t\t\tif (thread && thread.stoppedDetails && thread.stoppedDetails.hitBreakpointIds && thread.stoppedDetails.hitBreakpointIds.length > 0) {\n\t\t\t\tconst hitBreakpointIds = thread.stoppedDetails.hitBreakpointIds;\n\t\t\t\tconst elements = this.elements;\n\t\t\t\tconst index = elements.findIndex(e => {\n\t\t\t\t\tconst id = e.getIdFromAdapter(thread.session.getId());\n\t\t\t\t\treturn typeof id === 'number' && hitBreakpointIds.indexOf(id) !== -1;\n\t\t\t\t});\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\tthis.list.setFocus([index]);\n\t\t\t\t\tthis.list.setSelection([index]);\n\t\t\t\t\tfound = true;\n\t\t\t\t\tthis.autoFocusedIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!found) {\n\t\t\t\t// Deselect breakpoint in breakpoint view when no longer stopped on it #125528\n\t\t\t\tconst focus = this.list.getFocus();\n\t\t\t\tconst selection = this.list.getSelection();\n\t\t\t\tif (this.autoFocusedIndex >= 0 && equals(focus, selection) && focus.indexOf(this.autoFocusedIndex) >= 0) {\n\t\t\t\t\tthis.list.setFocus([]);\n\t\t\t\t\tthis.list.setSelection([]);\n\t\t\t\t}\n\t\t\t\tthis.autoFocusedIndex = -1;\n\t\t\t}\n\t\t\tthis.updateBreakpointsHint();\n\t\t} else {\n\t\t\tthis.needsStateChange = true;\n\t\t}\n\t}\n\n\tprivate get elements(): BreakpointItem[] {\n\t\tconst model = this.debugService.getModel();\n\t\tconst sessionId = this.debugService.getViewModel().focusedSession?.getId();\n\t\tconst elements = (<ReadonlyArray<IEnablement>>model.getExceptionBreakpointsForSession(sessionId)).concat(model.getFunctionBreakpoints()).concat(model.getDataBreakpoints()).concat(model.getBreakpoints()).concat(model.getInstructionBreakpoints());\n\n\t\treturn elements as BreakpointItem[];\n\t}\n}\n\nclass BreakpointsDelegate implements IListVirtualDelegate<BreakpointItem> {\n\n\tconstructor(private view: BreakpointsView) {\n\t\t// noop\n\t}\n\n\tgetHeight(_element: BreakpointItem): number {\n\t\treturn 22;\n\t}\n\n\tgetTemplateId(element: BreakpointItem): string {\n\t\tif (element instanceof Breakpoint) {\n\t\t\treturn BreakpointsRenderer.ID;\n\t\t}\n\t\tif (element instanceof FunctionBreakpoint) {\n\t\t\tconst inputBoxBreakpoint = this.view.inputBoxData?.breakpoint;\n\t\t\tif (!element.name || (inputBoxBreakpoint && inputBoxBreakpoint.getId() === element.getId())) {\n\t\t\t\treturn FunctionBreakpointInputRenderer.ID;\n\t\t\t}\n\n\t\t\treturn FunctionBreakpointsRenderer.ID;\n\t\t}\n\t\tif (element instanceof ExceptionBreakpoint) {\n\t\t\tconst inputBoxBreakpoint = this.view.inputBoxData?.breakpoint;\n\t\t\tif (inputBoxBreakpoint && inputBoxBreakpoint.getId() === element.getId()) {\n\t\t\t\treturn ExceptionBreakpointInputRenderer.ID;\n\t\t\t}\n\t\t\treturn ExceptionBreakpointsRenderer.ID;\n\t\t}\n\t\tif (element instanceof DataBreakpoint) {\n\t\t\tconst inputBoxBreakpoint = this.view.inputBoxData?.breakpoint;\n\t\t\tif (inputBoxBreakpoint && inputBoxBreakpoint.getId() === element.getId()) {\n\t\t\t\treturn DataBreakpointInputRenderer.ID;\n\t\t\t}\n\n\t\t\treturn DataBreakpointsRenderer.ID;\n\t\t}\n\t\tif (element instanceof InstructionBreakpoint) {\n\t\t\treturn InstructionBreakpointsRenderer.ID;\n\t\t}\n\n\t\treturn '';\n\t}\n}\n\ninterface IBaseBreakpointTemplateData {\n\tbreakpoint: HTMLElement;\n\tname: HTMLElement;\n\tcheckbox: HTMLInputElement;\n\tcontext: BreakpointItem;\n\tactionBar: ActionBar;\n\ttemplateDisposables: DisposableStore;\n\telementDisposables: DisposableStore;\n\tbadge: HTMLElement;\n}\n\ninterface IBaseBreakpointWithIconTemplateData extends IBaseBreakpointTemplateData {\n\ticon: HTMLElement;\n}\n\ninterface IBreakpointTemplateData extends IBaseBreakpointWithIconTemplateData {\n\tfilePath: HTMLElement;\n}\n\ninterface IExceptionBreakpointTemplateData extends IBaseBreakpointTemplateData {\n\tcondition: HTMLElement;\n}\n\ninterface IFunctionBreakpointTemplateData extends IBaseBreakpointWithIconTemplateData {\n\tcondition: HTMLElement;\n}\n\ninterface IDataBreakpointTemplateData extends IBaseBreakpointWithIconTemplateData {\n\taccessType: HTMLElement;\n\tcondition: HTMLElement;\n}\n\ninterface IInstructionBreakpointTemplateData extends IBaseBreakpointWithIconTemplateData {\n\taddress: HTMLElement;\n}\n\ninterface IFunctionBreakpointInputTemplateData {\n\tinputBox: InputBox;\n\tcheckbox: HTMLInputElement;\n\ticon: HTMLElement;\n\tbreakpoint: IFunctionBreakpoint;\n\ttemplateDisposables: DisposableStore;\n\telementDisposables: DisposableStore;\n\ttype: 'hitCount' | 'condition' | 'name';\n\tupdating?: boolean;\n}\n\ninterface IDataBreakpointInputTemplateData {\n\tinputBox: InputBox;\n\tcheckbox: HTMLInputElement;\n\ticon: HTMLElement;\n\tbreakpoint: IDataBreakpoint;\n\telementDisposables: DisposableStore;\n\ttemplateDisposables: DisposableStore;\n\ttype: 'hitCount' | 'condition' | 'name';\n\tupdating?: boolean;\n}\n\ninterface IExceptionBreakpointInputTemplateData {\n\tinputBox: InputBox;\n\tcheckbox: HTMLInputElement;\n\tbreakpoint: IExceptionBreakpoint;\n\ttemplateDisposables: DisposableStore;\n\telementDisposables: DisposableStore;\n}\n\nconst breakpointIdToActionBarDomeNode = new Map<string, HTMLElement>();\nclass BreakpointsRenderer implements IListRenderer<IBreakpoint, IBreakpointTemplateData> {\n\n\tconstructor(\n\t\tprivate menu: IMenu,\n\t\tprivate breakpointHasMultipleModes: IContextKey<boolean>,\n\t\tprivate breakpointSupportsCondition: IContextKey<boolean>,\n\t\tprivate breakpointItemType: IContextKey<string | undefined>,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t\t@ILabelService private readonly labelService: ILabelService\n\t) {\n\t\t// noop\n\t}\n\n\tstatic readonly ID = 'breakpoints';\n\n\tget templateId() {\n\t\treturn BreakpointsRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IBreakpointTemplateData {\n\t\tconst data: IBreakpointTemplateData = Object.create(null);\n\t\tdata.elementDisposables = new DisposableStore();\n\t\tdata.templateDisposables = new DisposableStore();\n\t\tdata.templateDisposables.add(data.elementDisposables);\n\n\t\tdata.breakpoint = dom.append(container, $('.breakpoint'));\n\n\t\tdata.icon = $('.icon');\n\t\tdata.checkbox = createCheckbox(data.templateDisposables);\n\n\t\tdata.templateDisposables.add(dom.addStandardDisposableListener(data.checkbox, 'change', (e) => {\n\t\t\tthis.debugService.enableOrDisableBreakpoints(!data.context.enabled, data.context);\n\t\t}));\n\n\t\tdom.append(data.breakpoint, data.icon);\n\t\tdom.append(data.breakpoint, data.checkbox);\n\n\t\tdata.name = dom.append(data.breakpoint, $('span.name'));\n\n\t\tdata.filePath = dom.append(data.breakpoint, $('span.file-path'));\n\t\tdata.actionBar = new ActionBar(data.breakpoint);\n\t\tdata.templateDisposables.add(data.actionBar);\n\t\tconst badgeContainer = dom.append(data.breakpoint, $('.badge-container'));\n\t\tdata.badge = dom.append(badgeContainer, $('span.line-number.monaco-count-badge'));\n\n\t\treturn data;\n\t}\n\n\trenderElement(breakpoint: IBreakpoint, index: number, data: IBreakpointTemplateData): void {\n\t\tdata.context = breakpoint;\n\t\tdata.breakpoint.classList.toggle('disabled', !this.debugService.getModel().areBreakpointsActivated());\n\n\t\tdata.name.textContent = resources.basenameOrAuthority(breakpoint.uri);\n\t\tlet badgeContent = breakpoint.lineNumber.toString();\n\t\tif (breakpoint.column) {\n\t\t\tbadgeContent += `:${breakpoint.column}`;\n\t\t}\n\t\tif (breakpoint.modeLabel) {\n\t\t\tbadgeContent = `${breakpoint.modeLabel}: ${badgeContent}`;\n\t\t}\n\t\tdata.badge.textContent = badgeContent;\n\t\tdata.filePath.textContent = this.labelService.getUriLabel(resources.dirname(breakpoint.uri), { relative: true });\n\t\tdata.checkbox.checked = breakpoint.enabled;\n\n\t\tconst { message, icon } = getBreakpointMessageAndIcon(this.debugService.state, this.debugService.getModel().areBreakpointsActivated(), breakpoint, this.labelService, this.debugService.getModel());\n\t\tdata.icon.className = ThemeIcon.asClassName(icon);\n\t\tdata.elementDisposables.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), data.breakpoint, breakpoint.message || message || ''));\n\n\t\tconst debugActive = this.debugService.state === State.Running || this.debugService.state === State.Stopped;\n\t\tif (debugActive && !breakpoint.verified) {\n\t\t\tdata.breakpoint.classList.add('disabled');\n\t\t}\n\n\t\tconst primary: IAction[] = [];\n\t\tconst session = this.debugService.getViewModel().focusedSession;\n\t\tthis.breakpointSupportsCondition.set(!session || !!session.capabilities.supportsConditionalBreakpoints);\n\t\tthis.breakpointItemType.set('breakpoint');\n\t\tthis.breakpointHasMultipleModes.set(this.debugService.getModel().getBreakpointModes('source').length > 1);\n\t\tcreateAndFillInActionBarActions(this.menu, { arg: breakpoint, shouldForwardArgs: true }, { primary, secondary: [] }, 'inline');\n\t\tdata.actionBar.clear();\n\t\tdata.actionBar.push(primary, { icon: true, label: false });\n\t\tbreakpointIdToActionBarDomeNode.set(breakpoint.getId(), data.actionBar.domNode);\n\t}\n\n\n\n\tdisposeElement(a: any, index: number, template: IBreakpointTemplateData): void {\n\t\ttemplate.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: IBreakpointTemplateData): void {\n\t\ttemplateData.templateDisposables.dispose();\n\t}\n}\n\nclass ExceptionBreakpointsRenderer implements IListRenderer<IExceptionBreakpoint, IExceptionBreakpointTemplateData> {\n\n\tconstructor(\n\t\tprivate menu: IMenu,\n\t\tprivate breakpointHasMultipleModes: IContextKey<boolean>,\n\t\tprivate breakpointSupportsCondition: IContextKey<boolean>,\n\t\tprivate breakpointItemType: IContextKey<string | undefined>,\n\t\tprivate debugService: IDebugService,\n\t\tprivate readonly hoverService: IHoverService,\n\t) {\n\t\t// noop\n\t}\n\n\tstatic readonly ID = 'exceptionbreakpoints';\n\n\tget templateId() {\n\t\treturn ExceptionBreakpointsRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IExceptionBreakpointTemplateData {\n\t\tconst data: IExceptionBreakpointTemplateData = Object.create(null);\n\t\tdata.elementDisposables = new DisposableStore();\n\t\tdata.templateDisposables = new DisposableStore();\n\t\tdata.templateDisposables.add(data.elementDisposables);\n\t\tdata.breakpoint = dom.append(container, $('.breakpoint'));\n\n\t\tdata.checkbox = createCheckbox(data.templateDisposables);\n\t\tdata.templateDisposables.add(dom.addStandardDisposableListener(data.checkbox, 'change', (e) => {\n\t\t\tthis.debugService.enableOrDisableBreakpoints(!data.context.enabled, data.context);\n\t\t}));\n\n\t\tdom.append(data.breakpoint, data.checkbox);\n\n\t\tdata.name = dom.append(data.breakpoint, $('span.name'));\n\t\tdata.condition = dom.append(data.breakpoint, $('span.condition'));\n\t\tdata.breakpoint.classList.add('exception');\n\n\t\tdata.actionBar = new ActionBar(data.breakpoint);\n\t\tdata.templateDisposables.add(data.actionBar);\n\t\tconst badgeContainer = dom.append(data.breakpoint, $('.badge-container'));\n\t\tdata.badge = dom.append(badgeContainer, $('span.line-number.monaco-count-badge'));\n\n\t\treturn data;\n\t}\n\n\trenderElement(exceptionBreakpoint: IExceptionBreakpoint, index: number, data: IExceptionBreakpointTemplateData): void {\n\t\tdata.context = exceptionBreakpoint;\n\t\tdata.name.textContent = exceptionBreakpoint.label || `${exceptionBreakpoint.filter} exceptions`;\n\t\tconst exceptionBreakpointtitle = exceptionBreakpoint.verified ? (exceptionBreakpoint.description || data.name.textContent) : exceptionBreakpoint.message || localize('unverifiedExceptionBreakpoint', \"Unverified Exception Breakpoint\");\n\t\tdata.elementDisposables.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), data.breakpoint, exceptionBreakpointtitle));\n\t\tdata.breakpoint.classList.toggle('disabled', !exceptionBreakpoint.verified);\n\t\tdata.checkbox.checked = exceptionBreakpoint.enabled;\n\t\tdata.condition.textContent = exceptionBreakpoint.condition || '';\n\t\tdata.elementDisposables.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), data.condition, localize('expressionCondition', \"Expression condition: {0}\", exceptionBreakpoint.condition)));\n\n\t\tif (exceptionBreakpoint.modeLabel) {\n\t\t\tdata.badge.textContent = exceptionBreakpoint.modeLabel;\n\t\t\tdata.badge.style.display = 'block';\n\t\t} else {\n\t\t\tdata.badge.style.display = 'none';\n\t\t}\n\n\t\tconst primary: IAction[] = [];\n\t\tthis.breakpointSupportsCondition.set((exceptionBreakpoint as ExceptionBreakpoint).supportsCondition);\n\t\tthis.breakpointItemType.set('exceptionBreakpoint');\n\t\tthis.breakpointHasMultipleModes.set(this.debugService.getModel().getBreakpointModes('exception').length > 1);\n\t\tcreateAndFillInActionBarActions(this.menu, { arg: exceptionBreakpoint, shouldForwardArgs: true }, { primary, secondary: [] }, 'inline');\n\t\tdata.actionBar.clear();\n\t\tdata.actionBar.push(primary, { icon: true, label: false });\n\t\tbreakpointIdToActionBarDomeNode.set(exceptionBreakpoint.getId(), data.actionBar.domNode);\n\t}\n\n\tdisposeElement(element: IExceptionBreakpoint, index: number, templateData: IExceptionBreakpointTemplateData, height: number | undefined): void {\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: IExceptionBreakpointTemplateData): void {\n\t\ttemplateData.templateDisposables.dispose();\n\t}\n}\n\nclass FunctionBreakpointsRenderer implements IListRenderer<FunctionBreakpoint, IFunctionBreakpointTemplateData> {\n\n\tconstructor(\n\t\tprivate menu: IMenu,\n\t\tprivate breakpointSupportsCondition: IContextKey<boolean>,\n\t\tprivate breakpointItemType: IContextKey<string | undefined>,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t\t@ILabelService private readonly labelService: ILabelService\n\t) {\n\t\t// noop\n\t}\n\n\tstatic readonly ID = 'functionbreakpoints';\n\n\tget templateId() {\n\t\treturn FunctionBreakpointsRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IFunctionBreakpointTemplateData {\n\t\tconst data: IFunctionBreakpointTemplateData = Object.create(null);\n\t\tdata.elementDisposables = new DisposableStore();\n\t\tdata.templateDisposables = new DisposableStore();\n\t\tdata.templateDisposables.add(data.elementDisposables);\n\t\tdata.breakpoint = dom.append(container, $('.breakpoint'));\n\n\t\tdata.icon = $('.icon');\n\t\tdata.checkbox = createCheckbox(data.templateDisposables);\n\t\tdata.templateDisposables.add(dom.addStandardDisposableListener(data.checkbox, 'change', (e) => {\n\t\t\tthis.debugService.enableOrDisableBreakpoints(!data.context.enabled, data.context);\n\t\t}));\n\n\t\tdom.append(data.breakpoint, data.icon);\n\t\tdom.append(data.breakpoint, data.checkbox);\n\n\t\tdata.name = dom.append(data.breakpoint, $('span.name'));\n\t\tdata.condition = dom.append(data.breakpoint, $('span.condition'));\n\n\t\tdata.actionBar = new ActionBar(data.breakpoint);\n\t\tdata.templateDisposables.add(data.actionBar);\n\t\tconst badgeContainer = dom.append(data.breakpoint, $('.badge-container'));\n\t\tdata.badge = dom.append(badgeContainer, $('span.line-number.monaco-count-badge'));\n\n\t\treturn data;\n\t}\n\n\trenderElement(functionBreakpoint: FunctionBreakpoint, _index: number, data: IFunctionBreakpointTemplateData): void {\n\t\tdata.context = functionBreakpoint;\n\t\tdata.name.textContent = functionBreakpoint.name;\n\t\tconst { icon, message } = getBreakpointMessageAndIcon(this.debugService.state, this.debugService.getModel().areBreakpointsActivated(), functionBreakpoint, this.labelService, this.debugService.getModel());\n\t\tdata.icon.className = ThemeIcon.asClassName(icon);\n\t\tdata.elementDisposables.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), data.icon, message ? message : ''));\n\t\tdata.checkbox.checked = functionBreakpoint.enabled;\n\t\tdata.elementDisposables.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), data.breakpoint, message ? message : ''));\n\t\tif (functionBreakpoint.condition && functionBreakpoint.hitCondition) {\n\t\t\tdata.condition.textContent = localize('expressionAndHitCount', \"Condition: {0} | Hit Count: {1}\", functionBreakpoint.condition, functionBreakpoint.hitCondition);\n\t\t} else {\n\t\t\tdata.condition.textContent = functionBreakpoint.condition || functionBreakpoint.hitCondition || '';\n\t\t}\n\n\t\tif (functionBreakpoint.modeLabel) {\n\t\t\tdata.badge.textContent = functionBreakpoint.modeLabel;\n\t\t\tdata.badge.style.display = 'block';\n\t\t} else {\n\t\t\tdata.badge.style.display = 'none';\n\t\t}\n\n\t\t// Mark function breakpoints as disabled if deactivated or if debug type does not support them #9099\n\t\tconst session = this.debugService.getViewModel().focusedSession;\n\t\tdata.breakpoint.classList.toggle('disabled', (session && !session.capabilities.supportsFunctionBreakpoints) || !this.debugService.getModel().areBreakpointsActivated());\n\t\tif (session && !session.capabilities.supportsFunctionBreakpoints) {\n\t\t\tdata.elementDisposables.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), data.breakpoint, localize('functionBreakpointsNotSupported', \"Function breakpoints are not supported by this debug type\")));\n\t\t}\n\n\t\tconst primary: IAction[] = [];\n\t\tthis.breakpointSupportsCondition.set(!session || !!session.capabilities.supportsConditionalBreakpoints);\n\t\tthis.breakpointItemType.set('functionBreakpoint');\n\t\tcreateAndFillInActionBarActions(this.menu, { arg: functionBreakpoint, shouldForwardArgs: true }, { primary, secondary: [] }, 'inline');\n\t\tdata.actionBar.clear();\n\t\tdata.actionBar.push(primary, { icon: true, label: false });\n\t\tbreakpointIdToActionBarDomeNode.set(functionBreakpoint.getId(), data.actionBar.domNode);\n\t}\n\n\tdisposeElement(element: FunctionBreakpoint, index: number, templateData: IFunctionBreakpointTemplateData, height: number | undefined): void {\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: IFunctionBreakpointTemplateData): void {\n\t\ttemplateData.templateDisposables.dispose();\n\t}\n}\n\nclass DataBreakpointsRenderer implements IListRenderer<DataBreakpoint, IDataBreakpointTemplateData> {\n\n\tconstructor(\n\t\tprivate menu: IMenu,\n\t\tprivate breakpointHasMultipleModes: IContextKey<boolean>,\n\t\tprivate breakpointSupportsCondition: IContextKey<boolean>,\n\t\tprivate breakpointItemType: IContextKey<string | undefined>,\n\t\tprivate breakpointIsDataBytes: IContextKey<boolean | undefined>,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t\t@ILabelService private readonly labelService: ILabelService\n\t) {\n\t\t// noop\n\t}\n\n\tstatic readonly ID = 'databreakpoints';\n\n\tget templateId() {\n\t\treturn DataBreakpointsRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IDataBreakpointTemplateData {\n\t\tconst data: IDataBreakpointTemplateData = Object.create(null);\n\t\tdata.breakpoint = dom.append(container, $('.breakpoint'));\n\t\tdata.elementDisposables = new DisposableStore();\n\t\tdata.templateDisposables = new DisposableStore();\n\t\tdata.templateDisposables.add(data.elementDisposables);\n\n\t\tdata.icon = $('.icon');\n\t\tdata.checkbox = createCheckbox(data.templateDisposables);\n\t\tdata.templateDisposables.add(dom.addStandardDisposableListener(data.checkbox, 'change', (e) => {\n\t\t\tthis.debugService.enableOrDisableBreakpoints(!data.context.enabled, data.context);\n\t\t}));\n\n\t\tdom.append(data.breakpoint, data.icon);\n\t\tdom.append(data.breakpoint, data.checkbox);\n\n\t\tdata.name = dom.append(data.breakpoint, $('span.name'));\n\t\tdata.accessType = dom.append(data.breakpoint, $('span.access-type'));\n\t\tdata.condition = dom.append(data.breakpoint, $('span.condition'));\n\n\t\tdata.actionBar = new ActionBar(data.breakpoint);\n\t\tdata.templateDisposables.add(data.actionBar);\n\t\tconst badgeContainer = dom.append(data.breakpoint, $('.badge-container'));\n\t\tdata.badge = dom.append(badgeContainer, $('span.line-number.monaco-count-badge'));\n\n\t\treturn data;\n\t}\n\n\trenderElement(dataBreakpoint: DataBreakpoint, _index: number, data: IDataBreakpointTemplateData): void {\n\t\tdata.context = dataBreakpoint;\n\t\tdata.name.textContent = dataBreakpoint.description;\n\t\tconst { icon, message } = getBreakpointMessageAndIcon(this.debugService.state, this.debugService.getModel().areBreakpointsActivated(), dataBreakpoint, this.labelService, this.debugService.getModel());\n\t\tdata.icon.className = ThemeIcon.asClassName(icon);\n\t\tdata.elementDisposables.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), data.icon, message ? message : ''));\n\t\tdata.checkbox.checked = dataBreakpoint.enabled;\n\t\tdata.elementDisposables.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), data.breakpoint, message ? message : ''));\n\n\t\tif (dataBreakpoint.modeLabel) {\n\t\t\tdata.badge.textContent = dataBreakpoint.modeLabel;\n\t\t\tdata.badge.style.display = 'block';\n\t\t} else {\n\t\t\tdata.badge.style.display = 'none';\n\t\t}\n\n\t\t// Mark data breakpoints as disabled if deactivated or if debug type does not support them\n\t\tconst session = this.debugService.getViewModel().focusedSession;\n\t\tdata.breakpoint.classList.toggle('disabled', (session && !session.capabilities.supportsDataBreakpoints) || !this.debugService.getModel().areBreakpointsActivated());\n\t\tif (session && !session.capabilities.supportsDataBreakpoints) {\n\t\t\tdata.elementDisposables.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), data.breakpoint, localize('dataBreakpointsNotSupported', \"Data breakpoints are not supported by this debug type\")));\n\t\t}\n\t\tif (dataBreakpoint.accessType) {\n\t\t\tconst accessType = dataBreakpoint.accessType === 'read' ? localize('read', \"Read\") : dataBreakpoint.accessType === 'write' ? localize('write', \"Write\") : localize('access', \"Access\");\n\t\t\tdata.accessType.textContent = accessType;\n\t\t} else {\n\t\t\tdata.accessType.textContent = '';\n\t\t}\n\t\tif (dataBreakpoint.condition && dataBreakpoint.hitCondition) {\n\t\t\tdata.condition.textContent = localize('expressionAndHitCount', \"Condition: {0} | Hit Count: {1}\", dataBreakpoint.condition, dataBreakpoint.hitCondition);\n\t\t} else {\n\t\t\tdata.condition.textContent = dataBreakpoint.condition || dataBreakpoint.hitCondition || '';\n\t\t}\n\n\t\tconst primary: IAction[] = [];\n\t\tthis.breakpointSupportsCondition.set(!session || !!session.capabilities.supportsConditionalBreakpoints);\n\t\tthis.breakpointHasMultipleModes.set(this.debugService.getModel().getBreakpointModes('data').length > 1);\n\t\tthis.breakpointItemType.set('dataBreakpoint');\n\t\tthis.breakpointIsDataBytes.set(dataBreakpoint.src.type === DataBreakpointSetType.Address);\n\t\tcreateAndFillInActionBarActions(this.menu, { arg: dataBreakpoint, shouldForwardArgs: true }, { primary, secondary: [] }, 'inline');\n\t\tdata.actionBar.clear();\n\t\tdata.actionBar.push(primary, { icon: true, label: false });\n\t\tbreakpointIdToActionBarDomeNode.set(dataBreakpoint.getId(), data.actionBar.domNode);\n\t\tthis.breakpointIsDataBytes.reset();\n\t}\n\n\tdisposeElement(element: DataBreakpoint, index: number, templateData: IDataBreakpointTemplateData, height: number | undefined): void {\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: IBaseBreakpointWithIconTemplateData): void {\n\t\ttemplateData.templateDisposables.dispose();\n\t}\n}\n\nclass InstructionBreakpointsRenderer implements IListRenderer<IInstructionBreakpoint, IInstructionBreakpointTemplateData> {\n\n\tconstructor(\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t\t@ILabelService private readonly labelService: ILabelService\n\t) {\n\t\t// noop\n\t}\n\n\tstatic readonly ID = 'instructionBreakpoints';\n\n\tget templateId() {\n\t\treturn InstructionBreakpointsRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IInstructionBreakpointTemplateData {\n\t\tconst data: IInstructionBreakpointTemplateData = Object.create(null);\n\t\tdata.elementDisposables = new DisposableStore();\n\t\tdata.templateDisposables = new DisposableStore();\n\t\tdata.templateDisposables.add(data.elementDisposables);\n\t\tdata.breakpoint = dom.append(container, $('.breakpoint'));\n\n\t\tdata.icon = $('.icon');\n\t\tdata.checkbox = createCheckbox(data.templateDisposables);\n\t\tdata.templateDisposables.add(dom.addStandardDisposableListener(data.checkbox, 'change', (e) => {\n\t\t\tthis.debugService.enableOrDisableBreakpoints(!data.context.enabled, data.context);\n\t\t}));\n\n\t\tdom.append(data.breakpoint, data.icon);\n\t\tdom.append(data.breakpoint, data.checkbox);\n\n\t\tdata.name = dom.append(data.breakpoint, $('span.name'));\n\n\t\tdata.address = dom.append(data.breakpoint, $('span.file-path'));\n\t\tdata.actionBar = new ActionBar(data.breakpoint);\n\t\tdata.templateDisposables.add(data.actionBar);\n\t\tconst badgeContainer = dom.append(data.breakpoint, $('.badge-container'));\n\t\tdata.badge = dom.append(badgeContainer, $('span.line-number.monaco-count-badge'));\n\n\t\treturn data;\n\t}\n\n\trenderElement(breakpoint: IInstructionBreakpoint, index: number, data: IInstructionBreakpointTemplateData): void {\n\t\tdata.context = breakpoint;\n\t\tdata.breakpoint.classList.toggle('disabled', !this.debugService.getModel().areBreakpointsActivated());\n\n\t\tdata.name.textContent = '0x' + breakpoint.address.toString(16);\n\t\tdata.elementDisposables.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), data.name, `Decimal address: breakpoint.address.toString()`));\n\t\tdata.checkbox.checked = breakpoint.enabled;\n\n\t\tconst { message, icon } = getBreakpointMessageAndIcon(this.debugService.state, this.debugService.getModel().areBreakpointsActivated(), breakpoint, this.labelService, this.debugService.getModel());\n\t\tdata.icon.className = ThemeIcon.asClassName(icon);\n\t\tdata.elementDisposables.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), data.breakpoint, breakpoint.message || message || ''));\n\n\t\tconst debugActive = this.debugService.state === State.Running || this.debugService.state === State.Stopped;\n\t\tif (debugActive && !breakpoint.verified) {\n\t\t\tdata.breakpoint.classList.add('disabled');\n\t\t}\n\n\t\tif (breakpoint.modeLabel) {\n\t\t\tdata.badge.textContent = breakpoint.modeLabel;\n\t\t\tdata.badge.style.display = 'block';\n\t\t} else {\n\t\t\tdata.badge.style.display = 'none';\n\t\t}\n\t}\n\n\n\tdisposeElement(element: IInstructionBreakpoint, index: number, templateData: IInstructionBreakpointTemplateData, height: number | undefined): void {\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: IInstructionBreakpointTemplateData): void {\n\t\ttemplateData.templateDisposables.dispose();\n\t}\n}\n\nclass FunctionBreakpointInputRenderer implements IListRenderer<IFunctionBreakpoint, IFunctionBreakpointInputTemplateData> {\n\n\tconstructor(\n\t\tprivate view: BreakpointsView,\n\t\tprivate debugService: IDebugService,\n\t\tprivate contextViewService: IContextViewService,\n\t\tprivate readonly hoverService: IHoverService,\n\t\tprivate labelService: ILabelService\n\t) { }\n\n\tstatic readonly ID = 'functionbreakpointinput';\n\n\tget templateId() {\n\t\treturn FunctionBreakpointInputRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IFunctionBreakpointInputTemplateData {\n\t\tconst template: IFunctionBreakpointInputTemplateData = Object.create(null);\n\t\tconst toDispose = new DisposableStore();\n\n\t\tconst breakpoint = dom.append(container, $('.breakpoint'));\n\t\ttemplate.icon = $('.icon');\n\t\ttemplate.checkbox = createCheckbox(toDispose);\n\n\t\tdom.append(breakpoint, template.icon);\n\t\tdom.append(breakpoint, template.checkbox);\n\t\tthis.view.breakpointInputFocused.set(true);\n\t\tconst inputBoxContainer = dom.append(breakpoint, $('.inputBoxContainer'));\n\n\n\t\tconst inputBox = new InputBox(inputBoxContainer, this.contextViewService, { inputBoxStyles: defaultInputBoxStyles });\n\n\t\ttoDispose.add(inputBox);\n\n\t\tconst wrapUp = (success: boolean) => {\n\t\t\ttemplate.updating = true;\n\t\t\ttry {\n\t\t\t\tthis.view.breakpointInputFocused.set(false);\n\t\t\t\tconst id = template.breakpoint.getId();\n\n\t\t\t\tif (success) {\n\t\t\t\t\tif (template.type === 'name') {\n\t\t\t\t\t\tthis.debugService.updateFunctionBreakpoint(id, { name: inputBox.value });\n\t\t\t\t\t}\n\t\t\t\t\tif (template.type === 'condition') {\n\t\t\t\t\t\tthis.debugService.updateFunctionBreakpoint(id, { condition: inputBox.value });\n\t\t\t\t\t}\n\t\t\t\t\tif (template.type === 'hitCount') {\n\t\t\t\t\t\tthis.debugService.updateFunctionBreakpoint(id, { hitCondition: inputBox.value });\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (template.type === 'name' && !template.breakpoint.name) {\n\t\t\t\t\t\tthis.debugService.removeFunctionBreakpoints(id);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.view.renderInputBox(undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\ttemplate.updating = false;\n\t\t\t}\n\t\t};\n\n\t\ttoDispose.add(dom.addStandardDisposableListener(inputBox.inputElement, 'keydown', (e: IKeyboardEvent) => {\n\t\t\tconst isEscape = e.equals(KeyCode.Escape);\n\t\t\tconst isEnter = e.equals(KeyCode.Enter);\n\t\t\tif (isEscape || isEnter) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t\twrapUp(isEnter);\n\t\t\t}\n\t\t}));\n\t\ttoDispose.add(dom.addDisposableListener(inputBox.inputElement, 'blur', () => {\n\t\t\tif (!template.updating) {\n\t\t\t\twrapUp(!!inputBox.value);\n\t\t\t}\n\t\t}));\n\n\t\ttemplate.inputBox = inputBox;\n\t\ttemplate.elementDisposables = new DisposableStore();\n\t\ttemplate.templateDisposables = toDispose;\n\t\ttemplate.templateDisposables.add(template.elementDisposables);\n\t\treturn template;\n\t}\n\n\trenderElement(functionBreakpoint: FunctionBreakpoint, _index: number, data: IFunctionBreakpointInputTemplateData): void {\n\t\tdata.breakpoint = functionBreakpoint;\n\t\tdata.type = this.view.inputBoxData?.type || 'name'; // If there is no type set take the 'name' as the default\n\t\tconst { icon, message } = getBreakpointMessageAndIcon(this.debugService.state, this.debugService.getModel().areBreakpointsActivated(), functionBreakpoint, this.labelService, this.debugService.getModel());\n\n\t\tdata.icon.className = ThemeIcon.asClassName(icon);\n\t\tdata.elementDisposables.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), data.icon, message ? message : ''));\n\t\tdata.checkbox.checked = functionBreakpoint.enabled;\n\t\tdata.checkbox.disabled = true;\n\t\tdata.inputBox.value = functionBreakpoint.name || '';\n\n\t\tlet placeholder = localize('functionBreakpointPlaceholder', \"Function to break on\");\n\t\tlet ariaLabel = localize('functionBreakPointInputAriaLabel', \"Type function breakpoint.\");\n\t\tif (data.type === 'condition') {\n\t\t\tdata.inputBox.value = functionBreakpoint.condition || '';\n\t\t\tplaceholder = localize('functionBreakpointExpressionPlaceholder', \"Break when expression evaluates to true\");\n\t\t\tariaLabel = localize('functionBreakPointExpresionAriaLabel', \"Type expression. Function breakpoint will break when expression evaluates to true\");\n\t\t} else if (data.type === 'hitCount') {\n\t\t\tdata.inputBox.value = functionBreakpoint.hitCondition || '';\n\t\t\tplaceholder = localize('functionBreakpointHitCountPlaceholder', \"Break when hit count is met\");\n\t\t\tariaLabel = localize('functionBreakPointHitCountAriaLabel', \"Type hit count. Function breakpoint will break when hit count is met.\");\n\t\t}\n\t\tdata.inputBox.setAriaLabel(ariaLabel);\n\t\tdata.inputBox.setPlaceHolder(placeholder);\n\n\t\tsetTimeout(() => {\n\t\t\tdata.inputBox.focus();\n\t\t\tdata.inputBox.select();\n\t\t}, 0);\n\t}\n\n\tdisposeElement(element: IFunctionBreakpoint, index: number, templateData: IFunctionBreakpointInputTemplateData, height: number | undefined): void {\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: IFunctionBreakpointInputTemplateData): void {\n\t\ttemplateData.templateDisposables.dispose();\n\t}\n}\n\nclass DataBreakpointInputRenderer implements IListRenderer<IDataBreakpoint, IDataBreakpointInputTemplateData> {\n\n\tconstructor(\n\t\tprivate view: BreakpointsView,\n\t\tprivate debugService: IDebugService,\n\t\tprivate contextViewService: IContextViewService,\n\t\tprivate readonly hoverService: IHoverService,\n\t\tprivate labelService: ILabelService\n\t) { }\n\n\tstatic readonly ID = 'databreakpointinput';\n\n\tget templateId() {\n\t\treturn DataBreakpointInputRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IDataBreakpointInputTemplateData {\n\t\tconst template: IDataBreakpointInputTemplateData = Object.create(null);\n\t\tconst toDispose = new DisposableStore();\n\n\t\tconst breakpoint = dom.append(container, $('.breakpoint'));\n\t\ttemplate.icon = $('.icon');\n\t\ttemplate.checkbox = createCheckbox(toDispose);\n\n\t\tdom.append(breakpoint, template.icon);\n\t\tdom.append(breakpoint, template.checkbox);\n\t\tthis.view.breakpointInputFocused.set(true);\n\t\tconst inputBoxContainer = dom.append(breakpoint, $('.inputBoxContainer'));\n\n\n\t\tconst inputBox = new InputBox(inputBoxContainer, this.contextViewService, { inputBoxStyles: defaultInputBoxStyles });\n\t\ttoDispose.add(inputBox);\n\n\t\tconst wrapUp = (success: boolean) => {\n\t\t\ttemplate.updating = true;\n\t\t\ttry {\n\t\t\t\tthis.view.breakpointInputFocused.set(false);\n\t\t\t\tconst id = template.breakpoint.getId();\n\n\t\t\t\tif (success) {\n\t\t\t\t\tif (template.type === 'condition') {\n\t\t\t\t\t\tthis.debugService.updateDataBreakpoint(id, { condition: inputBox.value });\n\t\t\t\t\t}\n\t\t\t\t\tif (template.type === 'hitCount') {\n\t\t\t\t\t\tthis.debugService.updateDataBreakpoint(id, { hitCondition: inputBox.value });\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.view.renderInputBox(undefined);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\ttemplate.updating = false;\n\t\t\t}\n\t\t};\n\n\t\ttoDispose.add(dom.addStandardDisposableListener(inputBox.inputElement, 'keydown', (e: IKeyboardEvent) => {\n\t\t\tconst isEscape = e.equals(KeyCode.Escape);\n\t\t\tconst isEnter = e.equals(KeyCode.Enter);\n\t\t\tif (isEscape || isEnter) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t\twrapUp(isEnter);\n\t\t\t}\n\t\t}));\n\t\ttoDispose.add(dom.addDisposableListener(inputBox.inputElement, 'blur', () => {\n\t\t\tif (!template.updating) {\n\t\t\t\twrapUp(!!inputBox.value);\n\t\t\t}\n\t\t}));\n\n\t\ttemplate.inputBox = inputBox;\n\t\ttemplate.elementDisposables = new DisposableStore();\n\t\ttemplate.templateDisposables = toDispose;\n\t\ttemplate.templateDisposables.add(template.elementDisposables);\n\t\treturn template;\n\t}\n\n\trenderElement(dataBreakpoint: DataBreakpoint, _index: number, data: IDataBreakpointInputTemplateData): void {\n\t\tdata.breakpoint = dataBreakpoint;\n\t\tdata.type = this.view.inputBoxData?.type || 'condition'; // If there is no type set take the 'condition' as the default\n\t\tconst { icon, message } = getBreakpointMessageAndIcon(this.debugService.state, this.debugService.getModel().areBreakpointsActivated(), dataBreakpoint, this.labelService, this.debugService.getModel());\n\n\t\tdata.icon.className = ThemeIcon.asClassName(icon);\n\t\tdata.elementDisposables.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), data.icon, message ?? ''));\n\t\tdata.checkbox.checked = dataBreakpoint.enabled;\n\t\tdata.checkbox.disabled = true;\n\t\tdata.inputBox.value = '';\n\t\tlet placeholder = '';\n\t\tlet ariaLabel = '';\n\t\tif (data.type === 'condition') {\n\t\t\tdata.inputBox.value = dataBreakpoint.condition || '';\n\t\t\tplaceholder = localize('dataBreakpointExpressionPlaceholder', \"Break when expression evaluates to true\");\n\t\t\tariaLabel = localize('dataBreakPointExpresionAriaLabel', \"Type expression. Data breakpoint will break when expression evaluates to true\");\n\t\t} else if (data.type === 'hitCount') {\n\t\t\tdata.inputBox.value = dataBreakpoint.hitCondition || '';\n\t\t\tplaceholder = localize('dataBreakpointHitCountPlaceholder', \"Break when hit count is met\");\n\t\t\tariaLabel = localize('dataBreakPointHitCountAriaLabel', \"Type hit count. Data breakpoint will break when hit count is met.\");\n\t\t}\n\t\tdata.inputBox.setAriaLabel(ariaLabel);\n\t\tdata.inputBox.setPlaceHolder(placeholder);\n\n\t\tsetTimeout(() => {\n\t\t\tdata.inputBox.focus();\n\t\t\tdata.inputBox.select();\n\t\t}, 0);\n\t}\n\n\tdisposeElement(element: IDataBreakpoint, index: number, templateData: IDataBreakpointInputTemplateData, height: number | undefined): void {\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: IDataBreakpointInputTemplateData): void {\n\t\ttemplateData.templateDisposables.dispose();\n\t}\n}\n\nclass ExceptionBreakpointInputRenderer implements IListRenderer<IExceptionBreakpoint, IExceptionBreakpointInputTemplateData> {\n\n\tconstructor(\n\t\tprivate view: BreakpointsView,\n\t\tprivate debugService: IDebugService,\n\t\tprivate contextViewService: IContextViewService,\n\t) {\n\t\t// noop\n\t}\n\n\tstatic readonly ID = 'exceptionbreakpointinput';\n\n\tget templateId() {\n\t\treturn ExceptionBreakpointInputRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IExceptionBreakpointInputTemplateData {\n\t\tconst template: IExceptionBreakpointInputTemplateData = Object.create(null);\n\t\tconst toDispose = new DisposableStore();\n\n\t\tconst breakpoint = dom.append(container, $('.breakpoint'));\n\t\tbreakpoint.classList.add('exception');\n\t\ttemplate.checkbox = createCheckbox(toDispose);\n\n\t\tdom.append(breakpoint, template.checkbox);\n\t\tthis.view.breakpointInputFocused.set(true);\n\t\tconst inputBoxContainer = dom.append(breakpoint, $('.inputBoxContainer'));\n\t\tconst inputBox = new InputBox(inputBoxContainer, this.contextViewService, {\n\t\t\tariaLabel: localize('exceptionBreakpointAriaLabel', \"Type exception breakpoint condition\"),\n\t\t\tinputBoxStyles: defaultInputBoxStyles\n\t\t});\n\n\n\t\ttemplate.templateDisposables.add(inputBox);\n\t\tconst wrapUp = (success: boolean) => {\n\t\t\tthis.view.breakpointInputFocused.set(false);\n\t\t\tlet newCondition = template.breakpoint.condition;\n\t\t\tif (success) {\n\t\t\t\tnewCondition = inputBox.value !== '' ? inputBox.value : undefined;\n\t\t\t}\n\t\t\tthis.debugService.setExceptionBreakpointCondition(template.breakpoint, newCondition);\n\t\t};\n\n\t\ttoDispose.add(dom.addStandardDisposableListener(inputBox.inputElement, 'keydown', (e: IKeyboardEvent) => {\n\t\t\tconst isEscape = e.equals(KeyCode.Escape);\n\t\t\tconst isEnter = e.equals(KeyCode.Enter);\n\t\t\tif (isEscape || isEnter) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t\twrapUp(isEnter);\n\t\t\t}\n\t\t}));\n\t\ttoDispose.add(dom.addDisposableListener(inputBox.inputElement, 'blur', () => {\n\t\t\t// Need to react with a timeout on the blur event due to possible concurent splices #56443\n\t\t\tsetTimeout(() => {\n\t\t\t\twrapUp(true);\n\t\t\t});\n\t\t}));\n\n\t\ttemplate.inputBox = inputBox;\n\t\ttemplate.elementDisposables = new DisposableStore();\n\t\ttemplate.templateDisposables = toDispose;\n\t\ttemplate.templateDisposables.add(template.elementDisposables);\n\t\treturn template;\n\t}\n\n\trenderElement(exceptionBreakpoint: ExceptionBreakpoint, _index: number, data: IExceptionBreakpointInputTemplateData): void {\n\t\tconst placeHolder = exceptionBreakpoint.conditionDescription || localize('exceptionBreakpointPlaceholder', \"Break when expression evaluates to true\");\n\t\tdata.inputBox.setPlaceHolder(placeHolder);\n\t\tdata.breakpoint = exceptionBreakpoint;\n\t\tdata.checkbox.checked = exceptionBreakpoint.enabled;\n\t\tdata.checkbox.disabled = true;\n\t\tdata.inputBox.value = exceptionBreakpoint.condition || '';\n\t\tsetTimeout(() => {\n\t\t\tdata.inputBox.focus();\n\t\t\tdata.inputBox.select();\n\t\t}, 0);\n\t}\n\n\tdisposeElement(element: IExceptionBreakpoint, index: number, templateData: IExceptionBreakpointInputTemplateData, height: number | undefined): void {\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: IExceptionBreakpointInputTemplateData): void {\n\t\ttemplateData.templateDisposables.dispose();\n\t}\n}\n\nclass BreakpointsAccessibilityProvider implements IListAccessibilityProvider<BreakpointItem> {\n\n\tconstructor(\n\t\tprivate readonly debugService: IDebugService,\n\t\tprivate readonly labelService: ILabelService\n\t) { }\n\n\tgetWidgetAriaLabel(): string {\n\t\treturn localize('breakpoints', \"Breakpoints\");\n\t}\n\n\tgetRole(): AriaRole {\n\t\treturn 'checkbox';\n\t}\n\n\tisChecked(breakpoint: IEnablement) {\n\t\treturn breakpoint.enabled;\n\t}\n\n\tgetAriaLabel(element: BreakpointItem): string | null {\n\t\tif (element instanceof ExceptionBreakpoint) {\n\t\t\treturn element.toString();\n\t\t}\n\n\t\tconst { message } = getBreakpointMessageAndIcon(this.debugService.state, this.debugService.getModel().areBreakpointsActivated(), element as IBreakpoint | IDataBreakpoint | IFunctionBreakpoint, this.labelService, this.debugService.getModel());\n\t\tconst toString = element.toString();\n\n\t\treturn message ? `${toString}, ${message}` : toString;\n\t}\n}\n\nexport function openBreakpointSource(breakpoint: IBreakpoint, sideBySide: boolean, preserveFocus: boolean, pinned: boolean, debugService: IDebugService, editorService: IEditorService): Promise<IEditorPane | undefined> {\n\tif (breakpoint.uri.scheme === DEBUG_SCHEME && debugService.state === State.Inactive) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tconst selection = breakpoint.endLineNumber ? {\n\t\tstartLineNumber: breakpoint.lineNumber,\n\t\tendLineNumber: breakpoint.endLineNumber,\n\t\tstartColumn: breakpoint.column || 1,\n\t\tendColumn: breakpoint.endColumn || Constants.MAX_SAFE_SMALL_INTEGER\n\t} : {\n\t\tstartLineNumber: breakpoint.lineNumber,\n\t\tstartColumn: breakpoint.column || 1,\n\t\tendLineNumber: breakpoint.lineNumber,\n\t\tendColumn: breakpoint.column || Constants.MAX_SAFE_SMALL_INTEGER\n\t};\n\n\treturn editorService.openEditor({\n\t\tresource: breakpoint.uri,\n\t\toptions: {\n\t\t\tpreserveFocus,\n\t\t\tselection,\n\t\t\trevealIfOpened: true,\n\t\t\tselectionRevealType: TextEditorSelectionRevealType.CenterIfOutsideViewport,\n\t\t\tpinned\n\t\t}\n\t}, sideBySide ? SIDE_GROUP : ACTIVE_GROUP);\n}\n\nexport function getBreakpointMessageAndIcon(state: State, breakpointsActivated: boolean, breakpoint: BreakpointItem, labelService: ILabelService, debugModel: IDebugModel): { message?: string; icon: ThemeIcon; showAdapterUnverifiedMessage?: boolean } {\n\tconst debugActive = state === State.Running || state === State.Stopped;\n\n\tconst breakpointIcon = breakpoint instanceof DataBreakpoint ? icons.dataBreakpoint : breakpoint instanceof FunctionBreakpoint ? icons.functionBreakpoint : breakpoint.logMessage ? icons.logBreakpoint : icons.breakpoint;\n\n\tif (!breakpoint.enabled || !breakpointsActivated) {\n\t\treturn {\n\t\t\ticon: breakpointIcon.disabled,\n\t\t\tmessage: breakpoint.logMessage ? localize('disabledLogpoint', \"Disabled Logpoint\") : localize('disabledBreakpoint', \"Disabled Breakpoint\"),\n\t\t};\n\t}\n\n\tconst appendMessage = (text: string): string => {\n\t\treturn ('message' in breakpoint && breakpoint.message) ? text.concat(', ' + breakpoint.message) : text;\n\t};\n\n\tif (debugActive && breakpoint instanceof Breakpoint && breakpoint.pending) {\n\t\treturn {\n\t\t\ticon: icons.breakpoint.pending\n\t\t};\n\t}\n\n\tif (debugActive && !breakpoint.verified) {\n\t\treturn {\n\t\t\ticon: breakpointIcon.unverified,\n\t\t\tmessage: ('message' in breakpoint && breakpoint.message) ? breakpoint.message : (breakpoint.logMessage ? localize('unverifiedLogpoint', \"Unverified Logpoint\") : localize('unverifiedBreakpoint', \"Unverified Breakpoint\")),\n\t\t\tshowAdapterUnverifiedMessage: true\n\t\t};\n\t}\n\n\tif (breakpoint instanceof DataBreakpoint) {\n\t\tif (!breakpoint.supported) {\n\t\t\treturn {\n\t\t\t\ticon: breakpointIcon.unverified,\n\t\t\t\tmessage: localize('dataBreakpointUnsupported', \"Data breakpoints not supported by this debug type\"),\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\ticon: breakpointIcon.regular,\n\t\t\tmessage: breakpoint.message || localize('dataBreakpoint', \"Data Breakpoint\")\n\t\t};\n\t}\n\n\tif (breakpoint instanceof FunctionBreakpoint) {\n\t\tif (!breakpoint.supported) {\n\t\t\treturn {\n\t\t\t\ticon: breakpointIcon.unverified,\n\t\t\t\tmessage: localize('functionBreakpointUnsupported', \"Function breakpoints not supported by this debug type\"),\n\t\t\t};\n\t\t}\n\t\tconst messages: string[] = [];\n\t\tmessages.push(breakpoint.message || localize('functionBreakpoint', \"Function Breakpoint\"));\n\t\tif (breakpoint.condition) {\n\t\t\tmessages.push(localize('expression', \"Condition: {0}\", breakpoint.condition));\n\t\t}\n\t\tif (breakpoint.hitCondition) {\n\t\t\tmessages.push(localize('hitCount', \"Hit Count: {0}\", breakpoint.hitCondition));\n\t\t}\n\n\t\treturn {\n\t\t\ticon: breakpointIcon.regular,\n\t\t\tmessage: appendMessage(messages.join('\\n'))\n\t\t};\n\t}\n\n\tif (breakpoint instanceof InstructionBreakpoint) {\n\t\tif (!breakpoint.supported) {\n\t\t\treturn {\n\t\t\t\ticon: breakpointIcon.unverified,\n\t\t\t\tmessage: localize('instructionBreakpointUnsupported', \"Instruction breakpoints not supported by this debug type\"),\n\t\t\t};\n\t\t}\n\t\tconst messages: string[] = [];\n\t\tif (breakpoint.message) {\n\t\t\tmessages.push(breakpoint.message);\n\t\t} else if (breakpoint.instructionReference) {\n\t\t\tmessages.push(localize('instructionBreakpointAtAddress', \"Instruction breakpoint at address {0}\", breakpoint.instructionReference));\n\t\t} else {\n\t\t\tmessages.push(localize('instructionBreakpoint', \"Instruction breakpoint\"));\n\t\t}\n\n\t\tif (breakpoint.hitCondition) {\n\t\t\tmessages.push(localize('hitCount', \"Hit Count: {0}\", breakpoint.hitCondition));\n\t\t}\n\n\t\treturn {\n\t\t\ticon: breakpointIcon.regular,\n\t\t\tmessage: appendMessage(messages.join('\\n'))\n\t\t};\n\t}\n\n\t// can change this when all breakpoint supports dependent breakpoint condition\n\tlet triggeringBreakpoint: IBreakpoint | undefined;\n\tif (breakpoint instanceof Breakpoint && breakpoint.triggeredBy) {\n\t\ttriggeringBreakpoint = debugModel.getBreakpoints().find(bp => bp.getId() === breakpoint.triggeredBy);\n\t}\n\n\tif (breakpoint.logMessage || breakpoint.condition || breakpoint.hitCondition || triggeringBreakpoint) {\n\t\tconst messages: string[] = [];\n\t\tlet icon = breakpoint.logMessage ? icons.logBreakpoint.regular : icons.conditionalBreakpoint.regular;\n\t\tif (!breakpoint.supported) {\n\t\t\ticon = icons.debugBreakpointUnsupported;\n\t\t\tmessages.push(localize('breakpointUnsupported', \"Breakpoints of this type are not supported by the debugger\"));\n\t\t}\n\n\t\tif (breakpoint.logMessage) {\n\t\t\tmessages.push(localize('logMessage', \"Log Message: {0}\", breakpoint.logMessage));\n\t\t}\n\t\tif (breakpoint.condition) {\n\t\t\tmessages.push(localize('expression', \"Condition: {0}\", breakpoint.condition));\n\t\t}\n\t\tif (breakpoint.hitCondition) {\n\t\t\tmessages.push(localize('hitCount', \"Hit Count: {0}\", breakpoint.hitCondition));\n\t\t}\n\t\tif (triggeringBreakpoint) {\n\t\t\tmessages.push(localize('triggeredBy', \"Hit after breakpoint: {0}\", `${labelService.getUriLabel(triggeringBreakpoint.uri, { relative: true })}: ${triggeringBreakpoint.lineNumber}`));\n\t\t}\n\n\t\treturn {\n\t\t\ticon,\n\t\t\tmessage: appendMessage(messages.join('\\n'))\n\t\t};\n\t}\n\n\tconst message = ('message' in breakpoint && breakpoint.message) ? breakpoint.message : breakpoint instanceof Breakpoint && labelService ? labelService.getUriLabel(breakpoint.uri) : localize('breakpoint', \"Breakpoint\");\n\treturn {\n\t\ticon: breakpointIcon.regular,\n\t\tmessage\n\t};\n}\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.debug.viewlet.action.addFunctionBreakpointAction',\n\t\t\ttitle: {\n\t\t\t\t...localize2('addFunctionBreakpoint', \"Add Function Breakpoint\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miFunctionBreakpoint', comment: ['&& denotes a mnemonic'] }, \"&&Function Breakpoint...\"),\n\t\t\t},\n\t\t\tf1: true,\n\t\t\ticon: icons.watchExpressionsAddFuncBreakpoint,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 10,\n\t\t\t\twhen: ContextKeyExpr.equals('view', BREAKPOINTS_VIEW_ID)\n\t\t\t}, {\n\t\t\t\tid: MenuId.MenubarNewBreakpointMenu,\n\t\t\t\tgroup: '1_breakpoints',\n\t\t\t\torder: 3,\n\t\t\t\twhen: CONTEXT_DEBUGGERS_AVAILABLE\n\t\t\t}]\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst viewService = accessor.get(IViewsService);\n\t\tawait viewService.openView(BREAKPOINTS_VIEW_ID);\n\t\tdebugService.addFunctionBreakpoint();\n\t}\n});\n\nabstract class MemoryBreakpointAction extends Action2 {\n\tasync run(accessor: ServicesAccessor, existingBreakpoint?: IDataBreakpoint): Promise<void> {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst session = debugService.getViewModel().focusedSession;\n\t\tif (!session) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet defaultValue = undefined;\n\t\tif (existingBreakpoint && existingBreakpoint.src.type === DataBreakpointSetType.Address) {\n\t\t\tdefaultValue = `${existingBreakpoint.src.address} + ${existingBreakpoint.src.bytes}`;\n\t\t}\n\n\t\tconst quickInput = accessor.get(IQuickInputService);\n\t\tconst notifications = accessor.get(INotificationService);\n\t\tconst range = await this.getRange(quickInput, defaultValue);\n\t\tif (!range) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet info: IDataBreakpointInfoResponse | undefined;\n\t\ttry {\n\t\t\tinfo = await session.dataBytesBreakpointInfo(range.address, range.bytes);\n\t\t} catch (e) {\n\t\t\tnotifications.error(localize('dataBreakpointError', \"Failed to set data breakpoint at {0}: {1}\", range.address, e.message));\n\t\t}\n\n\t\tif (!info?.dataId) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet accessType: DebugProtocol.DataBreakpointAccessType = 'write';\n\t\tif (info.accessTypes && info.accessTypes?.length > 1) {\n\t\t\tconst accessTypes = info.accessTypes.map(type => ({ label: type }));\n\t\t\tconst selectedAccessType = await quickInput.pick(accessTypes, { placeHolder: localize('dataBreakpointAccessType', \"Select the access type to monitor\") });\n\t\t\tif (!selectedAccessType) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccessType = selectedAccessType.label;\n\t\t}\n\n\t\tconst src: DataBreakpointSource = { type: DataBreakpointSetType.Address, ...range };\n\t\tif (existingBreakpoint) {\n\t\t\tawait debugService.removeDataBreakpoints(existingBreakpoint.getId());\n\t\t}\n\n\t\tawait debugService.addDataBreakpoint({\n\t\t\tdescription: info.description,\n\t\t\tsrc,\n\t\t\tcanPersist: true,\n\t\t\taccessTypes: info.accessTypes,\n\t\t\taccessType: accessType,\n\t\t\tinitialSessionData: { session, dataId: info.dataId }\n\t\t});\n\t}\n\n\tprivate getRange(quickInput: IQuickInputService, defaultValue?: string) {\n\t\treturn new Promise<{ address: string; bytes: number } | undefined>(resolve => {\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tconst input = disposables.add(quickInput.createInputBox());\n\t\t\tinput.prompt = localize('dataBreakpointMemoryRangePrompt', \"Enter a memory range in which to break\");\n\t\t\tinput.placeholder = localize('dataBreakpointMemoryRangePlaceholder', 'Absolute range (0x1234 - 0x1300) or range of bytes after an address (0x1234 + 0xff)');\n\t\t\tif (defaultValue) {\n\t\t\t\tinput.value = defaultValue;\n\t\t\t\tinput.valueSelection = [0, defaultValue.length];\n\t\t\t}\n\t\t\tdisposables.add(input.onDidChangeValue(e => {\n\t\t\t\tconst err = this.parseAddress(e, false);\n\t\t\t\tinput.validationMessage = err?.error;\n\t\t\t}));\n\t\t\tdisposables.add(input.onDidAccept(() => {\n\t\t\t\tconst r = this.parseAddress(input.value, true);\n\t\t\t\tif ('error' in r) {\n\t\t\t\t\tinput.validationMessage = r.error;\n\t\t\t\t} else {\n\t\t\t\t\tresolve(r);\n\t\t\t\t}\n\t\t\t\tinput.dispose();\n\t\t\t}));\n\t\t\tdisposables.add(input.onDidHide(() => {\n\t\t\t\tresolve(undefined);\n\t\t\t\tdisposables.dispose();\n\t\t\t}));\n\t\t\tinput.ignoreFocusOut = true;\n\t\t\tinput.show();\n\t\t});\n\t}\n\n\tprivate parseAddress(range: string, isFinal: false): { error: string } | undefined;\n\tprivate parseAddress(range: string, isFinal: true): { error: string } | { address: string; bytes: number };\n\tprivate parseAddress(range: string, isFinal: boolean): { error: string } | { address: string; bytes: number } | undefined {\n\t\tconst parts = /^(\\S+)\\s*(?:([+-])\\s*(\\S+))?/.exec(range);\n\t\tif (!parts) {\n\t\t\treturn { error: localize('dataBreakpointAddrFormat', 'Address should be a range of numbers the form \"[Start] - [End]\" or \"[Start] + [Bytes]\"') };\n\t\t}\n\n\t\tconst isNum = (e: string) => isFinal ? /^0x[0-9a-f]*|[0-9]*$/i.test(e) : /^0x[0-9a-f]+|[0-9]+$/i.test(e);\n\t\tconst [, startStr, sign = '+', endStr = '1'] = parts;\n\n\t\tfor (const n of [startStr, endStr]) {\n\t\t\tif (!isNum(n)) {\n\t\t\t\treturn { error: localize('dataBreakpointAddrStartEnd', 'Number must be a decimal integer or hex value starting with \\\"0x\\\", got {0}', n) };\n\t\t\t}\n\t\t}\n\n\t\tif (!isFinal) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst start = BigInt(startStr);\n\t\tconst end = BigInt(endStr);\n\t\tconst address = `0x${start.toString(16)}`;\n\t\tif (sign === '-') {\n\t\t\treturn { address, bytes: Number(start - end) };\n\t\t}\n\n\t\treturn { address, bytes: Number(end) };\n\t}\n}\n\nregisterAction2(class extends MemoryBreakpointAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.debug.viewlet.action.addDataBreakpointOnAddress',\n\t\t\ttitle: {\n\t\t\t\t...localize2('addDataBreakpointOnAddress', \"Add Data Breakpoint at Address\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miDataBreakpoint', comment: ['&& denotes a mnemonic'] }, \"&&Data Breakpoint...\"),\n\t\t\t},\n\t\t\tf1: true,\n\t\t\ticon: icons.watchExpressionsAddDataBreakpoint,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 11,\n\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_SET_DATA_BREAKPOINT_BYTES_SUPPORTED, ContextKeyExpr.equals('view', BREAKPOINTS_VIEW_ID))\n\t\t\t}, {\n\t\t\t\tid: MenuId.MenubarNewBreakpointMenu,\n\t\t\t\tgroup: '1_breakpoints',\n\t\t\t\torder: 4,\n\t\t\t\twhen: CONTEXT_SET_DATA_BREAKPOINT_BYTES_SUPPORTED\n\t\t\t}]\n\t\t});\n\t}\n});\n\nregisterAction2(class extends MemoryBreakpointAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.debug.viewlet.action.editDataBreakpointOnAddress',\n\t\t\ttitle: localize2('editDataBreakpointOnAddress', \"Edit Address...\"),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.DebugBreakpointsContext,\n\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_SET_DATA_BREAKPOINT_BYTES_SUPPORTED, CONTEXT_BREAKPOINT_ITEM_IS_DATA_BYTES),\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 15,\n\t\t\t}]\n\t\t});\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.debug.viewlet.action.toggleBreakpointsActivatedAction',\n\t\t\ttitle: localize2('activateBreakpoints', 'Toggle Activate Breakpoints'),\n\t\t\tf1: true,\n\t\t\ticon: icons.breakpointsActivate,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 20,\n\t\t\t\twhen: ContextKeyExpr.equals('view', BREAKPOINTS_VIEW_ID)\n\t\t\t}\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tdebugService.setBreakpointsActivated(!debugService.getModel().areBreakpointsActivated());\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.debug.viewlet.action.removeBreakpoint',\n\t\t\ttitle: localize('removeBreakpoint', \"Remove Breakpoint\"),\n\t\t\ticon: Codicon.removeClose,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.DebugBreakpointsContext,\n\t\t\t\tgroup: '3_modification',\n\t\t\t\torder: 10,\n\t\t\t\twhen: CONTEXT_BREAKPOINT_ITEM_TYPE.notEqualsTo('exceptionBreakpoint')\n\t\t\t}, {\n\t\t\t\tid: MenuId.DebugBreakpointsContext,\n\t\t\t\tgroup: 'inline',\n\t\t\t\torder: 20,\n\t\t\t\twhen: CONTEXT_BREAKPOINT_ITEM_TYPE.notEqualsTo('exceptionBreakpoint')\n\t\t\t}]\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, breakpoint: IBaseBreakpoint): Promise<void> {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tif (breakpoint instanceof Breakpoint) {\n\t\t\tawait debugService.removeBreakpoints(breakpoint.getId());\n\t\t} else if (breakpoint instanceof FunctionBreakpoint) {\n\t\t\tawait debugService.removeFunctionBreakpoints(breakpoint.getId());\n\t\t} else if (breakpoint instanceof DataBreakpoint) {\n\t\t\tawait debugService.removeDataBreakpoints(breakpoint.getId());\n\t\t} else if (breakpoint instanceof InstructionBreakpoint) {\n\t\t\tawait debugService.removeInstructionBreakpoints(breakpoint.instructionReference, breakpoint.offset);\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.debug.viewlet.action.removeAllBreakpoints',\n\t\t\ttitle: {\n\t\t\t\t...localize2('removeAllBreakpoints', \"Remove All Breakpoints\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miRemoveAllBreakpoints', comment: ['&& denotes a mnemonic'] }, \"Remove &&All Breakpoints\"),\n\t\t\t},\n\t\t\tf1: true,\n\t\t\ticon: icons.breakpointsRemoveAll,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 30,\n\t\t\t\twhen: ContextKeyExpr.equals('view', BREAKPOINTS_VIEW_ID)\n\t\t\t}, {\n\t\t\t\tid: MenuId.DebugBreakpointsContext,\n\t\t\t\tgroup: '3_modification',\n\t\t\t\torder: 20,\n\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_BREAKPOINTS_EXIST, CONTEXT_BREAKPOINT_ITEM_TYPE.notEqualsTo('exceptionBreakpoint'))\n\t\t\t}, {\n\t\t\t\tid: MenuId.MenubarDebugMenu,\n\t\t\t\tgroup: '5_breakpoints',\n\t\t\t\torder: 3,\n\t\t\t\twhen: CONTEXT_DEBUGGERS_AVAILABLE\n\t\t\t}]\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tdebugService.removeBreakpoints();\n\t\tdebugService.removeFunctionBreakpoints();\n\t\tdebugService.removeDataBreakpoints();\n\t\tdebugService.removeInstructionBreakpoints();\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.debug.viewlet.action.enableAllBreakpoints',\n\t\t\ttitle: {\n\t\t\t\t...localize2('enableAllBreakpoints', \"Enable All Breakpoints\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miEnableAllBreakpoints', comment: ['&& denotes a mnemonic'] }, \"&&Enable All Breakpoints\"),\n\t\t\t},\n\t\t\tf1: true,\n\t\t\tprecondition: CONTEXT_DEBUGGERS_AVAILABLE,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.DebugBreakpointsContext,\n\t\t\t\tgroup: 'z_commands',\n\t\t\t\torder: 10,\n\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_BREAKPOINTS_EXIST, CONTEXT_BREAKPOINT_ITEM_TYPE.notEqualsTo('exceptionBreakpoint'))\n\t\t\t}, {\n\t\t\t\tid: MenuId.MenubarDebugMenu,\n\t\t\t\tgroup: '5_breakpoints',\n\t\t\t\torder: 1,\n\t\t\t\twhen: CONTEXT_DEBUGGERS_AVAILABLE\n\t\t\t}]\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tawait debugService.enableOrDisableBreakpoints(true);\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.debug.viewlet.action.disableAllBreakpoints',\n\t\t\ttitle: {\n\t\t\t\t...localize2('disableAllBreakpoints', \"Disable All Breakpoints\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miDisableAllBreakpoints', comment: ['&& denotes a mnemonic'] }, \"Disable A&&ll Breakpoints\"),\n\t\t\t},\n\t\t\tf1: true,\n\t\t\tprecondition: CONTEXT_DEBUGGERS_AVAILABLE,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.DebugBreakpointsContext,\n\t\t\t\tgroup: 'z_commands',\n\t\t\t\torder: 20,\n\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_BREAKPOINTS_EXIST, CONTEXT_BREAKPOINT_ITEM_TYPE.notEqualsTo('exceptionBreakpoint'))\n\t\t\t}, {\n\t\t\t\tid: MenuId.MenubarDebugMenu,\n\t\t\t\tgroup: '5_breakpoints',\n\t\t\t\torder: 2,\n\t\t\t\twhen: CONTEXT_DEBUGGERS_AVAILABLE\n\t\t\t}]\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tawait debugService.enableOrDisableBreakpoints(false);\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.debug.viewlet.action.reapplyBreakpointsAction',\n\t\t\ttitle: localize2('reapplyAllBreakpoints', 'Reapply All Breakpoints'),\n\t\t\tf1: true,\n\t\t\tprecondition: CONTEXT_IN_DEBUG_MODE,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.DebugBreakpointsContext,\n\t\t\t\tgroup: 'z_commands',\n\t\t\t\torder: 30,\n\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_BREAKPOINTS_EXIST, CONTEXT_BREAKPOINT_ITEM_TYPE.notEqualsTo('exceptionBreakpoint'))\n\t\t\t}]\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tawait debugService.setBreakpointsActivated(true);\n\t}\n});\n\nregisterAction2(class extends ViewAction<BreakpointsView> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'debug.editBreakpoint',\n\t\t\tviewId: BREAKPOINTS_VIEW_ID,\n\t\t\ttitle: localize('editCondition', \"Edit Condition...\"),\n\t\t\ticon: Codicon.edit,\n\t\t\tprecondition: CONTEXT_BREAKPOINT_SUPPORTS_CONDITION,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.DebugBreakpointsContext,\n\t\t\t\twhen: CONTEXT_BREAKPOINT_ITEM_TYPE.notEqualsTo('functionBreakpoint'),\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 10\n\t\t\t}, {\n\t\t\t\tid: MenuId.DebugBreakpointsContext,\n\t\t\t\tgroup: 'inline',\n\t\t\t\torder: 10\n\t\t\t}]\n\t\t});\n\t}\n\n\tasync runInView(accessor: ServicesAccessor, view: BreakpointsView, breakpoint: ExceptionBreakpoint | Breakpoint | FunctionBreakpoint | DataBreakpoint): Promise<void> {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tif (breakpoint instanceof Breakpoint) {\n\t\t\tconst editor = await openBreakpointSource(breakpoint, false, false, true, debugService, editorService);\n\t\t\tif (editor) {\n\t\t\t\tconst codeEditor = editor.getControl();\n\t\t\t\tif (isCodeEditor(codeEditor)) {\n\t\t\t\t\tcodeEditor.getContribution<IBreakpointEditorContribution>(BREAKPOINT_EDITOR_CONTRIBUTION_ID)?.showBreakpointWidget(breakpoint.lineNumber, breakpoint.column);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (breakpoint instanceof FunctionBreakpoint) {\n\t\t\tconst contextMenuService = accessor.get(IContextMenuService);\n\t\t\tconst actions: Action[] = [new Action('breakpoint.editCondition', localize('editCondition', \"Edit Condition...\"), undefined, true, async () => view.renderInputBox({ breakpoint, type: 'condition' })),\n\t\t\tnew Action('breakpoint.editCondition', localize('editHitCount', \"Edit Hit Count...\"), undefined, true, async () => view.renderInputBox({ breakpoint, type: 'hitCount' }))];\n\t\t\tconst domNode = breakpointIdToActionBarDomeNode.get(breakpoint.getId());\n\n\t\t\tif (domNode) {\n\t\t\t\tcontextMenuService.showContextMenu({\n\t\t\t\t\tgetActions: () => actions,\n\t\t\t\t\tgetAnchor: () => domNode,\n\t\t\t\t\tonHide: () => dispose(actions)\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tview.renderInputBox({ breakpoint, type: 'condition' });\n\t\t}\n\t}\n});\n\n\nregisterAction2(class extends ViewAction<BreakpointsView> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'debug.editFunctionBreakpoint',\n\t\t\tviewId: BREAKPOINTS_VIEW_ID,\n\t\t\ttitle: localize('editBreakpoint', \"Edit Function Condition...\"),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.DebugBreakpointsContext,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 10,\n\t\t\t\twhen: CONTEXT_BREAKPOINT_ITEM_TYPE.isEqualTo('functionBreakpoint')\n\t\t\t}]\n\t\t});\n\t}\n\n\trunInView(_accessor: ServicesAccessor, view: BreakpointsView, breakpoint: IFunctionBreakpoint) {\n\t\tview.renderInputBox({ breakpoint, type: 'name' });\n\t}\n});\n\nregisterAction2(class extends ViewAction<BreakpointsView> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'debug.editFunctionBreakpointHitCount',\n\t\t\tviewId: BREAKPOINTS_VIEW_ID,\n\t\t\ttitle: localize('editHitCount', \"Edit Hit Count...\"),\n\t\t\tprecondition: CONTEXT_BREAKPOINT_SUPPORTS_CONDITION,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.DebugBreakpointsContext,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 20,\n\t\t\t\twhen: ContextKeyExpr.or(CONTEXT_BREAKPOINT_ITEM_TYPE.isEqualTo('functionBreakpoint'), CONTEXT_BREAKPOINT_ITEM_TYPE.isEqualTo('dataBreakpoint'))\n\t\t\t}]\n\t\t});\n\t}\n\n\trunInView(_accessor: ServicesAccessor, view: BreakpointsView, breakpoint: IFunctionBreakpoint) {\n\t\tview.renderInputBox({ breakpoint, type: 'hitCount' });\n\t}\n});\n\nregisterAction2(class extends ViewAction<BreakpointsView> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'debug.editBreakpointMode',\n\t\t\tviewId: BREAKPOINTS_VIEW_ID,\n\t\t\ttitle: localize('editMode', \"Edit Mode...\"),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.DebugBreakpointsContext,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 20,\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tCONTEXT_BREAKPOINT_HAS_MODES,\n\t\t\t\t\tContextKeyExpr.or(CONTEXT_BREAKPOINT_ITEM_TYPE.isEqualTo('breakpoint'), CONTEXT_BREAKPOINT_ITEM_TYPE.isEqualTo('exceptionBreakpoint'), CONTEXT_BREAKPOINT_ITEM_TYPE.isEqualTo('instructionBreakpoint'))\n\t\t\t\t)\n\t\t\t}]\n\t\t});\n\t}\n\n\tasync runInView(accessor: ServicesAccessor, view: BreakpointsView, breakpoint: IBreakpoint) {\n\t\tconst kind = breakpoint instanceof Breakpoint ? 'source' : breakpoint instanceof InstructionBreakpoint ? 'instruction' : 'exception';\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst modes = debugService.getModel().getBreakpointModes(kind);\n\t\tconst picked = await accessor.get(IQuickInputService).pick(\n\t\t\tmodes.map(mode => ({ label: mode.label, description: mode.description, mode: mode.mode })),\n\t\t\t{ placeHolder: localize('selectBreakpointMode', \"Select Breakpoint Mode\") }\n\t\t);\n\n\t\tif (!picked) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (kind === 'source') {\n\t\t\tconst data = new Map<string, IBreakpointUpdateData>();\n\t\t\tdata.set(breakpoint.getId(), { mode: picked.mode, modeLabel: picked.label });\n\t\t\tdebugService.updateBreakpoints(breakpoint.originalUri, data, false);\n\t\t} else if (breakpoint instanceof InstructionBreakpoint) {\n\t\t\tdebugService.removeInstructionBreakpoints(breakpoint.instructionReference, breakpoint.offset);\n\t\t\tdebugService.addInstructionBreakpoint({ ...breakpoint.toJSON(), mode: picked.mode, modeLabel: picked.label });\n\t\t} else if (breakpoint instanceof ExceptionBreakpoint) {\n\t\t\tbreakpoint.mode = picked.mode;\n\t\t\tbreakpoint.modeLabel = picked.label;\n\t\t\tdebugService.setExceptionBreakpointCondition(breakpoint, breakpoint.condition); // no-op to trigger a re-send\n\t\t}\n\t}\n});\n"],
  "mappings": "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",
  "names": []
}
