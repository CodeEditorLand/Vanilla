{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/disassemblyView.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\t$,\n\ttype Dimension,\n\taddStandardDisposableListener,\n\tappend,\n} from \"../../../../base/browser/dom.js\";\nimport { PixelRatio } from \"../../../../base/browser/pixelRatio.js\";\nimport type { IListAccessibilityProvider } from \"../../../../base/browser/ui/list/listWidget.js\";\nimport type {\n\tITableRenderer,\n\tITableVirtualDelegate,\n} from \"../../../../base/browser/ui/table/table.js\";\nimport { binarySearch2 } from \"../../../../base/common/arrays.js\";\nimport type { Color } from \"../../../../base/common/color.js\";\nimport { Emitter } from \"../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n\tdispose,\n} from \"../../../../base/common/lifecycle.js\";\nimport { isAbsolute } from \"../../../../base/common/path.js\";\nimport { Constants } from \"../../../../base/common/uint.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { applyFontInfo } from \"../../../../editor/browser/config/domFontInfo.js\";\nimport { isCodeEditor } from \"../../../../editor/browser/editorBrowser.js\";\nimport { BareFontInfo } from \"../../../../editor/common/config/fontInfo.js\";\nimport { type IRange, Range } from \"../../../../editor/common/core/range.js\";\nimport { StringBuilder } from \"../../../../editor/common/core/stringBuilder.js\";\nimport type { ITextModel } from \"../../../../editor/common/model.js\";\nimport { ITextModelService } from \"../../../../editor/common/services/resolverService.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { TextEditorSelectionRevealType } from \"../../../../platform/editor/common/editor.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { WorkbenchTable } from \"../../../../platform/list/browser/listService.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { IStorageService } from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { editorBackground } from \"../../../../platform/theme/common/colorRegistry.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport { EditorPane } from \"../../../browser/parts/editor/editorPane.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport type { IEditorGroup } from \"../../../services/editor/common/editorGroupsService.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport {\n\tCONTEXT_LANGUAGE_SUPPORTS_DISASSEMBLE_REQUEST,\n\tDISASSEMBLY_VIEW_ID,\n\ttype IDebugConfiguration,\n\tIDebugService,\n\ttype IDebugSession,\n\ttype IInstructionBreakpoint,\n\tState,\n} from \"../common/debug.js\";\nimport { InstructionBreakpoint } from \"../common/debugModel.js\";\nimport { getUriFromSource } from \"../common/debugSource.js\";\nimport { isUri, sourcesEqual } from \"../common/debugUtils.js\";\nimport {\n\tfocusedStackFrameColor,\n\ttopStackFrameColor,\n} from \"./callStackEditorContribution.js\";\nimport * as icons from \"./debugIcons.js\";\n\ninterface IDisassembledInstructionEntry {\n\tallowBreakpoint: boolean;\n\tisBreakpointSet: boolean;\n\tisBreakpointEnabled: boolean;\n\t/** Instruction reference from the DA */\n\tinstructionReference: string;\n\t/** Offset from the instructionReference that's the basis for the `instructionOffset` */\n\tinstructionReferenceOffset: number;\n\t/** The number of instructions (+/-) away from the instructionReference and instructionReferenceOffset this instruction lies */\n\tinstructionOffset: number;\n\t/** Whether this is the first instruction on the target line. */\n\tshowSourceLocation?: boolean;\n\t/** Original instruction from the debugger */\n\tinstruction: DebugProtocol.DisassembledInstruction;\n\t/** Parsed instruction address */\n\taddress: bigint;\n}\n\n// Special entry as a placeholer when disassembly is not available\nconst disassemblyNotAvailable: IDisassembledInstructionEntry = {\n\tallowBreakpoint: false,\n\tisBreakpointSet: false,\n\tisBreakpointEnabled: false,\n\tinstructionReference: \"\",\n\tinstructionOffset: 0,\n\tinstructionReferenceOffset: 0,\n\taddress: 0n,\n\tinstruction: {\n\t\taddress: \"-1\",\n\t\tinstruction: localize(\n\t\t\t\"instructionNotAvailable\",\n\t\t\t\"Disassembly not available.\",\n\t\t),\n\t},\n};\n\nexport class DisassemblyView extends EditorPane {\n\tprivate static readonly NUM_INSTRUCTIONS_TO_LOAD = 50;\n\n\t// Used in instruction renderer\n\tprivate _fontInfo: BareFontInfo | undefined;\n\tprivate _disassembledInstructions:\n\t\t| WorkbenchTable<IDisassembledInstructionEntry>\n\t\t| undefined;\n\tprivate _onDidChangeStackFrame: Emitter<void>;\n\tprivate _previousDebuggingState: State;\n\tprivate _instructionBpList: readonly IInstructionBreakpoint[] = [];\n\tprivate _enableSourceCodeRender = true;\n\tprivate _loadingLock = false;\n\tprivate readonly _referenceToMemoryAddress = new Map<string, bigint>();\n\n\tconstructor(\n\t\tgroup: IEditorGroup,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IDebugService private readonly _debugService: IDebugService,\n\t) {\n\t\tsuper(DISASSEMBLY_VIEW_ID, group, telemetryService, themeService, storageService);\n\n\t\tthis._disassembledInstructions = undefined;\n\t\tthis._onDidChangeStackFrame = this._register(new Emitter<void>({ leakWarningThreshold: 1000 }));\n\t\tthis._previousDebuggingState = _debugService.state;\n\t\tthis._register(_configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('debug')) {\n\t\t\t\t// show/hide source code requires changing height which WorkbenchTable doesn't support dynamic height, thus force a total reload.\n\t\t\t\tconst newValue = this._configurationService.getValue<IDebugConfiguration>('debug').disassemblyView.showSourceCode;\n\t\t\t\tif (this._enableSourceCodeRender !== newValue) {\n\t\t\t\t\tthis._enableSourceCodeRender = newValue;\n\t\t\t\t\t// todo: trigger rerender\n\t\t\t\t} else {\n\t\t\t\t\tthis._disassembledInstructions?.rerender();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tget fontInfo() {\n\t\tif (!this._fontInfo) {\n\t\t\tthis._fontInfo = this.createFontInfo();\n\n\t\t\tthis._register(\n\t\t\t\tthis._configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\t\tif (e.affectsConfiguration(\"editor\")) {\n\t\t\t\t\t\tthis._fontInfo = this.createFontInfo();\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\treturn this._fontInfo;\n\t}\n\n\tprivate createFontInfo() {\n\t\treturn BareFontInfo.createFromRawSettings(\n\t\t\tthis._configurationService.getValue(\"editor\"),\n\t\t\tPixelRatio.getInstance(this.window).value,\n\t\t);\n\t}\n\n\tget currentInstructionAddresses() {\n\t\treturn this._debugService\n\t\t\t.getModel()\n\t\t\t.getSessions(false)\n\t\t\t.map((session) => session.getAllThreads())\n\t\t\t.reduce((prev, curr) => prev.concat(curr), [])\n\t\t\t.map((thread) => thread.getTopStackFrame())\n\t\t\t.map((frame) => frame?.instructionPointerReference)\n\t\t\t.map((ref) => (ref ? this.getReferenceAddress(ref) : undefined));\n\t}\n\n\t// Instruction reference of the top stack frame of the focused stack\n\tget focusedCurrentInstructionReference() {\n\t\treturn this._debugService\n\t\t\t.getViewModel()\n\t\t\t.focusedStackFrame?.thread.getTopStackFrame()\n\t\t\t?.instructionPointerReference;\n\t}\n\n\tget focusedCurrentInstructionAddress() {\n\t\tconst ref = this.focusedCurrentInstructionReference;\n\t\treturn ref ? this.getReferenceAddress(ref) : undefined;\n\t}\n\n\tget focusedInstructionReference() {\n\t\treturn this._debugService.getViewModel().focusedStackFrame\n\t\t\t?.instructionPointerReference;\n\t}\n\n\tget focusedInstructionAddress() {\n\t\tconst ref = this.focusedInstructionReference;\n\t\treturn ref ? this.getReferenceAddress(ref) : undefined;\n\t}\n\n\tget isSourceCodeRender() {\n\t\treturn this._enableSourceCodeRender;\n\t}\n\n\tget debugSession(): IDebugSession | undefined {\n\t\treturn this._debugService.getViewModel().focusedSession;\n\t}\n\n\tget onDidChangeStackFrame() {\n\t\treturn this._onDidChangeStackFrame.event;\n\t}\n\n\tget focusedAddressAndOffset() {\n\t\tconst element = this._disassembledInstructions?.getFocusedElements()[0];\n\t\tif (!element) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst reference = element.instructionReference;\n\t\tconst offset = Number(\n\t\t\telement.address - this.getReferenceAddress(reference)!,\n\t\t);\n\t\treturn { reference, offset, address: element.address };\n\t}\n\n\tprotected createEditor(parent: HTMLElement): void {\n\t\tthis._enableSourceCodeRender =\n\t\t\tthis._configurationService.getValue<IDebugConfiguration>(\n\t\t\t\t\"debug\",\n\t\t\t).disassemblyView.showSourceCode;\n\t\tconst lineHeight = this.fontInfo.lineHeight;\n\t\tconst thisOM = this;\n\t\tconst delegate = new (class\n\t\t\timplements ITableVirtualDelegate<IDisassembledInstructionEntry>\n\t\t{\n\t\t\theaderRowHeight = 0; // No header\n\t\t\tgetHeight(row: IDisassembledInstructionEntry): number {\n\t\t\t\tif (\n\t\t\t\t\tthisOM.isSourceCodeRender &&\n\t\t\t\t\trow.showSourceLocation &&\n\t\t\t\t\trow.instruction.location?.path &&\n\t\t\t\t\trow.instruction.line\n\t\t\t\t) {\n\t\t\t\t\t// instruction line + source lines\n\t\t\t\t\tif (row.instruction.endLine) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\tlineHeight *\n\t\t\t\t\t\t\t(row.instruction.endLine - row.instruction.line + 2)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// source is only a single line.\n\t\t\t\t\t\treturn lineHeight * 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// just instruction line\n\t\t\t\treturn lineHeight;\n\t\t\t}\n\t\t})();\n\n\t\tconst instructionRenderer = this._register(\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\tInstructionRenderer,\n\t\t\t\tthis,\n\t\t\t),\n\t\t);\n\n\t\tthis._disassembledInstructions = this._register(\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\tWorkbenchTable,\n\t\t\t\t\"DisassemblyView\",\n\t\t\t\tparent,\n\t\t\t\tdelegate,\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t\ttooltip: \"\",\n\t\t\t\t\t\tweight: 0,\n\t\t\t\t\t\tminimumWidth: this.fontInfo.lineHeight,\n\t\t\t\t\t\tmaximumWidth: this.fontInfo.lineHeight,\n\t\t\t\t\t\ttemplateId: BreakpointRenderer.TEMPLATE_ID,\n\t\t\t\t\t\tproject(\n\t\t\t\t\t\t\trow: IDisassembledInstructionEntry,\n\t\t\t\t\t\t): IDisassembledInstructionEntry {\n\t\t\t\t\t\t\treturn row;\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\"disassemblyTableColumnLabel\",\n\t\t\t\t\t\t\t\"instructions\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttooltip: \"\",\n\t\t\t\t\t\tweight: 0.3,\n\t\t\t\t\t\ttemplateId: InstructionRenderer.TEMPLATE_ID,\n\t\t\t\t\t\tproject(\n\t\t\t\t\t\t\trow: IDisassembledInstructionEntry,\n\t\t\t\t\t\t): IDisassembledInstructionEntry {\n\t\t\t\t\t\t\treturn row;\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\tthis._instantiationService.createInstance(\n\t\t\t\t\t\tBreakpointRenderer,\n\t\t\t\t\t\tthis,\n\t\t\t\t\t),\n\t\t\t\t\tinstructionRenderer,\n\t\t\t\t],\n\t\t\t\t{\n\t\t\t\t\tidentityProvider: {\n\t\t\t\t\t\tgetId: (e: IDisassembledInstructionEntry) =>\n\t\t\t\t\t\t\te.instruction.address,\n\t\t\t\t\t},\n\t\t\t\t\thorizontalScrolling: false,\n\t\t\t\t\toverrideStyles: {\n\t\t\t\t\t\tlistBackground: editorBackground,\n\t\t\t\t\t},\n\t\t\t\t\tmultipleSelectionSupport: false,\n\t\t\t\t\tsetRowLineHeight: false,\n\t\t\t\t\topenOnSingleClick: false,\n\t\t\t\t\taccessibilityProvider: new AccessibilityProvider(),\n\t\t\t\t\tmouseSupport: false,\n\t\t\t\t},\n\t\t\t),\n\t\t) as WorkbenchTable<IDisassembledInstructionEntry>;\n\n\t\tthis._disassembledInstructions.domNode.classList.add(\n\t\t\t\"disassembly-view\",\n\t\t);\n\n\t\tif (this.focusedInstructionReference) {\n\t\t\tthis.reloadDisassembly(this.focusedInstructionReference, 0);\n\t\t}\n\n\t\tthis._register(\n\t\t\tthis._disassembledInstructions.onDidScroll((e) => {\n\t\t\t\tif (this._loadingLock) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (e.oldScrollTop > e.scrollTop && e.scrollTop < e.height) {\n\t\t\t\t\tthis._loadingLock = true;\n\t\t\t\t\tconst prevTop = Math.floor(\n\t\t\t\t\t\te.scrollTop / this.fontInfo.lineHeight,\n\t\t\t\t\t);\n\t\t\t\t\tthis.scrollUp_LoadDisassembledInstructions(\n\t\t\t\t\t\tDisassemblyView.NUM_INSTRUCTIONS_TO_LOAD,\n\t\t\t\t\t).then((loaded) => {\n\t\t\t\t\t\tif (loaded > 0) {\n\t\t\t\t\t\t\tthis._disassembledInstructions!.reveal(\n\t\t\t\t\t\t\t\tprevTop + loaded,\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._loadingLock = false;\n\t\t\t\t\t});\n\t\t\t\t} else if (\n\t\t\t\t\te.oldScrollTop < e.scrollTop &&\n\t\t\t\t\te.scrollTop + e.height > e.scrollHeight - e.height\n\t\t\t\t) {\n\t\t\t\t\tthis._loadingLock = true;\n\t\t\t\t\tthis.scrollDown_LoadDisassembledInstructions(\n\t\t\t\t\t\tDisassemblyView.NUM_INSTRUCTIONS_TO_LOAD,\n\t\t\t\t\t).then(() => {\n\t\t\t\t\t\tthis._loadingLock = false;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis._debugService\n\t\t\t\t.getViewModel()\n\t\t\t\t.onDidFocusStackFrame(({ stackFrame }) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis._disassembledInstructions &&\n\t\t\t\t\t\tstackFrame?.instructionPointerReference\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.goToInstructionAndOffset(\n\t\t\t\t\t\t\tstackFrame.instructionPointerReference,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tthis._onDidChangeStackFrame.fire();\n\t\t\t\t}),\n\t\t);\n\n\t\t// refresh breakpoints view\n\t\tthis._register(\n\t\t\tthis._debugService.getModel().onDidChangeBreakpoints((bpEvent) => {\n\t\t\t\tif (bpEvent && this._disassembledInstructions) {\n\t\t\t\t\t// draw viewable BP\n\t\t\t\t\tlet changed = false;\n\t\t\t\t\tbpEvent.added?.forEach((bp) => {\n\t\t\t\t\t\tif (bp instanceof InstructionBreakpoint) {\n\t\t\t\t\t\t\tconst index = this.getIndexFromReferenceAndOffset(\n\t\t\t\t\t\t\t\tbp.instructionReference,\n\t\t\t\t\t\t\t\tbp.offset,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\t\t\tthis._disassembledInstructions!.row(\n\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t).isBreakpointSet = true;\n\t\t\t\t\t\t\t\tthis._disassembledInstructions!.row(\n\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t).isBreakpointEnabled = bp.enabled;\n\t\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tbpEvent.removed?.forEach((bp) => {\n\t\t\t\t\t\tif (bp instanceof InstructionBreakpoint) {\n\t\t\t\t\t\t\tconst index = this.getIndexFromReferenceAndOffset(\n\t\t\t\t\t\t\t\tbp.instructionReference,\n\t\t\t\t\t\t\t\tbp.offset,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\t\t\tthis._disassembledInstructions!.row(\n\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t).isBreakpointSet = false;\n\t\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tbpEvent.changed?.forEach((bp) => {\n\t\t\t\t\t\tif (bp instanceof InstructionBreakpoint) {\n\t\t\t\t\t\t\tconst index = this.getIndexFromReferenceAndOffset(\n\t\t\t\t\t\t\t\tbp.instructionReference,\n\t\t\t\t\t\t\t\tbp.offset,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tthis._disassembledInstructions!.row(index)\n\t\t\t\t\t\t\t\t\t\t.isBreakpointEnabled !== bp.enabled\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tthis._disassembledInstructions!.row(\n\t\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\t).isBreakpointEnabled = bp.enabled;\n\t\t\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t// get an updated list so that items beyond the current range would render when reached.\n\t\t\t\t\tthis._instructionBpList = this._debugService\n\t\t\t\t\t\t.getModel()\n\t\t\t\t\t\t.getInstructionBreakpoints();\n\n\t\t\t\t\t// breakpoints restored from a previous session can be based on memory\n\t\t\t\t\t// references that may no longer exist in the current session. Request\n\t\t\t\t\t// those instructions to be loaded so the BP can be displayed.\n\t\t\t\t\tfor (const bp of this._instructionBpList) {\n\t\t\t\t\t\tthis.primeMemoryReference(bp.instructionReference);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\tthis._onDidChangeStackFrame.fire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis._debugService.onDidChangeState((e) => {\n\t\t\t\tif (\n\t\t\t\t\t(e === State.Running || e === State.Stopped) &&\n\t\t\t\t\tthis._previousDebuggingState !== State.Running &&\n\t\t\t\t\tthis._previousDebuggingState !== State.Stopped\n\t\t\t\t) {\n\t\t\t\t\t// Just started debugging, clear the view\n\t\t\t\t\tthis.clear();\n\t\t\t\t\tthis._enableSourceCodeRender =\n\t\t\t\t\t\tthis._configurationService.getValue<IDebugConfiguration>(\n\t\t\t\t\t\t\t\"debug\",\n\t\t\t\t\t\t).disassemblyView.showSourceCode;\n\t\t\t\t}\n\n\t\t\t\tthis._previousDebuggingState = e;\n\t\t\t\tthis._onDidChangeStackFrame.fire();\n\t\t\t}),\n\t\t);\n\t}\n\n\tlayout(dimension: Dimension): void {\n\t\tthis._disassembledInstructions?.layout(dimension.height);\n\t}\n\n\tasync goToInstructionAndOffset(\n\t\tinstructionReference: string,\n\t\toffset: number,\n\t\tfocus?: boolean,\n\t) {\n\t\tlet addr = this._referenceToMemoryAddress.get(instructionReference);\n\t\tif (addr === undefined) {\n\t\t\tawait this.loadDisassembledInstructions(\n\t\t\t\tinstructionReference,\n\t\t\t\t0,\n\t\t\t\t-DisassemblyView.NUM_INSTRUCTIONS_TO_LOAD,\n\t\t\t\tDisassemblyView.NUM_INSTRUCTIONS_TO_LOAD * 2,\n\t\t\t);\n\t\t\taddr = this._referenceToMemoryAddress.get(instructionReference);\n\t\t}\n\n\t\tif (addr) {\n\t\t\tthis.goToAddress(addr + BigInt(offset), focus);\n\t\t}\n\t}\n\n\t/** Gets the address associated with the instruction reference. */\n\tgetReferenceAddress(instructionReference: string) {\n\t\treturn this._referenceToMemoryAddress.get(instructionReference);\n\t}\n\n\t/**\n\t * Go to the address provided. If no address is provided, reveal the address of the currently focused stack frame. Returns false if that address is not available.\n\t */\n\tprivate goToAddress(address: bigint, focus?: boolean): boolean {\n\t\tif (!this._disassembledInstructions) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!address) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst index = this.getIndexFromAddress(address);\n\t\tif (index >= 0) {\n\t\t\tthis._disassembledInstructions.reveal(index);\n\n\t\t\tif (focus) {\n\t\t\t\tthis._disassembledInstructions.domFocus();\n\t\t\t\tthis._disassembledInstructions.setFocus([index]);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate async scrollUp_LoadDisassembledInstructions(\n\t\tinstructionCount: number,\n\t): Promise<number> {\n\t\tconst first = this._disassembledInstructions?.row(0);\n\t\tif (first) {\n\t\t\treturn this.loadDisassembledInstructions(\n\t\t\t\tfirst.instructionReference,\n\t\t\t\tfirst.instructionReferenceOffset,\n\t\t\t\tfirst.instructionOffset - instructionCount,\n\t\t\t\tinstructionCount,\n\t\t\t);\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\tprivate async scrollDown_LoadDisassembledInstructions(\n\t\tinstructionCount: number,\n\t): Promise<number> {\n\t\tconst last = this._disassembledInstructions?.row(\n\t\t\tthis._disassembledInstructions?.length - 1,\n\t\t);\n\t\tif (last) {\n\t\t\treturn this.loadDisassembledInstructions(\n\t\t\t\tlast.instructionReference,\n\t\t\t\tlast.instructionReferenceOffset,\n\t\t\t\tlast.instructionOffset + 1,\n\t\t\t\tinstructionCount,\n\t\t\t);\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Sets the memory reference address. We don't just loadDisassembledInstructions\n\t * for this, since we can't really deal with discontiguous ranges (we can't\n\t * detect _if_ a range is discontiguous since we don't know how much memory\n\t * comes between instructions.)\n\t */\n\tprivate async primeMemoryReference(instructionReference: string) {\n\t\tif (this._referenceToMemoryAddress.has(instructionReference)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst s = await this.debugSession?.disassemble(\n\t\t\tinstructionReference,\n\t\t\t0,\n\t\t\t0,\n\t\t\t1,\n\t\t);\n\t\tif (s && s.length > 0) {\n\t\t\ttry {\n\t\t\t\tthis._referenceToMemoryAddress.set(\n\t\t\t\t\tinstructionReference,\n\t\t\t\t\tBigInt(s[0].address),\n\t\t\t\t);\n\t\t\t\treturn true;\n\t\t\t} catch {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/** Loads disasembled instructions. Returns the number of instructions that were loaded. */\n\tprivate async loadDisassembledInstructions(\n\t\tinstructionReference: string,\n\t\toffset: number,\n\t\tinstructionOffset: number,\n\t\tinstructionCount: number,\n\t): Promise<number> {\n\t\tconst session = this.debugSession;\n\t\tconst resultEntries = await session?.disassemble(\n\t\t\tinstructionReference,\n\t\t\toffset,\n\t\t\tinstructionOffset,\n\t\t\tinstructionCount,\n\t\t);\n\n\t\t// Ensure we always load the baseline instructions so we know what address the instructionReference refers to.\n\t\tif (\n\t\t\t!this._referenceToMemoryAddress.has(instructionReference) &&\n\t\t\tinstructionOffset !== 0\n\t\t) {\n\t\t\tawait this.loadDisassembledInstructions(\n\t\t\t\tinstructionReference,\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\tDisassemblyView.NUM_INSTRUCTIONS_TO_LOAD,\n\t\t\t);\n\t\t}\n\n\t\tif (session && resultEntries && this._disassembledInstructions) {\n\t\t\tconst newEntries: IDisassembledInstructionEntry[] = [];\n\n\t\t\tlet lastLocation: DebugProtocol.Source | undefined;\n\t\t\tlet lastLine: IRange | undefined;\n\t\t\tfor (let i = 0; i < resultEntries.length; i++) {\n\t\t\t\tconst instruction = resultEntries[i];\n\t\t\t\tconst thisInstructionOffset = instructionOffset + i;\n\n\t\t\t\t// Forward fill the missing location as detailed in the DAP spec.\n\t\t\t\tif (instruction.location) {\n\t\t\t\t\tlastLocation = instruction.location;\n\t\t\t\t\tlastLine = undefined;\n\t\t\t\t}\n\n\t\t\t\tif (instruction.line) {\n\t\t\t\t\tconst currentLine: IRange = {\n\t\t\t\t\t\tstartLineNumber: instruction.line,\n\t\t\t\t\t\tstartColumn: instruction.column ?? 0,\n\t\t\t\t\t\tendLineNumber: instruction.endLine ?? instruction.line,\n\t\t\t\t\t\tendColumn: instruction.endColumn ?? 0,\n\t\t\t\t\t};\n\n\t\t\t\t\t// Add location only to the first unique range. This will give the appearance of grouping of instructions.\n\t\t\t\t\tif (!Range.equalsRange(currentLine, lastLine ?? null)) {\n\t\t\t\t\t\tlastLine = currentLine;\n\t\t\t\t\t\tinstruction.location = lastLocation;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet address: bigint;\n\t\t\t\ttry {\n\t\t\t\t\taddress = BigInt(instruction.address);\n\t\t\t\t} catch {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t`Could not parse disassembly address ${instruction.address} (in ${JSON.stringify(instruction)})`,\n\t\t\t\t\t);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst entry: IDisassembledInstructionEntry = {\n\t\t\t\t\tallowBreakpoint: true,\n\t\t\t\t\tisBreakpointSet: false,\n\t\t\t\t\tisBreakpointEnabled: false,\n\t\t\t\t\tinstructionReference,\n\t\t\t\t\tinstructionReferenceOffset: offset,\n\t\t\t\t\tinstructionOffset: thisInstructionOffset,\n\t\t\t\t\tinstruction,\n\t\t\t\t\taddress,\n\t\t\t\t};\n\n\t\t\t\tnewEntries.push(entry);\n\n\t\t\t\t// if we just loaded the first instruction for this reference, mark its address.\n\t\t\t\tif (offset === 0 && thisInstructionOffset === 0) {\n\t\t\t\t\tthis._referenceToMemoryAddress.set(\n\t\t\t\t\t\tinstructionReference,\n\t\t\t\t\t\taddress,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newEntries.length === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tconst refBaseAddress =\n\t\t\t\tthis._referenceToMemoryAddress.get(instructionReference);\n\t\t\tconst bps = this._instructionBpList.map((p) => {\n\t\t\t\tconst base = this._referenceToMemoryAddress.get(\n\t\t\t\t\tp.instructionReference,\n\t\t\t\t);\n\t\t\t\tif (!base) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tenabled: p.enabled,\n\t\t\t\t\taddress: base + BigInt(p.offset || 0),\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tif (refBaseAddress !== undefined) {\n\t\t\t\tfor (const entry of newEntries) {\n\t\t\t\t\tconst bp = bps.find((p) => p?.address === entry.address);\n\t\t\t\t\tif (bp) {\n\t\t\t\t\t\tentry.isBreakpointSet = true;\n\t\t\t\t\t\tentry.isBreakpointEnabled = bp.enabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst da = this._disassembledInstructions;\n\t\t\tif (\n\t\t\t\tda.length === 1 &&\n\t\t\t\tthis._disassembledInstructions.row(0) ===\n\t\t\t\t\tdisassemblyNotAvailable\n\t\t\t) {\n\t\t\t\tda.splice(0, 1);\n\t\t\t}\n\n\t\t\tconst firstAddr = newEntries[0].address;\n\t\t\tconst lastAddr = newEntries[newEntries.length - 1].address;\n\n\t\t\tconst startN = binarySearch2(da.length, (i) =>\n\t\t\t\tNumber(da.row(i).address - firstAddr),\n\t\t\t);\n\t\t\tconst start = startN < 0 ? ~startN : startN;\n\t\t\tconst endN = binarySearch2(da.length, (i) =>\n\t\t\t\tNumber(da.row(i).address - lastAddr),\n\t\t\t);\n\t\t\tconst end = endN < 0 ? ~endN : endN + 1;\n\t\t\tconst toDelete = end - start;\n\n\t\t\t// Go through everything we're about to add, and only show the source\n\t\t\t// location if it's different from the previous one, \"grouping\" instructions by line\n\t\t\tlet lastLocated: undefined | DebugProtocol.DisassembledInstruction;\n\t\t\tfor (let i = start - 1; i >= 0; i--) {\n\t\t\t\tconst { instruction } = da.row(i);\n\t\t\t\tif (instruction.location && instruction.line !== undefined) {\n\t\t\t\t\tlastLocated = instruction;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst shouldShowLocation = (\n\t\t\t\tinstruction: DebugProtocol.DisassembledInstruction,\n\t\t\t) =>\n\t\t\t\tinstruction.line !== undefined &&\n\t\t\t\tinstruction.location !== undefined &&\n\t\t\t\t(!lastLocated ||\n\t\t\t\t\t!sourcesEqual(instruction.location, lastLocated.location) ||\n\t\t\t\t\tinstruction.line !== lastLocated.line);\n\n\t\t\tfor (const entry of newEntries) {\n\t\t\t\tif (shouldShowLocation(entry.instruction)) {\n\t\t\t\t\tentry.showSourceLocation = true;\n\t\t\t\t\tlastLocated = entry.instruction;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tda.splice(start, toDelete, newEntries);\n\n\t\t\treturn newEntries.length - toDelete;\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\tprivate getIndexFromReferenceAndOffset(\n\t\tinstructionReference: string,\n\t\toffset: number,\n\t): number {\n\t\tconst addr = this._referenceToMemoryAddress.get(instructionReference);\n\t\tif (addr === undefined) {\n\t\t\treturn -1;\n\t\t}\n\n\t\treturn this.getIndexFromAddress(addr + BigInt(offset));\n\t}\n\n\tprivate getIndexFromAddress(address: bigint): number {\n\t\tconst disassembledInstructions = this._disassembledInstructions;\n\t\tif (disassembledInstructions && disassembledInstructions.length > 0) {\n\t\t\treturn binarySearch2(disassembledInstructions.length, (index) => {\n\t\t\t\tconst row = disassembledInstructions.row(index);\n\t\t\t\treturn Number(row.address - address);\n\t\t\t});\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Clears the table and reload instructions near the target address\n\t */\n\tprivate reloadDisassembly(instructionReference: string, offset: number) {\n\t\tif (!this._disassembledInstructions) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._loadingLock = true; // stop scrolling during the load.\n\t\tthis.clear();\n\t\tthis._instructionBpList = this._debugService\n\t\t\t.getModel()\n\t\t\t.getInstructionBreakpoints();\n\t\tthis.loadDisassembledInstructions(\n\t\t\tinstructionReference,\n\t\t\toffset,\n\t\t\t-DisassemblyView.NUM_INSTRUCTIONS_TO_LOAD * 4,\n\t\t\tDisassemblyView.NUM_INSTRUCTIONS_TO_LOAD * 8,\n\t\t).then(() => {\n\t\t\t// on load, set the target instruction in the middle of the page.\n\t\t\tif (this._disassembledInstructions!.length > 0) {\n\t\t\t\tconst targetIndex = Math.floor(\n\t\t\t\t\tthis._disassembledInstructions!.length / 2,\n\t\t\t\t);\n\t\t\t\tthis._disassembledInstructions!.reveal(targetIndex, 0.5);\n\n\t\t\t\t// Always focus the target address on reload, or arrow key navigation would look terrible\n\t\t\t\tthis._disassembledInstructions!.domFocus();\n\t\t\t\tthis._disassembledInstructions!.setFocus([targetIndex]);\n\t\t\t}\n\t\t\tthis._loadingLock = false;\n\t\t});\n\t}\n\n\tprivate clear() {\n\t\tthis._referenceToMemoryAddress.clear();\n\t\tthis._disassembledInstructions?.splice(\n\t\t\t0,\n\t\t\tthis._disassembledInstructions.length,\n\t\t\t[disassemblyNotAvailable],\n\t\t);\n\t}\n}\n\ninterface IBreakpointColumnTemplateData {\n\tcurrentElement: { element?: IDisassembledInstructionEntry };\n\ticon: HTMLElement;\n\tdisposables: IDisposable[];\n}\n\nclass BreakpointRenderer\n\timplements\n\t\tITableRenderer<\n\t\t\tIDisassembledInstructionEntry,\n\t\t\tIBreakpointColumnTemplateData\n\t\t>\n{\n\tstatic readonly TEMPLATE_ID = \"breakpoint\";\n\n\ttemplateId: string = BreakpointRenderer.TEMPLATE_ID;\n\n\tprivate readonly _breakpointIcon = \"codicon-\" + icons.breakpoint.regular.id;\n\tprivate readonly _breakpointDisabledIcon =\n\t\t\"codicon-\" + icons.breakpoint.disabled.id;\n\tprivate readonly _breakpointHintIcon =\n\t\t\"codicon-\" + icons.debugBreakpointHint.id;\n\tprivate readonly _debugStackframe = \"codicon-\" + icons.debugStackframe.id;\n\tprivate readonly _debugStackframeFocused =\n\t\t\"codicon-\" + icons.debugStackframeFocused.id;\n\n\tconstructor(\n\t\tprivate readonly _disassemblyView: DisassemblyView,\n\t\t@IDebugService private readonly _debugService: IDebugService\n\t) {\n\t}\n\n\trenderTemplate(container: HTMLElement): IBreakpointColumnTemplateData {\n\t\t// align from the bottom so that it lines up with instruction when source code is present.\n\t\tcontainer.style.alignSelf = \"flex-end\";\n\n\t\tconst icon = append(container, $(\".codicon\"));\n\t\ticon.style.display = \"flex\";\n\t\ticon.style.alignItems = \"center\";\n\t\ticon.style.justifyContent = \"center\";\n\t\ticon.style.height = this._disassemblyView.fontInfo.lineHeight + \"px\";\n\n\t\tconst currentElement: { element?: IDisassembledInstructionEntry } = {\n\t\t\telement: undefined,\n\t\t};\n\n\t\tconst disposables = [\n\t\t\tthis._disassemblyView.onDidChangeStackFrame(() =>\n\t\t\t\tthis.rerenderDebugStackframe(icon, currentElement.element),\n\t\t\t),\n\t\t\taddStandardDisposableListener(container, \"mouseover\", () => {\n\t\t\t\tif (currentElement.element?.allowBreakpoint) {\n\t\t\t\t\ticon.classList.add(this._breakpointHintIcon);\n\t\t\t\t}\n\t\t\t}),\n\t\t\taddStandardDisposableListener(container, \"mouseout\", () => {\n\t\t\t\tif (currentElement.element?.allowBreakpoint) {\n\t\t\t\t\ticon.classList.remove(this._breakpointHintIcon);\n\t\t\t\t}\n\t\t\t}),\n\t\t\taddStandardDisposableListener(container, \"click\", () => {\n\t\t\t\tif (currentElement.element?.allowBreakpoint) {\n\t\t\t\t\t// click show hint while waiting for BP to resolve.\n\t\t\t\t\ticon.classList.add(this._breakpointHintIcon);\n\t\t\t\t\tconst reference =\n\t\t\t\t\t\tcurrentElement.element.instructionReference;\n\t\t\t\t\tconst offset = Number(\n\t\t\t\t\t\tcurrentElement.element.address -\n\t\t\t\t\t\t\tthis._disassemblyView.getReferenceAddress(\n\t\t\t\t\t\t\t\treference,\n\t\t\t\t\t\t\t)!,\n\t\t\t\t\t);\n\t\t\t\t\tif (currentElement.element.isBreakpointSet) {\n\t\t\t\t\t\tthis._debugService.removeInstructionBreakpoints(\n\t\t\t\t\t\t\treference,\n\t\t\t\t\t\t\toffset,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tcurrentElement.element.allowBreakpoint &&\n\t\t\t\t\t\t!currentElement.element.isBreakpointSet\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis._debugService.addInstructionBreakpoint({\n\t\t\t\t\t\t\tinstructionReference: reference,\n\t\t\t\t\t\t\toffset,\n\t\t\t\t\t\t\taddress: currentElement.element.address,\n\t\t\t\t\t\t\tcanPersist: false,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t];\n\n\t\treturn { currentElement, icon, disposables };\n\t}\n\n\trenderElement(\n\t\telement: IDisassembledInstructionEntry,\n\t\tindex: number,\n\t\ttemplateData: IBreakpointColumnTemplateData,\n\t\theight: number | undefined,\n\t): void {\n\t\ttemplateData.currentElement.element = element;\n\t\tthis.rerenderDebugStackframe(templateData.icon, element);\n\t}\n\n\tdisposeTemplate(templateData: IBreakpointColumnTemplateData): void {\n\t\tdispose(templateData.disposables);\n\t\ttemplateData.disposables = [];\n\t}\n\n\tprivate rerenderDebugStackframe(\n\t\ticon: HTMLElement,\n\t\telement?: IDisassembledInstructionEntry,\n\t) {\n\t\tif (\n\t\t\telement?.address ===\n\t\t\tthis._disassemblyView.focusedCurrentInstructionAddress\n\t\t) {\n\t\t\ticon.classList.add(this._debugStackframe);\n\t\t} else if (\n\t\t\telement?.address === this._disassemblyView.focusedInstructionAddress\n\t\t) {\n\t\t\ticon.classList.add(this._debugStackframeFocused);\n\t\t} else {\n\t\t\ticon.classList.remove(this._debugStackframe);\n\t\t\ticon.classList.remove(this._debugStackframeFocused);\n\t\t}\n\n\t\ticon.classList.remove(this._breakpointHintIcon);\n\n\t\tif (element?.isBreakpointSet) {\n\t\t\tif (element.isBreakpointEnabled) {\n\t\t\t\ticon.classList.add(this._breakpointIcon);\n\t\t\t\ticon.classList.remove(this._breakpointDisabledIcon);\n\t\t\t} else {\n\t\t\t\ticon.classList.remove(this._breakpointIcon);\n\t\t\t\ticon.classList.add(this._breakpointDisabledIcon);\n\t\t\t}\n\t\t} else {\n\t\t\ticon.classList.remove(this._breakpointIcon);\n\t\t\ticon.classList.remove(this._breakpointDisabledIcon);\n\t\t}\n\t}\n}\n\ninterface IInstructionColumnTemplateData {\n\tcurrentElement: { element?: IDisassembledInstructionEntry };\n\t// TODO: hover widget?\n\tinstruction: HTMLElement;\n\tsourcecode: HTMLElement;\n\t// disposed when cell is closed.\n\tcellDisposable: IDisposable[];\n\t// disposed when template is closed.\n\tdisposables: IDisposable[];\n}\n\nclass InstructionRenderer\n\textends Disposable\n\timplements\n\t\tITableRenderer<\n\t\t\tIDisassembledInstructionEntry,\n\t\t\tIInstructionColumnTemplateData\n\t\t>\n{\n\tstatic readonly TEMPLATE_ID = \"instruction\";\n\n\tprivate static readonly INSTRUCTION_ADDR_MIN_LENGTH = 25;\n\tprivate static readonly INSTRUCTION_BYTES_MIN_LENGTH = 30;\n\n\ttemplateId: string = InstructionRenderer.TEMPLATE_ID;\n\n\tprivate _topStackFrameColor: Color | undefined;\n\tprivate _focusedStackFrameColor: Color | undefined;\n\n\tconstructor(\n\t\tprivate readonly _disassemblyView: DisassemblyView,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@ITextModelService private readonly textModelService: ITextModelService,\n\t\t@IUriIdentityService private readonly uriService: IUriIdentityService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\n\t\tthis._topStackFrameColor = themeService.getColorTheme().getColor(topStackFrameColor);\n\t\tthis._focusedStackFrameColor = themeService.getColorTheme().getColor(focusedStackFrameColor);\n\n\t\tthis._register(themeService.onDidColorThemeChange(e => {\n\t\t\tthis._topStackFrameColor = e.getColor(topStackFrameColor);\n\t\t\tthis._focusedStackFrameColor = e.getColor(focusedStackFrameColor);\n\t\t}));\n\t}\n\n\trenderTemplate(container: HTMLElement): IInstructionColumnTemplateData {\n\t\tconst sourcecode = append(container, $(\".sourcecode\"));\n\t\tconst instruction = append(container, $(\".instruction\"));\n\t\tthis.applyFontInfo(sourcecode);\n\t\tthis.applyFontInfo(instruction);\n\t\tconst currentElement: { element?: IDisassembledInstructionEntry } = {\n\t\t\telement: undefined,\n\t\t};\n\t\tconst cellDisposable: IDisposable[] = [];\n\n\t\tconst disposables = [\n\t\t\tthis._disassemblyView.onDidChangeStackFrame(() =>\n\t\t\t\tthis.rerenderBackground(\n\t\t\t\t\tinstruction,\n\t\t\t\t\tsourcecode,\n\t\t\t\t\tcurrentElement.element,\n\t\t\t\t),\n\t\t\t),\n\t\t\taddStandardDisposableListener(sourcecode, \"dblclick\", () =>\n\t\t\t\tthis.openSourceCode(currentElement.element?.instruction),\n\t\t\t),\n\t\t];\n\n\t\treturn {\n\t\t\tcurrentElement,\n\t\t\tinstruction,\n\t\t\tsourcecode,\n\t\t\tcellDisposable,\n\t\t\tdisposables,\n\t\t};\n\t}\n\n\trenderElement(\n\t\telement: IDisassembledInstructionEntry,\n\t\tindex: number,\n\t\ttemplateData: IInstructionColumnTemplateData,\n\t\theight: number | undefined,\n\t): void {\n\t\tthis.renderElementInner(element, index, templateData, height);\n\t}\n\n\tprivate async renderElementInner(\n\t\telement: IDisassembledInstructionEntry,\n\t\tindex: number,\n\t\ttemplateData: IInstructionColumnTemplateData,\n\t\theight: number | undefined,\n\t): Promise<void> {\n\t\ttemplateData.currentElement.element = element;\n\t\tconst instruction = element.instruction;\n\t\ttemplateData.sourcecode.innerText = \"\";\n\t\tconst sb = new StringBuilder(1000);\n\n\t\tif (\n\t\t\tthis._disassemblyView.isSourceCodeRender &&\n\t\t\telement.showSourceLocation &&\n\t\t\tinstruction.location?.path &&\n\t\t\tinstruction.line !== undefined\n\t\t) {\n\t\t\tconst sourceURI = this.getUriFromSource(instruction);\n\n\t\t\tif (sourceURI) {\n\t\t\t\tlet textModel: ITextModel | undefined;\n\t\t\t\tconst sourceSB = new StringBuilder(10000);\n\t\t\t\tconst ref =\n\t\t\t\t\tawait this.textModelService.createModelReference(sourceURI);\n\t\t\t\tif (templateData.currentElement.element !== element) {\n\t\t\t\t\treturn; // avoid a race, #192831\n\t\t\t\t}\n\t\t\t\ttextModel = ref.object.textEditorModel;\n\t\t\t\ttemplateData.cellDisposable.push(ref);\n\n\t\t\t\t// templateData could have moved on during async.  Double check if it is still the same source.\n\t\t\t\tif (\n\t\t\t\t\ttextModel &&\n\t\t\t\t\ttemplateData.currentElement.element === element\n\t\t\t\t) {\n\t\t\t\t\tlet lineNumber = instruction.line;\n\n\t\t\t\t\twhile (\n\t\t\t\t\t\tlineNumber &&\n\t\t\t\t\t\tlineNumber >= 1 &&\n\t\t\t\t\t\tlineNumber <= textModel.getLineCount()\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst lineContent =\n\t\t\t\t\t\t\ttextModel.getLineContent(lineNumber);\n\t\t\t\t\t\tsourceSB.appendString(`  ${lineNumber}: `);\n\t\t\t\t\t\tsourceSB.appendString(lineContent + \"\\n\");\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tinstruction.endLine &&\n\t\t\t\t\t\t\tlineNumber < instruction.endLine\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tlineNumber++;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\ttemplateData.sourcecode.innerText = sourceSB.build();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet spacesToAppend = 10;\n\n\t\tif (instruction.address !== \"-1\") {\n\t\t\tsb.appendString(instruction.address);\n\t\t\tif (\n\t\t\t\tinstruction.address.length <\n\t\t\t\tInstructionRenderer.INSTRUCTION_ADDR_MIN_LENGTH\n\t\t\t) {\n\t\t\t\tspacesToAppend =\n\t\t\t\t\tInstructionRenderer.INSTRUCTION_ADDR_MIN_LENGTH -\n\t\t\t\t\tinstruction.address.length;\n\t\t\t}\n\t\t\tfor (let i = 0; i < spacesToAppend; i++) {\n\t\t\t\tsb.appendString(\" \");\n\t\t\t}\n\t\t}\n\n\t\tif (instruction.instructionBytes) {\n\t\t\tsb.appendString(instruction.instructionBytes);\n\t\t\tspacesToAppend = 10;\n\t\t\tif (\n\t\t\t\tinstruction.instructionBytes.length <\n\t\t\t\tInstructionRenderer.INSTRUCTION_BYTES_MIN_LENGTH\n\t\t\t) {\n\t\t\t\tspacesToAppend =\n\t\t\t\t\tInstructionRenderer.INSTRUCTION_BYTES_MIN_LENGTH -\n\t\t\t\t\tinstruction.instructionBytes.length;\n\t\t\t}\n\t\t\tfor (let i = 0; i < spacesToAppend; i++) {\n\t\t\t\tsb.appendString(\" \");\n\t\t\t}\n\t\t}\n\n\t\tsb.appendString(instruction.instruction);\n\t\ttemplateData.instruction.innerText = sb.build();\n\n\t\tthis.rerenderBackground(\n\t\t\ttemplateData.instruction,\n\t\t\ttemplateData.sourcecode,\n\t\t\telement,\n\t\t);\n\t}\n\n\tdisposeElement(\n\t\telement: IDisassembledInstructionEntry,\n\t\tindex: number,\n\t\ttemplateData: IInstructionColumnTemplateData,\n\t\theight: number | undefined,\n\t): void {\n\t\tdispose(templateData.cellDisposable);\n\t\ttemplateData.cellDisposable = [];\n\t}\n\n\tdisposeTemplate(templateData: IInstructionColumnTemplateData): void {\n\t\tdispose(templateData.disposables);\n\t\ttemplateData.disposables = [];\n\t}\n\n\tprivate rerenderBackground(\n\t\tinstruction: HTMLElement,\n\t\tsourceCode: HTMLElement,\n\t\telement?: IDisassembledInstructionEntry,\n\t) {\n\t\tif (\n\t\t\telement &&\n\t\t\tthis._disassemblyView.currentInstructionAddresses.includes(\n\t\t\t\telement.address,\n\t\t\t)\n\t\t) {\n\t\t\tinstruction.style.background =\n\t\t\t\tthis._topStackFrameColor?.toString() || \"transparent\";\n\t\t} else if (\n\t\t\telement?.address === this._disassemblyView.focusedInstructionAddress\n\t\t) {\n\t\t\tinstruction.style.background =\n\t\t\t\tthis._focusedStackFrameColor?.toString() || \"transparent\";\n\t\t} else {\n\t\t\tinstruction.style.background = \"transparent\";\n\t\t}\n\t}\n\n\tprivate openSourceCode(\n\t\tinstruction: DebugProtocol.DisassembledInstruction | undefined,\n\t) {\n\t\tif (instruction) {\n\t\t\tconst sourceURI = this.getUriFromSource(instruction);\n\t\t\tconst selection = instruction.endLine\n\t\t\t\t? {\n\t\t\t\t\t\tstartLineNumber: instruction.line!,\n\t\t\t\t\t\tendLineNumber: instruction.endLine,\n\t\t\t\t\t\tstartColumn: instruction.column || 1,\n\t\t\t\t\t\tendColumn:\n\t\t\t\t\t\t\tinstruction.endColumn ||\n\t\t\t\t\t\t\tConstants.MAX_SAFE_SMALL_INTEGER,\n\t\t\t\t\t}\n\t\t\t\t: {\n\t\t\t\t\t\tstartLineNumber: instruction.line!,\n\t\t\t\t\t\tendLineNumber: instruction.line!,\n\t\t\t\t\t\tstartColumn: instruction.column || 1,\n\t\t\t\t\t\tendColumn:\n\t\t\t\t\t\t\tinstruction.endColumn ||\n\t\t\t\t\t\t\tConstants.MAX_SAFE_SMALL_INTEGER,\n\t\t\t\t\t};\n\n\t\t\tthis.editorService.openEditor({\n\t\t\t\tresource: sourceURI,\n\t\t\t\tdescription: localize(\n\t\t\t\t\t\"editorOpenedFromDisassemblyDescription\",\n\t\t\t\t\t\"from disassembly\",\n\t\t\t\t),\n\t\t\t\toptions: {\n\t\t\t\t\tpreserveFocus: false,\n\t\t\t\t\tselection: selection,\n\t\t\t\t\trevealIfOpened: true,\n\t\t\t\t\tselectionRevealType:\n\t\t\t\t\t\tTextEditorSelectionRevealType.CenterIfOutsideViewport,\n\t\t\t\t\tpinned: false,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate getUriFromSource(\n\t\tinstruction: DebugProtocol.DisassembledInstruction,\n\t): URI {\n\t\t// Try to resolve path before consulting the debugSession.\n\t\tconst path = instruction.location!.path;\n\t\tif (path && isUri(path)) {\n\t\t\t// path looks like a uri\n\t\t\treturn this.uriService.asCanonicalUri(URI.parse(path));\n\t\t}\n\t\t// assume a filesystem path\n\t\tif (path && isAbsolute(path)) {\n\t\t\treturn this.uriService.asCanonicalUri(URI.file(path));\n\t\t}\n\n\t\treturn getUriFromSource(\n\t\t\tinstruction.location!,\n\t\t\tinstruction.location!.path,\n\t\t\tthis._disassemblyView.debugSession!.getId(),\n\t\t\tthis.uriService,\n\t\t\tthis.logService,\n\t\t);\n\t}\n\n\tprivate applyFontInfo(element: HTMLElement) {\n\t\tapplyFontInfo(element, this._disassemblyView.fontInfo);\n\t\telement.style.whiteSpace = \"pre\";\n\t}\n}\n\nclass AccessibilityProvider\n\timplements IListAccessibilityProvider<IDisassembledInstructionEntry>\n{\n\tgetWidgetAriaLabel(): string {\n\t\treturn localize(\"disassemblyView\", \"Disassembly View\");\n\t}\n\n\tgetAriaLabel(element: IDisassembledInstructionEntry): string | null {\n\t\tlet label = \"\";\n\n\t\tconst instruction = element.instruction;\n\t\tif (instruction.address !== \"-1\") {\n\t\t\tlabel += `${localize(\"instructionAddress\", \"Address\")}: ${instruction.address}`;\n\t\t}\n\t\tif (instruction.instructionBytes) {\n\t\t\tlabel += `, ${localize(\"instructionBytes\", \"Bytes\")}: ${instruction.instructionBytes}`;\n\t\t}\n\t\tlabel += `, ${localize(`instructionText`, \"Instruction\")}: ${instruction.instruction}`;\n\n\t\treturn label;\n\t}\n}\n\nexport class DisassemblyViewContribution implements IWorkbenchContribution {\n\tprivate readonly _onDidActiveEditorChangeListener: IDisposable;\n\tprivate _onDidChangeModelLanguage: IDisposable | undefined;\n\tprivate _languageSupportsDisassembleRequest:\n\t\t| IContextKey<boolean>\n\t\t| undefined;\n\n\tconstructor(\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IDebugService debugService: IDebugService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t) {\n\t\tcontextKeyService.bufferChangeEvents(() => {\n\t\t\tthis._languageSupportsDisassembleRequest =\n\t\t\t\tCONTEXT_LANGUAGE_SUPPORTS_DISASSEMBLE_REQUEST.bindTo(\n\t\t\t\t\tcontextKeyService,\n\t\t\t\t);\n\t\t});\n\n\t\tconst onDidActiveEditorChangeListener = () => {\n\t\t\tif (this._onDidChangeModelLanguage) {\n\t\t\t\tthis._onDidChangeModelLanguage.dispose();\n\t\t\t\tthis._onDidChangeModelLanguage = undefined;\n\t\t\t}\n\n\t\t\tconst activeTextEditorControl =\n\t\t\t\teditorService.activeTextEditorControl;\n\t\t\tif (isCodeEditor(activeTextEditorControl)) {\n\t\t\t\tconst language = activeTextEditorControl\n\t\t\t\t\t.getModel()\n\t\t\t\t\t?.getLanguageId();\n\t\t\t\t// TODO: instead of using idDebuggerInterestedInLanguage, have a specific ext point for languages\n\t\t\t\t// support disassembly\n\t\t\t\tthis._languageSupportsDisassembleRequest?.set(\n\t\t\t\t\t!!language &&\n\t\t\t\t\t\tdebugService\n\t\t\t\t\t\t\t.getAdapterManager()\n\t\t\t\t\t\t\t.someDebuggerInterestedInLanguage(language),\n\t\t\t\t);\n\n\t\t\t\tthis._onDidChangeModelLanguage =\n\t\t\t\t\tactiveTextEditorControl.onDidChangeModelLanguage((e) => {\n\t\t\t\t\t\tthis._languageSupportsDisassembleRequest?.set(\n\t\t\t\t\t\t\tdebugService\n\t\t\t\t\t\t\t\t.getAdapterManager()\n\t\t\t\t\t\t\t\t.someDebuggerInterestedInLanguage(\n\t\t\t\t\t\t\t\t\te.newLanguage,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis._languageSupportsDisassembleRequest?.set(false);\n\t\t\t}\n\t\t};\n\n\t\tonDidActiveEditorChangeListener();\n\t\tthis._onDidActiveEditorChangeListener =\n\t\t\teditorService.onDidActiveEditorChange(\n\t\t\t\tonDidActiveEditorChangeListener,\n\t\t\t);\n\t}\n\n\tdispose(): void {\n\t\tthis._onDidActiveEditorChangeListener.dispose();\n\t\tthis._onDidChangeModelLanguage?.dispose();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
