import{matchesFuzzy as f}from"../../../../base/common/filters.js";import{DisposableStore as S}from"../../../../base/common/lifecycle.js";import*as l from"../../../../nls.js";import{IQuickInputService as k}from"../../../../platform/quickinput/common/quickInput.js";import{IDebugService as h,REPL_VIEW_ID as I}from"../common/debug.js";import{ICommandService as D}from"../../../../platform/commands/common/commands.js";import{IViewsService as v}from"../../../services/views/common/viewsService.js";async function Q(i,o){const c=i.get(k),n=i.get(h),a=i.get(v),t=i.get(D),r=new S,e=c.createQuickPick({useSeparators:!0});r.add(e),e.matchOnLabel=e.matchOnDescription=e.matchOnDetail=e.sortByLabel=!1,e.placeholder=l.localize("moveFocusedView.selectView","Search debug sessions by name");const u=b(e.value,o,n,a,t);e.items=u.picks,e.activeItems=u.activeItems,r.add(e.onDidChangeValue(async()=>{e.items=b(e.value,o,n,a,t).picks})),r.add(e.onDidAccept(()=>{e.selectedItems[0].accept(),e.hide(),r.dispose()})),e.show()}function b(i,o,c,n,a){const t=[],r=[],e=c.getViewModel().focusedSession,u=c.getModel().getSessions(!1),m=[];u.forEach(s=>{s.compact&&s.parentSession&&r.push(s.parentSession)}),u.forEach(s=>{const g=r.includes(s);if(s.parentSession||t.push({type:"separator",label:g?s.name:void 0}),!g){const p=w(s,i,c,n,a);p&&(t.push(p),s.getId()===e?.getId()&&m.push(p))}}),t.length&&t.push({type:"separator"});const d=l.localize("workbench.action.debug.startDebug","Start a New Debug Session");return t.push({label:`$(plus) ${d}`,ariaLabel:d,accept:()=>a.executeCommand(o)}),{picks:t,activeItems:m}}function P(i){const o=i.configuration.name.length?i.configuration.name:i.name,c=i.compact?void 0:i.parentSession?.configuration.name;let n="",a="";return c&&(a=l.localize("workbench.action.debug.spawnFrom","Session {0} spawned from {1}",o,c),n=c),{label:o,description:n,ariaLabel:a}}function w(i,o,c,n,a){const t=P(i),r=f(o,t.label,!0);if(r)return{label:t.label,description:t.description,ariaLabel:t.ariaLabel,highlights:{label:r},accept:()=>{c.focusStackFrame(void 0,void 0,i,{explicit:!0}),n.isViewVisible(I)||n.openView(I,!0)}}}export{Q as showDebugSessionMenu};
