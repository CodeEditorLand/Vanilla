{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/breakpointWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../../base/browser/keyboardEvent.js';\nimport { Button } from '../../../../base/browser/ui/button/button.js';\nimport { getDefaultHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegateFactory.js';\nimport { ISelectOptionItem, SelectBox } from '../../../../base/browser/ui/selectBox/selectBox.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport * as lifecycle from '../../../../base/common/lifecycle.js';\nimport { URI as uri } from '../../../../base/common/uri.js';\nimport './media/breakpointWidget.css';\nimport { IActiveCodeEditor, ICodeEditor } from '../../../../editor/browser/editorBrowser.js';\nimport { EditorCommand, ServicesAccessor, registerEditorCommand } from '../../../../editor/browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../../editor/browser/services/codeEditorService.js';\nimport { CodeEditorWidget } from '../../../../editor/browser/widget/codeEditor/codeEditorWidget.js';\nimport { EditorOption, IEditorOptions } from '../../../../editor/common/config/editorOptions.js';\nimport { IPosition, Position } from '../../../../editor/common/core/position.js';\nimport { IRange, Range } from '../../../../editor/common/core/range.js';\nimport { IDecorationOptions } from '../../../../editor/common/editorCommon.js';\nimport { EditorContextKeys } from '../../../../editor/common/editorContextKeys.js';\nimport { CompletionContext, CompletionItemKind, CompletionList } from '../../../../editor/common/languages.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../../../../editor/common/languages/modesRegistry.js';\nimport { ITextModel } from '../../../../editor/common/model.js';\nimport { ILanguageFeaturesService } from '../../../../editor/common/services/languageFeatures.js';\nimport { IModelService } from '../../../../editor/common/services/model.js';\nimport { ITextModelService } from '../../../../editor/common/services/resolverService.js';\nimport { CompletionOptions, provideSuggestionItems } from '../../../../editor/contrib/suggest/browser/suggest.js';\nimport { ZoneWidget } from '../../../../editor/contrib/zoneWidget/browser/zoneWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextViewService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\nimport { IInstantiationService, createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { defaultButtonStyles, defaultSelectBoxStyles } from '../../../../platform/theme/browser/defaultStyles.js';\nimport { editorForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { IColorTheme, IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { getSimpleCodeEditorWidgetOptions, getSimpleEditorOptions } from '../../codeEditor/browser/simpleEditorOptions.js';\nimport { BREAKPOINT_EDITOR_CONTRIBUTION_ID, CONTEXT_BREAKPOINT_WIDGET_VISIBLE, CONTEXT_IN_BREAKPOINT_WIDGET, BreakpointWidgetContext as Context, DEBUG_SCHEME, IBreakpoint, IBreakpointEditorContribution, IBreakpointUpdateData, IDebugService } from '../common/debug.js';\n\nconst $ = dom.$;\nconst IPrivateBreakpointWidgetService = createDecorator<IPrivateBreakpointWidgetService>('privateBreakpointWidgetService');\ninterface IPrivateBreakpointWidgetService {\n\treadonly _serviceBrand: undefined;\n\tclose(success: boolean): void;\n}\nconst DECORATION_KEY = 'breakpointwidgetdecoration';\n\nfunction isPositionInCurlyBracketBlock(input: IActiveCodeEditor): boolean {\n\tconst model = input.getModel();\n\tconst bracketPairs = model.bracketPairs.getBracketPairsInRange(Range.fromPositions(input.getPosition()));\n\treturn bracketPairs.some(p => p.openingBracketInfo.bracketText === '{');\n}\n\nfunction createDecorations(theme: IColorTheme, placeHolder: string): IDecorationOptions[] {\n\tconst transparentForeground = theme.getColor(editorForeground)?.transparent(0.4);\n\treturn [{\n\t\trange: {\n\t\t\tstartLineNumber: 0,\n\t\t\tendLineNumber: 0,\n\t\t\tstartColumn: 0,\n\t\t\tendColumn: 1\n\t\t},\n\t\trenderOptions: {\n\t\t\tafter: {\n\t\t\t\tcontentText: placeHolder,\n\t\t\t\tcolor: transparentForeground ? transparentForeground.toString() : undefined\n\t\t\t}\n\t\t}\n\t}];\n}\n\nexport class BreakpointWidget extends ZoneWidget implements IPrivateBreakpointWidgetService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate selectContainer!: HTMLElement;\n\tprivate inputContainer!: HTMLElement;\n\tprivate selectBreakpointContainer!: HTMLElement;\n\tprivate input!: IActiveCodeEditor;\n\tprivate selectBreakpointBox!: SelectBox;\n\tprivate selectModeBox?: SelectBox;\n\tprivate toDispose: lifecycle.IDisposable[];\n\tprivate conditionInput = '';\n\tprivate hitCountInput = '';\n\tprivate logMessageInput = '';\n\tprivate modeInput?: DebugProtocol.BreakpointMode;\n\tprivate breakpoint: IBreakpoint | undefined;\n\tprivate context: Context;\n\tprivate heightInPx: number | undefined;\n\tprivate triggeredByBreakpointInput: IBreakpoint | undefined;\n\n\tconstructor(editor: ICodeEditor, private lineNumber: number, private column: number | undefined, context: Context | undefined,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@ICodeEditorService private readonly codeEditorService: ICodeEditorService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@ILanguageFeaturesService private readonly languageFeaturesService: ILanguageFeaturesService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@ITextModelService private readonly textModelService: ITextModelService,\n\t\t@IHoverService private readonly hoverService: IHoverService\n\t) {\n\t\tsuper(editor, { showFrame: true, showArrow: false, frameWidth: 1, isAccessible: true });\n\n\t\tthis.toDispose = [];\n\t\tconst model = this.editor.getModel();\n\t\tif (model) {\n\t\t\tconst uri = model.uri;\n\t\t\tconst breakpoints = this.debugService.getModel().getBreakpoints({ lineNumber: this.lineNumber, column: this.column, uri });\n\t\t\tthis.breakpoint = breakpoints.length ? breakpoints[0] : undefined;\n\t\t}\n\n\t\tif (context === undefined) {\n\t\t\tif (this.breakpoint && !this.breakpoint.condition && !this.breakpoint.hitCondition && this.breakpoint.logMessage) {\n\t\t\t\tthis.context = Context.LOG_MESSAGE;\n\t\t\t} else if (this.breakpoint && !this.breakpoint.condition && this.breakpoint.hitCondition) {\n\t\t\t\tthis.context = Context.HIT_COUNT;\n\t\t\t} else if (this.breakpoint && this.breakpoint.triggeredBy) {\n\t\t\t\tthis.context = Context.TRIGGER_POINT;\n\t\t\t} else {\n\t\t\t\tthis.context = Context.CONDITION;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.context = context;\n\t\t}\n\n\t\tthis.toDispose.push(this.debugService.getModel().onDidChangeBreakpoints(e => {\n\t\t\tif (this.breakpoint && e && e.removed && e.removed.indexOf(this.breakpoint) >= 0) {\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}));\n\t\tthis.codeEditorService.registerDecorationType('breakpoint-widget', DECORATION_KEY, {});\n\n\t\tthis.create();\n\t}\n\n\tprivate get placeholder(): string {\n\t\tconst acceptString = this.keybindingService.lookupKeybinding(AcceptBreakpointWidgetInputAction.ID)?.getLabel() || 'Enter';\n\t\tconst closeString = this.keybindingService.lookupKeybinding(CloseBreakpointWidgetCommand.ID)?.getLabel() || 'Escape';\n\t\tswitch (this.context) {\n\t\t\tcase Context.LOG_MESSAGE:\n\t\t\t\treturn nls.localize('breakpointWidgetLogMessagePlaceholder', \"Message to log when breakpoint is hit. Expressions within {} are interpolated. '{0}' to accept, '{1}' to cancel.\", acceptString, closeString);\n\t\t\tcase Context.HIT_COUNT:\n\t\t\t\treturn nls.localize('breakpointWidgetHitCountPlaceholder', \"Break when hit count condition is met. '{0}' to accept, '{1}' to cancel.\", acceptString, closeString);\n\t\t\tdefault:\n\t\t\t\treturn nls.localize('breakpointWidgetExpressionPlaceholder', \"Break when expression evaluates to true. '{0}' to accept, '{1}' to cancel.\", acceptString, closeString);\n\t\t}\n\t}\n\n\tprivate getInputValue(breakpoint: IBreakpoint | undefined): string {\n\t\tswitch (this.context) {\n\t\t\tcase Context.LOG_MESSAGE:\n\t\t\t\treturn breakpoint && breakpoint.logMessage ? breakpoint.logMessage : this.logMessageInput;\n\t\t\tcase Context.HIT_COUNT:\n\t\t\t\treturn breakpoint && breakpoint.hitCondition ? breakpoint.hitCondition : this.hitCountInput;\n\t\t\tdefault:\n\t\t\t\treturn breakpoint && breakpoint.condition ? breakpoint.condition : this.conditionInput;\n\t\t}\n\t}\n\n\tprivate rememberInput(): void {\n\t\tif (this.context !== Context.TRIGGER_POINT) {\n\t\t\tconst value = this.input.getModel().getValue();\n\t\t\tswitch (this.context) {\n\t\t\t\tcase Context.LOG_MESSAGE:\n\t\t\t\t\tthis.logMessageInput = value;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Context.HIT_COUNT:\n\t\t\t\t\tthis.hitCountInput = value;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.conditionInput = value;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate setInputMode(): void {\n\t\tif (this.editor.hasModel()) {\n\t\t\t// Use plaintext language for log messages, otherwise respect underlying editor language #125619\n\t\t\tconst languageId = this.context === Context.LOG_MESSAGE ? PLAINTEXT_LANGUAGE_ID : this.editor.getModel().getLanguageId();\n\t\t\tthis.input.getModel().setLanguage(languageId);\n\t\t}\n\t}\n\n\toverride show(rangeOrPos: IRange | IPosition): void {\n\t\tconst lineNum = this.input.getModel().getLineCount();\n\t\tsuper.show(rangeOrPos, lineNum + 1);\n\t}\n\n\tfitHeightToContent(): void {\n\t\tconst lineNum = this.input.getModel().getLineCount();\n\t\tthis._relayout(lineNum + 1);\n\t}\n\n\tprotected _fillContainer(container: HTMLElement): void {\n\t\tthis.setCssClass('breakpoint-widget');\n\t\tconst selectBox = new SelectBox([\n\t\t\t{ text: nls.localize('expression', \"Expression\") },\n\t\t\t{ text: nls.localize('hitCount', \"Hit Count\") },\n\t\t\t{ text: nls.localize('logMessage', \"Log Message\") },\n\t\t\t{ text: nls.localize('triggeredBy', \"Wait for Breakpoint\") },\n\t\t] satisfies ISelectOptionItem[], this.context, this.contextViewService, defaultSelectBoxStyles, { ariaLabel: nls.localize('breakpointType', 'Breakpoint Type') });\n\t\tthis.selectContainer = $('.breakpoint-select-container');\n\t\tselectBox.render(dom.append(container, this.selectContainer));\n\t\tselectBox.onDidSelect(e => {\n\t\t\tthis.rememberInput();\n\t\t\tthis.context = e.index;\n\t\t\tthis.updateContextInput();\n\t\t});\n\n\t\tthis.createModesInput(container);\n\n\t\tthis.inputContainer = $('.inputContainer');\n\t\tthis.toDispose.push(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), this.inputContainer, this.placeholder));\n\t\tthis.createBreakpointInput(dom.append(container, this.inputContainer));\n\n\t\tthis.input.getModel().setValue(this.getInputValue(this.breakpoint));\n\t\tthis.toDispose.push(this.input.getModel().onDidChangeContent(() => {\n\t\t\tthis.fitHeightToContent();\n\t\t}));\n\t\tthis.input.setPosition({ lineNumber: 1, column: this.input.getModel().getLineMaxColumn(1) });\n\n\t\tthis.createTriggerBreakpointInput(container);\n\n\t\tthis.updateContextInput();\n\t\t// Due to an electron bug we have to do the timeout, otherwise we do not get focus\n\t\tsetTimeout(() => this.focusInput(), 150);\n\t}\n\n\tprivate createModesInput(container: HTMLElement) {\n\t\tconst modes = this.debugService.getModel().getBreakpointModes('source');\n\t\tif (modes.length <= 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst sb = this.selectModeBox = new SelectBox(\n\t\t\t[\n\t\t\t\t{ text: nls.localize('bpMode', 'Mode'), isDisabled: true },\n\t\t\t\t...modes.map(mode => ({ text: mode.label, description: mode.description })),\n\t\t\t],\n\t\t\tmodes.findIndex(m => m.mode === this.breakpoint?.mode) + 1,\n\t\t\tthis.contextViewService,\n\t\t\tdefaultSelectBoxStyles,\n\t\t);\n\t\tthis.toDispose.push(sb);\n\t\tthis.toDispose.push(sb.onDidSelect(e => {\n\t\t\tthis.modeInput = modes[e.index - 1];\n\t\t}));\n\n\t\tconst modeWrapper = $('.select-mode-container');\n\t\tconst selectionWrapper = $('.select-box-container');\n\t\tdom.append(modeWrapper, selectionWrapper);\n\t\tsb.render(selectionWrapper);\n\t\tdom.append(container, modeWrapper);\n\t}\n\n\tprivate createTriggerBreakpointInput(container: HTMLElement) {\n\t\tconst breakpoints = this.debugService.getModel().getBreakpoints().filter(bp => bp !== this.breakpoint && !bp.logMessage);\n\t\tconst breakpointOptions: ISelectOptionItem[] = [\n\t\t\t{ text: nls.localize('noTriggerByBreakpoint', 'None'), isDisabled: true },\n\t\t\t...breakpoints.map(bp => ({\n\t\t\t\ttext: `${this.labelService.getUriLabel(bp.uri, { relative: true })}: ${bp.lineNumber}`,\n\t\t\t\tdescription: nls.localize('triggerByLoading', 'Loading...')\n\t\t\t})),\n\t\t];\n\n\t\tconst index = breakpoints.findIndex((bp) => this.breakpoint?.triggeredBy === bp.getId());\n\t\tfor (const [i, bp] of breakpoints.entries()) {\n\t\t\tthis.textModelService.createModelReference(bp.uri).then(ref => {\n\t\t\t\ttry {\n\t\t\t\t\tbreakpointOptions[i + 1].description = ref.object.textEditorModel.getLineContent(bp.lineNumber).trim();\n\t\t\t\t} finally {\n\t\t\t\t\tref.dispose();\n\t\t\t\t}\n\t\t\t}).catch(() => {\n\t\t\t\tbreakpointOptions[i + 1].description = nls.localize('noBpSource', 'Could not load source.');\n\t\t\t});\n\t\t}\n\n\t\tconst selectBreakpointBox = this.selectBreakpointBox = new SelectBox(breakpointOptions, index + 1, this.contextViewService, defaultSelectBoxStyles, { ariaLabel: nls.localize('selectBreakpoint', 'Select breakpoint') });\n\t\tselectBreakpointBox.onDidSelect(e => {\n\t\t\tif (e.index === 0) {\n\t\t\t\tthis.triggeredByBreakpointInput = undefined;\n\t\t\t} else {\n\t\t\t\tthis.triggeredByBreakpointInput = breakpoints[e.index - 1];\n\t\t\t}\n\t\t});\n\t\tthis.toDispose.push(selectBreakpointBox);\n\t\tthis.selectBreakpointContainer = $('.select-breakpoint-container');\n\t\tthis.toDispose.push(dom.addDisposableListener(this.selectBreakpointContainer, dom.EventType.KEY_DOWN, e => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\tif (event.equals(KeyCode.Escape)) {\n\t\t\t\tthis.close(false);\n\t\t\t}\n\t\t}));\n\n\t\tconst selectionWrapper = $('.select-box-container');\n\t\tdom.append(this.selectBreakpointContainer, selectionWrapper);\n\t\tselectBreakpointBox.render(selectionWrapper);\n\n\t\tdom.append(container, this.selectBreakpointContainer);\n\n\t\tconst closeButton = new Button(this.selectBreakpointContainer, defaultButtonStyles);\n\t\tcloseButton.label = nls.localize('ok', \"Ok\");\n\t\tthis.toDispose.push(closeButton.onDidClick(() => this.close(true)));\n\t\tthis.toDispose.push(closeButton);\n\t}\n\n\tprivate updateContextInput() {\n\t\tif (this.context === Context.TRIGGER_POINT) {\n\t\t\tthis.inputContainer.hidden = true;\n\t\t\tthis.selectBreakpointContainer.hidden = false;\n\t\t} else {\n\t\t\tthis.inputContainer.hidden = false;\n\t\t\tthis.selectBreakpointContainer.hidden = true;\n\t\t\tthis.setInputMode();\n\t\t\tconst value = this.getInputValue(this.breakpoint);\n\t\t\tthis.input.getModel().setValue(value);\n\t\t\tthis.focusInput();\n\t\t}\n\t}\n\n\tprotected override _doLayout(heightInPixel: number, widthInPixel: number): void {\n\t\tthis.heightInPx = heightInPixel;\n\t\tthis.input.layout({ height: heightInPixel, width: widthInPixel - 113 });\n\t\tthis.centerInputVertically();\n\t}\n\n\tprotected override _onWidth(widthInPixel: number): void {\n\t\tif (typeof this.heightInPx === 'number') {\n\t\t\tthis._doLayout(this.heightInPx, widthInPixel);\n\t\t}\n\t}\n\n\tprivate createBreakpointInput(container: HTMLElement): void {\n\t\tconst scopedContextKeyService = this.contextKeyService.createScoped(container);\n\t\tthis.toDispose.push(scopedContextKeyService);\n\n\t\tconst scopedInstatiationService = this.instantiationService.createChild(new ServiceCollection(\n\t\t\t[IContextKeyService, scopedContextKeyService],\n\t\t\t[IPrivateBreakpointWidgetService, this]\n\t\t));\n\t\tthis.toDispose.push(scopedInstatiationService);\n\n\t\tconst options = this.createEditorOptions();\n\t\tconst codeEditorWidgetOptions = getSimpleCodeEditorWidgetOptions();\n\t\tthis.input = <IActiveCodeEditor>scopedInstatiationService.createInstance(CodeEditorWidget, container, options, codeEditorWidgetOptions);\n\t\tCONTEXT_IN_BREAKPOINT_WIDGET.bindTo(scopedContextKeyService).set(true);\n\t\tconst model = this.modelService.createModel('', null, uri.parse(`${DEBUG_SCHEME}:${this.editor.getId()}:breakpointinput`), true);\n\t\tif (this.editor.hasModel()) {\n\t\t\tmodel.setLanguage(this.editor.getModel().getLanguageId());\n\t\t}\n\t\tthis.input.setModel(model);\n\t\tthis.setInputMode();\n\t\tthis.toDispose.push(model);\n\t\tconst setDecorations = () => {\n\t\t\tconst value = this.input.getModel().getValue();\n\t\t\tconst decorations = !!value ? [] : createDecorations(this.themeService.getColorTheme(), this.placeholder);\n\t\t\tthis.input.setDecorationsByType('breakpoint-widget', DECORATION_KEY, decorations);\n\t\t};\n\t\tthis.input.getModel().onDidChangeContent(() => setDecorations());\n\t\tthis.themeService.onDidColorThemeChange(() => setDecorations());\n\n\t\tthis.toDispose.push(this.languageFeaturesService.completionProvider.register({ scheme: DEBUG_SCHEME, hasAccessToAllModels: true }, {\n\t\t\t_debugDisplayName: 'breakpointWidget',\n\t\t\tprovideCompletionItems: (model: ITextModel, position: Position, _context: CompletionContext, token: CancellationToken): Promise<CompletionList> => {\n\t\t\t\tlet suggestionsPromise: Promise<CompletionList>;\n\t\t\t\tconst underlyingModel = this.editor.getModel();\n\t\t\t\tif (underlyingModel && (this.context === Context.CONDITION || (this.context === Context.LOG_MESSAGE && isPositionInCurlyBracketBlock(this.input)))) {\n\t\t\t\t\tsuggestionsPromise = provideSuggestionItems(this.languageFeaturesService.completionProvider, underlyingModel, new Position(this.lineNumber, 1), new CompletionOptions(undefined, new Set<CompletionItemKind>().add(CompletionItemKind.Snippet)), _context, token).then(suggestions => {\n\n\t\t\t\t\t\tlet overwriteBefore = 0;\n\t\t\t\t\t\tif (this.context === Context.CONDITION) {\n\t\t\t\t\t\t\toverwriteBefore = position.column - 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Inside the currly brackets, need to count how many useful characters are behind the position so they would all be taken into account\n\t\t\t\t\t\t\tconst value = this.input.getModel().getValue();\n\t\t\t\t\t\t\twhile ((position.column - 2 - overwriteBefore >= 0) && value[position.column - 2 - overwriteBefore] !== '{' && value[position.column - 2 - overwriteBefore] !== ' ') {\n\t\t\t\t\t\t\t\toverwriteBefore++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tsuggestions: suggestions.items.map(s => {\n\t\t\t\t\t\t\t\ts.completion.range = Range.fromPositions(position.delta(0, -overwriteBefore), position);\n\t\t\t\t\t\t\t\treturn s.completion;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tsuggestionsPromise = Promise.resolve({ suggestions: [] });\n\t\t\t\t}\n\n\t\t\t\treturn suggestionsPromise;\n\t\t\t}\n\t\t}));\n\n\t\tthis.toDispose.push(this._configurationService.onDidChangeConfiguration((e) => {\n\t\t\tif (e.affectsConfiguration('editor.fontSize') || e.affectsConfiguration('editor.lineHeight')) {\n\t\t\t\tthis.input.updateOptions(this.createEditorOptions());\n\t\t\t\tthis.centerInputVertically();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate createEditorOptions(): IEditorOptions {\n\t\tconst editorConfig = this._configurationService.getValue<IEditorOptions>('editor');\n\t\tconst options = getSimpleEditorOptions(this._configurationService);\n\t\toptions.fontSize = editorConfig.fontSize;\n\t\toptions.fontFamily = editorConfig.fontFamily;\n\t\toptions.lineHeight = editorConfig.lineHeight;\n\t\toptions.fontLigatures = editorConfig.fontLigatures;\n\t\toptions.ariaLabel = this.placeholder;\n\t\treturn options;\n\t}\n\n\tprivate centerInputVertically() {\n\t\tif (this.container && typeof this.heightInPx === 'number') {\n\t\t\tconst lineHeight = this.input.getOption(EditorOption.lineHeight);\n\t\t\tconst lineNum = this.input.getModel().getLineCount();\n\t\t\tconst newTopMargin = (this.heightInPx - lineNum * lineHeight) / 2;\n\t\t\tthis.inputContainer.style.marginTop = newTopMargin + 'px';\n\t\t}\n\t}\n\n\tclose(success: boolean): void {\n\t\tif (success) {\n\t\t\t// if there is already a breakpoint on this location - remove it.\n\n\t\t\tlet condition: string | undefined = undefined;\n\t\t\tlet hitCondition: string | undefined = undefined;\n\t\t\tlet logMessage: string | undefined = undefined;\n\t\t\tlet triggeredBy: string | undefined = undefined;\n\t\t\tlet mode: string | undefined = undefined;\n\t\t\tlet modeLabel: string | undefined = undefined;\n\n\t\t\tthis.rememberInput();\n\n\t\t\tif (this.conditionInput || this.context === Context.CONDITION) {\n\t\t\t\tcondition = this.conditionInput;\n\t\t\t}\n\t\t\tif (this.hitCountInput || this.context === Context.HIT_COUNT) {\n\t\t\t\thitCondition = this.hitCountInput;\n\t\t\t}\n\t\t\tif (this.logMessageInput || this.context === Context.LOG_MESSAGE) {\n\t\t\t\tlogMessage = this.logMessageInput;\n\t\t\t}\n\t\t\tif (this.selectModeBox) {\n\t\t\t\tmode = this.modeInput?.mode;\n\t\t\t\tmodeLabel = this.modeInput?.label;\n\t\t\t}\n\t\t\tif (this.context === Context.TRIGGER_POINT) {\n\t\t\t\t// currently, trigger points don't support additional conditions:\n\t\t\t\tcondition = undefined;\n\t\t\t\thitCondition = undefined;\n\t\t\t\tlogMessage = undefined;\n\t\t\t\ttriggeredBy = this.triggeredByBreakpointInput?.getId();\n\t\t\t}\n\n\t\t\tif (this.breakpoint) {\n\t\t\t\tconst data = new Map<string, IBreakpointUpdateData>();\n\t\t\t\tdata.set(this.breakpoint.getId(), {\n\t\t\t\t\tcondition,\n\t\t\t\t\thitCondition,\n\t\t\t\t\tlogMessage,\n\t\t\t\t\ttriggeredBy,\n\t\t\t\t\tmode,\n\t\t\t\t\tmodeLabel,\n\t\t\t\t});\n\t\t\t\tthis.debugService.updateBreakpoints(this.breakpoint.originalUri, data, false).then(undefined, onUnexpectedError);\n\t\t\t} else {\n\t\t\t\tconst model = this.editor.getModel();\n\t\t\t\tif (model) {\n\t\t\t\t\tthis.debugService.addBreakpoints(model.uri, [{\n\t\t\t\t\t\tlineNumber: this.lineNumber,\n\t\t\t\t\t\tcolumn: this.column,\n\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\tcondition,\n\t\t\t\t\t\thitCondition,\n\t\t\t\t\t\tlogMessage,\n\t\t\t\t\t\ttriggeredBy,\n\t\t\t\t\t\tmode,\n\t\t\t\t\t\tmodeLabel,\n\t\t\t\t\t}]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.dispose();\n\t}\n\n\tprivate focusInput() {\n\t\tif (this.context === Context.TRIGGER_POINT) {\n\t\t\tthis.selectBreakpointBox.focus();\n\t\t} else {\n\t\t\tthis.input.focus();\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.input.dispose();\n\t\tlifecycle.dispose(this.toDispose);\n\t\tsetTimeout(() => this.editor.focus(), 0);\n\t}\n}\n\nclass AcceptBreakpointWidgetInputAction extends EditorCommand {\n\tstatic ID = 'breakpointWidget.action.acceptInput';\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AcceptBreakpointWidgetInputAction.ID,\n\t\t\tprecondition: CONTEXT_BREAKPOINT_WIDGET_VISIBLE,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: CONTEXT_IN_BREAKPOINT_WIDGET,\n\t\t\t\tprimary: KeyCode.Enter,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\trunEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\taccessor.get(IPrivateBreakpointWidgetService).close(true);\n\t}\n}\n\nclass CloseBreakpointWidgetCommand extends EditorCommand {\n\tstatic ID = 'closeBreakpointWidget';\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CloseBreakpointWidgetCommand.ID,\n\t\t\tprecondition: CONTEXT_BREAKPOINT_WIDGET_VISIBLE,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\tsecondary: [KeyMod.Shift | KeyCode.Escape],\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\trunEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, args: any): void {\n\t\tconst debugContribution = editor.getContribution<IBreakpointEditorContribution>(BREAKPOINT_EDITOR_CONTRIBUTION_ID);\n\t\tif (debugContribution) {\n\t\t\t// if focus is in outer editor we need to use the debug contribution to close\n\t\t\treturn debugContribution.closeBreakpointWidget();\n\t\t}\n\n\t\taccessor.get(IPrivateBreakpointWidgetService).close(false);\n\t}\n}\n\nregisterEditorCommand(new AcceptBreakpointWidgetInputAction());\nregisterEditorCommand(new CloseBreakpointWidgetCommand());\n"],
  "mappings": "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",
  "names": ["uri", "model"]
}
