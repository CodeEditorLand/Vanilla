{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/breakpointWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport { StandardKeyboardEvent } from \"../../../../base/browser/keyboardEvent.js\";\nimport { Button } from \"../../../../base/browser/ui/button/button.js\";\nimport { getDefaultHoverDelegate } from \"../../../../base/browser/ui/hover/hoverDelegateFactory.js\";\nimport {\n\ttype ISelectOptionItem,\n\tSelectBox,\n} from \"../../../../base/browser/ui/selectBox/selectBox.js\";\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { onUnexpectedError } from \"../../../../base/common/errors.js\";\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport * as lifecycle from \"../../../../base/common/lifecycle.js\";\nimport { URI as uri } from \"../../../../base/common/uri.js\";\nimport \"./media/breakpointWidget.css\";\nimport type {\n\tIActiveCodeEditor,\n\tICodeEditor,\n} from \"../../../../editor/browser/editorBrowser.js\";\nimport {\n\tEditorCommand,\n\ttype ServicesAccessor,\n\tregisterEditorCommand,\n} from \"../../../../editor/browser/editorExtensions.js\";\nimport { ICodeEditorService } from \"../../../../editor/browser/services/codeEditorService.js\";\nimport { CodeEditorWidget } from \"../../../../editor/browser/widget/codeEditor/codeEditorWidget.js\";\nimport {\n\tEditorOption,\n\ttype IEditorOptions,\n} from \"../../../../editor/common/config/editorOptions.js\";\nimport {\n\ttype IPosition,\n\tPosition,\n} from \"../../../../editor/common/core/position.js\";\nimport { type IRange, Range } from \"../../../../editor/common/core/range.js\";\nimport type { IDecorationOptions } from \"../../../../editor/common/editorCommon.js\";\nimport { EditorContextKeys } from \"../../../../editor/common/editorContextKeys.js\";\nimport {\n\ttype CompletionContext,\n\tCompletionItemKind,\n\ttype CompletionList,\n} from \"../../../../editor/common/languages.js\";\nimport { PLAINTEXT_LANGUAGE_ID } from \"../../../../editor/common/languages/modesRegistry.js\";\nimport type { ITextModel } from \"../../../../editor/common/model.js\";\nimport { ILanguageFeaturesService } from \"../../../../editor/common/services/languageFeatures.js\";\nimport { IModelService } from \"../../../../editor/common/services/model.js\";\nimport { ITextModelService } from \"../../../../editor/common/services/resolverService.js\";\nimport {\n\tCompletionOptions,\n\tprovideSuggestionItems,\n} from \"../../../../editor/contrib/suggest/browser/suggest.js\";\nimport { ZoneWidget } from \"../../../../editor/contrib/zoneWidget/browser/zoneWidget.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextViewService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport {\n\tIInstantiationService,\n\tcreateDecorator,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ServiceCollection } from \"../../../../platform/instantiation/common/serviceCollection.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { ILabelService } from \"../../../../platform/label/common/label.js\";\nimport {\n\tdefaultButtonStyles,\n\tdefaultSelectBoxStyles,\n} from \"../../../../platform/theme/browser/defaultStyles.js\";\nimport { editorForeground } from \"../../../../platform/theme/common/colorRegistry.js\";\nimport {\n\ttype IColorTheme,\n\tIThemeService,\n} from \"../../../../platform/theme/common/themeService.js\";\nimport {\n\tgetSimpleCodeEditorWidgetOptions,\n\tgetSimpleEditorOptions,\n} from \"../../codeEditor/browser/simpleEditorOptions.js\";\nimport {\n\tBREAKPOINT_EDITOR_CONTRIBUTION_ID,\n\tCONTEXT_BREAKPOINT_WIDGET_VISIBLE,\n\tCONTEXT_IN_BREAKPOINT_WIDGET,\n\tBreakpointWidgetContext as Context,\n\tDEBUG_SCHEME,\n\ttype IBreakpoint,\n\ttype IBreakpointEditorContribution,\n\ttype IBreakpointUpdateData,\n\tIDebugService,\n} from \"../common/debug.js\";\n\nconst $ = dom.$;\nconst IPrivateBreakpointWidgetService =\n\tcreateDecorator<IPrivateBreakpointWidgetService>(\n\t\t\"privateBreakpointWidgetService\",\n\t);\ninterface IPrivateBreakpointWidgetService {\n\treadonly _serviceBrand: undefined;\n\tclose(success: boolean): void;\n}\nconst DECORATION_KEY = \"breakpointwidgetdecoration\";\n\nfunction isPositionInCurlyBracketBlock(input: IActiveCodeEditor): boolean {\n\tconst model = input.getModel();\n\tconst bracketPairs = model.bracketPairs.getBracketPairsInRange(\n\t\tRange.fromPositions(input.getPosition()),\n\t);\n\treturn bracketPairs.some((p) => p.openingBracketInfo.bracketText === \"{\");\n}\n\nfunction createDecorations(\n\ttheme: IColorTheme,\n\tplaceHolder: string,\n): IDecorationOptions[] {\n\tconst transparentForeground = theme\n\t\t.getColor(editorForeground)\n\t\t?.transparent(0.4);\n\treturn [\n\t\t{\n\t\t\trange: {\n\t\t\t\tstartLineNumber: 0,\n\t\t\t\tendLineNumber: 0,\n\t\t\t\tstartColumn: 0,\n\t\t\t\tendColumn: 1,\n\t\t\t},\n\t\t\trenderOptions: {\n\t\t\t\tafter: {\n\t\t\t\t\tcontentText: placeHolder,\n\t\t\t\t\tcolor: transparentForeground\n\t\t\t\t\t\t? transparentForeground.toString()\n\t\t\t\t\t\t: undefined,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t];\n}\n\nexport class BreakpointWidget\n\textends ZoneWidget\n\timplements IPrivateBreakpointWidgetService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate selectContainer!: HTMLElement;\n\tprivate inputContainer!: HTMLElement;\n\tprivate selectBreakpointContainer!: HTMLElement;\n\tprivate input!: IActiveCodeEditor;\n\tprivate selectBreakpointBox!: SelectBox;\n\tprivate selectModeBox?: SelectBox;\n\tprivate toDispose: lifecycle.IDisposable[];\n\tprivate conditionInput = \"\";\n\tprivate hitCountInput = \"\";\n\tprivate logMessageInput = \"\";\n\tprivate modeInput?: DebugProtocol.BreakpointMode;\n\tprivate breakpoint: IBreakpoint | undefined;\n\tprivate context: Context;\n\tprivate heightInPx: number | undefined;\n\tprivate triggeredByBreakpointInput: IBreakpoint | undefined;\n\n\tconstructor(editor: ICodeEditor, private lineNumber: number, private column: number | undefined, context: Context | undefined,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@ICodeEditorService private readonly codeEditorService: ICodeEditorService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@ILanguageFeaturesService private readonly languageFeaturesService: ILanguageFeaturesService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@ITextModelService private readonly textModelService: ITextModelService,\n\t\t@IHoverService private readonly hoverService: IHoverService\n\t) {\n\t\tsuper(editor, { showFrame: true, showArrow: false, frameWidth: 1, isAccessible: true });\n\n\t\tthis.toDispose = [];\n\t\tconst model = this.editor.getModel();\n\t\tif (model) {\n\t\t\tconst uri = model.uri;\n\t\t\tconst breakpoints = this.debugService.getModel().getBreakpoints({ lineNumber: this.lineNumber, column: this.column, uri });\n\t\t\tthis.breakpoint = breakpoints.length ? breakpoints[0] : undefined;\n\t\t}\n\n\t\tif (context === undefined) {\n\t\t\tif (this.breakpoint && !this.breakpoint.condition && !this.breakpoint.hitCondition && this.breakpoint.logMessage) {\n\t\t\t\tthis.context = Context.LOG_MESSAGE;\n\t\t\t} else if (this.breakpoint && !this.breakpoint.condition && this.breakpoint.hitCondition) {\n\t\t\t\tthis.context = Context.HIT_COUNT;\n\t\t\t} else if (this.breakpoint && this.breakpoint.triggeredBy) {\n\t\t\t\tthis.context = Context.TRIGGER_POINT;\n\t\t\t} else {\n\t\t\t\tthis.context = Context.CONDITION;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.context = context;\n\t\t}\n\n\t\tthis.toDispose.push(this.debugService.getModel().onDidChangeBreakpoints(e => {\n\t\t\tif (this.breakpoint && e && e.removed && e.removed.indexOf(this.breakpoint) >= 0) {\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}));\n\t\tthis.codeEditorService.registerDecorationType('breakpoint-widget', DECORATION_KEY, {});\n\n\t\tthis.create();\n\t}\n\n\tprivate get placeholder(): string {\n\t\tconst acceptString =\n\t\t\tthis.keybindingService\n\t\t\t\t.lookupKeybinding(AcceptBreakpointWidgetInputAction.ID)\n\t\t\t\t?.getLabel() || \"Enter\";\n\t\tconst closeString =\n\t\t\tthis.keybindingService\n\t\t\t\t.lookupKeybinding(CloseBreakpointWidgetCommand.ID)\n\t\t\t\t?.getLabel() || \"Escape\";\n\t\tswitch (this.context) {\n\t\t\tcase Context.LOG_MESSAGE:\n\t\t\t\treturn nls.localize(\n\t\t\t\t\t\"breakpointWidgetLogMessagePlaceholder\",\n\t\t\t\t\t\"Message to log when breakpoint is hit. Expressions within {} are interpolated. '{0}' to accept, '{1}' to cancel.\",\n\t\t\t\t\tacceptString,\n\t\t\t\t\tcloseString,\n\t\t\t\t);\n\t\t\tcase Context.HIT_COUNT:\n\t\t\t\treturn nls.localize(\n\t\t\t\t\t\"breakpointWidgetHitCountPlaceholder\",\n\t\t\t\t\t\"Break when hit count condition is met. '{0}' to accept, '{1}' to cancel.\",\n\t\t\t\t\tacceptString,\n\t\t\t\t\tcloseString,\n\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\treturn nls.localize(\n\t\t\t\t\t\"breakpointWidgetExpressionPlaceholder\",\n\t\t\t\t\t\"Break when expression evaluates to true. '{0}' to accept, '{1}' to cancel.\",\n\t\t\t\t\tacceptString,\n\t\t\t\t\tcloseString,\n\t\t\t\t);\n\t\t}\n\t}\n\n\tprivate getInputValue(breakpoint: IBreakpoint | undefined): string {\n\t\tswitch (this.context) {\n\t\t\tcase Context.LOG_MESSAGE:\n\t\t\t\treturn breakpoint && breakpoint.logMessage\n\t\t\t\t\t? breakpoint.logMessage\n\t\t\t\t\t: this.logMessageInput;\n\t\t\tcase Context.HIT_COUNT:\n\t\t\t\treturn breakpoint && breakpoint.hitCondition\n\t\t\t\t\t? breakpoint.hitCondition\n\t\t\t\t\t: this.hitCountInput;\n\t\t\tdefault:\n\t\t\t\treturn breakpoint && breakpoint.condition\n\t\t\t\t\t? breakpoint.condition\n\t\t\t\t\t: this.conditionInput;\n\t\t}\n\t}\n\n\tprivate rememberInput(): void {\n\t\tif (this.context !== Context.TRIGGER_POINT) {\n\t\t\tconst value = this.input.getModel().getValue();\n\t\t\tswitch (this.context) {\n\t\t\t\tcase Context.LOG_MESSAGE:\n\t\t\t\t\tthis.logMessageInput = value;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Context.HIT_COUNT:\n\t\t\t\t\tthis.hitCountInput = value;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.conditionInput = value;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate setInputMode(): void {\n\t\tif (this.editor.hasModel()) {\n\t\t\t// Use plaintext language for log messages, otherwise respect underlying editor language #125619\n\t\t\tconst languageId =\n\t\t\t\tthis.context === Context.LOG_MESSAGE\n\t\t\t\t\t? PLAINTEXT_LANGUAGE_ID\n\t\t\t\t\t: this.editor.getModel().getLanguageId();\n\t\t\tthis.input.getModel().setLanguage(languageId);\n\t\t}\n\t}\n\n\toverride show(rangeOrPos: IRange | IPosition): void {\n\t\tconst lineNum = this.input.getModel().getLineCount();\n\t\tsuper.show(rangeOrPos, lineNum + 1);\n\t}\n\n\tfitHeightToContent(): void {\n\t\tconst lineNum = this.input.getModel().getLineCount();\n\t\tthis._relayout(lineNum + 1);\n\t}\n\n\tprotected _fillContainer(container: HTMLElement): void {\n\t\tthis.setCssClass(\"breakpoint-widget\");\n\t\tconst selectBox = new SelectBox(\n\t\t\t[\n\t\t\t\t{ text: nls.localize(\"expression\", \"Expression\") },\n\t\t\t\t{ text: nls.localize(\"hitCount\", \"Hit Count\") },\n\t\t\t\t{ text: nls.localize(\"logMessage\", \"Log Message\") },\n\t\t\t\t{ text: nls.localize(\"triggeredBy\", \"Wait for Breakpoint\") },\n\t\t\t] satisfies ISelectOptionItem[],\n\t\t\tthis.context,\n\t\t\tthis.contextViewService,\n\t\t\tdefaultSelectBoxStyles,\n\t\t\t{ ariaLabel: nls.localize(\"breakpointType\", \"Breakpoint Type\") },\n\t\t);\n\t\tthis.selectContainer = $(\".breakpoint-select-container\");\n\t\tselectBox.render(dom.append(container, this.selectContainer));\n\t\tselectBox.onDidSelect((e) => {\n\t\t\tthis.rememberInput();\n\t\t\tthis.context = e.index;\n\t\t\tthis.updateContextInput();\n\t\t});\n\n\t\tthis.createModesInput(container);\n\n\t\tthis.inputContainer = $(\".inputContainer\");\n\t\tthis.toDispose.push(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\tthis.inputContainer,\n\t\t\t\tthis.placeholder,\n\t\t\t),\n\t\t);\n\t\tthis.createBreakpointInput(dom.append(container, this.inputContainer));\n\n\t\tthis.input.getModel().setValue(this.getInputValue(this.breakpoint));\n\t\tthis.toDispose.push(\n\t\t\tthis.input.getModel().onDidChangeContent(() => {\n\t\t\t\tthis.fitHeightToContent();\n\t\t\t}),\n\t\t);\n\t\tthis.input.setPosition({\n\t\t\tlineNumber: 1,\n\t\t\tcolumn: this.input.getModel().getLineMaxColumn(1),\n\t\t});\n\n\t\tthis.createTriggerBreakpointInput(container);\n\n\t\tthis.updateContextInput();\n\t\t// Due to an electron bug we have to do the timeout, otherwise we do not get focus\n\t\tsetTimeout(() => this.focusInput(), 150);\n\t}\n\n\tprivate createModesInput(container: HTMLElement) {\n\t\tconst modes = this.debugService.getModel().getBreakpointModes(\"source\");\n\t\tif (modes.length <= 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst sb = (this.selectModeBox = new SelectBox(\n\t\t\t[\n\t\t\t\t{ text: nls.localize(\"bpMode\", \"Mode\"), isDisabled: true },\n\t\t\t\t...modes.map((mode) => ({\n\t\t\t\t\ttext: mode.label,\n\t\t\t\t\tdescription: mode.description,\n\t\t\t\t})),\n\t\t\t],\n\t\t\tmodes.findIndex((m) => m.mode === this.breakpoint?.mode) + 1,\n\t\t\tthis.contextViewService,\n\t\t\tdefaultSelectBoxStyles,\n\t\t));\n\t\tthis.toDispose.push(sb);\n\t\tthis.toDispose.push(\n\t\t\tsb.onDidSelect((e) => {\n\t\t\t\tthis.modeInput = modes[e.index - 1];\n\t\t\t}),\n\t\t);\n\n\t\tconst modeWrapper = $(\".select-mode-container\");\n\t\tconst selectionWrapper = $(\".select-box-container\");\n\t\tdom.append(modeWrapper, selectionWrapper);\n\t\tsb.render(selectionWrapper);\n\t\tdom.append(container, modeWrapper);\n\t}\n\n\tprivate createTriggerBreakpointInput(container: HTMLElement) {\n\t\tconst breakpoints = this.debugService\n\t\t\t.getModel()\n\t\t\t.getBreakpoints()\n\t\t\t.filter((bp) => bp !== this.breakpoint && !bp.logMessage);\n\t\tconst breakpointOptions: ISelectOptionItem[] = [\n\t\t\t{\n\t\t\t\ttext: nls.localize(\"noTriggerByBreakpoint\", \"None\"),\n\t\t\t\tisDisabled: true,\n\t\t\t},\n\t\t\t...breakpoints.map((bp) => ({\n\t\t\t\ttext: `${this.labelService.getUriLabel(bp.uri, { relative: true })}: ${bp.lineNumber}`,\n\t\t\t\tdescription: nls.localize(\"triggerByLoading\", \"Loading...\"),\n\t\t\t})),\n\t\t];\n\n\t\tconst index = breakpoints.findIndex(\n\t\t\t(bp) => this.breakpoint?.triggeredBy === bp.getId(),\n\t\t);\n\t\tfor (const [i, bp] of breakpoints.entries()) {\n\t\t\tthis.textModelService\n\t\t\t\t.createModelReference(bp.uri)\n\t\t\t\t.then((ref) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tbreakpointOptions[i + 1].description =\n\t\t\t\t\t\t\tref.object.textEditorModel\n\t\t\t\t\t\t\t\t.getLineContent(bp.lineNumber)\n\t\t\t\t\t\t\t\t.trim();\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tref.dispose();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tbreakpointOptions[i + 1].description = nls.localize(\n\t\t\t\t\t\t\"noBpSource\",\n\t\t\t\t\t\t\"Could not load source.\",\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t}\n\n\t\tconst selectBreakpointBox = (this.selectBreakpointBox = new SelectBox(\n\t\t\tbreakpointOptions,\n\t\t\tindex + 1,\n\t\t\tthis.contextViewService,\n\t\t\tdefaultSelectBoxStyles,\n\t\t\t{\n\t\t\t\tariaLabel: nls.localize(\n\t\t\t\t\t\"selectBreakpoint\",\n\t\t\t\t\t\"Select breakpoint\",\n\t\t\t\t),\n\t\t\t},\n\t\t));\n\t\tselectBreakpointBox.onDidSelect((e) => {\n\t\t\tif (e.index === 0) {\n\t\t\t\tthis.triggeredByBreakpointInput = undefined;\n\t\t\t} else {\n\t\t\t\tthis.triggeredByBreakpointInput = breakpoints[e.index - 1];\n\t\t\t}\n\t\t});\n\t\tthis.toDispose.push(selectBreakpointBox);\n\t\tthis.selectBreakpointContainer = $(\".select-breakpoint-container\");\n\t\tthis.toDispose.push(\n\t\t\tdom.addDisposableListener(\n\t\t\t\tthis.selectBreakpointContainer,\n\t\t\t\tdom.EventType.KEY_DOWN,\n\t\t\t\t(e) => {\n\t\t\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\t\t\tif (event.equals(KeyCode.Escape)) {\n\t\t\t\t\t\tthis.close(false);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tconst selectionWrapper = $(\".select-box-container\");\n\t\tdom.append(this.selectBreakpointContainer, selectionWrapper);\n\t\tselectBreakpointBox.render(selectionWrapper);\n\n\t\tdom.append(container, this.selectBreakpointContainer);\n\n\t\tconst closeButton = new Button(\n\t\t\tthis.selectBreakpointContainer,\n\t\t\tdefaultButtonStyles,\n\t\t);\n\t\tcloseButton.label = nls.localize(\"ok\", \"Ok\");\n\t\tthis.toDispose.push(closeButton.onDidClick(() => this.close(true)));\n\t\tthis.toDispose.push(closeButton);\n\t}\n\n\tprivate updateContextInput() {\n\t\tif (this.context === Context.TRIGGER_POINT) {\n\t\t\tthis.inputContainer.hidden = true;\n\t\t\tthis.selectBreakpointContainer.hidden = false;\n\t\t} else {\n\t\t\tthis.inputContainer.hidden = false;\n\t\t\tthis.selectBreakpointContainer.hidden = true;\n\t\t\tthis.setInputMode();\n\t\t\tconst value = this.getInputValue(this.breakpoint);\n\t\t\tthis.input.getModel().setValue(value);\n\t\t\tthis.focusInput();\n\t\t}\n\t}\n\n\tprotected override _doLayout(\n\t\theightInPixel: number,\n\t\twidthInPixel: number,\n\t): void {\n\t\tthis.heightInPx = heightInPixel;\n\t\tthis.input.layout({ height: heightInPixel, width: widthInPixel - 113 });\n\t\tthis.centerInputVertically();\n\t}\n\n\tprotected override _onWidth(widthInPixel: number): void {\n\t\tif (typeof this.heightInPx === \"number\") {\n\t\t\tthis._doLayout(this.heightInPx, widthInPixel);\n\t\t}\n\t}\n\n\tprivate createBreakpointInput(container: HTMLElement): void {\n\t\tconst scopedContextKeyService =\n\t\t\tthis.contextKeyService.createScoped(container);\n\t\tthis.toDispose.push(scopedContextKeyService);\n\n\t\tconst scopedInstatiationService = this.instantiationService.createChild(\n\t\t\tnew ServiceCollection(\n\t\t\t\t[IContextKeyService, scopedContextKeyService],\n\t\t\t\t[IPrivateBreakpointWidgetService, this],\n\t\t\t),\n\t\t);\n\t\tthis.toDispose.push(scopedInstatiationService);\n\n\t\tconst options = this.createEditorOptions();\n\t\tconst codeEditorWidgetOptions = getSimpleCodeEditorWidgetOptions();\n\t\tthis.input = <IActiveCodeEditor>(\n\t\t\tscopedInstatiationService.createInstance(\n\t\t\t\tCodeEditorWidget,\n\t\t\t\tcontainer,\n\t\t\t\toptions,\n\t\t\t\tcodeEditorWidgetOptions,\n\t\t\t)\n\t\t);\n\t\tCONTEXT_IN_BREAKPOINT_WIDGET.bindTo(scopedContextKeyService).set(true);\n\t\tconst model = this.modelService.createModel(\n\t\t\t\"\",\n\t\t\tnull,\n\t\t\turi.parse(`${DEBUG_SCHEME}:${this.editor.getId()}:breakpointinput`),\n\t\t\ttrue,\n\t\t);\n\t\tif (this.editor.hasModel()) {\n\t\t\tmodel.setLanguage(this.editor.getModel().getLanguageId());\n\t\t}\n\t\tthis.input.setModel(model);\n\t\tthis.setInputMode();\n\t\tthis.toDispose.push(model);\n\t\tconst setDecorations = () => {\n\t\t\tconst value = this.input.getModel().getValue();\n\t\t\tconst decorations = !!value\n\t\t\t\t? []\n\t\t\t\t: createDecorations(\n\t\t\t\t\t\tthis.themeService.getColorTheme(),\n\t\t\t\t\t\tthis.placeholder,\n\t\t\t\t\t);\n\t\t\tthis.input.setDecorationsByType(\n\t\t\t\t\"breakpoint-widget\",\n\t\t\t\tDECORATION_KEY,\n\t\t\t\tdecorations,\n\t\t\t);\n\t\t};\n\t\tthis.input.getModel().onDidChangeContent(() => setDecorations());\n\t\tthis.themeService.onDidColorThemeChange(() => setDecorations());\n\n\t\tthis.toDispose.push(\n\t\t\tthis.languageFeaturesService.completionProvider.register(\n\t\t\t\t{ scheme: DEBUG_SCHEME, hasAccessToAllModels: true },\n\t\t\t\t{\n\t\t\t\t\t_debugDisplayName: \"breakpointWidget\",\n\t\t\t\t\tprovideCompletionItems: (\n\t\t\t\t\t\tmodel: ITextModel,\n\t\t\t\t\t\tposition: Position,\n\t\t\t\t\t\t_context: CompletionContext,\n\t\t\t\t\t\ttoken: CancellationToken,\n\t\t\t\t\t): Promise<CompletionList> => {\n\t\t\t\t\t\tlet suggestionsPromise: Promise<CompletionList>;\n\t\t\t\t\t\tconst underlyingModel = this.editor.getModel();\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tunderlyingModel &&\n\t\t\t\t\t\t\t(this.context === Context.CONDITION ||\n\t\t\t\t\t\t\t\t(this.context === Context.LOG_MESSAGE &&\n\t\t\t\t\t\t\t\t\tisPositionInCurlyBracketBlock(this.input)))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tsuggestionsPromise = provideSuggestionItems(\n\t\t\t\t\t\t\t\tthis.languageFeaturesService.completionProvider,\n\t\t\t\t\t\t\t\tunderlyingModel,\n\t\t\t\t\t\t\t\tnew Position(this.lineNumber, 1),\n\t\t\t\t\t\t\t\tnew CompletionOptions(\n\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\tnew Set<CompletionItemKind>().add(\n\t\t\t\t\t\t\t\t\t\tCompletionItemKind.Snippet,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t_context,\n\t\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t\t).then((suggestions) => {\n\t\t\t\t\t\t\t\tlet overwriteBefore = 0;\n\t\t\t\t\t\t\t\tif (this.context === Context.CONDITION) {\n\t\t\t\t\t\t\t\t\toverwriteBefore = position.column - 1;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// Inside the currly brackets, need to count how many useful characters are behind the position so they would all be taken into account\n\t\t\t\t\t\t\t\t\tconst value = this.input\n\t\t\t\t\t\t\t\t\t\t.getModel()\n\t\t\t\t\t\t\t\t\t\t.getValue();\n\t\t\t\t\t\t\t\t\twhile (\n\t\t\t\t\t\t\t\t\t\tposition.column - 2 - overwriteBefore >=\n\t\t\t\t\t\t\t\t\t\t\t0 &&\n\t\t\t\t\t\t\t\t\t\tvalue[\n\t\t\t\t\t\t\t\t\t\t\tposition.column -\n\t\t\t\t\t\t\t\t\t\t\t\t2 -\n\t\t\t\t\t\t\t\t\t\t\t\toverwriteBefore\n\t\t\t\t\t\t\t\t\t\t] !== \"{\" &&\n\t\t\t\t\t\t\t\t\t\tvalue[\n\t\t\t\t\t\t\t\t\t\t\tposition.column -\n\t\t\t\t\t\t\t\t\t\t\t\t2 -\n\t\t\t\t\t\t\t\t\t\t\t\toverwriteBefore\n\t\t\t\t\t\t\t\t\t\t] !== \" \"\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\toverwriteBefore++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tsuggestions: suggestions.items.map((s) => {\n\t\t\t\t\t\t\t\t\t\ts.completion.range =\n\t\t\t\t\t\t\t\t\t\t\tRange.fromPositions(\n\t\t\t\t\t\t\t\t\t\t\t\tposition.delta(\n\t\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t-overwriteBefore,\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\tposition,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\treturn s.completion;\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsuggestionsPromise = Promise.resolve({\n\t\t\t\t\t\t\t\tsuggestions: [],\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn suggestionsPromise;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis.toDispose.push(\n\t\t\tthis._configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (\n\t\t\t\t\te.affectsConfiguration(\"editor.fontSize\") ||\n\t\t\t\t\te.affectsConfiguration(\"editor.lineHeight\")\n\t\t\t\t) {\n\t\t\t\t\tthis.input.updateOptions(this.createEditorOptions());\n\t\t\t\t\tthis.centerInputVertically();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate createEditorOptions(): IEditorOptions {\n\t\tconst editorConfig =\n\t\t\tthis._configurationService.getValue<IEditorOptions>(\"editor\");\n\t\tconst options = getSimpleEditorOptions(this._configurationService);\n\t\toptions.fontSize = editorConfig.fontSize;\n\t\toptions.fontFamily = editorConfig.fontFamily;\n\t\toptions.lineHeight = editorConfig.lineHeight;\n\t\toptions.fontLigatures = editorConfig.fontLigatures;\n\t\toptions.ariaLabel = this.placeholder;\n\t\treturn options;\n\t}\n\n\tprivate centerInputVertically() {\n\t\tif (this.container && typeof this.heightInPx === \"number\") {\n\t\t\tconst lineHeight = this.input.getOption(EditorOption.lineHeight);\n\t\t\tconst lineNum = this.input.getModel().getLineCount();\n\t\t\tconst newTopMargin = (this.heightInPx - lineNum * lineHeight) / 2;\n\t\t\tthis.inputContainer.style.marginTop = newTopMargin + \"px\";\n\t\t}\n\t}\n\n\tclose(success: boolean): void {\n\t\tif (success) {\n\t\t\t// if there is already a breakpoint on this location - remove it.\n\n\t\t\tlet condition: string | undefined;\n\t\t\tlet hitCondition: string | undefined;\n\t\t\tlet logMessage: string | undefined;\n\t\t\tlet triggeredBy: string | undefined;\n\t\t\tlet mode: string | undefined;\n\t\t\tlet modeLabel: string | undefined;\n\n\t\t\tthis.rememberInput();\n\n\t\t\tif (this.conditionInput || this.context === Context.CONDITION) {\n\t\t\t\tcondition = this.conditionInput;\n\t\t\t}\n\t\t\tif (this.hitCountInput || this.context === Context.HIT_COUNT) {\n\t\t\t\thitCondition = this.hitCountInput;\n\t\t\t}\n\t\t\tif (this.logMessageInput || this.context === Context.LOG_MESSAGE) {\n\t\t\t\tlogMessage = this.logMessageInput;\n\t\t\t}\n\t\t\tif (this.selectModeBox) {\n\t\t\t\tmode = this.modeInput?.mode;\n\t\t\t\tmodeLabel = this.modeInput?.label;\n\t\t\t}\n\t\t\tif (this.context === Context.TRIGGER_POINT) {\n\t\t\t\t// currently, trigger points don't support additional conditions:\n\t\t\t\tcondition = undefined;\n\t\t\t\thitCondition = undefined;\n\t\t\t\tlogMessage = undefined;\n\t\t\t\ttriggeredBy = this.triggeredByBreakpointInput?.getId();\n\t\t\t}\n\n\t\t\tif (this.breakpoint) {\n\t\t\t\tconst data = new Map<string, IBreakpointUpdateData>();\n\t\t\t\tdata.set(this.breakpoint.getId(), {\n\t\t\t\t\tcondition,\n\t\t\t\t\thitCondition,\n\t\t\t\t\tlogMessage,\n\t\t\t\t\ttriggeredBy,\n\t\t\t\t\tmode,\n\t\t\t\t\tmodeLabel,\n\t\t\t\t});\n\t\t\t\tthis.debugService\n\t\t\t\t\t.updateBreakpoints(this.breakpoint.originalUri, data, false)\n\t\t\t\t\t.then(undefined, onUnexpectedError);\n\t\t\t} else {\n\t\t\t\tconst model = this.editor.getModel();\n\t\t\t\tif (model) {\n\t\t\t\t\tthis.debugService.addBreakpoints(model.uri, [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlineNumber: this.lineNumber,\n\t\t\t\t\t\t\tcolumn: this.column,\n\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\tcondition,\n\t\t\t\t\t\t\thitCondition,\n\t\t\t\t\t\t\tlogMessage,\n\t\t\t\t\t\t\ttriggeredBy,\n\t\t\t\t\t\t\tmode,\n\t\t\t\t\t\t\tmodeLabel,\n\t\t\t\t\t\t},\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.dispose();\n\t}\n\n\tprivate focusInput() {\n\t\tif (this.context === Context.TRIGGER_POINT) {\n\t\t\tthis.selectBreakpointBox.focus();\n\t\t} else {\n\t\t\tthis.input.focus();\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.input.dispose();\n\t\tlifecycle.dispose(this.toDispose);\n\t\tsetTimeout(() => this.editor.focus(), 0);\n\t}\n}\n\nclass AcceptBreakpointWidgetInputAction extends EditorCommand {\n\tstatic ID = \"breakpointWidget.action.acceptInput\";\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AcceptBreakpointWidgetInputAction.ID,\n\t\t\tprecondition: CONTEXT_BREAKPOINT_WIDGET_VISIBLE,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: CONTEXT_IN_BREAKPOINT_WIDGET,\n\t\t\t\tprimary: KeyCode.Enter,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t});\n\t}\n\n\trunEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\taccessor.get(IPrivateBreakpointWidgetService).close(true);\n\t}\n}\n\nclass CloseBreakpointWidgetCommand extends EditorCommand {\n\tstatic ID = \"closeBreakpointWidget\";\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CloseBreakpointWidgetCommand.ID,\n\t\t\tprecondition: CONTEXT_BREAKPOINT_WIDGET_VISIBLE,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\tsecondary: [KeyMod.Shift | KeyCode.Escape],\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t});\n\t}\n\n\trunEditorCommand(\n\t\taccessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t\targs: any,\n\t): void {\n\t\tconst debugContribution =\n\t\t\teditor.getContribution<IBreakpointEditorContribution>(\n\t\t\t\tBREAKPOINT_EDITOR_CONTRIBUTION_ID,\n\t\t\t);\n\t\tif (debugContribution) {\n\t\t\t// if focus is in outer editor we need to use the debug contribution to close\n\t\t\treturn debugContribution.closeBreakpointWidget();\n\t\t}\n\n\t\taccessor.get(IPrivateBreakpointWidgetService).close(false);\n\t}\n}\n\nregisterEditorCommand(new AcceptBreakpointWidgetInputAction());\nregisterEditorCommand(new CloseBreakpointWidgetCommand());\n"],
  "mappings": "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",
  "names": ["uri", "model"]
}
