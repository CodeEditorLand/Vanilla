{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/debugSessionPicker.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\nimport { matchesFuzzy } from '../../../../base/common/filters.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { IDebugService, IDebugSession, REPL_VIEW_ID } from '../common/debug.js';\nimport { IQuickInputService, IQuickPickSeparator } from '../../../../platform/quickinput/common/quickInput.js';\n\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IPickerDebugItem } from '../common/loadedScriptsPicker.js';\nimport { IViewsService } from '../../../services/views/common/viewsService.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\n\n\nexport async function showDebugSessionMenu(accessor: ServicesAccessor, selectAndStartID: string) {\n\tconst quickInputService = accessor.get(IQuickInputService);\n\tconst debugService = accessor.get(IDebugService);\n\tconst viewsService = accessor.get(IViewsService);\n\tconst commandService = accessor.get(ICommandService);\n\n\tconst localDisposableStore = new DisposableStore();\n\tconst quickPick = quickInputService.createQuickPick<IPickerDebugItem>({ useSeparators: true });\n\tlocalDisposableStore.add(quickPick);\n\tquickPick.matchOnLabel = quickPick.matchOnDescription = quickPick.matchOnDetail = quickPick.sortByLabel = false;\n\tquickPick.placeholder = nls.localize('moveFocusedView.selectView', 'Search debug sessions by name');\n\n\tconst pickItems = _getPicksAndActiveItem(quickPick.value, selectAndStartID, debugService, viewsService, commandService);\n\tquickPick.items = pickItems.picks;\n\tquickPick.activeItems = pickItems.activeItems;\n\n\tlocalDisposableStore.add(quickPick.onDidChangeValue(async () => {\n\t\tquickPick.items = _getPicksAndActiveItem(quickPick.value, selectAndStartID, debugService, viewsService, commandService).picks;\n\t}));\n\tlocalDisposableStore.add(quickPick.onDidAccept(() => {\n\t\tconst selectedItem = quickPick.selectedItems[0];\n\t\tselectedItem.accept();\n\t\tquickPick.hide();\n\t\tlocalDisposableStore.dispose();\n\t}));\n\tquickPick.show();\n}\n\nfunction _getPicksAndActiveItem(filter: string, selectAndStartID: string, debugService: IDebugService, viewsService: IViewsService, commandService: ICommandService): { picks: Array<IPickerDebugItem | IQuickPickSeparator>; activeItems: Array<IPickerDebugItem> } {\n\tconst debugConsolePicks: Array<IPickerDebugItem | IQuickPickSeparator> = [];\n\tconst headerSessions: IDebugSession[] = [];\n\n\tconst currSession = debugService.getViewModel().focusedSession;\n\tconst sessions = debugService.getModel().getSessions(false);\n\tconst activeItems: Array<IPickerDebugItem> = [];\n\n\tsessions.forEach((session) => {\n\t\tif (session.compact && session.parentSession) {\n\t\t\theaderSessions.push(session.parentSession);\n\t\t}\n\t});\n\n\tsessions.forEach((session) => {\n\t\tconst isHeader = headerSessions.includes(session);\n\t\tif (!session.parentSession) {\n\t\t\tdebugConsolePicks.push({ type: 'separator', label: isHeader ? session.name : undefined });\n\t\t}\n\n\t\tif (!isHeader) {\n\t\t\tconst pick = _createPick(session, filter, debugService, viewsService, commandService);\n\t\t\tif (pick) {\n\t\t\t\tdebugConsolePicks.push(pick);\n\t\t\t\tif (session.getId() === currSession?.getId()) {\n\t\t\t\t\tactiveItems.push(pick);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tif (debugConsolePicks.length) {\n\t\tdebugConsolePicks.push({ type: 'separator' });\n\t}\n\n\tconst createDebugSessionLabel = nls.localize('workbench.action.debug.startDebug', 'Start a New Debug Session');\n\tdebugConsolePicks.push({\n\t\tlabel: `$(plus) ${createDebugSessionLabel}`,\n\t\tariaLabel: createDebugSessionLabel,\n\t\taccept: () => commandService.executeCommand(selectAndStartID)\n\t});\n\n\treturn { picks: debugConsolePicks, activeItems };\n}\n\n\nfunction _getSessionInfo(session: IDebugSession): { label: string; description: string; ariaLabel: string } {\n\tconst label = (!session.configuration.name.length) ? session.name : session.configuration.name;\n\tconst parentName = session.compact ? undefined : session.parentSession?.configuration.name;\n\tlet description = '';\n\tlet ariaLabel = '';\n\tif (parentName) {\n\t\tariaLabel = nls.localize('workbench.action.debug.spawnFrom', 'Session {0} spawned from {1}', label, parentName);\n\t\tdescription = parentName;\n\t}\n\n\treturn { label, description, ariaLabel };\n}\n\nfunction _createPick(session: IDebugSession, filter: string, debugService: IDebugService, viewsService: IViewsService, commandService: ICommandService): IPickerDebugItem | undefined {\n\tconst pickInfo = _getSessionInfo(session);\n\tconst highlights = matchesFuzzy(filter, pickInfo.label, true);\n\tif (highlights) {\n\t\treturn {\n\t\t\tlabel: pickInfo.label,\n\t\t\tdescription: pickInfo.description,\n\t\t\tariaLabel: pickInfo.ariaLabel,\n\t\t\thighlights: { label: highlights },\n\t\t\taccept: () => {\n\t\t\t\tdebugService.focusStackFrame(undefined, undefined, session, { explicit: true });\n\t\t\t\tif (!viewsService.isViewVisible(REPL_VIEW_ID)) {\n\t\t\t\t\tviewsService.openView(REPL_VIEW_ID, true);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\treturn undefined;\n}\n\n\n"],
  "mappings": "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",
  "names": []
}
