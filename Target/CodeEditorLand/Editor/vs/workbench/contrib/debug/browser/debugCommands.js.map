{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/debugCommands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { List } from \"../../../../base/browser/ui/list/listWidget.js\";\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { deepClone } from \"../../../../base/common/objects.js\";\nimport { isWeb, isWindows } from \"../../../../base/common/platform.js\";\nimport {\n\ttype ICodeEditor,\n\tisCodeEditor,\n} from \"../../../../editor/browser/editorBrowser.js\";\nimport type { ServicesAccessor } from \"../../../../editor/browser/editorExtensions.js\";\nimport { EditorContextKeys } from \"../../../../editor/common/editorContextKeys.js\";\nimport { ITextResourcePropertiesService } from \"../../../../editor/common/services/textResourceConfiguration.js\";\nimport * as nls from \"../../../../nls.js\";\nimport type { ILocalizedString } from \"../../../../platform/action/common/action.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tMenuRegistry,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { IClipboardService } from \"../../../../platform/clipboard/common/clipboardService.js\";\nimport {\n\tCommandsRegistry,\n\tICommandService,\n} from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tContextKeyExpr,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { InputFocusedContext } from \"../../../../platform/contextkey/common/contextkeys.js\";\nimport {\n\tKeybindingWeight,\n\tKeybindingsRegistry,\n} from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { IListService } from \"../../../../platform/list/browser/listService.js\";\nimport { INotificationService } from \"../../../../platform/notification/common/notification.js\";\nimport {\n\tIQuickInputService,\n\ttype IQuickPickItem,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport {\n\tActiveEditorContext,\n\tPanelFocusContext,\n\tResourceContextKey,\n} from \"../../../common/contextkeys.js\";\nimport { ViewContainerLocation } from \"../../../common/views.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { IPaneCompositePartService } from \"../../../services/panecomposite/browser/panecomposite.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport { CONTEXT_IN_CHAT_SESSION } from \"../../chat/common/chatContextKeys.js\";\nimport { IExtensionsWorkbenchService } from \"../../extensions/common/extensions.js\";\nimport { TEXT_FILE_EDITOR_ID } from \"../../files/common/files.js\";\nimport {\n\tCONTEXT_BREAKPOINTS_FOCUSED,\n\tCONTEXT_BREAKPOINT_INPUT_FOCUSED,\n\tCONTEXT_DEBUGGERS_AVAILABLE,\n\tCONTEXT_DEBUG_STATE,\n\tCONTEXT_DISASSEMBLY_VIEW_FOCUS,\n\tCONTEXT_EXPRESSION_SELECTED,\n\tCONTEXT_FOCUSED_SESSION_IS_ATTACH,\n\tCONTEXT_IN_DEBUG_MODE,\n\tCONTEXT_IN_DEBUG_REPL,\n\tCONTEXT_JUMP_TO_CURSOR_SUPPORTED,\n\tCONTEXT_STEP_INTO_TARGETS_SUPPORTED,\n\tCONTEXT_VARIABLES_FOCUSED,\n\tCONTEXT_WATCH_EXPRESSIONS_FOCUSED,\n\tEDITOR_CONTRIBUTION_ID,\n\ttype IConfig,\n\ttype IDebugConfiguration,\n\ttype IDebugEditorContribution,\n\tIDebugService,\n\ttype IDebugSession,\n\ttype IEnablement,\n\ttype IStackFrame,\n\ttype IThread,\n\tREPL_VIEW_ID,\n\tState,\n\tVIEWLET_ID,\n\tgetStateLabel,\n\tisFrameDeemphasized,\n} from \"../common/debug.js\";\nimport {\n\tBreakpoint,\n\tDataBreakpoint,\n\tExpression,\n\tFunctionBreakpoint,\n\ttype Thread,\n\tVariable,\n} from \"../common/debugModel.js\";\nimport { saveAllBeforeDebugStart } from \"../common/debugUtils.js\";\nimport { showLoadedScriptMenu } from \"../common/loadedScriptsPicker.js\";\nimport { openBreakpointSource } from \"./breakpointsView.js\";\nimport { showDebugSessionMenu } from \"./debugSessionPicker.js\";\n\nexport const ADD_CONFIGURATION_ID = \"debug.addConfiguration\";\nexport const TOGGLE_INLINE_BREAKPOINT_ID =\n\t\"editor.debug.action.toggleInlineBreakpoint\";\nexport const COPY_STACK_TRACE_ID = \"debug.copyStackTrace\";\nexport const REVERSE_CONTINUE_ID = \"workbench.action.debug.reverseContinue\";\nexport const STEP_BACK_ID = \"workbench.action.debug.stepBack\";\nexport const RESTART_SESSION_ID = \"workbench.action.debug.restart\";\nexport const TERMINATE_THREAD_ID = \"workbench.action.debug.terminateThread\";\nexport const STEP_OVER_ID = \"workbench.action.debug.stepOver\";\nexport const STEP_INTO_ID = \"workbench.action.debug.stepInto\";\nexport const STEP_INTO_TARGET_ID = \"workbench.action.debug.stepIntoTarget\";\nexport const STEP_OUT_ID = \"workbench.action.debug.stepOut\";\nexport const PAUSE_ID = \"workbench.action.debug.pause\";\nexport const DISCONNECT_ID = \"workbench.action.debug.disconnect\";\nexport const DISCONNECT_AND_SUSPEND_ID =\n\t\"workbench.action.debug.disconnectAndSuspend\";\nexport const STOP_ID = \"workbench.action.debug.stop\";\nexport const RESTART_FRAME_ID = \"workbench.action.debug.restartFrame\";\nexport const CONTINUE_ID = \"workbench.action.debug.continue\";\nexport const FOCUS_REPL_ID = \"workbench.debug.action.focusRepl\";\nexport const JUMP_TO_CURSOR_ID = \"debug.jumpToCursor\";\nexport const FOCUS_SESSION_ID = \"workbench.action.debug.focusProcess\";\nexport const SELECT_AND_START_ID = \"workbench.action.debug.selectandstart\";\nexport const SELECT_DEBUG_CONSOLE_ID =\n\t\"workbench.action.debug.selectDebugConsole\";\nexport const SELECT_DEBUG_SESSION_ID =\n\t\"workbench.action.debug.selectDebugSession\";\nexport const DEBUG_CONFIGURE_COMMAND_ID = \"workbench.action.debug.configure\";\nexport const DEBUG_START_COMMAND_ID = \"workbench.action.debug.start\";\nexport const DEBUG_RUN_COMMAND_ID = \"workbench.action.debug.run\";\nexport const EDIT_EXPRESSION_COMMAND_ID = \"debug.renameWatchExpression\";\nexport const SET_EXPRESSION_COMMAND_ID = \"debug.setWatchExpression\";\nexport const REMOVE_EXPRESSION_COMMAND_ID = \"debug.removeWatchExpression\";\nexport const NEXT_DEBUG_CONSOLE_ID = \"workbench.action.debug.nextConsole\";\nexport const PREV_DEBUG_CONSOLE_ID = \"workbench.action.debug.prevConsole\";\nexport const SHOW_LOADED_SCRIPTS_ID =\n\t\"workbench.action.debug.showLoadedScripts\";\nexport const CALLSTACK_TOP_ID = \"workbench.action.debug.callStackTop\";\nexport const CALLSTACK_BOTTOM_ID = \"workbench.action.debug.callStackBottom\";\nexport const CALLSTACK_UP_ID = \"workbench.action.debug.callStackUp\";\nexport const CALLSTACK_DOWN_ID = \"workbench.action.debug.callStackDown\";\nexport const ADD_TO_WATCH_ID = \"debug.addToWatchExpressions\";\nexport const COPY_EVALUATE_PATH_ID = \"debug.copyEvaluatePath\";\nexport const COPY_VALUE_ID = \"workbench.debug.viewlet.action.copyValue\";\n\nexport const DEBUG_COMMAND_CATEGORY: ILocalizedString = nls.localize2(\n\t\"debug\",\n\t\"Debug\",\n);\nexport const RESTART_LABEL = nls.localize2(\"restartDebug\", \"Restart\");\nexport const STEP_OVER_LABEL = nls.localize2(\"stepOverDebug\", \"Step Over\");\nexport const STEP_INTO_LABEL = nls.localize2(\"stepIntoDebug\", \"Step Into\");\nexport const STEP_INTO_TARGET_LABEL = nls.localize2(\n\t\"stepIntoTargetDebug\",\n\t\"Step Into Target\",\n);\nexport const STEP_OUT_LABEL = nls.localize2(\"stepOutDebug\", \"Step Out\");\nexport const PAUSE_LABEL = nls.localize2(\"pauseDebug\", \"Pause\");\nexport const DISCONNECT_LABEL = nls.localize2(\"disconnect\", \"Disconnect\");\nexport const DISCONNECT_AND_SUSPEND_LABEL = nls.localize2(\n\t\"disconnectSuspend\",\n\t\"Disconnect and Suspend\",\n);\nexport const STOP_LABEL = nls.localize2(\"stop\", \"Stop\");\nexport const CONTINUE_LABEL = nls.localize2(\"continueDebug\", \"Continue\");\nexport const FOCUS_SESSION_LABEL = nls.localize2(\n\t\"focusSession\",\n\t\"Focus Session\",\n);\nexport const SELECT_AND_START_LABEL = nls.localize2(\n\t\"selectAndStartDebugging\",\n\t\"Select and Start Debugging\",\n);\nexport const DEBUG_CONFIGURE_LABEL = nls.localize(\n\t\"openLaunchJson\",\n\t\"Open '{0}'\",\n\t\"launch.json\",\n);\nexport const DEBUG_START_LABEL = nls.localize2(\"startDebug\", \"Start Debugging\");\nexport const DEBUG_RUN_LABEL = nls.localize2(\n\t\"startWithoutDebugging\",\n\t\"Start Without Debugging\",\n);\nexport const NEXT_DEBUG_CONSOLE_LABEL = nls.localize2(\n\t\"nextDebugConsole\",\n\t\"Focus Next Debug Console\",\n);\nexport const PREV_DEBUG_CONSOLE_LABEL = nls.localize2(\n\t\"prevDebugConsole\",\n\t\"Focus Previous Debug Console\",\n);\nexport const OPEN_LOADED_SCRIPTS_LABEL = nls.localize2(\n\t\"openLoadedScript\",\n\t\"Open Loaded Script...\",\n);\nexport const CALLSTACK_TOP_LABEL = nls.localize2(\n\t\"callStackTop\",\n\t\"Navigate to Top of Call Stack\",\n);\nexport const CALLSTACK_BOTTOM_LABEL = nls.localize2(\n\t\"callStackBottom\",\n\t\"Navigate to Bottom of Call Stack\",\n);\nexport const CALLSTACK_UP_LABEL = nls.localize2(\n\t\"callStackUp\",\n\t\"Navigate Up Call Stack\",\n);\nexport const CALLSTACK_DOWN_LABEL = nls.localize2(\n\t\"callStackDown\",\n\t\"Navigate Down Call Stack\",\n);\nexport const COPY_EVALUATE_PATH_LABEL = nls.localize2(\n\t\"copyAsExpression\",\n\t\"Copy as Expression\",\n);\nexport const COPY_VALUE_LABEL = nls.localize2(\"copyValue\", \"Copy Value\");\nexport const ADD_TO_WATCH_LABEL = nls.localize2(\n\t\"addToWatchExpressions\",\n\t\"Add to Watch\",\n);\n\nexport const SELECT_DEBUG_CONSOLE_LABEL = nls.localize2(\n\t\"selectDebugConsole\",\n\t\"Select Debug Console\",\n);\nexport const SELECT_DEBUG_SESSION_LABEL = nls.localize2(\n\t\"selectDebugSession\",\n\t\"Select Debug Session\",\n);\n\nexport const DEBUG_QUICK_ACCESS_PREFIX = \"debug \";\nexport const DEBUG_CONSOLE_QUICK_ACCESS_PREFIX = \"debug consoles \";\n\ninterface CallStackContext {\n\tsessionId: string;\n\tthreadId: string;\n\tframeId: string;\n}\n\nfunction isThreadContext(obj: any): obj is CallStackContext {\n\treturn (\n\t\tobj &&\n\t\ttypeof obj.sessionId === \"string\" &&\n\t\ttypeof obj.threadId === \"string\"\n\t);\n}\n\nasync function getThreadAndRun(\n\taccessor: ServicesAccessor,\n\tsessionAndThreadId: CallStackContext | unknown,\n\trun: (thread: IThread) => Promise<void>,\n): Promise<void> {\n\tconst debugService = accessor.get(IDebugService);\n\tlet thread: IThread | undefined;\n\tif (isThreadContext(sessionAndThreadId)) {\n\t\tconst session = debugService\n\t\t\t.getModel()\n\t\t\t.getSession(sessionAndThreadId.sessionId);\n\t\tif (session) {\n\t\t\tthread = session\n\t\t\t\t.getAllThreads()\n\t\t\t\t.find((t) => t.getId() === sessionAndThreadId.threadId);\n\t\t}\n\t} else if (isSessionContext(sessionAndThreadId)) {\n\t\tconst session = debugService\n\t\t\t.getModel()\n\t\t\t.getSession(sessionAndThreadId.sessionId);\n\t\tif (session) {\n\t\t\tconst threads = session.getAllThreads();\n\t\t\tthread = threads.length > 0 ? threads[0] : undefined;\n\t\t}\n\t}\n\n\tif (!thread) {\n\t\tthread = debugService.getViewModel().focusedThread;\n\t\tif (!thread) {\n\t\t\tconst focusedSession = debugService.getViewModel().focusedSession;\n\t\t\tconst threads = focusedSession\n\t\t\t\t? focusedSession.getAllThreads()\n\t\t\t\t: undefined;\n\t\t\tthread = threads && threads.length ? threads[0] : undefined;\n\t\t}\n\t}\n\n\tif (thread) {\n\t\tawait run(thread);\n\t}\n}\n\nfunction isStackFrameContext(obj: any): obj is CallStackContext {\n\treturn (\n\t\tobj &&\n\t\ttypeof obj.sessionId === \"string\" &&\n\t\ttypeof obj.threadId === \"string\" &&\n\t\ttypeof obj.frameId === \"string\"\n\t);\n}\n\nfunction getFrame(\n\tdebugService: IDebugService,\n\tcontext: CallStackContext | unknown,\n): IStackFrame | undefined {\n\tif (isStackFrameContext(context)) {\n\t\tconst session = debugService.getModel().getSession(context.sessionId);\n\t\tif (session) {\n\t\t\tconst thread = session\n\t\t\t\t.getAllThreads()\n\t\t\t\t.find((t) => t.getId() === context.threadId);\n\t\t\tif (thread) {\n\t\t\t\treturn thread\n\t\t\t\t\t.getCallStack()\n\t\t\t\t\t.find((sf) => sf.getId() === context.frameId);\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn debugService.getViewModel().focusedStackFrame;\n\t}\n\n\treturn undefined;\n}\n\nfunction isSessionContext(obj: any): obj is CallStackContext {\n\treturn obj && typeof obj.sessionId === \"string\";\n}\n\nasync function changeDebugConsoleFocus(\n\taccessor: ServicesAccessor,\n\tnext: boolean,\n) {\n\tconst debugService = accessor.get(IDebugService);\n\tconst viewsService = accessor.get(IViewsService);\n\tconst sessions = debugService\n\t\t.getModel()\n\t\t.getSessions(true)\n\t\t.filter((s) => s.hasSeparateRepl());\n\tlet currSession = debugService.getViewModel().focusedSession;\n\n\tlet nextIndex = 0;\n\tif (sessions.length > 0 && currSession) {\n\t\twhile (currSession && !currSession.hasSeparateRepl()) {\n\t\t\tcurrSession = currSession.parentSession;\n\t\t}\n\n\t\tif (currSession) {\n\t\t\tconst currIndex = sessions.indexOf(currSession);\n\t\t\tif (next) {\n\t\t\t\tnextIndex =\n\t\t\t\t\tcurrIndex === sessions.length - 1 ? 0 : currIndex + 1;\n\t\t\t} else {\n\t\t\t\tnextIndex =\n\t\t\t\t\tcurrIndex === 0 ? sessions.length - 1 : currIndex - 1;\n\t\t\t}\n\t\t}\n\t}\n\tawait debugService.focusStackFrame(\n\t\tundefined,\n\t\tundefined,\n\t\tsessions[nextIndex],\n\t\t{ explicit: true },\n\t);\n\n\tif (!viewsService.isViewVisible(REPL_VIEW_ID)) {\n\t\tawait viewsService.openView(REPL_VIEW_ID, true);\n\t}\n}\n\nasync function navigateCallStack(debugService: IDebugService, down: boolean) {\n\tconst frame = debugService.getViewModel().focusedStackFrame;\n\tif (frame) {\n\t\tlet callStack = frame.thread.getCallStack();\n\t\tlet index = callStack.findIndex(\n\t\t\t(elem) => elem.frameId === frame.frameId,\n\t\t);\n\t\tlet nextVisibleFrame;\n\t\tif (down) {\n\t\t\tif (index >= callStack.length - 1) {\n\t\t\t\tif ((<Thread>frame.thread).reachedEndOfCallStack) {\n\t\t\t\t\tgoToTopOfCallStack(debugService);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tawait debugService\n\t\t\t\t\t\t.getModel()\n\t\t\t\t\t\t.fetchCallstack(frame.thread, 20);\n\t\t\t\t\tcallStack = frame.thread.getCallStack();\n\t\t\t\t\tindex = callStack.findIndex(\n\t\t\t\t\t\t(elem) => elem.frameId === frame.frameId,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tnextVisibleFrame = findNextVisibleFrame(true, callStack, index);\n\t\t} else {\n\t\t\tif (index <= 0) {\n\t\t\t\tgoToBottomOfCallStack(debugService);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tnextVisibleFrame = findNextVisibleFrame(false, callStack, index);\n\t\t}\n\n\t\tif (nextVisibleFrame) {\n\t\t\tdebugService.focusStackFrame(\n\t\t\t\tnextVisibleFrame,\n\t\t\t\tundefined,\n\t\t\t\tundefined,\n\t\t\t\t{ preserveFocus: false },\n\t\t\t);\n\t\t}\n\t}\n}\n\nasync function goToBottomOfCallStack(debugService: IDebugService) {\n\tconst thread = debugService.getViewModel().focusedThread;\n\tif (thread) {\n\t\tawait debugService.getModel().fetchCallstack(thread);\n\t\tconst callStack = thread.getCallStack();\n\t\tif (callStack.length > 0) {\n\t\t\tconst nextVisibleFrame = findNextVisibleFrame(false, callStack, 0); // must consider the next frame up first, which will be the last frame\n\t\t\tif (nextVisibleFrame) {\n\t\t\t\tdebugService.focusStackFrame(\n\t\t\t\t\tnextVisibleFrame,\n\t\t\t\t\tundefined,\n\t\t\t\t\tundefined,\n\t\t\t\t\t{ preserveFocus: false },\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction goToTopOfCallStack(debugService: IDebugService) {\n\tconst thread = debugService.getViewModel().focusedThread;\n\n\tif (thread) {\n\t\tdebugService.focusStackFrame(\n\t\t\tthread.getTopStackFrame(),\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\t{ preserveFocus: false },\n\t\t);\n\t}\n}\n\n/**\n * Finds next frame that is not skipped by SkipFiles. Skips frame at index and starts searching at next.\n * Must satisfy `0 <= startIndex <= callStack - 1`\n * @param down specifies whether to search downwards if the current file is skipped.\n * @param callStack the call stack to search\n * @param startIndex the index to start the search at\n */\nfunction findNextVisibleFrame(\n\tdown: boolean,\n\tcallStack: readonly IStackFrame[],\n\tstartIndex: number,\n) {\n\tif (startIndex >= callStack.length) {\n\t\tstartIndex = callStack.length - 1;\n\t} else if (startIndex < 0) {\n\t\tstartIndex = 0;\n\t}\n\n\tlet index = startIndex;\n\n\tlet currFrame;\n\tdo {\n\t\tif (down) {\n\t\t\tif (index === callStack.length - 1) {\n\t\t\t\tindex = 0;\n\t\t\t} else {\n\t\t\t\tindex++;\n\t\t\t}\n\t\t} else if (index === 0) {\n\t\t\tindex = callStack.length - 1;\n\t\t} else {\n\t\t\tindex--;\n\t\t}\n\n\t\tcurrFrame = callStack[index];\n\t\tif (!isFrameDeemphasized(currFrame)) {\n\t\t\treturn currFrame;\n\t\t}\n\t} while (index !== startIndex); // end loop when we've just checked the start index, since that should be the last one checked\n\n\treturn undefined;\n}\n\n// These commands are used in call stack context menu, call stack inline actions, command palette, debug toolbar, mac native touch bar\n// When the command is exectued in the context of a thread(context menu on a thread, inline call stack action) we pass the thread id\n// Otherwise when it is executed \"globaly\"(using the touch bar, debug toolbar, command palette) we do not pass any id and just take whatever is the focussed thread\n// Same for stackFrame commands and session commands.\nCommandsRegistry.registerCommand({\n\tid: COPY_STACK_TRACE_ID,\n\thandler: async (\n\t\taccessor: ServicesAccessor,\n\t\t_: string,\n\t\tcontext: CallStackContext | unknown,\n\t) => {\n\t\tconst textResourcePropertiesService = accessor.get(\n\t\t\tITextResourcePropertiesService,\n\t\t);\n\t\tconst clipboardService = accessor.get(IClipboardService);\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst frame = getFrame(debugService, context);\n\t\tif (frame) {\n\t\t\tconst eol = textResourcePropertiesService.getEOL(frame.source.uri);\n\t\t\tawait clipboardService.writeText(\n\t\t\t\tframe.thread\n\t\t\t\t\t.getCallStack()\n\t\t\t\t\t.map((sf) => sf.toString())\n\t\t\t\t\t.join(eol),\n\t\t\t);\n\t\t}\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: REVERSE_CONTINUE_ID,\n\thandler: async (\n\t\taccessor: ServicesAccessor,\n\t\t_: string,\n\t\tcontext: CallStackContext | unknown,\n\t) => {\n\t\tawait getThreadAndRun(accessor, context, (thread) =>\n\t\t\tthread.reverseContinue(),\n\t\t);\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: STEP_BACK_ID,\n\thandler: async (\n\t\taccessor: ServicesAccessor,\n\t\t_: string,\n\t\tcontext: CallStackContext | unknown,\n\t) => {\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tif (CONTEXT_DISASSEMBLY_VIEW_FOCUS.getValue(contextKeyService)) {\n\t\t\tawait getThreadAndRun(accessor, context, (thread: IThread) =>\n\t\t\t\tthread.stepBack(\"instruction\"),\n\t\t\t);\n\t\t} else {\n\t\t\tawait getThreadAndRun(accessor, context, (thread: IThread) =>\n\t\t\t\tthread.stepBack(),\n\t\t\t);\n\t\t}\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: TERMINATE_THREAD_ID,\n\thandler: async (\n\t\taccessor: ServicesAccessor,\n\t\t_: string,\n\t\tcontext: CallStackContext | unknown,\n\t) => {\n\t\tawait getThreadAndRun(accessor, context, (thread) =>\n\t\t\tthread.terminate(),\n\t\t);\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: JUMP_TO_CURSOR_ID,\n\thandler: async (accessor: ServicesAccessor) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst stackFrame = debugService.getViewModel().focusedStackFrame;\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst activeEditorControl = editorService.activeTextEditorControl;\n\t\tconst notificationService = accessor.get(INotificationService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\tif (\n\t\t\tstackFrame &&\n\t\t\tisCodeEditor(activeEditorControl) &&\n\t\t\tactiveEditorControl.hasModel()\n\t\t) {\n\t\t\tconst position = activeEditorControl.getPosition();\n\t\t\tconst resource = activeEditorControl.getModel().uri;\n\t\t\tconst source = stackFrame.thread.session.getSourceForUri(resource);\n\t\t\tif (source) {\n\t\t\t\tconst response = await stackFrame.thread.session.gotoTargets(\n\t\t\t\t\tsource.raw,\n\t\t\t\t\tposition.lineNumber,\n\t\t\t\t\tposition.column,\n\t\t\t\t);\n\t\t\t\tconst targets = response?.body.targets;\n\t\t\t\tif (targets && targets.length) {\n\t\t\t\t\tlet id = targets[0].id;\n\t\t\t\t\tif (targets.length > 1) {\n\t\t\t\t\t\tconst picks = targets.map((t) => ({\n\t\t\t\t\t\t\tlabel: t.label,\n\t\t\t\t\t\t\t_id: t.id,\n\t\t\t\t\t\t}));\n\t\t\t\t\t\tconst pick = await quickInputService.pick(picks, {\n\t\t\t\t\t\t\tplaceHolder: nls.localize(\n\t\t\t\t\t\t\t\t\"chooseLocation\",\n\t\t\t\t\t\t\t\t\"Choose the specific location\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (!pick) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tid = pick._id;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn await stackFrame.thread.session\n\t\t\t\t\t\t.goto(stackFrame.thread.threadId, id)\n\t\t\t\t\t\t.catch((e) => notificationService.warn(e));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn notificationService.warn(\n\t\t\tnls.localize(\n\t\t\t\t\"noExecutableCode\",\n\t\t\t\t\"No executable code is associated at the current cursor position.\",\n\t\t\t),\n\t\t);\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: CALLSTACK_TOP_ID,\n\thandler: async (\n\t\taccessor: ServicesAccessor,\n\t\t_: string,\n\t\tcontext: CallStackContext | unknown,\n\t) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tgoToTopOfCallStack(debugService);\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: CALLSTACK_BOTTOM_ID,\n\thandler: async (\n\t\taccessor: ServicesAccessor,\n\t\t_: string,\n\t\tcontext: CallStackContext | unknown,\n\t) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tawait goToBottomOfCallStack(debugService);\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: CALLSTACK_UP_ID,\n\thandler: async (\n\t\taccessor: ServicesAccessor,\n\t\t_: string,\n\t\tcontext: CallStackContext | unknown,\n\t) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tnavigateCallStack(debugService, false);\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: CALLSTACK_DOWN_ID,\n\thandler: async (\n\t\taccessor: ServicesAccessor,\n\t\t_: string,\n\t\tcontext: CallStackContext | unknown,\n\t) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tnavigateCallStack(debugService, true);\n\t},\n});\n\nMenuRegistry.appendMenuItem(MenuId.EditorContext, {\n\tcommand: {\n\t\tid: JUMP_TO_CURSOR_ID,\n\t\ttitle: nls.localize(\"jumpToCursor\", \"Jump to Cursor\"),\n\t\tcategory: DEBUG_COMMAND_CATEGORY,\n\t},\n\twhen: ContextKeyExpr.and(\n\t\tCONTEXT_JUMP_TO_CURSOR_SUPPORTED,\n\t\tEditorContextKeys.editorTextFocus,\n\t),\n\tgroup: \"debug\",\n\torder: 3,\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: NEXT_DEBUG_CONSOLE_ID,\n\tweight: KeybindingWeight.WorkbenchContrib + 1,\n\twhen: CONTEXT_IN_DEBUG_REPL,\n\tprimary: KeyMod.CtrlCmd | KeyCode.PageDown,\n\tmac: { primary: KeyMod.Shift | KeyMod.CtrlCmd | KeyCode.BracketRight },\n\thandler: async (\n\t\taccessor: ServicesAccessor,\n\t\t_: string,\n\t\tcontext: CallStackContext | unknown,\n\t) => {\n\t\tchangeDebugConsoleFocus(accessor, true);\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: PREV_DEBUG_CONSOLE_ID,\n\tweight: KeybindingWeight.WorkbenchContrib + 1,\n\twhen: CONTEXT_IN_DEBUG_REPL,\n\tprimary: KeyMod.CtrlCmd | KeyCode.PageUp,\n\tmac: { primary: KeyMod.Shift | KeyMod.CtrlCmd | KeyCode.BracketLeft },\n\thandler: async (\n\t\taccessor: ServicesAccessor,\n\t\t_: string,\n\t\tcontext: CallStackContext | unknown,\n\t) => {\n\t\tchangeDebugConsoleFocus(accessor, false);\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: RESTART_SESSION_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.Shift | KeyMod.CtrlCmd | KeyCode.F5,\n\twhen: CONTEXT_IN_DEBUG_MODE,\n\thandler: async (\n\t\taccessor: ServicesAccessor,\n\t\t_: string,\n\t\tcontext: CallStackContext | unknown,\n\t) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tlet session: IDebugSession | undefined;\n\t\tif (isSessionContext(context)) {\n\t\t\tsession = debugService.getModel().getSession(context.sessionId);\n\t\t} else {\n\t\t\tsession = debugService.getViewModel().focusedSession;\n\t\t}\n\n\t\tif (session) {\n\t\t\tconst showSubSessions =\n\t\t\t\tconfigurationService.getValue<IDebugConfiguration>(\n\t\t\t\t\t\"debug\",\n\t\t\t\t).showSubSessionsInToolBar;\n\t\t\t// Stop should be sent to the root parent session\n\t\t\twhile (\n\t\t\t\t!showSubSessions &&\n\t\t\t\tsession.lifecycleManagedByParent &&\n\t\t\t\tsession.parentSession\n\t\t\t) {\n\t\t\t\tsession = session.parentSession;\n\t\t\t}\n\t\t\tsession.removeReplExpressions();\n\t\t\tawait debugService.restartSession(session);\n\t\t} else {\n\t\t\tconst { launch, name } =\n\t\t\t\tdebugService.getConfigurationManager().selectedConfiguration;\n\t\t\tawait debugService.startDebugging(launch, name, {\n\t\t\t\tnoDebug: false,\n\t\t\t\tstartedByUser: true,\n\t\t\t});\n\t\t}\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: STEP_OVER_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyCode.F10,\n\twhen: CONTEXT_DEBUG_STATE.isEqualTo(\"stopped\"),\n\thandler: async (\n\t\taccessor: ServicesAccessor,\n\t\t_: string,\n\t\tcontext: CallStackContext | unknown,\n\t) => {\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tif (CONTEXT_DISASSEMBLY_VIEW_FOCUS.getValue(contextKeyService)) {\n\t\t\tawait getThreadAndRun(accessor, context, (thread: IThread) =>\n\t\t\t\tthread.next(\"instruction\"),\n\t\t\t);\n\t\t} else {\n\t\t\tawait getThreadAndRun(accessor, context, (thread: IThread) =>\n\t\t\t\tthread.next(),\n\t\t\t);\n\t\t}\n\t},\n});\n\n// Windows browsers use F11 for full screen, thus use alt+F11 as the default shortcut\nconst STEP_INTO_KEYBINDING =\n\tisWeb && isWindows ? KeyMod.Alt | KeyCode.F11 : KeyCode.F11;\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: STEP_INTO_ID,\n\tweight: KeybindingWeight.WorkbenchContrib + 10, // Have a stronger weight to have priority over full screen when debugging\n\tprimary: STEP_INTO_KEYBINDING,\n\t// Use a more flexible when clause to not allow full screen command to take over when F11 pressed a lot of times\n\twhen: CONTEXT_DEBUG_STATE.notEqualsTo(\"inactive\"),\n\thandler: async (\n\t\taccessor: ServicesAccessor,\n\t\t_: string,\n\t\tcontext: CallStackContext | unknown,\n\t) => {\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tif (CONTEXT_DISASSEMBLY_VIEW_FOCUS.getValue(contextKeyService)) {\n\t\t\tawait getThreadAndRun(accessor, context, (thread: IThread) =>\n\t\t\t\tthread.stepIn(\"instruction\"),\n\t\t\t);\n\t\t} else {\n\t\t\tawait getThreadAndRun(accessor, context, (thread: IThread) =>\n\t\t\t\tthread.stepIn(),\n\t\t\t);\n\t\t}\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: STEP_OUT_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.Shift | KeyCode.F11,\n\twhen: CONTEXT_DEBUG_STATE.isEqualTo(\"stopped\"),\n\thandler: async (\n\t\taccessor: ServicesAccessor,\n\t\t_: string,\n\t\tcontext: CallStackContext | unknown,\n\t) => {\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tif (CONTEXT_DISASSEMBLY_VIEW_FOCUS.getValue(contextKeyService)) {\n\t\t\tawait getThreadAndRun(accessor, context, (thread: IThread) =>\n\t\t\t\tthread.stepOut(\"instruction\"),\n\t\t\t);\n\t\t} else {\n\t\t\tawait getThreadAndRun(accessor, context, (thread: IThread) =>\n\t\t\t\tthread.stepOut(),\n\t\t\t);\n\t\t}\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: PAUSE_ID,\n\tweight: KeybindingWeight.WorkbenchContrib + 2, // take priority over focus next part while we are debugging\n\tprimary: KeyCode.F6,\n\twhen: CONTEXT_DEBUG_STATE.isEqualTo(\"running\"),\n\thandler: async (\n\t\taccessor: ServicesAccessor,\n\t\t_: string,\n\t\tcontext: CallStackContext | unknown,\n\t) => {\n\t\tawait getThreadAndRun(accessor, context, (thread) => thread.pause());\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: STEP_INTO_TARGET_ID,\n\tprimary: STEP_INTO_KEYBINDING | KeyMod.CtrlCmd,\n\twhen: ContextKeyExpr.and(\n\t\tCONTEXT_STEP_INTO_TARGETS_SUPPORTED,\n\t\tCONTEXT_IN_DEBUG_MODE,\n\t\tCONTEXT_DEBUG_STATE.isEqualTo(\"stopped\"),\n\t),\n\tweight: KeybindingWeight.WorkbenchContrib,\n\thandler: async (\n\t\taccessor: ServicesAccessor,\n\t\t_: string,\n\t\tcontext: CallStackContext | unknown,\n\t) => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst session = debugService.getViewModel().focusedSession;\n\t\tconst frame = debugService.getViewModel().focusedStackFrame;\n\t\tif (!frame || !session) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = await accessor.get(IEditorService).openEditor({\n\t\t\tresource: frame.source.uri,\n\t\t\toptions: { revealIfOpened: true },\n\t\t});\n\n\t\tlet codeEditor: ICodeEditor | undefined;\n\t\tif (editor) {\n\t\t\tconst ctrl = editor?.getControl();\n\t\t\tif (isCodeEditor(ctrl)) {\n\t\t\t\tcodeEditor = ctrl;\n\t\t\t}\n\t\t}\n\n\t\tinterface ITargetItem extends IQuickPickItem {\n\t\t\ttarget: DebugProtocol.StepInTarget;\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst qp = disposables.add(\n\t\t\tquickInputService.createQuickPick<ITargetItem>(),\n\t\t);\n\t\tqp.busy = true;\n\t\tqp.show();\n\n\t\tdisposables.add(\n\t\t\tqp.onDidChangeActive(([item]) => {\n\t\t\t\tif (codeEditor && item && item.target.line !== undefined) {\n\t\t\t\t\tcodeEditor.revealLineInCenterIfOutsideViewport(\n\t\t\t\t\t\titem.target.line,\n\t\t\t\t\t);\n\t\t\t\t\tcodeEditor.setSelection({\n\t\t\t\t\t\tstartLineNumber: item.target.line,\n\t\t\t\t\t\tstartColumn: item.target.column || 1,\n\t\t\t\t\t\tendLineNumber: item.target.endLine || item.target.line,\n\t\t\t\t\t\tendColumn:\n\t\t\t\t\t\t\titem.target.endColumn || item.target.column || 1,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tdisposables.add(\n\t\t\tqp.onDidAccept(() => {\n\t\t\t\tif (qp.activeItems.length) {\n\t\t\t\t\tsession.stepIn(\n\t\t\t\t\t\tframe.thread.threadId,\n\t\t\t\t\t\tqp.activeItems[0].target.id,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tdisposables.add(qp.onDidHide(() => disposables.dispose()));\n\n\t\tsession.stepInTargets(frame.frameId).then((targets) => {\n\t\t\tqp.busy = false;\n\t\t\tif (targets?.length) {\n\t\t\t\tqp.items = targets?.map((target) => ({\n\t\t\t\t\ttarget,\n\t\t\t\t\tlabel: target.label,\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tqp.placeholder = nls.localize(\n\t\t\t\t\t\"editor.debug.action.stepIntoTargets.none\",\n\t\t\t\t\t\"No step targets available\",\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t},\n});\n\nasync function stopHandler(\n\taccessor: ServicesAccessor,\n\t_: string,\n\tcontext: CallStackContext | unknown,\n\tdisconnect: boolean,\n\tsuspend?: boolean,\n): Promise<void> {\n\tconst debugService = accessor.get(IDebugService);\n\tlet session: IDebugSession | undefined;\n\tif (isSessionContext(context)) {\n\t\tsession = debugService.getModel().getSession(context.sessionId);\n\t} else {\n\t\tsession = debugService.getViewModel().focusedSession;\n\t}\n\n\tconst configurationService = accessor.get(IConfigurationService);\n\tconst showSubSessions =\n\t\tconfigurationService.getValue<IDebugConfiguration>(\n\t\t\t\"debug\",\n\t\t).showSubSessionsInToolBar;\n\t// Stop should be sent to the root parent session\n\twhile (\n\t\t!showSubSessions &&\n\t\tsession &&\n\t\tsession.lifecycleManagedByParent &&\n\t\tsession.parentSession\n\t) {\n\t\tsession = session.parentSession;\n\t}\n\n\tawait debugService.stopSession(session, disconnect, suspend);\n}\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: DISCONNECT_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.Shift | KeyCode.F5,\n\twhen: ContextKeyExpr.and(\n\t\tCONTEXT_FOCUSED_SESSION_IS_ATTACH,\n\t\tCONTEXT_IN_DEBUG_MODE,\n\t),\n\thandler: (accessor, _, context) => stopHandler(accessor, _, context, true),\n});\n\nCommandsRegistry.registerCommand({\n\tid: DISCONNECT_AND_SUSPEND_ID,\n\thandler: (accessor, _, context) =>\n\t\tstopHandler(accessor, _, context, true, true),\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: STOP_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.Shift | KeyCode.F5,\n\twhen: ContextKeyExpr.and(\n\t\tCONTEXT_FOCUSED_SESSION_IS_ATTACH.toNegated(),\n\t\tCONTEXT_IN_DEBUG_MODE,\n\t),\n\thandler: (accessor, _, context) => stopHandler(accessor, _, context, false),\n});\n\nCommandsRegistry.registerCommand({\n\tid: RESTART_FRAME_ID,\n\thandler: async (\n\t\taccessor: ServicesAccessor,\n\t\t_: string,\n\t\tcontext: CallStackContext | unknown,\n\t) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst notificationService = accessor.get(INotificationService);\n\t\tconst frame = getFrame(debugService, context);\n\t\tif (frame) {\n\t\t\ttry {\n\t\t\t\tawait frame.restart();\n\t\t\t} catch (e) {\n\t\t\t\tnotificationService.error(e);\n\t\t\t}\n\t\t}\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: CONTINUE_ID,\n\tweight: KeybindingWeight.WorkbenchContrib + 10, // Use a stronger weight to get priority over start debugging F5 shortcut\n\tprimary: KeyCode.F5,\n\twhen: CONTEXT_DEBUG_STATE.isEqualTo(\"stopped\"),\n\thandler: async (\n\t\taccessor: ServicesAccessor,\n\t\t_: string,\n\t\tcontext: CallStackContext | unknown,\n\t) => {\n\t\tawait getThreadAndRun(accessor, context, (thread) => thread.continue());\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: SHOW_LOADED_SCRIPTS_ID,\n\thandler: async (accessor) => {\n\t\tawait showLoadedScriptMenu(accessor);\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: FOCUS_REPL_ID,\n\thandler: async (accessor) => {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tawait viewsService.openView(REPL_VIEW_ID, true);\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: \"debug.startFromConfig\",\n\thandler: async (accessor, config: IConfig) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tawait debugService.startDebugging(undefined, config);\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: FOCUS_SESSION_ID,\n\thandler: async (accessor: ServicesAccessor, session: IDebugSession) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst stoppedChildSession = debugService\n\t\t\t.getModel()\n\t\t\t.getSessions()\n\t\t\t.find(\n\t\t\t\t(s) => s.parentSession === session && s.state === State.Stopped,\n\t\t\t);\n\t\tif (stoppedChildSession && session.state !== State.Stopped) {\n\t\t\tsession = stoppedChildSession;\n\t\t}\n\t\tawait debugService.focusStackFrame(undefined, undefined, session, {\n\t\t\texplicit: true,\n\t\t});\n\t\tconst stackFrame = debugService.getViewModel().focusedStackFrame;\n\t\tif (stackFrame) {\n\t\t\tawait stackFrame.openInEditor(editorService, true);\n\t\t}\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: SELECT_AND_START_ID,\n\thandler: async (\n\t\taccessor: ServicesAccessor,\n\t\tdebugType: string | unknown,\n\t\tdebugStartOptions?: { noDebug?: boolean },\n\t) => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst debugService = accessor.get(IDebugService);\n\n\t\tif (debugType) {\n\t\t\tconst configManager = debugService.getConfigurationManager();\n\t\t\tconst dynamicProviders = await configManager.getDynamicProviders();\n\t\t\tfor (const provider of dynamicProviders) {\n\t\t\t\tif (provider.type === debugType) {\n\t\t\t\t\tconst pick = await provider.pick();\n\t\t\t\t\tif (pick) {\n\t\t\t\t\t\tawait configManager.selectConfiguration(\n\t\t\t\t\t\t\tpick.launch,\n\t\t\t\t\t\t\tpick.config.name,\n\t\t\t\t\t\t\tpick.config,\n\t\t\t\t\t\t\t{ type: provider.type },\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdebugService.startDebugging(pick.launch, pick.config, {\n\t\t\t\t\t\t\tnoDebug: debugStartOptions?.noDebug,\n\t\t\t\t\t\t\tstartedByUser: true,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tquickInputService.quickAccess.show(DEBUG_QUICK_ACCESS_PREFIX);\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: SELECT_DEBUG_CONSOLE_ID,\n\thandler: async (accessor: ServicesAccessor) => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tquickInputService.quickAccess.show(DEBUG_CONSOLE_QUICK_ACCESS_PREFIX);\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: SELECT_DEBUG_SESSION_ID,\n\thandler: async (accessor: ServicesAccessor) => {\n\t\tshowDebugSessionMenu(accessor, SELECT_AND_START_ID);\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: DEBUG_START_COMMAND_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyCode.F5,\n\twhen: ContextKeyExpr.and(\n\t\tCONTEXT_DEBUGGERS_AVAILABLE,\n\t\tCONTEXT_DEBUG_STATE.isEqualTo(\"inactive\"),\n\t),\n\thandler: async (\n\t\taccessor: ServicesAccessor,\n\t\tdebugStartOptions?: { config?: Partial<IConfig>; noDebug?: boolean },\n\t) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tawait saveAllBeforeDebugStart(\n\t\t\taccessor.get(IConfigurationService),\n\t\t\taccessor.get(IEditorService),\n\t\t);\n\t\tconst { launch, name, getConfig } =\n\t\t\tdebugService.getConfigurationManager().selectedConfiguration;\n\t\tconst config = await getConfig();\n\t\tconst configOrName = config\n\t\t\t? Object.assign(deepClone(config), debugStartOptions?.config)\n\t\t\t: name;\n\t\tawait debugService.startDebugging(\n\t\t\tlaunch,\n\t\t\tconfigOrName,\n\t\t\t{ noDebug: debugStartOptions?.noDebug, startedByUser: true },\n\t\t\tfalse,\n\t\t);\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: DEBUG_RUN_COMMAND_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.CtrlCmd | KeyCode.F5,\n\tmac: { primary: KeyMod.WinCtrl | KeyCode.F5 },\n\twhen: ContextKeyExpr.and(\n\t\tCONTEXT_DEBUGGERS_AVAILABLE,\n\t\tCONTEXT_DEBUG_STATE.notEqualsTo(getStateLabel(State.Initializing)),\n\t),\n\thandler: async (accessor: ServicesAccessor) => {\n\t\tconst commandService = accessor.get(ICommandService);\n\t\tawait commandService.executeCommand(DEBUG_START_COMMAND_ID, {\n\t\t\tnoDebug: true,\n\t\t});\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"debug.toggleBreakpoint\",\n\tweight: KeybindingWeight.WorkbenchContrib + 5,\n\twhen: ContextKeyExpr.and(\n\t\tCONTEXT_BREAKPOINTS_FOCUSED,\n\t\tInputFocusedContext.toNegated(),\n\t),\n\tprimary: KeyCode.Space,\n\thandler: (accessor) => {\n\t\tconst listService = accessor.get(IListService);\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst list = listService.lastFocusedList;\n\t\tif (list instanceof List) {\n\t\t\tconst focused = <IEnablement[]>list.getFocusedElements();\n\t\t\tif (focused && focused.length) {\n\t\t\t\tdebugService.enableOrDisableBreakpoints(\n\t\t\t\t\t!focused[0].enabled,\n\t\t\t\t\tfocused[0],\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"debug.enableOrDisableBreakpoint\",\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: undefined,\n\twhen: EditorContextKeys.editorTextFocus,\n\thandler: (accessor) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst control = editorService.activeTextEditorControl;\n\t\tif (isCodeEditor(control)) {\n\t\t\tconst model = control.getModel();\n\t\t\tif (model) {\n\t\t\t\tconst position = control.getPosition();\n\t\t\t\tif (position) {\n\t\t\t\t\tconst bps = debugService\n\t\t\t\t\t\t.getModel()\n\t\t\t\t\t\t.getBreakpoints({\n\t\t\t\t\t\t\turi: model.uri,\n\t\t\t\t\t\t\tlineNumber: position.lineNumber,\n\t\t\t\t\t\t});\n\t\t\t\t\tif (bps.length) {\n\t\t\t\t\t\tdebugService.enableOrDisableBreakpoints(\n\t\t\t\t\t\t\t!bps[0].enabled,\n\t\t\t\t\t\t\tbps[0],\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: EDIT_EXPRESSION_COMMAND_ID,\n\tweight: KeybindingWeight.WorkbenchContrib + 5,\n\twhen: CONTEXT_WATCH_EXPRESSIONS_FOCUSED,\n\tprimary: KeyCode.F2,\n\tmac: { primary: KeyCode.Enter },\n\thandler: (accessor: ServicesAccessor, expression: Expression | unknown) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tif (!(expression instanceof Expression)) {\n\t\t\tconst listService = accessor.get(IListService);\n\t\t\tconst focused = listService.lastFocusedList;\n\t\t\tif (focused) {\n\t\t\t\tconst elements = focused.getFocus();\n\t\t\t\tif (\n\t\t\t\t\tArray.isArray(elements) &&\n\t\t\t\t\telements[0] instanceof Expression\n\t\t\t\t) {\n\t\t\t\t\texpression = elements[0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (expression instanceof Expression) {\n\t\t\tdebugService\n\t\t\t\t.getViewModel()\n\t\t\t\t.setSelectedExpression(expression, false);\n\t\t}\n\t},\n});\n\nCommandsRegistry.registerCommand({\n\tid: SET_EXPRESSION_COMMAND_ID,\n\thandler: async (\n\t\taccessor: ServicesAccessor,\n\t\texpression: Expression | unknown,\n\t) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tif (\n\t\t\texpression instanceof Expression ||\n\t\t\texpression instanceof Variable\n\t\t) {\n\t\t\tdebugService.getViewModel().setSelectedExpression(expression, true);\n\t\t}\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"debug.setVariable\",\n\tweight: KeybindingWeight.WorkbenchContrib + 5,\n\twhen: CONTEXT_VARIABLES_FOCUSED,\n\tprimary: KeyCode.F2,\n\tmac: { primary: KeyCode.Enter },\n\thandler: (accessor) => {\n\t\tconst listService = accessor.get(IListService);\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst focused = listService.lastFocusedList;\n\n\t\tif (focused) {\n\t\t\tconst elements = focused.getFocus();\n\t\t\tif (Array.isArray(elements) && elements[0] instanceof Variable) {\n\t\t\t\tdebugService\n\t\t\t\t\t.getViewModel()\n\t\t\t\t\t.setSelectedExpression(elements[0], false);\n\t\t\t}\n\t\t}\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: REMOVE_EXPRESSION_COMMAND_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(\n\t\tCONTEXT_WATCH_EXPRESSIONS_FOCUSED,\n\t\tCONTEXT_EXPRESSION_SELECTED.toNegated(),\n\t),\n\tprimary: KeyCode.Delete,\n\tmac: { primary: KeyMod.CtrlCmd | KeyCode.Backspace },\n\thandler: (accessor: ServicesAccessor, expression: Expression | unknown) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\n\t\tif (expression instanceof Expression) {\n\t\t\tdebugService.removeWatchExpressions(expression.getId());\n\t\t\treturn;\n\t\t}\n\n\t\tconst listService = accessor.get(IListService);\n\t\tconst focused = listService.lastFocusedList;\n\t\tif (focused) {\n\t\t\tlet elements = focused.getFocus();\n\t\t\tif (Array.isArray(elements) && elements[0] instanceof Expression) {\n\t\t\t\tconst selection = focused.getSelection();\n\t\t\t\tif (selection && selection.indexOf(elements[0]) >= 0) {\n\t\t\t\t\telements = selection;\n\t\t\t\t}\n\t\t\t\telements.forEach((e: Expression) =>\n\t\t\t\t\tdebugService.removeWatchExpressions(e.getId()),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"debug.removeBreakpoint\",\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(\n\t\tCONTEXT_BREAKPOINTS_FOCUSED,\n\t\tCONTEXT_BREAKPOINT_INPUT_FOCUSED.toNegated(),\n\t),\n\tprimary: KeyCode.Delete,\n\tmac: { primary: KeyMod.CtrlCmd | KeyCode.Backspace },\n\thandler: (accessor) => {\n\t\tconst listService = accessor.get(IListService);\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst list = listService.lastFocusedList;\n\n\t\tif (list instanceof List) {\n\t\t\tconst focused = list.getFocusedElements();\n\t\t\tconst element = focused.length ? focused[0] : undefined;\n\t\t\tif (element instanceof Breakpoint) {\n\t\t\t\tdebugService.removeBreakpoints(element.getId());\n\t\t\t} else if (element instanceof FunctionBreakpoint) {\n\t\t\t\tdebugService.removeFunctionBreakpoints(element.getId());\n\t\t\t} else if (element instanceof DataBreakpoint) {\n\t\t\t\tdebugService.removeDataBreakpoints(element.getId());\n\t\t\t}\n\t\t}\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"debug.installAdditionalDebuggers\",\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: undefined,\n\tprimary: undefined,\n\thandler: async (accessor, query: string) => {\n\t\tconst extensionsWorkbenchService = accessor.get(\n\t\t\tIExtensionsWorkbenchService,\n\t\t);\n\t\tlet searchFor = `@category:debuggers`;\n\t\tif (typeof query === \"string\") {\n\t\t\tsearchFor += ` ${query}`;\n\t\t}\n\t\treturn extensionsWorkbenchService.openSearch(searchFor);\n\t},\n});\n\nregisterAction2(\n\tclass AddConfigurationAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: ADD_CONFIGURATION_ID,\n\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\"addConfiguration\",\n\t\t\t\t\t\"Add Configuration...\",\n\t\t\t\t),\n\t\t\t\tcategory: DEBUG_COMMAND_CATEGORY,\n\t\t\t\tf1: true,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.EditorContent,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tContextKeyExpr.regex(\n\t\t\t\t\t\t\tResourceContextKey.Path.key,\n\t\t\t\t\t\t\t/\\.vscode[/\\\\]launch\\.json$/,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tActiveEditorContext.isEqualTo(TEXT_FILE_EDITOR_ID),\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tasync run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tlaunchUri: string,\n\t\t): Promise<void> {\n\t\t\tconst manager = accessor\n\t\t\t\t.get(IDebugService)\n\t\t\t\t.getConfigurationManager();\n\n\t\t\tconst launch =\n\t\t\t\tmanager\n\t\t\t\t\t.getLaunches()\n\t\t\t\t\t.find((l) => l.uri.toString() === launchUri) ||\n\t\t\t\tmanager.selectedConfiguration.launch;\n\t\t\tif (launch) {\n\t\t\t\tconst { editor, created } = await launch.openConfigFile({\n\t\t\t\t\tpreserveFocus: false,\n\t\t\t\t});\n\t\t\t\tif (editor && !created) {\n\t\t\t\t\tconst codeEditor = <ICodeEditor>editor.getControl();\n\t\t\t\t\tif (codeEditor) {\n\t\t\t\t\t\tawait codeEditor\n\t\t\t\t\t\t\t.getContribution<IDebugEditorContribution>(\n\t\t\t\t\t\t\t\tEDITOR_CONTRIBUTION_ID,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t?.addLaunchConfiguration();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n);\n\nconst inlineBreakpointHandler = (accessor: ServicesAccessor) => {\n\tconst debugService = accessor.get(IDebugService);\n\tconst editorService = accessor.get(IEditorService);\n\tconst control = editorService.activeTextEditorControl;\n\tif (isCodeEditor(control)) {\n\t\tconst position = control.getPosition();\n\t\tif (\n\t\t\tposition &&\n\t\t\tcontrol.hasModel() &&\n\t\t\tdebugService.canSetBreakpointsIn(control.getModel())\n\t\t) {\n\t\t\tconst modelUri = control.getModel().uri;\n\t\t\tconst breakpointAlreadySet = debugService\n\t\t\t\t.getModel()\n\t\t\t\t.getBreakpoints({\n\t\t\t\t\tlineNumber: position.lineNumber,\n\t\t\t\t\turi: modelUri,\n\t\t\t\t})\n\t\t\t\t.some(\n\t\t\t\t\t(bp) =>\n\t\t\t\t\t\tbp.sessionAgnosticData.column === position.column ||\n\t\t\t\t\t\t(!bp.column && position.column <= 1),\n\t\t\t\t);\n\n\t\t\tif (!breakpointAlreadySet) {\n\t\t\t\tdebugService.addBreakpoints(modelUri, [\n\t\t\t\t\t{\n\t\t\t\t\t\tlineNumber: position.lineNumber,\n\t\t\t\t\t\tcolumn:\n\t\t\t\t\t\t\tposition.column > 1 ? position.column : undefined,\n\t\t\t\t\t},\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t}\n};\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.Shift | KeyCode.F9,\n\twhen: EditorContextKeys.editorTextFocus,\n\tid: TOGGLE_INLINE_BREAKPOINT_ID,\n\thandler: inlineBreakpointHandler,\n});\n\nMenuRegistry.appendMenuItem(MenuId.EditorContext, {\n\tcommand: {\n\t\tid: TOGGLE_INLINE_BREAKPOINT_ID,\n\t\ttitle: nls.localize(\"addInlineBreakpoint\", \"Add Inline Breakpoint\"),\n\t\tcategory: DEBUG_COMMAND_CATEGORY,\n\t},\n\twhen: ContextKeyExpr.and(\n\t\tCONTEXT_IN_DEBUG_MODE,\n\t\tPanelFocusContext.toNegated(),\n\t\tEditorContextKeys.editorTextFocus,\n\t\tCONTEXT_IN_CHAT_SESSION.toNegated(),\n\t),\n\tgroup: \"debug\",\n\torder: 1,\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"debug.openBreakpointToSide\",\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: CONTEXT_BREAKPOINTS_FOCUSED,\n\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\tsecondary: [KeyMod.Alt | KeyCode.Enter],\n\thandler: (accessor) => {\n\t\tconst listService = accessor.get(IListService);\n\t\tconst list = listService.lastFocusedList;\n\t\tif (list instanceof List) {\n\t\t\tconst focus = list.getFocusedElements();\n\t\t\tif (focus.length && focus[0] instanceof Breakpoint) {\n\t\t\t\treturn openBreakpointSource(\n\t\t\t\t\tfocus[0],\n\t\t\t\t\ttrue,\n\t\t\t\t\tfalse,\n\t\t\t\t\ttrue,\n\t\t\t\t\taccessor.get(IDebugService),\n\t\t\t\t\taccessor.get(IEditorService),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t},\n});\n\n// When there are no debug extensions, open the debug viewlet when F5 is pressed so the user can read the limitations\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"debug.openView\",\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: CONTEXT_DEBUGGERS_AVAILABLE.toNegated(),\n\tprimary: KeyCode.F5,\n\tsecondary: [KeyMod.CtrlCmd | KeyCode.F5],\n\thandler: async (accessor) => {\n\t\tconst paneCompositeService = accessor.get(IPaneCompositePartService);\n\t\tawait paneCompositeService.openPaneComposite(\n\t\t\tVIEWLET_ID,\n\t\t\tViewContainerLocation.Sidebar,\n\t\t\ttrue,\n\t\t);\n\t},\n});\n"],
  "mappings": "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",
  "names": []
}
