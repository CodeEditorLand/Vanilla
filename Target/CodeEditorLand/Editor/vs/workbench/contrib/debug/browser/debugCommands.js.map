{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/debug/browser/debugCommands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { List } from '../../../../base/browser/ui/list/listWidget.js';\nimport { KeybindingsRegistry, KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { IListService } from '../../../../platform/list/browser/listService.js';\nimport { IDebugService, IEnablement, CONTEXT_BREAKPOINTS_FOCUSED, CONTEXT_WATCH_EXPRESSIONS_FOCUSED, CONTEXT_VARIABLES_FOCUSED, EDITOR_CONTRIBUTION_ID, IDebugEditorContribution, CONTEXT_IN_DEBUG_MODE, CONTEXT_EXPRESSION_SELECTED, IConfig, IStackFrame, IThread, IDebugSession, CONTEXT_DEBUG_STATE, IDebugConfiguration, CONTEXT_JUMP_TO_CURSOR_SUPPORTED, REPL_VIEW_ID, CONTEXT_DEBUGGERS_AVAILABLE, State, getStateLabel, CONTEXT_BREAKPOINT_INPUT_FOCUSED, CONTEXT_FOCUSED_SESSION_IS_ATTACH, VIEWLET_ID, CONTEXT_DISASSEMBLY_VIEW_FOCUS, CONTEXT_IN_DEBUG_REPL, CONTEXT_STEP_INTO_TARGETS_SUPPORTED, isFrameDeemphasized } from '../common/debug.js';\nimport { Expression, Variable, Breakpoint, FunctionBreakpoint, DataBreakpoint, Thread } from '../common/debugModel.js';\nimport { IExtensionsWorkbenchService } from '../../extensions/common/extensions.js';\nimport { ICodeEditor, isCodeEditor } from '../../../../editor/browser/editorBrowser.js';\nimport { MenuRegistry, MenuId, Action2, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { EditorContextKeys } from '../../../../editor/common/editorContextKeys.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { openBreakpointSource } from './breakpointsView.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { InputFocusedContext } from '../../../../platform/contextkey/common/contextkeys.js';\nimport { ServicesAccessor } from '../../../../editor/browser/editorExtensions.js';\nimport { ActiveEditorContext, PanelFocusContext, ResourceContextKey } from '../../../common/contextkeys.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ITextResourcePropertiesService } from '../../../../editor/common/services/textResourceConfiguration.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IQuickInputService, IQuickPickItem } from '../../../../platform/quickinput/common/quickInput.js';\nimport { ViewContainerLocation } from '../../../common/views.js';\nimport { IViewsService } from '../../../services/views/common/viewsService.js';\nimport { deepClone } from '../../../../base/common/objects.js';\nimport { isWeb, isWindows } from '../../../../base/common/platform.js';\nimport { saveAllBeforeDebugStart } from '../common/debugUtils.js';\nimport { IPaneCompositePartService } from '../../../services/panecomposite/browser/panecomposite.js';\nimport { showLoadedScriptMenu } from '../common/loadedScriptsPicker.js';\nimport { showDebugSessionMenu } from './debugSessionPicker.js';\nimport { TEXT_FILE_EDITOR_ID } from '../../files/common/files.js';\nimport { ILocalizedString } from '../../../../platform/action/common/action.js';\nimport { CONTEXT_IN_CHAT_SESSION } from '../../chat/common/chatContextKeys.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\n\nexport const ADD_CONFIGURATION_ID = 'debug.addConfiguration';\nexport const TOGGLE_INLINE_BREAKPOINT_ID = 'editor.debug.action.toggleInlineBreakpoint';\nexport const COPY_STACK_TRACE_ID = 'debug.copyStackTrace';\nexport const REVERSE_CONTINUE_ID = 'workbench.action.debug.reverseContinue';\nexport const STEP_BACK_ID = 'workbench.action.debug.stepBack';\nexport const RESTART_SESSION_ID = 'workbench.action.debug.restart';\nexport const TERMINATE_THREAD_ID = 'workbench.action.debug.terminateThread';\nexport const STEP_OVER_ID = 'workbench.action.debug.stepOver';\nexport const STEP_INTO_ID = 'workbench.action.debug.stepInto';\nexport const STEP_INTO_TARGET_ID = 'workbench.action.debug.stepIntoTarget';\nexport const STEP_OUT_ID = 'workbench.action.debug.stepOut';\nexport const PAUSE_ID = 'workbench.action.debug.pause';\nexport const DISCONNECT_ID = 'workbench.action.debug.disconnect';\nexport const DISCONNECT_AND_SUSPEND_ID = 'workbench.action.debug.disconnectAndSuspend';\nexport const STOP_ID = 'workbench.action.debug.stop';\nexport const RESTART_FRAME_ID = 'workbench.action.debug.restartFrame';\nexport const CONTINUE_ID = 'workbench.action.debug.continue';\nexport const FOCUS_REPL_ID = 'workbench.debug.action.focusRepl';\nexport const JUMP_TO_CURSOR_ID = 'debug.jumpToCursor';\nexport const FOCUS_SESSION_ID = 'workbench.action.debug.focusProcess';\nexport const SELECT_AND_START_ID = 'workbench.action.debug.selectandstart';\nexport const SELECT_DEBUG_CONSOLE_ID = 'workbench.action.debug.selectDebugConsole';\nexport const SELECT_DEBUG_SESSION_ID = 'workbench.action.debug.selectDebugSession';\nexport const DEBUG_CONFIGURE_COMMAND_ID = 'workbench.action.debug.configure';\nexport const DEBUG_START_COMMAND_ID = 'workbench.action.debug.start';\nexport const DEBUG_RUN_COMMAND_ID = 'workbench.action.debug.run';\nexport const EDIT_EXPRESSION_COMMAND_ID = 'debug.renameWatchExpression';\nexport const SET_EXPRESSION_COMMAND_ID = 'debug.setWatchExpression';\nexport const REMOVE_EXPRESSION_COMMAND_ID = 'debug.removeWatchExpression';\nexport const NEXT_DEBUG_CONSOLE_ID = 'workbench.action.debug.nextConsole';\nexport const PREV_DEBUG_CONSOLE_ID = 'workbench.action.debug.prevConsole';\nexport const SHOW_LOADED_SCRIPTS_ID = 'workbench.action.debug.showLoadedScripts';\nexport const CALLSTACK_TOP_ID = 'workbench.action.debug.callStackTop';\nexport const CALLSTACK_BOTTOM_ID = 'workbench.action.debug.callStackBottom';\nexport const CALLSTACK_UP_ID = 'workbench.action.debug.callStackUp';\nexport const CALLSTACK_DOWN_ID = 'workbench.action.debug.callStackDown';\nexport const ADD_TO_WATCH_ID = 'debug.addToWatchExpressions';\nexport const COPY_EVALUATE_PATH_ID = 'debug.copyEvaluatePath';\nexport const COPY_VALUE_ID = 'workbench.debug.viewlet.action.copyValue';\n\nexport const DEBUG_COMMAND_CATEGORY: ILocalizedString = nls.localize2('debug', 'Debug');\nexport const RESTART_LABEL = nls.localize2('restartDebug', \"Restart\");\nexport const STEP_OVER_LABEL = nls.localize2('stepOverDebug', \"Step Over\");\nexport const STEP_INTO_LABEL = nls.localize2('stepIntoDebug', \"Step Into\");\nexport const STEP_INTO_TARGET_LABEL = nls.localize2('stepIntoTargetDebug', \"Step Into Target\");\nexport const STEP_OUT_LABEL = nls.localize2('stepOutDebug', \"Step Out\");\nexport const PAUSE_LABEL = nls.localize2('pauseDebug', \"Pause\");\nexport const DISCONNECT_LABEL = nls.localize2('disconnect', \"Disconnect\");\nexport const DISCONNECT_AND_SUSPEND_LABEL = nls.localize2('disconnectSuspend', \"Disconnect and Suspend\");\nexport const STOP_LABEL = nls.localize2('stop', \"Stop\");\nexport const CONTINUE_LABEL = nls.localize2('continueDebug', \"Continue\");\nexport const FOCUS_SESSION_LABEL = nls.localize2('focusSession', \"Focus Session\");\nexport const SELECT_AND_START_LABEL = nls.localize2('selectAndStartDebugging', \"Select and Start Debugging\");\nexport const DEBUG_CONFIGURE_LABEL = nls.localize('openLaunchJson', \"Open '{0}'\", 'launch.json');\nexport const DEBUG_START_LABEL = nls.localize2('startDebug', \"Start Debugging\");\nexport const DEBUG_RUN_LABEL = nls.localize2('startWithoutDebugging', \"Start Without Debugging\");\nexport const NEXT_DEBUG_CONSOLE_LABEL = nls.localize2('nextDebugConsole', \"Focus Next Debug Console\");\nexport const PREV_DEBUG_CONSOLE_LABEL = nls.localize2('prevDebugConsole', \"Focus Previous Debug Console\");\nexport const OPEN_LOADED_SCRIPTS_LABEL = nls.localize2('openLoadedScript', \"Open Loaded Script...\");\nexport const CALLSTACK_TOP_LABEL = nls.localize2('callStackTop', \"Navigate to Top of Call Stack\");\nexport const CALLSTACK_BOTTOM_LABEL = nls.localize2('callStackBottom', \"Navigate to Bottom of Call Stack\");\nexport const CALLSTACK_UP_LABEL = nls.localize2('callStackUp', \"Navigate Up Call Stack\");\nexport const CALLSTACK_DOWN_LABEL = nls.localize2('callStackDown', \"Navigate Down Call Stack\");\nexport const COPY_EVALUATE_PATH_LABEL = nls.localize2('copyAsExpression', \"Copy as Expression\");\nexport const COPY_VALUE_LABEL = nls.localize2('copyValue', \"Copy Value\");\nexport const ADD_TO_WATCH_LABEL = nls.localize2('addToWatchExpressions', \"Add to Watch\");\n\nexport const SELECT_DEBUG_CONSOLE_LABEL = nls.localize2('selectDebugConsole', \"Select Debug Console\");\nexport const SELECT_DEBUG_SESSION_LABEL = nls.localize2('selectDebugSession', \"Select Debug Session\");\n\nexport const DEBUG_QUICK_ACCESS_PREFIX = 'debug ';\nexport const DEBUG_CONSOLE_QUICK_ACCESS_PREFIX = 'debug consoles ';\n\ninterface CallStackContext {\n\tsessionId: string;\n\tthreadId: string;\n\tframeId: string;\n}\n\nfunction isThreadContext(obj: any): obj is CallStackContext {\n\treturn obj && typeof obj.sessionId === 'string' && typeof obj.threadId === 'string';\n}\n\nasync function getThreadAndRun(accessor: ServicesAccessor, sessionAndThreadId: CallStackContext | unknown, run: (thread: IThread) => Promise<void>): Promise<void> {\n\tconst debugService = accessor.get(IDebugService);\n\tlet thread: IThread | undefined;\n\tif (isThreadContext(sessionAndThreadId)) {\n\t\tconst session = debugService.getModel().getSession(sessionAndThreadId.sessionId);\n\t\tif (session) {\n\t\t\tthread = session.getAllThreads().find(t => t.getId() === sessionAndThreadId.threadId);\n\t\t}\n\t} else if (isSessionContext(sessionAndThreadId)) {\n\t\tconst session = debugService.getModel().getSession(sessionAndThreadId.sessionId);\n\t\tif (session) {\n\t\t\tconst threads = session.getAllThreads();\n\t\t\tthread = threads.length > 0 ? threads[0] : undefined;\n\t\t}\n\t}\n\n\tif (!thread) {\n\t\tthread = debugService.getViewModel().focusedThread;\n\t\tif (!thread) {\n\t\t\tconst focusedSession = debugService.getViewModel().focusedSession;\n\t\t\tconst threads = focusedSession ? focusedSession.getAllThreads() : undefined;\n\t\t\tthread = threads && threads.length ? threads[0] : undefined;\n\t\t}\n\t}\n\n\tif (thread) {\n\t\tawait run(thread);\n\t}\n}\n\nfunction isStackFrameContext(obj: any): obj is CallStackContext {\n\treturn obj && typeof obj.sessionId === 'string' && typeof obj.threadId === 'string' && typeof obj.frameId === 'string';\n}\n\nfunction getFrame(debugService: IDebugService, context: CallStackContext | unknown): IStackFrame | undefined {\n\tif (isStackFrameContext(context)) {\n\t\tconst session = debugService.getModel().getSession(context.sessionId);\n\t\tif (session) {\n\t\t\tconst thread = session.getAllThreads().find(t => t.getId() === context.threadId);\n\t\t\tif (thread) {\n\t\t\t\treturn thread.getCallStack().find(sf => sf.getId() === context.frameId);\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn debugService.getViewModel().focusedStackFrame;\n\t}\n\n\treturn undefined;\n}\n\nfunction isSessionContext(obj: any): obj is CallStackContext {\n\treturn obj && typeof obj.sessionId === 'string';\n}\n\nasync function changeDebugConsoleFocus(accessor: ServicesAccessor, next: boolean) {\n\tconst debugService = accessor.get(IDebugService);\n\tconst viewsService = accessor.get(IViewsService);\n\tconst sessions = debugService.getModel().getSessions(true).filter(s => s.hasSeparateRepl());\n\tlet currSession = debugService.getViewModel().focusedSession;\n\n\tlet nextIndex = 0;\n\tif (sessions.length > 0 && currSession) {\n\t\twhile (currSession && !currSession.hasSeparateRepl()) {\n\t\t\tcurrSession = currSession.parentSession;\n\t\t}\n\n\t\tif (currSession) {\n\t\t\tconst currIndex = sessions.indexOf(currSession);\n\t\t\tif (next) {\n\t\t\t\tnextIndex = (currIndex === (sessions.length - 1) ? 0 : (currIndex + 1));\n\t\t\t} else {\n\t\t\t\tnextIndex = (currIndex === 0 ? (sessions.length - 1) : (currIndex - 1));\n\t\t\t}\n\t\t}\n\t}\n\tawait debugService.focusStackFrame(undefined, undefined, sessions[nextIndex], { explicit: true });\n\n\tif (!viewsService.isViewVisible(REPL_VIEW_ID)) {\n\t\tawait viewsService.openView(REPL_VIEW_ID, true);\n\t}\n}\n\nasync function navigateCallStack(debugService: IDebugService, down: boolean) {\n\tconst frame = debugService.getViewModel().focusedStackFrame;\n\tif (frame) {\n\n\t\tlet callStack = frame.thread.getCallStack();\n\t\tlet index = callStack.findIndex(elem => elem.frameId === frame.frameId);\n\t\tlet nextVisibleFrame;\n\t\tif (down) {\n\t\t\tif (index >= callStack.length - 1) {\n\t\t\t\tif ((<Thread>frame.thread).reachedEndOfCallStack) {\n\t\t\t\t\tgoToTopOfCallStack(debugService);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tawait debugService.getModel().fetchCallstack(frame.thread, 20);\n\t\t\t\t\tcallStack = frame.thread.getCallStack();\n\t\t\t\t\tindex = callStack.findIndex(elem => elem.frameId === frame.frameId);\n\t\t\t\t}\n\t\t\t}\n\t\t\tnextVisibleFrame = findNextVisibleFrame(true, callStack, index);\n\t\t} else {\n\t\t\tif (index <= 0) {\n\t\t\t\tgoToBottomOfCallStack(debugService);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tnextVisibleFrame = findNextVisibleFrame(false, callStack, index);\n\t\t}\n\n\t\tif (nextVisibleFrame) {\n\t\t\tdebugService.focusStackFrame(nextVisibleFrame, undefined, undefined, { preserveFocus: false });\n\t\t}\n\t}\n}\n\nasync function goToBottomOfCallStack(debugService: IDebugService) {\n\tconst thread = debugService.getViewModel().focusedThread;\n\tif (thread) {\n\t\tawait debugService.getModel().fetchCallstack(thread);\n\t\tconst callStack = thread.getCallStack();\n\t\tif (callStack.length > 0) {\n\t\t\tconst nextVisibleFrame = findNextVisibleFrame(false, callStack, 0); // must consider the next frame up first, which will be the last frame\n\t\t\tif (nextVisibleFrame) {\n\t\t\t\tdebugService.focusStackFrame(nextVisibleFrame, undefined, undefined, { preserveFocus: false });\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction goToTopOfCallStack(debugService: IDebugService) {\n\tconst thread = debugService.getViewModel().focusedThread;\n\n\tif (thread) {\n\t\tdebugService.focusStackFrame(thread.getTopStackFrame(), undefined, undefined, { preserveFocus: false });\n\t}\n}\n\n/**\n * Finds next frame that is not skipped by SkipFiles. Skips frame at index and starts searching at next.\n * Must satisfy `0 <= startIndex <= callStack - 1`\n * @param down specifies whether to search downwards if the current file is skipped.\n * @param callStack the call stack to search\n * @param startIndex the index to start the search at\n */\nfunction findNextVisibleFrame(down: boolean, callStack: readonly IStackFrame[], startIndex: number) {\n\n\tif (startIndex >= callStack.length) {\n\t\tstartIndex = callStack.length - 1;\n\t} else if (startIndex < 0) {\n\t\tstartIndex = 0;\n\t}\n\n\tlet index = startIndex;\n\n\tlet currFrame;\n\tdo {\n\t\tif (down) {\n\t\t\tif (index === callStack.length - 1) {\n\t\t\t\tindex = 0;\n\t\t\t} else {\n\t\t\t\tindex++;\n\t\t\t}\n\t\t} else {\n\t\t\tif (index === 0) {\n\t\t\t\tindex = callStack.length - 1;\n\t\t\t} else {\n\t\t\t\tindex--;\n\t\t\t}\n\t\t}\n\n\t\tcurrFrame = callStack[index];\n\t\tif (!isFrameDeemphasized(currFrame)) {\n\t\t\treturn currFrame;\n\t\t}\n\t} while (index !== startIndex); // end loop when we've just checked the start index, since that should be the last one checked\n\n\treturn undefined;\n}\n\n// These commands are used in call stack context menu, call stack inline actions, command palette, debug toolbar, mac native touch bar\n// When the command is exectued in the context of a thread(context menu on a thread, inline call stack action) we pass the thread id\n// Otherwise when it is executed \"globaly\"(using the touch bar, debug toolbar, command palette) we do not pass any id and just take whatever is the focussed thread\n// Same for stackFrame commands and session commands.\nCommandsRegistry.registerCommand({\n\tid: COPY_STACK_TRACE_ID,\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tconst textResourcePropertiesService = accessor.get(ITextResourcePropertiesService);\n\t\tconst clipboardService = accessor.get(IClipboardService);\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst frame = getFrame(debugService, context);\n\t\tif (frame) {\n\t\t\tconst eol = textResourcePropertiesService.getEOL(frame.source.uri);\n\t\t\tawait clipboardService.writeText(frame.thread.getCallStack().map(sf => sf.toString()).join(eol));\n\t\t}\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: REVERSE_CONTINUE_ID,\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tawait getThreadAndRun(accessor, context, thread => thread.reverseContinue());\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: STEP_BACK_ID,\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tif (CONTEXT_DISASSEMBLY_VIEW_FOCUS.getValue(contextKeyService)) {\n\t\t\tawait getThreadAndRun(accessor, context, (thread: IThread) => thread.stepBack('instruction'));\n\t\t} else {\n\t\t\tawait getThreadAndRun(accessor, context, (thread: IThread) => thread.stepBack());\n\t\t}\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: TERMINATE_THREAD_ID,\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tawait getThreadAndRun(accessor, context, thread => thread.terminate());\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: JUMP_TO_CURSOR_ID,\n\thandler: async (accessor: ServicesAccessor) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst stackFrame = debugService.getViewModel().focusedStackFrame;\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst activeEditorControl = editorService.activeTextEditorControl;\n\t\tconst notificationService = accessor.get(INotificationService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\tif (stackFrame && isCodeEditor(activeEditorControl) && activeEditorControl.hasModel()) {\n\t\t\tconst position = activeEditorControl.getPosition();\n\t\t\tconst resource = activeEditorControl.getModel().uri;\n\t\t\tconst source = stackFrame.thread.session.getSourceForUri(resource);\n\t\t\tif (source) {\n\t\t\t\tconst response = await stackFrame.thread.session.gotoTargets(source.raw, position.lineNumber, position.column);\n\t\t\t\tconst targets = response?.body.targets;\n\t\t\t\tif (targets && targets.length) {\n\t\t\t\t\tlet id = targets[0].id;\n\t\t\t\t\tif (targets.length > 1) {\n\t\t\t\t\t\tconst picks = targets.map(t => ({ label: t.label, _id: t.id }));\n\t\t\t\t\t\tconst pick = await quickInputService.pick(picks, { placeHolder: nls.localize('chooseLocation', \"Choose the specific location\") });\n\t\t\t\t\t\tif (!pick) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tid = pick._id;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn await stackFrame.thread.session.goto(stackFrame.thread.threadId, id).catch(e => notificationService.warn(e));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn notificationService.warn(nls.localize('noExecutableCode', \"No executable code is associated at the current cursor position.\"));\n\t}\n});\n\n\nCommandsRegistry.registerCommand({\n\tid: CALLSTACK_TOP_ID,\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tgoToTopOfCallStack(debugService);\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: CALLSTACK_BOTTOM_ID,\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tawait goToBottomOfCallStack(debugService);\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: CALLSTACK_UP_ID,\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tnavigateCallStack(debugService, false);\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: CALLSTACK_DOWN_ID,\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tnavigateCallStack(debugService, true);\n\t}\n});\n\nMenuRegistry.appendMenuItem(MenuId.EditorContext, {\n\tcommand: {\n\t\tid: JUMP_TO_CURSOR_ID,\n\t\ttitle: nls.localize('jumpToCursor', \"Jump to Cursor\"),\n\t\tcategory: DEBUG_COMMAND_CATEGORY\n\t},\n\twhen: ContextKeyExpr.and(CONTEXT_JUMP_TO_CURSOR_SUPPORTED, EditorContextKeys.editorTextFocus),\n\tgroup: 'debug',\n\torder: 3\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: NEXT_DEBUG_CONSOLE_ID,\n\tweight: KeybindingWeight.WorkbenchContrib + 1,\n\twhen: CONTEXT_IN_DEBUG_REPL,\n\tprimary: KeyMod.CtrlCmd | KeyCode.PageDown,\n\tmac: { primary: KeyMod.Shift | KeyMod.CtrlCmd | KeyCode.BracketRight },\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tchangeDebugConsoleFocus(accessor, true);\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: PREV_DEBUG_CONSOLE_ID,\n\tweight: KeybindingWeight.WorkbenchContrib + 1,\n\twhen: CONTEXT_IN_DEBUG_REPL,\n\tprimary: KeyMod.CtrlCmd | KeyCode.PageUp,\n\tmac: { primary: KeyMod.Shift | KeyMod.CtrlCmd | KeyCode.BracketLeft },\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tchangeDebugConsoleFocus(accessor, false);\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: RESTART_SESSION_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.Shift | KeyMod.CtrlCmd | KeyCode.F5,\n\twhen: CONTEXT_IN_DEBUG_MODE,\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tlet session: IDebugSession | undefined;\n\t\tif (isSessionContext(context)) {\n\t\t\tsession = debugService.getModel().getSession(context.sessionId);\n\t\t} else {\n\t\t\tsession = debugService.getViewModel().focusedSession;\n\t\t}\n\n\t\tif (!session) {\n\t\t\tconst { launch, name } = debugService.getConfigurationManager().selectedConfiguration;\n\t\t\tawait debugService.startDebugging(launch, name, { noDebug: false, startedByUser: true });\n\t\t} else {\n\t\t\tconst showSubSessions = configurationService.getValue<IDebugConfiguration>('debug').showSubSessionsInToolBar;\n\t\t\t// Stop should be sent to the root parent session\n\t\t\twhile (!showSubSessions && session.lifecycleManagedByParent && session.parentSession) {\n\t\t\t\tsession = session.parentSession;\n\t\t\t}\n\t\t\tsession.removeReplExpressions();\n\t\t\tawait debugService.restartSession(session);\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: STEP_OVER_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyCode.F10,\n\twhen: CONTEXT_DEBUG_STATE.isEqualTo('stopped'),\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tif (CONTEXT_DISASSEMBLY_VIEW_FOCUS.getValue(contextKeyService)) {\n\t\t\tawait getThreadAndRun(accessor, context, (thread: IThread) => thread.next('instruction'));\n\t\t} else {\n\t\t\tawait getThreadAndRun(accessor, context, (thread: IThread) => thread.next());\n\t\t}\n\t}\n});\n\n// Windows browsers use F11 for full screen, thus use alt+F11 as the default shortcut\nconst STEP_INTO_KEYBINDING = (isWeb && isWindows) ? (KeyMod.Alt | KeyCode.F11) : KeyCode.F11;\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: STEP_INTO_ID,\n\tweight: KeybindingWeight.WorkbenchContrib + 10, // Have a stronger weight to have priority over full screen when debugging\n\tprimary: STEP_INTO_KEYBINDING,\n\t// Use a more flexible when clause to not allow full screen command to take over when F11 pressed a lot of times\n\twhen: CONTEXT_DEBUG_STATE.notEqualsTo('inactive'),\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tif (CONTEXT_DISASSEMBLY_VIEW_FOCUS.getValue(contextKeyService)) {\n\t\t\tawait getThreadAndRun(accessor, context, (thread: IThread) => thread.stepIn('instruction'));\n\t\t} else {\n\t\t\tawait getThreadAndRun(accessor, context, (thread: IThread) => thread.stepIn());\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: STEP_OUT_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.Shift | KeyCode.F11,\n\twhen: CONTEXT_DEBUG_STATE.isEqualTo('stopped'),\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tif (CONTEXT_DISASSEMBLY_VIEW_FOCUS.getValue(contextKeyService)) {\n\t\t\tawait getThreadAndRun(accessor, context, (thread: IThread) => thread.stepOut('instruction'));\n\t\t} else {\n\t\t\tawait getThreadAndRun(accessor, context, (thread: IThread) => thread.stepOut());\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: PAUSE_ID,\n\tweight: KeybindingWeight.WorkbenchContrib + 2, // take priority over focus next part while we are debugging\n\tprimary: KeyCode.F6,\n\twhen: CONTEXT_DEBUG_STATE.isEqualTo('running'),\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tawait getThreadAndRun(accessor, context, thread => thread.pause());\n\t}\n});\n\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: STEP_INTO_TARGET_ID,\n\tprimary: STEP_INTO_KEYBINDING | KeyMod.CtrlCmd,\n\twhen: ContextKeyExpr.and(CONTEXT_STEP_INTO_TARGETS_SUPPORTED, CONTEXT_IN_DEBUG_MODE, CONTEXT_DEBUG_STATE.isEqualTo('stopped')),\n\tweight: KeybindingWeight.WorkbenchContrib,\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst session = debugService.getViewModel().focusedSession;\n\t\tconst frame = debugService.getViewModel().focusedStackFrame;\n\t\tif (!frame || !session) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = await accessor.get(IEditorService).openEditor({\n\t\t\tresource: frame.source.uri,\n\t\t\toptions: { revealIfOpened: true }\n\t\t});\n\n\t\tlet codeEditor: ICodeEditor | undefined;\n\t\tif (editor) {\n\t\t\tconst ctrl = editor?.getControl();\n\t\t\tif (isCodeEditor(ctrl)) {\n\t\t\t\tcodeEditor = ctrl;\n\t\t\t}\n\t\t}\n\n\t\tinterface ITargetItem extends IQuickPickItem {\n\t\t\ttarget: DebugProtocol.StepInTarget;\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst qp = disposables.add(quickInputService.createQuickPick<ITargetItem>());\n\t\tqp.busy = true;\n\t\tqp.show();\n\n\t\tdisposables.add(qp.onDidChangeActive(([item]) => {\n\t\t\tif (codeEditor && item && item.target.line !== undefined) {\n\t\t\t\tcodeEditor.revealLineInCenterIfOutsideViewport(item.target.line);\n\t\t\t\tcodeEditor.setSelection({\n\t\t\t\t\tstartLineNumber: item.target.line,\n\t\t\t\t\tstartColumn: item.target.column || 1,\n\t\t\t\t\tendLineNumber: item.target.endLine || item.target.line,\n\t\t\t\t\tendColumn: item.target.endColumn || item.target.column || 1,\n\t\t\t\t});\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(qp.onDidAccept(() => {\n\t\t\tif (qp.activeItems.length) {\n\t\t\t\tsession.stepIn(frame.thread.threadId, qp.activeItems[0].target.id);\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(qp.onDidHide(() => disposables.dispose()));\n\n\t\tsession.stepInTargets(frame.frameId).then(targets => {\n\t\t\tqp.busy = false;\n\t\t\tif (targets?.length) {\n\t\t\t\tqp.items = targets?.map(target => ({ target, label: target.label }));\n\t\t\t} else {\n\t\t\t\tqp.placeholder = nls.localize('editor.debug.action.stepIntoTargets.none', \"No step targets available\");\n\t\t\t}\n\t\t});\n\t}\n});\n\nasync function stopHandler(accessor: ServicesAccessor, _: string, context: CallStackContext | unknown, disconnect: boolean, suspend?: boolean): Promise<void> {\n\tconst debugService = accessor.get(IDebugService);\n\tlet session: IDebugSession | undefined;\n\tif (isSessionContext(context)) {\n\t\tsession = debugService.getModel().getSession(context.sessionId);\n\t} else {\n\t\tsession = debugService.getViewModel().focusedSession;\n\t}\n\n\tconst configurationService = accessor.get(IConfigurationService);\n\tconst showSubSessions = configurationService.getValue<IDebugConfiguration>('debug').showSubSessionsInToolBar;\n\t// Stop should be sent to the root parent session\n\twhile (!showSubSessions && session && session.lifecycleManagedByParent && session.parentSession) {\n\t\tsession = session.parentSession;\n\t}\n\n\tawait debugService.stopSession(session, disconnect, suspend);\n}\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: DISCONNECT_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.Shift | KeyCode.F5,\n\twhen: ContextKeyExpr.and(CONTEXT_FOCUSED_SESSION_IS_ATTACH, CONTEXT_IN_DEBUG_MODE),\n\thandler: (accessor, _, context) => stopHandler(accessor, _, context, true)\n});\n\nCommandsRegistry.registerCommand({\n\tid: DISCONNECT_AND_SUSPEND_ID,\n\thandler: (accessor, _, context) => stopHandler(accessor, _, context, true, true)\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: STOP_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.Shift | KeyCode.F5,\n\twhen: ContextKeyExpr.and(CONTEXT_FOCUSED_SESSION_IS_ATTACH.toNegated(), CONTEXT_IN_DEBUG_MODE),\n\thandler: (accessor, _, context) => stopHandler(accessor, _, context, false)\n});\n\nCommandsRegistry.registerCommand({\n\tid: RESTART_FRAME_ID,\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst notificationService = accessor.get(INotificationService);\n\t\tconst frame = getFrame(debugService, context);\n\t\tif (frame) {\n\t\t\ttry {\n\t\t\t\tawait frame.restart();\n\t\t\t} catch (e) {\n\t\t\t\tnotificationService.error(e);\n\t\t\t}\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: CONTINUE_ID,\n\tweight: KeybindingWeight.WorkbenchContrib + 10, // Use a stronger weight to get priority over start debugging F5 shortcut\n\tprimary: KeyCode.F5,\n\twhen: CONTEXT_DEBUG_STATE.isEqualTo('stopped'),\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tawait getThreadAndRun(accessor, context, thread => thread.continue());\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: SHOW_LOADED_SCRIPTS_ID,\n\thandler: async (accessor) => {\n\t\tawait showLoadedScriptMenu(accessor);\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: FOCUS_REPL_ID,\n\thandler: async (accessor) => {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tawait viewsService.openView(REPL_VIEW_ID, true);\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: 'debug.startFromConfig',\n\thandler: async (accessor, config: IConfig) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tawait debugService.startDebugging(undefined, config);\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: FOCUS_SESSION_ID,\n\thandler: async (accessor: ServicesAccessor, session: IDebugSession) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst stoppedChildSession = debugService.getModel().getSessions().find(s => s.parentSession === session && s.state === State.Stopped);\n\t\tif (stoppedChildSession && session.state !== State.Stopped) {\n\t\t\tsession = stoppedChildSession;\n\t\t}\n\t\tawait debugService.focusStackFrame(undefined, undefined, session, { explicit: true });\n\t\tconst stackFrame = debugService.getViewModel().focusedStackFrame;\n\t\tif (stackFrame) {\n\t\t\tawait stackFrame.openInEditor(editorService, true);\n\t\t}\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: SELECT_AND_START_ID,\n\thandler: async (accessor: ServicesAccessor, debugType: string | unknown, debugStartOptions?: { noDebug?: boolean }) => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst debugService = accessor.get(IDebugService);\n\n\t\tif (debugType) {\n\t\t\tconst configManager = debugService.getConfigurationManager();\n\t\t\tconst dynamicProviders = await configManager.getDynamicProviders();\n\t\t\tfor (const provider of dynamicProviders) {\n\t\t\t\tif (provider.type === debugType) {\n\t\t\t\t\tconst pick = await provider.pick();\n\t\t\t\t\tif (pick) {\n\t\t\t\t\t\tawait configManager.selectConfiguration(pick.launch, pick.config.name, pick.config, { type: provider.type });\n\t\t\t\t\t\tdebugService.startDebugging(pick.launch, pick.config, { noDebug: debugStartOptions?.noDebug, startedByUser: true });\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tquickInputService.quickAccess.show(DEBUG_QUICK_ACCESS_PREFIX);\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: SELECT_DEBUG_CONSOLE_ID,\n\thandler: async (accessor: ServicesAccessor) => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tquickInputService.quickAccess.show(DEBUG_CONSOLE_QUICK_ACCESS_PREFIX);\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: SELECT_DEBUG_SESSION_ID,\n\thandler: async (accessor: ServicesAccessor) => {\n\t\tshowDebugSessionMenu(accessor, SELECT_AND_START_ID);\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: DEBUG_START_COMMAND_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyCode.F5,\n\twhen: ContextKeyExpr.and(CONTEXT_DEBUGGERS_AVAILABLE, CONTEXT_DEBUG_STATE.isEqualTo('inactive')),\n\thandler: async (accessor: ServicesAccessor, debugStartOptions?: { config?: Partial<IConfig>; noDebug?: boolean }) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tawait saveAllBeforeDebugStart(accessor.get(IConfigurationService), accessor.get(IEditorService));\n\t\tconst { launch, name, getConfig } = debugService.getConfigurationManager().selectedConfiguration;\n\t\tconst config = await getConfig();\n\t\tconst configOrName = config ? Object.assign(deepClone(config), debugStartOptions?.config) : name;\n\t\tawait debugService.startDebugging(launch, configOrName, { noDebug: debugStartOptions?.noDebug, startedByUser: true }, false);\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: DEBUG_RUN_COMMAND_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.CtrlCmd | KeyCode.F5,\n\tmac: { primary: KeyMod.WinCtrl | KeyCode.F5 },\n\twhen: ContextKeyExpr.and(CONTEXT_DEBUGGERS_AVAILABLE, CONTEXT_DEBUG_STATE.notEqualsTo(getStateLabel(State.Initializing))),\n\thandler: async (accessor: ServicesAccessor) => {\n\t\tconst commandService = accessor.get(ICommandService);\n\t\tawait commandService.executeCommand(DEBUG_START_COMMAND_ID, { noDebug: true });\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'debug.toggleBreakpoint',\n\tweight: KeybindingWeight.WorkbenchContrib + 5,\n\twhen: ContextKeyExpr.and(CONTEXT_BREAKPOINTS_FOCUSED, InputFocusedContext.toNegated()),\n\tprimary: KeyCode.Space,\n\thandler: (accessor) => {\n\t\tconst listService = accessor.get(IListService);\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst list = listService.lastFocusedList;\n\t\tif (list instanceof List) {\n\t\t\tconst focused = <IEnablement[]>list.getFocusedElements();\n\t\t\tif (focused && focused.length) {\n\t\t\t\tdebugService.enableOrDisableBreakpoints(!focused[0].enabled, focused[0]);\n\t\t\t}\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'debug.enableOrDisableBreakpoint',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: undefined,\n\twhen: EditorContextKeys.editorTextFocus,\n\thandler: (accessor) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst control = editorService.activeTextEditorControl;\n\t\tif (isCodeEditor(control)) {\n\t\t\tconst model = control.getModel();\n\t\t\tif (model) {\n\t\t\t\tconst position = control.getPosition();\n\t\t\t\tif (position) {\n\t\t\t\t\tconst bps = debugService.getModel().getBreakpoints({ uri: model.uri, lineNumber: position.lineNumber });\n\t\t\t\t\tif (bps.length) {\n\t\t\t\t\t\tdebugService.enableOrDisableBreakpoints(!bps[0].enabled, bps[0]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: EDIT_EXPRESSION_COMMAND_ID,\n\tweight: KeybindingWeight.WorkbenchContrib + 5,\n\twhen: CONTEXT_WATCH_EXPRESSIONS_FOCUSED,\n\tprimary: KeyCode.F2,\n\tmac: { primary: KeyCode.Enter },\n\thandler: (accessor: ServicesAccessor, expression: Expression | unknown) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tif (!(expression instanceof Expression)) {\n\t\t\tconst listService = accessor.get(IListService);\n\t\t\tconst focused = listService.lastFocusedList;\n\t\t\tif (focused) {\n\t\t\t\tconst elements = focused.getFocus();\n\t\t\t\tif (Array.isArray(elements) && elements[0] instanceof Expression) {\n\t\t\t\t\texpression = elements[0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (expression instanceof Expression) {\n\t\t\tdebugService.getViewModel().setSelectedExpression(expression, false);\n\t\t}\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: SET_EXPRESSION_COMMAND_ID,\n\thandler: async (accessor: ServicesAccessor, expression: Expression | unknown) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tif (expression instanceof Expression || expression instanceof Variable) {\n\t\t\tdebugService.getViewModel().setSelectedExpression(expression, true);\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'debug.setVariable',\n\tweight: KeybindingWeight.WorkbenchContrib + 5,\n\twhen: CONTEXT_VARIABLES_FOCUSED,\n\tprimary: KeyCode.F2,\n\tmac: { primary: KeyCode.Enter },\n\thandler: (accessor) => {\n\t\tconst listService = accessor.get(IListService);\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst focused = listService.lastFocusedList;\n\n\t\tif (focused) {\n\t\t\tconst elements = focused.getFocus();\n\t\t\tif (Array.isArray(elements) && elements[0] instanceof Variable) {\n\t\t\t\tdebugService.getViewModel().setSelectedExpression(elements[0], false);\n\t\t\t}\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: REMOVE_EXPRESSION_COMMAND_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(CONTEXT_WATCH_EXPRESSIONS_FOCUSED, CONTEXT_EXPRESSION_SELECTED.toNegated()),\n\tprimary: KeyCode.Delete,\n\tmac: { primary: KeyMod.CtrlCmd | KeyCode.Backspace },\n\thandler: (accessor: ServicesAccessor, expression: Expression | unknown) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\n\t\tif (expression instanceof Expression) {\n\t\t\tdebugService.removeWatchExpressions(expression.getId());\n\t\t\treturn;\n\t\t}\n\n\t\tconst listService = accessor.get(IListService);\n\t\tconst focused = listService.lastFocusedList;\n\t\tif (focused) {\n\t\t\tlet elements = focused.getFocus();\n\t\t\tif (Array.isArray(elements) && elements[0] instanceof Expression) {\n\t\t\t\tconst selection = focused.getSelection();\n\t\t\t\tif (selection && selection.indexOf(elements[0]) >= 0) {\n\t\t\t\t\telements = selection;\n\t\t\t\t}\n\t\t\t\telements.forEach((e: Expression) => debugService.removeWatchExpressions(e.getId()));\n\t\t\t}\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'debug.removeBreakpoint',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(CONTEXT_BREAKPOINTS_FOCUSED, CONTEXT_BREAKPOINT_INPUT_FOCUSED.toNegated()),\n\tprimary: KeyCode.Delete,\n\tmac: { primary: KeyMod.CtrlCmd | KeyCode.Backspace },\n\thandler: (accessor) => {\n\t\tconst listService = accessor.get(IListService);\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst list = listService.lastFocusedList;\n\n\t\tif (list instanceof List) {\n\t\t\tconst focused = list.getFocusedElements();\n\t\t\tconst element = focused.length ? focused[0] : undefined;\n\t\t\tif (element instanceof Breakpoint) {\n\t\t\t\tdebugService.removeBreakpoints(element.getId());\n\t\t\t} else if (element instanceof FunctionBreakpoint) {\n\t\t\t\tdebugService.removeFunctionBreakpoints(element.getId());\n\t\t\t} else if (element instanceof DataBreakpoint) {\n\t\t\t\tdebugService.removeDataBreakpoints(element.getId());\n\t\t\t}\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'debug.installAdditionalDebuggers',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: undefined,\n\tprimary: undefined,\n\thandler: async (accessor, query: string) => {\n\t\tconst extensionsWorkbenchService = accessor.get(IExtensionsWorkbenchService);\n\t\tlet searchFor = `@category:debuggers`;\n\t\tif (typeof query === 'string') {\n\t\t\tsearchFor += ` ${query}`;\n\t\t}\n\t\treturn extensionsWorkbenchService.openSearch(searchFor);\n\t}\n});\n\nregisterAction2(class AddConfigurationAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ADD_CONFIGURATION_ID,\n\t\t\ttitle: nls.localize2('addConfiguration', \"Add Configuration...\"),\n\t\t\tcategory: DEBUG_COMMAND_CATEGORY,\n\t\t\tf1: true,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.EditorContent,\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tContextKeyExpr.regex(ResourceContextKey.Path.key, /\\.vscode[/\\\\]launch\\.json$/),\n\t\t\t\t\tActiveEditorContext.isEqualTo(TEXT_FILE_EDITOR_ID))\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, launchUri: string): Promise<void> {\n\t\tconst manager = accessor.get(IDebugService).getConfigurationManager();\n\n\t\tconst launch = manager.getLaunches().find(l => l.uri.toString() === launchUri) || manager.selectedConfiguration.launch;\n\t\tif (launch) {\n\t\t\tconst { editor, created } = await launch.openConfigFile({ preserveFocus: false });\n\t\t\tif (editor && !created) {\n\t\t\t\tconst codeEditor = <ICodeEditor>editor.getControl();\n\t\t\t\tif (codeEditor) {\n\t\t\t\t\tawait codeEditor.getContribution<IDebugEditorContribution>(EDITOR_CONTRIBUTION_ID)?.addLaunchConfiguration();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\nconst inlineBreakpointHandler = (accessor: ServicesAccessor) => {\n\tconst debugService = accessor.get(IDebugService);\n\tconst editorService = accessor.get(IEditorService);\n\tconst control = editorService.activeTextEditorControl;\n\tif (isCodeEditor(control)) {\n\t\tconst position = control.getPosition();\n\t\tif (position && control.hasModel() && debugService.canSetBreakpointsIn(control.getModel())) {\n\t\t\tconst modelUri = control.getModel().uri;\n\t\t\tconst breakpointAlreadySet = debugService.getModel().getBreakpoints({ lineNumber: position.lineNumber, uri: modelUri })\n\t\t\t\t.some(bp => (bp.sessionAgnosticData.column === position.column || (!bp.column && position.column <= 1)));\n\n\t\t\tif (!breakpointAlreadySet) {\n\t\t\t\tdebugService.addBreakpoints(modelUri, [{ lineNumber: position.lineNumber, column: position.column > 1 ? position.column : undefined }]);\n\t\t\t}\n\t\t}\n\t}\n};\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.Shift | KeyCode.F9,\n\twhen: EditorContextKeys.editorTextFocus,\n\tid: TOGGLE_INLINE_BREAKPOINT_ID,\n\thandler: inlineBreakpointHandler\n});\n\nMenuRegistry.appendMenuItem(MenuId.EditorContext, {\n\tcommand: {\n\t\tid: TOGGLE_INLINE_BREAKPOINT_ID,\n\t\ttitle: nls.localize('addInlineBreakpoint', \"Add Inline Breakpoint\"),\n\t\tcategory: DEBUG_COMMAND_CATEGORY\n\t},\n\twhen: ContextKeyExpr.and(\n\t\tCONTEXT_IN_DEBUG_MODE,\n\t\tPanelFocusContext.toNegated(),\n\t\tEditorContextKeys.editorTextFocus,\n\t\tCONTEXT_IN_CHAT_SESSION.toNegated()),\n\tgroup: 'debug',\n\torder: 1\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'debug.openBreakpointToSide',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: CONTEXT_BREAKPOINTS_FOCUSED,\n\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\tsecondary: [KeyMod.Alt | KeyCode.Enter],\n\thandler: (accessor) => {\n\t\tconst listService = accessor.get(IListService);\n\t\tconst list = listService.lastFocusedList;\n\t\tif (list instanceof List) {\n\t\t\tconst focus = list.getFocusedElements();\n\t\t\tif (focus.length && focus[0] instanceof Breakpoint) {\n\t\t\t\treturn openBreakpointSource(focus[0], true, false, true, accessor.get(IDebugService), accessor.get(IEditorService));\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n});\n\n// When there are no debug extensions, open the debug viewlet when F5 is pressed so the user can read the limitations\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'debug.openView',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: CONTEXT_DEBUGGERS_AVAILABLE.toNegated(),\n\tprimary: KeyCode.F5,\n\tsecondary: [KeyMod.CtrlCmd | KeyCode.F5],\n\thandler: async (accessor) => {\n\t\tconst paneCompositeService = accessor.get(IPaneCompositePartService);\n\t\tawait paneCompositeService.openPaneComposite(VIEWLET_ID, ViewContainerLocation.Sidebar, true);\n\t}\n});\n"],
  "mappings": "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",
  "names": []
}
