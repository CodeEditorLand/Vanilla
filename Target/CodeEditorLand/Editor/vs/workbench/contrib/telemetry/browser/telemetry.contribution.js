var U=Object.defineProperty;var K=Object.getOwnPropertyDescriptor;var w=(m,c,e,i)=>{for(var t=i>1?void 0:i?K(c,e):c,o=m.length-1,s;o>=0;o--)(s=m[o])&&(t=(i?s(c,e,t):s(t))||t);return i&&t&&U(c,e,t),t},a=(m,c)=>(e,i)=>c(e,i,m);import{mainWindow as g}from"../../../../base/browser/window.js";import{Event as A}from"../../../../base/common/event.js";import{hash as j}from"../../../../base/common/hash.js";import{Disposable as I}from"../../../../base/common/lifecycle.js";import{Schemas as _}from"../../../../base/common/network.js";import{language as N}from"../../../../base/common/platform.js";import{basename as D,extname as F,isEqual as M,isEqualOrParent as k}from"../../../../base/common/resources.js";import{isBoolean as C,isNumber as V,isString as L}from"../../../../base/common/types.js";import{getMimeTypes as z}from"../../../../editor/common/services/languagesAssociations.js";import{ConfigurationTarget as h,ConfigurationTargetToString as W,IConfigurationService as H}from"../../../../platform/configuration/common/configuration.js";import{Extensions as B}from"../../../../platform/configuration/common/configurationRegistry.js";import{IKeybindingService as J}from"../../../../platform/keybinding/common/keybinding.js";import{Registry as E}from"../../../../platform/registry/common/platform.js";import G from"../../../../platform/telemetry/browser/errorTelemetry.js";import{ITelemetryService as R}from"../../../../platform/telemetry/common/telemetry.js";import{TelemetryTrustedValue as q}from"../../../../platform/telemetry/common/telemetryUtils.js";import{IUserDataProfilesService as Y}from"../../../../platform/userDataProfile/common/userDataProfile.js";import{IWorkspaceContextService as X,WorkbenchState as $}from"../../../../platform/workspace/common/workspace.js";import{Extensions as Q}from"../../../common/contributions.js";import{ViewContainerLocation as x}from"../../../common/views.js";import{IEditorService as Z}from"../../../services/editor/common/editorService.js";import{IWorkbenchEnvironmentService as ee}from"../../../services/environment/common/environmentService.js";import{LayoutSettings as te}from"../../../services/layout/browser/layoutService.js";import{ILifecycleService as ie,LifecyclePhase as P}from"../../../services/lifecycle/common/lifecycle.js";import{IPaneCompositePartService as oe}from"../../../services/panecomposite/browser/panecomposite.js";import{ITextFileService as se}from"../../../services/textfile/common/textfiles.js";import{IWorkbenchThemeService as ne}from"../../../services/themes/common/workbenchThemeService.js";import{IUserDataProfileService as ae}from"../../../services/userDataProfile/common/userDataProfile.js";import{KEYWORD_ACTIVIATION_SETTING_ID as re}from"../../chat/common/chatService.js";import{AutoRestartConfigurationKey as ce,AutoUpdateConfigurationKey as ue}from"../../extensions/common/extensions.js";let u=class extends I{constructor(e,i,t,o,s,r,n,f,p,y){super();this.telemetryService=e;this.contextService=i;this.userDataProfileService=f;const{filesToOpenOrCreate:S,filesToDiff:v,filesToMerge:T}=n,b=p.getActivePaneComposite(x.Sidebar);e.publicLog2("workspaceLoad",{windowSize:{innerHeight:g.innerHeight,innerWidth:g.innerWidth,outerHeight:g.outerHeight,outerWidth:g.outerWidth},emptyWorkbench:i.getWorkbenchState()===$.EMPTY,"workbench.filesToOpenOrCreate":S&&S.length||0,"workbench.filesToDiff":v&&v.length||0,"workbench.filesToMerge":T&&T.length||0,customKeybindingsCount:s.customKeybindingsCount(),theme:r.getColorTheme().id,language:N,pinnedViewlets:p.getPinnedPaneCompositeIds(x.Sidebar),restoredViewlet:b?b.getId():void 0,restoredEditors:o.visibleEditors.length,startupKind:t.startupKind}),this._register(new G(e)),this._register(y.files.onDidResolve(d=>this.onTextFileModelResolved(d))),this._register(y.files.onDidSave(d=>this.onTextFileModelSaved(d))),this._register(t.onDidShutdown(()=>this.dispose()))}static ALLOWLIST_JSON=["package.json","package-lock.json","tsconfig.json","jsconfig.json","bower.json",".eslintrc.json","tslint.json","composer.json"];static ALLOWLIST_WORKSPACE_JSON=["settings.json","extensions.json","tasks.json","launch.json"];onTextFileModelResolved(e){const i=this.getTypeIfSettings(e.model.resource);i?this.telemetryService.publicLog2("settingsRead",{settingsType:i}):this.telemetryService.publicLog2("fileGet",this.getTelemetryData(e.model.resource,e.reason))}onTextFileModelSaved(e){const i=this.getTypeIfSettings(e.model.resource);i?this.telemetryService.publicLog2("settingsWritten",{settingsType:i}):this.telemetryService.publicLog2("filePUT",this.getTelemetryData(e.model.resource,e.reason))}getTypeIfSettings(e){if(F(e)!==".json")return"";if(M(e,this.userDataProfileService.currentProfile.settingsResource))return"global-settings";if(M(e,this.userDataProfileService.currentProfile.keybindingsResource))return"keybindings";if(k(e,this.userDataProfileService.currentProfile.snippetsHome))return"snippets";const i=this.contextService.getWorkspace().folders;for(const t of i)if(k(e,t.toResource(".vscode"))){const o=D(e);if(u.ALLOWLIST_WORKSPACE_JSON.indexOf(o)>-1)return`.vscode/${o}`}return""}getTelemetryData(e,i){let t=F(e);const o=t.indexOf("?");t=o!==-1?t.substr(0,o):t;const s=D(e),r=e.scheme===_.file?e.fsPath:e.path,n={mimeType:new q(z(e).join(", ")),ext:t,path:j(r),reason:i,allowlistedjson:void 0};return t===".json"&&u.ALLOWLIST_JSON.indexOf(s)>-1&&(n.allowlistedjson=s),n}};u=w([a(0,R),a(1,X),a(2,ie),a(3,Z),a(4,J),a(5,ne),a(6,ee),a(7,ae),a(8,oe),a(9,se)],u);let l=class extends I{constructor(e,i,t){super();this.configurationService=e;this.userDataProfilesService=i;this.telemetryService=t;const o=A.debounce(e.onDidChangeConfiguration,(n,f)=>{const p=n?new Set([...n.affectedKeys,...f.affectedKeys]):f.affectedKeys;return{...f,affectedKeys:p}},1e3,!0);this._register(o(n=>{n.source!==h.DEFAULT&&t.publicLog2("updateConfiguration",{configurationSource:W(n.source),configurationKeys:Array.from(n.affectedKeys)})}));const{user:s,workspace:r}=e.keys();for(const n of s)this.reportTelemetry(n,h.USER_LOCAL);for(const n of r)this.reportTelemetry(n,h.WORKSPACE)}configurationRegistry=E.as(B.Configuration);getValueToReport(e,i){const t=this.configurationService.inspect(e),o=i===h.USER_LOCAL?t.user?.value:t.workspace?.value;if(V(o)||C(o))return o.toString();const s=this.configurationRegistry.getConfigurationProperties()[e];if(L(o))return s?.enum?.includes(o)?o:void 0;if(Array.isArray(o)&&o.every(r=>V(r)||C(r)||L(r)&&s?.enum?.includes(r)))return JSON.stringify(o)}reportTelemetry(e,i){const t=W(i);switch(e){case te.ACTIVITY_BAR_LOCATION:this.telemetryService.publicLog2("workbench.activityBar.location",{settingValue:this.getValueToReport(e,i),source:t});return;case ue:this.telemetryService.publicLog2("extensions.autoUpdate",{settingValue:this.getValueToReport(e,i),source:t});return;case"files.autoSave":this.telemetryService.publicLog2("files.autoSave",{settingValue:this.getValueToReport(e,i),source:t});return;case"editor.stickyScroll.enabled":this.telemetryService.publicLog2("editor.stickyScroll.enabled",{settingValue:this.getValueToReport(e,i),source:t});return;case re:this.telemetryService.publicLog2("accessibility.voice.keywordActivation",{settingValue:this.getValueToReport(e,i),source:t});return;case"window.zoomLevel":this.telemetryService.publicLog2("window.zoomLevel",{settingValue:this.getValueToReport(e,i),source:t});return;case"window.zoomPerWindow":this.telemetryService.publicLog2("window.zoomPerWindow",{settingValue:this.getValueToReport(e,i),source:t});return;case"window.titleBarStyle":this.telemetryService.publicLog2("window.titleBarStyle",{settingValue:this.getValueToReport(e,i),source:t});return;case"window.customTitleBarVisibility":this.telemetryService.publicLog2("window.customTitleBarVisibility",{settingValue:this.getValueToReport(e,i),source:t});return;case"window.nativeTabs":this.telemetryService.publicLog2("window.nativeTabs",{settingValue:this.getValueToReport(e,i),source:t});return;case"extensions.verifySignature":this.telemetryService.publicLog2("extensions.verifySignature",{settingValue:this.getValueToReport(e,i),source:t});return;case"window.systemColorTheme":this.telemetryService.publicLog2("window.systemColorTheme",{settingValue:this.getValueToReport(e,i),source:t});return;case"window.newWindowProfile":{const o=this.getValueToReport(e,i),s=o===null?"null":o===this.userDataProfilesService.defaultProfile.name?"default":"custom";this.telemetryService.publicLog2("window.newWindowProfile",{settingValue:s,source:t});return}case ce:this.telemetryService.publicLog2("extensions.autoRestart",{settingValue:this.getValueToReport(e,i),source:t});return}}};l=w([a(0,H),a(1,Y),a(2,R)],l);const O=E.as(Q.Workbench);O.registerWorkbenchContribution(u,P.Restored),O.registerWorkbenchContribution(l,P.Eventually);export{u as TelemetryContribution};
