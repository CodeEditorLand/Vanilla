{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/externalTerminal/browser/externalTerminal.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct } from \"../../../../base/common/arrays.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { basename, dirname } from \"../../../../base/common/path.js\";\nimport { isWindows } from \"../../../../base/common/platform.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport * as nls from \"../../../../nls.js\";\nimport {\n\ttype IMenuItem,\n\tMenuId,\n\tMenuRegistry,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { CommandsRegistry } from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\ttype IExternalTerminalConfiguration,\n\tIExternalTerminalService,\n} from \"../../../../platform/externalTerminal/common/externalTerminal.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport { IListService } from \"../../../../platform/list/browser/listService.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { TerminalLocation } from \"../../../../platform/terminal/common/terminal.js\";\nimport { ResourceContextKey } from \"../../../common/contextkeys.js\";\nimport {\n\ttype IWorkbenchContribution,\n\ttype IWorkbenchContributionsRegistry,\n\tExtensions as WorkbenchExtensions,\n} from \"../../../common/contributions.js\";\nimport { IEditorGroupsService } from \"../../../services/editor/common/editorGroupsService.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { LifecyclePhase } from \"../../../services/lifecycle/common/lifecycle.js\";\nimport { IRemoteAgentService } from \"../../../services/remote/common/remoteAgentService.js\";\nimport {\n\tIExplorerService,\n\tgetMultiSelectedResources,\n} from \"../../files/browser/files.js\";\nimport {\n\tITerminalService as IIntegratedTerminalService,\n\tITerminalGroupService,\n} from \"../../terminal/browser/terminal.js\";\n\nconst OPEN_IN_TERMINAL_COMMAND_ID = \"openInTerminal\";\nconst OPEN_IN_INTEGRATED_TERMINAL_COMMAND_ID = \"openInIntegratedTerminal\";\n\nfunction registerOpenTerminalCommand(\n\tid: string,\n\texplorerKind: \"integrated\" | \"external\",\n) {\n\tCommandsRegistry.registerCommand({\n\t\tid: id,\n\t\thandler: async (accessor, resource: URI) => {\n\t\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\t\tconst fileService = accessor.get(IFileService);\n\t\t\tconst integratedTerminalService = accessor.get(\n\t\t\t\tIIntegratedTerminalService,\n\t\t\t);\n\t\t\tconst remoteAgentService = accessor.get(IRemoteAgentService);\n\t\t\tconst terminalGroupService = accessor.get(ITerminalGroupService);\n\t\t\tlet externalTerminalService: IExternalTerminalService | undefined;\n\t\t\ttry {\n\t\t\t\texternalTerminalService = accessor.get(\n\t\t\t\t\tIExternalTerminalService,\n\t\t\t\t);\n\t\t\t} catch {}\n\n\t\t\tconst resources = getMultiSelectedResources(\n\t\t\t\tresource,\n\t\t\t\taccessor.get(IListService),\n\t\t\t\taccessor.get(IEditorService),\n\t\t\t\taccessor.get(IEditorGroupsService),\n\t\t\t\taccessor.get(IExplorerService),\n\t\t\t);\n\t\t\treturn fileService\n\t\t\t\t.resolveAll(resources.map((r) => ({ resource: r })))\n\t\t\t\t.then(async (stats) => {\n\t\t\t\t\t// Always use integrated terminal when using a remote\n\t\t\t\t\tconst config =\n\t\t\t\t\t\tconfigurationService.getValue<IExternalTerminalConfiguration>();\n\n\t\t\t\t\tconst useIntegratedTerminal =\n\t\t\t\t\t\tremoteAgentService.getConnection() ||\n\t\t\t\t\t\texplorerKind === \"integrated\";\n\t\t\t\t\tconst targets = distinct(\n\t\t\t\t\t\tstats.filter((data) => data.success),\n\t\t\t\t\t);\n\t\t\t\t\tif (useIntegratedTerminal) {\n\t\t\t\t\t\t// TODO: Use uri for cwd in createterminal\n\t\t\t\t\t\tconst opened: { [path: string]: boolean } = {};\n\t\t\t\t\t\tconst cwds = targets.map(({ stat }) => {\n\t\t\t\t\t\t\tconst resource = stat!.resource;\n\t\t\t\t\t\t\tif (stat!.isDirectory) {\n\t\t\t\t\t\t\t\treturn resource;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn URI.from({\n\t\t\t\t\t\t\t\tscheme: resource.scheme,\n\t\t\t\t\t\t\t\tauthority: resource.authority,\n\t\t\t\t\t\t\t\tfragment: resource.fragment,\n\t\t\t\t\t\t\t\tquery: resource.query,\n\t\t\t\t\t\t\t\tpath: dirname(resource.path),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfor (const cwd of cwds) {\n\t\t\t\t\t\t\tif (opened[cwd.path]) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\topened[cwd.path] = true;\n\t\t\t\t\t\t\tconst instance =\n\t\t\t\t\t\t\t\tawait integratedTerminalService.createTerminal({\n\t\t\t\t\t\t\t\t\tconfig: { cwd },\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tinstance &&\n\t\t\t\t\t\t\t\tinstance.target !== TerminalLocation.Editor &&\n\t\t\t\t\t\t\t\t(resources.length === 1 ||\n\t\t\t\t\t\t\t\t\t!resource ||\n\t\t\t\t\t\t\t\t\tcwd.path === resource.path ||\n\t\t\t\t\t\t\t\t\tcwd.path === dirname(resource.path))\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tintegratedTerminalService.setActiveInstance(\n\t\t\t\t\t\t\t\t\tinstance,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tterminalGroupService.showPanel(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (externalTerminalService) {\n\t\t\t\t\t\tdistinct(\n\t\t\t\t\t\t\ttargets.map(({ stat }) =>\n\t\t\t\t\t\t\t\tstat!.isDirectory\n\t\t\t\t\t\t\t\t\t? stat!.resource.fsPath\n\t\t\t\t\t\t\t\t\t: dirname(stat!.resource.fsPath),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t).forEach((cwd) => {\n\t\t\t\t\t\t\texternalTerminalService.openTerminal(\n\t\t\t\t\t\t\t\tconfig.terminal.external,\n\t\t\t\t\t\t\t\tcwd,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t},\n\t});\n}\n\nregisterOpenTerminalCommand(OPEN_IN_TERMINAL_COMMAND_ID, \"external\");\nregisterOpenTerminalCommand(\n\tOPEN_IN_INTEGRATED_TERMINAL_COMMAND_ID,\n\t\"integrated\",\n);\n\nexport class ExternalTerminalContribution\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tprivate _openInIntegratedTerminalMenuItem: IMenuItem;\n\tprivate _openInTerminalMenuItem: IMenuItem;\n\n\tconstructor(\n\t\t@IConfigurationService\n\t\tprivate readonly _configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\n\t\tconst shouldShowIntegratedOnLocal = ContextKeyExpr.and(\n\t\t\tResourceContextKey.Scheme.isEqualTo(Schemas.file),\n\t\t\tContextKeyExpr.or(\n\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\"config.terminal.explorerKind\",\n\t\t\t\t\t\"integrated\",\n\t\t\t\t),\n\t\t\t\tContextKeyExpr.equals(\"config.terminal.explorerKind\", \"both\"),\n\t\t\t),\n\t\t);\n\n\t\tconst shouldShowExternalKindOnLocal = ContextKeyExpr.and(\n\t\t\tResourceContextKey.Scheme.isEqualTo(Schemas.file),\n\t\t\tContextKeyExpr.or(\n\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\"config.terminal.explorerKind\",\n\t\t\t\t\t\"external\",\n\t\t\t\t),\n\t\t\t\tContextKeyExpr.equals(\"config.terminal.explorerKind\", \"both\"),\n\t\t\t),\n\t\t);\n\n\t\tthis._openInIntegratedTerminalMenuItem = {\n\t\t\tgroup: \"navigation\",\n\t\t\torder: 30,\n\t\t\tcommand: {\n\t\t\t\tid: OPEN_IN_INTEGRATED_TERMINAL_COMMAND_ID,\n\t\t\t\ttitle: nls.localize(\n\t\t\t\t\t\"scopedConsoleAction.Integrated\",\n\t\t\t\t\t\"Open in Integrated Terminal\",\n\t\t\t\t),\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.or(\n\t\t\t\tshouldShowIntegratedOnLocal,\n\t\t\t\tResourceContextKey.Scheme.isEqualTo(Schemas.vscodeRemote),\n\t\t\t),\n\t\t};\n\n\t\tthis._openInTerminalMenuItem = {\n\t\t\tgroup: \"navigation\",\n\t\t\torder: 31,\n\t\t\tcommand: {\n\t\t\t\tid: OPEN_IN_TERMINAL_COMMAND_ID,\n\t\t\t\ttitle: nls.localize(\n\t\t\t\t\t\"scopedConsoleAction.external\",\n\t\t\t\t\t\"Open in External Terminal\",\n\t\t\t\t),\n\t\t\t},\n\t\t\twhen: shouldShowExternalKindOnLocal,\n\t\t};\n\n\t\tMenuRegistry.appendMenuItem(\n\t\t\tMenuId.ExplorerContext,\n\t\t\tthis._openInTerminalMenuItem,\n\t\t);\n\t\tMenuRegistry.appendMenuItem(\n\t\t\tMenuId.ExplorerContext,\n\t\t\tthis._openInIntegratedTerminalMenuItem,\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis._configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (\n\t\t\t\t\te.affectsConfiguration(\"terminal.explorerKind\") ||\n\t\t\t\t\te.affectsConfiguration(\"terminal.external\")\n\t\t\t\t) {\n\t\t\t\t\tthis._refreshOpenInTerminalMenuItemTitle();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._refreshOpenInTerminalMenuItemTitle();\n\t}\n\n\tprivate isWindows(): boolean {\n\t\tconst config =\n\t\t\tthis._configurationService.getValue<IExternalTerminalConfiguration>()\n\t\t\t\t.terminal;\n\t\tif (isWindows && config.external?.windowsExec) {\n\t\t\tconst file = basename(config.external.windowsExec);\n\t\t\tif (file === \"wt\" || file === \"wt.exe\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _refreshOpenInTerminalMenuItemTitle(): void {\n\t\tif (this.isWindows()) {\n\t\t\tthis._openInTerminalMenuItem.command.title = nls.localize(\n\t\t\t\t\"scopedConsoleAction.wt\",\n\t\t\t\t\"Open in Windows Terminal\",\n\t\t\t);\n\t\t}\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n).registerWorkbenchContribution(\n\tExternalTerminalContribution,\n\tLifecyclePhase.Restored,\n);\n"],
  "mappings": "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",
  "names": ["resource"]
}
