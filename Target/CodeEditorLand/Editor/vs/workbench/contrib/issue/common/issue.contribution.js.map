{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/issue/common/issue.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport type { ICommandAction } from \"../../../../platform/action/common/action.js\";\nimport { Categories } from \"../../../../platform/action/common/actionCommonCategories.js\";\nimport {\n\tMenuId,\n\tMenuRegistry,\n} from \"../../../../platform/actions/common/actions.js\";\nimport {\n\tCommandsRegistry,\n\ttype ICommandMetadata,\n} from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport { IWorkbenchIssueService, type IssueReporterData } from \"./issue.js\";\n\nconst OpenIssueReporterActionId = \"workbench.action.openIssueReporter\";\nconst OpenIssueReporterApiId = \"vscode.openIssueReporter\";\n\nconst OpenIssueReporterCommandMetadata: ICommandMetadata = {\n\tdescription:\n\t\t\"Open the issue reporter and optionally prefill part of the form.\",\n\targs: [\n\t\t{\n\t\t\tname: \"options\",\n\t\t\tdescription: \"Data to use to prefill the issue reporter with.\",\n\t\t\tisOptional: true,\n\t\t\tschema: {\n\t\t\t\toneOf: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tdescription: \"The extension id to preselect.\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\textensionId: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tissueTitle: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tissueBody: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t},\n\t],\n};\n\ninterface OpenIssueReporterArgs {\n\treadonly extensionId?: string;\n\treadonly issueTitle?: string;\n\treadonly issueBody?: string;\n\treadonly extensionData?: string;\n}\n\nexport class BaseIssueContribution\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tconstructor(\n\t\t@IProductService productService: IProductService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\n\t\tif (!productService.reportIssueUrl) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._register(\n\t\t\tCommandsRegistry.registerCommand({\n\t\t\t\tid: OpenIssueReporterActionId,\n\t\t\t\thandler: (\n\t\t\t\t\taccessor,\n\t\t\t\t\targs?: string | [string] | OpenIssueReporterArgs,\n\t\t\t\t) => {\n\t\t\t\t\tconst data: Partial<IssueReporterData> =\n\t\t\t\t\t\ttypeof args === \"string\"\n\t\t\t\t\t\t\t? { extensionId: args }\n\t\t\t\t\t\t\t: Array.isArray(args)\n\t\t\t\t\t\t\t\t? { extensionId: args[0] }\n\t\t\t\t\t\t\t\t: (args ?? {});\n\n\t\t\t\t\treturn accessor\n\t\t\t\t\t\t.get(IWorkbenchIssueService)\n\t\t\t\t\t\t.openReporter(data);\n\t\t\t\t},\n\t\t\t\tmetadata: OpenIssueReporterCommandMetadata,\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tCommandsRegistry.registerCommand({\n\t\t\t\tid: OpenIssueReporterApiId,\n\t\t\t\thandler: (\n\t\t\t\t\taccessor,\n\t\t\t\t\targs?: string | [string] | OpenIssueReporterArgs,\n\t\t\t\t) => {\n\t\t\t\t\tconst data: Partial<IssueReporterData> =\n\t\t\t\t\t\ttypeof args === \"string\"\n\t\t\t\t\t\t\t? { extensionId: args }\n\t\t\t\t\t\t\t: Array.isArray(args)\n\t\t\t\t\t\t\t\t? { extensionId: args[0] }\n\t\t\t\t\t\t\t\t: (args ?? {});\n\n\t\t\t\t\treturn accessor\n\t\t\t\t\t\t.get(IWorkbenchIssueService)\n\t\t\t\t\t\t.openReporter(data);\n\t\t\t\t},\n\t\t\t\tmetadata: OpenIssueReporterCommandMetadata,\n\t\t\t}),\n\t\t);\n\n\t\tconst reportIssue: ICommandAction = {\n\t\t\tid: OpenIssueReporterActionId,\n\t\t\ttitle: localize2(\n\t\t\t\t{\n\t\t\t\t\tkey: \"reportIssueInEnglish\",\n\t\t\t\t\tcomment: [\n\t\t\t\t\t\t'Translate this to \"Report Issue in English\" in all languages please!',\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t\"Report Issue...\",\n\t\t\t),\n\t\t\tcategory: Categories.Help,\n\t\t};\n\n\t\tthis._register(\n\t\t\tMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\t\t\t\tcommand: reportIssue,\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tMenuRegistry.appendMenuItem(MenuId.MenubarHelpMenu, {\n\t\t\t\tgroup: \"3_feedback\",\n\t\t\t\tcommand: {\n\t\t\t\t\tid: OpenIssueReporterActionId,\n\t\t\t\t\ttitle: localize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"miReportIssue\",\n\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\"&& denotes a mnemonic\",\n\t\t\t\t\t\t\t\t'Translate this to \"Report Issue in English\" in all languages please!',\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"Report &&Issue\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\torder: 3,\n\t\t\t}),\n\t\t);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,kBAAkB;AAC3B,SAAS,UAAU,iBAAiB;AAEpC,SAAS,kBAAkB;AAC3B;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,OAEM;AACP,SAAS,6BAA6B;AACtC,SAAS,uBAAuB;AAEhC,SAAS,8BAAsD;AAE/D,MAAM,4BAA4B;AAClC,MAAM,yBAAyB;AAE/B,MAAM,mCAAqD;AAAA,EAC1D,aACC;AAAA,EACD,MAAM;AAAA,IACL;AAAA,MACC,MAAM;AAAA,MACN,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,QAAQ;AAAA,QACP,OAAO;AAAA,UACN;AAAA,YACC,MAAM;AAAA,YACN,aAAa;AAAA,UACd;AAAA,UACA;AAAA,YACC,MAAM;AAAA,YACN,YAAY;AAAA,cACX,aAAa;AAAA,gBACZ,MAAM;AAAA,cACP;AAAA,cACA,YAAY;AAAA,gBACX,MAAM;AAAA,cACP;AAAA,cACA,WAAW;AAAA,gBACV,MAAM;AAAA,cACP;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AASO,IAAM,wBAAN,cACE,WAET;AAAA,EArEA,OAqEA;AAAA;AAAA;AAAA,EACC,YACkB,gBACM,sBACtB;AACD,UAAM;AAEN,QAAI,CAAC,eAAe,gBAAgB;AACnC;AAAA,IACD;AAEA,SAAK;AAAA,MACJ,iBAAiB,gBAAgB;AAAA,QAChC,IAAI;AAAA,QACJ,SAAS,wBACR,UACA,SACI;AACJ,gBAAM,OACL,OAAO,SAAS,WACb,EAAE,aAAa,KAAK,IACpB,MAAM,QAAQ,IAAI,IACjB,EAAE,aAAa,KAAK,CAAC,EAAE,IACtB,QAAQ,CAAC;AAEf,iBAAO,SACL,IAAI,sBAAsB,EAC1B,aAAa,IAAI;AAAA,QACpB,GAdS;AAAA,QAeT,UAAU;AAAA,MACX,CAAC;AAAA,IACF;AAEA,SAAK;AAAA,MACJ,iBAAiB,gBAAgB;AAAA,QAChC,IAAI;AAAA,QACJ,SAAS,wBACR,UACA,SACI;AACJ,gBAAM,OACL,OAAO,SAAS,WACb,EAAE,aAAa,KAAK,IACpB,MAAM,QAAQ,IAAI,IACjB,EAAE,aAAa,KAAK,CAAC,EAAE,IACtB,QAAQ,CAAC;AAEf,iBAAO,SACL,IAAI,sBAAsB,EAC1B,aAAa,IAAI;AAAA,QACpB,GAdS;AAAA,QAeT,UAAU;AAAA,MACX,CAAC;AAAA,IACF;AAEA,UAAM,cAA8B;AAAA,MACnC,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,UACC,KAAK;AAAA,UACL,SAAS;AAAA,YACR;AAAA,UACD;AAAA,QACD;AAAA,QACA;AAAA,MACD;AAAA,MACA,UAAU,WAAW;AAAA,IACtB;AAEA,SAAK;AAAA,MACJ,aAAa,eAAe,OAAO,gBAAgB;AAAA,QAClD,SAAS;AAAA,MACV,CAAC;AAAA,IACF;AAEA,SAAK;AAAA,MACJ,aAAa,eAAe,OAAO,iBAAiB;AAAA,QACnD,OAAO;AAAA,QACP,SAAS;AAAA,UACR,IAAI;AAAA,UACJ,OAAO;AAAA,YACN;AAAA,cACC,KAAK;AAAA,cACL,SAAS;AAAA,gBACR;AAAA,gBACA;AAAA,cACD;AAAA,YACD;AAAA,YACA;AAAA,UACD;AAAA,QACD;AAAA,QACA,OAAO;AAAA,MACR,CAAC;AAAA,IACF;AAAA,EACD;AACD;AAlGa,wBAAN;AAAA,EAKJ;AAAA,EACA;AAAA,GANU;",
  "names": []
}
