{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/issue/browser/baseIssueReporterService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, createStyleSheet, isHTMLInputElement, isHTMLTextAreaElement, reset, windowOpenNoOpener } from '../../../../base/browser/dom.js';\nimport { Button, unthemedButtonStyles } from '../../../../base/browser/ui/button/button.js';\nimport { renderIcon } from '../../../../base/browser/ui/iconLabel/iconLabels.js';\nimport { mainWindow } from '../../../../base/browser/window.js';\nimport { Delayer, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { groupBy } from '../../../../base/common/collections.js';\nimport { debounce } from '../../../../base/common/decorators.js';\nimport { CancellationError } from '../../../../base/common/errors.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { isLinuxSnap, isMacintosh } from '../../../../base/common/platform.js';\nimport { IProductConfiguration } from '../../../../base/common/product.js';\nimport { escape } from '../../../../base/common/strings.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { localize } from '../../../../nls.js';\nimport { OldIssueReporterData } from '../../../../platform/issue/common/issue.js';\nimport { getIconsStyleSheet } from '../../../../platform/theme/browser/iconsStyleSheet.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { IssueReporterModel, IssueReporterData as IssueReporterModelData } from './issueReporterModel.js';\nimport { IIssueFormService, IssueReporterData, IssueReporterExtensionData, IssueReporterStyles, IssueType } from '../common/issue.js';\nimport { normalizeGitHubUrl } from '../common/issueReporterUtil.js';\n\nconst MAX_URL_LENGTH = 7500;\n\ninterface SearchResult {\n\thtml_url: string;\n\ttitle: string;\n\tstate?: string;\n}\n\nenum IssueSource {\n\tVSCode = 'vscode',\n\tExtension = 'extension',\n\tMarketplace = 'marketplace',\n\tUnknown = 'unknown'\n}\n\n\nexport class BaseIssueReporterService extends Disposable {\n\tpublic issueReporterModel: IssueReporterModel;\n\tpublic receivedSystemInfo = false;\n\tpublic numberOfSearchResultsDisplayed = 0;\n\tpublic receivedPerformanceInfo = false;\n\tpublic shouldQueueSearch = false;\n\tpublic hasBeenSubmitted = false;\n\tpublic openReporter = false;\n\tpublic loadingExtensionData = false;\n\tpublic selectedExtension = '';\n\tpublic delayedSubmit = new Delayer<void>(300);\n\tpublic previewButton!: Button;\n\tpublic nonGitHubIssueUrl = false;\n\n\tconstructor(\n\t\tpublic disableExtensions: boolean,\n\t\tpublic data: IssueReporterData | OldIssueReporterData,\n\t\tpublic os: {\n\t\t\ttype: string;\n\t\t\tarch: string;\n\t\t\trelease: string;\n\t\t},\n\t\tpublic product: IProductConfiguration,\n\t\tpublic readonly window: Window,\n\t\tpublic readonly isWeb: boolean,\n\t\t@IIssueFormService public readonly issueFormService: IIssueFormService,\n\t\t@IThemeService public readonly themeService: IThemeService,\n\t) {\n\t\tsuper();\n\t\tconst targetExtension = data.extensionId ? data.enabledExtensions.find(extension => extension.id.toLocaleLowerCase() === data.extensionId?.toLocaleLowerCase()) : undefined;\n\t\tthis.issueReporterModel = new IssueReporterModel({\n\t\t\t...data,\n\t\t\tissueType: data.issueType || IssueType.Bug,\n\t\t\tversionInfo: {\n\t\t\t\tvscodeVersion: `${product.nameShort} ${!!product.darwinUniversalAssetId ? `${product.version} (Universal)` : product.version} (${product.commit || 'Commit unknown'}, ${product.date || 'Date unknown'})`,\n\t\t\t\tos: `${this.os.type} ${this.os.arch} ${this.os.release}${isLinuxSnap ? ' snap' : ''}`\n\t\t\t},\n\t\t\textensionsDisabled: !!this.disableExtensions,\n\t\t\tfileOnExtension: data.extensionId ? !targetExtension?.isBuiltin : undefined,\n\t\t\tselectedExtension: targetExtension\n\t\t});\n\n\t\tconst fileOnMarketplace = data.issueSource === IssueSource.Marketplace;\n\t\tconst fileOnProduct = data.issueSource === IssueSource.VSCode;\n\t\tthis.issueReporterModel.update({ fileOnMarketplace, fileOnProduct });\n\n\t\t//TODO: Handle case where extension is not activated\n\t\tconst issueReporterElement = this.getElementById('issue-reporter');\n\t\tif (issueReporterElement) {\n\t\t\tthis.previewButton = new Button(issueReporterElement, unthemedButtonStyles);\n\t\t\tconst issueRepoName = document.createElement('a');\n\t\t\tissueReporterElement.appendChild(issueRepoName);\n\t\t\tissueRepoName.id = 'show-repo-name';\n\t\t\tissueRepoName.classList.add('hidden');\n\t\t\tthis.updatePreviewButtonState();\n\t\t}\n\n\t\tconst issueTitle = data.issueTitle;\n\t\tif (issueTitle) {\n\t\t\tconst issueTitleElement = this.getElementById<HTMLInputElement>('issue-title');\n\t\t\tif (issueTitleElement) {\n\t\t\t\tissueTitleElement.value = issueTitle;\n\t\t\t}\n\t\t}\n\n\t\tconst issueBody = data.issueBody;\n\t\tif (issueBody) {\n\t\t\tconst description = this.getElementById<HTMLTextAreaElement>('description');\n\t\t\tif (description) {\n\t\t\t\tdescription.value = issueBody;\n\t\t\t\tthis.issueReporterModel.update({ issueDescription: issueBody });\n\t\t\t}\n\t\t}\n\n\t\tif (this.window.document.documentElement.lang !== 'en') {\n\t\t\tshow(this.getElementById('english'));\n\t\t}\n\n\t\tconst codiconStyleSheet = createStyleSheet();\n\t\tcodiconStyleSheet.id = 'codiconStyles';\n\n\t\tconst iconsStyleSheet = this._register(getIconsStyleSheet(this.themeService));\n\t\tfunction updateAll() {\n\t\t\tcodiconStyleSheet.textContent = iconsStyleSheet.getCSS();\n\t\t}\n\n\t\tconst delayer = new RunOnceScheduler(updateAll, 0);\n\t\ticonsStyleSheet.onDidChange(() => delayer.schedule());\n\t\tdelayer.schedule();\n\n\t\tthis.handleExtensionData(data.enabledExtensions);\n\t\tthis.setUpTypes();\n\t\tthis.applyStyles(data.styles);\n\n\t\t// Handle case where extension is pre-selected through the command\n\t\tif ((data.data || data.uri) && targetExtension) {\n\t\t\tthis.updateExtensionStatus(targetExtension);\n\t\t}\n\t}\n\n\trender(): void {\n\t\tthis.renderBlocks();\n\t}\n\n\tsetInitialFocus() {\n\t\tconst { fileOnExtension } = this.issueReporterModel.getData();\n\t\tif (fileOnExtension) {\n\t\t\tconst issueTitle = this.window.document.getElementById('issue-title');\n\t\t\tissueTitle?.focus();\n\t\t} else {\n\t\t\tconst issueType = this.window.document.getElementById('issue-type');\n\t\t\tissueType?.focus();\n\t\t}\n\t}\n\n\t// TODO @justschen: After migration to Aux Window, switch to dedicated css.\n\tprivate applyStyles(styles: IssueReporterStyles) {\n\t\tconst styleTag = document.createElement('style');\n\t\tconst content: string[] = [];\n\n\t\tif (styles.inputBackground) {\n\t\t\tcontent.push(`input[type=\"text\"], textarea, select, .issues-container > .issue > .issue-state, .block-info { background-color: ${styles.inputBackground} !important; }`);\n\t\t}\n\n\t\tif (styles.backgroundColor) {\n\t\t\tcontent.push(`.monaco-workbench { background-color: ${styles.backgroundColor} !important; }`);\n\t\t\tcontent.push(`.issue-reporter-body::-webkit-scrollbar-track { background-color: ${styles.backgroundColor}; }`);\n\t\t}\n\n\t\tif (styles.inputBorder) {\n\t\t\tcontent.push(`input[type=\"text\"], textarea, select { border: 1px solid ${styles.inputBorder}; }`);\n\t\t} else {\n\t\t\tcontent.push(`input[type=\"text\"], textarea, select { border: 1px solid transparent; }`);\n\t\t}\n\n\t\tif (styles.inputForeground) {\n\t\t\tcontent.push(`input[type=\"text\"], textarea, select, .issues-container > .issue > .issue-state, .block-info { color: ${styles.inputForeground} !important; }`);\n\t\t}\n\n\t\tif (styles.inputErrorBorder) {\n\t\t\tcontent.push(`.invalid-input, .invalid-input:focus, .validation-error { border: 1px solid ${styles.inputErrorBorder} !important; }`);\n\t\t\tcontent.push(`.required-input { color: ${styles.inputErrorBorder}; }`);\n\t\t}\n\n\t\tif (styles.inputErrorBackground) {\n\t\t\tcontent.push(`.validation-error { background: ${styles.inputErrorBackground}; }`);\n\t\t}\n\n\t\tif (styles.inputErrorForeground) {\n\t\t\tcontent.push(`.validation-error { color: ${styles.inputErrorForeground}; }`);\n\t\t}\n\n\t\tif (styles.inputActiveBorder) {\n\t\t\tcontent.push(`input[type='text']:focus, textarea:focus, select:focus, summary:focus, button:focus, a:focus, .workbenchCommand:focus  { border: 1px solid ${styles.inputActiveBorder}; outline-style: none; }`);\n\t\t}\n\n\t\tif (styles.textLinkColor) {\n\t\t\tcontent.push(`a, .workbenchCommand { color: ${styles.textLinkColor}; }`);\n\t\t}\n\n\t\tif (styles.textLinkColor) {\n\t\t\tcontent.push(`a { color: ${styles.textLinkColor}; }`);\n\t\t}\n\n\t\tif (styles.textLinkActiveForeground) {\n\t\t\tcontent.push(`a:hover, .workbenchCommand:hover { color: ${styles.textLinkActiveForeground}; }`);\n\t\t}\n\n\t\tif (styles.sliderActiveColor) {\n\t\t\tcontent.push(`.issue-reporter-body::-webkit-scrollbar-thumb:active { background-color: ${styles.sliderActiveColor}; }`);\n\t\t}\n\n\t\tif (styles.sliderHoverColor) {\n\t\t\tcontent.push(`.issue-reporter-body::-webkit-scrollbar-thumb { background-color: ${styles.sliderHoverColor}; }`);\n\t\t\tcontent.push(`.issue-reporter-body::--webkit-scrollbar-thumb:hover { background-color: ${styles.sliderHoverColor}; }`);\n\t\t}\n\n\t\tif (styles.buttonBackground) {\n\t\t\tcontent.push(`.monaco-text-button { background-color: ${styles.buttonBackground} !important; }`);\n\t\t}\n\n\t\tif (styles.buttonForeground) {\n\t\t\tcontent.push(`.monaco-text-button { color: ${styles.buttonForeground} !important; }`);\n\t\t}\n\n\t\tif (styles.buttonHoverBackground) {\n\t\t\tcontent.push(`.monaco-text-button:not(.disabled):hover, .monaco-text-button:focus { background-color: ${styles.buttonHoverBackground} !important; }`);\n\t\t}\n\n\t\tstyleTag.textContent = content.join('\\n');\n\t\tthis.window.document.head.appendChild(styleTag);\n\t\tthis.window.document.body.style.color = styles.color || '';\n\t}\n\n\tprivate async updateIssueReporterUri(extension: IssueReporterExtensionData): Promise<void> {\n\t\ttry {\n\t\t\tif (extension.uri) {\n\t\t\t\tconst uri = URI.revive(extension.uri);\n\t\t\t\textension.bugsUrl = uri.toString();\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.renderBlocks();\n\t\t}\n\t}\n\n\tprivate handleExtensionData(extensions: IssueReporterExtensionData[]) {\n\t\tconst installedExtensions = extensions.filter(x => !x.isBuiltin);\n\t\tconst { nonThemes, themes } = groupBy(installedExtensions, ext => {\n\t\t\treturn ext.isTheme ? 'themes' : 'nonThemes';\n\t\t});\n\n\t\tconst numberOfThemeExtesions = themes && themes.length;\n\t\tthis.issueReporterModel.update({ numberOfThemeExtesions, enabledNonThemeExtesions: nonThemes, allExtensions: installedExtensions });\n\t\tthis.updateExtensionTable(nonThemes, numberOfThemeExtesions);\n\t\tif (this.disableExtensions || installedExtensions.length === 0) {\n\t\t\t(<HTMLButtonElement>this.getElementById('disableExtensions')).disabled = true;\n\t\t}\n\n\t\tthis.updateExtensionSelector(installedExtensions);\n\t}\n\n\tprivate updateExtensionSelector(extensions: IssueReporterExtensionData[]): void {\n\t\tinterface IOption {\n\t\t\tname: string;\n\t\t\tid: string;\n\t\t}\n\n\t\tconst extensionOptions: IOption[] = extensions.map(extension => {\n\t\t\treturn {\n\t\t\t\tname: extension.displayName || extension.name || '',\n\t\t\t\tid: extension.id\n\t\t\t};\n\t\t});\n\n\t\t// Sort extensions by name\n\t\textensionOptions.sort((a, b) => {\n\t\t\tconst aName = a.name.toLowerCase();\n\t\t\tconst bName = b.name.toLowerCase();\n\t\t\tif (aName > bName) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif (aName < bName) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t});\n\n\t\tconst makeOption = (extension: IOption, selectedExtension?: IssueReporterExtensionData): HTMLOptionElement => {\n\t\t\tconst selected = selectedExtension && extension.id === selectedExtension.id;\n\t\t\treturn $<HTMLOptionElement>('option', {\n\t\t\t\t'value': extension.id,\n\t\t\t\t'selected': selected || ''\n\t\t\t}, extension.name);\n\t\t};\n\n\t\tconst extensionsSelector = this.getElementById<HTMLSelectElement>('extension-selector');\n\t\tif (extensionsSelector) {\n\t\t\tconst { selectedExtension } = this.issueReporterModel.getData();\n\t\t\treset(extensionsSelector, this.makeOption('', localize('selectExtension', \"Select extension\"), true), ...extensionOptions.map(extension => makeOption(extension, selectedExtension)));\n\n\t\t\tif (!selectedExtension) {\n\t\t\t\textensionsSelector.selectedIndex = 0;\n\t\t\t}\n\n\t\t\tthis.addEventListener('extension-selector', 'change', async (e: Event) => {\n\t\t\t\tthis.clearExtensionData();\n\t\t\t\tconst selectedExtensionId = (<HTMLInputElement>e.target).value;\n\t\t\t\tthis.selectedExtension = selectedExtensionId;\n\t\t\t\tconst extensions = this.issueReporterModel.getData().allExtensions;\n\t\t\t\tconst matches = extensions.filter(extension => extension.id === selectedExtensionId);\n\t\t\t\tif (matches.length) {\n\t\t\t\t\tthis.issueReporterModel.update({ selectedExtension: matches[0] });\n\t\t\t\t\tconst selectedExtension = this.issueReporterModel.getData().selectedExtension;\n\t\t\t\t\tif (selectedExtension) {\n\t\t\t\t\t\tconst iconElement = document.createElement('span');\n\t\t\t\t\t\ticonElement.classList.add(...ThemeIcon.asClassNameArray(Codicon.loading), 'codicon-modifier-spin');\n\t\t\t\t\t\tthis.setLoading(iconElement);\n\t\t\t\t\t\tconst openReporterData = await this.sendReporterMenu(selectedExtension);\n\t\t\t\t\t\tif (openReporterData) {\n\t\t\t\t\t\t\tif (this.selectedExtension === selectedExtensionId) {\n\t\t\t\t\t\t\t\tthis.removeLoading(iconElement, true);\n\t\t\t\t\t\t\t\t// this.configuration.data = openReporterData;\n\t\t\t\t\t\t\t\tthis.data = openReporterData;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// else if (this.selectedExtension !== selectedExtensionId) {\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (!this.loadingExtensionData) {\n\t\t\t\t\t\t\t\ticonElement.classList.remove(...ThemeIcon.asClassNameArray(Codicon.loading), 'codicon-modifier-spin');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.removeLoading(iconElement);\n\t\t\t\t\t\t\t// if not using command, should have no configuration data in fields we care about and check later.\n\t\t\t\t\t\t\tthis.clearExtensionData();\n\n\t\t\t\t\t\t\t// case when previous extension was opened from normal openIssueReporter command\n\t\t\t\t\t\t\tselectedExtension.data = undefined;\n\t\t\t\t\t\t\tselectedExtension.uri = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.selectedExtension === selectedExtensionId) {\n\t\t\t\t\t\t\t// repopulates the fields with the new data given the selected extension.\n\t\t\t\t\t\t\tthis.updateExtensionStatus(matches[0]);\n\t\t\t\t\t\t\tthis.openReporter = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.issueReporterModel.update({ selectedExtension: undefined });\n\t\t\t\t\t\tthis.clearSearchResults();\n\t\t\t\t\t\tthis.clearExtensionData();\n\t\t\t\t\t\tthis.validateSelectedExtension();\n\t\t\t\t\t\tthis.updateExtensionStatus(matches[0]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis.addEventListener('problem-source', 'change', (_) => {\n\t\t\tthis.clearExtensionData();\n\t\t\tthis.validateSelectedExtension();\n\t\t});\n\t}\n\n\tprivate async sendReporterMenu(extension: IssueReporterExtensionData): Promise<IssueReporterData | undefined> {\n\t\ttry {\n\t\t\tconst data = await this.issueFormService.sendReporterMenu(extension.id);\n\t\t\treturn data;\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tpublic setEventHandlers(): void {\n\t\t(['includeSystemInfo', 'includeProcessInfo', 'includeWorkspaceInfo', 'includeExtensions', 'includeExperiments', 'includeExtensionData'] as const).forEach(elementId => {\n\t\t\tthis.addEventListener(elementId, 'click', (event: Event) => {\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tthis.issueReporterModel.update({ [elementId]: !this.issueReporterModel.getData()[elementId] });\n\t\t\t});\n\t\t});\n\n\t\tconst showInfoElements = this.window.document.getElementsByClassName('showInfo');\n\t\tfor (let i = 0; i < showInfoElements.length; i++) {\n\t\t\tconst showInfo = showInfoElements.item(i)!;\n\t\t\t(showInfo as HTMLAnchorElement).addEventListener('click', (e: MouseEvent) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tconst label = (<HTMLDivElement>e.target);\n\t\t\t\tif (label) {\n\t\t\t\t\tconst containingElement = label.parentElement && label.parentElement.parentElement;\n\t\t\t\t\tconst info = containingElement && containingElement.lastElementChild;\n\t\t\t\t\tif (info && info.classList.contains('hidden')) {\n\t\t\t\t\t\tshow(info);\n\t\t\t\t\t\tlabel.textContent = localize('hide', \"hide\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\thide(info);\n\t\t\t\t\t\tlabel.textContent = localize('show', \"show\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis.addEventListener('issue-source', 'change', (e: Event) => {\n\t\t\tconst value = (<HTMLInputElement>e.target).value;\n\t\t\tconst problemSourceHelpText = this.getElementById('problem-source-help-text')!;\n\t\t\tif (value === '') {\n\t\t\t\tthis.issueReporterModel.update({ fileOnExtension: undefined });\n\t\t\t\tshow(problemSourceHelpText);\n\t\t\t\tthis.clearSearchResults();\n\t\t\t\tthis.render();\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\thide(problemSourceHelpText);\n\t\t\t}\n\n\t\t\tconst descriptionTextArea = <HTMLInputElement>this.getElementById('issue-title');\n\t\t\tif (value === IssueSource.VSCode) {\n\t\t\t\tdescriptionTextArea.placeholder = localize('vscodePlaceholder', \"E.g Workbench is missing problems panel\");\n\t\t\t} else if (value === IssueSource.Extension) {\n\t\t\t\tdescriptionTextArea.placeholder = localize('extensionPlaceholder', \"E.g. Missing alt text on extension readme image\");\n\t\t\t} else if (value === IssueSource.Marketplace) {\n\t\t\t\tdescriptionTextArea.placeholder = localize('marketplacePlaceholder', \"E.g Cannot disable installed extension\");\n\t\t\t} else {\n\t\t\t\tdescriptionTextArea.placeholder = localize('undefinedPlaceholder', \"Please enter a title\");\n\t\t\t}\n\n\t\t\tlet fileOnExtension, fileOnMarketplace = false;\n\t\t\tif (value === IssueSource.Extension) {\n\t\t\t\tfileOnExtension = true;\n\t\t\t} else if (value === IssueSource.Marketplace) {\n\t\t\t\tfileOnMarketplace = true;\n\t\t\t}\n\n\t\t\tthis.issueReporterModel.update({ fileOnExtension, fileOnMarketplace });\n\t\t\tthis.render();\n\n\t\t\tconst title = (<HTMLInputElement>this.getElementById('issue-title')).value;\n\t\t\tthis.searchIssues(title, fileOnExtension, fileOnMarketplace);\n\t\t});\n\n\t\tthis.addEventListener('description', 'input', (e: Event) => {\n\t\t\tconst issueDescription = (<HTMLInputElement>e.target).value;\n\t\t\tthis.issueReporterModel.update({ issueDescription });\n\n\t\t\t// Only search for extension issues on title change\n\t\t\tif (this.issueReporterModel.fileOnExtension() === false) {\n\t\t\t\tconst title = (<HTMLInputElement>this.getElementById('issue-title')).value;\n\t\t\t\tthis.searchVSCodeIssues(title, issueDescription);\n\t\t\t}\n\t\t});\n\n\t\tthis.addEventListener('issue-title', 'input', _ => {\n\t\t\tconst titleElement = this.getElementById('issue-title') as HTMLInputElement;\n\t\t\tif (titleElement) {\n\t\t\t\tconst title = titleElement.value;\n\t\t\t\tthis.issueReporterModel.update({ issueTitle: title });\n\t\t\t}\n\t\t});\n\n\t\tthis.addEventListener('issue-title', 'input', (e: Event) => {\n\t\t\tconst title = (<HTMLInputElement>e.target).value;\n\t\t\tconst lengthValidationMessage = this.getElementById('issue-title-length-validation-error');\n\t\t\tconst issueUrl = this.getIssueUrl();\n\t\t\tif (title && this.getIssueUrlWithTitle(title, issueUrl).length > MAX_URL_LENGTH) {\n\t\t\t\tshow(lengthValidationMessage);\n\t\t\t} else {\n\t\t\t\thide(lengthValidationMessage);\n\t\t\t}\n\t\t\tconst issueSource = this.getElementById<HTMLSelectElement>('issue-source');\n\t\t\tif (!issueSource || issueSource.value === '') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { fileOnExtension, fileOnMarketplace } = this.issueReporterModel.getData();\n\t\t\tthis.searchIssues(title, fileOnExtension, fileOnMarketplace);\n\t\t});\n\n\t\tthis.previewButton.onDidClick(async () => {\n\t\t\tthis.delayedSubmit.trigger(async () => {\n\t\t\t\tthis.createIssue();\n\t\t\t});\n\t\t});\n\n\t\tthis.addEventListener('disableExtensions', 'click', () => {\n\t\t\tthis.issueFormService.reloadWithExtensionsDisabled();\n\t\t});\n\n\t\tthis.addEventListener('extensionBugsLink', 'click', (e: Event) => {\n\t\t\tconst url = (<HTMLElement>e.target).innerText;\n\t\t\twindowOpenNoOpener(url);\n\t\t});\n\n\t\tthis.addEventListener('disableExtensions', 'keydown', (e: Event) => {\n\t\t\te.stopPropagation();\n\t\t\tif ((e as KeyboardEvent).key === 'Enter' || (e as KeyboardEvent).key === ' ') {\n\t\t\t\tthis.issueFormService.reloadWithExtensionsDisabled();\n\t\t\t}\n\t\t});\n\n\t\tthis.window.document.onkeydown = async (e: KeyboardEvent) => {\n\t\t\tconst cmdOrCtrlKey = isMacintosh ? e.metaKey : e.ctrlKey;\n\t\t\t// Cmd/Ctrl+Enter previews issue and closes window\n\t\t\tif (cmdOrCtrlKey && e.key === 'Enter') {\n\t\t\t\tthis.delayedSubmit.trigger(async () => {\n\t\t\t\t\tif (await this.createIssue()) {\n\t\t\t\t\t\tthis.close();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Cmd/Ctrl + w closes issue window\n\t\t\tif (cmdOrCtrlKey && e.key === 'w') {\n\t\t\t\te.stopPropagation();\n\t\t\t\te.preventDefault();\n\n\t\t\t\tconst issueTitle = (<HTMLInputElement>this.getElementById('issue-title'))!.value;\n\t\t\t\tconst { issueDescription } = this.issueReporterModel.getData();\n\t\t\t\tif (!this.hasBeenSubmitted && (issueTitle || issueDescription)) {\n\t\t\t\t\t// fire and forget\n\t\t\t\t\tthis.issueFormService.showConfirmCloseDialog();\n\t\t\t\t} else {\n\t\t\t\t\tthis.close();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// With latest electron upgrade, cmd+a is no longer propagating correctly for inputs in this window on mac\n\t\t\t// Manually perform the selection\n\t\t\tif (isMacintosh) {\n\t\t\t\tif (cmdOrCtrlKey && e.key === 'a' && e.target) {\n\t\t\t\t\tif (isHTMLInputElement(e.target) || isHTMLTextAreaElement(e.target)) {\n\t\t\t\t\t\t(<HTMLInputElement>e.target).select();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic updatePerformanceInfo(info: Partial<IssueReporterData>) {\n\t\tthis.issueReporterModel.update(info);\n\t\tthis.receivedPerformanceInfo = true;\n\n\t\tconst state = this.issueReporterModel.getData();\n\t\tthis.updateProcessInfo(state);\n\t\tthis.updateWorkspaceInfo(state);\n\t\tthis.updatePreviewButtonState();\n\t}\n\n\tpublic updatePreviewButtonState() {\n\t\tif (this.isPreviewEnabled()) {\n\t\t\tif (this.data.githubAccessToken) {\n\t\t\t\tthis.previewButton.label = localize('createOnGitHub', \"Create on GitHub\");\n\t\t\t} else {\n\t\t\t\tthis.previewButton.label = localize('previewOnGitHub', \"Preview on GitHub\");\n\t\t\t}\n\t\t\tthis.previewButton.enabled = true;\n\t\t} else {\n\t\t\tthis.previewButton.enabled = false;\n\t\t\tthis.previewButton.label = localize('loadingData', \"Loading data...\");\n\t\t}\n\n\t\tconst issueRepoName = this.getElementById('show-repo-name')! as HTMLAnchorElement;\n\t\tconst selectedExtension = this.issueReporterModel.getData().selectedExtension;\n\t\tif (selectedExtension && selectedExtension.uri) {\n\t\t\tconst urlString = URI.revive(selectedExtension.uri).toString();\n\t\t\tissueRepoName.href = urlString;\n\t\t\tissueRepoName.addEventListener('click', (e) => this.openLink(e));\n\t\t\tissueRepoName.addEventListener('auxclick', (e) => this.openLink(<MouseEvent>e));\n\t\t\tconst gitHubInfo = this.parseGitHubUrl(urlString);\n\t\t\tissueRepoName.textContent = gitHubInfo ? gitHubInfo.owner + '/' + gitHubInfo.repositoryName : urlString;\n\t\t\tObject.assign(issueRepoName.style, {\n\t\t\t\talignSelf: 'flex-end',\n\t\t\t\tdisplay: 'block',\n\t\t\t\tfontSize: '13px',\n\t\t\t\tmarginBottom: '10px',\n\t\t\t\tpadding: '4px 0px',\n\t\t\t\ttextDecoration: 'none',\n\t\t\t\twidth: 'auto'\n\t\t\t});\n\t\t\tshow(issueRepoName);\n\t\t} else {\n\t\t\t// clear styles\n\t\t\tissueRepoName.removeAttribute('style');\n\t\t\thide(issueRepoName);\n\t\t}\n\n\t\t// Initial check when first opened.\n\t\tthis.getExtensionGitHubUrl();\n\t}\n\n\tprivate isPreviewEnabled() {\n\t\tconst issueType = this.issueReporterModel.getData().issueType;\n\n\t\tif (this.loadingExtensionData) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.isWeb) {\n\t\t\tif (issueType === IssueType.FeatureRequest || issueType === IssueType.PerformanceIssue || issueType === IssueType.Bug) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\tif (issueType === IssueType.Bug && this.receivedSystemInfo) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (issueType === IssueType.PerformanceIssue && this.receivedSystemInfo && this.receivedPerformanceInfo) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (issueType === IssueType.FeatureRequest) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate getExtensionRepositoryUrl(): string | undefined {\n\t\tconst selectedExtension = this.issueReporterModel.getData().selectedExtension;\n\t\treturn selectedExtension && selectedExtension.repositoryUrl;\n\t}\n\n\tpublic getExtensionBugsUrl(): string | undefined {\n\t\tconst selectedExtension = this.issueReporterModel.getData().selectedExtension;\n\t\treturn selectedExtension && selectedExtension.bugsUrl;\n\t}\n\n\tpublic searchVSCodeIssues(title: string, issueDescription?: string): void {\n\t\tif (title) {\n\t\t\tthis.searchDuplicates(title, issueDescription);\n\t\t} else {\n\t\t\tthis.clearSearchResults();\n\t\t}\n\t}\n\n\tpublic searchIssues(title: string, fileOnExtension: boolean | undefined, fileOnMarketplace: boolean | undefined): void {\n\t\tif (fileOnExtension) {\n\t\t\treturn this.searchExtensionIssues(title);\n\t\t}\n\n\t\tif (fileOnMarketplace) {\n\t\t\treturn this.searchMarketplaceIssues(title);\n\t\t}\n\n\t\tconst description = this.issueReporterModel.getData().issueDescription;\n\t\tthis.searchVSCodeIssues(title, description);\n\t}\n\n\tprivate searchExtensionIssues(title: string): void {\n\t\tconst url = this.getExtensionGitHubUrl();\n\t\tif (title) {\n\t\t\tconst matches = /^https?:\\/\\/github\\.com\\/(.*)/.exec(url);\n\t\t\tif (matches && matches.length) {\n\t\t\t\tconst repo = matches[1];\n\t\t\t\treturn this.searchGitHub(repo, title);\n\t\t\t}\n\n\t\t\t// If the extension has no repository, display empty search results\n\t\t\tif (this.issueReporterModel.getData().selectedExtension) {\n\t\t\t\tthis.clearSearchResults();\n\t\t\t\treturn this.displaySearchResults([]);\n\n\t\t\t}\n\t\t}\n\n\t\tthis.clearSearchResults();\n\t}\n\n\tprivate searchMarketplaceIssues(title: string): void {\n\t\tif (title) {\n\t\t\tconst gitHubInfo = this.parseGitHubUrl(this.product.reportMarketplaceIssueUrl!);\n\t\t\tif (gitHubInfo) {\n\t\t\t\treturn this.searchGitHub(`${gitHubInfo.owner}/${gitHubInfo.repositoryName}`, title);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async close(): Promise<void> {\n\t\tawait this.issueFormService.closeReporter();\n\t}\n\n\tpublic clearSearchResults(): void {\n\t\tconst similarIssues = this.getElementById('similar-issues')!;\n\t\tsimilarIssues.innerText = '';\n\t\tthis.numberOfSearchResultsDisplayed = 0;\n\t}\n\n\t@debounce(300)\n\tprivate searchGitHub(repo: string, title: string): void {\n\t\tconst query = `is:issue+repo:${repo}+${title}`;\n\t\tconst similarIssues = this.getElementById('similar-issues')!;\n\n\t\tfetch(`https://api.github.com/search/issues?q=${query}`).then((response) => {\n\t\t\tresponse.json().then(result => {\n\t\t\t\tsimilarIssues.innerText = '';\n\t\t\t\tif (result && result.items) {\n\t\t\t\t\tthis.displaySearchResults(result.items);\n\t\t\t\t} else {\n\t\t\t\t\t// If the items property isn't present, the rate limit has been hit\n\t\t\t\t\tconst message = $('div.list-title');\n\t\t\t\t\tmessage.textContent = localize('rateLimited', \"GitHub query limit exceeded. Please wait.\");\n\t\t\t\t\tsimilarIssues.appendChild(message);\n\n\t\t\t\t\tconst resetTime = response.headers.get('X-RateLimit-Reset');\n\t\t\t\t\tconst timeToWait = resetTime ? parseInt(resetTime) - Math.floor(Date.now() / 1000) : 1;\n\t\t\t\t\tif (this.shouldQueueSearch) {\n\t\t\t\t\t\tthis.shouldQueueSearch = false;\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tthis.searchGitHub(repo, title);\n\t\t\t\t\t\t\tthis.shouldQueueSearch = true;\n\t\t\t\t\t\t}, timeToWait * 1000);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}).catch(_ => {\n\t\t\t\tconsole.warn('Timeout or query limit exceeded');\n\t\t\t});\n\t\t}).catch(_ => {\n\t\t\tconsole.warn('Error fetching GitHub issues');\n\t\t});\n\t}\n\n\t@debounce(300)\n\tprivate searchDuplicates(title: string, body?: string): void {\n\t\tconst url = 'https://vscode-probot.westus.cloudapp.azure.com:7890/duplicate_candidates';\n\t\tconst init = {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify({\n\t\t\t\ttitle,\n\t\t\t\tbody\n\t\t\t}),\n\t\t\theaders: new Headers({\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t})\n\t\t};\n\n\t\tfetch(url, init).then((response) => {\n\t\t\tresponse.json().then(result => {\n\t\t\t\tthis.clearSearchResults();\n\n\t\t\t\tif (result && result.candidates) {\n\t\t\t\t\tthis.displaySearchResults(result.candidates);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Unexpected response, no candidates property');\n\t\t\t\t}\n\t\t\t}).catch(_ => {\n\t\t\t\t// Ignore\n\t\t\t});\n\t\t}).catch(_ => {\n\t\t\t// Ignore\n\t\t});\n\t}\n\n\tprivate displaySearchResults(results: SearchResult[]) {\n\t\tconst similarIssues = this.getElementById('similar-issues')!;\n\t\tif (results.length) {\n\t\t\tconst issues = $('div.issues-container');\n\t\t\tconst issuesText = $('div.list-title');\n\t\t\tissuesText.textContent = localize('similarIssues', \"Similar issues\");\n\n\t\t\tthis.numberOfSearchResultsDisplayed = results.length < 5 ? results.length : 5;\n\t\t\tfor (let i = 0; i < this.numberOfSearchResultsDisplayed; i++) {\n\t\t\t\tconst issue = results[i];\n\t\t\t\tconst link = $('a.issue-link', { href: issue.html_url });\n\t\t\t\tlink.textContent = issue.title;\n\t\t\t\tlink.title = issue.title;\n\t\t\t\tlink.addEventListener('click', (e) => this.openLink(e));\n\t\t\t\tlink.addEventListener('auxclick', (e) => this.openLink(<MouseEvent>e));\n\n\t\t\t\tlet issueState: HTMLElement;\n\t\t\t\tlet item: HTMLElement;\n\t\t\t\tif (issue.state) {\n\t\t\t\t\tissueState = $('span.issue-state');\n\n\t\t\t\t\tconst issueIcon = $('span.issue-icon');\n\t\t\t\t\tissueIcon.appendChild(renderIcon(issue.state === 'open' ? Codicon.issueOpened : Codicon.issueClosed));\n\n\t\t\t\t\tconst issueStateLabel = $('span.issue-state.label');\n\t\t\t\t\tissueStateLabel.textContent = issue.state === 'open' ? localize('open', \"Open\") : localize('closed', \"Closed\");\n\n\t\t\t\t\tissueState.title = issue.state === 'open' ? localize('open', \"Open\") : localize('closed', \"Closed\");\n\t\t\t\t\tissueState.appendChild(issueIcon);\n\t\t\t\t\tissueState.appendChild(issueStateLabel);\n\n\t\t\t\t\titem = $('div.issue', undefined, issueState, link);\n\t\t\t\t} else {\n\t\t\t\t\titem = $('div.issue', undefined, link);\n\t\t\t\t}\n\n\t\t\t\tissues.appendChild(item);\n\t\t\t}\n\n\t\t\tsimilarIssues.appendChild(issuesText);\n\t\t\tsimilarIssues.appendChild(issues);\n\t\t} else {\n\t\t\tconst message = $('div.list-title');\n\t\t\tmessage.textContent = localize('noSimilarIssues', \"No similar issues found\");\n\t\t\tsimilarIssues.appendChild(message);\n\t\t}\n\t}\n\n\tprivate setUpTypes(): void {\n\t\tconst makeOption = (issueType: IssueType, description: string) => $('option', { 'value': issueType.valueOf() }, escape(description));\n\n\t\tconst typeSelect = this.getElementById('issue-type')! as HTMLSelectElement;\n\t\tconst { issueType } = this.issueReporterModel.getData();\n\t\treset(typeSelect,\n\t\t\tmakeOption(IssueType.Bug, localize('bugReporter', \"Bug Report\")),\n\t\t\tmakeOption(IssueType.FeatureRequest, localize('featureRequest', \"Feature Request\")),\n\t\t\tmakeOption(IssueType.PerformanceIssue, localize('performanceIssue', \"Performance Issue (freeze, slow, crash)\"))\n\t\t);\n\n\t\ttypeSelect.value = issueType.toString();\n\n\t\tthis.setSourceOptions();\n\t}\n\n\tpublic makeOption(value: string, description: string, disabled: boolean): HTMLOptionElement {\n\t\tconst option: HTMLOptionElement = document.createElement('option');\n\t\toption.disabled = disabled;\n\t\toption.value = value;\n\t\toption.textContent = description;\n\n\t\treturn option;\n\t}\n\n\tpublic setSourceOptions(): void {\n\t\tconst sourceSelect = this.getElementById('issue-source')! as HTMLSelectElement;\n\t\tconst { issueType, fileOnExtension, selectedExtension, fileOnMarketplace, fileOnProduct } = this.issueReporterModel.getData();\n\t\tlet selected = sourceSelect.selectedIndex;\n\t\tif (selected === -1) {\n\t\t\tif (fileOnExtension !== undefined) {\n\t\t\t\tselected = fileOnExtension ? 2 : 1;\n\t\t\t} else if (selectedExtension?.isBuiltin) {\n\t\t\t\tselected = 1;\n\t\t\t} else if (fileOnMarketplace) {\n\t\t\t\tselected = 3;\n\t\t\t} else if (fileOnProduct) {\n\t\t\t\tselected = 1;\n\t\t\t}\n\t\t}\n\n\t\tsourceSelect.innerText = '';\n\t\tsourceSelect.append(this.makeOption('', localize('selectSource', \"Select source\"), true));\n\t\tsourceSelect.append(this.makeOption(IssueSource.VSCode, localize('vscode', \"Visual Studio Code\"), false));\n\t\tsourceSelect.append(this.makeOption(IssueSource.Extension, localize('extension', \"A VS Code extension\"), false));\n\t\tif (this.product.reportMarketplaceIssueUrl) {\n\t\t\tsourceSelect.append(this.makeOption(IssueSource.Marketplace, localize('marketplace', \"Extensions Marketplace\"), false));\n\t\t}\n\n\t\tif (issueType !== IssueType.FeatureRequest) {\n\t\t\tsourceSelect.append(this.makeOption(IssueSource.Unknown, localize('unknown', \"Don't know\"), false));\n\t\t}\n\n\t\tif (selected !== -1 && selected < sourceSelect.options.length) {\n\t\t\tsourceSelect.selectedIndex = selected;\n\t\t} else {\n\t\t\tsourceSelect.selectedIndex = 0;\n\t\t\thide(this.getElementById('problem-source-help-text'));\n\t\t}\n\t}\n\n\tpublic renderBlocks(): void {\n\t\t// Depending on Issue Type, we render different blocks and text\n\t\tconst { issueType, fileOnExtension, fileOnMarketplace, selectedExtension } = this.issueReporterModel.getData();\n\t\tconst blockContainer = this.getElementById('block-container');\n\t\tconst systemBlock = this.window.document.querySelector('.block-system');\n\t\tconst processBlock = this.window.document.querySelector('.block-process');\n\t\tconst workspaceBlock = this.window.document.querySelector('.block-workspace');\n\t\tconst extensionsBlock = this.window.document.querySelector('.block-extensions');\n\t\tconst experimentsBlock = this.window.document.querySelector('.block-experiments');\n\t\tconst extensionDataBlock = this.window.document.querySelector('.block-extension-data');\n\n\t\tconst problemSource = this.getElementById('problem-source')!;\n\t\tconst descriptionTitle = this.getElementById('issue-description-label')!;\n\t\tconst descriptionSubtitle = this.getElementById('issue-description-subtitle')!;\n\t\tconst extensionSelector = this.getElementById('extension-selection')!;\n\n\t\tconst titleTextArea = this.getElementById('issue-title-container')!;\n\t\tconst descriptionTextArea = this.getElementById('description')!;\n\t\tconst extensionDataTextArea = this.getElementById('extension-data')!;\n\n\t\t// Hide all by default\n\t\thide(blockContainer);\n\t\thide(systemBlock);\n\t\thide(processBlock);\n\t\thide(workspaceBlock);\n\t\thide(extensionsBlock);\n\t\thide(experimentsBlock);\n\t\thide(extensionSelector);\n\t\thide(extensionDataTextArea);\n\t\thide(extensionDataBlock);\n\n\t\tshow(problemSource);\n\t\tshow(titleTextArea);\n\t\tshow(descriptionTextArea);\n\n\t\tif (fileOnExtension) {\n\t\t\tshow(extensionSelector);\n\t\t}\n\n\n\t\tif (selectedExtension && this.nonGitHubIssueUrl) {\n\t\t\thide(titleTextArea);\n\t\t\thide(descriptionTextArea);\n\t\t\treset(descriptionTitle, localize('handlesIssuesElsewhere', \"This extension handles issues outside of VS Code\"));\n\t\t\treset(descriptionSubtitle, localize('elsewhereDescription', \"The '{0}' extension prefers to use an external issue reporter. To be taken to that issue reporting experience, click the button below.\", selectedExtension.displayName));\n\t\t\tthis.previewButton.label = localize('openIssueReporter', \"Open External Issue Reporter\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (fileOnExtension && selectedExtension?.data) {\n\t\t\tconst data = selectedExtension?.data;\n\t\t\t(extensionDataTextArea as HTMLElement).innerText = data.toString();\n\t\t\t(extensionDataTextArea as HTMLTextAreaElement).readOnly = true;\n\t\t\tshow(extensionDataBlock);\n\t\t}\n\n\t\t// only if we know comes from the open reporter command\n\t\tif (fileOnExtension && this.openReporter) {\n\t\t\t(extensionDataTextArea as HTMLTextAreaElement).readOnly = true;\n\t\t\tsetTimeout(() => {\n\t\t\t\t// delay to make sure from command or not\n\t\t\t\tif (this.openReporter) {\n\t\t\t\t\tshow(extensionDataBlock);\n\t\t\t\t}\n\t\t\t}, 100);\n\t\t\tshow(extensionDataBlock);\n\t\t}\n\n\t\tif (issueType === IssueType.Bug) {\n\t\t\tif (!fileOnMarketplace) {\n\t\t\t\tshow(blockContainer);\n\t\t\t\tshow(systemBlock);\n\t\t\t\tshow(experimentsBlock);\n\t\t\t\tif (!fileOnExtension) {\n\t\t\t\t\tshow(extensionsBlock);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treset(descriptionTitle, localize('stepsToReproduce', \"Steps to Reproduce\") + ' ', $('span.required-input', undefined, '*'));\n\t\t\treset(descriptionSubtitle, localize('bugDescription', \"Share the steps needed to reliably reproduce the problem. Please include actual and expected results. We support GitHub-flavored Markdown. You will be able to edit your issue and add screenshots when we preview it on GitHub.\"));\n\t\t} else if (issueType === IssueType.PerformanceIssue) {\n\t\t\tif (!fileOnMarketplace) {\n\t\t\t\tshow(blockContainer);\n\t\t\t\tshow(systemBlock);\n\t\t\t\tshow(processBlock);\n\t\t\t\tshow(workspaceBlock);\n\t\t\t\tshow(experimentsBlock);\n\t\t\t}\n\n\t\t\tif (fileOnExtension) {\n\t\t\t\tshow(extensionSelector);\n\t\t\t} else if (!fileOnMarketplace) {\n\t\t\t\tshow(extensionsBlock);\n\t\t\t}\n\n\t\t\treset(descriptionTitle, localize('stepsToReproduce', \"Steps to Reproduce\") + ' ', $('span.required-input', undefined, '*'));\n\t\t\treset(descriptionSubtitle, localize('performanceIssueDesciption', \"When did this performance issue happen? Does it occur on startup or after a specific series of actions? We support GitHub-flavored Markdown. You will be able to edit your issue and add screenshots when we preview it on GitHub.\"));\n\t\t} else if (issueType === IssueType.FeatureRequest) {\n\t\t\treset(descriptionTitle, localize('description', \"Description\") + ' ', $('span.required-input', undefined, '*'));\n\t\t\treset(descriptionSubtitle, localize('featureRequestDescription', \"Please describe the feature you would like to see. We support GitHub-flavored Markdown. You will be able to edit your issue and add screenshots when we preview it on GitHub.\"));\n\t\t}\n\t}\n\n\tpublic validateInput(inputId: string): boolean {\n\t\tconst inputElement = (<HTMLInputElement>this.getElementById(inputId));\n\t\tconst inputValidationMessage = this.getElementById(`${inputId}-empty-error`);\n\t\tconst descriptionShortMessage = this.getElementById(`description-short-error`);\n\t\tif (inputId === 'description' && this.nonGitHubIssueUrl && this.data.extensionId) {\n\t\t\treturn true;\n\t\t} else if (!inputElement.value) {\n\t\t\tinputElement.classList.add('invalid-input');\n\t\t\tinputValidationMessage?.classList.remove('hidden');\n\t\t\tdescriptionShortMessage?.classList.add('hidden');\n\t\t\treturn false;\n\t\t} else if (inputId === 'description' && inputElement.value.length < 10) {\n\t\t\tinputElement.classList.add('invalid-input');\n\t\t\tdescriptionShortMessage?.classList.remove('hidden');\n\t\t\tinputValidationMessage?.classList.add('hidden');\n\t\t\treturn false;\n\t\t} else {\n\t\t\tinputElement.classList.remove('invalid-input');\n\t\t\tinputValidationMessage?.classList.add('hidden');\n\t\t\tif (inputId === 'description') {\n\t\t\t\tdescriptionShortMessage?.classList.add('hidden');\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic validateInputs(): boolean {\n\t\tlet isValid = true;\n\t\t['issue-title', 'description', 'issue-source'].forEach(elementId => {\n\t\t\tisValid = this.validateInput(elementId) && isValid;\n\t\t});\n\n\t\tif (this.issueReporterModel.fileOnExtension()) {\n\t\t\tisValid = this.validateInput('extension-selector') && isValid;\n\t\t}\n\n\t\treturn isValid;\n\t}\n\n\tpublic async submitToGitHub(issueTitle: string, issueBody: string, gitHubDetails: { owner: string; repositoryName: string }): Promise<boolean> {\n\t\tconst url = `https://api.github.com/repos/${gitHubDetails.owner}/${gitHubDetails.repositoryName}/issues`;\n\t\tconst init = {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify({\n\t\t\t\ttitle: issueTitle,\n\t\t\t\tbody: issueBody\n\t\t\t}),\n\t\t\theaders: new Headers({\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Authorization': `Bearer ${this.data.githubAccessToken}`,\n\t\t\t\t'User-Agent': 'request'\n\t\t\t})\n\t\t};\n\n\t\tconst response = await fetch(url, init);\n\t\tif (!response.ok) {\n\t\t\tconsole.error('Invalid GitHub URL provided.');\n\t\t\treturn false;\n\t\t}\n\t\tconst result = await response.json();\n\t\tmainWindow.open(result.html_url, '_blank');\n\t\tthis.close();\n\t\treturn true;\n\t}\n\n\tpublic async createIssue(): Promise<boolean> {\n\t\tconst selectedExtension = this.issueReporterModel.getData().selectedExtension;\n\t\tconst hasUri = this.nonGitHubIssueUrl;\n\t\t// Short circuit if the extension provides a custom issue handler\n\t\tif (hasUri) {\n\t\t\tconst url = this.getExtensionBugsUrl();\n\t\t\tif (url) {\n\t\t\t\tthis.hasBeenSubmitted = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (!this.validateInputs()) {\n\t\t\t// If inputs are invalid, set focus to the first one and add listeners on them\n\t\t\t// to detect further changes\n\t\t\tconst invalidInput = this.window.document.getElementsByClassName('invalid-input');\n\t\t\tif (invalidInput.length) {\n\t\t\t\t(<HTMLInputElement>invalidInput[0]).focus();\n\t\t\t}\n\n\t\t\tthis.addEventListener('issue-title', 'input', _ => {\n\t\t\t\tthis.validateInput('issue-title');\n\t\t\t});\n\n\t\t\tthis.addEventListener('description', 'input', _ => {\n\t\t\t\tthis.validateInput('description');\n\t\t\t});\n\n\t\t\tthis.addEventListener('issue-source', 'change', _ => {\n\t\t\t\tthis.validateInput('issue-source');\n\t\t\t});\n\n\t\t\tif (this.issueReporterModel.fileOnExtension()) {\n\t\t\t\tthis.addEventListener('extension-selector', 'change', _ => {\n\t\t\t\t\tthis.validateInput('extension-selector');\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.hasBeenSubmitted = true;\n\n\t\tconst issueTitle = (<HTMLInputElement>this.getElementById('issue-title')).value;\n\t\tconst issueBody = this.issueReporterModel.serialize();\n\n\t\tlet issueUrl = this.getIssueUrl();\n\t\tif (!issueUrl) {\n\t\t\tconsole.error('No issue url found');\n\t\t\treturn false;\n\t\t}\n\n\t\tif (selectedExtension?.uri) {\n\t\t\tconst uri = URI.revive(selectedExtension.uri);\n\t\t\tissueUrl = uri.toString();\n\t\t}\n\n\t\tconst gitHubDetails = this.parseGitHubUrl(issueUrl);\n\t\tif (this.data.githubAccessToken && gitHubDetails) {\n\t\t\treturn this.submitToGitHub(issueTitle, issueBody, gitHubDetails);\n\t\t}\n\n\t\tconst baseUrl = this.getIssueUrlWithTitle((<HTMLInputElement>this.getElementById('issue-title')).value, issueUrl);\n\t\tlet url = baseUrl + `&body=${encodeURIComponent(issueBody)}`;\n\n\t\tif (url.length > MAX_URL_LENGTH) {\n\t\t\ttry {\n\t\t\t\turl = await this.writeToClipboard(baseUrl, issueBody);\n\t\t\t} catch (_) {\n\t\t\t\tconsole.error('Writing to clipboard failed');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tthis.window.open(url, '_blank');\n\n\t\treturn true;\n\t}\n\n\tpublic async writeToClipboard(baseUrl: string, issueBody: string): Promise<string> {\n\t\tconst shouldWrite = await this.issueFormService.showClipboardDialog();\n\t\tif (!shouldWrite) {\n\t\t\tthrow new CancellationError();\n\t\t}\n\n\t\treturn baseUrl + `&body=${encodeURIComponent(localize('pasteData', \"We have written the needed data into your clipboard because it was too large to send. Please paste.\"))}`;\n\t}\n\n\tpublic getIssueUrl(): string {\n\t\treturn this.issueReporterModel.fileOnExtension()\n\t\t\t? this.getExtensionGitHubUrl()\n\t\t\t: this.issueReporterModel.getData().fileOnMarketplace\n\t\t\t\t? this.product.reportMarketplaceIssueUrl!\n\t\t\t\t: this.product.reportIssueUrl!;\n\t}\n\n\tpublic parseGitHubUrl(url: string): undefined | { repositoryName: string; owner: string } {\n\t\t// Assumes a GitHub url to a particular repo, https://github.com/repositoryName/owner.\n\t\t// Repository name and owner cannot contain '/'\n\t\tconst match = /^https?:\\/\\/github\\.com\\/([^\\/]*)\\/([^\\/]*).*/.exec(url);\n\t\tif (match && match.length) {\n\t\t\treturn {\n\t\t\t\towner: match[1],\n\t\t\t\trepositoryName: match[2]\n\t\t\t};\n\t\t} else {\n\t\t\tconsole.error('No GitHub issues match');\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate getExtensionGitHubUrl(): string {\n\t\tlet repositoryUrl = '';\n\t\tconst bugsUrl = this.getExtensionBugsUrl();\n\t\tconst extensionUrl = this.getExtensionRepositoryUrl();\n\t\t// If given, try to match the extension's bug url\n\t\tif (bugsUrl && bugsUrl.match(/^https?:\\/\\/github\\.com\\/([^\\/]*)\\/([^\\/]*)\\/?(\\/issues)?$/)) {\n\t\t\t// matches exactly: https://github.com/owner/repo/issues\n\t\t\trepositoryUrl = normalizeGitHubUrl(bugsUrl);\n\t\t} else if (extensionUrl && extensionUrl.match(/^https?:\\/\\/github\\.com\\/([^\\/]*)\\/([^\\/]*)$/)) {\n\t\t\t// matches exactly: https://github.com/owner/repo\n\t\t\trepositoryUrl = normalizeGitHubUrl(extensionUrl);\n\t\t} else {\n\t\t\tthis.nonGitHubIssueUrl = true;\n\t\t\trepositoryUrl = bugsUrl || extensionUrl || '';\n\t\t}\n\n\t\treturn repositoryUrl;\n\t}\n\n\tpublic getIssueUrlWithTitle(issueTitle: string, repositoryUrl: string): string {\n\t\tif (this.issueReporterModel.fileOnExtension()) {\n\t\t\trepositoryUrl = repositoryUrl + '/issues/new';\n\t\t}\n\n\t\tconst queryStringPrefix = repositoryUrl.indexOf('?') === -1 ? '?' : '&';\n\t\treturn `${repositoryUrl}${queryStringPrefix}title=${encodeURIComponent(issueTitle)}`;\n\t}\n\n\tpublic clearExtensionData(): void {\n\t\tthis.nonGitHubIssueUrl = false;\n\t\tthis.issueReporterModel.update({ extensionData: undefined });\n\t\tthis.data.issueBody = this.data.issueBody || '';\n\t\tthis.data.data = undefined;\n\t\tthis.data.uri = undefined;\n\t}\n\n\tpublic async updateExtensionStatus(extension: IssueReporterExtensionData) {\n\t\tthis.issueReporterModel.update({ selectedExtension: extension });\n\n\t\t// uses this.configuuration.data to ensure that data is coming from `openReporter` command.\n\t\tconst template = this.data.issueBody;\n\t\tif (template) {\n\t\t\tconst descriptionTextArea = this.getElementById('description')!;\n\t\t\tconst descriptionText = (descriptionTextArea as HTMLTextAreaElement).value;\n\t\t\tif (descriptionText === '' || !descriptionText.includes(template.toString())) {\n\t\t\t\tconst fullTextArea = descriptionText + (descriptionText === '' ? '' : '\\n') + template.toString();\n\t\t\t\t(descriptionTextArea as HTMLTextAreaElement).value = fullTextArea;\n\t\t\t\tthis.issueReporterModel.update({ issueDescription: fullTextArea });\n\t\t\t}\n\t\t}\n\n\t\tconst data = this.data.data;\n\t\tif (data) {\n\t\t\tthis.issueReporterModel.update({ extensionData: data });\n\t\t\textension.data = data;\n\t\t\tconst extensionDataBlock = this.window.document.querySelector('.block-extension-data')!;\n\t\t\tshow(extensionDataBlock);\n\t\t\tthis.renderBlocks();\n\t\t}\n\n\t\tconst uri = this.data.uri;\n\t\tif (uri) {\n\t\t\textension.uri = uri;\n\t\t\tthis.updateIssueReporterUri(extension);\n\t\t}\n\n\t\tthis.validateSelectedExtension();\n\t\tconst title = (<HTMLInputElement>this.getElementById('issue-title')).value;\n\t\tthis.searchExtensionIssues(title);\n\n\t\tthis.updatePreviewButtonState();\n\t\tthis.renderBlocks();\n\t}\n\n\tpublic validateSelectedExtension(): void {\n\t\tconst extensionValidationMessage = this.getElementById('extension-selection-validation-error')!;\n\t\tconst extensionValidationNoUrlsMessage = this.getElementById('extension-selection-validation-error-no-url')!;\n\t\thide(extensionValidationMessage);\n\t\thide(extensionValidationNoUrlsMessage);\n\n\t\tconst extension = this.issueReporterModel.getData().selectedExtension;\n\t\tif (!extension) {\n\t\t\tthis.previewButton.enabled = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.loadingExtensionData) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst hasValidGitHubUrl = this.getExtensionGitHubUrl();\n\t\tif (hasValidGitHubUrl) {\n\t\t\tthis.previewButton.enabled = true;\n\t\t} else {\n\t\t\tthis.setExtensionValidationMessage();\n\t\t\tthis.previewButton.enabled = false;\n\t\t}\n\t}\n\n\tpublic setLoading(element: HTMLElement) {\n\t\t// Show loading\n\t\tthis.openReporter = true;\n\t\tthis.loadingExtensionData = true;\n\t\tthis.updatePreviewButtonState();\n\n\t\tconst extensionDataCaption = this.getElementById('extension-id')!;\n\t\thide(extensionDataCaption);\n\n\t\tconst extensionDataCaption2 = Array.from(this.window.document.querySelectorAll('.ext-parens'));\n\t\textensionDataCaption2.forEach(extensionDataCaption2 => hide(extensionDataCaption2));\n\n\t\tconst showLoading = this.getElementById('ext-loading')!;\n\t\tshow(showLoading);\n\t\twhile (showLoading.firstChild) {\n\t\t\tshowLoading.firstChild.remove();\n\t\t}\n\t\tshowLoading.append(element);\n\n\t\tthis.renderBlocks();\n\t}\n\n\tpublic removeLoading(element: HTMLElement, fromReporter: boolean = false) {\n\t\tthis.openReporter = fromReporter;\n\t\tthis.loadingExtensionData = false;\n\t\tthis.updatePreviewButtonState();\n\n\t\tconst extensionDataCaption = this.getElementById('extension-id')!;\n\t\tshow(extensionDataCaption);\n\n\t\tconst extensionDataCaption2 = Array.from(this.window.document.querySelectorAll('.ext-parens'));\n\t\textensionDataCaption2.forEach(extensionDataCaption2 => show(extensionDataCaption2));\n\n\t\tconst hideLoading = this.getElementById('ext-loading')!;\n\t\thide(hideLoading);\n\t\tif (hideLoading.firstChild) {\n\t\t\telement.remove();\n\t\t}\n\t\tthis.renderBlocks();\n\t}\n\n\tprivate setExtensionValidationMessage(): void {\n\t\tconst extensionValidationMessage = this.getElementById('extension-selection-validation-error')!;\n\t\tconst extensionValidationNoUrlsMessage = this.getElementById('extension-selection-validation-error-no-url')!;\n\t\tconst bugsUrl = this.getExtensionBugsUrl();\n\t\tif (bugsUrl) {\n\t\t\tshow(extensionValidationMessage);\n\t\t\tconst link = this.getElementById('extensionBugsLink')!;\n\t\t\tlink.textContent = bugsUrl;\n\t\t\treturn;\n\t\t}\n\n\t\tconst extensionUrl = this.getExtensionRepositoryUrl();\n\t\tif (extensionUrl) {\n\t\t\tshow(extensionValidationMessage);\n\t\t\tconst link = this.getElementById('extensionBugsLink');\n\t\t\tlink!.textContent = extensionUrl;\n\t\t\treturn;\n\t\t}\n\n\t\tshow(extensionValidationNoUrlsMessage);\n\t}\n\n\tprivate updateProcessInfo(state: IssueReporterModelData) {\n\t\tconst target = this.window.document.querySelector('.block-process .block-info') as HTMLElement;\n\t\tif (target) {\n\t\t\treset(target, $('code', undefined, state.processInfo ?? ''));\n\t\t}\n\t}\n\n\tprivate updateWorkspaceInfo(state: IssueReporterModelData) {\n\t\tthis.window.document.querySelector('.block-workspace .block-info code')!.textContent = '\\n' + state.workspaceInfo;\n\t}\n\n\tpublic updateExtensionTable(extensions: IssueReporterExtensionData[], numThemeExtensions: number): void {\n\t\tconst target = this.window.document.querySelector<HTMLElement>('.block-extensions .block-info');\n\t\tif (target) {\n\t\t\tif (this.disableExtensions) {\n\t\t\t\treset(target, localize('disabledExtensions', \"Extensions are disabled\"));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst themeExclusionStr = numThemeExtensions ? `\\n(${numThemeExtensions} theme extensions excluded)` : '';\n\t\t\textensions = extensions || [];\n\n\t\t\tif (!extensions.length) {\n\t\t\t\ttarget.innerText = 'Extensions: none' + themeExclusionStr;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treset(target, this.getExtensionTableHtml(extensions), document.createTextNode(themeExclusionStr));\n\t\t}\n\t}\n\n\tprivate getExtensionTableHtml(extensions: IssueReporterExtensionData[]): HTMLTableElement {\n\t\treturn $('table', undefined,\n\t\t\t$('tr', undefined,\n\t\t\t\t$('th', undefined, 'Extension'),\n\t\t\t\t$('th', undefined, 'Author (truncated)' as string),\n\t\t\t\t$('th', undefined, 'Version')\n\t\t\t),\n\t\t\t...extensions.map(extension => $('tr', undefined,\n\t\t\t\t$('td', undefined, extension.name),\n\t\t\t\t$('td', undefined, extension.publisher?.substr(0, 3) ?? 'N/A'),\n\t\t\t\t$('td', undefined, extension.version)\n\t\t\t))\n\t\t);\n\t}\n\n\tprivate openLink(event: MouseEvent): void {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t\t// Exclude right click\n\t\tif (event.which < 3) {\n\t\t\twindowOpenNoOpener((<HTMLAnchorElement>event.target).href);\n\t\t}\n\t}\n\n\tpublic getElementById<T extends HTMLElement = HTMLElement>(elementId: string): T | undefined {\n\t\tconst element = this.window.document.getElementById(elementId) as T | undefined;\n\t\tif (element) {\n\t\t\treturn element;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tpublic addEventListener(elementId: string, eventType: string, handler: (event: Event) => void): void {\n\t\tconst element = this.getElementById(elementId);\n\t\telement?.addEventListener(eventType, handler);\n\t}\n}\n\n// helper functions\n\nexport function hide(el: Element | undefined | null) {\n\tel?.classList.add('hidden');\n}\nexport function show(el: Element | undefined | null) {\n\tel?.classList.remove('hidden');\n}\n"],
  "mappings": "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",
  "names": ["IssueSource", "extensions", "selectedExtension", "issueType", "url", "extensionDataCaption2"]
}
