var x=Object.defineProperty;var E=Object.getOwnPropertyDescriptor;var I=(e,r,t,i)=>{for(var o=i>1?void 0:i?E(r,t):r,u=e.length-1,a;u>=0;u--)(a=e[u])&&(o=(i?a(r,t,o):a(o))||o);return i&&o&&x(r,t,o),o},c=(e,r)=>(t,i)=>r(t,i,e);import{getZoomLevel as y}from"../../../../base/browser/browser.js";import*as b from"../../../../base/browser/dom.js";import{mainWindow as k}from"../../../../base/browser/window.js";import{userAgent as U}from"../../../../base/common/platform.js";import{IConfigurationService as w}from"../../../../platform/configuration/common/configuration.js";import{IExtensionManagementService as B}from"../../../../platform/extensionManagement/common/extensionManagement.js";import{ExtensionType as C}from"../../../../platform/extensions/common/extensions.js";import{InstantiationType as R,registerSingleton as D}from"../../../../platform/instantiation/common/extensions.js";import{normalizeGitHubUrl as g}from"../../../../platform/issue/common/issueReporterUtil.js";import{IProductService as T}from"../../../../platform/product/common/productService.js";import{buttonBackground as A,buttonForeground as F,buttonHoverBackground as $,foreground as W,inputActiveOptionBorder as L,inputBackground as H,inputBorder as M,inputForeground as N,inputValidationErrorBackground as O,inputValidationErrorBorder as P,inputValidationErrorForeground as G,scrollbarSliderActiveBackground as V,scrollbarSliderBackground as j,scrollbarSliderHoverBackground as _,textLinkActiveForeground as z,textLinkForeground as K}from"../../../../platform/theme/common/colorRegistry.js";import{IThemeService as Z}from"../../../../platform/theme/common/themeService.js";import{IWorkspaceTrustManagementService as q}from"../../../../platform/workspace/common/workspaceTrust.js";import{SIDE_BAR_BACKGROUND as J}from"../../../common/theme.js";import{IWorkbenchAssignmentService as Q}from"../../../services/assignment/common/assignmentService.js";import{IAuthenticationService as X}from"../../../services/authentication/common/authentication.js";import{IWorkbenchExtensionEnablementService as Y}from"../../../services/extensionManagement/common/extensionManagement.js";import{IExtensionService as ee}from"../../../services/extensions/common/extensions.js";import{IIntegrityService as re}from"../../../services/integrity/common/integrity.js";import{IIssueFormService as te,IWorkbenchIssueService as ie}from"../common/issue.js";let l=class{constructor(r,t,i,o,u,a,v,d,m,p,s){this.extensionService=r;this.productService=t;this.issueFormService=i;this.themeService=o;this.experimentService=u;this.workspaceTrustManagementService=a;this.integrityService=v;this.extensionManagementService=d;this.extensionEnablementService=m;this.authenticationService=p;this.configurationService=s}async openReporter(r){if(!this.configurationService.getValue("issueReporter.experimental.webReporter")){const t=r.extensionId;if(!t){if(this.productService.reportIssueUrl){const a=this.getIssueUriFromStaticContent(this.productService.reportIssueUrl);b.windowOpenNoOpener(a);return}throw new Error(`No issue reporting URL configured for ${this.productService.nameLong}.`)}const i=this.extensionService.extensions.filter(a=>a.identifier.value===r.extensionId)[0],o=this.getExtensionGitHubUrl(i);if(!o)throw new Error(`Unable to find issue reporting url for ${t}`);const u=this.getIssueUriFromStaticContent(`${o}/issues/new`,i);b.windowOpenNoOpener(u)}if(this.productService.reportIssueUrl){const t=this.themeService.getColorTheme(),i=await this.experimentService.getCurrentExperiments();let o="";try{o=(await this.authenticationService.getSessions("github")).filter(p=>p.scopes.includes("repo"))[0]?.accessToken}catch{}let u=!1;try{u=!(await this.integrityService.isPure()).isPure}catch{}const a=[];try{const m=(await this.extensionManagementService.getInstalled()).filter(p=>this.extensionEnablementService.isEnabled(p)||r.extensionId&&p.identifier.id===r.extensionId);a.push(...m.map(p=>{const{manifest:s}=p,S=s.contributes?Object.keys(s.contributes):[],f=!s.main&&!s.browser&&S.length===1&&S[0]==="themes",h=p.type===C.System;return{name:s.name,publisher:s.publisher,version:s.version,repositoryUrl:s.repository&&s.repository.url,bugsUrl:s.bugs&&s.bugs.url,displayName:s.displayName,id:p.identifier.id,data:r.data,uri:r.uri,isTheme:f,isBuiltin:h,extensionData:"Extensions data loading"}}))}catch(d){a.push({name:"Workbench Issue Service",publisher:"Unknown",version:"Unknown",repositoryUrl:void 0,bugsUrl:void 0,extensionData:`Extensions not loaded: ${d}`,displayName:`Extensions not loaded: ${d}`,id:"workbench.issue",isTheme:!1,isBuiltin:!0})}const v=Object.assign({styles:oe(t),zoomLevel:y(k),enabledExtensions:a,experiments:i?.join(`
`),restrictedMode:!this.workspaceTrustManagementService.isWorkspaceTrusted(),isUnsupported:u,githubAccessToken:o},r);return this.issueFormService.openReporter(v)}throw new Error(`No issue reporting URL configured for ${this.productService.nameLong}.`)}getExtensionGitHubUrl(r){if(r.isBuiltin&&this.productService.reportIssueUrl)return g(this.productService.reportIssueUrl);let t="";const i=r?.bugs?.url,o=r?.repository?.url;return i&&i.match(/^https?:\/\/github\.com\/(.*)/)?t=g(i):o&&o.match(/^https?:\/\/github\.com\/(.*)/)&&(t=g(o)),t}getIssueUriFromStaticContent(r,t){const i=`ADD ISSUE DESCRIPTION HERE

Version: ${this.productService.version}
Commit: ${this.productService.commit??"unknown"}
User Agent: ${U??"unknown"}
Embedder: ${this.productService.embedderIdentifier??"unknown"}
${t?.version?`
Extension version: ${t.version}`:""}
<!-- generated by web issue reporter -->`;return`${r}?body=${encodeURIComponent(i)}&labels=web`}};l=I([c(0,ee),c(1,T),c(2,te),c(3,Z),c(4,Q),c(5,q),c(6,re),c(7,B),c(8,Y),c(9,X),c(10,w)],l);function oe(e){return{backgroundColor:n(e,J),color:n(e,W),textLinkColor:n(e,K),textLinkActiveForeground:n(e,z),inputBackground:n(e,H),inputForeground:n(e,N),inputBorder:n(e,M),inputActiveBorder:n(e,L),inputErrorBorder:n(e,P),inputErrorBackground:n(e,O),inputErrorForeground:n(e,G),buttonBackground:n(e,A),buttonForeground:n(e,F),buttonHoverBackground:n(e,$),sliderActiveColor:n(e,V),sliderBackgroundColor:n(e,j),sliderHoverColor:n(e,_)}}function n(e,r){const t=e.getColor(r);return t?t.toString():void 0}D(ie,l,R.Delayed);export{l as BrowserIssueService,oe as getIssueReporterStyles};
