{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/issue/browser/issueQuickAccess.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { matchesFuzzy } from \"../../../../base/common/filters.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\tIMenuService,\n\tMenuId,\n\ttype MenuItemAction,\n\ttype SubmenuItemAction,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport type { IExtensionDescription } from \"../../../../platform/extensions/common/extensions.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport {\n\ttype FastAndSlowPicks,\n\ttype IPickerQuickAccessItem,\n\tPickerQuickAccessProvider,\n\ttype Picks,\n\tTriggerAction,\n} from \"../../../../platform/quickinput/browser/pickerQuickAccess.js\";\nimport type { IQuickPickSeparator } from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { IExtensionService } from \"../../../services/extensions/common/extensions.js\";\nimport { IssueSource } from \"../common/issue.js\";\n\nexport class IssueQuickAccess extends PickerQuickAccessProvider<IPickerQuickAccessItem> {\n\tstatic PREFIX = \"issue \";\n\n\tconstructor(\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IContextKeyService\n\t\tprivate readonly contextKeyService: IContextKeyService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IProductService private readonly productService: IProductService,\n\t) {\n\t\tsuper(IssueQuickAccess.PREFIX, { canAcceptInBackground: true });\n\t}\n\n\tprotected override _getPicks(\n\t\tfilter: string,\n\t):\n\t\t| Picks<IPickerQuickAccessItem>\n\t\t| FastAndSlowPicks<IPickerQuickAccessItem>\n\t\t| Promise<\n\t\t\t\t| Picks<IPickerQuickAccessItem>\n\t\t\t\t| FastAndSlowPicks<IPickerQuickAccessItem>\n\t\t  >\n\t\t| null {\n\t\tconst issuePicksConst = new Array<\n\t\t\tIPickerQuickAccessItem | IQuickPickSeparator\n\t\t>();\n\t\tconst issuePicksParts = new Array<\n\t\t\tIPickerQuickAccessItem | IQuickPickSeparator\n\t\t>();\n\t\tconst extensionIdSet = new Set<string>();\n\n\t\t// Add default items\n\t\tconst productLabel = this.productService.nameLong;\n\t\tconst marketPlaceLabel = localize(\n\t\t\t\"reportExtensionMarketplace\",\n\t\t\t\"Extension Marketplace\",\n\t\t);\n\t\tconst productFilter = matchesFuzzy(filter, productLabel, true);\n\t\tconst marketPlaceFilter = matchesFuzzy(filter, marketPlaceLabel, true);\n\n\t\t// Add product pick if product filter matches\n\t\tif (productFilter) {\n\t\t\tissuePicksConst.push({\n\t\t\t\tlabel: productLabel,\n\t\t\t\tariaLabel: productLabel,\n\t\t\t\thighlights: { label: productFilter },\n\t\t\t\taccept: () =>\n\t\t\t\t\tthis.commandService.executeCommand(\n\t\t\t\t\t\t\"workbench.action.openIssueReporter\",\n\t\t\t\t\t\t{ issueSource: IssueSource.VSCode },\n\t\t\t\t\t),\n\t\t\t});\n\t\t}\n\n\t\t// Add marketplace pick if marketplace filter matches\n\t\tif (marketPlaceFilter) {\n\t\t\tissuePicksConst.push({\n\t\t\t\tlabel: marketPlaceLabel,\n\t\t\t\tariaLabel: marketPlaceLabel,\n\t\t\t\thighlights: { label: marketPlaceFilter },\n\t\t\t\taccept: () =>\n\t\t\t\t\tthis.commandService.executeCommand(\n\t\t\t\t\t\t\"workbench.action.openIssueReporter\",\n\t\t\t\t\t\t{ issueSource: IssueSource.Marketplace },\n\t\t\t\t\t),\n\t\t\t});\n\t\t}\n\n\t\tissuePicksConst.push({\n\t\t\ttype: \"separator\",\n\t\t\tlabel: localize(\"extensions\", \"Extensions\"),\n\t\t});\n\n\t\t// gets menu actions from contributed\n\t\tconst actions = this.menuService\n\t\t\t.getMenuActions(MenuId.IssueReporter, this.contextKeyService, {\n\t\t\t\trenderShortTitle: true,\n\t\t\t})\n\t\t\t.flatMap((entry) => entry[1]);\n\n\t\t// create picks from contributed menu\n\t\tactions.forEach((action) => {\n\t\t\tif (\"source\" in action.item && action.item.source) {\n\t\t\t\textensionIdSet.add(action.item.source.id);\n\t\t\t}\n\n\t\t\tconst pick = this._createPick(filter, action);\n\t\t\tif (pick) {\n\t\t\t\tissuePicksParts.push(pick);\n\t\t\t}\n\t\t});\n\n\t\t// create picks from extensions\n\t\tthis.extensionService.extensions.forEach((extension) => {\n\t\t\tif (!extension.isBuiltin) {\n\t\t\t\tconst pick = this._createPick(filter, undefined, extension);\n\t\t\t\tconst id = extension.identifier.value;\n\t\t\t\tif (pick && !extensionIdSet.has(id)) {\n\t\t\t\t\tissuePicksParts.push(pick);\n\t\t\t\t}\n\t\t\t\textensionIdSet.add(id);\n\t\t\t}\n\t\t});\n\n\t\tissuePicksParts.sort((a, b) => {\n\t\t\tconst aLabel = a.label ?? \"\";\n\t\t\tconst bLabel = b.label ?? \"\";\n\t\t\treturn aLabel.localeCompare(bLabel);\n\t\t});\n\n\t\treturn [...issuePicksConst, ...issuePicksParts];\n\t}\n\n\tprivate _createPick(\n\t\tfilter: string,\n\t\taction?: MenuItemAction | SubmenuItemAction | undefined,\n\t\textension?: IExtensionDescription,\n\t): IPickerQuickAccessItem | undefined {\n\t\tconst buttons = [\n\t\t\t{\n\t\t\t\ticonClass: ThemeIcon.asClassName(Codicon.info),\n\t\t\t\ttooltip: localize(\n\t\t\t\t\t\"contributedIssuePage\",\n\t\t\t\t\t\"Open Extension Page\",\n\t\t\t\t),\n\t\t\t},\n\t\t];\n\n\t\tlet label: string;\n\t\tlet trigger: () => TriggerAction;\n\t\tlet accept: () => void;\n\t\tif (action && \"source\" in action.item && action.item.source) {\n\t\t\tlabel = action.item.source?.title;\n\t\t\ttrigger = () => {\n\t\t\t\tif (\"source\" in action.item && action.item.source) {\n\t\t\t\t\tthis.commandService.executeCommand(\n\t\t\t\t\t\t\"extension.open\",\n\t\t\t\t\t\taction.item.source.id,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn TriggerAction.CLOSE_PICKER;\n\t\t\t};\n\t\t\taccept = () => {\n\t\t\t\taction.run();\n\t\t\t};\n\t\t} else if (extension) {\n\t\t\tlabel = extension.displayName ?? extension.name;\n\t\t\ttrigger = () => {\n\t\t\t\tthis.commandService.executeCommand(\n\t\t\t\t\t\"extension.open\",\n\t\t\t\t\textension.identifier.value,\n\t\t\t\t);\n\t\t\t\treturn TriggerAction.CLOSE_PICKER;\n\t\t\t};\n\t\t\taccept = () => {\n\t\t\t\tthis.commandService.executeCommand(\n\t\t\t\t\t\"workbench.action.openIssueReporter\",\n\t\t\t\t\textension.identifier.value,\n\t\t\t\t);\n\t\t\t};\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst highlights = matchesFuzzy(filter, label, true);\n\t\tif (highlights) {\n\t\t\treturn {\n\t\t\t\tlabel,\n\t\t\t\thighlights: { label: highlights },\n\t\t\t\tbuttons,\n\t\t\t\ttrigger,\n\t\t\t\taccept,\n\t\t\t};\n\t\t}\n\t\treturn undefined;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
