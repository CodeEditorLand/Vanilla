var m=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var c=(i,t,r,e)=>{for(var s=e>1?void 0:e?h(t,r):t,o=i.length-1,n;o>=0;o--)(n=i[o])&&(s=(e?n(t,r,s):n(s))||s);return e&&s&&m(t,r,s),s},u=(i,t)=>(r,e)=>t(r,e,i);import"../../../../../vs/base/common/product.js";import{localize as v}from"../../../../../vs/nls.js";import{IThemeService as I}from"../../../../../vs/platform/theme/common/themeService.js";import{BaseIssueReporterService as f}from"../../../../../vs/workbench/contrib/issue/browser/baseIssueReporterService.js";import{IIssueFormService as g}from"../../../../../vs/workbench/contrib/issue/common/issue.js";let a=class extends f{constructor(t,r,e,s,o,n,l){super(t,r,e,s,o,!0,n,l);const p=this.window.document.querySelector(".block-system .block-info"),d=this.window.navigator.userAgent;d&&(p?.appendChild(this.window.document.createTextNode(d)),this.receivedSystemInfo=!0,this.issueReporterModel.update({systemInfoWeb:d})),this.setEventHandlers()}setEventHandlers(){super.setEventHandlers(),this.addEventListener("issue-type","change",t=>{const r=parseInt(t.target.value);this.issueReporterModel.update({issueType:r});const e=this.getElementById("issue-title");e&&(e.placeholder=v("undefinedPlaceholder","Please enter a title")),this.updatePreviewButtonState(),this.setSourceOptions(),this.render()})}};a=c([u(5,g),u(6,I)],a);export{a as IssueWebReporter};
