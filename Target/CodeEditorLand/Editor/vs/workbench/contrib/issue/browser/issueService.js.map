{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/issue/browser/issueService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getZoomLevel } from '../../../../base/browser/browser.js';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { mainWindow } from '../../../../base/browser/window.js';\nimport { userAgent } from '../../../../base/common/platform.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IExtensionManagementService } from '../../../../platform/extensionManagement/common/extensionManagement.js';\nimport { ExtensionType, IExtensionDescription } from '../../../../platform/extensions/common/extensions.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { normalizeGitHubUrl } from '../../../../platform/issue/common/issueReporterUtil.js';\nimport { IProductService } from '../../../../platform/product/common/productService.js';\nimport { buttonBackground, buttonForeground, buttonHoverBackground, foreground, inputActiveOptionBorder, inputBackground, inputBorder, inputForeground, inputValidationErrorBackground, inputValidationErrorBorder, inputValidationErrorForeground, scrollbarSliderActiveBackground, scrollbarSliderBackground, scrollbarSliderHoverBackground, textLinkActiveForeground, textLinkForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { IColorTheme, IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { IWorkspaceTrustManagementService } from '../../../../platform/workspace/common/workspaceTrust.js';\nimport { SIDE_BAR_BACKGROUND } from '../../../common/theme.js';\nimport { IIssueFormService, IssueReporterData, IssueReporterExtensionData, IssueReporterStyles, IWorkbenchIssueService } from '../common/issue.js';\nimport { IWorkbenchAssignmentService } from '../../../services/assignment/common/assignmentService.js';\nimport { IAuthenticationService } from '../../../services/authentication/common/authentication.js';\nimport { IWorkbenchExtensionEnablementService } from '../../../services/extensionManagement/common/extensionManagement.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { IIntegrityService } from '../../../services/integrity/common/integrity.js';\n\n\nexport class BrowserIssueService implements IWorkbenchIssueService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IIssueFormService private readonly issueFormService: IIssueFormService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IWorkbenchAssignmentService private readonly experimentService: IWorkbenchAssignmentService,\n\t\t@IWorkspaceTrustManagementService private readonly workspaceTrustManagementService: IWorkspaceTrustManagementService,\n\t\t@IIntegrityService private readonly integrityService: IIntegrityService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IWorkbenchExtensionEnablementService private readonly extensionEnablementService: IWorkbenchExtensionEnablementService,\n\t\t@IAuthenticationService private readonly authenticationService: IAuthenticationService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) { }\n\n\tasync openReporter(options: Partial<IssueReporterData>): Promise<void> {\n\t\t// If web reporter setting is false open the old GitHub issue reporter\n\t\tif (!this.configurationService.getValue<boolean>('issueReporter.experimental.webReporter')) {\n\t\t\tconst extensionId = options.extensionId;\n\t\t\t// If we don't have a extensionId, treat this as a Core issue\n\t\t\tif (!extensionId) {\n\t\t\t\tif (this.productService.reportIssueUrl) {\n\t\t\t\t\tconst uri = this.getIssueUriFromStaticContent(this.productService.reportIssueUrl);\n\t\t\t\t\tdom.windowOpenNoOpener(uri);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthrow new Error(`No issue reporting URL configured for ${this.productService.nameLong}.`);\n\t\t\t}\n\n\t\t\tconst selectedExtension = this.extensionService.extensions.filter(ext => ext.identifier.value === options.extensionId)[0];\n\t\t\tconst extensionGitHubUrl = this.getExtensionGitHubUrl(selectedExtension);\n\t\t\tif (!extensionGitHubUrl) {\n\t\t\t\tthrow new Error(`Unable to find issue reporting url for ${extensionId}`);\n\t\t\t}\n\t\t\tconst uri = this.getIssueUriFromStaticContent(`${extensionGitHubUrl}/issues/new`, selectedExtension);\n\t\t\tdom.windowOpenNoOpener(uri);\n\t\t}\n\n\t\tif (this.productService.reportIssueUrl) {\n\t\t\tconst theme = this.themeService.getColorTheme();\n\t\t\tconst experiments = await this.experimentService.getCurrentExperiments();\n\n\t\t\tlet githubAccessToken = '';\n\t\t\ttry {\n\t\t\t\tconst githubSessions = await this.authenticationService.getSessions('github');\n\t\t\t\tconst potentialSessions = githubSessions.filter(session => session.scopes.includes('repo'));\n\t\t\t\tgithubAccessToken = potentialSessions[0]?.accessToken;\n\t\t\t} catch (e) {\n\t\t\t\t// Ignore\n\t\t\t}\n\n\t\t\t// air on the side of caution and have false be the default\n\t\t\tlet isUnsupported = false;\n\t\t\ttry {\n\t\t\t\tisUnsupported = !(await this.integrityService.isPure()).isPure;\n\t\t\t} catch (e) {\n\t\t\t\t// Ignore\n\t\t\t}\n\n\t\t\tconst extensionData: IssueReporterExtensionData[] = [];\n\t\t\ttry {\n\t\t\t\tconst extensions = await this.extensionManagementService.getInstalled();\n\t\t\t\tconst enabledExtensions = extensions.filter(extension => this.extensionEnablementService.isEnabled(extension) || (options.extensionId && extension.identifier.id === options.extensionId));\n\t\t\t\textensionData.push(...enabledExtensions.map((extension): IssueReporterExtensionData => {\n\t\t\t\t\tconst { manifest } = extension;\n\t\t\t\t\tconst manifestKeys = manifest.contributes ? Object.keys(manifest.contributes) : [];\n\t\t\t\t\tconst isTheme = !manifest.main && !manifest.browser && manifestKeys.length === 1 && manifestKeys[0] === 'themes';\n\t\t\t\t\tconst isBuiltin = extension.type === ExtensionType.System;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: manifest.name,\n\t\t\t\t\t\tpublisher: manifest.publisher,\n\t\t\t\t\t\tversion: manifest.version,\n\t\t\t\t\t\trepositoryUrl: manifest.repository && manifest.repository.url,\n\t\t\t\t\t\tbugsUrl: manifest.bugs && manifest.bugs.url,\n\t\t\t\t\t\tdisplayName: manifest.displayName,\n\t\t\t\t\t\tid: extension.identifier.id,\n\t\t\t\t\t\tdata: options.data,\n\t\t\t\t\t\turi: options.uri,\n\t\t\t\t\t\tisTheme,\n\t\t\t\t\t\tisBuiltin,\n\t\t\t\t\t\textensionData: 'Extensions data loading',\n\t\t\t\t\t};\n\t\t\t\t}));\n\t\t\t} catch (e) {\n\t\t\t\textensionData.push({\n\t\t\t\t\tname: 'Workbench Issue Service',\n\t\t\t\t\tpublisher: 'Unknown',\n\t\t\t\t\tversion: 'Unknown',\n\t\t\t\t\trepositoryUrl: undefined,\n\t\t\t\t\tbugsUrl: undefined,\n\t\t\t\t\textensionData: `Extensions not loaded: ${e}`,\n\t\t\t\t\tdisplayName: `Extensions not loaded: ${e}`,\n\t\t\t\t\tid: 'workbench.issue',\n\t\t\t\t\tisTheme: false,\n\t\t\t\t\tisBuiltin: true\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst issueReporterData: IssueReporterData = Object.assign({\n\t\t\t\tstyles: getIssueReporterStyles(theme),\n\t\t\t\tzoomLevel: getZoomLevel(mainWindow),\n\t\t\t\tenabledExtensions: extensionData,\n\t\t\t\texperiments: experiments?.join('\\n'),\n\t\t\t\trestrictedMode: !this.workspaceTrustManagementService.isWorkspaceTrusted(),\n\t\t\t\tisUnsupported,\n\t\t\t\tgithubAccessToken\n\t\t\t}, options);\n\n\t\t\treturn this.issueFormService.openReporter(issueReporterData);\n\t\t}\n\t\tthrow new Error(`No issue reporting URL configured for ${this.productService.nameLong}.`);\n\n\t}\n\n\tprivate getExtensionGitHubUrl(extension: IExtensionDescription): string {\n\t\tif (extension.isBuiltin && this.productService.reportIssueUrl) {\n\t\t\treturn normalizeGitHubUrl(this.productService.reportIssueUrl);\n\t\t}\n\n\t\tlet repositoryUrl = '';\n\n\t\tconst bugsUrl = extension?.bugs?.url;\n\t\tconst extensionUrl = extension?.repository?.url;\n\n\t\t// If given, try to match the extension's bug url\n\t\tif (bugsUrl && bugsUrl.match(/^https?:\\/\\/github\\.com\\/(.*)/)) {\n\t\t\trepositoryUrl = normalizeGitHubUrl(bugsUrl);\n\t\t} else if (extensionUrl && extensionUrl.match(/^https?:\\/\\/github\\.com\\/(.*)/)) {\n\t\t\trepositoryUrl = normalizeGitHubUrl(extensionUrl);\n\t\t}\n\n\t\treturn repositoryUrl;\n\t}\n\n\tprivate getIssueUriFromStaticContent(baseUri: string, extension?: IExtensionDescription): string {\n\t\tconst issueDescription = `ADD ISSUE DESCRIPTION HERE\n\nVersion: ${this.productService.version}\nCommit: ${this.productService.commit ?? 'unknown'}\nUser Agent: ${userAgent ?? 'unknown'}\nEmbedder: ${this.productService.embedderIdentifier ?? 'unknown'}\n${extension?.version ? `\\nExtension version: ${extension.version}` : ''}\n<!-- generated by web issue reporter -->`;\n\n\t\treturn `${baseUri}?body=${encodeURIComponent(issueDescription)}&labels=web`;\n\t}\n}\n\nexport function getIssueReporterStyles(theme: IColorTheme): IssueReporterStyles {\n\treturn {\n\t\tbackgroundColor: getColor(theme, SIDE_BAR_BACKGROUND),\n\t\tcolor: getColor(theme, foreground),\n\t\ttextLinkColor: getColor(theme, textLinkForeground),\n\t\ttextLinkActiveForeground: getColor(theme, textLinkActiveForeground),\n\t\tinputBackground: getColor(theme, inputBackground),\n\t\tinputForeground: getColor(theme, inputForeground),\n\t\tinputBorder: getColor(theme, inputBorder),\n\t\tinputActiveBorder: getColor(theme, inputActiveOptionBorder),\n\t\tinputErrorBorder: getColor(theme, inputValidationErrorBorder),\n\t\tinputErrorBackground: getColor(theme, inputValidationErrorBackground),\n\t\tinputErrorForeground: getColor(theme, inputValidationErrorForeground),\n\t\tbuttonBackground: getColor(theme, buttonBackground),\n\t\tbuttonForeground: getColor(theme, buttonForeground),\n\t\tbuttonHoverBackground: getColor(theme, buttonHoverBackground),\n\t\tsliderActiveColor: getColor(theme, scrollbarSliderActiveBackground),\n\t\tsliderBackgroundColor: getColor(theme, scrollbarSliderBackground),\n\t\tsliderHoverColor: getColor(theme, scrollbarSliderHoverBackground),\n\t};\n}\n\nfunction getColor(theme: IColorTheme, key: string): string | undefined {\n\tconst color = theme.getColor(key);\n\treturn color ? color.toString() : undefined;\n}\n\nregisterSingleton(IWorkbenchIssueService, BrowserIssueService, InstantiationType.Delayed);\n"],
  "mappings": "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",
  "names": ["uri"]
}
