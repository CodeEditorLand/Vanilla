{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/issue/browser/issueReporterService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport type { IProductConfiguration } from \"../../../../base/common/product.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport { IIssueFormService, type IssueReporterData } from \"../common/issue.js\";\nimport { BaseIssueReporterService } from \"./baseIssueReporterService.js\";\n\n// GitHub has let us know that we could up our limit here to 8k. We chose 7500 to play it safe.\n// ref https://github.com/microsoft/vscode/issues/159191\n\nexport class IssueWebReporter extends BaseIssueReporterService {\n\tconstructor(\n\t\tdisableExtensions: boolean,\n\t\tdata: IssueReporterData,\n\t\tos: {\n\t\t\ttype: string;\n\t\t\tarch: string;\n\t\t\trelease: string;\n\t\t},\n\t\tproduct: IProductConfiguration,\n\t\twindow: Window,\n\t\t@IIssueFormService issueFormService: IIssueFormService,\n\t\t@IThemeService themeService: IThemeService,\n\t) {\n\t\tsuper(\n\t\t\tdisableExtensions,\n\t\t\tdata,\n\t\t\tos,\n\t\t\tproduct,\n\t\t\twindow,\n\t\t\ttrue,\n\t\t\tissueFormService,\n\t\t\tthemeService,\n\t\t);\n\n\t\tconst target = this.window.document.querySelector<HTMLElement>(\n\t\t\t\".block-system .block-info\",\n\t\t);\n\n\t\tconst webInfo = this.window.navigator.userAgent;\n\t\tif (webInfo) {\n\t\t\ttarget?.appendChild(this.window.document.createTextNode(webInfo));\n\t\t\tthis.receivedSystemInfo = true;\n\t\t\tthis.issueReporterModel.update({ systemInfoWeb: webInfo });\n\t\t}\n\n\t\tthis.setEventHandlers();\n\t}\n\n\tpublic override setEventHandlers(): void {\n\t\tsuper.setEventHandlers();\n\n\t\tthis.addEventListener(\"issue-type\", \"change\", (event: Event) => {\n\t\t\tconst issueType = Number.parseInt(\n\t\t\t\t(<HTMLInputElement>event.target).value,\n\t\t\t);\n\t\t\tthis.issueReporterModel.update({ issueType: issueType });\n\n\t\t\t// Resets placeholder\n\t\t\tconst descriptionTextArea = <HTMLInputElement>(\n\t\t\t\tthis.getElementById(\"issue-title\")\n\t\t\t);\n\t\t\tif (descriptionTextArea) {\n\t\t\t\tdescriptionTextArea.placeholder = localize(\n\t\t\t\t\t\"undefinedPlaceholder\",\n\t\t\t\t\t\"Please enter a title\",\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.updatePreviewButtonState();\n\t\t\tthis.setSourceOptions();\n\t\t\tthis.render();\n\t\t});\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,gBAAgB;AACzB,SAAS,qBAAqB;AAC9B,SAAS,yBAAiD;AAC1D,SAAS,gCAAgC;AAKlC,IAAM,mBAAN,cAA+B,yBAAyB;AAAA,EAb/D,OAa+D;AAAA;AAAA;AAAA,EAC9D,YACC,mBACA,MACA,IAKA,SACA,QACmB,kBACJ,cACd;AACD;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAEA,UAAM,SAAS,KAAK,OAAO,SAAS;AAAA,MACnC;AAAA,IACD;AAEA,UAAM,UAAU,KAAK,OAAO,UAAU;AACtC,QAAI,SAAS;AACZ,cAAQ,YAAY,KAAK,OAAO,SAAS,eAAe,OAAO,CAAC;AAChE,WAAK,qBAAqB;AAC1B,WAAK,mBAAmB,OAAO,EAAE,eAAe,QAAQ,CAAC;AAAA,IAC1D;AAEA,SAAK,iBAAiB;AAAA,EACvB;AAAA,EAEgB,mBAAyB;AACxC,UAAM,iBAAiB;AAEvB,SAAK,iBAAiB,cAAc,UAAU,CAAC,UAAiB;AAC/D,YAAM,YAAY,OAAO;AAAA,QACL,MAAM,OAAQ;AAAA,MAClC;AACA,WAAK,mBAAmB,OAAO,EAAE,UAAqB,CAAC;AAGvD,YAAM,sBACL,KAAK,eAAe,aAAa;AAElC,UAAI,qBAAqB;AACxB,4BAAoB,cAAc;AAAA,UACjC;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAEA,WAAK,yBAAyB;AAC9B,WAAK,iBAAiB;AACtB,WAAK,OAAO;AAAA,IACb,CAAC;AAAA,EACF;AACD;AAhEa,mBAAN;AAAA,EAWJ;AAAA,EACA;AAAA,GAZU;",
  "names": []
}
