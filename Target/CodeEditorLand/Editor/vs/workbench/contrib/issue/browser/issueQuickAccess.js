var g=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var P=(d,n,i,e)=>{for(var t=e>1?void 0:e?b(n,i):n,o=d.length-1,r;o>=0;o--)(r=d[o])&&(t=(e?r(n,i,t):r(t))||t);return e&&t&&g(n,i,t),t},u=(d,n)=>(i,e)=>n(i,e,d);import{Codicon as x}from"../../../../base/common/codicons.js";import{matchesFuzzy as k}from"../../../../base/common/filters.js";import{ThemeIcon as y}from"../../../../base/common/themables.js";import{localize as S}from"../../../../nls.js";import{IMenuService as A,MenuId as C}from"../../../../platform/actions/common/actions.js";import{ICommandService as E}from"../../../../platform/commands/common/commands.js";import{IContextKeyService as M}from"../../../../platform/contextkey/common/contextkey.js";import{IProductService as w}from"../../../../platform/product/common/productService.js";import{PickerQuickAccessProvider as L,TriggerAction as h}from"../../../../platform/quickinput/browser/pickerQuickAccess.js";import{IExtensionService as Q}from"../../../services/extensions/common/extensions.js";import{IssueSource as v}from"../common/issue.js";let p=class extends L{constructor(i,e,t,o,r){super(p.PREFIX,{canAcceptInBackground:!0});this.menuService=i;this.contextKeyService=e;this.commandService=t;this.extensionService=o;this.productService=r}static PREFIX="issue ";_getPicks(i){const e=new Array,t=new Array,o=new Set,r=this.productService.nameLong,s=S("reportExtensionMarketplace","Extension Marketplace"),m=k(i,r,!0),l=k(i,s,!0);return m&&e.push({label:r,ariaLabel:r,highlights:{label:m},accept:()=>this.commandService.executeCommand("workbench.action.openIssueReporter",{issueSource:v.VSCode})}),l&&e.push({label:s,ariaLabel:s,highlights:{label:l},accept:()=>this.commandService.executeCommand("workbench.action.openIssueReporter",{issueSource:v.Marketplace})}),e.push({type:"separator",label:S("extensions","Extensions")}),this.menuService.getMenuActions(C.IssueReporter,this.contextKeyService,{renderShortTitle:!0}).flatMap(c=>c[1]).forEach(c=>{"source"in c.item&&c.item.source&&o.add(c.item.source.id);const a=this._createPick(i,c);a&&t.push(a)}),this.extensionService.extensions.forEach(c=>{if(!c.isBuiltin){const a=this._createPick(i,void 0,c),I=c.identifier.value;a&&!o.has(I)&&t.push(a),o.add(I)}}),t.sort((c,a)=>{const I=c.label??"",f=a.label??"";return I.localeCompare(f)}),[...e,...t]}_createPick(i,e,t){const o=[{iconClass:y.asClassName(x.info),tooltip:S("contributedIssuePage","Open Extension Page")}];let r,s,m;if(e&&"source"in e.item&&e.item.source)r=e.item.source?.title,s=()=>("source"in e.item&&e.item.source&&this.commandService.executeCommand("extension.open",e.item.source.id),h.CLOSE_PICKER),m=()=>{e.run()};else if(t)r=t.displayName??t.name,s=()=>(this.commandService.executeCommand("extension.open",t.identifier.value),h.CLOSE_PICKER),m=()=>{this.commandService.executeCommand("workbench.action.openIssueReporter",t.identifier.value)};else return;const l=k(i,r,!0);if(l)return{label:r,highlights:{label:l},buttons:o,trigger:s,accept:m}}};p=P([u(0,A),u(1,M),u(2,E),u(3,Q),u(4,w)],p);export{p as IssueQuickAccess};
