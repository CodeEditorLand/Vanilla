var g=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var P=(d,n,r,e)=>{for(var i=e>1?void 0:e?b(n,r):n,o=d.length-1,t;o>=0;o--)(t=d[o])&&(i=(e?t(n,r,i):t(i))||i);return e&&i&&g(n,r,i),i},u=(d,n)=>(r,e)=>n(r,e,d);import{Codicon as x}from"../../../../base/common/codicons.js";import{matchesFuzzy as k}from"../../../../base/common/filters.js";import{ThemeIcon as A}from"../../../../base/common/themables.js";import{localize as S}from"../../../../nls.js";import{IMenuService as C,MenuId as E}from"../../../../platform/actions/common/actions.js";import{ICommandService as y}from"../../../../platform/commands/common/commands.js";import{IContextKeyService as M}from"../../../../platform/contextkey/common/contextkey.js";import"../../../../platform/extensions/common/extensions.js";import{IProductService as w}from"../../../../platform/product/common/productService.js";import{PickerQuickAccessProvider as L,TriggerAction as h}from"../../../../platform/quickinput/browser/pickerQuickAccess.js";import"../../../../platform/quickinput/common/quickInput.js";import{IExtensionService as Q}from"../../../services/extensions/common/extensions.js";import{IssueSource as v}from"../common/issue.js";let l=class extends L{constructor(r,e,i,o,t){super(l.PREFIX,{canAcceptInBackground:!0});this.menuService=r;this.contextKeyService=e;this.commandService=i;this.extensionService=o;this.productService=t}static PREFIX="issue ";_getPicks(r){const e=new Array,i=new Array,o=new Set,t=this.productService.nameLong,s=S("reportExtensionMarketplace","Extension Marketplace"),m=k(r,t,!0),p=k(r,s,!0);return m&&e.push({label:t,ariaLabel:t,highlights:{label:m},accept:()=>this.commandService.executeCommand("workbench.action.openIssueReporter",{issueSource:v.VSCode})}),p&&e.push({label:s,ariaLabel:s,highlights:{label:p},accept:()=>this.commandService.executeCommand("workbench.action.openIssueReporter",{issueSource:v.Marketplace})}),e.push({type:"separator",label:S("extensions","Extensions")}),this.menuService.getMenuActions(E.IssueReporter,this.contextKeyService,{renderShortTitle:!0}).flatMap(c=>c[1]).forEach(c=>{"source"in c.item&&c.item.source&&o.add(c.item.source.id);const a=this._createPick(r,c);a&&i.push(a)}),this.extensionService.extensions.forEach(c=>{if(!c.isBuiltin){const a=this._createPick(r,void 0,c),I=c.identifier.value;a&&!o.has(I)&&i.push(a),o.add(I)}}),i.sort((c,a)=>{const I=c.label??"",f=a.label??"";return I.localeCompare(f)}),[...e,...i]}_createPick(r,e,i){const o=[{iconClass:A.asClassName(x.info),tooltip:S("contributedIssuePage","Open Extension Page")}];let t,s,m;if(e&&"source"in e.item&&e.item.source)t=e.item.source?.title,s=()=>("source"in e.item&&e.item.source&&this.commandService.executeCommand("extension.open",e.item.source.id),h.CLOSE_PICKER),m=()=>{e.run()};else if(i)t=i.displayName??i.name,s=()=>(this.commandService.executeCommand("extension.open",i.identifier.value),h.CLOSE_PICKER),m=()=>{this.commandService.executeCommand("workbench.action.openIssueReporter",i.identifier.value)};else return;const p=k(r,t,!0);if(p)return{label:t,highlights:{label:p},buttons:o,trigger:s,accept:m}}};l=P([u(0,C),u(1,M),u(2,y),u(3,Q),u(4,w)],l);export{l as IssueQuickAccess};
