{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/issue/electron-sandbox/nativeIssueFormService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/newIssueReporter.css\";\nimport { IMenuService } from \"../../../../platform/actions/common/actions.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IDialogService } from \"../../../../platform/dialogs/common/dialogs.js\";\nimport { INativeEnvironmentService } from \"../../../../platform/environment/common/environment.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { INativeHostService } from \"../../../../platform/native/common/native.js\";\nimport product from \"../../../../platform/product/common/product.js\";\nimport { IAuxiliaryWindowService } from \"../../../services/auxiliaryWindow/browser/auxiliaryWindowService.js\";\nimport { IHostService } from \"../../../services/host/browser/host.js\";\nimport { IssueFormService } from \"../browser/issueFormService.js\";\nimport type { IIssueFormService, IssueReporterData } from \"../common/issue.js\";\nimport { IssueReporter2 } from \"./issueReporterService2.js\";\n\nexport class NativeIssueFormService\n\textends IssueFormService\n\timplements IIssueFormService\n{\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IAuxiliaryWindowService\n\t\tauxiliaryWindowService: IAuxiliaryWindowService,\n\t\t@ILogService logService: ILogService,\n\t\t@IDialogService dialogService: IDialogService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IHostService hostService: IHostService,\n\t\t@INativeHostService\n\t\tprivate readonly nativeHostService: INativeHostService,\n\t\t@INativeEnvironmentService\n\t\tprivate readonly environmentService: INativeEnvironmentService,\n\t) {\n\t\tsuper(\n\t\t\tinstantiationService,\n\t\t\tauxiliaryWindowService,\n\t\t\tmenuService,\n\t\t\tcontextKeyService,\n\t\t\tlogService,\n\t\t\tdialogService,\n\t\t\thostService,\n\t\t);\n\t}\n\n\t// override to grab platform info\n\toverride async openReporter(data: IssueReporterData): Promise<void> {\n\t\tif (this.hasToReload(data)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst bounds = await this.nativeHostService.getActiveWindowPosition();\n\t\tif (!bounds) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.openAuxIssueReporter(data, bounds);\n\n\t\t// Get platform information\n\t\tconst { arch, release, type } =\n\t\t\tawait this.nativeHostService.getOSProperties();\n\t\tthis.arch = arch;\n\t\tthis.release = release;\n\t\tthis.type = type;\n\n\t\t// create issue reporter and instantiate\n\t\tif (this.issueReporterWindow) {\n\t\t\tconst issueReporter = this.instantiationService.createInstance(\n\t\t\t\tIssueReporter2,\n\t\t\t\t!!this.environmentService.disableExtensions,\n\t\t\t\tdata,\n\t\t\t\t{ type: this.type, arch: this.arch, release: this.release },\n\t\t\t\tproduct,\n\t\t\t\tthis.issueReporterWindow,\n\t\t\t);\n\t\t\tissueReporter.render();\n\t\t}\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,OAAO;AACP,SAAS,oBAAoB;AAC7B,SAAS,0BAA0B;AACnC,SAAS,sBAAsB;AAC/B,SAAS,iCAAiC;AAC1C,SAAS,6BAA6B;AACtC,SAAS,mBAAmB;AAC5B,SAAS,0BAA0B;AACnC,OAAO,aAAa;AACpB,SAAS,+BAA+B;AACxC,SAAS,oBAAoB;AAC7B,SAAS,wBAAwB;AAEjC,SAAS,sBAAsB;AAExB,IAAM,yBAAN,cACE,iBAET;AAAA,EACC,YACwB,sBAEvB,wBACa,YACG,eACF,aACM,mBACN,aAEG,mBAEA,oBAChB;AACD;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAZiB;AAEA;AAAA,EAWlB;AAAA,EA/CD,OAuBA;AAAA;AAAA;AAAA;AAAA,EA2BC,MAAe,aAAa,MAAwC;AACnE,QAAI,KAAK,YAAY,IAAI,GAAG;AAC3B;AAAA,IACD;AAEA,UAAM,SAAS,MAAM,KAAK,kBAAkB,wBAAwB;AACpE,QAAI,CAAC,QAAQ;AACZ;AAAA,IACD;AAEA,UAAM,KAAK,qBAAqB,MAAM,MAAM;AAG5C,UAAM,EAAE,MAAM,SAAS,KAAK,IAC3B,MAAM,KAAK,kBAAkB,gBAAgB;AAC9C,SAAK,OAAO;AACZ,SAAK,UAAU;AACf,SAAK,OAAO;AAGZ,QAAI,KAAK,qBAAqB;AAC7B,YAAM,gBAAgB,KAAK,qBAAqB;AAAA,QAC/C;AAAA,QACA,CAAC,CAAC,KAAK,mBAAmB;AAAA,QAC1B;AAAA,QACA,EAAE,MAAM,KAAK,MAAM,MAAM,KAAK,MAAM,SAAS,KAAK,QAAQ;AAAA,QAC1D;AAAA,QACA,KAAK;AAAA,MACN;AACA,oBAAc,OAAO;AAAA,IACtB;AAAA,EACD;AACD;AA9Da,yBAAN;AAAA,EAKJ;AAAA,EACA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAEA;AAAA,GAfU;",
  "names": []
}
