{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/issue/electron-sandbox/issueReporterService2.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, reset } from \"../../../../base/browser/dom.js\";\nimport { CancellationError } from \"../../../../base/common/errors.js\";\nimport type { IProductConfiguration } from \"../../../../base/common/product.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { isRemoteDiagnosticError } from \"../../../../platform/diagnostics/common/diagnostics.js\";\nimport { IProcessMainService } from \"../../../../platform/issue/common/issue.js\";\nimport { INativeHostService } from \"../../../../platform/native/common/native.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport { applyZoom } from \"../../../../platform/window/electron-sandbox/window.js\";\nimport { BaseIssueReporterService } from \"../browser/baseIssueReporterService.js\";\nimport type { IssueReporterData as IssueReporterModelData } from \"../browser/issueReporterModel.js\";\nimport {\n\tIIssueFormService,\n\ttype IssueReporterData,\n\tIssueType,\n} from \"../common/issue.js\";\n\n// GitHub has let us know that we could up our limit here to 8k. We chose 7500 to play it safe.\n// ref https://github.com/microsoft/vscode/issues/159191\nconst MAX_URL_LENGTH = 7500;\n\nexport class IssueReporter2 extends BaseIssueReporterService {\n\tprivate readonly processMainService: IProcessMainService;\n\tconstructor(\n\t\tdisableExtensions: boolean,\n\t\tdata: IssueReporterData,\n\t\tos: {\n\t\t\ttype: string;\n\t\t\tarch: string;\n\t\t\trelease: string;\n\t\t},\n\t\tproduct: IProductConfiguration,\n\t\twindow: Window,\n\t\t@INativeHostService\n\t\tprivate readonly nativeHostService: INativeHostService,\n\t\t@IIssueFormService issueFormService: IIssueFormService,\n\t\t@IProcessMainService processMainService: IProcessMainService,\n\t\t@IThemeService themeService: IThemeService,\n\t) {\n\t\tsuper(\n\t\t\tdisableExtensions,\n\t\t\tdata,\n\t\t\tos,\n\t\t\tproduct,\n\t\t\twindow,\n\t\t\tfalse,\n\t\t\tissueFormService,\n\t\t\tthemeService,\n\t\t);\n\t\tthis.processMainService = processMainService;\n\t\tthis.processMainService.$getSystemInfo().then((info) => {\n\t\t\tthis.issueReporterModel.update({ systemInfo: info });\n\t\t\tthis.receivedSystemInfo = true;\n\n\t\t\tthis.updateSystemInfo(this.issueReporterModel.getData());\n\t\t\tthis.updatePreviewButtonState();\n\t\t});\n\t\tif (this.data.issueType === IssueType.PerformanceIssue) {\n\t\t\tthis.processMainService.$getPerformanceInfo().then((info) => {\n\t\t\t\tthis.updatePerformanceInfo(info as Partial<IssueReporterData>);\n\t\t\t});\n\t\t}\n\n\t\tthis.setEventHandlers();\n\t\tapplyZoom(this.data.zoomLevel, this.window);\n\t\tthis.updateExperimentsInfo(this.data.experiments);\n\t\tthis.updateRestrictedMode(this.data.restrictedMode);\n\t\tthis.updateUnsupportedMode(this.data.isUnsupported);\n\t}\n\n\tpublic override setEventHandlers(): void {\n\t\tsuper.setEventHandlers();\n\n\t\tthis.addEventListener(\"issue-type\", \"change\", (event: Event) => {\n\t\t\tconst issueType = Number.parseInt(\n\t\t\t\t(<HTMLInputElement>event.target).value,\n\t\t\t);\n\t\t\tthis.issueReporterModel.update({ issueType: issueType });\n\t\t\tif (\n\t\t\t\tissueType === IssueType.PerformanceIssue &&\n\t\t\t\t!this.receivedPerformanceInfo\n\t\t\t) {\n\t\t\t\tthis.processMainService.$getPerformanceInfo().then((info) => {\n\t\t\t\t\tthis.updatePerformanceInfo(\n\t\t\t\t\t\tinfo as Partial<IssueReporterData>,\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Resets placeholder\n\t\t\tconst descriptionTextArea = <HTMLInputElement>(\n\t\t\t\tthis.getElementById(\"issue-title\")\n\t\t\t);\n\t\t\tif (descriptionTextArea) {\n\t\t\t\tdescriptionTextArea.placeholder = localize(\n\t\t\t\t\t\"undefinedPlaceholder\",\n\t\t\t\t\t\"Please enter a title\",\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.updatePreviewButtonState();\n\t\t\tthis.setSourceOptions();\n\t\t\tthis.render();\n\t\t});\n\t}\n\n\tpublic override async submitToGitHub(\n\t\tissueTitle: string,\n\t\tissueBody: string,\n\t\tgitHubDetails: { owner: string; repositoryName: string },\n\t): Promise<boolean> {\n\t\tconst url = `https://api.github.com/repos/${gitHubDetails.owner}/${gitHubDetails.repositoryName}/issues`;\n\t\tconst init = {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify({\n\t\t\t\ttitle: issueTitle,\n\t\t\t\tbody: issueBody,\n\t\t\t}),\n\t\t\theaders: new Headers({\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\tAuthorization: `Bearer ${this.data.githubAccessToken}`,\n\t\t\t}),\n\t\t};\n\n\t\tconst response = await fetch(url, init);\n\t\tif (!response.ok) {\n\t\t\tconsole.error(\"Invalid GitHub URL provided.\");\n\t\t\treturn false;\n\t\t}\n\t\tconst result = await response.json();\n\t\tawait this.nativeHostService.openExternal(result.html_url);\n\t\tthis.close();\n\t\treturn true;\n\t}\n\n\tpublic override async createIssue(): Promise<boolean> {\n\t\tconst selectedExtension =\n\t\t\tthis.issueReporterModel.getData().selectedExtension;\n\t\tconst hasUri = this.nonGitHubIssueUrl;\n\t\t// Short circuit if the extension provides a custom issue handler\n\t\tif (hasUri) {\n\t\t\tconst url = this.getExtensionBugsUrl();\n\t\t\tif (url) {\n\t\t\t\tthis.hasBeenSubmitted = true;\n\t\t\t\tawait this.nativeHostService.openExternal(url);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (!this.validateInputs()) {\n\t\t\t// If inputs are invalid, set focus to the first one and add listeners on them\n\t\t\t// to detect further changes\n\t\t\tconst invalidInput =\n\t\t\t\tthis.window.document.getElementsByClassName(\"invalid-input\");\n\t\t\tif (invalidInput.length) {\n\t\t\t\t(<HTMLInputElement>invalidInput[0]).focus();\n\t\t\t}\n\n\t\t\tthis.addEventListener(\"issue-title\", \"input\", (_) => {\n\t\t\t\tthis.validateInput(\"issue-title\");\n\t\t\t});\n\n\t\t\tthis.addEventListener(\"description\", \"input\", (_) => {\n\t\t\t\tthis.validateInput(\"description\");\n\t\t\t});\n\n\t\t\tthis.addEventListener(\"issue-source\", \"change\", (_) => {\n\t\t\t\tthis.validateInput(\"issue-source\");\n\t\t\t});\n\n\t\t\tif (this.issueReporterModel.fileOnExtension()) {\n\t\t\t\tthis.addEventListener(\"extension-selector\", \"change\", (_) => {\n\t\t\t\t\tthis.validateInput(\"extension-selector\");\n\t\t\t\t\tthis.validateInput(\"description\");\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.hasBeenSubmitted = true;\n\n\t\tconst issueTitle = (<HTMLInputElement>(\n\t\t\tthis.getElementById(\"issue-title\")\n\t\t)).value;\n\t\tconst issueBody = this.issueReporterModel.serialize();\n\n\t\tlet issueUrl = this.getIssueUrl();\n\t\tif (!issueUrl) {\n\t\t\tconsole.error(\"No issue url found\");\n\t\t\treturn false;\n\t\t}\n\n\t\tif (selectedExtension?.uri) {\n\t\t\tconst uri = URI.revive(selectedExtension.uri);\n\t\t\tissueUrl = uri.toString();\n\t\t}\n\n\t\tconst gitHubDetails = this.parseGitHubUrl(issueUrl);\n\n\t\tconst baseUrl = this.getIssueUrlWithTitle(\n\t\t\t(<HTMLInputElement>this.getElementById(\"issue-title\")).value,\n\t\t\tissueUrl,\n\t\t);\n\t\tlet url = baseUrl + `&body=${encodeURIComponent(issueBody)}`;\n\n\t\tif (url.length > MAX_URL_LENGTH) {\n\t\t\ttry {\n\t\t\t\turl = await this.writeToClipboard(baseUrl, issueBody);\n\t\t\t} catch (_) {\n\t\t\t\tconsole.error(\"Writing to clipboard failed\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (this.data.githubAccessToken && gitHubDetails) {\n\t\t\treturn this.submitToGitHub(issueTitle, issueBody, gitHubDetails);\n\t\t}\n\n\t\tawait this.nativeHostService.openExternal(url);\n\t\treturn true;\n\t}\n\n\tpublic override async writeToClipboard(\n\t\tbaseUrl: string,\n\t\tissueBody: string,\n\t): Promise<string> {\n\t\tconst shouldWrite = await this.issueFormService.showClipboardDialog();\n\t\tif (!shouldWrite) {\n\t\t\tthrow new CancellationError();\n\t\t}\n\n\t\tawait this.nativeHostService.writeClipboardText(issueBody);\n\n\t\treturn (\n\t\t\tbaseUrl +\n\t\t\t`&body=${encodeURIComponent(localize(\"pasteData\", \"We have written the needed data into your clipboard because it was too large to send. Please paste.\"))}`\n\t\t);\n\t}\n\n\tprivate updateSystemInfo(state: IssueReporterModelData) {\n\t\tconst target = this.window.document.querySelector<HTMLElement>(\n\t\t\t\".block-system .block-info\",\n\t\t);\n\n\t\tif (target) {\n\t\t\tconst systemInfo = state.systemInfo!;\n\t\t\tconst renderedDataTable = $(\n\t\t\t\t\"table\",\n\t\t\t\tundefined,\n\t\t\t\t$(\n\t\t\t\t\t\"tr\",\n\t\t\t\t\tundefined,\n\t\t\t\t\t$(\"td\", undefined, \"CPUs\"),\n\t\t\t\t\t$(\"td\", undefined, systemInfo.cpus || \"\"),\n\t\t\t\t),\n\t\t\t\t$(\n\t\t\t\t\t\"tr\",\n\t\t\t\t\tundefined,\n\t\t\t\t\t$(\"td\", undefined, \"GPU Status\" as string),\n\t\t\t\t\t$(\n\t\t\t\t\t\t\"td\",\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tObject.keys(systemInfo.gpuStatus)\n\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\t(key) => `${key}: ${systemInfo.gpuStatus[key]}`,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.join(\"\\n\"),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\t$(\n\t\t\t\t\t\"tr\",\n\t\t\t\t\tundefined,\n\t\t\t\t\t$(\"td\", undefined, \"Load (avg)\" as string),\n\t\t\t\t\t$(\"td\", undefined, systemInfo.load || \"\"),\n\t\t\t\t),\n\t\t\t\t$(\n\t\t\t\t\t\"tr\",\n\t\t\t\t\tundefined,\n\t\t\t\t\t$(\"td\", undefined, \"Memory (System)\" as string),\n\t\t\t\t\t$(\"td\", undefined, systemInfo.memory),\n\t\t\t\t),\n\t\t\t\t$(\n\t\t\t\t\t\"tr\",\n\t\t\t\t\tundefined,\n\t\t\t\t\t$(\"td\", undefined, \"Process Argv\" as string),\n\t\t\t\t\t$(\"td\", undefined, systemInfo.processArgs),\n\t\t\t\t),\n\t\t\t\t$(\n\t\t\t\t\t\"tr\",\n\t\t\t\t\tundefined,\n\t\t\t\t\t$(\"td\", undefined, \"Screen Reader\" as string),\n\t\t\t\t\t$(\"td\", undefined, systemInfo.screenReader),\n\t\t\t\t),\n\t\t\t\t$(\n\t\t\t\t\t\"tr\",\n\t\t\t\t\tundefined,\n\t\t\t\t\t$(\"td\", undefined, \"VM\"),\n\t\t\t\t\t$(\"td\", undefined, systemInfo.vmHint),\n\t\t\t\t),\n\t\t\t);\n\t\t\treset(target, renderedDataTable);\n\n\t\t\tsystemInfo.remoteData.forEach((remote) => {\n\t\t\t\ttarget.appendChild($<HTMLHRElement>(\"hr\"));\n\t\t\t\tif (isRemoteDiagnosticError(remote)) {\n\t\t\t\t\tconst remoteDataTable = $(\n\t\t\t\t\t\t\"table\",\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t$(\n\t\t\t\t\t\t\t\"tr\",\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t$(\"td\", undefined, \"Remote\"),\n\t\t\t\t\t\t\t$(\"td\", undefined, remote.hostName),\n\t\t\t\t\t\t),\n\t\t\t\t\t\t$(\n\t\t\t\t\t\t\t\"tr\",\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t$(\"td\", undefined, \"\"),\n\t\t\t\t\t\t\t$(\"td\", undefined, remote.errorMessage),\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\ttarget.appendChild(remoteDataTable);\n\t\t\t\t} else {\n\t\t\t\t\tconst remoteDataTable = $(\n\t\t\t\t\t\t\"table\",\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t$(\n\t\t\t\t\t\t\t\"tr\",\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t$(\"td\", undefined, \"Remote\"),\n\t\t\t\t\t\t\t$(\n\t\t\t\t\t\t\t\t\"td\",\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\tremote.latency\n\t\t\t\t\t\t\t\t\t? `${remote.hostName} (latency: ${remote.latency.current.toFixed(2)}ms last, ${remote.latency.average.toFixed(2)}ms average)`\n\t\t\t\t\t\t\t\t\t: remote.hostName,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t\t$(\n\t\t\t\t\t\t\t\"tr\",\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t$(\"td\", undefined, \"OS\"),\n\t\t\t\t\t\t\t$(\"td\", undefined, remote.machineInfo.os),\n\t\t\t\t\t\t),\n\t\t\t\t\t\t$(\n\t\t\t\t\t\t\t\"tr\",\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t$(\"td\", undefined, \"CPUs\"),\n\t\t\t\t\t\t\t$(\"td\", undefined, remote.machineInfo.cpus || \"\"),\n\t\t\t\t\t\t),\n\t\t\t\t\t\t$(\n\t\t\t\t\t\t\t\"tr\",\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t$(\"td\", undefined, \"Memory (System)\" as string),\n\t\t\t\t\t\t\t$(\"td\", undefined, remote.machineInfo.memory),\n\t\t\t\t\t\t),\n\t\t\t\t\t\t$(\n\t\t\t\t\t\t\t\"tr\",\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t$(\"td\", undefined, \"VM\"),\n\t\t\t\t\t\t\t$(\"td\", undefined, remote.machineInfo.vmHint),\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\ttarget.appendChild(remoteDataTable);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate updateRestrictedMode(restrictedMode: boolean) {\n\t\tthis.issueReporterModel.update({ restrictedMode });\n\t}\n\n\tprivate updateUnsupportedMode(isUnsupported: boolean) {\n\t\tthis.issueReporterModel.update({ isUnsupported });\n\t}\n\n\tprivate updateExperimentsInfo(experimentInfo: string | undefined) {\n\t\tthis.issueReporterModel.update({ experimentInfo });\n\t\tconst target = this.window.document.querySelector<HTMLElement>(\n\t\t\t\".block-experiments .block-info\",\n\t\t);\n\t\tif (target) {\n\t\t\ttarget.textContent = experimentInfo\n\t\t\t\t? experimentInfo\n\t\t\t\t: localize(\"noCurrentExperiments\", \"No current experiments.\");\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["url"]
}
