{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/issue/electron-sandbox/issueReporter.js"],
  "sourcesContent": ["(() => {\n\t/**\n\t * @import { ISandboxConfiguration } from '../../../../base/parts/sandbox/common/sandboxTypes'\n\t */\n\n\tconst bootstrapWindow = bootstrapWindowLib();\n\n\t// Load issue reporter into window\n\tbootstrapWindow.load(\n\t\t[\"vs/workbench/contrib/issue/electron-sandbox/issueReporterMain\"],\n\t\t(issueReporter, configuration) => issueReporter.startup(configuration),\n\t\t{\n\t\t\tconfigureDeveloperSettings: () => ({\n\t\t\t\tforceEnableDeveloperKeybindings: true,\n\t\t\t\tdisallowReloadKeybinding: true,\n\t\t\t}),\n\t\t},\n\t);\n\n\t/**\n\t * @returns {{\n\t *   load: (\n\t *     modules: string[],\n\t *     resultCallback: (result: any, configuration: ISandboxConfiguration) => unknown,\n\t *     options?: {\n\t *       configureDeveloperSettings?: (config: ISandboxConfiguration) => {\n\t * \t\t\tforceEnableDeveloperKeybindings?: boolean,\n\t * \t\t\tdisallowReloadKeybinding?: boolean,\n\t * \t\t\tremoveDeveloperKeybindingsAfterLoad?: boolean\n\t * \t\t }\n\t *     }\n\t *   ) => Promise<unknown>\n\t * }}\n\t */\n\tfunction bootstrapWindowLib() {\n\t\t// @ts-ignore (defined in bootstrap-window.js)\n\t\treturn window.MonacoBootstrapWindow;\n\t}\n})();\n"],
  "mappings": ";;CAAC,MAAM;AAKN,QAAM,kBAAkB,mBAAmB;AAG3C,kBAAgB;AAAA,IACf,CAAC,+DAA+D;AAAA,IAChE,CAAC,eAAe,kBAAkB,cAAc,QAAQ,aAAa;AAAA,IACrE;AAAA,MACC,4BAA4B,8BAAO;AAAA,QAClC,iCAAiC;AAAA,QACjC,0BAA0B;AAAA,MAC3B,IAH4B;AAAA,IAI7B;AAAA,EACD;AAiBA,WAAS,qBAAqB;AAE7B,WAAO,OAAO;AAAA,EACf;AAHS;AAIV,GAAG;",
  "names": []
}
