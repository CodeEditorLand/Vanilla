{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/issue/electron-sandbox/processService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getZoomLevel } from '../../../../base/browser/browser.js';\nimport { platform } from '../../../../base/common/process.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { IProcessMainService, ProcessExplorerData } from '../../../../platform/issue/common/issue.js';\nimport { IProductService } from '../../../../platform/product/common/productService.js';\nimport { activeContrastBorder, editorBackground, editorForeground, listActiveSelectionBackground, listActiveSelectionForeground, listFocusBackground, listFocusForeground, listFocusOutline, listHoverBackground, listHoverForeground, scrollbarShadow, scrollbarSliderActiveBackground, scrollbarSliderBackground, scrollbarSliderHoverBackground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { IColorTheme, IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { INativeWorkbenchEnvironmentService } from '../../../services/environment/electron-sandbox/environmentService.js';\nimport { IWorkbenchProcessService } from '../common/issue.js';\nimport { mainWindow } from '../../../../base/browser/window.js';\n\nexport class ProcessService implements IWorkbenchProcessService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IProcessMainService private readonly processMainService: IProcessMainService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@INativeWorkbenchEnvironmentService private readonly environmentService: INativeWorkbenchEnvironmentService,\n\t\t@IProductService private readonly productService: IProductService,\n\t) { }\n\n\topenProcessExplorer(): Promise<void> {\n\t\tconst theme = this.themeService.getColorTheme();\n\t\tconst data: ProcessExplorerData = {\n\t\t\tpid: this.environmentService.mainPid,\n\t\t\tzoomLevel: getZoomLevel(mainWindow),\n\t\t\tstyles: {\n\t\t\t\tbackgroundColor: getColor(theme, editorBackground),\n\t\t\t\tcolor: getColor(theme, editorForeground),\n\t\t\t\tlistHoverBackground: getColor(theme, listHoverBackground),\n\t\t\t\tlistHoverForeground: getColor(theme, listHoverForeground),\n\t\t\t\tlistFocusBackground: getColor(theme, listFocusBackground),\n\t\t\t\tlistFocusForeground: getColor(theme, listFocusForeground),\n\t\t\t\tlistFocusOutline: getColor(theme, listFocusOutline),\n\t\t\t\tlistActiveSelectionBackground: getColor(theme, listActiveSelectionBackground),\n\t\t\t\tlistActiveSelectionForeground: getColor(theme, listActiveSelectionForeground),\n\t\t\t\tlistHoverOutline: getColor(theme, activeContrastBorder),\n\t\t\t\tscrollbarShadowColor: getColor(theme, scrollbarShadow),\n\t\t\t\tscrollbarSliderActiveBackgroundColor: getColor(theme, scrollbarSliderActiveBackground),\n\t\t\t\tscrollbarSliderBackgroundColor: getColor(theme, scrollbarSliderBackground),\n\t\t\t\tscrollbarSliderHoverBackgroundColor: getColor(theme, scrollbarSliderHoverBackground),\n\t\t\t},\n\t\t\tplatform: platform,\n\t\t\tapplicationName: this.productService.applicationName\n\t\t};\n\t\treturn this.processMainService.openProcessExplorer(data);\n\t}\n\n\n}\n\nfunction getColor(theme: IColorTheme, key: string): string | undefined {\n\tconst color = theme.getColor(key);\n\treturn color ? color.toString() : undefined;\n}\n\nregisterSingleton(IWorkbenchProcessService, ProcessService, InstantiationType.Delayed);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,oBAAoB;AAC7B,SAAS,gBAAgB;AACzB,SAAS,mBAAmB,yBAAyB;AACrD,SAAS,qBAAqB,2BAA2B;AACzD,SAAS,uBAAuB;AAChC,SAAS,sBAAsB,kBAAkB,kBAAkB,+BAA+B,+BAA+B,qBAAqB,qBAAqB,kBAAkB,qBAAqB,qBAAqB,iBAAiB,iCAAiC,2BAA2B,sCAAsC;AAC1V,SAAS,aAAa,qBAAqB;AAC3C,SAAS,0CAA0C;AACnD,SAAS,gCAAgC;AACzC,SAAS,kBAAkB;AAEpB,IAAM,iBAAN,MAAyD;AAAA,EAG/D,YACuC,oBACN,cACqB,oBACnB,gBACjC;AAJqC;AACN;AACqB;AACnB;AAAA,EAC/B;AAAA,EAxBL,OAgBgE;AAAA;AAAA;AAAA,EAU/D,sBAAqC;AACpC,UAAM,QAAQ,KAAK,aAAa,cAAc;AAC9C,UAAM,OAA4B;AAAA,MACjC,KAAK,KAAK,mBAAmB;AAAA,MAC7B,WAAW,aAAa,UAAU;AAAA,MAClC,QAAQ;AAAA,QACP,iBAAiB,SAAS,OAAO,gBAAgB;AAAA,QACjD,OAAO,SAAS,OAAO,gBAAgB;AAAA,QACvC,qBAAqB,SAAS,OAAO,mBAAmB;AAAA,QACxD,qBAAqB,SAAS,OAAO,mBAAmB;AAAA,QACxD,qBAAqB,SAAS,OAAO,mBAAmB;AAAA,QACxD,qBAAqB,SAAS,OAAO,mBAAmB;AAAA,QACxD,kBAAkB,SAAS,OAAO,gBAAgB;AAAA,QAClD,+BAA+B,SAAS,OAAO,6BAA6B;AAAA,QAC5E,+BAA+B,SAAS,OAAO,6BAA6B;AAAA,QAC5E,kBAAkB,SAAS,OAAO,oBAAoB;AAAA,QACtD,sBAAsB,SAAS,OAAO,eAAe;AAAA,QACrD,sCAAsC,SAAS,OAAO,+BAA+B;AAAA,QACrF,gCAAgC,SAAS,OAAO,yBAAyB;AAAA,QACzE,qCAAqC,SAAS,OAAO,8BAA8B;AAAA,MACpF;AAAA,MACA;AAAA,MACA,iBAAiB,KAAK,eAAe;AAAA,IACtC;AACA,WAAO,KAAK,mBAAmB,oBAAoB,IAAI;AAAA,EACxD;AAGD;AAtCa,iBAAN;AAAA,EAIJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAPU;AAwCb,SAAS,SAAS,OAAoB,KAAiC;AACtE,QAAM,QAAQ,MAAM,SAAS,GAAG;AAChC,SAAO,QAAQ,MAAM,SAAS,IAAI;AACnC;AAHS;AAKT,kBAAkB,0BAA0B,gBAAgB,kBAAkB,OAAO;",
  "names": []
}
