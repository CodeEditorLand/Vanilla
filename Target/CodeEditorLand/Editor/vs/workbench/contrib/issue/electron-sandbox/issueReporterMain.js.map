{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/issue/electron-sandbox/issueReporterMain.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { safeInnerHtml } from \"../../../../base/browser/dom.js\";\nimport \"../../../../base/browser/ui/codicons/codiconStyles.js\"; // make sure codicon css is loaded\nimport { mainWindow } from \"../../../../base/browser/window.js\";\nimport { isLinux, isWindows } from \"../../../../base/common/platform.js\";\nimport \"./media/issueReporter.css\";\nimport { SyncDescriptor } from \"../../../../platform/instantiation/common/descriptors.js\";\nimport { getSingletonServiceDescriptors } from \"../../../../platform/instantiation/common/extensions.js\";\nimport { InstantiationService } from \"../../../../platform/instantiation/common/instantiationService.js\";\nimport { ServiceCollection } from \"../../../../platform/instantiation/common/serviceCollection.js\";\nimport { IMainProcessService } from \"../../../../platform/ipc/common/mainProcessService.js\";\nimport { ElectronIPCMainProcessService } from \"../../../../platform/ipc/electron-sandbox/mainProcessService.js\";\nimport { registerMainProcessRemoteService } from \"../../../../platform/ipc/electron-sandbox/services.js\";\nimport {\n\tIIssueMainService,\n\tIProcessMainService,\n\ttype OldIssueReporterWindowConfiguration,\n} from \"../../../../platform/issue/common/issue.js\";\nimport { INativeHostService } from \"../../../../platform/native/common/native.js\";\nimport { NativeHostService } from \"../../../../platform/native/common/nativeHostService.js\";\nimport BaseHtml from \"../browser/issueReporterPage.js\";\nimport { IssueReporter } from \"./issueReporterService.js\";\n\nexport function startup(configuration: OldIssueReporterWindowConfiguration) {\n\tconst platformClass = isWindows ? \"windows\" : isLinux ? \"linux\" : \"mac\";\n\tmainWindow.document.body.classList.add(platformClass); // used by our fonts\n\n\tsafeInnerHtml(mainWindow.document.body, BaseHtml());\n\n\tconst instantiationService = initServices(configuration.windowId);\n\n\tconst issueReporter = instantiationService.createInstance(\n\t\tIssueReporter,\n\t\tconfiguration,\n\t);\n\tissueReporter.render();\n\tmainWindow.document.body.style.display = \"block\";\n\tissueReporter.setInitialFocus();\n}\n\nfunction initServices(windowId: number) {\n\tconst services = new ServiceCollection();\n\n\tconst contributedServices = getSingletonServiceDescriptors();\n\tfor (const [id, descriptor] of contributedServices) {\n\t\tservices.set(id, descriptor);\n\t}\n\n\tservices.set(\n\t\tIMainProcessService,\n\t\tnew SyncDescriptor(ElectronIPCMainProcessService, [windowId]),\n\t);\n\tservices.set(\n\t\tINativeHostService,\n\t\tnew SyncDescriptor(NativeHostService, [windowId]),\n\t);\n\n\treturn new InstantiationService(services, true);\n}\n\nregisterMainProcessRemoteService(IIssueMainService, \"issue\");\nregisterMainProcessRemoteService(IProcessMainService, \"process\");\n"],
  "mappings": ";;AAKA,SAAS,qBAAqB;AAC9B,OAAO;AACP,SAAS,kBAAkB;AAC3B,SAAS,SAAS,iBAAiB;AACnC,OAAO;AACP,SAAS,sBAAsB;AAC/B,SAAS,sCAAsC;AAC/C,SAAS,4BAA4B;AACrC,SAAS,yBAAyB;AAClC,SAAS,2BAA2B;AACpC,SAAS,qCAAqC;AAC9C,SAAS,wCAAwC;AACjD;AAAA,EACC;AAAA,EACA;AAAA,OAEM;AACP,SAAS,0BAA0B;AACnC,SAAS,yBAAyB;AAClC,OAAO,cAAc;AACrB,SAAS,qBAAqB;AAEvB,SAAS,QAAQ,eAAoD;AAC3E,QAAM,gBAAgB,YAAY,YAAY,UAAU,UAAU;AAClE,aAAW,SAAS,KAAK,UAAU,IAAI,aAAa;AAEpD,gBAAc,WAAW,SAAS,MAAM,SAAS,CAAC;AAElD,QAAM,uBAAuB,aAAa,cAAc,QAAQ;AAEhE,QAAM,gBAAgB,qBAAqB;AAAA,IAC1C;AAAA,IACA;AAAA,EACD;AACA,gBAAc,OAAO;AACrB,aAAW,SAAS,KAAK,MAAM,UAAU;AACzC,gBAAc,gBAAgB;AAC/B;AAfgB;AAiBhB,SAAS,aAAa,UAAkB;AACvC,QAAM,WAAW,IAAI,kBAAkB;AAEvC,QAAM,sBAAsB,+BAA+B;AAC3D,aAAW,CAAC,IAAI,UAAU,KAAK,qBAAqB;AACnD,aAAS,IAAI,IAAI,UAAU;AAAA,EAC5B;AAEA,WAAS;AAAA,IACR;AAAA,IACA,IAAI,eAAe,+BAA+B,CAAC,QAAQ,CAAC;AAAA,EAC7D;AACA,WAAS;AAAA,IACR;AAAA,IACA,IAAI,eAAe,mBAAmB,CAAC,QAAQ,CAAC;AAAA,EACjD;AAEA,SAAO,IAAI,qBAAqB,UAAU,IAAI;AAC/C;AAlBS;AAoBT,iCAAiC,mBAAmB,OAAO;AAC3D,iCAAiC,qBAAqB,SAAS;",
  "names": []
}
