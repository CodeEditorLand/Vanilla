{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/issue/electron-sandbox/issue.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize, localize2 } from '../../../../nls.js';\nimport { registerAction2, Action2 } from '../../../../platform/actions/common/actions.js';\nimport { IWorkbenchIssueService, IssueType, IIssueFormService } from '../common/issue.js';\nimport { BaseIssueContribution } from '../common/issue.contribution.js';\nimport { IProductService } from '../../../../platform/product/common/productService.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { Extensions, IWorkbenchContributionsRegistry } from '../../../common/contributions.js';\nimport { LifecyclePhase } from '../../../services/lifecycle/common/lifecycle.js';\nimport { Categories } from '../../../../platform/action/common/actionCommonCategories.js';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IDisposable } from '../../../../base/common/lifecycle.js';\nimport { IQuickAccessRegistry, Extensions as QuickAccessExtensions } from '../../../../platform/quickinput/common/quickAccess.js';\nimport { IssueQuickAccess } from '../browser/issueQuickAccess.js';\nimport { registerSingleton, InstantiationType } from '../../../../platform/instantiation/common/extensions.js';\nimport { NativeIssueService } from './issueService.js';\nimport './issueMainService.js';\nimport '../browser/issueTroubleshoot.js';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { NativeIssueFormService } from './nativeIssueFormService.js';\n\n\n//#region Issue Contribution\n\nregisterSingleton(IWorkbenchIssueService, NativeIssueService, InstantiationType.Delayed);\nregisterSingleton(IIssueFormService, NativeIssueFormService, InstantiationType.Delayed);\n\nclass NativeIssueContribution extends BaseIssueContribution {\n\n\tconstructor(\n\t\t@IProductService productService: IProductService,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tsuper(productService, configurationService);\n\n\t\tif (productService.reportIssueUrl) {\n\t\t\tthis._register(registerAction2(ReportPerformanceIssueUsingReporterAction));\n\t\t}\n\n\t\tlet disposable: IDisposable | undefined;\n\n\t\tconst registerQuickAccessProvider = () => {\n\t\t\tdisposable = Registry.as<IQuickAccessRegistry>(QuickAccessExtensions.Quickaccess).registerQuickAccessProvider({\n\t\t\t\tctor: IssueQuickAccess,\n\t\t\t\tprefix: IssueQuickAccess.PREFIX,\n\t\t\t\tcontextKey: 'inReportIssuePicker',\n\t\t\t\tplaceholder: localize('tasksQuickAccessPlaceholder', \"Type the name of an extension to report on.\"),\n\t\t\t\thelpEntries: [{\n\t\t\t\t\tdescription: localize('openIssueReporter', \"Open Issue Reporter\"),\n\t\t\t\t\tcommandId: 'workbench.action.openIssueReporter'\n\t\t\t\t}]\n\t\t\t});\n\t\t};\n\n\t\tRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).registerConfiguration({\n\t\t\tproperties: {\n\t\t\t\t'issueReporter.experimental.auxWindow': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tdescription: 'Enable the new experimental issue reporter in electron.',\n\t\t\t\t},\n\t\t\t}\n\t\t});\n\n\t\tthis._register(configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (!configurationService.getValue<boolean>('extensions.experimental.issueQuickAccess') && disposable) {\n\t\t\t\tdisposable.dispose();\n\t\t\t\tdisposable = undefined;\n\t\t\t} else if (!disposable) {\n\t\t\t\tregisterQuickAccessProvider();\n\t\t\t}\n\t\t}));\n\n\t\tif (configurationService.getValue<boolean>('extensions.experimental.issueQuickAccess')) {\n\t\t\tregisterQuickAccessProvider();\n\t\t}\n\t}\n}\nRegistry.as<IWorkbenchContributionsRegistry>(Extensions.Workbench).registerWorkbenchContribution(NativeIssueContribution, LifecyclePhase.Restored);\n\nclass ReportPerformanceIssueUsingReporterAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.reportPerformanceIssueUsingReporter';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ReportPerformanceIssueUsingReporterAction.ID,\n\t\t\ttitle: localize2({ key: 'reportPerformanceIssue', comment: [`Here, 'issue' means problem or bug`] }, \"Report Performance Issue...\"),\n\t\t\tcategory: Categories.Help,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst issueService = accessor.get(IWorkbenchIssueService); // later can just get IIssueFormService\n\n\t\treturn issueService.openReporter({ issueType: IssueType.PerformanceIssue });\n\t}\n}\n\n// #endregion\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,UAAU,iBAAiB;AACpC,SAAS,iBAAiB,eAAe;AACzC,SAAS,wBAAwB,WAAW,yBAAyB;AACrE,SAAS,6BAA6B;AACtC,SAAS,uBAAuB;AAChC,SAAS,gBAAgB;AACzB,SAAS,YAAY,uCAAuC;AAC5D,SAAS,sBAAsB;AAC/B,SAAS,kBAAkB;AAC3B,SAAS,wBAAwB;AACjC,SAAS,6BAA6B;AACtC,SAAS,mBAAmB;AAC5B,SAAS,sBAAsB,cAAc,6BAA6B;AAC1E,SAAS,wBAAwB;AACjC,SAAS,mBAAmB,yBAAyB;AACrD,SAAS,0BAA0B;AACnC,OAAO;AACP,OAAO;AACP,SAAS,wBAAwB,cAAc,+BAA+B;AAC9E,SAAS,8BAA8B;AAKvC,kBAAkB,wBAAwB,oBAAoB,kBAAkB,OAAO;AACvF,kBAAkB,mBAAmB,wBAAwB,kBAAkB,OAAO;AAEtF,IAAM,0BAAN,cAAsC,sBAAsB;AAAA,EAhC5D,OAgC4D;AAAA;AAAA;AAAA,EAE3D,YACkB,gBACM,sBACtB;AACD,UAAM,gBAAgB,oBAAoB;AAE1C,QAAI,eAAe,gBAAgB;AAClC,WAAK,UAAU,gBAAgB,yCAAyC,CAAC;AAAA,IAC1E;AAEA,QAAI;AAEJ,UAAM,8BAA8B,6BAAM;AACzC,mBAAa,SAAS,GAAyB,sBAAsB,WAAW,EAAE,4BAA4B;AAAA,QAC7G,MAAM;AAAA,QACN,QAAQ,iBAAiB;AAAA,QACzB,YAAY;AAAA,QACZ,aAAa,SAAS,+BAA+B,6CAA6C;AAAA,QAClG,aAAa,CAAC;AAAA,UACb,aAAa,SAAS,qBAAqB,qBAAqB;AAAA,UAChE,WAAW;AAAA,QACZ,CAAC;AAAA,MACF,CAAC;AAAA,IACF,GAXoC;AAapC,aAAS,GAA2B,wBAAwB,aAAa,EAAE,sBAAsB;AAAA,MAChG,YAAY;AAAA,QACX,wCAAwC;AAAA,UACvC,MAAM;AAAA,UACN,SAAS;AAAA,UACT,aAAa;AAAA,QACd;AAAA,MACD;AAAA,IACD,CAAC;AAED,SAAK,UAAU,qBAAqB,yBAAyB,OAAK;AACjE,UAAI,CAAC,qBAAqB,SAAkB,0CAA0C,KAAK,YAAY;AACtG,mBAAW,QAAQ;AACnB,qBAAa;AAAA,MACd,WAAW,CAAC,YAAY;AACvB,oCAA4B;AAAA,MAC7B;AAAA,IACD,CAAC,CAAC;AAEF,QAAI,qBAAqB,SAAkB,0CAA0C,GAAG;AACvF,kCAA4B;AAAA,IAC7B;AAAA,EACD;AACD;AAlDM,0BAAN;AAAA,EAGG;AAAA,EACA;AAAA,GAJG;AAmDN,SAAS,GAAoC,WAAW,SAAS,EAAE,8BAA8B,yBAAyB,eAAe,QAAQ;AAEjJ,MAAM,kDAAkD,QAAQ;AAAA,EArFhE,OAqFgE;AAAA;AAAA;AAAA,EAE/D,OAAgB,KAAK;AAAA,EAErB,cAAc;AACb,UAAM;AAAA,MACL,IAAI,0CAA0C;AAAA,MAC9C,OAAO,UAAU,EAAE,KAAK,0BAA0B,SAAS,CAAC,oCAAoC,EAAE,GAAG,6BAA6B;AAAA,MAClI,UAAU,WAAW;AAAA,MACrB,IAAI;AAAA,IACL,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,eAAe,SAAS,IAAI,sBAAsB;AAExD,WAAO,aAAa,aAAa,EAAE,WAAW,UAAU,iBAAiB,CAAC;AAAA,EAC3E;AACD;",
  "names": []
}
