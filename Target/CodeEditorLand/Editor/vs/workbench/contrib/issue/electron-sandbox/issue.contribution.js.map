{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/issue/electron-sandbox/issue.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IDisposable } from \"../../../../base/common/lifecycle.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport { Categories } from \"../../../../platform/action/common/actionCommonCategories.js\";\nimport {\n\tAction2,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport {\n\ttype IQuickAccessRegistry,\n\tExtensions as QuickAccessExtensions,\n} from \"../../../../platform/quickinput/common/quickAccess.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\tExtensions,\n\ttype IWorkbenchContributionsRegistry,\n} from \"../../../common/contributions.js\";\nimport { LifecyclePhase } from \"../../../services/lifecycle/common/lifecycle.js\";\nimport { IssueQuickAccess } from \"../browser/issueQuickAccess.js\";\nimport { BaseIssueContribution } from \"../common/issue.contribution.js\";\nimport {\n\tIIssueFormService,\n\tIWorkbenchIssueService,\n\tIssueType,\n} from \"../common/issue.js\";\nimport { NativeIssueService } from \"./issueService.js\";\nimport \"./issueMainService.js\";\nimport \"../browser/issueTroubleshoot.js\";\nimport {\n\tExtensions as ConfigurationExtensions,\n\ttype IConfigurationRegistry,\n} from \"../../../../platform/configuration/common/configurationRegistry.js\";\nimport { NativeIssueFormService } from \"./nativeIssueFormService.js\";\n\n//#region Issue Contribution\n\nregisterSingleton(\n\tIWorkbenchIssueService,\n\tNativeIssueService,\n\tInstantiationType.Delayed,\n);\nregisterSingleton(\n\tIIssueFormService,\n\tNativeIssueFormService,\n\tInstantiationType.Delayed,\n);\n\nclass NativeIssueContribution extends BaseIssueContribution {\n\tconstructor(\n\t\t@IProductService productService: IProductService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper(productService, configurationService);\n\n\t\tif (productService.reportIssueUrl) {\n\t\t\tthis._register(\n\t\t\t\tregisterAction2(ReportPerformanceIssueUsingReporterAction),\n\t\t\t);\n\t\t}\n\n\t\tlet disposable: IDisposable | undefined;\n\n\t\tconst registerQuickAccessProvider = () => {\n\t\t\tdisposable = Registry.as<IQuickAccessRegistry>(\n\t\t\t\tQuickAccessExtensions.Quickaccess,\n\t\t\t).registerQuickAccessProvider({\n\t\t\t\tctor: IssueQuickAccess,\n\t\t\t\tprefix: IssueQuickAccess.PREFIX,\n\t\t\t\tcontextKey: \"inReportIssuePicker\",\n\t\t\t\tplaceholder: localize(\n\t\t\t\t\t\"tasksQuickAccessPlaceholder\",\n\t\t\t\t\t\"Type the name of an extension to report on.\",\n\t\t\t\t),\n\t\t\t\thelpEntries: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\"openIssueReporter\",\n\t\t\t\t\t\t\t\"Open Issue Reporter\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcommandId: \"workbench.action.openIssueReporter\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t};\n\n\t\tRegistry.as<IConfigurationRegistry>(\n\t\t\tConfigurationExtensions.Configuration,\n\t\t).registerConfiguration({\n\t\t\tproperties: {\n\t\t\t\t\"issueReporter.experimental.auxWindow\": {\n\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t\"Enable the new experimental issue reporter in electron.\",\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\n\t\tthis._register(\n\t\t\tconfigurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (\n\t\t\t\t\t!configurationService.getValue<boolean>(\n\t\t\t\t\t\t\"extensions.experimental.issueQuickAccess\",\n\t\t\t\t\t) &&\n\t\t\t\t\tdisposable\n\t\t\t\t) {\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\tdisposable = undefined;\n\t\t\t\t} else if (!disposable) {\n\t\t\t\t\tregisterQuickAccessProvider();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tif (\n\t\t\tconfigurationService.getValue<boolean>(\n\t\t\t\t\"extensions.experimental.issueQuickAccess\",\n\t\t\t)\n\t\t) {\n\t\t\tregisterQuickAccessProvider();\n\t\t}\n\t}\n}\nRegistry.as<IWorkbenchContributionsRegistry>(\n\tExtensions.Workbench,\n).registerWorkbenchContribution(\n\tNativeIssueContribution,\n\tLifecyclePhase.Restored,\n);\n\nclass ReportPerformanceIssueUsingReporterAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.reportPerformanceIssueUsingReporter\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ReportPerformanceIssueUsingReporterAction.ID,\n\t\t\ttitle: localize2(\n\t\t\t\t{\n\t\t\t\t\tkey: \"reportPerformanceIssue\",\n\t\t\t\t\tcomment: [`Here, 'issue' means problem or bug`],\n\t\t\t\t},\n\t\t\t\t\"Report Performance Issue...\",\n\t\t\t),\n\t\t\tcategory: Categories.Help,\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst issueService = accessor.get(IWorkbenchIssueService); // later can just get IIssueFormService\n\n\t\treturn issueService.openReporter({\n\t\t\tissueType: IssueType.PerformanceIssue,\n\t\t});\n\t}\n}\n\n// #endregion\n"],
  "mappings": "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",
  "names": []
}
