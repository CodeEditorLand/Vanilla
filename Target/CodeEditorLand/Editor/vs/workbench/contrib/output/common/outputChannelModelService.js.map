{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/output/common/outputChannelModelService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { IWorkbenchEnvironmentService } from '../../../services/environment/common/environmentService.js';\nimport { createDecorator, IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { toLocalISOString } from '../../../../base/common/date.js';\nimport { joinPath } from '../../../../base/common/resources.js';\nimport { DelegatedOutputChannelModel, FileOutputChannelModel, IOutputChannelModel } from './outputChannelModel.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ILanguageSelection } from '../../../../editor/common/languages/language.js';\n\nexport const IOutputChannelModelService = createDecorator<IOutputChannelModelService>('outputChannelModelService');\n\nexport interface IOutputChannelModelService {\n\treadonly _serviceBrand: undefined;\n\n\tcreateOutputChannelModel(id: string, modelUri: URI, language: ILanguageSelection, file?: URI): IOutputChannelModel;\n\n}\n\nexport class OutputChannelModelService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly outputLocation: URI;\n\n\tconstructor(\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService\n\t) {\n\t\tthis.outputLocation = joinPath(environmentService.windowLogsPath, `output_${toLocalISOString(new Date()).replace(/-|:|\\.\\d+Z$/g, '')}`);\n\t}\n\n\tcreateOutputChannelModel(id: string, modelUri: URI, language: ILanguageSelection, file?: URI): IOutputChannelModel {\n\t\treturn file ? this.instantiationService.createInstance(FileOutputChannelModel, modelUri, language, file) : this.instantiationService.createInstance(DelegatedOutputChannelModel, id, modelUri, language, this.outputDir);\n\t}\n\n\tprivate _outputDir: Promise<URI> | null = null;\n\tprivate get outputDir(): Promise<URI> {\n\t\tif (!this._outputDir) {\n\t\t\tthis._outputDir = this.fileService.createFolder(this.outputLocation).then(() => this.outputLocation);\n\t\t}\n\t\treturn this._outputDir;\n\t}\n\n}\n\nregisterSingleton(IOutputChannelModelService, OutputChannelModelService, InstantiationType.Delayed);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,mBAAmB,yBAAyB;AACrD,SAAS,oCAAoC;AAC7C,SAAS,iBAAiB,6BAA6B;AACvD,SAAS,oBAAoB;AAC7B,SAAS,wBAAwB;AACjC,SAAS,gBAAgB;AACzB,SAAS,6BAA6B,wBAAwB,2BAA2B;AACzF,SAAS,WAAW;AACpB,SAAS,0BAA0B;AAE5B,MAAM,6BAA6B,gBAA4C,2BAA2B;AAS1G,IAAM,4BAAN,MAAgC;AAAA,EAMtC,YACgC,aACS,sBACV,oBAC7B;AAH8B;AACS;AAGxC,SAAK,iBAAiB,SAAS,mBAAmB,gBAAgB,UAAU,iBAAiB,oBAAI,KAAK,CAAC,EAAE,QAAQ,gBAAgB,EAAE,CAAC,EAAE;AAAA,EACvI;AAAA,EApCD,OAwBuC;AAAA;AAAA;AAAA,EAIrB;AAAA,EAUjB,yBAAyB,IAAY,UAAe,UAA8B,MAAiC;AAClH,WAAO,OAAO,KAAK,qBAAqB,eAAe,wBAAwB,UAAU,UAAU,IAAI,IAAI,KAAK,qBAAqB,eAAe,6BAA6B,IAAI,UAAU,UAAU,KAAK,SAAS;AAAA,EACxN;AAAA,EAEQ,aAAkC;AAAA,EAC1C,IAAY,YAA0B;AACrC,QAAI,CAAC,KAAK,YAAY;AACrB,WAAK,aAAa,KAAK,YAAY,aAAa,KAAK,cAAc,EAAE,KAAK,MAAM,KAAK,cAAc;AAAA,IACpG;AACA,WAAO,KAAK;AAAA,EACb;AAED;AA1Ba,4BAAN;AAAA,EAOJ;AAAA,EACA;AAAA,EACA;AAAA,GATU;AA4Bb,kBAAkB,4BAA4B,2BAA2B,kBAAkB,OAAO;",
  "names": []
}
