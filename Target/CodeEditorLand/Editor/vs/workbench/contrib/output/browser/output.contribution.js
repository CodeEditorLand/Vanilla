var M=Object.defineProperty;var Q=Object.getOwnPropertyDescriptor;var E=(I,w,e,t)=>{for(var c=t>1?void 0:t?Q(w,e):w,n=I.length-1,i;n>=0;n--)(i=I[n])&&(c=(t?i(w,e,c):i(c))||c);return t&&c&&M(w,e,c),c},A=(I,w)=>(e,t)=>w(e,t,I);import*as s from"../../../../nls.js";import{KeyMod as L,KeyChord as q,KeyCode as b}from"../../../../base/common/keyCodes.js";import{ModesRegistry as P}from"../../../../editor/common/languages/modesRegistry.js";import{Registry as S}from"../../../../platform/registry/common/platform.js";import{MenuId as p,registerAction2 as g,Action2 as h,MenuRegistry as V}from"../../../../platform/actions/common/actions.js";import{InstantiationType as X,registerSingleton as K}from"../../../../platform/instantiation/common/extensions.js";import{OutputService as H}from"./outputServices.js";import{OUTPUT_MODE_ID as B,OUTPUT_MIME as G,OUTPUT_VIEW_ID as d,IOutputService as m,CONTEXT_IN_OUTPUT as Y,LOG_MODE_ID as $,LOG_MIME as j,CONTEXT_ACTIVE_FILE_OUTPUT as x,CONTEXT_OUTPUT_SCROLL_LOCK as J,ACTIVE_OUTPUT_CHANNEL_CONTEXT as Z,CONTEXT_ACTIVE_OUTPUT_LEVEL_SETTABLE as ee,Extensions as te,CONTEXT_ACTIVE_OUTPUT_LEVEL as ie,CONTEXT_ACTIVE_OUTPUT_LEVEL_IS_DEFAULT as oe}from"../../../services/output/common/output.js";import{OutputViewPane as ne}from"./outputView.js";import{SyncDescriptor as F}from"../../../../platform/instantiation/common/descriptors.js";import{Extensions as re}from"../../../common/contributions.js";import{LifecyclePhase as se}from"../../../services/lifecycle/common/lifecycle.js";import"../../../../platform/instantiation/common/instantiation.js";import{ViewContainerLocation as ce,Extensions as U}from"../../../common/views.js";import{IViewsService as le}from"../../../services/views/common/viewsService.js";import{ViewPaneContainer as ue}from"../../../browser/parts/views/viewPaneContainer.js";import{Extensions as ae,ConfigurationScope as pe}from"../../../../platform/configuration/common/configurationRegistry.js";import{IQuickInputService as _}from"../../../../platform/quickinput/common/quickInput.js";import{AUX_WINDOW_GROUP as ge,IEditorService as R}from"../../../services/editor/common/editorService.js";import{assertIsDefined as he}from"../../../../base/common/types.js";import{ContextKeyExpr as f}from"../../../../platform/contextkey/common/contextkey.js";import{Codicon as C}from"../../../../base/common/codicons.js";import{registerIcon as de}from"../../../../platform/theme/common/iconRegistry.js";import{Categories as D}from"../../../../platform/action/common/actionCommonCategories.js";import{Disposable as ve,dispose as me,toDisposable as fe}from"../../../../base/common/lifecycle.js";import{IFilesConfigurationService as W}from"../../../services/filesConfiguration/common/filesConfigurationService.js";import{AccessibilitySignal as we,IAccessibilitySignalService as Ce}from"../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js";import{ILoggerService as z,LogLevel as O,LogLevelToLocalizedString as Oe,LogLevelToString as Ie}from"../../../../platform/log/common/log.js";import{IDefaultLogLevelsService as Se}from"../../logs/common/defaultLogLevels.js";K(m,H,X.Delayed),P.registerLanguage({id:B,extensions:[],mimetypes:[G]}),P.registerLanguage({id:$,extensions:[],mimetypes:[j]});const N=de("output-view-icon",C.output,s.localize("outputViewIcon","View icon of the output view.")),ye=S.as(U.ViewContainersRegistry).registerViewContainer({id:d,title:s.localize2("output","Output"),icon:N,order:1,ctorDescriptor:new F(ue,[d,{mergeViewWithContainerWhenSingleView:!0}]),storageId:d,hideIfEmpty:!0},ce.Panel,{doNotRegisterOpenCommand:!0});S.as(U.ViewsRegistry).registerViews([{id:d,name:s.localize2("output","Output"),containerIcon:N,canMoveView:!0,canToggleVisibility:!1,ctorDescriptor:new F(ne),openCommandActionDescriptor:{id:"workbench.action.output.toggleOutput",mnemonicTitle:s.localize({key:"miToggleOutput",comment:["&& denotes a mnemonic"]},"&&Output"),keybindings:{primary:L.CtrlCmd|L.Shift|b.KeyU,linux:{primary:q(L.CtrlCmd|b.KeyK,L.CtrlCmd|b.KeyH)}},order:1}}],ye);let y=class extends ve{constructor(e,t,c){super();this.outputService=e;this.editorService=t;this.fileConfigurationService=c;this.registerActions()}registerActions(){this.registerSwitchOutputAction(),this.registerShowOutputChannelsAction(),this.registerClearOutputAction(),this.registerToggleAutoScrollAction(),this.registerOpenActiveOutputFileAction(),this.registerOpenActiveOutputFileInAuxWindowAction(),this.registerShowLogsAction(),this.registerOpenLogFileAction(),this.registerConfigureActiveOutputLogLevelAction()}registerSwitchOutputAction(){this._register(g(class extends h{constructor(){super({id:"workbench.output.action.switchBetweenOutputs",title:s.localize("switchBetweenOutputs.label","Switch Output")})}async run(i,o){o&&i.get(m).showChannel(o,!0)}}));const e=new p("workbench.output.menu.switchOutput");this._register(V.appendMenuItem(p.ViewTitle,{submenu:e,title:s.localize("switchToOutput.label","Switch Output"),group:"navigation",when:f.equals("view",d),order:1,isSelection:!0}));const t=new Map;this._register(fe(()=>me(t.values())));const c=i=>{for(const o of i){const l=o.label,r=o.extensionId?"0_ext_outputchannels":"1_core_outputchannels";t.set(o.id,g(class extends h{constructor(){super({id:`workbench.action.output.show.${o.id}`,title:l,toggled:Z.isEqualTo(o.id),menu:{id:e,group:r}})}async run(a){return a.get(m).showChannel(o.id,!0)}}))}};c(this.outputService.getChannelDescriptors());const n=S.as(te.OutputChannels);this._register(n.onDidRegisterChannel(i=>{const o=this.outputService.getChannelDescriptor(i);o&&c([o])})),this._register(n.onDidRemoveChannel(i=>{t.get(i)?.dispose(),t.delete(i)}))}registerShowOutputChannelsAction(){this._register(g(class extends h{constructor(){super({id:"workbench.action.showOutputChannels",title:s.localize2("showOutputChannels","Show Output Channels..."),category:s.localize2("output","Output"),f1:!0})}async run(e){const t=e.get(m),c=e.get(_),n=[],i=[];for(const r of t.getChannelDescriptors())r.extensionId?n.push(r):i.push(r);const o=[];for(const{id:r,label:a}of n)o.push({id:r,label:a});n.length&&i.length&&o.push({type:"separator"});for(const{id:r,label:a}of i)o.push({id:r,label:a});const l=await c.pick(o,{placeHolder:s.localize("selectOutput","Select Output Channel")});if(l)return t.showChannel(l.id)}}))}registerClearOutputAction(){this._register(g(class extends h{constructor(){super({id:"workbench.output.action.clearOutput",title:s.localize2("clearOutput.label","Clear Output"),category:D.View,menu:[{id:p.ViewTitle,when:f.equals("view",d),group:"navigation",order:2},{id:p.CommandPalette},{id:p.EditorContext,when:Y}],icon:C.clearAll})}async run(e){const t=e.get(m),c=e.get(Ce),n=t.getActiveChannel();n&&(n.clear(),c.playSignal(we.clear))}}))}registerToggleAutoScrollAction(){this._register(g(class extends h{constructor(){super({id:"workbench.output.action.toggleAutoScroll",title:s.localize2("toggleAutoScroll","Toggle Auto Scrolling"),tooltip:s.localize("outputScrollOff","Turn Auto Scrolling Off"),menu:{id:p.ViewTitle,when:f.and(f.equals("view",d)),group:"navigation",order:3},icon:C.lock,toggled:{condition:J,icon:C.unlock,tooltip:s.localize("outputScrollOn","Turn Auto Scrolling On")}})}async run(e){const t=e.get(le).getActiveViewWithId(d);t.scrollLock=!t.scrollLock}}))}registerOpenActiveOutputFileAction(){const e=this;this._register(g(class extends h{constructor(){super({id:"workbench.action.openActiveLogOutputFile",title:s.localize2("openActiveOutputFile","Open Output in Editor"),menu:[{id:p.ViewTitle,when:f.equals("view",d),group:"navigation",order:4,isHiddenByDefault:!0}],icon:C.goToFile,precondition:x})}async run(){e.openActiveOutoutFile()}}))}registerOpenActiveOutputFileInAuxWindowAction(){const e=this;this._register(g(class extends h{constructor(){super({id:"workbench.action.openActiveLogOutputFileInNewWindow",title:s.localize2("openActiveOutputFileInNewWindow","Open Output in New Window"),menu:[{id:p.ViewTitle,when:f.equals("view",d),group:"navigation",order:5,isHiddenByDefault:!0}],icon:C.emptyWindow,precondition:x})}async run(){e.openActiveOutoutFile(ge)}}))}async openActiveOutoutFile(e){const t=this.getFileOutputChannelDescriptor();t&&(await this.fileConfigurationService.updateReadonly(t.file,!0),await this.editorService.openEditor({resource:t.file,options:{pinned:!0}},e))}getFileOutputChannelDescriptor(){const e=this.outputService.getActiveChannel();if(e){const t=this.outputService.getChannelDescriptors().filter(c=>c.id===e.id)[0];if(t?.file)return t}return null}registerConfigureActiveOutputLogLevelAction(){const e=this,t=new p("workbench.output.menu.logLevel");this._register(V.appendMenuItem(p.ViewTitle,{submenu:t,title:s.localize("logLevel.label","Set Log Level..."),group:"navigation",when:f.and(f.equals("view",d),ee),icon:C.gear,order:6}));let c=0;const n=i=>{this._register(g(class extends h{constructor(){super({id:`workbench.action.output.activeOutputLogLevel.${i}`,title:Oe(i).value,toggled:ie.isEqualTo(Ie(i)),menu:{id:t,order:c++,group:"0_level"}})}async run(o){const l=e.outputService.getActiveChannel();if(l){const r=e.outputService.getChannelDescriptor(l.id);if(r?.log&&r.file)return o.get(z).setLogLevel(r.file,i)}}}))};n(O.Trace),n(O.Debug),n(O.Info),n(O.Warning),n(O.Error),n(O.Off),this._register(g(class extends h{constructor(){super({id:"workbench.action.output.activeOutputLogLevelDefault",title:s.localize("logLevelDefault.label","Set As Default"),menu:{id:t,order:c,group:"1_default"},precondition:oe.negate()})}async run(i){const o=e.outputService.getActiveChannel();if(o){const l=e.outputService.getChannelDescriptor(o.id);if(l?.log&&l.file){const r=i.get(z).getLogLevel(l.file);return await i.get(Se).setDefaultLogLevel(r,l.extensionId)}}}}))}registerShowLogsAction(){this._register(g(class extends h{constructor(){super({id:"workbench.action.showLogs",title:s.localize2("showLogs","Show Logs..."),category:D.Developer,menu:{id:p.CommandPalette}})}async run(e){const t=e.get(m),c=e.get(_),n=[],i=[];for(const r of t.getChannelDescriptors())r.log&&(r.extensionId?n.push(r):i.push(r));const o=[];for(const{id:r,label:a}of i)o.push({id:r,label:a});n.length&&i.length&&o.push({type:"separator",label:s.localize("extensionLogs","Extension Logs")});for(const{id:r,label:a}of n)o.push({id:r,label:a});const l=await c.pick(o,{placeHolder:s.localize("selectlog","Select Log")});if(l)return t.showChannel(l.id)}}))}registerOpenLogFileAction(){this._register(g(class extends h{constructor(){super({id:"workbench.action.openLogFile",title:s.localize2("openLogFile","Open Log File..."),category:D.Developer,menu:{id:p.CommandPalette},metadata:{description:"workbench.action.openLogFile",args:[{name:"logFile",schema:{markdownDescription:s.localize("logFile",'The id of the log file to open, for example `"window"`. Currently the best way to get this is to get the ID by checking the `workbench.action.output.show.<id>` commands'),type:"string"}}]}})}async run(e,t){const c=e.get(m),n=e.get(_),i=e.get(R),o=e.get(W);let l;const r=t&&typeof t=="string"?t:void 0,a=[],T=[];for(const u of c.getChannelDescriptors())if(u.file&&u.log){const v={id:u.id,label:u.label,channel:u};u.extensionId?a.push(v):T.push(v),v.id===r&&(l=v)}if(!l){const u=[...a.sort((v,k)=>v.label.localeCompare(k.label))];u.length&&T.length&&(u.push({type:"separator"}),u.push(...T.sort((v,k)=>v.label.localeCompare(k.label)))),l=await n.pick(u,{placeHolder:s.localize("selectlogFile","Select Log File")})}if(l){const u=he(l.channel.file);await o.updateReadonly(u,!0),await i.openEditor({resource:u,options:{pinned:!0}})}}}))}};y=E([A(0,m),A(1,R),A(2,W)],y),S.as(re.Workbench).registerWorkbenchContribution(y,se.Restored),S.as(ae.Configuration).registerConfiguration({id:"output",order:30,title:s.localize("output","Output"),type:"object",properties:{"output.smartScroll.enabled":{type:"boolean",description:s.localize("output.smartScroll.enabled","Enable/disable the ability of smart scrolling in the output view. Smart scrolling allows you to lock scrolling automatically when you click in the output view and unlocks when you click in the last line."),default:!0,scope:pe.WINDOW,tags:["output"]}}});
