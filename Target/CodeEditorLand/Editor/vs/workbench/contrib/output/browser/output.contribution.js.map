{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/output/browser/output.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { KeyChord, KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n\tdispose,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { assertIsDefined } from \"../../../../base/common/types.js\";\nimport { registerEditorCommand } from \"../../../../editor/browser/editorExtensions.js\";\nimport { EditorOptions } from \"../../../../editor/common/config/editorOptions.js\";\nimport type { Position } from \"../../../../editor/common/core/position.js\";\nimport {\n\ttype WordCharacterClassifier,\n\tgetMapForWordSeparators,\n} from \"../../../../editor/common/core/wordCharacterClassifier.js\";\nimport { WordNavigationType } from \"../../../../editor/common/cursor/cursorWordOperations.js\";\nimport { EditorContextKeys } from \"../../../../editor/common/editorContextKeys.js\";\nimport { ModesRegistry } from \"../../../../editor/common/languages/modesRegistry.js\";\nimport type { ITextModel } from \"../../../../editor/common/model.js\";\nimport {\n\tWordLeftCommand,\n\tWordRightCommand,\n} from \"../../../../editor/contrib/wordOperations/browser/wordOperations.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { CONTEXT_ACCESSIBILITY_MODE_ENABLED } from \"../../../../platform/accessibility/common/accessibility.js\";\nimport {\n\tAccessibilitySignal,\n\tIAccessibilitySignalService,\n} from \"../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js\";\nimport { Categories } from \"../../../../platform/action/common/actionCommonCategories.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tMenuRegistry,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport {\n\tExtensions as ConfigurationExtensions,\n\tConfigurationScope,\n\ttype IConfigurationRegistry,\n} from \"../../../../platform/configuration/common/configurationRegistry.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IsWindowsContext } from \"../../../../platform/contextkey/common/contextkeys.js\";\nimport { SyncDescriptor } from \"../../../../platform/instantiation/common/descriptors.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport {\n\tILoggerService,\n\tLogLevel,\n\tLogLevelToLocalizedString,\n\tLogLevelToString,\n} from \"../../../../platform/log/common/log.js\";\nimport {\n\tIQuickInputService,\n\ttype IQuickPickItem,\n\ttype IQuickPickSeparator,\n\ttype QuickPickInput,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { registerIcon } from \"../../../../platform/theme/common/iconRegistry.js\";\nimport { ViewPaneContainer } from \"../../../browser/parts/views/viewPaneContainer.js\";\nimport { FocusedViewContext } from \"../../../common/contextkeys.js\";\nimport {\n\ttype IWorkbenchContribution,\n\ttype IWorkbenchContributionsRegistry,\n\tExtensions as WorkbenchExtensions,\n} from \"../../../common/contributions.js\";\nimport {\n\ttype IViewContainersRegistry,\n\ttype IViewsRegistry,\n\ttype ViewContainer,\n\tExtensions as ViewContainerExtensions,\n\tViewContainerLocation,\n} from \"../../../common/views.js\";\nimport {\n\tAUX_WINDOW_GROUP,\n\ttype AUX_WINDOW_GROUP_TYPE,\n\tIEditorService,\n} from \"../../../services/editor/common/editorService.js\";\nimport { IFilesConfigurationService } from \"../../../services/filesConfiguration/common/filesConfigurationService.js\";\nimport { LifecyclePhase } from \"../../../services/lifecycle/common/lifecycle.js\";\nimport {\n\tACTIVE_OUTPUT_CHANNEL_CONTEXT,\n\tCONTEXT_ACTIVE_FILE_OUTPUT,\n\tCONTEXT_ACTIVE_OUTPUT_LEVEL,\n\tCONTEXT_ACTIVE_OUTPUT_LEVEL_IS_DEFAULT,\n\tCONTEXT_ACTIVE_OUTPUT_LEVEL_SETTABLE,\n\tCONTEXT_IN_OUTPUT,\n\tCONTEXT_OUTPUT_SCROLL_LOCK,\n\tExtensions,\n\ttype IFileOutputChannelDescriptor,\n\ttype IOutputChannelDescriptor,\n\ttype IOutputChannelRegistry,\n\tIOutputService,\n\tLOG_MIME,\n\tLOG_MODE_ID,\n\tOUTPUT_MIME,\n\tOUTPUT_MODE_ID,\n\tOUTPUT_VIEW_ID,\n} from \"../../../services/output/common/output.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport { IDefaultLogLevelsService } from \"../../logs/common/defaultLogLevels.js\";\nimport { OutputService } from \"./outputServices.js\";\nimport { OutputViewPane } from \"./outputView.js\";\n\n// Register Service\nregisterSingleton(IOutputService, OutputService, InstantiationType.Delayed);\n\n// Register Output Mode\nModesRegistry.registerLanguage({\n\tid: OUTPUT_MODE_ID,\n\textensions: [],\n\tmimetypes: [OUTPUT_MIME],\n});\n\n// Register Log Output Mode\nModesRegistry.registerLanguage({\n\tid: LOG_MODE_ID,\n\textensions: [],\n\tmimetypes: [LOG_MIME],\n});\n\n// register output container\nconst outputViewIcon = registerIcon(\n\t\"output-view-icon\",\n\tCodicon.output,\n\tnls.localize(\"outputViewIcon\", \"View icon of the output view.\"),\n);\nconst VIEW_CONTAINER: ViewContainer = Registry.as<IViewContainersRegistry>(\n\tViewContainerExtensions.ViewContainersRegistry,\n).registerViewContainer(\n\t{\n\t\tid: OUTPUT_VIEW_ID,\n\t\ttitle: nls.localize2(\"output\", \"Output\"),\n\t\ticon: outputViewIcon,\n\t\torder: 1,\n\t\tctorDescriptor: new SyncDescriptor(ViewPaneContainer, [\n\t\t\tOUTPUT_VIEW_ID,\n\t\t\t{ mergeViewWithContainerWhenSingleView: true },\n\t\t]),\n\t\tstorageId: OUTPUT_VIEW_ID,\n\t\thideIfEmpty: true,\n\t},\n\tViewContainerLocation.Panel,\n\t{ doNotRegisterOpenCommand: true },\n);\n\nRegistry.as<IViewsRegistry>(\n\tViewContainerExtensions.ViewsRegistry,\n).registerViews(\n\t[\n\t\t{\n\t\t\tid: OUTPUT_VIEW_ID,\n\t\t\tname: nls.localize2(\"output\", \"Output\"),\n\t\t\tcontainerIcon: outputViewIcon,\n\t\t\tcanMoveView: true,\n\t\t\tcanToggleVisibility: false,\n\t\t\tctorDescriptor: new SyncDescriptor(OutputViewPane),\n\t\t\topenCommandActionDescriptor: {\n\t\t\t\tid: \"workbench.action.output.toggleOutput\",\n\t\t\t\tmnemonicTitle: nls.localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"miToggleOutput\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"&&Output\",\n\t\t\t\t),\n\t\t\t\tkeybindings: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyU,\n\t\t\t\t\tlinux: {\n\t\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyH,\n\t\t\t\t\t\t), // On Ubuntu Ctrl+Shift+U is taken by some global OS command\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\torder: 1,\n\t\t\t},\n\t\t},\n\t],\n\tVIEW_CONTAINER,\n);\n\nclass OutputContribution extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IOutputService private readonly outputService: IOutputService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IFilesConfigurationService\n\t\tprivate readonly fileConfigurationService: IFilesConfigurationService,\n\t) {\n\t\tsuper();\n\t\tthis.registerActions();\n\t}\n\n\tprivate registerActions(): void {\n\t\tthis.registerSwitchOutputAction();\n\t\tthis.registerShowOutputChannelsAction();\n\t\tthis.registerClearOutputAction();\n\t\tthis.registerToggleAutoScrollAction();\n\t\tthis.registerOpenActiveOutputFileAction();\n\t\tthis.registerOpenActiveOutputFileInAuxWindowAction();\n\t\tthis.registerShowLogsAction();\n\t\tthis.registerOpenLogFileAction();\n\t\tthis.registerConfigureActiveOutputLogLevelAction();\n\t}\n\n\tprivate registerSwitchOutputAction(): void {\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: `workbench.output.action.switchBetweenOutputs`,\n\t\t\t\t\t\t\ttitle: nls.localize(\n\t\t\t\t\t\t\t\t\"switchBetweenOutputs.label\",\n\t\t\t\t\t\t\t\t\"Switch Output\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tasync run(\n\t\t\t\t\t\taccessor: ServicesAccessor,\n\t\t\t\t\t\tchannelId: string,\n\t\t\t\t\t): Promise<void> {\n\t\t\t\t\t\tif (channelId) {\n\t\t\t\t\t\t\taccessor\n\t\t\t\t\t\t\t\t.get(IOutputService)\n\t\t\t\t\t\t\t\t.showChannel(channelId, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tconst switchOutputMenu = new MenuId(\n\t\t\t\"workbench.output.menu.switchOutput\",\n\t\t);\n\t\tthis._register(\n\t\t\tMenuRegistry.appendMenuItem(MenuId.ViewTitle, {\n\t\t\t\tsubmenu: switchOutputMenu,\n\t\t\t\ttitle: nls.localize(\"switchToOutput.label\", \"Switch Output\"),\n\t\t\t\tgroup: \"navigation\",\n\t\t\t\twhen: ContextKeyExpr.equals(\"view\", OUTPUT_VIEW_ID),\n\t\t\t\torder: 1,\n\t\t\t\tisSelection: true,\n\t\t\t}),\n\t\t);\n\t\tconst registeredChannels = new Map<string, IDisposable>();\n\t\tthis._register(\n\t\t\ttoDisposable(() => dispose(registeredChannels.values())),\n\t\t);\n\t\tconst registerOutputChannels = (\n\t\t\tchannels: IOutputChannelDescriptor[],\n\t\t) => {\n\t\t\tfor (const channel of channels) {\n\t\t\t\tconst title = channel.label;\n\t\t\t\tconst group = channel.extensionId\n\t\t\t\t\t? \"0_ext_outputchannels\"\n\t\t\t\t\t: \"1_core_outputchannels\";\n\t\t\t\tregisteredChannels.set(\n\t\t\t\t\tchannel.id,\n\t\t\t\t\tregisterAction2(\n\t\t\t\t\t\tclass extends Action2 {\n\t\t\t\t\t\t\tconstructor() {\n\t\t\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\t\t\tid: `workbench.action.output.show.${channel.id}`,\n\t\t\t\t\t\t\t\t\ttitle,\n\t\t\t\t\t\t\t\t\ttoggled:\n\t\t\t\t\t\t\t\t\t\tACTIVE_OUTPUT_CHANNEL_CONTEXT.isEqualTo(\n\t\t\t\t\t\t\t\t\t\t\tchannel.id,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tmenu: {\n\t\t\t\t\t\t\t\t\t\tid: switchOutputMenu,\n\t\t\t\t\t\t\t\t\t\tgroup,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tasync run(\n\t\t\t\t\t\t\t\taccessor: ServicesAccessor,\n\t\t\t\t\t\t\t): Promise<void> {\n\t\t\t\t\t\t\t\treturn accessor\n\t\t\t\t\t\t\t\t\t.get(IOutputService)\n\t\t\t\t\t\t\t\t\t.showChannel(channel.id, true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\t\tregisterOutputChannels(this.outputService.getChannelDescriptors());\n\t\tconst outputChannelRegistry = Registry.as<IOutputChannelRegistry>(\n\t\t\tExtensions.OutputChannels,\n\t\t);\n\t\tthis._register(\n\t\t\toutputChannelRegistry.onDidRegisterChannel((e) => {\n\t\t\t\tconst channel = this.outputService.getChannelDescriptor(e);\n\t\t\t\tif (channel) {\n\t\t\t\t\tregisterOutputChannels([channel]);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\toutputChannelRegistry.onDidRemoveChannel((e) => {\n\t\t\t\tregisteredChannels.get(e)?.dispose();\n\t\t\t\tregisteredChannels.delete(e);\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate registerShowOutputChannelsAction(): void {\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: \"workbench.action.showOutputChannels\",\n\t\t\t\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\t\t\t\"showOutputChannels\",\n\t\t\t\t\t\t\t\t\"Show Output Channels...\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tcategory: nls.localize2(\"output\", \"Output\"),\n\t\t\t\t\t\t\tf1: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\t\t\tconst outputService = accessor.get(IOutputService);\n\t\t\t\t\t\tconst quickInputService =\n\t\t\t\t\t\t\taccessor.get(IQuickInputService);\n\t\t\t\t\t\tconst extensionChannels = [],\n\t\t\t\t\t\t\tcoreChannels = [];\n\t\t\t\t\t\tfor (const channel of outputService.getChannelDescriptors()) {\n\t\t\t\t\t\t\tif (channel.extensionId) {\n\t\t\t\t\t\t\t\textensionChannels.push(channel);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcoreChannels.push(channel);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst entries: (\n\t\t\t\t\t\t\t| { id: string; label: string }\n\t\t\t\t\t\t\t| IQuickPickSeparator\n\t\t\t\t\t\t)[] = [];\n\t\t\t\t\t\tfor (const { id, label } of extensionChannels) {\n\t\t\t\t\t\t\tentries.push({ id, label });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (extensionChannels.length && coreChannels.length) {\n\t\t\t\t\t\t\tentries.push({ type: \"separator\" });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const { id, label } of coreChannels) {\n\t\t\t\t\t\t\tentries.push({ id, label });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst entry = await quickInputService.pick(entries, {\n\t\t\t\t\t\t\tplaceHolder: nls.localize(\n\t\t\t\t\t\t\t\t\"selectOutput\",\n\t\t\t\t\t\t\t\t\"Select Output Channel\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (entry) {\n\t\t\t\t\t\t\treturn outputService.showChannel(entry.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate registerClearOutputAction(): void {\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: `workbench.output.action.clearOutput`,\n\t\t\t\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\t\t\t\"clearOutput.label\",\n\t\t\t\t\t\t\t\t\"Clear Output\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tcategory: Categories.View,\n\t\t\t\t\t\t\tmenu: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\t\t\t\t\twhen: ContextKeyExpr.equals(\n\t\t\t\t\t\t\t\t\t\t\"view\",\n\t\t\t\t\t\t\t\t\t\tOUTPUT_VIEW_ID,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\t\t\t\torder: 2,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tid: MenuId.EditorContext,\n\t\t\t\t\t\t\t\t\twhen: CONTEXT_IN_OUTPUT,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\ticon: Codicon.clearAll,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\t\t\tconst outputService = accessor.get(IOutputService);\n\t\t\t\t\t\tconst accessibilitySignalService = accessor.get(\n\t\t\t\t\t\t\tIAccessibilitySignalService,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst activeChannel = outputService.getActiveChannel();\n\t\t\t\t\t\tif (activeChannel) {\n\t\t\t\t\t\t\tactiveChannel.clear();\n\t\t\t\t\t\t\taccessibilitySignalService.playSignal(\n\t\t\t\t\t\t\t\tAccessibilitySignal.clear,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate registerToggleAutoScrollAction(): void {\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: `workbench.output.action.toggleAutoScroll`,\n\t\t\t\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\t\t\t\"toggleAutoScroll\",\n\t\t\t\t\t\t\t\t\"Toggle Auto Scrolling\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttooltip: nls.localize(\n\t\t\t\t\t\t\t\t\"outputScrollOff\",\n\t\t\t\t\t\t\t\t\"Turn Auto Scrolling Off\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tmenu: {\n\t\t\t\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\t\t\t\t\"view\",\n\t\t\t\t\t\t\t\t\t\tOUTPUT_VIEW_ID,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\t\t\torder: 3,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ticon: Codicon.lock,\n\t\t\t\t\t\t\ttoggled: {\n\t\t\t\t\t\t\t\tcondition: CONTEXT_OUTPUT_SCROLL_LOCK,\n\t\t\t\t\t\t\t\ticon: Codicon.unlock,\n\t\t\t\t\t\t\t\ttooltip: nls.localize(\n\t\t\t\t\t\t\t\t\t\"outputScrollOn\",\n\t\t\t\t\t\t\t\t\t\"Turn Auto Scrolling On\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\t\t\tconst outputView = accessor\n\t\t\t\t\t\t\t.get(IViewsService)\n\t\t\t\t\t\t\t.getActiveViewWithId<OutputViewPane>(\n\t\t\t\t\t\t\t\tOUTPUT_VIEW_ID,\n\t\t\t\t\t\t\t)!;\n\t\t\t\t\t\toutputView.scrollLock = !outputView.scrollLock;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate registerOpenActiveOutputFileAction(): void {\n\t\tconst that = this;\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: `workbench.action.openActiveLogOutputFile`,\n\t\t\t\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\t\t\t\"openActiveOutputFile\",\n\t\t\t\t\t\t\t\t\"Open Output in Editor\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tmenu: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\t\t\t\t\twhen: ContextKeyExpr.equals(\n\t\t\t\t\t\t\t\t\t\t\"view\",\n\t\t\t\t\t\t\t\t\t\tOUTPUT_VIEW_ID,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\t\t\t\torder: 4,\n\t\t\t\t\t\t\t\t\tisHiddenByDefault: true,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\ticon: Codicon.goToFile,\n\t\t\t\t\t\t\tprecondition: CONTEXT_ACTIVE_FILE_OUTPUT,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tasync run(): Promise<void> {\n\t\t\t\t\t\tthat.openActiveOutoutFile();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate registerOpenActiveOutputFileInAuxWindowAction(): void {\n\t\tconst that = this;\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: `workbench.action.openActiveLogOutputFileInNewWindow`,\n\t\t\t\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\t\t\t\"openActiveOutputFileInNewWindow\",\n\t\t\t\t\t\t\t\t\"Open Output in New Window\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tmenu: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\t\t\t\t\twhen: ContextKeyExpr.equals(\n\t\t\t\t\t\t\t\t\t\t\"view\",\n\t\t\t\t\t\t\t\t\t\tOUTPUT_VIEW_ID,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\t\t\t\torder: 5,\n\t\t\t\t\t\t\t\t\tisHiddenByDefault: true,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\ticon: Codicon.emptyWindow,\n\t\t\t\t\t\t\tprecondition: CONTEXT_ACTIVE_FILE_OUTPUT,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tasync run(): Promise<void> {\n\t\t\t\t\t\tthat.openActiveOutoutFile(AUX_WINDOW_GROUP);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate async openActiveOutoutFile(\n\t\tgroup?: AUX_WINDOW_GROUP_TYPE,\n\t): Promise<void> {\n\t\tconst fileOutputChannelDescriptor =\n\t\t\tthis.getFileOutputChannelDescriptor();\n\t\tif (fileOutputChannelDescriptor) {\n\t\t\tawait this.fileConfigurationService.updateReadonly(\n\t\t\t\tfileOutputChannelDescriptor.file,\n\t\t\t\ttrue,\n\t\t\t);\n\t\t\tawait this.editorService.openEditor(\n\t\t\t\t{\n\t\t\t\t\tresource: fileOutputChannelDescriptor.file,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tpinned: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tgroup,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate getFileOutputChannelDescriptor(): IFileOutputChannelDescriptor | null {\n\t\tconst channel = this.outputService.getActiveChannel();\n\t\tif (channel) {\n\t\t\tconst descriptor = this.outputService\n\t\t\t\t.getChannelDescriptors()\n\t\t\t\t.filter((c) => c.id === channel.id)[0];\n\t\t\tif (descriptor?.file) {\n\t\t\t\treturn <IFileOutputChannelDescriptor>descriptor;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate registerConfigureActiveOutputLogLevelAction(): void {\n\t\tconst that = this;\n\t\tconst logLevelMenu = new MenuId(\"workbench.output.menu.logLevel\");\n\t\tthis._register(\n\t\t\tMenuRegistry.appendMenuItem(MenuId.ViewTitle, {\n\t\t\t\tsubmenu: logLevelMenu,\n\t\t\t\ttitle: nls.localize(\"logLevel.label\", \"Set Log Level...\"),\n\t\t\t\tgroup: \"navigation\",\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tContextKeyExpr.equals(\"view\", OUTPUT_VIEW_ID),\n\t\t\t\t\tCONTEXT_ACTIVE_OUTPUT_LEVEL_SETTABLE,\n\t\t\t\t),\n\t\t\t\ticon: Codicon.gear,\n\t\t\t\torder: 6,\n\t\t\t}),\n\t\t);\n\n\t\tlet order = 0;\n\t\tconst registerLogLevel = (logLevel: LogLevel) => {\n\t\t\tthis._register(\n\t\t\t\tregisterAction2(\n\t\t\t\t\tclass extends Action2 {\n\t\t\t\t\t\tconstructor() {\n\t\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\t\tid: `workbench.action.output.activeOutputLogLevel.${logLevel}`,\n\t\t\t\t\t\t\t\ttitle: LogLevelToLocalizedString(logLevel)\n\t\t\t\t\t\t\t\t\t.value,\n\t\t\t\t\t\t\t\ttoggled: CONTEXT_ACTIVE_OUTPUT_LEVEL.isEqualTo(\n\t\t\t\t\t\t\t\t\tLogLevelToString(logLevel),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tmenu: {\n\t\t\t\t\t\t\t\t\tid: logLevelMenu,\n\t\t\t\t\t\t\t\t\torder: order++,\n\t\t\t\t\t\t\t\t\tgroup: \"0_level\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\t\t\t\tconst channel =\n\t\t\t\t\t\t\t\tthat.outputService.getActiveChannel();\n\t\t\t\t\t\t\tif (channel) {\n\t\t\t\t\t\t\t\tconst channelDescriptor =\n\t\t\t\t\t\t\t\t\tthat.outputService.getChannelDescriptor(\n\t\t\t\t\t\t\t\t\t\tchannel.id,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tchannelDescriptor?.log &&\n\t\t\t\t\t\t\t\t\tchannelDescriptor.file\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\treturn accessor\n\t\t\t\t\t\t\t\t\t\t.get(ILoggerService)\n\t\t\t\t\t\t\t\t\t\t.setLogLevel(\n\t\t\t\t\t\t\t\t\t\t\tchannelDescriptor.file,\n\t\t\t\t\t\t\t\t\t\t\tlogLevel,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t};\n\n\t\tregisterLogLevel(LogLevel.Trace);\n\t\tregisterLogLevel(LogLevel.Debug);\n\t\tregisterLogLevel(LogLevel.Info);\n\t\tregisterLogLevel(LogLevel.Warning);\n\t\tregisterLogLevel(LogLevel.Error);\n\t\tregisterLogLevel(LogLevel.Off);\n\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: `workbench.action.output.activeOutputLogLevelDefault`,\n\t\t\t\t\t\t\ttitle: nls.localize(\n\t\t\t\t\t\t\t\t\"logLevelDefault.label\",\n\t\t\t\t\t\t\t\t\"Set As Default\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tmenu: {\n\t\t\t\t\t\t\t\tid: logLevelMenu,\n\t\t\t\t\t\t\t\torder,\n\t\t\t\t\t\t\t\tgroup: \"1_default\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tprecondition:\n\t\t\t\t\t\t\t\tCONTEXT_ACTIVE_OUTPUT_LEVEL_IS_DEFAULT.negate(),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\t\t\tconst channel = that.outputService.getActiveChannel();\n\t\t\t\t\t\tif (channel) {\n\t\t\t\t\t\t\tconst channelDescriptor =\n\t\t\t\t\t\t\t\tthat.outputService.getChannelDescriptor(\n\t\t\t\t\t\t\t\t\tchannel.id,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tchannelDescriptor?.log &&\n\t\t\t\t\t\t\t\tchannelDescriptor.file\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tconst logLevel = accessor\n\t\t\t\t\t\t\t\t\t.get(ILoggerService)\n\t\t\t\t\t\t\t\t\t.getLogLevel(channelDescriptor.file);\n\t\t\t\t\t\t\t\treturn await accessor\n\t\t\t\t\t\t\t\t\t.get(IDefaultLogLevelsService)\n\t\t\t\t\t\t\t\t\t.setDefaultLogLevel(\n\t\t\t\t\t\t\t\t\t\tlogLevel,\n\t\t\t\t\t\t\t\t\t\tchannelDescriptor.extensionId,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate registerShowLogsAction(): void {\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: \"workbench.action.showLogs\",\n\t\t\t\t\t\t\ttitle: nls.localize2(\"showLogs\", \"Show Logs...\"),\n\t\t\t\t\t\t\tcategory: Categories.Developer,\n\t\t\t\t\t\t\tmenu: {\n\t\t\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\t\t\tconst outputService = accessor.get(IOutputService);\n\t\t\t\t\t\tconst quickInputService =\n\t\t\t\t\t\t\taccessor.get(IQuickInputService);\n\t\t\t\t\t\tconst extensionLogs = [],\n\t\t\t\t\t\t\tlogs = [];\n\t\t\t\t\t\tfor (const channel of outputService.getChannelDescriptors()) {\n\t\t\t\t\t\t\tif (channel.log) {\n\t\t\t\t\t\t\t\tif (channel.extensionId) {\n\t\t\t\t\t\t\t\t\textensionLogs.push(channel);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tlogs.push(channel);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst entries: (\n\t\t\t\t\t\t\t| { id: string; label: string }\n\t\t\t\t\t\t\t| IQuickPickSeparator\n\t\t\t\t\t\t)[] = [];\n\t\t\t\t\t\tfor (const { id, label } of logs) {\n\t\t\t\t\t\t\tentries.push({ id, label });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (extensionLogs.length && logs.length) {\n\t\t\t\t\t\t\tentries.push({\n\t\t\t\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\t\t\t\tlabel: nls.localize(\n\t\t\t\t\t\t\t\t\t\"extensionLogs\",\n\t\t\t\t\t\t\t\t\t\"Extension Logs\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const { id, label } of extensionLogs) {\n\t\t\t\t\t\t\tentries.push({ id, label });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst entry = await quickInputService.pick(entries, {\n\t\t\t\t\t\t\tplaceHolder: nls.localize(\n\t\t\t\t\t\t\t\t\"selectlog\",\n\t\t\t\t\t\t\t\t\"Select Log\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (entry) {\n\t\t\t\t\t\t\treturn outputService.showChannel(entry.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate registerOpenLogFileAction(): void {\n\t\tinterface IOutputChannelQuickPickItem extends IQuickPickItem {\n\t\t\tchannel: IOutputChannelDescriptor;\n\t\t}\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: \"workbench.action.openLogFile\",\n\t\t\t\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\t\t\t\"openLogFile\",\n\t\t\t\t\t\t\t\t\"Open Log File...\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tcategory: Categories.Developer,\n\t\t\t\t\t\t\tmenu: {\n\t\t\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmetadata: {\n\t\t\t\t\t\t\t\tdescription: \"workbench.action.openLogFile\",\n\t\t\t\t\t\t\t\targs: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: \"logFile\",\n\t\t\t\t\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\t\t\t\t\tmarkdownDescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\t\t\t\"logFile\",\n\t\t\t\t\t\t\t\t\t\t\t\t'The id of the log file to open, for example `\"window\"`. Currently the best way to get this is to get the ID by checking the `workbench.action.output.show.<id>` commands',\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tasync run(\n\t\t\t\t\t\taccessor: ServicesAccessor,\n\t\t\t\t\t\targs?: unknown,\n\t\t\t\t\t): Promise<void> {\n\t\t\t\t\t\tconst outputService = accessor.get(IOutputService);\n\t\t\t\t\t\tconst quickInputService =\n\t\t\t\t\t\t\taccessor.get(IQuickInputService);\n\t\t\t\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\t\t\t\tconst fileConfigurationService = accessor.get(\n\t\t\t\t\t\t\tIFilesConfigurationService,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tlet entry: IOutputChannelQuickPickItem | undefined;\n\t\t\t\t\t\tconst argName =\n\t\t\t\t\t\t\targs && typeof args === \"string\" ? args : undefined;\n\t\t\t\t\t\tconst extensionChannels: IOutputChannelQuickPickItem[] =\n\t\t\t\t\t\t\t[];\n\t\t\t\t\t\tconst coreChannels: IOutputChannelQuickPickItem[] = [];\n\t\t\t\t\t\tfor (const c of outputService.getChannelDescriptors()) {\n\t\t\t\t\t\t\tif (c.file && c.log) {\n\t\t\t\t\t\t\t\tconst e = {\n\t\t\t\t\t\t\t\t\tid: c.id,\n\t\t\t\t\t\t\t\t\tlabel: c.label,\n\t\t\t\t\t\t\t\t\tchannel: c,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tif (c.extensionId) {\n\t\t\t\t\t\t\t\t\textensionChannels.push(e);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcoreChannels.push(e);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (e.id === argName) {\n\t\t\t\t\t\t\t\t\tentry = e;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!entry) {\n\t\t\t\t\t\t\tconst entries: QuickPickInput[] = [\n\t\t\t\t\t\t\t\t...extensionChannels.sort((a, b) =>\n\t\t\t\t\t\t\t\t\ta.label.localeCompare(b.label),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\tif (entries.length && coreChannels.length) {\n\t\t\t\t\t\t\t\tentries.push({ type: \"separator\" });\n\t\t\t\t\t\t\t\tentries.push(\n\t\t\t\t\t\t\t\t\t...coreChannels.sort((a, b) =>\n\t\t\t\t\t\t\t\t\t\ta.label.localeCompare(b.label),\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tentry = <IOutputChannelQuickPickItem | undefined>(\n\t\t\t\t\t\t\t\tawait quickInputService.pick(entries, {\n\t\t\t\t\t\t\t\t\tplaceHolder: nls.localize(\n\t\t\t\t\t\t\t\t\t\t\"selectlogFile\",\n\t\t\t\t\t\t\t\t\t\t\"Select Log File\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (entry) {\n\t\t\t\t\t\t\tconst resource = assertIsDefined(\n\t\t\t\t\t\t\t\tentry.channel.file,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tawait fileConfigurationService.updateReadonly(\n\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tawait editorService.openEditor({\n\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\tpinned: true,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n).registerWorkbenchContribution(OutputContribution, LifecyclePhase.Restored);\n\nRegistry.as<IConfigurationRegistry>(\n\tConfigurationExtensions.Configuration,\n).registerConfiguration({\n\tid: \"output\",\n\torder: 30,\n\ttitle: nls.localize(\"output\", \"Output\"),\n\ttype: \"object\",\n\tproperties: {\n\t\t\"output.smartScroll.enabled\": {\n\t\t\ttype: \"boolean\",\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"output.smartScroll.enabled\",\n\t\t\t\t\"Enable/disable the ability of smart scrolling in the output view. Smart scrolling allows you to lock scrolling automatically when you click in the output view and unlocks when you click in the last line.\",\n\t\t\t),\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.WINDOW,\n\t\t\ttags: [\"output\"],\n\t\t},\n\t},\n});\n\n// Accessibility navigation commands should only be enabled on windows since they are tuned to what NVDA expects\nexport class CursorWordAccessibilityLeft extends WordLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: false,\n\t\t\twordNavigationType: WordNavigationType.WordAccessibility,\n\t\t\tid: \"cursorWordAccessibilityLeft\",\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: ContextKeyExpr.and(\n\t\t\t\t\tEditorContextKeys.textInputFocus,\n\t\t\t\t\tCONTEXT_ACCESSIBILITY_MODE_ENABLED,\n\t\t\t\t\tIsWindowsContext,\n\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\tFocusedViewContext.key,\n\t\t\t\t\t\tOUTPUT_VIEW_ID,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.LeftArrow,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t});\n\t}\n\n\tprotected override _move(\n\t\twordCharacterClassifier: WordCharacterClassifier,\n\t\tmodel: ITextModel,\n\t\tposition: Position,\n\t\twordNavigationType: WordNavigationType,\n\t\thasMulticursor: boolean,\n\t): Position {\n\t\treturn super._move(\n\t\t\tgetMapForWordSeparators(\n\t\t\t\tEditorOptions.wordSeparators.defaultValue,\n\t\t\t\twordCharacterClassifier.intlSegmenterLocales,\n\t\t\t),\n\t\t\tmodel,\n\t\t\tposition,\n\t\t\twordNavigationType,\n\t\t\thasMulticursor,\n\t\t);\n\t}\n}\n\nexport class CursorWordAccessibilityLeftSelect extends WordLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: true,\n\t\t\twordNavigationType: WordNavigationType.WordAccessibility,\n\t\t\tid: \"cursorWordAccessibilityLeftSelect\",\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: ContextKeyExpr.and(\n\t\t\t\t\tEditorContextKeys.textInputFocus,\n\t\t\t\t\tCONTEXT_ACCESSIBILITY_MODE_ENABLED,\n\t\t\t\t\tIsWindowsContext,\n\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\tFocusedViewContext.key,\n\t\t\t\t\t\tOUTPUT_VIEW_ID,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.LeftArrow,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t});\n\t}\n\n\tprotected override _move(\n\t\twordCharacterClassifier: WordCharacterClassifier,\n\t\tmodel: ITextModel,\n\t\tposition: Position,\n\t\twordNavigationType: WordNavigationType,\n\t\thasMulticursor: boolean,\n\t): Position {\n\t\treturn super._move(\n\t\t\tgetMapForWordSeparators(\n\t\t\t\tEditorOptions.wordSeparators.defaultValue,\n\t\t\t\twordCharacterClassifier.intlSegmenterLocales,\n\t\t\t),\n\t\t\tmodel,\n\t\t\tposition,\n\t\t\twordNavigationType,\n\t\t\thasMulticursor,\n\t\t);\n\t}\n}\n\nexport class CursorWordAccessibilityRight extends WordRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: false,\n\t\t\twordNavigationType: WordNavigationType.WordAccessibility,\n\t\t\tid: \"cursorWordAccessibilityRight\",\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: ContextKeyExpr.and(\n\t\t\t\t\tEditorContextKeys.textInputFocus,\n\t\t\t\t\tCONTEXT_ACCESSIBILITY_MODE_ENABLED,\n\t\t\t\t\tIsWindowsContext,\n\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\tFocusedViewContext.key,\n\t\t\t\t\t\tOUTPUT_VIEW_ID,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.RightArrow,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t});\n\t}\n\n\tprotected override _move(\n\t\twordCharacterClassifier: WordCharacterClassifier,\n\t\tmodel: ITextModel,\n\t\tposition: Position,\n\t\twordNavigationType: WordNavigationType,\n\t\thasMulticursor: boolean,\n\t): Position {\n\t\treturn super._move(\n\t\t\tgetMapForWordSeparators(\n\t\t\t\tEditorOptions.wordSeparators.defaultValue,\n\t\t\t\twordCharacterClassifier.intlSegmenterLocales,\n\t\t\t),\n\t\t\tmodel,\n\t\t\tposition,\n\t\t\twordNavigationType,\n\t\t\thasMulticursor,\n\t\t);\n\t}\n}\n\nexport class CursorWordAccessibilityRightSelect extends WordRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: true,\n\t\t\twordNavigationType: WordNavigationType.WordAccessibility,\n\t\t\tid: \"cursorWordAccessibilityRightSelect\",\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: ContextKeyExpr.and(\n\t\t\t\t\tEditorContextKeys.textInputFocus,\n\t\t\t\t\tCONTEXT_ACCESSIBILITY_MODE_ENABLED,\n\t\t\t\t\tIsWindowsContext,\n\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\tFocusedViewContext.key,\n\t\t\t\t\t\tOUTPUT_VIEW_ID,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.RightArrow,\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t},\n\t\t});\n\t}\n\n\tprotected override _move(\n\t\twordCharacterClassifier: WordCharacterClassifier,\n\t\tmodel: ITextModel,\n\t\tposition: Position,\n\t\twordNavigationType: WordNavigationType,\n\t\thasMulticursor: boolean,\n\t): Position {\n\t\treturn super._move(\n\t\t\tgetMapForWordSeparators(\n\t\t\t\tEditorOptions.wordSeparators.defaultValue,\n\t\t\t\twordCharacterClassifier.intlSegmenterLocales,\n\t\t\t),\n\t\t\tmodel,\n\t\t\tposition,\n\t\t\twordNavigationType,\n\t\t\thasMulticursor,\n\t\t);\n\t}\n}\nregisterEditorCommand(new CursorWordAccessibilityLeft());\nregisterEditorCommand(new CursorWordAccessibilityLeftSelect());\nregisterEditorCommand(new CursorWordAccessibilityRight());\nregisterEditorCommand(new CursorWordAccessibilityRightSelect());\n"],
  "mappings": "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",
  "names": []
}
