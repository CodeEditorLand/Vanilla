{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/output/browser/output.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\nimport { KeyMod, KeyChord, KeyCode } from '../../../../base/common/keyCodes.js';\nimport { ModesRegistry } from '../../../../editor/common/languages/modesRegistry.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { MenuId, registerAction2, Action2, MenuRegistry } from '../../../../platform/actions/common/actions.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { OutputService } from './outputServices.js';\nimport { OUTPUT_MODE_ID, OUTPUT_MIME, OUTPUT_VIEW_ID, IOutputService, CONTEXT_IN_OUTPUT, LOG_MODE_ID, LOG_MIME, CONTEXT_ACTIVE_FILE_OUTPUT, CONTEXT_OUTPUT_SCROLL_LOCK, IOutputChannelDescriptor, IFileOutputChannelDescriptor, ACTIVE_OUTPUT_CHANNEL_CONTEXT, CONTEXT_ACTIVE_OUTPUT_LEVEL_SETTABLE, IOutputChannelRegistry, Extensions, CONTEXT_ACTIVE_OUTPUT_LEVEL, CONTEXT_ACTIVE_OUTPUT_LEVEL_IS_DEFAULT } from '../../../services/output/common/output.js';\nimport { OutputViewPane } from './outputView.js';\nimport { SyncDescriptor } from '../../../../platform/instantiation/common/descriptors.js';\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions, IWorkbenchContribution } from '../../../common/contributions.js';\nimport { LifecyclePhase } from '../../../services/lifecycle/common/lifecycle.js';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ViewContainer, IViewContainersRegistry, ViewContainerLocation, Extensions as ViewContainerExtensions, IViewsRegistry } from '../../../common/views.js';\nimport { IViewsService } from '../../../services/views/common/viewsService.js';\nimport { ViewPaneContainer } from '../../../browser/parts/views/viewPaneContainer.js';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions, ConfigurationScope } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { IQuickPickItem, IQuickInputService, IQuickPickSeparator, QuickPickInput } from '../../../../platform/quickinput/common/quickInput.js';\nimport { AUX_WINDOW_GROUP, AUX_WINDOW_GROUP_TYPE, IEditorService } from '../../../services/editor/common/editorService.js';\nimport { assertIsDefined } from '../../../../base/common/types.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nimport { Categories } from '../../../../platform/action/common/actionCommonCategories.js';\nimport { Disposable, dispose, IDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { IFilesConfigurationService } from '../../../services/filesConfiguration/common/filesConfigurationService.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { ILoggerService, LogLevel, LogLevelToLocalizedString, LogLevelToString } from '../../../../platform/log/common/log.js';\nimport { IDefaultLogLevelsService } from '../../logs/common/defaultLogLevels.js';\nimport { EditorOptions } from '../../../../editor/common/config/editorOptions.js';\nimport { WordCharacterClassifier, getMapForWordSeparators } from '../../../../editor/common/core/wordCharacterClassifier.js';\nimport { WordNavigationType } from '../../../../editor/common/cursor/cursorWordOperations.js';\nimport { EditorContextKeys } from '../../../../editor/common/editorContextKeys.js';\nimport { ITextModel } from '../../../../editor/common/model.js';\nimport { WordLeftCommand, WordRightCommand } from '../../../../editor/contrib/wordOperations/browser/wordOperations.js';\nimport { CONTEXT_ACCESSIBILITY_MODE_ENABLED } from '../../../../platform/accessibility/common/accessibility.js';\nimport { IsWindowsContext } from '../../../../platform/contextkey/common/contextkeys.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { Position } from '../../../../editor/common/core/position.js';\nimport { registerEditorCommand } from '../../../../editor/browser/editorExtensions.js';\nimport { FocusedViewContext } from '../../../common/contextkeys.js';\n\n// Register Service\nregisterSingleton(IOutputService, OutputService, InstantiationType.Delayed);\n\n// Register Output Mode\nModesRegistry.registerLanguage({\n\tid: OUTPUT_MODE_ID,\n\textensions: [],\n\tmimetypes: [OUTPUT_MIME]\n});\n\n// Register Log Output Mode\nModesRegistry.registerLanguage({\n\tid: LOG_MODE_ID,\n\textensions: [],\n\tmimetypes: [LOG_MIME]\n});\n\n// register output container\nconst outputViewIcon = registerIcon('output-view-icon', Codicon.output, nls.localize('outputViewIcon', 'View icon of the output view.'));\nconst VIEW_CONTAINER: ViewContainer = Registry.as<IViewContainersRegistry>(ViewContainerExtensions.ViewContainersRegistry).registerViewContainer({\n\tid: OUTPUT_VIEW_ID,\n\ttitle: nls.localize2('output', \"Output\"),\n\ticon: outputViewIcon,\n\torder: 1,\n\tctorDescriptor: new SyncDescriptor(ViewPaneContainer, [OUTPUT_VIEW_ID, { mergeViewWithContainerWhenSingleView: true }]),\n\tstorageId: OUTPUT_VIEW_ID,\n\thideIfEmpty: true,\n}, ViewContainerLocation.Panel, { doNotRegisterOpenCommand: true });\n\nRegistry.as<IViewsRegistry>(ViewContainerExtensions.ViewsRegistry).registerViews([{\n\tid: OUTPUT_VIEW_ID,\n\tname: nls.localize2('output', \"Output\"),\n\tcontainerIcon: outputViewIcon,\n\tcanMoveView: true,\n\tcanToggleVisibility: false,\n\tctorDescriptor: new SyncDescriptor(OutputViewPane),\n\topenCommandActionDescriptor: {\n\t\tid: 'workbench.action.output.toggleOutput',\n\t\tmnemonicTitle: nls.localize({ key: 'miToggleOutput', comment: ['&& denotes a mnemonic'] }, \"&&Output\"),\n\t\tkeybindings: {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyU,\n\t\t\tlinux: {\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyH)  // On Ubuntu Ctrl+Shift+U is taken by some global OS command\n\t\t\t}\n\t\t},\n\t\torder: 1,\n\t}\n}], VIEW_CONTAINER);\n\nclass OutputContribution extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IOutputService private readonly outputService: IOutputService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IFilesConfigurationService private readonly fileConfigurationService: IFilesConfigurationService,\n\t) {\n\t\tsuper();\n\t\tthis.registerActions();\n\t}\n\n\tprivate registerActions(): void {\n\t\tthis.registerSwitchOutputAction();\n\t\tthis.registerShowOutputChannelsAction();\n\t\tthis.registerClearOutputAction();\n\t\tthis.registerToggleAutoScrollAction();\n\t\tthis.registerOpenActiveOutputFileAction();\n\t\tthis.registerOpenActiveOutputFileInAuxWindowAction();\n\t\tthis.registerShowLogsAction();\n\t\tthis.registerOpenLogFileAction();\n\t\tthis.registerConfigureActiveOutputLogLevelAction();\n\t}\n\n\tprivate registerSwitchOutputAction(): void {\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: `workbench.output.action.switchBetweenOutputs`,\n\t\t\t\t\ttitle: nls.localize('switchBetweenOutputs.label', \"Switch Output\"),\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor, channelId: string): Promise<void> {\n\t\t\t\tif (channelId) {\n\t\t\t\t\taccessor.get(IOutputService).showChannel(channelId, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tconst switchOutputMenu = new MenuId('workbench.output.menu.switchOutput');\n\t\tthis._register(MenuRegistry.appendMenuItem(MenuId.ViewTitle, {\n\t\t\tsubmenu: switchOutputMenu,\n\t\t\ttitle: nls.localize('switchToOutput.label', \"Switch Output\"),\n\t\t\tgroup: 'navigation',\n\t\t\twhen: ContextKeyExpr.equals('view', OUTPUT_VIEW_ID),\n\t\t\torder: 1,\n\t\t\tisSelection: true\n\t\t}));\n\t\tconst registeredChannels = new Map<string, IDisposable>();\n\t\tthis._register(toDisposable(() => dispose(registeredChannels.values())));\n\t\tconst registerOutputChannels = (channels: IOutputChannelDescriptor[]) => {\n\t\t\tfor (const channel of channels) {\n\t\t\t\tconst title = channel.label;\n\t\t\t\tconst group = channel.extensionId ? '0_ext_outputchannels' : '1_core_outputchannels';\n\t\t\t\tregisteredChannels.set(channel.id, registerAction2(class extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: `workbench.action.output.show.${channel.id}`,\n\t\t\t\t\t\t\ttitle,\n\t\t\t\t\t\t\ttoggled: ACTIVE_OUTPUT_CHANNEL_CONTEXT.isEqualTo(channel.id),\n\t\t\t\t\t\t\tmenu: {\n\t\t\t\t\t\t\t\tid: switchOutputMenu,\n\t\t\t\t\t\t\t\tgroup,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\t\t\treturn accessor.get(IOutputService).showChannel(channel.id, true);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t};\n\t\tregisterOutputChannels(this.outputService.getChannelDescriptors());\n\t\tconst outputChannelRegistry = Registry.as<IOutputChannelRegistry>(Extensions.OutputChannels);\n\t\tthis._register(outputChannelRegistry.onDidRegisterChannel(e => {\n\t\t\tconst channel = this.outputService.getChannelDescriptor(e);\n\t\t\tif (channel) {\n\t\t\t\tregisterOutputChannels([channel]);\n\t\t\t}\n\t\t}));\n\t\tthis._register(outputChannelRegistry.onDidRemoveChannel(e => {\n\t\t\tregisteredChannels.get(e)?.dispose();\n\t\t\tregisteredChannels.delete(e);\n\t\t}));\n\t}\n\n\tprivate registerShowOutputChannelsAction(): void {\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.action.showOutputChannels',\n\t\t\t\t\ttitle: nls.localize2('showOutputChannels', \"Show Output Channels...\"),\n\t\t\t\t\tcategory: nls.localize2('output', \"Output\"),\n\t\t\t\t\tf1: true\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\tconst outputService = accessor.get(IOutputService);\n\t\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\t\tconst extensionChannels = [], coreChannels = [];\n\t\t\t\tfor (const channel of outputService.getChannelDescriptors()) {\n\t\t\t\t\tif (channel.extensionId) {\n\t\t\t\t\t\textensionChannels.push(channel);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcoreChannels.push(channel);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst entries: ({ id: string; label: string } | IQuickPickSeparator)[] = [];\n\t\t\t\tfor (const { id, label } of extensionChannels) {\n\t\t\t\t\tentries.push({ id, label });\n\t\t\t\t}\n\t\t\t\tif (extensionChannels.length && coreChannels.length) {\n\t\t\t\t\tentries.push({ type: 'separator' });\n\t\t\t\t}\n\t\t\t\tfor (const { id, label } of coreChannels) {\n\t\t\t\t\tentries.push({ id, label });\n\t\t\t\t}\n\t\t\t\tconst entry = await quickInputService.pick(entries, { placeHolder: nls.localize('selectOutput', \"Select Output Channel\") });\n\t\t\t\tif (entry) {\n\t\t\t\t\treturn outputService.showChannel(entry.id);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerClearOutputAction(): void {\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: `workbench.output.action.clearOutput`,\n\t\t\t\t\ttitle: nls.localize2('clearOutput.label', \"Clear Output\"),\n\t\t\t\t\tcategory: Categories.View,\n\t\t\t\t\tmenu: [{\n\t\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\t\twhen: ContextKeyExpr.equals('view', OUTPUT_VIEW_ID),\n\t\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\t\torder: 2\n\t\t\t\t\t}, {\n\t\t\t\t\t\tid: MenuId.CommandPalette\n\t\t\t\t\t}, {\n\t\t\t\t\t\tid: MenuId.EditorContext,\n\t\t\t\t\t\twhen: CONTEXT_IN_OUTPUT\n\t\t\t\t\t}],\n\t\t\t\t\ticon: Codicon.clearAll\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\tconst outputService = accessor.get(IOutputService);\n\t\t\t\tconst accessibilitySignalService = accessor.get(IAccessibilitySignalService);\n\t\t\t\tconst activeChannel = outputService.getActiveChannel();\n\t\t\t\tif (activeChannel) {\n\t\t\t\t\tactiveChannel.clear();\n\t\t\t\t\taccessibilitySignalService.playSignal(AccessibilitySignal.clear);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerToggleAutoScrollAction(): void {\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: `workbench.output.action.toggleAutoScroll`,\n\t\t\t\t\ttitle: nls.localize2('toggleAutoScroll', \"Toggle Auto Scrolling\"),\n\t\t\t\t\ttooltip: nls.localize('outputScrollOff', \"Turn Auto Scrolling Off\"),\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', OUTPUT_VIEW_ID)),\n\t\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\t\torder: 3,\n\t\t\t\t\t},\n\t\t\t\t\ticon: Codicon.lock,\n\t\t\t\t\ttoggled: {\n\t\t\t\t\t\tcondition: CONTEXT_OUTPUT_SCROLL_LOCK,\n\t\t\t\t\t\ticon: Codicon.unlock,\n\t\t\t\t\t\ttooltip: nls.localize('outputScrollOn', \"Turn Auto Scrolling On\")\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\tconst outputView = accessor.get(IViewsService).getActiveViewWithId<OutputViewPane>(OUTPUT_VIEW_ID)!;\n\t\t\t\toutputView.scrollLock = !outputView.scrollLock;\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerOpenActiveOutputFileAction(): void {\n\t\tconst that = this;\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: `workbench.action.openActiveLogOutputFile`,\n\t\t\t\t\ttitle: nls.localize2('openActiveOutputFile', \"Open Output in Editor\"),\n\t\t\t\t\tmenu: [{\n\t\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\t\twhen: ContextKeyExpr.equals('view', OUTPUT_VIEW_ID),\n\t\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\t\torder: 4,\n\t\t\t\t\t\tisHiddenByDefault: true\n\t\t\t\t\t}],\n\t\t\t\t\ticon: Codicon.goToFile,\n\t\t\t\t\tprecondition: CONTEXT_ACTIVE_FILE_OUTPUT\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(): Promise<void> {\n\t\t\t\tthat.openActiveOutoutFile();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerOpenActiveOutputFileInAuxWindowAction(): void {\n\t\tconst that = this;\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: `workbench.action.openActiveLogOutputFileInNewWindow`,\n\t\t\t\t\ttitle: nls.localize2('openActiveOutputFileInNewWindow', \"Open Output in New Window\"),\n\t\t\t\t\tmenu: [{\n\t\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\t\twhen: ContextKeyExpr.equals('view', OUTPUT_VIEW_ID),\n\t\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\t\torder: 5,\n\t\t\t\t\t\tisHiddenByDefault: true\n\t\t\t\t\t}],\n\t\t\t\t\ticon: Codicon.emptyWindow,\n\t\t\t\t\tprecondition: CONTEXT_ACTIVE_FILE_OUTPUT\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(): Promise<void> {\n\t\t\t\tthat.openActiveOutoutFile(AUX_WINDOW_GROUP);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate async openActiveOutoutFile(group?: AUX_WINDOW_GROUP_TYPE): Promise<void> {\n\t\tconst fileOutputChannelDescriptor = this.getFileOutputChannelDescriptor();\n\t\tif (fileOutputChannelDescriptor) {\n\t\t\tawait this.fileConfigurationService.updateReadonly(fileOutputChannelDescriptor.file, true);\n\t\t\tawait this.editorService.openEditor({\n\t\t\t\tresource: fileOutputChannelDescriptor.file,\n\t\t\t\toptions: {\n\t\t\t\t\tpinned: true,\n\t\t\t\t},\n\t\t\t}, group);\n\t\t}\n\t}\n\n\tprivate getFileOutputChannelDescriptor(): IFileOutputChannelDescriptor | null {\n\t\tconst channel = this.outputService.getActiveChannel();\n\t\tif (channel) {\n\t\t\tconst descriptor = this.outputService.getChannelDescriptors().filter(c => c.id === channel.id)[0];\n\t\t\tif (descriptor?.file) {\n\t\t\t\treturn <IFileOutputChannelDescriptor>descriptor;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate registerConfigureActiveOutputLogLevelAction(): void {\n\t\tconst that = this;\n\t\tconst logLevelMenu = new MenuId('workbench.output.menu.logLevel');\n\t\tthis._register(MenuRegistry.appendMenuItem(MenuId.ViewTitle, {\n\t\t\tsubmenu: logLevelMenu,\n\t\t\ttitle: nls.localize('logLevel.label', \"Set Log Level...\"),\n\t\t\tgroup: 'navigation',\n\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', OUTPUT_VIEW_ID), CONTEXT_ACTIVE_OUTPUT_LEVEL_SETTABLE),\n\t\t\ticon: Codicon.gear,\n\t\t\torder: 6\n\t\t}));\n\n\t\tlet order = 0;\n\t\tconst registerLogLevel = (logLevel: LogLevel) => {\n\t\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\t\tconstructor() {\n\t\t\t\t\tsuper({\n\t\t\t\t\t\tid: `workbench.action.output.activeOutputLogLevel.${logLevel}`,\n\t\t\t\t\t\ttitle: LogLevelToLocalizedString(logLevel).value,\n\t\t\t\t\t\ttoggled: CONTEXT_ACTIVE_OUTPUT_LEVEL.isEqualTo(LogLevelToString(logLevel)),\n\t\t\t\t\t\tmenu: {\n\t\t\t\t\t\t\tid: logLevelMenu,\n\t\t\t\t\t\t\torder: order++,\n\t\t\t\t\t\t\tgroup: '0_level'\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\t\tconst channel = that.outputService.getActiveChannel();\n\t\t\t\t\tif (channel) {\n\t\t\t\t\t\tconst channelDescriptor = that.outputService.getChannelDescriptor(channel.id);\n\t\t\t\t\t\tif (channelDescriptor?.log && channelDescriptor.file) {\n\t\t\t\t\t\t\treturn accessor.get(ILoggerService).setLogLevel(channelDescriptor.file, logLevel);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\t};\n\n\t\tregisterLogLevel(LogLevel.Trace);\n\t\tregisterLogLevel(LogLevel.Debug);\n\t\tregisterLogLevel(LogLevel.Info);\n\t\tregisterLogLevel(LogLevel.Warning);\n\t\tregisterLogLevel(LogLevel.Error);\n\t\tregisterLogLevel(LogLevel.Off);\n\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: `workbench.action.output.activeOutputLogLevelDefault`,\n\t\t\t\t\ttitle: nls.localize('logLevelDefault.label', \"Set As Default\"),\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: logLevelMenu,\n\t\t\t\t\t\torder,\n\t\t\t\t\t\tgroup: '1_default'\n\t\t\t\t\t},\n\t\t\t\t\tprecondition: CONTEXT_ACTIVE_OUTPUT_LEVEL_IS_DEFAULT.negate()\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\tconst channel = that.outputService.getActiveChannel();\n\t\t\t\tif (channel) {\n\t\t\t\t\tconst channelDescriptor = that.outputService.getChannelDescriptor(channel.id);\n\t\t\t\t\tif (channelDescriptor?.log && channelDescriptor.file) {\n\t\t\t\t\t\tconst logLevel = accessor.get(ILoggerService).getLogLevel(channelDescriptor.file);\n\t\t\t\t\t\treturn await accessor.get(IDefaultLogLevelsService).setDefaultLogLevel(logLevel, channelDescriptor.extensionId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerShowLogsAction(): void {\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.action.showLogs',\n\t\t\t\t\ttitle: nls.localize2('showLogs', \"Show Logs...\"),\n\t\t\t\t\tcategory: Categories.Developer,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\tconst outputService = accessor.get(IOutputService);\n\t\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\t\tconst extensionLogs = [], logs = [];\n\t\t\t\tfor (const channel of outputService.getChannelDescriptors()) {\n\t\t\t\t\tif (channel.log) {\n\t\t\t\t\t\tif (channel.extensionId) {\n\t\t\t\t\t\t\textensionLogs.push(channel);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlogs.push(channel);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst entries: ({ id: string; label: string } | IQuickPickSeparator)[] = [];\n\t\t\t\tfor (const { id, label } of logs) {\n\t\t\t\t\tentries.push({ id, label });\n\t\t\t\t}\n\t\t\t\tif (extensionLogs.length && logs.length) {\n\t\t\t\t\tentries.push({ type: 'separator', label: nls.localize('extensionLogs', \"Extension Logs\") });\n\t\t\t\t}\n\t\t\t\tfor (const { id, label } of extensionLogs) {\n\t\t\t\t\tentries.push({ id, label });\n\t\t\t\t}\n\t\t\t\tconst entry = await quickInputService.pick(entries, { placeHolder: nls.localize('selectlog', \"Select Log\") });\n\t\t\t\tif (entry) {\n\t\t\t\t\treturn outputService.showChannel(entry.id);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerOpenLogFileAction(): void {\n\t\tinterface IOutputChannelQuickPickItem extends IQuickPickItem {\n\t\t\tchannel: IOutputChannelDescriptor;\n\t\t}\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.action.openLogFile',\n\t\t\t\t\ttitle: nls.localize2('openLogFile', \"Open Log File...\"),\n\t\t\t\t\tcategory: Categories.Developer,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t},\n\t\t\t\t\tmetadata: {\n\t\t\t\t\t\tdescription: 'workbench.action.openLogFile',\n\t\t\t\t\t\targs: [{\n\t\t\t\t\t\t\tname: 'logFile',\n\t\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\t\tmarkdownDescription: nls.localize('logFile', \"The id of the log file to open, for example `\\\"window\\\"`. Currently the best way to get this is to get the ID by checking the `workbench.action.output.show.<id>` commands\"),\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}]\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor, args?: unknown): Promise<void> {\n\t\t\t\tconst outputService = accessor.get(IOutputService);\n\t\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\t\tconst fileConfigurationService = accessor.get(IFilesConfigurationService);\n\n\t\t\t\tlet entry: IOutputChannelQuickPickItem | undefined;\n\t\t\t\tconst argName = args && typeof args === 'string' ? args : undefined;\n\t\t\t\tconst extensionChannels: IOutputChannelQuickPickItem[] = [];\n\t\t\t\tconst coreChannels: IOutputChannelQuickPickItem[] = [];\n\t\t\t\tfor (const c of outputService.getChannelDescriptors()) {\n\t\t\t\t\tif (c.file && c.log) {\n\t\t\t\t\t\tconst e = { id: c.id, label: c.label, channel: c };\n\t\t\t\t\t\tif (c.extensionId) {\n\t\t\t\t\t\t\textensionChannels.push(e);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcoreChannels.push(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (e.id === argName) {\n\t\t\t\t\t\t\tentry = e;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!entry) {\n\t\t\t\t\tconst entries: QuickPickInput[] = [...extensionChannels.sort((a, b) => a.label.localeCompare(b.label))];\n\t\t\t\t\tif (entries.length && coreChannels.length) {\n\t\t\t\t\t\tentries.push({ type: 'separator' });\n\t\t\t\t\t\tentries.push(...coreChannels.sort((a, b) => a.label.localeCompare(b.label)));\n\t\t\t\t\t}\n\t\t\t\t\tentry = <IOutputChannelQuickPickItem | undefined>await quickInputService.pick(entries, { placeHolder: nls.localize('selectlogFile', \"Select Log File\") });\n\t\t\t\t}\n\t\t\t\tif (entry) {\n\t\t\t\t\tconst resource = assertIsDefined(entry.channel.file);\n\t\t\t\t\tawait fileConfigurationService.updateReadonly(resource, true);\n\t\t\t\t\tawait editorService.openEditor({\n\t\t\t\t\t\tresource,\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tpinned: true,\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(OutputContribution, LifecyclePhase.Restored);\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).registerConfiguration({\n\tid: 'output',\n\torder: 30,\n\ttitle: nls.localize('output', \"Output\"),\n\ttype: 'object',\n\tproperties: {\n\t\t'output.smartScroll.enabled': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('output.smartScroll.enabled', \"Enable/disable the ability of smart scrolling in the output view. Smart scrolling allows you to lock scrolling automatically when you click in the output view and unlocks when you click in the last line.\"),\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.WINDOW,\n\t\t\ttags: ['output']\n\t\t}\n\t}\n});\n\n// Accessibility navigation commands should only be enabled on windows since they are tuned to what NVDA expects\nexport class CursorWordAccessibilityLeft extends WordLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: false,\n\t\t\twordNavigationType: WordNavigationType.WordAccessibility,\n\t\t\tid: 'cursorWordAccessibilityLeft',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, CONTEXT_ACCESSIBILITY_MODE_ENABLED, IsWindowsContext, ContextKeyExpr.equals(FocusedViewContext.key, OUTPUT_VIEW_ID)),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.LeftArrow,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected override _move(wordCharacterClassifier: WordCharacterClassifier, model: ITextModel, position: Position, wordNavigationType: WordNavigationType, hasMulticursor: boolean): Position {\n\t\treturn super._move(getMapForWordSeparators(EditorOptions.wordSeparators.defaultValue, wordCharacterClassifier.intlSegmenterLocales), model, position, wordNavigationType, hasMulticursor);\n\t}\n}\n\nexport class CursorWordAccessibilityLeftSelect extends WordLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: true,\n\t\t\twordNavigationType: WordNavigationType.WordAccessibility,\n\t\t\tid: 'cursorWordAccessibilityLeftSelect',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, CONTEXT_ACCESSIBILITY_MODE_ENABLED, IsWindowsContext, ContextKeyExpr.equals(FocusedViewContext.key, OUTPUT_VIEW_ID)),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.LeftArrow,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected override _move(wordCharacterClassifier: WordCharacterClassifier, model: ITextModel, position: Position, wordNavigationType: WordNavigationType, hasMulticursor: boolean): Position {\n\t\treturn super._move(getMapForWordSeparators(EditorOptions.wordSeparators.defaultValue, wordCharacterClassifier.intlSegmenterLocales), model, position, wordNavigationType, hasMulticursor);\n\t}\n}\n\n\nexport class CursorWordAccessibilityRight extends WordRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: false,\n\t\t\twordNavigationType: WordNavigationType.WordAccessibility,\n\t\t\tid: 'cursorWordAccessibilityRight',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, CONTEXT_ACCESSIBILITY_MODE_ENABLED, IsWindowsContext, ContextKeyExpr.equals(FocusedViewContext.key, OUTPUT_VIEW_ID)),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.RightArrow,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected override _move(wordCharacterClassifier: WordCharacterClassifier, model: ITextModel, position: Position, wordNavigationType: WordNavigationType, hasMulticursor: boolean): Position {\n\t\treturn super._move(getMapForWordSeparators(EditorOptions.wordSeparators.defaultValue, wordCharacterClassifier.intlSegmenterLocales), model, position, wordNavigationType, hasMulticursor);\n\t}\n}\n\nexport class CursorWordAccessibilityRightSelect extends WordRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: true,\n\t\t\twordNavigationType: WordNavigationType.WordAccessibility,\n\t\t\tid: 'cursorWordAccessibilityRightSelect',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, CONTEXT_ACCESSIBILITY_MODE_ENABLED, IsWindowsContext, ContextKeyExpr.equals(FocusedViewContext.key, OUTPUT_VIEW_ID)),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.RightArrow,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected override _move(wordCharacterClassifier: WordCharacterClassifier, model: ITextModel, position: Position, wordNavigationType: WordNavigationType, hasMulticursor: boolean): Position {\n\t\treturn super._move(getMapForWordSeparators(EditorOptions.wordSeparators.defaultValue, wordCharacterClassifier.intlSegmenterLocales), model, position, wordNavigationType, hasMulticursor);\n\t}\n}\nregisterEditorCommand(new CursorWordAccessibilityLeft());\nregisterEditorCommand(new CursorWordAccessibilityLeftSelect());\nregisterEditorCommand(new CursorWordAccessibilityRight());\nregisterEditorCommand(new CursorWordAccessibilityRightSelect());\n"],
  "mappings": "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",
  "names": []
}
