{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/welcomeGettingStarted/browser/gettingStartedService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from \"../../../../base/common/arrays.js\";\nimport { CancellationTokenSource } from \"../../../../base/common/cancellation.js\";\nimport { Emitter, type Event } from \"../../../../base/common/event.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport {\n\ttype ILink,\n\ttype LinkedText,\n\tparseLinkedText,\n} from \"../../../../base/common/linkedText.js\";\nimport { FileAccess } from \"../../../../base/common/network.js\";\nimport { dirname } from \"../../../../base/common/path.js\";\nimport { joinPath } from \"../../../../base/common/resources.js\";\nimport type { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport {\n\tAction2,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tContextKeyExpr,\n\ttype ContextKeyExpression,\n\tIContextKeyService,\n\tRawContextKey,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tEXTENSION_INSTALL_DEP_PACK_CONTEXT,\n\tEXTENSION_INSTALL_SKIP_WALKTHROUGH_CONTEXT,\n\tIExtensionManagementService,\n} from \"../../../../platform/extensionManagement/common/extensionManagement.js\";\nimport type { IExtensionDescription } from \"../../../../platform/extensions/common/extensions.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n\tcreateDecorator,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { IUserDataSyncEnablementService } from \"../../../../platform/userDataSync/common/userDataSync.js\";\nimport { IWorkspaceContextService } from \"../../../../platform/workspace/common/workspace.js\";\nimport { Memento } from \"../../../common/memento.js\";\nimport { IWorkbenchAssignmentService } from \"../../../services/assignment/common/assignmentService.js\";\nimport { DefaultIconPath } from \"../../../services/extensionManagement/common/extensionManagement.js\";\nimport { checkGlobFileExists } from \"../../../services/extensions/common/workspaceContains.js\";\nimport { IHostService } from \"../../../services/host/browser/host.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport { walkthroughs } from \"../common/gettingStartedContent.js\";\nimport { walkthroughsExtensionPoint } from \"./gettingStartedExtensionPoint.js\";\n\nexport const HasMultipleNewFileEntries = new RawContextKey<boolean>(\n\t\"hasMultipleNewFileEntries\",\n\tfalse,\n);\n\nexport const IWalkthroughsService = createDecorator<IWalkthroughsService>(\n\t\"walkthroughsService\",\n);\n\nexport const hiddenEntriesConfigurationKey =\n\t\"workbench.welcomePage.hiddenCategories\";\n\nexport const walkthroughMetadataConfigurationKey =\n\t\"workbench.welcomePage.walkthroughMetadata\";\nexport type WalkthroughMetaDataType = Map<\n\tstring,\n\t{ firstSeen: number; stepIDs: string[]; manaullyOpened: boolean }\n>;\n\nconst BUILT_IN_SOURCE = localize(\"builtin\", \"Built-In\");\n\nexport interface IWalkthrough {\n\tid: string;\n\ttitle: string;\n\tdescription: string;\n\torder: number;\n\tsource: string;\n\tisFeatured: boolean;\n\tnext?: string;\n\twhen: ContextKeyExpression;\n\tsteps: IWalkthroughStep[];\n\ticon: { type: \"icon\"; icon: ThemeIcon } | { type: \"image\"; path: string };\n}\n\nexport type IWalkthroughLoose = Omit<IWalkthrough, \"steps\"> & {\n\tsteps: (Omit<IWalkthroughStep, \"description\"> & { description: string })[];\n};\n\nexport interface IResolvedWalkthrough extends IWalkthrough {\n\tsteps: IResolvedWalkthroughStep[];\n\tnewItems: boolean;\n\trecencyBonus: number;\n\tnewEntry: boolean;\n}\n\nexport interface IWalkthroughStep {\n\tid: string;\n\ttitle: string;\n\tdescription: LinkedText[];\n\tcategory: string;\n\twhen: ContextKeyExpression;\n\torder: number;\n\tcompletionEvents: string[];\n\tmedia:\n\t\t| {\n\t\t\t\ttype: \"image\";\n\t\t\t\tpath: { hcDark: URI; hcLight: URI; light: URI; dark: URI };\n\t\t\t\taltText: string;\n\t\t  }\n\t\t| { type: \"svg\"; path: URI; altText: string }\n\t\t| { type: \"markdown\"; path: URI; base: URI; root: URI };\n}\n\ntype StepProgress = { done: boolean };\n\nexport interface IResolvedWalkthroughStep\n\textends IWalkthroughStep,\n\t\tStepProgress {}\n\nexport interface IWalkthroughsService {\n\t_serviceBrand: undefined;\n\n\treadonly onDidAddWalkthrough: Event<IResolvedWalkthrough>;\n\treadonly onDidRemoveWalkthrough: Event<string>;\n\treadonly onDidChangeWalkthrough: Event<IResolvedWalkthrough>;\n\treadonly onDidProgressStep: Event<IResolvedWalkthroughStep>;\n\n\tgetWalkthroughs(): IResolvedWalkthrough[];\n\tgetWalkthrough(id: string): IResolvedWalkthrough;\n\n\tregisterWalkthrough(descriptor: IWalkthroughLoose): void;\n\n\tprogressByEvent(eventName: string): void;\n\tprogressStep(id: string): void;\n\tdeprogressStep(id: string): void;\n\n\tmarkWalkthroughOpened(id: string): void;\n}\n\n// Show walkthrough as \"new\" for 7 days after first install\nconst DAYS = 24 * 60 * 60 * 1000;\nconst NEW_WALKTHROUGH_TIME = 7 * DAYS;\n\nexport class WalkthroughsService\n\textends Disposable\n\timplements IWalkthroughsService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidAddWalkthrough = new Emitter<IResolvedWalkthrough>();\n\treadonly onDidAddWalkthrough: Event<IResolvedWalkthrough> =\n\t\tthis._onDidAddWalkthrough.event;\n\tprivate readonly _onDidRemoveWalkthrough = new Emitter<string>();\n\treadonly onDidRemoveWalkthrough: Event<string> =\n\t\tthis._onDidRemoveWalkthrough.event;\n\tprivate readonly _onDidChangeWalkthrough =\n\t\tnew Emitter<IResolvedWalkthrough>();\n\treadonly onDidChangeWalkthrough: Event<IResolvedWalkthrough> =\n\t\tthis._onDidChangeWalkthrough.event;\n\tprivate readonly _onDidProgressStep =\n\t\tnew Emitter<IResolvedWalkthroughStep>();\n\treadonly onDidProgressStep: Event<IResolvedWalkthroughStep> =\n\t\tthis._onDidProgressStep.event;\n\n\tprivate memento: Memento;\n\tprivate stepProgress: Record<string, StepProgress | undefined>;\n\n\tprivate sessionEvents = new Set<string>();\n\tprivate completionListeners = new Map<string, Set<string>>();\n\n\tprivate gettingStartedContributions = new Map<string, IWalkthrough>();\n\tprivate steps = new Map<string, IWalkthroughStep>();\n\n\tprivate sessionInstalledExtensions: Set<string> = new Set<string>();\n\n\tprivate categoryVisibilityContextKeys = new Set<string>();\n\tprivate stepCompletionContextKeyExpressions =\n\t\tnew Set<ContextKeyExpression>();\n\tprivate stepCompletionContextKeys = new Set<string>();\n\n\tprivate metadata: WalkthroughMetaDataType;\n\n\tconstructor(\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IContextKeyService private readonly contextService: IContextKeyService,\n\t\t@IUserDataSyncEnablementService private readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@IViewsService private readonly viewsService: IViewsService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IWorkbenchAssignmentService private readonly tasExperimentService: IWorkbenchAssignmentService\n\t) {\n\t\tsuper();\n\n\t\tthis.metadata = new Map(\n\t\t\tJSON.parse(\n\t\t\t\tthis.storageService.get(walkthroughMetadataConfigurationKey, StorageScope.PROFILE, '[]')));\n\n\t\tthis.memento = new Memento('gettingStartedService', this.storageService);\n\t\tthis.stepProgress = this.memento.getMemento(StorageScope.PROFILE, StorageTarget.USER);\n\n\t\tthis.initCompletionEventListeners();\n\n\t\tHasMultipleNewFileEntries.bindTo(this.contextService).set(false);\n\t\tthis.registerWalkthroughs();\n\n\t}\n\n\tprivate registerWalkthroughs() {\n\t\twalkthroughs.forEach(async (category, index) => {\n\t\t\tthis._registerWalkthrough({\n\t\t\t\t...category,\n\t\t\t\ticon: { type: \"icon\", icon: category.icon },\n\t\t\t\torder: walkthroughs.length - index,\n\t\t\t\tsource: BUILT_IN_SOURCE,\n\t\t\t\twhen:\n\t\t\t\t\tContextKeyExpr.deserialize(category.when) ??\n\t\t\t\t\tContextKeyExpr.true(),\n\t\t\t\tsteps: category.content.steps.map((step, index) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...step,\n\t\t\t\t\t\tcompletionEvents: step.completionEvents ?? [],\n\t\t\t\t\t\tdescription: parseDescription(step.description),\n\t\t\t\t\t\tcategory: category.id,\n\t\t\t\t\t\torder: index,\n\t\t\t\t\t\twhen:\n\t\t\t\t\t\t\tContextKeyExpr.deserialize(step.when) ??\n\t\t\t\t\t\t\tContextKeyExpr.true(),\n\t\t\t\t\t\tmedia:\n\t\t\t\t\t\t\tstep.media.type === \"image\"\n\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\ttype: \"image\",\n\t\t\t\t\t\t\t\t\t\taltText: step.media.altText,\n\t\t\t\t\t\t\t\t\t\tpath: convertInternalMediaPathsToBrowserURIs(\n\t\t\t\t\t\t\t\t\t\t\tstep.media.path,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t: step.media.type === \"svg\"\n\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\ttype: \"svg\",\n\t\t\t\t\t\t\t\t\t\t\taltText: step.media.altText,\n\t\t\t\t\t\t\t\t\t\t\t// built-in interactive media are in modules in the common/media folder\n\t\t\t\t\t\t\t\t\t\t\tpath: convertInternalMediaPathToFileURI(\n\t\t\t\t\t\t\t\t\t\t\t\tstep.media.path,\n\t\t\t\t\t\t\t\t\t\t\t).with({\n\t\t\t\t\t\t\t\t\t\t\t\tquery: JSON.stringify({\n\t\t\t\t\t\t\t\t\t\t\t\t\tmoduleId:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"../common/media/\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstep.media.path +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\".js\",\n\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\ttype: \"markdown\",\n\t\t\t\t\t\t\t\t\t\t\t// built-in interactive media are in modules in the common/media folder\n\t\t\t\t\t\t\t\t\t\t\tpath: convertInternalMediaPathToFileURI(\n\t\t\t\t\t\t\t\t\t\t\t\tstep.media.path,\n\t\t\t\t\t\t\t\t\t\t\t).with({\n\t\t\t\t\t\t\t\t\t\t\t\tquery: JSON.stringify({\n\t\t\t\t\t\t\t\t\t\t\t\t\tmoduleId:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"../common/media/\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstep.media.path +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\".js\",\n\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\tbase: FileAccess.asFileUri(\n\t\t\t\t\t\t\t\t\t\t\t\t\"vs/workbench/contrib/welcomeGettingStarted/common/media/\",\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\troot: FileAccess.asFileUri(\n\t\t\t\t\t\t\t\t\t\t\t\t\"vs/workbench/contrib/welcomeGettingStarted/common/media/\",\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t});\n\t\t});\n\n\t\twalkthroughsExtensionPoint.setHandler((_, { added, removed }) => {\n\t\t\tadded.map((e) =>\n\t\t\t\tthis.registerExtensionWalkthroughContributions(e.description),\n\t\t\t);\n\t\t\tremoved.map((e) =>\n\t\t\t\tthis.unregisterExtensionWalkthroughContributions(e.description),\n\t\t\t);\n\t\t});\n\t}\n\n\tprivate initCompletionEventListeners() {\n\t\tthis._register(\n\t\t\tthis.commandService.onDidExecuteCommand((command) =>\n\t\t\t\tthis.progressByEvent(`onCommand:${command.commandId}`),\n\t\t\t),\n\t\t);\n\n\t\tthis.extensionManagementService.getInstalled().then((installed) => {\n\t\t\tinstalled.forEach((ext) =>\n\t\t\t\tthis.progressByEvent(\n\t\t\t\t\t`extensionInstalled:${ext.identifier.id.toLowerCase()}`,\n\t\t\t\t),\n\t\t\t);\n\t\t});\n\n\t\tthis._register(\n\t\t\tthis.extensionManagementService.onDidInstallExtensions((result) => {\n\t\t\t\tfor (const e of result) {\n\t\t\t\t\tconst skipWalkthrough =\n\t\t\t\t\t\te?.context?.[\n\t\t\t\t\t\t\tEXTENSION_INSTALL_SKIP_WALKTHROUGH_CONTEXT\n\t\t\t\t\t\t] || e?.context?.[EXTENSION_INSTALL_DEP_PACK_CONTEXT];\n\t\t\t\t\t// If the window had last focus and the install didn't specify to skip the walkthrough\n\t\t\t\t\t// Then add it to the sessionInstallExtensions to be opened\n\t\t\t\t\tif (!skipWalkthrough) {\n\t\t\t\t\t\tthis.sessionInstalledExtensions.add(\n\t\t\t\t\t\t\te.identifier.id.toLowerCase(),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tthis.progressByEvent(\n\t\t\t\t\t\t`extensionInstalled:${e.identifier.id.toLowerCase()}`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.contextService.onDidChangeContext((event) => {\n\t\t\t\tif (event.affectsSome(this.stepCompletionContextKeys)) {\n\t\t\t\t\tthis.stepCompletionContextKeyExpressions.forEach(\n\t\t\t\t\t\t(expression) => {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tevent.affectsSome(new Set(expression.keys())) &&\n\t\t\t\t\t\t\t\tthis.contextService.contextMatchesRules(\n\t\t\t\t\t\t\t\t\texpression,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tthis.progressByEvent(\n\t\t\t\t\t\t\t\t\t`onContext:` + expression.serialize(),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.viewsService.onDidChangeViewVisibility((e) => {\n\t\t\t\tif (e.visible) {\n\t\t\t\t\tthis.progressByEvent(\"onView:\" + e.id);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\te.affectedKeys.forEach((key) => {\n\t\t\t\t\tthis.progressByEvent(\"onSettingChanged:\" + key);\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\n\t\tif (this.userDataSyncEnablementService.isEnabled()) {\n\t\t\tthis.progressByEvent(\"onEvent:sync-enabled\");\n\t\t}\n\t\tthis._register(\n\t\t\tthis.userDataSyncEnablementService.onDidChangeEnablement(() => {\n\t\t\t\tif (this.userDataSyncEnablementService.isEnabled()) {\n\t\t\t\t\tthis.progressByEvent(\"onEvent:sync-enabled\");\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tmarkWalkthroughOpened(id: string) {\n\t\tconst walkthrough = this.gettingStartedContributions.get(id);\n\t\tconst prior = this.metadata.get(id);\n\t\tif (prior && walkthrough) {\n\t\t\tthis.metadata.set(id, {\n\t\t\t\t...prior,\n\t\t\t\tmanaullyOpened: true,\n\t\t\t\tstepIDs: walkthrough.steps.map((s) => s.id),\n\t\t\t});\n\t\t}\n\n\t\tthis.storageService.store(\n\t\t\twalkthroughMetadataConfigurationKey,\n\t\t\tJSON.stringify([...this.metadata.entries()]),\n\t\t\tStorageScope.PROFILE,\n\t\t\tStorageTarget.USER,\n\t\t);\n\t}\n\n\tprivate async registerExtensionWalkthroughContributions(\n\t\textension: IExtensionDescription,\n\t) {\n\t\tconst convertExtensionPathToFileURI = (path: string) =>\n\t\t\tpath.startsWith(\"https://\")\n\t\t\t\t? URI.parse(path, true)\n\t\t\t\t: FileAccess.uriToFileUri(\n\t\t\t\t\t\tjoinPath(extension.extensionLocation, path),\n\t\t\t\t\t);\n\n\t\tconst convertExtensionRelativePathsToBrowserURIs = (\n\t\t\tpath:\n\t\t\t\t| string\n\t\t\t\t| { hc: string; hcLight?: string; dark: string; light: string },\n\t\t): { hcDark: URI; hcLight: URI; dark: URI; light: URI } => {\n\t\t\tconst convertPath = (path: string) =>\n\t\t\t\tpath.startsWith(\"https://\")\n\t\t\t\t\t? URI.parse(path, true)\n\t\t\t\t\t: FileAccess.uriToBrowserUri(\n\t\t\t\t\t\t\tjoinPath(extension.extensionLocation, path),\n\t\t\t\t\t\t);\n\n\t\t\tif (typeof path === \"string\") {\n\t\t\t\tconst converted = convertPath(path);\n\t\t\t\treturn {\n\t\t\t\t\thcDark: converted,\n\t\t\t\t\thcLight: converted,\n\t\t\t\t\tdark: converted,\n\t\t\t\t\tlight: converted,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\thcDark: convertPath(path.hc),\n\t\t\t\t\thcLight: convertPath(path.hcLight ?? path.light),\n\t\t\t\t\tlight: convertPath(path.light),\n\t\t\t\t\tdark: convertPath(path.dark),\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\n\t\tif (!extension.contributes?.walkthroughs?.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet sectionToOpen: string | undefined;\n\t\tlet sectionToOpenIndex = Math.min(); // '+Infinity';\n\t\tawait Promise.all(\n\t\t\textension.contributes?.walkthroughs?.map(\n\t\t\t\tasync (walkthrough, index) => {\n\t\t\t\t\tconst categoryID =\n\t\t\t\t\t\textension.identifier.value + \"#\" + walkthrough.id;\n\n\t\t\t\t\tconst isNewlyInstalled = !this.metadata.get(categoryID);\n\t\t\t\t\tif (isNewlyInstalled) {\n\t\t\t\t\t\tthis.metadata.set(categoryID, {\n\t\t\t\t\t\t\tfirstSeen: +new Date(),\n\t\t\t\t\t\t\tstepIDs: walkthrough.steps?.map((s) => s.id) ?? [],\n\t\t\t\t\t\t\tmanaullyOpened: false,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tconst override = await Promise.race([\n\t\t\t\t\t\tthis.tasExperimentService?.getTreatment<string>(\n\t\t\t\t\t\t\t`gettingStarted.overrideCategory.${extension.identifier.value + \".\" + walkthrough.id}.when`,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tnew Promise<string | undefined>((resolve) =>\n\t\t\t\t\t\t\tsetTimeout(() => resolve(walkthrough.when), 5000),\n\t\t\t\t\t\t),\n\t\t\t\t\t]);\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.sessionInstalledExtensions.has(\n\t\t\t\t\t\t\textension.identifier.value.toLowerCase(),\n\t\t\t\t\t\t) &&\n\t\t\t\t\t\tthis.contextService.contextMatchesRules(\n\t\t\t\t\t\t\tContextKeyExpr.deserialize(\n\t\t\t\t\t\t\t\toverride ?? walkthrough.when,\n\t\t\t\t\t\t\t) ?? ContextKeyExpr.true(),\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.sessionInstalledExtensions.delete(\n\t\t\t\t\t\t\textension.identifier.value.toLowerCase(),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (index < sectionToOpenIndex && isNewlyInstalled) {\n\t\t\t\t\t\t\tsectionToOpen = categoryID;\n\t\t\t\t\t\t\tsectionToOpenIndex = index;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst steps = (walkthrough.steps ?? []).map(\n\t\t\t\t\t\t(step, index) => {\n\t\t\t\t\t\t\tconst description = parseDescription(\n\t\t\t\t\t\t\t\tstep.description || \"\",\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst fullyQualifiedID =\n\t\t\t\t\t\t\t\textension.identifier.value +\n\t\t\t\t\t\t\t\t\"#\" +\n\t\t\t\t\t\t\t\twalkthrough.id +\n\t\t\t\t\t\t\t\t\"#\" +\n\t\t\t\t\t\t\t\tstep.id;\n\n\t\t\t\t\t\t\tlet media: IWalkthroughStep[\"media\"];\n\n\t\t\t\t\t\t\tif (!step.media) {\n\t\t\t\t\t\t\t\tthrow Error(\n\t\t\t\t\t\t\t\t\t\"missing media in walkthrough step: \" +\n\t\t\t\t\t\t\t\t\t\twalkthrough.id +\n\t\t\t\t\t\t\t\t\t\t\"@\" +\n\t\t\t\t\t\t\t\t\t\tstep.id,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (step.media.image) {\n\t\t\t\t\t\t\t\tconst altText = step.media.altText;\n\t\t\t\t\t\t\t\tif (altText === undefined) {\n\t\t\t\t\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t\t\t\t\t\"Walkthrough item:\",\n\t\t\t\t\t\t\t\t\t\tfullyQualifiedID,\n\t\t\t\t\t\t\t\t\t\t\"is missing altText for its media element.\",\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tmedia = {\n\t\t\t\t\t\t\t\t\ttype: \"image\",\n\t\t\t\t\t\t\t\t\taltText,\n\t\t\t\t\t\t\t\t\tpath: convertExtensionRelativePathsToBrowserURIs(\n\t\t\t\t\t\t\t\t\t\tstep.media.image,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t} else if (step.media.markdown) {\n\t\t\t\t\t\t\t\tmedia = {\n\t\t\t\t\t\t\t\t\ttype: \"markdown\",\n\t\t\t\t\t\t\t\t\tpath: convertExtensionPathToFileURI(\n\t\t\t\t\t\t\t\t\t\tstep.media.markdown,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tbase: convertExtensionPathToFileURI(\n\t\t\t\t\t\t\t\t\t\tdirname(step.media.markdown),\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\troot: FileAccess.uriToFileUri(\n\t\t\t\t\t\t\t\t\t\textension.extensionLocation,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t} else if (step.media.svg) {\n\t\t\t\t\t\t\t\tmedia = {\n\t\t\t\t\t\t\t\t\ttype: \"svg\",\n\t\t\t\t\t\t\t\t\tpath: convertExtensionPathToFileURI(\n\t\t\t\t\t\t\t\t\t\tstep.media.svg,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\taltText: step.media.svg,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Throw error for unknown walkthrough format\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t\"Unknown walkthrough format detected for \" +\n\t\t\t\t\t\t\t\t\t\tfullyQualifiedID,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tdescription,\n\t\t\t\t\t\t\t\tmedia,\n\t\t\t\t\t\t\t\tcompletionEvents:\n\t\t\t\t\t\t\t\t\tstep.completionEvents?.filter(\n\t\t\t\t\t\t\t\t\t\t(x) => typeof x === \"string\",\n\t\t\t\t\t\t\t\t\t) ?? [],\n\t\t\t\t\t\t\t\tid: fullyQualifiedID,\n\t\t\t\t\t\t\t\ttitle: step.title,\n\t\t\t\t\t\t\t\twhen:\n\t\t\t\t\t\t\t\t\tContextKeyExpr.deserialize(step.when) ??\n\t\t\t\t\t\t\t\t\tContextKeyExpr.true(),\n\t\t\t\t\t\t\t\tcategory: categoryID,\n\t\t\t\t\t\t\t\torder: index,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\n\t\t\t\t\tlet isFeatured = false;\n\t\t\t\t\tif (walkthrough.featuredFor) {\n\t\t\t\t\t\tconst folders = this.workspaceContextService\n\t\t\t\t\t\t\t.getWorkspace()\n\t\t\t\t\t\t\t.folders.map((f) => f.uri);\n\t\t\t\t\t\tconst token = new CancellationTokenSource();\n\t\t\t\t\t\tsetTimeout(() => token.cancel(), 2000);\n\t\t\t\t\t\tisFeatured =\n\t\t\t\t\t\t\tawait this.instantiationService.invokeFunction(\n\t\t\t\t\t\t\t\t(a) =>\n\t\t\t\t\t\t\t\t\tcheckGlobFileExists(\n\t\t\t\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\t\t\t\tfolders,\n\t\t\t\t\t\t\t\t\t\twalkthrough.featuredFor!,\n\t\t\t\t\t\t\t\t\t\ttoken.token,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst iconStr = walkthrough.icon ?? extension.icon;\n\t\t\t\t\tconst walkthoughDescriptor: IWalkthrough = {\n\t\t\t\t\t\tdescription: walkthrough.description,\n\t\t\t\t\t\ttitle: walkthrough.title,\n\t\t\t\t\t\tid: categoryID,\n\t\t\t\t\t\tisFeatured,\n\t\t\t\t\t\tsource: extension.displayName ?? extension.name,\n\t\t\t\t\t\torder: 0,\n\t\t\t\t\t\tsteps,\n\t\t\t\t\t\ticon: {\n\t\t\t\t\t\t\ttype: \"image\",\n\t\t\t\t\t\t\tpath: iconStr\n\t\t\t\t\t\t\t\t? FileAccess.uriToBrowserUri(\n\t\t\t\t\t\t\t\t\t\tjoinPath(\n\t\t\t\t\t\t\t\t\t\t\textension.extensionLocation,\n\t\t\t\t\t\t\t\t\t\t\ticonStr,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t).toString(true)\n\t\t\t\t\t\t\t\t: DefaultIconPath,\n\t\t\t\t\t\t},\n\t\t\t\t\t\twhen:\n\t\t\t\t\t\t\tContextKeyExpr.deserialize(\n\t\t\t\t\t\t\t\toverride ?? walkthrough.when,\n\t\t\t\t\t\t\t) ?? ContextKeyExpr.true(),\n\t\t\t\t\t} as const;\n\n\t\t\t\t\tthis._registerWalkthrough(walkthoughDescriptor);\n\n\t\t\t\t\tthis._onDidAddWalkthrough.fire(\n\t\t\t\t\t\tthis.resolveWalkthrough(walkthoughDescriptor),\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis.storageService.store(\n\t\t\twalkthroughMetadataConfigurationKey,\n\t\t\tJSON.stringify([...this.metadata.entries()]),\n\t\t\tStorageScope.PROFILE,\n\t\t\tStorageTarget.USER,\n\t\t);\n\n\t\tconst hadLastFoucs = await this.hostService.hadLastFocus();\n\t\tif (\n\t\t\thadLastFoucs &&\n\t\t\tsectionToOpen &&\n\t\t\tthis.configurationService.getValue<string>(\n\t\t\t\t\"workbench.welcomePage.walkthroughs.openOnInstall\",\n\t\t\t)\n\t\t) {\n\t\t\ttype GettingStartedAutoOpenClassification = {\n\t\t\t\towner: \"lramos15\";\n\t\t\t\tcomment: \"When a walkthrthrough is opened upon extension installation\";\n\t\t\t\tid: {\n\t\t\t\t\tclassification: \"PublicNonPersonalData\";\n\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\towner: \"lramos15\";\n\t\t\t\t\tcomment: \"Used to understand what walkthroughs are consulted most frequently\";\n\t\t\t\t};\n\t\t\t};\n\t\t\ttype GettingStartedAutoOpenEvent = {\n\t\t\t\tid: string;\n\t\t\t};\n\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\tGettingStartedAutoOpenEvent,\n\t\t\t\tGettingStartedAutoOpenClassification\n\t\t\t>(\"gettingStarted.didAutoOpenWalkthrough\", { id: sectionToOpen });\n\t\t\tthis.commandService.executeCommand(\n\t\t\t\t\"workbench.action.openWalkthrough\",\n\t\t\t\tsectionToOpen,\n\t\t\t\ttrue,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate unregisterExtensionWalkthroughContributions(\n\t\textension: IExtensionDescription,\n\t) {\n\t\tif (!extension.contributes?.walkthroughs?.length) {\n\t\t\treturn;\n\t\t}\n\n\t\textension.contributes?.walkthroughs?.forEach((section) => {\n\t\t\tconst categoryID = extension.identifier.value + \"#\" + section.id;\n\t\t\tsection.steps.forEach((step) => {\n\t\t\t\tconst fullyQualifiedID =\n\t\t\t\t\textension.identifier.value +\n\t\t\t\t\t\"#\" +\n\t\t\t\t\tsection.id +\n\t\t\t\t\t\"#\" +\n\t\t\t\t\tstep.id;\n\t\t\t\tthis.steps.delete(fullyQualifiedID);\n\t\t\t});\n\t\t\tthis.gettingStartedContributions.delete(categoryID);\n\t\t\tthis._onDidRemoveWalkthrough.fire(categoryID);\n\t\t});\n\t}\n\n\tgetWalkthrough(id: string): IResolvedWalkthrough {\n\t\tconst walkthrough = this.gettingStartedContributions.get(id);\n\t\tif (!walkthrough) {\n\t\t\tthrow Error(\"Trying to get unknown walkthrough: \" + id);\n\t\t}\n\t\treturn this.resolveWalkthrough(walkthrough);\n\t}\n\n\tgetWalkthroughs(): IResolvedWalkthrough[] {\n\t\tconst registeredCategories = [\n\t\t\t...this.gettingStartedContributions.values(),\n\t\t];\n\t\tconst categoriesWithCompletion = registeredCategories\n\t\t\t.map((category) => {\n\t\t\t\treturn {\n\t\t\t\t\t...category,\n\t\t\t\t\tcontent: {\n\t\t\t\t\t\ttype: \"steps\" as const,\n\t\t\t\t\t\tsteps: category.steps,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t})\n\t\t\t.filter(\n\t\t\t\t(category) =>\n\t\t\t\t\tcategory.content.type !== \"steps\" ||\n\t\t\t\t\tcategory.content.steps.length,\n\t\t\t)\n\t\t\t.map((category) => this.resolveWalkthrough(category));\n\n\t\treturn categoriesWithCompletion;\n\t}\n\n\tprivate resolveWalkthrough(category: IWalkthrough): IResolvedWalkthrough {\n\t\tconst stepsWithProgress = category.steps.map((step) =>\n\t\t\tthis.getStepProgress(step),\n\t\t);\n\n\t\tconst hasOpened = this.metadata.get(category.id)?.manaullyOpened;\n\t\tconst firstSeenDate = this.metadata.get(category.id)?.firstSeen;\n\t\tconst isNew =\n\t\t\tfirstSeenDate && firstSeenDate > +new Date() - NEW_WALKTHROUGH_TIME;\n\n\t\tconst lastStepIDs = this.metadata.get(category.id)?.stepIDs;\n\t\tconst rawCategory = this.gettingStartedContributions.get(category.id);\n\t\tif (!rawCategory) {\n\t\t\tthrow Error(\"Could not find walkthrough with id \" + category.id);\n\t\t}\n\n\t\tconst currentStepIds: string[] = rawCategory.steps.map((s) => s.id);\n\n\t\tconst hasNewSteps =\n\t\t\tlastStepIDs &&\n\t\t\t(currentStepIds.length !== lastStepIDs.length ||\n\t\t\t\tcurrentStepIds.some((id, index) => id !== lastStepIDs[index]));\n\n\t\tlet recencyBonus = 0;\n\t\tif (firstSeenDate) {\n\t\t\tconst currentDate = +new Date();\n\t\t\tconst timeSinceFirstSeen = currentDate - firstSeenDate;\n\t\t\trecencyBonus = Math.max(\n\t\t\t\t0,\n\t\t\t\t(NEW_WALKTHROUGH_TIME - timeSinceFirstSeen) /\n\t\t\t\t\tNEW_WALKTHROUGH_TIME,\n\t\t\t);\n\t\t}\n\n\t\treturn {\n\t\t\t...category,\n\t\t\trecencyBonus,\n\t\t\tsteps: stepsWithProgress,\n\t\t\tnewItems: !!hasNewSteps,\n\t\t\tnewEntry: !!(isNew && !hasOpened),\n\t\t};\n\t}\n\n\tprivate getStepProgress(step: IWalkthroughStep): IResolvedWalkthroughStep {\n\t\treturn {\n\t\t\t...step,\n\t\t\tdone: false,\n\t\t\t...this.stepProgress[step.id],\n\t\t};\n\t}\n\n\tprogressStep(id: string) {\n\t\tconst oldProgress = this.stepProgress[id];\n\t\tif (!oldProgress || oldProgress.done !== true) {\n\t\t\tthis.stepProgress[id] = { done: true };\n\t\t\tthis.memento.saveMemento();\n\t\t\tconst step = this.getStep(id);\n\t\t\tif (!step) {\n\t\t\t\tthrow Error(\"Tried to progress unknown step\");\n\t\t\t}\n\n\t\t\tthis._onDidProgressStep.fire(this.getStepProgress(step));\n\t\t}\n\t}\n\n\tdeprogressStep(id: string) {\n\t\tdelete this.stepProgress[id];\n\t\tthis.memento.saveMemento();\n\t\tconst step = this.getStep(id);\n\t\tthis._onDidProgressStep.fire(this.getStepProgress(step));\n\t}\n\n\tprogressByEvent(event: string): void {\n\t\tif (this.sessionEvents.has(event)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.sessionEvents.add(event);\n\t\tthis.completionListeners\n\t\t\t.get(event)\n\t\t\t?.forEach((id) => this.progressStep(id));\n\t}\n\n\tregisterWalkthrough(walkthoughDescriptor: IWalkthroughLoose) {\n\t\tthis._registerWalkthrough({\n\t\t\t...walkthoughDescriptor,\n\t\t\tsteps: walkthoughDescriptor.steps.map((step) => ({\n\t\t\t\t...step,\n\t\t\t\tdescription: parseDescription(step.description),\n\t\t\t})),\n\t\t});\n\t}\n\n\t_registerWalkthrough(walkthroughDescriptor: IWalkthrough): void {\n\t\tconst oldCategory = this.gettingStartedContributions.get(\n\t\t\twalkthroughDescriptor.id,\n\t\t);\n\t\tif (oldCategory) {\n\t\t\tconsole.error(\n\t\t\t\t`Skipping attempt to overwrite walkthrough. (${walkthroughDescriptor.id})`,\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.gettingStartedContributions.set(\n\t\t\twalkthroughDescriptor.id,\n\t\t\twalkthroughDescriptor,\n\t\t);\n\n\t\twalkthroughDescriptor.steps.forEach((step) => {\n\t\t\tif (this.steps.has(step.id)) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t\"Attempting to register step with id \" +\n\t\t\t\t\t\tstep.id +\n\t\t\t\t\t\t\" twice. Second is dropped.\",\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.steps.set(step.id, step);\n\t\t\tstep.when\n\t\t\t\t.keys()\n\t\t\t\t.forEach((key) => this.categoryVisibilityContextKeys.add(key));\n\t\t\tthis.registerDoneListeners(step);\n\t\t});\n\n\t\twalkthroughDescriptor.when\n\t\t\t.keys()\n\t\t\t.forEach((key) => this.categoryVisibilityContextKeys.add(key));\n\t}\n\n\tprivate registerDoneListeners(step: IWalkthroughStep) {\n\t\tif ((step as any).doneOn) {\n\t\t\tconsole.error(\n\t\t\t\t`wakthrough step`,\n\t\t\t\tstep,\n\t\t\t\t`uses deprecated 'doneOn' property. Adopt 'completionEvents' to silence this warning`,\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!step.completionEvents.length) {\n\t\t\tstep.completionEvents = coalesce(\n\t\t\t\tstep.description\n\t\t\t\t\t.filter((linkedText) => linkedText.nodes.length === 1) // only buttons\n\t\t\t\t\t.flatMap((linkedText) =>\n\t\t\t\t\t\tlinkedText.nodes\n\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t(node): node is ILink =>\n\t\t\t\t\t\t\t\t\ttypeof node !== \"string\",\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.map(({ href }) => {\n\t\t\t\t\t\t\t\tif (href.startsWith(\"command:\")) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\"onCommand:\" +\n\t\t\t\t\t\t\t\t\t\thref.slice(\n\t\t\t\t\t\t\t\t\t\t\t\"command:\".length,\n\t\t\t\t\t\t\t\t\t\t\thref.includes(\"?\")\n\t\t\t\t\t\t\t\t\t\t\t\t? href.indexOf(\"?\")\n\t\t\t\t\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\thref.startsWith(\"https://\") ||\n\t\t\t\t\t\t\t\t\thref.startsWith(\"http://\")\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\treturn \"onLink:\" + href;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tif (!step.completionEvents.length) {\n\t\t\tstep.completionEvents.push(\"stepSelected\");\n\t\t}\n\n\t\tfor (let event of step.completionEvents) {\n\t\t\tconst [_, eventType, argument] =\n\t\t\t\t/^([^:]*):?(.*)$/.exec(event) ?? [];\n\n\t\t\tif (!eventType) {\n\t\t\t\tconsole.error(\n\t\t\t\t\t`Unknown completionEvent ${event} when registering step ${step.id}`,\n\t\t\t\t);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tswitch (eventType) {\n\t\t\t\tcase \"onLink\":\n\t\t\t\tcase \"onEvent\":\n\t\t\t\tcase \"onView\":\n\t\t\t\tcase \"onSettingChanged\":\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"onContext\": {\n\t\t\t\t\tconst expression = ContextKeyExpr.deserialize(argument);\n\t\t\t\t\tif (expression) {\n\t\t\t\t\t\tthis.stepCompletionContextKeyExpressions.add(\n\t\t\t\t\t\t\texpression,\n\t\t\t\t\t\t);\n\t\t\t\t\t\texpression\n\t\t\t\t\t\t\t.keys()\n\t\t\t\t\t\t\t.forEach((key) =>\n\t\t\t\t\t\t\t\tthis.stepCompletionContextKeys.add(key),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tevent = eventType + \":\" + expression.serialize();\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis.contextService.contextMatchesRules(expression)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.sessionEvents.add(event);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t\t\"Unable to parse context key expression:\",\n\t\t\t\t\t\t\texpression,\n\t\t\t\t\t\t\t\"in walkthrough step\",\n\t\t\t\t\t\t\tstep.id,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"onStepSelected\":\n\t\t\t\tcase \"stepSelected\":\n\t\t\t\t\tevent = \"stepSelected:\" + step.id;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"onCommand\":\n\t\t\t\t\tevent = eventType + \":\" + argument.replace(/^toSide:/, \"\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"onExtensionInstalled\":\n\t\t\t\tcase \"extensionInstalled\":\n\t\t\t\t\tevent = \"extensionInstalled:\" + argument.toLowerCase();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t`Unknown completionEvent ${event} when registering step ${step.id}`,\n\t\t\t\t\t);\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis.registerCompletionListener(event, step);\n\t\t}\n\t}\n\n\tprivate registerCompletionListener(event: string, step: IWalkthroughStep) {\n\t\tif (!this.completionListeners.has(event)) {\n\t\t\tthis.completionListeners.set(event, new Set());\n\t\t}\n\t\tthis.completionListeners.get(event)?.add(step.id);\n\t}\n\n\tprivate getStep(id: string): IWalkthroughStep {\n\t\tconst step = this.steps.get(id);\n\t\tif (!step) {\n\t\t\tthrow Error(\n\t\t\t\t\"Attempting to access step which does not exist in registry \" +\n\t\t\t\t\tid,\n\t\t\t);\n\t\t}\n\t\treturn step;\n\t}\n}\n\nexport const parseDescription = (desc: string): LinkedText[] =>\n\tdesc\n\t\t.split(\"\\n\")\n\t\t.filter((x) => x)\n\t\t.map((text) => parseLinkedText(text));\n\nexport const convertInternalMediaPathToFileURI = (path: string) =>\n\tpath.startsWith(\"https://\")\n\t\t? URI.parse(path, true)\n\t\t: FileAccess.asFileUri(\n\t\t\t\t`vs/workbench/contrib/welcomeGettingStarted/common/media/${path}`,\n\t\t\t);\n\nconst convertInternalMediaPathToBrowserURI = (path: string) =>\n\tpath.startsWith(\"https://\")\n\t\t? URI.parse(path, true)\n\t\t: FileAccess.asBrowserUri(\n\t\t\t\t`vs/workbench/contrib/welcomeGettingStarted/common/media/${path}`,\n\t\t\t);\nconst convertInternalMediaPathsToBrowserURIs = (\n\tpath:\n\t\t| string\n\t\t| { hc: string; hcLight?: string; dark: string; light: string },\n): { hcDark: URI; hcLight: URI; dark: URI; light: URI } => {\n\tif (typeof path === \"string\") {\n\t\tconst converted = convertInternalMediaPathToBrowserURI(path);\n\t\treturn {\n\t\t\thcDark: converted,\n\t\t\thcLight: converted,\n\t\t\tdark: converted,\n\t\t\tlight: converted,\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\thcDark: convertInternalMediaPathToBrowserURI(path.hc),\n\t\t\thcLight: convertInternalMediaPathToBrowserURI(\n\t\t\t\tpath.hcLight ?? path.light,\n\t\t\t),\n\t\t\tlight: convertInternalMediaPathToBrowserURI(path.light),\n\t\t\tdark: convertInternalMediaPathToBrowserURI(path.dark),\n\t\t};\n\t}\n};\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"resetGettingStartedProgress\",\n\t\t\t\tcategory: localize2(\"developer\", \"Developer\"),\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"resetWelcomePageWalkthroughProgress\",\n\t\t\t\t\t\"Reset Welcome Page Walkthrough Progress\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tmetadata: {\n\t\t\t\t\tdescription: localize2(\n\t\t\t\t\t\t\"resetGettingStartedProgressDescription\",\n\t\t\t\t\t\t\"Reset the progress of all Walkthrough steps on the Welcome Page to make them appear as if they are being viewed for the first time, providing a fresh start to the getting started experience.\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor) {\n\t\t\tconst gettingStartedService = accessor.get(IWalkthroughsService);\n\t\t\tconst storageService = accessor.get(IStorageService);\n\n\t\t\tstorageService.store(\n\t\t\t\thiddenEntriesConfigurationKey,\n\t\t\t\tJSON.stringify([]),\n\t\t\t\tStorageScope.PROFILE,\n\t\t\t\tStorageTarget.USER,\n\t\t\t);\n\n\t\t\tstorageService.store(\n\t\t\t\twalkthroughMetadataConfigurationKey,\n\t\t\t\tJSON.stringify([]),\n\t\t\t\tStorageScope.PROFILE,\n\t\t\t\tStorageTarget.USER,\n\t\t\t);\n\n\t\t\tconst memento = new Memento(\n\t\t\t\t\"gettingStartedService\",\n\t\t\t\taccessor.get(IStorageService),\n\t\t\t);\n\t\t\tconst record = memento.getMemento(\n\t\t\t\tStorageScope.PROFILE,\n\t\t\t\tStorageTarget.USER,\n\t\t\t);\n\t\t\tfor (const key in record) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(record, key)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tgettingStartedService.deprogressStep(key);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemento.saveMemento();\n\t\t}\n\t},\n);\n\nregisterSingleton(\n\tIWalkthroughsService,\n\tWalkthroughsService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": "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",
  "names": ["index", "path"]
}
