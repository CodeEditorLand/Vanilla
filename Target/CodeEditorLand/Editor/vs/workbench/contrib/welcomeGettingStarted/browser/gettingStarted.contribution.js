var q=Object.defineProperty;var F=Object.getOwnPropertyDescriptor;var O=(t,e,o,r)=>{for(var n=r>1?void 0:r?F(e,o):e,s=t.length-1,a;s>=0;s--)(a=t[s])&&(n=(r?a(e,o,n):a(n))||n);return r&&n&&q(e,o,n),n},w=(t,e)=>(o,r)=>e(o,r,t);import{KeyCode as K}from"../../../../../vs/base/common/keyCodes.js";import{DisposableStore as Q}from"../../../../../vs/base/common/lifecycle.js";import{isLinux as B,isMacintosh as z,isWindows as H,OperatingSystem as b}from"../../../../../vs/base/common/platform.js";import{localize as c,localize2 as u}from"../../../../../vs/nls.js";import{Categories as L}from"../../../../../vs/platform/action/common/actionCommonCategories.js";import{Action2 as g,MenuId as N,registerAction2 as f}from"../../../../../vs/platform/actions/common/actions.js";import{CommandsRegistry as _,ICommandService as M}from"../../../../../vs/platform/commands/common/commands.js";import{Extensions as j,ConfigurationScope as E}from"../../../../../vs/platform/configuration/common/configurationRegistry.js";import{ContextKeyExpr as J,IContextKeyService as G,RawContextKey as X}from"../../../../../vs/platform/contextkey/common/contextkey.js";import{SyncDescriptor as Y}from"../../../../../vs/platform/instantiation/common/descriptors.js";import{IInstantiationService as Z}from"../../../../../vs/platform/instantiation/common/instantiation.js";import{KeybindingWeight as $}from"../../../../../vs/platform/keybinding/common/keybindingsRegistry.js";import{IQuickInputService as ee}from"../../../../../vs/platform/quickinput/common/quickInput.js";import{Registry as I}from"../../../../../vs/platform/registry/common/platform.js";import{EditorPaneDescriptor as te}from"../../../../../vs/workbench/browser/editor.js";import{workbenchConfigurationNodeBase as oe}from"../../../../../vs/workbench/common/configuration.js";import{registerWorkbenchContribution2 as x,WorkbenchPhase as C}from"../../../../../vs/workbench/common/contributions.js";import{EditorExtensions as D}from"../../../../../vs/workbench/common/editor.js";import{ExtensionsInput as re}from"../../../../../vs/workbench/contrib/extensions/common/extensionsInput.js";import{GettingStartedInputSerializer as ie,GettingStartedPage as v,inWelcomeContext as ne}from"../../../../../vs/workbench/contrib/welcomeGettingStarted/browser/gettingStarted.js";import{GettingStartedInput as p}from"../../../../../vs/workbench/contrib/welcomeGettingStarted/browser/gettingStartedInput.js";import{IWalkthroughsService as P}from"../../../../../vs/workbench/contrib/welcomeGettingStarted/browser/gettingStartedService.js";import{StartupPageEditorResolverContribution as T,StartupPageRunnerContribution as U}from"../../../../../vs/workbench/contrib/welcomeGettingStarted/browser/startupPage.js";import{IEditorGroupsService as se}from"../../../../../vs/workbench/services/editor/common/editorGroupsService.js";import{IEditorService as R,SIDE_GROUP as W}from"../../../../../vs/workbench/services/editor/common/editorService.js";import{IExtensionManagementServerService as ce}from"../../../../../vs/workbench/services/extensionManagement/common/extensionManagement.js";import{IExtensionService as ae}from"../../../../../vs/workbench/services/extensions/common/extensions.js";import{IRemoteAgentService as de}from"../../../../../vs/workbench/services/remote/common/remoteAgentService.js";import*as _e from"../../../../../vs/workbench/contrib/welcomeGettingStarted/browser/gettingStartedIcons.js";f(class extends g{constructor(){super({id:"workbench.action.openWalkthrough",title:u("miWelcome","Welcome"),category:L.Help,f1:!0,menu:{id:N.MenubarHelpMenu,group:"1_welcome",order:1},metadata:{description:u("minWelcomeDescription","Opens a Walkthrough to help you get started in VS Code.")}})}run(t,e,o){const r=t.get(se),n=t.get(Z),s=t.get(R),a=t.get(M);if(e){const i=typeof e=="string"?e:e.category,d=typeof e=="string"?void 0:e.category+"#"+e.step;if(!i&&!d){s.openEditor({resource:p.RESOURCE,options:{preserveFocus:o??!1}},o?W:void 0);return}for(const l of r.groups)if(l.activeEditor instanceof p){l.activeEditorPane.makeCategoryVisibleWhenAvailable(i,d);return}const V=s.findEditors({typeId:p.ID,editorId:void 0,resource:p.RESOURCE});for(const{editor:l,groupId:y}of V)if(l instanceof p){const A=r.getGroup(y);if(!l.selectedCategory&&A){l.selectedCategory=i,l.selectedStep=d,A.openEditor(l,{revealIfOpened:!0});return}}const S=s.activeEditor;if(d&&S instanceof p&&S.selectedCategory===i){a.executeCommand("walkthroughs.selectStep",d);return}if(S instanceof re)r.activeGroup.replaceEditors([{editor:S,replacement:n.createInstance(p,{selectedCategory:i,selectedStep:d})}]);else{const l={selectedCategory:i,selectedStep:d,preserveFocus:o??!1};s.openEditor({resource:p.RESOURCE,options:l},o?W:void 0).then(y=>{y?.makeCategoryVisibleWhenAvailable(i,d)})}}else s.openEditor({resource:p.RESOURCE,options:{preserveFocus:o??!1}},o?W:void 0)}}),I.as(D.EditorFactory).registerEditorSerializer(p.ID,ie),I.as(D.EditorPane).registerEditorPane(te.create(v,v.ID,c("welcome","Welcome")),[new Y(p)]);const k=u("welcome","Welcome");f(class extends g{constructor(){super({id:"welcome.goBack",title:u("welcome.goBack","Go Back"),category:k,keybinding:{weight:$.EditorContrib,primary:K.Escape,when:ne},precondition:J.equals("activeEditor","gettingStartedPage"),f1:!0})}run(t){const o=t.get(R).activeEditorPane;o instanceof v&&o.escape()}}),_.registerCommand({id:"walkthroughs.selectStep",handler:(t,e)=>{const r=t.get(R).activeEditorPane;r instanceof v?r.selectStepLoose(e):console.error("Cannot run walkthroughs.selectStep outside of walkthrough context")}}),f(class extends g{constructor(){super({id:"welcome.markStepComplete",title:c("welcome.markStepComplete","Mark Step Complete"),category:k})}run(t,e){if(!e)return;t.get(P).progressStep(e)}}),f(class extends g{constructor(){super({id:"welcome.markStepIncomplete",title:c("welcome.markStepInomplete","Mark Step Incomplete"),category:k})}run(t,e){if(!e)return;t.get(P).deprogressStep(e)}}),f(class extends g{constructor(){super({id:"welcome.showAllWalkthroughs",title:u("welcome.showAllWalkthroughs","Open Walkthrough..."),category:k,f1:!0})}async getQuickPickItems(t,e){return(await e.getWalkthroughs()).filter(r=>t.contextMatchesRules(r.when)).map(r=>({id:r.id,label:r.title,detail:r.description,description:r.source}))}async run(t){const e=t.get(M),o=t.get(G),r=t.get(ee),n=t.get(P),s=t.get(ae),a=new Q,i=a.add(r.createQuickPick());i.canSelectMany=!1,i.matchOnDescription=!0,i.matchOnDetail=!0,i.placeholder=c("pickWalkthroughs","Select a walkthrough to open"),i.items=await this.getQuickPickItems(o,n),i.busy=!0,a.add(i.onDidAccept(()=>{const d=i.selectedItems[0];d&&e.executeCommand("workbench.action.openWalkthrough",d.id),i.hide()})),a.add(i.onDidHide(()=>a.dispose())),await s.whenInstalledExtensionsRegistered(),n.onDidAddWalkthrough(async()=>{i.items=await this.getQuickPickItems(o,n)}),i.show(),i.busy=!1}});const h=new X("workspacePlatform",void 0,c("workspacePlatform","The platform of the current workspace, which in remote or serverless contexts may be different from the platform of the UI"));let m=class{constructor(e,o,r){this.extensionManagementServerService=e;this.remoteAgentService=o;this.contextService=r;this.remoteAgentService.getEnvironment().then(n=>{const s=n?.os,a=s===b.Macintosh?"mac":s===b.Windows?"windows":s===b.Linux?"linux":void 0;a?h.bindTo(this.contextService).set(a):this.extensionManagementServerService.localExtensionManagementServer?z?h.bindTo(this.contextService).set("mac"):B?h.bindTo(this.contextService).set("linux"):H&&h.bindTo(this.contextService).set("windows"):this.extensionManagementServerService.webExtensionManagementServer?h.bindTo(this.contextService).set("webworker"):console.error("Error: Unable to detect workspace platform")})}static ID="workbench.contrib.workspacePlatform"};m=O([w(0,ce),w(1,de),w(2,G)],m);const le=I.as(j.Configuration);le.registerConfiguration({...oe,properties:{"workbench.welcomePage.walkthroughs.openOnInstall":{scope:E.MACHINE,type:"boolean",default:!0,description:c("workbench.welcomePage.walkthroughs.openOnInstall","When enabled, an extension's walkthrough will open upon install of the extension.")},"workbench.startupEditor":{scope:E.RESOURCE,type:"string",enum:["none","welcomePage","readme","newUntitledFile","welcomePageInEmptyWorkbench","terminal"],enumDescriptions:[c({comment:["This is the description for a setting. Values surrounded by single quotes are not to be translated."],key:"workbench.startupEditor.none"},"Start without an editor."),c({comment:["This is the description for a setting. Values surrounded by single quotes are not to be translated."],key:"workbench.startupEditor.welcomePage"},"Open the Welcome page, with content to aid in getting started with VS Code and extensions."),c({comment:["This is the description for a setting. Values surrounded by single quotes are not to be translated."],key:"workbench.startupEditor.readme"},"Open the README when opening a folder that contains one, fallback to 'welcomePage' otherwise. Note: This is only observed as a global configuration, it will be ignored if set in a workspace or folder configuration."),c({comment:["This is the description for a setting. Values surrounded by single quotes are not to be translated."],key:"workbench.startupEditor.newUntitledFile"},"Open a new untitled text file (only applies when opening an empty window)."),c({comment:["This is the description for a setting. Values surrounded by single quotes are not to be translated."],key:"workbench.startupEditor.welcomePageInEmptyWorkbench"},"Open the Welcome page when opening an empty workbench."),c({comment:["This is the description for a setting. Values surrounded by single quotes are not to be translated."],key:"workbench.startupEditor.terminal"},"Open a new terminal in the editor area.")],default:"welcomePage",description:c("workbench.startupEditor","Controls which editor is shown at startup, if none are restored from the previous session.")},"workbench.welcomePage.preferReducedMotion":{scope:E.APPLICATION,type:"boolean",default:!1,deprecationMessage:c("deprecationMessage","Deprecated, use the global `workbench.reduceMotion`."),description:c("workbench.welcomePage.preferReducedMotion","When enabled, reduce motion in welcome page.")}}}),x(m.ID,m,C.AfterRestored),x(T.ID,T,C.BlockRestore),x(U.ID,U,C.AfterRestored);export{h as WorkspacePlatform,_e as icons};
