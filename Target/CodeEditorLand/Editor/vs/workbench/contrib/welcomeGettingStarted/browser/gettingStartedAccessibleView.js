import{AccessibleViewType as c,AccessibleViewProviderId as a}from"../../../../platform/accessibility/browser/accessibleView.js";import"../../../../platform/accessibility/browser/accessibleViewRegistry.js";import"../../../../platform/contextkey/common/contextkey.js";import"../../../../platform/instantiation/common/instantiation.js";import{GettingStartedPage as l}from"./gettingStarted.js";import{Disposable as g}from"../../../../base/common/lifecycle.js";import{IWalkthroughsService as p}from"./gettingStartedService.js";import{AccessibilityVerbositySettingId as m}from"../../accessibility/browser/accessibilityConfiguration.js";import{IEditorService as u}from"../../../services/editor/common/editorService.js";import{GettingStartedInput as v}from"./gettingStartedInput.js";import{localize as o}from"../../../../nls.js";class K{type=c.View;priority=110;name="walkthroughs";when;getProvider=i=>{const e=i.get(u).activeEditorPane;if(!(e instanceof l))return;const t=e.input;if(!(t instanceof v)||!t.selectedCategory)return;const s=i.get(p).getWalkthrough(t.selectedCategory);if(s)return new S(e,s)}}class S extends g{constructor(r,e){super();this._gettingStartedPage=r;this._focusedItem=e}id=a.Walkthrough;verbositySettingKey=m.Walkthrough;options={type:c.View};provideContent(){return this._getContent(this._focusedItem)}_getContent(r){const e=r.steps.map((t,n)=>o("gettingStarted.step",`Step {0}: {1}
Description: {2}`,n+1,t.title,t.description.join(" "))).join(`

`);return[o("gettingStarted.title","Title: {0}",r.title),o("gettingStarted.description","Description: {0}",r.description),e].join(`

`)}onClose(){this._gettingStartedPage.focus()}}export{K as GettingStartedAccessibleView};
