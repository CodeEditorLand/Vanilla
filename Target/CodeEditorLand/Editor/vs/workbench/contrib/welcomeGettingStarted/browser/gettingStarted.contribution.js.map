{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/welcomeGettingStarted/browser/gettingStarted.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize, localize2 } from '../../../../nls.js';\nimport { GettingStartedInputSerializer, GettingStartedPage, inWelcomeContext } from './gettingStarted.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { EditorExtensions, IEditorFactoryRegistry } from '../../../common/editor.js';\nimport { MenuId, registerAction2, Action2 } from '../../../../platform/actions/common/actions.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IEditorService, SIDE_GROUP } from '../../../services/editor/common/editorService.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { KeyCode } from '../../../../base/common/keyCodes.js';\nimport { EditorPaneDescriptor, IEditorPaneRegistry } from '../../../browser/editor.js';\nimport { SyncDescriptor } from '../../../../platform/instantiation/common/descriptors.js';\nimport { IWalkthroughsService } from './gettingStartedService.js';\nimport { GettingStartedEditorOptions, GettingStartedInput } from './gettingStartedInput.js';\nimport { registerWorkbenchContribution2, WorkbenchPhase } from '../../../common/contributions.js';\nimport { ConfigurationScope, Extensions as ConfigurationExtensions, IConfigurationRegistry } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { workbenchConfigurationNodeBase } from '../../../common/configuration.js';\nimport { IEditorGroupsService } from '../../../services/editor/common/editorGroupsService.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IQuickInputService, IQuickPickItem } from '../../../../platform/quickinput/common/quickInput.js';\nimport { IRemoteAgentService } from '../../../services/remote/common/remoteAgentService.js';\nimport { isLinux, isMacintosh, isWindows, OperatingSystem as OS } from '../../../../base/common/platform.js';\nimport { IExtensionManagementServerService } from '../../../services/extensionManagement/common/extensionManagement.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { StartupPageEditorResolverContribution, StartupPageRunnerContribution } from './startupPage.js';\nimport { ExtensionsInput } from '../../extensions/common/extensionsInput.js';\nimport { Categories } from '../../../../platform/action/common/actionCommonCategories.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { AccessibleViewRegistry } from '../../../../platform/accessibility/browser/accessibleViewRegistry.js';\nimport { GettingStartedAccessibleView } from './gettingStartedAccessibleView.js';\n\nexport * as icons from './gettingStartedIcons.js';\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.openWalkthrough',\n\t\t\ttitle: localize2('miWelcome', 'Welcome'),\n\t\t\tcategory: Categories.Help,\n\t\t\tf1: true,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarHelpMenu,\n\t\t\t\tgroup: '1_welcome',\n\t\t\t\torder: 1,\n\t\t\t},\n\t\t\tmetadata: {\n\t\t\t\tdescription: localize2('minWelcomeDescription', 'Opens a Walkthrough to help you get started in VS Code.')\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(\n\t\taccessor: ServicesAccessor,\n\t\twalkthroughID: string | { category: string; step: string } | undefined,\n\t\ttoSide: boolean | undefined\n\t) {\n\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst commandService = accessor.get(ICommandService);\n\n\t\tif (walkthroughID) {\n\t\t\tconst selectedCategory = typeof walkthroughID === 'string' ? walkthroughID : walkthroughID.category;\n\t\t\tconst selectedStep = typeof walkthroughID === 'string' ? undefined : walkthroughID.category + '#' + walkthroughID.step;\n\n\t\t\t// We're trying to open the welcome page from the Help menu\n\t\t\tif (!selectedCategory && !selectedStep) {\n\t\t\t\teditorService.openEditor({\n\t\t\t\t\tresource: GettingStartedInput.RESOURCE,\n\t\t\t\t\toptions: { preserveFocus: toSide ?? false }\n\t\t\t\t}, toSide ? SIDE_GROUP : undefined);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Try first to select the walkthrough on an active welcome page with no selected walkthrough\n\t\t\tfor (const group of editorGroupsService.groups) {\n\t\t\t\tif (group.activeEditor instanceof GettingStartedInput) {\n\t\t\t\t\t(group.activeEditorPane as GettingStartedPage).makeCategoryVisibleWhenAvailable(selectedCategory, selectedStep);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Otherwise, try to find a welcome input somewhere with no selected walkthrough, and open it to this one.\n\t\t\tconst result = editorService.findEditors({ typeId: GettingStartedInput.ID, editorId: undefined, resource: GettingStartedInput.RESOURCE });\n\t\t\tfor (const { editor, groupId } of result) {\n\t\t\t\tif (editor instanceof GettingStartedInput) {\n\t\t\t\t\tconst group = editorGroupsService.getGroup(groupId);\n\t\t\t\t\tif (!editor.selectedCategory && group) {\n\t\t\t\t\t\teditor.selectedCategory = selectedCategory;\n\t\t\t\t\t\teditor.selectedStep = selectedStep;\n\t\t\t\t\t\tgroup.openEditor(editor, { revealIfOpened: true });\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst activeEditor = editorService.activeEditor;\n\t\t\t// If the walkthrough is already open just reveal the step\n\t\t\tif (selectedStep && activeEditor instanceof GettingStartedInput && activeEditor.selectedCategory === selectedCategory) {\n\t\t\t\tcommandService.executeCommand('walkthroughs.selectStep', selectedStep);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If it's the extension install page then lets replace it with the getting started page\n\t\t\tif (activeEditor instanceof ExtensionsInput) {\n\t\t\t\tconst activeGroup = editorGroupsService.activeGroup;\n\t\t\t\tactiveGroup.replaceEditors([{\n\t\t\t\t\teditor: activeEditor,\n\t\t\t\t\treplacement: instantiationService.createInstance(GettingStartedInput, { selectedCategory: selectedCategory, selectedStep: selectedStep })\n\t\t\t\t}]);\n\t\t\t} else {\n\t\t\t\t// else open respecting toSide\n\t\t\t\tconst options: GettingStartedEditorOptions = { selectedCategory: selectedCategory, selectedStep: selectedStep, preserveFocus: toSide ?? false };\n\t\t\t\teditorService.openEditor({\n\t\t\t\t\tresource: GettingStartedInput.RESOURCE,\n\t\t\t\t\toptions\n\t\t\t\t}, toSide ? SIDE_GROUP : undefined).then((editor) => {\n\t\t\t\t\t(editor as GettingStartedPage)?.makeCategoryVisibleWhenAvailable(selectedCategory, selectedStep);\n\t\t\t\t});\n\n\t\t\t}\n\t\t} else {\n\t\t\teditorService.openEditor({\n\t\t\t\tresource: GettingStartedInput.RESOURCE,\n\t\t\t\toptions: { preserveFocus: toSide ?? false }\n\t\t\t}, toSide ? SIDE_GROUP : undefined);\n\t\t}\n\t}\n});\n\nRegistry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory).registerEditorSerializer(GettingStartedInput.ID, GettingStartedInputSerializer);\nRegistry.as<IEditorPaneRegistry>(EditorExtensions.EditorPane).registerEditorPane(\n\tEditorPaneDescriptor.create(\n\t\tGettingStartedPage,\n\t\tGettingStartedPage.ID,\n\t\tlocalize('welcome', \"Welcome\")\n\t),\n\t[\n\t\tnew SyncDescriptor(GettingStartedInput)\n\t]\n);\n\nconst category = localize2('welcome', \"Welcome\");\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'welcome.goBack',\n\t\t\ttitle: localize2('welcome.goBack', 'Go Back'),\n\t\t\tcategory,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\twhen: inWelcomeContext\n\t\t\t},\n\t\t\tprecondition: ContextKeyExpr.equals('activeEditor', 'gettingStartedPage'),\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor) {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorPane = editorService.activeEditorPane;\n\t\tif (editorPane instanceof GettingStartedPage) {\n\t\t\teditorPane.escape();\n\t\t}\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: 'walkthroughs.selectStep',\n\thandler: (accessor, stepID: string) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorPane = editorService.activeEditorPane;\n\t\tif (editorPane instanceof GettingStartedPage) {\n\t\t\teditorPane.selectStepLoose(stepID);\n\t\t} else {\n\t\t\tconsole.error('Cannot run walkthroughs.selectStep outside of walkthrough context');\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'welcome.markStepComplete',\n\t\t\ttitle: localize('welcome.markStepComplete', \"Mark Step Complete\"),\n\t\t\tcategory,\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, arg: string) {\n\t\tif (!arg) { return; }\n\t\tconst gettingStartedService = accessor.get(IWalkthroughsService);\n\t\tgettingStartedService.progressStep(arg);\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'welcome.markStepIncomplete',\n\t\t\ttitle: localize('welcome.markStepInomplete', \"Mark Step Incomplete\"),\n\t\t\tcategory,\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, arg: string) {\n\t\tif (!arg) { return; }\n\t\tconst gettingStartedService = accessor.get(IWalkthroughsService);\n\t\tgettingStartedService.deprogressStep(arg);\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'welcome.showAllWalkthroughs',\n\t\t\ttitle: localize2('welcome.showAllWalkthroughs', 'Open Walkthrough...'),\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tprivate async getQuickPickItems(\n\t\tcontextService: IContextKeyService,\n\t\tgettingStartedService: IWalkthroughsService\n\t): Promise<IQuickPickItem[]> {\n\t\tconst categories = await gettingStartedService.getWalkthroughs();\n\t\treturn categories\n\t\t\t.filter(c => contextService.contextMatchesRules(c.when))\n\t\t\t.map(x => ({\n\t\t\t\tid: x.id,\n\t\t\t\tlabel: x.title,\n\t\t\t\tdetail: x.description,\n\t\t\t\tdescription: x.source,\n\t\t\t}));\n\t}\n\n\tasync run(accessor: ServicesAccessor) {\n\t\tconst commandService = accessor.get(ICommandService);\n\t\tconst contextService = accessor.get(IContextKeyService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst gettingStartedService = accessor.get(IWalkthroughsService);\n\t\tconst extensionService = accessor.get(IExtensionService);\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst quickPick = disposables.add(quickInputService.createQuickPick());\n\t\tquickPick.canSelectMany = false;\n\t\tquickPick.matchOnDescription = true;\n\t\tquickPick.matchOnDetail = true;\n\t\tquickPick.placeholder = localize('pickWalkthroughs', 'Select a walkthrough to open');\n\t\tquickPick.items = await this.getQuickPickItems(contextService, gettingStartedService);\n\t\tquickPick.busy = true;\n\t\tdisposables.add(quickPick.onDidAccept(() => {\n\t\t\tconst selection = quickPick.selectedItems[0];\n\t\t\tif (selection) {\n\t\t\t\tcommandService.executeCommand('workbench.action.openWalkthrough', selection.id);\n\t\t\t}\n\t\t\tquickPick.hide();\n\t\t}));\n\t\tdisposables.add(quickPick.onDidHide(() => disposables.dispose()));\n\t\tawait extensionService.whenInstalledExtensionsRegistered();\n\t\tgettingStartedService.onDidAddWalkthrough(async () => {\n\t\t\tquickPick.items = await this.getQuickPickItems(contextService, gettingStartedService);\n\t\t});\n\t\tquickPick.show();\n\t\tquickPick.busy = false;\n\t}\n});\n\nexport const WorkspacePlatform = new RawContextKey<'mac' | 'linux' | 'windows' | 'webworker' | undefined>('workspacePlatform', undefined, localize('workspacePlatform', \"The platform of the current workspace, which in remote or serverless contexts may be different from the platform of the UI\"));\nclass WorkspacePlatformContribution {\n\n\tstatic readonly ID = 'workbench.contrib.workspacePlatform';\n\n\tconstructor(\n\t\t@IExtensionManagementServerService private readonly extensionManagementServerService: IExtensionManagementServerService,\n\t\t@IRemoteAgentService private readonly remoteAgentService: IRemoteAgentService,\n\t\t@IContextKeyService private readonly contextService: IContextKeyService,\n\t) {\n\t\tthis.remoteAgentService.getEnvironment().then(env => {\n\t\t\tconst remoteOS = env?.os;\n\n\t\t\tconst remotePlatform = remoteOS === OS.Macintosh ? 'mac'\n\t\t\t\t: remoteOS === OS.Windows ? 'windows'\n\t\t\t\t\t: remoteOS === OS.Linux ? 'linux'\n\t\t\t\t\t\t: undefined;\n\n\t\t\tif (remotePlatform) {\n\t\t\t\tWorkspacePlatform.bindTo(this.contextService).set(remotePlatform);\n\t\t\t} else if (this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\tWorkspacePlatform.bindTo(this.contextService).set('mac');\n\t\t\t\t} else if (isLinux) {\n\t\t\t\t\tWorkspacePlatform.bindTo(this.contextService).set('linux');\n\t\t\t\t} else if (isWindows) {\n\t\t\t\t\tWorkspacePlatform.bindTo(this.contextService).set('windows');\n\t\t\t\t}\n\t\t\t} else if (this.extensionManagementServerService.webExtensionManagementServer) {\n\t\t\t\tWorkspacePlatform.bindTo(this.contextService).set('webworker');\n\t\t\t} else {\n\t\t\t\tconsole.error('Error: Unable to detect workspace platform');\n\t\t\t}\n\t\t});\n\t}\n}\n\nconst configurationRegistry = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration);\nconfigurationRegistry.registerConfiguration({\n\t...workbenchConfigurationNodeBase,\n\tproperties: {\n\t\t'workbench.welcomePage.walkthroughs.openOnInstall': {\n\t\t\tscope: ConfigurationScope.MACHINE,\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tdescription: localize('workbench.welcomePage.walkthroughs.openOnInstall', \"When enabled, an extension's walkthrough will open upon install of the extension.\")\n\t\t},\n\t\t'workbench.startupEditor': {\n\t\t\t'scope': ConfigurationScope.RESOURCE,\n\t\t\t'type': 'string',\n\t\t\t'enum': ['none', 'welcomePage', 'readme', 'newUntitledFile', 'welcomePageInEmptyWorkbench', 'terminal'],\n\t\t\t'enumDescriptions': [\n\t\t\t\tlocalize({ comment: ['This is the description for a setting. Values surrounded by single quotes are not to be translated.'], key: 'workbench.startupEditor.none' }, \"Start without an editor.\"),\n\t\t\t\tlocalize({ comment: ['This is the description for a setting. Values surrounded by single quotes are not to be translated.'], key: 'workbench.startupEditor.welcomePage' }, \"Open the Welcome page, with content to aid in getting started with VS Code and extensions.\"),\n\t\t\t\tlocalize({ comment: ['This is the description for a setting. Values surrounded by single quotes are not to be translated.'], key: 'workbench.startupEditor.readme' }, \"Open the README when opening a folder that contains one, fallback to 'welcomePage' otherwise. Note: This is only observed as a global configuration, it will be ignored if set in a workspace or folder configuration.\"),\n\t\t\t\tlocalize({ comment: ['This is the description for a setting. Values surrounded by single quotes are not to be translated.'], key: 'workbench.startupEditor.newUntitledFile' }, \"Open a new untitled text file (only applies when opening an empty window).\"),\n\t\t\t\tlocalize({ comment: ['This is the description for a setting. Values surrounded by single quotes are not to be translated.'], key: 'workbench.startupEditor.welcomePageInEmptyWorkbench' }, \"Open the Welcome page when opening an empty workbench.\"),\n\t\t\t\tlocalize({ comment: ['This is the description for a setting. Values surrounded by single quotes are not to be translated.'], key: 'workbench.startupEditor.terminal' }, \"Open a new terminal in the editor area.\"),\n\t\t\t],\n\t\t\t'default': 'welcomePage',\n\t\t\t'description': localize('workbench.startupEditor', \"Controls which editor is shown at startup, if none are restored from the previous session.\")\n\t\t},\n\t\t'workbench.welcomePage.preferReducedMotion': {\n\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdeprecationMessage: localize('deprecationMessage', \"Deprecated, use the global `workbench.reduceMotion`.\"),\n\t\t\tdescription: localize('workbench.welcomePage.preferReducedMotion', \"When enabled, reduce motion in welcome page.\")\n\t\t}\n\t}\n});\n\nregisterWorkbenchContribution2(WorkspacePlatformContribution.ID, WorkspacePlatformContribution, WorkbenchPhase.AfterRestored);\nregisterWorkbenchContribution2(StartupPageEditorResolverContribution.ID, StartupPageEditorResolverContribution, WorkbenchPhase.BlockRestore);\nregisterWorkbenchContribution2(StartupPageRunnerContribution.ID, StartupPageRunnerContribution, WorkbenchPhase.AfterRestored);\n\nAccessibleViewRegistry.register(new GettingStartedAccessibleView());\n\n"],
  "mappings": "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",
  "names": []
}
