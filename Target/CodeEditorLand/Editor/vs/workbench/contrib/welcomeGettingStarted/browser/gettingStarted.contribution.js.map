{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/welcomeGettingStarted/browser/gettingStarted.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode } from \"../../../../base/common/keyCodes.js\";\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport {\n\tOperatingSystem as OS,\n\tisLinux,\n\tisMacintosh,\n\tisWindows,\n} from \"../../../../base/common/platform.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport { AccessibleViewRegistry } from \"../../../../platform/accessibility/browser/accessibleViewRegistry.js\";\nimport { Categories } from \"../../../../platform/action/common/actionCommonCategories.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport {\n\tCommandsRegistry,\n\tICommandService,\n} from \"../../../../platform/commands/common/commands.js\";\nimport {\n\tExtensions as ConfigurationExtensions,\n\tConfigurationScope,\n\ttype IConfigurationRegistry,\n} from \"../../../../platform/configuration/common/configurationRegistry.js\";\nimport {\n\tContextKeyExpr,\n\tIContextKeyService,\n\tRawContextKey,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { SyncDescriptor } from \"../../../../platform/instantiation/common/descriptors.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport {\n\tIQuickInputService,\n\ttype IQuickPickItem,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\tEditorPaneDescriptor,\n\ttype IEditorPaneRegistry,\n} from \"../../../browser/editor.js\";\nimport { workbenchConfigurationNodeBase } from \"../../../common/configuration.js\";\nimport {\n\tWorkbenchPhase,\n\tregisterWorkbenchContribution2,\n} from \"../../../common/contributions.js\";\nimport {\n\tEditorExtensions,\n\ttype IEditorFactoryRegistry,\n} from \"../../../common/editor.js\";\nimport { IEditorGroupsService } from \"../../../services/editor/common/editorGroupsService.js\";\nimport {\n\tIEditorService,\n\tSIDE_GROUP,\n} from \"../../../services/editor/common/editorService.js\";\nimport { IExtensionManagementServerService } from \"../../../services/extensionManagement/common/extensionManagement.js\";\nimport { IExtensionService } from \"../../../services/extensions/common/extensions.js\";\nimport { IRemoteAgentService } from \"../../../services/remote/common/remoteAgentService.js\";\nimport { ExtensionsInput } from \"../../extensions/common/extensionsInput.js\";\nimport {\n\tGettingStartedInputSerializer,\n\tGettingStartedPage,\n\tinWelcomeContext,\n} from \"./gettingStarted.js\";\nimport { GettingStartedAccessibleView } from \"./gettingStartedAccessibleView.js\";\nimport {\n\ttype GettingStartedEditorOptions,\n\tGettingStartedInput,\n} from \"./gettingStartedInput.js\";\nimport { IWalkthroughsService } from \"./gettingStartedService.js\";\nimport {\n\tStartupPageEditorResolverContribution,\n\tStartupPageRunnerContribution,\n} from \"./startupPage.js\";\n\nexport * as icons from \"./gettingStartedIcons.js\";\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.action.openWalkthrough\",\n\t\t\t\ttitle: localize2(\"miWelcome\", \"Welcome\"),\n\t\t\t\tcategory: Categories.Help,\n\t\t\t\tf1: true,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.MenubarHelpMenu,\n\t\t\t\t\tgroup: \"1_welcome\",\n\t\t\t\t\torder: 1,\n\t\t\t\t},\n\t\t\t\tmetadata: {\n\t\t\t\t\tdescription: localize2(\n\t\t\t\t\t\t\"minWelcomeDescription\",\n\t\t\t\t\t\t\"Opens a Walkthrough to help you get started in VS Code.\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tpublic run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\twalkthroughID:\n\t\t\t\t| string\n\t\t\t\t| { category: string; step: string }\n\t\t\t\t| undefined,\n\t\t\ttoSide: boolean | undefined,\n\t\t) {\n\t\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst commandService = accessor.get(ICommandService);\n\n\t\t\tif (walkthroughID) {\n\t\t\t\tconst selectedCategory =\n\t\t\t\t\ttypeof walkthroughID === \"string\"\n\t\t\t\t\t\t? walkthroughID\n\t\t\t\t\t\t: walkthroughID.category;\n\t\t\t\tconst selectedStep =\n\t\t\t\t\ttypeof walkthroughID === \"string\"\n\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t: walkthroughID.category + \"#\" + walkthroughID.step;\n\n\t\t\t\t// We're trying to open the welcome page from the Help menu\n\t\t\t\tif (!selectedCategory && !selectedStep) {\n\t\t\t\t\teditorService.openEditor(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresource: GettingStartedInput.RESOURCE,\n\t\t\t\t\t\t\toptions: { preserveFocus: toSide ?? false },\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttoSide ? SIDE_GROUP : undefined,\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Try first to select the walkthrough on an active welcome page with no selected walkthrough\n\t\t\t\tfor (const group of editorGroupsService.groups) {\n\t\t\t\t\tif (group.activeEditor instanceof GettingStartedInput) {\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tgroup.activeEditorPane as GettingStartedPage\n\t\t\t\t\t\t).makeCategoryVisibleWhenAvailable(\n\t\t\t\t\t\t\tselectedCategory,\n\t\t\t\t\t\t\tselectedStep,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, try to find a welcome input somewhere with no selected walkthrough, and open it to this one.\n\t\t\t\tconst result = editorService.findEditors({\n\t\t\t\t\ttypeId: GettingStartedInput.ID,\n\t\t\t\t\teditorId: undefined,\n\t\t\t\t\tresource: GettingStartedInput.RESOURCE,\n\t\t\t\t});\n\t\t\t\tfor (const { editor, groupId } of result) {\n\t\t\t\t\tif (editor instanceof GettingStartedInput) {\n\t\t\t\t\t\tconst group = editorGroupsService.getGroup(groupId);\n\t\t\t\t\t\tif (!editor.selectedCategory && group) {\n\t\t\t\t\t\t\teditor.selectedCategory = selectedCategory;\n\t\t\t\t\t\t\teditor.selectedStep = selectedStep;\n\t\t\t\t\t\t\tgroup.openEditor(editor, { revealIfOpened: true });\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst activeEditor = editorService.activeEditor;\n\t\t\t\t// If the walkthrough is already open just reveal the step\n\t\t\t\tif (\n\t\t\t\t\tselectedStep &&\n\t\t\t\t\tactiveEditor instanceof GettingStartedInput &&\n\t\t\t\t\tactiveEditor.selectedCategory === selectedCategory\n\t\t\t\t) {\n\t\t\t\t\tcommandService.executeCommand(\n\t\t\t\t\t\t\"walkthroughs.selectStep\",\n\t\t\t\t\t\tselectedStep,\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// If it's the extension install page then lets replace it with the getting started page\n\t\t\t\tif (activeEditor instanceof ExtensionsInput) {\n\t\t\t\t\tconst activeGroup = editorGroupsService.activeGroup;\n\t\t\t\t\tactiveGroup.replaceEditors([\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\teditor: activeEditor,\n\t\t\t\t\t\t\treplacement: instantiationService.createInstance(\n\t\t\t\t\t\t\t\tGettingStartedInput,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tselectedCategory: selectedCategory,\n\t\t\t\t\t\t\t\t\tselectedStep: selectedStep,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t]);\n\t\t\t\t} else {\n\t\t\t\t\t// else open respecting toSide\n\t\t\t\t\tconst options: GettingStartedEditorOptions = {\n\t\t\t\t\t\tselectedCategory: selectedCategory,\n\t\t\t\t\t\tselectedStep: selectedStep,\n\t\t\t\t\t\tpreserveFocus: toSide ?? false,\n\t\t\t\t\t};\n\t\t\t\t\teditorService\n\t\t\t\t\t\t.openEditor(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tresource: GettingStartedInput.RESOURCE,\n\t\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttoSide ? SIDE_GROUP : undefined,\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.then((editor) => {\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\teditor as GettingStartedPage\n\t\t\t\t\t\t\t)?.makeCategoryVisibleWhenAvailable(\n\t\t\t\t\t\t\t\tselectedCategory,\n\t\t\t\t\t\t\t\tselectedStep,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\teditorService.openEditor(\n\t\t\t\t\t{\n\t\t\t\t\t\tresource: GettingStartedInput.RESOURCE,\n\t\t\t\t\t\toptions: { preserveFocus: toSide ?? false },\n\t\t\t\t\t},\n\t\t\t\t\ttoSide ? SIDE_GROUP : undefined,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n);\n\nRegistry.as<IEditorFactoryRegistry>(\n\tEditorExtensions.EditorFactory,\n).registerEditorSerializer(\n\tGettingStartedInput.ID,\n\tGettingStartedInputSerializer,\n);\nRegistry.as<IEditorPaneRegistry>(\n\tEditorExtensions.EditorPane,\n).registerEditorPane(\n\tEditorPaneDescriptor.create(\n\t\tGettingStartedPage,\n\t\tGettingStartedPage.ID,\n\t\tlocalize(\"welcome\", \"Welcome\"),\n\t),\n\t[new SyncDescriptor(GettingStartedInput)],\n);\n\nconst category = localize2(\"welcome\", \"Welcome\");\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"welcome.goBack\",\n\t\t\t\ttitle: localize2(\"welcome.goBack\", \"Go Back\"),\n\t\t\t\tcategory,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\t\twhen: inWelcomeContext,\n\t\t\t\t},\n\t\t\t\tprecondition: ContextKeyExpr.equals(\n\t\t\t\t\t\"activeEditor\",\n\t\t\t\t\t\"gettingStartedPage\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor) {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst editorPane = editorService.activeEditorPane;\n\t\t\tif (editorPane instanceof GettingStartedPage) {\n\t\t\t\teditorPane.escape();\n\t\t\t}\n\t\t}\n\t},\n);\n\nCommandsRegistry.registerCommand({\n\tid: \"walkthroughs.selectStep\",\n\thandler: (accessor, stepID: string) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorPane = editorService.activeEditorPane;\n\t\tif (editorPane instanceof GettingStartedPage) {\n\t\t\teditorPane.selectStepLoose(stepID);\n\t\t} else {\n\t\t\tconsole.error(\n\t\t\t\t\"Cannot run walkthroughs.selectStep outside of walkthrough context\",\n\t\t\t);\n\t\t}\n\t},\n});\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"welcome.markStepComplete\",\n\t\t\t\ttitle: localize(\n\t\t\t\t\t\"welcome.markStepComplete\",\n\t\t\t\t\t\"Mark Step Complete\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor, arg: string) {\n\t\t\tif (!arg) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst gettingStartedService = accessor.get(IWalkthroughsService);\n\t\t\tgettingStartedService.progressStep(arg);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"welcome.markStepIncomplete\",\n\t\t\t\ttitle: localize(\n\t\t\t\t\t\"welcome.markStepInomplete\",\n\t\t\t\t\t\"Mark Step Incomplete\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor, arg: string) {\n\t\t\tif (!arg) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst gettingStartedService = accessor.get(IWalkthroughsService);\n\t\t\tgettingStartedService.deprogressStep(arg);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"welcome.showAllWalkthroughs\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"welcome.showAllWalkthroughs\",\n\t\t\t\t\t\"Open Walkthrough...\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t\tf1: true,\n\t\t\t});\n\t\t}\n\n\t\tprivate async getQuickPickItems(\n\t\t\tcontextService: IContextKeyService,\n\t\t\tgettingStartedService: IWalkthroughsService,\n\t\t): Promise<IQuickPickItem[]> {\n\t\t\tconst categories = await gettingStartedService.getWalkthroughs();\n\t\t\treturn categories\n\t\t\t\t.filter((c) => contextService.contextMatchesRules(c.when))\n\t\t\t\t.map((x) => ({\n\t\t\t\t\tid: x.id,\n\t\t\t\t\tlabel: x.title,\n\t\t\t\t\tdetail: x.description,\n\t\t\t\t\tdescription: x.source,\n\t\t\t\t}));\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor) {\n\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\tconst contextService = accessor.get(IContextKeyService);\n\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\tconst gettingStartedService = accessor.get(IWalkthroughsService);\n\t\t\tconst extensionService = accessor.get(IExtensionService);\n\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tconst quickPick = disposables.add(\n\t\t\t\tquickInputService.createQuickPick(),\n\t\t\t);\n\t\t\tquickPick.canSelectMany = false;\n\t\t\tquickPick.matchOnDescription = true;\n\t\t\tquickPick.matchOnDetail = true;\n\t\t\tquickPick.placeholder = localize(\n\t\t\t\t\"pickWalkthroughs\",\n\t\t\t\t\"Select a walkthrough to open\",\n\t\t\t);\n\t\t\tquickPick.items = await this.getQuickPickItems(\n\t\t\t\tcontextService,\n\t\t\t\tgettingStartedService,\n\t\t\t);\n\t\t\tquickPick.busy = true;\n\t\t\tdisposables.add(\n\t\t\t\tquickPick.onDidAccept(() => {\n\t\t\t\t\tconst selection = quickPick.selectedItems[0];\n\t\t\t\t\tif (selection) {\n\t\t\t\t\t\tcommandService.executeCommand(\n\t\t\t\t\t\t\t\"workbench.action.openWalkthrough\",\n\t\t\t\t\t\t\tselection.id,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tquickPick.hide();\n\t\t\t\t}),\n\t\t\t);\n\t\t\tdisposables.add(quickPick.onDidHide(() => disposables.dispose()));\n\t\t\tawait extensionService.whenInstalledExtensionsRegistered();\n\t\t\tgettingStartedService.onDidAddWalkthrough(async () => {\n\t\t\t\tquickPick.items = await this.getQuickPickItems(\n\t\t\t\t\tcontextService,\n\t\t\t\t\tgettingStartedService,\n\t\t\t\t);\n\t\t\t});\n\t\t\tquickPick.show();\n\t\t\tquickPick.busy = false;\n\t\t}\n\t},\n);\n\nexport const WorkspacePlatform = new RawContextKey<\n\t\"mac\" | \"linux\" | \"windows\" | \"webworker\" | undefined\n>(\n\t\"workspacePlatform\",\n\tundefined,\n\tlocalize(\n\t\t\"workspacePlatform\",\n\t\t\"The platform of the current workspace, which in remote or serverless contexts may be different from the platform of the UI\",\n\t),\n);\nclass WorkspacePlatformContribution {\n\tstatic readonly ID = \"workbench.contrib.workspacePlatform\";\n\n\tconstructor(\n\t\t@IExtensionManagementServerService private readonly extensionManagementServerService: IExtensionManagementServerService,\n\t\t@IRemoteAgentService private readonly remoteAgentService: IRemoteAgentService,\n\t\t@IContextKeyService private readonly contextService: IContextKeyService,\n\t) {\n\t\tthis.remoteAgentService.getEnvironment().then(env => {\n\t\t\tconst remoteOS = env?.os;\n\n\t\t\tconst remotePlatform = remoteOS === OS.Macintosh ? 'mac'\n\t\t\t\t: remoteOS === OS.Windows ? 'windows'\n\t\t\t\t\t: remoteOS === OS.Linux ? 'linux'\n\t\t\t\t\t\t: undefined;\n\n\t\t\tif (remotePlatform) {\n\t\t\t\tWorkspacePlatform.bindTo(this.contextService).set(remotePlatform);\n\t\t\t} else if (this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\tWorkspacePlatform.bindTo(this.contextService).set('mac');\n\t\t\t\t} else if (isLinux) {\n\t\t\t\t\tWorkspacePlatform.bindTo(this.contextService).set('linux');\n\t\t\t\t} else if (isWindows) {\n\t\t\t\t\tWorkspacePlatform.bindTo(this.contextService).set('windows');\n\t\t\t\t}\n\t\t\t} else if (this.extensionManagementServerService.webExtensionManagementServer) {\n\t\t\t\tWorkspacePlatform.bindTo(this.contextService).set('webworker');\n\t\t\t} else {\n\t\t\t\tconsole.error('Error: Unable to detect workspace platform');\n\t\t\t}\n\t\t});\n\t}\n}\n\nconst configurationRegistry = Registry.as<IConfigurationRegistry>(\n\tConfigurationExtensions.Configuration,\n);\nconfigurationRegistry.registerConfiguration({\n\t...workbenchConfigurationNodeBase,\n\tproperties: {\n\t\t\"workbench.welcomePage.walkthroughs.openOnInstall\": {\n\t\t\tscope: ConfigurationScope.MACHINE,\n\t\t\ttype: \"boolean\",\n\t\t\tdefault: true,\n\t\t\tdescription: localize(\n\t\t\t\t\"workbench.welcomePage.walkthroughs.openOnInstall\",\n\t\t\t\t\"When enabled, an extension's walkthrough will open upon install of the extension.\",\n\t\t\t),\n\t\t},\n\t\t\"workbench.startupEditor\": {\n\t\t\tscope: ConfigurationScope.RESOURCE,\n\t\t\ttype: \"string\",\n\t\t\tenum: [\n\t\t\t\t\"none\",\n\t\t\t\t\"welcomePage\",\n\t\t\t\t\"readme\",\n\t\t\t\t\"newUntitledFile\",\n\t\t\t\t\"welcomePageInEmptyWorkbench\",\n\t\t\t\t\"terminal\",\n\t\t\t],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize(\n\t\t\t\t\t{\n\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\"This is the description for a setting. Values surrounded by single quotes are not to be translated.\",\n\t\t\t\t\t\t],\n\t\t\t\t\t\tkey: \"workbench.startupEditor.none\",\n\t\t\t\t\t},\n\t\t\t\t\t\"Start without an editor.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t{\n\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\"This is the description for a setting. Values surrounded by single quotes are not to be translated.\",\n\t\t\t\t\t\t],\n\t\t\t\t\t\tkey: \"workbench.startupEditor.welcomePage\",\n\t\t\t\t\t},\n\t\t\t\t\t\"Open the Welcome page, with content to aid in getting started with VS Code and extensions.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t{\n\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\"This is the description for a setting. Values surrounded by single quotes are not to be translated.\",\n\t\t\t\t\t\t],\n\t\t\t\t\t\tkey: \"workbench.startupEditor.readme\",\n\t\t\t\t\t},\n\t\t\t\t\t\"Open the README when opening a folder that contains one, fallback to 'welcomePage' otherwise. Note: This is only observed as a global configuration, it will be ignored if set in a workspace or folder configuration.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t{\n\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\"This is the description for a setting. Values surrounded by single quotes are not to be translated.\",\n\t\t\t\t\t\t],\n\t\t\t\t\t\tkey: \"workbench.startupEditor.newUntitledFile\",\n\t\t\t\t\t},\n\t\t\t\t\t\"Open a new untitled text file (only applies when opening an empty window).\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t{\n\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\"This is the description for a setting. Values surrounded by single quotes are not to be translated.\",\n\t\t\t\t\t\t],\n\t\t\t\t\t\tkey: \"workbench.startupEditor.welcomePageInEmptyWorkbench\",\n\t\t\t\t\t},\n\t\t\t\t\t\"Open the Welcome page when opening an empty workbench.\",\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t{\n\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\"This is the description for a setting. Values surrounded by single quotes are not to be translated.\",\n\t\t\t\t\t\t],\n\t\t\t\t\t\tkey: \"workbench.startupEditor.terminal\",\n\t\t\t\t\t},\n\t\t\t\t\t\"Open a new terminal in the editor area.\",\n\t\t\t\t),\n\t\t\t],\n\t\t\tdefault: \"welcomePage\",\n\t\t\tdescription: localize(\n\t\t\t\t\"workbench.startupEditor\",\n\t\t\t\t\"Controls which editor is shown at startup, if none are restored from the previous session.\",\n\t\t\t),\n\t\t},\n\t\t\"workbench.welcomePage.preferReducedMotion\": {\n\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\ttype: \"boolean\",\n\t\t\tdefault: false,\n\t\t\tdeprecationMessage: localize(\n\t\t\t\t\"deprecationMessage\",\n\t\t\t\t\"Deprecated, use the global `workbench.reduceMotion`.\",\n\t\t\t),\n\t\t\tdescription: localize(\n\t\t\t\t\"workbench.welcomePage.preferReducedMotion\",\n\t\t\t\t\"When enabled, reduce motion in welcome page.\",\n\t\t\t),\n\t\t},\n\t},\n});\n\nregisterWorkbenchContribution2(\n\tWorkspacePlatformContribution.ID,\n\tWorkspacePlatformContribution,\n\tWorkbenchPhase.AfterRestored,\n);\nregisterWorkbenchContribution2(\n\tStartupPageEditorResolverContribution.ID,\n\tStartupPageEditorResolverContribution,\n\tWorkbenchPhase.BlockRestore,\n);\nregisterWorkbenchContribution2(\n\tStartupPageRunnerContribution.ID,\n\tStartupPageRunnerContribution,\n\tWorkbenchPhase.AfterRestored,\n);\n\nAccessibleViewRegistry.register(new GettingStartedAccessibleView());\n"],
  "mappings": "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",
  "names": []
}
