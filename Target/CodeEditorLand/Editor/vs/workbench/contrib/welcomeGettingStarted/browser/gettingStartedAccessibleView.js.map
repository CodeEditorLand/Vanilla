{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/welcomeGettingStarted/browser/gettingStartedAccessibleView.ts"],
  "sourcesContent": ["import { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { localize } from \"../../../../nls.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport {\n\ttype AccessibleContentProvider,\n\tAccessibleViewProviderId,\n\tAccessibleViewType,\n\ttype ExtensionContentProvider,\n\ttype IAccessibleViewContentProvider,\n} from \"../../../../platform/accessibility/browser/accessibleView.js\";\nimport type { IAccessibleViewImplentation } from \"../../../../platform/accessibility/browser/accessibleViewRegistry.js\";\nimport type { ContextKeyExpression } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { AccessibilityVerbositySettingId } from \"../../accessibility/browser/accessibilityConfiguration.js\";\nimport { GettingStartedPage } from \"./gettingStarted.js\";\nimport { GettingStartedInput } from \"./gettingStartedInput.js\";\nimport {\n\ttype IResolvedWalkthrough,\n\tIWalkthroughsService,\n} from \"./gettingStartedService.js\";\n\nexport class GettingStartedAccessibleView\n\timplements IAccessibleViewImplentation\n{\n\treadonly type = AccessibleViewType.View;\n\treadonly priority = 110;\n\treadonly name = \"walkthroughs\";\n\treadonly when?: ContextKeyExpression | undefined;\n\n\tgetProvider = (\n\t\taccessor: ServicesAccessor,\n\t): AccessibleContentProvider | ExtensionContentProvider | undefined => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorPane = editorService.activeEditorPane;\n\t\tif (!(editorPane instanceof GettingStartedPage)) {\n\t\t\treturn;\n\t\t}\n\t\tconst gettingStartedInput = editorPane.input;\n\t\tif (\n\t\t\t!(gettingStartedInput instanceof GettingStartedInput) ||\n\t\t\t!gettingStartedInput.selectedCategory\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst gettingStartedService = accessor.get(IWalkthroughsService);\n\t\tconst currentWalkthrough = gettingStartedService.getWalkthrough(\n\t\t\tgettingStartedInput.selectedCategory,\n\t\t);\n\t\tif (currentWalkthrough) {\n\t\t\treturn new GettingStartedAccessibleProvider(\n\t\t\t\teditorPane,\n\t\t\t\tcurrentWalkthrough,\n\t\t\t);\n\t\t}\n\t\treturn;\n\t};\n}\n\nclass GettingStartedAccessibleProvider\n\textends Disposable\n\timplements IAccessibleViewContentProvider\n{\n\tconstructor(\n\t\tprivate readonly _gettingStartedPage: GettingStartedPage,\n\t\tprivate readonly _focusedItem: IResolvedWalkthrough,\n\t) {\n\t\tsuper();\n\t}\n\n\treadonly id = AccessibleViewProviderId.Walkthrough;\n\treadonly verbositySettingKey = AccessibilityVerbositySettingId.Walkthrough;\n\treadonly options = { type: AccessibleViewType.View };\n\n\tprovideContent(): string {\n\t\treturn this._getContent(this._focusedItem);\n\t}\n\n\tprivate _getContent(item: IResolvedWalkthrough): string {\n\t\tconst stepsContent = item.steps\n\t\t\t.map((step, index) => {\n\t\t\t\treturn localize(\n\t\t\t\t\t\"gettingStarted.step\",\n\t\t\t\t\t\"Step {0}: {1}\\nDescription: {2}\",\n\t\t\t\t\tindex + 1,\n\t\t\t\t\tstep.title,\n\t\t\t\t\tstep.description.join(\" \"),\n\t\t\t\t);\n\t\t\t})\n\t\t\t.join(\"\\n\\n\");\n\n\t\treturn [\n\t\t\tlocalize(\"gettingStarted.title\", \"Title: {0}\", item.title),\n\t\t\tlocalize(\n\t\t\t\t\"gettingStarted.description\",\n\t\t\t\t\"Description: {0}\",\n\t\t\t\titem.description,\n\t\t\t),\n\t\t\tstepsContent,\n\t\t].join(\"\\n\\n\");\n\t}\n\n\tonClose(): void {\n\t\tthis._gettingStartedPage.focus();\n\t}\n}\n"],
  "mappings": ";;AAAA,SAAS,kBAAkB;AAC3B,SAAS,gBAAgB;AAKzB;AAAA,EAEC;AAAA,EACA;AAAA,OAGM;AAIP,SAAS,sBAAsB;AAC/B,SAAS,uCAAuC;AAChD,SAAS,0BAA0B;AACnC,SAAS,2BAA2B;AACpC;AAAA,EAEC;AAAA,OACM;AAEA,MAAM,6BAEb;AAAA,EA3BA,OA2BA;AAAA;AAAA;AAAA,EACU,OAAO,mBAAmB;AAAA,EAC1B,WAAW;AAAA,EACX,OAAO;AAAA,EACP;AAAA,EAET,cAAc,wBACb,aACsE;AACtE,UAAM,gBAAgB,SAAS,IAAI,cAAc;AACjD,UAAM,aAAa,cAAc;AACjC,QAAI,EAAE,sBAAsB,qBAAqB;AAChD;AAAA,IACD;AACA,UAAM,sBAAsB,WAAW;AACvC,QACC,EAAE,+BAA+B,wBACjC,CAAC,oBAAoB,kBACpB;AACD;AAAA,IACD;AAEA,UAAM,wBAAwB,SAAS,IAAI,oBAAoB;AAC/D,UAAM,qBAAqB,sBAAsB;AAAA,MAChD,oBAAoB;AAAA,IACrB;AACA,QAAI,oBAAoB;AACvB,aAAO,IAAI;AAAA,QACV;AAAA,QACA;AAAA,MACD;AAAA,IACD;AACA;AAAA,EACD,GA3Bc;AA4Bf;AAEA,MAAM,yCACG,WAET;AAAA,EACC,YACkB,qBACA,cAChB;AACD,UAAM;AAHW;AACA;AAAA,EAGlB;AAAA,EAxED,OAkEA;AAAA;AAAA;AAAA,EAQU,KAAK,yBAAyB;AAAA,EAC9B,sBAAsB,gCAAgC;AAAA,EACtD,UAAU,EAAE,MAAM,mBAAmB,KAAK;AAAA,EAEnD,iBAAyB;AACxB,WAAO,KAAK,YAAY,KAAK,YAAY;AAAA,EAC1C;AAAA,EAEQ,YAAY,MAAoC;AACvD,UAAM,eAAe,KAAK,MACxB,IAAI,CAAC,MAAM,UAAU;AACrB,aAAO;AAAA,QACN;AAAA,QACA;AAAA,QACA,QAAQ;AAAA,QACR,KAAK;AAAA,QACL,KAAK,YAAY,KAAK,GAAG;AAAA,MAC1B;AAAA,IACD,CAAC,EACA,KAAK,MAAM;AAEb,WAAO;AAAA,MACN,SAAS,wBAAwB,cAAc,KAAK,KAAK;AAAA,MACzD;AAAA,QACC;AAAA,QACA;AAAA,QACA,KAAK;AAAA,MACN;AAAA,MACA;AAAA,IACD,EAAE,KAAK,MAAM;AAAA,EACd;AAAA,EAEA,UAAgB;AACf,SAAK,oBAAoB,MAAM;AAAA,EAChC;AACD;",
  "names": []
}
