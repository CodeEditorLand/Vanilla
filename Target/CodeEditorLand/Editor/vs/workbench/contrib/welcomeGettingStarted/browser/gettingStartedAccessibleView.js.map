{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/welcomeGettingStarted/browser/gettingStartedAccessibleView.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { AccessibleViewType, AccessibleContentProvider, ExtensionContentProvider, IAccessibleViewContentProvider, AccessibleViewProviderId } from '../../../../platform/accessibility/browser/accessibleView.js';\nimport { IAccessibleViewImplentation } from '../../../../platform/accessibility/browser/accessibleViewRegistry.js';\nimport { ContextKeyExpression } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { GettingStartedPage } from './gettingStarted.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { IResolvedWalkthrough, IWalkthroughsService } from './gettingStartedService.js';\nimport { AccessibilityVerbositySettingId } from '../../accessibility/browser/accessibilityConfiguration.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { GettingStartedInput } from './gettingStartedInput.js';\nimport { localize } from '../../../../nls.js';\n\nexport class GettingStartedAccessibleView implements IAccessibleViewImplentation {\n\treadonly type = AccessibleViewType.View;\n\treadonly priority = 110;\n\treadonly name = 'walkthroughs';\n\treadonly when?: ContextKeyExpression | undefined;\n\n\tgetProvider = (accessor: ServicesAccessor): AccessibleContentProvider | ExtensionContentProvider | undefined => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorPane = editorService.activeEditorPane;\n\t\tif (!(editorPane instanceof GettingStartedPage)) {\n\t\t\treturn;\n\t\t}\n\t\tconst gettingStartedInput = editorPane.input;\n\t\tif (!(gettingStartedInput instanceof GettingStartedInput) || !gettingStartedInput.selectedCategory) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst gettingStartedService = accessor.get(IWalkthroughsService);\n\t\tconst currentWalkthrough = gettingStartedService.getWalkthrough(gettingStartedInput.selectedCategory);\n\t\tif (currentWalkthrough) {\n\t\t\treturn new GettingStartedAccessibleProvider(editorPane, currentWalkthrough);\n\t\t}\n\t\treturn;\n\t};\n}\n\nclass GettingStartedAccessibleProvider extends Disposable implements IAccessibleViewContentProvider {\n\n\tconstructor(\n\t\tprivate readonly _gettingStartedPage: GettingStartedPage,\n\t\tprivate readonly _focusedItem: IResolvedWalkthrough,\n\t) {\n\t\tsuper();\n\t}\n\n\treadonly id = AccessibleViewProviderId.Walkthrough;\n\treadonly verbositySettingKey = AccessibilityVerbositySettingId.Walkthrough;\n\treadonly options = { type: AccessibleViewType.View };\n\n\tprovideContent(): string {\n\t\treturn this._getContent(this._focusedItem);\n\t}\n\n\tprivate _getContent(item: IResolvedWalkthrough): string {\n\t\tconst stepsContent = item.steps.map((step, index) => {\n\t\t\treturn localize('gettingStarted.step', 'Step {0}: {1}\\nDescription: {2}', index + 1, step.title, step.description.join(' '));\n\t\t}).join('\\n\\n');\n\n\t\treturn [\n\t\t\tlocalize('gettingStarted.title', 'Title: {0}', item.title),\n\t\t\tlocalize('gettingStarted.description', 'Description: {0}', item.description),\n\t\t\tstepsContent\n\t\t].join('\\n\\n');\n\t}\n\n\tonClose(): void {\n\t\tthis._gettingStartedPage.focus();\n\t}\n}\n"],
  "mappings": ";;AAIA,SAAS,oBAAoB,2BAA2B,0BAA0B,gCAAgC,gCAAgC;AAClJ,SAAS,mCAAmC;AAC5C,SAAS,4BAA4B;AACrC,SAAS,wBAAwB;AACjC,SAAS,0BAA0B;AACnC,SAAS,kBAAkB;AAC3B,SAAS,sBAAsB,4BAA4B;AAC3D,SAAS,uCAAuC;AAChD,SAAS,sBAAsB;AAC/B,SAAS,2BAA2B;AACpC,SAAS,gBAAgB;AAElB,MAAM,6BAAoE;AAAA,EAhBjF,OAgBiF;AAAA;AAAA;AAAA,EACvE,OAAO,mBAAmB;AAAA,EAC1B,WAAW;AAAA,EACX,OAAO;AAAA,EACP;AAAA,EAET,cAAc,wBAAC,aAAiG;AAC/G,UAAM,gBAAgB,SAAS,IAAI,cAAc;AACjD,UAAM,aAAa,cAAc;AACjC,QAAI,EAAE,sBAAsB,qBAAqB;AAChD;AAAA,IACD;AACA,UAAM,sBAAsB,WAAW;AACvC,QAAI,EAAE,+BAA+B,wBAAwB,CAAC,oBAAoB,kBAAkB;AACnG;AAAA,IACD;AAEA,UAAM,wBAAwB,SAAS,IAAI,oBAAoB;AAC/D,UAAM,qBAAqB,sBAAsB,eAAe,oBAAoB,gBAAgB;AACpG,QAAI,oBAAoB;AACvB,aAAO,IAAI,iCAAiC,YAAY,kBAAkB;AAAA,IAC3E;AACA;AAAA,EACD,GAjBc;AAkBf;AAEA,MAAM,yCAAyC,WAAqD;AAAA,EAEnG,YACkB,qBACA,cAChB;AACD,UAAM;AAHW;AACA;AAAA,EAGlB;AAAA,EAjDD,OA0CoG;AAAA;AAAA;AAAA,EAS1F,KAAK,yBAAyB;AAAA,EAC9B,sBAAsB,gCAAgC;AAAA,EACtD,UAAU,EAAE,MAAM,mBAAmB,KAAK;AAAA,EAEnD,iBAAyB;AACxB,WAAO,KAAK,YAAY,KAAK,YAAY;AAAA,EAC1C;AAAA,EAEQ,YAAY,MAAoC;AACvD,UAAM,eAAe,KAAK,MAAM,IAAI,CAAC,MAAM,UAAU;AACpD,aAAO,SAAS,uBAAuB,mCAAmC,QAAQ,GAAG,KAAK,OAAO,KAAK,YAAY,KAAK,GAAG,CAAC;AAAA,IAC5H,CAAC,EAAE,KAAK,MAAM;AAEd,WAAO;AAAA,MACN,SAAS,wBAAwB,cAAc,KAAK,KAAK;AAAA,MACzD,SAAS,8BAA8B,oBAAoB,KAAK,WAAW;AAAA,MAC3E;AAAA,IACD,EAAE,KAAK,MAAM;AAAA,EACd;AAAA,EAEA,UAAgB;AACf,SAAK,oBAAoB,MAAM;AAAA,EAChC;AACD;",
  "names": []
}
