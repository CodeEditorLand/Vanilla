import{$ as o}from"../../../../base/browser/dom.js";import{DomScrollableElement as m}from"../../../../base/browser/ui/scrollbar/scrollableElement.js";import{equals as a}from"../../../../base/common/arrays.js";import{Emitter as p}from"../../../../base/common/event.js";import{Disposable as c}from"../../../../base/common/lifecycle.js";class C extends c{constructor(e){super();this.options=e;this.contextService=e.contextService,this.entries=void 0,this.itemCount=0,this.list=o("ul"),this.scrollbar=this._register(new m(this.list,{})),this._register(this.onDidChangeEntries(()=>this.scrollbar.scanDomNode())),this.domElement=o(".index-list."+e.klass,{},o("h2",{},e.title),this.scrollbar.getDomNode()),this._register(this.contextService.onDidChangeContext(i=>{i.affectsSome(this.contextKeysToWatch)&&this.rerender()}))}_onDidChangeEntries=new p;onDidChangeEntries=this._onDidChangeEntries.event;domElement;list;scrollbar;entries;lastRendered;itemCount;isDisposed=!1;contextService;contextKeysToWatch=new Set;getDomElement(){return this.domElement}layout(e){this.scrollbar.scanDomNode()}onDidChange(e){this._register(this.onDidChangeEntries(e))}register(e){this.isDisposed?e.dispose():this._register(e)}dispose(){this.isDisposed=!0,super.dispose()}setLimit(e){this.options.limit=e,this.setEntries(this.entries)}rerender(){this.setEntries(this.entries)}setEntries(e){let i=e??[];this.itemCount=0;const n=this.options.rankElement;n&&(i=i.filter(t=>n(t)!==null),i.sort((t,r)=>n(r)-n(t)));const l=i.filter(t=>!t.when||this.contextService.contextMatchesRules(t.when)),s=l.slice(0,this.options.limit),h=s.map(t=>t.id);if(!(this.entries===e&&a(h,this.lastRendered))){for(this.entries=e,this.contextKeysToWatch.clear(),i.forEach(t=>{t.when?.keys()?.forEach(d=>this.contextKeysToWatch.add(d))}),this.lastRendered=h,this.itemCount=s.length;this.list.firstChild;)this.list.firstChild.remove();this.itemCount=s.length;for(const t of s){const r=this.options.renderElement(t);this.list.appendChild(r)}l.length>s.length&&this.options.more?this.list.appendChild(this.options.more):e!==void 0&&this.itemCount===0&&this.options.empty?this.list.appendChild(this.options.empty):this.options.footer&&this.list.appendChild(this.options.footer),this._onDidChangeEntries.fire()}}}export{C as GettingStartedIndexList};
