{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/welcomeGettingStarted/browser/startupPage.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from '../../../../base/common/uri.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { IWorkbenchContribution } from '../../../common/contributions.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { IWorkspaceContextService, UNKNOWN_EMPTY_WINDOW_WORKSPACE, WorkbenchState } from '../../../../platform/workspace/common/workspace.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IWorkingCopyBackupService } from '../../../services/workingCopy/common/workingCopyBackup.js';\nimport { ILifecycleService, LifecyclePhase, StartupKind } from '../../../services/lifecycle/common/lifecycle.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { joinPath } from '../../../../base/common/resources.js';\nimport { IWorkbenchLayoutService } from '../../../services/layout/browser/layoutService.js';\nimport { GettingStartedEditorOptions, GettingStartedInput, gettingStartedInputTypeId } from './gettingStartedInput.js';\nimport { IWorkbenchEnvironmentService } from '../../../services/environment/common/environmentService.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../platform/storage/common/storage.js';\nimport { getTelemetryLevel } from '../../../../platform/telemetry/common/telemetryUtils.js';\nimport { TelemetryLevel } from '../../../../platform/telemetry/common/telemetry.js';\nimport { IProductService } from '../../../../platform/product/common/productService.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { localize } from '../../../../nls.js';\nimport { IEditorResolverService, RegisteredEditorPriority } from '../../../services/editor/common/editorResolverService.js';\nimport { TerminalCommandId } from '../../terminal/common/terminal.js';\n\nexport const restoreWalkthroughsConfigurationKey = 'workbench.welcomePage.restorableWalkthroughs';\nexport type RestoreWalkthroughsConfigurationValue = { folder: string; category?: string; step?: string };\n\nconst configurationKey = 'workbench.startupEditor';\nconst oldConfigurationKey = 'workbench.welcome.enabled';\nconst telemetryOptOutStorageKey = 'workbench.telemetryOptOutShown';\n\nexport class StartupPageEditorResolverContribution implements IWorkbenchContribution {\n\n\tstatic readonly ID = 'workbench.contrib.startupPageEditorResolver';\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IEditorResolverService editorResolverService: IEditorResolverService\n\t) {\n\t\teditorResolverService.registerEditor(\n\t\t\t`${GettingStartedInput.RESOURCE.scheme}:/**`,\n\t\t\t{\n\t\t\t\tid: GettingStartedInput.ID,\n\t\t\t\tlabel: localize('welcome.displayName', \"Welcome Page\"),\n\t\t\t\tpriority: RegisteredEditorPriority.builtin,\n\t\t\t},\n\t\t\t{\n\t\t\t\tsinglePerResource: false,\n\t\t\t\tcanSupportResource: uri => uri.scheme === GettingStartedInput.RESOURCE.scheme,\n\t\t\t},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource, options }) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\teditor: this.instantiationService.createInstance(GettingStartedInput, options as GettingStartedEditorOptions),\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t...options,\n\t\t\t\t\t\t\tpinned: false\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n}\n\nexport class StartupPageRunnerContribution implements IWorkbenchContribution {\n\n\tstatic readonly ID = 'workbench.contrib.startupPageRunner';\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IWorkingCopyBackupService private readonly workingCopyBackupService: IWorkingCopyBackupService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@INotificationService private readonly notificationService: INotificationService\n\t) {\n\t\tthis.run().then(undefined, onUnexpectedError);\n\t}\n\n\tprivate async run() {\n\n\t\t// Wait for resolving startup editor until we are restored to reduce startup pressure\n\t\tawait this.lifecycleService.when(LifecyclePhase.Restored);\n\n\t\t// Always open Welcome page for first-launch, no matter what is open or which startupEditor is set.\n\t\tif (\n\t\t\tthis.productService.enableTelemetry\n\t\t\t&& this.productService.showTelemetryOptOut\n\t\t\t&& getTelemetryLevel(this.configurationService) !== TelemetryLevel.NONE\n\t\t\t&& !this.environmentService.skipWelcome\n\t\t\t&& !this.storageService.get(telemetryOptOutStorageKey, StorageScope.PROFILE)\n\t\t) {\n\t\t\tthis.storageService.store(telemetryOptOutStorageKey, true, StorageScope.PROFILE, StorageTarget.USER);\n\t\t\tawait this.openGettingStarted(true);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.tryOpenWalkthroughForFolder()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst enabled = isStartupPageEnabled(this.configurationService, this.contextService, this.environmentService);\n\t\tif (enabled && this.lifecycleService.startupKind !== StartupKind.ReloadedWindow) {\n\t\t\tconst hasBackups = await this.workingCopyBackupService.hasBackups();\n\t\t\tif (hasBackups) { return; }\n\n\t\t\t// Open the welcome even if we opened a set of default editors\n\t\t\tif (!this.editorService.activeEditor || this.layoutService.openedDefaultEditors) {\n\t\t\t\tconst startupEditorSetting = this.configurationService.inspect<string>(configurationKey);\n\n\n\t\t\t\tconst isStartupEditorReadme = startupEditorSetting.value === 'readme';\n\t\t\t\tconst isStartupEditorUserReadme = startupEditorSetting.userValue === 'readme';\n\t\t\t\tconst isStartupEditorDefaultReadme = startupEditorSetting.defaultValue === 'readme';\n\n\t\t\t\t// 'readme' should not be set in workspace settings to prevent tracking,\n\t\t\t\t// but it can be set as a default (as in codespaces or from configurationDefaults) or a user setting\n\t\t\t\tif (isStartupEditorReadme && (!isStartupEditorUserReadme || !isStartupEditorDefaultReadme)) {\n\t\t\t\t\tthis.logService.warn(`Warning: 'workbench.startupEditor: readme' setting ignored due to being set somewhere other than user or default settings (user=${startupEditorSetting.userValue}, default=${startupEditorSetting.defaultValue})`);\n\t\t\t\t}\n\n\t\t\t\tconst openWithReadme = isStartupEditorReadme && (isStartupEditorUserReadme || isStartupEditorDefaultReadme);\n\t\t\t\tif (openWithReadme) {\n\t\t\t\t\tawait this.openReadme();\n\t\t\t\t} else if (startupEditorSetting.value === 'welcomePage' || startupEditorSetting.value === 'welcomePageInEmptyWorkbench') {\n\t\t\t\t\tawait this.openGettingStarted();\n\t\t\t\t} else if (startupEditorSetting.value === 'terminal') {\n\t\t\t\t\tthis.commandService.executeCommand(TerminalCommandId.CreateTerminalEditor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate tryOpenWalkthroughForFolder(): boolean {\n\t\tconst toRestore = this.storageService.get(restoreWalkthroughsConfigurationKey, StorageScope.PROFILE);\n\t\tif (!toRestore) {\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\tconst restoreData: RestoreWalkthroughsConfigurationValue = JSON.parse(toRestore);\n\t\t\tconst currentWorkspace = this.contextService.getWorkspace();\n\t\t\tif (restoreData.folder === UNKNOWN_EMPTY_WINDOW_WORKSPACE.id || restoreData.folder === currentWorkspace.folders[0].uri.toString()) {\n\t\t\t\tconst options: GettingStartedEditorOptions = { selectedCategory: restoreData.category, selectedStep: restoreData.step, pinned: false };\n\t\t\t\tthis.editorService.openEditor({\n\t\t\t\t\tresource: GettingStartedInput.RESOURCE,\n\t\t\t\t\toptions\n\t\t\t\t});\n\t\t\t\tthis.storageService.remove(restoreWalkthroughsConfigurationKey, StorageScope.PROFILE);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate async openReadme() {\n\t\tconst readmes = arrays.coalesce(\n\t\t\tawait Promise.all(this.contextService.getWorkspace().folders.map(\n\t\t\t\tasync folder => {\n\t\t\t\t\tconst folderUri = folder.uri;\n\t\t\t\t\tconst folderStat = await this.fileService.resolve(folderUri).catch(onUnexpectedError);\n\t\t\t\t\tconst files = folderStat?.children ? folderStat.children.map(child => child.name).sort() : [];\n\t\t\t\t\tconst file = files.find(file => file.toLowerCase() === 'readme.md') || files.find(file => file.toLowerCase().startsWith('readme'));\n\t\t\t\t\tif (file) { return joinPath(folderUri, file); }\n\t\t\t\t\telse { return undefined; }\n\t\t\t\t})));\n\n\t\tif (!this.editorService.activeEditor) {\n\t\t\tif (readmes.length) {\n\t\t\t\tconst isMarkDown = (readme: URI) => readme.path.toLowerCase().endsWith('.md');\n\t\t\t\tawait Promise.all([\n\t\t\t\t\tthis.commandService.executeCommand('markdown.showPreview', null, readmes.filter(isMarkDown), { locked: true }).catch(error => {\n\t\t\t\t\t\tthis.notificationService.error(localize('startupPage.markdownPreviewError', 'Could not open markdown preview: {0}.\\n\\nPlease make sure the markdown extension is enabled.', error.message));\n\t\t\t\t\t}),\n\t\t\t\t\tthis.editorService.openEditors(readmes.filter(readme => !isMarkDown(readme)).map(readme => ({ resource: readme }))),\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\t// If no readme is found, default to showing the welcome page.\n\t\t\t\tawait this.openGettingStarted();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async openGettingStarted(showTelemetryNotice?: boolean) {\n\t\tconst startupEditorTypeID = gettingStartedInputTypeId;\n\t\tconst editor = this.editorService.activeEditor;\n\n\t\t// Ensure that the welcome editor won't get opened more than once\n\t\tif (editor?.typeId === startupEditorTypeID || this.editorService.editors.some(e => e.typeId === startupEditorTypeID)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst options: GettingStartedEditorOptions = editor ? { pinned: false, index: 0, showTelemetryNotice } : { pinned: false, showTelemetryNotice };\n\t\tif (startupEditorTypeID === gettingStartedInputTypeId) {\n\t\t\tthis.editorService.openEditor({\n\t\t\t\tresource: GettingStartedInput.RESOURCE,\n\t\t\t\toptions,\n\t\t\t});\n\t\t}\n\t}\n}\n\nfunction isStartupPageEnabled(configurationService: IConfigurationService, contextService: IWorkspaceContextService, environmentService: IWorkbenchEnvironmentService) {\n\tif (environmentService.skipWelcome) {\n\t\treturn false;\n\t}\n\n\tconst startupEditor = configurationService.inspect<string>(configurationKey);\n\tif (!startupEditor.userValue && !startupEditor.workspaceValue) {\n\t\tconst welcomeEnabled = configurationService.inspect(oldConfigurationKey);\n\t\tif (welcomeEnabled.value !== undefined && welcomeEnabled.value !== null) {\n\t\t\treturn welcomeEnabled.value;\n\t\t}\n\t}\n\n\treturn startupEditor.value === 'welcomePage'\n\t\t|| startupEditor.value === 'readme' && (startupEditor.userValue === 'readme' || startupEditor.defaultValue === 'readme')\n\t\t|| (contextService.getWorkbenchState() === WorkbenchState.EMPTY && startupEditor.value === 'welcomePageInEmptyWorkbench')\n\t\t|| startupEditor.value === 'terminal';\n}\n"],
  "mappings": "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",
  "names": ["file"]
}
