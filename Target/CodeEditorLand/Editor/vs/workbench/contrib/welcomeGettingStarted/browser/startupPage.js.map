{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/welcomeGettingStarted/browser/startupPage.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from \"../../../../base/common/arrays.js\";\nimport { onUnexpectedError } from \"../../../../base/common/errors.js\";\nimport { joinPath } from \"../../../../base/common/resources.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { INotificationService } from \"../../../../platform/notification/common/notification.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { TelemetryLevel } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { getTelemetryLevel } from \"../../../../platform/telemetry/common/telemetryUtils.js\";\nimport {\n\tIWorkspaceContextService,\n\tUNKNOWN_EMPTY_WINDOW_WORKSPACE,\n\tWorkbenchState,\n} from \"../../../../platform/workspace/common/workspace.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport {\n\tIEditorResolverService,\n\tRegisteredEditorPriority,\n} from \"../../../services/editor/common/editorResolverService.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { IWorkbenchEnvironmentService } from \"../../../services/environment/common/environmentService.js\";\nimport { IWorkbenchLayoutService } from \"../../../services/layout/browser/layoutService.js\";\nimport {\n\tILifecycleService,\n\tLifecyclePhase,\n\tStartupKind,\n} from \"../../../services/lifecycle/common/lifecycle.js\";\nimport { IWorkingCopyBackupService } from \"../../../services/workingCopy/common/workingCopyBackup.js\";\nimport { TerminalCommandId } from \"../../terminal/common/terminal.js\";\nimport {\n\ttype GettingStartedEditorOptions,\n\tGettingStartedInput,\n\tgettingStartedInputTypeId,\n} from \"./gettingStartedInput.js\";\n\nexport const restoreWalkthroughsConfigurationKey =\n\t\"workbench.welcomePage.restorableWalkthroughs\";\nexport type RestoreWalkthroughsConfigurationValue = {\n\tfolder: string;\n\tcategory?: string;\n\tstep?: string;\n};\n\nconst configurationKey = \"workbench.startupEditor\";\nconst oldConfigurationKey = \"workbench.welcome.enabled\";\nconst telemetryOptOutStorageKey = \"workbench.telemetryOptOutShown\";\n\nexport class StartupPageEditorResolverContribution\n\timplements IWorkbenchContribution\n{\n\tstatic readonly ID = \"workbench.contrib.startupPageEditorResolver\";\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IEditorResolverService editorResolverService: IEditorResolverService\n\t) {\n\t\teditorResolverService.registerEditor(\n\t\t\t`${GettingStartedInput.RESOURCE.scheme}:/**`,\n\t\t\t{\n\t\t\t\tid: GettingStartedInput.ID,\n\t\t\t\tlabel: localize('welcome.displayName', \"Welcome Page\"),\n\t\t\t\tpriority: RegisteredEditorPriority.builtin,\n\t\t\t},\n\t\t\t{\n\t\t\t\tsinglePerResource: false,\n\t\t\t\tcanSupportResource: uri => uri.scheme === GettingStartedInput.RESOURCE.scheme,\n\t\t\t},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource, options }) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\teditor: this.instantiationService.createInstance(GettingStartedInput, options as GettingStartedEditorOptions),\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t...options,\n\t\t\t\t\t\t\tpinned: false\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n}\n\nexport class StartupPageRunnerContribution implements IWorkbenchContribution {\n\tstatic readonly ID = \"workbench.contrib.startupPageRunner\";\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IWorkingCopyBackupService private readonly workingCopyBackupService: IWorkingCopyBackupService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@INotificationService private readonly notificationService: INotificationService\n\t) {\n\t\tthis.run().then(undefined, onUnexpectedError);\n\t}\n\n\tprivate async run() {\n\t\t// Wait for resolving startup editor until we are restored to reduce startup pressure\n\t\tawait this.lifecycleService.when(LifecyclePhase.Restored);\n\n\t\t// Always open Welcome page for first-launch, no matter what is open or which startupEditor is set.\n\t\tif (\n\t\t\tthis.productService.enableTelemetry &&\n\t\t\tthis.productService.showTelemetryOptOut &&\n\t\t\tgetTelemetryLevel(this.configurationService) !==\n\t\t\t\tTelemetryLevel.NONE &&\n\t\t\t!this.environmentService.skipWelcome &&\n\t\t\t!this.storageService.get(\n\t\t\t\ttelemetryOptOutStorageKey,\n\t\t\t\tStorageScope.PROFILE,\n\t\t\t)\n\t\t) {\n\t\t\tthis.storageService.store(\n\t\t\t\ttelemetryOptOutStorageKey,\n\t\t\t\ttrue,\n\t\t\t\tStorageScope.PROFILE,\n\t\t\t\tStorageTarget.USER,\n\t\t\t);\n\t\t\tawait this.openGettingStarted(true);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.tryOpenWalkthroughForFolder()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst enabled = isStartupPageEnabled(\n\t\t\tthis.configurationService,\n\t\t\tthis.contextService,\n\t\t\tthis.environmentService,\n\t\t);\n\t\tif (\n\t\t\tenabled &&\n\t\t\tthis.lifecycleService.startupKind !== StartupKind.ReloadedWindow\n\t\t) {\n\t\t\tconst hasBackups = await this.workingCopyBackupService.hasBackups();\n\t\t\tif (hasBackups) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Open the welcome even if we opened a set of default editors\n\t\t\tif (\n\t\t\t\t!this.editorService.activeEditor ||\n\t\t\t\tthis.layoutService.openedDefaultEditors\n\t\t\t) {\n\t\t\t\tconst startupEditorSetting =\n\t\t\t\t\tthis.configurationService.inspect<string>(configurationKey);\n\n\t\t\t\tconst isStartupEditorReadme =\n\t\t\t\t\tstartupEditorSetting.value === \"readme\";\n\t\t\t\tconst isStartupEditorUserReadme =\n\t\t\t\t\tstartupEditorSetting.userValue === \"readme\";\n\t\t\t\tconst isStartupEditorDefaultReadme =\n\t\t\t\t\tstartupEditorSetting.defaultValue === \"readme\";\n\n\t\t\t\t// 'readme' should not be set in workspace settings to prevent tracking,\n\t\t\t\t// but it can be set as a default (as in codespaces or from configurationDefaults) or a user setting\n\t\t\t\tif (\n\t\t\t\t\tisStartupEditorReadme &&\n\t\t\t\t\t(!isStartupEditorUserReadme ||\n\t\t\t\t\t\t!isStartupEditorDefaultReadme)\n\t\t\t\t) {\n\t\t\t\t\tthis.logService.warn(\n\t\t\t\t\t\t`Warning: 'workbench.startupEditor: readme' setting ignored due to being set somewhere other than user or default settings (user=${startupEditorSetting.userValue}, default=${startupEditorSetting.defaultValue})`,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst openWithReadme =\n\t\t\t\t\tisStartupEditorReadme &&\n\t\t\t\t\t(isStartupEditorUserReadme || isStartupEditorDefaultReadme);\n\t\t\t\tif (openWithReadme) {\n\t\t\t\t\tawait this.openReadme();\n\t\t\t\t} else if (\n\t\t\t\t\tstartupEditorSetting.value === \"welcomePage\" ||\n\t\t\t\t\tstartupEditorSetting.value === \"welcomePageInEmptyWorkbench\"\n\t\t\t\t) {\n\t\t\t\t\tawait this.openGettingStarted();\n\t\t\t\t} else if (startupEditorSetting.value === \"terminal\") {\n\t\t\t\t\tthis.commandService.executeCommand(\n\t\t\t\t\t\tTerminalCommandId.CreateTerminalEditor,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate tryOpenWalkthroughForFolder(): boolean {\n\t\tconst toRestore = this.storageService.get(\n\t\t\trestoreWalkthroughsConfigurationKey,\n\t\t\tStorageScope.PROFILE,\n\t\t);\n\t\tif (toRestore) {\n\t\t\tconst restoreData: RestoreWalkthroughsConfigurationValue =\n\t\t\t\tJSON.parse(toRestore);\n\t\t\tconst currentWorkspace = this.contextService.getWorkspace();\n\t\t\tif (\n\t\t\t\trestoreData.folder === UNKNOWN_EMPTY_WINDOW_WORKSPACE.id ||\n\t\t\t\trestoreData.folder ===\n\t\t\t\t\tcurrentWorkspace.folders[0].uri.toString()\n\t\t\t) {\n\t\t\t\tconst options: GettingStartedEditorOptions = {\n\t\t\t\t\tselectedCategory: restoreData.category,\n\t\t\t\t\tselectedStep: restoreData.step,\n\t\t\t\t\tpinned: false,\n\t\t\t\t};\n\t\t\t\tthis.editorService.openEditor({\n\t\t\t\t\tresource: GettingStartedInput.RESOURCE,\n\t\t\t\t\toptions,\n\t\t\t\t});\n\t\t\t\tthis.storageService.remove(\n\t\t\t\t\trestoreWalkthroughsConfigurationKey,\n\t\t\t\t\tStorageScope.PROFILE,\n\t\t\t\t);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate async openReadme() {\n\t\tconst readmes = arrays.coalesce(\n\t\t\tawait Promise.all(\n\t\t\t\tthis.contextService\n\t\t\t\t\t.getWorkspace()\n\t\t\t\t\t.folders.map(async (folder) => {\n\t\t\t\t\t\tconst folderUri = folder.uri;\n\t\t\t\t\t\tconst folderStat = await this.fileService\n\t\t\t\t\t\t\t.resolve(folderUri)\n\t\t\t\t\t\t\t.catch(onUnexpectedError);\n\t\t\t\t\t\tconst files = folderStat?.children\n\t\t\t\t\t\t\t? folderStat.children\n\t\t\t\t\t\t\t\t\t.map((child) => child.name)\n\t\t\t\t\t\t\t\t\t.sort()\n\t\t\t\t\t\t\t: [];\n\t\t\t\t\t\tconst file =\n\t\t\t\t\t\t\tfiles.find(\n\t\t\t\t\t\t\t\t(file) => file.toLowerCase() === \"readme.md\",\n\t\t\t\t\t\t\t) ||\n\t\t\t\t\t\t\tfiles.find((file) =>\n\t\t\t\t\t\t\t\tfile.toLowerCase().startsWith(\"readme\"),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tif (file) {\n\t\t\t\t\t\t\treturn joinPath(folderUri, file);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t),\n\t\t);\n\n\t\tif (!this.editorService.activeEditor) {\n\t\t\tif (readmes.length) {\n\t\t\t\tconst isMarkDown = (readme: URI) =>\n\t\t\t\t\treadme.path.toLowerCase().endsWith(\".md\");\n\t\t\t\tawait Promise.all([\n\t\t\t\t\tthis.commandService\n\t\t\t\t\t\t.executeCommand(\n\t\t\t\t\t\t\t\"markdown.showPreview\",\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\treadmes.filter(isMarkDown),\n\t\t\t\t\t\t\t{ locked: true },\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\tthis.notificationService.error(\n\t\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\t\"startupPage.markdownPreviewError\",\n\t\t\t\t\t\t\t\t\t\"Could not open markdown preview: {0}.\\n\\nPlease make sure the markdown extension is enabled.\",\n\t\t\t\t\t\t\t\t\terror.message,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}),\n\t\t\t\t\tthis.editorService.openEditors(\n\t\t\t\t\t\treadmes\n\t\t\t\t\t\t\t.filter((readme) => !isMarkDown(readme))\n\t\t\t\t\t\t\t.map((readme) => ({ resource: readme })),\n\t\t\t\t\t),\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\t// If no readme is found, default to showing the welcome page.\n\t\t\t\tawait this.openGettingStarted();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async openGettingStarted(showTelemetryNotice?: boolean) {\n\t\tconst startupEditorTypeID = gettingStartedInputTypeId;\n\t\tconst editor = this.editorService.activeEditor;\n\n\t\t// Ensure that the welcome editor won't get opened more than once\n\t\tif (\n\t\t\teditor?.typeId === startupEditorTypeID ||\n\t\t\tthis.editorService.editors.some(\n\t\t\t\t(e) => e.typeId === startupEditorTypeID,\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst options: GettingStartedEditorOptions = editor\n\t\t\t? { pinned: false, index: 0, showTelemetryNotice }\n\t\t\t: { pinned: false, showTelemetryNotice };\n\t\tif (startupEditorTypeID === gettingStartedInputTypeId) {\n\t\t\tthis.editorService.openEditor({\n\t\t\t\tresource: GettingStartedInput.RESOURCE,\n\t\t\t\toptions,\n\t\t\t});\n\t\t}\n\t}\n}\n\nfunction isStartupPageEnabled(\n\tconfigurationService: IConfigurationService,\n\tcontextService: IWorkspaceContextService,\n\tenvironmentService: IWorkbenchEnvironmentService,\n) {\n\tif (environmentService.skipWelcome) {\n\t\treturn false;\n\t}\n\n\tconst startupEditor =\n\t\tconfigurationService.inspect<string>(configurationKey);\n\tif (!startupEditor.userValue && !startupEditor.workspaceValue) {\n\t\tconst welcomeEnabled =\n\t\t\tconfigurationService.inspect(oldConfigurationKey);\n\t\tif (\n\t\t\twelcomeEnabled.value !== undefined &&\n\t\t\twelcomeEnabled.value !== null\n\t\t) {\n\t\t\treturn welcomeEnabled.value;\n\t\t}\n\t}\n\n\treturn (\n\t\tstartupEditor.value === \"welcomePage\" ||\n\t\t(startupEditor.value === \"readme\" &&\n\t\t\t(startupEditor.userValue === \"readme\" ||\n\t\t\t\tstartupEditor.defaultValue === \"readme\")) ||\n\t\t(contextService.getWorkbenchState() === WorkbenchState.EMPTY &&\n\t\t\tstartupEditor.value === \"welcomePageInEmptyWorkbench\") ||\n\t\tstartupEditor.value === \"terminal\"\n\t);\n}\n"],
  "mappings": "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",
  "names": ["file"]
}
