{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/remote/electron-sandbox/remote.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { IRemoteAgentService, remoteConnectionLatencyMeasurer } from '../../../services/remote/common/remoteAgentService.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { isMacintosh, isWindows } from '../../../../base/common/platform.js';\nimport { KeyMod, KeyChord, KeyCode } from '../../../../base/common/keyCodes.js';\nimport { KeybindingsRegistry, KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { IWorkbenchContribution, IWorkbenchContributionsRegistry, WorkbenchPhase, Extensions as WorkbenchContributionsExtensions, registerWorkbenchContribution2 } from '../../../common/contributions.js';\nimport { ILifecycleService, LifecyclePhase } from '../../../services/lifecycle/common/lifecycle.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { ipcRenderer } from '../../../../base/parts/sandbox/electron-sandbox/globals.js';\nimport { IDiagnosticInfoOptions, IRemoteDiagnosticInfo } from '../../../../platform/diagnostics/common/diagnostics.js';\nimport { INativeWorkbenchEnvironmentService } from '../../../services/environment/electron-sandbox/environmentService.js';\nimport { PersistentConnectionEventType } from '../../../../platform/remote/common/remoteAgentConnection.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { IRemoteAuthorityResolverService } from '../../../../platform/remote/common/remoteAuthorityResolver.js';\nimport { OpenLocalFileFolderCommand, OpenLocalFileCommand, OpenLocalFolderCommand, SaveLocalFileCommand, RemoteFileDialogContext } from '../../../services/dialogs/browser/simpleFileDialog.js';\nimport { IWorkspaceContextService, WorkbenchState } from '../../../../platform/workspace/common/workspace.js';\nimport { TELEMETRY_SETTING_ID } from '../../../../platform/telemetry/common/telemetry.js';\nimport { getTelemetryLevel } from '../../../../platform/telemetry/common/telemetryUtils.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { INativeHostService } from '../../../../platform/native/common/native.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../platform/storage/common/storage.js';\n\nclass RemoteAgentDiagnosticListener implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IRemoteAgentService remoteAgentService: IRemoteAgentService,\n\t\t@ILabelService labelService: ILabelService\n\t) {\n\t\tipcRenderer.on('vscode:getDiagnosticInfo', (event: unknown, request: { replyChannel: string; args: IDiagnosticInfoOptions }): void => {\n\t\t\tconst connection = remoteAgentService.getConnection();\n\t\t\tif (connection) {\n\t\t\t\tconst hostName = labelService.getHostLabel(Schemas.vscodeRemote, connection.remoteAuthority);\n\t\t\t\tremoteAgentService.getDiagnosticInfo(request.args)\n\t\t\t\t\t.then(info => {\n\t\t\t\t\t\tif (info) {\n\t\t\t\t\t\t\t(info as IRemoteDiagnosticInfo).hostName = hostName;\n\t\t\t\t\t\t\tif (remoteConnectionLatencyMeasurer.latency?.high) {\n\t\t\t\t\t\t\t\t(info as IRemoteDiagnosticInfo).latency = {\n\t\t\t\t\t\t\t\t\taverage: remoteConnectionLatencyMeasurer.latency.average,\n\t\t\t\t\t\t\t\t\tcurrent: remoteConnectionLatencyMeasurer.latency.current\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tipcRenderer.send(request.replyChannel, info);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(e => {\n\t\t\t\t\t\tconst errorMessage = e && e.message ? `Connection to '${hostName}' could not be established  ${e.message}` : `Connection to '${hostName}' could not be established `;\n\t\t\t\t\t\tipcRenderer.send(request.replyChannel, { hostName, errorMessage });\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tipcRenderer.send(request.replyChannel);\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass RemoteExtensionHostEnvironmentUpdater implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IRemoteAgentService remoteAgentService: IRemoteAgentService,\n\t\t@IRemoteAuthorityResolverService remoteResolverService: IRemoteAuthorityResolverService,\n\t\t@IExtensionService extensionService: IExtensionService\n\t) {\n\t\tconst connection = remoteAgentService.getConnection();\n\t\tif (connection) {\n\t\t\tconnection.onDidStateChange(async e => {\n\t\t\t\tif (e.type === PersistentConnectionEventType.ConnectionGain) {\n\t\t\t\t\tconst resolveResult = await remoteResolverService.resolveAuthority(connection.remoteAuthority);\n\t\t\t\t\tif (resolveResult.options && resolveResult.options.extensionHostEnv) {\n\t\t\t\t\t\tawait extensionService.setRemoteEnvironment(resolveResult.options.extensionHostEnv);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\nclass RemoteTelemetryEnablementUpdater extends Disposable implements IWorkbenchContribution {\n\n\tstatic readonly ID = 'workbench.contrib.remoteTelemetryEnablementUpdater';\n\n\tconstructor(\n\t\t@IRemoteAgentService private readonly remoteAgentService: IRemoteAgentService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\n\t\tthis.updateRemoteTelemetryEnablement();\n\n\t\tthis._register(configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(TELEMETRY_SETTING_ID)) {\n\t\t\t\tthis.updateRemoteTelemetryEnablement();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate updateRemoteTelemetryEnablement(): Promise<void> {\n\t\treturn this.remoteAgentService.updateTelemetryLevel(getTelemetryLevel(this.configurationService));\n\t}\n}\n\n\nclass RemoteEmptyWorkbenchPresentation extends Disposable implements IWorkbenchContribution {\n\n\tstatic readonly ID = 'workbench.contrib.remoteEmptyWorkbenchPresentation';\n\n\tconstructor(\n\t\t@INativeWorkbenchEnvironmentService environmentService: INativeWorkbenchEnvironmentService,\n\t\t@IRemoteAuthorityResolverService remoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService\n\t) {\n\t\tsuper();\n\n\t\tfunction shouldShowExplorer(): boolean {\n\t\t\tconst startupEditor = configurationService.getValue<string>('workbench.startupEditor');\n\t\t\treturn startupEditor !== 'welcomePage' && startupEditor !== 'welcomePageInEmptyWorkbench';\n\t\t}\n\n\t\tfunction shouldShowTerminal(): boolean {\n\t\t\treturn shouldShowExplorer();\n\t\t}\n\n\t\tconst { remoteAuthority, filesToDiff, filesToMerge, filesToOpenOrCreate, filesToWait } = environmentService;\n\t\tif (remoteAuthority && contextService.getWorkbenchState() === WorkbenchState.EMPTY && !filesToDiff?.length && !filesToMerge?.length && !filesToOpenOrCreate?.length && !filesToWait) {\n\t\t\tremoteAuthorityResolverService.resolveAuthority(remoteAuthority).then(() => {\n\t\t\t\tif (shouldShowExplorer()) {\n\t\t\t\t\tcommandService.executeCommand('workbench.view.explorer');\n\t\t\t\t}\n\t\t\t\tif (shouldShowTerminal()) {\n\t\t\t\t\tcommandService.executeCommand('workbench.action.terminal.toggleTerminal');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * Sets the 'wslFeatureInstalled' context key if the WSL feature is or was installed on this machine.\n */\nclass WSLContextKeyInitializer extends Disposable implements IWorkbenchContribution {\n\n\tstatic readonly ID = 'workbench.contrib.wslContextKeyInitializer';\n\n\tconstructor(\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@INativeHostService nativeHostService: INativeHostService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService\n\t) {\n\t\tsuper();\n\n\t\tconst contextKeyId = 'wslFeatureInstalled';\n\t\tconst storageKey = 'remote.wslFeatureInstalled';\n\n\t\tconst defaultValue = storageService.getBoolean(storageKey, StorageScope.APPLICATION, undefined);\n\n\t\tconst hasWSLFeatureContext = new RawContextKey<boolean>(contextKeyId, !!defaultValue, nls.localize('wslFeatureInstalled', \"Whether the platform has the WSL feature installed\"));\n\t\tconst contextKey = hasWSLFeatureContext.bindTo(contextKeyService);\n\n\t\tif (defaultValue === undefined) {\n\t\t\tlifecycleService.when(LifecyclePhase.Eventually).then(async () => {\n\t\t\t\tnativeHostService.hasWSLFeatureInstalled().then(res => {\n\t\t\t\t\tif (res) {\n\t\t\t\t\t\tcontextKey.set(true);\n\t\t\t\t\t\t// once detected, set to true\n\t\t\t\t\t\tstorageService.store(storageKey, true, StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n}\n\nconst workbenchContributionsRegistry = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchContributionsExtensions.Workbench);\nworkbenchContributionsRegistry.registerWorkbenchContribution(RemoteAgentDiagnosticListener, LifecyclePhase.Eventually);\nworkbenchContributionsRegistry.registerWorkbenchContribution(RemoteExtensionHostEnvironmentUpdater, LifecyclePhase.Eventually);\nregisterWorkbenchContribution2(RemoteTelemetryEnablementUpdater.ID, RemoteTelemetryEnablementUpdater, WorkbenchPhase.BlockRestore);\nregisterWorkbenchContribution2(RemoteEmptyWorkbenchPresentation.ID, RemoteEmptyWorkbenchPresentation, WorkbenchPhase.BlockRestore);\nif (isWindows) {\n\tregisterWorkbenchContribution2(WSLContextKeyInitializer.ID, WSLContextKeyInitializer, WorkbenchPhase.BlockRestore);\n}\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration)\n\t.registerConfiguration({\n\t\tid: 'remote',\n\t\ttitle: nls.localize('remote', \"Remote\"),\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\t'remote.downloadExtensionsLocally': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tmarkdownDescription: nls.localize('remote.downloadExtensionsLocally', \"When enabled extensions are downloaded locally and installed on remote.\"),\n\t\t\t\tdefault: false\n\t\t\t},\n\t\t}\n\t});\n\nif (isMacintosh) {\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: OpenLocalFileFolderCommand.ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyO,\n\t\twhen: RemoteFileDialogContext,\n\t\tmetadata: { description: OpenLocalFileFolderCommand.LABEL, args: [] },\n\t\thandler: OpenLocalFileFolderCommand.handler()\n\t});\n} else {\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: OpenLocalFileCommand.ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyO,\n\t\twhen: RemoteFileDialogContext,\n\t\tmetadata: { description: OpenLocalFileCommand.LABEL, args: [] },\n\t\thandler: OpenLocalFileCommand.handler()\n\t});\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: OpenLocalFolderCommand.ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyO),\n\t\twhen: RemoteFileDialogContext,\n\t\tmetadata: { description: OpenLocalFolderCommand.LABEL, args: [] },\n\t\thandler: OpenLocalFolderCommand.handler()\n\t});\n}\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: SaveLocalFileCommand.ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyS,\n\twhen: RemoteFileDialogContext,\n\tmetadata: { description: SaveLocalFileCommand.LABEL, args: [] },\n\thandler: SaveLocalFileCommand.handler()\n});\n"],
  "mappings": "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",
  "names": []
}
