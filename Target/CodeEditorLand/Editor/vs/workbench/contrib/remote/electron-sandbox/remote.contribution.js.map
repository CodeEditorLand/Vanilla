{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/remote/electron-sandbox/remote.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyChord, KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { isMacintosh, isWindows } from \"../../../../base/common/platform.js\";\nimport { ipcRenderer } from \"../../../../base/parts/sandbox/electron-sandbox/globals.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tExtensions as ConfigurationExtensions,\n\ttype IConfigurationRegistry,\n} from \"../../../../platform/configuration/common/configurationRegistry.js\";\nimport {\n\tIContextKeyService,\n\tRawContextKey,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport type {\n\tIDiagnosticInfoOptions,\n\tIRemoteDiagnosticInfo,\n} from \"../../../../platform/diagnostics/common/diagnostics.js\";\nimport {\n\tKeybindingWeight,\n\tKeybindingsRegistry,\n} from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { ILabelService } from \"../../../../platform/label/common/label.js\";\nimport { INativeHostService } from \"../../../../platform/native/common/native.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { PersistentConnectionEventType } from \"../../../../platform/remote/common/remoteAgentConnection.js\";\nimport { IRemoteAuthorityResolverService } from \"../../../../platform/remote/common/remoteAuthorityResolver.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { TELEMETRY_SETTING_ID } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { getTelemetryLevel } from \"../../../../platform/telemetry/common/telemetryUtils.js\";\nimport {\n\tIWorkspaceContextService,\n\tWorkbenchState,\n} from \"../../../../platform/workspace/common/workspace.js\";\nimport {\n\ttype IWorkbenchContribution,\n\ttype IWorkbenchContributionsRegistry,\n\tExtensions as WorkbenchContributionsExtensions,\n\tWorkbenchPhase,\n\tregisterWorkbenchContribution2,\n} from \"../../../common/contributions.js\";\nimport {\n\tOpenLocalFileCommand,\n\tOpenLocalFileFolderCommand,\n\tOpenLocalFolderCommand,\n\tRemoteFileDialogContext,\n\tSaveLocalFileCommand,\n} from \"../../../services/dialogs/browser/simpleFileDialog.js\";\nimport { INativeWorkbenchEnvironmentService } from \"../../../services/environment/electron-sandbox/environmentService.js\";\nimport { IExtensionService } from \"../../../services/extensions/common/extensions.js\";\nimport {\n\tILifecycleService,\n\tLifecyclePhase,\n} from \"../../../services/lifecycle/common/lifecycle.js\";\nimport {\n\tIRemoteAgentService,\n\tremoteConnectionLatencyMeasurer,\n} from \"../../../services/remote/common/remoteAgentService.js\";\n\nclass RemoteAgentDiagnosticListener implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IRemoteAgentService remoteAgentService: IRemoteAgentService,\n\t\t@ILabelService labelService: ILabelService,\n\t) {\n\t\tipcRenderer.on(\n\t\t\t\"vscode:getDiagnosticInfo\",\n\t\t\t(\n\t\t\t\tevent: unknown,\n\t\t\t\trequest: { replyChannel: string; args: IDiagnosticInfoOptions },\n\t\t\t): void => {\n\t\t\t\tconst connection = remoteAgentService.getConnection();\n\t\t\t\tif (connection) {\n\t\t\t\t\tconst hostName = labelService.getHostLabel(\n\t\t\t\t\t\tSchemas.vscodeRemote,\n\t\t\t\t\t\tconnection.remoteAuthority,\n\t\t\t\t\t);\n\t\t\t\t\tremoteAgentService\n\t\t\t\t\t\t.getDiagnosticInfo(request.args)\n\t\t\t\t\t\t.then((info) => {\n\t\t\t\t\t\t\tif (info) {\n\t\t\t\t\t\t\t\t(info as IRemoteDiagnosticInfo).hostName =\n\t\t\t\t\t\t\t\t\thostName;\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tremoteConnectionLatencyMeasurer.latency\n\t\t\t\t\t\t\t\t\t\t?.high\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t(info as IRemoteDiagnosticInfo).latency = {\n\t\t\t\t\t\t\t\t\t\taverage:\n\t\t\t\t\t\t\t\t\t\t\tremoteConnectionLatencyMeasurer\n\t\t\t\t\t\t\t\t\t\t\t\t.latency.average,\n\t\t\t\t\t\t\t\t\t\tcurrent:\n\t\t\t\t\t\t\t\t\t\t\tremoteConnectionLatencyMeasurer\n\t\t\t\t\t\t\t\t\t\t\t\t.latency.current,\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tipcRenderer.send(request.replyChannel, info);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((e) => {\n\t\t\t\t\t\t\tconst errorMessage =\n\t\t\t\t\t\t\t\te && e.message\n\t\t\t\t\t\t\t\t\t? `Connection to '${hostName}' could not be established  ${e.message}`\n\t\t\t\t\t\t\t\t\t: `Connection to '${hostName}' could not be established `;\n\t\t\t\t\t\t\tipcRenderer.send(request.replyChannel, {\n\t\t\t\t\t\t\t\thostName,\n\t\t\t\t\t\t\t\terrorMessage,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tipcRenderer.send(request.replyChannel);\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t}\n}\n\nclass RemoteExtensionHostEnvironmentUpdater implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IRemoteAgentService remoteAgentService: IRemoteAgentService,\n\t\t@IRemoteAuthorityResolverService remoteResolverService: IRemoteAuthorityResolverService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t) {\n\t\tconst connection = remoteAgentService.getConnection();\n\t\tif (connection) {\n\t\t\tconnection.onDidStateChange(async (e) => {\n\t\t\t\tif (e.type === PersistentConnectionEventType.ConnectionGain) {\n\t\t\t\t\tconst resolveResult =\n\t\t\t\t\t\tawait remoteResolverService.resolveAuthority(\n\t\t\t\t\t\t\tconnection.remoteAuthority,\n\t\t\t\t\t\t);\n\t\t\t\t\tif (\n\t\t\t\t\t\tresolveResult.options &&\n\t\t\t\t\t\tresolveResult.options.extensionHostEnv\n\t\t\t\t\t) {\n\t\t\t\t\t\tawait extensionService.setRemoteEnvironment(\n\t\t\t\t\t\t\tresolveResult.options.extensionHostEnv,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\nclass RemoteTelemetryEnablementUpdater\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tstatic readonly ID = \"workbench.contrib.remoteTelemetryEnablementUpdater\";\n\n\tconstructor(\n\t\t@IRemoteAgentService private readonly remoteAgentService: IRemoteAgentService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\n\t\tthis.updateRemoteTelemetryEnablement();\n\n\t\tthis._register(configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(TELEMETRY_SETTING_ID)) {\n\t\t\t\tthis.updateRemoteTelemetryEnablement();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate updateRemoteTelemetryEnablement(): Promise<void> {\n\t\treturn this.remoteAgentService.updateTelemetryLevel(\n\t\t\tgetTelemetryLevel(this.configurationService),\n\t\t);\n\t}\n}\n\nclass RemoteEmptyWorkbenchPresentation\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tstatic readonly ID = \"workbench.contrib.remoteEmptyWorkbenchPresentation\";\n\n\tconstructor(\n\t\t@INativeWorkbenchEnvironmentService environmentService: INativeWorkbenchEnvironmentService,\n\t\t@IRemoteAuthorityResolverService remoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t) {\n\t\tsuper();\n\n\t\tfunction shouldShowExplorer(): boolean {\n\t\t\tconst startupEditor = configurationService.getValue<string>(\n\t\t\t\t\"workbench.startupEditor\",\n\t\t\t);\n\t\t\treturn (\n\t\t\t\tstartupEditor !== \"welcomePage\" &&\n\t\t\t\tstartupEditor !== \"welcomePageInEmptyWorkbench\"\n\t\t\t);\n\t\t}\n\n\t\tfunction shouldShowTerminal(): boolean {\n\t\t\treturn shouldShowExplorer();\n\t\t}\n\n\t\tconst {\n\t\t\tremoteAuthority,\n\t\t\tfilesToDiff,\n\t\t\tfilesToMerge,\n\t\t\tfilesToOpenOrCreate,\n\t\t\tfilesToWait,\n\t\t} = environmentService;\n\t\tif (\n\t\t\tremoteAuthority &&\n\t\t\tcontextService.getWorkbenchState() === WorkbenchState.EMPTY &&\n\t\t\t!filesToDiff?.length &&\n\t\t\t!filesToMerge?.length &&\n\t\t\t!filesToOpenOrCreate?.length &&\n\t\t\t!filesToWait\n\t\t) {\n\t\t\tremoteAuthorityResolverService\n\t\t\t\t.resolveAuthority(remoteAuthority)\n\t\t\t\t.then(() => {\n\t\t\t\t\tif (shouldShowExplorer()) {\n\t\t\t\t\t\tcommandService.executeCommand(\n\t\t\t\t\t\t\t\"workbench.view.explorer\",\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (shouldShowTerminal()) {\n\t\t\t\t\t\tcommandService.executeCommand(\n\t\t\t\t\t\t\t\"workbench.action.terminal.toggleTerminal\",\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * Sets the 'wslFeatureInstalled' context key if the WSL feature is or was installed on this machine.\n */\nclass WSLContextKeyInitializer\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tstatic readonly ID = \"workbench.contrib.wslContextKeyInitializer\";\n\n\tconstructor(\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@INativeHostService nativeHostService: INativeHostService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t) {\n\t\tsuper();\n\n\t\tconst contextKeyId = \"wslFeatureInstalled\";\n\t\tconst storageKey = \"remote.wslFeatureInstalled\";\n\n\t\tconst defaultValue = storageService.getBoolean(\n\t\t\tstorageKey,\n\t\t\tStorageScope.APPLICATION,\n\t\t\tundefined,\n\t\t);\n\n\t\tconst hasWSLFeatureContext = new RawContextKey<boolean>(\n\t\t\tcontextKeyId,\n\t\t\t!!defaultValue,\n\t\t\tnls.localize(\n\t\t\t\t\"wslFeatureInstalled\",\n\t\t\t\t\"Whether the platform has the WSL feature installed\",\n\t\t\t),\n\t\t);\n\t\tconst contextKey = hasWSLFeatureContext.bindTo(contextKeyService);\n\n\t\tif (defaultValue === undefined) {\n\t\t\tlifecycleService.when(LifecyclePhase.Eventually).then(async () => {\n\t\t\t\tnativeHostService.hasWSLFeatureInstalled().then((res) => {\n\t\t\t\t\tif (res) {\n\t\t\t\t\t\tcontextKey.set(true);\n\t\t\t\t\t\t// once detected, set to true\n\t\t\t\t\t\tstorageService.store(\n\t\t\t\t\t\t\tstorageKey,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\t\t\t\tStorageTarget.MACHINE,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n}\n\nconst workbenchContributionsRegistry =\n\tRegistry.as<IWorkbenchContributionsRegistry>(\n\t\tWorkbenchContributionsExtensions.Workbench,\n\t);\nworkbenchContributionsRegistry.registerWorkbenchContribution(\n\tRemoteAgentDiagnosticListener,\n\tLifecyclePhase.Eventually,\n);\nworkbenchContributionsRegistry.registerWorkbenchContribution(\n\tRemoteExtensionHostEnvironmentUpdater,\n\tLifecyclePhase.Eventually,\n);\nregisterWorkbenchContribution2(\n\tRemoteTelemetryEnablementUpdater.ID,\n\tRemoteTelemetryEnablementUpdater,\n\tWorkbenchPhase.BlockRestore,\n);\nregisterWorkbenchContribution2(\n\tRemoteEmptyWorkbenchPresentation.ID,\n\tRemoteEmptyWorkbenchPresentation,\n\tWorkbenchPhase.BlockRestore,\n);\nif (isWindows) {\n\tregisterWorkbenchContribution2(\n\t\tWSLContextKeyInitializer.ID,\n\t\tWSLContextKeyInitializer,\n\t\tWorkbenchPhase.BlockRestore,\n\t);\n}\n\nRegistry.as<IConfigurationRegistry>(\n\tConfigurationExtensions.Configuration,\n).registerConfiguration({\n\tid: \"remote\",\n\ttitle: nls.localize(\"remote\", \"Remote\"),\n\ttype: \"object\",\n\tproperties: {\n\t\t\"remote.downloadExtensionsLocally\": {\n\t\t\ttype: \"boolean\",\n\t\t\tmarkdownDescription: nls.localize(\n\t\t\t\t\"remote.downloadExtensionsLocally\",\n\t\t\t\t\"When enabled extensions are downloaded locally and installed on remote.\",\n\t\t\t),\n\t\t\tdefault: false,\n\t\t},\n\t},\n});\n\nif (isMacintosh) {\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: OpenLocalFileFolderCommand.ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyO,\n\t\twhen: RemoteFileDialogContext,\n\t\tmetadata: { description: OpenLocalFileFolderCommand.LABEL, args: [] },\n\t\thandler: OpenLocalFileFolderCommand.handler(),\n\t});\n} else {\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: OpenLocalFileCommand.ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyO,\n\t\twhen: RemoteFileDialogContext,\n\t\tmetadata: { description: OpenLocalFileCommand.LABEL, args: [] },\n\t\thandler: OpenLocalFileCommand.handler(),\n\t});\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: OpenLocalFolderCommand.ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\tprimary: KeyChord(\n\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\tKeyMod.CtrlCmd | KeyCode.KeyO,\n\t\t),\n\t\twhen: RemoteFileDialogContext,\n\t\tmetadata: { description: OpenLocalFolderCommand.LABEL, args: [] },\n\t\thandler: OpenLocalFolderCommand.handler(),\n\t});\n}\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: SaveLocalFileCommand.ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyS,\n\twhen: RemoteFileDialogContext,\n\tmetadata: { description: SaveLocalFileCommand.LABEL, args: [] },\n\thandler: SaveLocalFileCommand.handler(),\n});\n"],
  "mappings": "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",
  "names": []
}
