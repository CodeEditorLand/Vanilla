{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/remote/browser/remoteIndicator.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DomEmitter } from \"../../../../base/browser/event.js\";\nimport { mainWindow } from \"../../../../base/browser/window.js\";\nimport type {\n\tWorkbenchActionExecutedClassification,\n\tWorkbenchActionExecutedEvent,\n} from \"../../../../base/common/actions.js\";\nimport { RunOnceScheduler, retry } from \"../../../../base/common/async.js\";\nimport { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport {\n\ttype IMarkdownString,\n\tMarkdownString,\n} from \"../../../../base/common/htmlContent.js\";\nimport { getCodiconAriaLabel } from \"../../../../base/common/iconLabels.js\";\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n} from \"../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport {\n\ttype PlatformName,\n\tPlatformToString,\n\tisWeb,\n\tplatform,\n} from \"../../../../base/common/platform.js\";\nimport { truncate } from \"../../../../base/common/strings.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport * as nls from \"../../../../nls.js\";\nimport {\n\tAction2,\n\tIMenuService,\n\tMenuId,\n\tMenuItemAction,\n\tMenuRegistry,\n\ttype SubmenuItemAction,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tExtensions as ConfigurationExtensions,\n\ttype IConfigurationRegistry,\n} from \"../../../../platform/configuration/common/configurationRegistry.js\";\nimport {\n\tContextKeyExpr,\n\tIContextKeyService,\n\tRawContextKey,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tEXTENSION_INSTALL_SKIP_WALKTHROUGH_CONTEXT,\n\tIExtensionGalleryService,\n\tIExtensionManagementService,\n} from \"../../../../platform/extensionManagement/common/extensionManagement.js\";\nimport { ExtensionIdentifier } from \"../../../../platform/extensions/common/extensions.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { ILabelService } from \"../../../../platform/label/common/label.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport {\n\ttype IQuickInputButton,\n\tIQuickInputService,\n\ttype QuickPickItem,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { PersistentConnectionEventType } from \"../../../../platform/remote/common/remoteAgentConnection.js\";\nimport { IRemoteAuthorityResolverService } from \"../../../../platform/remote/common/remoteAuthorityResolver.js\";\nimport { getRemoteName } from \"../../../../platform/remote/common/remoteHosts.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { getVirtualWorkspaceLocation } from \"../../../../platform/workspace/common/virtualWorkspace.js\";\nimport { IWorkspaceContextService } from \"../../../../platform/workspace/common/workspace.js\";\nimport { ReloadWindowAction } from \"../../../browser/actions/windowActions.js\";\nimport { workbenchConfigurationNodeBase } from \"../../../common/configuration.js\";\nimport {\n\tRemoteNameContext,\n\tVirtualWorkspaceContext,\n} from \"../../../common/contextkeys.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport { IBrowserWorkbenchEnvironmentService } from \"../../../services/environment/browser/environmentService.js\";\nimport { IExtensionService } from \"../../../services/extensions/common/extensions.js\";\nimport { IHostService } from \"../../../services/host/browser/host.js\";\nimport {\n\tIRemoteAgentService,\n\tremoteConnectionLatencyMeasurer,\n} from \"../../../services/remote/common/remoteAgentService.js\";\nimport {\n\ttype IStatusbarEntry,\n\ttype IStatusbarEntryAccessor,\n\tIStatusbarService,\n\tStatusbarAlignment,\n} from \"../../../services/statusbar/browser/statusbar.js\";\nimport { infoIcon } from \"../../extensions/browser/extensionsIcons.js\";\nimport {\n\tIExtensionsWorkbenchService,\n\tLIST_WORKSPACE_UNSUPPORTED_EXTENSIONS_COMMAND_ID,\n} from \"../../extensions/common/extensions.js\";\n\ntype ActionGroup = [string, Array<MenuItemAction | SubmenuItemAction>];\n\ninterface RemoteExtensionMetadata {\n\tid: string;\n\tinstalled: boolean;\n\tdependencies: string[];\n\tisPlatformCompatible: boolean;\n\thelpLink: string;\n\tstartConnectLabel: string;\n\tstartCommand: string;\n\tpriority: number;\n\tsupportedPlatforms?: PlatformName[];\n}\n\nexport class RemoteStatusIndicator\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tstatic readonly ID = \"workbench.contrib.remoteStatusIndicator\";\n\n\tprivate static readonly REMOTE_ACTIONS_COMMAND_ID =\n\t\t\"workbench.action.remote.showMenu\";\n\tprivate static readonly CLOSE_REMOTE_COMMAND_ID =\n\t\t\"workbench.action.remote.close\";\n\tprivate static readonly SHOW_CLOSE_REMOTE_COMMAND_ID = !isWeb; // web does not have a \"Close Remote\" command\n\tprivate static readonly INSTALL_REMOTE_EXTENSIONS_ID =\n\t\t\"workbench.action.remote.extensions\";\n\n\tprivate static readonly REMOTE_STATUS_LABEL_MAX_LENGTH = 40;\n\n\tprivate static readonly REMOTE_CONNECTION_LATENCY_SCHEDULER_DELAY =\n\t\t60 * 1000;\n\tprivate static readonly REMOTE_CONNECTION_LATENCY_SCHEDULER_FIRST_RUN_DELAY =\n\t\t10 * 1000;\n\n\tprivate remoteStatusEntry: IStatusbarEntryAccessor | undefined;\n\n\tprivate readonly legacyIndicatorMenu = this._register(\n\t\tthis.menuService.createMenu(\n\t\t\tMenuId.StatusBarWindowIndicatorMenu,\n\t\t\tthis.contextKeyService,\n\t\t),\n\t); // to be removed once migration completed\n\tprivate readonly remoteIndicatorMenu = this._register(\n\t\tthis.menuService.createMenu(\n\t\t\tMenuId.StatusBarRemoteIndicatorMenu,\n\t\t\tthis.contextKeyService,\n\t\t),\n\t);\n\n\tprivate remoteMenuActionsGroups: ActionGroup[] | undefined;\n\n\tprivate readonly remoteAuthority = this.environmentService.remoteAuthority;\n\n\tprivate virtualWorkspaceLocation:\n\t\t| { scheme: string; authority: string }\n\t\t| undefined = undefined;\n\n\tprivate connectionState:\n\t\t| \"initializing\"\n\t\t| \"connected\"\n\t\t| \"reconnecting\"\n\t\t| \"disconnected\"\n\t\t| undefined = undefined;\n\tprivate connectionToken: string | undefined = undefined;\n\tprivate readonly connectionStateContextKey = new RawContextKey<\n\t\t\"\" | \"initializing\" | \"disconnected\" | \"connected\"\n\t>(\"remoteConnectionState\", \"\").bindTo(this.contextKeyService);\n\n\tprivate networkState: \"online\" | \"offline\" | \"high-latency\" | undefined =\n\t\tundefined;\n\tprivate measureNetworkConnectionLatencyScheduler:\n\t\t| RunOnceScheduler\n\t\t| undefined = undefined;\n\n\tprivate loggedInvalidGroupNames: { [group: string]: boolean } =\n\t\tObject.create(null);\n\n\tprivate _remoteExtensionMetadata: RemoteExtensionMetadata[] | undefined =\n\t\tundefined;\n\tprivate get remoteExtensionMetadata(): RemoteExtensionMetadata[] {\n\t\tif (!this._remoteExtensionMetadata) {\n\t\t\tconst remoteExtensionTips = {\n\t\t\t\t...this.productService.remoteExtensionTips,\n\t\t\t\t...this.productService.virtualWorkspaceExtensionTips,\n\t\t\t};\n\t\t\tthis._remoteExtensionMetadata = Object.values(remoteExtensionTips)\n\t\t\t\t.filter((value) => value.startEntry !== undefined)\n\t\t\t\t.map((value) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: value.extensionId,\n\t\t\t\t\t\tinstalled: false,\n\t\t\t\t\t\tfriendlyName: value.friendlyName,\n\t\t\t\t\t\tisPlatformCompatible: false,\n\t\t\t\t\t\tdependencies: [],\n\t\t\t\t\t\thelpLink: value.startEntry?.helpLink ?? \"\",\n\t\t\t\t\t\tstartConnectLabel:\n\t\t\t\t\t\t\tvalue.startEntry?.startConnectLabel ?? \"\",\n\t\t\t\t\t\tstartCommand: value.startEntry?.startCommand ?? \"\",\n\t\t\t\t\t\tpriority: value.startEntry?.priority ?? 10,\n\t\t\t\t\t\tsupportedPlatforms: value.supportedPlatforms,\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\tthis.remoteExtensionMetadata.sort(\n\t\t\t\t(ext1, ext2) => ext1.priority - ext2.priority,\n\t\t\t);\n\t\t}\n\n\t\treturn this._remoteExtensionMetadata;\n\t}\n\n\tprivate remoteMetadataInitialized = false;\n\tprivate readonly _onDidChangeEntries = this._register(new Emitter<void>());\n\tprivate readonly onDidChangeEntries: Event<void> =\n\t\tthis._onDidChangeEntries.event;\n\n\tconstructor(\n\t\t@IStatusbarService private readonly statusbarService: IStatusbarService,\n\t\t@IBrowserWorkbenchEnvironmentService private readonly environmentService: IBrowserWorkbenchEnvironmentService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IContextKeyService private contextKeyService: IContextKeyService,\n\t\t@IMenuService private menuService: IMenuService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IRemoteAgentService private readonly remoteAgentService: IRemoteAgentService,\n\t\t@IRemoteAuthorityResolverService private readonly remoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\n\t\t// Set initial connection state\n\t\tif (this.remoteAuthority) {\n\t\t\tthis.connectionState = 'initializing';\n\t\t\tthis.connectionStateContextKey.set(this.connectionState);\n\t\t} else {\n\t\t\tthis.updateVirtualWorkspaceLocation();\n\t\t}\n\n\t\tthis.registerActions();\n\t\tthis.registerListeners();\n\n\t\tthis.updateWhenInstalledExtensionsRegistered();\n\t\tthis.updateRemoteStatusIndicator();\n\t}\n\n\tprivate registerActions(): void {\n\t\tconst category = nls.localize2(\"remote.category\", \"Remote\");\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: RemoteStatusIndicator.REMOTE_ACTIONS_COMMAND_ID,\n\t\t\t\t\t\t\tcategory,\n\t\t\t\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\t\t\t\"remote.showMenu\",\n\t\t\t\t\t\t\t\t\"Show Remote Menu\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tf1: true,\n\t\t\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\t\t\tprimary:\n\t\t\t\t\t\t\t\t\tKeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyO,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\trun = () => this.showRemoteMenu();\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\t// Close Remote Connection\n\t\tif (RemoteStatusIndicator.SHOW_CLOSE_REMOTE_COMMAND_ID) {\n\t\t\tthis._register(\n\t\t\t\tregisterAction2(\n\t\t\t\t\tclass extends Action2 {\n\t\t\t\t\t\tconstructor() {\n\t\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\t\tid: RemoteStatusIndicator.CLOSE_REMOTE_COMMAND_ID,\n\t\t\t\t\t\t\t\tcategory,\n\t\t\t\t\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\t\t\t\t\"remote.close\",\n\t\t\t\t\t\t\t\t\t\"Close Remote Connection\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tf1: true,\n\t\t\t\t\t\t\t\tprecondition: ContextKeyExpr.or(\n\t\t\t\t\t\t\t\t\tRemoteNameContext,\n\t\t\t\t\t\t\t\t\tVirtualWorkspaceContext,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\trun = () =>\n\t\t\t\t\t\t\tthis.hostService.openWindow({\n\t\t\t\t\t\t\t\tforceReuseWindow: true,\n\t\t\t\t\t\t\t\tremoteAuthority: null,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t\tif (this.remoteAuthority) {\n\t\t\t\tMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\t\t\t\t\tgroup: \"6_close\",\n\t\t\t\t\tcommand: {\n\t\t\t\t\t\tid: RemoteStatusIndicator.CLOSE_REMOTE_COMMAND_ID,\n\t\t\t\t\t\ttitle: nls.localize(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"miCloseRemote\",\n\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"Close Re&&mote Connection\",\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\torder: 3.5,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (this.extensionGalleryService.isEnabled()) {\n\t\t\tthis._register(\n\t\t\t\tregisterAction2(\n\t\t\t\t\tclass extends Action2 {\n\t\t\t\t\t\tconstructor() {\n\t\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\t\tid: RemoteStatusIndicator.INSTALL_REMOTE_EXTENSIONS_ID,\n\t\t\t\t\t\t\t\tcategory,\n\t\t\t\t\t\t\t\ttitle: nls.localize2(\n\t\t\t\t\t\t\t\t\t\"remote.install\",\n\t\t\t\t\t\t\t\t\t\"Install Remote Development Extensions\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tf1: true,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\trun = (accessor: ServicesAccessor, input: string) => {\n\t\t\t\t\t\t\tconst extensionsWorkbenchService = accessor.get(\n\t\t\t\t\t\t\t\tIExtensionsWorkbenchService,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn extensionsWorkbenchService.openSearch(\n\t\t\t\t\t\t\t\t`@recommended:remotes`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate registerListeners(): void {\n\t\t// Menu changes\n\t\tconst updateRemoteActions = () => {\n\t\t\tthis.remoteMenuActionsGroups = undefined;\n\t\t\tthis.updateRemoteStatusIndicator();\n\t\t};\n\n\t\tthis._register(\n\t\t\tthis.legacyIndicatorMenu.onDidChange(updateRemoteActions),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.remoteIndicatorMenu.onDidChange(updateRemoteActions),\n\t\t);\n\n\t\t// Update indicator when formatter changes as it may have an impact on the remote label\n\t\tthis._register(\n\t\t\tthis.labelService.onDidChangeFormatters(() =>\n\t\t\t\tthis.updateRemoteStatusIndicator(),\n\t\t\t),\n\t\t);\n\n\t\t// Update based on remote indicator changes if any\n\t\tconst remoteIndicator =\n\t\t\tthis.environmentService.options?.windowIndicator;\n\t\tif (remoteIndicator && remoteIndicator.onDidChange) {\n\t\t\tthis._register(\n\t\t\t\tremoteIndicator.onDidChange(() =>\n\t\t\t\t\tthis.updateRemoteStatusIndicator(),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\t// Listen to changes of the connection\n\t\tif (this.remoteAuthority) {\n\t\t\tconst connection = this.remoteAgentService.getConnection();\n\t\t\tif (connection) {\n\t\t\t\tthis._register(\n\t\t\t\t\tconnection.onDidStateChange((e) => {\n\t\t\t\t\t\tswitch (e.type) {\n\t\t\t\t\t\t\tcase PersistentConnectionEventType.ConnectionLost:\n\t\t\t\t\t\t\tcase PersistentConnectionEventType.ReconnectionRunning:\n\t\t\t\t\t\t\tcase PersistentConnectionEventType.ReconnectionWait:\n\t\t\t\t\t\t\t\tthis.setConnectionState(\"reconnecting\");\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase PersistentConnectionEventType.ReconnectionPermanentFailure:\n\t\t\t\t\t\t\t\tthis.setConnectionState(\"disconnected\");\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase PersistentConnectionEventType.ConnectionGain:\n\t\t\t\t\t\t\t\tthis.setConnectionState(\"connected\");\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._register(\n\t\t\t\tthis.workspaceContextService.onDidChangeWorkbenchState(() => {\n\t\t\t\t\tthis.updateVirtualWorkspaceLocation();\n\t\t\t\t\tthis.updateRemoteStatusIndicator();\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\t// Online / Offline changes (web only)\n\t\tif (isWeb) {\n\t\t\tthis._register(\n\t\t\t\tEvent.any(\n\t\t\t\t\tthis._register(new DomEmitter(mainWindow, \"online\")).event,\n\t\t\t\t\tthis._register(new DomEmitter(mainWindow, \"offline\")).event,\n\t\t\t\t)(() =>\n\t\t\t\t\tthis.setNetworkState(\n\t\t\t\t\t\tnavigator.onLine ? \"online\" : \"offline\",\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tthis._register(\n\t\t\tthis.extensionService.onDidChangeExtensions(async (result) => {\n\t\t\t\tfor (const ext of result.added) {\n\t\t\t\t\tconst index = this.remoteExtensionMetadata.findIndex(\n\t\t\t\t\t\t(value) =>\n\t\t\t\t\t\t\tExtensionIdentifier.equals(\n\t\t\t\t\t\t\t\tvalue.id,\n\t\t\t\t\t\t\t\text.identifier,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tif (index > -1) {\n\t\t\t\t\t\tthis.remoteExtensionMetadata[index].installed = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.extensionManagementService.onDidUninstallExtension(\n\t\t\t\tasync (result) => {\n\t\t\t\t\tconst index = this.remoteExtensionMetadata.findIndex(\n\t\t\t\t\t\t(value) =>\n\t\t\t\t\t\t\tExtensionIdentifier.equals(\n\t\t\t\t\t\t\t\tvalue.id,\n\t\t\t\t\t\t\t\tresult.identifier.id,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tif (index > -1) {\n\t\t\t\t\t\tthis.remoteExtensionMetadata[index].installed = false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate async initializeRemoteMetadata(): Promise<void> {\n\t\tif (this.remoteMetadataInitialized) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentPlatform = PlatformToString(platform);\n\t\tfor (let i = 0; i < this.remoteExtensionMetadata.length; i++) {\n\t\t\tconst extensionId = this.remoteExtensionMetadata[i].id;\n\t\t\tconst supportedPlatforms =\n\t\t\t\tthis.remoteExtensionMetadata[i].supportedPlatforms;\n\t\t\tconst isInstalled = (\n\t\t\t\tawait this.extensionManagementService.getInstalled()\n\t\t\t).find((value) =>\n\t\t\t\tExtensionIdentifier.equals(value.identifier.id, extensionId),\n\t\t\t)\n\t\t\t\t? true\n\t\t\t\t: false;\n\n\t\t\tthis.remoteExtensionMetadata[i].installed = isInstalled;\n\t\t\tif (isInstalled) {\n\t\t\t\tthis.remoteExtensionMetadata[i].isPlatformCompatible = true;\n\t\t\t} else if (\n\t\t\t\tsupportedPlatforms &&\n\t\t\t\t!supportedPlatforms.includes(currentPlatform)\n\t\t\t) {\n\t\t\t\tthis.remoteExtensionMetadata[i].isPlatformCompatible = false;\n\t\t\t} else {\n\t\t\t\tthis.remoteExtensionMetadata[i].isPlatformCompatible = true;\n\t\t\t}\n\t\t}\n\n\t\tthis.remoteMetadataInitialized = true;\n\t\tthis._onDidChangeEntries.fire();\n\t\tthis.updateRemoteStatusIndicator();\n\t}\n\n\tprivate updateVirtualWorkspaceLocation() {\n\t\tthis.virtualWorkspaceLocation = getVirtualWorkspaceLocation(\n\t\t\tthis.workspaceContextService.getWorkspace(),\n\t\t);\n\t}\n\n\tprivate async updateWhenInstalledExtensionsRegistered(): Promise<void> {\n\t\tawait this.extensionService.whenInstalledExtensionsRegistered();\n\n\t\tconst remoteAuthority = this.remoteAuthority;\n\t\tif (remoteAuthority) {\n\t\t\t// Try to resolve the authority to figure out connection state\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst { authority } =\n\t\t\t\t\t\tawait this.remoteAuthorityResolverService.resolveAuthority(\n\t\t\t\t\t\t\tremoteAuthority,\n\t\t\t\t\t\t);\n\t\t\t\t\tthis.connectionToken = authority.connectionToken;\n\n\t\t\t\t\tthis.setConnectionState(\"connected\");\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.setConnectionState(\"disconnected\");\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\n\t\tthis.updateRemoteStatusIndicator();\n\t\tthis.initializeRemoteMetadata();\n\t}\n\n\tprivate setConnectionState(\n\t\tnewState: \"disconnected\" | \"connected\" | \"reconnecting\",\n\t): void {\n\t\tif (this.connectionState !== newState) {\n\t\t\tthis.connectionState = newState;\n\n\t\t\t// simplify context key which doesn't support `connecting`\n\t\t\tif (this.connectionState === \"reconnecting\") {\n\t\t\t\tthis.connectionStateContextKey.set(\"disconnected\");\n\t\t\t} else {\n\t\t\t\tthis.connectionStateContextKey.set(this.connectionState);\n\t\t\t}\n\n\t\t\t// indicate status\n\t\t\tthis.updateRemoteStatusIndicator();\n\n\t\t\t// start measuring connection latency once connected\n\t\t\tif (newState === \"connected\") {\n\t\t\t\tthis.scheduleMeasureNetworkConnectionLatency();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate scheduleMeasureNetworkConnectionLatency(): void {\n\t\tif (\n\t\t\t!this.remoteAuthority || // only when having a remote connection\n\t\t\tthis.measureNetworkConnectionLatencyScheduler // already scheduled\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.measureNetworkConnectionLatencyScheduler = this._register(\n\t\t\tnew RunOnceScheduler(\n\t\t\t\t() => this.measureNetworkConnectionLatency(),\n\t\t\t\tRemoteStatusIndicator.REMOTE_CONNECTION_LATENCY_SCHEDULER_DELAY,\n\t\t\t),\n\t\t);\n\t\tthis.measureNetworkConnectionLatencyScheduler.schedule(\n\t\t\tRemoteStatusIndicator.REMOTE_CONNECTION_LATENCY_SCHEDULER_FIRST_RUN_DELAY,\n\t\t);\n\t}\n\n\tprivate async measureNetworkConnectionLatency(): Promise<void> {\n\t\t// Measure latency if we are online\n\t\t// but only when the window has focus to prevent constantly\n\t\t// waking up the connection to the remote\n\n\t\tif (this.hostService.hasFocus && this.networkState !== \"offline\") {\n\t\t\tconst measurement = await remoteConnectionLatencyMeasurer.measure(\n\t\t\t\tthis.remoteAgentService,\n\t\t\t);\n\t\t\tif (measurement) {\n\t\t\t\tif (measurement.high) {\n\t\t\t\t\tthis.setNetworkState(\"high-latency\");\n\t\t\t\t} else if (this.networkState === \"high-latency\") {\n\t\t\t\t\tthis.setNetworkState(\"online\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.measureNetworkConnectionLatencyScheduler?.schedule();\n\t}\n\n\tprivate setNetworkState(\n\t\tnewState: \"online\" | \"offline\" | \"high-latency\",\n\t): void {\n\t\tif (this.networkState !== newState) {\n\t\t\tconst oldState = this.networkState;\n\t\t\tthis.networkState = newState;\n\n\t\t\tif (newState === \"high-latency\") {\n\t\t\t\tthis.logService.warn(\n\t\t\t\t\t`Remote network connection appears to have high latency (${remoteConnectionLatencyMeasurer.latency?.current?.toFixed(2)}ms last, ${remoteConnectionLatencyMeasurer.latency?.average?.toFixed(2)}ms average)`,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (this.connectionToken) {\n\t\t\t\tif (newState === \"online\" && oldState === \"high-latency\") {\n\t\t\t\t\tthis.logNetworkConnectionHealthTelemetry(\n\t\t\t\t\t\tthis.connectionToken,\n\t\t\t\t\t\t\"good\",\n\t\t\t\t\t);\n\t\t\t\t} else if (\n\t\t\t\t\tnewState === \"high-latency\" &&\n\t\t\t\t\toldState === \"online\"\n\t\t\t\t) {\n\t\t\t\t\tthis.logNetworkConnectionHealthTelemetry(\n\t\t\t\t\t\tthis.connectionToken,\n\t\t\t\t\t\t\"poor\",\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// update status\n\t\t\tthis.updateRemoteStatusIndicator();\n\t\t}\n\t}\n\n\tprivate logNetworkConnectionHealthTelemetry(\n\t\tconnectionToken: string,\n\t\tconnectionHealth: \"good\" | \"poor\",\n\t): void {\n\t\ttype RemoteConnectionHealthClassification = {\n\t\t\towner: \"alexdima\";\n\t\t\tcomment: \"The remote connection health has changed (round trip time)\";\n\t\t\tremoteName: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\tcomment: \"The name of the resolver.\";\n\t\t\t};\n\t\t\treconnectionToken: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\tcomment: \"The identifier of the connection.\";\n\t\t\t};\n\t\t\tconnectionHealth: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\tcomment: \"The health of the connection: good or poor.\";\n\t\t\t};\n\t\t};\n\t\ttype RemoteConnectionHealthEvent = {\n\t\t\tremoteName: string | undefined;\n\t\t\treconnectionToken: string;\n\t\t\tconnectionHealth: \"good\" | \"poor\";\n\t\t};\n\t\tthis.telemetryService.publicLog2<\n\t\t\tRemoteConnectionHealthEvent,\n\t\t\tRemoteConnectionHealthClassification\n\t\t>(\"remoteConnectionHealth\", {\n\t\t\tremoteName: getRemoteName(this.remoteAuthority),\n\t\t\treconnectionToken: connectionToken,\n\t\t\tconnectionHealth,\n\t\t});\n\t}\n\n\tprivate validatedGroup(group: string) {\n\t\tif (\n\t\t\t!group.match(\n\t\t\t\t/^(remote|virtualfs)_(\\d\\d)_(([a-z][a-z0-9+.-]*)_(.*))$/,\n\t\t\t)\n\t\t) {\n\t\t\tif (!this.loggedInvalidGroupNames[group]) {\n\t\t\t\tthis.loggedInvalidGroupNames[group] = true;\n\t\t\t\tthis.logService.warn(\n\t\t\t\t\t`Invalid group name used in \"statusBar/remoteIndicator\" menu contribution: ${group}. Entries ignored. Expected format: 'remote_$ORDER_$REMOTENAME_$GROUPING or 'virtualfs_$ORDER_$FILESCHEME_$GROUPING.`,\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate getRemoteMenuActions(doNotUseCache?: boolean): ActionGroup[] {\n\t\tif (!this.remoteMenuActionsGroups || doNotUseCache) {\n\t\t\tthis.remoteMenuActionsGroups = this.remoteIndicatorMenu\n\t\t\t\t.getActions()\n\t\t\t\t.filter((a) => this.validatedGroup(a[0]))\n\t\t\t\t.concat(this.legacyIndicatorMenu.getActions());\n\t\t}\n\t\treturn this.remoteMenuActionsGroups;\n\t}\n\n\tprivate updateRemoteStatusIndicator(): void {\n\t\t// Remote Indicator: show if provided via options, e.g. by the web embedder API\n\t\tconst remoteIndicator =\n\t\t\tthis.environmentService.options?.windowIndicator;\n\t\tif (remoteIndicator) {\n\t\t\tlet remoteIndicatorLabel = remoteIndicator.label.trim();\n\t\t\tif (!remoteIndicatorLabel.startsWith(\"$(\")) {\n\t\t\t\tremoteIndicatorLabel = `$(remote) ${remoteIndicatorLabel}`; // ensure the indicator has a codicon\n\t\t\t}\n\n\t\t\tthis.renderRemoteStatusIndicator(\n\t\t\t\ttruncate(\n\t\t\t\t\tremoteIndicatorLabel,\n\t\t\t\t\tRemoteStatusIndicator.REMOTE_STATUS_LABEL_MAX_LENGTH,\n\t\t\t\t),\n\t\t\t\tremoteIndicator.tooltip,\n\t\t\t\tremoteIndicator.command,\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Show for remote windows on the desktop\n\t\tif (this.remoteAuthority) {\n\t\t\tconst hostLabel =\n\t\t\t\tthis.labelService.getHostLabel(\n\t\t\t\t\tSchemas.vscodeRemote,\n\t\t\t\t\tthis.remoteAuthority,\n\t\t\t\t) || this.remoteAuthority;\n\t\t\tswitch (this.connectionState) {\n\t\t\t\tcase \"initializing\":\n\t\t\t\t\tthis.renderRemoteStatusIndicator(\n\t\t\t\t\t\tnls.localize(\"host.open\", \"Opening Remote...\"),\n\t\t\t\t\t\tnls.localize(\"host.open\", \"Opening Remote...\"),\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttrue /* progress */,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"reconnecting\":\n\t\t\t\t\tthis.renderRemoteStatusIndicator(\n\t\t\t\t\t\t`${nls.localize(\"host.reconnecting\", \"Reconnecting to {0}...\", truncate(hostLabel, RemoteStatusIndicator.REMOTE_STATUS_LABEL_MAX_LENGTH))}`,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttrue /* progress */,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"disconnected\":\n\t\t\t\t\tthis.renderRemoteStatusIndicator(\n\t\t\t\t\t\t`$(alert) ${nls.localize(\"disconnectedFrom\", \"Disconnected from {0}\", truncate(hostLabel, RemoteStatusIndicator.REMOTE_STATUS_LABEL_MAX_LENGTH))}`,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: {\n\t\t\t\t\tconst tooltip = new MarkdownString(\"\", {\n\t\t\t\t\t\tisTrusted: true,\n\t\t\t\t\t\tsupportThemeIcons: true,\n\t\t\t\t\t});\n\t\t\t\t\tconst hostNameTooltip = this.labelService.getHostTooltip(\n\t\t\t\t\t\tSchemas.vscodeRemote,\n\t\t\t\t\t\tthis.remoteAuthority,\n\t\t\t\t\t);\n\t\t\t\t\tif (hostNameTooltip) {\n\t\t\t\t\t\ttooltip.appendMarkdown(hostNameTooltip);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttooltip.appendText(\n\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tkey: \"host.tooltip\",\n\t\t\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\t\t\"{0} is a remote host name, e.g. Dev Container\",\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"Editing on {0}\",\n\t\t\t\t\t\t\t\thostLabel,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tthis.renderRemoteStatusIndicator(\n\t\t\t\t\t\t`$(remote) ${truncate(hostLabel, RemoteStatusIndicator.REMOTE_STATUS_LABEL_MAX_LENGTH)}`,\n\t\t\t\t\t\ttooltip,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t// Show when in a virtual workspace\n\t\tif (this.virtualWorkspaceLocation) {\n\t\t\t// Workspace with label: indicate editing source\n\t\t\tconst workspaceLabel = this.labelService.getHostLabel(\n\t\t\t\tthis.virtualWorkspaceLocation.scheme,\n\t\t\t\tthis.virtualWorkspaceLocation.authority,\n\t\t\t);\n\t\t\tif (workspaceLabel) {\n\t\t\t\tconst tooltip = new MarkdownString(\"\", {\n\t\t\t\t\tisTrusted: true,\n\t\t\t\t\tsupportThemeIcons: true,\n\t\t\t\t});\n\t\t\t\tconst hostNameTooltip = this.labelService.getHostTooltip(\n\t\t\t\t\tthis.virtualWorkspaceLocation.scheme,\n\t\t\t\t\tthis.virtualWorkspaceLocation.authority,\n\t\t\t\t);\n\t\t\t\tif (hostNameTooltip) {\n\t\t\t\t\ttooltip.appendMarkdown(hostNameTooltip);\n\t\t\t\t} else {\n\t\t\t\t\ttooltip.appendText(\n\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"workspace.tooltip\",\n\t\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\t\"{0} is a remote workspace name, e.g. GitHub\",\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"Editing on {0}\",\n\t\t\t\t\t\t\tworkspaceLabel,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (!isWeb || this.remoteAuthority) {\n\t\t\t\t\ttooltip.appendMarkdown(\"\\n\\n\");\n\t\t\t\t\ttooltip.appendMarkdown(\n\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"workspace.tooltip2\",\n\t\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\t\"[features are not available]({1}) is a link. Only translate `features are not available`. Do not change brackets and parentheses or {0}\",\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"Some [features are not available]({0}) for resources located on a virtual file system.\",\n\t\t\t\t\t\t\t`command:${LIST_WORKSPACE_UNSUPPORTED_EXTENSIONS_COMMAND_ID}`,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tthis.renderRemoteStatusIndicator(\n\t\t\t\t\t`$(remote) ${truncate(workspaceLabel, RemoteStatusIndicator.REMOTE_STATUS_LABEL_MAX_LENGTH)}`,\n\t\t\t\t\ttooltip,\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.renderRemoteStatusIndicator(\n\t\t\t`$(remote)`,\n\t\t\tnls.localize(\"noHost.tooltip\", \"Open a Remote Window\"),\n\t\t);\n\t\treturn;\n\t}\n\n\tprivate renderRemoteStatusIndicator(\n\t\tinitialText: string,\n\t\tinitialTooltip?: string | MarkdownString,\n\t\tcommand?: string,\n\t\tshowProgress?: boolean,\n\t): void {\n\t\tconst { text, tooltip, ariaLabel } = this.withNetworkStatus(\n\t\t\tinitialText,\n\t\t\tinitialTooltip,\n\t\t\tshowProgress,\n\t\t);\n\n\t\tconst properties: IStatusbarEntry = {\n\t\t\tname: nls.localize(\"remoteHost\", \"Remote Host\"),\n\t\t\tkind: this.networkState === \"offline\" ? \"offline\" : \"remote\",\n\t\t\tariaLabel,\n\t\t\ttext,\n\t\t\tshowProgress,\n\t\t\ttooltip,\n\t\t\tcommand: command ?? RemoteStatusIndicator.REMOTE_ACTIONS_COMMAND_ID,\n\t\t};\n\n\t\tif (this.remoteStatusEntry) {\n\t\t\tthis.remoteStatusEntry.update(properties);\n\t\t} else {\n\t\t\tthis.remoteStatusEntry = this.statusbarService.addEntry(\n\t\t\t\tproperties,\n\t\t\t\t\"status.host\",\n\t\t\t\tStatusbarAlignment.LEFT,\n\t\t\t\tNumber.MAX_VALUE /* first entry */,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate withNetworkStatus(\n\t\tinitialText: string,\n\t\tinitialTooltip?: string | MarkdownString,\n\t\tshowProgress?: boolean,\n\t): {\n\t\ttext: string;\n\t\ttooltip: string | IMarkdownString | undefined;\n\t\tariaLabel: string;\n\t} {\n\t\tlet text = initialText;\n\t\tlet tooltip = initialTooltip;\n\t\tlet ariaLabel = getCodiconAriaLabel(text);\n\n\t\tfunction textWithAlert(): string {\n\t\t\t// `initialText` can have a codicon in the beginning that already\n\t\t\t// indicates some kind of status, or we may have been asked to\n\t\t\t// show progress, where a spinning codicon appears. we only want\n\t\t\t// to replace with an alert icon for when a normal remote indicator\n\t\t\t// is shown.\n\n\t\t\tif (!showProgress && initialText.startsWith(\"$(remote)\")) {\n\t\t\t\treturn initialText.replace(\"$(remote)\", \"$(alert)\");\n\t\t\t}\n\n\t\t\treturn initialText;\n\t\t}\n\n\t\tswitch (this.networkState) {\n\t\t\tcase \"offline\": {\n\t\t\t\tconst offlineMessage = nls.localize(\n\t\t\t\t\t\"networkStatusOfflineTooltip\",\n\t\t\t\t\t\"Network appears to be offline, certain features might be unavailable.\",\n\t\t\t\t);\n\n\t\t\t\ttext = textWithAlert();\n\t\t\t\ttooltip = this.appendTooltipLine(tooltip, offlineMessage);\n\t\t\t\tariaLabel = `${ariaLabel}, ${offlineMessage}`;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"high-latency\":\n\t\t\t\ttext = textWithAlert();\n\t\t\t\ttooltip = this.appendTooltipLine(\n\t\t\t\t\ttooltip,\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\"networkStatusHighLatencyTooltip\",\n\t\t\t\t\t\t\"Network appears to have high latency ({0}ms last, {1}ms average), certain features may be slow to respond.\",\n\t\t\t\t\t\tremoteConnectionLatencyMeasurer.latency?.current?.toFixed(\n\t\t\t\t\t\t\t2,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tremoteConnectionLatencyMeasurer.latency?.average?.toFixed(\n\t\t\t\t\t\t\t2,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn { text, tooltip, ariaLabel };\n\t}\n\n\tprivate appendTooltipLine(\n\t\ttooltip: string | MarkdownString | undefined,\n\t\tline: string,\n\t): MarkdownString {\n\t\tlet markdownTooltip: MarkdownString;\n\t\tif (typeof tooltip === \"string\") {\n\t\t\tmarkdownTooltip = new MarkdownString(tooltip, {\n\t\t\t\tisTrusted: true,\n\t\t\t\tsupportThemeIcons: true,\n\t\t\t});\n\t\t} else {\n\t\t\tmarkdownTooltip =\n\t\t\t\ttooltip ??\n\t\t\t\tnew MarkdownString(\"\", {\n\t\t\t\t\tisTrusted: true,\n\t\t\t\t\tsupportThemeIcons: true,\n\t\t\t\t});\n\t\t}\n\n\t\tif (markdownTooltip.value.length > 0) {\n\t\t\tmarkdownTooltip.appendMarkdown(\"\\n\\n\");\n\t\t}\n\n\t\tmarkdownTooltip.appendMarkdown(line);\n\n\t\treturn markdownTooltip;\n\t}\n\n\tprivate async installExtension(extensionId: string) {\n\t\tconst galleryExtension = (\n\t\t\tawait this.extensionGalleryService.getExtensions(\n\t\t\t\t[{ id: extensionId }],\n\t\t\t\tCancellationToken.None,\n\t\t\t)\n\t\t)[0];\n\n\t\tawait this.extensionManagementService.installFromGallery(\n\t\t\tgalleryExtension,\n\t\t\t{\n\t\t\t\tisMachineScoped: false,\n\t\t\t\tdonotIncludePackAndDependencies: false,\n\t\t\t\tcontext: { [EXTENSION_INSTALL_SKIP_WALKTHROUGH_CONTEXT]: true },\n\t\t\t},\n\t\t);\n\t}\n\n\tprivate async runRemoteStartCommand(\n\t\textensionId: string,\n\t\tstartCommand: string,\n\t) {\n\t\t// check to ensure the extension is installed\n\t\tawait retry(\n\t\t\tasync () => {\n\t\t\t\tconst ext =\n\t\t\t\t\tawait this.extensionService.getExtension(extensionId);\n\t\t\t\tif (!ext) {\n\t\t\t\t\tthrow Error(\"Failed to find installed remote extension\");\n\t\t\t\t}\n\t\t\t\treturn ext;\n\t\t\t},\n\t\t\t300,\n\t\t\t10,\n\t\t);\n\n\t\tthis.commandService.executeCommand(startCommand);\n\t\tthis.telemetryService.publicLog2<\n\t\t\tWorkbenchActionExecutedEvent,\n\t\t\tWorkbenchActionExecutedClassification\n\t\t>(\"workbenchActionExecuted\", {\n\t\t\tid: \"remoteInstallAndRun\",\n\t\t\tdetail: extensionId,\n\t\t\tfrom: \"remote indicator\",\n\t\t});\n\t}\n\n\tprivate showRemoteMenu() {\n\t\tconst getCategoryLabel = (action: MenuItemAction) => {\n\t\t\tif (action.item.category) {\n\t\t\t\treturn typeof action.item.category === \"string\"\n\t\t\t\t\t? action.item.category\n\t\t\t\t\t: action.item.category.value;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t};\n\n\t\tconst matchCurrentRemote = () => {\n\t\t\tif (this.remoteAuthority) {\n\t\t\t\treturn new RegExp(\n\t\t\t\t\t`^remote_\\\\d\\\\d_${getRemoteName(this.remoteAuthority)}_`,\n\t\t\t\t);\n\t\t\t} else if (this.virtualWorkspaceLocation) {\n\t\t\t\treturn new RegExp(\n\t\t\t\t\t`^virtualfs_\\\\d\\\\d_${this.virtualWorkspaceLocation.scheme}_`,\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t};\n\n\t\tconst computeItems = () => {\n\t\t\tlet actionGroups = this.getRemoteMenuActions(true);\n\n\t\t\tconst items: QuickPickItem[] = [];\n\n\t\t\tconst currentRemoteMatcher = matchCurrentRemote();\n\t\t\tif (currentRemoteMatcher) {\n\t\t\t\t// commands for the current remote go first\n\t\t\t\tactionGroups = actionGroups.sort((g1, g2) => {\n\t\t\t\t\tconst isCurrentRemote1 = currentRemoteMatcher.test(g1[0]);\n\t\t\t\t\tconst isCurrentRemote2 = currentRemoteMatcher.test(g2[0]);\n\t\t\t\t\tif (isCurrentRemote1 !== isCurrentRemote2) {\n\t\t\t\t\t\treturn isCurrentRemote1 ? -1 : 1;\n\t\t\t\t\t}\n\t\t\t\t\t// legacy indicator commands go last\n\t\t\t\t\tif (g1[0] !== \"\" && g2[0] === \"\") {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t} else if (g1[0] === \"\" && g2[0] !== \"\") {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn g1[0].localeCompare(g2[0]);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet lastCategoryName: string | undefined;\n\n\t\t\tfor (const actionGroup of actionGroups) {\n\t\t\t\tlet hasGroupCategory = false;\n\t\t\t\tfor (const action of actionGroup[1]) {\n\t\t\t\t\tif (action instanceof MenuItemAction) {\n\t\t\t\t\t\tif (!hasGroupCategory) {\n\t\t\t\t\t\t\tconst category = getCategoryLabel(action);\n\t\t\t\t\t\t\tif (category !== lastCategoryName) {\n\t\t\t\t\t\t\t\titems.push({\n\t\t\t\t\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\t\t\t\t\tlabel: category,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tlastCategoryName = category;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\thasGroupCategory = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst label =\n\t\t\t\t\t\t\ttypeof action.item.title === \"string\"\n\t\t\t\t\t\t\t\t? action.item.title\n\t\t\t\t\t\t\t\t: action.item.title.value;\n\t\t\t\t\t\titems.push({\n\t\t\t\t\t\t\ttype: \"item\",\n\t\t\t\t\t\t\tid: action.item.id,\n\t\t\t\t\t\t\tlabel,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst showExtensionRecommendations =\n\t\t\t\tthis.configurationService.getValue<boolean>(\n\t\t\t\t\t\"workbench.remoteIndicator.showExtensionRecommendations\",\n\t\t\t\t);\n\t\t\tif (\n\t\t\t\tshowExtensionRecommendations &&\n\t\t\t\tthis.extensionGalleryService.isEnabled() &&\n\t\t\t\tthis.remoteMetadataInitialized\n\t\t\t) {\n\t\t\t\tconst notInstalledItems: QuickPickItem[] = [];\n\t\t\t\tfor (const metadata of this.remoteExtensionMetadata) {\n\t\t\t\t\tif (!metadata.installed && metadata.isPlatformCompatible) {\n\t\t\t\t\t\t// Create Install QuickPick with a help link\n\t\t\t\t\t\tconst label = metadata.startConnectLabel;\n\t\t\t\t\t\tconst buttons: IQuickInputButton[] = [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ticonClass: ThemeIcon.asClassName(infoIcon),\n\t\t\t\t\t\t\t\ttooltip: nls.localize(\n\t\t\t\t\t\t\t\t\t\"remote.startActions.help\",\n\t\t\t\t\t\t\t\t\t\"Learn More\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t];\n\t\t\t\t\t\tnotInstalledItems.push({\n\t\t\t\t\t\t\ttype: \"item\",\n\t\t\t\t\t\t\tid: metadata.id,\n\t\t\t\t\t\t\tlabel: label,\n\t\t\t\t\t\t\tbuttons: buttons,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\titems.push({\n\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\tlabel: nls.localize(\n\t\t\t\t\t\t\"remote.startActions.install\",\n\t\t\t\t\t\t\"Install\",\n\t\t\t\t\t),\n\t\t\t\t});\n\t\t\t\titems.push(...notInstalledItems);\n\t\t\t}\n\n\t\t\titems.push({\n\t\t\t\ttype: \"separator\",\n\t\t\t});\n\n\t\t\tconst entriesBeforeConfig = items.length;\n\n\t\t\tif (RemoteStatusIndicator.SHOW_CLOSE_REMOTE_COMMAND_ID) {\n\t\t\t\tif (this.remoteAuthority) {\n\t\t\t\t\titems.push({\n\t\t\t\t\t\ttype: \"item\",\n\t\t\t\t\t\tid: RemoteStatusIndicator.CLOSE_REMOTE_COMMAND_ID,\n\t\t\t\t\t\tlabel: nls.localize(\n\t\t\t\t\t\t\t\"closeRemoteConnection.title\",\n\t\t\t\t\t\t\t\"Close Remote Connection\",\n\t\t\t\t\t\t),\n\t\t\t\t\t});\n\n\t\t\t\t\tif (this.connectionState === \"disconnected\") {\n\t\t\t\t\t\titems.push({\n\t\t\t\t\t\t\ttype: \"item\",\n\t\t\t\t\t\t\tid: ReloadWindowAction.ID,\n\t\t\t\t\t\t\tlabel: nls.localize(\n\t\t\t\t\t\t\t\t\"reloadWindow\",\n\t\t\t\t\t\t\t\t\"Reload Window\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else if (this.virtualWorkspaceLocation) {\n\t\t\t\t\titems.push({\n\t\t\t\t\t\ttype: \"item\",\n\t\t\t\t\t\tid: RemoteStatusIndicator.CLOSE_REMOTE_COMMAND_ID,\n\t\t\t\t\t\tlabel: nls.localize(\n\t\t\t\t\t\t\t\"closeVirtualWorkspace.title\",\n\t\t\t\t\t\t\t\"Close Remote Workspace\",\n\t\t\t\t\t\t),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (items.length === entriesBeforeConfig) {\n\t\t\t\titems.pop(); // remove the separator again\n\t\t\t}\n\n\t\t\treturn items;\n\t\t};\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst quickPick = disposables.add(\n\t\t\tthis.quickInputService.createQuickPick({ useSeparators: true }),\n\t\t);\n\t\tquickPick.placeholder = nls.localize(\n\t\t\t\"remoteActions\",\n\t\t\t\"Select an option to open a Remote Window\",\n\t\t);\n\t\tquickPick.items = computeItems();\n\t\tquickPick.sortByLabel = false;\n\t\tquickPick.canSelectMany = false;\n\t\tdisposables.add(\n\t\t\tEvent.once(quickPick.onDidAccept)(async (_) => {\n\t\t\t\tconst selectedItems = quickPick.selectedItems;\n\t\t\t\tif (selectedItems.length === 1) {\n\t\t\t\t\tconst commandId = selectedItems[0].id!;\n\t\t\t\t\tconst remoteExtension = this.remoteExtensionMetadata.find(\n\t\t\t\t\t\t(value) =>\n\t\t\t\t\t\t\tExtensionIdentifier.equals(value.id, commandId),\n\t\t\t\t\t);\n\t\t\t\t\tif (remoteExtension) {\n\t\t\t\t\t\tquickPick.items = [];\n\t\t\t\t\t\tquickPick.busy = true;\n\t\t\t\t\t\tquickPick.placeholder = nls.localize(\n\t\t\t\t\t\t\t\"remote.startActions.installingExtension\",\n\t\t\t\t\t\t\t\"Installing extension... \",\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tawait this.installExtension(remoteExtension.id);\n\t\t\t\t\t\tquickPick.hide();\n\t\t\t\t\t\tawait this.runRemoteStartCommand(\n\t\t\t\t\t\t\tremoteExtension.id,\n\t\t\t\t\t\t\tremoteExtension.startCommand,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\t\t\tWorkbenchActionExecutedEvent,\n\t\t\t\t\t\t\tWorkbenchActionExecutedClassification\n\t\t\t\t\t\t>(\"workbenchActionExecuted\", {\n\t\t\t\t\t\t\tid: commandId,\n\t\t\t\t\t\t\tfrom: \"remote indicator\",\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.commandService.executeCommand(commandId);\n\t\t\t\t\t\tquickPick.hide();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tdisposables.add(\n\t\t\tEvent.once(quickPick.onDidTriggerItemButton)(async (e) => {\n\t\t\t\tconst remoteExtension = this.remoteExtensionMetadata.find(\n\t\t\t\t\t(value) => ExtensionIdentifier.equals(value.id, e.item.id),\n\t\t\t\t);\n\t\t\t\tif (remoteExtension) {\n\t\t\t\t\tawait this.openerService.open(\n\t\t\t\t\t\tURI.parse(remoteExtension.helpLink),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// refresh the items when actions change\n\t\tdisposables.add(\n\t\t\tthis.legacyIndicatorMenu.onDidChange(\n\t\t\t\t() => (quickPick.items = computeItems()),\n\t\t\t),\n\t\t);\n\t\tdisposables.add(\n\t\t\tthis.remoteIndicatorMenu.onDidChange(\n\t\t\t\t() => (quickPick.items = computeItems()),\n\t\t\t),\n\t\t);\n\n\t\tdisposables.add(quickPick.onDidHide(() => disposables.dispose()));\n\n\t\tif (!this.remoteMetadataInitialized) {\n\t\t\tquickPick.busy = true;\n\t\t\tthis._register(\n\t\t\t\tthis.onDidChangeEntries(() => {\n\t\t\t\t\t// If quick pick is open, update the quick pick items after initialization.\n\t\t\t\t\tquickPick.busy = false;\n\t\t\t\t\tquickPick.items = computeItems();\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\tquickPick.show();\n\t}\n}\n\nRegistry.as<IConfigurationRegistry>(\n\tConfigurationExtensions.Configuration,\n).registerConfiguration({\n\t...workbenchConfigurationNodeBase,\n\tproperties: {\n\t\t\"workbench.remoteIndicator.showExtensionRecommendations\": {\n\t\t\ttype: \"boolean\",\n\t\t\tmarkdownDescription: nls.localize(\n\t\t\t\t\"remote.showExtensionRecommendations\",\n\t\t\t\t\"When enabled, remote extensions recommendations will be shown in the Remote Indicator menu.\",\n\t\t\t),\n\t\t\tdefault: true,\n\t\t},\n\t},\n});\n"],
  "mappings": "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",
  "names": []
}
