{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/remote/browser/remoteStartEntry.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { IWorkbenchContribution } from '../../../common/contributions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IProductService } from '../../../../platform/product/common/productService.js';\nimport { Action2, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { IExtensionManagementService } from '../../../../platform/extensionManagement/common/extensionManagement.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { ExtensionIdentifier } from '../../../../platform/extensions/common/extensions.js';\nimport { IWorkbenchExtensionEnablementService } from '../../../services/extensionManagement/common/extensionManagement.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { WorkbenchActionExecutedClassification, WorkbenchActionExecutedEvent } from '../../../../base/common/actions.js';\n\nexport const showStartEntryInWeb = new RawContextKey<boolean>('showRemoteStartEntryInWeb', false);\nexport class RemoteStartEntry extends Disposable implements IWorkbenchContribution {\n\n\tprivate static readonly REMOTE_WEB_START_ENTRY_ACTIONS_COMMAND_ID = 'workbench.action.remote.showWebStartEntryActions';\n\n\tprivate readonly remoteExtensionId: string;\n\tprivate readonly startCommand: string;\n\n\tconstructor(\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IWorkbenchExtensionEnablementService private readonly extensionEnablementService: IWorkbenchExtensionEnablementService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService) {\n\n\t\tsuper();\n\n\t\tconst remoteExtensionTips = this.productService.remoteExtensionTips?.['tunnel'];\n\t\tthis.startCommand = remoteExtensionTips?.startEntry?.startCommand ?? '';\n\t\tthis.remoteExtensionId = remoteExtensionTips?.extensionId ?? '';\n\n\t\tthis._init();\n\t\tthis.registerActions();\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerActions(): void {\n\t\tconst category = nls.localize2('remote.category', \"Remote\");\n\n\t\t// Show Remote Start Action\n\t\tconst startEntry = this;\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: RemoteStartEntry.REMOTE_WEB_START_ENTRY_ACTIONS_COMMAND_ID,\n\t\t\t\t\tcategory,\n\t\t\t\t\ttitle: nls.localize2('remote.showWebStartEntryActions', \"Show Remote Start Entry for web\"),\n\t\t\t\t\tf1: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tasync run(): Promise<void> {\n\t\t\t\tawait startEntry.showWebRemoteStartActions();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.extensionEnablementService.onEnablementChanged(async (result) => {\n\n\t\t\tfor (const ext of result) {\n\t\t\t\tif (ExtensionIdentifier.equals(this.remoteExtensionId, ext.identifier.id)) {\n\t\t\t\t\tif (this.extensionEnablementService.isEnabled(ext)) {\n\t\t\t\t\t\tshowStartEntryInWeb.bindTo(this.contextKeyService).set(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tshowStartEntryInWeb.bindTo(this.contextKeyService).set(false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate async _init(): Promise<void> {\n\n\t\t// Check if installed and enabled\n\t\tconst installed = (await this.extensionManagementService.getInstalled()).find(value => ExtensionIdentifier.equals(value.identifier.id, this.remoteExtensionId));\n\t\tif (installed) {\n\t\t\tif (this.extensionEnablementService.isEnabled(installed)) {\n\t\t\t\tshowStartEntryInWeb.bindTo(this.contextKeyService).set(true);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async showWebRemoteStartActions() {\n\t\tthis.commandService.executeCommand(this.startCommand);\n\t\tthis.telemetryService.publicLog2<WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification>('workbenchActionExecuted', {\n\t\t\tid: this.startCommand,\n\t\t\tfrom: 'remote start entry'\n\t\t});\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,YAAY,SAAS;AACrB,SAAS,kBAAkB;AAC3B,SAAS,8BAA8B;AACvC,SAAS,uBAAuB;AAChC,SAAS,uBAAuB;AAChC,SAAS,SAAS,uBAAuB;AACzC,SAAS,mCAAmC;AAC5C,SAAS,yBAAyB;AAClC,SAAS,2BAA2B;AACpC,SAAS,4CAA4C;AACrD,SAAS,oBAAoB,qBAAqB;AAClD,SAAS,uCAAuC,oCAAoC;AAE7E,MAAM,sBAAsB,IAAI,cAAuB,6BAA6B,KAAK;AACzF,IAAM,mBAAN,cAA+B,WAA6C;AAAA,EAOlF,YACmC,gBACA,gBACY,4BACS,4BACnB,kBACC,mBAAuC;AAE5E,UAAM;AAP4B;AACA;AACY;AACS;AACnB;AACC;AAIrC,UAAM,sBAAsB,KAAK,eAAe,sBAAsB,QAAQ;AAC9E,SAAK,eAAe,qBAAqB,YAAY,gBAAgB;AACrE,SAAK,oBAAoB,qBAAqB,eAAe;AAE7D,SAAK,MAAM;AACX,SAAK,gBAAgB;AACrB,SAAK,kBAAkB;AAAA,EACxB;AAAA,EA3CD,OAmBmF;AAAA;AAAA;AAAA,EAElF,OAAwB,4CAA4C;AAAA,EAEnD;AAAA,EACA;AAAA,EAqBT,kBAAwB;AAC/B,UAAM,WAAW,IAAI,UAAU,mBAAmB,QAAQ;AAG1D,UAAM,aAAa;AACnB,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI,iBAAiB;AAAA,UACrB;AAAA,UACA,OAAO,IAAI,UAAU,mCAAmC,iCAAiC;AAAA,UACzF,IAAI;AAAA,QACL,CAAC;AAAA,MACF;AAAA,MAEA,MAAM,MAAqB;AAC1B,cAAM,WAAW,0BAA0B;AAAA,MAC5C;AAAA,IACD,CAAC,CAAC;AAAA,EACH;AAAA,EAEQ,oBAA0B;AACjC,SAAK,UAAU,KAAK,2BAA2B,oBAAoB,OAAO,WAAW;AAEpF,iBAAW,OAAO,QAAQ;AACzB,YAAI,oBAAoB,OAAO,KAAK,mBAAmB,IAAI,WAAW,EAAE,GAAG;AAC1E,cAAI,KAAK,2BAA2B,UAAU,GAAG,GAAG;AACnD,gCAAoB,OAAO,KAAK,iBAAiB,EAAE,IAAI,IAAI;AAAA,UAC5D,OAAO;AACN,gCAAoB,OAAO,KAAK,iBAAiB,EAAE,IAAI,KAAK;AAAA,UAC7D;AAAA,QACD;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAAA,EACH;AAAA,EAEA,MAAc,QAAuB;AAGpC,UAAM,aAAa,MAAM,KAAK,2BAA2B,aAAa,GAAG,KAAK,WAAS,oBAAoB,OAAO,MAAM,WAAW,IAAI,KAAK,iBAAiB,CAAC;AAC9J,QAAI,WAAW;AACd,UAAI,KAAK,2BAA2B,UAAU,SAAS,GAAG;AACzD,4BAAoB,OAAO,KAAK,iBAAiB,EAAE,IAAI,IAAI;AAAA,MAC5D;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAc,4BAA4B;AACzC,SAAK,eAAe,eAAe,KAAK,YAAY;AACpD,SAAK,iBAAiB,WAAgF,2BAA2B;AAAA,MAChI,IAAI,KAAK;AAAA,MACT,MAAM;AAAA,IACP,CAAC;AAAA,EACF;AACD;AAhFa,mBAAN;AAAA,EAQJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAbU;",
  "names": []
}
