{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/remote/browser/remote.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/remoteViewlet.css\";\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport type { IListVirtualDelegate } from \"../../../../base/browser/ui/list/list.js\";\nimport type {\n\tIAsyncDataSource,\n\tITreeNode,\n\tITreeRenderer,\n} from \"../../../../base/browser/ui/tree/tree.js\";\nimport { mainWindow } from \"../../../../base/browser/window.js\";\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport Severity from \"../../../../base/common/severity.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { isStringArray } from \"../../../../base/common/types.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextMenuService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport { IDialogService } from \"../../../../platform/dialogs/common/dialogs.js\";\nimport type { IExtensionDescription } from \"../../../../platform/extensions/common/extensions.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport { SyncDescriptor } from \"../../../../platform/instantiation/common/descriptors.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { WorkbenchAsyncDataTree } from \"../../../../platform/list/browser/listService.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport {\n\ttype IProgress,\n\tIProgressService,\n\ttype IProgressStep,\n\tProgressLocation,\n} from \"../../../../platform/progress/common/progress.js\";\nimport { IQuickInputService } from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\tPersistentConnectionEventType,\n\ttype ReconnectionWaitEvent,\n} from \"../../../../platform/remote/common/remoteAgentConnection.js\";\nimport { getRemoteName } from \"../../../../platform/remote/common/remoteHosts.js\";\nimport { IStorageService } from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport { getVirtualWorkspaceLocation } from \"../../../../platform/workspace/common/virtualWorkspace.js\";\nimport { IWorkspaceContextService } from \"../../../../platform/workspace/common/workspace.js\";\nimport { ReloadWindowAction } from \"../../../browser/actions/windowActions.js\";\nimport {\n\ttype IViewPaneOptions,\n\tViewPane,\n} from \"../../../browser/parts/views/viewPane.js\";\nimport { FilterViewPaneContainer } from \"../../../browser/parts/views/viewsViewlet.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport {\n\tExtensions,\n\ttype IViewContainersRegistry,\n\ttype IViewDescriptor,\n\tIViewDescriptorService,\n\ttype IViewsRegistry,\n\tViewContainerLocation,\n} from \"../../../common/views.js\";\nimport { IWorkbenchEnvironmentService } from \"../../../services/environment/common/environmentService.js\";\nimport {\n\tIExtensionService,\n\tisProposedApiEnabled,\n} from \"../../../services/extensions/common/extensions.js\";\nimport type { IExtensionPointUser } from \"../../../services/extensions/common/extensionsRegistry.js\";\nimport { IWorkbenchLayoutService } from \"../../../services/layout/browser/layoutService.js\";\nimport { IRemoteAgentService } from \"../../../services/remote/common/remoteAgentService.js\";\nimport {\n\ttype HelpInformation,\n\tIRemoteExplorerService,\n} from \"../../../services/remote/common/remoteExplorerService.js\";\nimport { ITimerService } from \"../../../services/timer/browser/timerService.js\";\nimport { IWalkthroughsService } from \"../../welcomeGettingStarted/browser/gettingStartedService.js\";\nimport { SwitchRemoteViewItem } from \"./explorerViewItems.js\";\nimport { VIEWLET_ID } from \"./remoteExplorer.js\";\nimport * as icons from \"./remoteIcons.js\";\n\ninterface IViewModel {\n\tonDidChangeHelpInformation: Event<void>;\n\thelpInformation: HelpInformation[];\n}\n\nclass HelpTreeVirtualDelegate implements IListVirtualDelegate<IHelpItem> {\n\tgetHeight(element: IHelpItem): number {\n\t\treturn 22;\n\t}\n\n\tgetTemplateId(element: IHelpItem): string {\n\t\treturn \"HelpItemTemplate\";\n\t}\n}\n\ninterface IHelpItemTemplateData {\n\tparent: HTMLElement;\n\ticon: HTMLElement;\n}\n\nclass HelpTreeRenderer\n\timplements\n\t\tITreeRenderer<HelpModel | IHelpItem, IHelpItem, IHelpItemTemplateData>\n{\n\ttemplateId = \"HelpItemTemplate\";\n\n\trenderTemplate(container: HTMLElement): IHelpItemTemplateData {\n\t\tcontainer.classList.add(\"remote-help-tree-node-item\");\n\t\tconst icon = dom.append(\n\t\t\tcontainer,\n\t\t\tdom.$(\".remote-help-tree-node-item-icon\"),\n\t\t);\n\t\tconst parent = container;\n\t\treturn { parent, icon };\n\t}\n\n\trenderElement(\n\t\telement: ITreeNode<IHelpItem, IHelpItem>,\n\t\tindex: number,\n\t\ttemplateData: IHelpItemTemplateData,\n\t\theight: number | undefined,\n\t): void {\n\t\tconst container = templateData.parent;\n\t\tdom.append(container, templateData.icon);\n\t\ttemplateData.icon.classList.add(...element.element.iconClasses);\n\t\tconst labelContainer = dom.append(container, dom.$(\".help-item-label\"));\n\t\tlabelContainer.innerText = element.element.label;\n\t}\n\n\tdisposeTemplate(templateData: IHelpItemTemplateData): void {}\n}\n\nclass HelpDataSource implements IAsyncDataSource<HelpModel, IHelpItem> {\n\thasChildren(element: HelpModel) {\n\t\treturn element instanceof HelpModel;\n\t}\n\n\tgetChildren(element: HelpModel) {\n\t\tif (element instanceof HelpModel && element.items) {\n\t\t\treturn element.items;\n\t\t}\n\n\t\treturn [];\n\t}\n}\ninterface IHelpItem {\n\ticon: ThemeIcon;\n\ticonClasses: string[];\n\tlabel: string;\n\tvalues: HelpItemValue[];\n\thandleClick(): Promise<void>;\n}\n\nclass HelpModel {\n\titems: IHelpItem[] | undefined;\n\n\tconstructor(\n\t\tprivate viewModel: IViewModel,\n\t\tprivate openerService: IOpenerService,\n\t\tprivate quickInputService: IQuickInputService,\n\t\tprivate commandService: ICommandService,\n\t\tprivate remoteExplorerService: IRemoteExplorerService,\n\t\tprivate environmentService: IWorkbenchEnvironmentService,\n\t\tprivate workspaceContextService: IWorkspaceContextService,\n\t\tprivate walkthroughsService: IWalkthroughsService,\n\t) {\n\t\tthis.updateItems();\n\t\tviewModel.onDidChangeHelpInformation(() => this.updateItems());\n\t}\n\n\tprivate createHelpItemValue(\n\t\tinfo: HelpInformation,\n\t\tinfoKey: Exclude<\n\t\t\tkeyof HelpInformation,\n\t\t\t\"extensionDescription\" | \"remoteName\" | \"virtualWorkspace\"\n\t\t>,\n\t) {\n\t\treturn new HelpItemValue(\n\t\t\tthis.commandService,\n\t\t\tthis.walkthroughsService,\n\t\t\tinfo.extensionDescription,\n\t\t\ttypeof info.remoteName === \"string\"\n\t\t\t\t? [info.remoteName]\n\t\t\t\t: info.remoteName,\n\t\t\tinfo.virtualWorkspace,\n\t\t\tinfo[infoKey],\n\t\t);\n\t}\n\n\tprivate updateItems() {\n\t\tconst helpItems: IHelpItem[] = [];\n\n\t\tconst getStarted = this.viewModel.helpInformation.filter(\n\t\t\t(info) => info.getStarted,\n\t\t);\n\t\tif (getStarted.length) {\n\t\t\tconst helpItemValues = getStarted.map((info: HelpInformation) =>\n\t\t\t\tthis.createHelpItemValue(info, \"getStarted\"),\n\t\t\t);\n\t\t\tconst getStartedHelpItem =\n\t\t\t\tthis.items?.find(\n\t\t\t\t\t(item) => item.icon === icons.getStartedIcon,\n\t\t\t\t) ??\n\t\t\t\tnew GetStartedHelpItem(\n\t\t\t\t\ticons.getStartedIcon,\n\t\t\t\t\tnls.localize(\"remote.help.getStarted\", \"Get Started\"),\n\t\t\t\t\thelpItemValues,\n\t\t\t\t\tthis.quickInputService,\n\t\t\t\t\tthis.environmentService,\n\t\t\t\t\tthis.openerService,\n\t\t\t\t\tthis.remoteExplorerService,\n\t\t\t\t\tthis.workspaceContextService,\n\t\t\t\t\tthis.commandService,\n\t\t\t\t);\n\t\t\tgetStartedHelpItem.values = helpItemValues;\n\t\t\thelpItems.push(getStartedHelpItem);\n\t\t}\n\n\t\tconst documentation = this.viewModel.helpInformation.filter(\n\t\t\t(info) => info.documentation,\n\t\t);\n\t\tif (documentation.length) {\n\t\t\tconst helpItemValues = documentation.map((info: HelpInformation) =>\n\t\t\t\tthis.createHelpItemValue(info, \"documentation\"),\n\t\t\t);\n\t\t\tconst documentationHelpItem =\n\t\t\t\tthis.items?.find(\n\t\t\t\t\t(item) => item.icon === icons.documentationIcon,\n\t\t\t\t) ??\n\t\t\t\tnew HelpItem(\n\t\t\t\t\ticons.documentationIcon,\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\"remote.help.documentation\",\n\t\t\t\t\t\t\"Read Documentation\",\n\t\t\t\t\t),\n\t\t\t\t\thelpItemValues,\n\t\t\t\t\tthis.quickInputService,\n\t\t\t\t\tthis.environmentService,\n\t\t\t\t\tthis.openerService,\n\t\t\t\t\tthis.remoteExplorerService,\n\t\t\t\t\tthis.workspaceContextService,\n\t\t\t\t);\n\t\t\tdocumentationHelpItem.values = helpItemValues;\n\t\t\thelpItems.push(documentationHelpItem);\n\t\t}\n\n\t\tconst issues = this.viewModel.helpInformation.filter(\n\t\t\t(info) => info.issues,\n\t\t);\n\t\tif (issues.length) {\n\t\t\tconst helpItemValues = issues.map((info: HelpInformation) =>\n\t\t\t\tthis.createHelpItemValue(info, \"issues\"),\n\t\t\t);\n\t\t\tconst reviewIssuesHelpItem =\n\t\t\t\tthis.items?.find(\n\t\t\t\t\t(item) => item.icon === icons.reviewIssuesIcon,\n\t\t\t\t) ??\n\t\t\t\tnew HelpItem(\n\t\t\t\t\ticons.reviewIssuesIcon,\n\t\t\t\t\tnls.localize(\"remote.help.issues\", \"Review Issues\"),\n\t\t\t\t\thelpItemValues,\n\t\t\t\t\tthis.quickInputService,\n\t\t\t\t\tthis.environmentService,\n\t\t\t\t\tthis.openerService,\n\t\t\t\t\tthis.remoteExplorerService,\n\t\t\t\t\tthis.workspaceContextService,\n\t\t\t\t);\n\t\t\treviewIssuesHelpItem.values = helpItemValues;\n\t\t\thelpItems.push(reviewIssuesHelpItem);\n\t\t}\n\n\t\tif (helpItems.length) {\n\t\t\tconst helpItemValues = this.viewModel.helpInformation.map((info) =>\n\t\t\t\tthis.createHelpItemValue(info, \"reportIssue\"),\n\t\t\t);\n\t\t\tconst issueReporterItem =\n\t\t\t\tthis.items?.find(\n\t\t\t\t\t(item) => item.icon === icons.reportIssuesIcon,\n\t\t\t\t) ??\n\t\t\t\tnew IssueReporterItem(\n\t\t\t\t\ticons.reportIssuesIcon,\n\t\t\t\t\tnls.localize(\"remote.help.report\", \"Report Issue\"),\n\t\t\t\t\thelpItemValues,\n\t\t\t\t\tthis.quickInputService,\n\t\t\t\t\tthis.environmentService,\n\t\t\t\t\tthis.commandService,\n\t\t\t\t\tthis.openerService,\n\t\t\t\t\tthis.remoteExplorerService,\n\t\t\t\t\tthis.workspaceContextService,\n\t\t\t\t);\n\t\t\tissueReporterItem.values = helpItemValues;\n\t\t\thelpItems.push(issueReporterItem);\n\t\t}\n\n\t\tif (helpItems.length) {\n\t\t\tthis.items = helpItems;\n\t\t}\n\t}\n}\n\nclass HelpItemValue {\n\tprivate _url: string | undefined;\n\tprivate _description: string | undefined;\n\n\tconstructor(\n\t\tprivate commandService: ICommandService,\n\t\tprivate walkthroughService: IWalkthroughsService,\n\t\tpublic extensionDescription: IExtensionDescription,\n\t\tpublic readonly remoteAuthority: string[] | undefined,\n\t\tpublic readonly virtualWorkspace: string | undefined,\n\t\tprivate urlOrCommandOrId?: string | { id: string },\n\t) {}\n\n\tget description(): Promise<string | undefined> {\n\t\treturn this.getUrl().then(() => this._description);\n\t}\n\n\tget url(): Promise<string> {\n\t\treturn this.getUrl();\n\t}\n\n\tprivate async getUrl(): Promise<string> {\n\t\tif (this._url === undefined) {\n\t\t\tif (typeof this.urlOrCommandOrId === \"string\") {\n\t\t\t\tconst url = URI.parse(this.urlOrCommandOrId);\n\t\t\t\tif (url.authority) {\n\t\t\t\t\tthis._url = this.urlOrCommandOrId;\n\t\t\t\t} else {\n\t\t\t\t\tconst urlCommand: Promise<string | undefined> =\n\t\t\t\t\t\tthis.commandService\n\t\t\t\t\t\t\t.executeCommand(this.urlOrCommandOrId)\n\t\t\t\t\t\t\t.then((result) => {\n\t\t\t\t\t\t\t\t// if executing this command times out, cache its value whenever it eventually resolves\n\t\t\t\t\t\t\t\tthis._url = result;\n\t\t\t\t\t\t\t\treturn this._url;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t// We must be defensive. The command may never return, meaning that no help at all is ever shown!\n\t\t\t\t\tconst emptyString: Promise<string> = new Promise(\n\t\t\t\t\t\t(resolve) => setTimeout(() => resolve(\"\"), 500),\n\t\t\t\t\t);\n\t\t\t\t\tthis._url = await Promise.race([urlCommand, emptyString]);\n\t\t\t\t}\n\t\t\t} else if (this.urlOrCommandOrId?.id) {\n\t\t\t\ttry {\n\t\t\t\t\tconst walkthroughId = `${this.extensionDescription.id}#${this.urlOrCommandOrId.id}`;\n\t\t\t\t\tconst walkthrough =\n\t\t\t\t\t\tawait this.walkthroughService.getWalkthrough(\n\t\t\t\t\t\t\twalkthroughId,\n\t\t\t\t\t\t);\n\t\t\t\t\tthis._description = walkthrough.title;\n\t\t\t\t\tthis._url = walkthroughId;\n\t\t\t\t} catch {}\n\t\t\t}\n\t\t}\n\t\tif (this._url === undefined) {\n\t\t\tthis._url = \"\";\n\t\t}\n\t\treturn this._url;\n\t}\n}\n\nabstract class HelpItemBase implements IHelpItem {\n\tpublic iconClasses: string[] = [];\n\tconstructor(\n\t\tpublic icon: ThemeIcon,\n\t\tpublic label: string,\n\t\tpublic values: HelpItemValue[],\n\t\tprivate quickInputService: IQuickInputService,\n\t\tprivate environmentService: IWorkbenchEnvironmentService,\n\t\tprivate remoteExplorerService: IRemoteExplorerService,\n\t\tprivate workspaceContextService: IWorkspaceContextService,\n\t) {\n\t\tthis.iconClasses.push(...ThemeIcon.asClassNameArray(icon));\n\t\tthis.iconClasses.push(\"remote-help-tree-node-item-icon\");\n\t}\n\n\tprotected async getActions(): Promise<\n\t\t{\n\t\t\tlabel: string;\n\t\t\turl: string;\n\t\t\tdescription: string;\n\t\t\textensionDescription: IExtensionDescription;\n\t\t}[]\n\t> {\n\t\treturn (\n\t\t\tawait Promise.all(\n\t\t\t\tthis.values.map(async (value) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tlabel:\n\t\t\t\t\t\t\tvalue.extensionDescription.displayName ||\n\t\t\t\t\t\t\tvalue.extensionDescription.identifier.value,\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t(await value.description) ?? (await value.url),\n\t\t\t\t\t\turl: await value.url,\n\t\t\t\t\t\textensionDescription: value.extensionDescription,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t)\n\t\t).filter((item) => item.description);\n\t}\n\n\tasync handleClick() {\n\t\tconst remoteAuthority = this.environmentService.remoteAuthority;\n\t\tif (remoteAuthority) {\n\t\t\tfor (\n\t\t\t\tlet i = 0;\n\t\t\t\ti < this.remoteExplorerService.targetType.length;\n\t\t\t\ti++\n\t\t\t) {\n\t\t\t\tif (\n\t\t\t\t\tremoteAuthority.startsWith(\n\t\t\t\t\t\tthis.remoteExplorerService.targetType[i],\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tfor (const value of this.values) {\n\t\t\t\t\t\tif (value.remoteAuthority) {\n\t\t\t\t\t\t\tfor (const authority of value.remoteAuthority) {\n\t\t\t\t\t\t\t\tif (remoteAuthority.startsWith(authority)) {\n\t\t\t\t\t\t\t\t\tawait this.takeAction(\n\t\t\t\t\t\t\t\t\t\tvalue.extensionDescription,\n\t\t\t\t\t\t\t\t\t\tawait value.url,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst virtualWorkspace = getVirtualWorkspaceLocation(\n\t\t\t\tthis.workspaceContextService.getWorkspace(),\n\t\t\t)?.scheme;\n\t\t\tif (virtualWorkspace) {\n\t\t\t\tfor (\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\ti < this.remoteExplorerService.targetType.length;\n\t\t\t\t\ti++\n\t\t\t\t) {\n\t\t\t\t\tfor (const value of this.values) {\n\t\t\t\t\t\tif (value.virtualWorkspace && value.remoteAuthority) {\n\t\t\t\t\t\t\tfor (const authority of value.remoteAuthority) {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tthis.remoteExplorerService.targetType[\n\t\t\t\t\t\t\t\t\t\ti\n\t\t\t\t\t\t\t\t\t].startsWith(authority) &&\n\t\t\t\t\t\t\t\t\tvirtualWorkspace.startsWith(\n\t\t\t\t\t\t\t\t\t\tvalue.virtualWorkspace,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tawait this.takeAction(\n\t\t\t\t\t\t\t\t\t\tvalue.extensionDescription,\n\t\t\t\t\t\t\t\t\t\tawait value.url,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.values.length > 1) {\n\t\t\tconst actions = await this.getActions();\n\n\t\t\tif (actions.length) {\n\t\t\t\tconst action = await this.quickInputService.pick(actions, {\n\t\t\t\t\tplaceHolder: nls.localize(\n\t\t\t\t\t\t\"pickRemoteExtension\",\n\t\t\t\t\t\t\"Select url to open\",\n\t\t\t\t\t),\n\t\t\t\t});\n\t\t\t\tif (action) {\n\t\t\t\t\tawait this.takeAction(\n\t\t\t\t\t\taction.extensionDescription,\n\t\t\t\t\t\taction.url,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tawait this.takeAction(\n\t\t\t\tthis.values[0].extensionDescription,\n\t\t\t\tawait this.values[0].url,\n\t\t\t);\n\t\t}\n\t}\n\n\tprotected abstract takeAction(\n\t\textensionDescription: IExtensionDescription,\n\t\turl?: string,\n\t): Promise<void>;\n}\n\nclass GetStartedHelpItem extends HelpItemBase {\n\tconstructor(\n\t\ticon: ThemeIcon,\n\t\tlabel: string,\n\t\tvalues: HelpItemValue[],\n\t\tquickInputService: IQuickInputService,\n\t\tenvironmentService: IWorkbenchEnvironmentService,\n\t\tprivate openerService: IOpenerService,\n\t\tremoteExplorerService: IRemoteExplorerService,\n\t\tworkspaceContextService: IWorkspaceContextService,\n\t\tprivate commandService: ICommandService,\n\t) {\n\t\tsuper(\n\t\t\ticon,\n\t\t\tlabel,\n\t\t\tvalues,\n\t\t\tquickInputService,\n\t\t\tenvironmentService,\n\t\t\tremoteExplorerService,\n\t\t\tworkspaceContextService,\n\t\t);\n\t}\n\n\tprotected async takeAction(\n\t\textensionDescription: IExtensionDescription,\n\t\turlOrWalkthroughId: string,\n\t): Promise<void> {\n\t\tif (\n\t\t\t[Schemas.http, Schemas.https].includes(\n\t\t\t\tURI.parse(urlOrWalkthroughId).scheme,\n\t\t\t)\n\t\t) {\n\t\t\tthis.openerService.open(urlOrWalkthroughId, {\n\t\t\t\tallowCommands: true,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tthis.commandService.executeCommand(\n\t\t\t\"workbench.action.openWalkthrough\",\n\t\t\turlOrWalkthroughId,\n\t\t);\n\t}\n}\n\nclass HelpItem extends HelpItemBase {\n\tconstructor(\n\t\ticon: ThemeIcon,\n\t\tlabel: string,\n\t\tvalues: HelpItemValue[],\n\t\tquickInputService: IQuickInputService,\n\t\tenvironmentService: IWorkbenchEnvironmentService,\n\t\tprivate openerService: IOpenerService,\n\t\tremoteExplorerService: IRemoteExplorerService,\n\t\tworkspaceContextService: IWorkspaceContextService,\n\t) {\n\t\tsuper(\n\t\t\ticon,\n\t\t\tlabel,\n\t\t\tvalues,\n\t\t\tquickInputService,\n\t\t\tenvironmentService,\n\t\t\tremoteExplorerService,\n\t\t\tworkspaceContextService,\n\t\t);\n\t}\n\n\tprotected async takeAction(\n\t\textensionDescription: IExtensionDescription,\n\t\turl: string,\n\t): Promise<void> {\n\t\tawait this.openerService.open(URI.parse(url), { allowCommands: true });\n\t}\n}\n\nclass IssueReporterItem extends HelpItemBase {\n\tconstructor(\n\t\ticon: ThemeIcon,\n\t\tlabel: string,\n\t\tvalues: HelpItemValue[],\n\t\tquickInputService: IQuickInputService,\n\t\tenvironmentService: IWorkbenchEnvironmentService,\n\t\tprivate commandService: ICommandService,\n\t\tprivate openerService: IOpenerService,\n\t\tremoteExplorerService: IRemoteExplorerService,\n\t\tworkspaceContextService: IWorkspaceContextService,\n\t) {\n\t\tsuper(\n\t\t\ticon,\n\t\t\tlabel,\n\t\t\tvalues,\n\t\t\tquickInputService,\n\t\t\tenvironmentService,\n\t\t\tremoteExplorerService,\n\t\t\tworkspaceContextService,\n\t\t);\n\t}\n\n\tprotected override async getActions(): Promise<\n\t\t{\n\t\t\tlabel: string;\n\t\t\tdescription: string;\n\t\t\turl: string;\n\t\t\textensionDescription: IExtensionDescription;\n\t\t}[]\n\t> {\n\t\treturn Promise.all(\n\t\t\tthis.values.map(async (value) => {\n\t\t\t\treturn {\n\t\t\t\t\tlabel:\n\t\t\t\t\t\tvalue.extensionDescription.displayName ||\n\t\t\t\t\t\tvalue.extensionDescription.identifier.value,\n\t\t\t\t\tdescription: \"\",\n\t\t\t\t\turl: await value.url,\n\t\t\t\t\textensionDescription: value.extensionDescription,\n\t\t\t\t};\n\t\t\t}),\n\t\t);\n\t}\n\n\tprotected async takeAction(\n\t\textensionDescription: IExtensionDescription,\n\t\turl: string,\n\t): Promise<void> {\n\t\tif (url) {\n\t\t\tawait this.openerService.open(URI.parse(url));\n\t\t} else {\n\t\t\tawait this.commandService.executeCommand(\n\t\t\t\t\"workbench.action.openIssueReporter\",\n\t\t\t\t[extensionDescription.identifier.value],\n\t\t\t);\n\t\t}\n\t}\n}\n\nclass HelpPanel extends ViewPane {\n\tstatic readonly ID = \"~remote.helpPanel\";\n\tstatic readonly TITLE = nls.localize2(\"remote.help\", \"Help and feedback\");\n\tprivate tree!: WorkbenchAsyncDataTree<HelpModel, IHelpItem, IHelpItem>;\n\n\tconstructor(\n\t\tprotected viewModel: IViewModel,\n\t\toptions: IViewPaneOptions,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IQuickInputService protected quickInputService: IQuickInputService,\n\t\t@ICommandService protected commandService: ICommandService,\n\t\t@IRemoteExplorerService protected readonly remoteExplorerService: IRemoteExplorerService,\n\t\t@IWorkbenchEnvironmentService protected readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IWalkthroughsService private readonly walkthroughsService: IWalkthroughsService,\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService, hoverService);\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tcontainer.classList.add(\"remote-help\");\n\t\tconst treeContainer = document.createElement(\"div\");\n\t\ttreeContainer.classList.add(\"remote-help-content\");\n\t\tcontainer.appendChild(treeContainer);\n\n\t\tthis.tree = <WorkbenchAsyncDataTree<HelpModel, IHelpItem, IHelpItem>>(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tWorkbenchAsyncDataTree,\n\t\t\t\t\"RemoteHelp\",\n\t\t\t\ttreeContainer,\n\t\t\t\tnew HelpTreeVirtualDelegate(),\n\t\t\t\t[new HelpTreeRenderer()],\n\t\t\t\tnew HelpDataSource(),\n\t\t\t\t{\n\t\t\t\t\taccessibilityProvider: {\n\t\t\t\t\t\tgetAriaLabel: (item: HelpItemBase) => {\n\t\t\t\t\t\t\treturn item.label;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgetWidgetAriaLabel: () =>\n\t\t\t\t\t\t\tnls.localize(\"remotehelp\", \"Remote Help\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t)\n\t\t);\n\n\t\tconst model = new HelpModel(\n\t\t\tthis.viewModel,\n\t\t\tthis.openerService,\n\t\t\tthis.quickInputService,\n\t\t\tthis.commandService,\n\t\t\tthis.remoteExplorerService,\n\t\t\tthis.environmentService,\n\t\t\tthis.workspaceContextService,\n\t\t\tthis.walkthroughsService,\n\t\t);\n\n\t\tthis.tree.setInput(model);\n\n\t\tthis._register(\n\t\t\tEvent.debounce(\n\t\t\t\tthis.tree.onDidOpen,\n\t\t\t\t(last, event) => event,\n\t\t\t\t75,\n\t\t\t\ttrue,\n\t\t\t)((e) => {\n\t\t\t\te.element?.handleClick();\n\t\t\t}),\n\t\t);\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\t\tthis.tree.layout(height, width);\n\t}\n}\n\nclass HelpPanelDescriptor implements IViewDescriptor {\n\treadonly id = HelpPanel.ID;\n\treadonly name = HelpPanel.TITLE;\n\treadonly ctorDescriptor: SyncDescriptor<HelpPanel>;\n\treadonly canToggleVisibility = true;\n\treadonly hideByDefault = false;\n\treadonly group = \"help@50\";\n\treadonly order = -10;\n\n\tconstructor(viewModel: IViewModel) {\n\t\tthis.ctorDescriptor = new SyncDescriptor(HelpPanel, [viewModel]);\n\t}\n}\n\nclass RemoteViewPaneContainer\n\textends FilterViewPaneContainer\n\timplements IViewModel\n{\n\tprivate helpPanelDescriptor = new HelpPanelDescriptor(this);\n\thelpInformation: HelpInformation[] = [];\n\tprivate _onDidChangeHelpInformation = new Emitter<void>();\n\tpublic onDidChangeHelpInformation: Event<void> =\n\t\tthis._onDidChangeHelpInformation.event;\n\tprivate hasRegisteredHelpView = false;\n\tprivate remoteSwitcher: SwitchRemoteViewItem | undefined;\n\n\tconstructor(\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IRemoteExplorerService private readonly remoteExplorerService: IRemoteExplorerService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService\n\t) {\n\t\tsuper(VIEWLET_ID, remoteExplorerService.onDidChangeTargetType, configurationService, layoutService, telemetryService, storageService, instantiationService, themeService, contextMenuService, extensionService, contextService, viewDescriptorService);\n\t\tthis.addConstantViewDescriptors([this.helpPanelDescriptor]);\n\t\tthis._register(this.remoteSwitcher = this.instantiationService.createInstance(SwitchRemoteViewItem));\n\t\tthis.remoteExplorerService.onDidChangeHelpInformation(extensions => {\n\t\t\tthis._setHelpInformation(extensions);\n\t\t});\n\n\t\tthis._setHelpInformation(this.remoteExplorerService.helpInformation);\n\t\tconst viewsRegistry = Registry.as<IViewsRegistry>(Extensions.ViewsRegistry);\n\n\t\tthis.remoteSwitcher.createOptionItems(viewsRegistry.getViews(this.viewContainer));\n\t\tthis._register(viewsRegistry.onViewsRegistered(e => {\n\t\t\tconst remoteViews: IViewDescriptor[] = [];\n\t\t\tfor (const view of e) {\n\t\t\t\tif (view.viewContainer.id === VIEWLET_ID) {\n\t\t\t\t\tremoteViews.push(...view.views);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (remoteViews.length > 0) {\n\t\t\t\tthis.remoteSwitcher!.createOptionItems(remoteViews);\n\t\t\t}\n\t\t}));\n\t\tthis._register(viewsRegistry.onViewsDeregistered(e => {\n\t\t\tif (e.viewContainer.id === VIEWLET_ID) {\n\t\t\t\tthis.remoteSwitcher!.removeOptionItems(e.views);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _setHelpInformation(\n\t\textensions: readonly IExtensionPointUser<HelpInformation>[],\n\t) {\n\t\tconst helpInformation: HelpInformation[] = [];\n\t\tfor (const extension of extensions) {\n\t\t\tthis._handleRemoteInfoExtensionPoint(extension, helpInformation);\n\t\t}\n\n\t\tthis.helpInformation = helpInformation;\n\t\tthis._onDidChangeHelpInformation.fire();\n\n\t\tconst viewsRegistry = Registry.as<IViewsRegistry>(\n\t\t\tExtensions.ViewsRegistry,\n\t\t);\n\t\tif (this.helpInformation.length && !this.hasRegisteredHelpView) {\n\t\t\tconst view = viewsRegistry.getView(this.helpPanelDescriptor.id);\n\t\t\tif (!view) {\n\t\t\t\tviewsRegistry.registerViews(\n\t\t\t\t\t[this.helpPanelDescriptor],\n\t\t\t\t\tthis.viewContainer,\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.hasRegisteredHelpView = true;\n\t\t} else if (this.hasRegisteredHelpView) {\n\t\t\tviewsRegistry.deregisterViews(\n\t\t\t\t[this.helpPanelDescriptor],\n\t\t\t\tthis.viewContainer,\n\t\t\t);\n\t\t\tthis.hasRegisteredHelpView = false;\n\t\t}\n\t}\n\n\tprivate _handleRemoteInfoExtensionPoint(\n\t\textension: IExtensionPointUser<HelpInformation>,\n\t\thelpInformation: HelpInformation[],\n\t) {\n\t\tif (!isProposedApiEnabled(extension.description, \"contribRemoteHelp\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\t!extension.value.documentation &&\n\t\t\t!extension.value.getStarted &&\n\t\t\t!extension.value.issues\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\thelpInformation.push({\n\t\t\textensionDescription: extension.description,\n\t\t\tgetStarted: extension.value.getStarted,\n\t\t\tdocumentation: extension.value.documentation,\n\t\t\treportIssue: extension.value.reportIssue,\n\t\t\tissues: extension.value.issues,\n\t\t\tremoteName: extension.value.remoteName,\n\t\t\tvirtualWorkspace: extension.value.virtualWorkspace,\n\t\t});\n\t}\n\n\tprotected getFilterOn(viewDescriptor: IViewDescriptor): string | undefined {\n\t\treturn isStringArray(viewDescriptor.remoteAuthority)\n\t\t\t? viewDescriptor.remoteAuthority[0]\n\t\t\t: viewDescriptor.remoteAuthority;\n\t}\n\n\tprotected setFilter(viewDescriptor: IViewDescriptor): void {\n\t\tthis.remoteExplorerService.targetType = isStringArray(\n\t\t\tviewDescriptor.remoteAuthority,\n\t\t)\n\t\t\t? viewDescriptor.remoteAuthority\n\t\t\t: [viewDescriptor.remoteAuthority!];\n\t}\n\n\tgetTitle(): string {\n\t\tconst title = nls.localize(\"remote.explorer\", \"Remote Explorer\");\n\t\treturn title;\n\t}\n}\n\nRegistry.as<IViewContainersRegistry>(\n\tExtensions.ViewContainersRegistry,\n).registerViewContainer(\n\t{\n\t\tid: VIEWLET_ID,\n\t\ttitle: nls.localize2(\"remote.explorer\", \"Remote Explorer\"),\n\t\tctorDescriptor: new SyncDescriptor(RemoteViewPaneContainer),\n\t\thideIfEmpty: true,\n\t\tviewOrderDelegate: {\n\t\t\tgetOrder: (group?: string) => {\n\t\t\t\tif (!group) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet matches = /^targets@(\\d+)$/.exec(group);\n\t\t\t\tif (matches) {\n\t\t\t\t\treturn -1000;\n\t\t\t\t}\n\n\t\t\t\tmatches = /^details(@(\\d+))?$/.exec(group);\n\n\t\t\t\tif (matches) {\n\t\t\t\t\treturn -500 + Number(matches[2]);\n\t\t\t\t}\n\n\t\t\t\tmatches = /^help(@(\\d+))?$/.exec(group);\n\t\t\t\tif (matches) {\n\t\t\t\t\treturn -10;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t},\n\t\t},\n\t\ticon: icons.remoteExplorerViewIcon,\n\t\torder: 4,\n\t},\n\tViewContainerLocation.Sidebar,\n);\n\nexport class RemoteMarkers implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IRemoteAgentService remoteAgentService: IRemoteAgentService,\n\t\t@ITimerService timerService: ITimerService,\n\t) {\n\t\tremoteAgentService.getEnvironment().then((remoteEnv) => {\n\t\t\tif (remoteEnv) {\n\t\t\t\ttimerService.setPerformanceMarks(\"server\", remoteEnv.marks);\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass VisibleProgress {\n\tpublic readonly location: ProgressLocation;\n\tprivate _isDisposed: boolean;\n\tprivate _lastReport: string | null;\n\tprivate _currentProgressPromiseResolve: (() => void) | null;\n\tprivate _currentProgress: IProgress<IProgressStep> | null;\n\tprivate _currentTimer: ReconnectionTimer | null;\n\n\tpublic get lastReport(): string | null {\n\t\treturn this._lastReport;\n\t}\n\n\tconstructor(\n\t\tprogressService: IProgressService,\n\t\tlocation: ProgressLocation,\n\t\tinitialReport: string | null,\n\t\tbuttons: string[],\n\t\tonDidCancel: (\n\t\t\tchoice: number | undefined,\n\t\t\tlastReport: string | null,\n\t\t) => void,\n\t) {\n\t\tthis.location = location;\n\t\tthis._isDisposed = false;\n\t\tthis._lastReport = initialReport;\n\t\tthis._currentProgressPromiseResolve = null;\n\t\tthis._currentProgress = null;\n\t\tthis._currentTimer = null;\n\n\t\tconst promise = new Promise<void>(\n\t\t\t(resolve) => (this._currentProgressPromiseResolve = resolve),\n\t\t);\n\n\t\tprogressService.withProgress(\n\t\t\t{ location: location, buttons: buttons },\n\t\t\t(progress) => {\n\t\t\t\tif (!this._isDisposed) {\n\t\t\t\t\tthis._currentProgress = progress;\n\t\t\t\t}\n\t\t\t\treturn promise;\n\t\t\t},\n\t\t\t(choice) => onDidCancel(choice, this._lastReport),\n\t\t);\n\n\t\tif (this._lastReport) {\n\t\t\tthis.report();\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._isDisposed = true;\n\t\tif (this._currentProgressPromiseResolve) {\n\t\t\tthis._currentProgressPromiseResolve();\n\t\t\tthis._currentProgressPromiseResolve = null;\n\t\t}\n\t\tthis._currentProgress = null;\n\t\tif (this._currentTimer) {\n\t\t\tthis._currentTimer.dispose();\n\t\t\tthis._currentTimer = null;\n\t\t}\n\t}\n\n\tpublic report(message?: string) {\n\t\tif (message) {\n\t\t\tthis._lastReport = message;\n\t\t}\n\n\t\tif (this._lastReport && this._currentProgress) {\n\t\t\tthis._currentProgress.report({ message: this._lastReport });\n\t\t}\n\t}\n\n\tpublic startTimer(completionTime: number): void {\n\t\tthis.stopTimer();\n\t\tthis._currentTimer = new ReconnectionTimer(this, completionTime);\n\t}\n\n\tpublic stopTimer(): void {\n\t\tif (this._currentTimer) {\n\t\t\tthis._currentTimer.dispose();\n\t\t\tthis._currentTimer = null;\n\t\t}\n\t}\n}\n\nclass ReconnectionTimer implements IDisposable {\n\tprivate readonly _parent: VisibleProgress;\n\tprivate readonly _completionTime: number;\n\tprivate readonly _renderInterval: IDisposable;\n\n\tconstructor(parent: VisibleProgress, completionTime: number) {\n\t\tthis._parent = parent;\n\t\tthis._completionTime = completionTime;\n\t\tthis._renderInterval = dom.disposableWindowInterval(\n\t\t\tmainWindow,\n\t\t\t() => this._render(),\n\t\t\t1000,\n\t\t);\n\t\tthis._render();\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._renderInterval.dispose();\n\t}\n\n\tprivate _render() {\n\t\tconst remainingTimeMs = this._completionTime - Date.now();\n\t\tif (remainingTimeMs < 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst remainingTime = Math.ceil(remainingTimeMs / 1000);\n\t\tif (remainingTime === 1) {\n\t\t\tthis._parent.report(\n\t\t\t\tnls.localize(\n\t\t\t\t\t\"reconnectionWaitOne\",\n\t\t\t\t\t\"Attempting to reconnect in {0} second...\",\n\t\t\t\t\tremainingTime,\n\t\t\t\t),\n\t\t\t);\n\t\t} else {\n\t\t\tthis._parent.report(\n\t\t\t\tnls.localize(\n\t\t\t\t\t\"reconnectionWaitMany\",\n\t\t\t\t\t\"Attempting to reconnect in {0} seconds...\",\n\t\t\t\t\tremainingTime,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n}\n\n/**\n * The time when a prompt is shown to the user\n */\nconst DISCONNECT_PROMPT_TIME = 40 * 1000; // 40 seconds\n\nexport class RemoteAgentConnectionStatusListener\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tprivate _reloadWindowShown = false;\n\n\tconstructor(\n\t\t@IRemoteAgentService remoteAgentService: IRemoteAgentService,\n\t\t@IProgressService progressService: IProgressService,\n\t\t@IDialogService dialogService: IDialogService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IQuickInputService quickInputService: IQuickInputService,\n\t\t@ILogService logService: ILogService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t) {\n\t\tsuper();\n\t\tconst connection = remoteAgentService.getConnection();\n\t\tif (connection) {\n\t\t\tlet quickInputVisible = false;\n\t\t\tthis._register(\n\t\t\t\tquickInputService.onShow(() => (quickInputVisible = true)),\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tquickInputService.onHide(() => (quickInputVisible = false)),\n\t\t\t);\n\n\t\t\tlet visibleProgress: VisibleProgress | null = null;\n\t\t\tlet reconnectWaitEvent: ReconnectionWaitEvent | null = null;\n\t\t\tlet disposableListener: IDisposable | null = null;\n\n\t\t\tfunction showProgress(\n\t\t\t\tlocation:\n\t\t\t\t\t| ProgressLocation.Dialog\n\t\t\t\t\t| ProgressLocation.Notification\n\t\t\t\t\t| null,\n\t\t\t\tbuttons: { label: string; callback: () => void }[],\n\t\t\t\tinitialReport: string | null = null,\n\t\t\t): VisibleProgress {\n\t\t\t\tif (visibleProgress) {\n\t\t\t\t\tvisibleProgress.dispose();\n\t\t\t\t\tvisibleProgress = null;\n\t\t\t\t}\n\n\t\t\t\tif (!location) {\n\t\t\t\t\tlocation = quickInputVisible\n\t\t\t\t\t\t? ProgressLocation.Notification\n\t\t\t\t\t\t: ProgressLocation.Dialog;\n\t\t\t\t}\n\n\t\t\t\treturn new VisibleProgress(\n\t\t\t\t\tprogressService,\n\t\t\t\t\tlocation,\n\t\t\t\t\tinitialReport,\n\t\t\t\t\tbuttons.map((button) => button.label),\n\t\t\t\t\t(choice, lastReport) => {\n\t\t\t\t\t\t// Handle choice from dialog\n\t\t\t\t\t\tif (typeof choice !== \"undefined\" && buttons[choice]) {\n\t\t\t\t\t\t\tbuttons[choice].callback();\n\t\t\t\t\t\t} else if (location === ProgressLocation.Dialog) {\n\t\t\t\t\t\t\tvisibleProgress = showProgress(\n\t\t\t\t\t\t\t\tProgressLocation.Notification,\n\t\t\t\t\t\t\t\tbuttons,\n\t\t\t\t\t\t\t\tlastReport,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\thideProgress();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tfunction hideProgress() {\n\t\t\t\tif (visibleProgress) {\n\t\t\t\t\tvisibleProgress.dispose();\n\t\t\t\t\tvisibleProgress = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet reconnectionToken = \"\";\n\t\t\tlet lastIncomingDataTime = 0;\n\t\t\tlet reconnectionAttempts = 0;\n\n\t\t\tconst reconnectButton = {\n\t\t\t\tlabel: nls.localize(\"reconnectNow\", \"Reconnect Now\"),\n\t\t\t\tcallback: () => {\n\t\t\t\t\treconnectWaitEvent?.skipWait();\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tconst reloadButton = {\n\t\t\t\tlabel: nls.localize(\"reloadWindow\", \"Reload Window\"),\n\t\t\t\tcallback: () => {\n\t\t\t\t\ttype ReconnectReloadClassification = {\n\t\t\t\t\t\towner: \"alexdima\";\n\t\t\t\t\t\tcomment: \"The reload button in the builtin permanent reconnection failure dialog was pressed\";\n\t\t\t\t\t\tremoteName: {\n\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\t\t\t\tcomment: \"The name of the resolver.\";\n\t\t\t\t\t\t};\n\t\t\t\t\t\treconnectionToken: {\n\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\t\t\t\tcomment: \"The identifier of the connection.\";\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmillisSinceLastIncomingData: {\n\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\t\t\t\tcomment: \"Elapsed time (in ms) since data was last received.\";\n\t\t\t\t\t\t};\n\t\t\t\t\t\tattempt: {\n\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\t\t\t\tcomment: \"The reconnection attempt counter.\";\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t\ttype ReconnectReloadEvent = {\n\t\t\t\t\t\tremoteName: string | undefined;\n\t\t\t\t\t\treconnectionToken: string;\n\t\t\t\t\t\tmillisSinceLastIncomingData: number;\n\t\t\t\t\t\tattempt: number;\n\t\t\t\t\t};\n\t\t\t\t\ttelemetryService.publicLog2<\n\t\t\t\t\t\tReconnectReloadEvent,\n\t\t\t\t\t\tReconnectReloadClassification\n\t\t\t\t\t>(\"remoteReconnectionReload\", {\n\t\t\t\t\t\tremoteName: getRemoteName(\n\t\t\t\t\t\t\tenvironmentService.remoteAuthority,\n\t\t\t\t\t\t),\n\t\t\t\t\t\treconnectionToken: reconnectionToken,\n\t\t\t\t\t\tmillisSinceLastIncomingData:\n\t\t\t\t\t\t\tDate.now() - lastIncomingDataTime,\n\t\t\t\t\t\tattempt: reconnectionAttempts,\n\t\t\t\t\t});\n\n\t\t\t\t\tcommandService.executeCommand(ReloadWindowAction.ID);\n\t\t\t\t},\n\t\t\t};\n\n\t\t\t// Possible state transitions:\n\t\t\t// ConnectionGain      -> ConnectionLost\n\t\t\t// ConnectionLost      -> ReconnectionWait, ReconnectionRunning\n\t\t\t// ReconnectionWait    -> ReconnectionRunning\n\t\t\t// ReconnectionRunning -> ConnectionGain, ReconnectionPermanentFailure\n\n\t\t\tconnection.onDidStateChange((e) => {\n\t\t\t\tvisibleProgress?.stopTimer();\n\n\t\t\t\tif (disposableListener) {\n\t\t\t\t\tdisposableListener.dispose();\n\t\t\t\t\tdisposableListener = null;\n\t\t\t\t}\n\t\t\t\tswitch (e.type) {\n\t\t\t\t\tcase PersistentConnectionEventType.ConnectionLost:\n\t\t\t\t\t\treconnectionToken = e.reconnectionToken;\n\t\t\t\t\t\tlastIncomingDataTime =\n\t\t\t\t\t\t\tDate.now() - e.millisSinceLastIncomingData;\n\t\t\t\t\t\treconnectionAttempts = 0;\n\n\t\t\t\t\t\ttype RemoteConnectionLostClassification = {\n\t\t\t\t\t\t\towner: \"alexdima\";\n\t\t\t\t\t\t\tcomment: \"The remote connection state is now `ConnectionLost`\";\n\t\t\t\t\t\t\tremoteName: {\n\t\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\t\t\t\t\tcomment: \"The name of the resolver.\";\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treconnectionToken: {\n\t\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\t\t\t\t\tcomment: \"The identifier of the connection.\";\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttype RemoteConnectionLostEvent = {\n\t\t\t\t\t\t\tremoteName: string | undefined;\n\t\t\t\t\t\t\treconnectionToken: string;\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttelemetryService.publicLog2<\n\t\t\t\t\t\t\tRemoteConnectionLostEvent,\n\t\t\t\t\t\t\tRemoteConnectionLostClassification\n\t\t\t\t\t\t>(\"remoteConnectionLost\", {\n\t\t\t\t\t\t\tremoteName: getRemoteName(\n\t\t\t\t\t\t\t\tenvironmentService.remoteAuthority,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\treconnectionToken: e.reconnectionToken,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tvisibleProgress ||\n\t\t\t\t\t\t\te.millisSinceLastIncomingData >\n\t\t\t\t\t\t\t\tDISCONNECT_PROMPT_TIME\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (!visibleProgress) {\n\t\t\t\t\t\t\t\tvisibleProgress = showProgress(null, [\n\t\t\t\t\t\t\t\t\treconnectButton,\n\t\t\t\t\t\t\t\t\treloadButton,\n\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvisibleProgress.report(\n\t\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\t\"connectionLost\",\n\t\t\t\t\t\t\t\t\t\"Connection Lost\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PersistentConnectionEventType.ReconnectionWait:\n\t\t\t\t\t\tif (visibleProgress) {\n\t\t\t\t\t\t\treconnectWaitEvent = e;\n\t\t\t\t\t\t\tvisibleProgress = showProgress(null, [\n\t\t\t\t\t\t\t\treconnectButton,\n\t\t\t\t\t\t\t\treloadButton,\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tvisibleProgress.startTimer(\n\t\t\t\t\t\t\t\tDate.now() + 1000 * e.durationSeconds,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PersistentConnectionEventType.ReconnectionRunning:\n\t\t\t\t\t\treconnectionToken = e.reconnectionToken;\n\t\t\t\t\t\tlastIncomingDataTime =\n\t\t\t\t\t\t\tDate.now() - e.millisSinceLastIncomingData;\n\t\t\t\t\t\treconnectionAttempts = e.attempt;\n\n\t\t\t\t\t\ttype RemoteReconnectionRunningClassification = {\n\t\t\t\t\t\t\towner: \"alexdima\";\n\t\t\t\t\t\t\tcomment: \"The remote connection state is now `ReconnectionRunning`\";\n\t\t\t\t\t\t\tremoteName: {\n\t\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\t\t\t\t\tcomment: \"The name of the resolver.\";\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treconnectionToken: {\n\t\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\t\t\t\t\tcomment: \"The identifier of the connection.\";\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tmillisSinceLastIncomingData: {\n\t\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\t\t\t\t\tcomment: \"Elapsed time (in ms) since data was last received.\";\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tattempt: {\n\t\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\t\t\t\t\tcomment: \"The reconnection attempt counter.\";\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttype RemoteReconnectionRunningEvent = {\n\t\t\t\t\t\t\tremoteName: string | undefined;\n\t\t\t\t\t\t\treconnectionToken: string;\n\t\t\t\t\t\t\tmillisSinceLastIncomingData: number;\n\t\t\t\t\t\t\tattempt: number;\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttelemetryService.publicLog2<\n\t\t\t\t\t\t\tRemoteReconnectionRunningEvent,\n\t\t\t\t\t\t\tRemoteReconnectionRunningClassification\n\t\t\t\t\t\t>(\"remoteReconnectionRunning\", {\n\t\t\t\t\t\t\tremoteName: getRemoteName(\n\t\t\t\t\t\t\t\tenvironmentService.remoteAuthority,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\treconnectionToken: e.reconnectionToken,\n\t\t\t\t\t\t\tmillisSinceLastIncomingData:\n\t\t\t\t\t\t\t\te.millisSinceLastIncomingData,\n\t\t\t\t\t\t\tattempt: e.attempt,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tvisibleProgress ||\n\t\t\t\t\t\t\te.millisSinceLastIncomingData >\n\t\t\t\t\t\t\t\tDISCONNECT_PROMPT_TIME\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tvisibleProgress = showProgress(null, [\n\t\t\t\t\t\t\t\treloadButton,\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tvisibleProgress.report(\n\t\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\t\"reconnectionRunning\",\n\t\t\t\t\t\t\t\t\t\"Disconnected. Attempting to reconnect...\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Register to listen for quick input is opened\n\t\t\t\t\t\t\tdisposableListener = quickInputService.onShow(\n\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\t// Need to move from dialog if being shown and user needs to type in a prompt\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tvisibleProgress &&\n\t\t\t\t\t\t\t\t\t\tvisibleProgress.location ===\n\t\t\t\t\t\t\t\t\t\t\tProgressLocation.Dialog\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tvisibleProgress = showProgress(\n\t\t\t\t\t\t\t\t\t\t\tProgressLocation.Notification,\n\t\t\t\t\t\t\t\t\t\t\t[reloadButton],\n\t\t\t\t\t\t\t\t\t\t\tvisibleProgress.lastReport,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PersistentConnectionEventType.ReconnectionPermanentFailure:\n\t\t\t\t\t\treconnectionToken = e.reconnectionToken;\n\t\t\t\t\t\tlastIncomingDataTime =\n\t\t\t\t\t\t\tDate.now() - e.millisSinceLastIncomingData;\n\t\t\t\t\t\treconnectionAttempts = e.attempt;\n\n\t\t\t\t\t\ttype RemoteReconnectionPermanentFailureClassification =\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\towner: \"alexdima\";\n\t\t\t\t\t\t\t\tcomment: \"The remote connection state is now `ReconnectionPermanentFailure`\";\n\t\t\t\t\t\t\t\tremoteName: {\n\t\t\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\t\t\t\t\t\tcomment: \"The name of the resolver.\";\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\treconnectionToken: {\n\t\t\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\t\t\t\t\t\tcomment: \"The identifier of the connection.\";\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tmillisSinceLastIncomingData: {\n\t\t\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\t\t\t\t\t\tcomment: \"Elapsed time (in ms) since data was last received.\";\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tattempt: {\n\t\t\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\t\t\t\t\t\tcomment: \"The reconnection attempt counter.\";\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\thandled: {\n\t\t\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\t\t\t\t\t\tcomment: \"The error was handled by the resolver.\";\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\ttype RemoteReconnectionPermanentFailureEvent = {\n\t\t\t\t\t\t\tremoteName: string | undefined;\n\t\t\t\t\t\t\treconnectionToken: string;\n\t\t\t\t\t\t\tmillisSinceLastIncomingData: number;\n\t\t\t\t\t\t\tattempt: number;\n\t\t\t\t\t\t\thandled: boolean;\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttelemetryService.publicLog2<\n\t\t\t\t\t\t\tRemoteReconnectionPermanentFailureEvent,\n\t\t\t\t\t\t\tRemoteReconnectionPermanentFailureClassification\n\t\t\t\t\t\t>(\"remoteReconnectionPermanentFailure\", {\n\t\t\t\t\t\t\tremoteName: getRemoteName(\n\t\t\t\t\t\t\t\tenvironmentService.remoteAuthority,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\treconnectionToken: e.reconnectionToken,\n\t\t\t\t\t\t\tmillisSinceLastIncomingData:\n\t\t\t\t\t\t\t\te.millisSinceLastIncomingData,\n\t\t\t\t\t\t\tattempt: e.attempt,\n\t\t\t\t\t\t\thandled: e.handled,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\thideProgress();\n\n\t\t\t\t\t\tif (e.handled) {\n\t\t\t\t\t\t\tlogService.info(\n\t\t\t\t\t\t\t\t`Error handled: Not showing a notification for the error.`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t`Error handled: Not showing a notification for the error.`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (!this._reloadWindowShown) {\n\t\t\t\t\t\t\tthis._reloadWindowShown = true;\n\t\t\t\t\t\t\tdialogService\n\t\t\t\t\t\t\t\t.confirm({\n\t\t\t\t\t\t\t\t\ttype: Severity.Error,\n\t\t\t\t\t\t\t\t\tmessage: nls.localize(\n\t\t\t\t\t\t\t\t\t\t\"reconnectionPermanentFailure\",\n\t\t\t\t\t\t\t\t\t\t\"Cannot reconnect. Please reload the window.\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tprimaryButton: nls.localize(\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tkey: \"reloadWindow.dialog\",\n\t\t\t\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\"&&Reload Window\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.then((result) => {\n\t\t\t\t\t\t\t\t\tif (result.confirmed) {\n\t\t\t\t\t\t\t\t\t\tcommandService.executeCommand(\n\t\t\t\t\t\t\t\t\t\t\tReloadWindowAction.ID,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PersistentConnectionEventType.ConnectionGain:\n\t\t\t\t\t\treconnectionToken = e.reconnectionToken;\n\t\t\t\t\t\tlastIncomingDataTime =\n\t\t\t\t\t\t\tDate.now() - e.millisSinceLastIncomingData;\n\t\t\t\t\t\treconnectionAttempts = e.attempt;\n\n\t\t\t\t\t\ttype RemoteConnectionGainClassification = {\n\t\t\t\t\t\t\towner: \"alexdima\";\n\t\t\t\t\t\t\tcomment: \"The remote connection state is now `ConnectionGain`\";\n\t\t\t\t\t\t\tremoteName: {\n\t\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\t\t\t\t\tcomment: \"The name of the resolver.\";\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treconnectionToken: {\n\t\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\t\t\t\t\tcomment: \"The identifier of the connection.\";\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tmillisSinceLastIncomingData: {\n\t\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\t\t\t\t\tcomment: \"Elapsed time (in ms) since data was last received.\";\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tattempt: {\n\t\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\t\tpurpose: \"PerformanceAndHealth\";\n\t\t\t\t\t\t\t\tcomment: \"The reconnection attempt counter.\";\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttype RemoteConnectionGainEvent = {\n\t\t\t\t\t\t\tremoteName: string | undefined;\n\t\t\t\t\t\t\treconnectionToken: string;\n\t\t\t\t\t\t\tmillisSinceLastIncomingData: number;\n\t\t\t\t\t\t\tattempt: number;\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttelemetryService.publicLog2<\n\t\t\t\t\t\t\tRemoteConnectionGainEvent,\n\t\t\t\t\t\t\tRemoteConnectionGainClassification\n\t\t\t\t\t\t>(\"remoteConnectionGain\", {\n\t\t\t\t\t\t\tremoteName: getRemoteName(\n\t\t\t\t\t\t\t\tenvironmentService.remoteAuthority,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\treconnectionToken: e.reconnectionToken,\n\t\t\t\t\t\t\tmillisSinceLastIncomingData:\n\t\t\t\t\t\t\t\te.millisSinceLastIncomingData,\n\t\t\t\t\t\t\tattempt: e.attempt,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\thideProgress();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["showProgress", "hideProgress"]
}
