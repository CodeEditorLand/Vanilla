{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/remote/browser/explorerViewItems.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\nimport { IRemoteExplorerService, REMOTE_EXPLORER_TYPE_KEY } from '../../../services/remote/common/remoteExplorerService.js';\nimport { ISelectOptionItem } from '../../../../base/browser/ui/selectBox/selectBox.js';\nimport { IViewDescriptor } from '../../../common/views.js';\nimport { isStringArray } from '../../../../base/common/types.js';\nimport { IWorkbenchEnvironmentService } from '../../../services/environment/common/environmentService.js';\nimport { IStorageService, StorageScope } from '../../../../platform/storage/common/storage.js';\nimport { ContextKeyExpr, IContextKey, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { Action2, MenuId, MenuRegistry, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { VIEWLET_ID } from './remoteExplorer.js';\nimport { getVirtualWorkspaceLocation } from '../../../../platform/workspace/common/virtualWorkspace.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nimport { Disposable, DisposableMap } from '../../../../base/common/lifecycle.js';\n\ninterface IRemoteSelectItem extends ISelectOptionItem {\n\tauthority: string[];\n\tvirtualWorkspace?: string;\n\tdispose(): void;\n}\n\nexport const SELECTED_REMOTE_IN_EXPLORER = new RawContextKey<string>('selectedRemoteInExplorer', '');\n\nexport class SwitchRemoteViewItem extends Disposable {\n\tprivate switchRemoteMenu: MenuId;\n\tprivate completedRemotes: DisposableMap<string, IRemoteSelectItem> = this._register(new DisposableMap());\n\tprivate readonly selectedRemoteContext: IContextKey<string>;\n\n\tconstructor(\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IRemoteExplorerService private remoteExplorerService: IRemoteExplorerService,\n\t\t@IWorkbenchEnvironmentService private environmentService: IWorkbenchEnvironmentService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService\n\t) {\n\t\tsuper();\n\t\tthis.selectedRemoteContext = SELECTED_REMOTE_IN_EXPLORER.bindTo(contextKeyService);\n\n\t\tthis.switchRemoteMenu = MenuId.for('workbench.remote.menu.switchRemoteMenu');\n\t\tthis._register(MenuRegistry.appendMenuItem(MenuId.ViewContainerTitle, {\n\t\t\tsubmenu: this.switchRemoteMenu,\n\t\t\ttitle: nls.localize('switchRemote.label', \"Switch Remote\"),\n\t\t\tgroup: 'navigation',\n\t\t\twhen: ContextKeyExpr.equals('viewContainer', VIEWLET_ID),\n\t\t\torder: 1,\n\t\t\tisSelection: true\n\t\t}));\n\t\tthis._register(remoteExplorerService.onDidChangeTargetType(e => {\n\t\t\tthis.select(e);\n\t\t}));\n\t}\n\n\tpublic setSelectionForConnection(): boolean {\n\t\tlet isSetForConnection = false;\n\t\tif (this.completedRemotes.size > 0) {\n\t\t\tlet authority: string[] | undefined;\n\t\t\tconst remoteAuthority = this.environmentService.remoteAuthority;\n\t\t\tlet virtualWorkspace: string | undefined;\n\t\t\tif (!remoteAuthority) {\n\t\t\t\tvirtualWorkspace = getVirtualWorkspaceLocation(this.workspaceContextService.getWorkspace())?.scheme;\n\t\t\t}\n\t\t\tisSetForConnection = true;\n\t\t\tconst explorerType: string[] | undefined = remoteAuthority ? [remoteAuthority.split('+')[0]]\n\t\t\t\t: (virtualWorkspace ? [virtualWorkspace]\n\t\t\t\t\t: (this.storageService.get(REMOTE_EXPLORER_TYPE_KEY, StorageScope.WORKSPACE)?.split(',') ?? this.storageService.get(REMOTE_EXPLORER_TYPE_KEY, StorageScope.PROFILE)?.split(',')));\n\t\t\tif (explorerType !== undefined) {\n\t\t\t\tauthority = this.getAuthorityForExplorerType(explorerType);\n\t\t\t}\n\t\t\tif (authority) {\n\t\t\t\tthis.select(authority);\n\t\t\t}\n\t\t}\n\t\treturn isSetForConnection;\n\t}\n\n\tprivate select(authority: string[]) {\n\t\tthis.selectedRemoteContext.set(authority[0]);\n\t\tthis.remoteExplorerService.targetType = authority;\n\t}\n\n\tprivate getAuthorityForExplorerType(explorerType: string[]): string[] | undefined {\n\t\tlet authority: string[] | undefined;\n\t\tfor (const option of this.completedRemotes) {\n\t\t\tfor (const authorityOption of option[1].authority) {\n\t\t\t\tfor (const explorerOption of explorerType) {\n\t\t\t\t\tif (authorityOption === explorerOption) {\n\t\t\t\t\t\tauthority = option[1].authority;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (option[1].virtualWorkspace === explorerOption) {\n\t\t\t\t\t\tauthority = option[1].authority;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn authority;\n\t}\n\n\tpublic removeOptionItems(views: IViewDescriptor[]) {\n\t\tfor (const view of views) {\n\t\t\tif (view.group && view.group.startsWith('targets') && view.remoteAuthority && (!view.when || this.contextKeyService.contextMatchesRules(view.when))) {\n\t\t\t\tconst authority = isStringArray(view.remoteAuthority) ? view.remoteAuthority : [view.remoteAuthority];\n\t\t\t\tthis.completedRemotes.deleteAndDispose(authority[0]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic createOptionItems(views: IViewDescriptor[]) {\n\t\tconst startingCount = this.completedRemotes.size;\n\t\tfor (const view of views) {\n\t\t\tif (view.group && view.group.startsWith('targets') && view.remoteAuthority && (!view.when || this.contextKeyService.contextMatchesRules(view.when))) {\n\t\t\t\tconst text = view.name;\n\t\t\t\tconst authority = isStringArray(view.remoteAuthority) ? view.remoteAuthority : [view.remoteAuthority];\n\t\t\t\tif (this.completedRemotes.has(authority[0])) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst thisCapture = this;\n\t\t\t\tconst action = registerAction2(class extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: `workbench.action.remoteExplorer.show.${authority[0]}`,\n\t\t\t\t\t\t\ttitle: text,\n\t\t\t\t\t\t\ttoggled: SELECTED_REMOTE_IN_EXPLORER.isEqualTo(authority[0]),\n\t\t\t\t\t\t\tmenu: {\n\t\t\t\t\t\t\t\tid: thisCapture.switchRemoteMenu\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tasync run(): Promise<void> {\n\t\t\t\t\t\tthisCapture.select(authority);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.completedRemotes.set(authority[0], { text: text.value, authority, virtualWorkspace: view.virtualWorkspace, dispose: () => action.dispose() });\n\t\t\t}\n\t\t}\n\t\tif (this.completedRemotes.size > startingCount) {\n\t\t\tthis.setSelectionForConnection();\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
