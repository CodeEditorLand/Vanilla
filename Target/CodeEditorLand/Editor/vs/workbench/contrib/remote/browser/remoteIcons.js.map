{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/remote/browser/remoteIcons.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from \"../../../../nls.js\";\n\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { registerIcon } from \"../../../../platform/theme/common/iconRegistry.js\";\n\nexport const getStartedIcon = registerIcon(\n\t\"remote-explorer-get-started\",\n\tCodicon.star,\n\tnls.localize(\n\t\t\"getStartedIcon\",\n\t\t\"Getting started icon in the remote explorer view.\",\n\t),\n);\nexport const documentationIcon = registerIcon(\n\t\"remote-explorer-documentation\",\n\tCodicon.book,\n\tnls.localize(\n\t\t\"documentationIcon\",\n\t\t\"Documentation icon in the remote explorer view.\",\n\t),\n);\nexport const feedbackIcon = registerIcon(\n\t\"remote-explorer-feedback\",\n\tCodicon.twitter,\n\tnls.localize(\"feedbackIcon\", \"Feedback icon in the remote explorer view.\"),\n);\nexport const reviewIssuesIcon = registerIcon(\n\t\"remote-explorer-review-issues\",\n\tCodicon.issues,\n\tnls.localize(\n\t\t\"reviewIssuesIcon\",\n\t\t\"Review issue icon in the remote explorer view.\",\n\t),\n);\nexport const reportIssuesIcon = registerIcon(\n\t\"remote-explorer-report-issues\",\n\tCodicon.comment,\n\tnls.localize(\n\t\t\"reportIssuesIcon\",\n\t\t\"Report issue icon in the remote explorer view.\",\n\t),\n);\nexport const remoteExplorerViewIcon = registerIcon(\n\t\"remote-explorer-view-icon\",\n\tCodicon.remoteExplorer,\n\tnls.localize(\n\t\t\"remoteExplorerViewIcon\",\n\t\t\"View icon of the remote explorer view.\",\n\t),\n);\n\nexport const portsViewIcon = registerIcon(\n\t\"ports-view-icon\",\n\tCodicon.plug,\n\tnls.localize(\"portsViewIcon\", \"View icon of the remote ports view.\"),\n);\nexport const portIcon = registerIcon(\n\t\"ports-view-icon\",\n\tCodicon.plug,\n\tnls.localize(\"portIcon\", \"Icon representing a remote port.\"),\n);\nexport const privatePortIcon = registerIcon(\n\t\"private-ports-view-icon\",\n\tCodicon.lock,\n\tnls.localize(\"privatePortIcon\", \"Icon representing a private remote port.\"),\n);\n\nexport const forwardPortIcon = registerIcon(\n\t\"ports-forward-icon\",\n\tCodicon.plus,\n\tnls.localize(\"forwardPortIcon\", \"Icon for the forward action.\"),\n);\nexport const stopForwardIcon = registerIcon(\n\t\"ports-stop-forward-icon\",\n\tCodicon.x,\n\tnls.localize(\"stopForwardIcon\", \"Icon for the stop forwarding action.\"),\n);\nexport const openBrowserIcon = registerIcon(\n\t\"ports-open-browser-icon\",\n\tCodicon.globe,\n\tnls.localize(\"openBrowserIcon\", \"Icon for the open browser action.\"),\n);\nexport const openPreviewIcon = registerIcon(\n\t\"ports-open-preview-icon\",\n\tCodicon.openPreview,\n\tnls.localize(\"openPreviewIcon\", \"Icon for the open preview action.\"),\n);\nexport const copyAddressIcon = registerIcon(\n\t\"ports-copy-address-icon\",\n\tCodicon.clippy,\n\tnls.localize(\"copyAddressIcon\", \"Icon for the copy local address action.\"),\n);\nexport const labelPortIcon = registerIcon(\n\t\"ports-label-icon\",\n\tCodicon.tag,\n\tnls.localize(\"labelPortIcon\", \"Icon for the label port action.\"),\n);\nexport const forwardedPortWithoutProcessIcon = registerIcon(\n\t\"ports-forwarded-without-process-icon\",\n\tCodicon.circleOutline,\n\tnls.localize(\n\t\t\"forwardedPortWithoutProcessIcon\",\n\t\t\"Icon for forwarded ports that don't have a running process.\",\n\t),\n);\nexport const forwardedPortWithProcessIcon = registerIcon(\n\t\"ports-forwarded-with-process-icon\",\n\tCodicon.circleFilled,\n\tnls.localize(\n\t\t\"forwardedPortWithProcessIcon\",\n\t\t\"Icon for forwarded ports that do have a running process.\",\n\t),\n);\n"],
  "mappings": "AAKA,YAAY,SAAS;AAErB,SAAS,eAAe;AACxB,SAAS,oBAAoB;AAEtB,MAAM,iBAAiB;AAAA,EAC7B;AAAA,EACA,QAAQ;AAAA,EACR,IAAI;AAAA,IACH;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,oBAAoB;AAAA,EAChC;AAAA,EACA,QAAQ;AAAA,EACR,IAAI;AAAA,IACH;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,eAAe;AAAA,EAC3B;AAAA,EACA,QAAQ;AAAA,EACR,IAAI,SAAS,gBAAgB,4CAA4C;AAC1E;AACO,MAAM,mBAAmB;AAAA,EAC/B;AAAA,EACA,QAAQ;AAAA,EACR,IAAI;AAAA,IACH;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,mBAAmB;AAAA,EAC/B;AAAA,EACA,QAAQ;AAAA,EACR,IAAI;AAAA,IACH;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,yBAAyB;AAAA,EACrC;AAAA,EACA,QAAQ;AAAA,EACR,IAAI;AAAA,IACH;AAAA,IACA;AAAA,EACD;AACD;AAEO,MAAM,gBAAgB;AAAA,EAC5B;AAAA,EACA,QAAQ;AAAA,EACR,IAAI,SAAS,iBAAiB,qCAAqC;AACpE;AACO,MAAM,WAAW;AAAA,EACvB;AAAA,EACA,QAAQ;AAAA,EACR,IAAI,SAAS,YAAY,kCAAkC;AAC5D;AACO,MAAM,kBAAkB;AAAA,EAC9B;AAAA,EACA,QAAQ;AAAA,EACR,IAAI,SAAS,mBAAmB,0CAA0C;AAC3E;AAEO,MAAM,kBAAkB;AAAA,EAC9B;AAAA,EACA,QAAQ;AAAA,EACR,IAAI,SAAS,mBAAmB,8BAA8B;AAC/D;AACO,MAAM,kBAAkB;AAAA,EAC9B;AAAA,EACA,QAAQ;AAAA,EACR,IAAI,SAAS,mBAAmB,sCAAsC;AACvE;AACO,MAAM,kBAAkB;AAAA,EAC9B;AAAA,EACA,QAAQ;AAAA,EACR,IAAI,SAAS,mBAAmB,mCAAmC;AACpE;AACO,MAAM,kBAAkB;AAAA,EAC9B;AAAA,EACA,QAAQ;AAAA,EACR,IAAI,SAAS,mBAAmB,mCAAmC;AACpE;AACO,MAAM,kBAAkB;AAAA,EAC9B;AAAA,EACA,QAAQ;AAAA,EACR,IAAI,SAAS,mBAAmB,yCAAyC;AAC1E;AACO,MAAM,gBAAgB;AAAA,EAC5B;AAAA,EACA,QAAQ;AAAA,EACR,IAAI,SAAS,iBAAiB,iCAAiC;AAChE;AACO,MAAM,kCAAkC;AAAA,EAC9C;AAAA,EACA,QAAQ;AAAA,EACR,IAAI;AAAA,IACH;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,+BAA+B;AAAA,EAC3C;AAAA,EACA,QAAQ;AAAA,EACR,IAAI;AAAA,IACH;AAAA,IACA;AAAA,EACD;AACD;",
  "names": []
}
