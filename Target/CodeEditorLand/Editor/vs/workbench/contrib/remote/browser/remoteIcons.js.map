{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/remote/browser/remoteIcons.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\n\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\n\nexport const getStartedIcon = registerIcon('remote-explorer-get-started', Codicon.star, nls.localize('getStartedIcon', 'Getting started icon in the remote explorer view.'));\nexport const documentationIcon = registerIcon('remote-explorer-documentation', Codicon.book, nls.localize('documentationIcon', 'Documentation icon in the remote explorer view.'));\nexport const feedbackIcon = registerIcon('remote-explorer-feedback', Codicon.twitter, nls.localize('feedbackIcon', 'Feedback icon in the remote explorer view.'));\nexport const reviewIssuesIcon = registerIcon('remote-explorer-review-issues', Codicon.issues, nls.localize('reviewIssuesIcon', 'Review issue icon in the remote explorer view.'));\nexport const reportIssuesIcon = registerIcon('remote-explorer-report-issues', Codicon.comment, nls.localize('reportIssuesIcon', 'Report issue icon in the remote explorer view.'));\nexport const remoteExplorerViewIcon = registerIcon('remote-explorer-view-icon', Codicon.remoteExplorer, nls.localize('remoteExplorerViewIcon', 'View icon of the remote explorer view.'));\n\nexport const portsViewIcon = registerIcon('ports-view-icon', Codicon.plug, nls.localize('portsViewIcon', 'View icon of the remote ports view.'));\nexport const portIcon = registerIcon('ports-view-icon', Codicon.plug, nls.localize('portIcon', 'Icon representing a remote port.'));\nexport const privatePortIcon = registerIcon('private-ports-view-icon', Codicon.lock, nls.localize('privatePortIcon', 'Icon representing a private remote port.'));\n\nexport const forwardPortIcon = registerIcon('ports-forward-icon', Codicon.plus, nls.localize('forwardPortIcon', 'Icon for the forward action.'));\nexport const stopForwardIcon = registerIcon('ports-stop-forward-icon', Codicon.x, nls.localize('stopForwardIcon', 'Icon for the stop forwarding action.'));\nexport const openBrowserIcon = registerIcon('ports-open-browser-icon', Codicon.globe, nls.localize('openBrowserIcon', 'Icon for the open browser action.'));\nexport const openPreviewIcon = registerIcon('ports-open-preview-icon', Codicon.openPreview, nls.localize('openPreviewIcon', 'Icon for the open preview action.'));\nexport const copyAddressIcon = registerIcon('ports-copy-address-icon', Codicon.clippy, nls.localize('copyAddressIcon', 'Icon for the copy local address action.'));\nexport const labelPortIcon = registerIcon('ports-label-icon', Codicon.tag, nls.localize('labelPortIcon', 'Icon for the label port action.'));\nexport const forwardedPortWithoutProcessIcon = registerIcon('ports-forwarded-without-process-icon', Codicon.circleOutline, nls.localize('forwardedPortWithoutProcessIcon', 'Icon for forwarded ports that don\\'t have a running process.'));\nexport const forwardedPortWithProcessIcon = registerIcon('ports-forwarded-with-process-icon', Codicon.circleFilled, nls.localize('forwardedPortWithProcessIcon', 'Icon for forwarded ports that do have a running process.'));\n"],
  "mappings": "AAKA,YAAY,SAAS;AAErB,SAAS,eAAe;AACxB,SAAS,oBAAoB;AAEtB,MAAM,iBAAiB,aAAa,+BAA+B,QAAQ,MAAM,IAAI,SAAS,kBAAkB,mDAAmD,CAAC;AACpK,MAAM,oBAAoB,aAAa,iCAAiC,QAAQ,MAAM,IAAI,SAAS,qBAAqB,iDAAiD,CAAC;AAC1K,MAAM,eAAe,aAAa,4BAA4B,QAAQ,SAAS,IAAI,SAAS,gBAAgB,4CAA4C,CAAC;AACzJ,MAAM,mBAAmB,aAAa,iCAAiC,QAAQ,QAAQ,IAAI,SAAS,oBAAoB,gDAAgD,CAAC;AACzK,MAAM,mBAAmB,aAAa,iCAAiC,QAAQ,SAAS,IAAI,SAAS,oBAAoB,gDAAgD,CAAC;AAC1K,MAAM,yBAAyB,aAAa,6BAA6B,QAAQ,gBAAgB,IAAI,SAAS,0BAA0B,wCAAwC,CAAC;AAEjL,MAAM,gBAAgB,aAAa,mBAAmB,QAAQ,MAAM,IAAI,SAAS,iBAAiB,qCAAqC,CAAC;AACxI,MAAM,WAAW,aAAa,mBAAmB,QAAQ,MAAM,IAAI,SAAS,YAAY,kCAAkC,CAAC;AAC3H,MAAM,kBAAkB,aAAa,2BAA2B,QAAQ,MAAM,IAAI,SAAS,mBAAmB,0CAA0C,CAAC;AAEzJ,MAAM,kBAAkB,aAAa,sBAAsB,QAAQ,MAAM,IAAI,SAAS,mBAAmB,8BAA8B,CAAC;AACxI,MAAM,kBAAkB,aAAa,2BAA2B,QAAQ,GAAG,IAAI,SAAS,mBAAmB,sCAAsC,CAAC;AAClJ,MAAM,kBAAkB,aAAa,2BAA2B,QAAQ,OAAO,IAAI,SAAS,mBAAmB,mCAAmC,CAAC;AACnJ,MAAM,kBAAkB,aAAa,2BAA2B,QAAQ,aAAa,IAAI,SAAS,mBAAmB,mCAAmC,CAAC;AACzJ,MAAM,kBAAkB,aAAa,2BAA2B,QAAQ,QAAQ,IAAI,SAAS,mBAAmB,yCAAyC,CAAC;AAC1J,MAAM,gBAAgB,aAAa,oBAAoB,QAAQ,KAAK,IAAI,SAAS,iBAAiB,iCAAiC,CAAC;AACpI,MAAM,kCAAkC,aAAa,wCAAwC,QAAQ,eAAe,IAAI,SAAS,mCAAmC,6DAA8D,CAAC;AACnO,MAAM,+BAA+B,aAAa,qCAAqC,QAAQ,cAAc,IAAI,SAAS,gCAAgC,0DAA0D,CAAC;",
  "names": []
}
