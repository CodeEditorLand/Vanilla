{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/remote/browser/remote.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\ttype IWorkbenchContributionsRegistry,\n\tExtensions as WorkbenchExtensions,\n\tWorkbenchPhase,\n\tregisterWorkbenchContribution2,\n} from \"../../../common/contributions.js\";\nimport { LifecyclePhase } from \"../../../services/lifecycle/common/lifecycle.js\";\nimport {\n\tRemoteAgentConnectionStatusListener,\n\tRemoteMarkers,\n} from \"./remote.js\";\nimport { InitialRemoteConnectionHealthContribution } from \"./remoteConnectionHealth.js\";\nimport {\n\tAutomaticPortForwarding,\n\tForwardedPortsView,\n\tPortRestore,\n} from \"./remoteExplorer.js\";\nimport { RemoteStatusIndicator } from \"./remoteIndicator.js\";\nimport { ShowCandidateContribution } from \"./showCandidate.js\";\nimport { TunnelFactoryContribution } from \"./tunnelFactory.js\";\n\nconst workbenchContributionsRegistry =\n\tRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench);\nregisterWorkbenchContribution2(\n\tShowCandidateContribution.ID,\n\tShowCandidateContribution,\n\tWorkbenchPhase.BlockRestore,\n);\nregisterWorkbenchContribution2(\n\tTunnelFactoryContribution.ID,\n\tTunnelFactoryContribution,\n\tWorkbenchPhase.BlockRestore,\n);\nworkbenchContributionsRegistry.registerWorkbenchContribution(\n\tRemoteAgentConnectionStatusListener,\n\tLifecyclePhase.Eventually,\n);\nregisterWorkbenchContribution2(\n\tRemoteStatusIndicator.ID,\n\tRemoteStatusIndicator,\n\tWorkbenchPhase.BlockStartup,\n);\nworkbenchContributionsRegistry.registerWorkbenchContribution(\n\tForwardedPortsView,\n\tLifecyclePhase.Restored,\n);\nworkbenchContributionsRegistry.registerWorkbenchContribution(\n\tPortRestore,\n\tLifecyclePhase.Eventually,\n);\nworkbenchContributionsRegistry.registerWorkbenchContribution(\n\tAutomaticPortForwarding,\n\tLifecyclePhase.Eventually,\n);\nworkbenchContributionsRegistry.registerWorkbenchContribution(\n\tRemoteMarkers,\n\tLifecyclePhase.Eventually,\n);\nworkbenchContributionsRegistry.registerWorkbenchContribution(\n\tInitialRemoteConnectionHealthContribution,\n\tLifecyclePhase.Restored,\n);\n"],
  "mappings": "AAKA,SAAS,gBAAgB;AACzB;AAAA,EAEC,cAAc;AAAA,EACd;AAAA,EACA;AAAA,OACM;AACP,SAAS,sBAAsB;AAC/B;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,iDAAiD;AAC1D;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,6BAA6B;AACtC,SAAS,iCAAiC;AAC1C,SAAS,iCAAiC;AAE1C,MAAM,iCACL,SAAS,GAAoC,oBAAoB,SAAS;AAC3E;AAAA,EACC,0BAA0B;AAAA,EAC1B;AAAA,EACA,eAAe;AAChB;AACA;AAAA,EACC,0BAA0B;AAAA,EAC1B;AAAA,EACA,eAAe;AAChB;AACA,+BAA+B;AAAA,EAC9B;AAAA,EACA,eAAe;AAChB;AACA;AAAA,EACC,sBAAsB;AAAA,EACtB;AAAA,EACA,eAAe;AAChB;AACA,+BAA+B;AAAA,EAC9B;AAAA,EACA,eAAe;AAChB;AACA,+BAA+B;AAAA,EAC9B;AAAA,EACA,eAAe;AAChB;AACA,+BAA+B;AAAA,EAC9B;AAAA,EACA,eAAe;AAChB;AACA,+BAA+B;AAAA,EAC9B;AAAA,EACA,eAAe;AAChB;AACA,+BAA+B;AAAA,EAC9B;AAAA,EACA,eAAe;AAChB;",
  "names": []
}
