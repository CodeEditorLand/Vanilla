{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/remote/browser/remote.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWorkbenchContributionsRegistry, WorkbenchPhase, Extensions as WorkbenchExtensions, registerWorkbenchContribution2 } from '../../../common/contributions.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { ShowCandidateContribution } from './showCandidate.js';\nimport { LifecyclePhase } from '../../../services/lifecycle/common/lifecycle.js';\nimport { TunnelFactoryContribution } from './tunnelFactory.js';\nimport { RemoteAgentConnectionStatusListener, RemoteMarkers } from './remote.js';\nimport { RemoteStatusIndicator } from './remoteIndicator.js';\nimport { AutomaticPortForwarding, ForwardedPortsView, PortRestore } from './remoteExplorer.js';\nimport { InitialRemoteConnectionHealthContribution } from './remoteConnectionHealth.js';\n\nconst workbenchContributionsRegistry = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench);\nregisterWorkbenchContribution2(ShowCandidateContribution.ID, ShowCandidateContribution, WorkbenchPhase.BlockRestore);\nregisterWorkbenchContribution2(TunnelFactoryContribution.ID, TunnelFactoryContribution, WorkbenchPhase.BlockRestore);\nworkbenchContributionsRegistry.registerWorkbenchContribution(RemoteAgentConnectionStatusListener, LifecyclePhase.Eventually);\nregisterWorkbenchContribution2(RemoteStatusIndicator.ID, RemoteStatusIndicator, WorkbenchPhase.BlockStartup);\nworkbenchContributionsRegistry.registerWorkbenchContribution(ForwardedPortsView, LifecyclePhase.Restored);\nworkbenchContributionsRegistry.registerWorkbenchContribution(PortRestore, LifecyclePhase.Eventually);\nworkbenchContributionsRegistry.registerWorkbenchContribution(AutomaticPortForwarding, LifecyclePhase.Eventually);\nworkbenchContributionsRegistry.registerWorkbenchContribution(RemoteMarkers, LifecyclePhase.Eventually);\nworkbenchContributionsRegistry.registerWorkbenchContribution(InitialRemoteConnectionHealthContribution, LifecyclePhase.Restored);\n"],
  "mappings": "AAKA,SAAS,iCAAiC,gBAAgB,cAAc,qBAAqB,sCAAsC;AACnI,SAAS,gBAAgB;AACzB,SAAS,iCAAiC;AAC1C,SAAS,sBAAsB;AAC/B,SAAS,iCAAiC;AAC1C,SAAS,qCAAqC,qBAAqB;AACnE,SAAS,6BAA6B;AACtC,SAAS,yBAAyB,oBAAoB,mBAAmB;AACzE,SAAS,iDAAiD;AAE1D,MAAM,iCAAiC,SAAS,GAAoC,oBAAoB,SAAS;AACjH,+BAA+B,0BAA0B,IAAI,2BAA2B,eAAe,YAAY;AACnH,+BAA+B,0BAA0B,IAAI,2BAA2B,eAAe,YAAY;AACnH,+BAA+B,8BAA8B,qCAAqC,eAAe,UAAU;AAC3H,+BAA+B,sBAAsB,IAAI,uBAAuB,eAAe,YAAY;AAC3G,+BAA+B,8BAA8B,oBAAoB,eAAe,QAAQ;AACxG,+BAA+B,8BAA8B,aAAa,eAAe,UAAU;AACnG,+BAA+B,8BAA8B,yBAAyB,eAAe,UAAU;AAC/G,+BAA+B,8BAA8B,eAAe,eAAe,UAAU;AACrG,+BAA+B,8BAA8B,2CAA2C,eAAe,QAAQ;",
  "names": []
}
