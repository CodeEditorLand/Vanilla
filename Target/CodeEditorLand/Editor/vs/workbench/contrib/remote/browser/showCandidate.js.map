{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/remote/browser/showCandidate.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { IWorkbenchContribution } from '../../../common/contributions.js';\nimport { IBrowserWorkbenchEnvironmentService } from '../../../services/environment/browser/environmentService.js';\nimport { IRemoteExplorerService } from '../../../services/remote/common/remoteExplorerService.js';\nimport { CandidatePort } from '../../../services/remote/common/tunnelModel.js';\n\nexport class ShowCandidateContribution extends Disposable implements IWorkbenchContribution {\n\n\tstatic readonly ID = 'workbench.contrib.showPortCandidate';\n\n\tconstructor(\n\t\t@IRemoteExplorerService remoteExplorerService: IRemoteExplorerService,\n\t\t@IBrowserWorkbenchEnvironmentService environmentService: IBrowserWorkbenchEnvironmentService,\n\t) {\n\t\tsuper();\n\t\tconst showPortCandidate = environmentService.options?.tunnelProvider?.showPortCandidate;\n\t\tif (showPortCandidate) {\n\t\t\tthis._register(remoteExplorerService.setCandidateFilter(async (candidates: CandidatePort[]): Promise<CandidatePort[]> => {\n\t\t\t\tconst filters: boolean[] = await Promise.all(candidates.map(candidate => showPortCandidate(candidate.host, candidate.port, candidate.detail ?? '')));\n\t\t\t\tconst filteredCandidates: CandidatePort[] = [];\n\t\t\t\tif (filters.length !== candidates.length) {\n\t\t\t\t\treturn candidates;\n\t\t\t\t}\n\t\t\t\tfor (let i = 0; i < candidates.length; i++) {\n\t\t\t\t\tif (filters[i]) {\n\t\t\t\t\t\tfilteredCandidates.push(candidates[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn filteredCandidates;\n\t\t\t}));\n\t\t}\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,kBAAkB;AAC3B,SAAS,8BAA8B;AACvC,SAAS,2CAA2C;AACpD,SAAS,8BAA8B;AACvC,SAAS,qBAAqB;AAEvB,IAAM,4BAAN,cAAwC,WAA6C;AAAA,EAX5F,OAW4F;AAAA;AAAA;AAAA,EAE3F,OAAgB,KAAK;AAAA,EAErB,YACyB,uBACa,oBACpC;AACD,UAAM;AACN,UAAM,oBAAoB,mBAAmB,SAAS,gBAAgB;AACtE,QAAI,mBAAmB;AACtB,WAAK,UAAU,sBAAsB,mBAAmB,OAAO,eAA0D;AACxH,cAAM,UAAqB,MAAM,QAAQ,IAAI,WAAW,IAAI,eAAa,kBAAkB,UAAU,MAAM,UAAU,MAAM,UAAU,UAAU,EAAE,CAAC,CAAC;AACnJ,cAAM,qBAAsC,CAAC;AAC7C,YAAI,QAAQ,WAAW,WAAW,QAAQ;AACzC,iBAAO;AAAA,QACR;AACA,iBAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC3C,cAAI,QAAQ,CAAC,GAAG;AACf,+BAAmB,KAAK,WAAW,CAAC,CAAC;AAAA,UACtC;AAAA,QACD;AACA,eAAO;AAAA,MACR,CAAC,CAAC;AAAA,IACH;AAAA,EACD;AACD;AA1Ba,4BAAN;AAAA,EAKJ;AAAA,EACA;AAAA,GANU;",
  "names": []
}
