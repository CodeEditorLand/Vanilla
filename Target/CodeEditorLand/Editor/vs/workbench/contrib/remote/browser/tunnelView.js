var Ze=Object.defineProperty;var et=Object.getOwnPropertyDescriptor;var ie=(h,o,e,t)=>{for(var n=t>1?void 0:t?et(o,e):o,i=h.length-1,l;i>=0;i--)(l=h[i])&&(n=(t?l(o,e,n):l(n))||n);return t&&n&&Ze(o,e,n),n},f=(h,o)=>(e,t)=>o(e,t,h);import"vs/css!./media/tunnelView";import*as P from"../../../../../vs/base/browser/dom.js";import"../../../../../vs/base/browser/keyboardEvent.js";import{ActionBar as tt}from"../../../../../vs/base/browser/ui/actionbar/actionbar.js";import{ActionViewItem as nt}from"../../../../../vs/base/browser/ui/actionbar/actionViewItems.js";import{Button as ot}from"../../../../../vs/base/browser/ui/button/button.js";import"../../../../../vs/base/browser/ui/hover/hoverDelegate.js";import{getDefaultHoverDelegate as rt}from"../../../../../vs/base/browser/ui/hover/hoverDelegateFactory.js";import{IconLabel as it}from"../../../../../vs/base/browser/ui/iconLabel/iconLabel.js";import{InputBox as lt,MessageType as le}from"../../../../../vs/base/browser/ui/inputbox/inputBox.js";import"../../../../../vs/base/browser/ui/table/table.js";import{ActionRunner as at}from"../../../../../vs/base/common/actions.js";import{CancellationToken as Se}from"../../../../../vs/base/common/cancellation.js";import{Codicon as st}from"../../../../../vs/base/common/codicons.js";import{Event as Ie}from"../../../../../vs/base/common/event.js";import{createSingleCallFunction as dt}from"../../../../../vs/base/common/functional.js";import{MarkdownString as ct}from"../../../../../vs/base/common/htmlContent.js";import{KeyCode as K,KeyMod as Ae}from"../../../../../vs/base/common/keyCodes.js";import{Disposable as Le,DisposableStore as Me,dispose as ut,toDisposable as De}from"../../../../../vs/base/common/lifecycle.js";import{isMacintosh as fe}from"../../../../../vs/base/common/platform.js";import{ThemeIcon as pt}from"../../../../../vs/base/common/themables.js";import{URI as mt}from"../../../../../vs/base/common/uri.js";import*as c from"../../../../../vs/nls.js";import"../../../../../vs/platform/action/common/action.js";import{createActionViewItem as ht,createAndFillInActionBarActions as He}from"../../../../../vs/platform/actions/browser/menuEntryActionViewItem.js";import{IMenuService as ke,MenuId as I,MenuRegistry as b}from"../../../../../vs/platform/actions/common/actions.js";import{IClipboardService as Ne}from"../../../../../vs/platform/clipboard/common/clipboardService.js";import{CommandsRegistry as A,ICommandService as Y}from"../../../../../vs/platform/commands/common/commands.js";import{ConfigurationTarget as Be,IConfigurationService as _e}from"../../../../../vs/platform/configuration/common/configuration.js";import{ContextKeyExpr as L,IContextKeyService as j,RawContextKey as M}from"../../../../../vs/platform/contextkey/common/contextkey.js";import{IContextMenuService as It,IContextViewService as Ve}from"../../../../../vs/platform/contextview/browser/contextView.js";import{IHoverService as ft}from"../../../../../vs/platform/hover/browser/hover.js";import{SyncDescriptor as gt}from"../../../../../vs/platform/instantiation/common/descriptors.js";import{IInstantiationService as Re}from"../../../../../vs/platform/instantiation/common/instantiation.js";import{IKeybindingService as vt}from"../../../../../vs/platform/keybinding/common/keybinding.js";import{KeybindingsRegistry as ge,KeybindingWeight as ve}from"../../../../../vs/platform/keybinding/common/keybindingsRegistry.js";import{WorkbenchTable as bt}from"../../../../../vs/platform/list/browser/listService.js";import{INotificationService as be,Severity as F}from"../../../../../vs/platform/notification/common/notification.js";import{IOpenerService as ae}from"../../../../../vs/platform/opener/common/opener.js";import{IQuickInputService as G}from"../../../../../vs/platform/quickinput/common/quickInput.js";import"../../../../../vs/platform/remote/common/remoteAuthorityResolver.js";import{ITelemetryService as yt}from"../../../../../vs/platform/telemetry/common/telemetry.js";import{defaultButtonStyles as Tt,defaultInputBoxStyles as Ct}from"../../../../../vs/platform/theme/browser/defaultStyles.js";import{registerColor as xt}from"../../../../../vs/platform/theme/common/colorRegistry.js";import{IThemeService as Pt}from"../../../../../vs/platform/theme/common/themeService.js";import{isAllInterfaces as wt,isLocalhost as Et,ITunnelService as N,TunnelPrivacyId as ze,TunnelProtocol as _}from"../../../../../vs/platform/tunnel/common/tunnel.js";import{ViewPane as St}from"../../../../../vs/workbench/browser/parts/views/viewPane.js";import{STATUS_BAR_REMOTE_ITEM_BACKGROUND as At}from"../../../../../vs/workbench/common/theme.js";import{IViewDescriptorService as Lt}from"../../../../../vs/workbench/common/views.js";import{IExternalUriOpenerService as Mt}from"../../../../../vs/workbench/contrib/externalUriOpener/common/externalUriOpenerService.js";import{copyAddressIcon as Dt,forwardedPortWithoutProcessIcon as Ht,forwardedPortWithProcessIcon as kt,forwardPortIcon as Nt,labelPortIcon as Ke,openBrowserIcon as Bt,openPreviewIcon as _t,portsViewIcon as Vt,privatePortIcon as Fe,stopForwardIcon as Rt}from"../../../../../vs/workbench/contrib/remote/browser/remoteIcons.js";import{IWorkbenchEnvironmentService as Oe}from"../../../../../vs/workbench/services/environment/common/environmentService.js";import{IRemoteExplorerService as C,TUNNEL_VIEW_ID as ye,TunnelEditId as w,TunnelType as v}from"../../../../../vs/workbench/services/remote/common/remoteExplorerService.js";import{forwardedPortsViewEnabled as se,makeAddress as V,mapHasAddressLocalhostOrAllInterfaces as zt,parseAddress as Te,TunnelCloseReason as de,TunnelSource as Kt}from"../../../../../vs/workbench/services/remote/common/tunnelModel.js";import{IViewsService as Ft}from"../../../../../vs/workbench/services/views/common/viewsService.js";const wo=new M("openPreviewEnabled",!1);class Ot{constructor(o){this.remoteExplorerService=o}headerRowHeight=22;getHeight(o){return o.tunnelType===v.Add&&!this.remoteExplorerService.getEditableData(void 0)?30:22}}let ce=class{constructor(o,e){this.remoteExplorerService=o;this.tunnelService=e;this.model=o.tunnelModel,this.onForwardedPortsChanged=Ie.any(this.model.onForwardPort,this.model.onClosePort,this.model.onPortName,this.model.onCandidatesChanged)}onForwardedPortsChanged;model;_candidates=new Map;input={label:c.localize("remote.tunnelsView.addPort","Add Port"),icon:void 0,tunnelType:v.Add,hasRunningProcess:!1,remoteHost:"",remotePort:0,processDescription:"",tooltipPostfix:"",iconTooltip:"",portTooltip:"",processTooltip:"",originTooltip:"",privacyTooltip:"",source:{source:Kt.User,description:""},protocol:_.Http,privacy:{id:ze.Private,themeIcon:Fe.id,label:c.localize("tunnelPrivacy.private","Private")},strip:()=>{}};get all(){const o=[];return this._candidates=new Map,this.model.candidates.forEach(e=>{this._candidates.set(V(e.host,e.port),e)}),(this.model.forwarded.size>0||this.remoteExplorerService.getEditableData(void 0))&&o.push(...this.forwarded),this.model.detected.size>0&&o.push(...this.detected),o.push(this.input),o}addProcessInfoFromCandidate(o){const e=V(o.remoteHost,o.remotePort);this._candidates.has(e)&&(o.processDescription=this._candidates.get(e).detail)}get forwarded(){return Array.from(this.model.forwarded.values()).map(e=>{const t=T.createFromTunnel(this.remoteExplorerService,this.tunnelService,e);return this.addProcessInfoFromCandidate(t),t}).sort((e,t)=>e.remotePort===t.remotePort?e.remoteHost<t.remoteHost?-1:1:e.remotePort<t.remotePort?-1:1)}get detected(){return Array.from(this.model.detected.values()).map(o=>{const e=T.createFromTunnel(this.remoteExplorerService,this.tunnelService,o,v.Detected,!1);return this.addProcessInfoFromCandidate(e),e})}isEmpty(){return this.detected.length===0&&(this.forwarded.length===0||this.forwarded.length===1&&this.forwarded[0].tunnelType===v.Add&&!this.remoteExplorerService.getEditableData(void 0))}};ce=ie([f(0,C),f(1,N)],ce);function J(h){return{label:"",tunnel:h,editId:w.None,tooltip:""}}class $t{label="";tooltip="";weight=1;minimumWidth=40;maximumWidth=40;templateId="actionbar";project(o){if(o.tunnelType===v.Add)return J(o);const e=o.processDescription?kt:Ht;let t="";return o instanceof T&&(t=`${o.iconTooltip} ${o.tooltipPostfix}`),{label:"",icon:e,tunnel:o,editId:w.None,tooltip:t}}}class Ut{label=c.localize("tunnel.portColumn.label","Port");tooltip=c.localize("tunnel.portColumn.tooltip","The label and remote port number of the forwarded port.");weight=1;templateId="actionbar";project(o){const e=o.tunnelType===v.Add,t=o.label;let n="";return o instanceof T&&!e?n=`${o.portTooltip} ${o.tooltipPostfix}`:n=t,{label:t,tunnel:o,menuId:I.TunnelPortInline,editId:o.tunnelType===v.Add?w.New:w.Label,tooltip:n}}}class we{label=c.localize("tunnel.addressColumn.label","Forwarded Address");tooltip=c.localize("tunnel.addressColumn.tooltip","The address that the forwarded port is available at.");weight=1;templateId="actionbar";project(o){if(o.tunnelType===v.Add)return J(o);const e=o.localAddress??"";let t=e;return o instanceof T&&(t=o.tooltipPostfix),{label:e,menuId:I.TunnelLocalAddressInline,tunnel:o,editId:w.LocalPort,tooltip:t,markdownTooltip:e?we.getHoverText(e):void 0}}static getHoverText(o){return function(e){const t=e.getValue("editor");let n="";t.multiCursorModifier==="ctrlCmd"?fe?n=c.localize("portsLink.followLinkAlt.mac","option + click"):n=c.localize("portsLink.followLinkAlt","alt + click"):fe?n=c.localize("portsLink.followLinkCmd","cmd + click"):n=c.localize("portsLink.followLinkCtrl","ctrl + click");const i=new ct("",!0),l=o.startsWith("http")?o:`http://${o}`;return i.appendLink(l,"Follow link").appendMarkdown(` (${n})`)}}}class Wt{label=c.localize("tunnel.processColumn.label","Running Process");tooltip=c.localize("tunnel.processColumn.tooltip","The command line of the process that is using the port.");weight=2;templateId="actionbar";project(o){return o.tunnelType===v.Add?J(o):{label:o.processDescription??"",tunnel:o,editId:w.None,tooltip:o instanceof T?o.processTooltip:""}}}class qt{label=c.localize("tunnel.originColumn.label","Origin");tooltip=c.localize("tunnel.originColumn.tooltip","The source that a forwarded port originates from. Can be an extension, user forwarded, statically forwarded, or automatically forwarded.");weight=1;templateId="actionbar";project(o){if(o.tunnelType===v.Add)return J(o);const e=o.source.description,t=`${o instanceof T?o.originTooltip:""}. ${o instanceof T?o.tooltipPostfix:""}`;return{label:e,menuId:I.TunnelOriginInline,tunnel:o,editId:w.None,tooltip:t}}}class Qt{label=c.localize("tunnel.privacyColumn.label","Visibility");tooltip=c.localize("tunnel.privacyColumn.tooltip","The availability of the forwarded port.");weight=1;templateId="actionbar";project(o){if(o.tunnelType===v.Add)return J(o);const e=o.privacy?.label;let t="";return o instanceof T&&(t=`${o.privacy.label} ${o.tooltipPostfix}`),{label:e,tunnel:o,icon:{id:o.privacy.themeIcon},editId:w.None,tooltip:t}}}let X=class extends Le{constructor(e,t,n,i,l,s,r){super();this.instantiationService=e;this.contextKeyService=t;this.menuService=n;this.contextViewService=i;this.remoteExplorerService=l;this.commandService=s;this.configurationService=r;this._hoverDelegate=rt("mouse")}templateId="actionbar";inputDone;_actionRunner;_hoverDelegate;set actionRunner(e){this._actionRunner=e}renderTemplate(e){const t=P.append(e,P.$(".ports-view-actionbar-cell")),n=P.append(t,P.$(".ports-view-actionbar-cell-icon")),i=new it(t,{supportHighlights:!0,hoverDelegate:this._hoverDelegate}),l=P.append(t,P.$(".actions")),s=new tt(l,{actionViewItemProvider:ht.bind(void 0,this.instantiationService),hoverDelegate:this._hoverDelegate});return{label:i,icon:n,actionBar:s,container:t,elementDisposable:Le.None}}renderElement(e,t,n){n.actionBar.clear(),n.icon.className="ports-view-actionbar-cell-icon",n.icon.style.display="none",n.label.setLabel(""),n.label.element.style.display="none",n.container.style.height="22px",n.button&&(n.button.element.style.display="none",n.button.dispose()),n.container.style.paddingLeft="0px",n.elementDisposable.dispose();let i;e.editId===w.New&&(i=this.remoteExplorerService.getEditableData(void 0))?this.renderInputBox(n.container,i):(i=this.remoteExplorerService.getEditableData(e.tunnel,e.editId),i?this.renderInputBox(n.container,i):e.tunnel.tunnelType===v.Add&&e.menuId===I.TunnelPortInline?this.renderButton(e,n):this.renderActionBarItem(e,n))}renderButton(e,t){t.container.style.paddingLeft="7px",t.container.style.height="28px",t.button=this._register(new ot(t.container,Tt)),t.button.label=e.label,t.button.element.title=e.tooltip,this._register(t.button.onDidClick(()=>{this.commandService.executeCommand(x.INLINE_ID)}))}tunnelContext(e){let t;return e instanceof T&&(t=e.strip()),t||(t={tunnelType:e.tunnelType,remoteHost:e.remoteHost,remotePort:e.remotePort,localAddress:e.localAddress,protocol:e.protocol,localUri:e.localUri,localPort:e.localPort,name:e.name,closeable:e.closeable,source:e.source,privacy:e.privacy,processDescription:e.processDescription,label:e.label}),t}renderActionBarItem(e,t){t.label.element.style.display="flex",t.label.setLabel(e.label,void 0,{title:e.markdownTooltip?{markdown:e.markdownTooltip(this.configurationService),markdownNotSupportedFallback:e.tooltip}:e.tooltip,extraClasses:e.menuId===I.TunnelLocalAddressInline?["ports-view-actionbar-cell-localaddress"]:void 0}),t.actionBar.context=this.tunnelContext(e.tunnel),t.container.style.paddingLeft="10px";const n=[["view",ye],[Z.key,e.tunnel.tunnelType],[ee.key,e.tunnel.closeable],[Ce.key,e.tunnel.privacy.id],[ue.key,e.tunnel.protocol]],i=this.contextKeyService.createOverlay(n),l=new Me;if(t.elementDisposable=l,e.menuId){const s=l.add(this.menuService.createMenu(e.menuId,i));let r=[];if(He(s,{shouldForwardArgs:!0},r),r){const a=r.filter(d=>d.id.toLowerCase().indexOf("label")>=0);a.length>1&&(a.sort((d,p)=>d.label.length-p.label.length),a.pop(),r=r.filter(d=>a.indexOf(d)<0)),t.actionBar.push(r,{icon:!0,label:!1}),this._actionRunner&&(t.actionBar.actionRunner=this._actionRunner)}}e.icon&&(t.icon.className=`ports-view-actionbar-cell-icon ${pt.asClassName(e.icon)}`,t.icon.title=e.tooltip,t.icon.style.display="inline")}renderInputBox(e,t){this.inputDone&&(this.inputDone(!1,!1),this.inputDone=void 0),e.style.paddingLeft="5px";const n=t.startingValue||"",i=new lt(e,this.contextViewService,{ariaLabel:c.localize("remote.tunnelsView.input","Press Enter to confirm or Escape to cancel."),validationOptions:{validation:r=>{const a=t.validationMessage(r);return a?{content:a.content,formatContent:!0,type:a.severity===F.Error?le.ERROR:le.INFO}:null}},placeholder:t.placeholder||"",inputBoxStyles:Ct});i.value=n,i.focus(),i.select({start:0,end:t.startingValue?t.startingValue.length:0});const l=dt(async(r,a)=>{ut(s),this.inputDone&&(this.inputDone=void 0),i.element.style.display="none";const d=i.value;if(a)return t.onFinish(d,r)});this.inputDone=l;const s=[i,P.addStandardDisposableListener(i.inputElement,P.EventType.KEY_DOWN,async r=>{if(r.equals(K.Enter))return r.stopPropagation(),i.validate()!==le.ERROR?l(!0,!0):l(!1,!0);if(r.equals(K.Escape))return r.preventDefault(),r.stopPropagation(),l(!1,!0)}),P.addDisposableListener(i.inputElement,P.EventType.BLUR,()=>l(i.validate()!==le.ERROR,!0))];return De(()=>{l(!1,!1)})}disposeElement(e,t,n,i){n.elementDisposable.dispose()}disposeTemplate(e){e.label.dispose(),e.actionBar.dispose(),e.elementDisposable.dispose(),e.button?.dispose()}};X=ie([f(0,Re),f(1,j),f(2,ke),f(3,Ve),f(4,C),f(5,Y),f(6,_e)],X);class T{constructor(o,e,t,n,i,l,s,r,a,d,p,u,m,g,y,E){this.tunnelType=o;this.remoteHost=e;this.remotePort=t;this.source=n;this.hasRunningProcess=i;this.protocol=l;this.localUri=s;this.localAddress=r;this.localPort=a;this.closeable=d;this.name=p;this.runningProcess=u;this.pid=m;this._privacy=g;this.remoteExplorerService=y;this.tunnelService=E}static createFromTunnel(o,e,t,n=v.Forwarded,i){return new T(n,t.remoteHost,t.remotePort,t.source,!!t.hasRunningProcess,t.protocol,t.localUri,t.localAddress,t.localPort,i===void 0?t.closeable:i,t.name,t.runningProcess,t.pid,t.privacy,o,e)}strip(){return new T(this.tunnelType,this.remoteHost,this.remotePort,this.source,this.hasRunningProcess,this.protocol,this.localUri,this.localAddress,this.localPort,this.closeable,this.name,this.runningProcess,this.pid,this._privacy)}get label(){if(this.tunnelType===v.Add&&this.name)return this.name;const o=Et(this.remoteHost)||wt(this.remoteHost)?`${this.remotePort}`:`${this.remoteHost}:${this.remotePort}`;return this.name?`${this.name} (${o})`:o}set processDescription(o){this.runningProcess=o}get processDescription(){let o="";return this.runningProcess?(this.pid&&this.remoteExplorerService?.namedProcesses.has(this.pid)?o=this.remoteExplorerService.namedProcesses.get(this.pid):o=this.runningProcess.replace(/\0/g," ").trim(),this.pid&&(o+=` (${this.pid})`)):this.hasRunningProcess&&(o=c.localize("tunnelView.runningProcess.inacessable","Process information unavailable")),o}get tooltipPostfix(){let o;return this.localAddress?o=c.localize("remote.tunnel.tooltipForwarded","Remote port {0}:{1} forwarded to local address {2}. ",this.remoteHost,this.remotePort,this.localAddress):o=c.localize("remote.tunnel.tooltipCandidate","Remote port {0}:{1} not forwarded. ",this.remoteHost,this.remotePort),o}get iconTooltip(){return this.tunnelType===v.Add?this.label:`${this.processDescription?c.localize("tunnel.iconColumn.running","Port has running process."):c.localize("tunnel.iconColumn.notRunning","No running process.")}`}get portTooltip(){return this.tunnelType===v.Add?"":`${this.name?c.localize("remote.tunnel.tooltipName","Port labeled {0}. ",this.name):""}`}get processTooltip(){return this.processDescription??""}get originTooltip(){return this.source.description}get privacy(){return this.tunnelService?.privacyOptions?this.tunnelService?.privacyOptions.find(o=>o.id===this._privacy)??{id:"",themeIcon:st.question.id,label:c.localize("tunnelPrivacy.unknown","Unknown")}:{id:ze.Private,themeIcon:Fe.id,label:c.localize("tunnelPrivacy.private","Private")}}}const Z=new M("tunnelType",v.Add,!0),ee=new M("tunnelCloseable",!1,!0),Ce=new M("tunnelPrivacy",void 0,!0),$e=new M("tunnelPrivacyEnabled",!1,!0),ue=new M("tunnelProtocol",_.Http,!0),pe=new M("tunnelViewFocus",!1,c.localize("tunnel.focusContext","Whether the Ports view has focus.")),te="tunnelViewSelection",jt=new M(te,void 0,!0),Ue="tunnelViewMultiSelection",We=new M(Ue,void 0,!0),qe=new M("portChangable",!1,!0),Qe=new M("protocolChangable",!0,!0);let B=class extends St{constructor(e,t,n,i,l,s,r,a,d,p,u,m,g,y,E,k,S,re){super(t,n,i,s,l,a,r,d,g,E,k);this.viewModel=e;this.quickInputService=p;this.commandService=u;this.menuService=m;this.remoteExplorerService=y;this.tunnelService=S;this.contextViewService=re;this.tunnelTypeContext=Z.bindTo(l),this.tunnelCloseableContext=ee.bindTo(l),this.tunnelPrivacyContext=Ce.bindTo(l),this.tunnelPrivacyEnabledContext=$e.bindTo(l),this.tunnelPrivacyEnabledContext.set(S.canChangePrivacy),this.protocolChangableContextKey=Qe.bindTo(l),this.protocolChangableContextKey.set(S.canChangeProtocol),this.tunnelProtocolContext=ue.bindTo(l),this.tunnelViewFocusContext=pe.bindTo(l),this.tunnelViewSelectionContext=jt.bindTo(l),this.tunnelViewMultiSelectionContext=We.bindTo(l),this.portChangableContextKey=qe.bindTo(l);const Xe=this.contextKeyService.createOverlay([["view",B.ID]]),Ee=this._register(this.menuService.createMenu(I.TunnelTitle,Xe)),me=()=>{this.titleActions=[],He(Ee,void 0,this.titleActions),this.updateActions()};this._register(Ee.onDidChange(me)),me(),this._register(De(()=>{this.titleActions=[]})),this.registerPrivacyActions(),this._register(Ie.once(this.tunnelService.onAddedTunnelProvider)(()=>{let he=!1;this.tunnelPrivacyEnabledContext.get()===!1&&(this.tunnelPrivacyEnabledContext.set(S.canChangePrivacy),he=!0),this.protocolChangableContextKey.get()===!0&&(this.protocolChangableContextKey.set(S.canChangeProtocol),he=!0),he&&(me(),this.registerPrivacyActions(),this.createTable(),this.table?.layout(this.height,this.width))}))}static ID=ye;static TITLE=c.localize2("remote.tunnel","Ports");panelContainer;table;tableDisposables=this._register(new Me);tunnelTypeContext;tunnelCloseableContext;tunnelPrivacyContext;tunnelPrivacyEnabledContext;tunnelProtocolContext;tunnelViewFocusContext;tunnelViewSelectionContext;tunnelViewMultiSelectionContext;portChangableContextKey;protocolChangableContextKey;isEditing=!1;titleActions=[];lastFocus=[];registerPrivacyActions(){for(const e of this.tunnelService.privacyOptions){const t=`remote.tunnel.privacy${e.id}`;A.registerCommand(t,Je.handler(e.id)),b.appendMenuItem(I.TunnelPrivacy,{order:0,command:{id:t,title:e.label,toggled:Ce.isEqualTo(e.id)}})}}get portCount(){return this.remoteExplorerService.tunnelModel.forwarded.size+this.remoteExplorerService.tunnelModel.detected.size}createTable(){if(!this.panelContainer)return;this.tableDisposables.clear(),P.clearNode(this.panelContainer);const e=P.append(this.panelContainer,P.$(".customview-tree"));e.classList.add("ports-view"),e.classList.add("file-icon-themable-tree","show-file-icons");const t=new X(this.instantiationService,this.contextKeyService,this.menuService,this.contextViewService,this.remoteExplorerService,this.commandService,this.configurationService),n=[new $t,new Ut,new we,new Wt];this.tunnelService.canChangePrivacy&&n.push(new Qt),n.push(new qt),this.table=this.instantiationService.createInstance(bt,"RemoteTunnels",e,new Ot(this.remoteExplorerService),n,[t],{keyboardNavigationLabelProvider:{getKeyboardNavigationLabel:r=>r.label},multipleSelectionSupport:!0,accessibilityProvider:{getAriaLabel:r=>r instanceof T?`${r.tooltipPostfix} ${r.portTooltip} ${r.iconTooltip} ${r.processTooltip} ${r.originTooltip} ${this.tunnelService.canChangePrivacy?r.privacy.label:""}`:r.label,getWidgetAriaLabel:()=>c.localize("tunnelView","Tunnel View")},openOnSingleClick:!0});const i=new at;t.actionRunner=i,this.tableDisposables.add(this.table),this.tableDisposables.add(this.table.onContextMenu(r=>this.onContextMenu(r,i))),this.tableDisposables.add(this.table.onMouseDblClick(r=>this.onMouseDblClick(r))),this.tableDisposables.add(this.table.onDidChangeFocus(r=>this.onFocusChanged(r))),this.tableDisposables.add(this.table.onDidChangeSelection(r=>this.onSelectionChanged(r))),this.tableDisposables.add(this.table.onDidFocus(()=>this.tunnelViewFocusContext.set(!0))),this.tableDisposables.add(this.table.onDidBlur(()=>this.tunnelViewFocusContext.set(!1)));const l=()=>this.table?.splice(0,Number.POSITIVE_INFINITY,this.viewModel.all);l();let s=this.portCount;this.tableDisposables.add(Ie.debounce(this.viewModel.onForwardedPortsChanged,(r,a)=>a,50)(()=>{const r=this.portCount;(s===0||r===0)&&s!==r&&this._onDidChangeViewWelcomeState.fire(),s=r,l()})),this.tableDisposables.add(this.table.onMouseClick(r=>{if(this.hasOpenLinkModifier(r.browserEvent)&&this.table){const a=this.table.getSelectedElements();(a.length===0||a.length===1&&a[0]===r.element)&&this.commandService.executeCommand(R.ID,r.element)}})),this.tableDisposables.add(this.table.onDidOpen(r=>{!r.element||r.element.tunnelType!==v.Forwarded||r.browserEvent?.type==="dblclick"&&this.commandService.executeCommand($.ID)})),this.tableDisposables.add(this.remoteExplorerService.onDidChangeEditable(r=>{this.isEditing=!!this.remoteExplorerService.getEditableData(r?.tunnel,r?.editId),this._onDidChangeViewWelcomeState.fire(),this.isEditing||e.classList.remove("highlight"),l(),this.isEditing?(e.classList.add("highlight"),r||this.table?.reveal(this.table.indexOf(this.viewModel.input))):(r&&r.tunnel.tunnelType!==v.Add&&this.table?.setFocus(this.lastFocus),this.focus())}))}renderBody(e){super.renderBody(e),this.panelContainer=P.append(e,P.$(".tree-explorer-viewlet-tree-view")),this.createTable()}shouldShowWelcome(){return this.viewModel.isEmpty()&&!this.isEditing}focus(){super.focus(),this.table?.domFocus()}onFocusChanged(e){e.indexes.length>0&&e.elements.length>0&&(this.lastFocus=[...e.indexes]);const t=e.elements,n=t&&t.length?t[0]:void 0;n?(this.tunnelViewSelectionContext.set(V(n.remoteHost,n.remotePort)),this.tunnelTypeContext.set(n.tunnelType),this.tunnelCloseableContext.set(!!n.closeable),this.tunnelPrivacyContext.set(n.privacy.id),this.tunnelProtocolContext.set(n.protocol===_.Https?_.Https:_.Https),this.portChangableContextKey.set(!!n.localPort)):(this.tunnelTypeContext.reset(),this.tunnelViewSelectionContext.reset(),this.tunnelCloseableContext.reset(),this.tunnelPrivacyContext.reset(),this.tunnelProtocolContext.reset(),this.portChangableContextKey.reset())}hasOpenLinkModifier(e){const t=this.configurationService.getValue("editor");let n=!1;return t.multiCursorModifier==="ctrlCmd"?n=e.altKey:fe?n=e.metaKey:n=e.ctrlKey,n}onSelectionChanged(e){const t=e.elements;t.length>1?this.tunnelViewMultiSelectionContext.set(t.map(n=>V(n.remoteHost,n.remotePort))):this.tunnelViewMultiSelectionContext.set(void 0)}onContextMenu(e,t){if(e.element!==void 0&&!(e.element instanceof T))return;e.browserEvent.preventDefault(),e.browserEvent.stopPropagation();const n=e.element;n?(this.table?.setFocus([this.table.indexOf(n)]),this.tunnelTypeContext.set(n.tunnelType),this.tunnelCloseableContext.set(!!n.closeable),this.tunnelPrivacyContext.set(n.privacy.id),this.tunnelProtocolContext.set(n.protocol),this.portChangableContextKey.set(!!n.localPort)):(this.tunnelTypeContext.set(v.Add),this.tunnelCloseableContext.set(!1),this.tunnelPrivacyContext.set(void 0),this.tunnelProtocolContext.set(void 0),this.portChangableContextKey.set(!1)),this.contextMenuService.showContextMenu({menuId:I.TunnelContext,menuActionOptions:{shouldForwardArgs:!0},contextKeyService:this.table?.contextKeyService,getAnchor:()=>e.anchor,getActionViewItem:i=>{const l=this.keybindingService.lookupKeybinding(i.id);if(l)return new nt(i,i,{label:!0,keybinding:l.getLabel()})},onHide:i=>{i&&this.table?.domFocus()},getActionsContext:()=>n?.strip(),actionRunner:t})}onMouseDblClick(e){e.element||this.commandService.executeCommand(x.INLINE_ID)}height=0;width=0;layoutBody(e,t){this.height=e,this.width=t,super.layoutBody(e,t),this.table?.layout(e,t)}};B=ie([f(2,vt),f(3,It),f(4,j),f(5,_e),f(6,Re),f(7,Lt),f(8,ae),f(9,G),f(10,Y),f(11,ke),f(12,Pt),f(13,C),f(14,yt),f(15,ft),f(16,N),f(17,Ve)],B);class Eo{id=B.ID;name=B.TITLE;ctorDescriptor;canToggleVisibility=!0;hideByDefault=!1;group="details@0";order=-500;remoteAuthority;canMoveView=!0;containerIcon=Vt;constructor(o,e){this.ctorDescriptor=new gt(B,[o]),this.remoteAuthority=e.remoteAuthority?e.remoteAuthority.split("+")[0]:void 0}}function O(h){return h&&h.tunnelType&&h.remoteHost&&h.source}var $;(n=>{n.ID="remote.tunnel.label",n.LABEL=c.localize("remote.tunnel.label","Set Port Label"),n.COMMAND_ID_KEYWORD="label";function t(){return async(i,l)=>{const s=i.get(C);let r;if(O(l))r=l;else{const a=i.get(j).getContextKeyValue(te),d=a?s.tunnelModel.forwarded.get(a):void 0;if(d){const p=i.get(N);r=T.createFromTunnel(s,p,d)}}if(r){const a=r;return new Promise(d=>{const p=a.name?a.name:`${a.remotePort}`;s.setEditable(a,w.Label,{onFinish:async(u,m)=>{u=u.trim(),s.setEditable(a,w.Label,null);const g=m&&u!==p;g&&await s.tunnelModel.name(a.remoteHost,a.remotePort,u),d(g?{port:a.remotePort,label:u}:void 0)},validationMessage:()=>null,placeholder:c.localize("remote.tunnelsView.labelPlaceholder","Port label"),startingValue:p})})}}}n.handler=t})($||={});const Yt=c.localize("remote.tunnelsView.portNumberValid","Forwarded port should be a number or a host:port."),xe=65536,je=c.localize("remote.tunnelsView.portNumberToHigh","Port number must be \u2265 0 and < {0}.",xe),Ye=c.localize("remote.tunnelView.inlineElevationMessage","May Require Sudo"),Gt=c.localize("remote.tunnelView.alreadyForwarded","Port is already forwarded");var x;(a=>{a.INLINE_ID="remote.tunnel.forwardInline",a.COMMANDPALETTE_ID="remote.tunnel.forwardCommandPalette",a.LABEL=c.localize2("remote.tunnel.forward","Forward a Port"),a.TREEITEM_LABEL=c.localize("remote.tunnel.forwardItem","Forward Port");const n=c.localize("remote.tunnel.forwardPrompt","Port number or address (eg. 3000 or 10.10.10.10:2000).");function i(d,p,u,m){const g=Te(u);if(g){if(g.port>=xe)return{content:je,severity:F.Error};if(m&&p.isPortPrivileged(g.port))return{content:Ye,severity:F.Info};if(zt(d.tunnelModel.forwarded,g.host,g.port))return{content:Gt,severity:F.Error}}else return{content:Yt,severity:F.Error};return null}function l(d,p,u,m){p?typeof p=="string"&&d.warn(c.localize("remote.tunnel.forwardErrorProvided","Unable to forward {0}:{1}. {2}",u,m,p)):d.warn(c.localize("remote.tunnel.forwardError","Unable to forward {0}:{1}. The host may not be available or that remote port may already be forwarded",u,m))}function s(){return async(d,p)=>{const u=d.get(C),m=d.get(be),g=d.get(N);u.setEditable(void 0,w.New,{onFinish:async(y,E)=>{u.setEditable(void 0,w.New,null);let k;E&&(k=Te(y))&&u.forward({remote:{host:k.host,port:k.port},elevateIfNeeded:!0}).then(S=>l(m,S,k.host,k.port))},validationMessage:y=>i(u,g,y,g.canElevate),placeholder:n})}}a.inlineHandler=s;function r(){return async(d,p)=>{const u=d.get(C),m=d.get(be),g=d.get(Ft),y=d.get(G),E=d.get(N);await g.openView(B.ID,!0);const k=await y.input({prompt:n,validateInput:re=>Promise.resolve(i(u,E,re,E.canElevate))});let S;k&&(S=Te(k))&&u.forward({remote:{host:S.host,port:S.port},elevateIfNeeded:!0}).then(re=>l(m,re,S.host,S.port))}}a.commandPaletteHandler=r})(x||={});function Ge(h,o,e){const t=h.map(n=>{const i=T.createFromTunnel(o,e,n);return{label:i.label,description:i.processDescription,tunnel:i}});return t.length===0&&t.push({label:c.localize("remote.tunnel.closeNoPorts","No ports currently forwarded. Try running the {0} command",x.LABEL.value)}),t}var D;(i=>{i.INLINE_ID="remote.tunnel.closeInline",i.COMMANDPALETTE_ID="remote.tunnel.closeCommandPalette",i.LABEL=c.localize2("remote.tunnel.close","Stop Forwarding Port");function t(){return async(l,s)=>{const r=l.get(j),a=l.get(C);let d=[];const p=r.getContextKeyValue(Ue);if(p)p.forEach(u=>{const m=a.tunnelModel.forwarded.get(u);m&&d?.push(m)});else if(O(s))d=[s];else{const u=r.getContextKeyValue(te),m=u?a.tunnelModel.forwarded.get(u):void 0;m&&(d=[m])}if(!(!d||d.length===0))return Promise.all(d.map(u=>a.close({host:u.remoteHost,port:u.remotePort},de.User)))}}i.inlineHandler=t;function n(){return async l=>{const s=l.get(G),r=l.get(C),a=l.get(N),d=l.get(Y),p=Ge(Array.from(r.tunnelModel.forwarded.values()).filter(m=>m.closeable),r,a),u=await s.pick(p,{placeHolder:c.localize("remote.tunnel.closePlaceholder","Choose a port to stop forwarding")});u&&u.tunnel?await r.close({host:u.tunnel.remoteHost,port:u.tunnel.remotePort},de.User):u&&await d.executeCommand(x.COMMANDPALETTE_ID)}}i.commandPaletteHandler=n})(D||={});var R;(n=>{n.ID="remote.tunnel.open",n.LABEL=c.localize("remote.tunnel.open","Open in Browser");function e(){return async(i,l)=>{let s;if(O(l)?s=V(l.remoteHost,l.remotePort):l.tunnelRemoteHost&&l.tunnelRemotePort&&(s=V(l.tunnelRemoteHost,l.tunnelRemotePort)),s){const r=i.get(C).tunnelModel,a=i.get(ae);return t(r,a,s)}}}n.handler=e;function t(i,l,s){const r=i.forwarded.get(s)||i.detected.get(s);return r?l.open(r.localUri,{allowContributedOpeners:!1}):Promise.resolve()}n.run=t})(R||={});var W;(n=>{n.ID="remote.tunnel.openPreview",n.LABEL=c.localize("remote.tunnel.openPreview","Preview in Editor");function e(){return async(i,l)=>{let s;if(O(l)?s=V(l.remoteHost,l.remotePort):l.tunnelRemoteHost&&l.tunnelRemotePort&&(s=V(l.tunnelRemoteHost,l.tunnelRemotePort)),s){const r=i.get(C).tunnelModel,a=i.get(ae),d=i.get(Mt);return t(r,a,d,s)}}}n.handler=e;async function t(i,l,s,r){const a=i.forwarded.get(r)||i.detected.get(r);if(a){const d=a.remoteHost.includes(":")?`[${a.remoteHost}]`:a.remoteHost,p=mt.parse(`http://${d}:${a.remotePort}`),u=await s.getOpener(a.localUri,{sourceUri:p},Se.None);return u?u.openExternalUri(a.localUri,{sourceUri:p},Se.None):l.open(a.localUri)}return Promise.resolve()}n.run=t})(W||={});var ne;(t=>{t.ID="remote.tunnel.openCommandPalette",t.LABEL=c.localize("remote.tunnel.openCommandPalette","Open Port in Browser");function e(){return async(n,i)=>{const l=n.get(C),s=n.get(N),r=l.tunnelModel,a=n.get(G),d=n.get(ae),p=n.get(Y),u=[...r.forwarded,...r.detected].map(g=>{const y=T.createFromTunnel(l,s,g[1]);return{label:y.label,description:y.processDescription,tunnel:y}});u.length===0?u.push({label:c.localize("remote.tunnel.openCommandPaletteNone","No ports currently forwarded. Open the Ports view to get started.")}):u.push({label:c.localize("remote.tunnel.openCommandPaletteView","Open the Ports view...")});const m=await a.pick(u,{placeHolder:c.localize("remote.tunnel.openCommandPalettePick","Choose the port to open")});if(m&&m.tunnel)return R.run(r,d,V(m.tunnel.remoteHost,m.tunnel.remotePort));if(m)return p.executeCommand(`${ye}.focus`)}}t.handler=e})(ne||={});var H;(s=>{s.INLINE_ID="remote.tunnel.copyAddressInline",s.COMMANDPALETTE_ID="remote.tunnel.copyAddressCommandPalette",s.INLINE_LABEL=c.localize("remote.tunnel.copyAddressInline","Copy Local Address"),s.COMMANDPALETTE_LABEL=c.localize("remote.tunnel.copyAddressCommandPalette","Copy Forwarded Port Address");async function n(r,a,d){const p=r.tunnelModel.address(d.remoteHost,d.remotePort);p&&await a.writeText(p.toString())}function i(){return async(r,a)=>{const d=r.get(C);let p;if(O(a))p=a;else{const u=r.get(j).getContextKeyValue(te);p=u?d.tunnelModel.forwarded.get(u):void 0}if(p)return n(d,r.get(Ne),p)}}s.inlineHandler=i;function l(){return async(r,a)=>{const d=r.get(G),p=r.get(C),u=r.get(N),m=r.get(Y),g=r.get(Ne),y=Array.from(p.tunnelModel.forwarded.values()).concat(Array.from(p.tunnelModel.detected.values())),E=await d.pick(Ge(y,p,u),{placeHolder:c.localize("remote.tunnel.copyAddressPlaceholdter","Choose a forwarded port")});E&&E.tunnel?await n(p,g,E.tunnel):E&&await m.executeCommand(x.COMMANDPALETTE_ID)}}s.commandPaletteHandler=l})(H||={});var oe;(n=>{n.ID="remote.tunnel.changeLocalPort",n.LABEL=c.localize("remote.tunnel.changeLocalPort","Change Local Address Port");function e(i,l,s){if(l.match(/^[0-9]+$/)){if(Number(l)>=xe)return{content:je,severity:F.Error};if(s&&i.isPortPrivileged(Number(l)))return{content:Ye,severity:F.Info}}else return{content:c.localize("remote.tunnelsView.portShouldBeNumber","Local port should be a number."),severity:F.Error};return null}function t(){return async(i,l)=>{const s=i.get(C),r=i.get(be),a=i.get(N);let d;if(O(l))d=l;else{const p=i.get(j).getContextKeyValue(te),u=p?s.tunnelModel.forwarded.get(p):void 0;if(u){const m=i.get(N);d=T.createFromTunnel(s,m,u)}}if(d){const p=d;s.setEditable(p,w.LocalPort,{onFinish:async(u,m)=>{if(s.setEditable(p,w.LocalPort,null),m){await s.close({host:p.remoteHost,port:p.remotePort},de.Other);const g=Number(u),y=await s.forward({remote:{host:p.remoteHost,port:p.remotePort},local:g,name:p.name,elevateIfNeeded:!0,source:p.source});y&&typeof y!="string"&&y.tunnelLocalPort!==g&&r.warn(c.localize("remote.tunnel.changeLocalPortNumber","The local port {0} is not available. Port number {1} has been used instead",u,y.tunnelLocalPort??y.localAddress))}},validationMessage:u=>e(a,u,a.canElevate),placeholder:c.localize("remote.tunnelsView.changePort","New local port")})}}}n.handler=t})(oe||={});var Je;(o=>{function h(e){return async(t,n)=>{if(O(n)){const i=t.get(C);return await i.close({host:n.remoteHost,port:n.remotePort},de.Other),i.forward({remote:{host:n.remoteHost,port:n.remotePort},local:n.localPort,name:n.name,elevateIfNeeded:!0,privacy:e,source:n.source})}}}o.handler=h})(Je||={});var z;(s=>{s.ID_HTTP="remote.tunnel.setProtocolHttp",s.ID_HTTPS="remote.tunnel.setProtocolHttps",s.LABEL_HTTP=c.localize("remote.tunnel.protocolHttp","HTTP"),s.LABEL_HTTPS=c.localize("remote.tunnel.protocolHttps","HTTPS");async function n(r,a,d,p){if(O(r)){const u={protocol:a},m=p.remoteAuthority?Be.USER_REMOTE:Be.USER_LOCAL;return d.tunnelModel.configPortsAttributes.addAttributes(r.remotePort,u,m)}}function i(){return async(r,a)=>n(a,_.Http,r.get(C),r.get(Oe))}s.handlerHttp=i;function l(){return async(r,a)=>n(a,_.Https,r.get(C),r.get(Oe))}s.handlerHttps=l})(z||={});const Pe=10,q=Z.isEqualTo(v.Forwarded),Q=L.or(q,Z.isEqualTo(v.Detected)),U=We.isEqualTo(void 0);ge.registerCommandAndKeybindingRule({id:$.ID,weight:ve.WorkbenchContrib+Pe,when:L.and(pe,q,U),primary:K.F2,mac:{primary:K.Enter},handler:$.handler()}),A.registerCommand(x.INLINE_ID,x.inlineHandler()),A.registerCommand(x.COMMANDPALETTE_ID,x.commandPaletteHandler()),ge.registerCommandAndKeybindingRule({id:D.INLINE_ID,weight:ve.WorkbenchContrib+Pe,when:L.and(ee,pe),primary:K.Delete,mac:{primary:Ae.CtrlCmd|K.Backspace,secondary:[K.Delete]},handler:D.inlineHandler()}),A.registerCommand(D.COMMANDPALETTE_ID,D.commandPaletteHandler()),A.registerCommand(R.ID,R.handler()),A.registerCommand(W.ID,W.handler()),A.registerCommand(ne.ID,ne.handler()),ge.registerCommandAndKeybindingRule({id:H.INLINE_ID,weight:ve.WorkbenchContrib+Pe,when:L.and(pe,Q,U),primary:Ae.CtrlCmd|K.KeyC,handler:H.inlineHandler()}),A.registerCommand(H.COMMANDPALETTE_ID,H.commandPaletteHandler()),A.registerCommand(oe.ID,oe.handler()),A.registerCommand(z.ID_HTTP,z.handlerHttp()),A.registerCommand(z.ID_HTTPS,z.handlerHttps()),b.appendMenuItem(I.CommandPalette,{command:{id:D.COMMANDPALETTE_ID,title:D.LABEL},when:se}),b.appendMenuItem(I.CommandPalette,{command:{id:x.COMMANDPALETTE_ID,title:x.LABEL},when:se}),b.appendMenuItem(I.CommandPalette,{command:{id:H.COMMANDPALETTE_ID,title:H.COMMANDPALETTE_LABEL},when:se}),b.appendMenuItem(I.CommandPalette,{command:{id:ne.ID,title:ne.LABEL},when:se}),b.appendMenuItem(I.TunnelContext,{group:"._open",order:0,command:{id:R.ID,title:R.LABEL},when:L.and(Q,U)}),b.appendMenuItem(I.TunnelContext,{group:"._open",order:1,command:{id:W.ID,title:W.LABEL},when:L.and(Q,U)}),b.appendMenuItem(I.TunnelContext,{group:"0_manage",order:1,command:{id:$.ID,title:$.LABEL,icon:Ke},when:L.and(q,U)}),b.appendMenuItem(I.TunnelContext,{group:"2_localaddress",order:0,command:{id:H.INLINE_ID,title:H.INLINE_LABEL},when:L.and(Q,U)}),b.appendMenuItem(I.TunnelContext,{group:"2_localaddress",order:1,command:{id:oe.ID,title:oe.LABEL},when:L.and(q,qe,U)}),b.appendMenuItem(I.TunnelContext,{group:"2_localaddress",order:2,submenu:I.TunnelPrivacy,title:c.localize("tunnelContext.privacyMenu","Port Visibility"),when:L.and(q,$e)}),b.appendMenuItem(I.TunnelContext,{group:"2_localaddress",order:3,submenu:I.TunnelProtocol,title:c.localize("tunnelContext.protocolMenu","Change Port Protocol"),when:L.and(q,U,Qe)}),b.appendMenuItem(I.TunnelContext,{group:"3_forward",order:0,command:{id:D.INLINE_ID,title:D.LABEL},when:ee}),b.appendMenuItem(I.TunnelContext,{group:"3_forward",order:1,command:{id:x.INLINE_ID,title:x.LABEL}}),b.appendMenuItem(I.TunnelProtocol,{order:0,command:{id:z.ID_HTTP,title:z.LABEL_HTTP,toggled:ue.isEqualTo(_.Http)}}),b.appendMenuItem(I.TunnelProtocol,{order:1,command:{id:z.ID_HTTPS,title:z.LABEL_HTTPS,toggled:ue.isEqualTo(_.Https)}}),b.appendMenuItem(I.TunnelPortInline,{group:"0_manage",order:0,command:{id:x.INLINE_ID,title:x.TREEITEM_LABEL,icon:Nt},when:Z.isEqualTo(v.Candidate)}),b.appendMenuItem(I.TunnelPortInline,{group:"0_manage",order:4,command:{id:$.ID,title:$.LABEL,icon:Ke},when:q}),b.appendMenuItem(I.TunnelPortInline,{group:"0_manage",order:5,command:{id:D.INLINE_ID,title:D.LABEL,icon:Rt},when:ee}),b.appendMenuItem(I.TunnelLocalAddressInline,{order:-1,command:{id:H.INLINE_ID,title:H.INLINE_LABEL,icon:Dt},when:Q}),b.appendMenuItem(I.TunnelLocalAddressInline,{order:0,command:{id:R.ID,title:R.LABEL,icon:Bt},when:Q}),b.appendMenuItem(I.TunnelLocalAddressInline,{order:1,command:{id:W.ID,title:W.LABEL,icon:_t},when:Q}),xt("ports.iconRunningProcessForeground",At,c.localize("portWithRunningProcess.foreground","The color of the icon for a port that has an associated running process."));export{x as ForwardPortAction,R as OpenPortInBrowserAction,W as OpenPortInPreviewAction,B as TunnelPanel,Eo as TunnelPanelDescriptor,ce as TunnelViewModel,wo as openPreviewEnabledContext};
