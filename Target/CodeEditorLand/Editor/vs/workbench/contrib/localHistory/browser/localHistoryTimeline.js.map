{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/localHistory/browser/localHistoryTimeline.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../../nls.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { IWorkbenchContribution } from '../../../common/contributions.js';\nimport { ITimelineService, Timeline, TimelineChangeEvent, TimelineItem, TimelineOptions, TimelineProvider } from '../../timeline/common/timeline.js';\nimport { IWorkingCopyHistoryEntry, IWorkingCopyHistoryService } from '../../../services/workingCopy/common/workingCopyHistory.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IPathService } from '../../../services/path/common/pathService.js';\nimport { API_OPEN_DIFF_EDITOR_COMMAND_ID } from '../../../browser/parts/editor/editorCommands.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { LocalHistoryFileSystemProvider } from './localHistoryFileSystemProvider.js';\nimport { IWorkbenchEnvironmentService } from '../../../services/environment/common/environmentService.js';\nimport { SaveSourceRegistry } from '../../../common/editor.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { COMPARE_WITH_FILE_LABEL, toDiffEditorArguments } from './localHistoryCommands.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { getLocalHistoryDateFormatter, LOCAL_HISTORY_ICON_ENTRY, LOCAL_HISTORY_MENU_CONTEXT_VALUE } from './localHistory.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nimport { getVirtualWorkspaceAuthority } from '../../../../platform/workspace/common/virtualWorkspace.js';\n\nexport class LocalHistoryTimeline extends Disposable implements IWorkbenchContribution, TimelineProvider {\n\n\tstatic readonly ID = 'workbench.contrib.localHistoryTimeline';\n\n\tprivate static readonly LOCAL_HISTORY_ENABLED_SETTINGS_KEY = 'workbench.localHistory.enabled';\n\n\treadonly id = 'timeline.localHistory';\n\n\treadonly label = localize('localHistory', \"Local History\");\n\n\treadonly scheme = '*'; // we try to show local history for all schemes if possible\n\n\tprivate readonly _onDidChange = this._register(new Emitter<TimelineChangeEvent>());\n\treadonly onDidChange = this._onDidChange.event;\n\n\tprivate readonly timelineProviderDisposable = this._register(new MutableDisposable());\n\n\tconstructor(\n\t\t@ITimelineService private readonly timelineService: ITimelineService,\n\t\t@IWorkingCopyHistoryService private readonly workingCopyHistoryService: IWorkingCopyHistoryService,\n\t\t@IPathService private readonly pathService: IPathService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerComponents();\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerComponents(): void {\n\n\t\t// Timeline (if enabled)\n\t\tthis.updateTimelineRegistration();\n\n\t\t// File Service Provider\n\t\tthis._register(this.fileService.registerProvider(LocalHistoryFileSystemProvider.SCHEMA, new LocalHistoryFileSystemProvider(this.fileService)));\n\t}\n\n\tprivate updateTimelineRegistration(): void {\n\t\tif (this.configurationService.getValue<boolean>(LocalHistoryTimeline.LOCAL_HISTORY_ENABLED_SETTINGS_KEY)) {\n\t\t\tthis.timelineProviderDisposable.value = this.timelineService.registerTimelineProvider(this);\n\t\t} else {\n\t\t\tthis.timelineProviderDisposable.clear();\n\t\t}\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// History changes\n\t\tthis._register(this.workingCopyHistoryService.onDidAddEntry(e => this.onDidChangeWorkingCopyHistoryEntry(e.entry)));\n\t\tthis._register(this.workingCopyHistoryService.onDidChangeEntry(e => this.onDidChangeWorkingCopyHistoryEntry(e.entry)));\n\t\tthis._register(this.workingCopyHistoryService.onDidReplaceEntry(e => this.onDidChangeWorkingCopyHistoryEntry(e.entry)));\n\t\tthis._register(this.workingCopyHistoryService.onDidRemoveEntry(e => this.onDidChangeWorkingCopyHistoryEntry(e.entry)));\n\t\tthis._register(this.workingCopyHistoryService.onDidRemoveEntries(() => this.onDidChangeWorkingCopyHistoryEntry(undefined /* all entries */)));\n\t\tthis._register(this.workingCopyHistoryService.onDidMoveEntries(() => this.onDidChangeWorkingCopyHistoryEntry(undefined /* all entries */)));\n\n\t\t// Configuration changes\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(LocalHistoryTimeline.LOCAL_HISTORY_ENABLED_SETTINGS_KEY)) {\n\t\t\t\tthis.updateTimelineRegistration();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate onDidChangeWorkingCopyHistoryEntry(entry: IWorkingCopyHistoryEntry | undefined): void {\n\n\t\t// Re-emit as timeline change event\n\t\tthis._onDidChange.fire({\n\t\t\tid: this.id,\n\t\t\turi: entry?.workingCopy.resource,\n\t\t\treset: true // there is no other way to indicate that items might have been replaced/removed\n\t\t});\n\t}\n\n\tasync provideTimeline(uri: URI, options: TimelineOptions, token: CancellationToken): Promise<Timeline> {\n\t\tconst items: TimelineItem[] = [];\n\n\t\t// Try to convert the provided `uri` into a form that is likely\n\t\t// for the provider to find entries for so that we can ensure\n\t\t// the timeline is always providing local history entries\n\n\t\tlet resource: URI | undefined = undefined;\n\t\tif (uri.scheme === LocalHistoryFileSystemProvider.SCHEMA) {\n\t\t\t// `vscode-local-history`: convert back to the associated resource\n\t\t\tresource = LocalHistoryFileSystemProvider.fromLocalHistoryFileSystem(uri).associatedResource;\n\t\t} else if (uri.scheme === this.pathService.defaultUriScheme || uri.scheme === Schemas.vscodeUserData) {\n\t\t\t// default-scheme / settings: keep as is\n\t\t\tresource = uri;\n\t\t} else if (this.fileService.hasProvider(uri)) {\n\t\t\t// anything that is backed by a file system provider:\n\t\t\t// try best to convert the URI back into a form that is\n\t\t\t// likely to match the workspace URIs. That means:\n\t\t\t// - change to the default URI scheme\n\t\t\t// - change to the remote authority or virtual workspace authority\n\t\t\t// - preserve the path\n\t\t\tresource = URI.from({\n\t\t\t\tscheme: this.pathService.defaultUriScheme,\n\t\t\t\tauthority: this.environmentService.remoteAuthority ?? getVirtualWorkspaceAuthority(this.contextService.getWorkspace()),\n\t\t\t\tpath: uri.path\n\t\t\t});\n\t\t}\n\n\t\tif (resource) {\n\n\t\t\t// Retrieve from working copy history\n\t\t\tconst entries = await this.workingCopyHistoryService.getEntries(resource, token);\n\n\t\t\t// Convert to timeline items\n\t\t\tfor (const entry of entries) {\n\t\t\t\titems.push(this.toTimelineItem(entry));\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tsource: this.id,\n\t\t\titems\n\t\t};\n\t}\n\n\tprivate toTimelineItem(entry: IWorkingCopyHistoryEntry): TimelineItem {\n\t\treturn {\n\t\t\thandle: entry.id,\n\t\t\tlabel: SaveSourceRegistry.getSourceLabel(entry.source),\n\t\t\ttooltip: new MarkdownString(`$(history) ${getLocalHistoryDateFormatter().format(entry.timestamp)}\\n\\n${SaveSourceRegistry.getSourceLabel(entry.source)}${entry.sourceDescription ? ` (${entry.sourceDescription})` : ``}`, { supportThemeIcons: true }),\n\t\t\tsource: this.id,\n\t\t\ttimestamp: entry.timestamp,\n\t\t\tthemeIcon: LOCAL_HISTORY_ICON_ENTRY,\n\t\t\tcontextValue: LOCAL_HISTORY_MENU_CONTEXT_VALUE,\n\t\t\tcommand: {\n\t\t\t\tid: API_OPEN_DIFF_EDITOR_COMMAND_ID,\n\t\t\t\ttitle: COMPARE_WITH_FILE_LABEL.value,\n\t\t\t\targuments: toDiffEditorArguments(entry, entry.workingCopy.resource)\n\t\t\t}\n\t\t};\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,gBAAgB;AACzB,SAAS,eAAe;AACxB,SAAS,yBAAyB;AAClC,SAAS,YAAY,yBAAyB;AAC9C,SAAS,8BAA8B;AACvC,SAAS,kBAAkB,UAAU,qBAAqB,cAAc,iBAAiB,wBAAwB;AACjH,SAAS,0BAA0B,kCAAkC;AACrE,SAAS,WAAW;AACpB,SAAS,oBAAoB;AAC7B,SAAS,uCAAuC;AAChD,SAAS,oBAAoB;AAC7B,SAAS,sCAAsC;AAC/C,SAAS,oCAAoC;AAC7C,SAAS,0BAA0B;AACnC,SAAS,6BAA6B;AACtC,SAAS,yBAAyB,6BAA6B;AAC/D,SAAS,sBAAsB;AAC/B,SAAS,8BAA8B,0BAA0B,wCAAwC;AACzG,SAAS,eAAe;AACxB,SAAS,gCAAgC;AACzC,SAAS,oCAAoC;AAEtC,IAAM,uBAAN,cAAmC,WAA+D;AAAA,EAiBxG,YACoC,iBACU,2BACd,aACA,aACgB,oBACP,sBACG,gBAC1C;AACD,UAAM;AAR6B;AACU;AACd;AACA;AACgB;AACP;AACG;AAI3C,SAAK,mBAAmB;AACxB,SAAK,kBAAkB;AAAA,EACxB;AAAA,EAzDD,OA2ByG;AAAA;AAAA;AAAA,EAExG,OAAgB,KAAK;AAAA,EAErB,OAAwB,qCAAqC;AAAA,EAEpD,KAAK;AAAA,EAEL,QAAQ,SAAS,gBAAgB,eAAe;AAAA,EAEhD,SAAS;AAAA;AAAA,EAED,eAAe,KAAK,UAAU,IAAI,QAA6B,CAAC;AAAA,EACxE,cAAc,KAAK,aAAa;AAAA,EAExB,6BAA6B,KAAK,UAAU,IAAI,kBAAkB,CAAC;AAAA,EAiB5E,qBAA2B;AAGlC,SAAK,2BAA2B;AAGhC,SAAK,UAAU,KAAK,YAAY,iBAAiB,+BAA+B,QAAQ,IAAI,+BAA+B,KAAK,WAAW,CAAC,CAAC;AAAA,EAC9I;AAAA,EAEQ,6BAAmC;AAC1C,QAAI,KAAK,qBAAqB,SAAkB,qBAAqB,kCAAkC,GAAG;AACzG,WAAK,2BAA2B,QAAQ,KAAK,gBAAgB,yBAAyB,IAAI;AAAA,IAC3F,OAAO;AACN,WAAK,2BAA2B,MAAM;AAAA,IACvC;AAAA,EACD;AAAA,EAEQ,oBAA0B;AAGjC,SAAK,UAAU,KAAK,0BAA0B,cAAc,OAAK,KAAK,mCAAmC,EAAE,KAAK,CAAC,CAAC;AAClH,SAAK,UAAU,KAAK,0BAA0B,iBAAiB,OAAK,KAAK,mCAAmC,EAAE,KAAK,CAAC,CAAC;AACrH,SAAK,UAAU,KAAK,0BAA0B,kBAAkB,OAAK,KAAK,mCAAmC,EAAE,KAAK,CAAC,CAAC;AACtH,SAAK,UAAU,KAAK,0BAA0B,iBAAiB,OAAK,KAAK,mCAAmC,EAAE,KAAK,CAAC,CAAC;AACrH,SAAK,UAAU,KAAK,0BAA0B,mBAAmB,MAAM,KAAK;AAAA,MAAmC;AAAA;AAAA,IAA2B,CAAC,CAAC;AAC5I,SAAK,UAAU,KAAK,0BAA0B,iBAAiB,MAAM,KAAK;AAAA,MAAmC;AAAA;AAAA,IAA2B,CAAC,CAAC;AAG1I,SAAK,UAAU,KAAK,qBAAqB,yBAAyB,OAAK;AACtE,UAAI,EAAE,qBAAqB,qBAAqB,kCAAkC,GAAG;AACpF,aAAK,2BAA2B;AAAA,MACjC;AAAA,IACD,CAAC,CAAC;AAAA,EACH;AAAA,EAEQ,mCAAmC,OAAmD;AAG7F,SAAK,aAAa,KAAK;AAAA,MACtB,IAAI,KAAK;AAAA,MACT,KAAK,OAAO,YAAY;AAAA,MACxB,OAAO;AAAA;AAAA,IACR,CAAC;AAAA,EACF;AAAA,EAEA,MAAM,gBAAgB,KAAU,SAA0B,OAA6C;AACtG,UAAM,QAAwB,CAAC;AAM/B,QAAI,WAA4B;AAChC,QAAI,IAAI,WAAW,+BAA+B,QAAQ;AAEzD,iBAAW,+BAA+B,2BAA2B,GAAG,EAAE;AAAA,IAC3E,WAAW,IAAI,WAAW,KAAK,YAAY,oBAAoB,IAAI,WAAW,QAAQ,gBAAgB;AAErG,iBAAW;AAAA,IACZ,WAAW,KAAK,YAAY,YAAY,GAAG,GAAG;AAO7C,iBAAW,IAAI,KAAK;AAAA,QACnB,QAAQ,KAAK,YAAY;AAAA,QACzB,WAAW,KAAK,mBAAmB,mBAAmB,6BAA6B,KAAK,eAAe,aAAa,CAAC;AAAA,QACrH,MAAM,IAAI;AAAA,MACX,CAAC;AAAA,IACF;AAEA,QAAI,UAAU;AAGb,YAAM,UAAU,MAAM,KAAK,0BAA0B,WAAW,UAAU,KAAK;AAG/E,iBAAW,SAAS,SAAS;AAC5B,cAAM,KAAK,KAAK,eAAe,KAAK,CAAC;AAAA,MACtC;AAAA,IACD;AAEA,WAAO;AAAA,MACN,QAAQ,KAAK;AAAA,MACb;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,eAAe,OAA+C;AACrE,WAAO;AAAA,MACN,QAAQ,MAAM;AAAA,MACd,OAAO,mBAAmB,eAAe,MAAM,MAAM;AAAA,MACrD,SAAS,IAAI,eAAe,cAAc,6BAA6B,EAAE,OAAO,MAAM,SAAS,CAAC;AAAA;AAAA,EAAO,mBAAmB,eAAe,MAAM,MAAM,CAAC,GAAG,MAAM,oBAAoB,KAAK,MAAM,iBAAiB,MAAM,EAAE,IAAI,EAAE,mBAAmB,KAAK,CAAC;AAAA,MACtP,QAAQ,KAAK;AAAA,MACb,WAAW,MAAM;AAAA,MACjB,WAAW;AAAA,MACX,cAAc;AAAA,MACd,SAAS;AAAA,QACR,IAAI;AAAA,QACJ,OAAO,wBAAwB;AAAA,QAC/B,WAAW,sBAAsB,OAAO,MAAM,YAAY,QAAQ;AAAA,MACnE;AAAA,IACD;AAAA,EACD;AACD;AA1Ia,uBAAN;AAAA,EAkBJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAxBU;",
  "names": []
}
