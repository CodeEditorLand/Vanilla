var d=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var l=(m,n,e,t)=>{for(var i=t>1?void 0:t?y(n,e):n,s=m.length-1,r;s>=0;s--)(r=m[s])&&(i=(t?r(n,e,i):r(i))||i);return t&&i&&d(n,e,i),i},o=(m,n)=>(e,t)=>n(e,t,m);import"../../../../base/common/cancellation.js";import{Emitter as g}from"../../../../base/common/event.js";import{MarkdownString as S}from"../../../../base/common/htmlContent.js";import{Disposable as C,MutableDisposable as f}from"../../../../base/common/lifecycle.js";import{Schemas as u}from"../../../../base/common/network.js";import{URI as E}from"../../../../base/common/uri.js";import{localize as I}from"../../../../nls.js";import{IConfigurationService as _}from"../../../../platform/configuration/common/configuration.js";import{IFileService as D}from"../../../../platform/files/common/files.js";import{getVirtualWorkspaceAuthority as k}from"../../../../platform/workspace/common/virtualWorkspace.js";import{IWorkspaceContextService as T}from"../../../../platform/workspace/common/workspace.js";import{API_OPEN_DIFF_EDITOR_COMMAND_ID as H}from"../../../browser/parts/editor/editorCommands.js";import"../../../common/contributions.js";import{SaveSourceRegistry as v}from"../../../common/editor.js";import{IWorkbenchEnvironmentService as b}from"../../../services/environment/common/environmentService.js";import{IPathService as W}from"../../../services/path/common/pathService.js";import{IWorkingCopyHistoryService as L}from"../../../services/workingCopy/common/workingCopyHistory.js";import{ITimelineService as A}from"../../timeline/common/timeline.js";import{getLocalHistoryDateFormatter as R,LOCAL_HISTORY_ICON_ENTRY as w,LOCAL_HISTORY_MENU_CONTEXT_VALUE as O}from"./localHistory.js";import{COMPARE_WITH_FILE_LABEL as P,toDiffEditorArguments as N}from"./localHistoryCommands.js";import{LocalHistoryFileSystemProvider as c}from"./localHistoryFileSystemProvider.js";let a=class extends C{constructor(e,t,i,s,r,p,h){super();this.timelineService=e;this.workingCopyHistoryService=t;this.pathService=i;this.fileService=s;this.environmentService=r;this.configurationService=p;this.contextService=h;this.registerComponents(),this.registerListeners()}static ID="workbench.contrib.localHistoryTimeline";static LOCAL_HISTORY_ENABLED_SETTINGS_KEY="workbench.localHistory.enabled";id="timeline.localHistory";label=I("localHistory","Local History");scheme="*";_onDidChange=this._register(new g);onDidChange=this._onDidChange.event;timelineProviderDisposable=this._register(new f);registerComponents(){this.updateTimelineRegistration(),this._register(this.fileService.registerProvider(c.SCHEMA,new c(this.fileService)))}updateTimelineRegistration(){this.configurationService.getValue(a.LOCAL_HISTORY_ENABLED_SETTINGS_KEY)?this.timelineProviderDisposable.value=this.timelineService.registerTimelineProvider(this):this.timelineProviderDisposable.clear()}registerListeners(){this._register(this.workingCopyHistoryService.onDidAddEntry(e=>this.onDidChangeWorkingCopyHistoryEntry(e.entry))),this._register(this.workingCopyHistoryService.onDidChangeEntry(e=>this.onDidChangeWorkingCopyHistoryEntry(e.entry))),this._register(this.workingCopyHistoryService.onDidReplaceEntry(e=>this.onDidChangeWorkingCopyHistoryEntry(e.entry))),this._register(this.workingCopyHistoryService.onDidRemoveEntry(e=>this.onDidChangeWorkingCopyHistoryEntry(e.entry))),this._register(this.workingCopyHistoryService.onDidRemoveEntries(()=>this.onDidChangeWorkingCopyHistoryEntry(void 0))),this._register(this.workingCopyHistoryService.onDidMoveEntries(()=>this.onDidChangeWorkingCopyHistoryEntry(void 0))),this._register(this.configurationService.onDidChangeConfiguration(e=>{e.affectsConfiguration(a.LOCAL_HISTORY_ENABLED_SETTINGS_KEY)&&this.updateTimelineRegistration()}))}onDidChangeWorkingCopyHistoryEntry(e){this._onDidChange.fire({id:this.id,uri:e?.workingCopy.resource,reset:!0})}async provideTimeline(e,t,i){const s=[];let r;if(e.scheme===c.SCHEMA?r=c.fromLocalHistoryFileSystem(e).associatedResource:e.scheme===this.pathService.defaultUriScheme||e.scheme===u.vscodeUserData?r=e:this.fileService.hasProvider(e)&&(r=E.from({scheme:this.pathService.defaultUriScheme,authority:this.environmentService.remoteAuthority??k(this.contextService.getWorkspace()),path:e.path})),r){const p=await this.workingCopyHistoryService.getEntries(r,i);for(const h of p)s.push(this.toTimelineItem(h))}return{source:this.id,items:s}}toTimelineItem(e){return{handle:e.id,label:v.getSourceLabel(e.source),tooltip:new S(`$(history) ${R().format(e.timestamp)}

${v.getSourceLabel(e.source)}${e.sourceDescription?` (${e.sourceDescription})`:""}`,{supportThemeIcons:!0}),source:this.id,timestamp:e.timestamp,themeIcon:w,contextValue:O,command:{id:H,title:P.value,arguments:N(e,e.workingCopy.resource)}}}};a=l([o(0,A),o(1,L),o(2,W),o(3,D),o(4,b),o(5,_),o(6,T)],a);export{a as LocalHistoryTimeline};
