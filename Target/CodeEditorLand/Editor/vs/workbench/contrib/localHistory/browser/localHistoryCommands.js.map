{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/localHistory/browser/localHistoryCommands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from \"../../../../base/common/arrays.js\";\nimport {\n\tCancellationToken,\n\tCancellationTokenSource,\n} from \"../../../../base/common/cancellation.js\";\nimport { toErrorMessage } from \"../../../../base/common/errorMessage.js\";\nimport { Event } from \"../../../../base/common/event.js\";\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { ResourceSet } from \"../../../../base/common/map.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport {\n\tbasename,\n\tbasenameOrAuthority,\n\tdirname,\n} from \"../../../../base/common/resources.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport type { ServicesAccessor } from \"../../../../editor/browser/editorExtensions.js\";\nimport { ILanguageService } from \"../../../../editor/common/languages/language.js\";\nimport { getIconClasses } from \"../../../../editor/common/services/getIconClasses.js\";\nimport { IModelService } from \"../../../../editor/common/services/model.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tMenuRegistry,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport {\n\tContextKeyExpr,\n\tIContextKeyService,\n\tRawContextKey,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IDialogService } from \"../../../../platform/dialogs/common/dialogs.js\";\nimport type { IEditorOptions } from \"../../../../platform/editor/common/editor.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport { ILabelService } from \"../../../../platform/label/common/label.js\";\nimport {\n\tIQuickInputService,\n\ttype IQuickPickItem,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { API_OPEN_DIFF_EDITOR_COMMAND_ID } from \"../../../browser/parts/editor/editorCommands.js\";\nimport {\n\tActiveEditorContext,\n\tResourceContextKey,\n} from \"../../../common/contextkeys.js\";\nimport {\n\tEditorResourceAccessor,\n\tSaveSourceRegistry,\n\tSideBySideEditor,\n} from \"../../../common/editor.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { IHistoryService } from \"../../../services/history/common/history.js\";\nimport { IPathService } from \"../../../services/path/common/pathService.js\";\nimport {\n\ttype IWorkingCopyHistoryEntry,\n\tIWorkingCopyHistoryService,\n} from \"../../../services/workingCopy/common/workingCopyHistory.js\";\nimport { IWorkingCopyService } from \"../../../services/workingCopy/common/workingCopyService.js\";\nimport {\n\tLOCAL_HISTORY_ICON_RESTORE,\n\tLOCAL_HISTORY_MENU_CONTEXT_KEY,\n\tgetLocalHistoryDateFormatter,\n} from \"./localHistory.js\";\nimport { LocalHistoryFileSystemProvider } from \"./localHistoryFileSystemProvider.js\";\n\nconst LOCAL_HISTORY_CATEGORY = localize2(\n\t\"localHistory.category\",\n\t\"Local History\",\n);\nconst CTX_LOCAL_HISTORY_ENABLED = ContextKeyExpr.has(\n\t\"config.workbench.localHistory.enabled\",\n);\n\nexport interface ITimelineCommandArgument {\n\turi: URI;\n\thandle: string;\n}\n\n//#region Compare with File\n\nexport const COMPARE_WITH_FILE_LABEL = localize2(\n\t\"localHistory.compareWithFile\",\n\t\"Compare with File\",\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.action.localHistory.compareWithFile\",\n\t\t\t\ttitle: COMPARE_WITH_FILE_LABEL,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.TimelineItemContext,\n\t\t\t\t\tgroup: \"1_compare\",\n\t\t\t\t\torder: 1,\n\t\t\t\t\twhen: LOCAL_HISTORY_MENU_CONTEXT_KEY,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tasync run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\titem: ITimelineCommandArgument,\n\t\t): Promise<void> {\n\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\tconst workingCopyHistoryService = accessor.get(\n\t\t\t\tIWorkingCopyHistoryService,\n\t\t\t);\n\n\t\t\tconst { entry } = await findLocalHistoryEntry(\n\t\t\t\tworkingCopyHistoryService,\n\t\t\t\titem,\n\t\t\t);\n\t\t\tif (entry) {\n\t\t\t\treturn commandService.executeCommand(\n\t\t\t\t\tAPI_OPEN_DIFF_EDITOR_COMMAND_ID,\n\t\t\t\t\t...toDiffEditorArguments(entry, entry.workingCopy.resource),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n);\n\n//#endregion\n\n//#region Compare with Previous\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.action.localHistory.compareWithPrevious\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"localHistory.compareWithPrevious\",\n\t\t\t\t\t\"Compare with Previous\",\n\t\t\t\t),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.TimelineItemContext,\n\t\t\t\t\tgroup: \"1_compare\",\n\t\t\t\t\torder: 2,\n\t\t\t\t\twhen: LOCAL_HISTORY_MENU_CONTEXT_KEY,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tasync run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\titem: ITimelineCommandArgument,\n\t\t): Promise<void> {\n\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\tconst workingCopyHistoryService = accessor.get(\n\t\t\t\tIWorkingCopyHistoryService,\n\t\t\t);\n\t\t\tconst editorService = accessor.get(IEditorService);\n\n\t\t\tconst { entry, previous } = await findLocalHistoryEntry(\n\t\t\t\tworkingCopyHistoryService,\n\t\t\t\titem,\n\t\t\t);\n\t\t\tif (entry) {\n\t\t\t\t// Without a previous entry, just show the entry directly\n\t\t\t\tif (!previous) {\n\t\t\t\t\treturn openEntry(entry, editorService);\n\t\t\t\t}\n\n\t\t\t\t// Open real diff editor\n\t\t\t\treturn commandService.executeCommand(\n\t\t\t\t\tAPI_OPEN_DIFF_EDITOR_COMMAND_ID,\n\t\t\t\t\t...toDiffEditorArguments(previous, entry),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n);\n\n//#endregion\n\n//#region Select for Compare / Compare with Selected\n\nlet itemSelectedForCompare: ITimelineCommandArgument | undefined;\n\nconst LocalHistoryItemSelectedForCompare = new RawContextKey<boolean>(\n\t\"localHistoryItemSelectedForCompare\",\n\tfalse,\n\ttrue,\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.action.localHistory.selectForCompare\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"localHistory.selectForCompare\",\n\t\t\t\t\t\"Select for Compare\",\n\t\t\t\t),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.TimelineItemContext,\n\t\t\t\t\tgroup: \"2_compare_with\",\n\t\t\t\t\torder: 2,\n\t\t\t\t\twhen: LOCAL_HISTORY_MENU_CONTEXT_KEY,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tasync run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\titem: ITimelineCommandArgument,\n\t\t): Promise<void> {\n\t\t\tconst workingCopyHistoryService = accessor.get(\n\t\t\t\tIWorkingCopyHistoryService,\n\t\t\t);\n\t\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\n\t\t\tconst { entry } = await findLocalHistoryEntry(\n\t\t\t\tworkingCopyHistoryService,\n\t\t\t\titem,\n\t\t\t);\n\t\t\tif (entry) {\n\t\t\t\titemSelectedForCompare = item;\n\t\t\t\tLocalHistoryItemSelectedForCompare.bindTo(\n\t\t\t\t\tcontextKeyService,\n\t\t\t\t).set(true);\n\t\t\t}\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.action.localHistory.compareWithSelected\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"localHistory.compareWithSelected\",\n\t\t\t\t\t\"Compare with Selected\",\n\t\t\t\t),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.TimelineItemContext,\n\t\t\t\t\tgroup: \"2_compare_with\",\n\t\t\t\t\torder: 1,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tLOCAL_HISTORY_MENU_CONTEXT_KEY,\n\t\t\t\t\t\tLocalHistoryItemSelectedForCompare,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tasync run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\titem: ITimelineCommandArgument,\n\t\t): Promise<void> {\n\t\t\tconst workingCopyHistoryService = accessor.get(\n\t\t\t\tIWorkingCopyHistoryService,\n\t\t\t);\n\t\t\tconst commandService = accessor.get(ICommandService);\n\n\t\t\tif (!itemSelectedForCompare) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selectedEntry = (\n\t\t\t\tawait findLocalHistoryEntry(\n\t\t\t\t\tworkingCopyHistoryService,\n\t\t\t\t\titemSelectedForCompare,\n\t\t\t\t)\n\t\t\t).entry;\n\t\t\tif (!selectedEntry) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { entry } = await findLocalHistoryEntry(\n\t\t\t\tworkingCopyHistoryService,\n\t\t\t\titem,\n\t\t\t);\n\t\t\tif (entry) {\n\t\t\t\treturn commandService.executeCommand(\n\t\t\t\t\tAPI_OPEN_DIFF_EDITOR_COMMAND_ID,\n\t\t\t\t\t...toDiffEditorArguments(selectedEntry, entry),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n);\n\n//#endregion\n\n//#region Show Contents\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.action.localHistory.open\",\n\t\t\t\ttitle: localize2(\"localHistory.open\", \"Show Contents\"),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.TimelineItemContext,\n\t\t\t\t\tgroup: \"3_contents\",\n\t\t\t\t\torder: 1,\n\t\t\t\t\twhen: LOCAL_HISTORY_MENU_CONTEXT_KEY,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tasync run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\titem: ITimelineCommandArgument,\n\t\t): Promise<void> {\n\t\t\tconst workingCopyHistoryService = accessor.get(\n\t\t\t\tIWorkingCopyHistoryService,\n\t\t\t);\n\t\t\tconst editorService = accessor.get(IEditorService);\n\n\t\t\tconst { entry } = await findLocalHistoryEntry(\n\t\t\t\tworkingCopyHistoryService,\n\t\t\t\titem,\n\t\t\t);\n\t\t\tif (entry) {\n\t\t\t\treturn openEntry(entry, editorService);\n\t\t\t}\n\t\t}\n\t},\n);\n\n//#region Restore Contents\n\nconst RESTORE_CONTENTS_LABEL = localize2(\n\t\"localHistory.restore\",\n\t\"Restore Contents\",\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.action.localHistory.restoreViaEditor\",\n\t\t\t\ttitle: RESTORE_CONTENTS_LABEL,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\torder: -10,\n\t\t\t\t\twhen: ResourceContextKey.Scheme.isEqualTo(\n\t\t\t\t\t\tLocalHistoryFileSystemProvider.SCHEMA,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\ticon: LOCAL_HISTORY_ICON_RESTORE,\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor, uri: URI): Promise<void> {\n\t\t\tconst { associatedResource, location } =\n\t\t\t\tLocalHistoryFileSystemProvider.fromLocalHistoryFileSystem(uri);\n\n\t\t\treturn restore(accessor, {\n\t\t\t\turi: associatedResource,\n\t\t\t\thandle: basenameOrAuthority(location),\n\t\t\t});\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.action.localHistory.restore\",\n\t\t\t\ttitle: RESTORE_CONTENTS_LABEL,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.TimelineItemContext,\n\t\t\t\t\tgroup: \"3_contents\",\n\t\t\t\t\torder: 2,\n\t\t\t\t\twhen: LOCAL_HISTORY_MENU_CONTEXT_KEY,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tasync run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\titem: ITimelineCommandArgument,\n\t\t): Promise<void> {\n\t\t\treturn restore(accessor, item);\n\t\t}\n\t},\n);\n\nconst restoreSaveSource = SaveSourceRegistry.registerSource(\n\t\"localHistoryRestore.source\",\n\tlocalize(\"localHistoryRestore.source\", \"File Restored\"),\n);\n\nasync function restore(\n\taccessor: ServicesAccessor,\n\titem: ITimelineCommandArgument,\n): Promise<void> {\n\tconst fileService = accessor.get(IFileService);\n\tconst dialogService = accessor.get(IDialogService);\n\tconst workingCopyService = accessor.get(IWorkingCopyService);\n\tconst workingCopyHistoryService = accessor.get(IWorkingCopyHistoryService);\n\tconst editorService = accessor.get(IEditorService);\n\n\tconst { entry } = await findLocalHistoryEntry(\n\t\tworkingCopyHistoryService,\n\t\titem,\n\t);\n\tif (entry) {\n\t\t// Ask for confirmation\n\t\tconst { confirmed } = await dialogService.confirm({\n\t\t\ttype: \"warning\",\n\t\t\tmessage: localize(\n\t\t\t\t\"confirmRestoreMessage\",\n\t\t\t\t\"Do you want to restore the contents of '{0}'?\",\n\t\t\t\tbasename(entry.workingCopy.resource),\n\t\t\t),\n\t\t\tdetail: localize(\n\t\t\t\t\"confirmRestoreDetail\",\n\t\t\t\t\"Restoring will discard any unsaved changes.\",\n\t\t\t),\n\t\t\tprimaryButton: localize(\n\t\t\t\t{\n\t\t\t\t\tkey: \"restoreButtonLabel\",\n\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t},\n\t\t\t\t\"&&Restore\",\n\t\t\t),\n\t\t});\n\n\t\tif (!confirmed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Revert all dirty working copies for target\n\t\tconst workingCopies = workingCopyService.getAll(\n\t\t\tentry.workingCopy.resource,\n\t\t);\n\t\tif (workingCopies) {\n\t\t\tfor (const workingCopy of workingCopies) {\n\t\t\t\tif (workingCopy.isDirty()) {\n\t\t\t\t\tawait workingCopy.revert({ soft: true });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Replace target with contents of history entry\n\t\ttry {\n\t\t\tawait fileService.cloneFile(\n\t\t\t\tentry.location,\n\t\t\t\tentry.workingCopy.resource,\n\t\t\t);\n\t\t} catch (error) {\n\t\t\t// It is possible that we fail to copy the history entry to the\n\t\t\t// destination, for example when the destination is write protected.\n\t\t\t// In that case tell the user and return, it is still possible for\n\t\t\t// the user to manually copy the changes over from the diff editor.\n\n\t\t\tawait dialogService.error(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"unableToRestore\",\n\t\t\t\t\t\"Unable to restore '{0}'.\",\n\t\t\t\t\tbasename(entry.workingCopy.resource),\n\t\t\t\t),\n\t\t\t\ttoErrorMessage(error),\n\t\t\t);\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Restore all working copies for target\n\t\tif (workingCopies) {\n\t\t\tfor (const workingCopy of workingCopies) {\n\t\t\t\tawait workingCopy.revert({ force: true });\n\t\t\t}\n\t\t}\n\n\t\t// Open target\n\t\tawait editorService.openEditor({\n\t\t\tresource: entry.workingCopy.resource,\n\t\t});\n\n\t\t// Add new entry\n\t\tawait workingCopyHistoryService.addEntry(\n\t\t\t{\n\t\t\t\tresource: entry.workingCopy.resource,\n\t\t\t\tsource: restoreSaveSource,\n\t\t\t},\n\t\t\tCancellationToken.None,\n\t\t);\n\n\t\t// Close source\n\t\tawait closeEntry(entry, editorService);\n\t}\n}\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.action.localHistory.restoreViaPicker\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"localHistory.restoreViaPicker\",\n\t\t\t\t\t\"Find Entry to Restore\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: LOCAL_HISTORY_CATEGORY,\n\t\t\t\tprecondition: CTX_LOCAL_HISTORY_ENABLED,\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst workingCopyHistoryService = accessor.get(\n\t\t\t\tIWorkingCopyHistoryService,\n\t\t\t);\n\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\tconst modelService = accessor.get(IModelService);\n\t\t\tconst languageService = accessor.get(ILanguageService);\n\t\t\tconst labelService = accessor.get(ILabelService);\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst fileService = accessor.get(IFileService);\n\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\t\t// Show all resources with associated history entries in picker\n\t\t\t// with progress because this operation will take longer the more\n\t\t\t// files have been saved overall.\n\t\t\t//\n\t\t\t// Sort the resources by history to put more relevant entries\n\t\t\t// to the top.\n\n\t\t\tconst resourcePickerDisposables = new DisposableStore();\n\t\t\tconst resourcePicker = resourcePickerDisposables.add(\n\t\t\t\tquickInputService.createQuickPick<\n\t\t\t\t\tIQuickPickItem & { resource: URI }\n\t\t\t\t>(),\n\t\t\t);\n\n\t\t\tlet cts = new CancellationTokenSource();\n\t\t\tresourcePickerDisposables.add(\n\t\t\t\tresourcePicker.onDidHide(() => cts.dispose(true)),\n\t\t\t);\n\n\t\t\tresourcePicker.busy = true;\n\t\t\tresourcePicker.show();\n\n\t\t\tconst resources = new ResourceSet(\n\t\t\t\tawait workingCopyHistoryService.getAll(cts.token),\n\t\t\t);\n\t\t\tconst recentEditorResources = new ResourceSet(\n\t\t\t\tcoalesce(\n\t\t\t\t\thistoryService.getHistory().map(({ resource }) => resource),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tconst resourcesSortedByRecency: URI[] = [];\n\t\t\tfor (const resource of recentEditorResources) {\n\t\t\t\tif (resources.has(resource)) {\n\t\t\t\t\tresourcesSortedByRecency.push(resource);\n\t\t\t\t\tresources.delete(resource);\n\t\t\t\t}\n\t\t\t}\n\t\t\tresourcesSortedByRecency.push(\n\t\t\t\t...[...resources].sort((r1, r2) =>\n\t\t\t\t\tr1.fsPath < r2.fsPath ? -1 : 1,\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tresourcePicker.busy = false;\n\t\t\tresourcePicker.placeholder = localize(\n\t\t\t\t\"restoreViaPicker.filePlaceholder\",\n\t\t\t\t\"Select the file to show local history for\",\n\t\t\t);\n\t\t\tresourcePicker.matchOnLabel = true;\n\t\t\tresourcePicker.matchOnDescription = true;\n\t\t\tresourcePicker.items = [...resourcesSortedByRecency].map(\n\t\t\t\t(resource) => ({\n\t\t\t\t\tresource,\n\t\t\t\t\tlabel: basenameOrAuthority(resource),\n\t\t\t\t\tdescription: labelService.getUriLabel(dirname(resource), {\n\t\t\t\t\t\trelative: true,\n\t\t\t\t\t}),\n\t\t\t\t\ticonClasses: getIconClasses(\n\t\t\t\t\t\tmodelService,\n\t\t\t\t\t\tlanguageService,\n\t\t\t\t\t\tresource,\n\t\t\t\t\t),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tawait Event.toPromise(resourcePicker.onDidAccept);\n\t\t\tresourcePickerDisposables.dispose();\n\n\t\t\tconst resource = resourcePicker.selectedItems.at(0)?.resource;\n\t\t\tif (!resource) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Show all entries for the picked resource in another picker\n\t\t\t// and open the entry in the end that was selected by the user\n\n\t\t\tconst entryPickerDisposables = new DisposableStore();\n\t\t\tconst entryPicker = entryPickerDisposables.add(\n\t\t\t\tquickInputService.createQuickPick<\n\t\t\t\t\tIQuickPickItem & { entry: IWorkingCopyHistoryEntry }\n\t\t\t\t>(),\n\t\t\t);\n\n\t\t\tcts = new CancellationTokenSource();\n\t\t\tentryPickerDisposables.add(\n\t\t\t\tentryPicker.onDidHide(() => cts.dispose(true)),\n\t\t\t);\n\n\t\t\tentryPicker.busy = true;\n\t\t\tentryPicker.show();\n\n\t\t\tconst entries = await workingCopyHistoryService.getEntries(\n\t\t\t\tresource,\n\t\t\t\tcts.token,\n\t\t\t);\n\n\t\t\tentryPicker.busy = false;\n\t\t\tentryPicker.canAcceptInBackground = true;\n\t\t\tentryPicker.placeholder = localize(\n\t\t\t\t\"restoreViaPicker.entryPlaceholder\",\n\t\t\t\t\"Select the local history entry to open\",\n\t\t\t);\n\t\t\tentryPicker.matchOnLabel = true;\n\t\t\tentryPicker.matchOnDescription = true;\n\t\t\tentryPicker.items = Array.from(entries)\n\t\t\t\t.reverse()\n\t\t\t\t.map((entry) => ({\n\t\t\t\t\tentry,\n\t\t\t\t\tlabel: `$(circle-outline) ${SaveSourceRegistry.getSourceLabel(entry.source)}`,\n\t\t\t\t\tdescription: toLocalHistoryEntryDateLabel(entry.timestamp),\n\t\t\t\t}));\n\n\t\t\tentryPickerDisposables.add(\n\t\t\t\tentryPicker.onDidAccept(async (e) => {\n\t\t\t\t\tif (!e.inBackground) {\n\t\t\t\t\t\tentryPickerDisposables.dispose();\n\t\t\t\t\t}\n\n\t\t\t\t\tconst selectedItem = entryPicker.selectedItems.at(0);\n\t\t\t\t\tif (!selectedItem) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst resourceExists = await fileService.exists(\n\t\t\t\t\t\tselectedItem.entry.workingCopy.resource,\n\t\t\t\t\t);\n\t\t\t\t\tif (resourceExists) {\n\t\t\t\t\t\treturn commandService.executeCommand(\n\t\t\t\t\t\t\tAPI_OPEN_DIFF_EDITOR_COMMAND_ID,\n\t\t\t\t\t\t\t...toDiffEditorArguments(\n\t\t\t\t\t\t\t\tselectedItem.entry,\n\t\t\t\t\t\t\t\tselectedItem.entry.workingCopy.resource,\n\t\t\t\t\t\t\t\t{ preserveFocus: e.inBackground },\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn openEntry(selectedItem.entry, editorService, {\n\t\t\t\t\t\tpreserveFocus: e.inBackground,\n\t\t\t\t\t});\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t},\n);\n\nMenuRegistry.appendMenuItem(MenuId.TimelineTitle, {\n\tcommand: {\n\t\tid: \"workbench.action.localHistory.restoreViaPicker\",\n\t\ttitle: localize2(\n\t\t\t\"localHistory.restoreViaPickerMenu\",\n\t\t\t\"Local History: Find Entry to Restore...\",\n\t\t),\n\t},\n\tgroup: \"submenu\",\n\torder: 1,\n\twhen: CTX_LOCAL_HISTORY_ENABLED,\n});\n\n//#endregion\n\n//#region Rename\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.action.localHistory.rename\",\n\t\t\t\ttitle: localize2(\"localHistory.rename\", \"Rename\"),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.TimelineItemContext,\n\t\t\t\t\tgroup: \"5_edit\",\n\t\t\t\t\torder: 1,\n\t\t\t\t\twhen: LOCAL_HISTORY_MENU_CONTEXT_KEY,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tasync run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\titem: ITimelineCommandArgument,\n\t\t): Promise<void> {\n\t\t\tconst workingCopyHistoryService = accessor.get(\n\t\t\t\tIWorkingCopyHistoryService,\n\t\t\t);\n\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\t\tconst { entry } = await findLocalHistoryEntry(\n\t\t\t\tworkingCopyHistoryService,\n\t\t\t\titem,\n\t\t\t);\n\t\t\tif (entry) {\n\t\t\t\tconst disposables = new DisposableStore();\n\t\t\t\tconst inputBox = disposables.add(\n\t\t\t\t\tquickInputService.createInputBox(),\n\t\t\t\t);\n\t\t\t\tinputBox.title = localize(\n\t\t\t\t\t\"renameLocalHistoryEntryTitle\",\n\t\t\t\t\t\"Rename Local History Entry\",\n\t\t\t\t);\n\t\t\t\tinputBox.ignoreFocusOut = true;\n\t\t\t\tinputBox.placeholder = localize(\n\t\t\t\t\t\"renameLocalHistoryPlaceholder\",\n\t\t\t\t\t\"Enter the new name of the local history entry\",\n\t\t\t\t);\n\t\t\t\tinputBox.value = SaveSourceRegistry.getSourceLabel(\n\t\t\t\t\tentry.source,\n\t\t\t\t);\n\t\t\t\tinputBox.show();\n\t\t\t\tdisposables.add(\n\t\t\t\t\tinputBox.onDidAccept(() => {\n\t\t\t\t\t\tif (inputBox.value) {\n\t\t\t\t\t\t\tworkingCopyHistoryService.updateEntry(\n\t\t\t\t\t\t\t\tentry,\n\t\t\t\t\t\t\t\t{ source: inputBox.value },\n\t\t\t\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdisposables.dispose();\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n);\n\n//#endregion\n\n//#region Delete\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.action.localHistory.delete\",\n\t\t\t\ttitle: localize2(\"localHistory.delete\", \"Delete\"),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.TimelineItemContext,\n\t\t\t\t\tgroup: \"5_edit\",\n\t\t\t\t\torder: 2,\n\t\t\t\t\twhen: LOCAL_HISTORY_MENU_CONTEXT_KEY,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tasync run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\titem: ITimelineCommandArgument,\n\t\t): Promise<void> {\n\t\t\tconst workingCopyHistoryService = accessor.get(\n\t\t\t\tIWorkingCopyHistoryService,\n\t\t\t);\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst dialogService = accessor.get(IDialogService);\n\n\t\t\tconst { entry } = await findLocalHistoryEntry(\n\t\t\t\tworkingCopyHistoryService,\n\t\t\t\titem,\n\t\t\t);\n\t\t\tif (entry) {\n\t\t\t\t// Ask for confirmation\n\t\t\t\tconst { confirmed } = await dialogService.confirm({\n\t\t\t\t\ttype: \"warning\",\n\t\t\t\t\tmessage: localize(\n\t\t\t\t\t\t\"confirmDeleteMessage\",\n\t\t\t\t\t\t\"Do you want to delete the local history entry of '{0}' from {1}?\",\n\t\t\t\t\t\tentry.workingCopy.name,\n\t\t\t\t\t\ttoLocalHistoryEntryDateLabel(entry.timestamp),\n\t\t\t\t\t),\n\t\t\t\t\tdetail: localize(\n\t\t\t\t\t\t\"confirmDeleteDetail\",\n\t\t\t\t\t\t\"This action is irreversible!\",\n\t\t\t\t\t),\n\t\t\t\t\tprimaryButton: localize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"deleteButtonLabel\",\n\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"&&Delete\",\n\t\t\t\t\t),\n\t\t\t\t});\n\n\t\t\t\tif (!confirmed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Remove via service\n\t\t\t\tawait workingCopyHistoryService.removeEntry(\n\t\t\t\t\tentry,\n\t\t\t\t\tCancellationToken.None,\n\t\t\t\t);\n\n\t\t\t\t// Close any opened editors\n\t\t\t\tawait closeEntry(entry, editorService);\n\t\t\t}\n\t\t}\n\t},\n);\n\n//#endregion\n\n//#region Delete All\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.action.localHistory.deleteAll\",\n\t\t\t\ttitle: localize2(\"localHistory.deleteAll\", \"Delete All\"),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: LOCAL_HISTORY_CATEGORY,\n\t\t\t\tprecondition: CTX_LOCAL_HISTORY_ENABLED,\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst dialogService = accessor.get(IDialogService);\n\t\t\tconst workingCopyHistoryService = accessor.get(\n\t\t\t\tIWorkingCopyHistoryService,\n\t\t\t);\n\n\t\t\t// Ask for confirmation\n\t\t\tconst { confirmed } = await dialogService.confirm({\n\t\t\t\ttype: \"warning\",\n\t\t\t\tmessage: localize(\n\t\t\t\t\t\"confirmDeleteAllMessage\",\n\t\t\t\t\t\"Do you want to delete all entries of all files in local history?\",\n\t\t\t\t),\n\t\t\t\tdetail: localize(\n\t\t\t\t\t\"confirmDeleteAllDetail\",\n\t\t\t\t\t\"This action is irreversible!\",\n\t\t\t\t),\n\t\t\t\tprimaryButton: localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"deleteAllButtonLabel\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"&&Delete All\",\n\t\t\t\t),\n\t\t\t});\n\n\t\t\tif (!confirmed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Remove via service\n\t\t\tawait workingCopyHistoryService.removeAll(CancellationToken.None);\n\t\t}\n\t},\n);\n\n//#endregion\n\n//#region Create\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.action.localHistory.create\",\n\t\t\t\ttitle: localize2(\"localHistory.create\", \"Create Entry\"),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: LOCAL_HISTORY_CATEGORY,\n\t\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\t\tCTX_LOCAL_HISTORY_ENABLED,\n\t\t\t\t\tActiveEditorContext,\n\t\t\t\t),\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst workingCopyHistoryService = accessor.get(\n\t\t\t\tIWorkingCopyHistoryService,\n\t\t\t);\n\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst labelService = accessor.get(ILabelService);\n\t\t\tconst pathService = accessor.get(IPathService);\n\n\t\t\tconst resource = EditorResourceAccessor.getOriginalUri(\n\t\t\t\teditorService.activeEditor,\n\t\t\t\t{ supportSideBySide: SideBySideEditor.PRIMARY },\n\t\t\t);\n\t\t\tif (\n\t\t\t\tresource?.scheme !== pathService.defaultUriScheme &&\n\t\t\t\tresource?.scheme !== Schemas.vscodeUserData\n\t\t\t) {\n\t\t\t\treturn; // only enable for selected schemes\n\t\t\t}\n\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tconst inputBox = disposables.add(\n\t\t\t\tquickInputService.createInputBox(),\n\t\t\t);\n\t\t\tinputBox.title = localize(\n\t\t\t\t\"createLocalHistoryEntryTitle\",\n\t\t\t\t\"Create Local History Entry\",\n\t\t\t);\n\t\t\tinputBox.ignoreFocusOut = true;\n\t\t\tinputBox.placeholder = localize(\n\t\t\t\t\"createLocalHistoryPlaceholder\",\n\t\t\t\t\"Enter the new name of the local history entry for '{0}'\",\n\t\t\t\tlabelService.getUriBasenameLabel(resource),\n\t\t\t);\n\t\t\tinputBox.show();\n\t\t\tdisposables.add(\n\t\t\t\tinputBox.onDidAccept(async () => {\n\t\t\t\t\tconst entrySource = inputBox.value;\n\t\t\t\t\tdisposables.dispose();\n\n\t\t\t\t\tif (entrySource) {\n\t\t\t\t\t\tawait workingCopyHistoryService.addEntry(\n\t\t\t\t\t\t\t{ resource, source: inputBox.value },\n\t\t\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t},\n);\n\n//#endregion\n\n//#region Helpers\n\nasync function openEntry(\n\tentry: IWorkingCopyHistoryEntry,\n\teditorService: IEditorService,\n\toptions?: IEditorOptions,\n): Promise<void> {\n\tconst resource = LocalHistoryFileSystemProvider.toLocalHistoryFileSystem({\n\t\tlocation: entry.location,\n\t\tassociatedResource: entry.workingCopy.resource,\n\t});\n\n\tawait editorService.openEditor({\n\t\tresource,\n\t\tlabel: localize(\n\t\t\t\"localHistoryEditorLabel\",\n\t\t\t\"{0} ({1} \u2022 {2})\",\n\t\t\tentry.workingCopy.name,\n\t\t\tSaveSourceRegistry.getSourceLabel(entry.source),\n\t\t\ttoLocalHistoryEntryDateLabel(entry.timestamp),\n\t\t),\n\t\toptions,\n\t});\n}\n\nasync function closeEntry(\n\tentry: IWorkingCopyHistoryEntry,\n\teditorService: IEditorService,\n): Promise<void> {\n\tconst resource = LocalHistoryFileSystemProvider.toLocalHistoryFileSystem({\n\t\tlocation: entry.location,\n\t\tassociatedResource: entry.workingCopy.resource,\n\t});\n\n\tconst editors = editorService.findEditors(resource, {\n\t\tsupportSideBySide: SideBySideEditor.ANY,\n\t});\n\tawait editorService.closeEditors(editors, { preserveFocus: true });\n}\n\nexport function toDiffEditorArguments(\n\tentry: IWorkingCopyHistoryEntry,\n\tresource: URI,\n\toptions?: IEditorOptions,\n): unknown[];\nexport function toDiffEditorArguments(\n\tpreviousEntry: IWorkingCopyHistoryEntry,\n\tentry: IWorkingCopyHistoryEntry,\n\toptions?: IEditorOptions,\n): unknown[];\nexport function toDiffEditorArguments(\n\targ1: IWorkingCopyHistoryEntry,\n\targ2: IWorkingCopyHistoryEntry | URI,\n\toptions?: IEditorOptions,\n): unknown[] {\n\t// Left hand side is always a working copy history entry\n\tconst originalResource =\n\t\tLocalHistoryFileSystemProvider.toLocalHistoryFileSystem({\n\t\t\tlocation: arg1.location,\n\t\t\tassociatedResource: arg1.workingCopy.resource,\n\t\t});\n\n\tlet label: string;\n\n\t// Right hand side depends on how the method was called\n\t// and is either another working copy history entry\n\t// or the file on disk.\n\n\tlet modifiedResource: URI;\n\n\t// Compare with file on disk\n\tif (URI.isUri(arg2)) {\n\t\tconst resource = arg2;\n\n\t\tmodifiedResource = resource;\n\t\tlabel = localize(\n\t\t\t\"localHistoryCompareToFileEditorLabel\",\n\t\t\t\"{0} ({1} \u2022 {2}) \u2194 {3}\",\n\t\t\targ1.workingCopy.name,\n\t\t\tSaveSourceRegistry.getSourceLabel(arg1.source),\n\t\t\ttoLocalHistoryEntryDateLabel(arg1.timestamp),\n\t\t\targ1.workingCopy.name,\n\t\t);\n\t}\n\n\t// Compare with another entry\n\telse {\n\t\tconst modified = arg2;\n\n\t\tmodifiedResource =\n\t\t\tLocalHistoryFileSystemProvider.toLocalHistoryFileSystem({\n\t\t\t\tlocation: modified.location,\n\t\t\t\tassociatedResource: modified.workingCopy.resource,\n\t\t\t});\n\t\tlabel = localize(\n\t\t\t\"localHistoryCompareToPreviousEditorLabel\",\n\t\t\t\"{0} ({1} \u2022 {2}) \u2194 {3} ({4} \u2022 {5})\",\n\t\t\targ1.workingCopy.name,\n\t\t\tSaveSourceRegistry.getSourceLabel(arg1.source),\n\t\t\ttoLocalHistoryEntryDateLabel(arg1.timestamp),\n\t\t\tmodified.workingCopy.name,\n\t\t\tSaveSourceRegistry.getSourceLabel(modified.source),\n\t\t\ttoLocalHistoryEntryDateLabel(modified.timestamp),\n\t\t);\n\t}\n\n\treturn [\n\t\toriginalResource,\n\t\tmodifiedResource,\n\t\tlabel,\n\t\toptions ? [undefined, options] : undefined,\n\t];\n}\n\nexport async function findLocalHistoryEntry(\n\tworkingCopyHistoryService: IWorkingCopyHistoryService,\n\tdescriptor: ITimelineCommandArgument,\n): Promise<{\n\tentry: IWorkingCopyHistoryEntry | undefined;\n\tprevious: IWorkingCopyHistoryEntry | undefined;\n}> {\n\tconst entries = await workingCopyHistoryService.getEntries(\n\t\tdescriptor.uri,\n\t\tCancellationToken.None,\n\t);\n\n\tlet currentEntry: IWorkingCopyHistoryEntry | undefined;\n\tlet previousEntry: IWorkingCopyHistoryEntry | undefined;\n\tfor (let i = 0; i < entries.length; i++) {\n\t\tconst entry = entries[i];\n\n\t\tif (entry.id === descriptor.handle) {\n\t\t\tcurrentEntry = entry;\n\t\t\tpreviousEntry = entries[i - 1];\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn {\n\t\tentry: currentEntry,\n\t\tprevious: previousEntry,\n\t};\n}\n\nconst SEP = /\\//g;\nfunction toLocalHistoryEntryDateLabel(timestamp: number): string {\n\treturn `${getLocalHistoryDateFormatter().format(timestamp).replace(SEP, \"-\")}`; // preserving `/` will break editor labels, so replace it with a non-path symbol\n}\n\n//#endregion\n"],
  "mappings": "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",
  "names": ["resource"]
}
