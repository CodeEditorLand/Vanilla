{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/localHistory/electron-sandbox/localHistoryCommands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { isMacintosh, isWindows } from \"../../../../base/common/platform.js\";\nimport type { ServicesAccessor } from \"../../../../editor/browser/editorExtensions.js\";\nimport { localize2 } from \"../../../../nls.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { INativeHostService } from \"../../../../platform/native/common/native.js\";\nimport { ResourceContextKey } from \"../../../common/contextkeys.js\";\nimport { IWorkingCopyHistoryService } from \"../../../services/workingCopy/common/workingCopyHistory.js\";\nimport { LOCAL_HISTORY_MENU_CONTEXT_KEY } from \"../browser/localHistory.js\";\nimport {\n\ttype ITimelineCommandArgument,\n\tfindLocalHistoryEntry,\n} from \"../browser/localHistoryCommands.js\";\n\n//#region Delete\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.action.localHistory.revealInOS\",\n\t\t\t\ttitle: isWindows\n\t\t\t\t\t? localize2(\"revealInWindows\", \"Reveal in File Explorer\")\n\t\t\t\t\t: isMacintosh\n\t\t\t\t\t\t? localize2(\"revealInMac\", \"Reveal in Finder\")\n\t\t\t\t\t\t: localize2(\"openContainer\", \"Open Containing Folder\"),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.TimelineItemContext,\n\t\t\t\t\tgroup: \"4_reveal\",\n\t\t\t\t\torder: 1,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tLOCAL_HISTORY_MENU_CONTEXT_KEY,\n\t\t\t\t\t\tResourceContextKey.Scheme.isEqualTo(Schemas.file),\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tasync run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\titem: ITimelineCommandArgument,\n\t\t): Promise<void> {\n\t\t\tconst workingCopyHistoryService = accessor.get(\n\t\t\t\tIWorkingCopyHistoryService,\n\t\t\t);\n\t\t\tconst nativeHostService = accessor.get(INativeHostService);\n\n\t\t\tconst { entry } = await findLocalHistoryEntry(\n\t\t\t\tworkingCopyHistoryService,\n\t\t\t\titem,\n\t\t\t);\n\t\t\tif (entry) {\n\t\t\t\tawait nativeHostService.showItemInFolder(\n\t\t\t\t\tentry.location.with({ scheme: Schemas.file }).fsPath,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n);\n\n//#endregion\n"],
  "mappings": "AAKA,SAAS,eAAe;AACxB,SAAS,aAAa,iBAAiB;AAEvC,SAAS,iBAAiB;AAC1B;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,sBAAsB;AAC/B,SAAS,0BAA0B;AACnC,SAAS,0BAA0B;AACnC,SAAS,kCAAkC;AAC3C,SAAS,sCAAsC;AAC/C;AAAA,EAEC;AAAA,OACM;AAIP;AAAA,EACC,cAAc,QAAQ;AAAA,IACrB,cAAc;AACb,YAAM;AAAA,QACL,IAAI;AAAA,QACJ,OAAO,YACJ,UAAU,mBAAmB,yBAAyB,IACtD,cACC,UAAU,eAAe,kBAAkB,IAC3C,UAAU,iBAAiB,wBAAwB;AAAA,QACvD,MAAM;AAAA,UACL,IAAI,OAAO;AAAA,UACX,OAAO;AAAA,UACP,OAAO;AAAA,UACP,MAAM,eAAe;AAAA,YACpB;AAAA,YACA,mBAAmB,OAAO,UAAU,QAAQ,IAAI;AAAA,UACjD;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IACA,MAAM,IACL,UACA,MACgB;AAChB,YAAM,4BAA4B,SAAS;AAAA,QAC1C;AAAA,MACD;AACA,YAAM,oBAAoB,SAAS,IAAI,kBAAkB;AAEzD,YAAM,EAAE,MAAM,IAAI,MAAM;AAAA,QACvB;AAAA,QACA;AAAA,MACD;AACA,UAAI,OAAO;AACV,cAAM,kBAAkB;AAAA,UACvB,MAAM,SAAS,KAAK,EAAE,QAAQ,QAAQ,KAAK,CAAC,EAAE;AAAA,QAC/C;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;",
  "names": []
}
