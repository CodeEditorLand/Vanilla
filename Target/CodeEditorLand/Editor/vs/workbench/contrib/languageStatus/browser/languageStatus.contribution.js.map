{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/languageStatus/browser/languageStatus.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './media/languageStatus.css';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { renderLabelWithIcons } from '../../../../base/browser/ui/iconLabel/iconLabels.js';\nimport { Disposable, DisposableStore, dispose, toDisposable } from '../../../../base/common/lifecycle.js';\nimport Severity from '../../../../base/common/severity.js';\nimport { getCodeEditor, ICodeEditor } from '../../../../editor/browser/editorBrowser.js';\nimport { localize, localize2 } from '../../../../nls.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions, IWorkbenchContribution } from '../../../common/contributions.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { ILanguageStatus, ILanguageStatusService } from '../../../services/languageStatus/common/languageStatusService.js';\nimport { LifecyclePhase } from '../../../services/lifecycle/common/lifecycle.js';\nimport { IStatusbarEntry, IStatusbarEntryAccessor, IStatusbarService, ShowTooltipCommand, StatusbarAlignment, StatusbarEntryKind } from '../../../services/statusbar/browser/statusbar.js';\nimport { parseLinkedText } from '../../../../base/common/linkedText.js';\nimport { Link } from '../../../../platform/opener/browser/link.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { ActionBar } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { Action } from '../../../../base/common/actions.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../platform/storage/common/storage.js';\nimport { equals } from '../../../../base/common/arrays.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Action2, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { Categories } from '../../../../platform/action/common/actionCommonCategories.js';\nimport { IAccessibilityInformation } from '../../../../platform/accessibility/common/accessibility.js';\nimport { IEditorGroupsService, IEditorPart } from '../../../services/editor/common/editorGroupsService.js';\nimport { IHoverService, nativeHoverDelegate } from '../../../../platform/hover/browser/hover.js';\nimport { Event } from '../../../../base/common/event.js';\n\nclass LanguageStatusViewModel {\n\n\tconstructor(\n\t\treadonly combined: readonly ILanguageStatus[],\n\t\treadonly dedicated: readonly ILanguageStatus[]\n\t) { }\n\n\tisEqual(other: LanguageStatusViewModel) {\n\t\treturn equals(this.combined, other.combined) && equals(this.dedicated, other.dedicated);\n\t}\n}\n\nclass StoredCounter {\n\n\tconstructor(@IStorageService private readonly _storageService: IStorageService, private readonly _key: string) { }\n\n\tget value() {\n\t\treturn this._storageService.getNumber(this._key, StorageScope.PROFILE, 0);\n\t}\n\n\tincrement(): number {\n\t\tconst n = this.value + 1;\n\t\tthis._storageService.store(this._key, n, StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\treturn n;\n\t}\n}\n\nclass LanguageStatusContribution extends Disposable implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService,\n\t) {\n\t\tsuper();\n\n\t\tfor (const part of editorGroupService.parts) {\n\t\t\tthis.createLanguageStatus(part);\n\t\t}\n\n\t\tthis._register(editorGroupService.onDidCreateAuxiliaryEditorPart(part => this.createLanguageStatus(part)));\n\t}\n\n\tprivate createLanguageStatus(part: IEditorPart): void {\n\t\tconst disposables = new DisposableStore();\n\t\tEvent.once(part.onWillDispose)(() => disposables.dispose());\n\n\t\tconst scopedInstantiationService = this.editorGroupService.getScopedInstantiationService(part);\n\t\tdisposables.add(scopedInstantiationService.createInstance(LanguageStatus));\n\t}\n}\n\nclass LanguageStatus {\n\n\tprivate static readonly _id = 'status.languageStatus';\n\n\tprivate static readonly _keyDedicatedItems = 'languageStatus.dedicated';\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate readonly _interactionCounter: StoredCounter;\n\n\tprivate _dedicated = new Set<string>();\n\n\tprivate _model?: LanguageStatusViewModel;\n\tprivate _combinedEntry?: IStatusbarEntryAccessor;\n\tprivate _dedicatedEntries = new Map<string, IStatusbarEntryAccessor>();\n\tprivate readonly _renderDisposables = new DisposableStore();\n\n\tconstructor(\n\t\t@ILanguageStatusService private readonly _languageStatusService: ILanguageStatusService,\n\t\t@IStatusbarService private readonly _statusBarService: IStatusbarService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IHoverService private readonly _hoverService: IHoverService,\n\t\t@IOpenerService private readonly _openerService: IOpenerService,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t) {\n\t\t_storageService.onDidChangeValue(StorageScope.PROFILE, LanguageStatus._keyDedicatedItems, this._disposables)(this._handleStorageChange, this, this._disposables);\n\t\tthis._restoreState();\n\t\tthis._interactionCounter = new StoredCounter(_storageService, 'languageStatus.interactCount');\n\n\t\t_languageStatusService.onDidChange(this._update, this, this._disposables);\n\t\t_editorService.onDidActiveEditorChange(this._update, this, this._disposables);\n\t\tthis._update();\n\n\t\t_statusBarService.onDidChangeEntryVisibility(e => {\n\t\t\tif (!e.visible && this._dedicated.has(e.id)) {\n\t\t\t\tthis._dedicated.delete(e.id);\n\t\t\t\tthis._update();\n\t\t\t\tthis._storeState();\n\t\t\t}\n\t\t}, undefined, this._disposables);\n\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._combinedEntry?.dispose();\n\t\tdispose(this._dedicatedEntries.values());\n\t\tthis._renderDisposables.dispose();\n\t}\n\n\t// --- persisting dedicated items\n\n\tprivate _handleStorageChange() {\n\t\tthis._restoreState();\n\t\tthis._update();\n\t}\n\n\tprivate _restoreState(): void {\n\t\tconst raw = this._storageService.get(LanguageStatus._keyDedicatedItems, StorageScope.PROFILE, '[]');\n\t\ttry {\n\t\t\tconst ids = <string[]>JSON.parse(raw);\n\t\t\tthis._dedicated = new Set(ids);\n\t\t} catch {\n\t\t\tthis._dedicated.clear();\n\t\t}\n\t}\n\n\tprivate _storeState(): void {\n\t\tif (this._dedicated.size === 0) {\n\t\t\tthis._storageService.remove(LanguageStatus._keyDedicatedItems, StorageScope.PROFILE);\n\t\t} else {\n\t\t\tconst raw = JSON.stringify(Array.from(this._dedicated.keys()));\n\t\t\tthis._storageService.store(LanguageStatus._keyDedicatedItems, raw, StorageScope.PROFILE, StorageTarget.USER);\n\t\t}\n\t}\n\n\t// --- language status model and UI\n\n\tprivate _createViewModel(editor: ICodeEditor | null): LanguageStatusViewModel {\n\t\tif (!editor?.hasModel()) {\n\t\t\treturn new LanguageStatusViewModel([], []);\n\t\t}\n\t\tconst all = this._languageStatusService.getLanguageStatus(editor.getModel());\n\t\tconst combined: ILanguageStatus[] = [];\n\t\tconst dedicated: ILanguageStatus[] = [];\n\t\tfor (const item of all) {\n\t\t\tif (this._dedicated.has(item.id)) {\n\t\t\t\tdedicated.push(item);\n\t\t\t}\n\t\t\tcombined.push(item);\n\t\t}\n\t\treturn new LanguageStatusViewModel(combined, dedicated);\n\t}\n\n\tprivate _update(): void {\n\t\tconst editor = getCodeEditor(this._editorService.activeTextEditorControl);\n\t\tconst model = this._createViewModel(editor);\n\n\t\tif (this._model?.isEqual(model)) {\n\t\t\treturn;\n\t\t}\n\t\tthis._renderDisposables.clear();\n\n\t\tthis._model = model;\n\n\t\t// update when editor language changes\n\t\teditor?.onDidChangeModelLanguage(this._update, this, this._renderDisposables);\n\n\t\t// combined status bar item is a single item which hover shows\n\t\t// each status item\n\t\tif (model.combined.length === 0) {\n\t\t\t// nothing\n\t\t\tthis._combinedEntry?.dispose();\n\t\t\tthis._combinedEntry = undefined;\n\n\t\t} else {\n\t\t\tconst [first] = model.combined;\n\t\t\tconst showSeverity = first.severity >= Severity.Warning;\n\t\t\tconst text = LanguageStatus._severityToComboCodicon(first.severity);\n\n\t\t\tlet isOneBusy = false;\n\t\t\tconst ariaLabels: string[] = [];\n\t\t\tconst element = document.createElement('div');\n\t\t\tfor (const status of model.combined) {\n\t\t\t\tconst isPinned = model.dedicated.includes(status);\n\t\t\t\telement.appendChild(this._renderStatus(status, showSeverity, isPinned, this._renderDisposables));\n\t\t\t\tariaLabels.push(LanguageStatus._accessibilityInformation(status).label);\n\t\t\t\tisOneBusy = isOneBusy || (!isPinned && status.busy); // unpinned items contribute to the busy-indicator of the composite status item\n\t\t\t}\n\t\t\tconst props: IStatusbarEntry = {\n\t\t\t\tname: localize('langStatus.name', \"Editor Language Status\"),\n\t\t\t\tariaLabel: localize('langStatus.aria', \"Editor Language Status: {0}\", ariaLabels.join(', next: ')),\n\t\t\t\ttooltip: element,\n\t\t\t\tcommand: ShowTooltipCommand,\n\t\t\t\ttext: isOneBusy ? `${text}\\u00A0\\u00A0$(sync~spin)` : text,\n\t\t\t};\n\t\t\tif (!this._combinedEntry) {\n\t\t\t\tthis._combinedEntry = this._statusBarService.addEntry(props, LanguageStatus._id, StatusbarAlignment.RIGHT, { id: 'status.editor.mode', alignment: StatusbarAlignment.LEFT, compact: true });\n\t\t\t} else {\n\t\t\t\tthis._combinedEntry.update(props);\n\t\t\t}\n\n\t\t\t// animate the status bar icon whenever language status changes, repeat animation\n\t\t\t// when severity is warning or error, don't show animation when showing progress/busy\n\t\t\tconst userHasInteractedWithStatus = this._interactionCounter.value >= 3;\n\t\t\tconst targetWindow = dom.getWindow(editor?.getContainerDomNode());\n\t\t\tconst node = targetWindow.document.querySelector('.monaco-workbench .statusbar DIV#status\\\\.languageStatus A>SPAN.codicon');\n\t\t\tconst container = targetWindow.document.querySelector('.monaco-workbench .statusbar DIV#status\\\\.languageStatus');\n\t\t\tif (dom.isHTMLElement(node) && container) {\n\t\t\t\tconst _wiggle = 'wiggle';\n\t\t\t\tconst _flash = 'flash';\n\t\t\t\tif (!isOneBusy) {\n\t\t\t\t\t// wiggle icon when severe or \"new\"\n\t\t\t\t\tnode.classList.toggle(_wiggle, showSeverity || !userHasInteractedWithStatus);\n\t\t\t\t\tthis._renderDisposables.add(dom.addDisposableListener(node, 'animationend', _e => node.classList.remove(_wiggle)));\n\t\t\t\t\t// flash background when severe\n\t\t\t\t\tcontainer.classList.toggle(_flash, showSeverity);\n\t\t\t\t\tthis._renderDisposables.add(dom.addDisposableListener(container, 'animationend', _e => container.classList.remove(_flash)));\n\t\t\t\t} else {\n\t\t\t\t\tnode.classList.remove(_wiggle);\n\t\t\t\t\tcontainer.classList.remove(_flash);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// track when the hover shows (this is automagic and DOM mutation spying is needed...)\n\t\t\t//  use that as signal that the user has interacted/learned language status items work\n\t\t\tif (!userHasInteractedWithStatus) {\n\t\t\t\tconst hoverTarget = targetWindow.document.querySelector('.monaco-workbench .context-view');\n\t\t\t\tif (dom.isHTMLElement(hoverTarget)) {\n\t\t\t\t\tconst observer = new MutationObserver(() => {\n\t\t\t\t\t\tif (targetWindow.document.contains(element)) {\n\t\t\t\t\t\t\tthis._interactionCounter.increment();\n\t\t\t\t\t\t\tobserver.disconnect();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tobserver.observe(hoverTarget, { childList: true, subtree: true });\n\t\t\t\t\tthis._renderDisposables.add(toDisposable(() => observer.disconnect()));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// dedicated status bar items are shows as-is in the status bar\n\t\tconst newDedicatedEntries = new Map<string, IStatusbarEntryAccessor>();\n\t\tfor (const status of model.dedicated) {\n\t\t\tconst props = LanguageStatus._asStatusbarEntry(status);\n\t\t\tlet entry = this._dedicatedEntries.get(status.id);\n\t\t\tif (!entry) {\n\t\t\t\tentry = this._statusBarService.addEntry(props, status.id, StatusbarAlignment.RIGHT, { id: 'status.editor.mode', alignment: StatusbarAlignment.RIGHT });\n\t\t\t} else {\n\t\t\t\tentry.update(props);\n\t\t\t\tthis._dedicatedEntries.delete(status.id);\n\t\t\t}\n\t\t\tnewDedicatedEntries.set(status.id, entry);\n\t\t}\n\t\tdispose(this._dedicatedEntries.values());\n\t\tthis._dedicatedEntries = newDedicatedEntries;\n\t}\n\n\tprivate _renderStatus(status: ILanguageStatus, showSeverity: boolean, isPinned: boolean, store: DisposableStore): HTMLElement {\n\n\t\tconst parent = document.createElement('div');\n\t\tparent.classList.add('hover-language-status');\n\n\t\tconst severity = document.createElement('div');\n\t\tseverity.classList.add('severity', `sev${status.severity}`);\n\t\tseverity.classList.toggle('show', showSeverity);\n\t\tconst severityText = LanguageStatus._severityToSingleCodicon(status.severity);\n\t\tdom.append(severity, ...renderLabelWithIcons(severityText));\n\t\tparent.appendChild(severity);\n\n\t\tconst element = document.createElement('div');\n\t\telement.classList.add('element');\n\t\tparent.appendChild(element);\n\n\t\tconst left = document.createElement('div');\n\t\tleft.classList.add('left');\n\t\telement.appendChild(left);\n\n\t\tconst label = document.createElement('span');\n\t\tlabel.classList.add('label');\n\t\tconst labelValue = typeof status.label === 'string' ? status.label : status.label.value;\n\t\tdom.append(label, ...renderLabelWithIcons(status.busy ? `$(sync~spin)\\u00A0\\u00A0${labelValue}` : labelValue));\n\t\tleft.appendChild(label);\n\n\t\tconst detail = document.createElement('span');\n\t\tdetail.classList.add('detail');\n\t\tthis._renderTextPlus(detail, status.detail, store);\n\t\tleft.appendChild(detail);\n\n\t\tconst right = document.createElement('div');\n\t\tright.classList.add('right');\n\t\telement.appendChild(right);\n\n\t\t// -- command (if available)\n\t\tconst { command } = status;\n\t\tif (command) {\n\t\t\tstore.add(new Link(right, {\n\t\t\t\tlabel: command.title,\n\t\t\t\ttitle: command.tooltip,\n\t\t\t\thref: URI.from({\n\t\t\t\t\tscheme: 'command', path: command.id, query: command.arguments && JSON.stringify(command.arguments)\n\t\t\t\t}).toString()\n\t\t\t}, { hoverDelegate: nativeHoverDelegate }, this._hoverService, this._openerService));\n\t\t}\n\n\t\t// -- pin\n\t\tconst actionBar = new ActionBar(right, { hoverDelegate: nativeHoverDelegate });\n\t\tconst actionLabel: string = isPinned ? localize('unpin', \"Remove from Status Bar\") : localize('pin', \"Add to Status Bar\");\n\t\tactionBar.setAriaLabel(actionLabel);\n\t\tstore.add(actionBar);\n\t\tlet action: Action;\n\t\tif (!isPinned) {\n\t\t\taction = new Action('pin', actionLabel, ThemeIcon.asClassName(Codicon.pin), true, () => {\n\t\t\t\tthis._dedicated.add(status.id);\n\t\t\t\tthis._statusBarService.updateEntryVisibility(status.id, true);\n\t\t\t\tthis._update();\n\t\t\t\tthis._storeState();\n\t\t\t});\n\t\t} else {\n\t\t\taction = new Action('unpin', actionLabel, ThemeIcon.asClassName(Codicon.pinned), true, () => {\n\t\t\t\tthis._dedicated.delete(status.id);\n\t\t\t\tthis._statusBarService.updateEntryVisibility(status.id, false);\n\t\t\t\tthis._update();\n\t\t\t\tthis._storeState();\n\t\t\t});\n\t\t}\n\t\tactionBar.push(action, { icon: true, label: false });\n\t\tstore.add(action);\n\n\t\treturn parent;\n\t}\n\n\tprivate static _severityToComboCodicon(sev: Severity): string {\n\t\tswitch (sev) {\n\t\t\tcase Severity.Error: return '$(bracket-error)';\n\t\t\tcase Severity.Warning: return '$(bracket-dot)';\n\t\t\tdefault: return '$(bracket)';\n\t\t}\n\t}\n\n\tprivate static _severityToSingleCodicon(sev: Severity): string {\n\t\tswitch (sev) {\n\t\t\tcase Severity.Error: return '$(error)';\n\t\t\tcase Severity.Warning: return '$(info)';\n\t\t\tdefault: return '$(check)';\n\t\t}\n\t}\n\n\tprivate _renderTextPlus(target: HTMLElement, text: string, store: DisposableStore): void {\n\t\tfor (const node of parseLinkedText(text).nodes) {\n\t\t\tif (typeof node === 'string') {\n\t\t\t\tconst parts = renderLabelWithIcons(node);\n\t\t\t\tdom.append(target, ...parts);\n\t\t\t} else {\n\t\t\t\tstore.add(new Link(target, node, undefined, this._hoverService, this._openerService));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static _accessibilityInformation(status: ILanguageStatus): IAccessibilityInformation {\n\t\tif (status.accessibilityInfo) {\n\t\t\treturn status.accessibilityInfo;\n\t\t}\n\t\tconst textValue = typeof status.label === 'string' ? status.label : status.label.value;\n\t\tif (status.detail) {\n\t\t\treturn { label: localize('aria.1', '{0}, {1}', textValue, status.detail) };\n\t\t} else {\n\t\t\treturn { label: localize('aria.2', '{0}', textValue) };\n\t\t}\n\t}\n\n\t// ---\n\n\tprivate static _asStatusbarEntry(item: ILanguageStatus): IStatusbarEntry {\n\n\t\tlet kind: StatusbarEntryKind | undefined;\n\t\tif (item.severity === Severity.Warning) {\n\t\t\tkind = 'warning';\n\t\t} else if (item.severity === Severity.Error) {\n\t\t\tkind = 'error';\n\t\t}\n\n\t\tconst textValue = typeof item.label === 'string' ? item.label : item.label.shortValue;\n\n\t\treturn {\n\t\t\tname: localize('name.pattern', '{0} (Language Status)', item.name),\n\t\t\ttext: item.busy ? `${textValue}\\u00A0\\u00A0$(sync~spin)` : textValue,\n\t\t\tariaLabel: LanguageStatus._accessibilityInformation(item).label,\n\t\t\trole: item.accessibilityInfo?.role,\n\t\t\ttooltip: item.command?.tooltip || new MarkdownString(item.detail, { isTrusted: true, supportThemeIcons: true }),\n\t\t\tkind,\n\t\t\tcommand: item.command\n\t\t};\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(LanguageStatusContribution, LifecyclePhase.Restored);\n\nregisterAction2(class extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.inlayHints.Reset',\n\t\t\ttitle: localize2('reset', \"Reset Language Status Interaction Counter\"),\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(IStorageService).remove('languageStatus.interactCount', StorageScope.PROFILE);\n\t}\n});\n"],
  "mappings": "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",
  "names": []
}
