var C=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var u=(d,n,i,o)=>{for(var t=o>1?void 0:o?w(n,i):n,e=d.length-1,r;e>=0;e--)(r=d[e])&&(t=(o?r(n,i,t):r(t))||t);return o&&t&&C(n,i,t),t},a=(d,n)=>(i,o)=>n(i,o,d);import{dispose as k,Disposable as g,toDisposable as I}from"../../../../base/common/lifecycle.js";import{Extensions as T}from"../../../common/contributions.js";import{Registry as W}from"../../../../platform/registry/common/platform.js";import{TitleBarSetting as x,TitlebarStyle as f}from"../../../../platform/window/common/window.js";import{IHostService as v}from"../../../services/host/browser/host.js";import{ConfigurationTarget as E,IConfigurationService as D}from"../../../../platform/configuration/common/configuration.js";import{localize as c}from"../../../../nls.js";import{IWorkspaceContextService as F,WorkbenchState as R}from"../../../../platform/workspace/common/workspace.js";import{IExtensionService as P}from"../../../services/extensions/common/extensions.js";import{RunOnceScheduler as N}from"../../../../base/common/async.js";import{isEqual as U}from"../../../../base/common/resources.js";import{isMacintosh as b,isNative as h,isLinux as y}from"../../../../base/common/platform.js";import{LifecyclePhase as m}from"../../../services/lifecycle/common/lifecycle.js";import{IDialogService as A}from"../../../../platform/dialogs/common/dialogs.js";import{IWorkbenchEnvironmentService as O}from"../../../services/environment/common/environmentService.js";import{IProductService as L}from"../../../../platform/product/common/productService.js";let l=class extends g{constructor(i,o,t,e){super();this.hostService=i;this.configurationService=o;this.productService=t;this.dialogService=e;this.onConfigurationChange(void 0),this._register(this.configurationService.onDidChangeConfiguration(r=>this.onConfigurationChange(r)))}static SETTINGS=[x.TITLE_BAR_STYLE,"window.nativeTabs","window.nativeFullScreen","window.clickThroughInactive","window.experimentalControlOverlay","update.mode","editor.accessibilitySupport","security.workspace.trust.enabled","workbench.enableExperiments","_extensionsGallery.enablePPE","security.restrictUNCAccess","accessibility.verbosity.debug"];titleBarStyle=new s("string");nativeTabs=new s("boolean");nativeFullScreen=new s("boolean");clickThroughInactive=new s("boolean");linuxWindowControlOverlay=new s("boolean");updateMode=new s("string");accessibilitySupport;workspaceTrustEnabled=new s("boolean");experimentsEnabled=new s("boolean");enablePPEExtensionsGallery=new s("boolean");restrictUNCAccess=new s("boolean");accessibilityVerbosityDebug=new s("boolean");onConfigurationChange(i){if(i&&!l.SETTINGS.some(r=>i.affectsConfiguration(r)))return;let o=!1;function t(r){o=o||r}const e=this.configurationService.getValue();h&&(t((e.window.titleBarStyle===f.NATIVE||e.window.titleBarStyle===f.CUSTOM)&&this.titleBarStyle.handleChange(e.window?.titleBarStyle)),t(b&&this.nativeTabs.handleChange(e.window?.nativeTabs)),t(b&&this.nativeFullScreen.handleChange(e.window?.nativeFullScreen)),t(b&&this.clickThroughInactive.handleChange(e.window?.clickThroughInactive)),t(y&&this.linuxWindowControlOverlay.handleChange(e.window?.experimentalControlOverlay)),t(this.updateMode.handleChange(e.update?.mode)),y&&typeof e.editor?.accessibilitySupport=="string"&&e.editor.accessibilitySupport!==this.accessibilitySupport&&(this.accessibilitySupport=e.editor.accessibilitySupport,this.accessibilitySupport==="on"&&(o=!0)),t(this.workspaceTrustEnabled.handleChange(e?.security?.workspace?.trust?.enabled)),t(this.restrictUNCAccess.handleChange(e?.security?.restrictUNCAccess)),t(this.accessibilityVerbosityDebug.handleChange(e?.accessibility?.verbosity?.debug))),t(this.experimentsEnabled.handleChange(e.workbench?.enableExperiments)),t(this.productService.quality!=="stable"&&this.enablePPEExtensionsGallery.handleChange(e._extensionsGallery?.enablePPE)),o&&i&&i.source!==E.DEFAULT&&this.doConfirm(h?c("relaunchSettingMessage","A setting has changed that requires a restart to take effect."):c("relaunchSettingMessageWeb","A setting has changed that requires a reload to take effect."),h?c("relaunchSettingDetail","Press the restart button to restart {0} and enable the setting.",this.productService.nameLong):c("relaunchSettingDetailWeb","Press the reload button to reload {0} and enable the setting.",this.productService.nameLong),h?c({key:"restart",comment:["&& denotes a mnemonic"]},"&&Restart"):c({key:"restartWeb",comment:["&& denotes a mnemonic"]},"&&Reload"),()=>this.hostService.restart())}async doConfirm(i,o,t,e){if(this.hostService.hasFocus){const{confirmed:r}=await this.dialogService.confirm({message:i,detail:o,primaryButton:t});r&&e()}}};l=u([a(0,v),a(1,D),a(2,L),a(3,A)],l);class s{constructor(n){this.typeName=n}static create(n){return new s(n)}lastValue=void 0;handleChange(n){return typeof n===this.typeName&&n!==this.lastValue?(this.lastValue=n,!0):!1}}let p=class extends g{constructor(i,o,t,e){super();this.contextService=i;this.extensionHostRestarter=this._register(new N(async()=>{e.extensionTestsLocationURI||(e.remoteAuthority?t.reload():h&&await o.stopExtensionHosts(c("restartExtensionHost.reason","Restarting extension host due to a workspace folder change."))&&o.startExtensionHosts())},10)),this.contextService.getCompleteWorkspace().then(r=>{this.firstFolderResource=r.folders.length>0?r.folders[0].uri:void 0,this.handleWorkbenchState(),this._register(this.contextService.onDidChangeWorkbenchState(()=>setTimeout(()=>this.handleWorkbenchState())))}),this._register(I(()=>{this.onDidChangeWorkspaceFoldersUnbind?.dispose()}))}firstFolderResource;extensionHostRestarter;onDidChangeWorkspaceFoldersUnbind;handleWorkbenchState(){if(this.contextService.getWorkbenchState()===R.WORKSPACE){const i=this.contextService.getWorkspace();this.firstFolderResource=i.folders.length>0?i.folders[0].uri:void 0,this.onDidChangeWorkspaceFoldersUnbind||(this.onDidChangeWorkspaceFoldersUnbind=this.contextService.onDidChangeWorkspaceFolders(()=>this.onDidChangeWorkspaceFolders()))}else k(this.onDidChangeWorkspaceFoldersUnbind),this.onDidChangeWorkspaceFoldersUnbind=void 0}onDidChangeWorkspaceFolders(){const i=this.contextService.getWorkspace(),o=i.folders.length>0?i.folders[0].uri:void 0;U(this.firstFolderResource,o)||(this.firstFolderResource=o,this.extensionHostRestarter.schedule())}};p=u([a(0,F),a(1,P),a(2,v),a(3,O)],p);const S=W.as(T.Workbench);S.registerWorkbenchContribution(l,m.Restored),S.registerWorkbenchContribution(p,m.Restored);export{l as SettingsChangeRelauncher,p as WorkspaceChangeExtHostRelauncher};
