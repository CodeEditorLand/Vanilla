{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/relauncher/browser/relauncher.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from \"../../../../base/common/async.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n\tdispose,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport {\n\tisLinux,\n\tisMacintosh,\n\tisNative,\n} from \"../../../../base/common/platform.js\";\nimport { isEqual } from \"../../../../base/common/resources.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\tConfigurationTarget,\n\ttype IConfigurationChangeEvent,\n\tIConfigurationService,\n} from \"../../../../platform/configuration/common/configuration.js\";\nimport { IDialogService } from \"../../../../platform/dialogs/common/dialogs.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\ttype IWindowSettings,\n\ttype IWindowsConfiguration,\n\tTitleBarSetting,\n\tTitlebarStyle,\n} from \"../../../../platform/window/common/window.js\";\nimport {\n\tIWorkspaceContextService,\n\tWorkbenchState,\n} from \"../../../../platform/workspace/common/workspace.js\";\nimport {\n\ttype IWorkbenchContribution,\n\ttype IWorkbenchContributionsRegistry,\n\tExtensions as WorkbenchExtensions,\n} from \"../../../common/contributions.js\";\nimport { IWorkbenchEnvironmentService } from \"../../../services/environment/common/environmentService.js\";\nimport { IExtensionService } from \"../../../services/extensions/common/extensions.js\";\nimport { IHostService } from \"../../../services/host/browser/host.js\";\nimport { LifecyclePhase } from \"../../../services/lifecycle/common/lifecycle.js\";\n\ninterface IConfiguration extends IWindowsConfiguration {\n\tupdate?: { mode?: string };\n\tdebug?: { console?: { wordWrap?: boolean } };\n\teditor?: { accessibilitySupport?: \"on\" | \"off\" | \"auto\" };\n\tsecurity?: {\n\t\tworkspace?: { trust?: { enabled?: boolean } };\n\t\trestrictUNCAccess?: boolean;\n\t};\n\twindow: IWindowSettings;\n\tworkbench?: { enableExperiments?: boolean };\n\t_extensionsGallery?: { enablePPE?: boolean };\n\taccessibility?: { verbosity?: { debug?: boolean } };\n\tfiles?: { experimentalWatcherNext?: boolean };\n}\n\nexport class SettingsChangeRelauncher\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tprivate static SETTINGS = [\n\t\tTitleBarSetting.TITLE_BAR_STYLE,\n\t\t\"window.nativeTabs\",\n\t\t\"window.nativeFullScreen\",\n\t\t\"window.clickThroughInactive\",\n\t\t\"window.experimentalControlOverlay\",\n\t\t\"update.mode\",\n\t\t\"editor.accessibilitySupport\",\n\t\t\"security.workspace.trust.enabled\",\n\t\t\"workbench.enableExperiments\",\n\t\t\"_extensionsGallery.enablePPE\",\n\t\t\"security.restrictUNCAccess\",\n\t\t\"accessibility.verbosity.debug\",\n\t\t\"files.experimentalWatcherNext\",\n\t];\n\n\tprivate readonly titleBarStyle = new ChangeObserver<TitlebarStyle>(\n\t\t\"string\",\n\t);\n\tprivate readonly nativeTabs = new ChangeObserver(\"boolean\");\n\tprivate readonly nativeFullScreen = new ChangeObserver(\"boolean\");\n\tprivate readonly clickThroughInactive = new ChangeObserver(\"boolean\");\n\tprivate readonly linuxWindowControlOverlay = new ChangeObserver(\"boolean\");\n\tprivate readonly updateMode = new ChangeObserver(\"string\");\n\tprivate accessibilitySupport: \"on\" | \"off\" | \"auto\" | undefined;\n\tprivate readonly workspaceTrustEnabled = new ChangeObserver(\"boolean\");\n\tprivate readonly experimentsEnabled = new ChangeObserver(\"boolean\");\n\tprivate readonly enablePPEExtensionsGallery = new ChangeObserver(\"boolean\");\n\tprivate readonly restrictUNCAccess = new ChangeObserver(\"boolean\");\n\tprivate readonly accessibilityVerbosityDebug = new ChangeObserver(\n\t\t\"boolean\",\n\t);\n\tprivate readonly filesExperimentalWatcherNext = new ChangeObserver(\n\t\t\"boolean\",\n\t);\n\n\tconstructor(\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@IConfigurationService\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t) {\n\t\tsuper();\n\n\t\tthis.onConfigurationChange(undefined);\n\t\tthis._register(\n\t\t\tthis.configurationService.onDidChangeConfiguration((e) =>\n\t\t\t\tthis.onConfigurationChange(e),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate onConfigurationChange(\n\t\te: IConfigurationChangeEvent | undefined,\n\t): void {\n\t\tif (\n\t\t\te &&\n\t\t\t!SettingsChangeRelauncher.SETTINGS.some((key) =>\n\t\t\t\te.affectsConfiguration(key),\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet changed = false;\n\n\t\tfunction processChanged(didChange: boolean) {\n\t\t\tchanged = changed || didChange;\n\t\t}\n\n\t\tconst config = this.configurationService.getValue<IConfiguration>();\n\t\tif (isNative) {\n\t\t\t// Titlebar style\n\t\t\tprocessChanged(\n\t\t\t\t(config.window.titleBarStyle === TitlebarStyle.NATIVE ||\n\t\t\t\t\tconfig.window.titleBarStyle === TitlebarStyle.CUSTOM) &&\n\t\t\t\t\tthis.titleBarStyle.handleChange(\n\t\t\t\t\t\tconfig.window?.titleBarStyle,\n\t\t\t\t\t),\n\t\t\t);\n\n\t\t\t// macOS: Native tabs\n\t\t\tprocessChanged(\n\t\t\t\tisMacintosh &&\n\t\t\t\t\tthis.nativeTabs.handleChange(config.window?.nativeTabs),\n\t\t\t);\n\n\t\t\t// macOS: Native fullscreen\n\t\t\tprocessChanged(\n\t\t\t\tisMacintosh &&\n\t\t\t\t\tthis.nativeFullScreen.handleChange(\n\t\t\t\t\t\tconfig.window?.nativeFullScreen,\n\t\t\t\t\t),\n\t\t\t);\n\n\t\t\t// macOS: Click through (accept first mouse)\n\t\t\tprocessChanged(\n\t\t\t\tisMacintosh &&\n\t\t\t\t\tthis.clickThroughInactive.handleChange(\n\t\t\t\t\t\tconfig.window?.clickThroughInactive,\n\t\t\t\t\t),\n\t\t\t);\n\n\t\t\t// Linux: WCO\n\t\t\tprocessChanged(\n\t\t\t\tisLinux &&\n\t\t\t\t\tthis.linuxWindowControlOverlay.handleChange(\n\t\t\t\t\t\tconfig.window?.experimentalControlOverlay,\n\t\t\t\t\t),\n\t\t\t);\n\n\t\t\t// Update mode\n\t\t\tprocessChanged(this.updateMode.handleChange(config.update?.mode));\n\n\t\t\t// On linux turning on accessibility support will also pass this flag to the chrome renderer, thus a restart is required\n\t\t\tif (\n\t\t\t\tisLinux &&\n\t\t\t\ttypeof config.editor?.accessibilitySupport === \"string\" &&\n\t\t\t\tconfig.editor.accessibilitySupport !== this.accessibilitySupport\n\t\t\t) {\n\t\t\t\tthis.accessibilitySupport = config.editor.accessibilitySupport;\n\t\t\t\tif (this.accessibilitySupport === \"on\") {\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Workspace trust\n\t\t\tprocessChanged(\n\t\t\t\tthis.workspaceTrustEnabled.handleChange(\n\t\t\t\t\tconfig?.security?.workspace?.trust?.enabled,\n\t\t\t\t),\n\t\t\t);\n\n\t\t\t// UNC host access restrictions\n\t\t\tprocessChanged(\n\t\t\t\tthis.restrictUNCAccess.handleChange(\n\t\t\t\t\tconfig?.security?.restrictUNCAccess,\n\t\t\t\t),\n\t\t\t);\n\n\t\t\t// Debug accessibility verbosity\n\t\t\tprocessChanged(\n\t\t\t\tthis.accessibilityVerbosityDebug.handleChange(\n\t\t\t\t\tconfig?.accessibility?.verbosity?.debug,\n\t\t\t\t),\n\t\t\t);\n\n\t\t\t// File watcher next\n\t\t\tprocessChanged(\n\t\t\t\tthis.filesExperimentalWatcherNext.handleChange(\n\t\t\t\t\tconfig?.files?.experimentalWatcherNext,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\t// Experiments\n\t\tprocessChanged(\n\t\t\tthis.experimentsEnabled.handleChange(\n\t\t\t\tconfig.workbench?.enableExperiments,\n\t\t\t),\n\t\t);\n\n\t\t// Profiles\n\t\tprocessChanged(\n\t\t\tthis.productService.quality !== \"stable\" &&\n\t\t\t\tthis.enablePPEExtensionsGallery.handleChange(\n\t\t\t\t\tconfig._extensionsGallery?.enablePPE,\n\t\t\t\t),\n\t\t);\n\n\t\t// Notify only when changed from an event and the change\n\t\t// was not triggerd programmatically (e.g. from experiments)\n\t\tif (changed && e && e.source !== ConfigurationTarget.DEFAULT) {\n\t\t\tthis.doConfirm(\n\t\t\t\tisNative\n\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\"relaunchSettingMessage\",\n\t\t\t\t\t\t\t\"A setting has changed that requires a restart to take effect.\",\n\t\t\t\t\t\t)\n\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\"relaunchSettingMessageWeb\",\n\t\t\t\t\t\t\t\"A setting has changed that requires a reload to take effect.\",\n\t\t\t\t\t\t),\n\t\t\t\tisNative\n\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\"relaunchSettingDetail\",\n\t\t\t\t\t\t\t\"Press the restart button to restart {0} and enable the setting.\",\n\t\t\t\t\t\t\tthis.productService.nameLong,\n\t\t\t\t\t\t)\n\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\"relaunchSettingDetailWeb\",\n\t\t\t\t\t\t\t\"Press the reload button to reload {0} and enable the setting.\",\n\t\t\t\t\t\t\tthis.productService.nameLong,\n\t\t\t\t\t\t),\n\t\t\t\tisNative\n\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"restart\",\n\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"&&Restart\",\n\t\t\t\t\t\t)\n\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"restartWeb\",\n\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"&&Reload\",\n\t\t\t\t\t\t),\n\t\t\t\t() => this.hostService.restart(),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate async doConfirm(\n\t\tmessage: string,\n\t\tdetail: string,\n\t\tprimaryButton: string,\n\t\tconfirmedFn: () => void,\n\t): Promise<void> {\n\t\tif (this.hostService.hasFocus) {\n\t\t\tconst { confirmed } = await this.dialogService.confirm({\n\t\t\t\tmessage,\n\t\t\t\tdetail,\n\t\t\t\tprimaryButton,\n\t\t\t});\n\t\t\tif (confirmed) {\n\t\t\t\tconfirmedFn();\n\t\t\t}\n\t\t}\n\t}\n}\n\ninterface TypeNameToType {\n\treadonly boolean: boolean;\n\treadonly string: string;\n}\n\nclass ChangeObserver<T> {\n\tstatic create<TTypeName extends \"boolean\" | \"string\">(\n\t\ttypeName: TTypeName,\n\t): ChangeObserver<TypeNameToType[TTypeName]> {\n\t\treturn new ChangeObserver(typeName);\n\t}\n\n\tconstructor(private readonly typeName: string) {}\n\n\tprivate lastValue: T | undefined = undefined;\n\n\t/**\n\t * Returns if there was a change compared to the last value\n\t */\n\thandleChange(value: T | undefined): boolean {\n\t\tif (typeof value === this.typeName && value !== this.lastValue) {\n\t\t\tthis.lastValue = value;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport class WorkspaceChangeExtHostRelauncher\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tprivate firstFolderResource?: URI;\n\tprivate extensionHostRestarter: RunOnceScheduler;\n\n\tprivate onDidChangeWorkspaceFoldersUnbind: IDisposable | undefined;\n\n\tconstructor(\n\t\t@IWorkspaceContextService\n\t\tprivate readonly contextService: IWorkspaceContextService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IHostService hostService: IHostService,\n\t\t@IWorkbenchEnvironmentService\n\t\tenvironmentService: IWorkbenchEnvironmentService,\n\t) {\n\t\tsuper();\n\n\t\tthis.extensionHostRestarter = this._register(\n\t\t\tnew RunOnceScheduler(async () => {\n\t\t\t\tif (!!environmentService.extensionTestsLocationURI) {\n\t\t\t\t\treturn; // no restart when in tests: see https://github.com/microsoft/vscode/issues/66936\n\t\t\t\t}\n\n\t\t\t\tif (environmentService.remoteAuthority) {\n\t\t\t\t\thostService.reload(); // TODO@aeschli, workaround\n\t\t\t\t} else if (isNative) {\n\t\t\t\t\tconst stopped = await extensionService.stopExtensionHosts(\n\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\"restartExtensionHost.reason\",\n\t\t\t\t\t\t\t\"Restarting extension host due to a workspace folder change.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tif (stopped) {\n\t\t\t\t\t\textensionService.startExtensionHosts();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 10),\n\t\t);\n\n\t\tthis.contextService.getCompleteWorkspace().then((workspace) => {\n\t\t\tthis.firstFolderResource =\n\t\t\t\tworkspace.folders.length > 0\n\t\t\t\t\t? workspace.folders[0].uri\n\t\t\t\t\t: undefined;\n\t\t\tthis.handleWorkbenchState();\n\t\t\tthis._register(\n\t\t\t\tthis.contextService.onDidChangeWorkbenchState(() =>\n\t\t\t\t\tsetTimeout(() => this.handleWorkbenchState()),\n\t\t\t\t),\n\t\t\t);\n\t\t});\n\n\t\tthis._register(\n\t\t\ttoDisposable(() => {\n\t\t\t\tthis.onDidChangeWorkspaceFoldersUnbind?.dispose();\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate handleWorkbenchState(): void {\n\t\t// React to folder changes when we are in workspace state\n\t\tif (\n\t\t\tthis.contextService.getWorkbenchState() === WorkbenchState.WORKSPACE\n\t\t) {\n\t\t\t// Update our known first folder path if we entered workspace\n\t\t\tconst workspace = this.contextService.getWorkspace();\n\t\t\tthis.firstFolderResource =\n\t\t\t\tworkspace.folders.length > 0\n\t\t\t\t\t? workspace.folders[0].uri\n\t\t\t\t\t: undefined;\n\n\t\t\t// Install workspace folder listener\n\t\t\tif (!this.onDidChangeWorkspaceFoldersUnbind) {\n\t\t\t\tthis.onDidChangeWorkspaceFoldersUnbind =\n\t\t\t\t\tthis.contextService.onDidChangeWorkspaceFolders(() =>\n\t\t\t\t\t\tthis.onDidChangeWorkspaceFolders(),\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// Ignore the workspace folder changes in EMPTY or FOLDER state\n\t\telse {\n\t\t\tdispose(this.onDidChangeWorkspaceFoldersUnbind);\n\t\t\tthis.onDidChangeWorkspaceFoldersUnbind = undefined;\n\t\t}\n\t}\n\n\tprivate onDidChangeWorkspaceFolders(): void {\n\t\tconst workspace = this.contextService.getWorkspace();\n\n\t\t// Restart extension host if first root folder changed (impact on deprecated workspace.rootPath API)\n\t\tconst newFirstFolderResource =\n\t\t\tworkspace.folders.length > 0 ? workspace.folders[0].uri : undefined;\n\t\tif (!isEqual(this.firstFolderResource, newFirstFolderResource)) {\n\t\t\tthis.firstFolderResource = newFirstFolderResource;\n\n\t\t\tthis.extensionHostRestarter.schedule(); // buffer calls to extension host restart\n\t\t}\n\t}\n}\n\nconst workbenchRegistry = Registry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n);\nworkbenchRegistry.registerWorkbenchContribution(\n\tSettingsChangeRelauncher,\n\tLifecyclePhase.Restored,\n);\nworkbenchRegistry.registerWorkbenchContribution(\n\tWorkspaceChangeExtHostRelauncher,\n\tLifecyclePhase.Restored,\n);\n"],
  "mappings": "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",
  "names": []
}
