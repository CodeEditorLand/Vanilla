{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/sash/browser/sash.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { clamp } from '../../../../base/common/numbers.js';\nimport { setGlobalSashSize, setGlobalHoverDelay } from '../../../../base/browser/ui/sash/sash.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { DisposableStore, IDisposable } from '../../../../base/common/lifecycle.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IWorkbenchContribution } from '../../../common/contributions.js';\nimport { ILayoutService } from '../../../../platform/layout/browser/layoutService.js';\n\nexport const minSize = 1;\nexport const maxSize = 20; // see also https://ux.stackexchange.com/questions/39023/what-is-the-optimum-button-size-of-touch-screen-applications\n\nexport class SashSettingsController implements IWorkbenchContribution, IDisposable {\n\n\tprivate readonly disposables = new DisposableStore();\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ILayoutService private readonly layoutService: ILayoutService\n\t) {\n\t\tconst onDidChangeSize = Event.filter(configurationService.onDidChangeConfiguration, e => e.affectsConfiguration('workbench.sash.size'));\n\t\tonDidChangeSize(this.onDidChangeSize, this, this.disposables);\n\t\tthis.onDidChangeSize();\n\n\t\tconst onDidChangeHoverDelay = Event.filter(configurationService.onDidChangeConfiguration, e => e.affectsConfiguration('workbench.sash.hoverDelay'));\n\t\tonDidChangeHoverDelay(this.onDidChangeHoverDelay, this, this.disposables);\n\t\tthis.onDidChangeHoverDelay();\n\t}\n\n\tprivate onDidChangeSize(): void {\n\t\tconst configuredSize = this.configurationService.getValue<number>('workbench.sash.size');\n\t\tconst size = clamp(configuredSize, 4, 20);\n\t\tconst hoverSize = clamp(configuredSize, 1, 8);\n\n\t\tthis.layoutService.mainContainer.style.setProperty('--vscode-sash-size', size + 'px');\n\t\tthis.layoutService.mainContainer.style.setProperty('--vscode-sash-hover-size', hoverSize + 'px');\n\t\tsetGlobalSashSize(size);\n\t}\n\n\tprivate onDidChangeHoverDelay(): void {\n\t\tsetGlobalHoverDelay(this.configurationService.getValue<number>('workbench.sash.hoverDelay'));\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,aAAa;AACtB,SAAS,mBAAmB,2BAA2B;AACvD,SAAS,aAAa;AACtB,SAAS,iBAAiB,mBAAmB;AAC7C,SAAS,6BAA6B;AACtC,SAAS,8BAA8B;AACvC,SAAS,sBAAsB;AAExB,MAAM,UAAU;AAChB,MAAM,UAAU;AAEhB,IAAM,yBAAN,MAA4E;AAAA,EAIlF,YACyC,sBACP,eAChC;AAFuC;AACP;AAEjC,UAAM,kBAAkB,MAAM,OAAO,qBAAqB,0BAA0B,OAAK,EAAE,qBAAqB,qBAAqB,CAAC;AACtI,oBAAgB,KAAK,iBAAiB,MAAM,KAAK,WAAW;AAC5D,SAAK,gBAAgB;AAErB,UAAM,wBAAwB,MAAM,OAAO,qBAAqB,0BAA0B,OAAK,EAAE,qBAAqB,2BAA2B,CAAC;AAClJ,0BAAsB,KAAK,uBAAuB,MAAM,KAAK,WAAW;AACxE,SAAK,sBAAsB;AAAA,EAC5B;AAAA,EA/BD,OAgBmF;AAAA;AAAA;AAAA,EAEjE,cAAc,IAAI,gBAAgB;AAAA,EAe3C,kBAAwB;AAC/B,UAAM,iBAAiB,KAAK,qBAAqB,SAAiB,qBAAqB;AACvF,UAAM,OAAO,MAAM,gBAAgB,GAAG,EAAE;AACxC,UAAM,YAAY,MAAM,gBAAgB,GAAG,CAAC;AAE5C,SAAK,cAAc,cAAc,MAAM,YAAY,sBAAsB,OAAO,IAAI;AACpF,SAAK,cAAc,cAAc,MAAM,YAAY,4BAA4B,YAAY,IAAI;AAC/F,sBAAkB,IAAI;AAAA,EACvB;AAAA,EAEQ,wBAA8B;AACrC,wBAAoB,KAAK,qBAAqB,SAAiB,2BAA2B,CAAC;AAAA,EAC5F;AAAA,EAEA,UAAgB;AACf,SAAK,YAAY,QAAQ;AAAA,EAC1B;AACD;AAlCa,yBAAN;AAAA,EAKJ;AAAA,EACA;AAAA,GANU;",
  "names": []
}
