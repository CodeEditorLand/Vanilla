{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/languageDetection/browser/languageDetection.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ThrottledDelayer } from \"../../../../base/common/async.js\";\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { getCodeEditor } from \"../../../../editor/browser/editorBrowser.js\";\nimport type { ServicesAccessor } from \"../../../../editor/browser/editorExtensions.js\";\nimport { EditorContextKeys } from \"../../../../editor/common/editorContextKeys.js\";\nimport { ILanguageService } from \"../../../../editor/common/languages/language.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport {\n\tAction2,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { INotificationService } from \"../../../../platform/notification/common/notification.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\ttype IWorkbenchContribution,\n\ttype IWorkbenchContributionsRegistry,\n\tExtensions as WorkbenchExtensions,\n} from \"../../../common/contributions.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport {\n\tILanguageDetectionService,\n\ttype LanguageDetectionHintConfig,\n\tLanguageDetectionLanguageEventSource,\n} from \"../../../services/languageDetection/common/languageDetectionWorkerService.js\";\nimport { LifecyclePhase } from \"../../../services/lifecycle/common/lifecycle.js\";\nimport {\n\ttype IStatusbarEntry,\n\ttype IStatusbarEntryAccessor,\n\tIStatusbarService,\n\tStatusbarAlignment,\n} from \"../../../services/statusbar/browser/statusbar.js\";\nimport { NOTEBOOK_EDITOR_EDITABLE } from \"../../notebook/common/notebookContextKeys.js\";\n\nconst detectLanguageCommandId = \"editor.detectLanguage\";\n\nclass LanguageDetectionStatusContribution implements IWorkbenchContribution {\n\tprivate static readonly _id = \"status.languageDetectionStatus\";\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate _combinedEntry?: IStatusbarEntryAccessor;\n\tprivate _delayer = new ThrottledDelayer(1000);\n\tprivate readonly _renderDisposables = new DisposableStore();\n\n\tconstructor(\n\t\t@ILanguageDetectionService private readonly _languageDetectionService: ILanguageDetectionService,\n\t\t@IStatusbarService private readonly _statusBarService: IStatusbarService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t) {\n\t\t_editorService.onDidActiveEditorChange(() => this._update(true), this, this._disposables);\n\t\tthis._update(false);\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._delayer.dispose();\n\t\tthis._combinedEntry?.dispose();\n\t\tthis._renderDisposables.dispose();\n\t}\n\n\tprivate _update(clear: boolean): void {\n\t\tif (clear) {\n\t\t\tthis._combinedEntry?.dispose();\n\t\t\tthis._combinedEntry = undefined;\n\t\t}\n\t\tthis._delayer.trigger(() => this._doUpdate());\n\t}\n\n\tprivate async _doUpdate(): Promise<void> {\n\t\tconst editor = getCodeEditor(\n\t\t\tthis._editorService.activeTextEditorControl,\n\t\t);\n\n\t\tthis._renderDisposables.clear();\n\n\t\t// update when editor language changes\n\t\teditor?.onDidChangeModelLanguage(\n\t\t\t() => this._update(true),\n\t\t\tthis,\n\t\t\tthis._renderDisposables,\n\t\t);\n\t\teditor?.onDidChangeModelContent(\n\t\t\t() => this._update(false),\n\t\t\tthis,\n\t\t\tthis._renderDisposables,\n\t\t);\n\t\tconst editorModel = editor?.getModel();\n\t\tconst editorUri = editorModel?.uri;\n\t\tconst existingId = editorModel?.getLanguageId();\n\t\tconst enablementConfig =\n\t\t\tthis._configurationService.getValue<LanguageDetectionHintConfig>(\n\t\t\t\t\"workbench.editor.languageDetectionHints\",\n\t\t\t);\n\t\tconst enabled =\n\t\t\ttypeof enablementConfig === \"object\" &&\n\t\t\tenablementConfig?.untitledEditors;\n\t\tconst disableLightbulb =\n\t\t\t!enabled || editorUri?.scheme !== Schemas.untitled || !existingId;\n\n\t\tif (disableLightbulb || !editorUri) {\n\t\t\tthis._combinedEntry?.dispose();\n\t\t\tthis._combinedEntry = undefined;\n\t\t} else {\n\t\t\tconst lang =\n\t\t\t\tawait this._languageDetectionService.detectLanguage(editorUri);\n\t\t\tconst skip: Record<string, string | undefined> = { jsonc: \"json\" };\n\t\t\tconst existing = editorModel.getLanguageId();\n\t\t\tif (lang && lang !== existing && skip[existing] !== lang) {\n\t\t\t\tconst detectedName =\n\t\t\t\t\tthis._languageService.getLanguageName(lang) || lang;\n\t\t\t\tlet tooltip = localize(\n\t\t\t\t\t\"status.autoDetectLanguage\",\n\t\t\t\t\t\"Accept Detected Language: {0}\",\n\t\t\t\t\tdetectedName,\n\t\t\t\t);\n\t\t\t\tconst keybinding = this._keybindingService.lookupKeybinding(\n\t\t\t\t\tdetectLanguageCommandId,\n\t\t\t\t);\n\t\t\t\tconst label = keybinding?.getLabel();\n\t\t\t\tif (label) {\n\t\t\t\t\ttooltip += ` (${label})`;\n\t\t\t\t}\n\n\t\t\t\tconst props: IStatusbarEntry = {\n\t\t\t\t\tname: localize(\"langDetection.name\", \"Language Detection\"),\n\t\t\t\t\tariaLabel: localize(\n\t\t\t\t\t\t\"langDetection.aria\",\n\t\t\t\t\t\t\"Change to Detected Language: {0}\",\n\t\t\t\t\t\tlang,\n\t\t\t\t\t),\n\t\t\t\t\ttooltip,\n\t\t\t\t\tcommand: detectLanguageCommandId,\n\t\t\t\t\ttext: \"$(lightbulb-autofix)\",\n\t\t\t\t};\n\t\t\t\tif (this._combinedEntry) {\n\t\t\t\t\tthis._combinedEntry.update(props);\n\t\t\t\t} else {\n\t\t\t\t\tthis._combinedEntry = this._statusBarService.addEntry(\n\t\t\t\t\t\tprops,\n\t\t\t\t\t\tLanguageDetectionStatusContribution._id,\n\t\t\t\t\t\tStatusbarAlignment.RIGHT,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: \"status.editor.mode\",\n\t\t\t\t\t\t\talignment: StatusbarAlignment.RIGHT,\n\t\t\t\t\t\t\tcompact: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._combinedEntry?.dispose();\n\t\t\t\tthis._combinedEntry = undefined;\n\t\t\t}\n\t\t}\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n).registerWorkbenchContribution(\n\tLanguageDetectionStatusContribution,\n\tLifecyclePhase.Restored,\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: detectLanguageCommandId,\n\t\t\t\ttitle: localize2(\"detectlang\", \"Detect Language from Content\"),\n\t\t\t\tf1: true,\n\t\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\t\tNOTEBOOK_EDITOR_EDITABLE.toNegated(),\n\t\t\t\t\tEditorContextKeys.editorTextFocus,\n\t\t\t\t),\n\t\t\t\tkeybinding: {\n\t\t\t\t\tprimary: KeyCode.KeyD | KeyMod.Alt | KeyMod.Shift,\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst languageDetectionService = accessor.get(\n\t\t\t\tILanguageDetectionService,\n\t\t\t);\n\t\t\tconst editor = getCodeEditor(editorService.activeTextEditorControl);\n\t\t\tconst notificationService = accessor.get(INotificationService);\n\t\t\tconst editorUri = editor?.getModel()?.uri;\n\t\t\tif (editorUri) {\n\t\t\t\tconst lang =\n\t\t\t\t\tawait languageDetectionService.detectLanguage(editorUri);\n\t\t\t\tif (lang) {\n\t\t\t\t\teditor\n\t\t\t\t\t\t.getModel()\n\t\t\t\t\t\t?.setLanguage(\n\t\t\t\t\t\t\tlang,\n\t\t\t\t\t\t\tLanguageDetectionLanguageEventSource,\n\t\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tnotificationService.warn(\n\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\"noDetection\",\n\t\t\t\t\t\t\t\"Unable to detect editor language\",\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n);\n"],
  "mappings": "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",
  "names": []
}
