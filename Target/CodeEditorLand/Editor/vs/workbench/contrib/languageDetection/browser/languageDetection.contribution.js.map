{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/languageDetection/browser/languageDetection.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { getCodeEditor } from '../../../../editor/browser/editorBrowser.js';\nimport { localize, localize2 } from '../../../../nls.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions, IWorkbenchContribution } from '../../../common/contributions.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { LifecyclePhase } from '../../../services/lifecycle/common/lifecycle.js';\nimport { IStatusbarEntry, IStatusbarEntryAccessor, IStatusbarService, StatusbarAlignment } from '../../../services/statusbar/browser/statusbar.js';\nimport { ILanguageDetectionService, LanguageDetectionHintConfig, LanguageDetectionLanguageEventSource } from '../../../services/languageDetection/common/languageDetectionWorkerService.js';\nimport { ThrottledDelayer } from '../../../../base/common/async.js';\nimport { ILanguageService } from '../../../../editor/common/languages/language.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { ServicesAccessor } from '../../../../editor/browser/editorExtensions.js';\nimport { registerAction2, Action2 } from '../../../../platform/actions/common/actions.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { NOTEBOOK_EDITOR_EDITABLE } from '../../notebook/common/notebookContextKeys.js';\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { EditorContextKeys } from '../../../../editor/common/editorContextKeys.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\n\nconst detectLanguageCommandId = 'editor.detectLanguage';\n\nclass LanguageDetectionStatusContribution implements IWorkbenchContribution {\n\n\tprivate static readonly _id = 'status.languageDetectionStatus';\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate _combinedEntry?: IStatusbarEntryAccessor;\n\tprivate _delayer = new ThrottledDelayer(1000);\n\tprivate readonly _renderDisposables = new DisposableStore();\n\n\tconstructor(\n\t\t@ILanguageDetectionService private readonly _languageDetectionService: ILanguageDetectionService,\n\t\t@IStatusbarService private readonly _statusBarService: IStatusbarService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t) {\n\t\t_editorService.onDidActiveEditorChange(() => this._update(true), this, this._disposables);\n\t\tthis._update(false);\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._delayer.dispose();\n\t\tthis._combinedEntry?.dispose();\n\t\tthis._renderDisposables.dispose();\n\t}\n\n\tprivate _update(clear: boolean): void {\n\t\tif (clear) {\n\t\t\tthis._combinedEntry?.dispose();\n\t\t\tthis._combinedEntry = undefined;\n\t\t}\n\t\tthis._delayer.trigger(() => this._doUpdate());\n\t}\n\n\tprivate async _doUpdate(): Promise<void> {\n\t\tconst editor = getCodeEditor(this._editorService.activeTextEditorControl);\n\n\t\tthis._renderDisposables.clear();\n\n\t\t// update when editor language changes\n\t\teditor?.onDidChangeModelLanguage(() => this._update(true), this, this._renderDisposables);\n\t\teditor?.onDidChangeModelContent(() => this._update(false), this, this._renderDisposables);\n\t\tconst editorModel = editor?.getModel();\n\t\tconst editorUri = editorModel?.uri;\n\t\tconst existingId = editorModel?.getLanguageId();\n\t\tconst enablementConfig = this._configurationService.getValue<LanguageDetectionHintConfig>('workbench.editor.languageDetectionHints');\n\t\tconst enabled = typeof enablementConfig === 'object' && enablementConfig?.untitledEditors;\n\t\tconst disableLightbulb = !enabled || editorUri?.scheme !== Schemas.untitled || !existingId;\n\n\t\tif (disableLightbulb || !editorUri) {\n\t\t\tthis._combinedEntry?.dispose();\n\t\t\tthis._combinedEntry = undefined;\n\t\t} else {\n\t\t\tconst lang = await this._languageDetectionService.detectLanguage(editorUri);\n\t\t\tconst skip: Record<string, string | undefined> = { 'jsonc': 'json' };\n\t\t\tconst existing = editorModel.getLanguageId();\n\t\t\tif (lang && lang !== existing && skip[existing] !== lang) {\n\t\t\t\tconst detectedName = this._languageService.getLanguageName(lang) || lang;\n\t\t\t\tlet tooltip = localize('status.autoDetectLanguage', \"Accept Detected Language: {0}\", detectedName);\n\t\t\t\tconst keybinding = this._keybindingService.lookupKeybinding(detectLanguageCommandId);\n\t\t\t\tconst label = keybinding?.getLabel();\n\t\t\t\tif (label) {\n\t\t\t\t\ttooltip += ` (${label})`;\n\t\t\t\t}\n\n\t\t\t\tconst props: IStatusbarEntry = {\n\t\t\t\t\tname: localize('langDetection.name', \"Language Detection\"),\n\t\t\t\t\tariaLabel: localize('langDetection.aria', \"Change to Detected Language: {0}\", lang),\n\t\t\t\t\ttooltip,\n\t\t\t\t\tcommand: detectLanguageCommandId,\n\t\t\t\t\ttext: '$(lightbulb-autofix)',\n\t\t\t\t};\n\t\t\t\tif (!this._combinedEntry) {\n\t\t\t\t\tthis._combinedEntry = this._statusBarService.addEntry(props, LanguageDetectionStatusContribution._id, StatusbarAlignment.RIGHT, { id: 'status.editor.mode', alignment: StatusbarAlignment.RIGHT, compact: true });\n\t\t\t\t} else {\n\t\t\t\t\tthis._combinedEntry.update(props);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._combinedEntry?.dispose();\n\t\t\t\tthis._combinedEntry = undefined;\n\t\t\t}\n\t\t}\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(LanguageDetectionStatusContribution, LifecyclePhase.Restored);\n\n\nregisterAction2(class extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: detectLanguageCommandId,\n\t\t\ttitle: localize2('detectlang', \"Detect Language from Content\"),\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.and(NOTEBOOK_EDITOR_EDITABLE.toNegated(), EditorContextKeys.editorTextFocus),\n\t\t\tkeybinding: { primary: KeyCode.KeyD | KeyMod.Alt | KeyMod.Shift, weight: KeybindingWeight.WorkbenchContrib }\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst languageDetectionService = accessor.get(ILanguageDetectionService);\n\t\tconst editor = getCodeEditor(editorService.activeTextEditorControl);\n\t\tconst notificationService = accessor.get(INotificationService);\n\t\tconst editorUri = editor?.getModel()?.uri;\n\t\tif (editorUri) {\n\t\t\tconst lang = await languageDetectionService.detectLanguage(editorUri);\n\t\t\tif (lang) {\n\t\t\t\teditor.getModel()?.setLanguage(lang, LanguageDetectionLanguageEventSource);\n\t\t\t} else {\n\t\t\t\tnotificationService.warn(localize('noDetection', \"Unable to detect editor language\"));\n\t\t\t}\n\t\t}\n\t}\n});\n"],
  "mappings": "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",
  "names": []
}
