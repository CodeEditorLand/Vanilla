{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/interactive/browser/interactiveHistoryService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { HistoryNavigator2 } from \"../../../../base/common/history.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { ResourceMap } from \"../../../../base/common/map.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { createDecorator } from \"../../../../platform/instantiation/common/instantiation.js\";\n\nexport const IInteractiveHistoryService =\n\tcreateDecorator<IInteractiveHistoryService>(\"IInteractiveHistoryService\");\n\nexport interface IInteractiveHistoryService {\n\treadonly _serviceBrand: undefined;\n\n\tmatchesCurrent(uri: URI, value: string): boolean;\n\taddToHistory(uri: URI, value: string): void;\n\tgetPreviousValue(uri: URI): string | null;\n\tgetNextValue(uri: URI): string | null;\n\treplaceLast(uri: URI, value: string): void;\n\tclearHistory(uri: URI): void;\n\thas(uri: URI): boolean;\n}\n\nexport class InteractiveHistoryService\n\textends Disposable\n\timplements IInteractiveHistoryService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\t_history: ResourceMap<HistoryNavigator2<string>>;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._history = new ResourceMap<HistoryNavigator2<string>>();\n\t}\n\n\tmatchesCurrent(uri: URI, value: string): boolean {\n\t\tconst history = this._history.get(uri);\n\t\tif (!history) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn history.current() === value;\n\t}\n\n\taddToHistory(uri: URI, value: string): void {\n\t\tconst history = this._history.get(uri);\n\t\tif (!history) {\n\t\t\tthis._history.set(uri, new HistoryNavigator2<string>([value], 50));\n\t\t\treturn;\n\t\t}\n\n\t\thistory.resetCursor();\n\t\thistory.add(value);\n\t}\n\n\tgetPreviousValue(uri: URI): string | null {\n\t\tconst history = this._history.get(uri);\n\t\treturn history?.previous() ?? null;\n\t}\n\n\tgetNextValue(uri: URI): string | null {\n\t\tconst history = this._history.get(uri);\n\n\t\treturn history?.next() ?? null;\n\t}\n\n\treplaceLast(uri: URI, value: string) {\n\t\tconst history = this._history.get(uri);\n\t\tif (history) {\n\t\t\thistory.replaceLast(value);\n\t\t\thistory.resetCursor();\n\t\t} else {\n\t\t\tthis._history.set(uri, new HistoryNavigator2<string>([value], 50));\n\t\t\treturn;\n\t\t}\n\t}\n\n\tclearHistory(uri: URI) {\n\t\tthis._history.delete(uri);\n\t}\n\n\thas(uri: URI) {\n\t\treturn this._history.has(uri) ? true : false;\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,yBAAyB;AAClC,SAAS,kBAAkB;AAC3B,SAAS,mBAAmB;AAE5B,SAAS,uBAAuB;AAEzB,MAAM,6BACZ,gBAA4C,4BAA4B;AAclE,MAAM,kCACJ,WAET;AAAA,EA7BA,OA6BA;AAAA;AAAA;AAAA,EAEC;AAAA,EAEA,cAAc;AACb,UAAM;AAEN,SAAK,WAAW,IAAI,YAAuC;AAAA,EAC5D;AAAA,EAEA,eAAe,KAAU,OAAwB;AAChD,UAAM,UAAU,KAAK,SAAS,IAAI,GAAG;AACrC,QAAI,CAAC,SAAS;AACb,aAAO;AAAA,IACR;AAEA,WAAO,QAAQ,QAAQ,MAAM;AAAA,EAC9B;AAAA,EAEA,aAAa,KAAU,OAAqB;AAC3C,UAAM,UAAU,KAAK,SAAS,IAAI,GAAG;AACrC,QAAI,CAAC,SAAS;AACb,WAAK,SAAS,IAAI,KAAK,IAAI,kBAA0B,CAAC,KAAK,GAAG,EAAE,CAAC;AACjE;AAAA,IACD;AAEA,YAAQ,YAAY;AACpB,YAAQ,IAAI,KAAK;AAAA,EAClB;AAAA,EAEA,iBAAiB,KAAyB;AACzC,UAAM,UAAU,KAAK,SAAS,IAAI,GAAG;AACrC,WAAO,SAAS,SAAS,KAAK;AAAA,EAC/B;AAAA,EAEA,aAAa,KAAyB;AACrC,UAAM,UAAU,KAAK,SAAS,IAAI,GAAG;AAErC,WAAO,SAAS,KAAK,KAAK;AAAA,EAC3B;AAAA,EAEA,YAAY,KAAU,OAAe;AACpC,UAAM,UAAU,KAAK,SAAS,IAAI,GAAG;AACrC,QAAI,SAAS;AACZ,cAAQ,YAAY,KAAK;AACzB,cAAQ,YAAY;AAAA,IACrB,OAAO;AACN,WAAK,SAAS,IAAI,KAAK,IAAI,kBAA0B,CAAC,KAAK,GAAG,EAAE,CAAC;AACjE;AAAA,IACD;AAAA,EACD;AAAA,EAEA,aAAa,KAAU;AACtB,SAAK,SAAS,OAAO,GAAG;AAAA,EACzB;AAAA,EAEA,IAAI,KAAU;AACb,WAAO,KAAK,SAAS,IAAI,GAAG,IAAI,OAAO;AAAA,EACxC;AACD;",
  "names": []
}
