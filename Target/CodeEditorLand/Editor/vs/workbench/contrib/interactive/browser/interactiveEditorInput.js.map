{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/interactive/browser/interactiveEditorInput.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from '../../../../base/common/event.js';\nimport { IReference } from '../../../../base/common/lifecycle.js';\nimport * as paths from '../../../../base/common/path.js';\nimport { isEqual, joinPath } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../../../../editor/common/languages/modesRegistry.js';\nimport { IResolvedTextEditorModel, ITextModelService } from '../../../../editor/common/services/resolverService.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IFileDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { EditorInputCapabilities, GroupIdentifier, IRevertOptions, ISaveOptions, IUntypedEditorInput } from '../../../common/editor.js';\nimport { EditorInput } from '../../../common/editor/editorInput.js';\nimport { IInteractiveDocumentService } from './interactiveDocumentService.js';\nimport { IInteractiveHistoryService } from './interactiveHistoryService.js';\nimport { IResolvedNotebookEditorModel, NotebookSetting } from '../../notebook/common/notebookCommon.js';\nimport { ICompositeNotebookEditorInput, NotebookEditorInput } from '../../notebook/common/notebookEditorInput.js';\nimport { INotebookService } from '../../notebook/common/notebookService.js';\n\nexport class InteractiveEditorInput extends EditorInput implements ICompositeNotebookEditorInput {\n\tstatic create(instantiationService: IInstantiationService, resource: URI, inputResource: URI, title?: string, language?: string) {\n\t\treturn instantiationService.createInstance(InteractiveEditorInput, resource, inputResource, title, language);\n\t}\n\n\tprivate static windowNames: Record<string, string> = {};\n\n\tstatic setName(notebookUri: URI, title: string | undefined) {\n\t\tif (title) {\n\t\t\tthis.windowNames[notebookUri.path] = title;\n\t\t}\n\t}\n\n\tstatic readonly ID: string = 'workbench.input.interactive';\n\n\tpublic override get editorId(): string {\n\t\treturn 'interactive';\n\t}\n\n\toverride get typeId(): string {\n\t\treturn InteractiveEditorInput.ID;\n\t}\n\n\tprivate name: string;\n\tprivate readonly isScratchpad: boolean;\n\n\tget language() {\n\t\treturn this._inputModelRef?.object.textEditorModel.getLanguageId() ?? this._initLanguage;\n\t}\n\tprivate _initLanguage?: string;\n\n\tprivate _notebookEditorInput: NotebookEditorInput;\n\tget notebookEditorInput() {\n\t\treturn this._notebookEditorInput;\n\t}\n\n\tget editorInputs() {\n\t\treturn [this._notebookEditorInput];\n\t}\n\n\tprivate _resource: URI;\n\n\toverride get resource(): URI {\n\t\treturn this._resource;\n\t}\n\n\tprivate _inputResource: URI;\n\n\tget inputResource() {\n\t\treturn this._inputResource;\n\t}\n\tprivate _inputResolver: Promise<IResolvedNotebookEditorModel | null> | null;\n\tprivate _editorModelReference: IResolvedNotebookEditorModel | null;\n\n\tprivate _inputModelRef: IReference<IResolvedTextEditorModel> | null;\n\n\tget primary(): EditorInput {\n\t\treturn this._notebookEditorInput;\n\t}\n\tprivate _textModelService: ITextModelService;\n\tprivate _interactiveDocumentService: IInteractiveDocumentService;\n\tprivate _historyService: IInteractiveHistoryService;\n\n\n\tconstructor(\n\t\tresource: URI,\n\t\tinputResource: URI,\n\t\ttitle: string | undefined,\n\t\tlanguageId: string | undefined,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ITextModelService textModelService: ITextModelService,\n\t\t@IInteractiveDocumentService interactiveDocumentService: IInteractiveDocumentService,\n\t\t@IInteractiveHistoryService historyService: IInteractiveHistoryService,\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t\t@IFileDialogService private readonly _fileDialogService: IFileDialogService,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tconst input = NotebookEditorInput.getOrCreate(instantiationService, resource, undefined, 'interactive', {});\n\t\tsuper();\n\t\tthis.isScratchpad = configurationService.getValue<boolean>(NotebookSetting.InteractiveWindowPromptToSave) !== true;\n\t\tthis._notebookEditorInput = input;\n\t\tthis._register(this._notebookEditorInput);\n\t\tthis.name = title ?? InteractiveEditorInput.windowNames[resource.path] ?? paths.basename(resource.path, paths.extname(resource.path));\n\t\tthis._initLanguage = languageId;\n\t\tthis._resource = resource;\n\t\tthis._inputResource = inputResource;\n\t\tthis._inputResolver = null;\n\t\tthis._editorModelReference = null;\n\t\tthis._inputModelRef = null;\n\t\tthis._textModelService = textModelService;\n\t\tthis._interactiveDocumentService = interactiveDocumentService;\n\t\tthis._historyService = historyService;\n\n\t\tthis._registerListeners();\n\t}\n\n\tprivate _registerListeners(): void {\n\t\tconst oncePrimaryDisposed = Event.once(this.primary.onWillDispose);\n\t\tthis._register(oncePrimaryDisposed(() => {\n\t\t\tif (!this.isDisposed()) {\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}));\n\n\t\t// Re-emit some events from the primary side to the outside\n\t\tthis._register(this.primary.onDidChangeDirty(() => this._onDidChangeDirty.fire()));\n\t\tthis._register(this.primary.onDidChangeLabel(() => this._onDidChangeLabel.fire()));\n\n\t\t// Re-emit some events from both sides to the outside\n\t\tthis._register(this.primary.onDidChangeCapabilities(() => this._onDidChangeCapabilities.fire()));\n\t}\n\n\toverride get capabilities(): EditorInputCapabilities {\n\t\tconst scratchPad = this.isScratchpad ? EditorInputCapabilities.Scratchpad : 0;\n\n\t\treturn EditorInputCapabilities.Untitled\n\t\t\t| EditorInputCapabilities.Readonly\n\t\t\t| scratchPad;\n\t}\n\n\tprivate async _resolveEditorModel() {\n\t\tif (!this._editorModelReference) {\n\t\t\tthis._editorModelReference = await this._notebookEditorInput.resolve();\n\t\t}\n\n\t\treturn this._editorModelReference;\n\t}\n\n\toverride async resolve(): Promise<IResolvedNotebookEditorModel | null> {\n\t\tif (this._editorModelReference) {\n\t\t\treturn this._editorModelReference;\n\t\t}\n\n\t\tif (this._inputResolver) {\n\t\t\treturn this._inputResolver;\n\t\t}\n\n\t\tthis._inputResolver = this._resolveEditorModel();\n\n\t\treturn this._inputResolver;\n\t}\n\n\tasync resolveInput(language?: string) {\n\t\tif (this._inputModelRef) {\n\t\t\treturn this._inputModelRef.object.textEditorModel;\n\t\t}\n\n\t\tconst resolvedLanguage = language ?? this._initLanguage ?? PLAINTEXT_LANGUAGE_ID;\n\t\tthis._interactiveDocumentService.willCreateInteractiveDocument(this.resource, this.inputResource, resolvedLanguage);\n\t\tthis._inputModelRef = await this._textModelService.createModelReference(this.inputResource);\n\n\t\treturn this._inputModelRef.object.textEditorModel;\n\t}\n\n\toverride async save(group: GroupIdentifier, options?: ISaveOptions): Promise<EditorInput | IUntypedEditorInput | undefined> {\n\t\tif (this._editorModelReference) {\n\n\t\t\tif (this.hasCapability(EditorInputCapabilities.Untitled)) {\n\t\t\t\treturn this.saveAs(group, options);\n\t\t\t} else {\n\t\t\t\tawait this._editorModelReference.save(options);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\toverride async saveAs(group: GroupIdentifier, options?: ISaveOptions): Promise<IUntypedEditorInput | undefined> {\n\t\tif (!this._editorModelReference) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst provider = this._notebookService.getContributedNotebookType('interactive');\n\n\t\tif (!provider) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst filename = this.getName() + '.ipynb';\n\t\tconst pathCandidate = joinPath(await this._fileDialogService.defaultFilePath(), filename);\n\n\t\tconst target = await this._fileDialogService.pickFileToSave(pathCandidate, options?.availableFileSystems);\n\t\tif (!target) {\n\t\t\treturn undefined; // save cancelled\n\t\t}\n\n\t\tconst saved = await this._editorModelReference.saveAs(target);\n\t\tif (saved && 'resource' in saved && saved.resource) {\n\t\t\tthis._notebookService.getNotebookTextModel(saved.resource)?.dispose();\n\t\t}\n\t\treturn saved;\n\t}\n\n\toverride matches(otherInput: EditorInput | IUntypedEditorInput): boolean {\n\t\tif (super.matches(otherInput)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherInput instanceof InteractiveEditorInput) {\n\t\t\treturn isEqual(this.resource, otherInput.resource) && isEqual(this.inputResource, otherInput.inputResource);\n\t\t}\n\t\treturn false;\n\t}\n\n\toverride getName() {\n\t\treturn this.name;\n\t}\n\n\toverride isDirty(): boolean {\n\t\tif (this.isScratchpad) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this._editorModelReference?.isDirty() ?? false;\n\t}\n\n\toverride isModified() {\n\t\treturn this._editorModelReference?.isModified() ?? false;\n\t}\n\n\toverride async revert(_group: GroupIdentifier, options?: IRevertOptions): Promise<void> {\n\t\tif (this._editorModelReference && this._editorModelReference.isDirty()) {\n\t\t\tawait this._editorModelReference.revert(options);\n\t\t}\n\t}\n\n\toverride dispose() {\n\t\t// we support closing the interactive window without prompt, so the editor model should not be dirty\n\t\tthis._editorModelReference?.revert({ soft: true });\n\n\t\tthis._notebookEditorInput?.dispose();\n\t\tthis._editorModelReference?.dispose();\n\t\tthis._editorModelReference = null;\n\t\tthis._interactiveDocumentService.willRemoveInteractiveDocument(this.resource, this.inputResource);\n\t\tthis._inputModelRef?.dispose();\n\t\tthis._inputModelRef = null;\n\t\tsuper.dispose();\n\t}\n\n\tget historyService() {\n\t\treturn this._historyService;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
