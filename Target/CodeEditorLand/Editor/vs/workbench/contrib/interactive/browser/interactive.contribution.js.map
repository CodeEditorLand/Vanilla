{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/interactive/browser/interactive.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Iterable } from \"../../../../base/common/iterator.js\";\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { parse } from \"../../../../base/common/marshalling.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { extname, isEqual } from \"../../../../base/common/resources.js\";\nimport { isFalsyOrWhitespace } from \"../../../../base/common/strings.js\";\nimport { URI, type UriComponents } from \"../../../../base/common/uri.js\";\nimport { IBulkEditService } from \"../../../../editor/browser/services/bulkEditService.js\";\nimport type { CodeEditorWidget } from \"../../../../editor/browser/widget/codeEditor/codeEditorWidget.js\";\nimport { EditOperation } from \"../../../../editor/common/core/editOperation.js\";\nimport { PLAINTEXT_LANGUAGE_ID } from \"../../../../editor/common/languages/modesRegistry.js\";\nimport type { ITextModel } from \"../../../../editor/common/model.js\";\nimport { IModelService } from \"../../../../editor/common/services/model.js\";\nimport {\n\ttype ITextModelContentProvider,\n\tITextModelService,\n} from \"../../../../editor/common/services/resolverService.js\";\nimport { peekViewBorder } from \"../../../../editor/contrib/peekView/browser/peekView.js\";\nimport { Context as SuggestContext } from \"../../../../editor/contrib/suggest/browser/suggest.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport type { ILocalizedString } from \"../../../../platform/action/common/action.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tExtensions as ConfigurationExtensions,\n\ttype IConfigurationRegistry,\n} from \"../../../../platform/configuration/common/configurationRegistry.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tEditorActivation,\n\ttype ITextResourceEditorInput,\n} from \"../../../../platform/editor/common/editor.js\";\nimport { SyncDescriptor } from \"../../../../platform/instantiation/common/descriptors.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\tcontrastBorder,\n\tifDefinedThenElse,\n\tlistInactiveSelectionBackground,\n\tregisterColor,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport {\n\tEditorPaneDescriptor,\n\ttype IEditorPaneRegistry,\n} from \"../../../browser/editor.js\";\nimport {\n\ttype IWorkbenchContribution,\n\tWorkbenchPhase,\n\tregisterWorkbenchContribution2,\n} from \"../../../common/contributions.js\";\nimport {\n\tEditorExtensions,\n\tEditorsOrder,\n\ttype IEditorFactoryRegistry,\n\ttype IEditorSerializer,\n\ttype IUntypedEditorInput,\n} from \"../../../common/editor.js\";\nimport type { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport { PANEL_BORDER } from \"../../../common/theme.js\";\nimport { columnToEditorGroup } from \"../../../services/editor/common/editorGroupColumn.js\";\nimport { IEditorGroupsService } from \"../../../services/editor/common/editorGroupsService.js\";\nimport {\n\tIEditorResolverService,\n\tRegisteredEditorPriority,\n} from \"../../../services/editor/common/editorResolverService.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { IExtensionService } from \"../../../services/extensions/common/extensions.js\";\nimport type { IWorkingCopyIdentifier } from \"../../../services/workingCopy/common/workingCopy.js\";\nimport {\n\ttype IWorkingCopyEditorHandler,\n\tIWorkingCopyEditorService,\n} from \"../../../services/workingCopy/common/workingCopyEditorService.js\";\nimport { ResourceNotebookCellEdit } from \"../../bulkEdit/browser/bulkCellEdits.js\";\nimport { NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT } from \"../../notebook/browser/controller/coreActions.js\";\nimport type { INotebookEditorOptions } from \"../../notebook/browser/notebookBrowser.js\";\nimport type { NotebookEditorWidget } from \"../../notebook/browser/notebookEditorWidget.js\";\nimport * as icons from \"../../notebook/browser/notebookIcons.js\";\nimport { INotebookEditorService } from \"../../notebook/browser/services/notebookEditorService.js\";\nimport {\n\tCellEditType,\n\tCellKind,\n\tCellUri,\n\tINTERACTIVE_WINDOW_EDITOR_ID,\n\tNotebookSetting,\n\tNotebookWorkingCopyTypeIdentifier,\n} from \"../../notebook/common/notebookCommon.js\";\nimport { InteractiveWindowOpen } from \"../../notebook/common/notebookContextKeys.js\";\nimport { INotebookKernelService } from \"../../notebook/common/notebookKernelService.js\";\nimport { INotebookService } from \"../../notebook/common/notebookService.js\";\nimport {\n\tINTERACTIVE_INPUT_CURSOR_BOUNDARY,\n\tInteractiveWindowSetting,\n} from \"./interactiveCommon.js\";\nimport {\n\tIInteractiveDocumentService,\n\tInteractiveDocumentService,\n} from \"./interactiveDocumentService.js\";\nimport { InteractiveEditor } from \"./interactiveEditor.js\";\nimport { InteractiveEditorInput } from \"./interactiveEditorInput.js\";\nimport {\n\tIInteractiveHistoryService,\n\tInteractiveHistoryService,\n} from \"./interactiveHistoryService.js\";\n\nconst interactiveWindowCategory: ILocalizedString = localize2(\n\t\"interactiveWindow\",\n\t\"Interactive Window\",\n);\n\nRegistry.as<IEditorPaneRegistry>(\n\tEditorExtensions.EditorPane,\n).registerEditorPane(\n\tEditorPaneDescriptor.create(\n\t\tInteractiveEditor,\n\t\tINTERACTIVE_WINDOW_EDITOR_ID,\n\t\t\"Interactive Window\",\n\t),\n\t[new SyncDescriptor(InteractiveEditorInput)],\n);\n\nexport class InteractiveDocumentContribution\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tstatic readonly ID = \"workbench.contrib.interactiveDocument\";\n\n\tconstructor(\n\t\t@INotebookService notebookService: INotebookService,\n\t\t@IEditorResolverService editorResolverService: IEditorResolverService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tconst info = notebookService.getContributedNotebookType(\"interactive\");\n\n\t\t// We need to contribute a notebook type for the Interactive Window to provide notebook models.\n\t\tif (!info) {\n\t\t\tthis._register(\n\t\t\t\tnotebookService.registerContributedNotebookType(\"interactive\", {\n\t\t\t\t\tproviderDisplayName: \"Interactive Notebook\",\n\t\t\t\t\tdisplayName: \"Interactive\",\n\t\t\t\t\tfilenamePattern: [\"*.interactive\"],\n\t\t\t\t\tpriority: RegisteredEditorPriority.builtin,\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\teditorResolverService.registerEditor(\n\t\t\t`${Schemas.vscodeInteractiveInput}:/**`,\n\t\t\t{\n\t\t\t\tid: \"vscode-interactive-input\",\n\t\t\t\tlabel: \"Interactive Editor\",\n\t\t\t\tpriority: RegisteredEditorPriority.exclusive,\n\t\t\t},\n\t\t\t{\n\t\t\t\tcanSupportResource: (uri) =>\n\t\t\t\t\turi.scheme === Schemas.vscodeInteractiveInput,\n\t\t\t\tsinglePerResource: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource }) => {\n\t\t\t\t\tconst editorInput = editorService\n\t\t\t\t\t\t.getEditors(EditorsOrder.SEQUENTIAL)\n\t\t\t\t\t\t.find(\n\t\t\t\t\t\t\t(editor) =>\n\t\t\t\t\t\t\t\teditor.editor instanceof\n\t\t\t\t\t\t\t\t\tInteractiveEditorInput &&\n\t\t\t\t\t\t\t\teditor.editor.inputResource.toString() ===\n\t\t\t\t\t\t\t\t\tresource.toString(),\n\t\t\t\t\t\t);\n\t\t\t\t\treturn editorInput!;\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\teditorResolverService.registerEditor(\n\t\t\t`*.interactive`,\n\t\t\t{\n\t\t\t\tid: \"interactive\",\n\t\t\t\tlabel: \"Interactive Editor\",\n\t\t\t\tpriority: RegisteredEditorPriority.exclusive,\n\t\t\t},\n\t\t\t{\n\t\t\t\tcanSupportResource: (uri) =>\n\t\t\t\t\t(uri.scheme === Schemas.untitled &&\n\t\t\t\t\t\textname(uri) === \".interactive\") ||\n\t\t\t\t\t(uri.scheme === Schemas.vscodeNotebookCell &&\n\t\t\t\t\t\textname(uri) === \".interactive\"),\n\t\t\t\tsinglePerResource: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource, options }) => {\n\t\t\t\t\tconst data = CellUri.parse(resource);\n\t\t\t\t\tlet cellOptions: ITextResourceEditorInput | undefined;\n\t\t\t\t\tlet iwResource = resource;\n\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tcellOptions = { resource, options };\n\t\t\t\t\t\tiwResource = data.notebook;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst notebookOptions: INotebookEditorOptions | undefined =\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...options,\n\t\t\t\t\t\t\tcellOptions,\n\t\t\t\t\t\t\tcellRevealType: undefined,\n\t\t\t\t\t\t\tcellSelections: undefined,\n\t\t\t\t\t\t\tisReadOnly: undefined,\n\t\t\t\t\t\t\tviewState: undefined,\n\t\t\t\t\t\t\tindexedCellOptions: undefined,\n\t\t\t\t\t\t};\n\n\t\t\t\t\tconst editorInput = createEditor(\n\t\t\t\t\t\tiwResource,\n\t\t\t\t\t\tthis.instantiationService,\n\t\t\t\t\t);\n\t\t\t\t\treturn {\n\t\t\t\t\t\teditor: editorInput,\n\t\t\t\t\t\toptions: notebookOptions,\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tcreateUntitledEditorInput: ({ resource, options }) => {\n\t\t\t\t\tif (!resource) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\"Interactive window editors must have a resource name\",\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tconst data = CellUri.parse(resource);\n\t\t\t\t\tlet cellOptions: ITextResourceEditorInput | undefined;\n\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tcellOptions = { resource, options };\n\t\t\t\t\t}\n\n\t\t\t\t\tconst notebookOptions: INotebookEditorOptions = {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\tcellOptions,\n\t\t\t\t\t\tcellRevealType: undefined,\n\t\t\t\t\t\tcellSelections: undefined,\n\t\t\t\t\t\tisReadOnly: undefined,\n\t\t\t\t\t\tviewState: undefined,\n\t\t\t\t\t\tindexedCellOptions: undefined,\n\t\t\t\t\t};\n\n\t\t\t\t\tconst editorInput = createEditor(\n\t\t\t\t\t\tresource,\n\t\t\t\t\t\tthis.instantiationService,\n\t\t\t\t\t);\n\t\t\t\t\treturn {\n\t\t\t\t\t\teditor: editorInput,\n\t\t\t\t\t\toptions: notebookOptions,\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n}\n\nclass InteractiveInputContentProvider implements ITextModelContentProvider {\n\tstatic readonly ID = \"workbench.contrib.interactiveInputContentProvider\";\n\n\tprivate readonly _registration: IDisposable;\n\n\tconstructor(\n\t\t@ITextModelService textModelService: ITextModelService,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t) {\n\t\tthis._registration = textModelService.registerTextModelContentProvider(\n\t\t\tSchemas.vscodeInteractiveInput,\n\t\t\tthis,\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tthis._registration.dispose();\n\t}\n\n\tasync provideTextContent(resource: URI): Promise<ITextModel | null> {\n\t\tconst existing = this._modelService.getModel(resource);\n\t\tif (existing) {\n\t\t\treturn existing;\n\t\t}\n\t\tconst result: ITextModel | null = this._modelService.createModel(\n\t\t\t\"\",\n\t\t\tnull,\n\t\t\tresource,\n\t\t\tfalse,\n\t\t);\n\t\treturn result;\n\t}\n}\n\nfunction createEditor(\n\tresource: URI,\n\tinstantiationService: IInstantiationService,\n): EditorInput {\n\tconst counter = /\\/Interactive-(\\d+)/.exec(resource.path);\n\tconst inputBoxPath =\n\t\tcounter && counter[1]\n\t\t\t? `/InteractiveInput-${counter[1]}`\n\t\t\t: \"InteractiveInput\";\n\tconst inputUri = URI.from({\n\t\tscheme: Schemas.vscodeInteractiveInput,\n\t\tpath: inputBoxPath,\n\t});\n\tconst editorInput = InteractiveEditorInput.create(\n\t\tinstantiationService,\n\t\tresource,\n\t\tinputUri,\n\t);\n\n\treturn editorInput;\n}\n\nclass InteractiveWindowWorkingCopyEditorHandler\n\textends Disposable\n\timplements IWorkbenchContribution, IWorkingCopyEditorHandler\n{\n\tstatic readonly ID =\n\t\t\"workbench.contrib.interactiveWindowWorkingCopyEditorHandler\";\n\n\tconstructor(\n\t\t@IInstantiationService\n\t\tprivate readonly _instantiationService: IInstantiationService,\n\t\t@IWorkingCopyEditorService\n\t\tprivate readonly _workingCopyEditorService: IWorkingCopyEditorService,\n\t\t@IExtensionService\n\t\tprivate readonly _extensionService: IExtensionService,\n\t) {\n\t\tsuper();\n\n\t\tthis._installHandler();\n\t}\n\n\thandles(workingCopy: IWorkingCopyIdentifier): boolean {\n\t\tconst viewType = this._getViewType(workingCopy);\n\t\treturn !!viewType && viewType === \"interactive\";\n\t}\n\n\tisOpen(workingCopy: IWorkingCopyIdentifier, editor: EditorInput): boolean {\n\t\tif (!this.handles(workingCopy)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn (\n\t\t\teditor instanceof InteractiveEditorInput &&\n\t\t\tisEqual(workingCopy.resource, editor.resource)\n\t\t);\n\t}\n\n\tcreateEditor(workingCopy: IWorkingCopyIdentifier): EditorInput {\n\t\treturn createEditor(workingCopy.resource, this._instantiationService);\n\t}\n\n\tprivate async _installHandler(): Promise<void> {\n\t\tawait this._extensionService.whenInstalledExtensionsRegistered();\n\n\t\tthis._register(this._workingCopyEditorService.registerHandler(this));\n\t}\n\n\tprivate _getViewType(\n\t\tworkingCopy: IWorkingCopyIdentifier,\n\t): string | undefined {\n\t\treturn NotebookWorkingCopyTypeIdentifier.parse(workingCopy.typeId);\n\t}\n}\n\nregisterWorkbenchContribution2(\n\tInteractiveDocumentContribution.ID,\n\tInteractiveDocumentContribution,\n\tWorkbenchPhase.BlockRestore,\n);\nregisterWorkbenchContribution2(\n\tInteractiveInputContentProvider.ID,\n\tInteractiveInputContentProvider,\n\t{\n\t\teditorTypeId: INTERACTIVE_WINDOW_EDITOR_ID,\n\t},\n);\nregisterWorkbenchContribution2(\n\tInteractiveWindowWorkingCopyEditorHandler.ID,\n\tInteractiveWindowWorkingCopyEditorHandler,\n\t{\n\t\teditorTypeId: INTERACTIVE_WINDOW_EDITOR_ID,\n\t},\n);\n\ntype interactiveEditorInputData = {\n\tresource: URI;\n\tinputResource: URI;\n\tname: string;\n\tlanguage: string;\n};\n\nexport class InteractiveEditorSerializer implements IEditorSerializer {\n\tpublic static readonly ID = InteractiveEditorInput.ID;\n\n\tcanSerialize(editor: EditorInput): editor is InteractiveEditorInput {\n\t\tif (!(editor instanceof InteractiveEditorInput)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn (\n\t\t\tURI.isUri(editor.primary.resource) &&\n\t\t\tURI.isUri(editor.inputResource)\n\t\t);\n\t}\n\n\tserialize(input: EditorInput): string | undefined {\n\t\tif (!this.canSerialize(input)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn JSON.stringify({\n\t\t\tresource: input.primary.resource,\n\t\t\tinputResource: input.inputResource,\n\t\t\tname: input.getName(),\n\t\t\tlanguage: input.language,\n\t\t});\n\t}\n\n\tdeserialize(instantiationService: IInstantiationService, raw: string) {\n\t\tconst data = <interactiveEditorInputData>parse(raw);\n\t\tif (!data) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst { resource, inputResource, name, language } = data;\n\t\tif (!URI.isUri(resource) || !URI.isUri(inputResource)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst input = InteractiveEditorInput.create(\n\t\t\tinstantiationService,\n\t\t\tresource,\n\t\t\tinputResource,\n\t\t\tname,\n\t\t\tlanguage,\n\t\t);\n\t\treturn input;\n\t}\n}\n\nRegistry.as<IEditorFactoryRegistry>(\n\tEditorExtensions.EditorFactory,\n).registerEditorSerializer(\n\tInteractiveEditorSerializer.ID,\n\tInteractiveEditorSerializer,\n);\n\nregisterSingleton(\n\tIInteractiveHistoryService,\n\tInteractiveHistoryService,\n\tInstantiationType.Delayed,\n);\nregisterSingleton(\n\tIInteractiveDocumentService,\n\tInteractiveDocumentService,\n\tInstantiationType.Delayed,\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"_interactive.open\",\n\t\t\t\ttitle: localize2(\"interactive.open\", \"Open Interactive Window\"),\n\t\t\t\tf1: false,\n\t\t\t\tcategory: interactiveWindowCategory,\n\t\t\t\tmetadata: {\n\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\"interactive.open\",\n\t\t\t\t\t\t\"Open Interactive Window\",\n\t\t\t\t\t),\n\t\t\t\t\targs: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"showOptions\",\n\t\t\t\t\t\t\tdescription: \"Show Options\",\n\t\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tviewColumn: {\n\t\t\t\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\t\t\t\tdefault: -1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tpreserveFocus: {\n\t\t\t\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\t\t\t\tdefault: true,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"resource\",\n\t\t\t\t\t\t\tdescription: \"Interactive resource Uri\",\n\t\t\t\t\t\t\tisOptional: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"controllerId\",\n\t\t\t\t\t\t\tdescription: \"Notebook controller Id\",\n\t\t\t\t\t\t\tisOptional: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"title\",\n\t\t\t\t\t\t\tdescription: \"Notebook editor title\",\n\t\t\t\t\t\t\tisOptional: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tasync run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tshowOptions?:\n\t\t\t\t| number\n\t\t\t\t| { viewColumn?: number; preserveFocus?: boolean },\n\t\t\tresource?: URI,\n\t\t\tid?: string,\n\t\t\ttitle?: string,\n\t\t): Promise<{\n\t\t\tnotebookUri: URI;\n\t\t\tinputUri: URI;\n\t\t\tnotebookEditorId?: string;\n\t\t}> {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\t\tconst historyService = accessor.get(IInteractiveHistoryService);\n\t\t\tconst kernelService = accessor.get(INotebookKernelService);\n\t\t\tconst logService = accessor.get(ILogService);\n\t\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\t\tconst group = columnToEditorGroup(\n\t\t\t\teditorGroupService,\n\t\t\t\tconfigurationService,\n\t\t\t\ttypeof showOptions === \"number\"\n\t\t\t\t\t? showOptions\n\t\t\t\t\t: showOptions?.viewColumn,\n\t\t\t);\n\t\t\tconst editorOptions = {\n\t\t\t\tactivation: EditorActivation.PRESERVE,\n\t\t\t\tpreserveFocus:\n\t\t\t\t\ttypeof showOptions !== \"number\"\n\t\t\t\t\t\t? (showOptions?.preserveFocus ?? false)\n\t\t\t\t\t\t: false,\n\t\t\t};\n\n\t\t\tif (resource && extname(resource) === \".interactive\") {\n\t\t\t\tlogService.debug(\n\t\t\t\t\t\"Open interactive window from resource:\",\n\t\t\t\t\tresource.toString(),\n\t\t\t\t);\n\t\t\t\tconst resourceUri = URI.revive(resource);\n\t\t\t\tconst editors = editorService\n\t\t\t\t\t.findEditors(resourceUri)\n\t\t\t\t\t.filter(\n\t\t\t\t\t\t(id) =>\n\t\t\t\t\t\t\tid.editor instanceof InteractiveEditorInput &&\n\t\t\t\t\t\t\tid.editor.resource?.toString() ===\n\t\t\t\t\t\t\t\tresourceUri.toString(),\n\t\t\t\t\t);\n\t\t\t\tif (editors.length) {\n\t\t\t\t\tlogService.debug(\n\t\t\t\t\t\t\"Find existing interactive window:\",\n\t\t\t\t\t\tresource.toString(),\n\t\t\t\t\t);\n\t\t\t\t\tconst editorInput = editors[0]\n\t\t\t\t\t\t.editor as InteractiveEditorInput;\n\t\t\t\t\tconst currentGroup = editors[0].groupId;\n\t\t\t\t\tconst editor = await editorService.openEditor(\n\t\t\t\t\t\teditorInput,\n\t\t\t\t\t\teditorOptions,\n\t\t\t\t\t\tcurrentGroup,\n\t\t\t\t\t);\n\t\t\t\t\tconst editorControl = editor?.getControl() as\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\tnotebookEditor:\n\t\t\t\t\t\t\t\t\t| NotebookEditorWidget\n\t\t\t\t\t\t\t\t\t| undefined;\n\t\t\t\t\t\t\t\tcodeEditor: CodeEditorWidget;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t| undefined;\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tnotebookUri: editorInput.resource,\n\t\t\t\t\t\tinputUri: editorInput.inputResource,\n\t\t\t\t\t\tnotebookEditorId:\n\t\t\t\t\t\t\teditorControl?.notebookEditor?.getId(),\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst existingNotebookDocument = new Set<string>();\n\t\t\teditorService\n\t\t\t\t.getEditors(EditorsOrder.SEQUENTIAL)\n\t\t\t\t.forEach((editor) => {\n\t\t\t\t\tif (editor.editor.resource) {\n\t\t\t\t\t\texistingNotebookDocument.add(\n\t\t\t\t\t\t\teditor.editor.resource.toString(),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tlet notebookUri: URI | undefined;\n\t\t\tlet inputUri: URI | undefined;\n\t\t\tlet counter = 1;\n\t\t\tdo {\n\t\t\t\tnotebookUri = URI.from({\n\t\t\t\t\tscheme: Schemas.untitled,\n\t\t\t\t\tpath: `/Interactive-${counter}.interactive`,\n\t\t\t\t});\n\t\t\t\tinputUri = URI.from({\n\t\t\t\t\tscheme: Schemas.vscodeInteractiveInput,\n\t\t\t\t\tpath: `/InteractiveInput-${counter}`,\n\t\t\t\t});\n\n\t\t\t\tcounter++;\n\t\t\t} while (existingNotebookDocument.has(notebookUri.toString()));\n\t\t\tInteractiveEditorInput.setName(notebookUri, title);\n\n\t\t\tlogService.debug(\n\t\t\t\t\"Open new interactive window:\",\n\t\t\t\tnotebookUri.toString(),\n\t\t\t\tinputUri.toString(),\n\t\t\t);\n\n\t\t\tif (id) {\n\t\t\t\tconst allKernels = kernelService.getMatchingKernel({\n\t\t\t\t\turi: notebookUri,\n\t\t\t\t\tnotebookType: \"interactive\",\n\t\t\t\t}).all;\n\t\t\t\tconst preferredKernel = allKernels.find(\n\t\t\t\t\t(kernel) => kernel.id === id,\n\t\t\t\t);\n\t\t\t\tif (preferredKernel) {\n\t\t\t\t\tkernelService.preselectKernelForNotebook(preferredKernel, {\n\t\t\t\t\t\turi: notebookUri,\n\t\t\t\t\t\tnotebookType: \"interactive\",\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thistoryService.clearHistory(notebookUri);\n\t\t\tconst editorInput: IUntypedEditorInput = {\n\t\t\t\tresource: notebookUri,\n\t\t\t\toptions: editorOptions,\n\t\t\t};\n\t\t\tconst editorPane = await editorService.openEditor(\n\t\t\t\teditorInput,\n\t\t\t\tgroup,\n\t\t\t);\n\t\t\tconst editorControl = editorPane?.getControl() as\n\t\t\t\t| {\n\t\t\t\t\t\tnotebookEditor: NotebookEditorWidget | undefined;\n\t\t\t\t\t\tcodeEditor: CodeEditorWidget;\n\t\t\t\t  }\n\t\t\t\t| undefined;\n\t\t\t// Extensions must retain references to these URIs to manipulate the interactive editor\n\t\t\tlogService.debug(\n\t\t\t\t\"New interactive window opened. Notebook editor id\",\n\t\t\t\teditorControl?.notebookEditor?.getId(),\n\t\t\t);\n\t\t\treturn {\n\t\t\t\tnotebookUri,\n\t\t\t\tinputUri,\n\t\t\t\tnotebookEditorId: editorControl?.notebookEditor?.getId(),\n\t\t\t};\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"interactive.execute\",\n\t\t\t\ttitle: localize2(\"interactive.execute\", \"Execute Code\"),\n\t\t\t\tcategory: interactiveWindowCategory,\n\t\t\t\tkeybinding: [\n\t\t\t\t\t{\n\t\t\t\t\t\t// when: NOTEBOOK_CELL_LIST_FOCUSED,\n\t\t\t\t\t\twhen: ContextKeyExpr.equals(\n\t\t\t\t\t\t\t\"activeEditor\",\n\t\t\t\t\t\t\t\"workbench.editor.interactive\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\t\t\t\t\t\tweight: NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\t\t\"activeEditor\",\n\t\t\t\t\t\t\t\t\"workbench.editor.interactive\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\t\t\"config.interactiveWindow.executeWithShiftEnter\",\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tprimary: KeyMod.Shift | KeyCode.Enter,\n\t\t\t\t\t\tweight: NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\t\t\"activeEditor\",\n\t\t\t\t\t\t\t\t\"workbench.editor.interactive\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\t\t\"config.interactiveWindow.executeWithShiftEnter\",\n\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tprimary: KeyCode.Enter,\n\t\t\t\t\t\tweight: NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.InteractiveInputExecute,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\ticon: icons.executeIcon,\n\t\t\t\tf1: false,\n\t\t\t\tmetadata: {\n\t\t\t\t\tdescription: \"Execute the Contents of the Input Box\",\n\t\t\t\t\targs: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"resource\",\n\t\t\t\t\t\t\tdescription: \"Interactive resource Uri\",\n\t\t\t\t\t\t\tisOptional: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tasync run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tcontext?: UriComponents,\n\t\t): Promise<void> {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst bulkEditService = accessor.get(IBulkEditService);\n\t\t\tconst historyService = accessor.get(IInteractiveHistoryService);\n\t\t\tconst notebookEditorService = accessor.get(INotebookEditorService);\n\t\t\tlet editorControl:\n\t\t\t\t| {\n\t\t\t\t\t\tnotebookEditor: NotebookEditorWidget | undefined;\n\t\t\t\t\t\tcodeEditor: CodeEditorWidget;\n\t\t\t\t  }\n\t\t\t\t| undefined;\n\t\t\tif (context) {\n\t\t\t\tconst resourceUri = URI.revive(context);\n\t\t\t\tconst editors = editorService.findEditors(resourceUri);\n\t\t\t\tfor (const found of editors) {\n\t\t\t\t\tif (found.editor.typeId === InteractiveEditorInput.ID) {\n\t\t\t\t\t\tconst editor = await editorService.openEditor(\n\t\t\t\t\t\t\tfound.editor,\n\t\t\t\t\t\t\tfound.groupId,\n\t\t\t\t\t\t);\n\t\t\t\t\t\teditorControl = editor?.getControl() as\n\t\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t\tnotebookEditor:\n\t\t\t\t\t\t\t\t\t\t| NotebookEditorWidget\n\t\t\t\t\t\t\t\t\t\t| undefined;\n\t\t\t\t\t\t\t\t\tcodeEditor: CodeEditorWidget;\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t| undefined;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\teditorControl = editorService.activeEditorPane?.getControl() as\n\t\t\t\t\t| {\n\t\t\t\t\t\t\tnotebookEditor: NotebookEditorWidget | undefined;\n\t\t\t\t\t\t\tcodeEditor: CodeEditorWidget;\n\t\t\t\t\t  }\n\t\t\t\t\t| undefined;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\teditorControl &&\n\t\t\t\teditorControl.notebookEditor &&\n\t\t\t\teditorControl.codeEditor\n\t\t\t) {\n\t\t\t\tconst notebookDocument = editorControl.notebookEditor.textModel;\n\t\t\t\tconst textModel = editorControl.codeEditor.getModel();\n\t\t\t\tconst activeKernel = editorControl.notebookEditor.activeKernel;\n\t\t\t\tconst language =\n\t\t\t\t\tactiveKernel?.supportedLanguages[0] ??\n\t\t\t\t\tPLAINTEXT_LANGUAGE_ID;\n\n\t\t\t\tif (notebookDocument && textModel) {\n\t\t\t\t\tconst index = notebookDocument.length;\n\t\t\t\t\tconst value = textModel.getValue();\n\n\t\t\t\t\tif (isFalsyOrWhitespace(value)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\thistoryService.replaceLast(notebookDocument.uri, value);\n\t\t\t\t\thistoryService.addToHistory(notebookDocument.uri, \"\");\n\t\t\t\t\ttextModel.setValue(\"\");\n\n\t\t\t\t\tconst collapseState =\n\t\t\t\t\t\teditorControl.notebookEditor.notebookOptions.getDisplayOptions()\n\t\t\t\t\t\t\t.interactiveWindowCollapseCodeCells === \"fromEditor\"\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\tinputCollapsed: false,\n\t\t\t\t\t\t\t\t\toutputCollapsed: false,\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t: undefined;\n\n\t\t\t\t\tawait bulkEditService.apply([\n\t\t\t\t\t\tnew ResourceNotebookCellEdit(notebookDocument.uri, {\n\t\t\t\t\t\t\teditType: CellEditType.Replace,\n\t\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\t\tcount: 0,\n\t\t\t\t\t\t\tcells: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcellKind: CellKind.Code,\n\t\t\t\t\t\t\t\t\tmime: undefined,\n\t\t\t\t\t\t\t\t\tlanguage,\n\t\t\t\t\t\t\t\t\tsource: value,\n\t\t\t\t\t\t\t\t\toutputs: [],\n\t\t\t\t\t\t\t\t\tmetadata: {},\n\t\t\t\t\t\t\t\t\tcollapseState,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t}),\n\t\t\t\t\t]);\n\n\t\t\t\t\t// reveal the cell into view first\n\t\t\t\t\tconst range = { start: index, end: index + 1 };\n\t\t\t\t\teditorControl.notebookEditor.revealCellRangeInView(range);\n\t\t\t\t\tawait editorControl.notebookEditor.executeNotebookCells(\n\t\t\t\t\t\teditorControl.notebookEditor.getCellsInRange({\n\t\t\t\t\t\t\tstart: index,\n\t\t\t\t\t\t\tend: index + 1,\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\n\t\t\t\t\t// update the selection and focus in the extension host model\n\t\t\t\t\tconst editor = notebookEditorService.getNotebookEditor(\n\t\t\t\t\t\teditorControl.notebookEditor.getId(),\n\t\t\t\t\t);\n\t\t\t\t\tif (editor) {\n\t\t\t\t\t\teditor.setSelections([range]);\n\t\t\t\t\t\teditor.setFocus(range);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"interactive.input.clear\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"interactive.input.clear\",\n\t\t\t\t\t\"Clear the interactive window input editor contents\",\n\t\t\t\t),\n\t\t\t\tcategory: interactiveWindowCategory,\n\t\t\t\tf1: false,\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst editorControl =\n\t\t\t\teditorService.activeEditorPane?.getControl() as\n\t\t\t\t\t| {\n\t\t\t\t\t\t\tnotebookEditor: NotebookEditorWidget | undefined;\n\t\t\t\t\t\t\tcodeEditor: CodeEditorWidget;\n\t\t\t\t\t  }\n\t\t\t\t\t| undefined;\n\n\t\t\tif (\n\t\t\t\teditorControl &&\n\t\t\t\teditorControl.notebookEditor &&\n\t\t\t\teditorControl.codeEditor\n\t\t\t) {\n\t\t\t\tconst notebookDocument = editorControl.notebookEditor.textModel;\n\t\t\t\tconst textModel = editorControl.codeEditor.getModel();\n\t\t\t\tconst range = editorControl.codeEditor\n\t\t\t\t\t.getModel()\n\t\t\t\t\t?.getFullModelRange();\n\n\t\t\t\tif (notebookDocument && textModel && range) {\n\t\t\t\t\teditorControl.codeEditor.executeEdits(\"\", [\n\t\t\t\t\t\tEditOperation.replace(range, null),\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"interactive.history.previous\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"interactive.history.previous\",\n\t\t\t\t\t\"Previous value in history\",\n\t\t\t\t),\n\t\t\t\tcategory: interactiveWindowCategory,\n\t\t\t\tf1: false,\n\t\t\t\tkeybinding: [\n\t\t\t\t\t{\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\t\t\"activeEditor\",\n\t\t\t\t\t\t\t\t\"workbench.editor.interactive\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tINTERACTIVE_INPUT_CURSOR_BOUNDARY.notEqualsTo(\n\t\t\t\t\t\t\t\t\"bottom\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tINTERACTIVE_INPUT_CURSOR_BOUNDARY.notEqualsTo(\n\t\t\t\t\t\t\t\t\"none\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tSuggestContext.Visible.toNegated(),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tprimary: KeyCode.UpArrow,\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\t\t\"activeEditor\",\n\t\t\t\t\t\t\t\t\"workbench.editor.repl\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tINTERACTIVE_INPUT_CURSOR_BOUNDARY.notEqualsTo(\n\t\t\t\t\t\t\t\t\"bottom\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tINTERACTIVE_INPUT_CURSOR_BOUNDARY.notEqualsTo(\n\t\t\t\t\t\t\t\t\"none\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tSuggestContext.Visible.toNegated(),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tprimary: KeyCode.UpArrow,\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst historyService = accessor.get(IInteractiveHistoryService);\n\t\t\tconst editorControl =\n\t\t\t\teditorService.activeEditorPane?.getControl() as\n\t\t\t\t\t| {\n\t\t\t\t\t\t\tnotebookEditor: NotebookEditorWidget | undefined;\n\t\t\t\t\t\t\tcodeEditor: CodeEditorWidget;\n\t\t\t\t\t  }\n\t\t\t\t\t| undefined;\n\n\t\t\tif (\n\t\t\t\teditorControl &&\n\t\t\t\teditorControl.notebookEditor &&\n\t\t\t\teditorControl.codeEditor\n\t\t\t) {\n\t\t\t\tconst notebookDocument = editorControl.notebookEditor.textModel;\n\t\t\t\tconst textModel = editorControl.codeEditor.getModel();\n\n\t\t\t\tif (notebookDocument && textModel) {\n\t\t\t\t\tconst previousValue = historyService.getPreviousValue(\n\t\t\t\t\t\tnotebookDocument.uri,\n\t\t\t\t\t);\n\t\t\t\t\tif (previousValue) {\n\t\t\t\t\t\ttextModel.setValue(previousValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"interactive.history.next\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"interactive.history.next\",\n\t\t\t\t\t\"Next value in history\",\n\t\t\t\t),\n\t\t\t\tcategory: interactiveWindowCategory,\n\t\t\t\tf1: false,\n\t\t\t\tkeybinding: [\n\t\t\t\t\t{\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\t\t\"activeEditor\",\n\t\t\t\t\t\t\t\t\"workbench.editor.interactive\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tINTERACTIVE_INPUT_CURSOR_BOUNDARY.notEqualsTo(\n\t\t\t\t\t\t\t\t\"top\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tINTERACTIVE_INPUT_CURSOR_BOUNDARY.notEqualsTo(\n\t\t\t\t\t\t\t\t\"none\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tSuggestContext.Visible.toNegated(),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tprimary: KeyCode.DownArrow,\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\t\t\"activeEditor\",\n\t\t\t\t\t\t\t\t\"workbench.editor.repl\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tINTERACTIVE_INPUT_CURSOR_BOUNDARY.notEqualsTo(\n\t\t\t\t\t\t\t\t\"top\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tINTERACTIVE_INPUT_CURSOR_BOUNDARY.notEqualsTo(\n\t\t\t\t\t\t\t\t\"none\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tSuggestContext.Visible.toNegated(),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tprimary: KeyCode.DownArrow,\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst historyService = accessor.get(IInteractiveHistoryService);\n\t\t\tconst editorControl =\n\t\t\t\teditorService.activeEditorPane?.getControl() as\n\t\t\t\t\t| {\n\t\t\t\t\t\t\tnotebookEditor: NotebookEditorWidget | undefined;\n\t\t\t\t\t\t\tcodeEditor: CodeEditorWidget;\n\t\t\t\t\t  }\n\t\t\t\t\t| undefined;\n\n\t\t\tif (\n\t\t\t\teditorControl &&\n\t\t\t\teditorControl.notebookEditor &&\n\t\t\t\teditorControl.codeEditor\n\t\t\t) {\n\t\t\t\tconst notebookDocument = editorControl.notebookEditor.textModel;\n\t\t\t\tconst textModel = editorControl.codeEditor.getModel();\n\n\t\t\t\tif (notebookDocument && textModel) {\n\t\t\t\t\tconst nextValue = historyService.getNextValue(\n\t\t\t\t\t\tnotebookDocument.uri,\n\t\t\t\t\t);\n\t\t\t\t\tif (nextValue !== null) {\n\t\t\t\t\t\ttextModel.setValue(nextValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"interactive.scrollToTop\",\n\t\t\t\ttitle: localize(\"interactiveScrollToTop\", \"Scroll to Top\"),\n\t\t\t\tkeybinding: {\n\t\t\t\t\twhen: ContextKeyExpr.equals(\n\t\t\t\t\t\t\"activeEditor\",\n\t\t\t\t\t\t\"workbench.editor.interactive\",\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Home,\n\t\t\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyCode.UpArrow },\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t},\n\t\t\t\tcategory: interactiveWindowCategory,\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst editorControl =\n\t\t\t\teditorService.activeEditorPane?.getControl() as\n\t\t\t\t\t| {\n\t\t\t\t\t\t\tnotebookEditor: NotebookEditorWidget | undefined;\n\t\t\t\t\t\t\tcodeEditor: CodeEditorWidget;\n\t\t\t\t\t  }\n\t\t\t\t\t| undefined;\n\n\t\t\tif (\n\t\t\t\teditorControl &&\n\t\t\t\teditorControl.notebookEditor &&\n\t\t\t\teditorControl.codeEditor\n\t\t\t) {\n\t\t\t\tif (editorControl.notebookEditor.getLength() === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\teditorControl.notebookEditor.revealCellRangeInView({\n\t\t\t\t\tstart: 0,\n\t\t\t\t\tend: 1,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"interactive.scrollToBottom\",\n\t\t\t\ttitle: localize(\n\t\t\t\t\t\"interactiveScrollToBottom\",\n\t\t\t\t\t\"Scroll to Bottom\",\n\t\t\t\t),\n\t\t\t\tkeybinding: {\n\t\t\t\t\twhen: ContextKeyExpr.equals(\n\t\t\t\t\t\t\"activeEditor\",\n\t\t\t\t\t\t\"workbench.editor.interactive\",\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.End,\n\t\t\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyCode.DownArrow },\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t},\n\t\t\t\tcategory: interactiveWindowCategory,\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst editorControl =\n\t\t\t\teditorService.activeEditorPane?.getControl() as\n\t\t\t\t\t| {\n\t\t\t\t\t\t\tnotebookEditor: NotebookEditorWidget | undefined;\n\t\t\t\t\t\t\tcodeEditor: CodeEditorWidget;\n\t\t\t\t\t  }\n\t\t\t\t\t| undefined;\n\n\t\t\tif (\n\t\t\t\teditorControl &&\n\t\t\t\teditorControl.notebookEditor &&\n\t\t\t\teditorControl.codeEditor\n\t\t\t) {\n\t\t\t\tif (editorControl.notebookEditor.getLength() === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst len = editorControl.notebookEditor.getLength();\n\t\t\t\teditorControl.notebookEditor.revealCellRangeInView({\n\t\t\t\t\tstart: len - 1,\n\t\t\t\t\tend: len,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"interactive.input.focus\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"interactive.input.focus\",\n\t\t\t\t\t\"Focus Input Editor\",\n\t\t\t\t),\n\t\t\t\tcategory: interactiveWindowCategory,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\twhen: InteractiveWindowOpen,\n\t\t\t\t},\n\t\t\t\tprecondition: InteractiveWindowOpen,\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst editorControl =\n\t\t\t\teditorService.activeEditorPane?.getControl() as\n\t\t\t\t\t| {\n\t\t\t\t\t\t\tnotebookEditor: NotebookEditorWidget | undefined;\n\t\t\t\t\t\t\tcodeEditor: CodeEditorWidget;\n\t\t\t\t\t  }\n\t\t\t\t\t| undefined;\n\n\t\t\tif (\n\t\t\t\teditorControl &&\n\t\t\t\teditorControl.notebookEditor &&\n\t\t\t\teditorControl.codeEditor\n\t\t\t) {\n\t\t\t\teditorService.activeEditorPane?.focus();\n\t\t\t} else {\n\t\t\t\t// find and open the most recent interactive window\n\t\t\t\tconst openEditors = editorService.getEditors(\n\t\t\t\t\tEditorsOrder.MOST_RECENTLY_ACTIVE,\n\t\t\t\t);\n\t\t\t\tconst interactiveWindow = Iterable.find(\n\t\t\t\t\topenEditors,\n\t\t\t\t\t(identifier) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\tidentifier.editor.typeId ===\n\t\t\t\t\t\t\tInteractiveEditorInput.ID\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t\tif (interactiveWindow) {\n\t\t\t\t\tconst editorInput =\n\t\t\t\t\t\tinteractiveWindow.editor as InteractiveEditorInput;\n\t\t\t\t\tconst currentGroup = interactiveWindow.groupId;\n\t\t\t\t\tconst editor = await editorService.openEditor(\n\t\t\t\t\t\teditorInput,\n\t\t\t\t\t\tcurrentGroup,\n\t\t\t\t\t);\n\t\t\t\t\tconst editorControl = editor?.getControl() as\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\tnotebookEditor:\n\t\t\t\t\t\t\t\t\t| NotebookEditorWidget\n\t\t\t\t\t\t\t\t\t| undefined;\n\t\t\t\t\t\t\t\tcodeEditor: CodeEditorWidget;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t| undefined;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\teditorControl &&\n\t\t\t\t\t\teditorControl.notebookEditor &&\n\t\t\t\t\t\teditorControl.codeEditor\n\t\t\t\t\t) {\n\t\t\t\t\t\teditorService.activeEditorPane?.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"interactive.history.focus\",\n\t\t\t\ttitle: localize2(\"interactive.history.focus\", \"Focus History\"),\n\t\t\t\tcategory: interactiveWindowCategory,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\twhen: ContextKeyExpr.equals(\n\t\t\t\t\t\t\"activeEditor\",\n\t\t\t\t\t\t\"workbench.editor.interactive\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tprecondition: ContextKeyExpr.equals(\n\t\t\t\t\t\"activeEditor\",\n\t\t\t\t\t\"workbench.editor.interactive\",\n\t\t\t\t),\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst editorControl =\n\t\t\t\teditorService.activeEditorPane?.getControl() as\n\t\t\t\t\t| {\n\t\t\t\t\t\t\tnotebookEditor: NotebookEditorWidget | undefined;\n\t\t\t\t\t\t\tcodeEditor: CodeEditorWidget;\n\t\t\t\t\t\t\tfocusHistory: () => void;\n\t\t\t\t\t  }\n\t\t\t\t\t| undefined;\n\n\t\t\tif (\n\t\t\t\teditorControl &&\n\t\t\t\teditorControl.notebookEditor &&\n\t\t\t\teditorControl.codeEditor\n\t\t\t) {\n\t\t\t\teditorControl.notebookEditor.focus();\n\t\t\t}\n\t\t}\n\t},\n);\n\nregisterColor(\n\t\"interactive.activeCodeBorder\",\n\t{\n\t\tdark: ifDefinedThenElse(peekViewBorder, peekViewBorder, \"#007acc\"),\n\t\tlight: ifDefinedThenElse(peekViewBorder, peekViewBorder, \"#007acc\"),\n\t\thcDark: contrastBorder,\n\t\thcLight: contrastBorder,\n\t},\n\tlocalize(\n\t\t\"interactive.activeCodeBorder\",\n\t\t\"The border color for the current interactive code cell when the editor has focus.\",\n\t),\n);\n\nregisterColor(\n\t\"interactive.inactiveCodeBorder\",\n\t{\n\t\t//dark: theme.getColor(listInactiveSelectionBackground) ?? transparent(listInactiveSelectionBackground, 1),\n\t\tdark: ifDefinedThenElse(\n\t\t\tlistInactiveSelectionBackground,\n\t\t\tlistInactiveSelectionBackground,\n\t\t\t\"#37373D\",\n\t\t),\n\t\tlight: ifDefinedThenElse(\n\t\t\tlistInactiveSelectionBackground,\n\t\t\tlistInactiveSelectionBackground,\n\t\t\t\"#E4E6F1\",\n\t\t),\n\t\thcDark: PANEL_BORDER,\n\t\thcLight: PANEL_BORDER,\n\t},\n\tlocalize(\n\t\t\"interactive.inactiveCodeBorder\",\n\t\t\"The border color for the current interactive code cell when the editor does not have focus.\",\n\t),\n);\n\nRegistry.as<IConfigurationRegistry>(\n\tConfigurationExtensions.Configuration,\n).registerConfiguration({\n\tid: \"interactiveWindow\",\n\torder: 100,\n\ttype: \"object\",\n\tproperties: {\n\t\t[InteractiveWindowSetting.interactiveWindowAlwaysScrollOnNewCell]: {\n\t\t\ttype: \"boolean\",\n\t\t\tdefault: true,\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t\"interactiveWindow.alwaysScrollOnNewCell\",\n\t\t\t\t\"Automatically scroll the interactive window to show the output of the last statement executed. If this value is false, the window will only scroll if the last cell was already the one scrolled to.\",\n\t\t\t),\n\t\t},\n\t\t[NotebookSetting.InteractiveWindowPromptToSave]: {\n\t\t\ttype: \"boolean\",\n\t\t\tdefault: false,\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t\"interactiveWindow.promptToSaveOnClose\",\n\t\t\t\t\"Prompt to save the interactive window when it is closed. Only new interactive windows will be affected by this setting change.\",\n\t\t\t),\n\t\t},\n\t\t[InteractiveWindowSetting.executeWithShiftEnter]: {\n\t\t\ttype: \"boolean\",\n\t\t\tdefault: false,\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t\"interactiveWindow.executeWithShiftEnter\",\n\t\t\t\t\"Execute the Interactive Window (REPL) input box with shift+enter, so that enter can be used to create a newline.\",\n\t\t\t),\n\t\t\ttags: [\"replExecute\"],\n\t\t},\n\t\t[InteractiveWindowSetting.showExecutionHint]: {\n\t\t\ttype: \"boolean\",\n\t\t\tdefault: true,\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t\"interactiveWindow.showExecutionHint\",\n\t\t\t\t\"Display a hint in the Interactive Window (REPL) input box to indicate how to execute code.\",\n\t\t\t),\n\t\t\ttags: [\"replExecute\"],\n\t\t},\n\t},\n});\n"],
  "mappings": "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",
  "names": ["id", "editorInput", "editorControl"]
}
