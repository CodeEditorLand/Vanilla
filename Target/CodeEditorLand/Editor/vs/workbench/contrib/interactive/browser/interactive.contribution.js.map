{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/interactive/browser/interactive.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { Disposable, IDisposable } from '../../../../base/common/lifecycle.js';\nimport { parse } from '../../../../base/common/marshalling.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { extname, isEqual } from '../../../../base/common/resources.js';\nimport { isFalsyOrWhitespace } from '../../../../base/common/strings.js';\nimport { URI, UriComponents } from '../../../../base/common/uri.js';\nimport { IBulkEditService } from '../../../../editor/browser/services/bulkEditService.js';\nimport { CodeEditorWidget } from '../../../../editor/browser/widget/codeEditor/codeEditorWidget.js';\nimport { EditOperation } from '../../../../editor/common/core/editOperation.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../../../../editor/common/languages/modesRegistry.js';\nimport { ITextModel } from '../../../../editor/common/model.js';\nimport { IModelService } from '../../../../editor/common/services/model.js';\nimport { ITextModelContentProvider, ITextModelService } from '../../../../editor/common/services/resolverService.js';\nimport { peekViewBorder } from '../../../../editor/contrib/peekView/browser/peekView.js';\nimport { Context as SuggestContext } from '../../../../editor/contrib/suggest/browser/suggest.js';\nimport { localize, localize2 } from '../../../../nls.js';\nimport { ILocalizedString } from '../../../../platform/action/common/action.js';\nimport { Action2, MenuId, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { EditorActivation, ITextResourceEditorInput } from '../../../../platform/editor/common/editor.js';\nimport { SyncDescriptor } from '../../../../platform/instantiation/common/descriptors.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { contrastBorder, ifDefinedThenElse, listInactiveSelectionBackground, registerColor } from '../../../../platform/theme/common/colorRegistry.js';\nimport { EditorPaneDescriptor, IEditorPaneRegistry } from '../../../browser/editor.js';\nimport { IWorkbenchContribution, WorkbenchPhase, registerWorkbenchContribution2 } from '../../../common/contributions.js';\nimport { EditorExtensions, EditorsOrder, IEditorFactoryRegistry, IEditorSerializer, IUntypedEditorInput } from '../../../common/editor.js';\nimport { EditorInput } from '../../../common/editor/editorInput.js';\nimport { PANEL_BORDER } from '../../../common/theme.js';\nimport { ResourceNotebookCellEdit } from '../../bulkEdit/browser/bulkCellEdits.js';\nimport { InteractiveWindowSetting, INTERACTIVE_INPUT_CURSOR_BOUNDARY } from './interactiveCommon.js';\nimport { IInteractiveDocumentService, InteractiveDocumentService } from './interactiveDocumentService.js';\nimport { InteractiveEditor } from './interactiveEditor.js';\nimport { InteractiveEditorInput } from './interactiveEditorInput.js';\nimport { IInteractiveHistoryService, InteractiveHistoryService } from './interactiveHistoryService.js';\nimport { NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT } from '../../notebook/browser/controller/coreActions.js';\nimport { INotebookEditorOptions } from '../../notebook/browser/notebookBrowser.js';\nimport { NotebookEditorWidget } from '../../notebook/browser/notebookEditorWidget.js';\nimport * as icons from '../../notebook/browser/notebookIcons.js';\nimport { INotebookEditorService } from '../../notebook/browser/services/notebookEditorService.js';\nimport { CellEditType, CellKind, CellUri, INTERACTIVE_WINDOW_EDITOR_ID, NotebookSetting, NotebookWorkingCopyTypeIdentifier } from '../../notebook/common/notebookCommon.js';\nimport { InteractiveWindowOpen } from '../../notebook/common/notebookContextKeys.js';\nimport { INotebookKernelService } from '../../notebook/common/notebookKernelService.js';\nimport { INotebookService } from '../../notebook/common/notebookService.js';\nimport { columnToEditorGroup } from '../../../services/editor/common/editorGroupColumn.js';\nimport { IEditorGroupsService } from '../../../services/editor/common/editorGroupsService.js';\nimport { IEditorResolverService, RegisteredEditorPriority } from '../../../services/editor/common/editorResolverService.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { IWorkingCopyIdentifier } from '../../../services/workingCopy/common/workingCopy.js';\nimport { IWorkingCopyEditorHandler, IWorkingCopyEditorService } from '../../../services/workingCopy/common/workingCopyEditorService.js';\n\nconst interactiveWindowCategory: ILocalizedString = localize2('interactiveWindow', \"Interactive Window\");\n\nRegistry.as<IEditorPaneRegistry>(EditorExtensions.EditorPane).registerEditorPane(\n\tEditorPaneDescriptor.create(\n\t\tInteractiveEditor,\n\t\tINTERACTIVE_WINDOW_EDITOR_ID,\n\t\t'Interactive Window'\n\t),\n\t[\n\t\tnew SyncDescriptor(InteractiveEditorInput)\n\t]\n);\n\nexport class InteractiveDocumentContribution extends Disposable implements IWorkbenchContribution {\n\n\tstatic readonly ID = 'workbench.contrib.interactiveDocument';\n\n\tconstructor(\n\t\t@INotebookService notebookService: INotebookService,\n\t\t@IEditorResolverService editorResolverService: IEditorResolverService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\n\t\tconst info = notebookService.getContributedNotebookType('interactive');\n\n\t\t// We need to contribute a notebook type for the Interactive Window to provide notebook models.\n\t\tif (!info) {\n\t\t\tthis._register(notebookService.registerContributedNotebookType('interactive', {\n\t\t\t\tproviderDisplayName: 'Interactive Notebook',\n\t\t\t\tdisplayName: 'Interactive',\n\t\t\t\tfilenamePattern: ['*.interactive'],\n\t\t\t\tpriority: RegisteredEditorPriority.builtin\n\t\t\t}));\n\t\t}\n\n\t\teditorResolverService.registerEditor(\n\t\t\t`${Schemas.vscodeInteractiveInput}:/**`,\n\t\t\t{\n\t\t\t\tid: 'vscode-interactive-input',\n\t\t\t\tlabel: 'Interactive Editor',\n\t\t\t\tpriority: RegisteredEditorPriority.exclusive\n\t\t\t},\n\t\t\t{\n\t\t\t\tcanSupportResource: uri => uri.scheme === Schemas.vscodeInteractiveInput,\n\t\t\t\tsinglePerResource: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource }) => {\n\t\t\t\t\tconst editorInput = editorService.getEditors(EditorsOrder.SEQUENTIAL).find(editor => editor.editor instanceof InteractiveEditorInput && editor.editor.inputResource.toString() === resource.toString());\n\t\t\t\t\treturn editorInput!;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\teditorResolverService.registerEditor(\n\t\t\t`*.interactive`,\n\t\t\t{\n\t\t\t\tid: 'interactive',\n\t\t\t\tlabel: 'Interactive Editor',\n\t\t\t\tpriority: RegisteredEditorPriority.exclusive\n\t\t\t},\n\t\t\t{\n\t\t\t\tcanSupportResource: uri =>\n\t\t\t\t\t(uri.scheme === Schemas.untitled && extname(uri) === '.interactive') ||\n\t\t\t\t\t(uri.scheme === Schemas.vscodeNotebookCell && extname(uri) === '.interactive'),\n\t\t\t\tsinglePerResource: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource, options }) => {\n\t\t\t\t\tconst data = CellUri.parse(resource);\n\t\t\t\t\tlet cellOptions: ITextResourceEditorInput | undefined;\n\t\t\t\t\tlet iwResource = resource;\n\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tcellOptions = { resource, options };\n\t\t\t\t\t\tiwResource = data.notebook;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst notebookOptions: INotebookEditorOptions | undefined = {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\tcellOptions,\n\t\t\t\t\t\tcellRevealType: undefined,\n\t\t\t\t\t\tcellSelections: undefined,\n\t\t\t\t\t\tisReadOnly: undefined,\n\t\t\t\t\t\tviewState: undefined,\n\t\t\t\t\t\tindexedCellOptions: undefined\n\t\t\t\t\t};\n\n\t\t\t\t\tconst editorInput = createEditor(iwResource, this.instantiationService);\n\t\t\t\t\treturn {\n\t\t\t\t\t\teditor: editorInput,\n\t\t\t\t\t\toptions: notebookOptions\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tcreateUntitledEditorInput: ({ resource, options }) => {\n\t\t\t\t\tif (!resource) {\n\t\t\t\t\t\tthrow new Error('Interactive window editors must have a resource name');\n\t\t\t\t\t}\n\t\t\t\t\tconst data = CellUri.parse(resource);\n\t\t\t\t\tlet cellOptions: ITextResourceEditorInput | undefined;\n\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tcellOptions = { resource, options };\n\t\t\t\t\t}\n\n\t\t\t\t\tconst notebookOptions: INotebookEditorOptions = {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\tcellOptions,\n\t\t\t\t\t\tcellRevealType: undefined,\n\t\t\t\t\t\tcellSelections: undefined,\n\t\t\t\t\t\tisReadOnly: undefined,\n\t\t\t\t\t\tviewState: undefined,\n\t\t\t\t\t\tindexedCellOptions: undefined\n\t\t\t\t\t};\n\n\t\t\t\t\tconst editorInput = createEditor(resource, this.instantiationService);\n\t\t\t\t\treturn {\n\t\t\t\t\t\teditor: editorInput,\n\t\t\t\t\t\toptions: notebookOptions\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n}\n\nclass InteractiveInputContentProvider implements ITextModelContentProvider {\n\n\tstatic readonly ID = 'workbench.contrib.interactiveInputContentProvider';\n\n\tprivate readonly _registration: IDisposable;\n\n\tconstructor(\n\t\t@ITextModelService textModelService: ITextModelService,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t) {\n\t\tthis._registration = textModelService.registerTextModelContentProvider(Schemas.vscodeInteractiveInput, this);\n\t}\n\n\tdispose(): void {\n\t\tthis._registration.dispose();\n\t}\n\n\tasync provideTextContent(resource: URI): Promise<ITextModel | null> {\n\t\tconst existing = this._modelService.getModel(resource);\n\t\tif (existing) {\n\t\t\treturn existing;\n\t\t}\n\t\tconst result: ITextModel | null = this._modelService.createModel('', null, resource, false);\n\t\treturn result;\n\t}\n}\n\nfunction createEditor(resource: URI, instantiationService: IInstantiationService): EditorInput {\n\tconst counter = /\\/Interactive-(\\d+)/.exec(resource.path);\n\tconst inputBoxPath = counter && counter[1] ? `/InteractiveInput-${counter[1]}` : 'InteractiveInput';\n\tconst inputUri = URI.from({ scheme: Schemas.vscodeInteractiveInput, path: inputBoxPath });\n\tconst editorInput = InteractiveEditorInput.create(instantiationService, resource, inputUri);\n\n\treturn editorInput;\n}\n\nclass InteractiveWindowWorkingCopyEditorHandler extends Disposable implements IWorkbenchContribution, IWorkingCopyEditorHandler {\n\n\tstatic readonly ID = 'workbench.contrib.interactiveWindowWorkingCopyEditorHandler';\n\n\tconstructor(\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IWorkingCopyEditorService private readonly _workingCopyEditorService: IWorkingCopyEditorService,\n\t\t@IExtensionService private readonly _extensionService: IExtensionService,\n\t) {\n\t\tsuper();\n\n\t\tthis._installHandler();\n\t}\n\n\thandles(workingCopy: IWorkingCopyIdentifier): boolean {\n\t\tconst viewType = this._getViewType(workingCopy);\n\t\treturn !!viewType && viewType === 'interactive';\n\n\t}\n\n\tisOpen(workingCopy: IWorkingCopyIdentifier, editor: EditorInput): boolean {\n\t\tif (!this.handles(workingCopy)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn editor instanceof InteractiveEditorInput && isEqual(workingCopy.resource, editor.resource);\n\t}\n\n\tcreateEditor(workingCopy: IWorkingCopyIdentifier): EditorInput {\n\t\treturn createEditor(workingCopy.resource, this._instantiationService);\n\t}\n\n\tprivate async _installHandler(): Promise<void> {\n\t\tawait this._extensionService.whenInstalledExtensionsRegistered();\n\n\t\tthis._register(this._workingCopyEditorService.registerHandler(this));\n\t}\n\n\tprivate _getViewType(workingCopy: IWorkingCopyIdentifier): string | undefined {\n\t\treturn NotebookWorkingCopyTypeIdentifier.parse(workingCopy.typeId);\n\t}\n}\n\nregisterWorkbenchContribution2(InteractiveDocumentContribution.ID, InteractiveDocumentContribution, WorkbenchPhase.BlockRestore);\nregisterWorkbenchContribution2(InteractiveInputContentProvider.ID, InteractiveInputContentProvider, {\n\teditorTypeId: INTERACTIVE_WINDOW_EDITOR_ID\n});\nregisterWorkbenchContribution2(InteractiveWindowWorkingCopyEditorHandler.ID, InteractiveWindowWorkingCopyEditorHandler, {\n\teditorTypeId: INTERACTIVE_WINDOW_EDITOR_ID\n});\n\ntype interactiveEditorInputData = { resource: URI; inputResource: URI; name: string; language: string };\n\nexport class InteractiveEditorSerializer implements IEditorSerializer {\n\tpublic static readonly ID = InteractiveEditorInput.ID;\n\n\tcanSerialize(editor: EditorInput): editor is InteractiveEditorInput {\n\t\tif (!(editor instanceof InteractiveEditorInput)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn URI.isUri(editor.primary.resource) && URI.isUri(editor.inputResource);\n\t}\n\n\tserialize(input: EditorInput): string | undefined {\n\t\tif (!this.canSerialize(input)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn JSON.stringify({\n\t\t\tresource: input.primary.resource,\n\t\t\tinputResource: input.inputResource,\n\t\t\tname: input.getName(),\n\t\t\tlanguage: input.language\n\t\t});\n\t}\n\n\tdeserialize(instantiationService: IInstantiationService, raw: string) {\n\t\tconst data = <interactiveEditorInputData>parse(raw);\n\t\tif (!data) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst { resource, inputResource, name, language } = data;\n\t\tif (!URI.isUri(resource) || !URI.isUri(inputResource)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst input = InteractiveEditorInput.create(instantiationService, resource, inputResource, name, language);\n\t\treturn input;\n\t}\n}\n\nRegistry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory)\n\t.registerEditorSerializer(\n\t\tInteractiveEditorSerializer.ID,\n\t\tInteractiveEditorSerializer);\n\nregisterSingleton(IInteractiveHistoryService, InteractiveHistoryService, InstantiationType.Delayed);\nregisterSingleton(IInteractiveDocumentService, InteractiveDocumentService, InstantiationType.Delayed);\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: '_interactive.open',\n\t\t\ttitle: localize2('interactive.open', 'Open Interactive Window'),\n\t\t\tf1: false,\n\t\t\tcategory: interactiveWindowCategory,\n\t\t\tmetadata: {\n\t\t\t\tdescription: localize('interactive.open', 'Open Interactive Window'),\n\t\t\t\targs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'showOptions',\n\t\t\t\t\t\tdescription: 'Show Options',\n\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t'viewColumn': {\n\t\t\t\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\t\t\t\tdefault: -1\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t'preserveFocus': {\n\t\t\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\t\t\tdefault: true\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'resource',\n\t\t\t\t\t\tdescription: 'Interactive resource Uri',\n\t\t\t\t\t\tisOptional: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'controllerId',\n\t\t\t\t\t\tdescription: 'Notebook controller Id',\n\t\t\t\t\t\tisOptional: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'title',\n\t\t\t\t\t\tdescription: 'Notebook editor title',\n\t\t\t\t\t\tisOptional: true\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, showOptions?: number | { viewColumn?: number; preserveFocus?: boolean }, resource?: URI, id?: string, title?: string): Promise<{ notebookUri: URI; inputUri: URI; notebookEditorId?: string }> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\tconst historyService = accessor.get(IInteractiveHistoryService);\n\t\tconst kernelService = accessor.get(INotebookKernelService);\n\t\tconst logService = accessor.get(ILogService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst group = columnToEditorGroup(editorGroupService, configurationService, typeof showOptions === 'number' ? showOptions : showOptions?.viewColumn);\n\t\tconst editorOptions = {\n\t\t\tactivation: EditorActivation.PRESERVE,\n\t\t\tpreserveFocus: typeof showOptions !== 'number' ? (showOptions?.preserveFocus ?? false) : false\n\t\t};\n\n\t\tif (resource && extname(resource) === '.interactive') {\n\t\t\tlogService.debug('Open interactive window from resource:', resource.toString());\n\t\t\tconst resourceUri = URI.revive(resource);\n\t\t\tconst editors = editorService.findEditors(resourceUri).filter(id => id.editor instanceof InteractiveEditorInput && id.editor.resource?.toString() === resourceUri.toString());\n\t\t\tif (editors.length) {\n\t\t\t\tlogService.debug('Find existing interactive window:', resource.toString());\n\t\t\t\tconst editorInput = editors[0].editor as InteractiveEditorInput;\n\t\t\t\tconst currentGroup = editors[0].groupId;\n\t\t\t\tconst editor = await editorService.openEditor(editorInput, editorOptions, currentGroup);\n\t\t\t\tconst editorControl = editor?.getControl() as { notebookEditor: NotebookEditorWidget | undefined; codeEditor: CodeEditorWidget } | undefined;\n\n\t\t\t\treturn {\n\t\t\t\t\tnotebookUri: editorInput.resource,\n\t\t\t\t\tinputUri: editorInput.inputResource,\n\t\t\t\t\tnotebookEditorId: editorControl?.notebookEditor?.getId()\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tconst existingNotebookDocument = new Set<string>();\n\t\teditorService.getEditors(EditorsOrder.SEQUENTIAL).forEach(editor => {\n\t\t\tif (editor.editor.resource) {\n\t\t\t\texistingNotebookDocument.add(editor.editor.resource.toString());\n\t\t\t}\n\t\t});\n\n\t\tlet notebookUri: URI | undefined = undefined;\n\t\tlet inputUri: URI | undefined = undefined;\n\t\tlet counter = 1;\n\t\tdo {\n\t\t\tnotebookUri = URI.from({ scheme: Schemas.untitled, path: `/Interactive-${counter}.interactive` });\n\t\t\tinputUri = URI.from({ scheme: Schemas.vscodeInteractiveInput, path: `/InteractiveInput-${counter}` });\n\n\t\t\tcounter++;\n\t\t} while (existingNotebookDocument.has(notebookUri.toString()));\n\t\tInteractiveEditorInput.setName(notebookUri, title);\n\n\t\tlogService.debug('Open new interactive window:', notebookUri.toString(), inputUri.toString());\n\n\t\tif (id) {\n\t\t\tconst allKernels = kernelService.getMatchingKernel({ uri: notebookUri, notebookType: 'interactive' }).all;\n\t\t\tconst preferredKernel = allKernels.find(kernel => kernel.id === id);\n\t\t\tif (preferredKernel) {\n\t\t\t\tkernelService.preselectKernelForNotebook(preferredKernel, { uri: notebookUri, notebookType: 'interactive' });\n\t\t\t}\n\t\t}\n\n\t\thistoryService.clearHistory(notebookUri);\n\t\tconst editorInput: IUntypedEditorInput = { resource: notebookUri, options: editorOptions };\n\t\tconst editorPane = await editorService.openEditor(editorInput, group);\n\t\tconst editorControl = editorPane?.getControl() as { notebookEditor: NotebookEditorWidget | undefined; codeEditor: CodeEditorWidget } | undefined;\n\t\t// Extensions must retain references to these URIs to manipulate the interactive editor\n\t\tlogService.debug('New interactive window opened. Notebook editor id', editorControl?.notebookEditor?.getId());\n\t\treturn { notebookUri, inputUri, notebookEditorId: editorControl?.notebookEditor?.getId() };\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'interactive.execute',\n\t\t\ttitle: localize2('interactive.execute', 'Execute Code'),\n\t\t\tcategory: interactiveWindowCategory,\n\t\t\tkeybinding: [{\n\t\t\t\t// when: NOTEBOOK_CELL_LIST_FOCUSED,\n\t\t\t\twhen: ContextKeyExpr.equals('activeEditor', 'workbench.editor.interactive'),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\t\t\t\tweight: NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT\n\t\t\t}, {\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tContextKeyExpr.equals('activeEditor', 'workbench.editor.interactive'),\n\t\t\t\t\tContextKeyExpr.equals('config.interactiveWindow.executeWithShiftEnter', true)\n\t\t\t\t),\n\t\t\t\tprimary: KeyMod.Shift | KeyCode.Enter,\n\t\t\t\tweight: NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT\n\t\t\t}, {\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tContextKeyExpr.equals('activeEditor', 'workbench.editor.interactive'),\n\t\t\t\t\tContextKeyExpr.equals('config.interactiveWindow.executeWithShiftEnter', false)\n\t\t\t\t),\n\t\t\t\tprimary: KeyCode.Enter,\n\t\t\t\tweight: NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT\n\t\t\t}],\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.InteractiveInputExecute\n\t\t\t\t},\n\t\t\t],\n\t\t\ticon: icons.executeIcon,\n\t\t\tf1: false,\n\t\t\tmetadata: {\n\t\t\t\tdescription: 'Execute the Contents of the Input Box',\n\t\t\t\targs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'resource',\n\t\t\t\t\t\tdescription: 'Interactive resource Uri',\n\t\t\t\t\t\tisOptional: true\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, context?: UriComponents): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst bulkEditService = accessor.get(IBulkEditService);\n\t\tconst historyService = accessor.get(IInteractiveHistoryService);\n\t\tconst notebookEditorService = accessor.get(INotebookEditorService);\n\t\tlet editorControl: { notebookEditor: NotebookEditorWidget | undefined; codeEditor: CodeEditorWidget } | undefined;\n\t\tif (context) {\n\t\t\tconst resourceUri = URI.revive(context);\n\t\t\tconst editors = editorService.findEditors(resourceUri);\n\t\t\tfor (const found of editors) {\n\t\t\t\tif (found.editor.typeId === InteractiveEditorInput.ID) {\n\t\t\t\t\tconst editor = await editorService.openEditor(found.editor, found.groupId);\n\t\t\t\t\teditorControl = editor?.getControl() as { notebookEditor: NotebookEditorWidget | undefined; codeEditor: CodeEditorWidget } | undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\teditorControl = editorService.activeEditorPane?.getControl() as { notebookEditor: NotebookEditorWidget | undefined; codeEditor: CodeEditorWidget } | undefined;\n\t\t}\n\n\n\t\tif (editorControl && editorControl.notebookEditor && editorControl.codeEditor) {\n\t\t\tconst notebookDocument = editorControl.notebookEditor.textModel;\n\t\t\tconst textModel = editorControl.codeEditor.getModel();\n\t\t\tconst activeKernel = editorControl.notebookEditor.activeKernel;\n\t\t\tconst language = activeKernel?.supportedLanguages[0] ?? PLAINTEXT_LANGUAGE_ID;\n\n\t\t\tif (notebookDocument && textModel) {\n\t\t\t\tconst index = notebookDocument.length;\n\t\t\t\tconst value = textModel.getValue();\n\n\t\t\t\tif (isFalsyOrWhitespace(value)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\thistoryService.replaceLast(notebookDocument.uri, value);\n\t\t\t\thistoryService.addToHistory(notebookDocument.uri, '');\n\t\t\t\ttextModel.setValue('');\n\n\t\t\t\tconst collapseState = editorControl.notebookEditor.notebookOptions.getDisplayOptions().interactiveWindowCollapseCodeCells === 'fromEditor' ?\n\t\t\t\t\t{\n\t\t\t\t\t\tinputCollapsed: false,\n\t\t\t\t\t\toutputCollapsed: false\n\t\t\t\t\t} :\n\t\t\t\t\tundefined;\n\n\t\t\t\tawait bulkEditService.apply([\n\t\t\t\t\tnew ResourceNotebookCellEdit(notebookDocument.uri,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\teditType: CellEditType.Replace,\n\t\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\t\tcount: 0,\n\t\t\t\t\t\t\tcells: [{\n\t\t\t\t\t\t\t\tcellKind: CellKind.Code,\n\t\t\t\t\t\t\t\tmime: undefined,\n\t\t\t\t\t\t\t\tlanguage,\n\t\t\t\t\t\t\t\tsource: value,\n\t\t\t\t\t\t\t\toutputs: [],\n\t\t\t\t\t\t\t\tmetadata: {},\n\t\t\t\t\t\t\t\tcollapseState\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t]);\n\n\t\t\t\t// reveal the cell into view first\n\t\t\t\tconst range = { start: index, end: index + 1 };\n\t\t\t\teditorControl.notebookEditor.revealCellRangeInView(range);\n\t\t\t\tawait editorControl.notebookEditor.executeNotebookCells(editorControl.notebookEditor.getCellsInRange({ start: index, end: index + 1 }));\n\n\t\t\t\t// update the selection and focus in the extension host model\n\t\t\t\tconst editor = notebookEditorService.getNotebookEditor(editorControl.notebookEditor.getId());\n\t\t\t\tif (editor) {\n\t\t\t\t\teditor.setSelections([range]);\n\t\t\t\t\teditor.setFocus(range);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'interactive.input.clear',\n\t\t\ttitle: localize2('interactive.input.clear', 'Clear the interactive window input editor contents'),\n\t\t\tcategory: interactiveWindowCategory,\n\t\t\tf1: false\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorControl = editorService.activeEditorPane?.getControl() as { notebookEditor: NotebookEditorWidget | undefined; codeEditor: CodeEditorWidget } | undefined;\n\n\t\tif (editorControl && editorControl.notebookEditor && editorControl.codeEditor) {\n\t\t\tconst notebookDocument = editorControl.notebookEditor.textModel;\n\t\t\tconst textModel = editorControl.codeEditor.getModel();\n\t\t\tconst range = editorControl.codeEditor.getModel()?.getFullModelRange();\n\n\t\t\tif (notebookDocument && textModel && range) {\n\t\t\t\teditorControl.codeEditor.executeEdits('', [EditOperation.replace(range, null)]);\n\t\t\t}\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'interactive.history.previous',\n\t\t\ttitle: localize2('interactive.history.previous', 'Previous value in history'),\n\t\t\tcategory: interactiveWindowCategory,\n\t\t\tf1: false,\n\t\t\tkeybinding: [{\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tContextKeyExpr.equals('activeEditor', 'workbench.editor.interactive'),\n\t\t\t\t\tINTERACTIVE_INPUT_CURSOR_BOUNDARY.notEqualsTo('bottom'),\n\t\t\t\t\tINTERACTIVE_INPUT_CURSOR_BOUNDARY.notEqualsTo('none'),\n\t\t\t\t\tSuggestContext.Visible.toNegated()\n\t\t\t\t),\n\t\t\t\tprimary: KeyCode.UpArrow,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t}, {\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tContextKeyExpr.equals('activeEditor', 'workbench.editor.repl'),\n\t\t\t\t\tINTERACTIVE_INPUT_CURSOR_BOUNDARY.notEqualsTo('bottom'),\n\t\t\t\t\tINTERACTIVE_INPUT_CURSOR_BOUNDARY.notEqualsTo('none'),\n\t\t\t\t\tSuggestContext.Visible.toNegated()\n\t\t\t\t),\n\t\t\t\tprimary: KeyCode.UpArrow,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t}]\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst historyService = accessor.get(IInteractiveHistoryService);\n\t\tconst editorControl = editorService.activeEditorPane?.getControl() as { notebookEditor: NotebookEditorWidget | undefined; codeEditor: CodeEditorWidget } | undefined;\n\n\n\n\t\tif (editorControl && editorControl.notebookEditor && editorControl.codeEditor) {\n\t\t\tconst notebookDocument = editorControl.notebookEditor.textModel;\n\t\t\tconst textModel = editorControl.codeEditor.getModel();\n\n\t\t\tif (notebookDocument && textModel) {\n\t\t\t\tconst previousValue = historyService.getPreviousValue(notebookDocument.uri);\n\t\t\t\tif (previousValue) {\n\t\t\t\t\ttextModel.setValue(previousValue);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'interactive.history.next',\n\t\t\ttitle: localize2('interactive.history.next', 'Next value in history'),\n\t\t\tcategory: interactiveWindowCategory,\n\t\t\tf1: false,\n\t\t\tkeybinding: [{\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tContextKeyExpr.equals('activeEditor', 'workbench.editor.interactive'),\n\t\t\t\t\tINTERACTIVE_INPUT_CURSOR_BOUNDARY.notEqualsTo('top'),\n\t\t\t\t\tINTERACTIVE_INPUT_CURSOR_BOUNDARY.notEqualsTo('none'),\n\t\t\t\t\tSuggestContext.Visible.toNegated()\n\t\t\t\t),\n\t\t\t\tprimary: KeyCode.DownArrow,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t}, {\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tContextKeyExpr.equals('activeEditor', 'workbench.editor.repl'),\n\t\t\t\t\tINTERACTIVE_INPUT_CURSOR_BOUNDARY.notEqualsTo('top'),\n\t\t\t\t\tINTERACTIVE_INPUT_CURSOR_BOUNDARY.notEqualsTo('none'),\n\t\t\t\t\tSuggestContext.Visible.toNegated()\n\t\t\t\t),\n\t\t\t\tprimary: KeyCode.DownArrow,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t}],\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst historyService = accessor.get(IInteractiveHistoryService);\n\t\tconst editorControl = editorService.activeEditorPane?.getControl() as { notebookEditor: NotebookEditorWidget | undefined; codeEditor: CodeEditorWidget } | undefined;\n\n\t\tif (editorControl && editorControl.notebookEditor && editorControl.codeEditor) {\n\t\t\tconst notebookDocument = editorControl.notebookEditor.textModel;\n\t\t\tconst textModel = editorControl.codeEditor.getModel();\n\n\t\t\tif (notebookDocument && textModel) {\n\t\t\t\tconst nextValue = historyService.getNextValue(notebookDocument.uri);\n\t\t\t\tif (nextValue !== null) {\n\t\t\t\t\ttextModel.setValue(nextValue);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'interactive.scrollToTop',\n\t\t\ttitle: localize('interactiveScrollToTop', 'Scroll to Top'),\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.equals('activeEditor', 'workbench.editor.interactive'),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Home,\n\t\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyCode.UpArrow },\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t},\n\t\t\tcategory: interactiveWindowCategory,\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorControl = editorService.activeEditorPane?.getControl() as { notebookEditor: NotebookEditorWidget | undefined; codeEditor: CodeEditorWidget } | undefined;\n\n\t\tif (editorControl && editorControl.notebookEditor && editorControl.codeEditor) {\n\t\t\tif (editorControl.notebookEditor.getLength() === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\teditorControl.notebookEditor.revealCellRangeInView({ start: 0, end: 1 });\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'interactive.scrollToBottom',\n\t\t\ttitle: localize('interactiveScrollToBottom', 'Scroll to Bottom'),\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.equals('activeEditor', 'workbench.editor.interactive'),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.End,\n\t\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyCode.DownArrow },\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t},\n\t\t\tcategory: interactiveWindowCategory,\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorControl = editorService.activeEditorPane?.getControl() as { notebookEditor: NotebookEditorWidget | undefined; codeEditor: CodeEditorWidget } | undefined;\n\n\t\tif (editorControl && editorControl.notebookEditor && editorControl.codeEditor) {\n\t\t\tif (editorControl.notebookEditor.getLength() === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst len = editorControl.notebookEditor.getLength();\n\t\t\teditorControl.notebookEditor.revealCellRangeInView({ start: len - 1, end: len });\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'interactive.input.focus',\n\t\t\ttitle: localize2('interactive.input.focus', 'Focus Input Editor'),\n\t\t\tcategory: interactiveWindowCategory,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: InteractiveWindowOpen,\n\t\t\t},\n\t\t\tprecondition: InteractiveWindowOpen,\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorControl = editorService.activeEditorPane?.getControl() as { notebookEditor: NotebookEditorWidget | undefined; codeEditor: CodeEditorWidget } | undefined;\n\n\t\tif (editorControl && editorControl.notebookEditor && editorControl.codeEditor) {\n\t\t\teditorService.activeEditorPane?.focus();\n\t\t}\n\t\telse {\n\t\t\t// find and open the most recent interactive window\n\t\t\tconst openEditors = editorService.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE);\n\t\t\tconst interactiveWindow = Iterable.find(openEditors, identifier => { return identifier.editor.typeId === InteractiveEditorInput.ID; });\n\t\t\tif (interactiveWindow) {\n\t\t\t\tconst editorInput = interactiveWindow.editor as InteractiveEditorInput;\n\t\t\t\tconst currentGroup = interactiveWindow.groupId;\n\t\t\t\tconst editor = await editorService.openEditor(editorInput, currentGroup);\n\t\t\t\tconst editorControl = editor?.getControl() as { notebookEditor: NotebookEditorWidget | undefined; codeEditor: CodeEditorWidget } | undefined;\n\n\t\t\t\tif (editorControl && editorControl.notebookEditor && editorControl.codeEditor) {\n\t\t\t\t\teditorService.activeEditorPane?.focus();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'interactive.history.focus',\n\t\t\ttitle: localize2('interactive.history.focus', 'Focus History'),\n\t\t\tcategory: interactiveWindowCategory,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: ContextKeyExpr.equals('activeEditor', 'workbench.editor.interactive'),\n\t\t\t},\n\t\t\tprecondition: ContextKeyExpr.equals('activeEditor', 'workbench.editor.interactive'),\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorControl = editorService.activeEditorPane?.getControl() as { notebookEditor: NotebookEditorWidget | undefined; codeEditor: CodeEditorWidget; focusHistory: () => void } | undefined;\n\n\t\tif (editorControl && editorControl.notebookEditor && editorControl.codeEditor) {\n\t\t\teditorControl.notebookEditor.focus();\n\t\t}\n\t}\n});\n\nregisterColor('interactive.activeCodeBorder', {\n\tdark: ifDefinedThenElse(peekViewBorder, peekViewBorder, '#007acc'),\n\tlight: ifDefinedThenElse(peekViewBorder, peekViewBorder, '#007acc'),\n\thcDark: contrastBorder,\n\thcLight: contrastBorder\n}, localize('interactive.activeCodeBorder', 'The border color for the current interactive code cell when the editor has focus.'));\n\nregisterColor('interactive.inactiveCodeBorder', {\n\t//dark: theme.getColor(listInactiveSelectionBackground) ?? transparent(listInactiveSelectionBackground, 1),\n\tdark: ifDefinedThenElse(listInactiveSelectionBackground, listInactiveSelectionBackground, '#37373D'),\n\tlight: ifDefinedThenElse(listInactiveSelectionBackground, listInactiveSelectionBackground, '#E4E6F1'),\n\thcDark: PANEL_BORDER,\n\thcLight: PANEL_BORDER\n}, localize('interactive.inactiveCodeBorder', 'The border color for the current interactive code cell when the editor does not have focus.'));\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).registerConfiguration({\n\tid: 'interactiveWindow',\n\torder: 100,\n\ttype: 'object',\n\t'properties': {\n\t\t[InteractiveWindowSetting.interactiveWindowAlwaysScrollOnNewCell]: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tmarkdownDescription: localize('interactiveWindow.alwaysScrollOnNewCell', \"Automatically scroll the interactive window to show the output of the last statement executed. If this value is false, the window will only scroll if the last cell was already the one scrolled to.\")\n\t\t},\n\t\t[NotebookSetting.InteractiveWindowPromptToSave]: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tmarkdownDescription: localize('interactiveWindow.promptToSaveOnClose', \"Prompt to save the interactive window when it is closed. Only new interactive windows will be affected by this setting change.\")\n\t\t},\n\t\t[InteractiveWindowSetting.executeWithShiftEnter]: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tmarkdownDescription: localize('interactiveWindow.executeWithShiftEnter', \"Execute the Interactive Window (REPL) input box with shift+enter, so that enter can be used to create a newline.\"),\n\t\t\ttags: ['replExecute']\n\t\t},\n\t\t[InteractiveWindowSetting.showExecutionHint]: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tmarkdownDescription: localize('interactiveWindow.showExecutionHint', \"Display a hint in the Interactive Window (REPL) input box to indicate how to execute code.\"),\n\t\t\ttags: ['replExecute']\n\t\t}\n\t}\n});\n"],
  "mappings": "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",
  "names": ["id", "editorInput", "editorControl"]
}
