{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/interactive/browser/interactiveDocumentService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\n\nexport const IInteractiveDocumentService = createDecorator<IInteractiveDocumentService>('IInteractiveDocumentService');\n\nexport interface IInteractiveDocumentService {\n\treadonly _serviceBrand: undefined;\n\tonWillAddInteractiveDocument: Event<{ notebookUri: URI; inputUri: URI; languageId: string }>;\n\tonWillRemoveInteractiveDocument: Event<{ notebookUri: URI; inputUri: URI }>;\n\twillCreateInteractiveDocument(notebookUri: URI, inputUri: URI, languageId: string): void;\n\twillRemoveInteractiveDocument(notebookUri: URI, inputUri: URI): void;\n}\n\nexport class InteractiveDocumentService extends Disposable implements IInteractiveDocumentService {\n\tdeclare readonly _serviceBrand: undefined;\n\tprivate readonly _onWillAddInteractiveDocument = this._register(new Emitter<{ notebookUri: URI; inputUri: URI; languageId: string }>());\n\tonWillAddInteractiveDocument = this._onWillAddInteractiveDocument.event;\n\tprivate readonly _onWillRemoveInteractiveDocument = this._register(new Emitter<{ notebookUri: URI; inputUri: URI }>());\n\tonWillRemoveInteractiveDocument = this._onWillRemoveInteractiveDocument.event;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\twillCreateInteractiveDocument(notebookUri: URI, inputUri: URI, languageId: string) {\n\t\tthis._onWillAddInteractiveDocument.fire({\n\t\t\tnotebookUri,\n\t\t\tinputUri,\n\t\t\tlanguageId\n\t\t});\n\t}\n\n\twillRemoveInteractiveDocument(notebookUri: URI, inputUri: URI) {\n\t\tthis._onWillRemoveInteractiveDocument.fire({\n\t\t\tnotebookUri,\n\t\t\tinputUri\n\t\t});\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,SAAS,aAAa;AAC/B,SAAS,kBAAkB;AAC3B,SAAS,WAAW;AACpB,SAAS,uBAAuB;AAEzB,MAAM,8BAA8B,gBAA6C,6BAA6B;AAU9G,MAAM,mCAAmC,WAAkD;AAAA,EApBlG,OAoBkG;AAAA;AAAA;AAAA,EAEhF,gCAAgC,KAAK,UAAU,IAAI,QAAiE,CAAC;AAAA,EACtI,+BAA+B,KAAK,8BAA8B;AAAA,EACjD,mCAAmC,KAAK,UAAU,IAAI,QAA6C,CAAC;AAAA,EACrH,kCAAkC,KAAK,iCAAiC;AAAA,EAExE,cAAc;AACb,UAAM;AAAA,EACP;AAAA,EAEA,8BAA8B,aAAkB,UAAe,YAAoB;AAClF,SAAK,8BAA8B,KAAK;AAAA,MACvC;AAAA,MACA;AAAA,MACA;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,8BAA8B,aAAkB,UAAe;AAC9D,SAAK,iCAAiC,KAAK;AAAA,MAC1C;AAAA,MACA;AAAA,IACD,CAAC;AAAA,EACF;AACD;",
  "names": []
}
