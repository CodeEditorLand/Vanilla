{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/interactive/browser/replInputHintContentWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport { status } from \"../../../../base/browser/ui/aria/aria.js\";\nimport { KeybindingLabel } from \"../../../../base/browser/ui/keybindingLabel/keybindingLabel.js\";\nimport { Event } from \"../../../../base/common/event.js\";\nimport type { ResolvedKeybinding } from \"../../../../base/common/keybindings.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { OS } from \"../../../../base/common/platform.js\";\nimport {\n\tContentWidgetPositionPreference,\n\ttype ICodeEditor,\n\ttype IContentWidget,\n\ttype IContentWidgetPosition,\n} from \"../../../../editor/browser/editorBrowser.js\";\nimport {\n\ttype ConfigurationChangedEvent,\n\tEditorOption,\n} from \"../../../../editor/common/config/editorOptions.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { AccessibilityVerbositySettingId } from \"../../accessibility/browser/accessibilityConfiguration.js\";\nimport { InteractiveWindowSetting } from \"./interactiveCommon.js\";\n\nexport class ReplInputHintContentWidget\n\textends Disposable\n\timplements IContentWidget\n{\n\tprivate static readonly ID = \"replInput.widget.emptyHint\";\n\n\tprivate domNode: HTMLElement | undefined;\n\tprivate ariaLabel = \"\";\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\t@IConfigurationService\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\t@IKeybindingService\n\t\tprivate readonly keybindingService: IKeybindingService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(\n\t\t\tthis.editor.onDidChangeConfiguration(\n\t\t\t\t(e: ConfigurationChangedEvent) => {\n\t\t\t\t\tif (this.domNode && e.hasChanged(EditorOption.fontInfo)) {\n\t\t\t\t\t\tthis.editor.applyFontInfo(this.domNode);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tconst onDidFocusEditorText = Event.debounce(\n\t\t\tthis.editor.onDidFocusEditorText,\n\t\t\t() => undefined,\n\t\t\t500,\n\t\t);\n\t\tthis._register(\n\t\t\tonDidFocusEditorText(() => {\n\t\t\t\tif (\n\t\t\t\t\tthis.editor.hasTextFocus() &&\n\t\t\t\t\tthis.ariaLabel &&\n\t\t\t\t\tconfigurationService.getValue(\n\t\t\t\t\t\tAccessibilityVerbositySettingId.ReplInputHint,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tstatus(this.ariaLabel);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tconfigurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (\n\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\tInteractiveWindowSetting.executeWithShiftEnter,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tthis.setHint();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis.editor.addContentWidget(this);\n\t}\n\n\tgetId(): string {\n\t\treturn ReplInputHintContentWidget.ID;\n\t}\n\n\tgetPosition(): IContentWidgetPosition | null {\n\t\treturn {\n\t\t\tposition: { lineNumber: 1, column: 1 },\n\t\t\tpreference: [ContentWidgetPositionPreference.EXACT],\n\t\t};\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\tif (!this.domNode) {\n\t\t\tthis.domNode = dom.$(\".empty-editor-hint\");\n\t\t\tthis.domNode.style.width = \"max-content\";\n\t\t\tthis.domNode.style.paddingLeft = \"4px\";\n\n\t\t\tthis.setHint();\n\n\t\t\tthis._register(\n\t\t\t\tdom.addDisposableListener(this.domNode, \"click\", () => {\n\t\t\t\t\tthis.editor.focus();\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tthis.editor.applyFontInfo(this.domNode);\n\t\t}\n\n\t\treturn this.domNode;\n\t}\n\n\tprivate setHint() {\n\t\tif (!this.domNode) {\n\t\t\treturn;\n\t\t}\n\t\twhile (this.domNode.firstChild) {\n\t\t\tthis.domNode.removeChild(this.domNode.firstChild);\n\t\t}\n\n\t\tconst hintElement = dom.$(\"div.empty-hint-text\");\n\t\thintElement.style.cursor = \"text\";\n\t\thintElement.style.whiteSpace = \"nowrap\";\n\n\t\tconst keybinding = this.getKeybinding();\n\t\tconst keybindingHintLabel = keybinding?.getLabel();\n\n\t\tif (keybinding && keybindingHintLabel) {\n\t\t\tconst actionPart = localize(\n\t\t\t\t\"emptyHintText\",\n\t\t\t\t\"Press {0} to execute. \",\n\t\t\t\tkeybindingHintLabel,\n\t\t\t);\n\n\t\t\tconst [before, after] = actionPart\n\t\t\t\t.split(keybindingHintLabel)\n\t\t\t\t.map((fragment) => {\n\t\t\t\t\tconst hintPart = dom.$(\"span\", undefined, fragment);\n\t\t\t\t\thintPart.style.fontStyle = \"italic\";\n\t\t\t\t\treturn hintPart;\n\t\t\t\t});\n\n\t\t\thintElement.appendChild(before);\n\n\t\t\tconst label = new KeybindingLabel(hintElement, OS);\n\t\t\tlabel.set(keybinding);\n\t\t\tlabel.element.style.width = \"min-content\";\n\t\t\tlabel.element.style.display = \"inline\";\n\n\t\t\thintElement.appendChild(after);\n\t\t\tthis.domNode.append(hintElement);\n\n\t\t\tthis.ariaLabel = actionPart.concat(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"disableHint\",\n\t\t\t\t\t\" Toggle {0} in settings to disable this hint.\",\n\t\t\t\t\tAccessibilityVerbositySettingId.ReplInputHint,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate getKeybinding() {\n\t\tconst keybindings = this.keybindingService.lookupKeybindings(\n\t\t\t\"interactive.execute\",\n\t\t);\n\t\tconst shiftEnterConfig = this.configurationService.getValue(\n\t\t\tInteractiveWindowSetting.executeWithShiftEnter,\n\t\t);\n\t\tconst hasEnterChord = (kb: ResolvedKeybinding, modifier = \"\") => {\n\t\t\tconst chords = kb.getDispatchChords();\n\t\t\tconst chord = modifier + \"Enter\";\n\t\t\tconst chordAlt = modifier + \"[Enter]\";\n\t\t\treturn (\n\t\t\t\tchords.length === 1 &&\n\t\t\t\t(chords[0] === chord || chords[0] === chordAlt)\n\t\t\t);\n\t\t};\n\n\t\tif (shiftEnterConfig) {\n\t\t\tconst keybinding = keybindings.find((kb) =>\n\t\t\t\thasEnterChord(kb, \"shift+\"),\n\t\t\t);\n\t\t\tif (keybinding) {\n\t\t\t\treturn keybinding;\n\t\t\t}\n\t\t} else {\n\t\t\tlet keybinding = keybindings.find((kb) => hasEnterChord(kb));\n\t\t\tif (keybinding) {\n\t\t\t\treturn keybinding;\n\t\t\t}\n\t\t\tkeybinding = this.keybindingService\n\t\t\t\t.lookupKeybindings(\"python.execInREPLEnter\")\n\t\t\t\t.find((kb) => hasEnterChord(kb));\n\t\t\tif (keybinding) {\n\t\t\t\treturn keybinding;\n\t\t\t}\n\t\t}\n\n\t\treturn keybindings?.[0];\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.editor.removeContentWidget(this);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,YAAY,SAAS;AACrB,SAAS,cAAc;AACvB,SAAS,uBAAuB;AAChC,SAAS,aAAa;AAEtB,SAAS,kBAAkB;AAC3B,SAAS,UAAU;AACnB;AAAA,EACC;AAAA,OAIM;AACP;AAAA,EAEC;AAAA,OACM;AACP,SAAS,gBAAgB;AACzB,SAAS,6BAA6B;AACtC,SAAS,0BAA0B;AACnC,SAAS,uCAAuC;AAChD,SAAS,gCAAgC;AAElC,IAAM,6BAAN,cACE,WAET;AAAA,EAMC,YACkB,QAEA,sBAEA,mBAChB;AACD,UAAM;AANW;AAEA;AAEA;AAIjB,SAAK;AAAA,MACJ,KAAK,OAAO;AAAA,QACX,CAAC,MAAiC;AACjC,cAAI,KAAK,WAAW,EAAE,WAAW,aAAa,QAAQ,GAAG;AACxD,iBAAK,OAAO,cAAc,KAAK,OAAO;AAAA,UACvC;AAAA,QACD;AAAA,MACD;AAAA,IACD;AACA,UAAM,uBAAuB,MAAM;AAAA,MAClC,KAAK,OAAO;AAAA,MACZ,MAAM;AAAA,MACN;AAAA,IACD;AACA,SAAK;AAAA,MACJ,qBAAqB,MAAM;AAC1B,YACC,KAAK,OAAO,aAAa,KACzB,KAAK,aACL,qBAAqB;AAAA,UACpB,gCAAgC;AAAA,QACjC,GACC;AACD,iBAAO,KAAK,SAAS;AAAA,QACtB;AAAA,MACD,CAAC;AAAA,IACF;AACA,SAAK;AAAA,MACJ,qBAAqB,yBAAyB,CAAC,MAAM;AACpD,YACC,EAAE;AAAA,UACD,yBAAyB;AAAA,QAC1B,GACC;AACD,eAAK,QAAQ;AAAA,QACd;AAAA,MACD,CAAC;AAAA,IACF;AACA,SAAK,OAAO,iBAAiB,IAAI;AAAA,EAClC;AAAA,EArFD,OA+BA;AAAA;AAAA;AAAA,EACC,OAAwB,KAAK;AAAA,EAErB;AAAA,EACA,YAAY;AAAA,EAoDpB,QAAgB;AACf,WAAO,2BAA2B;AAAA,EACnC;AAAA,EAEA,cAA6C;AAC5C,WAAO;AAAA,MACN,UAAU,EAAE,YAAY,GAAG,QAAQ,EAAE;AAAA,MACrC,YAAY,CAAC,gCAAgC,KAAK;AAAA,IACnD;AAAA,EACD;AAAA,EAEA,aAA0B;AACzB,QAAI,CAAC,KAAK,SAAS;AAClB,WAAK,UAAU,IAAI,EAAE,oBAAoB;AACzC,WAAK,QAAQ,MAAM,QAAQ;AAC3B,WAAK,QAAQ,MAAM,cAAc;AAEjC,WAAK,QAAQ;AAEb,WAAK;AAAA,QACJ,IAAI,sBAAsB,KAAK,SAAS,SAAS,MAAM;AACtD,eAAK,OAAO,MAAM;AAAA,QACnB,CAAC;AAAA,MACF;AAEA,WAAK,OAAO,cAAc,KAAK,OAAO;AAAA,IACvC;AAEA,WAAO,KAAK;AAAA,EACb;AAAA,EAEQ,UAAU;AACjB,QAAI,CAAC,KAAK,SAAS;AAClB;AAAA,IACD;AACA,WAAO,KAAK,QAAQ,YAAY;AAC/B,WAAK,QAAQ,YAAY,KAAK,QAAQ,UAAU;AAAA,IACjD;AAEA,UAAM,cAAc,IAAI,EAAE,qBAAqB;AAC/C,gBAAY,MAAM,SAAS;AAC3B,gBAAY,MAAM,aAAa;AAE/B,UAAM,aAAa,KAAK,cAAc;AACtC,UAAM,sBAAsB,YAAY,SAAS;AAEjD,QAAI,cAAc,qBAAqB;AACtC,YAAM,aAAa;AAAA,QAClB;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAEA,YAAM,CAAC,QAAQ,KAAK,IAAI,WACtB,MAAM,mBAAmB,EACzB,IAAI,CAAC,aAAa;AAClB,cAAM,WAAW,IAAI,EAAE,QAAQ,QAAW,QAAQ;AAClD,iBAAS,MAAM,YAAY;AAC3B,eAAO;AAAA,MACR,CAAC;AAEF,kBAAY,YAAY,MAAM;AAE9B,YAAM,QAAQ,IAAI,gBAAgB,aAAa,EAAE;AACjD,YAAM,IAAI,UAAU;AACpB,YAAM,QAAQ,MAAM,QAAQ;AAC5B,YAAM,QAAQ,MAAM,UAAU;AAE9B,kBAAY,YAAY,KAAK;AAC7B,WAAK,QAAQ,OAAO,WAAW;AAE/B,WAAK,YAAY,WAAW;AAAA,QAC3B;AAAA,UACC;AAAA,UACA;AAAA,UACA,gCAAgC;AAAA,QACjC;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,gBAAgB;AACvB,UAAM,cAAc,KAAK,kBAAkB;AAAA,MAC1C;AAAA,IACD;AACA,UAAM,mBAAmB,KAAK,qBAAqB;AAAA,MAClD,yBAAyB;AAAA,IAC1B;AACA,UAAM,gBAAgB,wBAAC,IAAwB,WAAW,OAAO;AAChE,YAAM,SAAS,GAAG,kBAAkB;AACpC,YAAM,QAAQ,WAAW;AACzB,YAAM,WAAW,WAAW;AAC5B,aACC,OAAO,WAAW,MACjB,OAAO,CAAC,MAAM,SAAS,OAAO,CAAC,MAAM;AAAA,IAExC,GARsB;AAUtB,QAAI,kBAAkB;AACrB,YAAM,aAAa,YAAY;AAAA,QAAK,CAAC,OACpC,cAAc,IAAI,QAAQ;AAAA,MAC3B;AACA,UAAI,YAAY;AACf,eAAO;AAAA,MACR;AAAA,IACD,OAAO;AACN,UAAI,aAAa,YAAY,KAAK,CAAC,OAAO,cAAc,EAAE,CAAC;AAC3D,UAAI,YAAY;AACf,eAAO;AAAA,MACR;AACA,mBAAa,KAAK,kBAChB,kBAAkB,wBAAwB,EAC1C,KAAK,CAAC,OAAO,cAAc,EAAE,CAAC;AAChC,UAAI,YAAY;AACf,eAAO;AAAA,MACR;AAAA,IACD;AAEA,WAAO,cAAc,CAAC;AAAA,EACvB;AAAA,EAES,UAAgB;AACxB,UAAM,QAAQ;AACd,SAAK,OAAO,oBAAoB,IAAI;AAAA,EACrC;AACD;AAxLa,6BAAN;AAAA,EAWJ;AAAA,EAEA;AAAA,GAbU;",
  "names": []
}
