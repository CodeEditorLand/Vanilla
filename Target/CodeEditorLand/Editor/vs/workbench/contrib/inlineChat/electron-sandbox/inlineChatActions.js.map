{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/inlineChat/electron-sandbox/inlineChatActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { ICodeEditor } from '../../../../editor/browser/editorBrowser.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { InlineChatController } from '../browser/inlineChatController.js';\nimport { AbstractInlineChatAction, setHoldForSpeech } from '../browser/inlineChatActions.js';\nimport { disposableTimeout } from '../../../../base/common/async.js';\nimport { EditorContextKeys } from '../../../../editor/common/editorContextKeys.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { StartVoiceChatAction, StopListeningAction, VOICE_KEY_HOLD_THRESHOLD } from '../../chat/electron-sandbox/actions/voiceChatActions.js';\nimport { IChatExecuteActionContext } from '../../chat/browser/actions/chatExecuteActions.js';\nimport { CTX_INLINE_CHAT_VISIBLE, InlineChatConfigKeys } from '../common/inlineChat.js';\nimport { HasSpeechProvider, ISpeechService } from '../../speech/common/speechService.js';\nimport { localize2 } from '../../../../nls.js';\nimport { Action2 } from '../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\n\nexport class HoldToSpeak extends AbstractInlineChatAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'inlineChat.holdForSpeech',\n\t\t\tprecondition: ContextKeyExpr.and(HasSpeechProvider, CTX_INLINE_CHAT_VISIBLE),\n\t\t\ttitle: localize2('holdForSpeech', \"Hold for Speech\"),\n\t\t\tkeybinding: {\n\t\t\t\twhen: EditorContextKeys.textInputFocus,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyI,\n\t\t\t},\n\t\t});\n\t}\n\n\toverride runInlineChatCommand(accessor: ServicesAccessor, ctrl: InlineChatController, editor: ICodeEditor, ...args: any[]): void {\n\t\tholdForSpeech(accessor, ctrl, this);\n\t}\n}\n\nfunction holdForSpeech(accessor: ServicesAccessor, ctrl: InlineChatController, action: Action2): void {\n\n\tconst configService = accessor.get(IConfigurationService);\n\tconst speechService = accessor.get(ISpeechService);\n\tconst keybindingService = accessor.get(IKeybindingService);\n\tconst commandService = accessor.get(ICommandService);\n\n\t// enabled or possible?\n\tif (!configService.getValue<boolean>(InlineChatConfigKeys.HoldToSpeech || !speechService.hasSpeechProvider)) {\n\t\treturn;\n\t}\n\n\tconst holdMode = keybindingService.enableKeybindingHoldMode(action.desc.id);\n\tif (!holdMode) {\n\t\treturn;\n\t}\n\tlet listening = false;\n\tconst handle = disposableTimeout(() => {\n\t\t// start VOICE input\n\t\tcommandService.executeCommand(StartVoiceChatAction.ID, { voice: { disableTimeout: true } } satisfies IChatExecuteActionContext);\n\t\tlistening = true;\n\t}, VOICE_KEY_HOLD_THRESHOLD);\n\n\tholdMode.finally(() => {\n\t\tif (listening) {\n\t\t\tcommandService.executeCommand(StopListeningAction.ID).finally(() => {\n\t\t\t\tctrl.acceptInput();\n\t\t\t});\n\t\t}\n\t\thandle.dispose();\n\t});\n}\n\n// make this accessible to the chat actions from the browser layer\nsetHoldForSpeech(holdForSpeech);\n"],
  "mappings": ";;AAIA,SAAS,SAAS,cAAc;AAChC,SAAS,mBAAmB;AAC5B,SAAS,sBAAsB;AAC/B,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC,SAAS,4BAA4B;AACrC,SAAS,0BAA0B,wBAAwB;AAC3D,SAAS,yBAAyB;AAClC,SAAS,yBAAyB;AAClC,SAAS,uBAAuB;AAChC,SAAS,0BAA0B;AACnC,SAAS,sBAAsB,qBAAqB,gCAAgC;AACpF,SAAS,iCAAiC;AAC1C,SAAS,yBAAyB,4BAA4B;AAC9D,SAAS,mBAAmB,sBAAsB;AAClD,SAAS,iBAAiB;AAC1B,SAAS,eAAe;AACxB,SAAS,6BAA6B;AAE/B,MAAM,oBAAoB,yBAAyB;AAAA,EAvB1D,OAuB0D;AAAA;AAAA;AAAA,EAEzD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,cAAc,eAAe,IAAI,mBAAmB,uBAAuB;AAAA,MAC3E,OAAO,UAAU,iBAAiB,iBAAiB;AAAA,MACnD,YAAY;AAAA,QACX,MAAM,kBAAkB;AAAA,QACxB,QAAQ,iBAAiB;AAAA,QACzB,SAAS,OAAO,UAAU,QAAQ;AAAA,MACnC;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAES,qBAAqB,UAA4B,MAA4B,WAAwB,MAAmB;AAChI,kBAAc,UAAU,MAAM,IAAI;AAAA,EACnC;AACD;AAEA,SAAS,cAAc,UAA4B,MAA4B,QAAuB;AAErG,QAAM,gBAAgB,SAAS,IAAI,qBAAqB;AACxD,QAAM,gBAAgB,SAAS,IAAI,cAAc;AACjD,QAAM,oBAAoB,SAAS,IAAI,kBAAkB;AACzD,QAAM,iBAAiB,SAAS,IAAI,eAAe;AAGnD,MAAI,CAAC,cAAc,SAAkB,qBAAqB,gBAAgB,CAAC,cAAc,iBAAiB,GAAG;AAC5G;AAAA,EACD;AAEA,QAAM,WAAW,kBAAkB,yBAAyB,OAAO,KAAK,EAAE;AAC1E,MAAI,CAAC,UAAU;AACd;AAAA,EACD;AACA,MAAI,YAAY;AAChB,QAAM,SAAS,kBAAkB,MAAM;AAEtC,mBAAe,eAAe,qBAAqB,IAAI,EAAE,OAAO,EAAE,gBAAgB,KAAK,EAAE,CAAqC;AAC9H,gBAAY;AAAA,EACb,GAAG,wBAAwB;AAE3B,WAAS,QAAQ,MAAM;AACtB,QAAI,WAAW;AACd,qBAAe,eAAe,oBAAoB,EAAE,EAAE,QAAQ,MAAM;AACnE,aAAK,YAAY;AAAA,MAClB,CAAC;AAAA,IACF;AACA,WAAO,QAAQ;AAAA,EAChB,CAAC;AACF;AA/BS;AAkCT,iBAAiB,aAAa;",
  "names": []
}
