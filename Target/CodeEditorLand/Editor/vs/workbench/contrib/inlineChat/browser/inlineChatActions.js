import{Codicon as E}from"../../../../base/common/codicons.js";import{KeyChord as P,KeyCode as a,KeyMod as C}from"../../../../base/common/keyCodes.js";import{isCodeEditor as M,isDiffEditor as U}from"../../../../editor/browser/editorBrowser.js";import{EditorAction2 as S}from"../../../../editor/browser/editorExtensions.js";import{EmbeddedDiffEditorWidget as F}from"../../../../editor/browser/widget/diffEditor/embeddedDiffEditorWidget.js";import{EmbeddedCodeEditorWidget as q}from"../../../../editor/browser/widget/codeEditor/embeddedCodeEditorWidget.js";import{EditorContextKeys as p}from"../../../../editor/common/editorContextKeys.js";import{InlineChatController as T,InlineChatRunOptions as X}from"./inlineChatController.js";import{ACTION_ACCEPT_CHANGES as D,CTX_INLINE_CHAT_HAS_AGENT as k,CTX_INLINE_CHAT_HAS_STASHED_SESSION as W,CTX_INLINE_CHAT_FOCUSED as w,CTX_INLINE_CHAT_INNER_CURSOR_FIRST as G,CTX_INLINE_CHAT_INNER_CURSOR_LAST as K,CTX_INLINE_CHAT_VISIBLE as l,CTX_INLINE_CHAT_OUTER_CURSOR_POSITION as O,CTX_INLINE_CHAT_USER_DID_EDIT as z,CTX_INLINE_CHAT_DOCUMENT_CHANGED as V,CTX_INLINE_CHAT_EDIT_MODE as A,EditMode as N,MENU_INLINE_CHAT_WIDGET_STATUS as h,CTX_INLINE_CHAT_REQUEST_IN_PROGRESS as v,CTX_INLINE_CHAT_RESPONSE_TYPE as _,InlineChatResponseType as f,ACTION_REGENERATE_RESPONSE as B,ACTION_VIEW_IN_CHAT as Z,ACTION_TOGGLE_DIFF as Y,CTX_INLINE_CHAT_CHANGE_HAS_DIFF as R,CTX_INLINE_CHAT_CHANGE_SHOWS_DIFF as Q,MENU_INLINE_CHAT_ZONE as H,ACTION_DISCARD_CHANGES as j}from"../common/inlineChat.js";import{localize as g,localize2 as m}from"../../../../nls.js";import{ContextKeyExpr as n}from"../../../../platform/contextkey/common/contextkey.js";import{IInstantiationService as J}from"../../../../platform/instantiation/common/instantiation.js";import{KeybindingWeight as d}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{IEditorService as $}from"../../../services/editor/common/editorService.js";import{ICodeEditorService as ee}from"../../../../editor/browser/services/codeEditorService.js";import{CONTEXT_ACCESSIBILITY_MODE_ENABLED as b}from"../../../../platform/accessibility/common/accessibility.js";import{CommandsRegistry as L}from"../../../../platform/commands/common/commands.js";import{registerIcon as oe}from"../../../../platform/theme/common/iconRegistry.js";import{IPreferencesService as re}from"../../../services/preferences/common/preferences.js";import{ILogService as te}from"../../../../platform/log/common/log.js";import{IChatService as ne}from"../../chat/common/chatService.js";import{CONTEXT_CHAT_INPUT_HAS_TEXT as y,CONTEXT_IN_CHAT_INPUT as ie}from"../../chat/common/chatContextKeys.js";L.registerCommandAlias("interactiveEditor.start","inlineChat.start"),L.registerCommandAlias("interactive.acceptChanges",D);const se=m("run","Start in Editor"),ae=oe("start-inline-chat",E.sparkle,g("startInlineChat","Icon which spawns the inline chat from the editor toolbar."));let x;function Me(s){x=s}class Ue extends S{constructor(){super({id:"inlineChat.start",title:se,category:i.category,f1:!0,precondition:n.and(k,p.writable),keybinding:{when:p.focus,weight:d.WorkbenchContrib,primary:C.CtrlCmd|a.KeyI,secondary:[P(C.CtrlCmd|a.KeyK,a.KeyI)]},icon:ae})}runEditorCommand(o,e,...t){const r=T.get(e);if(!r)return;x&&o.get(J).invokeFunction(x,r,this);let I;const u=t[0];u&&X.isInlineChatRunOptions(u)&&(I=u),T.get(e)?.run({...I})}}class Fe extends S{constructor(){super({id:"inlineChat.unstash",title:m("unstash","Resume Last Dismissed Inline Chat"),category:i.category,precondition:n.and(W,p.writable),keybinding:{weight:d.WorkbenchContrib,primary:C.CtrlCmd|a.KeyZ}})}async runEditorCommand(o,e,...t){const r=T.get(e);if(r){const I=r.unstashLastSession();I&&r.run({existingSession:I,isUnstashed:!0})}}}class i extends S{static category=m("cat","Inline Chat");constructor(o){super({...o,category:i.category,precondition:n.and(k,o.precondition)})}runEditorCommand(o,e,...t){const r=o.get($),I=o.get(te);let u=T.get(e);if(!u){const{activeTextEditorControl:c}=r;M(c)?e=c:U(c)&&(e=c.getModifiedEditor()),u=T.get(e)}if(!u){I.warn("[IE] NO controller found for action",this.desc.id,e.getModel()?.uri);return}if(e instanceof q&&(e=e.getParentEditor()),!u){for(const c of o.get(ee).listDiffEditors())(c.getOriginalEditor()===e||c.getModifiedEditor()===e)&&c instanceof F&&this.runEditorCommand(o,c.getParentEditor(),...t);return}this.runInlineChatCommand(o,u,e,...t)}}class qe extends i{constructor(){super({id:"inlineChat.arrowOutUp",title:g("arrowUp","Cursor Up"),precondition:n.and(w,G,p.isEmbeddedDiffEditor.negate(),b.negate()),keybinding:{weight:d.EditorCore,primary:C.CtrlCmd|a.UpArrow}})}runInlineChatCommand(o,e,t,...r){e.arrowOut(!0)}}class Xe extends i{constructor(){super({id:"inlineChat.arrowOutDown",title:g("arrowDown","Cursor Down"),precondition:n.and(w,K,p.isEmbeddedDiffEditor.negate(),b.negate()),keybinding:{weight:d.EditorCore,primary:C.CtrlCmd|a.DownArrow}})}runInlineChatCommand(o,e,t,...r){e.arrowOut(!1)}}class We extends S{constructor(){super({id:"inlineChat.focus",title:m("focus","Focus Input"),f1:!0,category:i.category,precondition:n.and(p.editorTextFocus,l,w.negate(),b.negate()),keybinding:[{weight:d.EditorCore+10,when:n.and(O.isEqualTo("above"),p.isEmbeddedDiffEditor.negate()),primary:C.CtrlCmd|a.DownArrow},{weight:d.EditorCore+10,when:n.and(O.isEqualTo("below"),p.isEmbeddedDiffEditor.negate()),primary:C.CtrlCmd|a.UpArrow}]})}runEditorCommand(o,e,...t){T.get(e)?.focus()}}class Ge extends i{constructor(){super({id:"inlineChat.discard",title:g("discard","Discard"),icon:E.discard,precondition:l,keybinding:{weight:d.EditorContrib-1,primary:a.Escape,when:z.negate()}})}async runInlineChatCommand(o,e,t,...r){await e.cancelSession()}}class Ke extends i{constructor(){super({id:D,title:m("apply1","Accept Changes"),shortTitle:g("apply2","Accept"),icon:E.check,f1:!0,precondition:n.and(l,n.or(V.toNegated(),A.notEqualsTo(N.Preview))),keybinding:[{weight:d.WorkbenchContrib+10,primary:C.CtrlCmd|a.Enter}],menu:[{id:h,group:"0_main",order:1,when:n.and(y.toNegated(),v.toNegated(),_.isEqualTo(f.MessagesAndEdits))},{id:H,group:"navigation",order:1}]})}async runInlineChatCommand(o,e,t,r){e.acceptHunk(r)}}class ze extends i{constructor(){super({id:j,title:g("discard","Discard"),icon:E.chromeClose,precondition:l,menu:[{id:h,group:"0_main",order:2,when:n.and(y.toNegated(),v.negate(),_.isEqualTo(f.MessagesAndEdits),A.isEqualTo(N.Live))},{id:H,group:"navigation",order:2}],keybinding:{weight:d.WorkbenchContrib,primary:a.Escape,when:_.isEqualTo(f.MessagesAndEdits)}})}async runInlineChatCommand(o,e,t,r){return e.discardHunk(r)}}class Ve extends i{constructor(){super({id:B,title:m("chat.rerun.label","Rerun Request"),shortTitle:g("rerun","Rerun"),f1:!1,icon:E.refresh,precondition:l,menu:{id:h,group:"0_main",order:5,when:n.and(y.toNegated(),v.negate(),_.notEqualsTo(f.None))},keybinding:{weight:d.WorkbenchContrib,primary:C.CtrlCmd|a.KeyR}})}async runInlineChatCommand(o,e,t,...r){const I=o.get(ne),c=e.chatWidget.viewModel?.model?.getRequests().at(-1);c&&await I.resendRequest(c,{noCommandDetection:!1,attempt:c.attempt+1,location:e.chatWidget.location})}}class Be extends i{constructor(){super({id:"inlineChat.close",title:g("close","Close"),icon:E.close,precondition:l,keybinding:{weight:d.WorkbenchContrib,primary:a.Escape},menu:[{id:h,group:"0_main",order:1,when:n.and(v.negate(),n.or(_.isEqualTo(f.Messages),A.isEqualTo(N.Preview)))}]})}async runInlineChatCommand(o,e,t,...r){e.cancelSession()}}class Ze extends i{constructor(){super({id:"inlineChat.configure",title:m("configure","Configure Inline Chat"),icon:E.settingsGear,precondition:l,f1:!0,menu:{id:h,group:"zzz",order:5}})}async runInlineChatCommand(o,e,t,...r){o.get(re).openSettings({query:"inlineChat"})}}class Ye extends i{constructor(){super({id:"inlineChat.moveToNextHunk",title:m("moveToNextHunk","Move to Next Change"),precondition:l,f1:!0,keybinding:{weight:d.WorkbenchContrib,primary:a.F7}})}runInlineChatCommand(o,e,t,...r){e.moveHunk(!0)}}class Qe extends i{constructor(){super({id:"inlineChat.moveToPreviousHunk",title:m("moveToPreviousHunk","Move to Previous Change"),f1:!0,precondition:l,keybinding:{weight:d.WorkbenchContrib,primary:C.Shift|a.F7}})}runInlineChatCommand(o,e,t,...r){e.moveHunk(!1)}}class je extends i{constructor(){super({id:Z,title:g("viewInChat","View in Chat"),icon:E.commentDiscussion,precondition:l,menu:[{id:h,group:"more",order:1,when:_.notEqualsTo(f.Messages)},{id:h,group:"0_main",order:1,when:n.and(y.toNegated(),_.isEqualTo(f.Messages),v.negate())}],keybinding:{weight:d.WorkbenchContrib,primary:C.CtrlCmd|a.DownArrow,when:ie}})}runInlineChatCommand(o,e,t,...r){return e.viewInChat()}}class Je extends i{constructor(){super({id:Y,precondition:n.and(l,A.isEqualTo(N.Live),R),title:m("showChanges","Toggle Changes"),icon:E.diffSingle,toggled:{condition:Q},menu:[{id:h,group:"zzz",when:n.and(A.isEqualTo(N.Live)),order:1},{id:H,group:"navigation",when:R,order:2}]})}runInlineChatCommand(o,e,t,r){e.toggleDiff(r)}}export{i as AbstractInlineChatAction,Ke as AcceptChanges,Xe as ArrowOutDownAction,qe as ArrowOutUpAction,Be as CloseAction,Ze as ConfigureInlineChatAction,Ge as DiscardAction,ze as DiscardHunkAction,We as FocusInlineChat,se as LOCALIZED_START_INLINE_CHAT_STRING,Ye as MoveToNextHunk,Qe as MoveToPreviousHunk,Ve as RerunAction,ae as START_INLINE_CHAT,Ue as StartSessionAction,Je as ToggleDiffForChange,Fe as UnstashSessionAction,je as ViewInChatAction,Me as setHoldForSpeech};
