{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/inlineChat/browser/inlineChatStrategies.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tWindowIntervalTimer,\n\tgetTotalWidth,\n} from \"../../../../base/browser/dom.js\";\nimport { coalesceInPlace } from \"../../../../base/common/arrays.js\";\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport { Iterable } from \"../../../../base/common/iterator.js\";\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { observableValue } from \"../../../../base/common/observable.js\";\nimport { isEqual } from \"../../../../base/common/resources.js\";\nimport {\n\tThemeIcon,\n\tthemeColorFromId,\n} from \"../../../../base/common/themables.js\";\nimport { assertType } from \"../../../../base/common/types.js\";\nimport { generateUuid } from \"../../../../base/common/uuid.js\";\nimport type {\n\tICodeEditor,\n\tIOverlayWidget,\n\tIOverlayWidgetPosition,\n\tIViewZone,\n\tIViewZoneChangeAccessor,\n} from \"../../../../editor/browser/editorBrowser.js\";\nimport { StableEditorScrollState } from \"../../../../editor/browser/stableEditorScroll.js\";\nimport {\n\tLineSource,\n\tRenderOptions,\n\trenderLines,\n} from \"../../../../editor/browser/widget/diffEditor/components/diffEditorViewZones/renderLines.js\";\nimport { EditorOption } from \"../../../../editor/common/config/editorOptions.js\";\nimport type { ISingleEditOperation } from \"../../../../editor/common/core/editOperation.js\";\nimport { LineRange } from \"../../../../editor/common/core/lineRange.js\";\nimport type { Position } from \"../../../../editor/common/core/position.js\";\nimport { Range } from \"../../../../editor/common/core/range.js\";\nimport type { IEditorDecorationsCollection } from \"../../../../editor/common/editorCommon.js\";\nimport {\n\ttype IModelDecorationsChangeAccessor,\n\ttype IModelDeltaDecoration,\n\ttype IValidEditOperation,\n\tMinimapPosition,\n\tOverviewRulerLane,\n\tTrackedRangeStickiness,\n} from \"../../../../editor/common/model.js\";\nimport { ModelDecorationOptions } from \"../../../../editor/common/model/textModel.js\";\nimport { IEditorWorkerService } from \"../../../../editor/common/services/editorWorker.js\";\nimport { IModelService } from \"../../../../editor/common/services/model.js\";\nimport {\n\tInlineDecoration,\n\tInlineDecorationType,\n} from \"../../../../editor/common/viewModel.js\";\nimport { IAccessibilityService } from \"../../../../platform/accessibility/common/accessibility.js\";\nimport { MenuWorkbenchButtonBar } from \"../../../../platform/actions/browser/buttonbar.js\";\nimport {\n\tIMenuService,\n\tMenuItemAction,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { Progress } from \"../../../../platform/progress/common/progress.js\";\nimport { SaveReason } from \"../../../common/editor.js\";\nimport { ITextFileService } from \"../../../services/textfile/common/textfiles.js\";\nimport type { IUntitledTextEditorModel } from \"../../../services/untitled/common/untitledTextEditorModel.js\";\nimport { DefaultChatTextEditor } from \"../../chat/browser/codeBlockPart.js\";\nimport { countWords } from \"../../chat/common/chatWordCounter.js\";\nimport {\n\tConflictActionsFactory,\n\ttype IContentWidgetAction,\n} from \"../../mergeEditor/browser/view/conflictActions.js\";\nimport {\n\tACTION_TOGGLE_DIFF,\n\tCTX_INLINE_CHAT_CHANGE_HAS_DIFF,\n\tCTX_INLINE_CHAT_CHANGE_SHOWS_DIFF,\n\tCTX_INLINE_CHAT_DOCUMENT_CHANGED,\n\tInlineChatConfigKeys,\n\tMENU_INLINE_CHAT_ZONE,\n\tminimapInlineChatDiffInserted,\n\toverviewRulerInlineChatDiffInserted,\n} from \"../common/inlineChat.js\";\nimport {\n\ttype HunkInformation,\n\tHunkState,\n\ttype Session,\n} from \"./inlineChatSession.js\";\nimport type { InlineChatZoneWidget } from \"./inlineChatZoneWidget.js\";\nimport { asProgressiveEdit, performAsyncTextEdit } from \"./utils.js\";\n\nexport interface IEditObserver {\n\tstart(): void;\n\tstop(): void;\n}\n\nexport enum HunkAction {\n\tAccept = 0,\n\tDiscard = 1,\n\tMoveNext = 2,\n\tMovePrev = 3,\n\tToggleDiff = 4,\n}\n\nexport abstract class EditModeStrategy {\n\tprotected static _decoBlock = ModelDecorationOptions.register({\n\t\tdescription: \"inline-chat\",\n\t\tshowIfCollapsed: false,\n\t\tisWholeLine: true,\n\t});\n\n\tprotected readonly _store = new DisposableStore();\n\tprotected readonly _onDidAccept = this._store.add(new Emitter<void>());\n\tprotected readonly _onDidDiscard = this._store.add(new Emitter<void>());\n\n\treadonly onDidAccept: Event<void> = this._onDidAccept.event;\n\treadonly onDidDiscard: Event<void> = this._onDidDiscard.event;\n\n\tconstructor(\n\t\tprotected readonly _session: Session,\n\t\tprotected readonly _editor: ICodeEditor,\n\t\tprotected readonly _zone: InlineChatZoneWidget,\n\t\t@ITextFileService private readonly _textFileService: ITextFileService,\n\t\t@IInstantiationService protected readonly _instaService: IInstantiationService,\n\t) { }\n\n\tdispose(): void {\n\t\tthis._store.dispose();\n\t}\n\n\tperformHunkAction(_hunk: HunkInformation | undefined, action: HunkAction) {\n\t\tif (action === HunkAction.Accept) {\n\t\t\tthis._onDidAccept.fire();\n\t\t} else if (action === HunkAction.Discard) {\n\t\t\tthis._onDidDiscard.fire();\n\t\t}\n\t}\n\n\tprotected async _doApplyChanges(ignoreLocal: boolean): Promise<void> {\n\t\tconst untitledModels: IUntitledTextEditorModel[] = [];\n\n\t\tconst editor = this._instaService.createInstance(DefaultChatTextEditor);\n\n\t\tfor (const request of this._session.chatModel.getRequests()) {\n\t\t\tif (!request.response?.response) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (const item of request.response.response.value) {\n\t\t\t\tif (item.kind !== \"textEditGroup\") {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tignoreLocal &&\n\t\t\t\t\tisEqual(item.uri, this._session.textModelN.uri)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tawait editor.apply(request.response, item, undefined);\n\n\t\t\t\tif (item.uri.scheme === Schemas.untitled) {\n\t\t\t\t\tconst untitled = this._textFileService.untitled.get(\n\t\t\t\t\t\titem.uri,\n\t\t\t\t\t);\n\t\t\t\t\tif (untitled) {\n\t\t\t\t\t\tuntitledModels.push(untitled);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const untitledModel of untitledModels) {\n\t\t\tif (!untitledModel.isDisposed()) {\n\t\t\t\tawait untitledModel.resolve();\n\t\t\t\tawait untitledModel.save({ reason: SaveReason.EXPLICIT });\n\t\t\t}\n\t\t}\n\t}\n\n\tabstract apply(): Promise<void>;\n\n\tcancel() {\n\t\treturn this._session.hunkData.discardAll();\n\t}\n\n\tabstract makeProgressiveChanges(\n\t\tedits: ISingleEditOperation[],\n\t\tobs: IEditObserver,\n\t\ttimings: ProgressingEditsOptions,\n\t\tundoStopBefore: boolean,\n\t): Promise<void>;\n\n\tabstract makeChanges(\n\t\tedits: ISingleEditOperation[],\n\t\tobs: IEditObserver,\n\t\tundoStopBefore: boolean,\n\t): Promise<void>;\n\n\tabstract renderChanges(): Promise<Position | undefined>;\n\n\tabstract hasFocus(): boolean;\n\n\tgetWholeRangeDecoration(): IModelDeltaDecoration[] {\n\t\tconst ranges = [this._session.wholeRange.value];\n\t\tconst newDecorations = ranges.map((range) =>\n\t\t\trange.isEmpty()\n\t\t\t\t? undefined\n\t\t\t\t: { range, options: EditModeStrategy._decoBlock },\n\t\t);\n\t\tcoalesceInPlace(newDecorations);\n\t\treturn newDecorations;\n\t}\n}\n\nexport class PreviewStrategy extends EditModeStrategy {\n\tprivate readonly _ctxDocumentChanged: IContextKey<boolean>;\n\n\tconstructor(\n\t\tsession: Session,\n\t\teditor: ICodeEditor,\n\t\tzone: InlineChatZoneWidget,\n\t\t@IModelService modelService: IModelService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ITextFileService textFileService: ITextFileService,\n\t\t@IInstantiationService instaService: IInstantiationService,\n\t) {\n\t\tsuper(session, editor, zone, textFileService, instaService);\n\n\t\tthis._ctxDocumentChanged =\n\t\t\tCTX_INLINE_CHAT_DOCUMENT_CHANGED.bindTo(contextKeyService);\n\n\t\tconst baseModel = modelService.getModel(session.targetUri)!;\n\t\tEvent.debounce(\n\t\t\tbaseModel.onDidChangeContent.bind(baseModel),\n\t\t\t() => {},\n\t\t\t350,\n\t\t)(\n\t\t\t(_) => {\n\t\t\t\tif (\n\t\t\t\t\t!baseModel.isDisposed() &&\n\t\t\t\t\t!session.textModel0.isDisposed()\n\t\t\t\t) {\n\t\t\t\t\tthis._ctxDocumentChanged.set(session.hasChangedText);\n\t\t\t\t}\n\t\t\t},\n\t\t\tundefined,\n\t\t\tthis._store,\n\t\t);\n\t}\n\n\toverride dispose(): void {\n\t\tthis._ctxDocumentChanged.reset();\n\t\tsuper.dispose();\n\t}\n\n\toverride async apply() {\n\t\tawait super._doApplyChanges(false);\n\t}\n\n\toverride async makeChanges(): Promise<void> {}\n\n\toverride async makeProgressiveChanges(): Promise<void> {}\n\n\toverride async renderChanges(): Promise<undefined> {}\n\n\thasFocus(): boolean {\n\t\treturn this._zone.widget.hasFocus();\n\t}\n}\n\nexport interface ProgressingEditsOptions {\n\tduration: number;\n\ttoken: CancellationToken;\n}\n\ntype HunkDisplayData = {\n\tdecorationIds: string[];\n\n\tdiffViewZoneId: string | undefined;\n\tdiffViewZone: IViewZone;\n\n\tlensActionsViewZoneIds?: string[];\n\n\tdistance: number;\n\tposition: Position;\n\tacceptHunk: () => void;\n\tdiscardHunk: () => void;\n\ttoggleDiff?: () => any;\n\tremove(): void;\n\tmove: (next: boolean) => void;\n\n\thunk: HunkInformation;\n};\n\nexport class LiveStrategy extends EditModeStrategy {\n\tprivate readonly _decoInsertedText = ModelDecorationOptions.register({\n\t\tdescription: \"inline-modified-line\",\n\t\tclassName: \"inline-chat-inserted-range-linehighlight\",\n\t\tisWholeLine: true,\n\t\toverviewRuler: {\n\t\t\tposition: OverviewRulerLane.Full,\n\t\t\tcolor: themeColorFromId(overviewRulerInlineChatDiffInserted),\n\t\t},\n\t\tminimap: {\n\t\t\tposition: MinimapPosition.Inline,\n\t\t\tcolor: themeColorFromId(minimapInlineChatDiffInserted),\n\t\t},\n\t});\n\n\tprivate readonly _decoInsertedTextRange = ModelDecorationOptions.register({\n\t\tdescription: \"inline-chat-inserted-range-linehighlight\",\n\t\tclassName: \"inline-chat-inserted-range\",\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t});\n\n\tprivate readonly _ctxCurrentChangeHasDiff: IContextKey<boolean>;\n\tprivate readonly _ctxCurrentChangeShowsDiff: IContextKey<boolean>;\n\n\tprivate readonly _progressiveEditingDecorations: IEditorDecorationsCollection;\n\tprivate readonly _lensActionsFactory: ConflictActionsFactory;\n\tprivate _editCount = 0;\n\n\tconstructor(\n\t\tsession: Session,\n\t\teditor: ICodeEditor,\n\t\tzone: InlineChatZoneWidget,\n\t\tprivate readonly _showOverlayToolbar: boolean,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IEditorWorkerService protected readonly _editorWorkerService: IEditorWorkerService,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService,\n\t\t@IConfigurationService private readonly _configService: IConfigurationService,\n\t\t@IMenuService private readonly _menuService: IMenuService,\n\t\t@IContextKeyService private readonly _contextService: IContextKeyService,\n\t\t@ITextFileService textFileService: ITextFileService,\n\t\t@IInstantiationService instaService: IInstantiationService\n\t) {\n\t\tsuper(session, editor, zone, textFileService, instaService);\n\t\tthis._ctxCurrentChangeHasDiff = CTX_INLINE_CHAT_CHANGE_HAS_DIFF.bindTo(contextKeyService);\n\t\tthis._ctxCurrentChangeShowsDiff = CTX_INLINE_CHAT_CHANGE_SHOWS_DIFF.bindTo(contextKeyService);\n\n\t\tthis._progressiveEditingDecorations = this._editor.createDecorationsCollection();\n\t\tthis._lensActionsFactory = this._store.add(new ConflictActionsFactory(this._editor));\n\n\t}\n\n\toverride dispose(): void {\n\t\tthis._resetDiff();\n\t\tsuper.dispose();\n\t}\n\n\tprivate _resetDiff(): void {\n\t\tthis._ctxCurrentChangeHasDiff.reset();\n\t\tthis._ctxCurrentChangeShowsDiff.reset();\n\t\tthis._zone.widget.updateStatus(\"\");\n\t\tthis._progressiveEditingDecorations.clear();\n\n\t\tfor (const data of this._hunkDisplayData.values()) {\n\t\t\tdata.remove();\n\t\t}\n\t}\n\n\toverride async apply() {\n\t\tthis._resetDiff();\n\t\tif (this._editCount > 0) {\n\t\t\tthis._editor.pushUndoStop();\n\t\t}\n\t\tawait super._doApplyChanges(true);\n\t}\n\n\toverride cancel() {\n\t\tthis._resetDiff();\n\t\treturn super.cancel();\n\t}\n\n\toverride async makeChanges(\n\t\tedits: ISingleEditOperation[],\n\t\tobs: IEditObserver,\n\t\tundoStopBefore: boolean,\n\t): Promise<void> {\n\t\treturn this._makeChanges(\n\t\t\tedits,\n\t\t\tobs,\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\tundoStopBefore,\n\t\t);\n\t}\n\n\toverride async makeProgressiveChanges(\n\t\tedits: ISingleEditOperation[],\n\t\tobs: IEditObserver,\n\t\topts: ProgressingEditsOptions,\n\t\tundoStopBefore: boolean,\n\t): Promise<void> {\n\t\t// add decorations once per line that got edited\n\t\tconst progress = new Progress<IValidEditOperation[]>((edits) => {\n\t\t\tconst newLines = new Set<number>();\n\t\t\tfor (const edit of edits) {\n\t\t\t\tLineRange.fromRange(edit.range).forEach((line) =>\n\t\t\t\t\tnewLines.add(line),\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst existingRanges = this._progressiveEditingDecorations\n\t\t\t\t.getRanges()\n\t\t\t\t.map(LineRange.fromRange);\n\t\t\tfor (const existingRange of existingRanges) {\n\t\t\t\texistingRange.forEach((line) => newLines.delete(line));\n\t\t\t}\n\t\t\tconst newDecorations: IModelDeltaDecoration[] = [];\n\t\t\tfor (const line of newLines) {\n\t\t\t\tnewDecorations.push({\n\t\t\t\t\trange: new Range(line, 1, line, Number.MAX_VALUE),\n\t\t\t\t\toptions: this._decoInsertedText,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis._progressiveEditingDecorations.append(newDecorations);\n\t\t});\n\t\treturn this._makeChanges(edits, obs, opts, progress, undoStopBefore);\n\t}\n\n\tprivate async _makeChanges(\n\t\tedits: ISingleEditOperation[],\n\t\tobs: IEditObserver,\n\t\topts: ProgressingEditsOptions | undefined,\n\t\tprogress: Progress<IValidEditOperation[]> | undefined,\n\t\tundoStopBefore: boolean,\n\t): Promise<void> {\n\t\t// push undo stop before first edit\n\t\tif (undoStopBefore) {\n\t\t\tthis._editor.pushUndoStop();\n\t\t}\n\n\t\tthis._editCount++;\n\n\t\tif (opts) {\n\t\t\t// ASYNC\n\t\t\tconst durationInSec = opts.duration / 1000;\n\t\t\tfor (const edit of edits) {\n\t\t\t\tconst wordCount = countWords(edit.text ?? \"\");\n\t\t\t\tconst speed = wordCount / durationInSec;\n\t\t\t\t// console.log({ durationInSec, wordCount, speed: wordCount / durationInSec });\n\t\t\t\tconst asyncEdit = asProgressiveEdit(\n\t\t\t\t\tnew WindowIntervalTimer(this._zone.domNode),\n\t\t\t\t\tedit,\n\t\t\t\t\tspeed,\n\t\t\t\t\topts.token,\n\t\t\t\t);\n\t\t\t\tawait performAsyncTextEdit(\n\t\t\t\t\tthis._session.textModelN,\n\t\t\t\t\tasyncEdit,\n\t\t\t\t\tprogress,\n\t\t\t\t\tobs,\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\t// SYNC\n\t\t\tobs.start();\n\t\t\tthis._session.textModelN.pushEditOperations(\n\t\t\t\tnull,\n\t\t\t\tedits,\n\t\t\t\t(undoEdits) => {\n\t\t\t\t\tprogress?.report(undoEdits);\n\t\t\t\t\treturn null;\n\t\t\t\t},\n\t\t\t);\n\t\t\tobs.stop();\n\t\t}\n\t}\n\n\toverride performHunkAction(\n\t\thunk: HunkInformation | undefined,\n\t\taction: HunkAction,\n\t) {\n\t\tconst displayData = this._findDisplayData(hunk);\n\n\t\tif (!displayData) {\n\t\t\t// no hunks (left or not yet) found, make sure to\n\t\t\t// finish the sessions\n\t\t\tif (action === HunkAction.Accept) {\n\t\t\t\tthis._onDidAccept.fire();\n\t\t\t} else if (action === HunkAction.Discard) {\n\t\t\t\tthis._onDidDiscard.fire();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (action === HunkAction.Accept) {\n\t\t\tdisplayData.acceptHunk();\n\t\t} else if (action === HunkAction.Discard) {\n\t\t\tdisplayData.discardHunk();\n\t\t} else if (action === HunkAction.MoveNext) {\n\t\t\tdisplayData.move(true);\n\t\t} else if (action === HunkAction.MovePrev) {\n\t\t\tdisplayData.move(false);\n\t\t} else if (action === HunkAction.ToggleDiff) {\n\t\t\tdisplayData.toggleDiff?.();\n\t\t}\n\t}\n\n\tprivate _findDisplayData(hunkInfo?: HunkInformation) {\n\t\tlet result: HunkDisplayData | undefined;\n\t\tif (hunkInfo) {\n\t\t\t// use context hunk (from tool/buttonbar)\n\t\t\tresult = this._hunkDisplayData.get(hunkInfo);\n\t\t}\n\n\t\tif (!result && this._zone.position) {\n\t\t\t// find nearest from zone position\n\t\t\tconst zoneLine = this._zone.position.lineNumber;\n\t\t\tlet distance: number = Number.MAX_SAFE_INTEGER;\n\t\t\tfor (const candidate of this._hunkDisplayData.values()) {\n\t\t\t\tif (candidate.hunk.getState() !== HunkState.Pending) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst hunkRanges = candidate.hunk.getRangesN();\n\t\t\t\tconst myDistance =\n\t\t\t\t\tzoneLine <= hunkRanges[0].startLineNumber\n\t\t\t\t\t\t? hunkRanges[0].startLineNumber - zoneLine\n\t\t\t\t\t\t: zoneLine - hunkRanges[0].endLineNumber;\n\n\t\t\t\tif (myDistance < distance) {\n\t\t\t\t\tdistance = myDistance;\n\t\t\t\t\tresult = candidate;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!result) {\n\t\t\t// fallback: first hunk that is pending\n\t\t\tresult = Iterable.first(\n\t\t\t\tIterable.filter(\n\t\t\t\t\tthis._hunkDisplayData.values(),\n\t\t\t\t\t(candidate) =>\n\t\t\t\t\t\tcandidate.hunk.getState() === HunkState.Pending,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate readonly _hunkDisplayData = new Map<\n\t\tHunkInformation,\n\t\tHunkDisplayData\n\t>();\n\n\toverride async renderChanges() {\n\t\tthis._progressiveEditingDecorations.clear();\n\n\t\tconst renderHunks = () => {\n\t\t\tlet widgetData: HunkDisplayData | undefined;\n\n\t\t\tchangeDecorationsAndViewZones(\n\t\t\t\tthis._editor,\n\t\t\t\t(decorationsAccessor, viewZoneAccessor) => {\n\t\t\t\t\tconst keysNow = new Set(this._hunkDisplayData.keys());\n\t\t\t\t\twidgetData = undefined;\n\n\t\t\t\t\tfor (const hunkData of this._session.hunkData.getInfo()) {\n\t\t\t\t\t\tkeysNow.delete(hunkData);\n\n\t\t\t\t\t\tconst hunkRanges = hunkData.getRangesN();\n\t\t\t\t\t\tlet data = this._hunkDisplayData.get(hunkData);\n\t\t\t\t\t\tif (!data) {\n\t\t\t\t\t\t\t// first time -> create decoration\n\t\t\t\t\t\t\tconst decorationIds: string[] = [];\n\t\t\t\t\t\t\tfor (let i = 0; i < hunkRanges.length; i++) {\n\t\t\t\t\t\t\t\tdecorationIds.push(\n\t\t\t\t\t\t\t\t\tdecorationsAccessor.addDecoration(\n\t\t\t\t\t\t\t\t\t\thunkRanges[i],\n\t\t\t\t\t\t\t\t\t\ti === 0\n\t\t\t\t\t\t\t\t\t\t\t? this._decoInsertedText\n\t\t\t\t\t\t\t\t\t\t\t: this._decoInsertedTextRange,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst acceptHunk = () => {\n\t\t\t\t\t\t\t\thunkData.acceptChanges();\n\t\t\t\t\t\t\t\trenderHunks();\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tconst discardHunk = () => {\n\t\t\t\t\t\t\t\thunkData.discardChanges();\n\t\t\t\t\t\t\t\trenderHunks();\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// original view zone\n\t\t\t\t\t\t\tconst mightContainNonBasicASCII =\n\t\t\t\t\t\t\t\tthis._session.textModel0.mightContainNonBasicASCII();\n\t\t\t\t\t\t\tconst mightContainRTL =\n\t\t\t\t\t\t\t\tthis._session.textModel0.mightContainRTL();\n\t\t\t\t\t\t\tconst renderOptions = RenderOptions.fromEditor(\n\t\t\t\t\t\t\t\tthis._editor,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst originalRange = hunkData.getRanges0()[0];\n\t\t\t\t\t\t\tconst source = new LineSource(\n\t\t\t\t\t\t\t\tLineRange.fromRangeInclusive(\n\t\t\t\t\t\t\t\t\toriginalRange,\n\t\t\t\t\t\t\t\t).mapToLineArray((l) =>\n\t\t\t\t\t\t\t\t\tthis._session.textModel0.tokenization.getLineTokens(\n\t\t\t\t\t\t\t\t\t\tl,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t\t\tmightContainNonBasicASCII,\n\t\t\t\t\t\t\t\tmightContainRTL,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst domNode = document.createElement(\"div\");\n\t\t\t\t\t\t\tdomNode.className = \"inline-chat-original-zone2\";\n\t\t\t\t\t\t\tconst result = renderLines(\n\t\t\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\t\trenderOptions,\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tnew InlineDecoration(\n\t\t\t\t\t\t\t\t\t\tnew Range(\n\t\t\t\t\t\t\t\t\t\t\toriginalRange.startLineNumber,\n\t\t\t\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t\t\t\toriginalRange.startLineNumber,\n\t\t\t\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\t\t\tInlineDecorationType.Regular,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tdomNode,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst viewZoneData: IViewZone = {\n\t\t\t\t\t\t\t\tafterLineNumber: -1,\n\t\t\t\t\t\t\t\theightInLines: result.heightInLines,\n\t\t\t\t\t\t\t\tdomNode,\n\t\t\t\t\t\t\t\tordinal: 50000 + 2, // more than https://github.com/microsoft/vscode/blob/bf52a5cfb2c75a7327c9adeaefbddc06d529dcad/src/vs/workbench/contrib/inlineChat/browser/inlineChatZoneWidget.ts#L42\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tconst toggleDiff = () => {\n\t\t\t\t\t\t\t\tconst scrollState =\n\t\t\t\t\t\t\t\t\tStableEditorScrollState.capture(\n\t\t\t\t\t\t\t\t\t\tthis._editor,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tchangeDecorationsAndViewZones(\n\t\t\t\t\t\t\t\t\tthis._editor,\n\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t_decorationsAccessor,\n\t\t\t\t\t\t\t\t\t\tviewZoneAccessor,\n\t\t\t\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\t\t\t\tassertType(data);\n\t\t\t\t\t\t\t\t\t\tif (data.diffViewZoneId) {\n\t\t\t\t\t\t\t\t\t\t\tviewZoneAccessor.removeZone(\n\t\t\t\t\t\t\t\t\t\t\t\tdata.diffViewZoneId!,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\toverlay?.updateExtraTop(0);\n\t\t\t\t\t\t\t\t\t\t\tdata.diffViewZoneId = undefined;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tconst [hunkRange] =\n\t\t\t\t\t\t\t\t\t\t\t\thunkData.getRangesN();\n\t\t\t\t\t\t\t\t\t\t\tviewZoneData.afterLineNumber =\n\t\t\t\t\t\t\t\t\t\t\t\thunkRange.startLineNumber - 1;\n\t\t\t\t\t\t\t\t\t\t\tdata.diffViewZoneId =\n\t\t\t\t\t\t\t\t\t\t\t\tviewZoneAccessor.addZone(\n\t\t\t\t\t\t\t\t\t\t\t\t\tviewZoneData,\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\toverlay?.updateExtraTop(\n\t\t\t\t\t\t\t\t\t\t\t\tresult.heightInLines,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tthis._ctxCurrentChangeShowsDiff.set(\n\t\t\t\t\t\t\t\t\ttypeof data?.diffViewZoneId === \"string\",\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tscrollState.restore(this._editor);\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tconst overlay =\n\t\t\t\t\t\t\t\tthis._showOverlayToolbar && false\n\t\t\t\t\t\t\t\t\t? this._instaService.createInstance(\n\t\t\t\t\t\t\t\t\t\t\tInlineChangeOverlay,\n\t\t\t\t\t\t\t\t\t\t\tthis._editor,\n\t\t\t\t\t\t\t\t\t\t\thunkData,\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t: undefined;\n\n\t\t\t\t\t\t\tlet lensActions: DisposableStore | undefined;\n\t\t\t\t\t\t\tconst lensActionsViewZoneIds: string[] = [];\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tthis._showOverlayToolbar &&\n\t\t\t\t\t\t\t\thunkData.getState() === HunkState.Pending\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tlensActions = new DisposableStore();\n\n\t\t\t\t\t\t\t\tconst menu = this._menuService.createMenu(\n\t\t\t\t\t\t\t\t\tMENU_INLINE_CHAT_ZONE,\n\t\t\t\t\t\t\t\t\tthis._contextService,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconst makeActions = () => {\n\t\t\t\t\t\t\t\t\tconst actions: IContentWidgetAction[] = [];\n\t\t\t\t\t\t\t\t\tconst tuples = menu.getActions();\n\t\t\t\t\t\t\t\t\tfor (const [, group] of tuples) {\n\t\t\t\t\t\t\t\t\t\tfor (const item of group) {\n\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\titem instanceof MenuItemAction\n\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\tlet text = item.label;\n\n\t\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t\titem.id ===\n\t\t\t\t\t\t\t\t\t\t\t\t\tACTION_TOGGLE_DIFF\n\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttext = item.checked\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"Hide Changes\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"Show Changes\";\n\t\t\t\t\t\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\t\t\t\t\t\tThemeIcon.isThemeIcon(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.item.icon,\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttext = `$(${item.item.icon.id}) ${text}`;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tactions.push({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttext,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttooltip: item.tooltip,\n\t\t\t\t\t\t\t\t\t\t\t\t\taction: async () =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.run(),\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn actions;\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tconst obs = observableValue(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\tmakeActions(),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tlensActions.add(\n\t\t\t\t\t\t\t\t\tmenu.onDidChange(() =>\n\t\t\t\t\t\t\t\t\t\tobs.set(makeActions(), undefined),\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tlensActions.add(menu);\n\n\t\t\t\t\t\t\t\tlensActions.add(\n\t\t\t\t\t\t\t\t\tthis._lensActionsFactory.createWidget(\n\t\t\t\t\t\t\t\t\t\tviewZoneAccessor,\n\t\t\t\t\t\t\t\t\t\thunkRanges[0].startLineNumber - 1,\n\t\t\t\t\t\t\t\t\t\tobs,\n\t\t\t\t\t\t\t\t\t\tlensActionsViewZoneIds,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst remove = () => {\n\t\t\t\t\t\t\t\tchangeDecorationsAndViewZones(\n\t\t\t\t\t\t\t\t\tthis._editor,\n\t\t\t\t\t\t\t\t\t(decorationsAccessor, viewZoneAccessor) => {\n\t\t\t\t\t\t\t\t\t\tassertType(data);\n\t\t\t\t\t\t\t\t\t\tfor (const decorationId of data.decorationIds) {\n\t\t\t\t\t\t\t\t\t\t\tdecorationsAccessor.removeDecoration(\n\t\t\t\t\t\t\t\t\t\t\t\tdecorationId,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (data.diffViewZoneId) {\n\t\t\t\t\t\t\t\t\t\t\tviewZoneAccessor.removeZone(\n\t\t\t\t\t\t\t\t\t\t\t\tdata.diffViewZoneId,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tdata.decorationIds = [];\n\t\t\t\t\t\t\t\t\t\tdata.diffViewZoneId = undefined;\n\n\t\t\t\t\t\t\t\t\t\tdata.lensActionsViewZoneIds?.forEach(\n\t\t\t\t\t\t\t\t\t\t\tviewZoneAccessor.removeZone,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tdata.lensActionsViewZoneIds = undefined;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tlensActions?.dispose();\n\t\t\t\t\t\t\t\toverlay?.dispose();\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tconst move = (next: boolean) => {\n\t\t\t\t\t\t\t\tconst keys = Array.from(\n\t\t\t\t\t\t\t\t\tthis._hunkDisplayData.keys(),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconst idx = keys.indexOf(hunkData);\n\t\t\t\t\t\t\t\tconst nextIdx =\n\t\t\t\t\t\t\t\t\t(idx + (next ? 1 : -1) + keys.length) %\n\t\t\t\t\t\t\t\t\tkeys.length;\n\t\t\t\t\t\t\t\tif (nextIdx !== idx) {\n\t\t\t\t\t\t\t\t\tconst nextData = this._hunkDisplayData.get(\n\t\t\t\t\t\t\t\t\t\tkeys[nextIdx],\n\t\t\t\t\t\t\t\t\t)!;\n\t\t\t\t\t\t\t\t\tthis._zone.updatePositionAndHeight(\n\t\t\t\t\t\t\t\t\t\tnextData?.position,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\trenderHunks();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tconst zoneLineNumber =\n\t\t\t\t\t\t\t\tthis._zone.position?.lineNumber ??\n\t\t\t\t\t\t\t\tthis._editor.getPosition()!.lineNumber;\n\t\t\t\t\t\t\tconst myDistance =\n\t\t\t\t\t\t\t\tzoneLineNumber <= hunkRanges[0].startLineNumber\n\t\t\t\t\t\t\t\t\t? hunkRanges[0].startLineNumber -\n\t\t\t\t\t\t\t\t\t\tzoneLineNumber\n\t\t\t\t\t\t\t\t\t: zoneLineNumber -\n\t\t\t\t\t\t\t\t\t\thunkRanges[0].endLineNumber;\n\n\t\t\t\t\t\t\tdata = {\n\t\t\t\t\t\t\t\thunk: hunkData,\n\t\t\t\t\t\t\t\tdecorationIds,\n\t\t\t\t\t\t\t\tdiffViewZoneId: \"\",\n\t\t\t\t\t\t\t\tdiffViewZone: viewZoneData,\n\t\t\t\t\t\t\t\tlensActionsViewZoneIds,\n\t\t\t\t\t\t\t\tdistance: myDistance,\n\t\t\t\t\t\t\t\tposition: hunkRanges[0]\n\t\t\t\t\t\t\t\t\t.getStartPosition()\n\t\t\t\t\t\t\t\t\t.delta(-1),\n\t\t\t\t\t\t\t\tacceptHunk,\n\t\t\t\t\t\t\t\tdiscardHunk,\n\t\t\t\t\t\t\t\ttoggleDiff: hunkData.isInsertion()\n\t\t\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t\t\t: toggleDiff,\n\t\t\t\t\t\t\t\tremove,\n\t\t\t\t\t\t\t\tmove,\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tthis._hunkDisplayData.set(hunkData, data);\n\t\t\t\t\t\t} else if (hunkData.getState() !== HunkState.Pending) {\n\t\t\t\t\t\t\tdata.remove();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// update distance and position based on modifiedRange-decoration\n\t\t\t\t\t\t\tconst zoneLineNumber =\n\t\t\t\t\t\t\t\tthis._zone.position?.lineNumber ??\n\t\t\t\t\t\t\t\tthis._editor.getPosition()!.lineNumber;\n\t\t\t\t\t\t\tconst modifiedRangeNow = hunkRanges[0];\n\t\t\t\t\t\t\tdata.position = modifiedRangeNow\n\t\t\t\t\t\t\t\t.getStartPosition()\n\t\t\t\t\t\t\t\t.delta(-1);\n\t\t\t\t\t\t\tdata.distance =\n\t\t\t\t\t\t\t\tzoneLineNumber <=\n\t\t\t\t\t\t\t\tmodifiedRangeNow.startLineNumber\n\t\t\t\t\t\t\t\t\t? modifiedRangeNow.startLineNumber -\n\t\t\t\t\t\t\t\t\t\tzoneLineNumber\n\t\t\t\t\t\t\t\t\t: zoneLineNumber -\n\t\t\t\t\t\t\t\t\t\tmodifiedRangeNow.endLineNumber;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\thunkData.getState() === HunkState.Pending &&\n\t\t\t\t\t\t\t(!widgetData || data.distance < widgetData.distance)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\twidgetData = data;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key of keysNow) {\n\t\t\t\t\t\tconst data = this._hunkDisplayData.get(key);\n\t\t\t\t\t\tif (data) {\n\t\t\t\t\t\t\tthis._hunkDisplayData.delete(key);\n\t\t\t\t\t\t\tdata.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tif (widgetData) {\n\t\t\t\tthis._zone.updatePositionAndHeight(widgetData.position);\n\n\t\t\t\tconst mode = this._configService.getValue<\n\t\t\t\t\t\"on\" | \"off\" | \"auto\"\n\t\t\t\t>(InlineChatConfigKeys.AccessibleDiffView);\n\t\t\t\tif (\n\t\t\t\t\tmode === \"on\" ||\n\t\t\t\t\t(mode === \"auto\" &&\n\t\t\t\t\t\tthis._accessibilityService.isScreenReaderOptimized())\n\t\t\t\t) {\n\t\t\t\t\tthis._zone.widget.showAccessibleHunk(\n\t\t\t\t\t\tthis._session,\n\t\t\t\t\t\twidgetData.hunk,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthis._ctxCurrentChangeHasDiff.set(\n\t\t\t\t\tBoolean(widgetData.toggleDiff),\n\t\t\t\t);\n\t\t\t} else if (this._hunkDisplayData.size > 0) {\n\t\t\t\t// everything accepted or rejected\n\t\t\t\tlet oneAccepted = false;\n\t\t\t\tfor (const hunkData of this._session.hunkData.getInfo()) {\n\t\t\t\t\tif (hunkData.getState() === HunkState.Accepted) {\n\t\t\t\t\t\toneAccepted = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (oneAccepted) {\n\t\t\t\t\tthis._onDidAccept.fire();\n\t\t\t\t} else {\n\t\t\t\t\tthis._onDidDiscard.fire();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn widgetData;\n\t\t};\n\n\t\treturn renderHunks()?.position;\n\t}\n\n\thasFocus(): boolean {\n\t\treturn this._zone.widget.hasFocus();\n\t}\n\n\toverride getWholeRangeDecoration(): IModelDeltaDecoration[] {\n\t\t// don't render the blue in live mode\n\t\treturn [];\n\t}\n}\n\nfunction changeDecorationsAndViewZones(\n\teditor: ICodeEditor,\n\tcallback: (\n\t\taccessor: IModelDecorationsChangeAccessor,\n\t\tviewZoneAccessor: IViewZoneChangeAccessor,\n\t) => void,\n): void {\n\teditor.changeDecorations((decorationsAccessor) => {\n\t\teditor.changeViewZones((viewZoneAccessor) => {\n\t\t\tcallback(decorationsAccessor, viewZoneAccessor);\n\t\t});\n\t});\n}\n\nclass InlineChangeOverlay implements IOverlayWidget {\n\treadonly allowEditorOverflow: boolean = false;\n\n\tprivate readonly _id: string = `inline-chat-diff-overlay-` + generateUuid();\n\tprivate readonly _domNode: HTMLElement = document.createElement(\"div\");\n\tprivate readonly _store: DisposableStore = new DisposableStore();\n\n\tprivate _extraTopLines = 0;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _hunkInfo: HunkInformation,\n\t\t@IInstantiationService private readonly _instaService: IInstantiationService,\n\t) {\n\n\t\tthis._domNode.classList.add('inline-chat-diff-overlay');\n\n\t\tif (_hunkInfo.getState() === HunkState.Pending) {\n\n\t\t\tconst menuBar = this._store.add(this._instaService.createInstance(MenuWorkbenchButtonBar, this._domNode, MENU_INLINE_CHAT_ZONE, {\n\t\t\t\tmenuOptions: { arg: _hunkInfo },\n\t\t\t\ttelemetrySource: 'inlineChat-changesZone',\n\t\t\t\tbuttonConfigProvider: (_action, idx) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tisSecondary: idx > 0,\n\t\t\t\t\t\tshowIcon: true,\n\t\t\t\t\t\tshowLabel: false\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t}));\n\n\t\t\tthis._store.add(menuBar.onDidChange(() => this._editor.layoutOverlayWidget(this)));\n\t\t}\n\n\t\tthis._editor.addOverlayWidget(this);\n\t\tthis._store.add(Event.any(this._editor.onDidLayoutChange, this._editor.onDidScrollChange)(() => this._editor.layoutOverlayWidget(this)));\n\t\tqueueMicrotask(() => this._editor.layoutOverlayWidget(this)); // FUNKY but needed to get the initial layout right\n\t}\n\n\tdispose(): void {\n\t\tthis._editor.removeOverlayWidget(this);\n\t\tthis._store.dispose();\n\t}\n\n\tgetId(): string {\n\t\treturn this._id;\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this._domNode;\n\t}\n\n\tgetPosition(): IOverlayWidgetPosition | null {\n\t\tconst line = this._hunkInfo.getRangesN()[0].startLineNumber;\n\t\tconst info = this._editor.getLayoutInfo();\n\t\tconst top =\n\t\t\tthis._editor.getTopForLineNumber(line) -\n\t\t\tthis._editor.getScrollTop();\n\t\tconst left =\n\t\t\tinfo.contentLeft + info.contentWidth - info.verticalScrollbarWidth;\n\n\t\tconst extraTop =\n\t\t\tthis._editor.getOption(EditorOption.lineHeight) *\n\t\t\tthis._extraTopLines;\n\t\tconst width = getTotalWidth(this._domNode);\n\n\t\treturn { preference: { top: top - extraTop, left: left - width } };\n\t}\n\n\tupdateExtraTop(value: number) {\n\t\tif (this._extraTopLines !== value) {\n\t\t\tthis._extraTopLines = value;\n\t\t\tthis._editor.layoutOverlayWidget(this);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["HunkAction", "edits", "viewZoneAccessor", "decorationsAccessor"]
}
