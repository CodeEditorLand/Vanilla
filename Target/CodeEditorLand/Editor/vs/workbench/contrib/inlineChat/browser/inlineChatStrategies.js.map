{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/inlineChat/browser/inlineChatStrategies.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getTotalWidth, WindowIntervalTimer } from '../../../../base/browser/dom.js';\nimport { coalesceInPlace } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { themeColorFromId, ThemeIcon } from '../../../../base/common/themables.js';\nimport { ICodeEditor, IOverlayWidget, IOverlayWidgetPosition, IViewZone, IViewZoneChangeAccessor } from '../../../../editor/browser/editorBrowser.js';\nimport { StableEditorScrollState } from '../../../../editor/browser/stableEditorScroll.js';\nimport { LineSource, RenderOptions, renderLines } from '../../../../editor/browser/widget/diffEditor/components/diffEditorViewZones/renderLines.js';\nimport { ISingleEditOperation } from '../../../../editor/common/core/editOperation.js';\nimport { LineRange } from '../../../../editor/common/core/lineRange.js';\nimport { Position } from '../../../../editor/common/core/position.js';\nimport { Range } from '../../../../editor/common/core/range.js';\nimport { IEditorDecorationsCollection } from '../../../../editor/common/editorCommon.js';\nimport { IModelDecorationsChangeAccessor, IModelDeltaDecoration, IValidEditOperation, MinimapPosition, OverviewRulerLane, TrackedRangeStickiness } from '../../../../editor/common/model.js';\nimport { ModelDecorationOptions } from '../../../../editor/common/model/textModel.js';\nimport { IEditorWorkerService } from '../../../../editor/common/services/editorWorker.js';\nimport { InlineDecoration, InlineDecorationType } from '../../../../editor/common/viewModel.js';\nimport { IContextKey, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { Progress } from '../../../../platform/progress/common/progress.js';\nimport { SaveReason } from '../../../common/editor.js';\nimport { countWords } from '../../chat/common/chatWordCounter.js';\nimport { HunkInformation, Session, HunkState } from './inlineChatSession.js';\nimport { InlineChatZoneWidget } from './inlineChatZoneWidget.js';\nimport { ACTION_TOGGLE_DIFF, CTX_INLINE_CHAT_CHANGE_HAS_DIFF, CTX_INLINE_CHAT_CHANGE_SHOWS_DIFF, CTX_INLINE_CHAT_DOCUMENT_CHANGED, InlineChatConfigKeys, MENU_INLINE_CHAT_ZONE, minimapInlineChatDiffInserted, overviewRulerInlineChatDiffInserted } from '../common/inlineChat.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { IModelService } from '../../../../editor/common/services/model.js';\nimport { performAsyncTextEdit, asProgressiveEdit } from './utils.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ITextFileService } from '../../../services/textfile/common/textfiles.js';\nimport { IUntitledTextEditorModel } from '../../../services/untitled/common/untitledTextEditorModel.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { DefaultChatTextEditor } from '../../chat/browser/codeBlockPart.js';\nimport { isEqual } from '../../../../base/common/resources.js';\nimport { generateUuid } from '../../../../base/common/uuid.js';\nimport { MenuWorkbenchButtonBar } from '../../../../platform/actions/browser/buttonbar.js';\nimport { EditorOption } from '../../../../editor/common/config/editorOptions.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { ConflictActionsFactory, IContentWidgetAction } from '../../mergeEditor/browser/view/conflictActions.js';\nimport { observableValue } from '../../../../base/common/observable.js';\nimport { IMenuService, MenuItemAction } from '../../../../platform/actions/common/actions.js';\n\nexport interface IEditObserver {\n\tstart(): void;\n\tstop(): void;\n}\n\nexport const enum HunkAction {\n\tAccept,\n\tDiscard,\n\tMoveNext,\n\tMovePrev,\n\tToggleDiff\n}\n\nexport abstract class EditModeStrategy {\n\n\tprotected static _decoBlock = ModelDecorationOptions.register({\n\t\tdescription: 'inline-chat',\n\t\tshowIfCollapsed: false,\n\t\tisWholeLine: true,\n\t});\n\n\tprotected readonly _store = new DisposableStore();\n\tprotected readonly _onDidAccept = this._store.add(new Emitter<void>());\n\tprotected readonly _onDidDiscard = this._store.add(new Emitter<void>());\n\n\n\treadonly onDidAccept: Event<void> = this._onDidAccept.event;\n\treadonly onDidDiscard: Event<void> = this._onDidDiscard.event;\n\n\tconstructor(\n\t\tprotected readonly _session: Session,\n\t\tprotected readonly _editor: ICodeEditor,\n\t\tprotected readonly _zone: InlineChatZoneWidget,\n\t\t@ITextFileService private readonly _textFileService: ITextFileService,\n\t\t@IInstantiationService protected readonly _instaService: IInstantiationService,\n\t) { }\n\n\tdispose(): void {\n\t\tthis._store.dispose();\n\t}\n\n\tperformHunkAction(_hunk: HunkInformation | undefined, action: HunkAction) {\n\t\tif (action === HunkAction.Accept) {\n\t\t\tthis._onDidAccept.fire();\n\t\t} else if (action === HunkAction.Discard) {\n\t\t\tthis._onDidDiscard.fire();\n\t\t}\n\t}\n\n\tprotected async _doApplyChanges(ignoreLocal: boolean): Promise<void> {\n\n\t\tconst untitledModels: IUntitledTextEditorModel[] = [];\n\n\t\tconst editor = this._instaService.createInstance(DefaultChatTextEditor);\n\n\n\t\tfor (const request of this._session.chatModel.getRequests()) {\n\n\t\t\tif (!request.response?.response) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (const item of request.response.response.value) {\n\t\t\t\tif (item.kind !== 'textEditGroup') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (ignoreLocal && isEqual(item.uri, this._session.textModelN.uri)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tawait editor.apply(request.response, item, undefined);\n\n\t\t\t\tif (item.uri.scheme === Schemas.untitled) {\n\t\t\t\t\tconst untitled = this._textFileService.untitled.get(item.uri);\n\t\t\t\t\tif (untitled) {\n\t\t\t\t\t\tuntitledModels.push(untitled);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const untitledModel of untitledModels) {\n\t\t\tif (!untitledModel.isDisposed()) {\n\t\t\t\tawait untitledModel.resolve();\n\t\t\t\tawait untitledModel.save({ reason: SaveReason.EXPLICIT });\n\t\t\t}\n\t\t}\n\t}\n\n\tabstract apply(): Promise<void>;\n\n\tcancel() {\n\t\treturn this._session.hunkData.discardAll();\n\t}\n\n\n\n\tabstract makeProgressiveChanges(edits: ISingleEditOperation[], obs: IEditObserver, timings: ProgressingEditsOptions, undoStopBefore: boolean): Promise<void>;\n\n\tabstract makeChanges(edits: ISingleEditOperation[], obs: IEditObserver, undoStopBefore: boolean): Promise<void>;\n\n\tabstract renderChanges(): Promise<Position | undefined>;\n\n\tabstract hasFocus(): boolean;\n\n\tgetWholeRangeDecoration(): IModelDeltaDecoration[] {\n\t\tconst ranges = [this._session.wholeRange.value];\n\t\tconst newDecorations = ranges.map(range => range.isEmpty() ? undefined : ({ range, options: EditModeStrategy._decoBlock }));\n\t\tcoalesceInPlace(newDecorations);\n\t\treturn newDecorations;\n\t}\n}\n\nexport class PreviewStrategy extends EditModeStrategy {\n\n\tprivate readonly _ctxDocumentChanged: IContextKey<boolean>;\n\n\tconstructor(\n\t\tsession: Session,\n\t\teditor: ICodeEditor,\n\t\tzone: InlineChatZoneWidget,\n\t\t@IModelService modelService: IModelService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ITextFileService textFileService: ITextFileService,\n\t\t@IInstantiationService instaService: IInstantiationService\n\t) {\n\t\tsuper(session, editor, zone, textFileService, instaService);\n\n\t\tthis._ctxDocumentChanged = CTX_INLINE_CHAT_DOCUMENT_CHANGED.bindTo(contextKeyService);\n\n\t\tconst baseModel = modelService.getModel(session.targetUri)!;\n\t\tEvent.debounce(baseModel.onDidChangeContent.bind(baseModel), () => { }, 350)(_ => {\n\t\t\tif (!baseModel.isDisposed() && !session.textModel0.isDisposed()) {\n\t\t\t\tthis._ctxDocumentChanged.set(session.hasChangedText);\n\t\t\t}\n\t\t}, undefined, this._store);\n\t}\n\n\toverride dispose(): void {\n\t\tthis._ctxDocumentChanged.reset();\n\t\tsuper.dispose();\n\t}\n\n\toverride async apply() {\n\t\tawait super._doApplyChanges(false);\n\t}\n\n\toverride async makeChanges(): Promise<void> {\n\t}\n\n\toverride async makeProgressiveChanges(): Promise<void> {\n\t}\n\n\toverride async renderChanges(): Promise<undefined> { }\n\n\thasFocus(): boolean {\n\t\treturn this._zone.widget.hasFocus();\n\t}\n}\n\n\nexport interface ProgressingEditsOptions {\n\tduration: number;\n\ttoken: CancellationToken;\n}\n\n\n\ntype HunkDisplayData = {\n\n\tdecorationIds: string[];\n\n\tdiffViewZoneId: string | undefined;\n\tdiffViewZone: IViewZone;\n\n\tlensActionsViewZoneIds?: string[];\n\n\tdistance: number;\n\tposition: Position;\n\tacceptHunk: () => void;\n\tdiscardHunk: () => void;\n\ttoggleDiff?: () => any;\n\tremove(): void;\n\tmove: (next: boolean) => void;\n\n\thunk: HunkInformation;\n};\n\n\nexport class LiveStrategy extends EditModeStrategy {\n\n\tprivate readonly _decoInsertedText = ModelDecorationOptions.register({\n\t\tdescription: 'inline-modified-line',\n\t\tclassName: 'inline-chat-inserted-range-linehighlight',\n\t\tisWholeLine: true,\n\t\toverviewRuler: {\n\t\t\tposition: OverviewRulerLane.Full,\n\t\t\tcolor: themeColorFromId(overviewRulerInlineChatDiffInserted),\n\t\t},\n\t\tminimap: {\n\t\t\tposition: MinimapPosition.Inline,\n\t\t\tcolor: themeColorFromId(minimapInlineChatDiffInserted),\n\t\t}\n\t});\n\n\tprivate readonly _decoInsertedTextRange = ModelDecorationOptions.register({\n\t\tdescription: 'inline-chat-inserted-range-linehighlight',\n\t\tclassName: 'inline-chat-inserted-range',\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t});\n\n\tprivate readonly _ctxCurrentChangeHasDiff: IContextKey<boolean>;\n\tprivate readonly _ctxCurrentChangeShowsDiff: IContextKey<boolean>;\n\n\tprivate readonly _progressiveEditingDecorations: IEditorDecorationsCollection;\n\tprivate readonly _lensActionsFactory: ConflictActionsFactory;\n\tprivate _editCount: number = 0;\n\n\tconstructor(\n\t\tsession: Session,\n\t\teditor: ICodeEditor,\n\t\tzone: InlineChatZoneWidget,\n\t\tprivate readonly _showOverlayToolbar: boolean,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IEditorWorkerService protected readonly _editorWorkerService: IEditorWorkerService,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService,\n\t\t@IConfigurationService private readonly _configService: IConfigurationService,\n\t\t@IMenuService private readonly _menuService: IMenuService,\n\t\t@IContextKeyService private readonly _contextService: IContextKeyService,\n\t\t@ITextFileService textFileService: ITextFileService,\n\t\t@IInstantiationService instaService: IInstantiationService\n\t) {\n\t\tsuper(session, editor, zone, textFileService, instaService);\n\t\tthis._ctxCurrentChangeHasDiff = CTX_INLINE_CHAT_CHANGE_HAS_DIFF.bindTo(contextKeyService);\n\t\tthis._ctxCurrentChangeShowsDiff = CTX_INLINE_CHAT_CHANGE_SHOWS_DIFF.bindTo(contextKeyService);\n\n\t\tthis._progressiveEditingDecorations = this._editor.createDecorationsCollection();\n\t\tthis._lensActionsFactory = this._store.add(new ConflictActionsFactory(this._editor));\n\n\t}\n\n\toverride dispose(): void {\n\t\tthis._resetDiff();\n\t\tsuper.dispose();\n\t}\n\n\tprivate _resetDiff(): void {\n\t\tthis._ctxCurrentChangeHasDiff.reset();\n\t\tthis._ctxCurrentChangeShowsDiff.reset();\n\t\tthis._zone.widget.updateStatus('');\n\t\tthis._progressiveEditingDecorations.clear();\n\n\n\t\tfor (const data of this._hunkDisplayData.values()) {\n\t\t\tdata.remove();\n\t\t}\n\t}\n\n\toverride async apply() {\n\t\tthis._resetDiff();\n\t\tif (this._editCount > 0) {\n\t\t\tthis._editor.pushUndoStop();\n\t\t}\n\t\tawait super._doApplyChanges(true);\n\t}\n\n\toverride cancel() {\n\t\tthis._resetDiff();\n\t\treturn super.cancel();\n\t}\n\n\toverride async makeChanges(edits: ISingleEditOperation[], obs: IEditObserver, undoStopBefore: boolean): Promise<void> {\n\t\treturn this._makeChanges(edits, obs, undefined, undefined, undoStopBefore);\n\t}\n\n\toverride async makeProgressiveChanges(edits: ISingleEditOperation[], obs: IEditObserver, opts: ProgressingEditsOptions, undoStopBefore: boolean): Promise<void> {\n\n\t\t// add decorations once per line that got edited\n\t\tconst progress = new Progress<IValidEditOperation[]>(edits => {\n\n\t\t\tconst newLines = new Set<number>();\n\t\t\tfor (const edit of edits) {\n\t\t\t\tLineRange.fromRange(edit.range).forEach(line => newLines.add(line));\n\t\t\t}\n\t\t\tconst existingRanges = this._progressiveEditingDecorations.getRanges().map(LineRange.fromRange);\n\t\t\tfor (const existingRange of existingRanges) {\n\t\t\t\texistingRange.forEach(line => newLines.delete(line));\n\t\t\t}\n\t\t\tconst newDecorations: IModelDeltaDecoration[] = [];\n\t\t\tfor (const line of newLines) {\n\t\t\t\tnewDecorations.push({ range: new Range(line, 1, line, Number.MAX_VALUE), options: this._decoInsertedText });\n\t\t\t}\n\n\t\t\tthis._progressiveEditingDecorations.append(newDecorations);\n\t\t});\n\t\treturn this._makeChanges(edits, obs, opts, progress, undoStopBefore);\n\t}\n\n\tprivate async _makeChanges(edits: ISingleEditOperation[], obs: IEditObserver, opts: ProgressingEditsOptions | undefined, progress: Progress<IValidEditOperation[]> | undefined, undoStopBefore: boolean): Promise<void> {\n\n\t\t// push undo stop before first edit\n\t\tif (undoStopBefore) {\n\t\t\tthis._editor.pushUndoStop();\n\t\t}\n\n\t\tthis._editCount++;\n\n\t\tif (opts) {\n\t\t\t// ASYNC\n\t\t\tconst durationInSec = opts.duration / 1000;\n\t\t\tfor (const edit of edits) {\n\t\t\t\tconst wordCount = countWords(edit.text ?? '');\n\t\t\t\tconst speed = wordCount / durationInSec;\n\t\t\t\t// console.log({ durationInSec, wordCount, speed: wordCount / durationInSec });\n\t\t\t\tconst asyncEdit = asProgressiveEdit(new WindowIntervalTimer(this._zone.domNode), edit, speed, opts.token);\n\t\t\t\tawait performAsyncTextEdit(this._session.textModelN, asyncEdit, progress, obs);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// SYNC\n\t\t\tobs.start();\n\t\t\tthis._session.textModelN.pushEditOperations(null, edits, (undoEdits) => {\n\t\t\t\tprogress?.report(undoEdits);\n\t\t\t\treturn null;\n\t\t\t});\n\t\t\tobs.stop();\n\t\t}\n\t}\n\n\toverride performHunkAction(hunk: HunkInformation | undefined, action: HunkAction) {\n\t\tconst displayData = this._findDisplayData(hunk);\n\n\t\tif (!displayData) {\n\t\t\t// no hunks (left or not yet) found, make sure to\n\t\t\t// finish the sessions\n\t\t\tif (action === HunkAction.Accept) {\n\t\t\t\tthis._onDidAccept.fire();\n\t\t\t} else if (action === HunkAction.Discard) {\n\t\t\t\tthis._onDidDiscard.fire();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (action === HunkAction.Accept) {\n\t\t\tdisplayData.acceptHunk();\n\t\t} else if (action === HunkAction.Discard) {\n\t\t\tdisplayData.discardHunk();\n\t\t} else if (action === HunkAction.MoveNext) {\n\t\t\tdisplayData.move(true);\n\t\t} else if (action === HunkAction.MovePrev) {\n\t\t\tdisplayData.move(false);\n\t\t} else if (action === HunkAction.ToggleDiff) {\n\t\t\tdisplayData.toggleDiff?.();\n\t\t}\n\t}\n\n\tprivate _findDisplayData(hunkInfo?: HunkInformation) {\n\t\tlet result: HunkDisplayData | undefined;\n\t\tif (hunkInfo) {\n\t\t\t// use context hunk (from tool/buttonbar)\n\t\t\tresult = this._hunkDisplayData.get(hunkInfo);\n\t\t}\n\n\t\tif (!result && this._zone.position) {\n\t\t\t// find nearest from zone position\n\t\t\tconst zoneLine = this._zone.position.lineNumber;\n\t\t\tlet distance: number = Number.MAX_SAFE_INTEGER;\n\t\t\tfor (const candidate of this._hunkDisplayData.values()) {\n\t\t\t\tif (candidate.hunk.getState() !== HunkState.Pending) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst hunkRanges = candidate.hunk.getRangesN();\n\t\t\t\tconst myDistance = zoneLine <= hunkRanges[0].startLineNumber\n\t\t\t\t\t? hunkRanges[0].startLineNumber - zoneLine\n\t\t\t\t\t: zoneLine - hunkRanges[0].endLineNumber;\n\n\t\t\t\tif (myDistance < distance) {\n\t\t\t\t\tdistance = myDistance;\n\t\t\t\t\tresult = candidate;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!result) {\n\t\t\t// fallback: first hunk that is pending\n\t\t\tresult = Iterable.first(Iterable.filter(this._hunkDisplayData.values(), candidate => candidate.hunk.getState() === HunkState.Pending));\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate readonly _hunkDisplayData = new Map<HunkInformation, HunkDisplayData>();\n\n\toverride async renderChanges() {\n\n\t\tthis._progressiveEditingDecorations.clear();\n\n\t\tconst renderHunks = () => {\n\n\t\t\tlet widgetData: HunkDisplayData | undefined;\n\n\t\t\tchangeDecorationsAndViewZones(this._editor, (decorationsAccessor, viewZoneAccessor) => {\n\n\t\t\t\tconst keysNow = new Set(this._hunkDisplayData.keys());\n\t\t\t\twidgetData = undefined;\n\n\t\t\t\tfor (const hunkData of this._session.hunkData.getInfo()) {\n\n\t\t\t\t\tkeysNow.delete(hunkData);\n\n\t\t\t\t\tconst hunkRanges = hunkData.getRangesN();\n\t\t\t\t\tlet data = this._hunkDisplayData.get(hunkData);\n\t\t\t\t\tif (!data) {\n\t\t\t\t\t\t// first time -> create decoration\n\t\t\t\t\t\tconst decorationIds: string[] = [];\n\t\t\t\t\t\tfor (let i = 0; i < hunkRanges.length; i++) {\n\t\t\t\t\t\t\tdecorationIds.push(decorationsAccessor.addDecoration(hunkRanges[i], i === 0\n\t\t\t\t\t\t\t\t? this._decoInsertedText\n\t\t\t\t\t\t\t\t: this._decoInsertedTextRange)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst acceptHunk = () => {\n\t\t\t\t\t\t\thunkData.acceptChanges();\n\t\t\t\t\t\t\trenderHunks();\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst discardHunk = () => {\n\t\t\t\t\t\t\thunkData.discardChanges();\n\t\t\t\t\t\t\trenderHunks();\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// original view zone\n\t\t\t\t\t\tconst mightContainNonBasicASCII = this._session.textModel0.mightContainNonBasicASCII();\n\t\t\t\t\t\tconst mightContainRTL = this._session.textModel0.mightContainRTL();\n\t\t\t\t\t\tconst renderOptions = RenderOptions.fromEditor(this._editor);\n\t\t\t\t\t\tconst originalRange = hunkData.getRanges0()[0];\n\t\t\t\t\t\tconst source = new LineSource(\n\t\t\t\t\t\t\tLineRange.fromRangeInclusive(originalRange).mapToLineArray(l => this._session.textModel0.tokenization.getLineTokens(l)),\n\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t\tmightContainNonBasicASCII,\n\t\t\t\t\t\t\tmightContainRTL,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst domNode = document.createElement('div');\n\t\t\t\t\t\tdomNode.className = 'inline-chat-original-zone2';\n\t\t\t\t\t\tconst result = renderLines(source, renderOptions, [new InlineDecoration(new Range(originalRange.startLineNumber, 1, originalRange.startLineNumber, 1), '', InlineDecorationType.Regular)], domNode);\n\t\t\t\t\t\tconst viewZoneData: IViewZone = {\n\t\t\t\t\t\t\tafterLineNumber: -1,\n\t\t\t\t\t\t\theightInLines: result.heightInLines,\n\t\t\t\t\t\t\tdomNode,\n\t\t\t\t\t\t\tordinal: 50000 + 2 // more than https://github.com/microsoft/vscode/blob/bf52a5cfb2c75a7327c9adeaefbddc06d529dcad/src/vs/workbench/contrib/inlineChat/browser/inlineChatZoneWidget.ts#L42\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst toggleDiff = () => {\n\t\t\t\t\t\t\tconst scrollState = StableEditorScrollState.capture(this._editor);\n\t\t\t\t\t\t\tchangeDecorationsAndViewZones(this._editor, (_decorationsAccessor, viewZoneAccessor) => {\n\t\t\t\t\t\t\t\tassertType(data);\n\t\t\t\t\t\t\t\tif (!data.diffViewZoneId) {\n\t\t\t\t\t\t\t\t\tconst [hunkRange] = hunkData.getRangesN();\n\t\t\t\t\t\t\t\t\tviewZoneData.afterLineNumber = hunkRange.startLineNumber - 1;\n\t\t\t\t\t\t\t\t\tdata.diffViewZoneId = viewZoneAccessor.addZone(viewZoneData);\n\t\t\t\t\t\t\t\t\toverlay?.updateExtraTop(result.heightInLines);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tviewZoneAccessor.removeZone(data.diffViewZoneId!);\n\t\t\t\t\t\t\t\t\toverlay?.updateExtraTop(0);\n\t\t\t\t\t\t\t\t\tdata.diffViewZoneId = undefined;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tthis._ctxCurrentChangeShowsDiff.set(typeof data?.diffViewZoneId === 'string');\n\t\t\t\t\t\t\tscrollState.restore(this._editor);\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst overlay = this._showOverlayToolbar && false\n\t\t\t\t\t\t\t? this._instaService.createInstance(InlineChangeOverlay, this._editor, hunkData)\n\t\t\t\t\t\t\t: undefined;\n\n\n\t\t\t\t\t\tlet lensActions: DisposableStore | undefined;\n\t\t\t\t\t\tconst lensActionsViewZoneIds: string[] = [];\n\n\t\t\t\t\t\tif (this._showOverlayToolbar && hunkData.getState() === HunkState.Pending) {\n\n\t\t\t\t\t\t\tlensActions = new DisposableStore();\n\n\t\t\t\t\t\t\tconst menu = this._menuService.createMenu(MENU_INLINE_CHAT_ZONE, this._contextService);\n\t\t\t\t\t\t\tconst makeActions = () => {\n\t\t\t\t\t\t\t\tconst actions: IContentWidgetAction[] = [];\n\t\t\t\t\t\t\t\tconst tuples = menu.getActions({ arg: hunkData });\n\t\t\t\t\t\t\t\tfor (const [, group] of tuples) {\n\t\t\t\t\t\t\t\t\tfor (const item of group) {\n\t\t\t\t\t\t\t\t\t\tif (item instanceof MenuItemAction) {\n\n\t\t\t\t\t\t\t\t\t\t\tlet text = item.label;\n\n\t\t\t\t\t\t\t\t\t\t\tif (item.id === ACTION_TOGGLE_DIFF) {\n\t\t\t\t\t\t\t\t\t\t\t\ttext = item.checked ? 'Hide Changes' : 'Show Changes';\n\t\t\t\t\t\t\t\t\t\t\t} else if (ThemeIcon.isThemeIcon(item.item.icon)) {\n\t\t\t\t\t\t\t\t\t\t\t\ttext = `$(${item.item.icon.id}) ${text}`;\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tactions.push({\n\t\t\t\t\t\t\t\t\t\t\t\ttext,\n\t\t\t\t\t\t\t\t\t\t\t\ttooltip: item.tooltip,\n\t\t\t\t\t\t\t\t\t\t\t\taction: async () => item.run(),\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn actions;\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tconst obs = observableValue(this, makeActions());\n\t\t\t\t\t\t\tlensActions.add(menu.onDidChange(() => obs.set(makeActions(), undefined)));\n\t\t\t\t\t\t\tlensActions.add(menu);\n\n\t\t\t\t\t\t\tlensActions.add(this._lensActionsFactory.createWidget(viewZoneAccessor,\n\t\t\t\t\t\t\t\thunkRanges[0].startLineNumber - 1,\n\t\t\t\t\t\t\t\tobs,\n\t\t\t\t\t\t\t\tlensActionsViewZoneIds\n\t\t\t\t\t\t\t));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst remove = () => {\n\t\t\t\t\t\t\tchangeDecorationsAndViewZones(this._editor, (decorationsAccessor, viewZoneAccessor) => {\n\t\t\t\t\t\t\t\tassertType(data);\n\t\t\t\t\t\t\t\tfor (const decorationId of data.decorationIds) {\n\t\t\t\t\t\t\t\t\tdecorationsAccessor.removeDecoration(decorationId);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (data.diffViewZoneId) {\n\t\t\t\t\t\t\t\t\tviewZoneAccessor.removeZone(data.diffViewZoneId);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdata.decorationIds = [];\n\t\t\t\t\t\t\t\tdata.diffViewZoneId = undefined;\n\n\t\t\t\t\t\t\t\tdata.lensActionsViewZoneIds?.forEach(viewZoneAccessor.removeZone);\n\t\t\t\t\t\t\t\tdata.lensActionsViewZoneIds = undefined;\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tlensActions?.dispose();\n\t\t\t\t\t\t\toverlay?.dispose();\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst move = (next: boolean) => {\n\t\t\t\t\t\t\tconst keys = Array.from(this._hunkDisplayData.keys());\n\t\t\t\t\t\t\tconst idx = keys.indexOf(hunkData);\n\t\t\t\t\t\t\tconst nextIdx = (idx + (next ? 1 : -1) + keys.length) % keys.length;\n\t\t\t\t\t\t\tif (nextIdx !== idx) {\n\t\t\t\t\t\t\t\tconst nextData = this._hunkDisplayData.get(keys[nextIdx])!;\n\t\t\t\t\t\t\t\tthis._zone.updatePositionAndHeight(nextData?.position);\n\t\t\t\t\t\t\t\trenderHunks();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst zoneLineNumber = this._zone.position?.lineNumber ?? this._editor.getPosition()!.lineNumber;\n\t\t\t\t\t\tconst myDistance = zoneLineNumber <= hunkRanges[0].startLineNumber\n\t\t\t\t\t\t\t? hunkRanges[0].startLineNumber - zoneLineNumber\n\t\t\t\t\t\t\t: zoneLineNumber - hunkRanges[0].endLineNumber;\n\n\t\t\t\t\t\tdata = {\n\t\t\t\t\t\t\thunk: hunkData,\n\t\t\t\t\t\t\tdecorationIds,\n\t\t\t\t\t\t\tdiffViewZoneId: '',\n\t\t\t\t\t\t\tdiffViewZone: viewZoneData,\n\t\t\t\t\t\t\tlensActionsViewZoneIds,\n\t\t\t\t\t\t\tdistance: myDistance,\n\t\t\t\t\t\t\tposition: hunkRanges[0].getStartPosition().delta(-1),\n\t\t\t\t\t\t\tacceptHunk,\n\t\t\t\t\t\t\tdiscardHunk,\n\t\t\t\t\t\t\ttoggleDiff: !hunkData.isInsertion() ? toggleDiff : undefined,\n\t\t\t\t\t\t\tremove,\n\t\t\t\t\t\t\tmove,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tthis._hunkDisplayData.set(hunkData, data);\n\n\t\t\t\t\t} else if (hunkData.getState() !== HunkState.Pending) {\n\t\t\t\t\t\tdata.remove();\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// update distance and position based on modifiedRange-decoration\n\t\t\t\t\t\tconst zoneLineNumber = this._zone.position?.lineNumber ?? this._editor.getPosition()!.lineNumber;\n\t\t\t\t\t\tconst modifiedRangeNow = hunkRanges[0];\n\t\t\t\t\t\tdata.position = modifiedRangeNow.getStartPosition().delta(-1);\n\t\t\t\t\t\tdata.distance = zoneLineNumber <= modifiedRangeNow.startLineNumber\n\t\t\t\t\t\t\t? modifiedRangeNow.startLineNumber - zoneLineNumber\n\t\t\t\t\t\t\t: zoneLineNumber - modifiedRangeNow.endLineNumber;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hunkData.getState() === HunkState.Pending && (!widgetData || data.distance < widgetData.distance)) {\n\t\t\t\t\t\twidgetData = data;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (const key of keysNow) {\n\t\t\t\t\tconst data = this._hunkDisplayData.get(key);\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tthis._hunkDisplayData.delete(key);\n\t\t\t\t\t\tdata.remove();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (widgetData) {\n\t\t\t\tthis._zone.reveal(widgetData.position);\n\n\t\t\t\tconst mode = this._configService.getValue<'on' | 'off' | 'auto'>(InlineChatConfigKeys.AccessibleDiffView);\n\t\t\t\tif (mode === 'on' || mode === 'auto' && this._accessibilityService.isScreenReaderOptimized()) {\n\t\t\t\t\tthis._zone.widget.showAccessibleHunk(this._session, widgetData.hunk);\n\t\t\t\t}\n\n\t\t\t\tthis._ctxCurrentChangeHasDiff.set(Boolean(widgetData.toggleDiff));\n\n\t\t\t} else if (this._hunkDisplayData.size > 0) {\n\t\t\t\t// everything accepted or rejected\n\t\t\t\tlet oneAccepted = false;\n\t\t\t\tfor (const hunkData of this._session.hunkData.getInfo()) {\n\t\t\t\t\tif (hunkData.getState() === HunkState.Accepted) {\n\t\t\t\t\t\toneAccepted = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (oneAccepted) {\n\t\t\t\t\tthis._onDidAccept.fire();\n\t\t\t\t} else {\n\t\t\t\t\tthis._onDidDiscard.fire();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn widgetData;\n\t\t};\n\n\t\treturn renderHunks()?.position;\n\t}\n\n\thasFocus(): boolean {\n\t\treturn this._zone.widget.hasFocus();\n\t}\n\n\toverride getWholeRangeDecoration(): IModelDeltaDecoration[] {\n\t\t// don't render the blue in live mode\n\t\treturn [];\n\t}\n}\n\nfunction changeDecorationsAndViewZones(editor: ICodeEditor, callback: (accessor: IModelDecorationsChangeAccessor, viewZoneAccessor: IViewZoneChangeAccessor) => void): void {\n\teditor.changeDecorations(decorationsAccessor => {\n\t\teditor.changeViewZones(viewZoneAccessor => {\n\t\t\tcallback(decorationsAccessor, viewZoneAccessor);\n\t\t});\n\t});\n}\n\n\nclass InlineChangeOverlay implements IOverlayWidget {\n\n\treadonly allowEditorOverflow: boolean = false;\n\n\tprivate readonly _id: string = `inline-chat-diff-overlay-` + generateUuid();\n\tprivate readonly _domNode: HTMLElement = document.createElement('div');\n\tprivate readonly _store: DisposableStore = new DisposableStore();\n\n\tprivate _extraTopLines: number = 0;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _hunkInfo: HunkInformation,\n\t\t@IInstantiationService private readonly _instaService: IInstantiationService,\n\t) {\n\n\t\tthis._domNode.classList.add('inline-chat-diff-overlay');\n\n\t\tif (_hunkInfo.getState() === HunkState.Pending) {\n\n\t\t\tconst menuBar = this._store.add(this._instaService.createInstance(MenuWorkbenchButtonBar, this._domNode, MENU_INLINE_CHAT_ZONE, {\n\t\t\t\tmenuOptions: { arg: _hunkInfo },\n\t\t\t\ttelemetrySource: 'inlineChat-changesZone',\n\t\t\t\tbuttonConfigProvider: (_action, idx) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tisSecondary: idx > 0,\n\t\t\t\t\t\tshowIcon: true,\n\t\t\t\t\t\tshowLabel: false\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t}));\n\n\t\t\tthis._store.add(menuBar.onDidChange(() => this._editor.layoutOverlayWidget(this)));\n\t\t}\n\n\t\tthis._editor.addOverlayWidget(this);\n\t\tthis._store.add(Event.any(this._editor.onDidLayoutChange, this._editor.onDidScrollChange)(() => this._editor.layoutOverlayWidget(this)));\n\t\tqueueMicrotask(() => this._editor.layoutOverlayWidget(this)); // FUNKY but needed to get the initial layout right\n\t}\n\n\tdispose(): void {\n\t\tthis._editor.removeOverlayWidget(this);\n\t\tthis._store.dispose();\n\t}\n\n\tgetId(): string {\n\t\treturn this._id;\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this._domNode;\n\t}\n\n\tgetPosition(): IOverlayWidgetPosition | null {\n\n\t\tconst line = this._hunkInfo.getRangesN()[0].startLineNumber;\n\t\tconst info = this._editor.getLayoutInfo();\n\t\tconst top = this._editor.getTopForLineNumber(line) - this._editor.getScrollTop();\n\t\tconst left = info.contentLeft + info.contentWidth - info.verticalScrollbarWidth;\n\n\t\tconst extraTop = this._editor.getOption(EditorOption.lineHeight) * this._extraTopLines;\n\t\tconst width = getTotalWidth(this._domNode);\n\n\t\treturn { preference: { top: top - extraTop, left: left - width } };\n\t}\n\n\tupdateExtraTop(value: number) {\n\t\tif (this._extraTopLines !== value) {\n\t\t\tthis._extraTopLines = value;\n\t\t\tthis._editor.layoutOverlayWidget(this);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["HunkAction", "edits", "viewZoneAccessor", "decorationsAccessor"]
}
