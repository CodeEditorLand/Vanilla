{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/inlineChat/browser/inlineChatNotebook.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { illegalState } from '../../../../base/common/errors.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { isEqual } from '../../../../base/common/resources.js';\nimport { ICodeEditor } from '../../../../editor/browser/editorBrowser.js';\nimport { InlineChatController } from './inlineChatController.js';\nimport { IInlineChatSessionService } from './inlineChatSessionService.js';\nimport { INotebookEditorService } from '../../notebook/browser/services/notebookEditorService.js';\nimport { CellUri } from '../../notebook/common/notebookCommon.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { NotebookTextDiffEditor } from '../../notebook/browser/diff/notebookDiffEditor.js';\nimport { NotebookMultiTextDiffEditor } from '../../notebook/browser/diff/notebookMultiDiffEditor.js';\n\nexport class InlineChatNotebookContribution {\n\n\tprivate readonly _store = new DisposableStore();\n\n\tconstructor(\n\t\t@IInlineChatSessionService sessionService: IInlineChatSessionService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@INotebookEditorService notebookEditorService: INotebookEditorService,\n\t) {\n\n\t\tthis._store.add(sessionService.registerSessionKeyComputer(Schemas.vscodeNotebookCell, {\n\t\t\tgetComparisonKey: (editor, uri) => {\n\t\t\t\tconst data = CellUri.parse(uri);\n\t\t\t\tif (!data) {\n\t\t\t\t\tthrow illegalState('Expected notebook cell uri');\n\t\t\t\t}\n\t\t\t\tlet fallback: string | undefined;\n\t\t\t\tfor (const notebookEditor of notebookEditorService.listNotebookEditors()) {\n\t\t\t\t\tif (notebookEditor.hasModel() && isEqual(notebookEditor.textModel.uri, data.notebook)) {\n\n\t\t\t\t\t\tconst candidate = `<notebook>${notebookEditor.getId()}#${uri}`;\n\n\t\t\t\t\t\tif (!fallback) {\n\t\t\t\t\t\t\tfallback = candidate;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the code editor in the list of cell-code editors\n\t\t\t\t\t\tif (notebookEditor.codeEditors.find((tuple) => tuple[1] === editor)) {\n\t\t\t\t\t\t\treturn candidate;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// \t// reveal cell and try to find code editor again\n\t\t\t\t\t\t// \tconst cell = notebookEditor.getCellByHandle(data.handle);\n\t\t\t\t\t\t// \tif (cell) {\n\t\t\t\t\t\t// \t\tnotebookEditor.revealInViewAtTop(cell);\n\t\t\t\t\t\t// \t\tif (notebookEditor.codeEditors.find((tuple) => tuple[1] === editor)) {\n\t\t\t\t\t\t// \t\t\treturn candidate;\n\t\t\t\t\t\t// \t\t}\n\t\t\t\t\t\t// \t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (fallback) {\n\t\t\t\t\treturn fallback;\n\t\t\t\t}\n\n\t\t\t\tconst activeEditor = editorService.activeEditorPane;\n\t\t\t\tif (activeEditor && (activeEditor.getId() === NotebookTextDiffEditor.ID || activeEditor.getId() === NotebookMultiTextDiffEditor.ID)) {\n\t\t\t\t\treturn `<notebook>${editor.getId()}#${uri}`;\n\t\t\t\t}\n\n\t\t\t\tthrow illegalState('Expected notebook editor');\n\t\t\t}\n\t\t}));\n\n\t\tthis._store.add(sessionService.onWillStartSession(newSessionEditor => {\n\t\t\tconst candidate = CellUri.parse(newSessionEditor.getModel().uri);\n\t\t\tif (!candidate) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfor (const notebookEditor of notebookEditorService.listNotebookEditors()) {\n\t\t\t\tif (isEqual(notebookEditor.textModel?.uri, candidate.notebook)) {\n\t\t\t\t\tlet found = false;\n\t\t\t\t\tconst editors: ICodeEditor[] = [];\n\t\t\t\t\tfor (const [, codeEditor] of notebookEditor.codeEditors) {\n\t\t\t\t\t\teditors.push(codeEditor);\n\t\t\t\t\t\tfound = codeEditor === newSessionEditor || found;\n\t\t\t\t\t}\n\t\t\t\t\tif (found) {\n\t\t\t\t\t\t// found the this editor in the outer notebook editor -> make sure to\n\t\t\t\t\t\t// cancel all sibling sessions\n\t\t\t\t\t\tfor (const editor of editors) {\n\t\t\t\t\t\t\tif (editor !== newSessionEditor) {\n\t\t\t\t\t\t\t\tInlineChatController.get(editor)?.finishExistingSession();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tdispose(): void {\n\t\tthis._store.dispose();\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,oBAAoB;AAC7B,SAAS,uBAAuB;AAChC,SAAS,eAAe;AACxB,SAAS,eAAe;AACxB,SAAS,mBAAmB;AAC5B,SAAS,4BAA4B;AACrC,SAAS,iCAAiC;AAC1C,SAAS,8BAA8B;AACvC,SAAS,eAAe;AACxB,SAAS,sBAAsB;AAC/B,SAAS,8BAA8B;AACvC,SAAS,mCAAmC;AAErC,IAAM,iCAAN,MAAqC;AAAA,EAlB5C,OAkB4C;AAAA;AAAA;AAAA,EAE1B,SAAS,IAAI,gBAAgB;AAAA,EAE9C,YAC4B,gBACX,eACQ,uBACvB;AAED,SAAK,OAAO,IAAI,eAAe,2BAA2B,QAAQ,oBAAoB;AAAA,MACrF,kBAAkB,wBAAC,QAAQ,QAAQ;AAClC,cAAM,OAAO,QAAQ,MAAM,GAAG;AAC9B,YAAI,CAAC,MAAM;AACV,gBAAM,aAAa,4BAA4B;AAAA,QAChD;AACA,YAAI;AACJ,mBAAW,kBAAkB,sBAAsB,oBAAoB,GAAG;AACzE,cAAI,eAAe,SAAS,KAAK,QAAQ,eAAe,UAAU,KAAK,KAAK,QAAQ,GAAG;AAEtF,kBAAM,YAAY,aAAa,eAAe,MAAM,CAAC,IAAI,GAAG;AAE5D,gBAAI,CAAC,UAAU;AACd,yBAAW;AAAA,YACZ;AAGA,gBAAI,eAAe,YAAY,KAAK,CAAC,UAAU,MAAM,CAAC,MAAM,MAAM,GAAG;AACpE,qBAAO;AAAA,YACR;AAAA,UAUD;AAAA,QACD;AAEA,YAAI,UAAU;AACb,iBAAO;AAAA,QACR;AAEA,cAAM,eAAe,cAAc;AACnC,YAAI,iBAAiB,aAAa,MAAM,MAAM,uBAAuB,MAAM,aAAa,MAAM,MAAM,4BAA4B,KAAK;AACpI,iBAAO,aAAa,OAAO,MAAM,CAAC,IAAI,GAAG;AAAA,QAC1C;AAEA,cAAM,aAAa,0BAA0B;AAAA,MAC9C,GAzCkB;AAAA,IA0CnB,CAAC,CAAC;AAEF,SAAK,OAAO,IAAI,eAAe,mBAAmB,sBAAoB;AACrE,YAAM,YAAY,QAAQ,MAAM,iBAAiB,SAAS,EAAE,GAAG;AAC/D,UAAI,CAAC,WAAW;AACf;AAAA,MACD;AACA,iBAAW,kBAAkB,sBAAsB,oBAAoB,GAAG;AACzE,YAAI,QAAQ,eAAe,WAAW,KAAK,UAAU,QAAQ,GAAG;AAC/D,cAAI,QAAQ;AACZ,gBAAM,UAAyB,CAAC;AAChC,qBAAW,CAAC,EAAE,UAAU,KAAK,eAAe,aAAa;AACxD,oBAAQ,KAAK,UAAU;AACvB,oBAAQ,eAAe,oBAAoB;AAAA,UAC5C;AACA,cAAI,OAAO;AAGV,uBAAW,UAAU,SAAS;AAC7B,kBAAI,WAAW,kBAAkB;AAChC,qCAAqB,IAAI,MAAM,GAAG,sBAAsB;AAAA,cACzD;AAAA,YACD;AACA;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAAA,EACH;AAAA,EAEA,UAAgB;AACf,SAAK,OAAO,QAAQ;AAAA,EACrB;AACD;AAtFa,iCAAN;AAAA,EAKJ;AAAA,EACA;AAAA,EACA;AAAA,GAPU;",
  "names": []
}
