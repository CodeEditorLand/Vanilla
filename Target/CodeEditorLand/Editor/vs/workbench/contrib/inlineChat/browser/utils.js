import{EditOperation as c}from"../../../../editor/common/core/editOperation.js";import"../../../../editor/common/core/range.js";import{TrackedRangeStickiness as p}from"../../../../editor/common/model.js";import"./inlineChatStrategies.js";import"../../../../platform/progress/common/progress.js";import{AsyncIterableSource as g}from"../../../../base/common/async.js";import"../../../../base/common/cancellation.js";import{getNWords as f}from"../../chat/common/chatWordCounter.js";async function D(e,i,o,s){const[n]=e.deltaDecorations([],[{range:i.range,options:{description:"asyncTextEdit",stickiness:p.AlwaysGrowsWhenTypingAtEdges}}]);let r=!0;for await(const a of i.newText){if(e.isDisposed())break;const t=e.getDecorationRange(n);if(!t)throw new Error("FAILED to perform async replace edit because the anchor decoration was removed");const l=r?c.replace(t,a):c.insert(t.getEndPosition(),a);s?.start(),e.pushEditOperations(null,[l],d=>(o?.report(d),null)),s?.stop(),r=!1}}function S(e,i,o,s){o=Math.max(30,o);const n=new g;let r=i.text??"";e.cancelAndSet(()=>{if(s.isCancellationRequested)return;const t=f(r,1);n.emitOne(t.value),r=r.substring(t.value.length),t.isFullString&&(e.cancel(),n.resolve(),a.dispose())},1e3/o);const a=s.onCancellationRequested(()=>{e.cancel(),n.resolve(),a.dispose()});return{range:i.range,newText:n.asyncIterable}}export{S as asProgressiveEdit,D as performAsyncTextEdit};
