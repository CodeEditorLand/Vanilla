import{AsyncIterableSource as d}from"../../../../base/common/async.js";import{EditOperation as c}from"../../../../editor/common/core/editOperation.js";import{TrackedRangeStickiness as g}from"../../../../editor/common/model.js";import{getNWords as m}from"../../chat/common/chatWordCounter.js";async function E(e,o,i,s){const[r]=e.deltaDecorations([],[{range:o.range,options:{description:"asyncTextEdit",stickiness:g.AlwaysGrowsWhenTypingAtEdges}}]);let n=!0;for await(const a of o.newText){if(e.isDisposed())break;const t=e.getDecorationRange(r);if(!t)throw new Error("FAILED to perform async replace edit because the anchor decoration was removed");const p=n?c.replace(t,a):c.insert(t.getEndPosition(),a);s?.start(),e.pushEditOperations(null,[p],l=>(i?.report(l),null)),s?.stop(),n=!1}}function T(e,o,i,s){i=Math.max(30,i);const r=new d;let n=o.text??"";e.cancelAndSet(()=>{if(s.isCancellationRequested)return;const t=m(n,1);r.emitOne(t.value),n=n.substring(t.value.length),t.isFullString&&(e.cancel(),r.resolve(),a.dispose())},1e3/i);const a=s.onCancellationRequested(()=>{e.cancel(),r.resolve(),a.dispose()});return{range:o.range,newText:r.asyncIterable}}export{T as asProgressiveEdit,E as performAsyncTextEdit};
