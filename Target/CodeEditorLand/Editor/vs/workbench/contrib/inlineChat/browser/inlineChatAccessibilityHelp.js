import"../../../../../vs/editor/browser/editorExtensions.js";import{ICodeEditorService as r}from"../../../../../vs/editor/browser/services/codeEditorService.js";import{AccessibleViewType as o}from"../../../../../vs/platform/accessibility/browser/accessibleView.js";import"../../../../../vs/platform/accessibility/browser/accessibleViewRegistry.js";import{ContextKeyExpr as t}from"../../../../../vs/platform/contextkey/common/contextkey.js";import{getChatAccessibilityHelpProvider as m}from"../../../../../vs/workbench/contrib/chat/browser/actions/chatAccessibilityHelp.js";import{CONTEXT_CHAT_INPUT_HAS_FOCUS as n}from"../../../../../vs/workbench/contrib/chat/common/chatContextKeys.js";import{CTX_INLINE_CHAT_RESPONSE_FOCUSED as l}from"../../../../../vs/workbench/contrib/inlineChat/common/inlineChat.js";class S{priority=106;name="inlineChat";type=o.Help;when=t.or(l,n);getProvider(e){const i=e.get(r).getActiveCodeEditor()||e.get(r).getFocusedCodeEditor();if(i)return m(e,i,"inlineChat")}}export{S as InlineChatAccessibilityHelp};
