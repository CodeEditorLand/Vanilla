var v=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var g=(n,t,i,e)=>{for(var o=e>1?void 0:e?C(t,i):t,r=n.length-1,s;r>=0;r--)(s=n[r])&&(o=(e?s(t,i,o):s(o))||o);return e&&o&&v(t,i,o),o},d=(n,t)=>(i,e)=>t(i,e,n);import"vs/css!./media/inlineChatContentWidget";import*as p from"../../../../../vs/base/browser/dom.js";import{Emitter as I}from"../../../../../vs/base/common/event.js";import{DisposableStore as w}from"../../../../../vs/base/common/lifecycle.js";import{ContentWidgetPositionPreference as _}from"../../../../../vs/editor/browser/editorBrowser.js";import{EditorOption as b}from"../../../../../vs/editor/common/config/editorOptions.js";import"../../../../../vs/editor/common/core/dimension.js";import{Position as E}from"../../../../../vs/editor/common/core/position.js";import{Range as N}from"../../../../../vs/editor/common/core/range.js";import{ScrollType as y}from"../../../../../vs/editor/common/editorCommon.js";import{TextOnlyMenuEntryActionViewItem as M}from"../../../../../vs/platform/actions/browser/menuEntryActionViewItem.js";import{MenuWorkbenchToolBar as S}from"../../../../../vs/platform/actions/browser/toolbar.js";import{MenuId as W,MenuItemAction as D}from"../../../../../vs/platform/actions/common/actions.js";import{IConfigurationService as x}from"../../../../../vs/platform/configuration/common/configuration.js";import{IContextKeyService as f}from"../../../../../vs/platform/contextkey/common/contextkey.js";import{IInstantiationService as B}from"../../../../../vs/platform/instantiation/common/instantiation.js";import{ServiceCollection as O}from"../../../../../vs/platform/instantiation/common/serviceCollection.js";import{IQuickInputService as P}from"../../../../../vs/platform/quickinput/common/quickInput.js";import{editorBackground as k,editorForeground as T,inputBackground as V}from"../../../../../vs/platform/theme/common/colorRegistry.js";import{ChatWidget as L}from"../../../../../vs/workbench/contrib/chat/browser/chatWidget.js";import{ChatAgentLocation as H}from"../../../../../vs/workbench/contrib/chat/common/chatAgents.js";import{ChatModel as A}from"../../../../../vs/workbench/contrib/chat/common/chatModel.js";import"../../../../../vs/workbench/contrib/inlineChat/browser/inlineChatSession.js";import{inlineChatBackground as F,MENU_INLINE_CHAT_CONTENT_STATUS as R}from"../../../../../vs/workbench/contrib/inlineChat/common/inlineChat.js";let a=class{constructor(t,i,e,o,r,s){this._editor=i;this._defaultChatModel=this._store.add(e.createInstance(A,void 0,H.Editor));const u=e.createChild(new O([f,this._store.add(o.createScoped(this._domNode))]),this._store);this._widget=u.createInstance(L,t,void 0,{defaultElementHeight:32,editorOverflowWidgetsDomNode:i.getOverflowWidgetsDomNode(),renderStyle:"minimal",renderInputOnTop:!0,renderFollowups:!0,supportsFileReferences:r.getValue(`chat.experimental.variables.${t.location}`)===!0,menus:{telemetrySource:"inlineChat-content",executeToolbar:W.ChatExecute},filter:h=>!1},{listForeground:T,listBackground:F,inputEditorBackground:V,resultEditorBackground:k}),this._store.add(this._widget),this._widget.render(this._inputContainer),this._widget.setModel(this._defaultChatModel,{}),this._store.add(this._widget.onDidChangeContentHeight(()=>i.layoutContentWidget(this))),this._domNode.tabIndex=-1,this._domNode.className="inline-chat-content-widget interactive-session",this._domNode.appendChild(this._inputContainer),this._toolbarContainer.classList.add("toolbar"),this._domNode.appendChild(this._toolbarContainer);const m=this._store.add(u.createInstance(S,this._toolbarContainer,R,{actionViewItemProvider:h=>h instanceof D?e.createInstance(M,h,{conversational:!0}):void 0,toolbarOptions:{primaryGroup:"0_main"},icon:!1,label:!0}));this._store.add(m.onDidChangeMenuItems(()=>{this._domNode.classList.toggle("contents",m.getItemsLength()>1)}));let l=!1;this._store.add(this._widget.inputEditor.onDidChangeModelContent(()=>{l||=this._widget.inputEditor.getModel()?.getValueLength()!==0})),this._store.add(this._widget.onDidChangeContext(()=>{l||=!0,i.layoutContentWidget(this)}));const c=p.trackFocus(this._domNode);this._store.add(c.onDidBlur(()=>{this._visible&&!l&&!s.currentQuickInput&&this._onDidBlur.fire()})),this._store.add(c)}suppressMouseDown=!1;allowEditorOverflow=!0;_store=new w;_domNode=document.createElement("div");_inputContainer=document.createElement("div");_toolbarContainer=document.createElement("div");_position;_onDidBlur=this._store.add(new I);onDidBlur=this._onDidBlur.event;_visible=!1;_focusNext=!1;_defaultChatModel;_widget;dispose(){this._store.dispose()}getId(){return"inline-chat-content-widget"}getDomNode(){return this._domNode}getPosition(){return this._position??null}beforeRender(){const t=this._widget.input.inputEditor.getOption(b.lineHeight)*5,i=this._widget.contentHeight,e=Math.min(t,i),o=400;return this._widget.layout(e,o),p.size(this._domNode,o,null),null}afterRender(){this._focusNext&&(this._focusNext=!1,this._widget.focusInput())}get chatWidget(){return this._widget}get isVisible(){return this._visible}get value(){return this._widget.inputEditor.getValue()}show(t,i){if(!this._visible){this._visible=!0,this._focusNext=!0,this._editor.revealRangeNearTopIfOutsideViewport(N.fromPositions(t),y.Immediate);const e=this._editor.getModel()?.getWordAtPosition(t);this._position={position:e?new E(t.lineNumber,e.startColumn):t,preference:[i?_.BELOW:_.ABOVE]},this._editor.addContentWidget(this),this._widget.setContext(!0),this._widget.setVisible(!0)}}hide(){this._visible&&(this._visible=!1,this._editor.removeContentWidget(this),this._widget.inputEditor.setValue(""),this._widget.saveState(),this._widget.setVisible(!1))}setSession(t){this._widget.setModel(t.chatModel,{}),this._widget.setInputPlaceholder(t.agent.description??"")}};a=g([d(2,B),d(3,f),d(4,x),d(5,P)],a);export{a as InlineChatContentWidget};
