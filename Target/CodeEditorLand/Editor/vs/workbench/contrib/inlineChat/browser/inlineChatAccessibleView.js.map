{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/inlineChat/browser/inlineChatAccessibleView.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { renderMarkdownAsPlaintext } from \"../../../../base/browser/markdownRenderer.js\";\nimport { MarkdownString } from \"../../../../base/common/htmlContent.js\";\nimport { ICodeEditorService } from \"../../../../editor/browser/services/codeEditorService.js\";\nimport {\n\tAccessibleContentProvider,\n\tAccessibleViewProviderId,\n\tAccessibleViewType,\n} from \"../../../../platform/accessibility/browser/accessibleView.js\";\nimport type { IAccessibleViewImplentation } from \"../../../../platform/accessibility/browser/accessibleViewRegistry.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { AccessibilityVerbositySettingId } from \"../../accessibility/browser/accessibilityConfiguration.js\";\nimport {\n\tCTX_INLINE_CHAT_FOCUSED,\n\tCTX_INLINE_CHAT_RESPONSE_FOCUSED,\n} from \"../common/inlineChat.js\";\nimport { InlineChatController } from \"./inlineChatController.js\";\n\nexport class InlineChatAccessibleView implements IAccessibleViewImplentation {\n\treadonly priority = 100;\n\treadonly name = \"inlineChat\";\n\treadonly when = ContextKeyExpr.or(\n\t\tCTX_INLINE_CHAT_FOCUSED,\n\t\tCTX_INLINE_CHAT_RESPONSE_FOCUSED,\n\t);\n\treadonly type = AccessibleViewType.View;\n\tgetProvider(accessor: ServicesAccessor) {\n\t\tconst codeEditorService = accessor.get(ICodeEditorService);\n\n\t\tconst editor =\n\t\t\tcodeEditorService.getActiveCodeEditor() ||\n\t\t\tcodeEditorService.getFocusedCodeEditor();\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\t\tconst controller = InlineChatController.get(editor);\n\t\tif (!controller) {\n\t\t\treturn;\n\t\t}\n\t\tconst responseContent = controller?.getMessage();\n\t\tif (!responseContent) {\n\t\t\treturn;\n\t\t}\n\t\treturn new AccessibleContentProvider(\n\t\t\tAccessibleViewProviderId.InlineChat,\n\t\t\t{ type: AccessibleViewType.View },\n\t\t\t() =>\n\t\t\t\trenderMarkdownAsPlaintext(\n\t\t\t\t\tnew MarkdownString(responseContent),\n\t\t\t\t\ttrue,\n\t\t\t\t),\n\t\t\t() => controller.focus(),\n\t\t\tAccessibilityVerbositySettingId.InlineChat,\n\t\t);\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,iCAAiC;AAC1C,SAAS,sBAAsB;AAC/B,SAAS,0BAA0B;AACnC;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAEP,SAAS,sBAAsB;AAE/B,SAAS,uCAAuC;AAChD;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,4BAA4B;AAE9B,MAAM,yBAAgE;AAAA,EAvB7E,OAuB6E;AAAA;AAAA;AAAA,EACnE,WAAW;AAAA,EACX,OAAO;AAAA,EACP,OAAO,eAAe;AAAA,IAC9B;AAAA,IACA;AAAA,EACD;AAAA,EACS,OAAO,mBAAmB;AAAA,EACnC,YAAY,UAA4B;AACvC,UAAM,oBAAoB,SAAS,IAAI,kBAAkB;AAEzD,UAAM,SACL,kBAAkB,oBAAoB,KACtC,kBAAkB,qBAAqB;AACxC,QAAI,CAAC,QAAQ;AACZ;AAAA,IACD;AACA,UAAM,aAAa,qBAAqB,IAAI,MAAM;AAClD,QAAI,CAAC,YAAY;AAChB;AAAA,IACD;AACA,UAAM,kBAAkB,YAAY,WAAW;AAC/C,QAAI,CAAC,iBAAiB;AACrB;AAAA,IACD;AACA,WAAO,IAAI;AAAA,MACV,yBAAyB;AAAA,MACzB,EAAE,MAAM,mBAAmB,KAAK;AAAA,MAChC,MACC;AAAA,QACC,IAAI,eAAe,eAAe;AAAA,QAClC;AAAA,MACD;AAAA,MACD,MAAM,WAAW,MAAM;AAAA,MACvB,gCAAgC;AAAA,IACjC;AAAA,EACD;AACD;",
  "names": []
}
