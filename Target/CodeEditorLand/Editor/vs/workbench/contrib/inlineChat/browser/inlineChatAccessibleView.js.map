{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/inlineChat/browser/inlineChatAccessibleView.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { InlineChatController } from './inlineChatController.js';\nimport { CTX_INLINE_CHAT_FOCUSED, CTX_INLINE_CHAT_RESPONSE_FOCUSED } from '../common/inlineChat.js';\nimport { ICodeEditorService } from '../../../../editor/browser/services/codeEditorService.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { AccessibleViewProviderId, AccessibleViewType, AccessibleContentProvider } from '../../../../platform/accessibility/browser/accessibleView.js';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IAccessibleViewImplentation } from '../../../../platform/accessibility/browser/accessibleViewRegistry.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { renderMarkdownAsPlaintext } from '../../../../base/browser/markdownRenderer.js';\nimport { AccessibilityVerbositySettingId } from '../../accessibility/browser/accessibilityConfiguration.js';\n\nexport class InlineChatAccessibleView implements IAccessibleViewImplentation {\n\treadonly priority = 100;\n\treadonly name = 'inlineChat';\n\treadonly when = ContextKeyExpr.or(CTX_INLINE_CHAT_FOCUSED, CTX_INLINE_CHAT_RESPONSE_FOCUSED);\n\treadonly type = AccessibleViewType.View;\n\tgetProvider(accessor: ServicesAccessor) {\n\t\tconst codeEditorService = accessor.get(ICodeEditorService);\n\n\t\tconst editor = (codeEditorService.getActiveCodeEditor() || codeEditorService.getFocusedCodeEditor());\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\t\tconst controller = InlineChatController.get(editor);\n\t\tif (!controller) {\n\t\t\treturn;\n\t\t}\n\t\tconst responseContent = controller?.getMessage();\n\t\tif (!responseContent) {\n\t\t\treturn;\n\t\t}\n\t\treturn new AccessibleContentProvider(\n\t\t\tAccessibleViewProviderId.InlineChat,\n\t\t\t{ type: AccessibleViewType.View },\n\t\t\t() => renderMarkdownAsPlaintext(new MarkdownString(responseContent), true),\n\t\t\t() => controller.focus(),\n\t\t\tAccessibilityVerbositySettingId.InlineChat\n\t\t);\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,4BAA4B;AACrC,SAAS,yBAAyB,wCAAwC;AAC1E,SAAS,0BAA0B;AACnC,SAAS,sBAAsB;AAC/B,SAAS,0BAA0B,oBAAoB,iCAAiC;AACxF,SAAS,wBAAwB;AACjC,SAAS,mCAAmC;AAC5C,SAAS,sBAAsB;AAC/B,SAAS,iCAAiC;AAC1C,SAAS,uCAAuC;AAEzC,MAAM,yBAAgE;AAAA,EAhB7E,OAgB6E;AAAA;AAAA;AAAA,EACnE,WAAW;AAAA,EACX,OAAO;AAAA,EACP,OAAO,eAAe,GAAG,yBAAyB,gCAAgC;AAAA,EAClF,OAAO,mBAAmB;AAAA,EACnC,YAAY,UAA4B;AACvC,UAAM,oBAAoB,SAAS,IAAI,kBAAkB;AAEzD,UAAM,SAAU,kBAAkB,oBAAoB,KAAK,kBAAkB,qBAAqB;AAClG,QAAI,CAAC,QAAQ;AACZ;AAAA,IACD;AACA,UAAM,aAAa,qBAAqB,IAAI,MAAM;AAClD,QAAI,CAAC,YAAY;AAChB;AAAA,IACD;AACA,UAAM,kBAAkB,YAAY,WAAW;AAC/C,QAAI,CAAC,iBAAiB;AACrB;AAAA,IACD;AACA,WAAO,IAAI;AAAA,MACV,yBAAyB;AAAA,MACzB,EAAE,MAAM,mBAAmB,KAAK;AAAA,MAChC,MAAM,0BAA0B,IAAI,eAAe,eAAe,GAAG,IAAI;AAAA,MACzE,MAAM,WAAW,MAAM;AAAA,MACvB,gCAAgC;AAAA,IACjC;AAAA,EACD;AACD;",
  "names": []
}
