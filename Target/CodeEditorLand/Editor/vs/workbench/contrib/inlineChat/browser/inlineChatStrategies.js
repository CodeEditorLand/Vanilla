var ee=Object.defineProperty;var te=Object.getOwnPropertyDescriptor;var I=(u,r,i,e)=>{for(var t=e>1?void 0:e?te(r,i):r,o=u.length-1,s;o>=0;o--)(s=u[o])&&(t=(e?s(r,i,t):s(t))||t);return e&&t&&ee(r,i,t),t},l=(u,r)=>(i,e)=>r(i,e,u);import{getTotalWidth as ie,WindowIntervalTimer as oe}from"../../../../../vs/base/browser/dom.js";import{coalesceInPlace as ne}from"../../../../../vs/base/common/arrays.js";import"../../../../../vs/base/common/cancellation.js";import{Emitter as R,Event as M}from"../../../../../vs/base/common/event.js";import{Iterable as Z}from"../../../../../vs/base/common/iterator.js";import{DisposableStore as W}from"../../../../../vs/base/common/lifecycle.js";import{Schemas as se}from"../../../../../vs/base/common/network.js";import{isEqual as re}from"../../../../../vs/base/common/resources.js";import{themeColorFromId as z}from"../../../../../vs/base/common/themables.js";import{assertType as F}from"../../../../../vs/base/common/types.js";import{generateUuid as ae}from"../../../../../vs/base/common/uuid.js";import"../../../../../vs/editor/browser/editorBrowser.js";import{StableEditorScrollState as de}from"../../../../../vs/editor/browser/stableEditorScroll.js";import{LineSource as ce,renderLines as le,RenderOptions as he}from"../../../../../vs/editor/browser/widget/diffEditor/components/diffEditorViewZones/renderLines.js";import{EditorOption as pe}from"../../../../../vs/editor/common/config/editorOptions.js";import"../../../../../vs/editor/common/core/editOperation.js";import{LineRange as A}from"../../../../../vs/editor/common/core/lineRange.js";import"../../../../../vs/editor/common/core/position.js";import{Range as V}from"../../../../../vs/editor/common/core/range.js";import"../../../../../vs/editor/common/editorCommon.js";import{MinimapPosition as ue,OverviewRulerLane as fe,TrackedRangeStickiness as ge}from"../../../../../vs/editor/common/model.js";import{ModelDecorationOptions as L}from"../../../../../vs/editor/common/model/textModel.js";import{IEditorWorkerService as me}from"../../../../../vs/editor/common/services/editorWorker.js";import{IModelService as ve}from"../../../../../vs/editor/common/services/model.js";import{InlineDecoration as _e,InlineDecorationType as De}from"../../../../../vs/editor/common/viewModel.js";import{localize as v}from"../../../../../vs/nls.js";import{IAccessibilityService as Ie}from"../../../../../vs/platform/accessibility/common/accessibility.js";import{MenuWorkbenchButtonBar as ye}from"../../../../../vs/platform/actions/browser/buttonbar.js";import{IConfigurationService as Ce}from"../../../../../vs/platform/configuration/common/configuration.js";import{IContextKeyService as B}from"../../../../../vs/platform/contextkey/common/contextkey.js";import{IInstantiationService as b}from"../../../../../vs/platform/instantiation/common/instantiation.js";import{Progress as be}from"../../../../../vs/platform/progress/common/progress.js";import{SaveReason as ke}from"../../../../../vs/workbench/common/editor.js";import{DefaultChatTextEditor as Se}from"../../../../../vs/workbench/contrib/chat/browser/codeBlockPart.js";import{countWords as we}from"../../../../../vs/workbench/contrib/chat/common/chatWordCounter.js";import{HunkState as _}from"../../../../../vs/workbench/contrib/inlineChat/browser/inlineChatSession.js";import{CTX_INLINE_CHAT_CHANGE_HAS_DIFF as Ee,CTX_INLINE_CHAT_CHANGE_SHOWS_DIFF as xe,CTX_INLINE_CHAT_DOCUMENT_CHANGED as Ne,InlineChatConfigKeys as U,MENU_INLINE_CHAT_ZONE as Te,minimapInlineChatDiffInserted as Ae,overviewRulerInlineChatDiffInserted as Le}from"../../../../../vs/workbench/contrib/inlineChat/common/inlineChat.js";import{ITextFileService as O}from"../../../../../vs/workbench/services/textfile/common/textfiles.js";import"../../../../../vs/workbench/services/untitled/common/untitledTextEditorModel.js";import"./inlineChatZoneWidget.js";import{asProgressiveEdit as Oe,performAsyncTextEdit as He}from"./utils.js";var Pe=(o=>(o[o.Accept=0]="Accept",o[o.Discard=1]="Discard",o[o.MoveNext=2]="MoveNext",o[o.MovePrev=3]="MovePrev",o[o.ToggleDiff=4]="ToggleDiff",o))(Pe||{});let f=class{constructor(r,i,e,t,o){this._session=r;this._editor=i;this._zone=e;this._textFileService=t;this._instaService=o}static _decoBlock=L.register({description:"inline-chat",showIfCollapsed:!1,isWholeLine:!0});_store=new W;_onDidAccept=this._store.add(new R);_onDidDiscard=this._store.add(new R);onDidAccept=this._onDidAccept.event;onDidDiscard=this._onDidDiscard.event;dispose(){this._store.dispose()}performHunkAction(r,i){i===0?this._onDidAccept.fire():i===1&&this._onDidDiscard.fire()}async _doApplyChanges(r){const i=[],e=this._instaService.createInstance(Se);for(const t of this._session.chatModel.getRequests())if(t.response?.response){for(const o of t.response.response.value)if(o.kind==="textEditGroup"&&!(r&&re(o.uri,this._session.textModelN.uri))&&(await e.apply(t.response,o,void 0),o.uri.scheme===se.untitled)){const s=this._textFileService.untitled.get(o.uri);s&&i.push(s)}}for(const t of i)t.isDisposed()||(await t.resolve(),await t.save({reason:ke.EXPLICIT}))}cancel(){return this._session.hunkData.discardAll()}getWholeRangeDecoration(){const i=[this._session.wholeRange.value].map(e=>e.isEmpty()?void 0:{range:e,options:f._decoBlock});return ne(i),i}};f=I([l(3,O),l(4,b)],f);let k=class extends f{_ctxDocumentChanged;constructor(r,i,e,t,o,s,n){super(r,i,e,s,n),this._ctxDocumentChanged=Ne.bindTo(o);const a=t.getModel(r.targetUri);M.debounce(a.onDidChangeContent.bind(a),()=>{},350)(d=>{!a.isDisposed()&&!r.textModel0.isDisposed()&&this._ctxDocumentChanged.set(r.hasChangedText)},void 0,this._store)}dispose(){this._ctxDocumentChanged.reset(),super.dispose()}async apply(){await super._doApplyChanges(!1)}async makeChanges(){}async makeProgressiveChanges(){}async renderChanges(){}hasFocus(){return this._zone.widget.hasFocus()}};k=I([l(3,ve),l(4,B),l(5,O),l(6,b)],k);let S=class extends f{constructor(i,e,t,o,s,n,a,d,h,c){super(i,e,t,h,c);this._showOverlayToolbar=o;this._editorWorkerService=n;this._accessibilityService=a;this._configService=d;this._ctxCurrentChangeHasDiff=Ee.bindTo(s),this._ctxCurrentChangeShowsDiff=xe.bindTo(s),this._progressiveEditingDecorations=this._editor.createDecorationsCollection()}_decoInsertedText=L.register({description:"inline-modified-line",className:"inline-chat-inserted-range-linehighlight",isWholeLine:!0,overviewRuler:{position:fe.Full,color:z(Le)},minimap:{position:ue.Inline,color:z(Ae)}});_decoInsertedTextRange=L.register({description:"inline-chat-inserted-range-linehighlight",className:"inline-chat-inserted-range",stickiness:ge.NeverGrowsWhenTypingAtEdges});_ctxCurrentChangeHasDiff;_ctxCurrentChangeShowsDiff;_progressiveEditingDecorations;_editCount=0;dispose(){this._resetDiff(),super.dispose()}_resetDiff(){this._ctxCurrentChangeHasDiff.reset(),this._ctxCurrentChangeShowsDiff.reset(),this._zone.widget.updateStatus(""),this._progressiveEditingDecorations.clear();for(const i of this._hunkDisplayData.values())i.remove()}async apply(){this._resetDiff(),this._editCount>0&&this._editor.pushUndoStop(),await super._doApplyChanges(!0)}cancel(){return this._resetDiff(),super.cancel()}async makeChanges(i,e,t){return this._makeChanges(i,e,void 0,void 0,t)}async makeProgressiveChanges(i,e,t,o){const s=new be(n=>{const a=new Set;for(const c of n)A.fromRange(c.range).forEach(D=>a.add(D));const d=this._progressiveEditingDecorations.getRanges().map(A.fromRange);for(const c of d)c.forEach(D=>a.delete(D));const h=[];for(const c of a)h.push({range:new V(c,1,c,Number.MAX_VALUE),options:this._decoInsertedText});this._progressiveEditingDecorations.append(h)});return this._makeChanges(i,e,t,s,o)}async _makeChanges(i,e,t,o,s){if(s&&this._editor.pushUndoStop(),this._editCount++,t){const n=t.duration/1e3;for(const a of i){const h=we(a.text??"")/n,c=Oe(new oe(this._zone.domNode),a,h,t.token);await He(this._session.textModelN,c,o,e)}}else e.start(),this._session.textModelN.pushEditOperations(null,i,n=>(o?.report(n),null)),e.stop()}performHunkAction(i,e){const t=this._findDisplayData(i);if(!t){e===0?this._onDidAccept.fire():e===1&&this._onDidDiscard.fire();return}e===0?t.acceptHunk():e===1?t.discardHunk():e===2?t.move(!0):e===3?t.move(!1):e===4&&t.toggleDiff?.()}_findDisplayData(i){let e;if(i&&(e=this._hunkDisplayData.get(i)),!e&&this._zone.position){const t=this._zone.position.lineNumber;let o=Number.MAX_SAFE_INTEGER;for(const s of this._hunkDisplayData.values()){if(s.hunk.getState()!==_.Pending)continue;const n=s.hunk.getRangesN(),a=t<=n[0].startLineNumber?n[0].startLineNumber-t:t-n[0].endLineNumber;a<o&&(o=a,e=s)}}return e||(e=Z.first(Z.filter(this._hunkDisplayData.values(),t=>t.hunk.getState()===_.Pending))),e}_hunkDisplayData=new Map;async renderChanges(){this._progressiveEditingDecorations.clear();const i=()=>{let e;if(H(this._editor,(t,o)=>{const s=new Set(this._hunkDisplayData.keys());e=void 0;for(const n of this._session.hunkData.getInfo()){s.delete(n);const a=n.getRangesN();let d=this._hunkDisplayData.get(n);if(d)if(n.getState()!==_.Pending)d.remove();else{const h=this._zone.position?.lineNumber??this._editor.getPosition().lineNumber,c=a[0];d.position=c.getStartPosition().delta(-1),d.distance=h<=c.startLineNumber?c.startLineNumber-h:h-c.endLineNumber}else{const h=[];for(let p=0;p<a.length;p++)h.push(t.addDecoration(a[p],p===0?this._decoInsertedText:this._decoInsertedTextRange));const c=()=>{n.acceptChanges(),i()},D=()=>{n.discardChanges(),i()},K=this._session.textModel0.mightContainNonBasicASCII(),G=this._session.textModel0.mightContainRTL(),X=he.fromEditor(this._editor),w=n.getRanges0()[0],q=new ce(A.fromRangeInclusive(w).mapToLineArray(p=>this._session.textModel0.tokenization.getLineTokens(p)),[],K,G),E=document.createElement("div");E.className="inline-chat-original-zone2";const P=le(q,X,[new _e(new V(w.startLineNumber,1,w.startLineNumber,1),"",De.Regular)],E),x={afterLineNumber:-1,heightInLines:P.heightInLines,domNode:E,ordinal:50001},$=()=>{const p=de.capture(this._editor);H(this._editor,(g,m)=>{if(F(d),d.viewZoneId)m.removeZone(d.viewZoneId),N?.updateExtraTop(0),d.viewZoneId=void 0;else{const[C]=n.getRangesN();x.afterLineNumber=C.startLineNumber-1,d.viewZoneId=m.addZone(x),N?.updateExtraTop(P.heightInLines)}}),this._ctxCurrentChangeShowsDiff.set(typeof d?.viewZoneId=="string"),p.restore(this._editor)},N=this._showOverlayToolbar?this._instaService.createInstance(y,this._editor,n):void 0,j=()=>{H(this._editor,(p,g)=>{F(d);for(const m of d.decorationIds)p.removeDecoration(m);d.viewZoneId&&g.removeZone(d.viewZoneId),d.decorationIds=[],d.viewZoneId=void 0}),N?.dispose()},J=p=>{const g=Array.from(this._hunkDisplayData.keys()),m=g.indexOf(n),C=(m+(p?1:-1)+g.length)%g.length;if(C!==m){const Y=this._hunkDisplayData.get(g[C]);this._zone.updatePositionAndHeight(Y?.position),i()}},T=this._zone.position?.lineNumber??this._editor.getPosition().lineNumber,Q=T<=a[0].startLineNumber?a[0].startLineNumber-T:T-a[0].endLineNumber;d={hunk:n,decorationIds:h,viewZoneId:"",viewZone:x,distance:Q,position:a[0].getStartPosition().delta(-1),acceptHunk:c,discardHunk:D,toggleDiff:n.isInsertion()?void 0:$,remove:j,move:J},this._hunkDisplayData.set(n,d)}n.getState()===_.Pending&&(!e||d.distance<e.distance)&&(e=d)}for(const n of s){const a=this._hunkDisplayData.get(n);a&&(this._hunkDisplayData.delete(n),a.remove())}}),e){this._zone.updatePositionAndHeight(e.position);const t=this._session.hunkData.pending;this._updateSummaryMessage(t,this._session.hunkData.size);const o=this._configService.getValue(U.AccessibleDiffView);(o==="on"||o==="auto"&&this._accessibilityService.isScreenReaderOptimized())&&this._zone.widget.showAccessibleHunk(this._session,e.hunk),this._ctxCurrentChangeHasDiff.set(!!e.toggleDiff)}else if(this._hunkDisplayData.size>0){let t=!1;for(const o of this._session.hunkData.getInfo())if(o.getState()===_.Accepted){t=!0;break}t?this._onDidAccept.fire():this._onDidDiscard.fire()}return e};return i()?.position}_updateSummaryMessage(i,e){const t=this._configService.getValue(U.AcceptedOrDiscardBeforeSave);let o;e===0?o=v("change.0","Nothing changed."):i===1?o=t?v("review.1","$(info) Accept or Discard change"):v("change.1","1 change"):o=t?v("review.N","$(info) Accept or Discard {0} changes",i):v("change.N","{0} changes",e);let s;t&&(s=v("review","Review (accept or discard) all changes before continuing")),this._zone.widget.updateStatus(o,{title:s})}hasFocus(){return this._zone.widget.hasFocus()}getWholeRangeDecoration(){return[]}};S=I([l(4,B),l(5,me),l(6,Ie),l(7,Ce),l(8,O),l(9,b)],S);function H(u,r){u.changeDecorations(i=>{u.changeViewZones(e=>{r(i,e)})})}let y=class{constructor(r,i,e){this._editor=r;this._hunkInfo=i;this._instaService=e;if(this._domNode.classList.add("inline-chat-diff-overlay"),i.getState()===_.Pending){const t=this._store.add(this._instaService.createInstance(ye,this._domNode,Te,{menuOptions:{arg:i},telemetrySource:"inlineChat-changesZone",buttonConfigProvider:(o,s)=>({isSecondary:s>0,showIcon:!0,showLabel:!1})}));this._store.add(t.onDidChange(()=>this._editor.layoutOverlayWidget(this)))}this._editor.addOverlayWidget(this),this._store.add(M.any(this._editor.onDidLayoutChange,this._editor.onDidScrollChange)(()=>this._editor.layoutOverlayWidget(this))),queueMicrotask(()=>this._editor.layoutOverlayWidget(this))}allowEditorOverflow=!1;_id="inline-chat-diff-overlay-"+ae();_domNode=document.createElement("div");_store=new W;_extraTopLines=0;dispose(){this._editor.removeOverlayWidget(this),this._store.dispose()}getId(){return this._id}getDomNode(){return this._domNode}getPosition(){const r=this._hunkInfo.getRangesN()[0].startLineNumber,i=this._editor.getLayoutInfo(),e=this._editor.getTopForLineNumber(r)-this._editor.getScrollTop(),t=i.contentLeft+i.contentWidth-i.verticalScrollbarWidth,o=this._editor.getOption(pe.lineHeight)*this._extraTopLines,s=ie(this._domNode);return{preference:{top:e-o,left:t-s}}}updateExtraTop(r){this._extraTopLines!==r&&(this._extraTopLines=r,this._editor.layoutOverlayWidget(this))}};y=I([l(2,b)],y);export{f as EditModeStrategy,Pe as HunkAction,S as LiveStrategy,k as PreviewStrategy};
