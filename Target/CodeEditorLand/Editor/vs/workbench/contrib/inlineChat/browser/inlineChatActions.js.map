{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/inlineChat/browser/inlineChatActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { KeyChord, KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport {\n\ttype ICodeEditor,\n\tisCodeEditor,\n\tisDiffEditor,\n} from \"../../../../editor/browser/editorBrowser.js\";\nimport { EditorAction2 } from \"../../../../editor/browser/editorExtensions.js\";\nimport { ICodeEditorService } from \"../../../../editor/browser/services/codeEditorService.js\";\nimport { EmbeddedCodeEditorWidget } from \"../../../../editor/browser/widget/codeEditor/embeddedCodeEditorWidget.js\";\nimport { EmbeddedDiffEditorWidget } from \"../../../../editor/browser/widget/diffEditor/embeddedDiffEditorWidget.js\";\nimport { EditorContextKeys } from \"../../../../editor/common/editorContextKeys.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport { CONTEXT_ACCESSIBILITY_MODE_ENABLED } from \"../../../../platform/accessibility/common/accessibility.js\";\nimport type {\n\tAction2,\n\tIAction2Options,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { CommandsRegistry } from \"../../../../platform/commands/common/commands.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { registerIcon } from \"../../../../platform/theme/common/iconRegistry.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { IPreferencesService } from \"../../../services/preferences/common/preferences.js\";\nimport {\n\tCONTEXT_CHAT_INPUT_HAS_TEXT,\n\tCONTEXT_IN_CHAT_INPUT,\n} from \"../../chat/common/chatContextKeys.js\";\nimport { IChatService } from \"../../chat/common/chatService.js\";\nimport {\n\tACTION_ACCEPT_CHANGES,\n\tACTION_DISCARD_CHANGES,\n\tACTION_REGENERATE_RESPONSE,\n\tACTION_TOGGLE_DIFF,\n\tACTION_VIEW_IN_CHAT,\n\tCTX_INLINE_CHAT_CHANGE_HAS_DIFF,\n\tCTX_INLINE_CHAT_CHANGE_SHOWS_DIFF,\n\tCTX_INLINE_CHAT_DOCUMENT_CHANGED,\n\tCTX_INLINE_CHAT_EDIT_MODE,\n\tCTX_INLINE_CHAT_FOCUSED,\n\tCTX_INLINE_CHAT_HAS_AGENT,\n\tCTX_INLINE_CHAT_HAS_STASHED_SESSION,\n\tCTX_INLINE_CHAT_INNER_CURSOR_FIRST,\n\tCTX_INLINE_CHAT_INNER_CURSOR_LAST,\n\tCTX_INLINE_CHAT_OUTER_CURSOR_POSITION,\n\tCTX_INLINE_CHAT_REQUEST_IN_PROGRESS,\n\tCTX_INLINE_CHAT_RESPONSE_TYPE,\n\tCTX_INLINE_CHAT_USER_DID_EDIT,\n\tCTX_INLINE_CHAT_VISIBLE,\n\tEditMode,\n\tInlineChatResponseType,\n\tMENU_INLINE_CHAT_WIDGET_STATUS,\n\tMENU_INLINE_CHAT_ZONE,\n} from \"../common/inlineChat.js\";\nimport {\n\tInlineChatController,\n\tInlineChatRunOptions,\n} from \"./inlineChatController.js\";\nimport type { HunkInformation } from \"./inlineChatSession.js\";\n\nCommandsRegistry.registerCommandAlias(\n\t\"interactiveEditor.start\",\n\t\"inlineChat.start\",\n);\nCommandsRegistry.registerCommandAlias(\n\t\"interactive.acceptChanges\",\n\tACTION_ACCEPT_CHANGES,\n);\n\nexport const LOCALIZED_START_INLINE_CHAT_STRING = localize2(\n\t\"run\",\n\t\"Start in Editor\",\n);\nexport const START_INLINE_CHAT = registerIcon(\n\t\"start-inline-chat\",\n\tCodicon.sparkle,\n\tlocalize(\n\t\t\"startInlineChat\",\n\t\t\"Icon which spawns the inline chat from the editor toolbar.\",\n\t),\n);\n\n// some gymnastics to enable hold for speech without moving the StartSessionAction into the electron-layer\n\nexport interface IHoldForSpeech {\n\t(\n\t\taccessor: ServicesAccessor,\n\t\tcontroller: InlineChatController,\n\t\tsource: Action2,\n\t): void;\n}\nlet _holdForSpeech: IHoldForSpeech | undefined;\nexport function setHoldForSpeech(holdForSpeech: IHoldForSpeech) {\n\t_holdForSpeech = holdForSpeech;\n}\n\nexport class StartSessionAction extends EditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"inlineChat.start\",\n\t\t\ttitle: LOCALIZED_START_INLINE_CHAT_STRING,\n\t\t\tcategory: AbstractInlineChatAction.category,\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tCTX_INLINE_CHAT_HAS_AGENT,\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t),\n\t\t\tkeybinding: {\n\t\t\t\twhen: EditorContextKeys.focus,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyI,\n\t\t\t\tsecondary: [\n\t\t\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyI),\n\t\t\t\t],\n\t\t\t},\n\t\t\ticon: START_INLINE_CHAT,\n\t\t});\n\t}\n\n\toverride runEditorCommand(\n\t\taccessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t\t..._args: any[]\n\t) {\n\t\tconst ctrl = InlineChatController.get(editor);\n\t\tif (!ctrl) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (_holdForSpeech) {\n\t\t\taccessor\n\t\t\t\t.get(IInstantiationService)\n\t\t\t\t.invokeFunction(_holdForSpeech, ctrl, this);\n\t\t}\n\n\t\tlet options: InlineChatRunOptions | undefined;\n\t\tconst arg = _args[0];\n\t\tif (arg && InlineChatRunOptions.isInlineChatRunOptions(arg)) {\n\t\t\toptions = arg;\n\t\t}\n\t\tInlineChatController.get(editor)?.run({ ...options });\n\t}\n}\n\nexport class UnstashSessionAction extends EditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"inlineChat.unstash\",\n\t\t\ttitle: localize2(\"unstash\", \"Resume Last Dismissed Inline Chat\"),\n\t\t\tcategory: AbstractInlineChatAction.category,\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tCTX_INLINE_CHAT_HAS_STASHED_SESSION,\n\t\t\t\tEditorContextKeys.writable,\n\t\t\t),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyZ,\n\t\t\t},\n\t\t});\n\t}\n\n\toverride async runEditorCommand(\n\t\t_accessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t\t..._args: any[]\n\t) {\n\t\tconst ctrl = InlineChatController.get(editor);\n\t\tif (ctrl) {\n\t\t\tconst session = ctrl.unstashLastSession();\n\t\t\tif (session) {\n\t\t\t\tctrl.run({\n\t\t\t\t\texistingSession: session,\n\t\t\t\t\tisUnstashed: true,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport abstract class AbstractInlineChatAction extends EditorAction2 {\n\tstatic readonly category = localize2(\"cat\", \"Inline Chat\");\n\n\tconstructor(desc: IAction2Options) {\n\t\tsuper({\n\t\t\t...desc,\n\t\t\tcategory: AbstractInlineChatAction.category,\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tCTX_INLINE_CHAT_HAS_AGENT,\n\t\t\t\tdesc.precondition,\n\t\t\t),\n\t\t});\n\t}\n\n\toverride runEditorCommand(\n\t\taccessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t\t..._args: any[]\n\t) {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst logService = accessor.get(ILogService);\n\n\t\tlet ctrl = InlineChatController.get(editor);\n\t\tif (!ctrl) {\n\t\t\tconst { activeTextEditorControl } = editorService;\n\t\t\tif (isCodeEditor(activeTextEditorControl)) {\n\t\t\t\teditor = activeTextEditorControl;\n\t\t\t} else if (isDiffEditor(activeTextEditorControl)) {\n\t\t\t\teditor = activeTextEditorControl.getModifiedEditor();\n\t\t\t}\n\t\t\tctrl = InlineChatController.get(editor);\n\t\t}\n\n\t\tif (!ctrl) {\n\t\t\tlogService.warn(\n\t\t\t\t\"[IE] NO controller found for action\",\n\t\t\t\tthis.desc.id,\n\t\t\t\teditor.getModel()?.uri,\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tif (editor instanceof EmbeddedCodeEditorWidget) {\n\t\t\teditor = editor.getParentEditor();\n\t\t}\n\t\tif (!ctrl) {\n\t\t\tfor (const diffEditor of accessor\n\t\t\t\t.get(ICodeEditorService)\n\t\t\t\t.listDiffEditors()) {\n\t\t\t\tif (\n\t\t\t\t\tdiffEditor.getOriginalEditor() === editor ||\n\t\t\t\t\tdiffEditor.getModifiedEditor() === editor\n\t\t\t\t) {\n\t\t\t\t\tif (diffEditor instanceof EmbeddedDiffEditorWidget) {\n\t\t\t\t\t\tthis.runEditorCommand(\n\t\t\t\t\t\t\taccessor,\n\t\t\t\t\t\t\tdiffEditor.getParentEditor(),\n\t\t\t\t\t\t\t..._args,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tthis.runInlineChatCommand(accessor, ctrl, editor, ..._args);\n\t}\n\n\tabstract runInlineChatCommand(\n\t\taccessor: ServicesAccessor,\n\t\tctrl: InlineChatController,\n\t\teditor: ICodeEditor,\n\t\t...args: any[]\n\t): void;\n}\n\nexport class ArrowOutUpAction extends AbstractInlineChatAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"inlineChat.arrowOutUp\",\n\t\t\ttitle: localize(\"arrowUp\", \"Cursor Up\"),\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tCTX_INLINE_CHAT_FOCUSED,\n\t\t\t\tCTX_INLINE_CHAT_INNER_CURSOR_FIRST,\n\t\t\t\tEditorContextKeys.isEmbeddedDiffEditor.negate(),\n\t\t\t\tCONTEXT_ACCESSIBILITY_MODE_ENABLED.negate(),\n\t\t\t),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.EditorCore,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.UpArrow,\n\t\t\t},\n\t\t});\n\t}\n\n\trunInlineChatCommand(\n\t\t_accessor: ServicesAccessor,\n\t\tctrl: InlineChatController,\n\t\t_editor: ICodeEditor,\n\t\t..._args: any[]\n\t): void {\n\t\tctrl.arrowOut(true);\n\t}\n}\n\nexport class ArrowOutDownAction extends AbstractInlineChatAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"inlineChat.arrowOutDown\",\n\t\t\ttitle: localize(\"arrowDown\", \"Cursor Down\"),\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tCTX_INLINE_CHAT_FOCUSED,\n\t\t\t\tCTX_INLINE_CHAT_INNER_CURSOR_LAST,\n\t\t\t\tEditorContextKeys.isEmbeddedDiffEditor.negate(),\n\t\t\t\tCONTEXT_ACCESSIBILITY_MODE_ENABLED.negate(),\n\t\t\t),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.EditorCore,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.DownArrow,\n\t\t\t},\n\t\t});\n\t}\n\n\trunInlineChatCommand(\n\t\t_accessor: ServicesAccessor,\n\t\tctrl: InlineChatController,\n\t\t_editor: ICodeEditor,\n\t\t..._args: any[]\n\t): void {\n\t\tctrl.arrowOut(false);\n\t}\n}\n\nexport class FocusInlineChat extends EditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"inlineChat.focus\",\n\t\t\ttitle: localize2(\"focus\", \"Focus Input\"),\n\t\t\tf1: true,\n\t\t\tcategory: AbstractInlineChatAction.category,\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.editorTextFocus,\n\t\t\t\tCTX_INLINE_CHAT_VISIBLE,\n\t\t\t\tCTX_INLINE_CHAT_FOCUSED.negate(),\n\t\t\t\tCONTEXT_ACCESSIBILITY_MODE_ENABLED.negate(),\n\t\t\t),\n\t\t\tkeybinding: [\n\t\t\t\t{\n\t\t\t\t\tweight: KeybindingWeight.EditorCore + 10, // win against core_command\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tCTX_INLINE_CHAT_OUTER_CURSOR_POSITION.isEqualTo(\n\t\t\t\t\t\t\t\"above\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tEditorContextKeys.isEmbeddedDiffEditor.negate(),\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.DownArrow,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tweight: KeybindingWeight.EditorCore + 10, // win against core_command\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tCTX_INLINE_CHAT_OUTER_CURSOR_POSITION.isEqualTo(\n\t\t\t\t\t\t\t\"below\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tEditorContextKeys.isEmbeddedDiffEditor.negate(),\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.UpArrow,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\toverride runEditorCommand(\n\t\t_accessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t\t..._args: any[]\n\t) {\n\t\tInlineChatController.get(editor)?.focus();\n\t}\n}\n\nexport class DiscardAction extends AbstractInlineChatAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"inlineChat.discard\",\n\t\t\ttitle: localize(\"discard\", \"Discard\"),\n\t\t\ticon: Codicon.discard,\n\t\t\tprecondition: CTX_INLINE_CHAT_VISIBLE,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib - 1,\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\twhen: CTX_INLINE_CHAT_USER_DID_EDIT.negate(),\n\t\t\t},\n\t\t});\n\t}\n\n\tasync runInlineChatCommand(\n\t\t_accessor: ServicesAccessor,\n\t\tctrl: InlineChatController,\n\t\t_editor: ICodeEditor,\n\t\t..._args: any[]\n\t): Promise<void> {\n\t\tawait ctrl.cancelSession();\n\t}\n}\n\nexport class AcceptChanges extends AbstractInlineChatAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ACTION_ACCEPT_CHANGES,\n\t\t\ttitle: localize2(\"apply1\", \"Accept Changes\"),\n\t\t\tshortTitle: localize(\"apply2\", \"Accept\"),\n\t\t\ticon: Codicon.check,\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tCTX_INLINE_CHAT_VISIBLE,\n\t\t\t\tContextKeyExpr.or(\n\t\t\t\t\tCTX_INLINE_CHAT_DOCUMENT_CHANGED.toNegated(),\n\t\t\t\t\tCTX_INLINE_CHAT_EDIT_MODE.notEqualsTo(EditMode.Preview),\n\t\t\t\t),\n\t\t\t),\n\t\t\tkeybinding: [\n\t\t\t\t{\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib + 10,\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\t\t\t\t},\n\t\t\t],\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MENU_INLINE_CHAT_WIDGET_STATUS,\n\t\t\t\t\tgroup: \"0_main\",\n\t\t\t\t\torder: 1,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tCONTEXT_CHAT_INPUT_HAS_TEXT.toNegated(),\n\t\t\t\t\t\tCTX_INLINE_CHAT_REQUEST_IN_PROGRESS.toNegated(),\n\t\t\t\t\t\tCTX_INLINE_CHAT_RESPONSE_TYPE.isEqualTo(\n\t\t\t\t\t\t\tInlineChatResponseType.MessagesAndEdits,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MENU_INLINE_CHAT_ZONE,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\torder: 1,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\toverride async runInlineChatCommand(\n\t\t_accessor: ServicesAccessor,\n\t\tctrl: InlineChatController,\n\t\t_editor: ICodeEditor,\n\t\thunk?: HunkInformation | any,\n\t): Promise<void> {\n\t\tctrl.acceptHunk(hunk);\n\t}\n}\n\nexport class DiscardHunkAction extends AbstractInlineChatAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ACTION_DISCARD_CHANGES,\n\t\t\ttitle: localize(\"discard\", \"Discard\"),\n\t\t\ticon: Codicon.chromeClose,\n\t\t\tprecondition: CTX_INLINE_CHAT_VISIBLE,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MENU_INLINE_CHAT_WIDGET_STATUS,\n\t\t\t\t\tgroup: \"0_main\",\n\t\t\t\t\torder: 2,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tCONTEXT_CHAT_INPUT_HAS_TEXT.toNegated(),\n\t\t\t\t\t\tCTX_INLINE_CHAT_REQUEST_IN_PROGRESS.negate(),\n\t\t\t\t\t\tCTX_INLINE_CHAT_RESPONSE_TYPE.isEqualTo(\n\t\t\t\t\t\t\tInlineChatResponseType.MessagesAndEdits,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tCTX_INLINE_CHAT_EDIT_MODE.isEqualTo(EditMode.Live),\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MENU_INLINE_CHAT_ZONE,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\torder: 2,\n\t\t\t\t},\n\t\t\t],\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\twhen: CTX_INLINE_CHAT_RESPONSE_TYPE.isEqualTo(\n\t\t\t\t\tInlineChatResponseType.MessagesAndEdits,\n\t\t\t\t),\n\t\t\t},\n\t\t});\n\t}\n\n\tasync runInlineChatCommand(\n\t\t_accessor: ServicesAccessor,\n\t\tctrl: InlineChatController,\n\t\t_editor: ICodeEditor,\n\t\thunk?: HunkInformation | any,\n\t): Promise<void> {\n\t\treturn ctrl.discardHunk(hunk);\n\t}\n}\n\nexport class RerunAction extends AbstractInlineChatAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ACTION_REGENERATE_RESPONSE,\n\t\t\ttitle: localize2(\"chat.rerun.label\", \"Rerun Request\"),\n\t\t\tshortTitle: localize(\"rerun\", \"Rerun\"),\n\t\t\tf1: false,\n\t\t\ticon: Codicon.refresh,\n\t\t\tprecondition: CTX_INLINE_CHAT_VISIBLE,\n\t\t\tmenu: {\n\t\t\t\tid: MENU_INLINE_CHAT_WIDGET_STATUS,\n\t\t\t\tgroup: \"0_main\",\n\t\t\t\torder: 5,\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tCONTEXT_CHAT_INPUT_HAS_TEXT.toNegated(),\n\t\t\t\t\tCTX_INLINE_CHAT_REQUEST_IN_PROGRESS.negate(),\n\t\t\t\t\tCTX_INLINE_CHAT_RESPONSE_TYPE.notEqualsTo(\n\t\t\t\t\t\tInlineChatResponseType.None,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t},\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyR,\n\t\t\t},\n\t\t});\n\t}\n\n\toverride async runInlineChatCommand(\n\t\taccessor: ServicesAccessor,\n\t\tctrl: InlineChatController,\n\t\t_editor: ICodeEditor,\n\t\t..._args: any[]\n\t): Promise<void> {\n\t\tconst chatService = accessor.get(IChatService);\n\t\tconst model = ctrl.chatWidget.viewModel?.model;\n\n\t\tconst lastRequest = model?.getRequests().at(-1);\n\t\tif (lastRequest) {\n\t\t\tawait chatService.resendRequest(lastRequest, {\n\t\t\t\tnoCommandDetection: false,\n\t\t\t\tattempt: lastRequest.attempt + 1,\n\t\t\t\tlocation: ctrl.chatWidget.location,\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport class CloseAction extends AbstractInlineChatAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"inlineChat.close\",\n\t\t\ttitle: localize(\"close\", \"Close\"),\n\t\t\ticon: Codicon.close,\n\t\t\tprecondition: CTX_INLINE_CHAT_VISIBLE,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t},\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MENU_INLINE_CHAT_WIDGET_STATUS,\n\t\t\t\t\tgroup: \"0_main\",\n\t\t\t\t\torder: 1,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tCTX_INLINE_CHAT_REQUEST_IN_PROGRESS.negate(),\n\t\t\t\t\t\tContextKeyExpr.or(\n\t\t\t\t\t\t\tCTX_INLINE_CHAT_RESPONSE_TYPE.isEqualTo(\n\t\t\t\t\t\t\t\tInlineChatResponseType.Messages,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tCTX_INLINE_CHAT_EDIT_MODE.isEqualTo(\n\t\t\t\t\t\t\t\tEditMode.Preview,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\tasync runInlineChatCommand(\n\t\t_accessor: ServicesAccessor,\n\t\tctrl: InlineChatController,\n\t\t_editor: ICodeEditor,\n\t\t..._args: any[]\n\t): Promise<void> {\n\t\tctrl.cancelSession();\n\t}\n}\n\nexport class ConfigureInlineChatAction extends AbstractInlineChatAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"inlineChat.configure\",\n\t\t\ttitle: localize2(\"configure\", \"Configure Inline Chat\"),\n\t\t\ticon: Codicon.settingsGear,\n\t\t\tprecondition: CTX_INLINE_CHAT_VISIBLE,\n\t\t\tf1: true,\n\t\t\tmenu: {\n\t\t\t\tid: MENU_INLINE_CHAT_WIDGET_STATUS,\n\t\t\t\tgroup: \"zzz\",\n\t\t\t\torder: 5,\n\t\t\t},\n\t\t});\n\t}\n\n\tasync runInlineChatCommand(\n\t\taccessor: ServicesAccessor,\n\t\tctrl: InlineChatController,\n\t\t_editor: ICodeEditor,\n\t\t..._args: any[]\n\t): Promise<void> {\n\t\taccessor.get(IPreferencesService).openSettings({ query: \"inlineChat\" });\n\t}\n}\n\nexport class MoveToNextHunk extends AbstractInlineChatAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"inlineChat.moveToNextHunk\",\n\t\t\ttitle: localize2(\"moveToNextHunk\", \"Move to Next Change\"),\n\t\t\tprecondition: CTX_INLINE_CHAT_VISIBLE,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyCode.F7,\n\t\t\t},\n\t\t});\n\t}\n\n\toverride runInlineChatCommand(\n\t\taccessor: ServicesAccessor,\n\t\tctrl: InlineChatController,\n\t\teditor: ICodeEditor,\n\t\t...args: any[]\n\t): void {\n\t\tctrl.moveHunk(true);\n\t}\n}\n\nexport class MoveToPreviousHunk extends AbstractInlineChatAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"inlineChat.moveToPreviousHunk\",\n\t\t\ttitle: localize2(\"moveToPreviousHunk\", \"Move to Previous Change\"),\n\t\t\tf1: true,\n\t\t\tprecondition: CTX_INLINE_CHAT_VISIBLE,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.Shift | KeyCode.F7,\n\t\t\t},\n\t\t});\n\t}\n\n\toverride runInlineChatCommand(\n\t\taccessor: ServicesAccessor,\n\t\tctrl: InlineChatController,\n\t\teditor: ICodeEditor,\n\t\t...args: any[]\n\t): void {\n\t\tctrl.moveHunk(false);\n\t}\n}\n\nexport class ViewInChatAction extends AbstractInlineChatAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ACTION_VIEW_IN_CHAT,\n\t\t\ttitle: localize(\"viewInChat\", \"View in Chat\"),\n\t\t\ticon: Codicon.commentDiscussion,\n\t\t\tprecondition: CTX_INLINE_CHAT_VISIBLE,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MENU_INLINE_CHAT_WIDGET_STATUS,\n\t\t\t\t\tgroup: \"more\",\n\t\t\t\t\torder: 1,\n\t\t\t\t\twhen: CTX_INLINE_CHAT_RESPONSE_TYPE.notEqualsTo(\n\t\t\t\t\t\tInlineChatResponseType.Messages,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MENU_INLINE_CHAT_WIDGET_STATUS,\n\t\t\t\t\tgroup: \"0_main\",\n\t\t\t\t\torder: 1,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tCONTEXT_CHAT_INPUT_HAS_TEXT.toNegated(),\n\t\t\t\t\t\tCTX_INLINE_CHAT_RESPONSE_TYPE.isEqualTo(\n\t\t\t\t\t\t\tInlineChatResponseType.Messages,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tCTX_INLINE_CHAT_REQUEST_IN_PROGRESS.negate(),\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t],\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.DownArrow,\n\t\t\t\twhen: CONTEXT_IN_CHAT_INPUT,\n\t\t\t},\n\t\t});\n\t}\n\toverride runInlineChatCommand(\n\t\t_accessor: ServicesAccessor,\n\t\tctrl: InlineChatController,\n\t\t_editor: ICodeEditor,\n\t\t..._args: any[]\n\t) {\n\t\treturn ctrl.viewInChat();\n\t}\n}\n\nexport class ToggleDiffForChange extends AbstractInlineChatAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ACTION_TOGGLE_DIFF,\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tCTX_INLINE_CHAT_VISIBLE,\n\t\t\t\tCTX_INLINE_CHAT_EDIT_MODE.isEqualTo(EditMode.Live),\n\t\t\t\tCTX_INLINE_CHAT_CHANGE_HAS_DIFF,\n\t\t\t),\n\t\t\ttitle: localize2(\"showChanges\", \"Toggle Changes\"),\n\t\t\ticon: Codicon.diffSingle,\n\t\t\ttoggled: {\n\t\t\t\tcondition: CTX_INLINE_CHAT_CHANGE_SHOWS_DIFF,\n\t\t\t},\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MENU_INLINE_CHAT_WIDGET_STATUS,\n\t\t\t\t\tgroup: \"zzz\",\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tCTX_INLINE_CHAT_EDIT_MODE.isEqualTo(EditMode.Live),\n\t\t\t\t\t),\n\t\t\t\t\torder: 1,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MENU_INLINE_CHAT_ZONE,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\twhen: CTX_INLINE_CHAT_CHANGE_HAS_DIFF,\n\t\t\t\t\torder: 2,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\toverride runInlineChatCommand(\n\t\t_accessor: ServicesAccessor,\n\t\tctrl: InlineChatController,\n\t\t_editor: ICodeEditor,\n\t\thunkInfo: HunkInformation | any,\n\t): void {\n\t\tctrl.toggleDiff(hunkInfo);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
