import{renderMarkdownAsPlaintext as s}from"../../../../../vs/base/browser/markdownRenderer.js";import{MarkdownString as c}from"../../../../../vs/base/common/htmlContent.js";import{ICodeEditorService as l}from"../../../../../vs/editor/browser/services/codeEditorService.js";import{AccessibleContentProvider as m,AccessibleViewProviderId as d,AccessibleViewType as i}from"../../../../../vs/platform/accessibility/browser/accessibleView.js";import"../../../../../vs/platform/accessibility/browser/accessibleViewRegistry.js";import{ContextKeyExpr as p}from"../../../../../vs/platform/contextkey/common/contextkey.js";import"../../../../../vs/platform/instantiation/common/instantiation.js";import{AccessibilityVerbositySettingId as C}from"../../../../../vs/workbench/contrib/accessibility/browser/accessibilityConfiguration.js";import{InlineChatController as a}from"../../../../../vs/workbench/contrib/inlineChat/browser/inlineChatController.js";import{CTX_INLINE_CHAT_FOCUSED as I,CTX_INLINE_CHAT_RESPONSE_FOCUSED as f}from"../../../../../vs/workbench/contrib/inlineChat/common/inlineChat.js";class P{priority=100;name="inlineChat";when=p.or(I,f);type=i.View;getProvider(n){const r=n.get(l),o=r.getActiveCodeEditor()||r.getFocusedCodeEditor();if(!o)return;const e=a.get(o);if(!e)return;const t=e?.getMessage();if(t)return new m(d.InlineChat,{type:i.View},()=>s(new c(t),!0),()=>e.focus(),C.InlineChat)}}export{P as InlineChatAccessibleView};
