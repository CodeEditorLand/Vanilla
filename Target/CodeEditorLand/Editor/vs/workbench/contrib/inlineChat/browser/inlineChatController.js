var $=Object.defineProperty;var Y=Object.getOwnPropertyDescriptor;var L=(f,e,t,i)=>{for(var s=i>1?void 0:i?Y(e,t):e,n=f.length-1,a;n>=0;n--)(a=f[n])&&(s=(i?a(e,t,s):a(s))||s);return i&&s&&$(e,t,s),s},u=(f,e)=>(t,i)=>e(t,i,f);import*as Z from"../../../../../vs/base/browser/ui/aria/aria.js";import{Barrier as j,DeferredPromise as J,Queue as ee}from"../../../../../vs/base/common/async.js";import{CancellationToken as te,CancellationTokenSource as z}from"../../../../../vs/base/common/cancellation.js";import{toErrorMessage as H}from"../../../../../vs/base/common/errorMessage.js";import{onUnexpectedError as se}from"../../../../../vs/base/common/errors.js";import{Emitter as k,Event as m}from"../../../../../vs/base/common/event.js";import{Lazy as ie}from"../../../../../vs/base/common/lazy.js";import{DisposableStore as M,MutableDisposable as oe,toDisposable as ne}from"../../../../../vs/base/common/lifecycle.js";import{MovingAverage as ae}from"../../../../../vs/base/common/numbers.js";import{isEqual as P}from"../../../../../vs/base/common/resources.js";import{StopWatch as re}from"../../../../../vs/base/common/stopwatch.js";import{assertType as h}from"../../../../../vs/base/common/types.js";import{generateUuid as de}from"../../../../../vs/base/common/uuid.js";import{isCodeEditor as he}from"../../../../../vs/editor/browser/editorBrowser.js";import{Position as F}from"../../../../../vs/editor/common/core/position.js";import{Range as W}from"../../../../../vs/editor/common/core/range.js";import{Selection as b,SelectionDirection as le}from"../../../../../vs/editor/common/core/selection.js";import"../../../../../vs/editor/common/editorCommon.js";import{TextEdit as ce}from"../../../../../vs/editor/common/languages.js";import"../../../../../vs/editor/common/model.js";import{IEditorWorkerService as ue}from"../../../../../vs/editor/common/services/editorWorker.js";import{DefaultModelSHA1Computer as _e}from"../../../../../vs/editor/common/services/modelService.js";import{InlineCompletionsController as ge}from"../../../../../vs/editor/contrib/inlineCompletions/browser/controller/inlineCompletionsController.js";import{MessageController as Se}from"../../../../../vs/editor/contrib/message/browser/messageController.js";import{localize as v}from"../../../../../vs/nls.js";import{IConfigurationService as pe}from"../../../../../vs/platform/configuration/common/configuration.js";import{IContextKeyService as fe}from"../../../../../vs/platform/contextkey/common/contextkey.js";import{IDialogService as Ee}from"../../../../../vs/platform/dialogs/common/dialogs.js";import{IInstantiationService as Ie}from"../../../../../vs/platform/instantiation/common/instantiation.js";import{ILogService as ve}from"../../../../../vs/platform/log/common/log.js";import{showChatView as Ce}from"../../../../../vs/workbench/contrib/chat/browser/chat.js";import"../../../../../vs/workbench/contrib/chat/browser/chatWidget.js";import{ChatAgentLocation as q}from"../../../../../vs/workbench/contrib/chat/common/chatAgents.js";import{ChatRequestRemovalReason as me}from"../../../../../vs/workbench/contrib/chat/common/chatModel.js";import{IChatService as V}from"../../../../../vs/workbench/contrib/chat/common/chatService.js";import{InlineChatContentWidget as Re}from"../../../../../vs/workbench/contrib/inlineChat/browser/inlineChatContentWidget.js";import{Session as we}from"../../../../../vs/workbench/contrib/inlineChat/browser/inlineChatSession.js";import{InlineChatError as G}from"../../../../../vs/workbench/contrib/inlineChat/browser/inlineChatSessionServiceImpl.js";import{HunkAction as R,LiveStrategy as ye,PreviewStrategy as Te}from"../../../../../vs/workbench/contrib/inlineChat/browser/inlineChatStrategies.js";import{CTX_INLINE_CHAT_EDITING as Ne,CTX_INLINE_CHAT_REQUEST_IN_PROGRESS as Me,CTX_INLINE_CHAT_RESPONSE_TYPE as Pe,CTX_INLINE_CHAT_SUPPORT_REPORT_ISSUE as Ae,CTX_INLINE_CHAT_USER_DID_EDIT as xe,CTX_INLINE_CHAT_VISIBLE as Oe,EditMode as A,INLINE_CHAT_ID as Q,InlineChatConfigKeys as x,InlineChatResponseType as O}from"../../../../../vs/workbench/contrib/inlineChat/common/inlineChat.js";import{INotebookEditorService as De}from"../../../../../vs/workbench/contrib/notebook/browser/services/notebookEditorService.js";import{IEditorService as Ue,SIDE_GROUP as ke}from"../../../../../vs/workbench/services/editor/common/editorService.js";import{IViewsService as We}from"../../../../../vs/workbench/services/views/common/viewsService.js";import{IInlineChatSavingService as be}from"./inlineChatSavingService.js";import{IInlineChatSessionService as qe}from"./inlineChatSessionService.js";import{InlineChatZoneWidget as Le}from"./inlineChatZoneWidget.js";var ze=(o=>(o.CREATE_SESSION="CREATE_SESSION",o.INIT_UI="INIT_UI",o.WAIT_FOR_INPUT="WAIT_FOR_INPUT",o.SHOW_REQUEST="SHOW_REQUEST",o.PAUSE="PAUSE",o.CANCEL="CANCEL",o.ACCEPT="DONE",o))(ze||{}),He=(o=>(o[o.NONE=0]="NONE",o[o.ACCEPT_SESSION=1]="ACCEPT_SESSION",o[o.CANCEL_SESSION=2]="CANCEL_SESSION",o[o.PAUSE_SESSION=4]="PAUSE_SESSION",o[o.CANCEL_REQUEST=8]="CANCEL_REQUEST",o[o.CANCEL_INPUT=16]="CANCEL_INPUT",o[o.ACCEPT_INPUT=32]="ACCEPT_INPUT",o))(He||{});class es{initialSelection;initialRange;message;autoSend;existingSession;isUnstashed;position;withIntentDetection;headless;static isInlineChatRunOptions(e){const{initialSelection:t,initialRange:i,message:s,autoSend:n,position:a,existingSession:o}=e;return!(typeof s<"u"&&typeof s!="string"||typeof n<"u"&&typeof n!="boolean"||typeof i<"u"&&!W.isIRange(i)||typeof t<"u"&&!b.isISelection(t)||typeof a<"u"&&!F.isIPosition(a)||typeof o<"u"&&!(o instanceof we))}}let C=class{constructor(e,t,i,s,n,a,o,d,l,S,g,w){this._editor=e;this._instaService=t;this._inlineChatSessionService=i;this._inlineChatSavingService=s;this._editorWorkerService=n;this._logService=a;this._configurationService=o;this._dialogService=d;this._chatService=S;this._editorService=g;this._ctxVisible=Oe.bindTo(l),this._ctxEditing=Ne.bindTo(l),this._ctxUserDidEdit=xe.bindTo(l),this._ctxResponseType=Pe.bindTo(l),this._ctxRequestInProgress=Me.bindTo(l),this._ctxSupportsReportIssue=Ae.bindTo(l),this._ui=new ie(()=>{const c={location:q.Editor,resolveData:()=>(h(this._editor.hasModel()),h(this._session),{type:q.Editor,selection:this._editor.getSelection(),document:this._session.textModelN.uri,wholeRange:this._session?.wholeRange.trackedInitialRange})};for(const y of w.listNotebookEditors())for(const[,T]of y.codeEditors)if(T===this._editor){c.location=q.Notebook;break}const E=this._store.add(t.createInstance(Re,c,this._editor)),I=this._store.add(t.createInstance(Le,c,this._editor));return{content:E,zone:I}}),this._store.add(this._editor.onDidChangeModel(async c=>{if(this._session||!c.newModelUrl)return;const E=this._inlineChatSessionService.getSession(this._editor,c.newModelUrl);E&&(this._log("session RESUMING after model change",c),await this.run({existingSession:E}))})),this._store.add(this._inlineChatSessionService.onDidEndSession(c=>{c.session===this._session&&c.endedByExternalCause&&(this._log("session ENDED by external cause"),this._session=void 0,this._strategy?.cancel(),this._resetWidget(),this.cancelSession())})),this._store.add(this._inlineChatSessionService.onDidMoveSession(async c=>{c.editor===this._editor&&(this._log("session RESUMING after move",c),await this.run({existingSession:c.session}))})),this._log("NEW controller")}static get(e){return e.getContribution(Q)}_isDisposed=!1;_store=new M;_ui;_ctxVisible;_ctxEditing;_ctxResponseType;_ctxUserDidEdit;_ctxRequestInProgress;_ctxSupportsReportIssue;_messages=this._store.add(new k);_onDidEnterState=this._store.add(new k);onDidEnterState=this._onDidEnterState.event;_onWillStartSession=this._store.add(new k);onWillStartSession=this._onWillStartSession.event;get chatWidget(){return this._ui.value.content.isVisible?this._ui.value.content.chatWidget:this._ui.value.zone.widget.chatWidget}_sessionStore=this._store.add(new M);_stashedSession=this._store.add(new oe);_session;_strategy;dispose(){this._currentRun&&this._messages.fire(this._session?.chatModel.hasRequests?4:2),this._store.dispose(),this._isDisposed=!0,this._log("DISPOSED controller")}_log(e,...t){e instanceof Error?this._logService.error(e,...t):this._logService.trace(`[IE] (editor:${this._editor.getId()}) ${e}`,...t)}getMessage(){return this._ui.value.zone.widget.responseContent}getId(){return Q}_getMode(){return this._configurationService.getValue(x.Mode)}getWidgetPosition(){return this._ui.value.zone.position}_currentRun;async run(e={}){try{this.finishExistingSession(),this._currentRun&&await this._currentRun,e.initialSelection&&this._editor.setSelection(e.initialSelection),this._stashedSession.clear(),this._onWillStartSession.fire(),this._currentRun=this._nextState("CREATE_SESSION",e),await this._currentRun}catch(t){this._log("error during run",t),se(t),this._session&&this._inlineChatSessionService.releaseSession(this._session),this.PAUSE()}finally{this._currentRun=void 0}}async _nextState(e,t){let i=e;for(;i&&!this._isDisposed;){this._log("setState to ",i);const s=this[i](t);this._onDidEnterState.fire(i),i=await s}}async CREATE_SESSION(e){h(this._session===void 0),h(this._editor.hasModel());let t=e.existingSession,i;e.position&&(i=F.lift(e.position).delta(-1),delete e.position);const s=this._showWidget(e.headless??t?.headless,!0,i);let n=v("create.fail","Failed to start editor chat");if(!t){const a=new z,o=m.once(this._messages.event)(d=>{this._log("state=_createSession) message received",d),d===32?(e.autoSend=!0,this._ui.value.zone.widget.updateInfo(v("welcome.2","Getting ready..."))):a.cancel()});try{t=await this._inlineChatSessionService.createSession(this._editor,{editMode:this._getMode(),wholeRange:e.initialRange},a.token)}catch(d){(d instanceof G||d?.name===G.code)&&(n=d.message)}if(a.dispose(),o.dispose(),a.token.isCancellationRequested)return t&&this._inlineChatSessionService.releaseSession(t),"CANCEL"}if(delete e.initialRange,delete e.existingSession,!t)return Se.get(this._editor)?.showMessage(n,s),this._log("Failed to start editor chat"),"CANCEL";switch(await t.chatModel.waitForInitialization(),t.editMode){case A.Preview:this._strategy=this._instaService.createInstance(Te,t,this._editor,this._ui.value.zone);break;case A.Live:default:this._strategy=this._instaService.createInstance(ye,t,this._editor,this._ui.value.zone,t.headless||this._configurationService.getValue(x.ZoneToolbar));break}return this._session=t,"INIT_UI"}async INIT_UI(e){h(this._session),h(this._strategy),ge.get(this._editor)?.hide(),this._sessionStore.clear();const t=this._editor.createDecorationsCollection(),i=()=>{const d=this._strategy?.getWholeRangeDecoration()??[];t.set(d),this._ctxEditing.set(!this._session?.wholeRange.trackedInitialRange.isEmpty())};this._sessionStore.add(ne(()=>{t.clear(),this._ctxEditing.reset()})),this._sessionStore.add(this._session.wholeRange.onDidChange(i)),i(),this._sessionStore.add(this._ui.value.content.onDidBlur(()=>this.cancelSession())),this._ui.value.content.setSession(this._session),this._ui.value.zone.widget.setChatModel(this._session.chatModel),this._updatePlaceholder();const s=!this._session.chatModel.hasRequests;this._ui.value.zone.widget.updateToolbar(!0),this._ui.value.zone.widget.toggleStatus(!s),this._showWidget(this._session.headless,s),this._sessionStore.add(this._editor.onDidChangeModel(d=>{const l=this._session?.chatModel.hasRequests?4:2;this._log("model changed, pause or cancel session",l,d),this._messages.fire(l)}));const n=this._editor.getModel()?.getAlternativeVersionId();this._sessionStore.add(this._editor.onDidChangeModelContent(d=>{if(this._session?.hunkData.ignoreTextModelNChanges||this._ctxUserDidEdit.set(n!==this._editor.getModel()?.getAlternativeVersionId()),this._session?.hunkData.ignoreTextModelNChanges||this._strategy?.hasFocus())return;const l=this._session.wholeRange;let S=!1;if(this._configurationService.getValue(x.FinishOnType))for(const{range:g}of d.changes)S=!W.areIntersectingOrTouching(g,l.value);this._session.recordExternalEditOccurred(S),S&&(this._log("text changed outside of whole range, FINISH session"),this.finishExistingSession())})),this._sessionStore.add(this._session.chatModel.onDidChange(async d=>{d.kind==="removeRequest"&&await this._session.undoChangesUntil(d.requestId)}));const a=this._createChatTextEditGroupState();let o=!1;for(const d of this._session.chatModel.getRequests()){if(!d.response)break;for(const l of d.response.response.value)if(!(l.kind!=="textEditGroup"||!P(l.uri,this._session.textModelN.uri))&&!l.state?.applied){for(const S of l.edits)this._makeChanges(S,void 0,!o),o=!0;l.state??=a}}if(o){const d=await this._editorWorkerService.computeDiff(this._session.textModel0.uri,this._session.textModelN.uri,{computeMoves:!1,maxComputationTimeMs:Number.MAX_SAFE_INTEGER,ignoreTrimWhitespace:!1},"advanced");this._session.wholeRange.fixup(d?.changes??[]),await this._session.hunkData.recompute(a,d)}return e.position=await this._strategy.renderChanges(),this._session.chatModel.requestInProgress?"SHOW_REQUEST":"WAIT_FOR_INPUT"}async WAIT_FOR_INPUT(e){h(this._session),h(this._strategy),this._updatePlaceholder(),e.message&&(this.updateInput(e.message),Z.alert(e.message),delete e.message,this._showWidget(this._session.headless,!1));let t=0,i;const s=new j,n=new M;return n.add(this._session.chatModel.onDidChange(a=>{a.kind==="addRequest"&&(i=a.request,t=32,s.open())})),n.add(this._strategy.onDidAccept(()=>this.acceptSession())),n.add(this._strategy.onDidDiscard(()=>this.cancelSession())),n.add(m.once(this._messages.event)(a=>{this._log("state=_waitForInput) message received",a),t=a,s.open()})),e.autoSend&&(delete e.autoSend,this._showWidget(this._session.headless,!1),this._ui.value.zone.widget.chatWidget.acceptInput()),await s.wait(),n.dispose(),t&18?"CANCEL":t&4?"PAUSE":t&1?(this._ui.value.zone.widget.selectAll(!1),"DONE"):i?.message.text?"SHOW_REQUEST":"WAIT_FOR_INPUT"}async SHOW_REQUEST(e){h(this._session),h(this._strategy),h(this._session.chatModel.requestInProgress),this._ctxRequestInProgress.set(!0);const{chatModel:t}=this._session,i=t.lastRequest;h(i),h(i.response),this._ctxSupportsReportIssue.set(i.response.agent?.metadata.supportIssueReporting??!1),this._showWidget(this._session.headless,!1),this._ui.value.zone.widget.selectAll(!1),this._ui.value.zone.widget.updateInfo(""),this._ui.value.zone.widget.toggleStatus(!0);const{response:s}=i,n=new J,a=new M,o=a.add(new z),d=new ae,l=re.create(),S=new ee;let g="WAIT_FOR_INPUT";a.add(m.once(this._messages.event)(r=>{this._log("state=_makeRequest) message received",r),this._chatService.cancelCurrentRequestForSession(t.sessionId),r&2?g="CANCEL":r&4?g="PAUSE":r&1&&(g="DONE")})),a.add(t.onDidChange(async r=>{if(r.kind==="removeRequest"&&r.requestId===i.id){o.cancel(),n.complete(),r.reason===me.Resend?g="SHOW_REQUEST":g="CANCEL";return}if(r.kind==="move"){const _=(K,...B)=>this._log("state=_showRequest) moving inline chat",K,...B);_("move was requested",r.target,r.range);const N=await this._editorService.openEditor({resource:r.target},ke);if(!N){_("opening editor failed");return}const p=N.getControl();if(!p||!he(p)||!p.hasModel()){_("new editor is either missing or not a code editor or does not have a model");return}if(!this._session){_("controller does not have a session");return}const U=await this._inlineChatSessionService.createSession(p,{editMode:this._getMode(),session:this._session},te.None),X=b.fromRange(W.lift(r.range),le.LTR);C.get(p)?.run({initialSelection:X,existingSession:U}),g="CANCEL",n.complete();return}})),a.add(this._ui.value.zone.widget.chatWidget.inputEditor.onDidChangeModelContent(()=>{this._chatService.cancelCurrentRequestForSession(t.sessionId)}));let w=0,c=!0;const E=this._createChatTextEditGroupState();let I;const y=()=>{if(this._updateCtxResponseType(),I||(I=s.response.value.find(r=>r.kind==="textEditGroup"&&P(r.uri,this._session?.textModelN.uri))),I){I.state??=E;const r=I.edits,_=r.slice(w);_.length>0&&(this._log(`${this._session?.textModelN.uri.toString()} received ${_.length} edits`),w=r.length,d.update(l.elapsed()),l.reset(),S.queue(async()=>{const N=this._session.wholeRange.value.getStartPosition();for(const U of _)await this._makeChanges(U,{duration:d.value,token:o.token},c),c=!1;const p=this._session.wholeRange.value.getStartPosition();(!p.equals(N)||!this._ui.value.zone.position?.equals(p))&&this._showWidget(this._session.headless,!1,p.delta(-1))}))}s.isCanceled?(o.cancel(),n.complete()):s.isComplete&&n.complete()};a.add(s.onDidChange(y)),y(),await n.p,await S.whenIdle(),s.isCanceled&&await this._session.undoChangesUntil(s.requestId),a.dispose();const T=await this._editorWorkerService.computeDiff(this._session.textModel0.uri,this._session.textModelN.uri,{computeMoves:!1,maxComputationTimeMs:Number.MAX_SAFE_INTEGER,ignoreTrimWhitespace:!1},"advanced");this._session.wholeRange.fixup(T?.changes??[]),await this._session.hunkData.recompute(E,T),this._ctxRequestInProgress.set(!1);let D;if(s.result?.errorDetails)await this._session.undoChangesUntil(s.requestId);else if(s.response.value.length===0){const r=v("empty","No results, please refine your input and try again");this._ui.value.zone.widget.updateStatus(r,{classes:["warn"]})}else{this._ui.value.zone.widget.updateStatus("");const r=await this._strategy.renderChanges();if(r){const _=this._editor.getSelection();_?.containsPosition(r)?r.lineNumber-_.startLineNumber>8&&(D=r):D=r}}return this._showWidget(this._session.headless,!1,D),g}async PAUSE(){this._resetWidget(),this._strategy?.dispose?.(),this._session=void 0}async DONE(){h(this._session),h(this._strategy),this._sessionStore.clear();try{await this._strategy.apply()}catch(e){this._dialogService.error(v("err.apply","Failed to apply changes.",H(e))),this._log("FAILED to apply changes"),this._log(e)}this._inlineChatSessionService.releaseSession(this._session),this._resetWidget(),this._strategy?.dispose(),this._strategy=void 0,this._session=void 0}async CANCEL(){if(this._session){h(this._strategy),this._sessionStore.clear();const e=!this._session.isUnstashed&&this._session.chatModel.hasRequests&&this._session.hunkData.size===this._session.hunkData.pending;let t=[];try{t=this._strategy.cancel()}catch(i){this._dialogService.error(v("err.discard","Failed to discard changes.",H(i))),this._log("FAILED to discard changes"),this._log(i)}this._stashedSession.clear(),e?this._stashedSession.value=this._inlineChatSessionService.stashSession(this._session,this._editor,t):this._inlineChatSessionService.releaseSession(this._session)}this._resetWidget(),this._strategy?.dispose(),this._strategy=void 0,this._session=void 0}_showWidget(e=!1,t=!1,i){h(this._editor.hasModel()),this._ctxVisible.set(!0);let s;if(i?s=i:this._ui.rawValue?.zone?.position?this._ui.rawValue?.zone.position.lineNumber===1?s=this._ui.rawValue?.zone.position.delta(-1):s=this._ui.rawValue?.zone.position:s=this._editor.getSelection().getStartPosition().delta(-1),this._session&&!i&&(this._session.hasChangedText||this._session.chatModel.hasRequests)&&(s=this._session.wholeRange.trackedInitialRange.getStartPosition().delta(-1)),!e)if(this._ui.rawValue?.zone?.position)this._ui.value.zone.updatePositionAndHeight(s);else if(t&&this._configurationService.getValue(x.StartWithOverlayWidget)){const n=this._editor.getSelection();s=n.getStartPosition(),this._ui.value.content.show(s,n.isEmpty())}else this._ui.value.content.hide(),this._ui.value.zone.show(s);return s}_resetWidget(){this._sessionStore.clear(),this._ctxVisible.reset(),this._ctxUserDidEdit.reset(),this._ui.rawValue?.content.hide(),this._ui.rawValue?.zone?.hide(),this._editor.hasWidgetFocus()&&this._editor.focus()}_updateCtxResponseType(){if(!this._session){this._ctxResponseType.set(O.None);return}const e=i=>i.value.some(s=>s.kind==="textEditGroup"&&P(s.uri,this._session?.textModelN.uri));let t=O.None;for(const i of this._session.chatModel.getRequests())if(!(!i.response||i.response.isCanceled)&&(t=O.Messages,e(i.response.response))){t=O.MessagesAndEdits;break}this._ctxResponseType.set(t)}_createChatTextEditGroupState(){h(this._session);const e=new _e;return{sha1:e.canComputeSHA1(this._session.textModel0)?e.computeSHA1(this._session.textModel0):de(),applied:0}}async _makeChanges(e,t,i){h(this._session),h(this._strategy);const s=await this._editorWorkerService.computeMoreMinimalEdits(this._session.textModelN.uri,e);if(this._log("edits from PROVIDER and after making them MORE MINIMAL",this._session.agent.extensionId,e,s),s?.length===0)return;const a=(!t&&s?s:e).map(ce.asEditOperation),o={start:()=>this._session.hunkData.ignoreTextModelNChanges=!0,stop:()=>this._session.hunkData.ignoreTextModelNChanges=!1};this._inlineChatSavingService.markChanged(this._session),t?await this._strategy.makeProgressiveChanges(a,o,t,i):await this._strategy.makeChanges(a,o,i)}_forcedPlaceholder=void 0;_updatePlaceholder(){this._ui.value.zone.widget.placeholder=this._getPlaceholderText()}_getPlaceholderText(){return this._forcedPlaceholder??this._session?.agent.description??""}showSaveHint(){const e=v("savehint","Accept or discard changes to continue saving");this._ui.value.zone.widget.updateStatus(e,{classes:["warn"]})}acceptInput(){return this.chatWidget.acceptInput()}updateInput(e,t=!0){if(this._ui.value.content.chatWidget.setInput(e),this._ui.value.zone.widget.chatWidget.setInput(e),t){const i=new b(1,1,Number.MAX_SAFE_INTEGER,1);this._ui.value.content.chatWidget.inputEditor.setSelection(i),this._ui.value.zone.widget.chatWidget.inputEditor.setSelection(i)}}cancelCurrentRequest(){this._messages.fire(24)}arrowOut(e){if(this._ui.value.zone.position&&this._editor.hasModel()){const{column:t}=this._editor.getPosition(),{lineNumber:i}=this._ui.value.zone.position,s=e?i:i+1;this._editor.setPosition({lineNumber:s,column:t}),this._editor.focus()}}focus(){this._ui.value.zone.widget.focus()}hasFocus(){return this._ui.value.zone.widget.hasFocus()}async viewInChat(){if(!this._strategy||!this._session)return;let e=!1,t;const i=this._editor.getModel()?.uri,s=this._session.chatModel.getRequests();for(const a of s)if(a.response)for(const o of a.response.response.value)o.kind==="textEditGroup"&&P(o.uri,i)&&(e=e||!!o.state?.applied,t=o);const n=this._strategy.cancel();e&&(h(t),t.edits=[n],t.state.applied=0),await this._instaService.invokeFunction(Fe,this._session?.chatModel),this.cancelSession()}acceptSession(){const e=this._session?.chatModel.getRequests().at(-1)?.response;e&&this._chatService.notifyUserAction({sessionId:e.session.sessionId,requestId:e.requestId,agentId:e.agent?.id,command:e.slashCommand?.name,result:e.result,action:{kind:"inlineChat",action:"accepted"}}),this._messages.fire(1)}acceptHunk(e){return this._strategy?.performHunkAction(e,R.Accept)}discardHunk(e){return this._strategy?.performHunkAction(e,R.Discard)}toggleDiff(e){return this._strategy?.performHunkAction(e,R.ToggleDiff)}moveHunk(e){this.focus(),this._strategy?.performHunkAction(void 0,e?R.MoveNext:R.MovePrev)}async cancelSession(){const e=this._session?.chatModel.lastRequest?.response;e&&this._chatService.notifyUserAction({sessionId:e.session.sessionId,requestId:e.requestId,agentId:e.agent?.id,command:e.slashCommand?.name,result:e.result,action:{kind:"inlineChat",action:"discarded"}}),this._messages.fire(2)}finishExistingSession(){this._session&&(this._session.editMode===A.Preview?(this._log("finishing existing session, using CANCEL",this._session.editMode),this.cancelSession()):(this._log("finishing existing session, using APPLY",this._session.editMode),this.acceptSession()))}reportIssue(){const e=this._session?.chatModel.lastRequest?.response;e&&this._chatService.notifyUserAction({sessionId:e.session.sessionId,requestId:e.requestId,agentId:e.agent?.id,command:e.slashCommand?.name,result:e.result,action:{kind:"bug"}})}unstashLastSession(){const e=this._stashedSession.value?.unstash();return e&&this._inlineChatSavingService.markChanged(e),e}joinCurrentRun(){return this._currentRun}async reviewEdits(e,t,i){if(!this._editor.hasModel())return!1;const s=await this._inlineChatSessionService.createSession(this._editor,{editMode:A.Live,wholeRange:e,headless:!0},i);if(!s)return!1;const n=s.chatModel.addRequest({text:"DUMMY",parts:[]},{variables:[]},0),a=this.run({existingSession:s,headless:!0});await m.toPromise(m.filter(this._onDidEnterState.event,o=>o==="SHOW_REQUEST"));for await(const o of t)s.chatModel.acceptResponseProgress(n,{kind:"textEdit",uri:this._editor.getModel().uri,edits:[o]});return i.isCancellationRequested?s.chatModel.cancelRequest(n):s.chatModel.completeResponse(n),await a,!0}};C=L([u(1,Ie),u(2,qe),u(3,be),u(4,ue),u(5,ve),u(6,pe),u(7,Ee),u(8,fe),u(9,V),u(10,Ue),u(11,De)],C);async function Fe(f,e){const t=f.get(We),i=f.get(V),s=await Ce(t);if(s&&s.viewModel&&e){for(const n of e.getRequests().slice())await i.adoptRequest(s.viewModel.model.sessionId,n);s.focusLastMessage()}}export{C as InlineChatController,es as InlineChatRunOptions,ze as State};
