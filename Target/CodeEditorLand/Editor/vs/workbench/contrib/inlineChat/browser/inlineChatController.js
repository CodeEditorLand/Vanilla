var B=Object.defineProperty;var Z=Object.getOwnPropertyDescriptor;var H=(S,e,t,i)=>{for(var s=i>1?void 0:i?Z(e,t):e,a=S.length-1,n;a>=0;a--)(n=S[a])&&(s=(i?n(e,t,s):n(s))||s);return i&&s&&B(e,t,s),s},u=(S,e)=>(t,i)=>e(t,i,S);import*as j from"../../../../base/browser/ui/aria/aria.js";import{Barrier as J,DeferredPromise as ee,Queue as te}from"../../../../base/common/async.js";import{CancellationToken as se,CancellationTokenSource as F}from"../../../../base/common/cancellation.js";import{toErrorMessage as V}from"../../../../base/common/errorMessage.js";import{onUnexpectedError as ie}from"../../../../base/common/errors.js";import{Emitter as D,Event as w}from"../../../../base/common/event.js";import{Lazy as oe}from"../../../../base/common/lazy.js";import{DisposableStore as M,MutableDisposable as ne,toDisposable as ae}from"../../../../base/common/lifecycle.js";import{MovingAverage as re}from"../../../../base/common/numbers.js";import{isEqual as P}from"../../../../base/common/resources.js";import{StopWatch as de}from"../../../../base/common/stopwatch.js";import{assertType as h}from"../../../../base/common/types.js";import{generateUuid as he}from"../../../../base/common/uuid.js";import{isCodeEditor as le}from"../../../../editor/browser/editorBrowser.js";import{Position as G}from"../../../../editor/common/core/position.js";import{Range as k}from"../../../../editor/common/core/range.js";import{Selection as b,SelectionDirection as ce}from"../../../../editor/common/core/selection.js";import"../../../../editor/common/editorCommon.js";import{TextEdit as ue}from"../../../../editor/common/languages.js";import"../../../../editor/common/model.js";import{IEditorWorkerService as _e}from"../../../../editor/common/services/editorWorker.js";import{DefaultModelSHA1Computer as ge}from"../../../../editor/common/services/modelService.js";import{InlineCompletionsController as Se}from"../../../../editor/contrib/inlineCompletions/browser/controller/inlineCompletionsController.js";import{MessageController as pe}from"../../../../editor/contrib/message/browser/messageController.js";import{localize as v}from"../../../../nls.js";import{IConfigurationService as fe}from"../../../../platform/configuration/common/configuration.js";import{IContextKeyService as Ee}from"../../../../platform/contextkey/common/contextkey.js";import{IDialogService as Ie}from"../../../../platform/dialogs/common/dialogs.js";import{IInstantiationService as Ce}from"../../../../platform/instantiation/common/instantiation.js";import{ILogService as ve}from"../../../../platform/log/common/log.js";import{IEditorService as me,SIDE_GROUP as Re}from"../../../services/editor/common/editorService.js";import{IViewsService as we}from"../../../services/views/common/viewsService.js";import{showChatView as Te}from"../../chat/browser/chat.js";import"../../chat/browser/chatWidget.js";import{ChatAgentLocation as U}from"../../chat/common/chatAgents.js";import{CONTEXT_RESPONSE as Ne,CONTEXT_RESPONSE_ERROR as ye}from"../../chat/common/chatContextKeys.js";import{ChatRequestRemovalReason as Me}from"../../chat/common/chatModel.js";import{IChatService as Q}from"../../chat/common/chatService.js";import{INotebookEditorService as Pe}from"../../notebook/browser/services/notebookEditorService.js";import{CTX_INLINE_CHAT_EDITING as Ae,CTX_INLINE_CHAT_REQUEST_IN_PROGRESS as xe,CTX_INLINE_CHAT_RESPONSE_TYPE as Oe,CTX_INLINE_CHAT_USER_DID_EDIT as De,CTX_INLINE_CHAT_VISIBLE as ke,EditMode as A,INLINE_CHAT_ID as X,InlineChatConfigKeys as W,InlineChatResponseType as T}from"../common/inlineChat.js";import{IInlineChatSavingService as be}from"./inlineChatSavingService.js";import{HunkState as Ue,Session as We}from"./inlineChatSession.js";import{IInlineChatSessionService as qe}from"./inlineChatSessionService.js";import{InlineChatError as z}from"./inlineChatSessionServiceImpl.js";import{HunkAction as N,LiveStrategy as Le,PreviewStrategy as He}from"./inlineChatStrategies.js";import{InlineChatZoneWidget as Fe}from"./inlineChatZoneWidget.js";var Ve=(o=>(o.CREATE_SESSION="CREATE_SESSION",o.INIT_UI="INIT_UI",o.WAIT_FOR_INPUT="WAIT_FOR_INPUT",o.SHOW_REQUEST="SHOW_REQUEST",o.PAUSE="PAUSE",o.CANCEL="CANCEL",o.ACCEPT="DONE",o))(Ve||{}),Ge=(o=>(o[o.NONE=0]="NONE",o[o.ACCEPT_SESSION=1]="ACCEPT_SESSION",o[o.CANCEL_SESSION=2]="CANCEL_SESSION",o[o.PAUSE_SESSION=4]="PAUSE_SESSION",o[o.CANCEL_REQUEST=8]="CANCEL_REQUEST",o[o.CANCEL_INPUT=16]="CANCEL_INPUT",o[o.ACCEPT_INPUT=32]="ACCEPT_INPUT",o))(Ge||{});class ss{initialSelection;initialRange;message;autoSend;existingSession;isUnstashed;position;withIntentDetection;headless;static isInlineChatRunOptions(e){const{initialSelection:t,initialRange:i,message:s,autoSend:a,position:n,existingSession:o}=e;return!(typeof s<"u"&&typeof s!="string"||typeof a<"u"&&typeof a!="boolean"||typeof i<"u"&&!k.isIRange(i)||typeof t<"u"&&!b.isISelection(t)||typeof n<"u"&&!G.isIPosition(n)||typeof o<"u"&&!(o instanceof We))}}let m=class{constructor(e,t,i,s,a,n,o,r,l,g,_,y){this._editor=e;this._instaService=t;this._inlineChatSessionService=i;this._inlineChatSavingService=s;this._editorWorkerService=a;this._logService=n;this._configurationService=o;this._dialogService=r;this._chatService=g;this._editorService=_;this._ctxVisible=ke.bindTo(l),this._ctxEditing=Ae.bindTo(l),this._ctxUserDidEdit=De.bindTo(l),this._ctxResponseType=Oe.bindTo(l),this._ctxRequestInProgress=xe.bindTo(l),this._ctxResponse=Ne.bindTo(l),ye.bindTo(l),this._ui=new oe(()=>{const c={location:U.Editor,resolveData:()=>(h(this._editor.hasModel()),h(this._session),{type:U.Editor,selection:this._editor.getSelection(),document:this._session.textModelN.uri,wholeRange:this._session?.wholeRange.trackedInitialRange})};for(const f of y.listNotebookEditors())for(const[,E]of f.codeEditors)if(E===this._editor){c.location=U.Notebook;break}return this._store.add(t.createInstance(Fe,c,this._editor))}),this._store.add(this._editor.onDidChangeModel(async c=>{if(this._session||!c.newModelUrl)return;const f=this._inlineChatSessionService.getSession(this._editor,c.newModelUrl);f&&(this._log("session RESUMING after model change",c),await this.run({existingSession:f}))})),this._store.add(this._inlineChatSessionService.onDidEndSession(c=>{c.session===this._session&&c.endedByExternalCause&&(this._log("session ENDED by external cause"),this._session=void 0,this._strategy?.cancel(),this._resetWidget(),this.cancelSession())})),this._store.add(this._inlineChatSessionService.onDidMoveSession(async c=>{c.editor===this._editor&&(this._log("session RESUMING after move",c),await this.run({existingSession:c.session}))})),this._log("NEW controller")}static get(e){return e.getContribution(X)}_isDisposed=!1;_store=new M;_ui;_ctxVisible;_ctxEditing;_ctxResponseType;_ctxUserDidEdit;_ctxRequestInProgress;_ctxResponse;_messages=this._store.add(new D);_onDidEnterState=this._store.add(new D);onDidEnterState=this._onDidEnterState.event;_onWillStartSession=this._store.add(new D);onWillStartSession=this._onWillStartSession.event;get chatWidget(){return this._ui.value.widget.chatWidget}_sessionStore=this._store.add(new M);_stashedSession=this._store.add(new ne);_session;_strategy;dispose(){this._currentRun&&this._messages.fire(this._session?.chatModel.hasRequests?4:2),this._store.dispose(),this._isDisposed=!0,this._log("DISPOSED controller")}_log(e,...t){e instanceof Error?this._logService.error(e,...t):this._logService.trace(`[IE] (editor:${this._editor.getId()}) ${e}`,...t)}getMessage(){return this._ui.value.widget.responseContent}getId(){return X}_getMode(){return this._configurationService.getValue(W.Mode)}getWidgetPosition(){return this._ui.value.position}_currentRun;async run(e={}){try{this.finishExistingSession(),this._currentRun&&await this._currentRun,e.initialSelection&&this._editor.setSelection(e.initialSelection),this._stashedSession.clear(),this._onWillStartSession.fire(),this._currentRun=this._nextState("CREATE_SESSION",e),await this._currentRun}catch(t){this._log("error during run",t),ie(t),this._session&&this._inlineChatSessionService.releaseSession(this._session),this.PAUSE()}finally{this._currentRun=void 0}}async _nextState(e,t){let i=e;for(;i&&!this._isDisposed;){this._log("setState to ",i);const s=this[i](t);this._onDidEnterState.fire(i),i=await s}}async CREATE_SESSION(e){h(this._session===void 0),h(this._editor.hasModel());let t=e.existingSession,i;e.position&&(i=G.lift(e.position).delta(-1),delete e.position);const s=this._showWidget(e.headless??t?.headless,!0,i);let a=v("create.fail","Failed to start editor chat");if(!t){const n=new F,o=w.once(this._messages.event)(r=>{this._log("state=_createSession) message received",r),r===32?(e.autoSend=!0,this._ui.value.widget.updateInfo(v("welcome.2","Getting ready..."))):n.cancel()});try{t=await this._inlineChatSessionService.createSession(this._editor,{editMode:this._getMode(),wholeRange:e.initialRange},n.token)}catch(r){(r instanceof z||r?.name===z.code)&&(a=r.message)}if(n.dispose(),o.dispose(),n.token.isCancellationRequested)return t&&this._inlineChatSessionService.releaseSession(t),"CANCEL"}if(delete e.initialRange,delete e.existingSession,!t)return pe.get(this._editor)?.showMessage(a,s),this._log("Failed to start editor chat"),"CANCEL";switch(await t.chatModel.waitForInitialization(),t.editMode){case A.Preview:this._strategy=this._instaService.createInstance(He,t,this._editor,this._ui.value);break;case A.Live:default:this._strategy=this._instaService.createInstance(Le,t,this._editor,this._ui.value,t.headless||this._configurationService.getValue(W.ZoneToolbar));break}return this._session=t,"INIT_UI"}async INIT_UI(e){h(this._session),h(this._strategy),Se.get(this._editor)?.hide(),this._sessionStore.clear();const t=this._editor.createDecorationsCollection(),i=()=>{const r=this._strategy?.getWholeRangeDecoration()??[];t.set(r),this._ctxEditing.set(!this._session?.wholeRange.trackedInitialRange.isEmpty())};this._sessionStore.add(ae(()=>{t.clear(),this._ctxEditing.reset()})),this._sessionStore.add(this._session.wholeRange.onDidChange(i)),i(),this._ui.value.widget.setChatModel(this._session.chatModel),this._updatePlaceholder();const s=!this._session.chatModel.hasRequests;this._ui.value.widget.updateToolbar(!0),this._ui.value.widget.toggleStatus(!s),this._showWidget(this._session.headless,s),this._sessionStore.add(this._editor.onDidChangeModel(r=>{const l=this._session?.chatModel.hasRequests?4:2;this._log("model changed, pause or cancel session",l,r),this._messages.fire(l)}));const a=this._editor.getModel()?.getAlternativeVersionId();this._sessionStore.add(this._editor.onDidChangeModelContent(r=>{if(this._session?.hunkData.ignoreTextModelNChanges||this._ctxUserDidEdit.set(a!==this._editor.getModel()?.getAlternativeVersionId()),this._session?.hunkData.ignoreTextModelNChanges||this._strategy?.hasFocus())return;const l=this._session.wholeRange;let g=!1;if(this._configurationService.getValue(W.FinishOnType))for(const{range:_}of r.changes)g=!k.areIntersectingOrTouching(_,l.value);this._session.recordExternalEditOccurred(g),g&&(this._log("text changed outside of whole range, FINISH session"),this.finishExistingSession())})),this._sessionStore.add(this._session.chatModel.onDidChange(async r=>{r.kind==="removeRequest"&&await this._session.undoChangesUntil(r.requestId)}));const n=this._createChatTextEditGroupState();let o=!1;for(const r of this._session.chatModel.getRequests()){if(!r.response)break;for(const l of r.response.response.value)if(!(l.kind!=="textEditGroup"||!P(l.uri,this._session.textModelN.uri))&&!l.state?.applied){for(const g of l.edits)this._makeChanges(g,void 0,!o),o=!0;l.state??=n}}if(o){const r=await this._editorWorkerService.computeDiff(this._session.textModel0.uri,this._session.textModelN.uri,{computeMoves:!1,maxComputationTimeMs:Number.MAX_SAFE_INTEGER,ignoreTrimWhitespace:!1},"advanced");this._session.wholeRange.fixup(r?.changes??[]),await this._session.hunkData.recompute(n,r),this._updateCtxResponseType()}return e.position=await this._strategy.renderChanges(),this._session.chatModel.requestInProgress?"SHOW_REQUEST":"WAIT_FOR_INPUT"}async WAIT_FOR_INPUT(e){h(this._session),h(this._strategy),this._updatePlaceholder(),e.message&&(this.updateInput(e.message),j.alert(e.message),delete e.message,this._showWidget(this._session.headless,!1));let t=0,i;const s=new J,a=new M;return a.add(this._session.chatModel.onDidChange(n=>{n.kind==="addRequest"&&(i=n.request,t=32,s.open())})),a.add(this._strategy.onDidAccept(()=>this.acceptSession())),a.add(this._strategy.onDidDiscard(()=>this.cancelSession())),a.add(w.once(this._messages.event)(n=>{this._log("state=_waitForInput) message received",n),t=n,s.open()})),e.autoSend&&(delete e.autoSend,this._showWidget(this._session.headless,!1),this._ui.value.widget.chatWidget.acceptInput()),await s.wait(),a.dispose(),t&18?"CANCEL":t&4?"PAUSE":t&1?(this._ui.value.widget.selectAll(!1),"DONE"):i?.message.text?"SHOW_REQUEST":"WAIT_FOR_INPUT"}async SHOW_REQUEST(e){h(this._session),h(this._strategy),h(this._session.chatModel.requestInProgress),this._ctxRequestInProgress.set(!0);const{chatModel:t}=this._session,i=t.lastRequest;h(i),h(i.response),this._showWidget(this._session.headless,!1),this._ui.value.widget.selectAll(!1),this._ui.value.widget.updateInfo(""),this._ui.value.widget.toggleStatus(!0);const{response:s}=i,a=new ee,n=new M,o=n.add(new F),r=new re,l=de.create(),g=new te;let _="WAIT_FOR_INPUT";n.add(w.once(this._messages.event)(d=>{this._log("state=_makeRequest) message received",d),this._chatService.cancelCurrentRequestForSession(t.sessionId),d&2?_="CANCEL":d&4?_="PAUSE":d&1&&(_="DONE")})),n.add(t.onDidChange(async d=>{if(d.kind==="removeRequest"&&d.requestId===i.id){o.cancel(),a.complete(),d.reason===Me.Resend?_="SHOW_REQUEST":_="CANCEL";return}if(d.kind==="move"){h(this._session);const p=(Y,...$)=>this._log("state=_showRequest) moving inline chat",Y,...$);p("move was requested",d.target,d.range);const O=b.fromRange(k.lift(d.range),ce.LTR),C=await this._editorService.openEditor({resource:d.target,options:{selection:O}},Re);if(!C){p("opening editor failed");return}const I=C.getControl();if(!le(I)||!I.hasModel()){p("new editor is either missing or not a code editor or does not have a model");return}if(this._inlineChatSessionService.getSession(I,d.target)){p("new editor ALREADY has a session");return}const K=await this._inlineChatSessionService.createSession(I,{editMode:this._getMode(),session:this._session},se.None);m.get(I)?.run({existingSession:K}),_="CANCEL",a.complete();return}})),n.add(this._ui.value.widget.chatWidget.inputEditor.onDidChangeModelContent(()=>{this._chatService.cancelCurrentRequestForSession(t.sessionId)}));let y=0,c=!0;const f=this._createChatTextEditGroupState();let E;const q=()=>{if(this._updateCtxResponseType(),E||(E=s.response.value.find(d=>d.kind==="textEditGroup"&&P(d.uri,this._session?.textModelN.uri))),E){E.state??=f;const d=E.edits,p=d.slice(y);p.length>0&&(this._log(`${this._session?.textModelN.uri.toString()} received ${p.length} edits`),y=d.length,r.update(l.elapsed()),l.reset(),g.queue(async()=>{const O=this._session.wholeRange.value.getStartPosition();for(const I of p)await this._makeChanges(I,{duration:r.value,token:o.token},c),c=!1;const C=this._session.wholeRange.value.getStartPosition();(!C.equals(O)||!this._ui.value.position?.equals(C))&&this._showWidget(this._session.headless,!1,C.delta(-1))}))}s.isCanceled?(o.cancel(),a.complete()):s.isComplete&&a.complete()};n.add(s.onDidChange(q)),q(),await a.p,await g.whenIdle(),s.result?.errorDetails&&await this._session.undoChangesUntil(s.requestId),n.dispose();const L=await this._editorWorkerService.computeDiff(this._session.textModel0.uri,this._session.textModelN.uri,{computeMoves:!1,maxComputationTimeMs:Number.MAX_SAFE_INTEGER,ignoreTrimWhitespace:!1},"advanced");this._session.wholeRange.fixup(L?.changes??[]),await this._session.hunkData.recompute(f,L),this._ctxRequestInProgress.set(!1);let x;if(!s.result?.errorDetails)if(s.response.value.length===0){const d=v("empty","No results, please refine your input and try again");this._ui.value.widget.updateStatus(d,{classes:["warn"]})}else this._ui.value.widget.updateStatus("");const R=await this._strategy.renderChanges();if(R){const d=this._editor.getSelection();d?.containsPosition(R)?R.lineNumber-d.startLineNumber>8&&(x=R):x=R}return this._showWidget(this._session.headless,!1,x),_}async PAUSE(){this._resetWidget(),this._strategy?.dispose?.(),this._session=void 0}async DONE(){h(this._session),h(this._strategy),this._sessionStore.clear();try{await this._strategy.apply()}catch(e){this._dialogService.error(v("err.apply","Failed to apply changes.",V(e))),this._log("FAILED to apply changes"),this._log(e)}this._inlineChatSessionService.releaseSession(this._session),this._resetWidget(),this._strategy?.dispose(),this._strategy=void 0,this._session=void 0}async CANCEL(){if(this._session){h(this._strategy),this._sessionStore.clear();const e=!this._session.isUnstashed&&this._session.chatModel.hasRequests&&this._session.hunkData.size===this._session.hunkData.pending;let t=[];try{t=this._strategy.cancel()}catch(i){this._dialogService.error(v("err.discard","Failed to discard changes.",V(i))),this._log("FAILED to discard changes"),this._log(i)}this._stashedSession.clear(),e?this._stashedSession.value=this._inlineChatSessionService.stashSession(this._session,this._editor,t):this._inlineChatSessionService.releaseSession(this._session)}this._resetWidget(),this._strategy?.dispose(),this._strategy=void 0,this._session=void 0}_showWidget(e=!1,t=!1,i){h(this._editor.hasModel()),this._ctxVisible.set(!0);let s;return i?s=i:this._ui.rawValue?.position?this._ui.rawValue?.position.lineNumber===1?s=this._ui.rawValue?.position.delta(-1):s=this._ui.rawValue?.position:s=this._editor.getSelection().getStartPosition().delta(-1),this._session&&!i&&(this._session.hasChangedText||this._session.chatModel.hasRequests)&&(s=this._session.wholeRange.trackedInitialRange.getStartPosition().delta(-1)),e||(this._ui.rawValue?.position?this._ui.value.updatePositionAndHeight(s):this._ui.value.show(s)),s}_resetWidget(){this._sessionStore.clear(),this._ctxVisible.reset(),this._ctxUserDidEdit.reset(),this._ui.rawValue?.hide(),this._editor.hasWidgetFocus()&&this._editor.focus()}_updateCtxResponseType(){if(!this._session){this._ctxResponseType.set(T.None);return}const e=i=>i.value.some(s=>s.kind==="textEditGroup"&&P(s.uri,this._session?.textModelN.uri));let t=T.None;for(const i of this._session.chatModel.getRequests())if(!(!i.response||i.response.isCanceled)&&(t=T.Messages,e(i.response.response))){t=T.MessagesAndEdits;break}this._ctxResponseType.set(t),this._ctxResponse.set(t!==T.None)}_createChatTextEditGroupState(){h(this._session);const e=new ge;return{sha1:e.canComputeSHA1(this._session.textModel0)?e.computeSHA1(this._session.textModel0):he(),applied:0}}async _makeChanges(e,t,i){h(this._session),h(this._strategy);const s=await this._editorWorkerService.computeMoreMinimalEdits(this._session.textModelN.uri,e);if(this._log("edits from PROVIDER and after making them MORE MINIMAL",this._session.agent.extensionId,e,s),s?.length===0)return;const n=(!t&&s?s:e).map(ue.asEditOperation),o={start:()=>this._session.hunkData.ignoreTextModelNChanges=!0,stop:()=>this._session.hunkData.ignoreTextModelNChanges=!1};this._inlineChatSavingService.markChanged(this._session),t?await this._strategy.makeProgressiveChanges(n,o,t,i):await this._strategy.makeChanges(n,o,i)}_forcedPlaceholder=void 0;_updatePlaceholder(){this._ui.value.widget.placeholder=this._getPlaceholderText()}_getPlaceholderText(){return this._forcedPlaceholder??this._session?.agent.description??""}showSaveHint(){if(!this._session)return;const e=v("savehint","Accept or discard changes to continue saving.");if(this._ui.value.widget.updateStatus(e,{classes:["warn"]}),this._ui.value.position)this._editor.revealLineInCenterIfOutsideViewport(this._ui.value.position.lineNumber);else{const t=this._session.hunkData.getInfo().find(i=>i.getState()===Ue.Pending);t&&this._editor.revealLineInCenterIfOutsideViewport(t.getRangesN()[0].startLineNumber)}}acceptInput(){return this.chatWidget.acceptInput()}updateInput(e,t=!0){if(this._ui.value.widget.chatWidget.setInput(e),t){const i=new b(1,1,Number.MAX_SAFE_INTEGER,1);this._ui.value.widget.chatWidget.inputEditor.setSelection(i)}}cancelCurrentRequest(){this._messages.fire(24)}arrowOut(e){if(this._ui.value.position&&this._editor.hasModel()){const{column:t}=this._editor.getPosition(),{lineNumber:i}=this._ui.value.position,s=e?i:i+1;this._editor.setPosition({lineNumber:s,column:t}),this._editor.focus()}}focus(){this._ui.value.widget.focus()}hasFocus(){return this._ui.value.widget.hasFocus()}async viewInChat(){if(!this._strategy||!this._session)return;let e=!1,t;const i=this._editor.getModel()?.uri,s=this._session.chatModel.getRequests();for(const n of s)if(n.response)for(const o of n.response.response.value)o.kind==="textEditGroup"&&P(o.uri,i)&&(e=e||!!o.state?.applied,t=o);const a=this._strategy.cancel();e&&(h(t),t.edits=[a],t.state.applied=0),await this._instaService.invokeFunction(Qe,this._session?.chatModel),this.cancelSession()}acceptSession(){const e=this._session?.chatModel.getRequests().at(-1)?.response;e&&this._chatService.notifyUserAction({sessionId:e.session.sessionId,requestId:e.requestId,agentId:e.agent?.id,command:e.slashCommand?.name,result:e.result,action:{kind:"inlineChat",action:"accepted"}}),this._messages.fire(1)}acceptHunk(e){return this._strategy?.performHunkAction(e,N.Accept)}discardHunk(e){return this._strategy?.performHunkAction(e,N.Discard)}toggleDiff(e){return this._strategy?.performHunkAction(e,N.ToggleDiff)}moveHunk(e){this.focus(),this._strategy?.performHunkAction(void 0,e?N.MoveNext:N.MovePrev)}async cancelSession(){const e=this._session?.chatModel.lastRequest?.response;e&&this._chatService.notifyUserAction({sessionId:e.session.sessionId,requestId:e.requestId,agentId:e.agent?.id,command:e.slashCommand?.name,result:e.result,action:{kind:"inlineChat",action:"discarded"}}),this._messages.fire(2)}finishExistingSession(){this._session&&(this._session.editMode===A.Preview?(this._log("finishing existing session, using CANCEL",this._session.editMode),this.cancelSession()):(this._log("finishing existing session, using APPLY",this._session.editMode),this.acceptSession()))}reportIssue(){const e=this._session?.chatModel.lastRequest?.response;e&&this._chatService.notifyUserAction({sessionId:e.session.sessionId,requestId:e.requestId,agentId:e.agent?.id,command:e.slashCommand?.name,result:e.result,action:{kind:"bug"}})}unstashLastSession(){const e=this._stashedSession.value?.unstash();return e&&this._inlineChatSavingService.markChanged(e),e}joinCurrentRun(){return this._currentRun}async reviewEdits(e,t,i){if(!this._editor.hasModel())return!1;const s=await this._inlineChatSessionService.createSession(this._editor,{editMode:A.Live,wholeRange:e,headless:!0},i);if(!s)return!1;const a=s.chatModel.addRequest({text:"DUMMY",parts:[]},{variables:[]},0),n=this.run({existingSession:s,headless:!0});await w.toPromise(w.filter(this._onDidEnterState.event,o=>o==="SHOW_REQUEST"));for await(const o of t)s.chatModel.acceptResponseProgress(a,{kind:"textEdit",uri:this._editor.getModel().uri,edits:[o]});return i.isCancellationRequested?s.chatModel.cancelRequest(a):s.chatModel.completeResponse(a),await n,!0}};m=H([u(1,Ce),u(2,qe),u(3,be),u(4,_e),u(5,ve),u(6,fe),u(7,Ie),u(8,Ee),u(9,Q),u(10,me),u(11,Pe)],m);async function Qe(S,e){const t=S.get(we),i=S.get(Q),s=await Te(t);if(s&&s.viewModel&&e){for(const a of e.getRequests().slice())await i.adoptRequest(s.viewModel.model.sessionId,a);s.focusLastMessage()}}export{m as InlineChatController,ss as InlineChatRunOptions,Ve as State};
