{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/inlineChat/test/browser/inlineChatController.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { equals } from '../../../../../base/common/arrays.js';\nimport { DeferredPromise, raceCancellation, timeout } from '../../../../../base/common/async.js';\nimport { Emitter, Event } from '../../../../../base/common/event.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { mock } from '../../../../../base/test/common/mock.js';\nimport { runWithFakedTimers } from '../../../../../base/test/common/timeTravelScheduler.js';\nimport { IActiveCodeEditor } from '../../../../../editor/browser/editorBrowser.js';\nimport { IDiffProviderFactoryService } from '../../../../../editor/browser/widget/diffEditor/diffProviderFactoryService.js';\nimport { EditOperation } from '../../../../../editor/common/core/editOperation.js';\nimport { Range } from '../../../../../editor/common/core/range.js';\nimport { EndOfLineSequence, ITextModel } from '../../../../../editor/common/model.js';\nimport { IEditorWorkerService } from '../../../../../editor/common/services/editorWorker.js';\nimport { IModelService } from '../../../../../editor/common/services/model.js';\nimport { TestDiffProviderFactoryService } from '../../../../../editor/test/browser/diff/testDiffProviderFactoryService.js';\nimport { instantiateTestCodeEditor } from '../../../../../editor/test/browser/testCodeEditor.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { TestConfigurationService } from '../../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { SyncDescriptor } from '../../../../../platform/instantiation/common/descriptors.js';\nimport { ServiceCollection } from '../../../../../platform/instantiation/common/serviceCollection.js';\nimport { TestInstantiationService } from '../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { MockContextKeyService } from '../../../../../platform/keybinding/test/common/mockKeybindingService.js';\nimport { IEditorProgressService, IProgressRunner } from '../../../../../platform/progress/common/progress.js';\nimport { IView, IViewDescriptorService } from '../../../../common/views.js';\nimport { AccessibilityVerbositySettingId } from '../../../accessibility/browser/accessibilityConfiguration.js';\nimport { IAccessibleViewService } from '../../../../../platform/accessibility/browser/accessibleView.js';\nimport { IChatAccessibilityService, IChatWidget, IChatWidgetService } from '../../../chat/browser/chat.js';\nimport { ChatAgentLocation, ChatAgentService, IChatAgentData, IChatAgentNameService, IChatAgentService } from '../../../chat/common/chatAgents.js';\nimport { IChatResponseViewModel } from '../../../chat/common/chatViewModel.js';\nimport { InlineChatController, State } from '../../browser/inlineChatController.js';\nimport { Session } from '../../browser/inlineChatSession.js';\nimport { CTX_INLINE_CHAT_RESPONSE_TYPE, CTX_INLINE_CHAT_USER_DID_EDIT, EditMode, InlineChatConfigKeys, InlineChatResponseType } from '../../common/inlineChat.js';\nimport { TestViewsService, workbenchInstantiationService } from '../../../../test/browser/workbenchTestServices.js';\nimport { IExtensionService, nullExtensionDescription } from '../../../../services/extensions/common/extensions.js';\nimport { IChatProgress, IChatService } from '../../../chat/common/chatService.js';\nimport { ChatService } from '../../../chat/common/chatServiceImpl.js';\nimport { IChatVariablesService } from '../../../chat/common/chatVariables.js';\nimport { ILogService, NullLogService } from '../../../../../platform/log/common/log.js';\nimport { ITelemetryService } from '../../../../../platform/telemetry/common/telemetry.js';\nimport { NullTelemetryService } from '../../../../../platform/telemetry/common/telemetryUtils.js';\nimport { TestContextService, TestExtensionService } from '../../../../test/common/workbenchTestServices.js';\nimport { IWorkspaceContextService } from '../../../../../platform/workspace/common/workspace.js';\nimport { IViewsService } from '../../../../services/views/common/viewsService.js';\nimport { ChatSlashCommandService, IChatSlashCommandService } from '../../../chat/common/chatSlashCommands.js';\nimport { ChatWidgetService } from '../../../chat/browser/chatWidget.js';\nimport { ChatWidgetHistoryService, IChatWidgetHistoryService } from '../../../chat/common/chatWidgetHistoryService.js';\nimport { IHoverService } from '../../../../../platform/hover/browser/hover.js';\nimport { NullHoverService } from '../../../../../platform/hover/test/browser/nullHoverService.js';\nimport { ChatVariablesService } from '../../../chat/browser/chatVariables.js';\nimport { ICommandService } from '../../../../../platform/commands/common/commands.js';\nimport { TestCommandService } from '../../../../../editor/test/browser/editorTestServices.js';\nimport { INotebookEditorService } from '../../../notebook/browser/services/notebookEditorService.js';\nimport { RerunAction } from '../../browser/inlineChatActions.js';\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { assertType } from '../../../../../base/common/types.js';\nimport { IWorkbenchAssignmentService } from '../../../../services/assignment/common/assignmentService.js';\nimport { NullWorkbenchAssignmentService } from '../../../../services/assignment/test/common/nullAssignmentService.js';\nimport { IInlineChatSavingService } from '../../browser/inlineChatSavingService.js';\nimport { IInlineChatSessionService } from '../../browser/inlineChatSessionService.js';\nimport { InlineChatSessionServiceImpl } from '../../browser/inlineChatSessionServiceImpl.js';\nimport { TestWorkerService } from './testWorkerService.js';\n\nsuite('InteractiveChatController', function () {\n\n\tconst agentData = {\n\t\textensionId: nullExtensionDescription.identifier,\n\t\tpublisherDisplayName: '',\n\t\textensionDisplayName: '',\n\t\textensionPublisherId: '',\n\t\t// id: 'testEditorAgent',\n\t\tname: 'testEditorAgent',\n\t\tisDefault: true,\n\t\tlocations: [ChatAgentLocation.Editor],\n\t\tmetadata: {},\n\t\tslashCommands: [],\n\t\tdisambiguation: [],\n\t};\n\n\tclass TestController extends InlineChatController {\n\n\t\tstatic INIT_SEQUENCE: readonly State[] = [State.CREATE_SESSION, State.INIT_UI, State.WAIT_FOR_INPUT];\n\t\tstatic INIT_SEQUENCE_AUTO_SEND: readonly State[] = [...this.INIT_SEQUENCE, State.SHOW_REQUEST, State.WAIT_FOR_INPUT];\n\n\n\t\treadonly onDidChangeState: Event<State> = this._onDidEnterState.event;\n\n\t\treadonly states: readonly State[] = [];\n\n\t\tawaitStates(states: readonly State[]): Promise<string | undefined> {\n\t\t\tconst actual: State[] = [];\n\n\t\t\treturn new Promise<string | undefined>((resolve, reject) => {\n\t\t\t\tconst d = this.onDidChangeState(state => {\n\t\t\t\t\tactual.push(state);\n\t\t\t\t\tif (equals(states, actual)) {\n\t\t\t\t\t\td.dispose();\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\td.dispose();\n\t\t\t\t\tresolve(`[${states.join(',')}] <> [${actual.join(',')}]`);\n\t\t\t\t}, 1000);\n\t\t\t});\n\t\t}\n\t}\n\n\tconst store = new DisposableStore();\n\tlet configurationService: TestConfigurationService;\n\tlet editor: IActiveCodeEditor;\n\tlet model: ITextModel;\n\tlet ctrl: TestController;\n\tlet contextKeyService: MockContextKeyService;\n\tlet chatService: IChatService;\n\tlet chatAgentService: IChatAgentService;\n\tlet inlineChatSessionService: IInlineChatSessionService;\n\tlet instaService: TestInstantiationService;\n\n\tlet chatWidget: IChatWidget;\n\n\tsetup(function () {\n\n\t\tconst serviceCollection = new ServiceCollection(\n\t\t\t[IConfigurationService, new TestConfigurationService()],\n\t\t\t[IChatVariablesService, new SyncDescriptor(ChatVariablesService)],\n\t\t\t[ILogService, new NullLogService()],\n\t\t\t[ITelemetryService, NullTelemetryService],\n\t\t\t[IHoverService, NullHoverService],\n\t\t\t[IExtensionService, new TestExtensionService()],\n\t\t\t[IContextKeyService, new MockContextKeyService()],\n\t\t\t[IViewsService, new class extends TestViewsService {\n\t\t\t\toverride async openView<T extends IView>(id: string, focus?: boolean | undefined): Promise<T | null> {\n\t\t\t\t\treturn { widget: chatWidget ?? null } as any;\n\t\t\t\t}\n\t\t\t}()],\n\t\t\t[IWorkspaceContextService, new TestContextService()],\n\t\t\t[IChatWidgetHistoryService, new SyncDescriptor(ChatWidgetHistoryService)],\n\t\t\t[IChatWidgetService, new SyncDescriptor(ChatWidgetService)],\n\t\t\t[IChatSlashCommandService, new SyncDescriptor(ChatSlashCommandService)],\n\t\t\t[IChatService, new SyncDescriptor(ChatService)],\n\t\t\t[IChatAgentNameService, new class extends mock<IChatAgentNameService>() {\n\t\t\t\toverride getAgentNameRestriction(chatAgentData: IChatAgentData): boolean {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}],\n\t\t\t[IEditorWorkerService, new SyncDescriptor(TestWorkerService)],\n\t\t\t[IContextKeyService, contextKeyService],\n\t\t\t[IChatAgentService, new SyncDescriptor(ChatAgentService)],\n\t\t\t[IDiffProviderFactoryService, new SyncDescriptor(TestDiffProviderFactoryService)],\n\t\t\t[IInlineChatSessionService, new SyncDescriptor(InlineChatSessionServiceImpl)],\n\t\t\t[ICommandService, new SyncDescriptor(TestCommandService)],\n\t\t\t[IInlineChatSavingService, new class extends mock<IInlineChatSavingService>() {\n\t\t\t\toverride markChanged(session: Session): void {\n\t\t\t\t\t// noop\n\t\t\t\t}\n\t\t\t}],\n\t\t\t[IEditorProgressService, new class extends mock<IEditorProgressService>() {\n\t\t\t\toverride show(total: unknown, delay?: unknown): IProgressRunner {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttotal() { },\n\t\t\t\t\t\tworked(value) { },\n\t\t\t\t\t\tdone() { },\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}],\n\t\t\t[IChatAccessibilityService, new class extends mock<IChatAccessibilityService>() {\n\t\t\t\toverride acceptResponse(response: IChatResponseViewModel | undefined, requestId: number): void { }\n\t\t\t\toverride acceptRequest(): number { return -1; }\n\t\t\t}],\n\t\t\t[IAccessibleViewService, new class extends mock<IAccessibleViewService>() {\n\t\t\t\toverride getOpenAriaHint(verbositySettingKey: AccessibilityVerbositySettingId): string | null {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}],\n\t\t\t[IConfigurationService, configurationService],\n\t\t\t[IViewDescriptorService, new class extends mock<IViewDescriptorService>() {\n\t\t\t\toverride onDidChangeLocation = Event.None;\n\t\t\t}],\n\t\t\t[INotebookEditorService, new class extends mock<INotebookEditorService>() {\n\t\t\t\toverride listNotebookEditors() { return []; }\n\t\t\t}],\n\t\t\t[IWorkbenchAssignmentService, new NullWorkbenchAssignmentService()]\n\t\t);\n\n\t\tinstaService = store.add((store.add(workbenchInstantiationService(undefined, store))).createChild(serviceCollection));\n\n\t\tconfigurationService = instaService.get(IConfigurationService) as TestConfigurationService;\n\t\tconfigurationService.setUserConfiguration('chat', { editor: { fontSize: 14, fontFamily: 'default' } });\n\t\tconfigurationService.setUserConfiguration('inlineChat', { mode: 'livePreview' });\n\t\tconfigurationService.setUserConfiguration('editor', {});\n\n\t\tcontextKeyService = instaService.get(IContextKeyService) as MockContextKeyService;\n\t\tchatService = instaService.get(IChatService);\n\t\tchatAgentService = instaService.get(IChatAgentService);\n\n\t\tinlineChatSessionService = store.add(instaService.get(IInlineChatSessionService));\n\n\t\tmodel = store.add(instaService.get(IModelService).createModel('Hello\\nWorld\\nHello Again\\nHello World\\n', null));\n\t\tmodel.setEOL(EndOfLineSequence.LF);\n\t\teditor = store.add(instantiateTestCodeEditor(instaService, model));\n\n\t\tstore.add(chatAgentService.registerDynamicAgent({ id: 'testEditorAgent', ...agentData, }, {\n\t\t\tasync invoke(request, progress, history, token) {\n\t\t\t\tprogress({\n\t\t\t\t\tkind: 'textEdit',\n\t\t\t\t\turi: model.uri,\n\t\t\t\t\tedits: [{\n\t\t\t\t\t\trange: new Range(1, 1, 1, 1),\n\t\t\t\t\t\ttext: request.message\n\t\t\t\t\t}]\n\t\t\t\t});\n\t\t\t\treturn {};\n\t\t\t},\n\t\t}));\n\n\t});\n\n\tteardown(function () {\n\t\tstore.clear();\n\t\tctrl?.dispose();\n\t});\n\n\t// TODO@jrieken re-enable, looks like List/ChatWidget is leaking\n\t// ensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('creation, not showing anything', function () {\n\t\tctrl = instaService.createInstance(TestController, editor);\n\t\tassert.ok(ctrl);\n\t\tassert.strictEqual(ctrl.getWidgetPosition(), undefined);\n\t});\n\n\ttest('run (show/hide)', async function () {\n\t\tctrl = instaService.createInstance(TestController, editor);\n\t\tconst actualStates = ctrl.awaitStates(TestController.INIT_SEQUENCE_AUTO_SEND);\n\t\tconst run = ctrl.run({ message: 'Hello', autoSend: true });\n\t\tassert.strictEqual(await actualStates, undefined);\n\t\tassert.ok(ctrl.getWidgetPosition() !== undefined);\n\t\tawait ctrl.cancelSession();\n\n\t\tawait run;\n\n\t\tassert.ok(ctrl.getWidgetPosition() === undefined);\n\t});\n\n\ttest('wholeRange does not expand to whole lines, editor selection default', async function () {\n\n\t\teditor.setSelection(new Range(1, 1, 1, 3));\n\t\tctrl = instaService.createInstance(TestController, editor);\n\n\t\tctrl.run({});\n\t\tawait Event.toPromise(Event.filter(ctrl.onDidChangeState, e => e === State.WAIT_FOR_INPUT));\n\n\t\tconst session = inlineChatSessionService.getSession(editor, editor.getModel()!.uri);\n\t\tassert.ok(session);\n\t\tassert.deepStrictEqual(session.wholeRange.value, new Range(1, 1, 1, 3));\n\n\t\tawait ctrl.cancelSession();\n\t});\n\n\ttest('typing outside of wholeRange finishes session', async function () {\n\n\t\tconfigurationService.setUserConfiguration(InlineChatConfigKeys.FinishOnType, true);\n\n\t\tctrl = instaService.createInstance(TestController, editor);\n\t\tconst actualStates = ctrl.awaitStates(TestController.INIT_SEQUENCE_AUTO_SEND);\n\t\tconst r = ctrl.run({ message: 'Hello', autoSend: true });\n\n\t\tassert.strictEqual(await actualStates, undefined);\n\n\t\tconst session = inlineChatSessionService.getSession(editor, editor.getModel()!.uri);\n\t\tassert.ok(session);\n\t\tassert.deepStrictEqual(session.wholeRange.value, new Range(1, 1, 1, 10 /* line length */));\n\n\t\teditor.setSelection(new Range(2, 1, 2, 1));\n\t\teditor.trigger('test', 'type', { text: 'a' });\n\n\t\tassert.strictEqual(await ctrl.awaitStates([State.ACCEPT]), undefined);\n\t\tawait r;\n\t});\n\n\ttest('\\'whole range\\' isn\\'t updated for edits outside whole range #4346', async function () {\n\n\t\teditor.setSelection(new Range(3, 1, 3, 3));\n\n\t\tstore.add(chatAgentService.registerDynamicAgent({\n\t\t\tid: 'testEditorAgent2',\n\t\t\t...agentData\n\t\t}, {\n\t\t\tasync invoke(request, progress, history, token) {\n\t\t\t\tprogress({\n\t\t\t\t\tkind: 'textEdit',\n\t\t\t\t\turi: editor.getModel().uri,\n\t\t\t\t\tedits: [{\n\t\t\t\t\t\trange: new Range(1, 1, 1, 1), // EDIT happens outside of whole range\n\t\t\t\t\t\ttext: `${request.message}\\n${request.message}`\n\t\t\t\t\t}]\n\t\t\t\t});\n\n\t\t\t\treturn {};\n\t\t\t},\n\t\t}));\n\n\t\tctrl = instaService.createInstance(TestController, editor);\n\t\tconst p = ctrl.awaitStates(TestController.INIT_SEQUENCE);\n\t\tconst r = ctrl.run({ message: 'GENGEN', autoSend: false });\n\n\t\tassert.strictEqual(await p, undefined);\n\n\n\t\tconst session = inlineChatSessionService.getSession(editor, editor.getModel()!.uri);\n\t\tassert.ok(session);\n\t\tassert.deepStrictEqual(session.wholeRange.value, new Range(3, 1, 3, 3)); // initial\n\n\t\tctrl.chatWidget.setInput('GENGEN');\n\t\tctrl.acceptInput();\n\t\tassert.strictEqual(await ctrl.awaitStates([State.SHOW_REQUEST, State.WAIT_FOR_INPUT]), undefined);\n\n\t\tassert.deepStrictEqual(session.wholeRange.value, new Range(1, 1, 4, 3));\n\n\t\tawait ctrl.cancelSession();\n\t\tawait r;\n\t});\n\n\ttest('Stuck inline chat widget #211', async function () {\n\n\t\tstore.add(chatAgentService.registerDynamicAgent({\n\t\t\tid: 'testEditorAgent2',\n\t\t\t...agentData\n\t\t}, {\n\t\t\tasync invoke(request, progress, history, token) {\n\t\t\t\treturn new Promise<never>(() => { });\n\t\t\t},\n\t\t}));\n\n\t\tctrl = instaService.createInstance(TestController, editor);\n\t\tconst p = ctrl.awaitStates([...TestController.INIT_SEQUENCE, State.SHOW_REQUEST]);\n\t\tconst r = ctrl.run({ message: 'Hello', autoSend: true });\n\n\t\tassert.strictEqual(await p, undefined);\n\n\t\tctrl.acceptSession();\n\n\t\tawait r;\n\t\tassert.strictEqual(ctrl.getWidgetPosition(), undefined);\n\t});\n\n\ttest('[Bug] Inline Chat\\'s streaming pushed broken iterations to the undo stack #2403', async function () {\n\n\t\tstore.add(chatAgentService.registerDynamicAgent({\n\t\t\tid: 'testEditorAgent2',\n\t\t\t...agentData\n\t\t}, {\n\t\t\tasync invoke(request, progress, history, token) {\n\n\t\t\t\tprogress({ kind: 'textEdit', uri: model.uri, edits: [{ range: new Range(1, 1, 1, 1), text: 'hEllo1\\n' }] });\n\t\t\t\tprogress({ kind: 'textEdit', uri: model.uri, edits: [{ range: new Range(2, 1, 2, 1), text: 'hEllo2\\n' }] });\n\t\t\t\tprogress({ kind: 'textEdit', uri: model.uri, edits: [{ range: new Range(1, 1, 1000, 1), text: 'Hello1\\nHello2\\n' }] });\n\n\t\t\t\treturn {};\n\t\t\t},\n\t\t}));\n\n\t\tconst valueThen = editor.getModel().getValue();\n\n\t\tctrl = instaService.createInstance(TestController, editor);\n\t\tconst p = ctrl.awaitStates([...TestController.INIT_SEQUENCE, State.SHOW_REQUEST, State.WAIT_FOR_INPUT]);\n\t\tconst r = ctrl.run({ message: 'Hello', autoSend: true });\n\t\tassert.strictEqual(await p, undefined);\n\t\tctrl.acceptSession();\n\t\tawait r;\n\n\t\tassert.strictEqual(editor.getModel().getValue(), 'Hello1\\nHello2\\n');\n\n\t\teditor.getModel().undo();\n\t\tassert.strictEqual(editor.getModel().getValue(), valueThen);\n\t});\n\n\n\n\ttest.skip('UI is streaming edits minutes after the response is finished #3345', async function () {\n\n\t\tconfigurationService.setUserConfiguration(InlineChatConfigKeys.Mode, EditMode.Live);\n\n\t\treturn runWithFakedTimers({ maxTaskCount: Number.MAX_SAFE_INTEGER }, async () => {\n\n\t\t\tstore.add(chatAgentService.registerDynamicAgent({\n\t\t\t\tid: 'testEditorAgent2',\n\t\t\t\t...agentData\n\t\t\t}, {\n\t\t\t\tasync invoke(request, progress, history, token) {\n\n\t\t\t\t\tconst text = '${CSI}#a\\n${CSI}#b\\n${CSI}#c\\n';\n\n\t\t\t\t\tawait timeout(10);\n\t\t\t\t\tprogress({ kind: 'textEdit', uri: model.uri, edits: [{ range: new Range(1, 1, 1, 1), text: text }] });\n\n\t\t\t\t\tawait timeout(10);\n\t\t\t\t\tprogress({ kind: 'textEdit', uri: model.uri, edits: [{ range: new Range(1, 1, 1, 1), text: text.repeat(1000) + 'DONE' }] });\n\n\t\t\t\t\tthrow new Error('Too long');\n\t\t\t\t},\n\t\t\t}));\n\n\n\t\t\t// let modelChangeCounter = 0;\n\t\t\t// store.add(editor.getModel().onDidChangeContent(() => { modelChangeCounter++; }));\n\n\t\t\tctrl = instaService.createInstance(TestController, editor);\n\t\t\tconst p = ctrl.awaitStates([...TestController.INIT_SEQUENCE, State.SHOW_REQUEST, State.WAIT_FOR_INPUT]);\n\t\t\tconst r = ctrl.run({ message: 'Hello', autoSend: true });\n\t\t\tassert.strictEqual(await p, undefined);\n\n\t\t\t// assert.ok(modelChangeCounter > 0, modelChangeCounter.toString()); // some changes have been made\n\t\t\t// const modelChangeCounterNow = modelChangeCounter;\n\n\t\t\tassert.ok(!editor.getModel().getValue().includes('DONE'));\n\t\t\tawait timeout(10);\n\n\t\t\t// assert.strictEqual(modelChangeCounterNow, modelChangeCounter);\n\t\t\tassert.ok(!editor.getModel().getValue().includes('DONE'));\n\n\t\t\tawait ctrl.cancelSession();\n\t\t\tawait r;\n\t\t});\n\t});\n\n\ttest('escape doesn\\'t remove code added from inline editor chat #3523 1/2', async function () {\n\n\n\t\t// NO manual edits -> cancel\n\t\tctrl = instaService.createInstance(TestController, editor);\n\t\tconst p = ctrl.awaitStates([...TestController.INIT_SEQUENCE, State.SHOW_REQUEST, State.WAIT_FOR_INPUT]);\n\t\tconst r = ctrl.run({ message: 'GENERATED', autoSend: true });\n\t\tassert.strictEqual(await p, undefined);\n\n\t\tassert.ok(model.getValue().includes('GENERATED'));\n\t\tassert.strictEqual(contextKeyService.getContextKeyValue(CTX_INLINE_CHAT_USER_DID_EDIT.key), undefined);\n\t\tctrl.cancelSession();\n\t\tawait r;\n\t\tassert.ok(!model.getValue().includes('GENERATED'));\n\n\t});\n\n\ttest('escape doesn\\'t remove code added from inline editor chat #3523, 2/2', async function () {\n\n\t\t// manual edits -> finish\n\t\tctrl = instaService.createInstance(TestController, editor);\n\t\tconst p = ctrl.awaitStates([...TestController.INIT_SEQUENCE, State.SHOW_REQUEST, State.WAIT_FOR_INPUT]);\n\t\tconst r = ctrl.run({ message: 'GENERATED', autoSend: true });\n\t\tassert.strictEqual(await p, undefined);\n\n\t\tassert.ok(model.getValue().includes('GENERATED'));\n\n\t\teditor.executeEdits('test', [EditOperation.insert(model.getFullModelRange().getEndPosition(), 'MANUAL')]);\n\t\tassert.strictEqual(contextKeyService.getContextKeyValue(CTX_INLINE_CHAT_USER_DID_EDIT.key), true);\n\n\t\tctrl.finishExistingSession();\n\t\tawait r;\n\t\tassert.ok(model.getValue().includes('GENERATED'));\n\t\tassert.ok(model.getValue().includes('MANUAL'));\n\n\t});\n\n\ttest('re-run should discard pending edits', async function () {\n\n\t\tlet count = 1;\n\n\t\tstore.add(chatAgentService.registerDynamicAgent({\n\t\t\tid: 'testEditorAgent2',\n\t\t\t...agentData\n\t\t}, {\n\t\t\tasync invoke(request, progress, history, token) {\n\t\t\t\tprogress({ kind: 'textEdit', uri: model.uri, edits: [{ range: new Range(1, 1, 1, 1), text: request.message + (count++) }] });\n\t\t\t\treturn {};\n\t\t\t},\n\t\t}));\n\n\t\tctrl = instaService.createInstance(TestController, editor);\n\t\tconst rerun = new RerunAction();\n\n\t\tmodel.setValue('');\n\n\t\tconst p = ctrl.awaitStates([...TestController.INIT_SEQUENCE, State.SHOW_REQUEST, State.WAIT_FOR_INPUT]);\n\t\tconst r = ctrl.run({ message: 'PROMPT_', autoSend: true });\n\t\tassert.strictEqual(await p, undefined);\n\n\n\t\tassert.strictEqual(model.getValue(), 'PROMPT_1');\n\n\t\tconst p2 = ctrl.awaitStates([State.SHOW_REQUEST, State.WAIT_FOR_INPUT]);\n\t\tawait instaService.invokeFunction(rerun.runInlineChatCommand, ctrl, editor);\n\n\t\tassert.strictEqual(await p2, undefined);\n\n\t\tassert.strictEqual(model.getValue(), 'PROMPT_2');\n\t\tctrl.finishExistingSession();\n\t\tawait r;\n\t});\n\n\ttest('Retry undoes all changes, not just those from the request#5736', async function () {\n\n\t\tconst text = [\n\t\t\t'eins-',\n\t\t\t'zwei-',\n\t\t\t'drei-'\n\t\t];\n\n\t\tstore.add(chatAgentService.registerDynamicAgent({\n\t\t\tid: 'testEditorAgent2',\n\t\t\t...agentData\n\t\t}, {\n\t\t\tasync invoke(request, progress, history, token) {\n\t\t\t\tprogress({ kind: 'textEdit', uri: model.uri, edits: [{ range: new Range(1, 1, 1, 1), text: text.shift() ?? '' }] });\n\t\t\t\treturn {};\n\t\t\t},\n\t\t}));\n\n\t\tctrl = instaService.createInstance(TestController, editor);\n\t\tconst rerun = new RerunAction();\n\n\t\tmodel.setValue('');\n\n\t\t// REQUEST 1\n\t\tconst p = ctrl.awaitStates([...TestController.INIT_SEQUENCE, State.SHOW_REQUEST, State.WAIT_FOR_INPUT]);\n\t\tconst r = ctrl.run({ message: '1', autoSend: true });\n\t\tassert.strictEqual(await p, undefined);\n\n\t\tassert.strictEqual(model.getValue(), 'eins-');\n\n\t\t// REQUEST 2\n\t\tconst p2 = ctrl.awaitStates([State.SHOW_REQUEST, State.WAIT_FOR_INPUT]);\n\t\tctrl.chatWidget.setInput('1');\n\t\tawait ctrl.acceptInput();\n\t\tassert.strictEqual(await p2, undefined);\n\n\t\tassert.strictEqual(model.getValue(), 'zwei-eins-');\n\n\t\t// REQUEST 2 - RERUN\n\t\tconst p3 = ctrl.awaitStates([State.SHOW_REQUEST, State.WAIT_FOR_INPUT]);\n\t\tawait instaService.invokeFunction(rerun.runInlineChatCommand, ctrl, editor);\n\t\tassert.strictEqual(await p3, undefined);\n\n\t\tassert.strictEqual(model.getValue(), 'drei-eins-');\n\n\t\tctrl.finishExistingSession();\n\t\tawait r;\n\n\t});\n\n\ttest('moving inline chat to another model undoes changes', async function () {\n\t\tconst text = [\n\t\t\t'eins\\n',\n\t\t\t'zwei\\n'\n\t\t];\n\n\t\tstore.add(chatAgentService.registerDynamicAgent({\n\t\t\tid: 'testEditorAgent2',\n\t\t\t...agentData\n\t\t}, {\n\t\t\tasync invoke(request, progress, history, token) {\n\t\t\t\tprogress({ kind: 'textEdit', uri: model.uri, edits: [{ range: new Range(1, 1, 1, 1), text: text.shift() ?? '' }] });\n\t\t\t\treturn {};\n\t\t\t},\n\t\t}));\n\t\tctrl = instaService.createInstance(TestController, editor);\n\n\t\t// REQUEST 1\n\t\tconst p = ctrl.awaitStates([...TestController.INIT_SEQUENCE, State.SHOW_REQUEST, State.WAIT_FOR_INPUT]);\n\t\tctrl.run({ message: '1', autoSend: true });\n\t\tassert.strictEqual(await p, undefined);\n\n\t\tassert.strictEqual(model.getValue(), 'eins\\nHello\\nWorld\\nHello Again\\nHello World\\n');\n\n\t\tconst targetModel = chatService.startSession(ChatAgentLocation.Editor, CancellationToken.None)!;\n\t\tstore.add(targetModel);\n\t\tchatWidget = new class extends mock<IChatWidget>() {\n\t\t\toverride get viewModel() {\n\t\t\t\treturn { model: targetModel } as any;\n\t\t\t}\n\t\t\toverride focusLastMessage() { }\n\t\t};\n\n\t\tconst r = ctrl.joinCurrentRun();\n\t\tawait ctrl.viewInChat();\n\n\t\tassert.strictEqual(model.getValue(), 'Hello\\nWorld\\nHello Again\\nHello World\\n');\n\t\tawait r;\n\t});\n\n\ttest('moving inline chat to another model undoes changes (2 requests)', async function () {\n\t\tconst text = [\n\t\t\t'eins\\n',\n\t\t\t'zwei\\n'\n\t\t];\n\n\t\tstore.add(chatAgentService.registerDynamicAgent({\n\t\t\tid: 'testEditorAgent2',\n\t\t\t...agentData\n\t\t}, {\n\t\t\tasync invoke(request, progress, history, token) {\n\t\t\t\tprogress({ kind: 'textEdit', uri: model.uri, edits: [{ range: new Range(1, 1, 1, 1), text: text.shift() ?? '' }] });\n\t\t\t\treturn {};\n\t\t\t},\n\t\t}));\n\t\tctrl = instaService.createInstance(TestController, editor);\n\n\t\t// REQUEST 1\n\t\tconst p = ctrl.awaitStates([...TestController.INIT_SEQUENCE, State.SHOW_REQUEST, State.WAIT_FOR_INPUT]);\n\t\tctrl.run({ message: '1', autoSend: true });\n\t\tassert.strictEqual(await p, undefined);\n\n\t\tassert.strictEqual(model.getValue(), 'eins\\nHello\\nWorld\\nHello Again\\nHello World\\n');\n\n\t\t// REQUEST 2\n\t\tconst p2 = ctrl.awaitStates([State.SHOW_REQUEST, State.WAIT_FOR_INPUT]);\n\t\tctrl.chatWidget.setInput('1');\n\t\tawait ctrl.acceptInput();\n\t\tassert.strictEqual(await p2, undefined);\n\n\t\tassert.strictEqual(model.getValue(), 'zwei\\neins\\nHello\\nWorld\\nHello Again\\nHello World\\n');\n\n\t\tconst targetModel = chatService.startSession(ChatAgentLocation.Editor, CancellationToken.None)!;\n\t\tstore.add(targetModel);\n\t\tchatWidget = new class extends mock<IChatWidget>() {\n\t\t\toverride get viewModel() {\n\t\t\t\treturn { model: targetModel } as any;\n\t\t\t}\n\t\t\toverride focusLastMessage() { }\n\t\t};\n\n\t\tconst r = ctrl.joinCurrentRun();\n\n\t\tawait ctrl.viewInChat();\n\n\t\tassert.strictEqual(model.getValue(), 'Hello\\nWorld\\nHello Again\\nHello World\\n');\n\n\t\tawait r;\n\t});\n\n\ttest('Clicking \"re-run without /doc\" while a request is in progress closes the widget #5997', async function () {\n\n\t\tmodel.setValue('');\n\n\t\tlet count = 0;\n\t\tconst commandDetection: (boolean | undefined)[] = [];\n\n\t\tconst onDidInvoke = new Emitter<void>();\n\n\t\tstore.add(chatAgentService.registerDynamicAgent({\n\t\t\tid: 'testEditorAgent2',\n\t\t\t...agentData\n\t\t}, {\n\t\t\tasync invoke(request, progress, history, token) {\n\t\t\t\tqueueMicrotask(() => onDidInvoke.fire());\n\t\t\t\tcommandDetection.push(request.enableCommandDetection);\n\t\t\t\tprogress({ kind: 'textEdit', uri: model.uri, edits: [{ range: new Range(1, 1, 1, 1), text: request.message + (count++) }] });\n\n\t\t\t\tif (count === 1) {\n\t\t\t\t\t// FIRST call waits for cancellation\n\t\t\t\t\tawait raceCancellation(new Promise<never>(() => { }), token);\n\t\t\t\t} else {\n\t\t\t\t\tawait timeout(10);\n\t\t\t\t}\n\n\t\t\t\treturn {};\n\t\t\t},\n\t\t}));\n\t\tctrl = instaService.createInstance(TestController, editor);\n\n\t\t// REQUEST 1\n\t\t// const p = ctrl.awaitStates([...TestController.INIT_SEQUENCE, State.SHOW_REQUEST]);\n\t\tconst p = Event.toPromise(onDidInvoke.event);\n\t\tctrl.run({ message: 'Hello-', autoSend: true });\n\n\t\tawait p;\n\n\t\t// assert.strictEqual(await p, undefined);\n\n\t\t// resend pending request without command detection\n\t\tconst request = ctrl.chatWidget.viewModel?.model.getRequests().at(-1);\n\t\tassertType(request);\n\t\tconst p2 = Event.toPromise(onDidInvoke.event);\n\t\tconst p3 = ctrl.awaitStates([State.SHOW_REQUEST, State.WAIT_FOR_INPUT]);\n\t\tchatService.resendRequest(request, { noCommandDetection: true, attempt: request.attempt + 1, location: ChatAgentLocation.Editor });\n\n\t\tawait p2;\n\t\tassert.strictEqual(await p3, undefined);\n\n\t\tassert.deepStrictEqual(commandDetection, [true, false]);\n\t\tassert.strictEqual(model.getValue(), 'Hello-1');\n\t});\n\n\ttest('Re-run without after request is done', async function () {\n\n\t\tmodel.setValue('');\n\n\t\tlet count = 0;\n\t\tconst commandDetection: (boolean | undefined)[] = [];\n\n\t\tstore.add(chatAgentService.registerDynamicAgent({\n\t\t\tid: 'testEditorAgent2',\n\t\t\t...agentData\n\t\t}, {\n\t\t\tasync invoke(request, progress, history, token) {\n\t\t\t\tcommandDetection.push(request.enableCommandDetection);\n\t\t\t\tprogress({ kind: 'textEdit', uri: model.uri, edits: [{ range: new Range(1, 1, 1, 1), text: request.message + (count++) }] });\n\t\t\t\treturn {};\n\t\t\t},\n\t\t}));\n\t\tctrl = instaService.createInstance(TestController, editor);\n\n\t\t// REQUEST 1\n\t\tconst p = ctrl.awaitStates([...TestController.INIT_SEQUENCE, State.SHOW_REQUEST, State.WAIT_FOR_INPUT]);\n\t\tctrl.run({ message: 'Hello-', autoSend: true });\n\t\tassert.strictEqual(await p, undefined);\n\n\t\t// resend pending request without command detection\n\t\tconst request = ctrl.chatWidget.viewModel?.model.getRequests().at(-1);\n\t\tassertType(request);\n\t\tconst p2 = ctrl.awaitStates([State.SHOW_REQUEST, State.WAIT_FOR_INPUT]);\n\t\tchatService.resendRequest(request, { noCommandDetection: true, attempt: request.attempt + 1, location: ChatAgentLocation.Editor });\n\n\t\tassert.strictEqual(await p2, undefined);\n\n\t\tassert.deepStrictEqual(commandDetection, [true, false]);\n\t\tassert.strictEqual(model.getValue(), 'Hello-1');\n\t});\n\n\n\ttest('Inline: Pressing Rerun request while the response streams breaks the response #5442', async function () {\n\n\t\tmodel.setValue('two\\none\\n');\n\n\t\tconst attempts: (number | undefined)[] = [];\n\n\t\tconst deferred = new DeferredPromise<void>();\n\n\t\tstore.add(chatAgentService.registerDynamicAgent({\n\t\t\tid: 'testEditorAgent2',\n\t\t\t...agentData\n\t\t}, {\n\t\t\tasync invoke(request, progress, history, token) {\n\n\t\t\t\tattempts.push(request.attempt);\n\n\t\t\t\tprogress({ kind: 'textEdit', uri: model.uri, edits: [{ range: new Range(1, 1, 1, 1), text: `TRY:${request.attempt}\\n` }] });\n\t\t\t\tawait raceCancellation(deferred.p, token);\n\t\t\t\tdeferred.complete();\n\t\t\t\tawait timeout(10);\n\t\t\t\treturn {};\n\t\t\t},\n\t\t}));\n\n\t\tctrl = instaService.createInstance(TestController, editor);\n\n\t\t// REQUEST 1\n\t\tconst p = ctrl.awaitStates([...TestController.INIT_SEQUENCE, State.SHOW_REQUEST]);\n\t\tctrl.run({ message: 'Hello-', autoSend: true });\n\t\tassert.strictEqual(await p, undefined);\n\t\tawait timeout(10);\n\t\tassert.deepStrictEqual(attempts, [0]);\n\n\t\t// RERUN (cancel, undo, redo)\n\t\tconst p2 = ctrl.awaitStates([State.SHOW_REQUEST, State.WAIT_FOR_INPUT]);\n\t\tconst rerun = new RerunAction();\n\t\tawait instaService.invokeFunction(rerun.runInlineChatCommand, ctrl, editor);\n\t\tassert.strictEqual(await p2, undefined);\n\n\t\tassert.deepStrictEqual(attempts, [0, 1]);\n\n\t\tassert.strictEqual(model.getValue(), 'TRY:1\\ntwo\\none\\n');\n\n\t});\n\n\ttest('Stopping/cancelling a request should NOT undo its changes', async function () {\n\n\t\tmodel.setValue('World');\n\n\t\tconst deferred = new DeferredPromise<void>();\n\t\tlet progress: ((part: IChatProgress) => void) | undefined;\n\n\t\tstore.add(chatAgentService.registerDynamicAgent({\n\t\t\tid: 'testEditorAgent2',\n\t\t\t...agentData\n\t\t}, {\n\t\t\tasync invoke(request, _progress, history, token) {\n\n\t\t\t\tprogress = _progress;\n\t\t\t\tawait deferred.p;\n\t\t\t\treturn {};\n\t\t\t},\n\t\t}));\n\n\t\tctrl = instaService.createInstance(TestController, editor);\n\n\t\t// REQUEST 1\n\t\tconst p = ctrl.awaitStates([...TestController.INIT_SEQUENCE, State.SHOW_REQUEST]);\n\t\tctrl.run({ message: 'Hello', autoSend: true });\n\t\tawait timeout(10);\n\t\tassert.strictEqual(await p, undefined);\n\n\t\tassertType(progress);\n\n\t\tconst modelChange = new Promise<void>(resolve => model.onDidChangeContent(() => resolve()));\n\n\t\tprogress({ kind: 'textEdit', uri: model.uri, edits: [{ range: new Range(1, 1, 1, 1), text: 'Hello-Hello' }] });\n\n\t\tawait modelChange;\n\t\tassert.strictEqual(model.getValue(), 'HelloWorld'); // first word has been streamed\n\n\t\tconst p2 = ctrl.awaitStates([State.WAIT_FOR_INPUT]);\n\t\tchatService.cancelCurrentRequestForSession(ctrl.chatWidget.viewModel!.model.sessionId);\n\t\tassert.strictEqual(await p2, undefined);\n\n\t\tassert.strictEqual(model.getValue(), 'HelloWorld'); // CANCEL just stops the request and progressive typing but doesn't undo\n\n\t});\n\n\ttest('Apply Edits from existing session w/ edits', async function () {\n\n\t\tmodel.setValue('');\n\n\t\tconst newSession = await inlineChatSessionService.createSession(editor, { editMode: EditMode.Live }, CancellationToken.None);\n\t\tassertType(newSession);\n\n\t\tawait chatService.sendRequest(newSession.chatModel.sessionId, 'Existing', { location: ChatAgentLocation.Editor });\n\n\n\t\tassert.strictEqual(newSession.chatModel.requestInProgress, true);\n\n\t\tconst response = newSession.chatModel.lastRequest?.response;\n\t\tassertType(response);\n\n\t\tawait new Promise(resolve => {\n\t\t\tif (response.isComplete) {\n\t\t\t\tresolve(undefined);\n\t\t\t}\n\t\t\tconst d = response.onDidChange(() => {\n\t\t\t\tif (response.isComplete) {\n\t\t\t\t\td.dispose();\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tctrl = instaService.createInstance(TestController, editor);\n\t\tconst p = ctrl.awaitStates([...TestController.INIT_SEQUENCE]);\n\t\tctrl.run({ existingSession: newSession });\n\n\t\tassert.strictEqual(await p, undefined);\n\n\t\tassert.strictEqual(model.getValue(), 'Existing');\n\n\t});\n\n\ttest('Undo on error (2 rounds)', async function () {\n\n\t\treturn runWithFakedTimers({}, async () => {\n\n\n\t\t\tstore.add(chatAgentService.registerDynamicAgent({ id: 'testEditorAgent', ...agentData, }, {\n\t\t\t\tasync invoke(request, progress, history, token) {\n\n\t\t\t\t\tprogress({\n\t\t\t\t\t\tkind: 'textEdit',\n\t\t\t\t\t\turi: model.uri,\n\t\t\t\t\t\tedits: [{\n\t\t\t\t\t\t\trange: new Range(1, 1, 1, 1),\n\t\t\t\t\t\t\ttext: request.message\n\t\t\t\t\t\t}]\n\t\t\t\t\t});\n\n\t\t\t\t\tif (request.message === 'two') {\n\t\t\t\t\t\tawait timeout(100); // give edit a chance\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\terrorDetails: { message: 'FAILED' }\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\treturn {};\n\t\t\t\t},\n\t\t\t}));\n\n\t\t\tmodel.setValue('');\n\n\t\t\t// ROUND 1\n\n\t\t\tctrl = instaService.createInstance(TestController, editor);\n\t\t\tconst p = ctrl.awaitStates([...TestController.INIT_SEQUENCE, State.SHOW_REQUEST, State.WAIT_FOR_INPUT]);\n\t\t\tctrl.run({ autoSend: true, message: 'one' });\n\t\t\tassert.strictEqual(await p, undefined);\n\t\t\tassert.strictEqual(model.getValue(), 'one');\n\n\n\t\t\t// ROUND 2\n\n\t\t\tconst p2 = ctrl.awaitStates([State.SHOW_REQUEST, State.WAIT_FOR_INPUT]);\n\t\t\tconst values = new Set<string>();\n\t\t\tstore.add(model.onDidChangeContent(() => values.add(model.getValue())));\n\t\t\tctrl.chatWidget.acceptInput('two'); // WILL Trigger a failure\n\t\t\tassert.strictEqual(await p2, undefined);\n\t\t\tassert.strictEqual(model.getValue(), 'one'); // undone\n\t\t\tassert.ok(values.has('twoone')); // we had but the change got undone\n\t\t});\n\t});\n\n\ttest('Inline chat \"discard\" button does not always appear if response is stopped #228030', async function () {\n\n\t\tmodel.setValue('World');\n\n\t\tconst deferred = new DeferredPromise<void>();\n\n\t\tstore.add(chatAgentService.registerDynamicAgent({\n\t\t\tid: 'testEditorAgent2',\n\t\t\t...agentData\n\t\t}, {\n\t\t\tasync invoke(request, progress, history, token) {\n\n\t\t\t\tprogress({ kind: 'textEdit', uri: model.uri, edits: [{ range: new Range(1, 1, 1, 1), text: 'Hello-Hello' }] });\n\t\t\t\tawait deferred.p;\n\t\t\t\treturn {};\n\t\t\t},\n\t\t}));\n\n\t\tctrl = instaService.createInstance(TestController, editor);\n\n\t\t// REQUEST 1\n\t\tconst p = ctrl.awaitStates([...TestController.INIT_SEQUENCE, State.SHOW_REQUEST]);\n\t\tctrl.run({ message: 'Hello', autoSend: true });\n\n\n\t\tassert.strictEqual(await p, undefined);\n\n\t\tconst p2 = ctrl.awaitStates([State.WAIT_FOR_INPUT]);\n\t\tchatService.cancelCurrentRequestForSession(ctrl.chatWidget.viewModel!.model.sessionId);\n\t\tassert.strictEqual(await p2, undefined);\n\n\n\t\tconst value = contextKeyService.getContextKeyValue(CTX_INLINE_CHAT_RESPONSE_TYPE.key);\n\t\tassert.notStrictEqual(value, InlineChatResponseType.None);\n\t});\n});\n"],
  "mappings": "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",
  "names": ["request"]
}
