{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/inlineChat/test/browser/inlineChatSession.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport assert from 'assert';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { Event } from '../../../../../base/common/event.js';\nimport { mock } from '../../../../../base/test/common/mock.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { TestDiffProviderFactoryService } from '../../../../../editor/test/browser/diff/testDiffProviderFactoryService.js';\nimport { IActiveCodeEditor } from '../../../../../editor/browser/editorBrowser.js';\nimport { IDiffProviderFactoryService } from '../../../../../editor/browser/widget/diffEditor/diffProviderFactoryService.js';\nimport { Range } from '../../../../../editor/common/core/range.js';\nimport { ITextModel } from '../../../../../editor/common/model.js';\nimport { IModelService } from '../../../../../editor/common/services/model.js';\nimport { instantiateTestCodeEditor } from '../../../../../editor/test/browser/testCodeEditor.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { TestConfigurationService } from '../../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { SyncDescriptor } from '../../../../../platform/instantiation/common/descriptors.js';\nimport { ServiceCollection } from '../../../../../platform/instantiation/common/serviceCollection.js';\nimport { TestInstantiationService } from '../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { MockContextKeyService } from '../../../../../platform/keybinding/test/common/mockKeybindingService.js';\nimport { IEditorProgressService, IProgressRunner } from '../../../../../platform/progress/common/progress.js';\nimport { IViewDescriptorService } from '../../../../common/views.js';\nimport { AccessibilityVerbositySettingId } from '../../../accessibility/browser/accessibilityConfiguration.js';\nimport { IChatAccessibilityService, IChatWidgetService } from '../../../chat/browser/chat.js';\nimport { IChatResponseViewModel } from '../../../chat/common/chatViewModel.js';\nimport { IInlineChatSavingService } from '../../browser/inlineChatSavingService.js';\nimport { HunkState, Session } from '../../browser/inlineChatSession.js';\nimport { IInlineChatSessionService } from '../../browser/inlineChatSessionService.js';\nimport { InlineChatSessionServiceImpl } from '../../browser/inlineChatSessionServiceImpl.js';\nimport { EditMode } from '../../common/inlineChat.js';\nimport { workbenchInstantiationService } from '../../../../test/browser/workbenchTestServices.js';\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { assertType } from '../../../../../base/common/types.js';\nimport { EditOperation } from '../../../../../editor/common/core/editOperation.js';\nimport { Position } from '../../../../../editor/common/core/position.js';\nimport { IEditorWorkerService } from '../../../../../editor/common/services/editorWorker.js';\nimport { TestWorkerService } from './testWorkerService.js';\nimport { IExtensionService, nullExtensionDescription } from '../../../../services/extensions/common/extensions.js';\nimport { ILogService, NullLogService } from '../../../../../platform/log/common/log.js';\nimport { ITelemetryService } from '../../../../../platform/telemetry/common/telemetry.js';\nimport { NullTelemetryService } from '../../../../../platform/telemetry/common/telemetryUtils.js';\nimport { IWorkspaceContextService } from '../../../../../platform/workspace/common/workspace.js';\nimport { ChatWidgetService } from '../../../chat/browser/chatWidget.js';\nimport { IChatService } from '../../../chat/common/chatService.js';\nimport { ChatService } from '../../../chat/common/chatServiceImpl.js';\nimport { IChatSlashCommandService, ChatSlashCommandService } from '../../../chat/common/chatSlashCommands.js';\nimport { IChatVariablesService } from '../../../chat/common/chatVariables.js';\nimport { IChatWidgetHistoryService, ChatWidgetHistoryService } from '../../../chat/common/chatWidgetHistoryService.js';\nimport { IViewsService } from '../../../../services/views/common/viewsService.js';\nimport { TestExtensionService, TestContextService } from '../../../../test/common/workbenchTestServices.js';\nimport { IChatAgentService, ChatAgentService, ChatAgentLocation } from '../../../chat/common/chatAgents.js';\nimport { ChatVariablesService } from '../../../chat/browser/chatVariables.js';\nimport { ICommandService } from '../../../../../platform/commands/common/commands.js';\nimport { TestCommandService } from '../../../../../editor/test/browser/editorTestServices.js';\nimport { IAccessibleViewService } from '../../../../../platform/accessibility/browser/accessibleView.js';\nimport { IWorkbenchAssignmentService } from '../../../../services/assignment/common/assignmentService.js';\nimport { NullWorkbenchAssignmentService } from '../../../../services/assignment/test/common/nullAssignmentService.js';\nimport { ILanguageModelToolsService } from '../../../chat/common/languageModelToolsService.js';\nimport { MockLanguageModelToolsService } from '../../../chat/test/common/mockLanguageModelToolsService.js';\nimport { IChatRequestModel } from '../../../chat/common/chatModel.js';\nimport { assertSnapshot } from '../../../../../base/test/common/snapshot.js';\n\nsuite('InlineChatSession', function () {\n\n\tconst store = new DisposableStore();\n\tlet editor: IActiveCodeEditor;\n\tlet model: ITextModel;\n\tlet instaService: TestInstantiationService;\n\n\tlet inlineChatSessionService: IInlineChatSessionService;\n\n\tsetup(function () {\n\t\tconst contextKeyService = new MockContextKeyService();\n\n\n\t\tconst serviceCollection = new ServiceCollection(\n\t\t\t[IConfigurationService, new TestConfigurationService()],\n\t\t\t[IChatVariablesService, new SyncDescriptor(ChatVariablesService)],\n\t\t\t[ILogService, new NullLogService()],\n\t\t\t[ITelemetryService, NullTelemetryService],\n\t\t\t[IExtensionService, new TestExtensionService()],\n\t\t\t[IContextKeyService, new MockContextKeyService()],\n\t\t\t[IViewsService, new TestExtensionService()],\n\t\t\t[IWorkspaceContextService, new TestContextService()],\n\t\t\t[IChatWidgetHistoryService, new SyncDescriptor(ChatWidgetHistoryService)],\n\t\t\t[IChatWidgetService, new SyncDescriptor(ChatWidgetService)],\n\t\t\t[IChatSlashCommandService, new SyncDescriptor(ChatSlashCommandService)],\n\t\t\t[IChatService, new SyncDescriptor(ChatService)],\n\t\t\t[IEditorWorkerService, new SyncDescriptor(TestWorkerService)],\n\t\t\t[IChatAgentService, new SyncDescriptor(ChatAgentService)],\n\t\t\t[IContextKeyService, contextKeyService],\n\t\t\t[IDiffProviderFactoryService, new SyncDescriptor(TestDiffProviderFactoryService)],\n\t\t\t[IInlineChatSessionService, new SyncDescriptor(InlineChatSessionServiceImpl)],\n\t\t\t[ICommandService, new SyncDescriptor(TestCommandService)],\n\t\t\t[ILanguageModelToolsService, new MockLanguageModelToolsService()],\n\t\t\t[IInlineChatSavingService, new class extends mock<IInlineChatSavingService>() {\n\t\t\t\toverride markChanged(session: Session): void {\n\t\t\t\t\t// noop\n\t\t\t\t}\n\t\t\t}],\n\t\t\t[IEditorProgressService, new class extends mock<IEditorProgressService>() {\n\t\t\t\toverride show(total: unknown, delay?: unknown): IProgressRunner {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttotal() { },\n\t\t\t\t\t\tworked(value) { },\n\t\t\t\t\t\tdone() { },\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}],\n\t\t\t[IChatAccessibilityService, new class extends mock<IChatAccessibilityService>() {\n\t\t\t\toverride acceptResponse(response: IChatResponseViewModel | undefined, requestId: number): void { }\n\t\t\t\toverride acceptRequest(): number { return -1; }\n\t\t\t}],\n\t\t\t[IAccessibleViewService, new class extends mock<IAccessibleViewService>() {\n\t\t\t\toverride getOpenAriaHint(verbositySettingKey: AccessibilityVerbositySettingId): string | null {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}],\n\t\t\t[IConfigurationService, new TestConfigurationService()],\n\t\t\t[IViewDescriptorService, new class extends mock<IViewDescriptorService>() {\n\t\t\t\toverride onDidChangeLocation = Event.None;\n\t\t\t}],\n\t\t\t[IWorkbenchAssignmentService, new NullWorkbenchAssignmentService()]\n\t\t);\n\n\n\n\t\tinstaService = store.add(workbenchInstantiationService(undefined, store).createChild(serviceCollection));\n\t\tinlineChatSessionService = store.add(instaService.get(IInlineChatSessionService));\n\n\t\tinstaService.get(IChatAgentService).registerDynamicAgent({\n\t\t\textensionId: nullExtensionDescription.identifier,\n\t\t\tpublisherDisplayName: '',\n\t\t\textensionDisplayName: '',\n\t\t\textensionPublisherId: '',\n\t\t\tid: 'testAgent',\n\t\t\tname: 'testAgent',\n\t\t\tisDefault: true,\n\t\t\tlocations: [ChatAgentLocation.Editor],\n\t\t\tmetadata: {},\n\t\t\tslashCommands: [],\n\t\t\tdisambiguation: [],\n\t\t}, {\n\t\t\tasync invoke() {\n\t\t\t\treturn {};\n\t\t\t}\n\t\t});\n\n\n\t\tmodel = store.add(instaService.get(IModelService).createModel('one\\ntwo\\nthree\\nfour\\nfive\\nsix\\nseven\\neight\\nnine\\nten\\neleven', null));\n\t\teditor = store.add(instantiateTestCodeEditor(instaService, model));\n\t});\n\n\tteardown(function () {\n\t\tstore.clear();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tasync function makeEditAsAi(edit: EditOperation | EditOperation[]) {\n\t\tconst session = inlineChatSessionService.getSession(editor, editor.getModel()!.uri);\n\t\tassertType(session);\n\t\tsession.hunkData.ignoreTextModelNChanges = true;\n\t\ttry {\n\t\t\teditor.executeEdits('test', Array.isArray(edit) ? edit : [edit]);\n\t\t} finally {\n\t\t\tsession.hunkData.ignoreTextModelNChanges = false;\n\t\t}\n\t\tawait session.hunkData.recompute({ applied: 0, sha1: 'fakeSha1' });\n\t}\n\n\tfunction makeEdit(edit: EditOperation | EditOperation[]) {\n\t\teditor.executeEdits('test', Array.isArray(edit) ? edit : [edit]);\n\t}\n\n\ttest('Create, release', async function () {\n\n\t\tconst session = await inlineChatSessionService.createSession(editor, { editMode: EditMode.Live }, CancellationToken.None);\n\t\tassertType(session);\n\t\tinlineChatSessionService.releaseSession(session);\n\t});\n\n\ttest('HunkData, info', async function () {\n\n\t\tconst decorationCountThen = model.getAllDecorations().length;\n\n\t\tconst session = await inlineChatSessionService.createSession(editor, { editMode: EditMode.Live }, CancellationToken.None);\n\t\tassertType(session);\n\t\tassert.ok(session.textModelN === model);\n\n\t\tawait makeEditAsAi(EditOperation.insert(new Position(1, 1), 'AI_EDIT\\n'));\n\n\n\t\tassert.strictEqual(session.hunkData.size, 1);\n\t\tlet [hunk] = session.hunkData.getInfo();\n\t\tassertType(hunk);\n\n\t\tassert.ok(!session.textModel0.equalsTextBuffer(session.textModelN.getTextBuffer()));\n\t\tassert.strictEqual(hunk.getState(), HunkState.Pending);\n\t\tassert.ok(hunk.getRangesN()[0].equalsRange({ startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 7 }));\n\n\t\tawait makeEditAsAi(EditOperation.insert(new Position(1, 3), 'foobar'));\n\t\t[hunk] = session.hunkData.getInfo();\n\t\tassert.ok(hunk.getRangesN()[0].equalsRange({ startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 13 }));\n\n\t\tinlineChatSessionService.releaseSession(session);\n\n\t\tassert.strictEqual(model.getAllDecorations().length, decorationCountThen); // no leaked decorations!\n\t});\n\n\ttest('HunkData, accept', async function () {\n\n\t\tconst session = await inlineChatSessionService.createSession(editor, { editMode: EditMode.Live }, CancellationToken.None);\n\t\tassertType(session);\n\n\t\tawait makeEditAsAi([EditOperation.insert(new Position(1, 1), 'AI_EDIT\\n'), EditOperation.insert(new Position(10, 1), 'AI_EDIT\\n')]);\n\n\t\tassert.strictEqual(session.hunkData.size, 2);\n\t\tassert.ok(!session.textModel0.equalsTextBuffer(session.textModelN.getTextBuffer()));\n\n\t\tfor (const hunk of session.hunkData.getInfo()) {\n\t\t\tassertType(hunk);\n\t\t\tassert.strictEqual(hunk.getState(), HunkState.Pending);\n\t\t\thunk.acceptChanges();\n\t\t\tassert.strictEqual(hunk.getState(), HunkState.Accepted);\n\t\t}\n\n\t\tassert.strictEqual(session.textModel0.getValue(), session.textModelN.getValue());\n\t\tinlineChatSessionService.releaseSession(session);\n\t});\n\n\ttest('HunkData, reject', async function () {\n\n\t\tconst session = await inlineChatSessionService.createSession(editor, { editMode: EditMode.Live }, CancellationToken.None);\n\t\tassertType(session);\n\n\t\tawait makeEditAsAi([EditOperation.insert(new Position(1, 1), 'AI_EDIT\\n'), EditOperation.insert(new Position(10, 1), 'AI_EDIT\\n')]);\n\n\t\tassert.strictEqual(session.hunkData.size, 2);\n\t\tassert.ok(!session.textModel0.equalsTextBuffer(session.textModelN.getTextBuffer()));\n\n\t\tfor (const hunk of session.hunkData.getInfo()) {\n\t\t\tassertType(hunk);\n\t\t\tassert.strictEqual(hunk.getState(), HunkState.Pending);\n\t\t\thunk.discardChanges();\n\t\t\tassert.strictEqual(hunk.getState(), HunkState.Rejected);\n\t\t}\n\n\t\tassert.strictEqual(session.textModel0.getValue(), session.textModelN.getValue());\n\t\tinlineChatSessionService.releaseSession(session);\n\t});\n\n\ttest('HunkData, N rounds', async function () {\n\n\t\tmodel.setValue('one\\ntwo\\nthree\\nfour\\nfive\\nsix\\nseven\\neight\\nnine\\nten\\neleven\\ntwelwe\\nthirteen\\nfourteen\\nfifteen\\nsixteen\\nseventeen\\neighteen\\nnineteen\\n');\n\n\t\tconst session = await inlineChatSessionService.createSession(editor, { editMode: EditMode.Live }, CancellationToken.None);\n\t\tassertType(session);\n\n\t\tassert.ok(session.textModel0.equalsTextBuffer(session.textModelN.getTextBuffer()));\n\n\t\tassert.strictEqual(session.hunkData.size, 0);\n\n\t\t// ROUND #1\n\t\tawait makeEditAsAi([\n\t\t\tEditOperation.insert(new Position(1, 1), 'AI1'),\n\t\t\tEditOperation.insert(new Position(4, 1), 'AI2'),\n\t\t\tEditOperation.insert(new Position(19, 1), 'AI3')\n\t\t]);\n\n\t\tassert.strictEqual(session.hunkData.size, 2); // AI1, AI2 are merged into one hunk, AI3 is a separate hunk\n\n\t\tlet [first, second] = session.hunkData.getInfo();\n\n\t\tassert.ok(model.getValueInRange(first.getRangesN()[0]).includes('AI1'));\n\t\tassert.ok(model.getValueInRange(first.getRangesN()[0]).includes('AI2'));\n\t\tassert.ok(model.getValueInRange(second.getRangesN()[0]).includes('AI3'));\n\n\t\tassert.ok(!session.textModel0.getValueInRange(first.getRangesN()[0]).includes('AI1'));\n\t\tassert.ok(!session.textModel0.getValueInRange(first.getRangesN()[0]).includes('AI2'));\n\t\tassert.ok(!session.textModel0.getValueInRange(second.getRangesN()[0]).includes('AI3'));\n\n\t\tfirst.acceptChanges();\n\t\tassert.ok(session.textModel0.getValueInRange(first.getRangesN()[0]).includes('AI1'));\n\t\tassert.ok(session.textModel0.getValueInRange(first.getRangesN()[0]).includes('AI2'));\n\t\tassert.ok(!session.textModel0.getValueInRange(second.getRangesN()[0]).includes('AI3'));\n\n\n\t\t// ROUND #2\n\t\tawait makeEditAsAi([\n\t\t\tEditOperation.insert(new Position(7, 1), 'AI4'),\n\t\t]);\n\t\tassert.strictEqual(session.hunkData.size, 2);\n\n\t\t[first, second] = session.hunkData.getInfo();\n\t\tassert.ok(model.getValueInRange(first.getRangesN()[0]).includes('AI4')); // the new hunk (in line-order)\n\t\tassert.ok(model.getValueInRange(second.getRangesN()[0]).includes('AI3')); // the previous hunk remains\n\n\t\tinlineChatSessionService.releaseSession(session);\n\t});\n\n\ttest('HunkData, (mirror) edit before', async function () {\n\n\t\tconst lines = ['one', 'two', 'three'];\n\t\tmodel.setValue(lines.join('\\n'));\n\t\tconst session = await inlineChatSessionService.createSession(editor, { editMode: EditMode.Live }, CancellationToken.None);\n\t\tassertType(session);\n\n\t\tawait makeEditAsAi([EditOperation.insert(new Position(3, 1), 'AI WAS HERE\\n')]);\n\t\tassert.strictEqual(session.textModelN.getValue(), ['one', 'two', 'AI WAS HERE', 'three'].join('\\n'));\n\t\tassert.strictEqual(session.textModel0.getValue(), lines.join('\\n'));\n\n\t\tmakeEdit([EditOperation.replace(new Range(1, 1, 1, 4), 'ONE')]);\n\t\tassert.strictEqual(session.textModelN.getValue(), ['ONE', 'two', 'AI WAS HERE', 'three'].join('\\n'));\n\t\tassert.strictEqual(session.textModel0.getValue(), ['ONE', 'two', 'three'].join('\\n'));\n\t});\n\n\ttest('HunkData, (mirror) edit after', async function () {\n\n\t\tconst lines = ['one', 'two', 'three', 'four', 'five'];\n\t\tmodel.setValue(lines.join('\\n'));\n\n\t\tconst session = await inlineChatSessionService.createSession(editor, { editMode: EditMode.Live }, CancellationToken.None);\n\t\tassertType(session);\n\n\t\tawait makeEditAsAi([EditOperation.insert(new Position(3, 1), 'AI_EDIT\\n')]);\n\n\t\tassert.strictEqual(session.hunkData.size, 1);\n\t\tconst [hunk] = session.hunkData.getInfo();\n\n\t\tmakeEdit([EditOperation.insert(new Position(1, 1), 'USER1')]);\n\t\tassert.strictEqual(session.textModelN.getValue(), ['USER1one', 'two', 'AI_EDIT', 'three', 'four', 'five'].join('\\n'));\n\t\tassert.strictEqual(session.textModel0.getValue(), ['USER1one', 'two', 'three', 'four', 'five'].join('\\n'));\n\n\t\tmakeEdit([EditOperation.insert(new Position(5, 1), 'USER2')]);\n\t\tassert.strictEqual(session.textModelN.getValue(), ['USER1one', 'two', 'AI_EDIT', 'three', 'USER2four', 'five'].join('\\n'));\n\t\tassert.strictEqual(session.textModel0.getValue(), ['USER1one', 'two', 'three', 'USER2four', 'five'].join('\\n'));\n\n\t\thunk.acceptChanges();\n\t\tassert.strictEqual(session.textModelN.getValue(), ['USER1one', 'two', 'AI_EDIT', 'three', 'USER2four', 'five'].join('\\n'));\n\t\tassert.strictEqual(session.textModel0.getValue(), ['USER1one', 'two', 'AI_EDIT', 'three', 'USER2four', 'five'].join('\\n'));\n\t});\n\n\ttest('HunkData, (mirror) edit inside ', async function () {\n\n\t\tconst lines = ['one', 'two', 'three'];\n\t\tmodel.setValue(lines.join('\\n'));\n\t\tconst session = await inlineChatSessionService.createSession(editor, { editMode: EditMode.Live }, CancellationToken.None);\n\t\tassertType(session);\n\n\t\tawait makeEditAsAi([EditOperation.insert(new Position(3, 1), 'AI WAS HERE\\n')]);\n\t\tassert.strictEqual(session.textModelN.getValue(), ['one', 'two', 'AI WAS HERE', 'three'].join('\\n'));\n\t\tassert.strictEqual(session.textModel0.getValue(), lines.join('\\n'));\n\n\t\tmakeEdit([EditOperation.replace(new Range(3, 4, 3, 7), 'wwaaassss')]);\n\t\tassert.strictEqual(session.textModelN.getValue(), ['one', 'two', 'AI wwaaassss HERE', 'three'].join('\\n'));\n\t\tassert.strictEqual(session.textModel0.getValue(), ['one', 'two', 'three'].join('\\n'));\n\t});\n\n\ttest('HunkData, (mirror) edit after dicard ', async function () {\n\n\t\tconst lines = ['one', 'two', 'three'];\n\t\tmodel.setValue(lines.join('\\n'));\n\t\tconst session = await inlineChatSessionService.createSession(editor, { editMode: EditMode.Live }, CancellationToken.None);\n\t\tassertType(session);\n\n\t\tawait makeEditAsAi([EditOperation.insert(new Position(3, 1), 'AI WAS HERE\\n')]);\n\t\tassert.strictEqual(session.textModelN.getValue(), ['one', 'two', 'AI WAS HERE', 'three'].join('\\n'));\n\t\tassert.strictEqual(session.textModel0.getValue(), lines.join('\\n'));\n\n\t\tassert.strictEqual(session.hunkData.size, 1);\n\t\tconst [hunk] = session.hunkData.getInfo();\n\t\thunk.discardChanges();\n\t\tassert.strictEqual(session.textModelN.getValue(), lines.join('\\n'));\n\t\tassert.strictEqual(session.textModel0.getValue(), lines.join('\\n'));\n\n\t\tmakeEdit([EditOperation.replace(new Range(3, 4, 3, 6), '3333')]);\n\t\tassert.strictEqual(session.textModelN.getValue(), ['one', 'two', 'thr3333'].join('\\n'));\n\t\tassert.strictEqual(session.textModel0.getValue(), ['one', 'two', 'thr3333'].join('\\n'));\n\t});\n\n\ttest('HunkData, (mirror) edit after, multi turn', async function () {\n\n\t\tconst lines = ['one', 'two', 'three', 'four', 'five'];\n\t\tmodel.setValue(lines.join('\\n'));\n\n\t\tconst session = await inlineChatSessionService.createSession(editor, { editMode: EditMode.Live }, CancellationToken.None);\n\t\tassertType(session);\n\n\t\tawait makeEditAsAi([EditOperation.insert(new Position(3, 1), 'AI_EDIT\\n')]);\n\n\t\tassert.strictEqual(session.hunkData.size, 1);\n\n\t\tmakeEdit([EditOperation.insert(new Position(5, 1), 'FOO')]);\n\t\tassert.strictEqual(session.textModelN.getValue(), ['one', 'two', 'AI_EDIT', 'three', 'FOOfour', 'five'].join('\\n'));\n\t\tassert.strictEqual(session.textModel0.getValue(), ['one', 'two', 'three', 'FOOfour', 'five'].join('\\n'));\n\n\t\tawait makeEditAsAi([EditOperation.insert(new Position(2, 4), ' zwei')]);\n\t\tassert.strictEqual(session.hunkData.size, 1);\n\n\t\tassert.strictEqual(session.textModelN.getValue(), ['one', 'two zwei', 'AI_EDIT', 'three', 'FOOfour', 'five'].join('\\n'));\n\t\tassert.strictEqual(session.textModel0.getValue(), ['one', 'two', 'three', 'FOOfour', 'five'].join('\\n'));\n\n\t\tmakeEdit([EditOperation.replace(new Range(6, 3, 6, 5), 'vefivefi')]);\n\t\tassert.strictEqual(session.textModelN.getValue(), ['one', 'two zwei', 'AI_EDIT', 'three', 'FOOfour', 'fivefivefi'].join('\\n'));\n\t\tassert.strictEqual(session.textModel0.getValue(), ['one', 'two', 'three', 'FOOfour', 'fivefivefi'].join('\\n'));\n\t});\n\n\ttest('HunkData, (mirror) edit after, multi turn 2', async function () {\n\n\t\tconst lines = ['one', 'two', 'three', 'four', 'five'];\n\t\tmodel.setValue(lines.join('\\n'));\n\n\t\tconst session = await inlineChatSessionService.createSession(editor, { editMode: EditMode.Live }, CancellationToken.None);\n\t\tassertType(session);\n\n\t\tawait makeEditAsAi([EditOperation.insert(new Position(3, 1), 'AI_EDIT\\n')]);\n\n\t\tassert.strictEqual(session.hunkData.size, 1);\n\n\t\tmakeEdit([EditOperation.insert(new Position(5, 1), 'FOO')]);\n\t\tassert.strictEqual(session.textModelN.getValue(), ['one', 'two', 'AI_EDIT', 'three', 'FOOfour', 'five'].join('\\n'));\n\t\tassert.strictEqual(session.textModel0.getValue(), ['one', 'two', 'three', 'FOOfour', 'five'].join('\\n'));\n\n\t\tawait makeEditAsAi([EditOperation.insert(new Position(2, 4), 'zwei')]);\n\t\tassert.strictEqual(session.hunkData.size, 1);\n\n\t\tassert.strictEqual(session.textModelN.getValue(), ['one', 'twozwei', 'AI_EDIT', 'three', 'FOOfour', 'five'].join('\\n'));\n\t\tassert.strictEqual(session.textModel0.getValue(), ['one', 'two', 'three', 'FOOfour', 'five'].join('\\n'));\n\n\t\tmakeEdit([EditOperation.replace(new Range(6, 3, 6, 5), 'vefivefi')]);\n\t\tassert.strictEqual(session.textModelN.getValue(), ['one', 'twozwei', 'AI_EDIT', 'three', 'FOOfour', 'fivefivefi'].join('\\n'));\n\t\tassert.strictEqual(session.textModel0.getValue(), ['one', 'two', 'three', 'FOOfour', 'fivefivefi'].join('\\n'));\n\n\t\tsession.hunkData.getInfo()[0].acceptChanges();\n\t\tassert.strictEqual(session.textModelN.getValue(), session.textModel0.getValue());\n\n\t\tmakeEdit([EditOperation.replace(new Range(1, 1, 1, 1), 'done')]);\n\t\tassert.strictEqual(session.textModelN.getValue(), session.textModel0.getValue());\n\t});\n\n\ttest('HunkData, accept, discardAll', async function () {\n\n\t\tconst session = await inlineChatSessionService.createSession(editor, { editMode: EditMode.Live }, CancellationToken.None);\n\t\tassertType(session);\n\n\t\tawait makeEditAsAi([EditOperation.insert(new Position(1, 1), 'AI_EDIT\\n'), EditOperation.insert(new Position(10, 1), 'AI_EDIT\\n')]);\n\n\t\tassert.strictEqual(session.hunkData.size, 2);\n\t\tassert.ok(!session.textModel0.equalsTextBuffer(session.textModelN.getTextBuffer()));\n\n\t\tconst textModeNNow = session.textModelN.getValue();\n\n\t\tsession.hunkData.getInfo()[0].acceptChanges();\n\t\tassert.strictEqual(textModeNNow, session.textModelN.getValue());\n\n\t\tsession.hunkData.discardAll(); // all remaining\n\t\tassert.strictEqual(session.textModelN.getValue(), 'AI_EDIT\\none\\ntwo\\nthree\\nfour\\nfive\\nsix\\nseven\\neight\\nnine\\nten\\neleven');\n\t\tassert.strictEqual(session.textModelN.getValue(), session.textModel0.getValue());\n\n\t\tinlineChatSessionService.releaseSession(session);\n\t});\n\n\ttest('HunkData, discardAll return undo edits', async function () {\n\n\t\tconst session = await inlineChatSessionService.createSession(editor, { editMode: EditMode.Live }, CancellationToken.None);\n\t\tassertType(session);\n\n\t\tawait makeEditAsAi([EditOperation.insert(new Position(1, 1), 'AI_EDIT\\n'), EditOperation.insert(new Position(10, 1), 'AI_EDIT\\n')]);\n\n\t\tassert.strictEqual(session.hunkData.size, 2);\n\t\tassert.ok(!session.textModel0.equalsTextBuffer(session.textModelN.getTextBuffer()));\n\n\t\tconst textModeNNow = session.textModelN.getValue();\n\n\t\tsession.hunkData.getInfo()[0].acceptChanges();\n\t\tassert.strictEqual(textModeNNow, session.textModelN.getValue());\n\n\t\tconst undoEdits = session.hunkData.discardAll(); // all remaining\n\t\tassert.strictEqual(session.textModelN.getValue(), 'AI_EDIT\\none\\ntwo\\nthree\\nfour\\nfive\\nsix\\nseven\\neight\\nnine\\nten\\neleven');\n\t\tassert.strictEqual(session.textModelN.getValue(), session.textModel0.getValue());\n\n\t\t// undo the discards\n\t\tsession.textModelN.pushEditOperations(null, undoEdits, () => null);\n\t\tassert.strictEqual(textModeNNow, session.textModelN.getValue());\n\n\t\tinlineChatSessionService.releaseSession(session);\n\t});\n\n\ttest('Pressing Escape after inline chat errored with \"response filtered\" leaves document dirty #7764', async function () {\n\n\t\tconst origValue = `class Foo {\n\tprivate onError(error: string): void {\n\t\tif (/The request timed out|The network connection was lost/i.test(error)) {\n\t\t\treturn;\n\t\t}\n\n\t\terror = error.replace(/See https:\\/\\/github\\.com\\/Squirrel\\/Squirrel\\.Mac\\/issues\\/182 for more information/, 'This might mean the application was put on quarantine by macOS. See [this link](https://github.com/microsoft/vscode/issues/7426#issuecomment-425093469) for more information');\n\n\t\tthis.notificationService.notify({\n\t\t\tseverity: Severity.Error,\n\t\t\tmessage: error,\n\t\t\tsource: nls.localize('update service', \"Update Service\"),\n\t\t});\n\t}\n}`;\n\t\tmodel.setValue(origValue);\n\n\t\tconst session = await inlineChatSessionService.createSession(editor, { editMode: EditMode.Live }, CancellationToken.None);\n\t\tassertType(session);\n\n\t\tconst fakeRequest = new class extends mock<IChatRequestModel>() {\n\t\t\toverride get id() { return 'one'; }\n\t\t};\n\t\tsession.markModelVersion(fakeRequest);\n\n\t\tassert.strictEqual(editor.getModel().getLineCount(), 15);\n\n\t\tawait makeEditAsAi([EditOperation.replace(new Range(7, 1, 7, Number.MAX_SAFE_INTEGER), `error = error.replace(\n\t\t\t/See https:\\/\\/github\\.com\\/Squirrel\\/Squirrel\\.Mac\\/issues\\/182 for more information/,\n\t\t\t'This might mean the application was put on quarantine by macOS. See [this link](https://github.com/microsoft/vscode/issues/7426#issuecomment-425093469) for more information'\n\t\t);`)]);\n\n\t\tassert.strictEqual(editor.getModel().getLineCount(), 18);\n\n\t\t// called when a response errors out\n\t\tawait session.undoChangesUntil(fakeRequest.id);\n\t\tawait session.hunkData.recompute({ applied: 0, sha1: 'fakeSha1' }, undefined);\n\n\t\tassert.strictEqual(editor.getModel().getValue(), origValue);\n\n\t\tsession.hunkData.discardAll(); // called when dimissing the session\n\t\tassert.strictEqual(editor.getModel().getValue(), origValue);\n\t});\n\n\ttest('Apply Code\\'s preview should be easier to undo/esc #7537', async function () {\n\t\tmodel.setValue(`export function fib(n) {\n\tif (n <= 0) return 0;\n\tif (n === 1) return 0;\n\tif (n === 2) return 1;\n\treturn fib(n - 1) + fib(n - 2);\n}`);\n\t\tconst session = await inlineChatSessionService.createSession(editor, { editMode: EditMode.Live }, CancellationToken.None);\n\t\tassertType(session);\n\n\t\tawait makeEditAsAi([EditOperation.replace(new Range(5, 1, 6, Number.MAX_SAFE_INTEGER), `\n\tlet a = 0, b = 1, c;\n\tfor (let i = 3; i <= n; i++) {\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn b;\n}`)]);\n\n\t\tassert.strictEqual(session.hunkData.size, 1);\n\t\tassert.strictEqual(session.hunkData.pending, 1);\n\t\tassert.ok(session.hunkData.getInfo().every(d => d.getState() === HunkState.Pending));\n\n\t\tawait assertSnapshot(editor.getModel().getValue(), { name: '1' });\n\n\t\tawait model.undo();\n\t\tawait assertSnapshot(editor.getModel().getValue(), { name: '2' });\n\n\t\t// overlapping edits (even UNDO) mark edits as accepted\n\t\tassert.strictEqual(session.hunkData.size, 1);\n\t\tassert.strictEqual(session.hunkData.pending, 0);\n\t\tassert.ok(session.hunkData.getInfo().every(d => d.getState() === HunkState.Accepted));\n\n\t\t// no further change when discarding\n\t\tsession.hunkData.discardAll(); // CANCEL\n\t\tawait assertSnapshot(editor.getModel().getValue(), { name: '2' });\n\t});\n\n});\n"],
  "mappings": "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",
  "names": []
}
