{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/url/browser/url.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport { Categories } from \"../../../../platform/action/common/actionCommonCategories.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tMenuRegistry,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { CommandsRegistry } from \"../../../../platform/commands/common/commands.js\";\nimport {\n\tExtensions as ConfigurationExtensions,\n\tConfigurationScope,\n\ttype IConfigurationRegistry,\n} from \"../../../../platform/configuration/common/configurationRegistry.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IQuickInputService } from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { IURLService } from \"../../../../platform/url/common/url.js\";\nimport { workbenchConfigurationNodeBase } from \"../../../common/configuration.js\";\nimport {\n\ttype IWorkbenchContributionsRegistry,\n\tExtensions as WorkbenchExtensions,\n\tWorkbenchPhase,\n\tregisterWorkbenchContribution2,\n} from \"../../../common/contributions.js\";\nimport { LifecyclePhase } from \"../../../services/lifecycle/common/lifecycle.js\";\nimport { ExternalUriResolverContribution } from \"./externalUriResolver.js\";\nimport {\n\tITrustedDomainService,\n\tTrustedDomainService,\n} from \"./trustedDomainService.js\";\nimport { manageTrustedDomainSettingsCommand } from \"./trustedDomains.js\";\nimport { TrustedDomainsFileSystemProvider } from \"./trustedDomainsFileSystemProvider.js\";\nimport { OpenerValidatorContributions } from \"./trustedDomainsValidator.js\";\n\nclass OpenUrlAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.url.openUrl\",\n\t\t\ttitle: localize2(\"openUrl\", \"Open URL\"),\n\t\t\tcategory: Categories.Developer,\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst urlService = accessor.get(IURLService);\n\n\t\treturn quickInputService\n\t\t\t.input({ prompt: localize(\"urlToOpen\", \"URL to open\") })\n\t\t\t.then((input) => {\n\t\t\t\tif (input) {\n\t\t\t\t\tconst uri = URI.parse(input);\n\t\t\t\t\turlService.open(uri, { originalUrl: input });\n\t\t\t\t}\n\t\t\t});\n\t}\n}\n\nregisterAction2(OpenUrlAction);\n\n/**\n * Trusted Domains Contribution\n */\n\nCommandsRegistry.registerCommand(manageTrustedDomainSettingsCommand);\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\tcommand: {\n\t\tid: manageTrustedDomainSettingsCommand.id,\n\t\ttitle: manageTrustedDomainSettingsCommand.description.description,\n\t},\n});\n\nRegistry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n).registerWorkbenchContribution(\n\tOpenerValidatorContributions,\n\tLifecyclePhase.Restored,\n);\nregisterWorkbenchContribution2(\n\tTrustedDomainsFileSystemProvider.ID,\n\tTrustedDomainsFileSystemProvider,\n\tWorkbenchPhase.BlockRestore, // registration only\n);\nregisterWorkbenchContribution2(\n\tExternalUriResolverContribution.ID,\n\tExternalUriResolverContribution,\n\tWorkbenchPhase.BlockRestore, // registration only\n);\n\nconst configurationRegistry = Registry.as<IConfigurationRegistry>(\n\tConfigurationExtensions.Configuration,\n);\nconfigurationRegistry.registerConfiguration({\n\t...workbenchConfigurationNodeBase,\n\tproperties: {\n\t\t\"workbench.trustedDomains.promptInTrustedWorkspace\": {\n\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\ttype: \"boolean\",\n\t\t\tdefault: false,\n\t\t\tdescription: localize(\n\t\t\t\t\"workbench.trustedDomains.promptInTrustedWorkspace\",\n\t\t\t\t\"When enabled, trusted domain prompts will appear when opening links in trusted workspaces.\",\n\t\t\t),\n\t\t},\n\t},\n});\n\nregisterSingleton(\n\tITrustedDomainService,\n\tTrustedDomainService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": ";;AAKA,SAAS,WAAW;AACpB,SAAS,UAAU,iBAAiB;AACpC,SAAS,kBAAkB;AAC3B;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,wBAAwB;AACjC;AAAA,EACC,cAAc;AAAA,EACd;AAAA,OAEM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AAEP,SAAS,0BAA0B;AACnC,SAAS,gBAAgB;AACzB,SAAS,mBAAmB;AAC5B,SAAS,sCAAsC;AAC/C;AAAA,EAEC,cAAc;AAAA,EACd;AAAA,EACA;AAAA,OACM;AACP,SAAS,sBAAsB;AAC/B,SAAS,uCAAuC;AAChD;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,0CAA0C;AACnD,SAAS,wCAAwC;AACjD,SAAS,oCAAoC;AAE7C,MAAM,sBAAsB,QAAQ;AAAA,EA7CpC,OA6CoC;AAAA;AAAA;AAAA,EACnC,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,UAAU,WAAW,UAAU;AAAA,MACtC,UAAU,WAAW;AAAA,MACrB,IAAI;AAAA,IACL,CAAC;AAAA,EACF;AAAA,EAEA,MAAM,IAAI,UAA2C;AACpD,UAAM,oBAAoB,SAAS,IAAI,kBAAkB;AACzD,UAAM,aAAa,SAAS,IAAI,WAAW;AAE3C,WAAO,kBACL,MAAM,EAAE,QAAQ,SAAS,aAAa,aAAa,EAAE,CAAC,EACtD,KAAK,CAAC,UAAU;AAChB,UAAI,OAAO;AACV,cAAM,MAAM,IAAI,MAAM,KAAK;AAC3B,mBAAW,KAAK,KAAK,EAAE,aAAa,MAAM,CAAC;AAAA,MAC5C;AAAA,IACD,CAAC;AAAA,EACH;AACD;AAEA,gBAAgB,aAAa;AAM7B,iBAAiB,gBAAgB,kCAAkC;AACnE,aAAa,eAAe,OAAO,gBAAgB;AAAA,EAClD,SAAS;AAAA,IACR,IAAI,mCAAmC;AAAA,IACvC,OAAO,mCAAmC,YAAY;AAAA,EACvD;AACD,CAAC;AAED,SAAS;AAAA,EACR,oBAAoB;AACrB,EAAE;AAAA,EACD;AAAA,EACA,eAAe;AAChB;AACA;AAAA,EACC,iCAAiC;AAAA,EACjC;AAAA,EACA,eAAe;AAAA;AAChB;AACA;AAAA,EACC,gCAAgC;AAAA,EAChC;AAAA,EACA,eAAe;AAAA;AAChB;AAEA,MAAM,wBAAwB,SAAS;AAAA,EACtC,wBAAwB;AACzB;AACA,sBAAsB,sBAAsB;AAAA,EAC3C,GAAG;AAAA,EACH,YAAY;AAAA,IACX,qDAAqD;AAAA,MACpD,OAAO,mBAAmB;AAAA,MAC1B,MAAM;AAAA,MACN,SAAS;AAAA,MACT,aAAa;AAAA,QACZ;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD,CAAC;AAED;AAAA,EACC;AAAA,EACA;AAAA,EACA,kBAAkB;AACnB;",
  "names": []
}
