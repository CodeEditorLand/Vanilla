{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/url/browser/url.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from '../../../../base/common/uri.js';\nimport { localize, localize2 } from '../../../../nls.js';\nimport { MenuId, MenuRegistry, Action2, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { LifecyclePhase } from '../../../services/lifecycle/common/lifecycle.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { IURLService } from '../../../../platform/url/common/url.js';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContributionsRegistry, WorkbenchPhase, registerWorkbenchContribution2 } from '../../../common/contributions.js';\nimport { ExternalUriResolverContribution } from './externalUriResolver.js';\nimport { manageTrustedDomainSettingsCommand } from './trustedDomains.js';\nimport { TrustedDomainsFileSystemProvider } from './trustedDomainsFileSystemProvider.js';\nimport { OpenerValidatorContributions } from './trustedDomainsValidator.js';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { Categories } from '../../../../platform/action/common/actionCommonCategories.js';\nimport { ConfigurationScope, Extensions as ConfigurationExtensions, IConfigurationRegistry } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { workbenchConfigurationNodeBase } from '../../../common/configuration.js';\nimport { ITrustedDomainService, TrustedDomainService } from './trustedDomainService.js';\nimport { registerSingleton, InstantiationType } from '../../../../platform/instantiation/common/extensions.js';\n\nclass OpenUrlAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.url.openUrl',\n\t\t\ttitle: localize2('openUrl', 'Open URL'),\n\t\t\tcategory: Categories.Developer,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst urlService = accessor.get(IURLService);\n\n\t\treturn quickInputService.input({ prompt: localize('urlToOpen', \"URL to open\") }).then(input => {\n\t\t\tif (input) {\n\t\t\t\tconst uri = URI.parse(input);\n\t\t\t\turlService.open(uri, { originalUrl: input });\n\t\t\t}\n\t\t});\n\t}\n}\n\nregisterAction2(OpenUrlAction);\n\n/**\n * Trusted Domains Contribution\n */\n\nCommandsRegistry.registerCommand(manageTrustedDomainSettingsCommand);\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\tcommand: {\n\t\tid: manageTrustedDomainSettingsCommand.id,\n\t\ttitle: manageTrustedDomainSettingsCommand.description.description\n\t}\n});\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(\n\tOpenerValidatorContributions,\n\tLifecyclePhase.Restored\n);\nregisterWorkbenchContribution2(\n\tTrustedDomainsFileSystemProvider.ID,\n\tTrustedDomainsFileSystemProvider,\n\tWorkbenchPhase.BlockRestore // registration only\n);\nregisterWorkbenchContribution2(\n\tExternalUriResolverContribution.ID,\n\tExternalUriResolverContribution,\n\tWorkbenchPhase.BlockRestore // registration only\n);\n\n\nconst configurationRegistry = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration);\nconfigurationRegistry.registerConfiguration({\n\t...workbenchConfigurationNodeBase,\n\tproperties: {\n\t\t'workbench.trustedDomains.promptInTrustedWorkspace': {\n\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription: localize('workbench.trustedDomains.promptInTrustedWorkspace', \"When enabled, trusted domain prompts will appear when opening links in trusted workspaces.\")\n\t\t}\n\t}\n});\n\nregisterSingleton(ITrustedDomainService, TrustedDomainService, InstantiationType.Delayed);\n"],
  "mappings": ";;AAKA,SAAS,WAAW;AACpB,SAAS,UAAU,iBAAiB;AACpC,SAAS,QAAQ,cAAc,SAAS,uBAAuB;AAC/D,SAAS,wBAAwB;AACjC,SAAS,sBAAsB;AAC/B,SAAS,0BAA0B;AACnC,SAAS,gBAAgB;AACzB,SAAS,mBAAmB;AAC5B,SAAS,cAAc,qBAAqB,iCAAiC,gBAAgB,sCAAsC;AACnI,SAAS,uCAAuC;AAChD,SAAS,0CAA0C;AACnD,SAAS,wCAAwC;AACjD,SAAS,oCAAoC;AAC7C,SAAS,wBAAwB;AACjC,SAAS,kBAAkB;AAC3B,SAAS,oBAAoB,cAAc,yBAAyB,8BAA8B;AAClG,SAAS,sCAAsC;AAC/C,SAAS,uBAAuB,4BAA4B;AAC5D,SAAS,mBAAmB,yBAAyB;AAErD,MAAM,sBAAsB,QAAQ;AAAA,EAzBpC,OAyBoC;AAAA;AAAA;AAAA,EAEnC,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,UAAU,WAAW,UAAU;AAAA,MACtC,UAAU,WAAW;AAAA,MACrB,IAAI;AAAA,IACL,CAAC;AAAA,EACF;AAAA,EAEA,MAAM,IAAI,UAA2C;AACpD,UAAM,oBAAoB,SAAS,IAAI,kBAAkB;AACzD,UAAM,aAAa,SAAS,IAAI,WAAW;AAE3C,WAAO,kBAAkB,MAAM,EAAE,QAAQ,SAAS,aAAa,aAAa,EAAE,CAAC,EAAE,KAAK,WAAS;AAC9F,UAAI,OAAO;AACV,cAAM,MAAM,IAAI,MAAM,KAAK;AAC3B,mBAAW,KAAK,KAAK,EAAE,aAAa,MAAM,CAAC;AAAA,MAC5C;AAAA,IACD,CAAC;AAAA,EACF;AACD;AAEA,gBAAgB,aAAa;AAM7B,iBAAiB,gBAAgB,kCAAkC;AACnE,aAAa,eAAe,OAAO,gBAAgB;AAAA,EAClD,SAAS;AAAA,IACR,IAAI,mCAAmC;AAAA,IACvC,OAAO,mCAAmC,YAAY;AAAA,EACvD;AACD,CAAC;AAED,SAAS,GAAoC,oBAAoB,SAAS,EAAE;AAAA,EAC3E;AAAA,EACA,eAAe;AAChB;AACA;AAAA,EACC,iCAAiC;AAAA,EACjC;AAAA,EACA,eAAe;AAAA;AAChB;AACA;AAAA,EACC,gCAAgC;AAAA,EAChC;AAAA,EACA,eAAe;AAAA;AAChB;AAGA,MAAM,wBAAwB,SAAS,GAA2B,wBAAwB,aAAa;AACvG,sBAAsB,sBAAsB;AAAA,EAC3C,GAAG;AAAA,EACH,YAAY;AAAA,IACX,qDAAqD;AAAA,MACpD,OAAO,mBAAmB;AAAA,MAC1B,MAAM;AAAA,MACN,SAAS;AAAA,MACT,aAAa,SAAS,qDAAqD,4FAA4F;AAAA,IACxK;AAAA,EACD;AACD,CAAC;AAED,kBAAkB,uBAAuB,sBAAsB,kBAAkB,OAAO;",
  "names": []
}
