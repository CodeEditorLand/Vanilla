{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/url/browser/trustedDomainsValidator.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas, matchesScheme } from \"../../../../base/common/network.js\";\nimport Severity from \"../../../../base/common/severity.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IClipboardService } from \"../../../../platform/clipboard/common/clipboardService.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IDialogService } from \"../../../../platform/dialogs/common/dialogs.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tIOpenerService,\n\ttype OpenOptions,\n} from \"../../../../platform/opener/common/opener.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport { IQuickInputService } from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { IStorageService } from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { IWorkspaceTrustManagementService } from \"../../../../platform/workspace/common/workspaceTrust.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport {\n\tITrustedDomainService,\n\tisURLDomainTrusted,\n} from \"./trustedDomainService.js\";\nimport {\n\tconfigureOpenerTrustedDomainsHandler,\n\treadStaticTrustedDomains,\n} from \"./trustedDomains.js\";\n\nexport class OpenerValidatorContributions implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IOpenerService private readonly _openerService: IOpenerService,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t\t@IDialogService private readonly _dialogService: IDialogService,\n\t\t@IProductService private readonly _productService: IProductService,\n\t\t@IQuickInputService private readonly _quickInputService: IQuickInputService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IClipboardService private readonly _clipboardService: IClipboardService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IWorkspaceTrustManagementService private readonly _workspaceTrustService: IWorkspaceTrustManagementService,\n\t\t@ITrustedDomainService private readonly _trustedDomainService: ITrustedDomainService,\n\t) {\n\t\tthis._openerService.registerValidator({ shouldOpen: (uri, options) => this.validateLink(uri, options) });\n\t}\n\n\tasync validateLink(\n\t\tresource: URI | string,\n\t\topenOptions?: OpenOptions,\n\t): Promise<boolean> {\n\t\tif (\n\t\t\t!matchesScheme(resource, Schemas.http) &&\n\t\t\t!matchesScheme(resource, Schemas.https)\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (\n\t\t\topenOptions?.fromWorkspace &&\n\t\t\tthis._workspaceTrustService.isWorkspaceTrusted() &&\n\t\t\t!this._configurationService.getValue(\n\t\t\t\t\"workbench.trustedDomains.promptInTrustedWorkspace\",\n\t\t\t)\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst originalResource = resource;\n\t\tlet resourceUri: URI;\n\t\tif (typeof resource === \"string\") {\n\t\t\tresourceUri = URI.parse(resource);\n\t\t} else {\n\t\t\tresourceUri = resource;\n\t\t}\n\n\t\tif (await this._trustedDomainService.isValid(resourceUri)) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\tconst { scheme, authority, path, query, fragment } = resourceUri;\n\t\t\tlet formattedLink = `${scheme}://${authority}${path}`;\n\n\t\t\tconst linkTail = `${query ? \"?\" + query : \"\"}${fragment ? \"#\" + fragment : \"\"}`;\n\n\t\t\tconst remainingLength = Math.max(0, 60 - formattedLink.length);\n\t\t\tconst linkTailLengthToKeep = Math.min(\n\t\t\t\tMath.max(5, remainingLength),\n\t\t\t\tlinkTail.length,\n\t\t\t);\n\n\t\t\tif (linkTailLengthToKeep === linkTail.length) {\n\t\t\t\tformattedLink += linkTail;\n\t\t\t} else {\n\t\t\t\t// keep the first char ? or #\n\t\t\t\t// add ... and keep the tail end as much as possible\n\t\t\t\tformattedLink +=\n\t\t\t\t\tlinkTail.charAt(0) +\n\t\t\t\t\t\"...\" +\n\t\t\t\t\tlinkTail.substring(\n\t\t\t\t\t\tlinkTail.length - linkTailLengthToKeep + 1,\n\t\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst { result } = await this._dialogService.prompt<boolean>({\n\t\t\t\ttype: Severity.Info,\n\t\t\t\tmessage: localize(\n\t\t\t\t\t\"openExternalLinkAt\",\n\t\t\t\t\t\"Do you want {0} to open the external website?\",\n\t\t\t\t\tthis._productService.nameShort,\n\t\t\t\t),\n\t\t\t\tdetail:\n\t\t\t\t\ttypeof originalResource === \"string\"\n\t\t\t\t\t\t? originalResource\n\t\t\t\t\t\t: formattedLink,\n\t\t\t\tbuttons: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t{ key: \"open\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\t\t\"&&Open\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\trun: () => true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t{ key: \"copy\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\t\t\"&&Copy\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\trun: () => {\n\t\t\t\t\t\t\tthis._clipboardService.writeText(\n\t\t\t\t\t\t\t\ttypeof originalResource === \"string\"\n\t\t\t\t\t\t\t\t\t? originalResource\n\t\t\t\t\t\t\t\t\t: resourceUri.toString(true),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"configureTrustedDomains\",\n\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"Configure &&Trusted Domains\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\trun: async () => {\n\t\t\t\t\t\t\tconst { trustedDomains } =\n\t\t\t\t\t\t\t\tthis._instantiationService.invokeFunction(\n\t\t\t\t\t\t\t\t\treadStaticTrustedDomains,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst domainToOpen = `${scheme}://${authority}`;\n\t\t\t\t\t\t\tconst pickedDomains =\n\t\t\t\t\t\t\t\tawait configureOpenerTrustedDomainsHandler(\n\t\t\t\t\t\t\t\t\ttrustedDomains,\n\t\t\t\t\t\t\t\t\tdomainToOpen,\n\t\t\t\t\t\t\t\t\tresourceUri,\n\t\t\t\t\t\t\t\t\tthis._quickInputService,\n\t\t\t\t\t\t\t\t\tthis._storageService,\n\t\t\t\t\t\t\t\t\tthis._editorService,\n\t\t\t\t\t\t\t\t\tthis._telemetryService,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t// Trust all domains\n\t\t\t\t\t\t\tif (pickedDomains.indexOf(\"*\") !== -1) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Trust current domain\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tisURLDomainTrusted(resourceUri, pickedDomains)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tcancelButton: {\n\t\t\t\t\trun: () => false,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn result;\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
