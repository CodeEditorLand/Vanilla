{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/url/browser/trustedDomainsValidator.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas, matchesScheme } from '../../../../base/common/network.js';\nimport Severity from '../../../../base/common/severity.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { localize } from '../../../../nls.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IOpenerService, OpenOptions } from '../../../../platform/opener/common/opener.js';\nimport { IProductService } from '../../../../platform/product/common/productService.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { IWorkspaceTrustManagementService } from '../../../../platform/workspace/common/workspaceTrust.js';\nimport { IWorkbenchContribution } from '../../../common/contributions.js';\nimport { ITrustedDomainService, isURLDomainTrusted } from './trustedDomainService.js';\nimport { configureOpenerTrustedDomainsHandler, readStaticTrustedDomains } from './trustedDomains.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\n\nexport class OpenerValidatorContributions implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IOpenerService private readonly _openerService: IOpenerService,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t\t@IDialogService private readonly _dialogService: IDialogService,\n\t\t@IProductService private readonly _productService: IProductService,\n\t\t@IQuickInputService private readonly _quickInputService: IQuickInputService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IClipboardService private readonly _clipboardService: IClipboardService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IWorkspaceTrustManagementService private readonly _workspaceTrustService: IWorkspaceTrustManagementService,\n\t\t@ITrustedDomainService private readonly _trustedDomainService: ITrustedDomainService,\n\t) {\n\t\tthis._openerService.registerValidator({ shouldOpen: (uri, options) => this.validateLink(uri, options) });\n\t}\n\n\tasync validateLink(resource: URI | string, openOptions?: OpenOptions): Promise<boolean> {\n\t\tif (!matchesScheme(resource, Schemas.http) && !matchesScheme(resource, Schemas.https)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (openOptions?.fromWorkspace && this._workspaceTrustService.isWorkspaceTrusted() && !this._configurationService.getValue('workbench.trustedDomains.promptInTrustedWorkspace')) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst originalResource = resource;\n\t\tlet resourceUri: URI;\n\t\tif (typeof resource === 'string') {\n\t\t\tresourceUri = URI.parse(resource);\n\t\t} else {\n\t\t\tresourceUri = resource;\n\t\t}\n\n\t\tif (await this._trustedDomainService.isValid(resourceUri)) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\tconst { scheme, authority, path, query, fragment } = resourceUri;\n\t\t\tlet formattedLink = `${scheme}://${authority}${path}`;\n\n\t\t\tconst linkTail = `${query ? '?' + query : ''}${fragment ? '#' + fragment : ''}`;\n\n\n\t\t\tconst remainingLength = Math.max(0, 60 - formattedLink.length);\n\t\t\tconst linkTailLengthToKeep = Math.min(Math.max(5, remainingLength), linkTail.length);\n\n\t\t\tif (linkTailLengthToKeep === linkTail.length) {\n\t\t\t\tformattedLink += linkTail;\n\t\t\t} else {\n\t\t\t\t// keep the first char ? or #\n\t\t\t\t// add ... and keep the tail end as much as possible\n\t\t\t\tformattedLink += linkTail.charAt(0) + '...' + linkTail.substring(linkTail.length - linkTailLengthToKeep + 1);\n\t\t\t}\n\n\t\t\tconst { result } = await this._dialogService.prompt<boolean>({\n\t\t\t\ttype: Severity.Info,\n\t\t\t\tmessage: localize(\n\t\t\t\t\t'openExternalLinkAt',\n\t\t\t\t\t'Do you want {0} to open the external website?',\n\t\t\t\t\tthis._productService.nameShort\n\t\t\t\t),\n\t\t\t\tdetail: typeof originalResource === 'string' ? originalResource : formattedLink,\n\t\t\t\tbuttons: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: localize({ key: 'open', comment: ['&& denotes a mnemonic'] }, '&&Open'),\n\t\t\t\t\t\trun: () => true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: localize({ key: 'copy', comment: ['&& denotes a mnemonic'] }, '&&Copy'),\n\t\t\t\t\t\trun: () => {\n\t\t\t\t\t\t\tthis._clipboardService.writeText(typeof originalResource === 'string' ? originalResource : resourceUri.toString(true));\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: localize({ key: 'configureTrustedDomains', comment: ['&& denotes a mnemonic'] }, 'Configure &&Trusted Domains'),\n\t\t\t\t\t\trun: async () => {\n\t\t\t\t\t\t\tconst { trustedDomains, } = this._instantiationService.invokeFunction(readStaticTrustedDomains);\n\t\t\t\t\t\t\tconst domainToOpen = `${scheme}://${authority}`;\n\t\t\t\t\t\t\tconst pickedDomains = await configureOpenerTrustedDomainsHandler(\n\t\t\t\t\t\t\t\ttrustedDomains,\n\t\t\t\t\t\t\t\tdomainToOpen,\n\t\t\t\t\t\t\t\tresourceUri,\n\t\t\t\t\t\t\t\tthis._quickInputService,\n\t\t\t\t\t\t\t\tthis._storageService,\n\t\t\t\t\t\t\t\tthis._editorService,\n\t\t\t\t\t\t\t\tthis._telemetryService,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t// Trust all domains\n\t\t\t\t\t\t\tif (pickedDomains.indexOf('*') !== -1) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Trust current domain\n\t\t\t\t\t\t\tif (isURLDomainTrusted(resourceUri, pickedDomains)) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tcancelButton: {\n\t\t\t\t\trun: () => false\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn result;\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
