const y=(p,i)=>{let n=p.with({query:null,fragment:null}).toString(!0);const a=t=>t.replace(/\/+$/,"");i=a(i),n=a(n);const h=Array.from({length:n.length+1}).map(()=>Array.from({length:i.length+1}).map(()=>{}));if(/^[^./:]*:\/\//.test(i))return e(h,n,i,0,0);const c=/^(https?):\/\//.exec(n)?.[1];return c?e(h,n,`${c}://${i}`,0,0):!1},e=(p,i,n,a,h)=>{if(p[a]?.[h]!==void 0)return p[a][h];const c=[];if(a===i.length)return h===n.length;if(h===n.length)return i.slice(a)[0]==="/";if(i[a]===n[h]&&c.push(e(p,i,n,a+1,h+1)),n[h]+n[h+1]==="*."&&(["/",":"].includes(i[a])||c.push(e(p,i,n,a+1,h)),c.push(e(p,i,n,a,h+2))),n[h]==="*"&&(a+1===i.length?c.push(e(p,i,n,a+1,h+1)):c.push(e(p,i,n,a+1,h)),c.push(e(p,i,n,a,h+1))),n[h]+n[h+1]===":*")if(i[a]===":"){let t=a+1;do t++;while(/[0-9]/.test(i[t]));c.push(e(p,i,n,t,h+2))}else c.push(e(p,i,n,a,h+2));return p[a][h]=c.some(t=>t===!0)};export{y as testUrlMatchesGlob};
