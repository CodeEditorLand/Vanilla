import{Disposable as a}from"../../../../base/common/lifecycle.js";import*as f from"../../../../nls.js";import{ContextKeyExpr as w}from"../../../../platform/contextkey/common/contextkey.js";import{Registry as b}from"../../../../platform/registry/common/platform.js";import{Extensions as g}from"../../../common/views.js";import{isProposedApiEnabled as V}from"../../../services/extensions/common/extensions.js";import{ViewIdentifierMap as x}from"./viewsWelcomeExtensionPoint.js";const W=b.as(g.ViewsRegistry);class M extends a{viewWelcomeContents=new Map;constructor(t){super(),t.setHandler((n,{added:s,removed:r})=>{for(const i of r)for(const e of i.value)this.viewWelcomeContents.get(e)?.dispose();const l=new Map;for(const i of s)for(const e of i.value){const{group:p,order:m}=y(e,i),d=w.deserialize(e.enablement),u=x[e.view]??e.view;let c=l.get(u);c||(c=new Map,l.set(u,c)),c.set(e,{content:e.contents,when:w.deserialize(e.when),precondition:d,group:p,order:m})}for(const[i,e]of l){const p=W.registerViewWelcomeContent2(i,e);for(const[m,d]of p)this.viewWelcomeContents.set(m,d)}})}}function y(o,t){let n,s;if(o.group){if(!V(t.description,"contribViewsWelcome"))return t.collector.warn(f.localize("ViewsWelcomeExtensionPoint.proposedAPI",`The viewsWelcome contribution in '{0}' requires 'enabledApiProposals: ["contribViewsWelcome"]' in order to use the 'group' proposed property.`,t.description.identifier.value)),{group:n,order:s};const r=o.group.lastIndexOf("@");r>0?(n=o.group.substr(0,r),s=Number(o.group.substr(r+1))||void 0):n=o.group}return{group:n,order:s}}export{M as ViewsWelcomeContribution};
