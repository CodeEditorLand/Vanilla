import*as f from"../../../../nls.js";import{Disposable as u}from"../../../../base/common/lifecycle.js";import{ContextKeyExpr as a}from"../../../../platform/contextkey/common/contextkey.js";import{ViewIdentifierMap as b}from"./viewsWelcomeExtensionPoint.js";import{Registry as g}from"../../../../platform/registry/common/platform.js";import{Extensions as V}from"../../../common/views.js";import{isProposedApiEnabled as W}from"../../../services/extensions/common/extensions.js";const x=g.as(V.ViewsRegistry);class G extends u{viewWelcomeContents=new Map;constructor(n){super(),n.setHandler((t,{added:s,removed:r})=>{for(const i of r)for(const e of i.value)this.viewWelcomeContents.get(e)?.dispose();const l=new Map;for(const i of s)for(const e of i.value){const{group:p,order:d}=I(e,i),m=a.deserialize(e.enablement),w=b[e.view]??e.view;let c=l.get(w);c||(c=new Map,l.set(w,c)),c.set(e,{content:e.contents,when:a.deserialize(e.when),precondition:m,group:p,order:d})}for(const[i,e]of l){const p=x.registerViewWelcomeContent2(i,e);for(const[d,m]of p)this.viewWelcomeContents.set(d,m)}})}}function I(o,n){let t,s;if(o.group){if(!W(n.description,"contribViewsWelcome"))return n.collector.warn(f.localize("ViewsWelcomeExtensionPoint.proposedAPI",`The viewsWelcome contribution in '{0}' requires 'enabledApiProposals: ["contribViewsWelcome"]' in order to use the 'group' proposed property.`,n.description.identifier.value)),{group:t,order:s};const r=o.group.lastIndexOf("@");r>0?(t=o.group.substr(0,r),s=Number(o.group.substr(r+1))||void 0):t=o.group}return{group:t,order:s}}export{G as ViewsWelcomeContribution};
