{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/welcomeViews/common/newFile.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { promiseWithResolvers } from \"../../../../base/common/async.js\";\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n} from \"../../../../base/common/lifecycle.js\";\nimport { assertIsDefined } from \"../../../../base/common/types.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport type { ILocalizedString } from \"../../../../platform/action/common/action.js\";\nimport {\n\tAction2,\n\ttype IMenu,\n\tIMenuService,\n\tMenuId,\n\tMenuItemAction,\n\tMenuRegistry,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport {\n\tIQuickInputService,\n\ttype IQuickPickItem,\n\ttype IQuickPickSeparator,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\ttype IWorkbenchContributionsRegistry,\n\tExtensions as WorkbenchExtensions,\n} from \"../../../common/contributions.js\";\nimport { LifecyclePhase } from \"../../../services/lifecycle/common/lifecycle.js\";\n\nconst builtInSource = localize(\"Built-In\", \"Built-In\");\nconst category: ILocalizedString = localize2(\"Create\", \"Create\");\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"welcome.showNewFileEntries\",\n\t\t\t\ttitle: localize2(\"welcome.newFile\", \"New File...\"),\n\t\t\t\tcategory,\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tprimary:\n\t\t\t\t\t\tKeyMod.Alt +\n\t\t\t\t\t\tKeyMod.CtrlCmd +\n\t\t\t\t\t\tKeyMod.WinCtrl +\n\t\t\t\t\t\tKeyCode.KeyN,\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t},\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.MenubarFileMenu,\n\t\t\t\t\tgroup: \"1_new\",\n\t\t\t\t\torder: 2,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<boolean> {\n\t\t\treturn assertIsDefined(NewFileTemplatesManager.Instance).run();\n\t\t}\n\t},\n);\n\ntype NewFileItem = {\n\tcommandID: string;\n\ttitle: string;\n\tfrom: string;\n\tgroup: string;\n\tcommandArgs?: any;\n};\nclass NewFileTemplatesManager extends Disposable {\n\tstatic Instance: NewFileTemplatesManager | undefined;\n\n\tprivate menu: IMenu;\n\n\tconstructor(\n\t\t@IQuickInputService\n\t\tprivate readonly quickInputService: IQuickInputService,\n\t\t@IContextKeyService\n\t\tprivate readonly contextKeyService: IContextKeyService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IKeybindingService\n\t\tprivate readonly keybindingService: IKeybindingService,\n\t\t@IMenuService menuService: IMenuService,\n\t) {\n\t\tsuper();\n\n\t\tNewFileTemplatesManager.Instance = this;\n\n\t\tthis._register({\n\t\t\tdispose() {\n\t\t\t\tif (NewFileTemplatesManager.Instance === this) {\n\t\t\t\t\tNewFileTemplatesManager.Instance = undefined;\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\tthis.menu = menuService.createMenu(MenuId.NewFile, contextKeyService);\n\t}\n\n\tprivate allEntries(): NewFileItem[] {\n\t\tconst items: NewFileItem[] = [];\n\t\tfor (const [groupName, group] of this.menu.getActions({\n\t\t\trenderShortTitle: true,\n\t\t})) {\n\t\t\tfor (const action of group) {\n\t\t\t\tif (action instanceof MenuItemAction) {\n\t\t\t\t\titems.push({\n\t\t\t\t\t\tcommandID: action.item.id,\n\t\t\t\t\t\tfrom: action.item.source?.title ?? builtInSource,\n\t\t\t\t\t\ttitle: action.label,\n\t\t\t\t\t\tgroup: groupName,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn items;\n\t}\n\n\tasync run(): Promise<boolean> {\n\t\tconst entries = this.allEntries();\n\t\tif (entries.length === 0) {\n\t\t\tthrow Error(\"Unexpected empty new items list\");\n\t\t} else if (entries.length === 1) {\n\t\t\tthis.commandService.executeCommand(entries[0].commandID);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn this.selectNewEntry(entries);\n\t\t}\n\t}\n\n\tprivate async selectNewEntry(entries: NewFileItem[]): Promise<boolean> {\n\t\tconst { promise: resultPromise, resolve: resolveResult } =\n\t\t\tpromiseWithResolvers<boolean>();\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst qp = this.quickInputService.createQuickPick({\n\t\t\tuseSeparators: true,\n\t\t});\n\t\tqp.title = localize(\"newFileTitle\", \"New File...\");\n\t\tqp.placeholder = localize(\n\t\t\t\"newFilePlaceholder\",\n\t\t\t\"Select File Type or Enter File Name...\",\n\t\t);\n\t\tqp.sortByLabel = false;\n\t\tqp.matchOnDetail = true;\n\t\tqp.matchOnDescription = true;\n\n\t\tconst sortCategories = (a: NewFileItem, b: NewFileItem): number => {\n\t\t\tconst categoryPriority: Record<string, number> = {\n\t\t\t\tfile: 1,\n\t\t\t\tnotebook: 2,\n\t\t\t};\n\t\t\tif (categoryPriority[a.group] && categoryPriority[b.group]) {\n\t\t\t\tif (categoryPriority[a.group] !== categoryPriority[b.group]) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tcategoryPriority[b.group] - categoryPriority[a.group]\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else if (categoryPriority[a.group]) {\n\t\t\t\treturn 1;\n\t\t\t} else if (categoryPriority[b.group]) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tif (a.from === builtInSource) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (b.from === builtInSource) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\treturn a.from.localeCompare(b.from);\n\t\t};\n\n\t\tconst displayCategory: Record<string, string> = {\n\t\t\tfile: localize(\"file\", \"File\"),\n\t\t\tnotebook: localize(\"notebook\", \"Notebook\"),\n\t\t};\n\n\t\tconst refreshQp = (entries: NewFileItem[]) => {\n\t\t\tconst items: (\n\t\t\t\t| (IQuickPickItem & NewFileItem)\n\t\t\t\t| IQuickPickSeparator\n\t\t\t)[] = [];\n\t\t\tlet lastSeparator: string | undefined;\n\t\t\tentries\n\t\t\t\t.sort((a, b) => -sortCategories(a, b))\n\t\t\t\t.forEach((entry) => {\n\t\t\t\t\tconst command = entry.commandID;\n\t\t\t\t\tconst keybinding = this.keybindingService.lookupKeybinding(\n\t\t\t\t\t\tcommand || \"\",\n\t\t\t\t\t\tthis.contextKeyService,\n\t\t\t\t\t);\n\t\t\t\t\tif (lastSeparator !== entry.group) {\n\t\t\t\t\t\titems.push({\n\t\t\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\t\t\tlabel: displayCategory[entry.group] ?? entry.group,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tlastSeparator = entry.group;\n\t\t\t\t\t}\n\t\t\t\t\titems.push({\n\t\t\t\t\t\t...entry,\n\t\t\t\t\t\tlabel: entry.title,\n\t\t\t\t\t\ttype: \"item\",\n\t\t\t\t\t\tkeybinding,\n\t\t\t\t\t\tbuttons: command\n\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ticonClass: \"codicon codicon-gear\",\n\t\t\t\t\t\t\t\t\t\ttooltip: localize(\n\t\t\t\t\t\t\t\t\t\t\t\"change keybinding\",\n\t\t\t\t\t\t\t\t\t\t\t\"Configure Keybinding\",\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t: [],\n\t\t\t\t\t\tdetail: \"\",\n\t\t\t\t\t\tdescription: entry.from,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tqp.items = items;\n\t\t};\n\t\trefreshQp(entries);\n\n\t\tdisposables.add(\n\t\t\tthis.menu.onDidChange(() => refreshQp(this.allEntries())),\n\t\t);\n\n\t\tdisposables.add(\n\t\t\tqp.onDidChangeValue((val: string) => {\n\t\t\t\tif (val === \"\") {\n\t\t\t\t\trefreshQp(entries);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst currentTextEntry: NewFileItem = {\n\t\t\t\t\tcommandID: \"workbench.action.files.newFile\",\n\t\t\t\t\tcommandArgs: {\n\t\t\t\t\t\tlanguageId: undefined,\n\t\t\t\t\t\tviewType: undefined,\n\t\t\t\t\t\tfileName: val,\n\t\t\t\t\t},\n\t\t\t\t\ttitle: localize(\n\t\t\t\t\t\t\"miNewFileWithName\",\n\t\t\t\t\t\t\"Create New File ({0})\",\n\t\t\t\t\t\tval,\n\t\t\t\t\t),\n\t\t\t\t\tgroup: \"file\",\n\t\t\t\t\tfrom: builtInSource,\n\t\t\t\t};\n\t\t\t\trefreshQp([currentTextEntry, ...entries]);\n\t\t\t}),\n\t\t);\n\n\t\tdisposables.add(\n\t\t\tqp.onDidAccept(async (e) => {\n\t\t\t\tconst selected = qp.selectedItems[0] as IQuickPickItem &\n\t\t\t\t\tNewFileItem;\n\t\t\t\tresolveResult(!!selected);\n\n\t\t\t\tqp.hide();\n\t\t\t\tif (selected) {\n\t\t\t\t\tawait this.commandService.executeCommand(\n\t\t\t\t\t\tselected.commandID,\n\t\t\t\t\t\tselected.commandArgs,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tdisposables.add(\n\t\t\tqp.onDidHide(() => {\n\t\t\t\tqp.dispose();\n\t\t\t\tdisposables.dispose();\n\t\t\t\tresolveResult(false);\n\t\t\t}),\n\t\t);\n\n\t\tdisposables.add(\n\t\t\tqp.onDidTriggerItemButton((e) => {\n\t\t\t\tqp.hide();\n\t\t\t\tthis.commandService.executeCommand(\n\t\t\t\t\t\"workbench.action.openGlobalKeybindings\",\n\t\t\t\t\t(e.item as IQuickPickItem & NewFileItem).commandID,\n\t\t\t\t);\n\t\t\t\tresolveResult(false);\n\t\t\t}),\n\t\t);\n\n\t\tqp.show();\n\n\t\treturn resultPromise;\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n).registerWorkbenchContribution(\n\tNewFileTemplatesManager,\n\tLifecyclePhase.Restored,\n);\n\nMenuRegistry.appendMenuItem(MenuId.NewFile, {\n\tgroup: \"file\",\n\tcommand: {\n\t\tid: \"workbench.action.files.newUntitledFile\",\n\t\ttitle: localize(\"miNewFile2\", \"Text File\"),\n\t},\n\torder: 1,\n});\n"],
  "mappings": "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",
  "names": ["entries"]
}
