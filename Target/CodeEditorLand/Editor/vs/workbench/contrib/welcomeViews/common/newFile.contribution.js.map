{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/welcomeViews/common/newFile.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { promiseWithResolvers } from '../../../../base/common/async.js';\nimport { KeyMod, KeyCode } from '../../../../base/common/keyCodes.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { assertIsDefined } from '../../../../base/common/types.js';\nimport { localize, localize2 } from '../../../../nls.js';\nimport { ILocalizedString } from '../../../../platform/action/common/action.js';\nimport { Action2, IMenuService, MenuId, registerAction2, IMenu, MenuRegistry, MenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { IQuickInputService, IQuickPickItem, IQuickPickSeparator } from '../../../../platform/quickinput/common/quickInput.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContributionsRegistry } from '../../../common/contributions.js';\nimport { LifecyclePhase } from '../../../services/lifecycle/common/lifecycle.js';\n\nconst builtInSource = localize('Built-In', \"Built-In\");\nconst category: ILocalizedString = localize2('Create', 'Create');\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'welcome.showNewFileEntries',\n\t\t\ttitle: localize2('welcome.newFile', 'New File...'),\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.Alt + KeyMod.CtrlCmd + KeyMod.WinCtrl + KeyCode.KeyN,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarFileMenu,\n\t\t\t\tgroup: '1_new',\n\t\t\t\torder: 2\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<boolean> {\n\t\treturn assertIsDefined(NewFileTemplatesManager.Instance).run();\n\t}\n});\n\ntype NewFileItem = { commandID: string; title: string; from: string; group: string; commandArgs?: any };\nclass NewFileTemplatesManager extends Disposable {\n\tstatic Instance: NewFileTemplatesManager | undefined;\n\n\tprivate menu: IMenu;\n\n\tconstructor(\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@IMenuService menuService: IMenuService,\n\t) {\n\t\tsuper();\n\n\t\tNewFileTemplatesManager.Instance = this;\n\n\t\tthis._register({ dispose() { if (NewFileTemplatesManager.Instance === this) { NewFileTemplatesManager.Instance = undefined; } } });\n\n\t\tthis.menu = menuService.createMenu(MenuId.NewFile, contextKeyService);\n\t}\n\n\tprivate allEntries(): NewFileItem[] {\n\t\tconst items: NewFileItem[] = [];\n\t\tfor (const [groupName, group] of this.menu.getActions({ renderShortTitle: true })) {\n\t\t\tfor (const action of group) {\n\t\t\t\tif (action instanceof MenuItemAction) {\n\t\t\t\t\titems.push({ commandID: action.item.id, from: action.item.source?.title ?? builtInSource, title: action.label, group: groupName });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn items;\n\t}\n\n\tasync run(): Promise<boolean> {\n\t\tconst entries = this.allEntries();\n\t\tif (entries.length === 0) {\n\t\t\tthrow Error('Unexpected empty new items list');\n\t\t}\n\t\telse if (entries.length === 1) {\n\t\t\tthis.commandService.executeCommand(entries[0].commandID);\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn this.selectNewEntry(entries);\n\t\t}\n\t}\n\n\tprivate async selectNewEntry(entries: NewFileItem[]): Promise<boolean> {\n\t\tconst { promise: resultPromise, resolve: resolveResult } = promiseWithResolvers<boolean>();\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst qp = this.quickInputService.createQuickPick({ useSeparators: true });\n\t\tqp.title = localize('newFileTitle', \"New File...\");\n\t\tqp.placeholder = localize('newFilePlaceholder', \"Select File Type or Enter File Name...\");\n\t\tqp.sortByLabel = false;\n\t\tqp.matchOnDetail = true;\n\t\tqp.matchOnDescription = true;\n\n\t\tconst sortCategories = (a: NewFileItem, b: NewFileItem): number => {\n\t\t\tconst categoryPriority: Record<string, number> = { 'file': 1, 'notebook': 2 };\n\t\t\tif (categoryPriority[a.group] && categoryPriority[b.group]) {\n\t\t\t\tif (categoryPriority[a.group] !== categoryPriority[b.group]) {\n\t\t\t\t\treturn categoryPriority[b.group] - categoryPriority[a.group];\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (categoryPriority[a.group]) { return 1; }\n\t\t\telse if (categoryPriority[b.group]) { return -1; }\n\n\t\t\tif (a.from === builtInSource) { return 1; }\n\t\t\tif (b.from === builtInSource) { return -1; }\n\n\t\t\treturn a.from.localeCompare(b.from);\n\t\t};\n\n\t\tconst displayCategory: Record<string, string> = {\n\t\t\t'file': localize('file', \"File\"),\n\t\t\t'notebook': localize('notebook', \"Notebook\"),\n\t\t};\n\n\t\tconst refreshQp = (entries: NewFileItem[]) => {\n\t\t\tconst items: (((IQuickPickItem & NewFileItem) | IQuickPickSeparator))[] = [];\n\t\t\tlet lastSeparator: string | undefined;\n\t\t\tentries\n\t\t\t\t.sort((a, b) => -sortCategories(a, b))\n\t\t\t\t.forEach((entry) => {\n\t\t\t\t\tconst command = entry.commandID;\n\t\t\t\t\tconst keybinding = this.keybindingService.lookupKeybinding(command || '', this.contextKeyService);\n\t\t\t\t\tif (lastSeparator !== entry.group) {\n\t\t\t\t\t\titems.push({\n\t\t\t\t\t\t\ttype: 'separator',\n\t\t\t\t\t\t\tlabel: displayCategory[entry.group] ?? entry.group\n\t\t\t\t\t\t});\n\t\t\t\t\t\tlastSeparator = entry.group;\n\t\t\t\t\t}\n\t\t\t\t\titems.push({\n\t\t\t\t\t\t...entry,\n\t\t\t\t\t\tlabel: entry.title,\n\t\t\t\t\t\ttype: 'item',\n\t\t\t\t\t\tkeybinding,\n\t\t\t\t\t\tbuttons: command ? [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ticonClass: 'codicon codicon-gear',\n\t\t\t\t\t\t\t\ttooltip: localize('change keybinding', \"Configure Keybinding\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t] : [],\n\t\t\t\t\t\tdetail: '',\n\t\t\t\t\t\tdescription: entry.from,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tqp.items = items;\n\t\t};\n\t\trefreshQp(entries);\n\n\t\tdisposables.add(this.menu.onDidChange(() => refreshQp(this.allEntries())));\n\n\t\tdisposables.add(qp.onDidChangeValue((val: string) => {\n\t\t\tif (val === '') {\n\t\t\t\trefreshQp(entries);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst currentTextEntry: NewFileItem = {\n\t\t\t\tcommandID: 'workbench.action.files.newFile',\n\t\t\t\tcommandArgs: { languageId: undefined, viewType: undefined, fileName: val },\n\t\t\t\ttitle: localize('miNewFileWithName', \"Create New File ({0})\", val),\n\t\t\t\tgroup: 'file',\n\t\t\t\tfrom: builtInSource,\n\t\t\t};\n\t\t\trefreshQp([currentTextEntry, ...entries]);\n\t\t}));\n\n\t\tdisposables.add(qp.onDidAccept(async e => {\n\t\t\tconst selected = qp.selectedItems[0] as (IQuickPickItem & NewFileItem);\n\t\t\tresolveResult(!!selected);\n\n\t\t\tqp.hide();\n\t\t\tif (selected) { await this.commandService.executeCommand(selected.commandID, selected.commandArgs); }\n\t\t}));\n\n\t\tdisposables.add(qp.onDidHide(() => {\n\t\t\tqp.dispose();\n\t\t\tdisposables.dispose();\n\t\t\tresolveResult(false);\n\t\t}));\n\n\t\tdisposables.add(qp.onDidTriggerItemButton(e => {\n\t\t\tqp.hide();\n\t\t\tthis.commandService.executeCommand('workbench.action.openGlobalKeybindings', (e.item as (IQuickPickItem & NewFileItem)).commandID);\n\t\t\tresolveResult(false);\n\t\t}));\n\n\t\tqp.show();\n\n\t\treturn resultPromise;\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench)\n\t.registerWorkbenchContribution(NewFileTemplatesManager, LifecyclePhase.Restored);\n\nMenuRegistry.appendMenuItem(MenuId.NewFile, {\n\tgroup: 'file',\n\tcommand: {\n\t\tid: 'workbench.action.files.newUntitledFile',\n\t\ttitle: localize('miNewFile2', \"Text File\")\n\t},\n\torder: 1\n});\n"],
  "mappings": "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",
  "names": ["entries"]
}
