import"../../../../base/common/actions.js";import"../../../../base/common/collections.js";import"../../../../base/common/event.js";import"../../../../base/common/lifecycle.js";import*as e from"../../../../nls.js";import{ContextKeyExpr as o,RawContextKey as s}from"../../../../platform/contextkey/common/contextkey.js";import{createDecorator as t}from"../../../../platform/instantiation/common/instantiation.js";import"../../../../platform/workspace/common/workspace.js";import"./tasks.js";import"./taskSystem.js";const r=new s("customExecutionSupported",!1,e.localize("tasks.customExecutionSupported","Whether CustomExecution tasks are supported. Consider using in the when clause of a 'taskDefinition' contribution.")),n=new s("shellExecutionSupported",!1,e.localize("tasks.shellExecutionSupported","Whether ShellExecution tasks are supported. Consider using in the when clause of a 'taskDefinition' contribution.")),M=new s("taskCommandsRegistered",!1,e.localize("tasks.taskCommandsRegistered","Whether the task commands have been registered yet")),a=new s("processExecutionSupported",!1,e.localize("tasks.processExecutionSupported","Whether ProcessExecution tasks are supported. Consider using in the when clause of a 'taskDefinition' contribution.")),A=new s("serverlessWebContext",!1,e.localize("tasks.serverlessWebContext","True when in the web with no remote authority.")),K=o.or(o.and(n,a),r),B=t("taskService");export{r as CustomExecutionSupportedContext,B as ITaskService,a as ProcessExecutionSupportedContext,A as ServerlessWebContext,n as ShellExecutionSupportedContext,M as TaskCommandsRegistered,K as TaskExecutionSupportedContext};
