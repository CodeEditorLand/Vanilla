{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/tasks/common/jsonSchemaCommon.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IJSONSchema } from \"../../../../base/common/jsonSchema.js\";\nimport * as nls from \"../../../../nls.js\";\n\nimport { Schemas } from \"./problemMatcher.js\";\n\nconst schema: IJSONSchema = {\n\tdefinitions: {\n\t\tshowOutputType: {\n\t\t\ttype: \"string\",\n\t\t\tenum: [\"always\", \"silent\", \"never\"],\n\t\t},\n\t\toptions: {\n\t\t\ttype: \"object\",\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"JsonSchema.options\",\n\t\t\t\t\"Additional command options\",\n\t\t\t),\n\t\t\tproperties: {\n\t\t\t\tcwd: {\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.options.cwd\",\n\t\t\t\t\t\t\"The current working directory of the executed program or script. If omitted Code's current workspace root is used.\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tenv: {\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tadditionalProperties: {\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t},\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.options.env\",\n\t\t\t\t\t\t\"The environment of the executed program or shell. If omitted the parent process' environment is used.\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t},\n\t\t\tadditionalProperties: {\n\t\t\t\ttype: [\"string\", \"array\", \"object\"],\n\t\t\t},\n\t\t},\n\t\tproblemMatcherType: {\n\t\t\toneOf: [\n\t\t\t\t{\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t\terrorMessage: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.tasks.matcherError\",\n\t\t\t\t\t\t\"Unrecognized problem matcher. Is the extension that contributes this problem matcher installed?\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tSchemas.LegacyProblemMatcher,\n\t\t\t\t{\n\t\t\t\t\ttype: \"array\",\n\t\t\t\t\titems: {\n\t\t\t\t\t\tanyOf: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\terrorMessage: nls.localize(\n\t\t\t\t\t\t\t\t\t\"JsonSchema.tasks.matcherError\",\n\t\t\t\t\t\t\t\t\t\"Unrecognized problem matcher. Is the extension that contributes this problem matcher installed?\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tSchemas.LegacyProblemMatcher,\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\tshellConfiguration: {\n\t\t\ttype: \"object\",\n\t\t\tadditionalProperties: false,\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"JsonSchema.shellConfiguration\",\n\t\t\t\t\"Configures the shell to be used.\",\n\t\t\t),\n\t\t\tproperties: {\n\t\t\t\texecutable: {\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.shell.executable\",\n\t\t\t\t\t\t\"The shell to be used.\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\targs: {\n\t\t\t\t\ttype: \"array\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.shell.args\",\n\t\t\t\t\t\t\"The shell arguments.\",\n\t\t\t\t\t),\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tcommandConfiguration: {\n\t\t\ttype: \"object\",\n\t\t\tadditionalProperties: false,\n\t\t\tproperties: {\n\t\t\t\tcommand: {\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.command\",\n\t\t\t\t\t\t\"The command to be executed. Can be an external program or a shell command.\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\targs: {\n\t\t\t\t\ttype: \"array\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.tasks.args\",\n\t\t\t\t\t\t\"Arguments passed to the command when this task is invoked.\",\n\t\t\t\t\t),\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: {\n\t\t\t\t\t$ref: \"#/definitions/options\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\ttaskDescription: {\n\t\t\ttype: \"object\",\n\t\t\trequired: [\"taskName\"],\n\t\t\tadditionalProperties: false,\n\t\t\tproperties: {\n\t\t\t\ttaskName: {\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.tasks.taskName\",\n\t\t\t\t\t\t\"The task's name\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tcommand: {\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.command\",\n\t\t\t\t\t\t\"The command to be executed. Can be an external program or a shell command.\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\targs: {\n\t\t\t\t\ttype: \"array\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.tasks.args\",\n\t\t\t\t\t\t\"Arguments passed to the command when this task is invoked.\",\n\t\t\t\t\t),\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: {\n\t\t\t\t\t$ref: \"#/definitions/options\",\n\t\t\t\t},\n\t\t\t\twindows: {\n\t\t\t\t\tanyOf: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$ref: \"#/definitions/commandConfiguration\",\n\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\"JsonSchema.tasks.windows\",\n\t\t\t\t\t\t\t\t\"Windows specific command configuration\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\tproblemMatcher: {\n\t\t\t\t\t\t\t\t\t$ref: \"#/definitions/problemMatcherType\",\n\t\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\t\"JsonSchema.tasks.matchers\",\n\t\t\t\t\t\t\t\t\t\t\"The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\tosx: {\n\t\t\t\t\tanyOf: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$ref: \"#/definitions/commandConfiguration\",\n\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\"JsonSchema.tasks.mac\",\n\t\t\t\t\t\t\t\t\"Mac specific command configuration\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\tproblemMatcher: {\n\t\t\t\t\t\t\t\t\t$ref: \"#/definitions/problemMatcherType\",\n\t\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\t\"JsonSchema.tasks.matchers\",\n\t\t\t\t\t\t\t\t\t\t\"The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\tlinux: {\n\t\t\t\t\tanyOf: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$ref: \"#/definitions/commandConfiguration\",\n\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\"JsonSchema.tasks.linux\",\n\t\t\t\t\t\t\t\t\"Linux specific command configuration\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\tproblemMatcher: {\n\t\t\t\t\t\t\t\t\t$ref: \"#/definitions/problemMatcherType\",\n\t\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\t\"JsonSchema.tasks.matchers\",\n\t\t\t\t\t\t\t\t\t\t\"The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\tsuppressTaskName: {\n\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.tasks.suppressTaskName\",\n\t\t\t\t\t\t\"Controls whether the task name is added as an argument to the command. If omitted the globally defined value is used.\",\n\t\t\t\t\t),\n\t\t\t\t\tdefault: true,\n\t\t\t\t},\n\t\t\t\tshowOutput: {\n\t\t\t\t\t$ref: \"#/definitions/showOutputType\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.tasks.showOutput\",\n\t\t\t\t\t\t\"Controls whether the output of the running task is shown or not. If omitted the globally defined value is used.\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\techoCommand: {\n\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.echoCommand\",\n\t\t\t\t\t\t\"Controls whether the executed command is echoed to the output. Default is false.\",\n\t\t\t\t\t),\n\t\t\t\t\tdefault: true,\n\t\t\t\t},\n\t\t\t\tisWatching: {\n\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\tdeprecationMessage: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.tasks.watching.deprecation\",\n\t\t\t\t\t\t\"Deprecated. Use isBackground instead.\",\n\t\t\t\t\t),\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.tasks.watching\",\n\t\t\t\t\t\t\"Whether the executed task is kept alive and is watching the file system.\",\n\t\t\t\t\t),\n\t\t\t\t\tdefault: true,\n\t\t\t\t},\n\t\t\t\tisBackground: {\n\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.tasks.background\",\n\t\t\t\t\t\t\"Whether the executed task is kept alive and is running in the background.\",\n\t\t\t\t\t),\n\t\t\t\t\tdefault: true,\n\t\t\t\t},\n\t\t\t\tpromptOnClose: {\n\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.tasks.promptOnClose\",\n\t\t\t\t\t\t\"Whether the user is prompted when VS Code closes with a running task.\",\n\t\t\t\t\t),\n\t\t\t\t\tdefault: false,\n\t\t\t\t},\n\t\t\t\tisBuildCommand: {\n\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.tasks.build\",\n\t\t\t\t\t\t\"Maps this task to Code's default build command.\",\n\t\t\t\t\t),\n\t\t\t\t\tdefault: true,\n\t\t\t\t},\n\t\t\t\tisTestCommand: {\n\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.tasks.test\",\n\t\t\t\t\t\t\"Maps this task to Code's default test command.\",\n\t\t\t\t\t),\n\t\t\t\t\tdefault: true,\n\t\t\t\t},\n\t\t\t\tproblemMatcher: {\n\t\t\t\t\t$ref: \"#/definitions/problemMatcherType\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.tasks.matchers\",\n\t\t\t\t\t\t\"The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\ttaskRunnerConfiguration: {\n\t\t\ttype: \"object\",\n\t\t\trequired: [],\n\t\t\tproperties: {\n\t\t\t\tcommand: {\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.command\",\n\t\t\t\t\t\t\"The command to be executed. Can be an external program or a shell command.\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\targs: {\n\t\t\t\t\ttype: \"array\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.args\",\n\t\t\t\t\t\t\"Additional arguments passed to the command.\",\n\t\t\t\t\t),\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: {\n\t\t\t\t\t$ref: \"#/definitions/options\",\n\t\t\t\t},\n\t\t\t\tshowOutput: {\n\t\t\t\t\t$ref: \"#/definitions/showOutputType\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.showOutput\",\n\t\t\t\t\t\t\"Controls whether the output of the running task is shown or not. If omitted 'always' is used.\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tisWatching: {\n\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\tdeprecationMessage: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.watching.deprecation\",\n\t\t\t\t\t\t\"Deprecated. Use isBackground instead.\",\n\t\t\t\t\t),\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.watching\",\n\t\t\t\t\t\t\"Whether the executed task is kept alive and is watching the file system.\",\n\t\t\t\t\t),\n\t\t\t\t\tdefault: true,\n\t\t\t\t},\n\t\t\t\tisBackground: {\n\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.background\",\n\t\t\t\t\t\t\"Whether the executed task is kept alive and is running in the background.\",\n\t\t\t\t\t),\n\t\t\t\t\tdefault: true,\n\t\t\t\t},\n\t\t\t\tpromptOnClose: {\n\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.promptOnClose\",\n\t\t\t\t\t\t\"Whether the user is prompted when VS Code closes with a running background task.\",\n\t\t\t\t\t),\n\t\t\t\t\tdefault: false,\n\t\t\t\t},\n\t\t\t\techoCommand: {\n\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.echoCommand\",\n\t\t\t\t\t\t\"Controls whether the executed command is echoed to the output. Default is false.\",\n\t\t\t\t\t),\n\t\t\t\t\tdefault: true,\n\t\t\t\t},\n\t\t\t\tsuppressTaskName: {\n\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.suppressTaskName\",\n\t\t\t\t\t\t\"Controls whether the task name is added as an argument to the command. Default is false.\",\n\t\t\t\t\t),\n\t\t\t\t\tdefault: true,\n\t\t\t\t},\n\t\t\t\ttaskSelector: {\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.taskSelector\",\n\t\t\t\t\t\t\"Prefix to indicate that an argument is task.\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tproblemMatcher: {\n\t\t\t\t\t$ref: \"#/definitions/problemMatcherType\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.matchers\",\n\t\t\t\t\t\t\"The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\ttasks: {\n\t\t\t\t\ttype: \"array\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"JsonSchema.tasks\",\n\t\t\t\t\t\t\"The task configurations. Usually these are enrichments of task already defined in the external task runner.\",\n\t\t\t\t\t),\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\t$ref: \"#/definitions/taskDescription\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n};\n\nexport default schema;\n"],
  "mappings": "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",
  "names": []
}
