{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/tasks/common/jsonSchemaCommon.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\nimport { IJSONSchema } from '../../../../base/common/jsonSchema.js';\n\nimport { Schemas } from './problemMatcher.js';\n\nconst schema: IJSONSchema = {\n\tdefinitions: {\n\t\tshowOutputType: {\n\t\t\ttype: 'string',\n\t\t\tenum: ['always', 'silent', 'never']\n\t\t},\n\t\toptions: {\n\t\t\ttype: 'object',\n\t\t\tdescription: nls.localize('JsonSchema.options', 'Additional command options'),\n\t\t\tproperties: {\n\t\t\t\tcwd: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.options.cwd', 'The current working directory of the executed program or script. If omitted Code\\'s current workspace root is used.')\n\t\t\t\t},\n\t\t\t\tenv: {\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tadditionalProperties: {\n\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t},\n\t\t\t\t\tdescription: nls.localize('JsonSchema.options.env', 'The environment of the executed program or shell. If omitted the parent process\\' environment is used.')\n\t\t\t\t}\n\t\t\t},\n\t\t\tadditionalProperties: {\n\t\t\t\ttype: ['string', 'array', 'object']\n\t\t\t}\n\t\t},\n\t\tproblemMatcherType: {\n\t\t\toneOf: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\terrorMessage: nls.localize('JsonSchema.tasks.matcherError', 'Unrecognized problem matcher. Is the extension that contributes this problem matcher installed?')\n\t\t\t\t},\n\t\t\t\tSchemas.LegacyProblemMatcher,\n\t\t\t\t{\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\titems: {\n\t\t\t\t\t\tanyOf: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\terrorMessage: nls.localize('JsonSchema.tasks.matcherError', 'Unrecognized problem matcher. Is the extension that contributes this problem matcher installed?')\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tSchemas.LegacyProblemMatcher\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\tshellConfiguration: {\n\t\t\ttype: 'object',\n\t\t\tadditionalProperties: false,\n\t\t\tdescription: nls.localize('JsonSchema.shellConfiguration', 'Configures the shell to be used.'),\n\t\t\tproperties: {\n\t\t\t\texecutable: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.shell.executable', 'The shell to be used.')\n\t\t\t\t},\n\t\t\t\targs: {\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.shell.args', 'The shell arguments.'),\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcommandConfiguration: {\n\t\t\ttype: 'object',\n\t\t\tadditionalProperties: false,\n\t\t\tproperties: {\n\t\t\t\tcommand: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.command', 'The command to be executed. Can be an external program or a shell command.')\n\t\t\t\t},\n\t\t\t\targs: {\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.args', 'Arguments passed to the command when this task is invoked.'),\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\toptions: {\n\t\t\t\t\t$ref: '#/definitions/options'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ttaskDescription: {\n\t\t\ttype: 'object',\n\t\t\trequired: ['taskName'],\n\t\t\tadditionalProperties: false,\n\t\t\tproperties: {\n\t\t\t\ttaskName: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.taskName', \"The task's name\")\n\t\t\t\t},\n\t\t\t\tcommand: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.command', 'The command to be executed. Can be an external program or a shell command.')\n\t\t\t\t},\n\t\t\t\targs: {\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.args', 'Arguments passed to the command when this task is invoked.'),\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\toptions: {\n\t\t\t\t\t$ref: '#/definitions/options'\n\t\t\t\t},\n\t\t\t\twindows: {\n\t\t\t\t\tanyOf: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$ref: '#/definitions/commandConfiguration',\n\t\t\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.windows', 'Windows specific command configuration'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\tproblemMatcher: {\n\t\t\t\t\t\t\t\t\t$ref: '#/definitions/problemMatcherType',\n\t\t\t\t\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.matchers', 'The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\tosx: {\n\t\t\t\t\tanyOf: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$ref: '#/definitions/commandConfiguration',\n\t\t\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.mac', 'Mac specific command configuration')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\tproblemMatcher: {\n\t\t\t\t\t\t\t\t\t$ref: '#/definitions/problemMatcherType',\n\t\t\t\t\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.matchers', 'The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\tlinux: {\n\t\t\t\t\tanyOf: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$ref: '#/definitions/commandConfiguration',\n\t\t\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.linux', 'Linux specific command configuration')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\tproblemMatcher: {\n\t\t\t\t\t\t\t\t\t$ref: '#/definitions/problemMatcherType',\n\t\t\t\t\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.matchers', 'The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\tsuppressTaskName: {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.suppressTaskName', 'Controls whether the task name is added as an argument to the command. If omitted the globally defined value is used.'),\n\t\t\t\t\tdefault: true\n\t\t\t\t},\n\t\t\t\tshowOutput: {\n\t\t\t\t\t$ref: '#/definitions/showOutputType',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.showOutput', 'Controls whether the output of the running task is shown or not. If omitted the globally defined value is used.')\n\t\t\t\t},\n\t\t\t\techoCommand: {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.echoCommand', 'Controls whether the executed command is echoed to the output. Default is false.'),\n\t\t\t\t\tdefault: true\n\t\t\t\t},\n\t\t\t\tisWatching: {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdeprecationMessage: nls.localize('JsonSchema.tasks.watching.deprecation', 'Deprecated. Use isBackground instead.'),\n\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.watching', 'Whether the executed task is kept alive and is watching the file system.'),\n\t\t\t\t\tdefault: true\n\t\t\t\t},\n\t\t\t\tisBackground: {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.background', 'Whether the executed task is kept alive and is running in the background.'),\n\t\t\t\t\tdefault: true\n\t\t\t\t},\n\t\t\t\tpromptOnClose: {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.promptOnClose', 'Whether the user is prompted when VS Code closes with a running task.'),\n\t\t\t\t\tdefault: false\n\t\t\t\t},\n\t\t\t\tisBuildCommand: {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.build', 'Maps this task to Code\\'s default build command.'),\n\t\t\t\t\tdefault: true\n\t\t\t\t},\n\t\t\t\tisTestCommand: {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.test', 'Maps this task to Code\\'s default test command.'),\n\t\t\t\t\tdefault: true\n\t\t\t\t},\n\t\t\t\tproblemMatcher: {\n\t\t\t\t\t$ref: '#/definitions/problemMatcherType',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks.matchers', 'The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.')\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ttaskRunnerConfiguration: {\n\t\t\ttype: 'object',\n\t\t\trequired: [],\n\t\t\tproperties: {\n\t\t\t\tcommand: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.command', 'The command to be executed. Can be an external program or a shell command.')\n\t\t\t\t},\n\t\t\t\targs: {\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.args', 'Additional arguments passed to the command.'),\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\toptions: {\n\t\t\t\t\t$ref: '#/definitions/options'\n\t\t\t\t},\n\t\t\t\tshowOutput: {\n\t\t\t\t\t$ref: '#/definitions/showOutputType',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.showOutput', 'Controls whether the output of the running task is shown or not. If omitted \\'always\\' is used.')\n\t\t\t\t},\n\t\t\t\tisWatching: {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdeprecationMessage: nls.localize('JsonSchema.watching.deprecation', 'Deprecated. Use isBackground instead.'),\n\t\t\t\t\tdescription: nls.localize('JsonSchema.watching', 'Whether the executed task is kept alive and is watching the file system.'),\n\t\t\t\t\tdefault: true\n\t\t\t\t},\n\t\t\t\tisBackground: {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.background', 'Whether the executed task is kept alive and is running in the background.'),\n\t\t\t\t\tdefault: true\n\t\t\t\t},\n\t\t\t\tpromptOnClose: {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.promptOnClose', 'Whether the user is prompted when VS Code closes with a running background task.'),\n\t\t\t\t\tdefault: false\n\t\t\t\t},\n\t\t\t\techoCommand: {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.echoCommand', 'Controls whether the executed command is echoed to the output. Default is false.'),\n\t\t\t\t\tdefault: true\n\t\t\t\t},\n\t\t\t\tsuppressTaskName: {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.suppressTaskName', 'Controls whether the task name is added as an argument to the command. Default is false.'),\n\t\t\t\t\tdefault: true\n\t\t\t\t},\n\t\t\t\ttaskSelector: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.taskSelector', 'Prefix to indicate that an argument is task.')\n\t\t\t\t},\n\t\t\t\tproblemMatcher: {\n\t\t\t\t\t$ref: '#/definitions/problemMatcherType',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.matchers', 'The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.')\n\t\t\t\t},\n\t\t\t\ttasks: {\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\tdescription: nls.localize('JsonSchema.tasks', 'The task configurations. Usually these are enrichments of task already defined in the external task runner.'),\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t$ref: '#/definitions/taskDescription'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport default schema;\n"],
  "mappings": "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",
  "names": []
}
