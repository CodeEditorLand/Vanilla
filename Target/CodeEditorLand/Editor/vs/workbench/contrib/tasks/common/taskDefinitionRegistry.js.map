{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/tasks/common/taskDefinitionRegistry.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\nimport { IJSONSchema, IJSONSchemaMap } from '../../../../base/common/jsonSchema.js';\nimport { IStringDictionary } from '../../../../base/common/collections.js';\nimport * as Types from '../../../../base/common/types.js';\nimport * as Objects from '../../../../base/common/objects.js';\n\nimport { ExtensionsRegistry, ExtensionMessageCollector } from '../../../services/extensions/common/extensionsRegistry.js';\n\nimport * as Tasks from './tasks.js';\nimport { ExtensionIdentifier } from '../../../../platform/extensions/common/extensions.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\n\n\nconst taskDefinitionSchema: IJSONSchema = {\n\ttype: 'object',\n\tadditionalProperties: false,\n\tproperties: {\n\t\ttype: {\n\t\t\ttype: 'string',\n\t\t\tdescription: nls.localize('TaskDefinition.description', 'The actual task type. Please note that types starting with a \\'$\\' are reserved for internal usage.')\n\t\t},\n\t\trequired: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\ttype: 'string'\n\t\t\t}\n\t\t},\n\t\tproperties: {\n\t\t\ttype: 'object',\n\t\t\tdescription: nls.localize('TaskDefinition.properties', 'Additional properties of the task type'),\n\t\t\tadditionalProperties: {\n\t\t\t\t$ref: 'http://json-schema.org/draft-07/schema#'\n\t\t\t}\n\t\t},\n\t\twhen: {\n\t\t\ttype: 'string',\n\t\t\tmarkdownDescription: nls.localize('TaskDefinition.when', 'Condition which must be true to enable this type of task. Consider using `shellExecutionSupported`, `processExecutionSupported`, and `customExecutionSupported` as appropriate for this task definition. See the [API documentation](https://code.visualstudio.com/api/extension-guides/task-provider#when-clause) for more information.'),\n\t\t\tdefault: ''\n\t\t}\n\t}\n};\n\nnamespace Configuration {\n\texport interface ITaskDefinition {\n\t\ttype?: string;\n\t\trequired?: string[];\n\t\tproperties?: IJSONSchemaMap;\n\t\twhen?: string;\n\t}\n\n\texport function from(value: ITaskDefinition, extensionId: ExtensionIdentifier, messageCollector: ExtensionMessageCollector): Tasks.ITaskDefinition | undefined {\n\t\tif (!value) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst taskType = Types.isString(value.type) ? value.type : undefined;\n\t\tif (!taskType || taskType.length === 0) {\n\t\t\tmessageCollector.error(nls.localize('TaskTypeConfiguration.noType', 'The task type configuration is missing the required \\'taskType\\' property'));\n\t\t\treturn undefined;\n\t\t}\n\t\tconst required: string[] = [];\n\t\tif (Array.isArray(value.required)) {\n\t\t\tfor (const element of value.required) {\n\t\t\t\tif (Types.isString(element)) {\n\t\t\t\t\trequired.push(element);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\textensionId: extensionId.value,\n\t\t\ttaskType, required: required,\n\t\t\tproperties: value.properties ? Objects.deepClone(value.properties) : {},\n\t\t\twhen: value.when ? ContextKeyExpr.deserialize(value.when) : undefined\n\t\t};\n\t}\n}\n\n\nconst taskDefinitionsExtPoint = ExtensionsRegistry.registerExtensionPoint<Configuration.ITaskDefinition[]>({\n\textensionPoint: 'taskDefinitions',\n\tactivationEventsGenerator: (contributions: Configuration.ITaskDefinition[], result: { push(item: string): void }) => {\n\t\tfor (const task of contributions) {\n\t\t\tif (task.type) {\n\t\t\t\tresult.push(`onTaskType:${task.type}`);\n\t\t\t}\n\t\t}\n\t},\n\tjsonSchema: {\n\t\tdescription: nls.localize('TaskDefinitionExtPoint', 'Contributes task kinds'),\n\t\ttype: 'array',\n\t\titems: taskDefinitionSchema\n\t}\n});\n\nexport interface ITaskDefinitionRegistry {\n\tonReady(): Promise<void>;\n\n\tget(key: string): Tasks.ITaskDefinition;\n\tall(): Tasks.ITaskDefinition[];\n\tgetJsonSchema(): IJSONSchema;\n\tonDefinitionsChanged: Event<void>;\n}\n\nclass TaskDefinitionRegistryImpl implements ITaskDefinitionRegistry {\n\n\tprivate taskTypes: IStringDictionary<Tasks.ITaskDefinition>;\n\tprivate readyPromise: Promise<void>;\n\tprivate _schema: IJSONSchema | undefined;\n\tprivate _onDefinitionsChanged: Emitter<void> = new Emitter();\n\tpublic onDefinitionsChanged: Event<void> = this._onDefinitionsChanged.event;\n\n\tconstructor() {\n\t\tthis.taskTypes = Object.create(null);\n\t\tthis.readyPromise = new Promise<void>((resolve, reject) => {\n\t\t\ttaskDefinitionsExtPoint.setHandler((extensions, delta) => {\n\t\t\t\tthis._schema = undefined;\n\t\t\t\ttry {\n\t\t\t\t\tfor (const extension of delta.removed) {\n\t\t\t\t\t\tconst taskTypes = extension.value;\n\t\t\t\t\t\tfor (const taskType of taskTypes) {\n\t\t\t\t\t\t\tif (this.taskTypes && taskType.type && this.taskTypes[taskType.type]) {\n\t\t\t\t\t\t\t\tdelete this.taskTypes[taskType.type];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (const extension of delta.added) {\n\t\t\t\t\t\tconst taskTypes = extension.value;\n\t\t\t\t\t\tfor (const taskType of taskTypes) {\n\t\t\t\t\t\t\tconst type = Configuration.from(taskType, extension.description.identifier, extension.collector);\n\t\t\t\t\t\t\tif (type) {\n\t\t\t\t\t\t\t\tthis.taskTypes[type.taskType] = type;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ((delta.removed.length > 0) || (delta.added.length > 0)) {\n\t\t\t\t\t\tthis._onDefinitionsChanged.fire();\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t}\n\t\t\t\tresolve(undefined);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic onReady(): Promise<void> {\n\t\treturn this.readyPromise;\n\t}\n\n\tpublic get(key: string): Tasks.ITaskDefinition {\n\t\treturn this.taskTypes[key];\n\t}\n\n\tpublic all(): Tasks.ITaskDefinition[] {\n\t\treturn Object.keys(this.taskTypes).map(key => this.taskTypes[key]);\n\t}\n\n\tpublic getJsonSchema(): IJSONSchema {\n\t\tif (this._schema === undefined) {\n\t\t\tconst schemas: IJSONSchema[] = [];\n\t\t\tfor (const definition of this.all()) {\n\t\t\t\tconst schema: IJSONSchema = {\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tadditionalProperties: false\n\t\t\t\t};\n\t\t\t\tif (definition.required.length > 0) {\n\t\t\t\t\tschema.required = definition.required.slice(0);\n\t\t\t\t}\n\t\t\t\tif (definition.properties !== undefined) {\n\t\t\t\t\tschema.properties = Objects.deepClone(definition.properties);\n\t\t\t\t} else {\n\t\t\t\t\tschema.properties = Object.create(null);\n\t\t\t\t}\n\t\t\t\tschema.properties!.type = {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tenum: [definition.taskType]\n\t\t\t\t};\n\t\t\t\tschemas.push(schema);\n\t\t\t}\n\t\t\tthis._schema = { oneOf: schemas };\n\t\t}\n\t\treturn this._schema;\n\t}\n}\n\nexport const TaskDefinitionRegistry: ITaskDefinitionRegistry = new TaskDefinitionRegistryImpl();\n"],
  "mappings": "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",
  "names": ["Configuration"]
}
