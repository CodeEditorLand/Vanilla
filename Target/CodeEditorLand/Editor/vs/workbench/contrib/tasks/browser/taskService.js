import*as r from"../../../../../vs/nls.js";import{InstantiationType as o,registerSingleton as i}from"../../../../../vs/platform/instantiation/common/extensions.js";import"../../../../../vs/platform/workspace/common/workspace.js";import{AbstractTaskService as a}from"../../../../../vs/workbench/contrib/tasks/browser/abstractTaskService.js";import{ExecutionEngine as s}from"../../../../../vs/workbench/contrib/tasks/common/tasks.js";import{ITaskService as n}from"../../../../../vs/workbench/contrib/tasks/common/taskService.js";import"../../../../../vs/workbench/contrib/tasks/common/taskSystem.js";class e extends a{static ProcessTaskSystemSupportMessage=r.localize("taskService.processTaskSystem","Process task system is not support in the web.");_getTaskSystem(){if(this._taskSystem)return this._taskSystem;if(this.executionEngine!==s.Terminal)throw new Error(e.ProcessTaskSystemSupportMessage);return this._taskSystem=this._createTerminalTaskSystem(),this._taskSystemListeners=[this._taskSystem.onDidStateChange(t=>{this._taskRunningState.set(this._taskSystem.isActiveSync()),this._onDidStateChange.fire(t)})],this._taskSystem}_computeLegacyConfiguration(t){throw new Error(e.ProcessTaskSystemSupportMessage)}_versionAndEngineCompatible(t){return this.executionEngine===s.Terminal}}i(n,e,o.Delayed);export{e as TaskService};
