{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/tasks/browser/tasksQuickAccess.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../../nls.js';\nimport { IQuickPickSeparator, IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { IPickerQuickAccessItem, PickerQuickAccessProvider, TriggerAction } from '../../../../platform/quickinput/browser/pickerQuickAccess.js';\nimport { matchesFuzzy } from '../../../../base/common/filters.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { ITaskService, Task } from '../common/taskService.js';\nimport { CustomTask, ContributedTask, ConfiguringTask } from '../common/tasks.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { TaskQuickPick, ITaskTwoLevelQuickPickEntry } from './taskQuickPick.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { isString } from '../../../../base/common/types.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\n\nexport class TasksQuickAccessProvider extends PickerQuickAccessProvider<IPickerQuickAccessItem> {\n\n\tstatic PREFIX = 'task ';\n\n\tconstructor(\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@ITaskService private _taskService: ITaskService,\n\t\t@IConfigurationService private _configurationService: IConfigurationService,\n\t\t@IQuickInputService private _quickInputService: IQuickInputService,\n\t\t@INotificationService private _notificationService: INotificationService,\n\t\t@IDialogService private _dialogService: IDialogService,\n\t\t@IThemeService private _themeService: IThemeService,\n\t\t@IStorageService private _storageService: IStorageService\n\t) {\n\t\tsuper(TasksQuickAccessProvider.PREFIX, {\n\t\t\tnoResultsPick: {\n\t\t\t\tlabel: localize('noTaskResults', \"No matching tasks\")\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected async _getPicks(filter: string, disposables: DisposableStore, token: CancellationToken): Promise<Array<IPickerQuickAccessItem | IQuickPickSeparator>> {\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst taskQuickPick = new TaskQuickPick(this._taskService, this._configurationService, this._quickInputService, this._notificationService, this._themeService, this._dialogService, this._storageService);\n\t\tconst topLevelPicks = await taskQuickPick.getTopLevelEntries();\n\t\tconst taskPicks: Array<IPickerQuickAccessItem | IQuickPickSeparator> = [];\n\n\t\tfor (const entry of topLevelPicks.entries) {\n\t\t\tconst highlights = matchesFuzzy(filter, entry.label!);\n\t\t\tif (!highlights) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (entry.type === 'separator') {\n\t\t\t\ttaskPicks.push(entry);\n\t\t\t}\n\n\t\t\tconst task: Task | ConfiguringTask | string = (<ITaskTwoLevelQuickPickEntry>entry).task!;\n\t\t\tconst quickAccessEntry: IPickerQuickAccessItem = <ITaskTwoLevelQuickPickEntry>entry;\n\t\t\tquickAccessEntry.highlights = { label: highlights };\n\t\t\tquickAccessEntry.trigger = (index) => {\n\t\t\t\tif ((index === 1) && (quickAccessEntry.buttons?.length === 2)) {\n\t\t\t\t\tconst key = (task && !isString(task)) ? task.getKey() : undefined;\n\t\t\t\t\tif (key) {\n\t\t\t\t\t\tthis._taskService.removeRecentlyUsedTask(key);\n\t\t\t\t\t}\n\t\t\t\t\treturn TriggerAction.REFRESH_PICKER;\n\t\t\t\t} else {\n\t\t\t\t\tif (ContributedTask.is(task)) {\n\t\t\t\t\t\tthis._taskService.customize(task, undefined, true);\n\t\t\t\t\t} else if (CustomTask.is(task)) {\n\t\t\t\t\t\tthis._taskService.openConfig(task);\n\t\t\t\t\t}\n\t\t\t\t\treturn TriggerAction.CLOSE_PICKER;\n\t\t\t\t}\n\t\t\t};\n\t\t\tquickAccessEntry.accept = async () => {\n\t\t\t\tif (isString(task)) {\n\t\t\t\t\t// switch to quick pick and show second level\n\t\t\t\t\tconst showResult = await taskQuickPick.show(localize('TaskService.pickRunTask', 'Select the task to run'), undefined, task);\n\t\t\t\t\tif (showResult) {\n\t\t\t\t\t\tthis._taskService.run(showResult, { attachProblemMatcher: true });\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._taskService.run(await this._toTask(task), { attachProblemMatcher: true });\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttaskPicks.push(quickAccessEntry);\n\t\t}\n\t\treturn taskPicks;\n\t}\n\n\tprivate async _toTask(task: Task | ConfiguringTask): Promise<Task | undefined> {\n\t\tif (!ConfiguringTask.is(task)) {\n\t\t\treturn task;\n\t\t}\n\n\t\treturn this._taskService.tryResolveTask(task);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,gBAAgB;AACzB,SAAS,qBAAqB,0BAA0B;AACxD,SAAS,wBAAwB,2BAA2B,qBAAqB;AACjF,SAAS,oBAAoB;AAC7B,SAAS,yBAAyB;AAClC,SAAS,cAAc,YAAY;AACnC,SAAS,YAAY,iBAAiB,uBAAuB;AAC7D,SAAS,yBAAyB;AAClC,SAAS,uBAAuB;AAChC,SAAS,eAAe,mCAAmC;AAC3D,SAAS,6BAA6B;AACtC,SAAS,gBAAgB;AACzB,SAAS,4BAA4B;AACrC,SAAS,sBAAsB;AAC/B,SAAS,qBAAqB;AAC9B,SAAS,uBAAuB;AAEzB,IAAM,2BAAN,cAAuC,0BAAkD;AAAA,EAI/F,YACoB,kBACG,cACS,uBACH,oBACE,sBACN,gBACD,eACE,iBACxB;AACD,UAAM,yBAAyB,QAAQ;AAAA,MACtC,eAAe;AAAA,QACd,OAAO,SAAS,iBAAiB,mBAAmB;AAAA,MACrD;AAAA,IACD,CAAC;AAZqB;AACS;AACH;AACE;AACN;AACD;AACE;AAAA,EAO1B;AAAA,EAzCD,OAsBgG;AAAA;AAAA;AAAA,EAE/F,OAAO,SAAS;AAAA,EAmBhB,MAAgB,UAAU,QAAgB,aAA8B,OAAwF;AAC/J,QAAI,MAAM,yBAAyB;AAClC,aAAO,CAAC;AAAA,IACT;AAEA,UAAM,gBAAgB,IAAI,cAAc,KAAK,cAAc,KAAK,uBAAuB,KAAK,oBAAoB,KAAK,sBAAsB,KAAK,eAAe,KAAK,gBAAgB,KAAK,eAAe;AACxM,UAAM,gBAAgB,MAAM,cAAc,mBAAmB;AAC7D,UAAM,YAAiE,CAAC;AAExE,eAAW,SAAS,cAAc,SAAS;AAC1C,YAAM,aAAa,aAAa,QAAQ,MAAM,KAAM;AACpD,UAAI,CAAC,YAAY;AAChB;AAAA,MACD;AAEA,UAAI,MAAM,SAAS,aAAa;AAC/B,kBAAU,KAAK,KAAK;AAAA,MACrB;AAEA,YAAM,OAAsE,MAAO;AACnF,YAAM,mBAAwE;AAC9E,uBAAiB,aAAa,EAAE,OAAO,WAAW;AAClD,uBAAiB,UAAU,CAAC,UAAU;AACrC,YAAK,UAAU,KAAO,iBAAiB,SAAS,WAAW,GAAI;AAC9D,gBAAM,MAAO,QAAQ,CAAC,SAAS,IAAI,IAAK,KAAK,OAAO,IAAI;AACxD,cAAI,KAAK;AACR,iBAAK,aAAa,uBAAuB,GAAG;AAAA,UAC7C;AACA,iBAAO,cAAc;AAAA,QACtB,OAAO;AACN,cAAI,gBAAgB,GAAG,IAAI,GAAG;AAC7B,iBAAK,aAAa,UAAU,MAAM,QAAW,IAAI;AAAA,UAClD,WAAW,WAAW,GAAG,IAAI,GAAG;AAC/B,iBAAK,aAAa,WAAW,IAAI;AAAA,UAClC;AACA,iBAAO,cAAc;AAAA,QACtB;AAAA,MACD;AACA,uBAAiB,SAAS,YAAY;AACrC,YAAI,SAAS,IAAI,GAAG;AAEnB,gBAAM,aAAa,MAAM,cAAc,KAAK,SAAS,2BAA2B,wBAAwB,GAAG,QAAW,IAAI;AAC1H,cAAI,YAAY;AACf,iBAAK,aAAa,IAAI,YAAY,EAAE,sBAAsB,KAAK,CAAC;AAAA,UACjE;AAAA,QACD,OAAO;AACN,eAAK,aAAa,IAAI,MAAM,KAAK,QAAQ,IAAI,GAAG,EAAE,sBAAsB,KAAK,CAAC;AAAA,QAC/E;AAAA,MACD;AAEA,gBAAU,KAAK,gBAAgB;AAAA,IAChC;AACA,WAAO;AAAA,EACR;AAAA,EAEA,MAAc,QAAQ,MAAyD;AAC9E,QAAI,CAAC,gBAAgB,GAAG,IAAI,GAAG;AAC9B,aAAO;AAAA,IACR;AAEA,WAAO,KAAK,aAAa,eAAe,IAAI;AAAA,EAC7C;AACD;AAnFa,2BAAN;AAAA,EAKJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAZU;",
  "names": []
}
