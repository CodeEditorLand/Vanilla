{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/tasks/browser/tasksQuickAccess.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { matchesFuzzy } from \"../../../../base/common/filters.js\";\nimport type { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { isString } from \"../../../../base/common/types.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IDialogService } from \"../../../../platform/dialogs/common/dialogs.js\";\nimport { INotificationService } from \"../../../../platform/notification/common/notification.js\";\nimport {\n\ttype IPickerQuickAccessItem,\n\tPickerQuickAccessProvider,\n\tTriggerAction,\n} from \"../../../../platform/quickinput/browser/pickerQuickAccess.js\";\nimport {\n\tIQuickInputService,\n\ttype IQuickPickSeparator,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { IStorageService } from \"../../../../platform/storage/common/storage.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport { IExtensionService } from \"../../../services/extensions/common/extensions.js\";\nimport { ITaskService, type Task } from \"../common/taskService.js\";\nimport {\n\tConfiguringTask,\n\tContributedTask,\n\tCustomTask,\n} from \"../common/tasks.js\";\nimport {\n\ttype ITaskTwoLevelQuickPickEntry,\n\tTaskQuickPick,\n} from \"./taskQuickPick.js\";\n\nexport class TasksQuickAccessProvider extends PickerQuickAccessProvider<IPickerQuickAccessItem> {\n\tstatic PREFIX = \"task \";\n\n\tconstructor(\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@ITaskService private _taskService: ITaskService,\n\t\t@IConfigurationService\n\t\tprivate _configurationService: IConfigurationService,\n\t\t@IQuickInputService private _quickInputService: IQuickInputService,\n\t\t@INotificationService\n\t\tprivate _notificationService: INotificationService,\n\t\t@IDialogService private _dialogService: IDialogService,\n\t\t@IThemeService private _themeService: IThemeService,\n\t\t@IStorageService private _storageService: IStorageService,\n\t) {\n\t\tsuper(TasksQuickAccessProvider.PREFIX, {\n\t\t\tnoResultsPick: {\n\t\t\t\tlabel: localize(\"noTaskResults\", \"No matching tasks\"),\n\t\t\t},\n\t\t});\n\t}\n\n\tprotected async _getPicks(\n\t\tfilter: string,\n\t\tdisposables: DisposableStore,\n\t\ttoken: CancellationToken,\n\t): Promise<Array<IPickerQuickAccessItem | IQuickPickSeparator>> {\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst taskQuickPick = new TaskQuickPick(\n\t\t\tthis._taskService,\n\t\t\tthis._configurationService,\n\t\t\tthis._quickInputService,\n\t\t\tthis._notificationService,\n\t\t\tthis._themeService,\n\t\t\tthis._dialogService,\n\t\t\tthis._storageService,\n\t\t);\n\t\tconst topLevelPicks = await taskQuickPick.getTopLevelEntries();\n\t\tconst taskPicks: Array<IPickerQuickAccessItem | IQuickPickSeparator> =\n\t\t\t[];\n\n\t\tfor (const entry of topLevelPicks.entries) {\n\t\t\tconst highlights = matchesFuzzy(filter, entry.label!);\n\t\t\tif (!highlights) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (entry.type === \"separator\") {\n\t\t\t\ttaskPicks.push(entry);\n\t\t\t}\n\n\t\t\tconst task: Task | ConfiguringTask | string = (<\n\t\t\t\tITaskTwoLevelQuickPickEntry\n\t\t\t>entry).task!;\n\t\t\tconst quickAccessEntry: IPickerQuickAccessItem = <\n\t\t\t\tITaskTwoLevelQuickPickEntry\n\t\t\t>entry;\n\t\t\tquickAccessEntry.highlights = { label: highlights };\n\t\t\tquickAccessEntry.trigger = (index) => {\n\t\t\t\tif (index === 1 && quickAccessEntry.buttons?.length === 2) {\n\t\t\t\t\tconst key =\n\t\t\t\t\t\ttask && !isString(task) ? task.getKey() : undefined;\n\t\t\t\t\tif (key) {\n\t\t\t\t\t\tthis._taskService.removeRecentlyUsedTask(key);\n\t\t\t\t\t}\n\t\t\t\t\treturn TriggerAction.REFRESH_PICKER;\n\t\t\t\t} else {\n\t\t\t\t\tif (ContributedTask.is(task)) {\n\t\t\t\t\t\tthis._taskService.customize(task, undefined, true);\n\t\t\t\t\t} else if (CustomTask.is(task)) {\n\t\t\t\t\t\tthis._taskService.openConfig(task);\n\t\t\t\t\t}\n\t\t\t\t\treturn TriggerAction.CLOSE_PICKER;\n\t\t\t\t}\n\t\t\t};\n\t\t\tquickAccessEntry.accept = async () => {\n\t\t\t\tif (isString(task)) {\n\t\t\t\t\t// switch to quick pick and show second level\n\t\t\t\t\tconst showResult = await taskQuickPick.show(\n\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\"TaskService.pickRunTask\",\n\t\t\t\t\t\t\t\"Select the task to run\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttask,\n\t\t\t\t\t);\n\t\t\t\t\tif (showResult) {\n\t\t\t\t\t\tthis._taskService.run(showResult, {\n\t\t\t\t\t\t\tattachProblemMatcher: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._taskService.run(await this._toTask(task), {\n\t\t\t\t\t\tattachProblemMatcher: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttaskPicks.push(quickAccessEntry);\n\t\t}\n\t\treturn taskPicks;\n\t}\n\n\tprivate async _toTask(\n\t\ttask: Task | ConfiguringTask,\n\t): Promise<Task | undefined> {\n\t\tif (!ConfiguringTask.is(task)) {\n\t\t\treturn task;\n\t\t}\n\n\t\treturn this._taskService.tryResolveTask(task);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
