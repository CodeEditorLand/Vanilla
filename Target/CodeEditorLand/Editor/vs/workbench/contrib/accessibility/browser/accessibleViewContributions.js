import{Disposable as r}from"../../../../base/common/lifecycle.js";import{AccessibleViewType as a,IAccessibleViewService as o}from"../../../../platform/accessibility/browser/accessibleView.js";import{AccessibleViewRegistry as l}from"../../../../platform/accessibility/browser/accessibleViewRegistry.js";import{accessibleViewIsShown as p}from"./accessibilityConfiguration.js";import{AccessibilityHelpAction as n,AccessibleViewAction as m}from"./accessibleViewActions.js";class f extends r{static ID;constructor(){super(),this._register(n.addImplementation(115,"accessible-view-help",e=>(e.get(o).showAccessibleViewHelp(),!0),p))}}class h extends r{static ID;constructor(){super(),l.getImplementations().forEach(e=>{const i=s=>{const t=e.getProvider(s);if(!t)return!1;try{return s.get(o).show(t),!0}catch{return t.dispose(),!1}};e.type===a.View?this._register(m.addImplementation(e.priority,e.name,i,e.when)):this._register(n.addImplementation(e.priority,e.name,i,e.when))})}}export{h as AccesibleViewContributions,f as AccesibleViewHelpContribution};
