import{Codicon as b}from"../../../../../vs/base/common/codicons.js";import{KeyCode as o,KeyMod as e}from"../../../../../vs/base/common/keyCodes.js";import{MultiCommand as f}from"../../../../../vs/editor/browser/editorExtensions.js";import{ICodeEditorService as W}from"../../../../../vs/editor/browser/services/codeEditorService.js";import{InlineCompletionsController as B}from"../../../../../vs/editor/contrib/inlineCompletions/browser/controller/inlineCompletionsController.js";import{localize as s}from"../../../../../vs/nls.js";import{AccessibleViewProviderId as C,IAccessibleViewService as p}from"../../../../../vs/platform/accessibility/browser/accessibleView.js";import{Action2 as d,MenuId as m,registerAction2 as a}from"../../../../../vs/platform/actions/common/actions.js";import{ContextKeyExpr as i}from"../../../../../vs/platform/contextkey/common/contextkey.js";import{KeybindingWeight as r}from"../../../../../vs/platform/keybinding/common/keybindingsRegistry.js";import{accessibilityHelpIsShown as g,accessibleViewContainsCodeBlocks as h,accessibleViewCurrentProviderId as k,accessibleViewGoToSymbolSupported as S,accessibleViewHasAssignedKeybindings as H,accessibleViewHasUnassignedKeybindings as x,accessibleViewIsShown as t,accessibleViewSupportsNavigation as v,accessibleViewVerbosityEnabled as P}from"../../../../../vs/workbench/contrib/accessibility/browser/accessibilityConfiguration.js";import{AccessibilityCommandId as l}from"../../../../../vs/workbench/contrib/accessibility/common/accessibilityCommands.js";const u={id:m.AccessibleView,group:"navigation",when:t},A={id:m.CommandPalette,group:"",order:1};class O extends d{constructor(){super({id:l.ShowNext,precondition:i.and(t,v),keybinding:{primary:e.Alt|o.BracketRight,weight:r.WorkbenchContrib},menu:[A,{...u,when:i.and(t,v)}],icon:b.arrowDown,title:s("editor.action.accessibleViewNext","Show Next in Accessible View")})}run(n){n.get(p).next()}}a(O);class T extends d{constructor(){super({id:l.NextCodeBlock,precondition:i.and(h,i.equals(k.key,C.Chat)),keybinding:{primary:e.CtrlCmd|e.Alt|o.PageDown,mac:{primary:e.CtrlCmd|e.Alt|o.PageDown},weight:r.WorkbenchContrib},icon:b.arrowRight,menu:{...u,when:i.and(t,h)},title:s("editor.action.accessibleViewNextCodeBlock","Accessible View: Next Code Block")})}run(n){n.get(p).navigateToCodeBlock("next")}}a(T);class N extends d{constructor(){super({id:l.PreviousCodeBlock,precondition:i.and(h,i.equals(k.key,C.Chat)),keybinding:{primary:e.CtrlCmd|e.Alt|o.PageUp,mac:{primary:e.CtrlCmd|e.Alt|o.PageUp},weight:r.WorkbenchContrib},icon:b.arrowLeft,menu:{...u,when:i.and(t,h)},title:s("editor.action.accessibleViewPreviousCodeBlock","Accessible View: Previous Code Block")})}run(n){n.get(p).navigateToCodeBlock("previous")}}a(N);class F extends d{constructor(){super({id:l.ShowPrevious,precondition:i.and(t,v),keybinding:{primary:e.Alt|o.BracketLeft,weight:r.WorkbenchContrib},icon:b.arrowUp,menu:[A,{...u,when:i.and(t,v)}],title:s("editor.action.accessibleViewPrevious","Show Previous in Accessible View")})}run(n){n.get(p).previous()}}a(F);class D extends d{constructor(){super({id:l.GoToSymbol,precondition:i.and(i.or(t,g),S),keybinding:{primary:e.CtrlCmd|e.Shift|o.KeyO,secondary:[e.CtrlCmd|e.Shift|o.Period],weight:r.WorkbenchContrib+10},icon:b.symbolField,menu:[A,{...u,when:i.and(i.or(t,g),S)}],title:s("editor.action.accessibleViewGoToSymbol","Go To Symbol in Accessible View")})}run(n){n.get(p).goToSymbol()}}a(D);function K(c){return c.register(),c}const ne=K(new f({id:l.OpenAccessibilityHelp,precondition:void 0,kbOpts:{primary:e.Alt|o.F1,weight:r.WorkbenchContrib,linux:{primary:e.Alt|e.Shift|o.F1,secondary:[e.Alt|o.F1]},kbExpr:g.toNegated()},menuOpts:[{menuId:m.CommandPalette,group:"",title:s("editor.action.accessibilityHelp","Open Accessibility Help"),order:1}]})),te=K(new f({id:l.OpenAccessibleView,precondition:void 0,kbOpts:{primary:e.Alt|o.F2,weight:r.WorkbenchContrib,linux:{primary:e.Alt|e.Shift|o.F2,secondary:[e.Alt|o.F2]}},menuOpts:[{menuId:m.CommandPalette,group:"",title:s("editor.action.accessibleView","Open Accessible View"),order:1}]}));class E extends d{constructor(){super({id:l.DisableVerbosityHint,precondition:i.and(i.or(t,g),P),keybinding:{primary:e.Alt|o.F6,weight:r.WorkbenchContrib},icon:b.bellSlash,menu:[A,{id:m.AccessibleView,group:"navigation",when:i.and(i.or(t,g),P)}],title:s("editor.action.accessibleViewDisableHint","Disable Accessible View Hint")})}run(n){n.get(p).disableHint()}}a(E);class L extends d{constructor(){super({id:l.AccessibilityHelpConfigureKeybindings,precondition:i.and(g,x),icon:b.key,keybinding:{primary:e.Alt|o.KeyK,weight:r.WorkbenchContrib},menu:[{id:m.AccessibleView,group:"navigation",order:3,when:x}],title:s("editor.action.accessibilityHelpConfigureUnassignedKeybindings","Accessibility Help Configure Unassigned Keybindings")})}async run(n){await n.get(p).configureKeybindings(!0)}}a(L);class U extends d{constructor(){super({id:l.AccessibilityHelpConfigureAssignedKeybindings,precondition:i.and(g,H),icon:b.key,keybinding:{primary:e.Alt|o.KeyA,weight:r.WorkbenchContrib},menu:[{id:m.AccessibleView,group:"navigation",order:4,when:H}],title:s("editor.action.accessibilityHelpConfigureAssignedKeybindings","Accessibility Help Configure Assigned Keybindings")})}async run(n){await n.get(p).configureKeybindings(!1)}}a(U);class G extends d{constructor(){super({id:l.AccessibilityHelpOpenHelpLink,precondition:i.and(g),keybinding:{primary:e.Alt|o.KeyH,weight:r.WorkbenchContrib},title:s("editor.action.accessibilityHelpOpenHelpLink","Accessibility Help Open Help Link")})}run(n){n.get(p).openHelpLink()}}a(G);class q extends d{constructor(){super({id:l.AccessibleViewAcceptInlineCompletion,precondition:i.and(t,i.equals(k.key,C.InlineCompletions)),keybinding:{primary:e.CtrlCmd|o.Slash,mac:{primary:e.WinCtrl|o.Slash},weight:r.WorkbenchContrib},icon:b.check,menu:[A,{id:m.AccessibleView,group:"navigation",order:0,when:i.and(t,i.equals(k.key,C.InlineCompletions))}],title:s("editor.action.accessibleViewAcceptInlineCompletionAction","Accept Inline Completion")})}async run(n){const V=n.get(W),y=V.getActiveCodeEditor()||V.getFocusedCodeEditor();if(!y)return;const w=B.get(y)?.model.get(),I=w?.state.get();!w||!I||(await w.accept(y),w.stop(),y.focus())}}a(q);export{ne as AccessibilityHelpAction,te as AccessibleViewAction};
