{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/accessibility/browser/accessibleViewKeybindingResolver.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { IPickerQuickAccessItem } from '../../../../platform/quickinput/browser/pickerQuickAccess.js';\n\nexport function resolveContentAndKeybindingItems(keybindingService: IKeybindingService, value?: string): { content: MarkdownString; configureKeybindingItems: IPickerQuickAccessItem[] | undefined; configuredKeybindingItems: IPickerQuickAccessItem[] | undefined } | undefined {\n\tif (!value) {\n\t\treturn;\n\t}\n\tconst configureKeybindingItems: IPickerQuickAccessItem[] = [];\n\tconst configuredKeybindingItems: IPickerQuickAccessItem[] = [];\n\tconst matches = value.matchAll(/(\\<keybinding:(?<commandId>[^\\<]*)\\>)/gm);\n\tfor (const match of [...matches]) {\n\t\tconst commandId = match?.groups?.commandId;\n\t\tlet kbLabel;\n\t\tif (match?.length && commandId) {\n\t\t\tconst keybinding = keybindingService.lookupKeybinding(commandId)?.getAriaLabel();\n\t\t\tif (!keybinding) {\n\t\t\t\tkbLabel = ` (unassigned keybinding)`;\n\t\t\t\tconfigureKeybindingItems.push({\n\t\t\t\t\tlabel: commandId,\n\t\t\t\t\tid: commandId\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tkbLabel = ' (' + keybinding + ')';\n\t\t\t\tconfiguredKeybindingItems.push({\n\t\t\t\t\tlabel: commandId,\n\t\t\t\t\tid: commandId\n\t\t\t\t});\n\t\t\t}\n\t\t\tvalue = value.replace(match[0], kbLabel);\n\t\t}\n\t}\n\tconst content = new MarkdownString(value);\n\tcontent.isTrusted = true;\n\treturn { content, configureKeybindingItems: configureKeybindingItems.length ? configureKeybindingItems : undefined, configuredKeybindingItems: configuredKeybindingItems.length ? configuredKeybindingItems : undefined };\n}\n\n"],
  "mappings": ";;AAKA,SAAS,sBAAsB;AAC/B,SAAS,0BAA0B;AACnC,SAAS,8BAA8B;AAEhC,SAAS,iCAAiC,mBAAuC,OAA0L;AACjR,MAAI,CAAC,OAAO;AACX;AAAA,EACD;AACA,QAAM,2BAAqD,CAAC;AAC5D,QAAM,4BAAsD,CAAC;AAC7D,QAAM,UAAU,MAAM,SAAS,yCAAyC;AACxE,aAAW,SAAS,CAAC,GAAG,OAAO,GAAG;AACjC,UAAM,YAAY,OAAO,QAAQ;AACjC,QAAI;AACJ,QAAI,OAAO,UAAU,WAAW;AAC/B,YAAM,aAAa,kBAAkB,iBAAiB,SAAS,GAAG,aAAa;AAC/E,UAAI,CAAC,YAAY;AAChB,kBAAU;AACV,iCAAyB,KAAK;AAAA,UAC7B,OAAO;AAAA,UACP,IAAI;AAAA,QACL,CAAC;AAAA,MACF,OAAO;AACN,kBAAU,OAAO,aAAa;AAC9B,kCAA0B,KAAK;AAAA,UAC9B,OAAO;AAAA,UACP,IAAI;AAAA,QACL,CAAC;AAAA,MACF;AACA,cAAQ,MAAM,QAAQ,MAAM,CAAC,GAAG,OAAO;AAAA,IACxC;AAAA,EACD;AACA,QAAM,UAAU,IAAI,eAAe,KAAK;AACxC,UAAQ,YAAY;AACpB,SAAO,EAAE,SAAS,0BAA0B,yBAAyB,SAAS,2BAA2B,QAAW,2BAA2B,0BAA0B,SAAS,4BAA4B,OAAU;AACzN;AA/BgB;",
  "names": []
}
