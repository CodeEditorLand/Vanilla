{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/accessibility/browser/accessibleViewContributions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport {\n\ttype AccessibleContentProvider,\n\tAccessibleViewType,\n\ttype ExtensionContentProvider,\n\tIAccessibleViewService,\n} from \"../../../../platform/accessibility/browser/accessibleView.js\";\nimport { AccessibleViewRegistry } from \"../../../../platform/accessibility/browser/accessibleViewRegistry.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { accessibleViewIsShown } from \"./accessibilityConfiguration.js\";\nimport {\n\tAccessibilityHelpAction,\n\tAccessibleViewAction,\n} from \"./accessibleViewActions.js\";\n\nexport class AccesibleViewHelpContribution extends Disposable {\n\tstatic ID: \"accesibleViewHelpContribution\";\n\tconstructor() {\n\t\tsuper();\n\t\tthis._register(\n\t\t\tAccessibilityHelpAction.addImplementation(\n\t\t\t\t115,\n\t\t\t\t\"accessible-view-help\",\n\t\t\t\t(accessor) => {\n\t\t\t\t\taccessor\n\t\t\t\t\t\t.get(IAccessibleViewService)\n\t\t\t\t\t\t.showAccessibleViewHelp();\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\t\t\t\taccessibleViewIsShown,\n\t\t\t),\n\t\t);\n\t}\n}\n\nexport class AccesibleViewContributions extends Disposable {\n\tstatic ID: \"accesibleViewContributions\";\n\tconstructor() {\n\t\tsuper();\n\t\tAccessibleViewRegistry.getImplementations().forEach((impl) => {\n\t\t\tconst implementation = (accessor: ServicesAccessor) => {\n\t\t\t\tconst provider:\n\t\t\t\t\t| AccessibleContentProvider\n\t\t\t\t\t| ExtensionContentProvider\n\t\t\t\t\t| undefined = impl.getProvider(accessor);\n\t\t\t\tif (!provider) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\taccessor.get(IAccessibleViewService).show(provider);\n\t\t\t\t\treturn true;\n\t\t\t\t} catch {\n\t\t\t\t\tprovider.dispose();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (impl.type === AccessibleViewType.View) {\n\t\t\t\tthis._register(\n\t\t\t\t\tAccessibleViewAction.addImplementation(\n\t\t\t\t\t\timpl.priority,\n\t\t\t\t\t\timpl.name,\n\t\t\t\t\t\timplementation,\n\t\t\t\t\t\timpl.when,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis._register(\n\t\t\t\t\tAccessibilityHelpAction.addImplementation(\n\t\t\t\t\t\timpl.priority,\n\t\t\t\t\t\timpl.name,\n\t\t\t\t\t\timplementation,\n\t\t\t\t\t\timpl.when,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,kBAAkB;AAC3B;AAAA,EAEC;AAAA,EAEA;AAAA,OACM;AACP,SAAS,8BAA8B;AAEvC,SAAS,6BAA6B;AACtC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AAEA,MAAM,sCAAsC,WAAW;AAAA,EApB9D,OAoB8D;AAAA;AAAA;AAAA,EAC7D,OAAO;AAAA,EACP,cAAc;AACb,UAAM;AACN,SAAK;AAAA,MACJ,wBAAwB;AAAA,QACvB;AAAA,QACA;AAAA,QACA,CAAC,aAAa;AACb,mBACE,IAAI,sBAAsB,EAC1B,uBAAuB;AACzB,iBAAO;AAAA,QACR;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,mCAAmC,WAAW;AAAA,EAxC3D,OAwC2D;AAAA;AAAA;AAAA,EAC1D,OAAO;AAAA,EACP,cAAc;AACb,UAAM;AACN,2BAAuB,mBAAmB,EAAE,QAAQ,CAAC,SAAS;AAC7D,YAAM,iBAAiB,wBAAC,aAA+B;AACtD,cAAM,WAGS,KAAK,YAAY,QAAQ;AACxC,YAAI,CAAC,UAAU;AACd,iBAAO;AAAA,QACR;AACA,YAAI;AACH,mBAAS,IAAI,sBAAsB,EAAE,KAAK,QAAQ;AAClD,iBAAO;AAAA,QACR,QAAQ;AACP,mBAAS,QAAQ;AACjB,iBAAO;AAAA,QACR;AAAA,MACD,GAfuB;AAgBvB,UAAI,KAAK,SAAS,mBAAmB,MAAM;AAC1C,aAAK;AAAA,UACJ,qBAAqB;AAAA,YACpB,KAAK;AAAA,YACL,KAAK;AAAA,YACL;AAAA,YACA,KAAK;AAAA,UACN;AAAA,QACD;AAAA,MACD,OAAO;AACN,aAAK;AAAA,UACJ,wBAAwB;AAAA,YACvB,KAAK;AAAA,YACL,KAAK;AAAA,YACL;AAAA,YACA,KAAK;AAAA,UACN;AAAA,QACD;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AACD;",
  "names": []
}
