{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/accessibility/browser/accessibleViewActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { Command, MultiCommand, ServicesAccessor } from '../../../../editor/browser/editorExtensions.js';\nimport { localize } from '../../../../nls.js';\nimport { Action2, MenuId, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { AccessibilityCommandId } from '../common/accessibilityCommands.js';\nimport { accessibilityHelpIsShown, accessibleViewContainsCodeBlocks, accessibleViewCurrentProviderId, accessibleViewGoToSymbolSupported, accessibleViewHasAssignedKeybindings, accessibleViewHasUnassignedKeybindings, accessibleViewIsShown, accessibleViewSupportsNavigation, accessibleViewVerbosityEnabled } from './accessibilityConfiguration.js';\nimport { AccessibleViewProviderId, IAccessibleViewService } from '../../../../platform/accessibility/browser/accessibleView.js';\nimport { ICodeEditorService } from '../../../../editor/browser/services/codeEditorService.js';\nimport { InlineCompletionsController } from '../../../../editor/contrib/inlineCompletions/browser/controller/inlineCompletionsController.js';\n\nconst accessibleViewMenu = {\n\tid: MenuId.AccessibleView,\n\tgroup: 'navigation',\n\twhen: accessibleViewIsShown\n};\nconst commandPalette = {\n\tid: MenuId.CommandPalette,\n\tgroup: '',\n\torder: 1\n};\nclass AccessibleViewNextAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AccessibilityCommandId.ShowNext,\n\t\t\tprecondition: ContextKeyExpr.and(accessibleViewIsShown, accessibleViewSupportsNavigation),\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.BracketRight,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t},\n\t\t\tmenu: [\n\t\t\t\tcommandPalette,\n\t\t\t\t{\n\t\t\t\t\t...accessibleViewMenu,\n\t\t\t\t\twhen: ContextKeyExpr.and(accessibleViewIsShown, accessibleViewSupportsNavigation),\n\t\t\t\t}],\n\t\t\ticon: Codicon.arrowDown,\n\t\t\ttitle: localize('editor.action.accessibleViewNext', \"Show Next in Accessible View\")\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(IAccessibleViewService).next();\n\t}\n}\nregisterAction2(AccessibleViewNextAction);\n\n\nclass AccessibleViewNextCodeBlockAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AccessibilityCommandId.NextCodeBlock,\n\t\t\tprecondition: ContextKeyExpr.and(accessibleViewContainsCodeBlocks, ContextKeyExpr.equals(accessibleViewCurrentProviderId.key, AccessibleViewProviderId.Chat)),\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.PageDown,\n\t\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.PageDown, },\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t},\n\t\t\ticon: Codicon.arrowRight,\n\t\t\tmenu:\n\t\t\t{\n\t\t\t\t...accessibleViewMenu,\n\t\t\t\twhen: ContextKeyExpr.and(accessibleViewIsShown, accessibleViewContainsCodeBlocks),\n\t\t\t},\n\t\t\ttitle: localize('editor.action.accessibleViewNextCodeBlock', \"Accessible View: Next Code Block\")\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(IAccessibleViewService).navigateToCodeBlock('next');\n\t}\n}\nregisterAction2(AccessibleViewNextCodeBlockAction);\n\n\nclass AccessibleViewPreviousCodeBlockAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AccessibilityCommandId.PreviousCodeBlock,\n\t\t\tprecondition: ContextKeyExpr.and(accessibleViewContainsCodeBlocks, ContextKeyExpr.equals(accessibleViewCurrentProviderId.key, AccessibleViewProviderId.Chat)),\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.PageUp,\n\t\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.PageUp, },\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t},\n\t\t\ticon: Codicon.arrowLeft,\n\t\t\tmenu: {\n\t\t\t\t...accessibleViewMenu,\n\t\t\t\twhen: ContextKeyExpr.and(accessibleViewIsShown, accessibleViewContainsCodeBlocks),\n\t\t\t},\n\t\t\ttitle: localize('editor.action.accessibleViewPreviousCodeBlock', \"Accessible View: Previous Code Block\")\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(IAccessibleViewService).navigateToCodeBlock('previous');\n\t}\n}\nregisterAction2(AccessibleViewPreviousCodeBlockAction);\n\nclass AccessibleViewPreviousAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AccessibilityCommandId.ShowPrevious,\n\t\t\tprecondition: ContextKeyExpr.and(accessibleViewIsShown, accessibleViewSupportsNavigation),\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.BracketLeft,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t},\n\t\t\ticon: Codicon.arrowUp,\n\t\t\tmenu: [\n\t\t\t\tcommandPalette,\n\t\t\t\t{\n\t\t\t\t\t...accessibleViewMenu,\n\t\t\t\t\twhen: ContextKeyExpr.and(accessibleViewIsShown, accessibleViewSupportsNavigation),\n\t\t\t\t}\n\t\t\t],\n\t\t\ttitle: localize('editor.action.accessibleViewPrevious', \"Show Previous in Accessible View\")\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(IAccessibleViewService).previous();\n\t}\n}\nregisterAction2(AccessibleViewPreviousAction);\n\n\nclass AccessibleViewGoToSymbolAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AccessibilityCommandId.GoToSymbol,\n\t\t\tprecondition: ContextKeyExpr.and(ContextKeyExpr.or(accessibleViewIsShown, accessibilityHelpIsShown), accessibleViewGoToSymbolSupported),\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyO,\n\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Period],\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib + 10\n\t\t\t},\n\t\t\ticon: Codicon.symbolField,\n\t\t\tmenu: [\n\t\t\t\tcommandPalette,\n\t\t\t\t{\n\t\t\t\t\t...accessibleViewMenu,\n\t\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.or(accessibleViewIsShown, accessibilityHelpIsShown), accessibleViewGoToSymbolSupported),\n\t\t\t\t}\n\t\t\t],\n\t\t\ttitle: localize('editor.action.accessibleViewGoToSymbol', \"Go To Symbol in Accessible View\")\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(IAccessibleViewService).goToSymbol();\n\t}\n}\nregisterAction2(AccessibleViewGoToSymbolAction);\n\nfunction registerCommand<T extends Command>(command: T): T {\n\tcommand.register();\n\treturn command;\n}\n\nexport const AccessibilityHelpAction = registerCommand(new MultiCommand({\n\tid: AccessibilityCommandId.OpenAccessibilityHelp,\n\tprecondition: undefined,\n\tkbOpts: {\n\t\tprimary: KeyMod.Alt | KeyCode.F1,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\tlinux: {\n\t\t\tprimary: KeyMod.Alt | KeyMod.Shift | KeyCode.F1,\n\t\t\tsecondary: [KeyMod.Alt | KeyCode.F1]\n\t\t},\n\t\tkbExpr: accessibilityHelpIsShown.toNegated()\n\t},\n\tmenuOpts: [{\n\t\tmenuId: MenuId.CommandPalette,\n\t\tgroup: '',\n\t\ttitle: localize('editor.action.accessibilityHelp', \"Open Accessibility Help\"),\n\t\torder: 1\n\t}],\n}));\n\n\nexport const AccessibleViewAction = registerCommand(new MultiCommand({\n\tid: AccessibilityCommandId.OpenAccessibleView,\n\tprecondition: undefined,\n\tkbOpts: {\n\t\tprimary: KeyMod.Alt | KeyCode.F2,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\tlinux: {\n\t\t\tprimary: KeyMod.Alt | KeyMod.Shift | KeyCode.F2,\n\t\t\tsecondary: [KeyMod.Alt | KeyCode.F2]\n\t\t}\n\t},\n\tmenuOpts: [{\n\t\tmenuId: MenuId.CommandPalette,\n\t\tgroup: '',\n\t\ttitle: localize('editor.action.accessibleView', \"Open Accessible View\"),\n\t\torder: 1\n\t}],\n}));\n\nclass AccessibleViewDisableHintAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AccessibilityCommandId.DisableVerbosityHint,\n\t\t\tprecondition: ContextKeyExpr.and(ContextKeyExpr.or(accessibleViewIsShown, accessibilityHelpIsShown), accessibleViewVerbosityEnabled),\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.F6,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t},\n\t\t\ticon: Codicon.bellSlash,\n\t\t\tmenu: [\n\t\t\t\tcommandPalette,\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.AccessibleView,\n\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.or(accessibleViewIsShown, accessibilityHelpIsShown), accessibleViewVerbosityEnabled),\n\t\t\t\t}\n\t\t\t],\n\t\t\ttitle: localize('editor.action.accessibleViewDisableHint', \"Disable Accessible View Hint\")\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(IAccessibleViewService).disableHint();\n\t}\n}\nregisterAction2(AccessibleViewDisableHintAction);\n\nclass AccessibilityHelpConfigureKeybindingsAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AccessibilityCommandId.AccessibilityHelpConfigureKeybindings,\n\t\t\tprecondition: ContextKeyExpr.and(accessibilityHelpIsShown, accessibleViewHasUnassignedKeybindings),\n\t\t\ticon: Codicon.key,\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.KeyK,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t},\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.AccessibleView,\n\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\torder: 3,\n\t\t\t\t\twhen: accessibleViewHasUnassignedKeybindings,\n\t\t\t\t}\n\t\t\t],\n\t\t\ttitle: localize('editor.action.accessibilityHelpConfigureUnassignedKeybindings', \"Accessibility Help Configure Unassigned Keybindings\")\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tawait accessor.get(IAccessibleViewService).configureKeybindings(true);\n\t}\n}\nregisterAction2(AccessibilityHelpConfigureKeybindingsAction);\n\nclass AccessibilityHelpConfigureAssignedKeybindingsAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AccessibilityCommandId.AccessibilityHelpConfigureAssignedKeybindings,\n\t\t\tprecondition: ContextKeyExpr.and(accessibilityHelpIsShown, accessibleViewHasAssignedKeybindings),\n\t\t\ticon: Codicon.key,\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.KeyA,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t},\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.AccessibleView,\n\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\torder: 4,\n\t\t\t\t\twhen: accessibleViewHasAssignedKeybindings,\n\t\t\t\t}\n\t\t\t],\n\t\t\ttitle: localize('editor.action.accessibilityHelpConfigureAssignedKeybindings', \"Accessibility Help Configure Assigned Keybindings\")\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tawait accessor.get(IAccessibleViewService).configureKeybindings(false);\n\t}\n}\nregisterAction2(AccessibilityHelpConfigureAssignedKeybindingsAction);\n\n\nclass AccessibilityHelpOpenHelpLinkAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AccessibilityCommandId.AccessibilityHelpOpenHelpLink,\n\t\t\tprecondition: ContextKeyExpr.and(accessibilityHelpIsShown),\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.KeyH,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t},\n\t\t\ttitle: localize('editor.action.accessibilityHelpOpenHelpLink', \"Accessibility Help Open Help Link\")\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(IAccessibleViewService).openHelpLink();\n\t}\n}\nregisterAction2(AccessibilityHelpOpenHelpLinkAction);\n\nclass AccessibleViewAcceptInlineCompletionAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AccessibilityCommandId.AccessibleViewAcceptInlineCompletion,\n\t\t\tprecondition: ContextKeyExpr.and(accessibleViewIsShown, ContextKeyExpr.equals(accessibleViewCurrentProviderId.key, AccessibleViewProviderId.InlineCompletions)),\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Slash,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.Slash },\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t},\n\t\t\ticon: Codicon.check,\n\t\t\tmenu: [\n\t\t\t\tcommandPalette,\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.AccessibleView,\n\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\torder: 0,\n\t\t\t\t\twhen: ContextKeyExpr.and(accessibleViewIsShown, ContextKeyExpr.equals(accessibleViewCurrentProviderId.key, AccessibleViewProviderId.InlineCompletions))\n\t\t\t\t}],\n\t\t\ttitle: localize('editor.action.accessibleViewAcceptInlineCompletionAction', \"Accept Inline Completion\")\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst codeEditorService = accessor.get(ICodeEditorService);\n\t\tconst editor = codeEditorService.getActiveCodeEditor() || codeEditorService.getFocusedCodeEditor();\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\t\tconst model = InlineCompletionsController.get(editor)?.model.get();\n\t\tconst state = model?.state.get();\n\t\tif (!model || !state) {\n\t\t\treturn;\n\t\t}\n\t\tawait model.accept(editor);\n\t\tmodel.stop();\n\t\teditor.focus();\n\t}\n}\nregisterAction2(AccessibleViewAcceptInlineCompletionAction);\n\n"],
  "mappings": "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",
  "names": []
}
