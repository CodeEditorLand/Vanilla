{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/accessibility/browser/extensionAccesibilityHelp.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableMap, IDisposable, DisposableStore, Disposable } from '../../../../base/common/lifecycle.js';\nimport { ServicesAccessor } from '../../../../editor/browser/editorExtensions.js';\nimport { AccessibleViewType, ExtensionContentProvider } from '../../../../platform/accessibility/browser/accessibleView.js';\nimport { AccessibleViewRegistry } from '../../../../platform/accessibility/browser/accessibleViewRegistry.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { FocusedViewContext } from '../../../common/contextkeys.js';\nimport { IViewsRegistry, Extensions, IViewDescriptor } from '../../../common/views.js';\nimport { IViewsService } from '../../../services/views/common/viewsService.js';\n\nexport class ExtensionAccessibilityHelpDialogContribution extends Disposable {\n\tstatic ID = 'extensionAccessibilityHelpDialogContribution';\n\tprivate _viewHelpDialogMap = this._register(new DisposableMap<string, IDisposable>());\n\tconstructor(@IKeybindingService keybindingService: IKeybindingService) {\n\t\tsuper();\n\t\tthis._register(Registry.as<IViewsRegistry>(Extensions.ViewsRegistry).onViewsRegistered(e => {\n\t\t\tfor (const view of e) {\n\t\t\t\tfor (const viewDescriptor of view.views) {\n\t\t\t\t\tif (viewDescriptor.accessibilityHelpContent) {\n\t\t\t\t\t\tthis._viewHelpDialogMap.set(viewDescriptor.id, registerAccessibilityHelpAction(keybindingService, viewDescriptor));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tthis._register(Registry.as<IViewsRegistry>(Extensions.ViewsRegistry).onViewsDeregistered(e => {\n\t\t\tfor (const viewDescriptor of e.views) {\n\t\t\t\tif (viewDescriptor.accessibilityHelpContent) {\n\t\t\t\t\tthis._viewHelpDialogMap.get(viewDescriptor.id)?.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n}\n\nfunction registerAccessibilityHelpAction(keybindingService: IKeybindingService, viewDescriptor: IViewDescriptor): IDisposable {\n\tconst disposableStore = new DisposableStore();\n\tconst content = viewDescriptor.accessibilityHelpContent?.value;\n\tif (!content) {\n\t\tthrow new Error('No content provided for the accessibility help dialog');\n\t}\n\tdisposableStore.add(AccessibleViewRegistry.register({\n\t\tpriority: 95,\n\t\tname: viewDescriptor.id,\n\t\ttype: AccessibleViewType.Help,\n\t\twhen: FocusedViewContext.isEqualTo(viewDescriptor.id),\n\t\tgetProvider: (accessor: ServicesAccessor) => {\n\t\t\tconst viewsService = accessor.get(IViewsService);\n\t\t\treturn new ExtensionContentProvider(\n\t\t\t\tviewDescriptor.id,\n\t\t\t\t{ type: AccessibleViewType.Help },\n\t\t\t\t() => content,\n\t\t\t\t() => viewsService.openView(viewDescriptor.id, true),\n\t\t\t);\n\t\t},\n\t}));\n\n\tdisposableStore.add(keybindingService.onDidUpdateKeybindings(() => {\n\t\tdisposableStore.clear();\n\t\tdisposableStore.add(registerAccessibilityHelpAction(keybindingService, viewDescriptor));\n\t}));\n\treturn disposableStore;\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,eAAe,aAAa,iBAAiB,kBAAkB;AACxE,SAAS,wBAAwB;AACjC,SAAS,oBAAoB,gCAAgC;AAC7D,SAAS,8BAA8B;AACvC,SAAS,0BAA0B;AACnC,SAAS,gBAAgB;AACzB,SAAS,0BAA0B;AACnC,SAAS,gBAAgB,YAAY,uBAAuB;AAC5D,SAAS,qBAAqB;AAEvB,IAAM,+CAAN,cAA2D,WAAW;AAAA,EAf7E,OAe6E;AAAA;AAAA;AAAA,EAC5E,OAAO,KAAK;AAAA,EACJ,qBAAqB,KAAK,UAAU,IAAI,cAAmC,CAAC;AAAA,EACpF,YAAgC,mBAAuC;AACtE,UAAM;AACN,SAAK,UAAU,SAAS,GAAmB,WAAW,aAAa,EAAE,kBAAkB,OAAK;AAC3F,iBAAW,QAAQ,GAAG;AACrB,mBAAW,kBAAkB,KAAK,OAAO;AACxC,cAAI,eAAe,0BAA0B;AAC5C,iBAAK,mBAAmB,IAAI,eAAe,IAAI,gCAAgC,mBAAmB,cAAc,CAAC;AAAA,UAClH;AAAA,QACD;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AACF,SAAK,UAAU,SAAS,GAAmB,WAAW,aAAa,EAAE,oBAAoB,OAAK;AAC7F,iBAAW,kBAAkB,EAAE,OAAO;AACrC,YAAI,eAAe,0BAA0B;AAC5C,eAAK,mBAAmB,IAAI,eAAe,EAAE,GAAG,QAAQ;AAAA,QACzD;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAAA,EACH;AACD;AAtBa,+CAAN;AAAA,EAGO;AAAA,GAHD;AAwBb,SAAS,gCAAgC,mBAAuC,gBAA8C;AAC7H,QAAM,kBAAkB,IAAI,gBAAgB;AAC5C,QAAM,UAAU,eAAe,0BAA0B;AACzD,MAAI,CAAC,SAAS;AACb,UAAM,IAAI,MAAM,uDAAuD;AAAA,EACxE;AACA,kBAAgB,IAAI,uBAAuB,SAAS;AAAA,IACnD,UAAU;AAAA,IACV,MAAM,eAAe;AAAA,IACrB,MAAM,mBAAmB;AAAA,IACzB,MAAM,mBAAmB,UAAU,eAAe,EAAE;AAAA,IACpD,aAAa,wBAAC,aAA+B;AAC5C,YAAM,eAAe,SAAS,IAAI,aAAa;AAC/C,aAAO,IAAI;AAAA,QACV,eAAe;AAAA,QACf,EAAE,MAAM,mBAAmB,KAAK;AAAA,QAChC,MAAM;AAAA,QACN,MAAM,aAAa,SAAS,eAAe,IAAI,IAAI;AAAA,MACpD;AAAA,IACD,GARa;AAAA,EASd,CAAC,CAAC;AAEF,kBAAgB,IAAI,kBAAkB,uBAAuB,MAAM;AAClE,oBAAgB,MAAM;AACtB,oBAAgB,IAAI,gCAAgC,mBAAmB,cAAc,CAAC;AAAA,EACvF,CAAC,CAAC;AACF,SAAO;AACR;AA3BS;",
  "names": []
}
