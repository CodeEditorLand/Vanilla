{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/accessibility/browser/extensionAccesibilityHelp.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tDisposable,\n\tDisposableMap,\n\tDisposableStore,\n\ttype IDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport type { ServicesAccessor } from \"../../../../editor/browser/editorExtensions.js\";\nimport {\n\tAccessibleViewType,\n\tExtensionContentProvider,\n} from \"../../../../platform/accessibility/browser/accessibleView.js\";\nimport { AccessibleViewRegistry } from \"../../../../platform/accessibility/browser/accessibleViewRegistry.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { FocusedViewContext } from \"../../../common/contextkeys.js\";\nimport {\n\tExtensions,\n\ttype IViewDescriptor,\n\ttype IViewsRegistry,\n} from \"../../../common/views.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\n\nexport class ExtensionAccessibilityHelpDialogContribution extends Disposable {\n\tstatic ID = \"extensionAccessibilityHelpDialogContribution\";\n\tprivate _viewHelpDialogMap = this._register(\n\t\tnew DisposableMap<string, IDisposable>(),\n\t);\n\tconstructor(@IKeybindingService keybindingService: IKeybindingService) {\n\t\tsuper();\n\t\tthis._register(\n\t\t\tRegistry.as<IViewsRegistry>(\n\t\t\t\tExtensions.ViewsRegistry,\n\t\t\t).onViewsRegistered((e) => {\n\t\t\t\tfor (const view of e) {\n\t\t\t\t\tfor (const viewDescriptor of view.views) {\n\t\t\t\t\t\tif (viewDescriptor.accessibilityHelpContent) {\n\t\t\t\t\t\t\tthis._viewHelpDialogMap.set(\n\t\t\t\t\t\t\t\tviewDescriptor.id,\n\t\t\t\t\t\t\t\tregisterAccessibilityHelpAction(\n\t\t\t\t\t\t\t\t\tkeybindingService,\n\t\t\t\t\t\t\t\t\tviewDescriptor,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tRegistry.as<IViewsRegistry>(\n\t\t\t\tExtensions.ViewsRegistry,\n\t\t\t).onViewsDeregistered((e) => {\n\t\t\t\tfor (const viewDescriptor of e.views) {\n\t\t\t\t\tif (viewDescriptor.accessibilityHelpContent) {\n\t\t\t\t\t\tthis._viewHelpDialogMap\n\t\t\t\t\t\t\t.get(viewDescriptor.id)\n\t\t\t\t\t\t\t?.dispose();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n}\n\nfunction registerAccessibilityHelpAction(\n\tkeybindingService: IKeybindingService,\n\tviewDescriptor: IViewDescriptor,\n): IDisposable {\n\tconst disposableStore = new DisposableStore();\n\tconst content = viewDescriptor.accessibilityHelpContent?.value;\n\tif (!content) {\n\t\tthrow new Error(\n\t\t\t\"No content provided for the accessibility help dialog\",\n\t\t);\n\t}\n\tdisposableStore.add(\n\t\tAccessibleViewRegistry.register({\n\t\t\tpriority: 95,\n\t\t\tname: viewDescriptor.id,\n\t\t\ttype: AccessibleViewType.Help,\n\t\t\twhen: FocusedViewContext.isEqualTo(viewDescriptor.id),\n\t\t\tgetProvider: (accessor: ServicesAccessor) => {\n\t\t\t\tconst viewsService = accessor.get(IViewsService);\n\t\t\t\treturn new ExtensionContentProvider(\n\t\t\t\t\tviewDescriptor.id,\n\t\t\t\t\t{ type: AccessibleViewType.Help },\n\t\t\t\t\t() => content,\n\t\t\t\t\t() => viewsService.openView(viewDescriptor.id, true),\n\t\t\t\t);\n\t\t\t},\n\t\t}),\n\t);\n\n\tdisposableStore.add(\n\t\tkeybindingService.onDidUpdateKeybindings(() => {\n\t\t\tdisposableStore.clear();\n\t\t\tdisposableStore.add(\n\t\t\t\tregisterAccessibilityHelpAction(\n\t\t\t\t\tkeybindingService,\n\t\t\t\t\tviewDescriptor,\n\t\t\t\t),\n\t\t\t);\n\t\t}),\n\t);\n\treturn disposableStore;\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OAEM;AAEP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,8BAA8B;AACvC,SAAS,0BAA0B;AACnC,SAAS,gBAAgB;AACzB,SAAS,0BAA0B;AACnC;AAAA,EACC;AAAA,OAGM;AACP,SAAS,qBAAqB;AAEvB,IAAM,+CAAN,cAA2D,WAAW;AAAA,EA3B7E,OA2B6E;AAAA;AAAA;AAAA,EAC5E,OAAO,KAAK;AAAA,EACJ,qBAAqB,KAAK;AAAA,IACjC,IAAI,cAAmC;AAAA,EACxC;AAAA,EACA,YAAgC,mBAAuC;AACtE,UAAM;AACN,SAAK;AAAA,MACJ,SAAS;AAAA,QACR,WAAW;AAAA,MACZ,EAAE,kBAAkB,CAAC,MAAM;AAC1B,mBAAW,QAAQ,GAAG;AACrB,qBAAW,kBAAkB,KAAK,OAAO;AACxC,gBAAI,eAAe,0BAA0B;AAC5C,mBAAK,mBAAmB;AAAA,gBACvB,eAAe;AAAA,gBACf;AAAA,kBACC;AAAA,kBACA;AAAA,gBACD;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AACA,SAAK;AAAA,MACJ,SAAS;AAAA,QACR,WAAW;AAAA,MACZ,EAAE,oBAAoB,CAAC,MAAM;AAC5B,mBAAW,kBAAkB,EAAE,OAAO;AACrC,cAAI,eAAe,0BAA0B;AAC5C,iBAAK,mBACH,IAAI,eAAe,EAAE,GACpB,QAAQ;AAAA,UACZ;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD;AACD;AAxCa,+CAAN;AAAA,EAKO;AAAA,GALD;AA0Cb,SAAS,gCACR,mBACA,gBACc;AACd,QAAM,kBAAkB,IAAI,gBAAgB;AAC5C,QAAM,UAAU,eAAe,0BAA0B;AACzD,MAAI,CAAC,SAAS;AACb,UAAM,IAAI;AAAA,MACT;AAAA,IACD;AAAA,EACD;AACA,kBAAgB;AAAA,IACf,uBAAuB,SAAS;AAAA,MAC/B,UAAU;AAAA,MACV,MAAM,eAAe;AAAA,MACrB,MAAM,mBAAmB;AAAA,MACzB,MAAM,mBAAmB,UAAU,eAAe,EAAE;AAAA,MACpD,aAAa,wBAAC,aAA+B;AAC5C,cAAM,eAAe,SAAS,IAAI,aAAa;AAC/C,eAAO,IAAI;AAAA,UACV,eAAe;AAAA,UACf,EAAE,MAAM,mBAAmB,KAAK;AAAA,UAChC,MAAM;AAAA,UACN,MAAM,aAAa,SAAS,eAAe,IAAI,IAAI;AAAA,QACpD;AAAA,MACD,GARa;AAAA,IASd,CAAC;AAAA,EACF;AAEA,kBAAgB;AAAA,IACf,kBAAkB,uBAAuB,MAAM;AAC9C,sBAAgB,MAAM;AACtB,sBAAgB;AAAA,QACf;AAAA,UACC;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AACA,SAAO;AACR;AAzCS;",
  "names": []
}
