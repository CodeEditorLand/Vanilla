var b=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var a=(i,r,t,e)=>{for(var o=e>1?void 0:e?h(r,t):r,n=i.length-1,c;n>=0;n--)(c=i[n])&&(o=(e?c(r,t,o):c(o))||o);return e&&o&&b(r,t,o),o},m=(i,r)=>(t,e)=>r(t,e,i);import{Disposable as l}from"../../../../../vs/base/common/lifecycle.js";import{IContextMenuService as p}from"../../../../../vs/platform/contextview/browser/contextView.js";import{ILayoutService as u}from"../../../../../vs/platform/layout/browser/layoutService.js";import{Registry as f}from"../../../../../vs/platform/registry/common/platform.js";import{Extensions as g}from"../../../../../vs/workbench/common/contributions.js";import{LifecyclePhase as I}from"../../../../../vs/workbench/services/lifecycle/common/lifecycle.js";let s=class extends l{constructor(r,t){super();const e=o=>r.activeContainer.classList.toggle("context-menu-visible",o);this._register(t.onDidShowContextMenu(()=>e(!0))),this._register(t.onDidHideContextMenu(()=>e(!1)))}};s=a([m(0,u),m(1,p)],s),f.as(g.Workbench).registerWorkbenchContribution(s,I.Eventually);
