{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/multiDiffEditor/browser/multiDiffEditorInput.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tLazyStatefulPromise,\n\traceTimeout,\n} from \"../../../../base/common/async.js\";\nimport {\n\tBugIndicatingError,\n\tonUnexpectedError,\n} from \"../../../../base/common/errors.js\";\nimport { Event, ValueWithChangeEvent } from \"../../../../base/common/event.js\";\nimport type { IMarkdownString } from \"../../../../base/common/htmlContent.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\ttype IReference,\n} from \"../../../../base/common/lifecycle.js\";\nimport { parse } from \"../../../../base/common/marshalling.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { deepClone } from \"../../../../base/common/objects.js\";\nimport {\n\tObservableLazyPromise,\n\tValueWithChangeEventFromObservable,\n\tautorun,\n\tconstObservable,\n\tderived,\n\tmapObservableArrayCached,\n\tobservableFromEvent,\n\tobservableFromValueWithChangeEvent,\n\tobservableValue,\n\trecomputeInitiallyAndOnChange,\n} from \"../../../../base/common/observable.js\";\nimport type { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { isDefined, isObject } from \"../../../../base/common/types.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { RefCounted } from \"../../../../editor/browser/widget/diffEditor/utils.js\";\nimport type {\n\tIDocumentDiffItem,\n\tIMultiDiffEditorModel,\n} from \"../../../../editor/browser/widget/multiDiffEditor/model.js\";\nimport { MultiDiffEditorViewModel } from \"../../../../editor/browser/widget/multiDiffEditor/multiDiffEditorViewModel.js\";\nimport type { IDiffEditorOptions } from \"../../../../editor/common/config/editorOptions.js\";\nimport {\n\ttype IResolvedTextEditorModel,\n\tITextModelService,\n} from \"../../../../editor/common/services/resolverService.js\";\nimport { ITextResourceConfigurationService } from \"../../../../editor/common/services/textResourceConfiguration.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { ConfirmResult } from \"../../../../platform/dialogs/common/dialogs.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport type { IEditorConfiguration } from \"../../../browser/parts/editor/textEditor.js\";\nimport {\n\tDEFAULT_EDITOR_ASSOCIATION,\n\tEditorInputCapabilities,\n\ttype EditorInputWithOptions,\n\ttype GroupIdentifier,\n\ttype IEditorSerializer,\n\ttype IResourceMultiDiffEditorInput,\n\ttype IRevertOptions,\n\ttype ISaveOptions,\n\ttype IUntypedEditorInput,\n} from \"../../../common/editor.js\";\nimport {\n\tEditorInput,\n\ttype IEditorCloseHandler,\n} from \"../../../common/editor/editorInput.js\";\nimport {\n\tIEditorResolverService,\n\tRegisteredEditorPriority,\n} from \"../../../services/editor/common/editorResolverService.js\";\nimport {\n\ttype ILanguageSupport,\n\ttype ITextFileEditorModel,\n\tITextFileService,\n} from \"../../../services/textfile/common/textfiles.js\";\nimport { MultiDiffEditorIcon } from \"./icons.contribution.js\";\nimport {\n\tIMultiDiffSourceResolverService,\n\ttype IResolvedMultiDiffSource,\n\tMultiDiffEditorItem,\n} from \"./multiDiffSourceResolverService.js\";\n\nexport class MultiDiffEditorInput\n\textends EditorInput\n\timplements ILanguageSupport\n{\n\tpublic static fromResourceMultiDiffEditorInput(\n\t\tinput: IResourceMultiDiffEditorInput,\n\t\tinstantiationService: IInstantiationService,\n\t): MultiDiffEditorInput {\n\t\tif (!input.multiDiffSource && !input.resources) {\n\t\t\tthrow new BugIndicatingError(\n\t\t\t\t\"MultiDiffEditorInput requires either multiDiffSource or resources\",\n\t\t\t);\n\t\t}\n\t\tconst multiDiffSource =\n\t\t\tinput.multiDiffSource ??\n\t\t\tURI.parse(\n\t\t\t\t`multi-diff-editor:${new Date().getMilliseconds().toString() + Math.random().toString()}`,\n\t\t\t);\n\t\treturn instantiationService.createInstance(\n\t\t\tMultiDiffEditorInput,\n\t\t\tmultiDiffSource,\n\t\t\tinput.label,\n\t\t\tinput.resources?.map((resource) => {\n\t\t\t\treturn new MultiDiffEditorItem(\n\t\t\t\t\tresource.original.resource,\n\t\t\t\t\tresource.modified.resource,\n\t\t\t\t\tresource.goToFileResource,\n\t\t\t\t);\n\t\t\t}),\n\t\t\tinput.isTransient ?? false,\n\t\t);\n\t}\n\n\tpublic static fromSerialized(\n\t\tdata: ISerializedMultiDiffEditorInput,\n\t\tinstantiationService: IInstantiationService,\n\t): MultiDiffEditorInput {\n\t\treturn instantiationService.createInstance(\n\t\t\tMultiDiffEditorInput,\n\t\t\tURI.parse(data.multiDiffSourceUri),\n\t\t\tdata.label,\n\t\t\tdata.resources?.map(\n\t\t\t\t(resource) =>\n\t\t\t\t\tnew MultiDiffEditorItem(\n\t\t\t\t\t\tresource.originalUri\n\t\t\t\t\t\t\t? URI.parse(resource.originalUri)\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\tresource.modifiedUri\n\t\t\t\t\t\t\t? URI.parse(resource.modifiedUri)\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\tresource.goToFileUri\n\t\t\t\t\t\t\t? URI.parse(resource.goToFileUri)\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t),\n\t\t\t),\n\t\t\tfalse,\n\t\t);\n\t}\n\n\tstatic readonly ID: string = \"workbench.input.multiDiffEditor\";\n\n\tget resource(): URI | undefined {\n\t\treturn this.multiDiffSource;\n\t}\n\n\toverride get capabilities(): EditorInputCapabilities {\n\t\treturn EditorInputCapabilities.Readonly;\n\t}\n\toverride get typeId(): string {\n\t\treturn MultiDiffEditorInput.ID;\n\t}\n\n\tprivate _name = \"\";\n\toverride getName(): string {\n\t\treturn this._name;\n\t}\n\n\toverride get editorId(): string {\n\t\treturn DEFAULT_EDITOR_ASSOCIATION.id;\n\t}\n\toverride getIcon(): ThemeIcon {\n\t\treturn MultiDiffEditorIcon;\n\t}\n\n\tconstructor(\n\t\tpublic readonly multiDiffSource: URI,\n\t\tpublic readonly label: string | undefined,\n\t\tpublic readonly initialResources: readonly MultiDiffEditorItem[] | undefined,\n\t\tpublic readonly isTransient: boolean = false,\n\t\t@ITextModelService private readonly _textModelService: ITextModelService,\n\t\t@ITextResourceConfigurationService private readonly _textResourceConfigurationService: ITextResourceConfigurationService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IMultiDiffSourceResolverService private readonly _multiDiffSourceResolverService: IMultiDiffSourceResolverService,\n\t\t@ITextFileService private readonly _textFileService: ITextFileService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(autorun((reader) => {\n\t\t\t/** @description Updates name */\n\t\t\tconst resources = this.resources.read(reader);\n\t\t\tconst label = this.label ?? localize('name', \"Multi Diff Editor\");\n\t\t\tif (resources) {\n\t\t\t\tthis._name = label + localize({\n\t\t\t\t\tkey: 'files',\n\t\t\t\t\tcomment: ['the number of files being shown']\n\t\t\t\t}, \" ({0} files)\", resources.length);\n\t\t\t} else {\n\t\t\t\tthis._name = label;\n\t\t\t}\n\t\t\tthis._onDidChangeLabel.fire();\n\t\t}));\n\t}\n\n\tpublic serialize(): ISerializedMultiDiffEditorInput {\n\t\treturn {\n\t\t\tlabel: this.label,\n\t\t\tmultiDiffSourceUri: this.multiDiffSource.toString(),\n\t\t\tresources: this.initialResources?.map((resource) => ({\n\t\t\t\toriginalUri: resource.originalUri?.toString(),\n\t\t\t\tmodifiedUri: resource.modifiedUri?.toString(),\n\t\t\t\tgoToFileUri: resource.goToFileUri?.toString(),\n\t\t\t})),\n\t\t};\n\t}\n\n\tpublic setLanguageId(\n\t\tlanguageId: string,\n\t\tsource?: string | undefined,\n\t): void {\n\t\tconst activeDiffItem = this._viewModel\n\t\t\t.requireValue()\n\t\t\t.activeDiffItem.get();\n\t\tconst value = activeDiffItem?.documentDiffItem;\n\t\tif (!value) {\n\t\t\treturn;\n\t\t}\n\t\tconst target = value.modified ?? value.original;\n\t\tif (!target) {\n\t\t\treturn;\n\t\t}\n\t\ttarget.setLanguage(languageId, source);\n\t}\n\n\tpublic async getViewModel(): Promise<MultiDiffEditorViewModel> {\n\t\treturn this._viewModel.getPromise();\n\t}\n\n\tprivate readonly _viewModel = new LazyStatefulPromise(async () => {\n\t\tconst model = await this._createModel();\n\t\tthis._register(model);\n\t\tconst vm = new MultiDiffEditorViewModel(\n\t\t\tmodel,\n\t\t\tthis._instantiationService,\n\t\t);\n\t\tthis._register(vm);\n\t\tawait raceTimeout(vm.waitForDiffs(), 1000);\n\t\treturn vm;\n\t});\n\n\tprivate async _createModel(): Promise<IMultiDiffEditorModel & IDisposable> {\n\t\tconst source = await this._resolvedSource.getPromise();\n\t\tconst textResourceConfigurationService =\n\t\t\tthis._textResourceConfigurationService;\n\n\t\tconst documentsWithPromises = mapObservableArrayCached(\n\t\t\tthis,\n\t\t\tsource.resources,\n\t\t\tasync (r, store) => {\n\t\t\t\t/** @description documentsWithPromises */\n\t\t\t\tlet original: IReference<IResolvedTextEditorModel> | undefined;\n\t\t\t\tlet modified: IReference<IResolvedTextEditorModel> | undefined;\n\n\t\t\t\tconst multiDiffItemStore = new DisposableStore();\n\n\t\t\t\ttry {\n\t\t\t\t\t[original, modified] = await Promise.all([\n\t\t\t\t\t\tr.originalUri\n\t\t\t\t\t\t\t? this._textModelService.createModelReference(\n\t\t\t\t\t\t\t\t\tr.originalUri,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\tr.modifiedUri\n\t\t\t\t\t\t\t? this._textModelService.createModelReference(\n\t\t\t\t\t\t\t\t\tr.modifiedUri,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t]);\n\t\t\t\t\tif (original) {\n\t\t\t\t\t\tmultiDiffItemStore.add(original);\n\t\t\t\t\t}\n\t\t\t\t\tif (modified) {\n\t\t\t\t\t\tmultiDiffItemStore.add(modified);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// e.g. \"File seems to be binary and cannot be opened as text\"\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\tconst uri = (r.modifiedUri ?? r.originalUri)!;\n\t\t\t\tconst result: IDocumentDiffItemWithMultiDiffEditorItem = {\n\t\t\t\t\tmultiDiffEditorItem: r,\n\t\t\t\t\toriginal: original?.object.textEditorModel,\n\t\t\t\t\tmodified: modified?.object.textEditorModel,\n\t\t\t\t\tcontextKeys: r.contextKeys,\n\t\t\t\t\tget options() {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...getReadonlyConfiguration(\n\t\t\t\t\t\t\t\tmodified?.object.isReadonly() ?? true,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t...computeOptions(\n\t\t\t\t\t\t\t\ttextResourceConfigurationService.getValue(uri),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t} satisfies IDiffEditorOptions;\n\t\t\t\t\t},\n\t\t\t\t\tonOptionsDidChange: (h) =>\n\t\t\t\t\t\tthis._textResourceConfigurationService.onDidChangeConfiguration(\n\t\t\t\t\t\t\t(e) => {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\te.affectsConfiguration(uri, \"editor\") ||\n\t\t\t\t\t\t\t\t\te.affectsConfiguration(uri, \"diffEditor\")\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\th();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t};\n\t\t\t\treturn store.add(\n\t\t\t\t\tRefCounted.createOfNonDisposable(\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\tmultiDiffItemStore,\n\t\t\t\t\t\tthis,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t},\n\t\t\t(i) =>\n\t\t\t\tJSON.stringify([\n\t\t\t\t\ti.modifiedUri?.toString(),\n\t\t\t\t\ti.originalUri?.toString(),\n\t\t\t\t]),\n\t\t);\n\n\t\tconst documents = observableValue<\n\t\t\treadonly RefCounted<IDocumentDiffItem>[] | \"loading\"\n\t\t>(\"documents\", \"loading\");\n\n\t\tconst updateDocuments = derived(async (reader) => {\n\t\t\t/** @description Update documents */\n\t\t\tconst docsPromises = documentsWithPromises.read(reader);\n\t\t\tconst docs = await Promise.all(docsPromises);\n\t\t\tconst newDocuments = docs.filter(isDefined);\n\t\t\tdocuments.set(newDocuments, undefined);\n\t\t});\n\n\t\tconst a = recomputeInitiallyAndOnChange(updateDocuments);\n\t\tawait updateDocuments.get();\n\n\t\tconst result: IMultiDiffEditorModel & IDisposable = {\n\t\t\tdispose: () => a.dispose(),\n\t\t\tdocuments: new ValueWithChangeEventFromObservable(documents),\n\t\t\tcontextKeys: source.source?.contextKeys,\n\t\t};\n\t\treturn result;\n\t}\n\n\tprivate readonly _resolvedSource = new ObservableLazyPromise(async () => {\n\t\tconst source: IResolvedMultiDiffSource | undefined = this\n\t\t\t.initialResources\n\t\t\t? { resources: ValueWithChangeEvent.const(this.initialResources) }\n\t\t\t: await this._multiDiffSourceResolverService.resolve(\n\t\t\t\t\tthis.multiDiffSource,\n\t\t\t\t);\n\t\treturn {\n\t\t\tsource,\n\t\t\tresources: source\n\t\t\t\t? observableFromValueWithChangeEvent(this, source.resources)\n\t\t\t\t: constObservable([]),\n\t\t};\n\t});\n\n\toverride matches(otherInput: EditorInput | IUntypedEditorInput): boolean {\n\t\tif (super.matches(otherInput)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (otherInput instanceof MultiDiffEditorInput) {\n\t\t\treturn (\n\t\t\t\tthis.multiDiffSource.toString() ===\n\t\t\t\totherInput.multiDiffSource.toString()\n\t\t\t);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic readonly resources = derived(this, (reader) =>\n\t\tthis._resolvedSource.cachedPromiseResult\n\t\t\t.read(reader)\n\t\t\t?.data?.resources.read(reader),\n\t);\n\n\tprivate readonly textFileServiceOnDidChange = new FastEventDispatcher<\n\t\tITextFileEditorModel,\n\t\tURI\n\t>(\n\t\tthis._textFileService.files.onDidChangeDirty,\n\t\t(item) => item.resource.toString(),\n\t\t(uri) => uri.toString(),\n\t);\n\n\tprivate readonly _isDirtyObservables = mapObservableArrayCached(\n\t\tthis,\n\t\tthis.resources.map((r) => r ?? []),\n\t\t(res) => {\n\t\t\tconst isModifiedDirty = res.modifiedUri\n\t\t\t\t? isUriDirty(\n\t\t\t\t\t\tthis.textFileServiceOnDidChange,\n\t\t\t\t\t\tthis._textFileService,\n\t\t\t\t\t\tres.modifiedUri,\n\t\t\t\t\t)\n\t\t\t\t: constObservable(false);\n\t\t\tconst isOriginalDirty = res.originalUri\n\t\t\t\t? isUriDirty(\n\t\t\t\t\t\tthis.textFileServiceOnDidChange,\n\t\t\t\t\t\tthis._textFileService,\n\t\t\t\t\t\tres.originalUri,\n\t\t\t\t\t)\n\t\t\t\t: constObservable(false);\n\t\t\treturn derived(\n\t\t\t\t(reader) =>\n\t\t\t\t\t/** @description modifiedDirty||originalDirty */ isModifiedDirty.read(\n\t\t\t\t\t\treader,\n\t\t\t\t\t) || isOriginalDirty.read(reader),\n\t\t\t);\n\t\t},\n\t\t(i) => i.getKey(),\n\t);\n\tprivate readonly _isDirtyObservable = derived(this, (reader) =>\n\t\tthis._isDirtyObservables\n\t\t\t.read(reader)\n\t\t\t.some((isDirty) => isDirty.read(reader)),\n\t).keepObserved(this._store);\n\n\toverride readonly onDidChangeDirty = Event.fromObservableLight(\n\t\tthis._isDirtyObservable,\n\t);\n\toverride isDirty() {\n\t\treturn this._isDirtyObservable.get();\n\t}\n\n\toverride async save(\n\t\tgroup: number,\n\t\toptions?: ISaveOptions | undefined,\n\t): Promise<EditorInput> {\n\t\tawait this.doSaveOrRevert(\"save\", group, options);\n\t\treturn this;\n\t}\n\n\toverride revert(\n\t\tgroup: GroupIdentifier,\n\t\toptions?: IRevertOptions,\n\t): Promise<void> {\n\t\treturn this.doSaveOrRevert(\"revert\", group, options);\n\t}\n\n\tprivate async doSaveOrRevert(\n\t\tmode: \"save\",\n\t\tgroup: GroupIdentifier,\n\t\toptions?: ISaveOptions,\n\t): Promise<void>;\n\tprivate async doSaveOrRevert(\n\t\tmode: \"revert\",\n\t\tgroup: GroupIdentifier,\n\t\toptions?: IRevertOptions,\n\t): Promise<void>;\n\tprivate async doSaveOrRevert(\n\t\tmode: \"save\" | \"revert\",\n\t\tgroup: GroupIdentifier,\n\t\toptions?: ISaveOptions | IRevertOptions,\n\t): Promise<void> {\n\t\tconst items = this._viewModel.currentValue?.items.get();\n\t\tif (items) {\n\t\t\tawait Promise.all(\n\t\t\t\titems.map(async (item) => {\n\t\t\t\t\tconst model = item.diffEditorViewModel.model;\n\t\t\t\t\tconst handleOriginal =\n\t\t\t\t\t\tmodel.original.uri.scheme !== Schemas.untitled &&\n\t\t\t\t\t\tthis._textFileService.isDirty(model.original.uri); // match diff editor behaviour\n\n\t\t\t\t\tawait Promise.all([\n\t\t\t\t\t\thandleOriginal\n\t\t\t\t\t\t\t? mode === \"save\"\n\t\t\t\t\t\t\t\t? this._textFileService.save(\n\t\t\t\t\t\t\t\t\t\tmodel.original.uri,\n\t\t\t\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: this._textFileService.revert(\n\t\t\t\t\t\t\t\t\t\tmodel.original.uri,\n\t\t\t\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: Promise.resolve(),\n\t\t\t\t\t\tmode === \"save\"\n\t\t\t\t\t\t\t? this._textFileService.save(\n\t\t\t\t\t\t\t\t\tmodel.modified.uri,\n\t\t\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: this._textFileService.revert(\n\t\t\t\t\t\t\t\t\tmodel.modified.uri,\n\t\t\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t]);\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\toverride readonly closeHandler: IEditorCloseHandler = {\n\t\t// TODO@bpasero TODO@hediet this is a workaround for\n\t\t// not having a better way to figure out if the\n\t\t// editors this input wraps around are opened or not\n\n\t\tasync confirm() {\n\t\t\treturn ConfirmResult.DONT_SAVE;\n\t\t},\n\t\tshowConfirm() {\n\t\t\treturn false;\n\t\t},\n\t};\n}\n\nexport interface IDocumentDiffItemWithMultiDiffEditorItem\n\textends IDocumentDiffItem {\n\tmultiDiffEditorItem: MultiDiffEditorItem;\n}\n\n/**\n * Uses a map to efficiently dispatch events to listeners that are interested in a specific key.\n */\nclass FastEventDispatcher<T, TKey> {\n\tprivate _count = 0;\n\tprivate readonly _buckets = new Map<string, Set<(value: T) => void>>();\n\n\tprivate _eventSubscription: IDisposable | undefined;\n\n\tconstructor(\n\t\tprivate readonly _event: Event<T>,\n\t\tprivate readonly _getEventArgsKey: (item: T) => string,\n\t\tprivate readonly _keyToString: (key: TKey) => string,\n\t) {}\n\n\tpublic filteredEvent(\n\t\tfilter: TKey,\n\t): (listener: (e: T) => any) => IDisposable {\n\t\treturn (listener) => {\n\t\t\tconst key = this._keyToString(filter);\n\t\t\tlet bucket = this._buckets.get(key);\n\t\t\tif (!bucket) {\n\t\t\t\tbucket = new Set();\n\t\t\t\tthis._buckets.set(key, bucket);\n\t\t\t}\n\t\t\tbucket.add(listener);\n\n\t\t\tthis._count++;\n\t\t\tif (this._count === 1) {\n\t\t\t\tthis._eventSubscription = this._event(this._handleEventChange);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdispose: () => {\n\t\t\t\t\tbucket!.delete(listener);\n\t\t\t\t\tif (bucket!.size === 0) {\n\t\t\t\t\t\tthis._buckets.delete(key);\n\t\t\t\t\t}\n\t\t\t\t\tthis._count--;\n\n\t\t\t\t\tif (this._count === 0) {\n\t\t\t\t\t\tthis._eventSubscription?.dispose();\n\t\t\t\t\t\tthis._eventSubscription = undefined;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t};\n\t}\n\n\tprivate readonly _handleEventChange = (e: T) => {\n\t\tconst key = this._getEventArgsKey(e);\n\t\tconst bucket = this._buckets.get(key);\n\t\tif (bucket) {\n\t\t\tfor (const listener of bucket) {\n\t\t\t\tlistener(e);\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction isUriDirty(\n\tonDidChangeDirty: FastEventDispatcher<ITextFileEditorModel, URI>,\n\ttextFileService: ITextFileService,\n\turi: URI,\n) {\n\treturn observableFromEvent(onDidChangeDirty.filteredEvent(uri), () =>\n\t\ttextFileService.isDirty(uri),\n\t);\n}\n\nfunction getReadonlyConfiguration(\n\tisReadonly: boolean | IMarkdownString | undefined,\n): { readOnly: boolean; readOnlyMessage: IMarkdownString | undefined } {\n\treturn {\n\t\treadOnly: !!isReadonly,\n\t\treadOnlyMessage:\n\t\t\ttypeof isReadonly !== \"boolean\" ? isReadonly : undefined,\n\t};\n}\n\nfunction computeOptions(\n\tconfiguration: IEditorConfiguration,\n): IDiffEditorOptions {\n\tconst editorConfiguration = deepClone(configuration.editor);\n\n\t// Handle diff editor specially by merging in diffEditor configuration\n\tif (isObject(configuration.diffEditor)) {\n\t\tconst diffEditorConfiguration: IDiffEditorOptions = deepClone(\n\t\t\tconfiguration.diffEditor,\n\t\t);\n\n\t\t// User settings defines `diffEditor.codeLens`, but here we rename that to `diffEditor.diffCodeLens` to avoid collisions with `editor.codeLens`.\n\t\tdiffEditorConfiguration.diffCodeLens = diffEditorConfiguration.codeLens;\n\t\tdelete diffEditorConfiguration.codeLens;\n\n\t\t// User settings defines `diffEditor.wordWrap`, but here we rename that to `diffEditor.diffWordWrap` to avoid collisions with `editor.wordWrap`.\n\t\tdiffEditorConfiguration.diffWordWrap = <\n\t\t\t\"off\" | \"on\" | \"inherit\" | undefined\n\t\t>diffEditorConfiguration.wordWrap;\n\t\tdelete diffEditorConfiguration.wordWrap;\n\n\t\tObject.assign(editorConfiguration, diffEditorConfiguration);\n\t}\n\treturn editorConfiguration;\n}\n\nexport class MultiDiffEditorResolverContribution extends Disposable {\n\tstatic readonly ID = \"workbench.contrib.multiDiffEditorResolver\";\n\n\tconstructor(\n\t\t@IEditorResolverService editorResolverService: IEditorResolverService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(\n\t\t\teditorResolverService.registerEditor(\n\t\t\t\t`*`,\n\t\t\t\t{\n\t\t\t\t\tid: DEFAULT_EDITOR_ASSOCIATION.id,\n\t\t\t\t\tlabel: DEFAULT_EDITOR_ASSOCIATION.displayName,\n\t\t\t\t\tdetail: DEFAULT_EDITOR_ASSOCIATION.providerDisplayName,\n\t\t\t\t\tpriority: RegisteredEditorPriority.builtin,\n\t\t\t\t},\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\tcreateMultiDiffEditorInput: (\n\t\t\t\t\t\tmultiDiffEditor: IResourceMultiDiffEditorInput,\n\t\t\t\t\t): EditorInputWithOptions => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\teditor: MultiDiffEditorInput.fromResourceMultiDiffEditorInput(\n\t\t\t\t\t\t\t\tmultiDiffEditor,\n\t\t\t\t\t\t\t\tinstantiationService,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n}\n\ninterface ISerializedMultiDiffEditorInput {\n\tmultiDiffSourceUri: string;\n\tlabel: string | undefined;\n\tresources:\n\t\t| {\n\t\t\t\toriginalUri: string | undefined;\n\t\t\t\tmodifiedUri: string | undefined;\n\t\t\t\tgoToFileUri: string | undefined;\n\t\t  }[]\n\t\t| undefined;\n}\n\nexport class MultiDiffEditorSerializer implements IEditorSerializer {\n\tcanSerialize(editor: EditorInput): editor is MultiDiffEditorInput {\n\t\treturn editor instanceof MultiDiffEditorInput && !editor.isTransient;\n\t}\n\n\tserialize(editor: MultiDiffEditorInput): string | undefined {\n\t\tif (!this.canSerialize(editor)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn JSON.stringify(editor.serialize());\n\t}\n\n\tdeserialize(\n\t\tinstantiationService: IInstantiationService,\n\t\tserializedEditor: string,\n\t): EditorInput | undefined {\n\t\ttry {\n\t\t\tconst data = parse(\n\t\t\t\tserializedEditor,\n\t\t\t) as ISerializedMultiDiffEditorInput;\n\t\t\treturn MultiDiffEditorInput.fromSerialized(\n\t\t\t\tdata,\n\t\t\t\tinstantiationService,\n\t\t\t);\n\t\t} catch (err) {\n\t\t\tonUnexpectedError(err);\n\t\t\treturn undefined;\n\t\t}\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,OAAO,4BAA4B;AAE5C;AAAA,EACC;AAAA,EACA;AAAA,OAGM;AACP,SAAS,aAAa;AACtB,SAAS,eAAe;AACxB,SAAS,iBAAiB;AAC1B;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAEP,SAAS,WAAW,gBAAgB;AACpC,SAAS,WAAW;AACpB,SAAS,kBAAkB;AAK3B,SAAS,gCAAgC;AAEzC;AAAA,EAEC;AAAA,OACM;AACP,SAAS,yCAAyC;AAClD,SAAS,gBAAgB;AACzB,SAAS,qBAAqB;AAC9B,SAAS,6BAA6B;AAEtC;AAAA,EACC;AAAA,EACA;AAAA,OAQM;AACP;AAAA,EACC;AAAA,OAEM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EAGC;AAAA,OACM;AACP,SAAS,2BAA2B;AACpC;AAAA,EACC;AAAA,EAEA;AAAA,OACM;AAEA,IAAM,uBAAN,cACE,YAET;AAAA,EAiFC,YACiB,iBACA,OACA,kBACA,cAAuB,OACH,mBACgB,mCACZ,uBACU,iCACf,kBAClC;AACD,UAAM;AAVU;AACA;AACA;AACA;AACoB;AACgB;AACZ;AACU;AACf;AAInC,SAAK,UAAU,QAAQ,CAAC,WAAW;AAElC,YAAM,YAAY,KAAK,UAAU,KAAK,MAAM;AAC5C,YAAMA,SAAQ,KAAK,SAAS,SAAS,QAAQ,mBAAmB;AAChE,UAAI,WAAW;AACd,aAAK,QAAQA,SAAQ,SAAS;AAAA,UAC7B,KAAK;AAAA,UACL,SAAS,CAAC,iCAAiC;AAAA,QAC5C,GAAG,gBAAgB,UAAU,MAAM;AAAA,MACpC,OAAO;AACN,aAAK,QAAQA;AAAA,MACd;AACA,WAAK,kBAAkB,KAAK;AAAA,IAC7B,CAAC,CAAC;AAAA,EACH;AAAA,EArMD,OAyFA;AAAA;AAAA;AAAA,EACC,OAAc,iCACb,OACA,sBACuB;AACvB,QAAI,CAAC,MAAM,mBAAmB,CAAC,MAAM,WAAW;AAC/C,YAAM,IAAI;AAAA,QACT;AAAA,MACD;AAAA,IACD;AACA,UAAM,kBACL,MAAM,mBACN,IAAI;AAAA,MACH,sBAAqB,oBAAI,KAAK,GAAE,gBAAgB,EAAE,SAAS,IAAI,KAAK,OAAO,EAAE,SAAS,CAAC;AAAA,IACxF;AACD,WAAO,qBAAqB;AAAA,MAC3B;AAAA,MACA;AAAA,MACA,MAAM;AAAA,MACN,MAAM,WAAW,IAAI,CAAC,aAAa;AAClC,eAAO,IAAI;AAAA,UACV,SAAS,SAAS;AAAA,UAClB,SAAS,SAAS;AAAA,UAClB,SAAS;AAAA,QACV;AAAA,MACD,CAAC;AAAA,MACD,MAAM,eAAe;AAAA,IACtB;AAAA,EACD;AAAA,EAEA,OAAc,eACb,MACA,sBACuB;AACvB,WAAO,qBAAqB;AAAA,MAC3B;AAAA,MACA,IAAI,MAAM,KAAK,kBAAkB;AAAA,MACjC,KAAK;AAAA,MACL,KAAK,WAAW;AAAA,QACf,CAAC,aACA,IAAI;AAAA,UACH,SAAS,cACN,IAAI,MAAM,SAAS,WAAW,IAC9B;AAAA,UACH,SAAS,cACN,IAAI,MAAM,SAAS,WAAW,IAC9B;AAAA,UACH,SAAS,cACN,IAAI,MAAM,SAAS,WAAW,IAC9B;AAAA,QACJ;AAAA,MACF;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAAA,EAEA,OAAgB,KAAa;AAAA,EAE7B,IAAI,WAA4B;AAC/B,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAa,eAAwC;AACpD,WAAO,wBAAwB;AAAA,EAChC;AAAA,EACA,IAAa,SAAiB;AAC7B,WAAO,qBAAqB;AAAA,EAC7B;AAAA,EAEQ,QAAQ;AAAA,EACP,UAAkB;AAC1B,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAa,WAAmB;AAC/B,WAAO,2BAA2B;AAAA,EACnC;AAAA,EACS,UAAqB;AAC7B,WAAO;AAAA,EACR;AAAA,EA+BO,YAA6C;AACnD,WAAO;AAAA,MACN,OAAO,KAAK;AAAA,MACZ,oBAAoB,KAAK,gBAAgB,SAAS;AAAA,MAClD,WAAW,KAAK,kBAAkB,IAAI,CAAC,cAAc;AAAA,QACpD,aAAa,SAAS,aAAa,SAAS;AAAA,QAC5C,aAAa,SAAS,aAAa,SAAS;AAAA,QAC5C,aAAa,SAAS,aAAa,SAAS;AAAA,MAC7C,EAAE;AAAA,IACH;AAAA,EACD;AAAA,EAEO,cACN,YACA,QACO;AACP,UAAM,iBAAiB,KAAK,WAC1B,aAAa,EACb,eAAe,IAAI;AACrB,UAAM,QAAQ,gBAAgB;AAC9B,QAAI,CAAC,OAAO;AACX;AAAA,IACD;AACA,UAAM,SAAS,MAAM,YAAY,MAAM;AACvC,QAAI,CAAC,QAAQ;AACZ;AAAA,IACD;AACA,WAAO,YAAY,YAAY,MAAM;AAAA,EACtC;AAAA,EAEA,MAAa,eAAkD;AAC9D,WAAO,KAAK,WAAW,WAAW;AAAA,EACnC;AAAA,EAEiB,aAAa,IAAI,oBAAoB,YAAY;AACjE,UAAM,QAAQ,MAAM,KAAK,aAAa;AACtC,SAAK,UAAU,KAAK;AACpB,UAAM,KAAK,IAAI;AAAA,MACd;AAAA,MACA,KAAK;AAAA,IACN;AACA,SAAK,UAAU,EAAE;AACjB,UAAM,YAAY,GAAG,aAAa,GAAG,GAAI;AACzC,WAAO;AAAA,EACR,CAAC;AAAA,EAED,MAAc,eAA6D;AAC1E,UAAM,SAAS,MAAM,KAAK,gBAAgB,WAAW;AACrD,UAAM,mCACL,KAAK;AAEN,UAAM,wBAAwB;AAAA,MAC7B;AAAA,MACA,OAAO;AAAA,MACP,OAAO,GAAG,UAAU;AAEnB,YAAI;AACJ,YAAI;AAEJ,cAAM,qBAAqB,IAAI,gBAAgB;AAE/C,YAAI;AACH,WAAC,UAAU,QAAQ,IAAI,MAAM,QAAQ,IAAI;AAAA,YACxC,EAAE,cACC,KAAK,kBAAkB;AAAA,cACvB,EAAE;AAAA,YACH,IACC;AAAA,YACH,EAAE,cACC,KAAK,kBAAkB;AAAA,cACvB,EAAE;AAAA,YACH,IACC;AAAA,UACJ,CAAC;AACD,cAAI,UAAU;AACb,+BAAmB,IAAI,QAAQ;AAAA,UAChC;AACA,cAAI,UAAU;AACb,+BAAmB,IAAI,QAAQ;AAAA,UAChC;AAAA,QACD,SAAS,GAAG;AAEX,kBAAQ,MAAM,CAAC;AACf,4BAAkB,CAAC;AACnB,iBAAO;AAAA,QACR;AAEA,cAAM,MAAO,EAAE,eAAe,EAAE;AAChC,cAAMC,UAAmD;AAAA,UACxD,qBAAqB;AAAA,UACrB,UAAU,UAAU,OAAO;AAAA,UAC3B,UAAU,UAAU,OAAO;AAAA,UAC3B,aAAa,EAAE;AAAA,UACf,IAAI,UAAU;AACb,mBAAO;AAAA,cACN,GAAG;AAAA,gBACF,UAAU,OAAO,WAAW,KAAK;AAAA,cAClC;AAAA,cACA,GAAG;AAAA,gBACF,iCAAiC,SAAS,GAAG;AAAA,cAC9C;AAAA,YACD;AAAA,UACD;AAAA,UACA,oBAAoB,wBAAC,MACpB,KAAK,kCAAkC;AAAA,YACtC,CAAC,MAAM;AACN,kBACC,EAAE,qBAAqB,KAAK,QAAQ,KACpC,EAAE,qBAAqB,KAAK,YAAY,GACvC;AACD,kBAAE;AAAA,cACH;AAAA,YACD;AAAA,UACD,GAVmB;AAAA,QAWrB;AACA,eAAO,MAAM;AAAA,UACZ,WAAW;AAAA,YACVA;AAAA,YACA;AAAA,YACA;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,MACA,CAAC,MACA,KAAK,UAAU;AAAA,QACd,EAAE,aAAa,SAAS;AAAA,QACxB,EAAE,aAAa,SAAS;AAAA,MACzB,CAAC;AAAA,IACH;AAEA,UAAM,YAAY,gBAEhB,aAAa,SAAS;AAExB,UAAM,kBAAkB,QAAQ,OAAO,WAAW;AAEjD,YAAM,eAAe,sBAAsB,KAAK,MAAM;AACtD,YAAM,OAAO,MAAM,QAAQ,IAAI,YAAY;AAC3C,YAAM,eAAe,KAAK,OAAO,SAAS;AAC1C,gBAAU,IAAI,cAAc,MAAS;AAAA,IACtC,CAAC;AAED,UAAM,IAAI,8BAA8B,eAAe;AACvD,UAAM,gBAAgB,IAAI;AAE1B,UAAM,SAA8C;AAAA,MACnD,SAAS,6BAAM,EAAE,QAAQ,GAAhB;AAAA,MACT,WAAW,IAAI,mCAAmC,SAAS;AAAA,MAC3D,aAAa,OAAO,QAAQ;AAAA,IAC7B;AACA,WAAO;AAAA,EACR;AAAA,EAEiB,kBAAkB,IAAI,sBAAsB,YAAY;AACxE,UAAM,SAA+C,KACnD,mBACC,EAAE,WAAW,qBAAqB,MAAM,KAAK,gBAAgB,EAAE,IAC/D,MAAM,KAAK,gCAAgC;AAAA,MAC3C,KAAK;AAAA,IACN;AACF,WAAO;AAAA,MACN;AAAA,MACA,WAAW,SACR,mCAAmC,MAAM,OAAO,SAAS,IACzD,gBAAgB,CAAC,CAAC;AAAA,IACtB;AAAA,EACD,CAAC;AAAA,EAEQ,QAAQ,YAAwD;AACxE,QAAI,MAAM,QAAQ,UAAU,GAAG;AAC9B,aAAO;AAAA,IACR;AAEA,QAAI,sBAAsB,sBAAsB;AAC/C,aACC,KAAK,gBAAgB,SAAS,MAC9B,WAAW,gBAAgB,SAAS;AAAA,IAEtC;AAEA,WAAO;AAAA,EACR;AAAA,EAEgB,YAAY;AAAA,IAAQ;AAAA,IAAM,CAAC,WAC1C,KAAK,gBAAgB,oBACnB,KAAK,MAAM,GACV,MAAM,UAAU,KAAK,MAAM;AAAA,EAC/B;AAAA,EAEiB,6BAA6B,IAAI;AAAA,IAIjD,KAAK,iBAAiB,MAAM;AAAA,IAC5B,CAAC,SAAS,KAAK,SAAS,SAAS;AAAA,IACjC,CAAC,QAAQ,IAAI,SAAS;AAAA,EACvB;AAAA,EAEiB,sBAAsB;AAAA,IACtC;AAAA,IACA,KAAK,UAAU,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC;AAAA,IACjC,CAAC,QAAQ;AACR,YAAM,kBAAkB,IAAI,cACzB;AAAA,QACA,KAAK;AAAA,QACL,KAAK;AAAA,QACL,IAAI;AAAA,MACL,IACC,gBAAgB,KAAK;AACxB,YAAM,kBAAkB,IAAI,cACzB;AAAA,QACA,KAAK;AAAA,QACL,KAAK;AAAA,QACL,IAAI;AAAA,MACL,IACC,gBAAgB,KAAK;AACxB,aAAO;AAAA,QACN,CAAC;AAAA;AAAA,UACiD,gBAAgB;AAAA,YAChE;AAAA,UACD,KAAK,gBAAgB,KAAK,MAAM;AAAA;AAAA,MAClC;AAAA,IACD;AAAA,IACA,CAAC,MAAM,EAAE,OAAO;AAAA,EACjB;AAAA,EACiB,qBAAqB;AAAA,IAAQ;AAAA,IAAM,CAAC,WACpD,KAAK,oBACH,KAAK,MAAM,EACX,KAAK,CAAC,YAAY,QAAQ,KAAK,MAAM,CAAC;AAAA,EACzC,EAAE,aAAa,KAAK,MAAM;AAAA,EAER,mBAAmB,MAAM;AAAA,IAC1C,KAAK;AAAA,EACN;AAAA,EACS,UAAU;AAClB,WAAO,KAAK,mBAAmB,IAAI;AAAA,EACpC;AAAA,EAEA,MAAe,KACd,OACA,SACuB;AACvB,UAAM,KAAK,eAAe,QAAQ,OAAO,OAAO;AAChD,WAAO;AAAA,EACR;AAAA,EAES,OACR,OACA,SACgB;AAChB,WAAO,KAAK,eAAe,UAAU,OAAO,OAAO;AAAA,EACpD;AAAA,EAYA,MAAc,eACb,MACA,OACA,SACgB;AAChB,UAAM,QAAQ,KAAK,WAAW,cAAc,MAAM,IAAI;AACtD,QAAI,OAAO;AACV,YAAM,QAAQ;AAAA,QACb,MAAM,IAAI,OAAO,SAAS;AACzB,gBAAM,QAAQ,KAAK,oBAAoB;AACvC,gBAAM,iBACL,MAAM,SAAS,IAAI,WAAW,QAAQ,YACtC,KAAK,iBAAiB,QAAQ,MAAM,SAAS,GAAG;AAEjD,gBAAM,QAAQ,IAAI;AAAA,YACjB,iBACG,SAAS,SACR,KAAK,iBAAiB;AAAA,cACtB,MAAM,SAAS;AAAA,cACf;AAAA,YACD,IACC,KAAK,iBAAiB;AAAA,cACtB,MAAM,SAAS;AAAA,cACf;AAAA,YACD,IACA,QAAQ,QAAQ;AAAA,YACnB,SAAS,SACN,KAAK,iBAAiB;AAAA,cACtB,MAAM,SAAS;AAAA,cACf;AAAA,YACD,IACC,KAAK,iBAAiB;AAAA,cACtB,MAAM,SAAS;AAAA,cACf;AAAA,YACD;AAAA,UACH,CAAC;AAAA,QACF,CAAC;AAAA,MACF;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EAEkB,eAAoC;AAAA;AAAA;AAAA;AAAA,IAKrD,MAAM,UAAU;AACf,aAAO,cAAc;AAAA,IACtB;AAAA,IACA,cAAc;AACb,aAAO;AAAA,IACR;AAAA,EACD;AACD;AA9aa,uBAAN;AAAA,EAyFJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GA7FU;AAwbb,MAAM,oBAA6B;AAAA,EAMlC,YACkB,QACA,kBACA,cAChB;AAHgB;AACA;AACA;AAAA,EACf;AAAA,EAxhBJ,OA8gBmC;AAAA;AAAA;AAAA,EAC1B,SAAS;AAAA,EACA,WAAW,oBAAI,IAAqC;AAAA,EAE7D;AAAA,EAQD,cACN,QAC2C;AAC3C,WAAO,CAAC,aAAa;AACpB,YAAM,MAAM,KAAK,aAAa,MAAM;AACpC,UAAI,SAAS,KAAK,SAAS,IAAI,GAAG;AAClC,UAAI,CAAC,QAAQ;AACZ,iBAAS,oBAAI,IAAI;AACjB,aAAK,SAAS,IAAI,KAAK,MAAM;AAAA,MAC9B;AACA,aAAO,IAAI,QAAQ;AAEnB,WAAK;AACL,UAAI,KAAK,WAAW,GAAG;AACtB,aAAK,qBAAqB,KAAK,OAAO,KAAK,kBAAkB;AAAA,MAC9D;AAEA,aAAO;AAAA,QACN,SAAS,6BAAM;AACd,iBAAQ,OAAO,QAAQ;AACvB,cAAI,OAAQ,SAAS,GAAG;AACvB,iBAAK,SAAS,OAAO,GAAG;AAAA,UACzB;AACA,eAAK;AAEL,cAAI,KAAK,WAAW,GAAG;AACtB,iBAAK,oBAAoB,QAAQ;AACjC,iBAAK,qBAAqB;AAAA,UAC3B;AAAA,QACD,GAXS;AAAA,MAYV;AAAA,IACD;AAAA,EACD;AAAA,EAEiB,qBAAqB,wBAAC,MAAS;AAC/C,UAAM,MAAM,KAAK,iBAAiB,CAAC;AACnC,UAAM,SAAS,KAAK,SAAS,IAAI,GAAG;AACpC,QAAI,QAAQ;AACX,iBAAW,YAAY,QAAQ;AAC9B,iBAAS,CAAC;AAAA,MACX;AAAA,IACD;AAAA,EACD,GARsC;AASvC;AAEA,SAAS,WACR,kBACA,iBACA,KACC;AACD,SAAO;AAAA,IAAoB,iBAAiB,cAAc,GAAG;AAAA,IAAG,MAC/D,gBAAgB,QAAQ,GAAG;AAAA,EAC5B;AACD;AARS;AAUT,SAAS,yBACR,YACsE;AACtE,SAAO;AAAA,IACN,UAAU,CAAC,CAAC;AAAA,IACZ,iBACC,OAAO,eAAe,YAAY,aAAa;AAAA,EACjD;AACD;AARS;AAUT,SAAS,eACR,eACqB;AACrB,QAAM,sBAAsB,UAAU,cAAc,MAAM;AAG1D,MAAI,SAAS,cAAc,UAAU,GAAG;AACvC,UAAM,0BAA8C;AAAA,MACnD,cAAc;AAAA,IACf;AAGA,4BAAwB,eAAe,wBAAwB;AAC/D,WAAO,wBAAwB;AAG/B,4BAAwB,eAEvB,wBAAwB;AACzB,WAAO,wBAAwB;AAE/B,WAAO,OAAO,qBAAqB,uBAAuB;AAAA,EAC3D;AACA,SAAO;AACR;AAxBS;AA0BF,IAAM,sCAAN,cAAkD,WAAW;AAAA,EArnBpE,OAqnBoE;AAAA;AAAA;AAAA,EACnE,OAAgB,KAAK;AAAA,EAErB,YACyB,uBACD,sBACtB;AACD,UAAM;AAEN,SAAK;AAAA,MACJ,sBAAsB;AAAA,QACrB;AAAA,QACA;AAAA,UACC,IAAI,2BAA2B;AAAA,UAC/B,OAAO,2BAA2B;AAAA,UAClC,QAAQ,2BAA2B;AAAA,UACnC,UAAU,yBAAyB;AAAA,QACpC;AAAA,QACA,CAAC;AAAA,QACD;AAAA,UACC,4BAA4B,wBAC3B,oBAC4B;AAC5B,mBAAO;AAAA,cACN,QAAQ,qBAAqB;AAAA,gBAC5B;AAAA,gBACA;AAAA,cACD;AAAA,YACD;AAAA,UACD,GAT4B;AAAA,QAU7B;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAlCa,sCAAN;AAAA,EAIJ;AAAA,EACA;AAAA,GALU;AAgDN,MAAM,0BAAuD;AAAA,EArqBpE,OAqqBoE;AAAA;AAAA;AAAA,EACnE,aAAa,QAAqD;AACjE,WAAO,kBAAkB,wBAAwB,CAAC,OAAO;AAAA,EAC1D;AAAA,EAEA,UAAU,QAAkD;AAC3D,QAAI,CAAC,KAAK,aAAa,MAAM,GAAG;AAC/B,aAAO;AAAA,IACR;AAEA,WAAO,KAAK,UAAU,OAAO,UAAU,CAAC;AAAA,EACzC;AAAA,EAEA,YACC,sBACA,kBAC0B;AAC1B,QAAI;AACH,YAAM,OAAO;AAAA,QACZ;AAAA,MACD;AACA,aAAO,qBAAqB;AAAA,QAC3B;AAAA,QACA;AAAA,MACD;AAAA,IACD,SAAS,KAAK;AACb,wBAAkB,GAAG;AACrB,aAAO;AAAA,IACR;AAAA,EACD;AACD;",
  "names": ["label", "result"]
}
