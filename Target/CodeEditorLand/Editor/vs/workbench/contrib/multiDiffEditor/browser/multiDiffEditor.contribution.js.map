{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/multiDiffEditor/browser/multiDiffEditor.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../../nls.js';\nimport { registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { Extensions, IConfigurationRegistry } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { SyncDescriptor } from '../../../../platform/instantiation/common/descriptors.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { EditorPaneDescriptor, IEditorPaneRegistry } from '../../../browser/editor.js';\nimport { WorkbenchPhase, registerWorkbenchContribution2 } from '../../../common/contributions.js';\nimport { EditorExtensions, IEditorFactoryRegistry } from '../../../common/editor.js';\nimport { MultiDiffEditor } from './multiDiffEditor.js';\nimport { MultiDiffEditorInput, MultiDiffEditorResolverContribution, MultiDiffEditorSerializer } from './multiDiffEditorInput.js';\nimport { CollapseAllAction, ExpandAllAction, GoToFileAction } from './actions.js';\nimport { IMultiDiffSourceResolverService, MultiDiffSourceResolverService } from './multiDiffSourceResolverService.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { OpenScmGroupAction, ScmMultiDiffSourceResolverContribution } from './scmMultiDiffSourceResolver.js';\n\nregisterAction2(GoToFileAction);\nregisterAction2(CollapseAllAction);\nregisterAction2(ExpandAllAction);\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration)\n\t.registerConfiguration({\n\t\tproperties: {\n\t\t\t'multiDiffEditor.experimental.enabled': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: 'Enable experimental multi diff editor.',\n\t\t\t},\n\t\t}\n\t});\n\nregisterSingleton(IMultiDiffSourceResolverService, MultiDiffSourceResolverService, InstantiationType.Delayed);\n\n// Editor Integration\nregisterWorkbenchContribution2(MultiDiffEditorResolverContribution.ID, MultiDiffEditorResolverContribution, WorkbenchPhase.BlockStartup /* only registering an editor resolver */);\n\nRegistry.as<IEditorPaneRegistry>(EditorExtensions.EditorPane)\n\t.registerEditorPane(\n\t\tEditorPaneDescriptor.create(MultiDiffEditor, MultiDiffEditor.ID, localize('name', \"Multi Diff Editor\")),\n\t\t[new SyncDescriptor(MultiDiffEditorInput)]\n\t);\n\nRegistry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory)\n\t.registerEditorSerializer(MultiDiffEditorInput.ID, MultiDiffEditorSerializer);\n\n// SCM integration\nregisterAction2(OpenScmGroupAction);\nregisterWorkbenchContribution2(ScmMultiDiffSourceResolverContribution.ID, ScmMultiDiffSourceResolverContribution, WorkbenchPhase.BlockStartup /* only registering an editor resolver  */);\n"],
  "mappings": "AAKA,SAAS,gBAAgB;AACzB,SAAS,uBAAuB;AAChC,SAAS,YAAY,8BAA8B;AACnD,SAAS,sBAAsB;AAC/B,SAAS,gBAAgB;AACzB,SAAS,sBAAsB,2BAA2B;AAC1D,SAAS,gBAAgB,sCAAsC;AAC/D,SAAS,kBAAkB,8BAA8B;AACzD,SAAS,uBAAuB;AAChC,SAAS,sBAAsB,qCAAqC,iCAAiC;AACrG,SAAS,mBAAmB,iBAAiB,sBAAsB;AACnE,SAAS,iCAAiC,sCAAsC;AAChF,SAAS,mBAAmB,yBAAyB;AACrD,SAAS,oBAAoB,8CAA8C;AAE3E,gBAAgB,cAAc;AAC9B,gBAAgB,iBAAiB;AACjC,gBAAgB,eAAe;AAE/B,SAAS,GAA2B,WAAW,aAAa,EAC1D,sBAAsB;AAAA,EACtB,YAAY;AAAA,IACX,wCAAwC;AAAA,MACvC,MAAM;AAAA,MACN,SAAS;AAAA,MACT,aAAa;AAAA,IACd;AAAA,EACD;AACD,CAAC;AAEF,kBAAkB,iCAAiC,gCAAgC,kBAAkB,OAAO;AAG5G;AAAA,EAA+B,oCAAoC;AAAA,EAAI;AAAA,EAAqC,eAAe;AAAA;AAAsD;AAEjL,SAAS,GAAwB,iBAAiB,UAAU,EAC1D;AAAA,EACA,qBAAqB,OAAO,iBAAiB,gBAAgB,IAAI,SAAS,QAAQ,mBAAmB,CAAC;AAAA,EACtG,CAAC,IAAI,eAAe,oBAAoB,CAAC;AAC1C;AAED,SAAS,GAA2B,iBAAiB,aAAa,EAChE,yBAAyB,qBAAqB,IAAI,yBAAyB;AAG7E,gBAAgB,kBAAkB;AAClC;AAAA,EAA+B,uCAAuC;AAAA,EAAI;AAAA,EAAwC,eAAe;AAAA;AAAuD;",
  "names": []
}
