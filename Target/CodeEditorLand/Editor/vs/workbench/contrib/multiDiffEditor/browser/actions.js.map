{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/multiDiffEditor/browser/actions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Selection } from '../../../../editor/common/core/selection.js';\nimport { localize2 } from '../../../../nls.js';\nimport { Action2, MenuId } from '../../../../platform/actions/common/actions.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ITextEditorOptions, TextEditorSelectionRevealType } from '../../../../platform/editor/common/editor.js';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IListService } from '../../../../platform/list/browser/listService.js';\nimport { resolveCommandsContext } from '../../../browser/parts/editor/editorCommandsContext.js';\nimport { MultiDiffEditor } from './multiDiffEditor.js';\nimport { MultiDiffEditorInput } from './multiDiffEditorInput.js';\nimport { IEditorGroupsService } from '../../../services/editor/common/editorGroupsService.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { ActiveEditorContext } from '../../../common/contextkeys.js';\n\nexport class GoToFileAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'multiDiffEditor.goToFile',\n\t\t\ttitle: localize2('goToFile', 'Open File'),\n\t\t\ticon: Codicon.goToFile,\n\t\t\tprecondition: ActiveEditorContext.isEqualTo(MultiDiffEditor.ID),\n\t\t\tmenu: {\n\t\t\t\twhen: ActiveEditorContext.isEqualTo(MultiDiffEditor.ID),\n\t\t\t\tid: MenuId.MultiDiffEditorFileToolbar,\n\t\t\t\torder: 22,\n\t\t\t\tgroup: 'navigation',\n\t\t\t},\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, ...args: any[]): Promise<void> {\n\t\tconst uri = args[0] as URI;\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst activeEditorPane = editorService.activeEditorPane;\n\t\tlet selections: Selection[] | undefined = undefined;\n\t\tif (!(activeEditorPane instanceof MultiDiffEditor)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = activeEditorPane.tryGetCodeEditor(uri);\n\t\tif (editor) {\n\t\t\tselections = editor.editor.getSelections() ?? undefined;\n\t\t}\n\n\t\tlet targetUri = uri;\n\t\tconst item = activeEditorPane.findDocumentDiffItem(uri);\n\t\tif (item && item.goToFileUri) {\n\t\t\ttargetUri = item.goToFileUri;\n\t\t}\n\n\t\tawait editorService.openEditor({\n\t\t\tresource: targetUri,\n\t\t\toptions: {\n\t\t\t\tselection: selections?.[0],\n\t\t\t\tselectionRevealType: TextEditorSelectionRevealType.CenterIfOutsideViewport,\n\t\t\t} satisfies ITextEditorOptions,\n\t\t});\n\t}\n}\n\nexport class CollapseAllAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'multiDiffEditor.collapseAll',\n\t\t\ttitle: localize2('collapseAllDiffs', 'Collapse All Diffs'),\n\t\t\ticon: Codicon.collapseAll,\n\t\t\tprecondition: ContextKeyExpr.and(ContextKeyExpr.equals('activeEditor', MultiDiffEditor.ID), ContextKeyExpr.not('multiDiffEditorAllCollapsed')),\n\t\t\tmenu: {\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('activeEditor', MultiDiffEditor.ID), ContextKeyExpr.not('multiDiffEditorAllCollapsed')),\n\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 100\n\t\t\t},\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, ...args: unknown[]): Promise<void> {\n\t\tconst resolvedContext = resolveCommandsContext(args, accessor.get(IEditorService), accessor.get(IEditorGroupsService), accessor.get(IListService));\n\n\t\tconst groupContext = resolvedContext.groupedEditors[0];\n\t\tif (!groupContext) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = groupContext.editors[0];\n\t\tif (editor instanceof MultiDiffEditorInput) {\n\t\t\tconst viewModel = await editor.getViewModel();\n\t\t\tviewModel.collapseAll();\n\t\t}\n\t}\n}\n\nexport class ExpandAllAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'multiDiffEditor.expandAll',\n\t\t\ttitle: localize2('ExpandAllDiffs', 'Expand All Diffs'),\n\t\t\ticon: Codicon.expandAll,\n\t\t\tprecondition: ContextKeyExpr.and(ContextKeyExpr.equals('activeEditor', MultiDiffEditor.ID), ContextKeyExpr.has('multiDiffEditorAllCollapsed')),\n\t\t\tmenu: {\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('activeEditor', MultiDiffEditor.ID), ContextKeyExpr.has('multiDiffEditorAllCollapsed')),\n\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 100\n\t\t\t},\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, ...args: unknown[]): Promise<void> {\n\t\tconst resolvedContext = resolveCommandsContext(args, accessor.get(IEditorService), accessor.get(IEditorGroupsService), accessor.get(IListService));\n\n\t\tconst groupContext = resolvedContext.groupedEditors[0];\n\t\tif (!groupContext) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = groupContext.editors[0];\n\t\tif (editor instanceof MultiDiffEditorInput) {\n\t\t\tconst viewModel = await editor.getViewModel();\n\t\t\tviewModel.expandAll();\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
