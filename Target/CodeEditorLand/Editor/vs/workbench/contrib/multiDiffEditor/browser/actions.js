import{Codicon as c}from"../../../../base/common/codicons.js";import{localize2 as a}from"../../../../nls.js";import{Action2 as f,MenuId as p}from"../../../../platform/actions/common/actions.js";import{ContextKeyExpr as o}from"../../../../platform/contextkey/common/contextkey.js";import{TextEditorSelectionRevealType as I}from"../../../../platform/editor/common/editor.js";import{IListService as g}from"../../../../platform/list/browser/listService.js";import{resolveCommandsContext as x}from"../../../browser/parts/editor/editorCommandsContext.js";import{ActiveEditorContext as A}from"../../../common/contextkeys.js";import{IEditorGroupsService as D}from"../../../services/editor/common/editorGroupsService.js";import{IEditorService as m}from"../../../services/editor/common/editorService.js";import{MultiDiffEditor as r}from"./multiDiffEditor.js";import{MultiDiffEditorInput as C}from"./multiDiffEditorInput.js";class j extends f{constructor(){super({id:"multiDiffEditor.goToFile",title:a("goToFile","Open File"),icon:c.goToFile,precondition:A.isEqualTo(r.ID),menu:{when:A.isEqualTo(r.ID),id:p.MultiDiffEditorFileToolbar,order:22,group:"navigation"}})}async run(e,...n){const l=n[0],i=e.get(m),t=i.activeEditorPane;let s;if(!(t instanceof r))return;const E=t.tryGetCodeEditor(l);E&&(s=E.editor.getSelections()??void 0);let v=l;const d=t.findDocumentDiffItem(l);d&&d.goToFileUri&&(v=d.goToFileUri),await i.openEditor({resource:v,options:{selection:s?.[0],selectionRevealType:I.CenterIfOutsideViewport}})}}class G extends f{constructor(){super({id:"multiDiffEditor.collapseAll",title:a("collapseAllDiffs","Collapse All Diffs"),icon:c.collapseAll,precondition:o.and(o.equals("activeEditor",r.ID),o.not("multiDiffEditorAllCollapsed")),menu:{when:o.and(o.equals("activeEditor",r.ID),o.not("multiDiffEditorAllCollapsed")),id:p.EditorTitle,group:"navigation",order:100},f1:!0})}async run(e,...n){const i=x(n,e.get(m),e.get(D),e.get(g)).groupedEditors[0];if(!i)return;const t=i.editors[0];t instanceof C&&(await t.getViewModel()).collapseAll()}}class V extends f{constructor(){super({id:"multiDiffEditor.expandAll",title:a("ExpandAllDiffs","Expand All Diffs"),icon:c.expandAll,precondition:o.and(o.equals("activeEditor",r.ID),o.has("multiDiffEditorAllCollapsed")),menu:{when:o.and(o.equals("activeEditor",r.ID),o.has("multiDiffEditorAllCollapsed")),id:p.EditorTitle,group:"navigation",order:100},f1:!0})}async run(e,...n){const i=x(n,e.get(m),e.get(D),e.get(g)).groupedEditors[0];if(!i)return;const t=i.editors[0];t instanceof C&&(await t.getViewModel()).expandAll()}}export{G as CollapseAllAction,V as ExpandAllAction,j as GoToFileAction};
