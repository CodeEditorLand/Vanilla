var b=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var l=(v,n,e,i)=>{for(var t=i>1?void 0:i?u(n,e):n,r=v.length-1,s;r>=0;r--)(s=v[r])&&(t=(i?s(n,e,t):s(t))||t);return i&&t&&b(n,e,t),t},o=(v,n)=>(e,i)=>n(e,i,v);import*as p from"../../../../base/browser/dom.js";import"../../../../base/common/cancellation.js";import{Emitter as _,Event as f}from"../../../../base/common/event.js";import{DisposableStore as w,MutableDisposable as h}from"../../../../base/common/lifecycle.js";import{isWeb as y}from"../../../../base/common/platform.js";import{generateUuid as I}from"../../../../base/common/uuid.js";import*as D from"../../../../nls.js";import{IContextKeyService as S,RawContextKey as E}from"../../../../platform/contextkey/common/contextkey.js";import"../../../../platform/editor/common/editor.js";import{IStorageService as C}from"../../../../platform/storage/common/storage.js";import{ITelemetryService as W}from"../../../../platform/telemetry/common/telemetry.js";import{IThemeService as g}from"../../../../platform/theme/common/themeService.js";import{EditorPane as T}from"../../../browser/parts/editor/editorPane.js";import"../../../common/editor.js";import"../../../common/editor/editorInput.js";import{IEditorGroupsService as x}from"../../../services/editor/common/editorGroupsService.js";import{IEditorService as F}from"../../../services/editor/common/editorService.js";import{IHostService as O}from"../../../services/host/browser/host.js";import{IWorkbenchLayoutService as K,Parts as m}from"../../../services/layout/browser/layoutService.js";import"../../webview/browser/webview.js";import{WebviewWindowDragMonitor as k}from"../../webview/browser/webviewWindowDragMonitor.js";import{WebviewInput as d}from"./webviewEditorInput.js";const we=new E("activeWebviewPanelId","",{type:"string",description:D.localize("context.activeWebviewId","The viewType of the currently active webview panel.")});let a=class extends T{constructor(e,i,t,r,s,G,P,V,M){super(a.ID,e,i,t,r);this._editorGroupsService=s;this._editorService=G;this._workbenchLayoutService=P;this._hostService=V;this._contextKeyService=M;const c=s.getPart(e);this._register(f.any(c.onDidScroll,c.onDidAddGroup,c.onDidRemoveGroup,c.onDidMoveGroup)(()=>{this.webview&&this._visible&&this.synchronizeWebviewContainerDimensions(this.webview)}))}static ID="WebviewEditor";_element;_dimension;_visible=!1;_isDisposed=!1;_webviewVisibleDisposables=this._register(new w);_onFocusWindowHandler=this._register(new h);_onDidFocusWebview=this._register(new _);get onDidFocus(){return this._onDidFocusWebview.event}_scopedContextKeyService=this._register(new h);get webview(){return this.input instanceof d?this.input.webview:void 0}get scopedContextKeyService(){return this._scopedContextKeyService.value}createEditor(e){const i=document.createElement("div");this._element=i,this._element.id=`webview-editor-element-${I()}`,e.appendChild(i),this._scopedContextKeyService.value=this._register(this._contextKeyService.createScoped(i))}dispose(){this._isDisposed=!0,this._element?.remove(),this._element=void 0,super.dispose()}layout(e){this._dimension=e,this.webview&&this._visible&&this.synchronizeWebviewContainerDimensions(this.webview,e)}focus(){super.focus(),!this._onFocusWindowHandler.value&&!y&&(this._onFocusWindowHandler.value=this._hostService.onDidChangeFocus(e=>{e&&this._editorService.activeEditorPane===this&&this._workbenchLayoutService.hasFocus(m.EDITOR_PART)&&this.focus()})),this.webview?.focus()}setEditorVisible(e){this._visible=e,this.input instanceof d&&this.webview&&(e?this.claimWebview(this.input):this.webview.release(this)),super.setEditorVisible(e)}clearInput(){this.webview&&(this.webview.release(this),this._webviewVisibleDisposables.clear()),super.clearInput()}async setInput(e,i,t,r){if(this.input&&e.matches(this.input))return;const s=e instanceof d&&e.webview===this.webview;this.webview&&!s&&this.webview.release(this),await super.setInput(e,i,t,r),await e.resolve(),!(r.isCancellationRequested||this._isDisposed)&&e instanceof d&&(e.updateGroup(this.group.id),s||this.claimWebview(e),this._dimension&&this.layout(this._dimension))}claimWebview(e){e.claim(this,this.window,this.scopedContextKeyService),this._element&&(this._element.setAttribute("aria-flowto",e.webview.container.id),p.setParentFlowTo(e.webview.container,this._element)),this._webviewVisibleDisposables.clear(),this._webviewVisibleDisposables.add(this._editorGroupsService.createEditorDropTarget(e.webview.container,{containsGroup:i=>this.group.id===i.id})),this._webviewVisibleDisposables.add(new k(this.window,()=>this.webview)),this.synchronizeWebviewContainerDimensions(e.webview),this._webviewVisibleDisposables.add(this.trackFocus(e.webview))}synchronizeWebviewContainerDimensions(e,i){if(!this._element?.isConnected)return;const t=this._workbenchLayoutService.getContainer(this.window,m.EDITOR_PART);e.layoutWebviewOverElement(this._element.parentElement,i,t)}trackFocus(e){const i=new w,t=p.trackFocus(e.container);return i.add(t),i.add(t.onDidFocus(()=>this._onDidFocusWebview.fire())),i.add(e.onDidFocus(()=>this._onDidFocusWebview.fire())),i}};a=l([o(1,W),o(2,g),o(3,C),o(4,x),o(5,F),o(6,K),o(7,O),o(8,S)],a);export{we as CONTEXT_ACTIVE_WEBVIEW_PANEL_ID,a as WebviewEditor};
