{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/webviewPanel/browser/webviewCommands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { EditorContextKeys } from '../../../../editor/common/editorContextKeys.js';\nimport * as nls from '../../../../nls.js';\nimport { Action2, MenuId } from '../../../../platform/actions/common/actions.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { Categories } from '../../../../platform/action/common/actionCommonCategories.js';\nimport { IWebviewService, KEYBINDING_CONTEXT_WEBVIEW_FIND_WIDGET_ENABLED, KEYBINDING_CONTEXT_WEBVIEW_FIND_WIDGET_FOCUSED, KEYBINDING_CONTEXT_WEBVIEW_FIND_WIDGET_VISIBLE, IWebview } from '../../webview/browser/webview.js';\nimport { WebviewEditor } from './webviewEditor.js';\nimport { WebviewInput } from './webviewEditorInput.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\n\nconst webviewActiveContextKeyExpr = ContextKeyExpr.and(ContextKeyExpr.equals('activeEditor', WebviewEditor.ID), EditorContextKeys.focus.toNegated() /* https://github.com/microsoft/vscode/issues/58668 */)!;\n\nexport class ShowWebViewEditorFindWidgetAction extends Action2 {\n\tpublic static readonly ID = 'editor.action.webvieweditor.showFind';\n\tpublic static readonly LABEL = nls.localize('editor.action.webvieweditor.showFind', \"Show find\");\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ShowWebViewEditorFindWidgetAction.ID,\n\t\t\ttitle: ShowWebViewEditorFindWidgetAction.LABEL,\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.and(webviewActiveContextKeyExpr, KEYBINDING_CONTEXT_WEBVIEW_FIND_WIDGET_ENABLED),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyF,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor): void {\n\t\tgetActiveWebviewEditor(accessor)?.showFind();\n\t}\n}\n\nexport class HideWebViewEditorFindCommand extends Action2 {\n\tpublic static readonly ID = 'editor.action.webvieweditor.hideFind';\n\tpublic static readonly LABEL = nls.localize('editor.action.webvieweditor.hideFind', \"Stop find\");\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: HideWebViewEditorFindCommand.ID,\n\t\t\ttitle: HideWebViewEditorFindCommand.LABEL,\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.and(webviewActiveContextKeyExpr, KEYBINDING_CONTEXT_WEBVIEW_FIND_WIDGET_VISIBLE),\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor): void {\n\t\tgetActiveWebviewEditor(accessor)?.hideFind();\n\t}\n}\n\nexport class WebViewEditorFindNextCommand extends Action2 {\n\tpublic static readonly ID = 'editor.action.webvieweditor.findNext';\n\tpublic static readonly LABEL = nls.localize('editor.action.webvieweditor.findNext', 'Find next');\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: WebViewEditorFindNextCommand.ID,\n\t\t\ttitle: WebViewEditorFindNextCommand.LABEL,\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.and(webviewActiveContextKeyExpr, KEYBINDING_CONTEXT_WEBVIEW_FIND_WIDGET_FOCUSED),\n\t\t\t\tprimary: KeyCode.Enter,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor): void {\n\t\tgetActiveWebviewEditor(accessor)?.runFindAction(false);\n\t}\n}\n\nexport class WebViewEditorFindPreviousCommand extends Action2 {\n\tpublic static readonly ID = 'editor.action.webvieweditor.findPrevious';\n\tpublic static readonly LABEL = nls.localize('editor.action.webvieweditor.findPrevious', 'Find previous');\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: WebViewEditorFindPreviousCommand.ID,\n\t\t\ttitle: WebViewEditorFindPreviousCommand.LABEL,\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.and(webviewActiveContextKeyExpr, KEYBINDING_CONTEXT_WEBVIEW_FIND_WIDGET_FOCUSED),\n\t\t\t\tprimary: KeyMod.Shift | KeyCode.Enter,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor): void {\n\t\tgetActiveWebviewEditor(accessor)?.runFindAction(true);\n\t}\n}\n\nexport class ReloadWebviewAction extends Action2 {\n\tstatic readonly ID = 'workbench.action.webview.reloadWebviewAction';\n\tstatic readonly LABEL = nls.localize2('refreshWebviewLabel', \"Reload Webviews\");\n\n\tpublic constructor() {\n\t\tsuper({\n\t\t\tid: ReloadWebviewAction.ID,\n\t\t\ttitle: ReloadWebviewAction.LABEL,\n\t\t\tcategory: Categories.Developer,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.CommandPalette\n\t\t\t}]\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst webviewService = accessor.get(IWebviewService);\n\t\tfor (const webview of webviewService.webviews) {\n\t\t\twebview.reload();\n\t\t}\n\t}\n}\n\nfunction getActiveWebviewEditor(accessor: ServicesAccessor): IWebview | undefined {\n\tconst editorService = accessor.get(IEditorService);\n\tconst activeEditor = editorService.activeEditor;\n\treturn activeEditor instanceof WebviewInput ? activeEditor.webview : undefined;\n}\n"],
  "mappings": "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",
  "names": []
}
