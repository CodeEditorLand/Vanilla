{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/webviewPanel/browser/webviewEditorInputSerializer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from '../../../../base/common/uri.js';\nimport { ExtensionIdentifier } from '../../../../platform/extensions/common/extensions.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IEditorSerializer } from '../../../common/editor.js';\nimport { WebviewContentOptions, WebviewExtensionDescription, WebviewOptions } from '../../webview/browser/webview.js';\nimport { WebviewIcons } from './webviewIconManager.js';\nimport { WebviewInput } from './webviewEditorInput.js';\nimport { IWebviewWorkbenchService } from './webviewWorkbenchService.js';\n\nexport type SerializedWebviewOptions = WebviewOptions & WebviewContentOptions;\n\ninterface SerializedIconPath {\n\tlight: string | UriComponents;\n\tdark: string | UriComponents;\n}\n\nexport interface SerializedWebview {\n\treadonly origin: string | undefined;\n\treadonly viewType: string;\n\treadonly providedId: string | undefined;\n\treadonly title: string;\n\treadonly options: SerializedWebviewOptions;\n\treadonly extensionLocation: UriComponents | undefined;\n\treadonly extensionId: string | undefined;\n\treadonly state: any;\n\treadonly iconPath: SerializedIconPath | undefined;\n\treadonly group?: number;\n}\n\nexport interface DeserializedWebview {\n\treadonly origin: string | undefined;\n\treadonly viewType: string;\n\treadonly providedId: string | undefined;\n\treadonly title: string;\n\treadonly webviewOptions: WebviewOptions;\n\treadonly contentOptions: WebviewContentOptions;\n\treadonly extension: WebviewExtensionDescription | undefined;\n\treadonly state: any;\n\treadonly iconPath: WebviewIcons | undefined;\n\treadonly group?: number;\n}\n\nexport class WebviewEditorInputSerializer implements IEditorSerializer {\n\n\tpublic static readonly ID = WebviewInput.typeId;\n\n\tpublic constructor(\n\t\t@IWebviewWorkbenchService private readonly _webviewWorkbenchService: IWebviewWorkbenchService\n\t) { }\n\n\tpublic canSerialize(input: WebviewInput): boolean {\n\t\treturn this._webviewWorkbenchService.shouldPersist(input);\n\t}\n\n\tpublic serialize(input: WebviewInput): string | undefined {\n\t\tif (!this.canSerialize(input)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst data = this.toJson(input);\n\t\ttry {\n\t\t\treturn JSON.stringify(data);\n\t\t} catch {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tpublic deserialize(\n\t\t_instantiationService: IInstantiationService,\n\t\tserializedEditorInput: string\n\t): WebviewInput {\n\t\tconst data = this.fromJson(JSON.parse(serializedEditorInput));\n\t\treturn this._webviewWorkbenchService.openRevivedWebview({\n\t\t\twebviewInitInfo: {\n\t\t\t\tprovidedViewType: data.providedId,\n\t\t\t\torigin: data.origin,\n\t\t\t\ttitle: data.title,\n\t\t\t\toptions: data.webviewOptions,\n\t\t\t\tcontentOptions: data.contentOptions,\n\t\t\t\textension: data.extension,\n\t\t\t},\n\t\t\tviewType: data.viewType,\n\t\t\ttitle: data.title,\n\t\t\ticonPath: data.iconPath,\n\t\t\tstate: data.state,\n\t\t\tgroup: data.group\n\t\t});\n\t}\n\n\tprotected fromJson(data: SerializedWebview): DeserializedWebview {\n\t\treturn {\n\t\t\t...data,\n\t\t\textension: reviveWebviewExtensionDescription(data.extensionId, data.extensionLocation),\n\t\t\ticonPath: reviveIconPath(data.iconPath),\n\t\t\tstate: reviveState(data.state),\n\t\t\twebviewOptions: restoreWebviewOptions(data.options),\n\t\t\tcontentOptions: restoreWebviewContentOptions(data.options),\n\t\t};\n\t}\n\n\tprotected toJson(input: WebviewInput): SerializedWebview {\n\t\treturn {\n\t\t\torigin: input.webview.origin,\n\t\t\tviewType: input.viewType,\n\t\t\tprovidedId: input.providedId,\n\t\t\ttitle: input.getName(),\n\t\t\toptions: { ...input.webview.options, ...input.webview.contentOptions },\n\t\t\textensionLocation: input.extension?.location,\n\t\t\textensionId: input.extension?.id.value,\n\t\t\tstate: input.webview.state,\n\t\t\ticonPath: input.iconPath ? { light: input.iconPath.light, dark: input.iconPath.dark, } : undefined,\n\t\t\tgroup: input.group\n\t\t};\n\t}\n}\n\nexport function reviveWebviewExtensionDescription(\n\textensionId: string | undefined,\n\textensionLocation: UriComponents | undefined,\n): WebviewExtensionDescription | undefined {\n\tif (!extensionId) {\n\t\treturn undefined;\n\t}\n\n\tconst location = reviveUri(extensionLocation);\n\tif (!location) {\n\t\treturn undefined;\n\t}\n\n\treturn {\n\t\tid: new ExtensionIdentifier(extensionId),\n\t\tlocation,\n\t};\n}\n\nfunction reviveIconPath(data: SerializedIconPath | undefined) {\n\tif (!data) {\n\t\treturn undefined;\n\t}\n\n\tconst light = reviveUri(data.light);\n\tconst dark = reviveUri(data.dark);\n\treturn light && dark ? { light, dark } : undefined;\n}\n\nfunction reviveUri(data: string | UriComponents): URI;\nfunction reviveUri(data: string | UriComponents | undefined): URI | undefined;\nfunction reviveUri(data: string | UriComponents | undefined): URI | undefined {\n\tif (!data) {\n\t\treturn undefined;\n\t}\n\n\ttry {\n\t\tif (typeof data === 'string') {\n\t\t\treturn URI.parse(data);\n\t\t}\n\t\treturn URI.from(data);\n\t} catch {\n\t\treturn undefined;\n\t}\n}\n\nfunction reviveState(state: unknown | undefined): undefined | string {\n\treturn typeof state === 'string' ? state : undefined;\n}\n\nexport function restoreWebviewOptions(options: SerializedWebviewOptions): WebviewOptions {\n\treturn options;\n}\n\nexport function restoreWebviewContentOptions(options: SerializedWebviewOptions): WebviewContentOptions {\n\treturn {\n\t\t...options,\n\t\tlocalResourceRoots: options.localResourceRoots?.map(uri => reviveUri(uri)),\n\t};\n}\n"],
  "mappings": "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",
  "names": []
}
