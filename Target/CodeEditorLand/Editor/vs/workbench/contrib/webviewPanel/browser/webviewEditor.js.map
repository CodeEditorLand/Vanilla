{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/webviewPanel/browser/webviewEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from \"../../../../base/browser/dom.js\";\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n\tMutableDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { isWeb } from \"../../../../base/common/platform.js\";\nimport { generateUuid } from \"../../../../base/common/uuid.js\";\nimport * as nls from \"../../../../nls.js\";\nimport {\n\tIContextKeyService,\n\ttype IScopedContextKeyService,\n\tRawContextKey,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport type { IEditorOptions } from \"../../../../platform/editor/common/editor.js\";\nimport { IStorageService } from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport { EditorPane } from \"../../../browser/parts/editor/editorPane.js\";\nimport type { IEditorOpenContext } from \"../../../common/editor.js\";\nimport type { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport {\n\ttype IEditorGroup,\n\tIEditorGroupsService,\n} from \"../../../services/editor/common/editorGroupsService.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { IHostService } from \"../../../services/host/browser/host.js\";\nimport {\n\tIWorkbenchLayoutService,\n\tParts,\n} from \"../../../services/layout/browser/layoutService.js\";\nimport type { IOverlayWebview } from \"../../webview/browser/webview.js\";\nimport { WebviewWindowDragMonitor } from \"../../webview/browser/webviewWindowDragMonitor.js\";\nimport { WebviewInput } from \"./webviewEditorInput.js\";\n\n/**\n * Tracks the id of the actively focused webview.\n */\nexport const CONTEXT_ACTIVE_WEBVIEW_PANEL_ID = new RawContextKey<string>(\n\t\"activeWebviewPanelId\",\n\t\"\",\n\t{\n\t\ttype: \"string\",\n\t\tdescription: nls.localize(\n\t\t\t\"context.activeWebviewId\",\n\t\t\t\"The viewType of the currently active webview panel.\",\n\t\t),\n\t},\n);\n\nexport class WebviewEditor extends EditorPane {\n\tpublic static readonly ID = \"WebviewEditor\";\n\n\tprivate _element?: HTMLElement;\n\tprivate _dimension?: DOM.Dimension;\n\tprivate _visible = false;\n\tprivate _isDisposed = false;\n\n\tprivate readonly _webviewVisibleDisposables = this._register(\n\t\tnew DisposableStore(),\n\t);\n\tprivate readonly _onFocusWindowHandler = this._register(\n\t\tnew MutableDisposable(),\n\t);\n\n\tprivate readonly _onDidFocusWebview = this._register(new Emitter<void>());\n\tpublic override get onDidFocus(): Event<any> {\n\t\treturn this._onDidFocusWebview.event;\n\t}\n\n\tprivate readonly _scopedContextKeyService = this._register(\n\t\tnew MutableDisposable<IScopedContextKeyService>(),\n\t);\n\n\tconstructor(\n\t\tgroup: IEditorGroup,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IEditorGroupsService\n\t\tprivate readonly _editorGroupsService: IEditorGroupsService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IWorkbenchLayoutService\n\t\tprivate readonly _workbenchLayoutService: IWorkbenchLayoutService,\n\t\t@IHostService private readonly _hostService: IHostService,\n\t\t@IContextKeyService\n\t\tprivate readonly _contextKeyService: IContextKeyService,\n\t) {\n\t\tsuper(\n\t\t\tWebviewEditor.ID,\n\t\t\tgroup,\n\t\t\ttelemetryService,\n\t\t\tthemeService,\n\t\t\tstorageService,\n\t\t);\n\n\t\tconst part = _editorGroupsService.getPart(group);\n\t\tthis._register(\n\t\t\tEvent.any(\n\t\t\t\tpart.onDidScroll,\n\t\t\t\tpart.onDidAddGroup,\n\t\t\t\tpart.onDidRemoveGroup,\n\t\t\t\tpart.onDidMoveGroup,\n\t\t\t)(() => {\n\t\t\t\tif (this.webview && this._visible) {\n\t\t\t\t\tthis.synchronizeWebviewContainerDimensions(this.webview);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate get webview(): IOverlayWebview | undefined {\n\t\treturn this.input instanceof WebviewInput\n\t\t\t? this.input.webview\n\t\t\t: undefined;\n\t}\n\n\toverride get scopedContextKeyService(): IContextKeyService | undefined {\n\t\treturn this._scopedContextKeyService.value;\n\t}\n\n\tprotected createEditor(parent: HTMLElement): void {\n\t\tconst element = document.createElement(\"div\");\n\t\tthis._element = element;\n\t\tthis._element.id = `webview-editor-element-${generateUuid()}`;\n\t\tparent.appendChild(element);\n\n\t\tthis._scopedContextKeyService.value = this._register(\n\t\t\tthis._contextKeyService.createScoped(element),\n\t\t);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._isDisposed = true;\n\n\t\tthis._element?.remove();\n\t\tthis._element = undefined;\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic override layout(dimension: DOM.Dimension): void {\n\t\tthis._dimension = dimension;\n\t\tif (this.webview && this._visible) {\n\t\t\tthis.synchronizeWebviewContainerDimensions(this.webview, dimension);\n\t\t}\n\t}\n\n\tpublic override focus(): void {\n\t\tsuper.focus();\n\t\tif (!this._onFocusWindowHandler.value && !isWeb) {\n\t\t\t// Make sure we restore focus when switching back to a VS Code window\n\t\t\tthis._onFocusWindowHandler.value =\n\t\t\t\tthis._hostService.onDidChangeFocus((focused) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tfocused &&\n\t\t\t\t\t\tthis._editorService.activeEditorPane === this &&\n\t\t\t\t\t\tthis._workbenchLayoutService.hasFocus(Parts.EDITOR_PART)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.focus();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t\tthis.webview?.focus();\n\t}\n\n\tprotected override setEditorVisible(visible: boolean): void {\n\t\tthis._visible = visible;\n\t\tif (this.input instanceof WebviewInput && this.webview) {\n\t\t\tif (visible) {\n\t\t\t\tthis.claimWebview(this.input);\n\t\t\t} else {\n\t\t\t\tthis.webview.release(this);\n\t\t\t}\n\t\t}\n\t\tsuper.setEditorVisible(visible);\n\t}\n\n\tpublic override clearInput() {\n\t\tif (this.webview) {\n\t\t\tthis.webview.release(this);\n\t\t\tthis._webviewVisibleDisposables.clear();\n\t\t}\n\n\t\tsuper.clearInput();\n\t}\n\n\tpublic override async setInput(\n\t\tinput: EditorInput,\n\t\toptions: IEditorOptions,\n\t\tcontext: IEditorOpenContext,\n\t\ttoken: CancellationToken,\n\t): Promise<void> {\n\t\tif (this.input && input.matches(this.input)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst alreadyOwnsWebview =\n\t\t\tinput instanceof WebviewInput && input.webview === this.webview;\n\t\tif (this.webview && !alreadyOwnsWebview) {\n\t\t\tthis.webview.release(this);\n\t\t}\n\n\t\tawait super.setInput(input, options, context, token);\n\t\tawait input.resolve();\n\n\t\tif (token.isCancellationRequested || this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (input instanceof WebviewInput) {\n\t\t\tinput.updateGroup(this.group.id);\n\n\t\t\tif (!alreadyOwnsWebview) {\n\t\t\t\tthis.claimWebview(input);\n\t\t\t}\n\t\t\tif (this._dimension) {\n\t\t\t\tthis.layout(this._dimension);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate claimWebview(input: WebviewInput): void {\n\t\tinput.claim(this, this.window, this.scopedContextKeyService);\n\n\t\tif (this._element) {\n\t\t\tthis._element.setAttribute(\n\t\t\t\t\"aria-flowto\",\n\t\t\t\tinput.webview.container.id,\n\t\t\t);\n\t\t\tDOM.setParentFlowTo(input.webview.container, this._element);\n\t\t}\n\n\t\tthis._webviewVisibleDisposables.clear();\n\n\t\t// Webviews are not part of the normal editor dom, so we have to register our own drag and drop handler on them.\n\t\tthis._webviewVisibleDisposables.add(\n\t\t\tthis._editorGroupsService.createEditorDropTarget(\n\t\t\t\tinput.webview.container,\n\t\t\t\t{\n\t\t\t\t\tcontainsGroup: (group) => this.group.id === group.id,\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis._webviewVisibleDisposables.add(\n\t\t\tnew WebviewWindowDragMonitor(this.window, () => this.webview),\n\t\t);\n\n\t\tthis.synchronizeWebviewContainerDimensions(input.webview);\n\t\tthis._webviewVisibleDisposables.add(this.trackFocus(input.webview));\n\t}\n\n\tprivate synchronizeWebviewContainerDimensions(\n\t\twebview: IOverlayWebview,\n\t\tdimension?: DOM.Dimension,\n\t) {\n\t\tif (!this._element?.isConnected) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst rootContainer = this._workbenchLayoutService.getContainer(\n\t\t\tthis.window,\n\t\t\tParts.EDITOR_PART,\n\t\t);\n\t\twebview.layoutWebviewOverElement(\n\t\t\tthis._element.parentElement!,\n\t\t\tdimension,\n\t\t\trootContainer,\n\t\t);\n\t}\n\n\tprivate trackFocus(webview: IOverlayWebview): IDisposable {\n\t\tconst store = new DisposableStore();\n\n\t\t// Track focus in webview content\n\t\tconst webviewContentFocusTracker = DOM.trackFocus(webview.container);\n\t\tstore.add(webviewContentFocusTracker);\n\t\tstore.add(\n\t\t\twebviewContentFocusTracker.onDidFocus(() =>\n\t\t\t\tthis._onDidFocusWebview.fire(),\n\t\t\t),\n\t\t);\n\n\t\t// Track focus in webview element\n\t\tstore.add(webview.onDidFocus(() => this._onDidFocusWebview.fire()));\n\n\t\treturn store;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
