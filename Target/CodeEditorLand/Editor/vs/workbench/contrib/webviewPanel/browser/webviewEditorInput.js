import{Schemas as o}from"../../../../base/common/network.js";import{URI as s}from"../../../../base/common/uri.js";import{generateUuid as d}from"../../../../base/common/uuid.js";import{EditorInputCapabilities as r}from"../../../common/editor.js";import{EditorInput as p}from"../../../common/editor/editorInput.js";class n extends p{constructor(e,i,t){super();this._iconManager=t;this.viewType=e.viewType,this.providedId=e.providedId,this._name=e.name,this._webview=i}static typeId="workbench.editors.webviewInput";get typeId(){return n.typeId}get editorId(){return this.viewType}get capabilities(){return r.Readonly|r.Singleton|r.CanDropIntoEditor}_resourceId=d();_name;_iconPath;_group;_webview;_hasTransfered=!1;get resource(){return s.from({scheme:o.webviewPanel,path:`webview-panel/webview-${this._resourceId}`})}viewType;providedId;dispose(){this.isDisposed()||this._hasTransfered||this._webview?.dispose(),super.dispose()}getName(){return this._name}getTitle(e){return this.getName()}getDescription(){}setName(e){this._name=e,this.webview.setTitle(e),this._onDidChangeLabel.fire()}get webview(){return this._webview}get extension(){return this.webview.extension}get iconPath(){return this._iconPath}set iconPath(e){this._iconPath=e,this._iconManager.setIcons(this._resourceId,e)}matches(e){return super.matches(e)||e===this}get group(){return this._group}updateGroup(e){this._group=e}transfer(e){if(!this._hasTransfered)return this._hasTransfered=!0,e._webview=this._webview,e}claim(e,i,t){return this._webview.claim(e,i,t)}}export{n as WebviewInput};
