{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/webviewPanel/browser/webviewPanel.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { registerAction2 } from \"../../../../platform/actions/common/actions.js\";\nimport { SyncDescriptor } from \"../../../../platform/instantiation/common/descriptors.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\tEditorPaneDescriptor,\n\ttype IEditorPaneRegistry,\n} from \"../../../browser/editor.js\";\nimport {\n\ttype IWorkbenchContribution,\n\tWorkbenchPhase,\n\tregisterWorkbenchContribution2,\n} from \"../../../common/contributions.js\";\nimport {\n\tEditorExtensions,\n\ttype IEditorFactoryRegistry,\n} from \"../../../common/editor.js\";\nimport type { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport {\n\ttype IEditorGroup,\n\tIEditorGroupsService,\n} from \"../../../services/editor/common/editorGroupsService.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport {\n\tHideWebViewEditorFindCommand,\n\tReloadWebviewAction,\n\tShowWebViewEditorFindWidgetAction,\n\tWebViewEditorFindNextCommand,\n\tWebViewEditorFindPreviousCommand,\n} from \"./webviewCommands.js\";\nimport { WebviewEditor } from \"./webviewEditor.js\";\nimport { WebviewInput } from \"./webviewEditorInput.js\";\nimport { WebviewEditorInputSerializer } from \"./webviewEditorInputSerializer.js\";\nimport {\n\tIWebviewWorkbenchService,\n\tWebviewEditorService,\n} from \"./webviewWorkbenchService.js\";\n\nRegistry.as<IEditorPaneRegistry>(\n\tEditorExtensions.EditorPane,\n).registerEditorPane(\n\tEditorPaneDescriptor.create(\n\t\tWebviewEditor,\n\t\tWebviewEditor.ID,\n\t\tlocalize(\"webview.editor.label\", \"webview editor\"),\n\t),\n\t[new SyncDescriptor(WebviewInput)],\n);\n\nclass WebviewPanelContribution\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tstatic readonly ID = \"workbench.contrib.webviewPanel\";\n\n\tconstructor(\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IEditorGroupsService\n\t\tprivate readonly editorGroupService: IEditorGroupsService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(\n\t\t\teditorService.onWillOpenEditor((e) => {\n\t\t\t\tconst group = editorGroupService.getGroup(e.groupId);\n\t\t\t\tif (group) {\n\t\t\t\t\tthis.onEditorOpening(e.editor, group);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate onEditorOpening(editor: EditorInput, group: IEditorGroup): void {\n\t\tif (\n\t\t\t!(editor instanceof WebviewInput) ||\n\t\t\teditor.typeId !== WebviewInput.typeId\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (group.contains(editor)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet previousGroup: IEditorGroup | undefined;\n\t\tconst groups = this.editorGroupService.groups;\n\t\tfor (const group of groups) {\n\t\t\tif (group.contains(editor)) {\n\t\t\t\tpreviousGroup = group;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!previousGroup) {\n\t\t\treturn;\n\t\t}\n\n\t\tpreviousGroup.closeEditor(editor);\n\t}\n}\n\nregisterWorkbenchContribution2(\n\tWebviewPanelContribution.ID,\n\tWebviewPanelContribution,\n\tWorkbenchPhase.BlockStartup,\n);\n\nRegistry.as<IEditorFactoryRegistry>(\n\tEditorExtensions.EditorFactory,\n).registerEditorSerializer(\n\tWebviewEditorInputSerializer.ID,\n\tWebviewEditorInputSerializer,\n);\n\nregisterSingleton(\n\tIWebviewWorkbenchService,\n\tWebviewEditorService,\n\tInstantiationType.Delayed,\n);\n\nregisterAction2(ShowWebViewEditorFindWidgetAction);\nregisterAction2(HideWebViewEditorFindCommand);\nregisterAction2(WebViewEditorFindNextCommand);\nregisterAction2(WebViewEditorFindPreviousCommand);\nregisterAction2(ReloadWebviewAction);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,kBAAkB;AAC3B,SAAS,gBAAgB;AACzB,SAAS,uBAAuB;AAChC,SAAS,sBAAsB;AAC/B;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,gBAAgB;AACzB;AAAA,EACC;AAAA,OAEM;AACP;AAAA,EAEC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,OAEM;AAEP;AAAA,EAEC;AAAA,OACM;AACP,SAAS,sBAAsB;AAC/B;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,qBAAqB;AAC9B,SAAS,oBAAoB;AAC7B,SAAS,oCAAoC;AAC7C;AAAA,EACC;AAAA,EACA;AAAA,OACM;AAEP,SAAS;AAAA,EACR,iBAAiB;AAClB,EAAE;AAAA,EACD,qBAAqB;AAAA,IACpB;AAAA,IACA,cAAc;AAAA,IACd,SAAS,wBAAwB,gBAAgB;AAAA,EAClD;AAAA,EACA,CAAC,IAAI,eAAe,YAAY,CAAC;AAClC;AAEA,IAAM,2BAAN,cACS,WAET;AAAA,EAGC,YACiB,eAEC,oBAChB;AACD,UAAM;AAFW;AAIjB,SAAK;AAAA,MACJ,cAAc,iBAAiB,CAAC,MAAM;AACrC,cAAM,QAAQ,mBAAmB,SAAS,EAAE,OAAO;AACnD,YAAI,OAAO;AACV,eAAK,gBAAgB,EAAE,QAAQ,KAAK;AAAA,QACrC;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAhFD,OA8DA;AAAA;AAAA;AAAA,EACC,OAAgB,KAAK;AAAA,EAmBb,gBAAgB,QAAqB,OAA2B;AACvE,QACC,EAAE,kBAAkB,iBACpB,OAAO,WAAW,aAAa,QAC9B;AACD;AAAA,IACD;AAEA,QAAI,MAAM,SAAS,MAAM,GAAG;AAC3B;AAAA,IACD;AAEA,QAAI;AACJ,UAAM,SAAS,KAAK,mBAAmB;AACvC,eAAWA,UAAS,QAAQ;AAC3B,UAAIA,OAAM,SAAS,MAAM,GAAG;AAC3B,wBAAgBA;AAChB;AAAA,MACD;AAAA,IACD;AAEA,QAAI,CAAC,eAAe;AACnB;AAAA,IACD;AAEA,kBAAc,YAAY,MAAM;AAAA,EACjC;AACD;AAlDM,2BAAN;AAAA,EAOG;AAAA,EACA;AAAA,GARG;AAoDN;AAAA,EACC,yBAAyB;AAAA,EACzB;AAAA,EACA,eAAe;AAChB;AAEA,SAAS;AAAA,EACR,iBAAiB;AAClB,EAAE;AAAA,EACD,6BAA6B;AAAA,EAC7B;AACD;AAEA;AAAA,EACC;AAAA,EACA;AAAA,EACA,kBAAkB;AACnB;AAEA,gBAAgB,iCAAiC;AACjD,gBAAgB,4BAA4B;AAC5C,gBAAgB,4BAA4B;AAC5C,gBAAgB,gCAAgC;AAChD,gBAAgB,mBAAmB;",
  "names": ["group"]
}
