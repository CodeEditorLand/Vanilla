{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/webviewPanel/browser/webviewPanel.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { localize } from '../../../../nls.js';\nimport { registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { SyncDescriptor } from '../../../../platform/instantiation/common/descriptors.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { EditorPaneDescriptor, IEditorPaneRegistry } from '../../../browser/editor.js';\nimport { IWorkbenchContribution, WorkbenchPhase, registerWorkbenchContribution2 } from '../../../common/contributions.js';\nimport { EditorExtensions, IEditorFactoryRegistry } from '../../../common/editor.js';\nimport { EditorInput } from '../../../common/editor/editorInput.js';\nimport { IEditorGroup, IEditorGroupsService } from '../../../services/editor/common/editorGroupsService.js';\nimport { HideWebViewEditorFindCommand, ReloadWebviewAction, ShowWebViewEditorFindWidgetAction, WebViewEditorFindNextCommand, WebViewEditorFindPreviousCommand } from './webviewCommands.js';\nimport { WebviewEditor } from './webviewEditor.js';\nimport { WebviewInput } from './webviewEditorInput.js';\nimport { WebviewEditorInputSerializer } from './webviewEditorInputSerializer.js';\nimport { IWebviewWorkbenchService, WebviewEditorService } from './webviewWorkbenchService.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\n\n(Registry.as<IEditorPaneRegistry>(EditorExtensions.EditorPane)).registerEditorPane(EditorPaneDescriptor.create(\n\tWebviewEditor,\n\tWebviewEditor.ID,\n\tlocalize('webview.editor.label', \"webview editor\")),\n\t[new SyncDescriptor(WebviewInput)]);\n\nclass WebviewPanelContribution extends Disposable implements IWorkbenchContribution {\n\n\tstatic readonly ID = 'workbench.contrib.webviewPanel';\n\n\tconstructor(\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper();\n\n\t\tthis._register(editorService.onWillOpenEditor(e => {\n\t\t\tconst group = editorGroupService.getGroup(e.groupId);\n\t\t\tif (group) {\n\t\t\t\tthis.onEditorOpening(e.editor, group);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate onEditorOpening(\n\t\teditor: EditorInput,\n\t\tgroup: IEditorGroup\n\t): void {\n\t\tif (!(editor instanceof WebviewInput) || editor.typeId !== WebviewInput.typeId) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (group.contains(editor)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet previousGroup: IEditorGroup | undefined;\n\t\tconst groups = this.editorGroupService.groups;\n\t\tfor (const group of groups) {\n\t\t\tif (group.contains(editor)) {\n\t\t\t\tpreviousGroup = group;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!previousGroup) {\n\t\t\treturn;\n\t\t}\n\n\t\tpreviousGroup.closeEditor(editor);\n\t}\n}\n\nregisterWorkbenchContribution2(WebviewPanelContribution.ID, WebviewPanelContribution, WorkbenchPhase.BlockStartup);\n\nRegistry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory).registerEditorSerializer(\n\tWebviewEditorInputSerializer.ID,\n\tWebviewEditorInputSerializer);\n\nregisterSingleton(IWebviewWorkbenchService, WebviewEditorService, InstantiationType.Delayed);\n\nregisterAction2(ShowWebViewEditorFindWidgetAction);\nregisterAction2(HideWebViewEditorFindCommand);\nregisterAction2(WebViewEditorFindNextCommand);\nregisterAction2(WebViewEditorFindPreviousCommand);\nregisterAction2(ReloadWebviewAction);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,kBAAkB;AAC3B,SAAS,gBAAgB;AACzB,SAAS,uBAAuB;AAChC,SAAS,sBAAsB;AAC/B,SAAS,mBAAmB,yBAAyB;AACrD,SAAS,gBAAgB;AACzB,SAAS,sBAAsB,2BAA2B;AAC1D,SAAS,wBAAwB,gBAAgB,sCAAsC;AACvF,SAAS,kBAAkB,8BAA8B;AACzD,SAAS,mBAAmB;AAC5B,SAAS,cAAc,4BAA4B;AACnD,SAAS,8BAA8B,qBAAqB,mCAAmC,8BAA8B,wCAAwC;AACrK,SAAS,qBAAqB;AAC9B,SAAS,oBAAoB;AAC7B,SAAS,oCAAoC;AAC7C,SAAS,0BAA0B,4BAA4B;AAC/D,SAAS,sBAAsB;AAE9B,SAAS,GAAwB,iBAAiB,UAAU,EAAG;AAAA,EAAmB,qBAAqB;AAAA,IACvG;AAAA,IACA,cAAc;AAAA,IACd,SAAS,wBAAwB,gBAAgB;AAAA,EAAC;AAAA,EAClD,CAAC,IAAI,eAAe,YAAY,CAAC;AAAC;AAEnC,IAAM,2BAAN,cAAuC,WAA6C;AAAA,EAInF,YACiB,eACuB,oBACtC;AACD,UAAM;AAFiC;AAIvC,SAAK,UAAU,cAAc,iBAAiB,OAAK;AAClD,YAAM,QAAQ,mBAAmB,SAAS,EAAE,OAAO;AACnD,UAAI,OAAO;AACV,aAAK,gBAAgB,EAAE,QAAQ,KAAK;AAAA,MACrC;AAAA,IACD,CAAC,CAAC;AAAA,EACH;AAAA,EA7CD,OA6BoF;AAAA;AAAA;AAAA,EAEnF,OAAgB,KAAK;AAAA,EAgBb,gBACP,QACA,OACO;AACP,QAAI,EAAE,kBAAkB,iBAAiB,OAAO,WAAW,aAAa,QAAQ;AAC/E;AAAA,IACD;AAEA,QAAI,MAAM,SAAS,MAAM,GAAG;AAC3B;AAAA,IACD;AAEA,QAAI;AACJ,UAAM,SAAS,KAAK,mBAAmB;AACvC,eAAWA,UAAS,QAAQ;AAC3B,UAAIA,OAAM,SAAS,MAAM,GAAG;AAC3B,wBAAgBA;AAChB;AAAA,MACD;AAAA,IACD;AAEA,QAAI,CAAC,eAAe;AACnB;AAAA,IACD;AAEA,kBAAc,YAAY,MAAM;AAAA,EACjC;AACD;AA7CM,2BAAN;AAAA,EAKG;AAAA,EACA;AAAA,GANG;AA+CN,+BAA+B,yBAAyB,IAAI,0BAA0B,eAAe,YAAY;AAEjH,SAAS,GAA2B,iBAAiB,aAAa,EAAE;AAAA,EACnE,6BAA6B;AAAA,EAC7B;AAA4B;AAE7B,kBAAkB,0BAA0B,sBAAsB,kBAAkB,OAAO;AAE3F,gBAAgB,iCAAiC;AACjD,gBAAgB,4BAA4B;AAC5C,gBAAgB,4BAA4B;AAC5C,gBAAgB,gCAAgC;AAChD,gBAAgB,mBAAmB;",
  "names": ["group"]
}
