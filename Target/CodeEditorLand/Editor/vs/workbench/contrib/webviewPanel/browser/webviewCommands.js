import{KeyCode as c,KeyMod as b}from"../../../../../vs/base/common/keyCodes.js";import{EditorContextKeys as f}from"../../../../../vs/editor/common/editorContextKeys.js";import*as t from"../../../../../vs/nls.js";import{Categories as m}from"../../../../../vs/platform/action/common/actionCommonCategories.js";import{Action2 as r,MenuId as y}from"../../../../../vs/platform/actions/common/actions.js";import{ContextKeyExpr as i}from"../../../../../vs/platform/contextkey/common/contextkey.js";import"../../../../../vs/platform/instantiation/common/instantiation.js";import{KeybindingWeight as n}from"../../../../../vs/platform/keybinding/common/keybindingsRegistry.js";import{IWebviewService as D,KEYBINDING_CONTEXT_WEBVIEW_FIND_WIDGET_ENABLED as L,KEYBINDING_CONTEXT_WEBVIEW_FIND_WIDGET_FOCUSED as u,KEYBINDING_CONTEXT_WEBVIEW_FIND_WIDGET_VISIBLE as A}from"../../../../../vs/workbench/contrib/webview/browser/webview.js";import{WebviewEditor as h}from"../../../../../vs/workbench/contrib/webviewPanel/browser/webviewEditor.js";import{WebviewInput as B}from"../../../../../vs/workbench/contrib/webviewPanel/browser/webviewEditorInput.js";import{IEditorService as x}from"../../../../../vs/workbench/services/editor/common/editorService.js";const d=i.and(i.equals("activeEditor",h.ID),f.focus.toNegated());class a extends r{static ID="editor.action.webvieweditor.showFind";static LABEL=t.localize("editor.action.webvieweditor.showFind","Show find");constructor(){super({id:a.ID,title:a.LABEL,keybinding:{when:i.and(d,L),primary:b.CtrlCmd|c.KeyF,weight:n.EditorContrib}})}run(e){s(e)?.showFind()}}class l extends r{static ID="editor.action.webvieweditor.hideFind";static LABEL=t.localize("editor.action.webvieweditor.hideFind","Stop find");constructor(){super({id:l.ID,title:l.LABEL,keybinding:{when:i.and(d,A),primary:c.Escape,weight:n.EditorContrib}})}run(e){s(e)?.hideFind()}}class p extends r{static ID="editor.action.webvieweditor.findNext";static LABEL=t.localize("editor.action.webvieweditor.findNext","Find next");constructor(){super({id:p.ID,title:p.LABEL,keybinding:{when:i.and(d,u),primary:c.Enter,weight:n.EditorContrib}})}run(e){s(e)?.runFindAction(!1)}}class v extends r{static ID="editor.action.webvieweditor.findPrevious";static LABEL=t.localize("editor.action.webvieweditor.findPrevious","Find previous");constructor(){super({id:v.ID,title:v.LABEL,keybinding:{when:i.and(d,u),primary:b.Shift|c.Enter,weight:n.EditorContrib}})}run(e){s(e)?.runFindAction(!0)}}class w extends r{static ID="workbench.action.webview.reloadWebviewAction";static LABEL=t.localize2("refreshWebviewLabel","Reload Webviews");constructor(){super({id:w.ID,title:w.LABEL,category:m.Developer,menu:[{id:y.CommandPalette}]})}async run(e){const o=e.get(D);for(const I of o.webviews)I.reload()}}function s(E){const o=E.get(x).activeEditor;return o instanceof B?o.webview:void 0}export{l as HideWebViewEditorFindCommand,w as ReloadWebviewAction,a as ShowWebViewEditorFindWidgetAction,p as WebViewEditorFindNextCommand,v as WebViewEditorFindPreviousCommand};
