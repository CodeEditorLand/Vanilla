{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/mergeEditor/common/mergeEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from \"../../../../nls.js\";\nimport { RawContextKey } from \"../../../../platform/contextkey/common/contextkey.js\";\n\nexport type MergeEditorLayoutKind = \"mixed\" | \"columns\";\n\nexport const ctxIsMergeEditor = new RawContextKey<boolean>(\n\t\"isMergeEditor\",\n\tfalse,\n\t{\n\t\ttype: \"boolean\",\n\t\tdescription: localize(\"is\", \"The editor is a merge editor\"),\n\t},\n);\nexport const ctxIsMergeResultEditor = new RawContextKey<boolean>(\n\t\"isMergeResultEditor\",\n\tfalse,\n\t{\n\t\ttype: \"boolean\",\n\t\tdescription: localize(\n\t\t\t\"isr\",\n\t\t\t\"The editor is a the result editor of a merge editor.\",\n\t\t),\n\t},\n);\nexport const ctxMergeEditorLayout = new RawContextKey<MergeEditorLayoutKind>(\n\t\"mergeEditorLayout\",\n\t\"mixed\",\n\t{\n\t\ttype: \"string\",\n\t\tdescription: localize(\n\t\t\t\"editorLayout\",\n\t\t\t\"The layout mode of a merge editor\",\n\t\t),\n\t},\n);\nexport const ctxMergeEditorShowBase = new RawContextKey<boolean>(\n\t\"mergeEditorShowBase\",\n\tfalse,\n\t{\n\t\ttype: \"boolean\",\n\t\tdescription: localize(\n\t\t\t\"showBase\",\n\t\t\t\"If the merge editor shows the base version\",\n\t\t),\n\t},\n);\nexport const ctxMergeEditorShowBaseAtTop = new RawContextKey<boolean>(\n\t\"mergeEditorShowBaseAtTop\",\n\tfalse,\n\t{\n\t\ttype: \"boolean\",\n\t\tdescription: localize(\n\t\t\t\"showBaseAtTop\",\n\t\t\t\"If base should be shown at the top\",\n\t\t),\n\t},\n);\nexport const ctxMergeEditorShowNonConflictingChanges =\n\tnew RawContextKey<boolean>(\"mergeEditorShowNonConflictingChanges\", false, {\n\t\ttype: \"boolean\",\n\t\tdescription: localize(\n\t\t\t\"showNonConflictingChanges\",\n\t\t\t\"If the merge editor shows non-conflicting changes\",\n\t\t),\n\t});\n\nexport const ctxMergeBaseUri = new RawContextKey<string>(\n\t\"mergeEditorBaseUri\",\n\t\"\",\n\t{\n\t\ttype: \"string\",\n\t\tdescription: localize(\n\t\t\t\"baseUri\",\n\t\t\t\"The uri of the baser of a merge editor\",\n\t\t),\n\t},\n);\nexport const ctxMergeResultUri = new RawContextKey<string>(\n\t\"mergeEditorResultUri\",\n\t\"\",\n\t{\n\t\ttype: \"string\",\n\t\tdescription: localize(\n\t\t\t\"resultUri\",\n\t\t\t\"The uri of the result of a merge editor\",\n\t\t),\n\t},\n);\n\nexport interface MergeEditorContents {\n\tlanguageId: string;\n\tbase: string;\n\tinput1: string;\n\tinput2: string;\n\tresult: string;\n\tinitialResult?: string;\n}\n\nexport const StorageCloseWithConflicts = \"mergeEditorCloseWithConflicts\";\n"],
  "mappings": "AAKA,SAAS,gBAAgB;AACzB,SAAS,qBAAqB;AAIvB,MAAM,mBAAmB,IAAI;AAAA,EACnC;AAAA,EACA;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa,SAAS,MAAM,8BAA8B;AAAA,EAC3D;AACD;AACO,MAAM,yBAAyB,IAAI;AAAA,EACzC;AAAA,EACA;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,MACZ;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AACO,MAAM,uBAAuB,IAAI;AAAA,EACvC;AAAA,EACA;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,MACZ;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AACO,MAAM,yBAAyB,IAAI;AAAA,EACzC;AAAA,EACA;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,MACZ;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AACO,MAAM,8BAA8B,IAAI;AAAA,EAC9C;AAAA,EACA;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,MACZ;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AACO,MAAM,0CACZ,IAAI,cAAuB,wCAAwC,OAAO;AAAA,EACzE,MAAM;AAAA,EACN,aAAa;AAAA,IACZ;AAAA,IACA;AAAA,EACD;AACD,CAAC;AAEK,MAAM,kBAAkB,IAAI;AAAA,EAClC;AAAA,EACA;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,MACZ;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AACO,MAAM,oBAAoB,IAAI;AAAA,EACpC;AAAA,EACA;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,MACZ;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AAWO,MAAM,4BAA4B;",
  "names": []
}
