{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/mergeEditor/common/mergeEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../../nls.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\n\nexport type MergeEditorLayoutKind = 'mixed' | 'columns';\n\nexport const ctxIsMergeEditor = new RawContextKey<boolean>('isMergeEditor', false, { type: 'boolean', description: localize('is', 'The editor is a merge editor') });\nexport const ctxIsMergeResultEditor = new RawContextKey<boolean>('isMergeResultEditor', false, { type: 'boolean', description: localize('isr', 'The editor is a the result editor of a merge editor.') });\nexport const ctxMergeEditorLayout = new RawContextKey<MergeEditorLayoutKind>('mergeEditorLayout', 'mixed', { type: 'string', description: localize('editorLayout', 'The layout mode of a merge editor') });\nexport const ctxMergeEditorShowBase = new RawContextKey<boolean>('mergeEditorShowBase', false, { type: 'boolean', description: localize('showBase', 'If the merge editor shows the base version') });\nexport const ctxMergeEditorShowBaseAtTop = new RawContextKey<boolean>('mergeEditorShowBaseAtTop', false, { type: 'boolean', description: localize('showBaseAtTop', 'If base should be shown at the top') });\nexport const ctxMergeEditorShowNonConflictingChanges = new RawContextKey<boolean>('mergeEditorShowNonConflictingChanges', false, { type: 'boolean', description: localize('showNonConflictingChanges', 'If the merge editor shows non-conflicting changes') });\n\nexport const ctxMergeBaseUri = new RawContextKey<string>('mergeEditorBaseUri', '', { type: 'string', description: localize('baseUri', 'The uri of the baser of a merge editor') });\nexport const ctxMergeResultUri = new RawContextKey<string>('mergeEditorResultUri', '', { type: 'string', description: localize('resultUri', 'The uri of the result of a merge editor') });\n\nexport interface MergeEditorContents {\n\tlanguageId: string;\n\tbase: string;\n\tinput1: string;\n\tinput2: string;\n\tresult: string;\n\tinitialResult?: string;\n}\n\nexport const StorageCloseWithConflicts = 'mergeEditorCloseWithConflicts';\n"],
  "mappings": "AAKA,SAAS,gBAAgB;AACzB,SAAS,qBAAqB;AAIvB,MAAM,mBAAmB,IAAI,cAAuB,iBAAiB,OAAO,EAAE,MAAM,WAAW,aAAa,SAAS,MAAM,8BAA8B,EAAE,CAAC;AAC5J,MAAM,yBAAyB,IAAI,cAAuB,uBAAuB,OAAO,EAAE,MAAM,WAAW,aAAa,SAAS,OAAO,sDAAsD,EAAE,CAAC;AACjM,MAAM,uBAAuB,IAAI,cAAqC,qBAAqB,SAAS,EAAE,MAAM,UAAU,aAAa,SAAS,gBAAgB,mCAAmC,EAAE,CAAC;AAClM,MAAM,yBAAyB,IAAI,cAAuB,uBAAuB,OAAO,EAAE,MAAM,WAAW,aAAa,SAAS,YAAY,4CAA4C,EAAE,CAAC;AAC5L,MAAM,8BAA8B,IAAI,cAAuB,4BAA4B,OAAO,EAAE,MAAM,WAAW,aAAa,SAAS,iBAAiB,oCAAoC,EAAE,CAAC;AACnM,MAAM,0CAA0C,IAAI,cAAuB,wCAAwC,OAAO,EAAE,MAAM,WAAW,aAAa,SAAS,6BAA6B,mDAAmD,EAAE,CAAC;AAEtP,MAAM,kBAAkB,IAAI,cAAsB,sBAAsB,IAAI,EAAE,MAAM,UAAU,aAAa,SAAS,WAAW,wCAAwC,EAAE,CAAC;AAC1K,MAAM,oBAAoB,IAAI,cAAsB,wBAAwB,IAAI,EAAE,MAAM,UAAU,aAAa,SAAS,aAAa,yCAAyC,EAAE,CAAC;AAWjL,MAAM,4BAA4B;",
  "names": []
}
