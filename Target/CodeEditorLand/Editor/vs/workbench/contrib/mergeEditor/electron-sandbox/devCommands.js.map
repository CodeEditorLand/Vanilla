{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/mergeEditor/electron-sandbox/devCommands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from '../../../../base/common/buffer.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { randomPath } from '../../../../base/common/extpath.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ILanguageService } from '../../../../editor/common/languages/language.js';\nimport { localize, localize2 } from '../../../../nls.js';\nimport { ILocalizedString } from '../../../../platform/action/common/action.js';\nimport { Action2, IAction2Options } from '../../../../platform/actions/common/actions.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { INativeEnvironmentService } from '../../../../platform/environment/common/environment.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { IResourceMergeEditorInput } from '../../../common/editor.js';\nimport { MergeEditor } from '../browser/view/mergeEditor.js';\nimport { MergeEditorViewModel } from '../browser/view/viewModel.js';\nimport { MergeEditorContents } from '../common/mergeEditor.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\n\nconst MERGE_EDITOR_CATEGORY: ILocalizedString = localize2('mergeEditor', 'Merge Editor (Dev)');\n\nexport class MergeEditorOpenContentsFromJSON extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'merge.dev.openContentsJson',\n\t\t\tcategory: MERGE_EDITOR_CATEGORY,\n\t\t\ttitle: localize2('merge.dev.openState', \"Open Merge Editor State from JSON\"),\n\t\t\ticon: Codicon.layoutCentered,\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, args?: { data?: MergeEditorContents; resultState?: 'initial' | 'current' }): Promise<void> {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst clipboardService = accessor.get(IClipboardService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst languageService = accessor.get(ILanguageService);\n\t\tconst env = accessor.get(INativeEnvironmentService);\n\t\tconst fileService = accessor.get(IFileService);\n\n\t\tif (!args) {\n\t\t\targs = {};\n\t\t}\n\n\t\tlet content: MergeEditorContents;\n\t\tif (!args.data) {\n\t\t\tconst result = await quickInputService.input({\n\t\t\t\tprompt: localize('mergeEditor.enterJSON', 'Enter JSON'),\n\t\t\t\tvalue: await clipboardService.readText(),\n\t\t\t});\n\t\t\tif (result === undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontent =\n\t\t\t\tresult !== ''\n\t\t\t\t\t? JSON.parse(result)\n\t\t\t\t\t: { base: '', input1: '', input2: '', result: '', languageId: 'plaintext' };\n\t\t} else {\n\t\t\tcontent = args.data;\n\t\t}\n\n\t\tconst targetDir = URI.joinPath(env.tmpDir, randomPath());\n\n\t\tconst extension = languageService.getExtensions(content.languageId)[0] || '';\n\n\t\tconst baseUri = URI.joinPath(targetDir, `/base${extension}`);\n\t\tconst input1Uri = URI.joinPath(targetDir, `/input1${extension}`);\n\t\tconst input2Uri = URI.joinPath(targetDir, `/input2${extension}`);\n\t\tconst resultUri = URI.joinPath(targetDir, `/result${extension}`);\n\t\tconst initialResultUri = URI.joinPath(targetDir, `/initialResult${extension}`);\n\n\t\tasync function writeFile(uri: URI, content: string): Promise<void> {\n\t\t\tawait fileService.writeFile(uri, VSBuffer.fromString(content));\n\t\t}\n\n\t\tconst shouldOpenInitial = await promptOpenInitial(quickInputService, args.resultState);\n\n\t\tawait Promise.all([\n\t\t\twriteFile(baseUri, content.base),\n\t\t\twriteFile(input1Uri, content.input1),\n\t\t\twriteFile(input2Uri, content.input2),\n\t\t\twriteFile(resultUri, shouldOpenInitial ? (content.initialResult || '') : content.result),\n\t\t\twriteFile(initialResultUri, content.initialResult || ''),\n\t\t]);\n\n\t\tconst input: IResourceMergeEditorInput = {\n\t\t\tbase: { resource: baseUri },\n\t\t\tinput1: { resource: input1Uri, label: 'Input 1', description: 'Input 1', detail: '(from JSON)' },\n\t\t\tinput2: { resource: input2Uri, label: 'Input 2', description: 'Input 2', detail: '(from JSON)' },\n\t\t\tresult: { resource: resultUri },\n\t\t};\n\t\teditorService.openEditor(input);\n\t}\n}\n\nasync function promptOpenInitial(quickInputService: IQuickInputService, resultStateOverride?: 'initial' | 'current') {\n\tif (resultStateOverride) {\n\t\treturn resultStateOverride === 'initial';\n\t}\n\tconst result = await quickInputService.pick([{ label: 'result', result: false }, { label: 'initial result', result: true }], { canPickMany: false });\n\treturn result?.result;\n}\n\nabstract class MergeEditorAction extends Action2 {\n\tconstructor(desc: Readonly<IAction2Options>) {\n\t\tsuper(desc);\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst { activeEditorPane } = accessor.get(IEditorService);\n\t\tif (activeEditorPane instanceof MergeEditor) {\n\t\t\tconst vm = activeEditorPane.viewModel.get();\n\t\t\tif (!vm) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.runWithViewModel(vm, accessor);\n\t\t}\n\t}\n\n\tabstract runWithViewModel(viewModel: MergeEditorViewModel, accessor: ServicesAccessor): void;\n}\n\nexport class OpenSelectionInTemporaryMergeEditor extends MergeEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'merge.dev.openSelectionInTemporaryMergeEditor',\n\t\t\tcategory: MERGE_EDITOR_CATEGORY,\n\t\t\ttitle: localize2('merge.dev.openSelectionInTemporaryMergeEditor', \"Open Selection In Temporary Merge Editor\"),\n\t\t\ticon: Codicon.layoutCentered,\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\toverride async runWithViewModel(viewModel: MergeEditorViewModel, accessor: ServicesAccessor) {\n\t\tconst rangesInBase = viewModel.selectionInBase.get()?.rangesInBase;\n\t\tif (!rangesInBase || rangesInBase.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst base = rangesInBase\n\t\t\t.map((r) =>\n\t\t\t\tviewModel.model.base.getValueInRange(\n\t\t\t\t\tr\n\t\t\t\t)\n\t\t\t)\n\t\t\t.join('\\n');\n\n\t\tconst input1 = rangesInBase\n\t\t\t.map((r) =>\n\t\t\t\tviewModel.inputCodeEditorView1.editor.getModel()!.getValueInRange(\n\t\t\t\t\tviewModel.model.translateBaseRangeToInput(1, r)\n\t\t\t\t)\n\t\t\t)\n\t\t\t.join('\\n');\n\n\t\tconst input2 = rangesInBase\n\t\t\t.map((r) =>\n\t\t\t\tviewModel.inputCodeEditorView2.editor.getModel()!.getValueInRange(\n\t\t\t\t\tviewModel.model.translateBaseRangeToInput(2, r)\n\t\t\t\t)\n\t\t\t)\n\t\t\t.join('\\n');\n\n\t\tconst result = rangesInBase\n\t\t\t.map((r) =>\n\t\t\t\tviewModel.resultCodeEditorView.editor.getModel()!.getValueInRange(\n\t\t\t\t\tviewModel.model.translateBaseRangeToResult(r)\n\t\t\t\t)\n\t\t\t)\n\t\t\t.join('\\n');\n\n\t\tnew MergeEditorOpenContentsFromJSON().run(accessor, {\n\t\t\tdata: {\n\t\t\t\tbase,\n\t\t\t\tinput1,\n\t\t\t\tinput2,\n\t\t\t\tresult,\n\t\t\t\tlanguageId: viewModel.resultCodeEditorView.editor.getModel()!.getLanguageId()\n\t\t\t}\n\t\t});\n\t}\n}\n"],
  "mappings": "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",
  "names": ["content"]
}
