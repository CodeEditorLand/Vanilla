var o=class t{lineNumber;column;constructor(n,e){this.lineNumber=n,this.column=e}with(n=this.lineNumber,e=this.column){return n===this.lineNumber&&e===this.column?this:new t(n,e)}delta(n=0,e=0){return this.with(this.lineNumber+n,this.column+e)}equals(n){return t.equals(this,n)}static equals(n,e){return!n&&!e?!0:!!n&&!!e&&n.lineNumber===e.lineNumber&&n.column===e.column}isBefore(n){return t.isBefore(this,n)}static isBefore(n,e){return n.lineNumber<e.lineNumber?!0:e.lineNumber<n.lineNumber?!1:n.column<e.column}isBeforeOrEqual(n){return t.isBeforeOrEqual(this,n)}static isBeforeOrEqual(n,e){return n.lineNumber<e.lineNumber?!0:e.lineNumber<n.lineNumber?!1:n.column<=e.column}static compare(n,e){let u=n.lineNumber|0,i=e.lineNumber|0;if(u===i){let r=n.column|0,l=e.column|0;return r-l}return u-i}clone(){return new t(this.lineNumber,this.column)}toString(){return"("+this.lineNumber+","+this.column+")"}static lift(n){return new t(n.lineNumber,n.column)}static isIPosition(n){return n&&typeof n.lineNumber=="number"&&typeof n.column=="number"}toJSON(){return{lineNumber:this.lineNumber,column:this.column}}};var a=class t{startLineNumber;startColumn;endLineNumber;endColumn;constructor(n,e,u,i){n>u||n===u&&e>i?(this.startLineNumber=u,this.startColumn=i,this.endLineNumber=n,this.endColumn=e):(this.startLineNumber=n,this.startColumn=e,this.endLineNumber=u,this.endColumn=i)}isEmpty(){return t.isEmpty(this)}static isEmpty(n){return n.startLineNumber===n.endLineNumber&&n.startColumn===n.endColumn}containsPosition(n){return t.containsPosition(this,n)}static containsPosition(n,e){return!(e.lineNumber<n.startLineNumber||e.lineNumber>n.endLineNumber||e.lineNumber===n.startLineNumber&&e.column<n.startColumn||e.lineNumber===n.endLineNumber&&e.column>n.endColumn)}static strictContainsPosition(n,e){return!(e.lineNumber<n.startLineNumber||e.lineNumber>n.endLineNumber||e.lineNumber===n.startLineNumber&&e.column<=n.startColumn||e.lineNumber===n.endLineNumber&&e.column>=n.endColumn)}containsRange(n){return t.containsRange(this,n)}static containsRange(n,e){return!(e.startLineNumber<n.startLineNumber||e.endLineNumber<n.startLineNumber||e.startLineNumber>n.endLineNumber||e.endLineNumber>n.endLineNumber||e.startLineNumber===n.startLineNumber&&e.startColumn<n.startColumn||e.endLineNumber===n.endLineNumber&&e.endColumn>n.endColumn)}strictContainsRange(n){return t.strictContainsRange(this,n)}static strictContainsRange(n,e){return!(e.startLineNumber<n.startLineNumber||e.endLineNumber<n.startLineNumber||e.startLineNumber>n.endLineNumber||e.endLineNumber>n.endLineNumber||e.startLineNumber===n.startLineNumber&&e.startColumn<=n.startColumn||e.endLineNumber===n.endLineNumber&&e.endColumn>=n.endColumn)}plusRange(n){return t.plusRange(this,n)}static plusRange(n,e){let u,i,r,l;return e.startLineNumber<n.startLineNumber?(u=e.startLineNumber,i=e.startColumn):e.startLineNumber===n.startLineNumber?(u=e.startLineNumber,i=Math.min(e.startColumn,n.startColumn)):(u=n.startLineNumber,i=n.startColumn),e.endLineNumber>n.endLineNumber?(r=e.endLineNumber,l=e.endColumn):e.endLineNumber===n.endLineNumber?(r=e.endLineNumber,l=Math.max(e.endColumn,n.endColumn)):(r=n.endLineNumber,l=n.endColumn),new t(u,i,r,l)}intersectRanges(n){return t.intersectRanges(this,n)}static intersectRanges(n,e){let u=n.startLineNumber,i=n.startColumn,r=n.endLineNumber,l=n.endColumn,s=e.startLineNumber,c=e.startColumn,b=e.endLineNumber,N=e.endColumn;return u<s?(u=s,i=c):u===s&&(i=Math.max(i,c)),r>b?(r=b,l=N):r===b&&(l=Math.min(l,N)),u>r||u===r&&i>l?null:new t(u,i,r,l)}equalsRange(n){return t.equalsRange(this,n)}static equalsRange(n,e){return!n&&!e?!0:!!n&&!!e&&n.startLineNumber===e.startLineNumber&&n.startColumn===e.startColumn&&n.endLineNumber===e.endLineNumber&&n.endColumn===e.endColumn}getEndPosition(){return t.getEndPosition(this)}static getEndPosition(n){return new o(n.endLineNumber,n.endColumn)}getStartPosition(){return t.getStartPosition(this)}static getStartPosition(n){return new o(n.startLineNumber,n.startColumn)}toString(){return"["+this.startLineNumber+","+this.startColumn+" -> "+this.endLineNumber+","+this.endColumn+"]"}setEndPosition(n,e){return new t(this.startLineNumber,this.startColumn,n,e)}setStartPosition(n,e){return new t(n,e,this.endLineNumber,this.endColumn)}collapseToStart(){return t.collapseToStart(this)}static collapseToStart(n){return new t(n.startLineNumber,n.startColumn,n.startLineNumber,n.startColumn)}collapseToEnd(){return t.collapseToEnd(this)}static collapseToEnd(n){return new t(n.endLineNumber,n.endColumn,n.endLineNumber,n.endColumn)}delta(n){return new t(this.startLineNumber+n,this.startColumn,this.endLineNumber+n,this.endColumn)}static fromPositions(n,e=n){return new t(n.lineNumber,n.column,e.lineNumber,e.column)}static lift(n){return n?new t(n.startLineNumber,n.startColumn,n.endLineNumber,n.endColumn):null}static isIRange(n){return n&&typeof n.startLineNumber=="number"&&typeof n.startColumn=="number"&&typeof n.endLineNumber=="number"&&typeof n.endColumn=="number"}static areIntersectingOrTouching(n,e){return!(n.endLineNumber<e.startLineNumber||n.endLineNumber===e.startLineNumber&&n.endColumn<e.startColumn||e.endLineNumber<n.startLineNumber||e.endLineNumber===n.startLineNumber&&e.endColumn<n.startColumn)}static areIntersecting(n,e){return!(n.endLineNumber<e.startLineNumber||n.endLineNumber===e.startLineNumber&&n.endColumn<=e.startColumn||e.endLineNumber<n.startLineNumber||e.endLineNumber===n.startLineNumber&&e.endColumn<=n.startColumn)}static compareRangesUsingStarts(n,e){if(n&&e){let r=n.startLineNumber|0,l=e.startLineNumber|0;if(r===l){let s=n.startColumn|0,c=e.startColumn|0;if(s===c){let b=n.endLineNumber|0,N=e.endLineNumber|0;if(b===N){let C=n.endColumn|0,d=e.endColumn|0;return C-d}return b-N}return s-c}return r-l}return(n?1:0)-(e?1:0)}static compareRangesUsingEnds(n,e){return n.endLineNumber===e.endLineNumber?n.endColumn===e.endColumn?n.startLineNumber===e.startLineNumber?n.startColumn-e.startColumn:n.startLineNumber-e.startLineNumber:n.endColumn-e.endColumn:n.endLineNumber-e.endLineNumber}static spansMultipleLines(n){return n.endLineNumber>n.startLineNumber}toJSON(){return this}};var m=class t{constructor(n,e){this.lineCount=n;this.columnCount=e}static zero=new t(0,0);static lengthDiffNonNegative(n,e){return e.isLessThan(n)?t.zero:n.lineCount===e.lineCount?new t(0,e.columnCount-n.columnCount):new t(e.lineCount-n.lineCount,e.columnCount)}static betweenPositions(n,e){return n.lineNumber===e.lineNumber?new t(0,e.column-n.column):new t(e.lineNumber-n.lineNumber,e.column-1)}static ofRange(n){return t.betweenPositions(n.getStartPosition(),n.getEndPosition())}static ofText(n){let e=0,u=0;for(let i of n)i===`
`?(e++,u=0):u++;return new t(e,u)}isZero(){return this.lineCount===0&&this.columnCount===0}isLessThan(n){return this.lineCount!==n.lineCount?this.lineCount<n.lineCount:this.columnCount<n.columnCount}isGreaterThan(n){return this.lineCount!==n.lineCount?this.lineCount>n.lineCount:this.columnCount>n.columnCount}isGreaterThanOrEqualTo(n){return this.lineCount!==n.lineCount?this.lineCount>n.lineCount:this.columnCount>=n.columnCount}equals(n){return this.lineCount===n.lineCount&&this.columnCount===n.columnCount}compare(n){return this.lineCount!==n.lineCount?this.lineCount-n.lineCount:this.columnCount-n.columnCount}add(n){return n.lineCount===0?new t(this.lineCount,this.columnCount+n.columnCount):new t(this.lineCount+n.lineCount,n.columnCount)}createRange(n){return this.lineCount===0?new a(n.lineNumber,n.column,n.lineNumber,n.column+this.columnCount):new a(n.lineNumber,n.column,n.lineNumber+this.lineCount,this.columnCount+1)}toRange(){return new a(1,1,this.lineCount+1,this.columnCount+1)}addToPosition(n){return this.lineCount===0?new o(n.lineNumber,n.column+this.columnCount):new o(n.lineNumber+this.lineCount,this.columnCount+1)}toString(){return`${this.lineCount},${this.columnCount}`}};function E(t,n){return!(n.lineNumber<t.startLineNumber||n.lineNumber>t.endLineNumber||n.lineNumber===t.startLineNumber&&n.column<t.startColumn||n.lineNumber===t.endLineNumber&&n.column>=t.endColumn)}function y(t){return t.startLineNumber===t.endLineNumber?new m(0,t.endColumn-t.startColumn):new m(t.endLineNumber-t.startLineNumber,t.endColumn-1)}function S(t,n){return t.lineNumber===n.lineNumber?new m(0,n.column-t.column):new m(n.lineNumber-t.lineNumber,n.column-1)}function q(t,n){return n.lineCount===0?new o(t.lineNumber,t.column+n.columnCount):new o(t.lineNumber+n.lineCount,n.columnCount+1)}function O(t,n){return t.endLineNumber<n.startLineNumber||t.endLineNumber===n.startLineNumber&&t.endColumn<=n.startColumn}export{q as addLength,S as lengthBetweenPositions,y as lengthOfRange,E as rangeContainsPosition,O as rangeIsBeforeOrTouching};
