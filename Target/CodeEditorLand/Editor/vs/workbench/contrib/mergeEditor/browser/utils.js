var p=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var u=(r,e,t,i)=>{for(var o=i>1?void 0:i?g(e,t):e,a=r.length-1,n;a>=0;a--)(n=r[a])&&(o=(i?n(e,t,o):n(o))||o);return i&&o&&p(e,t,o),o},d=(r,e)=>(t,i)=>e(t,i,r);import{ArrayQueue as c,CompareResult as s}from"../../../../../vs/base/common/arrays.js";import{onUnexpectedError as T}from"../../../../../vs/base/common/errors.js";import{DisposableStore as b,toDisposable as m}from"../../../../../vs/base/common/lifecycle.js";import{autorunOpts as y}from"../../../../../vs/base/common/observable.js";import"../../../../../vs/editor/browser/widget/codeEditor/codeEditorWidget.js";import"../../../../../vs/editor/common/model.js";import{IStorageService as v,StorageScope as h,StorageTarget as I}from"../../../../../vs/platform/storage/common/storage.js";function G(r,e){Object.entries(e).forEach(([t,i])=>{r.style.setProperty(t,R(i))})}function R(r){return typeof r=="number"?`${r}px`:r}function M(r,e){const t=new b;let i=[];return t.add(y({debugName:()=>`Apply decorations from ${e.debugName}`},o=>{const a=e.read(o);r.changeDecorations(n=>{i=n.deltaDecorations(i,a)})})),t.add({dispose:()=>{r.changeDecorations(o=>{i=o.deltaDecorations(i,[])})}}),t}function*V(r,e,t){const i=new c(e);for(const o of r){i.takeWhile(n=>s.isGreaterThan(t(o,n)));const a=i.takeWhile(n=>s.isNeitherLessOrGreaterThan(t(o,n)));yield{left:o,rights:a||[]}}}function*F(r,e,t){const i=new c(e);for(const o of r){const a=i.takeWhile(f=>s.isGreaterThan(t(o,f)));a&&(yield{rights:a});const n=i.takeWhile(f=>s.isNeitherLessOrGreaterThan(t(o,f)));yield{left:o,rights:n||[]}}}function J(...r){return[].concat(...r)}function P(r,e){return r[e]}function Q(r,e){let t=!1;return r.then(()=>{t||e()}),m(()=>{t=!0})}function U(r,e){return Object.assign(r,e)}function x(r,e){const t={};for(const i in r)t[i]=r[i];for(const i in e){const o=e[i];typeof t[i]=="object"&&o&&typeof o=="object"?t[i]=x(t[i],o):t[i]=o}return t}let l=class{constructor(e,t){this.key=e;this.storageService=t}hasValue=!1;value=void 0;get(){if(!this.hasValue){const e=this.storageService.get(this.key,h.PROFILE);if(e!==void 0)try{this.value=JSON.parse(e)}catch(t){T(t)}this.hasValue=!0}return this.value}set(e){this.value=e,this.storageService.store(this.key,JSON.stringify(this.value),h.PROFILE,I.USER)}};l=u([d(1,v)],l);export{l as PersistentStore,M as applyObservableDecorations,J as concatArrays,x as deepMerge,P as elementAtOrUndefined,F as join,V as leftJoin,U as setFields,G as setStyle,Q as thenIfNotDisposed};
