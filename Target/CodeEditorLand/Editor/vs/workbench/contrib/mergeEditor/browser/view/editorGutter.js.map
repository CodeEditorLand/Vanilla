{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/mergeEditor/browser/view/editorGutter.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { h, reset } from '../../../../../base/browser/dom.js';\nimport { Disposable, IDisposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { autorun, IReader, observableFromEvent, observableSignal, observableSignalFromEvent, transaction } from '../../../../../base/common/observable.js';\nimport { CodeEditorWidget } from '../../../../../editor/browser/widget/codeEditor/codeEditorWidget.js';\nimport { LineRange } from '../model/lineRange.js';\n\nexport class EditorGutter<T extends IGutterItemInfo = IGutterItemInfo> extends Disposable {\n\tprivate readonly scrollTop = observableFromEvent(this,\n\t\tthis._editor.onDidScrollChange,\n\t\t(e) => /** @description editor.onDidScrollChange */ this._editor.getScrollTop()\n\t);\n\tprivate readonly isScrollTopZero = this.scrollTop.map((scrollTop) => /** @description isScrollTopZero */ scrollTop === 0);\n\tprivate readonly modelAttached = observableFromEvent(this,\n\t\tthis._editor.onDidChangeModel,\n\t\t(e) => /** @description editor.onDidChangeModel */ this._editor.hasModel()\n\t);\n\n\tprivate readonly editorOnDidChangeViewZones = observableSignalFromEvent('onDidChangeViewZones', this._editor.onDidChangeViewZones);\n\tprivate readonly editorOnDidContentSizeChange = observableSignalFromEvent('onDidContentSizeChange', this._editor.onDidContentSizeChange);\n\tprivate readonly domNodeSizeChanged = observableSignal('domNodeSizeChanged');\n\n\tconstructor(\n\t\tprivate readonly _editor: CodeEditorWidget,\n\t\tprivate readonly _domNode: HTMLElement,\n\t\tprivate readonly itemProvider: IGutterItemProvider<T>\n\t) {\n\t\tsuper();\n\t\tthis._domNode.className = 'gutter monaco-editor';\n\t\tconst scrollDecoration = this._domNode.appendChild(\n\t\t\th('div.scroll-decoration', { role: 'presentation', ariaHidden: 'true', style: { width: '100%' } })\n\t\t\t\t.root\n\t\t);\n\n\t\tconst o = new ResizeObserver(() => {\n\t\t\ttransaction(tx => {\n\t\t\t\t/** @description ResizeObserver: size changed */\n\t\t\t\tthis.domNodeSizeChanged.trigger(tx);\n\t\t\t});\n\t\t});\n\t\to.observe(this._domNode);\n\t\tthis._register(toDisposable(() => o.disconnect()));\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description update scroll decoration */\n\t\t\tscrollDecoration.className = this.isScrollTopZero.read(reader) ? '' : 'scroll-decoration';\n\t\t}));\n\n\t\tthis._register(autorun(reader => /** @description EditorGutter.Render */ this.render(reader)));\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\treset(this._domNode);\n\t}\n\n\tprivate readonly views = new Map<string, ManagedGutterItemView>();\n\n\tprivate render(reader: IReader): void {\n\t\tif (!this.modelAttached.read(reader)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.domNodeSizeChanged.read(reader);\n\t\tthis.editorOnDidChangeViewZones.read(reader);\n\t\tthis.editorOnDidContentSizeChange.read(reader);\n\n\t\tconst scrollTop = this.scrollTop.read(reader);\n\n\t\tconst visibleRanges = this._editor.getVisibleRanges();\n\t\tconst unusedIds = new Set(this.views.keys());\n\n\t\tif (visibleRanges.length > 0) {\n\t\t\tconst visibleRange = visibleRanges[0];\n\n\t\t\tconst visibleRange2 = new LineRange(\n\t\t\t\tvisibleRange.startLineNumber,\n\t\t\t\tvisibleRange.endLineNumber - visibleRange.startLineNumber\n\t\t\t).deltaEnd(1);\n\n\t\t\tconst gutterItems = this.itemProvider.getIntersectingGutterItems(\n\t\t\t\tvisibleRange2,\n\t\t\t\treader\n\t\t\t);\n\n\t\t\tfor (const gutterItem of gutterItems) {\n\t\t\t\tif (!gutterItem.range.touches(visibleRange2)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tunusedIds.delete(gutterItem.id);\n\t\t\t\tlet view = this.views.get(gutterItem.id);\n\t\t\t\tif (!view) {\n\t\t\t\t\tconst viewDomNode = document.createElement('div');\n\t\t\t\t\tthis._domNode.appendChild(viewDomNode);\n\t\t\t\t\tconst itemView = this.itemProvider.createView(\n\t\t\t\t\t\tgutterItem,\n\t\t\t\t\t\tviewDomNode\n\t\t\t\t\t);\n\t\t\t\t\tview = new ManagedGutterItemView(itemView, viewDomNode);\n\t\t\t\t\tthis.views.set(gutterItem.id, view);\n\t\t\t\t} else {\n\t\t\t\t\tview.gutterItemView.update(gutterItem);\n\t\t\t\t}\n\n\t\t\t\tconst top =\n\t\t\t\t\tgutterItem.range.startLineNumber <= this._editor.getModel()!.getLineCount()\n\t\t\t\t\t\t? this._editor.getTopForLineNumber(gutterItem.range.startLineNumber, true) - scrollTop\n\t\t\t\t\t\t: this._editor.getBottomForLineNumber(gutterItem.range.startLineNumber - 1, false) - scrollTop;\n\t\t\t\tconst bottom = this._editor.getBottomForLineNumber(gutterItem.range.endLineNumberExclusive - 1, true) - scrollTop;\n\n\t\t\t\tconst height = bottom - top;\n\n\t\t\t\tview.domNode.style.top = `${top}px`;\n\t\t\t\tview.domNode.style.height = `${height}px`;\n\n\t\t\t\tview.gutterItemView.layout(top, height, 0, this._domNode.clientHeight);\n\t\t\t}\n\t\t}\n\n\t\tfor (const id of unusedIds) {\n\t\t\tconst view = this.views.get(id)!;\n\t\t\tview.gutterItemView.dispose();\n\t\t\tview.domNode.remove();\n\t\t\tthis.views.delete(id);\n\t\t}\n\t}\n}\n\nclass ManagedGutterItemView {\n\tconstructor(\n\t\tpublic readonly gutterItemView: IGutterItemView<any>,\n\t\tpublic readonly domNode: HTMLDivElement\n\t) { }\n}\n\nexport interface IGutterItemProvider<TItem extends IGutterItemInfo> {\n\tgetIntersectingGutterItems(range: LineRange, reader: IReader): TItem[];\n\n\tcreateView(item: TItem, target: HTMLElement): IGutterItemView<TItem>;\n}\n\nexport interface IGutterItemInfo {\n\tid: string;\n\trange: LineRange;\n}\n\nexport interface IGutterItemView<T extends IGutterItemInfo> extends IDisposable {\n\tupdate(item: T): void;\n\tlayout(top: number, height: number, viewTop: number, viewHeight: number): void;\n}\n"],
  "mappings": "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",
  "names": []
}
