{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/mergeEditor/browser/view/editors/inputCodeEditorView.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tEventType,\n\taddDisposableListener,\n\th,\n\treset,\n} from \"../../../../../../base/browser/dom.js\";\nimport { renderLabelWithIcons } from \"../../../../../../base/browser/ui/iconLabel/iconLabels.js\";\nimport { Toggle } from \"../../../../../../base/browser/ui/toggle/toggle.js\";\nimport {\n\tAction,\n\ttype IAction,\n\tSeparator,\n} from \"../../../../../../base/common/actions.js\";\nimport { Codicon } from \"../../../../../../base/common/codicons.js\";\nimport { Disposable } from \"../../../../../../base/common/lifecycle.js\";\nimport { clamp } from \"../../../../../../base/common/numbers.js\";\nimport {\n\ttype IObservable,\n\ttype ISettableObservable,\n\ttype ITransaction,\n\tautorun,\n\tautorunOpts,\n\tderived,\n\tderivedOpts,\n\tobservableValue,\n\ttransaction,\n} from \"../../../../../../base/common/observable.js\";\nimport { noBreakWhitespace } from \"../../../../../../base/common/strings.js\";\nimport type { ThemeIcon } from \"../../../../../../base/common/themables.js\";\nimport { isDefined } from \"../../../../../../base/common/types.js\";\nimport {\n\ttype IModelDeltaDecoration,\n\tMinimapPosition,\n\tOverviewRulerLane,\n} from \"../../../../../../editor/common/model.js\";\nimport { localize } from \"../../../../../../nls.js\";\nimport { MenuId } from \"../../../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../../../platform/configuration/common/configuration.js\";\nimport { IContextMenuService } from \"../../../../../../platform/contextview/browser/contextView.js\";\nimport { IInstantiationService } from \"../../../../../../platform/instantiation/common/instantiation.js\";\nimport { defaultToggleStyles } from \"../../../../../../platform/theme/browser/defaultStyles.js\";\nimport {\n\tInputState,\n\ttype ModifiedBaseRange,\n\ttype ModifiedBaseRangeState,\n} from \"../../model/modifiedBaseRange.js\";\nimport { applyObservableDecorations, setFields } from \"../../utils.js\";\nimport {\n\thandledConflictMinimapOverViewRulerColor,\n\tunhandledConflictMinimapOverViewRulerColor,\n} from \"../colors.js\";\nimport {\n\tEditorGutter,\n\ttype IGutterItemInfo,\n\ttype IGutterItemView,\n} from \"../editorGutter.js\";\nimport type { MergeEditorViewModel } from \"../viewModel.js\";\nimport {\n\tCodeEditorView,\n\tTitleMenu,\n\tcreateSelectionsAutorun,\n} from \"./codeEditorView.js\";\n\nexport class InputCodeEditorView extends CodeEditorView {\n\tpublic readonly otherInputNumber = this.inputNumber === 1 ? 2 : 1;\n\n\tconstructor(\n\t\tpublic readonly inputNumber: 1 | 2,\n\t\tviewModel: IObservable<MergeEditorViewModel | undefined>,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper(instantiationService, viewModel, configurationService);\n\n\t\tthis.htmlElements.root.classList.add(`input`);\n\n\t\tthis._register(\n\t\t\tnew EditorGutter(this.editor, this.htmlElements.gutterDiv, {\n\t\t\t\tgetIntersectingGutterItems: (range, reader) => {\n\t\t\t\t\tif (this.checkboxesVisible.read(reader)) {\n\t\t\t\t\t\treturn this.modifiedBaseRangeGutterItemInfos.read(\n\t\t\t\t\t\t\treader,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcreateView: (item, target) =>\n\t\t\t\t\tnew MergeConflictGutterItemView(\n\t\t\t\t\t\titem,\n\t\t\t\t\t\ttarget,\n\t\t\t\t\t\tcontextMenuService,\n\t\t\t\t\t),\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tcreateSelectionsAutorun(this, (baseRange, viewModel) =>\n\t\t\t\tviewModel.model.translateBaseRangeToInput(\n\t\t\t\t\tthis.inputNumber,\n\t\t\t\t\tbaseRange,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tinstantiationService.createInstance(\n\t\t\t\tTitleMenu,\n\t\t\t\tinputNumber === 1\n\t\t\t\t\t? MenuId.MergeInput1Toolbar\n\t\t\t\t\t: MenuId.MergeInput2Toolbar,\n\t\t\t\tthis.htmlElements.toolbar,\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tautorunOpts(\n\t\t\t\t{\n\t\t\t\t\tdebugName: `input${this.inputNumber}: update labels & text model`,\n\t\t\t\t},\n\t\t\t\t(reader) => {\n\t\t\t\t\tconst vm = this.viewModel.read(reader);\n\t\t\t\t\tif (!vm) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.editor.setModel(\n\t\t\t\t\t\tthis.inputNumber === 1\n\t\t\t\t\t\t\t? vm.model.input1.textModel\n\t\t\t\t\t\t\t: vm.model.input2.textModel,\n\t\t\t\t\t);\n\n\t\t\t\t\tconst title =\n\t\t\t\t\t\tthis.inputNumber === 1\n\t\t\t\t\t\t\t? vm.model.input1.title ||\n\t\t\t\t\t\t\t\tlocalize(\"input1\", \"Input 1\")\n\t\t\t\t\t\t\t: vm.model.input2.title ||\n\t\t\t\t\t\t\t\tlocalize(\"input2\", \"Input 2\");\n\n\t\t\t\t\tconst description =\n\t\t\t\t\t\tthis.inputNumber === 1\n\t\t\t\t\t\t\t? vm.model.input1.description\n\t\t\t\t\t\t\t: vm.model.input2.description;\n\n\t\t\t\t\tconst detail =\n\t\t\t\t\t\tthis.inputNumber === 1\n\t\t\t\t\t\t\t? vm.model.input1.detail\n\t\t\t\t\t\t\t: vm.model.input2.detail;\n\n\t\t\t\t\treset(\n\t\t\t\t\t\tthis.htmlElements.title,\n\t\t\t\t\t\t...renderLabelWithIcons(title),\n\t\t\t\t\t);\n\t\t\t\t\treset(\n\t\t\t\t\t\tthis.htmlElements.description,\n\t\t\t\t\t\t...(description\n\t\t\t\t\t\t\t? renderLabelWithIcons(description)\n\t\t\t\t\t\t\t: []),\n\t\t\t\t\t);\n\t\t\t\t\treset(\n\t\t\t\t\t\tthis.htmlElements.detail,\n\t\t\t\t\t\t...(detail ? renderLabelWithIcons(detail) : []),\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tapplyObservableDecorations(this.editor, this.decorations),\n\t\t);\n\t}\n\n\tprivate readonly modifiedBaseRangeGutterItemInfos = derivedOpts(\n\t\t{\n\t\t\tdebugName: `input${this.inputNumber}.modifiedBaseRangeGutterItemInfos`,\n\t\t},\n\t\t(reader) => {\n\t\t\tconst viewModel = this.viewModel.read(reader);\n\t\t\tif (!viewModel) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tconst model = viewModel.model;\n\t\t\tconst inputNumber = this.inputNumber;\n\n\t\t\tconst showNonConflictingChanges =\n\t\t\t\tviewModel.showNonConflictingChanges.read(reader);\n\n\t\t\treturn model.modifiedBaseRanges\n\t\t\t\t.read(reader)\n\t\t\t\t.filter(\n\t\t\t\t\t(r) =>\n\t\t\t\t\t\tr.getInputDiffs(this.inputNumber).length > 0 &&\n\t\t\t\t\t\t(showNonConflictingChanges ||\n\t\t\t\t\t\t\tr.isConflicting ||\n\t\t\t\t\t\t\t!model.isHandled(r).read(reader)),\n\t\t\t\t)\n\t\t\t\t.map(\n\t\t\t\t\t(baseRange, idx) =>\n\t\t\t\t\t\tnew ModifiedBaseRangeGutterItemModel(\n\t\t\t\t\t\t\tidx.toString(),\n\t\t\t\t\t\t\tbaseRange,\n\t\t\t\t\t\t\tinputNumber,\n\t\t\t\t\t\t\tviewModel,\n\t\t\t\t\t\t),\n\t\t\t\t);\n\t\t},\n\t);\n\n\tprivate readonly decorations = derivedOpts(\n\t\t{ debugName: `input${this.inputNumber}.decorations` },\n\t\t(reader) => {\n\t\t\tconst viewModel = this.viewModel.read(reader);\n\t\t\tif (!viewModel) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tconst model = viewModel.model;\n\t\t\tconst textModel = (\n\t\t\t\tthis.inputNumber === 1 ? model.input1 : model.input2\n\t\t\t).textModel;\n\n\t\t\tconst activeModifiedBaseRange =\n\t\t\t\tviewModel.activeModifiedBaseRange.read(reader);\n\n\t\t\tconst result = new Array<IModelDeltaDecoration>();\n\n\t\t\tconst showNonConflictingChanges =\n\t\t\t\tviewModel.showNonConflictingChanges.read(reader);\n\t\t\tconst showDeletionMarkers = this.showDeletionMarkers.read(reader);\n\t\t\tconst diffWithThis =\n\t\t\t\tviewModel.baseCodeEditorView.read(reader) !== undefined &&\n\t\t\t\tviewModel.baseShowDiffAgainst.read(reader) === this.inputNumber;\n\t\t\tconst useSimplifiedDecorations =\n\t\t\t\t!diffWithThis && this.useSimplifiedDecorations.read(reader);\n\n\t\t\tfor (const modifiedBaseRange of model.modifiedBaseRanges.read(\n\t\t\t\treader,\n\t\t\t)) {\n\t\t\t\tconst range = modifiedBaseRange.getInputRange(this.inputNumber);\n\t\t\t\tif (!range) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst blockClassNames = [\"merge-editor-block\"];\n\t\t\t\tlet blockPadding: [\n\t\t\t\t\ttop: number,\n\t\t\t\t\tright: number,\n\t\t\t\t\tbottom: number,\n\t\t\t\t\tleft: number,\n\t\t\t\t] = [0, 0, 0, 0];\n\t\t\t\tconst isHandled = model\n\t\t\t\t\t.isInputHandled(modifiedBaseRange, this.inputNumber)\n\t\t\t\t\t.read(reader);\n\t\t\t\tif (isHandled) {\n\t\t\t\t\tblockClassNames.push(\"handled\");\n\t\t\t\t}\n\t\t\t\tif (modifiedBaseRange === activeModifiedBaseRange) {\n\t\t\t\t\tblockClassNames.push(\"focused\");\n\t\t\t\t\tblockPadding = [0, 2, 0, 2];\n\t\t\t\t}\n\t\t\t\tif (modifiedBaseRange.isConflicting) {\n\t\t\t\t\tblockClassNames.push(\"conflicting\");\n\t\t\t\t}\n\t\t\t\tconst inputClassName =\n\t\t\t\t\tthis.inputNumber === 1 ? \"input i1\" : \"input i2\";\n\t\t\t\tblockClassNames.push(inputClassName);\n\n\t\t\t\tif (\n\t\t\t\t\t!modifiedBaseRange.isConflicting &&\n\t\t\t\t\t!showNonConflictingChanges &&\n\t\t\t\t\tisHandled\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (useSimplifiedDecorations && !isHandled) {\n\t\t\t\t\tblockClassNames.push(\"use-simplified-decorations\");\n\t\t\t\t}\n\n\t\t\t\tresult.push({\n\t\t\t\t\trange: range.toInclusiveRangeOrEmpty(),\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tshowIfCollapsed: true,\n\t\t\t\t\t\tblockClassName: blockClassNames.join(\" \"),\n\t\t\t\t\t\tblockPadding,\n\t\t\t\t\t\tblockIsAfterEnd:\n\t\t\t\t\t\t\trange.startLineNumber > textModel.getLineCount(),\n\t\t\t\t\t\tdescription: \"Merge Editor\",\n\t\t\t\t\t\tminimap: {\n\t\t\t\t\t\t\tposition: MinimapPosition.Gutter,\n\t\t\t\t\t\t\tcolor: {\n\t\t\t\t\t\t\t\tid: isHandled\n\t\t\t\t\t\t\t\t\t? handledConflictMinimapOverViewRulerColor\n\t\t\t\t\t\t\t\t\t: unhandledConflictMinimapOverViewRulerColor,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\toverviewRuler: modifiedBaseRange.isConflicting\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\tposition: OverviewRulerLane.Center,\n\t\t\t\t\t\t\t\t\tcolor: {\n\t\t\t\t\t\t\t\t\t\tid: isHandled\n\t\t\t\t\t\t\t\t\t\t\t? handledConflictMinimapOverViewRulerColor\n\t\t\t\t\t\t\t\t\t\t\t: unhandledConflictMinimapOverViewRulerColor,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t},\n\t\t\t\t});\n\n\t\t\t\tif (\n\t\t\t\t\t!useSimplifiedDecorations &&\n\t\t\t\t\t(modifiedBaseRange.isConflicting ||\n\t\t\t\t\t\t!model.isHandled(modifiedBaseRange).read(reader))\n\t\t\t\t) {\n\t\t\t\t\tconst inputDiffs = modifiedBaseRange.getInputDiffs(\n\t\t\t\t\t\tthis.inputNumber,\n\t\t\t\t\t);\n\t\t\t\t\tfor (const diff of inputDiffs) {\n\t\t\t\t\t\tconst range = diff.outputRange.toInclusiveRange();\n\t\t\t\t\t\tif (range) {\n\t\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\t\trange,\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\tclassName: `merge-editor-diff ${inputClassName}`,\n\t\t\t\t\t\t\t\t\tdescription: \"Merge Editor\",\n\t\t\t\t\t\t\t\t\tisWholeLine: true,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (diff.rangeMappings) {\n\t\t\t\t\t\t\tfor (const d of diff.rangeMappings) {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tshowDeletionMarkers ||\n\t\t\t\t\t\t\t\t\t!d.outputRange.isEmpty()\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\t\t\t\trange: d.outputRange,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\tclassName: d.outputRange.isEmpty()\n\t\t\t\t\t\t\t\t\t\t\t\t? `merge-editor-diff-empty-word ${inputClassName}`\n\t\t\t\t\t\t\t\t\t\t\t\t: `merge-editor-diff-word ${inputClassName}`,\n\t\t\t\t\t\t\t\t\t\t\tdescription: \"Merge Editor\",\n\t\t\t\t\t\t\t\t\t\t\tshowIfCollapsed: true,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\t);\n}\n\nexport class ModifiedBaseRangeGutterItemModel implements IGutterItemInfo {\n\tprivate readonly model = this.viewModel.model;\n\tpublic readonly range = this.baseRange.getInputRange(this.inputNumber);\n\n\tconstructor(\n\t\tpublic readonly id: string,\n\t\tprivate readonly baseRange: ModifiedBaseRange,\n\t\tprivate readonly inputNumber: 1 | 2,\n\t\tprivate readonly viewModel: MergeEditorViewModel,\n\t) {}\n\n\tpublic readonly enabled = this.model.isUpToDate;\n\n\tpublic readonly toggleState: IObservable<InputState> = derived(\n\t\tthis,\n\t\t(reader) => {\n\t\t\tconst input = this.model\n\t\t\t\t.getState(this.baseRange)\n\t\t\t\t.read(reader)\n\t\t\t\t.getInput(this.inputNumber);\n\t\t\treturn input === InputState.second &&\n\t\t\t\t!this.baseRange.isOrderRelevant\n\t\t\t\t? InputState.first\n\t\t\t\t: input;\n\t\t},\n\t);\n\n\tpublic readonly state: IObservable<{ handled: boolean; focused: boolean }> =\n\t\tderived(this, (reader) => {\n\t\t\tconst active = this.viewModel.activeModifiedBaseRange.read(reader);\n\t\t\tif (!this.model.hasBaseRange(this.baseRange)) {\n\t\t\t\treturn { handled: false, focused: false }; // Invalid state, should only be observed temporarily\n\t\t\t}\n\t\t\treturn {\n\t\t\t\thandled: this.model.isHandled(this.baseRange).read(reader),\n\t\t\t\tfocused: this.baseRange === active,\n\t\t\t};\n\t\t});\n\n\tpublic setState(value: boolean, tx: ITransaction): void {\n\t\tthis.viewModel.setState(\n\t\t\tthis.baseRange,\n\t\t\tthis.model\n\t\t\t\t.getState(this.baseRange)\n\t\t\t\t.get()\n\t\t\t\t.withInputValue(this.inputNumber, value),\n\t\t\ttx,\n\t\t\tthis.inputNumber,\n\t\t);\n\t}\n\tpublic toggleBothSides(): void {\n\t\ttransaction((tx) => {\n\t\t\t/** @description Context Menu: toggle both sides */\n\t\t\tconst state = this.model.getState(this.baseRange).get();\n\t\t\tthis.model.setState(\n\t\t\t\tthis.baseRange,\n\t\t\t\tstate\n\t\t\t\t\t.toggle(this.inputNumber)\n\t\t\t\t\t.toggle(this.inputNumber === 1 ? 2 : 1),\n\t\t\t\ttrue,\n\t\t\t\ttx,\n\t\t\t);\n\t\t});\n\t}\n\n\tpublic getContextMenuActions(): readonly IAction[] {\n\t\tconst state = this.model.getState(this.baseRange).get();\n\t\tconst handled = this.model.isHandled(this.baseRange).get();\n\n\t\tconst update = (newState: ModifiedBaseRangeState) => {\n\t\t\ttransaction((tx) => {\n\t\t\t\t/** @description Context Menu: Update Base Range State */\n\t\t\t\treturn this.viewModel.setState(\n\t\t\t\t\tthis.baseRange,\n\t\t\t\t\tnewState,\n\t\t\t\t\ttx,\n\t\t\t\t\tthis.inputNumber,\n\t\t\t\t);\n\t\t\t});\n\t\t};\n\n\t\tfunction action(\n\t\t\tid: string,\n\t\t\tlabel: string,\n\t\t\ttargetState: ModifiedBaseRangeState,\n\t\t\tchecked: boolean,\n\t\t) {\n\t\t\tconst action = new Action(id, label, undefined, true, () => {\n\t\t\t\tupdate(targetState);\n\t\t\t});\n\t\t\taction.checked = checked;\n\t\t\treturn action;\n\t\t}\n\t\tconst both = state.includesInput1 && state.includesInput2;\n\n\t\treturn [\n\t\t\tthis.baseRange.input1Diffs.length > 0\n\t\t\t\t? action(\n\t\t\t\t\t\t\"mergeEditor.acceptInput1\",\n\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\"mergeEditor.accept\",\n\t\t\t\t\t\t\t\"Accept {0}\",\n\t\t\t\t\t\t\tthis.model.input1.title,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tstate.toggle(1),\n\t\t\t\t\t\tstate.includesInput1,\n\t\t\t\t\t)\n\t\t\t\t: undefined,\n\t\t\tthis.baseRange.input2Diffs.length > 0\n\t\t\t\t? action(\n\t\t\t\t\t\t\"mergeEditor.acceptInput2\",\n\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\"mergeEditor.accept\",\n\t\t\t\t\t\t\t\"Accept {0}\",\n\t\t\t\t\t\t\tthis.model.input2.title,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tstate.toggle(2),\n\t\t\t\t\t\tstate.includesInput2,\n\t\t\t\t\t)\n\t\t\t\t: undefined,\n\t\t\tthis.baseRange.isConflicting\n\t\t\t\t? setFields(\n\t\t\t\t\t\taction(\n\t\t\t\t\t\t\t\"mergeEditor.acceptBoth\",\n\t\t\t\t\t\t\tlocalize(\"mergeEditor.acceptBoth\", \"Accept Both\"),\n\t\t\t\t\t\t\tstate\n\t\t\t\t\t\t\t\t.withInputValue(1, !both)\n\t\t\t\t\t\t\t\t.withInputValue(2, !both),\n\t\t\t\t\t\t\tboth,\n\t\t\t\t\t\t),\n\t\t\t\t\t\t{ enabled: this.baseRange.canBeCombined },\n\t\t\t\t\t)\n\t\t\t\t: undefined,\n\t\t\tnew Separator(),\n\t\t\tthis.baseRange.isConflicting\n\t\t\t\t? setFields(\n\t\t\t\t\t\taction(\n\t\t\t\t\t\t\t\"mergeEditor.swap\",\n\t\t\t\t\t\t\tlocalize(\"mergeEditor.swap\", \"Swap\"),\n\t\t\t\t\t\t\tstate.swap(),\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tenabled:\n\t\t\t\t\t\t\t\t!state.kind &&\n\t\t\t\t\t\t\t\t(!both || this.baseRange.isOrderRelevant),\n\t\t\t\t\t\t},\n\t\t\t\t\t)\n\t\t\t\t: undefined,\n\n\t\t\tsetFields(\n\t\t\t\tnew Action(\n\t\t\t\t\t\"mergeEditor.markAsHandled\",\n\t\t\t\t\tlocalize(\"mergeEditor.markAsHandled\", \"Mark as Handled\"),\n\t\t\t\t\tundefined,\n\t\t\t\t\ttrue,\n\t\t\t\t\t() => {\n\t\t\t\t\t\ttransaction((tx) => {\n\t\t\t\t\t\t\t/** @description Context Menu: Mark as handled */\n\t\t\t\t\t\t\tthis.model.setHandled(this.baseRange, !handled, tx);\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t\t{ checked: handled },\n\t\t\t),\n\t\t].filter(isDefined);\n\t}\n}\n\nexport class MergeConflictGutterItemView\n\textends Disposable\n\timplements IGutterItemView<ModifiedBaseRangeGutterItemModel>\n{\n\tprivate readonly item: ISettableObservable<ModifiedBaseRangeGutterItemModel>;\n\n\tprivate readonly checkboxDiv: HTMLDivElement;\n\tprivate readonly isMultiLine = observableValue(this, false);\n\n\tconstructor(\n\t\titem: ModifiedBaseRangeGutterItemModel,\n\t\ttarget: HTMLElement,\n\t\tcontextMenuService: IContextMenuService,\n\t) {\n\t\tsuper();\n\n\t\tthis.item = observableValue(this, item);\n\n\t\tconst checkBox = new Toggle({\n\t\t\tisChecked: false,\n\t\t\ttitle: \"\",\n\t\t\ticon: Codicon.check,\n\t\t\t...defaultToggleStyles,\n\t\t});\n\t\tcheckBox.domNode.classList.add(\"accept-conflict-group\");\n\n\t\tthis._register(\n\t\t\taddDisposableListener(\n\t\t\t\tcheckBox.domNode,\n\t\t\t\tEventType.MOUSE_DOWN,\n\t\t\t\t(e) => {\n\t\t\t\t\tconst item = this.item.get();\n\t\t\t\t\tif (!item) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (e.button === /* Right */ 2) {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\tcontextMenuService.showContextMenu({\n\t\t\t\t\t\t\tgetAnchor: () => checkBox.domNode,\n\t\t\t\t\t\t\tgetActions: () => item.getContextMenuActions(),\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (e.button === /* Middle */ 1) {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\titem.toggleBothSides();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tautorun((reader) => {\n\t\t\t\t/** @description Update Checkbox */\n\t\t\t\tconst item = this.item.read(reader)!;\n\t\t\t\tconst value = item.toggleState.read(reader);\n\t\t\t\tconst iconMap: Record<\n\t\t\t\t\tInputState,\n\t\t\t\t\t{\n\t\t\t\t\t\ticon: ThemeIcon | undefined;\n\t\t\t\t\t\tchecked: boolean;\n\t\t\t\t\t\ttitle: string;\n\t\t\t\t\t}\n\t\t\t\t> = {\n\t\t\t\t\t[InputState.excluded]: {\n\t\t\t\t\t\ticon: undefined,\n\t\t\t\t\t\tchecked: false,\n\t\t\t\t\t\ttitle: localize(\"accept.excluded\", \"Accept\"),\n\t\t\t\t\t},\n\t\t\t\t\t[InputState.unrecognized]: {\n\t\t\t\t\t\ticon: Codicon.circleFilled,\n\t\t\t\t\t\tchecked: false,\n\t\t\t\t\t\ttitle: localize(\n\t\t\t\t\t\t\t\"accept.conflicting\",\n\t\t\t\t\t\t\t\"Accept (result is dirty)\",\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\t[InputState.first]: {\n\t\t\t\t\t\ticon: Codicon.check,\n\t\t\t\t\t\tchecked: true,\n\t\t\t\t\t\ttitle: localize(\"accept.first\", \"Undo accept\"),\n\t\t\t\t\t},\n\t\t\t\t\t[InputState.second]: {\n\t\t\t\t\t\ticon: Codicon.checkAll,\n\t\t\t\t\t\tchecked: true,\n\t\t\t\t\t\ttitle: localize(\n\t\t\t\t\t\t\t\"accept.second\",\n\t\t\t\t\t\t\t\"Undo accept (currently second)\",\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\tconst state = iconMap[value];\n\t\t\t\tcheckBox.setIcon(state.icon);\n\t\t\t\tcheckBox.checked = state.checked;\n\t\t\t\tcheckBox.setTitle(state.title);\n\n\t\t\t\tif (item.enabled.read(reader)) {\n\t\t\t\t\tcheckBox.enable();\n\t\t\t\t} else {\n\t\t\t\t\tcheckBox.disable();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tautorun((reader) => {\n\t\t\t\t/** @description Update Checkbox CSS ClassNames */\n\t\t\t\tconst state = this.item.read(reader).state.read(reader);\n\t\t\t\tconst classNames = [\n\t\t\t\t\t\"merge-accept-gutter-marker\",\n\t\t\t\t\tstate.handled && \"handled\",\n\t\t\t\t\tstate.focused && \"focused\",\n\t\t\t\t\tthis.isMultiLine.read(reader)\n\t\t\t\t\t\t? \"multi-line\"\n\t\t\t\t\t\t: \"single-line\",\n\t\t\t\t];\n\t\t\t\ttarget.className = classNames\n\t\t\t\t\t.filter((c) => typeof c === \"string\")\n\t\t\t\t\t.join(\" \");\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tcheckBox.onChange(() => {\n\t\t\t\ttransaction((tx) => {\n\t\t\t\t\t/** @description Handle Checkbox Change */\n\t\t\t\t\tthis.item.get()!.setState(checkBox.checked, tx);\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\n\t\ttarget.appendChild(h(\"div.background\", [noBreakWhitespace]).root);\n\t\ttarget.appendChild(\n\t\t\t(this.checkboxDiv = h(\"div.checkbox\", [\n\t\t\t\th(\"div.checkbox-background\", [checkBox.domNode]),\n\t\t\t]).root),\n\t\t);\n\t}\n\n\tlayout(\n\t\ttop: number,\n\t\theight: number,\n\t\tviewTop: number,\n\t\tviewHeight: number,\n\t): void {\n\t\tconst checkboxHeight = this.checkboxDiv.clientHeight;\n\t\tconst middleHeight = height / 2 - checkboxHeight / 2;\n\n\t\tconst margin = checkboxHeight;\n\n\t\tlet effectiveCheckboxTop = top + middleHeight;\n\n\t\tconst preferredViewPortRange = [\n\t\t\tmargin,\n\t\t\tviewTop + viewHeight - margin - checkboxHeight,\n\t\t];\n\n\t\tconst preferredParentRange = [\n\t\t\ttop + margin,\n\t\t\ttop + height - checkboxHeight - margin,\n\t\t];\n\n\t\tif (preferredParentRange[0] < preferredParentRange[1]) {\n\t\t\teffectiveCheckboxTop = clamp(\n\t\t\t\teffectiveCheckboxTop,\n\t\t\t\tpreferredViewPortRange[0],\n\t\t\t\tpreferredViewPortRange[1],\n\t\t\t);\n\t\t\teffectiveCheckboxTop = clamp(\n\t\t\t\teffectiveCheckboxTop,\n\t\t\t\tpreferredParentRange[0],\n\t\t\t\tpreferredParentRange[1],\n\t\t\t);\n\t\t}\n\n\t\tthis.checkboxDiv.style.top = `${effectiveCheckboxTop - top}px`;\n\n\t\ttransaction((tx) => {\n\t\t\t/** @description MergeConflictGutterItemView: Update Is Multi Line */\n\t\t\tthis.isMultiLine.set(height > 30, tx);\n\t\t});\n\t}\n\n\tupdate(baseRange: ModifiedBaseRangeGutterItemModel): void {\n\t\ttransaction((tx) => {\n\t\t\t/** @description MergeConflictGutterItemView: Updating new base range */\n\t\t\tthis.item.set(baseRange, tx);\n\t\t});\n\t}\n}\n"],
  "mappings": "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",
  "names": ["viewModel", "range", "action", "item"]
}
