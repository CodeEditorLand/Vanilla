{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/mergeEditor/browser/view/editors/inputCodeEditorView.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableListener, EventType, h, reset } from '../../../../../../base/browser/dom.js';\nimport { renderLabelWithIcons } from '../../../../../../base/browser/ui/iconLabel/iconLabels.js';\nimport { Toggle } from '../../../../../../base/browser/ui/toggle/toggle.js';\nimport { Action, IAction, Separator } from '../../../../../../base/common/actions.js';\nimport { Codicon } from '../../../../../../base/common/codicons.js';\nimport { Disposable } from '../../../../../../base/common/lifecycle.js';\nimport { clamp } from '../../../../../../base/common/numbers.js';\nimport { autorun, autorunOpts, derived, derivedOpts, IObservable, ISettableObservable, ITransaction, observableValue, transaction } from '../../../../../../base/common/observable.js';\nimport { noBreakWhitespace } from '../../../../../../base/common/strings.js';\nimport { ThemeIcon } from '../../../../../../base/common/themables.js';\nimport { isDefined } from '../../../../../../base/common/types.js';\nimport { IModelDeltaDecoration, MinimapPosition, OverviewRulerLane } from '../../../../../../editor/common/model.js';\nimport { localize } from '../../../../../../nls.js';\nimport { MenuId } from '../../../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../../../platform/configuration/common/configuration.js';\nimport { IContextMenuService } from '../../../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../../../platform/instantiation/common/instantiation.js';\nimport { defaultToggleStyles } from '../../../../../../platform/theme/browser/defaultStyles.js';\nimport { InputState, ModifiedBaseRange, ModifiedBaseRangeState } from '../../model/modifiedBaseRange.js';\nimport { applyObservableDecorations, setFields } from '../../utils.js';\nimport { handledConflictMinimapOverViewRulerColor, unhandledConflictMinimapOverViewRulerColor } from '../colors.js';\nimport { MergeEditorViewModel } from '../viewModel.js';\nimport { EditorGutter, IGutterItemInfo, IGutterItemView } from '../editorGutter.js';\nimport { CodeEditorView, createSelectionsAutorun, TitleMenu } from './codeEditorView.js';\n\nexport class InputCodeEditorView extends CodeEditorView {\n\tpublic readonly otherInputNumber = this.inputNumber === 1 ? 2 : 1;\n\n\tconstructor(\n\t\tpublic readonly inputNumber: 1 | 2,\n\t\tviewModel: IObservable<MergeEditorViewModel | undefined>,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper(instantiationService, viewModel, configurationService);\n\n\t\tthis.htmlElements.root.classList.add(`input`);\n\n\t\tthis._register(\n\t\t\tnew EditorGutter(this.editor, this.htmlElements.gutterDiv, {\n\t\t\t\tgetIntersectingGutterItems: (range, reader) => {\n\t\t\t\t\tif (this.checkboxesVisible.read(reader)) {\n\t\t\t\t\t\treturn this.modifiedBaseRangeGutterItemInfos.read(reader);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcreateView: (item, target) => new MergeConflictGutterItemView(item, target, contextMenuService),\n\t\t\t})\n\t\t);\n\n\t\tthis._register(\n\t\t\tcreateSelectionsAutorun(this, (baseRange, viewModel) =>\n\t\t\t\tviewModel.model.translateBaseRangeToInput(this.inputNumber, baseRange)\n\t\t\t)\n\t\t);\n\n\t\tthis._register(\n\t\t\tinstantiationService.createInstance(\n\t\t\t\tTitleMenu,\n\t\t\t\tinputNumber === 1 ? MenuId.MergeInput1Toolbar : MenuId.MergeInput2Toolbar,\n\t\t\t\tthis.htmlElements.toolbar\n\t\t\t)\n\t\t);\n\n\t\tthis._register(autorunOpts({ debugName: `input${this.inputNumber}: update labels & text model` }, reader => {\n\t\t\tconst vm = this.viewModel.read(reader);\n\t\t\tif (!vm) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.editor.setModel(this.inputNumber === 1 ? vm.model.input1.textModel : vm.model.input2.textModel);\n\n\t\t\tconst title = this.inputNumber === 1\n\t\t\t\t? vm.model.input1.title || localize('input1', 'Input 1')\n\t\t\t\t: vm.model.input2.title || localize('input2', 'Input 2');\n\n\t\t\tconst description = this.inputNumber === 1\n\t\t\t\t? vm.model.input1.description\n\t\t\t\t: vm.model.input2.description;\n\n\t\t\tconst detail = this.inputNumber === 1\n\t\t\t\t? vm.model.input1.detail\n\t\t\t\t: vm.model.input2.detail;\n\n\t\t\treset(this.htmlElements.title, ...renderLabelWithIcons(title));\n\t\t\treset(this.htmlElements.description, ...(description ? renderLabelWithIcons(description) : []));\n\t\t\treset(this.htmlElements.detail, ...(detail ? renderLabelWithIcons(detail) : []));\n\t\t}));\n\n\n\t\tthis._register(applyObservableDecorations(this.editor, this.decorations));\n\t}\n\n\tprivate readonly modifiedBaseRangeGutterItemInfos = derivedOpts({ debugName: `input${this.inputNumber}.modifiedBaseRangeGutterItemInfos` }, reader => {\n\t\tconst viewModel = this.viewModel.read(reader);\n\t\tif (!viewModel) { return []; }\n\t\tconst model = viewModel.model;\n\t\tconst inputNumber = this.inputNumber;\n\n\t\tconst showNonConflictingChanges = viewModel.showNonConflictingChanges.read(reader);\n\n\t\treturn model.modifiedBaseRanges.read(reader)\n\t\t\t.filter((r) => r.getInputDiffs(this.inputNumber).length > 0 && (showNonConflictingChanges || r.isConflicting || !model.isHandled(r).read(reader)))\n\t\t\t.map((baseRange, idx) => new ModifiedBaseRangeGutterItemModel(idx.toString(), baseRange, inputNumber, viewModel));\n\t});\n\n\tprivate readonly decorations = derivedOpts({ debugName: `input${this.inputNumber}.decorations` }, reader => {\n\t\tconst viewModel = this.viewModel.read(reader);\n\t\tif (!viewModel) {\n\t\t\treturn [];\n\t\t}\n\t\tconst model = viewModel.model;\n\t\tconst textModel = (this.inputNumber === 1 ? model.input1 : model.input2).textModel;\n\n\t\tconst activeModifiedBaseRange = viewModel.activeModifiedBaseRange.read(reader);\n\n\t\tconst result = new Array<IModelDeltaDecoration>();\n\n\t\tconst showNonConflictingChanges = viewModel.showNonConflictingChanges.read(reader);\n\t\tconst showDeletionMarkers = this.showDeletionMarkers.read(reader);\n\t\tconst diffWithThis = viewModel.baseCodeEditorView.read(reader) !== undefined && viewModel.baseShowDiffAgainst.read(reader) === this.inputNumber;\n\t\tconst useSimplifiedDecorations = !diffWithThis && this.useSimplifiedDecorations.read(reader);\n\n\t\tfor (const modifiedBaseRange of model.modifiedBaseRanges.read(reader)) {\n\t\t\tconst range = modifiedBaseRange.getInputRange(this.inputNumber);\n\t\t\tif (!range) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst blockClassNames = ['merge-editor-block'];\n\t\t\tlet blockPadding: [top: number, right: number, bottom: number, left: number] = [0, 0, 0, 0];\n\t\t\tconst isHandled = model.isInputHandled(modifiedBaseRange, this.inputNumber).read(reader);\n\t\t\tif (isHandled) {\n\t\t\t\tblockClassNames.push('handled');\n\t\t\t}\n\t\t\tif (modifiedBaseRange === activeModifiedBaseRange) {\n\t\t\t\tblockClassNames.push('focused');\n\t\t\t\tblockPadding = [0, 2, 0, 2];\n\t\t\t}\n\t\t\tif (modifiedBaseRange.isConflicting) {\n\t\t\t\tblockClassNames.push('conflicting');\n\t\t\t}\n\t\t\tconst inputClassName = this.inputNumber === 1 ? 'input i1' : 'input i2';\n\t\t\tblockClassNames.push(inputClassName);\n\n\t\t\tif (!modifiedBaseRange.isConflicting && !showNonConflictingChanges && isHandled) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (useSimplifiedDecorations && !isHandled) {\n\t\t\t\tblockClassNames.push('use-simplified-decorations');\n\t\t\t}\n\n\t\t\tresult.push({\n\t\t\t\trange: range.toInclusiveRangeOrEmpty(),\n\t\t\t\toptions: {\n\t\t\t\t\tshowIfCollapsed: true,\n\t\t\t\t\tblockClassName: blockClassNames.join(' '),\n\t\t\t\t\tblockPadding,\n\t\t\t\t\tblockIsAfterEnd: range.startLineNumber > textModel.getLineCount(),\n\t\t\t\t\tdescription: 'Merge Editor',\n\t\t\t\t\tminimap: {\n\t\t\t\t\t\tposition: MinimapPosition.Gutter,\n\t\t\t\t\t\tcolor: { id: isHandled ? handledConflictMinimapOverViewRulerColor : unhandledConflictMinimapOverViewRulerColor },\n\t\t\t\t\t},\n\t\t\t\t\toverviewRuler: modifiedBaseRange.isConflicting ? {\n\t\t\t\t\t\tposition: OverviewRulerLane.Center,\n\t\t\t\t\t\tcolor: { id: isHandled ? handledConflictMinimapOverViewRulerColor : unhandledConflictMinimapOverViewRulerColor },\n\t\t\t\t\t} : undefined\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!useSimplifiedDecorations && (modifiedBaseRange.isConflicting || !model.isHandled(modifiedBaseRange).read(reader))) {\n\t\t\t\tconst inputDiffs = modifiedBaseRange.getInputDiffs(this.inputNumber);\n\t\t\t\tfor (const diff of inputDiffs) {\n\t\t\t\t\tconst range = diff.outputRange.toInclusiveRange();\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\trange,\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\tclassName: `merge-editor-diff ${inputClassName}`,\n\t\t\t\t\t\t\t\tdescription: 'Merge Editor',\n\t\t\t\t\t\t\t\tisWholeLine: true,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff.rangeMappings) {\n\t\t\t\t\t\tfor (const d of diff.rangeMappings) {\n\t\t\t\t\t\t\tif (showDeletionMarkers || !d.outputRange.isEmpty()) {\n\t\t\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\t\t\trange: d.outputRange,\n\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\tclassName: d.outputRange.isEmpty() ? `merge-editor-diff-empty-word ${inputClassName}` : `merge-editor-diff-word ${inputClassName}`,\n\t\t\t\t\t\t\t\t\t\tdescription: 'Merge Editor',\n\t\t\t\t\t\t\t\t\t\tshowIfCollapsed: true,\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t});\n}\n\nexport class ModifiedBaseRangeGutterItemModel implements IGutterItemInfo {\n\tprivate readonly model = this.viewModel.model;\n\tpublic readonly range = this.baseRange.getInputRange(this.inputNumber);\n\n\tconstructor(\n\t\tpublic readonly id: string,\n\t\tprivate readonly baseRange: ModifiedBaseRange,\n\t\tprivate readonly inputNumber: 1 | 2,\n\t\tprivate readonly viewModel: MergeEditorViewModel\n\t) {\n\t}\n\n\tpublic readonly enabled = this.model.isUpToDate;\n\n\tpublic readonly toggleState: IObservable<InputState> = derived(this, reader => {\n\t\tconst input = this.model\n\t\t\t.getState(this.baseRange)\n\t\t\t.read(reader)\n\t\t\t.getInput(this.inputNumber);\n\t\treturn input === InputState.second && !this.baseRange.isOrderRelevant\n\t\t\t? InputState.first\n\t\t\t: input;\n\t});\n\n\tpublic readonly state: IObservable<{ handled: boolean; focused: boolean }> = derived(this, reader => {\n\t\tconst active = this.viewModel.activeModifiedBaseRange.read(reader);\n\t\tif (!this.model.hasBaseRange(this.baseRange)) {\n\t\t\treturn { handled: false, focused: false }; // Invalid state, should only be observed temporarily\n\t\t}\n\t\treturn {\n\t\t\thandled: this.model.isHandled(this.baseRange).read(reader),\n\t\t\tfocused: this.baseRange === active,\n\t\t};\n\t});\n\n\tpublic setState(value: boolean, tx: ITransaction): void {\n\t\tthis.viewModel.setState(\n\t\t\tthis.baseRange,\n\t\t\tthis.model\n\t\t\t\t.getState(this.baseRange)\n\t\t\t\t.get()\n\t\t\t\t.withInputValue(this.inputNumber, value),\n\t\t\ttx,\n\t\t\tthis.inputNumber\n\t\t);\n\t}\n\tpublic toggleBothSides(): void {\n\t\ttransaction(tx => {\n\t\t\t/** @description Context Menu: toggle both sides */\n\t\t\tconst state = this.model\n\t\t\t\t.getState(this.baseRange)\n\t\t\t\t.get();\n\t\t\tthis.model.setState(\n\t\t\t\tthis.baseRange,\n\t\t\t\tstate\n\t\t\t\t\t.toggle(this.inputNumber)\n\t\t\t\t\t.toggle(this.inputNumber === 1 ? 2 : 1),\n\t\t\t\ttrue,\n\t\t\t\ttx\n\t\t\t);\n\t\t});\n\t}\n\n\tpublic getContextMenuActions(): readonly IAction[] {\n\t\tconst state = this.model.getState(this.baseRange).get();\n\t\tconst handled = this.model.isHandled(this.baseRange).get();\n\n\t\tconst update = (newState: ModifiedBaseRangeState) => {\n\t\t\ttransaction(tx => {\n\t\t\t\t/** @description Context Menu: Update Base Range State */\n\t\t\t\treturn this.viewModel.setState(this.baseRange, newState, tx, this.inputNumber);\n\t\t\t});\n\t\t};\n\n\t\tfunction action(id: string, label: string, targetState: ModifiedBaseRangeState, checked: boolean) {\n\t\t\tconst action = new Action(id, label, undefined, true, () => {\n\t\t\t\tupdate(targetState);\n\t\t\t});\n\t\t\taction.checked = checked;\n\t\t\treturn action;\n\t\t}\n\t\tconst both = state.includesInput1 && state.includesInput2;\n\n\t\treturn [\n\t\t\tthis.baseRange.input1Diffs.length > 0\n\t\t\t\t? action(\n\t\t\t\t\t'mergeEditor.acceptInput1',\n\t\t\t\t\tlocalize('mergeEditor.accept', 'Accept {0}', this.model.input1.title),\n\t\t\t\t\tstate.toggle(1),\n\t\t\t\t\tstate.includesInput1\n\t\t\t\t)\n\t\t\t\t: undefined,\n\t\t\tthis.baseRange.input2Diffs.length > 0\n\t\t\t\t? action(\n\t\t\t\t\t'mergeEditor.acceptInput2',\n\t\t\t\t\tlocalize('mergeEditor.accept', 'Accept {0}', this.model.input2.title),\n\t\t\t\t\tstate.toggle(2),\n\t\t\t\t\tstate.includesInput2\n\t\t\t\t)\n\t\t\t\t: undefined,\n\t\t\tthis.baseRange.isConflicting\n\t\t\t\t? setFields(\n\t\t\t\t\taction(\n\t\t\t\t\t\t'mergeEditor.acceptBoth',\n\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t'mergeEditor.acceptBoth',\n\t\t\t\t\t\t\t'Accept Both'\n\t\t\t\t\t\t),\n\t\t\t\t\t\tstate.withInputValue(1, !both).withInputValue(2, !both),\n\t\t\t\t\t\tboth\n\t\t\t\t\t),\n\t\t\t\t\t{ enabled: this.baseRange.canBeCombined }\n\t\t\t\t)\n\t\t\t\t: undefined,\n\t\t\tnew Separator(),\n\t\t\tthis.baseRange.isConflicting\n\t\t\t\t? setFields(\n\t\t\t\t\taction(\n\t\t\t\t\t\t'mergeEditor.swap',\n\t\t\t\t\t\tlocalize('mergeEditor.swap', 'Swap'),\n\t\t\t\t\t\tstate.swap(),\n\t\t\t\t\t\tfalse\n\t\t\t\t\t),\n\t\t\t\t\t{ enabled: !state.kind && (!both || this.baseRange.isOrderRelevant) }\n\t\t\t\t)\n\t\t\t\t: undefined,\n\n\t\t\tsetFields(\n\t\t\t\tnew Action(\n\t\t\t\t\t'mergeEditor.markAsHandled',\n\t\t\t\t\tlocalize('mergeEditor.markAsHandled', 'Mark as Handled'),\n\t\t\t\t\tundefined,\n\t\t\t\t\ttrue,\n\t\t\t\t\t() => {\n\t\t\t\t\t\ttransaction((tx) => {\n\t\t\t\t\t\t\t/** @description Context Menu: Mark as handled */\n\t\t\t\t\t\t\tthis.model.setHandled(this.baseRange, !handled, tx);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t),\n\t\t\t\t{ checked: handled }\n\t\t\t),\n\t\t].filter(isDefined);\n\t}\n}\n\nexport class MergeConflictGutterItemView extends Disposable implements IGutterItemView<ModifiedBaseRangeGutterItemModel> {\n\tprivate readonly item: ISettableObservable<ModifiedBaseRangeGutterItemModel>;\n\n\tprivate readonly checkboxDiv: HTMLDivElement;\n\tprivate readonly isMultiLine = observableValue(this, false);\n\n\tconstructor(\n\t\titem: ModifiedBaseRangeGutterItemModel,\n\t\ttarget: HTMLElement,\n\t\tcontextMenuService: IContextMenuService,\n\t) {\n\t\tsuper();\n\n\t\tthis.item = observableValue(this, item);\n\n\t\tconst checkBox = new Toggle({\n\t\t\tisChecked: false,\n\t\t\ttitle: '',\n\t\t\ticon: Codicon.check,\n\t\t\t...defaultToggleStyles\n\t\t});\n\t\tcheckBox.domNode.classList.add('accept-conflict-group');\n\n\t\tthis._register(\n\t\t\taddDisposableListener(checkBox.domNode, EventType.MOUSE_DOWN, (e) => {\n\t\t\t\tconst item = this.item.get();\n\t\t\t\tif (!item) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (e.button === /* Right */ 2) {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\tcontextMenuService.showContextMenu({\n\t\t\t\t\t\tgetAnchor: () => checkBox.domNode,\n\t\t\t\t\t\tgetActions: () => item.getContextMenuActions(),\n\t\t\t\t\t});\n\n\t\t\t\t} else if (e.button === /* Middle */ 1) {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\titem.toggleBothSides();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\tthis._register(\n\t\t\tautorun(reader => {\n\t\t\t\t/** @description Update Checkbox */\n\t\t\t\tconst item = this.item.read(reader)!;\n\t\t\t\tconst value = item.toggleState.read(reader);\n\t\t\t\tconst iconMap: Record<InputState, { icon: ThemeIcon | undefined; checked: boolean; title: string }> = {\n\t\t\t\t\t[InputState.excluded]: { icon: undefined, checked: false, title: localize('accept.excluded', \"Accept\") },\n\t\t\t\t\t[InputState.unrecognized]: { icon: Codicon.circleFilled, checked: false, title: localize('accept.conflicting', \"Accept (result is dirty)\") },\n\t\t\t\t\t[InputState.first]: { icon: Codicon.check, checked: true, title: localize('accept.first', \"Undo accept\") },\n\t\t\t\t\t[InputState.second]: { icon: Codicon.checkAll, checked: true, title: localize('accept.second', \"Undo accept (currently second)\") },\n\t\t\t\t};\n\t\t\t\tconst state = iconMap[value];\n\t\t\t\tcheckBox.setIcon(state.icon);\n\t\t\t\tcheckBox.checked = state.checked;\n\t\t\t\tcheckBox.setTitle(state.title);\n\n\t\t\t\tif (!item.enabled.read(reader)) {\n\t\t\t\t\tcheckBox.disable();\n\t\t\t\t} else {\n\t\t\t\t\tcheckBox.enable();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description Update Checkbox CSS ClassNames */\n\t\t\tconst state = this.item.read(reader).state.read(reader);\n\t\t\tconst classNames = [\n\t\t\t\t'merge-accept-gutter-marker',\n\t\t\t\tstate.handled && 'handled',\n\t\t\t\tstate.focused && 'focused',\n\t\t\t\tthis.isMultiLine.read(reader) ? 'multi-line' : 'single-line',\n\t\t\t];\n\t\t\ttarget.className = classNames.filter(c => typeof c === 'string').join(' ');\n\t\t}));\n\n\t\tthis._register(checkBox.onChange(() => {\n\t\t\ttransaction(tx => {\n\t\t\t\t/** @description Handle Checkbox Change */\n\t\t\t\tthis.item.get()!.setState(checkBox.checked, tx);\n\t\t\t});\n\t\t}));\n\n\t\ttarget.appendChild(h('div.background', [noBreakWhitespace]).root);\n\t\ttarget.appendChild(\n\t\t\tthis.checkboxDiv = h('div.checkbox', [h('div.checkbox-background', [checkBox.domNode])]).root\n\t\t);\n\t}\n\n\tlayout(top: number, height: number, viewTop: number, viewHeight: number): void {\n\t\tconst checkboxHeight = this.checkboxDiv.clientHeight;\n\t\tconst middleHeight = height / 2 - checkboxHeight / 2;\n\n\t\tconst margin = checkboxHeight;\n\n\t\tlet effectiveCheckboxTop = top + middleHeight;\n\n\t\tconst preferredViewPortRange = [\n\t\t\tmargin,\n\t\t\tviewTop + viewHeight - margin - checkboxHeight\n\t\t];\n\n\t\tconst preferredParentRange = [\n\t\t\ttop + margin,\n\t\t\ttop + height - checkboxHeight - margin\n\t\t];\n\n\t\tif (preferredParentRange[0] < preferredParentRange[1]) {\n\t\t\teffectiveCheckboxTop = clamp(effectiveCheckboxTop, preferredViewPortRange[0], preferredViewPortRange[1]);\n\t\t\teffectiveCheckboxTop = clamp(effectiveCheckboxTop, preferredParentRange[0], preferredParentRange[1]);\n\t\t}\n\n\t\tthis.checkboxDiv.style.top = `${effectiveCheckboxTop - top}px`;\n\n\t\ttransaction((tx) => {\n\t\t\t/** @description MergeConflictGutterItemView: Update Is Multi Line */\n\t\t\tthis.isMultiLine.set(height > 30, tx);\n\t\t});\n\t}\n\n\tupdate(baseRange: ModifiedBaseRangeGutterItemModel): void {\n\t\ttransaction(tx => {\n\t\t\t/** @description MergeConflictGutterItemView: Updating new base range */\n\t\t\tthis.item.set(baseRange, tx);\n\t\t});\n\t}\n}\n"],
  "mappings": "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",
  "names": ["viewModel", "range", "action", "item"]
}
