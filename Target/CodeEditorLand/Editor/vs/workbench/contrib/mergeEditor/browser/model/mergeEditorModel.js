var F=Object.defineProperty;var _=Object.getOwnPropertyDescriptor;var H=(R,l,e,t)=>{for(var i=t>1?void 0:t?_(l,e):l,s=R.length-1,n;s>=0;s--)(n=R[s])&&(i=(t?n(l,e,i):n(i))||i);return t&&i&&F(l,e,i),i},T=(R,l)=>(e,t)=>l(e,t,R);import{CompareResult as j,equals as A}from"../../../../../../vs/base/common/arrays.js";import{BugIndicatingError as y}from"../../../../../../vs/base/common/errors.js";import{autorunHandleChanges as P,derived as c,keepObserved as L,observableValue as x,transaction as b,waitForState as E}from"../../../../../../vs/base/common/observable.js";import"../../../../../../vs/base/common/uri.js";import{Range as G}from"../../../../../../vs/editor/common/core/range.js";import{ILanguageService as $}from"../../../../../../vs/editor/common/languages/language.js";import"../../../../../../vs/editor/common/model.js";import{localize as W}from"../../../../../../vs/nls.js";import{IUndoRedoService as J,UndoRedoElementType as V,UndoRedoGroup as K}from"../../../../../../vs/platform/undoRedo/common/undoRedo.js";import{EditorModel as X}from"../../../../../../vs/workbench/common/editor/editorModel.js";import"../../../../../../vs/workbench/contrib/mergeEditor/browser/model/diffComputer.js";import{LineRange as M}from"../../../../../../vs/workbench/contrib/mergeEditor/browser/model/lineRange.js";import{DocumentLineRangeMap as S,DocumentRangeMap as D,LineRangeMapping as q}from"../../../../../../vs/workbench/contrib/mergeEditor/browser/model/mapping.js";import{TextModelDiffChangeReason as Q,TextModelDiffs as w,TextModelDiffState as I}from"../../../../../../vs/workbench/contrib/mergeEditor/browser/model/textModelDiffs.js";import"../../../../../../vs/workbench/contrib/mergeEditor/browser/telemetry.js";import{leftJoin as Y}from"../../../../../../vs/workbench/contrib/mergeEditor/browser/utils.js";import{ModifiedBaseRange as Z,ModifiedBaseRangeState as g,ModifiedBaseRangeStateKind as r}from"./modifiedBaseRange.js";let B=class extends X{constructor(e,t,i,s,n,a,u,o,p){super();this.base=e;this.input1=t;this.input2=i;this.resultTextModel=s;this.diffComputer=n;this.options=a;this.telemetry=u;this.languageService=o;this.undoRedoService=p;this._register(L(this.modifiedBaseRangeResultStates)),this._register(L(this.input1ResultMapping)),this._register(L(this.input2ResultMapping));const d=this.initialize();this.onInitialized=this.onInitialized.then(async()=>{await d}),d.then(()=>{let m=!0;this._register(P({handleChange:h=>(h.didChange(this.modifiedBaseRangeResultStates)&&(m=!0),h.didChange(this.resultTextModelDiffs.diffs)?h.change===Q.textChange:!0)},h=>{const k=this.modifiedBaseRangeResultStates.read(h);if(!this.isUpToDate.read(h))return;const U=this.resultTextModelDiffs.diffs.read(h);b(v=>{if(this.updateBaseRangeAcceptedState(U,k,v),m){m=!1;for(const[ie,C]of k){const N=C.accepted.get(),z=!(N.kind===r.base||N.kind===r.unrecognized);C.handledInput1.set(z,v),C.handledInput2.set(z,v)}}})}))})}input1TextModelDiffs=this._register(new w(this.base,this.input1.textModel,this.diffComputer));input2TextModelDiffs=this._register(new w(this.base,this.input2.textModel,this.diffComputer));resultTextModelDiffs=this._register(new w(this.base,this.resultTextModel,this.diffComputer));modifiedBaseRanges=c(this,e=>{const t=this.input1TextModelDiffs.diffs.read(e),i=this.input2TextModelDiffs.diffs.read(e);return Z.fromDiffs(t,i,this.base,this.input1.textModel,this.input2.textModel)});modifiedBaseRangeResultStates=c(this,e=>new Map(this.modifiedBaseRanges.read(e).map(i=>[i,new O(i)])));resultSnapshot=this.resultTextModel.createSnapshot();async initialize(){this.options.resetResult&&await this.reset()}async reset(){await E(this.inputDiffComputingState,t=>t===2);const e=this.modifiedBaseRangeResultStates.get();b(t=>{for(const[i,s]of e){let n,a=!1;i.input1Diffs.length===0?(n=g.base.withInputValue(2,!0),a=!0):i.input2Diffs.length===0?(n=g.base.withInputValue(1,!0),a=!0):i.isEqualChange?(n=g.base.withInputValue(1,!0),a=!0):(n=g.base,a=!1),s.accepted.set(n,t),s.computedFromDiffing=!1,s.previousNonDiffingState=void 0,s.handledInput1.set(a,t),s.handledInput2.set(a,t)}this.resultTextModel.pushEditOperations(null,[{range:new G(1,1,Number.MAX_SAFE_INTEGER,1),text:this.computeAutoMergedResult()}],()=>null)})}computeAutoMergedResult(){const e=this.modifiedBaseRanges.get(),t=this.base.getLinesContent(),i=this.input1.textModel.getLinesContent(),s=this.input2.textModel.getLinesContent(),n=[];function a(o,p){for(let d=p.startLineNumber;d<p.endLineNumberExclusive;d++)n.push(o[d-1])}let u=1;for(const o of e)a(t,M.fromLineNumbers(u,o.baseRange.startLineNumber)),u=o.baseRange.endLineNumberExclusive,o.input1Diffs.length===0?a(s,o.input2Range):o.input2Diffs.length===0||o.isEqualChange?a(i,o.input1Range):a(t,o.baseRange);return a(t,M.fromLineNumbers(u,t.length+1)),n.join(this.resultTextModel.getEOL())}hasBaseRange(e){return this.modifiedBaseRangeResultStates.get().has(e)}baseInput1Diffs=this.input1TextModelDiffs.diffs;baseInput2Diffs=this.input2TextModelDiffs.diffs;baseResultDiffs=this.resultTextModelDiffs.diffs;get isApplyingEditInResult(){return this.resultTextModelDiffs.isApplyingChange}input1ResultMapping=c(this,e=>this.getInputResultMapping(this.baseInput1Diffs.read(e),this.baseResultDiffs.read(e),this.input1.textModel.getLineCount()));resultInput1Mapping=c(this,e=>this.input1ResultMapping.read(e).reverse());input2ResultMapping=c(this,e=>this.getInputResultMapping(this.baseInput2Diffs.read(e),this.baseResultDiffs.read(e),this.input2.textModel.getLineCount()));resultInput2Mapping=c(this,e=>this.input2ResultMapping.read(e).reverse());getInputResultMapping(e,t,i){const s=S.betweenOutputs(e,t,i);return new S(s.lineRangeMappings.map(n=>n.inputRange.isEmpty||n.outputRange.isEmpty?new q(n.inputRange.deltaStart(-1),n.outputRange.deltaStart(-1)):n),s.inputLineCount)}baseResultMapping=c(this,e=>{const t=new S(this.baseResultDiffs.read(e),-1);return new S(t.lineRangeMappings.map(i=>i.inputRange.isEmpty||i.outputRange.isEmpty?new q(i.inputRange.deltaStart(-1),i.outputRange.deltaStart(-1)):i),t.inputLineCount)});resultBaseMapping=c(this,e=>this.baseResultMapping.read(e).reverse());translateInputRangeToBase(e,t){const i=e===1?this.baseInput1Diffs.get():this.baseInput2Diffs.get();return new D(i.flatMap(n=>n.rangeMappings),0).reverse().projectRange(t).outputRange}translateBaseRangeToInput(e,t){const i=e===1?this.baseInput1Diffs.get():this.baseInput2Diffs.get();return new D(i.flatMap(n=>n.rangeMappings),0).projectRange(t).outputRange}getLineRangeInResult(e,t){return this.resultTextModelDiffs.getResultLineRange(e,t)}translateResultRangeToBase(e){return new D(this.baseResultDiffs.get().flatMap(i=>i.rangeMappings),0).reverse().projectRange(e).outputRange}translateBaseRangeToResult(e){return new D(this.baseResultDiffs.get().flatMap(i=>i.rangeMappings),0).projectRange(e).outputRange}findModifiedBaseRangesInRange(e){return this.modifiedBaseRanges.get().filter(t=>t.baseRange.intersects(e))}diffComputingState=c(this,e=>{const t=[this.input1TextModelDiffs,this.input2TextModelDiffs,this.resultTextModelDiffs].map(i=>i.state.read(e));return t.some(i=>i===I.initializing)?1:t.some(i=>i===I.updating)?3:2});inputDiffComputingState=c(this,e=>{const t=[this.input1TextModelDiffs,this.input2TextModelDiffs].map(i=>i.state.read(e));return t.some(i=>i===I.initializing)?1:t.some(i=>i===I.updating)?3:2});isUpToDate=c(this,e=>this.diffComputingState.read(e)===2);onInitialized=E(this.diffComputingState,e=>e===2).then(()=>{});firstRun=!0;updateBaseRangeAcceptedState(e,t,i){const s=Y(t,e,(n,a)=>n[0].baseRange.touches(a.inputRange)?j.neitherLessOrGreaterThan:M.compareByStart(n[0].baseRange,a.inputRange));for(const n of s){const a=this.computeState(n.left[0],n.rights),u=n.left[1],o=u.accepted.get();o.equals(a)||(!this.firstRun&&!u.computedFromDiffing&&(u.computedFromDiffing=!0,u.previousNonDiffingState=o),u.accepted.set(a,i))}this.firstRun&&(this.firstRun=!1)}computeState(e,t){if(t.length===0)return g.base;const i=t.map(a=>a.getLineEdit());function s(a){return A(i,a.map(u=>u.getLineEdit()),(u,o)=>u.equals(o))}if(s(e.input1Diffs))return g.base.withInputValue(1,!0);if(s(e.input2Diffs))return g.base.withInputValue(2,!0);const n=[g.base.withInputValue(1,!0).withInputValue(2,!0,!0),g.base.withInputValue(2,!0).withInputValue(1,!0,!0),g.base.withInputValue(1,!0).withInputValue(2,!0,!1),g.base.withInputValue(2,!0).withInputValue(1,!0,!1)];for(const a of n){const{edit:u}=e.getEditForBase(a);if(u){const p=this.resultTextModelDiffs.getResultLineRange(e.baseRange).getLines(this.resultTextModel);if(A(u.newLines,p,(d,m)=>d===m))return a}}return g.unrecognized}getState(e){const t=this.modifiedBaseRangeResultStates.get().get(e);if(!t)throw new y("object must be from this instance");return t.accepted}setState(e,t,i,s,n=!1){if(!this.isUpToDate.get())throw new y("Cannot set state while updating");const a=this.modifiedBaseRangeResultStates.get().get(e);if(!a)throw new y("object must be from this instance");const u=this.resultTextModelDiffs.findTouchingDiffs(e.baseRange),o=new K;u&&this.resultTextModelDiffs.removeDiffs(u,s,o);const{edit:p,effectiveState:d}=e.getEditForBase(t);a.accepted.set(d,s),a.previousNonDiffingState=void 0,a.computedFromDiffing=!1;const m=a.handledInput1.get(),h=a.handledInput2.get();(!m||!h)&&this.undoRedoService.pushElement(new te(this.resultTextModel.uri,new WeakRef(this),new WeakRef(a),m,h),o),p&&(this.resultTextModel.pushStackElement(),this.resultTextModelDiffs.applyEditRelativeToOriginal(p,s,o),this.resultTextModel.pushStackElement()),a.handledInput1.set(!0,s),a.handledInput2.set(!0,s)}resetDirtyConflictsToBase(){b(e=>{this.resultTextModel.pushStackElement();for(const t of this.modifiedBaseRanges.get())this.getState(t).get().kind===r.unrecognized&&this.setState(t,g.base,!1,e,!1);this.resultTextModel.pushStackElement()})}isHandled(e){return this.modifiedBaseRangeResultStates.get().get(e).handled}isInputHandled(e,t){const i=this.modifiedBaseRangeResultStates.get().get(e);return t===1?i.handledInput1:i.handledInput2}setInputHandled(e,t,i,s){const n=this.modifiedBaseRangeResultStates.get().get(e);if(n.handled.get()===i)return;const a=new WeakRef(O),u=new WeakRef(this);this.undoRedoService.pushElement({type:V.Resource,resource:this.resultTextModel.uri,code:"setInputHandled",label:W("setInputHandled","Set Input Handled"),redo(){const o=u.deref(),p=a.deref();o&&!o.isDisposed()&&p&&b(d=>{t===1?n.handledInput1.set(i,d):n.handledInput2.set(i,d)})},undo(){const o=u.deref(),p=a.deref();o&&!o.isDisposed()&&p&&b(d=>{t===1?n.handledInput1.set(!i,d):n.handledInput2.set(!i,d)})}}),t===1?n.handledInput1.set(i,s):n.handledInput2.set(i,s)}setHandled(e,t,i){const s=this.modifiedBaseRangeResultStates.get().get(e);s.handled.get()!==t&&(s.handledInput1.set(t,i),s.handledInput2.set(t,i))}unhandledConflictsCount=c(this,e=>{const t=this.modifiedBaseRangeResultStates.read(e);let i=0;for(const[s,n]of t)n.handled.read(e)||i++;return i});hasUnhandledConflicts=this.unhandledConflictsCount.map(e=>e>0);setLanguageId(e,t){const i=this.languageService.createById(e);this.base.setLanguage(i,t),this.input1.textModel.setLanguage(i,t),this.input2.textModel.setLanguage(i,t),this.resultTextModel.setLanguage(i,t)}getInitialResultValue(){const e=[];for(;;){const t=this.resultSnapshot.read();if(t===null)break;e.push(t)}return e.join()}async getResultValueWithConflictMarkers(){if(await E(this.diffComputingState,o=>o===2),this.unhandledConflictsCount.get()===0)return this.resultTextModel.getValue();const e=this.resultTextModel.getLinesContent(),t=this.input1.textModel.getLinesContent(),i=this.input2.textModel.getLinesContent(),s=this.modifiedBaseRangeResultStates.get(),n=[];function a(o,p){for(let d=p.startLineNumber;d<p.endLineNumberExclusive;d++)n.push(o[d-1])}let u=1;for(const[o,p]of s){if(p.handled.get())continue;const d=this.resultTextModelDiffs.getResultLineRange(o.baseRange);a(e,M.fromLineNumbers(u,Math.max(u,d.startLineNumber))),u=d.endLineNumberExclusive,n.push("<<<<<<<"),p.accepted.get().kind===r.unrecognized?a(e,d):a(t,o.input1Range),n.push("======="),a(i,o.input2Range),n.push(">>>>>>>")}return a(e,M.fromLineNumbers(u,e.length+1)),n.join(`
`)}get conflictCount(){return f(this.modifiedBaseRanges.get(),e=>e.isConflicting)}get combinableConflictCount(){return f(this.modifiedBaseRanges.get(),e=>e.isConflicting&&e.canBeCombined)}get conflictsResolvedWithBase(){return f(this.modifiedBaseRangeResultStates.get().entries(),([e,t])=>e.isConflicting&&t.accepted.get().kind===r.base)}get conflictsResolvedWithInput1(){return f(this.modifiedBaseRangeResultStates.get().entries(),([e,t])=>e.isConflicting&&t.accepted.get().kind===r.input1)}get conflictsResolvedWithInput2(){return f(this.modifiedBaseRangeResultStates.get().entries(),([e,t])=>e.isConflicting&&t.accepted.get().kind===r.input2)}get conflictsResolvedWithSmartCombination(){return f(this.modifiedBaseRangeResultStates.get().entries(),([e,t])=>{const i=t.accepted.get();return e.isConflicting&&i.kind===r.both&&i.smartCombination})}get manuallySolvedConflictCountThatEqualNone(){return f(this.modifiedBaseRangeResultStates.get().entries(),([e,t])=>e.isConflicting&&t.accepted.get().kind===r.unrecognized)}get manuallySolvedConflictCountThatEqualSmartCombine(){return f(this.modifiedBaseRangeResultStates.get().entries(),([e,t])=>{const i=t.accepted.get();return e.isConflicting&&t.computedFromDiffing&&i.kind===r.both&&i.smartCombination})}get manuallySolvedConflictCountThatEqualInput1(){return f(this.modifiedBaseRangeResultStates.get().entries(),([e,t])=>{const i=t.accepted.get();return e.isConflicting&&t.computedFromDiffing&&i.kind===r.input1})}get manuallySolvedConflictCountThatEqualInput2(){return f(this.modifiedBaseRangeResultStates.get().entries(),([e,t])=>{const i=t.accepted.get();return e.isConflicting&&t.computedFromDiffing&&i.kind===r.input2})}get manuallySolvedConflictCountThatEqualNoneAndStartedWithBase(){return f(this.modifiedBaseRangeResultStates.get().entries(),([e,t])=>{const i=t.accepted.get();return e.isConflicting&&i.kind===r.unrecognized&&t.previousNonDiffingState?.kind===r.base})}get manuallySolvedConflictCountThatEqualNoneAndStartedWithInput1(){return f(this.modifiedBaseRangeResultStates.get().entries(),([e,t])=>{const i=t.accepted.get();return e.isConflicting&&i.kind===r.unrecognized&&t.previousNonDiffingState?.kind===r.input1})}get manuallySolvedConflictCountThatEqualNoneAndStartedWithInput2(){return f(this.modifiedBaseRangeResultStates.get().entries(),([e,t])=>{const i=t.accepted.get();return e.isConflicting&&i.kind===r.unrecognized&&t.previousNonDiffingState?.kind===r.input2})}get manuallySolvedConflictCountThatEqualNoneAndStartedWithBothNonSmart(){return f(this.modifiedBaseRangeResultStates.get().entries(),([e,t])=>{const i=t.accepted.get();return e.isConflicting&&i.kind===r.unrecognized&&t.previousNonDiffingState?.kind===r.both&&!t.previousNonDiffingState?.smartCombination})}get manuallySolvedConflictCountThatEqualNoneAndStartedWithBothSmart(){return f(this.modifiedBaseRangeResultStates.get().entries(),([e,t])=>{const i=t.accepted.get();return e.isConflicting&&i.kind===r.unrecognized&&t.previousNonDiffingState?.kind===r.both&&t.previousNonDiffingState?.smartCombination})}};B=H([T(7,$),T(8,J)],B);function f(R,l){let e=0;for(const t of R)l(t)&&e++;return e}class O{constructor(l){this.baseRange=l}accepted=x(`BaseRangeState${this.baseRange.baseRange}`,g.base);handledInput1=x(`BaseRangeHandledState${this.baseRange.baseRange}.Input1`,!1);handledInput2=x(`BaseRangeHandledState${this.baseRange.baseRange}.Input2`,!1);computedFromDiffing=!1;previousNonDiffingState=void 0;handled=c(this,l=>this.handledInput1.read(l)&&this.handledInput2.read(l))}var ee=(t=>(t[t.initializing=1]="initializing",t[t.upToDate=2]="upToDate",t[t.updating=3]="updating",t))(ee||{});class te{constructor(l,e,t,i,s){this.resource=l;this.mergeEditorModelRef=e;this.stateRef=t;this.input1Handled=i;this.input2Handled=s}code="undoMarkAsHandled";label=W("undoMarkAsHandled","Undo Mark As Handled");type=V.Resource;redo(){const l=this.mergeEditorModelRef.deref();if(!l||l.isDisposed())return;const e=this.stateRef.deref();e&&b(t=>{e.handledInput1.set(!0,t),e.handledInput2.set(!0,t)})}undo(){const l=this.mergeEditorModelRef.deref();if(!l||l.isDisposed())return;const e=this.stateRef.deref();e&&b(t=>{e.handledInput1.set(this.input1Handled,t),e.handledInput2.set(this.input2Handled,t)})}}export{B as MergeEditorModel,ee as MergeEditorModelState};
