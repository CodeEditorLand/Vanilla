{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/mergeEditor/browser/model/rangeUtils.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Position } from \"../../../../../editor/common/core/position.js\";\nimport type { Range } from \"../../../../../editor/common/core/range.js\";\nimport { TextLength } from \"../../../../../editor/common/core/textLength.js\";\n\nexport function rangeContainsPosition(\n\trange: Range,\n\tposition: Position,\n): boolean {\n\tif (\n\t\tposition.lineNumber < range.startLineNumber ||\n\t\tposition.lineNumber > range.endLineNumber\n\t) {\n\t\treturn false;\n\t}\n\tif (\n\t\tposition.lineNumber === range.startLineNumber &&\n\t\tposition.column < range.startColumn\n\t) {\n\t\treturn false;\n\t}\n\tif (\n\t\tposition.lineNumber === range.endLineNumber &&\n\t\tposition.column >= range.endColumn\n\t) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nexport function lengthOfRange(range: Range): TextLength {\n\tif (range.startLineNumber === range.endLineNumber) {\n\t\treturn new TextLength(0, range.endColumn - range.startColumn);\n\t} else {\n\t\treturn new TextLength(\n\t\t\trange.endLineNumber - range.startLineNumber,\n\t\t\trange.endColumn - 1,\n\t\t);\n\t}\n}\n\nexport function lengthBetweenPositions(\n\tposition1: Position,\n\tposition2: Position,\n): TextLength {\n\tif (position1.lineNumber === position2.lineNumber) {\n\t\treturn new TextLength(0, position2.column - position1.column);\n\t} else {\n\t\treturn new TextLength(\n\t\t\tposition2.lineNumber - position1.lineNumber,\n\t\t\tposition2.column - 1,\n\t\t);\n\t}\n}\n\nexport function addLength(position: Position, length: TextLength): Position {\n\tif (length.lineCount === 0) {\n\t\treturn new Position(\n\t\t\tposition.lineNumber,\n\t\t\tposition.column + length.columnCount,\n\t\t);\n\t} else {\n\t\treturn new Position(\n\t\t\tposition.lineNumber + length.lineCount,\n\t\t\tlength.columnCount + 1,\n\t\t);\n\t}\n}\n\nexport function rangeIsBeforeOrTouching(range: Range, other: Range): boolean {\n\treturn (\n\t\trange.endLineNumber < other.startLineNumber ||\n\t\t(range.endLineNumber === other.startLineNumber &&\n\t\t\trange.endColumn <= other.startColumn)\n\t);\n}\n"],
  "mappings": ";;AAKA,SAAS,gBAAgB;AAEzB,SAAS,kBAAkB;AAEpB,SAAS,sBACf,OACA,UACU;AACV,MACC,SAAS,aAAa,MAAM,mBAC5B,SAAS,aAAa,MAAM,eAC3B;AACD,WAAO;AAAA,EACR;AACA,MACC,SAAS,eAAe,MAAM,mBAC9B,SAAS,SAAS,MAAM,aACvB;AACD,WAAO;AAAA,EACR;AACA,MACC,SAAS,eAAe,MAAM,iBAC9B,SAAS,UAAU,MAAM,WACxB;AACD,WAAO;AAAA,EACR;AACA,SAAO;AACR;AAvBgB;AAyBT,SAAS,cAAc,OAA0B;AACvD,MAAI,MAAM,oBAAoB,MAAM,eAAe;AAClD,WAAO,IAAI,WAAW,GAAG,MAAM,YAAY,MAAM,WAAW;AAAA,EAC7D,OAAO;AACN,WAAO,IAAI;AAAA,MACV,MAAM,gBAAgB,MAAM;AAAA,MAC5B,MAAM,YAAY;AAAA,IACnB;AAAA,EACD;AACD;AATgB;AAWT,SAAS,uBACf,WACA,WACa;AACb,MAAI,UAAU,eAAe,UAAU,YAAY;AAClD,WAAO,IAAI,WAAW,GAAG,UAAU,SAAS,UAAU,MAAM;AAAA,EAC7D,OAAO;AACN,WAAO,IAAI;AAAA,MACV,UAAU,aAAa,UAAU;AAAA,MACjC,UAAU,SAAS;AAAA,IACpB;AAAA,EACD;AACD;AAZgB;AAcT,SAAS,UAAU,UAAoB,QAA8B;AAC3E,MAAI,OAAO,cAAc,GAAG;AAC3B,WAAO,IAAI;AAAA,MACV,SAAS;AAAA,MACT,SAAS,SAAS,OAAO;AAAA,IAC1B;AAAA,EACD,OAAO;AACN,WAAO,IAAI;AAAA,MACV,SAAS,aAAa,OAAO;AAAA,MAC7B,OAAO,cAAc;AAAA,IACtB;AAAA,EACD;AACD;AAZgB;AAcT,SAAS,wBAAwB,OAAc,OAAuB;AAC5E,SACC,MAAM,gBAAgB,MAAM,mBAC3B,MAAM,kBAAkB,MAAM,mBAC9B,MAAM,aAAa,MAAM;AAE5B;AANgB;",
  "names": []
}
