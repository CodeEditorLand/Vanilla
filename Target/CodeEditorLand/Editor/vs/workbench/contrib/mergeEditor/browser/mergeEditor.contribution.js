import{localize as r}from"../../../../../vs/nls.js";import{registerAction2 as e}from"../../../../../vs/platform/actions/common/actions.js";import{Extensions as a}from"../../../../../vs/platform/configuration/common/configurationRegistry.js";import{SyncDescriptor as d}from"../../../../../vs/platform/instantiation/common/descriptors.js";import{Registry as o}from"../../../../../vs/platform/registry/common/platform.js";import{EditorPaneDescriptor as g}from"../../../../../vs/workbench/browser/editor.js";import{registerWorkbenchContribution2 as m,Extensions as c,WorkbenchPhase as l}from"../../../../../vs/workbench/common/contributions.js";import{EditorExtensions as t}from"../../../../../vs/workbench/common/editor.js";import{AcceptAllInput1 as p,AcceptAllInput2 as f,AcceptMerge as u,CompareInput1WithBaseCommand as C,CompareInput2WithBaseCommand as h,GoToNextUnhandledConflict as E,GoToPreviousUnhandledConflict as y,OpenBaseFile as b,OpenMergeEditor as I,OpenResultResource as R,ResetCloseWithConflictsChoice as M,ResetToBaseAndAutoMergeCommand as A,SetColumnLayout as S,SetMixedLayout as k,ShowHideBase as v,ShowHideCenterBase as W,ShowHideTopBase as B,ShowNonConflictingChanges as P,ToggleActiveConflictInput1 as T,ToggleActiveConflictInput2 as w}from"../../../../../vs/workbench/contrib/mergeEditor/browser/commands/commands.js";import{MergeEditorCopyContentsToJSON as D,MergeEditorLoadContentsFromFolder as F,MergeEditorSaveContentsToFolder as x}from"../../../../../vs/workbench/contrib/mergeEditor/browser/commands/devCommands.js";import{MergeEditorInput as i}from"../../../../../vs/workbench/contrib/mergeEditor/browser/mergeEditorInput.js";import{MergeEditor as n,MergeEditorOpenHandlerContribution as O,MergeEditorResolverContribution as s}from"../../../../../vs/workbench/contrib/mergeEditor/browser/view/mergeEditor.js";import{LifecyclePhase as H}from"../../../../../vs/workbench/services/lifecycle/common/lifecycle.js";import{MergeEditorSerializer as L}from"./mergeEditorSerializer.js";o.as(t.EditorPane).registerEditorPane(g.create(n,n.ID,r("name","Merge Editor")),[new d(i)]),o.as(t.EditorFactory).registerEditorSerializer(i.ID,L),o.as(a.Configuration).registerConfiguration({properties:{"mergeEditor.diffAlgorithm":{type:"string",enum:["legacy","advanced"],default:"advanced",markdownEnumDescriptions:[r("diffAlgorithm.legacy","Uses the legacy diffing algorithm."),r("diffAlgorithm.advanced","Uses the advanced diffing algorithm.")]},"mergeEditor.showDeletionMarkers":{type:"boolean",default:!0,description:"Controls if deletions in base or one of the inputs should be indicated by a vertical bar."}}}),e(R),e(k),e(S),e(I),e(b),e(P),e(v),e(B),e(W),e(E),e(y),e(T),e(w),e(C),e(h),e(p),e(f),e(A),e(u),e(M),e(D),e(x),e(F),o.as(c.Workbench).registerWorkbenchContribution(O,H.Restored),m(s.ID,s,l.BlockStartup);
