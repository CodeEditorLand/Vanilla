{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/mergeEditor/browser/view/viewZones.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { $ } from '../../../../../base/browser/dom.js';\nimport { CompareResult } from '../../../../../base/common/arrays.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { IObservable, IReader } from '../../../../../base/common/observable.js';\nimport { ICodeEditor, IViewZoneChangeAccessor } from '../../../../../editor/browser/editorBrowser.js';\nimport { LineRange } from '../model/lineRange.js';\nimport { DetailedLineRangeMapping } from '../model/mapping.js';\nimport { ModifiedBaseRange } from '../model/modifiedBaseRange.js';\nimport { join } from '../utils.js';\nimport { ActionsSource, ConflictActionsFactory, IContentWidgetAction } from './conflictActions.js';\nimport { getAlignments } from './lineAlignment.js';\nimport { MergeEditorViewModel } from './viewModel.js';\n\nexport class ViewZoneComputer {\n\tprivate readonly conflictActionsFactoryInput1 = new ConflictActionsFactory(this.input1Editor);\n\tprivate readonly conflictActionsFactoryInput2 = new ConflictActionsFactory(this.input2Editor);\n\tprivate readonly conflictActionsFactoryResult = new ConflictActionsFactory(this.resultEditor);\n\n\tconstructor(\n\t\tprivate readonly input1Editor: ICodeEditor,\n\t\tprivate readonly input2Editor: ICodeEditor,\n\t\tprivate readonly resultEditor: ICodeEditor,\n\t) { }\n\n\tpublic computeViewZones(\n\t\treader: IReader,\n\t\tviewModel: MergeEditorViewModel,\n\t\toptions: {\n\t\t\tshouldAlignResult: boolean;\n\t\t\tshouldAlignBase: boolean;\n\t\t\tcodeLensesVisible: boolean;\n\t\t\tshowNonConflictingChanges: boolean;\n\t\t}\n\t): MergeEditorViewZones {\n\t\tlet input1LinesAdded = 0;\n\t\tlet input2LinesAdded = 0;\n\t\tlet baseLinesAdded = 0;\n\t\tlet resultLinesAdded = 0;\n\n\t\tconst input1ViewZones: MergeEditorViewZone[] = [];\n\t\tconst input2ViewZones: MergeEditorViewZone[] = [];\n\t\tconst baseViewZones: MergeEditorViewZone[] = [];\n\t\tconst resultViewZones: MergeEditorViewZone[] = [];\n\n\t\tconst model = viewModel.model;\n\n\t\tconst resultDiffs = model.baseResultDiffs.read(reader);\n\t\tconst baseRangeWithStoreAndTouchingDiffs = join(\n\t\t\tmodel.modifiedBaseRanges.read(reader),\n\t\t\tresultDiffs,\n\t\t\t(baseRange, diff) =>\n\t\t\t\tbaseRange.baseRange.touches(diff.inputRange)\n\t\t\t\t\t? CompareResult.neitherLessOrGreaterThan\n\t\t\t\t\t: LineRange.compareByStart(\n\t\t\t\t\t\tbaseRange.baseRange,\n\t\t\t\t\t\tdiff.inputRange\n\t\t\t\t\t)\n\t\t);\n\n\t\tconst shouldShowCodeLenses = options.codeLensesVisible;\n\t\tconst showNonConflictingChanges = options.showNonConflictingChanges;\n\n\t\tlet lastModifiedBaseRange: ModifiedBaseRange | undefined = undefined;\n\t\tlet lastBaseResultDiff: DetailedLineRangeMapping | undefined = undefined;\n\t\tfor (const m of baseRangeWithStoreAndTouchingDiffs) {\n\t\t\tif (shouldShowCodeLenses && m.left && (m.left.isConflicting || showNonConflictingChanges || !model.isHandled(m.left).read(reader))) {\n\t\t\t\tconst actions = new ActionsSource(viewModel, m.left);\n\t\t\t\tif (options.shouldAlignResult || !actions.inputIsEmpty.read(reader)) {\n\t\t\t\t\tinput1ViewZones.push(new CommandViewZone(this.conflictActionsFactoryInput1, m.left.input1Range.startLineNumber - 1, actions.itemsInput1));\n\t\t\t\t\tinput2ViewZones.push(new CommandViewZone(this.conflictActionsFactoryInput2, m.left.input2Range.startLineNumber - 1, actions.itemsInput2));\n\t\t\t\t\tif (options.shouldAlignBase) {\n\t\t\t\t\t\tbaseViewZones.push(new Placeholder(m.left.baseRange.startLineNumber - 1, 16));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst afterLineNumber = m.left.baseRange.startLineNumber + (lastBaseResultDiff?.resultingDeltaFromOriginalToModified ?? 0) - 1;\n\t\t\t\tresultViewZones.push(new CommandViewZone(this.conflictActionsFactoryResult, afterLineNumber, actions.resultItems));\n\n\t\t\t}\n\n\t\t\tconst lastResultDiff = m.rights.at(-1)!;\n\t\t\tif (lastResultDiff) {\n\t\t\t\tlastBaseResultDiff = lastResultDiff;\n\t\t\t}\n\t\t\tlet alignedLines: LineAlignment[];\n\t\t\tif (m.left) {\n\t\t\t\talignedLines = getAlignments(m.left).map(a => ({\n\t\t\t\t\tinput1Line: a[0],\n\t\t\t\t\tbaseLine: a[1],\n\t\t\t\t\tinput2Line: a[2],\n\t\t\t\t\tresultLine: undefined,\n\t\t\t\t}));\n\n\t\t\t\tlastModifiedBaseRange = m.left;\n\t\t\t\t// This is a total hack.\n\t\t\t\talignedLines[alignedLines.length - 1].resultLine =\n\t\t\t\t\tm.left.baseRange.endLineNumberExclusive\n\t\t\t\t\t+ (lastBaseResultDiff ? lastBaseResultDiff.resultingDeltaFromOriginalToModified : 0);\n\n\t\t\t} else {\n\t\t\t\talignedLines = [{\n\t\t\t\t\tbaseLine: lastResultDiff.inputRange.endLineNumberExclusive,\n\t\t\t\t\tinput1Line: lastResultDiff.inputRange.endLineNumberExclusive + (lastModifiedBaseRange ? (lastModifiedBaseRange.input1Range.endLineNumberExclusive - lastModifiedBaseRange.baseRange.endLineNumberExclusive) : 0),\n\t\t\t\t\tinput2Line: lastResultDiff.inputRange.endLineNumberExclusive + (lastModifiedBaseRange ? (lastModifiedBaseRange.input2Range.endLineNumberExclusive - lastModifiedBaseRange.baseRange.endLineNumberExclusive) : 0),\n\t\t\t\t\tresultLine: lastResultDiff.outputRange.endLineNumberExclusive,\n\t\t\t\t}];\n\t\t\t}\n\n\t\t\tfor (const { input1Line, baseLine, input2Line, resultLine } of alignedLines) {\n\t\t\t\tif (!options.shouldAlignBase && (input1Line === undefined || input2Line === undefined)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst input1Line_ =\n\t\t\t\t\tinput1Line !== undefined ? input1Line + input1LinesAdded : -1;\n\t\t\t\tconst input2Line_ =\n\t\t\t\t\tinput2Line !== undefined ? input2Line + input2LinesAdded : -1;\n\t\t\t\tconst baseLine_ = baseLine + baseLinesAdded;\n\t\t\t\tconst resultLine_ = resultLine !== undefined ? resultLine + resultLinesAdded : -1;\n\n\t\t\t\tconst max = Math.max(options.shouldAlignBase ? baseLine_ : 0, input1Line_, input2Line_, options.shouldAlignResult ? resultLine_ : 0);\n\n\t\t\t\tif (input1Line !== undefined) {\n\t\t\t\t\tconst diffInput1 = max - input1Line_;\n\t\t\t\t\tif (diffInput1 > 0) {\n\t\t\t\t\t\tinput1ViewZones.push(new Spacer(input1Line - 1, diffInput1));\n\t\t\t\t\t\tinput1LinesAdded += diffInput1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (input2Line !== undefined) {\n\t\t\t\t\tconst diffInput2 = max - input2Line_;\n\t\t\t\t\tif (diffInput2 > 0) {\n\t\t\t\t\t\tinput2ViewZones.push(new Spacer(input2Line - 1, diffInput2));\n\t\t\t\t\t\tinput2LinesAdded += diffInput2;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (options.shouldAlignBase) {\n\t\t\t\t\tconst diffBase = max - baseLine_;\n\t\t\t\t\tif (diffBase > 0) {\n\t\t\t\t\t\tbaseViewZones.push(new Spacer(baseLine - 1, diffBase));\n\t\t\t\t\t\tbaseLinesAdded += diffBase;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (options.shouldAlignResult && resultLine !== undefined) {\n\t\t\t\t\tconst diffResult = max - resultLine_;\n\t\t\t\t\tif (diffResult > 0) {\n\t\t\t\t\t\tresultViewZones.push(new Spacer(resultLine - 1, diffResult));\n\t\t\t\t\t\tresultLinesAdded += diffResult;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn new MergeEditorViewZones(input1ViewZones, input2ViewZones, baseViewZones, resultViewZones);\n\t}\n}\n\ninterface LineAlignment {\n\tbaseLine: number;\n\tinput1Line?: number;\n\tinput2Line?: number;\n\tresultLine?: number;\n}\n\nexport class MergeEditorViewZones {\n\tconstructor(\n\t\tpublic readonly input1ViewZones: readonly MergeEditorViewZone[],\n\t\tpublic readonly input2ViewZones: readonly MergeEditorViewZone[],\n\t\tpublic readonly baseViewZones: readonly MergeEditorViewZone[],\n\t\tpublic readonly resultViewZones: readonly MergeEditorViewZone[],\n\t) { }\n}\n\n/**\n * This is an abstract class to create various editor view zones.\n*/\nexport abstract class MergeEditorViewZone {\n\tabstract create(viewZoneChangeAccessor: IViewZoneChangeAccessor, viewZoneIdsToCleanUp: string[], disposableStore: DisposableStore): void;\n}\n\nclass Spacer extends MergeEditorViewZone {\n\tconstructor(\n\t\tprivate readonly afterLineNumber: number,\n\t\tprivate readonly heightInLines: number\n\t) {\n\t\tsuper();\n\t}\n\n\toverride create(\n\t\tviewZoneChangeAccessor: IViewZoneChangeAccessor,\n\t\tviewZoneIdsToCleanUp: string[],\n\t\tdisposableStore: DisposableStore\n\t): void {\n\t\tviewZoneIdsToCleanUp.push(\n\t\t\tviewZoneChangeAccessor.addZone({\n\t\t\t\tafterLineNumber: this.afterLineNumber,\n\t\t\t\theightInLines: this.heightInLines,\n\t\t\t\tdomNode: $('div.diagonal-fill'),\n\t\t\t})\n\t\t);\n\t}\n}\n\nclass Placeholder extends MergeEditorViewZone {\n\tconstructor(\n\t\tprivate readonly afterLineNumber: number,\n\t\tprivate readonly heightPx: number\n\t) {\n\t\tsuper();\n\t}\n\n\toverride create(\n\t\tviewZoneChangeAccessor: IViewZoneChangeAccessor,\n\t\tviewZoneIdsToCleanUp: string[],\n\t\tdisposableStore: DisposableStore\n\t): void {\n\t\tviewZoneIdsToCleanUp.push(\n\t\t\tviewZoneChangeAccessor.addZone({\n\t\t\t\tafterLineNumber: this.afterLineNumber,\n\t\t\t\theightInPx: this.heightPx,\n\t\t\t\tdomNode: $('div.conflict-actions-placeholder'),\n\t\t\t})\n\t\t);\n\t}\n}\n\nclass CommandViewZone extends MergeEditorViewZone {\n\tconstructor(\n\t\tprivate readonly conflictActionsFactory: ConflictActionsFactory,\n\t\tprivate readonly lineNumber: number,\n\t\tprivate readonly items: IObservable<IContentWidgetAction[]>,\n\t) {\n\t\tsuper();\n\t}\n\n\toverride create(viewZoneChangeAccessor: IViewZoneChangeAccessor, viewZoneIdsToCleanUp: string[], disposableStore: DisposableStore): void {\n\t\tdisposableStore.add(\n\t\t\tthis.conflictActionsFactory.createWidget(\n\t\t\t\tviewZoneChangeAccessor,\n\t\t\t\tthis.lineNumber,\n\t\t\t\tthis.items,\n\t\t\t\tviewZoneIdsToCleanUp,\n\t\t\t)\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
