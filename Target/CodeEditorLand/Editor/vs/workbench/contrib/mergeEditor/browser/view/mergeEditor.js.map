{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/mergeEditor/browser/view/mergeEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Dimension, reset } from '../../../../../base/browser/dom.js';\nimport { Grid, GridNodeDescriptor, IView, SerializableGrid } from '../../../../../base/browser/ui/grid/grid.js';\nimport { Orientation } from '../../../../../base/browser/ui/splitview/splitview.js';\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { Color } from '../../../../../base/common/color.js';\nimport { BugIndicatingError, onUnexpectedError } from '../../../../../base/common/errors.js';\nimport { Emitter, Event } from '../../../../../base/common/event.js';\nimport { Disposable, DisposableStore, IDisposable, MutableDisposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { autorun, autorunWithStore, IObservable, IReader, observableValue, transaction } from '../../../../../base/common/observable.js';\nimport { basename, isEqual } from '../../../../../base/common/resources.js';\nimport { isDefined } from '../../../../../base/common/types.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport './media/mergeEditor.css';\nimport { ICodeEditor, IViewZoneChangeAccessor } from '../../../../../editor/browser/editorBrowser.js';\nimport { ICodeEditorService } from '../../../../../editor/browser/services/codeEditorService.js';\nimport { IEditorOptions as ICodeEditorOptions } from '../../../../../editor/common/config/editorOptions.js';\nimport { ICodeEditorViewState, ScrollType } from '../../../../../editor/common/editorCommon.js';\nimport { ITextModel } from '../../../../../editor/common/model.js';\nimport { ITextResourceConfigurationService } from '../../../../../editor/common/services/textResourceConfiguration.js';\nimport { localize } from '../../../../../nls.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { IContextKey, IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IEditorOptions, ITextEditorOptions, ITextResourceEditorInput } from '../../../../../platform/editor/common/editor.js';\nimport { IFileService } from '../../../../../platform/files/common/files.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../../platform/storage/common/storage.js';\nimport { ITelemetryService } from '../../../../../platform/telemetry/common/telemetry.js';\nimport { IThemeService } from '../../../../../platform/theme/common/themeService.js';\nimport { AbstractTextEditor } from '../../../../browser/parts/editor/textEditor.js';\nimport { DEFAULT_EDITOR_ASSOCIATION, EditorInputWithOptions, IEditorOpenContext, IResourceMergeEditorInput } from '../../../../common/editor.js';\nimport { EditorInput } from '../../../../common/editor/editorInput.js';\nimport { applyTextEditorOptions } from '../../../../common/editor/editorOptions.js';\nimport { readTransientState, writeTransientState } from '../../../codeEditor/browser/toggleWordWrap.js';\nimport { MergeEditorInput } from '../mergeEditorInput.js';\nimport { IMergeEditorInputModel } from '../mergeEditorInputModel.js';\nimport { MergeEditorModel } from '../model/mergeEditorModel.js';\nimport { deepMerge, PersistentStore, thenIfNotDisposed } from '../utils.js';\nimport { observableConfigValue } from '../../../../../platform/observable/common/platformObservableUtils.js';\nimport { BaseCodeEditorView } from './editors/baseCodeEditorView.js';\nimport { ScrollSynchronizer } from './scrollSynchronizer.js';\nimport { MergeEditorViewModel } from './viewModel.js';\nimport { ViewZoneComputer } from './viewZones.js';\nimport { ctxIsMergeEditor, ctxMergeBaseUri, ctxMergeEditorLayout, ctxMergeEditorShowBase, ctxMergeEditorShowBaseAtTop, ctxMergeEditorShowNonConflictingChanges, ctxMergeResultUri, MergeEditorLayoutKind } from '../../common/mergeEditor.js';\nimport { settingsSashBorder } from '../../../preferences/common/settingsEditorColorRegistry.js';\nimport { IEditorGroup, IEditorGroupsService } from '../../../../services/editor/common/editorGroupsService.js';\nimport { IEditorResolverService, MergeEditorInputFactoryFunction, RegisteredEditorPriority } from '../../../../services/editor/common/editorResolverService.js';\nimport { IEditorService } from '../../../../services/editor/common/editorService.js';\nimport './colors.js';\nimport { InputCodeEditorView } from './editors/inputCodeEditorView.js';\nimport { ResultCodeEditorView } from './editors/resultCodeEditorView.js';\n\nexport class MergeEditor extends AbstractTextEditor<IMergeEditorViewState> {\n\n\tstatic readonly ID = 'mergeEditor';\n\n\tprivate readonly _sessionDisposables = new DisposableStore();\n\tprivate readonly _viewModel = observableValue<MergeEditorViewModel | undefined>(this, undefined);\n\n\tpublic get viewModel(): IObservable<MergeEditorViewModel | undefined> {\n\t\treturn this._viewModel;\n\t}\n\n\tprivate rootHtmlElement: HTMLElement | undefined;\n\tprivate readonly _grid = this._register(new MutableDisposable<Grid<IView>>());\n\tprivate readonly input1View = this._register(this.instantiationService.createInstance(InputCodeEditorView, 1, this._viewModel));\n\tprivate readonly baseView = observableValue<BaseCodeEditorView | undefined>(this, undefined);\n\tprivate readonly baseViewOptions = observableValue<Readonly<ICodeEditorOptions> | undefined>(this, undefined);\n\tprivate readonly input2View = this._register(this.instantiationService.createInstance(InputCodeEditorView, 2, this._viewModel));\n\n\tprivate readonly inputResultView = this._register(this.instantiationService.createInstance(ResultCodeEditorView, this._viewModel));\n\tprivate readonly _layoutMode = this.instantiationService.createInstance(MergeEditorLayoutStore);\n\tprivate readonly _layoutModeObs = observableValue(this, this._layoutMode.value);\n\tprivate readonly _ctxIsMergeEditor: IContextKey<boolean> = ctxIsMergeEditor.bindTo(this.contextKeyService);\n\tprivate readonly _ctxUsesColumnLayout: IContextKey<string> = ctxMergeEditorLayout.bindTo(this.contextKeyService);\n\tprivate readonly _ctxShowBase: IContextKey<boolean> = ctxMergeEditorShowBase.bindTo(this.contextKeyService);\n\tprivate readonly _ctxShowBaseAtTop = ctxMergeEditorShowBaseAtTop.bindTo(this.contextKeyService);\n\tprivate readonly _ctxResultUri: IContextKey<string> = ctxMergeResultUri.bindTo(this.contextKeyService);\n\tprivate readonly _ctxBaseUri: IContextKey<string> = ctxMergeBaseUri.bindTo(this.contextKeyService);\n\tprivate readonly _ctxShowNonConflictingChanges: IContextKey<boolean> = ctxMergeEditorShowNonConflictingChanges.bindTo(this.contextKeyService);\n\tprivate readonly _inputModel = observableValue<IMergeEditorInputModel | undefined>(this, undefined);\n\tpublic get inputModel(): IObservable<IMergeEditorInputModel | undefined> {\n\t\treturn this._inputModel;\n\t}\n\tpublic get model(): MergeEditorModel | undefined {\n\t\treturn this.inputModel.get()?.model;\n\t}\n\n\tprivate get inputsWritable(): boolean {\n\t\treturn !!this._configurationService.getValue<boolean>('mergeEditor.writableInputs');\n\t}\n\n\tprivate readonly viewZoneComputer = new ViewZoneComputer(\n\t\tthis.input1View.editor,\n\t\tthis.input2View.editor,\n\t\tthis.inputResultView.editor,\n\t);\n\n\tprotected readonly codeLensesVisible = observableConfigValue<boolean>(\n\t\t'mergeEditor.showCodeLenses',\n\t\ttrue,\n\t\tthis.configurationService,\n\t);\n\n\tprivate readonly scrollSynchronizer = this._register(new ScrollSynchronizer(this._viewModel, this.input1View, this.input2View, this.baseView, this.inputResultView, this._layoutModeObs));\n\n\tconstructor(\n\t\tgroup: IEditorGroup,\n\t\t@IInstantiationService instantiation: IInstantiationService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITextResourceConfigurationService textResourceConfigurationService: ITextResourceConfigurationService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ICodeEditorService private readonly _codeEditorService: ICodeEditorService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper(MergeEditor.ID, group, telemetryService, instantiation, storageService, textResourceConfigurationService, themeService, editorService, editorGroupService, fileService);\n\t}\n\n\toverride dispose(): void {\n\t\tthis._sessionDisposables.dispose();\n\t\tthis._ctxIsMergeEditor.reset();\n\t\tthis._ctxUsesColumnLayout.reset();\n\t\tthis._ctxShowNonConflictingChanges.reset();\n\t\tsuper.dispose();\n\t}\n\n\t// #region layout constraints\n\n\tprivate readonly _onDidChangeSizeConstraints = new Emitter<void>();\n\toverride readonly onDidChangeSizeConstraints: Event<void> = this._onDidChangeSizeConstraints.event;\n\n\toverride get minimumWidth() {\n\t\treturn this._layoutMode.value.kind === 'mixed'\n\t\t\t? this.input1View.view.minimumWidth + this.input2View.view.minimumWidth\n\t\t\t: this.input1View.view.minimumWidth + this.input2View.view.minimumWidth + this.inputResultView.view.minimumWidth;\n\t}\n\n\t// #endregion\n\n\toverride getTitle(): string {\n\t\tif (this.input) {\n\t\t\treturn this.input.getName();\n\t\t}\n\n\t\treturn localize('mergeEditor', \"Text Merge Editor\");\n\t}\n\n\tprotected createEditorControl(parent: HTMLElement, initialOptions: ICodeEditorOptions): void {\n\t\tthis.rootHtmlElement = parent;\n\t\tparent.classList.add('merge-editor');\n\t\tthis.applyLayout(this._layoutMode.value);\n\t\tthis.applyOptions(initialOptions);\n\t}\n\n\tprotected updateEditorControlOptions(options: ICodeEditorOptions): void {\n\t\tthis.applyOptions(options);\n\t}\n\n\tprivate applyOptions(options: ICodeEditorOptions): void {\n\t\tconst inputOptions: ICodeEditorOptions = deepMerge<ICodeEditorOptions>(options, {\n\t\t\tminimap: { enabled: false },\n\t\t\tglyphMargin: false,\n\t\t\tlineNumbersMinChars: 2,\n\t\t\treadOnly: !this.inputsWritable\n\t\t});\n\n\t\tthis.input1View.updateOptions(inputOptions);\n\t\tthis.input2View.updateOptions(inputOptions);\n\t\tthis.baseViewOptions.set({ ...this.input2View.editor.getRawOptions() }, undefined);\n\t\tthis.inputResultView.updateOptions(options);\n\t}\n\n\tprotected getMainControl(): ICodeEditor | undefined {\n\t\treturn this.inputResultView.editor;\n\t}\n\n\tlayout(dimension: Dimension): void {\n\t\tthis._grid.value?.layout(dimension.width, dimension.height);\n\t}\n\n\toverride async setInput(input: EditorInput, options: IEditorOptions | undefined, context: IEditorOpenContext, token: CancellationToken): Promise<void> {\n\t\tif (!(input instanceof MergeEditorInput)) {\n\t\t\tthrow new BugIndicatingError('ONLY MergeEditorInput is supported');\n\t\t}\n\t\tawait super.setInput(input, options, context, token);\n\n\t\tthis._sessionDisposables.clear();\n\t\ttransaction(tx => {\n\t\t\tthis._viewModel.set(undefined, tx);\n\t\t\tthis._inputModel.set(undefined, tx);\n\t\t});\n\n\t\tconst inputModel = await input.resolve();\n\t\tconst model = inputModel.model;\n\n\t\tconst viewModel = this.instantiationService.createInstance(\n\t\t\tMergeEditorViewModel,\n\t\t\tmodel,\n\t\t\tthis.input1View,\n\t\t\tthis.input2View,\n\t\t\tthis.inputResultView,\n\t\t\tthis.baseView,\n\t\t\tthis.showNonConflictingChanges,\n\t\t);\n\n\n\t\tmodel.telemetry.reportMergeEditorOpened({\n\t\t\tcombinableConflictCount: model.combinableConflictCount,\n\t\t\tconflictCount: model.conflictCount,\n\n\t\t\tbaseTop: this._layoutModeObs.get().showBaseAtTop,\n\t\t\tbaseVisible: this._layoutModeObs.get().showBase,\n\t\t\tisColumnView: this._layoutModeObs.get().kind === 'columns',\n\t\t});\n\n\t\ttransaction(tx => {\n\t\t\tthis._viewModel.set(viewModel, tx);\n\t\t\tthis._inputModel.set(inputModel, tx);\n\t\t});\n\t\tthis._sessionDisposables.add(viewModel);\n\n\t\t// Set/unset context keys based on input\n\t\tthis._ctxResultUri.set(inputModel.resultUri.toString());\n\t\tthis._ctxBaseUri.set(model.base.uri.toString());\n\t\tthis._sessionDisposables.add(toDisposable(() => {\n\t\t\tthis._ctxBaseUri.reset();\n\t\t\tthis._ctxResultUri.reset();\n\t\t}));\n\n\t\t// Set the view zones before restoring view state!\n\t\t// Otherwise scrolling will be off\n\t\tthis._sessionDisposables.add(autorunWithStore((reader, store) => {\n\t\t\t/** @description update alignment view zones */\n\t\t\tconst baseView = this.baseView.read(reader);\n\n\t\t\tthis.inputResultView.editor.changeViewZones(resultViewZoneAccessor => {\n\t\t\t\tconst layout = this._layoutModeObs.read(reader);\n\t\t\t\tconst shouldAlignResult = layout.kind === 'columns';\n\t\t\t\tconst shouldAlignBase = layout.kind === 'mixed' && !layout.showBaseAtTop;\n\n\t\t\t\tthis.input1View.editor.changeViewZones(input1ViewZoneAccessor => {\n\t\t\t\t\tthis.input2View.editor.changeViewZones(input2ViewZoneAccessor => {\n\t\t\t\t\t\tif (baseView) {\n\t\t\t\t\t\t\tbaseView.editor.changeViewZones(baseViewZoneAccessor => {\n\t\t\t\t\t\t\t\tstore.add(this.setViewZones(reader,\n\t\t\t\t\t\t\t\t\tviewModel,\n\t\t\t\t\t\t\t\t\tthis.input1View.editor,\n\t\t\t\t\t\t\t\t\tinput1ViewZoneAccessor,\n\t\t\t\t\t\t\t\t\tthis.input2View.editor,\n\t\t\t\t\t\t\t\t\tinput2ViewZoneAccessor,\n\t\t\t\t\t\t\t\t\tbaseView.editor,\n\t\t\t\t\t\t\t\t\tbaseViewZoneAccessor,\n\t\t\t\t\t\t\t\t\tshouldAlignBase,\n\t\t\t\t\t\t\t\t\tthis.inputResultView.editor,\n\t\t\t\t\t\t\t\t\tresultViewZoneAccessor,\n\t\t\t\t\t\t\t\t\tshouldAlignResult\n\t\t\t\t\t\t\t\t));\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstore.add(this.setViewZones(reader,\n\t\t\t\t\t\t\t\tviewModel,\n\t\t\t\t\t\t\t\tthis.input1View.editor,\n\t\t\t\t\t\t\t\tinput1ViewZoneAccessor,\n\t\t\t\t\t\t\t\tthis.input2View.editor,\n\t\t\t\t\t\t\t\tinput2ViewZoneAccessor,\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\tthis.inputResultView.editor,\n\t\t\t\t\t\t\t\tresultViewZoneAccessor,\n\t\t\t\t\t\t\t\tshouldAlignResult\n\t\t\t\t\t\t\t));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tthis.scrollSynchronizer.updateScrolling();\n\t\t}));\n\n\t\tconst viewState = this.loadEditorViewState(input, context);\n\t\tif (viewState) {\n\t\t\tthis._applyViewState(viewState);\n\t\t} else {\n\t\t\tthis._sessionDisposables.add(thenIfNotDisposed(model.onInitialized, () => {\n\t\t\t\tconst firstConflict = model.modifiedBaseRanges.get().find(r => r.isConflicting);\n\t\t\t\tif (!firstConflict) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.input1View.editor.revealLineInCenter(firstConflict.input1Range.startLineNumber);\n\t\t\t\ttransaction(tx => {\n\t\t\t\t\t/** @description setActiveModifiedBaseRange */\n\t\t\t\t\tviewModel.setActiveModifiedBaseRange(firstConflict, tx);\n\t\t\t\t});\n\t\t\t}));\n\t\t}\n\n\t\t// word wrap special case - sync transient state from result model to input[1|2] models\n\t\tconst mirrorWordWrapTransientState = (candidate: ITextModel) => {\n\t\t\tconst candidateState = readTransientState(candidate, this._codeEditorService);\n\n\t\t\twriteTransientState(model.input2.textModel, candidateState, this._codeEditorService);\n\t\t\twriteTransientState(model.input1.textModel, candidateState, this._codeEditorService);\n\t\t\twriteTransientState(model.resultTextModel, candidateState, this._codeEditorService);\n\n\t\t\tconst baseTextModel = this.baseView.get()?.editor.getModel();\n\t\t\tif (baseTextModel) {\n\t\t\t\twriteTransientState(baseTextModel, candidateState, this._codeEditorService);\n\t\t\t}\n\t\t};\n\t\tthis._sessionDisposables.add(this._codeEditorService.onDidChangeTransientModelProperty(candidate => {\n\t\t\tmirrorWordWrapTransientState(candidate);\n\t\t}));\n\t\tmirrorWordWrapTransientState(this.inputResultView.editor.getModel()!);\n\n\t\t// detect when base, input1, and input2 become empty and replace THIS editor with its result editor\n\t\t// TODO@jrieken@hediet this needs a better/cleaner solution\n\t\t// https://github.com/microsoft/vscode/issues/155940\n\t\tconst that = this;\n\t\tthis._sessionDisposables.add(new class {\n\n\t\t\tprivate readonly _disposable = new DisposableStore();\n\n\t\t\tconstructor() {\n\t\t\t\tfor (const model of this.baseInput1Input2()) {\n\t\t\t\t\tthis._disposable.add(model.onDidChangeContent(() => this._checkBaseInput1Input2AllEmpty()));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdispose() {\n\t\t\t\tthis._disposable.dispose();\n\t\t\t}\n\n\t\t\tprivate *baseInput1Input2() {\n\t\t\t\tyield model.base;\n\t\t\t\tyield model.input1.textModel;\n\t\t\t\tyield model.input2.textModel;\n\t\t\t}\n\n\t\t\tprivate _checkBaseInput1Input2AllEmpty() {\n\t\t\t\tfor (const model of this.baseInput1Input2()) {\n\t\t\t\t\tif (model.getValueLength() > 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// all empty -> replace this editor with a normal editor for result\n\t\t\t\tthat.editorService.replaceEditors(\n\t\t\t\t\t[{ editor: input, replacement: { resource: input.result, options: { preserveFocus: true } }, forceReplaceDirty: true }],\n\t\t\t\t\tthat.group\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate setViewZones(\n\t\treader: IReader,\n\t\tviewModel: MergeEditorViewModel,\n\t\tinput1Editor: ICodeEditor,\n\t\tinput1ViewZoneAccessor: IViewZoneChangeAccessor,\n\t\tinput2Editor: ICodeEditor,\n\t\tinput2ViewZoneAccessor: IViewZoneChangeAccessor,\n\t\tbaseEditor: ICodeEditor | undefined,\n\t\tbaseViewZoneAccessor: IViewZoneChangeAccessor | undefined,\n\t\tshouldAlignBase: boolean,\n\t\tresultEditor: ICodeEditor,\n\t\tresultViewZoneAccessor: IViewZoneChangeAccessor,\n\t\tshouldAlignResult: boolean,\n\t): IDisposable {\n\t\tconst input1ViewZoneIds: string[] = [];\n\t\tconst input2ViewZoneIds: string[] = [];\n\t\tconst baseViewZoneIds: string[] = [];\n\t\tconst resultViewZoneIds: string[] = [];\n\n\t\tconst viewZones = this.viewZoneComputer.computeViewZones(reader, viewModel, {\n\t\t\tcodeLensesVisible: this.codeLensesVisible.read(reader),\n\t\t\tshowNonConflictingChanges: this.showNonConflictingChanges.read(reader),\n\t\t\tshouldAlignBase,\n\t\t\tshouldAlignResult,\n\t\t});\n\n\t\tconst disposableStore = new DisposableStore();\n\n\t\tif (baseViewZoneAccessor) {\n\t\t\tfor (const v of viewZones.baseViewZones) {\n\t\t\t\tv.create(baseViewZoneAccessor, baseViewZoneIds, disposableStore);\n\t\t\t}\n\t\t}\n\n\t\tfor (const v of viewZones.resultViewZones) {\n\t\t\tv.create(resultViewZoneAccessor, resultViewZoneIds, disposableStore);\n\t\t}\n\n\t\tfor (const v of viewZones.input1ViewZones) {\n\t\t\tv.create(input1ViewZoneAccessor, input1ViewZoneIds, disposableStore);\n\t\t}\n\n\t\tfor (const v of viewZones.input2ViewZones) {\n\t\t\tv.create(input2ViewZoneAccessor, input2ViewZoneIds, disposableStore);\n\t\t}\n\n\t\tdisposableStore.add({\n\t\t\tdispose: () => {\n\t\t\t\tinput1Editor.changeViewZones(a => {\n\t\t\t\t\tfor (const zone of input1ViewZoneIds) {\n\t\t\t\t\t\ta.removeZone(zone);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tinput2Editor.changeViewZones(a => {\n\t\t\t\t\tfor (const zone of input2ViewZoneIds) {\n\t\t\t\t\t\ta.removeZone(zone);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tbaseEditor?.changeViewZones(a => {\n\t\t\t\t\tfor (const zone of baseViewZoneIds) {\n\t\t\t\t\t\ta.removeZone(zone);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresultEditor.changeViewZones(a => {\n\t\t\t\t\tfor (const zone of resultViewZoneIds) {\n\t\t\t\t\t\ta.removeZone(zone);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn disposableStore;\n\t}\n\n\toverride setOptions(options: ITextEditorOptions | undefined): void {\n\t\tsuper.setOptions(options);\n\n\t\tif (options) {\n\t\t\tapplyTextEditorOptions(options, this.inputResultView.editor, ScrollType.Smooth);\n\t\t}\n\t}\n\n\toverride clearInput(): void {\n\t\tsuper.clearInput();\n\n\t\tthis._sessionDisposables.clear();\n\n\t\tfor (const { editor } of [this.input1View, this.input2View, this.inputResultView]) {\n\t\t\teditor.setModel(null);\n\t\t}\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\n\t\t(this.getControl() ?? this.inputResultView.editor).focus();\n\t}\n\n\toverride hasFocus(): boolean {\n\t\tfor (const { editor } of [this.input1View, this.input2View, this.inputResultView]) {\n\t\t\tif (editor.hasTextFocus()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn super.hasFocus();\n\t}\n\n\tprotected override setEditorVisible(visible: boolean): void {\n\t\tsuper.setEditorVisible(visible);\n\n\t\tfor (const { editor } of [this.input1View, this.input2View, this.inputResultView]) {\n\t\t\tif (visible) {\n\t\t\t\teditor.onVisible();\n\t\t\t} else {\n\t\t\t\teditor.onHide();\n\t\t\t}\n\t\t}\n\n\t\tthis._ctxIsMergeEditor.set(visible);\n\t}\n\n\t// ---- interact with \"outside world\" via`getControl`, `scopedContextKeyService`: we only expose the result-editor keep the others internal\n\n\toverride getControl(): ICodeEditor | undefined {\n\t\treturn this.inputResultView.editor;\n\t}\n\n\toverride get scopedContextKeyService(): IContextKeyService | undefined {\n\t\tconst control = this.getControl();\n\t\treturn control?.invokeWithinContext(accessor => accessor.get(IContextKeyService));\n\t}\n\n\t// --- layout\n\n\tpublic toggleBase(): void {\n\t\tthis.setLayout({\n\t\t\t...this._layoutMode.value,\n\t\t\tshowBase: !this._layoutMode.value.showBase\n\t\t});\n\t}\n\n\tpublic toggleShowBaseTop(): void {\n\t\tconst showBaseTop = this._layoutMode.value.showBase && this._layoutMode.value.showBaseAtTop;\n\t\tthis.setLayout({\n\t\t\t...this._layoutMode.value,\n\t\t\tshowBaseAtTop: true,\n\t\t\tshowBase: !showBaseTop,\n\t\t});\n\t}\n\n\tpublic toggleShowBaseCenter(): void {\n\t\tconst showBaseCenter = this._layoutMode.value.showBase && !this._layoutMode.value.showBaseAtTop;\n\t\tthis.setLayout({\n\t\t\t...this._layoutMode.value,\n\t\t\tshowBaseAtTop: false,\n\t\t\tshowBase: !showBaseCenter,\n\t\t});\n\t}\n\n\tpublic setLayoutKind(kind: MergeEditorLayoutKind): void {\n\t\tthis.setLayout({\n\t\t\t...this._layoutMode.value,\n\t\t\tkind\n\t\t});\n\t}\n\n\tpublic setLayout(newLayout: IMergeEditorLayout): void {\n\t\tconst value = this._layoutMode.value;\n\t\tif (JSON.stringify(value) === JSON.stringify(newLayout)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.model?.telemetry.reportLayoutChange({\n\t\t\tbaseTop: newLayout.showBaseAtTop,\n\t\t\tbaseVisible: newLayout.showBase,\n\t\t\tisColumnView: newLayout.kind === 'columns',\n\t\t});\n\t\tthis.applyLayout(newLayout);\n\t}\n\n\tprivate readonly baseViewDisposables = this._register(new DisposableStore());\n\n\tprivate applyLayout(layout: IMergeEditorLayout): void {\n\t\ttransaction(tx => {\n\t\t\t/** @description applyLayout */\n\n\t\t\tif (layout.showBase && !this.baseView.get()) {\n\t\t\t\tthis.baseViewDisposables.clear();\n\t\t\t\tconst baseView = this.baseViewDisposables.add(\n\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\tBaseCodeEditorView,\n\t\t\t\t\t\tthis.viewModel\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tthis.baseViewDisposables.add(autorun(reader => {\n\t\t\t\t\t/** @description Update base view options */\n\t\t\t\t\tconst options = this.baseViewOptions.read(reader);\n\t\t\t\t\tif (options) {\n\t\t\t\t\t\tbaseView.updateOptions(options);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t\tthis.baseView.set(baseView, tx);\n\t\t\t} else if (!layout.showBase && this.baseView.get()) {\n\t\t\t\tthis.baseView.set(undefined, tx);\n\t\t\t\tthis.baseViewDisposables.clear();\n\t\t\t}\n\n\t\t\tif (layout.kind === 'mixed') {\n\t\t\t\tthis.setGrid([\n\t\t\t\t\tlayout.showBaseAtTop && layout.showBase ? {\n\t\t\t\t\t\tsize: 38,\n\t\t\t\t\t\tdata: this.baseView.get()!.view\n\t\t\t\t\t} : undefined,\n\t\t\t\t\t{\n\t\t\t\t\t\tsize: 38,\n\t\t\t\t\t\tgroups: [\n\t\t\t\t\t\t\t{ data: this.input1View.view },\n\t\t\t\t\t\t\t!layout.showBaseAtTop && layout.showBase ? { data: this.baseView.get()!.view } : undefined,\n\t\t\t\t\t\t\t{ data: this.input2View.view }\n\t\t\t\t\t\t].filter(isDefined)\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tsize: 62,\n\t\t\t\t\t\tdata: this.inputResultView.view\n\t\t\t\t\t},\n\t\t\t\t].filter(isDefined));\n\t\t\t} else if (layout.kind === 'columns') {\n\t\t\t\tthis.setGrid([\n\t\t\t\t\tlayout.showBase ? {\n\t\t\t\t\t\tsize: 40,\n\t\t\t\t\t\tdata: this.baseView.get()!.view\n\t\t\t\t\t} : undefined,\n\t\t\t\t\t{\n\t\t\t\t\t\tsize: 60,\n\t\t\t\t\t\tgroups: [{ data: this.input1View.view }, { data: this.inputResultView.view }, { data: this.input2View.view }]\n\t\t\t\t\t},\n\t\t\t\t].filter(isDefined));\n\t\t\t}\n\n\t\t\tthis._layoutMode.value = layout;\n\t\t\tthis._ctxUsesColumnLayout.set(layout.kind);\n\t\t\tthis._ctxShowBase.set(layout.showBase);\n\t\t\tthis._ctxShowBaseAtTop.set(layout.showBaseAtTop);\n\t\t\tthis._onDidChangeSizeConstraints.fire();\n\t\t\tthis._layoutModeObs.set(layout, tx);\n\t\t});\n\t}\n\n\tprivate setGrid(descriptor: GridNodeDescriptor<any>[]) {\n\t\tlet width = -1;\n\t\tlet height = -1;\n\t\tif (this._grid.value) {\n\t\t\twidth = this._grid.value.width;\n\t\t\theight = this._grid.value.height;\n\t\t}\n\t\tthis._grid.value = SerializableGrid.from<any>({\n\t\t\torientation: Orientation.VERTICAL,\n\t\t\tsize: 100,\n\t\t\tgroups: descriptor,\n\t\t}, {\n\t\t\tstyles: { separatorBorder: this.theme.getColor(settingsSashBorder) ?? Color.transparent },\n\t\t\tproportionalLayout: true\n\t\t});\n\n\t\treset(this.rootHtmlElement!, this._grid.value.element);\n\t\t// Only call layout after the elements have been added to the DOM,\n\t\t// so that they have a defined size.\n\t\tif (width !== -1) {\n\t\t\tthis._grid.value.layout(width, height);\n\t\t}\n\t}\n\n\tprivate _applyViewState(state: IMergeEditorViewState | undefined) {\n\t\tif (!state) {\n\t\t\treturn;\n\t\t}\n\t\tthis.inputResultView.editor.restoreViewState(state);\n\t\tif (state.input1State) {\n\t\t\tthis.input1View.editor.restoreViewState(state.input1State);\n\t\t}\n\t\tif (state.input2State) {\n\t\t\tthis.input2View.editor.restoreViewState(state.input2State);\n\t\t}\n\t\tif (state.focusIndex >= 0) {\n\t\t\t[this.input1View.editor, this.input2View.editor, this.inputResultView.editor][state.focusIndex].focus();\n\t\t}\n\t}\n\n\tprotected computeEditorViewState(resource: URI): IMergeEditorViewState | undefined {\n\t\tif (!isEqual(this.inputModel.get()?.resultUri, resource)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst result = this.inputResultView.editor.saveViewState();\n\t\tif (!result) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst input1State = this.input1View.editor.saveViewState() ?? undefined;\n\t\tconst input2State = this.input2View.editor.saveViewState() ?? undefined;\n\t\tconst focusIndex = [this.input1View.editor, this.input2View.editor, this.inputResultView.editor].findIndex(editor => editor.hasWidgetFocus());\n\t\treturn { ...result, input1State, input2State, focusIndex };\n\t}\n\n\n\tprotected tracksEditorViewState(input: EditorInput): boolean {\n\t\treturn input instanceof MergeEditorInput;\n\t}\n\n\tprivate readonly showNonConflictingChangesStore = this.instantiationService.createInstance(PersistentStore<boolean>, 'mergeEditor/showNonConflictingChanges');\n\tprivate readonly showNonConflictingChanges = observableValue(this, this.showNonConflictingChangesStore.get() ?? false);\n\n\tpublic toggleShowNonConflictingChanges(): void {\n\t\tthis.showNonConflictingChanges.set(!this.showNonConflictingChanges.get(), undefined);\n\t\tthis.showNonConflictingChangesStore.set(this.showNonConflictingChanges.get());\n\t\tthis._ctxShowNonConflictingChanges.set(this.showNonConflictingChanges.get());\n\t}\n}\n\nexport interface IMergeEditorLayout {\n\treadonly kind: MergeEditorLayoutKind;\n\treadonly showBase: boolean;\n\treadonly showBaseAtTop: boolean;\n}\n\n// TODO use PersistentStore\nclass MergeEditorLayoutStore {\n\tprivate static readonly _key = 'mergeEditor/layout';\n\tprivate _value: IMergeEditorLayout = { kind: 'mixed', showBase: false, showBaseAtTop: true };\n\n\tconstructor(@IStorageService private _storageService: IStorageService) {\n\t\tconst value = _storageService.get(MergeEditorLayoutStore._key, StorageScope.PROFILE, 'mixed');\n\n\t\tif (value === 'mixed' || value === 'columns') {\n\t\t\tthis._value = { kind: value, showBase: false, showBaseAtTop: true };\n\t\t} else if (value) {\n\t\t\ttry {\n\t\t\t\tthis._value = JSON.parse(value);\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t}\n\t\t}\n\t}\n\n\tget value() {\n\t\treturn this._value;\n\t}\n\n\tset value(value: IMergeEditorLayout) {\n\t\tif (this._value !== value) {\n\t\t\tthis._value = value;\n\t\t\tthis._storageService.store(MergeEditorLayoutStore._key, JSON.stringify(this._value), StorageScope.PROFILE, StorageTarget.USER);\n\t\t}\n\t}\n}\n\nexport class MergeEditorOpenHandlerContribution extends Disposable {\n\n\tconstructor(\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t) {\n\t\tsuper();\n\t\tthis._store.add(codeEditorService.registerCodeEditorOpenHandler(this.openCodeEditorFromMergeEditor.bind(this)));\n\t}\n\n\tprivate async openCodeEditorFromMergeEditor(input: ITextResourceEditorInput, _source: ICodeEditor | null, sideBySide?: boolean | undefined): Promise<ICodeEditor | null> {\n\t\tconst activePane = this._editorService.activeEditorPane;\n\t\tif (!sideBySide\n\t\t\t&& input.options\n\t\t\t&& activePane instanceof MergeEditor\n\t\t\t&& activePane.getControl()\n\t\t\t&& activePane.input instanceof MergeEditorInput\n\t\t\t&& isEqual(input.resource, activePane.input.result)\n\t\t) {\n\t\t\t// Special: stay inside the merge editor when it is active and when the input\n\t\t\t// targets the result editor of the merge editor.\n\t\t\tconst targetEditor = <ICodeEditor>activePane.getControl()!;\n\t\t\tapplyTextEditorOptions(input.options, targetEditor, ScrollType.Smooth);\n\t\t\treturn targetEditor;\n\t\t}\n\n\t\t// cannot handle this\n\t\treturn null;\n\t}\n}\n\nexport class MergeEditorResolverContribution extends Disposable {\n\n\tstatic readonly ID = 'workbench.contrib.mergeEditorResolver';\n\n\tconstructor(\n\t\t@IEditorResolverService editorResolverService: IEditorResolverService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tconst mergeEditorInputFactory: MergeEditorInputFactoryFunction = (mergeEditor: IResourceMergeEditorInput): EditorInputWithOptions => {\n\t\t\treturn {\n\t\t\t\teditor: instantiationService.createInstance(\n\t\t\t\t\tMergeEditorInput,\n\t\t\t\t\tmergeEditor.base.resource,\n\t\t\t\t\t{\n\t\t\t\t\t\turi: mergeEditor.input1.resource,\n\t\t\t\t\t\ttitle: mergeEditor.input1.label ?? basename(mergeEditor.input1.resource),\n\t\t\t\t\t\tdescription: mergeEditor.input1.description ?? '',\n\t\t\t\t\t\tdetail: mergeEditor.input1.detail\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\turi: mergeEditor.input2.resource,\n\t\t\t\t\t\ttitle: mergeEditor.input2.label ?? basename(mergeEditor.input2.resource),\n\t\t\t\t\t\tdescription: mergeEditor.input2.description ?? '',\n\t\t\t\t\t\tdetail: mergeEditor.input2.detail\n\t\t\t\t\t},\n\t\t\t\t\tmergeEditor.result.resource\n\t\t\t\t)\n\t\t\t};\n\t\t};\n\n\t\tthis._register(editorResolverService.registerEditor(\n\t\t\t`*`,\n\t\t\t{\n\t\t\t\tid: DEFAULT_EDITOR_ASSOCIATION.id,\n\t\t\t\tlabel: DEFAULT_EDITOR_ASSOCIATION.displayName,\n\t\t\t\tdetail: DEFAULT_EDITOR_ASSOCIATION.providerDisplayName,\n\t\t\t\tpriority: RegisteredEditorPriority.builtin\n\t\t\t},\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateMergeEditorInput: mergeEditorInputFactory\n\t\t\t}\n\t\t));\n\t}\n}\n\ntype IMergeEditorViewState = ICodeEditorViewState & {\n\treadonly input1State?: ICodeEditorViewState;\n\treadonly input2State?: ICodeEditorViewState;\n\treadonly focusIndex: number;\n};\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,WAAW,aAAa;AACjC,SAAS,MAAM,oBAAoB,OAAO,wBAAwB;AAClE,SAAS,mBAAmB;AAC5B,SAAS,yBAAyB;AAClC,SAAS,aAAa;AACtB,SAAS,oBAAoB,yBAAyB;AACtD,SAAS,SAAS,aAAa;AAC/B,SAAS,YAAY,iBAAiB,aAAa,mBAAmB,oBAAoB;AAC1F,SAAS,SAAS,kBAAkB,aAAa,SAAS,iBAAiB,mBAAmB;AAC9F,SAAS,UAAU,eAAe;AAClC,SAAS,iBAAiB;AAC1B,SAAS,WAAW;AACpB,OAAO;AACP,SAAS,aAAa,+BAA+B;AACrD,SAAS,0BAA0B;AACnC,SAAS,kBAAkB,0BAA0B;AACrD,SAAS,sBAAsB,kBAAkB;AACjD,SAAS,kBAAkB;AAC3B,SAAS,yCAAyC;AAClD,SAAS,gBAAgB;AACzB,SAAS,6BAA6B;AACtC,SAAS,aAAa,0BAA0B;AAChD,SAAS,gBAAgB,oBAAoB,gCAAgC;AAC7E,SAAS,oBAAoB;AAC7B,SAAS,6BAA6B;AACtC,SAAS,iBAAiB,cAAc,qBAAqB;AAC7D,SAAS,yBAAyB;AAClC,SAAS,qBAAqB;AAC9B,SAAS,0BAA0B;AACnC,SAAS,4BAA4B,wBAAwB,oBAAoB,iCAAiC;AAClH,SAAS,mBAAmB;AAC5B,SAAS,8BAA8B;AACvC,SAAS,oBAAoB,2BAA2B;AACxD,SAAS,wBAAwB;AACjC,SAAS,8BAA8B;AACvC,SAAS,wBAAwB;AACjC,SAAS,WAAW,iBAAiB,yBAAyB;AAC9D,SAAS,6BAA6B;AACtC,SAAS,0BAA0B;AACnC,SAAS,0BAA0B;AACnC,SAAS,4BAA4B;AACrC,SAAS,wBAAwB;AACjC,SAAS,kBAAkB,iBAAiB,sBAAsB,wBAAwB,6BAA6B,yCAAyC,mBAAmB,6BAA6B;AAChN,SAAS,0BAA0B;AACnC,SAAS,cAAc,4BAA4B;AACnD,SAAS,wBAAwB,iCAAiC,gCAAgC;AAClG,SAAS,sBAAsB;AAC/B,OAAO;AACP,SAAS,2BAA2B;AACpC,SAAS,4BAA4B;AAE9B,IAAM,cAAN,cAA0B,mBAA0C;AAAA,EAsD1E,YACC,OACuB,eACc,mBAClB,kBACF,gBACF,cACoB,kCACK,uBACxB,eACM,oBACR,aACuB,oBACG,sBACvC;AACD,UAAM,YAAY,IAAI,OAAO,kBAAkB,eAAe,gBAAgB,kCAAkC,cAAc,eAAe,oBAAoB,WAAW;AAZvI;AAKG;AAIH;AACG;AAAA,EAGzC;AAAA,EA9HD,OAwD2E;AAAA;AAAA;AAAA,EAE1E,OAAgB,KAAK;AAAA,EAEJ,sBAAsB,IAAI,gBAAgB;AAAA,EAC1C,aAAa,gBAAkD,MAAM,MAAS;AAAA,EAE/F,IAAW,YAA2D;AACrE,WAAO,KAAK;AAAA,EACb;AAAA,EAEQ;AAAA,EACS,QAAQ,KAAK,UAAU,IAAI,kBAA+B,CAAC;AAAA,EAC3D,aAAa,KAAK,UAAU,KAAK,qBAAqB,eAAe,qBAAqB,GAAG,KAAK,UAAU,CAAC;AAAA,EAC7G,WAAW,gBAAgD,MAAM,MAAS;AAAA,EAC1E,kBAAkB,gBAA0D,MAAM,MAAS;AAAA,EAC3F,aAAa,KAAK,UAAU,KAAK,qBAAqB,eAAe,qBAAqB,GAAG,KAAK,UAAU,CAAC;AAAA,EAE7G,kBAAkB,KAAK,UAAU,KAAK,qBAAqB,eAAe,sBAAsB,KAAK,UAAU,CAAC;AAAA,EAChH,cAAc,KAAK,qBAAqB,eAAe,sBAAsB;AAAA,EAC7E,iBAAiB,gBAAgB,MAAM,KAAK,YAAY,KAAK;AAAA,EAC7D,oBAA0C,iBAAiB,OAAO,KAAK,iBAAiB;AAAA,EACxF,uBAA4C,qBAAqB,OAAO,KAAK,iBAAiB;AAAA,EAC9F,eAAqC,uBAAuB,OAAO,KAAK,iBAAiB;AAAA,EACzF,oBAAoB,4BAA4B,OAAO,KAAK,iBAAiB;AAAA,EAC7E,gBAAqC,kBAAkB,OAAO,KAAK,iBAAiB;AAAA,EACpF,cAAmC,gBAAgB,OAAO,KAAK,iBAAiB;AAAA,EAChF,gCAAsD,wCAAwC,OAAO,KAAK,iBAAiB;AAAA,EAC3H,cAAc,gBAAoD,MAAM,MAAS;AAAA,EAClG,IAAW,aAA8D;AACxE,WAAO,KAAK;AAAA,EACb;AAAA,EACA,IAAW,QAAsC;AAChD,WAAO,KAAK,WAAW,IAAI,GAAG;AAAA,EAC/B;AAAA,EAEA,IAAY,iBAA0B;AACrC,WAAO,CAAC,CAAC,KAAK,sBAAsB,SAAkB,4BAA4B;AAAA,EACnF;AAAA,EAEiB,mBAAmB,IAAI;AAAA,IACvC,KAAK,WAAW;AAAA,IAChB,KAAK,WAAW;AAAA,IAChB,KAAK,gBAAgB;AAAA,EACtB;AAAA,EAEmB,oBAAoB;AAAA,IACtC;AAAA,IACA;AAAA,IACA,KAAK;AAAA,EACN;AAAA,EAEiB,qBAAqB,KAAK,UAAU,IAAI,mBAAmB,KAAK,YAAY,KAAK,YAAY,KAAK,YAAY,KAAK,UAAU,KAAK,iBAAiB,KAAK,cAAc,CAAC;AAAA,EAoB/K,UAAgB;AACxB,SAAK,oBAAoB,QAAQ;AACjC,SAAK,kBAAkB,MAAM;AAC7B,SAAK,qBAAqB,MAAM;AAChC,SAAK,8BAA8B,MAAM;AACzC,UAAM,QAAQ;AAAA,EACf;AAAA;AAAA,EAIiB,8BAA8B,IAAI,QAAc;AAAA,EAC/C,6BAA0C,KAAK,4BAA4B;AAAA,EAE7F,IAAa,eAAe;AAC3B,WAAO,KAAK,YAAY,MAAM,SAAS,UACpC,KAAK,WAAW,KAAK,eAAe,KAAK,WAAW,KAAK,eACzD,KAAK,WAAW,KAAK,eAAe,KAAK,WAAW,KAAK,eAAe,KAAK,gBAAgB,KAAK;AAAA,EACtG;AAAA;AAAA,EAIS,WAAmB;AAC3B,QAAI,KAAK,OAAO;AACf,aAAO,KAAK,MAAM,QAAQ;AAAA,IAC3B;AAEA,WAAO,SAAS,eAAe,mBAAmB;AAAA,EACnD;AAAA,EAEU,oBAAoB,QAAqB,gBAA0C;AAC5F,SAAK,kBAAkB;AACvB,WAAO,UAAU,IAAI,cAAc;AACnC,SAAK,YAAY,KAAK,YAAY,KAAK;AACvC,SAAK,aAAa,cAAc;AAAA,EACjC;AAAA,EAEU,2BAA2B,SAAmC;AACvE,SAAK,aAAa,OAAO;AAAA,EAC1B;AAAA,EAEQ,aAAa,SAAmC;AACvD,UAAM,eAAmC,UAA8B,SAAS;AAAA,MAC/E,SAAS,EAAE,SAAS,MAAM;AAAA,MAC1B,aAAa;AAAA,MACb,qBAAqB;AAAA,MACrB,UAAU,CAAC,KAAK;AAAA,IACjB,CAAC;AAED,SAAK,WAAW,cAAc,YAAY;AAC1C,SAAK,WAAW,cAAc,YAAY;AAC1C,SAAK,gBAAgB,IAAI,EAAE,GAAG,KAAK,WAAW,OAAO,cAAc,EAAE,GAAG,MAAS;AACjF,SAAK,gBAAgB,cAAc,OAAO;AAAA,EAC3C;AAAA,EAEU,iBAA0C;AACnD,WAAO,KAAK,gBAAgB;AAAA,EAC7B;AAAA,EAEA,OAAO,WAA4B;AAClC,SAAK,MAAM,OAAO,OAAO,UAAU,OAAO,UAAU,MAAM;AAAA,EAC3D;AAAA,EAEA,MAAe,SAAS,OAAoB,SAAqC,SAA6B,OAAyC;AACtJ,QAAI,EAAE,iBAAiB,mBAAmB;AACzC,YAAM,IAAI,mBAAmB,oCAAoC;AAAA,IAClE;AACA,UAAM,MAAM,SAAS,OAAO,SAAS,SAAS,KAAK;AAEnD,SAAK,oBAAoB,MAAM;AAC/B,gBAAY,QAAM;AACjB,WAAK,WAAW,IAAI,QAAW,EAAE;AACjC,WAAK,YAAY,IAAI,QAAW,EAAE;AAAA,IACnC,CAAC;AAED,UAAM,aAAa,MAAM,MAAM,QAAQ;AACvC,UAAM,QAAQ,WAAW;AAEzB,UAAM,YAAY,KAAK,qBAAqB;AAAA,MAC3C;AAAA,MACA;AAAA,MACA,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACN;AAGA,UAAM,UAAU,wBAAwB;AAAA,MACvC,yBAAyB,MAAM;AAAA,MAC/B,eAAe,MAAM;AAAA,MAErB,SAAS,KAAK,eAAe,IAAI,EAAE;AAAA,MACnC,aAAa,KAAK,eAAe,IAAI,EAAE;AAAA,MACvC,cAAc,KAAK,eAAe,IAAI,EAAE,SAAS;AAAA,IAClD,CAAC;AAED,gBAAY,QAAM;AACjB,WAAK,WAAW,IAAI,WAAW,EAAE;AACjC,WAAK,YAAY,IAAI,YAAY,EAAE;AAAA,IACpC,CAAC;AACD,SAAK,oBAAoB,IAAI,SAAS;AAGtC,SAAK,cAAc,IAAI,WAAW,UAAU,SAAS,CAAC;AACtD,SAAK,YAAY,IAAI,MAAM,KAAK,IAAI,SAAS,CAAC;AAC9C,SAAK,oBAAoB,IAAI,aAAa,MAAM;AAC/C,WAAK,YAAY,MAAM;AACvB,WAAK,cAAc,MAAM;AAAA,IAC1B,CAAC,CAAC;AAIF,SAAK,oBAAoB,IAAI,iBAAiB,CAAC,QAAQ,UAAU;AAEhE,YAAM,WAAW,KAAK,SAAS,KAAK,MAAM;AAE1C,WAAK,gBAAgB,OAAO,gBAAgB,4BAA0B;AACrE,cAAM,SAAS,KAAK,eAAe,KAAK,MAAM;AAC9C,cAAM,oBAAoB,OAAO,SAAS;AAC1C,cAAM,kBAAkB,OAAO,SAAS,WAAW,CAAC,OAAO;AAE3D,aAAK,WAAW,OAAO,gBAAgB,4BAA0B;AAChE,eAAK,WAAW,OAAO,gBAAgB,4BAA0B;AAChE,gBAAI,UAAU;AACb,uBAAS,OAAO,gBAAgB,0BAAwB;AACvD,sBAAM,IAAI,KAAK;AAAA,kBAAa;AAAA,kBAC3B;AAAA,kBACA,KAAK,WAAW;AAAA,kBAChB;AAAA,kBACA,KAAK,WAAW;AAAA,kBAChB;AAAA,kBACA,SAAS;AAAA,kBACT;AAAA,kBACA;AAAA,kBACA,KAAK,gBAAgB;AAAA,kBACrB;AAAA,kBACA;AAAA,gBACD,CAAC;AAAA,cACF,CAAC;AAAA,YACF,OAAO;AACN,oBAAM,IAAI,KAAK;AAAA,gBAAa;AAAA,gBAC3B;AAAA,gBACA,KAAK,WAAW;AAAA,gBAChB;AAAA,gBACA,KAAK,WAAW;AAAA,gBAChB;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,KAAK,gBAAgB;AAAA,gBACrB;AAAA,gBACA;AAAA,cACD,CAAC;AAAA,YACF;AAAA,UACD,CAAC;AAAA,QACF,CAAC;AAAA,MACF,CAAC;AAED,WAAK,mBAAmB,gBAAgB;AAAA,IACzC,CAAC,CAAC;AAEF,UAAM,YAAY,KAAK,oBAAoB,OAAO,OAAO;AACzD,QAAI,WAAW;AACd,WAAK,gBAAgB,SAAS;AAAA,IAC/B,OAAO;AACN,WAAK,oBAAoB,IAAI,kBAAkB,MAAM,eAAe,MAAM;AACzE,cAAM,gBAAgB,MAAM,mBAAmB,IAAI,EAAE,KAAK,OAAK,EAAE,aAAa;AAC9E,YAAI,CAAC,eAAe;AACnB;AAAA,QACD;AACA,aAAK,WAAW,OAAO,mBAAmB,cAAc,YAAY,eAAe;AACnF,oBAAY,QAAM;AAEjB,oBAAU,2BAA2B,eAAe,EAAE;AAAA,QACvD,CAAC;AAAA,MACF,CAAC,CAAC;AAAA,IACH;AAGA,UAAM,+BAA+B,wBAAC,cAA0B;AAC/D,YAAM,iBAAiB,mBAAmB,WAAW,KAAK,kBAAkB;AAE5E,0BAAoB,MAAM,OAAO,WAAW,gBAAgB,KAAK,kBAAkB;AACnF,0BAAoB,MAAM,OAAO,WAAW,gBAAgB,KAAK,kBAAkB;AACnF,0BAAoB,MAAM,iBAAiB,gBAAgB,KAAK,kBAAkB;AAElF,YAAM,gBAAgB,KAAK,SAAS,IAAI,GAAG,OAAO,SAAS;AAC3D,UAAI,eAAe;AAClB,4BAAoB,eAAe,gBAAgB,KAAK,kBAAkB;AAAA,MAC3E;AAAA,IACD,GAXqC;AAYrC,SAAK,oBAAoB,IAAI,KAAK,mBAAmB,kCAAkC,eAAa;AACnG,mCAA6B,SAAS;AAAA,IACvC,CAAC,CAAC;AACF,iCAA6B,KAAK,gBAAgB,OAAO,SAAS,CAAE;AAKpE,UAAM,OAAO;AACb,SAAK,oBAAoB,IAAI,IAAI,MAAM;AAAA,MAErB,cAAc,IAAI,gBAAgB;AAAA,MAEnD,cAAc;AACb,mBAAWA,UAAS,KAAK,iBAAiB,GAAG;AAC5C,eAAK,YAAY,IAAIA,OAAM,mBAAmB,MAAM,KAAK,+BAA+B,CAAC,CAAC;AAAA,QAC3F;AAAA,MACD;AAAA,MAEA,UAAU;AACT,aAAK,YAAY,QAAQ;AAAA,MAC1B;AAAA,MAEA,CAAS,mBAAmB;AAC3B,cAAM,MAAM;AACZ,cAAM,MAAM,OAAO;AACnB,cAAM,MAAM,OAAO;AAAA,MACpB;AAAA,MAEQ,iCAAiC;AACxC,mBAAWA,UAAS,KAAK,iBAAiB,GAAG;AAC5C,cAAIA,OAAM,eAAe,IAAI,GAAG;AAC/B;AAAA,UACD;AAAA,QACD;AAEA,aAAK,cAAc;AAAA,UAClB,CAAC,EAAE,QAAQ,OAAO,aAAa,EAAE,UAAU,MAAM,QAAQ,SAAS,EAAE,eAAe,KAAK,EAAE,GAAG,mBAAmB,KAAK,CAAC;AAAA,UACtH,KAAK;AAAA,QACN;AAAA,MACD;AAAA,IACD,GAAC;AAAA,EACF;AAAA,EAEQ,aACP,QACA,WACA,cACA,wBACA,cACA,wBACA,YACA,sBACA,iBACA,cACA,wBACA,mBACc;AACd,UAAM,oBAA8B,CAAC;AACrC,UAAM,oBAA8B,CAAC;AACrC,UAAM,kBAA4B,CAAC;AACnC,UAAM,oBAA8B,CAAC;AAErC,UAAM,YAAY,KAAK,iBAAiB,iBAAiB,QAAQ,WAAW;AAAA,MAC3E,mBAAmB,KAAK,kBAAkB,KAAK,MAAM;AAAA,MACrD,2BAA2B,KAAK,0BAA0B,KAAK,MAAM;AAAA,MACrE;AAAA,MACA;AAAA,IACD,CAAC;AAED,UAAM,kBAAkB,IAAI,gBAAgB;AAE5C,QAAI,sBAAsB;AACzB,iBAAW,KAAK,UAAU,eAAe;AACxC,UAAE,OAAO,sBAAsB,iBAAiB,eAAe;AAAA,MAChE;AAAA,IACD;AAEA,eAAW,KAAK,UAAU,iBAAiB;AAC1C,QAAE,OAAO,wBAAwB,mBAAmB,eAAe;AAAA,IACpE;AAEA,eAAW,KAAK,UAAU,iBAAiB;AAC1C,QAAE,OAAO,wBAAwB,mBAAmB,eAAe;AAAA,IACpE;AAEA,eAAW,KAAK,UAAU,iBAAiB;AAC1C,QAAE,OAAO,wBAAwB,mBAAmB,eAAe;AAAA,IACpE;AAEA,oBAAgB,IAAI;AAAA,MACnB,SAAS,6BAAM;AACd,qBAAa,gBAAgB,OAAK;AACjC,qBAAW,QAAQ,mBAAmB;AACrC,cAAE,WAAW,IAAI;AAAA,UAClB;AAAA,QACD,CAAC;AACD,qBAAa,gBAAgB,OAAK;AACjC,qBAAW,QAAQ,mBAAmB;AACrC,cAAE,WAAW,IAAI;AAAA,UAClB;AAAA,QACD,CAAC;AACD,oBAAY,gBAAgB,OAAK;AAChC,qBAAW,QAAQ,iBAAiB;AACnC,cAAE,WAAW,IAAI;AAAA,UAClB;AAAA,QACD,CAAC;AACD,qBAAa,gBAAgB,OAAK;AACjC,qBAAW,QAAQ,mBAAmB;AACrC,cAAE,WAAW,IAAI;AAAA,UAClB;AAAA,QACD,CAAC;AAAA,MACF,GArBS;AAAA,IAsBV,CAAC;AAED,WAAO;AAAA,EACR;AAAA,EAES,WAAW,SAA+C;AAClE,UAAM,WAAW,OAAO;AAExB,QAAI,SAAS;AACZ,6BAAuB,SAAS,KAAK,gBAAgB,QAAQ,WAAW,MAAM;AAAA,IAC/E;AAAA,EACD;AAAA,EAES,aAAmB;AAC3B,UAAM,WAAW;AAEjB,SAAK,oBAAoB,MAAM;AAE/B,eAAW,EAAE,OAAO,KAAK,CAAC,KAAK,YAAY,KAAK,YAAY,KAAK,eAAe,GAAG;AAClF,aAAO,SAAS,IAAI;AAAA,IACrB;AAAA,EACD;AAAA,EAES,QAAc;AACtB,UAAM,MAAM;AAEZ,KAAC,KAAK,WAAW,KAAK,KAAK,gBAAgB,QAAQ,MAAM;AAAA,EAC1D;AAAA,EAES,WAAoB;AAC5B,eAAW,EAAE,OAAO,KAAK,CAAC,KAAK,YAAY,KAAK,YAAY,KAAK,eAAe,GAAG;AAClF,UAAI,OAAO,aAAa,GAAG;AAC1B,eAAO;AAAA,MACR;AAAA,IACD;AACA,WAAO,MAAM,SAAS;AAAA,EACvB;AAAA,EAEmB,iBAAiB,SAAwB;AAC3D,UAAM,iBAAiB,OAAO;AAE9B,eAAW,EAAE,OAAO,KAAK,CAAC,KAAK,YAAY,KAAK,YAAY,KAAK,eAAe,GAAG;AAClF,UAAI,SAAS;AACZ,eAAO,UAAU;AAAA,MAClB,OAAO;AACN,eAAO,OAAO;AAAA,MACf;AAAA,IACD;AAEA,SAAK,kBAAkB,IAAI,OAAO;AAAA,EACnC;AAAA;AAAA,EAIS,aAAsC;AAC9C,WAAO,KAAK,gBAAgB;AAAA,EAC7B;AAAA,EAEA,IAAa,0BAA0D;AACtE,UAAM,UAAU,KAAK,WAAW;AAChC,WAAO,SAAS,oBAAoB,cAAY,SAAS,IAAI,kBAAkB,CAAC;AAAA,EACjF;AAAA;AAAA,EAIO,aAAmB;AACzB,SAAK,UAAU;AAAA,MACd,GAAG,KAAK,YAAY;AAAA,MACpB,UAAU,CAAC,KAAK,YAAY,MAAM;AAAA,IACnC,CAAC;AAAA,EACF;AAAA,EAEO,oBAA0B;AAChC,UAAM,cAAc,KAAK,YAAY,MAAM,YAAY,KAAK,YAAY,MAAM;AAC9E,SAAK,UAAU;AAAA,MACd,GAAG,KAAK,YAAY;AAAA,MACpB,eAAe;AAAA,MACf,UAAU,CAAC;AAAA,IACZ,CAAC;AAAA,EACF;AAAA,EAEO,uBAA6B;AACnC,UAAM,iBAAiB,KAAK,YAAY,MAAM,YAAY,CAAC,KAAK,YAAY,MAAM;AAClF,SAAK,UAAU;AAAA,MACd,GAAG,KAAK,YAAY;AAAA,MACpB,eAAe;AAAA,MACf,UAAU,CAAC;AAAA,IACZ,CAAC;AAAA,EACF;AAAA,EAEO,cAAc,MAAmC;AACvD,SAAK,UAAU;AAAA,MACd,GAAG,KAAK,YAAY;AAAA,MACpB;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEO,UAAU,WAAqC;AACrD,UAAM,QAAQ,KAAK,YAAY;AAC/B,QAAI,KAAK,UAAU,KAAK,MAAM,KAAK,UAAU,SAAS,GAAG;AACxD;AAAA,IACD;AACA,SAAK,OAAO,UAAU,mBAAmB;AAAA,MACxC,SAAS,UAAU;AAAA,MACnB,aAAa,UAAU;AAAA,MACvB,cAAc,UAAU,SAAS;AAAA,IAClC,CAAC;AACD,SAAK,YAAY,SAAS;AAAA,EAC3B;AAAA,EAEiB,sBAAsB,KAAK,UAAU,IAAI,gBAAgB,CAAC;AAAA,EAEnE,YAAY,QAAkC;AACrD,gBAAY,QAAM;AAGjB,UAAI,OAAO,YAAY,CAAC,KAAK,SAAS,IAAI,GAAG;AAC5C,aAAK,oBAAoB,MAAM;AAC/B,cAAM,WAAW,KAAK,oBAAoB;AAAA,UACzC,KAAK,qBAAqB;AAAA,YACzB;AAAA,YACA,KAAK;AAAA,UACN;AAAA,QACD;AACA,aAAK,oBAAoB,IAAI,QAAQ,YAAU;AAE9C,gBAAM,UAAU,KAAK,gBAAgB,KAAK,MAAM;AAChD,cAAI,SAAS;AACZ,qBAAS,cAAc,OAAO;AAAA,UAC/B;AAAA,QACD,CAAC,CAAC;AACF,aAAK,SAAS,IAAI,UAAU,EAAE;AAAA,MAC/B,WAAW,CAAC,OAAO,YAAY,KAAK,SAAS,IAAI,GAAG;AACnD,aAAK,SAAS,IAAI,QAAW,EAAE;AAC/B,aAAK,oBAAoB,MAAM;AAAA,MAChC;AAEA,UAAI,OAAO,SAAS,SAAS;AAC5B,aAAK,QAAQ;AAAA,UACZ,OAAO,iBAAiB,OAAO,WAAW;AAAA,YACzC,MAAM;AAAA,YACN,MAAM,KAAK,SAAS,IAAI,EAAG;AAAA,UAC5B,IAAI;AAAA,UACJ;AAAA,YACC,MAAM;AAAA,YACN,QAAQ;AAAA,cACP,EAAE,MAAM,KAAK,WAAW,KAAK;AAAA,cAC7B,CAAC,OAAO,iBAAiB,OAAO,WAAW,EAAE,MAAM,KAAK,SAAS,IAAI,EAAG,KAAK,IAAI;AAAA,cACjF,EAAE,MAAM,KAAK,WAAW,KAAK;AAAA,YAC9B,EAAE,OAAO,SAAS;AAAA,UACnB;AAAA,UACA;AAAA,YACC,MAAM;AAAA,YACN,MAAM,KAAK,gBAAgB;AAAA,UAC5B;AAAA,QACD,EAAE,OAAO,SAAS,CAAC;AAAA,MACpB,WAAW,OAAO,SAAS,WAAW;AACrC,aAAK,QAAQ;AAAA,UACZ,OAAO,WAAW;AAAA,YACjB,MAAM;AAAA,YACN,MAAM,KAAK,SAAS,IAAI,EAAG;AAAA,UAC5B,IAAI;AAAA,UACJ;AAAA,YACC,MAAM;AAAA,YACN,QAAQ,CAAC,EAAE,MAAM,KAAK,WAAW,KAAK,GAAG,EAAE,MAAM,KAAK,gBAAgB,KAAK,GAAG,EAAE,MAAM,KAAK,WAAW,KAAK,CAAC;AAAA,UAC7G;AAAA,QACD,EAAE,OAAO,SAAS,CAAC;AAAA,MACpB;AAEA,WAAK,YAAY,QAAQ;AACzB,WAAK,qBAAqB,IAAI,OAAO,IAAI;AACzC,WAAK,aAAa,IAAI,OAAO,QAAQ;AACrC,WAAK,kBAAkB,IAAI,OAAO,aAAa;AAC/C,WAAK,4BAA4B,KAAK;AACtC,WAAK,eAAe,IAAI,QAAQ,EAAE;AAAA,IACnC,CAAC;AAAA,EACF;AAAA,EAEQ,QAAQ,YAAuC;AACtD,QAAI,QAAQ;AACZ,QAAI,SAAS;AACb,QAAI,KAAK,MAAM,OAAO;AACrB,cAAQ,KAAK,MAAM,MAAM;AACzB,eAAS,KAAK,MAAM,MAAM;AAAA,IAC3B;AACA,SAAK,MAAM,QAAQ,iBAAiB,KAAU;AAAA,MAC7C,aAAa,YAAY;AAAA,MACzB,MAAM;AAAA,MACN,QAAQ;AAAA,IACT,GAAG;AAAA,MACF,QAAQ,EAAE,iBAAiB,KAAK,MAAM,SAAS,kBAAkB,KAAK,MAAM,YAAY;AAAA,MACxF,oBAAoB;AAAA,IACrB,CAAC;AAED,UAAM,KAAK,iBAAkB,KAAK,MAAM,MAAM,OAAO;AAGrD,QAAI,UAAU,IAAI;AACjB,WAAK,MAAM,MAAM,OAAO,OAAO,MAAM;AAAA,IACtC;AAAA,EACD;AAAA,EAEQ,gBAAgB,OAA0C;AACjE,QAAI,CAAC,OAAO;AACX;AAAA,IACD;AACA,SAAK,gBAAgB,OAAO,iBAAiB,KAAK;AAClD,QAAI,MAAM,aAAa;AACtB,WAAK,WAAW,OAAO,iBAAiB,MAAM,WAAW;AAAA,IAC1D;AACA,QAAI,MAAM,aAAa;AACtB,WAAK,WAAW,OAAO,iBAAiB,MAAM,WAAW;AAAA,IAC1D;AACA,QAAI,MAAM,cAAc,GAAG;AAC1B,OAAC,KAAK,WAAW,QAAQ,KAAK,WAAW,QAAQ,KAAK,gBAAgB,MAAM,EAAE,MAAM,UAAU,EAAE,MAAM;AAAA,IACvG;AAAA,EACD;AAAA,EAEU,uBAAuB,UAAkD;AAClF,QAAI,CAAC,QAAQ,KAAK,WAAW,IAAI,GAAG,WAAW,QAAQ,GAAG;AACzD,aAAO;AAAA,IACR;AACA,UAAM,SAAS,KAAK,gBAAgB,OAAO,cAAc;AACzD,QAAI,CAAC,QAAQ;AACZ,aAAO;AAAA,IACR;AACA,UAAM,cAAc,KAAK,WAAW,OAAO,cAAc,KAAK;AAC9D,UAAM,cAAc,KAAK,WAAW,OAAO,cAAc,KAAK;AAC9D,UAAM,aAAa,CAAC,KAAK,WAAW,QAAQ,KAAK,WAAW,QAAQ,KAAK,gBAAgB,MAAM,EAAE,UAAU,YAAU,OAAO,eAAe,CAAC;AAC5I,WAAO,EAAE,GAAG,QAAQ,aAAa,aAAa,WAAW;AAAA,EAC1D;AAAA,EAGU,sBAAsB,OAA6B;AAC5D,WAAO,iBAAiB;AAAA,EACzB;AAAA,EAEiB,iCAAiC,KAAK,qBAAqB,eAAe,iBAA0B,uCAAuC;AAAA,EAC3I,4BAA4B,gBAAgB,MAAM,KAAK,+BAA+B,IAAI,KAAK,KAAK;AAAA,EAE9G,kCAAwC;AAC9C,SAAK,0BAA0B,IAAI,CAAC,KAAK,0BAA0B,IAAI,GAAG,MAAS;AACnF,SAAK,+BAA+B,IAAI,KAAK,0BAA0B,IAAI,CAAC;AAC5E,SAAK,8BAA8B,IAAI,KAAK,0BAA0B,IAAI,CAAC;AAAA,EAC5E;AACD;AA9mBa,cAAN;AAAA,EAwDJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAnEU;AAunBb,IAAM,yBAAN,MAA6B;AAAA,EAI5B,YAAqC,iBAAkC;AAAlC;AACpC,UAAM,QAAQ,gBAAgB,IAAI,uBAAuB,MAAM,aAAa,SAAS,OAAO;AAE5F,QAAI,UAAU,WAAW,UAAU,WAAW;AAC7C,WAAK,SAAS,EAAE,MAAM,OAAO,UAAU,OAAO,eAAe,KAAK;AAAA,IACnE,WAAW,OAAO;AACjB,UAAI;AACH,aAAK,SAAS,KAAK,MAAM,KAAK;AAAA,MAC/B,SAAS,GAAG;AACX,0BAAkB,CAAC;AAAA,MACpB;AAAA,IACD;AAAA,EACD;AAAA,EA/rBD,OA+qB6B;AAAA;AAAA;AAAA,EAC5B,OAAwB,OAAO;AAAA,EACvB,SAA6B,EAAE,MAAM,SAAS,UAAU,OAAO,eAAe,KAAK;AAAA,EAgB3F,IAAI,QAAQ;AACX,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAI,MAAM,OAA2B;AACpC,QAAI,KAAK,WAAW,OAAO;AAC1B,WAAK,SAAS;AACd,WAAK,gBAAgB,MAAM,uBAAuB,MAAM,KAAK,UAAU,KAAK,MAAM,GAAG,aAAa,SAAS,cAAc,IAAI;AAAA,IAC9H;AAAA,EACD;AACD;AA5BM,yBAAN;AAAA,EAIc;AAAA,GAJR;AA8BC,IAAM,qCAAN,cAAiD,WAAW;AAAA,EAElE,YACkC,gBACb,mBACnB;AACD,UAAM;AAH2B;AAIjC,SAAK,OAAO,IAAI,kBAAkB,8BAA8B,KAAK,8BAA8B,KAAK,IAAI,CAAC,CAAC;AAAA,EAC/G;AAAA,EArtBD,OA6sBmE;AAAA;AAAA;AAAA,EAUlE,MAAc,8BAA8B,OAAiC,SAA6B,YAA+D;AACxK,UAAM,aAAa,KAAK,eAAe;AACvC,QAAI,CAAC,cACD,MAAM,WACN,sBAAsB,eACtB,WAAW,WAAW,KACtB,WAAW,iBAAiB,oBAC5B,QAAQ,MAAM,UAAU,WAAW,MAAM,MAAM,GACjD;AAGD,YAAM,eAA4B,WAAW,WAAW;AACxD,6BAAuB,MAAM,SAAS,cAAc,WAAW,MAAM;AACrE,aAAO;AAAA,IACR;AAGA,WAAO;AAAA,EACR;AACD;AA7Ba,qCAAN;AAAA,EAGJ;AAAA,EACA;AAAA,GAJU;AA+BN,IAAM,kCAAN,cAA8C,WAAW;AAAA,EA5uBhE,OA4uBgE;AAAA;AAAA;AAAA,EAE/D,OAAgB,KAAK;AAAA,EAErB,YACyB,uBACD,sBACtB;AACD,UAAM;AAEN,UAAM,0BAA2D,wBAAC,gBAAmE;AACpI,aAAO;AAAA,QACN,QAAQ,qBAAqB;AAAA,UAC5B;AAAA,UACA,YAAY,KAAK;AAAA,UACjB;AAAA,YACC,KAAK,YAAY,OAAO;AAAA,YACxB,OAAO,YAAY,OAAO,SAAS,SAAS,YAAY,OAAO,QAAQ;AAAA,YACvE,aAAa,YAAY,OAAO,eAAe;AAAA,YAC/C,QAAQ,YAAY,OAAO;AAAA,UAC5B;AAAA,UACA;AAAA,YACC,KAAK,YAAY,OAAO;AAAA,YACxB,OAAO,YAAY,OAAO,SAAS,SAAS,YAAY,OAAO,QAAQ;AAAA,YACvE,aAAa,YAAY,OAAO,eAAe;AAAA,YAC/C,QAAQ,YAAY,OAAO;AAAA,UAC5B;AAAA,UACA,YAAY,OAAO;AAAA,QACpB;AAAA,MACD;AAAA,IACD,GApBiE;AAsBjE,SAAK,UAAU,sBAAsB;AAAA,MACpC;AAAA,MACA;AAAA,QACC,IAAI,2BAA2B;AAAA,QAC/B,OAAO,2BAA2B;AAAA,QAClC,QAAQ,2BAA2B;AAAA,QACnC,UAAU,yBAAyB;AAAA,MACpC;AAAA,MACA,CAAC;AAAA,MACD;AAAA,QACC,wBAAwB;AAAA,MACzB;AAAA,IACD,CAAC;AAAA,EACF;AACD;AA9Ca,kCAAN;AAAA,EAKJ;AAAA,EACA;AAAA,GANU;",
  "names": ["model"]
}
