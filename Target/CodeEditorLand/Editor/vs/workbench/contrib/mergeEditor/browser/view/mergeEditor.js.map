{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/mergeEditor/browser/view/mergeEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { type Dimension, reset } from \"../../../../../base/browser/dom.js\";\nimport {\n\ttype Grid,\n\ttype GridNodeDescriptor,\n\ttype IView,\n\tSerializableGrid,\n} from \"../../../../../base/browser/ui/grid/grid.js\";\nimport { Orientation } from \"../../../../../base/browser/ui/splitview/splitview.js\";\nimport type { CancellationToken } from \"../../../../../base/common/cancellation.js\";\nimport { Color } from \"../../../../../base/common/color.js\";\nimport {\n\tBugIndicatingError,\n\tonUnexpectedError,\n} from \"../../../../../base/common/errors.js\";\nimport { Emitter, type Event } from \"../../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\tMutableDisposable,\n\ttoDisposable,\n} from \"../../../../../base/common/lifecycle.js\";\nimport {\n\ttype IObservable,\n\ttype IReader,\n\tautorun,\n\tautorunWithStore,\n\tobservableValue,\n\ttransaction,\n} from \"../../../../../base/common/observable.js\";\nimport { basename, isEqual } from \"../../../../../base/common/resources.js\";\nimport { isDefined } from \"../../../../../base/common/types.js\";\nimport type { URI } from \"../../../../../base/common/uri.js\";\nimport \"./media/mergeEditor.css\";\nimport type {\n\tICodeEditor,\n\tIViewZoneChangeAccessor,\n} from \"../../../../../editor/browser/editorBrowser.js\";\nimport { ICodeEditorService } from \"../../../../../editor/browser/services/codeEditorService.js\";\nimport type { IEditorOptions as ICodeEditorOptions } from \"../../../../../editor/common/config/editorOptions.js\";\nimport {\n\ttype ICodeEditorViewState,\n\tScrollType,\n} from \"../../../../../editor/common/editorCommon.js\";\nimport type { ITextModel } from \"../../../../../editor/common/model.js\";\nimport { ITextResourceConfigurationService } from \"../../../../../editor/common/services/textResourceConfiguration.js\";\nimport { localize } from \"../../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../../platform/configuration/common/configuration.js\";\nimport {\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../../platform/contextkey/common/contextkey.js\";\nimport type {\n\tIEditorOptions,\n\tITextEditorOptions,\n\tITextResourceEditorInput,\n} from \"../../../../../platform/editor/common/editor.js\";\nimport { IFileService } from \"../../../../../platform/files/common/files.js\";\nimport { IInstantiationService } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport { observableConfigValue } from \"../../../../../platform/observable/common/platformObservableUtils.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../../platform/telemetry/common/telemetry.js\";\nimport { IThemeService } from \"../../../../../platform/theme/common/themeService.js\";\nimport { AbstractTextEditor } from \"../../../../browser/parts/editor/textEditor.js\";\nimport {\n\tDEFAULT_EDITOR_ASSOCIATION,\n\ttype EditorInputWithOptions,\n\ttype IEditorOpenContext,\n\ttype IResourceMergeEditorInput,\n} from \"../../../../common/editor.js\";\nimport type { EditorInput } from \"../../../../common/editor/editorInput.js\";\nimport { applyTextEditorOptions } from \"../../../../common/editor/editorOptions.js\";\nimport {\n\ttype IEditorGroup,\n\tIEditorGroupsService,\n} from \"../../../../services/editor/common/editorGroupsService.js\";\nimport {\n\tIEditorResolverService,\n\ttype MergeEditorInputFactoryFunction,\n\tRegisteredEditorPriority,\n} from \"../../../../services/editor/common/editorResolverService.js\";\nimport { IEditorService } from \"../../../../services/editor/common/editorService.js\";\nimport {\n\treadTransientState,\n\twriteTransientState,\n} from \"../../../codeEditor/browser/toggleWordWrap.js\";\nimport { settingsSashBorder } from \"../../../preferences/common/settingsEditorColorRegistry.js\";\nimport {\n\ttype MergeEditorLayoutKind,\n\tctxIsMergeEditor,\n\tctxMergeBaseUri,\n\tctxMergeEditorLayout,\n\tctxMergeEditorShowBase,\n\tctxMergeEditorShowBaseAtTop,\n\tctxMergeEditorShowNonConflictingChanges,\n\tctxMergeResultUri,\n} from \"../../common/mergeEditor.js\";\nimport { MergeEditorInput } from \"../mergeEditorInput.js\";\nimport type { IMergeEditorInputModel } from \"../mergeEditorInputModel.js\";\nimport type { MergeEditorModel } from \"../model/mergeEditorModel.js\";\nimport { PersistentStore, deepMerge, thenIfNotDisposed } from \"../utils.js\";\nimport { BaseCodeEditorView } from \"./editors/baseCodeEditorView.js\";\nimport { ScrollSynchronizer } from \"./scrollSynchronizer.js\";\nimport { MergeEditorViewModel } from \"./viewModel.js\";\nimport { ViewZoneComputer } from \"./viewZones.js\";\nimport \"./colors.js\";\nimport { InputCodeEditorView } from \"./editors/inputCodeEditorView.js\";\nimport { ResultCodeEditorView } from \"./editors/resultCodeEditorView.js\";\n\nexport class MergeEditor extends AbstractTextEditor<IMergeEditorViewState> {\n\tstatic readonly ID = \"mergeEditor\";\n\n\tprivate readonly _sessionDisposables = new DisposableStore();\n\tprivate readonly _viewModel = observableValue<\n\t\tMergeEditorViewModel | undefined\n\t>(this, undefined);\n\n\tpublic get viewModel(): IObservable<MergeEditorViewModel | undefined> {\n\t\treturn this._viewModel;\n\t}\n\n\tprivate rootHtmlElement: HTMLElement | undefined;\n\tprivate readonly _grid = this._register(\n\t\tnew MutableDisposable<Grid<IView>>(),\n\t);\n\tprivate readonly input1View = this._register(\n\t\tthis.instantiationService.createInstance(\n\t\t\tInputCodeEditorView,\n\t\t\t1,\n\t\t\tthis._viewModel,\n\t\t),\n\t);\n\tprivate readonly baseView = observableValue<BaseCodeEditorView | undefined>(\n\t\tthis,\n\t\tundefined,\n\t);\n\tprivate readonly baseViewOptions = observableValue<\n\t\tReadonly<ICodeEditorOptions> | undefined\n\t>(this, undefined);\n\tprivate readonly input2View = this._register(\n\t\tthis.instantiationService.createInstance(\n\t\t\tInputCodeEditorView,\n\t\t\t2,\n\t\t\tthis._viewModel,\n\t\t),\n\t);\n\n\tprivate readonly inputResultView = this._register(\n\t\tthis.instantiationService.createInstance(\n\t\t\tResultCodeEditorView,\n\t\t\tthis._viewModel,\n\t\t),\n\t);\n\tprivate readonly _layoutMode = this.instantiationService.createInstance(\n\t\tMergeEditorLayoutStore,\n\t);\n\tprivate readonly _layoutModeObs = observableValue(\n\t\tthis,\n\t\tthis._layoutMode.value,\n\t);\n\tprivate readonly _ctxIsMergeEditor: IContextKey<boolean> =\n\t\tctxIsMergeEditor.bindTo(this.contextKeyService);\n\tprivate readonly _ctxUsesColumnLayout: IContextKey<string> =\n\t\tctxMergeEditorLayout.bindTo(this.contextKeyService);\n\tprivate readonly _ctxShowBase: IContextKey<boolean> =\n\t\tctxMergeEditorShowBase.bindTo(this.contextKeyService);\n\tprivate readonly _ctxShowBaseAtTop = ctxMergeEditorShowBaseAtTop.bindTo(\n\t\tthis.contextKeyService,\n\t);\n\tprivate readonly _ctxResultUri: IContextKey<string> =\n\t\tctxMergeResultUri.bindTo(this.contextKeyService);\n\tprivate readonly _ctxBaseUri: IContextKey<string> = ctxMergeBaseUri.bindTo(\n\t\tthis.contextKeyService,\n\t);\n\tprivate readonly _ctxShowNonConflictingChanges: IContextKey<boolean> =\n\t\tctxMergeEditorShowNonConflictingChanges.bindTo(this.contextKeyService);\n\tprivate readonly _inputModel = observableValue<\n\t\tIMergeEditorInputModel | undefined\n\t>(this, undefined);\n\tpublic get inputModel(): IObservable<IMergeEditorInputModel | undefined> {\n\t\treturn this._inputModel;\n\t}\n\tpublic get model(): MergeEditorModel | undefined {\n\t\treturn this.inputModel.get()?.model;\n\t}\n\n\tprivate get inputsWritable(): boolean {\n\t\treturn !!this._configurationService.getValue<boolean>(\n\t\t\t\"mergeEditor.writableInputs\",\n\t\t);\n\t}\n\n\tprivate readonly viewZoneComputer = new ViewZoneComputer(\n\t\tthis.input1View.editor,\n\t\tthis.input2View.editor,\n\t\tthis.inputResultView.editor,\n\t);\n\n\tprotected readonly codeLensesVisible = observableConfigValue<boolean>(\n\t\t\"mergeEditor.showCodeLenses\",\n\t\ttrue,\n\t\tthis.configurationService,\n\t);\n\n\tprivate readonly scrollSynchronizer = this._register(\n\t\tnew ScrollSynchronizer(\n\t\t\tthis._viewModel,\n\t\t\tthis.input1View,\n\t\t\tthis.input2View,\n\t\t\tthis.baseView,\n\t\t\tthis.inputResultView,\n\t\t\tthis._layoutModeObs,\n\t\t),\n\t);\n\n\tconstructor(\n\t\tgroup: IEditorGroup,\n\t\t@IInstantiationService instantiation: IInstantiationService,\n\t\t@IContextKeyService\n\t\tprivate readonly contextKeyService: IContextKeyService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITextResourceConfigurationService\n\t\ttextResourceConfigurationService: ITextResourceConfigurationService,\n\t\t@IConfigurationService\n\t\tprivate readonly _configurationService: IConfigurationService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ICodeEditorService\n\t\tprivate readonly _codeEditorService: ICodeEditorService,\n\t\t@IConfigurationService\n\t\tprivate readonly configurationService: IConfigurationService,\n\t) {\n\t\tsuper(\n\t\t\tMergeEditor.ID,\n\t\t\tgroup,\n\t\t\ttelemetryService,\n\t\t\tinstantiation,\n\t\t\tstorageService,\n\t\t\ttextResourceConfigurationService,\n\t\t\tthemeService,\n\t\t\teditorService,\n\t\t\teditorGroupService,\n\t\t\tfileService,\n\t\t);\n\t}\n\n\toverride dispose(): void {\n\t\tthis._sessionDisposables.dispose();\n\t\tthis._ctxIsMergeEditor.reset();\n\t\tthis._ctxUsesColumnLayout.reset();\n\t\tthis._ctxShowNonConflictingChanges.reset();\n\t\tsuper.dispose();\n\t}\n\n\t// #region layout constraints\n\n\tprivate readonly _onDidChangeSizeConstraints = new Emitter<void>();\n\toverride readonly onDidChangeSizeConstraints: Event<void> =\n\t\tthis._onDidChangeSizeConstraints.event;\n\n\toverride get minimumWidth() {\n\t\treturn this._layoutMode.value.kind === \"mixed\"\n\t\t\t? this.input1View.view.minimumWidth +\n\t\t\t\t\tthis.input2View.view.minimumWidth\n\t\t\t: this.input1View.view.minimumWidth +\n\t\t\t\t\tthis.input2View.view.minimumWidth +\n\t\t\t\t\tthis.inputResultView.view.minimumWidth;\n\t}\n\n\t// #endregion\n\n\toverride getTitle(): string {\n\t\tif (this.input) {\n\t\t\treturn this.input.getName();\n\t\t}\n\n\t\treturn localize(\"mergeEditor\", \"Text Merge Editor\");\n\t}\n\n\tprotected createEditorControl(\n\t\tparent: HTMLElement,\n\t\tinitialOptions: ICodeEditorOptions,\n\t): void {\n\t\tthis.rootHtmlElement = parent;\n\t\tparent.classList.add(\"merge-editor\");\n\t\tthis.applyLayout(this._layoutMode.value);\n\t\tthis.applyOptions(initialOptions);\n\t}\n\n\tprotected updateEditorControlOptions(options: ICodeEditorOptions): void {\n\t\tthis.applyOptions(options);\n\t}\n\n\tprivate applyOptions(options: ICodeEditorOptions): void {\n\t\tconst inputOptions: ICodeEditorOptions = deepMerge<ICodeEditorOptions>(\n\t\t\toptions,\n\t\t\t{\n\t\t\t\tminimap: { enabled: false },\n\t\t\t\tglyphMargin: false,\n\t\t\t\tlineNumbersMinChars: 2,\n\t\t\t\treadOnly: !this.inputsWritable,\n\t\t\t},\n\t\t);\n\n\t\tthis.input1View.updateOptions(inputOptions);\n\t\tthis.input2View.updateOptions(inputOptions);\n\t\tthis.baseViewOptions.set(\n\t\t\t{ ...this.input2View.editor.getRawOptions() },\n\t\t\tundefined,\n\t\t);\n\t\tthis.inputResultView.updateOptions(options);\n\t}\n\n\tprotected getMainControl(): ICodeEditor | undefined {\n\t\treturn this.inputResultView.editor;\n\t}\n\n\tlayout(dimension: Dimension): void {\n\t\tthis._grid.value?.layout(dimension.width, dimension.height);\n\t}\n\n\toverride async setInput(\n\t\tinput: EditorInput,\n\t\toptions: IEditorOptions | undefined,\n\t\tcontext: IEditorOpenContext,\n\t\ttoken: CancellationToken,\n\t): Promise<void> {\n\t\tif (!(input instanceof MergeEditorInput)) {\n\t\t\tthrow new BugIndicatingError(\"ONLY MergeEditorInput is supported\");\n\t\t}\n\t\tawait super.setInput(input, options, context, token);\n\n\t\tthis._sessionDisposables.clear();\n\t\ttransaction((tx) => {\n\t\t\tthis._viewModel.set(undefined, tx);\n\t\t\tthis._inputModel.set(undefined, tx);\n\t\t});\n\n\t\tconst inputModel = await input.resolve();\n\t\tconst model = inputModel.model;\n\n\t\tconst viewModel = this.instantiationService.createInstance(\n\t\t\tMergeEditorViewModel,\n\t\t\tmodel,\n\t\t\tthis.input1View,\n\t\t\tthis.input2View,\n\t\t\tthis.inputResultView,\n\t\t\tthis.baseView,\n\t\t\tthis.showNonConflictingChanges,\n\t\t);\n\n\t\tmodel.telemetry.reportMergeEditorOpened({\n\t\t\tcombinableConflictCount: model.combinableConflictCount,\n\t\t\tconflictCount: model.conflictCount,\n\n\t\t\tbaseTop: this._layoutModeObs.get().showBaseAtTop,\n\t\t\tbaseVisible: this._layoutModeObs.get().showBase,\n\t\t\tisColumnView: this._layoutModeObs.get().kind === \"columns\",\n\t\t});\n\n\t\ttransaction((tx) => {\n\t\t\tthis._viewModel.set(viewModel, tx);\n\t\t\tthis._inputModel.set(inputModel, tx);\n\t\t});\n\t\tthis._sessionDisposables.add(viewModel);\n\n\t\t// Set/unset context keys based on input\n\t\tthis._ctxResultUri.set(inputModel.resultUri.toString());\n\t\tthis._ctxBaseUri.set(model.base.uri.toString());\n\t\tthis._sessionDisposables.add(\n\t\t\ttoDisposable(() => {\n\t\t\t\tthis._ctxBaseUri.reset();\n\t\t\t\tthis._ctxResultUri.reset();\n\t\t\t}),\n\t\t);\n\n\t\t// Set the view zones before restoring view state!\n\t\t// Otherwise scrolling will be off\n\t\tthis._sessionDisposables.add(\n\t\t\tautorunWithStore((reader, store) => {\n\t\t\t\t/** @description update alignment view zones */\n\t\t\t\tconst baseView = this.baseView.read(reader);\n\n\t\t\t\tthis.inputResultView.editor.changeViewZones(\n\t\t\t\t\t(resultViewZoneAccessor) => {\n\t\t\t\t\t\tconst layout = this._layoutModeObs.read(reader);\n\t\t\t\t\t\tconst shouldAlignResult = layout.kind === \"columns\";\n\t\t\t\t\t\tconst shouldAlignBase =\n\t\t\t\t\t\t\tlayout.kind === \"mixed\" && !layout.showBaseAtTop;\n\n\t\t\t\t\t\tthis.input1View.editor.changeViewZones(\n\t\t\t\t\t\t\t(input1ViewZoneAccessor) => {\n\t\t\t\t\t\t\t\tthis.input2View.editor.changeViewZones(\n\t\t\t\t\t\t\t\t\t(input2ViewZoneAccessor) => {\n\t\t\t\t\t\t\t\t\t\tif (baseView) {\n\t\t\t\t\t\t\t\t\t\t\tbaseView.editor.changeViewZones(\n\t\t\t\t\t\t\t\t\t\t\t\t(baseViewZoneAccessor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tstore.add(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setViewZones(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treader,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tviewModel,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.input1View\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.editor,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinput1ViewZoneAccessor,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.input2View\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.editor,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinput2ViewZoneAccessor,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbaseView.editor,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbaseViewZoneAccessor,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshouldAlignBase,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.inputResultView\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.editor,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tresultViewZoneAccessor,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshouldAlignResult,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tstore.add(\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setViewZones(\n\t\t\t\t\t\t\t\t\t\t\t\t\treader,\n\t\t\t\t\t\t\t\t\t\t\t\t\tviewModel,\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.input1View.editor,\n\t\t\t\t\t\t\t\t\t\t\t\t\tinput1ViewZoneAccessor,\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.input2View.editor,\n\t\t\t\t\t\t\t\t\t\t\t\t\tinput2ViewZoneAccessor,\n\t\t\t\t\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.inputResultView.editor,\n\t\t\t\t\t\t\t\t\t\t\t\t\tresultViewZoneAccessor,\n\t\t\t\t\t\t\t\t\t\t\t\t\tshouldAlignResult,\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t);\n\n\t\t\t\tthis.scrollSynchronizer.updateScrolling();\n\t\t\t}),\n\t\t);\n\n\t\tconst viewState = this.loadEditorViewState(input, context);\n\t\tif (viewState) {\n\t\t\tthis._applyViewState(viewState);\n\t\t} else {\n\t\t\tthis._sessionDisposables.add(\n\t\t\t\tthenIfNotDisposed(model.onInitialized, () => {\n\t\t\t\t\tconst firstConflict = model.modifiedBaseRanges\n\t\t\t\t\t\t.get()\n\t\t\t\t\t\t.find((r) => r.isConflicting);\n\t\t\t\t\tif (!firstConflict) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.input1View.editor.revealLineInCenter(\n\t\t\t\t\t\tfirstConflict.input1Range.startLineNumber,\n\t\t\t\t\t);\n\t\t\t\t\ttransaction((tx) => {\n\t\t\t\t\t\t/** @description setActiveModifiedBaseRange */\n\t\t\t\t\t\tviewModel.setActiveModifiedBaseRange(firstConflict, tx);\n\t\t\t\t\t});\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\t// word wrap special case - sync transient state from result model to input[1|2] models\n\t\tconst mirrorWordWrapTransientState = (candidate: ITextModel) => {\n\t\t\tconst candidateState = readTransientState(\n\t\t\t\tcandidate,\n\t\t\t\tthis._codeEditorService,\n\t\t\t);\n\n\t\t\twriteTransientState(\n\t\t\t\tmodel.input2.textModel,\n\t\t\t\tcandidateState,\n\t\t\t\tthis._codeEditorService,\n\t\t\t);\n\t\t\twriteTransientState(\n\t\t\t\tmodel.input1.textModel,\n\t\t\t\tcandidateState,\n\t\t\t\tthis._codeEditorService,\n\t\t\t);\n\t\t\twriteTransientState(\n\t\t\t\tmodel.resultTextModel,\n\t\t\t\tcandidateState,\n\t\t\t\tthis._codeEditorService,\n\t\t\t);\n\n\t\t\tconst baseTextModel = this.baseView.get()?.editor.getModel();\n\t\t\tif (baseTextModel) {\n\t\t\t\twriteTransientState(\n\t\t\t\t\tbaseTextModel,\n\t\t\t\t\tcandidateState,\n\t\t\t\t\tthis._codeEditorService,\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\t\tthis._sessionDisposables.add(\n\t\t\tthis._codeEditorService.onDidChangeTransientModelProperty(\n\t\t\t\t(candidate) => {\n\t\t\t\t\tmirrorWordWrapTransientState(candidate);\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tmirrorWordWrapTransientState(this.inputResultView.editor.getModel()!);\n\n\t\t// detect when base, input1, and input2 become empty and replace THIS editor with its result editor\n\t\t// TODO@jrieken@hediet this needs a better/cleaner solution\n\t\t// https://github.com/microsoft/vscode/issues/155940\n\t\tconst that = this;\n\t\tthis._sessionDisposables.add(\n\t\t\tnew (class {\n\t\t\t\tprivate readonly _disposable = new DisposableStore();\n\n\t\t\t\tconstructor() {\n\t\t\t\t\tfor (const model of this.baseInput1Input2()) {\n\t\t\t\t\t\tthis._disposable.add(\n\t\t\t\t\t\t\tmodel.onDidChangeContent(() =>\n\t\t\t\t\t\t\t\tthis._checkBaseInput1Input2AllEmpty(),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdispose() {\n\t\t\t\t\tthis._disposable.dispose();\n\t\t\t\t}\n\n\t\t\t\tprivate *baseInput1Input2() {\n\t\t\t\t\tyield model.base;\n\t\t\t\t\tyield model.input1.textModel;\n\t\t\t\t\tyield model.input2.textModel;\n\t\t\t\t}\n\n\t\t\t\tprivate _checkBaseInput1Input2AllEmpty() {\n\t\t\t\t\tfor (const model of this.baseInput1Input2()) {\n\t\t\t\t\t\tif (model.getValueLength() > 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// all empty -> replace this editor with a normal editor for result\n\t\t\t\t\tthat.editorService.replaceEditors(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\teditor: input,\n\t\t\t\t\t\t\t\treplacement: {\n\t\t\t\t\t\t\t\t\tresource: input.result,\n\t\t\t\t\t\t\t\t\toptions: { preserveFocus: true },\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tforceReplaceDirty: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tthat.group,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t})(),\n\t\t);\n\t}\n\n\tprivate setViewZones(\n\t\treader: IReader,\n\t\tviewModel: MergeEditorViewModel,\n\t\tinput1Editor: ICodeEditor,\n\t\tinput1ViewZoneAccessor: IViewZoneChangeAccessor,\n\t\tinput2Editor: ICodeEditor,\n\t\tinput2ViewZoneAccessor: IViewZoneChangeAccessor,\n\t\tbaseEditor: ICodeEditor | undefined,\n\t\tbaseViewZoneAccessor: IViewZoneChangeAccessor | undefined,\n\t\tshouldAlignBase: boolean,\n\t\tresultEditor: ICodeEditor,\n\t\tresultViewZoneAccessor: IViewZoneChangeAccessor,\n\t\tshouldAlignResult: boolean,\n\t): IDisposable {\n\t\tconst input1ViewZoneIds: string[] = [];\n\t\tconst input2ViewZoneIds: string[] = [];\n\t\tconst baseViewZoneIds: string[] = [];\n\t\tconst resultViewZoneIds: string[] = [];\n\n\t\tconst viewZones = this.viewZoneComputer.computeViewZones(\n\t\t\treader,\n\t\t\tviewModel,\n\t\t\t{\n\t\t\t\tcodeLensesVisible: this.codeLensesVisible.read(reader),\n\t\t\t\tshowNonConflictingChanges:\n\t\t\t\t\tthis.showNonConflictingChanges.read(reader),\n\t\t\t\tshouldAlignBase,\n\t\t\t\tshouldAlignResult,\n\t\t\t},\n\t\t);\n\n\t\tconst disposableStore = new DisposableStore();\n\n\t\tif (baseViewZoneAccessor) {\n\t\t\tfor (const v of viewZones.baseViewZones) {\n\t\t\t\tv.create(\n\t\t\t\t\tbaseViewZoneAccessor,\n\t\t\t\t\tbaseViewZoneIds,\n\t\t\t\t\tdisposableStore,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tfor (const v of viewZones.resultViewZones) {\n\t\t\tv.create(\n\t\t\t\tresultViewZoneAccessor,\n\t\t\t\tresultViewZoneIds,\n\t\t\t\tdisposableStore,\n\t\t\t);\n\t\t}\n\n\t\tfor (const v of viewZones.input1ViewZones) {\n\t\t\tv.create(\n\t\t\t\tinput1ViewZoneAccessor,\n\t\t\t\tinput1ViewZoneIds,\n\t\t\t\tdisposableStore,\n\t\t\t);\n\t\t}\n\n\t\tfor (const v of viewZones.input2ViewZones) {\n\t\t\tv.create(\n\t\t\t\tinput2ViewZoneAccessor,\n\t\t\t\tinput2ViewZoneIds,\n\t\t\t\tdisposableStore,\n\t\t\t);\n\t\t}\n\n\t\tdisposableStore.add({\n\t\t\tdispose: () => {\n\t\t\t\tinput1Editor.changeViewZones((a) => {\n\t\t\t\t\tfor (const zone of input1ViewZoneIds) {\n\t\t\t\t\t\ta.removeZone(zone);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tinput2Editor.changeViewZones((a) => {\n\t\t\t\t\tfor (const zone of input2ViewZoneIds) {\n\t\t\t\t\t\ta.removeZone(zone);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tbaseEditor?.changeViewZones((a) => {\n\t\t\t\t\tfor (const zone of baseViewZoneIds) {\n\t\t\t\t\t\ta.removeZone(zone);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresultEditor.changeViewZones((a) => {\n\t\t\t\t\tfor (const zone of resultViewZoneIds) {\n\t\t\t\t\t\ta.removeZone(zone);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\n\t\treturn disposableStore;\n\t}\n\n\toverride setOptions(options: ITextEditorOptions | undefined): void {\n\t\tsuper.setOptions(options);\n\n\t\tif (options) {\n\t\t\tapplyTextEditorOptions(\n\t\t\t\toptions,\n\t\t\t\tthis.inputResultView.editor,\n\t\t\t\tScrollType.Smooth,\n\t\t\t);\n\t\t}\n\t}\n\n\toverride clearInput(): void {\n\t\tsuper.clearInput();\n\n\t\tthis._sessionDisposables.clear();\n\n\t\tfor (const { editor } of [\n\t\t\tthis.input1View,\n\t\t\tthis.input2View,\n\t\t\tthis.inputResultView,\n\t\t]) {\n\t\t\teditor.setModel(null);\n\t\t}\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\n\t\t(this.getControl() ?? this.inputResultView.editor).focus();\n\t}\n\n\toverride hasFocus(): boolean {\n\t\tfor (const { editor } of [\n\t\t\tthis.input1View,\n\t\t\tthis.input2View,\n\t\t\tthis.inputResultView,\n\t\t]) {\n\t\t\tif (editor.hasTextFocus()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn super.hasFocus();\n\t}\n\n\tprotected override setEditorVisible(visible: boolean): void {\n\t\tsuper.setEditorVisible(visible);\n\n\t\tfor (const { editor } of [\n\t\t\tthis.input1View,\n\t\t\tthis.input2View,\n\t\t\tthis.inputResultView,\n\t\t]) {\n\t\t\tif (visible) {\n\t\t\t\teditor.onVisible();\n\t\t\t} else {\n\t\t\t\teditor.onHide();\n\t\t\t}\n\t\t}\n\n\t\tthis._ctxIsMergeEditor.set(visible);\n\t}\n\n\t// ---- interact with \"outside world\" via`getControl`, `scopedContextKeyService`: we only expose the result-editor keep the others internal\n\n\toverride getControl(): ICodeEditor | undefined {\n\t\treturn this.inputResultView.editor;\n\t}\n\n\toverride get scopedContextKeyService(): IContextKeyService | undefined {\n\t\tconst control = this.getControl();\n\t\treturn control?.invokeWithinContext((accessor) =>\n\t\t\taccessor.get(IContextKeyService),\n\t\t);\n\t}\n\n\t// --- layout\n\n\tpublic toggleBase(): void {\n\t\tthis.setLayout({\n\t\t\t...this._layoutMode.value,\n\t\t\tshowBase: !this._layoutMode.value.showBase,\n\t\t});\n\t}\n\n\tpublic toggleShowBaseTop(): void {\n\t\tconst showBaseTop =\n\t\t\tthis._layoutMode.value.showBase &&\n\t\t\tthis._layoutMode.value.showBaseAtTop;\n\t\tthis.setLayout({\n\t\t\t...this._layoutMode.value,\n\t\t\tshowBaseAtTop: true,\n\t\t\tshowBase: !showBaseTop,\n\t\t});\n\t}\n\n\tpublic toggleShowBaseCenter(): void {\n\t\tconst showBaseCenter =\n\t\t\tthis._layoutMode.value.showBase &&\n\t\t\t!this._layoutMode.value.showBaseAtTop;\n\t\tthis.setLayout({\n\t\t\t...this._layoutMode.value,\n\t\t\tshowBaseAtTop: false,\n\t\t\tshowBase: !showBaseCenter,\n\t\t});\n\t}\n\n\tpublic setLayoutKind(kind: MergeEditorLayoutKind): void {\n\t\tthis.setLayout({\n\t\t\t...this._layoutMode.value,\n\t\t\tkind,\n\t\t});\n\t}\n\n\tpublic setLayout(newLayout: IMergeEditorLayout): void {\n\t\tconst value = this._layoutMode.value;\n\t\tif (JSON.stringify(value) === JSON.stringify(newLayout)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.model?.telemetry.reportLayoutChange({\n\t\t\tbaseTop: newLayout.showBaseAtTop,\n\t\t\tbaseVisible: newLayout.showBase,\n\t\t\tisColumnView: newLayout.kind === \"columns\",\n\t\t});\n\t\tthis.applyLayout(newLayout);\n\t}\n\n\tprivate readonly baseViewDisposables = this._register(\n\t\tnew DisposableStore(),\n\t);\n\n\tprivate applyLayout(layout: IMergeEditorLayout): void {\n\t\ttransaction((tx) => {\n\t\t\t/** @description applyLayout */\n\n\t\t\tif (layout.showBase && !this.baseView.get()) {\n\t\t\t\tthis.baseViewDisposables.clear();\n\t\t\t\tconst baseView = this.baseViewDisposables.add(\n\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\tBaseCodeEditorView,\n\t\t\t\t\t\tthis.viewModel,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tthis.baseViewDisposables.add(\n\t\t\t\t\tautorun((reader) => {\n\t\t\t\t\t\t/** @description Update base view options */\n\t\t\t\t\t\tconst options = this.baseViewOptions.read(reader);\n\t\t\t\t\t\tif (options) {\n\t\t\t\t\t\t\tbaseView.updateOptions(options);\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\tthis.baseView.set(baseView, tx);\n\t\t\t} else if (!layout.showBase && this.baseView.get()) {\n\t\t\t\tthis.baseView.set(undefined, tx);\n\t\t\t\tthis.baseViewDisposables.clear();\n\t\t\t}\n\n\t\t\tif (layout.kind === \"mixed\") {\n\t\t\t\tthis.setGrid(\n\t\t\t\t\t[\n\t\t\t\t\t\tlayout.showBaseAtTop && layout.showBase\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\tsize: 38,\n\t\t\t\t\t\t\t\t\tdata: this.baseView.get()!.view,\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsize: 38,\n\t\t\t\t\t\t\tgroups: [\n\t\t\t\t\t\t\t\t{ data: this.input1View.view },\n\t\t\t\t\t\t\t\t!layout.showBaseAtTop && layout.showBase\n\t\t\t\t\t\t\t\t\t? { data: this.baseView.get()!.view }\n\t\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t\t\t{ data: this.input2View.view },\n\t\t\t\t\t\t\t].filter(isDefined),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsize: 62,\n\t\t\t\t\t\t\tdata: this.inputResultView.view,\n\t\t\t\t\t\t},\n\t\t\t\t\t].filter(isDefined),\n\t\t\t\t);\n\t\t\t} else if (layout.kind === \"columns\") {\n\t\t\t\tthis.setGrid(\n\t\t\t\t\t[\n\t\t\t\t\t\tlayout.showBase\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\tsize: 40,\n\t\t\t\t\t\t\t\t\tdata: this.baseView.get()!.view,\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsize: 60,\n\t\t\t\t\t\t\tgroups: [\n\t\t\t\t\t\t\t\t{ data: this.input1View.view },\n\t\t\t\t\t\t\t\t{ data: this.inputResultView.view },\n\t\t\t\t\t\t\t\t{ data: this.input2View.view },\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t].filter(isDefined),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis._layoutMode.value = layout;\n\t\t\tthis._ctxUsesColumnLayout.set(layout.kind);\n\t\t\tthis._ctxShowBase.set(layout.showBase);\n\t\t\tthis._ctxShowBaseAtTop.set(layout.showBaseAtTop);\n\t\t\tthis._onDidChangeSizeConstraints.fire();\n\t\t\tthis._layoutModeObs.set(layout, tx);\n\t\t});\n\t}\n\n\tprivate setGrid(descriptor: GridNodeDescriptor<any>[]) {\n\t\tlet width = -1;\n\t\tlet height = -1;\n\t\tif (this._grid.value) {\n\t\t\twidth = this._grid.value.width;\n\t\t\theight = this._grid.value.height;\n\t\t}\n\t\tthis._grid.value = SerializableGrid.from<any>(\n\t\t\t{\n\t\t\t\torientation: Orientation.VERTICAL,\n\t\t\t\tsize: 100,\n\t\t\t\tgroups: descriptor,\n\t\t\t},\n\t\t\t{\n\t\t\t\tstyles: {\n\t\t\t\t\tseparatorBorder:\n\t\t\t\t\t\tthis.theme.getColor(settingsSashBorder) ??\n\t\t\t\t\t\tColor.transparent,\n\t\t\t\t},\n\t\t\t\tproportionalLayout: true,\n\t\t\t},\n\t\t);\n\n\t\treset(this.rootHtmlElement!, this._grid.value.element);\n\t\t// Only call layout after the elements have been added to the DOM,\n\t\t// so that they have a defined size.\n\t\tif (width !== -1) {\n\t\t\tthis._grid.value.layout(width, height);\n\t\t}\n\t}\n\n\tprivate _applyViewState(state: IMergeEditorViewState | undefined) {\n\t\tif (!state) {\n\t\t\treturn;\n\t\t}\n\t\tthis.inputResultView.editor.restoreViewState(state);\n\t\tif (state.input1State) {\n\t\t\tthis.input1View.editor.restoreViewState(state.input1State);\n\t\t}\n\t\tif (state.input2State) {\n\t\t\tthis.input2View.editor.restoreViewState(state.input2State);\n\t\t}\n\t\tif (state.focusIndex >= 0) {\n\t\t\t[\n\t\t\t\tthis.input1View.editor,\n\t\t\t\tthis.input2View.editor,\n\t\t\t\tthis.inputResultView.editor,\n\t\t\t][state.focusIndex].focus();\n\t\t}\n\t}\n\n\tprotected computeEditorViewState(\n\t\tresource: URI,\n\t): IMergeEditorViewState | undefined {\n\t\tif (!isEqual(this.inputModel.get()?.resultUri, resource)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst result = this.inputResultView.editor.saveViewState();\n\t\tif (!result) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst input1State = this.input1View.editor.saveViewState() ?? undefined;\n\t\tconst input2State = this.input2View.editor.saveViewState() ?? undefined;\n\t\tconst focusIndex = [\n\t\t\tthis.input1View.editor,\n\t\t\tthis.input2View.editor,\n\t\t\tthis.inputResultView.editor,\n\t\t].findIndex((editor) => editor.hasWidgetFocus());\n\t\treturn { ...result, input1State, input2State, focusIndex };\n\t}\n\n\tprotected tracksEditorViewState(input: EditorInput): boolean {\n\t\treturn input instanceof MergeEditorInput;\n\t}\n\n\tprivate readonly showNonConflictingChangesStore =\n\t\tthis.instantiationService.createInstance(\n\t\t\tPersistentStore<boolean>,\n\t\t\t\"mergeEditor/showNonConflictingChanges\",\n\t\t);\n\tprivate readonly showNonConflictingChanges = observableValue(\n\t\tthis,\n\t\tthis.showNonConflictingChangesStore.get() ?? false,\n\t);\n\n\tpublic toggleShowNonConflictingChanges(): void {\n\t\tthis.showNonConflictingChanges.set(\n\t\t\t!this.showNonConflictingChanges.get(),\n\t\t\tundefined,\n\t\t);\n\t\tthis.showNonConflictingChangesStore.set(\n\t\t\tthis.showNonConflictingChanges.get(),\n\t\t);\n\t\tthis._ctxShowNonConflictingChanges.set(\n\t\t\tthis.showNonConflictingChanges.get(),\n\t\t);\n\t}\n}\n\nexport interface IMergeEditorLayout {\n\treadonly kind: MergeEditorLayoutKind;\n\treadonly showBase: boolean;\n\treadonly showBaseAtTop: boolean;\n}\n\n// TODO use PersistentStore\nclass MergeEditorLayoutStore {\n\tprivate static readonly _key = \"mergeEditor/layout\";\n\tprivate _value: IMergeEditorLayout = {\n\t\tkind: \"mixed\",\n\t\tshowBase: false,\n\t\tshowBaseAtTop: true,\n\t};\n\n\tconstructor(@IStorageService private _storageService: IStorageService) {\n\t\tconst value = _storageService.get(\n\t\t\tMergeEditorLayoutStore._key,\n\t\t\tStorageScope.PROFILE,\n\t\t\t\"mixed\",\n\t\t);\n\n\t\tif (value === \"mixed\" || value === \"columns\") {\n\t\t\tthis._value = { kind: value, showBase: false, showBaseAtTop: true };\n\t\t} else if (value) {\n\t\t\ttry {\n\t\t\t\tthis._value = JSON.parse(value);\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t}\n\t\t}\n\t}\n\n\tget value() {\n\t\treturn this._value;\n\t}\n\n\tset value(value: IMergeEditorLayout) {\n\t\tif (this._value !== value) {\n\t\t\tthis._value = value;\n\t\t\tthis._storageService.store(\n\t\t\t\tMergeEditorLayoutStore._key,\n\t\t\t\tJSON.stringify(this._value),\n\t\t\t\tStorageScope.PROFILE,\n\t\t\t\tStorageTarget.USER,\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport class MergeEditorOpenHandlerContribution extends Disposable {\n\tconstructor(\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t) {\n\t\tsuper();\n\t\tthis._store.add(\n\t\t\tcodeEditorService.registerCodeEditorOpenHandler(\n\t\t\t\tthis.openCodeEditorFromMergeEditor.bind(this),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate async openCodeEditorFromMergeEditor(\n\t\tinput: ITextResourceEditorInput,\n\t\t_source: ICodeEditor | null,\n\t\tsideBySide?: boolean | undefined,\n\t): Promise<ICodeEditor | null> {\n\t\tconst activePane = this._editorService.activeEditorPane;\n\t\tif (\n\t\t\t!sideBySide &&\n\t\t\tinput.options &&\n\t\t\tactivePane instanceof MergeEditor &&\n\t\t\tactivePane.getControl() &&\n\t\t\tactivePane.input instanceof MergeEditorInput &&\n\t\t\tisEqual(input.resource, activePane.input.result)\n\t\t) {\n\t\t\t// Special: stay inside the merge editor when it is active and when the input\n\t\t\t// targets the result editor of the merge editor.\n\t\t\tconst targetEditor = <ICodeEditor>activePane.getControl()!;\n\t\t\tapplyTextEditorOptions(\n\t\t\t\tinput.options,\n\t\t\t\ttargetEditor,\n\t\t\t\tScrollType.Smooth,\n\t\t\t);\n\t\t\treturn targetEditor;\n\t\t}\n\n\t\t// cannot handle this\n\t\treturn null;\n\t}\n}\n\nexport class MergeEditorResolverContribution extends Disposable {\n\tstatic readonly ID = \"workbench.contrib.mergeEditorResolver\";\n\n\tconstructor(\n\t\t@IEditorResolverService editorResolverService: IEditorResolverService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tconst mergeEditorInputFactory: MergeEditorInputFactoryFunction = (\n\t\t\tmergeEditor: IResourceMergeEditorInput,\n\t\t): EditorInputWithOptions => {\n\t\t\treturn {\n\t\t\t\teditor: instantiationService.createInstance(\n\t\t\t\t\tMergeEditorInput,\n\t\t\t\t\tmergeEditor.base.resource,\n\t\t\t\t\t{\n\t\t\t\t\t\turi: mergeEditor.input1.resource,\n\t\t\t\t\t\ttitle:\n\t\t\t\t\t\t\tmergeEditor.input1.label ??\n\t\t\t\t\t\t\tbasename(mergeEditor.input1.resource),\n\t\t\t\t\t\tdescription: mergeEditor.input1.description ?? \"\",\n\t\t\t\t\t\tdetail: mergeEditor.input1.detail,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\turi: mergeEditor.input2.resource,\n\t\t\t\t\t\ttitle:\n\t\t\t\t\t\t\tmergeEditor.input2.label ??\n\t\t\t\t\t\t\tbasename(mergeEditor.input2.resource),\n\t\t\t\t\t\tdescription: mergeEditor.input2.description ?? \"\",\n\t\t\t\t\t\tdetail: mergeEditor.input2.detail,\n\t\t\t\t\t},\n\t\t\t\t\tmergeEditor.result.resource,\n\t\t\t\t),\n\t\t\t};\n\t\t};\n\n\t\tthis._register(\n\t\t\teditorResolverService.registerEditor(\n\t\t\t\t`*`,\n\t\t\t\t{\n\t\t\t\t\tid: DEFAULT_EDITOR_ASSOCIATION.id,\n\t\t\t\t\tlabel: DEFAULT_EDITOR_ASSOCIATION.displayName,\n\t\t\t\t\tdetail: DEFAULT_EDITOR_ASSOCIATION.providerDisplayName,\n\t\t\t\t\tpriority: RegisteredEditorPriority.builtin,\n\t\t\t\t},\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\tcreateMergeEditorInput: mergeEditorInputFactory,\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n}\n\ntype IMergeEditorViewState = ICodeEditorViewState & {\n\treadonly input1State?: ICodeEditorViewState;\n\treadonly input2State?: ICodeEditorViewState;\n\treadonly focusIndex: number;\n};\n"],
  "mappings": "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",
  "names": ["model"]
}
