{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/mergeEditor/browser/view/scrollSynchronizer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ReentrancyBarrier } from \"../../../../../base/common/controlFlow.js\";\nimport { Disposable } from \"../../../../../base/common/lifecycle.js\";\nimport {\n\ttype IObservable,\n\tautorunWithStore,\n} from \"../../../../../base/common/observable.js\";\nimport type { CodeEditorWidget } from \"../../../../../editor/browser/widget/codeEditor/codeEditorWidget.js\";\nimport { ScrollType } from \"../../../../../editor/common/editorCommon.js\";\nimport { DocumentLineRangeMap } from \"../model/mapping.js\";\nimport type { BaseCodeEditorView } from \"./editors/baseCodeEditorView.js\";\nimport type { InputCodeEditorView } from \"./editors/inputCodeEditorView.js\";\nimport type { ResultCodeEditorView } from \"./editors/resultCodeEditorView.js\";\nimport type { IMergeEditorLayout } from \"./mergeEditor.js\";\nimport type { MergeEditorViewModel } from \"./viewModel.js\";\n\nexport class ScrollSynchronizer extends Disposable {\n\tprivate get model() {\n\t\treturn this.viewModel.get()?.model;\n\t}\n\n\tprivate readonly reentrancyBarrier = new ReentrancyBarrier();\n\n\tpublic readonly updateScrolling: () => void;\n\n\tprivate get shouldAlignResult() {\n\t\treturn this.layout.get().kind === \"columns\";\n\t}\n\tprivate get shouldAlignBase() {\n\t\treturn (\n\t\t\tthis.layout.get().kind === \"mixed\" &&\n\t\t\t!this.layout.get().showBaseAtTop\n\t\t);\n\t}\n\n\tconstructor(\n\t\tprivate readonly viewModel: IObservable<\n\t\t\tMergeEditorViewModel | undefined\n\t\t>,\n\t\tprivate readonly input1View: InputCodeEditorView,\n\t\tprivate readonly input2View: InputCodeEditorView,\n\t\tprivate readonly baseView: IObservable<BaseCodeEditorView | undefined>,\n\t\tprivate readonly inputResultView: ResultCodeEditorView,\n\t\tprivate readonly layout: IObservable<IMergeEditorLayout>,\n\t) {\n\t\tsuper();\n\n\t\tconst handleInput1OnScroll = (this.updateScrolling = () => {\n\t\t\tif (!this.model) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.input2View.editor.setScrollTop(\n\t\t\t\tthis.input1View.editor.getScrollTop(),\n\t\t\t\tScrollType.Immediate,\n\t\t\t);\n\n\t\t\tif (this.shouldAlignResult) {\n\t\t\t\tthis.inputResultView.editor.setScrollTop(\n\t\t\t\t\tthis.input1View.editor.getScrollTop(),\n\t\t\t\t\tScrollType.Immediate,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tconst mappingInput1Result =\n\t\t\t\t\tthis.model.input1ResultMapping.get();\n\t\t\t\tthis.synchronizeScrolling(\n\t\t\t\t\tthis.input1View.editor,\n\t\t\t\t\tthis.inputResultView.editor,\n\t\t\t\t\tmappingInput1Result,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst baseView = this.baseView.get();\n\t\t\tif (baseView) {\n\t\t\t\tif (this.shouldAlignBase) {\n\t\t\t\t\tthis.baseView\n\t\t\t\t\t\t.get()\n\t\t\t\t\t\t?.editor.setScrollTop(\n\t\t\t\t\t\t\tthis.input1View.editor.getScrollTop(),\n\t\t\t\t\t\t\tScrollType.Immediate,\n\t\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tconst mapping = new DocumentLineRangeMap(\n\t\t\t\t\t\tthis.model.baseInput1Diffs.get(),\n\t\t\t\t\t\t-1,\n\t\t\t\t\t).reverse();\n\t\t\t\t\tthis.synchronizeScrolling(\n\t\t\t\t\t\tthis.input1View.editor,\n\t\t\t\t\t\tbaseView.editor,\n\t\t\t\t\t\tmapping,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._store.add(\n\t\t\tthis.input1View.editor.onDidScrollChange(\n\t\t\t\tthis.reentrancyBarrier.makeExclusiveOrSkip((c) => {\n\t\t\t\t\tif (c.scrollTopChanged) {\n\t\t\t\t\t\thandleInput1OnScroll();\n\t\t\t\t\t}\n\t\t\t\t\tif (c.scrollLeftChanged) {\n\t\t\t\t\t\tthis.baseView\n\t\t\t\t\t\t\t.get()\n\t\t\t\t\t\t\t?.editor.setScrollLeft(\n\t\t\t\t\t\t\t\tc.scrollLeft,\n\t\t\t\t\t\t\t\tScrollType.Immediate,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.input2View.editor.setScrollLeft(\n\t\t\t\t\t\t\tc.scrollLeft,\n\t\t\t\t\t\t\tScrollType.Immediate,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.inputResultView.editor.setScrollLeft(\n\t\t\t\t\t\t\tc.scrollLeft,\n\t\t\t\t\t\t\tScrollType.Immediate,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t),\n\t\t);\n\n\t\tthis._store.add(\n\t\t\tthis.input2View.editor.onDidScrollChange(\n\t\t\t\tthis.reentrancyBarrier.makeExclusiveOrSkip((c) => {\n\t\t\t\t\tif (!this.model) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c.scrollTopChanged) {\n\t\t\t\t\t\tthis.input1View.editor.setScrollTop(\n\t\t\t\t\t\t\tc.scrollTop,\n\t\t\t\t\t\t\tScrollType.Immediate,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (this.shouldAlignResult) {\n\t\t\t\t\t\t\tthis.inputResultView.editor.setScrollTop(\n\t\t\t\t\t\t\t\tthis.input2View.editor.getScrollTop(),\n\t\t\t\t\t\t\t\tScrollType.Immediate,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst mappingInput2Result =\n\t\t\t\t\t\t\t\tthis.model.input2ResultMapping.get();\n\t\t\t\t\t\t\tthis.synchronizeScrolling(\n\t\t\t\t\t\t\t\tthis.input2View.editor,\n\t\t\t\t\t\t\t\tthis.inputResultView.editor,\n\t\t\t\t\t\t\t\tmappingInput2Result,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst baseView = this.baseView.get();\n\t\t\t\t\t\tif (baseView && this.model) {\n\t\t\t\t\t\t\tif (this.shouldAlignBase) {\n\t\t\t\t\t\t\t\tthis.baseView\n\t\t\t\t\t\t\t\t\t.get()\n\t\t\t\t\t\t\t\t\t?.editor.setScrollTop(\n\t\t\t\t\t\t\t\t\t\tc.scrollTop,\n\t\t\t\t\t\t\t\t\t\tScrollType.Immediate,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst mapping = new DocumentLineRangeMap(\n\t\t\t\t\t\t\t\t\tthis.model.baseInput2Diffs.get(),\n\t\t\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t\t\t).reverse();\n\t\t\t\t\t\t\t\tthis.synchronizeScrolling(\n\t\t\t\t\t\t\t\t\tthis.input2View.editor,\n\t\t\t\t\t\t\t\t\tbaseView.editor,\n\t\t\t\t\t\t\t\t\tmapping,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (c.scrollLeftChanged) {\n\t\t\t\t\t\tthis.baseView\n\t\t\t\t\t\t\t.get()\n\t\t\t\t\t\t\t?.editor.setScrollLeft(\n\t\t\t\t\t\t\t\tc.scrollLeft,\n\t\t\t\t\t\t\t\tScrollType.Immediate,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.input1View.editor.setScrollLeft(\n\t\t\t\t\t\t\tc.scrollLeft,\n\t\t\t\t\t\t\tScrollType.Immediate,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.inputResultView.editor.setScrollLeft(\n\t\t\t\t\t\t\tc.scrollLeft,\n\t\t\t\t\t\t\tScrollType.Immediate,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t),\n\t\t);\n\t\tthis._store.add(\n\t\t\tthis.inputResultView.editor.onDidScrollChange(\n\t\t\t\tthis.reentrancyBarrier.makeExclusiveOrSkip((c) => {\n\t\t\t\t\tif (c.scrollTopChanged) {\n\t\t\t\t\t\tif (this.shouldAlignResult) {\n\t\t\t\t\t\t\tthis.input1View.editor.setScrollTop(\n\t\t\t\t\t\t\t\tc.scrollTop,\n\t\t\t\t\t\t\t\tScrollType.Immediate,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthis.input2View.editor.setScrollTop(\n\t\t\t\t\t\t\t\tc.scrollTop,\n\t\t\t\t\t\t\t\tScrollType.Immediate,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst mapping1 =\n\t\t\t\t\t\t\t\tthis.model?.resultInput1Mapping.get();\n\t\t\t\t\t\t\tthis.synchronizeScrolling(\n\t\t\t\t\t\t\t\tthis.inputResultView.editor,\n\t\t\t\t\t\t\t\tthis.input1View.editor,\n\t\t\t\t\t\t\t\tmapping1,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tconst mapping2 =\n\t\t\t\t\t\t\t\tthis.model?.resultInput2Mapping.get();\n\t\t\t\t\t\t\tthis.synchronizeScrolling(\n\t\t\t\t\t\t\t\tthis.inputResultView.editor,\n\t\t\t\t\t\t\t\tthis.input2View.editor,\n\t\t\t\t\t\t\t\tmapping2,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst baseMapping = this.model?.resultBaseMapping.get();\n\t\t\t\t\t\tconst baseView = this.baseView.get();\n\t\t\t\t\t\tif (baseView && this.model) {\n\t\t\t\t\t\t\tthis.synchronizeScrolling(\n\t\t\t\t\t\t\t\tthis.inputResultView.editor,\n\t\t\t\t\t\t\t\tbaseView.editor,\n\t\t\t\t\t\t\t\tbaseMapping,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (c.scrollLeftChanged) {\n\t\t\t\t\t\tthis.baseView\n\t\t\t\t\t\t\t.get()\n\t\t\t\t\t\t\t?.editor?.setScrollLeft(\n\t\t\t\t\t\t\t\tc.scrollLeft,\n\t\t\t\t\t\t\t\tScrollType.Immediate,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.input1View.editor.setScrollLeft(\n\t\t\t\t\t\t\tc.scrollLeft,\n\t\t\t\t\t\t\tScrollType.Immediate,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.input2View.editor.setScrollLeft(\n\t\t\t\t\t\t\tc.scrollLeft,\n\t\t\t\t\t\t\tScrollType.Immediate,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t),\n\t\t);\n\n\t\tthis._store.add(\n\t\t\tautorunWithStore((reader, store) => {\n\t\t\t\t/** @description set baseViewEditor.onDidScrollChange */\n\t\t\t\tconst baseView = this.baseView.read(reader);\n\t\t\t\tif (baseView) {\n\t\t\t\t\tstore.add(\n\t\t\t\t\t\tbaseView.editor.onDidScrollChange(\n\t\t\t\t\t\t\tthis.reentrancyBarrier.makeExclusiveOrSkip((c) => {\n\t\t\t\t\t\t\t\tif (c.scrollTopChanged) {\n\t\t\t\t\t\t\t\t\tif (!this.model) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (this.shouldAlignBase) {\n\t\t\t\t\t\t\t\t\t\tthis.input1View.editor.setScrollTop(\n\t\t\t\t\t\t\t\t\t\t\tc.scrollTop,\n\t\t\t\t\t\t\t\t\t\t\tScrollType.Immediate,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tthis.input2View.editor.setScrollTop(\n\t\t\t\t\t\t\t\t\t\t\tc.scrollTop,\n\t\t\t\t\t\t\t\t\t\t\tScrollType.Immediate,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tconst baseInput1Mapping =\n\t\t\t\t\t\t\t\t\t\t\tnew DocumentLineRangeMap(\n\t\t\t\t\t\t\t\t\t\t\t\tthis.model.baseInput1Diffs.get(),\n\t\t\t\t\t\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tthis.synchronizeScrolling(\n\t\t\t\t\t\t\t\t\t\t\tbaseView.editor,\n\t\t\t\t\t\t\t\t\t\t\tthis.input1View.editor,\n\t\t\t\t\t\t\t\t\t\t\tbaseInput1Mapping,\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\tconst baseInput2Mapping =\n\t\t\t\t\t\t\t\t\t\t\tnew DocumentLineRangeMap(\n\t\t\t\t\t\t\t\t\t\t\t\tthis.model.baseInput2Diffs.get(),\n\t\t\t\t\t\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tthis.synchronizeScrolling(\n\t\t\t\t\t\t\t\t\t\t\tbaseView.editor,\n\t\t\t\t\t\t\t\t\t\t\tthis.input2View.editor,\n\t\t\t\t\t\t\t\t\t\t\tbaseInput2Mapping,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconst baseMapping =\n\t\t\t\t\t\t\t\t\t\tthis.model?.baseResultMapping.get();\n\t\t\t\t\t\t\t\t\tthis.synchronizeScrolling(\n\t\t\t\t\t\t\t\t\t\tbaseView.editor,\n\t\t\t\t\t\t\t\t\t\tthis.inputResultView.editor,\n\t\t\t\t\t\t\t\t\t\tbaseMapping,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (c.scrollLeftChanged) {\n\t\t\t\t\t\t\t\t\tthis.inputResultView.editor.setScrollLeft(\n\t\t\t\t\t\t\t\t\t\tc.scrollLeft,\n\t\t\t\t\t\t\t\t\t\tScrollType.Immediate,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis.input1View.editor.setScrollLeft(\n\t\t\t\t\t\t\t\t\t\tc.scrollLeft,\n\t\t\t\t\t\t\t\t\t\tScrollType.Immediate,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis.input2View.editor.setScrollLeft(\n\t\t\t\t\t\t\t\t\t\tc.scrollLeft,\n\t\t\t\t\t\t\t\t\t\tScrollType.Immediate,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate synchronizeScrolling(\n\t\tscrollingEditor: CodeEditorWidget,\n\t\ttargetEditor: CodeEditorWidget,\n\t\tmapping: DocumentLineRangeMap | undefined,\n\t) {\n\t\tif (!mapping) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst visibleRanges = scrollingEditor.getVisibleRanges();\n\t\tif (visibleRanges.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst topLineNumber = visibleRanges[0].startLineNumber - 1;\n\n\t\tconst result = mapping.project(topLineNumber);\n\t\tconst sourceRange = result.inputRange;\n\t\tconst targetRange = result.outputRange;\n\n\t\tconst resultStartTopPx = targetEditor.getTopForLineNumber(\n\t\t\ttargetRange.startLineNumber,\n\t\t);\n\t\tconst resultEndPx = targetEditor.getTopForLineNumber(\n\t\t\ttargetRange.endLineNumberExclusive,\n\t\t);\n\n\t\tconst sourceStartTopPx = scrollingEditor.getTopForLineNumber(\n\t\t\tsourceRange.startLineNumber,\n\t\t);\n\t\tconst sourceEndPx = scrollingEditor.getTopForLineNumber(\n\t\t\tsourceRange.endLineNumberExclusive,\n\t\t);\n\n\t\tconst factor = Math.min(\n\t\t\t(scrollingEditor.getScrollTop() - sourceStartTopPx) /\n\t\t\t\t(sourceEndPx - sourceStartTopPx),\n\t\t\t1,\n\t\t);\n\t\tconst resultScrollPosition =\n\t\t\tresultStartTopPx + (resultEndPx - resultStartTopPx) * factor;\n\n\t\ttargetEditor.setScrollTop(resultScrollPosition, ScrollType.Immediate);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["baseView"]
}
