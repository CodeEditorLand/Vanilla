{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/mergeEditor/browser/view/scrollSynchronizer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { autorunWithStore, IObservable } from '../../../../../base/common/observable.js';\nimport { CodeEditorWidget } from '../../../../../editor/browser/widget/codeEditor/codeEditorWidget.js';\nimport { ScrollType } from '../../../../../editor/common/editorCommon.js';\nimport { DocumentLineRangeMap } from '../model/mapping.js';\nimport { ReentrancyBarrier } from '../../../../../base/common/controlFlow.js';\nimport { BaseCodeEditorView } from './editors/baseCodeEditorView.js';\nimport { IMergeEditorLayout } from './mergeEditor.js';\nimport { MergeEditorViewModel } from './viewModel.js';\nimport { InputCodeEditorView } from './editors/inputCodeEditorView.js';\nimport { ResultCodeEditorView } from './editors/resultCodeEditorView.js';\n\nexport class ScrollSynchronizer extends Disposable {\n\tprivate get model() { return this.viewModel.get()?.model; }\n\n\tprivate readonly reentrancyBarrier = new ReentrancyBarrier();\n\n\tpublic readonly updateScrolling: () => void;\n\n\tprivate get shouldAlignResult() { return this.layout.get().kind === 'columns'; }\n\tprivate get shouldAlignBase() { return this.layout.get().kind === 'mixed' && !this.layout.get().showBaseAtTop; }\n\n\tconstructor(\n\t\tprivate readonly viewModel: IObservable<MergeEditorViewModel | undefined>,\n\t\tprivate readonly input1View: InputCodeEditorView,\n\t\tprivate readonly input2View: InputCodeEditorView,\n\t\tprivate readonly baseView: IObservable<BaseCodeEditorView | undefined>,\n\t\tprivate readonly inputResultView: ResultCodeEditorView,\n\t\tprivate readonly layout: IObservable<IMergeEditorLayout>,\n\t) {\n\t\tsuper();\n\n\t\tconst handleInput1OnScroll = this.updateScrolling = () => {\n\t\t\tif (!this.model) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.input2View.editor.setScrollTop(this.input1View.editor.getScrollTop(), ScrollType.Immediate);\n\n\t\t\tif (this.shouldAlignResult) {\n\t\t\t\tthis.inputResultView.editor.setScrollTop(this.input1View.editor.getScrollTop(), ScrollType.Immediate);\n\t\t\t} else {\n\t\t\t\tconst mappingInput1Result = this.model.input1ResultMapping.get();\n\t\t\t\tthis.synchronizeScrolling(this.input1View.editor, this.inputResultView.editor, mappingInput1Result);\n\t\t\t}\n\n\t\t\tconst baseView = this.baseView.get();\n\t\t\tif (baseView) {\n\t\t\t\tif (this.shouldAlignBase) {\n\t\t\t\t\tthis.baseView.get()?.editor.setScrollTop(this.input1View.editor.getScrollTop(), ScrollType.Immediate);\n\t\t\t\t} else {\n\t\t\t\t\tconst mapping = new DocumentLineRangeMap(this.model.baseInput1Diffs.get(), -1).reverse();\n\t\t\t\t\tthis.synchronizeScrolling(this.input1View.editor, baseView.editor, mapping);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis._store.add(\n\t\t\tthis.input1View.editor.onDidScrollChange(\n\t\t\t\tthis.reentrancyBarrier.makeExclusiveOrSkip((c) => {\n\t\t\t\t\tif (c.scrollTopChanged) {\n\t\t\t\t\t\thandleInput1OnScroll();\n\t\t\t\t\t}\n\t\t\t\t\tif (c.scrollLeftChanged) {\n\t\t\t\t\t\tthis.baseView.get()?.editor.setScrollLeft(c.scrollLeft, ScrollType.Immediate);\n\t\t\t\t\t\tthis.input2View.editor.setScrollLeft(c.scrollLeft, ScrollType.Immediate);\n\t\t\t\t\t\tthis.inputResultView.editor.setScrollLeft(c.scrollLeft, ScrollType.Immediate);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t)\n\t\t);\n\n\t\tthis._store.add(\n\t\t\tthis.input2View.editor.onDidScrollChange(\n\t\t\t\tthis.reentrancyBarrier.makeExclusiveOrSkip((c) => {\n\t\t\t\t\tif (!this.model) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c.scrollTopChanged) {\n\t\t\t\t\t\tthis.input1View.editor.setScrollTop(c.scrollTop, ScrollType.Immediate);\n\n\t\t\t\t\t\tif (this.shouldAlignResult) {\n\t\t\t\t\t\t\tthis.inputResultView.editor.setScrollTop(this.input2View.editor.getScrollTop(), ScrollType.Immediate);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst mappingInput2Result = this.model.input2ResultMapping.get();\n\t\t\t\t\t\t\tthis.synchronizeScrolling(this.input2View.editor, this.inputResultView.editor, mappingInput2Result);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst baseView = this.baseView.get();\n\t\t\t\t\t\tif (baseView && this.model) {\n\t\t\t\t\t\t\tif (this.shouldAlignBase) {\n\t\t\t\t\t\t\t\tthis.baseView.get()?.editor.setScrollTop(c.scrollTop, ScrollType.Immediate);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst mapping = new DocumentLineRangeMap(this.model.baseInput2Diffs.get(), -1).reverse();\n\t\t\t\t\t\t\t\tthis.synchronizeScrolling(this.input2View.editor, baseView.editor, mapping);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (c.scrollLeftChanged) {\n\t\t\t\t\t\tthis.baseView.get()?.editor.setScrollLeft(c.scrollLeft, ScrollType.Immediate);\n\t\t\t\t\t\tthis.input1View.editor.setScrollLeft(c.scrollLeft, ScrollType.Immediate);\n\t\t\t\t\t\tthis.inputResultView.editor.setScrollLeft(c.scrollLeft, ScrollType.Immediate);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t)\n\t\t);\n\t\tthis._store.add(\n\t\t\tthis.inputResultView.editor.onDidScrollChange(\n\t\t\t\tthis.reentrancyBarrier.makeExclusiveOrSkip((c) => {\n\t\t\t\t\tif (c.scrollTopChanged) {\n\t\t\t\t\t\tif (this.shouldAlignResult) {\n\t\t\t\t\t\t\tthis.input1View.editor.setScrollTop(c.scrollTop, ScrollType.Immediate);\n\t\t\t\t\t\t\tthis.input2View.editor.setScrollTop(c.scrollTop, ScrollType.Immediate);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst mapping1 = this.model?.resultInput1Mapping.get();\n\t\t\t\t\t\t\tthis.synchronizeScrolling(this.inputResultView.editor, this.input1View.editor, mapping1);\n\n\t\t\t\t\t\t\tconst mapping2 = this.model?.resultInput2Mapping.get();\n\t\t\t\t\t\t\tthis.synchronizeScrolling(this.inputResultView.editor, this.input2View.editor, mapping2);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst baseMapping = this.model?.resultBaseMapping.get();\n\t\t\t\t\t\tconst baseView = this.baseView.get();\n\t\t\t\t\t\tif (baseView && this.model) {\n\t\t\t\t\t\t\tthis.synchronizeScrolling(this.inputResultView.editor, baseView.editor, baseMapping);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (c.scrollLeftChanged) {\n\t\t\t\t\t\tthis.baseView.get()?.editor?.setScrollLeft(c.scrollLeft, ScrollType.Immediate);\n\t\t\t\t\t\tthis.input1View.editor.setScrollLeft(c.scrollLeft, ScrollType.Immediate);\n\t\t\t\t\t\tthis.input2View.editor.setScrollLeft(c.scrollLeft, ScrollType.Immediate);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t)\n\t\t);\n\n\t\tthis._store.add(\n\t\t\tautorunWithStore((reader, store) => {\n\t\t\t\t/** @description set baseViewEditor.onDidScrollChange */\n\t\t\t\tconst baseView = this.baseView.read(reader);\n\t\t\t\tif (baseView) {\n\t\t\t\t\tstore.add(baseView.editor.onDidScrollChange(\n\t\t\t\t\t\tthis.reentrancyBarrier.makeExclusiveOrSkip((c) => {\n\t\t\t\t\t\t\tif (c.scrollTopChanged) {\n\t\t\t\t\t\t\t\tif (!this.model) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (this.shouldAlignBase) {\n\t\t\t\t\t\t\t\t\tthis.input1View.editor.setScrollTop(c.scrollTop, ScrollType.Immediate);\n\t\t\t\t\t\t\t\t\tthis.input2View.editor.setScrollTop(c.scrollTop, ScrollType.Immediate);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tconst baseInput1Mapping = new DocumentLineRangeMap(this.model.baseInput1Diffs.get(), -1);\n\t\t\t\t\t\t\t\t\tthis.synchronizeScrolling(baseView.editor, this.input1View.editor, baseInput1Mapping);\n\n\t\t\t\t\t\t\t\t\tconst baseInput2Mapping = new DocumentLineRangeMap(this.model.baseInput2Diffs.get(), -1);\n\t\t\t\t\t\t\t\t\tthis.synchronizeScrolling(baseView.editor, this.input2View.editor, baseInput2Mapping);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tconst baseMapping = this.model?.baseResultMapping.get();\n\t\t\t\t\t\t\t\tthis.synchronizeScrolling(baseView.editor, this.inputResultView.editor, baseMapping);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (c.scrollLeftChanged) {\n\t\t\t\t\t\t\t\tthis.inputResultView.editor.setScrollLeft(c.scrollLeft, ScrollType.Immediate);\n\t\t\t\t\t\t\t\tthis.input1View.editor.setScrollLeft(c.scrollLeft, ScrollType.Immediate);\n\t\t\t\t\t\t\t\tthis.input2View.editor.setScrollLeft(c.scrollLeft, ScrollType.Immediate);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\tprivate synchronizeScrolling(scrollingEditor: CodeEditorWidget, targetEditor: CodeEditorWidget, mapping: DocumentLineRangeMap | undefined) {\n\t\tif (!mapping) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst visibleRanges = scrollingEditor.getVisibleRanges();\n\t\tif (visibleRanges.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst topLineNumber = visibleRanges[0].startLineNumber - 1;\n\n\t\tconst result = mapping.project(topLineNumber);\n\t\tconst sourceRange = result.inputRange;\n\t\tconst targetRange = result.outputRange;\n\n\t\tconst resultStartTopPx = targetEditor.getTopForLineNumber(targetRange.startLineNumber);\n\t\tconst resultEndPx = targetEditor.getTopForLineNumber(targetRange.endLineNumberExclusive);\n\n\t\tconst sourceStartTopPx = scrollingEditor.getTopForLineNumber(sourceRange.startLineNumber);\n\t\tconst sourceEndPx = scrollingEditor.getTopForLineNumber(sourceRange.endLineNumberExclusive);\n\n\t\tconst factor = Math.min((scrollingEditor.getScrollTop() - sourceStartTopPx) / (sourceEndPx - sourceStartTopPx), 1);\n\t\tconst resultScrollPosition = resultStartTopPx + (resultEndPx - resultStartTopPx) * factor;\n\n\t\ttargetEditor.setScrollTop(resultScrollPosition, ScrollType.Immediate);\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,kBAAkB;AAC3B,SAAS,kBAAkB,mBAAmB;AAC9C,SAAS,wBAAwB;AACjC,SAAS,kBAAkB;AAC3B,SAAS,4BAA4B;AACrC,SAAS,yBAAyB;AAClC,SAAS,0BAA0B;AACnC,SAAS,0BAA0B;AACnC,SAAS,4BAA4B;AACrC,SAAS,2BAA2B;AACpC,SAAS,4BAA4B;AAE9B,MAAM,2BAA2B,WAAW;AAAA,EAUlD,YACkB,WACA,YACA,YACA,UACA,iBACA,QAChB;AACD,UAAM;AAPW;AACA;AACA;AACA;AACA;AACA;AAIjB,UAAM,uBAAuB,KAAK,kBAAkB,MAAM;AACzD,UAAI,CAAC,KAAK,OAAO;AAChB;AAAA,MACD;AAEA,WAAK,WAAW,OAAO,aAAa,KAAK,WAAW,OAAO,aAAa,GAAG,WAAW,SAAS;AAE/F,UAAI,KAAK,mBAAmB;AAC3B,aAAK,gBAAgB,OAAO,aAAa,KAAK,WAAW,OAAO,aAAa,GAAG,WAAW,SAAS;AAAA,MACrG,OAAO;AACN,cAAM,sBAAsB,KAAK,MAAM,oBAAoB,IAAI;AAC/D,aAAK,qBAAqB,KAAK,WAAW,QAAQ,KAAK,gBAAgB,QAAQ,mBAAmB;AAAA,MACnG;AAEA,YAAMA,YAAW,KAAK,SAAS,IAAI;AACnC,UAAIA,WAAU;AACb,YAAI,KAAK,iBAAiB;AACzB,eAAK,SAAS,IAAI,GAAG,OAAO,aAAa,KAAK,WAAW,OAAO,aAAa,GAAG,WAAW,SAAS;AAAA,QACrG,OAAO;AACN,gBAAM,UAAU,IAAI,qBAAqB,KAAK,MAAM,gBAAgB,IAAI,GAAG,EAAE,EAAE,QAAQ;AACvF,eAAK,qBAAqB,KAAK,WAAW,QAAQA,UAAS,QAAQ,OAAO;AAAA,QAC3E;AAAA,MACD;AAAA,IACD;AAEA,SAAK,OAAO;AAAA,MACX,KAAK,WAAW,OAAO;AAAA,QACtB,KAAK,kBAAkB,oBAAoB,CAAC,MAAM;AACjD,cAAI,EAAE,kBAAkB;AACvB,iCAAqB;AAAA,UACtB;AACA,cAAI,EAAE,mBAAmB;AACxB,iBAAK,SAAS,IAAI,GAAG,OAAO,cAAc,EAAE,YAAY,WAAW,SAAS;AAC5E,iBAAK,WAAW,OAAO,cAAc,EAAE,YAAY,WAAW,SAAS;AACvE,iBAAK,gBAAgB,OAAO,cAAc,EAAE,YAAY,WAAW,SAAS;AAAA,UAC7E;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD;AAEA,SAAK,OAAO;AAAA,MACX,KAAK,WAAW,OAAO;AAAA,QACtB,KAAK,kBAAkB,oBAAoB,CAAC,MAAM;AACjD,cAAI,CAAC,KAAK,OAAO;AAChB;AAAA,UACD;AAEA,cAAI,EAAE,kBAAkB;AACvB,iBAAK,WAAW,OAAO,aAAa,EAAE,WAAW,WAAW,SAAS;AAErE,gBAAI,KAAK,mBAAmB;AAC3B,mBAAK,gBAAgB,OAAO,aAAa,KAAK,WAAW,OAAO,aAAa,GAAG,WAAW,SAAS;AAAA,YACrG,OAAO;AACN,oBAAM,sBAAsB,KAAK,MAAM,oBAAoB,IAAI;AAC/D,mBAAK,qBAAqB,KAAK,WAAW,QAAQ,KAAK,gBAAgB,QAAQ,mBAAmB;AAAA,YACnG;AAEA,kBAAMA,YAAW,KAAK,SAAS,IAAI;AACnC,gBAAIA,aAAY,KAAK,OAAO;AAC3B,kBAAI,KAAK,iBAAiB;AACzB,qBAAK,SAAS,IAAI,GAAG,OAAO,aAAa,EAAE,WAAW,WAAW,SAAS;AAAA,cAC3E,OAAO;AACN,sBAAM,UAAU,IAAI,qBAAqB,KAAK,MAAM,gBAAgB,IAAI,GAAG,EAAE,EAAE,QAAQ;AACvF,qBAAK,qBAAqB,KAAK,WAAW,QAAQA,UAAS,QAAQ,OAAO;AAAA,cAC3E;AAAA,YACD;AAAA,UACD;AACA,cAAI,EAAE,mBAAmB;AACxB,iBAAK,SAAS,IAAI,GAAG,OAAO,cAAc,EAAE,YAAY,WAAW,SAAS;AAC5E,iBAAK,WAAW,OAAO,cAAc,EAAE,YAAY,WAAW,SAAS;AACvE,iBAAK,gBAAgB,OAAO,cAAc,EAAE,YAAY,WAAW,SAAS;AAAA,UAC7E;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD;AACA,SAAK,OAAO;AAAA,MACX,KAAK,gBAAgB,OAAO;AAAA,QAC3B,KAAK,kBAAkB,oBAAoB,CAAC,MAAM;AACjD,cAAI,EAAE,kBAAkB;AACvB,gBAAI,KAAK,mBAAmB;AAC3B,mBAAK,WAAW,OAAO,aAAa,EAAE,WAAW,WAAW,SAAS;AACrE,mBAAK,WAAW,OAAO,aAAa,EAAE,WAAW,WAAW,SAAS;AAAA,YACtE,OAAO;AACN,oBAAM,WAAW,KAAK,OAAO,oBAAoB,IAAI;AACrD,mBAAK,qBAAqB,KAAK,gBAAgB,QAAQ,KAAK,WAAW,QAAQ,QAAQ;AAEvF,oBAAM,WAAW,KAAK,OAAO,oBAAoB,IAAI;AACrD,mBAAK,qBAAqB,KAAK,gBAAgB,QAAQ,KAAK,WAAW,QAAQ,QAAQ;AAAA,YACxF;AAEA,kBAAM,cAAc,KAAK,OAAO,kBAAkB,IAAI;AACtD,kBAAMA,YAAW,KAAK,SAAS,IAAI;AACnC,gBAAIA,aAAY,KAAK,OAAO;AAC3B,mBAAK,qBAAqB,KAAK,gBAAgB,QAAQA,UAAS,QAAQ,WAAW;AAAA,YACpF;AAAA,UACD;AACA,cAAI,EAAE,mBAAmB;AACxB,iBAAK,SAAS,IAAI,GAAG,QAAQ,cAAc,EAAE,YAAY,WAAW,SAAS;AAC7E,iBAAK,WAAW,OAAO,cAAc,EAAE,YAAY,WAAW,SAAS;AACvE,iBAAK,WAAW,OAAO,cAAc,EAAE,YAAY,WAAW,SAAS;AAAA,UACxE;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD;AAEA,SAAK,OAAO;AAAA,MACX,iBAAiB,CAAC,QAAQ,UAAU;AAEnC,cAAMA,YAAW,KAAK,SAAS,KAAK,MAAM;AAC1C,YAAIA,WAAU;AACb,gBAAM,IAAIA,UAAS,OAAO;AAAA,YACzB,KAAK,kBAAkB,oBAAoB,CAAC,MAAM;AACjD,kBAAI,EAAE,kBAAkB;AACvB,oBAAI,CAAC,KAAK,OAAO;AAChB;AAAA,gBACD;AACA,oBAAI,KAAK,iBAAiB;AACzB,uBAAK,WAAW,OAAO,aAAa,EAAE,WAAW,WAAW,SAAS;AACrE,uBAAK,WAAW,OAAO,aAAa,EAAE,WAAW,WAAW,SAAS;AAAA,gBACtE,OAAO;AACN,wBAAM,oBAAoB,IAAI,qBAAqB,KAAK,MAAM,gBAAgB,IAAI,GAAG,EAAE;AACvF,uBAAK,qBAAqBA,UAAS,QAAQ,KAAK,WAAW,QAAQ,iBAAiB;AAEpF,wBAAM,oBAAoB,IAAI,qBAAqB,KAAK,MAAM,gBAAgB,IAAI,GAAG,EAAE;AACvF,uBAAK,qBAAqBA,UAAS,QAAQ,KAAK,WAAW,QAAQ,iBAAiB;AAAA,gBACrF;AAEA,sBAAM,cAAc,KAAK,OAAO,kBAAkB,IAAI;AACtD,qBAAK,qBAAqBA,UAAS,QAAQ,KAAK,gBAAgB,QAAQ,WAAW;AAAA,cACpF;AACA,kBAAI,EAAE,mBAAmB;AACxB,qBAAK,gBAAgB,OAAO,cAAc,EAAE,YAAY,WAAW,SAAS;AAC5E,qBAAK,WAAW,OAAO,cAAc,EAAE,YAAY,WAAW,SAAS;AACvE,qBAAK,WAAW,OAAO,cAAc,EAAE,YAAY,WAAW,SAAS;AAAA,cACxE;AAAA,YACD,CAAC;AAAA,UACF,CAAC;AAAA,QACF;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAjLD,OAiBmD;AAAA;AAAA;AAAA,EAClD,IAAY,QAAQ;AAAE,WAAO,KAAK,UAAU,IAAI,GAAG;AAAA,EAAO;AAAA,EAEzC,oBAAoB,IAAI,kBAAkB;AAAA,EAE3C;AAAA,EAEhB,IAAY,oBAAoB;AAAE,WAAO,KAAK,OAAO,IAAI,EAAE,SAAS;AAAA,EAAW;AAAA,EAC/E,IAAY,kBAAkB;AAAE,WAAO,KAAK,OAAO,IAAI,EAAE,SAAS,WAAW,CAAC,KAAK,OAAO,IAAI,EAAE;AAAA,EAAe;AAAA,EA0JvG,qBAAqB,iBAAmC,cAAgC,SAA2C;AAC1I,QAAI,CAAC,SAAS;AACb;AAAA,IACD;AAEA,UAAM,gBAAgB,gBAAgB,iBAAiB;AACvD,QAAI,cAAc,WAAW,GAAG;AAC/B;AAAA,IACD;AACA,UAAM,gBAAgB,cAAc,CAAC,EAAE,kBAAkB;AAEzD,UAAM,SAAS,QAAQ,QAAQ,aAAa;AAC5C,UAAM,cAAc,OAAO;AAC3B,UAAM,cAAc,OAAO;AAE3B,UAAM,mBAAmB,aAAa,oBAAoB,YAAY,eAAe;AACrF,UAAM,cAAc,aAAa,oBAAoB,YAAY,sBAAsB;AAEvF,UAAM,mBAAmB,gBAAgB,oBAAoB,YAAY,eAAe;AACxF,UAAM,cAAc,gBAAgB,oBAAoB,YAAY,sBAAsB;AAE1F,UAAM,SAAS,KAAK,KAAK,gBAAgB,aAAa,IAAI,qBAAqB,cAAc,mBAAmB,CAAC;AACjH,UAAM,uBAAuB,oBAAoB,cAAc,oBAAoB;AAEnF,iBAAa,aAAa,sBAAsB,WAAW,SAAS;AAAA,EACrE;AACD;",
  "names": ["baseView"]
}
