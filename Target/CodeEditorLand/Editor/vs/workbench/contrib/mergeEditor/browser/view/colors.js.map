{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/mergeEditor/browser/view/colors.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../../../nls.js';\nimport { mergeCurrentHeaderBackground, mergeIncomingHeaderBackground, registerColor, transparent } from '../../../../../platform/theme/common/colorRegistry.js';\n\nexport const diff = registerColor(\n\t'mergeEditor.change.background',\n\t'#9bb95533',\n\tlocalize('mergeEditor.change.background', 'The background color for changes.')\n);\n\nexport const diffWord = registerColor(\n\t'mergeEditor.change.word.background',\n\t{ dark: '#9ccc2c33', light: '#9ccc2c66', hcDark: '#9ccc2c33', hcLight: '#9ccc2c66', },\n\tlocalize('mergeEditor.change.word.background', 'The background color for word changes.')\n);\n\nexport const diffBase = registerColor(\n\t'mergeEditor.changeBase.background',\n\t{ dark: '#4B1818FF', light: '#FFCCCCFF', hcDark: '#4B1818FF', hcLight: '#FFCCCCFF', },\n\tlocalize('mergeEditor.changeBase.background', 'The background color for changes in base.')\n);\n\nexport const diffWordBase = registerColor(\n\t'mergeEditor.changeBase.word.background',\n\t{ dark: '#6F1313FF', light: '#FFA3A3FF', hcDark: '#6F1313FF', hcLight: '#FFA3A3FF', },\n\tlocalize('mergeEditor.changeBase.word.background', 'The background color for word changes in base.')\n);\n\nexport const conflictBorderUnhandledUnfocused = registerColor(\n\t'mergeEditor.conflict.unhandledUnfocused.border',\n\t{ dark: '#ffa6007a', light: '#ffa600FF', hcDark: '#ffa6007a', hcLight: '#ffa6007a', },\n\tlocalize('mergeEditor.conflict.unhandledUnfocused.border', 'The border color of unhandled unfocused conflicts.')\n);\n\nexport const conflictBorderUnhandledFocused = registerColor(\n\t'mergeEditor.conflict.unhandledFocused.border',\n\t'#ffa600',\n\tlocalize('mergeEditor.conflict.unhandledFocused.border', 'The border color of unhandled focused conflicts.')\n);\n\nexport const conflictBorderHandledUnfocused = registerColor(\n\t'mergeEditor.conflict.handledUnfocused.border',\n\t'#86868649',\n\tlocalize('mergeEditor.conflict.handledUnfocused.border', 'The border color of handled unfocused conflicts.')\n);\n\nexport const conflictBorderHandledFocused = registerColor(\n\t'mergeEditor.conflict.handledFocused.border',\n\t'#c1c1c1cc',\n\tlocalize('mergeEditor.conflict.handledFocused.border', 'The border color of handled focused conflicts.')\n);\n\nexport const handledConflictMinimapOverViewRulerColor = registerColor(\n\t'mergeEditor.conflict.handled.minimapOverViewRuler',\n\t'#adaca8ee',\n\tlocalize('mergeEditor.conflict.handled.minimapOverViewRuler', 'The foreground color for changes in input 1.')\n);\n\nexport const unhandledConflictMinimapOverViewRulerColor = registerColor(\n\t'mergeEditor.conflict.unhandled.minimapOverViewRuler',\n\t'#fcba03FF',\n\tlocalize('mergeEditor.conflict.unhandled.minimapOverViewRuler', 'The foreground color for changes in input 1.')\n);\n\nexport const conflictingLinesBackground = registerColor(\n\t'mergeEditor.conflictingLines.background',\n\t'#ffea0047',\n\tlocalize('mergeEditor.conflictingLines.background', 'The background of the \"Conflicting Lines\" text.')\n);\n\nconst contentTransparency = 0.4;\nexport const conflictInput1Background = registerColor(\n\t'mergeEditor.conflict.input1.background',\n\ttransparent(mergeCurrentHeaderBackground, contentTransparency),\n\tlocalize('mergeEditor.conflict.input1.background', 'The background color of decorations in input 1.')\n);\n\nexport const conflictInput2Background = registerColor(\n\t'mergeEditor.conflict.input2.background',\n\ttransparent(mergeIncomingHeaderBackground, contentTransparency),\n\tlocalize('mergeEditor.conflict.input2.background', 'The background color of decorations in input 2.')\n);\n"],
  "mappings": "AAKA,SAAS,gBAAgB;AACzB,SAAS,8BAA8B,+BAA+B,eAAe,mBAAmB;AAEjG,MAAM,OAAO;AAAA,EACnB;AAAA,EACA;AAAA,EACA,SAAS,iCAAiC,mCAAmC;AAC9E;AAEO,MAAM,WAAW;AAAA,EACvB;AAAA,EACA,EAAE,MAAM,aAAa,OAAO,aAAa,QAAQ,aAAa,SAAS,YAAa;AAAA,EACpF,SAAS,sCAAsC,wCAAwC;AACxF;AAEO,MAAM,WAAW;AAAA,EACvB;AAAA,EACA,EAAE,MAAM,aAAa,OAAO,aAAa,QAAQ,aAAa,SAAS,YAAa;AAAA,EACpF,SAAS,qCAAqC,2CAA2C;AAC1F;AAEO,MAAM,eAAe;AAAA,EAC3B;AAAA,EACA,EAAE,MAAM,aAAa,OAAO,aAAa,QAAQ,aAAa,SAAS,YAAa;AAAA,EACpF,SAAS,0CAA0C,gDAAgD;AACpG;AAEO,MAAM,mCAAmC;AAAA,EAC/C;AAAA,EACA,EAAE,MAAM,aAAa,OAAO,aAAa,QAAQ,aAAa,SAAS,YAAa;AAAA,EACpF,SAAS,kDAAkD,oDAAoD;AAChH;AAEO,MAAM,iCAAiC;AAAA,EAC7C;AAAA,EACA;AAAA,EACA,SAAS,gDAAgD,kDAAkD;AAC5G;AAEO,MAAM,iCAAiC;AAAA,EAC7C;AAAA,EACA;AAAA,EACA,SAAS,gDAAgD,kDAAkD;AAC5G;AAEO,MAAM,+BAA+B;AAAA,EAC3C;AAAA,EACA;AAAA,EACA,SAAS,8CAA8C,gDAAgD;AACxG;AAEO,MAAM,2CAA2C;AAAA,EACvD;AAAA,EACA;AAAA,EACA,SAAS,qDAAqD,8CAA8C;AAC7G;AAEO,MAAM,6CAA6C;AAAA,EACzD;AAAA,EACA;AAAA,EACA,SAAS,uDAAuD,8CAA8C;AAC/G;AAEO,MAAM,6BAA6B;AAAA,EACzC;AAAA,EACA;AAAA,EACA,SAAS,2CAA2C,iDAAiD;AACtG;AAEA,MAAM,sBAAsB;AACrB,MAAM,2BAA2B;AAAA,EACvC;AAAA,EACA,YAAY,8BAA8B,mBAAmB;AAAA,EAC7D,SAAS,0CAA0C,iDAAiD;AACrG;AAEO,MAAM,2BAA2B;AAAA,EACvC;AAAA,EACA,YAAY,+BAA+B,mBAAmB;AAAA,EAC9D,SAAS,0CAA0C,iDAAiD;AACrG;",
  "names": []
}
