{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/mergeEditor/browser/view/colors.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from \"../../../../../nls.js\";\nimport {\n\tmergeCurrentHeaderBackground,\n\tmergeIncomingHeaderBackground,\n\tregisterColor,\n\ttransparent,\n} from \"../../../../../platform/theme/common/colorRegistry.js\";\n\nexport const diff = registerColor(\n\t\"mergeEditor.change.background\",\n\t\"#9bb95533\",\n\tlocalize(\n\t\t\"mergeEditor.change.background\",\n\t\t\"The background color for changes.\",\n\t),\n);\n\nexport const diffWord = registerColor(\n\t\"mergeEditor.change.word.background\",\n\t{\n\t\tdark: \"#9ccc2c33\",\n\t\tlight: \"#9ccc2c66\",\n\t\thcDark: \"#9ccc2c33\",\n\t\thcLight: \"#9ccc2c66\",\n\t},\n\tlocalize(\n\t\t\"mergeEditor.change.word.background\",\n\t\t\"The background color for word changes.\",\n\t),\n);\n\nexport const diffBase = registerColor(\n\t\"mergeEditor.changeBase.background\",\n\t{\n\t\tdark: \"#4B1818FF\",\n\t\tlight: \"#FFCCCCFF\",\n\t\thcDark: \"#4B1818FF\",\n\t\thcLight: \"#FFCCCCFF\",\n\t},\n\tlocalize(\n\t\t\"mergeEditor.changeBase.background\",\n\t\t\"The background color for changes in base.\",\n\t),\n);\n\nexport const diffWordBase = registerColor(\n\t\"mergeEditor.changeBase.word.background\",\n\t{\n\t\tdark: \"#6F1313FF\",\n\t\tlight: \"#FFA3A3FF\",\n\t\thcDark: \"#6F1313FF\",\n\t\thcLight: \"#FFA3A3FF\",\n\t},\n\tlocalize(\n\t\t\"mergeEditor.changeBase.word.background\",\n\t\t\"The background color for word changes in base.\",\n\t),\n);\n\nexport const conflictBorderUnhandledUnfocused = registerColor(\n\t\"mergeEditor.conflict.unhandledUnfocused.border\",\n\t{\n\t\tdark: \"#ffa6007a\",\n\t\tlight: \"#ffa600FF\",\n\t\thcDark: \"#ffa6007a\",\n\t\thcLight: \"#ffa6007a\",\n\t},\n\tlocalize(\n\t\t\"mergeEditor.conflict.unhandledUnfocused.border\",\n\t\t\"The border color of unhandled unfocused conflicts.\",\n\t),\n);\n\nexport const conflictBorderUnhandledFocused = registerColor(\n\t\"mergeEditor.conflict.unhandledFocused.border\",\n\t\"#ffa600\",\n\tlocalize(\n\t\t\"mergeEditor.conflict.unhandledFocused.border\",\n\t\t\"The border color of unhandled focused conflicts.\",\n\t),\n);\n\nexport const conflictBorderHandledUnfocused = registerColor(\n\t\"mergeEditor.conflict.handledUnfocused.border\",\n\t\"#86868649\",\n\tlocalize(\n\t\t\"mergeEditor.conflict.handledUnfocused.border\",\n\t\t\"The border color of handled unfocused conflicts.\",\n\t),\n);\n\nexport const conflictBorderHandledFocused = registerColor(\n\t\"mergeEditor.conflict.handledFocused.border\",\n\t\"#c1c1c1cc\",\n\tlocalize(\n\t\t\"mergeEditor.conflict.handledFocused.border\",\n\t\t\"The border color of handled focused conflicts.\",\n\t),\n);\n\nexport const handledConflictMinimapOverViewRulerColor = registerColor(\n\t\"mergeEditor.conflict.handled.minimapOverViewRuler\",\n\t\"#adaca8ee\",\n\tlocalize(\n\t\t\"mergeEditor.conflict.handled.minimapOverViewRuler\",\n\t\t\"The foreground color for changes in input 1.\",\n\t),\n);\n\nexport const unhandledConflictMinimapOverViewRulerColor = registerColor(\n\t\"mergeEditor.conflict.unhandled.minimapOverViewRuler\",\n\t\"#fcba03FF\",\n\tlocalize(\n\t\t\"mergeEditor.conflict.unhandled.minimapOverViewRuler\",\n\t\t\"The foreground color for changes in input 1.\",\n\t),\n);\n\nexport const conflictingLinesBackground = registerColor(\n\t\"mergeEditor.conflictingLines.background\",\n\t\"#ffea0047\",\n\tlocalize(\n\t\t\"mergeEditor.conflictingLines.background\",\n\t\t'The background of the \"Conflicting Lines\" text.',\n\t),\n);\n\nconst contentTransparency = 0.4;\nexport const conflictInput1Background = registerColor(\n\t\"mergeEditor.conflict.input1.background\",\n\ttransparent(mergeCurrentHeaderBackground, contentTransparency),\n\tlocalize(\n\t\t\"mergeEditor.conflict.input1.background\",\n\t\t\"The background color of decorations in input 1.\",\n\t),\n);\n\nexport const conflictInput2Background = registerColor(\n\t\"mergeEditor.conflict.input2.background\",\n\ttransparent(mergeIncomingHeaderBackground, contentTransparency),\n\tlocalize(\n\t\t\"mergeEditor.conflict.input2.background\",\n\t\t\"The background color of decorations in input 2.\",\n\t),\n);\n"],
  "mappings": "AAKA,SAAS,gBAAgB;AACzB;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAEA,MAAM,OAAO;AAAA,EACnB;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AAEO,MAAM,WAAW;AAAA,EACvB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,SAAS;AAAA,EACV;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AAEO,MAAM,WAAW;AAAA,EACvB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,SAAS;AAAA,EACV;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AAEO,MAAM,eAAe;AAAA,EAC3B;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,SAAS;AAAA,EACV;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AAEO,MAAM,mCAAmC;AAAA,EAC/C;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,SAAS;AAAA,EACV;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AAEO,MAAM,iCAAiC;AAAA,EAC7C;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AAEO,MAAM,iCAAiC;AAAA,EAC7C;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AAEO,MAAM,+BAA+B;AAAA,EAC3C;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AAEO,MAAM,2CAA2C;AAAA,EACvD;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AAEO,MAAM,6CAA6C;AAAA,EACzD;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AAEO,MAAM,6BAA6B;AAAA,EACzC;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AAEA,MAAM,sBAAsB;AACrB,MAAM,2BAA2B;AAAA,EACvC;AAAA,EACA,YAAY,8BAA8B,mBAAmB;AAAA,EAC7D;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AAEO,MAAM,2BAA2B;AAAA,EACvC;AAAA,EACA,YAAY,+BAA+B,mBAAmB;AAAA,EAC9D;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;",
  "names": []
}
