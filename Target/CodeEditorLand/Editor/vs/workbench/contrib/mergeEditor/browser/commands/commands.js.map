{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/mergeEditor/browser/commands/commands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from '../../../../../base/common/codicons.js';\nimport { basename } from '../../../../../base/common/resources.js';\nimport { URI, UriComponents } from '../../../../../base/common/uri.js';\nimport { localize, localize2 } from '../../../../../nls.js';\nimport { ILocalizedString } from '../../../../../platform/action/common/action.js';\nimport { Action2, IAction2Options, MenuId } from '../../../../../platform/actions/common/actions.js';\nimport { ContextKeyExpr } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IDialogService } from '../../../../../platform/dialogs/common/dialogs.js';\nimport { ITextEditorOptions } from '../../../../../platform/editor/common/editor.js';\nimport { ServicesAccessor } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { IOpenerService } from '../../../../../platform/opener/common/opener.js';\nimport { IStorageService, StorageScope } from '../../../../../platform/storage/common/storage.js';\nimport { IEditorIdentifier, IResourceMergeEditorInput } from '../../../../common/editor.js';\nimport { MergeEditorInput, MergeEditorInputData } from '../mergeEditorInput.js';\nimport { IMergeEditorInputModel } from '../mergeEditorInputModel.js';\nimport { MergeEditor } from '../view/mergeEditor.js';\nimport { MergeEditorViewModel } from '../view/viewModel.js';\nimport { ctxIsMergeEditor, ctxMergeEditorLayout, ctxMergeEditorShowBase, ctxMergeEditorShowBaseAtTop, ctxMergeEditorShowNonConflictingChanges, StorageCloseWithConflicts } from '../../common/mergeEditor.js';\nimport { IEditorService } from '../../../../services/editor/common/editorService.js';\n\nabstract class MergeEditorAction extends Action2 {\n\tconstructor(desc: Readonly<IAction2Options>) {\n\t\tsuper(desc);\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst { activeEditorPane } = accessor.get(IEditorService);\n\t\tif (activeEditorPane instanceof MergeEditor) {\n\t\t\tconst vm = activeEditorPane.viewModel.get();\n\t\t\tif (!vm) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.runWithViewModel(vm, accessor);\n\t\t}\n\t}\n\n\tabstract runWithViewModel(viewModel: MergeEditorViewModel, accessor: ServicesAccessor): void;\n}\n\ninterface MergeEditorAction2Args {\n\tinputModel: IMergeEditorInputModel;\n\tviewModel: MergeEditorViewModel;\n\tinput: MergeEditorInput;\n\teditorIdentifier: IEditorIdentifier;\n}\n\nabstract class MergeEditorAction2 extends Action2 {\n\tconstructor(desc: Readonly<IAction2Options>) {\n\t\tsuper(desc);\n\t}\n\n\toverride run(accessor: ServicesAccessor, ...args: any[]): void {\n\t\tconst { activeEditorPane } = accessor.get(IEditorService);\n\t\tif (activeEditorPane instanceof MergeEditor) {\n\t\t\tconst vm = activeEditorPane.viewModel.get();\n\t\t\tif (!vm) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn this.runWithMergeEditor({\n\t\t\t\tviewModel: vm,\n\t\t\t\tinputModel: activeEditorPane.inputModel.get()!,\n\t\t\t\tinput: activeEditorPane.input as MergeEditorInput,\n\t\t\t\teditorIdentifier: {\n\t\t\t\t\teditor: activeEditorPane.input,\n\t\t\t\t\tgroupId: activeEditorPane.group.id,\n\t\t\t\t}\n\t\t\t}, accessor, ...args) as any;\n\t\t}\n\t}\n\n\tabstract runWithMergeEditor(context: MergeEditorAction2Args, accessor: ServicesAccessor, ...args: any[]): unknown;\n}\n\nexport class OpenMergeEditor extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: '_open.mergeEditor',\n\t\t\ttitle: localize2('title', 'Open Merge Editor'),\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor, ...args: unknown[]): void {\n\t\tconst validatedArgs = IRelaxedOpenArgs.validate(args[0]);\n\n\t\tconst input: IResourceMergeEditorInput = {\n\t\t\tbase: { resource: validatedArgs.base },\n\t\t\tinput1: { resource: validatedArgs.input1.uri, label: validatedArgs.input1.title, description: validatedArgs.input1.description, detail: validatedArgs.input1.detail },\n\t\t\tinput2: { resource: validatedArgs.input2.uri, label: validatedArgs.input2.title, description: validatedArgs.input2.description, detail: validatedArgs.input2.detail },\n\t\t\tresult: { resource: validatedArgs.output },\n\t\t\toptions: { preserveFocus: true }\n\t\t};\n\t\taccessor.get(IEditorService).openEditor(input);\n\t}\n}\n\nnamespace IRelaxedOpenArgs {\n\texport function validate(obj: unknown): {\n\t\tbase: URI;\n\t\tinput1: MergeEditorInputData;\n\t\tinput2: MergeEditorInputData;\n\t\toutput: URI;\n\t} {\n\t\tif (!obj || typeof obj !== 'object') {\n\t\t\tthrow new TypeError('invalid argument');\n\t\t}\n\n\t\tconst o = obj as IRelaxedOpenArgs;\n\t\tconst base = toUri(o.base);\n\t\tconst output = toUri(o.output);\n\t\tconst input1 = toInputData(o.input1);\n\t\tconst input2 = toInputData(o.input2);\n\t\treturn { base, input1, input2, output };\n\t}\n\n\tfunction toInputData(obj: unknown): MergeEditorInputData {\n\t\tif (typeof obj === 'string') {\n\t\t\treturn new MergeEditorInputData(URI.parse(obj, true), undefined, undefined, undefined);\n\t\t}\n\t\tif (!obj || typeof obj !== 'object') {\n\t\t\tthrow new TypeError('invalid argument');\n\t\t}\n\n\t\tif (isUriComponents(obj)) {\n\t\t\treturn new MergeEditorInputData(URI.revive(obj), undefined, undefined, undefined);\n\t\t}\n\n\t\tconst o = obj as IRelaxedInputData;\n\t\tconst title = o.title;\n\t\tconst uri = toUri(o.uri);\n\t\tconst detail = o.detail;\n\t\tconst description = o.description;\n\t\treturn new MergeEditorInputData(uri, title, detail, description);\n\t}\n\n\tfunction toUri(obj: unknown): URI {\n\t\tif (typeof obj === 'string') {\n\t\t\treturn URI.parse(obj, true);\n\t\t} else if (obj && typeof obj === 'object') {\n\t\t\treturn URI.revive(<UriComponents>obj);\n\t\t}\n\t\tthrow new TypeError('invalid argument');\n\t}\n\n\tfunction isUriComponents(obj: unknown): obj is UriComponents {\n\t\tif (!obj || typeof obj !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\tconst o = obj as UriComponents;\n\t\treturn typeof o.scheme === 'string'\n\t\t\t&& typeof o.authority === 'string'\n\t\t\t&& typeof o.path === 'string'\n\t\t\t&& typeof o.query === 'string'\n\t\t\t&& typeof o.fragment === 'string';\n\t}\n}\n\ntype IRelaxedInputData = { uri: UriComponents; title?: string; detail?: string; description?: string };\n\ntype IRelaxedOpenArgs = {\n\tbase: UriComponents | string;\n\tinput1: IRelaxedInputData | string;\n\tinput2: IRelaxedInputData | string;\n\toutput: UriComponents | string;\n};\n\nexport class SetMixedLayout extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'merge.mixedLayout',\n\t\t\ttitle: localize2('layout.mixed', \"Mixed Layout\"),\n\t\t\ttoggled: ctxMergeEditorLayout.isEqualTo('mixed'),\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\twhen: ctxIsMergeEditor,\n\t\t\t\t\tgroup: '1_merge',\n\t\t\t\t\torder: 9,\n\t\t\t\t},\n\t\t\t],\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst { activeEditorPane } = accessor.get(IEditorService);\n\t\tif (activeEditorPane instanceof MergeEditor) {\n\t\t\tactiveEditorPane.setLayoutKind('mixed');\n\t\t}\n\t}\n}\n\nexport class SetColumnLayout extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'merge.columnLayout',\n\t\t\ttitle: localize2('layout.column', 'Column Layout'),\n\t\t\ttoggled: ctxMergeEditorLayout.isEqualTo('columns'),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\twhen: ctxIsMergeEditor,\n\t\t\t\tgroup: '1_merge',\n\t\t\t\torder: 10,\n\t\t\t}],\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst { activeEditorPane } = accessor.get(IEditorService);\n\t\tif (activeEditorPane instanceof MergeEditor) {\n\t\t\tactiveEditorPane.setLayoutKind('columns');\n\t\t}\n\t}\n}\n\nexport class ShowNonConflictingChanges extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'merge.showNonConflictingChanges',\n\t\t\ttitle: localize2('showNonConflictingChanges', \"Show Non-Conflicting Changes\"),\n\t\t\ttoggled: ctxMergeEditorShowNonConflictingChanges.isEqualTo(true),\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\twhen: ctxIsMergeEditor,\n\t\t\t\t\tgroup: '3_merge',\n\t\t\t\t\torder: 9,\n\t\t\t\t},\n\t\t\t],\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst { activeEditorPane } = accessor.get(IEditorService);\n\t\tif (activeEditorPane instanceof MergeEditor) {\n\t\t\tactiveEditorPane.toggleShowNonConflictingChanges();\n\t\t}\n\t}\n}\n\nexport class ShowHideBase extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'merge.showBase',\n\t\t\ttitle: localize2('layout.showBase', \"Show Base\"),\n\t\t\ttoggled: ctxMergeEditorShowBase.isEqualTo(true),\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(ctxIsMergeEditor, ctxMergeEditorLayout.isEqualTo('columns')),\n\t\t\t\t\tgroup: '2_merge',\n\t\t\t\t\torder: 9,\n\t\t\t\t},\n\t\t\t]\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst { activeEditorPane } = accessor.get(IEditorService);\n\t\tif (activeEditorPane instanceof MergeEditor) {\n\t\t\tactiveEditorPane.toggleBase();\n\t\t}\n\t}\n}\n\nexport class ShowHideTopBase extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'merge.showBaseTop',\n\t\t\ttitle: localize2('layout.showBaseTop', \"Show Base Top\"),\n\t\t\ttoggled: ContextKeyExpr.and(ctxMergeEditorShowBase, ctxMergeEditorShowBaseAtTop),\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(ctxIsMergeEditor, ctxMergeEditorLayout.isEqualTo('mixed')),\n\t\t\t\t\tgroup: '2_merge',\n\t\t\t\t\torder: 10,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst { activeEditorPane } = accessor.get(IEditorService);\n\t\tif (activeEditorPane instanceof MergeEditor) {\n\t\t\tactiveEditorPane.toggleShowBaseTop();\n\t\t}\n\t}\n}\n\nexport class ShowHideCenterBase extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'merge.showBaseCenter',\n\t\t\ttitle: localize2('layout.showBaseCenter', \"Show Base Center\"),\n\t\t\ttoggled: ContextKeyExpr.and(ctxMergeEditorShowBase, ctxMergeEditorShowBaseAtTop.negate()),\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(ctxIsMergeEditor, ctxMergeEditorLayout.isEqualTo('mixed')),\n\t\t\t\t\tgroup: '2_merge',\n\t\t\t\t\torder: 11,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst { activeEditorPane } = accessor.get(IEditorService);\n\t\tif (activeEditorPane instanceof MergeEditor) {\n\t\t\tactiveEditorPane.toggleShowBaseCenter();\n\t\t}\n\t}\n}\n\nconst mergeEditorCategory: ILocalizedString = localize2('mergeEditor', \"Merge Editor\");\n\nexport class OpenResultResource extends MergeEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'merge.openResult',\n\t\t\ticon: Codicon.goToFile,\n\t\t\ttitle: localize2('openfile', \"Open File\"),\n\t\t\tcategory: mergeEditorCategory,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\twhen: ctxIsMergeEditor,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 1,\n\t\t\t}],\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t});\n\t}\n\n\toverride runWithViewModel(viewModel: MergeEditorViewModel, accessor: ServicesAccessor): void {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\teditorService.openEditor({ resource: viewModel.model.resultTextModel.uri });\n\t}\n}\n\nexport class GoToNextUnhandledConflict extends MergeEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'merge.goToNextUnhandledConflict',\n\t\t\tcategory: mergeEditorCategory,\n\t\t\ttitle: localize2('merge.goToNextUnhandledConflict', \"Go to Next Unhandled Conflict\"),\n\t\t\ticon: Codicon.arrowDown,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\twhen: ctxIsMergeEditor,\n\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\torder: 3\n\t\t\t\t},\n\t\t\t],\n\t\t\tf1: true,\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t});\n\t}\n\n\toverride runWithViewModel(viewModel: MergeEditorViewModel): void {\n\t\tviewModel.model.telemetry.reportNavigationToNextConflict();\n\t\tviewModel.goToNextModifiedBaseRange(r => !viewModel.model.isHandled(r).get());\n\t}\n}\n\nexport class GoToPreviousUnhandledConflict extends MergeEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'merge.goToPreviousUnhandledConflict',\n\t\t\tcategory: mergeEditorCategory,\n\t\t\ttitle: localize2('merge.goToPreviousUnhandledConflict', \"Go to Previous Unhandled Conflict\"),\n\t\t\ticon: Codicon.arrowUp,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\twhen: ctxIsMergeEditor,\n\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\torder: 2\n\t\t\t\t},\n\t\t\t],\n\t\t\tf1: true,\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t});\n\t}\n\n\toverride runWithViewModel(viewModel: MergeEditorViewModel): void {\n\t\tviewModel.model.telemetry.reportNavigationToPreviousConflict();\n\t\tviewModel.goToPreviousModifiedBaseRange(r => !viewModel.model.isHandled(r).get());\n\t}\n}\n\nexport class ToggleActiveConflictInput1 extends MergeEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'merge.toggleActiveConflictInput1',\n\t\t\tcategory: mergeEditorCategory,\n\t\t\ttitle: localize2('merge.toggleCurrentConflictFromLeft', \"Toggle Current Conflict from Left\"),\n\t\t\tf1: true,\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t});\n\t}\n\n\toverride runWithViewModel(viewModel: MergeEditorViewModel): void {\n\t\tviewModel.toggleActiveConflict(1);\n\t}\n}\n\nexport class ToggleActiveConflictInput2 extends MergeEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'merge.toggleActiveConflictInput2',\n\t\t\tcategory: mergeEditorCategory,\n\t\t\ttitle: localize2('merge.toggleCurrentConflictFromRight', \"Toggle Current Conflict from Right\"),\n\t\t\tf1: true,\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t});\n\t}\n\n\toverride runWithViewModel(viewModel: MergeEditorViewModel): void {\n\t\tviewModel.toggleActiveConflict(2);\n\t}\n}\n\nexport class CompareInput1WithBaseCommand extends MergeEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'mergeEditor.compareInput1WithBase',\n\t\t\tcategory: mergeEditorCategory,\n\t\t\ttitle: localize2('mergeEditor.compareInput1WithBase', \"Compare Input 1 With Base\"),\n\t\t\tshortTitle: localize('mergeEditor.compareWithBase', 'Compare With Base'),\n\t\t\tf1: true,\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t\tmenu: { id: MenuId.MergeInput1Toolbar, group: 'primary' },\n\t\t\ticon: Codicon.compareChanges,\n\t\t});\n\t}\n\n\toverride runWithViewModel(viewModel: MergeEditorViewModel, accessor: ServicesAccessor): void {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tmergeEditorCompare(viewModel, editorService, 1);\n\t}\n}\n\nexport class CompareInput2WithBaseCommand extends MergeEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'mergeEditor.compareInput2WithBase',\n\t\t\tcategory: mergeEditorCategory,\n\t\t\ttitle: localize2('mergeEditor.compareInput2WithBase', \"Compare Input 2 With Base\"),\n\t\t\tshortTitle: localize('mergeEditor.compareWithBase', 'Compare With Base'),\n\t\t\tf1: true,\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t\tmenu: { id: MenuId.MergeInput2Toolbar, group: 'primary' },\n\t\t\ticon: Codicon.compareChanges,\n\t\t});\n\t}\n\n\toverride runWithViewModel(viewModel: MergeEditorViewModel, accessor: ServicesAccessor): void {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tmergeEditorCompare(viewModel, editorService, 2);\n\t}\n}\n\nasync function mergeEditorCompare(viewModel: MergeEditorViewModel, editorService: IEditorService, inputNumber: 1 | 2) {\n\n\teditorService.openEditor(editorService.activeEditor!, { pinned: true });\n\n\tconst model = viewModel.model;\n\tconst base = model.base;\n\tconst input = inputNumber === 1 ? viewModel.inputCodeEditorView1.editor : viewModel.inputCodeEditorView2.editor;\n\n\tconst lineNumber = input.getPosition()!.lineNumber;\n\tawait editorService.openEditor({\n\t\toriginal: { resource: base.uri },\n\t\tmodified: { resource: input.getModel()!.uri },\n\t\toptions: {\n\t\t\tselection: {\n\t\t\t\tstartLineNumber: lineNumber,\n\t\t\t\tstartColumn: 1,\n\t\t\t},\n\t\t\trevealIfOpened: true,\n\t\t\trevealIfVisible: true,\n\t\t} satisfies ITextEditorOptions\n\t});\n}\n\nexport class OpenBaseFile extends MergeEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'merge.openBaseEditor',\n\t\t\tcategory: mergeEditorCategory,\n\t\t\ttitle: localize2('merge.openBaseEditor', \"Open Base File\"),\n\t\t\tf1: true,\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t});\n\t}\n\n\toverride runWithViewModel(viewModel: MergeEditorViewModel, accessor: ServicesAccessor): void {\n\t\tconst openerService = accessor.get(IOpenerService);\n\t\topenerService.open(viewModel.model.base.uri);\n\t}\n}\n\nexport class AcceptAllInput1 extends MergeEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'merge.acceptAllInput1',\n\t\t\tcategory: mergeEditorCategory,\n\t\t\ttitle: localize2('merge.acceptAllInput1', \"Accept All Changes from Left\"),\n\t\t\tf1: true,\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t\tmenu: { id: MenuId.MergeInput1Toolbar, group: 'primary' },\n\t\t\ticon: Codicon.checkAll,\n\t\t});\n\t}\n\n\toverride runWithViewModel(viewModel: MergeEditorViewModel): void {\n\t\tviewModel.acceptAll(1);\n\t}\n}\n\nexport class AcceptAllInput2 extends MergeEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'merge.acceptAllInput2',\n\t\t\tcategory: mergeEditorCategory,\n\t\t\ttitle: localize2('merge.acceptAllInput2', \"Accept All Changes from Right\"),\n\t\t\tf1: true,\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t\tmenu: { id: MenuId.MergeInput2Toolbar, group: 'primary' },\n\t\t\ticon: Codicon.checkAll,\n\t\t});\n\t}\n\n\toverride runWithViewModel(viewModel: MergeEditorViewModel): void {\n\t\tviewModel.acceptAll(2);\n\t}\n}\n\nexport class ResetToBaseAndAutoMergeCommand extends MergeEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'mergeEditor.resetResultToBaseAndAutoMerge',\n\t\t\tcategory: mergeEditorCategory,\n\t\t\ttitle: localize2('mergeEditor.resetResultToBaseAndAutoMerge', \"Reset Result\"),\n\t\t\tshortTitle: localize('mergeEditor.resetResultToBaseAndAutoMerge.short', 'Reset'),\n\t\t\tf1: true,\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t\tmenu: { id: MenuId.MergeInputResultToolbar, group: 'primary' },\n\t\t\ticon: Codicon.discard,\n\t\t});\n\t}\n\n\toverride runWithViewModel(viewModel: MergeEditorViewModel, accessor: ServicesAccessor): void {\n\t\tviewModel.model.reset();\n\t}\n}\n\nexport class ResetCloseWithConflictsChoice extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'mergeEditor.resetCloseWithConflictsChoice',\n\t\t\tcategory: mergeEditorCategory,\n\t\t\ttitle: localize2('mergeEditor.resetChoice', \"Reset Choice for \\'Close with Conflicts\\'\"),\n\t\t\tf1: true,\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(IStorageService).remove(StorageCloseWithConflicts, StorageScope.PROFILE);\n\t}\n}\n\n// this is an API command\nexport class AcceptMerge extends MergeEditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'mergeEditor.acceptMerge',\n\t\t\tcategory: mergeEditorCategory,\n\t\t\ttitle: localize2('mergeEditor.acceptMerge', \"Complete Merge\"),\n\t\t\tf1: false,\n\t\t\tprecondition: ctxIsMergeEditor\n\t\t});\n\t}\n\n\toverride async runWithMergeEditor({ inputModel, editorIdentifier, viewModel }: MergeEditorAction2Args, accessor: ServicesAccessor) {\n\t\tconst dialogService = accessor.get(IDialogService);\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tif (viewModel.model.unhandledConflictsCount.get() > 0) {\n\t\t\tconst { confirmed } = await dialogService.confirm({\n\t\t\t\tmessage: localize('mergeEditor.acceptMerge.unhandledConflicts.message', \"Do you want to complete the merge of {0}?\", basename(inputModel.resultUri)),\n\t\t\t\tdetail: localize('mergeEditor.acceptMerge.unhandledConflicts.detail', \"The file contains unhandled conflicts.\"),\n\t\t\t\tprimaryButton: localize({ key: 'mergeEditor.acceptMerge.unhandledConflicts.accept', comment: ['&& denotes a mnemonic'] }, \"&&Complete with Conflicts\")\n\t\t\t});\n\n\t\t\tif (!confirmed) {\n\t\t\t\treturn {\n\t\t\t\t\tsuccessful: false\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tawait inputModel.accept();\n\t\tawait editorService.closeEditor(editorIdentifier);\n\n\t\treturn {\n\t\t\tsuccessful: true\n\t\t};\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,eAAe;AACxB,SAAS,gBAAgB;AACzB,SAAS,KAAK,qBAAqB;AACnC,SAAS,UAAU,iBAAiB;AACpC,SAAS,wBAAwB;AACjC,SAAS,SAAS,iBAAiB,cAAc;AACjD,SAAS,sBAAsB;AAC/B,SAAS,sBAAsB;AAC/B,SAAS,0BAA0B;AACnC,SAAS,wBAAwB;AACjC,SAAS,sBAAsB;AAC/B,SAAS,iBAAiB,oBAAoB;AAC9C,SAAS,mBAAmB,iCAAiC;AAC7D,SAAS,kBAAkB,4BAA4B;AACvD,SAAS,8BAA8B;AACvC,SAAS,mBAAmB;AAC5B,SAAS,4BAA4B;AACrC,SAAS,kBAAkB,sBAAsB,wBAAwB,6BAA6B,yCAAyC,iCAAiC;AAChL,SAAS,sBAAsB;AAE/B,MAAe,0BAA0B,QAAQ;AAAA,EAzBjD,OAyBiD;AAAA;AAAA;AAAA,EAChD,YAAY,MAAiC;AAC5C,UAAM,IAAI;AAAA,EACX;AAAA,EAEA,IAAI,UAAkC;AACrC,UAAM,EAAE,iBAAiB,IAAI,SAAS,IAAI,cAAc;AACxD,QAAI,4BAA4B,aAAa;AAC5C,YAAM,KAAK,iBAAiB,UAAU,IAAI;AAC1C,UAAI,CAAC,IAAI;AACR;AAAA,MACD;AACA,WAAK,iBAAiB,IAAI,QAAQ;AAAA,IACnC;AAAA,EACD;AAGD;AASA,MAAe,2BAA2B,QAAQ;AAAA,EAnDlD,OAmDkD;AAAA;AAAA;AAAA,EACjD,YAAY,MAAiC;AAC5C,UAAM,IAAI;AAAA,EACX;AAAA,EAES,IAAI,aAA+B,MAAmB;AAC9D,UAAM,EAAE,iBAAiB,IAAI,SAAS,IAAI,cAAc;AACxD,QAAI,4BAA4B,aAAa;AAC5C,YAAM,KAAK,iBAAiB,UAAU,IAAI;AAC1C,UAAI,CAAC,IAAI;AACR;AAAA,MACD;AAEA,aAAO,KAAK,mBAAmB;AAAA,QAC9B,WAAW;AAAA,QACX,YAAY,iBAAiB,WAAW,IAAI;AAAA,QAC5C,OAAO,iBAAiB;AAAA,QACxB,kBAAkB;AAAA,UACjB,QAAQ,iBAAiB;AAAA,UACzB,SAAS,iBAAiB,MAAM;AAAA,QACjC;AAAA,MACD,GAAG,UAAU,GAAG,IAAI;AAAA,IACrB;AAAA,EACD;AAGD;AAEO,MAAM,wBAAwB,QAAQ;AAAA,EA/E7C,OA+E6C;AAAA;AAAA;AAAA,EAC5C,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,UAAU,SAAS,mBAAmB;AAAA,IAC9C,CAAC;AAAA,EACF;AAAA,EACA,IAAI,aAA+B,MAAuB;AACzD,UAAM,gBAAgB,iBAAiB,SAAS,KAAK,CAAC,CAAC;AAEvD,UAAM,QAAmC;AAAA,MACxC,MAAM,EAAE,UAAU,cAAc,KAAK;AAAA,MACrC,QAAQ,EAAE,UAAU,cAAc,OAAO,KAAK,OAAO,cAAc,OAAO,OAAO,aAAa,cAAc,OAAO,aAAa,QAAQ,cAAc,OAAO,OAAO;AAAA,MACpK,QAAQ,EAAE,UAAU,cAAc,OAAO,KAAK,OAAO,cAAc,OAAO,OAAO,aAAa,cAAc,OAAO,aAAa,QAAQ,cAAc,OAAO,OAAO;AAAA,MACpK,QAAQ,EAAE,UAAU,cAAc,OAAO;AAAA,MACzC,SAAS,EAAE,eAAe,KAAK;AAAA,IAChC;AACA,aAAS,IAAI,cAAc,EAAE,WAAW,KAAK;AAAA,EAC9C;AACD;AAEA,IAAU;AAAA,CAAV,CAAUA,sBAAV;AACQ,WAAS,SAAS,KAKvB;AACD,QAAI,CAAC,OAAO,OAAO,QAAQ,UAAU;AACpC,YAAM,IAAI,UAAU,kBAAkB;AAAA,IACvC;AAEA,UAAM,IAAI;AACV,UAAM,OAAO,MAAM,EAAE,IAAI;AACzB,UAAM,SAAS,MAAM,EAAE,MAAM;AAC7B,UAAM,SAAS,YAAY,EAAE,MAAM;AACnC,UAAM,SAAS,YAAY,EAAE,MAAM;AACnC,WAAO,EAAE,MAAM,QAAQ,QAAQ,OAAO;AAAA,EACvC;AAhBO,EAAAA,kBAAS;AAAA;AAkBhB,WAAS,YAAY,KAAoC;AACxD,QAAI,OAAO,QAAQ,UAAU;AAC5B,aAAO,IAAI,qBAAqB,IAAI,MAAM,KAAK,IAAI,GAAG,QAAW,QAAW,MAAS;AAAA,IACtF;AACA,QAAI,CAAC,OAAO,OAAO,QAAQ,UAAU;AACpC,YAAM,IAAI,UAAU,kBAAkB;AAAA,IACvC;AAEA,QAAI,gBAAgB,GAAG,GAAG;AACzB,aAAO,IAAI,qBAAqB,IAAI,OAAO,GAAG,GAAG,QAAW,QAAW,MAAS;AAAA,IACjF;AAEA,UAAM,IAAI;AACV,UAAM,QAAQ,EAAE;AAChB,UAAM,MAAM,MAAM,EAAE,GAAG;AACvB,UAAM,SAAS,EAAE;AACjB,UAAM,cAAc,EAAE;AACtB,WAAO,IAAI,qBAAqB,KAAK,OAAO,QAAQ,WAAW;AAAA,EAChE;AAlBS;AAoBT,WAAS,MAAM,KAAmB;AACjC,QAAI,OAAO,QAAQ,UAAU;AAC5B,aAAO,IAAI,MAAM,KAAK,IAAI;AAAA,IAC3B,WAAW,OAAO,OAAO,QAAQ,UAAU;AAC1C,aAAO,IAAI,OAAsB,GAAG;AAAA,IACrC;AACA,UAAM,IAAI,UAAU,kBAAkB;AAAA,EACvC;AAPS;AAST,WAAS,gBAAgB,KAAoC;AAC5D,QAAI,CAAC,OAAO,OAAO,QAAQ,UAAU;AACpC,aAAO;AAAA,IACR;AACA,UAAM,IAAI;AACV,WAAO,OAAO,EAAE,WAAW,YACvB,OAAO,EAAE,cAAc,YACvB,OAAO,EAAE,SAAS,YAClB,OAAO,EAAE,UAAU,YACnB,OAAO,EAAE,aAAa;AAAA,EAC3B;AAVS;AAAA,GAhDA;AAsEH,MAAM,uBAAuB,QAAQ;AAAA,EA1K5C,OA0K4C;AAAA;AAAA;AAAA,EAC3C,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,UAAU,gBAAgB,cAAc;AAAA,MAC/C,SAAS,qBAAqB,UAAU,OAAO;AAAA,MAC/C,MAAM;AAAA,QACL;AAAA,UACC,IAAI,OAAO;AAAA,UACX,MAAM;AAAA,UACN,OAAO;AAAA,UACP,OAAO;AAAA,QACR;AAAA,MACD;AAAA,MACA,cAAc;AAAA,IACf,CAAC;AAAA,EACF;AAAA,EAEA,IAAI,UAAkC;AACrC,UAAM,EAAE,iBAAiB,IAAI,SAAS,IAAI,cAAc;AACxD,QAAI,4BAA4B,aAAa;AAC5C,uBAAiB,cAAc,OAAO;AAAA,IACvC;AAAA,EACD;AACD;AAEO,MAAM,wBAAwB,QAAQ;AAAA,EApM7C,OAoM6C;AAAA;AAAA;AAAA,EAC5C,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,UAAU,iBAAiB,eAAe;AAAA,MACjD,SAAS,qBAAqB,UAAU,SAAS;AAAA,MACjD,MAAM,CAAC;AAAA,QACN,IAAI,OAAO;AAAA,QACX,MAAM;AAAA,QACN,OAAO;AAAA,QACP,OAAO;AAAA,MACR,CAAC;AAAA,MACD,cAAc;AAAA,IACf,CAAC;AAAA,EACF;AAAA,EAEA,IAAI,UAAkC;AACrC,UAAM,EAAE,iBAAiB,IAAI,SAAS,IAAI,cAAc;AACxD,QAAI,4BAA4B,aAAa;AAC5C,uBAAiB,cAAc,SAAS;AAAA,IACzC;AAAA,EACD;AACD;AAEO,MAAM,kCAAkC,QAAQ;AAAA,EA5NvD,OA4NuD;AAAA;AAAA;AAAA,EACtD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,UAAU,6BAA6B,8BAA8B;AAAA,MAC5E,SAAS,wCAAwC,UAAU,IAAI;AAAA,MAC/D,MAAM;AAAA,QACL;AAAA,UACC,IAAI,OAAO;AAAA,UACX,MAAM;AAAA,UACN,OAAO;AAAA,UACP,OAAO;AAAA,QACR;AAAA,MACD;AAAA,MACA,cAAc;AAAA,IACf,CAAC;AAAA,EACF;AAAA,EAEA,IAAI,UAAkC;AACrC,UAAM,EAAE,iBAAiB,IAAI,SAAS,IAAI,cAAc;AACxD,QAAI,4BAA4B,aAAa;AAC5C,uBAAiB,gCAAgC;AAAA,IAClD;AAAA,EACD;AACD;AAEO,MAAM,qBAAqB,QAAQ;AAAA,EAtP1C,OAsP0C;AAAA;AAAA;AAAA,EACzC,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,UAAU,mBAAmB,WAAW;AAAA,MAC/C,SAAS,uBAAuB,UAAU,IAAI;AAAA,MAC9C,MAAM;AAAA,QACL;AAAA,UACC,IAAI,OAAO;AAAA,UACX,MAAM,eAAe,IAAI,kBAAkB,qBAAqB,UAAU,SAAS,CAAC;AAAA,UACpF,OAAO;AAAA,UACP,OAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,IAAI,UAAkC;AACrC,UAAM,EAAE,iBAAiB,IAAI,SAAS,IAAI,cAAc;AACxD,QAAI,4BAA4B,aAAa;AAC5C,uBAAiB,WAAW;AAAA,IAC7B;AAAA,EACD;AACD;AAEO,MAAM,wBAAwB,QAAQ;AAAA,EA/Q7C,OA+Q6C;AAAA;AAAA;AAAA,EAC5C,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,UAAU,sBAAsB,eAAe;AAAA,MACtD,SAAS,eAAe,IAAI,wBAAwB,2BAA2B;AAAA,MAC/E,MAAM;AAAA,QACL;AAAA,UACC,IAAI,OAAO;AAAA,UACX,MAAM,eAAe,IAAI,kBAAkB,qBAAqB,UAAU,OAAO,CAAC;AAAA,UAClF,OAAO;AAAA,UACP,OAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,IAAI,UAAkC;AACrC,UAAM,EAAE,iBAAiB,IAAI,SAAS,IAAI,cAAc;AACxD,QAAI,4BAA4B,aAAa;AAC5C,uBAAiB,kBAAkB;AAAA,IACpC;AAAA,EACD;AACD;AAEO,MAAM,2BAA2B,QAAQ;AAAA,EAxShD,OAwSgD;AAAA;AAAA;AAAA,EAC/C,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,UAAU,yBAAyB,kBAAkB;AAAA,MAC5D,SAAS,eAAe,IAAI,wBAAwB,4BAA4B,OAAO,CAAC;AAAA,MACxF,MAAM;AAAA,QACL;AAAA,UACC,IAAI,OAAO;AAAA,UACX,MAAM,eAAe,IAAI,kBAAkB,qBAAqB,UAAU,OAAO,CAAC;AAAA,UAClF,OAAO;AAAA,UACP,OAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,IAAI,UAAkC;AACrC,UAAM,EAAE,iBAAiB,IAAI,SAAS,IAAI,cAAc;AACxD,QAAI,4BAA4B,aAAa;AAC5C,uBAAiB,qBAAqB;AAAA,IACvC;AAAA,EACD;AACD;AAEA,MAAM,sBAAwC,UAAU,eAAe,cAAc;AAE9E,MAAM,2BAA2B,kBAAkB;AAAA,EAnU1D,OAmU0D;AAAA;AAAA;AAAA,EACzD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,MAAM,QAAQ;AAAA,MACd,OAAO,UAAU,YAAY,WAAW;AAAA,MACxC,UAAU;AAAA,MACV,MAAM,CAAC;AAAA,QACN,IAAI,OAAO;AAAA,QACX,MAAM;AAAA,QACN,OAAO;AAAA,QACP,OAAO;AAAA,MACR,CAAC;AAAA,MACD,cAAc;AAAA,IACf,CAAC;AAAA,EACF;AAAA,EAES,iBAAiB,WAAiC,UAAkC;AAC5F,UAAM,gBAAgB,SAAS,IAAI,cAAc;AACjD,kBAAc,WAAW,EAAE,UAAU,UAAU,MAAM,gBAAgB,IAAI,CAAC;AAAA,EAC3E;AACD;AAEO,MAAM,kCAAkC,kBAAkB;AAAA,EA1VjE,OA0ViE;AAAA;AAAA;AAAA,EAChE,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,UAAU;AAAA,MACV,OAAO,UAAU,mCAAmC,+BAA+B;AAAA,MACnF,MAAM,QAAQ;AAAA,MACd,MAAM;AAAA,QACL;AAAA,UACC,IAAI,OAAO;AAAA,UACX,MAAM;AAAA,UACN,OAAO;AAAA,UACP,OAAO;AAAA,QACR;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,cAAc;AAAA,IACf,CAAC;AAAA,EACF;AAAA,EAES,iBAAiB,WAAuC;AAChE,cAAU,MAAM,UAAU,+BAA+B;AACzD,cAAU,0BAA0B,OAAK,CAAC,UAAU,MAAM,UAAU,CAAC,EAAE,IAAI,CAAC;AAAA,EAC7E;AACD;AAEO,MAAM,sCAAsC,kBAAkB;AAAA,EApXrE,OAoXqE;AAAA;AAAA;AAAA,EACpE,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,UAAU;AAAA,MACV,OAAO,UAAU,uCAAuC,mCAAmC;AAAA,MAC3F,MAAM,QAAQ;AAAA,MACd,MAAM;AAAA,QACL;AAAA,UACC,IAAI,OAAO;AAAA,UACX,MAAM;AAAA,UACN,OAAO;AAAA,UACP,OAAO;AAAA,QACR;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,cAAc;AAAA,IACf,CAAC;AAAA,EACF;AAAA,EAES,iBAAiB,WAAuC;AAChE,cAAU,MAAM,UAAU,mCAAmC;AAC7D,cAAU,8BAA8B,OAAK,CAAC,UAAU,MAAM,UAAU,CAAC,EAAE,IAAI,CAAC;AAAA,EACjF;AACD;AAEO,MAAM,mCAAmC,kBAAkB;AAAA,EA9YlE,OA8YkE;AAAA;AAAA;AAAA,EACjE,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,UAAU;AAAA,MACV,OAAO,UAAU,uCAAuC,mCAAmC;AAAA,MAC3F,IAAI;AAAA,MACJ,cAAc;AAAA,IACf,CAAC;AAAA,EACF;AAAA,EAES,iBAAiB,WAAuC;AAChE,cAAU,qBAAqB,CAAC;AAAA,EACjC;AACD;AAEO,MAAM,mCAAmC,kBAAkB;AAAA,EA9ZlE,OA8ZkE;AAAA;AAAA;AAAA,EACjE,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,UAAU;AAAA,MACV,OAAO,UAAU,wCAAwC,oCAAoC;AAAA,MAC7F,IAAI;AAAA,MACJ,cAAc;AAAA,IACf,CAAC;AAAA,EACF;AAAA,EAES,iBAAiB,WAAuC;AAChE,cAAU,qBAAqB,CAAC;AAAA,EACjC;AACD;AAEO,MAAM,qCAAqC,kBAAkB;AAAA,EA9apE,OA8aoE;AAAA;AAAA;AAAA,EACnE,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,UAAU;AAAA,MACV,OAAO,UAAU,qCAAqC,2BAA2B;AAAA,MACjF,YAAY,SAAS,+BAA+B,mBAAmB;AAAA,MACvE,IAAI;AAAA,MACJ,cAAc;AAAA,MACd,MAAM,EAAE,IAAI,OAAO,oBAAoB,OAAO,UAAU;AAAA,MACxD,MAAM,QAAQ;AAAA,IACf,CAAC;AAAA,EACF;AAAA,EAES,iBAAiB,WAAiC,UAAkC;AAC5F,UAAM,gBAAgB,SAAS,IAAI,cAAc;AACjD,uBAAmB,WAAW,eAAe,CAAC;AAAA,EAC/C;AACD;AAEO,MAAM,qCAAqC,kBAAkB;AAAA,EAlcpE,OAkcoE;AAAA;AAAA;AAAA,EACnE,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,UAAU;AAAA,MACV,OAAO,UAAU,qCAAqC,2BAA2B;AAAA,MACjF,YAAY,SAAS,+BAA+B,mBAAmB;AAAA,MACvE,IAAI;AAAA,MACJ,cAAc;AAAA,MACd,MAAM,EAAE,IAAI,OAAO,oBAAoB,OAAO,UAAU;AAAA,MACxD,MAAM,QAAQ;AAAA,IACf,CAAC;AAAA,EACF;AAAA,EAES,iBAAiB,WAAiC,UAAkC;AAC5F,UAAM,gBAAgB,SAAS,IAAI,cAAc;AACjD,uBAAmB,WAAW,eAAe,CAAC;AAAA,EAC/C;AACD;AAEA,eAAe,mBAAmB,WAAiC,eAA+B,aAAoB;AAErH,gBAAc,WAAW,cAAc,cAAe,EAAE,QAAQ,KAAK,CAAC;AAEtE,QAAM,QAAQ,UAAU;AACxB,QAAM,OAAO,MAAM;AACnB,QAAM,QAAQ,gBAAgB,IAAI,UAAU,qBAAqB,SAAS,UAAU,qBAAqB;AAEzG,QAAM,aAAa,MAAM,YAAY,EAAG;AACxC,QAAM,cAAc,WAAW;AAAA,IAC9B,UAAU,EAAE,UAAU,KAAK,IAAI;AAAA,IAC/B,UAAU,EAAE,UAAU,MAAM,SAAS,EAAG,IAAI;AAAA,IAC5C,SAAS;AAAA,MACR,WAAW;AAAA,QACV,iBAAiB;AAAA,QACjB,aAAa;AAAA,MACd;AAAA,MACA,gBAAgB;AAAA,MAChB,iBAAiB;AAAA,IAClB;AAAA,EACD,CAAC;AACF;AArBe;AAuBR,MAAM,qBAAqB,kBAAkB;AAAA,EA7epD,OA6eoD;AAAA;AAAA;AAAA,EACnD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,UAAU;AAAA,MACV,OAAO,UAAU,wBAAwB,gBAAgB;AAAA,MACzD,IAAI;AAAA,MACJ,cAAc;AAAA,IACf,CAAC;AAAA,EACF;AAAA,EAES,iBAAiB,WAAiC,UAAkC;AAC5F,UAAM,gBAAgB,SAAS,IAAI,cAAc;AACjD,kBAAc,KAAK,UAAU,MAAM,KAAK,GAAG;AAAA,EAC5C;AACD;AAEO,MAAM,wBAAwB,kBAAkB;AAAA,EA9fvD,OA8fuD;AAAA;AAAA;AAAA,EACtD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,UAAU;AAAA,MACV,OAAO,UAAU,yBAAyB,8BAA8B;AAAA,MACxE,IAAI;AAAA,MACJ,cAAc;AAAA,MACd,MAAM,EAAE,IAAI,OAAO,oBAAoB,OAAO,UAAU;AAAA,MACxD,MAAM,QAAQ;AAAA,IACf,CAAC;AAAA,EACF;AAAA,EAES,iBAAiB,WAAuC;AAChE,cAAU,UAAU,CAAC;AAAA,EACtB;AACD;AAEO,MAAM,wBAAwB,kBAAkB;AAAA,EAhhBvD,OAghBuD;AAAA;AAAA;AAAA,EACtD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,UAAU;AAAA,MACV,OAAO,UAAU,yBAAyB,+BAA+B;AAAA,MACzE,IAAI;AAAA,MACJ,cAAc;AAAA,MACd,MAAM,EAAE,IAAI,OAAO,oBAAoB,OAAO,UAAU;AAAA,MACxD,MAAM,QAAQ;AAAA,IACf,CAAC;AAAA,EACF;AAAA,EAES,iBAAiB,WAAuC;AAChE,cAAU,UAAU,CAAC;AAAA,EACtB;AACD;AAEO,MAAM,uCAAuC,kBAAkB;AAAA,EAliBtE,OAkiBsE;AAAA;AAAA;AAAA,EACrE,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,UAAU;AAAA,MACV,OAAO,UAAU,6CAA6C,cAAc;AAAA,MAC5E,YAAY,SAAS,mDAAmD,OAAO;AAAA,MAC/E,IAAI;AAAA,MACJ,cAAc;AAAA,MACd,MAAM,EAAE,IAAI,OAAO,yBAAyB,OAAO,UAAU;AAAA,MAC7D,MAAM,QAAQ;AAAA,IACf,CAAC;AAAA,EACF;AAAA,EAES,iBAAiB,WAAiC,UAAkC;AAC5F,cAAU,MAAM,MAAM;AAAA,EACvB;AACD;AAEO,MAAM,sCAAsC,QAAQ;AAAA,EArjB3D,OAqjB2D;AAAA;AAAA;AAAA,EAC1D,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,UAAU;AAAA,MACV,OAAO,UAAU,2BAA2B,yCAA2C;AAAA,MACvF,IAAI;AAAA,IACL,CAAC;AAAA,EACF;AAAA,EACA,IAAI,UAAkC;AACrC,aAAS,IAAI,eAAe,EAAE,OAAO,2BAA2B,aAAa,OAAO;AAAA,EACrF;AACD;AAGO,MAAM,oBAAoB,mBAAmB;AAAA,EApkBpD,OAokBoD;AAAA;AAAA;AAAA,EACnD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,UAAU;AAAA,MACV,OAAO,UAAU,2BAA2B,gBAAgB;AAAA,MAC5D,IAAI;AAAA,MACJ,cAAc;AAAA,IACf,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,mBAAmB,EAAE,YAAY,kBAAkB,UAAU,GAA2B,UAA4B;AAClI,UAAM,gBAAgB,SAAS,IAAI,cAAc;AACjD,UAAM,gBAAgB,SAAS,IAAI,cAAc;AAEjD,QAAI,UAAU,MAAM,wBAAwB,IAAI,IAAI,GAAG;AACtD,YAAM,EAAE,UAAU,IAAI,MAAM,cAAc,QAAQ;AAAA,QACjD,SAAS,SAAS,sDAAsD,6CAA6C,SAAS,WAAW,SAAS,CAAC;AAAA,QACnJ,QAAQ,SAAS,qDAAqD,wCAAwC;AAAA,QAC9G,eAAe,SAAS,EAAE,KAAK,qDAAqD,SAAS,CAAC,uBAAuB,EAAE,GAAG,2BAA2B;AAAA,MACtJ,CAAC;AAED,UAAI,CAAC,WAAW;AACf,eAAO;AAAA,UACN,YAAY;AAAA,QACb;AAAA,MACD;AAAA,IACD;AAEA,UAAM,WAAW,OAAO;AACxB,UAAM,cAAc,YAAY,gBAAgB;AAEhD,WAAO;AAAA,MACN,YAAY;AAAA,IACb;AAAA,EACD;AACD;",
  "names": ["IRelaxedOpenArgs"]
}
