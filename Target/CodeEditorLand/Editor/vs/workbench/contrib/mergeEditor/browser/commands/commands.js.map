{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/mergeEditor/browser/commands/commands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from \"../../../../../base/common/codicons.js\";\nimport { basename } from \"../../../../../base/common/resources.js\";\nimport { URI, type UriComponents } from \"../../../../../base/common/uri.js\";\nimport { localize, localize2 } from \"../../../../../nls.js\";\nimport type { ILocalizedString } from \"../../../../../platform/action/common/action.js\";\nimport {\n\tAction2,\n\ttype IAction2Options,\n\tMenuId,\n} from \"../../../../../platform/actions/common/actions.js\";\nimport { ContextKeyExpr } from \"../../../../../platform/contextkey/common/contextkey.js\";\nimport { IDialogService } from \"../../../../../platform/dialogs/common/dialogs.js\";\nimport type { ITextEditorOptions } from \"../../../../../platform/editor/common/editor.js\";\nimport type { ServicesAccessor } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport { IOpenerService } from \"../../../../../platform/opener/common/opener.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n} from \"../../../../../platform/storage/common/storage.js\";\nimport type {\n\tIEditorIdentifier,\n\tIResourceMergeEditorInput,\n} from \"../../../../common/editor.js\";\nimport { IEditorService } from \"../../../../services/editor/common/editorService.js\";\nimport {\n\tStorageCloseWithConflicts,\n\tctxIsMergeEditor,\n\tctxMergeEditorLayout,\n\tctxMergeEditorShowBase,\n\tctxMergeEditorShowBaseAtTop,\n\tctxMergeEditorShowNonConflictingChanges,\n} from \"../../common/mergeEditor.js\";\nimport {\n\ttype MergeEditorInput,\n\tMergeEditorInputData,\n} from \"../mergeEditorInput.js\";\nimport type { IMergeEditorInputModel } from \"../mergeEditorInputModel.js\";\nimport { MergeEditor } from \"../view/mergeEditor.js\";\nimport type { MergeEditorViewModel } from \"../view/viewModel.js\";\n\nabstract class MergeEditorAction extends Action2 {\n\tconstructor(desc: Readonly<IAction2Options>) {\n\t\tsuper(desc);\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst { activeEditorPane } = accessor.get(IEditorService);\n\t\tif (activeEditorPane instanceof MergeEditor) {\n\t\t\tconst vm = activeEditorPane.viewModel.get();\n\t\t\tif (!vm) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.runWithViewModel(vm, accessor);\n\t\t}\n\t}\n\n\tabstract runWithViewModel(\n\t\tviewModel: MergeEditorViewModel,\n\t\taccessor: ServicesAccessor,\n\t): void;\n}\n\ninterface MergeEditorAction2Args {\n\tinputModel: IMergeEditorInputModel;\n\tviewModel: MergeEditorViewModel;\n\tinput: MergeEditorInput;\n\teditorIdentifier: IEditorIdentifier;\n}\n\nabstract class MergeEditorAction2 extends Action2 {\n\tconstructor(desc: Readonly<IAction2Options>) {\n\t\tsuper(desc);\n\t}\n\n\toverride run(accessor: ServicesAccessor, ...args: any[]): void {\n\t\tconst { activeEditorPane } = accessor.get(IEditorService);\n\t\tif (activeEditorPane instanceof MergeEditor) {\n\t\t\tconst vm = activeEditorPane.viewModel.get();\n\t\t\tif (!vm) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn this.runWithMergeEditor(\n\t\t\t\t{\n\t\t\t\t\tviewModel: vm,\n\t\t\t\t\tinputModel: activeEditorPane.inputModel.get()!,\n\t\t\t\t\tinput: activeEditorPane.input as MergeEditorInput,\n\t\t\t\t\teditorIdentifier: {\n\t\t\t\t\t\teditor: activeEditorPane.input,\n\t\t\t\t\t\tgroupId: activeEditorPane.group.id,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\taccessor,\n\t\t\t\t...args,\n\t\t\t) as any;\n\t\t}\n\t}\n\n\tabstract runWithMergeEditor(\n\t\tcontext: MergeEditorAction2Args,\n\t\taccessor: ServicesAccessor,\n\t\t...args: any[]\n\t): unknown;\n}\n\nexport class OpenMergeEditor extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"_open.mergeEditor\",\n\t\t\ttitle: localize2(\"title\", \"Open Merge Editor\"),\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor, ...args: unknown[]): void {\n\t\tconst validatedArgs = IRelaxedOpenArgs.validate(args[0]);\n\n\t\tconst input: IResourceMergeEditorInput = {\n\t\t\tbase: { resource: validatedArgs.base },\n\t\t\tinput1: {\n\t\t\t\tresource: validatedArgs.input1.uri,\n\t\t\t\tlabel: validatedArgs.input1.title,\n\t\t\t\tdescription: validatedArgs.input1.description,\n\t\t\t\tdetail: validatedArgs.input1.detail,\n\t\t\t},\n\t\t\tinput2: {\n\t\t\t\tresource: validatedArgs.input2.uri,\n\t\t\t\tlabel: validatedArgs.input2.title,\n\t\t\t\tdescription: validatedArgs.input2.description,\n\t\t\t\tdetail: validatedArgs.input2.detail,\n\t\t\t},\n\t\t\tresult: { resource: validatedArgs.output },\n\t\t\toptions: { preserveFocus: true },\n\t\t};\n\t\taccessor.get(IEditorService).openEditor(input);\n\t}\n}\n\nnamespace IRelaxedOpenArgs {\n\texport function validate(obj: unknown): {\n\t\tbase: URI;\n\t\tinput1: MergeEditorInputData;\n\t\tinput2: MergeEditorInputData;\n\t\toutput: URI;\n\t} {\n\t\tif (!obj || typeof obj !== \"object\") {\n\t\t\tthrow new TypeError(\"invalid argument\");\n\t\t}\n\n\t\tconst o = obj as IRelaxedOpenArgs;\n\t\tconst base = toUri(o.base);\n\t\tconst output = toUri(o.output);\n\t\tconst input1 = toInputData(o.input1);\n\t\tconst input2 = toInputData(o.input2);\n\t\treturn { base, input1, input2, output };\n\t}\n\n\tfunction toInputData(obj: unknown): MergeEditorInputData {\n\t\tif (typeof obj === \"string\") {\n\t\t\treturn new MergeEditorInputData(\n\t\t\t\tURI.parse(obj, true),\n\t\t\t\tundefined,\n\t\t\t\tundefined,\n\t\t\t\tundefined,\n\t\t\t);\n\t\t}\n\t\tif (!obj || typeof obj !== \"object\") {\n\t\t\tthrow new TypeError(\"invalid argument\");\n\t\t}\n\n\t\tif (isUriComponents(obj)) {\n\t\t\treturn new MergeEditorInputData(\n\t\t\t\tURI.revive(obj),\n\t\t\t\tundefined,\n\t\t\t\tundefined,\n\t\t\t\tundefined,\n\t\t\t);\n\t\t}\n\n\t\tconst o = obj as IRelaxedInputData;\n\t\tconst title = o.title;\n\t\tconst uri = toUri(o.uri);\n\t\tconst detail = o.detail;\n\t\tconst description = o.description;\n\t\treturn new MergeEditorInputData(uri, title, detail, description);\n\t}\n\n\tfunction toUri(obj: unknown): URI {\n\t\tif (typeof obj === \"string\") {\n\t\t\treturn URI.parse(obj, true);\n\t\t} else if (obj && typeof obj === \"object\") {\n\t\t\treturn URI.revive(<UriComponents>obj);\n\t\t}\n\t\tthrow new TypeError(\"invalid argument\");\n\t}\n\n\tfunction isUriComponents(obj: unknown): obj is UriComponents {\n\t\tif (!obj || typeof obj !== \"object\") {\n\t\t\treturn false;\n\t\t}\n\t\tconst o = obj as UriComponents;\n\t\treturn (\n\t\t\ttypeof o.scheme === \"string\" &&\n\t\t\ttypeof o.authority === \"string\" &&\n\t\t\ttypeof o.path === \"string\" &&\n\t\t\ttypeof o.query === \"string\" &&\n\t\t\ttypeof o.fragment === \"string\"\n\t\t);\n\t}\n}\n\ntype IRelaxedInputData = {\n\turi: UriComponents;\n\ttitle?: string;\n\tdetail?: string;\n\tdescription?: string;\n};\n\ntype IRelaxedOpenArgs = {\n\tbase: UriComponents | string;\n\tinput1: IRelaxedInputData | string;\n\tinput2: IRelaxedInputData | string;\n\toutput: UriComponents | string;\n};\n\nexport class SetMixedLayout extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"merge.mixedLayout\",\n\t\t\ttitle: localize2(\"layout.mixed\", \"Mixed Layout\"),\n\t\t\ttoggled: ctxMergeEditorLayout.isEqualTo(\"mixed\"),\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\twhen: ctxIsMergeEditor,\n\t\t\t\t\tgroup: \"1_merge\",\n\t\t\t\t\torder: 9,\n\t\t\t\t},\n\t\t\t],\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst { activeEditorPane } = accessor.get(IEditorService);\n\t\tif (activeEditorPane instanceof MergeEditor) {\n\t\t\tactiveEditorPane.setLayoutKind(\"mixed\");\n\t\t}\n\t}\n}\n\nexport class SetColumnLayout extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"merge.columnLayout\",\n\t\t\ttitle: localize2(\"layout.column\", \"Column Layout\"),\n\t\t\ttoggled: ctxMergeEditorLayout.isEqualTo(\"columns\"),\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\twhen: ctxIsMergeEditor,\n\t\t\t\t\tgroup: \"1_merge\",\n\t\t\t\t\torder: 10,\n\t\t\t\t},\n\t\t\t],\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst { activeEditorPane } = accessor.get(IEditorService);\n\t\tif (activeEditorPane instanceof MergeEditor) {\n\t\t\tactiveEditorPane.setLayoutKind(\"columns\");\n\t\t}\n\t}\n}\n\nexport class ShowNonConflictingChanges extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"merge.showNonConflictingChanges\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"showNonConflictingChanges\",\n\t\t\t\t\"Show Non-Conflicting Changes\",\n\t\t\t),\n\t\t\ttoggled: ctxMergeEditorShowNonConflictingChanges.isEqualTo(true),\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\twhen: ctxIsMergeEditor,\n\t\t\t\t\tgroup: \"3_merge\",\n\t\t\t\t\torder: 9,\n\t\t\t\t},\n\t\t\t],\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst { activeEditorPane } = accessor.get(IEditorService);\n\t\tif (activeEditorPane instanceof MergeEditor) {\n\t\t\tactiveEditorPane.toggleShowNonConflictingChanges();\n\t\t}\n\t}\n}\n\nexport class ShowHideBase extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"merge.showBase\",\n\t\t\ttitle: localize2(\"layout.showBase\", \"Show Base\"),\n\t\t\ttoggled: ctxMergeEditorShowBase.isEqualTo(true),\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tctxIsMergeEditor,\n\t\t\t\t\t\tctxMergeEditorLayout.isEqualTo(\"columns\"),\n\t\t\t\t\t),\n\t\t\t\t\tgroup: \"2_merge\",\n\t\t\t\t\torder: 9,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst { activeEditorPane } = accessor.get(IEditorService);\n\t\tif (activeEditorPane instanceof MergeEditor) {\n\t\t\tactiveEditorPane.toggleBase();\n\t\t}\n\t}\n}\n\nexport class ShowHideTopBase extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"merge.showBaseTop\",\n\t\t\ttitle: localize2(\"layout.showBaseTop\", \"Show Base Top\"),\n\t\t\ttoggled: ContextKeyExpr.and(\n\t\t\t\tctxMergeEditorShowBase,\n\t\t\t\tctxMergeEditorShowBaseAtTop,\n\t\t\t),\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tctxIsMergeEditor,\n\t\t\t\t\t\tctxMergeEditorLayout.isEqualTo(\"mixed\"),\n\t\t\t\t\t),\n\t\t\t\t\tgroup: \"2_merge\",\n\t\t\t\t\torder: 10,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst { activeEditorPane } = accessor.get(IEditorService);\n\t\tif (activeEditorPane instanceof MergeEditor) {\n\t\t\tactiveEditorPane.toggleShowBaseTop();\n\t\t}\n\t}\n}\n\nexport class ShowHideCenterBase extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"merge.showBaseCenter\",\n\t\t\ttitle: localize2(\"layout.showBaseCenter\", \"Show Base Center\"),\n\t\t\ttoggled: ContextKeyExpr.and(\n\t\t\t\tctxMergeEditorShowBase,\n\t\t\t\tctxMergeEditorShowBaseAtTop.negate(),\n\t\t\t),\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tctxIsMergeEditor,\n\t\t\t\t\t\tctxMergeEditorLayout.isEqualTo(\"mixed\"),\n\t\t\t\t\t),\n\t\t\t\t\tgroup: \"2_merge\",\n\t\t\t\t\torder: 11,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst { activeEditorPane } = accessor.get(IEditorService);\n\t\tif (activeEditorPane instanceof MergeEditor) {\n\t\t\tactiveEditorPane.toggleShowBaseCenter();\n\t\t}\n\t}\n}\n\nconst mergeEditorCategory: ILocalizedString = localize2(\n\t\"mergeEditor\",\n\t\"Merge Editor\",\n);\n\nexport class OpenResultResource extends MergeEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"merge.openResult\",\n\t\t\ticon: Codicon.goToFile,\n\t\t\ttitle: localize2(\"openfile\", \"Open File\"),\n\t\t\tcategory: mergeEditorCategory,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\twhen: ctxIsMergeEditor,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\torder: 1,\n\t\t\t\t},\n\t\t\t],\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t});\n\t}\n\n\toverride runWithViewModel(\n\t\tviewModel: MergeEditorViewModel,\n\t\taccessor: ServicesAccessor,\n\t): void {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\teditorService.openEditor({\n\t\t\tresource: viewModel.model.resultTextModel.uri,\n\t\t});\n\t}\n}\n\nexport class GoToNextUnhandledConflict extends MergeEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"merge.goToNextUnhandledConflict\",\n\t\t\tcategory: mergeEditorCategory,\n\t\t\ttitle: localize2(\n\t\t\t\t\"merge.goToNextUnhandledConflict\",\n\t\t\t\t\"Go to Next Unhandled Conflict\",\n\t\t\t),\n\t\t\ticon: Codicon.arrowDown,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\twhen: ctxIsMergeEditor,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\torder: 3,\n\t\t\t\t},\n\t\t\t],\n\t\t\tf1: true,\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t});\n\t}\n\n\toverride runWithViewModel(viewModel: MergeEditorViewModel): void {\n\t\tviewModel.model.telemetry.reportNavigationToNextConflict();\n\t\tviewModel.goToNextModifiedBaseRange(\n\t\t\t(r) => !viewModel.model.isHandled(r).get(),\n\t\t);\n\t}\n}\n\nexport class GoToPreviousUnhandledConflict extends MergeEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"merge.goToPreviousUnhandledConflict\",\n\t\t\tcategory: mergeEditorCategory,\n\t\t\ttitle: localize2(\n\t\t\t\t\"merge.goToPreviousUnhandledConflict\",\n\t\t\t\t\"Go to Previous Unhandled Conflict\",\n\t\t\t),\n\t\t\ticon: Codicon.arrowUp,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\twhen: ctxIsMergeEditor,\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\torder: 2,\n\t\t\t\t},\n\t\t\t],\n\t\t\tf1: true,\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t});\n\t}\n\n\toverride runWithViewModel(viewModel: MergeEditorViewModel): void {\n\t\tviewModel.model.telemetry.reportNavigationToPreviousConflict();\n\t\tviewModel.goToPreviousModifiedBaseRange(\n\t\t\t(r) => !viewModel.model.isHandled(r).get(),\n\t\t);\n\t}\n}\n\nexport class ToggleActiveConflictInput1 extends MergeEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"merge.toggleActiveConflictInput1\",\n\t\t\tcategory: mergeEditorCategory,\n\t\t\ttitle: localize2(\n\t\t\t\t\"merge.toggleCurrentConflictFromLeft\",\n\t\t\t\t\"Toggle Current Conflict from Left\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t});\n\t}\n\n\toverride runWithViewModel(viewModel: MergeEditorViewModel): void {\n\t\tviewModel.toggleActiveConflict(1);\n\t}\n}\n\nexport class ToggleActiveConflictInput2 extends MergeEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"merge.toggleActiveConflictInput2\",\n\t\t\tcategory: mergeEditorCategory,\n\t\t\ttitle: localize2(\n\t\t\t\t\"merge.toggleCurrentConflictFromRight\",\n\t\t\t\t\"Toggle Current Conflict from Right\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t});\n\t}\n\n\toverride runWithViewModel(viewModel: MergeEditorViewModel): void {\n\t\tviewModel.toggleActiveConflict(2);\n\t}\n}\n\nexport class CompareInput1WithBaseCommand extends MergeEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"mergeEditor.compareInput1WithBase\",\n\t\t\tcategory: mergeEditorCategory,\n\t\t\ttitle: localize2(\n\t\t\t\t\"mergeEditor.compareInput1WithBase\",\n\t\t\t\t\"Compare Input 1 With Base\",\n\t\t\t),\n\t\t\tshortTitle: localize(\n\t\t\t\t\"mergeEditor.compareWithBase\",\n\t\t\t\t\"Compare With Base\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t\tmenu: { id: MenuId.MergeInput1Toolbar, group: \"primary\" },\n\t\t\ticon: Codicon.compareChanges,\n\t\t});\n\t}\n\n\toverride runWithViewModel(\n\t\tviewModel: MergeEditorViewModel,\n\t\taccessor: ServicesAccessor,\n\t): void {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tmergeEditorCompare(viewModel, editorService, 1);\n\t}\n}\n\nexport class CompareInput2WithBaseCommand extends MergeEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"mergeEditor.compareInput2WithBase\",\n\t\t\tcategory: mergeEditorCategory,\n\t\t\ttitle: localize2(\n\t\t\t\t\"mergeEditor.compareInput2WithBase\",\n\t\t\t\t\"Compare Input 2 With Base\",\n\t\t\t),\n\t\t\tshortTitle: localize(\n\t\t\t\t\"mergeEditor.compareWithBase\",\n\t\t\t\t\"Compare With Base\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t\tmenu: { id: MenuId.MergeInput2Toolbar, group: \"primary\" },\n\t\t\ticon: Codicon.compareChanges,\n\t\t});\n\t}\n\n\toverride runWithViewModel(\n\t\tviewModel: MergeEditorViewModel,\n\t\taccessor: ServicesAccessor,\n\t): void {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tmergeEditorCompare(viewModel, editorService, 2);\n\t}\n}\n\nasync function mergeEditorCompare(\n\tviewModel: MergeEditorViewModel,\n\teditorService: IEditorService,\n\tinputNumber: 1 | 2,\n) {\n\teditorService.openEditor(editorService.activeEditor!, { pinned: true });\n\n\tconst model = viewModel.model;\n\tconst base = model.base;\n\tconst input =\n\t\tinputNumber === 1\n\t\t\t? viewModel.inputCodeEditorView1.editor\n\t\t\t: viewModel.inputCodeEditorView2.editor;\n\n\tconst lineNumber = input.getPosition()!.lineNumber;\n\tawait editorService.openEditor({\n\t\toriginal: { resource: base.uri },\n\t\tmodified: { resource: input.getModel()!.uri },\n\t\toptions: {\n\t\t\tselection: {\n\t\t\t\tstartLineNumber: lineNumber,\n\t\t\t\tstartColumn: 1,\n\t\t\t},\n\t\t\trevealIfOpened: true,\n\t\t\trevealIfVisible: true,\n\t\t} satisfies ITextEditorOptions,\n\t});\n}\n\nexport class OpenBaseFile extends MergeEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"merge.openBaseEditor\",\n\t\t\tcategory: mergeEditorCategory,\n\t\t\ttitle: localize2(\"merge.openBaseEditor\", \"Open Base File\"),\n\t\t\tf1: true,\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t});\n\t}\n\n\toverride runWithViewModel(\n\t\tviewModel: MergeEditorViewModel,\n\t\taccessor: ServicesAccessor,\n\t): void {\n\t\tconst openerService = accessor.get(IOpenerService);\n\t\topenerService.open(viewModel.model.base.uri);\n\t}\n}\n\nexport class AcceptAllInput1 extends MergeEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"merge.acceptAllInput1\",\n\t\t\tcategory: mergeEditorCategory,\n\t\t\ttitle: localize2(\n\t\t\t\t\"merge.acceptAllInput1\",\n\t\t\t\t\"Accept All Changes from Left\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t\tmenu: { id: MenuId.MergeInput1Toolbar, group: \"primary\" },\n\t\t\ticon: Codicon.checkAll,\n\t\t});\n\t}\n\n\toverride runWithViewModel(viewModel: MergeEditorViewModel): void {\n\t\tviewModel.acceptAll(1);\n\t}\n}\n\nexport class AcceptAllInput2 extends MergeEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"merge.acceptAllInput2\",\n\t\t\tcategory: mergeEditorCategory,\n\t\t\ttitle: localize2(\n\t\t\t\t\"merge.acceptAllInput2\",\n\t\t\t\t\"Accept All Changes from Right\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t\tmenu: { id: MenuId.MergeInput2Toolbar, group: \"primary\" },\n\t\t\ticon: Codicon.checkAll,\n\t\t});\n\t}\n\n\toverride runWithViewModel(viewModel: MergeEditorViewModel): void {\n\t\tviewModel.acceptAll(2);\n\t}\n}\n\nexport class ResetToBaseAndAutoMergeCommand extends MergeEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"mergeEditor.resetResultToBaseAndAutoMerge\",\n\t\t\tcategory: mergeEditorCategory,\n\t\t\ttitle: localize2(\n\t\t\t\t\"mergeEditor.resetResultToBaseAndAutoMerge\",\n\t\t\t\t\"Reset Result\",\n\t\t\t),\n\t\t\tshortTitle: localize(\n\t\t\t\t\"mergeEditor.resetResultToBaseAndAutoMerge.short\",\n\t\t\t\t\"Reset\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t\tmenu: { id: MenuId.MergeInputResultToolbar, group: \"primary\" },\n\t\t\ticon: Codicon.discard,\n\t\t});\n\t}\n\n\toverride runWithViewModel(\n\t\tviewModel: MergeEditorViewModel,\n\t\taccessor: ServicesAccessor,\n\t): void {\n\t\tviewModel.model.reset();\n\t}\n}\n\nexport class ResetCloseWithConflictsChoice extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"mergeEditor.resetCloseWithConflictsChoice\",\n\t\t\tcategory: mergeEditorCategory,\n\t\t\ttitle: localize2(\n\t\t\t\t\"mergeEditor.resetChoice\",\n\t\t\t\t\"Reset Choice for 'Close with Conflicts'\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor\n\t\t\t.get(IStorageService)\n\t\t\t.remove(StorageCloseWithConflicts, StorageScope.PROFILE);\n\t}\n}\n\n// this is an API command\nexport class AcceptMerge extends MergeEditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"mergeEditor.acceptMerge\",\n\t\t\tcategory: mergeEditorCategory,\n\t\t\ttitle: localize2(\"mergeEditor.acceptMerge\", \"Complete Merge\"),\n\t\t\tf1: false,\n\t\t\tprecondition: ctxIsMergeEditor,\n\t\t});\n\t}\n\n\toverride async runWithMergeEditor(\n\t\t{ inputModel, editorIdentifier, viewModel }: MergeEditorAction2Args,\n\t\taccessor: ServicesAccessor,\n\t) {\n\t\tconst dialogService = accessor.get(IDialogService);\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tif (viewModel.model.unhandledConflictsCount.get() > 0) {\n\t\t\tconst { confirmed } = await dialogService.confirm({\n\t\t\t\tmessage: localize(\n\t\t\t\t\t\"mergeEditor.acceptMerge.unhandledConflicts.message\",\n\t\t\t\t\t\"Do you want to complete the merge of {0}?\",\n\t\t\t\t\tbasename(inputModel.resultUri),\n\t\t\t\t),\n\t\t\t\tdetail: localize(\n\t\t\t\t\t\"mergeEditor.acceptMerge.unhandledConflicts.detail\",\n\t\t\t\t\t\"The file contains unhandled conflicts.\",\n\t\t\t\t),\n\t\t\t\tprimaryButton: localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"mergeEditor.acceptMerge.unhandledConflicts.accept\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"&&Complete with Conflicts\",\n\t\t\t\t),\n\t\t\t});\n\n\t\t\tif (!confirmed) {\n\t\t\t\treturn {\n\t\t\t\t\tsuccessful: false,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tawait inputModel.accept();\n\t\tawait editorService.closeEditor(editorIdentifier);\n\n\t\treturn {\n\t\t\tsuccessful: true,\n\t\t};\n\t}\n}\n"],
  "mappings": "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",
  "names": ["IRelaxedOpenArgs"]
}
