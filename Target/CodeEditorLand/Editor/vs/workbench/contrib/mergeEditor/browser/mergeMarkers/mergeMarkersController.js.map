{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/mergeEditor/browser/mergeMarkers/mergeMarkersController.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { h } from '../../../../../base/browser/dom.js';\nimport { Disposable, DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { autorun, IObservable } from '../../../../../base/common/observable.js';\nimport { ICodeEditor } from '../../../../../editor/browser/editorBrowser.js';\nimport { ITextModel } from '../../../../../editor/common/model.js';\nimport { LineRange } from '../model/lineRange.js';\nimport { MergeEditorViewModel } from '../view/viewModel.js';\nimport * as nls from '../../../../../nls.js';\n\nexport const conflictMarkers = {\n\tstart: '<<<<<<<',\n\tend: '>>>>>>>',\n};\n\nexport class MergeMarkersController extends Disposable {\n\tprivate readonly viewZoneIds: string[] = [];\n\tprivate readonly disposableStore = new DisposableStore();\n\n\tpublic constructor(\n\t\tpublic readonly editor: ICodeEditor,\n\t\tpublic readonly mergeEditorViewModel: IObservable<MergeEditorViewModel | undefined>,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(editor.onDidChangeModelContent(e => {\n\t\t\tthis.updateDecorations();\n\t\t}));\n\n\t\tthis._register(editor.onDidChangeModel(e => {\n\t\t\tthis.updateDecorations();\n\t\t}));\n\n\t\tthis.updateDecorations();\n\t}\n\n\tprivate updateDecorations() {\n\t\tconst model = this.editor.getModel();\n\t\tconst blocks = model ? getBlocks(model, { blockToRemoveStartLinePrefix: conflictMarkers.start, blockToRemoveEndLinePrefix: conflictMarkers.end }) : { blocks: [] };\n\n\t\tthis.editor.setHiddenAreas(blocks.blocks.map(b => b.lineRange.deltaEnd(-1).toRange()), this);\n\t\tthis.editor.changeViewZones(c => {\n\t\t\tthis.disposableStore.clear();\n\t\t\tfor (const id of this.viewZoneIds) {\n\t\t\t\tc.removeZone(id);\n\t\t\t}\n\t\t\tthis.viewZoneIds.length = 0;\n\t\t\tfor (const b of blocks.blocks) {\n\n\t\t\t\tconst startLine = model!.getLineContent(b.lineRange.startLineNumber).substring(0, 20);\n\t\t\t\tconst endLine = model!.getLineContent(b.lineRange.endLineNumberExclusive - 1).substring(0, 20);\n\n\t\t\t\tconst conflictingLinesCount = b.lineRange.lineCount - 2;\n\n\t\t\t\tconst domNode = h('div', [\n\t\t\t\t\th('div.conflict-zone-root', [\n\t\t\t\t\t\th('pre', [startLine]),\n\t\t\t\t\t\th('span.dots', ['...']),\n\t\t\t\t\t\th('pre', [endLine]),\n\t\t\t\t\t\th('span.text', [\n\t\t\t\t\t\t\tconflictingLinesCount === 1\n\t\t\t\t\t\t\t\t? nls.localize('conflictingLine', \"1 Conflicting Line\")\n\t\t\t\t\t\t\t\t: nls.localize('conflictingLines', \"{0} Conflicting Lines\", conflictingLinesCount)\n\t\t\t\t\t\t]),\n\t\t\t\t\t]),\n\t\t\t\t]).root;\n\t\t\t\tthis.viewZoneIds.push(c.addZone({\n\t\t\t\t\tafterLineNumber: b.lineRange.endLineNumberExclusive - 1,\n\t\t\t\t\tdomNode,\n\t\t\t\t\theightInLines: 1.5,\n\t\t\t\t}));\n\n\t\t\t\tconst updateWidth = () => {\n\t\t\t\t\tconst layoutInfo = this.editor.getLayoutInfo();\n\t\t\t\t\tdomNode.style.width = `${layoutInfo.contentWidth - layoutInfo.verticalScrollbarWidth}px`;\n\t\t\t\t};\n\n\t\t\t\tthis.disposableStore.add(\n\t\t\t\t\tthis.editor.onDidLayoutChange(() => {\n\t\t\t\t\t\tupdateWidth();\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\tupdateWidth();\n\n\n\t\t\t\tthis.disposableStore.add(autorun(reader => {\n\t\t\t\t\t/** @description update classname */\n\t\t\t\t\tconst vm = this.mergeEditorViewModel.read(reader);\n\t\t\t\t\tif (!vm) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst activeRange = vm.activeModifiedBaseRange.read(reader);\n\n\t\t\t\t\tconst classNames: string[] = [];\n\t\t\t\t\tclassNames.push('conflict-zone');\n\n\t\t\t\t\tif (activeRange) {\n\t\t\t\t\t\tconst activeRangeInResult = vm.model.getLineRangeInResult(activeRange.baseRange, reader);\n\t\t\t\t\t\tif (activeRangeInResult.intersects(b.lineRange)) {\n\t\t\t\t\t\t\tclassNames.push('focused');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tdomNode.className = classNames.join(' ');\n\t\t\t\t}));\n\t\t\t}\n\t\t});\n\t}\n}\n\n\nfunction getBlocks(document: ITextModel, configuration: ProjectionConfiguration): { blocks: Block[]; transformedContent: string } {\n\tconst blocks: Block[] = [];\n\tconst transformedContent: string[] = [];\n\n\tlet inBlock = false;\n\tlet startLineNumber = -1;\n\tlet curLine = 0;\n\n\tfor (const line of document.getLinesContent()) {\n\t\tcurLine++;\n\t\tif (!inBlock) {\n\t\t\tif (line.startsWith(configuration.blockToRemoveStartLinePrefix)) {\n\t\t\t\tinBlock = true;\n\t\t\t\tstartLineNumber = curLine;\n\t\t\t} else {\n\t\t\t\ttransformedContent.push(line);\n\t\t\t}\n\t\t} else {\n\t\t\tif (line.startsWith(configuration.blockToRemoveEndLinePrefix)) {\n\t\t\t\tinBlock = false;\n\t\t\t\tblocks.push(new Block(new LineRange(startLineNumber, curLine - startLineNumber + 1)));\n\t\t\t\ttransformedContent.push('');\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tblocks,\n\t\ttransformedContent: transformedContent.join('\\n')\n\t};\n}\n\nclass Block {\n\tconstructor(public readonly lineRange: LineRange) { }\n}\n\ninterface ProjectionConfiguration {\n\tblockToRemoveStartLinePrefix: string;\n\tblockToRemoveEndLinePrefix: string;\n}\n"],
  "mappings": "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",
  "names": []
}
