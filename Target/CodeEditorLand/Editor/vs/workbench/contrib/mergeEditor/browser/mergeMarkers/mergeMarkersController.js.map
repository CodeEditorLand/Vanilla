{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/mergeEditor/browser/mergeMarkers/mergeMarkersController.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { h } from \"../../../../../base/browser/dom.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n} from \"../../../../../base/common/lifecycle.js\";\nimport {\n\ttype IObservable,\n\tautorun,\n} from \"../../../../../base/common/observable.js\";\nimport type { ICodeEditor } from \"../../../../../editor/browser/editorBrowser.js\";\nimport type { ITextModel } from \"../../../../../editor/common/model.js\";\nimport * as nls from \"../../../../../nls.js\";\nimport { LineRange } from \"../model/lineRange.js\";\nimport type { MergeEditorViewModel } from \"../view/viewModel.js\";\n\nexport const conflictMarkers = {\n\tstart: \"<<<<<<<\",\n\tend: \">>>>>>>\",\n};\n\nexport class MergeMarkersController extends Disposable {\n\tprivate readonly viewZoneIds: string[] = [];\n\tprivate readonly disposableStore = new DisposableStore();\n\n\tpublic constructor(\n\t\tpublic readonly editor: ICodeEditor,\n\t\tpublic readonly mergeEditorViewModel: IObservable<\n\t\t\tMergeEditorViewModel | undefined\n\t\t>,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(\n\t\t\teditor.onDidChangeModelContent((e) => {\n\t\t\t\tthis.updateDecorations();\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\teditor.onDidChangeModel((e) => {\n\t\t\t\tthis.updateDecorations();\n\t\t\t}),\n\t\t);\n\n\t\tthis.updateDecorations();\n\t}\n\n\tprivate updateDecorations() {\n\t\tconst model = this.editor.getModel();\n\t\tconst blocks = model\n\t\t\t? getBlocks(model, {\n\t\t\t\t\tblockToRemoveStartLinePrefix: conflictMarkers.start,\n\t\t\t\t\tblockToRemoveEndLinePrefix: conflictMarkers.end,\n\t\t\t\t})\n\t\t\t: { blocks: [] };\n\n\t\tthis.editor.setHiddenAreas(\n\t\t\tblocks.blocks.map((b) => b.lineRange.deltaEnd(-1).toRange()),\n\t\t\tthis,\n\t\t);\n\t\tthis.editor.changeViewZones((c) => {\n\t\t\tthis.disposableStore.clear();\n\t\t\tfor (const id of this.viewZoneIds) {\n\t\t\t\tc.removeZone(id);\n\t\t\t}\n\t\t\tthis.viewZoneIds.length = 0;\n\t\t\tfor (const b of blocks.blocks) {\n\t\t\t\tconst startLine = model!\n\t\t\t\t\t.getLineContent(b.lineRange.startLineNumber)\n\t\t\t\t\t.substring(0, 20);\n\t\t\t\tconst endLine = model!\n\t\t\t\t\t.getLineContent(b.lineRange.endLineNumberExclusive - 1)\n\t\t\t\t\t.substring(0, 20);\n\n\t\t\t\tconst conflictingLinesCount = b.lineRange.lineCount - 2;\n\n\t\t\t\tconst domNode = h(\"div\", [\n\t\t\t\t\th(\"div.conflict-zone-root\", [\n\t\t\t\t\t\th(\"pre\", [startLine]),\n\t\t\t\t\t\th(\"span.dots\", [\"...\"]),\n\t\t\t\t\t\th(\"pre\", [endLine]),\n\t\t\t\t\t\th(\"span.text\", [\n\t\t\t\t\t\t\tconflictingLinesCount === 1\n\t\t\t\t\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\t\t\t\t\"conflictingLine\",\n\t\t\t\t\t\t\t\t\t\t\"1 Conflicting Line\",\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\t\t\t\t\"conflictingLines\",\n\t\t\t\t\t\t\t\t\t\t\"{0} Conflicting Lines\",\n\t\t\t\t\t\t\t\t\t\tconflictingLinesCount,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t]),\n\t\t\t\t\t]),\n\t\t\t\t]).root;\n\t\t\t\tthis.viewZoneIds.push(\n\t\t\t\t\tc.addZone({\n\t\t\t\t\t\tafterLineNumber: b.lineRange.endLineNumberExclusive - 1,\n\t\t\t\t\t\tdomNode,\n\t\t\t\t\t\theightInLines: 1.5,\n\t\t\t\t\t}),\n\t\t\t\t);\n\n\t\t\t\tconst updateWidth = () => {\n\t\t\t\t\tconst layoutInfo = this.editor.getLayoutInfo();\n\t\t\t\t\tdomNode.style.width = `${layoutInfo.contentWidth - layoutInfo.verticalScrollbarWidth}px`;\n\t\t\t\t};\n\n\t\t\t\tthis.disposableStore.add(\n\t\t\t\t\tthis.editor.onDidLayoutChange(() => {\n\t\t\t\t\t\tupdateWidth();\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\tupdateWidth();\n\n\t\t\t\tthis.disposableStore.add(\n\t\t\t\t\tautorun((reader) => {\n\t\t\t\t\t\t/** @description update classname */\n\t\t\t\t\t\tconst vm = this.mergeEditorViewModel.read(reader);\n\t\t\t\t\t\tif (!vm) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst activeRange =\n\t\t\t\t\t\t\tvm.activeModifiedBaseRange.read(reader);\n\n\t\t\t\t\t\tconst classNames: string[] = [];\n\t\t\t\t\t\tclassNames.push(\"conflict-zone\");\n\n\t\t\t\t\t\tif (activeRange) {\n\t\t\t\t\t\t\tconst activeRangeInResult =\n\t\t\t\t\t\t\t\tvm.model.getLineRangeInResult(\n\t\t\t\t\t\t\t\t\tactiveRange.baseRange,\n\t\t\t\t\t\t\t\t\treader,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (activeRangeInResult.intersects(b.lineRange)) {\n\t\t\t\t\t\t\t\tclassNames.push(\"focused\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdomNode.className = classNames.join(\" \");\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction getBlocks(\n\tdocument: ITextModel,\n\tconfiguration: ProjectionConfiguration,\n): { blocks: Block[]; transformedContent: string } {\n\tconst blocks: Block[] = [];\n\tconst transformedContent: string[] = [];\n\n\tlet inBlock = false;\n\tlet startLineNumber = -1;\n\tlet curLine = 0;\n\n\tfor (const line of document.getLinesContent()) {\n\t\tcurLine++;\n\t\tif (inBlock) {\n\t\t\tif (line.startsWith(configuration.blockToRemoveEndLinePrefix)) {\n\t\t\t\tinBlock = false;\n\t\t\t\tblocks.push(\n\t\t\t\t\tnew Block(\n\t\t\t\t\t\tnew LineRange(\n\t\t\t\t\t\t\tstartLineNumber,\n\t\t\t\t\t\t\tcurLine - startLineNumber + 1,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\ttransformedContent.push(\"\");\n\t\t\t}\n\t\t} else if (\n\t\t\tline.startsWith(configuration.blockToRemoveStartLinePrefix)\n\t\t) {\n\t\t\tinBlock = true;\n\t\t\tstartLineNumber = curLine;\n\t\t} else {\n\t\t\ttransformedContent.push(line);\n\t\t}\n\t}\n\n\treturn {\n\t\tblocks,\n\t\ttransformedContent: transformedContent.join(\"\\n\"),\n\t};\n}\n\nclass Block {\n\tconstructor(public readonly lineRange: LineRange) {}\n}\n\ninterface ProjectionConfiguration {\n\tblockToRemoveStartLinePrefix: string;\n\tblockToRemoveEndLinePrefix: string;\n}\n"],
  "mappings": "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",
  "names": []
}
