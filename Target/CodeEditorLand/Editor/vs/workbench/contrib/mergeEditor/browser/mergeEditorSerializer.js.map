{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/mergeEditor/browser/mergeEditorSerializer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from \"../../../../base/common/errors.js\";\nimport { parse } from \"../../../../base/common/marshalling.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport type { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport type { IEditorSerializer } from \"../../../common/editor.js\";\nimport { MergeEditorInput, MergeEditorInputData } from \"./mergeEditorInput.js\";\n\nexport class MergeEditorSerializer implements IEditorSerializer {\n\tcanSerialize(): boolean {\n\t\treturn true;\n\t}\n\n\tserialize(editor: MergeEditorInput): string {\n\t\treturn JSON.stringify(this.toJSON(editor));\n\t}\n\n\ttoJSON(editor: MergeEditorInput): MergeEditorInputJSON {\n\t\treturn {\n\t\t\tbase: editor.base,\n\t\t\tinput1: editor.input1,\n\t\t\tinput2: editor.input2,\n\t\t\tresult: editor.result,\n\t\t};\n\t}\n\n\tdeserialize(\n\t\tinstantiationService: IInstantiationService,\n\t\traw: string,\n\t): MergeEditorInput | undefined {\n\t\ttry {\n\t\t\tconst data = <MergeEditorInputJSON>parse(raw);\n\t\t\treturn instantiationService.createInstance(\n\t\t\t\tMergeEditorInput,\n\t\t\t\tdata.base,\n\t\t\t\tnew MergeEditorInputData(\n\t\t\t\t\tdata.input1.uri,\n\t\t\t\t\tdata.input1.title,\n\t\t\t\t\tdata.input1.detail,\n\t\t\t\t\tdata.input1.description,\n\t\t\t\t),\n\t\t\t\tnew MergeEditorInputData(\n\t\t\t\t\tdata.input2.uri,\n\t\t\t\t\tdata.input2.title,\n\t\t\t\t\tdata.input2.detail,\n\t\t\t\t\tdata.input2.description,\n\t\t\t\t),\n\t\t\t\tdata.result,\n\t\t\t);\n\t\t} catch (err) {\n\t\t\tonUnexpectedError(err);\n\t\t\treturn undefined;\n\t\t}\n\t}\n}\n\ninterface MergeEditorInputJSON {\n\tbase: URI;\n\tinput1: { uri: URI; title?: string; detail?: string; description?: string };\n\tinput2: { uri: URI; title?: string; detail?: string; description?: string };\n\tresult: URI;\n}\n"],
  "mappings": ";;AAKA,SAAS,yBAAyB;AAClC,SAAS,aAAa;AAItB,SAAS,kBAAkB,4BAA4B;AAEhD,MAAM,sBAAmD;AAAA,EAZhE,OAYgE;AAAA;AAAA;AAAA,EAC/D,eAAwB;AACvB,WAAO;AAAA,EACR;AAAA,EAEA,UAAU,QAAkC;AAC3C,WAAO,KAAK,UAAU,KAAK,OAAO,MAAM,CAAC;AAAA,EAC1C;AAAA,EAEA,OAAO,QAAgD;AACtD,WAAO;AAAA,MACN,MAAM,OAAO;AAAA,MACb,QAAQ,OAAO;AAAA,MACf,QAAQ,OAAO;AAAA,MACf,QAAQ,OAAO;AAAA,IAChB;AAAA,EACD;AAAA,EAEA,YACC,sBACA,KAC+B;AAC/B,QAAI;AACH,YAAM,OAA6B,MAAM,GAAG;AAC5C,aAAO,qBAAqB;AAAA,QAC3B;AAAA,QACA,KAAK;AAAA,QACL,IAAI;AAAA,UACH,KAAK,OAAO;AAAA,UACZ,KAAK,OAAO;AAAA,UACZ,KAAK,OAAO;AAAA,UACZ,KAAK,OAAO;AAAA,QACb;AAAA,QACA,IAAI;AAAA,UACH,KAAK,OAAO;AAAA,UACZ,KAAK,OAAO;AAAA,UACZ,KAAK,OAAO;AAAA,UACZ,KAAK,OAAO;AAAA,QACb;AAAA,QACA,KAAK;AAAA,MACN;AAAA,IACD,SAAS,KAAK;AACb,wBAAkB,GAAG;AACrB,aAAO;AAAA,IACR;AAAA,EACD;AACD;",
  "names": []
}
