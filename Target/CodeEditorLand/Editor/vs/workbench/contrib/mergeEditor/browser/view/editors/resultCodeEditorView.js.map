{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/mergeEditor/browser/view/editors/resultCodeEditorView.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { reset } from \"../../../../../../base/browser/dom.js\";\nimport { ActionBar } from \"../../../../../../base/browser/ui/actionbar/actionbar.js\";\nimport { renderLabelWithIcons } from \"../../../../../../base/browser/ui/iconLabel/iconLabels.js\";\nimport { CompareResult } from \"../../../../../../base/common/arrays.js\";\nimport { BugIndicatingError } from \"../../../../../../base/common/errors.js\";\nimport { toDisposable } from \"../../../../../../base/common/lifecycle.js\";\nimport {\n\ttype IObservable,\n\tautorun,\n\tautorunWithStore,\n\tderived,\n} from \"../../../../../../base/common/observable.js\";\nimport {\n\ttype IModelDeltaDecoration,\n\tMinimapPosition,\n\tOverviewRulerLane,\n} from \"../../../../../../editor/common/model.js\";\nimport { localize } from \"../../../../../../nls.js\";\nimport { MenuId } from \"../../../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../../../platform/configuration/common/configuration.js\";\nimport { IContextKeyService } from \"../../../../../../platform/contextkey/common/contextkey.js\";\nimport { IInstantiationService } from \"../../../../../../platform/instantiation/common/instantiation.js\";\nimport { ILabelService } from \"../../../../../../platform/label/common/label.js\";\nimport { ctxIsMergeResultEditor } from \"../../../common/mergeEditor.js\";\nimport { LineRange } from \"../../model/lineRange.js\";\nimport { applyObservableDecorations, join } from \"../../utils.js\";\nimport {\n\thandledConflictMinimapOverViewRulerColor,\n\tunhandledConflictMinimapOverViewRulerColor,\n} from \"../colors.js\";\nimport { EditorGutter } from \"../editorGutter.js\";\nimport type { MergeEditorViewModel } from \"../viewModel.js\";\nimport {\n\tCodeEditorView,\n\tTitleMenu,\n\tcreateSelectionsAutorun,\n} from \"./codeEditorView.js\";\n\nexport class ResultCodeEditorView extends CodeEditorView {\n\tconstructor(\n\t\tviewModel: IObservable<MergeEditorViewModel | undefined>,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper(instantiationService, viewModel, configurationService);\n\n\t\tthis.editor.invokeWithinContext((accessor) => {\n\t\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\t\tconst isMergeResultEditor =\n\t\t\t\tctxIsMergeResultEditor.bindTo(contextKeyService);\n\t\t\tisMergeResultEditor.set(true);\n\t\t\tthis._register(toDisposable(() => isMergeResultEditor.reset()));\n\t\t});\n\n\t\tthis.htmlElements.gutterDiv.style.width = \"5px\";\n\t\tthis.htmlElements.root.classList.add(`result`);\n\n\t\tthis._register(\n\t\t\tautorunWithStore((reader, store) => {\n\t\t\t\t/** @description update checkboxes */\n\t\t\t\tif (this.checkboxesVisible.read(reader)) {\n\t\t\t\t\tstore.add(\n\t\t\t\t\t\tnew EditorGutter(\n\t\t\t\t\t\t\tthis.editor,\n\t\t\t\t\t\t\tthis.htmlElements.gutterDiv,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgetIntersectingGutterItems: (\n\t\t\t\t\t\t\t\t\trange,\n\t\t\t\t\t\t\t\t\treader,\n\t\t\t\t\t\t\t\t) => [],\n\t\t\t\t\t\t\t\tcreateView: (item, target) => {\n\t\t\t\t\t\t\t\t\tthrow new BugIndicatingError();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tautorun((reader) => {\n\t\t\t\t/** @description update labels & text model */\n\t\t\t\tconst vm = this.viewModel.read(reader);\n\t\t\t\tif (!vm) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.editor.setModel(vm.model.resultTextModel);\n\t\t\t\treset(\n\t\t\t\t\tthis.htmlElements.title,\n\t\t\t\t\t...renderLabelWithIcons(localize(\"result\", \"Result\")),\n\t\t\t\t);\n\t\t\t\treset(\n\t\t\t\t\tthis.htmlElements.description,\n\t\t\t\t\t...renderLabelWithIcons(\n\t\t\t\t\t\tthis._labelService.getUriLabel(\n\t\t\t\t\t\t\tvm.model.resultTextModel.uri,\n\t\t\t\t\t\t\t{ relative: true },\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\tconst remainingConflictsActionBar = this._register(\n\t\t\tnew ActionBar(this.htmlElements.detail),\n\t\t);\n\n\t\tthis._register(\n\t\t\tautorun((reader) => {\n\t\t\t\t/** @description update remainingConflicts label */\n\t\t\t\tconst vm = this.viewModel.read(reader);\n\t\t\t\tif (!vm) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst model = vm.model;\n\t\t\t\tif (!model) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst count = model.unhandledConflictsCount.read(reader);\n\n\t\t\t\tconst text =\n\t\t\t\t\tcount === 1\n\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\"mergeEditor.remainingConflicts\",\n\t\t\t\t\t\t\t\t\"{0} Conflict Remaining\",\n\t\t\t\t\t\t\t\tcount,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\"mergeEditor.remainingConflict\",\n\t\t\t\t\t\t\t\t\"{0} Conflicts Remaining \",\n\t\t\t\t\t\t\t\tcount,\n\t\t\t\t\t\t\t);\n\n\t\t\t\tremainingConflictsActionBar.clear();\n\t\t\t\tremainingConflictsActionBar.push({\n\t\t\t\t\tclass: undefined,\n\t\t\t\t\tenabled: count > 0,\n\t\t\t\t\tid: \"nextConflict\",\n\t\t\t\t\tlabel: text,\n\t\t\t\t\trun() {\n\t\t\t\t\t\tvm.model.telemetry.reportConflictCounterClicked();\n\t\t\t\t\t\tvm.goToNextModifiedBaseRange(\n\t\t\t\t\t\t\t(m) => !model.isHandled(m).get(),\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\ttooltip:\n\t\t\t\t\t\tcount > 0\n\t\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\t\"goToNextConflict\",\n\t\t\t\t\t\t\t\t\t\"Go to next conflict\",\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\t\"allConflictHandled\",\n\t\t\t\t\t\t\t\t\t\"All conflicts handled, the merge can be completed now.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tapplyObservableDecorations(this.editor, this.decorations),\n\t\t);\n\n\t\tthis._register(\n\t\t\tcreateSelectionsAutorun(this, (baseRange, viewModel) =>\n\t\t\t\tviewModel.model.translateBaseRangeToResult(baseRange),\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tinstantiationService.createInstance(\n\t\t\t\tTitleMenu,\n\t\t\t\tMenuId.MergeInputResultToolbar,\n\t\t\t\tthis.htmlElements.toolbar,\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate readonly decorations = derived(this, (reader) => {\n\t\tconst viewModel = this.viewModel.read(reader);\n\t\tif (!viewModel) {\n\t\t\treturn [];\n\t\t}\n\t\tconst model = viewModel.model;\n\t\tconst textModel = model.resultTextModel;\n\t\tconst result = new Array<IModelDeltaDecoration>();\n\n\t\tconst baseRangeWithStoreAndTouchingDiffs = join(\n\t\t\tmodel.modifiedBaseRanges.read(reader),\n\t\t\tmodel.baseResultDiffs.read(reader),\n\t\t\t(baseRange, diff) =>\n\t\t\t\tbaseRange.baseRange.touches(diff.inputRange)\n\t\t\t\t\t? CompareResult.neitherLessOrGreaterThan\n\t\t\t\t\t: LineRange.compareByStart(\n\t\t\t\t\t\t\tbaseRange.baseRange,\n\t\t\t\t\t\t\tdiff.inputRange,\n\t\t\t\t\t\t),\n\t\t);\n\n\t\tconst activeModifiedBaseRange =\n\t\t\tviewModel.activeModifiedBaseRange.read(reader);\n\n\t\tconst showNonConflictingChanges =\n\t\t\tviewModel.showNonConflictingChanges.read(reader);\n\n\t\tfor (const m of baseRangeWithStoreAndTouchingDiffs) {\n\t\t\tconst modifiedBaseRange = m.left;\n\n\t\t\tif (modifiedBaseRange) {\n\t\t\t\tconst blockClassNames = [\"merge-editor-block\"];\n\t\t\t\tlet blockPadding: [\n\t\t\t\t\ttop: number,\n\t\t\t\t\tright: number,\n\t\t\t\t\tbottom: number,\n\t\t\t\t\tleft: number,\n\t\t\t\t] = [0, 0, 0, 0];\n\t\t\t\tconst isHandled = model\n\t\t\t\t\t.isHandled(modifiedBaseRange)\n\t\t\t\t\t.read(reader);\n\t\t\t\tif (isHandled) {\n\t\t\t\t\tblockClassNames.push(\"handled\");\n\t\t\t\t}\n\t\t\t\tif (modifiedBaseRange === activeModifiedBaseRange) {\n\t\t\t\t\tblockClassNames.push(\"focused\");\n\t\t\t\t\tblockPadding = [0, 2, 0, 2];\n\t\t\t\t}\n\t\t\t\tif (modifiedBaseRange.isConflicting) {\n\t\t\t\t\tblockClassNames.push(\"conflicting\");\n\t\t\t\t}\n\t\t\t\tblockClassNames.push(\"result\");\n\n\t\t\t\tif (\n\t\t\t\t\t!modifiedBaseRange.isConflicting &&\n\t\t\t\t\t!showNonConflictingChanges &&\n\t\t\t\t\tisHandled\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst range = model.getLineRangeInResult(\n\t\t\t\t\tmodifiedBaseRange.baseRange,\n\t\t\t\t\treader,\n\t\t\t\t);\n\t\t\t\tresult.push({\n\t\t\t\t\trange: range.toInclusiveRangeOrEmpty(),\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tshowIfCollapsed: true,\n\t\t\t\t\t\tblockClassName: blockClassNames.join(\" \"),\n\t\t\t\t\t\tblockPadding,\n\t\t\t\t\t\tblockIsAfterEnd:\n\t\t\t\t\t\t\trange.startLineNumber > textModel.getLineCount(),\n\t\t\t\t\t\tdescription: \"Result Diff\",\n\t\t\t\t\t\tminimap: {\n\t\t\t\t\t\t\tposition: MinimapPosition.Gutter,\n\t\t\t\t\t\t\tcolor: {\n\t\t\t\t\t\t\t\tid: isHandled\n\t\t\t\t\t\t\t\t\t? handledConflictMinimapOverViewRulerColor\n\t\t\t\t\t\t\t\t\t: unhandledConflictMinimapOverViewRulerColor,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\toverviewRuler: modifiedBaseRange.isConflicting\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\tposition: OverviewRulerLane.Center,\n\t\t\t\t\t\t\t\t\tcolor: {\n\t\t\t\t\t\t\t\t\t\tid: isHandled\n\t\t\t\t\t\t\t\t\t\t\t? handledConflictMinimapOverViewRulerColor\n\t\t\t\t\t\t\t\t\t\t\t: unhandledConflictMinimapOverViewRulerColor,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (!modifiedBaseRange || modifiedBaseRange.isConflicting) {\n\t\t\t\tfor (const diff of m.rights) {\n\t\t\t\t\tconst range = diff.outputRange.toInclusiveRange();\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\trange,\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\tclassName: `merge-editor-diff result`,\n\t\t\t\t\t\t\t\tdescription: \"Merge Editor\",\n\t\t\t\t\t\t\t\tisWholeLine: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff.rangeMappings) {\n\t\t\t\t\t\tfor (const d of diff.rangeMappings) {\n\t\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\t\trange: d.outputRange,\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\tclassName: `merge-editor-diff-word result`,\n\t\t\t\t\t\t\t\t\tdescription: \"Merge Editor\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t});\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,aAAa;AACtB,SAAS,iBAAiB;AAC1B,SAAS,4BAA4B;AACrC,SAAS,qBAAqB;AAC9B,SAAS,0BAA0B;AACnC,SAAS,oBAAoB;AAC7B;AAAA,EAEC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP;AAAA,EAEC;AAAA,EACA;AAAA,OACM;AACP,SAAS,gBAAgB;AACzB,SAAS,cAAc;AACvB,SAAS,6BAA6B;AACtC,SAAS,0BAA0B;AACnC,SAAS,6BAA6B;AACtC,SAAS,qBAAqB;AAC9B,SAAS,8BAA8B;AACvC,SAAS,iBAAiB;AAC1B,SAAS,4BAA4B,YAAY;AACjD;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,oBAAoB;AAE7B;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAEA,IAAM,uBAAN,cAAmC,eAAe;AAAA,EACxD,YACC,WACuB,sBACS,eACT,sBACtB;AACD,UAAM,sBAAsB,WAAW,oBAAoB;AAH3B;AAKhC,SAAK,OAAO,oBAAoB,CAAC,aAAa;AAC7C,YAAM,oBAAoB,SAAS,IAAI,kBAAkB;AACzD,YAAM,sBACL,uBAAuB,OAAO,iBAAiB;AAChD,0BAAoB,IAAI,IAAI;AAC5B,WAAK,UAAU,aAAa,MAAM,oBAAoB,MAAM,CAAC,CAAC;AAAA,IAC/D,CAAC;AAED,SAAK,aAAa,UAAU,MAAM,QAAQ;AAC1C,SAAK,aAAa,KAAK,UAAU,IAAI,QAAQ;AAE7C,SAAK;AAAA,MACJ,iBAAiB,CAAC,QAAQ,UAAU;AAEnC,YAAI,KAAK,kBAAkB,KAAK,MAAM,GAAG;AACxC,gBAAM;AAAA,YACL,IAAI;AAAA,cACH,KAAK;AAAA,cACL,KAAK,aAAa;AAAA,cAClB;AAAA,gBACC,4BAA4B,wBAC3B,OACAA,YACI,CAAC,GAHsB;AAAA,gBAI5B,YAAY,wBAAC,MAAM,WAAW;AAC7B,wBAAM,IAAI,mBAAmB;AAAA,gBAC9B,GAFY;AAAA,cAGb;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAEA,SAAK;AAAA,MACJ,QAAQ,CAAC,WAAW;AAEnB,cAAM,KAAK,KAAK,UAAU,KAAK,MAAM;AACrC,YAAI,CAAC,IAAI;AACR;AAAA,QACD;AACA,aAAK,OAAO,SAAS,GAAG,MAAM,eAAe;AAC7C;AAAA,UACC,KAAK,aAAa;AAAA,UAClB,GAAG,qBAAqB,SAAS,UAAU,QAAQ,CAAC;AAAA,QACrD;AACA;AAAA,UACC,KAAK,aAAa;AAAA,UAClB,GAAG;AAAA,YACF,KAAK,cAAc;AAAA,cAClB,GAAG,MAAM,gBAAgB;AAAA,cACzB,EAAE,UAAU,KAAK;AAAA,YAClB;AAAA,UACD;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAEA,UAAM,8BAA8B,KAAK;AAAA,MACxC,IAAI,UAAU,KAAK,aAAa,MAAM;AAAA,IACvC;AAEA,SAAK;AAAA,MACJ,QAAQ,CAAC,WAAW;AAEnB,cAAM,KAAK,KAAK,UAAU,KAAK,MAAM;AACrC,YAAI,CAAC,IAAI;AACR;AAAA,QACD;AAEA,cAAM,QAAQ,GAAG;AACjB,YAAI,CAAC,OAAO;AACX;AAAA,QACD;AACA,cAAM,QAAQ,MAAM,wBAAwB,KAAK,MAAM;AAEvD,cAAM,OACL,UAAU,IACP;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACD,IACC;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAEH,oCAA4B,MAAM;AAClC,oCAA4B,KAAK;AAAA,UAChC,OAAO;AAAA,UACP,SAAS,QAAQ;AAAA,UACjB,IAAI;AAAA,UACJ,OAAO;AAAA,UACP,MAAM;AACL,eAAG,MAAM,UAAU,6BAA6B;AAChD,eAAG;AAAA,cACF,CAAC,MAAM,CAAC,MAAM,UAAU,CAAC,EAAE,IAAI;AAAA,YAChC;AAAA,UACD;AAAA,UACA,SACC,QAAQ,IACL;AAAA,YACA;AAAA,YACA;AAAA,UACD,IACC;AAAA,YACA;AAAA,YACA;AAAA,UACD;AAAA,QACJ,CAAC;AAAA,MACF,CAAC;AAAA,IACF;AAEA,SAAK;AAAA,MACJ,2BAA2B,KAAK,QAAQ,KAAK,WAAW;AAAA,IACzD;AAEA,SAAK;AAAA,MACJ;AAAA,QAAwB;AAAA,QAAM,CAAC,WAAWC,eACzCA,WAAU,MAAM,2BAA2B,SAAS;AAAA,MACrD;AAAA,IACD;AAEA,SAAK;AAAA,MACJ,qBAAqB;AAAA,QACpB;AAAA,QACA,OAAO;AAAA,QACP,KAAK,aAAa;AAAA,MACnB;AAAA,IACD;AAAA,EACD;AAAA,EAxLD,OA2CyD;AAAA;AAAA;AAAA,EA+IvC,cAAc,QAAQ,MAAM,CAAC,WAAW;AACxD,UAAM,YAAY,KAAK,UAAU,KAAK,MAAM;AAC5C,QAAI,CAAC,WAAW;AACf,aAAO,CAAC;AAAA,IACT;AACA,UAAM,QAAQ,UAAU;AACxB,UAAM,YAAY,MAAM;AACxB,UAAM,SAAS,IAAI,MAA6B;AAEhD,UAAM,qCAAqC;AAAA,MAC1C,MAAM,mBAAmB,KAAK,MAAM;AAAA,MACpC,MAAM,gBAAgB,KAAK,MAAM;AAAA,MACjC,CAAC,WAAW,SACX,UAAU,UAAU,QAAQ,KAAK,UAAU,IACxC,cAAc,2BACd,UAAU;AAAA,QACV,UAAU;AAAA,QACV,KAAK;AAAA,MACN;AAAA,IACJ;AAEA,UAAM,0BACL,UAAU,wBAAwB,KAAK,MAAM;AAE9C,UAAM,4BACL,UAAU,0BAA0B,KAAK,MAAM;AAEhD,eAAW,KAAK,oCAAoC;AACnD,YAAM,oBAAoB,EAAE;AAE5B,UAAI,mBAAmB;AACtB,cAAM,kBAAkB,CAAC,oBAAoB;AAC7C,YAAI,eAKA,CAAC,GAAG,GAAG,GAAG,CAAC;AACf,cAAM,YAAY,MAChB,UAAU,iBAAiB,EAC3B,KAAK,MAAM;AACb,YAAI,WAAW;AACd,0BAAgB,KAAK,SAAS;AAAA,QAC/B;AACA,YAAI,sBAAsB,yBAAyB;AAClD,0BAAgB,KAAK,SAAS;AAC9B,yBAAe,CAAC,GAAG,GAAG,GAAG,CAAC;AAAA,QAC3B;AACA,YAAI,kBAAkB,eAAe;AACpC,0BAAgB,KAAK,aAAa;AAAA,QACnC;AACA,wBAAgB,KAAK,QAAQ;AAE7B,YACC,CAAC,kBAAkB,iBACnB,CAAC,6BACD,WACC;AACD;AAAA,QACD;AAEA,cAAM,QAAQ,MAAM;AAAA,UACnB,kBAAkB;AAAA,UAClB;AAAA,QACD;AACA,eAAO,KAAK;AAAA,UACX,OAAO,MAAM,wBAAwB;AAAA,UACrC,SAAS;AAAA,YACR,iBAAiB;AAAA,YACjB,gBAAgB,gBAAgB,KAAK,GAAG;AAAA,YACxC;AAAA,YACA,iBACC,MAAM,kBAAkB,UAAU,aAAa;AAAA,YAChD,aAAa;AAAA,YACb,SAAS;AAAA,cACR,UAAU,gBAAgB;AAAA,cAC1B,OAAO;AAAA,gBACN,IAAI,YACD,2CACA;AAAA,cACJ;AAAA,YACD;AAAA,YACA,eAAe,kBAAkB,gBAC9B;AAAA,cACA,UAAU,kBAAkB;AAAA,cAC5B,OAAO;AAAA,gBACN,IAAI,YACD,2CACA;AAAA,cACJ;AAAA,YACD,IACC;AAAA,UACJ;AAAA,QACD,CAAC;AAAA,MACF;AAEA,UAAI,CAAC,qBAAqB,kBAAkB,eAAe;AAC1D,mBAAW,QAAQ,EAAE,QAAQ;AAC5B,gBAAM,QAAQ,KAAK,YAAY,iBAAiB;AAChD,cAAI,OAAO;AACV,mBAAO,KAAK;AAAA,cACX;AAAA,cACA,SAAS;AAAA,gBACR,WAAW;AAAA,gBACX,aAAa;AAAA,gBACb,aAAa;AAAA,cACd;AAAA,YACD,CAAC;AAAA,UACF;AAEA,cAAI,KAAK,eAAe;AACvB,uBAAW,KAAK,KAAK,eAAe;AACnC,qBAAO,KAAK;AAAA,gBACX,OAAO,EAAE;AAAA,gBACT,SAAS;AAAA,kBACR,WAAW;AAAA,kBACX,aAAa;AAAA,gBACd;AAAA,cACD,CAAC;AAAA,YACF;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AACA,WAAO;AAAA,EACR,CAAC;AACF;AA7Qa,uBAAN;AAAA,EAGJ;AAAA,EACA;AAAA,EACA;AAAA,GALU;",
  "names": ["reader", "viewModel"]
}
