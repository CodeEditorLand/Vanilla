{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/mergeEditor/browser/view/editors/resultCodeEditorView.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { reset } from '../../../../../../base/browser/dom.js';\nimport { ActionBar } from '../../../../../../base/browser/ui/actionbar/actionbar.js';\nimport { renderLabelWithIcons } from '../../../../../../base/browser/ui/iconLabel/iconLabels.js';\nimport { CompareResult } from '../../../../../../base/common/arrays.js';\nimport { BugIndicatingError } from '../../../../../../base/common/errors.js';\nimport { toDisposable } from '../../../../../../base/common/lifecycle.js';\nimport { autorun, autorunWithStore, derived, IObservable } from '../../../../../../base/common/observable.js';\nimport { IModelDeltaDecoration, MinimapPosition, OverviewRulerLane } from '../../../../../../editor/common/model.js';\nimport { localize } from '../../../../../../nls.js';\nimport { MenuId } from '../../../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../../../platform/instantiation/common/instantiation.js';\nimport { ILabelService } from '../../../../../../platform/label/common/label.js';\nimport { LineRange } from '../../model/lineRange.js';\nimport { applyObservableDecorations, join } from '../../utils.js';\nimport { handledConflictMinimapOverViewRulerColor, unhandledConflictMinimapOverViewRulerColor } from '../colors.js';\nimport { EditorGutter } from '../editorGutter.js';\nimport { MergeEditorViewModel } from '../viewModel.js';\nimport { ctxIsMergeResultEditor } from '../../../common/mergeEditor.js';\nimport { CodeEditorView, createSelectionsAutorun, TitleMenu } from './codeEditorView.js';\n\nexport class ResultCodeEditorView extends CodeEditorView {\n\tconstructor(\n\t\tviewModel: IObservable<MergeEditorViewModel | undefined>,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper(instantiationService, viewModel, configurationService);\n\n\t\tthis.editor.invokeWithinContext(accessor => {\n\t\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\t\tconst isMergeResultEditor = ctxIsMergeResultEditor.bindTo(contextKeyService);\n\t\t\tisMergeResultEditor.set(true);\n\t\t\tthis._register(toDisposable(() => isMergeResultEditor.reset()));\n\t\t});\n\n\t\tthis.htmlElements.gutterDiv.style.width = '5px';\n\t\tthis.htmlElements.root.classList.add(`result`);\n\n\t\tthis._register(\n\t\t\tautorunWithStore((reader, store) => {\n\t\t\t\t/** @description update checkboxes */\n\t\t\t\tif (this.checkboxesVisible.read(reader)) {\n\t\t\t\t\tstore.add(new EditorGutter(this.editor, this.htmlElements.gutterDiv, {\n\t\t\t\t\t\tgetIntersectingGutterItems: (range, reader) => [],\n\t\t\t\t\t\tcreateView: (item, target) => { throw new BugIndicatingError(); },\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description update labels & text model */\n\t\t\tconst vm = this.viewModel.read(reader);\n\t\t\tif (!vm) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.editor.setModel(vm.model.resultTextModel);\n\t\t\treset(this.htmlElements.title, ...renderLabelWithIcons(localize('result', 'Result')));\n\t\t\treset(this.htmlElements.description, ...renderLabelWithIcons(this._labelService.getUriLabel(vm.model.resultTextModel.uri, { relative: true })));\n\t\t}));\n\n\n\t\tconst remainingConflictsActionBar = this._register(new ActionBar(this.htmlElements.detail));\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description update remainingConflicts label */\n\t\t\tconst vm = this.viewModel.read(reader);\n\t\t\tif (!vm) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst model = vm.model;\n\t\t\tif (!model) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst count = model.unhandledConflictsCount.read(reader);\n\n\t\t\tconst text = count === 1\n\t\t\t\t? localize(\n\t\t\t\t\t'mergeEditor.remainingConflicts',\n\t\t\t\t\t'{0} Conflict Remaining',\n\t\t\t\t\tcount\n\t\t\t\t)\n\t\t\t\t: localize(\n\t\t\t\t\t'mergeEditor.remainingConflict',\n\t\t\t\t\t'{0} Conflicts Remaining ',\n\t\t\t\t\tcount\n\t\t\t\t);\n\n\t\t\tremainingConflictsActionBar.clear();\n\t\t\tremainingConflictsActionBar.push({\n\t\t\t\tclass: undefined,\n\t\t\t\tenabled: count > 0,\n\t\t\t\tid: 'nextConflict',\n\t\t\t\tlabel: text,\n\t\t\t\trun() {\n\t\t\t\t\tvm.model.telemetry.reportConflictCounterClicked();\n\t\t\t\t\tvm.goToNextModifiedBaseRange(m => !model.isHandled(m).get());\n\t\t\t\t},\n\t\t\t\ttooltip: count > 0\n\t\t\t\t\t? localize('goToNextConflict', 'Go to next conflict')\n\t\t\t\t\t: localize('allConflictHandled', 'All conflicts handled, the merge can be completed now.'),\n\t\t\t});\n\t\t}));\n\n\n\t\tthis._register(applyObservableDecorations(this.editor, this.decorations));\n\n\t\tthis._register(\n\t\t\tcreateSelectionsAutorun(this, (baseRange, viewModel) =>\n\t\t\t\tviewModel.model.translateBaseRangeToResult(baseRange)\n\t\t\t)\n\t\t);\n\n\t\tthis._register(\n\t\t\tinstantiationService.createInstance(\n\t\t\t\tTitleMenu,\n\t\t\t\tMenuId.MergeInputResultToolbar,\n\t\t\t\tthis.htmlElements.toolbar\n\t\t\t)\n\t\t);\n\t}\n\n\tprivate readonly decorations = derived(this, reader => {\n\t\tconst viewModel = this.viewModel.read(reader);\n\t\tif (!viewModel) {\n\t\t\treturn [];\n\t\t}\n\t\tconst model = viewModel.model;\n\t\tconst textModel = model.resultTextModel;\n\t\tconst result = new Array<IModelDeltaDecoration>();\n\n\t\tconst baseRangeWithStoreAndTouchingDiffs = join(\n\t\t\tmodel.modifiedBaseRanges.read(reader),\n\t\t\tmodel.baseResultDiffs.read(reader),\n\t\t\t(baseRange, diff) => baseRange.baseRange.touches(diff.inputRange)\n\t\t\t\t? CompareResult.neitherLessOrGreaterThan\n\t\t\t\t: LineRange.compareByStart(\n\t\t\t\t\tbaseRange.baseRange,\n\t\t\t\t\tdiff.inputRange\n\t\t\t\t)\n\t\t);\n\n\t\tconst activeModifiedBaseRange = viewModel.activeModifiedBaseRange.read(reader);\n\n\t\tconst showNonConflictingChanges = viewModel.showNonConflictingChanges.read(reader);\n\n\t\tfor (const m of baseRangeWithStoreAndTouchingDiffs) {\n\t\t\tconst modifiedBaseRange = m.left;\n\n\t\t\tif (modifiedBaseRange) {\n\t\t\t\tconst blockClassNames = ['merge-editor-block'];\n\t\t\t\tlet blockPadding: [top: number, right: number, bottom: number, left: number] = [0, 0, 0, 0];\n\t\t\t\tconst isHandled = model.isHandled(modifiedBaseRange).read(reader);\n\t\t\t\tif (isHandled) {\n\t\t\t\t\tblockClassNames.push('handled');\n\t\t\t\t}\n\t\t\t\tif (modifiedBaseRange === activeModifiedBaseRange) {\n\t\t\t\t\tblockClassNames.push('focused');\n\t\t\t\t\tblockPadding = [0, 2, 0, 2];\n\t\t\t\t}\n\t\t\t\tif (modifiedBaseRange.isConflicting) {\n\t\t\t\t\tblockClassNames.push('conflicting');\n\t\t\t\t}\n\t\t\t\tblockClassNames.push('result');\n\n\t\t\t\tif (!modifiedBaseRange.isConflicting && !showNonConflictingChanges && isHandled) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst range = model.getLineRangeInResult(modifiedBaseRange.baseRange, reader);\n\t\t\t\tresult.push({\n\t\t\t\t\trange: range.toInclusiveRangeOrEmpty(),\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tshowIfCollapsed: true,\n\t\t\t\t\t\tblockClassName: blockClassNames.join(' '),\n\t\t\t\t\t\tblockPadding,\n\t\t\t\t\t\tblockIsAfterEnd: range.startLineNumber > textModel.getLineCount(),\n\t\t\t\t\t\tdescription: 'Result Diff',\n\t\t\t\t\t\tminimap: {\n\t\t\t\t\t\t\tposition: MinimapPosition.Gutter,\n\t\t\t\t\t\t\tcolor: { id: isHandled ? handledConflictMinimapOverViewRulerColor : unhandledConflictMinimapOverViewRulerColor },\n\t\t\t\t\t\t},\n\t\t\t\t\t\toverviewRuler: modifiedBaseRange.isConflicting ? {\n\t\t\t\t\t\t\tposition: OverviewRulerLane.Center,\n\t\t\t\t\t\t\tcolor: { id: isHandled ? handledConflictMinimapOverViewRulerColor : unhandledConflictMinimapOverViewRulerColor },\n\t\t\t\t\t\t} : undefined\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (!modifiedBaseRange || modifiedBaseRange.isConflicting) {\n\t\t\t\tfor (const diff of m.rights) {\n\t\t\t\t\tconst range = diff.outputRange.toInclusiveRange();\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\trange,\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\tclassName: `merge-editor-diff result`,\n\t\t\t\t\t\t\t\tdescription: 'Merge Editor',\n\t\t\t\t\t\t\t\tisWholeLine: true,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff.rangeMappings) {\n\t\t\t\t\t\tfor (const d of diff.rangeMappings) {\n\t\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\t\trange: d.outputRange,\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\tclassName: `merge-editor-diff-word result`,\n\t\t\t\t\t\t\t\t\tdescription: 'Merge Editor'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t});\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,aAAa;AACtB,SAAS,iBAAiB;AAC1B,SAAS,4BAA4B;AACrC,SAAS,qBAAqB;AAC9B,SAAS,0BAA0B;AACnC,SAAS,oBAAoB;AAC7B,SAAS,SAAS,kBAAkB,SAAS,mBAAmB;AAChE,SAAS,uBAAuB,iBAAiB,yBAAyB;AAC1E,SAAS,gBAAgB;AACzB,SAAS,cAAc;AACvB,SAAS,6BAA6B;AACtC,SAAS,0BAA0B;AACnC,SAAS,6BAA6B;AACtC,SAAS,qBAAqB;AAC9B,SAAS,iBAAiB;AAC1B,SAAS,4BAA4B,YAAY;AACjD,SAAS,0CAA0C,kDAAkD;AACrG,SAAS,oBAAoB;AAC7B,SAAS,4BAA4B;AACrC,SAAS,8BAA8B;AACvC,SAAS,gBAAgB,yBAAyB,iBAAiB;AAE5D,IAAM,uBAAN,cAAmC,eAAe;AAAA,EACxD,YACC,WACuB,sBACS,eACT,sBACtB;AACD,UAAM,sBAAsB,WAAW,oBAAoB;AAH3B;AAKhC,SAAK,OAAO,oBAAoB,cAAY;AAC3C,YAAM,oBAAoB,SAAS,IAAI,kBAAkB;AACzD,YAAM,sBAAsB,uBAAuB,OAAO,iBAAiB;AAC3E,0BAAoB,IAAI,IAAI;AAC5B,WAAK,UAAU,aAAa,MAAM,oBAAoB,MAAM,CAAC,CAAC;AAAA,IAC/D,CAAC;AAED,SAAK,aAAa,UAAU,MAAM,QAAQ;AAC1C,SAAK,aAAa,KAAK,UAAU,IAAI,QAAQ;AAE7C,SAAK;AAAA,MACJ,iBAAiB,CAAC,QAAQ,UAAU;AAEnC,YAAI,KAAK,kBAAkB,KAAK,MAAM,GAAG;AACxC,gBAAM,IAAI,IAAI,aAAa,KAAK,QAAQ,KAAK,aAAa,WAAW;AAAA,YACpE,4BAA4B,wBAAC,OAAOA,YAAW,CAAC,GAApB;AAAA,YAC5B,YAAY,wBAAC,MAAM,WAAW;AAAE,oBAAM,IAAI,mBAAmB;AAAA,YAAG,GAApD;AAAA,UACb,CAAC,CAAC;AAAA,QACH;AAAA,MACD,CAAC;AAAA,IACF;AAEA,SAAK,UAAU,QAAQ,YAAU;AAEhC,YAAM,KAAK,KAAK,UAAU,KAAK,MAAM;AACrC,UAAI,CAAC,IAAI;AACR;AAAA,MACD;AACA,WAAK,OAAO,SAAS,GAAG,MAAM,eAAe;AAC7C,YAAM,KAAK,aAAa,OAAO,GAAG,qBAAqB,SAAS,UAAU,QAAQ,CAAC,CAAC;AACpF,YAAM,KAAK,aAAa,aAAa,GAAG,qBAAqB,KAAK,cAAc,YAAY,GAAG,MAAM,gBAAgB,KAAK,EAAE,UAAU,KAAK,CAAC,CAAC,CAAC;AAAA,IAC/I,CAAC,CAAC;AAGF,UAAM,8BAA8B,KAAK,UAAU,IAAI,UAAU,KAAK,aAAa,MAAM,CAAC;AAE1F,SAAK,UAAU,QAAQ,YAAU;AAEhC,YAAM,KAAK,KAAK,UAAU,KAAK,MAAM;AACrC,UAAI,CAAC,IAAI;AACR;AAAA,MACD;AAEA,YAAM,QAAQ,GAAG;AACjB,UAAI,CAAC,OAAO;AACX;AAAA,MACD;AACA,YAAM,QAAQ,MAAM,wBAAwB,KAAK,MAAM;AAEvD,YAAM,OAAO,UAAU,IACpB;AAAA,QACD;AAAA,QACA;AAAA,QACA;AAAA,MACD,IACE;AAAA,QACD;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAED,kCAA4B,MAAM;AAClC,kCAA4B,KAAK;AAAA,QAChC,OAAO;AAAA,QACP,SAAS,QAAQ;AAAA,QACjB,IAAI;AAAA,QACJ,OAAO;AAAA,QACP,MAAM;AACL,aAAG,MAAM,UAAU,6BAA6B;AAChD,aAAG,0BAA0B,OAAK,CAAC,MAAM,UAAU,CAAC,EAAE,IAAI,CAAC;AAAA,QAC5D;AAAA,QACA,SAAS,QAAQ,IACd,SAAS,oBAAoB,qBAAqB,IAClD,SAAS,sBAAsB,wDAAwD;AAAA,MAC3F,CAAC;AAAA,IACF,CAAC,CAAC;AAGF,SAAK,UAAU,2BAA2B,KAAK,QAAQ,KAAK,WAAW,CAAC;AAExE,SAAK;AAAA,MACJ;AAAA,QAAwB;AAAA,QAAM,CAAC,WAAWC,eACzCA,WAAU,MAAM,2BAA2B,SAAS;AAAA,MACrD;AAAA,IACD;AAEA,SAAK;AAAA,MACJ,qBAAqB;AAAA,QACpB;AAAA,QACA,OAAO;AAAA,QACP,KAAK,aAAa;AAAA,MACnB;AAAA,IACD;AAAA,EACD;AAAA,EAjID,OA2ByD;AAAA;AAAA;AAAA,EAwGvC,cAAc,QAAQ,MAAM,YAAU;AACtD,UAAM,YAAY,KAAK,UAAU,KAAK,MAAM;AAC5C,QAAI,CAAC,WAAW;AACf,aAAO,CAAC;AAAA,IACT;AACA,UAAM,QAAQ,UAAU;AACxB,UAAM,YAAY,MAAM;AACxB,UAAM,SAAS,IAAI,MAA6B;AAEhD,UAAM,qCAAqC;AAAA,MAC1C,MAAM,mBAAmB,KAAK,MAAM;AAAA,MACpC,MAAM,gBAAgB,KAAK,MAAM;AAAA,MACjC,CAAC,WAAW,SAAS,UAAU,UAAU,QAAQ,KAAK,UAAU,IAC7D,cAAc,2BACd,UAAU;AAAA,QACX,UAAU;AAAA,QACV,KAAK;AAAA,MACN;AAAA,IACF;AAEA,UAAM,0BAA0B,UAAU,wBAAwB,KAAK,MAAM;AAE7E,UAAM,4BAA4B,UAAU,0BAA0B,KAAK,MAAM;AAEjF,eAAW,KAAK,oCAAoC;AACnD,YAAM,oBAAoB,EAAE;AAE5B,UAAI,mBAAmB;AACtB,cAAM,kBAAkB,CAAC,oBAAoB;AAC7C,YAAI,eAA2E,CAAC,GAAG,GAAG,GAAG,CAAC;AAC1F,cAAM,YAAY,MAAM,UAAU,iBAAiB,EAAE,KAAK,MAAM;AAChE,YAAI,WAAW;AACd,0BAAgB,KAAK,SAAS;AAAA,QAC/B;AACA,YAAI,sBAAsB,yBAAyB;AAClD,0BAAgB,KAAK,SAAS;AAC9B,yBAAe,CAAC,GAAG,GAAG,GAAG,CAAC;AAAA,QAC3B;AACA,YAAI,kBAAkB,eAAe;AACpC,0BAAgB,KAAK,aAAa;AAAA,QACnC;AACA,wBAAgB,KAAK,QAAQ;AAE7B,YAAI,CAAC,kBAAkB,iBAAiB,CAAC,6BAA6B,WAAW;AAChF;AAAA,QACD;AAEA,cAAM,QAAQ,MAAM,qBAAqB,kBAAkB,WAAW,MAAM;AAC5E,eAAO,KAAK;AAAA,UACX,OAAO,MAAM,wBAAwB;AAAA,UACrC,SAAS;AAAA,YACR,iBAAiB;AAAA,YACjB,gBAAgB,gBAAgB,KAAK,GAAG;AAAA,YACxC;AAAA,YACA,iBAAiB,MAAM,kBAAkB,UAAU,aAAa;AAAA,YAChE,aAAa;AAAA,YACb,SAAS;AAAA,cACR,UAAU,gBAAgB;AAAA,cAC1B,OAAO,EAAE,IAAI,YAAY,2CAA2C,2CAA2C;AAAA,YAChH;AAAA,YACA,eAAe,kBAAkB,gBAAgB;AAAA,cAChD,UAAU,kBAAkB;AAAA,cAC5B,OAAO,EAAE,IAAI,YAAY,2CAA2C,2CAA2C;AAAA,YAChH,IAAI;AAAA,UACL;AAAA,QACD,CAAC;AAAA,MACF;AAEA,UAAI,CAAC,qBAAqB,kBAAkB,eAAe;AAC1D,mBAAW,QAAQ,EAAE,QAAQ;AAC5B,gBAAM,QAAQ,KAAK,YAAY,iBAAiB;AAChD,cAAI,OAAO;AACV,mBAAO,KAAK;AAAA,cACX;AAAA,cACA,SAAS;AAAA,gBACR,WAAW;AAAA,gBACX,aAAa;AAAA,gBACb,aAAa;AAAA,cACd;AAAA,YACD,CAAC;AAAA,UACF;AAEA,cAAI,KAAK,eAAe;AACvB,uBAAW,KAAK,KAAK,eAAe;AACnC,qBAAO,KAAK;AAAA,gBACX,OAAO,EAAE;AAAA,gBACT,SAAS;AAAA,kBACR,WAAW;AAAA,kBACX,aAAa;AAAA,gBACd;AAAA,cACD,CAAC;AAAA,YACF;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AACA,WAAO;AAAA,EACR,CAAC;AACF;AA1Ma,uBAAN;AAAA,EAGJ;AAAA,EACA;AAAA,EACA;AAAA,GALU;",
  "names": ["reader", "viewModel"]
}
