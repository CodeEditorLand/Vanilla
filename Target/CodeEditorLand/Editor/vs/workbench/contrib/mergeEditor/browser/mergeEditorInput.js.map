{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/mergeEditor/browser/mergeEditorInput.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { assertFn } from \"../../../../base/common/assert.js\";\nimport { autorun } from \"../../../../base/common/observable.js\";\nimport { isEqual } from \"../../../../base/common/resources.js\";\nimport { isDefined } from \"../../../../base/common/types.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { ITextResourceConfigurationService } from \"../../../../editor/common/services/textResourceConfiguration.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ILabelService } from \"../../../../platform/label/common/label.js\";\nimport {\n\tDEFAULT_EDITOR_ASSOCIATION,\n\tEditorInputCapabilities,\n\ttype IResourceMergeEditorInput,\n\ttype IRevertOptions,\n\ttype IUntypedEditorInput,\n\tisResourceMergeEditorInput,\n} from \"../../../common/editor.js\";\nimport type {\n\tEditorInput,\n\tIEditorCloseHandler,\n} from \"../../../common/editor/editorInput.js\";\nimport { AbstractTextResourceEditorInput } from \"../../../common/editor/textResourceEditorInput.js\";\nimport { ICustomEditorLabelService } from \"../../../services/editor/common/customEditorLabelService.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { IFilesConfigurationService } from \"../../../services/filesConfiguration/common/filesConfigurationService.js\";\nimport {\n\ttype ILanguageSupport,\n\ttype ITextFileSaveOptions,\n\tITextFileService,\n} from \"../../../services/textfile/common/textfiles.js\";\nimport {\n\ttype IMergeEditorInputModel,\n\tTempFileMergeEditorModeFactory,\n\tWorkspaceMergeEditorModeFactory,\n} from \"./mergeEditorInputModel.js\";\nimport { MergeEditorTelemetry } from \"./telemetry.js\";\n\nexport class MergeEditorInputData {\n\tconstructor(\n\t\treadonly uri: URI,\n\t\treadonly title: string | undefined,\n\t\treadonly detail: string | undefined,\n\t\treadonly description: string | undefined,\n\t) {}\n}\n\nexport class MergeEditorInput\n\textends AbstractTextResourceEditorInput\n\timplements ILanguageSupport\n{\n\tstatic readonly ID = \"mergeEditor.Input\";\n\n\tprivate _inputModel?: IMergeEditorInputModel;\n\n\toverride closeHandler: IEditorCloseHandler = {\n\t\tshowConfirm: () => this._inputModel?.shouldConfirmClose() ?? false,\n\t\tconfirm: async (editors) => {\n\t\t\tassertFn(() =>\n\t\t\t\teditors.every((e) => e.editor instanceof MergeEditorInput),\n\t\t\t);\n\t\t\tconst inputModels = editors\n\t\t\t\t.map((e) => (e.editor as MergeEditorInput)._inputModel)\n\t\t\t\t.filter(isDefined);\n\t\t\treturn await this._inputModel!.confirmClose(inputModels);\n\t\t},\n\t};\n\n\tprivate get useWorkingCopy() {\n\t\treturn (\n\t\t\tthis.configurationService.getValue(\"mergeEditor.useWorkingCopy\") ??\n\t\t\tfalse\n\t\t);\n\t}\n\n\tconstructor(\n\t\tpublic readonly base: URI,\n\t\tpublic readonly input1: MergeEditorInputData,\n\t\tpublic readonly input2: MergeEditorInputData,\n\t\tpublic readonly result: URI,\n\t\t@IInstantiationService private readonly _instaService: IInstantiationService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@ITextFileService textFileService: ITextFileService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IFilesConfigurationService filesConfigurationService: IFilesConfigurationService,\n\t\t@ITextResourceConfigurationService textResourceConfigurationService: ITextResourceConfigurationService,\n\t\t@ICustomEditorLabelService customEditorLabelService: ICustomEditorLabelService,\n\t) {\n\t\tsuper(result, undefined, editorService, textFileService, labelService, fileService, filesConfigurationService, textResourceConfigurationService, customEditorLabelService);\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\toverride get typeId(): string {\n\t\treturn MergeEditorInput.ID;\n\t}\n\n\toverride get editorId(): string {\n\t\treturn DEFAULT_EDITOR_ASSOCIATION.id;\n\t}\n\n\toverride get capabilities(): EditorInputCapabilities {\n\t\tlet capabilities =\n\t\t\tsuper.capabilities | EditorInputCapabilities.MultipleEditors;\n\t\tif (this.useWorkingCopy) {\n\t\t\tcapabilities |= EditorInputCapabilities.Untitled;\n\t\t}\n\t\treturn capabilities;\n\t}\n\n\toverride getName(): string {\n\t\treturn localize(\"name\", \"Merging: {0}\", super.getName());\n\t}\n\n\tprivate readonly mergeEditorModeFactory = this._instaService.createInstance(\n\t\tthis.useWorkingCopy\n\t\t\t? TempFileMergeEditorModeFactory\n\t\t\t: WorkspaceMergeEditorModeFactory,\n\t\tthis._instaService.createInstance(MergeEditorTelemetry),\n\t);\n\n\toverride async resolve(): Promise<IMergeEditorInputModel> {\n\t\tif (!this._inputModel) {\n\t\t\tconst inputModel = this._register(\n\t\t\t\tawait this.mergeEditorModeFactory.createInputModel({\n\t\t\t\t\tbase: this.base,\n\t\t\t\t\tinput1: this.input1,\n\t\t\t\t\tinput2: this.input2,\n\t\t\t\t\tresult: this.result,\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis._inputModel = inputModel;\n\n\t\t\tthis._register(\n\t\t\t\tautorun((reader) => {\n\t\t\t\t\t/** @description fire dirty event */\n\t\t\t\t\tinputModel.isDirty.read(reader);\n\t\t\t\t\tthis._onDidChangeDirty.fire();\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tawait this._inputModel.model.onInitialized;\n\t\t}\n\n\t\treturn this._inputModel;\n\t}\n\n\tpublic async accept(): Promise<void> {\n\t\tawait this._inputModel?.accept();\n\t}\n\n\toverride async save(\n\t\tgroup: number,\n\t\toptions?: ITextFileSaveOptions | undefined,\n\t): Promise<IUntypedEditorInput | undefined> {\n\t\tawait this._inputModel?.save(options);\n\t\treturn undefined;\n\t}\n\n\toverride toUntyped(): IResourceMergeEditorInput {\n\t\treturn {\n\t\t\tinput1: {\n\t\t\t\tresource: this.input1.uri,\n\t\t\t\tlabel: this.input1.title,\n\t\t\t\tdescription: this.input1.description,\n\t\t\t\tdetail: this.input1.detail,\n\t\t\t},\n\t\t\tinput2: {\n\t\t\t\tresource: this.input2.uri,\n\t\t\t\tlabel: this.input2.title,\n\t\t\t\tdescription: this.input2.description,\n\t\t\t\tdetail: this.input2.detail,\n\t\t\t},\n\t\t\tbase: { resource: this.base },\n\t\t\tresult: { resource: this.result },\n\t\t\toptions: {\n\t\t\t\toverride: this.typeId,\n\t\t\t},\n\t\t};\n\t}\n\n\toverride matches(otherInput: EditorInput | IUntypedEditorInput): boolean {\n\t\tif (this === otherInput) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherInput instanceof MergeEditorInput) {\n\t\t\treturn (\n\t\t\t\tisEqual(this.base, otherInput.base) &&\n\t\t\t\tisEqual(this.input1.uri, otherInput.input1.uri) &&\n\t\t\t\tisEqual(this.input2.uri, otherInput.input2.uri) &&\n\t\t\t\tisEqual(this.result, otherInput.result)\n\t\t\t);\n\t\t}\n\t\tif (isResourceMergeEditorInput(otherInput)) {\n\t\t\treturn (\n\t\t\t\t(this.editorId === otherInput.options?.override ||\n\t\t\t\t\totherInput.options?.override === undefined) &&\n\t\t\t\tisEqual(this.base, otherInput.base.resource) &&\n\t\t\t\tisEqual(this.input1.uri, otherInput.input1.resource) &&\n\t\t\t\tisEqual(this.input2.uri, otherInput.input2.resource) &&\n\t\t\t\tisEqual(this.result, otherInput.result.resource)\n\t\t\t);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\toverride async revert(\n\t\tgroup: number,\n\t\toptions?: IRevertOptions,\n\t): Promise<void> {\n\t\treturn this._inputModel?.revert(options);\n\t}\n\n\t// ---- FileEditorInput\n\n\toverride isDirty(): boolean {\n\t\treturn this._inputModel?.isDirty.get() ?? false;\n\t}\n\n\tsetLanguageId(languageId: string, source?: string): void {\n\t\tthis._inputModel?.model.setLanguageId(languageId, source);\n\t}\n\n\t// implement get/set encoding\n}\n"],
  "mappings": "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",
  "names": []
}
