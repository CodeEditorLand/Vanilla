{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/mergeEditor/browser/mergeEditorInput.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { assertFn } from '../../../../base/common/assert.js';\nimport { autorun } from '../../../../base/common/observable.js';\nimport { isEqual } from '../../../../base/common/resources.js';\nimport { isDefined } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ITextResourceConfigurationService } from '../../../../editor/common/services/textResourceConfiguration.js';\nimport { localize } from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { DEFAULT_EDITOR_ASSOCIATION, EditorInputCapabilities, IResourceMergeEditorInput, IRevertOptions, isResourceMergeEditorInput, IUntypedEditorInput } from '../../../common/editor.js';\nimport { EditorInput, IEditorCloseHandler } from '../../../common/editor/editorInput.js';\nimport { ICustomEditorLabelService } from '../../../services/editor/common/customEditorLabelService.js';\nimport { AbstractTextResourceEditorInput } from '../../../common/editor/textResourceEditorInput.js';\nimport { IMergeEditorInputModel, TempFileMergeEditorModeFactory, WorkspaceMergeEditorModeFactory } from './mergeEditorInputModel.js';\nimport { MergeEditorTelemetry } from './telemetry.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IFilesConfigurationService } from '../../../services/filesConfiguration/common/filesConfigurationService.js';\nimport { ILanguageSupport, ITextFileSaveOptions, ITextFileService } from '../../../services/textfile/common/textfiles.js';\n\nexport class MergeEditorInputData {\n\tconstructor(\n\t\treadonly uri: URI,\n\t\treadonly title: string | undefined,\n\t\treadonly detail: string | undefined,\n\t\treadonly description: string | undefined,\n\t) { }\n}\n\nexport class MergeEditorInput extends AbstractTextResourceEditorInput implements ILanguageSupport {\n\tstatic readonly ID = 'mergeEditor.Input';\n\n\tprivate _inputModel?: IMergeEditorInputModel;\n\n\toverride closeHandler: IEditorCloseHandler = {\n\t\tshowConfirm: () => this._inputModel?.shouldConfirmClose() ?? false,\n\t\tconfirm: async (editors) => {\n\t\t\tassertFn(() => editors.every(e => e.editor instanceof MergeEditorInput));\n\t\t\tconst inputModels = editors.map(e => (e.editor as MergeEditorInput)._inputModel).filter(isDefined);\n\t\t\treturn await this._inputModel!.confirmClose(inputModels);\n\t\t},\n\t};\n\n\tprivate get useWorkingCopy() {\n\t\treturn this.configurationService.getValue('mergeEditor.useWorkingCopy') ?? false;\n\t}\n\n\tconstructor(\n\t\tpublic readonly base: URI,\n\t\tpublic readonly input1: MergeEditorInputData,\n\t\tpublic readonly input2: MergeEditorInputData,\n\t\tpublic readonly result: URI,\n\t\t@IInstantiationService private readonly _instaService: IInstantiationService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@ITextFileService textFileService: ITextFileService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IFilesConfigurationService filesConfigurationService: IFilesConfigurationService,\n\t\t@ITextResourceConfigurationService textResourceConfigurationService: ITextResourceConfigurationService,\n\t\t@ICustomEditorLabelService customEditorLabelService: ICustomEditorLabelService,\n\t) {\n\t\tsuper(result, undefined, editorService, textFileService, labelService, fileService, filesConfigurationService, textResourceConfigurationService, customEditorLabelService);\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\toverride get typeId(): string {\n\t\treturn MergeEditorInput.ID;\n\t}\n\n\toverride get editorId(): string {\n\t\treturn DEFAULT_EDITOR_ASSOCIATION.id;\n\t}\n\n\toverride get capabilities(): EditorInputCapabilities {\n\t\tlet capabilities = super.capabilities | EditorInputCapabilities.MultipleEditors;\n\t\tif (this.useWorkingCopy) {\n\t\t\tcapabilities |= EditorInputCapabilities.Untitled;\n\t\t}\n\t\treturn capabilities;\n\t}\n\n\toverride getName(): string {\n\t\treturn localize('name', \"Merging: {0}\", super.getName());\n\t}\n\n\tprivate readonly mergeEditorModeFactory = this._instaService.createInstance(\n\t\tthis.useWorkingCopy\n\t\t\t? TempFileMergeEditorModeFactory\n\t\t\t: WorkspaceMergeEditorModeFactory,\n\t\tthis._instaService.createInstance(MergeEditorTelemetry),\n\t);\n\n\toverride async resolve(): Promise<IMergeEditorInputModel> {\n\t\tif (!this._inputModel) {\n\t\t\tconst inputModel = this._register(await this.mergeEditorModeFactory.createInputModel({\n\t\t\t\tbase: this.base,\n\t\t\t\tinput1: this.input1,\n\t\t\t\tinput2: this.input2,\n\t\t\t\tresult: this.result,\n\t\t\t}));\n\t\t\tthis._inputModel = inputModel;\n\n\t\t\tthis._register(autorun(reader => {\n\t\t\t\t/** @description fire dirty event */\n\t\t\t\tinputModel.isDirty.read(reader);\n\t\t\t\tthis._onDidChangeDirty.fire();\n\t\t\t}));\n\n\t\t\tawait this._inputModel.model.onInitialized;\n\t\t}\n\n\t\treturn this._inputModel;\n\t}\n\n\tpublic async accept(): Promise<void> {\n\t\tawait this._inputModel?.accept();\n\t}\n\n\toverride async save(group: number, options?: ITextFileSaveOptions | undefined): Promise<IUntypedEditorInput | undefined> {\n\t\tawait this._inputModel?.save(options);\n\t\treturn undefined;\n\t}\n\n\toverride toUntyped(): IResourceMergeEditorInput {\n\t\treturn {\n\t\t\tinput1: { resource: this.input1.uri, label: this.input1.title, description: this.input1.description, detail: this.input1.detail },\n\t\t\tinput2: { resource: this.input2.uri, label: this.input2.title, description: this.input2.description, detail: this.input2.detail },\n\t\t\tbase: { resource: this.base },\n\t\t\tresult: { resource: this.result },\n\t\t\toptions: {\n\t\t\t\toverride: this.typeId\n\t\t\t}\n\t\t};\n\t}\n\n\toverride matches(otherInput: EditorInput | IUntypedEditorInput): boolean {\n\t\tif (this === otherInput) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherInput instanceof MergeEditorInput) {\n\t\t\treturn isEqual(this.base, otherInput.base)\n\t\t\t\t&& isEqual(this.input1.uri, otherInput.input1.uri)\n\t\t\t\t&& isEqual(this.input2.uri, otherInput.input2.uri)\n\t\t\t\t&& isEqual(this.result, otherInput.result);\n\t\t}\n\t\tif (isResourceMergeEditorInput(otherInput)) {\n\t\t\treturn (this.editorId === otherInput.options?.override || otherInput.options?.override === undefined)\n\t\t\t\t&& isEqual(this.base, otherInput.base.resource)\n\t\t\t\t&& isEqual(this.input1.uri, otherInput.input1.resource)\n\t\t\t\t&& isEqual(this.input2.uri, otherInput.input2.resource)\n\t\t\t\t&& isEqual(this.result, otherInput.result.resource);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\toverride async revert(group: number, options?: IRevertOptions): Promise<void> {\n\t\treturn this._inputModel?.revert(options);\n\t}\n\n\t// ---- FileEditorInput\n\n\toverride isDirty(): boolean {\n\t\treturn this._inputModel?.isDirty.get() ?? false;\n\t}\n\n\tsetLanguageId(languageId: string, source?: string): void {\n\t\tthis._inputModel?.model.setLanguageId(languageId, source);\n\t}\n\n\t// implement get/set encoding\n}\n"],
  "mappings": "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",
  "names": []
}
