var W=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var D=(p,i,e,r)=>{for(var t=r>1?void 0:r?j(i,e):i,n=p.length-1,a;n>=0;n--)(a=p[n])&&(t=(r?a(i,e,t):a(t))||t);return r&&t&&W(i,e,t),t},M=(p,i)=>(e,r)=>i(e,r,p);import{EventType as U,addDisposableListener as z,h as C,reset as k}from"../../../../../../base/browser/dom.js";import{renderLabelWithIcons as S}from"../../../../../../base/browser/ui/iconLabel/iconLabels.js";import{Toggle as F}from"../../../../../../base/browser/ui/toggle/toggle.js";import{Action as A,Separator as q}from"../../../../../../base/common/actions.js";import{Codicon as v}from"../../../../../../base/common/codicons.js";import{Disposable as J}from"../../../../../../base/common/lifecycle.js";import{clamp as T}from"../../../../../../base/common/numbers.js";import{autorun as O,autorunOpts as K,derived as G,derivedOpts as H,observableValue as V,transaction as g}from"../../../../../../base/common/observable.js";import{noBreakWhitespace as Q}from"../../../../../../base/common/strings.js";import{isDefined as X}from"../../../../../../base/common/types.js";import{MinimapPosition as Y,OverviewRulerLane as Z}from"../../../../../../editor/common/model.js";import{localize as c}from"../../../../../../nls.js";import{MenuId as L}from"../../../../../../platform/actions/common/actions.js";import{IConfigurationService as ee}from"../../../../../../platform/configuration/common/configuration.js";import{IContextMenuService as te}from"../../../../../../platform/contextview/browser/contextView.js";import{IInstantiationService as ie}from"../../../../../../platform/instantiation/common/instantiation.js";import{defaultToggleStyles as ne}from"../../../../../../platform/theme/browser/defaultStyles.js";import{InputState as f}from"../../model/modifiedBaseRange.js";import{applyObservableDecorations as oe,setFields as E}from"../../utils.js";import{handledConflictMinimapOverViewRulerColor as _,unhandledConflictMinimapOverViewRulerColor as $}from"../colors.js";import{EditorGutter as se}from"../editorGutter.js";import{CodeEditorView as re,TitleMenu as ae,createSelectionsAutorun as de}from"./codeEditorView.js";let R=class extends re{constructor(e,r,t,n,a){super(t,r,a);this.inputNumber=e;this.htmlElements.root.classList.add("input"),this._register(new se(this.editor,this.htmlElements.gutterDiv,{getIntersectingGutterItems:(s,o)=>this.checkboxesVisible.read(o)?this.modifiedBaseRangeGutterItemInfos.read(o):[],createView:(s,o)=>new ce(s,o,n)})),this._register(de(this,(s,o)=>o.model.translateBaseRangeToInput(this.inputNumber,s))),this._register(t.createInstance(ae,e===1?L.MergeInput1Toolbar:L.MergeInput2Toolbar,this.htmlElements.toolbar)),this._register(K({debugName:`input${this.inputNumber}: update labels & text model`},s=>{const o=this.viewModel.read(s);if(!o)return;this.editor.setModel(this.inputNumber===1?o.model.input1.textModel:o.model.input2.textModel);const d=this.inputNumber===1?o.model.input1.title||c("input1","Input 1"):o.model.input2.title||c("input2","Input 2"),l=this.inputNumber===1?o.model.input1.description:o.model.input2.description,m=this.inputNumber===1?o.model.input1.detail:o.model.input2.detail;k(this.htmlElements.title,...S(d)),k(this.htmlElements.description,...l?S(l):[]),k(this.htmlElements.detail,...m?S(m):[])})),this._register(oe(this.editor,this.decorations))}otherInputNumber=this.inputNumber===1?2:1;modifiedBaseRangeGutterItemInfos=H({debugName:`input${this.inputNumber}.modifiedBaseRangeGutterItemInfos`},e=>{const r=this.viewModel.read(e);if(!r)return[];const t=r.model,n=this.inputNumber,a=r.showNonConflictingChanges.read(e);return t.modifiedBaseRanges.read(e).filter(s=>s.getInputDiffs(this.inputNumber).length>0&&(a||s.isConflicting||!t.isHandled(s).read(e))).map((s,o)=>new le(o.toString(),s,n,r))});decorations=H({debugName:`input${this.inputNumber}.decorations`},e=>{const r=this.viewModel.read(e);if(!r)return[];const t=r.model,n=(this.inputNumber===1?t.input1:t.input2).textModel,a=r.activeModifiedBaseRange.read(e),s=new Array,o=r.showNonConflictingChanges.read(e),d=this.showDeletionMarkers.read(e),m=!(r.baseCodeEditorView.read(e)!==void 0&&r.baseShowDiffAgainst.read(e)===this.inputNumber)&&this.useSimplifiedDecorations.read(e);for(const u of t.modifiedBaseRanges.read(e)){const w=u.getInputRange(this.inputNumber);if(!w)continue;const h=["merge-editor-block"];let x=[0,0,0,0];const b=t.isInputHandled(u,this.inputNumber).read(e);b&&h.push("handled"),u===a&&(h.push("focused"),x=[0,2,0,2]),u.isConflicting&&h.push("conflicting");const I=this.inputNumber===1?"input i1":"input i2";if(h.push(I),!(!u.isConflicting&&!o&&b)&&(m&&!b&&h.push("use-simplified-decorations"),s.push({range:w.toInclusiveRangeOrEmpty(),options:{showIfCollapsed:!0,blockClassName:h.join(" "),blockPadding:x,blockIsAfterEnd:w.startLineNumber>n.getLineCount(),description:"Merge Editor",minimap:{position:Y.Gutter,color:{id:b?_:$}},overviewRuler:u.isConflicting?{position:Z.Center,color:{id:b?_:$}}:void 0}}),!m&&(u.isConflicting||!t.isHandled(u).read(e)))){const P=u.getInputDiffs(this.inputNumber);for(const N of P){const B=N.outputRange.toInclusiveRange();if(B&&s.push({range:B,options:{className:`merge-editor-diff ${I}`,description:"Merge Editor",isWholeLine:!0}}),N.rangeMappings)for(const y of N.rangeMappings)(d||!y.outputRange.isEmpty())&&s.push({range:y.outputRange,options:{className:y.outputRange.isEmpty()?`merge-editor-diff-empty-word ${I}`:`merge-editor-diff-word ${I}`,description:"Merge Editor",showIfCollapsed:!0}})}}}return s})};R=D([M(2,ie),M(3,te),M(4,ee)],R);class le{constructor(i,e,r,t){this.id=i;this.baseRange=e;this.inputNumber=r;this.viewModel=t}model=this.viewModel.model;range=this.baseRange.getInputRange(this.inputNumber);enabled=this.model.isUpToDate;toggleState=G(this,i=>{const e=this.model.getState(this.baseRange).read(i).getInput(this.inputNumber);return e===f.second&&!this.baseRange.isOrderRelevant?f.first:e});state=G(this,i=>{const e=this.viewModel.activeModifiedBaseRange.read(i);return this.model.hasBaseRange(this.baseRange)?{handled:this.model.isHandled(this.baseRange).read(i),focused:this.baseRange===e}:{handled:!1,focused:!1}});setState(i,e){this.viewModel.setState(this.baseRange,this.model.getState(this.baseRange).get().withInputValue(this.inputNumber,i),e,this.inputNumber)}toggleBothSides(){g(i=>{const e=this.model.getState(this.baseRange).get();this.model.setState(this.baseRange,e.toggle(this.inputNumber).toggle(this.inputNumber===1?2:1),!0,i)})}getContextMenuActions(){const i=this.model.getState(this.baseRange).get(),e=this.model.isHandled(this.baseRange).get(),r=a=>{g(s=>this.viewModel.setState(this.baseRange,a,s,this.inputNumber))};function t(a,s,o,d){const l=new A(a,s,void 0,!0,()=>{r(o)});return l.checked=d,l}const n=i.includesInput1&&i.includesInput2;return[this.baseRange.input1Diffs.length>0?t("mergeEditor.acceptInput1",c("mergeEditor.accept","Accept {0}",this.model.input1.title),i.toggle(1),i.includesInput1):void 0,this.baseRange.input2Diffs.length>0?t("mergeEditor.acceptInput2",c("mergeEditor.accept","Accept {0}",this.model.input2.title),i.toggle(2),i.includesInput2):void 0,this.baseRange.isConflicting?E(t("mergeEditor.acceptBoth",c("mergeEditor.acceptBoth","Accept Both"),i.withInputValue(1,!n).withInputValue(2,!n),n),{enabled:this.baseRange.canBeCombined}):void 0,new q,this.baseRange.isConflicting?E(t("mergeEditor.swap",c("mergeEditor.swap","Swap"),i.swap(),!1),{enabled:!i.kind&&(!n||this.baseRange.isOrderRelevant)}):void 0,E(new A("mergeEditor.markAsHandled",c("mergeEditor.markAsHandled","Mark as Handled"),void 0,!0,()=>{g(a=>{this.model.setHandled(this.baseRange,!e,a)})}),{checked:e})].filter(X)}}class ce extends J{item;checkboxDiv;isMultiLine=V(this,!1);constructor(i,e,r){super(),this.item=V(this,i);const t=new F({isChecked:!1,title:"",icon:v.check,...ne});t.domNode.classList.add("accept-conflict-group"),this._register(z(t.domNode,U.MOUSE_DOWN,n=>{const a=this.item.get();a&&(n.button===2?(n.stopPropagation(),n.preventDefault(),r.showContextMenu({getAnchor:()=>t.domNode,getActions:()=>a.getContextMenuActions()})):n.button===1&&(n.stopPropagation(),n.preventDefault(),a.toggleBothSides()))})),this._register(O(n=>{const a=this.item.read(n),s=a.toggleState.read(n),d={[f.excluded]:{icon:void 0,checked:!1,title:c("accept.excluded","Accept")},[f.unrecognized]:{icon:v.circleFilled,checked:!1,title:c("accept.conflicting","Accept (result is dirty)")},[f.first]:{icon:v.check,checked:!0,title:c("accept.first","Undo accept")},[f.second]:{icon:v.checkAll,checked:!0,title:c("accept.second","Undo accept (currently second)")}}[s];t.setIcon(d.icon),t.checked=d.checked,t.setTitle(d.title),a.enabled.read(n)?t.enable():t.disable()})),this._register(O(n=>{const a=this.item.read(n).state.read(n),s=["merge-accept-gutter-marker",a.handled&&"handled",a.focused&&"focused",this.isMultiLine.read(n)?"multi-line":"single-line"];e.className=s.filter(o=>typeof o=="string").join(" ")})),this._register(t.onChange(()=>{g(n=>{this.item.get().setState(t.checked,n)})})),e.appendChild(C("div.background",[Q]).root),e.appendChild(this.checkboxDiv=C("div.checkbox",[C("div.checkbox-background",[t.domNode])]).root)}layout(i,e,r,t){const n=this.checkboxDiv.clientHeight,a=e/2-n/2,s=n;let o=i+a;const d=[s,r+t-s-n],l=[i+s,i+e-n-s];l[0]<l[1]&&(o=T(o,d[0],d[1]),o=T(o,l[0],l[1])),this.checkboxDiv.style.top=`${o-i}px`,g(m=>{this.isMultiLine.set(e>30,m)})}update(i){g(e=>{this.item.set(i,e)})}}export{R as InputCodeEditorView,ce as MergeConflictGutterItemView,le as ModifiedBaseRangeGutterItemModel};
