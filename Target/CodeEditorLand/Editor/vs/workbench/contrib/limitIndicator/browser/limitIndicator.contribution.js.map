{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/limitIndicator/browser/limitIndicator.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Event } from \"../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport Severity from \"../../../../base/common/severity.js\";\nimport {\n\ttype ICodeEditor,\n\tgetCodeEditor,\n} from \"../../../../editor/browser/editorBrowser.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\ttype IWorkbenchContribution,\n\ttype IWorkbenchContributionsRegistry,\n\tExtensions as WorkbenchExtensions,\n} from \"../../../common/contributions.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport {\n\ttype ILanguageStatus,\n\tILanguageStatusService,\n} from \"../../../services/languageStatus/common/languageStatusService.js\";\nimport { LifecyclePhase } from \"../../../services/lifecycle/common/lifecycle.js\";\n\nimport { ColorDetector } from \"../../../../editor/contrib/colorPicker/browser/colorDetector.js\";\nimport { FoldingController } from \"../../../../editor/contrib/folding/browser/folding.js\";\n\nconst openSettingsCommand = \"workbench.action.openSettings\";\nconst configureSettingsLabel = nls.localize(\n\t\"status.button.configure\",\n\t\"Configure\",\n);\n\n/**\n * Uses that language status indicator to show information which language features have been limited for performance reasons.\n * Currently this is used for folding ranges and for color decorators.\n */\nexport class LimitIndicatorContribution\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tconstructor(\n\t\t@IEditorService editorService: IEditorService,\n\t\t@ILanguageStatusService languageStatusService: ILanguageStatusService,\n\t) {\n\t\tsuper();\n\n\t\tconst accessors = [\n\t\t\tnew ColorDecorationAccessor(),\n\t\t\tnew FoldingRangeAccessor(),\n\t\t];\n\t\tconst statusEntries = accessors.map(\n\t\t\t(indicator) =>\n\t\t\t\tnew LanguageStatusEntry(languageStatusService, indicator),\n\t\t);\n\t\tstatusEntries.forEach((entry) => this._register(entry));\n\n\t\tlet control: any;\n\n\t\tconst onActiveEditorChanged = () => {\n\t\t\tconst activeControl = editorService.activeTextEditorControl;\n\t\t\tif (activeControl === control) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontrol = activeControl;\n\t\t\tconst editor = getCodeEditor(activeControl);\n\n\t\t\tstatusEntries.forEach((statusEntry) =>\n\t\t\t\tstatusEntry.onActiveEditorChanged(editor),\n\t\t\t);\n\t\t};\n\t\tthis._register(\n\t\t\teditorService.onDidActiveEditorChange(onActiveEditorChanged),\n\t\t);\n\n\t\tonActiveEditorChanged();\n\t}\n}\n\nexport interface LimitInfo {\n\treadonly onDidChange: Event<void>;\n\n\treadonly computed: number;\n\treadonly limited: number | false;\n}\n\ninterface LanguageFeatureAccessor {\n\treadonly id: string;\n\treadonly name: string;\n\treadonly label: string;\n\treadonly source: string;\n\treadonly settingsId: string;\n\tgetLimitReporter(editor: ICodeEditor): LimitInfo | undefined;\n}\n\nclass ColorDecorationAccessor implements LanguageFeatureAccessor {\n\treadonly id = \"decoratorsLimitInfo\";\n\treadonly name = nls.localize(\n\t\t\"colorDecoratorsStatusItem.name\",\n\t\t\"Color Decorator Status\",\n\t);\n\treadonly label = nls.localize(\n\t\t\"status.limitedColorDecorators.short\",\n\t\t\"Color Decorators\",\n\t);\n\treadonly source = nls.localize(\n\t\t\"colorDecoratorsStatusItem.source\",\n\t\t\"Color Decorators\",\n\t);\n\treadonly settingsId = \"editor.colorDecoratorsLimit\";\n\n\tgetLimitReporter(editor: ICodeEditor): LimitInfo | undefined {\n\t\treturn ColorDetector.get(editor)?.limitReporter;\n\t}\n}\n\nclass FoldingRangeAccessor implements LanguageFeatureAccessor {\n\treadonly id = \"foldingLimitInfo\";\n\treadonly name = nls.localize(\n\t\t\"foldingRangesStatusItem.name\",\n\t\t\"Folding Status\",\n\t);\n\treadonly label = nls.localize(\n\t\t\"status.limitedFoldingRanges.short\",\n\t\t\"Folding Ranges\",\n\t);\n\treadonly source = nls.localize(\"foldingRangesStatusItem.source\", \"Folding\");\n\treadonly settingsId = \"editor.foldingMaximumRegions\";\n\n\tgetLimitReporter(editor: ICodeEditor): LimitInfo | undefined {\n\t\treturn FoldingController.get(editor)?.limitReporter;\n\t}\n}\n\nclass LanguageStatusEntry {\n\tprivate _limitStatusItem: IDisposable | undefined;\n\tprivate _indicatorChangeListener: IDisposable | undefined;\n\n\tconstructor(\n\t\tprivate languageStatusService: ILanguageStatusService,\n\t\tprivate accessor: LanguageFeatureAccessor,\n\t) {}\n\n\tonActiveEditorChanged(editor: ICodeEditor | null): boolean {\n\t\tif (this._indicatorChangeListener) {\n\t\t\tthis._indicatorChangeListener.dispose();\n\t\t\tthis._indicatorChangeListener = undefined;\n\t\t}\n\n\t\tlet info: LimitInfo | undefined;\n\t\tif (editor) {\n\t\t\tinfo = this.accessor.getLimitReporter(editor);\n\t\t}\n\t\tthis.updateStatusItem(info);\n\t\tif (info) {\n\t\t\tthis._indicatorChangeListener = info.onDidChange((_) => {\n\t\t\t\tthis.updateStatusItem(info);\n\t\t\t});\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate updateStatusItem(info: LimitInfo | undefined) {\n\t\tif (this._limitStatusItem) {\n\t\t\tthis._limitStatusItem.dispose();\n\t\t\tthis._limitStatusItem = undefined;\n\t\t}\n\t\tif (info && info.limited !== false) {\n\t\t\tconst status: ILanguageStatus = {\n\t\t\t\tid: this.accessor.id,\n\t\t\t\tselector: \"*\",\n\t\t\t\tname: this.accessor.name,\n\t\t\t\tseverity: Severity.Warning,\n\t\t\t\tlabel: this.accessor.label,\n\t\t\t\tdetail: nls.localize(\n\t\t\t\t\t\"status.limited.details\",\n\t\t\t\t\t\"only {0} shown for performance reasons\",\n\t\t\t\t\tinfo.limited,\n\t\t\t\t),\n\t\t\t\tcommand: {\n\t\t\t\t\tid: openSettingsCommand,\n\t\t\t\t\targuments: [this.accessor.settingsId],\n\t\t\t\t\ttitle: configureSettingsLabel,\n\t\t\t\t},\n\t\t\t\taccessibilityInfo: undefined,\n\t\t\t\tsource: this.accessor.source,\n\t\t\t\tbusy: false,\n\t\t\t};\n\t\t\tthis._limitStatusItem =\n\t\t\t\tthis.languageStatusService.addStatus(status);\n\t\t}\n\t}\n\n\tpublic dispose() {\n\t\tthis._limitStatusItem?.dispose;\n\t\tthis._limitStatusItem = undefined;\n\t\tthis._indicatorChangeListener?.dispose;\n\t\tthis._indicatorChangeListener = undefined;\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n).registerWorkbenchContribution(\n\tLimitIndicatorContribution,\n\tLifecyclePhase.Restored,\n);\n"],
  "mappings": ";;;;;;;;;;;;AAMA;AAAA,EACC;AAAA,OAEM;AACP,OAAO,cAAc;AACrB;AAAA,EAEC;AAAA,OACM;AACP,YAAY,SAAS;AACrB,SAAS,gBAAgB;AACzB;AAAA,EAGC,cAAc;AAAA,OACR;AACP,SAAS,sBAAsB;AAC/B;AAAA,EAEC;AAAA,OACM;AACP,SAAS,sBAAsB;AAE/B,SAAS,qBAAqB;AAC9B,SAAS,yBAAyB;AAElC,MAAM,sBAAsB;AAC5B,MAAM,yBAAyB,IAAI;AAAA,EAClC;AAAA,EACA;AACD;AAMO,IAAM,6BAAN,cACE,WAET;AAAA,EA7CA,OA6CA;AAAA;AAAA;AAAA,EACC,YACiB,eACQ,uBACvB;AACD,UAAM;AAEN,UAAM,YAAY;AAAA,MACjB,IAAI,wBAAwB;AAAA,MAC5B,IAAI,qBAAqB;AAAA,IAC1B;AACA,UAAM,gBAAgB,UAAU;AAAA,MAC/B,CAAC,cACA,IAAI,oBAAoB,uBAAuB,SAAS;AAAA,IAC1D;AACA,kBAAc,QAAQ,CAAC,UAAU,KAAK,UAAU,KAAK,CAAC;AAEtD,QAAI;AAEJ,UAAM,wBAAwB,6BAAM;AACnC,YAAM,gBAAgB,cAAc;AACpC,UAAI,kBAAkB,SAAS;AAC9B;AAAA,MACD;AACA,gBAAU;AACV,YAAM,SAAS,cAAc,aAAa;AAE1C,oBAAc;AAAA,QAAQ,CAAC,gBACtB,YAAY,sBAAsB,MAAM;AAAA,MACzC;AAAA,IACD,GAX8B;AAY9B,SAAK;AAAA,MACJ,cAAc,wBAAwB,qBAAqB;AAAA,IAC5D;AAEA,0BAAsB;AAAA,EACvB;AACD;AAxCa,6BAAN;AAAA,EAKJ;AAAA,EACA;AAAA,GANU;AA0Db,MAAM,wBAA2D;AAAA,EApGjE,OAoGiE;AAAA;AAAA;AAAA,EACvD,KAAK;AAAA,EACL,OAAO,IAAI;AAAA,IACnB;AAAA,IACA;AAAA,EACD;AAAA,EACS,QAAQ,IAAI;AAAA,IACpB;AAAA,IACA;AAAA,EACD;AAAA,EACS,SAAS,IAAI;AAAA,IACrB;AAAA,IACA;AAAA,EACD;AAAA,EACS,aAAa;AAAA,EAEtB,iBAAiB,QAA4C;AAC5D,WAAO,cAAc,IAAI,MAAM,GAAG;AAAA,EACnC;AACD;AAEA,MAAM,qBAAwD;AAAA,EAzH9D,OAyH8D;AAAA;AAAA;AAAA,EACpD,KAAK;AAAA,EACL,OAAO,IAAI;AAAA,IACnB;AAAA,IACA;AAAA,EACD;AAAA,EACS,QAAQ,IAAI;AAAA,IACpB;AAAA,IACA;AAAA,EACD;AAAA,EACS,SAAS,IAAI,SAAS,kCAAkC,SAAS;AAAA,EACjE,aAAa;AAAA,EAEtB,iBAAiB,QAA4C;AAC5D,WAAO,kBAAkB,IAAI,MAAM,GAAG;AAAA,EACvC;AACD;AAEA,MAAM,oBAAoB;AAAA,EAIzB,YACS,uBACA,UACP;AAFO;AACA;AAAA,EACN;AAAA,EAlJJ,OA2I0B;AAAA;AAAA;AAAA,EACjB;AAAA,EACA;AAAA,EAOR,sBAAsB,QAAqC;AAC1D,QAAI,KAAK,0BAA0B;AAClC,WAAK,yBAAyB,QAAQ;AACtC,WAAK,2BAA2B;AAAA,IACjC;AAEA,QAAI;AACJ,QAAI,QAAQ;AACX,aAAO,KAAK,SAAS,iBAAiB,MAAM;AAAA,IAC7C;AACA,SAAK,iBAAiB,IAAI;AAC1B,QAAI,MAAM;AACT,WAAK,2BAA2B,KAAK,YAAY,CAAC,MAAM;AACvD,aAAK,iBAAiB,IAAI;AAAA,MAC3B,CAAC;AACD,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR;AAAA,EAEQ,iBAAiB,MAA6B;AACrD,QAAI,KAAK,kBAAkB;AAC1B,WAAK,iBAAiB,QAAQ;AAC9B,WAAK,mBAAmB;AAAA,IACzB;AACA,QAAI,QAAQ,KAAK,YAAY,OAAO;AACnC,YAAM,SAA0B;AAAA,QAC/B,IAAI,KAAK,SAAS;AAAA,QAClB,UAAU;AAAA,QACV,MAAM,KAAK,SAAS;AAAA,QACpB,UAAU,SAAS;AAAA,QACnB,OAAO,KAAK,SAAS;AAAA,QACrB,QAAQ,IAAI;AAAA,UACX;AAAA,UACA;AAAA,UACA,KAAK;AAAA,QACN;AAAA,QACA,SAAS;AAAA,UACR,IAAI;AAAA,UACJ,WAAW,CAAC,KAAK,SAAS,UAAU;AAAA,UACpC,OAAO;AAAA,QACR;AAAA,QACA,mBAAmB;AAAA,QACnB,QAAQ,KAAK,SAAS;AAAA,QACtB,MAAM;AAAA,MACP;AACA,WAAK,mBACJ,KAAK,sBAAsB,UAAU,MAAM;AAAA,IAC7C;AAAA,EACD;AAAA,EAEO,UAAU;AAChB,SAAK,kBAAkB;AACvB,SAAK,mBAAmB;AACxB,SAAK,0BAA0B;AAC/B,SAAK,2BAA2B;AAAA,EACjC;AACD;AAEA,SAAS;AAAA,EACR,oBAAoB;AACrB,EAAE;AAAA,EACD;AAAA,EACA,eAAe;AAChB;",
  "names": []
}
