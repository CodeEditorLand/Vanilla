{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/codeActions/common/codeActionsExtensionPoint.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\nimport { IConfigurationPropertySchema } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { languagesExtPoint } from '../../../services/language/common/languageService.js';\nimport { Extensions as ExtensionFeaturesExtensions, IExtensionFeatureTableRenderer, IExtensionFeaturesRegistry, IRenderedData, IRowData, ITableData } from '../../../services/extensionManagement/common/extensionFeatures.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { SyncDescriptor } from '../../../../platform/instantiation/common/descriptors.js';\nimport { IExtensionManifest } from '../../../../platform/extensions/common/extensions.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\n\nenum CodeActionExtensionPointFields {\n\tlanguages = 'languages',\n\tactions = 'actions',\n\tkind = 'kind',\n\ttitle = 'title',\n\tdescription = 'description'\n}\n\nexport interface ContributedCodeAction {\n\treadonly [CodeActionExtensionPointFields.kind]: string;\n\treadonly [CodeActionExtensionPointFields.title]: string;\n\treadonly [CodeActionExtensionPointFields.description]?: string;\n}\n\nexport interface CodeActionsExtensionPoint {\n\treadonly [CodeActionExtensionPointFields.languages]: readonly string[];\n\treadonly [CodeActionExtensionPointFields.actions]: readonly ContributedCodeAction[];\n}\n\nconst codeActionsExtensionPointSchema = Object.freeze<IConfigurationPropertySchema>({\n\ttype: 'array',\n\tmarkdownDescription: nls.localize('contributes.codeActions', \"Configure which editor to use for a resource.\"),\n\titems: {\n\t\ttype: 'object',\n\t\trequired: [CodeActionExtensionPointFields.languages, CodeActionExtensionPointFields.actions],\n\t\tproperties: {\n\t\t\t[CodeActionExtensionPointFields.languages]: {\n\t\t\t\ttype: 'array',\n\t\t\t\tdescription: nls.localize('contributes.codeActions.languages', \"Language modes that the code actions are enabled for.\"),\n\t\t\t\titems: { type: 'string' }\n\t\t\t},\n\t\t\t[CodeActionExtensionPointFields.actions]: {\n\t\t\t\ttype: 'object',\n\t\t\t\trequired: [CodeActionExtensionPointFields.kind, CodeActionExtensionPointFields.title],\n\t\t\t\tproperties: {\n\t\t\t\t\t[CodeActionExtensionPointFields.kind]: {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tmarkdownDescription: nls.localize('contributes.codeActions.kind', \"`CodeActionKind` of the contributed code action.\"),\n\t\t\t\t\t},\n\t\t\t\t\t[CodeActionExtensionPointFields.title]: {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdescription: nls.localize('contributes.codeActions.title', \"Label for the code action used in the UI.\"),\n\t\t\t\t\t},\n\t\t\t\t\t[CodeActionExtensionPointFields.description]: {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdescription: nls.localize('contributes.codeActions.description', \"Description of what the code action does.\"),\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\nexport const codeActionsExtensionPointDescriptor = {\n\textensionPoint: 'codeActions',\n\tdeps: [languagesExtPoint],\n\tjsonSchema: codeActionsExtensionPointSchema\n};\n\nclass CodeActionsTableRenderer extends Disposable implements IExtensionFeatureTableRenderer {\n\n\treadonly type = 'table';\n\n\tshouldRender(manifest: IExtensionManifest): boolean {\n\t\treturn !!manifest.contributes?.codeActions;\n\t}\n\n\trender(manifest: IExtensionManifest): IRenderedData<ITableData> {\n\t\tconst codeActions = manifest.contributes?.codeActions || [];\n\t\tif (!codeActions.length) {\n\t\t\treturn { data: { headers: [], rows: [] }, dispose: () => { } };\n\t\t}\n\n\t\tconst flatActions =\n\t\t\tcodeActions.map(contribution =>\n\t\t\t\tcontribution.actions.map(action => ({ ...action, languages: contribution.languages }))).flat();\n\n\t\tconst headers = [\n\t\t\tnls.localize('codeActions.title', \"Title\"),\n\t\t\tnls.localize('codeActions.kind', \"Kind\"),\n\t\t\tnls.localize('codeActions.description', \"Description\"),\n\t\t\tnls.localize('codeActions.languages', \"Languages\")\n\t\t];\n\n\t\tconst rows: IRowData[][] = flatActions.sort((a, b) => a.title.localeCompare(b.title))\n\t\t\t.map(action => {\n\t\t\t\treturn [\n\t\t\t\t\taction.title,\n\t\t\t\t\tnew MarkdownString().appendMarkdown(`\\`${action.kind}\\``),\n\t\t\t\t\taction.description ?? '',\n\t\t\t\t\tnew MarkdownString().appendMarkdown(`${action.languages.map(lang => `\\`${lang}\\``).join('&nbsp;')}`),\n\t\t\t\t];\n\t\t\t});\n\n\t\treturn {\n\t\t\tdata: {\n\t\t\t\theaders,\n\t\t\t\trows\n\t\t\t},\n\t\t\tdispose: () => { }\n\t\t};\n\t}\n}\n\nRegistry.as<IExtensionFeaturesRegistry>(ExtensionFeaturesExtensions.ExtensionFeaturesRegistry).registerExtensionFeature({\n\tid: 'codeActions',\n\tlabel: nls.localize('codeactions', \"Code Actions\"),\n\taccess: {\n\t\tcanToggle: false,\n\t},\n\trenderer: new SyncDescriptor(CodeActionsTableRenderer),\n});\n"],
  "mappings": "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",
  "names": ["CodeActionExtensionPointFields"]
}
