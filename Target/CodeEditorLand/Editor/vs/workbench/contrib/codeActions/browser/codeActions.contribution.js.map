{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/codeActions/browser/codeActions.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Extensions, IConfigurationRegistry } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContributionsRegistry } from '../../../common/contributions.js';\nimport { CodeActionsExtensionPoint, codeActionsExtensionPointDescriptor } from '../common/codeActionsExtensionPoint.js';\nimport { DocumentationExtensionPoint, documentationExtensionPointDescriptor } from '../common/documentationExtensionPoint.js';\nimport { ExtensionsRegistry } from '../../../services/extensions/common/extensionsRegistry.js';\nimport { LifecyclePhase } from '../../../services/lifecycle/common/lifecycle.js';\nimport { CodeActionsContribution, editorConfiguration, notebookEditorConfiguration } from './codeActionsContribution.js';\nimport { CodeActionDocumentationContribution } from './documentationContribution.js';\n\nconst codeActionsExtensionPoint = ExtensionsRegistry.registerExtensionPoint<CodeActionsExtensionPoint[]>(codeActionsExtensionPointDescriptor);\nconst documentationExtensionPoint = ExtensionsRegistry.registerExtensionPoint<DocumentationExtensionPoint>(documentationExtensionPointDescriptor);\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration)\n\t.registerConfiguration(editorConfiguration);\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration)\n\t.registerConfiguration(notebookEditorConfiguration);\n\nclass WorkbenchConfigurationContribution {\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tinstantiationService.createInstance(CodeActionsContribution, codeActionsExtensionPoint);\n\t\tinstantiationService.createInstance(CodeActionDocumentationContribution, documentationExtensionPoint);\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench)\n\t.registerWorkbenchContribution(WorkbenchConfigurationContribution, LifecyclePhase.Eventually);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,YAAY,8BAA8B;AACnD,SAAS,6BAA6B;AACtC,SAAS,gBAAgB;AACzB,SAAS,cAAc,qBAAqB,uCAAuC;AACnF,SAAS,2BAA2B,2CAA2C;AAC/E,SAAS,6BAA6B,6CAA6C;AACnF,SAAS,0BAA0B;AACnC,SAAS,sBAAsB;AAC/B,SAAS,yBAAyB,qBAAqB,mCAAmC;AAC1F,SAAS,2CAA2C;AAEpD,MAAM,4BAA4B,mBAAmB,uBAAoD,mCAAmC;AAC5I,MAAM,8BAA8B,mBAAmB,uBAAoD,qCAAqC;AAEhJ,SAAS,GAA2B,WAAW,aAAa,EAC1D,sBAAsB,mBAAmB;AAE3C,SAAS,GAA2B,WAAW,aAAa,EAC1D,sBAAsB,2BAA2B;AAEnD,IAAM,qCAAN,MAAyC;AAAA,EAzBzC,OAyByC;AAAA;AAAA;AAAA,EACxC,YACwB,sBACtB;AACD,yBAAqB,eAAe,yBAAyB,yBAAyB;AACtF,yBAAqB,eAAe,qCAAqC,2BAA2B;AAAA,EACrG;AACD;AAPM,qCAAN;AAAA,EAEG;AAAA,GAFG;AASN,SAAS,GAAoC,oBAAoB,SAAS,EACxE,8BAA8B,oCAAoC,eAAe,UAAU;",
  "names": []
}
