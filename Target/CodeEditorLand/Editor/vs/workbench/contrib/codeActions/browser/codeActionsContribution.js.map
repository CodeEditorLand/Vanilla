{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/codeActions/browser/codeActionsContribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from \"../../../../base/common/event.js\";\nimport { HierarchicalKind } from \"../../../../base/common/hierarchicalKind.js\";\nimport type {\n\tIJSONSchema,\n\tIJSONSchemaMap,\n} from \"../../../../base/common/jsonSchema.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { editorConfigurationBaseNode } from \"../../../../editor/common/config/editorConfigurationSchema.js\";\nimport { ILanguageFeaturesService } from \"../../../../editor/common/services/languageFeatures.js\";\nimport {\n\tcodeActionCommandId,\n\trefactorCommandId,\n\tsourceActionCommandId,\n} from \"../../../../editor/contrib/codeAction/browser/codeAction.js\";\nimport { CodeActionKind } from \"../../../../editor/contrib/codeAction/common/types.js\";\nimport * as nls from \"../../../../nls.js\";\nimport {\n\tConfigurationScope,\n\tExtensions,\n\ttype IConfigurationNode,\n\ttype IConfigurationPropertySchema,\n\ttype IConfigurationRegistry,\n} from \"../../../../platform/configuration/common/configurationRegistry.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport type { IExtensionPoint } from \"../../../services/extensions/common/extensionsRegistry.js\";\nimport type {\n\tCodeActionsExtensionPoint,\n\tContributedCodeAction,\n} from \"../common/codeActionsExtensionPoint.js\";\n\nconst createCodeActionsAutoSave = (description: string): IJSONSchema => {\n\treturn {\n\t\ttype: \"string\",\n\t\tenum: [\"always\", \"explicit\", \"never\", true, false],\n\t\tenumDescriptions: [\n\t\t\tnls.localize(\n\t\t\t\t\"alwaysSave\",\n\t\t\t\t\"Triggers Code Actions on explicit saves and auto saves triggered by window or focus changes.\",\n\t\t\t),\n\t\t\tnls.localize(\n\t\t\t\t\"explicitSave\",\n\t\t\t\t\"Triggers Code Actions only when explicitly saved\",\n\t\t\t),\n\t\t\tnls.localize(\"neverSave\", \"Never triggers Code Actions on save\"),\n\t\t\tnls.localize(\n\t\t\t\t\"explicitSaveBoolean\",\n\t\t\t\t'Triggers Code Actions only when explicitly saved. This value will be deprecated in favor of \"explicit\".',\n\t\t\t),\n\t\t\tnls.localize(\n\t\t\t\t\"neverSaveBoolean\",\n\t\t\t\t'Never triggers Code Actions on save. This value will be deprecated in favor of \"never\".',\n\t\t\t),\n\t\t],\n\t\tdefault: \"explicit\",\n\t\tdescription: description,\n\t};\n};\n\nconst createNotebookCodeActionsAutoSave = (\n\tdescription: string,\n): IJSONSchema => {\n\treturn {\n\t\ttype: [\"string\", \"boolean\"],\n\t\tenum: [\"explicit\", \"never\", true, false],\n\t\tenumDescriptions: [\n\t\t\tnls.localize(\n\t\t\t\t\"explicit\",\n\t\t\t\t\"Triggers Code Actions only when explicitly saved.\",\n\t\t\t),\n\t\t\tnls.localize(\"never\", \"Never triggers Code Actions on save.\"),\n\t\t\tnls.localize(\n\t\t\t\t\"explicitBoolean\",\n\t\t\t\t'Triggers Code Actions only when explicitly saved. This value will be deprecated in favor of \"explicit\".',\n\t\t\t),\n\t\t\tnls.localize(\n\t\t\t\t\"neverBoolean\",\n\t\t\t\t'Triggers Code Actions only when explicitly saved. This value will be deprecated in favor of \"never\".',\n\t\t\t),\n\t\t],\n\t\tdefault: \"explicit\",\n\t\tdescription: description,\n\t};\n};\n\nconst codeActionsOnSaveSchema: IConfigurationPropertySchema = {\n\toneOf: [\n\t\t{\n\t\t\ttype: \"object\",\n\t\t\tadditionalProperties: {\n\t\t\t\ttype: \"string\",\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: \"array\",\n\t\t\titems: { type: \"string\" },\n\t\t},\n\t],\n\tmarkdownDescription: nls.localize(\n\t\t\"editor.codeActionsOnSave\",\n\t\t'Run Code Actions for the editor on save. Code Actions must be specified and the editor must not be shutting down. Example: `\"source.organizeImports\": \"explicit\" `',\n\t),\n\ttype: [\"object\", \"array\"],\n\tadditionalProperties: {\n\t\ttype: \"string\",\n\t\tenum: [\"always\", \"explicit\", \"never\", true, false],\n\t},\n\tdefault: {},\n\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n};\n\nexport const editorConfiguration = Object.freeze<IConfigurationNode>({\n\t...editorConfigurationBaseNode,\n\tproperties: {\n\t\t\"editor.codeActionsOnSave\": codeActionsOnSaveSchema,\n\t},\n});\n\nconst notebookCodeActionsOnSaveSchema: IConfigurationPropertySchema = {\n\toneOf: [\n\t\t{\n\t\t\ttype: \"object\",\n\t\t\tadditionalProperties: {\n\t\t\t\ttype: \"string\",\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: \"array\",\n\t\t\titems: { type: \"string\" },\n\t\t},\n\t],\n\tmarkdownDescription: nls.localize(\n\t\t\"notebook.codeActionsOnSave\",\n\t\t'Run a series of Code Actions for a notebook on save. Code Actions must be specified, the file must not be saved after delay, and the editor must not be shutting down. Example: `\"notebook.source.organizeImports\": \"explicit\"`',\n\t),\n\ttype: \"object\",\n\tadditionalProperties: {\n\t\ttype: [\"string\", \"boolean\"],\n\t\tenum: [\"explicit\", \"never\", true, false],\n\t\t// enum: ['explicit', 'always', 'never'], -- autosave support needs to be built first\n\t\t// nls.localize('always', 'Always triggers Code Actions on save, including autosave, focus, and window change events.'),\n\t},\n\tdefault: {},\n};\n\nexport const notebookEditorConfiguration = Object.freeze<IConfigurationNode>({\n\t...editorConfigurationBaseNode,\n\tproperties: {\n\t\t\"notebook.codeActionsOnSave\": notebookCodeActionsOnSaveSchema,\n\t},\n});\n\nexport class CodeActionsContribution\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tprivate _contributedCodeActions: CodeActionsExtensionPoint[] = [];\n\tprivate settings: Set<string> = new Set<string>();\n\n\tprivate readonly _onDidChangeContributions = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\n\tconstructor(\n\t\tcodeActionsExtensionPoint: IExtensionPoint<CodeActionsExtensionPoint[]>,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@ILanguageFeaturesService private readonly languageFeatures: ILanguageFeaturesService\n\t) {\n\t\tsuper();\n\n\t\t// TODO: @justschen caching of code actions based on extensions loaded: https://github.com/microsoft/vscode/issues/216019\n\t\tlanguageFeatures.codeActionProvider.onDidChange(() => {\n\t\t\tthis.updateSettingsFromCodeActionProviders();\n\t\t\tthis.updateConfigurationSchemaFromContribs();\n\t\t}, 2000);\n\n\t\tcodeActionsExtensionPoint.setHandler(extensionPoints => {\n\t\t\tthis._contributedCodeActions = extensionPoints.flatMap(x => x.value).filter(x => Array.isArray(x.actions));\n\t\t\tthis.updateConfigurationSchema(this._contributedCodeActions);\n\t\t\tthis._onDidChangeContributions.fire();\n\t\t});\n\n\t\tkeybindingService.registerSchemaContribution({\n\t\t\tgetSchemaAdditions: () => this.getSchemaAdditions(),\n\t\t\tonDidChange: this._onDidChangeContributions.event,\n\t\t});\n\t}\n\n\tprivate updateSettingsFromCodeActionProviders(): void {\n\t\tconst providers = this.languageFeatures.codeActionProvider.allNoModel();\n\t\tproviders.forEach((provider) => {\n\t\t\tif (provider.providedCodeActionKinds) {\n\t\t\t\tprovider.providedCodeActionKinds.forEach((kind) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.settings.has(kind) &&\n\t\t\t\t\t\tCodeActionKind.Source.contains(\n\t\t\t\t\t\t\tnew HierarchicalKind(kind),\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.settings.add(kind);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate updateConfigurationSchema(\n\t\tcodeActionContributions: readonly CodeActionsExtensionPoint[],\n\t) {\n\t\tconst newProperties: IJSONSchemaMap = {};\n\t\tconst newNotebookProperties: IJSONSchemaMap = {};\n\t\tfor (const [sourceAction, props] of this.getSourceActions(\n\t\t\tcodeActionContributions,\n\t\t)) {\n\t\t\tthis.settings.add(sourceAction);\n\t\t\tnewProperties[sourceAction] = createCodeActionsAutoSave(\n\t\t\t\tnls.localize(\n\t\t\t\t\t\"codeActionsOnSave.generic\",\n\t\t\t\t\t\"Controls whether '{0}' actions should be run on file save.\",\n\t\t\t\t\tprops.title,\n\t\t\t\t),\n\t\t\t);\n\t\t\tnewNotebookProperties[sourceAction] =\n\t\t\t\tcreateNotebookCodeActionsAutoSave(\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\"codeActionsOnSave.generic\",\n\t\t\t\t\t\t\"Controls whether '{0}' actions should be run on file save.\",\n\t\t\t\t\t\tprops.title,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t}\n\t\tcodeActionsOnSaveSchema.properties = newProperties;\n\t\tnotebookCodeActionsOnSaveSchema.properties = newNotebookProperties;\n\t\tRegistry.as<IConfigurationRegistry>(\n\t\t\tExtensions.Configuration,\n\t\t).notifyConfigurationSchemaUpdated(editorConfiguration);\n\t}\n\n\tprivate updateConfigurationSchemaFromContribs() {\n\t\tconst properties: IJSONSchemaMap = {\n\t\t\t...codeActionsOnSaveSchema.properties,\n\t\t};\n\t\tconst notebookProperties: IJSONSchemaMap = {\n\t\t\t...notebookCodeActionsOnSaveSchema.properties,\n\t\t};\n\t\tfor (const codeActionKind of this.settings) {\n\t\t\tif (!properties[codeActionKind]) {\n\t\t\t\tproperties[codeActionKind] = createCodeActionsAutoSave(\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\"codeActionsOnSave.generic\",\n\t\t\t\t\t\t\"Controls whether '{0}' actions should be run on file save.\",\n\t\t\t\t\t\tcodeActionKind,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tnotebookProperties[codeActionKind] =\n\t\t\t\t\tcreateNotebookCodeActionsAutoSave(\n\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\"codeActionsOnSave.generic\",\n\t\t\t\t\t\t\t\"Controls whether '{0}' actions should be run on file save.\",\n\t\t\t\t\t\t\tcodeActionKind,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tcodeActionsOnSaveSchema.properties = properties;\n\t\tnotebookCodeActionsOnSaveSchema.properties = notebookProperties;\n\t\tRegistry.as<IConfigurationRegistry>(\n\t\t\tExtensions.Configuration,\n\t\t).notifyConfigurationSchemaUpdated(editorConfiguration);\n\t}\n\n\tprivate getSourceActions(\n\t\tcontributions: readonly CodeActionsExtensionPoint[],\n\t) {\n\t\tconst sourceActions = new Map<string, { readonly title: string }>();\n\t\tfor (const contribution of contributions) {\n\t\t\tfor (const action of contribution.actions) {\n\t\t\t\tconst kind = new HierarchicalKind(action.kind);\n\t\t\t\tif (CodeActionKind.Source.contains(kind)) {\n\t\t\t\t\tsourceActions.set(kind.value, action);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn sourceActions;\n\t}\n\n\tprivate getSchemaAdditions(): IJSONSchema[] {\n\t\tconst conditionalSchema = (\n\t\t\tcommand: string,\n\t\t\tactions: readonly ContributedCodeAction[],\n\t\t): IJSONSchema => {\n\t\t\treturn {\n\t\t\t\tif: {\n\t\t\t\t\trequired: [\"command\"],\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tcommand: { const: command },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tthen: {\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\trequired: [\"kind\"],\n\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\tkind: {\n\t\t\t\t\t\t\t\t\tanyOf: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tenum: actions.map(\n\t\t\t\t\t\t\t\t\t\t\t\t(action) => action.kind,\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\tenumDescriptions: actions.map(\n\t\t\t\t\t\t\t\t\t\t\t\t(action) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\taction.description ??\n\t\t\t\t\t\t\t\t\t\t\t\t\taction.title,\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{ type: \"string\" },\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\t\t};\n\n\t\tconst getActions = (\n\t\t\tofKind: HierarchicalKind,\n\t\t): ContributedCodeAction[] => {\n\t\t\tconst allActions = this._contributedCodeActions.flatMap(\n\t\t\t\t(desc) => desc.actions,\n\t\t\t);\n\n\t\t\tconst out = new Map<string, ContributedCodeAction>();\n\t\t\tfor (const action of allActions) {\n\t\t\t\tif (\n\t\t\t\t\t!out.has(action.kind) &&\n\t\t\t\t\tofKind.contains(new HierarchicalKind(action.kind))\n\t\t\t\t) {\n\t\t\t\t\tout.set(action.kind, action);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Array.from(out.values());\n\t\t};\n\n\t\treturn [\n\t\t\tconditionalSchema(\n\t\t\t\tcodeActionCommandId,\n\t\t\t\tgetActions(HierarchicalKind.Empty),\n\t\t\t),\n\t\t\tconditionalSchema(\n\t\t\t\trefactorCommandId,\n\t\t\t\tgetActions(CodeActionKind.Refactor),\n\t\t\t),\n\t\t\tconditionalSchema(\n\t\t\t\tsourceActionCommandId,\n\t\t\t\tgetActions(CodeActionKind.Source),\n\t\t\t),\n\t\t];\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
