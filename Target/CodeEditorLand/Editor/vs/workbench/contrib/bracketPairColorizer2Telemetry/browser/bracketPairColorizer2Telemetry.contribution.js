var d=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var l=(r,i,e,o)=>{for(var t=o>1?void 0:o?h(i,e):i,n=r.length-1,c;n>=0;n--)(c=r[n])&&(t=(o?c(i,e,t):c(t))||t);return o&&t&&d(i,e,t),t},s=(r,i)=>(e,o)=>i(e,o,r);import{onUnexpectedError as m}from"../../../../base/common/errors.js";import{IConfigurationService as v}from"../../../../platform/configuration/common/configuration.js";import{Registry as p}from"../../../../platform/registry/common/platform.js";import{ITelemetryService as f}from"../../../../platform/telemetry/common/telemetry.js";import{Extensions as k}from"../../../common/contributions.js";import{IExtensionsWorkbenchService as y}from"../../extensions/common/extensions.js";import{EnablementState as b}from"../../../services/extensionManagement/common/extensionManagement.js";import{LifecyclePhase as S}from"../../../services/lifecycle/common/lifecycle.js";let a=class{constructor(i,e,o){this.configurationService=i;this.extensionsWorkbenchService=e;this.telemetryService=o;this.init().catch(m)}async init(){const i="coenraads.bracket-pair-colorizer-2";await this.extensionsWorkbenchService.queryLocal();const e=this.extensionsWorkbenchService.installed.find(n=>n.identifier.id===i);if(!e||e.enablementState!==b.EnabledGlobally&&e.enablementState!==b.EnabledWorkspace)return;const o="editor.bracketPairColorization.enabled",t=!!this.configurationService.getValue(o);this.telemetryService.publicLog2("bracketPairColorizerTwoUsage",{nativeColorizationEnabled:t})}};a=l([s(0,v),s(1,y),s(2,f)],a),p.as(k.Workbench).registerWorkbenchContribution(a,S.Restored);
