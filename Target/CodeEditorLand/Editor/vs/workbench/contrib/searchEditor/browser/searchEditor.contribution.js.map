{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/searchEditor/browser/searchEditor.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { extname, isEqual } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ServicesAccessor } from '../../../../editor/browser/editorExtensions.js';\nimport { Range } from '../../../../editor/common/core/range.js';\nimport { ToggleCaseSensitiveKeybinding, ToggleRegexKeybinding, ToggleWholeWordKeybinding } from '../../../../editor/contrib/find/browser/findModel.js';\nimport { localize, localize2 } from '../../../../nls.js';\nimport { Action2, MenuId, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { SyncDescriptor } from '../../../../platform/instantiation/common/descriptors.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { EditorPaneDescriptor, IEditorPaneRegistry } from '../../../browser/editor.js';\nimport { IWorkbenchContribution, WorkbenchPhase, registerWorkbenchContribution2 } from '../../../common/contributions.js';\nimport { IEditorSerializer, IEditorFactoryRegistry, EditorExtensions, DEFAULT_EDITOR_ASSOCIATION } from '../../../common/editor.js';\nimport { ActiveEditorContext } from '../../../common/contextkeys.js';\nimport { IViewsService } from '../../../services/views/common/viewsService.js';\nimport { getSearchView } from '../../search/browser/searchActionsBase.js';\nimport { searchNewEditorIcon, searchRefreshIcon } from '../../search/browser/searchIcons.js';\nimport * as SearchConstants from '../../search/common/constants.js';\nimport * as SearchEditorConstants from './constants.js';\nimport { SearchEditor } from './searchEditor.js';\nimport { createEditorFromSearchResult, modifySearchEditorContextLinesCommand, openNewSearchEditor, openSearchEditor, selectAllSearchEditorMatchesCommand, toggleSearchEditorCaseSensitiveCommand, toggleSearchEditorContextLinesCommand, toggleSearchEditorRegexCommand, toggleSearchEditorWholeWordCommand } from './searchEditorActions.js';\nimport { getOrMakeSearchEditorInput, SearchConfiguration, SearchEditorInput, SEARCH_EDITOR_EXT } from './searchEditorInput.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { VIEW_ID } from '../../../services/search/common/search.js';\nimport { RegisteredEditorPriority, IEditorResolverService } from '../../../services/editor/common/editorResolverService.js';\nimport { IWorkingCopyEditorHandler, IWorkingCopyEditorService } from '../../../services/workingCopy/common/workingCopyEditorService.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { IWorkingCopyIdentifier } from '../../../services/workingCopy/common/workingCopy.js';\nimport { EditorInput } from '../../../common/editor/editorInput.js';\nimport { getActiveElement } from '../../../../base/browser/dom.js';\n\n\nconst OpenInEditorCommandId = 'search.action.openInEditor';\nconst OpenNewEditorToSideCommandId = 'search.action.openNewEditorToSide';\nconst FocusQueryEditorWidgetCommandId = 'search.action.focusQueryEditorWidget';\nconst FocusQueryEditorFilesToIncludeCommandId = 'search.action.focusFilesToInclude';\nconst FocusQueryEditorFilesToExcludeCommandId = 'search.action.focusFilesToExclude';\n\nconst ToggleSearchEditorCaseSensitiveCommandId = 'toggleSearchEditorCaseSensitive';\nconst ToggleSearchEditorWholeWordCommandId = 'toggleSearchEditorWholeWord';\nconst ToggleSearchEditorRegexCommandId = 'toggleSearchEditorRegex';\nconst IncreaseSearchEditorContextLinesCommandId = 'increaseSearchEditorContextLines';\nconst DecreaseSearchEditorContextLinesCommandId = 'decreaseSearchEditorContextLines';\n\nconst RerunSearchEditorSearchCommandId = 'rerunSearchEditorSearch';\nconst CleanSearchEditorStateCommandId = 'cleanSearchEditorState';\nconst SelectAllSearchEditorMatchesCommandId = 'selectAllSearchEditorMatches';\n\n\n\n//#region Editor Descriptior\nRegistry.as<IEditorPaneRegistry>(EditorExtensions.EditorPane).registerEditorPane(\n\tEditorPaneDescriptor.create(\n\t\tSearchEditor,\n\t\tSearchEditor.ID,\n\t\tlocalize('searchEditor', \"Search Editor\")\n\t),\n\t[\n\t\tnew SyncDescriptor(SearchEditorInput)\n\t]\n);\n//#endregion\n\n//#region Startup Contribution\nclass SearchEditorContribution implements IWorkbenchContribution {\n\n\tstatic readonly ID = 'workbench.contrib.searchEditor';\n\n\tconstructor(\n\t\t@IEditorResolverService editorResolverService: IEditorResolverService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\teditorResolverService.registerEditor(\n\t\t\t'*' + SEARCH_EDITOR_EXT,\n\t\t\t{\n\t\t\t\tid: SearchEditorInput.ID,\n\t\t\t\tlabel: localize('promptOpenWith.searchEditor.displayName', \"Search Editor\"),\n\t\t\t\tdetail: DEFAULT_EDITOR_ASSOCIATION.providerDisplayName,\n\t\t\t\tpriority: RegisteredEditorPriority.default,\n\t\t\t},\n\t\t\t{\n\t\t\t\tsinglePerResource: true,\n\t\t\t\tcanSupportResource: resource => (extname(resource) === SEARCH_EDITOR_EXT)\n\t\t\t},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource }) => {\n\t\t\t\t\treturn { editor: instantiationService.invokeFunction(getOrMakeSearchEditorInput, { from: 'existingFile', fileUri: resource }) };\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n}\n\nregisterWorkbenchContribution2(SearchEditorContribution.ID, SearchEditorContribution, WorkbenchPhase.BlockStartup);\n//#endregion\n\n//#region Input Serializer\ntype SerializedSearchEditor = { modelUri: string | undefined; dirty: boolean; config?: SearchConfiguration; name: string; matchRanges: Range[]; backingUri?: string };\n\nclass SearchEditorInputSerializer implements IEditorSerializer {\n\n\tcanSerialize(input: SearchEditorInput) {\n\t\treturn !!input.tryReadConfigSync();\n\t}\n\n\tserialize(input: SearchEditorInput) {\n\t\tif (!this.canSerialize(input)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (input.isDisposed()) {\n\t\t\treturn JSON.stringify({ modelUri: undefined, dirty: false, config: input.tryReadConfigSync(), name: input.getName(), matchRanges: [], backingUri: input.backingUri?.toString() } satisfies SerializedSearchEditor);\n\t\t}\n\n\t\tlet modelUri = undefined;\n\t\tif (input.modelUri.path || input.modelUri.fragment && input.isDirty()) {\n\t\t\tmodelUri = input.modelUri.toString();\n\t\t}\n\n\t\tconst config = input.tryReadConfigSync();\n\t\tconst dirty = input.isDirty();\n\t\tconst matchRanges = dirty ? input.getMatchRanges() : [];\n\t\tconst backingUri = input.backingUri;\n\n\t\treturn JSON.stringify({ modelUri, dirty, config, name: input.getName(), matchRanges, backingUri: backingUri?.toString() } satisfies SerializedSearchEditor);\n\t}\n\n\tdeserialize(instantiationService: IInstantiationService, serializedEditorInput: string): SearchEditorInput | undefined {\n\t\tconst { modelUri, dirty, config, matchRanges, backingUri } = JSON.parse(serializedEditorInput) as SerializedSearchEditor;\n\t\tif (config && (config.query !== undefined)) {\n\t\t\tif (modelUri) {\n\t\t\t\tconst input = instantiationService.invokeFunction(getOrMakeSearchEditorInput,\n\t\t\t\t\t{ from: 'model', modelUri: URI.parse(modelUri), config, backupOf: backingUri ? URI.parse(backingUri) : undefined });\n\t\t\t\tinput.setDirty(dirty);\n\t\t\t\tinput.setMatchRanges(matchRanges);\n\t\t\t\treturn input;\n\t\t\t} else {\n\t\t\t\tif (backingUri) {\n\t\t\t\t\treturn instantiationService.invokeFunction(getOrMakeSearchEditorInput,\n\t\t\t\t\t\t{ from: 'existingFile', fileUri: URI.parse(backingUri) });\n\t\t\t\t} else {\n\t\t\t\t\treturn instantiationService.invokeFunction(getOrMakeSearchEditorInput,\n\t\t\t\t\t\t{ from: 'rawData', resultsContents: '', config });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nRegistry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory).registerEditorSerializer(\n\tSearchEditorInput.ID,\n\tSearchEditorInputSerializer);\n//#endregion\n\n//#region Commands\nCommandsRegistry.registerCommand(\n\tCleanSearchEditorStateCommandId,\n\t(accessor: ServicesAccessor) => {\n\t\tconst activeEditorPane = accessor.get(IEditorService).activeEditorPane;\n\t\tif (activeEditorPane instanceof SearchEditor) {\n\t\t\tactiveEditorPane.cleanState();\n\t\t}\n\t});\n//#endregion\n\n//#region Actions\nconst category = localize2('search', 'Search Editor');\n\nexport type LegacySearchEditorArgs = Partial<{\n\tquery: string;\n\tincludes: string;\n\texcludes: string;\n\tcontextLines: number;\n\twholeWord: boolean;\n\tcaseSensitive: boolean;\n\tregexp: boolean;\n\tuseIgnores: boolean;\n\tshowIncludesExcludes: boolean;\n\ttriggerSearch: boolean;\n\tfocusResults: boolean;\n\tlocation: 'reuse' | 'new';\n}>;\n\nconst translateLegacyConfig = (legacyConfig: LegacySearchEditorArgs & OpenSearchEditorArgs = {}): OpenSearchEditorArgs => {\n\tconst config: OpenSearchEditorArgs = {};\n\tconst overrides: { [K in keyof LegacySearchEditorArgs]: keyof OpenSearchEditorArgs } = {\n\t\tincludes: 'filesToInclude',\n\t\texcludes: 'filesToExclude',\n\t\twholeWord: 'matchWholeWord',\n\t\tcaseSensitive: 'isCaseSensitive',\n\t\tregexp: 'isRegexp',\n\t\tuseIgnores: 'useExcludeSettingsAndIgnoreFiles',\n\t};\n\tObject.entries(legacyConfig).forEach(([key, value]) => {\n\t\t(config as any)[(overrides as any)[key] ?? key] = value;\n\t});\n\treturn config;\n};\n\nexport type OpenSearchEditorArgs = Partial<SearchConfiguration & { triggerSearch: boolean; focusResults: boolean; location: 'reuse' | 'new' }>;\nconst openArgMetadata = {\n\tdescription: 'Open a new search editor. Arguments passed can include variables like ${relativeFileDirname}.',\n\targs: [{\n\t\tname: 'Open new Search Editor args',\n\t\tschema: {\n\t\t\tproperties: {\n\t\t\t\tquery: { type: 'string' },\n\t\t\t\tfilesToInclude: { type: 'string' },\n\t\t\t\tfilesToExclude: { type: 'string' },\n\t\t\t\tcontextLines: { type: 'number' },\n\t\t\t\tmatchWholeWord: { type: 'boolean' },\n\t\t\t\tisCaseSensitive: { type: 'boolean' },\n\t\t\t\tisRegexp: { type: 'boolean' },\n\t\t\t\tuseExcludeSettingsAndIgnoreFiles: { type: 'boolean' },\n\t\t\t\tshowIncludesExcludes: { type: 'boolean' },\n\t\t\t\ttriggerSearch: { type: 'boolean' },\n\t\t\t\tfocusResults: { type: 'boolean' },\n\t\t\t\tonlyOpenEditors: { type: 'boolean' },\n\t\t\t}\n\t\t}\n\t}]\n} as const;\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'search.searchEditor.action.deleteFileResults',\n\t\t\ttitle: localize2('searchEditor.deleteResultBlock', 'Delete File Results'),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Backspace,\n\t\t\t},\n\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor) {\n\t\tconst contextService = accessor.get(IContextKeyService).getContext(getActiveElement());\n\t\tif (contextService.getValue(SearchEditorConstants.InSearchEditor.serialize())) {\n\t\t\t(accessor.get(IEditorService).activeEditorPane as SearchEditor).deleteResultBlock();\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: SearchEditorConstants.OpenNewEditorCommandId,\n\t\t\ttitle: localize2('search.openNewSearchEditor', 'New Search Editor'),\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tmetadata: openArgMetadata\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor, args: LegacySearchEditorArgs | OpenSearchEditorArgs) {\n\t\tawait accessor.get(IInstantiationService).invokeFunction(openNewSearchEditor, translateLegacyConfig({ location: 'new', ...args }));\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: SearchEditorConstants.OpenEditorCommandId,\n\t\t\ttitle: localize2('search.openSearchEditor', 'Open Search Editor'),\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tmetadata: openArgMetadata\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor, args: LegacySearchEditorArgs | OpenSearchEditorArgs) {\n\t\tawait accessor.get(IInstantiationService).invokeFunction(openNewSearchEditor, translateLegacyConfig({ location: 'reuse', ...args }));\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenNewEditorToSideCommandId,\n\t\t\ttitle: localize2('search.openNewEditorToSide', 'Open New Search Editor to the Side'),\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tmetadata: openArgMetadata\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor, args: LegacySearchEditorArgs | OpenSearchEditorArgs) {\n\t\tawait accessor.get(IInstantiationService).invokeFunction(openNewSearchEditor, translateLegacyConfig(args), true);\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenInEditorCommandId,\n\t\t\ttitle: localize2('search.openResultsInEditor', 'Open Results in Editor'),\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.Enter,\n\t\t\t\twhen: ContextKeyExpr.and(SearchConstants.SearchContext.HasSearchResults, SearchConstants.SearchContext.SearchViewFocusedKey),\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Enter\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor) {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\tconst searchView = getSearchView(viewsService);\n\t\tif (searchView) {\n\t\t\tawait instantiationService.invokeFunction(createEditorFromSearchResult, searchView.searchResult, searchView.searchIncludePattern.getValue(), searchView.searchExcludePattern.getValue(), searchView.searchIncludePattern.onlySearchInOpenEditors());\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: RerunSearchEditorSearchCommandId,\n\t\t\ttitle: localize2('search.rerunSearchInEditor', 'Search Again'),\n\t\t\tcategory,\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyR,\n\t\t\t\twhen: SearchEditorConstants.InSearchEditor,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\ticon: searchRefreshIcon,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\twhen: ActiveEditorContext.isEqualTo(SearchEditorConstants.SearchEditorID)\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: ActiveEditorContext.isEqualTo(SearchEditorConstants.SearchEditorID)\n\t\t\t}]\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor) {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst input = editorService.activeEditor;\n\t\tif (input instanceof SearchEditorInput) {\n\t\t\t(editorService.activeEditorPane as SearchEditor).triggerSearch({ resetCursor: false });\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: FocusQueryEditorWidgetCommandId,\n\t\t\ttitle: localize2('search.action.focusQueryEditorWidget', 'Focus Search Editor Input'),\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor) {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst input = editorService.activeEditor;\n\t\tif (input instanceof SearchEditorInput) {\n\t\t\t(editorService.activeEditorPane as SearchEditor).focusSearchInput();\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: FocusQueryEditorFilesToIncludeCommandId,\n\t\t\ttitle: localize2('search.action.focusFilesToInclude', 'Focus Search Editor Files to Include'),\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor) {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst input = editorService.activeEditor;\n\t\tif (input instanceof SearchEditorInput) {\n\t\t\t(editorService.activeEditorPane as SearchEditor).focusFilesToIncludeInput();\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: FocusQueryEditorFilesToExcludeCommandId,\n\t\t\ttitle: localize2('search.action.focusFilesToExclude', 'Focus Search Editor Files to Exclude'),\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor) {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst input = editorService.activeEditor;\n\t\tif (input instanceof SearchEditorInput) {\n\t\t\t(editorService.activeEditorPane as SearchEditor).focusFilesToExcludeInput();\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleSearchEditorCaseSensitiveCommandId,\n\t\t\ttitle: localize2('searchEditor.action.toggleSearchEditorCaseSensitive', 'Toggle Match Case'),\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\tkeybinding: Object.assign({\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: SearchConstants.SearchContext.SearchInputBoxFocusedKey,\n\t\t\t}, ToggleCaseSensitiveKeybinding)\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor) {\n\t\ttoggleSearchEditorCaseSensitiveCommand(accessor);\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleSearchEditorWholeWordCommandId,\n\t\t\ttitle: localize2('searchEditor.action.toggleSearchEditorWholeWord', 'Toggle Match Whole Word'),\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\tkeybinding: Object.assign({\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: SearchConstants.SearchContext.SearchInputBoxFocusedKey,\n\t\t\t}, ToggleWholeWordKeybinding)\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor) {\n\t\ttoggleSearchEditorWholeWordCommand(accessor);\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleSearchEditorRegexCommandId,\n\t\t\ttitle: localize2('searchEditor.action.toggleSearchEditorRegex', \"Toggle Use Regular Expression\"),\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\tkeybinding: Object.assign({\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: SearchConstants.SearchContext.SearchInputBoxFocusedKey,\n\t\t\t}, ToggleRegexKeybinding)\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor) {\n\t\ttoggleSearchEditorRegexCommand(accessor);\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: SearchEditorConstants.ToggleSearchEditorContextLinesCommandId,\n\t\t\ttitle: localize2('searchEditor.action.toggleSearchEditorContextLines', \"Toggle Context Lines\"),\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.KeyL,\n\t\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyL }\n\t\t\t}\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor) {\n\t\ttoggleSearchEditorContextLinesCommand(accessor);\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: IncreaseSearchEditorContextLinesCommandId,\n\t\t\ttitle: localize2('searchEditor.action.increaseSearchEditorContextLines', \"Increase Context Lines\"),\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.Equal\n\t\t\t}\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor) { modifySearchEditorContextLinesCommand(accessor, true); }\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: DecreaseSearchEditorContextLinesCommandId,\n\t\t\ttitle: localize2('searchEditor.action.decreaseSearchEditorContextLines', \"Decrease Context Lines\"),\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.Minus\n\t\t\t}\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor) { modifySearchEditorContextLinesCommand(accessor, false); }\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: SelectAllSearchEditorMatchesCommandId,\n\t\t\ttitle: localize2('searchEditor.action.selectAllSearchEditorMatches', \"Select All Matches\"),\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyL,\n\t\t\t}\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor) {\n\t\tselectAllSearchEditorMatchesCommand(accessor);\n\t}\n});\n\nregisterAction2(class OpenSearchEditorAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'search.action.openNewEditorFromView',\n\t\t\ttitle: localize('search.openNewEditor', \"Open New Search Editor\"),\n\t\t\tcategory,\n\t\t\ticon: searchNewEditorIcon,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 2,\n\t\t\t\twhen: ContextKeyExpr.equals('view', VIEW_ID),\n\t\t\t}]\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\treturn openSearchEditor(accessor);\n\t}\n});\n//#endregion\n\n//#region Search Editor Working Copy Editor Handler\nclass SearchEditorWorkingCopyEditorHandler extends Disposable implements IWorkbenchContribution, IWorkingCopyEditorHandler {\n\n\tstatic readonly ID = 'workbench.contrib.searchEditorWorkingCopyEditorHandler';\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IWorkingCopyEditorService workingCopyEditorService: IWorkingCopyEditorService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(workingCopyEditorService.registerHandler(this));\n\t}\n\n\thandles(workingCopy: IWorkingCopyIdentifier): boolean {\n\t\treturn workingCopy.resource.scheme === SearchEditorConstants.SearchEditorScheme;\n\t}\n\n\tisOpen(workingCopy: IWorkingCopyIdentifier, editor: EditorInput): boolean {\n\t\tif (!this.handles(workingCopy)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn editor instanceof SearchEditorInput && isEqual(workingCopy.resource, editor.modelUri);\n\t}\n\n\tcreateEditor(workingCopy: IWorkingCopyIdentifier): EditorInput {\n\t\tconst input = this.instantiationService.invokeFunction(getOrMakeSearchEditorInput, { from: 'model', modelUri: workingCopy.resource });\n\t\tinput.setDirty(true);\n\n\t\treturn input;\n\t}\n}\n\nregisterWorkbenchContribution2(SearchEditorWorkingCopyEditorHandler.ID, SearchEditorWorkingCopyEditorHandler, WorkbenchPhase.BlockRestore);\n//#endregion\n"],
  "mappings": "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",
  "names": []
}
