{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/searchEditor/browser/searchEditor.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getActiveElement } from \"../../../../base/browser/dom.js\";\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { extname, isEqual } from \"../../../../base/common/resources.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport type { ServicesAccessor } from \"../../../../editor/browser/editorExtensions.js\";\nimport type { Range } from \"../../../../editor/common/core/range.js\";\nimport {\n\tToggleCaseSensitiveKeybinding,\n\tToggleRegexKeybinding,\n\tToggleWholeWordKeybinding,\n} from \"../../../../editor/contrib/find/browser/findModel.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { CommandsRegistry } from \"../../../../platform/commands/common/commands.js\";\nimport {\n\tContextKeyExpr,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { SyncDescriptor } from \"../../../../platform/instantiation/common/descriptors.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\tEditorPaneDescriptor,\n\ttype IEditorPaneRegistry,\n} from \"../../../browser/editor.js\";\nimport { ActiveEditorContext } from \"../../../common/contextkeys.js\";\nimport {\n\ttype IWorkbenchContribution,\n\tWorkbenchPhase,\n\tregisterWorkbenchContribution2,\n} from \"../../../common/contributions.js\";\nimport {\n\tDEFAULT_EDITOR_ASSOCIATION,\n\tEditorExtensions,\n\ttype IEditorFactoryRegistry,\n\ttype IEditorSerializer,\n} from \"../../../common/editor.js\";\nimport type { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport {\n\tIEditorResolverService,\n\tRegisteredEditorPriority,\n} from \"../../../services/editor/common/editorResolverService.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { VIEW_ID } from \"../../../services/search/common/search.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport type { IWorkingCopyIdentifier } from \"../../../services/workingCopy/common/workingCopy.js\";\nimport {\n\ttype IWorkingCopyEditorHandler,\n\tIWorkingCopyEditorService,\n} from \"../../../services/workingCopy/common/workingCopyEditorService.js\";\nimport { getSearchView } from \"../../search/browser/searchActionsBase.js\";\nimport {\n\tsearchNewEditorIcon,\n\tsearchRefreshIcon,\n} from \"../../search/browser/searchIcons.js\";\nimport * as SearchConstants from \"../../search/common/constants.js\";\nimport * as SearchEditorConstants from \"./constants.js\";\nimport { SearchEditor } from \"./searchEditor.js\";\nimport {\n\tcreateEditorFromSearchResult,\n\tmodifySearchEditorContextLinesCommand,\n\topenNewSearchEditor,\n\topenSearchEditor,\n\tselectAllSearchEditorMatchesCommand,\n\ttoggleSearchEditorCaseSensitiveCommand,\n\ttoggleSearchEditorContextLinesCommand,\n\ttoggleSearchEditorRegexCommand,\n\ttoggleSearchEditorWholeWordCommand,\n} from \"./searchEditorActions.js\";\nimport {\n\tSEARCH_EDITOR_EXT,\n\ttype SearchConfiguration,\n\tSearchEditorInput,\n\tgetOrMakeSearchEditorInput,\n} from \"./searchEditorInput.js\";\n\nconst OpenInEditorCommandId = \"search.action.openInEditor\";\nconst OpenNewEditorToSideCommandId = \"search.action.openNewEditorToSide\";\nconst FocusQueryEditorWidgetCommandId = \"search.action.focusQueryEditorWidget\";\nconst FocusQueryEditorFilesToIncludeCommandId =\n\t\"search.action.focusFilesToInclude\";\nconst FocusQueryEditorFilesToExcludeCommandId =\n\t\"search.action.focusFilesToExclude\";\n\nconst ToggleSearchEditorCaseSensitiveCommandId =\n\t\"toggleSearchEditorCaseSensitive\";\nconst ToggleSearchEditorWholeWordCommandId = \"toggleSearchEditorWholeWord\";\nconst ToggleSearchEditorRegexCommandId = \"toggleSearchEditorRegex\";\nconst IncreaseSearchEditorContextLinesCommandId =\n\t\"increaseSearchEditorContextLines\";\nconst DecreaseSearchEditorContextLinesCommandId =\n\t\"decreaseSearchEditorContextLines\";\n\nconst RerunSearchEditorSearchCommandId = \"rerunSearchEditorSearch\";\nconst CleanSearchEditorStateCommandId = \"cleanSearchEditorState\";\nconst SelectAllSearchEditorMatchesCommandId = \"selectAllSearchEditorMatches\";\n\n//#region Editor Descriptior\nRegistry.as<IEditorPaneRegistry>(\n\tEditorExtensions.EditorPane,\n).registerEditorPane(\n\tEditorPaneDescriptor.create(\n\t\tSearchEditor,\n\t\tSearchEditor.ID,\n\t\tlocalize(\"searchEditor\", \"Search Editor\"),\n\t),\n\t[new SyncDescriptor(SearchEditorInput)],\n);\n//#endregion\n\n//#region Startup Contribution\nclass SearchEditorContribution implements IWorkbenchContribution {\n\tstatic readonly ID = \"workbench.contrib.searchEditor\";\n\n\tconstructor(\n\t\t@IEditorResolverService editorResolverService: IEditorResolverService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\teditorResolverService.registerEditor(\n\t\t\t\"*\" + SEARCH_EDITOR_EXT,\n\t\t\t{\n\t\t\t\tid: SearchEditorInput.ID,\n\t\t\t\tlabel: localize(\n\t\t\t\t\t\"promptOpenWith.searchEditor.displayName\",\n\t\t\t\t\t\"Search Editor\",\n\t\t\t\t),\n\t\t\t\tdetail: DEFAULT_EDITOR_ASSOCIATION.providerDisplayName,\n\t\t\t\tpriority: RegisteredEditorPriority.default,\n\t\t\t},\n\t\t\t{\n\t\t\t\tsinglePerResource: true,\n\t\t\t\tcanSupportResource: (resource) =>\n\t\t\t\t\textname(resource) === SEARCH_EDITOR_EXT,\n\t\t\t},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource }) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\teditor: instantiationService.invokeFunction(\n\t\t\t\t\t\t\tgetOrMakeSearchEditorInput,\n\t\t\t\t\t\t\t{ from: \"existingFile\", fileUri: resource },\n\t\t\t\t\t\t),\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n}\n\nregisterWorkbenchContribution2(\n\tSearchEditorContribution.ID,\n\tSearchEditorContribution,\n\tWorkbenchPhase.BlockStartup,\n);\n//#endregion\n\n//#region Input Serializer\ntype SerializedSearchEditor = {\n\tmodelUri: string | undefined;\n\tdirty: boolean;\n\tconfig?: SearchConfiguration;\n\tname: string;\n\tmatchRanges: Range[];\n\tbackingUri?: string;\n};\n\nclass SearchEditorInputSerializer implements IEditorSerializer {\n\tcanSerialize(input: SearchEditorInput) {\n\t\treturn !!input.tryReadConfigSync();\n\t}\n\n\tserialize(input: SearchEditorInput) {\n\t\tif (!this.canSerialize(input)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (input.isDisposed()) {\n\t\t\treturn JSON.stringify({\n\t\t\t\tmodelUri: undefined,\n\t\t\t\tdirty: false,\n\t\t\t\tconfig: input.tryReadConfigSync(),\n\t\t\t\tname: input.getName(),\n\t\t\t\tmatchRanges: [],\n\t\t\t\tbackingUri: input.backingUri?.toString(),\n\t\t\t} satisfies SerializedSearchEditor);\n\t\t}\n\n\t\tlet modelUri;\n\t\tif (\n\t\t\tinput.modelUri.path ||\n\t\t\t(input.modelUri.fragment && input.isDirty())\n\t\t) {\n\t\t\tmodelUri = input.modelUri.toString();\n\t\t}\n\n\t\tconst config = input.tryReadConfigSync();\n\t\tconst dirty = input.isDirty();\n\t\tconst matchRanges = dirty ? input.getMatchRanges() : [];\n\t\tconst backingUri = input.backingUri;\n\n\t\treturn JSON.stringify({\n\t\t\tmodelUri,\n\t\t\tdirty,\n\t\t\tconfig,\n\t\t\tname: input.getName(),\n\t\t\tmatchRanges,\n\t\t\tbackingUri: backingUri?.toString(),\n\t\t} satisfies SerializedSearchEditor);\n\t}\n\n\tdeserialize(\n\t\tinstantiationService: IInstantiationService,\n\t\tserializedEditorInput: string,\n\t): SearchEditorInput | undefined {\n\t\tconst { modelUri, dirty, config, matchRanges, backingUri } = JSON.parse(\n\t\t\tserializedEditorInput,\n\t\t) as SerializedSearchEditor;\n\t\tif (config && config.query !== undefined) {\n\t\t\tif (modelUri) {\n\t\t\t\tconst input = instantiationService.invokeFunction(\n\t\t\t\t\tgetOrMakeSearchEditorInput,\n\t\t\t\t\t{\n\t\t\t\t\t\tfrom: \"model\",\n\t\t\t\t\t\tmodelUri: URI.parse(modelUri),\n\t\t\t\t\t\tconfig,\n\t\t\t\t\t\tbackupOf: backingUri\n\t\t\t\t\t\t\t? URI.parse(backingUri)\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t\tinput.setDirty(dirty);\n\t\t\t\tinput.setMatchRanges(matchRanges);\n\t\t\t\treturn input;\n\t\t\t} else if (backingUri) {\n\t\t\t\treturn instantiationService.invokeFunction(\n\t\t\t\t\tgetOrMakeSearchEditorInput,\n\t\t\t\t\t{ from: \"existingFile\", fileUri: URI.parse(backingUri) },\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn instantiationService.invokeFunction(\n\t\t\t\t\tgetOrMakeSearchEditorInput,\n\t\t\t\t\t{ from: \"rawData\", resultsContents: \"\", config },\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nRegistry.as<IEditorFactoryRegistry>(\n\tEditorExtensions.EditorFactory,\n).registerEditorSerializer(SearchEditorInput.ID, SearchEditorInputSerializer);\n//#endregion\n\n//#region Commands\nCommandsRegistry.registerCommand(\n\tCleanSearchEditorStateCommandId,\n\t(accessor: ServicesAccessor) => {\n\t\tconst activeEditorPane = accessor.get(IEditorService).activeEditorPane;\n\t\tif (activeEditorPane instanceof SearchEditor) {\n\t\t\tactiveEditorPane.cleanState();\n\t\t}\n\t},\n);\n//#endregion\n\n//#region Actions\nconst category = localize2(\"search\", \"Search Editor\");\n\nexport type LegacySearchEditorArgs = Partial<{\n\tquery: string;\n\tincludes: string;\n\texcludes: string;\n\tcontextLines: number;\n\twholeWord: boolean;\n\tcaseSensitive: boolean;\n\tregexp: boolean;\n\tuseIgnores: boolean;\n\tshowIncludesExcludes: boolean;\n\ttriggerSearch: boolean;\n\tfocusResults: boolean;\n\tlocation: \"reuse\" | \"new\";\n}>;\n\nconst translateLegacyConfig = (\n\tlegacyConfig: LegacySearchEditorArgs & OpenSearchEditorArgs = {},\n): OpenSearchEditorArgs => {\n\tconst config: OpenSearchEditorArgs = {};\n\tconst overrides: {\n\t\t[K in keyof LegacySearchEditorArgs]: keyof OpenSearchEditorArgs;\n\t} = {\n\t\tincludes: \"filesToInclude\",\n\t\texcludes: \"filesToExclude\",\n\t\twholeWord: \"matchWholeWord\",\n\t\tcaseSensitive: \"isCaseSensitive\",\n\t\tregexp: \"isRegexp\",\n\t\tuseIgnores: \"useExcludeSettingsAndIgnoreFiles\",\n\t};\n\tObject.entries(legacyConfig).forEach(([key, value]) => {\n\t\t(config as any)[(overrides as any)[key] ?? key] = value;\n\t});\n\treturn config;\n};\n\nexport type OpenSearchEditorArgs = Partial<\n\tSearchConfiguration & {\n\t\ttriggerSearch: boolean;\n\t\tfocusResults: boolean;\n\t\tlocation: \"reuse\" | \"new\";\n\t}\n>;\nconst openArgMetadata = {\n\tdescription:\n\t\t\"Open a new search editor. Arguments passed can include variables like ${relativeFileDirname}.\",\n\targs: [\n\t\t{\n\t\t\tname: \"Open new Search Editor args\",\n\t\t\tschema: {\n\t\t\t\tproperties: {\n\t\t\t\t\tquery: { type: \"string\" },\n\t\t\t\t\tfilesToInclude: { type: \"string\" },\n\t\t\t\t\tfilesToExclude: { type: \"string\" },\n\t\t\t\t\tcontextLines: { type: \"number\" },\n\t\t\t\t\tmatchWholeWord: { type: \"boolean\" },\n\t\t\t\t\tisCaseSensitive: { type: \"boolean\" },\n\t\t\t\t\tisRegexp: { type: \"boolean\" },\n\t\t\t\t\tuseExcludeSettingsAndIgnoreFiles: { type: \"boolean\" },\n\t\t\t\t\tshowIncludesExcludes: { type: \"boolean\" },\n\t\t\t\t\ttriggerSearch: { type: \"boolean\" },\n\t\t\t\t\tfocusResults: { type: \"boolean\" },\n\t\t\t\t\tonlyOpenEditors: { type: \"boolean\" },\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n} as const;\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"search.searchEditor.action.deleteFileResults\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"searchEditor.deleteResultBlock\",\n\t\t\t\t\t\"Delete File Results\",\n\t\t\t\t),\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Backspace,\n\t\t\t\t},\n\t\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\t\tcategory,\n\t\t\t\tf1: true,\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor) {\n\t\t\tconst contextService = accessor\n\t\t\t\t.get(IContextKeyService)\n\t\t\t\t.getContext(getActiveElement());\n\t\t\tif (\n\t\t\t\tcontextService.getValue(\n\t\t\t\t\tSearchEditorConstants.InSearchEditor.serialize(),\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t(\n\t\t\t\t\taccessor.get(IEditorService)\n\t\t\t\t\t\t.activeEditorPane as SearchEditor\n\t\t\t\t).deleteResultBlock();\n\t\t\t}\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: SearchEditorConstants.OpenNewEditorCommandId,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"search.openNewSearchEditor\",\n\t\t\t\t\t\"New Search Editor\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t\tf1: true,\n\t\t\t\tmetadata: openArgMetadata,\n\t\t\t});\n\t\t}\n\t\tasync run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\targs: LegacySearchEditorArgs | OpenSearchEditorArgs,\n\t\t) {\n\t\t\tawait accessor\n\t\t\t\t.get(IInstantiationService)\n\t\t\t\t.invokeFunction(\n\t\t\t\t\topenNewSearchEditor,\n\t\t\t\t\ttranslateLegacyConfig({ location: \"new\", ...args }),\n\t\t\t\t);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: SearchEditorConstants.OpenEditorCommandId,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"search.openSearchEditor\",\n\t\t\t\t\t\"Open Search Editor\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t\tf1: true,\n\t\t\t\tmetadata: openArgMetadata,\n\t\t\t});\n\t\t}\n\t\tasync run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\targs: LegacySearchEditorArgs | OpenSearchEditorArgs,\n\t\t) {\n\t\t\tawait accessor\n\t\t\t\t.get(IInstantiationService)\n\t\t\t\t.invokeFunction(\n\t\t\t\t\topenNewSearchEditor,\n\t\t\t\t\ttranslateLegacyConfig({ location: \"reuse\", ...args }),\n\t\t\t\t);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: OpenNewEditorToSideCommandId,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"search.openNewEditorToSide\",\n\t\t\t\t\t\"Open New Search Editor to the Side\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t\tf1: true,\n\t\t\t\tmetadata: openArgMetadata,\n\t\t\t});\n\t\t}\n\t\tasync run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\targs: LegacySearchEditorArgs | OpenSearchEditorArgs,\n\t\t) {\n\t\t\tawait accessor\n\t\t\t\t.get(IInstantiationService)\n\t\t\t\t.invokeFunction(\n\t\t\t\t\topenNewSearchEditor,\n\t\t\t\t\ttranslateLegacyConfig(args),\n\t\t\t\t\ttrue,\n\t\t\t\t);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: OpenInEditorCommandId,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"search.openResultsInEditor\",\n\t\t\t\t\t\"Open Results in Editor\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tprimary: KeyMod.Alt | KeyCode.Enter,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tSearchConstants.SearchContext.HasSearchResults,\n\t\t\t\t\t\tSearchConstants.SearchContext.SearchViewFocusedKey,\n\t\t\t\t\t),\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tmac: {\n\t\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor) {\n\t\t\tconst viewsService = accessor.get(IViewsService);\n\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\t\tconst searchView = getSearchView(viewsService);\n\t\t\tif (searchView) {\n\t\t\t\tawait instantiationService.invokeFunction(\n\t\t\t\t\tcreateEditorFromSearchResult,\n\t\t\t\t\tsearchView.searchResult,\n\t\t\t\t\tsearchView.searchIncludePattern.getValue(),\n\t\t\t\t\tsearchView.searchExcludePattern.getValue(),\n\t\t\t\t\tsearchView.searchIncludePattern.onlySearchInOpenEditors(),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: RerunSearchEditorSearchCommandId,\n\t\t\t\ttitle: localize2(\"search.rerunSearchInEditor\", \"Search Again\"),\n\t\t\t\tcategory,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyR,\n\t\t\t\t\twhen: SearchEditorConstants.InSearchEditor,\n\t\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\t},\n\t\t\t\ticon: searchRefreshIcon,\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\twhen: ActiveEditorContext.isEqualTo(\n\t\t\t\t\t\t\tSearchEditorConstants.SearchEditorID,\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t\twhen: ActiveEditorContext.isEqualTo(\n\t\t\t\t\t\t\tSearchEditorConstants.SearchEditorID,\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor) {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst input = editorService.activeEditor;\n\t\t\tif (input instanceof SearchEditorInput) {\n\t\t\t\t(editorService.activeEditorPane as SearchEditor).triggerSearch({\n\t\t\t\t\tresetCursor: false,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: FocusQueryEditorWidgetCommandId,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"search.action.focusQueryEditorWidget\",\n\t\t\t\t\t\"Focus Search Editor Input\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t\tf1: true,\n\t\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor) {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst input = editorService.activeEditor;\n\t\t\tif (input instanceof SearchEditorInput) {\n\t\t\t\t(\n\t\t\t\t\teditorService.activeEditorPane as SearchEditor\n\t\t\t\t).focusSearchInput();\n\t\t\t}\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: FocusQueryEditorFilesToIncludeCommandId,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"search.action.focusFilesToInclude\",\n\t\t\t\t\t\"Focus Search Editor Files to Include\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t\tf1: true,\n\t\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor) {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst input = editorService.activeEditor;\n\t\t\tif (input instanceof SearchEditorInput) {\n\t\t\t\t(\n\t\t\t\t\teditorService.activeEditorPane as SearchEditor\n\t\t\t\t).focusFilesToIncludeInput();\n\t\t\t}\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: FocusQueryEditorFilesToExcludeCommandId,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"search.action.focusFilesToExclude\",\n\t\t\t\t\t\"Focus Search Editor Files to Exclude\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t\tf1: true,\n\t\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor) {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst input = editorService.activeEditor;\n\t\t\tif (input instanceof SearchEditorInput) {\n\t\t\t\t(\n\t\t\t\t\teditorService.activeEditorPane as SearchEditor\n\t\t\t\t).focusFilesToExcludeInput();\n\t\t\t}\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: ToggleSearchEditorCaseSensitiveCommandId,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"searchEditor.action.toggleSearchEditorCaseSensitive\",\n\t\t\t\t\t\"Toggle Match Case\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t\tf1: true,\n\t\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\t\tkeybinding: Object.assign(\n\t\t\t\t\t{\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\twhen: SearchConstants.SearchContext\n\t\t\t\t\t\t\t.SearchInputBoxFocusedKey,\n\t\t\t\t\t},\n\t\t\t\t\tToggleCaseSensitiveKeybinding,\n\t\t\t\t),\n\t\t\t});\n\t\t}\n\t\trun(accessor: ServicesAccessor) {\n\t\t\ttoggleSearchEditorCaseSensitiveCommand(accessor);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: ToggleSearchEditorWholeWordCommandId,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"searchEditor.action.toggleSearchEditorWholeWord\",\n\t\t\t\t\t\"Toggle Match Whole Word\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t\tf1: true,\n\t\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\t\tkeybinding: Object.assign(\n\t\t\t\t\t{\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\twhen: SearchConstants.SearchContext\n\t\t\t\t\t\t\t.SearchInputBoxFocusedKey,\n\t\t\t\t\t},\n\t\t\t\t\tToggleWholeWordKeybinding,\n\t\t\t\t),\n\t\t\t});\n\t\t}\n\t\trun(accessor: ServicesAccessor) {\n\t\t\ttoggleSearchEditorWholeWordCommand(accessor);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: ToggleSearchEditorRegexCommandId,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"searchEditor.action.toggleSearchEditorRegex\",\n\t\t\t\t\t\"Toggle Use Regular Expression\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t\tf1: true,\n\t\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\t\tkeybinding: Object.assign(\n\t\t\t\t\t{\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\twhen: SearchConstants.SearchContext\n\t\t\t\t\t\t\t.SearchInputBoxFocusedKey,\n\t\t\t\t\t},\n\t\t\t\t\tToggleRegexKeybinding,\n\t\t\t\t),\n\t\t\t});\n\t\t}\n\t\trun(accessor: ServicesAccessor) {\n\t\t\ttoggleSearchEditorRegexCommand(accessor);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: SearchEditorConstants.ToggleSearchEditorContextLinesCommandId,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"searchEditor.action.toggleSearchEditorContextLines\",\n\t\t\t\t\t\"Toggle Context Lines\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t\tf1: true,\n\t\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyMod.Alt | KeyCode.KeyL,\n\t\t\t\t\tmac: {\n\t\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyL,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\trun(accessor: ServicesAccessor) {\n\t\t\ttoggleSearchEditorContextLinesCommand(accessor);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: IncreaseSearchEditorContextLinesCommandId,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"searchEditor.action.increaseSearchEditorContextLines\",\n\t\t\t\t\t\"Increase Context Lines\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t\tf1: true,\n\t\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyMod.Alt | KeyCode.Equal,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\trun(accessor: ServicesAccessor) {\n\t\t\tmodifySearchEditorContextLinesCommand(accessor, true);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: DecreaseSearchEditorContextLinesCommandId,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"searchEditor.action.decreaseSearchEditorContextLines\",\n\t\t\t\t\t\"Decrease Context Lines\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t\tf1: true,\n\t\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyMod.Alt | KeyCode.Minus,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\trun(accessor: ServicesAccessor) {\n\t\t\tmodifySearchEditorContextLinesCommand(accessor, false);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: SelectAllSearchEditorMatchesCommandId,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"searchEditor.action.selectAllSearchEditorMatches\",\n\t\t\t\t\t\"Select All Matches\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t\tf1: true,\n\t\t\t\tprecondition: SearchEditorConstants.InSearchEditor,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyL,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\trun(accessor: ServicesAccessor) {\n\t\t\tselectAllSearchEditorMatchesCommand(accessor);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass OpenSearchEditorAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"search.action.openNewEditorFromView\",\n\t\t\t\ttitle: localize(\n\t\t\t\t\t\"search.openNewEditor\",\n\t\t\t\t\t\"Open New Search Editor\",\n\t\t\t\t),\n\t\t\t\tcategory,\n\t\t\t\ticon: searchNewEditorIcon,\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\torder: 2,\n\t\t\t\t\t\twhen: ContextKeyExpr.equals(\"view\", VIEW_ID),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\t\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\t\treturn openSearchEditor(accessor);\n\t\t}\n\t},\n);\n//#endregion\n\n//#region Search Editor Working Copy Editor Handler\nclass SearchEditorWorkingCopyEditorHandler\n\textends Disposable\n\timplements IWorkbenchContribution, IWorkingCopyEditorHandler\n{\n\tstatic readonly ID =\n\t\t\"workbench.contrib.searchEditorWorkingCopyEditorHandler\";\n\n\tconstructor(\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\t@IWorkingCopyEditorService\n\t\tworkingCopyEditorService: IWorkingCopyEditorService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(workingCopyEditorService.registerHandler(this));\n\t}\n\n\thandles(workingCopy: IWorkingCopyIdentifier): boolean {\n\t\treturn (\n\t\t\tworkingCopy.resource.scheme ===\n\t\t\tSearchEditorConstants.SearchEditorScheme\n\t\t);\n\t}\n\n\tisOpen(workingCopy: IWorkingCopyIdentifier, editor: EditorInput): boolean {\n\t\tif (!this.handles(workingCopy)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn (\n\t\t\teditor instanceof SearchEditorInput &&\n\t\t\tisEqual(workingCopy.resource, editor.modelUri)\n\t\t);\n\t}\n\n\tcreateEditor(workingCopy: IWorkingCopyIdentifier): EditorInput {\n\t\tconst input = this.instantiationService.invokeFunction(\n\t\t\tgetOrMakeSearchEditorInput,\n\t\t\t{ from: \"model\", modelUri: workingCopy.resource },\n\t\t);\n\t\tinput.setDirty(true);\n\n\t\treturn input;\n\t}\n}\n\nregisterWorkbenchContribution2(\n\tSearchEditorWorkingCopyEditorHandler.ID,\n\tSearchEditorWorkingCopyEditorHandler,\n\tWorkbenchPhase.BlockRestore,\n);\n//#endregion\n"],
  "mappings": "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",
  "names": []
}
