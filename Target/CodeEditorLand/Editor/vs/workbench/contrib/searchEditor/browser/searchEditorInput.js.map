{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/searchEditor/browser/searchEditorInput.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/searchEditor.css\";\nimport { VSBuffer, bufferToReadable } from \"../../../../base/common/buffer.js\";\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { Emitter, type Event } from \"../../../../base/common/event.js\";\nimport type { IDisposable } from \"../../../../base/common/lifecycle.js\";\nimport { basename } from \"../../../../base/common/path.js\";\nimport {\n\textname,\n\tisEqual,\n\tjoinPath,\n} from \"../../../../base/common/resources.js\";\nimport type { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport type { Range } from \"../../../../editor/common/core/range.js\";\nimport {\n\ttype ITextModel,\n\tTrackedRangeStickiness,\n} from \"../../../../editor/common/model.js\";\nimport { IModelService } from \"../../../../editor/common/services/model.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IFileDialogService } from \"../../../../platform/dialogs/common/dialogs.js\";\nimport type { IResourceEditorInput } from \"../../../../platform/editor/common/editor.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { registerIcon } from \"../../../../platform/theme/common/iconRegistry.js\";\nimport {\n\tEditorInputCapabilities,\n\tEditorResourceAccessor,\n\ttype GroupIdentifier,\n\ttype IMoveResult,\n\ttype IRevertOptions,\n\ttype ISaveOptions,\n\ttype IUntypedEditorInput,\n} from \"../../../common/editor.js\";\nimport { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport { Memento } from \"../../../common/memento.js\";\nimport { IPathService } from \"../../../services/path/common/pathService.js\";\nimport type {\n\tISearchComplete,\n\tISearchConfigurationProperties,\n} from \"../../../services/search/common/search.js\";\nimport {\n\ttype ITextFileSaveOptions,\n\tITextFileService,\n} from \"../../../services/textfile/common/textfiles.js\";\nimport {\n\ttype IWorkingCopy,\n\ttype IWorkingCopyBackup,\n\ttype IWorkingCopySaveEvent,\n\tWorkingCopyCapabilities,\n} from \"../../../services/workingCopy/common/workingCopy.js\";\nimport { IWorkingCopyService } from \"../../../services/workingCopy/common/workingCopyService.js\";\nimport {\n\tSearchEditorFindMatchClass,\n\tSearchEditorInputTypeId,\n\tSearchEditorScheme,\n\tSearchEditorWorkingCopyTypeId,\n} from \"./constants.js\";\nimport {\n\ttype SearchConfigurationModel,\n\tSearchEditorModel,\n\tsearchEditorModelFactory,\n} from \"./searchEditorModel.js\";\nimport {\n\tdefaultSearchConfig,\n\tparseSavedSearchEditor,\n\tserializeSearchConfiguration,\n} from \"./searchEditorSerialization.js\";\n\nexport type SearchConfiguration = {\n\tquery: string;\n\tfilesToInclude: string;\n\tfilesToExclude: string;\n\tcontextLines: number;\n\tmatchWholeWord: boolean;\n\tisCaseSensitive: boolean;\n\tisRegexp: boolean;\n\tuseExcludeSettingsAndIgnoreFiles: boolean;\n\tshowIncludesExcludes: boolean;\n\tonlyOpenEditors: boolean;\n\tnotebookSearchConfig: {\n\t\tincludeMarkupInput: boolean;\n\t\tincludeMarkupPreview: boolean;\n\t\tincludeCodeInput: boolean;\n\t\tincludeOutput: boolean;\n\t};\n};\n\nexport const SEARCH_EDITOR_EXT = \".code-search\";\n\nconst SearchEditorIcon = registerIcon(\n\t\"search-editor-label-icon\",\n\tCodicon.search,\n\tlocalize(\"searchEditorLabelIcon\", \"Icon of the search editor label.\"),\n);\n\nexport class SearchEditorInput extends EditorInput {\n\tstatic readonly ID: string = SearchEditorInputTypeId;\n\n\toverride get typeId(): string {\n\t\treturn SearchEditorInput.ID;\n\t}\n\n\toverride get editorId(): string | undefined {\n\t\treturn this.typeId;\n\t}\n\n\toverride getIcon(): ThemeIcon {\n\t\treturn SearchEditorIcon;\n\t}\n\n\toverride get capabilities(): EditorInputCapabilities {\n\t\tlet capabilities = EditorInputCapabilities.Singleton;\n\t\tif (!this.backingUri) {\n\t\t\tcapabilities |= EditorInputCapabilities.Untitled;\n\t\t}\n\n\t\treturn capabilities;\n\t}\n\n\tprivate memento: Memento;\n\n\tprivate dirty = false;\n\n\tprivate lastLabel: string | undefined;\n\n\tprivate readonly _onDidChangeContent = this._register(new Emitter<void>());\n\treadonly onDidChangeContent: Event<void> = this._onDidChangeContent.event;\n\n\tprivate readonly _onDidSave = this._register(\n\t\tnew Emitter<IWorkingCopySaveEvent>(),\n\t);\n\treadonly onDidSave: Event<IWorkingCopySaveEvent> = this._onDidSave.event;\n\n\tprivate oldDecorationsIDs: string[] = [];\n\n\tget resource() {\n\t\treturn this.backingUri || this.modelUri;\n\t}\n\n\tpublic ongoingSearchOperation: Promise<ISearchComplete> | undefined;\n\n\tpublic model: SearchEditorModel;\n\tprivate _cachedResultsModel: ITextModel | undefined;\n\tprivate _cachedConfigurationModel: SearchConfigurationModel | undefined;\n\n\tconstructor(\n\t\tpublic readonly modelUri: URI,\n\t\tpublic readonly backingUri: URI | undefined,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@ITextFileService protected readonly textFileService: ITextFileService,\n\t\t@IFileDialogService private readonly fileDialogService: IFileDialogService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IWorkingCopyService private readonly workingCopyService: IWorkingCopyService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IPathService private readonly pathService: IPathService,\n\t\t@IStorageService storageService: IStorageService,\n\t) {\n\t\tsuper();\n\n\t\tthis.model = instantiationService.createInstance(SearchEditorModel, modelUri);\n\n\t\tif (this.modelUri.scheme !== SearchEditorScheme) {\n\t\t\tthrow Error('SearchEditorInput must be invoked with a SearchEditorScheme uri');\n\t\t}\n\n\t\tthis.memento = new Memento(SearchEditorInput.ID, storageService);\n\t\tthis._register(storageService.onWillSaveState(() => this.memento.saveMemento()));\n\n\t\tconst input = this;\n\t\tconst workingCopyAdapter = new class implements IWorkingCopy {\n\t\t\treadonly typeId = SearchEditorWorkingCopyTypeId;\n\t\t\treadonly resource = input.modelUri;\n\t\t\tget name() { return input.getName(); }\n\t\t\treadonly capabilities = input.hasCapability(EditorInputCapabilities.Untitled) ? WorkingCopyCapabilities.Untitled : WorkingCopyCapabilities.None;\n\t\t\treadonly onDidChangeDirty = input.onDidChangeDirty;\n\t\t\treadonly onDidChangeContent = input.onDidChangeContent;\n\t\t\treadonly onDidSave = input.onDidSave;\n\t\t\tisDirty(): boolean { return input.isDirty(); }\n\t\t\tisModified(): boolean { return input.isDirty(); }\n\t\t\tbackup(token: CancellationToken): Promise<IWorkingCopyBackup> { return input.backup(token); }\n\t\t\tsave(options?: ISaveOptions): Promise<boolean> { return input.save(0, options).then(editor => !!editor); }\n\t\t\trevert(options?: IRevertOptions): Promise<void> { return input.revert(0, options); }\n\t\t};\n\n\t\tthis._register(this.workingCopyService.registerWorkingCopy(workingCopyAdapter));\n\t}\n\n\toverride async save(\n\t\tgroup: GroupIdentifier,\n\t\toptions?: ITextFileSaveOptions,\n\t): Promise<EditorInput | undefined> {\n\t\tif ((await this.resolveModels()).resultsModel.isDisposed()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.backingUri) {\n\t\t\tawait this.textFileService.write(\n\t\t\t\tthis.backingUri,\n\t\t\t\tawait this.serializeForDisk(),\n\t\t\t\toptions,\n\t\t\t);\n\t\t\tthis.setDirty(false);\n\t\t\tthis._onDidSave.fire({\n\t\t\t\treason: options?.reason,\n\t\t\t\tsource: options?.source,\n\t\t\t});\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn this.saveAs(group, options);\n\t\t}\n\t}\n\n\tpublic tryReadConfigSync(): SearchConfiguration | undefined {\n\t\treturn this._cachedConfigurationModel?.config;\n\t}\n\n\tprivate async serializeForDisk() {\n\t\tconst { configurationModel, resultsModel } = await this.resolveModels();\n\t\treturn (\n\t\t\tserializeSearchConfiguration(configurationModel.config) +\n\t\t\t\"\\n\" +\n\t\t\tresultsModel.getValue()\n\t\t);\n\t}\n\n\tprivate configChangeListenerDisposable: IDisposable | undefined;\n\tprivate registerConfigChangeListeners(model: SearchConfigurationModel) {\n\t\tthis.configChangeListenerDisposable?.dispose();\n\t\tif (!this.isDisposed()) {\n\t\t\tthis.configChangeListenerDisposable = model.onConfigDidUpdate(\n\t\t\t\t() => {\n\t\t\t\t\tif (this.lastLabel !== this.getName()) {\n\t\t\t\t\t\tthis._onDidChangeLabel.fire();\n\t\t\t\t\t\tthis.lastLabel = this.getName();\n\t\t\t\t\t}\n\t\t\t\t\tthis.memento.getMemento(\n\t\t\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\t\t\tStorageTarget.MACHINE,\n\t\t\t\t\t).searchConfig = model.config;\n\t\t\t\t},\n\t\t\t);\n\t\t\tthis._register(this.configChangeListenerDisposable);\n\t\t}\n\t}\n\n\tasync resolveModels() {\n\t\treturn this.model.resolve().then((data) => {\n\t\t\tthis._cachedResultsModel = data.resultsModel;\n\t\t\tthis._cachedConfigurationModel = data.configurationModel;\n\t\t\tif (this.lastLabel !== this.getName()) {\n\t\t\t\tthis._onDidChangeLabel.fire();\n\t\t\t\tthis.lastLabel = this.getName();\n\t\t\t}\n\t\t\tthis.registerConfigChangeListeners(data.configurationModel);\n\t\t\treturn data;\n\t\t});\n\t}\n\n\toverride async saveAs(\n\t\tgroup: GroupIdentifier,\n\t\toptions?: ITextFileSaveOptions,\n\t): Promise<EditorInput | undefined> {\n\t\tconst path = await this.fileDialogService.pickFileToSave(\n\t\t\tawait this.suggestFileName(),\n\t\t\toptions?.availableFileSystems,\n\t\t);\n\t\tif (path) {\n\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\towner: \"roblourens\";\n\t\t\t\t\tcomment: \"Fired when a search editor is saved\";\n\t\t\t\t}\n\t\t\t>(\"searchEditor/saveSearchResults\");\n\t\t\tconst toWrite = await this.serializeForDisk();\n\t\t\tif (\n\t\t\t\tawait this.textFileService.create([\n\t\t\t\t\t{\n\t\t\t\t\t\tresource: path,\n\t\t\t\t\t\tvalue: toWrite,\n\t\t\t\t\t\toptions: { overwrite: true },\n\t\t\t\t\t},\n\t\t\t\t])\n\t\t\t) {\n\t\t\t\tthis.setDirty(false);\n\t\t\t\tif (!isEqual(path, this.modelUri)) {\n\t\t\t\t\tconst input = this.instantiationService.invokeFunction(\n\t\t\t\t\t\tgetOrMakeSearchEditorInput,\n\t\t\t\t\t\t{ fileUri: path, from: \"existingFile\" },\n\t\t\t\t\t);\n\t\t\t\t\tinput.setMatchRanges(this.getMatchRanges());\n\t\t\t\t\treturn input;\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\toverride getName(maxLength = 12): string {\n\t\tconst trimToMax = (label: string) =>\n\t\t\tlabel.length < maxLength\n\t\t\t\t? label\n\t\t\t\t: `${label.slice(0, maxLength - 3)}...`;\n\n\t\tif (this.backingUri) {\n\t\t\tconst originalURI = EditorResourceAccessor.getOriginalUri(this);\n\t\t\treturn localize(\n\t\t\t\t\"searchTitle.withQuery\",\n\t\t\t\t\"Search: {0}\",\n\t\t\t\tbasename(\n\t\t\t\t\t(originalURI ?? this.backingUri).path,\n\t\t\t\t\tSEARCH_EDITOR_EXT,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tconst query = this._cachedConfigurationModel?.config?.query?.trim();\n\t\tif (query) {\n\t\t\treturn localize(\n\t\t\t\t\"searchTitle.withQuery\",\n\t\t\t\t\"Search: {0}\",\n\t\t\t\ttrimToMax(query),\n\t\t\t);\n\t\t}\n\t\treturn localize(\"searchTitle\", \"Search\");\n\t}\n\n\tsetDirty(dirty: boolean) {\n\t\tconst wasDirty = this.dirty;\n\t\tthis.dirty = dirty;\n\t\tif (wasDirty !== dirty) {\n\t\t\tthis._onDidChangeDirty.fire();\n\t\t}\n\t}\n\n\toverride isDirty() {\n\t\treturn this.dirty;\n\t}\n\n\toverride async rename(\n\t\tgroup: GroupIdentifier,\n\t\ttarget: URI,\n\t): Promise<IMoveResult | undefined> {\n\t\tif (extname(target) === SEARCH_EDITOR_EXT) {\n\t\t\treturn {\n\t\t\t\teditor: this.instantiationService.invokeFunction(\n\t\t\t\t\tgetOrMakeSearchEditorInput,\n\t\t\t\t\t{ from: \"existingFile\", fileUri: target },\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\t\t// Ignore move if editor was renamed to a different file extension\n\t\treturn undefined;\n\t}\n\n\toverride dispose() {\n\t\tthis.modelService.destroyModel(this.modelUri);\n\t\tsuper.dispose();\n\t}\n\n\toverride matches(other: EditorInput | IUntypedEditorInput): boolean {\n\t\tif (super.matches(other)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (other instanceof SearchEditorInput) {\n\t\t\treturn (\n\t\t\t\t!!(\n\t\t\t\t\tother.modelUri.fragment &&\n\t\t\t\t\tother.modelUri.fragment === this.modelUri.fragment\n\t\t\t\t) ||\n\t\t\t\t!!(\n\t\t\t\t\tother.backingUri &&\n\t\t\t\t\tisEqual(other.backingUri, this.backingUri)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\n\tgetMatchRanges(): Range[] {\n\t\treturn (this._cachedResultsModel?.getAllDecorations() ?? [])\n\t\t\t.filter(\n\t\t\t\t(decoration) =>\n\t\t\t\t\tdecoration.options.className === SearchEditorFindMatchClass,\n\t\t\t)\n\t\t\t.filter(\n\t\t\t\t({ range }) =>\n\t\t\t\t\t!(range.startColumn === 1 && range.endColumn === 1),\n\t\t\t)\n\t\t\t.map(({ range }) => range);\n\t}\n\n\tasync setMatchRanges(ranges: Range[]) {\n\t\tthis.oldDecorationsIDs = (\n\t\t\tawait this.resolveModels()\n\t\t).resultsModel.deltaDecorations(\n\t\t\tthis.oldDecorationsIDs,\n\t\t\tranges.map((range) => ({\n\t\t\t\trange,\n\t\t\t\toptions: {\n\t\t\t\t\tdescription: \"search-editor-find-match\",\n\t\t\t\t\tclassName: SearchEditorFindMatchClass,\n\t\t\t\t\tstickiness:\n\t\t\t\t\t\tTrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\t\t\t},\n\t\t\t})),\n\t\t);\n\t}\n\n\toverride async revert(group: GroupIdentifier, options?: IRevertOptions) {\n\t\tif (options?.soft) {\n\t\t\tthis.setDirty(false);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.backingUri) {\n\t\t\tconst { config, text } =\n\t\t\t\tawait this.instantiationService.invokeFunction(\n\t\t\t\t\tparseSavedSearchEditor,\n\t\t\t\t\tthis.backingUri,\n\t\t\t\t);\n\t\t\tconst { resultsModel, configurationModel } =\n\t\t\t\tawait this.resolveModels();\n\t\t\tresultsModel.setValue(text);\n\t\t\tconfigurationModel.updateConfig(config);\n\t\t} else {\n\t\t\t(await this.resolveModels()).resultsModel.setValue(\"\");\n\t\t}\n\t\tsuper.revert(group, options);\n\t\tthis.setDirty(false);\n\t}\n\n\tprivate async backup(\n\t\ttoken: CancellationToken,\n\t): Promise<IWorkingCopyBackup> {\n\t\tconst contents = await this.serializeForDisk();\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn {};\n\t\t}\n\n\t\treturn {\n\t\t\tcontent: bufferToReadable(VSBuffer.fromString(contents)),\n\t\t};\n\t}\n\n\tprivate async suggestFileName(): Promise<URI> {\n\t\tconst query = (await this.resolveModels()).configurationModel.config\n\t\t\t.query;\n\t\tconst searchFileName =\n\t\t\t(query.replace(/[^\\w \\-_]+/g, \"_\") || \"Search\") + SEARCH_EDITOR_EXT;\n\t\treturn joinPath(\n\t\t\tawait this.fileDialogService.defaultFilePath(\n\t\t\t\tthis.pathService.defaultUriScheme,\n\t\t\t),\n\t\t\tsearchFileName,\n\t\t);\n\t}\n\n\toverride toUntyped(): IResourceEditorInput | undefined {\n\t\tif (this.hasCapability(EditorInputCapabilities.Untitled)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn {\n\t\t\tresource: this.resource,\n\t\t\toptions: {\n\t\t\t\toverride: SearchEditorInput.ID,\n\t\t\t},\n\t\t};\n\t}\n}\n\nexport const getOrMakeSearchEditorInput = (\n\taccessor: ServicesAccessor,\n\texistingData:\n\t\t| {\n\t\t\t\tfrom: \"model\";\n\t\t\t\tconfig?: Partial<SearchConfiguration>;\n\t\t\t\tmodelUri: URI;\n\t\t\t\tbackupOf?: URI;\n\t\t  }\n\t\t| {\n\t\t\t\tfrom: \"rawData\";\n\t\t\t\tresultsContents: string | undefined;\n\t\t\t\tconfig: Partial<SearchConfiguration>;\n\t\t  }\n\t\t| { from: \"existingFile\"; fileUri: URI },\n): SearchEditorInput => {\n\tconst storageService = accessor.get(IStorageService);\n\tconst configurationService = accessor.get(IConfigurationService);\n\n\tconst instantiationService = accessor.get(IInstantiationService);\n\tconst modelUri =\n\t\texistingData.from === \"model\"\n\t\t\t? existingData.modelUri\n\t\t\t: URI.from({\n\t\t\t\t\tscheme: SearchEditorScheme,\n\t\t\t\t\tfragment: `${Math.random()}`,\n\t\t\t\t});\n\n\tif (!searchEditorModelFactory.models.has(modelUri)) {\n\t\tif (existingData.from === \"existingFile\") {\n\t\t\tinstantiationService.invokeFunction((accessor) =>\n\t\t\t\tsearchEditorModelFactory.initializeModelFromExistingFile(\n\t\t\t\t\taccessor,\n\t\t\t\t\tmodelUri,\n\t\t\t\t\texistingData.fileUri,\n\t\t\t\t),\n\t\t\t);\n\t\t} else {\n\t\t\tconst searchEditorSettings =\n\t\t\t\tconfigurationService.getValue<ISearchConfigurationProperties>(\n\t\t\t\t\t\"search\",\n\t\t\t\t).searchEditor;\n\n\t\t\tconst reuseOldSettings =\n\t\t\t\tsearchEditorSettings.reusePriorSearchConfiguration;\n\t\t\tconst defaultNumberOfContextLines =\n\t\t\t\tsearchEditorSettings.defaultNumberOfContextLines;\n\n\t\t\tconst priorConfig: SearchConfiguration = reuseOldSettings\n\t\t\t\t? new Memento(SearchEditorInput.ID, storageService).getMemento(\n\t\t\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\t\t\tStorageTarget.MACHINE,\n\t\t\t\t\t).searchConfig\n\t\t\t\t: {};\n\t\t\tconst defaultConfig = defaultSearchConfig();\n\n\t\t\tconst config = {\n\t\t\t\t...defaultConfig,\n\t\t\t\t...priorConfig,\n\t\t\t\t...existingData.config,\n\t\t\t};\n\n\t\t\tif (\n\t\t\t\tdefaultNumberOfContextLines !== null &&\n\t\t\t\tdefaultNumberOfContextLines !== undefined\n\t\t\t) {\n\t\t\t\tconfig.contextLines =\n\t\t\t\t\texistingData?.config?.contextLines ??\n\t\t\t\t\tdefaultNumberOfContextLines;\n\t\t\t}\n\t\t\tif (existingData.from === \"rawData\") {\n\t\t\t\tif (existingData.resultsContents) {\n\t\t\t\t\tconfig.contextLines = 0;\n\t\t\t\t}\n\t\t\t\tinstantiationService.invokeFunction((accessor) =>\n\t\t\t\t\tsearchEditorModelFactory.initializeModelFromRawData(\n\t\t\t\t\t\taccessor,\n\t\t\t\t\t\tmodelUri,\n\t\t\t\t\t\tconfig,\n\t\t\t\t\t\texistingData.resultsContents,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tinstantiationService.invokeFunction((accessor) =>\n\t\t\t\t\tsearchEditorModelFactory.initializeModelFromExistingModel(\n\t\t\t\t\t\taccessor,\n\t\t\t\t\t\tmodelUri,\n\t\t\t\t\t\tconfig,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\treturn instantiationService.createInstance(\n\t\tSearchEditorInput,\n\t\tmodelUri,\n\t\texistingData.from === \"existingFile\"\n\t\t\t? existingData.fileUri\n\t\t\t: existingData.from === \"model\"\n\t\t\t\t? existingData.backupOf\n\t\t\t\t: undefined,\n\t);\n};\n"],
  "mappings": "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",
  "names": ["accessor"]
}
