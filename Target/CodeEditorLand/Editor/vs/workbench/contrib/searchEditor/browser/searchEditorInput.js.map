{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/searchEditor/browser/searchEditorInput.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './media/searchEditor.css';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { basename } from '../../../../base/common/path.js';\nimport { extname, isEqual, joinPath } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Range } from '../../../../editor/common/core/range.js';\nimport { ITextModel, TrackedRangeStickiness } from '../../../../editor/common/model.js';\nimport { IModelService } from '../../../../editor/common/services/model.js';\nimport { localize } from '../../../../nls.js';\nimport { IFileDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../platform/storage/common/storage.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { GroupIdentifier, IRevertOptions, ISaveOptions, EditorResourceAccessor, IMoveResult, EditorInputCapabilities, IUntypedEditorInput } from '../../../common/editor.js';\nimport { Memento } from '../../../common/memento.js';\nimport { SearchEditorFindMatchClass, SearchEditorInputTypeId, SearchEditorScheme, SearchEditorWorkingCopyTypeId } from './constants.js';\nimport { SearchConfigurationModel, SearchEditorModel, searchEditorModelFactory } from './searchEditorModel.js';\nimport { defaultSearchConfig, parseSavedSearchEditor, serializeSearchConfiguration } from './searchEditorSerialization.js';\nimport { IPathService } from '../../../services/path/common/pathService.js';\nimport { ITextFileSaveOptions, ITextFileService } from '../../../services/textfile/common/textfiles.js';\nimport { IWorkingCopyService } from '../../../services/workingCopy/common/workingCopyService.js';\nimport { IWorkingCopy, IWorkingCopyBackup, IWorkingCopySaveEvent, WorkingCopyCapabilities } from '../../../services/workingCopy/common/workingCopy.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ISearchComplete, ISearchConfigurationProperties } from '../../../services/search/common/search.js';\nimport { bufferToReadable, VSBuffer } from '../../../../base/common/buffer.js';\nimport { EditorInput } from '../../../common/editor/editorInput.js';\nimport { IResourceEditorInput } from '../../../../platform/editor/common/editor.js';\nimport { IDisposable } from '../../../../base/common/lifecycle.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\n\nexport type SearchConfiguration = {\n\tquery: string;\n\tfilesToInclude: string;\n\tfilesToExclude: string;\n\tcontextLines: number;\n\tmatchWholeWord: boolean;\n\tisCaseSensitive: boolean;\n\tisRegexp: boolean;\n\tuseExcludeSettingsAndIgnoreFiles: boolean;\n\tshowIncludesExcludes: boolean;\n\tonlyOpenEditors: boolean;\n\tnotebookSearchConfig: {\n\t\tincludeMarkupInput: boolean;\n\t\tincludeMarkupPreview: boolean;\n\t\tincludeCodeInput: boolean;\n\t\tincludeOutput: boolean;\n\t};\n};\n\nexport const SEARCH_EDITOR_EXT = '.code-search';\n\nconst SearchEditorIcon = registerIcon('search-editor-label-icon', Codicon.search, localize('searchEditorLabelIcon', 'Icon of the search editor label.'));\n\nexport class SearchEditorInput extends EditorInput {\n\tstatic readonly ID: string = SearchEditorInputTypeId;\n\n\toverride get typeId(): string {\n\t\treturn SearchEditorInput.ID;\n\t}\n\n\toverride get editorId(): string | undefined {\n\t\treturn this.typeId;\n\t}\n\n\toverride getIcon(): ThemeIcon {\n\t\treturn SearchEditorIcon;\n\t}\n\n\toverride get capabilities(): EditorInputCapabilities {\n\t\tlet capabilities = EditorInputCapabilities.Singleton;\n\t\tif (!this.backingUri) {\n\t\t\tcapabilities |= EditorInputCapabilities.Untitled;\n\t\t}\n\n\t\treturn capabilities;\n\t}\n\n\tprivate memento: Memento;\n\n\tprivate dirty: boolean = false;\n\n\tprivate lastLabel: string | undefined;\n\n\tprivate readonly _onDidChangeContent = this._register(new Emitter<void>());\n\treadonly onDidChangeContent: Event<void> = this._onDidChangeContent.event;\n\n\tprivate readonly _onDidSave = this._register(new Emitter<IWorkingCopySaveEvent>());\n\treadonly onDidSave: Event<IWorkingCopySaveEvent> = this._onDidSave.event;\n\n\tprivate oldDecorationsIDs: string[] = [];\n\n\tget resource() {\n\t\treturn this.backingUri || this.modelUri;\n\t}\n\n\tpublic ongoingSearchOperation: Promise<ISearchComplete> | undefined;\n\n\tpublic model: SearchEditorModel;\n\tprivate _cachedResultsModel: ITextModel | undefined;\n\tprivate _cachedConfigurationModel: SearchConfigurationModel | undefined;\n\n\tconstructor(\n\t\tpublic readonly modelUri: URI,\n\t\tpublic readonly backingUri: URI | undefined,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@ITextFileService protected readonly textFileService: ITextFileService,\n\t\t@IFileDialogService private readonly fileDialogService: IFileDialogService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IWorkingCopyService private readonly workingCopyService: IWorkingCopyService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IPathService private readonly pathService: IPathService,\n\t\t@IStorageService storageService: IStorageService,\n\t) {\n\t\tsuper();\n\n\t\tthis.model = instantiationService.createInstance(SearchEditorModel, modelUri);\n\n\t\tif (this.modelUri.scheme !== SearchEditorScheme) {\n\t\t\tthrow Error('SearchEditorInput must be invoked with a SearchEditorScheme uri');\n\t\t}\n\n\t\tthis.memento = new Memento(SearchEditorInput.ID, storageService);\n\t\tthis._register(storageService.onWillSaveState(() => this.memento.saveMemento()));\n\n\t\tconst input = this;\n\t\tconst workingCopyAdapter = new class implements IWorkingCopy {\n\t\t\treadonly typeId = SearchEditorWorkingCopyTypeId;\n\t\t\treadonly resource = input.modelUri;\n\t\t\tget name() { return input.getName(); }\n\t\t\treadonly capabilities = input.hasCapability(EditorInputCapabilities.Untitled) ? WorkingCopyCapabilities.Untitled : WorkingCopyCapabilities.None;\n\t\t\treadonly onDidChangeDirty = input.onDidChangeDirty;\n\t\t\treadonly onDidChangeContent = input.onDidChangeContent;\n\t\t\treadonly onDidSave = input.onDidSave;\n\t\t\tisDirty(): boolean { return input.isDirty(); }\n\t\t\tisModified(): boolean { return input.isDirty(); }\n\t\t\tbackup(token: CancellationToken): Promise<IWorkingCopyBackup> { return input.backup(token); }\n\t\t\tsave(options?: ISaveOptions): Promise<boolean> { return input.save(0, options).then(editor => !!editor); }\n\t\t\trevert(options?: IRevertOptions): Promise<void> { return input.revert(0, options); }\n\t\t};\n\n\t\tthis._register(this.workingCopyService.registerWorkingCopy(workingCopyAdapter));\n\t}\n\n\toverride async save(group: GroupIdentifier, options?: ITextFileSaveOptions): Promise<EditorInput | undefined> {\n\t\tif (((await this.resolveModels()).resultsModel).isDisposed()) { return; }\n\n\t\tif (this.backingUri) {\n\t\t\tawait this.textFileService.write(this.backingUri, await this.serializeForDisk(), options);\n\t\t\tthis.setDirty(false);\n\t\t\tthis._onDidSave.fire({ reason: options?.reason, source: options?.source });\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn this.saveAs(group, options);\n\t\t}\n\t}\n\n\tpublic tryReadConfigSync(): SearchConfiguration | undefined {\n\t\treturn this._cachedConfigurationModel?.config;\n\t}\n\n\tprivate async serializeForDisk() {\n\t\tconst { configurationModel, resultsModel } = await this.resolveModels();\n\t\treturn serializeSearchConfiguration(configurationModel.config) + '\\n' + resultsModel.getValue();\n\t}\n\n\tprivate configChangeListenerDisposable: IDisposable | undefined;\n\tprivate registerConfigChangeListeners(model: SearchConfigurationModel) {\n\t\tthis.configChangeListenerDisposable?.dispose();\n\t\tif (!this.isDisposed()) {\n\t\t\tthis.configChangeListenerDisposable = model.onConfigDidUpdate(() => {\n\t\t\t\tif (this.lastLabel !== this.getName()) {\n\t\t\t\t\tthis._onDidChangeLabel.fire();\n\t\t\t\t\tthis.lastLabel = this.getName();\n\t\t\t\t}\n\t\t\t\tthis.memento.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE).searchConfig = model.config;\n\t\t\t});\n\t\t\tthis._register(this.configChangeListenerDisposable);\n\t\t}\n\t}\n\n\tasync resolveModels() {\n\t\treturn this.model.resolve().then(data => {\n\t\t\tthis._cachedResultsModel = data.resultsModel;\n\t\t\tthis._cachedConfigurationModel = data.configurationModel;\n\t\t\tif (this.lastLabel !== this.getName()) {\n\t\t\t\tthis._onDidChangeLabel.fire();\n\t\t\t\tthis.lastLabel = this.getName();\n\t\t\t}\n\t\t\tthis.registerConfigChangeListeners(data.configurationModel);\n\t\t\treturn data;\n\t\t});\n\t}\n\n\toverride async saveAs(group: GroupIdentifier, options?: ITextFileSaveOptions): Promise<EditorInput | undefined> {\n\t\tconst path = await this.fileDialogService.pickFileToSave(await this.suggestFileName(), options?.availableFileSystems);\n\t\tif (path) {\n\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\towner: 'roblourens';\n\t\t\t\t\tcomment: 'Fired when a search editor is saved';\n\t\t\t\t}>\n\t\t\t\t('searchEditor/saveSearchResults');\n\t\t\tconst toWrite = await this.serializeForDisk();\n\t\t\tif (await this.textFileService.create([{ resource: path, value: toWrite, options: { overwrite: true } }])) {\n\t\t\t\tthis.setDirty(false);\n\t\t\t\tif (!isEqual(path, this.modelUri)) {\n\t\t\t\t\tconst input = this.instantiationService.invokeFunction(getOrMakeSearchEditorInput, { fileUri: path, from: 'existingFile' });\n\t\t\t\t\tinput.setMatchRanges(this.getMatchRanges());\n\t\t\t\t\treturn input;\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\toverride getName(maxLength = 12): string {\n\t\tconst trimToMax = (label: string) => (label.length < maxLength ? label : `${label.slice(0, maxLength - 3)}...`);\n\n\t\tif (this.backingUri) {\n\t\t\tconst originalURI = EditorResourceAccessor.getOriginalUri(this);\n\t\t\treturn localize('searchTitle.withQuery', \"Search: {0}\", basename((originalURI ?? this.backingUri).path, SEARCH_EDITOR_EXT));\n\t\t}\n\n\t\tconst query = this._cachedConfigurationModel?.config?.query?.trim();\n\t\tif (query) {\n\t\t\treturn localize('searchTitle.withQuery', \"Search: {0}\", trimToMax(query));\n\t\t}\n\t\treturn localize('searchTitle', \"Search\");\n\t}\n\n\tsetDirty(dirty: boolean) {\n\t\tconst wasDirty = this.dirty;\n\t\tthis.dirty = dirty;\n\t\tif (wasDirty !== dirty) {\n\t\t\tthis._onDidChangeDirty.fire();\n\t\t}\n\t}\n\n\toverride isDirty() {\n\t\treturn this.dirty;\n\t}\n\n\toverride async rename(group: GroupIdentifier, target: URI): Promise<IMoveResult | undefined> {\n\t\tif (extname(target) === SEARCH_EDITOR_EXT) {\n\t\t\treturn {\n\t\t\t\teditor: this.instantiationService.invokeFunction(getOrMakeSearchEditorInput, { from: 'existingFile', fileUri: target })\n\t\t\t};\n\t\t}\n\t\t// Ignore move if editor was renamed to a different file extension\n\t\treturn undefined;\n\t}\n\n\toverride dispose() {\n\t\tthis.modelService.destroyModel(this.modelUri);\n\t\tsuper.dispose();\n\t}\n\n\toverride matches(other: EditorInput | IUntypedEditorInput): boolean {\n\t\tif (super.matches(other)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (other instanceof SearchEditorInput) {\n\t\t\treturn !!(other.modelUri.fragment && other.modelUri.fragment === this.modelUri.fragment) || !!(other.backingUri && isEqual(other.backingUri, this.backingUri));\n\t\t}\n\t\treturn false;\n\t}\n\n\tgetMatchRanges(): Range[] {\n\t\treturn (this._cachedResultsModel?.getAllDecorations() ?? [])\n\t\t\t.filter(decoration => decoration.options.className === SearchEditorFindMatchClass)\n\t\t\t.filter(({ range }) => !(range.startColumn === 1 && range.endColumn === 1))\n\t\t\t.map(({ range }) => range);\n\t}\n\n\tasync setMatchRanges(ranges: Range[]) {\n\t\tthis.oldDecorationsIDs = (await this.resolveModels()).resultsModel.deltaDecorations(this.oldDecorationsIDs, ranges.map(range =>\n\t\t\t({ range, options: { description: 'search-editor-find-match', className: SearchEditorFindMatchClass, stickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges } })));\n\t}\n\n\toverride async revert(group: GroupIdentifier, options?: IRevertOptions) {\n\t\tif (options?.soft) {\n\t\t\tthis.setDirty(false);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.backingUri) {\n\t\t\tconst { config, text } = await this.instantiationService.invokeFunction(parseSavedSearchEditor, this.backingUri);\n\t\t\tconst { resultsModel, configurationModel } = await this.resolveModels();\n\t\t\tresultsModel.setValue(text);\n\t\t\tconfigurationModel.updateConfig(config);\n\t\t} else {\n\t\t\t(await this.resolveModels()).resultsModel.setValue('');\n\t\t}\n\t\tsuper.revert(group, options);\n\t\tthis.setDirty(false);\n\t}\n\n\tprivate async backup(token: CancellationToken): Promise<IWorkingCopyBackup> {\n\t\tconst contents = await this.serializeForDisk();\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn {};\n\t\t}\n\n\t\treturn {\n\t\t\tcontent: bufferToReadable(VSBuffer.fromString(contents))\n\t\t};\n\t}\n\n\tprivate async suggestFileName(): Promise<URI> {\n\t\tconst query = (await this.resolveModels()).configurationModel.config.query;\n\t\tconst searchFileName = (query.replace(/[^\\w \\-_]+/g, '_') || 'Search') + SEARCH_EDITOR_EXT;\n\t\treturn joinPath(await this.fileDialogService.defaultFilePath(this.pathService.defaultUriScheme), searchFileName);\n\t}\n\n\toverride toUntyped(): IResourceEditorInput | undefined {\n\t\tif (this.hasCapability(EditorInputCapabilities.Untitled)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn {\n\t\t\tresource: this.resource,\n\t\t\toptions: {\n\t\t\t\toverride: SearchEditorInput.ID\n\t\t\t}\n\t\t};\n\t}\n}\n\nexport const getOrMakeSearchEditorInput = (\n\taccessor: ServicesAccessor,\n\texistingData: (\n\t\t| { from: 'model'; config?: Partial<SearchConfiguration>; modelUri: URI; backupOf?: URI }\n\t\t| { from: 'rawData'; resultsContents: string | undefined; config: Partial<SearchConfiguration> }\n\t\t| { from: 'existingFile'; fileUri: URI })\n): SearchEditorInput => {\n\n\tconst storageService = accessor.get(IStorageService);\n\tconst configurationService = accessor.get(IConfigurationService);\n\n\tconst instantiationService = accessor.get(IInstantiationService);\n\tconst modelUri = existingData.from === 'model' ? existingData.modelUri : URI.from({ scheme: SearchEditorScheme, fragment: `${Math.random()}` });\n\n\tif (!searchEditorModelFactory.models.has(modelUri)) {\n\t\tif (existingData.from === 'existingFile') {\n\t\t\tinstantiationService.invokeFunction(accessor => searchEditorModelFactory.initializeModelFromExistingFile(accessor, modelUri, existingData.fileUri));\n\t\t} else {\n\n\t\t\tconst searchEditorSettings = configurationService.getValue<ISearchConfigurationProperties>('search').searchEditor;\n\n\t\t\tconst reuseOldSettings = searchEditorSettings.reusePriorSearchConfiguration;\n\t\t\tconst defaultNumberOfContextLines = searchEditorSettings.defaultNumberOfContextLines;\n\n\t\t\tconst priorConfig: SearchConfiguration = reuseOldSettings ? new Memento(SearchEditorInput.ID, storageService).getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE).searchConfig : {};\n\t\t\tconst defaultConfig = defaultSearchConfig();\n\n\t\t\tconst config = { ...defaultConfig, ...priorConfig, ...existingData.config };\n\n\t\t\tif (defaultNumberOfContextLines !== null && defaultNumberOfContextLines !== undefined) {\n\t\t\t\tconfig.contextLines = existingData?.config?.contextLines ?? defaultNumberOfContextLines;\n\t\t\t}\n\t\t\tif (existingData.from === 'rawData') {\n\t\t\t\tif (existingData.resultsContents) {\n\t\t\t\t\tconfig.contextLines = 0;\n\t\t\t\t}\n\t\t\t\tinstantiationService.invokeFunction(accessor => searchEditorModelFactory.initializeModelFromRawData(accessor, modelUri, config, existingData.resultsContents));\n\t\t\t} else {\n\t\t\t\tinstantiationService.invokeFunction(accessor => searchEditorModelFactory.initializeModelFromExistingModel(accessor, modelUri, config));\n\t\t\t}\n\t\t}\n\t}\n\treturn instantiationService.createInstance(\n\t\tSearchEditorInput,\n\t\tmodelUri,\n\t\texistingData.from === 'existingFile'\n\t\t\t? existingData.fileUri\n\t\t\t: existingData.from === 'model'\n\t\t\t\t? existingData.backupOf\n\t\t\t\t: undefined);\n};\n"],
  "mappings": "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",
  "names": ["accessor"]
}
