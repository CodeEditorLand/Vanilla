{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/scrollLocking/browser/scrollLocking.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ReentrancyBarrier } from \"../../../../base/common/controlFlow.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\tMutableDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport type { ServicesAccessor } from \"../../../../editor/browser/editorExtensions.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport { Categories } from \"../../../../platform/action/common/actionCommonCategories.js\";\nimport {\n\tAction2,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { SideBySideEditor } from \"../../../browser/parts/editor/sideBySideEditor.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport {\n\ttype IEditorPane,\n\ttype IEditorPaneScrollPosition,\n\tisEditorPaneWithScrolling,\n} from \"../../../common/editor.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport {\n\ttype IStatusbarEntryAccessor,\n\tIStatusbarService,\n\tStatusbarAlignment,\n} from \"../../../services/statusbar/browser/statusbar.js\";\n\nexport class SyncScroll extends Disposable implements IWorkbenchContribution {\n\tstatic readonly ID = \"workbench.contrib.syncScrolling\";\n\n\tprivate readonly paneInitialScrollTop = new Map<\n\t\tIEditorPane,\n\t\tIEditorPaneScrollPosition | undefined\n\t>();\n\n\tprivate readonly syncScrollDispoasbles = this._register(\n\t\tnew DisposableStore(),\n\t);\n\tprivate readonly paneDisposables = new DisposableStore();\n\n\tprivate readonly statusBarEntry = this._register(\n\t\tnew MutableDisposable<IStatusbarEntryAccessor>(),\n\t);\n\n\tprivate isActive = false;\n\n\tconstructor(\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IStatusbarService private readonly statusbarService: IStatusbarService,\n\t) {\n\t\tsuper();\n\n\t\tthis.registerActions();\n\t}\n\n\tprivate registerActiveListeners(): void {\n\t\tthis.syncScrollDispoasbles.add(\n\t\t\tthis.editorService.onDidVisibleEditorsChange(() =>\n\t\t\t\tthis.trackVisiblePanes(),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate activate(): void {\n\t\tthis.registerActiveListeners();\n\n\t\tthis.trackVisiblePanes();\n\t}\n\n\ttoggle(): void {\n\t\tif (this.isActive) {\n\t\t\tthis.deactivate();\n\t\t} else {\n\t\t\tthis.activate();\n\t\t}\n\n\t\tthis.isActive = !this.isActive;\n\n\t\tthis.toggleStatusbarItem(this.isActive);\n\t}\n\n\t// makes sure that the onDidEditorPaneScroll is not called multiple times for the same event\n\tprivate _reentrancyBarrier = new ReentrancyBarrier();\n\n\tprivate trackVisiblePanes(): void {\n\t\tthis.paneDisposables.clear();\n\t\tthis.paneInitialScrollTop.clear();\n\n\t\tfor (const pane of this.getAllVisiblePanes()) {\n\t\t\tif (!isEditorPaneWithScrolling(pane)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis.paneInitialScrollTop.set(pane, pane.getScrollPosition());\n\t\t\tthis.paneDisposables.add(\n\t\t\t\tpane.onDidChangeScroll(() =>\n\t\t\t\t\tthis._reentrancyBarrier.runExclusivelyOrSkip(() => {\n\t\t\t\t\t\tthis.onDidEditorPaneScroll(pane);\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate onDidEditorPaneScroll(scrolledPane: IEditorPane) {\n\t\tconst scrolledPaneInitialOffset =\n\t\t\tthis.paneInitialScrollTop.get(scrolledPane);\n\t\tif (scrolledPaneInitialOffset === undefined) {\n\t\t\tthrow new Error(\"Scrolled pane not tracked\");\n\t\t}\n\n\t\tif (!isEditorPaneWithScrolling(scrolledPane)) {\n\t\t\tthrow new Error(\"Scrolled pane does not support scrolling\");\n\t\t}\n\n\t\tconst scrolledPaneCurrentPosition = scrolledPane.getScrollPosition();\n\t\tconst scrolledFromInitial = {\n\t\t\tscrollTop:\n\t\t\t\tscrolledPaneCurrentPosition.scrollTop -\n\t\t\t\tscrolledPaneInitialOffset.scrollTop,\n\t\t\tscrollLeft:\n\t\t\t\tscrolledPaneCurrentPosition.scrollLeft !== undefined &&\n\t\t\t\tscrolledPaneInitialOffset.scrollLeft !== undefined\n\t\t\t\t\t? scrolledPaneCurrentPosition.scrollLeft -\n\t\t\t\t\t\tscrolledPaneInitialOffset.scrollLeft\n\t\t\t\t\t: undefined,\n\t\t};\n\n\t\tfor (const pane of this.getAllVisiblePanes()) {\n\t\t\tif (pane === scrolledPane) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!isEditorPaneWithScrolling(pane)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst initialOffset = this.paneInitialScrollTop.get(pane);\n\t\t\tif (initialOffset === undefined) {\n\t\t\t\tthrow new Error(\"Could not find initial offset for pane\");\n\t\t\t}\n\n\t\t\tconst currentPanePosition = pane.getScrollPosition();\n\t\t\tconst newPaneScrollPosition = {\n\t\t\t\tscrollTop:\n\t\t\t\t\tinitialOffset.scrollTop + scrolledFromInitial.scrollTop,\n\t\t\t\tscrollLeft:\n\t\t\t\t\tinitialOffset.scrollLeft !== undefined &&\n\t\t\t\t\tscrolledFromInitial.scrollLeft !== undefined\n\t\t\t\t\t\t? initialOffset.scrollLeft +\n\t\t\t\t\t\t\tscrolledFromInitial.scrollLeft\n\t\t\t\t\t\t: undefined,\n\t\t\t};\n\n\t\t\tif (\n\t\t\t\tcurrentPanePosition.scrollTop ===\n\t\t\t\t\tnewPaneScrollPosition.scrollTop &&\n\t\t\t\tcurrentPanePosition.scrollLeft ===\n\t\t\t\t\tnewPaneScrollPosition.scrollLeft\n\t\t\t) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpane.setScrollPosition(newPaneScrollPosition);\n\t\t}\n\t}\n\n\tprivate getAllVisiblePanes(): IEditorPane[] {\n\t\tconst panes: IEditorPane[] = [];\n\n\t\tfor (const pane of this.editorService.visibleEditorPanes) {\n\t\t\tif (pane instanceof SideBySideEditor) {\n\t\t\t\tconst primaryPane = pane.getPrimaryEditorPane();\n\t\t\t\tconst secondaryPane = pane.getSecondaryEditorPane();\n\t\t\t\tif (primaryPane) {\n\t\t\t\t\tpanes.push(primaryPane);\n\t\t\t\t}\n\t\t\t\tif (secondaryPane) {\n\t\t\t\t\tpanes.push(secondaryPane);\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpanes.push(pane);\n\t\t}\n\n\t\treturn panes;\n\t}\n\n\tprivate deactivate(): void {\n\t\tthis.paneDisposables.clear();\n\t\tthis.syncScrollDispoasbles.clear();\n\t\tthis.paneInitialScrollTop.clear();\n\t}\n\n\t// Actions & Commands\n\n\tprivate toggleStatusbarItem(active: boolean): void {\n\t\tif (active) {\n\t\t\tif (!this.statusBarEntry.value) {\n\t\t\t\tconst text = localize(\n\t\t\t\t\t\"mouseScrolllingLocked\",\n\t\t\t\t\t\"Scrolling Locked\",\n\t\t\t\t);\n\t\t\t\tconst tooltip = localize(\n\t\t\t\t\t\"mouseLockScrollingEnabled\",\n\t\t\t\t\t\"Lock Scrolling Enabled\",\n\t\t\t\t);\n\t\t\t\tthis.statusBarEntry.value = this.statusbarService.addEntry(\n\t\t\t\t\t{\n\t\t\t\t\t\tname: text,\n\t\t\t\t\t\ttext,\n\t\t\t\t\t\ttooltip,\n\t\t\t\t\t\tariaLabel: text,\n\t\t\t\t\t\tcommand: {\n\t\t\t\t\t\t\tid: \"workbench.action.toggleLockedScrolling\",\n\t\t\t\t\t\t\ttitle: \"\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tkind: \"prominent\",\n\t\t\t\t\t\tshowInAllWindows: true,\n\t\t\t\t\t},\n\t\t\t\t\t\"status.scrollLockingEnabled\",\n\t\t\t\t\tStatusbarAlignment.RIGHT,\n\t\t\t\t\t102,\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.statusBarEntry.clear();\n\t\t}\n\t}\n\n\tprivate registerActions() {\n\t\tconst $this = this;\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: \"workbench.action.toggleLockedScrolling\",\n\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\t...localize2(\n\t\t\t\t\t\t\t\t\t\"toggleLockedScrolling\",\n\t\t\t\t\t\t\t\t\t\"Toggle Locked Scrolling Across Editors\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tkey: \"miToggleLockedScrolling\",\n\t\t\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"Locked Scrolling\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcategory: Categories.View,\n\t\t\t\t\t\t\tf1: true,\n\t\t\t\t\t\t\tmetadata: {\n\t\t\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\t\t\"synchronizeScrolling\",\n\t\t\t\t\t\t\t\t\t\"Synchronize Scrolling Editors\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\trun(): void {\n\t\t\t\t\t\t$this.toggle();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: \"workbench.action.holdLockedScrolling\",\n\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\t...localize2(\n\t\t\t\t\t\t\t\t\t\"holdLockedScrolling\",\n\t\t\t\t\t\t\t\t\t\"Hold Locked Scrolling Across Editors\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tkey: \"miHoldLockedScrolling\",\n\t\t\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"Locked Scrolling\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcategory: Categories.View,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\trun(accessor: ServicesAccessor): void {\n\t\t\t\t\t\tconst keybindingService =\n\t\t\t\t\t\t\taccessor.get(IKeybindingService);\n\n\t\t\t\t\t\t// Enable Sync Scrolling while pressed\n\t\t\t\t\t\t$this.toggle();\n\n\t\t\t\t\t\tconst holdMode =\n\t\t\t\t\t\t\tkeybindingService.enableKeybindingHoldMode(\n\t\t\t\t\t\t\t\t\"workbench.action.holdLockedScrolling\",\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tif (!holdMode) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tholdMode.finally(() => {\n\t\t\t\t\t\t\t$this.toggle();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\toverride dispose(): void {\n\t\tthis.deactivate();\n\t\tsuper.dispose();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
