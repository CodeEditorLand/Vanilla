{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/scrollLocking/browser/scrollLocking.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, DisposableStore, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { ServicesAccessor } from '../../../../editor/browser/editorExtensions.js';\nimport { localize, localize2 } from '../../../../nls.js';\nimport { Categories } from '../../../../platform/action/common/actionCommonCategories.js';\nimport { Action2, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { SideBySideEditor } from '../../../browser/parts/editor/sideBySideEditor.js';\nimport { IWorkbenchContribution } from '../../../common/contributions.js';\nimport { IEditorPane, IEditorPaneScrollPosition, isEditorPaneWithScrolling } from '../../../common/editor.js';\nimport { ReentrancyBarrier } from '../../../../base/common/controlFlow.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IStatusbarEntryAccessor, IStatusbarService, StatusbarAlignment } from '../../../services/statusbar/browser/statusbar.js';\n\nexport class SyncScroll extends Disposable implements IWorkbenchContribution {\n\n\tstatic readonly ID = 'workbench.contrib.syncScrolling';\n\n\tprivate readonly paneInitialScrollTop = new Map<IEditorPane, IEditorPaneScrollPosition | undefined>();\n\n\tprivate readonly syncScrollDispoasbles = this._register(new DisposableStore());\n\tprivate readonly paneDisposables = new DisposableStore();\n\n\tprivate readonly statusBarEntry = this._register(new MutableDisposable<IStatusbarEntryAccessor>());\n\n\tprivate isActive: boolean = false;\n\n\tconstructor(\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IStatusbarService private readonly statusbarService: IStatusbarService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerActions();\n\t}\n\n\tprivate registerActiveListeners(): void {\n\t\tthis.syncScrollDispoasbles.add(this.editorService.onDidVisibleEditorsChange(() => this.trackVisiblePanes()));\n\t}\n\n\tprivate activate(): void {\n\t\tthis.registerActiveListeners();\n\n\t\tthis.trackVisiblePanes();\n\t}\n\n\ttoggle(): void {\n\t\tif (this.isActive) {\n\t\t\tthis.deactivate();\n\t\t} else {\n\t\t\tthis.activate();\n\t\t}\n\n\t\tthis.isActive = !this.isActive;\n\n\t\tthis.toggleStatusbarItem(this.isActive);\n\t}\n\n\t// makes sure that the onDidEditorPaneScroll is not called multiple times for the same event\n\tprivate _reentrancyBarrier = new ReentrancyBarrier();\n\n\tprivate trackVisiblePanes(): void {\n\t\tthis.paneDisposables.clear();\n\t\tthis.paneInitialScrollTop.clear();\n\n\t\tfor (const pane of this.getAllVisiblePanes()) {\n\n\t\t\tif (!isEditorPaneWithScrolling(pane)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis.paneInitialScrollTop.set(pane, pane.getScrollPosition());\n\t\t\tthis.paneDisposables.add(pane.onDidChangeScroll(() =>\n\t\t\t\tthis._reentrancyBarrier.runExclusivelyOrSkip(() => {\n\t\t\t\t\tthis.onDidEditorPaneScroll(pane);\n\t\t\t\t})\n\t\t\t));\n\t\t}\n\t}\n\n\tprivate onDidEditorPaneScroll(scrolledPane: IEditorPane) {\n\n\t\tconst scrolledPaneInitialOffset = this.paneInitialScrollTop.get(scrolledPane);\n\t\tif (scrolledPaneInitialOffset === undefined) {\n\t\t\tthrow new Error('Scrolled pane not tracked');\n\t\t}\n\n\t\tif (!isEditorPaneWithScrolling(scrolledPane)) {\n\t\t\tthrow new Error('Scrolled pane does not support scrolling');\n\t\t}\n\n\t\tconst scrolledPaneCurrentPosition = scrolledPane.getScrollPosition();\n\t\tconst scrolledFromInitial = {\n\t\t\tscrollTop: scrolledPaneCurrentPosition.scrollTop - scrolledPaneInitialOffset.scrollTop,\n\t\t\tscrollLeft: scrolledPaneCurrentPosition.scrollLeft !== undefined && scrolledPaneInitialOffset.scrollLeft !== undefined ? scrolledPaneCurrentPosition.scrollLeft - scrolledPaneInitialOffset.scrollLeft : undefined,\n\t\t};\n\n\t\tfor (const pane of this.getAllVisiblePanes()) {\n\t\t\tif (pane === scrolledPane) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!isEditorPaneWithScrolling(pane)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst initialOffset = this.paneInitialScrollTop.get(pane);\n\t\t\tif (initialOffset === undefined) {\n\t\t\t\tthrow new Error('Could not find initial offset for pane');\n\t\t\t}\n\n\t\t\tconst currentPanePosition = pane.getScrollPosition();\n\t\t\tconst newPaneScrollPosition = {\n\t\t\t\tscrollTop: initialOffset.scrollTop + scrolledFromInitial.scrollTop,\n\t\t\t\tscrollLeft: initialOffset.scrollLeft !== undefined && scrolledFromInitial.scrollLeft !== undefined ? initialOffset.scrollLeft + scrolledFromInitial.scrollLeft : undefined,\n\t\t\t};\n\n\t\t\tif (currentPanePosition.scrollTop === newPaneScrollPosition.scrollTop && currentPanePosition.scrollLeft === newPaneScrollPosition.scrollLeft) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpane.setScrollPosition(newPaneScrollPosition);\n\t\t}\n\t}\n\n\tprivate getAllVisiblePanes(): IEditorPane[] {\n\t\tconst panes: IEditorPane[] = [];\n\n\t\tfor (const pane of this.editorService.visibleEditorPanes) {\n\n\t\t\tif (pane instanceof SideBySideEditor) {\n\t\t\t\tconst primaryPane = pane.getPrimaryEditorPane();\n\t\t\t\tconst secondaryPane = pane.getSecondaryEditorPane();\n\t\t\t\tif (primaryPane) {\n\t\t\t\t\tpanes.push(primaryPane);\n\t\t\t\t}\n\t\t\t\tif (secondaryPane) {\n\t\t\t\t\tpanes.push(secondaryPane);\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpanes.push(pane);\n\t\t}\n\n\t\treturn panes;\n\t}\n\n\tprivate deactivate(): void {\n\t\tthis.paneDisposables.clear();\n\t\tthis.syncScrollDispoasbles.clear();\n\t\tthis.paneInitialScrollTop.clear();\n\t}\n\n\t// Actions & Commands\n\n\tprivate toggleStatusbarItem(active: boolean): void {\n\t\tif (active) {\n\t\t\tif (!this.statusBarEntry.value) {\n\t\t\t\tconst text = localize('mouseScrolllingLocked', 'Scrolling Locked');\n\t\t\t\tconst tooltip = localize('mouseLockScrollingEnabled', 'Lock Scrolling Enabled');\n\t\t\t\tthis.statusBarEntry.value = this.statusbarService.addEntry({\n\t\t\t\t\tname: text,\n\t\t\t\t\ttext,\n\t\t\t\t\ttooltip,\n\t\t\t\t\tariaLabel: text,\n\t\t\t\t\tcommand: {\n\t\t\t\t\t\tid: 'workbench.action.toggleLockedScrolling',\n\t\t\t\t\t\ttitle: ''\n\t\t\t\t\t},\n\t\t\t\t\tkind: 'prominent',\n\t\t\t\t\tshowInAllWindows: true\n\t\t\t\t}, 'status.scrollLockingEnabled', StatusbarAlignment.RIGHT, 102);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.statusBarEntry.clear();\n\t\t}\n\t}\n\n\tprivate registerActions() {\n\t\tconst $this = this;\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.action.toggleLockedScrolling',\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\t...localize2('toggleLockedScrolling', \"Toggle Locked Scrolling Across Editors\"),\n\t\t\t\t\t\tmnemonicTitle: localize({ key: 'miToggleLockedScrolling', comment: ['&& denotes a mnemonic'] }, \"Locked Scrolling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcategory: Categories.View,\n\t\t\t\t\tf1: true,\n\t\t\t\t\tmetadata: {\n\t\t\t\t\t\tdescription: localize('synchronizeScrolling', \"Synchronize Scrolling Editors\"),\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\trun(): void {\n\t\t\t\t$this.toggle();\n\t\t\t}\n\t\t}));\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.action.holdLockedScrolling',\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\t...localize2('holdLockedScrolling', \"Hold Locked Scrolling Across Editors\"),\n\t\t\t\t\t\tmnemonicTitle: localize({ key: 'miHoldLockedScrolling', comment: ['&& denotes a mnemonic'] }, \"Locked Scrolling\"),\n\t\t\t\t\t},\n\t\t\t\t\tcategory: Categories.View,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\trun(accessor: ServicesAccessor): void {\n\t\t\t\tconst keybindingService = accessor.get(IKeybindingService);\n\n\t\t\t\t// Enable Sync Scrolling while pressed\n\t\t\t\t$this.toggle();\n\n\t\t\t\tconst holdMode = keybindingService.enableKeybindingHoldMode('workbench.action.holdLockedScrolling');\n\t\t\t\tif (!holdMode) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tholdMode.finally(() => {\n\t\t\t\t\t$this.toggle();\n\t\t\t\t});\n\t\t\t}\n\t\t}));\n\t}\n\n\toverride dispose(): void {\n\t\tthis.deactivate();\n\t\tsuper.dispose();\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,YAAY,iBAAiB,yBAAyB;AAC/D,SAAS,wBAAwB;AACjC,SAAS,UAAU,iBAAiB;AACpC,SAAS,kBAAkB;AAC3B,SAAS,SAAS,uBAAuB;AACzC,SAAS,0BAA0B;AACnC,SAAS,wBAAwB;AACjC,SAAS,8BAA8B;AACvC,SAAS,aAAa,2BAA2B,iCAAiC;AAClF,SAAS,yBAAyB;AAClC,SAAS,sBAAsB;AAC/B,SAAS,yBAAyB,mBAAmB,0BAA0B;AAExE,IAAM,aAAN,cAAyB,WAA6C;AAAA,EAa5E,YACkC,eACG,kBACnC;AACD,UAAM;AAH2B;AACG;AAIpC,SAAK,gBAAgB;AAAA,EACtB;AAAA,EAtCD,OAkB6E;AAAA;AAAA;AAAA,EAE5E,OAAgB,KAAK;AAAA,EAEJ,uBAAuB,oBAAI,IAAwD;AAAA,EAEnF,wBAAwB,KAAK,UAAU,IAAI,gBAAgB,CAAC;AAAA,EAC5D,kBAAkB,IAAI,gBAAgB;AAAA,EAEtC,iBAAiB,KAAK,UAAU,IAAI,kBAA2C,CAAC;AAAA,EAEzF,WAAoB;AAAA,EAWpB,0BAAgC;AACvC,SAAK,sBAAsB,IAAI,KAAK,cAAc,0BAA0B,MAAM,KAAK,kBAAkB,CAAC,CAAC;AAAA,EAC5G;AAAA,EAEQ,WAAiB;AACxB,SAAK,wBAAwB;AAE7B,SAAK,kBAAkB;AAAA,EACxB;AAAA,EAEA,SAAe;AACd,QAAI,KAAK,UAAU;AAClB,WAAK,WAAW;AAAA,IACjB,OAAO;AACN,WAAK,SAAS;AAAA,IACf;AAEA,SAAK,WAAW,CAAC,KAAK;AAEtB,SAAK,oBAAoB,KAAK,QAAQ;AAAA,EACvC;AAAA;AAAA,EAGQ,qBAAqB,IAAI,kBAAkB;AAAA,EAE3C,oBAA0B;AACjC,SAAK,gBAAgB,MAAM;AAC3B,SAAK,qBAAqB,MAAM;AAEhC,eAAW,QAAQ,KAAK,mBAAmB,GAAG;AAE7C,UAAI,CAAC,0BAA0B,IAAI,GAAG;AACrC;AAAA,MACD;AAEA,WAAK,qBAAqB,IAAI,MAAM,KAAK,kBAAkB,CAAC;AAC5D,WAAK,gBAAgB,IAAI,KAAK;AAAA,QAAkB,MAC/C,KAAK,mBAAmB,qBAAqB,MAAM;AAClD,eAAK,sBAAsB,IAAI;AAAA,QAChC,CAAC;AAAA,MACF,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAEQ,sBAAsB,cAA2B;AAExD,UAAM,4BAA4B,KAAK,qBAAqB,IAAI,YAAY;AAC5E,QAAI,8BAA8B,QAAW;AAC5C,YAAM,IAAI,MAAM,2BAA2B;AAAA,IAC5C;AAEA,QAAI,CAAC,0BAA0B,YAAY,GAAG;AAC7C,YAAM,IAAI,MAAM,0CAA0C;AAAA,IAC3D;AAEA,UAAM,8BAA8B,aAAa,kBAAkB;AACnE,UAAM,sBAAsB;AAAA,MAC3B,WAAW,4BAA4B,YAAY,0BAA0B;AAAA,MAC7E,YAAY,4BAA4B,eAAe,UAAa,0BAA0B,eAAe,SAAY,4BAA4B,aAAa,0BAA0B,aAAa;AAAA,IAC1M;AAEA,eAAW,QAAQ,KAAK,mBAAmB,GAAG;AAC7C,UAAI,SAAS,cAAc;AAC1B;AAAA,MACD;AAEA,UAAI,CAAC,0BAA0B,IAAI,GAAG;AACrC;AAAA,MACD;AAEA,YAAM,gBAAgB,KAAK,qBAAqB,IAAI,IAAI;AACxD,UAAI,kBAAkB,QAAW;AAChC,cAAM,IAAI,MAAM,wCAAwC;AAAA,MACzD;AAEA,YAAM,sBAAsB,KAAK,kBAAkB;AACnD,YAAM,wBAAwB;AAAA,QAC7B,WAAW,cAAc,YAAY,oBAAoB;AAAA,QACzD,YAAY,cAAc,eAAe,UAAa,oBAAoB,eAAe,SAAY,cAAc,aAAa,oBAAoB,aAAa;AAAA,MAClK;AAEA,UAAI,oBAAoB,cAAc,sBAAsB,aAAa,oBAAoB,eAAe,sBAAsB,YAAY;AAC7I;AAAA,MACD;AAEA,WAAK,kBAAkB,qBAAqB;AAAA,IAC7C;AAAA,EACD;AAAA,EAEQ,qBAAoC;AAC3C,UAAM,QAAuB,CAAC;AAE9B,eAAW,QAAQ,KAAK,cAAc,oBAAoB;AAEzD,UAAI,gBAAgB,kBAAkB;AACrC,cAAM,cAAc,KAAK,qBAAqB;AAC9C,cAAM,gBAAgB,KAAK,uBAAuB;AAClD,YAAI,aAAa;AAChB,gBAAM,KAAK,WAAW;AAAA,QACvB;AACA,YAAI,eAAe;AAClB,gBAAM,KAAK,aAAa;AAAA,QACzB;AACA;AAAA,MACD;AAEA,YAAM,KAAK,IAAI;AAAA,IAChB;AAEA,WAAO;AAAA,EACR;AAAA,EAEQ,aAAmB;AAC1B,SAAK,gBAAgB,MAAM;AAC3B,SAAK,sBAAsB,MAAM;AACjC,SAAK,qBAAqB,MAAM;AAAA,EACjC;AAAA;AAAA,EAIQ,oBAAoB,QAAuB;AAClD,QAAI,QAAQ;AACX,UAAI,CAAC,KAAK,eAAe,OAAO;AAC/B,cAAM,OAAO,SAAS,yBAAyB,kBAAkB;AACjE,cAAM,UAAU,SAAS,6BAA6B,wBAAwB;AAC9E,aAAK,eAAe,QAAQ,KAAK,iBAAiB,SAAS;AAAA,UAC1D,MAAM;AAAA,UACN;AAAA,UACA;AAAA,UACA,WAAW;AAAA,UACX,SAAS;AAAA,YACR,IAAI;AAAA,YACJ,OAAO;AAAA,UACR;AAAA,UACA,MAAM;AAAA,UACN,kBAAkB;AAAA,QACnB,GAAG,+BAA+B,mBAAmB,OAAO,GAAG;AAAA,MAChE;AAAA,IACD,OAAO;AACN,WAAK,eAAe,MAAM;AAAA,IAC3B;AAAA,EACD;AAAA,EAEQ,kBAAkB;AACzB,UAAM,QAAQ;AACd,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,OAAO;AAAA,YACN,GAAG,UAAU,yBAAyB,wCAAwC;AAAA,YAC9E,eAAe,SAAS,EAAE,KAAK,2BAA2B,SAAS,CAAC,uBAAuB,EAAE,GAAG,kBAAkB;AAAA,UACnH;AAAA,UACA,UAAU,WAAW;AAAA,UACrB,IAAI;AAAA,UACJ,UAAU;AAAA,YACT,aAAa,SAAS,wBAAwB,+BAA+B;AAAA,UAC9E;AAAA,QACD,CAAC;AAAA,MACF;AAAA,MAEA,MAAY;AACX,cAAM,OAAO;AAAA,MACd;AAAA,IACD,CAAC,CAAC;AACF,SAAK,UAAU,gBAAgB,cAAc,QAAQ;AAAA,MACpD,cAAc;AACb,cAAM;AAAA,UACL,IAAI;AAAA,UACJ,OAAO;AAAA,YACN,GAAG,UAAU,uBAAuB,sCAAsC;AAAA,YAC1E,eAAe,SAAS,EAAE,KAAK,yBAAyB,SAAS,CAAC,uBAAuB,EAAE,GAAG,kBAAkB;AAAA,UACjH;AAAA,UACA,UAAU,WAAW;AAAA,QACtB,CAAC;AAAA,MACF;AAAA,MAEA,IAAI,UAAkC;AACrC,cAAM,oBAAoB,SAAS,IAAI,kBAAkB;AAGzD,cAAM,OAAO;AAEb,cAAM,WAAW,kBAAkB,yBAAyB,sCAAsC;AAClG,YAAI,CAAC,UAAU;AACd;AAAA,QACD;AAEA,iBAAS,QAAQ,MAAM;AACtB,gBAAM,OAAO;AAAA,QACd,CAAC;AAAA,MACF;AAAA,IACD,CAAC,CAAC;AAAA,EACH;AAAA,EAES,UAAgB;AACxB,SAAK,WAAW;AAChB,UAAM,QAAQ;AAAA,EACf;AACD;AA7Na,aAAN;AAAA,EAcJ;AAAA,EACA;AAAA,GAfU;",
  "names": []
}
