import*as C from"fs";import*as h from"path";import d from"assert";import{DisposableStore as O}from"../../../../../base/common/lifecycle.js";import{ensureNoDisposablesAreLeakedInTestSuite as D}from"../../../../../base/test/common/utils.js";import{ILanguageConfigurationService as E}from"../../../../../editor/common/languages/languageConfigurationRegistry.js";import{getReindentEditOperations as u}from"../../../../../editor/contrib/indentation/common/indentation.js";import{createModelServices as F,instantiateTextModel as p}from"../../../../../editor/test/common/testTextModel.js";import"../../../../../platform/instantiation/test/common/instantiationServiceMock.js";import{LanguageConfigurationFileHandler as z}from"../../common/languageConfigurationExtensionPoint.js";import{parse as M}from"../../../../../base/common/json.js";import"../../../../../editor/common/core/range.js";import"../../../../../editor/common/core/editOperation.js";import{trimTrailingWhitespace as A}from"../../../../../editor/common/commands/trimTrailingWhitespaceCommand.js";import{execSync as U}from"child_process";import{ILanguageService as b}from"../../../../../editor/common/languages/language.js";import{EncodedTokenizationResult as P,TokenizationRegistry as _}from"../../../../../editor/common/languages.js";import{NullState as G}from"../../../../../editor/common/languages/nullTokenize.js";import{MetadataConsts as q,StandardTokenType as r}from"../../../../../editor/common/encodedTokenAttributes.js";import"../../../../../editor/common/model.js";import{FileAccess as V}from"../../../../../base/common/network.js";function S(i){return{startLineNumber:i.startLineNumber,startColumn:i.startColumn,endLineNumber:i.endLineNumber,endColumn:i.endColumn}}var H=(s=>(s.TypeScript="ts-test",s))(H||{});function x(i,s,n){for(let o=s;o<=n;o++)i.tokenization.forceTokenization(o)}function J(i,s){const n=new O,o=i.get(b);return n.add(v(i,s)),n.add(o.registerLanguage({id:s})),n}function v(i,s){const n=i.get(E);let o;switch(s){case"ts-test":o=V.asFileUri("vs/workbench/contrib/codeEditor/test/node/language-configuration.json").fsPath;break;default:throw new Error("Unknown languageId")}const l=C.readFileSync(o,{encoding:"utf-8"}),a=M(l,[]),e=z.extractValidConfig(s,a);return n.register(s,e)}function y(i,s,n){let o=0;const l=i.get(b),a={getInitialState:()=>G,tokenize:void 0,tokenizeEncoded:(e,t,c)=>{const g=s[o++],k=l.languageIdCodec.encodeLanguageId(n),m=new Uint32Array(2*g.length);for(let T=0;T<g.length;T++)m[2*T]=g[T].startIndex,m[2*T+1]=k<<q.LANGUAGEID_OFFSET|g[T].standardTokenType<<q.TOKEN_TYPE_OFFSET;return new P(m,c)}};return _.register(n,a)}suite("Auto-Reindentation - TypeScript/JavaScript",()=>{const i="ts-test",s={};let n,o,l;setup(()=>{n=new O,o=F(n),l=o.get(E),n.add(o),n.add(J(o,i)),n.add(v(o,i))}),teardown(()=>{n.dispose()}),D(),test.skip("Find Cases of Incorrect Indentation with the Reindent Lines Command",()=>{function a(t,c){const g=C.readdirSync(t,{withFileTypes:!0}),k=[];for(const m of g)if(m.isDirectory())k.push(h.join(t,m.name));else{const T=h.join(t,m.name);if(h.extname(T)!==".ts")continue;const N=C.readFileSync(T,{encoding:"utf-8"}),R={tabSize:4,insertSpaces:!1},f=n.add(p(o,N,c,R)),j=f.getLineCount(),L=[];for(let I=1;I<=j-1;I++){if(f.getLineContent(I).trim().length===0)continue;const w=u(f,l,I,I+1);L.push(...w)}f.applyEdits(L),f.applyEdits(A(f,[],!0)),C.writeFileSync(T,f.getValue())}for(const m of k)a(m,c)}a("/Users/aiday/Desktop/Test/vscode-test","ts-test");const e=U("cd /Users/aiday/Desktop/Test/vscode-test && git diff --shortstat",{encoding:"utf-8"});console.log(`
git diff --shortstat:
`,e)}),test("Issue #25437",()=>{const a=["const foo = `{`;","    "].join(`
`),e=[[{startIndex:0,standardTokenType:r.Other},{startIndex:5,standardTokenType:r.Other},{startIndex:6,standardTokenType:r.Other},{startIndex:9,standardTokenType:r.Other},{startIndex:10,standardTokenType:r.Other},{startIndex:11,standardTokenType:r.Other},{startIndex:12,standardTokenType:r.String},{startIndex:13,standardTokenType:r.String},{startIndex:14,standardTokenType:r.String},{startIndex:15,standardTokenType:r.Other},{startIndex:16,standardTokenType:r.Other}],[{startIndex:0,standardTokenType:r.Other},{startIndex:4,standardTokenType:r.Other}]];n.add(y(o,e,i));const t=n.add(p(o,a,i,s));x(t,1,2);const c=u(t,l,1,t.getLineCount());d.deepStrictEqual(c.length,1);const g=c[0];d.deepStrictEqual(S(g.range),{startLineNumber:2,startColumn:1,endLineNumber:2,endColumn:5}),d.deepStrictEqual(g.text,"")}),test("Enriching the hover",()=>{let a=["function foo(","    bar: string","    ){}"].join(`
`),e=n.add(p(o,a,i,s)),t=u(e,l,1,e.getLineCount());d.deepStrictEqual(t.length,1);let c=t[0];d.deepStrictEqual(S(c.range),{startLineNumber:3,startColumn:1,endLineNumber:3,endColumn:5}),d.deepStrictEqual(c.text,""),a=["function foo(","bar: string","){}"].join(`
`),e=n.add(p(o,a,i,s)),t=u(e,l,1,e.getLineCount()),d.deepStrictEqual(t.length,1),c=t[0],d.deepStrictEqual(S(c.range),{startLineNumber:2,startColumn:1,endLineNumber:2,endColumn:1}),d.deepStrictEqual(c.text,"    ")}),test("Issue #86176",()=>{const a=["if () { // '","x = 4","}"].join(`
`),e=n.add(p(o,a,i,s)),t=u(e,l,1,e.getLineCount());d.deepStrictEqual(t.length,1);const c=t[0];d.deepStrictEqual(S(c.range),{startLineNumber:2,startColumn:1,endLineNumber:2,endColumn:1}),d.deepStrictEqual(c.text,"    ")}),test("Issue #141816",()=>{const a=["const r = /{/;","   "].join(`
`),e=[[{startIndex:0,standardTokenType:r.Other},{startIndex:5,standardTokenType:r.Other},{startIndex:6,standardTokenType:r.Other},{startIndex:7,standardTokenType:r.Other},{startIndex:8,standardTokenType:r.Other},{startIndex:9,standardTokenType:r.RegEx},{startIndex:10,standardTokenType:r.RegEx},{startIndex:11,standardTokenType:r.RegEx},{startIndex:12,standardTokenType:r.RegEx},{startIndex:13,standardTokenType:r.Other},{startIndex:14,standardTokenType:r.Other}],[{startIndex:0,standardTokenType:r.Other},{startIndex:4,standardTokenType:r.Other}]];n.add(y(o,e,i));const t=n.add(p(o,a,i,s));x(t,1,2);const c=u(t,l,1,t.getLineCount());d.deepStrictEqual(c.length,1);const g=c[0];d.deepStrictEqual(S(g.range),{startLineNumber:2,startColumn:1,endLineNumber:2,endColumn:4}),d.deepStrictEqual(g.text,"")}),test("Issue #29886",()=>{const a=["function foo() {","    bar(/*  */)","};"].join(`
`),e=n.add(p(o,a,i,s)),t=u(e,l,1,e.getLineCount());d.deepStrictEqual(t.length,0)}),test("Issue #209859: do not do reindentation for tokens inside of a string",()=>{const a=[[{startIndex:0,standardTokenType:r.Other},{startIndex:12,standardTokenType:r.String}],[{startIndex:0,standardTokenType:r.String}],[{startIndex:0,standardTokenType:r.String}],[{startIndex:0,standardTokenType:r.String}]];n.add(y(o,a,i));const e=["const foo = `some text","         which is strangely","    indented. It should","   not be reindented.`"].join(`
`),t=n.add(p(o,e,i,s));x(t,1,4);const c=u(t,l,1,t.getLineCount());d.deepStrictEqual(c.length,0)}),test.skip("Incorrect deindentation after `*/}` string",()=>{const a=["const obj = {","    obj1: {","        brace : '*/}'","    }","}"].join(`
`),e=n.add(p(o,a,i,s)),t=u(e,l,1,e.getLineCount());d.deepStrictEqual(t.length,0)}),test.skip("Issue #56275",()=>{let a=["function foo() {","    var bar = (/b*/);","}"].join(`
`),e=n.add(p(o,a,i,s)),t=u(e,l,1,e.getLineCount());d.deepStrictEqual(t.length,0),a=["function foo() {",'    var bar = "/b*/)";',"}"].join(`
`),e=n.add(p(o,a,i,s)),t=u(e,l,1,e.getLineCount()),d.deepStrictEqual(t.length,0)}),test.skip("Issue #116843",()=>{const a=["const add1 = (n) =>","	n + 1;"].join(`
`),e=n.add(p(o,a,i,s)),t=u(e,l,1,e.getLineCount());d.deepStrictEqual(t.length,0)}),test.skip("Issue #185252",()=>{const a=["/*"," * This is a comment."," */"].join(`
`),e=n.add(p(o,a,i,s)),t=u(e,l,1,e.getLineCount());d.deepStrictEqual(t.length,0)}),test.skip("Issue 43244: incorrect indentation when signature of function call spans several lines",()=>{const a=["function callSomeOtherFunction(one: number, two: number) { }","function someFunction() {","    callSomeOtherFunction(4,","        5)","}"].join(`
`),e=n.add(p(o,a,i,s)),t=u(e,l,1,e.getLineCount());d.deepStrictEqual(t.length,0)})});
