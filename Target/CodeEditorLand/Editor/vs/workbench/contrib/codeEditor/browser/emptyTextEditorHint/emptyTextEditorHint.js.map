{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/codeEditor/browser/emptyTextEditorHint/emptyTextEditorHint.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './emptyTextEditorHint.css';\nimport * as dom from '../../../../../base/browser/dom.js';\nimport { DisposableStore, dispose, IDisposable } from '../../../../../base/common/lifecycle.js';\nimport { ContentWidgetPositionPreference, ICodeEditor, IContentWidget, IContentWidgetPosition } from '../../../../../editor/browser/editorBrowser.js';\nimport { localize } from '../../../../../nls.js';\nimport { ChangeLanguageAction } from '../../../../browser/parts/editor/editorStatus.js';\nimport { ICommandService } from '../../../../../platform/commands/common/commands.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../../../../../editor/common/languages/modesRegistry.js';\nimport { IEditorContribution } from '../../../../../editor/common/editorCommon.js';\nimport { Schemas } from '../../../../../base/common/network.js';\nimport { Event } from '../../../../../base/common/event.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { ConfigurationChangedEvent, EditorOption } from '../../../../../editor/common/config/editorOptions.js';\nimport { EditorContributionInstantiation, registerEditorContribution } from '../../../../../editor/browser/editorExtensions.js';\nimport { IKeybindingService } from '../../../../../platform/keybinding/common/keybinding.js';\nimport { IEditorGroupsService } from '../../../../services/editor/common/editorGroupsService.js';\nimport { IContentActionHandler, renderFormattedText } from '../../../../../base/browser/formattedTextRenderer.js';\nimport { ApplyFileSnippetAction } from '../../../snippets/browser/commands/fileTemplateSnippets.js';\nimport { IInlineChatSessionService } from '../../../inlineChat/browser/inlineChatSessionService.js';\nimport { ITelemetryService } from '../../../../../platform/telemetry/common/telemetry.js';\nimport { WorkbenchActionExecutedClassification, WorkbenchActionExecutedEvent } from '../../../../../base/common/actions.js';\nimport { IProductService } from '../../../../../platform/product/common/productService.js';\nimport { KeybindingLabel } from '../../../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { OS } from '../../../../../base/common/platform.js';\nimport { status } from '../../../../../base/browser/ui/aria/aria.js';\nimport { AccessibilityVerbositySettingId } from '../../../accessibility/browser/accessibilityConfiguration.js';\nimport { LOG_MODE_ID, OUTPUT_MODE_ID } from '../../../../services/output/common/output.js';\nimport { SEARCH_RESULT_LANGUAGE_ID } from '../../../../services/search/common/search.js';\nimport { getDefaultHoverDelegate } from '../../../../../base/browser/ui/hover/hoverDelegateFactory.js';\nimport { IHoverService } from '../../../../../platform/hover/browser/hover.js';\nimport { ChatAgentLocation, IChatAgent, IChatAgentService } from '../../../chat/common/chatAgents.js';\nimport { IContextMenuService } from '../../../../../platform/contextview/browser/contextView.js';\nimport { StandardMouseEvent } from '../../../../../base/browser/mouseEvent.js';\n\nconst $ = dom.$;\n\nexport interface IEmptyTextEditorHintOptions {\n\treadonly clickable?: boolean;\n}\n\nexport const emptyTextEditorHintSetting = 'workbench.editor.empty.hint';\nexport class EmptyTextEditorHintContribution implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.emptyTextEditorHint';\n\n\tprotected toDispose: IDisposable[];\n\tprivate textHintContentWidget: EmptyTextEditorHintContentWidget | undefined;\n\n\tconstructor(\n\t\tprotected readonly editor: ICodeEditor,\n\t\t@IEditorGroupsService private readonly editorGroupsService: IEditorGroupsService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IConfigurationService protected readonly configurationService: IConfigurationService,\n\t\t@IHoverService protected readonly hoverService: IHoverService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@IInlineChatSessionService private readonly inlineChatSessionService: IInlineChatSessionService,\n\t\t@IChatAgentService private readonly chatAgentService: IChatAgentService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IProductService protected readonly productService: IProductService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService\n\t) {\n\t\tthis.toDispose = [];\n\t\tthis.toDispose.push(this.editor.onDidChangeModel(() => this.update()));\n\t\tthis.toDispose.push(this.editor.onDidChangeModelLanguage(() => this.update()));\n\t\tthis.toDispose.push(this.editor.onDidChangeModelContent(() => this.update()));\n\t\tthis.toDispose.push(this.chatAgentService.onDidChangeAgents(() => this.update()));\n\t\tthis.toDispose.push(this.editor.onDidChangeModelDecorations(() => this.update()));\n\t\tthis.toDispose.push(this.editor.onDidChangeConfiguration((e: ConfigurationChangedEvent) => {\n\t\t\tif (e.hasChanged(EditorOption.readOnly)) {\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t}));\n\t\tthis.toDispose.push(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(emptyTextEditorHintSetting)) {\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t}));\n\t\tthis.toDispose.push(inlineChatSessionService.onWillStartSession(editor => {\n\t\t\tif (this.editor === editor) {\n\t\t\t\tthis.textHintContentWidget?.dispose();\n\t\t\t}\n\t\t}));\n\t\tthis.toDispose.push(inlineChatSessionService.onDidEndSession(e => {\n\t\t\tif (this.editor === e.editor) {\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprotected _getOptions(): IEmptyTextEditorHintOptions {\n\t\treturn { clickable: true };\n\t}\n\n\tprotected _shouldRenderHint() {\n\t\tconst configValue = this.configurationService.getValue(emptyTextEditorHintSetting);\n\t\tif (configValue === 'hidden') {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.editor.getOption(EditorOption.readOnly)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst model = this.editor.getModel();\n\t\tconst languageId = model?.getLanguageId();\n\t\tif (!model || languageId === OUTPUT_MODE_ID || languageId === LOG_MODE_ID || languageId === SEARCH_RESULT_LANGUAGE_ID) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.inlineChatSessionService.getSession(this.editor, model.uri)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.editor.getModel()?.getValueLength()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst hasConflictingDecorations = Boolean(this.editor.getLineDecorations(1)?.find((d) =>\n\t\t\td.options.beforeContentClassName\n\t\t\t|| d.options.afterContentClassName\n\t\t\t|| d.options.before?.content\n\t\t\t|| d.options.after?.content\n\t\t));\n\t\tif (hasConflictingDecorations) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst hasEditorAgents = Boolean(this.chatAgentService.getDefaultAgent(ChatAgentLocation.Editor));\n\t\tconst shouldRenderDefaultHint = model?.uri.scheme === Schemas.untitled && languageId === PLAINTEXT_LANGUAGE_ID;\n\t\treturn hasEditorAgents || shouldRenderDefaultHint;\n\t}\n\n\tprotected update(): void {\n\t\tconst shouldRenderHint = this._shouldRenderHint();\n\t\tif (shouldRenderHint && !this.textHintContentWidget) {\n\t\t\tthis.textHintContentWidget = new EmptyTextEditorHintContentWidget(\n\t\t\t\tthis.editor,\n\t\t\t\tthis._getOptions(),\n\t\t\t\tthis.editorGroupsService,\n\t\t\t\tthis.commandService,\n\t\t\t\tthis.configurationService,\n\t\t\t\tthis.hoverService,\n\t\t\t\tthis.keybindingService,\n\t\t\t\tthis.chatAgentService,\n\t\t\t\tthis.telemetryService,\n\t\t\t\tthis.productService,\n\t\t\t\tthis.contextMenuService\n\t\t\t);\n\t\t} else if (!shouldRenderHint && this.textHintContentWidget) {\n\t\t\tthis.textHintContentWidget.dispose();\n\t\t\tthis.textHintContentWidget = undefined;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tdispose(this.toDispose);\n\t\tthis.textHintContentWidget?.dispose();\n\t}\n}\n\nclass EmptyTextEditorHintContentWidget implements IContentWidget {\n\n\tprivate static readonly ID = 'editor.widget.emptyHint';\n\n\tprivate domNode: HTMLElement | undefined;\n\tprivate readonly toDispose: DisposableStore;\n\tprivate isVisible = false;\n\tprivate ariaLabel: string = '';\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\tprivate readonly options: IEmptyTextEditorHintOptions,\n\t\tprivate readonly editorGroupsService: IEditorGroupsService,\n\t\tprivate readonly commandService: ICommandService,\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\tprivate readonly hoverService: IHoverService,\n\t\tprivate readonly keybindingService: IKeybindingService,\n\t\tprivate readonly chatAgentService: IChatAgentService,\n\t\tprivate readonly telemetryService: ITelemetryService,\n\t\tprivate readonly productService: IProductService,\n\t\tprivate readonly contextMenuService: IContextMenuService,\n\t) {\n\t\tthis.toDispose = new DisposableStore();\n\t\tthis.toDispose.add(this.editor.onDidChangeConfiguration((e: ConfigurationChangedEvent) => {\n\t\t\tif (this.domNode && e.hasChanged(EditorOption.fontInfo)) {\n\t\t\t\tthis.editor.applyFontInfo(this.domNode);\n\t\t\t}\n\t\t}));\n\t\tconst onDidFocusEditorText = Event.debounce(this.editor.onDidFocusEditorText, () => undefined, 500);\n\t\tthis.toDispose.add(onDidFocusEditorText(() => {\n\t\t\tif (this.editor.hasTextFocus() && this.isVisible && this.ariaLabel && this.configurationService.getValue(AccessibilityVerbositySettingId.EmptyEditorHint)) {\n\t\t\t\tstatus(this.ariaLabel);\n\t\t\t}\n\t\t}));\n\t\tthis.editor.addContentWidget(this);\n\t}\n\n\tgetId(): string {\n\t\treturn EmptyTextEditorHintContentWidget.ID;\n\t}\n\n\tprivate _disableHint(e?: MouseEvent) {\n\t\tconst disableHint = () => {\n\t\t\tthis.configurationService.updateValue(emptyTextEditorHintSetting, 'hidden');\n\t\t\tthis.dispose();\n\t\t\tthis.editor.focus();\n\t\t};\n\n\t\tif (!e) {\n\t\t\tdisableHint();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => { return new StandardMouseEvent(dom.getActiveWindow(), e); },\n\t\t\tgetActions: () => {\n\t\t\t\treturn [{\n\t\t\t\t\tid: 'workench.action.disableEmptyEditorHint',\n\t\t\t\t\tlabel: localize('disableEditorEmptyHint', \"Disable Empty Editor Hint\"),\n\t\t\t\t\ttooltip: localize('disableEditorEmptyHint', \"Disable Empty Editor Hint\"),\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tclass: undefined,\n\t\t\t\t\trun: () => {\n\t\t\t\t\t\tdisableHint();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t];\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _getHintInlineChat(providers: IChatAgent[]) {\n\t\tconst providerName = (providers.length === 1 ? providers[0].fullName : undefined) ?? this.productService.nameShort;\n\n\t\tconst inlineChatId = 'inlineChat.start';\n\t\tlet ariaLabel = `Ask ${providerName} something or start typing to dismiss.`;\n\n\t\tconst handleClick = () => {\n\t\t\tthis.telemetryService.publicLog2<WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification>('workbenchActionExecuted', {\n\t\t\t\tid: 'inlineChat.hintAction',\n\t\t\t\tfrom: 'hint'\n\t\t\t});\n\t\t\tthis.commandService.executeCommand(inlineChatId, { from: 'hint' });\n\t\t};\n\n\t\tconst hintHandler: IContentActionHandler = {\n\t\t\tdisposables: this.toDispose,\n\t\t\tcallback: (index, _event) => {\n\t\t\t\tswitch (index) {\n\t\t\t\t\tcase '0':\n\t\t\t\t\t\thandleClick();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst hintElement = $('empty-hint-text');\n\t\thintElement.style.display = 'block';\n\n\t\tconst keybindingHint = this.keybindingService.lookupKeybinding(inlineChatId);\n\t\tconst keybindingHintLabel = keybindingHint?.getLabel();\n\n\t\tif (keybindingHint && keybindingHintLabel) {\n\t\t\tconst actionPart = localize('emptyHintText', 'Press {0} to ask {1} to do something. ', keybindingHintLabel, providerName);\n\n\t\t\tconst [before, after] = actionPart.split(keybindingHintLabel).map((fragment) => {\n\t\t\t\tif (this.options.clickable) {\n\t\t\t\t\tconst hintPart = $('a', undefined, fragment);\n\t\t\t\t\thintPart.style.fontStyle = 'italic';\n\t\t\t\t\thintPart.style.cursor = 'pointer';\n\t\t\t\t\tthis.toDispose.add(dom.addDisposableListener(hintPart, dom.EventType.CONTEXT_MENU, (e) => this._disableHint(e)));\n\t\t\t\t\tthis.toDispose.add(dom.addDisposableListener(hintPart, dom.EventType.CLICK, handleClick));\n\t\t\t\t\treturn hintPart;\n\t\t\t\t} else {\n\t\t\t\t\tconst hintPart = $('span', undefined, fragment);\n\t\t\t\t\thintPart.style.fontStyle = 'italic';\n\t\t\t\t\treturn hintPart;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thintElement.appendChild(before);\n\n\t\t\tconst label = hintHandler.disposables.add(new KeybindingLabel(hintElement, OS));\n\t\t\tlabel.set(keybindingHint);\n\t\t\tlabel.element.style.width = 'min-content';\n\t\t\tlabel.element.style.display = 'inline';\n\n\t\t\tif (this.options.clickable) {\n\t\t\t\tlabel.element.style.cursor = 'pointer';\n\t\t\t\tthis.toDispose.add(dom.addDisposableListener(label.element, dom.EventType.CONTEXT_MENU, (e) => this._disableHint(e)));\n\t\t\t\tthis.toDispose.add(dom.addDisposableListener(label.element, dom.EventType.CLICK, handleClick));\n\t\t\t}\n\n\t\t\thintElement.appendChild(after);\n\n\t\t\tconst typeToDismiss = localize('emptyHintTextDismiss', 'Start typing to dismiss.');\n\t\t\tconst textHint2 = $('span', undefined, typeToDismiss);\n\t\t\ttextHint2.style.fontStyle = 'italic';\n\t\t\thintElement.appendChild(textHint2);\n\n\t\t\tariaLabel = actionPart.concat(typeToDismiss);\n\t\t} else {\n\t\t\tconst hintMsg = localize({\n\t\t\t\tkey: 'inlineChatHint',\n\t\t\t\tcomment: [\n\t\t\t\t\t'Preserve double-square brackets and their order',\n\t\t\t\t]\n\t\t\t}, '[[Ask {0} to do something]] or start typing to dismiss.', providerName);\n\t\t\tconst rendered = renderFormattedText(hintMsg, { actionHandler: hintHandler });\n\t\t\thintElement.appendChild(rendered);\n\t\t}\n\n\t\treturn { ariaLabel, hintElement };\n\t}\n\n\tprivate _getHintDefault() {\n\t\tconst hintHandler: IContentActionHandler = {\n\t\t\tdisposables: this.toDispose,\n\t\t\tcallback: (index, event) => {\n\t\t\t\tswitch (index) {\n\t\t\t\t\tcase '0':\n\t\t\t\t\t\tlanguageOnClickOrTap(event.browserEvent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '1':\n\t\t\t\t\t\tsnippetOnClickOrTap(event.browserEvent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '2':\n\t\t\t\t\t\tchooseEditorOnClickOrTap(event.browserEvent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '3':\n\t\t\t\t\t\tthis._disableHint();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// the actual command handlers...\n\t\tconst languageOnClickOrTap = async (e: UIEvent) => {\n\t\t\te.stopPropagation();\n\t\t\t// Need to focus editor before so current editor becomes active and the command is properly executed\n\t\t\tthis.editor.focus();\n\t\t\tthis.telemetryService.publicLog2<WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification>('workbenchActionExecuted', {\n\t\t\t\tid: ChangeLanguageAction.ID,\n\t\t\t\tfrom: 'hint'\n\t\t\t});\n\t\t\tawait this.commandService.executeCommand(ChangeLanguageAction.ID);\n\t\t\tthis.editor.focus();\n\t\t};\n\n\t\tconst snippetOnClickOrTap = async (e: UIEvent) => {\n\t\t\te.stopPropagation();\n\n\t\t\tthis.telemetryService.publicLog2<WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification>('workbenchActionExecuted', {\n\t\t\t\tid: ApplyFileSnippetAction.Id,\n\t\t\t\tfrom: 'hint'\n\t\t\t});\n\t\t\tawait this.commandService.executeCommand(ApplyFileSnippetAction.Id);\n\t\t};\n\n\t\tconst chooseEditorOnClickOrTap = async (e: UIEvent) => {\n\t\t\te.stopPropagation();\n\n\t\t\tconst activeEditorInput = this.editorGroupsService.activeGroup.activeEditor;\n\t\t\tthis.telemetryService.publicLog2<WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification>('workbenchActionExecuted', {\n\t\t\t\tid: 'welcome.showNewFileEntries',\n\t\t\t\tfrom: 'hint'\n\t\t\t});\n\t\t\tconst newEditorSelected = await this.commandService.executeCommand('welcome.showNewFileEntries', { from: 'hint' });\n\n\t\t\t// Close the active editor as long as it is untitled (swap the editors out)\n\t\t\tif (newEditorSelected && activeEditorInput !== null && activeEditorInput.resource?.scheme === Schemas.untitled) {\n\t\t\t\tthis.editorGroupsService.activeGroup.closeEditor(activeEditorInput, { preserveFocus: true });\n\t\t\t}\n\t\t};\n\n\t\tconst hintMsg = localize({\n\t\t\tkey: 'message',\n\t\t\tcomment: [\n\t\t\t\t'Preserve double-square brackets and their order',\n\t\t\t\t'language refers to a programming language'\n\t\t\t]\n\t\t}, '[[Select a language]], or [[fill with template]], or [[open a different editor]] to get started.\\nStart typing to dismiss or [[don\\'t show]] this again.');\n\t\tconst hintElement = renderFormattedText(hintMsg, {\n\t\t\tactionHandler: hintHandler,\n\t\t\trenderCodeSegments: false,\n\t\t});\n\t\thintElement.style.fontStyle = 'italic';\n\n\t\t// ugly way to associate keybindings...\n\t\tconst keybindingsLookup = [ChangeLanguageAction.ID, ApplyFileSnippetAction.Id, 'welcome.showNewFileEntries'];\n\t\tconst keybindingLabels = keybindingsLookup.map((id) => this.keybindingService.lookupKeybinding(id)?.getLabel() ?? id);\n\t\tconst ariaLabel = localize('defaultHintAriaLabel', 'Execute {0} to select a language, execute {1} to fill with template, or execute {2} to open a different editor and get started. Start typing to dismiss.', ...keybindingLabels);\n\t\tfor (const anchor of hintElement.querySelectorAll('a')) {\n\t\t\tanchor.style.cursor = 'pointer';\n\t\t\tconst id = keybindingsLookup.shift();\n\t\t\tconst title = id && this.keybindingService.lookupKeybinding(id)?.getLabel();\n\t\t\thintHandler.disposables.add(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), anchor, title ?? ''));\n\t\t}\n\n\t\treturn { hintElement, ariaLabel };\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\tif (!this.domNode) {\n\t\t\tthis.domNode = $('.empty-editor-hint');\n\t\t\tthis.domNode.style.width = 'max-content';\n\t\t\tthis.domNode.style.paddingLeft = '4px';\n\n\t\t\tconst inlineChatProviders = this.chatAgentService.getActivatedAgents().filter(candidate => candidate.locations.includes(ChatAgentLocation.Editor));\n\t\t\tconst { hintElement, ariaLabel } = !inlineChatProviders.length ? this._getHintDefault() : this._getHintInlineChat(inlineChatProviders);\n\t\t\tthis.domNode.append(hintElement);\n\t\t\tthis.ariaLabel = ariaLabel.concat(localize('disableHint', ' Toggle {0} in settings to disable this hint.', AccessibilityVerbositySettingId.EmptyEditorHint));\n\n\t\t\tthis.toDispose.add(dom.addDisposableListener(this.domNode, 'click', () => {\n\t\t\t\tthis.editor.focus();\n\t\t\t}));\n\n\t\t\tthis.editor.applyFontInfo(this.domNode);\n\t\t}\n\n\t\treturn this.domNode;\n\t}\n\n\tgetPosition(): IContentWidgetPosition | null {\n\t\treturn {\n\t\t\tposition: { lineNumber: 1, column: 1 },\n\t\t\tpreference: [ContentWidgetPositionPreference.EXACT]\n\t\t};\n\t}\n\n\tdispose(): void {\n\t\tthis.editor.removeContentWidget(this);\n\t\tdispose(this.toDispose);\n\t}\n}\n\nregisterEditorContribution(EmptyTextEditorHintContribution.ID, EmptyTextEditorHintContribution, EditorContributionInstantiation.Eager); // eager because it needs to render a help message\n"],
  "mappings": "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",
  "names": ["editor"]
}
