{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/codeEditor/browser/editorFeatures.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from \"../../../../base/common/errors.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { ICodeEditorService } from \"../../../../editor/browser/services/codeEditorService.js\";\nimport { getEditorFeatures } from \"../../../../editor/common/editorFeatures.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\ttype IWorkbenchContribution,\n\tWorkbenchPhase,\n\tregisterWorkbenchContribution2,\n} from \"../../../common/contributions.js\";\n\nclass EditorFeaturesInstantiator\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tstatic readonly ID = \"workbench.contrib.editorFeaturesInstantiator\";\n\n\tprivate _instantiated = false;\n\n\tconstructor(\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@IInstantiationService\n\t\tprivate readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(\n\t\t\tcodeEditorService.onWillCreateCodeEditor(() => this._instantiate()),\n\t\t);\n\t\tthis._register(\n\t\t\tcodeEditorService.onWillCreateDiffEditor(() => this._instantiate()),\n\t\t);\n\t\tif (\n\t\t\tcodeEditorService.listCodeEditors().length > 0 ||\n\t\t\tcodeEditorService.listDiffEditors().length > 0\n\t\t) {\n\t\t\tthis._instantiate();\n\t\t}\n\t}\n\n\tprivate _instantiate(): void {\n\t\tif (this._instantiated) {\n\t\t\treturn;\n\t\t}\n\t\tthis._instantiated = true;\n\n\t\t// Instantiate all editor features\n\t\tconst editorFeatures = getEditorFeatures();\n\t\tfor (const feature of editorFeatures) {\n\t\t\ttry {\n\t\t\t\tconst instance =\n\t\t\t\t\tthis._instantiationService.createInstance(feature);\n\t\t\t\tif (typeof (<IDisposable>instance).dispose === \"function\") {\n\t\t\t\t\tthis._register(<IDisposable>instance);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t}\n\t\t}\n\t}\n}\n\nregisterWorkbenchContribution2(\n\tEditorFeaturesInstantiator.ID,\n\tEditorFeaturesInstantiator,\n\tWorkbenchPhase.BlockRestore,\n);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,yBAAyB;AAClC;AAAA,EACC;AAAA,OAEM;AACP,SAAS,0BAA0B;AACnC,SAAS,yBAAyB;AAClC,SAAS,6BAA6B;AACtC;AAAA,EAEC;AAAA,EACA;AAAA,OACM;AAEP,IAAM,6BAAN,cACS,WAET;AAAA,EAKC,YACqB,mBAEH,uBAChB;AACD,UAAM;AAFW;AAIjB,SAAK;AAAA,MACJ,kBAAkB,uBAAuB,MAAM,KAAK,aAAa,CAAC;AAAA,IACnE;AACA,SAAK;AAAA,MACJ,kBAAkB,uBAAuB,MAAM,KAAK,aAAa,CAAC;AAAA,IACnE;AACA,QACC,kBAAkB,gBAAgB,EAAE,SAAS,KAC7C,kBAAkB,gBAAgB,EAAE,SAAS,GAC5C;AACD,WAAK,aAAa;AAAA,IACnB;AAAA,EACD;AAAA,EA9CD,OAsBA;AAAA;AAAA;AAAA,EACC,OAAgB,KAAK;AAAA,EAEb,gBAAgB;AAAA,EAuBhB,eAAqB;AAC5B,QAAI,KAAK,eAAe;AACvB;AAAA,IACD;AACA,SAAK,gBAAgB;AAGrB,UAAM,iBAAiB,kBAAkB;AACzC,eAAW,WAAW,gBAAgB;AACrC,UAAI;AACH,cAAM,WACL,KAAK,sBAAsB,eAAe,OAAO;AAClD,YAAI,OAAqB,SAAU,YAAY,YAAY;AAC1D,eAAK,UAAuB,QAAQ;AAAA,QACrC;AAAA,MACD,SAAS,KAAK;AACb,0BAAkB,GAAG;AAAA,MACtB;AAAA,IACD;AAAA,EACD;AACD;AAjDM,6BAAN;AAAA,EASG;AAAA,EACA;AAAA,GAVG;AAmDN;AAAA,EACC,2BAA2B;AAAA,EAC3B;AAAA,EACA,eAAe;AAChB;",
  "names": []
}
