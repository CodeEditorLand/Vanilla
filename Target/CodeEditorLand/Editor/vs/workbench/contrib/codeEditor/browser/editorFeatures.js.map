{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/codeEditor/browser/editorFeatures.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Disposable, IDisposable } from '../../../../base/common/lifecycle.js';\nimport { ICodeEditorService } from '../../../../editor/browser/services/codeEditorService.js';\nimport { getEditorFeatures } from '../../../../editor/common/editorFeatures.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IWorkbenchContribution, WorkbenchPhase, registerWorkbenchContribution2 } from '../../../common/contributions.js';\n\nclass EditorFeaturesInstantiator extends Disposable implements IWorkbenchContribution {\n\n\tstatic readonly ID = 'workbench.contrib.editorFeaturesInstantiator';\n\n\tprivate _instantiated = false;\n\n\tconstructor(\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\n\t\tthis._register(codeEditorService.onWillCreateCodeEditor(() => this._instantiate()));\n\t\tthis._register(codeEditorService.onWillCreateDiffEditor(() => this._instantiate()));\n\t\tif (codeEditorService.listCodeEditors().length > 0 || codeEditorService.listDiffEditors().length > 0) {\n\t\t\tthis._instantiate();\n\t\t}\n\t}\n\n\tprivate _instantiate(): void {\n\t\tif (this._instantiated) {\n\t\t\treturn;\n\t\t}\n\t\tthis._instantiated = true;\n\n\t\t// Instantiate all editor features\n\t\tconst editorFeatures = getEditorFeatures();\n\t\tfor (const feature of editorFeatures) {\n\t\t\ttry {\n\t\t\t\tconst instance = this._instantiationService.createInstance(feature);\n\t\t\t\tif (typeof (<IDisposable>instance).dispose === 'function') {\n\t\t\t\t\tthis._register((<IDisposable>instance));\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t}\n\t\t}\n\t}\n}\n\nregisterWorkbenchContribution2(EditorFeaturesInstantiator.ID, EditorFeaturesInstantiator, WorkbenchPhase.BlockRestore);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,yBAAyB;AAClC,SAAS,YAAY,mBAAmB;AACxC,SAAS,0BAA0B;AACnC,SAAS,yBAAyB;AAClC,SAAS,6BAA6B;AACtC,SAAS,wBAAwB,gBAAgB,sCAAsC;AAEvF,IAAM,6BAAN,cAAyC,WAA6C;AAAA,EAMrF,YACqB,mBACoB,uBACvC;AACD,UAAM;AAFkC;AAIxC,SAAK,UAAU,kBAAkB,uBAAuB,MAAM,KAAK,aAAa,CAAC,CAAC;AAClF,SAAK,UAAU,kBAAkB,uBAAuB,MAAM,KAAK,aAAa,CAAC,CAAC;AAClF,QAAI,kBAAkB,gBAAgB,EAAE,SAAS,KAAK,kBAAkB,gBAAgB,EAAE,SAAS,GAAG;AACrG,WAAK,aAAa;AAAA,IACnB;AAAA,EACD;AAAA,EA7BD,OAYsF;AAAA;AAAA;AAAA,EAErF,OAAgB,KAAK;AAAA,EAEb,gBAAgB;AAAA,EAehB,eAAqB;AAC5B,QAAI,KAAK,eAAe;AACvB;AAAA,IACD;AACA,SAAK,gBAAgB;AAGrB,UAAM,iBAAiB,kBAAkB;AACzC,eAAW,WAAW,gBAAgB;AACrC,UAAI;AACH,cAAM,WAAW,KAAK,sBAAsB,eAAe,OAAO;AAClE,YAAI,OAAqB,SAAU,YAAY,YAAY;AAC1D,eAAK,UAAwB,QAAS;AAAA,QACvC;AAAA,MACD,SAAS,KAAK;AACb,0BAAkB,GAAG;AAAA,MACtB;AAAA,IACD;AAAA,EACD;AACD;AAtCM,6BAAN;AAAA,EAOG;AAAA,EACA;AAAA,GARG;AAwCN,+BAA+B,2BAA2B,IAAI,4BAA4B,eAAe,YAAY;",
  "names": []
}
