{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/codeEditor/browser/toggleMinimap.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport { Categories } from \"../../../../platform/action/common/actionCommonCategories.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\n\nexport class ToggleMinimapAction extends Action2 {\n\tstatic readonly ID = \"editor.action.toggleMinimap\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleMinimapAction.ID,\n\t\t\ttitle: {\n\t\t\t\t...localize2(\"toggleMinimap\", \"Toggle Minimap\"),\n\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t{ key: \"miMinimap\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\"&&Minimap\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\ttoggled: ContextKeyExpr.equals(\n\t\t\t\t\"config.editor.minimap.enabled\",\n\t\t\t\ttrue,\n\t\t\t),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\tgroup: \"4_editor\",\n\t\t\t\torder: 1,\n\t\t\t},\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst newValue = !configurationService.getValue(\n\t\t\t\"editor.minimap.enabled\",\n\t\t);\n\t\treturn configurationService.updateValue(\n\t\t\t\"editor.minimap.enabled\",\n\t\t\tnewValue,\n\t\t);\n\t}\n}\n\nregisterAction2(ToggleMinimapAction);\n"],
  "mappings": ";;AAKA,SAAS,UAAU,iBAAiB;AACpC,SAAS,kBAAkB;AAC3B;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,6BAA6B;AACtC,SAAS,sBAAsB;AAGxB,MAAM,4BAA4B,QAAQ;AAAA,EAhBjD,OAgBiD;AAAA;AAAA;AAAA,EAChD,OAAgB,KAAK;AAAA,EAErB,cAAc;AACb,UAAM;AAAA,MACL,IAAI,oBAAoB;AAAA,MACxB,OAAO;AAAA,QACN,GAAG,UAAU,iBAAiB,gBAAgB;AAAA,QAC9C,eAAe;AAAA,UACd,EAAE,KAAK,aAAa,SAAS,CAAC,uBAAuB,EAAE;AAAA,UACvD;AAAA,QACD;AAAA,MACD;AAAA,MACA,UAAU,WAAW;AAAA,MACrB,IAAI;AAAA,MACJ,SAAS,eAAe;AAAA,QACvB;AAAA,QACA;AAAA,MACD;AAAA,MACA,MAAM;AAAA,QACL,IAAI,OAAO;AAAA,QACX,OAAO;AAAA,QACP,OAAO;AAAA,MACR;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,uBAAuB,SAAS,IAAI,qBAAqB;AAE/D,UAAM,WAAW,CAAC,qBAAqB;AAAA,MACtC;AAAA,IACD;AACA,WAAO,qBAAqB;AAAA,MAC3B;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AAEA,gBAAgB,mBAAmB;",
  "names": []
}
