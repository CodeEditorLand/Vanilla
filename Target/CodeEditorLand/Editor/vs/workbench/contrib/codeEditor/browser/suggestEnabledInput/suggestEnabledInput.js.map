{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/codeEditor/browser/suggestEnabledInput/suggestEnabledInput.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { $, type Dimension, append } from \"../../../../../base/browser/dom.js\";\nimport { DEFAULT_FONT_FAMILY } from \"../../../../../base/browser/fonts.js\";\nimport type { IHistoryNavigationWidget } from \"../../../../../base/browser/history.js\";\nimport { Widget } from \"../../../../../base/browser/ui/widget.js\";\nimport { Emitter, Event } from \"../../../../../base/common/event.js\";\nimport { HistoryNavigator } from \"../../../../../base/common/history.js\";\nimport { KeyCode } from \"../../../../../base/common/keyCodes.js\";\nimport { mixin } from \"../../../../../base/common/objects.js\";\nimport { isMacintosh } from \"../../../../../base/common/platform.js\";\nimport { URI as uri } from \"../../../../../base/common/uri.js\";\nimport \"./suggestEnabledInput.css\";\nimport type { IEditorConstructionOptions } from \"../../../../../editor/browser/config/editorConfiguration.js\";\nimport { EditorExtensionsRegistry } from \"../../../../../editor/browser/editorExtensions.js\";\nimport { CodeEditorWidget } from \"../../../../../editor/browser/widget/codeEditor/codeEditorWidget.js\";\nimport type { IEditorOptions } from \"../../../../../editor/common/config/editorOptions.js\";\nimport { EditOperation } from \"../../../../../editor/common/core/editOperation.js\";\nimport { Position } from \"../../../../../editor/common/core/position.js\";\nimport { Range } from \"../../../../../editor/common/core/range.js\";\nimport {\n\tensureValidWordDefinition,\n\tgetWordAtText,\n} from \"../../../../../editor/common/core/wordHelper.js\";\nimport * as languages from \"../../../../../editor/common/languages.js\";\nimport type { ITextModel } from \"../../../../../editor/common/model.js\";\nimport { ILanguageFeaturesService } from \"../../../../../editor/common/services/languageFeatures.js\";\nimport { IModelService } from \"../../../../../editor/common/services/model.js\";\nimport { ContextMenuController } from \"../../../../../editor/contrib/contextmenu/browser/contextmenu.js\";\nimport { SnippetController2 } from \"../../../../../editor/contrib/snippet/browser/snippetController2.js\";\nimport { SuggestController } from \"../../../../../editor/contrib/suggest/browser/suggestController.js\";\nimport { IConfigurationService } from \"../../../../../platform/configuration/common/configuration.js\";\nimport {\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\ttype IHistoryNavigationContext,\n\tregisterAndCreateHistoryNavigationContext,\n} from \"../../../../../platform/history/browser/contextScopedHistoryWidget.js\";\nimport { IInstantiationService } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport { ServiceCollection } from \"../../../../../platform/instantiation/common/serviceCollection.js\";\nimport {\n\ttype ColorIdentifier,\n\tasCssVariable,\n\tasCssVariableWithDefault,\n\tinputBackground,\n\tinputBorder,\n\tinputForeground,\n\tinputPlaceholderForeground,\n} from \"../../../../../platform/theme/common/colorRegistry.js\";\nimport { MenuPreventer } from \"../menuPreventer.js\";\nimport { SelectionClipboardContributionID } from \"../selectionClipboard.js\";\nimport {\n\tgetSimpleEditorOptions,\n\tsetupSimpleEditorSelectionStyling,\n} from \"../simpleEditorOptions.js\";\n\nexport interface SuggestResultsProvider {\n\t/**\n\t * Provider function for suggestion results.\n\t *\n\t * @param query the full text of the input.\n\t */\n\tprovideResults: (\n\t\tquery: string,\n\t) => ((Partial<languages.CompletionItem> & { label: string }) | string)[];\n\n\t/**\n\t * Trigger characters for this input. Suggestions will appear when one of these is typed,\n\t * or upon `ctrl+space` triggering at a word boundary.\n\t *\n\t * Defaults to the empty array.\n\t */\n\ttriggerCharacters?: string[];\n\n\t/**\n\t * Optional regular expression that describes what a word is\n\t *\n\t * Defaults to space separated words.\n\t */\n\twordDefinition?: RegExp;\n\n\t/**\n\t * Show suggestions even if the trigger character is not present.\n\t *\n\t * Defaults to false.\n\t */\n\talwaysShowSuggestions?: boolean;\n\n\t/**\n\t * Defines the sorting function used when showing results.\n\t *\n\t * Defaults to the identity function.\n\t */\n\tsortKey?: (result: string) => string;\n}\n\ninterface SuggestEnabledInputOptions {\n\t/**\n\t * The text to show when no input is present.\n\t *\n\t * Defaults to the empty string.\n\t */\n\tplaceholderText?: string;\n\n\t/**\n\t * Initial value to be shown\n\t */\n\tvalue?: string;\n\n\t/**\n\t * Context key tracking the focus state of this element\n\t */\n\tfocusContextKey?: IContextKey<boolean>;\n\n\t/**\n\t * Place overflow widgets inside an external DOM node.\n\t * Defaults to an internal DOM node.\n\t */\n\toverflowWidgetsDomNode?: HTMLElement;\n\n\t/**\n\t * Override the default styling of the input.\n\t */\n\tstyleOverrides?: ISuggestEnabledInputStyleOverrides;\n}\n\nexport interface ISuggestEnabledInputStyleOverrides {\n\tinputBackground?: ColorIdentifier;\n\tinputForeground?: ColorIdentifier;\n\tinputBorder?: ColorIdentifier;\n\tinputPlaceholderForeground?: ColorIdentifier;\n}\n\nexport class SuggestEnabledInput extends Widget {\n\tprivate readonly _onShouldFocusResults = new Emitter<void>();\n\treadonly onShouldFocusResults: Event<void> =\n\t\tthis._onShouldFocusResults.event;\n\n\tprivate readonly _onInputDidChange = new Emitter<string | undefined>();\n\treadonly onInputDidChange: Event<string | undefined> =\n\t\tthis._onInputDidChange.event;\n\n\tprivate readonly _onDidFocus = this._register(new Emitter<void>());\n\treadonly onDidFocus = this._onDidFocus.event;\n\n\tprivate readonly _onDidBlur = this._register(new Emitter<void>());\n\treadonly onDidBlur = this._onDidBlur.event;\n\n\treadonly inputWidget: CodeEditorWidget;\n\tprivate readonly inputModel: ITextModel;\n\tprotected stylingContainer: HTMLDivElement;\n\treadonly element: HTMLElement;\n\tprivate placeholderText: HTMLDivElement;\n\n\tconstructor(\n\t\tid: string,\n\t\tparent: HTMLElement,\n\t\tsuggestionProvider: SuggestResultsProvider,\n\t\tariaLabel: string,\n\t\tresourceHandle: string,\n\t\toptions: SuggestEnabledInputOptions,\n\t\t@IInstantiationService defaultInstantiationService: IInstantiationService,\n\t\t@IModelService modelService: IModelService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\n\t\tthis.stylingContainer = append(parent, $(\".suggest-input-container\"));\n\t\tthis.element = parent;\n\t\tthis.placeholderText = append(\n\t\t\tthis.stylingContainer,\n\t\t\t$(\n\t\t\t\t\".suggest-input-placeholder\",\n\t\t\t\tundefined,\n\t\t\t\toptions.placeholderText || \"\",\n\t\t\t),\n\t\t);\n\n\t\tconst editorOptions: IEditorConstructionOptions = mixin(\n\t\t\tgetSimpleEditorOptions(configurationService),\n\t\t\tgetSuggestEnabledInputOptions(ariaLabel),\n\t\t);\n\t\teditorOptions.overflowWidgetsDomNode = options.overflowWidgetsDomNode;\n\n\t\tconst scopedContextKeyService =\n\t\t\tthis.getScopedContextKeyService(contextKeyService);\n\n\t\tconst instantiationService = scopedContextKeyService\n\t\t\t? this._register(\n\t\t\t\t\tdefaultInstantiationService.createChild(\n\t\t\t\t\t\tnew ServiceCollection([\n\t\t\t\t\t\t\tIContextKeyService,\n\t\t\t\t\t\t\tscopedContextKeyService,\n\t\t\t\t\t\t]),\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t: defaultInstantiationService;\n\n\t\tthis.inputWidget = this._register(\n\t\t\tinstantiationService.createInstance(\n\t\t\t\tCodeEditorWidget,\n\t\t\t\tthis.stylingContainer,\n\t\t\t\teditorOptions,\n\t\t\t\t{\n\t\t\t\t\tcontributions:\n\t\t\t\t\t\tEditorExtensionsRegistry.getSomeEditorContributions([\n\t\t\t\t\t\t\tSuggestController.ID,\n\t\t\t\t\t\t\tSnippetController2.ID,\n\t\t\t\t\t\t\tContextMenuController.ID,\n\t\t\t\t\t\t\tMenuPreventer.ID,\n\t\t\t\t\t\t\tSelectionClipboardContributionID,\n\t\t\t\t\t\t]),\n\t\t\t\t\tisSimpleWidget: true,\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tconfigurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (\n\t\t\t\t\te.affectsConfiguration(\"editor.accessibilitySupport\") ||\n\t\t\t\t\te.affectsConfiguration(\"editor.cursorBlinking\")\n\t\t\t\t) {\n\t\t\t\t\tconst accessibilitySupport = configurationService.getValue<\n\t\t\t\t\t\t\"auto\" | \"off\" | \"on\"\n\t\t\t\t\t>(\"editor.accessibilitySupport\");\n\t\t\t\t\tconst cursorBlinking = configurationService.getValue<\n\t\t\t\t\t\t\"blink\" | \"smooth\" | \"phase\" | \"expand\" | \"solid\"\n\t\t\t\t\t>(\"editor.cursorBlinking\");\n\t\t\t\t\tthis.inputWidget.updateOptions({\n\t\t\t\t\t\taccessibilitySupport,\n\t\t\t\t\t\tcursorBlinking,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.inputWidget.onDidFocusEditorText(() =>\n\t\t\t\tthis._onDidFocus.fire(),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.inputWidget.onDidBlurEditorText(() => this._onDidBlur.fire()),\n\t\t);\n\n\t\tconst scopeHandle = uri.parse(resourceHandle);\n\t\tthis.inputModel = modelService.createModel(\"\", null, scopeHandle, true);\n\t\tthis._register(this.inputModel);\n\t\tthis.inputWidget.setModel(this.inputModel);\n\n\t\tthis._register(\n\t\t\tthis.inputWidget.onDidPaste(() => this.setValue(this.getValue())),\n\t\t); // setter cleanses\n\n\t\tthis._register(\n\t\t\tthis.inputWidget.onDidFocusEditorText(() => {\n\t\t\t\tif (options.focusContextKey) {\n\t\t\t\t\toptions.focusContextKey.set(true);\n\t\t\t\t}\n\t\t\t\tthis.stylingContainer.classList.add(\"synthetic-focus\");\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.inputWidget.onDidBlurEditorText(() => {\n\t\t\t\tif (options.focusContextKey) {\n\t\t\t\t\toptions.focusContextKey.set(false);\n\t\t\t\t}\n\t\t\t\tthis.stylingContainer.classList.remove(\"synthetic-focus\");\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tEvent.chain(this.inputWidget.onKeyDown, ($) =>\n\t\t\t\t$.filter((e) => e.keyCode === KeyCode.Enter),\n\t\t\t)((e) => {\n\t\t\t\te.preventDefault(); /** Do nothing. Enter causes new line which is not expected. */\n\t\t\t}, this),\n\t\t);\n\t\tthis._register(\n\t\t\tEvent.chain(this.inputWidget.onKeyDown, ($) =>\n\t\t\t\t$.filter(\n\t\t\t\t\t(e) =>\n\t\t\t\t\t\te.keyCode === KeyCode.DownArrow &&\n\t\t\t\t\t\t(isMacintosh ? e.metaKey : e.ctrlKey),\n\t\t\t\t),\n\t\t\t)(() => this._onShouldFocusResults.fire(), this),\n\t\t);\n\n\t\tlet preexistingContent = this.getValue();\n\t\tconst inputWidgetModel = this.inputWidget.getModel();\n\t\tif (inputWidgetModel) {\n\t\t\tthis._register(\n\t\t\t\tinputWidgetModel.onDidChangeContent(() => {\n\t\t\t\t\tconst content = this.getValue();\n\t\t\t\t\tthis.placeholderText.style.visibility = content\n\t\t\t\t\t\t? \"hidden\"\n\t\t\t\t\t\t: \"visible\";\n\t\t\t\t\tif (preexistingContent.trim() === content.trim()) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis._onInputDidChange.fire(undefined);\n\t\t\t\t\tpreexistingContent = content;\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\tconst validatedSuggestProvider = {\n\t\t\tprovideResults: suggestionProvider.provideResults,\n\t\t\tsortKey: suggestionProvider.sortKey || ((a) => a),\n\t\t\ttriggerCharacters: suggestionProvider.triggerCharacters || [],\n\t\t\twordDefinition: suggestionProvider.wordDefinition\n\t\t\t\t? ensureValidWordDefinition(suggestionProvider.wordDefinition)\n\t\t\t\t: undefined,\n\t\t\talwaysShowSuggestions: !!suggestionProvider.alwaysShowSuggestions,\n\t\t};\n\n\t\tthis.setValue(options.value || \"\");\n\n\t\tthis._register(\n\t\t\tlanguageFeaturesService.completionProvider.register(\n\t\t\t\t{\n\t\t\t\t\tscheme: scopeHandle.scheme,\n\t\t\t\t\tpattern: \"**/\" + scopeHandle.path,\n\t\t\t\t\thasAccessToAllModels: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t_debugDisplayName: `suggestEnabledInput/${id}`,\n\t\t\t\t\ttriggerCharacters:\n\t\t\t\t\t\tvalidatedSuggestProvider.triggerCharacters,\n\t\t\t\t\tprovideCompletionItems: (\n\t\t\t\t\t\tmodel: ITextModel,\n\t\t\t\t\t\tposition: Position,\n\t\t\t\t\t\t_context: languages.CompletionContext,\n\t\t\t\t\t) => {\n\t\t\t\t\t\tconst query = model.getValue();\n\n\t\t\t\t\t\tconst zeroIndexedColumn = position.column - 1;\n\t\t\t\t\t\tlet alreadyTypedCount = 0,\n\t\t\t\t\t\t\tzeroIndexedWordStart = 0;\n\n\t\t\t\t\t\tif (validatedSuggestProvider.wordDefinition) {\n\t\t\t\t\t\t\tconst wordAtText = getWordAtText(\n\t\t\t\t\t\t\t\tposition.column,\n\t\t\t\t\t\t\t\tvalidatedSuggestProvider.wordDefinition,\n\t\t\t\t\t\t\t\tquery,\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\talreadyTypedCount = wordAtText?.word.length ?? 0;\n\t\t\t\t\t\t\tzeroIndexedWordStart = wordAtText\n\t\t\t\t\t\t\t\t? wordAtText.startColumn - 1\n\t\t\t\t\t\t\t\t: 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tzeroIndexedWordStart =\n\t\t\t\t\t\t\t\tquery.lastIndexOf(\" \", zeroIndexedColumn - 1) +\n\t\t\t\t\t\t\t\t1;\n\t\t\t\t\t\t\talreadyTypedCount =\n\t\t\t\t\t\t\t\tzeroIndexedColumn - zeroIndexedWordStart;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// dont show suggestions if the user has typed something, but hasn't used the trigger character\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!validatedSuggestProvider.alwaysShowSuggestions &&\n\t\t\t\t\t\t\talreadyTypedCount > 0 &&\n\t\t\t\t\t\t\tvalidatedSuggestProvider.triggerCharacters?.indexOf(\n\t\t\t\t\t\t\t\tquery[zeroIndexedWordStart],\n\t\t\t\t\t\t\t) === -1\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn { suggestions: [] };\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tsuggestions: suggestionProvider\n\t\t\t\t\t\t\t\t.provideResults(query)\n\t\t\t\t\t\t\t\t.map((result): languages.CompletionItem => {\n\t\t\t\t\t\t\t\t\tlet label: string;\n\t\t\t\t\t\t\t\t\tlet rest:\n\t\t\t\t\t\t\t\t\t\t| Partial<languages.CompletionItem>\n\t\t\t\t\t\t\t\t\t\t| undefined;\n\t\t\t\t\t\t\t\t\tif (typeof result === \"string\") {\n\t\t\t\t\t\t\t\t\t\tlabel = result;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tlabel = result.label;\n\t\t\t\t\t\t\t\t\t\trest = result;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\tlabel,\n\t\t\t\t\t\t\t\t\t\tinsertText: label,\n\t\t\t\t\t\t\t\t\t\trange: Range.fromPositions(\n\t\t\t\t\t\t\t\t\t\t\tposition.delta(\n\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t-alreadyTypedCount,\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\tposition,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tsortText:\n\t\t\t\t\t\t\t\t\t\t\tvalidatedSuggestProvider.sortKey(\n\t\t\t\t\t\t\t\t\t\t\t\tlabel,\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tkind: languages.CompletionItemKind\n\t\t\t\t\t\t\t\t\t\t\t.Keyword,\n\t\t\t\t\t\t\t\t\t\t...rest,\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis.style(options.styleOverrides || {});\n\t}\n\n\tprotected getScopedContextKeyService(\n\t\t_contextKeyService: IContextKeyService,\n\t): IContextKeyService | undefined {\n\t\treturn undefined;\n\t}\n\n\tpublic updateAriaLabel(label: string): void {\n\t\tthis.inputWidget.updateOptions({ ariaLabel: label });\n\t}\n\n\tpublic setValue(val: string) {\n\t\tval = val.replace(/\\s/g, \" \");\n\t\tconst fullRange = this.inputModel.getFullModelRange();\n\t\tthis.inputWidget.executeEdits(\"suggestEnabledInput.setValue\", [\n\t\t\tEditOperation.replace(fullRange, val),\n\t\t]);\n\t\tthis.inputWidget.setScrollTop(0);\n\t\tthis.inputWidget.setPosition(new Position(1, val.length + 1));\n\t}\n\n\tpublic getValue(): string {\n\t\treturn this.inputWidget.getValue();\n\t}\n\n\tprivate style(styleOverrides: ISuggestEnabledInputStyleOverrides): void {\n\t\tthis.stylingContainer.style.backgroundColor = asCssVariable(\n\t\t\tstyleOverrides.inputBackground ?? inputBackground,\n\t\t);\n\t\tthis.stylingContainer.style.color = asCssVariable(\n\t\t\tstyleOverrides.inputForeground ?? inputForeground,\n\t\t);\n\t\tthis.placeholderText.style.color = asCssVariable(\n\t\t\tstyleOverrides.inputPlaceholderForeground ??\n\t\t\t\tinputPlaceholderForeground,\n\t\t);\n\t\tthis.stylingContainer.style.borderWidth = \"1px\";\n\t\tthis.stylingContainer.style.borderStyle = \"solid\";\n\t\tthis.stylingContainer.style.borderColor = asCssVariableWithDefault(\n\t\t\tstyleOverrides.inputBorder ?? inputBorder,\n\t\t\t\"transparent\",\n\t\t);\n\n\t\tconst cursor = this.stylingContainer.getElementsByClassName(\n\t\t\t\"cursor\",\n\t\t)[0] as HTMLDivElement;\n\t\tif (cursor) {\n\t\t\tcursor.style.backgroundColor = asCssVariable(\n\t\t\t\tstyleOverrides.inputForeground ?? inputForeground,\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic focus(selectAll?: boolean): void {\n\t\tthis.inputWidget.focus();\n\n\t\tif (selectAll && this.inputWidget.getValue()) {\n\t\t\tthis.selectAll();\n\t\t}\n\t}\n\n\tpublic onHide(): void {\n\t\tthis.inputWidget.onHide();\n\t}\n\n\tpublic layout(dimension: Dimension): void {\n\t\tthis.inputWidget.layout(dimension);\n\t\tthis.placeholderText.style.width = `${dimension.width - 2}px`;\n\t}\n\n\tprivate selectAll(): void {\n\t\tthis.inputWidget.setSelection(\n\t\t\tnew Range(1, 1, 1, this.getValue().length + 1),\n\t\t);\n\t}\n}\n\nexport interface ISuggestEnabledHistoryOptions {\n\tid: string;\n\tariaLabel: string;\n\tparent: HTMLElement;\n\tsuggestionProvider: SuggestResultsProvider;\n\tresourceHandle: string;\n\tsuggestOptions: SuggestEnabledInputOptions;\n\thistory: string[];\n}\n\nexport class SuggestEnabledInputWithHistory\n\textends SuggestEnabledInput\n\timplements IHistoryNavigationWidget\n{\n\tprotected readonly history: HistoryNavigator<string>;\n\n\tconstructor(\n\t\t{\n\t\t\tid,\n\t\t\tparent,\n\t\t\tariaLabel,\n\t\t\tsuggestionProvider,\n\t\t\tresourceHandle,\n\t\t\tsuggestOptions,\n\t\t\thistory,\n\t\t}: ISuggestEnabledHistoryOptions,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IModelService modelService: IModelService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper(\n\t\t\tid,\n\t\t\tparent,\n\t\t\tsuggestionProvider,\n\t\t\tariaLabel,\n\t\t\tresourceHandle,\n\t\t\tsuggestOptions,\n\t\t\tinstantiationService,\n\t\t\tmodelService,\n\t\t\tcontextKeyService,\n\t\t\tlanguageFeaturesService,\n\t\t\tconfigurationService,\n\t\t);\n\t\tthis.history = new HistoryNavigator<string>(history, 100);\n\t}\n\n\tpublic addToHistory(): void {\n\t\tconst value = this.getValue();\n\t\tif (value && value !== this.getCurrentValue()) {\n\t\t\tthis.history.add(value);\n\t\t}\n\t}\n\n\tpublic getHistory(): string[] {\n\t\treturn this.history.getHistory();\n\t}\n\n\tpublic showNextValue(): void {\n\t\tif (!this.history.has(this.getValue())) {\n\t\t\tthis.addToHistory();\n\t\t}\n\n\t\tlet next = this.getNextValue();\n\t\tif (next) {\n\t\t\tnext = next === this.getValue() ? this.getNextValue() : next;\n\t\t}\n\n\t\tthis.setValue(next ?? \"\");\n\t}\n\n\tpublic showPreviousValue(): void {\n\t\tif (!this.history.has(this.getValue())) {\n\t\t\tthis.addToHistory();\n\t\t}\n\n\t\tlet previous = this.getPreviousValue();\n\t\tif (previous) {\n\t\t\tprevious =\n\t\t\t\tprevious === this.getValue()\n\t\t\t\t\t? this.getPreviousValue()\n\t\t\t\t\t: previous;\n\t\t}\n\n\t\tif (previous) {\n\t\t\tthis.setValue(previous);\n\t\t\tthis.inputWidget.setPosition({ lineNumber: 0, column: 0 });\n\t\t}\n\t}\n\n\tpublic clearHistory(): void {\n\t\tthis.history.clear();\n\t}\n\n\tprivate getCurrentValue(): string | null {\n\t\tlet currentValue = this.history.current();\n\t\tif (!currentValue) {\n\t\t\tcurrentValue = this.history.last();\n\t\t\tthis.history.next();\n\t\t}\n\t\treturn currentValue;\n\t}\n\n\tprivate getPreviousValue(): string | null {\n\t\treturn this.history.previous() || this.history.first();\n\t}\n\n\tprivate getNextValue(): string | null {\n\t\treturn this.history.next();\n\t}\n}\n\nexport class ContextScopedSuggestEnabledInputWithHistory extends SuggestEnabledInputWithHistory {\n\tprivate historyContext!: IHistoryNavigationContext;\n\n\tconstructor(\n\t\toptions: ISuggestEnabledHistoryOptions,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IModelService modelService: IModelService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper(\n\t\t\toptions,\n\t\t\tinstantiationService,\n\t\t\tmodelService,\n\t\t\tcontextKeyService,\n\t\t\tlanguageFeaturesService,\n\t\t\tconfigurationService,\n\t\t);\n\n\t\tconst {\n\t\t\thistoryNavigationBackwardsEnablement,\n\t\t\thistoryNavigationForwardsEnablement,\n\t\t} = this.historyContext;\n\t\tthis._register(\n\t\t\tthis.inputWidget.onDidChangeCursorPosition(({ position }) => {\n\t\t\t\tconst viewModel = this.inputWidget._getViewModel()!;\n\t\t\t\tconst lastLineNumber = viewModel.getLineCount();\n\t\t\t\tconst lastLineCol = viewModel.getLineLength(lastLineNumber) + 1;\n\t\t\t\tconst viewPosition =\n\t\t\t\t\tviewModel.coordinatesConverter.convertModelPositionToViewPosition(\n\t\t\t\t\t\tposition,\n\t\t\t\t\t);\n\t\t\t\thistoryNavigationBackwardsEnablement.set(\n\t\t\t\t\tviewPosition.lineNumber === 1 && viewPosition.column === 1,\n\t\t\t\t);\n\t\t\t\thistoryNavigationForwardsEnablement.set(\n\t\t\t\t\tviewPosition.lineNumber === lastLineNumber &&\n\t\t\t\t\t\tviewPosition.column === lastLineCol,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\t}\n\n\tprotected override getScopedContextKeyService(\n\t\tcontextKeyService: IContextKeyService,\n\t) {\n\t\tconst scopedContextKeyService = this._register(\n\t\t\tcontextKeyService.createScoped(this.element),\n\t\t);\n\t\tthis.historyContext = this._register(\n\t\t\tregisterAndCreateHistoryNavigationContext(\n\t\t\t\tscopedContextKeyService,\n\t\t\t\tthis,\n\t\t\t),\n\t\t);\n\n\t\treturn scopedContextKeyService;\n\t}\n}\n\nsetupSimpleEditorSelectionStyling(\".suggest-input-container\");\n\nfunction getSuggestEnabledInputOptions(ariaLabel?: string): IEditorOptions {\n\treturn {\n\t\tfontSize: 13,\n\t\tlineHeight: 20,\n\t\twordWrap: \"off\",\n\t\tscrollbar: { vertical: \"hidden\" },\n\t\troundedSelection: false,\n\t\tguides: {\n\t\t\tindentation: false,\n\t\t},\n\t\tcursorWidth: 1,\n\t\tfontFamily: DEFAULT_FONT_FAMILY,\n\t\tariaLabel: ariaLabel || \"\",\n\t\tsnippetSuggestions: \"none\",\n\t\tsuggest: { filterGraceful: false, showIcons: false },\n\t\tautoClosingBrackets: \"never\",\n\t};\n}\n"],
  "mappings": "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",
  "names": ["$"]
}
