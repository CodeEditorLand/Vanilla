{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/codeEditor/browser/suggestEnabledInput/suggestEnabledInput.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { $, Dimension, append } from '../../../../../base/browser/dom.js';\nimport { DEFAULT_FONT_FAMILY } from '../../../../../base/browser/fonts.js';\nimport { IHistoryNavigationWidget } from '../../../../../base/browser/history.js';\nimport { Widget } from '../../../../../base/browser/ui/widget.js';\nimport { Emitter, Event } from '../../../../../base/common/event.js';\nimport { HistoryNavigator } from '../../../../../base/common/history.js';\nimport { KeyCode } from '../../../../../base/common/keyCodes.js';\nimport { mixin } from '../../../../../base/common/objects.js';\nimport { isMacintosh } from '../../../../../base/common/platform.js';\nimport { URI as uri } from '../../../../../base/common/uri.js';\nimport './suggestEnabledInput.css';\nimport { IEditorConstructionOptions } from '../../../../../editor/browser/config/editorConfiguration.js';\nimport { EditorExtensionsRegistry } from '../../../../../editor/browser/editorExtensions.js';\nimport { CodeEditorWidget } from '../../../../../editor/browser/widget/codeEditor/codeEditorWidget.js';\nimport { IEditorOptions } from '../../../../../editor/common/config/editorOptions.js';\nimport { EditOperation } from '../../../../../editor/common/core/editOperation.js';\nimport { Position } from '../../../../../editor/common/core/position.js';\nimport { Range } from '../../../../../editor/common/core/range.js';\nimport { ensureValidWordDefinition, getWordAtText } from '../../../../../editor/common/core/wordHelper.js';\nimport * as languages from '../../../../../editor/common/languages.js';\nimport { ITextModel } from '../../../../../editor/common/model.js';\nimport { ILanguageFeaturesService } from '../../../../../editor/common/services/languageFeatures.js';\nimport { IModelService } from '../../../../../editor/common/services/model.js';\nimport { ContextMenuController } from '../../../../../editor/contrib/contextmenu/browser/contextmenu.js';\nimport { SnippetController2 } from '../../../../../editor/contrib/snippet/browser/snippetController2.js';\nimport { SuggestController } from '../../../../../editor/contrib/suggest/browser/suggestController.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { IContextKey, IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IHistoryNavigationContext, registerAndCreateHistoryNavigationContext } from '../../../../../platform/history/browser/contextScopedHistoryWidget.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../../../platform/instantiation/common/serviceCollection.js';\nimport { ColorIdentifier, asCssVariable, asCssVariableWithDefault, inputBackground, inputBorder, inputForeground, inputPlaceholderForeground } from '../../../../../platform/theme/common/colorRegistry.js';\nimport { MenuPreventer } from '../menuPreventer.js';\nimport { SelectionClipboardContributionID } from '../selectionClipboard.js';\nimport { getSimpleEditorOptions, setupSimpleEditorSelectionStyling } from '../simpleEditorOptions.js';\n\nexport interface SuggestResultsProvider {\n\t/**\n\t * Provider function for suggestion results.\n\t *\n\t * @param query the full text of the input.\n\t */\n\tprovideResults: (query: string) => (Partial<languages.CompletionItem> & ({ label: string }) | string)[];\n\n\t/**\n\t * Trigger characters for this input. Suggestions will appear when one of these is typed,\n\t * or upon `ctrl+space` triggering at a word boundary.\n\t *\n\t * Defaults to the empty array.\n\t */\n\ttriggerCharacters?: string[];\n\n\t/**\n\t * Optional regular expression that describes what a word is\n\t *\n\t * Defaults to space separated words.\n\t */\n\twordDefinition?: RegExp;\n\n\t/**\n\t * Show suggestions even if the trigger character is not present.\n\t *\n\t * Defaults to false.\n\t */\n\talwaysShowSuggestions?: boolean;\n\n\t/**\n\t * Defines the sorting function used when showing results.\n\t *\n\t * Defaults to the identity function.\n\t */\n\tsortKey?: (result: string) => string;\n}\n\ninterface SuggestEnabledInputOptions {\n\t/**\n\t * The text to show when no input is present.\n\t *\n\t * Defaults to the empty string.\n\t */\n\tplaceholderText?: string;\n\n\t/**\n\t * Initial value to be shown\n\t */\n\tvalue?: string;\n\n\t/**\n\t * Context key tracking the focus state of this element\n\t */\n\tfocusContextKey?: IContextKey<boolean>;\n\n\t/**\n\t * Place overflow widgets inside an external DOM node.\n\t * Defaults to an internal DOM node.\n\t */\n\toverflowWidgetsDomNode?: HTMLElement;\n\n\t/**\n\t * Override the default styling of the input.\n\t */\n\tstyleOverrides?: ISuggestEnabledInputStyleOverrides;\n}\n\nexport interface ISuggestEnabledInputStyleOverrides {\n\tinputBackground?: ColorIdentifier;\n\tinputForeground?: ColorIdentifier;\n\tinputBorder?: ColorIdentifier;\n\tinputPlaceholderForeground?: ColorIdentifier;\n}\n\nexport class SuggestEnabledInput extends Widget {\n\n\tprivate readonly _onShouldFocusResults = new Emitter<void>();\n\treadonly onShouldFocusResults: Event<void> = this._onShouldFocusResults.event;\n\n\tprivate readonly _onInputDidChange = new Emitter<string | undefined>();\n\treadonly onInputDidChange: Event<string | undefined> = this._onInputDidChange.event;\n\n\tprivate readonly _onDidFocus = this._register(new Emitter<void>());\n\treadonly onDidFocus = this._onDidFocus.event;\n\n\tprivate readonly _onDidBlur = this._register(new Emitter<void>());\n\treadonly onDidBlur = this._onDidBlur.event;\n\n\treadonly inputWidget: CodeEditorWidget;\n\tprivate readonly inputModel: ITextModel;\n\tprotected stylingContainer: HTMLDivElement;\n\treadonly element: HTMLElement;\n\tprivate placeholderText: HTMLDivElement;\n\n\tconstructor(\n\t\tid: string,\n\t\tparent: HTMLElement,\n\t\tsuggestionProvider: SuggestResultsProvider,\n\t\tariaLabel: string,\n\t\tresourceHandle: string,\n\t\toptions: SuggestEnabledInputOptions,\n\t\t@IInstantiationService defaultInstantiationService: IInstantiationService,\n\t\t@IModelService modelService: IModelService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\n\t\tthis.stylingContainer = append(parent, $('.suggest-input-container'));\n\t\tthis.element = parent;\n\t\tthis.placeholderText = append(this.stylingContainer, $('.suggest-input-placeholder', undefined, options.placeholderText || ''));\n\n\t\tconst editorOptions: IEditorConstructionOptions = mixin(\n\t\t\tgetSimpleEditorOptions(configurationService),\n\t\t\tgetSuggestEnabledInputOptions(ariaLabel));\n\t\teditorOptions.overflowWidgetsDomNode = options.overflowWidgetsDomNode;\n\n\t\tconst scopedContextKeyService = this.getScopedContextKeyService(contextKeyService);\n\n\t\tconst instantiationService = scopedContextKeyService\n\t\t\t? this._register(defaultInstantiationService.createChild(new ServiceCollection([IContextKeyService, scopedContextKeyService])))\n\t\t\t: defaultInstantiationService;\n\n\t\tthis.inputWidget = this._register(instantiationService.createInstance(CodeEditorWidget, this.stylingContainer,\n\t\t\teditorOptions,\n\t\t\t{\n\t\t\t\tcontributions: EditorExtensionsRegistry.getSomeEditorContributions([\n\t\t\t\t\tSuggestController.ID,\n\t\t\t\t\tSnippetController2.ID,\n\t\t\t\t\tContextMenuController.ID,\n\t\t\t\t\tMenuPreventer.ID,\n\t\t\t\t\tSelectionClipboardContributionID,\n\t\t\t\t]),\n\t\t\t\tisSimpleWidget: true,\n\t\t\t}));\n\n\t\tthis._register(configurationService.onDidChangeConfiguration((e) => {\n\t\t\tif (e.affectsConfiguration('editor.accessibilitySupport') ||\n\t\t\t\te.affectsConfiguration('editor.cursorBlinking')) {\n\t\t\t\tconst accessibilitySupport = configurationService.getValue<'auto' | 'off' | 'on'>('editor.accessibilitySupport');\n\t\t\t\tconst cursorBlinking = configurationService.getValue<'blink' | 'smooth' | 'phase' | 'expand' | 'solid'>('editor.cursorBlinking');\n\t\t\t\tthis.inputWidget.updateOptions({\n\t\t\t\t\taccessibilitySupport,\n\t\t\t\t\tcursorBlinking\n\t\t\t\t});\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.inputWidget.onDidFocusEditorText(() => this._onDidFocus.fire()));\n\t\tthis._register(this.inputWidget.onDidBlurEditorText(() => this._onDidBlur.fire()));\n\n\t\tconst scopeHandle = uri.parse(resourceHandle);\n\t\tthis.inputModel = modelService.createModel('', null, scopeHandle, true);\n\t\tthis._register(this.inputModel);\n\t\tthis.inputWidget.setModel(this.inputModel);\n\n\t\tthis._register(this.inputWidget.onDidPaste(() => this.setValue(this.getValue()))); // setter cleanses\n\n\t\tthis._register((this.inputWidget.onDidFocusEditorText(() => {\n\t\t\tif (options.focusContextKey) { options.focusContextKey.set(true); }\n\t\t\tthis.stylingContainer.classList.add('synthetic-focus');\n\t\t})));\n\t\tthis._register((this.inputWidget.onDidBlurEditorText(() => {\n\t\t\tif (options.focusContextKey) { options.focusContextKey.set(false); }\n\t\t\tthis.stylingContainer.classList.remove('synthetic-focus');\n\t\t})));\n\n\t\tthis._register(Event.chain(this.inputWidget.onKeyDown, $ => $.filter(e => e.keyCode === KeyCode.Enter))(e => { e.preventDefault(); /** Do nothing. Enter causes new line which is not expected. */ }, this));\n\t\tthis._register(Event.chain(this.inputWidget.onKeyDown, $ => $.filter(e => e.keyCode === KeyCode.DownArrow && (isMacintosh ? e.metaKey : e.ctrlKey)))(() => this._onShouldFocusResults.fire(), this));\n\n\t\tlet preexistingContent = this.getValue();\n\t\tconst inputWidgetModel = this.inputWidget.getModel();\n\t\tif (inputWidgetModel) {\n\t\t\tthis._register(inputWidgetModel.onDidChangeContent(() => {\n\t\t\t\tconst content = this.getValue();\n\t\t\t\tthis.placeholderText.style.visibility = content ? 'hidden' : 'visible';\n\t\t\t\tif (preexistingContent.trim() === content.trim()) { return; }\n\t\t\t\tthis._onInputDidChange.fire(undefined);\n\t\t\t\tpreexistingContent = content;\n\t\t\t}));\n\t\t}\n\n\t\tconst validatedSuggestProvider = {\n\t\t\tprovideResults: suggestionProvider.provideResults,\n\t\t\tsortKey: suggestionProvider.sortKey || (a => a),\n\t\t\ttriggerCharacters: suggestionProvider.triggerCharacters || [],\n\t\t\twordDefinition: suggestionProvider.wordDefinition ? ensureValidWordDefinition(suggestionProvider.wordDefinition) : undefined,\n\t\t\talwaysShowSuggestions: !!suggestionProvider.alwaysShowSuggestions,\n\t\t};\n\n\t\tthis.setValue(options.value || '');\n\n\t\tthis._register(languageFeaturesService.completionProvider.register({ scheme: scopeHandle.scheme, pattern: '**/' + scopeHandle.path, hasAccessToAllModels: true }, {\n\t\t\t_debugDisplayName: `suggestEnabledInput/${id}`,\n\t\t\ttriggerCharacters: validatedSuggestProvider.triggerCharacters,\n\t\t\tprovideCompletionItems: (model: ITextModel, position: Position, _context: languages.CompletionContext) => {\n\t\t\t\tconst query = model.getValue();\n\n\t\t\t\tconst zeroIndexedColumn = position.column - 1;\n\t\t\t\tlet alreadyTypedCount = 0, zeroIndexedWordStart = 0;\n\n\t\t\t\tif (validatedSuggestProvider.wordDefinition) {\n\t\t\t\t\tconst wordAtText = getWordAtText(position.column, validatedSuggestProvider.wordDefinition, query, 0);\n\t\t\t\t\talreadyTypedCount = wordAtText?.word.length ?? 0;\n\t\t\t\t\tzeroIndexedWordStart = wordAtText ? wordAtText.startColumn - 1 : 0;\n\t\t\t\t} else {\n\t\t\t\t\tzeroIndexedWordStart = query.lastIndexOf(' ', zeroIndexedColumn - 1) + 1;\n\t\t\t\t\talreadyTypedCount = zeroIndexedColumn - zeroIndexedWordStart;\n\t\t\t\t}\n\n\t\t\t\t// dont show suggestions if the user has typed something, but hasn't used the trigger character\n\t\t\t\tif (!validatedSuggestProvider.alwaysShowSuggestions && alreadyTypedCount > 0 && validatedSuggestProvider.triggerCharacters?.indexOf(query[zeroIndexedWordStart]) === -1) {\n\t\t\t\t\treturn { suggestions: [] };\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: suggestionProvider.provideResults(query).map((result): languages.CompletionItem => {\n\t\t\t\t\t\tlet label: string;\n\t\t\t\t\t\tlet rest: Partial<languages.CompletionItem> | undefined;\n\t\t\t\t\t\tif (typeof result === 'string') {\n\t\t\t\t\t\t\tlabel = result;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlabel = result.label;\n\t\t\t\t\t\t\trest = result;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tlabel,\n\t\t\t\t\t\t\tinsertText: label,\n\t\t\t\t\t\t\trange: Range.fromPositions(position.delta(0, -alreadyTypedCount), position),\n\t\t\t\t\t\t\tsortText: validatedSuggestProvider.sortKey(label),\n\t\t\t\t\t\t\tkind: languages.CompletionItemKind.Keyword,\n\t\t\t\t\t\t\t...rest\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\tthis.style(options.styleOverrides || {});\n\t}\n\n\tprotected getScopedContextKeyService(_contextKeyService: IContextKeyService): IContextKeyService | undefined {\n\t\treturn undefined;\n\t}\n\n\tpublic updateAriaLabel(label: string): void {\n\t\tthis.inputWidget.updateOptions({ ariaLabel: label });\n\t}\n\n\tpublic setValue(val: string) {\n\t\tval = val.replace(/\\s/g, ' ');\n\t\tconst fullRange = this.inputModel.getFullModelRange();\n\t\tthis.inputWidget.executeEdits('suggestEnabledInput.setValue', [EditOperation.replace(fullRange, val)]);\n\t\tthis.inputWidget.setScrollTop(0);\n\t\tthis.inputWidget.setPosition(new Position(1, val.length + 1));\n\t}\n\n\tpublic getValue(): string {\n\t\treturn this.inputWidget.getValue();\n\t}\n\n\tprivate style(styleOverrides: ISuggestEnabledInputStyleOverrides): void {\n\t\tthis.stylingContainer.style.backgroundColor = asCssVariable(styleOverrides.inputBackground ?? inputBackground);\n\t\tthis.stylingContainer.style.color = asCssVariable(styleOverrides.inputForeground ?? inputForeground);\n\t\tthis.placeholderText.style.color = asCssVariable(styleOverrides.inputPlaceholderForeground ?? inputPlaceholderForeground);\n\t\tthis.stylingContainer.style.borderWidth = '1px';\n\t\tthis.stylingContainer.style.borderStyle = 'solid';\n\t\tthis.stylingContainer.style.borderColor = asCssVariableWithDefault(styleOverrides.inputBorder ?? inputBorder, 'transparent');\n\n\t\tconst cursor = this.stylingContainer.getElementsByClassName('cursor')[0] as HTMLDivElement;\n\t\tif (cursor) {\n\t\t\tcursor.style.backgroundColor = asCssVariable(styleOverrides.inputForeground ?? inputForeground);\n\t\t}\n\t}\n\n\tpublic focus(selectAll?: boolean): void {\n\t\tthis.inputWidget.focus();\n\n\t\tif (selectAll && this.inputWidget.getValue()) {\n\t\t\tthis.selectAll();\n\t\t}\n\t}\n\n\tpublic onHide(): void {\n\t\tthis.inputWidget.onHide();\n\t}\n\n\tpublic layout(dimension: Dimension): void {\n\t\tthis.inputWidget.layout(dimension);\n\t\tthis.placeholderText.style.width = `${dimension.width - 2}px`;\n\t}\n\n\tprivate selectAll(): void {\n\t\tthis.inputWidget.setSelection(new Range(1, 1, 1, this.getValue().length + 1));\n\t}\n}\n\nexport interface ISuggestEnabledHistoryOptions {\n\tid: string;\n\tariaLabel: string;\n\tparent: HTMLElement;\n\tsuggestionProvider: SuggestResultsProvider;\n\tresourceHandle: string;\n\tsuggestOptions: SuggestEnabledInputOptions;\n\thistory: string[];\n}\n\nexport class SuggestEnabledInputWithHistory extends SuggestEnabledInput implements IHistoryNavigationWidget {\n\tprotected readonly history: HistoryNavigator<string>;\n\n\tconstructor(\n\t\t{ id, parent, ariaLabel, suggestionProvider, resourceHandle, suggestOptions, history }: ISuggestEnabledHistoryOptions,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IModelService modelService: IModelService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tsuper(id, parent, suggestionProvider, ariaLabel, resourceHandle, suggestOptions, instantiationService, modelService, contextKeyService, languageFeaturesService, configurationService);\n\t\tthis.history = new HistoryNavigator<string>(history, 100);\n\t}\n\n\tpublic addToHistory(): void {\n\t\tconst value = this.getValue();\n\t\tif (value && value !== this.getCurrentValue()) {\n\t\t\tthis.history.add(value);\n\t\t}\n\t}\n\n\tpublic getHistory(): string[] {\n\t\treturn this.history.getHistory();\n\t}\n\n\tpublic showNextValue(): void {\n\t\tif (!this.history.has(this.getValue())) {\n\t\t\tthis.addToHistory();\n\t\t}\n\n\t\tlet next = this.getNextValue();\n\t\tif (next) {\n\t\t\tnext = next === this.getValue() ? this.getNextValue() : next;\n\t\t}\n\n\t\tthis.setValue(next ?? '');\n\t}\n\n\tpublic showPreviousValue(): void {\n\t\tif (!this.history.has(this.getValue())) {\n\t\t\tthis.addToHistory();\n\t\t}\n\n\t\tlet previous = this.getPreviousValue();\n\t\tif (previous) {\n\t\t\tprevious = previous === this.getValue() ? this.getPreviousValue() : previous;\n\t\t}\n\n\t\tif (previous) {\n\t\t\tthis.setValue(previous);\n\t\t\tthis.inputWidget.setPosition({ lineNumber: 0, column: 0 });\n\t\t}\n\t}\n\n\tpublic clearHistory(): void {\n\t\tthis.history.clear();\n\t}\n\n\tprivate getCurrentValue(): string | null {\n\t\tlet currentValue = this.history.current();\n\t\tif (!currentValue) {\n\t\t\tcurrentValue = this.history.last();\n\t\t\tthis.history.next();\n\t\t}\n\t\treturn currentValue;\n\t}\n\n\tprivate getPreviousValue(): string | null {\n\t\treturn this.history.previous() || this.history.first();\n\t}\n\n\tprivate getNextValue(): string | null {\n\t\treturn this.history.next();\n\t}\n}\n\nexport class ContextScopedSuggestEnabledInputWithHistory extends SuggestEnabledInputWithHistory {\n\tprivate historyContext!: IHistoryNavigationContext;\n\n\tconstructor(\n\t\toptions: ISuggestEnabledHistoryOptions,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IModelService modelService: IModelService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tsuper(options, instantiationService, modelService, contextKeyService, languageFeaturesService, configurationService);\n\n\t\tconst { historyNavigationBackwardsEnablement, historyNavigationForwardsEnablement } = this.historyContext;\n\t\tthis._register(this.inputWidget.onDidChangeCursorPosition(({ position }) => {\n\t\t\tconst viewModel = this.inputWidget._getViewModel()!;\n\t\t\tconst lastLineNumber = viewModel.getLineCount();\n\t\t\tconst lastLineCol = viewModel.getLineLength(lastLineNumber) + 1;\n\t\t\tconst viewPosition = viewModel.coordinatesConverter.convertModelPositionToViewPosition(position);\n\t\t\thistoryNavigationBackwardsEnablement.set(viewPosition.lineNumber === 1 && viewPosition.column === 1);\n\t\t\thistoryNavigationForwardsEnablement.set(viewPosition.lineNumber === lastLineNumber && viewPosition.column === lastLineCol);\n\t\t}));\n\t}\n\n\tprotected override getScopedContextKeyService(contextKeyService: IContextKeyService) {\n\t\tconst scopedContextKeyService = this._register(contextKeyService.createScoped(this.element));\n\t\tthis.historyContext = this._register(registerAndCreateHistoryNavigationContext(\n\t\t\tscopedContextKeyService,\n\t\t\tthis,\n\t\t));\n\n\t\treturn scopedContextKeyService;\n\t}\n}\n\nsetupSimpleEditorSelectionStyling('.suggest-input-container');\n\nfunction getSuggestEnabledInputOptions(ariaLabel?: string): IEditorOptions {\n\treturn {\n\t\tfontSize: 13,\n\t\tlineHeight: 20,\n\t\twordWrap: 'off',\n\t\tscrollbar: { vertical: 'hidden', },\n\t\troundedSelection: false,\n\t\tguides: {\n\t\t\tindentation: false\n\t\t},\n\t\tcursorWidth: 1,\n\t\tfontFamily: DEFAULT_FONT_FAMILY,\n\t\tariaLabel: ariaLabel || '',\n\t\tsnippetSuggestions: 'none',\n\t\tsuggest: { filterGraceful: false, showIcons: false },\n\t\tautoClosingBrackets: 'never'\n\t};\n}\n"],
  "mappings": "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",
  "names": ["$"]
}
