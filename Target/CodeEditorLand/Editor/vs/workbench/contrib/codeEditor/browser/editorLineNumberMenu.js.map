{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/codeEditor/browser/editorLineNumberMenu.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IAction, Separator } from '../../../../base/common/actions.js';\nimport { Disposable, IDisposable } from '../../../../base/common/lifecycle.js';\nimport { isMacintosh } from '../../../../base/common/platform.js';\nimport { ICodeEditor, IEditorMouseEvent, MouseTargetType } from '../../../../editor/browser/editorBrowser.js';\nimport { registerEditorContribution, EditorContributionInstantiation } from '../../../../editor/browser/editorExtensions.js';\nimport { IEditorContribution } from '../../../../editor/common/editorCommon.js';\nimport { IMenuService, MenuId, MenuItemAction, SubmenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { TextEditorSelectionSource } from '../../../../platform/editor/common/editor.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\n\nexport interface IGutterActionsGenerator {\n\t(context: { lineNumber: number; editor: ICodeEditor; accessor: ServicesAccessor }, result: { push(action: IAction, group?: string): void }): void;\n}\n\nexport class GutterActionsRegistryImpl {\n\tprivate _registeredGutterActionsGenerators: Set<IGutterActionsGenerator> = new Set();\n\n\t/**\n\t *\n\t * This exists solely to allow the debug and test contributions to add actions to the gutter context menu\n\t * which cannot be trivially expressed using when clauses and therefore cannot be statically registered.\n\t * If you want an action to show up in the gutter context menu, you should generally use MenuId.EditorLineNumberMenu instead.\n\t */\n\tpublic registerGutterActionsGenerator(gutterActionsGenerator: IGutterActionsGenerator): IDisposable {\n\t\tthis._registeredGutterActionsGenerators.add(gutterActionsGenerator);\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tthis._registeredGutterActionsGenerators.delete(gutterActionsGenerator);\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic getGutterActionsGenerators(): IGutterActionsGenerator[] {\n\t\treturn Array.from(this._registeredGutterActionsGenerators.values());\n\t}\n}\n\nRegistry.add('gutterActionsRegistry', new GutterActionsRegistryImpl());\nexport const GutterActionsRegistry: GutterActionsRegistryImpl = Registry.as('gutterActionsRegistry');\n\nexport class EditorLineNumberContextMenu extends Disposable implements IEditorContribution {\n\tstatic readonly ID = 'workbench.contrib.editorLineNumberContextMenu';\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(this.editor.onMouseDown((e: IEditorMouseEvent) => this.doShow(e, false)));\n\n\t}\n\n\tpublic show(e: IEditorMouseEvent) {\n\t\tthis.doShow(e, true);\n\t}\n\n\tprivate doShow(e: IEditorMouseEvent, force: boolean) {\n\t\tconst model = this.editor.getModel();\n\n\t\t// on macOS ctrl+click is interpreted as right click\n\t\tif (!e.event.rightButton && !(isMacintosh && e.event.leftButton && e.event.ctrlKey) && !force\n\t\t\t|| e.target.type !== MouseTargetType.GUTTER_LINE_NUMBERS && e.target.type !== MouseTargetType.GUTTER_GLYPH_MARGIN\n\t\t\t|| !e.target.position || !model\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst lineNumber = e.target.position.lineNumber;\n\n\t\tconst contextKeyService = this.contextKeyService.createOverlay([['editorLineNumber', lineNumber]]);\n\t\tconst menu = this.menuService.createMenu(MenuId.EditorLineNumberContext, contextKeyService);\n\n\t\tconst allActions: [string, (IAction | MenuItemAction | SubmenuItemAction)[]][] = [];\n\n\t\tthis.instantiationService.invokeFunction(accessor => {\n\t\t\tfor (const generator of GutterActionsRegistry.getGutterActionsGenerators()) {\n\t\t\t\tconst collectedActions = new Map<string, IAction[]>();\n\t\t\t\tgenerator({ lineNumber, editor: this.editor, accessor }, {\n\t\t\t\t\tpush: (action: IAction, group: string = 'navigation') => {\n\t\t\t\t\t\tconst actions = (collectedActions.get(group) ?? []);\n\t\t\t\t\t\tactions.push(action);\n\t\t\t\t\t\tcollectedActions.set(group, actions);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tfor (const [group, actions] of collectedActions.entries()) {\n\t\t\t\t\tallActions.push([group, actions]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tallActions.sort((a, b) => a[0].localeCompare(b[0]));\n\n\t\t\tconst menuActions = menu.getActions({ arg: { lineNumber, uri: model.uri }, shouldForwardArgs: true });\n\t\t\tallActions.push(...menuActions);\n\n\t\t\t// if the current editor selections do not contain the target line number,\n\t\t\t// set the selection to the clicked line number\n\t\t\tif (e.target.type === MouseTargetType.GUTTER_LINE_NUMBERS) {\n\t\t\t\tconst currentSelections = this.editor.getSelections();\n\t\t\t\tconst lineRange = {\n\t\t\t\t\tstartLineNumber: lineNumber,\n\t\t\t\t\tendLineNumber: lineNumber,\n\t\t\t\t\tstartColumn: 1,\n\t\t\t\t\tendColumn: model.getLineLength(lineNumber) + 1\n\t\t\t\t};\n\t\t\t\tconst containsSelection = currentSelections?.some(selection => !selection.isEmpty() && selection.intersectRanges(lineRange) !== null);\n\t\t\t\tif (!containsSelection) {\n\t\t\t\t\tthis.editor.setSelection(lineRange, TextEditorSelectionSource.PROGRAMMATIC);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.contextMenuService.showContextMenu({\n\t\t\t\tgetAnchor: () => e.event,\n\t\t\t\tgetActions: () => Separator.join(...allActions.map((a) => a[1])),\n\t\t\t\tonHide: () => menu.dispose(),\n\t\t\t});\n\t\t});\n\t}\n}\n\nregisterEditorContribution(EditorLineNumberContextMenu.ID, EditorLineNumberContextMenu, EditorContributionInstantiation.AfterFirstRender);\n"],
  "mappings": "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",
  "names": []
}
