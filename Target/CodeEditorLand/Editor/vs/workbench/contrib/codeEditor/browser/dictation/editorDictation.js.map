{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/codeEditor/browser/dictation/editorDictation.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./editorDictation.css\";\nimport type { IDimension } from \"../../../../../base/browser/dom.js\";\nimport { ActionBar } from \"../../../../../base/browser/ui/actionbar/actionbar.js\";\nimport { toAction } from \"../../../../../base/common/actions.js\";\nimport { CancellationTokenSource } from \"../../../../../base/common/cancellation.js\";\nimport { Codicon } from \"../../../../../base/common/codicons.js\";\nimport { KeyCode, KeyMod } from \"../../../../../base/common/keyCodes.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\tMutableDisposable,\n\ttoDisposable,\n} from \"../../../../../base/common/lifecycle.js\";\nimport { isWindows } from \"../../../../../base/common/platform.js\";\nimport { ThemeIcon } from \"../../../../../base/common/themables.js\";\nimport { assertIsDefined } from \"../../../../../base/common/types.js\";\nimport {\n\tContentWidgetPositionPreference,\n\ttype ICodeEditor,\n\ttype IContentWidget,\n\ttype IContentWidgetPosition,\n} from \"../../../../../editor/browser/editorBrowser.js\";\nimport {\n\tEditorAction2,\n\tEditorContributionInstantiation,\n\tregisterEditorContribution,\n} from \"../../../../../editor/browser/editorExtensions.js\";\nimport { EditorOption } from \"../../../../../editor/common/config/editorOptions.js\";\nimport { EditOperation } from \"../../../../../editor/common/core/editOperation.js\";\nimport { Position } from \"../../../../../editor/common/core/position.js\";\nimport { Range } from \"../../../../../editor/common/core/range.js\";\nimport { Selection } from \"../../../../../editor/common/core/selection.js\";\nimport type { IEditorContribution } from \"../../../../../editor/common/editorCommon.js\";\nimport { EditorContextKeys } from \"../../../../../editor/common/editorContextKeys.js\";\nimport { localize, localize2 } from \"../../../../../nls.js\";\nimport { registerAction2 } from \"../../../../../platform/actions/common/actions.js\";\nimport {\n\tContextKeyExpr,\n\tIContextKeyService,\n\tRawContextKey,\n} from \"../../../../../platform/contextkey/common/contextkey.js\";\nimport type { ServicesAccessor } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../../platform/keybinding/common/keybinding.js\";\nimport { KeybindingWeight } from \"../../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport {\n\tHasSpeechProvider,\n\tISpeechService,\n\tSpeechToTextInProgress,\n\tSpeechToTextStatus,\n} from \"../../../speech/common/speechService.js\";\n\nconst EDITOR_DICTATION_IN_PROGRESS = new RawContextKey<boolean>(\n\t\"editorDictation.inProgress\",\n\tfalse,\n);\nconst VOICE_CATEGORY = localize2(\"voiceCategory\", \"Voice\");\n\nexport class EditorDictationStartAction extends EditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.editorDictation.start\",\n\t\t\ttitle: localize2(\"startDictation\", \"Start Dictation in Editor\"),\n\t\t\tcategory: VOICE_CATEGORY,\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tHasSpeechProvider,\n\t\t\t\tSpeechToTextInProgress.toNegated(), // disable when any speech-to-text is in progress\n\t\t\t\tEditorContextKeys.readOnly.toNegated(), // disable in read-only editors\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyV,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tsecondary: isWindows\n\t\t\t\t\t? [KeyMod.Alt | KeyCode.Backquote]\n\t\t\t\t\t: undefined,\n\t\t\t},\n\t\t});\n\t}\n\n\toverride runEditorCommand(\n\t\taccessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t): void {\n\t\tconst keybindingService = accessor.get(IKeybindingService);\n\n\t\tconst holdMode = keybindingService.enableKeybindingHoldMode(\n\t\t\tthis.desc.id,\n\t\t);\n\t\tif (holdMode) {\n\t\t\tlet shouldCallStop = false;\n\n\t\t\tconst handle = setTimeout(() => {\n\t\t\t\tshouldCallStop = true;\n\t\t\t}, 500);\n\n\t\t\tholdMode.finally(() => {\n\t\t\t\tclearTimeout(handle);\n\n\t\t\t\tif (shouldCallStop) {\n\t\t\t\t\tEditorDictation.get(editor)?.stop();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tEditorDictation.get(editor)?.start();\n\t}\n}\n\nexport class EditorDictationStopAction extends EditorAction2 {\n\tstatic readonly ID = \"workbench.action.editorDictation.stop\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: EditorDictationStopAction.ID,\n\t\t\ttitle: localize2(\"stopDictation\", \"Stop Dictation in Editor\"),\n\t\t\tcategory: VOICE_CATEGORY,\n\t\t\tprecondition: EDITOR_DICTATION_IN_PROGRESS,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib + 100,\n\t\t\t},\n\t\t});\n\t}\n\n\toverride runEditorCommand(\n\t\t_accessor: ServicesAccessor,\n\t\teditor: ICodeEditor,\n\t): void {\n\t\tEditorDictation.get(editor)?.stop();\n\t}\n}\n\nexport class DictationWidget extends Disposable implements IContentWidget {\n\treadonly suppressMouseDown = true;\n\treadonly allowEditorOverflow = true;\n\n\tprivate readonly domNode = document.createElement(\"div\");\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\tkeybindingService: IKeybindingService,\n\t) {\n\t\tsuper();\n\n\t\tconst actionBar = this._register(new ActionBar(this.domNode));\n\t\tconst stopActionKeybinding = keybindingService\n\t\t\t.lookupKeybinding(EditorDictationStopAction.ID)\n\t\t\t?.getLabel();\n\t\tactionBar.push(\n\t\t\ttoAction({\n\t\t\t\tid: EditorDictationStopAction.ID,\n\t\t\t\tlabel: stopActionKeybinding\n\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\"stopDictationShort1\",\n\t\t\t\t\t\t\t\"Stop Dictation ({0})\",\n\t\t\t\t\t\t\tstopActionKeybinding,\n\t\t\t\t\t\t)\n\t\t\t\t\t: localize(\"stopDictationShort2\", \"Stop Dictation\"),\n\t\t\t\tclass: ThemeIcon.asClassName(Codicon.micFilled),\n\t\t\t\trun: () => EditorDictation.get(editor)?.stop(),\n\t\t\t}),\n\t\t\t{ icon: true, label: false, keybinding: stopActionKeybinding },\n\t\t);\n\n\t\tthis.domNode.classList.add(\"editor-dictation-widget\");\n\t\tthis.domNode.appendChild(actionBar.domNode);\n\t}\n\n\tgetId(): string {\n\t\treturn \"editorDictation\";\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this.domNode;\n\t}\n\n\tgetPosition(): IContentWidgetPosition | null {\n\t\tif (!this.editor.hasModel()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst selection = this.editor.getSelection();\n\n\t\treturn {\n\t\t\tposition: selection.getPosition(),\n\t\t\tpreference: [\n\t\t\t\tselection.getPosition().equals(selection.getStartPosition())\n\t\t\t\t\t? ContentWidgetPositionPreference.ABOVE\n\t\t\t\t\t: ContentWidgetPositionPreference.BELOW,\n\t\t\t\tContentWidgetPositionPreference.EXACT,\n\t\t\t],\n\t\t};\n\t}\n\n\tbeforeRender(): IDimension | null {\n\t\tconst lineHeight = this.editor.getOption(EditorOption.lineHeight);\n\t\tconst width = this.editor.getLayoutInfo().contentWidth * 0.7;\n\n\t\tthis.domNode.style.setProperty(\n\t\t\t\"--vscode-editor-dictation-widget-height\",\n\t\t\t`${lineHeight}px`,\n\t\t);\n\t\tthis.domNode.style.setProperty(\n\t\t\t\"--vscode-editor-dictation-widget-width\",\n\t\t\t`${width}px`,\n\t\t);\n\n\t\treturn null;\n\t}\n\n\tshow() {\n\t\tthis.editor.addContentWidget(this);\n\t}\n\n\tlayout(): void {\n\t\tthis.editor.layoutContentWidget(this);\n\t}\n\n\tactive(): void {\n\t\tthis.domNode.classList.add(\"recording\");\n\t}\n\n\thide() {\n\t\tthis.domNode.classList.remove(\"recording\");\n\t\tthis.editor.removeContentWidget(this);\n\t}\n}\n\nexport class EditorDictation extends Disposable implements IEditorContribution {\n\tstatic readonly ID = \"editorDictation\";\n\n\tstatic get(editor: ICodeEditor): EditorDictation | null {\n\t\treturn editor.getContribution<EditorDictation>(EditorDictation.ID);\n\t}\n\n\tprivate readonly widget = this._register(\n\t\tnew DictationWidget(this.editor, this.keybindingService),\n\t);\n\tprivate readonly editorDictationInProgress =\n\t\tEDITOR_DICTATION_IN_PROGRESS.bindTo(this.contextKeyService);\n\n\tprivate readonly sessionDisposables = this._register(\n\t\tnew MutableDisposable(),\n\t);\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\t@ISpeechService private readonly speechService: ISpeechService,\n\t\t@IContextKeyService\n\t\tprivate readonly contextKeyService: IContextKeyService,\n\t\t@IKeybindingService\n\t\tprivate readonly keybindingService: IKeybindingService,\n\t) {\n\t\tsuper();\n\t}\n\n\tasync start(): Promise<void> {\n\t\tconst disposables = new DisposableStore();\n\t\tthis.sessionDisposables.value = disposables;\n\n\t\tthis.widget.show();\n\t\tdisposables.add(toDisposable(() => this.widget.hide()));\n\n\t\tthis.editorDictationInProgress.set(true);\n\t\tdisposables.add(\n\t\t\ttoDisposable(() => this.editorDictationInProgress.reset()),\n\t\t);\n\n\t\tconst collection = this.editor.createDecorationsCollection();\n\t\tdisposables.add(toDisposable(() => collection.clear()));\n\n\t\tdisposables.add(\n\t\t\tthis.editor.onDidChangeCursorPosition(() => this.widget.layout()),\n\t\t);\n\n\t\tlet previewStart: Position | undefined;\n\n\t\tlet lastReplaceTextLength = 0;\n\t\tconst replaceText = (text: string, isPreview: boolean) => {\n\t\t\tif (!previewStart) {\n\t\t\t\tpreviewStart = assertIsDefined(this.editor.getPosition());\n\t\t\t}\n\n\t\t\tconst endPosition = new Position(\n\t\t\t\tpreviewStart.lineNumber,\n\t\t\t\tpreviewStart.column + text.length,\n\t\t\t);\n\t\t\tthis.editor.executeEdits(\n\t\t\t\tEditorDictation.ID,\n\t\t\t\t[\n\t\t\t\t\tEditOperation.replace(\n\t\t\t\t\t\tRange.fromPositions(\n\t\t\t\t\t\t\tpreviewStart,\n\t\t\t\t\t\t\tpreviewStart.with(\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\tpreviewStart.column + lastReplaceTextLength,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttext,\n\t\t\t\t\t),\n\t\t\t\t],\n\t\t\t\t[Selection.fromPositions(endPosition)],\n\t\t\t);\n\n\t\t\tif (isPreview) {\n\t\t\t\tcollection.set([\n\t\t\t\t\t{\n\t\t\t\t\t\trange: Range.fromPositions(\n\t\t\t\t\t\t\tpreviewStart,\n\t\t\t\t\t\t\tpreviewStart.with(\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\tpreviewStart.column + text.length,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tdescription: \"editor-dictation-preview\",\n\t\t\t\t\t\t\tinlineClassName: \"ghost-text-decoration-preview\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\tcollection.clear();\n\t\t\t}\n\n\t\t\tlastReplaceTextLength = text.length;\n\t\t\tif (!isPreview) {\n\t\t\t\tpreviewStart = undefined;\n\t\t\t\tlastReplaceTextLength = 0;\n\t\t\t}\n\n\t\t\tthis.editor.revealPositionInCenterIfOutsideViewport(endPosition);\n\t\t};\n\n\t\tconst cts = new CancellationTokenSource();\n\t\tdisposables.add(toDisposable(() => cts.dispose(true)));\n\n\t\tconst session = await this.speechService.createSpeechToTextSession(\n\t\t\tcts.token,\n\t\t\t\"editor\",\n\t\t);\n\t\tdisposables.add(\n\t\t\tsession.onDidChange((e) => {\n\t\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tswitch (e.status) {\n\t\t\t\t\tcase SpeechToTextStatus.Started:\n\t\t\t\t\t\tthis.widget.active();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase SpeechToTextStatus.Stopped:\n\t\t\t\t\t\tdisposables.dispose();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase SpeechToTextStatus.Recognizing: {\n\t\t\t\t\t\tif (!e.text) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treplaceText(e.text, true);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase SpeechToTextStatus.Recognized: {\n\t\t\t\t\t\tif (!e.text) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treplaceText(`${e.text} `, false);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tstop(): void {\n\t\tthis.sessionDisposables.clear();\n\t}\n}\n\nregisterEditorContribution(\n\tEditorDictation.ID,\n\tEditorDictation,\n\tEditorContributionInstantiation.Lazy,\n);\nregisterAction2(EditorDictationStartAction);\nregisterAction2(EditorDictationStopAction);\n"],
  "mappings": "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",
  "names": []
}
