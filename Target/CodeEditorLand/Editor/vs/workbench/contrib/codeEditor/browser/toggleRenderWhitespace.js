import{localize as n,localize2 as c}from"../../../../nls.js";import{Categories as s}from"../../../../platform/action/common/actionCommonCategories.js";import{Action2 as a,MenuId as d,registerAction2 as m}from"../../../../platform/actions/common/actions.js";import{IConfigurationService as p}from"../../../../platform/configuration/common/configuration.js";import{ContextKeyExpr as g}from"../../../../platform/contextkey/common/contextkey.js";class r extends a{static ID="editor.action.toggleRenderWhitespace";constructor(){super({id:r.ID,title:{...c("toggleRenderWhitespace","Toggle Render Whitespace"),mnemonicTitle:n({key:"miToggleRenderWhitespace",comment:["&& denotes a mnemonic"]},"&&Render Whitespace")},category:s.View,f1:!0,toggled:g.notEquals("config.editor.renderWhitespace","none"),menu:{id:d.MenubarAppearanceMenu,group:"4_editor",order:4}})}run(o){const t=o.get(p),i=t.getValue("editor.renderWhitespace");let e;return i==="none"?e="all":e="none",t.updateValue("editor.renderWhitespace",e)}}m(r);
