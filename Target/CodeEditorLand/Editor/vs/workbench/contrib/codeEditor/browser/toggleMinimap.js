import{localize as r,localize2 as n}from"../../../../nls.js";import{Categories as a}from"../../../../platform/action/common/actionCommonCategories.js";import{Action2 as m,MenuId as c,registerAction2 as p}from"../../../../platform/actions/common/actions.js";import{IConfigurationService as s}from"../../../../platform/configuration/common/configuration.js";import{ContextKeyExpr as l}from"../../../../platform/contextkey/common/contextkey.js";class e extends m{static ID="editor.action.toggleMinimap";constructor(){super({id:e.ID,title:{...n("toggleMinimap","Toggle Minimap"),mnemonicTitle:r({key:"miMinimap",comment:["&& denotes a mnemonic"]},"&&Minimap")},category:a.View,f1:!0,toggled:l.equals("config.editor.minimap.enabled",!0),menu:{id:c.MenubarAppearanceMenu,group:"4_editor",order:1}})}async run(o){const i=o.get(s),t=!i.getValue("editor.minimap.enabled");return i.updateValue("editor.minimap.enabled",t)}}p(e);export{e as ToggleMinimapAction};
