import{ContextMenuController as l}from"../../../../editor/contrib/contextmenu/browser/contextmenu.js";import{SnippetController2 as d}from"../../../../editor/contrib/snippet/browser/snippetController2.js";import{SuggestController as s}from"../../../../editor/contrib/suggest/browser/suggestController.js";import{MenuPreventer as a}from"./menuPreventer.js";import{SelectionClipboardContributionID as u}from"./selectionClipboard.js";import{TabCompletionController as p}from"../../snippets/browser/tabCompletion.js";import{EditorExtensionsRegistry as g}from"../../../../editor/browser/editorExtensions.js";import{registerThemingParticipant as m}from"../../../../platform/theme/common/themeService.js";import{selectionBackground as c,inputBackground as f,inputForeground as b,editorSelectionBackground as C}from"../../../../platform/theme/common/colorRegistry.js";function H(o){return{wordWrap:"on",overviewRulerLanes:0,glyphMargin:!1,lineNumbers:"off",folding:!1,selectOnLineNumbers:!1,hideCursorInOverviewRuler:!0,selectionHighlight:!1,scrollbar:{horizontal:"hidden",alwaysConsumeMouseWheel:!1},lineDecorationsWidth:0,overviewRulerBorder:!1,scrollBeyondLastLine:!1,renderLineHighlight:"none",fixedOverflowWidgets:!0,acceptSuggestionOnEnter:"smart",dragAndDrop:!1,revealHorizontalRightPadding:5,minimap:{enabled:!1},guides:{indentation:!1},accessibilitySupport:o.getValue("editor.accessibilitySupport"),cursorBlinking:o.getValue("editor.cursorBlinking"),experimentalEditContextEnabled:o.getValue("editor.experimentalEditContextEnabled")}}function P(){return{isSimpleWidget:!0,contributions:g.getSomeEditorContributions([a.ID,u,l.ID,s.ID,d.ID,p.ID])}}function V(o){return m((t,e)=>{const i=t.getColor(c);if(i){const r=t.getColor(f);r&&(e.addRule(`${o} .monaco-editor-background { background-color: ${r}; } `),e.addRule(`${o} .monaco-editor .selected-text { background-color: ${r.transparent(.4)}; }`));const n=t.getColor(b);n&&e.addRule(`${o} .monaco-editor .view-line span.inline-selected-text { color: ${n}; }`),e.addRule(`${o} .monaco-editor .focused .selected-text { background-color: ${i}; }`)}else e.addRule(`${o} .monaco-editor .focused .selected-text { background-color: ${t.getColor(C)}; }`)})}export{P as getSimpleCodeEditorWidgetOptions,H as getSimpleEditorOptions,V as setupSimpleEditorSelectionStyling};
