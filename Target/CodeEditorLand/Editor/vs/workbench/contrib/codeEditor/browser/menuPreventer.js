import{KeyMod as e}from"../../../../../vs/base/common/keyCodes.js";import{Disposable as r}from"../../../../../vs/base/common/lifecycle.js";import"../../../../../vs/editor/browser/editorBrowser.js";import{EditorContributionInstantiation as s,registerEditorContribution as n}from"../../../../../vs/editor/browser/editorExtensions.js";import"../../../../../vs/editor/common/editorCommon.js";class i extends r{static ID="editor.contrib.menuPreventer";_editor;_altListeningMouse;_altMouseTriggered;constructor(o){super(),this._editor=o,this._altListeningMouse=!1,this._altMouseTriggered=!1,this._register(this._editor.onMouseDown(t=>{this._altListeningMouse&&(this._altMouseTriggered=!0)})),this._register(this._editor.onKeyDown(t=>{t.equals(e.Alt)&&(this._altListeningMouse||(this._altMouseTriggered=!1),this._altListeningMouse=!0)})),this._register(this._editor.onKeyUp(t=>{t.equals(e.Alt)&&(this._altMouseTriggered&&t.preventDefault(),this._altListeningMouse=!1,this._altMouseTriggered=!1)}))}}n(i.ID,i,s.BeforeFirstInteraction);export{i as MenuPreventer};
