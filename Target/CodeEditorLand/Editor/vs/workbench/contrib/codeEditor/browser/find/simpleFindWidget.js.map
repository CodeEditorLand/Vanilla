{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/codeEditor/browser/find/simpleFindWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./simpleFindWidget.css\";\nimport * as dom from \"../../../../../base/browser/dom.js\";\nimport { status } from \"../../../../../base/browser/ui/aria/aria.js\";\nimport type { FindInput } from \"../../../../../base/browser/ui/findinput/findInput.js\";\nimport type { IMessage as InputBoxMessage } from \"../../../../../base/browser/ui/inputbox/inputBox.js\";\nimport {\n\ttype ISashEvent,\n\ttype IVerticalSashLayoutProvider,\n\tOrientation,\n\tSash,\n} from \"../../../../../base/browser/ui/sash/sash.js\";\nimport { Widget } from \"../../../../../base/browser/ui/widget.js\";\nimport { Delayer } from \"../../../../../base/common/async.js\";\nimport { KeyCode } from \"../../../../../base/common/keyCodes.js\";\nimport * as strings from \"../../../../../base/common/strings.js\";\nimport {\n\tFindReplaceState,\n\ttype INewFindReplaceState,\n} from \"../../../../../editor/contrib/find/browser/findState.js\";\nimport {\n\tNLS_MATCHES_LOCATION,\n\tNLS_NO_RESULTS,\n\tSimpleButton,\n\tfindNextMatchIcon,\n\tfindPreviousMatchIcon,\n} from \"../../../../../editor/contrib/find/browser/findWidget.js\";\nimport * as nls from \"../../../../../nls.js\";\nimport type { IContextKeyService } from \"../../../../../platform/contextkey/common/contextkey.js\";\nimport type { IContextViewService } from \"../../../../../platform/contextview/browser/contextView.js\";\nimport { ContextScopedFindInput } from \"../../../../../platform/history/browser/contextScopedHistoryWidget.js\";\nimport { showHistoryKeybindingHint } from \"../../../../../platform/history/browser/historyWidgetKeybindingHint.js\";\nimport type { IHoverService } from \"../../../../../platform/hover/browser/hover.js\";\nimport type { IKeybindingService } from \"../../../../../platform/keybinding/common/keybinding.js\";\nimport {\n\tdefaultInputBoxStyles,\n\tdefaultToggleStyles,\n} from \"../../../../../platform/theme/browser/defaultStyles.js\";\nimport { registerColor } from \"../../../../../platform/theme/common/colorRegistry.js\";\nimport { widgetClose } from \"../../../../../platform/theme/common/iconRegistry.js\";\nimport { registerThemingParticipant } from \"../../../../../platform/theme/common/themeService.js\";\n\nconst NLS_FIND_INPUT_LABEL = nls.localize(\"label.find\", \"Find\");\nconst NLS_FIND_INPUT_PLACEHOLDER = nls.localize(\"placeholder.find\", \"Find\");\nconst NLS_PREVIOUS_MATCH_BTN_LABEL = nls.localize(\n\t\"label.previousMatchButton\",\n\t\"Previous Match\",\n);\nconst NLS_NEXT_MATCH_BTN_LABEL = nls.localize(\n\t\"label.nextMatchButton\",\n\t\"Next Match\",\n);\nconst NLS_CLOSE_BTN_LABEL = nls.localize(\"label.closeButton\", \"Close\");\n\ninterface IFindOptions {\n\tshowCommonFindToggles?: boolean;\n\tcheckImeCompletionState?: boolean;\n\tshowResultCount?: boolean;\n\tappendCaseSensitiveActionId?: string;\n\tappendRegexActionId?: string;\n\tappendWholeWordsActionId?: string;\n\tpreviousMatchActionId?: string;\n\tnextMatchActionId?: string;\n\tcloseWidgetActionId?: string;\n\tmatchesLimit?: number;\n\ttype?: \"Terminal\" | \"Webview\";\n\tinitialWidth?: number;\n\tenableSash?: boolean;\n}\n\nconst SIMPLE_FIND_WIDGET_INITIAL_WIDTH = 310;\nconst MATCHES_COUNT_WIDTH = 73;\n\nexport abstract class SimpleFindWidget\n\textends Widget\n\timplements IVerticalSashLayoutProvider\n{\n\tprivate readonly _findInput: FindInput;\n\tprivate readonly _domNode: HTMLElement;\n\tprivate readonly _innerDomNode: HTMLElement;\n\tprivate readonly _focusTracker: dom.IFocusTracker;\n\tprivate readonly _findInputFocusTracker: dom.IFocusTracker;\n\tprivate readonly _updateHistoryDelayer: Delayer<void>;\n\tprivate readonly prevBtn: SimpleButton;\n\tprivate readonly nextBtn: SimpleButton;\n\tprivate readonly _matchesLimit: number;\n\tprivate _matchesCount: HTMLElement | undefined;\n\n\tprivate _isVisible = false;\n\tprivate _foundMatch = false;\n\tprivate _width = 0;\n\n\treadonly state: FindReplaceState = new FindReplaceState();\n\n\tconstructor(\n\t\toptions: IFindOptions,\n\t\tcontextViewService: IContextViewService,\n\t\tcontextKeyService: IContextKeyService,\n\t\thoverService: IHoverService,\n\t\tprivate readonly _keybindingService: IKeybindingService,\n\t) {\n\t\tsuper();\n\n\t\tthis._matchesLimit = options.matchesLimit ?? Number.MAX_SAFE_INTEGER;\n\n\t\tthis._findInput = this._register(\n\t\t\tnew ContextScopedFindInput(\n\t\t\t\tnull,\n\t\t\t\tcontextViewService,\n\t\t\t\t{\n\t\t\t\t\tlabel: NLS_FIND_INPUT_LABEL,\n\t\t\t\t\tplaceholder: NLS_FIND_INPUT_PLACEHOLDER,\n\t\t\t\t\tvalidation: (value: string): InputBoxMessage | null => {\n\t\t\t\t\t\tif (value.length === 0 || !this._findInput.getRegex()) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tnew RegExp(value);\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tthis._foundMatch = false;\n\t\t\t\t\t\t\tthis.updateButtons(this._foundMatch);\n\t\t\t\t\t\t\treturn { content: e.message };\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tshowCommonFindToggles: options.showCommonFindToggles,\n\t\t\t\t\tappendCaseSensitiveLabel:\n\t\t\t\t\t\toptions.appendCaseSensitiveActionId\n\t\t\t\t\t\t\t? this._getKeybinding(\n\t\t\t\t\t\t\t\t\toptions.appendCaseSensitiveActionId,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\tappendRegexLabel: options.appendRegexActionId\n\t\t\t\t\t\t? this._getKeybinding(options.appendRegexActionId)\n\t\t\t\t\t\t: undefined,\n\t\t\t\t\tappendWholeWordsLabel: options.appendWholeWordsActionId\n\t\t\t\t\t\t? this._getKeybinding(options.appendWholeWordsActionId)\n\t\t\t\t\t\t: undefined,\n\t\t\t\t\tshowHistoryHint: () =>\n\t\t\t\t\t\tshowHistoryKeybindingHint(_keybindingService),\n\t\t\t\t\tinputBoxStyles: defaultInputBoxStyles,\n\t\t\t\t\ttoggleStyles: defaultToggleStyles,\n\t\t\t\t},\n\t\t\t\tcontextKeyService,\n\t\t\t),\n\t\t);\n\t\t// Find History with update delayer\n\t\tthis._updateHistoryDelayer = this._register(new Delayer<void>(500));\n\n\t\tthis._register(\n\t\t\tthis._findInput.onInput(async (e) => {\n\t\t\t\tif (\n\t\t\t\t\t!options.checkImeCompletionState ||\n\t\t\t\t\t!this._findInput.isImeSessionInProgress\n\t\t\t\t) {\n\t\t\t\t\tthis._foundMatch = this._onInputChanged();\n\t\t\t\t\tif (options.showResultCount) {\n\t\t\t\t\t\tawait this.updateResultCount();\n\t\t\t\t\t}\n\t\t\t\t\tthis.updateButtons(this._foundMatch);\n\t\t\t\t\tthis.focusFindBox();\n\t\t\t\t\tthis._delayedUpdateHistory();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._findInput.setRegex(!!this.state.isRegex);\n\t\tthis._findInput.setCaseSensitive(!!this.state.matchCase);\n\t\tthis._findInput.setWholeWords(!!this.state.wholeWord);\n\n\t\tthis._register(\n\t\t\tthis._findInput.onDidOptionChange(() => {\n\t\t\t\tthis.state.change(\n\t\t\t\t\t{\n\t\t\t\t\t\tisRegex: this._findInput.getRegex(),\n\t\t\t\t\t\twholeWord: this._findInput.getWholeWords(),\n\t\t\t\t\t\tmatchCase: this._findInput.getCaseSensitive(),\n\t\t\t\t\t},\n\t\t\t\t\ttrue,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.state.onFindReplaceStateChange(() => {\n\t\t\t\tthis._findInput.setRegex(this.state.isRegex);\n\t\t\t\tthis._findInput.setWholeWords(this.state.wholeWord);\n\t\t\t\tthis._findInput.setCaseSensitive(this.state.matchCase);\n\t\t\t\tthis.findFirst();\n\t\t\t}),\n\t\t);\n\n\t\tthis.prevBtn = this._register(\n\t\t\tnew SimpleButton(\n\t\t\t\t{\n\t\t\t\t\tlabel:\n\t\t\t\t\t\tNLS_PREVIOUS_MATCH_BTN_LABEL +\n\t\t\t\t\t\t(options.previousMatchActionId\n\t\t\t\t\t\t\t? this._getKeybinding(options.previousMatchActionId)\n\t\t\t\t\t\t\t: \"\"),\n\t\t\t\t\ticon: findPreviousMatchIcon,\n\t\t\t\t\tonTrigger: () => {\n\t\t\t\t\t\tthis.find(true);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\thoverService,\n\t\t\t),\n\t\t);\n\n\t\tthis.nextBtn = this._register(\n\t\t\tnew SimpleButton(\n\t\t\t\t{\n\t\t\t\t\tlabel:\n\t\t\t\t\t\tNLS_NEXT_MATCH_BTN_LABEL +\n\t\t\t\t\t\t(options.nextMatchActionId\n\t\t\t\t\t\t\t? this._getKeybinding(options.nextMatchActionId)\n\t\t\t\t\t\t\t: \"\"),\n\t\t\t\t\ticon: findNextMatchIcon,\n\t\t\t\t\tonTrigger: () => {\n\t\t\t\t\t\tthis.find(false);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\thoverService,\n\t\t\t),\n\t\t);\n\n\t\tconst closeBtn = this._register(\n\t\t\tnew SimpleButton(\n\t\t\t\t{\n\t\t\t\t\tlabel:\n\t\t\t\t\t\tNLS_CLOSE_BTN_LABEL +\n\t\t\t\t\t\t(options.closeWidgetActionId\n\t\t\t\t\t\t\t? this._getKeybinding(options.closeWidgetActionId)\n\t\t\t\t\t\t\t: \"\"),\n\t\t\t\t\ticon: widgetClose,\n\t\t\t\t\tonTrigger: () => {\n\t\t\t\t\t\tthis.hide();\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\thoverService,\n\t\t\t),\n\t\t);\n\n\t\tthis._innerDomNode = document.createElement(\"div\");\n\t\tthis._innerDomNode.classList.add(\"simple-find-part\");\n\t\tthis._innerDomNode.appendChild(this._findInput.domNode);\n\t\tthis._innerDomNode.appendChild(this.prevBtn.domNode);\n\t\tthis._innerDomNode.appendChild(this.nextBtn.domNode);\n\t\tthis._innerDomNode.appendChild(closeBtn.domNode);\n\n\t\t// _domNode wraps _innerDomNode, ensuring that\n\t\tthis._domNode = document.createElement(\"div\");\n\t\tthis._domNode.classList.add(\"simple-find-part-wrapper\");\n\t\tthis._domNode.appendChild(this._innerDomNode);\n\n\t\tthis.onkeyup(this._innerDomNode, (e) => {\n\t\t\tif (e.equals(KeyCode.Escape)) {\n\t\t\t\tthis.hide();\n\t\t\t\te.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\n\t\tthis._focusTracker = this._register(dom.trackFocus(this._innerDomNode));\n\t\tthis._register(\n\t\t\tthis._focusTracker.onDidFocus(this._onFocusTrackerFocus.bind(this)),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._focusTracker.onDidBlur(this._onFocusTrackerBlur.bind(this)),\n\t\t);\n\n\t\tthis._findInputFocusTracker = this._register(\n\t\t\tdom.trackFocus(this._findInput.domNode),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._findInputFocusTracker.onDidFocus(\n\t\t\t\tthis._onFindInputFocusTrackerFocus.bind(this),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._findInputFocusTracker.onDidBlur(\n\t\t\t\tthis._onFindInputFocusTrackerBlur.bind(this),\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tdom.addDisposableListener(this._innerDomNode, \"click\", (event) => {\n\t\t\t\tevent.stopPropagation();\n\t\t\t}),\n\t\t);\n\n\t\tif (options?.showResultCount) {\n\t\t\tthis._domNode.classList.add(\"result-count\");\n\t\t\tthis._matchesCount = document.createElement(\"div\");\n\t\t\tthis._matchesCount.className = \"matchesCount\";\n\t\t\tthis._findInput.domNode.insertAdjacentElement(\n\t\t\t\t\"afterend\",\n\t\t\t\tthis._matchesCount,\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tthis._findInput.onDidChange(async () => {\n\t\t\t\t\tawait this.updateResultCount();\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tthis._findInput.onDidOptionChange(async () => {\n\t\t\t\t\tthis._foundMatch = this._onInputChanged();\n\t\t\t\t\tawait this.updateResultCount();\n\t\t\t\t\tthis.focusFindBox();\n\t\t\t\t\tthis._delayedUpdateHistory();\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\tlet initialMinWidth = options?.initialWidth;\n\t\tif (initialMinWidth) {\n\t\t\tinitialMinWidth =\n\t\t\t\tinitialMinWidth < SIMPLE_FIND_WIDGET_INITIAL_WIDTH\n\t\t\t\t\t? SIMPLE_FIND_WIDGET_INITIAL_WIDTH\n\t\t\t\t\t: initialMinWidth;\n\t\t\tthis._domNode.style.width = `${initialMinWidth}px`;\n\t\t}\n\n\t\tif (options?.enableSash) {\n\t\t\tconst _initialMinWidth =\n\t\t\t\tinitialMinWidth ?? SIMPLE_FIND_WIDGET_INITIAL_WIDTH;\n\t\t\tlet originalWidth = _initialMinWidth;\n\n\t\t\t// sash\n\t\t\tconst resizeSash = this._register(\n\t\t\t\tnew Sash(this._innerDomNode, this, {\n\t\t\t\t\torientation: Orientation.VERTICAL,\n\t\t\t\t\tsize: 1,\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tresizeSash.onDidStart(() => {\n\t\t\t\t\toriginalWidth = Number.parseFloat(\n\t\t\t\t\t\tdom.getComputedStyle(this._domNode).width,\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tthis._register(\n\t\t\t\tresizeSash.onDidChange((e: ISashEvent) => {\n\t\t\t\t\tconst width = originalWidth + e.startX - e.currentX;\n\t\t\t\t\tif (width < _initialMinWidth) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis._domNode.style.width = `${width}px`;\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tthis._register(\n\t\t\t\tresizeSash.onDidReset((e) => {\n\t\t\t\t\tconst currentWidth = Number.parseFloat(\n\t\t\t\t\t\tdom.getComputedStyle(this._domNode).width,\n\t\t\t\t\t);\n\t\t\t\t\tif (currentWidth === _initialMinWidth) {\n\t\t\t\t\t\tthis._domNode.style.width = \"100%\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._domNode.style.width = `${_initialMinWidth}px`;\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic getVerticalSashLeft(_sash: Sash): number {\n\t\treturn 0;\n\t}\n\n\tpublic abstract find(previous: boolean): void;\n\tpublic abstract findFirst(): void;\n\tprotected abstract _onInputChanged(): boolean;\n\tprotected abstract _onFocusTrackerFocus(): void;\n\tprotected abstract _onFocusTrackerBlur(): void;\n\tprotected abstract _onFindInputFocusTrackerFocus(): void;\n\tprotected abstract _onFindInputFocusTrackerBlur(): void;\n\tprotected abstract _getResultCount(): Promise<\n\t\t{ resultIndex: number; resultCount: number } | undefined\n\t>;\n\n\tprotected get inputValue() {\n\t\treturn this._findInput.getValue();\n\t}\n\n\tpublic get focusTracker(): dom.IFocusTracker {\n\t\treturn this._focusTracker;\n\t}\n\n\tprivate _getKeybinding(actionId: string): string {\n\t\tconst kb = this._keybindingService?.lookupKeybinding(actionId);\n\t\tif (!kb) {\n\t\t\treturn \"\";\n\t\t}\n\t\treturn ` (${kb.getLabel()})`;\n\t}\n\n\toverride dispose() {\n\t\tsuper.dispose();\n\n\t\tthis._domNode?.remove();\n\t}\n\n\tpublic isVisible(): boolean {\n\t\treturn this._isVisible;\n\t}\n\n\tpublic getDomNode() {\n\t\treturn this._domNode;\n\t}\n\n\tpublic getFindInputDomNode() {\n\t\treturn this._findInput.domNode;\n\t}\n\n\tpublic reveal(initialInput?: string, animated = true): void {\n\t\tif (initialInput) {\n\t\t\tthis._findInput.setValue(initialInput);\n\t\t}\n\n\t\tif (this._isVisible) {\n\t\t\tthis._findInput.select();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isVisible = true;\n\t\tthis.updateResultCount();\n\t\tthis.layout();\n\n\t\tsetTimeout(() => {\n\t\t\tthis._innerDomNode.classList.toggle(\n\t\t\t\t\"suppress-transition\",\n\t\t\t\t!animated,\n\t\t\t);\n\t\t\tthis._innerDomNode.classList.add(\"visible\", \"visible-transition\");\n\t\t\tthis._innerDomNode.setAttribute(\"aria-hidden\", \"false\");\n\t\t\tthis._findInput.select();\n\n\t\t\tif (!animated) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis._innerDomNode.classList.remove(\"suppress-transition\");\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t}, 0);\n\t}\n\n\tpublic show(initialInput?: string): void {\n\t\tif (initialInput && !this._isVisible) {\n\t\t\tthis._findInput.setValue(initialInput);\n\t\t}\n\n\t\tthis._isVisible = true;\n\t\tthis.layout();\n\n\t\tsetTimeout(() => {\n\t\t\tthis._innerDomNode.classList.add(\"visible\", \"visible-transition\");\n\n\t\t\tthis._innerDomNode.setAttribute(\"aria-hidden\", \"false\");\n\t\t}, 0);\n\t}\n\n\tpublic hide(animated = true): void {\n\t\tif (this._isVisible) {\n\t\t\tthis._innerDomNode.classList.toggle(\n\t\t\t\t\"suppress-transition\",\n\t\t\t\t!animated,\n\t\t\t);\n\t\t\tthis._innerDomNode.classList.remove(\"visible-transition\");\n\t\t\tthis._innerDomNode.setAttribute(\"aria-hidden\", \"true\");\n\t\t\t// Need to delay toggling visibility until after Transition, then visibility hidden - removes from tabIndex list\n\t\t\tsetTimeout(\n\t\t\t\t() => {\n\t\t\t\t\tthis._isVisible = false;\n\t\t\t\t\tthis.updateButtons(this._foundMatch);\n\t\t\t\t\tthis._innerDomNode.classList.remove(\n\t\t\t\t\t\t\"visible\",\n\t\t\t\t\t\t\"suppress-transition\",\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tanimated ? 200 : 0,\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic layout(width: number = this._width): void {\n\t\tthis._width = width;\n\n\t\tif (!this._isVisible) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._matchesCount) {\n\t\t\tlet reducedFindWidget = false;\n\t\t\tif (\n\t\t\t\tSIMPLE_FIND_WIDGET_INITIAL_WIDTH + MATCHES_COUNT_WIDTH + 28 >=\n\t\t\t\twidth\n\t\t\t) {\n\t\t\t\treducedFindWidget = true;\n\t\t\t}\n\t\t\tthis._innerDomNode.classList.toggle(\n\t\t\t\t\"reduced-find-widget\",\n\t\t\t\treducedFindWidget,\n\t\t\t);\n\t\t}\n\t}\n\n\tprotected _delayedUpdateHistory() {\n\t\tthis._updateHistoryDelayer.trigger(this._updateHistory.bind(this));\n\t}\n\n\tprotected _updateHistory() {\n\t\tthis._findInput.inputBox.addToHistory();\n\t}\n\n\tprotected _getRegexValue(): boolean {\n\t\treturn this._findInput.getRegex();\n\t}\n\n\tprotected _getWholeWordValue(): boolean {\n\t\treturn this._findInput.getWholeWords();\n\t}\n\n\tprotected _getCaseSensitiveValue(): boolean {\n\t\treturn this._findInput.getCaseSensitive();\n\t}\n\n\tprotected updateButtons(foundMatch: boolean) {\n\t\tconst hasInput = this.inputValue.length > 0;\n\t\tthis.prevBtn.setEnabled(this._isVisible && hasInput && foundMatch);\n\t\tthis.nextBtn.setEnabled(this._isVisible && hasInput && foundMatch);\n\t}\n\n\tprotected focusFindBox() {\n\t\t// Focus back onto the find box, which\n\t\t// requires focusing onto the next button first\n\t\tthis.nextBtn.focus();\n\t\tthis._findInput.inputBox.focus();\n\t}\n\n\tasync updateResultCount(): Promise<void> {\n\t\tif (!this._matchesCount) {\n\t\t\tthis.updateButtons(this._foundMatch);\n\t\t\treturn;\n\t\t}\n\n\t\tconst count = await this._getResultCount();\n\t\tthis._matchesCount.innerText = \"\";\n\t\tconst showRedOutline =\n\t\t\tthis.inputValue.length > 0 && count?.resultCount === 0;\n\t\tthis._matchesCount.classList.toggle(\"no-results\", showRedOutline);\n\t\tlet label = \"\";\n\t\tif (count?.resultCount) {\n\t\t\tlet matchesCount: string = String(count.resultCount);\n\t\t\tif (count.resultCount >= this._matchesLimit) {\n\t\t\t\tmatchesCount += \"+\";\n\t\t\t}\n\t\t\tlet matchesPosition: string = String(count.resultIndex + 1);\n\t\t\tif (matchesPosition === \"0\") {\n\t\t\t\tmatchesPosition = \"?\";\n\t\t\t}\n\t\t\tlabel = strings.format(\n\t\t\t\tNLS_MATCHES_LOCATION,\n\t\t\t\tmatchesPosition,\n\t\t\t\tmatchesCount,\n\t\t\t);\n\t\t} else {\n\t\t\tlabel = NLS_NO_RESULTS;\n\t\t}\n\t\tstatus(this._announceSearchResults(label, this.inputValue));\n\t\tthis._matchesCount.appendChild(document.createTextNode(label));\n\t\tthis._foundMatch = !!count && count.resultCount > 0;\n\t\tthis.updateButtons(this._foundMatch);\n\t}\n\n\tchangeState(state: INewFindReplaceState) {\n\t\tthis.state.change(state, false);\n\t}\n\n\tprivate _announceSearchResults(\n\t\tlabel: string,\n\t\tsearchString?: string,\n\t): string {\n\t\tif (!searchString) {\n\t\t\treturn nls.localize(\"ariaSearchNoInput\", \"Enter search input\");\n\t\t}\n\t\tif (label === NLS_NO_RESULTS) {\n\t\t\treturn searchString === \"\"\n\t\t\t\t? nls.localize(\"ariaSearchNoResultEmpty\", \"{0} found\", label)\n\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\"ariaSearchNoResult\",\n\t\t\t\t\t\t\"{0} found for '{1}'\",\n\t\t\t\t\t\tlabel,\n\t\t\t\t\t\tsearchString,\n\t\t\t\t\t);\n\t\t}\n\n\t\treturn nls.localize(\n\t\t\t\"ariaSearchNoResultWithLineNumNoCurrentMatch\",\n\t\t\t\"{0} found for '{1}'\",\n\t\t\tlabel,\n\t\t\tsearchString,\n\t\t);\n\t}\n}\n\nexport const simpleFindWidgetSashBorder = registerColor(\n\t\"simpleFindWidget.sashBorder\",\n\t{\n\t\tdark: \"#454545\",\n\t\tlight: \"#C8C8C8\",\n\t\thcDark: \"#6FC3DF\",\n\t\thcLight: \"#0F4A85\",\n\t},\n\tnls.localize(\n\t\t\"simpleFindWidget.sashBorder\",\n\t\t\"Border color of the sash border.\",\n\t),\n);\n\nregisterThemingParticipant((theme, collector) => {\n\tconst resizeBorderBackground = theme.getColor(simpleFindWidgetSashBorder);\n\tcollector.addRule(\n\t\t`.monaco-workbench .simple-find-part .monaco-sash { background-color: ${resizeBorderBackground}; border-color: ${resizeBorderBackground} }`,\n\t);\n});\n"],
  "mappings": "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",
  "names": []
}
