{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/codeEditor/browser/inspectKeybindings.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize2 } from '../../../../nls.js';\nimport { ICodeEditor } from '../../../../editor/browser/editorBrowser.js';\nimport { ServicesAccessor } from '../../../../editor/browser/editorExtensions.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { Categories } from '../../../../platform/action/common/actionCommonCategories.js';\nimport { Action2, registerAction2 } from '../../../../platform/actions/common/actions.js';\n\nclass InspectKeyMap extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.inspectKeyMappings',\n\t\t\ttitle: localize2('workbench.action.inspectKeyMap', 'Inspect Key Mappings'),\n\t\t\tcategory: Categories.Developer,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tconst keybindingService = accessor.get(IKeybindingService);\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\teditorService.openEditor({ resource: undefined, contents: keybindingService._dumpDebugInfo(), options: { pinned: true } });\n\t}\n}\n\nregisterAction2(InspectKeyMap);\n\nclass InspectKeyMapJSON extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.inspectKeyMappingsJSON',\n\t\t\ttitle: localize2('workbench.action.inspectKeyMapJSON', 'Inspect Key Mappings (JSON)'),\n\t\t\tcategory: Categories.Developer,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst keybindingService = accessor.get(IKeybindingService);\n\n\t\tawait editorService.openEditor({ resource: undefined, contents: keybindingService._dumpDebugInfoJSON(), options: { pinned: true } });\n\t}\n}\n\nregisterAction2(InspectKeyMapJSON);\n"],
  "mappings": ";;AAKA,SAAS,iBAAiB;AAC1B,SAAS,mBAAmB;AAC5B,SAAS,wBAAwB;AACjC,SAAS,0BAA0B;AACnC,SAAS,sBAAsB;AAC/B,SAAS,kBAAkB;AAC3B,SAAS,SAAS,uBAAuB;AAEzC,MAAM,sBAAsB,QAAQ;AAAA,EAbpC,OAaoC;AAAA;AAAA;AAAA,EAEnC,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,UAAU,kCAAkC,sBAAsB;AAAA,MACzE,UAAU,WAAW;AAAA,MACrB,IAAI;AAAA,IACL,CAAC;AAAA,EACF;AAAA,EAEA,IAAI,UAA4B,QAA2B;AAC1D,UAAM,oBAAoB,SAAS,IAAI,kBAAkB;AACzD,UAAM,gBAAgB,SAAS,IAAI,cAAc;AAEjD,kBAAc,WAAW,EAAE,UAAU,QAAW,UAAU,kBAAkB,eAAe,GAAG,SAAS,EAAE,QAAQ,KAAK,EAAE,CAAC;AAAA,EAC1H;AACD;AAEA,gBAAgB,aAAa;AAE7B,MAAM,0BAA0B,QAAQ;AAAA,EAlCxC,OAkCwC;AAAA;AAAA;AAAA,EAEvC,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,UAAU,sCAAsC,6BAA6B;AAAA,MACpF,UAAU,WAAW;AAAA,MACrB,IAAI;AAAA,IACL,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,gBAAgB,SAAS,IAAI,cAAc;AACjD,UAAM,oBAAoB,SAAS,IAAI,kBAAkB;AAEzD,UAAM,cAAc,WAAW,EAAE,UAAU,QAAW,UAAU,kBAAkB,mBAAmB,GAAG,SAAS,EAAE,QAAQ,KAAK,EAAE,CAAC;AAAA,EACpI;AACD;AAEA,gBAAgB,iBAAiB;",
  "names": []
}
