{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/codeEditor/browser/quickaccess/gotoLineQuickAccess.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize, localize2 } from '../../../../../nls.js';\nimport { IKeyMods, IQuickInputService } from '../../../../../platform/quickinput/common/quickInput.js';\nimport { IEditorService } from '../../../../services/editor/common/editorService.js';\nimport { IRange } from '../../../../../editor/common/core/range.js';\nimport { AbstractGotoLineQuickAccessProvider } from '../../../../../editor/contrib/quickAccess/browser/gotoLineQuickAccess.js';\nimport { Registry } from '../../../../../platform/registry/common/platform.js';\nimport { IQuickAccessRegistry, Extensions as QuickaccesExtensions } from '../../../../../platform/quickinput/common/quickAccess.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { IWorkbenchEditorConfiguration } from '../../../../common/editor.js';\nimport { Action2, registerAction2 } from '../../../../../platform/actions/common/actions.js';\nimport { KeyMod, KeyCode } from '../../../../../base/common/keyCodes.js';\nimport { ServicesAccessor } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingWeight } from '../../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { IQuickAccessTextEditorContext } from '../../../../../editor/contrib/quickAccess/browser/editorNavigationQuickAccess.js';\nimport { ITextEditorOptions } from '../../../../../platform/editor/common/editor.js';\nimport { IEditorGroupsService } from '../../../../services/editor/common/editorGroupsService.js';\n\nexport class GotoLineQuickAccessProvider extends AbstractGotoLineQuickAccessProvider {\n\n\tprotected readonly onDidActiveTextEditorControlChange = this.editorService.onDidActiveEditorChange;\n\n\tconstructor(\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\t}\n\n\tprivate get configuration() {\n\t\tconst editorConfig = this.configurationService.getValue<IWorkbenchEditorConfiguration>().workbench?.editor;\n\n\t\treturn {\n\t\t\topenEditorPinned: !editorConfig?.enablePreviewFromQuickOpen || !editorConfig?.enablePreview\n\t\t};\n\t}\n\n\tprotected get activeTextEditorControl() {\n\t\treturn this.editorService.activeTextEditorControl;\n\t}\n\n\tprotected override gotoLocation(context: IQuickAccessTextEditorContext, options: { range: IRange; keyMods: IKeyMods; forceSideBySide?: boolean; preserveFocus?: boolean }): void {\n\n\t\t// Check for sideBySide use\n\t\tif ((options.keyMods.alt || (this.configuration.openEditorPinned && options.keyMods.ctrlCmd) || options.forceSideBySide) && this.editorService.activeEditor) {\n\t\t\tcontext.restoreViewState?.(); // since we open to the side, restore view state in this editor\n\n\t\t\tconst editorOptions: ITextEditorOptions = {\n\t\t\t\tselection: options.range,\n\t\t\t\tpinned: options.keyMods.ctrlCmd || this.configuration.openEditorPinned,\n\t\t\t\tpreserveFocus: options.preserveFocus\n\t\t\t};\n\n\t\t\tthis.editorGroupService.sideGroup.openEditor(this.editorService.activeEditor, editorOptions);\n\t\t}\n\n\t\t// Otherwise let parent handle it\n\t\telse {\n\t\t\tsuper.gotoLocation(context, options);\n\t\t}\n\t}\n}\n\nclass GotoLineAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.gotoLine';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: GotoLineAction.ID,\n\t\t\ttitle: localize2('gotoLine', 'Go to Line/Column...'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: null,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyG,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.KeyG }\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\taccessor.get(IQuickInputService).quickAccess.show(GotoLineQuickAccessProvider.PREFIX);\n\t}\n}\n\nregisterAction2(GotoLineAction);\n\nRegistry.as<IQuickAccessRegistry>(QuickaccesExtensions.Quickaccess).registerQuickAccessProvider({\n\tctor: GotoLineQuickAccessProvider,\n\tprefix: AbstractGotoLineQuickAccessProvider.PREFIX,\n\tplaceholder: localize('gotoLineQuickAccessPlaceholder', \"Type the line number and optional column to go to (e.g. 42:5 for line 42 and column 5).\"),\n\thelpEntries: [{ description: localize('gotoLineQuickAccess', \"Go to Line/Column\"), commandId: GotoLineAction.ID }]\n});\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,UAAU,iBAAiB;AACpC,SAAS,UAAU,0BAA0B;AAC7C,SAAS,sBAAsB;AAC/B,SAAS,cAAc;AACvB,SAAS,2CAA2C;AACpD,SAAS,gBAAgB;AACzB,SAAS,sBAAsB,cAAc,4BAA4B;AACzE,SAAS,6BAA6B;AACtC,SAAS,qCAAqC;AAC9C,SAAS,SAAS,uBAAuB;AACzC,SAAS,QAAQ,eAAe;AAChC,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC,SAAS,qCAAqC;AAC9C,SAAS,0BAA0B;AACnC,SAAS,4BAA4B;AAE9B,IAAM,8BAAN,cAA0C,oCAAoC;AAAA,EAIpF,YACkC,eACM,oBACC,sBACvC;AACD,UAAM;AAJ2B;AACM;AACC;AAAA,EAGzC;AAAA,EAhCD,OAsBqF;AAAA;AAAA;AAAA,EAEjE,qCAAqC,KAAK,cAAc;AAAA,EAU3E,IAAY,gBAAgB;AAC3B,UAAM,eAAe,KAAK,qBAAqB,SAAwC,EAAE,WAAW;AAEpG,WAAO;AAAA,MACN,kBAAkB,CAAC,cAAc,8BAA8B,CAAC,cAAc;AAAA,IAC/E;AAAA,EACD;AAAA,EAEA,IAAc,0BAA0B;AACvC,WAAO,KAAK,cAAc;AAAA,EAC3B;AAAA,EAEmB,aAAa,SAAwC,SAAyG;AAGhL,SAAK,QAAQ,QAAQ,OAAQ,KAAK,cAAc,oBAAoB,QAAQ,QAAQ,WAAY,QAAQ,oBAAoB,KAAK,cAAc,cAAc;AAC5J,cAAQ,mBAAmB;AAE3B,YAAM,gBAAoC;AAAA,QACzC,WAAW,QAAQ;AAAA,QACnB,QAAQ,QAAQ,QAAQ,WAAW,KAAK,cAAc;AAAA,QACtD,eAAe,QAAQ;AAAA,MACxB;AAEA,WAAK,mBAAmB,UAAU,WAAW,KAAK,cAAc,cAAc,aAAa;AAAA,IAC5F,OAGK;AACJ,YAAM,aAAa,SAAS,OAAO;AAAA,IACpC;AAAA,EACD;AACD;AA5Ca,8BAAN;AAAA,EAKJ;AAAA,EACA;AAAA,EACA;AAAA,GAPU;AA8Cb,MAAM,uBAAuB,QAAQ;AAAA,EApErC,OAoEqC;AAAA;AAAA;AAAA,EAEpC,OAAgB,KAAK;AAAA,EAErB,cAAc;AACb,UAAM;AAAA,MACL,IAAI,eAAe;AAAA,MACnB,OAAO,UAAU,YAAY,sBAAsB;AAAA,MACnD,IAAI;AAAA,MACJ,YAAY;AAAA,QACX,QAAQ,iBAAiB;AAAA,QACzB,MAAM;AAAA,QACN,SAAS,OAAO,UAAU,QAAQ;AAAA,QAClC,KAAK,EAAE,SAAS,OAAO,UAAU,QAAQ,KAAK;AAAA,MAC/C;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,MAAM,IAAI,UAA2C;AACpD,aAAS,IAAI,kBAAkB,EAAE,YAAY,KAAK,4BAA4B,MAAM;AAAA,EACrF;AACD;AAEA,gBAAgB,cAAc;AAE9B,SAAS,GAAyB,qBAAqB,WAAW,EAAE,4BAA4B;AAAA,EAC/F,MAAM;AAAA,EACN,QAAQ,oCAAoC;AAAA,EAC5C,aAAa,SAAS,kCAAkC,yFAAyF;AAAA,EACjJ,aAAa,CAAC,EAAE,aAAa,SAAS,uBAAuB,mBAAmB,GAAG,WAAW,eAAe,GAAG,CAAC;AAClH,CAAC;",
  "names": []
}
