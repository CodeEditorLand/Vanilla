{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/codeEditor/browser/quickaccess/gotoLineQuickAccess.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from \"../../../../../base/common/keyCodes.js\";\nimport type { IRange } from \"../../../../../editor/common/core/range.js\";\nimport type { IQuickAccessTextEditorContext } from \"../../../../../editor/contrib/quickAccess/browser/editorNavigationQuickAccess.js\";\nimport { AbstractGotoLineQuickAccessProvider } from \"../../../../../editor/contrib/quickAccess/browser/gotoLineQuickAccess.js\";\nimport { localize, localize2 } from \"../../../../../nls.js\";\nimport {\n\tAction2,\n\tregisterAction2,\n} from \"../../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../../platform/configuration/common/configuration.js\";\nimport type { ITextEditorOptions } from \"../../../../../platform/editor/common/editor.js\";\nimport type { ServicesAccessor } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport {\n\ttype IQuickAccessRegistry,\n\tExtensions as QuickaccesExtensions,\n} from \"../../../../../platform/quickinput/common/quickAccess.js\";\nimport {\n\ttype IKeyMods,\n\tIQuickInputService,\n} from \"../../../../../platform/quickinput/common/quickInput.js\";\nimport { Registry } from \"../../../../../platform/registry/common/platform.js\";\nimport type { IWorkbenchEditorConfiguration } from \"../../../../common/editor.js\";\nimport { IEditorGroupsService } from \"../../../../services/editor/common/editorGroupsService.js\";\nimport { IEditorService } from \"../../../../services/editor/common/editorService.js\";\n\nexport class GotoLineQuickAccessProvider extends AbstractGotoLineQuickAccessProvider {\n\tprotected readonly onDidActiveTextEditorControlChange =\n\t\tthis.editorService.onDidActiveEditorChange;\n\n\tconstructor(\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\t}\n\n\tprivate get configuration() {\n\t\tconst editorConfig =\n\t\t\tthis.configurationService.getValue<IWorkbenchEditorConfiguration>()\n\t\t\t\t.workbench?.editor;\n\n\t\treturn {\n\t\t\topenEditorPinned:\n\t\t\t\t!editorConfig?.enablePreviewFromQuickOpen ||\n\t\t\t\t!editorConfig?.enablePreview,\n\t\t};\n\t}\n\n\tprotected get activeTextEditorControl() {\n\t\treturn this.editorService.activeTextEditorControl;\n\t}\n\n\tprotected override gotoLocation(\n\t\tcontext: IQuickAccessTextEditorContext,\n\t\toptions: {\n\t\t\trange: IRange;\n\t\t\tkeyMods: IKeyMods;\n\t\t\tforceSideBySide?: boolean;\n\t\t\tpreserveFocus?: boolean;\n\t\t},\n\t): void {\n\t\t// Check for sideBySide use\n\t\tif (\n\t\t\t(options.keyMods.alt ||\n\t\t\t\t(this.configuration.openEditorPinned &&\n\t\t\t\t\toptions.keyMods.ctrlCmd) ||\n\t\t\t\toptions.forceSideBySide) &&\n\t\t\tthis.editorService.activeEditor\n\t\t) {\n\t\t\tcontext.restoreViewState?.(); // since we open to the side, restore view state in this editor\n\n\t\t\tconst editorOptions: ITextEditorOptions = {\n\t\t\t\tselection: options.range,\n\t\t\t\tpinned:\n\t\t\t\t\toptions.keyMods.ctrlCmd ||\n\t\t\t\t\tthis.configuration.openEditorPinned,\n\t\t\t\tpreserveFocus: options.preserveFocus,\n\t\t\t};\n\n\t\t\tthis.editorGroupService.sideGroup.openEditor(\n\t\t\t\tthis.editorService.activeEditor,\n\t\t\t\teditorOptions,\n\t\t\t);\n\t\t}\n\n\t\t// Otherwise let parent handle it\n\t\telse {\n\t\t\tsuper.gotoLocation(context, options);\n\t\t}\n\t}\n}\n\nclass GotoLineAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.gotoLine\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: GotoLineAction.ID,\n\t\t\ttitle: localize2(\"gotoLine\", \"Go to Line/Column...\"),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: null,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyG,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.KeyG },\n\t\t\t},\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\taccessor\n\t\t\t.get(IQuickInputService)\n\t\t\t.quickAccess.show(GotoLineQuickAccessProvider.PREFIX);\n\t}\n}\n\nregisterAction2(GotoLineAction);\n\nRegistry.as<IQuickAccessRegistry>(\n\tQuickaccesExtensions.Quickaccess,\n).registerQuickAccessProvider({\n\tctor: GotoLineQuickAccessProvider,\n\tprefix: AbstractGotoLineQuickAccessProvider.PREFIX,\n\tplaceholder: localize(\n\t\t\"gotoLineQuickAccessPlaceholder\",\n\t\t\"Type the line number and optional column to go to (e.g. 42:5 for line 42 and column 5).\",\n\t),\n\thelpEntries: [\n\t\t{\n\t\t\tdescription: localize(\"gotoLineQuickAccess\", \"Go to Line/Column\"),\n\t\t\tcommandId: GotoLineAction.ID,\n\t\t},\n\t],\n});\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,SAAS,cAAc;AAGhC,SAAS,2CAA2C;AACpD,SAAS,UAAU,iBAAiB;AACpC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,6BAA6B;AAGtC,SAAS,wBAAwB;AACjC;AAAA,EAEC,cAAc;AAAA,OACR;AACP;AAAA,EAEC;AAAA,OACM;AACP,SAAS,gBAAgB;AAEzB,SAAS,4BAA4B;AACrC,SAAS,sBAAsB;AAExB,IAAM,8BAAN,cAA0C,oCAAoC;AAAA,EAIpF,YACkC,eACM,oBACC,sBACvC;AACD,UAAM;AAJ2B;AACM;AACC;AAAA,EAGzC;AAAA,EAzCD,OA+BqF;AAAA;AAAA;AAAA,EACjE,qCAClB,KAAK,cAAc;AAAA,EAUpB,IAAY,gBAAgB;AAC3B,UAAM,eACL,KAAK,qBAAqB,SAAwC,EAChE,WAAW;AAEd,WAAO;AAAA,MACN,kBACC,CAAC,cAAc,8BACf,CAAC,cAAc;AAAA,IACjB;AAAA,EACD;AAAA,EAEA,IAAc,0BAA0B;AACvC,WAAO,KAAK,cAAc;AAAA,EAC3B;AAAA,EAEmB,aAClB,SACA,SAMO;AAEP,SACE,QAAQ,QAAQ,OACf,KAAK,cAAc,oBACnB,QAAQ,QAAQ,WACjB,QAAQ,oBACT,KAAK,cAAc,cAClB;AACD,cAAQ,mBAAmB;AAE3B,YAAM,gBAAoC;AAAA,QACzC,WAAW,QAAQ;AAAA,QACnB,QACC,QAAQ,QAAQ,WAChB,KAAK,cAAc;AAAA,QACpB,eAAe,QAAQ;AAAA,MACxB;AAEA,WAAK,mBAAmB,UAAU;AAAA,QACjC,KAAK,cAAc;AAAA,QACnB;AAAA,MACD;AAAA,IACD,OAGK;AACJ,YAAM,aAAa,SAAS,OAAO;AAAA,IACpC;AAAA,EACD;AACD;AAlEa,8BAAN;AAAA,EAKJ;AAAA,EACA;AAAA,EACA;AAAA,GAPU;AAoEb,MAAM,uBAAuB,QAAQ;AAAA,EAnGrC,OAmGqC;AAAA;AAAA;AAAA,EACpC,OAAgB,KAAK;AAAA,EAErB,cAAc;AACb,UAAM;AAAA,MACL,IAAI,eAAe;AAAA,MACnB,OAAO,UAAU,YAAY,sBAAsB;AAAA,MACnD,IAAI;AAAA,MACJ,YAAY;AAAA,QACX,QAAQ,iBAAiB;AAAA,QACzB,MAAM;AAAA,QACN,SAAS,OAAO,UAAU,QAAQ;AAAA,QAClC,KAAK,EAAE,SAAS,OAAO,UAAU,QAAQ,KAAK;AAAA,MAC/C;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,MAAM,IAAI,UAA2C;AACpD,aACE,IAAI,kBAAkB,EACtB,YAAY,KAAK,4BAA4B,MAAM;AAAA,EACtD;AACD;AAEA,gBAAgB,cAAc;AAE9B,SAAS;AAAA,EACR,qBAAqB;AACtB,EAAE,4BAA4B;AAAA,EAC7B,MAAM;AAAA,EACN,QAAQ,oCAAoC;AAAA,EAC5C,aAAa;AAAA,IACZ;AAAA,IACA;AAAA,EACD;AAAA,EACA,aAAa;AAAA,IACZ;AAAA,MACC,aAAa,SAAS,uBAAuB,mBAAmB;AAAA,MAChE,WAAW,eAAe;AAAA,IAC3B;AAAA,EACD;AACD,CAAC;",
  "names": []
}
