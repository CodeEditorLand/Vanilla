{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/codeEditor/browser/toggleRenderControlCharacter.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport { Categories } from \"../../../../platform/action/common/actionCommonCategories.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\n\nexport class ToggleRenderControlCharacterAction extends Action2 {\n\tstatic readonly ID = \"editor.action.toggleRenderControlCharacter\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleRenderControlCharacterAction.ID,\n\t\t\ttitle: {\n\t\t\t\t...localize2(\n\t\t\t\t\t\"toggleRenderControlCharacters\",\n\t\t\t\t\t\"Toggle Control Characters\",\n\t\t\t\t),\n\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"miToggleRenderControlCharacters\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"Render &&Control Characters\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\ttoggled: ContextKeyExpr.equals(\n\t\t\t\t\"config.editor.renderControlCharacters\",\n\t\t\t\ttrue,\n\t\t\t),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\tgroup: \"4_editor\",\n\t\t\t\torder: 5,\n\t\t\t},\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst newRenderControlCharacters =\n\t\t\t!configurationService.getValue<boolean>(\n\t\t\t\t\"editor.renderControlCharacters\",\n\t\t\t);\n\t\treturn configurationService.updateValue(\n\t\t\t\"editor.renderControlCharacters\",\n\t\t\tnewRenderControlCharacters,\n\t\t);\n\t}\n}\n\nregisterAction2(ToggleRenderControlCharacterAction);\n"],
  "mappings": ";;AAKA,SAAS,UAAU,iBAAiB;AACpC,SAAS,kBAAkB;AAC3B;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,6BAA6B;AACtC,SAAS,sBAAsB;AAGxB,MAAM,2CAA2C,QAAQ;AAAA,EAhBhE,OAgBgE;AAAA;AAAA;AAAA,EAC/D,OAAgB,KAAK;AAAA,EAErB,cAAc;AACb,UAAM;AAAA,MACL,IAAI,mCAAmC;AAAA,MACvC,OAAO;AAAA,QACN,GAAG;AAAA,UACF;AAAA,UACA;AAAA,QACD;AAAA,QACA,eAAe;AAAA,UACd;AAAA,YACC,KAAK;AAAA,YACL,SAAS,CAAC,uBAAuB;AAAA,UAClC;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,MACA,UAAU,WAAW;AAAA,MACrB,IAAI;AAAA,MACJ,SAAS,eAAe;AAAA,QACvB;AAAA,QACA;AAAA,MACD;AAAA,MACA,MAAM;AAAA,QACL,IAAI,OAAO;AAAA,QACX,OAAO;AAAA,QACP,OAAO;AAAA,MACR;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAES,IAAI,UAA2C;AACvD,UAAM,uBAAuB,SAAS,IAAI,qBAAqB;AAE/D,UAAM,6BACL,CAAC,qBAAqB;AAAA,MACrB;AAAA,IACD;AACD,WAAO,qBAAqB;AAAA,MAC3B;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AAEA,gBAAgB,kCAAkC;",
  "names": []
}
