{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/codeEditor/browser/toggleRenderControlCharacter.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize, localize2 } from '../../../../nls.js';\nimport { Action2, MenuId, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { Categories } from '../../../../platform/action/common/actionCommonCategories.js';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\n\nexport class ToggleRenderControlCharacterAction extends Action2 {\n\n\tstatic readonly ID = 'editor.action.toggleRenderControlCharacter';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleRenderControlCharacterAction.ID,\n\t\t\ttitle: {\n\t\t\t\t...localize2('toggleRenderControlCharacters', \"Toggle Control Characters\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miToggleRenderControlCharacters', comment: ['&& denotes a mnemonic'] }, \"Render &&Control Characters\"),\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\ttoggled: ContextKeyExpr.equals('config.editor.renderControlCharacters', true),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\tgroup: '4_editor',\n\t\t\t\torder: 5\n\t\t\t}\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst newRenderControlCharacters = !configurationService.getValue<boolean>('editor.renderControlCharacters');\n\t\treturn configurationService.updateValue('editor.renderControlCharacters', newRenderControlCharacters);\n\t}\n}\n\nregisterAction2(ToggleRenderControlCharacterAction);\n"],
  "mappings": ";;AAKA,SAAS,UAAU,iBAAiB;AACpC,SAAS,SAAS,QAAQ,uBAAuB;AACjD,SAAS,6BAA6B;AACtC,SAAS,sBAAsB;AAC/B,SAAS,kBAAkB;AAC3B,SAAS,wBAAwB;AAE1B,MAAM,2CAA2C,QAAQ;AAAA,EAZhE,OAYgE;AAAA;AAAA;AAAA,EAE/D,OAAgB,KAAK;AAAA,EAErB,cAAc;AACb,UAAM;AAAA,MACL,IAAI,mCAAmC;AAAA,MACvC,OAAO;AAAA,QACN,GAAG,UAAU,iCAAiC,2BAA2B;AAAA,QACzE,eAAe,SAAS,EAAE,KAAK,mCAAmC,SAAS,CAAC,uBAAuB,EAAE,GAAG,6BAA6B;AAAA,MACtI;AAAA,MACA,UAAU,WAAW;AAAA,MACrB,IAAI;AAAA,MACJ,SAAS,eAAe,OAAO,yCAAyC,IAAI;AAAA,MAC5E,MAAM;AAAA,QACL,IAAI,OAAO;AAAA,QACX,OAAO;AAAA,QACP,OAAO;AAAA,MACR;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAES,IAAI,UAA2C;AACvD,UAAM,uBAAuB,SAAS,IAAI,qBAAqB;AAE/D,UAAM,6BAA6B,CAAC,qBAAqB,SAAkB,gCAAgC;AAC3G,WAAO,qBAAqB,YAAY,kCAAkC,0BAA0B;AAAA,EACrG;AACD;AAEA,gBAAgB,kCAAkC;",
  "names": []
}
