var f=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var c=(n,t,i,o)=>{for(var e=o>1?void 0:o?p(t,i):t,a=n.length-1,l;a>=0;a--)(l=n[a])&&(e=(o?l(t,i,e):l(e))||e);return o&&e&&f(t,i,e),e},s=(n,t)=>(i,o)=>t(i,o,n);import{Disposable as m}from"../../../../../vs/base/common/lifecycle.js";import*as u from"../../../../../vs/base/common/path.js";import"../../../../../vs/editor/browser/editorBrowser.js";import{EditorContributionInstantiation as g,registerEditorContribution as h}from"../../../../../vs/editor/browser/editorExtensions.js";import"../../../../../vs/editor/common/editorCommon.js";import*as d from"../../../../../vs/nls.js";import{IConfigurationService as v}from"../../../../../vs/platform/configuration/common/configuration.js";import{INotificationService as b,Severity as _}from"../../../../../vs/platform/notification/common/notification.js";let r=class extends m{constructor(i,o,e){super();this._editor=i;this._notificationService=o;this._configurationService=e;this._register(this._editor.onDidChangeModel(a=>this._update())),this._update()}static ID="editor.contrib.largeFileOptimizationsWarner";_update(){const i=this._editor.getModel();if(i&&i.isTooLargeForTokenization()){const o=d.localize({key:"largeFile",comment:["Variable 0 will be a file name."]},"{0}: tokenization, wrapping, folding, codelens, word highlighting and sticky scroll have been turned off for this large file in order to reduce memory usage and avoid freezing or crashing.",u.basename(i.uri.path));this._notificationService.prompt(_.Info,o,[{label:d.localize("removeOptimizations","Forcefully Enable Features"),run:()=>{this._configurationService.updateValue("editor.largeFileOptimizations",!1).then(()=>{this._notificationService.info(d.localize("reopenFilePrompt","Please reopen file in order for this setting to take effect."))},e=>{this._notificationService.error(e)})}}],{neverShowAgain:{id:"editor.contrib.largeFileOptimizationsWarner"}})}}};r=c([s(1,b),s(2,v)],r),h(r.ID,r,g.AfterFirstRender);export{r as LargeFileOptimizationsWarner};
