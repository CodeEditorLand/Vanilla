{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/codeEditor/browser/toggleRenderWhitespace.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize, localize2 } from '../../../../nls.js';\nimport { Action2, MenuId, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { Categories } from '../../../../platform/action/common/actionCommonCategories.js';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\n\nclass ToggleRenderWhitespaceAction extends Action2 {\n\n\tstatic readonly ID = 'editor.action.toggleRenderWhitespace';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleRenderWhitespaceAction.ID,\n\t\t\ttitle: {\n\t\t\t\t...localize2('toggleRenderWhitespace', \"Toggle Render Whitespace\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miToggleRenderWhitespace', comment: ['&& denotes a mnemonic'] }, \"&&Render Whitespace\"),\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\ttoggled: ContextKeyExpr.notEquals('config.editor.renderWhitespace', 'none'),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\tgroup: '4_editor',\n\t\t\t\torder: 4\n\t\t\t}\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst renderWhitespace = configurationService.getValue<string>('editor.renderWhitespace');\n\n\t\tlet newRenderWhitespace: string;\n\t\tif (renderWhitespace === 'none') {\n\t\t\tnewRenderWhitespace = 'all';\n\t\t} else {\n\t\t\tnewRenderWhitespace = 'none';\n\t\t}\n\n\t\treturn configurationService.updateValue('editor.renderWhitespace', newRenderWhitespace);\n\t}\n}\n\nregisterAction2(ToggleRenderWhitespaceAction);\n"],
  "mappings": ";;AAKA,SAAS,UAAU,iBAAiB;AACpC,SAAS,SAAS,QAAQ,uBAAuB;AACjD,SAAS,6BAA6B;AACtC,SAAS,sBAAsB;AAC/B,SAAS,kBAAkB;AAC3B,SAAS,wBAAwB;AAEjC,MAAM,qCAAqC,QAAQ;AAAA,EAZnD,OAYmD;AAAA;AAAA;AAAA,EAElD,OAAgB,KAAK;AAAA,EAErB,cAAc;AACb,UAAM;AAAA,MACL,IAAI,6BAA6B;AAAA,MACjC,OAAO;AAAA,QACN,GAAG,UAAU,0BAA0B,0BAA0B;AAAA,QACjE,eAAe,SAAS,EAAE,KAAK,4BAA4B,SAAS,CAAC,uBAAuB,EAAE,GAAG,qBAAqB;AAAA,MACvH;AAAA,MACA,UAAU,WAAW;AAAA,MACrB,IAAI;AAAA,MACJ,SAAS,eAAe,UAAU,kCAAkC,MAAM;AAAA,MAC1E,MAAM;AAAA,QACL,IAAI,OAAO;AAAA,QACX,OAAO;AAAA,QACP,OAAO;AAAA,MACR;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAES,IAAI,UAA2C;AACvD,UAAM,uBAAuB,SAAS,IAAI,qBAAqB;AAE/D,UAAM,mBAAmB,qBAAqB,SAAiB,yBAAyB;AAExF,QAAI;AACJ,QAAI,qBAAqB,QAAQ;AAChC,4BAAsB;AAAA,IACvB,OAAO;AACN,4BAAsB;AAAA,IACvB;AAEA,WAAO,qBAAqB,YAAY,2BAA2B,mBAAmB;AAAA,EACvF;AACD;AAEA,gBAAgB,4BAA4B;",
  "names": []
}
