{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/codeEditor/browser/toggleRenderWhitespace.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport { Categories } from \"../../../../platform/action/common/actionCommonCategories.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\n\nclass ToggleRenderWhitespaceAction extends Action2 {\n\tstatic readonly ID = \"editor.action.toggleRenderWhitespace\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleRenderWhitespaceAction.ID,\n\t\t\ttitle: {\n\t\t\t\t...localize2(\n\t\t\t\t\t\"toggleRenderWhitespace\",\n\t\t\t\t\t\"Toggle Render Whitespace\",\n\t\t\t\t),\n\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"miToggleRenderWhitespace\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"&&Render Whitespace\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\ttoggled: ContextKeyExpr.notEquals(\n\t\t\t\t\"config.editor.renderWhitespace\",\n\t\t\t\t\"none\",\n\t\t\t),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\tgroup: \"4_editor\",\n\t\t\t\torder: 4,\n\t\t\t},\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst renderWhitespace = configurationService.getValue<string>(\n\t\t\t\"editor.renderWhitespace\",\n\t\t);\n\n\t\tlet newRenderWhitespace: string;\n\t\tif (renderWhitespace === \"none\") {\n\t\t\tnewRenderWhitespace = \"all\";\n\t\t} else {\n\t\t\tnewRenderWhitespace = \"none\";\n\t\t}\n\n\t\treturn configurationService.updateValue(\n\t\t\t\"editor.renderWhitespace\",\n\t\t\tnewRenderWhitespace,\n\t\t);\n\t}\n}\n\nregisterAction2(ToggleRenderWhitespaceAction);\n"],
  "mappings": ";;AAKA,SAAS,UAAU,iBAAiB;AACpC,SAAS,kBAAkB;AAC3B;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,6BAA6B;AACtC,SAAS,sBAAsB;AAG/B,MAAM,qCAAqC,QAAQ;AAAA,EAhBnD,OAgBmD;AAAA;AAAA;AAAA,EAClD,OAAgB,KAAK;AAAA,EAErB,cAAc;AACb,UAAM;AAAA,MACL,IAAI,6BAA6B;AAAA,MACjC,OAAO;AAAA,QACN,GAAG;AAAA,UACF;AAAA,UACA;AAAA,QACD;AAAA,QACA,eAAe;AAAA,UACd;AAAA,YACC,KAAK;AAAA,YACL,SAAS,CAAC,uBAAuB;AAAA,UAClC;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,MACA,UAAU,WAAW;AAAA,MACrB,IAAI;AAAA,MACJ,SAAS,eAAe;AAAA,QACvB;AAAA,QACA;AAAA,MACD;AAAA,MACA,MAAM;AAAA,QACL,IAAI,OAAO;AAAA,QACX,OAAO;AAAA,QACP,OAAO;AAAA,MACR;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAES,IAAI,UAA2C;AACvD,UAAM,uBAAuB,SAAS,IAAI,qBAAqB;AAE/D,UAAM,mBAAmB,qBAAqB;AAAA,MAC7C;AAAA,IACD;AAEA,QAAI;AACJ,QAAI,qBAAqB,QAAQ;AAChC,4BAAsB;AAAA,IACvB,OAAO;AACN,4BAAsB;AAAA,IACvB;AAEA,WAAO,qBAAqB;AAAA,MAC3B;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AAEA,gBAAgB,4BAA4B;",
  "names": []
}
