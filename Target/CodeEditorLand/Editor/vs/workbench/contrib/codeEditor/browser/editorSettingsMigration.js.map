{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/codeEditor/browser/editorSettingsMigration.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tEditorSettingMigration,\n\ttype ISettingsWriter,\n} from \"../../../../editor/browser/config/migrateOptions.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\ttype ConfigurationKeyValuePairs,\n\tExtensions,\n\ttype IConfigurationMigrationRegistry,\n} from \"../../../common/configuration.js\";\n\nRegistry.as<IConfigurationMigrationRegistry>(\n\tExtensions.ConfigurationMigration,\n).registerConfigurationMigrations(\n\tEditorSettingMigration.items.map((item) => ({\n\t\tkey: `editor.${item.key}`,\n\t\tmigrateFn: (value, accessor) => {\n\t\t\tconst configurationKeyValuePairs: ConfigurationKeyValuePairs = [];\n\t\t\tconst writer: ISettingsWriter = (key, value) =>\n\t\t\t\tconfigurationKeyValuePairs.push([`editor.${key}`, { value }]);\n\t\t\titem.migrate(value, (key) => accessor(`editor.${key}`), writer);\n\t\t\treturn configurationKeyValuePairs;\n\t\t},\n\t})),\n);\n"],
  "mappings": ";;AAKA;AAAA,EACC;AAAA,OAEM;AACP,SAAS,gBAAgB;AACzB;AAAA,EAEC;AAAA,OAEM;AAEP,SAAS;AAAA,EACR,WAAW;AACZ,EAAE;AAAA,EACD,uBAAuB,MAAM,IAAI,CAAC,UAAU;AAAA,IAC3C,KAAK,UAAU,KAAK,GAAG;AAAA,IACvB,WAAW,wBAAC,OAAO,aAAa;AAC/B,YAAM,6BAAyD,CAAC;AAChE,YAAM,SAA0B,wBAAC,KAAKA,WACrC,2BAA2B,KAAK,CAAC,UAAU,GAAG,IAAI,EAAE,OAAAA,OAAM,CAAC,CAAC,GAD7B;AAEhC,WAAK,QAAQ,OAAO,CAAC,QAAQ,SAAS,UAAU,GAAG,EAAE,GAAG,MAAM;AAC9D,aAAO;AAAA,IACR,GANW;AAAA,EAOZ,EAAE;AACH;",
  "names": ["value"]
}
