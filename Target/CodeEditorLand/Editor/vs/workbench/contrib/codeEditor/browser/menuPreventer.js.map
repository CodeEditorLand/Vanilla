{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/codeEditor/browser/menuPreventer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyMod } from '../../../../base/common/keyCodes.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { ICodeEditor } from '../../../../editor/browser/editorBrowser.js';\nimport { EditorContributionInstantiation, registerEditorContribution } from '../../../../editor/browser/editorExtensions.js';\nimport { IEditorContribution } from '../../../../editor/common/editorCommon.js';\n\n/**\n * Prevents the top-level menu from showing up when doing Alt + Click in the editor\n */\nexport class MenuPreventer extends Disposable implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.menuPreventer';\n\n\tprivate _editor: ICodeEditor;\n\tprivate _altListeningMouse: boolean;\n\tprivate _altMouseTriggered: boolean;\n\n\tconstructor(editor: ICodeEditor) {\n\t\tsuper();\n\t\tthis._editor = editor;\n\t\tthis._altListeningMouse = false;\n\t\tthis._altMouseTriggered = false;\n\n\t\t// A global crossover handler to prevent menu bar from showing up\n\t\t// When <alt> is hold, we will listen to mouse events and prevent\n\t\t// the release event up <alt> if the mouse is triggered.\n\n\t\tthis._register(this._editor.onMouseDown((e) => {\n\t\t\tif (this._altListeningMouse) {\n\t\t\t\tthis._altMouseTriggered = true;\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._editor.onKeyDown((e) => {\n\t\t\tif (e.equals(KeyMod.Alt)) {\n\t\t\t\tif (!this._altListeningMouse) {\n\t\t\t\t\tthis._altMouseTriggered = false;\n\t\t\t\t}\n\t\t\t\tthis._altListeningMouse = true;\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._editor.onKeyUp((e) => {\n\t\t\tif (e.equals(KeyMod.Alt)) {\n\t\t\t\tif (this._altMouseTriggered) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t\tthis._altListeningMouse = false;\n\t\t\t\tthis._altMouseTriggered = false;\n\t\t\t}\n\t\t}));\n\t}\n}\n\nregisterEditorContribution(MenuPreventer.ID, MenuPreventer, EditorContributionInstantiation.BeforeFirstInteraction);\n"],
  "mappings": ";;AAKA,SAAS,cAAc;AACvB,SAAS,kBAAkB;AAC3B,SAAS,mBAAmB;AAC5B,SAAS,iCAAiC,kCAAkC;AAC5E,SAAS,2BAA2B;AAK7B,MAAM,sBAAsB,WAA0C;AAAA,EAd7E,OAc6E;AAAA;AAAA;AAAA,EAE5E,OAAuB,KAAK;AAAA,EAEpB;AAAA,EACA;AAAA,EACA;AAAA,EAER,YAAY,QAAqB;AAChC,UAAM;AACN,SAAK,UAAU;AACf,SAAK,qBAAqB;AAC1B,SAAK,qBAAqB;AAM1B,SAAK,UAAU,KAAK,QAAQ,YAAY,CAAC,MAAM;AAC9C,UAAI,KAAK,oBAAoB;AAC5B,aAAK,qBAAqB;AAAA,MAC3B;AAAA,IACD,CAAC,CAAC;AAEF,SAAK,UAAU,KAAK,QAAQ,UAAU,CAAC,MAAM;AAC5C,UAAI,EAAE,OAAO,OAAO,GAAG,GAAG;AACzB,YAAI,CAAC,KAAK,oBAAoB;AAC7B,eAAK,qBAAqB;AAAA,QAC3B;AACA,aAAK,qBAAqB;AAAA,MAC3B;AAAA,IACD,CAAC,CAAC;AAEF,SAAK,UAAU,KAAK,QAAQ,QAAQ,CAAC,MAAM;AAC1C,UAAI,EAAE,OAAO,OAAO,GAAG,GAAG;AACzB,YAAI,KAAK,oBAAoB;AAC5B,YAAE,eAAe;AAAA,QAClB;AACA,aAAK,qBAAqB;AAC1B,aAAK,qBAAqB;AAAA,MAC3B;AAAA,IACD,CAAC,CAAC;AAAA,EACH;AACD;AAEA,2BAA2B,cAAc,IAAI,eAAe,gCAAgC,sBAAsB;",
  "names": []
}
