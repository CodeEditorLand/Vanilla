{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/codeEditor/browser/simpleEditorOptions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEditorOptions } from '../../../../editor/common/config/editorOptions.js';\nimport { ICodeEditorWidgetOptions } from '../../../../editor/browser/widget/codeEditor/codeEditorWidget.js';\nimport { ContextMenuController } from '../../../../editor/contrib/contextmenu/browser/contextmenu.js';\nimport { SnippetController2 } from '../../../../editor/contrib/snippet/browser/snippetController2.js';\nimport { SuggestController } from '../../../../editor/contrib/suggest/browser/suggestController.js';\nimport { MenuPreventer } from './menuPreventer.js';\nimport { SelectionClipboardContributionID } from './selectionClipboard.js';\nimport { TabCompletionController } from '../../snippets/browser/tabCompletion.js';\nimport { EditorExtensionsRegistry } from '../../../../editor/browser/editorExtensions.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { IDisposable } from '../../../../base/common/lifecycle.js';\nimport { selectionBackground, inputBackground, inputForeground, editorSelectionBackground } from '../../../../platform/theme/common/colorRegistry.js';\n\nexport function getSimpleEditorOptions(configurationService: IConfigurationService): IEditorOptions {\n\treturn {\n\t\twordWrap: 'on',\n\t\toverviewRulerLanes: 0,\n\t\tglyphMargin: false,\n\t\tlineNumbers: 'off',\n\t\tfolding: false,\n\t\tselectOnLineNumbers: false,\n\t\thideCursorInOverviewRuler: true,\n\t\tselectionHighlight: false,\n\t\tscrollbar: {\n\t\t\thorizontal: 'hidden',\n\t\t\talwaysConsumeMouseWheel: false\n\t\t},\n\t\tlineDecorationsWidth: 0,\n\t\toverviewRulerBorder: false,\n\t\tscrollBeyondLastLine: false,\n\t\trenderLineHighlight: 'none',\n\t\tfixedOverflowWidgets: true,\n\t\tacceptSuggestionOnEnter: 'smart',\n\t\tdragAndDrop: false,\n\t\trevealHorizontalRightPadding: 5,\n\t\tminimap: {\n\t\t\tenabled: false\n\t\t},\n\t\tguides: {\n\t\t\tindentation: false\n\t\t},\n\t\taccessibilitySupport: configurationService.getValue<'auto' | 'off' | 'on'>('editor.accessibilitySupport'),\n\t\tcursorBlinking: configurationService.getValue<'blink' | 'smooth' | 'phase' | 'expand' | 'solid'>('editor.cursorBlinking'),\n\t\texperimentalEditContextEnabled: configurationService.getValue<boolean>('editor.experimentalEditContextEnabled'),\n\t};\n}\n\nexport function getSimpleCodeEditorWidgetOptions(): ICodeEditorWidgetOptions {\n\treturn {\n\t\tisSimpleWidget: true,\n\t\tcontributions: EditorExtensionsRegistry.getSomeEditorContributions([\n\t\t\tMenuPreventer.ID,\n\t\t\tSelectionClipboardContributionID,\n\t\t\tContextMenuController.ID,\n\t\t\tSuggestController.ID,\n\t\t\tSnippetController2.ID,\n\t\t\tTabCompletionController.ID,\n\t\t])\n\t};\n}\n\n/**\n * Should be called to set the styling on editors that are appearing as just input boxes\n * @param editorContainerSelector An element selector that will match the container of the editor\n */\nexport function setupSimpleEditorSelectionStyling(editorContainerSelector: string): IDisposable {\n\t// Override styles in selections.ts\n\treturn registerThemingParticipant((theme, collector) => {\n\t\tconst selectionBackgroundColor = theme.getColor(selectionBackground);\n\n\t\tif (selectionBackgroundColor) {\n\t\t\t// Override inactive selection bg\n\t\t\tconst inputBackgroundColor = theme.getColor(inputBackground);\n\t\t\tif (inputBackgroundColor) {\n\t\t\t\tcollector.addRule(`${editorContainerSelector} .monaco-editor-background { background-color: ${inputBackgroundColor}; } `);\n\t\t\t\tcollector.addRule(`${editorContainerSelector} .monaco-editor .selected-text { background-color: ${inputBackgroundColor.transparent(0.4)}; }`);\n\t\t\t}\n\n\t\t\t// Override selected fg\n\t\t\tconst inputForegroundColor = theme.getColor(inputForeground);\n\t\t\tif (inputForegroundColor) {\n\t\t\t\tcollector.addRule(`${editorContainerSelector} .monaco-editor .view-line span.inline-selected-text { color: ${inputForegroundColor}; }`);\n\t\t\t}\n\n\t\t\tcollector.addRule(`${editorContainerSelector} .monaco-editor .focused .selected-text { background-color: ${selectionBackgroundColor}; }`);\n\t\t} else {\n\t\t\t// Use editor selection color if theme has not set a selection background color\n\t\t\tcollector.addRule(`${editorContainerSelector} .monaco-editor .focused .selected-text { background-color: ${theme.getColor(editorSelectionBackground)}; }`);\n\t\t}\n\t});\n\n}\n"],
  "mappings": ";;AAKA,SAAS,sBAAsB;AAC/B,SAAS,gCAAgC;AACzC,SAAS,6BAA6B;AACtC,SAAS,0BAA0B;AACnC,SAAS,yBAAyB;AAClC,SAAS,qBAAqB;AAC9B,SAAS,wCAAwC;AACjD,SAAS,+BAA+B;AACxC,SAAS,gCAAgC;AACzC,SAAS,6BAA6B;AACtC,SAAS,kCAAkC;AAC3C,SAAS,mBAAmB;AAC5B,SAAS,qBAAqB,iBAAiB,iBAAiB,iCAAiC;AAE1F,SAAS,uBAAuB,sBAA6D;AACnG,SAAO;AAAA,IACN,UAAU;AAAA,IACV,oBAAoB;AAAA,IACpB,aAAa;AAAA,IACb,aAAa;AAAA,IACb,SAAS;AAAA,IACT,qBAAqB;AAAA,IACrB,2BAA2B;AAAA,IAC3B,oBAAoB;AAAA,IACpB,WAAW;AAAA,MACV,YAAY;AAAA,MACZ,yBAAyB;AAAA,IAC1B;AAAA,IACA,sBAAsB;AAAA,IACtB,qBAAqB;AAAA,IACrB,sBAAsB;AAAA,IACtB,qBAAqB;AAAA,IACrB,sBAAsB;AAAA,IACtB,yBAAyB;AAAA,IACzB,aAAa;AAAA,IACb,8BAA8B;AAAA,IAC9B,SAAS;AAAA,MACR,SAAS;AAAA,IACV;AAAA,IACA,QAAQ;AAAA,MACP,aAAa;AAAA,IACd;AAAA,IACA,sBAAsB,qBAAqB,SAAgC,6BAA6B;AAAA,IACxG,gBAAgB,qBAAqB,SAA4D,uBAAuB;AAAA,IACxH,gCAAgC,qBAAqB,SAAkB,uCAAuC;AAAA,EAC/G;AACD;AAhCgB;AAkCT,SAAS,mCAA6D;AAC5E,SAAO;AAAA,IACN,gBAAgB;AAAA,IAChB,eAAe,yBAAyB,2BAA2B;AAAA,MAClE,cAAc;AAAA,MACd;AAAA,MACA,sBAAsB;AAAA,MACtB,kBAAkB;AAAA,MAClB,mBAAmB;AAAA,MACnB,wBAAwB;AAAA,IACzB,CAAC;AAAA,EACF;AACD;AAZgB;AAkBT,SAAS,kCAAkC,yBAA8C;AAE/F,SAAO,2BAA2B,CAAC,OAAO,cAAc;AACvD,UAAM,2BAA2B,MAAM,SAAS,mBAAmB;AAEnE,QAAI,0BAA0B;AAE7B,YAAM,uBAAuB,MAAM,SAAS,eAAe;AAC3D,UAAI,sBAAsB;AACzB,kBAAU,QAAQ,GAAG,uBAAuB,kDAAkD,oBAAoB,MAAM;AACxH,kBAAU,QAAQ,GAAG,uBAAuB,sDAAsD,qBAAqB,YAAY,GAAG,CAAC,KAAK;AAAA,MAC7I;AAGA,YAAM,uBAAuB,MAAM,SAAS,eAAe;AAC3D,UAAI,sBAAsB;AACzB,kBAAU,QAAQ,GAAG,uBAAuB,iEAAiE,oBAAoB,KAAK;AAAA,MACvI;AAEA,gBAAU,QAAQ,GAAG,uBAAuB,+DAA+D,wBAAwB,KAAK;AAAA,IACzI,OAAO;AAEN,gBAAU,QAAQ,GAAG,uBAAuB,+DAA+D,MAAM,SAAS,yBAAyB,CAAC,KAAK;AAAA,IAC1J;AAAA,EACD,CAAC;AAEF;AA1BgB;",
  "names": []
}
