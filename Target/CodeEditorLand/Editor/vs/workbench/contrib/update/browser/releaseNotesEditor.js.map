{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/update/browser/releaseNotesEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './media/releasenoteseditor.css';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { escapeMarkdownSyntaxTokens } from '../../../../base/common/htmlContent.js';\nimport { KeybindingParser } from '../../../../base/common/keybindingParser.js';\nimport { escape } from '../../../../base/common/strings.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { generateUuid } from '../../../../base/common/uuid.js';\nimport { TokenizationRegistry } from '../../../../editor/common/languages.js';\nimport { generateTokensCSSForColorMap } from '../../../../editor/common/languages/supports/tokenization.js';\nimport { ILanguageService } from '../../../../editor/common/languages/language.js';\nimport * as nls from '../../../../nls.js';\nimport { IEnvironmentService } from '../../../../platform/environment/common/environment.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { IProductService } from '../../../../platform/product/common/productService.js';\nimport { asTextOrError, IRequestService } from '../../../../platform/request/common/request.js';\nimport { DEFAULT_MARKDOWN_STYLES, renderMarkdownDocument } from '../../markdown/browser/markdownDocumentRenderer.js';\nimport { WebviewInput } from '../../webviewPanel/browser/webviewEditorInput.js';\nimport { IWebviewWorkbenchService } from '../../webviewPanel/browser/webviewWorkbenchService.js';\nimport { IEditorGroupsService } from '../../../services/editor/common/editorGroupsService.js';\nimport { ACTIVE_GROUP, IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { getTelemetryLevel, supportsTelemetry } from '../../../../platform/telemetry/common/telemetryUtils.js';\nimport { IConfigurationChangeEvent, IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { TelemetryLevel } from '../../../../platform/telemetry/common/telemetry.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { SimpleSettingRenderer } from '../../markdown/browser/markdownSettingRenderer.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { ICodeEditorService } from '../../../../editor/browser/services/codeEditorService.js';\n\nexport class ReleaseNotesManager {\n\tprivate readonly _simpleSettingRenderer: SimpleSettingRenderer;\n\tprivate readonly _releaseNotesCache = new Map<string, Promise<string>>();\n\n\tprivate _currentReleaseNotes: WebviewInput | undefined = undefined;\n\tprivate _lastText: string | undefined;\n\tprivate readonly disposables = new DisposableStore();\n\n\tpublic constructor(\n\t\t@IEnvironmentService private readonly _environmentService: IEnvironmentService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@IOpenerService private readonly _openerService: IOpenerService,\n\t\t@IRequestService private readonly _requestService: IRequestService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IEditorGroupsService private readonly _editorGroupService: IEditorGroupsService,\n\t\t@ICodeEditorService private readonly _codeEditorService: ICodeEditorService,\n\t\t@IWebviewWorkbenchService private readonly _webviewWorkbenchService: IWebviewWorkbenchService,\n\t\t@IExtensionService private readonly _extensionService: IExtensionService,\n\t\t@IProductService private readonly _productService: IProductService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tTokenizationRegistry.onDidChange(() => {\n\t\t\treturn this.updateHtml();\n\t\t});\n\n\t\t_configurationService.onDidChangeConfiguration(this.onDidChangeConfiguration, this, this.disposables);\n\t\t_webviewWorkbenchService.onDidChangeActiveWebviewEditor(this.onDidChangeActiveWebviewEditor, this, this.disposables);\n\t\tthis._simpleSettingRenderer = this._instantiationService.createInstance(SimpleSettingRenderer);\n\t}\n\n\tprivate async updateHtml() {\n\t\tif (!this._currentReleaseNotes || !this._lastText) {\n\t\t\treturn;\n\t\t}\n\t\tconst html = await this.renderBody(this._lastText);\n\t\tif (this._currentReleaseNotes) {\n\t\t\tthis._currentReleaseNotes.webview.setHtml(html);\n\t\t}\n\t}\n\n\tpublic async show(version: string, useCurrentFile: boolean): Promise<boolean> {\n\t\tconst releaseNoteText = await this.loadReleaseNotes(version, useCurrentFile);\n\t\tthis._lastText = releaseNoteText;\n\t\tconst html = await this.renderBody(releaseNoteText);\n\t\tconst title = nls.localize('releaseNotesInputName', \"Release Notes: {0}\", version);\n\n\t\tconst activeEditorPane = this._editorService.activeEditorPane;\n\t\tif (this._currentReleaseNotes) {\n\t\t\tthis._currentReleaseNotes.setName(title);\n\t\t\tthis._currentReleaseNotes.webview.setHtml(html);\n\t\t\tthis._webviewWorkbenchService.revealWebview(this._currentReleaseNotes, activeEditorPane ? activeEditorPane.group : this._editorGroupService.activeGroup, false);\n\t\t} else {\n\t\t\tthis._currentReleaseNotes = this._webviewWorkbenchService.openWebview(\n\t\t\t\t{\n\t\t\t\t\ttitle,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\ttryRestoreScrollPosition: true,\n\t\t\t\t\t\tenableFindWidget: true,\n\t\t\t\t\t\tdisableServiceWorker: true,\n\t\t\t\t\t},\n\t\t\t\t\tcontentOptions: {\n\t\t\t\t\t\tlocalResourceRoots: [],\n\t\t\t\t\t\tallowScripts: true\n\t\t\t\t\t},\n\t\t\t\t\textension: undefined\n\t\t\t\t},\n\t\t\t\t'releaseNotes',\n\t\t\t\ttitle,\n\t\t\t\t{ group: ACTIVE_GROUP, preserveFocus: false });\n\n\t\t\tthis._currentReleaseNotes.webview.onDidClickLink(uri => this.onDidClickLink(URI.parse(uri)));\n\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tdisposables.add(this._currentReleaseNotes.webview.onMessage(e => {\n\t\t\t\tif (e.message.type === 'showReleaseNotes') {\n\t\t\t\t\tthis._configurationService.updateValue('update.showReleaseNotes', e.message.value);\n\t\t\t\t} else if (e.message.type === 'clickSetting') {\n\t\t\t\t\tconst x = this._currentReleaseNotes?.webview.container.offsetLeft + e.message.value.x;\n\t\t\t\t\tconst y = this._currentReleaseNotes?.webview.container.offsetTop + e.message.value.y;\n\t\t\t\t\tthis._simpleSettingRenderer.updateSetting(URI.parse(e.message.value.uri), x, y);\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tdisposables.add(this._currentReleaseNotes.onWillDispose(() => {\n\t\t\t\tdisposables.dispose();\n\t\t\t\tthis._currentReleaseNotes = undefined;\n\t\t\t}));\n\n\t\t\tthis._currentReleaseNotes.webview.setHtml(html);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async loadReleaseNotes(version: string, useCurrentFile: boolean): Promise<string> {\n\t\tconst match = /^(\\d+\\.\\d+)\\./.exec(version);\n\t\tif (!match) {\n\t\t\tthrow new Error('not found');\n\t\t}\n\n\t\tconst versionLabel = match[1].replace(/\\./g, '_');\n\t\tconst baseUrl = 'https://code.visualstudio.com/raw';\n\t\tconst url = `${baseUrl}/v${versionLabel}.md`;\n\t\tconst unassigned = nls.localize('unassigned', \"unassigned\");\n\n\t\tconst escapeMdHtml = (text: string): string => {\n\t\t\treturn escape(text).replace(/\\\\/g, '\\\\\\\\');\n\t\t};\n\n\t\tconst patchKeybindings = (text: string): string => {\n\t\t\tconst kb = (match: string, kb: string) => {\n\t\t\t\tconst keybinding = this._keybindingService.lookupKeybinding(kb);\n\n\t\t\t\tif (!keybinding) {\n\t\t\t\t\treturn unassigned;\n\t\t\t\t}\n\n\t\t\t\treturn keybinding.getLabel() || unassigned;\n\t\t\t};\n\n\t\t\tconst kbstyle = (match: string, kb: string) => {\n\t\t\t\tconst keybinding = KeybindingParser.parseKeybinding(kb);\n\n\t\t\t\tif (!keybinding) {\n\t\t\t\t\treturn unassigned;\n\t\t\t\t}\n\n\t\t\t\tconst resolvedKeybindings = this._keybindingService.resolveKeybinding(keybinding);\n\n\t\t\t\tif (resolvedKeybindings.length === 0) {\n\t\t\t\t\treturn unassigned;\n\t\t\t\t}\n\n\t\t\t\treturn resolvedKeybindings[0].getLabel() || unassigned;\n\t\t\t};\n\n\t\t\tconst kbCode = (match: string, binding: string) => {\n\t\t\t\tconst resolved = kb(match, binding);\n\t\t\t\treturn resolved ? `<code title=\"${binding}\">${escapeMdHtml(resolved)}</code>` : resolved;\n\t\t\t};\n\n\t\t\tconst kbstyleCode = (match: string, binding: string) => {\n\t\t\t\tconst resolved = kbstyle(match, binding);\n\t\t\t\treturn resolved ? `<code title=\"${binding}\">${escapeMdHtml(resolved)}</code>` : resolved;\n\t\t\t};\n\n\t\t\treturn text\n\t\t\t\t.replace(/`kb\\(([a-z.\\d\\-]+)\\)`/gi, kbCode)\n\t\t\t\t.replace(/`kbstyle\\(([^\\)]+)\\)`/gi, kbstyleCode)\n\t\t\t\t.replace(/kb\\(([a-z.\\d\\-]+)\\)/gi, (match, binding) => escapeMarkdownSyntaxTokens(kb(match, binding)))\n\t\t\t\t.replace(/kbstyle\\(([^\\)]+)\\)/gi, (match, binding) => escapeMarkdownSyntaxTokens(kbstyle(match, binding)));\n\t\t};\n\n\t\tconst fetchReleaseNotes = async () => {\n\t\t\tlet text;\n\t\t\ttry {\n\t\t\t\tif (useCurrentFile) {\n\t\t\t\t\tconst file = this._codeEditorService.getActiveCodeEditor()?.getModel()?.getValue();\n\t\t\t\t\ttext = file ? file.substring(file.indexOf('#')) : undefined;\n\t\t\t\t} else {\n\t\t\t\t\ttext = await asTextOrError(await this._requestService.request({ url }, CancellationToken.None));\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\tthrow new Error('Failed to fetch release notes');\n\t\t\t}\n\n\t\t\tif (!text || (!/^#\\s/.test(text) && !useCurrentFile)) { // release notes always starts with `#` followed by whitespace, except when using the current file\n\t\t\t\tthrow new Error('Invalid release notes');\n\t\t\t}\n\n\t\t\treturn patchKeybindings(text);\n\t\t};\n\n\t\t// Don't cache the current file\n\t\tif (useCurrentFile) {\n\t\t\treturn fetchReleaseNotes();\n\t\t}\n\t\tif (!this._releaseNotesCache.has(version)) {\n\t\t\tthis._releaseNotesCache.set(version, (async () => {\n\t\t\t\ttry {\n\t\t\t\t\treturn await fetchReleaseNotes();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tthis._releaseNotesCache.delete(version);\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t})());\n\t\t}\n\n\t\treturn this._releaseNotesCache.get(version)!;\n\t}\n\n\tprivate async onDidClickLink(uri: URI) {\n\t\tif (uri.scheme === Schemas.codeSetting) {\n\t\t\t// handled in receive message\n\t\t} else {\n\t\t\tthis.addGAParameters(uri, 'ReleaseNotes')\n\t\t\t\t.then(updated => this._openerService.open(updated, { allowCommands: ['workbench.action.openSettings'] }))\n\t\t\t\t.then(undefined, onUnexpectedError);\n\t\t}\n\t}\n\n\tprivate async addGAParameters(uri: URI, origin: string, experiment = '1'): Promise<URI> {\n\t\tif (supportsTelemetry(this._productService, this._environmentService) && getTelemetryLevel(this._configurationService) === TelemetryLevel.USAGE) {\n\t\t\tif (uri.scheme === 'https' && uri.authority === 'code.visualstudio.com') {\n\t\t\t\treturn uri.with({ query: `${uri.query ? uri.query + '&' : ''}utm_source=VsCode&utm_medium=${encodeURIComponent(origin)}&utm_content=${encodeURIComponent(experiment)}` });\n\t\t\t}\n\t\t}\n\t\treturn uri;\n\t}\n\n\tprivate async renderBody(text: string) {\n\t\tconst nonce = generateUuid();\n\n\t\tconst content = await renderMarkdownDocument(text, this._extensionService, this._languageService, {\n\t\t\tshouldSanitize: false,\n\t\t\tmarkedExtensions: [{\n\t\t\t\trenderer: {\n\t\t\t\t\thtml: this._simpleSettingRenderer.getHtmlRenderer(),\n\t\t\t\t}\n\t\t\t}]\n\t\t});\n\t\tconst colorMap = TokenizationRegistry.getColorMap();\n\t\tconst css = colorMap ? generateTokensCSSForColorMap(colorMap) : '';\n\t\tconst showReleaseNotes = Boolean(this._configurationService.getValue<boolean>('update.showReleaseNotes'));\n\n\t\treturn `<!DOCTYPE html>\n\t\t<html>\n\t\t\t<head>\n\t\t\t\t<base href=\"https://code.visualstudio.com/raw/\">\n\t\t\t\t<meta http-equiv=\"Content-type\" content=\"text/html;charset=UTF-8\">\n\t\t\t\t<meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'none'; img-src https: data:; media-src https:; style-src 'nonce-${nonce}' https://code.visualstudio.com; script-src 'nonce-${nonce}';\">\n\t\t\t\t<style nonce=\"${nonce}\">\n\t\t\t\t\t${DEFAULT_MARKDOWN_STYLES}\n\t\t\t\t\t${css}\n\n\t\t\t\t\t/* codesetting */\n\n\t\t\t\t\tcode:has(.codesetting)+code {\n\t\t\t\t\t\tdisplay: none;\n\t\t\t\t\t}\n\n\t\t\t\t\tcode:has(.codesetting) {\n\t\t\t\t\t\tbackground-color: var(--vscode-textPreformat-background);\n\t\t\t\t\t\tcolor: var(--vscode-textPreformat-foreground);\n\t\t\t\t\t\tpadding-left: 1px;\n\t\t\t\t\t\tmargin-right: 3px;\n\t\t\t\t\t\tpadding-right: 0px;\n\t\t\t\t\t}\n\n\t\t\t\t\tcode:has(.codesetting):focus {\n\t\t\t\t\t\tborder: 1px solid var(--vscode-button-border, transparent);\n\t\t\t\t\t}\n\n\t\t\t\t\t.codesetting {\n\t\t\t\t\t\tcolor: var(--vscode-textPreformat-foreground);\n\t\t\t\t\t\tpadding: 0px 1px 1px 0px;\n\t\t\t\t\t\tfont-size: 0px;\n\t\t\t\t\t\toverflow: hidden;\n\t\t\t\t\t\ttext-overflow: ellipsis;\n\t\t\t\t\t\toutline-offset: 2px !important;\n\t\t\t\t\t\tbox-sizing: border-box;\n\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\tcursor: pointer;\n\t\t\t\t\t\tdisplay: inline;\n\t\t\t\t\t\tmargin-right: 3px;\n\t\t\t\t\t}\n\t\t\t\t\t.codesetting svg {\n\t\t\t\t\t\tfont-size: 12px;\n\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\tcursor: pointer;\n\t\t\t\t\t\tborder: 1px solid var(--vscode-button-secondaryBorder, transparent);\n\t\t\t\t\t\toutline: 1px solid transparent;\n\t\t\t\t\t\tline-height: 9px;\n\t\t\t\t\t\tmargin-bottom: -5px;\n\t\t\t\t\t\tpadding-left: 0px;\n\t\t\t\t\t\tpadding-top: 2px;\n\t\t\t\t\t\tpadding-bottom: 2px;\n\t\t\t\t\t\tpadding-right: 2px;\n\t\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t\t\ttext-decoration: none;\n\t\t\t\t\t\ttext-rendering: auto;\n\t\t\t\t\t\ttext-transform: none;\n\t\t\t\t\t\t-webkit-font-smoothing: antialiased;\n\t\t\t\t\t\t-moz-osx-font-smoothing: grayscale;\n\t\t\t\t\t\tuser-select: none;\n\t\t\t\t\t\t-webkit-user-select: none;\n\t\t\t\t\t}\n\t\t\t\t\t.codesetting .setting-name {\n\t\t\t\t\t\tfont-size: 13px;\n\t\t\t\t\t\tpadding-left: 2px;\n\t\t\t\t\t\tpadding-right: 3px;\n\t\t\t\t\t\tpadding-top: 1px;\n\t\t\t\t\t\tpadding-bottom: 1px;\n\t\t\t\t\t\tmargin-left: -5px;\n\t\t\t\t\t\tmargin-top: -3px;\n\t\t\t\t\t}\n\t\t\t\t\t.codesetting:hover {\n\t\t\t\t\t\tcolor: var(--vscode-textPreformat-foreground) !important;\n\t\t\t\t\t\ttext-decoration: none !important;\n\t\t\t\t\t}\n\t\t\t\t\tcode:has(.codesetting):hover {\n\t\t\t\t\t\tfilter: brightness(140%);\n\t\t\t\t\t\ttext-decoration: none !important;\n\t\t\t\t\t}\n\t\t\t\t\t.codesetting:focus {\n\t\t\t\t\t\toutline: 0 !important;\n\t\t\t\t\t\ttext-decoration: none !important;\n\t\t\t\t\t\tcolor: var(--vscode-button-hoverForeground) !important;\n\t\t\t\t\t}\n\t\t\t\t\t.codesetting .separator {\n\t\t\t\t\t\twidth: 1px;\n\t\t\t\t\t\theight: 14px;\n\t\t\t\t\t\tmargin-bottom: -3px;\n\t\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t\t\tbackground-color: var(--vscode-editor-background);\n\t\t\t\t\t\tfont-size: 12px;\n\t\t\t\t\t\tmargin-right: 8px;\n\t\t\t\t\t}\n\n\t\t\t\t\theader { display: flex; align-items: center; padding-top: 1em; }\n\t\t\t\t</style>\n\t\t\t</head>\n\t\t\t<body>\n\t\t\t\t${content}\n\t\t\t\t<script nonce=\"${nonce}\">\n\t\t\t\t\tconst vscode = acquireVsCodeApi();\n\t\t\t\t\tconst container = document.createElement('p');\n\t\t\t\t\tcontainer.style.display = 'flex';\n\t\t\t\t\tcontainer.style.alignItems = 'center';\n\n\t\t\t\t\tconst input = document.createElement('input');\n\t\t\t\t\tinput.type = 'checkbox';\n\t\t\t\t\tinput.id = 'showReleaseNotes';\n\t\t\t\t\tinput.checked = ${showReleaseNotes};\n\t\t\t\t\tcontainer.appendChild(input);\n\n\t\t\t\t\tconst label = document.createElement('label');\n\t\t\t\t\tlabel.htmlFor = 'showReleaseNotes';\n\t\t\t\t\tlabel.textContent = '${nls.localize('showOnUpdate', \"Show release notes after an update\")}';\n\t\t\t\t\tcontainer.appendChild(label);\n\n\t\t\t\t\tconst beforeElement = document.querySelector(\"body > h1\")?.nextElementSibling;\n\t\t\t\t\tif (beforeElement) {\n\t\t\t\t\t\tdocument.body.insertBefore(container, beforeElement);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdocument.body.appendChild(container);\n\t\t\t\t\t}\n\n\t\t\t\t\twindow.addEventListener('message', event => {\n\t\t\t\t\t\tif (event.data.type === 'showReleaseNotes') {\n\t\t\t\t\t\t\tinput.checked = event.data.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\twindow.addEventListener('click', event => {\n\t\t\t\t\t\tconst href = event.target.href ?? event.target.parentElement?.href ?? event.target.parentElement?.parentElement?.href;\n\t\t\t\t\t\tif (href && (href.startsWith('${Schemas.codeSetting}'))) {\n\t\t\t\t\t\t\tvscode.postMessage({ type: 'clickSetting', value: { uri: href, x: event.clientX, y: event.clientY }});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\twindow.addEventListener('keypress', event => {\n\t\t\t\t\t\tif (event.keyCode === 13) {\n\t\t\t\t\t\t\tif (event.target.children.length > 0 && event.target.children[0].href) {\n\t\t\t\t\t\t\t\tconst clientRect = event.target.getBoundingClientRect();\n\t\t\t\t\t\t\t\tvscode.postMessage({ type: 'clickSetting', value: { uri: event.target.children[0].href, x: clientRect.right , y: clientRect.bottom }});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tinput.addEventListener('change', event => {\n\t\t\t\t\t\tvscode.postMessage({ type: 'showReleaseNotes', value: input.checked }, '*');\n\t\t\t\t\t});\n\t\t\t\t</script>\n\t\t\t</body>\n\t\t</html>`;\n\t}\n\n\tprivate onDidChangeConfiguration(e: IConfigurationChangeEvent): void {\n\t\tif (e.affectsConfiguration('update.showReleaseNotes')) {\n\t\t\tthis.updateCheckboxWebview();\n\t\t}\n\t}\n\n\tprivate onDidChangeActiveWebviewEditor(input: WebviewInput | undefined): void {\n\t\tif (input && input === this._currentReleaseNotes) {\n\t\t\tthis.updateCheckboxWebview();\n\t\t}\n\t}\n\n\tprivate updateCheckboxWebview() {\n\t\tif (this._currentReleaseNotes) {\n\t\t\tthis._currentReleaseNotes.webview.postMessage({\n\t\t\t\ttype: 'showReleaseNotes',\n\t\t\t\tvalue: this._configurationService.getValue<boolean>('update.showReleaseNotes')\n\t\t\t});\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["match", "kb"]
}
