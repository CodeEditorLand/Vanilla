{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/update/browser/update.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"../../../../platform/update/common/update.config.contribution.js\";\nimport { mnemonicButtonLabel } from \"../../../../base/common/labels.js\";\nimport { isWindows } from \"../../../../base/common/platform.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport { Categories } from \"../../../../platform/action/common/actionCommonCategories.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IsWebContext } from \"../../../../platform/contextkey/common/contextkeys.js\";\nimport { IFileDialogService } from \"../../../../platform/dialogs/common/dialogs.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport product from \"../../../../platform/product/common/product.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\tIUpdateService,\n\tStateType,\n} from \"../../../../platform/update/common/update.js\";\nimport {\n\ttype IWorkbenchContributionsRegistry,\n\tExtensions as WorkbenchExtensions,\n} from \"../../../common/contributions.js\";\nimport { LifecyclePhase } from \"../../../services/lifecycle/common/lifecycle.js\";\nimport {\n\tShowCurrentReleaseNotesActionId,\n\tShowCurrentReleaseNotesFromCurrentFileActionId,\n} from \"../common/update.js\";\nimport {\n\tCONTEXT_UPDATE_STATE,\n\tDOWNLOAD_URL,\n\tProductContribution,\n\tRELEASE_NOTES_URL,\n\tSwitchProductQualityContribution,\n\tUpdateContribution,\n\tshowReleaseNotesInEditor,\n} from \"./update.js\";\n\nconst workbench = Registry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n);\n\nworkbench.registerWorkbenchContribution(\n\tProductContribution,\n\tLifecyclePhase.Restored,\n);\nworkbench.registerWorkbenchContribution(\n\tUpdateContribution,\n\tLifecyclePhase.Restored,\n);\nworkbench.registerWorkbenchContribution(\n\tSwitchProductQualityContribution,\n\tLifecyclePhase.Restored,\n);\n\n// Release notes\n\nexport class ShowCurrentReleaseNotesAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ShowCurrentReleaseNotesActionId,\n\t\t\ttitle: {\n\t\t\t\t...localize2(\"showReleaseNotes\", \"Show Release Notes\"),\n\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"mshowReleaseNotes\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"Show &&Release Notes\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tcategory: { value: product.nameShort, original: product.nameShort },\n\t\t\tf1: true,\n\t\t\tprecondition: RELEASE_NOTES_URL,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.MenubarHelpMenu,\n\t\t\t\t\tgroup: \"1_welcome\",\n\t\t\t\t\torder: 5,\n\t\t\t\t\twhen: RELEASE_NOTES_URL,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\tconst productService = accessor.get(IProductService);\n\t\tconst openerService = accessor.get(IOpenerService);\n\n\t\ttry {\n\t\t\tawait showReleaseNotesInEditor(\n\t\t\t\tinstantiationService,\n\t\t\t\tproductService.version,\n\t\t\t\tfalse,\n\t\t\t);\n\t\t} catch (err) {\n\t\t\tif (productService.releaseNotesUrl) {\n\t\t\t\tawait openerService.open(\n\t\t\t\t\tURI.parse(productService.releaseNotesUrl),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"update.noReleaseNotesOnline\",\n\t\t\t\t\t\t\"This version of {0} does not have release notes online\",\n\t\t\t\t\t\tproductService.nameLong,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class ShowCurrentReleaseNotesFromCurrentFileAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ShowCurrentReleaseNotesFromCurrentFileActionId,\n\t\t\ttitle: {\n\t\t\t\t...localize2(\n\t\t\t\t\t\"showReleaseNotesCurrentFile\",\n\t\t\t\t\t\"Open Current File as Release Notes\",\n\t\t\t\t),\n\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"mshowReleaseNotes\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"Show &&Release Notes\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tcategory: localize2(\"developerCategory\", \"Developer\"),\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\tconst productService = accessor.get(IProductService);\n\n\t\ttry {\n\t\t\tawait showReleaseNotesInEditor(\n\t\t\t\tinstantiationService,\n\t\t\t\tproductService.version,\n\t\t\t\ttrue,\n\t\t\t);\n\t\t} catch (err) {\n\t\t\tthrow new Error(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"releaseNotesFromFileNone\",\n\t\t\t\t\t\"Cannot open the current file as Release Notes\",\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n}\n\nregisterAction2(ShowCurrentReleaseNotesAction);\nregisterAction2(ShowCurrentReleaseNotesFromCurrentFileAction);\n\n// Update\n\nexport class CheckForUpdateAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"update.checkForUpdate\",\n\t\t\ttitle: localize2(\"checkForUpdates\", \"Check for Updates...\"),\n\t\t\tcategory: { value: product.nameShort, original: product.nameShort },\n\t\t\tf1: true,\n\t\t\tprecondition: CONTEXT_UPDATE_STATE.isEqualTo(StateType.Idle),\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst updateService = accessor.get(IUpdateService);\n\t\treturn updateService.checkForUpdates(true);\n\t}\n}\n\nclass DownloadUpdateAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"update.downloadUpdate\",\n\t\t\ttitle: localize2(\"downloadUpdate\", \"Download Update\"),\n\t\t\tcategory: { value: product.nameShort, original: product.nameShort },\n\t\t\tf1: true,\n\t\t\tprecondition: CONTEXT_UPDATE_STATE.isEqualTo(\n\t\t\t\tStateType.AvailableForDownload,\n\t\t\t),\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tawait accessor.get(IUpdateService).downloadUpdate();\n\t}\n}\n\nclass InstallUpdateAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"update.installUpdate\",\n\t\t\ttitle: localize2(\"installUpdate\", \"Install Update\"),\n\t\t\tcategory: { value: product.nameShort, original: product.nameShort },\n\t\t\tf1: true,\n\t\t\tprecondition: CONTEXT_UPDATE_STATE.isEqualTo(StateType.Downloaded),\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tawait accessor.get(IUpdateService).applyUpdate();\n\t}\n}\n\nclass RestartToUpdateAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"update.restartToUpdate\",\n\t\t\ttitle: localize2(\"restartToUpdate\", \"Restart to Update\"),\n\t\t\tcategory: { value: product.nameShort, original: product.nameShort },\n\t\t\tf1: true,\n\t\t\tprecondition: CONTEXT_UPDATE_STATE.isEqualTo(StateType.Ready),\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tawait accessor.get(IUpdateService).quitAndInstall();\n\t}\n}\n\nclass DownloadAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.download\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: DownloadAction.ID,\n\t\t\ttitle: localize2(\n\t\t\t\t\"openDownloadPage\",\n\t\t\t\t\"Download {0}\",\n\t\t\t\tproduct.nameLong,\n\t\t\t),\n\t\t\tprecondition: ContextKeyExpr.and(IsWebContext, DOWNLOAD_URL), // Only show when running in a web browser and a download url is available\n\t\t\tf1: true,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.StatusBarWindowIndicatorMenu,\n\t\t\t\t\twhen: ContextKeyExpr.and(IsWebContext, DOWNLOAD_URL),\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst productService = accessor.get(IProductService);\n\t\tconst openerService = accessor.get(IOpenerService);\n\n\t\tif (productService.downloadUrl) {\n\t\t\topenerService.open(URI.parse(productService.downloadUrl));\n\t\t}\n\t}\n}\n\nregisterAction2(DownloadAction);\nregisterAction2(CheckForUpdateAction);\nregisterAction2(DownloadUpdateAction);\nregisterAction2(InstallUpdateAction);\nregisterAction2(RestartToUpdateAction);\n\nif (isWindows) {\n\tclass DeveloperApplyUpdateAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"_update.applyupdate\",\n\t\t\t\ttitle: localize2(\"applyUpdate\", \"Apply Update...\"),\n\t\t\t\tcategory: Categories.Developer,\n\t\t\t\tf1: true,\n\t\t\t\tprecondition: CONTEXT_UPDATE_STATE.isEqualTo(StateType.Idle),\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst updateService = accessor.get(IUpdateService);\n\t\t\tconst fileDialogService = accessor.get(IFileDialogService);\n\n\t\t\tconst updatePath = await fileDialogService.showOpenDialog({\n\t\t\t\ttitle: localize(\"pickUpdate\", \"Apply Update\"),\n\t\t\t\tfilters: [{ name: \"Setup\", extensions: [\"exe\"] }],\n\t\t\t\tcanSelectFiles: true,\n\t\t\t\topenLabel: mnemonicButtonLabel(\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"updateButton\",\n\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"&&Update\",\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t});\n\n\t\t\tif (!updatePath || !updatePath[0]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait updateService._applySpecificUpdate(updatePath[0].fsPath);\n\t\t}\n\t}\n\n\tregisterAction2(DeveloperApplyUpdateAction);\n}\n"],
  "mappings": "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",
  "names": []
}
