{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/welcomeWalkthrough/common/walkThroughContentProvider.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from '../../../../base/common/uri.js';\nimport { ITextModelService, ITextModelContentProvider } from '../../../../editor/common/services/resolverService.js';\nimport { IModelService } from '../../../../editor/common/services/model.js';\nimport { ITextModel, DefaultEndOfLine, EndOfLinePreference, ITextBufferFactory } from '../../../../editor/common/model.js';\nimport { ILanguageService } from '../../../../editor/common/languages/language.js';\nimport { IWorkbenchContribution } from '../../../common/contributions.js';\nimport * as marked from '../../../../base/common/marked/marked.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { Range } from '../../../../editor/common/core/range.js';\nimport { createTextBufferFactory } from '../../../../editor/common/model/textModel.js';\nimport { assertIsDefined } from '../../../../base/common/types.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\n\nexport async function moduleToContent(instantiationService: IInstantiationService, resource: URI): Promise<string> {\n\tif (!resource.query) {\n\t\tthrow new Error('Walkthrough: invalid resource');\n\t}\n\n\tconst query = JSON.parse(resource.query);\n\tif (!query.moduleId) {\n\t\tthrow new Error('Walkthrough: invalid resource');\n\t}\n\n\tlet contents = '';\n\ttry {\n\t\tconst module = await import(query.moduleId);\n\t\tcontents = module.default();\n\n\t} catch { }\n\treturn contents;\n}\n\nexport class WalkThroughSnippetContentProvider implements ITextModelContentProvider, IWorkbenchContribution {\n\n\tstatic readonly ID = 'workbench.contrib.walkThroughSnippetContentProvider';\n\n\tprivate loads = new Map<string, Promise<ITextBufferFactory>>();\n\n\tconstructor(\n\t\t@ITextModelService private readonly textModelResolverService: ITextModelService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tthis.textModelResolverService.registerTextModelContentProvider(Schemas.walkThroughSnippet, this);\n\t}\n\n\tprivate async textBufferFactoryFromResource(resource: URI): Promise<ITextBufferFactory> {\n\t\tlet ongoing = this.loads.get(resource.toString());\n\t\tif (!ongoing) {\n\t\t\tongoing = moduleToContent(this.instantiationService, resource)\n\t\t\t\t.then(content => createTextBufferFactory(content))\n\t\t\t\t.finally(() => this.loads.delete(resource.toString()));\n\t\t\tthis.loads.set(resource.toString(), ongoing);\n\t\t}\n\t\treturn ongoing;\n\t}\n\n\tpublic async provideTextContent(resource: URI): Promise<ITextModel> {\n\t\tconst factory = await this.textBufferFactoryFromResource(resource.with({ fragment: '' }));\n\t\tlet codeEditorModel = this.modelService.getModel(resource);\n\t\tif (!codeEditorModel) {\n\t\t\tconst j = parseInt(resource.fragment);\n\t\t\tlet i = 0;\n\t\t\tconst renderer = new marked.marked.Renderer();\n\t\t\trenderer.code = ({ text, lang }: marked.Tokens.Code) => {\n\t\t\t\ti++;\n\t\t\t\tconst languageId = typeof lang === 'string' ? this.languageService.getLanguageIdByLanguageName(lang) || '' : '';\n\t\t\t\tconst languageSelection = this.languageService.createById(languageId);\n\t\t\t\t// Create all models for this resource in one go... we'll need them all and we don't want to re-parse markdown each time\n\t\t\t\tconst model = this.modelService.createModel(text, languageSelection, resource.with({ fragment: `${i}.${lang}` }));\n\t\t\t\tif (i === j) { codeEditorModel = model; }\n\t\t\t\treturn '';\n\t\t\t};\n\t\t\tconst textBuffer = factory.create(DefaultEndOfLine.LF).textBuffer;\n\t\t\tconst lineCount = textBuffer.getLineCount();\n\t\t\tconst range = new Range(1, 1, lineCount, textBuffer.getLineLength(lineCount) + 1);\n\t\t\tconst markdown = textBuffer.getValueInRange(range, EndOfLinePreference.TextDefined);\n\t\t\tmarked.marked(markdown, { renderer });\n\t\t}\n\t\treturn assertIsDefined(codeEditorModel);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,WAAW;AACpB,SAAS,mBAAmB,iCAAiC;AAC7D,SAAS,qBAAqB;AAC9B,SAAS,YAAY,kBAAkB,qBAAqB,0BAA0B;AACtF,SAAS,wBAAwB;AACjC,SAAS,8BAA8B;AACvC,YAAY,YAAY;AACxB,SAAS,eAAe;AACxB,SAAS,aAAa;AACtB,SAAS,+BAA+B;AACxC,SAAS,uBAAuB;AAChC,SAAS,6BAA6B;AAEtC,eAAsB,gBAAgB,sBAA6C,UAAgC;AAClH,MAAI,CAAC,SAAS,OAAO;AACpB,UAAM,IAAI,MAAM,+BAA+B;AAAA,EAChD;AAEA,QAAM,QAAQ,KAAK,MAAM,SAAS,KAAK;AACvC,MAAI,CAAC,MAAM,UAAU;AACpB,UAAM,IAAI,MAAM,+BAA+B;AAAA,EAChD;AAEA,MAAI,WAAW;AACf,MAAI;AACH,UAAM,SAAS,MAAM,OAAO,MAAM;AAClC,eAAW,OAAO,QAAQ;AAAA,EAE3B,QAAQ;AAAA,EAAE;AACV,SAAO;AACR;AAjBsB;AAmBf,IAAM,oCAAN,MAAqG;AAAA,EAM3G,YACqC,0BACD,iBACH,cACQ,sBACvC;AAJmC;AACD;AACH;AACQ;AAExC,SAAK,yBAAyB,iCAAiC,QAAQ,oBAAoB,IAAI;AAAA,EAChG;AAAA,EAlDD,OAqC4G;AAAA;AAAA;AAAA,EAE3G,OAAgB,KAAK;AAAA,EAEb,QAAQ,oBAAI,IAAyC;AAAA,EAW7D,MAAc,8BAA8B,UAA4C;AACvF,QAAI,UAAU,KAAK,MAAM,IAAI,SAAS,SAAS,CAAC;AAChD,QAAI,CAAC,SAAS;AACb,gBAAU,gBAAgB,KAAK,sBAAsB,QAAQ,EAC3D,KAAK,aAAW,wBAAwB,OAAO,CAAC,EAChD,QAAQ,MAAM,KAAK,MAAM,OAAO,SAAS,SAAS,CAAC,CAAC;AACtD,WAAK,MAAM,IAAI,SAAS,SAAS,GAAG,OAAO;AAAA,IAC5C;AACA,WAAO;AAAA,EACR;AAAA,EAEA,MAAa,mBAAmB,UAAoC;AACnE,UAAM,UAAU,MAAM,KAAK,8BAA8B,SAAS,KAAK,EAAE,UAAU,GAAG,CAAC,CAAC;AACxF,QAAI,kBAAkB,KAAK,aAAa,SAAS,QAAQ;AACzD,QAAI,CAAC,iBAAiB;AACrB,YAAM,IAAI,SAAS,SAAS,QAAQ;AACpC,UAAI,IAAI;AACR,YAAM,WAAW,IAAI,OAAO,OAAO,SAAS;AAC5C,eAAS,OAAO,CAAC,EAAE,MAAM,KAAK,MAA0B;AACvD;AACA,cAAM,aAAa,OAAO,SAAS,WAAW,KAAK,gBAAgB,4BAA4B,IAAI,KAAK,KAAK;AAC7G,cAAM,oBAAoB,KAAK,gBAAgB,WAAW,UAAU;AAEpE,cAAM,QAAQ,KAAK,aAAa,YAAY,MAAM,mBAAmB,SAAS,KAAK,EAAE,UAAU,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC;AAChH,YAAI,MAAM,GAAG;AAAE,4BAAkB;AAAA,QAAO;AACxC,eAAO;AAAA,MACR;AACA,YAAM,aAAa,QAAQ,OAAO,iBAAiB,EAAE,EAAE;AACvD,YAAM,YAAY,WAAW,aAAa;AAC1C,YAAM,QAAQ,IAAI,MAAM,GAAG,GAAG,WAAW,WAAW,cAAc,SAAS,IAAI,CAAC;AAChF,YAAM,WAAW,WAAW,gBAAgB,OAAO,oBAAoB,WAAW;AAClF,aAAO,OAAO,UAAU,EAAE,SAAS,CAAC;AAAA,IACrC;AACA,WAAO,gBAAgB,eAAe;AAAA,EACvC;AACD;AAlDa,oCAAN;AAAA,EAOJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAVU;",
  "names": []
}
