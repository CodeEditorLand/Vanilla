var h=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var l=(n,o,e,r)=>{for(var t=r>1?void 0:r?f(o,e):o,i=n.length-1,p;i>=0;i--)(p=n[i])&&(t=(r?p(o,e,t):p(t))||t);return r&&t&&h(o,e,t),t},m=(n,o)=>(e,r)=>o(e,r,n);import"../../../../base/browser/dom.js";import"../../../../base/common/lifecycle.js";import*as c from"../../../../base/common/marked/marked.js";import{Schemas as v}from"../../../../base/common/network.js";import{isEqual as g}from"../../../../base/common/resources.js";import"../../../../base/common/uri.js";import{ITextModelService as y}from"../../../../editor/common/services/resolverService.js";import{IInstantiationService as I}from"../../../../platform/instantiation/common/instantiation.js";import{EditorInputCapabilities as S}from"../../../common/editor.js";import{EditorInput as x}from"../../../common/editor/editorInput.js";import{EditorModel as T}from"../../../common/editor/editorModel.js";import{markedGfmHeadingIdPlugin as R}from"../../markdown/browser/markedGfmHeadingIdPlugin.js";import{moduleToContent as M}from"../common/walkThroughContentProvider.js";class u extends T{constructor(e,r){super();this.mainRef=e;this.snippetRefs=r}get main(){return this.mainRef}get snippets(){return this.snippetRefs.map(e=>e.object)}dispose(){this.snippetRefs.forEach(e=>e.dispose()),super.dispose()}}let s=class extends x{constructor(e,r,t){super();this.options=e;this.instantiationService=r;this.textModelResolverService=t}get capabilities(){return S.Singleton|super.capabilities}promise=null;maxTopScroll=0;maxBottomScroll=0;get resource(){return this.options.resource}get typeId(){return this.options.typeId}getName(){return this.options.name}getDescription(){return this.options.description||""}getTelemetryFrom(){return this.options.telemetryFrom}getTelemetryDescriptor(){const e=super.getTelemetryDescriptor();return e.target=this.getTelemetryFrom(),e}get onReady(){return this.options.onReady}get layout(){return this.options.layout}resolve(){return this.promise||(this.promise=M(this.instantiationService,this.options.resource).then(e=>{if(this.resource.path.endsWith(".html"))return new u(e,[]);const r=[];let t=0;const i=new c.marked.Renderer;return i.code=({lang:a})=>{t++;const d=this.options.resource.with({scheme:v.walkThroughSnippet,fragment:`${t}.${a}`});return r.push(this.textModelResolverService.createModelReference(d)),`<div id="snippet-${d.fragment}" class="walkThroughEditorContainer" ></div>`},e=new c.Marked({renderer:i},R()).parse(e,{async:!1}),Promise.all(r).then(a=>new u(e,a))})),this.promise}matches(e){return super.matches(e)?!0:e instanceof s?g(e.options.resource,this.options.resource):!1}dispose(){this.promise&&(this.promise.then(e=>e.dispose()),this.promise=null),super.dispose()}relativeScrollPosition(e,r){this.maxTopScroll=Math.max(this.maxTopScroll,e),this.maxBottomScroll=Math.max(this.maxBottomScroll,r)}};s=l([m(1,I),m(2,y)],s);export{s as WalkThroughInput};
