{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/welcomeWalkthrough/browser/walkThroughInput.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EditorInput } from '../../../common/editor/editorInput.js';\nimport { EditorModel } from '../../../common/editor/editorModel.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { DisposableStore, IReference } from '../../../../base/common/lifecycle.js';\nimport { ITextEditorModel, ITextModelService } from '../../../../editor/common/services/resolverService.js';\nimport { marked, Tokens } from '../../../../base/common/marked/marked.js';\nimport { isEqual } from '../../../../base/common/resources.js';\nimport { moduleToContent } from '../common/walkThroughContentProvider.js';\nimport { Dimension } from '../../../../base/browser/dom.js';\nimport { EditorInputCapabilities, IUntypedEditorInput } from '../../../common/editor.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { Schemas } from '../../../../base/common/network.js';\n\nclass WalkThroughModel extends EditorModel {\n\n\tconstructor(\n\t\tprivate mainRef: string,\n\t\tprivate snippetRefs: IReference<ITextEditorModel>[]\n\t) {\n\t\tsuper();\n\t}\n\n\tget main() {\n\t\treturn this.mainRef;\n\t}\n\n\tget snippets() {\n\t\treturn this.snippetRefs.map(snippet => snippet.object);\n\t}\n\n\toverride dispose() {\n\t\tthis.snippetRefs.forEach(ref => ref.dispose());\n\t\tsuper.dispose();\n\t}\n}\n\nexport interface WalkThroughInputOptions {\n\treadonly typeId: string;\n\treadonly name: string;\n\treadonly description?: string;\n\treadonly resource: URI;\n\treadonly telemetryFrom: string;\n\treadonly onReady?: (container: HTMLElement, contentDisposables: DisposableStore) => void;\n\treadonly layout?: (dimension: Dimension) => void;\n}\n\nexport class WalkThroughInput extends EditorInput {\n\n\toverride get capabilities(): EditorInputCapabilities {\n\t\treturn EditorInputCapabilities.Singleton | super.capabilities;\n\t}\n\n\tprivate promise: Promise<WalkThroughModel> | null = null;\n\n\tprivate maxTopScroll = 0;\n\tprivate maxBottomScroll = 0;\n\n\tget resource() { return this.options.resource; }\n\n\tconstructor(\n\t\tprivate readonly options: WalkThroughInputOptions,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ITextModelService private readonly textModelResolverService: ITextModelService\n\t) {\n\t\tsuper();\n\t}\n\n\toverride get typeId(): string {\n\t\treturn this.options.typeId;\n\t}\n\n\toverride getName(): string {\n\t\treturn this.options.name;\n\t}\n\n\toverride getDescription(): string {\n\t\treturn this.options.description || '';\n\t}\n\n\tgetTelemetryFrom(): string {\n\t\treturn this.options.telemetryFrom;\n\t}\n\n\toverride getTelemetryDescriptor(): { [key: string]: unknown } {\n\t\tconst descriptor = super.getTelemetryDescriptor();\n\t\tdescriptor['target'] = this.getTelemetryFrom();\n\t\t/* __GDPR__FRAGMENT__\n\t\t\t\"EditorTelemetryDescriptor\" : {\n\t\t\t\t\"target\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\treturn descriptor;\n\t}\n\n\tget onReady() {\n\t\treturn this.options.onReady;\n\t}\n\n\tget layout() {\n\t\treturn this.options.layout;\n\t}\n\n\toverride resolve(): Promise<WalkThroughModel> {\n\t\tif (!this.promise) {\n\t\t\tthis.promise = moduleToContent(this.instantiationService, this.options.resource)\n\t\t\t\t.then(content => {\n\t\t\t\t\tif (this.resource.path.endsWith('.html')) {\n\t\t\t\t\t\treturn new WalkThroughModel(content, []);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst snippets: Promise<IReference<ITextEditorModel>>[] = [];\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\tconst renderer = new marked.Renderer();\n\t\t\t\t\trenderer.code = ({ lang }: Tokens.Code) => {\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tconst resource = this.options.resource.with({ scheme: Schemas.walkThroughSnippet, fragment: `${i}.${lang}` });\n\t\t\t\t\t\tsnippets.push(this.textModelResolverService.createModelReference(resource));\n\t\t\t\t\t\treturn `<div id=\"snippet-${resource.fragment}\" class=\"walkThroughEditorContainer\" ></div>`;\n\t\t\t\t\t};\n\t\t\t\t\tcontent = marked(content, { async: false, renderer });\n\n\t\t\t\t\treturn Promise.all(snippets)\n\t\t\t\t\t\t.then(refs => new WalkThroughModel(content, refs));\n\t\t\t\t});\n\t\t}\n\n\t\treturn this.promise;\n\t}\n\n\toverride matches(otherInput: EditorInput | IUntypedEditorInput): boolean {\n\t\tif (super.matches(otherInput)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (otherInput instanceof WalkThroughInput) {\n\t\t\treturn isEqual(otherInput.options.resource, this.options.resource);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\toverride dispose(): void {\n\t\tif (this.promise) {\n\t\t\tthis.promise.then(model => model.dispose());\n\t\t\tthis.promise = null;\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic relativeScrollPosition(topScroll: number, bottomScroll: number) {\n\t\tthis.maxTopScroll = Math.max(this.maxTopScroll, topScroll);\n\t\tthis.maxBottomScroll = Math.max(this.maxBottomScroll, bottomScroll);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
