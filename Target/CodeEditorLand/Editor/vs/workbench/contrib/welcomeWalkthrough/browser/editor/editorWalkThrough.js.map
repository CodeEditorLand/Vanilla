{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/welcomeWalkthrough/browser/editor/editorWalkThrough.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport content from './vs_code_editor_walkthrough.js';\nimport { localize, localize2 } from '../../../../../nls.js';\nimport { IEditorService } from '../../../../services/editor/common/editorService.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { WalkThroughInput, WalkThroughInputOptions } from '../walkThroughInput.js';\nimport { FileAccess, Schemas } from '../../../../../base/common/network.js';\nimport { IEditorSerializer } from '../../../../common/editor.js';\nimport { EditorInput } from '../../../../common/editor/editorInput.js';\nimport { Action2 } from '../../../../../platform/actions/common/actions.js';\nimport { Categories } from '../../../../../platform/action/common/actionCommonCategories.js';\nimport { walkThroughContentRegistry } from '../../common/walkThroughContentProvider.js';\n\nwalkThroughContentRegistry.registerProvider('vs/workbench/contrib/welcomeWalkthrough/browser/editor/vs_code_editor_walkthrough', content);\n\nconst typeId = 'workbench.editors.walkThroughInput';\nconst inputOptions: WalkThroughInputOptions = {\n\ttypeId,\n\tname: localize('editorWalkThrough.title', \"Editor Playground\"),\n\tresource: FileAccess.asBrowserUri('vs/workbench/contrib/welcomeWalkthrough/browser/editor/vs_code_editor_walkthrough.md')\n\t\t.with({\n\t\t\tscheme: Schemas.walkThrough,\n\t\t\tquery: JSON.stringify({ moduleId: 'vs/workbench/contrib/welcomeWalkthrough/browser/editor/vs_code_editor_walkthrough' })\n\t\t}),\n\ttelemetryFrom: 'walkThrough'\n};\n\nexport class EditorWalkThroughAction extends Action2 {\n\n\tpublic static readonly ID = 'workbench.action.showInteractivePlayground';\n\tpublic static readonly LABEL = localize2('editorWalkThrough', 'Interactive Editor Playground');\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: EditorWalkThroughAction.ID,\n\t\t\ttitle: EditorWalkThroughAction.LABEL,\n\t\t\tcategory: Categories.Help,\n\t\t\tf1: true,\n\t\t\tmetadata: {\n\t\t\t\tdescription: localize2('editorWalkThroughMetadata', \"Opens an interactive playground for learning about the editor.\")\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic override run(serviceAccessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = serviceAccessor.get(IEditorService);\n\t\tconst instantiationService = serviceAccessor.get(IInstantiationService);\n\t\tconst input = instantiationService.createInstance(WalkThroughInput, inputOptions);\n\t\t// TODO @lramos15 adopt the resolver here\n\t\treturn editorService.openEditor(input, { pinned: true })\n\t\t\t.then(() => void (0));\n\t}\n}\n\nexport class EditorWalkThroughInputSerializer implements IEditorSerializer {\n\n\tstatic readonly ID = typeId;\n\n\tpublic canSerialize(editorInput: EditorInput): boolean {\n\t\treturn true;\n\t}\n\n\tpublic serialize(editorInput: EditorInput): string {\n\t\treturn '';\n\t}\n\n\tpublic deserialize(instantiationService: IInstantiationService): WalkThroughInput {\n\t\treturn instantiationService.createInstance(WalkThroughInput, inputOptions);\n\t}\n}\n"],
  "mappings": ";;AAKA,OAAO,aAAa;AACpB,SAAS,UAAU,iBAAiB;AACpC,SAAS,sBAAsB;AAC/B,SAAS,uBAAuB,wBAAwB;AACxD,SAAS,kBAAkB,+BAA+B;AAC1D,SAAS,YAAY,eAAe;AACpC,SAAS,yBAAyB;AAClC,SAAS,mBAAmB;AAC5B,SAAS,eAAe;AACxB,SAAS,kBAAkB;AAC3B,SAAS,kCAAkC;AAE3C,2BAA2B,iBAAiB,qFAAqF,OAAO;AAExI,MAAM,SAAS;AACf,MAAM,eAAwC;AAAA,EAC7C;AAAA,EACA,MAAM,SAAS,2BAA2B,mBAAmB;AAAA,EAC7D,UAAU,WAAW,aAAa,sFAAsF,EACtH,KAAK;AAAA,IACL,QAAQ,QAAQ;AAAA,IAChB,OAAO,KAAK,UAAU,EAAE,UAAU,oFAAoF,CAAC;AAAA,EACxH,CAAC;AAAA,EACF,eAAe;AAChB;AAEO,MAAM,gCAAgC,QAAQ;AAAA,EA/BrD,OA+BqD;AAAA;AAAA;AAAA,EAEpD,OAAuB,KAAK;AAAA,EAC5B,OAAuB,QAAQ,UAAU,qBAAqB,+BAA+B;AAAA,EAE7F,cAAc;AACb,UAAM;AAAA,MACL,IAAI,wBAAwB;AAAA,MAC5B,OAAO,wBAAwB;AAAA,MAC/B,UAAU,WAAW;AAAA,MACrB,IAAI;AAAA,MACJ,UAAU;AAAA,QACT,aAAa,UAAU,6BAA6B,gEAAgE;AAAA,MACrH;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEgB,IAAI,iBAAkD;AACrE,UAAM,gBAAgB,gBAAgB,IAAI,cAAc;AACxD,UAAM,uBAAuB,gBAAgB,IAAI,qBAAqB;AACtE,UAAM,QAAQ,qBAAqB,eAAe,kBAAkB,YAAY;AAEhF,WAAO,cAAc,WAAW,OAAO,EAAE,QAAQ,KAAK,CAAC,EACrD,KAAK,MAAM,MAAQ;AAAA,EACtB;AACD;AAEO,MAAM,iCAA8D;AAAA,EA1D3E,OA0D2E;AAAA;AAAA;AAAA,EAE1E,OAAgB,KAAK;AAAA,EAEd,aAAa,aAAmC;AACtD,WAAO;AAAA,EACR;AAAA,EAEO,UAAU,aAAkC;AAClD,WAAO;AAAA,EACR;AAAA,EAEO,YAAY,sBAA+D;AACjF,WAAO,qBAAqB,eAAe,kBAAkB,YAAY;AAAA,EAC1E;AACD;",
  "names": []
}
