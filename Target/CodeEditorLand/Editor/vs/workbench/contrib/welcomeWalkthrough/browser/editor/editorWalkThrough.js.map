{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/welcomeWalkthrough/browser/editor/editorWalkThrough.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FileAccess, Schemas } from \"../../../../../base/common/network.js\";\nimport { localize, localize2 } from \"../../../../../nls.js\";\nimport { Categories } from \"../../../../../platform/action/common/actionCommonCategories.js\";\nimport { Action2 } from \"../../../../../platform/actions/common/actions.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport type { IEditorSerializer } from \"../../../../common/editor.js\";\nimport type { EditorInput } from \"../../../../common/editor/editorInput.js\";\nimport { IEditorService } from \"../../../../services/editor/common/editorService.js\";\nimport {\n\tWalkThroughInput,\n\ttype WalkThroughInputOptions,\n} from \"../walkThroughInput.js\";\n\nconst typeId = \"workbench.editors.walkThroughInput\";\nconst inputOptions: WalkThroughInputOptions = {\n\ttypeId,\n\tname: localize(\"editorWalkThrough.title\", \"Editor Playground\"),\n\tresource: FileAccess.asBrowserUri(\n\t\t\"vs/workbench/contrib/welcomeWalkthrough/browser/editor/vs_code_editor_walkthrough.md\",\n\t).with({\n\t\tscheme: Schemas.walkThrough,\n\t\tquery: JSON.stringify({\n\t\t\tmoduleId: \"../browser/editor/vs_code_editor_walkthrough.js\",\n\t\t}),\n\t}),\n\ttelemetryFrom: \"walkThrough\",\n};\n\nexport class EditorWalkThroughAction extends Action2 {\n\tpublic static readonly ID = \"workbench.action.showInteractivePlayground\";\n\tpublic static readonly LABEL = localize2(\n\t\t\"editorWalkThrough\",\n\t\t\"Interactive Editor Playground\",\n\t);\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: EditorWalkThroughAction.ID,\n\t\t\ttitle: EditorWalkThroughAction.LABEL,\n\t\t\tcategory: Categories.Help,\n\t\t\tf1: true,\n\t\t\tmetadata: {\n\t\t\t\tdescription: localize2(\n\t\t\t\t\t\"editorWalkThroughMetadata\",\n\t\t\t\t\t\"Opens an interactive playground for learning about the editor.\",\n\t\t\t\t),\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic override run(serviceAccessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = serviceAccessor.get(IEditorService);\n\t\tconst instantiationService = serviceAccessor.get(IInstantiationService);\n\t\tconst input = instantiationService.createInstance(\n\t\t\tWalkThroughInput,\n\t\t\tinputOptions,\n\t\t);\n\t\t// TODO @lramos15 adopt the resolver here\n\t\treturn editorService\n\t\t\t.openEditor(input, { pinned: true })\n\t\t\t.then(() => void 0);\n\t}\n}\n\nexport class EditorWalkThroughInputSerializer implements IEditorSerializer {\n\tstatic readonly ID = typeId;\n\n\tpublic canSerialize(editorInput: EditorInput): boolean {\n\t\treturn true;\n\t}\n\n\tpublic serialize(editorInput: EditorInput): string {\n\t\treturn \"\";\n\t}\n\n\tpublic deserialize(\n\t\tinstantiationService: IInstantiationService,\n\t): WalkThroughInput {\n\t\treturn instantiationService.createInstance(\n\t\t\tWalkThroughInput,\n\t\t\tinputOptions,\n\t\t);\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,YAAY,eAAe;AACpC,SAAS,UAAU,iBAAiB;AACpC,SAAS,kBAAkB;AAC3B,SAAS,eAAe;AACxB;AAAA,EACC;AAAA,OAEM;AAGP,SAAS,sBAAsB;AAC/B;AAAA,EACC;AAAA,OAEM;AAEP,MAAM,SAAS;AACf,MAAM,eAAwC;AAAA,EAC7C;AAAA,EACA,MAAM,SAAS,2BAA2B,mBAAmB;AAAA,EAC7D,UAAU,WAAW;AAAA,IACpB;AAAA,EACD,EAAE,KAAK;AAAA,IACN,QAAQ,QAAQ;AAAA,IAChB,OAAO,KAAK,UAAU;AAAA,MACrB,UAAU;AAAA,IACX,CAAC;AAAA,EACF,CAAC;AAAA,EACD,eAAe;AAChB;AAEO,MAAM,gCAAgC,QAAQ;AAAA,EApCrD,OAoCqD;AAAA;AAAA;AAAA,EACpD,OAAuB,KAAK;AAAA,EAC5B,OAAuB,QAAQ;AAAA,IAC9B;AAAA,IACA;AAAA,EACD;AAAA,EAEA,cAAc;AACb,UAAM;AAAA,MACL,IAAI,wBAAwB;AAAA,MAC5B,OAAO,wBAAwB;AAAA,MAC/B,UAAU,WAAW;AAAA,MACrB,IAAI;AAAA,MACJ,UAAU;AAAA,QACT,aAAa;AAAA,UACZ;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEgB,IAAI,iBAAkD;AACrE,UAAM,gBAAgB,gBAAgB,IAAI,cAAc;AACxD,UAAM,uBAAuB,gBAAgB,IAAI,qBAAqB;AACtE,UAAM,QAAQ,qBAAqB;AAAA,MAClC;AAAA,MACA;AAAA,IACD;AAEA,WAAO,cACL,WAAW,OAAO,EAAE,QAAQ,KAAK,CAAC,EAClC,KAAK,MAAM,MAAM;AAAA,EACpB;AACD;AAEO,MAAM,iCAA8D;AAAA,EAxE3E,OAwE2E;AAAA;AAAA;AAAA,EAC1E,OAAgB,KAAK;AAAA,EAEd,aAAa,aAAmC;AACtD,WAAO;AAAA,EACR;AAAA,EAEO,UAAU,aAAkC;AAClD,WAAO;AAAA,EACR;AAAA,EAEO,YACN,sBACmB;AACnB,WAAO,qBAAqB;AAAA,MAC3B;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;",
  "names": []
}
