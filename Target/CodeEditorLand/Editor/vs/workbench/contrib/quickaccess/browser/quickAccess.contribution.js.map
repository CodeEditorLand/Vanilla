{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/quickaccess/browser/quickAccess.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../../nls.js';\nimport { IQuickAccessRegistry, Extensions } from '../../../../platform/quickinput/common/quickAccess.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { HelpQuickAccessProvider } from '../../../../platform/quickinput/browser/helpQuickAccess.js';\nimport { ViewQuickAccessProvider, OpenViewPickerAction, QuickAccessViewPickerAction } from './viewQuickAccess.js';\nimport { CommandsQuickAccessProvider, ShowAllCommandsAction, ClearCommandHistoryAction } from './commandsQuickAccess.js';\nimport { MenuRegistry, MenuId, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { KeyMod } from '../../../../base/common/keyCodes.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { inQuickPickContext, getQuickNavigateHandler } from '../../../browser/quickaccess.js';\nimport { KeybindingsRegistry, KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { EditorContextKeys } from '../../../../editor/common/editorContextKeys.js';\n\n//#region Quick Access Proviers\n\nconst quickAccessRegistry = Registry.as<IQuickAccessRegistry>(Extensions.Quickaccess);\n\nquickAccessRegistry.registerQuickAccessProvider({\n\tctor: HelpQuickAccessProvider,\n\tprefix: HelpQuickAccessProvider.PREFIX,\n\tplaceholder: localize('helpQuickAccessPlaceholder', \"Type '{0}' to get help on the actions you can take from here.\", HelpQuickAccessProvider.PREFIX),\n\thelpEntries: [{\n\t\tdescription: localize('helpQuickAccess', \"Show all Quick Access Providers\"),\n\t\tcommandCenterOrder: 70,\n\t\tcommandCenterLabel: localize('more', 'More')\n\t}]\n});\n\nquickAccessRegistry.registerQuickAccessProvider({\n\tctor: ViewQuickAccessProvider,\n\tprefix: ViewQuickAccessProvider.PREFIX,\n\tcontextKey: 'inViewsPicker',\n\tplaceholder: localize('viewQuickAccessPlaceholder', \"Type the name of a view, output channel or terminal to open.\"),\n\thelpEntries: [{ description: localize('viewQuickAccess', \"Open View\"), commandId: OpenViewPickerAction.ID }]\n});\n\nquickAccessRegistry.registerQuickAccessProvider({\n\tctor: CommandsQuickAccessProvider,\n\tprefix: CommandsQuickAccessProvider.PREFIX,\n\tcontextKey: 'inCommandsPicker',\n\tplaceholder: localize('commandsQuickAccessPlaceholder', \"Type the name of a command to run.\"),\n\thelpEntries: [{ description: localize('commandsQuickAccess', \"Show and Run Commands\"), commandId: ShowAllCommandsAction.ID, commandCenterOrder: 20 }]\n});\n\n//#endregion\n\n\n//#region Menu contributions\n\nMenuRegistry.appendMenuItem(MenuId.MenubarViewMenu, {\n\tgroup: '1_open',\n\tcommand: {\n\t\tid: ShowAllCommandsAction.ID,\n\t\ttitle: localize({ key: 'miCommandPalette', comment: ['&& denotes a mnemonic'] }, \"&&Command Palette...\")\n\t},\n\torder: 1\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarHelpMenu, {\n\tgroup: '1_welcome',\n\tcommand: {\n\t\tid: ShowAllCommandsAction.ID,\n\t\ttitle: localize({ key: 'miShowAllCommands', comment: ['&& denotes a mnemonic'] }, \"Show All Commands\")\n\t},\n\torder: 2\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarViewMenu, {\n\tgroup: '1_open',\n\tcommand: {\n\t\tid: OpenViewPickerAction.ID,\n\t\ttitle: localize({ key: 'miOpenView', comment: ['&& denotes a mnemonic'] }, \"&&Open View...\")\n\t},\n\torder: 2\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarGoMenu, {\n\tgroup: '5_infile_nav',\n\tcommand: {\n\t\tid: 'workbench.action.gotoLine',\n\t\ttitle: localize({ key: 'miGotoLine', comment: ['&& denotes a mnemonic'] }, \"Go to &&Line/Column...\")\n\t},\n\torder: 1\n});\n\nMenuRegistry.appendMenuItem(MenuId.GlobalActivity, {\n\tgroup: '1_command',\n\tcommand: {\n\t\tid: ShowAllCommandsAction.ID,\n\t\ttitle: localize('commandPalette', \"Command Palette...\")\n\t},\n\torder: 1\n});\n\nMenuRegistry.appendMenuItem(MenuId.EditorContext, {\n\tgroup: 'z_commands',\n\twhen: EditorContextKeys.editorSimpleInput.toNegated(),\n\tcommand: {\n\t\tid: ShowAllCommandsAction.ID,\n\t\ttitle: localize('commandPalette', \"Command Palette...\"),\n\t},\n\torder: 1\n});\n\n//#endregion\n\n\n//#region Workbench actions and commands\n\nregisterAction2(ClearCommandHistoryAction);\nregisterAction2(ShowAllCommandsAction);\nregisterAction2(OpenViewPickerAction);\nregisterAction2(QuickAccessViewPickerAction);\n\nconst inViewsPickerContextKey = 'inViewsPicker';\nconst inViewsPickerContext = ContextKeyExpr.and(inQuickPickContext, ContextKeyExpr.has(inViewsPickerContextKey));\nconst viewPickerKeybinding = QuickAccessViewPickerAction.KEYBINDING;\n\nconst quickAccessNavigateNextInViewPickerId = 'workbench.action.quickOpenNavigateNextInViewPicker';\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: quickAccessNavigateNextInViewPickerId,\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\thandler: getQuickNavigateHandler(quickAccessNavigateNextInViewPickerId, true),\n\twhen: inViewsPickerContext,\n\tprimary: viewPickerKeybinding.primary,\n\tlinux: viewPickerKeybinding.linux,\n\tmac: viewPickerKeybinding.mac\n});\n\nconst quickAccessNavigatePreviousInViewPickerId = 'workbench.action.quickOpenNavigatePreviousInViewPicker';\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: quickAccessNavigatePreviousInViewPickerId,\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\thandler: getQuickNavigateHandler(quickAccessNavigatePreviousInViewPickerId, false),\n\twhen: inViewsPickerContext,\n\tprimary: viewPickerKeybinding.primary | KeyMod.Shift,\n\tlinux: viewPickerKeybinding.linux,\n\tmac: {\n\t\tprimary: viewPickerKeybinding.mac.primary | KeyMod.Shift\n\t}\n});\n\n//#endregion\n"],
  "mappings": "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",
  "names": []
}
