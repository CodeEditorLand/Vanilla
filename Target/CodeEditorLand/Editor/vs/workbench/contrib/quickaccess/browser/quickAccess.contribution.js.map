{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/quickaccess/browser/quickAccess.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport { EditorContextKeys } from \"../../../../editor/common/editorContextKeys.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\tMenuId,\n\tMenuRegistry,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tKeybindingWeight,\n\tKeybindingsRegistry,\n} from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { HelpQuickAccessProvider } from \"../../../../platform/quickinput/browser/helpQuickAccess.js\";\nimport {\n\tExtensions,\n\ttype IQuickAccessRegistry,\n} from \"../../../../platform/quickinput/common/quickAccess.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\tgetQuickNavigateHandler,\n\tinQuickPickContext,\n} from \"../../../browser/quickaccess.js\";\nimport {\n\tClearCommandHistoryAction,\n\tCommandsQuickAccessProvider,\n\tShowAllCommandsAction,\n} from \"./commandsQuickAccess.js\";\nimport {\n\tOpenViewPickerAction,\n\tQuickAccessViewPickerAction,\n\tViewQuickAccessProvider,\n} from \"./viewQuickAccess.js\";\n\n//#region Quick Access Proviers\n\nconst quickAccessRegistry = Registry.as<IQuickAccessRegistry>(\n\tExtensions.Quickaccess,\n);\n\nquickAccessRegistry.registerQuickAccessProvider({\n\tctor: HelpQuickAccessProvider,\n\tprefix: HelpQuickAccessProvider.PREFIX,\n\tplaceholder: localize(\n\t\t\"helpQuickAccessPlaceholder\",\n\t\t\"Type '{0}' to get help on the actions you can take from here.\",\n\t\tHelpQuickAccessProvider.PREFIX,\n\t),\n\thelpEntries: [\n\t\t{\n\t\t\tdescription: localize(\n\t\t\t\t\"helpQuickAccess\",\n\t\t\t\t\"Show all Quick Access Providers\",\n\t\t\t),\n\t\t\tcommandCenterOrder: 70,\n\t\t\tcommandCenterLabel: localize(\"more\", \"More\"),\n\t\t},\n\t],\n});\n\nquickAccessRegistry.registerQuickAccessProvider({\n\tctor: ViewQuickAccessProvider,\n\tprefix: ViewQuickAccessProvider.PREFIX,\n\tcontextKey: \"inViewsPicker\",\n\tplaceholder: localize(\n\t\t\"viewQuickAccessPlaceholder\",\n\t\t\"Type the name of a view, output channel or terminal to open.\",\n\t),\n\thelpEntries: [\n\t\t{\n\t\t\tdescription: localize(\"viewQuickAccess\", \"Open View\"),\n\t\t\tcommandId: OpenViewPickerAction.ID,\n\t\t},\n\t],\n});\n\nquickAccessRegistry.registerQuickAccessProvider({\n\tctor: CommandsQuickAccessProvider,\n\tprefix: CommandsQuickAccessProvider.PREFIX,\n\tcontextKey: \"inCommandsPicker\",\n\tplaceholder: localize(\n\t\t\"commandsQuickAccessPlaceholder\",\n\t\t\"Type the name of a command to run.\",\n\t),\n\thelpEntries: [\n\t\t{\n\t\t\tdescription: localize(\n\t\t\t\t\"commandsQuickAccess\",\n\t\t\t\t\"Show and Run Commands\",\n\t\t\t),\n\t\t\tcommandId: ShowAllCommandsAction.ID,\n\t\t\tcommandCenterOrder: 20,\n\t\t},\n\t],\n});\n\n//#endregion\n\n//#region Menu contributions\n\nMenuRegistry.appendMenuItem(MenuId.MenubarViewMenu, {\n\tgroup: \"1_open\",\n\tcommand: {\n\t\tid: ShowAllCommandsAction.ID,\n\t\ttitle: localize(\n\t\t\t{ key: \"miCommandPalette\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\"&&Command Palette...\",\n\t\t),\n\t},\n\torder: 1,\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarHelpMenu, {\n\tgroup: \"1_welcome\",\n\tcommand: {\n\t\tid: ShowAllCommandsAction.ID,\n\t\ttitle: localize(\n\t\t\t{ key: \"miShowAllCommands\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\"Show All Commands\",\n\t\t),\n\t},\n\torder: 2,\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarViewMenu, {\n\tgroup: \"1_open\",\n\tcommand: {\n\t\tid: OpenViewPickerAction.ID,\n\t\ttitle: localize(\n\t\t\t{ key: \"miOpenView\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\"&&Open View...\",\n\t\t),\n\t},\n\torder: 2,\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarGoMenu, {\n\tgroup: \"5_infile_nav\",\n\tcommand: {\n\t\tid: \"workbench.action.gotoLine\",\n\t\ttitle: localize(\n\t\t\t{ key: \"miGotoLine\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\"Go to &&Line/Column...\",\n\t\t),\n\t},\n\torder: 1,\n});\n\nMenuRegistry.appendMenuItem(MenuId.GlobalActivity, {\n\tgroup: \"1_command\",\n\tcommand: {\n\t\tid: ShowAllCommandsAction.ID,\n\t\ttitle: localize(\"commandPalette\", \"Command Palette...\"),\n\t},\n\torder: 1,\n});\n\nMenuRegistry.appendMenuItem(MenuId.EditorContext, {\n\tgroup: \"z_commands\",\n\twhen: EditorContextKeys.editorSimpleInput.toNegated(),\n\tcommand: {\n\t\tid: ShowAllCommandsAction.ID,\n\t\ttitle: localize(\"commandPalette\", \"Command Palette...\"),\n\t},\n\torder: 1,\n});\n\n//#endregion\n\n//#region Workbench actions and commands\n\nregisterAction2(ClearCommandHistoryAction);\nregisterAction2(ShowAllCommandsAction);\nregisterAction2(OpenViewPickerAction);\nregisterAction2(QuickAccessViewPickerAction);\n\nconst inViewsPickerContextKey = \"inViewsPicker\";\nconst inViewsPickerContext = ContextKeyExpr.and(\n\tinQuickPickContext,\n\tContextKeyExpr.has(inViewsPickerContextKey),\n);\nconst viewPickerKeybinding = QuickAccessViewPickerAction.KEYBINDING;\n\nconst quickAccessNavigateNextInViewPickerId =\n\t\"workbench.action.quickOpenNavigateNextInViewPicker\";\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: quickAccessNavigateNextInViewPickerId,\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\thandler: getQuickNavigateHandler(\n\t\tquickAccessNavigateNextInViewPickerId,\n\t\ttrue,\n\t),\n\twhen: inViewsPickerContext,\n\tprimary: viewPickerKeybinding.primary,\n\tlinux: viewPickerKeybinding.linux,\n\tmac: viewPickerKeybinding.mac,\n});\n\nconst quickAccessNavigatePreviousInViewPickerId =\n\t\"workbench.action.quickOpenNavigatePreviousInViewPicker\";\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: quickAccessNavigatePreviousInViewPickerId,\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\thandler: getQuickNavigateHandler(\n\t\tquickAccessNavigatePreviousInViewPickerId,\n\t\tfalse,\n\t),\n\twhen: inViewsPickerContext,\n\tprimary: viewPickerKeybinding.primary | KeyMod.Shift,\n\tlinux: viewPickerKeybinding.linux,\n\tmac: {\n\t\tprimary: viewPickerKeybinding.mac.primary | KeyMod.Shift,\n\t},\n});\n\n//#endregion\n"],
  "mappings": "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",
  "names": []
}
