{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/quickaccess/browser/commandsQuickAccess.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isFirefox } from \"../../../../base/browser/browser.js\";\nimport { raceTimeout, timeout } from \"../../../../base/common/async.js\";\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { stripIcons } from \"../../../../base/common/iconLabels.js\";\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport { Language } from \"../../../../base/common/platform.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport type { IEditor } from \"../../../../editor/common/editorCommon.js\";\nimport { AbstractEditorCommandsQuickAccessProvider } from \"../../../../editor/contrib/quickAccess/browser/commandsQuickAccess.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport { isLocalizedString } from \"../../../../platform/action/common/action.js\";\nimport {\n\tAction2,\n\tIMenuService,\n\tMenuId,\n\tMenuItemAction,\n\ttype SubmenuItemAction,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport {\n\ttype IConfigurationChangeEvent,\n\tIConfigurationService,\n} from \"../../../../platform/configuration/common/configuration.js\";\nimport { IDialogService } from \"../../../../platform/dialogs/common/dialogs.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport {\n\tCommandsHistory,\n\ttype ICommandQuickPick,\n} from \"../../../../platform/quickinput/browser/commandsQuickAccess.js\";\nimport { TriggerAction } from \"../../../../platform/quickinput/browser/pickerQuickAccess.js\";\nimport { DefaultQuickAccessFilterValue } from \"../../../../platform/quickinput/common/quickAccess.js\";\nimport {\n\tIQuickInputService,\n\ttype IQuickPickSeparator,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { IStorageService } from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport type { IWorkbenchQuickAccessConfiguration } from \"../../../browser/quickaccess.js\";\nimport {\n\ttype CommandInformationResult,\n\tIAiRelatedInformationService,\n\tRelatedInformationType,\n} from \"../../../services/aiRelatedInformation/common/aiRelatedInformation.js\";\nimport { IEditorGroupsService } from \"../../../services/editor/common/editorGroupsService.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { IExtensionService } from \"../../../services/extensions/common/extensions.js\";\nimport { createKeybindingCommandQuery } from \"../../../services/preferences/browser/keybindingsEditorModel.js\";\nimport { IPreferencesService } from \"../../../services/preferences/common/preferences.js\";\nimport { CHAT_OPEN_ACTION_ID } from \"../../chat/browser/actions/chatActions.js\";\nimport { ASK_QUICK_QUESTION_ACTION_ID } from \"../../chat/browser/actions/chatQuickInputActions.js\";\nimport {\n\tChatAgentLocation,\n\tIChatAgentService,\n} from \"../../chat/common/chatAgents.js\";\n\nexport class CommandsQuickAccessProvider extends AbstractEditorCommandsQuickAccessProvider {\n\tprivate static AI_RELATED_INFORMATION_MAX_PICKS = 5;\n\tprivate static AI_RELATED_INFORMATION_THRESHOLD = 0.8;\n\tprivate static AI_RELATED_INFORMATION_DEBOUNCE = 200;\n\n\t// If extensions are not yet registered, we wait for a little moment to give them\n\t// a chance to register so that the complete set of commands shows up as result\n\t// We do not want to delay functionality beyond that time though to keep the commands\n\t// functional.\n\tprivate readonly extensionRegistrationRace = raceTimeout(\n\t\tthis.extensionService.whenInstalledExtensionsRegistered(),\n\t\t800,\n\t);\n\n\tprivate useAiRelatedInfo = false;\n\n\tprotected get activeTextEditorControl(): IEditor | undefined {\n\t\treturn this.editorService.activeTextEditorControl;\n\t}\n\n\tget defaultFilterValue(): DefaultQuickAccessFilterValue | undefined {\n\t\tif (this.configuration.preserveInput) {\n\t\t\treturn DefaultQuickAccessFilterValue.LAST;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tconstructor(\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IDialogService dialogService: IDialogService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService,\n\t\t@IPreferencesService private readonly preferencesService: IPreferencesService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IAiRelatedInformationService private readonly aiRelatedInformationService: IAiRelatedInformationService,\n\t\t@IChatAgentService private readonly chatAgentService: IChatAgentService,\n\t) {\n\t\tsuper({\n\t\t\tshowAlias: !Language.isDefaultVariant(),\n\t\t\tnoResultsPick: () => ({\n\t\t\t\tlabel: localize('noCommandResults', \"No matching commands\"),\n\t\t\t\tcommandId: ''\n\t\t\t}),\n\t\t}, instantiationService, keybindingService, commandService, telemetryService, dialogService);\n\n\t\tthis._register(configurationService.onDidChangeConfiguration((e) => this.updateOptions(e)));\n\t\tthis.updateOptions();\n\t}\n\n\tprivate get configuration() {\n\t\tconst commandPaletteConfig =\n\t\t\tthis.configurationService.getValue<IWorkbenchQuickAccessConfiguration>()\n\t\t\t\t.workbench.commandPalette;\n\n\t\treturn {\n\t\t\tpreserveInput: commandPaletteConfig.preserveInput,\n\t\t\texperimental: commandPaletteConfig.experimental,\n\t\t};\n\t}\n\n\tprivate updateOptions(e?: IConfigurationChangeEvent): void {\n\t\tif (\n\t\t\te &&\n\t\t\t!e.affectsConfiguration(\"workbench.commandPalette.experimental\")\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst config = this.configuration;\n\t\tconst suggestedCommandIds =\n\t\t\tconfig.experimental.suggestCommands &&\n\t\t\tthis.productService.commandPaletteSuggestedCommandIds?.length\n\t\t\t\t? new Set(this.productService.commandPaletteSuggestedCommandIds)\n\t\t\t\t: undefined;\n\t\tthis.options.suggestedCommandIds = suggestedCommandIds;\n\t\tthis.useAiRelatedInfo = config.experimental.enableNaturalLanguageSearch;\n\t}\n\n\tprotected async getCommandPicks(\n\t\ttoken: CancellationToken,\n\t): Promise<Array<ICommandQuickPick>> {\n\t\t// wait for extensions registration or 800ms once\n\t\tawait this.extensionRegistrationRace;\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn [\n\t\t\t...this.getCodeEditorCommandPicks(),\n\t\t\t...this.getGlobalCommandPicks(),\n\t\t].map((picks) => ({\n\t\t\t...picks,\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\ticonClass: ThemeIcon.asClassName(Codicon.gear),\n\t\t\t\t\ttooltip: localize(\n\t\t\t\t\t\t\"configure keybinding\",\n\t\t\t\t\t\t\"Configure Keybinding\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t],\n\t\t\ttrigger: (): TriggerAction => {\n\t\t\t\tthis.preferencesService.openGlobalKeybindingSettings(false, {\n\t\t\t\t\tquery: createKeybindingCommandQuery(\n\t\t\t\t\t\tpicks.commandId,\n\t\t\t\t\t\tpicks.commandWhen,\n\t\t\t\t\t),\n\t\t\t\t});\n\t\t\t\treturn TriggerAction.CLOSE_PICKER;\n\t\t\t},\n\t\t}));\n\t}\n\n\tprotected hasAdditionalCommandPicks(\n\t\tfilter: string,\n\t\ttoken: CancellationToken,\n\t): boolean {\n\t\tif (\n\t\t\t!this.useAiRelatedInfo ||\n\t\t\ttoken.isCancellationRequested ||\n\t\t\tfilter === \"\" ||\n\t\t\t!this.aiRelatedInformationService.isEnabled()\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprotected async getAdditionalCommandPicks(\n\t\tallPicks: ICommandQuickPick[],\n\t\tpicksSoFar: ICommandQuickPick[],\n\t\tfilter: string,\n\t\ttoken: CancellationToken,\n\t): Promise<Array<ICommandQuickPick | IQuickPickSeparator>> {\n\t\tif (!this.hasAdditionalCommandPicks(filter, token)) {\n\t\t\treturn [];\n\t\t}\n\n\t\tlet additionalPicks;\n\n\t\ttry {\n\t\t\t// Wait a bit to see if the user is still typing\n\t\t\tawait timeout(\n\t\t\t\tCommandsQuickAccessProvider.AI_RELATED_INFORMATION_DEBOUNCE,\n\t\t\t\ttoken,\n\t\t\t);\n\t\t\tadditionalPicks = await this.getRelatedInformationPicks(\n\t\t\t\tallPicks,\n\t\t\t\tpicksSoFar,\n\t\t\t\tfilter,\n\t\t\t\ttoken,\n\t\t\t);\n\t\t} catch (e) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (picksSoFar.length || additionalPicks.length) {\n\t\t\tadditionalPicks.push({\n\t\t\t\ttype: \"separator\",\n\t\t\t});\n\t\t}\n\n\t\tconst defaultAgent = this.chatAgentService.getDefaultAgent(\n\t\t\tChatAgentLocation.Panel,\n\t\t);\n\t\tif (defaultAgent) {\n\t\t\tadditionalPicks.push({\n\t\t\t\tlabel: localize(\n\t\t\t\t\t\"askXInChat\",\n\t\t\t\t\t\"Ask {0}: {1}\",\n\t\t\t\t\tdefaultAgent.fullName,\n\t\t\t\t\tfilter,\n\t\t\t\t),\n\t\t\t\tcommandId:\n\t\t\t\t\tthis.configuration.experimental.askChatLocation ===\n\t\t\t\t\t\"quickChat\"\n\t\t\t\t\t\t? ASK_QUICK_QUESTION_ACTION_ID\n\t\t\t\t\t\t: CHAT_OPEN_ACTION_ID,\n\t\t\t\targs: [filter],\n\t\t\t});\n\t\t}\n\n\t\treturn additionalPicks;\n\t}\n\n\tprivate async getRelatedInformationPicks(\n\t\tallPicks: ICommandQuickPick[],\n\t\tpicksSoFar: ICommandQuickPick[],\n\t\tfilter: string,\n\t\ttoken: CancellationToken,\n\t) {\n\t\tconst relatedInformation =\n\t\t\t(await this.aiRelatedInformationService.getRelatedInformation(\n\t\t\t\tfilter,\n\t\t\t\t[RelatedInformationType.CommandInformation],\n\t\t\t\ttoken,\n\t\t\t)) as CommandInformationResult[];\n\n\t\t// Sort by weight descending to get the most relevant results first\n\t\trelatedInformation.sort((a, b) => b.weight - a.weight);\n\n\t\tconst setOfPicksSoFar = new Set(picksSoFar.map((p) => p.commandId));\n\t\tconst additionalPicks = new Array<\n\t\t\tICommandQuickPick | IQuickPickSeparator\n\t\t>();\n\n\t\tfor (const info of relatedInformation) {\n\t\t\tif (\n\t\t\t\tinfo.weight <\n\t\t\t\t\tCommandsQuickAccessProvider.AI_RELATED_INFORMATION_THRESHOLD ||\n\t\t\t\tadditionalPicks.length ===\n\t\t\t\t\tCommandsQuickAccessProvider.AI_RELATED_INFORMATION_MAX_PICKS\n\t\t\t) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst pick = allPicks.find(\n\t\t\t\t(p) =>\n\t\t\t\t\tp.commandId === info.command &&\n\t\t\t\t\t!setOfPicksSoFar.has(p.commandId),\n\t\t\t);\n\t\t\tif (pick) {\n\t\t\t\tadditionalPicks.push(pick);\n\t\t\t}\n\t\t}\n\n\t\treturn additionalPicks;\n\t}\n\n\tprivate getGlobalCommandPicks(): ICommandQuickPick[] {\n\t\tconst globalCommandPicks: ICommandQuickPick[] = [];\n\t\tconst scopedContextKeyService =\n\t\t\tthis.editorService.activeEditorPane?.scopedContextKeyService ||\n\t\t\tthis.editorGroupService.activeGroup.scopedContextKeyService;\n\t\tconst globalCommandsMenu = this.menuService.getMenuActions(\n\t\t\tMenuId.CommandPalette,\n\t\t\tscopedContextKeyService,\n\t\t);\n\t\tconst globalCommandsMenuActions = globalCommandsMenu\n\t\t\t.reduce(\n\t\t\t\t(r, [, actions]) => [...r, ...actions],\n\t\t\t\t<Array<MenuItemAction | SubmenuItemAction | string>>[],\n\t\t\t)\n\t\t\t.filter(\n\t\t\t\t(action) => action instanceof MenuItemAction && action.enabled,\n\t\t\t) as MenuItemAction[];\n\n\t\tfor (const action of globalCommandsMenuActions) {\n\t\t\t// Label\n\t\t\tlet label =\n\t\t\t\t(typeof action.item.title === \"string\"\n\t\t\t\t\t? action.item.title\n\t\t\t\t\t: action.item.title.value) || action.item.id;\n\n\t\t\t// Category\n\t\t\tconst category =\n\t\t\t\ttypeof action.item.category === \"string\"\n\t\t\t\t\t? action.item.category\n\t\t\t\t\t: action.item.category?.value;\n\t\t\tif (category) {\n\t\t\t\tlabel = localize(\n\t\t\t\t\t\"commandWithCategory\",\n\t\t\t\t\t\"{0}: {1}\",\n\t\t\t\t\tcategory,\n\t\t\t\t\tlabel,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Alias\n\t\t\tconst aliasLabel =\n\t\t\t\ttypeof action.item.title !== \"string\"\n\t\t\t\t\t? action.item.title.original\n\t\t\t\t\t: undefined;\n\t\t\tconst aliasCategory =\n\t\t\t\tcategory &&\n\t\t\t\taction.item.category &&\n\t\t\t\ttypeof action.item.category !== \"string\"\n\t\t\t\t\t? action.item.category.original\n\t\t\t\t\t: undefined;\n\t\t\tconst commandAlias =\n\t\t\t\taliasLabel && category\n\t\t\t\t\t? aliasCategory\n\t\t\t\t\t\t? `${aliasCategory}: ${aliasLabel}`\n\t\t\t\t\t\t: `${category}: ${aliasLabel}`\n\t\t\t\t\t: aliasLabel;\n\n\t\t\tconst metadataDescription = action.item.metadata?.description;\n\t\t\tconst commandDescription =\n\t\t\t\tmetadataDescription === undefined ||\n\t\t\t\tisLocalizedString(metadataDescription)\n\t\t\t\t\t? metadataDescription\n\t\t\t\t\t: // TODO: this type will eventually not be a string and when that happens, this should simplified.\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue: metadataDescription,\n\t\t\t\t\t\t\toriginal: metadataDescription,\n\t\t\t\t\t\t};\n\t\t\tglobalCommandPicks.push({\n\t\t\t\tcommandId: action.item.id,\n\t\t\t\tcommandWhen: action.item.precondition?.serialize(),\n\t\t\t\tcommandAlias,\n\t\t\t\tlabel: stripIcons(label),\n\t\t\t\tcommandDescription,\n\t\t\t});\n\t\t}\n\n\t\treturn globalCommandPicks;\n\t}\n}\n\n//#region Actions\n\nexport class ShowAllCommandsAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.showCommands\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ShowAllCommandsAction.ID,\n\t\t\ttitle: localize2(\"showTriggerActions\", \"Show All Commands\"),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: undefined,\n\t\t\t\tprimary: isFirefox\n\t\t\t\t\t? undefined\n\t\t\t\t\t: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyP,\n\t\t\t\tsecondary: [KeyCode.F1],\n\t\t\t},\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\taccessor\n\t\t\t.get(IQuickInputService)\n\t\t\t.quickAccess.show(CommandsQuickAccessProvider.PREFIX);\n\t}\n}\n\nexport class ClearCommandHistoryAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.clearCommandHistory\",\n\t\t\ttitle: localize2(\"clearCommandHistory\", \"Clear Command History\"),\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst storageService = accessor.get(IStorageService);\n\t\tconst dialogService = accessor.get(IDialogService);\n\n\t\tconst commandHistoryLength =\n\t\t\tCommandsHistory.getConfiguredCommandHistoryLength(\n\t\t\t\tconfigurationService,\n\t\t\t);\n\t\tif (commandHistoryLength > 0) {\n\t\t\t// Ask for confirmation\n\t\t\tconst { confirmed } = await dialogService.confirm({\n\t\t\t\ttype: \"warning\",\n\t\t\t\tmessage: localize(\n\t\t\t\t\t\"confirmClearMessage\",\n\t\t\t\t\t\"Do you want to clear the history of recently used commands?\",\n\t\t\t\t),\n\t\t\t\tdetail: localize(\n\t\t\t\t\t\"confirmClearDetail\",\n\t\t\t\t\t\"This action is irreversible!\",\n\t\t\t\t),\n\t\t\t\tprimaryButton: localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"clearButtonLabel\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"&&Clear\",\n\t\t\t\t),\n\t\t\t});\n\n\t\t\tif (!confirmed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tCommandsHistory.clearHistory(configurationService, storageService);\n\t\t}\n\t}\n}\n\n//#endregion\n"],
  "mappings": "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",
  "names": []
}
