{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/quickaccess/browser/commandsQuickAccess.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isFirefox } from '../../../../base/browser/browser.js';\nimport { raceTimeout, timeout } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { stripIcons } from '../../../../base/common/iconLabels.js';\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { Language } from '../../../../base/common/platform.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { IEditor } from '../../../../editor/common/editorCommon.js';\nimport { AbstractEditorCommandsQuickAccessProvider } from '../../../../editor/contrib/quickAccess/browser/commandsQuickAccess.js';\nimport { localize, localize2 } from '../../../../nls.js';\nimport { isLocalizedString } from '../../../../platform/action/common/action.js';\nimport { Action2, IMenuService, MenuId, MenuItemAction, SubmenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IConfigurationChangeEvent, IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { IProductService } from '../../../../platform/product/common/productService.js';\nimport { CommandsHistory, ICommandQuickPick } from '../../../../platform/quickinput/browser/commandsQuickAccess.js';\nimport { TriggerAction } from '../../../../platform/quickinput/browser/pickerQuickAccess.js';\nimport { DefaultQuickAccessFilterValue } from '../../../../platform/quickinput/common/quickAccess.js';\nimport { IQuickInputService, IQuickPickSeparator } from '../../../../platform/quickinput/common/quickInput.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { IWorkbenchQuickAccessConfiguration } from '../../../browser/quickaccess.js';\nimport { CHAT_OPEN_ACTION_ID } from '../../chat/browser/actions/chatActions.js';\nimport { ASK_QUICK_QUESTION_ACTION_ID } from '../../chat/browser/actions/chatQuickInputActions.js';\nimport { ChatAgentLocation, IChatAgentService } from '../../chat/common/chatAgents.js';\nimport { CommandInformationResult, IAiRelatedInformationService, RelatedInformationType } from '../../../services/aiRelatedInformation/common/aiRelatedInformation.js';\nimport { IEditorGroupsService } from '../../../services/editor/common/editorGroupsService.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { createKeybindingCommandQuery } from '../../../services/preferences/browser/keybindingsEditorModel.js';\nimport { IPreferencesService } from '../../../services/preferences/common/preferences.js';\n\nexport class CommandsQuickAccessProvider extends AbstractEditorCommandsQuickAccessProvider {\n\n\tprivate static AI_RELATED_INFORMATION_MAX_PICKS = 5;\n\tprivate static AI_RELATED_INFORMATION_THRESHOLD = 0.8;\n\tprivate static AI_RELATED_INFORMATION_DEBOUNCE = 200;\n\n\t// If extensions are not yet registered, we wait for a little moment to give them\n\t// a chance to register so that the complete set of commands shows up as result\n\t// We do not want to delay functionality beyond that time though to keep the commands\n\t// functional.\n\tprivate readonly extensionRegistrationRace = raceTimeout(this.extensionService.whenInstalledExtensionsRegistered(), 800);\n\n\tprivate useAiRelatedInfo = false;\n\n\tprotected get activeTextEditorControl(): IEditor | undefined { return this.editorService.activeTextEditorControl; }\n\n\tget defaultFilterValue(): DefaultQuickAccessFilterValue | undefined {\n\t\tif (this.configuration.preserveInput) {\n\t\t\treturn DefaultQuickAccessFilterValue.LAST;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tconstructor(\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IDialogService dialogService: IDialogService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService,\n\t\t@IPreferencesService private readonly preferencesService: IPreferencesService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IAiRelatedInformationService private readonly aiRelatedInformationService: IAiRelatedInformationService,\n\t\t@IChatAgentService private readonly chatAgentService: IChatAgentService,\n\t) {\n\t\tsuper({\n\t\t\tshowAlias: !Language.isDefaultVariant(),\n\t\t\tnoResultsPick: () => ({\n\t\t\t\tlabel: localize('noCommandResults', \"No matching commands\"),\n\t\t\t\tcommandId: ''\n\t\t\t}),\n\t\t}, instantiationService, keybindingService, commandService, telemetryService, dialogService);\n\n\t\tthis._register(configurationService.onDidChangeConfiguration((e) => this.updateOptions(e)));\n\t\tthis.updateOptions();\n\t}\n\n\tprivate get configuration() {\n\t\tconst commandPaletteConfig = this.configurationService.getValue<IWorkbenchQuickAccessConfiguration>().workbench.commandPalette;\n\n\t\treturn {\n\t\t\tpreserveInput: commandPaletteConfig.preserveInput,\n\t\t\texperimental: commandPaletteConfig.experimental\n\t\t};\n\t}\n\n\tprivate updateOptions(e?: IConfigurationChangeEvent): void {\n\t\tif (e && !e.affectsConfiguration('workbench.commandPalette.experimental')) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst config = this.configuration;\n\t\tconst suggestedCommandIds = config.experimental.suggestCommands && this.productService.commandPaletteSuggestedCommandIds?.length\n\t\t\t? new Set(this.productService.commandPaletteSuggestedCommandIds)\n\t\t\t: undefined;\n\t\tthis.options.suggestedCommandIds = suggestedCommandIds;\n\t\tthis.useAiRelatedInfo = config.experimental.enableNaturalLanguageSearch;\n\t}\n\n\tprotected async getCommandPicks(token: CancellationToken): Promise<Array<ICommandQuickPick>> {\n\n\t\t// wait for extensions registration or 800ms once\n\t\tawait this.extensionRegistrationRace;\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn [\n\t\t\t...this.getCodeEditorCommandPicks(),\n\t\t\t...this.getGlobalCommandPicks()\n\t\t].map(picks => ({\n\t\t\t...picks,\n\t\t\tbuttons: [{\n\t\t\t\ticonClass: ThemeIcon.asClassName(Codicon.gear),\n\t\t\t\ttooltip: localize('configure keybinding', \"Configure Keybinding\"),\n\t\t\t}],\n\t\t\ttrigger: (): TriggerAction => {\n\t\t\t\tthis.preferencesService.openGlobalKeybindingSettings(false, { query: createKeybindingCommandQuery(picks.commandId, picks.commandWhen) });\n\t\t\t\treturn TriggerAction.CLOSE_PICKER;\n\t\t\t},\n\t\t}));\n\t}\n\n\tprotected hasAdditionalCommandPicks(filter: string, token: CancellationToken): boolean {\n\t\tif (\n\t\t\t!this.useAiRelatedInfo\n\t\t\t|| token.isCancellationRequested\n\t\t\t|| filter === ''\n\t\t\t|| !this.aiRelatedInformationService.isEnabled()\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprotected async getAdditionalCommandPicks(allPicks: ICommandQuickPick[], picksSoFar: ICommandQuickPick[], filter: string, token: CancellationToken): Promise<Array<ICommandQuickPick | IQuickPickSeparator>> {\n\t\tif (!this.hasAdditionalCommandPicks(filter, token)) {\n\t\t\treturn [];\n\t\t}\n\n\t\tlet additionalPicks;\n\n\t\ttry {\n\t\t\t// Wait a bit to see if the user is still typing\n\t\t\tawait timeout(CommandsQuickAccessProvider.AI_RELATED_INFORMATION_DEBOUNCE, token);\n\t\t\tadditionalPicks = await this.getRelatedInformationPicks(allPicks, picksSoFar, filter, token);\n\t\t} catch (e) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (picksSoFar.length || additionalPicks.length) {\n\t\t\tadditionalPicks.push({\n\t\t\t\ttype: 'separator'\n\t\t\t});\n\t\t}\n\n\t\tconst defaultAgent = this.chatAgentService.getDefaultAgent(ChatAgentLocation.Panel);\n\t\tif (defaultAgent) {\n\t\t\tadditionalPicks.push({\n\t\t\t\tlabel: localize('askXInChat', \"Ask {0}: {1}\", defaultAgent.fullName, filter),\n\t\t\t\tcommandId: this.configuration.experimental.askChatLocation === 'quickChat' ? ASK_QUICK_QUESTION_ACTION_ID : CHAT_OPEN_ACTION_ID,\n\t\t\t\targs: [filter]\n\t\t\t});\n\t\t}\n\n\t\treturn additionalPicks;\n\t}\n\n\tprivate async getRelatedInformationPicks(allPicks: ICommandQuickPick[], picksSoFar: ICommandQuickPick[], filter: string, token: CancellationToken) {\n\t\tconst relatedInformation = await this.aiRelatedInformationService.getRelatedInformation(\n\t\t\tfilter,\n\t\t\t[RelatedInformationType.CommandInformation],\n\t\t\ttoken\n\t\t) as CommandInformationResult[];\n\n\t\t// Sort by weight descending to get the most relevant results first\n\t\trelatedInformation.sort((a, b) => b.weight - a.weight);\n\n\t\tconst setOfPicksSoFar = new Set(picksSoFar.map(p => p.commandId));\n\t\tconst additionalPicks = new Array<ICommandQuickPick | IQuickPickSeparator>();\n\n\t\tfor (const info of relatedInformation) {\n\t\t\tif (info.weight < CommandsQuickAccessProvider.AI_RELATED_INFORMATION_THRESHOLD || additionalPicks.length === CommandsQuickAccessProvider.AI_RELATED_INFORMATION_MAX_PICKS) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst pick = allPicks.find(p => p.commandId === info.command && !setOfPicksSoFar.has(p.commandId));\n\t\t\tif (pick) {\n\t\t\t\tadditionalPicks.push(pick);\n\t\t\t}\n\t\t}\n\n\t\treturn additionalPicks;\n\t}\n\n\tprivate getGlobalCommandPicks(): ICommandQuickPick[] {\n\t\tconst globalCommandPicks: ICommandQuickPick[] = [];\n\t\tconst scopedContextKeyService = this.editorService.activeEditorPane?.scopedContextKeyService || this.editorGroupService.activeGroup.scopedContextKeyService;\n\t\tconst globalCommandsMenu = this.menuService.getMenuActions(MenuId.CommandPalette, scopedContextKeyService);\n\t\tconst globalCommandsMenuActions = globalCommandsMenu\n\t\t\t.reduce((r, [, actions]) => [...r, ...actions], <Array<MenuItemAction | SubmenuItemAction | string>>[])\n\t\t\t.filter(action => action instanceof MenuItemAction && action.enabled) as MenuItemAction[];\n\n\t\tfor (const action of globalCommandsMenuActions) {\n\n\t\t\t// Label\n\t\t\tlet label = (typeof action.item.title === 'string' ? action.item.title : action.item.title.value) || action.item.id;\n\n\t\t\t// Category\n\t\t\tconst category = typeof action.item.category === 'string' ? action.item.category : action.item.category?.value;\n\t\t\tif (category) {\n\t\t\t\tlabel = localize('commandWithCategory', \"{0}: {1}\", category, label);\n\t\t\t}\n\n\t\t\t// Alias\n\t\t\tconst aliasLabel = typeof action.item.title !== 'string' ? action.item.title.original : undefined;\n\t\t\tconst aliasCategory = (category && action.item.category && typeof action.item.category !== 'string') ? action.item.category.original : undefined;\n\t\t\tconst commandAlias = (aliasLabel && category) ?\n\t\t\t\taliasCategory ? `${aliasCategory}: ${aliasLabel}` : `${category}: ${aliasLabel}` :\n\t\t\t\taliasLabel;\n\n\t\t\tconst metadataDescription = action.item.metadata?.description;\n\t\t\tconst commandDescription = metadataDescription === undefined || isLocalizedString(metadataDescription)\n\t\t\t\t? metadataDescription\n\t\t\t\t// TODO: this type will eventually not be a string and when that happens, this should simplified.\n\t\t\t\t: { value: metadataDescription, original: metadataDescription };\n\t\t\tglobalCommandPicks.push({\n\t\t\t\tcommandId: action.item.id,\n\t\t\t\tcommandWhen: action.item.precondition?.serialize(),\n\t\t\t\tcommandAlias,\n\t\t\t\tlabel: stripIcons(label),\n\t\t\t\tcommandDescription,\n\t\t\t});\n\t\t}\n\n\t\treturn globalCommandPicks;\n\t}\n}\n\n//#region Actions\n\nexport class ShowAllCommandsAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.showCommands';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ShowAllCommandsAction.ID,\n\t\t\ttitle: localize2('showTriggerActions', 'Show All Commands'),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: undefined,\n\t\t\t\tprimary: !isFirefox ? (KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyP) : undefined,\n\t\t\t\tsecondary: [KeyCode.F1]\n\t\t\t},\n\t\t\tf1: true\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\taccessor.get(IQuickInputService).quickAccess.show(CommandsQuickAccessProvider.PREFIX);\n\t}\n}\n\nexport class ClearCommandHistoryAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.clearCommandHistory',\n\t\t\ttitle: localize2('clearCommandHistory', 'Clear Command History'),\n\t\t\tf1: true\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst storageService = accessor.get(IStorageService);\n\t\tconst dialogService = accessor.get(IDialogService);\n\n\t\tconst commandHistoryLength = CommandsHistory.getConfiguredCommandHistoryLength(configurationService);\n\t\tif (commandHistoryLength > 0) {\n\n\t\t\t// Ask for confirmation\n\t\t\tconst { confirmed } = await dialogService.confirm({\n\t\t\t\ttype: 'warning',\n\t\t\t\tmessage: localize('confirmClearMessage', \"Do you want to clear the history of recently used commands?\"),\n\t\t\t\tdetail: localize('confirmClearDetail', \"This action is irreversible!\"),\n\t\t\t\tprimaryButton: localize({ key: 'clearButtonLabel', comment: ['&& denotes a mnemonic'] }, \"&&Clear\")\n\t\t\t});\n\n\t\t\tif (!confirmed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tCommandsHistory.clearHistory(configurationService, storageService);\n\t\t}\n\t}\n}\n\n//#endregion\n"],
  "mappings": "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",
  "names": []
}
