import{localize as e}from"../../../../nls.js";import{Extensions as I}from"../../../../platform/quickinput/common/quickAccess.js";import{Registry as A}from"../../../../platform/registry/common/platform.js";import{HelpQuickAccessProvider as t}from"../../../../platform/quickinput/browser/helpQuickAccess.js";import{ViewQuickAccessProvider as d,OpenViewPickerAction as m,QuickAccessViewPickerAction as s}from"./viewQuickAccess.js";import{CommandsQuickAccessProvider as p,ShowAllCommandsAction as i,ClearCommandHistoryAction as C}from"./commandsQuickAccess.js";import{MenuRegistry as n,MenuId as o,registerAction2 as c}from"../../../../platform/actions/common/actions.js";import{KeyMod as l}from"../../../../base/common/keyCodes.js";import{ContextKeyExpr as u}from"../../../../platform/contextkey/common/contextkey.js";import{inQuickPickContext as f,getQuickNavigateHandler as k}from"../../../browser/quickaccess.js";import{KeybindingsRegistry as h,KeybindingWeight as g}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{EditorContextKeys as v}from"../../../../editor/common/editorContextKeys.js";const a=A.as(I.Quickaccess);a.registerQuickAccessProvider({ctor:t,prefix:t.PREFIX,placeholder:e("helpQuickAccessPlaceholder","Type '{0}' to get help on the actions you can take from here.",t.PREFIX),helpEntries:[{description:e("helpQuickAccess","Show all Quick Access Providers"),commandCenterOrder:70,commandCenterLabel:e("more","More")}]}),a.registerQuickAccessProvider({ctor:d,prefix:d.PREFIX,contextKey:"inViewsPicker",placeholder:e("viewQuickAccessPlaceholder","Type the name of a view, output channel or terminal to open."),helpEntries:[{description:e("viewQuickAccess","Open View"),commandId:m.ID}]}),a.registerQuickAccessProvider({ctor:p,prefix:p.PREFIX,contextKey:"inCommandsPicker",placeholder:e("commandsQuickAccessPlaceholder","Type the name of a command to run."),helpEntries:[{description:e("commandsQuickAccess","Show and Run Commands"),commandId:i.ID,commandCenterOrder:20}]}),n.appendMenuItem(o.MenubarViewMenu,{group:"1_open",command:{id:i.ID,title:e({key:"miCommandPalette",comment:["&& denotes a mnemonic"]},"&&Command Palette...")},order:1}),n.appendMenuItem(o.MenubarHelpMenu,{group:"1_welcome",command:{id:i.ID,title:e({key:"miShowAllCommands",comment:["&& denotes a mnemonic"]},"Show All Commands")},order:2}),n.appendMenuItem(o.MenubarViewMenu,{group:"1_open",command:{id:m.ID,title:e({key:"miOpenView",comment:["&& denotes a mnemonic"]},"&&Open View...")},order:2}),n.appendMenuItem(o.MenubarGoMenu,{group:"5_infile_nav",command:{id:"workbench.action.gotoLine",title:e({key:"miGotoLine",comment:["&& denotes a mnemonic"]},"Go to &&Line/Column...")},order:1}),n.appendMenuItem(o.GlobalActivity,{group:"1_command",command:{id:i.ID,title:e("commandPalette","Command Palette...")},order:1}),n.appendMenuItem(o.EditorContext,{group:"z_commands",when:v.editorSimpleInput.toNegated(),command:{id:i.ID,title:e("commandPalette","Command Palette...")},order:1}),c(C),c(i),c(m),c(s);const x="inViewsPicker",P=u.and(f,u.has(x)),r=s.KEYBINDING,w="workbench.action.quickOpenNavigateNextInViewPicker";h.registerCommandAndKeybindingRule({id:w,weight:g.WorkbenchContrib+50,handler:k(w,!0),when:P,primary:r.primary,linux:r.linux,mac:r.mac});const y="workbench.action.quickOpenNavigatePreviousInViewPicker";h.registerCommandAndKeybindingRule({id:y,weight:g.WorkbenchContrib+50,handler:k(y,!1),when:P,primary:r.primary|l.Shift,linux:r.linux,mac:{primary:r.mac.primary|l.Shift}});
