{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/common/model/notebookCellTextModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ThrottledDelayer } from \"../../../../../base/common/async.js\";\nimport { Emitter, type Event } from \"../../../../../base/common/event.js\";\nimport { StringSHA1, hash } from \"../../../../../base/common/hash.js\";\nimport { toFormattedString } from \"../../../../../base/common/jsonFormatter.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\tdispose,\n} from \"../../../../../base/common/lifecycle.js\";\nimport type { URI } from \"../../../../../base/common/uri.js\";\nimport * as UUID from \"../../../../../base/common/uuid.js\";\nimport { Range } from \"../../../../../editor/common/core/range.js\";\nimport type { ILanguageService } from \"../../../../../editor/common/languages/language.js\";\nimport { PLAINTEXT_LANGUAGE_ID } from \"../../../../../editor/common/languages/modesRegistry.js\";\nimport * as model from \"../../../../../editor/common/model.js\";\nimport { PieceTreeTextBuffer } from \"../../../../../editor/common/model/pieceTreeTextBuffer/pieceTreeTextBuffer.js\";\nimport {\n\ttype TextModel,\n\tcreateTextBuffer,\n} from \"../../../../../editor/common/model/textModel.js\";\nimport type { ILanguageDetectionService } from \"../../../../services/languageDetection/common/languageDetectionWorkerService.js\";\nimport type {\n\tCellInternalMetadataChangedEvent,\n\tCellKind,\n\tICell,\n\tICellDto2,\n\tICellOutput,\n\tIOutputDto,\n\tIOutputItemDto,\n\tNotebookCellCollapseState,\n\tNotebookCellInternalMetadata,\n\tNotebookCellMetadata,\n\tNotebookCellOutputsSplice,\n\tTransientCellMetadata,\n\tTransientOptions,\n} from \"../notebookCommon.js\";\nimport { NotebookCellOutputTextModel } from \"./notebookCellOutputTextModel.js\";\n\nexport class NotebookCellTextModel extends Disposable implements ICell {\n\tprivate readonly _onDidChangeOutputs = this._register(\n\t\tnew Emitter<NotebookCellOutputsSplice>(),\n\t);\n\treadonly onDidChangeOutputs: Event<NotebookCellOutputsSplice> =\n\t\tthis._onDidChangeOutputs.event;\n\n\tprivate readonly _onDidChangeOutputItems = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onDidChangeOutputItems: Event<void> =\n\t\tthis._onDidChangeOutputItems.event;\n\n\tprivate readonly _onDidChangeContent = this._register(\n\t\tnew Emitter<\"content\" | \"language\" | \"mime\">(),\n\t);\n\treadonly onDidChangeContent: Event<\"content\" | \"language\" | \"mime\"> =\n\t\tthis._onDidChangeContent.event;\n\n\tprivate readonly _onDidChangeMetadata = this._register(new Emitter<void>());\n\treadonly onDidChangeMetadata: Event<void> = this._onDidChangeMetadata.event;\n\n\tprivate readonly _onDidChangeInternalMetadata = this._register(\n\t\tnew Emitter<CellInternalMetadataChangedEvent>(),\n\t);\n\treadonly onDidChangeInternalMetadata: Event<CellInternalMetadataChangedEvent> =\n\t\tthis._onDidChangeInternalMetadata.event;\n\n\tprivate readonly _onDidChangeLanguage = this._register(\n\t\tnew Emitter<string>(),\n\t);\n\treadonly onDidChangeLanguage: Event<string> =\n\t\tthis._onDidChangeLanguage.event;\n\n\tprivate _outputs: NotebookCellOutputTextModel[];\n\n\tget outputs(): ICellOutput[] {\n\t\treturn this._outputs;\n\t}\n\n\tprivate _metadata: NotebookCellMetadata;\n\n\tget metadata() {\n\t\treturn this._metadata;\n\t}\n\n\tset metadata(newMetadata: NotebookCellMetadata) {\n\t\tthis._metadata = newMetadata;\n\t\tthis._hash = null;\n\t\tthis._onDidChangeMetadata.fire();\n\t}\n\n\tprivate _internalMetadata: NotebookCellInternalMetadata;\n\n\tget internalMetadata() {\n\t\treturn this._internalMetadata;\n\t}\n\n\tset internalMetadata(newInternalMetadata: NotebookCellInternalMetadata) {\n\t\tconst lastRunSuccessChanged =\n\t\t\tthis._internalMetadata.lastRunSuccess !==\n\t\t\tnewInternalMetadata.lastRunSuccess;\n\t\tnewInternalMetadata = {\n\t\t\t...newInternalMetadata,\n\t\t\t...{\n\t\t\t\trunStartTimeAdjustment: computeRunStartTimeAdjustment(\n\t\t\t\t\tthis._internalMetadata,\n\t\t\t\t\tnewInternalMetadata,\n\t\t\t\t),\n\t\t\t},\n\t\t};\n\t\tthis._internalMetadata = newInternalMetadata;\n\t\tthis._hash = null;\n\t\tthis._onDidChangeInternalMetadata.fire({ lastRunSuccessChanged });\n\t}\n\n\tget language() {\n\t\treturn this._language;\n\t}\n\n\tset language(newLanguage: string) {\n\t\tif (\n\t\t\tthis._textModel &&\n\t\t\t// 1. the language update is from workspace edit, checking if it's the same as text model's mode\n\t\t\tthis._textModel.getLanguageId() ===\n\t\t\t\tthis._languageService.getLanguageIdByLanguageName(\n\t\t\t\t\tnewLanguage,\n\t\t\t\t) &&\n\t\t\t// 2. the text model's mode might be the same as the `this.language`, even if the language friendly name is not the same, we should not trigger an update\n\t\t\tthis._textModel.getLanguageId() ===\n\t\t\t\tthis._languageService.getLanguageIdByLanguageName(this.language)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._hasLanguageSetExplicitly = true;\n\t\tthis._setLanguageInternal(newLanguage);\n\t}\n\n\tpublic get mime(): string | undefined {\n\t\treturn this._mime;\n\t}\n\n\tpublic set mime(newMime: string | undefined) {\n\t\tif (this._mime === newMime) {\n\t\t\treturn;\n\t\t}\n\t\tthis._mime = newMime;\n\t\tthis._hash = null;\n\t\tthis._onDidChangeContent.fire(\"mime\");\n\t}\n\n\tprivate _textBuffer!: model.IReadonlyTextBuffer;\n\n\tget textBuffer() {\n\t\tif (this._textBuffer) {\n\t\t\treturn this._textBuffer;\n\t\t}\n\n\t\tthis._textBuffer = this._register(\n\t\t\tcreateTextBuffer(this._source, model.DefaultEndOfLine.LF)\n\t\t\t\t.textBuffer,\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis._textBuffer.onDidChangeContent(() => {\n\t\t\t\tthis._hash = null;\n\t\t\t\tif (!this._textModel) {\n\t\t\t\t\tthis._onDidChangeContent.fire(\"content\");\n\t\t\t\t}\n\t\t\t\tthis.autoDetectLanguage();\n\t\t\t}),\n\t\t);\n\n\t\treturn this._textBuffer;\n\t}\n\n\tprivate _textBufferHash: string | null = null;\n\tprivate _hash: number | null = null;\n\n\tprivate _versionId = 1;\n\tprivate _alternativeId = 1;\n\tget alternativeId(): number {\n\t\treturn this._alternativeId;\n\t}\n\n\tprivate readonly _textModelDisposables = this._register(\n\t\tnew DisposableStore(),\n\t);\n\tprivate _textModel: TextModel | undefined = undefined;\n\tget textModel(): TextModel | undefined {\n\t\treturn this._textModel;\n\t}\n\n\tset textModel(m: TextModel | undefined) {\n\t\tif (this._textModel === m) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._textModelDisposables.clear();\n\t\tthis._textModel = m;\n\t\tif (this._textModel) {\n\t\t\tthis.setRegisteredLanguage(\n\t\t\t\tthis._languageService,\n\t\t\t\tthis._textModel.getLanguageId(),\n\t\t\t\tthis.language,\n\t\t\t);\n\n\t\t\t// Listen to language changes on the model\n\t\t\tthis._textModelDisposables.add(\n\t\t\t\tthis._textModel.onDidChangeLanguage((e) =>\n\t\t\t\t\tthis.setRegisteredLanguage(\n\t\t\t\t\t\tthis._languageService,\n\t\t\t\t\t\te.newLanguage,\n\t\t\t\t\t\tthis.language,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis._textModelDisposables.add(\n\t\t\t\tthis._textModel.onWillDispose(\n\t\t\t\t\t() => (this.textModel = undefined),\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis._textModelDisposables.add(\n\t\t\t\tthis._textModel.onDidChangeContent(() => {\n\t\t\t\t\tif (this._textModel) {\n\t\t\t\t\t\tthis._versionId = this._textModel.getVersionId();\n\t\t\t\t\t\tthis._alternativeId =\n\t\t\t\t\t\t\tthis._textModel.getAlternativeVersionId();\n\t\t\t\t\t}\n\t\t\t\t\tthis._textBufferHash = null;\n\t\t\t\t\tthis._onDidChangeContent.fire(\"content\");\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tthis._textModel._overwriteVersionId(this._versionId);\n\t\t\tthis._textModel._overwriteAlternativeVersionId(this._versionId);\n\t\t}\n\t}\n\n\tprivate setRegisteredLanguage(\n\t\tlanguageService: ILanguageService,\n\t\tnewLanguage: string,\n\t\tcurrentLanguage: string,\n\t) {\n\t\t// The language defined in the cell might not be supported in the editor so the text model might be using the default fallback\n\t\t// If so let's not modify the language\n\t\tconst isFallBackLanguage =\n\t\t\tnewLanguage === PLAINTEXT_LANGUAGE_ID || newLanguage === \"jupyter\";\n\t\tif (\n\t\t\t!languageService.isRegisteredLanguageId(currentLanguage) &&\n\t\t\tisFallBackLanguage\n\t\t) {\n\t\t\t// notify to display warning, but don't change the language\n\t\t\tthis._onDidChangeLanguage.fire(currentLanguage);\n\t\t} else {\n\t\t\tthis.language = newLanguage;\n\t\t}\n\t}\n\tprivate static readonly AUTO_DETECT_LANGUAGE_THROTTLE_DELAY = 600;\n\tprivate readonly autoDetectLanguageThrottler = this._register(\n\t\tnew ThrottledDelayer<void>(\n\t\t\tNotebookCellTextModel.AUTO_DETECT_LANGUAGE_THROTTLE_DELAY,\n\t\t),\n\t);\n\tprivate _autoLanguageDetectionEnabled = false;\n\tprivate _hasLanguageSetExplicitly = false;\n\tget hasLanguageSetExplicitly(): boolean {\n\t\treturn this._hasLanguageSetExplicitly;\n\t}\n\n\tconstructor(\n\t\treadonly uri: URI,\n\t\tpublic readonly handle: number,\n\t\tprivate readonly _source: string,\n\t\tprivate _language: string,\n\t\tprivate _mime: string | undefined,\n\t\tpublic readonly cellKind: CellKind,\n\t\toutputs: IOutputDto[],\n\t\tmetadata: NotebookCellMetadata | undefined,\n\t\tinternalMetadata: NotebookCellInternalMetadata | undefined,\n\t\tpublic readonly collapseState: NotebookCellCollapseState | undefined,\n\t\tpublic readonly transientOptions: TransientOptions,\n\t\tprivate readonly _languageService: ILanguageService,\n\t\tprivate readonly _languageDetectionService:\n\t\t\t| ILanguageDetectionService\n\t\t\t| undefined = undefined,\n\t) {\n\t\tsuper();\n\t\tthis._outputs = outputs.map(\n\t\t\t(op) => new NotebookCellOutputTextModel(op),\n\t\t);\n\t\tthis._metadata = metadata ?? {};\n\t\tthis._internalMetadata = internalMetadata ?? {};\n\t}\n\n\tenableAutoLanguageDetection() {\n\t\tthis._autoLanguageDetectionEnabled = true;\n\t\tthis.autoDetectLanguage();\n\t}\n\n\tasync autoDetectLanguage(): Promise<void> {\n\t\tif (this._autoLanguageDetectionEnabled) {\n\t\t\tthis.autoDetectLanguageThrottler.trigger(() =>\n\t\t\t\tthis._doAutoDetectLanguage(),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate async _doAutoDetectLanguage(): Promise<void> {\n\t\tif (this.hasLanguageSetExplicitly) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newLanguage =\n\t\t\tawait this._languageDetectionService?.detectLanguage(this.uri);\n\t\tif (!newLanguage) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tthis._textModel &&\n\t\t\tthis._textModel.getLanguageId() ===\n\t\t\t\tthis._languageService.getLanguageIdByLanguageName(\n\t\t\t\t\tnewLanguage,\n\t\t\t\t) &&\n\t\t\tthis._textModel.getLanguageId() ===\n\t\t\t\tthis._languageService.getLanguageIdByLanguageName(this.language)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._setLanguageInternal(newLanguage);\n\t}\n\n\tprivate _setLanguageInternal(newLanguage: string) {\n\t\tconst newLanguageId =\n\t\t\tthis._languageService.getLanguageIdByLanguageName(newLanguage);\n\n\t\tif (newLanguageId === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._textModel) {\n\t\t\tconst languageId = this._languageService.createById(newLanguageId);\n\t\t\tthis._textModel.setLanguage(languageId.languageId);\n\t\t}\n\n\t\tif (this._language === newLanguage) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._language = newLanguage;\n\t\tthis._hash = null;\n\t\tthis._onDidChangeLanguage.fire(newLanguage);\n\t\tthis._onDidChangeContent.fire(\"language\");\n\t}\n\n\tresetTextBuffer(textBuffer: model.ITextBuffer) {\n\t\tthis._textBuffer = textBuffer;\n\t}\n\n\tgetValue(): string {\n\t\tconst fullRange = this.getFullModelRange();\n\t\tconst eol = this.textBuffer.getEOL();\n\t\tif (eol === \"\\n\") {\n\t\t\treturn this.textBuffer.getValueInRange(\n\t\t\t\tfullRange,\n\t\t\t\tmodel.EndOfLinePreference.LF,\n\t\t\t);\n\t\t} else {\n\t\t\treturn this.textBuffer.getValueInRange(\n\t\t\t\tfullRange,\n\t\t\t\tmodel.EndOfLinePreference.CRLF,\n\t\t\t);\n\t\t}\n\t}\n\n\tgetTextBufferHash() {\n\t\tif (this._textBufferHash !== null) {\n\t\t\treturn this._textBufferHash;\n\t\t}\n\n\t\tconst shaComputer = new StringSHA1();\n\t\tconst snapshot = this.textBuffer.createSnapshot(false);\n\t\tlet text: string | null;\n\t\twhile ((text = snapshot.read())) {\n\t\t\tshaComputer.update(text);\n\t\t}\n\t\tthis._textBufferHash = shaComputer.digest();\n\t\treturn this._textBufferHash;\n\t}\n\n\tgetHashValue(): number {\n\t\tif (this._hash !== null) {\n\t\t\treturn this._hash;\n\t\t}\n\n\t\tthis._hash = hash([\n\t\t\thash(this.language),\n\t\t\tthis.getTextBufferHash(),\n\t\t\tthis._getPersisentMetadata(),\n\t\t\tthis.transientOptions.transientOutputs\n\t\t\t\t? []\n\t\t\t\t: this._outputs.map((op) => ({\n\t\t\t\t\t\toutputs: op.outputs.map((output) => ({\n\t\t\t\t\t\t\tmime: output.mime,\n\t\t\t\t\t\t\tdata: Array.from(output.data.buffer),\n\t\t\t\t\t\t})),\n\t\t\t\t\t\tmetadata: op.metadata,\n\t\t\t\t\t})),\n\t\t]);\n\t\treturn this._hash;\n\t}\n\n\tprivate _getPersisentMetadata() {\n\t\treturn getFormattedMetadataJSON(\n\t\t\tthis.transientOptions.transientCellMetadata,\n\t\t\tthis.metadata,\n\t\t\tthis.language,\n\t\t);\n\t}\n\n\tgetTextLength(): number {\n\t\treturn this.textBuffer.getLength();\n\t}\n\n\tgetFullModelRange() {\n\t\tconst lineCount = this.textBuffer.getLineCount();\n\t\treturn new Range(\n\t\t\t1,\n\t\t\t1,\n\t\t\tlineCount,\n\t\t\tthis.textBuffer.getLineLength(lineCount) + 1,\n\t\t);\n\t}\n\n\tspliceNotebookCellOutputs(splice: NotebookCellOutputsSplice): void {\n\t\tif (splice.deleteCount > 0 && splice.newOutputs.length > 0) {\n\t\t\tconst commonLen = Math.min(\n\t\t\t\tsplice.deleteCount,\n\t\t\t\tsplice.newOutputs.length,\n\t\t\t);\n\t\t\t// update\n\t\t\tfor (let i = 0; i < commonLen; i++) {\n\t\t\t\tconst currentOutput = this.outputs[splice.start + i];\n\t\t\t\tconst newOutput = splice.newOutputs[i];\n\n\t\t\t\tthis.replaceOutput(currentOutput.outputId, newOutput);\n\t\t\t}\n\n\t\t\tconst removed = this.outputs.splice(\n\t\t\t\tsplice.start + commonLen,\n\t\t\t\tsplice.deleteCount - commonLen,\n\t\t\t\t...splice.newOutputs.slice(commonLen),\n\t\t\t);\n\t\t\tremoved.forEach((output) => output.dispose());\n\t\t\tthis._onDidChangeOutputs.fire({\n\t\t\t\tstart: splice.start + commonLen,\n\t\t\t\tdeleteCount: splice.deleteCount - commonLen,\n\t\t\t\tnewOutputs: splice.newOutputs.slice(commonLen),\n\t\t\t});\n\t\t} else {\n\t\t\tconst removed = this.outputs.splice(\n\t\t\t\tsplice.start,\n\t\t\t\tsplice.deleteCount,\n\t\t\t\t...splice.newOutputs,\n\t\t\t);\n\t\t\tremoved.forEach((output) => output.dispose());\n\t\t\tthis._onDidChangeOutputs.fire(splice);\n\t\t}\n\t}\n\n\treplaceOutput(outputId: string, newOutputItem: ICellOutput) {\n\t\tconst outputIndex = this.outputs.findIndex(\n\t\t\t(output) => output.outputId === outputId,\n\t\t);\n\n\t\tif (outputIndex < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst output = this.outputs[outputIndex];\n\t\t// convert to dto and dispose the cell output model\n\t\toutput.replaceData({\n\t\t\toutputs: newOutputItem.outputs,\n\t\t\toutputId: newOutputItem.outputId,\n\t\t\tmetadata: newOutputItem.metadata,\n\t\t});\n\t\tnewOutputItem.dispose();\n\t\tthis._onDidChangeOutputItems.fire();\n\t\treturn true;\n\t}\n\n\tchangeOutputItems(\n\t\toutputId: string,\n\t\tappend: boolean,\n\t\titems: IOutputItemDto[],\n\t): boolean {\n\t\tconst outputIndex = this.outputs.findIndex(\n\t\t\t(output) => output.outputId === outputId,\n\t\t);\n\n\t\tif (outputIndex < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst output = this.outputs[outputIndex];\n\t\tif (append) {\n\t\t\toutput.appendData(items);\n\t\t} else {\n\t\t\toutput.replaceData({\n\t\t\t\toutputId: outputId,\n\t\t\t\toutputs: items,\n\t\t\t\tmetadata: output.metadata,\n\t\t\t});\n\t\t}\n\t\tthis._onDidChangeOutputItems.fire();\n\t\treturn true;\n\t}\n\n\tprivate _outputNotEqualFastCheck(\n\t\tleft: ICellOutput[],\n\t\tright: ICellOutput[],\n\t) {\n\t\tif (left.length !== right.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (let i = 0; i < this.outputs.length; i++) {\n\t\t\tconst l = left[i];\n\t\t\tconst r = right[i];\n\n\t\t\tif (l.outputs.length !== r.outputs.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfor (let k = 0; k < l.outputs.length; k++) {\n\t\t\t\tif (l.outputs[k].mime !== r.outputs[k].mime) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tl.outputs[k].data.byteLength !==\n\t\t\t\t\tr.outputs[k].data.byteLength\n\t\t\t\t) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tequal(b: NotebookCellTextModel): boolean {\n\t\tif (this.language !== b.language) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.outputs.length !== b.outputs.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.getTextLength() !== b.getTextLength()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.transientOptions.transientOutputs) {\n\t\t\t// compare outputs\n\n\t\t\tif (!this._outputNotEqualFastCheck(this.outputs, b.outputs)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn this.getHashValue() === b.getHashValue();\n\t}\n\n\t/**\n\t * Only compares\n\t * - language\n\t * - mime\n\t * - cellKind\n\t * - internal metadata\n\t * - source\n\t */\n\tfastEqual(b: ICellDto2): boolean {\n\t\tif (this.language !== b.language) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.mime !== b.mime) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.cellKind !== b.cellKind) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (\n\t\t\tthis.internalMetadata?.executionOrder !==\n\t\t\t\tb.internalMetadata?.executionOrder ||\n\t\t\tthis.internalMetadata?.lastRunSuccess !==\n\t\t\t\tb.internalMetadata?.lastRunSuccess ||\n\t\t\tthis.internalMetadata?.runStartTime !==\n\t\t\t\tb.internalMetadata?.runStartTime ||\n\t\t\tthis.internalMetadata?.runStartTimeAdjustment !==\n\t\t\t\tb.internalMetadata?.runStartTimeAdjustment ||\n\t\t\tthis.internalMetadata?.runEndTime !== b.internalMetadata?.runEndTime\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Once we attach the cell text buffer to an editor, the source of truth is the text buffer instead of the original source\n\t\tif (this._textBuffer && this.getValue() !== b.source) {\n\t\t\treturn false;\n\t\t} else if (this._source !== b.source) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\toverride dispose() {\n\t\tdispose(this._outputs);\n\t\t// Manually release reference to previous text buffer to avoid large leaks\n\t\t// in case someone leaks a CellTextModel reference\n\t\tconst emptyDisposedTextBuffer = new PieceTreeTextBuffer(\n\t\t\t[],\n\t\t\t\"\",\n\t\t\t\"\\n\",\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t);\n\t\temptyDisposedTextBuffer.dispose();\n\t\tthis._textBuffer = emptyDisposedTextBuffer;\n\t\tsuper.dispose();\n\t}\n}\n\nexport function cloneNotebookCellTextModel(cell: NotebookCellTextModel) {\n\treturn {\n\t\tsource: cell.getValue(),\n\t\tlanguage: cell.language,\n\t\tmime: cell.mime,\n\t\tcellKind: cell.cellKind,\n\t\toutputs: cell.outputs.map((output) => ({\n\t\t\toutputs: output.outputs,\n\t\t\t/* paste should generate new outputId */ outputId:\n\t\t\t\tUUID.generateUuid(),\n\t\t})),\n\t\tmetadata: {},\n\t};\n}\n\nfunction computeRunStartTimeAdjustment(\n\toldMetadata: NotebookCellInternalMetadata,\n\tnewMetadata: NotebookCellInternalMetadata,\n): number | undefined {\n\tif (\n\t\toldMetadata.runStartTime !== newMetadata.runStartTime &&\n\t\ttypeof newMetadata.runStartTime === \"number\"\n\t) {\n\t\tconst offset = Date.now() - newMetadata.runStartTime;\n\t\treturn offset < 0 ? Math.abs(offset) : 0;\n\t} else {\n\t\treturn newMetadata.runStartTimeAdjustment;\n\t}\n}\n\nexport function getFormattedMetadataJSON(\n\ttransientCellMetadata: TransientCellMetadata | undefined,\n\tmetadata: NotebookCellMetadata,\n\tlanguage?: string,\n) {\n\tlet filteredMetadata: { [key: string]: any } = {};\n\n\tif (transientCellMetadata) {\n\t\tconst keys = new Set([...Object.keys(metadata)]);\n\t\tfor (const key of keys) {\n\t\t\tif (!transientCellMetadata[key as keyof NotebookCellMetadata]) {\n\t\t\t\tfilteredMetadata[key] =\n\t\t\t\t\tmetadata[key as keyof NotebookCellMetadata];\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfilteredMetadata = metadata;\n\t}\n\n\tconst obj = {\n\t\tlanguage,\n\t\t...filteredMetadata,\n\t};\n\t// Give preference to the language we have been given.\n\t// Metadata can contain `language` due to round-tripping of cell metadata.\n\t// I.e. we add it here, and then from SCM when we revert the cell, we get this same metadata back with the `language` property.\n\tif (language) {\n\t\tobj.language = language;\n\t}\n\tconst metadataSource = toFormattedString(obj, {});\n\n\treturn metadataSource;\n}\n"],
  "mappings": "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",
  "names": ["output"]
}
