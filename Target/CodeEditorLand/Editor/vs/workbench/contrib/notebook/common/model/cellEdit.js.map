{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/common/model/cellEdit.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IResourceUndoRedoElement, UndoRedoElementType } from '../../../../../platform/undoRedo/common/undoRedo.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { NotebookCellTextModel } from './notebookCellTextModel.js';\nimport { ISelectionState, NotebookCellMetadata } from '../notebookCommon.js';\n\n/**\n * It should not modify Undo/Redo stack\n */\nexport interface ITextCellEditingDelegate {\n\tinsertCell?(index: number, cell: NotebookCellTextModel, endSelections?: ISelectionState): void;\n\tdeleteCell?(index: number, endSelections?: ISelectionState): void;\n\treplaceCell?(index: number, count: number, cells: NotebookCellTextModel[], endSelections?: ISelectionState): void;\n\tmoveCell?(fromIndex: number, length: number, toIndex: number, beforeSelections: ISelectionState | undefined, endSelections?: ISelectionState): void;\n\tupdateCellMetadata?(index: number, newMetadata: NotebookCellMetadata): void;\n}\n\nexport class MoveCellEdit implements IResourceUndoRedoElement {\n\ttype: UndoRedoElementType.Resource = UndoRedoElementType.Resource;\n\tget label() {\n\t\treturn this.length === 1 ? 'Move Cell' : 'Move Cells';\n\t}\n\tcode: string = 'undoredo.textBufferEdit';\n\n\tconstructor(\n\t\tpublic resource: URI,\n\t\tprivate fromIndex: number,\n\t\tprivate length: number,\n\t\tprivate toIndex: number,\n\t\tprivate editingDelegate: ITextCellEditingDelegate,\n\t\tprivate beforedSelections: ISelectionState | undefined,\n\t\tprivate endSelections: ISelectionState | undefined\n\t) {\n\t}\n\n\tundo(): void {\n\t\tif (!this.editingDelegate.moveCell) {\n\t\t\tthrow new Error('Notebook Move Cell not implemented for Undo/Redo');\n\t\t}\n\n\t\tthis.editingDelegate.moveCell(this.toIndex, this.length, this.fromIndex, this.endSelections, this.beforedSelections);\n\t}\n\n\tredo(): void {\n\t\tif (!this.editingDelegate.moveCell) {\n\t\t\tthrow new Error('Notebook Move Cell not implemented for Undo/Redo');\n\t\t}\n\n\t\tthis.editingDelegate.moveCell(this.fromIndex, this.length, this.toIndex, this.beforedSelections, this.endSelections);\n\t}\n}\n\nexport class SpliceCellsEdit implements IResourceUndoRedoElement {\n\ttype: UndoRedoElementType.Resource = UndoRedoElementType.Resource;\n\tget label() {\n\t\t// Compute the most appropriate labels\n\t\tif (this.diffs.length === 1 && this.diffs[0][1].length === 0) {\n\t\t\treturn this.diffs[0][2].length > 1 ? 'Insert Cells' : 'Insert Cell';\n\t\t}\n\t\tif (this.diffs.length === 1 && this.diffs[0][2].length === 0) {\n\t\t\treturn this.diffs[0][1].length > 1 ? 'Delete Cells' : 'Delete Cell';\n\t\t}\n\t\t// Default to Insert Cell\n\t\treturn 'Insert Cell';\n\t}\n\tcode: string = 'undoredo.textBufferEdit';\n\tconstructor(\n\t\tpublic resource: URI,\n\t\tprivate diffs: [number, NotebookCellTextModel[], NotebookCellTextModel[]][],\n\t\tprivate editingDelegate: ITextCellEditingDelegate,\n\t\tprivate beforeHandles: ISelectionState | undefined,\n\t\tprivate endHandles: ISelectionState | undefined\n\t) {\n\t}\n\n\tundo(): void {\n\t\tif (!this.editingDelegate.replaceCell) {\n\t\t\tthrow new Error('Notebook Replace Cell not implemented for Undo/Redo');\n\t\t}\n\n\t\tthis.diffs.forEach(diff => {\n\t\t\tthis.editingDelegate.replaceCell!(diff[0], diff[2].length, diff[1], this.beforeHandles);\n\t\t});\n\t}\n\n\tredo(): void {\n\t\tif (!this.editingDelegate.replaceCell) {\n\t\t\tthrow new Error('Notebook Replace Cell not implemented for Undo/Redo');\n\t\t}\n\n\t\tthis.diffs.reverse().forEach(diff => {\n\t\t\tthis.editingDelegate.replaceCell!(diff[0], diff[1].length, diff[2], this.endHandles);\n\t\t});\n\t}\n}\n\nexport class CellMetadataEdit implements IResourceUndoRedoElement {\n\ttype: UndoRedoElementType.Resource = UndoRedoElementType.Resource;\n\tlabel: string = 'Update Cell Metadata';\n\tcode: string = 'undoredo.textBufferEdit';\n\tconstructor(\n\t\tpublic resource: URI,\n\t\treadonly index: number,\n\t\treadonly oldMetadata: NotebookCellMetadata,\n\t\treadonly newMetadata: NotebookCellMetadata,\n\t\tprivate editingDelegate: ITextCellEditingDelegate,\n\t) {\n\n\t}\n\n\tundo(): void {\n\t\tif (!this.editingDelegate.updateCellMetadata) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.editingDelegate.updateCellMetadata(this.index, this.oldMetadata);\n\t}\n\n\tredo(): void | Promise<void> {\n\t\tif (!this.editingDelegate.updateCellMetadata) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.editingDelegate.updateCellMetadata(this.index, this.newMetadata);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
