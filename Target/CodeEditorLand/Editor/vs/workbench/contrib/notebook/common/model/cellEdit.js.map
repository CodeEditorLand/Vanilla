{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/common/model/cellEdit.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { URI } from \"../../../../../base/common/uri.js\";\nimport {\n\ttype IResourceUndoRedoElement,\n\tUndoRedoElementType,\n} from \"../../../../../platform/undoRedo/common/undoRedo.js\";\nimport type {\n\tISelectionState,\n\tNotebookCellMetadata,\n} from \"../notebookCommon.js\";\nimport type { NotebookCellTextModel } from \"./notebookCellTextModel.js\";\n\n/**\n * It should not modify Undo/Redo stack\n */\nexport interface ITextCellEditingDelegate {\n\tinsertCell?(\n\t\tindex: number,\n\t\tcell: NotebookCellTextModel,\n\t\tendSelections?: ISelectionState,\n\t): void;\n\tdeleteCell?(index: number, endSelections?: ISelectionState): void;\n\treplaceCell?(\n\t\tindex: number,\n\t\tcount: number,\n\t\tcells: NotebookCellTextModel[],\n\t\tendSelections?: ISelectionState,\n\t): void;\n\tmoveCell?(\n\t\tfromIndex: number,\n\t\tlength: number,\n\t\ttoIndex: number,\n\t\tbeforeSelections: ISelectionState | undefined,\n\t\tendSelections?: ISelectionState,\n\t): void;\n\tupdateCellMetadata?(index: number, newMetadata: NotebookCellMetadata): void;\n}\n\nexport class MoveCellEdit implements IResourceUndoRedoElement {\n\ttype: UndoRedoElementType.Resource = UndoRedoElementType.Resource;\n\tget label() {\n\t\treturn this.length === 1 ? \"Move Cell\" : \"Move Cells\";\n\t}\n\tcode = \"undoredo.textBufferEdit\";\n\n\tconstructor(\n\t\tpublic resource: URI,\n\t\tprivate fromIndex: number,\n\t\tprivate length: number,\n\t\tprivate toIndex: number,\n\t\tprivate editingDelegate: ITextCellEditingDelegate,\n\t\tprivate beforedSelections: ISelectionState | undefined,\n\t\tprivate endSelections: ISelectionState | undefined,\n\t) {}\n\n\tundo(): void {\n\t\tif (!this.editingDelegate.moveCell) {\n\t\t\tthrow new Error(\"Notebook Move Cell not implemented for Undo/Redo\");\n\t\t}\n\n\t\tthis.editingDelegate.moveCell(\n\t\t\tthis.toIndex,\n\t\t\tthis.length,\n\t\t\tthis.fromIndex,\n\t\t\tthis.endSelections,\n\t\t\tthis.beforedSelections,\n\t\t);\n\t}\n\n\tredo(): void {\n\t\tif (!this.editingDelegate.moveCell) {\n\t\t\tthrow new Error(\"Notebook Move Cell not implemented for Undo/Redo\");\n\t\t}\n\n\t\tthis.editingDelegate.moveCell(\n\t\t\tthis.fromIndex,\n\t\t\tthis.length,\n\t\t\tthis.toIndex,\n\t\t\tthis.beforedSelections,\n\t\t\tthis.endSelections,\n\t\t);\n\t}\n}\n\nexport class SpliceCellsEdit implements IResourceUndoRedoElement {\n\ttype: UndoRedoElementType.Resource = UndoRedoElementType.Resource;\n\tget label() {\n\t\t// Compute the most appropriate labels\n\t\tif (this.diffs.length === 1 && this.diffs[0][1].length === 0) {\n\t\t\treturn this.diffs[0][2].length > 1 ? \"Insert Cells\" : \"Insert Cell\";\n\t\t}\n\t\tif (this.diffs.length === 1 && this.diffs[0][2].length === 0) {\n\t\t\treturn this.diffs[0][1].length > 1 ? \"Delete Cells\" : \"Delete Cell\";\n\t\t}\n\t\t// Default to Insert Cell\n\t\treturn \"Insert Cell\";\n\t}\n\tcode = \"undoredo.textBufferEdit\";\n\tconstructor(\n\t\tpublic resource: URI,\n\t\tprivate diffs: [\n\t\t\tnumber,\n\t\t\tNotebookCellTextModel[],\n\t\t\tNotebookCellTextModel[],\n\t\t][],\n\t\tprivate editingDelegate: ITextCellEditingDelegate,\n\t\tprivate beforeHandles: ISelectionState | undefined,\n\t\tprivate endHandles: ISelectionState | undefined,\n\t) {}\n\n\tundo(): void {\n\t\tif (!this.editingDelegate.replaceCell) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Notebook Replace Cell not implemented for Undo/Redo\",\n\t\t\t);\n\t\t}\n\n\t\tthis.diffs.forEach((diff) => {\n\t\t\tthis.editingDelegate.replaceCell!(\n\t\t\t\tdiff[0],\n\t\t\t\tdiff[2].length,\n\t\t\t\tdiff[1],\n\t\t\t\tthis.beforeHandles,\n\t\t\t);\n\t\t});\n\t}\n\n\tredo(): void {\n\t\tif (!this.editingDelegate.replaceCell) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Notebook Replace Cell not implemented for Undo/Redo\",\n\t\t\t);\n\t\t}\n\n\t\tthis.diffs.reverse().forEach((diff) => {\n\t\t\tthis.editingDelegate.replaceCell!(\n\t\t\t\tdiff[0],\n\t\t\t\tdiff[1].length,\n\t\t\t\tdiff[2],\n\t\t\t\tthis.endHandles,\n\t\t\t);\n\t\t});\n\t}\n}\n\nexport class CellMetadataEdit implements IResourceUndoRedoElement {\n\ttype: UndoRedoElementType.Resource = UndoRedoElementType.Resource;\n\tlabel = \"Update Cell Metadata\";\n\tcode = \"undoredo.textBufferEdit\";\n\tconstructor(\n\t\tpublic resource: URI,\n\t\treadonly index: number,\n\t\treadonly oldMetadata: NotebookCellMetadata,\n\t\treadonly newMetadata: NotebookCellMetadata,\n\t\tprivate editingDelegate: ITextCellEditingDelegate,\n\t) {}\n\n\tundo(): void {\n\t\tif (!this.editingDelegate.updateCellMetadata) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.editingDelegate.updateCellMetadata(this.index, this.oldMetadata);\n\t}\n\n\tredo(): void | Promise<void> {\n\t\tif (!this.editingDelegate.updateCellMetadata) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.editingDelegate.updateCellMetadata(this.index, this.newMetadata);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
