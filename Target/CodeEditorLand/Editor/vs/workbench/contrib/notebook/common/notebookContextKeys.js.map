{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/common/notebookContextKeys.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tContextKeyExpr,\n\tRawContextKey,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tINTERACTIVE_WINDOW_EDITOR_ID,\n\tNOTEBOOK_EDITOR_ID,\n\tREPL_EDITOR_ID,\n} from \"./notebookCommon.js\";\n\n//#region Context Keys\nexport const HAS_OPENED_NOTEBOOK = new RawContextKey<boolean>(\n\t\"userHasOpenedNotebook\",\n\tfalse,\n);\nexport const KEYBINDING_CONTEXT_NOTEBOOK_FIND_WIDGET_FOCUSED =\n\tnew RawContextKey<boolean>(\"notebookFindWidgetFocused\", false);\nexport const InteractiveWindowOpen = new RawContextKey<boolean>(\n\t\"interactiveWindowOpen\",\n\tfalse,\n);\n\n// Is Notebook\nexport const NOTEBOOK_IS_ACTIVE_EDITOR = ContextKeyExpr.equals(\n\t\"activeEditor\",\n\tNOTEBOOK_EDITOR_ID,\n);\nexport const INTERACTIVE_WINDOW_IS_ACTIVE_EDITOR = ContextKeyExpr.equals(\n\t\"activeEditor\",\n\tINTERACTIVE_WINDOW_EDITOR_ID,\n);\nexport const REPL_NOTEBOOK_IS_ACTIVE_EDITOR = ContextKeyExpr.equals(\n\t\"activeEditor\",\n\tREPL_EDITOR_ID,\n);\n\n// Editor keys\n// based on the focus of the notebook editor widget\nexport const NOTEBOOK_EDITOR_FOCUSED = new RawContextKey<boolean>(\n\t\"notebookEditorFocused\",\n\tfalse,\n);\n// always true within the cell list html element\nexport const NOTEBOOK_CELL_LIST_FOCUSED = new RawContextKey<boolean>(\n\t\"notebookCellListFocused\",\n\tfalse,\n);\nexport const NOTEBOOK_OUTPUT_FOCUSED = new RawContextKey<boolean>(\n\t\"notebookOutputFocused\",\n\tfalse,\n);\n// an input html element within the output webview has focus\nexport const NOTEBOOK_OUTPUT_INPUT_FOCUSED = new RawContextKey<boolean>(\n\t\"notebookOutputInputFocused\",\n\tfalse,\n);\nexport const NOTEBOOK_EDITOR_EDITABLE = new RawContextKey<boolean>(\n\t\"notebookEditable\",\n\ttrue,\n);\nexport const NOTEBOOK_HAS_RUNNING_CELL = new RawContextKey<boolean>(\n\t\"notebookHasRunningCell\",\n\tfalse,\n);\nexport const NOTEBOOK_HAS_SOMETHING_RUNNING = new RawContextKey<boolean>(\n\t\"notebookHasSomethingRunning\",\n\tfalse,\n);\nexport const NOTEBOOK_USE_CONSOLIDATED_OUTPUT_BUTTON =\n\tnew RawContextKey<boolean>(\"notebookUseConsolidatedOutputButton\", false);\nexport const NOTEBOOK_BREAKPOINT_MARGIN_ACTIVE = new RawContextKey<boolean>(\n\t\"notebookBreakpointMargin\",\n\tfalse,\n);\nexport const NOTEBOOK_CELL_TOOLBAR_LOCATION = new RawContextKey<\n\t\"left\" | \"right\" | \"hidden\"\n>(\"notebookCellToolbarLocation\", \"left\");\nexport const NOTEBOOK_CURSOR_NAVIGATION_MODE = new RawContextKey<boolean>(\n\t\"notebookCursorNavigationMode\",\n\tfalse,\n);\nexport const NOTEBOOK_LAST_CELL_FAILED = new RawContextKey<boolean>(\n\t\"notebookLastCellFailed\",\n\tfalse,\n);\n\n// Cell keys\nexport const NOTEBOOK_VIEW_TYPE = new RawContextKey<string>(\n\t\"notebookType\",\n\tundefined,\n);\nexport const NOTEBOOK_CELL_TYPE = new RawContextKey<\"code\" | \"markup\">(\n\t\"notebookCellType\",\n\tundefined,\n);\nexport const NOTEBOOK_CELL_EDITABLE = new RawContextKey<boolean>(\n\t\"notebookCellEditable\",\n\tfalse,\n);\nexport const NOTEBOOK_CELL_FOCUSED = new RawContextKey<boolean>(\n\t\"notebookCellFocused\",\n\tfalse,\n);\nexport const NOTEBOOK_CELL_EDITOR_FOCUSED = new RawContextKey<boolean>(\n\t\"notebookCellEditorFocused\",\n\tfalse,\n);\nexport const NOTEBOOK_CELL_MARKDOWN_EDIT_MODE = new RawContextKey<boolean>(\n\t\"notebookCellMarkdownEditMode\",\n\tfalse,\n);\nexport const NOTEBOOK_CELL_LINE_NUMBERS = new RawContextKey<\n\t\"on\" | \"off\" | \"inherit\"\n>(\"notebookCellLineNumbers\", \"inherit\");\nexport type NotebookCellExecutionStateContext =\n\t| \"idle\"\n\t| \"pending\"\n\t| \"executing\"\n\t| \"succeeded\"\n\t| \"failed\";\nexport const NOTEBOOK_CELL_EXECUTION_STATE =\n\tnew RawContextKey<NotebookCellExecutionStateContext>(\n\t\t\"notebookCellExecutionState\",\n\t\tundefined,\n\t);\nexport const NOTEBOOK_CELL_EXECUTING = new RawContextKey<boolean>(\n\t\"notebookCellExecuting\",\n\tfalse,\n); // This only exists to simplify a context key expression, see #129625\nexport const NOTEBOOK_CELL_HAS_OUTPUTS = new RawContextKey<boolean>(\n\t\"notebookCellHasOutputs\",\n\tfalse,\n);\nexport const NOTEBOOK_CELL_IS_FIRST_OUTPUT = new RawContextKey<boolean>(\n\t\"notebookCellIsFirstOutput\",\n\tfalse,\n);\nexport const NOTEBOOK_CELL_HAS_HIDDEN_OUTPUTS = new RawContextKey<boolean>(\n\t\"hasHiddenOutputs\",\n\tfalse,\n);\nexport const NOTEBOOK_CELL_INPUT_COLLAPSED = new RawContextKey<boolean>(\n\t\"notebookCellInputIsCollapsed\",\n\tfalse,\n);\nexport const NOTEBOOK_CELL_OUTPUT_COLLAPSED = new RawContextKey<boolean>(\n\t\"notebookCellOutputIsCollapsed\",\n\tfalse,\n);\nexport const NOTEBOOK_CELL_RESOURCE = new RawContextKey<string>(\n\t\"notebookCellResource\",\n\t\"\",\n);\nexport const NOTEBOOK_CELL_GENERATED_BY_CHAT = new RawContextKey<boolean>(\n\t\"notebookCellGenerateByChat\",\n\tfalse,\n);\nexport const NOTEBOOK_CELL_HAS_ERROR_DIAGNOSTICS = new RawContextKey<boolean>(\n\t\"notebookCellHasErrorDiagnostics\",\n\tfalse,\n);\n\n// Kernels\nexport const NOTEBOOK_KERNEL = new RawContextKey<string>(\n\t\"notebookKernel\",\n\tundefined,\n);\nexport const NOTEBOOK_KERNEL_COUNT = new RawContextKey<number>(\n\t\"notebookKernelCount\",\n\t0,\n);\nexport const NOTEBOOK_KERNEL_SOURCE_COUNT = new RawContextKey<number>(\n\t\"notebookKernelSourceCount\",\n\t0,\n);\nexport const NOTEBOOK_KERNEL_SELECTED = new RawContextKey<boolean>(\n\t\"notebookKernelSelected\",\n\tfalse,\n);\nexport const NOTEBOOK_INTERRUPTIBLE_KERNEL = new RawContextKey<boolean>(\n\t\"notebookInterruptibleKernel\",\n\tfalse,\n);\nexport const NOTEBOOK_MISSING_KERNEL_EXTENSION = new RawContextKey<boolean>(\n\t\"notebookMissingKernelExtension\",\n\tfalse,\n);\nexport const NOTEBOOK_HAS_OUTPUTS = new RawContextKey<boolean>(\n\t\"notebookHasOutputs\",\n\tfalse,\n);\n\n//#endregion\n"],
  "mappings": "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",
  "names": []
}
