{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/common/notebookContextKeys.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ContextKeyExpr, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { INTERACTIVE_WINDOW_EDITOR_ID, NOTEBOOK_EDITOR_ID, REPL_EDITOR_ID } from './notebookCommon.js';\n\n\n\n//#region Context Keys\nexport const HAS_OPENED_NOTEBOOK = new RawContextKey<boolean>('userHasOpenedNotebook', false);\nexport const KEYBINDING_CONTEXT_NOTEBOOK_FIND_WIDGET_FOCUSED = new RawContextKey<boolean>('notebookFindWidgetFocused', false);\nexport const InteractiveWindowOpen = new RawContextKey<boolean>('interactiveWindowOpen', false);\n\n// Is Notebook\nexport const NOTEBOOK_IS_ACTIVE_EDITOR = ContextKeyExpr.equals('activeEditor', NOTEBOOK_EDITOR_ID);\nexport const INTERACTIVE_WINDOW_IS_ACTIVE_EDITOR = ContextKeyExpr.equals('activeEditor', INTERACTIVE_WINDOW_EDITOR_ID);\nexport const REPL_NOTEBOOK_IS_ACTIVE_EDITOR = ContextKeyExpr.equals('activeEditor', REPL_EDITOR_ID);\n\n// Editor keys\n// based on the focus of the notebook editor widget\nexport const NOTEBOOK_EDITOR_FOCUSED = new RawContextKey<boolean>('notebookEditorFocused', false);\n// always true within the cell list html element\nexport const NOTEBOOK_CELL_LIST_FOCUSED = new RawContextKey<boolean>('notebookCellListFocused', false);\nexport const NOTEBOOK_OUTPUT_FOCUSED = new RawContextKey<boolean>('notebookOutputFocused', false);\n// an input html element within the output webview has focus\nexport const NOTEBOOK_OUTPUT_INPUT_FOCUSED = new RawContextKey<boolean>('notebookOutputInputFocused', false);\nexport const NOTEBOOK_EDITOR_EDITABLE = new RawContextKey<boolean>('notebookEditable', true);\nexport const NOTEBOOK_HAS_RUNNING_CELL = new RawContextKey<boolean>('notebookHasRunningCell', false);\nexport const NOTEBOOK_HAS_SOMETHING_RUNNING = new RawContextKey<boolean>('notebookHasSomethingRunning', false);\nexport const NOTEBOOK_USE_CONSOLIDATED_OUTPUT_BUTTON = new RawContextKey<boolean>('notebookUseConsolidatedOutputButton', false);\nexport const NOTEBOOK_BREAKPOINT_MARGIN_ACTIVE = new RawContextKey<boolean>('notebookBreakpointMargin', false);\nexport const NOTEBOOK_CELL_TOOLBAR_LOCATION = new RawContextKey<'left' | 'right' | 'hidden'>('notebookCellToolbarLocation', 'left');\nexport const NOTEBOOK_CURSOR_NAVIGATION_MODE = new RawContextKey<boolean>('notebookCursorNavigationMode', false);\nexport const NOTEBOOK_LAST_CELL_FAILED = new RawContextKey<boolean>('notebookLastCellFailed', false);\n\n// Cell keys\nexport const NOTEBOOK_VIEW_TYPE = new RawContextKey<string>('notebookType', undefined);\nexport const NOTEBOOK_CELL_TYPE = new RawContextKey<'code' | 'markup'>('notebookCellType', undefined);\nexport const NOTEBOOK_CELL_EDITABLE = new RawContextKey<boolean>('notebookCellEditable', false);\nexport const NOTEBOOK_CELL_FOCUSED = new RawContextKey<boolean>('notebookCellFocused', false);\nexport const NOTEBOOK_CELL_EDITOR_FOCUSED = new RawContextKey<boolean>('notebookCellEditorFocused', false);\nexport const NOTEBOOK_CELL_MARKDOWN_EDIT_MODE = new RawContextKey<boolean>('notebookCellMarkdownEditMode', false);\nexport const NOTEBOOK_CELL_LINE_NUMBERS = new RawContextKey<'on' | 'off' | 'inherit'>('notebookCellLineNumbers', 'inherit');\nexport type NotebookCellExecutionStateContext = 'idle' | 'pending' | 'executing' | 'succeeded' | 'failed';\nexport const NOTEBOOK_CELL_EXECUTION_STATE = new RawContextKey<NotebookCellExecutionStateContext>('notebookCellExecutionState', undefined);\nexport const NOTEBOOK_CELL_EXECUTING = new RawContextKey<boolean>('notebookCellExecuting', false); // This only exists to simplify a context key expression, see #129625\nexport const NOTEBOOK_CELL_HAS_OUTPUTS = new RawContextKey<boolean>('notebookCellHasOutputs', false);\nexport const NOTEBOOK_CELL_IS_FIRST_OUTPUT = new RawContextKey<boolean>('notebookCellIsFirstOutput', false);\nexport const NOTEBOOK_CELL_HAS_HIDDEN_OUTPUTS = new RawContextKey<boolean>('hasHiddenOutputs', false);\nexport const NOTEBOOK_CELL_INPUT_COLLAPSED = new RawContextKey<boolean>('notebookCellInputIsCollapsed', false);\nexport const NOTEBOOK_CELL_OUTPUT_COLLAPSED = new RawContextKey<boolean>('notebookCellOutputIsCollapsed', false);\nexport const NOTEBOOK_CELL_RESOURCE = new RawContextKey<string>('notebookCellResource', '');\nexport const NOTEBOOK_CELL_GENERATED_BY_CHAT = new RawContextKey<boolean>('notebookCellGenerateByChat', false);\nexport const NOTEBOOK_CELL_HAS_ERROR_DIAGNOSTICS = new RawContextKey<boolean>('notebookCellHasErrorDiagnostics', false);\n\n// Kernels\nexport const NOTEBOOK_KERNEL = new RawContextKey<string>('notebookKernel', undefined);\nexport const NOTEBOOK_KERNEL_COUNT = new RawContextKey<number>('notebookKernelCount', 0);\nexport const NOTEBOOK_KERNEL_SOURCE_COUNT = new RawContextKey<number>('notebookKernelSourceCount', 0);\nexport const NOTEBOOK_KERNEL_SELECTED = new RawContextKey<boolean>('notebookKernelSelected', false);\nexport const NOTEBOOK_INTERRUPTIBLE_KERNEL = new RawContextKey<boolean>('notebookInterruptibleKernel', false);\nexport const NOTEBOOK_MISSING_KERNEL_EXTENSION = new RawContextKey<boolean>('notebookMissingKernelExtension', false);\nexport const NOTEBOOK_HAS_OUTPUTS = new RawContextKey<boolean>('notebookHasOutputs', false);\n\n//#endregion\n"],
  "mappings": "AAKA,SAAS,gBAAgB,qBAAqB;AAC9C,SAAS,8BAA8B,oBAAoB,sBAAsB;AAK1E,MAAM,sBAAsB,IAAI,cAAuB,yBAAyB,KAAK;AACrF,MAAM,kDAAkD,IAAI,cAAuB,6BAA6B,KAAK;AACrH,MAAM,wBAAwB,IAAI,cAAuB,yBAAyB,KAAK;AAGvF,MAAM,4BAA4B,eAAe,OAAO,gBAAgB,kBAAkB;AAC1F,MAAM,sCAAsC,eAAe,OAAO,gBAAgB,4BAA4B;AAC9G,MAAM,iCAAiC,eAAe,OAAO,gBAAgB,cAAc;AAI3F,MAAM,0BAA0B,IAAI,cAAuB,yBAAyB,KAAK;AAEzF,MAAM,6BAA6B,IAAI,cAAuB,2BAA2B,KAAK;AAC9F,MAAM,0BAA0B,IAAI,cAAuB,yBAAyB,KAAK;AAEzF,MAAM,gCAAgC,IAAI,cAAuB,8BAA8B,KAAK;AACpG,MAAM,2BAA2B,IAAI,cAAuB,oBAAoB,IAAI;AACpF,MAAM,4BAA4B,IAAI,cAAuB,0BAA0B,KAAK;AAC5F,MAAM,iCAAiC,IAAI,cAAuB,+BAA+B,KAAK;AACtG,MAAM,0CAA0C,IAAI,cAAuB,uCAAuC,KAAK;AACvH,MAAM,oCAAoC,IAAI,cAAuB,4BAA4B,KAAK;AACtG,MAAM,iCAAiC,IAAI,cAA2C,+BAA+B,MAAM;AAC3H,MAAM,kCAAkC,IAAI,cAAuB,gCAAgC,KAAK;AACxG,MAAM,4BAA4B,IAAI,cAAuB,0BAA0B,KAAK;AAG5F,MAAM,qBAAqB,IAAI,cAAsB,gBAAgB,MAAS;AAC9E,MAAM,qBAAqB,IAAI,cAAiC,oBAAoB,MAAS;AAC7F,MAAM,yBAAyB,IAAI,cAAuB,wBAAwB,KAAK;AACvF,MAAM,wBAAwB,IAAI,cAAuB,uBAAuB,KAAK;AACrF,MAAM,+BAA+B,IAAI,cAAuB,6BAA6B,KAAK;AAClG,MAAM,mCAAmC,IAAI,cAAuB,gCAAgC,KAAK;AACzG,MAAM,6BAA6B,IAAI,cAAwC,2BAA2B,SAAS;AAEnH,MAAM,gCAAgC,IAAI,cAAiD,8BAA8B,MAAS;AAClI,MAAM,0BAA0B,IAAI,cAAuB,yBAAyB,KAAK;AACzF,MAAM,4BAA4B,IAAI,cAAuB,0BAA0B,KAAK;AAC5F,MAAM,gCAAgC,IAAI,cAAuB,6BAA6B,KAAK;AACnG,MAAM,mCAAmC,IAAI,cAAuB,oBAAoB,KAAK;AAC7F,MAAM,gCAAgC,IAAI,cAAuB,gCAAgC,KAAK;AACtG,MAAM,iCAAiC,IAAI,cAAuB,iCAAiC,KAAK;AACxG,MAAM,yBAAyB,IAAI,cAAsB,wBAAwB,EAAE;AACnF,MAAM,kCAAkC,IAAI,cAAuB,8BAA8B,KAAK;AACtG,MAAM,sCAAsC,IAAI,cAAuB,mCAAmC,KAAK;AAG/G,MAAM,kBAAkB,IAAI,cAAsB,kBAAkB,MAAS;AAC7E,MAAM,wBAAwB,IAAI,cAAsB,uBAAuB,CAAC;AAChF,MAAM,+BAA+B,IAAI,cAAsB,6BAA6B,CAAC;AAC7F,MAAM,2BAA2B,IAAI,cAAuB,0BAA0B,KAAK;AAC3F,MAAM,gCAAgC,IAAI,cAAuB,+BAA+B,KAAK;AACrG,MAAM,oCAAoC,IAAI,cAAuB,kCAAkC,KAAK;AAC5G,MAAM,uBAAuB,IAAI,cAAuB,sBAAsB,KAAK;",
  "names": []
}
