{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/common/model/notebookMetadataTextModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from \"../../../../../base/common/event.js\";\nimport { StringSHA1 } from \"../../../../../base/common/hash.js\";\nimport { toFormattedString } from \"../../../../../base/common/jsonFormatter.js\";\nimport { Disposable } from \"../../../../../base/common/lifecycle.js\";\nimport type { URI } from \"../../../../../base/common/uri.js\";\nimport { Range } from \"../../../../../editor/common/core/range.js\";\nimport {\n\tDefaultEndOfLine,\n\tEndOfLinePreference,\n\ttype ITextBuffer,\n} from \"../../../../../editor/common/model.js\";\nimport { createTextBuffer } from \"../../../../../editor/common/model/textModel.js\";\nimport {\n\ttype INotebookDocumentMetadataTextModel,\n\ttype INotebookTextModel,\n\ttype NotebookCellMetadata,\n\tNotebookCellsChangeType,\n\ttype NotebookDocumentMetadata,\n\tNotebookMetadataUri,\n\ttype TransientDocumentMetadata,\n} from \"../notebookCommon.js\";\n\nexport function getFormattedNotebookMetadataJSON(\n\ttransientMetadata: TransientDocumentMetadata | undefined,\n\tmetadata: NotebookDocumentMetadata,\n) {\n\tlet filteredMetadata: { [key: string]: any } = {};\n\n\tif (transientMetadata) {\n\t\tconst keys = new Set([...Object.keys(metadata)]);\n\t\tfor (const key of keys) {\n\t\t\tif (!transientMetadata[key as keyof NotebookCellMetadata]) {\n\t\t\t\tfilteredMetadata[key] =\n\t\t\t\t\tmetadata[key as keyof NotebookCellMetadata];\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfilteredMetadata = metadata;\n\t}\n\n\tconst metadataSource = toFormattedString(filteredMetadata, {});\n\n\treturn metadataSource;\n}\n\nexport class NotebookDocumentMetadataTextModel\n\textends Disposable\n\timplements INotebookDocumentMetadataTextModel\n{\n\tpublic readonly uri: URI;\n\tpublic get metadata(): NotebookDocumentMetadata {\n\t\treturn this.notebookModel.metadata;\n\t}\n\tprivate readonly _onDidChange = this._register(new Emitter<void>());\n\tpublic readonly onDidChange = this._onDidChange.event;\n\n\tprivate _textBufferHash: string | null = null;\n\tprivate _textBuffer?: ITextBuffer;\n\tget textBuffer() {\n\t\tif (this._textBuffer) {\n\t\t\treturn this._textBuffer;\n\t\t}\n\n\t\tconst source = getFormattedNotebookMetadataJSON(\n\t\t\tthis.notebookModel.transientOptions.transientDocumentMetadata,\n\t\t\tthis.metadata,\n\t\t);\n\t\tthis._textBuffer = this._register(\n\t\t\tcreateTextBuffer(source, DefaultEndOfLine.LF).textBuffer,\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis._textBuffer.onDidChangeContent(() => {\n\t\t\t\tthis._onDidChange.fire();\n\t\t\t}),\n\t\t);\n\n\t\treturn this._textBuffer;\n\t}\n\n\tconstructor(public readonly notebookModel: INotebookTextModel) {\n\t\tsuper();\n\t\tthis.uri = NotebookMetadataUri.generate(this.notebookModel.uri);\n\t\tthis._register(\n\t\t\tthis.notebookModel.onDidChangeContent((e) => {\n\t\t\t\tif (\n\t\t\t\t\te.rawEvents.some(\n\t\t\t\t\t\t(event) =>\n\t\t\t\t\t\t\tevent.kind ===\n\t\t\t\t\t\t\t\tNotebookCellsChangeType.ChangeDocumentMetadata ||\n\t\t\t\t\t\t\tevent.kind === NotebookCellsChangeType.ModelChange,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tthis._textBuffer?.dispose();\n\t\t\t\t\tthis._textBuffer = undefined;\n\t\t\t\t\tthis._textBufferHash = null;\n\t\t\t\t\tthis._onDidChange.fire();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tgetHash() {\n\t\tif (this._textBufferHash !== null) {\n\t\t\treturn this._textBufferHash;\n\t\t}\n\n\t\tconst shaComputer = new StringSHA1();\n\t\tconst snapshot = this.textBuffer.createSnapshot(false);\n\t\tlet text: string | null;\n\t\twhile ((text = snapshot.read())) {\n\t\t\tshaComputer.update(text);\n\t\t}\n\t\tthis._textBufferHash = shaComputer.digest();\n\t\treturn this._textBufferHash;\n\t}\n\n\tpublic getValue() {\n\t\tconst fullRange = this.getFullModelRange();\n\t\tconst eol = this.textBuffer.getEOL();\n\t\tif (eol === \"\\n\") {\n\t\t\treturn this.textBuffer.getValueInRange(\n\t\t\t\tfullRange,\n\t\t\t\tEndOfLinePreference.LF,\n\t\t\t);\n\t\t} else {\n\t\t\treturn this.textBuffer.getValueInRange(\n\t\t\t\tfullRange,\n\t\t\t\tEndOfLinePreference.CRLF,\n\t\t\t);\n\t\t}\n\t}\n\tprivate getFullModelRange() {\n\t\tconst lineCount = this.textBuffer.getLineCount();\n\t\treturn new Range(\n\t\t\t1,\n\t\t\t1,\n\t\t\tlineCount,\n\t\t\tthis.textBuffer.getLineLength(lineCount) + 1,\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
