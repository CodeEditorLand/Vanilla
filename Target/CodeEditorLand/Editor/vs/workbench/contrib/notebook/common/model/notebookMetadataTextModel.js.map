{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/common/model/notebookMetadataTextModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { NotebookCellMetadata, NotebookDocumentMetadata, TransientDocumentMetadata } from '../notebookCommon.js';\nimport { toFormattedString } from '../../../../../base/common/jsonFormatter.js';\n\nexport function getFormattedNotebookMetadataJSON(transientMetadata: TransientDocumentMetadata | undefined, metadata: NotebookDocumentMetadata) {\n\tlet filteredMetadata: { [key: string]: any } = {};\n\n\tif (transientMetadata) {\n\t\tconst keys = new Set([...Object.keys(metadata)]);\n\t\tfor (const key of keys) {\n\t\t\tif (!(transientMetadata[key as keyof NotebookCellMetadata])\n\t\t\t) {\n\t\t\t\tfilteredMetadata[key] = metadata[key as keyof NotebookCellMetadata];\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfilteredMetadata = metadata;\n\t}\n\n\tconst metadataSource = toFormattedString(filteredMetadata, {});\n\n\treturn metadataSource;\n}\n"],
  "mappings": ";;AAKA,SAAS,sBAAsB,0BAA0B,iCAAiC;AAC1F,SAAS,yBAAyB;AAE3B,SAAS,iCAAiC,mBAA0D,UAAoC;AAC9I,MAAI,mBAA2C,CAAC;AAEhD,MAAI,mBAAmB;AACtB,UAAM,OAAO,oBAAI,IAAI,CAAC,GAAG,OAAO,KAAK,QAAQ,CAAC,CAAC;AAC/C,eAAW,OAAO,MAAM;AACvB,UAAI,CAAE,kBAAkB,GAAiC,GACvD;AACD,yBAAiB,GAAG,IAAI,SAAS,GAAiC;AAAA,MACnE;AAAA,IACD;AAAA,EACD,OAAO;AACN,uBAAmB;AAAA,EACpB;AAEA,QAAM,iBAAiB,kBAAkB,kBAAkB,CAAC,CAAC;AAE7D,SAAO;AACR;AAlBgB;",
  "names": []
}
