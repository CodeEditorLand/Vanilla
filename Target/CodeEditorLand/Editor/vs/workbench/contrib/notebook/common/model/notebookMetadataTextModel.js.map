{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/common/model/notebookMetadataTextModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toFormattedString } from '../../../../../base/common/jsonFormatter.js';\nimport { INotebookDocumentMetadataTextModel, INotebookTextModel, NotebookCellMetadata, NotebookCellsChangeType, NotebookDocumentMetadata, NotebookMetadataUri, TransientDocumentMetadata } from '../notebookCommon.js';\nimport { StringSHA1 } from '../../../../../base/common/hash.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { DefaultEndOfLine, EndOfLinePreference, ITextBuffer } from '../../../../../editor/common/model.js';\nimport { Emitter } from '../../../../../base/common/event.js';\nimport { Range } from '../../../../../editor/common/core/range.js';\nimport { createTextBuffer } from '../../../../../editor/common/model/textModel.js';\n\nexport function getFormattedNotebookMetadataJSON(transientMetadata: TransientDocumentMetadata | undefined, metadata: NotebookDocumentMetadata) {\n\tlet filteredMetadata: { [key: string]: any } = {};\n\n\tif (transientMetadata) {\n\t\tconst keys = new Set([...Object.keys(metadata)]);\n\t\tfor (const key of keys) {\n\t\t\tif (!(transientMetadata[key as keyof NotebookCellMetadata])\n\t\t\t) {\n\t\t\t\tfilteredMetadata[key] = metadata[key as keyof NotebookCellMetadata];\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfilteredMetadata = metadata;\n\t}\n\n\tconst metadataSource = toFormattedString(filteredMetadata, {});\n\n\treturn metadataSource;\n}\n\nexport class NotebookDocumentMetadataTextModel extends Disposable implements INotebookDocumentMetadataTextModel {\n\tpublic readonly uri: URI;\n\tpublic get metadata(): NotebookDocumentMetadata {\n\t\treturn this.notebookModel.metadata;\n\t}\n\tprivate readonly _onDidChange = this._register(new Emitter<void>());\n\tpublic readonly onDidChange = this._onDidChange.event;\n\n\tprivate _textBufferHash: string | null = null;\n\tprivate _textBuffer?: ITextBuffer;\n\tget textBuffer() {\n\t\tif (this._textBuffer) {\n\t\t\treturn this._textBuffer;\n\t\t}\n\n\t\tconst source = getFormattedNotebookMetadataJSON(this.notebookModel.transientOptions.transientDocumentMetadata, this.metadata);\n\t\tthis._textBuffer = this._register(createTextBuffer(source, DefaultEndOfLine.LF).textBuffer);\n\n\t\tthis._register(this._textBuffer.onDidChangeContent(() => {\n\t\t\tthis._onDidChange.fire();\n\t\t}));\n\n\t\treturn this._textBuffer;\n\t}\n\n\tconstructor(public readonly notebookModel: INotebookTextModel) {\n\t\tsuper();\n\t\tthis.uri = NotebookMetadataUri.generate(this.notebookModel.uri);\n\t\tthis._register(this.notebookModel.onDidChangeContent((e) => {\n\t\t\tif (e.rawEvents.some(event => event.kind === NotebookCellsChangeType.ChangeDocumentMetadata || event.kind === NotebookCellsChangeType.ModelChange)) {\n\t\t\t\tthis._textBuffer?.dispose();\n\t\t\t\tthis._textBuffer = undefined;\n\t\t\t\tthis._textBufferHash = null;\n\t\t\t\tthis._onDidChange.fire();\n\t\t\t}\n\t\t}));\n\t}\n\n\tgetHash() {\n\t\tif (this._textBufferHash !== null) {\n\t\t\treturn this._textBufferHash;\n\t\t}\n\n\t\tconst shaComputer = new StringSHA1();\n\t\tconst snapshot = this.textBuffer.createSnapshot(false);\n\t\tlet text: string | null;\n\t\twhile ((text = snapshot.read())) {\n\t\t\tshaComputer.update(text);\n\t\t}\n\t\tthis._textBufferHash = shaComputer.digest();\n\t\treturn this._textBufferHash;\n\t}\n\n\tpublic getValue() {\n\t\tconst fullRange = this.getFullModelRange();\n\t\tconst eol = this.textBuffer.getEOL();\n\t\tif (eol === '\\n') {\n\t\t\treturn this.textBuffer.getValueInRange(fullRange, EndOfLinePreference.LF);\n\t\t} else {\n\t\t\treturn this.textBuffer.getValueInRange(fullRange, EndOfLinePreference.CRLF);\n\t\t}\n\t}\n\tprivate getFullModelRange() {\n\t\tconst lineCount = this.textBuffer.getLineCount();\n\t\treturn new Range(1, 1, lineCount, this.textBuffer.getLineLength(lineCount) + 1);\n\t}\n\n}\n"],
  "mappings": ";;AAKA,SAAS,yBAAyB;AAClC,SAAS,oCAAoC,oBAAoB,sBAAsB,yBAAyB,0BAA0B,qBAAqB,iCAAiC;AAChM,SAAS,kBAAkB;AAC3B,SAAS,kBAAkB;AAC3B,SAAS,WAAW;AACpB,SAAS,kBAAkB,qBAAqB,mBAAmB;AACnE,SAAS,eAAe;AACxB,SAAS,aAAa;AACtB,SAAS,wBAAwB;AAE1B,SAAS,iCAAiC,mBAA0D,UAAoC;AAC9I,MAAI,mBAA2C,CAAC;AAEhD,MAAI,mBAAmB;AACtB,UAAM,OAAO,oBAAI,IAAI,CAAC,GAAG,OAAO,KAAK,QAAQ,CAAC,CAAC;AAC/C,eAAW,OAAO,MAAM;AACvB,UAAI,CAAE,kBAAkB,GAAiC,GACvD;AACD,yBAAiB,GAAG,IAAI,SAAS,GAAiC;AAAA,MACnE;AAAA,IACD;AAAA,EACD,OAAO;AACN,uBAAmB;AAAA,EACpB;AAEA,QAAM,iBAAiB,kBAAkB,kBAAkB,CAAC,CAAC;AAE7D,SAAO;AACR;AAlBgB;AAoBT,MAAM,0CAA0C,WAAyD;AAAA,EAyB/G,YAA4B,eAAmC;AAC9D,UAAM;AADqB;AAE3B,SAAK,MAAM,oBAAoB,SAAS,KAAK,cAAc,GAAG;AAC9D,SAAK,UAAU,KAAK,cAAc,mBAAmB,CAAC,MAAM;AAC3D,UAAI,EAAE,UAAU,KAAK,WAAS,MAAM,SAAS,wBAAwB,0BAA0B,MAAM,SAAS,wBAAwB,WAAW,GAAG;AACnJ,aAAK,aAAa,QAAQ;AAC1B,aAAK,cAAc;AACnB,aAAK,kBAAkB;AACvB,aAAK,aAAa,KAAK;AAAA,MACxB;AAAA,IACD,CAAC,CAAC;AAAA,EACH;AAAA,EAvED,OAmCgH;AAAA;AAAA;AAAA,EAC/F;AAAA,EAChB,IAAW,WAAqC;AAC/C,WAAO,KAAK,cAAc;AAAA,EAC3B;AAAA,EACiB,eAAe,KAAK,UAAU,IAAI,QAAc,CAAC;AAAA,EAClD,cAAc,KAAK,aAAa;AAAA,EAExC,kBAAiC;AAAA,EACjC;AAAA,EACR,IAAI,aAAa;AAChB,QAAI,KAAK,aAAa;AACrB,aAAO,KAAK;AAAA,IACb;AAEA,UAAM,SAAS,iCAAiC,KAAK,cAAc,iBAAiB,2BAA2B,KAAK,QAAQ;AAC5H,SAAK,cAAc,KAAK,UAAU,iBAAiB,QAAQ,iBAAiB,EAAE,EAAE,UAAU;AAE1F,SAAK,UAAU,KAAK,YAAY,mBAAmB,MAAM;AACxD,WAAK,aAAa,KAAK;AAAA,IACxB,CAAC,CAAC;AAEF,WAAO,KAAK;AAAA,EACb;AAAA,EAeA,UAAU;AACT,QAAI,KAAK,oBAAoB,MAAM;AAClC,aAAO,KAAK;AAAA,IACb;AAEA,UAAM,cAAc,IAAI,WAAW;AACnC,UAAM,WAAW,KAAK,WAAW,eAAe,KAAK;AACrD,QAAI;AACJ,WAAQ,OAAO,SAAS,KAAK,GAAI;AAChC,kBAAY,OAAO,IAAI;AAAA,IACxB;AACA,SAAK,kBAAkB,YAAY,OAAO;AAC1C,WAAO,KAAK;AAAA,EACb;AAAA,EAEO,WAAW;AACjB,UAAM,YAAY,KAAK,kBAAkB;AACzC,UAAM,MAAM,KAAK,WAAW,OAAO;AACnC,QAAI,QAAQ,MAAM;AACjB,aAAO,KAAK,WAAW,gBAAgB,WAAW,oBAAoB,EAAE;AAAA,IACzE,OAAO;AACN,aAAO,KAAK,WAAW,gBAAgB,WAAW,oBAAoB,IAAI;AAAA,IAC3E;AAAA,EACD;AAAA,EACQ,oBAAoB;AAC3B,UAAM,YAAY,KAAK,WAAW,aAAa;AAC/C,WAAO,IAAI,MAAM,GAAG,GAAG,WAAW,KAAK,WAAW,cAAc,SAAS,IAAI,CAAC;AAAA,EAC/E;AAED;",
  "names": []
}
