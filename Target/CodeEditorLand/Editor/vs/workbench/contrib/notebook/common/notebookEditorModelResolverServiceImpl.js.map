{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/common/notebookEditorModelResolverServiceImpl.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport {\n\tAsyncEmitter,\n\tEmitter,\n\ttype Event,\n} from \"../../../../base/common/event.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n\ttype IReference,\n\tReferenceCollection,\n\tcombinedDisposable,\n\tdispose,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { ResourceMap } from \"../../../../base/common/map.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { assertIsDefined } from \"../../../../base/common/types.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport type { IFileReadLimits } from \"../../../../platform/files/common/files.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport { IExtensionService } from \"../../../services/extensions/common/extensions.js\";\nimport {\n\tFileWorkingCopyManager,\n\ttype IFileWorkingCopyManager,\n} from \"../../../services/workingCopy/common/fileWorkingCopyManager.js\";\nimport {\n\tCellUri,\n\ttype IResolvedNotebookEditorModel,\n\ttype NotebookEditorModelCreationOptions,\n\tNotebookSetting,\n\tNotebookWorkingCopyTypeIdentifier,\n} from \"./notebookCommon.js\";\nimport {\n\ttype NotebookFileWorkingCopyModel,\n\tNotebookFileWorkingCopyModelFactory,\n\tSimpleNotebookEditorModel,\n} from \"./notebookEditorModel.js\";\nimport type {\n\tINotebookConflictEvent,\n\tINotebookEditorModelResolverService,\n\tIUntitledNotebookResource,\n} from \"./notebookEditorModelResolverService.js\";\nimport { INotebookLoggingService } from \"./notebookLoggingService.js\";\nimport { NotebookProviderInfo } from \"./notebookProvider.js\";\nimport { INotebookService } from \"./notebookService.js\";\n\nclass NotebookModelReferenceCollection extends ReferenceCollection<\n\tPromise<IResolvedNotebookEditorModel>\n> {\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate readonly _workingCopyManagers = new Map<\n\t\tstring,\n\t\tIFileWorkingCopyManager<\n\t\t\tNotebookFileWorkingCopyModel,\n\t\t\tNotebookFileWorkingCopyModel\n\t\t>\n\t>();\n\tprivate readonly _modelListener = new Map<\n\t\tIResolvedNotebookEditorModel,\n\t\tIDisposable\n\t>();\n\n\tprivate readonly _onDidSaveNotebook = new Emitter<URI>();\n\treadonly onDidSaveNotebook: Event<URI> = this._onDidSaveNotebook.event;\n\n\tprivate readonly _onDidChangeDirty =\n\t\tnew Emitter<IResolvedNotebookEditorModel>();\n\treadonly onDidChangeDirty: Event<IResolvedNotebookEditorModel> =\n\t\tthis._onDidChangeDirty.event;\n\n\tprivate readonly _dirtyStates = new ResourceMap<boolean>();\n\n\tprivate readonly modelsToDispose = new Set<string>();\n\tconstructor(\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t\t@INotebookLoggingService private readonly _notebookLoggingService: INotebookLoggingService,\n\t) {\n\t\tsuper();\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._onDidSaveNotebook.dispose();\n\t\tthis._onDidChangeDirty.dispose();\n\t\tdispose(this._modelListener.values());\n\t\tdispose(this._workingCopyManagers.values());\n\t}\n\n\tisDirty(resource: URI): boolean {\n\t\treturn this._dirtyStates.get(resource) ?? false;\n\t}\n\n\tprotected async createReferencedObject(\n\t\tkey: string,\n\t\tviewType: string,\n\t\thasAssociatedFilePath: boolean,\n\t\tlimits?: IFileReadLimits,\n\t\tisScratchpad?: boolean,\n\t): Promise<IResolvedNotebookEditorModel> {\n\t\t// Untrack as being disposed\n\t\tthis.modelsToDispose.delete(key);\n\n\t\tconst uri = URI.parse(key);\n\n\t\tconst workingCopyTypeId =\n\t\t\tNotebookWorkingCopyTypeIdentifier.create(viewType);\n\t\tlet workingCopyManager =\n\t\t\tthis._workingCopyManagers.get(workingCopyTypeId);\n\t\tif (!workingCopyManager) {\n\t\t\tconst factory = new NotebookFileWorkingCopyModelFactory(\n\t\t\t\tviewType,\n\t\t\t\tthis._notebookService,\n\t\t\t\tthis._configurationService,\n\t\t\t\tthis._telemetryService,\n\t\t\t\tthis._notebookLoggingService,\n\t\t\t);\n\t\t\tworkingCopyManager = <\n\t\t\t\tIFileWorkingCopyManager<\n\t\t\t\t\tNotebookFileWorkingCopyModel,\n\t\t\t\t\tNotebookFileWorkingCopyModel\n\t\t\t\t>\n\t\t\t>(<any>(\n\t\t\t\tthis._instantiationService.createInstance(\n\t\t\t\t\tFileWorkingCopyManager,\n\t\t\t\t\tworkingCopyTypeId,\n\t\t\t\t\tfactory,\n\t\t\t\t\tfactory,\n\t\t\t\t)\n\t\t\t));\n\t\t\tthis._workingCopyManagers.set(\n\t\t\t\tworkingCopyTypeId,\n\t\t\t\tworkingCopyManager,\n\t\t\t);\n\t\t}\n\n\t\tconst isScratchpadView =\n\t\t\tisScratchpad ||\n\t\t\t(viewType === \"interactive\" &&\n\t\t\t\tthis._configurationService.getValue<boolean>(\n\t\t\t\t\tNotebookSetting.InteractiveWindowPromptToSave,\n\t\t\t\t) !== true);\n\t\tconst model = this._instantiationService.createInstance(\n\t\t\tSimpleNotebookEditorModel,\n\t\t\turi,\n\t\t\thasAssociatedFilePath,\n\t\t\tviewType,\n\t\t\tworkingCopyManager,\n\t\t\tisScratchpadView,\n\t\t);\n\t\tconst result = await model.load({ limits });\n\n\t\t// Whenever a notebook model is dirty we automatically reference it so that\n\t\t// we can ensure that at least one reference exists. That guarantees that\n\t\t// a model with unsaved changes is never disposed.\n\t\tlet onDirtyAutoReference: IReference<any> | undefined;\n\n\t\tthis._modelListener.set(\n\t\t\tresult,\n\t\t\tcombinedDisposable(\n\t\t\t\tresult.onDidSave(() =>\n\t\t\t\t\tthis._onDidSaveNotebook.fire(result.resource),\n\t\t\t\t),\n\t\t\t\tresult.onDidChangeDirty(() => {\n\t\t\t\t\tconst isDirty = result.isDirty();\n\t\t\t\t\tthis._dirtyStates.set(result.resource, isDirty);\n\n\t\t\t\t\t// isDirty -> add reference\n\t\t\t\t\t// !isDirty -> free reference\n\t\t\t\t\tif (isDirty && !onDirtyAutoReference) {\n\t\t\t\t\t\tonDirtyAutoReference = this.acquire(key, viewType);\n\t\t\t\t\t} else if (onDirtyAutoReference) {\n\t\t\t\t\t\tonDirtyAutoReference.dispose();\n\t\t\t\t\t\tonDirtyAutoReference = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._onDidChangeDirty.fire(result);\n\t\t\t\t}),\n\t\t\t\ttoDisposable(() => onDirtyAutoReference?.dispose()),\n\t\t\t),\n\t\t);\n\t\treturn result;\n\t}\n\n\tprotected destroyReferencedObject(\n\t\tkey: string,\n\t\tobject: Promise<IResolvedNotebookEditorModel>,\n\t): void {\n\t\tthis.modelsToDispose.add(key);\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tconst model = await object;\n\n\t\t\t\tif (!this.modelsToDispose.has(key)) {\n\t\t\t\t\t// return if model has been acquired again meanwhile\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (model instanceof SimpleNotebookEditorModel) {\n\t\t\t\t\tawait model.canDispose();\n\t\t\t\t}\n\n\t\t\t\tif (!this.modelsToDispose.has(key)) {\n\t\t\t\t\t// return if model has been acquired again meanwhile\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Finally we can dispose the model\n\t\t\t\tthis._modelListener.get(model)?.dispose();\n\t\t\t\tthis._modelListener.delete(model);\n\t\t\t\tmodel.dispose();\n\t\t\t} catch (err) {\n\t\t\t\tthis._notebookLoggingService.error(\n\t\t\t\t\t\"NotebookModelCollection\",\n\t\t\t\t\t\"FAILED to destory notebook - \" + err,\n\t\t\t\t);\n\t\t\t} finally {\n\t\t\t\tthis.modelsToDispose.delete(key); // Untrack as being disposed\n\t\t\t}\n\t\t})();\n\t}\n}\n\nexport class NotebookModelResolverServiceImpl\n\timplements INotebookEditorModelResolverService\n{\n\treadonly _serviceBrand: undefined;\n\n\tprivate readonly _data: NotebookModelReferenceCollection;\n\n\treadonly onDidSaveNotebook: Event<URI>;\n\treadonly onDidChangeDirty: Event<IResolvedNotebookEditorModel>;\n\n\tprivate readonly _onWillFailWithConflict =\n\t\tnew AsyncEmitter<INotebookConflictEvent>();\n\treadonly onWillFailWithConflict = this._onWillFailWithConflict.event;\n\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t\t@IExtensionService private readonly _extensionService: IExtensionService,\n\t\t@IUriIdentityService private readonly _uriIdentService: IUriIdentityService,\n\t) {\n\t\tthis._data = instantiationService.createInstance(NotebookModelReferenceCollection);\n\t\tthis.onDidSaveNotebook = this._data.onDidSaveNotebook;\n\t\tthis.onDidChangeDirty = this._data.onDidChangeDirty;\n\t}\n\n\tdispose() {\n\t\tthis._data.dispose();\n\t}\n\n\tisDirty(resource: URI): boolean {\n\t\treturn this._data.isDirty(resource);\n\t}\n\n\tprivate createUntitledUri(notebookType: string) {\n\t\tconst info = this._notebookService.getContributedNotebookType(\n\t\t\tassertIsDefined(notebookType),\n\t\t);\n\t\tif (!info) {\n\t\t\tthrow new Error(\"UNKNOWN notebook type: \" + notebookType);\n\t\t}\n\n\t\tconst suffix =\n\t\t\tNotebookProviderInfo.possibleFileEnding(info.selectors) ?? \"\";\n\t\tfor (let counter = 1; ; counter++) {\n\t\t\tconst candidate = URI.from({\n\t\t\t\tscheme: Schemas.untitled,\n\t\t\t\tpath: `Untitled-${counter}${suffix}`,\n\t\t\t\tquery: notebookType,\n\t\t\t});\n\t\t\tif (!this._notebookService.getNotebookTextModel(candidate)) {\n\t\t\t\treturn candidate;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async validateResourceViewType(\n\t\turi: URI | undefined,\n\t\tviewType: string | undefined,\n\t) {\n\t\tif (!uri && !viewType) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Must provide at least one of resource or viewType\",\n\t\t\t);\n\t\t}\n\n\t\tif (uri?.scheme === CellUri.scheme) {\n\t\t\tthrow new Error(\n\t\t\t\t`CANNOT open a cell-uri as notebook. Tried with ${uri.toString()}`,\n\t\t\t);\n\t\t}\n\n\t\tconst resource = this._uriIdentService.asCanonicalUri(\n\t\t\turi ?? this.createUntitledUri(viewType!),\n\t\t);\n\n\t\tconst existingNotebook =\n\t\t\tthis._notebookService.getNotebookTextModel(resource);\n\t\tif (!viewType) {\n\t\t\tif (existingNotebook) {\n\t\t\t\tviewType = existingNotebook.viewType;\n\t\t\t} else {\n\t\t\t\tawait this._extensionService.whenInstalledExtensionsRegistered();\n\t\t\t\tconst providers =\n\t\t\t\t\tthis._notebookService.getContributedNotebookTypes(resource);\n\t\t\t\tviewType =\n\t\t\t\t\tproviders.find(\n\t\t\t\t\t\t(provider) => provider.priority === \"exclusive\",\n\t\t\t\t\t)?.id ??\n\t\t\t\t\tproviders.find(\n\t\t\t\t\t\t(provider) => provider.priority === \"default\",\n\t\t\t\t\t)?.id ??\n\t\t\t\t\tproviders[0]?.id;\n\t\t\t}\n\t\t}\n\n\t\tif (!viewType) {\n\t\t\tthrow new Error(`Missing viewType for '${resource}'`);\n\t\t}\n\n\t\tif (existingNotebook && existingNotebook.viewType !== viewType) {\n\t\t\tawait this._onWillFailWithConflict.fireAsync(\n\t\t\t\t{ resource: resource, viewType },\n\t\t\t\tCancellationToken.None,\n\t\t\t);\n\n\t\t\t// check again, listener should have done cleanup\n\t\t\tconst existingViewType2 =\n\t\t\t\tthis._notebookService.getNotebookTextModel(resource)?.viewType;\n\t\t\tif (existingViewType2 && existingViewType2 !== viewType) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`A notebook with view type '${existingViewType2}' already exists for '${resource}', CANNOT create another notebook with view type ${viewType}`,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn { resource, viewType };\n\t}\n\n\tpublic async createUntitledNotebookTextModel(viewType: string) {\n\t\tconst resource = this._uriIdentService.asCanonicalUri(\n\t\t\tthis.createUntitledUri(viewType),\n\t\t);\n\n\t\treturn await this._notebookService.createNotebookTextModel(\n\t\t\tviewType,\n\t\t\tresource,\n\t\t);\n\t}\n\n\tasync resolve(\n\t\tresource: URI,\n\t\tviewType?: string,\n\t\toptions?: NotebookEditorModelCreationOptions,\n\t): Promise<IReference<IResolvedNotebookEditorModel>>;\n\tasync resolve(\n\t\tresource: IUntitledNotebookResource,\n\t\tviewType: string,\n\t\toptions: NotebookEditorModelCreationOptions,\n\t): Promise<IReference<IResolvedNotebookEditorModel>>;\n\tasync resolve(\n\t\targ0: URI | IUntitledNotebookResource,\n\t\tviewType?: string,\n\t\toptions?: NotebookEditorModelCreationOptions,\n\t): Promise<IReference<IResolvedNotebookEditorModel>> {\n\t\tlet resource: URI | undefined;\n\t\tlet hasAssociatedFilePath;\n\t\tif (URI.isUri(arg0)) {\n\t\t\tresource = arg0;\n\t\t} else if (arg0.untitledResource) {\n\t\t\tif (arg0.untitledResource.scheme === Schemas.untitled) {\n\t\t\t\tresource = arg0.untitledResource;\n\t\t\t} else {\n\t\t\t\tresource = arg0.untitledResource.with({\n\t\t\t\t\tscheme: Schemas.untitled,\n\t\t\t\t});\n\t\t\t\thasAssociatedFilePath = true;\n\t\t\t}\n\t\t}\n\n\t\tconst validated = await this.validateResourceViewType(\n\t\t\tresource,\n\t\t\tviewType,\n\t\t);\n\n\t\tconst reference = this._data.acquire(\n\t\t\tvalidated.resource.toString(),\n\t\t\tvalidated.viewType,\n\t\t\thasAssociatedFilePath,\n\t\t\toptions?.limits,\n\t\t\toptions?.scratchpad,\n\t\t);\n\t\ttry {\n\t\t\tconst model = await reference.object;\n\t\t\treturn {\n\t\t\t\tobject: model,\n\t\t\t\tdispose() {\n\t\t\t\t\treference.dispose();\n\t\t\t\t},\n\t\t\t};\n\t\t} catch (err) {\n\t\t\treference.dispose();\n\t\t\tthrow err;\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
