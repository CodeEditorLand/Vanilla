{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/common/model/notebookTextModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\ttype ISequence,\n\tLcsDiff,\n} from \"../../../../../base/common/diff/diff.js\";\nimport {\n\tEmitter,\n\ttype Event,\n\tPauseableEmitter,\n} from \"../../../../../base/common/event.js\";\nimport { hash } from \"../../../../../base/common/hash.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n\tdispose,\n} from \"../../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../../base/common/network.js\";\nimport { isEqual } from \"../../../../../base/common/resources.js\";\nimport { isDefined } from \"../../../../../base/common/types.js\";\nimport type { URI } from \"../../../../../base/common/uri.js\";\nimport type { IPosition } from \"../../../../../editor/common/core/position.js\";\nimport { Range } from \"../../../../../editor/common/core/range.js\";\nimport { ILanguageService } from \"../../../../../editor/common/languages/language.js\";\nimport type {\n\tFindMatch,\n\tITextModel,\n} from \"../../../../../editor/common/model.js\";\nimport { TextModel } from \"../../../../../editor/common/model/textModel.js\";\nimport { SearchParams } from \"../../../../../editor/common/model/textModelSearch.js\";\nimport { IModelService } from \"../../../../../editor/common/services/model.js\";\nimport {\n\ttype IResourceUndoRedoElement,\n\ttype IUndoRedoElement,\n\tIUndoRedoService,\n\ttype IWorkspaceUndoRedoElement,\n\tUndoRedoElementType,\n\ttype UndoRedoGroup,\n} from \"../../../../../platform/undoRedo/common/undoRedo.js\";\nimport { ILanguageDetectionService } from \"../../../../services/languageDetection/common/languageDetectionWorkerService.js\";\nimport {\n\tCellEditType,\n\tCellKind,\n\tCellUri,\n\ttype ICell,\n\ttype ICellDto2,\n\ttype ICellEditOperation,\n\ttype ICellOutput,\n\ttype INotebookTextModel,\n\ttype IOutputDto,\n\ttype IOutputItemDto,\n\ttype ISelectionState,\n\ttype NotebookCellCollapseState,\n\ttype NotebookCellDefaultCollapseConfig,\n\ttype NotebookCellInternalMetadata,\n\ttype NotebookCellMetadata,\n\ttype NotebookCellOutputsSplice,\n\ttype NotebookCellTextModelSplice,\n\tNotebookCellsChangeType,\n\ttype NotebookDocumentMetadata,\n\ttype NotebookTextModelChangedEvent,\n\ttype NotebookTextModelWillAddRemoveEvent,\n\ttype NullablePartialNotebookCellInternalMetadata,\n\ttype NullablePartialNotebookCellMetadata,\n\ttype TransientOptions,\n\tdiff,\n} from \"../notebookCommon.js\";\nimport { CellMetadataEdit, MoveCellEdit, SpliceCellsEdit } from \"./cellEdit.js\";\nimport { NotebookCellOutputTextModel } from \"./notebookCellOutputTextModel.js\";\nimport { NotebookCellTextModel } from \"./notebookCellTextModel.js\";\n\nclass StackOperation implements IWorkspaceUndoRedoElement {\n\ttype: UndoRedoElementType.Workspace;\n\n\tpublic get code() {\n\t\treturn this._operations.length === 1\n\t\t\t? this._operations[0].code\n\t\t\t: \"undoredo.notebooks.stackOperation\";\n\t}\n\n\tprivate _operations: IUndoRedoElement[] = [];\n\tprivate _beginSelectionState: ISelectionState | undefined = undefined;\n\tprivate _resultSelectionState: ISelectionState | undefined = undefined;\n\tprivate _beginAlternativeVersionId: string;\n\tprivate _resultAlternativeVersionId: string;\n\tpublic get label() {\n\t\treturn this._operations.length === 1\n\t\t\t? this._operations[0].label\n\t\t\t: \"edit\";\n\t}\n\n\tconstructor(\n\t\treadonly textModel: NotebookTextModel,\n\t\treadonly undoRedoGroup: UndoRedoGroup | undefined,\n\t\tprivate _pauseableEmitter: PauseableEmitter<NotebookTextModelChangedEvent>,\n\t\tprivate _postUndoRedo: (alternativeVersionId: string) => void,\n\t\tselectionState: ISelectionState | undefined,\n\t\tbeginAlternativeVersionId: string,\n\t) {\n\t\tthis.type = UndoRedoElementType.Workspace;\n\t\tthis._beginSelectionState = selectionState;\n\t\tthis._beginAlternativeVersionId = beginAlternativeVersionId;\n\t\tthis._resultAlternativeVersionId = beginAlternativeVersionId;\n\t}\n\tget resources(): readonly URI[] {\n\t\treturn [this.textModel.uri];\n\t}\n\n\tget isEmpty(): boolean {\n\t\treturn this._operations.length === 0;\n\t}\n\n\tpushEndState(\n\t\talternativeVersionId: string,\n\t\tselectionState: ISelectionState | undefined,\n\t) {\n\t\t// https://github.com/microsoft/vscode/issues/207523\n\t\tthis._resultAlternativeVersionId = alternativeVersionId;\n\t\tthis._resultSelectionState =\n\t\t\tselectionState || this._resultSelectionState;\n\t}\n\n\tpushEditOperation(\n\t\telement: IUndoRedoElement,\n\t\tbeginSelectionState: ISelectionState | undefined,\n\t\tresultSelectionState: ISelectionState | undefined,\n\t\talternativeVersionId: string,\n\t) {\n\t\tif (this._operations.length === 0) {\n\t\t\tthis._beginSelectionState =\n\t\t\t\tthis._beginSelectionState ?? beginSelectionState;\n\t\t}\n\t\tthis._operations.push(element);\n\t\tthis._resultSelectionState = resultSelectionState;\n\t\tthis._resultAlternativeVersionId = alternativeVersionId;\n\t}\n\n\tasync undo(): Promise<void> {\n\t\tthis._pauseableEmitter.pause();\n\t\ttry {\n\t\t\tfor (let i = this._operations.length - 1; i >= 0; i--) {\n\t\t\t\tawait this._operations[i].undo();\n\t\t\t}\n\t\t\tthis._postUndoRedo(this._beginAlternativeVersionId);\n\t\t\tthis._pauseableEmitter.fire({\n\t\t\t\trawEvents: [],\n\t\t\t\tsynchronous: undefined,\n\t\t\t\tversionId: this.textModel.versionId,\n\t\t\t\tendSelectionState: this._beginSelectionState,\n\t\t\t});\n\t\t} finally {\n\t\t\tthis._pauseableEmitter.resume();\n\t\t}\n\t}\n\n\tasync redo(): Promise<void> {\n\t\tthis._pauseableEmitter.pause();\n\t\ttry {\n\t\t\tfor (let i = 0; i < this._operations.length; i++) {\n\t\t\t\tawait this._operations[i].redo();\n\t\t\t}\n\t\t\tthis._postUndoRedo(this._resultAlternativeVersionId);\n\t\t\tthis._pauseableEmitter.fire({\n\t\t\t\trawEvents: [],\n\t\t\t\tsynchronous: undefined,\n\t\t\t\tversionId: this.textModel.versionId,\n\t\t\t\tendSelectionState: this._resultSelectionState,\n\t\t\t});\n\t\t} finally {\n\t\t\tthis._pauseableEmitter.resume();\n\t\t}\n\t}\n}\n\nclass NotebookOperationManager {\n\tprivate _pendingStackOperation: StackOperation | null = null;\n\tconstructor(\n\t\tprivate readonly _textModel: NotebookTextModel,\n\t\tprivate _undoService: IUndoRedoService,\n\t\tprivate _pauseableEmitter: PauseableEmitter<NotebookTextModelChangedEvent>,\n\t\tprivate _postUndoRedo: (alternativeVersionId: string) => void,\n\t) {}\n\n\tisUndoStackEmpty(): boolean {\n\t\treturn (\n\t\t\tthis._pendingStackOperation === null ||\n\t\t\tthis._pendingStackOperation.isEmpty\n\t\t);\n\t}\n\n\tpushStackElement(\n\t\talternativeVersionId: string,\n\t\tselectionState: ISelectionState | undefined,\n\t) {\n\t\tif (\n\t\t\tthis._pendingStackOperation &&\n\t\t\t!this._pendingStackOperation.isEmpty\n\t\t) {\n\t\t\tthis._pendingStackOperation.pushEndState(\n\t\t\t\talternativeVersionId,\n\t\t\t\tselectionState,\n\t\t\t);\n\t\t\tthis._undoService.pushElement(\n\t\t\t\tthis._pendingStackOperation,\n\t\t\t\tthis._pendingStackOperation.undoRedoGroup,\n\t\t\t);\n\t\t}\n\t\tthis._pendingStackOperation = null;\n\t}\n\tprivate _getOrCreateEditStackElement(\n\t\tbeginSelectionState: ISelectionState | undefined,\n\t\tundoRedoGroup: UndoRedoGroup | undefined,\n\t\talternativeVersionId: string,\n\t) {\n\t\treturn (this._pendingStackOperation ??= new StackOperation(\n\t\t\tthis._textModel,\n\t\t\tundoRedoGroup,\n\t\t\tthis._pauseableEmitter,\n\t\t\tthis._postUndoRedo,\n\t\t\tbeginSelectionState,\n\t\t\talternativeVersionId || \"\",\n\t\t));\n\t}\n\n\tpushEditOperation(\n\t\telement: IUndoRedoElement,\n\t\tbeginSelectionState: ISelectionState | undefined,\n\t\tresultSelectionState: ISelectionState | undefined,\n\t\talternativeVersionId: string,\n\t\tundoRedoGroup: UndoRedoGroup | undefined,\n\t) {\n\t\tconst pendingStackOperation = this._getOrCreateEditStackElement(\n\t\t\tbeginSelectionState,\n\t\t\tundoRedoGroup,\n\t\t\talternativeVersionId,\n\t\t);\n\t\tpendingStackOperation.pushEditOperation(\n\t\t\telement,\n\t\t\tbeginSelectionState,\n\t\t\tresultSelectionState,\n\t\t\talternativeVersionId,\n\t\t);\n\t}\n}\n\ntype TransformedEdit = {\n\tedit: ICellEditOperation;\n\tcellIndex: number;\n\tend: number | undefined;\n\toriginalIndex: number;\n};\n\nclass NotebookEventEmitter extends PauseableEmitter<NotebookTextModelChangedEvent> {\n\tget isEmpty() {\n\t\treturn this._eventQueue.isEmpty();\n\t}\n\n\tisDirtyEvent() {\n\t\tfor (const e of this._eventQueue) {\n\t\t\tfor (let i = 0; i < e.rawEvents.length; i++) {\n\t\t\t\tif (!e.rawEvents[i].transient) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport class NotebookTextModel\n\textends Disposable\n\timplements INotebookTextModel\n{\n\tprivate _isDisposed = false;\n\tprivate readonly _onWillDispose: Emitter<void> = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\tprivate readonly _onWillAddRemoveCells = this._register(\n\t\tnew Emitter<NotebookTextModelWillAddRemoveEvent>(),\n\t);\n\tprivate readonly _onDidChangeContent = this._register(\n\t\tnew Emitter<NotebookTextModelChangedEvent>(),\n\t);\n\treadonly onWillDispose: Event<void> = this._onWillDispose.event;\n\treadonly onWillAddRemoveCells = this._onWillAddRemoveCells.event;\n\treadonly onDidChangeContent = this._onDidChangeContent.event;\n\tprivate _cellhandlePool = 0;\n\tprivate readonly _cellListeners: Map<number, IDisposable> = new Map();\n\tprivate _cells: NotebookCellTextModel[] = [];\n\tprivate _defaultCollapseConfig:\n\t\t| NotebookCellDefaultCollapseConfig\n\t\t| undefined;\n\n\tmetadata: NotebookDocumentMetadata = {};\n\ttransientOptions: TransientOptions = {\n\t\ttransientCellMetadata: {},\n\t\ttransientDocumentMetadata: {},\n\t\ttransientOutputs: false,\n\t\tcellContentMetadata: {},\n\t};\n\tprivate _versionId = 0;\n\n\t/**\n\t * This alternative id is only for non-cell-content changes.\n\t */\n\tprivate _notebookSpecificAlternativeId = 0;\n\n\t/**\n\t * Unlike, versionId, this can go down (via undo) or go to previous values (via redo)\n\t */\n\tprivate _alternativeVersionId = \"1\";\n\tprivate _operationManager: NotebookOperationManager;\n\tprivate _pauseableEmitter: NotebookEventEmitter;\n\n\tget length() {\n\t\treturn this._cells.length;\n\t}\n\n\tget cells(): readonly NotebookCellTextModel[] {\n\t\treturn this._cells;\n\t}\n\n\tget versionId() {\n\t\treturn this._versionId;\n\t}\n\n\tget alternativeVersionId(): string {\n\t\treturn this._alternativeVersionId;\n\t}\n\n\tget notebookType() {\n\t\treturn this.viewType;\n\t}\n\n\tconstructor(\n\t\treadonly viewType: string,\n\t\treadonly uri: URI,\n\t\tcells: ICellDto2[],\n\t\tmetadata: NotebookDocumentMetadata,\n\t\toptions: TransientOptions,\n\t\t@IUndoRedoService private readonly _undoService: IUndoRedoService,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@ILanguageDetectionService private readonly _languageDetectionService: ILanguageDetectionService\n\t) {\n\t\tsuper();\n\t\tthis.transientOptions = options;\n\t\tthis.metadata = metadata;\n\t\tthis._initialize(cells);\n\n\t\tconst maybeUpdateCellTextModel = (textModel: ITextModel) => {\n\t\t\tif (textModel.uri.scheme === Schemas.vscodeNotebookCell && textModel instanceof TextModel) {\n\t\t\t\tconst cellUri = CellUri.parse(textModel.uri);\n\t\t\t\tif (cellUri && isEqual(cellUri.notebook, this.uri)) {\n\t\t\t\t\tconst cellIdx = this._getCellIndexByHandle(cellUri.handle);\n\t\t\t\t\tif (cellIdx >= 0) {\n\t\t\t\t\t\tconst cell = this.cells[cellIdx];\n\t\t\t\t\t\tif (cell) {\n\t\t\t\t\t\t\tcell.textModel = textModel;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthis._register(_modelService.onModelAdded(e => maybeUpdateCellTextModel(e)));\n\n\t\tthis._pauseableEmitter = new NotebookEventEmitter({\n\t\t\tmerge: (events: NotebookTextModelChangedEvent[]) => {\n\t\t\t\tconst first = events[0];\n\n\t\t\t\tconst rawEvents = first.rawEvents;\n\t\t\t\tlet versionId = first.versionId;\n\t\t\t\tlet endSelectionState = first.endSelectionState;\n\t\t\t\tlet synchronous = first.synchronous;\n\n\t\t\t\tfor (let i = 1; i < events.length; i++) {\n\t\t\t\t\trawEvents.push(...events[i].rawEvents);\n\t\t\t\t\tversionId = events[i].versionId;\n\t\t\t\t\tendSelectionState = events[i].endSelectionState !== undefined ? events[i].endSelectionState : endSelectionState;\n\t\t\t\t\tsynchronous = events[i].synchronous !== undefined ? events[i].synchronous : synchronous;\n\t\t\t\t}\n\n\t\t\t\treturn { rawEvents, versionId, endSelectionState, synchronous };\n\t\t\t}\n\t\t});\n\n\t\tthis._register(this._pauseableEmitter.event(e => {\n\t\t\tif (e.rawEvents.length) {\n\t\t\t\tthis._onDidChangeContent.fire(e);\n\t\t\t}\n\t\t}));\n\n\t\tthis._operationManager = new NotebookOperationManager(\n\t\t\tthis,\n\t\t\tthis._undoService,\n\t\t\tthis._pauseableEmitter,\n\t\t\t(alternativeVersionId: string) => {\n\t\t\t\tthis._increaseVersionId(true);\n\t\t\t\tthis._overwriteAlternativeVersionId(alternativeVersionId);\n\t\t\t}\n\t\t);\n\t}\n\n\tsetCellCollapseDefault(\n\t\tcollapseConfig: NotebookCellDefaultCollapseConfig | undefined,\n\t) {\n\t\tthis._defaultCollapseConfig = collapseConfig;\n\t}\n\n\t_initialize(cells: ICellDto2[], triggerDirty?: boolean) {\n\t\tthis._cells = [];\n\t\tthis._versionId = 0;\n\t\tthis._notebookSpecificAlternativeId = 0;\n\n\t\tconst mainCells = cells.map((cell) => {\n\t\t\tconst cellHandle = this._cellhandlePool++;\n\t\t\tconst cellUri = CellUri.generate(this.uri, cellHandle);\n\t\t\tconst collapseState = this._getDefaultCollapseState(cell);\n\t\t\treturn new NotebookCellTextModel(\n\t\t\t\tcellUri,\n\t\t\t\tcellHandle,\n\t\t\t\tcell.source,\n\t\t\t\tcell.language,\n\t\t\t\tcell.mime,\n\t\t\t\tcell.cellKind,\n\t\t\t\tcell.outputs,\n\t\t\t\tcell.metadata,\n\t\t\t\tcell.internalMetadata,\n\t\t\t\tcollapseState,\n\t\t\t\tthis.transientOptions,\n\t\t\t\tthis._languageService,\n\t\t\t\tthis._languageDetectionService,\n\t\t\t);\n\t\t});\n\n\t\tfor (let i = 0; i < mainCells.length; i++) {\n\t\t\tconst dirtyStateListener = mainCells[i].onDidChangeContent((e) => {\n\t\t\t\tthis._bindCellContentHandler(mainCells[i], e);\n\t\t\t});\n\n\t\t\tthis._cellListeners.set(mainCells[i].handle, dirtyStateListener);\n\t\t\tthis._register(mainCells[i]);\n\t\t}\n\n\t\tthis._cells.splice(0, 0, ...mainCells);\n\t\tthis._alternativeVersionId = this._generateAlternativeId();\n\n\t\tif (triggerDirty) {\n\t\t\tthis._pauseableEmitter.fire({\n\t\t\t\trawEvents: [\n\t\t\t\t\t{ kind: NotebookCellsChangeType.Unknown, transient: false },\n\t\t\t\t],\n\t\t\t\tversionId: this.versionId,\n\t\t\t\tsynchronous: true,\n\t\t\t\tendSelectionState: undefined,\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _bindCellContentHandler(\n\t\tcell: NotebookCellTextModel,\n\t\te: \"content\" | \"language\" | \"mime\",\n\t) {\n\t\tthis._increaseVersionId(e === \"content\");\n\t\tswitch (e) {\n\t\t\tcase \"content\":\n\t\t\t\tthis._pauseableEmitter.fire({\n\t\t\t\t\trawEvents: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkind: NotebookCellsChangeType.ChangeCellContent,\n\t\t\t\t\t\t\tindex: this._getCellIndexByHandle(cell.handle),\n\t\t\t\t\t\t\ttransient: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tversionId: this.versionId,\n\t\t\t\t\tsynchronous: true,\n\t\t\t\t\tendSelectionState: undefined,\n\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase \"language\":\n\t\t\t\tthis._pauseableEmitter.fire({\n\t\t\t\t\trawEvents: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkind: NotebookCellsChangeType.ChangeCellLanguage,\n\t\t\t\t\t\t\tindex: this._getCellIndexByHandle(cell.handle),\n\t\t\t\t\t\t\tlanguage: cell.language,\n\t\t\t\t\t\t\ttransient: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tversionId: this.versionId,\n\t\t\t\t\tsynchronous: true,\n\t\t\t\t\tendSelectionState: undefined,\n\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase \"mime\":\n\t\t\t\tthis._pauseableEmitter.fire({\n\t\t\t\t\trawEvents: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkind: NotebookCellsChangeType.ChangeCellMime,\n\t\t\t\t\t\t\tindex: this._getCellIndexByHandle(cell.handle),\n\t\t\t\t\t\t\tmime: cell.mime,\n\t\t\t\t\t\t\ttransient: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tversionId: this.versionId,\n\t\t\t\t\tsynchronous: true,\n\t\t\t\t\tendSelectionState: undefined,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate _generateAlternativeId() {\n\t\treturn (\n\t\t\t`${this._notebookSpecificAlternativeId}_` +\n\t\t\tthis.cells\n\t\t\t\t.map((cell) => cell.handle + \",\" + cell.alternativeId)\n\t\t\t\t.join(\";\")\n\t\t);\n\t}\n\n\toverride dispose() {\n\t\tif (this._isDisposed) {\n\t\t\t// NotebookEditorModel can be disposed twice, don't fire onWillDispose again\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isDisposed = true;\n\t\tthis._onWillDispose.fire();\n\t\tthis._undoService.removeElements(this.uri);\n\n\t\tdispose(this._cellListeners.values());\n\t\tthis._cellListeners.clear();\n\n\t\tdispose(this._cells);\n\t\tthis._cells = [];\n\t\tsuper.dispose();\n\t}\n\n\tpushStackElement() {\n\t\t// https://github.com/microsoft/vscode/issues/207523\n\t}\n\n\tprivate _getCellIndexByHandle(handle: number) {\n\t\treturn this.cells.findIndex((c) => c.handle === handle);\n\t}\n\n\tprivate _getCellIndexWithOutputIdHandleFromEdits(\n\t\toutputId: string,\n\t\trawEdits: ICellEditOperation[],\n\t) {\n\t\tconst edit = rawEdits.find(\n\t\t\t(e) =>\n\t\t\t\t\"outputs\" in e &&\n\t\t\t\te.outputs.some((o) => o.outputId === outputId),\n\t\t);\n\t\tif (edit) {\n\t\t\tif (\"index\" in edit) {\n\t\t\t\treturn edit.index;\n\t\t\t} else if (\"handle\" in edit) {\n\t\t\t\tconst cellIndex = this._getCellIndexByHandle(edit.handle);\n\t\t\t\tthis._assertIndex(cellIndex);\n\t\t\t\treturn cellIndex;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\tprivate _getCellIndexWithOutputIdHandle(outputId: string) {\n\t\treturn this.cells.findIndex(\n\t\t\t(c) => !!c.outputs.find((o) => o.outputId === outputId),\n\t\t);\n\t}\n\n\treset(\n\t\tcells: ICellDto2[],\n\t\tmetadata: NotebookDocumentMetadata,\n\t\ttransientOptions: TransientOptions,\n\t): void {\n\t\tthis.transientOptions = transientOptions;\n\t\tconst edits = NotebookTextModel.computeEdits(this, cells);\n\n\t\tthis.applyEdits(\n\t\t\t[...edits, { editType: CellEditType.DocumentMetadata, metadata }],\n\t\t\ttrue,\n\t\t\tundefined,\n\t\t\t() => undefined,\n\t\t\tundefined,\n\t\t\tfalse,\n\t\t);\n\t}\n\n\tstatic computeEdits(model: NotebookTextModel, cells: ICellDto2[]) {\n\t\tconst edits: ICellEditOperation[] = [];\n\n\t\tconst commonPrefix = this._commonPrefix(\n\t\t\tmodel.cells,\n\t\t\tmodel.cells.length,\n\t\t\t0,\n\t\t\tcells,\n\t\t\tcells.length,\n\t\t\t0,\n\t\t);\n\n\t\tif (commonPrefix > 0) {\n\t\t\tfor (let i = 0; i < commonPrefix; i++) {\n\t\t\t\tedits.push(\n\t\t\t\t\t{\n\t\t\t\t\t\teditType: CellEditType.Metadata,\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tmetadata: cells[i].metadata ?? {},\n\t\t\t\t\t},\n\t\t\t\t\t...this._computeOutputEdit(\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tmodel.cells[i].outputs,\n\t\t\t\t\t\tcells[i].outputs,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\tmodel.cells.length === cells.length &&\n\t\t\tcommonPrefix === model.cells.length\n\t\t) {\n\t\t\treturn edits;\n\t\t}\n\n\t\tconst commonSuffix = this._commonSuffix(\n\t\t\tmodel.cells,\n\t\t\tmodel.cells.length - commonPrefix,\n\t\t\tcommonPrefix,\n\t\t\tcells,\n\t\t\tcells.length - commonPrefix,\n\t\t\tcommonPrefix,\n\t\t);\n\n\t\tif (commonSuffix > 0) {\n\t\t\tedits.push({\n\t\t\t\teditType: CellEditType.Replace,\n\t\t\t\tindex: commonPrefix,\n\t\t\t\tcount: model.cells.length - commonPrefix - commonSuffix,\n\t\t\t\tcells: cells.slice(commonPrefix, cells.length - commonSuffix),\n\t\t\t});\n\t\t} else if (commonPrefix > 0) {\n\t\t\tedits.push({\n\t\t\t\teditType: CellEditType.Replace,\n\t\t\t\tindex: commonPrefix,\n\t\t\t\tcount: model.cells.length - commonPrefix,\n\t\t\t\tcells: cells.slice(commonPrefix),\n\t\t\t});\n\t\t} else {\n\t\t\tedits.push({\n\t\t\t\teditType: CellEditType.Replace,\n\t\t\t\tindex: 0,\n\t\t\t\tcount: model.cells.length,\n\t\t\t\tcells,\n\t\t\t});\n\t\t}\n\n\t\tif (commonSuffix > 0) {\n\t\t\t// has same suffix\n\t\t\tfor (let i = commonSuffix; i > 0; i--) {\n\t\t\t\tedits.push(\n\t\t\t\t\t{\n\t\t\t\t\t\teditType: CellEditType.Metadata,\n\t\t\t\t\t\tindex: model.cells.length - i,\n\t\t\t\t\t\tmetadata: cells[cells.length - i].metadata ?? {},\n\t\t\t\t\t},\n\t\t\t\t\t...this._computeOutputEdit(\n\t\t\t\t\t\tmodel.cells.length - i,\n\t\t\t\t\t\tmodel.cells[model.cells.length - i].outputs,\n\t\t\t\t\t\tcells[cells.length - i].outputs,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn edits;\n\t}\n\n\tprivate static _computeOutputEdit(\n\t\tindex: number,\n\t\ta: ICellOutput[],\n\t\tb: IOutputDto[],\n\t): ICellEditOperation[] {\n\t\tif (a.length !== b.length) {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\teditType: CellEditType.Output,\n\t\t\t\t\tindex: index,\n\t\t\t\t\toutputs: b,\n\t\t\t\t\tappend: false,\n\t\t\t\t},\n\t\t\t];\n\t\t}\n\n\t\tif (a.length === 0) {\n\t\t\t// no output\n\t\t\treturn [];\n\t\t}\n\n\t\t// same length\n\t\treturn b.map((output, i) => {\n\t\t\treturn {\n\t\t\t\teditType: CellEditType.OutputItems,\n\t\t\t\toutputId: a[i].outputId,\n\t\t\t\titems: output.outputs,\n\t\t\t\tappend: false,\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate static _commonPrefix(\n\t\ta: readonly NotebookCellTextModel[],\n\t\taLen: number,\n\t\taDelta: number,\n\t\tb: ICellDto2[],\n\t\tbLen: number,\n\t\tbDelta: number,\n\t): number {\n\t\tconst maxResult = Math.min(aLen, bLen);\n\t\tlet result = 0;\n\t\tfor (\n\t\t\tlet i = 0;\n\t\t\ti < maxResult && a[aDelta + i].fastEqual(b[bDelta + i]);\n\t\t\ti++\n\t\t) {\n\t\t\tresult++;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate static _commonSuffix(\n\t\ta: readonly NotebookCellTextModel[],\n\t\taLen: number,\n\t\taDelta: number,\n\t\tb: ICellDto2[],\n\t\tbLen: number,\n\t\tbDelta: number,\n\t): number {\n\t\tconst maxResult = Math.min(aLen, bLen);\n\t\tlet result = 0;\n\t\tfor (\n\t\t\tlet i = 0;\n\t\t\ti < maxResult &&\n\t\t\ta[aDelta + aLen - i - 1].fastEqual(b[bDelta + bLen - i - 1]);\n\t\t\ti++\n\t\t) {\n\t\t\tresult++;\n\t\t}\n\t\treturn result;\n\t}\n\n\tapplyEdits(\n\t\trawEdits: ICellEditOperation[],\n\t\tsynchronous: boolean,\n\t\tbeginSelectionState: ISelectionState | undefined,\n\t\tendSelectionsComputer: () => ISelectionState | undefined,\n\t\tundoRedoGroup: UndoRedoGroup | undefined,\n\t\tcomputeUndoRedo: boolean,\n\t): boolean {\n\t\tthis._pauseableEmitter.pause();\n\t\tthis._operationManager.pushStackElement(\n\t\t\tthis._alternativeVersionId,\n\t\t\tundefined,\n\t\t);\n\n\t\ttry {\n\t\t\tthis._doApplyEdits(\n\t\t\t\trawEdits,\n\t\t\t\tsynchronous,\n\t\t\t\tcomputeUndoRedo,\n\t\t\t\tbeginSelectionState,\n\t\t\t\tundoRedoGroup,\n\t\t\t);\n\t\t\treturn true;\n\t\t} finally {\n\t\t\tif (!this._pauseableEmitter.isEmpty) {\n\t\t\t\t// Update selection and versionId after applying edits.\n\t\t\t\tconst endSelections = endSelectionsComputer();\n\t\t\t\tthis._increaseVersionId(\n\t\t\t\t\tthis._operationManager.isUndoStackEmpty() &&\n\t\t\t\t\t\t!this._pauseableEmitter.isDirtyEvent(),\n\t\t\t\t);\n\n\t\t\t\t// Finalize undo element\n\t\t\t\tthis._operationManager.pushStackElement(\n\t\t\t\t\tthis._alternativeVersionId,\n\t\t\t\t\tendSelections,\n\t\t\t\t);\n\n\t\t\t\t// Broadcast changes\n\t\t\t\tthis._pauseableEmitter.fire({\n\t\t\t\t\trawEvents: [],\n\t\t\t\t\tversionId: this.versionId,\n\t\t\t\t\tsynchronous: synchronous,\n\t\t\t\t\tendSelectionState: endSelections,\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._pauseableEmitter.resume();\n\t\t}\n\t}\n\n\tprivate _doApplyEdits(\n\t\trawEdits: ICellEditOperation[],\n\t\tsynchronous: boolean,\n\t\tcomputeUndoRedo: boolean,\n\t\tbeginSelectionState: ISelectionState | undefined,\n\t\tundoRedoGroup: UndoRedoGroup | undefined,\n\t): void {\n\t\tconst editsWithDetails = rawEdits\n\t\t\t.map((edit, index) => {\n\t\t\t\tlet cellIndex = -1;\n\t\t\t\tif (\"index\" in edit) {\n\t\t\t\t\tcellIndex = edit.index;\n\t\t\t\t} else if (\"handle\" in edit) {\n\t\t\t\t\tcellIndex = this._getCellIndexByHandle(edit.handle);\n\t\t\t\t\tthis._assertIndex(cellIndex);\n\t\t\t\t} else if (\"outputId\" in edit) {\n\t\t\t\t\tcellIndex = this._getCellIndexWithOutputIdHandle(\n\t\t\t\t\t\tedit.outputId,\n\t\t\t\t\t);\n\t\t\t\t\tif (this._indexIsInvalid(cellIndex)) {\n\t\t\t\t\t\t// The referenced output may have been created in this batch of edits\n\t\t\t\t\t\tcellIndex =\n\t\t\t\t\t\t\tthis._getCellIndexWithOutputIdHandleFromEdits(\n\t\t\t\t\t\t\t\tedit.outputId,\n\t\t\t\t\t\t\t\trawEdits.slice(0, index),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this._indexIsInvalid(cellIndex)) {\n\t\t\t\t\t\t// It's possible for an edit to refer to an output which was just cleared, ignore it without throwing\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t} else if (edit.editType !== CellEditType.DocumentMetadata) {\n\t\t\t\t\tthrow new Error(\"Invalid cell edit\");\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tedit,\n\t\t\t\t\tcellIndex,\n\t\t\t\t\tend:\n\t\t\t\t\t\tedit.editType === CellEditType.DocumentMetadata\n\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t: edit.editType === CellEditType.Replace\n\t\t\t\t\t\t\t\t? edit.index + edit.count\n\t\t\t\t\t\t\t\t: cellIndex,\n\t\t\t\t\toriginalIndex: index,\n\t\t\t\t};\n\t\t\t})\n\t\t\t.filter(isDefined);\n\n\t\t// compress all edits which have no side effects on cell index\n\t\tconst edits = this._mergeCellEdits(editsWithDetails)\n\t\t\t.sort((a, b) => {\n\t\t\t\tif (a.end === undefined) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\n\t\t\t\tif (b.end === undefined) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\n\t\t\t\treturn b.end - a.end || b.originalIndex - a.originalIndex;\n\t\t\t})\n\t\t\t.reduce((prev, curr) => {\n\t\t\t\tif (prev.length) {\n\t\t\t\t\tconst last = prev[prev.length - 1];\n\t\t\t\t\tconst index = last[0].cellIndex;\n\n\t\t\t\t\tif (curr.cellIndex === index) {\n\t\t\t\t\t\tlast.push(curr);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprev.push([curr]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// empty\n\t\t\t\t\tprev.push([curr]);\n\t\t\t\t}\n\n\t\t\t\treturn prev;\n\t\t\t}, [] as TransformedEdit[][])\n\t\t\t.map((editsOnSameIndex) => {\n\t\t\t\tconst replaceEdits: TransformedEdit[] = [];\n\t\t\t\tconst otherEdits: TransformedEdit[] = [];\n\n\t\t\t\teditsOnSameIndex.forEach((edit) => {\n\t\t\t\t\tif (edit.edit.editType === CellEditType.Replace) {\n\t\t\t\t\t\treplaceEdits.push(edit);\n\t\t\t\t\t} else {\n\t\t\t\t\t\totherEdits.push(edit);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn [...otherEdits.reverse(), ...replaceEdits];\n\t\t\t});\n\n\t\tconst flattenEdits = edits.flat();\n\n\t\tfor (const { edit, cellIndex } of flattenEdits) {\n\t\t\tswitch (edit.editType) {\n\t\t\t\tcase CellEditType.Replace:\n\t\t\t\t\tthis._replaceCells(\n\t\t\t\t\t\tedit.index,\n\t\t\t\t\t\tedit.count,\n\t\t\t\t\t\tedit.cells,\n\t\t\t\t\t\tsynchronous,\n\t\t\t\t\t\tcomputeUndoRedo,\n\t\t\t\t\t\tbeginSelectionState,\n\t\t\t\t\t\tundoRedoGroup,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase CellEditType.Output: {\n\t\t\t\t\tthis._assertIndex(cellIndex);\n\t\t\t\t\tconst cell = this._cells[cellIndex];\n\t\t\t\t\tif (edit.append) {\n\t\t\t\t\t\tthis._spliceNotebookCellOutputs(\n\t\t\t\t\t\t\tcell,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstart: cell.outputs.length,\n\t\t\t\t\t\t\t\tdeleteCount: 0,\n\t\t\t\t\t\t\t\tnewOutputs: edit.outputs.map(\n\t\t\t\t\t\t\t\t\t(op) => new NotebookCellOutputTextModel(op),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\tcomputeUndoRedo,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._spliceNotebookCellOutputs2(\n\t\t\t\t\t\t\tcell,\n\t\t\t\t\t\t\tedit.outputs,\n\t\t\t\t\t\t\tcomputeUndoRedo,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase CellEditType.OutputItems:\n\t\t\t\t\t{\n\t\t\t\t\t\tthis._assertIndex(cellIndex);\n\t\t\t\t\t\tconst cell = this._cells[cellIndex];\n\t\t\t\t\t\tif (edit.append) {\n\t\t\t\t\t\t\tthis._appendNotebookCellOutputItems(\n\t\t\t\t\t\t\t\tcell,\n\t\t\t\t\t\t\t\tedit.outputId,\n\t\t\t\t\t\t\t\tedit.items,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._replaceNotebookCellOutputItems(\n\t\t\t\t\t\t\t\tcell,\n\t\t\t\t\t\t\t\tedit.outputId,\n\t\t\t\t\t\t\t\tedit.items,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CellEditType.Metadata:\n\t\t\t\t\tthis._assertIndex(edit.index);\n\t\t\t\t\tthis._changeCellMetadata(\n\t\t\t\t\t\tthis._cells[edit.index],\n\t\t\t\t\t\tedit.metadata,\n\t\t\t\t\t\tcomputeUndoRedo,\n\t\t\t\t\t\tbeginSelectionState,\n\t\t\t\t\t\tundoRedoGroup,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase CellEditType.PartialMetadata:\n\t\t\t\t\tthis._assertIndex(cellIndex);\n\t\t\t\t\tthis._changeCellMetadataPartial(\n\t\t\t\t\t\tthis._cells[cellIndex],\n\t\t\t\t\t\tedit.metadata,\n\t\t\t\t\t\tcomputeUndoRedo,\n\t\t\t\t\t\tbeginSelectionState,\n\t\t\t\t\t\tundoRedoGroup,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase CellEditType.PartialInternalMetadata:\n\t\t\t\t\tthis._assertIndex(cellIndex);\n\t\t\t\t\tthis._changeCellInternalMetadataPartial(\n\t\t\t\t\t\tthis._cells[cellIndex],\n\t\t\t\t\t\tedit.internalMetadata,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase CellEditType.CellLanguage:\n\t\t\t\t\tthis._assertIndex(edit.index);\n\t\t\t\t\tthis._changeCellLanguage(\n\t\t\t\t\t\tthis._cells[edit.index],\n\t\t\t\t\t\tedit.language,\n\t\t\t\t\t\tcomputeUndoRedo,\n\t\t\t\t\t\tbeginSelectionState,\n\t\t\t\t\t\tundoRedoGroup,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase CellEditType.DocumentMetadata:\n\t\t\t\t\tthis._updateNotebookCellMetadata(\n\t\t\t\t\t\tedit.metadata,\n\t\t\t\t\t\tcomputeUndoRedo,\n\t\t\t\t\t\tbeginSelectionState,\n\t\t\t\t\t\tundoRedoGroup,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase CellEditType.Move:\n\t\t\t\t\tthis._moveCellToIdx(\n\t\t\t\t\t\tedit.index,\n\t\t\t\t\t\tedit.length,\n\t\t\t\t\t\tedit.newIdx,\n\t\t\t\t\t\tsynchronous,\n\t\t\t\t\t\tcomputeUndoRedo,\n\t\t\t\t\t\tbeginSelectionState,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tundoRedoGroup,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _mergeCellEdits(rawEdits: TransformedEdit[]): TransformedEdit[] {\n\t\tconst mergedEdits: TransformedEdit[] = [];\n\n\t\trawEdits.forEach((edit) => {\n\t\t\tif (mergedEdits.length) {\n\t\t\t\tconst last = mergedEdits[mergedEdits.length - 1];\n\n\t\t\t\tif (\n\t\t\t\t\tlast.edit.editType === CellEditType.Output &&\n\t\t\t\t\tlast.edit.append &&\n\t\t\t\t\tedit.edit.editType === CellEditType.Output &&\n\t\t\t\t\tedit.edit.append &&\n\t\t\t\t\tlast.cellIndex === edit.cellIndex\n\t\t\t\t) {\n\t\t\t\t\tlast.edit.outputs = [\n\t\t\t\t\t\t...last.edit.outputs,\n\t\t\t\t\t\t...edit.edit.outputs,\n\t\t\t\t\t];\n\t\t\t\t} else if (\n\t\t\t\t\tlast.edit.editType === CellEditType.Output &&\n\t\t\t\t\t!last.edit.append && // last cell is not append\n\t\t\t\t\tlast.edit.outputs.length === 0 && // last cell is clear outputs\n\t\t\t\t\tedit.edit.editType === CellEditType.Output &&\n\t\t\t\t\tedit.edit.append &&\n\t\t\t\t\tlast.cellIndex === edit.cellIndex\n\t\t\t\t) {\n\t\t\t\t\tlast.edit.append = false;\n\t\t\t\t\tlast.edit.outputs = edit.edit.outputs;\n\t\t\t\t} else {\n\t\t\t\t\tmergedEdits.push(edit);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmergedEdits.push(edit);\n\t\t\t}\n\t\t});\n\n\t\treturn mergedEdits;\n\t}\n\n\tprivate _getDefaultCollapseState(\n\t\tcellDto: ICellDto2,\n\t): NotebookCellCollapseState | undefined {\n\t\tconst defaultConfig =\n\t\t\tcellDto.cellKind === CellKind.Code\n\t\t\t\t? this._defaultCollapseConfig?.codeCell\n\t\t\t\t: this._defaultCollapseConfig?.markupCell;\n\t\treturn cellDto.collapseState ?? defaultConfig ?? undefined;\n\t}\n\n\tprivate _replaceCells(\n\t\tindex: number,\n\t\tcount: number,\n\t\tcellDtos: ICellDto2[],\n\t\tsynchronous: boolean,\n\t\tcomputeUndoRedo: boolean,\n\t\tbeginSelectionState: ISelectionState | undefined,\n\t\tundoRedoGroup: UndoRedoGroup | undefined,\n\t): void {\n\t\tif (count === 0 && cellDtos.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldViewCells = this._cells.slice(0);\n\t\tconst oldSet = new Set();\n\t\toldViewCells.forEach((cell) => {\n\t\t\toldSet.add(cell.handle);\n\t\t});\n\n\t\t// prepare remove\n\t\tfor (\n\t\t\tlet i = index;\n\t\t\ti < Math.min(index + count, this._cells.length);\n\t\t\ti++\n\t\t) {\n\t\t\tconst cell = this._cells[i];\n\t\t\tthis._cellListeners.get(cell.handle)?.dispose();\n\t\t\tthis._cellListeners.delete(cell.handle);\n\t\t}\n\n\t\t// prepare add\n\t\tconst cells = cellDtos.map((cellDto) => {\n\t\t\tconst cellHandle = this._cellhandlePool++;\n\t\t\tconst cellUri = CellUri.generate(this.uri, cellHandle);\n\t\t\tconst collapseState = this._getDefaultCollapseState(cellDto);\n\t\t\tconst cell = new NotebookCellTextModel(\n\t\t\t\tcellUri,\n\t\t\t\tcellHandle,\n\t\t\t\tcellDto.source,\n\t\t\t\tcellDto.language,\n\t\t\t\tcellDto.mime,\n\t\t\t\tcellDto.cellKind,\n\t\t\t\tcellDto.outputs || [],\n\t\t\t\tcellDto.metadata,\n\t\t\t\tcellDto.internalMetadata,\n\t\t\t\tcollapseState,\n\t\t\t\tthis.transientOptions,\n\t\t\t\tthis._languageService,\n\t\t\t\tthis._languageDetectionService,\n\t\t\t);\n\t\t\tconst textModel = this._modelService.getModel(cellUri);\n\t\t\tif (textModel && textModel instanceof TextModel) {\n\t\t\t\tcell.textModel = textModel;\n\t\t\t\tcell.language = cellDto.language;\n\t\t\t\tcell.textModel.setValue(cellDto.source);\n\t\t\t\tcell.resetTextBuffer(cell.textModel.getTextBuffer());\n\t\t\t}\n\t\t\tconst dirtyStateListener = cell.onDidChangeContent((e) => {\n\t\t\t\tthis._bindCellContentHandler(cell, e);\n\t\t\t});\n\t\t\tthis._cellListeners.set(cell.handle, dirtyStateListener);\n\t\t\tthis._register(cell);\n\t\t\treturn cell;\n\t\t});\n\n\t\t// compute change\n\t\tconst cellsCopy = this._cells.slice(0);\n\t\tcellsCopy.splice(index, count, ...cells);\n\t\tconst diffs = diff(this._cells, cellsCopy, (cell) => {\n\t\t\treturn oldSet.has(cell.handle);\n\t\t}).map((diff) => {\n\t\t\treturn [diff.start, diff.deleteCount, diff.toInsert] as [\n\t\t\t\tnumber,\n\t\t\t\tnumber,\n\t\t\t\tNotebookCellTextModel[],\n\t\t\t];\n\t\t});\n\t\tthis._onWillAddRemoveCells.fire({\n\t\t\trawEvent: {\n\t\t\t\tkind: NotebookCellsChangeType.ModelChange,\n\t\t\t\tchanges: diffs,\n\t\t\t},\n\t\t});\n\n\t\t// make change\n\t\tthis._cells = cellsCopy;\n\n\t\tconst undoDiff = diffs.map((diff) => {\n\t\t\tconst deletedCells = oldViewCells.slice(diff[0], diff[0] + diff[1]);\n\n\t\t\treturn [diff[0], deletedCells, diff[2]] as [\n\t\t\t\tnumber,\n\t\t\t\tNotebookCellTextModel[],\n\t\t\t\tNotebookCellTextModel[],\n\t\t\t];\n\t\t});\n\n\t\tif (computeUndoRedo) {\n\t\t\tthis._operationManager.pushEditOperation(\n\t\t\t\tnew SpliceCellsEdit(\n\t\t\t\t\tthis.uri,\n\t\t\t\t\tundoDiff,\n\t\t\t\t\t{\n\t\t\t\t\t\tinsertCell: (index, cell, endSelections) => {\n\t\t\t\t\t\t\tthis._insertNewCell(\n\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t[cell],\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\tendSelections,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdeleteCell: (index, endSelections) => {\n\t\t\t\t\t\t\tthis._removeCell(index, 1, true, endSelections);\n\t\t\t\t\t\t},\n\t\t\t\t\t\treplaceCell: (index, count, cells, endSelections) => {\n\t\t\t\t\t\t\tthis._replaceNewCells(\n\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\tcount,\n\t\t\t\t\t\t\t\tcells,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\tendSelections,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tundefined,\n\t\t\t\t\tundefined,\n\t\t\t\t),\n\t\t\t\tbeginSelectionState,\n\t\t\t\tundefined,\n\t\t\t\tthis._alternativeVersionId,\n\t\t\t\tundoRedoGroup,\n\t\t\t);\n\t\t}\n\n\t\t// should be deferred\n\t\tthis._pauseableEmitter.fire({\n\t\t\trawEvents: [\n\t\t\t\t{\n\t\t\t\t\tkind: NotebookCellsChangeType.ModelChange,\n\t\t\t\t\tchanges: diffs,\n\t\t\t\t\ttransient: false,\n\t\t\t\t},\n\t\t\t],\n\t\t\tversionId: this.versionId,\n\t\t\tsynchronous: synchronous,\n\t\t\tendSelectionState: undefined,\n\t\t});\n\t}\n\n\tprivate _increaseVersionId(transient: boolean): void {\n\t\tthis._versionId = this._versionId + 1;\n\t\tif (!transient) {\n\t\t\tthis._notebookSpecificAlternativeId = this._versionId;\n\t\t}\n\t\tthis._alternativeVersionId = this._generateAlternativeId();\n\t}\n\n\tprivate _overwriteAlternativeVersionId(\n\t\tnewAlternativeVersionId: string,\n\t): void {\n\t\tthis._alternativeVersionId = newAlternativeVersionId;\n\t\tthis._notebookSpecificAlternativeId = Number(\n\t\t\tnewAlternativeVersionId.substring(\n\t\t\t\t0,\n\t\t\t\tnewAlternativeVersionId.indexOf(\"_\"),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate _updateNotebookCellMetadata(\n\t\tmetadata: NotebookDocumentMetadata,\n\t\tcomputeUndoRedo: boolean,\n\t\tbeginSelectionState: ISelectionState | undefined,\n\t\tundoRedoGroup: UndoRedoGroup | undefined,\n\t) {\n\t\tconst oldMetadata = this.metadata;\n\t\tconst triggerDirtyChange = this._isDocumentMetadataChanged(\n\t\t\tthis.metadata,\n\t\t\tmetadata,\n\t\t);\n\n\t\tif (triggerDirtyChange) {\n\t\t\tif (computeUndoRedo) {\n\t\t\t\tconst that = this;\n\t\t\t\tthis._operationManager.pushEditOperation(\n\t\t\t\t\tnew (class implements IResourceUndoRedoElement {\n\t\t\t\t\t\treadonly type: UndoRedoElementType.Resource =\n\t\t\t\t\t\t\tUndoRedoElementType.Resource;\n\t\t\t\t\t\tget resource() {\n\t\t\t\t\t\t\treturn that.uri;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treadonly label = \"Update Cell Metadata\";\n\t\t\t\t\t\treadonly code = \"undoredo.textBufferEdit\";\n\t\t\t\t\t\tundo() {\n\t\t\t\t\t\t\tthat._updateNotebookCellMetadata(\n\t\t\t\t\t\t\t\toldMetadata,\n\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\tbeginSelectionState,\n\t\t\t\t\t\t\t\tundoRedoGroup,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tredo() {\n\t\t\t\t\t\t\tthat._updateNotebookCellMetadata(\n\t\t\t\t\t\t\t\tmetadata,\n\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\tbeginSelectionState,\n\t\t\t\t\t\t\t\tundoRedoGroup,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t})(),\n\t\t\t\t\tbeginSelectionState,\n\t\t\t\t\tundefined,\n\t\t\t\t\tthis._alternativeVersionId,\n\t\t\t\t\tundoRedoGroup,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthis.metadata = metadata;\n\t\tthis._pauseableEmitter.fire({\n\t\t\trawEvents: [\n\t\t\t\t{\n\t\t\t\t\tkind: NotebookCellsChangeType.ChangeDocumentMetadata,\n\t\t\t\t\tmetadata: this.metadata,\n\t\t\t\t\ttransient: !triggerDirtyChange,\n\t\t\t\t},\n\t\t\t],\n\t\t\tversionId: this.versionId,\n\t\t\tsynchronous: true,\n\t\t\tendSelectionState: undefined,\n\t\t});\n\t}\n\n\tprivate _insertNewCell(\n\t\tindex: number,\n\t\tcells: NotebookCellTextModel[],\n\t\tsynchronous: boolean,\n\t\tendSelections: ISelectionState | undefined,\n\t): void {\n\t\tfor (let i = 0; i < cells.length; i++) {\n\t\t\tconst dirtyStateListener = cells[i].onDidChangeContent((e) => {\n\t\t\t\tthis._bindCellContentHandler(cells[i], e);\n\t\t\t});\n\n\t\t\tthis._cellListeners.set(cells[i].handle, dirtyStateListener);\n\t\t}\n\n\t\tconst changes: NotebookCellTextModelSplice<ICell>[] = [\n\t\t\t[index, 0, cells],\n\t\t];\n\t\tthis._onWillAddRemoveCells.fire({\n\t\t\trawEvent: { kind: NotebookCellsChangeType.ModelChange, changes },\n\t\t});\n\t\tthis._cells.splice(index, 0, ...cells);\n\t\tthis._pauseableEmitter.fire({\n\t\t\trawEvents: [\n\t\t\t\t{\n\t\t\t\t\tkind: NotebookCellsChangeType.ModelChange,\n\t\t\t\t\tchanges,\n\t\t\t\t\ttransient: false,\n\t\t\t\t},\n\t\t\t],\n\t\t\tversionId: this.versionId,\n\t\t\tsynchronous: synchronous,\n\t\t\tendSelectionState: endSelections,\n\t\t});\n\n\t\treturn;\n\t}\n\n\tprivate _removeCell(\n\t\tindex: number,\n\t\tcount: number,\n\t\tsynchronous: boolean,\n\t\tendSelections: ISelectionState | undefined,\n\t) {\n\t\tfor (let i = index; i < index + count; i++) {\n\t\t\tconst cell = this._cells[i];\n\t\t\tthis._cellListeners.get(cell.handle)?.dispose();\n\t\t\tthis._cellListeners.delete(cell.handle);\n\t\t}\n\t\tconst changes: NotebookCellTextModelSplice<ICell>[] = [\n\t\t\t[index, count, []],\n\t\t];\n\t\tthis._onWillAddRemoveCells.fire({\n\t\t\trawEvent: { kind: NotebookCellsChangeType.ModelChange, changes },\n\t\t});\n\t\tthis._cells.splice(index, count);\n\t\tthis._pauseableEmitter.fire({\n\t\t\trawEvents: [\n\t\t\t\t{\n\t\t\t\t\tkind: NotebookCellsChangeType.ModelChange,\n\t\t\t\t\tchanges,\n\t\t\t\t\ttransient: false,\n\t\t\t\t},\n\t\t\t],\n\t\t\tversionId: this.versionId,\n\t\t\tsynchronous: synchronous,\n\t\t\tendSelectionState: endSelections,\n\t\t});\n\t}\n\n\tprivate _replaceNewCells(\n\t\tindex: number,\n\t\tcount: number,\n\t\tcells: NotebookCellTextModel[],\n\t\tsynchronous: boolean,\n\t\tendSelections: ISelectionState | undefined,\n\t) {\n\t\tfor (let i = index; i < index + count; i++) {\n\t\t\tconst cell = this._cells[i];\n\t\t\tthis._cellListeners.get(cell.handle)?.dispose();\n\t\t\tthis._cellListeners.delete(cell.handle);\n\t\t}\n\n\t\tfor (let i = 0; i < cells.length; i++) {\n\t\t\tconst dirtyStateListener = cells[i].onDidChangeContent((e) => {\n\t\t\t\tthis._bindCellContentHandler(cells[i], e);\n\t\t\t});\n\n\t\t\tthis._cellListeners.set(cells[i].handle, dirtyStateListener);\n\t\t}\n\n\t\tconst changes: NotebookCellTextModelSplice<ICell>[] = [\n\t\t\t[index, count, cells],\n\t\t];\n\t\tthis._onWillAddRemoveCells.fire({\n\t\t\trawEvent: { kind: NotebookCellsChangeType.ModelChange, changes },\n\t\t});\n\t\tthis._cells.splice(index, count, ...cells);\n\t\tthis._pauseableEmitter.fire({\n\t\t\trawEvents: [\n\t\t\t\t{\n\t\t\t\t\tkind: NotebookCellsChangeType.ModelChange,\n\t\t\t\t\tchanges,\n\t\t\t\t\ttransient: false,\n\t\t\t\t},\n\t\t\t],\n\t\t\tversionId: this.versionId,\n\t\t\tsynchronous: synchronous,\n\t\t\tendSelectionState: endSelections,\n\t\t});\n\t}\n\n\tprivate _isDocumentMetadataChanged(\n\t\ta: NotebookDocumentMetadata,\n\t\tb: NotebookDocumentMetadata,\n\t) {\n\t\tconst keys = new Set([\n\t\t\t...Object.keys(a || {}),\n\t\t\t...Object.keys(b || {}),\n\t\t]);\n\t\tfor (const key of keys) {\n\t\t\tif (key === \"custom\") {\n\t\t\t\tif (\n\t\t\t\t\t!this._customMetadataEqual(a[key], b[key]) &&\n\t\t\t\t\t!this.transientOptions.transientDocumentMetadata[\n\t\t\t\t\t\tkey as keyof NotebookDocumentMetadata\n\t\t\t\t\t]\n\t\t\t\t) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\ta[key as keyof NotebookDocumentMetadata] !==\n\t\t\t\t\tb[key as keyof NotebookDocumentMetadata] &&\n\t\t\t\t!this.transientOptions.transientDocumentMetadata[\n\t\t\t\t\tkey as keyof NotebookDocumentMetadata\n\t\t\t\t]\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate _isCellMetadataChanged(\n\t\ta: NotebookCellMetadata,\n\t\tb: NotebookCellMetadata,\n\t) {\n\t\tconst keys = new Set([\n\t\t\t...Object.keys(a || {}),\n\t\t\t...Object.keys(b || {}),\n\t\t]);\n\t\tfor (const key of keys) {\n\t\t\tif (\n\t\t\t\ta[key as keyof NotebookCellMetadata] !==\n\t\t\t\t\tb[key as keyof NotebookCellMetadata] &&\n\t\t\t\t!this.transientOptions.transientCellMetadata[\n\t\t\t\t\tkey as keyof NotebookCellMetadata\n\t\t\t\t]\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate _customMetadataEqual(a: any, b: any) {\n\t\tif (!a && !b) {\n\t\t\t// both of them are nullish or undefined\n\t\t\treturn true;\n\t\t}\n\n\t\tif (!a || !b) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst aProps = Object.getOwnPropertyNames(a);\n\t\tconst bProps = Object.getOwnPropertyNames(b);\n\n\t\tif (aProps.length !== bProps.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (let i = 0; i < aProps.length; i++) {\n\t\t\tconst propName = aProps[i];\n\t\t\tif (a[propName] !== b[propName]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate _changeCellMetadataPartial(\n\t\tcell: NotebookCellTextModel,\n\t\tmetadata: NullablePartialNotebookCellMetadata,\n\t\tcomputeUndoRedo: boolean,\n\t\tbeginSelectionState: ISelectionState | undefined,\n\t\tundoRedoGroup: UndoRedoGroup | undefined,\n\t) {\n\t\tconst newMetadata: NotebookCellMetadata = {\n\t\t\t...cell.metadata,\n\t\t};\n\t\tlet k: keyof NullablePartialNotebookCellMetadata;\n\t\tfor (k in metadata) {\n\t\t\tconst value = metadata[k] ?? undefined;\n\t\t\tnewMetadata[k] = value as any;\n\t\t}\n\n\t\treturn this._changeCellMetadata(\n\t\t\tcell,\n\t\t\tnewMetadata,\n\t\t\tcomputeUndoRedo,\n\t\t\tbeginSelectionState,\n\t\t\tundoRedoGroup,\n\t\t);\n\t}\n\n\tprivate _changeCellMetadata(\n\t\tcell: NotebookCellTextModel,\n\t\tmetadata: NotebookCellMetadata,\n\t\tcomputeUndoRedo: boolean,\n\t\tbeginSelectionState: ISelectionState | undefined,\n\t\tundoRedoGroup: UndoRedoGroup | undefined,\n\t) {\n\t\tconst triggerDirtyChange = this._isCellMetadataChanged(\n\t\t\tcell.metadata,\n\t\t\tmetadata,\n\t\t);\n\n\t\tif (triggerDirtyChange) {\n\t\t\tif (computeUndoRedo) {\n\t\t\t\tconst index = this._cells.indexOf(cell);\n\t\t\t\tthis._operationManager.pushEditOperation(\n\t\t\t\t\tnew CellMetadataEdit(\n\t\t\t\t\t\tthis.uri,\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\tObject.freeze(cell.metadata),\n\t\t\t\t\t\tObject.freeze(metadata),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tupdateCellMetadata: (index, newMetadata) => {\n\t\t\t\t\t\t\t\tconst cell = this._cells[index];\n\t\t\t\t\t\t\t\tif (!cell) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis._changeCellMetadata(\n\t\t\t\t\t\t\t\t\tcell,\n\t\t\t\t\t\t\t\t\tnewMetadata,\n\t\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t\tbeginSelectionState,\n\t\t\t\t\t\t\t\t\tundoRedoGroup,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t\tbeginSelectionState,\n\t\t\t\t\tundefined,\n\t\t\t\t\tthis._alternativeVersionId,\n\t\t\t\t\tundoRedoGroup,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// should be deferred\n\t\tcell.metadata = metadata;\n\t\tthis._pauseableEmitter.fire({\n\t\t\trawEvents: [\n\t\t\t\t{\n\t\t\t\t\tkind: NotebookCellsChangeType.ChangeCellMetadata,\n\t\t\t\t\tindex: this._cells.indexOf(cell),\n\t\t\t\t\tmetadata: cell.metadata,\n\t\t\t\t\ttransient: !triggerDirtyChange,\n\t\t\t\t},\n\t\t\t],\n\t\t\tversionId: this.versionId,\n\t\t\tsynchronous: true,\n\t\t\tendSelectionState: undefined,\n\t\t});\n\t}\n\n\tprivate _changeCellInternalMetadataPartial(\n\t\tcell: NotebookCellTextModel,\n\t\tinternalMetadata: NullablePartialNotebookCellInternalMetadata,\n\t) {\n\t\tconst newInternalMetadata: NotebookCellInternalMetadata = {\n\t\t\t...cell.internalMetadata,\n\t\t};\n\t\tlet k: keyof NotebookCellInternalMetadata;\n\t\tfor (k in internalMetadata) {\n\t\t\tconst value = internalMetadata[k] ?? undefined;\n\t\t\tnewInternalMetadata[k] = value as any;\n\t\t}\n\n\t\tcell.internalMetadata = newInternalMetadata;\n\t\tthis._pauseableEmitter.fire({\n\t\t\trawEvents: [\n\t\t\t\t{\n\t\t\t\t\tkind: NotebookCellsChangeType.ChangeCellInternalMetadata,\n\t\t\t\t\tindex: this._cells.indexOf(cell),\n\t\t\t\t\tinternalMetadata: cell.internalMetadata,\n\t\t\t\t\ttransient: true,\n\t\t\t\t},\n\t\t\t],\n\t\t\tversionId: this.versionId,\n\t\t\tsynchronous: true,\n\t\t\tendSelectionState: undefined,\n\t\t});\n\t}\n\n\tprivate _changeCellLanguage(\n\t\tcell: NotebookCellTextModel,\n\t\tlanguageId: string,\n\t\tcomputeUndoRedo: boolean,\n\t\tbeginSelectionState: ISelectionState | undefined,\n\t\tundoRedoGroup: UndoRedoGroup | undefined,\n\t) {\n\t\tif (cell.language === languageId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldLanguage = cell.language;\n\t\tcell.language = languageId;\n\n\t\tif (computeUndoRedo) {\n\t\t\tconst that = this;\n\t\t\tthis._operationManager.pushEditOperation(\n\t\t\t\tnew (class implements IResourceUndoRedoElement {\n\t\t\t\t\treadonly type: UndoRedoElementType.Resource =\n\t\t\t\t\t\tUndoRedoElementType.Resource;\n\t\t\t\t\tget resource() {\n\t\t\t\t\t\treturn that.uri;\n\t\t\t\t\t}\n\t\t\t\t\treadonly label = \"Update Cell Language\";\n\t\t\t\t\treadonly code = \"undoredo.textBufferEdit\";\n\t\t\t\t\tundo() {\n\t\t\t\t\t\tthat._changeCellLanguage(\n\t\t\t\t\t\t\tcell,\n\t\t\t\t\t\t\toldLanguage,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\tbeginSelectionState,\n\t\t\t\t\t\t\tundoRedoGroup,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tredo() {\n\t\t\t\t\t\tthat._changeCellLanguage(\n\t\t\t\t\t\t\tcell,\n\t\t\t\t\t\t\tlanguageId,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\tbeginSelectionState,\n\t\t\t\t\t\t\tundoRedoGroup,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t})(),\n\t\t\t\tbeginSelectionState,\n\t\t\t\tundefined,\n\t\t\t\tthis._alternativeVersionId,\n\t\t\t\tundoRedoGroup,\n\t\t\t);\n\t\t}\n\n\t\tthis._pauseableEmitter.fire({\n\t\t\trawEvents: [\n\t\t\t\t{\n\t\t\t\t\tkind: NotebookCellsChangeType.ChangeCellLanguage,\n\t\t\t\t\tindex: this._cells.indexOf(cell),\n\t\t\t\t\tlanguage: languageId,\n\t\t\t\t\ttransient: false,\n\t\t\t\t},\n\t\t\t],\n\t\t\tversionId: this.versionId,\n\t\t\tsynchronous: true,\n\t\t\tendSelectionState: undefined,\n\t\t});\n\t}\n\n\tprivate _spliceNotebookCellOutputs2(\n\t\tcell: NotebookCellTextModel,\n\t\toutputs: IOutputDto[],\n\t\tcomputeUndoRedo: boolean,\n\t): void {\n\t\tif (outputs.length === 0 && cell.outputs.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (outputs.length <= 1) {\n\t\t\tthis._spliceNotebookCellOutputs(\n\t\t\t\tcell,\n\t\t\t\t{\n\t\t\t\t\tstart: 0,\n\t\t\t\t\tdeleteCount: cell.outputs.length,\n\t\t\t\t\tnewOutputs: outputs.map(\n\t\t\t\t\t\t(op) => new NotebookCellOutputTextModel(op),\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tfalse,\n\t\t\t\tcomputeUndoRedo,\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst diff = new LcsDiff(\n\t\t\tnew OutputSequence(cell.outputs),\n\t\t\tnew OutputSequence(outputs),\n\t\t);\n\t\tconst diffResult = diff.ComputeDiff(false);\n\t\tconst splices: NotebookCellOutputsSplice[] = diffResult.changes.map(\n\t\t\t(change) => ({\n\t\t\t\tstart: change.originalStart,\n\t\t\t\tdeleteCount: change.originalLength,\n\t\t\t\t// create cell output text model only when it's inserted into the notebook document\n\t\t\t\tnewOutputs: outputs\n\t\t\t\t\t.slice(\n\t\t\t\t\t\tchange.modifiedStart,\n\t\t\t\t\t\tchange.modifiedStart + change.modifiedLength,\n\t\t\t\t\t)\n\t\t\t\t\t.map((op) => new NotebookCellOutputTextModel(op)),\n\t\t\t}),\n\t\t);\n\t\tsplices.reverse().forEach((splice) => {\n\t\t\tthis._spliceNotebookCellOutputs(\n\t\t\t\tcell,\n\t\t\t\tsplice,\n\t\t\t\tfalse,\n\t\t\t\tcomputeUndoRedo,\n\t\t\t);\n\t\t});\n\t}\n\n\tprivate _spliceNotebookCellOutputs(\n\t\tcell: NotebookCellTextModel,\n\t\tsplice: NotebookCellOutputsSplice,\n\t\tappend: boolean,\n\t\tcomputeUndoRedo: boolean,\n\t): void {\n\t\tcell.spliceNotebookCellOutputs(splice);\n\t\tthis._pauseableEmitter.fire({\n\t\t\trawEvents: [\n\t\t\t\t{\n\t\t\t\t\tkind: NotebookCellsChangeType.Output,\n\t\t\t\t\tindex: this._cells.indexOf(cell),\n\t\t\t\t\toutputs: cell.outputs.map((output) => output.asDto()) ?? [],\n\t\t\t\t\tappend,\n\t\t\t\t\ttransient: this.transientOptions.transientOutputs,\n\t\t\t\t},\n\t\t\t],\n\t\t\tversionId: this.versionId,\n\t\t\tsynchronous: true,\n\t\t\tendSelectionState: undefined,\n\t\t});\n\t}\n\n\tprivate _appendNotebookCellOutputItems(\n\t\tcell: NotebookCellTextModel,\n\t\toutputId: string,\n\t\titems: IOutputItemDto[],\n\t) {\n\t\tif (cell.changeOutputItems(outputId, true, items)) {\n\t\t\tthis._pauseableEmitter.fire({\n\t\t\t\trawEvents: [\n\t\t\t\t\t{\n\t\t\t\t\t\tkind: NotebookCellsChangeType.OutputItem,\n\t\t\t\t\t\tindex: this._cells.indexOf(cell),\n\t\t\t\t\t\toutputId: outputId,\n\t\t\t\t\t\toutputItems: items,\n\t\t\t\t\t\tappend: true,\n\t\t\t\t\t\ttransient: this.transientOptions.transientOutputs,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tversionId: this.versionId,\n\t\t\t\tsynchronous: true,\n\t\t\t\tendSelectionState: undefined,\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _replaceNotebookCellOutputItems(\n\t\tcell: NotebookCellTextModel,\n\t\toutputId: string,\n\t\titems: IOutputItemDto[],\n\t) {\n\t\tif (cell.changeOutputItems(outputId, false, items)) {\n\t\t\tthis._pauseableEmitter.fire({\n\t\t\t\trawEvents: [\n\t\t\t\t\t{\n\t\t\t\t\t\tkind: NotebookCellsChangeType.OutputItem,\n\t\t\t\t\t\tindex: this._cells.indexOf(cell),\n\t\t\t\t\t\toutputId: outputId,\n\t\t\t\t\t\toutputItems: items,\n\t\t\t\t\t\tappend: false,\n\t\t\t\t\t\ttransient: this.transientOptions.transientOutputs,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tversionId: this.versionId,\n\t\t\t\tsynchronous: true,\n\t\t\t\tendSelectionState: undefined,\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _moveCellToIdx(\n\t\tindex: number,\n\t\tlength: number,\n\t\tnewIdx: number,\n\t\tsynchronous: boolean,\n\t\tpushedToUndoStack: boolean,\n\t\tbeforeSelections: ISelectionState | undefined,\n\t\tendSelections: ISelectionState | undefined,\n\t\tundoRedoGroup: UndoRedoGroup | undefined,\n\t): boolean {\n\t\tif (pushedToUndoStack) {\n\t\t\tthis._operationManager.pushEditOperation(\n\t\t\t\tnew MoveCellEdit(\n\t\t\t\t\tthis.uri,\n\t\t\t\t\tindex,\n\t\t\t\t\tlength,\n\t\t\t\t\tnewIdx,\n\t\t\t\t\t{\n\t\t\t\t\t\tmoveCell: (\n\t\t\t\t\t\t\tfromIndex: number,\n\t\t\t\t\t\t\tlength: number,\n\t\t\t\t\t\t\ttoIndex: number,\n\t\t\t\t\t\t\tbeforeSelections: ISelectionState | undefined,\n\t\t\t\t\t\t\tendSelections: ISelectionState | undefined,\n\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\tthis._moveCellToIdx(\n\t\t\t\t\t\t\t\tfromIndex,\n\t\t\t\t\t\t\t\tlength,\n\t\t\t\t\t\t\t\ttoIndex,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\tbeforeSelections,\n\t\t\t\t\t\t\t\tendSelections,\n\t\t\t\t\t\t\t\tundoRedoGroup,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tbeforeSelections,\n\t\t\t\t\tendSelections,\n\t\t\t\t),\n\t\t\t\tbeforeSelections,\n\t\t\t\tendSelections,\n\t\t\t\tthis._alternativeVersionId,\n\t\t\t\tundoRedoGroup,\n\t\t\t);\n\t\t}\n\n\t\tthis._assertIndex(index);\n\t\tthis._assertIndex(newIdx);\n\n\t\tconst cells = this._cells.splice(index, length);\n\t\tthis._cells.splice(newIdx, 0, ...cells);\n\t\tthis._pauseableEmitter.fire({\n\t\t\trawEvents: [\n\t\t\t\t{\n\t\t\t\t\tkind: NotebookCellsChangeType.Move,\n\t\t\t\t\tindex,\n\t\t\t\t\tlength,\n\t\t\t\t\tnewIdx,\n\t\t\t\t\tcells,\n\t\t\t\t\ttransient: false,\n\t\t\t\t},\n\t\t\t],\n\t\t\tversionId: this.versionId,\n\t\t\tsynchronous: synchronous,\n\t\t\tendSelectionState: endSelections,\n\t\t});\n\n\t\treturn true;\n\t}\n\n\tprivate _assertIndex(index: number) {\n\t\tif (this._indexIsInvalid(index)) {\n\t\t\tthrow new Error(`model index out of range ${index}`);\n\t\t}\n\t}\n\n\tprivate _indexIsInvalid(index: number): boolean {\n\t\treturn index < 0 || index >= this._cells.length;\n\t}\n\n\t//#region Find\n\tfindNextMatch(\n\t\tsearchString: string,\n\t\tsearchStart: { cellIndex: number; position: IPosition },\n\t\tisRegex: boolean,\n\t\tmatchCase: boolean,\n\t\twordSeparators: string | null,\n\t): { cell: NotebookCellTextModel; match: FindMatch } | null {\n\t\t// check if search cell index is valid\n\t\tthis._assertIndex(searchStart.cellIndex);\n\t\tconst searchParams = new SearchParams(\n\t\t\tsearchString,\n\t\t\tisRegex,\n\t\t\tmatchCase,\n\t\t\twordSeparators,\n\t\t);\n\t\tconst searchData = searchParams.parseSearchRequest();\n\n\t\tif (!searchData) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet cellIndex = searchStart.cellIndex;\n\t\tlet searchStartPosition = searchStart.position;\n\n\t\twhile (cellIndex < this._cells.length) {\n\t\t\tconst cell = this._cells[cellIndex];\n\t\t\tconst searchRange = new Range(\n\t\t\t\tsearchStartPosition.lineNumber,\n\t\t\t\tsearchStartPosition.column,\n\t\t\t\tcell.textBuffer.getLineCount(),\n\t\t\t\tcell.textBuffer.getLineMaxColumn(\n\t\t\t\t\tcell.textBuffer.getLineCount(),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tconst result = cell.textBuffer.findMatchesLineByLine(\n\t\t\t\tsearchRange,\n\t\t\t\tsearchData,\n\t\t\t\tfalse,\n\t\t\t\t1,\n\t\t\t);\n\t\t\tif (result.length > 0) {\n\t\t\t\treturn { cell, match: result[0] };\n\t\t\t}\n\n\t\t\t// Move to the next cell\n\t\t\tcellIndex++;\n\t\t\tsearchStartPosition = { lineNumber: 1, column: 1 }; // Reset position to start of the next cell\n\t\t}\n\n\t\treturn null;\n\t}\n\t//#endregion\n}\n\nclass OutputSequence implements ISequence {\n\tconstructor(readonly outputs: IOutputDto[]) {}\n\n\tgetElements(): Int32Array | number[] | string[] {\n\t\treturn this.outputs.map((output) => {\n\t\t\treturn hash(\n\t\t\t\toutput.outputs.map((output) => ({\n\t\t\t\t\tmime: output.mime,\n\t\t\t\t\tdata: output.data,\n\t\t\t\t})),\n\t\t\t);\n\t\t});\n\t}\n}\n"],
  "mappings": "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",
  "names": ["diff", "index", "count", "cells", "cell", "length", "beforeSelections", "endSelections", "output"]
}
