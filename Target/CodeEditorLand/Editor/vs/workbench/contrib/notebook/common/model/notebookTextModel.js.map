{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/common/model/notebookTextModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event, PauseableEmitter } from '../../../../../base/common/event.js';\nimport { Disposable, dispose, IDisposable } from '../../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { NotebookCellTextModel } from './notebookCellTextModel.js';\nimport { INotebookTextModel, NotebookCellOutputsSplice, NotebookDocumentMetadata, NotebookCellMetadata, ICellEditOperation, CellEditType, CellUri, diff, NotebookCellsChangeType, ICellDto2, TransientOptions, NotebookTextModelChangedEvent, IOutputDto, ICellOutput, IOutputItemDto, ISelectionState, NullablePartialNotebookCellMetadata, NotebookCellInternalMetadata, NullablePartialNotebookCellInternalMetadata, NotebookTextModelWillAddRemoveEvent, NotebookCellTextModelSplice, ICell, NotebookCellCollapseState, NotebookCellDefaultCollapseConfig, CellKind } from '../notebookCommon.js';\nimport { IUndoRedoService, UndoRedoElementType, IUndoRedoElement, IResourceUndoRedoElement, UndoRedoGroup, IWorkspaceUndoRedoElement } from '../../../../../platform/undoRedo/common/undoRedo.js';\nimport { MoveCellEdit, SpliceCellsEdit, CellMetadataEdit } from './cellEdit.js';\nimport { ISequence, LcsDiff } from '../../../../../base/common/diff/diff.js';\nimport { hash } from '../../../../../base/common/hash.js';\nimport { NotebookCellOutputTextModel } from './notebookCellOutputTextModel.js';\nimport { IModelService } from '../../../../../editor/common/services/model.js';\nimport { Schemas } from '../../../../../base/common/network.js';\nimport { isEqual } from '../../../../../base/common/resources.js';\nimport { ILanguageService } from '../../../../../editor/common/languages/language.js';\nimport { FindMatch, ITextModel } from '../../../../../editor/common/model.js';\nimport { TextModel } from '../../../../../editor/common/model/textModel.js';\nimport { isDefined } from '../../../../../base/common/types.js';\nimport { ILanguageDetectionService } from '../../../../services/languageDetection/common/languageDetectionWorkerService.js';\nimport { IPosition } from '../../../../../editor/common/core/position.js';\nimport { Range } from '../../../../../editor/common/core/range.js';\nimport { SearchParams } from '../../../../../editor/common/model/textModelSearch.js';\n\nclass StackOperation implements IWorkspaceUndoRedoElement {\n\ttype: UndoRedoElementType.Workspace;\n\n\tpublic get code() {\n\t\treturn this._operations.length === 1 ? this._operations[0].code : 'undoredo.notebooks.stackOperation';\n\t}\n\n\tprivate _operations: IUndoRedoElement[] = [];\n\tprivate _beginSelectionState: ISelectionState | undefined = undefined;\n\tprivate _resultSelectionState: ISelectionState | undefined = undefined;\n\tprivate _beginAlternativeVersionId: string;\n\tprivate _resultAlternativeVersionId: string;\n\tpublic get label() {\n\t\treturn this._operations.length === 1 ? this._operations[0].label : 'edit';\n\t}\n\n\tconstructor(\n\t\treadonly textModel: NotebookTextModel,\n\t\treadonly undoRedoGroup: UndoRedoGroup | undefined,\n\t\tprivate _pauseableEmitter: PauseableEmitter<NotebookTextModelChangedEvent>,\n\t\tprivate _postUndoRedo: (alternativeVersionId: string) => void,\n\t\tselectionState: ISelectionState | undefined,\n\t\tbeginAlternativeVersionId: string\n\t) {\n\t\tthis.type = UndoRedoElementType.Workspace;\n\t\tthis._beginSelectionState = selectionState;\n\t\tthis._beginAlternativeVersionId = beginAlternativeVersionId;\n\t\tthis._resultAlternativeVersionId = beginAlternativeVersionId;\n\t}\n\tget resources(): readonly URI[] {\n\t\treturn [this.textModel.uri];\n\t}\n\n\tget isEmpty(): boolean {\n\t\treturn this._operations.length === 0;\n\t}\n\n\tpushEndState(alternativeVersionId: string, selectionState: ISelectionState | undefined) {\n\t\t// https://github.com/microsoft/vscode/issues/207523\n\t\tthis._resultAlternativeVersionId = alternativeVersionId;\n\t\tthis._resultSelectionState = selectionState || this._resultSelectionState;\n\t}\n\n\tpushEditOperation(element: IUndoRedoElement, beginSelectionState: ISelectionState | undefined, resultSelectionState: ISelectionState | undefined, alternativeVersionId: string) {\n\t\tif (this._operations.length === 0) {\n\t\t\tthis._beginSelectionState = this._beginSelectionState ?? beginSelectionState;\n\t\t}\n\t\tthis._operations.push(element);\n\t\tthis._resultSelectionState = resultSelectionState;\n\t\tthis._resultAlternativeVersionId = alternativeVersionId;\n\t}\n\n\tasync undo(): Promise<void> {\n\t\tthis._pauseableEmitter.pause();\n\t\ttry {\n\t\t\tfor (let i = this._operations.length - 1; i >= 0; i--) {\n\t\t\t\tawait this._operations[i].undo();\n\t\t\t}\n\t\t\tthis._postUndoRedo(this._beginAlternativeVersionId);\n\t\t\tthis._pauseableEmitter.fire({\n\t\t\t\trawEvents: [],\n\t\t\t\tsynchronous: undefined,\n\t\t\t\tversionId: this.textModel.versionId,\n\t\t\t\tendSelectionState: this._beginSelectionState\n\t\t\t});\n\t\t} finally {\n\t\t\tthis._pauseableEmitter.resume();\n\t\t}\n\t}\n\n\tasync redo(): Promise<void> {\n\t\tthis._pauseableEmitter.pause();\n\t\ttry {\n\t\t\tfor (let i = 0; i < this._operations.length; i++) {\n\t\t\t\tawait this._operations[i].redo();\n\t\t\t}\n\t\t\tthis._postUndoRedo(this._resultAlternativeVersionId);\n\t\t\tthis._pauseableEmitter.fire({\n\t\t\t\trawEvents: [],\n\t\t\t\tsynchronous: undefined,\n\t\t\t\tversionId: this.textModel.versionId,\n\t\t\t\tendSelectionState: this._resultSelectionState\n\t\t\t});\n\t\t} finally {\n\t\t\tthis._pauseableEmitter.resume();\n\t\t}\n\n\t}\n}\n\nclass NotebookOperationManager {\n\tprivate _pendingStackOperation: StackOperation | null = null;\n\tconstructor(\n\t\tprivate readonly _textModel: NotebookTextModel,\n\t\tprivate _undoService: IUndoRedoService,\n\t\tprivate _pauseableEmitter: PauseableEmitter<NotebookTextModelChangedEvent>,\n\t\tprivate _postUndoRedo: (alternativeVersionId: string) => void\n\t) {\n\t}\n\n\tisUndoStackEmpty(): boolean {\n\t\treturn this._pendingStackOperation === null || this._pendingStackOperation.isEmpty;\n\t}\n\n\tpushStackElement(alternativeVersionId: string, selectionState: ISelectionState | undefined) {\n\t\tif (this._pendingStackOperation && !this._pendingStackOperation.isEmpty) {\n\t\t\tthis._pendingStackOperation.pushEndState(alternativeVersionId, selectionState);\n\t\t\tthis._undoService.pushElement(this._pendingStackOperation, this._pendingStackOperation.undoRedoGroup);\n\t\t}\n\t\tthis._pendingStackOperation = null;\n\t}\n\tprivate _getOrCreateEditStackElement(beginSelectionState: ISelectionState | undefined, undoRedoGroup: UndoRedoGroup | undefined, alternativeVersionId: string) {\n\t\treturn this._pendingStackOperation ??= new StackOperation(this._textModel, undoRedoGroup, this._pauseableEmitter, this._postUndoRedo, beginSelectionState, alternativeVersionId || '');\n\t}\n\n\tpushEditOperation(element: IUndoRedoElement, beginSelectionState: ISelectionState | undefined, resultSelectionState: ISelectionState | undefined, alternativeVersionId: string, undoRedoGroup: UndoRedoGroup | undefined) {\n\t\tconst pendingStackOperation = this._getOrCreateEditStackElement(beginSelectionState, undoRedoGroup, alternativeVersionId);\n\t\tpendingStackOperation.pushEditOperation(element, beginSelectionState, resultSelectionState, alternativeVersionId);\n\t}\n}\n\ntype TransformedEdit = {\n\tedit: ICellEditOperation;\n\tcellIndex: number;\n\tend: number | undefined;\n\toriginalIndex: number;\n};\n\nclass NotebookEventEmitter extends PauseableEmitter<NotebookTextModelChangedEvent> {\n\tget isEmpty() {\n\t\treturn this._eventQueue.isEmpty();\n\t}\n\n\tisDirtyEvent() {\n\t\tfor (const e of this._eventQueue) {\n\t\t\tfor (let i = 0; i < e.rawEvents.length; i++) {\n\t\t\t\tif (!e.rawEvents[i].transient) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport class NotebookTextModel extends Disposable implements INotebookTextModel {\n\n\tprivate _isDisposed = false;\n\tprivate readonly _onWillDispose: Emitter<void> = this._register(new Emitter<void>());\n\tprivate readonly _onWillAddRemoveCells = this._register(new Emitter<NotebookTextModelWillAddRemoveEvent>());\n\tprivate readonly _onDidChangeContent = this._register(new Emitter<NotebookTextModelChangedEvent>());\n\treadonly onWillDispose: Event<void> = this._onWillDispose.event;\n\treadonly onWillAddRemoveCells = this._onWillAddRemoveCells.event;\n\treadonly onDidChangeContent = this._onDidChangeContent.event;\n\tprivate _cellhandlePool: number = 0;\n\tprivate readonly _cellListeners: Map<number, IDisposable> = new Map();\n\tprivate _cells: NotebookCellTextModel[] = [];\n\tprivate _defaultCollapseConfig: NotebookCellDefaultCollapseConfig | undefined;\n\n\tmetadata: NotebookDocumentMetadata = {};\n\ttransientOptions: TransientOptions = { transientCellMetadata: {}, transientDocumentMetadata: {}, transientOutputs: false, cellContentMetadata: {} };\n\tprivate _versionId = 0;\n\n\t/**\n\t * This alternative id is only for non-cell-content changes.\n\t */\n\tprivate _notebookSpecificAlternativeId = 0;\n\n\t/**\n\t * Unlike, versionId, this can go down (via undo) or go to previous values (via redo)\n\t */\n\tprivate _alternativeVersionId: string = '1';\n\tprivate _operationManager: NotebookOperationManager;\n\tprivate _pauseableEmitter: NotebookEventEmitter;\n\n\tget length() {\n\t\treturn this._cells.length;\n\t}\n\n\tget cells(): readonly NotebookCellTextModel[] {\n\t\treturn this._cells;\n\t}\n\n\tget versionId() {\n\t\treturn this._versionId;\n\t}\n\n\tget alternativeVersionId(): string {\n\t\treturn this._alternativeVersionId;\n\t}\n\n\tget notebookType() {\n\t\treturn this.viewType;\n\t}\n\n\tconstructor(\n\t\treadonly viewType: string,\n\t\treadonly uri: URI,\n\t\tcells: ICellDto2[],\n\t\tmetadata: NotebookDocumentMetadata,\n\t\toptions: TransientOptions,\n\t\t@IUndoRedoService private readonly _undoService: IUndoRedoService,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@ILanguageDetectionService private readonly _languageDetectionService: ILanguageDetectionService\n\t) {\n\t\tsuper();\n\t\tthis.transientOptions = options;\n\t\tthis.metadata = metadata;\n\t\tthis._initialize(cells);\n\n\t\tconst maybeUpdateCellTextModel = (textModel: ITextModel) => {\n\t\t\tif (textModel.uri.scheme === Schemas.vscodeNotebookCell && textModel instanceof TextModel) {\n\t\t\t\tconst cellUri = CellUri.parse(textModel.uri);\n\t\t\t\tif (cellUri && isEqual(cellUri.notebook, this.uri)) {\n\t\t\t\t\tconst cellIdx = this._getCellIndexByHandle(cellUri.handle);\n\t\t\t\t\tif (cellIdx >= 0) {\n\t\t\t\t\t\tconst cell = this.cells[cellIdx];\n\t\t\t\t\t\tif (cell) {\n\t\t\t\t\t\t\tcell.textModel = textModel;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthis._register(_modelService.onModelAdded(e => maybeUpdateCellTextModel(e)));\n\n\t\tthis._pauseableEmitter = new NotebookEventEmitter({\n\t\t\tmerge: (events: NotebookTextModelChangedEvent[]) => {\n\t\t\t\tconst first = events[0];\n\n\t\t\t\tconst rawEvents = first.rawEvents;\n\t\t\t\tlet versionId = first.versionId;\n\t\t\t\tlet endSelectionState = first.endSelectionState;\n\t\t\t\tlet synchronous = first.synchronous;\n\n\t\t\t\tfor (let i = 1; i < events.length; i++) {\n\t\t\t\t\trawEvents.push(...events[i].rawEvents);\n\t\t\t\t\tversionId = events[i].versionId;\n\t\t\t\t\tendSelectionState = events[i].endSelectionState !== undefined ? events[i].endSelectionState : endSelectionState;\n\t\t\t\t\tsynchronous = events[i].synchronous !== undefined ? events[i].synchronous : synchronous;\n\t\t\t\t}\n\n\t\t\t\treturn { rawEvents, versionId, endSelectionState, synchronous };\n\t\t\t}\n\t\t});\n\n\t\tthis._register(this._pauseableEmitter.event(e => {\n\t\t\tif (e.rawEvents.length) {\n\t\t\t\tthis._onDidChangeContent.fire(e);\n\t\t\t}\n\t\t}));\n\n\t\tthis._operationManager = new NotebookOperationManager(\n\t\t\tthis,\n\t\t\tthis._undoService,\n\t\t\tthis._pauseableEmitter,\n\t\t\t(alternativeVersionId: string) => {\n\t\t\t\tthis._increaseVersionId(true);\n\t\t\t\tthis._overwriteAlternativeVersionId(alternativeVersionId);\n\t\t\t}\n\t\t);\n\t}\n\n\tsetCellCollapseDefault(collapseConfig: NotebookCellDefaultCollapseConfig | undefined) {\n\t\tthis._defaultCollapseConfig = collapseConfig;\n\t}\n\n\t_initialize(cells: ICellDto2[], triggerDirty?: boolean) {\n\t\tthis._cells = [];\n\t\tthis._versionId = 0;\n\t\tthis._notebookSpecificAlternativeId = 0;\n\n\t\tconst mainCells = cells.map(cell => {\n\t\t\tconst cellHandle = this._cellhandlePool++;\n\t\t\tconst cellUri = CellUri.generate(this.uri, cellHandle);\n\t\t\tconst collapseState = this._getDefaultCollapseState(cell);\n\t\t\treturn new NotebookCellTextModel(cellUri, cellHandle, cell.source, cell.language, cell.mime, cell.cellKind, cell.outputs, cell.metadata, cell.internalMetadata, collapseState, this.transientOptions, this._languageService, this._languageDetectionService);\n\t\t});\n\n\t\tfor (let i = 0; i < mainCells.length; i++) {\n\t\t\tconst dirtyStateListener = mainCells[i].onDidChangeContent((e) => {\n\t\t\t\tthis._bindCellContentHandler(mainCells[i], e);\n\t\t\t});\n\n\t\t\tthis._cellListeners.set(mainCells[i].handle, dirtyStateListener);\n\t\t\tthis._register(mainCells[i]);\n\t\t}\n\n\t\tthis._cells.splice(0, 0, ...mainCells);\n\t\tthis._alternativeVersionId = this._generateAlternativeId();\n\n\t\tif (triggerDirty) {\n\t\t\tthis._pauseableEmitter.fire({\n\t\t\t\trawEvents: [{ kind: NotebookCellsChangeType.Unknown, transient: false }],\n\t\t\t\tversionId: this.versionId,\n\t\t\t\tsynchronous: true,\n\t\t\t\tendSelectionState: undefined\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _bindCellContentHandler(cell: NotebookCellTextModel, e: 'content' | 'language' | 'mime') {\n\t\tthis._increaseVersionId(e === 'content');\n\t\tswitch (e) {\n\t\t\tcase 'content':\n\t\t\t\tthis._pauseableEmitter.fire({\n\t\t\t\t\trawEvents: [{ kind: NotebookCellsChangeType.ChangeCellContent, index: this._getCellIndexByHandle(cell.handle), transient: false }],\n\t\t\t\t\tversionId: this.versionId,\n\t\t\t\t\tsynchronous: true,\n\t\t\t\t\tendSelectionState: undefined\n\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase 'language':\n\t\t\t\tthis._pauseableEmitter.fire({\n\t\t\t\t\trawEvents: [{ kind: NotebookCellsChangeType.ChangeCellLanguage, index: this._getCellIndexByHandle(cell.handle), language: cell.language, transient: false }],\n\t\t\t\t\tversionId: this.versionId,\n\t\t\t\t\tsynchronous: true,\n\t\t\t\t\tendSelectionState: undefined\n\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase 'mime':\n\t\t\t\tthis._pauseableEmitter.fire({\n\t\t\t\t\trawEvents: [{ kind: NotebookCellsChangeType.ChangeCellMime, index: this._getCellIndexByHandle(cell.handle), mime: cell.mime, transient: false }],\n\t\t\t\t\tversionId: this.versionId,\n\t\t\t\t\tsynchronous: true,\n\t\t\t\t\tendSelectionState: undefined\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate _generateAlternativeId() {\n\t\treturn `${this._notebookSpecificAlternativeId}_` + this.cells.map(cell => cell.handle + ',' + cell.alternativeId).join(';');\n\t}\n\n\toverride dispose() {\n\t\tif (this._isDisposed) {\n\t\t\t// NotebookEditorModel can be disposed twice, don't fire onWillDispose again\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isDisposed = true;\n\t\tthis._onWillDispose.fire();\n\t\tthis._undoService.removeElements(this.uri);\n\n\t\tdispose(this._cellListeners.values());\n\t\tthis._cellListeners.clear();\n\n\t\tdispose(this._cells);\n\t\tthis._cells = [];\n\t\tsuper.dispose();\n\t}\n\n\tpushStackElement() {\n\t\t// https://github.com/microsoft/vscode/issues/207523\n\t}\n\n\tprivate _getCellIndexByHandle(handle: number) {\n\t\treturn this.cells.findIndex(c => c.handle === handle);\n\t}\n\n\tprivate _getCellIndexWithOutputIdHandleFromEdits(outputId: string, rawEdits: ICellEditOperation[]) {\n\t\tconst edit = rawEdits.find(e => 'outputs' in e && e.outputs.some(o => o.outputId === outputId));\n\t\tif (edit) {\n\t\t\tif ('index' in edit) {\n\t\t\t\treturn edit.index;\n\t\t\t} else if ('handle' in edit) {\n\t\t\t\tconst cellIndex = this._getCellIndexByHandle(edit.handle);\n\t\t\t\tthis._assertIndex(cellIndex);\n\t\t\t\treturn cellIndex;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\tprivate _getCellIndexWithOutputIdHandle(outputId: string) {\n\t\treturn this.cells.findIndex(c => !!c.outputs.find(o => o.outputId === outputId));\n\t}\n\n\treset(cells: ICellDto2[], metadata: NotebookDocumentMetadata, transientOptions: TransientOptions): void {\n\t\tthis.transientOptions = transientOptions;\n\t\tconst edits = NotebookTextModel.computeEdits(this, cells);\n\n\t\tthis.applyEdits(\n\t\t\t[\n\t\t\t\t...edits,\n\t\t\t\t{ editType: CellEditType.DocumentMetadata, metadata }\n\t\t\t],\n\t\t\ttrue,\n\t\t\tundefined, () => undefined,\n\t\t\tundefined,\n\t\t\tfalse\n\t\t);\n\t}\n\n\tstatic computeEdits(model: NotebookTextModel, cells: ICellDto2[]) {\n\t\tconst edits: ICellEditOperation[] = [];\n\n\t\tconst commonPrefix = this._commonPrefix(model.cells, model.cells.length, 0, cells, cells.length, 0);\n\n\t\tif (commonPrefix > 0) {\n\t\t\tfor (let i = 0; i < commonPrefix; i++) {\n\t\t\t\tedits.push(\n\t\t\t\t\t{\n\t\t\t\t\t\teditType: CellEditType.Metadata,\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tmetadata: cells[i].metadata ?? {}\n\t\t\t\t\t},\n\t\t\t\t\t...this._computeOutputEdit(i, model.cells[i].outputs, cells[i].outputs)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (model.cells.length === cells.length && commonPrefix === model.cells.length) {\n\t\t\treturn edits;\n\t\t}\n\n\t\tconst commonSuffix = this._commonSuffix(model.cells, model.cells.length - commonPrefix, commonPrefix, cells, cells.length - commonPrefix, commonPrefix);\n\n\t\tif (commonSuffix > 0) {\n\t\t\tedits.push({ editType: CellEditType.Replace, index: commonPrefix, count: model.cells.length - commonPrefix - commonSuffix, cells: cells.slice(commonPrefix, cells.length - commonSuffix) });\n\t\t} else if (commonPrefix > 0) {\n\t\t\tedits.push({ editType: CellEditType.Replace, index: commonPrefix, count: model.cells.length - commonPrefix, cells: cells.slice(commonPrefix) });\n\t\t} else {\n\t\t\tedits.push({ editType: CellEditType.Replace, index: 0, count: model.cells.length, cells });\n\t\t}\n\n\t\tif (commonSuffix > 0) {\n\t\t\t// has same suffix\n\t\t\tfor (let i = commonSuffix; i > 0; i--) {\n\t\t\t\tedits.push(\n\t\t\t\t\t{\n\t\t\t\t\t\teditType: CellEditType.Metadata,\n\t\t\t\t\t\tindex: model.cells.length - i,\n\t\t\t\t\t\tmetadata: cells[cells.length - i].metadata ?? {}\n\t\t\t\t\t},\n\t\t\t\t\t...this._computeOutputEdit(model.cells.length - i, model.cells[model.cells.length - i].outputs, cells[cells.length - i].outputs)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn edits;\n\t}\n\n\tprivate static _computeOutputEdit(index: number, a: ICellOutput[], b: IOutputDto[]): ICellEditOperation[] {\n\t\tif (a.length !== b.length) {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\teditType: CellEditType.Output,\n\t\t\t\t\tindex: index,\n\t\t\t\t\toutputs: b,\n\t\t\t\t\tappend: false\n\t\t\t\t}\n\t\t\t];\n\t\t}\n\n\t\tif (a.length === 0) {\n\t\t\t// no output\n\t\t\treturn [];\n\t\t}\n\n\t\t// same length\n\t\treturn b.map((output, i) => {\n\t\t\treturn {\n\t\t\t\teditType: CellEditType.OutputItems,\n\t\t\t\toutputId: a[i].outputId,\n\t\t\t\titems: output.outputs,\n\t\t\t\tappend: false\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate static _commonPrefix(a: readonly NotebookCellTextModel[], aLen: number, aDelta: number, b: ICellDto2[], bLen: number, bDelta: number): number {\n\t\tconst maxResult = Math.min(aLen, bLen);\n\t\tlet result = 0;\n\t\tfor (let i = 0; i < maxResult && a[aDelta + i].fastEqual(b[bDelta + i]); i++) {\n\t\t\tresult++;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate static _commonSuffix(a: readonly NotebookCellTextModel[], aLen: number, aDelta: number, b: ICellDto2[], bLen: number, bDelta: number): number {\n\t\tconst maxResult = Math.min(aLen, bLen);\n\t\tlet result = 0;\n\t\tfor (let i = 0; i < maxResult && a[aDelta + aLen - i - 1].fastEqual(b[bDelta + bLen - i - 1]); i++) {\n\t\t\tresult++;\n\t\t}\n\t\treturn result;\n\t}\n\n\tapplyEdits(rawEdits: ICellEditOperation[], synchronous: boolean, beginSelectionState: ISelectionState | undefined, endSelectionsComputer: () => ISelectionState | undefined, undoRedoGroup: UndoRedoGroup | undefined, computeUndoRedo: boolean): boolean {\n\t\tthis._pauseableEmitter.pause();\n\t\tthis._operationManager.pushStackElement(this._alternativeVersionId, undefined);\n\n\t\ttry {\n\t\t\tthis._doApplyEdits(rawEdits, synchronous, computeUndoRedo, beginSelectionState, undoRedoGroup);\n\t\t\treturn true;\n\t\t} finally {\n\t\t\tif (!this._pauseableEmitter.isEmpty) {\n\t\t\t\t// Update selection and versionId after applying edits.\n\t\t\t\tconst endSelections = endSelectionsComputer();\n\t\t\t\tthis._increaseVersionId(this._operationManager.isUndoStackEmpty() && !this._pauseableEmitter.isDirtyEvent());\n\n\t\t\t\t// Finalize undo element\n\t\t\t\tthis._operationManager.pushStackElement(this._alternativeVersionId, endSelections);\n\n\t\t\t\t// Broadcast changes\n\t\t\t\tthis._pauseableEmitter.fire({ rawEvents: [], versionId: this.versionId, synchronous: synchronous, endSelectionState: endSelections });\n\t\t\t}\n\t\t\tthis._pauseableEmitter.resume();\n\t\t}\n\t}\n\n\tprivate _doApplyEdits(rawEdits: ICellEditOperation[], synchronous: boolean, computeUndoRedo: boolean, beginSelectionState: ISelectionState | undefined, undoRedoGroup: UndoRedoGroup | undefined): void {\n\t\tconst editsWithDetails = rawEdits.map((edit, index) => {\n\t\t\tlet cellIndex: number = -1;\n\t\t\tif ('index' in edit) {\n\t\t\t\tcellIndex = edit.index;\n\t\t\t} else if ('handle' in edit) {\n\t\t\t\tcellIndex = this._getCellIndexByHandle(edit.handle);\n\t\t\t\tthis._assertIndex(cellIndex);\n\t\t\t} else if ('outputId' in edit) {\n\t\t\t\tcellIndex = this._getCellIndexWithOutputIdHandle(edit.outputId);\n\t\t\t\tif (this._indexIsInvalid(cellIndex)) {\n\t\t\t\t\t// The referenced output may have been created in this batch of edits\n\t\t\t\t\tcellIndex = this._getCellIndexWithOutputIdHandleFromEdits(edit.outputId, rawEdits.slice(0, index));\n\t\t\t\t}\n\n\t\t\t\tif (this._indexIsInvalid(cellIndex)) {\n\t\t\t\t\t// It's possible for an edit to refer to an output which was just cleared, ignore it without throwing\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else if (edit.editType !== CellEditType.DocumentMetadata) {\n\t\t\t\tthrow new Error('Invalid cell edit');\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tedit,\n\t\t\t\tcellIndex,\n\t\t\t\tend:\n\t\t\t\t\t(edit.editType === CellEditType.DocumentMetadata)\n\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t: (edit.editType === CellEditType.Replace ? edit.index + edit.count : cellIndex),\n\t\t\t\toriginalIndex: index\n\t\t\t};\n\t\t}).filter(isDefined);\n\n\t\t// compress all edits which have no side effects on cell index\n\t\tconst edits = this._mergeCellEdits(editsWithDetails)\n\t\t\t.sort((a, b) => {\n\t\t\t\tif (a.end === undefined) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\n\t\t\t\tif (b.end === undefined) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\n\t\t\t\treturn b.end - a.end || b.originalIndex - a.originalIndex;\n\t\t\t}).reduce((prev, curr) => {\n\t\t\t\tif (!prev.length) {\n\t\t\t\t\t// empty\n\t\t\t\t\tprev.push([curr]);\n\t\t\t\t} else {\n\t\t\t\t\tconst last = prev[prev.length - 1];\n\t\t\t\t\tconst index = last[0].cellIndex;\n\n\t\t\t\t\tif (curr.cellIndex === index) {\n\t\t\t\t\t\tlast.push(curr);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprev.push([curr]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn prev;\n\t\t\t}, [] as TransformedEdit[][]).map(editsOnSameIndex => {\n\t\t\t\tconst replaceEdits: TransformedEdit[] = [];\n\t\t\t\tconst otherEdits: TransformedEdit[] = [];\n\n\t\t\t\teditsOnSameIndex.forEach(edit => {\n\t\t\t\t\tif (edit.edit.editType === CellEditType.Replace) {\n\t\t\t\t\t\treplaceEdits.push(edit);\n\t\t\t\t\t} else {\n\t\t\t\t\t\totherEdits.push(edit);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn [...otherEdits.reverse(), ...replaceEdits];\n\t\t\t});\n\n\t\tconst flattenEdits = edits.flat();\n\n\t\tfor (const { edit, cellIndex } of flattenEdits) {\n\t\t\tswitch (edit.editType) {\n\t\t\t\tcase CellEditType.Replace:\n\t\t\t\t\tthis._replaceCells(edit.index, edit.count, edit.cells, synchronous, computeUndoRedo, beginSelectionState, undoRedoGroup);\n\t\t\t\t\tbreak;\n\t\t\t\tcase CellEditType.Output: {\n\t\t\t\t\tthis._assertIndex(cellIndex);\n\t\t\t\t\tconst cell = this._cells[cellIndex];\n\t\t\t\t\tif (edit.append) {\n\t\t\t\t\t\tthis._spliceNotebookCellOutputs(cell, { start: cell.outputs.length, deleteCount: 0, newOutputs: edit.outputs.map(op => new NotebookCellOutputTextModel(op)) }, true, computeUndoRedo);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._spliceNotebookCellOutputs2(cell, edit.outputs, computeUndoRedo);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase CellEditType.OutputItems:\n\t\t\t\t\t{\n\t\t\t\t\t\tthis._assertIndex(cellIndex);\n\t\t\t\t\t\tconst cell = this._cells[cellIndex];\n\t\t\t\t\t\tif (edit.append) {\n\t\t\t\t\t\t\tthis._appendNotebookCellOutputItems(cell, edit.outputId, edit.items);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._replaceNotebookCellOutputItems(cell, edit.outputId, edit.items);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CellEditType.Metadata:\n\t\t\t\t\tthis._assertIndex(edit.index);\n\t\t\t\t\tthis._changeCellMetadata(this._cells[edit.index], edit.metadata, computeUndoRedo, beginSelectionState, undoRedoGroup);\n\t\t\t\t\tbreak;\n\t\t\t\tcase CellEditType.PartialMetadata:\n\t\t\t\t\tthis._assertIndex(cellIndex);\n\t\t\t\t\tthis._changeCellMetadataPartial(this._cells[cellIndex], edit.metadata, computeUndoRedo, beginSelectionState, undoRedoGroup);\n\t\t\t\t\tbreak;\n\t\t\t\tcase CellEditType.PartialInternalMetadata:\n\t\t\t\t\tthis._assertIndex(cellIndex);\n\t\t\t\t\tthis._changeCellInternalMetadataPartial(this._cells[cellIndex], edit.internalMetadata);\n\t\t\t\t\tbreak;\n\t\t\t\tcase CellEditType.CellLanguage:\n\t\t\t\t\tthis._assertIndex(edit.index);\n\t\t\t\t\tthis._changeCellLanguage(this._cells[edit.index], edit.language, computeUndoRedo, beginSelectionState, undoRedoGroup);\n\t\t\t\t\tbreak;\n\t\t\t\tcase CellEditType.DocumentMetadata:\n\t\t\t\t\tthis._updateNotebookCellMetadata(edit.metadata, computeUndoRedo, beginSelectionState, undoRedoGroup);\n\t\t\t\t\tbreak;\n\t\t\t\tcase CellEditType.Move:\n\t\t\t\t\tthis._moveCellToIdx(edit.index, edit.length, edit.newIdx, synchronous, computeUndoRedo, beginSelectionState, undefined, undoRedoGroup);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _mergeCellEdits(rawEdits: TransformedEdit[]): TransformedEdit[] {\n\t\tconst mergedEdits: TransformedEdit[] = [];\n\n\t\trawEdits.forEach(edit => {\n\t\t\tif (mergedEdits.length) {\n\t\t\t\tconst last = mergedEdits[mergedEdits.length - 1];\n\n\t\t\t\tif (last.edit.editType === CellEditType.Output\n\t\t\t\t\t&& last.edit.append\n\t\t\t\t\t&& edit.edit.editType === CellEditType.Output\n\t\t\t\t\t&& edit.edit.append\n\t\t\t\t\t&& last.cellIndex === edit.cellIndex\n\t\t\t\t) {\n\t\t\t\t\tlast.edit.outputs = [...last.edit.outputs, ...edit.edit.outputs];\n\t\t\t\t} else if (last.edit.editType === CellEditType.Output\n\t\t\t\t\t&& !last.edit.append // last cell is not append\n\t\t\t\t\t&& last.edit.outputs.length === 0 // last cell is clear outputs\n\t\t\t\t\t&& edit.edit.editType === CellEditType.Output\n\t\t\t\t\t&& edit.edit.append\n\t\t\t\t\t&& last.cellIndex === edit.cellIndex\n\t\t\t\t) {\n\t\t\t\t\tlast.edit.append = false;\n\t\t\t\t\tlast.edit.outputs = edit.edit.outputs;\n\t\t\t\t} else {\n\t\t\t\t\tmergedEdits.push(edit);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmergedEdits.push(edit);\n\t\t\t}\n\t\t});\n\n\t\treturn mergedEdits;\n\t}\n\n\tprivate _getDefaultCollapseState(cellDto: ICellDto2): NotebookCellCollapseState | undefined {\n\t\tconst defaultConfig = cellDto.cellKind === CellKind.Code ? this._defaultCollapseConfig?.codeCell : this._defaultCollapseConfig?.markupCell;\n\t\treturn cellDto.collapseState ?? (defaultConfig ?? undefined);\n\t}\n\n\tprivate _replaceCells(index: number, count: number, cellDtos: ICellDto2[], synchronous: boolean, computeUndoRedo: boolean, beginSelectionState: ISelectionState | undefined, undoRedoGroup: UndoRedoGroup | undefined): void {\n\n\t\tif (count === 0 && cellDtos.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldViewCells = this._cells.slice(0);\n\t\tconst oldSet = new Set();\n\t\toldViewCells.forEach(cell => {\n\t\t\toldSet.add(cell.handle);\n\t\t});\n\n\t\t// prepare remove\n\t\tfor (let i = index; i < Math.min(index + count, this._cells.length); i++) {\n\t\t\tconst cell = this._cells[i];\n\t\t\tthis._cellListeners.get(cell.handle)?.dispose();\n\t\t\tthis._cellListeners.delete(cell.handle);\n\t\t}\n\n\t\t// prepare add\n\t\tconst cells = cellDtos.map(cellDto => {\n\t\t\tconst cellHandle = this._cellhandlePool++;\n\t\t\tconst cellUri = CellUri.generate(this.uri, cellHandle);\n\t\t\tconst collapseState = this._getDefaultCollapseState(cellDto);\n\t\t\tconst cell = new NotebookCellTextModel(\n\t\t\t\tcellUri, cellHandle,\n\t\t\t\tcellDto.source, cellDto.language, cellDto.mime, cellDto.cellKind, cellDto.outputs || [], cellDto.metadata, cellDto.internalMetadata, collapseState, this.transientOptions,\n\t\t\t\tthis._languageService,\n\t\t\t\tthis._languageDetectionService\n\t\t\t);\n\t\t\tconst textModel = this._modelService.getModel(cellUri);\n\t\t\tif (textModel && textModel instanceof TextModel) {\n\t\t\t\tcell.textModel = textModel;\n\t\t\t\tcell.language = cellDto.language;\n\t\t\t\tcell.textModel.setValue(cellDto.source);\n\t\t\t\tcell.resetTextBuffer(cell.textModel.getTextBuffer());\n\t\t\t}\n\t\t\tconst dirtyStateListener = cell.onDidChangeContent((e) => {\n\t\t\t\tthis._bindCellContentHandler(cell, e);\n\t\t\t});\n\t\t\tthis._cellListeners.set(cell.handle, dirtyStateListener);\n\t\t\tthis._register(cell);\n\t\t\treturn cell;\n\t\t});\n\n\t\t// compute change\n\t\tconst cellsCopy = this._cells.slice(0);\n\t\tcellsCopy.splice(index, count, ...cells);\n\t\tconst diffs = diff(this._cells, cellsCopy, cell => {\n\t\t\treturn oldSet.has(cell.handle);\n\t\t}).map(diff => {\n\t\t\treturn [diff.start, diff.deleteCount, diff.toInsert] as [number, number, NotebookCellTextModel[]];\n\t\t});\n\t\tthis._onWillAddRemoveCells.fire({ rawEvent: { kind: NotebookCellsChangeType.ModelChange, changes: diffs } });\n\n\t\t// make change\n\t\tthis._cells = cellsCopy;\n\n\t\tconst undoDiff = diffs.map(diff => {\n\t\t\tconst deletedCells = oldViewCells.slice(diff[0], diff[0] + diff[1]);\n\n\t\t\treturn [diff[0], deletedCells, diff[2]] as [number, NotebookCellTextModel[], NotebookCellTextModel[]];\n\t\t});\n\n\t\tif (computeUndoRedo) {\n\t\t\tthis._operationManager.pushEditOperation(new SpliceCellsEdit(this.uri, undoDiff, {\n\t\t\t\tinsertCell: (index, cell, endSelections) => { this._insertNewCell(index, [cell], true, endSelections); },\n\t\t\t\tdeleteCell: (index, endSelections) => { this._removeCell(index, 1, true, endSelections); },\n\t\t\t\treplaceCell: (index, count, cells, endSelections) => { this._replaceNewCells(index, count, cells, true, endSelections); },\n\t\t\t}, undefined, undefined), beginSelectionState, undefined, this._alternativeVersionId, undoRedoGroup);\n\t\t}\n\n\t\t// should be deferred\n\t\tthis._pauseableEmitter.fire({\n\t\t\trawEvents: [{ kind: NotebookCellsChangeType.ModelChange, changes: diffs, transient: false }],\n\t\t\tversionId: this.versionId,\n\t\t\tsynchronous: synchronous,\n\t\t\tendSelectionState: undefined\n\t\t});\n\t}\n\n\tprivate _increaseVersionId(transient: boolean): void {\n\t\tthis._versionId = this._versionId + 1;\n\t\tif (!transient) {\n\t\t\tthis._notebookSpecificAlternativeId = this._versionId;\n\t\t}\n\t\tthis._alternativeVersionId = this._generateAlternativeId();\n\t}\n\n\tprivate _overwriteAlternativeVersionId(newAlternativeVersionId: string): void {\n\t\tthis._alternativeVersionId = newAlternativeVersionId;\n\t\tthis._notebookSpecificAlternativeId = Number(newAlternativeVersionId.substring(0, newAlternativeVersionId.indexOf('_')));\n\t}\n\n\tprivate _updateNotebookCellMetadata(metadata: NotebookDocumentMetadata, computeUndoRedo: boolean, beginSelectionState: ISelectionState | undefined, undoRedoGroup: UndoRedoGroup | undefined) {\n\t\tconst oldMetadata = this.metadata;\n\t\tconst triggerDirtyChange = this._isDocumentMetadataChanged(this.metadata, metadata);\n\n\t\tif (triggerDirtyChange) {\n\t\t\tif (computeUndoRedo) {\n\t\t\t\tconst that = this;\n\t\t\t\tthis._operationManager.pushEditOperation(new class implements IResourceUndoRedoElement {\n\t\t\t\t\treadonly type: UndoRedoElementType.Resource = UndoRedoElementType.Resource;\n\t\t\t\t\tget resource() {\n\t\t\t\t\t\treturn that.uri;\n\t\t\t\t\t}\n\t\t\t\t\treadonly label = 'Update Cell Metadata';\n\t\t\t\t\treadonly code = 'undoredo.textBufferEdit';\n\t\t\t\t\tundo() {\n\t\t\t\t\t\tthat._updateNotebookCellMetadata(oldMetadata, false, beginSelectionState, undoRedoGroup);\n\t\t\t\t\t}\n\t\t\t\t\tredo() {\n\t\t\t\t\t\tthat._updateNotebookCellMetadata(metadata, false, beginSelectionState, undoRedoGroup);\n\t\t\t\t\t}\n\t\t\t\t}(), beginSelectionState, undefined, this._alternativeVersionId, undoRedoGroup);\n\t\t\t}\n\t\t}\n\n\t\tthis.metadata = metadata;\n\t\tthis._pauseableEmitter.fire({\n\t\t\trawEvents: [{ kind: NotebookCellsChangeType.ChangeDocumentMetadata, metadata: this.metadata, transient: !triggerDirtyChange }],\n\t\t\tversionId: this.versionId,\n\t\t\tsynchronous: true,\n\t\t\tendSelectionState: undefined\n\t\t});\n\t}\n\n\tprivate _insertNewCell(index: number, cells: NotebookCellTextModel[], synchronous: boolean, endSelections: ISelectionState | undefined): void {\n\t\tfor (let i = 0; i < cells.length; i++) {\n\t\t\tconst dirtyStateListener = cells[i].onDidChangeContent((e) => {\n\t\t\t\tthis._bindCellContentHandler(cells[i], e);\n\t\t\t});\n\n\t\t\tthis._cellListeners.set(cells[i].handle, dirtyStateListener);\n\t\t}\n\n\t\tconst changes: NotebookCellTextModelSplice<ICell>[] = [[index, 0, cells]];\n\t\tthis._onWillAddRemoveCells.fire({ rawEvent: { kind: NotebookCellsChangeType.ModelChange, changes } });\n\t\tthis._cells.splice(index, 0, ...cells);\n\t\tthis._pauseableEmitter.fire({\n\t\t\trawEvents: [{ kind: NotebookCellsChangeType.ModelChange, changes, transient: false }],\n\t\t\tversionId: this.versionId,\n\t\t\tsynchronous: synchronous,\n\t\t\tendSelectionState: endSelections\n\t\t});\n\n\t\treturn;\n\t}\n\n\tprivate _removeCell(index: number, count: number, synchronous: boolean, endSelections: ISelectionState | undefined) {\n\t\tfor (let i = index; i < index + count; i++) {\n\t\t\tconst cell = this._cells[i];\n\t\t\tthis._cellListeners.get(cell.handle)?.dispose();\n\t\t\tthis._cellListeners.delete(cell.handle);\n\t\t}\n\t\tconst changes: NotebookCellTextModelSplice<ICell>[] = [[index, count, []]];\n\t\tthis._onWillAddRemoveCells.fire({ rawEvent: { kind: NotebookCellsChangeType.ModelChange, changes } });\n\t\tthis._cells.splice(index, count);\n\t\tthis._pauseableEmitter.fire({\n\t\t\trawEvents: [{ kind: NotebookCellsChangeType.ModelChange, changes, transient: false }],\n\t\t\tversionId: this.versionId,\n\t\t\tsynchronous: synchronous,\n\t\t\tendSelectionState: endSelections\n\t\t});\n\t}\n\n\tprivate _replaceNewCells(index: number, count: number, cells: NotebookCellTextModel[], synchronous: boolean, endSelections: ISelectionState | undefined) {\n\t\tfor (let i = index; i < index + count; i++) {\n\t\t\tconst cell = this._cells[i];\n\t\t\tthis._cellListeners.get(cell.handle)?.dispose();\n\t\t\tthis._cellListeners.delete(cell.handle);\n\t\t}\n\n\t\tfor (let i = 0; i < cells.length; i++) {\n\t\t\tconst dirtyStateListener = cells[i].onDidChangeContent((e) => {\n\t\t\t\tthis._bindCellContentHandler(cells[i], e);\n\t\t\t});\n\n\t\t\tthis._cellListeners.set(cells[i].handle, dirtyStateListener);\n\t\t}\n\n\t\tconst changes: NotebookCellTextModelSplice<ICell>[] = [[index, count, cells]];\n\t\tthis._onWillAddRemoveCells.fire({ rawEvent: { kind: NotebookCellsChangeType.ModelChange, changes } });\n\t\tthis._cells.splice(index, count, ...cells);\n\t\tthis._pauseableEmitter.fire({\n\t\t\trawEvents: [{ kind: NotebookCellsChangeType.ModelChange, changes, transient: false }],\n\t\t\tversionId: this.versionId,\n\t\t\tsynchronous: synchronous,\n\t\t\tendSelectionState: endSelections\n\t\t});\n\t}\n\n\tprivate _isDocumentMetadataChanged(a: NotebookDocumentMetadata, b: NotebookDocumentMetadata) {\n\t\tconst keys = new Set([...Object.keys(a || {}), ...Object.keys(b || {})]);\n\t\tfor (const key of keys) {\n\t\t\tif (key === 'custom') {\n\t\t\t\tif (!this._customMetadataEqual(a[key], b[key])\n\t\t\t\t\t&&\n\t\t\t\t\t!(this.transientOptions.transientDocumentMetadata[key as keyof NotebookDocumentMetadata])\n\t\t\t\t) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\t(a[key as keyof NotebookDocumentMetadata] !== b[key as keyof NotebookDocumentMetadata])\n\t\t\t\t&&\n\t\t\t\t!(this.transientOptions.transientDocumentMetadata[key as keyof NotebookDocumentMetadata])\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate _isCellMetadataChanged(a: NotebookCellMetadata, b: NotebookCellMetadata) {\n\t\tconst keys = new Set([...Object.keys(a || {}), ...Object.keys(b || {})]);\n\t\tfor (const key of keys) {\n\t\t\tif (\n\t\t\t\t(a[key as keyof NotebookCellMetadata] !== b[key as keyof NotebookCellMetadata])\n\t\t\t\t&&\n\t\t\t\t!(this.transientOptions.transientCellMetadata[key as keyof NotebookCellMetadata])\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate _customMetadataEqual(a: any, b: any) {\n\t\tif (!a && !b) {\n\t\t\t// both of them are nullish or undefined\n\t\t\treturn true;\n\t\t}\n\n\t\tif (!a || !b) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst aProps = Object.getOwnPropertyNames(a);\n\t\tconst bProps = Object.getOwnPropertyNames(b);\n\n\t\tif (aProps.length !== bProps.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (let i = 0; i < aProps.length; i++) {\n\t\t\tconst propName = aProps[i];\n\t\t\tif (a[propName] !== b[propName]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate _changeCellMetadataPartial(cell: NotebookCellTextModel, metadata: NullablePartialNotebookCellMetadata, computeUndoRedo: boolean, beginSelectionState: ISelectionState | undefined, undoRedoGroup: UndoRedoGroup | undefined) {\n\t\tconst newMetadata: NotebookCellMetadata = {\n\t\t\t...cell.metadata\n\t\t};\n\t\tlet k: keyof NullablePartialNotebookCellMetadata;\n\t\tfor (k in metadata) {\n\t\t\tconst value = metadata[k] ?? undefined;\n\t\t\tnewMetadata[k] = value as any;\n\t\t}\n\n\t\treturn this._changeCellMetadata(cell, newMetadata, computeUndoRedo, beginSelectionState, undoRedoGroup);\n\t}\n\n\tprivate _changeCellMetadata(cell: NotebookCellTextModel, metadata: NotebookCellMetadata, computeUndoRedo: boolean, beginSelectionState: ISelectionState | undefined, undoRedoGroup: UndoRedoGroup | undefined) {\n\t\tconst triggerDirtyChange = this._isCellMetadataChanged(cell.metadata, metadata);\n\n\t\tif (triggerDirtyChange) {\n\t\t\tif (computeUndoRedo) {\n\t\t\t\tconst index = this._cells.indexOf(cell);\n\t\t\t\tthis._operationManager.pushEditOperation(new CellMetadataEdit(this.uri, index, Object.freeze(cell.metadata), Object.freeze(metadata), {\n\t\t\t\t\tupdateCellMetadata: (index, newMetadata) => {\n\t\t\t\t\t\tconst cell = this._cells[index];\n\t\t\t\t\t\tif (!cell) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._changeCellMetadata(cell, newMetadata, false, beginSelectionState, undoRedoGroup);\n\t\t\t\t\t}\n\t\t\t\t}), beginSelectionState, undefined, this._alternativeVersionId, undoRedoGroup);\n\t\t\t}\n\t\t}\n\n\t\t// should be deferred\n\t\tcell.metadata = metadata;\n\t\tthis._pauseableEmitter.fire({\n\t\t\trawEvents: [{ kind: NotebookCellsChangeType.ChangeCellMetadata, index: this._cells.indexOf(cell), metadata: cell.metadata, transient: !triggerDirtyChange }],\n\t\t\tversionId: this.versionId,\n\t\t\tsynchronous: true,\n\t\t\tendSelectionState: undefined\n\t\t});\n\t}\n\n\tprivate _changeCellInternalMetadataPartial(cell: NotebookCellTextModel, internalMetadata: NullablePartialNotebookCellInternalMetadata) {\n\t\tconst newInternalMetadata: NotebookCellInternalMetadata = {\n\t\t\t...cell.internalMetadata\n\t\t};\n\t\tlet k: keyof NotebookCellInternalMetadata;\n\t\tfor (k in internalMetadata) {\n\t\t\tconst value = internalMetadata[k] ?? undefined;\n\t\t\tnewInternalMetadata[k] = value as any;\n\t\t}\n\n\t\tcell.internalMetadata = newInternalMetadata;\n\t\tthis._pauseableEmitter.fire({\n\t\t\trawEvents: [{ kind: NotebookCellsChangeType.ChangeCellInternalMetadata, index: this._cells.indexOf(cell), internalMetadata: cell.internalMetadata, transient: true }],\n\t\t\tversionId: this.versionId,\n\t\t\tsynchronous: true,\n\t\t\tendSelectionState: undefined\n\t\t});\n\t}\n\n\tprivate _changeCellLanguage(cell: NotebookCellTextModel, languageId: string, computeUndoRedo: boolean, beginSelectionState: ISelectionState | undefined, undoRedoGroup: UndoRedoGroup | undefined) {\n\t\tif (cell.language === languageId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldLanguage = cell.language;\n\t\tcell.language = languageId;\n\n\t\tif (computeUndoRedo) {\n\t\t\tconst that = this;\n\t\t\tthis._operationManager.pushEditOperation(new class implements IResourceUndoRedoElement {\n\t\t\t\treadonly type: UndoRedoElementType.Resource = UndoRedoElementType.Resource;\n\t\t\t\tget resource() {\n\t\t\t\t\treturn that.uri;\n\t\t\t\t}\n\t\t\t\treadonly label = 'Update Cell Language';\n\t\t\t\treadonly code = 'undoredo.textBufferEdit';\n\t\t\t\tundo() {\n\t\t\t\t\tthat._changeCellLanguage(cell, oldLanguage, false, beginSelectionState, undoRedoGroup);\n\t\t\t\t}\n\t\t\t\tredo() {\n\t\t\t\t\tthat._changeCellLanguage(cell, languageId, false, beginSelectionState, undoRedoGroup);\n\t\t\t\t}\n\t\t\t}(), beginSelectionState, undefined, this._alternativeVersionId, undoRedoGroup);\n\t\t}\n\n\t\tthis._pauseableEmitter.fire({\n\t\t\trawEvents: [{ kind: NotebookCellsChangeType.ChangeCellLanguage, index: this._cells.indexOf(cell), language: languageId, transient: false }],\n\t\t\tversionId: this.versionId,\n\t\t\tsynchronous: true,\n\t\t\tendSelectionState: undefined\n\t\t});\n\t}\n\n\tprivate _spliceNotebookCellOutputs2(cell: NotebookCellTextModel, outputs: IOutputDto[], computeUndoRedo: boolean): void {\n\t\tif (outputs.length === 0 && cell.outputs.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (outputs.length <= 1) {\n\t\t\tthis._spliceNotebookCellOutputs(cell, { start: 0, deleteCount: cell.outputs.length, newOutputs: outputs.map(op => new NotebookCellOutputTextModel(op)) }, false, computeUndoRedo);\n\t\t\treturn;\n\t\t}\n\n\t\tconst diff = new LcsDiff(new OutputSequence(cell.outputs), new OutputSequence(outputs));\n\t\tconst diffResult = diff.ComputeDiff(false);\n\t\tconst splices: NotebookCellOutputsSplice[] = diffResult.changes.map(change => ({\n\t\t\tstart: change.originalStart,\n\t\t\tdeleteCount: change.originalLength,\n\t\t\t// create cell output text model only when it's inserted into the notebook document\n\t\t\tnewOutputs: outputs.slice(change.modifiedStart, change.modifiedStart + change.modifiedLength).map(op => new NotebookCellOutputTextModel(op))\n\t\t}));\n\t\tsplices.reverse().forEach(splice => {\n\t\t\tthis._spliceNotebookCellOutputs(cell, splice, false, computeUndoRedo);\n\t\t});\n\t}\n\n\tprivate _spliceNotebookCellOutputs(cell: NotebookCellTextModel, splice: NotebookCellOutputsSplice, append: boolean, computeUndoRedo: boolean): void {\n\t\tcell.spliceNotebookCellOutputs(splice);\n\t\tthis._pauseableEmitter.fire({\n\t\t\trawEvents: [{\n\t\t\t\tkind: NotebookCellsChangeType.Output,\n\t\t\t\tindex: this._cells.indexOf(cell),\n\t\t\t\toutputs: cell.outputs.map(output => output.asDto()) ?? [],\n\t\t\t\tappend,\n\t\t\t\ttransient: this.transientOptions.transientOutputs,\n\t\t\t}],\n\t\t\tversionId: this.versionId,\n\t\t\tsynchronous: true,\n\t\t\tendSelectionState: undefined\n\t\t});\n\t}\n\n\tprivate _appendNotebookCellOutputItems(cell: NotebookCellTextModel, outputId: string, items: IOutputItemDto[]) {\n\t\tif (cell.changeOutputItems(outputId, true, items)) {\n\t\t\tthis._pauseableEmitter.fire({\n\t\t\t\trawEvents: [{\n\t\t\t\t\tkind: NotebookCellsChangeType.OutputItem,\n\t\t\t\t\tindex: this._cells.indexOf(cell),\n\t\t\t\t\toutputId: outputId,\n\t\t\t\t\toutputItems: items,\n\t\t\t\t\tappend: true,\n\t\t\t\t\ttransient: this.transientOptions.transientOutputs\n\n\t\t\t\t}],\n\t\t\t\tversionId: this.versionId,\n\t\t\t\tsynchronous: true,\n\t\t\t\tendSelectionState: undefined\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _replaceNotebookCellOutputItems(cell: NotebookCellTextModel, outputId: string, items: IOutputItemDto[]) {\n\t\tif (cell.changeOutputItems(outputId, false, items)) {\n\t\t\tthis._pauseableEmitter.fire({\n\t\t\t\trawEvents: [{\n\t\t\t\t\tkind: NotebookCellsChangeType.OutputItem,\n\t\t\t\t\tindex: this._cells.indexOf(cell),\n\t\t\t\t\toutputId: outputId,\n\t\t\t\t\toutputItems: items,\n\t\t\t\t\tappend: false,\n\t\t\t\t\ttransient: this.transientOptions.transientOutputs\n\n\t\t\t\t}],\n\t\t\t\tversionId: this.versionId,\n\t\t\t\tsynchronous: true,\n\t\t\t\tendSelectionState: undefined\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _moveCellToIdx(index: number, length: number, newIdx: number, synchronous: boolean, pushedToUndoStack: boolean, beforeSelections: ISelectionState | undefined, endSelections: ISelectionState | undefined, undoRedoGroup: UndoRedoGroup | undefined): boolean {\n\t\tif (pushedToUndoStack) {\n\t\t\tthis._operationManager.pushEditOperation(new MoveCellEdit(this.uri, index, length, newIdx, {\n\t\t\t\tmoveCell: (fromIndex: number, length: number, toIndex: number, beforeSelections: ISelectionState | undefined, endSelections: ISelectionState | undefined) => {\n\t\t\t\t\tthis._moveCellToIdx(fromIndex, length, toIndex, true, false, beforeSelections, endSelections, undoRedoGroup);\n\t\t\t\t},\n\t\t\t}, beforeSelections, endSelections), beforeSelections, endSelections, this._alternativeVersionId, undoRedoGroup);\n\t\t}\n\n\t\tthis._assertIndex(index);\n\t\tthis._assertIndex(newIdx);\n\n\t\tconst cells = this._cells.splice(index, length);\n\t\tthis._cells.splice(newIdx, 0, ...cells);\n\t\tthis._pauseableEmitter.fire({\n\t\t\trawEvents: [{ kind: NotebookCellsChangeType.Move, index, length, newIdx, cells, transient: false }],\n\t\t\tversionId: this.versionId,\n\t\t\tsynchronous: synchronous,\n\t\t\tendSelectionState: endSelections\n\t\t});\n\n\t\treturn true;\n\t}\n\n\tprivate _assertIndex(index: number) {\n\t\tif (this._indexIsInvalid(index)) {\n\t\t\tthrow new Error(`model index out of range ${index}`);\n\t\t}\n\t}\n\n\tprivate _indexIsInvalid(index: number): boolean {\n\t\treturn index < 0 || index >= this._cells.length;\n\t}\n\n\t//#region Find\n\tfindNextMatch(searchString: string, searchStart: { cellIndex: number; position: IPosition }, isRegex: boolean, matchCase: boolean, wordSeparators: string | null): { cell: NotebookCellTextModel; match: FindMatch } | null {\n\t\t// check if search cell index is valid\n\t\tthis._assertIndex(searchStart.cellIndex);\n\t\tconst searchParams = new SearchParams(searchString, isRegex, matchCase, wordSeparators);\n\t\tconst searchData = searchParams.parseSearchRequest();\n\n\t\tif (!searchData) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet cellIndex = searchStart.cellIndex;\n\t\tlet searchStartPosition = searchStart.position;\n\n\t\twhile (cellIndex < this._cells.length) {\n\t\t\tconst cell = this._cells[cellIndex];\n\t\t\tconst searchRange = new Range(\n\t\t\t\tsearchStartPosition.lineNumber,\n\t\t\t\tsearchStartPosition.column,\n\t\t\t\tcell.textBuffer.getLineCount(),\n\t\t\t\tcell.textBuffer.getLineMaxColumn(cell.textBuffer.getLineCount())\n\t\t\t);\n\n\t\t\tconst result = cell.textBuffer.findMatchesLineByLine(searchRange, searchData, false, 1);\n\t\t\tif (result.length > 0) {\n\t\t\t\treturn { cell, match: result[0] };\n\t\t\t}\n\n\t\t\t// Move to the next cell\n\t\t\tcellIndex++;\n\t\t\tsearchStartPosition = { lineNumber: 1, column: 1 }; // Reset position to start of the next cell\n\t\t}\n\n\t\treturn null;\n\t}\n\t//#endregion\n}\n\nclass OutputSequence implements ISequence {\n\tconstructor(readonly outputs: IOutputDto[]) {\n\t}\n\n\tgetElements(): Int32Array | number[] | string[] {\n\t\treturn this.outputs.map(output => {\n\t\t\treturn hash(output.outputs.map(output => ({\n\t\t\t\tmime: output.mime,\n\t\t\t\tdata: output.data\n\t\t\t})));\n\t\t});\n\t}\n\n}\n"],
  "mappings": "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",
  "names": ["diff", "index", "count", "cells", "cell", "length", "beforeSelections", "endSelections", "output"]
}
