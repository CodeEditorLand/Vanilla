import{toFormattedString as f}from"../../../../../base/common/jsonFormatter.js";import{NotebookCellsChangeType as i,NotebookMetadataUri as u}from"../notebookCommon.js";import{StringSHA1 as l}from"../../../../../base/common/hash.js";import{Disposable as d}from"../../../../../base/common/lifecycle.js";import"../../../../../base/common/uri.js";import{DefaultEndOfLine as h,EndOfLinePreference as s}from"../../../../../editor/common/model.js";import{Emitter as g}from"../../../../../base/common/event.js";import{Range as m}from"../../../../../editor/common/core/range.js";import{createTextBuffer as c}from"../../../../../editor/common/model/textModel.js";function x(r,n){let e={};if(r){const t=new Set([...Object.keys(n)]);for(const a of t)r[a]||(e[a]=n[a])}else e=n;return f(e,{})}class F extends d{constructor(e){super();this.notebookModel=e;this.uri=u.generate(this.notebookModel.uri),this._register(this.notebookModel.onDidChangeContent(o=>{o.rawEvents.some(t=>t.kind===i.ChangeDocumentMetadata||t.kind===i.ModelChange)&&(this._textBuffer?.dispose(),this._textBuffer=void 0,this._textBufferHash=null,this._onDidChange.fire())}))}uri;get metadata(){return this.notebookModel.metadata}_onDidChange=this._register(new g);onDidChange=this._onDidChange.event;_textBufferHash=null;_textBuffer;get textBuffer(){if(this._textBuffer)return this._textBuffer;const e=x(this.notebookModel.transientOptions.transientDocumentMetadata,this.metadata);return this._textBuffer=this._register(c(e,h.LF).textBuffer),this._register(this._textBuffer.onDidChangeContent(()=>{this._onDidChange.fire()})),this._textBuffer}getHash(){if(this._textBufferHash!==null)return this._textBufferHash;const e=new l,o=this.textBuffer.createSnapshot(!1);let t;for(;t=o.read();)e.update(t);return this._textBufferHash=e.digest(),this._textBufferHash}getValue(){const e=this.getFullModelRange();return this.textBuffer.getEOL()===`
`?this.textBuffer.getValueInRange(e,s.LF):this.textBuffer.getValueInRange(e,s.CRLF)}getFullModelRange(){const e=this.textBuffer.getLineCount();return new m(1,1,e,this.textBuffer.getLineLength(e)+1)}}export{F as NotebookDocumentMetadataTextModel,x as getFormattedNotebookMetadataJSON};
