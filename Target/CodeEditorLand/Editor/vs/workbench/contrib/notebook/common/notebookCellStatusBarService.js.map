{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/common/notebookCellStatusBarService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport type { Event } from \"../../../../base/common/event.js\";\nimport type { IDisposable } from \"../../../../base/common/lifecycle.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { createDecorator } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport type {\n\tINotebookCellStatusBarItemList,\n\tINotebookCellStatusBarItemProvider,\n} from \"./notebookCommon.js\";\n\nexport const INotebookCellStatusBarService =\n\tcreateDecorator<INotebookCellStatusBarService>(\n\t\t\"notebookCellStatusBarService\",\n\t);\n\nexport interface INotebookCellStatusBarService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly onDidChangeProviders: Event<void>;\n\treadonly onDidChangeItems: Event<void>;\n\n\tregisterCellStatusBarItemProvider(\n\t\tprovider: INotebookCellStatusBarItemProvider,\n\t): IDisposable;\n\n\tgetStatusBarItemsForCell(\n\t\tdocUri: URI,\n\t\tcellIndex: number,\n\t\tviewType: string,\n\t\ttoken: CancellationToken,\n\t): Promise<INotebookCellStatusBarItemList[]>;\n}\n"],
  "mappings": "AASA,SAAS,uBAAuB;AAMzB,MAAM,gCACZ;AAAA,EACC;AACD;",
  "names": []
}
