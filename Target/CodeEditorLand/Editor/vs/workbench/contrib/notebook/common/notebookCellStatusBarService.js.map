{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/common/notebookCellStatusBarService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { IDisposable } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotebookCellStatusBarItemList, INotebookCellStatusBarItemProvider } from './notebookCommon.js';\n\nexport const INotebookCellStatusBarService = createDecorator<INotebookCellStatusBarService>('notebookCellStatusBarService');\n\nexport interface INotebookCellStatusBarService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly onDidChangeProviders: Event<void>;\n\treadonly onDidChangeItems: Event<void>;\n\n\tregisterCellStatusBarItemProvider(provider: INotebookCellStatusBarItemProvider): IDisposable;\n\n\tgetStatusBarItemsForCell(docUri: URI, cellIndex: number, viewType: string, token: CancellationToken): Promise<INotebookCellStatusBarItemList[]>;\n}\n"],
  "mappings": "AAKA,SAAS,yBAAyB;AAClC,SAAS,aAAa;AACtB,SAAS,mBAAmB;AAC5B,SAAS,WAAW;AACpB,SAAS,uBAAuB;AAChC,SAAS,gCAAgC,0CAA0C;AAE5E,MAAM,gCAAgC,gBAA+C,8BAA8B;",
  "names": []
}
