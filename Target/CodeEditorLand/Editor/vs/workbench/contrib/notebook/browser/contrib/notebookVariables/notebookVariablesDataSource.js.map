{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/notebookVariables/notebookVariablesDataSource.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IAsyncDataSource } from \"../../../../../../base/browser/ui/tree/tree.js\";\nimport { CancellationTokenSource } from \"../../../../../../base/common/cancellation.js\";\nimport { localize } from \"../../../../../../nls.js\";\nimport type { NotebookTextModel } from \"../../../common/model/notebookTextModel.js\";\nimport {\n\ttype INotebookKernel,\n\ttype INotebookKernelService,\n\ttype VariablesResult,\n\tvariablePageSize,\n} from \"../../../common/notebookKernelService.js\";\n\nexport interface INotebookScope {\n\tkind: \"root\";\n\treadonly notebook: NotebookTextModel;\n}\n\nexport interface INotebookVariableElement {\n\tkind: \"variable\";\n\treadonly id: string;\n\treadonly extHostId: number;\n\treadonly name: string;\n\treadonly value: string;\n\treadonly type?: string;\n\treadonly interfaces?: string[];\n\treadonly expression?: string;\n\treadonly language?: string;\n\treadonly indexedChildrenCount: number;\n\treadonly indexStart?: number;\n\treadonly hasNamedChildren: boolean;\n\treadonly notebook: NotebookTextModel;\n\treadonly extensionId?: string;\n}\n\nexport class NotebookVariableDataSource\n\timplements IAsyncDataSource<INotebookScope, INotebookVariableElement>\n{\n\tprivate cancellationTokenSource: CancellationTokenSource;\n\n\tconstructor(\n\t\tprivate readonly notebookKernelService: INotebookKernelService,\n\t) {\n\t\tthis.cancellationTokenSource = new CancellationTokenSource();\n\t}\n\n\thasChildren(element: INotebookScope | INotebookVariableElement): boolean {\n\t\treturn (\n\t\t\telement.kind === \"root\" ||\n\t\t\telement.hasNamedChildren ||\n\t\t\telement.indexedChildrenCount > 0\n\t\t);\n\t}\n\n\tpublic cancel(): void {\n\t\tthis.cancellationTokenSource.cancel();\n\t\tthis.cancellationTokenSource.dispose();\n\t\tthis.cancellationTokenSource = new CancellationTokenSource();\n\t}\n\n\tasync getChildren(\n\t\telement: INotebookScope | INotebookVariableElement,\n\t): Promise<Array<INotebookVariableElement>> {\n\t\tif (element.kind === \"root\") {\n\t\t\treturn this.getRootVariables(element.notebook);\n\t\t} else {\n\t\t\treturn this.getVariables(element);\n\t\t}\n\t}\n\n\tprivate async getVariables(\n\t\tparent: INotebookVariableElement,\n\t): Promise<INotebookVariableElement[]> {\n\t\tconst selectedKernel = this.notebookKernelService.getMatchingKernel(\n\t\t\tparent.notebook,\n\t\t).selected;\n\t\tif (selectedKernel && selectedKernel.hasVariableProvider) {\n\t\t\tlet children: INotebookVariableElement[] = [];\n\t\t\tif (parent.hasNamedChildren) {\n\t\t\t\tconst variables = selectedKernel.provideVariables(\n\t\t\t\t\tparent.notebook.uri,\n\t\t\t\t\tparent.extHostId,\n\t\t\t\t\t\"named\",\n\t\t\t\t\t0,\n\t\t\t\t\tthis.cancellationTokenSource.token,\n\t\t\t\t);\n\t\t\t\tconst childNodes = await variables\n\t\t\t\t\t.map((variable) => {\n\t\t\t\t\t\treturn this.createVariableElement(\n\t\t\t\t\t\t\tvariable,\n\t\t\t\t\t\t\tparent.notebook,\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t\t.toPromise();\n\t\t\t\tchildren = children.concat(childNodes);\n\t\t\t}\n\t\t\tif (parent.indexedChildrenCount > 0) {\n\t\t\t\tconst childNodes = await this.getIndexedChildren(\n\t\t\t\t\tparent,\n\t\t\t\t\tselectedKernel,\n\t\t\t\t);\n\t\t\t\tchildren = children.concat(childNodes);\n\t\t\t}\n\n\t\t\treturn children;\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate async getIndexedChildren(\n\t\tparent: INotebookVariableElement,\n\t\tkernel: INotebookKernel,\n\t) {\n\t\tconst childNodes: INotebookVariableElement[] = [];\n\n\t\tif (parent.indexedChildrenCount > variablePageSize) {\n\t\t\tconst nestedPageSize = Math.floor(\n\t\t\t\tMath.max(parent.indexedChildrenCount / variablePageSize, 100),\n\t\t\t);\n\n\t\t\tconst indexedChildCountLimit = 1_000_000;\n\t\t\tlet start = parent.indexStart ?? 0;\n\t\t\tconst last =\n\t\t\t\tstart +\n\t\t\t\tMath.min(parent.indexedChildrenCount, indexedChildCountLimit);\n\t\t\tfor (; start < last; start += nestedPageSize) {\n\t\t\t\tlet end = start + nestedPageSize;\n\t\t\t\tif (end > last) {\n\t\t\t\t\tend = last;\n\t\t\t\t}\n\n\t\t\t\tchildNodes.push({\n\t\t\t\t\tkind: \"variable\",\n\t\t\t\t\tnotebook: parent.notebook,\n\t\t\t\t\tid: parent.id + `${start}`,\n\t\t\t\t\textHostId: parent.extHostId,\n\t\t\t\t\tname: `[${start}..${end - 1}]`,\n\t\t\t\t\tvalue: \"\",\n\t\t\t\t\tindexedChildrenCount: end - start,\n\t\t\t\t\tindexStart: start,\n\t\t\t\t\thasNamedChildren: false,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (parent.indexedChildrenCount > indexedChildCountLimit) {\n\t\t\t\tchildNodes.push({\n\t\t\t\t\tkind: \"variable\",\n\t\t\t\t\tnotebook: parent.notebook,\n\t\t\t\t\tid: parent.id + `${last + 1}`,\n\t\t\t\t\textHostId: parent.extHostId,\n\t\t\t\t\tname: localize(\n\t\t\t\t\t\t\"notebook.indexedChildrenLimitReached\",\n\t\t\t\t\t\t\"Display limit reached\",\n\t\t\t\t\t),\n\t\t\t\t\tvalue: \"\",\n\t\t\t\t\tindexedChildrenCount: 0,\n\t\t\t\t\thasNamedChildren: false,\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (parent.indexedChildrenCount > 0) {\n\t\t\tconst variables = kernel.provideVariables(\n\t\t\t\tparent.notebook.uri,\n\t\t\t\tparent.extHostId,\n\t\t\t\t\"indexed\",\n\t\t\t\tparent.indexStart ?? 0,\n\t\t\t\tthis.cancellationTokenSource.token,\n\t\t\t);\n\n\t\t\tfor await (const variable of variables) {\n\t\t\t\tchildNodes.push(\n\t\t\t\t\tthis.createVariableElement(variable, parent.notebook),\n\t\t\t\t);\n\t\t\t\tif (childNodes.length >= variablePageSize) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn childNodes;\n\t}\n\n\tprivate async getRootVariables(\n\t\tnotebook: NotebookTextModel,\n\t): Promise<INotebookVariableElement[]> {\n\t\tconst selectedKernel =\n\t\t\tthis.notebookKernelService.getMatchingKernel(notebook).selected;\n\t\tif (selectedKernel && selectedKernel.hasVariableProvider) {\n\t\t\tconst variables = selectedKernel.provideVariables(\n\t\t\t\tnotebook.uri,\n\t\t\t\tundefined,\n\t\t\t\t\"named\",\n\t\t\t\t0,\n\t\t\t\tthis.cancellationTokenSource.token,\n\t\t\t);\n\t\t\treturn await variables\n\t\t\t\t.map((variable) => {\n\t\t\t\t\treturn this.createVariableElement(variable, notebook);\n\t\t\t\t})\n\t\t\t\t.toPromise();\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate createVariableElement(\n\t\tvariable: VariablesResult,\n\t\tnotebook: NotebookTextModel,\n\t): INotebookVariableElement {\n\t\treturn {\n\t\t\t...variable,\n\t\t\tkind: \"variable\",\n\t\t\tnotebook,\n\t\t\textHostId: variable.id,\n\t\t\tid: `${variable.id}`,\n\t\t};\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
