{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/view/cellParts/cellDecorations.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from \"../../../../../../base/browser/dom.js\";\nimport type { ICellViewModel } from \"../../notebookBrowser.js\";\nimport { CellContentPart } from \"../cellPart.js\";\n\nexport class CellDecorations extends CellContentPart {\n\tconstructor(\n\t\treadonly rootContainer: HTMLElement,\n\t\treadonly decorationContainer: HTMLElement,\n\t) {\n\t\tsuper();\n\t}\n\n\toverride didRenderCell(element: ICellViewModel): void {\n\t\tconst removedClassNames: string[] = [];\n\t\tthis.rootContainer.classList.forEach((className) => {\n\t\t\tif (/^nb-.*$/.test(className)) {\n\t\t\t\tremovedClassNames.push(className);\n\t\t\t}\n\t\t});\n\n\t\tremovedClassNames.forEach((className) => {\n\t\t\tthis.rootContainer.classList.remove(className);\n\t\t});\n\n\t\tthis.decorationContainer.innerText = \"\";\n\n\t\tconst generateCellTopDecorations = () => {\n\t\t\tthis.decorationContainer.innerText = \"\";\n\n\t\t\telement\n\t\t\t\t.getCellDecorations()\n\t\t\t\t.filter((options) => options.topClassName !== undefined)\n\t\t\t\t.forEach((options) => {\n\t\t\t\t\tthis.decorationContainer.append(\n\t\t\t\t\t\tDOM.$(`.${options.topClassName!}`),\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t};\n\n\t\tthis.cellDisposables.add(\n\t\t\telement.onCellDecorationsChanged((e) => {\n\t\t\t\tconst modified =\n\t\t\t\t\te.added.find((e) => e.topClassName) ||\n\t\t\t\t\te.removed.find((e) => e.topClassName);\n\n\t\t\t\tif (modified) {\n\t\t\t\t\tgenerateCellTopDecorations();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tgenerateCellTopDecorations();\n\t}\n}\n"],
  "mappings": ";;AAKA,YAAY,SAAS;AAErB,SAAS,uBAAuB;AAEzB,MAAM,wBAAwB,gBAAgB;AAAA,EACpD,YACU,eACA,qBACR;AACD,UAAM;AAHG;AACA;AAAA,EAGV;AAAA,EAfD,OASqD;AAAA;AAAA;AAAA,EAQ3C,cAAc,SAA+B;AACrD,UAAM,oBAA8B,CAAC;AACrC,SAAK,cAAc,UAAU,QAAQ,CAAC,cAAc;AACnD,UAAI,UAAU,KAAK,SAAS,GAAG;AAC9B,0BAAkB,KAAK,SAAS;AAAA,MACjC;AAAA,IACD,CAAC;AAED,sBAAkB,QAAQ,CAAC,cAAc;AACxC,WAAK,cAAc,UAAU,OAAO,SAAS;AAAA,IAC9C,CAAC;AAED,SAAK,oBAAoB,YAAY;AAErC,UAAM,6BAA6B,6BAAM;AACxC,WAAK,oBAAoB,YAAY;AAErC,cACE,mBAAmB,EACnB,OAAO,CAAC,YAAY,QAAQ,iBAAiB,MAAS,EACtD,QAAQ,CAAC,YAAY;AACrB,aAAK,oBAAoB;AAAA,UACxB,IAAI,EAAE,IAAI,QAAQ,YAAa,EAAE;AAAA,QAClC;AAAA,MACD,CAAC;AAAA,IACH,GAXmC;AAanC,SAAK,gBAAgB;AAAA,MACpB,QAAQ,yBAAyB,CAAC,MAAM;AACvC,cAAM,WACL,EAAE,MAAM,KAAK,CAACA,OAAMA,GAAE,YAAY,KAClC,EAAE,QAAQ,KAAK,CAACA,OAAMA,GAAE,YAAY;AAErC,YAAI,UAAU;AACb,qCAA2B;AAAA,QAC5B;AAAA,MACD,CAAC;AAAA,IACF;AAEA,+BAA2B;AAAA,EAC5B;AACD;",
  "names": ["e"]
}
