{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/undoRedo/notebookUndoRedo.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../../../../base/common/lifecycle.js';\nimport { WorkbenchPhase, registerWorkbenchContribution2 } from '../../../../../common/contributions.js';\nimport { CellKind } from '../../../common/notebookCommon.js';\nimport { IEditorService } from '../../../../../services/editor/common/editorService.js';\nimport { CellEditState, getNotebookEditorFromEditorPane } from '../../notebookBrowser.js';\nimport { RedoCommand, UndoCommand } from '../../../../../../editor/browser/editorExtensions.js';\nimport { NotebookViewModel } from '../../viewModel/notebookViewModelImpl.js';\n\nclass NotebookUndoRedoContribution extends Disposable {\n\n\tstatic readonly ID = 'workbench.contrib.notebookUndoRedo';\n\n\tconstructor(@IEditorService private readonly _editorService: IEditorService) {\n\t\tsuper();\n\n\t\tconst PRIORITY = 105;\n\t\tthis._register(UndoCommand.addImplementation(PRIORITY, 'notebook-undo-redo', () => {\n\t\t\tconst editor = getNotebookEditorFromEditorPane(this._editorService.activeEditorPane);\n\t\t\tconst viewModel = editor?.getViewModel() as NotebookViewModel | undefined;\n\t\t\tif (editor && editor.hasModel() && viewModel) {\n\t\t\t\treturn viewModel.undo().then(cellResources => {\n\t\t\t\t\tif (cellResources?.length) {\n\t\t\t\t\t\tfor (let i = 0; i < editor.getLength(); i++) {\n\t\t\t\t\t\t\tconst cell = editor.cellAt(i);\n\t\t\t\t\t\t\tif (cell.cellKind === CellKind.Markup && cellResources.find(resource => resource.fragment === cell.model.uri.fragment)) {\n\t\t\t\t\t\t\t\tcell.updateEditState(CellEditState.Editing, 'undo');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\teditor?.setOptions({ cellOptions: { resource: cellResources[0] }, preserveFocus: true });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}));\n\n\t\tthis._register(RedoCommand.addImplementation(PRIORITY, 'notebook-undo-redo', () => {\n\t\t\tconst editor = getNotebookEditorFromEditorPane(this._editorService.activeEditorPane);\n\t\t\tconst viewModel = editor?.getViewModel() as NotebookViewModel | undefined;\n\n\t\t\tif (editor && editor.hasModel() && viewModel) {\n\t\t\t\treturn viewModel.redo().then(cellResources => {\n\t\t\t\t\tif (cellResources?.length) {\n\t\t\t\t\t\tfor (let i = 0; i < editor.getLength(); i++) {\n\t\t\t\t\t\t\tconst cell = editor.cellAt(i);\n\t\t\t\t\t\t\tif (cell.cellKind === CellKind.Markup && cellResources.find(resource => resource.fragment === cell.model.uri.fragment)) {\n\t\t\t\t\t\t\t\tcell.updateEditState(CellEditState.Editing, 'redo');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\teditor?.setOptions({ cellOptions: { resource: cellResources[0] }, preserveFocus: true });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}));\n\t}\n}\n\nregisterWorkbenchContribution2(NotebookUndoRedoContribution.ID, NotebookUndoRedoContribution, WorkbenchPhase.BlockRestore);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,kBAAkB;AAC3B,SAAS,gBAAgB,sCAAsC;AAC/D,SAAS,gBAAgB;AACzB,SAAS,sBAAsB;AAC/B,SAAS,eAAe,uCAAuC;AAC/D,SAAS,aAAa,mBAAmB;AACzC,SAAS,yBAAyB;AAElC,IAAM,+BAAN,cAA2C,WAAW;AAAA,EAIrD,YAA6C,gBAAgC;AAC5E,UAAM;AADsC;AAG5C,UAAM,WAAW;AACjB,SAAK,UAAU,YAAY,kBAAkB,UAAU,sBAAsB,MAAM;AAClF,YAAM,SAAS,gCAAgC,KAAK,eAAe,gBAAgB;AACnF,YAAM,YAAY,QAAQ,aAAa;AACvC,UAAI,UAAU,OAAO,SAAS,KAAK,WAAW;AAC7C,eAAO,UAAU,KAAK,EAAE,KAAK,mBAAiB;AAC7C,cAAI,eAAe,QAAQ;AAC1B,qBAAS,IAAI,GAAG,IAAI,OAAO,UAAU,GAAG,KAAK;AAC5C,oBAAM,OAAO,OAAO,OAAO,CAAC;AAC5B,kBAAI,KAAK,aAAa,SAAS,UAAU,cAAc,KAAK,cAAY,SAAS,aAAa,KAAK,MAAM,IAAI,QAAQ,GAAG;AACvH,qBAAK,gBAAgB,cAAc,SAAS,MAAM;AAAA,cACnD;AAAA,YACD;AAEA,oBAAQ,WAAW,EAAE,aAAa,EAAE,UAAU,cAAc,CAAC,EAAE,GAAG,eAAe,KAAK,CAAC;AAAA,UACxF;AAAA,QACD,CAAC;AAAA,MACF;AAEA,aAAO;AAAA,IACR,CAAC,CAAC;AAEF,SAAK,UAAU,YAAY,kBAAkB,UAAU,sBAAsB,MAAM;AAClF,YAAM,SAAS,gCAAgC,KAAK,eAAe,gBAAgB;AACnF,YAAM,YAAY,QAAQ,aAAa;AAEvC,UAAI,UAAU,OAAO,SAAS,KAAK,WAAW;AAC7C,eAAO,UAAU,KAAK,EAAE,KAAK,mBAAiB;AAC7C,cAAI,eAAe,QAAQ;AAC1B,qBAAS,IAAI,GAAG,IAAI,OAAO,UAAU,GAAG,KAAK;AAC5C,oBAAM,OAAO,OAAO,OAAO,CAAC;AAC5B,kBAAI,KAAK,aAAa,SAAS,UAAU,cAAc,KAAK,cAAY,SAAS,aAAa,KAAK,MAAM,IAAI,QAAQ,GAAG;AACvH,qBAAK,gBAAgB,cAAc,SAAS,MAAM;AAAA,cACnD;AAAA,YACD;AAEA,oBAAQ,WAAW,EAAE,aAAa,EAAE,UAAU,cAAc,CAAC,EAAE,GAAG,eAAe,KAAK,CAAC;AAAA,UACxF;AAAA,QACD,CAAC;AAAA,MACF;AAEA,aAAO;AAAA,IACR,CAAC,CAAC;AAAA,EACH;AAAA,EA/DD,OAasD;AAAA;AAAA;AAAA,EAErD,OAAgB,KAAK;AAiDtB;AAnDM,+BAAN;AAAA,EAIc;AAAA,GAJR;AAqDN,+BAA+B,6BAA6B,IAAI,8BAA8B,eAAe,YAAY;",
  "names": []
}
