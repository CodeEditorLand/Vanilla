{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/notebookVariables/notebookVariableCommands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../../../../base/common/cancellation.js';\nimport { URI, UriComponents } from '../../../../../../base/common/uri.js';\nimport { localize } from '../../../../../../nls.js';\nimport { Action2, registerAction2 } from '../../../../../../platform/actions/common/actions.js';\nimport { IClipboardService } from '../../../../../../platform/clipboard/common/clipboardService.js';\nimport { ServicesAccessor } from '../../../../../../platform/instantiation/common/instantiation.js';\nimport { contextMenuArg } from './notebookVariablesView.js';\nimport { INotebookKernelService, VariablesResult } from '../../../common/notebookKernelService.js';\nimport { INotebookService } from '../../../common/notebookService.js';\n\nexport const COPY_NOTEBOOK_VARIABLE_VALUE_ID = 'workbench.debug.viewlet.action.copyWorkspaceVariableValue';\nexport const COPY_NOTEBOOK_VARIABLE_VALUE_LABEL = localize('copyWorkspaceVariableValue', \"Copy Value\");\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: COPY_NOTEBOOK_VARIABLE_VALUE_ID,\n\t\t\ttitle: COPY_NOTEBOOK_VARIABLE_VALUE_LABEL,\n\t\t\tf1: false,\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, context: contextMenuArg): void {\n\t\tconst clipboardService = accessor.get(IClipboardService);\n\n\t\tif (context.value) {\n\t\t\tclipboardService.writeText(context.value);\n\t\t}\n\t}\n});\n\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: '_executeNotebookVariableProvider',\n\t\t\ttitle: localize('executeNotebookVariableProvider', \"Execute Notebook Variable Provider\"),\n\t\t\tf1: false,\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, resource: UriComponents | undefined): Promise<VariablesResult[]> {\n\t\tif (!resource) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst uri = URI.revive(resource);\n\t\tconst notebookKernelService = accessor.get(INotebookKernelService);\n\t\tconst notebookService = accessor.get(INotebookService);\n\t\tconst notebookTextModel = notebookService.getNotebookTextModel(uri);\n\n\t\tif (!notebookTextModel) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst selectedKernel = notebookKernelService.getMatchingKernel(notebookTextModel).selected;\n\t\tif (selectedKernel && selectedKernel.hasVariableProvider) {\n\t\t\tconst variables = selectedKernel.provideVariables(notebookTextModel.uri, undefined, 'named', 0, CancellationToken.None);\n\t\t\treturn await variables\n\t\t\t\t.map(variable => { return variable; })\n\t\t\t\t.toPromise();\n\t\t}\n\n\t\treturn [];\n\t}\n});\n"],
  "mappings": "AAKA,SAAS,yBAAyB;AAClC,SAAS,KAAK,qBAAqB;AACnC,SAAS,gBAAgB;AACzB,SAAS,SAAS,uBAAuB;AACzC,SAAS,yBAAyB;AAClC,SAAS,wBAAwB;AACjC,SAAS,sBAAsB;AAC/B,SAAS,wBAAwB,uBAAuB;AACxD,SAAS,wBAAwB;AAE1B,MAAM,kCAAkC;AACxC,MAAM,qCAAqC,SAAS,8BAA8B,YAAY;AACrG,gBAAgB,cAAc,QAAQ;AAAA,EACrC,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,IAAI;AAAA,IACL,CAAC;AAAA,EACF;AAAA,EAEA,IAAI,UAA4B,SAA+B;AAC9D,UAAM,mBAAmB,SAAS,IAAI,iBAAiB;AAEvD,QAAI,QAAQ,OAAO;AAClB,uBAAiB,UAAU,QAAQ,KAAK;AAAA,IACzC;AAAA,EACD;AACD,CAAC;AAGD,gBAAgB,cAAc,QAAQ;AAAA,EACrC,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,SAAS,mCAAmC,oCAAoC;AAAA,MACvF,IAAI;AAAA,IACL,CAAC;AAAA,EACF;AAAA,EAEA,MAAM,IAAI,UAA4B,UAAiE;AACtG,QAAI,CAAC,UAAU;AACd,aAAO,CAAC;AAAA,IACT;AAEA,UAAM,MAAM,IAAI,OAAO,QAAQ;AAC/B,UAAM,wBAAwB,SAAS,IAAI,sBAAsB;AACjE,UAAM,kBAAkB,SAAS,IAAI,gBAAgB;AACrD,UAAM,oBAAoB,gBAAgB,qBAAqB,GAAG;AAElE,QAAI,CAAC,mBAAmB;AACvB,aAAO,CAAC;AAAA,IACT;AAEA,UAAM,iBAAiB,sBAAsB,kBAAkB,iBAAiB,EAAE;AAClF,QAAI,kBAAkB,eAAe,qBAAqB;AACzD,YAAM,YAAY,eAAe,iBAAiB,kBAAkB,KAAK,QAAW,SAAS,GAAG,kBAAkB,IAAI;AACtH,aAAO,MAAM,UACX,IAAI,cAAY;AAAE,eAAO;AAAA,MAAU,CAAC,EACpC,UAAU;AAAA,IACb;AAEA,WAAO,CAAC;AAAA,EACT;AACD,CAAC;",
  "names": []
}
