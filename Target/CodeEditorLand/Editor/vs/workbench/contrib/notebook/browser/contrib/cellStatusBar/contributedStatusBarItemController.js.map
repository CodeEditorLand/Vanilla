{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/cellStatusBar/contributedStatusBarItemController.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Throttler } from \"../../../../../../base/common/async.js\";\nimport { CancellationTokenSource } from \"../../../../../../base/common/cancellation.js\";\nimport {\n\tDisposable,\n\ttoDisposable,\n} from \"../../../../../../base/common/lifecycle.js\";\nimport { INotebookCellStatusBarService } from \"../../../common/notebookCellStatusBarService.js\";\nimport type { INotebookCellStatusBarItemList } from \"../../../common/notebookCommon.js\";\nimport type {\n\tICellViewModel,\n\tINotebookEditor,\n\tINotebookEditorContribution,\n\tINotebookViewModel,\n} from \"../../notebookBrowser.js\";\nimport { registerNotebookContribution } from \"../../notebookEditorExtensions.js\";\nimport { NotebookVisibleCellObserver } from \"./notebookVisibleCellObserver.js\";\n\nexport class ContributedStatusBarItemController\n\textends Disposable\n\timplements INotebookEditorContribution\n{\n\tstatic id = \"workbench.notebook.statusBar.contributed\";\n\n\tprivate readonly _visibleCells = new Map<number, CellStatusBarHelper>();\n\n\tprivate readonly _observer: NotebookVisibleCellObserver;\n\n\tconstructor(\n\t\tprivate readonly _notebookEditor: INotebookEditor,\n\t\t@INotebookCellStatusBarService\n\t\tprivate readonly _notebookCellStatusBarService: INotebookCellStatusBarService,\n\t) {\n\t\tsuper();\n\t\tthis._observer = this._register(\n\t\t\tnew NotebookVisibleCellObserver(this._notebookEditor),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._observer.onDidChangeVisibleCells(\n\t\t\t\tthis._updateVisibleCells,\n\t\t\t\tthis,\n\t\t\t),\n\t\t);\n\n\t\tthis._updateEverything();\n\t\tthis._register(\n\t\t\tthis._notebookCellStatusBarService.onDidChangeProviders(\n\t\t\t\tthis._updateEverything,\n\t\t\t\tthis,\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._notebookCellStatusBarService.onDidChangeItems(\n\t\t\t\tthis._updateEverything,\n\t\t\t\tthis,\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate _updateEverything(): void {\n\t\tconst newCells = this._observer.visibleCells.filter(\n\t\t\t(cell) => !this._visibleCells.has(cell.handle),\n\t\t);\n\t\tconst visibleCellHandles = new Set(\n\t\t\tthis._observer.visibleCells.map((item) => item.handle),\n\t\t);\n\t\tconst currentCellHandles = Array.from(this._visibleCells.keys());\n\t\tconst removedCells = currentCellHandles.filter(\n\t\t\t(handle) => !visibleCellHandles.has(handle),\n\t\t);\n\t\tconst itemsToUpdate = currentCellHandles.filter((handle) =>\n\t\t\tvisibleCellHandles.has(handle),\n\t\t);\n\n\t\tthis._updateVisibleCells({\n\t\t\tadded: newCells,\n\t\t\tremoved: removedCells.map((handle) => ({ handle })),\n\t\t});\n\t\titemsToUpdate.forEach((handle) =>\n\t\t\tthis._visibleCells.get(handle)?.update(),\n\t\t);\n\t}\n\n\tprivate _updateVisibleCells(e: {\n\t\tadded: ICellViewModel[];\n\t\tremoved: { handle: number }[];\n\t}): void {\n\t\tconst vm = this._notebookEditor.getViewModel();\n\t\tif (!vm) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const newCell of e.added) {\n\t\t\tconst helper = new CellStatusBarHelper(\n\t\t\t\tvm,\n\t\t\t\tnewCell,\n\t\t\t\tthis._notebookCellStatusBarService,\n\t\t\t);\n\t\t\tthis._visibleCells.set(newCell.handle, helper);\n\t\t}\n\n\t\tfor (const oldCell of e.removed) {\n\t\t\tthis._visibleCells.get(oldCell.handle)?.dispose();\n\t\t\tthis._visibleCells.delete(oldCell.handle);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis._visibleCells.forEach((cell) => cell.dispose());\n\t\tthis._visibleCells.clear();\n\t}\n}\n\nclass CellStatusBarHelper extends Disposable {\n\tprivate _currentItemIds: string[] = [];\n\tprivate _currentItemLists: INotebookCellStatusBarItemList[] = [];\n\n\tprivate _activeToken: CancellationTokenSource | undefined;\n\tprivate _isDisposed = false;\n\n\tprivate readonly _updateThrottler = this._register(new Throttler());\n\n\tconstructor(\n\t\tprivate readonly _notebookViewModel: INotebookViewModel,\n\t\tprivate readonly _cell: ICellViewModel,\n\t\tprivate readonly _notebookCellStatusBarService: INotebookCellStatusBarService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(toDisposable(() => this._activeToken?.dispose(true)));\n\t\tthis._updateSoon();\n\t\tthis._register(\n\t\t\tthis._cell.model.onDidChangeContent(() => this._updateSoon()),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._cell.model.onDidChangeLanguage(() => this._updateSoon()),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._cell.model.onDidChangeMetadata(() => this._updateSoon()),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._cell.model.onDidChangeInternalMetadata(() =>\n\t\t\t\tthis._updateSoon(),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._cell.model.onDidChangeOutputs(() => this._updateSoon()),\n\t\t);\n\t}\n\n\tpublic update(): void {\n\t\tthis._updateSoon();\n\t}\n\tprivate _updateSoon(): void {\n\t\t// Wait a tick to make sure that the event is fired to the EH before triggering status bar providers\n\t\tsetTimeout(() => {\n\t\t\tif (!this._isDisposed) {\n\t\t\t\tthis._updateThrottler.queue(() => this._update());\n\t\t\t}\n\t\t}, 0);\n\t}\n\n\tprivate async _update() {\n\t\tconst cellIndex = this._notebookViewModel.getCellIndex(this._cell);\n\t\tconst docUri = this._notebookViewModel.notebookDocument.uri;\n\t\tconst viewType = this._notebookViewModel.notebookDocument.viewType;\n\n\t\tthis._activeToken?.dispose(true);\n\t\tconst tokenSource = (this._activeToken = new CancellationTokenSource());\n\t\tconst itemLists =\n\t\t\tawait this._notebookCellStatusBarService.getStatusBarItemsForCell(\n\t\t\t\tdocUri,\n\t\t\t\tcellIndex,\n\t\t\t\tviewType,\n\t\t\t\ttokenSource.token,\n\t\t\t);\n\t\tif (tokenSource.token.isCancellationRequested) {\n\t\t\titemLists.forEach(\n\t\t\t\t(itemList) => itemList.dispose && itemList.dispose(),\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst items = itemLists.flatMap((itemList) => itemList.items);\n\t\tconst newIds = this._notebookViewModel.deltaCellStatusBarItems(\n\t\t\tthis._currentItemIds,\n\t\t\t[{ handle: this._cell.handle, items }],\n\t\t);\n\n\t\tthis._currentItemLists.forEach(\n\t\t\t(itemList) => itemList.dispose && itemList.dispose(),\n\t\t);\n\t\tthis._currentItemLists = itemLists;\n\t\tthis._currentItemIds = newIds;\n\t}\n\n\toverride dispose() {\n\t\tsuper.dispose();\n\t\tthis._isDisposed = true;\n\t\tthis._activeToken?.dispose(true);\n\n\t\tthis._notebookViewModel.deltaCellStatusBarItems(this._currentItemIds, [\n\t\t\t{ handle: this._cell.handle, items: [] },\n\t\t]);\n\t\tthis._currentItemLists.forEach(\n\t\t\t(itemList) => itemList.dispose && itemList.dispose(),\n\t\t);\n\t}\n}\n\nregisterNotebookContribution(\n\tContributedStatusBarItemController.id,\n\tContributedStatusBarItemController,\n);\n"],
  "mappings": "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",
  "names": []
}
