{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/cellStatusBar/statusBarProviders.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { CancellationToken } from \"../../../../../../base/common/cancellation.js\";\nimport { Disposable } from \"../../../../../../base/common/lifecycle.js\";\nimport { ResourceMap } from \"../../../../../../base/common/map.js\";\nimport type { URI } from \"../../../../../../base/common/uri.js\";\nimport { ILanguageService } from \"../../../../../../editor/common/languages/language.js\";\nimport { localize } from \"../../../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../../../platform/configuration/common/configuration.js\";\nimport { IInstantiationService } from \"../../../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../../../platform/keybinding/common/keybinding.js\";\nimport { Registry } from \"../../../../../../platform/registry/common/platform.js\";\nimport {\n\ttype IWorkbenchContributionsRegistry,\n\tExtensions as WorkbenchExtensions,\n} from \"../../../../../common/contributions.js\";\nimport {\n\tILanguageDetectionService,\n\ttype LanguageDetectionHintConfig,\n} from \"../../../../../services/languageDetection/common/languageDetectionWorkerService.js\";\nimport { LifecyclePhase } from \"../../../../../services/lifecycle/common/lifecycle.js\";\nimport { INotebookCellStatusBarService } from \"../../../common/notebookCellStatusBarService.js\";\nimport {\n\tCellKind,\n\tCellStatusbarAlignment,\n\ttype INotebookCellStatusBarItem,\n\ttype INotebookCellStatusBarItemList,\n\ttype INotebookCellStatusBarItemProvider,\n} from \"../../../common/notebookCommon.js\";\nimport { INotebookKernelService } from \"../../../common/notebookKernelService.js\";\nimport { INotebookService } from \"../../../common/notebookService.js\";\nimport {\n\tCHANGE_CELL_LANGUAGE,\n\tDETECT_CELL_LANGUAGE,\n} from \"../../notebookBrowser.js\";\n\nclass CellStatusBarLanguagePickerProvider\n\timplements INotebookCellStatusBarItemProvider\n{\n\treadonly viewType = \"*\";\n\n\tconstructor(\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t) { }\n\n\tasync provideCellStatusBarItems(\n\t\turi: URI,\n\t\tindex: number,\n\t\t_token: CancellationToken,\n\t): Promise<INotebookCellStatusBarItemList | undefined> {\n\t\tconst doc = this._notebookService.getNotebookTextModel(uri);\n\t\tconst cell = doc?.cells[index];\n\t\tif (!cell) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst statusBarItems: INotebookCellStatusBarItem[] = [];\n\t\tlet displayLanguage = cell.language;\n\t\tif (cell.cellKind === CellKind.Markup) {\n\t\t\tdisplayLanguage = \"markdown\";\n\t\t} else {\n\t\t\tconst registeredId =\n\t\t\t\tthis._languageService.getLanguageIdByLanguageName(\n\t\t\t\t\tcell.language,\n\t\t\t\t);\n\t\t\tif (registeredId) {\n\t\t\t\tdisplayLanguage =\n\t\t\t\t\tthis._languageService.getLanguageName(displayLanguage) ??\n\t\t\t\t\tdisplayLanguage;\n\t\t\t} else {\n\t\t\t\t// add unregistered lanugage warning item\n\t\t\t\tconst searchTooltip = localize(\n\t\t\t\t\t\"notebook.cell.status.searchLanguageExtensions\",\n\t\t\t\t\t\"Unknown cell language. Click to search for '{0}' extensions\",\n\t\t\t\t\tcell.language,\n\t\t\t\t);\n\t\t\t\tstatusBarItems.push({\n\t\t\t\t\ttext: `$(dialog-warning)`,\n\t\t\t\t\tcommand: {\n\t\t\t\t\t\tid: \"workbench.extensions.search\",\n\t\t\t\t\t\targuments: [`@tag:${cell.language}`],\n\t\t\t\t\t\ttitle: \"Search Extensions\",\n\t\t\t\t\t},\n\t\t\t\t\ttooltip: searchTooltip,\n\t\t\t\t\talignment: CellStatusbarAlignment.Right,\n\t\t\t\t\tpriority: -Number.MAX_SAFE_INTEGER + 1,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tstatusBarItems.push({\n\t\t\ttext: displayLanguage,\n\t\t\tcommand: CHANGE_CELL_LANGUAGE,\n\t\t\ttooltip: localize(\n\t\t\t\t\"notebook.cell.status.language\",\n\t\t\t\t\"Select Cell Language Mode\",\n\t\t\t),\n\t\t\talignment: CellStatusbarAlignment.Right,\n\t\t\tpriority: -Number.MAX_SAFE_INTEGER,\n\t\t});\n\t\treturn {\n\t\t\titems: statusBarItems,\n\t\t};\n\t}\n}\n\nclass CellStatusBarLanguageDetectionProvider\n\timplements INotebookCellStatusBarItemProvider\n{\n\treadonly viewType = \"*\";\n\n\tprivate cache = new ResourceMap<{\n\t\tcontentVersion: number;\n\t\tupdateTimestamp: number;\n\t\tcellLanguage: string;\n\n\t\tguess?: string;\n\t}>();\n\n\tconstructor(\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t\t@INotebookKernelService private readonly _notebookKernelService: INotebookKernelService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@ILanguageDetectionService private readonly _languageDetectionService: ILanguageDetectionService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t) { }\n\n\tasync provideCellStatusBarItems(\n\t\turi: URI,\n\t\tindex: number,\n\t\ttoken: CancellationToken,\n\t): Promise<INotebookCellStatusBarItemList | undefined> {\n\t\tconst doc = this._notebookService.getNotebookTextModel(uri);\n\t\tconst cell = doc?.cells[index];\n\t\tif (!cell) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst enablementConfig =\n\t\t\tthis._configurationService.getValue<LanguageDetectionHintConfig>(\n\t\t\t\t\"workbench.editor.languageDetectionHints\",\n\t\t\t);\n\t\tconst enabled =\n\t\t\ttypeof enablementConfig === \"object\" &&\n\t\t\tenablementConfig?.notebookEditors;\n\t\tif (!enabled) {\n\t\t\treturn;\n\t\t}\n\t\tconst cellUri = cell.uri;\n\t\tconst contentVersion = cell.textModel?.getVersionId();\n\t\tif (!contentVersion) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentLanguageId =\n\t\t\tcell.cellKind === CellKind.Markup\n\t\t\t\t? \"markdown\"\n\t\t\t\t: this._languageService.getLanguageIdByLanguageName(\n\t\t\t\t\t\tcell.language,\n\t\t\t\t\t) || cell.language;\n\n\t\tif (!this.cache.has(cellUri)) {\n\t\t\tthis.cache.set(cellUri, {\n\t\t\t\tcellLanguage: currentLanguageId, // force a re-compute upon a change in configured language\n\t\t\t\tupdateTimestamp: 0, // facilitates a disposable-free debounce operation\n\t\t\t\tcontentVersion: 1, // dont run for the initial contents, only on update\n\t\t\t});\n\t\t}\n\n\t\tconst cached = this.cache.get(cellUri)!;\n\t\tif (\n\t\t\tcached.cellLanguage !== currentLanguageId ||\n\t\t\t(cached.updateTimestamp < Date.now() - 1000 &&\n\t\t\t\tcached.contentVersion !== contentVersion)\n\t\t) {\n\t\t\tcached.updateTimestamp = Date.now();\n\t\t\tcached.cellLanguage = currentLanguageId;\n\t\t\tcached.contentVersion = contentVersion;\n\n\t\t\tconst kernel =\n\t\t\t\tthis._notebookKernelService.getSelectedOrSuggestedKernel(doc);\n\t\t\tif (kernel) {\n\t\t\t\tconst supportedLangs = [\n\t\t\t\t\t...kernel.supportedLanguages,\n\t\t\t\t\t\"markdown\",\n\t\t\t\t];\n\t\t\t\tcached.guess =\n\t\t\t\t\tawait this._languageDetectionService.detectLanguage(\n\t\t\t\t\t\tcell.uri,\n\t\t\t\t\t\tsupportedLangs,\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst items: INotebookCellStatusBarItem[] = [];\n\t\tif (cached.guess && currentLanguageId !== cached.guess) {\n\t\t\tconst detectedName =\n\t\t\t\tthis._languageService.getLanguageName(cached.guess) ||\n\t\t\t\tcached.guess;\n\t\t\tlet tooltip = localize(\n\t\t\t\t\"notebook.cell.status.autoDetectLanguage\",\n\t\t\t\t\"Accept Detected Language: {0}\",\n\t\t\t\tdetectedName,\n\t\t\t);\n\t\t\tconst keybinding =\n\t\t\t\tthis._keybindingService.lookupKeybinding(DETECT_CELL_LANGUAGE);\n\t\t\tconst label = keybinding?.getLabel();\n\t\t\tif (label) {\n\t\t\t\ttooltip += ` (${label})`;\n\t\t\t}\n\t\t\titems.push({\n\t\t\t\ttext: \"$(lightbulb-autofix)\",\n\t\t\t\tcommand: DETECT_CELL_LANGUAGE,\n\t\t\t\ttooltip,\n\t\t\t\talignment: CellStatusbarAlignment.Right,\n\t\t\t\tpriority: -Number.MAX_SAFE_INTEGER + 1,\n\t\t\t});\n\t\t}\n\n\t\treturn { items };\n\t}\n}\n\nclass BuiltinCellStatusBarProviders extends Disposable {\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@INotebookCellStatusBarService notebookCellStatusBarService: INotebookCellStatusBarService,\n\t) {\n\t\tsuper();\n\n\t\tconst builtinProviders = [\n\t\t\tCellStatusBarLanguagePickerProvider,\n\t\t\tCellStatusBarLanguageDetectionProvider,\n\t\t];\n\t\tbuiltinProviders.forEach((p) => {\n\t\t\tthis._register(\n\t\t\t\tnotebookCellStatusBarService.registerCellStatusBarItemProvider(\n\t\t\t\t\tinstantiationService.createInstance(p),\n\t\t\t\t),\n\t\t\t);\n\t\t});\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n).registerWorkbenchContribution(\n\tBuiltinCellStatusBarProviders,\n\tLifecyclePhase.Restored,\n);\n"],
  "mappings": "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",
  "names": []
}
