import{Codicon as E}from"../../../../../../base/common/codicons.js";import{KeyChord as P,KeyCode as r,KeyMod as C}from"../../../../../../base/common/keyCodes.js";import{EditorContextKeys as x}from"../../../../../../editor/common/editorContextKeys.js";import{localize as i,localize2 as m}from"../../../../../../nls.js";import{CONTEXT_ACCESSIBILITY_MODE_ENABLED as _}from"../../../../../../platform/accessibility/common/accessibility.js";import{MenuId as I,MenuRegistry as M,registerAction2 as s}from"../../../../../../platform/actions/common/actions.js";import{ICommandService as $}from"../../../../../../platform/commands/common/commands.js";import{IConfigurationService as X}from"../../../../../../platform/configuration/common/configuration.js";import{ContextKeyExpr as o}from"../../../../../../platform/contextkey/common/contextkey.js";import{InputFocusedContextKey as A}from"../../../../../../platform/contextkey/common/contextkeys.js";import"../../../../../../platform/instantiation/common/instantiation.js";import{KeybindingWeight as c}from"../../../../../../platform/keybinding/common/keybindingsRegistry.js";import{CTX_INLINE_CHAT_FOCUSED as u,CTX_INLINE_CHAT_INNER_CURSOR_FIRST as V,CTX_INLINE_CHAT_INNER_CURSOR_LAST as Y,CTX_INLINE_CHAT_RESPONSE_TYPE as j,InlineChatResponseType as z}from"../../../../inlineChat/common/inlineChat.js";import{CellKind as q,NOTEBOOK_EDITOR_CURSOR_BOUNDARY as S,NotebookSetting as p}from"../../../common/notebookCommon.js";import{NOTEBOOK_CELL_EDITOR_FOCUSED as k,NOTEBOOK_CELL_GENERATED_BY_CHAT as Q,NOTEBOOK_EDITOR_EDITABLE as w,NOTEBOOK_EDITOR_FOCUSED as T}from"../../../common/notebookContextKeys.js";import{CellEditState as J}from"../../notebookBrowser.js";import{CELL_TITLE_CELL_GROUP_ID as Z,getEditorFromArgsOrActivePane as U,NotebookAction as d,NotebookCellAction as O}from"../coreActions.js";import{insertNewCell as ee}from"../insertCellActions.js";import{CTX_NOTEBOOK_CELL_CHAT_FOCUSED as b,CTX_NOTEBOOK_CHAT_HAS_ACTIVE_REQUEST as F,CTX_NOTEBOOK_CHAT_HAS_AGENT as y,CTX_NOTEBOOK_CHAT_OUTER_FOCUS_POSITION as W,CTX_NOTEBOOK_CHAT_USER_DID_EDIT as R,MENU_CELL_CHAT_INPUT as H,MENU_CELL_CHAT_WIDGET as oe,MENU_CELL_CHAT_WIDGET_STATUS as K}from"./notebookChatContext.js";import{NotebookChatController as a}from"./notebookChatController.js";s(class extends d{constructor(){super({id:"notebook.cell.chat.accept",title:m("notebook.cell.chat.accept","Make Request"),icon:E.send,keybinding:{when:o.and(b,u,k.negate()),weight:c.WorkbenchContrib,primary:r.Enter},menu:{id:H,group:"navigation",order:1,when:F.negate()},f1:!1})}async runWithContext(t,e){a.get(e.notebookEditor)?.acceptInput()}}),s(class extends O{constructor(){super({id:"notebook.cell.chat.arrowOutUp",title:i("arrowUp","Cursor Up"),keybinding:{when:o.and(b,u,V,k.negate(),_.negate()),weight:c.EditorCore+7,primary:C.CtrlCmd|r.UpArrow},f1:!1})}async runWithContext(t,e){const n=e.notebookEditor,h=e.cell,g=n.getCellIndex(h);if(typeof g!="number"||g<1||n.getLength()===0)return;const l=n.cellAt(g-1),f=l.cellKind===q.Markup&&l.getEditState()===J.Preview?"container":"editor",v=l.textBuffer.getLineCount();await n.focusNotebookCell(l,f,{focusEditorLine:v})}}),s(class extends d{constructor(){super({id:"notebook.cell.chat.arrowOutDown",title:i("arrowDown","Cursor Down"),keybinding:{when:o.and(b,u,Y,k.negate(),_.negate()),weight:c.EditorCore+7,primary:C.CtrlCmd|r.DownArrow},f1:!1})}async runWithContext(t,e){await a.get(e.notebookEditor)?.focusNext()}}),s(class extends O{constructor(){super({id:"notebook.cell.focusChatWidget",title:i("focusChatWidget","Focus Chat Widget"),keybinding:{when:o.and(T,_.negate(),o.and(o.has(A),x.editorTextFocus,S.notEqualsTo("bottom"),S.notEqualsTo("none")),x.isEmbeddedDiffEditor.negate()),weight:c.EditorCore+7,primary:C.CtrlCmd|r.UpArrow},f1:!1})}async runWithContext(t,e){const n=e.notebookEditor.getCellIndex(e.cell);await a.get(e.notebookEditor)?.focusNearestWidget(n,"above")}}),s(class extends O{constructor(){super({id:"notebook.cell.focusNextChatWidget",title:i("focusNextChatWidget","Focus Next Cell Chat Widget"),keybinding:{when:o.and(T,_.negate(),o.and(o.has(A),x.editorTextFocus,S.notEqualsTo("top"),S.notEqualsTo("none")),x.isEmbeddedDiffEditor.negate()),weight:c.EditorCore+7,primary:C.CtrlCmd|r.DownArrow},f1:!1})}async runWithContext(t,e){const n=e.notebookEditor.getCellIndex(e.cell);await a.get(e.notebookEditor)?.focusNearestWidget(n,"below")}}),s(class extends d{constructor(){super({id:"notebook.cell.chat.stop",title:m("notebook.cell.chat.stop","Stop Request"),icon:E.debugStop,menu:{id:H,group:"navigation",order:1,when:F},f1:!1})}async runWithContext(t,e){a.get(e.notebookEditor)?.cancelCurrentRequest(!1)}}),s(class extends d{constructor(){super({id:"notebook.cell.chat.close",title:m("notebook.cell.chat.close","Close Chat"),icon:E.close,menu:{id:oe,group:"navigation",order:2},f1:!1})}async runWithContext(t,e){a.get(e.notebookEditor)?.dismiss(!1)}}),s(class extends d{constructor(){super({id:"notebook.cell.chat.acceptChanges",title:m("apply1","Accept Changes"),shortTitle:i("apply2","Accept"),icon:E.check,tooltip:i("apply3","Accept Changes"),keybinding:[{when:o.and(b,u,k.negate()),weight:c.EditorContrib+10,primary:C.CtrlCmd|r.Enter},{when:o.and(b,u,R,k.negate()),weight:c.EditorCore+10,primary:r.Escape},{when:o.and(T,o.not(A),k.negate(),W.isEqualTo("below")),primary:C.CtrlCmd|r.Enter,weight:c.WorkbenchContrib}],menu:[{id:K,group:"0_main",order:0,when:j.notEqualsTo(z.Messages)}],f1:!1})}async runWithContext(t,e){a.get(e.notebookEditor)?.acceptSession()}}),s(class extends d{constructor(){super({id:"notebook.cell.chat.discard",title:i("discard","Discard"),icon:E.discard,keybinding:{when:o.and(b,u,R.negate(),k.negate()),weight:c.EditorContrib,primary:r.Escape},menu:{id:K,group:"0_main",order:1},f1:!1})}async runWithContext(t,e){a.get(e.notebookEditor)?.discard()}});async function G(t,e,n,h,g,l){const f=t.get(X),v=t.get($);if(f.getValue(p.cellChat))e.notebookEditor.focusContainer(),a.get(e.notebookEditor)?.run(n,h,g);else if(f.getValue(p.cellGenerate)){const L=e.notebookEditor.getActiveCell(),N=L?.getTextLength()===0&&l!=="insertToolbar"?L:await ee(t,e,q.Code,"below",!0);if(N){N.enableAutoLanguageDetection(),await e.notebookEditor.revealFirstLineIfOutsideViewport(N);const D=e.notebookEditor.codeEditors.find(B=>B[0]===N)?.[1];D&&(D.focus(),v.executeCommand("inlineChat.start"))}}}s(class extends d{constructor(){super({id:"notebook.cell.chat.start",title:{value:"$(sparkle) "+i("notebookActions.menu.insertCodeCellWithChat","Generate"),original:"$(sparkle) Generate"},tooltip:i("notebookActions.menu.insertCodeCellWithChat.tooltip","Start Chat to Generate Code"),metadata:{description:i("notebookActions.menu.insertCodeCellWithChat.tooltip","Start Chat to Generate Code"),args:[{name:"args",schema:{type:"object",required:["index"],properties:{index:{type:"number"},input:{type:"string"},autoSend:{type:"boolean"}}}}]},f1:!1,keybinding:{when:o.and(T,w.isEqualTo(!0),o.not(A),y,o.or(o.equals(`config.${p.cellChat}`,!0),o.equals(`config.${p.cellGenerate}`,!0))),weight:c.WorkbenchContrib,primary:C.CtrlCmd|r.KeyI,secondary:[P(C.CtrlCmd|r.KeyK,r.KeyI)]},menu:[{id:I.NotebookCellBetween,group:"inline",order:-1,when:o.and(w.isEqualTo(!0),y,o.or(o.equals(`config.${p.cellChat}`,!0),o.equals(`config.${p.cellGenerate}`,!0)))}]})}getEditorContextFromArgsOrActive(t,...e){const[n]=e;if(!n){const l=U(t);if(!l)return;const f=l.getActiveCell();return f?{cell:f,notebookEditor:l,input:void 0,autoSend:void 0}:void 0}if(typeof n!="object"||typeof n.index!="number")return;const h=U(t);return h?{cell:n.index<=0?void 0:h.cellAt(n.index-1),notebookEditor:h,input:n.input,autoSend:n.autoSend}:void 0}async runWithContext(t,e){const n=Math.max(0,e.cell?e.notebookEditor.getCellIndex(e.cell)+1:0);await G(t,e,n,e.input,e.autoSend,e.source)}}),s(class extends d{constructor(){super({id:"notebook.cell.chat.startAtTop",title:{value:"$(sparkle) "+i("notebookActions.menu.insertCodeCellWithChat","Generate"),original:"$(sparkle) Generate"},tooltip:i("notebookActions.menu.insertCodeCellWithChat.tooltip","Start Chat to Generate Code"),f1:!1,menu:[{id:I.NotebookCellListTop,group:"inline",order:-1,when:o.and(w.isEqualTo(!0),y,o.or(o.equals(`config.${p.cellChat}`,!0),o.equals(`config.${p.cellGenerate}`,!0)))}]})}async runWithContext(t,e){await G(t,e,0,"",!1)}}),M.appendMenuItem(I.NotebookToolbar,{command:{id:"notebook.cell.chat.start",icon:E.sparkle,title:i("notebookActions.menu.insertCode.ontoolbar","Generate"),tooltip:i("notebookActions.menu.insertCode.tooltip","Start Chat to Generate Code")},order:-10,group:"navigation/add",when:o.and(w.isEqualTo(!0),o.notEquals("config.notebook.insertToolbarLocation","betweenCells"),o.notEquals("config.notebook.insertToolbarLocation","hidden"),y,o.or(o.equals(`config.${p.cellChat}`,!0),o.equals(`config.${p.cellGenerate}`,!0)))}),s(class extends d{constructor(){super({id:"notebook.cell.chat.focus",title:i("focusNotebookChat","Focus Chat"),keybinding:[{when:o.and(T,o.not(A),W.isEqualTo("above")),primary:C.CtrlCmd|r.DownArrow,weight:c.WorkbenchContrib},{when:o.and(T,o.not(A),W.isEqualTo("below")),primary:C.CtrlCmd|r.UpArrow,weight:c.WorkbenchContrib}],f1:!1})}async runWithContext(t,e){a.get(e.notebookEditor)?.focus()}}),s(class extends d{constructor(){super({id:"notebook.cell.chat.focusNextCell",title:i("focusNextCell","Focus Next Cell"),keybinding:[{when:o.and(b,u),primary:C.CtrlCmd|r.DownArrow,weight:c.WorkbenchContrib}],f1:!1})}async runWithContext(t,e){a.get(e.notebookEditor)?.focusNext()}}),s(class extends d{constructor(){super({id:"notebook.cell.chat.focusPreviousCell",title:i("focusPreviousCell","Focus Previous Cell"),keybinding:[{when:o.and(b,u),primary:C.CtrlCmd|r.UpArrow,weight:c.WorkbenchContrib}],f1:!1})}async runWithContext(t,e){a.get(e.notebookEditor)?.focusAbove()}}),s(class extends d{constructor(){super({id:"notebook.cell.chat.previousFromHistory",title:m("notebook.cell.chat.previousFromHistory","Previous From History"),precondition:o.and(b,u),keybinding:{when:o.and(b,u),weight:c.EditorCore+10,primary:r.UpArrow},f1:!1})}async runWithContext(t,e){a.get(e.notebookEditor)?.populateHistory(!0)}}),s(class extends d{constructor(){super({id:"notebook.cell.chat.nextFromHistory",title:m("notebook.cell.chat.nextFromHistory","Next From History"),precondition:o.and(b,u),keybinding:{when:o.and(b,u),weight:c.EditorCore+10,primary:r.DownArrow},f1:!1})}async runWithContext(t,e){a.get(e.notebookEditor)?.populateHistory(!1)}}),s(class extends O{constructor(){super({id:"notebook.cell.chat.restore",title:m("notebookActions.restoreCellprompt","Generate"),icon:E.sparkle,menu:{id:I.NotebookCellTitle,group:Z,order:0,when:o.and(w.isEqualTo(!0),y,Q,o.equals(`config.${p.cellChat}`,!0))},f1:!1})}async runWithContext(t,e){const n=e.cell;if(!n)return;const h=e.notebookEditor,g=a.get(h);if(!g)return;const l=g.getPromptFromCache(n);l&&g.restore(n,l)}});
