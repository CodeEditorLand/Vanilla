import{Codicon as f}from"../../../../../../base/common/codicons.js";import{KeyChord as $,KeyCode as i,KeyMod as C}from"../../../../../../base/common/keyCodes.js";import{EditorContextKeys as x}from"../../../../../../editor/common/editorContextKeys.js";import{localize as r,localize2 as k}from"../../../../../../nls.js";import{CONTEXT_ACCESSIBILITY_MODE_ENABLED as S}from"../../../../../../platform/accessibility/common/accessibility.js";import{MenuId as O,MenuRegistry as V,registerAction2 as s}from"../../../../../../platform/actions/common/actions.js";import{ICommandService as Y}from"../../../../../../platform/commands/common/commands.js";import{IConfigurationService as j}from"../../../../../../platform/configuration/common/configuration.js";import{ContextKeyExpr as o}from"../../../../../../platform/contextkey/common/contextkey.js";import{InputFocusedContextKey as _}from"../../../../../../platform/contextkey/common/contextkeys.js";import"../../../../../../platform/instantiation/common/instantiation.js";import{KeybindingWeight as a}from"../../../../../../platform/keybinding/common/keybindingsRegistry.js";import{CTX_INLINE_CHAT_DOCUMENT_CHANGED as z,CTX_INLINE_CHAT_EDIT_MODE as Q,CTX_INLINE_CHAT_FOCUSED as u,CTX_INLINE_CHAT_INNER_CURSOR_FIRST as J,CTX_INLINE_CHAT_INNER_CURSOR_LAST as Z,CTX_INLINE_CHAT_REQUEST_IN_PROGRESS as ee,CTX_INLINE_CHAT_RESPONSE_TYPE as H,CTX_INLINE_CHAT_VISIBLE as oe,EditMode as te,InlineChatResponseType as q,MENU_INLINE_CHAT_WIDGET_STATUS as ne}from"../../../../inlineChat/common/inlineChat.js";import{CTX_NOTEBOOK_CELL_CHAT_FOCUSED as p,CTX_NOTEBOOK_CHAT_HAS_ACTIVE_REQUEST as R,CTX_NOTEBOOK_CHAT_HAS_AGENT as I,CTX_NOTEBOOK_CHAT_OUTER_FOCUS_POSITION as L,CTX_NOTEBOOK_CHAT_USER_DID_EDIT as U,MENU_CELL_CHAT_INPUT as F,MENU_CELL_CHAT_WIDGET as re,MENU_CELL_CHAT_WIDGET_STATUS as K}from"./notebookChatContext.js";import{NotebookChatController as l}from"./notebookChatController.js";import{CELL_TITLE_CELL_GROUP_ID as ie,NotebookAction as d,NotebookCellAction as v,getContextFromActiveEditor as se,getEditorFromArgsOrActivePane as G}from"../coreActions.js";import{insertNewCell as ce}from"../insertCellActions.js";import{CellEditState as ae}from"../../notebookBrowser.js";import{CellKind as P,NOTEBOOK_EDITOR_CURSOR_BOUNDARY as W,NotebookSetting as E}from"../../../common/notebookCommon.js";import{IS_COMPOSITE_NOTEBOOK as B,NOTEBOOK_CELL_EDITOR_FOCUSED as g,NOTEBOOK_CELL_GENERATED_BY_CHAT as le,NOTEBOOK_EDITOR_EDITABLE as A,NOTEBOOK_EDITOR_FOCUSED as N}from"../../../common/notebookContextKeys.js";import{Iterable as de}from"../../../../../../base/common/iterator.js";import"../../../../../../editor/browser/editorBrowser.js";import{IEditorService as Ce}from"../../../../../services/editor/common/editorService.js";import{CONTEXT_CHAT_INPUT_HAS_TEXT as ue}from"../../../../chat/common/chatContextKeys.js";import{AbstractInlineChatAction as pe}from"../../../../inlineChat/browser/inlineChatActions.js";import"../../../../inlineChat/browser/inlineChatController.js";import"../../../../inlineChat/browser/inlineChatSession.js";s(class extends d{constructor(){super({id:"notebook.cell.chat.accept",title:k("notebook.cell.chat.accept","Make Request"),icon:f.send,keybinding:{when:o.and(p,u,g.negate()),weight:a.WorkbenchContrib,primary:i.Enter},menu:{id:F,group:"navigation",order:1,when:R.negate()},f1:!1})}async runWithContext(t,e){l.get(e.notebookEditor)?.acceptInput()}}),s(class extends v{constructor(){super({id:"notebook.cell.chat.arrowOutUp",title:r("arrowUp","Cursor Up"),keybinding:{when:o.and(p,u,J,g.negate(),S.negate()),weight:a.EditorCore+7,primary:C.CtrlCmd|i.UpArrow},f1:!1})}async runWithContext(t,e){const n=e.notebookEditor,b=e.cell,h=n.getCellIndex(b);if(typeof h!="number"||h<1||n.getLength()===0)return;const c=n.cellAt(h-1),m=c.cellKind===P.Markup&&c.getEditState()===ae.Preview?"container":"editor",T=c.textBuffer.getLineCount();await n.focusNotebookCell(c,m,{focusEditorLine:T})}}),s(class extends d{constructor(){super({id:"notebook.cell.chat.arrowOutDown",title:r("arrowDown","Cursor Down"),keybinding:{when:o.and(p,u,Z,g.negate(),S.negate()),weight:a.EditorCore+7,primary:C.CtrlCmd|i.DownArrow},f1:!1})}async runWithContext(t,e){await l.get(e.notebookEditor)?.focusNext()}}),s(class extends v{constructor(){super({id:"notebook.cell.focusChatWidget",title:r("focusChatWidget","Focus Chat Widget"),keybinding:{when:o.and(N,S.negate(),o.and(o.has(_),x.editorTextFocus,W.notEqualsTo("bottom"),W.notEqualsTo("none")),x.isEmbeddedDiffEditor.negate()),weight:a.EditorCore+7,primary:C.CtrlCmd|i.UpArrow},f1:!1})}async runWithContext(t,e){const n=e.notebookEditor.getCellIndex(e.cell);await l.get(e.notebookEditor)?.focusNearestWidget(n,"above")}}),s(class extends v{constructor(){super({id:"notebook.cell.focusNextChatWidget",title:r("focusNextChatWidget","Focus Next Cell Chat Widget"),keybinding:{when:o.and(S.negate(),o.and(o.has(_),x.editorTextFocus,W.notEqualsTo("top"),W.notEqualsTo("none")),x.isEmbeddedDiffEditor.negate()),weight:a.EditorCore+7,primary:C.CtrlCmd|i.DownArrow},f1:!1,precondition:o.or(o.and(B.negate(),g),o.and(B,g.negate()))})}async runWithContext(t,e){const n=e.notebookEditor.getCellIndex(e.cell);await l.get(e.notebookEditor)?.focusNearestWidget(n,"below")}}),s(class extends d{constructor(){super({id:"notebook.cell.chat.stop",title:k("notebook.cell.chat.stop","Stop Request"),icon:f.debugStop,menu:{id:F,group:"navigation",order:1,when:R},f1:!1})}async runWithContext(t,e){l.get(e.notebookEditor)?.cancelCurrentRequest(!1)}}),s(class extends d{constructor(){super({id:"notebook.cell.chat.close",title:k("notebook.cell.chat.close","Close Chat"),icon:f.close,menu:{id:re,group:"navigation",order:2},f1:!1})}async runWithContext(t,e){l.get(e.notebookEditor)?.dismiss(!1)}}),s(class extends d{constructor(){super({id:"notebook.cell.chat.acceptChanges",title:k("apply1","Accept Changes"),shortTitle:r("apply2","Accept"),icon:f.check,tooltip:r("apply3","Accept Changes"),keybinding:[{when:o.and(p,u,g.negate()),weight:a.EditorContrib+10,primary:C.CtrlCmd|i.Enter},{when:o.and(p,u,U,g.negate()),weight:a.EditorCore+10,primary:i.Escape},{when:o.and(N,o.not(_),g.negate(),L.isEqualTo("below")),primary:C.CtrlCmd|i.Enter,weight:a.WorkbenchContrib}],menu:[{id:K,group:"0_main",order:0,when:H.notEqualsTo(q.Messages)}],f1:!1})}async runWithContext(t,e){l.get(e.notebookEditor)?.acceptSession()}}),s(class extends d{constructor(){super({id:"notebook.cell.chat.discard",title:r("discard","Discard"),icon:f.discard,keybinding:{when:o.and(p,u,U.negate(),g.negate()),weight:a.EditorContrib,primary:i.Escape},menu:{id:K,group:"0_main",order:1},f1:!1})}async runWithContext(t,e){l.get(e.notebookEditor)?.discard()}});async function M(t,e,n,b,h,c){const m=t.get(j),T=t.get(Y);if(m.getValue(E.cellGenerate)||m.getValue(E.cellChat)){const y=e.notebookEditor.getActiveCell(),w=y?.getTextLength()===0&&c!=="insertToolbar"?y:await ce(t,e,P.Code,"below",!0);if(w){w.enableAutoLanguageDetection(),await e.notebookEditor.revealFirstLineIfOutsideViewport(w);const D=e.notebookEditor.codeEditors.find(X=>X[0]===w)?.[1];D&&(D.focus(),T.executeCommand("inlineChat.start"))}}}s(class extends d{constructor(){super({id:"notebook.cell.chat.start",title:{value:"$(sparkle) "+r("notebookActions.menu.insertCodeCellWithChat","Generate"),original:"$(sparkle) Generate"},tooltip:r("notebookActions.menu.insertCodeCellWithChat.tooltip","Start Chat to Generate Code"),metadata:{description:r("notebookActions.menu.insertCodeCellWithChat.tooltip","Start Chat to Generate Code"),args:[{name:"args",schema:{type:"object",required:["index"],properties:{index:{type:"number"},input:{type:"string"},autoSend:{type:"boolean"}}}}]},f1:!1,keybinding:{when:o.and(N,A.isEqualTo(!0),o.not(_),I,o.or(o.equals(`config.${E.cellChat}`,!0),o.equals(`config.${E.cellGenerate}`,!0))),weight:a.WorkbenchContrib,primary:C.CtrlCmd|i.KeyI,secondary:[$(C.CtrlCmd|i.KeyK,i.KeyI)]},menu:[{id:O.NotebookCellBetween,group:"inline",order:-1,when:o.and(A.isEqualTo(!0),I,o.or(o.equals(`config.${E.cellChat}`,!0),o.equals(`config.${E.cellGenerate}`,!0)))}]})}getEditorContextFromArgsOrActive(t,...e){const[n]=e;if(!n){const c=G(t);if(!c)return;const m=c.getActiveCell();return m?{cell:m,notebookEditor:c,input:void 0,autoSend:void 0}:void 0}if(typeof n!="object"||typeof n.index!="number")return;const b=G(t);return b?{cell:n.index<=0?void 0:b.cellAt(n.index-1),notebookEditor:b,input:n.input,autoSend:n.autoSend}:void 0}async runWithContext(t,e){const n=Math.max(0,e.cell?e.notebookEditor.getCellIndex(e.cell)+1:0);await M(t,e,n,e.input,e.autoSend,e.source)}}),s(class extends d{constructor(){super({id:"notebook.cell.chat.startAtTop",title:{value:"$(sparkle) "+r("notebookActions.menu.insertCodeCellWithChat","Generate"),original:"$(sparkle) Generate"},tooltip:r("notebookActions.menu.insertCodeCellWithChat.tooltip","Start Chat to Generate Code"),f1:!1,menu:[{id:O.NotebookCellListTop,group:"inline",order:-1,when:o.and(A.isEqualTo(!0),I,o.or(o.equals(`config.${E.cellChat}`,!0),o.equals(`config.${E.cellGenerate}`,!0)))}]})}async runWithContext(t,e){await M(t,e,0,"",!1)}}),V.appendMenuItem(O.NotebookToolbar,{command:{id:"notebook.cell.chat.start",icon:f.sparkle,title:r("notebookActions.menu.insertCode.ontoolbar","Generate"),tooltip:r("notebookActions.menu.insertCode.tooltip","Start Chat to Generate Code")},order:-10,group:"navigation/add",when:o.and(A.isEqualTo(!0),o.notEquals("config.notebook.insertToolbarLocation","betweenCells"),o.notEquals("config.notebook.insertToolbarLocation","hidden"),I,o.or(o.equals(`config.${E.cellChat}`,!0),o.equals(`config.${E.cellGenerate}`,!0)))}),s(class extends d{constructor(){super({id:"notebook.cell.chat.focus",title:r("focusNotebookChat","Focus Chat"),keybinding:[{when:o.and(N,o.not(_),L.isEqualTo("above")),primary:C.CtrlCmd|i.DownArrow,weight:a.WorkbenchContrib},{when:o.and(N,o.not(_),L.isEqualTo("below")),primary:C.CtrlCmd|i.UpArrow,weight:a.WorkbenchContrib}],f1:!1})}async runWithContext(t,e){l.get(e.notebookEditor)?.focus()}}),s(class extends d{constructor(){super({id:"notebook.cell.chat.focusNextCell",title:r("focusNextCell","Focus Next Cell"),keybinding:[{when:o.and(p,u),primary:C.CtrlCmd|i.DownArrow,weight:a.WorkbenchContrib}],f1:!1})}async runWithContext(t,e){l.get(e.notebookEditor)?.focusNext()}}),s(class extends d{constructor(){super({id:"notebook.cell.chat.focusPreviousCell",title:r("focusPreviousCell","Focus Previous Cell"),keybinding:[{when:o.and(p,u),primary:C.CtrlCmd|i.UpArrow,weight:a.WorkbenchContrib}],f1:!1})}async runWithContext(t,e){l.get(e.notebookEditor)?.focusAbove()}}),s(class extends d{constructor(){super({id:"notebook.cell.chat.previousFromHistory",title:k("notebook.cell.chat.previousFromHistory","Previous From History"),precondition:o.and(p,u),keybinding:{when:o.and(p,u),weight:a.EditorCore+10,primary:i.UpArrow},f1:!1})}async runWithContext(t,e){l.get(e.notebookEditor)?.populateHistory(!0)}}),s(class extends d{constructor(){super({id:"notebook.cell.chat.nextFromHistory",title:k("notebook.cell.chat.nextFromHistory","Next From History"),precondition:o.and(p,u),keybinding:{when:o.and(p,u),weight:a.EditorCore+10,primary:i.DownArrow},f1:!1})}async runWithContext(t,e){l.get(e.notebookEditor)?.populateHistory(!1)}}),s(class extends v{constructor(){super({id:"notebook.cell.chat.restore",title:k("notebookActions.restoreCellprompt","Generate"),icon:f.sparkle,menu:{id:O.NotebookCellTitle,group:ie,order:0,when:o.and(A.isEqualTo(!0),I,le,o.equals(`config.${E.cellChat}`,!0))},f1:!1})}async runWithContext(t,e){const n=e.cell;if(!n)return;const b=e.notebookEditor,h=l.get(b);if(!h)return;const c=h.getPromptFromCache(n);c&&h.restore(n,c)}});class Ee extends pe{constructor(){super({id:"notebook.inlineChat.acceptChangesAndRun",title:k("notebook.apply1","Accept and Run"),shortTitle:r("notebook.apply2","Accept & Run"),tooltip:r("notebook.apply3","Accept the changes and run the cell"),icon:f.check,f1:!0,precondition:o.and(A.isEqualTo(!0),oe,o.or(z.toNegated(),Q.notEqualsTo(te.Preview))),keybinding:void 0,menu:[{id:ne,group:"0_main",order:2,when:o.and(A.isEqualTo(!0),ue.toNegated(),ee.toNegated(),H.isEqualTo(q.MessagesAndEdits))}]})}async runInlineChatCommand(e,n,b,h){const c=se(e.get(Ce));if(!c)return;const T=c.notebookEditor.codeEditors.find(y=>y[1]===b)?.[0];if(T)return n.acceptSession(),c.notebookEditor.executeNotebookCells(de.single(T))}}s(Ee);export{Ee as AcceptChangesAndRun};
