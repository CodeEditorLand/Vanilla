var d=Object.defineProperty;var _=Object.getOwnPropertyDescriptor;var u=(s,i,o,t)=>{for(var e=t>1?void 0:t?_(i,o):i,n=s.length-1,r;n>=0;n--)(r=s[n])&&(e=(t?r(i,o,e):r(e))||e);return t&&e&&d(i,o,e),e},p=(s,i)=>(o,t)=>i(o,t,s);import*as m from"../../../../../../base/browser/dom.js";import{renderLabelWithIcons as f}from"../../../../../../base/browser/ui/iconLabel/iconLabels.js";import{Disposable as h}from"../../../../../../base/common/lifecycle.js";import{ThemeIcon as b}from"../../../../../../base/common/themables.js";import{localize as l}from"../../../../../../nls.js";import{NotebookCellExecutionState as c}from"../../../common/notebookCommon.js";import{INotebookExecutionStateService as x,NotebookExecutionType as I}from"../../../common/notebookExecutionStateService.js";import{errorStateIcon as S,executingStateIcon as g,pendingStateIcon as k,successStateIcon as v}from"../../notebookIcons.js";let a=class extends h{constructor(o,t,e,n){super();this._cell=t;this._element=e;this._executionStateService=n;this._update(),this._register(this._executionStateService.onDidChangeExecution(r=>{r.type===I.cell&&r.affectsCell(this._cell.uri)&&this._update()})),this._register(this._cell.model.onDidChangeInternalMetadata(()=>this._update()))}_visible=!1;setVisibility(o){this._visible=o,this._update()}_update(){if(!this._visible)return;const o=this._executionStateService.getCellExecution(this._cell.uri),t=this._getItemForState(o,this._cell.model.internalMetadata);t?(this._element.style.display="",m.reset(this._element,...f(t.text)),this._element.title=t.tooltip??""):(this._element.style.display="none",m.reset(this._element))}_getItemForState(o,t){const e=o?.state,{lastRunSuccess:n}=t;if(!e&&n)return{text:`$(${v.id})`,tooltip:l("notebook.cell.status.success","Success")};if(!e&&n===!1)return{text:`$(${S.id})`,tooltip:l("notebook.cell.status.failure","Failure")};if(e===c.Pending||e===c.Unconfirmed)return{text:`$(${k.id})`,tooltip:l("notebook.cell.status.pending","Pending")};if(e===c.Executing)return{text:`$(${b.modify(g,"spin").id})`,tooltip:l("notebook.cell.status.executing","Executing")}}};a=u([p(3,x)],a);export{a as CollapsedCodeCellExecutionIcon};
