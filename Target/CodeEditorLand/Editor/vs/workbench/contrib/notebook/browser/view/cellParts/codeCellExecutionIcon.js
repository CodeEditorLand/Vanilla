var p=Object.defineProperty;var _=Object.getOwnPropertyDescriptor;var u=(l,o,i,t)=>{for(var e=t>1?void 0:t?_(o,i):o,n=l.length-1,r;n>=0;n--)(r=l[n])&&(e=(t?r(o,i,e):r(e))||e);return t&&e&&p(o,i,e),e},m=(l,o)=>(i,t)=>o(i,t,l);import*as d from"../../../../../../../vs/base/browser/dom.js";import{renderLabelWithIcons as f}from"../../../../../../../vs/base/browser/ui/iconLabel/iconLabels.js";import{Disposable as h}from"../../../../../../../vs/base/common/lifecycle.js";import{ThemeIcon as b}from"../../../../../../../vs/base/common/themables.js";import{localize as s}from"../../../../../../../vs/nls.js";import"../../../../../../../vs/workbench/contrib/notebook/browser/notebookBrowser.js";import{errorStateIcon as x,executingStateIcon as I,pendingStateIcon as S,successStateIcon as g}from"../../../../../../../vs/workbench/contrib/notebook/browser/notebookIcons.js";import{NotebookCellExecutionState as c}from"../../../../../../../vs/workbench/contrib/notebook/common/notebookCommon.js";import{INotebookExecutionStateService as k,NotebookExecutionType as v}from"../../../../../../../vs/workbench/contrib/notebook/common/notebookExecutionStateService.js";let a=class extends h{constructor(i,t,e,n){super();this._cell=t;this._element=e;this._executionStateService=n;this._update(),this._register(this._executionStateService.onDidChangeExecution(r=>{r.type===v.cell&&r.affectsCell(this._cell.uri)&&this._update()})),this._register(this._cell.model.onDidChangeInternalMetadata(()=>this._update()))}_visible=!1;setVisibility(i){this._visible=i,this._update()}_update(){if(!this._visible)return;const i=this._executionStateService.getCellExecution(this._cell.uri),t=this._getItemForState(i,this._cell.model.internalMetadata);t?(this._element.style.display="",d.reset(this._element,...f(t.text)),this._element.title=t.tooltip??""):(this._element.style.display="none",d.reset(this._element))}_getItemForState(i,t){const e=i?.state,{lastRunSuccess:n}=t;if(!e&&n)return{text:`$(${g.id})`,tooltip:s("notebook.cell.status.success","Success")};if(!e&&n===!1)return{text:`$(${x.id})`,tooltip:s("notebook.cell.status.failure","Failure")};if(e===c.Pending||e===c.Unconfirmed)return{text:`$(${S.id})`,tooltip:s("notebook.cell.status.pending","Pending")};if(e===c.Executing)return{text:`$(${b.modify(I,"spin").id})`,tooltip:s("notebook.cell.status.executing","Executing")}}};a=u([m(3,k)],a);export{a as CollapsedCodeCellExecutionIcon};
