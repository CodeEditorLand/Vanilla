{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/notebookVariables/notebookVariables.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tDisposable,\n\ttype IDisposable,\n} from \"../../../../../../base/common/lifecycle.js\";\nimport type { URI } from \"../../../../../../base/common/uri.js\";\nimport * as nls from \"../../../../../../nls.js\";\nimport {\n\ttype IConfigurationChangeEvent,\n\tIConfigurationService,\n} from \"../../../../../../platform/configuration/common/configuration.js\";\nimport {\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../../../platform/contextkey/common/contextkey.js\";\nimport { SyncDescriptor } from \"../../../../../../platform/instantiation/common/descriptors.js\";\nimport { Registry } from \"../../../../../../platform/registry/common/platform.js\";\nimport type { IWorkbenchContribution } from \"../../../../../common/contributions.js\";\nimport {\n\tExtensions,\n\ttype IViewContainersRegistry,\n\ttype IViewsRegistry,\n} from \"../../../../../common/views.js\";\nimport { IEditorService } from \"../../../../../services/editor/common/editorService.js\";\nimport { VIEWLET_ID as debugContainerId } from \"../../../../debug/common/debug.js\";\nimport { NotebookSetting } from \"../../../common/notebookCommon.js\";\nimport { INotebookExecutionStateService } from \"../../../common/notebookExecutionStateService.js\";\nimport { INotebookKernelService } from \"../../../common/notebookKernelService.js\";\nimport { INotebookService } from \"../../../common/notebookService.js\";\nimport { getNotebookEditorFromEditorPane } from \"../../notebookBrowser.js\";\nimport { variablesViewIcon } from \"../../notebookIcons.js\";\nimport { NOTEBOOK_VARIABLE_VIEW_ENABLED } from \"./notebookVariableContextKeys.js\";\nimport { NotebookVariablesView } from \"./notebookVariablesView.js\";\n\nexport class NotebookVariables\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tprivate listeners: IDisposable[] = [];\n\tprivate configListener: IDisposable;\n\tprivate initialized = false;\n\n\tprivate viewEnabled: IContextKey<boolean>;\n\n\tconstructor(\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IConfigurationService\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@INotebookExecutionStateService\n\t\tprivate readonly notebookExecutionStateService: INotebookExecutionStateService,\n\t\t@INotebookKernelService\n\t\tprivate readonly notebookKernelService: INotebookKernelService,\n\t\t@INotebookService\n\t\tprivate readonly notebookDocumentService: INotebookService,\n\t) {\n\t\tsuper();\n\n\t\tthis.viewEnabled =\n\t\t\tNOTEBOOK_VARIABLE_VIEW_ENABLED.bindTo(contextKeyService);\n\n\t\tthis.listeners.push(\n\t\t\tthis.editorService.onDidActiveEditorChange(() =>\n\t\t\t\tthis.handleInitEvent(),\n\t\t\t),\n\t\t);\n\t\tthis.listeners.push(\n\t\t\tthis.notebookExecutionStateService.onDidChangeExecution((e) =>\n\t\t\t\tthis.handleInitEvent(e.notebook),\n\t\t\t),\n\t\t);\n\n\t\tthis.configListener = configurationService.onDidChangeConfiguration(\n\t\t\t(e) => this.handleConfigChange(e),\n\t\t);\n\t}\n\n\tprivate handleConfigChange(e: IConfigurationChangeEvent) {\n\t\tif (e.affectsConfiguration(NotebookSetting.notebookVariablesView)) {\n\t\t\tif (\n\t\t\t\t!this.configurationService.getValue(\n\t\t\t\t\tNotebookSetting.notebookVariablesView,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthis.viewEnabled.set(false);\n\t\t\t} else if (this.initialized) {\n\t\t\t\tthis.viewEnabled.set(true);\n\t\t\t} else {\n\t\t\t\tthis.handleInitEvent();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate handleInitEvent(notebook?: URI) {\n\t\tif (\n\t\t\tthis.configurationService.getValue(\n\t\t\t\tNotebookSetting.notebookVariablesView,\n\t\t\t) &&\n\t\t\t(!!notebook ||\n\t\t\t\tthis.editorService.activeEditorPane?.getId() ===\n\t\t\t\t\t\"workbench.editor.notebook\")\n\t\t) {\n\t\t\tif (\n\t\t\t\tthis.hasVariableProvider(notebook) &&\n\t\t\t\t!this.initialized &&\n\t\t\t\tthis.initializeView()\n\t\t\t) {\n\t\t\t\tthis.viewEnabled.set(true);\n\t\t\t\tthis.initialized = true;\n\t\t\t\tthis.listeners.forEach((listener) => listener.dispose());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate hasVariableProvider(notebookUri?: URI) {\n\t\tconst notebook = notebookUri\n\t\t\t? this.notebookDocumentService.getNotebookTextModel(notebookUri)\n\t\t\t: getNotebookEditorFromEditorPane(\n\t\t\t\t\tthis.editorService.activeEditorPane,\n\t\t\t\t)?.getViewModel()?.notebookDocument;\n\t\treturn (\n\t\t\tnotebook &&\n\t\t\tthis.notebookKernelService.getMatchingKernel(notebook).selected\n\t\t\t\t?.hasVariableProvider\n\t\t);\n\t}\n\n\tprivate initializeView() {\n\t\tconst debugViewContainer = Registry.as<IViewContainersRegistry>(\n\t\t\t\"workbench.registry.view.containers\",\n\t\t).get(debugContainerId);\n\n\t\tif (debugViewContainer) {\n\t\t\tconst viewsRegistry = Registry.as<IViewsRegistry>(\n\t\t\t\tExtensions.ViewsRegistry,\n\t\t\t);\n\t\t\tconst viewDescriptor = {\n\t\t\t\tid: \"NOTEBOOK_VARIABLES\",\n\t\t\t\tname: nls.localize2(\"notebookVariables\", \"Notebook Variables\"),\n\t\t\t\tcontainerIcon: variablesViewIcon,\n\t\t\t\tctorDescriptor: new SyncDescriptor(NotebookVariablesView),\n\t\t\t\torder: 50,\n\t\t\t\tweight: 5,\n\t\t\t\tcanToggleVisibility: true,\n\t\t\t\tcanMoveView: true,\n\t\t\t\tcollapsed: true,\n\t\t\t\twhen: NOTEBOOK_VARIABLE_VIEW_ENABLED,\n\t\t\t};\n\n\t\t\tviewsRegistry.registerViews([viewDescriptor], debugViewContainer);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.listeners.forEach((listener) => listener.dispose());\n\t\tthis.configListener.dispose();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
