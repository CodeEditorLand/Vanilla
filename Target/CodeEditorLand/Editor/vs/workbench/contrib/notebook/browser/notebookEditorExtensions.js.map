{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/notebookEditorExtensions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { BrandedService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport type {\n\tINotebookEditor,\n\tINotebookEditorContribution,\n\tINotebookEditorContributionCtor,\n\tINotebookEditorContributionDescription,\n} from \"./notebookBrowser.js\";\n\nclass EditorContributionRegistry {\n\tpublic static readonly INSTANCE = new EditorContributionRegistry();\n\tprivate readonly editorContributions: INotebookEditorContributionDescription[];\n\n\tconstructor() {\n\t\tthis.editorContributions = [];\n\t}\n\n\tpublic registerEditorContribution<Services extends BrandedService[]>(\n\t\tid: string,\n\t\tctor: {\n\t\t\tnew (\n\t\t\t\teditor: INotebookEditor,\n\t\t\t\t...services: Services\n\t\t\t): INotebookEditorContribution;\n\t\t},\n\t): void {\n\t\tthis.editorContributions.push({\n\t\t\tid,\n\t\t\tctor: ctor as INotebookEditorContributionCtor,\n\t\t});\n\t}\n\n\tpublic getEditorContributions(): INotebookEditorContributionDescription[] {\n\t\treturn this.editorContributions.slice(0);\n\t}\n}\n\nexport function registerNotebookContribution<Services extends BrandedService[]>(\n\tid: string,\n\tctor: {\n\t\tnew (\n\t\t\teditor: INotebookEditor,\n\t\t\t...services: Services\n\t\t): INotebookEditorContribution;\n\t},\n): void {\n\tEditorContributionRegistry.INSTANCE.registerEditorContribution(id, ctor);\n}\n\nexport namespace NotebookEditorExtensionsRegistry {\n\texport function getEditorContributions(): INotebookEditorContributionDescription[] {\n\t\treturn EditorContributionRegistry.INSTANCE.getEditorContributions();\n\t}\n\n\texport function getSomeEditorContributions(\n\t\tids: string[],\n\t): INotebookEditorContributionDescription[] {\n\t\treturn EditorContributionRegistry.INSTANCE.getEditorContributions().filter(\n\t\t\t(c) => ids.indexOf(c.id) >= 0,\n\t\t);\n\t}\n}\n"],
  "mappings": ";;AAaA,MAAM,2BAA2B;AAAA,EAbjC,OAaiC;AAAA;AAAA;AAAA,EAChC,OAAuB,WAAW,IAAI,2BAA2B;AAAA,EAChD;AAAA,EAEjB,cAAc;AACb,SAAK,sBAAsB,CAAC;AAAA,EAC7B;AAAA,EAEO,2BACN,IACA,MAMO;AACP,SAAK,oBAAoB,KAAK;AAAA,MAC7B;AAAA,MACA;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEO,yBAAmE;AACzE,WAAO,KAAK,oBAAoB,MAAM,CAAC;AAAA,EACxC;AACD;AAEO,SAAS,6BACf,IACA,MAMO;AACP,6BAA2B,SAAS,2BAA2B,IAAI,IAAI;AACxE;AAVgB;AAYT,IAAU;AAAA,CAAV,CAAUA,sCAAV;AACC,WAAS,yBAAmE;AAClF,WAAO,2BAA2B,SAAS,uBAAuB;AAAA,EACnE;AAFO,EAAAA,kCAAS;AAAA;AAIT,WAAS,2BACf,KAC2C;AAC3C,WAAO,2BAA2B,SAAS,uBAAuB,EAAE;AAAA,MACnE,CAAC,MAAM,IAAI,QAAQ,EAAE,EAAE,KAAK;AAAA,IAC7B;AAAA,EACD;AANO,EAAAA,kCAAS;AAAA;AAAA,GALA;",
  "names": ["NotebookEditorExtensionsRegistry"]
}
