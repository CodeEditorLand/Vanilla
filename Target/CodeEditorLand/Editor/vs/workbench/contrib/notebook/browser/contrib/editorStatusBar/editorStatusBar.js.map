{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/editorStatusBar/editorStatusBar.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from \"../../../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\tMutableDisposable,\n} from \"../../../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../../../base/common/network.js\";\nimport { ILanguageFeaturesService } from \"../../../../../../editor/common/services/languageFeatures.js\";\nimport * as nls from \"../../../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../../../platform/configuration/common/configuration.js\";\nimport { IInstantiationService } from \"../../../../../../platform/instantiation/common/instantiation.js\";\nimport { ILogService } from \"../../../../../../platform/log/common/log.js\";\nimport {\n\ttype IWorkbenchContribution,\n\tWorkbenchPhase,\n\tregisterWorkbenchContribution2,\n} from \"../../../../../common/contributions.js\";\nimport {\n\tIEditorGroupsService,\n\ttype IEditorPart,\n} from \"../../../../../services/editor/common/editorGroupsService.js\";\nimport { IEditorService } from \"../../../../../services/editor/common/editorService.js\";\nimport {\n\ttype IStatusbarEntry,\n\ttype IStatusbarEntryAccessor,\n\tIStatusbarService,\n\tStatusbarAlignment,\n} from \"../../../../../services/statusbar/browser/statusbar.js\";\nimport type { NotebookTextModel } from \"../../../common/model/notebookTextModel.js\";\nimport { NotebookCellsChangeType } from \"../../../common/notebookCommon.js\";\nimport {\n\ttype INotebookKernel,\n\tINotebookKernelService,\n} from \"../../../common/notebookKernelService.js\";\nimport { SELECT_KERNEL_ID } from \"../../controller/coreActions.js\";\nimport { SELECT_NOTEBOOK_INDENTATION_ID } from \"../../controller/editActions.js\";\nimport {\n\ttype INotebookEditor,\n\tgetNotebookEditorFromEditorPane,\n} from \"../../notebookBrowser.js\";\nimport { CENTER_ACTIVE_CELL } from \"../navigation/arrow.js\";\n\nclass ImplictKernelSelector implements IDisposable {\n\treadonly dispose: () => void;\n\n\tconstructor(\n\t\tnotebook: NotebookTextModel,\n\t\tsuggested: INotebookKernel,\n\t\t@INotebookKernelService notebookKernelService: INotebookKernelService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t\t@ILogService logService: ILogService,\n\t) {\n\t\tconst disposables = new DisposableStore();\n\t\tthis.dispose = disposables.dispose.bind(disposables);\n\n\t\tconst selectKernel = () => {\n\t\t\tdisposables.clear();\n\t\t\tnotebookKernelService.selectKernelForNotebook(suggested, notebook);\n\t\t};\n\n\t\t// IMPLICITLY select a suggested kernel when the notebook has been changed\n\t\t// e.g change cell source, move cells, etc\n\t\tdisposables.add(\n\t\t\tnotebook.onDidChangeContent((e) => {\n\t\t\t\tfor (const event of e.rawEvents) {\n\t\t\t\t\tswitch (event.kind) {\n\t\t\t\t\t\tcase NotebookCellsChangeType.ChangeCellContent:\n\t\t\t\t\t\tcase NotebookCellsChangeType.ModelChange:\n\t\t\t\t\t\tcase NotebookCellsChangeType.Move:\n\t\t\t\t\t\tcase NotebookCellsChangeType.ChangeCellLanguage:\n\t\t\t\t\t\t\tlogService.trace(\n\t\t\t\t\t\t\t\t\"IMPLICIT kernel selection because of change event\",\n\t\t\t\t\t\t\t\tevent.kind,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tselectKernel();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// IMPLICITLY select a suggested kernel when users start to hover. This should\n\t\t// be a strong enough hint that the user wants to interact with the notebook. Maybe\n\t\t// add more triggers like goto-providers or completion-providers\n\t\tdisposables.add(\n\t\t\tlanguageFeaturesService.hoverProvider.register(\n\t\t\t\t{\n\t\t\t\t\tscheme: Schemas.vscodeNotebookCell,\n\t\t\t\t\tpattern: notebook.uri.path,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tprovideHover() {\n\t\t\t\t\t\tlogService.trace(\n\t\t\t\t\t\t\t\"IMPLICIT kernel selection because of hover\",\n\t\t\t\t\t\t);\n\t\t\t\t\t\tselectKernel();\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n}\n\nexport class KernelStatus extends Disposable implements IWorkbenchContribution {\n\tprivate readonly _editorDisposables = this._register(new DisposableStore());\n\tprivate readonly _kernelInfoElement = this._register(new DisposableStore());\n\n\tconstructor(\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IStatusbarService\n\t\tprivate readonly _statusbarService: IStatusbarService,\n\t\t@INotebookKernelService\n\t\tprivate readonly _notebookKernelService: INotebookKernelService,\n\t\t@IInstantiationService\n\t\tprivate readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis._register(\n\t\t\tthis._editorService.onDidActiveEditorChange(() =>\n\t\t\t\tthis._updateStatusbar(),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate _updateStatusbar() {\n\t\tthis._editorDisposables.clear();\n\n\t\tconst activeEditor = getNotebookEditorFromEditorPane(\n\t\t\tthis._editorService.activeEditorPane,\n\t\t);\n\t\tif (!activeEditor) {\n\t\t\t// not a notebook -> clean-up, done\n\t\t\tthis._kernelInfoElement.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst updateStatus = () => {\n\t\t\tif (\n\t\t\t\tactiveEditor.notebookOptions.getDisplayOptions().globalToolbar\n\t\t\t) {\n\t\t\t\t// kernel info rendered in the notebook toolbar already\n\t\t\t\tthis._kernelInfoElement.clear();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst notebook = activeEditor.textModel;\n\t\t\tif (notebook) {\n\t\t\t\tthis._showKernelStatus(notebook);\n\t\t\t} else {\n\t\t\t\tthis._kernelInfoElement.clear();\n\t\t\t}\n\t\t};\n\n\t\tthis._editorDisposables.add(\n\t\t\tthis._notebookKernelService.onDidAddKernel(updateStatus),\n\t\t);\n\t\tthis._editorDisposables.add(\n\t\t\tthis._notebookKernelService.onDidChangeSelectedNotebooks(\n\t\t\t\tupdateStatus,\n\t\t\t),\n\t\t);\n\t\tthis._editorDisposables.add(\n\t\t\tthis._notebookKernelService.onDidChangeNotebookAffinity(\n\t\t\t\tupdateStatus,\n\t\t\t),\n\t\t);\n\t\tthis._editorDisposables.add(\n\t\t\tactiveEditor.onDidChangeModel(updateStatus),\n\t\t);\n\t\tthis._editorDisposables.add(\n\t\t\tactiveEditor.notebookOptions.onDidChangeOptions(updateStatus),\n\t\t);\n\t\tupdateStatus();\n\t}\n\n\tprivate _showKernelStatus(notebook: NotebookTextModel) {\n\t\tthis._kernelInfoElement.clear();\n\n\t\tconst { selected, suggestions, all } =\n\t\t\tthis._notebookKernelService.getMatchingKernel(notebook);\n\t\tconst suggested =\n\t\t\t((suggestions.length === 1 ? suggestions[0] : undefined) ??\n\t\t\tall.length === 1)\n\t\t\t\t? all[0]\n\t\t\t\t: undefined;\n\t\tlet isSuggested = false;\n\n\t\tif (all.length === 0) {\n\t\t\t// no kernel -> no status\n\t\t\treturn;\n\t\t} else if (selected || suggested) {\n\t\t\t// selected or single kernel\n\t\t\tlet kernel = selected;\n\n\t\t\tif (!kernel) {\n\t\t\t\t// proceed with suggested kernel - show UI and install handler that selects the kernel\n\t\t\t\t// when non trivial interactions with the notebook happen.\n\t\t\t\tkernel = suggested!;\n\t\t\t\tisSuggested = true;\n\t\t\t\tthis._kernelInfoElement.add(\n\t\t\t\t\tthis._instantiationService.createInstance(\n\t\t\t\t\t\tImplictKernelSelector,\n\t\t\t\t\t\tnotebook,\n\t\t\t\t\t\tkernel,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst tooltip = kernel.description ?? kernel.detail ?? kernel.label;\n\t\t\tthis._kernelInfoElement.add(\n\t\t\t\tthis._statusbarService.addEntry(\n\t\t\t\t\t{\n\t\t\t\t\t\tname: nls.localize(\n\t\t\t\t\t\t\t\"notebook.info\",\n\t\t\t\t\t\t\t\"Notebook Kernel Info\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttext: `$(notebook-kernel-select) ${kernel.label}`,\n\t\t\t\t\t\tariaLabel: kernel.label,\n\t\t\t\t\t\ttooltip: isSuggested\n\t\t\t\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\t\t\t\"tooltop\",\n\t\t\t\t\t\t\t\t\t\"{0} (suggestion)\",\n\t\t\t\t\t\t\t\t\ttooltip,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: tooltip,\n\t\t\t\t\t\tcommand: SELECT_KERNEL_ID,\n\t\t\t\t\t},\n\t\t\t\t\tSELECT_KERNEL_ID,\n\t\t\t\t\tStatusbarAlignment.RIGHT,\n\t\t\t\t\t10,\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tthis._kernelInfoElement.add(\n\t\t\t\tkernel.onDidChange(() => this._showKernelStatus(notebook)),\n\t\t\t);\n\t\t} else {\n\t\t\t// multiple kernels -> show selection hint\n\t\t\tthis._kernelInfoElement.add(\n\t\t\t\tthis._statusbarService.addEntry(\n\t\t\t\t\t{\n\t\t\t\t\t\tname: nls.localize(\n\t\t\t\t\t\t\t\"notebook.select\",\n\t\t\t\t\t\t\t\"Notebook Kernel Selection\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttext: nls.localize(\n\t\t\t\t\t\t\t\"kernel.select.label\",\n\t\t\t\t\t\t\t\"Select Kernel\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tariaLabel: nls.localize(\n\t\t\t\t\t\t\t\"kernel.select.label\",\n\t\t\t\t\t\t\t\"Select Kernel\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcommand: SELECT_KERNEL_ID,\n\t\t\t\t\t\tkind: \"prominent\",\n\t\t\t\t\t},\n\t\t\t\t\tSELECT_KERNEL_ID,\n\t\t\t\t\tStatusbarAlignment.RIGHT,\n\t\t\t\t\t10,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport class ActiveCellStatus\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tprivate readonly _itemDisposables = this._register(new DisposableStore());\n\tprivate readonly _accessor = this._register(\n\t\tnew MutableDisposable<IStatusbarEntryAccessor>(),\n\t);\n\n\tconstructor(\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IStatusbarService\n\t\tprivate readonly _statusbarService: IStatusbarService,\n\t) {\n\t\tsuper();\n\t\tthis._register(\n\t\t\tthis._editorService.onDidActiveEditorChange(() => this._update()),\n\t\t);\n\t}\n\n\tprivate _update() {\n\t\tthis._itemDisposables.clear();\n\t\tconst activeEditor = getNotebookEditorFromEditorPane(\n\t\t\tthis._editorService.activeEditorPane,\n\t\t);\n\t\tif (activeEditor) {\n\t\t\tthis._itemDisposables.add(\n\t\t\t\tactiveEditor.onDidChangeSelection(() =>\n\t\t\t\t\tthis._show(activeEditor),\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis._itemDisposables.add(\n\t\t\t\tactiveEditor.onDidChangeActiveCell(() =>\n\t\t\t\t\tthis._show(activeEditor),\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis._show(activeEditor);\n\t\t} else {\n\t\t\tthis._accessor.clear();\n\t\t}\n\t}\n\n\tprivate _show(editor: INotebookEditor) {\n\t\tif (!editor.hasModel()) {\n\t\t\tthis._accessor.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst newText = this._getSelectionsText(editor);\n\t\tif (!newText) {\n\t\t\tthis._accessor.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst entry: IStatusbarEntry = {\n\t\t\tname: nls.localize(\n\t\t\t\t\"notebook.activeCellStatusName\",\n\t\t\t\t\"Notebook Editor Selections\",\n\t\t\t),\n\t\t\ttext: newText,\n\t\t\tariaLabel: newText,\n\t\t\tcommand: CENTER_ACTIVE_CELL,\n\t\t};\n\t\tif (this._accessor.value) {\n\t\t\tthis._accessor.value.update(entry);\n\t\t} else {\n\t\t\tthis._accessor.value = this._statusbarService.addEntry(\n\t\t\t\tentry,\n\t\t\t\t\"notebook.activeCellStatus\",\n\t\t\t\tStatusbarAlignment.RIGHT,\n\t\t\t\t100,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _getSelectionsText(editor: INotebookEditor): string | undefined {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst activeCell = editor.getActiveCell();\n\t\tif (!activeCell) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst idxFocused = editor.getCellIndex(activeCell) + 1;\n\t\tconst numSelected = editor\n\t\t\t.getSelections()\n\t\t\t.reduce((prev, range) => prev + (range.end - range.start), 0);\n\t\tconst totalCells = editor.getLength();\n\t\treturn numSelected > 1\n\t\t\t? nls.localize(\n\t\t\t\t\t\"notebook.multiActiveCellIndicator\",\n\t\t\t\t\t\"Cell {0} ({1} selected)\",\n\t\t\t\t\tidxFocused,\n\t\t\t\t\tnumSelected,\n\t\t\t\t)\n\t\t\t: nls.localize(\n\t\t\t\t\t\"notebook.singleActiveCellIndicator\",\n\t\t\t\t\t\"Cell {0} of {1}\",\n\t\t\t\t\tidxFocused,\n\t\t\t\t\ttotalCells,\n\t\t\t\t);\n\t}\n}\n\nexport class NotebookIndentationStatus extends Disposable {\n\tprivate readonly _itemDisposables = this._register(new DisposableStore());\n\tprivate readonly _accessor = this._register(\n\t\tnew MutableDisposable<IStatusbarEntryAccessor>(),\n\t);\n\n\tstatic readonly ID = \"selectNotebookIndentation\";\n\n\tconstructor(\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IStatusbarService\n\t\tprivate readonly _statusbarService: IStatusbarService,\n\t\t@IConfigurationService\n\t\tprivate readonly _configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\t\tthis._register(\n\t\t\tthis._editorService.onDidActiveEditorChange(() => this._update()),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (\n\t\t\t\t\te.affectsConfiguration(\"editor\") ||\n\t\t\t\t\te.affectsConfiguration(\"notebook\")\n\t\t\t\t) {\n\t\t\t\t\tthis._update();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate _update() {\n\t\tthis._itemDisposables.clear();\n\t\tconst activeEditor = getNotebookEditorFromEditorPane(\n\t\t\tthis._editorService.activeEditorPane,\n\t\t);\n\t\tif (activeEditor) {\n\t\t\tthis._show(activeEditor);\n\t\t\tthis._itemDisposables.add(\n\t\t\t\tactiveEditor.onDidChangeSelection(() => {\n\t\t\t\t\tthis._accessor.clear();\n\t\t\t\t\tthis._show(activeEditor);\n\t\t\t\t}),\n\t\t\t);\n\t\t} else {\n\t\t\tthis._accessor.clear();\n\t\t}\n\t}\n\n\tprivate _show(editor: INotebookEditor) {\n\t\tif (!editor.hasModel()) {\n\t\t\tthis._accessor.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst cellOptions = editor.getActiveCell()?.textModel?.getOptions();\n\t\tif (!cellOptions) {\n\t\t\tthis._accessor.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst cellEditorOverridesRaw =\n\t\t\teditor.notebookOptions.getDisplayOptions()\n\t\t\t\t.editorOptionsCustomizations;\n\t\tconst indentSize =\n\t\t\tcellEditorOverridesRaw?.[\"editor.indentSize\"] ??\n\t\t\tcellOptions?.indentSize;\n\t\tconst insertSpaces =\n\t\t\tcellEditorOverridesRaw?.[\"editor.insertSpaces\"] ??\n\t\t\tcellOptions?.insertSpaces;\n\t\tconst tabSize =\n\t\t\tcellEditorOverridesRaw?.[\"editor.tabSize\"] ?? cellOptions?.tabSize;\n\n\t\tconst width = typeof indentSize === \"number\" ? indentSize : tabSize;\n\n\t\tconst message = insertSpaces\n\t\t\t? `Spaces: ${width}`\n\t\t\t: `Tab Size: ${width}`;\n\t\tconst newText = message;\n\t\tif (!newText) {\n\t\t\tthis._accessor.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst entry: IStatusbarEntry = {\n\t\t\tname: nls.localize(\"notebook.indentation\", \"Notebook Indentation\"),\n\t\t\ttext: newText,\n\t\t\tariaLabel: newText,\n\t\t\ttooltip: nls.localize(\n\t\t\t\t\"selectNotebookIndentation\",\n\t\t\t\t\"Select Indentation\",\n\t\t\t),\n\t\t\tcommand: SELECT_NOTEBOOK_INDENTATION_ID,\n\t\t};\n\n\t\tif (this._accessor.value) {\n\t\t\tthis._accessor.value.update(entry);\n\t\t} else {\n\t\t\tthis._accessor.value = this._statusbarService.addEntry(\n\t\t\t\tentry,\n\t\t\t\t\"notebook.status.indentation\",\n\t\t\t\tStatusbarAlignment.RIGHT,\n\t\t\t\t100.4,\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport class NotebookEditorStatusContribution\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tstatic readonly ID = \"notebook.contrib.editorStatus\";\n\n\tconstructor(\n\t\t@IEditorGroupsService\n\t\tprivate readonly editorGroupService: IEditorGroupsService,\n\t) {\n\t\tsuper();\n\n\t\tfor (const part of editorGroupService.parts) {\n\t\t\tthis.createNotebookStatus(part);\n\t\t}\n\n\t\tthis._register(\n\t\t\teditorGroupService.onDidCreateAuxiliaryEditorPart((part) =>\n\t\t\t\tthis.createNotebookStatus(part),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate createNotebookStatus(part: IEditorPart): void {\n\t\tconst disposables = new DisposableStore();\n\t\tEvent.once(part.onWillDispose)(() => disposables.dispose());\n\n\t\tconst scopedInstantiationService =\n\t\t\tthis.editorGroupService.getScopedInstantiationService(part);\n\t\tdisposables.add(\n\t\t\tscopedInstantiationService.createInstance(KernelStatus),\n\t\t);\n\t\tdisposables.add(\n\t\t\tscopedInstantiationService.createInstance(ActiveCellStatus),\n\t\t);\n\t\tdisposables.add(\n\t\t\tscopedInstantiationService.createInstance(\n\t\t\t\tNotebookIndentationStatus,\n\t\t\t),\n\t\t);\n\t}\n}\n\nregisterWorkbenchContribution2(\n\tNotebookEditorStatusContribution.ID,\n\tNotebookEditorStatusContribution,\n\tWorkbenchPhase.AfterRestored,\n);\n"],
  "mappings": "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",
  "names": []
}
