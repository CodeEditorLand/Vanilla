{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/diff/notebookDiffActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IBulkEditService, ResourceTextEdit } from '../../../../../editor/browser/services/bulkEditService.js';\nimport { localize, localize2 } from '../../../../../nls.js';\nimport { Action2, MenuId, registerAction2 } from '../../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr, ContextKeyExpression } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { ServicesAccessor } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { ActiveEditorContext } from '../../../../common/contextkeys.js';\nimport { DiffElementCellViewModelBase, SideBySideDiffElementViewModel } from './diffElementViewModel.js';\nimport { INotebookTextDiffEditor, NOTEBOOK_DIFF_CELL_IGNORE_WHITESPACE_KEY, NOTEBOOK_DIFF_CELL_INPUT, NOTEBOOK_DIFF_CELL_PROPERTY, NOTEBOOK_DIFF_CELL_PROPERTY_EXPANDED, NOTEBOOK_DIFF_HAS_UNCHANGED_CELLS, NOTEBOOK_DIFF_ITEM_DIFF_STATE, NOTEBOOK_DIFF_ITEM_KIND, NOTEBOOK_DIFF_UNCHANGED_CELLS_HIDDEN } from './notebookDiffEditorBrowser.js';\nimport { NotebookTextDiffEditor } from './notebookDiffEditor.js';\nimport { NotebookDiffEditorInput } from '../../common/notebookDiffEditorInput.js';\nimport { nextChangeIcon, openAsTextIcon, previousChangeIcon, renderOutputIcon, revertIcon, toggleWhitespace } from '../notebookIcons.js';\nimport { IEditorService } from '../../../../services/editor/common/editorService.js';\nimport { Registry } from '../../../../../platform/registry/common/platform.js';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions } from '../../../../../platform/configuration/common/configurationRegistry.js';\nimport { ICommandActionTitle } from '../../../../../platform/action/common/action.js';\nimport { DEFAULT_EDITOR_ASSOCIATION } from '../../../../common/editor.js';\nimport { KeybindingWeight } from '../../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { KeyCode, KeyMod } from '../../../../../base/common/keyCodes.js';\nimport { CellEditType, ICellEditOperation, NOTEBOOK_DIFF_EDITOR_ID } from '../../common/notebookCommon.js';\nimport { ITextResourceConfigurationService } from '../../../../../editor/common/services/textResourceConfiguration.js';\nimport { NotebookMultiTextDiffEditor } from './notebookMultiDiffEditor.js';\nimport { Codicon } from '../../../../../base/common/codicons.js';\nimport type { URI } from '../../../../../base/common/uri.js';\nimport { TextEditorSelectionRevealType, type ITextEditorOptions } from '../../../../../platform/editor/common/editor.js';\n\n// ActiveEditorContext.isEqualTo(SearchEditorConstants.SearchEditorID)\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'notebook.diff.openFile',\n\t\t\ticon: Codicon.goToFile,\n\t\t\ttitle: localize2('notebook.diff.openFile', 'Open File'),\n\t\t\tprecondition: ContextKeyExpr.or(ActiveEditorContext.isEqualTo(NotebookTextDiffEditor.ID), ActiveEditorContext.isEqualTo(NotebookMultiTextDiffEditor.ID)),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\twhen: ContextKeyExpr.or(ActiveEditorContext.isEqualTo(NotebookTextDiffEditor.ID), ActiveEditorContext.isEqualTo(NotebookMultiTextDiffEditor.ID)),\n\t\t\t}]\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tconst activeEditor = editorService.activeEditorPane;\n\t\tif (!activeEditor) {\n\t\t\treturn;\n\t\t}\n\t\tif (activeEditor instanceof NotebookTextDiffEditor || activeEditor instanceof NotebookMultiTextDiffEditor) {\n\t\t\tconst diffEditorInput = activeEditor.input as NotebookDiffEditorInput;\n\t\t\tconst resource = diffEditorInput.modified.resource;\n\t\t\tawait editorService.openEditor({ resource });\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'notebook.diff.cell.toggleCollapseUnchangedRegions',\n\t\t\ttitle: localize2('notebook.diff.cell.toggleCollapseUnchangedRegions', 'Toggle Collapse Unchanged Regions'),\n\t\t\ticon: Codicon.map,\n\t\t\ttoggled: ContextKeyExpr.has('config.diffEditor.hideUnchangedRegions.enabled'),\n\t\t\tprecondition: ActiveEditorContext.isEqualTo(NotebookTextDiffEditor.ID),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\twhen: ActiveEditorContext.isEqualTo(NotebookTextDiffEditor.ID),\n\t\t\t},\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: unknown[]): void {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst newValue = !configurationService.getValue<boolean>('diffEditor.hideUnchangedRegions.enabled');\n\t\tconfigurationService.updateValue('diffEditor.hideUnchangedRegions.enabled', newValue);\n\t}\n});\n\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'notebook.diff.switchToText',\n\t\t\ticon: openAsTextIcon,\n\t\t\ttitle: localize2('notebook.diff.switchToText', 'Open Text Diff Editor'),\n\t\t\tprecondition: ContextKeyExpr.or(ActiveEditorContext.isEqualTo(NotebookTextDiffEditor.ID), ActiveEditorContext.isEqualTo(NotebookMultiTextDiffEditor.ID)),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\twhen: ContextKeyExpr.or(ActiveEditorContext.isEqualTo(NotebookTextDiffEditor.ID), ActiveEditorContext.isEqualTo(NotebookMultiTextDiffEditor.ID)),\n\t\t\t}]\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tconst activeEditor = editorService.activeEditorPane;\n\t\tif (!activeEditor) {\n\t\t\treturn;\n\t\t}\n\t\tif (activeEditor instanceof NotebookTextDiffEditor || activeEditor instanceof NotebookMultiTextDiffEditor) {\n\t\t\tconst diffEditorInput = activeEditor.input as NotebookDiffEditorInput;\n\n\t\t\tawait editorService.openEditor(\n\t\t\t\t{\n\t\t\t\t\toriginal: { resource: diffEditorInput.original.resource },\n\t\t\t\t\tmodified: { resource: diffEditorInput.resource },\n\t\t\t\t\tlabel: diffEditorInput.getName(),\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tpreserveFocus: false,\n\t\t\t\t\t\toverride: DEFAULT_EDITOR_ASSOCIATION.id\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t}\n});\n\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'notebook.diffEditor.showUnchangedCells',\n\t\t\ttitle: localize2('showUnchangedCells', 'Show Unchanged Cells'),\n\t\t\ticon: Codicon.unfold,\n\t\t\tprecondition: ContextKeyExpr.and(ActiveEditorContext.isEqualTo(NotebookMultiTextDiffEditor.ID), ContextKeyExpr.has(NOTEBOOK_DIFF_HAS_UNCHANGED_CELLS.key)),\n\t\t\tmenu: {\n\t\t\t\twhen: ContextKeyExpr.and(ActiveEditorContext.isEqualTo(NotebookMultiTextDiffEditor.ID), ContextKeyExpr.has(NOTEBOOK_DIFF_HAS_UNCHANGED_CELLS.key), ContextKeyExpr.equals(NOTEBOOK_DIFF_UNCHANGED_CELLS_HIDDEN.key, true)),\n\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\torder: 22,\n\t\t\t\tgroup: 'navigation',\n\t\t\t},\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: unknown[]): void {\n\t\tconst activeEditor = accessor.get(IEditorService).activeEditorPane;\n\t\tif (!activeEditor) {\n\t\t\treturn;\n\t\t}\n\t\tif (activeEditor instanceof NotebookMultiTextDiffEditor) {\n\t\t\tactiveEditor.showUnchanged();\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'notebook.diffEditor.hideUnchangedCells',\n\t\t\ttitle: localize2('hideUnchangedCells', 'Hide Unchanged Cells'),\n\t\t\ticon: Codicon.fold,\n\t\t\tprecondition: ContextKeyExpr.and(ActiveEditorContext.isEqualTo(NotebookMultiTextDiffEditor.ID), ContextKeyExpr.has(NOTEBOOK_DIFF_HAS_UNCHANGED_CELLS.key)),\n\t\t\tmenu: {\n\t\t\t\twhen: ContextKeyExpr.and(ActiveEditorContext.isEqualTo(NotebookMultiTextDiffEditor.ID), ContextKeyExpr.has(NOTEBOOK_DIFF_HAS_UNCHANGED_CELLS.key), ContextKeyExpr.equals(NOTEBOOK_DIFF_UNCHANGED_CELLS_HIDDEN.key, false)),\n\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\torder: 22,\n\t\t\t\tgroup: 'navigation',\n\t\t\t},\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: unknown[]): void {\n\t\tconst activeEditor = accessor.get(IEditorService).activeEditorPane;\n\t\tif (!activeEditor) {\n\t\t\treturn;\n\t\t}\n\t\tif (activeEditor instanceof NotebookMultiTextDiffEditor) {\n\t\t\tactiveEditor.hideUnchanged();\n\t\t}\n\t}\n});\n\nregisterAction2(class GoToFileAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'notebook.diffEditor.2.goToCell',\n\t\t\ttitle: localize2('goToCell', 'Go To Cell'),\n\t\t\ticon: Codicon.goToFile,\n\t\t\tmenu: {\n\t\t\t\twhen: ContextKeyExpr.and(ActiveEditorContext.isEqualTo(NotebookMultiTextDiffEditor.ID), ContextKeyExpr.equals(NOTEBOOK_DIFF_ITEM_KIND.key, 'Cell'), ContextKeyExpr.notEquals(NOTEBOOK_DIFF_ITEM_DIFF_STATE.key, 'delete')),\n\t\t\t\tid: MenuId.MultiDiffEditorFileToolbar,\n\t\t\t\torder: 0,\n\t\t\t\tgroup: 'navigation',\n\t\t\t},\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, ...args: any[]): Promise<void> {\n\t\tconst uri = args[0] as URI;\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst activeEditorPane = editorService.activeEditorPane;\n\t\tif (!(activeEditorPane instanceof NotebookMultiTextDiffEditor)) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait editorService.openEditor({\n\t\t\tresource: uri,\n\t\t\toptions: {\n\t\t\t\tselectionRevealType: TextEditorSelectionRevealType.CenterIfOutsideViewport,\n\t\t\t} satisfies ITextEditorOptions,\n\t\t});\n\t}\n});\n\nconst revertInput = localize('notebook.diff.cell.revertInput', \"Revert Input\");\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'notebook.diffEditor.2.cell.revertInput',\n\t\t\ttitle: revertInput,\n\t\t\ticon: revertIcon,\n\t\t\tmenu: {\n\t\t\t\twhen: ContextKeyExpr.and(ActiveEditorContext.isEqualTo(NotebookMultiTextDiffEditor.ID), ContextKeyExpr.equals(NOTEBOOK_DIFF_ITEM_KIND.key, 'Cell'), ContextKeyExpr.equals(NOTEBOOK_DIFF_ITEM_DIFF_STATE.key, 'modified')),\n\t\t\t\tid: MenuId.MultiDiffEditorFileToolbar,\n\t\t\t\torder: 2,\n\t\t\t\tgroup: 'navigation',\n\t\t\t},\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, ...args: any[]): Promise<void> {\n\t\tconst uri = args[0] as URI;\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst activeEditorPane = editorService.activeEditorPane;\n\t\tif (!(activeEditorPane instanceof NotebookMultiTextDiffEditor)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst item = activeEditorPane.getDiffElementViewModel(uri);\n\t\tif (item && item instanceof SideBySideDiffElementViewModel) {\n\t\t\tconst modified = item.modified;\n\t\t\tconst original = item.original;\n\n\t\t\tif (!original || !modified) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst bulkEditService = accessor.get(IBulkEditService);\n\t\t\tawait bulkEditService.apply([\n\t\t\t\tnew ResourceTextEdit(modified.uri, { range: modified.textModel.getFullModelRange(), text: original.textModel.getValue() }),\n\t\t\t], { quotableLabel: 'Revert Notebook Cell Content Change' });\n\t\t}\n\t}\n});\n\nconst revertOutputs = localize('notebook.diff.cell.revertOutputs', \"Revert Outputs\");\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: 'notebook.diffEditor.2.cell.revertOutputs',\n\t\t\t\ttitle: revertOutputs,\n\t\t\t\ticon: revertIcon,\n\t\t\t\tf1: false,\n\t\t\t\tmenu: {\n\t\t\t\t\twhen: ContextKeyExpr.and(ActiveEditorContext.isEqualTo(NotebookMultiTextDiffEditor.ID), ContextKeyExpr.equals(NOTEBOOK_DIFF_ITEM_KIND.key, 'Output'), ContextKeyExpr.equals(NOTEBOOK_DIFF_ITEM_DIFF_STATE.key, 'modified')),\n\t\t\t\t\tid: MenuId.MultiDiffEditorFileToolbar,\n\t\t\t\t\torder: 2,\n\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t},\n\t\t\t}\n\t\t);\n\t}\n\tasync run(accessor: ServicesAccessor, ...args: any[]): Promise<void> {\n\t\tconst uri = args[0] as URI;\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst activeEditorPane = editorService.activeEditorPane;\n\t\tif (!(activeEditorPane instanceof NotebookMultiTextDiffEditor)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst item = activeEditorPane.getDiffElementViewModel(uri);\n\t\tif (item && item instanceof SideBySideDiffElementViewModel) {\n\t\t\tconst original = item.original;\n\n\t\t\tconst modifiedCellIndex = item.modifiedDocument.cells.findIndex(cell => cell.handle === item.modified.handle);\n\t\t\tif (modifiedCellIndex === -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\titem.mainDocumentTextModel.applyEdits([{\n\t\t\t\teditType: CellEditType.Output, index: modifiedCellIndex, outputs: original.outputs\n\t\t\t}], true, undefined, () => undefined, undefined, true);\n\t\t}\n\t}\n});\n\nconst revertMetadata = localize('notebook.diff.cell.revertMetadata', \"Revert Metadata\");\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: 'notebook.diffEditor.2.cell.revertMetadata',\n\t\t\t\ttitle: revertMetadata,\n\t\t\t\ticon: revertIcon,\n\t\t\t\tf1: false,\n\t\t\t\tmenu: {\n\t\t\t\t\twhen: ContextKeyExpr.and(ActiveEditorContext.isEqualTo(NotebookMultiTextDiffEditor.ID), ContextKeyExpr.equals(NOTEBOOK_DIFF_ITEM_KIND.key, 'Metadata'), ContextKeyExpr.equals(NOTEBOOK_DIFF_ITEM_DIFF_STATE.key, 'modified')),\n\t\t\t\t\tid: MenuId.MultiDiffEditorFileToolbar,\n\t\t\t\t\torder: 2,\n\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t},\n\t\t\t}\n\t\t);\n\t}\n\tasync run(accessor: ServicesAccessor, ...args: any[]): Promise<void> {\n\t\tconst uri = args[0] as URI;\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst activeEditorPane = editorService.activeEditorPane;\n\t\tif (!(activeEditorPane instanceof NotebookMultiTextDiffEditor)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst item = activeEditorPane.getDiffElementViewModel(uri);\n\t\tif (item && item instanceof SideBySideDiffElementViewModel) {\n\t\t\tconst original = item.original;\n\n\t\t\tconst modifiedCellIndex = item.modifiedDocument.cells.findIndex(cell => cell.handle === item.modified.handle);\n\t\t\tif (modifiedCellIndex === -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\titem.mainDocumentTextModel.applyEdits([{\n\t\t\t\teditType: CellEditType.Metadata, index: modifiedCellIndex, metadata: original.metadata\n\t\t\t}], true, undefined, () => undefined, undefined, true);\n\t\t}\n\t}\n});\n\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: 'notebook.diff.cell.revertMetadata',\n\t\t\t\ttitle: revertMetadata,\n\t\t\t\ticon: revertIcon,\n\t\t\t\tf1: false,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookDiffCellMetadataTitle,\n\t\t\t\t\twhen: NOTEBOOK_DIFF_CELL_PROPERTY\n\t\t\t\t},\n\t\t\t\tprecondition: NOTEBOOK_DIFF_CELL_PROPERTY\n\t\t\t}\n\t\t);\n\t}\n\trun(accessor: ServicesAccessor, context?: { cell: DiffElementCellViewModelBase }) {\n\t\tif (!context) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!(context.cell instanceof SideBySideDiffElementViewModel)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst original = context.cell.original;\n\t\tconst modified = context.cell.modified;\n\n\t\tconst modifiedCellIndex = context.cell.mainDocumentTextModel.cells.indexOf(modified.textModel);\n\t\tif (modifiedCellIndex === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst rawEdits: ICellEditOperation[] = [{ editType: CellEditType.Metadata, index: modifiedCellIndex, metadata: original.metadata }];\n\t\tif (context.cell.original.language && context.cell.modified.language !== context.cell.original.language) {\n\t\t\trawEdits.push({ editType: CellEditType.CellLanguage, index: modifiedCellIndex, language: context.cell.original.language });\n\t\t}\n\n\t\tcontext.cell.modifiedDocument.applyEdits(rawEdits, true, undefined, () => undefined, undefined, true);\n\t}\n});\n\n// registerAction2(class extends Action2 {\n// \tconstructor() {\n// \t\tsuper(\n// \t\t\t{\n// \t\t\t\tid: 'notebook.diff.cell.switchOutputRenderingStyle',\n// \t\t\t\ttitle: localize('notebook.diff.cell.switchOutputRenderingStyle', \"Switch Outputs Rendering\"),\n// \t\t\t\ticon: renderOutputIcon,\n// \t\t\t\tf1: false,\n// \t\t\t\tmenu: {\n// \t\t\t\t\tid: MenuId.NotebookDiffCellOutputsTitle\n// \t\t\t\t}\n// \t\t\t}\n// \t\t);\n// \t}\n// \trun(accessor: ServicesAccessor, context?: { cell: DiffElementViewModelBase }) {\n// \t\tif (!context) {\n// \t\t\treturn;\n// \t\t}\n\n// \t\tcontext.cell.renderOutput = true;\n// \t}\n// });\n\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: 'notebook.diff.cell.switchOutputRenderingStyleToText',\n\t\t\t\ttitle: localize('notebook.diff.cell.switchOutputRenderingStyleToText', \"Switch Output Rendering\"),\n\t\t\t\ticon: renderOutputIcon,\n\t\t\t\tf1: false,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookDiffCellOutputsTitle,\n\t\t\t\t\twhen: NOTEBOOK_DIFF_CELL_PROPERTY_EXPANDED\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\trun(accessor: ServicesAccessor, context?: { cell: DiffElementCellViewModelBase }) {\n\t\tif (!context) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontext.cell.renderOutput = !context.cell.renderOutput;\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: 'notebook.diff.cell.revertOutputs',\n\t\t\t\ttitle: localize('notebook.diff.cell.revertOutputs', \"Revert Outputs\"),\n\t\t\t\ticon: revertIcon,\n\t\t\t\tf1: false,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookDiffCellOutputsTitle,\n\t\t\t\t\twhen: NOTEBOOK_DIFF_CELL_PROPERTY\n\t\t\t\t},\n\t\t\t\tprecondition: NOTEBOOK_DIFF_CELL_PROPERTY\n\t\t\t}\n\t\t);\n\t}\n\trun(accessor: ServicesAccessor, context?: { cell: DiffElementCellViewModelBase }) {\n\t\tif (!context) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!(context.cell instanceof SideBySideDiffElementViewModel)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst original = context.cell.original;\n\t\tconst modified = context.cell.modified;\n\n\t\tconst modifiedCellIndex = context.cell.mainDocumentTextModel.cells.indexOf(modified.textModel);\n\t\tif (modifiedCellIndex === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontext.cell.mainDocumentTextModel.applyEdits([{\n\t\t\teditType: CellEditType.Output, index: modifiedCellIndex, outputs: original.outputs\n\t\t}], true, undefined, () => undefined, undefined, true);\n\t}\n});\n\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: 'notebook.toggle.diff.cell.ignoreTrimWhitespace',\n\t\t\t\ttitle: localize('ignoreTrimWhitespace.label', \"Show Leading/Trailing Whitespace Differences\"),\n\t\t\t\ticon: toggleWhitespace,\n\t\t\t\tf1: false,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookDiffCellInputTitle,\n\t\t\t\t\twhen: NOTEBOOK_DIFF_CELL_INPUT,\n\t\t\t\t\torder: 1,\n\t\t\t\t},\n\t\t\t\tprecondition: NOTEBOOK_DIFF_CELL_INPUT,\n\t\t\t\ttoggled: ContextKeyExpr.equals(NOTEBOOK_DIFF_CELL_IGNORE_WHITESPACE_KEY, false),\n\t\t\t}\n\t\t);\n\t}\n\trun(accessor: ServicesAccessor, context?: { cell: DiffElementCellViewModelBase }) {\n\t\tconst cell = context?.cell;\n\t\tif (!cell?.modified) {\n\t\t\treturn;\n\t\t}\n\t\tconst uri = cell.modified.uri;\n\t\tconst configService = accessor.get(ITextResourceConfigurationService);\n\t\tconst key = 'diffEditor.ignoreTrimWhitespace';\n\t\tconst val = configService.getValue(uri, key);\n\t\tconfigService.updateValue(uri, key, !val);\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: 'notebook.diff.cell.revertInput',\n\t\t\t\ttitle: revertInput,\n\t\t\t\ticon: revertIcon,\n\t\t\t\tf1: false,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookDiffCellInputTitle,\n\t\t\t\t\twhen: NOTEBOOK_DIFF_CELL_INPUT,\n\t\t\t\t\torder: 2\n\t\t\t\t},\n\t\t\t\tprecondition: NOTEBOOK_DIFF_CELL_INPUT\n\n\t\t\t}\n\t\t);\n\t}\n\trun(accessor: ServicesAccessor, context?: { cell: DiffElementCellViewModelBase }) {\n\t\tif (!context) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst original = context.cell.original;\n\t\tconst modified = context.cell.modified;\n\n\t\tif (!original || !modified) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst bulkEditService = accessor.get(IBulkEditService);\n\t\treturn bulkEditService.apply([\n\t\t\tnew ResourceTextEdit(modified.uri, { range: modified.textModel.getFullModelRange(), text: original.textModel.getValue() }),\n\t\t], { quotableLabel: 'Revert Notebook Cell Content Change' });\n\t}\n});\n\nclass ToggleRenderAction extends Action2 {\n\tconstructor(id: string, title: string | ICommandActionTitle, precondition: ContextKeyExpression | undefined, toggled: ContextKeyExpression | undefined, order: number, private readonly toggleOutputs?: boolean, private readonly toggleMetadata?: boolean) {\n\t\tsuper({\n\t\t\tid: id,\n\t\t\ttitle,\n\t\t\tprecondition: precondition,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\tgroup: 'notebook',\n\t\t\t\twhen: precondition,\n\t\t\t\torder: order,\n\t\t\t}],\n\t\t\ttoggled: toggled\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tif (this.toggleOutputs !== undefined) {\n\t\t\tconst oldValue = configurationService.getValue('notebook.diff.ignoreOutputs');\n\t\t\tconfigurationService.updateValue('notebook.diff.ignoreOutputs', !oldValue);\n\t\t}\n\n\t\tif (this.toggleMetadata !== undefined) {\n\t\t\tconst oldValue = configurationService.getValue('notebook.diff.ignoreMetadata');\n\t\t\tconfigurationService.updateValue('notebook.diff.ignoreMetadata', !oldValue);\n\t\t}\n\t}\n}\n\nregisterAction2(class extends ToggleRenderAction {\n\tconstructor() {\n\t\tsuper('notebook.diff.showOutputs',\n\t\t\tlocalize2('notebook.diff.showOutputs', 'Show Outputs Differences'),\n\t\t\tContextKeyExpr.or(ActiveEditorContext.isEqualTo(NotebookTextDiffEditor.ID), ActiveEditorContext.isEqualTo(NotebookMultiTextDiffEditor.ID)),\n\t\t\tContextKeyExpr.notEquals('config.notebook.diff.ignoreOutputs', true),\n\t\t\t2,\n\t\t\ttrue,\n\t\t\tundefined\n\t\t);\n\t}\n});\n\nregisterAction2(class extends ToggleRenderAction {\n\tconstructor() {\n\t\tsuper('notebook.diff.showMetadata',\n\t\t\tlocalize2('notebook.diff.showMetadata', 'Show Metadata Differences'),\n\t\t\tContextKeyExpr.or(ActiveEditorContext.isEqualTo(NotebookTextDiffEditor.ID), ActiveEditorContext.isEqualTo(NotebookMultiTextDiffEditor.ID)),\n\t\t\tContextKeyExpr.notEquals('config.notebook.diff.ignoreMetadata', true),\n\t\t\t1,\n\t\t\tundefined,\n\t\t\ttrue\n\t\t);\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: 'notebook.diff.action.previous',\n\t\t\t\ttitle: localize('notebook.diff.action.previous.title', \"Show Previous Change\"),\n\t\t\t\ticon: previousChangeIcon,\n\t\t\t\tf1: false,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.F3,\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\twhen: ActiveEditorContext.isEqualTo(NotebookTextDiffEditor.ID)\n\t\t\t\t},\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\twhen: ActiveEditorContext.isEqualTo(NotebookTextDiffEditor.ID)\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\trun(accessor: ServicesAccessor) {\n\t\tconst editorService: IEditorService = accessor.get(IEditorService);\n\t\tif (editorService.activeEditorPane?.getId() !== NOTEBOOK_DIFF_EDITOR_ID) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = editorService.activeEditorPane.getControl() as INotebookTextDiffEditor | undefined;\n\t\teditor?.previousChange();\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: 'notebook.diff.action.next',\n\t\t\t\ttitle: localize('notebook.diff.action.next.title', \"Show Next Change\"),\n\t\t\t\ticon: nextChangeIcon,\n\t\t\t\tf1: false,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tprimary: KeyMod.Alt | KeyCode.F3,\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\twhen: ActiveEditorContext.isEqualTo(NotebookTextDiffEditor.ID)\n\t\t\t\t},\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\twhen: ActiveEditorContext.isEqualTo(NotebookTextDiffEditor.ID)\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\trun(accessor: ServicesAccessor) {\n\t\tconst editorService: IEditorService = accessor.get(IEditorService);\n\t\tif (editorService.activeEditorPane?.getId() !== NOTEBOOK_DIFF_EDITOR_ID) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = editorService.activeEditorPane.getControl() as INotebookTextDiffEditor | undefined;\n\t\teditor?.nextChange();\n\t}\n});\n\n\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).registerConfiguration({\n\tid: 'notebook',\n\torder: 100,\n\ttype: 'object',\n\t'properties': {\n\t\t'notebook.diff.ignoreMetadata': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tmarkdownDescription: localize('notebook.diff.ignoreMetadata', \"Hide Metadata Differences\")\n\t\t},\n\t\t'notebook.diff.ignoreOutputs': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tmarkdownDescription: localize('notebook.diff.ignoreOutputs', \"Hide Outputs Differences\")\n\t\t},\n\t}\n});\n"],
  "mappings": "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",
  "names": []
}
