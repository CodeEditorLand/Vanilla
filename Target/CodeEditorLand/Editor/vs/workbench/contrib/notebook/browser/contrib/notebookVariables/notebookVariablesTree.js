var c=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var p=(o,e,a,t)=>{for(var r=t>1?void 0:t?d(e,a):e,i=o.length-1,s;i>=0;i--)(s=o[i])&&(r=(t?s(e,a,r):s(r))||r);return t&&r&&c(e,a,r),r},b=(o,e)=>(a,t)=>e(a,t,o);import*as l from"../../../../../../base/browser/dom.js";import"../../../../../../base/browser/ui/list/list.js";import"../../../../../../base/browser/ui/list/listWidget.js";import"../../../../../../base/browser/ui/tree/tree.js";import"../../../../../../base/common/filters.js";import{DisposableStore as u}from"../../../../../../base/common/lifecycle.js";import{localize as I}from"../../../../../../nls.js";import{IInstantiationService as E}from"../../../../../../platform/instantiation/common/instantiation.js";import{WorkbenchObjectTree as V}from"../../../../../../platform/list/browser/listService.js";import{DebugExpressionRenderer as D}from"../../../../debug/browser/debugExpressionRenderer.js";import"./notebookVariablesDataSource.js";const m=l.$,T=1024;class P extends V{}class W{getHeight(e){return 22}getTemplateId(e){return n.ID}}let n=class{expressionRenderer;static ID="variableElement";get templateId(){return n.ID}constructor(e){this.expressionRenderer=e.createInstance(D)}renderTemplate(e){const a=l.append(e,m(".expression")),t=l.append(a,m("span.name")),r=l.append(a,m("span.value"));return{expression:a,name:t,value:r,elementDisposables:new u}}renderElement(e,a,t){const r=e.element.value.trim()!==""?`${e.element.name}:`:e.element.name;t.name.textContent=r,t.name.title=e.element.type??"",t.elementDisposables.add(this.expressionRenderer.renderValue(t.value,e.element,{colorize:!0,maxValueLength:T,session:void 0}))}disposeElement(e,a,t,r){t.elementDisposables.clear()}disposeTemplate(e){e.elementDisposables.dispose()}};n=p([b(0,E)],n);class ${getWidgetAriaLabel(){return I("debugConsole","Notebook Variables")}getAriaLabel(e){return I("notebookVariableAriaLabel","Variable {0}, value {1}",e.name,e.value)}}export{$ as NotebookVariableAccessibilityProvider,n as NotebookVariableRenderer,W as NotebookVariablesDelegate,P as NotebookVariablesTree};
