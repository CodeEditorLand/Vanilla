var c=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var p=(o,e,r,t)=>{for(var a=t>1?void 0:t?u(e,r):e,i=o.length-1,m;i>=0;i--)(m=o[i])&&(a=(t?m(e,r,a):m(a))||a);return t&&a&&c(e,r,a),a},b=(o,e)=>(r,t)=>e(r,t,o);import*as n from"../../../../../../../vs/base/browser/dom.js";import"../../../../../../../vs/base/browser/ui/list/list.js";import"../../../../../../../vs/base/browser/ui/list/listWidget.js";import"../../../../../../../vs/base/browser/ui/tree/tree.js";import"../../../../../../../vs/base/common/filters.js";import{DisposableStore as d}from"../../../../../../../vs/base/common/lifecycle.js";import{localize as I}from"../../../../../../../vs/nls.js";import{IHoverService as V}from"../../../../../../../vs/platform/hover/browser/hover.js";import{WorkbenchObjectTree as E}from"../../../../../../../vs/platform/list/browser/listService.js";import{renderExpressionValue as v}from"../../../../../../../vs/workbench/contrib/debug/browser/baseDebugView.js";import"../../../../../../../vs/workbench/contrib/notebook/browser/contrib/notebookVariables/notebookVariablesDataSource.js";const s=n.$,T=1024;class W extends E{}class ${getHeight(e){return 22}getTemplateId(e){return l.ID}}let l=class{constructor(e){this._hoverService=e}static ID="variableElement";get templateId(){return l.ID}renderTemplate(e){const r=n.append(e,s(".expression")),t=n.append(r,s("span.name")),a=n.append(r,s("span.value"));return{expression:r,name:t,value:a,elementDisposables:new d}}renderElement(e,r,t){const a=e.element.value.trim()!==""?`${e.element.name}:`:e.element.name;t.name.textContent=a,t.name.title=e.element.type??"",v(t.elementDisposables,e.element,t.value,{colorize:!0,maxValueLength:T},this._hoverService)}disposeElement(e,r,t,a){t.elementDisposables.clear()}disposeTemplate(e){e.elementDisposables.dispose()}};l=p([b(0,V)],l);class C{getWidgetAriaLabel(){return I("debugConsole","Notebook Variables")}getAriaLabel(e){return I("notebookVariableAriaLabel","Variable {0}, value {1}",e.name,e.value)}}export{C as NotebookVariableAccessibilityProvider,l as NotebookVariableRenderer,$ as NotebookVariablesDelegate,W as NotebookVariablesTree};
