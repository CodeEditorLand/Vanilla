{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/view/renderers/webviewMessages.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { RenderOutputType } from '../../notebookBrowser.js';\nimport type { PreloadOptions, RenderOptions } from './webviewPreloads.js';\nimport { NotebookCellMetadata } from '../../../common/notebookCommon.js';\n\ninterface BaseToWebviewMessage {\n\treadonly __vscode_notebook_message: true;\n}\n\nexport interface WebviewInitialized extends BaseToWebviewMessage {\n\treadonly type: 'initialized';\n}\n\nexport interface DimensionUpdate {\n\treadonly id: string;\n\treadonly init?: boolean;\n\treadonly height: number;\n\treadonly isOutput?: boolean;\n}\n\nexport interface IDimensionMessage extends BaseToWebviewMessage {\n\treadonly type: 'dimension';\n\treadonly updates: readonly DimensionUpdate[];\n}\n\nexport interface IMouseEnterMessage extends BaseToWebviewMessage {\n\treadonly type: 'mouseenter';\n\treadonly id: string;\n}\n\nexport interface IMouseLeaveMessage extends BaseToWebviewMessage {\n\treadonly type: 'mouseleave';\n\treadonly id: string;\n}\n\nexport interface IOutputFocusMessage extends BaseToWebviewMessage {\n\treadonly type: 'outputFocus';\n\treadonly id: string;\n}\n\nexport interface IOutputBlurMessage extends BaseToWebviewMessage {\n\treadonly type: 'outputBlur';\n\treadonly id: string;\n}\n\nexport interface IOutputInputFocusMessage extends BaseToWebviewMessage {\n\treadonly type: 'outputInputFocus';\n\treadonly inputFocused: boolean;\n\treadonly id: string;\n}\n\nexport interface IScrollToRevealMessage extends BaseToWebviewMessage {\n\treadonly type: 'scroll-to-reveal';\n\treadonly scrollTop: number;\n}\n\nexport interface IWheelMessage extends BaseToWebviewMessage {\n\treadonly type: 'did-scroll-wheel';\n\treadonly payload: any;\n}\n\nexport interface IScrollAckMessage extends BaseToWebviewMessage {\n\treadonly type: 'scroll-ack';\n\treadonly data: { top: number };\n\treadonly version: number;\n}\n\nexport interface IFocusEditorMessage extends BaseToWebviewMessage {\n\treadonly type: 'focus-editor';\n\treadonly cellId: string;\n\treadonly focusNext?: boolean;\n}\n\nexport interface IClickedDataUrlMessage extends BaseToWebviewMessage {\n\treadonly type: 'clicked-data-url';\n\treadonly data: string | ArrayBuffer | null;\n\treadonly downloadName?: string;\n}\n\nexport interface IClickMarkupCellMessage extends BaseToWebviewMessage {\n\treadonly type: 'clickMarkupCell';\n\treadonly cellId: string;\n\treadonly ctrlKey: boolean;\n\treadonly altKey: boolean;\n\treadonly metaKey: boolean;\n\treadonly shiftKey: boolean;\n}\n\nexport interface IClickedLinkMessage extends BaseToWebviewMessage {\n\treadonly type: 'clicked-link';\n\treadonly href: string;\n}\n\nexport interface IContextMenuMarkupCellMessage extends BaseToWebviewMessage {\n\treadonly type: 'contextMenuMarkupCell';\n\treadonly cellId: string;\n\treadonly clientX: number;\n\treadonly clientY: number;\n}\n\nexport interface IMouseEnterMarkupCellMessage extends BaseToWebviewMessage {\n\treadonly type: 'mouseEnterMarkupCell';\n\treadonly cellId: string;\n}\n\nexport interface IMouseLeaveMarkupCellMessage extends BaseToWebviewMessage {\n\treadonly type: 'mouseLeaveMarkupCell';\n\treadonly cellId: string;\n}\n\nexport interface IToggleMarkupPreviewMessage extends BaseToWebviewMessage {\n\treadonly type: 'toggleMarkupPreview';\n\treadonly cellId: string;\n}\n\nexport interface ICellDragStartMessage extends BaseToWebviewMessage {\n\treadonly type: 'cell-drag-start';\n\treadonly cellId: string;\n\treadonly dragOffsetY: number;\n}\n\nexport interface ICellDragMessage extends BaseToWebviewMessage {\n\treadonly type: 'cell-drag';\n\treadonly cellId: string;\n\treadonly dragOffsetY: number;\n}\n\nexport interface ICellDropMessage extends BaseToWebviewMessage {\n\treadonly type: 'cell-drop';\n\treadonly cellId: string;\n\treadonly ctrlKey: boolean;\n\treadonly altKey: boolean;\n\treadonly dragOffsetY: number;\n}\n\nexport interface ICellDragEndMessage extends BaseToWebviewMessage {\n\treadonly type: 'cell-drag-end';\n\treadonly cellId: string;\n}\n\nexport interface IInitializedMarkupMessage extends BaseToWebviewMessage {\n\treadonly type: 'initializedMarkup';\n\treadonly requestId: string;\n}\n\nexport interface ICodeBlockHighlightRequest {\n\treadonly id: string;\n\treadonly value: string;\n\treadonly lang: string;\n}\n\nexport interface IRenderedMarkupMessage extends BaseToWebviewMessage {\n\treadonly type: 'renderedMarkup';\n\treadonly cellId: string;\n\treadonly html: string;\n\treadonly codeBlocks: ReadonlyArray<ICodeBlockHighlightRequest>;\n}\n\nexport interface IRenderedCellOutputMessage extends BaseToWebviewMessage {\n\treadonly type: 'renderedCellOutput';\n\treadonly codeBlocks: ReadonlyArray<ICodeBlockHighlightRequest>;\n}\n\nexport interface IClearMessage {\n\treadonly type: 'clear';\n}\n\nexport interface OutputItemEntry {\n\treadonly mime: string;\n\treadonly valueBytes: Uint8Array;\n\treadonly appended?: { valueBytes: Uint8Array; previousVersion: number };\n}\n\nexport type ICreationContent =\n\t| { readonly type: RenderOutputType.Html; readonly htmlContent: string }\n\t| {\n\t\treadonly type: RenderOutputType.Extension;\n\t\treadonly outputId: string;\n\t\treadonly metadata: unknown;\n\t\treadonly output: OutputItemEntry;\n\t\treadonly allOutputs: ReadonlyArray<{ readonly mime: string }>;\n\t};\n\nexport interface ICreationRequestMessage {\n\treadonly type: 'html';\n\treadonly content: ICreationContent;\n\treadonly cellId: string;\n\treadonly outputId: string;\n\tcellTop: number;\n\toutputOffset: number;\n\treadonly left: number;\n\treadonly requiredPreloads: readonly IControllerPreload[];\n\treadonly initiallyHidden?: boolean;\n\treadonly rendererId?: string | undefined;\n\treadonly executionId?: string | undefined;\n\treadonly createOnIdle: boolean;\n}\n\nexport interface IContentWidgetTopRequest {\n\treadonly cellId: string;\n\treadonly outputId: string;\n\treadonly cellTop: number;\n\treadonly outputOffset: number;\n\treadonly forceDisplay: boolean;\n}\n\nexport interface IMarkupCellScrollTops {\n\treadonly id: string;\n\treadonly top: number;\n}\n\nexport interface IViewScrollTopRequestMessage {\n\treadonly type: 'view-scroll';\n\treadonly widgets: readonly IContentWidgetTopRequest[];\n\treadonly markupCells: readonly IMarkupCellScrollTops[];\n}\n\nexport interface IScrollRequestMessage {\n\treadonly type: 'scroll';\n\treadonly id: string;\n\treadonly top: number;\n\treadonly widgetTop?: number;\n\treadonly version: number;\n}\n\nexport interface IClearOutputRequestMessage {\n\treadonly type: 'clearOutput';\n\treadonly cellId: string;\n\treadonly outputId: string;\n\treadonly cellUri: string;\n\treadonly rendererId: string | undefined;\n}\n\nexport interface IHideOutputMessage {\n\treadonly type: 'hideOutput';\n\treadonly outputId: string;\n\treadonly cellId: string;\n}\n\nexport interface IShowOutputMessage {\n\treadonly type: 'showOutput';\n\treadonly cellId: string;\n\treadonly outputId: string;\n\treadonly cellTop: number;\n\treadonly outputOffset: number;\n\treadonly content?: ICreationContent;\n}\n\nexport interface ICopyImageMessage {\n\treadonly type: 'copyImage';\n\treadonly outputId: string;\n\treadonly altOutputId: string;\n}\n\nexport interface IFocusOutputMessage {\n\treadonly type: 'focus-output';\n\treadonly cellOrOutputId: string;\n\treadonly alternateId?: string;\n}\n\nexport interface IBlurOutputMessage {\n\treadonly type: 'blur-output';\n}\n\nexport interface IAckOutputHeight {\n\treadonly cellId: string;\n\treadonly outputId: string;\n\treadonly height: number;\n}\n\nexport interface IAckOutputHeightMessage {\n\treadonly type: 'ack-dimension';\n\treadonly updates: readonly IAckOutputHeight[];\n}\n\nexport interface IControllerPreload {\n\treadonly originalUri: string;\n\treadonly uri: string;\n}\n\nexport interface IUpdateControllerPreloadsMessage {\n\treadonly type: 'preload';\n\treadonly resources: readonly IControllerPreload[];\n}\n\nexport interface RendererMetadata {\n\treadonly id: string;\n\treadonly entrypoint: { readonly extends: string | undefined; readonly path: string };\n\treadonly mimeTypes: readonly string[];\n\treadonly messaging: boolean;\n\treadonly isBuiltin: boolean;\n}\n\nexport interface StaticPreloadMetadata {\n\treadonly entrypoint: string;\n}\n\nexport interface IUpdateRenderersMessage {\n\treadonly type: 'updateRenderers';\n\treadonly rendererData: readonly RendererMetadata[];\n}\n\nexport interface IUpdateDecorationsMessage {\n\treadonly type: 'decorations';\n\treadonly cellId: string;\n\treadonly addedClassNames: readonly string[];\n\treadonly removedClassNames: readonly string[];\n}\n\nexport interface ICustomKernelMessage extends BaseToWebviewMessage {\n\treadonly type: 'customKernelMessage';\n\treadonly message: unknown;\n}\n\nexport interface ICustomRendererMessage extends BaseToWebviewMessage {\n\treadonly type: 'customRendererMessage';\n\treadonly rendererId: string;\n\treadonly message: unknown;\n}\n\nexport interface ICreateMarkupCellMessage {\n\treadonly type: 'createMarkupCell';\n\treadonly cell: IMarkupCellInitialization;\n}\n\nexport interface IDeleteMarkupCellMessage {\n\treadonly type: 'deleteMarkupCell';\n\treadonly ids: readonly string[];\n}\n\nexport interface IHideMarkupCellMessage {\n\treadonly type: 'hideMarkupCells';\n\treadonly ids: readonly string[];\n}\n\nexport interface IUnhideMarkupCellMessage {\n\treadonly type: 'unhideMarkupCells';\n\treadonly ids: readonly string[];\n}\n\nexport interface IShowMarkupCellMessage {\n\treadonly type: 'showMarkupCell';\n\treadonly id: string;\n\treadonly handle: number;\n\treadonly content: string | undefined;\n\treadonly top: number;\n\treadonly metadata: NotebookCellMetadata | undefined;\n}\n\nexport interface IUpdateSelectedMarkupCellsMessage {\n\treadonly type: 'updateSelectedMarkupCells';\n\treadonly selectedCellIds: readonly string[];\n}\n\nexport interface IMarkupCellInitialization {\n\tmime: string;\n\tcellId: string;\n\tcellHandle: number;\n\tcontent: string;\n\toffset: number;\n\tvisible: boolean;\n\tmetadata: NotebookCellMetadata;\n}\n\nexport interface IInitializeMarkupCells {\n\treadonly type: 'initializeMarkup';\n\treadonly cells: readonly IMarkupCellInitialization[];\n\treadonly requestId: string;\n}\n\nexport interface INotebookStylesMessage {\n\treadonly type: 'notebookStyles';\n\treadonly styles: {\n\t\treadonly [key: string]: string;\n\t};\n}\n\nexport interface INotebookOptionsMessage {\n\treadonly type: 'notebookOptions';\n\treadonly options: PreloadOptions;\n\treadonly renderOptions: RenderOptions;\n}\n\nexport interface ITokenizedCodeBlockMessage {\n\treadonly type: 'tokenizedCodeBlock';\n\treadonly codeBlockId: string;\n\treadonly html: string;\n}\n\nexport interface ITokenizedStylesChangedMessage {\n\treadonly type: 'tokenizedStylesChanged';\n\treadonly css: string;\n}\n\nexport interface IFindMessage {\n\treadonly type: 'find';\n\treadonly query: string;\n\treadonly options: { wholeWord?: boolean; caseSensitive?: boolean; includeMarkup: boolean; includeOutput: boolean; shouldGetSearchPreviewInfo: boolean; ownerID: string; findIds: string[] };\n}\n\n\nexport interface IFindHighlightCurrentMessage {\n\treadonly type: 'findHighlightCurrent';\n\treadonly index: number;\n\treadonly ownerID: string;\n}\n\nexport interface IFindUnHighlightCurrentMessage {\n\treadonly type: 'findUnHighlightCurrent';\n\treadonly index: number;\n\treadonly ownerID: string;\n}\n\nexport interface IFindStopMessage {\n\treadonly type: 'findStop';\n\treadonly ownerID: string;\n}\n\nexport interface ISearchPreviewInfo {\n\tline: string;\n\trange: {\n\t\tstart: number;\n\t\tend: number;\n\t};\n}\n\nexport interface IFindMatch {\n\treadonly type: 'preview' | 'output';\n\treadonly cellId: string;\n\treadonly id: string;\n\treadonly index: number;\n\treadonly searchPreviewInfo?: ISearchPreviewInfo;\n}\n\nexport interface IDidFindMessage extends BaseToWebviewMessage {\n\treadonly type: 'didFind';\n\treadonly matches: IFindMatch[];\n}\n\nexport interface IDidFindHighlightCurrentMessage extends BaseToWebviewMessage {\n\treadonly type: 'didFindHighlightCurrent';\n\treadonly offset: number;\n}\n\nexport interface IOutputResizedMessage extends BaseToWebviewMessage {\n\treadonly type: 'outputResized';\n\treadonly cellId: string;\n}\n\nexport interface IGetOutputItemMessage extends BaseToWebviewMessage {\n\treadonly type: 'getOutputItem';\n\treadonly requestId: number;\n\treadonly outputId: string;\n\treadonly mime: string;\n}\n\nexport interface IReturnOutputItemMessage {\n\treadonly type: 'returnOutputItem';\n\treadonly requestId: number;\n\treadonly output: OutputItemEntry | undefined;\n}\n\nexport interface ISelectOutputItemMessage {\n\treadonly type: 'select-output-contents';\n\treadonly cellOrOutputId: string;\n}\nexport interface ISelectInputOutputItemMessage {\n\treadonly type: 'select-input-contents';\n\treadonly cellOrOutputId: string;\n}\n\nexport interface ILogRendererDebugMessage extends BaseToWebviewMessage {\n\treadonly type: 'logRendererDebugMessage';\n\treadonly message: string;\n\treadonly data?: Record<string, string>;\n}\n\nexport interface IPerformanceMessage extends BaseToWebviewMessage {\n\treadonly type: 'notebookPerformanceMessage';\n\treadonly executionId: string;\n\treadonly cellId: string;\n\treadonly duration: number;\n\treadonly rendererId: string;\n\treadonly outputSize?: number;\n\treadonly mimeType?: string;\n}\n\n\nexport type FromWebviewMessage = WebviewInitialized |\n\tIDimensionMessage |\n\tIMouseEnterMessage |\n\tIMouseLeaveMessage |\n\tIOutputFocusMessage |\n\tIOutputBlurMessage |\n\tIOutputInputFocusMessage |\n\tIScrollToRevealMessage |\n\tIWheelMessage |\n\tIScrollAckMessage |\n\tIFocusEditorMessage |\n\tICustomKernelMessage |\n\tICustomRendererMessage |\n\tIClickedDataUrlMessage |\n\tIClickMarkupCellMessage |\n\tIClickedLinkMessage |\n\tIContextMenuMarkupCellMessage |\n\tIMouseEnterMarkupCellMessage |\n\tIMouseLeaveMarkupCellMessage |\n\tIToggleMarkupPreviewMessage |\n\tICellDragStartMessage |\n\tICellDragMessage |\n\tICellDropMessage |\n\tICellDragEndMessage |\n\tIInitializedMarkupMessage |\n\tIRenderedMarkupMessage |\n\tIRenderedCellOutputMessage |\n\tIDidFindMessage |\n\tIDidFindHighlightCurrentMessage |\n\tIOutputResizedMessage |\n\tIGetOutputItemMessage |\n\tILogRendererDebugMessage |\n\tIPerformanceMessage;\n\nexport type ToWebviewMessage = IClearMessage |\n\tIFocusOutputMessage |\n\tIBlurOutputMessage |\n\tIAckOutputHeightMessage |\n\tICreationRequestMessage |\n\tIViewScrollTopRequestMessage |\n\tIScrollRequestMessage |\n\tIClearOutputRequestMessage |\n\tIHideOutputMessage |\n\tIShowOutputMessage |\n\tICopyImageMessage |\n\tIUpdateControllerPreloadsMessage |\n\tIUpdateRenderersMessage |\n\tIUpdateDecorationsMessage |\n\tICustomKernelMessage |\n\tICustomRendererMessage |\n\tICreateMarkupCellMessage |\n\tIDeleteMarkupCellMessage |\n\tIShowMarkupCellMessage |\n\tIHideMarkupCellMessage |\n\tIUnhideMarkupCellMessage |\n\tIUpdateSelectedMarkupCellsMessage |\n\tIInitializeMarkupCells |\n\tINotebookStylesMessage |\n\tINotebookOptionsMessage |\n\tITokenizedCodeBlockMessage |\n\tITokenizedStylesChangedMessage |\n\tIFindMessage |\n\tIFindHighlightCurrentMessage |\n\tIFindUnHighlightCurrentMessage |\n\tIFindStopMessage |\n\tIReturnOutputItemMessage |\n\tISelectOutputItemMessage |\n\tISelectInputOutputItemMessage;\n\n\nexport type AnyMessage = FromWebviewMessage | ToWebviewMessage;\n"],
  "mappings": "AAOA,SAAS,4BAA4B;",
  "names": []
}
