{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/diff/notebookDiffViewModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { CancellationToken } from \"../../../../../base/common/cancellation.js\";\nimport type {\n\tIDiffChange,\n\tIDiffResult,\n} from \"../../../../../base/common/diff/diff.js\";\nimport {\n\tEmitter,\n\ttype IValueWithChangeEvent,\n} from \"../../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\tdispose,\n} from \"../../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../../base/common/network.js\";\nimport type { URI } from \"../../../../../base/common/uri.js\";\nimport type { FontInfo } from \"../../../../../editor/common/config/fontInfo.js\";\nimport type { IConfigurationService } from \"../../../../../platform/configuration/common/configuration.js\";\nimport type { ContextKeyValue } from \"../../../../../platform/contextkey/common/contextkey.js\";\nimport { MultiDiffEditorItem } from \"../../../multiDiffEditor/browser/multiDiffSourceResolverService.js\";\nimport type { NotebookTextModel } from \"../../common/model/notebookTextModel.js\";\nimport {\n\tCellUri,\n\ttype INotebookDiffEditorModel,\n\ttype INotebookDiffResult,\n} from \"../../common/notebookCommon.js\";\nimport type { INotebookService } from \"../../common/notebookService.js\";\nimport type { INotebookEditorWorkerService } from \"../../common/services/notebookWorkerService.js\";\nimport {\n\ttype DiffElementCellViewModelBase,\n\tDiffElementPlaceholderViewModel,\n\ttype IDiffElementViewModelBase,\n\tSideBySideDiffElementViewModel,\n\tSingleSideDiffElementViewModel,\n} from \"./diffElementViewModel.js\";\nimport type { NotebookDiffEditorEventDispatcher } from \"./eventDispatcher.js\";\nimport {\n\ttype INotebookDiffViewModel,\n\ttype INotebookDiffViewModelUpdateEvent,\n\tNOTEBOOK_DIFF_ITEM_DIFF_STATE,\n\tNOTEBOOK_DIFF_ITEM_KIND,\n} from \"./notebookDiffEditorBrowser.js\";\nimport type { IUnchangedEditorRegionsService } from \"./unchangedEditorRegions.js\";\n\nexport class NotebookDiffViewModel\n\textends Disposable\n\timplements\n\t\tINotebookDiffViewModel,\n\t\tIValueWithChangeEvent<readonly MultiDiffEditorItem[]>\n{\n\tprivate readonly placeholderAndRelatedCells = new Map<\n\t\tDiffElementPlaceholderViewModel,\n\t\tDiffElementCellViewModelBase[]\n\t>();\n\tprivate readonly _items: IDiffElementViewModelBase[] = [];\n\tget items(): readonly IDiffElementViewModelBase[] {\n\t\treturn this._items;\n\t}\n\tprivate readonly _onDidChangeItems = this._register(\n\t\tnew Emitter<INotebookDiffViewModelUpdateEvent>(),\n\t);\n\tpublic readonly onDidChangeItems = this._onDidChangeItems.event;\n\tprivate readonly disposables = this._register(new DisposableStore());\n\tprivate _onDidChange = this._register(new Emitter<void>());\n\tprivate diffEditorItems: NotebookMultiDiffEditorItem[] = [];\n\tpublic onDidChange = this._onDidChange.event;\n\tget value(): readonly NotebookMultiDiffEditorItem[] {\n\t\treturn this.diffEditorItems\n\t\t\t.filter((item) => item.type !== \"placeholder\")\n\t\t\t.filter((item) => {\n\t\t\t\tif (this._includeUnchanged) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (item instanceof NotebookMultiDiffEditorCellItem) {\n\t\t\t\t\treturn item.type === \"unchanged\" &&\n\t\t\t\t\t\titem.containerType === \"unchanged\"\n\t\t\t\t\t\t? false\n\t\t\t\t\t\t: true;\n\t\t\t\t}\n\t\t\t\tif (item instanceof NotebookMultiDiffEditorMetadataItem) {\n\t\t\t\t\treturn item.type === \"unchanged\" &&\n\t\t\t\t\t\titem.containerType === \"unchanged\"\n\t\t\t\t\t\t? false\n\t\t\t\t\t\t: true;\n\t\t\t\t}\n\t\t\t\tif (item instanceof NotebookMultiDiffEditorOutputItem) {\n\t\t\t\t\treturn item.type === \"unchanged\" &&\n\t\t\t\t\t\titem.containerType === \"unchanged\"\n\t\t\t\t\t\t? false\n\t\t\t\t\t\t: true;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t})\n\t\t\t.filter((item) =>\n\t\t\t\titem instanceof NotebookMultiDiffEditorOutputItem\n\t\t\t\t\t? !this.hideOutput\n\t\t\t\t\t: true,\n\t\t\t)\n\t\t\t.filter((item) =>\n\t\t\t\titem instanceof NotebookMultiDiffEditorMetadataItem\n\t\t\t\t\t? !this.hideCellMetadata\n\t\t\t\t\t: true,\n\t\t\t);\n\t}\n\n\tprivate _hasUnchangedCells?: boolean;\n\tpublic get hasUnchangedCells() {\n\t\treturn this._hasUnchangedCells === true;\n\t}\n\tprivate _includeUnchanged?: boolean;\n\tpublic get includeUnchanged() {\n\t\treturn this._includeUnchanged === true;\n\t}\n\tpublic set includeUnchanged(value) {\n\t\tthis._includeUnchanged = value;\n\t\tthis._onDidChange.fire();\n\t}\n\tprivate hideOutput?: boolean;\n\tprivate hideCellMetadata?: boolean;\n\n\tprivate originalCellViewModels: DiffElementCellViewModelBase[] = [];\n\tconstructor(\n\t\tprivate readonly model: INotebookDiffEditorModel,\n\t\tprivate readonly notebookEditorWorkerService: INotebookEditorWorkerService,\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\tprivate readonly eventDispatcher: NotebookDiffEditorEventDispatcher,\n\t\tprivate readonly notebookService: INotebookService,\n\t\tprivate readonly unchangedRegionsService: IUnchangedEditorRegionsService,\n\t\tprivate readonly fontInfo?: FontInfo,\n\t\tprivate readonly excludeUnchangedPlaceholder?: boolean,\n\t) {\n\t\tsuper();\n\t\tthis.hideOutput =\n\t\t\tthis.model.modified.notebook.transientOptions.transientOutputs ||\n\t\t\tthis.configurationService.getValue<boolean>(\n\t\t\t\t\"notebook.diff.ignoreOutputs\",\n\t\t\t);\n\t\tthis.hideCellMetadata = this.configurationService.getValue(\n\t\t\t\"notebook.diff.ignoreMetadata\",\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tlet triggerChange = false;\n\t\t\t\tif (e.affectsConfiguration(\"notebook.diff.ignoreMetadata\")) {\n\t\t\t\t\tconst newValue =\n\t\t\t\t\t\tthis.configurationService.getValue<boolean>(\n\t\t\t\t\t\t\t\"notebook.diff.ignoreMetadata\",\n\t\t\t\t\t\t);\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tnewValue !== undefined &&\n\t\t\t\t\t\tthis.hideCellMetadata !== newValue\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.hideCellMetadata = newValue;\n\t\t\t\t\t\ttriggerChange = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (e.affectsConfiguration(\"notebook.diff.ignoreOutputs\")) {\n\t\t\t\t\tconst newValue =\n\t\t\t\t\t\tthis.configurationService.getValue<boolean>(\n\t\t\t\t\t\t\t\"notebook.diff.ignoreOutputs\",\n\t\t\t\t\t\t);\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tnewValue !== undefined &&\n\t\t\t\t\t\tthis.hideOutput !==\n\t\t\t\t\t\t\t(newValue ||\n\t\t\t\t\t\t\t\tthis.model.modified.notebook.transientOptions\n\t\t\t\t\t\t\t\t\t.transientOutputs)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.hideOutput =\n\t\t\t\t\t\t\tnewValue ||\n\t\t\t\t\t\t\t!!this.model.modified.notebook.transientOptions\n\t\t\t\t\t\t\t\t.transientOutputs;\n\t\t\t\t\t\ttriggerChange = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (triggerChange) {\n\t\t\t\t\tthis._onDidChange.fire();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\toverride dispose() {\n\t\tthis.clear();\n\t\tsuper.dispose();\n\t}\n\tprivate clear() {\n\t\tthis.disposables.clear();\n\t\tdispose(Array.from(this.placeholderAndRelatedCells.keys()));\n\t\tthis.placeholderAndRelatedCells.clear();\n\t\tdispose(this.originalCellViewModels);\n\t\tthis.originalCellViewModels = [];\n\t\tdispose(this._items);\n\t\tthis._items.splice(0, this._items.length);\n\t}\n\n\tasync computeDiff(\n\t\ttoken: CancellationToken,\n\t): Promise<{ firstChangeIndex: number } | undefined> {\n\t\tconst diffResult = await this.notebookEditorWorkerService.computeDiff(\n\t\t\tthis.model.original.resource,\n\t\t\tthis.model.modified.resource,\n\t\t);\n\t\tif (token.isCancellationRequested) {\n\t\t\t// after await the editor might be disposed.\n\t\t\treturn;\n\t\t}\n\n\t\tprettyChanges(this.model, diffResult.cellsDiff);\n\n\t\tconst { cellDiffInfo, firstChangeIndex } = computeDiff(\n\t\t\tthis.model,\n\t\t\tdiffResult,\n\t\t);\n\t\tif (isEqual(cellDiffInfo, this.originalCellViewModels, this.model)) {\n\t\t\treturn;\n\t\t} else {\n\t\t\tawait this.updateViewModels(cellDiffInfo);\n\t\t\tthis.updateDiffEditorItems();\n\t\t\treturn { firstChangeIndex };\n\t\t}\n\t}\n\n\tprivate updateDiffEditorItems() {\n\t\tthis.diffEditorItems = [];\n\t\tconst originalSourceUri = this.model.original.resource!;\n\t\tconst modifiedSourceUri = this.model.modified.resource!;\n\t\tthis._hasUnchangedCells = false;\n\t\tthis.items.forEach((item) => {\n\t\t\tswitch (item.type) {\n\t\t\t\tcase \"delete\": {\n\t\t\t\t\tthis.diffEditorItems.push(\n\t\t\t\t\t\tnew NotebookMultiDiffEditorCellItem(\n\t\t\t\t\t\t\titem.original!.uri,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\titem.type,\n\t\t\t\t\t\t\titem.type,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tconst originalMetadata = CellUri.generateCellPropertyUri(\n\t\t\t\t\t\toriginalSourceUri,\n\t\t\t\t\t\titem.original!.handle,\n\t\t\t\t\t\tSchemas.vscodeNotebookCellMetadata,\n\t\t\t\t\t);\n\t\t\t\t\tthis.diffEditorItems.push(\n\t\t\t\t\t\tnew NotebookMultiDiffEditorMetadataItem(\n\t\t\t\t\t\t\toriginalMetadata,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\titem.type,\n\t\t\t\t\t\t\titem.type,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tconst originalOutput = CellUri.generateCellPropertyUri(\n\t\t\t\t\t\toriginalSourceUri,\n\t\t\t\t\t\titem.original!.handle,\n\t\t\t\t\t\tSchemas.vscodeNotebookCellOutput,\n\t\t\t\t\t);\n\t\t\t\t\tthis.diffEditorItems.push(\n\t\t\t\t\t\tnew NotebookMultiDiffEditorOutputItem(\n\t\t\t\t\t\t\toriginalOutput,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\titem.type,\n\t\t\t\t\t\t\titem.type,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"insert\": {\n\t\t\t\t\tthis.diffEditorItems.push(\n\t\t\t\t\t\tnew NotebookMultiDiffEditorCellItem(\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\titem.modified!.uri,\n\t\t\t\t\t\t\titem.type,\n\t\t\t\t\t\t\titem.type,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tconst modifiedMetadata = CellUri.generateCellPropertyUri(\n\t\t\t\t\t\tmodifiedSourceUri,\n\t\t\t\t\t\titem.modified!.handle,\n\t\t\t\t\t\tSchemas.vscodeNotebookCellMetadata,\n\t\t\t\t\t);\n\t\t\t\t\tthis.diffEditorItems.push(\n\t\t\t\t\t\tnew NotebookMultiDiffEditorMetadataItem(\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tmodifiedMetadata,\n\t\t\t\t\t\t\titem.type,\n\t\t\t\t\t\t\titem.type,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tconst modifiedOutput = CellUri.generateCellPropertyUri(\n\t\t\t\t\t\tmodifiedSourceUri,\n\t\t\t\t\t\titem.modified!.handle,\n\t\t\t\t\t\tSchemas.vscodeNotebookCellOutput,\n\t\t\t\t\t);\n\t\t\t\t\tthis.diffEditorItems.push(\n\t\t\t\t\t\tnew NotebookMultiDiffEditorOutputItem(\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tmodifiedOutput,\n\t\t\t\t\t\t\titem.type,\n\t\t\t\t\t\t\titem.type,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"modified\": {\n\t\t\t\t\tconst cellType = item.checkIfInputModified()\n\t\t\t\t\t\t? item.type\n\t\t\t\t\t\t: \"unchanged\";\n\t\t\t\t\tconst containerChanged =\n\t\t\t\t\t\titem.checkIfInputModified() ||\n\t\t\t\t\t\titem.checkMetadataIfModified() ||\n\t\t\t\t\t\titem.checkIfOutputsModified()\n\t\t\t\t\t\t\t? item.type\n\t\t\t\t\t\t\t: \"unchanged\";\n\t\t\t\t\tthis.diffEditorItems.push(\n\t\t\t\t\t\tnew NotebookMultiDiffEditorCellItem(\n\t\t\t\t\t\t\titem.original!.uri,\n\t\t\t\t\t\t\titem.modified!.uri,\n\t\t\t\t\t\t\tcellType,\n\t\t\t\t\t\t\tcontainerChanged,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tconst originalMetadata = CellUri.generateCellPropertyUri(\n\t\t\t\t\t\toriginalSourceUri,\n\t\t\t\t\t\titem.original!.handle,\n\t\t\t\t\t\tSchemas.vscodeNotebookCellMetadata,\n\t\t\t\t\t);\n\t\t\t\t\tconst modifiedMetadata = CellUri.generateCellPropertyUri(\n\t\t\t\t\t\tmodifiedSourceUri,\n\t\t\t\t\t\titem.modified!.handle,\n\t\t\t\t\t\tSchemas.vscodeNotebookCellMetadata,\n\t\t\t\t\t);\n\t\t\t\t\tthis.diffEditorItems.push(\n\t\t\t\t\t\tnew NotebookMultiDiffEditorMetadataItem(\n\t\t\t\t\t\t\toriginalMetadata,\n\t\t\t\t\t\t\tmodifiedMetadata,\n\t\t\t\t\t\t\titem.checkMetadataIfModified()\n\t\t\t\t\t\t\t\t? item.type\n\t\t\t\t\t\t\t\t: \"unchanged\",\n\t\t\t\t\t\t\tcontainerChanged,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tconst originalOutput = CellUri.generateCellPropertyUri(\n\t\t\t\t\t\toriginalSourceUri,\n\t\t\t\t\t\titem.original!.handle,\n\t\t\t\t\t\tSchemas.vscodeNotebookCellOutput,\n\t\t\t\t\t);\n\t\t\t\t\tconst modifiedOutput = CellUri.generateCellPropertyUri(\n\t\t\t\t\t\tmodifiedSourceUri,\n\t\t\t\t\t\titem.modified!.handle,\n\t\t\t\t\t\tSchemas.vscodeNotebookCellOutput,\n\t\t\t\t\t);\n\t\t\t\t\tthis.diffEditorItems.push(\n\t\t\t\t\t\tnew NotebookMultiDiffEditorOutputItem(\n\t\t\t\t\t\t\toriginalOutput,\n\t\t\t\t\t\t\tmodifiedOutput,\n\t\t\t\t\t\t\titem.checkIfOutputsModified()\n\t\t\t\t\t\t\t\t? item.type\n\t\t\t\t\t\t\t\t: \"unchanged\",\n\t\t\t\t\t\t\tcontainerChanged,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"unchanged\": {\n\t\t\t\t\tthis._hasUnchangedCells = true;\n\t\t\t\t\tthis.diffEditorItems.push(\n\t\t\t\t\t\tnew NotebookMultiDiffEditorCellItem(\n\t\t\t\t\t\t\titem.original!.uri,\n\t\t\t\t\t\t\titem.modified!.uri,\n\t\t\t\t\t\t\titem.type,\n\t\t\t\t\t\t\titem.type,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tconst originalMetadata = CellUri.generateCellPropertyUri(\n\t\t\t\t\t\toriginalSourceUri,\n\t\t\t\t\t\titem.original!.handle,\n\t\t\t\t\t\tSchemas.vscodeNotebookCellMetadata,\n\t\t\t\t\t);\n\t\t\t\t\tconst modifiedMetadata = CellUri.generateCellPropertyUri(\n\t\t\t\t\t\tmodifiedSourceUri,\n\t\t\t\t\t\titem.modified!.handle,\n\t\t\t\t\t\tSchemas.vscodeNotebookCellMetadata,\n\t\t\t\t\t);\n\t\t\t\t\tthis.diffEditorItems.push(\n\t\t\t\t\t\tnew NotebookMultiDiffEditorMetadataItem(\n\t\t\t\t\t\t\toriginalMetadata,\n\t\t\t\t\t\t\tmodifiedMetadata,\n\t\t\t\t\t\t\titem.type,\n\t\t\t\t\t\t\titem.type,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tconst originalOutput = CellUri.generateCellPropertyUri(\n\t\t\t\t\t\toriginalSourceUri,\n\t\t\t\t\t\titem.original!.handle,\n\t\t\t\t\t\tSchemas.vscodeNotebookCellOutput,\n\t\t\t\t\t);\n\t\t\t\t\tconst modifiedOutput = CellUri.generateCellPropertyUri(\n\t\t\t\t\t\tmodifiedSourceUri,\n\t\t\t\t\t\titem.modified!.handle,\n\t\t\t\t\t\tSchemas.vscodeNotebookCellOutput,\n\t\t\t\t\t);\n\t\t\t\t\tthis.diffEditorItems.push(\n\t\t\t\t\t\tnew NotebookMultiDiffEditorOutputItem(\n\t\t\t\t\t\t\toriginalOutput,\n\t\t\t\t\t\t\tmodifiedOutput,\n\t\t\t\t\t\t\titem.type,\n\t\t\t\t\t\t\titem.type,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._onDidChange.fire();\n\t}\n\n\tprivate async updateViewModels(cellDiffInfo: CellDiffInfo[]) {\n\t\tconst cellViewModels = await createDiffViewModels(\n\t\t\tthis.configurationService,\n\t\t\tthis.model,\n\t\t\tthis.eventDispatcher,\n\t\t\tcellDiffInfo,\n\t\t\tthis.fontInfo,\n\t\t\tthis.notebookService,\n\t\t\tthis.unchangedRegionsService,\n\t\t);\n\t\tconst oldLength = this._items.length;\n\t\tthis.clear();\n\t\tthis._items.splice(0, oldLength);\n\n\t\tlet placeholder: DiffElementPlaceholderViewModel | undefined;\n\t\tthis.originalCellViewModels = cellViewModels;\n\t\tcellViewModels.forEach((vm, index) => {\n\t\t\tif (vm.type === \"unchanged\" && !this.excludeUnchangedPlaceholder) {\n\t\t\t\tif (!placeholder) {\n\t\t\t\t\tvm.displayIconToHideUnmodifiedCells = true;\n\t\t\t\t\tplaceholder = new DiffElementPlaceholderViewModel(\n\t\t\t\t\t\tvm.mainDocumentTextModel,\n\t\t\t\t\t\tvm.editorEventDispatcher,\n\t\t\t\t\t\tvm.initData,\n\t\t\t\t\t);\n\t\t\t\t\tthis._items.push(placeholder);\n\t\t\t\t\tconst placeholderItem = placeholder;\n\n\t\t\t\t\tthis.disposables.add(\n\t\t\t\t\t\tplaceholderItem.onUnfoldHiddenCells(() => {\n\t\t\t\t\t\t\tconst hiddenCellViewModels =\n\t\t\t\t\t\t\t\tthis.placeholderAndRelatedCells.get(\n\t\t\t\t\t\t\t\t\tplaceholderItem,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (!Array.isArray(hiddenCellViewModels)) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst start = this._items.indexOf(placeholderItem);\n\t\t\t\t\t\t\tthis._items.splice(\n\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t...hiddenCellViewModels,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthis._onDidChangeItems.fire({\n\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\tdeleteCount: 1,\n\t\t\t\t\t\t\t\telements: hiddenCellViewModels,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\tthis.disposables.add(\n\t\t\t\t\t\tvm.onHideUnchangedCells(() => {\n\t\t\t\t\t\t\tconst hiddenCellViewModels =\n\t\t\t\t\t\t\t\tthis.placeholderAndRelatedCells.get(\n\t\t\t\t\t\t\t\t\tplaceholderItem,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (!Array.isArray(hiddenCellViewModels)) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst start = this._items.indexOf(vm);\n\t\t\t\t\t\t\tthis._items.splice(\n\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\thiddenCellViewModels.length,\n\t\t\t\t\t\t\t\tplaceholderItem,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthis._onDidChangeItems.fire({\n\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\tdeleteCount: hiddenCellViewModels.length,\n\t\t\t\t\t\t\t\telements: [placeholderItem],\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tconst hiddenCellViewModels =\n\t\t\t\t\tthis.placeholderAndRelatedCells.get(placeholder) || [];\n\t\t\t\thiddenCellViewModels.push(vm);\n\t\t\t\tthis.placeholderAndRelatedCells.set(\n\t\t\t\t\tplaceholder,\n\t\t\t\t\thiddenCellViewModels,\n\t\t\t\t);\n\t\t\t\tplaceholder.hiddenCells.push(vm);\n\t\t\t} else {\n\t\t\t\tplaceholder = undefined;\n\t\t\t\tthis._items.push(vm);\n\t\t\t}\n\t\t});\n\n\t\t// Note, ensure all of the height calculations are done before firing the event.\n\t\t// This is to ensure that the diff editor is not resized multiple times, thereby avoiding flickering.\n\t\tthis._onDidChangeItems.fire({\n\t\t\tstart: 0,\n\t\t\tdeleteCount: oldLength,\n\t\t\telements: this._items,\n\t\t});\n\t}\n}\n\n/**\n * making sure that swapping cells are always translated to `insert+delete`.\n */\nexport function prettyChanges(\n\tmodel: INotebookDiffEditorModel,\n\tdiffResult: IDiffResult,\n) {\n\tconst changes = diffResult.changes;\n\tfor (let i = 0; i < diffResult.changes.length - 1; i++) {\n\t\t// then we know there is another change after current one\n\t\tconst curr = changes[i];\n\t\tconst next = changes[i + 1];\n\t\tconst x = curr.originalStart;\n\t\tconst y = curr.modifiedStart;\n\n\t\tif (\n\t\t\tcurr.originalLength === 1 &&\n\t\t\tcurr.modifiedLength === 0 &&\n\t\t\tnext.originalStart === x + 2 &&\n\t\t\tnext.originalLength === 0 &&\n\t\t\tnext.modifiedStart === y + 1 &&\n\t\t\tnext.modifiedLength === 1 &&\n\t\t\tmodel.original.notebook.cells[x].getHashValue() ===\n\t\t\t\tmodel.modified.notebook.cells[y + 1].getHashValue() &&\n\t\t\tmodel.original.notebook.cells[x + 1].getHashValue() ===\n\t\t\t\tmodel.modified.notebook.cells[y].getHashValue()\n\t\t) {\n\t\t\t// this is a swap\n\t\t\tcurr.originalStart = x;\n\t\t\tcurr.originalLength = 0;\n\t\t\tcurr.modifiedStart = y;\n\t\t\tcurr.modifiedLength = 1;\n\n\t\t\tnext.originalStart = x + 1;\n\t\t\tnext.originalLength = 1;\n\t\t\tnext.modifiedStart = y + 2;\n\t\t\tnext.modifiedLength = 0;\n\n\t\t\ti++;\n\t\t}\n\t}\n}\n\ntype CellDiffInfo =\n\t| {\n\t\t\toriginalCellIndex: number;\n\t\t\tmodifiedCellIndex: number;\n\t\t\ttype: \"unchanged\" | \"modified\";\n\t  }\n\t| {\n\t\t\toriginalCellIndex: number;\n\t\t\ttype: \"delete\";\n\t  }\n\t| {\n\t\t\tmodifiedCellIndex: number;\n\t\t\ttype: \"insert\";\n\t  };\nfunction computeDiff(\n\tmodel: INotebookDiffEditorModel,\n\tdiffResult: INotebookDiffResult,\n) {\n\tconst cellChanges = diffResult.cellsDiff.changes;\n\tconst cellDiffInfo: CellDiffInfo[] = [];\n\tconst originalModel = model.original.notebook;\n\tconst modifiedModel = model.modified.notebook;\n\tlet originalCellIndex = 0;\n\tlet modifiedCellIndex = 0;\n\n\tlet firstChangeIndex = -1;\n\n\tfor (let i = 0; i < cellChanges.length; i++) {\n\t\tconst change = cellChanges[i];\n\t\t// common cells\n\n\t\tfor (let j = 0; j < change.originalStart - originalCellIndex; j++) {\n\t\t\tconst originalCell = originalModel.cells[originalCellIndex + j];\n\t\t\tconst modifiedCell = modifiedModel.cells[modifiedCellIndex + j];\n\t\t\tif (originalCell.getHashValue() === modifiedCell.getHashValue()) {\n\t\t\t\tcellDiffInfo.push({\n\t\t\t\t\toriginalCellIndex: originalCellIndex + j,\n\t\t\t\t\tmodifiedCellIndex: modifiedCellIndex + j,\n\t\t\t\t\ttype: \"unchanged\",\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (firstChangeIndex === -1) {\n\t\t\t\t\tfirstChangeIndex = cellDiffInfo.length;\n\t\t\t\t}\n\t\t\t\tcellDiffInfo.push({\n\t\t\t\t\toriginalCellIndex: originalCellIndex + j,\n\t\t\t\t\tmodifiedCellIndex: modifiedCellIndex + j,\n\t\t\t\t\ttype: \"modified\",\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tconst modifiedLCS = computeModifiedLCS(\n\t\t\tchange,\n\t\t\toriginalModel,\n\t\t\tmodifiedModel,\n\t\t);\n\t\tif (modifiedLCS.length && firstChangeIndex === -1) {\n\t\t\tfirstChangeIndex = cellDiffInfo.length;\n\t\t}\n\n\t\tcellDiffInfo.push(...modifiedLCS);\n\t\toriginalCellIndex = change.originalStart + change.originalLength;\n\t\tmodifiedCellIndex = change.modifiedStart + change.modifiedLength;\n\t}\n\n\tfor (let i = originalCellIndex; i < originalModel.cells.length; i++) {\n\t\tcellDiffInfo.push({\n\t\t\toriginalCellIndex: i,\n\t\t\tmodifiedCellIndex: i - originalCellIndex + modifiedCellIndex,\n\t\t\ttype: \"unchanged\",\n\t\t});\n\t}\n\n\treturn {\n\t\tcellDiffInfo,\n\t\tfirstChangeIndex,\n\t};\n}\nfunction isEqual(\n\tcellDiffInfo: CellDiffInfo[],\n\tviewModels: DiffElementCellViewModelBase[],\n\tmodel: INotebookDiffEditorModel,\n) {\n\tif (cellDiffInfo.length !== viewModels.length) {\n\t\treturn false;\n\t}\n\tconst originalModel = model.original.notebook;\n\tconst modifiedModel = model.modified.notebook;\n\tfor (let i = 0; i < viewModels.length; i++) {\n\t\tconst a = cellDiffInfo[i];\n\t\tconst b = viewModels[i];\n\t\tif (a.type !== b.type) {\n\t\t\treturn false;\n\t\t}\n\t\tswitch (a.type) {\n\t\t\tcase \"delete\": {\n\t\t\t\tif (\n\t\t\t\t\toriginalModel.cells[a.originalCellIndex].handle !==\n\t\t\t\t\tb.original?.handle\n\t\t\t\t) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcase \"insert\": {\n\t\t\t\tif (\n\t\t\t\t\tmodifiedModel.cells[a.modifiedCellIndex].handle !==\n\t\t\t\t\tb.modified?.handle\n\t\t\t\t) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tif (\n\t\t\t\t\toriginalModel.cells[a.originalCellIndex].handle !==\n\t\t\t\t\tb.original?.handle\n\t\t\t\t) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tmodifiedModel.cells[a.modifiedCellIndex].handle !==\n\t\t\t\t\tb.modified?.handle\n\t\t\t\t) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nasync function createDiffViewModels(\n\tconfigurationService: IConfigurationService,\n\tmodel: INotebookDiffEditorModel,\n\teventDispatcher: NotebookDiffEditorEventDispatcher,\n\tcomputedCellDiffs: CellDiffInfo[],\n\tfontInfo: FontInfo | undefined,\n\tnotebookService: INotebookService,\n\tunchangedRegionsService: IUnchangedEditorRegionsService,\n) {\n\tconst originalModel = model.original.notebook;\n\tconst modifiedModel = model.modified.notebook;\n\tconst initData = {\n\t\tmetadataStatusHeight: configurationService.getValue(\n\t\t\t\"notebook.diff.ignoreMetadata\",\n\t\t)\n\t\t\t? 0\n\t\t\t: 25,\n\t\toutputStatusHeight:\n\t\t\tconfigurationService.getValue<boolean>(\n\t\t\t\t\"notebook.diff.ignoreOutputs\",\n\t\t\t) || !!modifiedModel.transientOptions.transientOutputs\n\t\t\t\t? 0\n\t\t\t\t: 25,\n\t\tfontInfo,\n\t};\n\treturn Promise.all(\n\t\tcomputedCellDiffs.map(async (diff) => {\n\t\t\tswitch (diff.type) {\n\t\t\t\tcase \"delete\": {\n\t\t\t\t\treturn new SingleSideDiffElementViewModel(\n\t\t\t\t\t\toriginalModel,\n\t\t\t\t\t\tmodifiedModel,\n\t\t\t\t\t\toriginalModel.cells[diff.originalCellIndex],\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\"delete\",\n\t\t\t\t\t\teventDispatcher,\n\t\t\t\t\t\tinitData,\n\t\t\t\t\t\tnotebookService,\n\t\t\t\t\t\tconfigurationService,\n\t\t\t\t\t\tunchangedRegionsService,\n\t\t\t\t\t\tdiff.originalCellIndex,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tcase \"insert\": {\n\t\t\t\t\treturn new SingleSideDiffElementViewModel(\n\t\t\t\t\t\tmodifiedModel,\n\t\t\t\t\t\toriginalModel,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tmodifiedModel.cells[diff.modifiedCellIndex],\n\t\t\t\t\t\t\"insert\",\n\t\t\t\t\t\teventDispatcher,\n\t\t\t\t\t\tinitData,\n\t\t\t\t\t\tnotebookService,\n\t\t\t\t\t\tconfigurationService,\n\t\t\t\t\t\tunchangedRegionsService,\n\t\t\t\t\t\tdiff.modifiedCellIndex,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tcase \"modified\": {\n\t\t\t\t\tconst viewModel = new SideBySideDiffElementViewModel(\n\t\t\t\t\t\tmodel.modified.notebook,\n\t\t\t\t\t\tmodel.original.notebook,\n\t\t\t\t\t\toriginalModel.cells[diff.originalCellIndex],\n\t\t\t\t\t\tmodifiedModel.cells[diff.modifiedCellIndex],\n\t\t\t\t\t\t\"modified\",\n\t\t\t\t\t\teventDispatcher,\n\t\t\t\t\t\tinitData,\n\t\t\t\t\t\tnotebookService,\n\t\t\t\t\t\tconfigurationService,\n\t\t\t\t\t\tdiff.originalCellIndex,\n\t\t\t\t\t\tunchangedRegionsService,\n\t\t\t\t\t);\n\t\t\t\t\t// Reduces flicker (compute this before setting the model)\n\t\t\t\t\t// Else when the model is set, the height of the editor will be x, after diff is computed, then height will be y.\n\t\t\t\t\t// & that results in flicker.\n\t\t\t\t\tawait viewModel.computeEditorHeights();\n\t\t\t\t\treturn viewModel;\n\t\t\t\t}\n\t\t\t\tcase \"unchanged\": {\n\t\t\t\t\treturn new SideBySideDiffElementViewModel(\n\t\t\t\t\t\tmodel.modified.notebook,\n\t\t\t\t\t\tmodel.original.notebook,\n\t\t\t\t\t\toriginalModel.cells[diff.originalCellIndex],\n\t\t\t\t\t\tmodifiedModel.cells[diff.modifiedCellIndex],\n\t\t\t\t\t\t\"unchanged\",\n\t\t\t\t\t\teventDispatcher,\n\t\t\t\t\t\tinitData,\n\t\t\t\t\t\tnotebookService,\n\t\t\t\t\t\tconfigurationService,\n\t\t\t\t\t\tdiff.originalCellIndex,\n\t\t\t\t\t\tunchangedRegionsService,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}),\n\t);\n}\n\nfunction computeModifiedLCS(\n\tchange: IDiffChange,\n\toriginalModel: NotebookTextModel,\n\tmodifiedModel: NotebookTextModel,\n) {\n\tconst result: CellDiffInfo[] = [];\n\t// modified cells\n\tconst modifiedLen = Math.min(change.originalLength, change.modifiedLength);\n\n\tfor (let j = 0; j < modifiedLen; j++) {\n\t\tconst isTheSame = originalModel.cells[change.originalStart + j].equal(\n\t\t\tmodifiedModel.cells[change.modifiedStart + j],\n\t\t);\n\t\tresult.push({\n\t\t\toriginalCellIndex: change.originalStart + j,\n\t\t\tmodifiedCellIndex: change.modifiedStart + j,\n\t\t\ttype: isTheSame ? \"unchanged\" : \"modified\",\n\t\t});\n\t}\n\n\tfor (let j = modifiedLen; j < change.originalLength; j++) {\n\t\t// deletion\n\t\tresult.push({\n\t\t\toriginalCellIndex: change.originalStart + j,\n\t\t\ttype: \"delete\",\n\t\t});\n\t}\n\n\tfor (let j = modifiedLen; j < change.modifiedLength; j++) {\n\t\tresult.push({\n\t\t\tmodifiedCellIndex: change.modifiedStart + j,\n\t\t\ttype: \"insert\",\n\t\t});\n\t}\n\n\treturn result;\n}\n\nexport abstract class NotebookMultiDiffEditorItem extends MultiDiffEditorItem {\n\tconstructor(\n\t\toriginalUri: URI | undefined,\n\t\tmodifiedUri: URI | undefined,\n\t\tgoToFileUri: URI | undefined,\n\t\tpublic readonly type: IDiffElementViewModelBase[\"type\"],\n\t\tpublic readonly containerType: IDiffElementViewModelBase[\"type\"],\n\t\tpublic kind: \"Cell\" | \"Metadata\" | \"Output\",\n\t\tcontextKeys?: Record<string, ContextKeyValue>,\n\t) {\n\t\tsuper(originalUri, modifiedUri, goToFileUri, contextKeys);\n\t}\n}\n\nclass NotebookMultiDiffEditorCellItem extends NotebookMultiDiffEditorItem {\n\tconstructor(\n\t\toriginalUri: URI | undefined,\n\t\tmodifiedUri: URI | undefined,\n\t\ttype: IDiffElementViewModelBase[\"type\"],\n\t\tcontainerType: IDiffElementViewModelBase[\"type\"],\n\t) {\n\t\tsuper(\n\t\t\toriginalUri,\n\t\t\tmodifiedUri,\n\t\t\tmodifiedUri || originalUri,\n\t\t\ttype,\n\t\t\tcontainerType,\n\t\t\t\"Cell\",\n\t\t\t{\n\t\t\t\t[NOTEBOOK_DIFF_ITEM_KIND.key]: \"Cell\",\n\t\t\t\t[NOTEBOOK_DIFF_ITEM_DIFF_STATE.key]: type,\n\t\t\t},\n\t\t);\n\t}\n}\n\nclass NotebookMultiDiffEditorMetadataItem extends NotebookMultiDiffEditorItem {\n\tconstructor(\n\t\toriginalUri: URI | undefined,\n\t\tmodifiedUri: URI | undefined,\n\t\ttype: IDiffElementViewModelBase[\"type\"],\n\t\tcontainerType: IDiffElementViewModelBase[\"type\"],\n\t) {\n\t\tsuper(\n\t\t\toriginalUri,\n\t\t\tmodifiedUri,\n\t\t\tmodifiedUri || originalUri,\n\t\t\ttype,\n\t\t\tcontainerType,\n\t\t\t\"Metadata\",\n\t\t\t{\n\t\t\t\t[NOTEBOOK_DIFF_ITEM_KIND.key]: \"Metadata\",\n\t\t\t\t[NOTEBOOK_DIFF_ITEM_DIFF_STATE.key]: type,\n\t\t\t},\n\t\t);\n\t}\n}\n\nclass NotebookMultiDiffEditorOutputItem extends NotebookMultiDiffEditorItem {\n\tconstructor(\n\t\toriginalUri: URI | undefined,\n\t\tmodifiedUri: URI | undefined,\n\t\ttype: IDiffElementViewModelBase[\"type\"],\n\t\tcontainerType: IDiffElementViewModelBase[\"type\"],\n\t) {\n\t\tsuper(\n\t\t\toriginalUri,\n\t\t\tmodifiedUri,\n\t\t\tmodifiedUri || originalUri,\n\t\t\ttype,\n\t\t\tcontainerType,\n\t\t\t\"Output\",\n\t\t\t{\n\t\t\t\t[NOTEBOOK_DIFF_ITEM_KIND.key]: \"Output\",\n\t\t\t\t[NOTEBOOK_DIFF_ITEM_DIFF_STATE.key]: type,\n\t\t\t},\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["hiddenCellViewModels"]
}
