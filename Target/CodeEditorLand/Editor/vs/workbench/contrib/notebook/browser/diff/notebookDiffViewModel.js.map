{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/diff/notebookDiffViewModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { IDiffResult, IDiffChange } from '../../../../../base/common/diff/diff.js';\nimport { Emitter, type IValueWithChangeEvent } from '../../../../../base/common/event.js';\nimport { Disposable, DisposableStore, dispose } from '../../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../../base/common/network.js';\nimport type { URI } from '../../../../../base/common/uri.js';\nimport { FontInfo } from '../../../../../editor/common/config/fontInfo.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport type { ContextKeyValue } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { MultiDiffEditorItem } from '../../../multiDiffEditor/browser/multiDiffSourceResolverService.js';\nimport { DiffElementCellViewModelBase, DiffElementPlaceholderViewModel, IDiffElementViewModelBase, NotebookDocumentMetadataViewModel, SideBySideDiffElementViewModel, SingleSideDiffElementViewModel } from './diffElementViewModel.js';\nimport { NotebookDiffEditorEventDispatcher } from './eventDispatcher.js';\nimport { INotebookDiffViewModel, INotebookDiffViewModelUpdateEvent, NOTEBOOK_DIFF_ITEM_DIFF_STATE, NOTEBOOK_DIFF_ITEM_KIND } from './notebookDiffEditorBrowser.js';\nimport { NotebookTextModel } from '../../common/model/notebookTextModel.js';\nimport { CellUri, INotebookDiffEditorModel, INotebookDiffResult } from '../../common/notebookCommon.js';\nimport { INotebookService } from '../../common/notebookService.js';\nimport { INotebookEditorWorkerService } from '../../common/services/notebookWorkerService.js';\nimport { IDiffEditorHeightCalculatorService } from './editorHeightCalculator.js';\n\nexport class NotebookDiffViewModel extends Disposable implements INotebookDiffViewModel, IValueWithChangeEvent<readonly MultiDiffEditorItem[]> {\n\tprivate readonly placeholderAndRelatedCells = new Map<DiffElementPlaceholderViewModel, DiffElementCellViewModelBase[]>();\n\tprivate readonly _items: IDiffElementViewModelBase[] = [];\n\tget items(): readonly IDiffElementViewModelBase[] {\n\t\treturn this._items;\n\t}\n\tprivate readonly _onDidChangeItems = this._register(new Emitter<INotebookDiffViewModelUpdateEvent>());\n\tpublic readonly onDidChangeItems = this._onDidChangeItems.event;\n\tprivate readonly disposables = this._register(new DisposableStore());\n\tprivate _onDidChange = this._register(new Emitter<void>());\n\tprivate diffEditorItems: NotebookMultiDiffEditorItem[] = [];\n\tpublic onDidChange = this._onDidChange.event;\n\tprivate notebookMetadataViewModel?: NotebookDocumentMetadataViewModel;\n\tget value(): readonly NotebookMultiDiffEditorItem[] {\n\t\treturn this.diffEditorItems\n\t\t\t.filter(item => item.type !== 'placeholder')\n\t\t\t.filter(item => {\n\t\t\t\tif (this._includeUnchanged) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (item instanceof NotebookMultiDiffEditorCellItem) {\n\t\t\t\t\treturn item.type === 'unchanged' && item.containerType === 'unchanged' ? false : true;\n\t\t\t\t}\n\t\t\t\tif (item instanceof NotebookMultiDiffEditorMetadataItem) {\n\t\t\t\t\treturn item.type === 'unchanged' && item.containerType === 'unchanged' ? false : true;\n\t\t\t\t}\n\t\t\t\tif (item instanceof NotebookMultiDiffEditorOutputItem) {\n\t\t\t\t\treturn item.type === 'unchanged' && item.containerType === 'unchanged' ? false : true;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t})\n\t\t\t.filter(item => item instanceof NotebookMultiDiffEditorOutputItem ? !this.hideOutput : true)\n\t\t\t.filter(item => item instanceof NotebookMultiDiffEditorMetadataItem ? !this.ignoreMetadata : true);\n\t}\n\n\tprivate _hasUnchangedCells?: boolean;\n\tpublic get hasUnchangedCells() {\n\t\treturn this._hasUnchangedCells === true;\n\t}\n\tprivate _includeUnchanged?: boolean;\n\tpublic get includeUnchanged() {\n\t\treturn this._includeUnchanged === true;\n\t}\n\tpublic set includeUnchanged(value) {\n\t\tthis._includeUnchanged = value;\n\t\tthis._onDidChange.fire();\n\t}\n\tprivate hideOutput?: boolean;\n\tprivate ignoreMetadata?: boolean;\n\n\tprivate originalCellViewModels: IDiffElementViewModelBase[] = [];\n\tconstructor(private readonly model: INotebookDiffEditorModel,\n\t\tprivate readonly notebookEditorWorkerService: INotebookEditorWorkerService,\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\tprivate readonly eventDispatcher: NotebookDiffEditorEventDispatcher,\n\t\tprivate readonly notebookService: INotebookService,\n\t\tprivate readonly diffEditorHeightCalculator: IDiffEditorHeightCalculatorService,\n\t\tprivate readonly fontInfo?: FontInfo,\n\t\tprivate readonly excludeUnchangedPlaceholder?: boolean,\n\t) {\n\t\tsuper();\n\t\tthis.hideOutput = this.model.modified.notebook.transientOptions.transientOutputs || this.configurationService.getValue<boolean>('notebook.diff.ignoreOutputs');\n\t\tthis.ignoreMetadata = this.configurationService.getValue('notebook.diff.ignoreMetadata');\n\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tlet triggerChange = false;\n\t\t\tlet metadataChanged = false;\n\t\t\tif (e.affectsConfiguration('notebook.diff.ignoreMetadata')) {\n\t\t\t\tconst newValue = this.configurationService.getValue<boolean>('notebook.diff.ignoreMetadata');\n\n\t\t\t\tif (newValue !== undefined && this.ignoreMetadata !== newValue) {\n\t\t\t\t\tthis.ignoreMetadata = newValue;\n\t\t\t\t\ttriggerChange = true;\n\t\t\t\t\tmetadataChanged = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (e.affectsConfiguration('notebook.diff.ignoreOutputs')) {\n\t\t\t\tconst newValue = this.configurationService.getValue<boolean>('notebook.diff.ignoreOutputs');\n\n\t\t\t\tif (newValue !== undefined && this.hideOutput !== (newValue || this.model.modified.notebook.transientOptions.transientOutputs)) {\n\t\t\t\t\tthis.hideOutput = newValue || !!(this.model.modified.notebook.transientOptions.transientOutputs);\n\t\t\t\t\ttriggerChange = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (metadataChanged) {\n\t\t\t\tthis.toggleNotebookMetadata();\n\t\t\t}\n\t\t\tif (triggerChange) {\n\t\t\t\tthis._onDidChange.fire();\n\t\t\t}\n\t\t}));\n\t}\n\toverride dispose() {\n\t\tthis.clear();\n\t\tsuper.dispose();\n\t}\n\tprivate clear() {\n\t\tthis.disposables.clear();\n\t\tdispose(Array.from(this.placeholderAndRelatedCells.keys()));\n\t\tthis.placeholderAndRelatedCells.clear();\n\t\tdispose(this.originalCellViewModels);\n\t\tthis.originalCellViewModels = [];\n\t\tdispose(this._items);\n\t\tthis._items.splice(0, this._items.length);\n\t}\n\n\tasync computeDiff(token: CancellationToken): Promise<{ firstChangeIndex: number } | undefined> {\n\t\tconst diffResult = await this.notebookEditorWorkerService.computeDiff(this.model.original.resource, this.model.modified.resource);\n\t\tif (token.isCancellationRequested) {\n\t\t\t// after await the editor might be disposed.\n\t\t\treturn;\n\t\t}\n\n\t\tprettyChanges(this.model, diffResult.cellsDiff);\n\n\t\tconst { cellDiffInfo, firstChangeIndex } = computeDiff(this.model, diffResult);\n\t\tif (isEqual(cellDiffInfo, this.originalCellViewModels, this.model)) {\n\t\t\treturn;\n\t\t} else {\n\t\t\tawait this.updateViewModels(cellDiffInfo, diffResult.metadataChanged);\n\t\t\tthis.updateDiffEditorItems();\n\t\t\treturn { firstChangeIndex };\n\t\t}\n\t}\n\n\tprivate toggleNotebookMetadata() {\n\t\tif (!this.notebookMetadataViewModel) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.ignoreMetadata) {\n\t\t\tif (this._items.length && this._items[0] === this.notebookMetadataViewModel) {\n\t\t\t\tthis._items.splice(0, 1);\n\t\t\t\tthis._onDidChangeItems.fire({ start: 0, deleteCount: 1, elements: [] });\n\t\t\t}\n\t\t} else {\n\t\t\tif (!this._items.length || this._items[0] !== this.notebookMetadataViewModel) {\n\t\t\t\tthis._items.splice(0, 0, this.notebookMetadataViewModel);\n\t\t\t\tthis._onDidChangeItems.fire({ start: 0, deleteCount: 0, elements: [this.notebookMetadataViewModel] });\n\t\t\t}\n\t\t}\n\t}\n\tprivate updateDiffEditorItems() {\n\t\tthis.diffEditorItems = [];\n\t\tconst originalSourceUri = this.model.original.resource!;\n\t\tconst modifiedSourceUri = this.model.modified.resource!;\n\t\tthis._hasUnchangedCells = false;\n\t\tthis.items.forEach(item => {\n\t\t\tswitch (item.type) {\n\t\t\t\tcase 'delete': {\n\t\t\t\t\tthis.diffEditorItems.push(new NotebookMultiDiffEditorCellItem(item.original!.uri, undefined, item.type, item.type));\n\t\t\t\t\tconst originalMetadata = CellUri.generateCellPropertyUri(originalSourceUri, item.original!.handle, Schemas.vscodeNotebookCellMetadata);\n\t\t\t\t\tthis.diffEditorItems.push(new NotebookMultiDiffEditorMetadataItem(originalMetadata, undefined, item.type, item.type));\n\t\t\t\t\tconst originalOutput = CellUri.generateCellPropertyUri(originalSourceUri, item.original!.handle, Schemas.vscodeNotebookCellOutput);\n\t\t\t\t\tthis.diffEditorItems.push(new NotebookMultiDiffEditorOutputItem(originalOutput, undefined, item.type, item.type));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'insert': {\n\t\t\t\t\tthis.diffEditorItems.push(new NotebookMultiDiffEditorCellItem(undefined, item.modified!.uri, item.type, item.type));\n\t\t\t\t\tconst modifiedMetadata = CellUri.generateCellPropertyUri(modifiedSourceUri, item.modified!.handle, Schemas.vscodeNotebookCellMetadata);\n\t\t\t\t\tthis.diffEditorItems.push(new NotebookMultiDiffEditorMetadataItem(undefined, modifiedMetadata, item.type, item.type));\n\t\t\t\t\tconst modifiedOutput = CellUri.generateCellPropertyUri(modifiedSourceUri, item.modified!.handle, Schemas.vscodeNotebookCellOutput);\n\t\t\t\t\tthis.diffEditorItems.push(new NotebookMultiDiffEditorOutputItem(undefined, modifiedOutput, item.type, item.type));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'modified': {\n\t\t\t\t\tconst cellType = item.checkIfInputModified() ? item.type : 'unchanged';\n\t\t\t\t\tconst containerChanged = (item.checkIfInputModified() || item.checkMetadataIfModified() || item.checkIfOutputsModified()) ? item.type : 'unchanged';\n\t\t\t\t\tthis.diffEditorItems.push(new NotebookMultiDiffEditorCellItem(item.original!.uri, item.modified!.uri, cellType, containerChanged));\n\t\t\t\t\tconst originalMetadata = CellUri.generateCellPropertyUri(originalSourceUri, item.original!.handle, Schemas.vscodeNotebookCellMetadata);\n\t\t\t\t\tconst modifiedMetadata = CellUri.generateCellPropertyUri(modifiedSourceUri, item.modified!.handle, Schemas.vscodeNotebookCellMetadata);\n\t\t\t\t\tthis.diffEditorItems.push(new NotebookMultiDiffEditorMetadataItem(originalMetadata, modifiedMetadata, item.checkMetadataIfModified() ? item.type : 'unchanged', containerChanged));\n\t\t\t\t\tconst originalOutput = CellUri.generateCellPropertyUri(originalSourceUri, item.original!.handle, Schemas.vscodeNotebookCellOutput);\n\t\t\t\t\tconst modifiedOutput = CellUri.generateCellPropertyUri(modifiedSourceUri, item.modified!.handle, Schemas.vscodeNotebookCellOutput);\n\t\t\t\t\tthis.diffEditorItems.push(new NotebookMultiDiffEditorOutputItem(originalOutput, modifiedOutput, item.checkIfOutputsModified() ? item.type : 'unchanged', containerChanged));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'unchanged': {\n\t\t\t\t\tthis._hasUnchangedCells = true;\n\t\t\t\t\tthis.diffEditorItems.push(new NotebookMultiDiffEditorCellItem(item.original!.uri, item.modified!.uri, item.type, item.type));\n\t\t\t\t\tconst originalMetadata = CellUri.generateCellPropertyUri(originalSourceUri, item.original!.handle, Schemas.vscodeNotebookCellMetadata);\n\t\t\t\t\tconst modifiedMetadata = CellUri.generateCellPropertyUri(modifiedSourceUri, item.modified!.handle, Schemas.vscodeNotebookCellMetadata);\n\t\t\t\t\tthis.diffEditorItems.push(new NotebookMultiDiffEditorMetadataItem(originalMetadata, modifiedMetadata, item.type, item.type));\n\t\t\t\t\tconst originalOutput = CellUri.generateCellPropertyUri(originalSourceUri, item.original!.handle, Schemas.vscodeNotebookCellOutput);\n\t\t\t\t\tconst modifiedOutput = CellUri.generateCellPropertyUri(modifiedSourceUri, item.modified!.handle, Schemas.vscodeNotebookCellOutput);\n\t\t\t\t\tthis.diffEditorItems.push(new NotebookMultiDiffEditorOutputItem(originalOutput, modifiedOutput, item.type, item.type));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._onDidChange.fire();\n\t}\n\n\tprivate async updateViewModels(cellDiffInfo: CellDiffInfo[], metadataChanged: boolean) {\n\t\tconst cellViewModels = await this.createDiffViewModels(cellDiffInfo, metadataChanged);\n\t\tconst oldLength = this._items.length;\n\t\tthis.clear();\n\t\tthis._items.splice(0, oldLength);\n\n\t\tlet placeholder: DiffElementPlaceholderViewModel | undefined = undefined;\n\t\tthis.originalCellViewModels = cellViewModels;\n\t\tcellViewModels.forEach((vm, index) => {\n\t\t\tif (vm.type === 'unchanged' && !this.excludeUnchangedPlaceholder) {\n\t\t\t\tif (!placeholder) {\n\t\t\t\t\tvm.displayIconToHideUnmodifiedCells = true;\n\t\t\t\t\tplaceholder = new DiffElementPlaceholderViewModel(vm.mainDocumentTextModel, vm.editorEventDispatcher, vm.initData);\n\t\t\t\t\tthis._items.push(placeholder);\n\t\t\t\t\tconst placeholderItem = placeholder;\n\n\t\t\t\t\tthis.disposables.add(placeholderItem.onUnfoldHiddenCells(() => {\n\t\t\t\t\t\tconst hiddenCellViewModels = this.placeholderAndRelatedCells.get(placeholderItem);\n\t\t\t\t\t\tif (!Array.isArray(hiddenCellViewModels)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst start = this._items.indexOf(placeholderItem);\n\t\t\t\t\t\tthis._items.splice(start, 1, ...hiddenCellViewModels);\n\t\t\t\t\t\tthis._onDidChangeItems.fire({ start, deleteCount: 1, elements: hiddenCellViewModels });\n\t\t\t\t\t}));\n\t\t\t\t\tthis.disposables.add(vm.onHideUnchangedCells(() => {\n\t\t\t\t\t\tconst hiddenCellViewModels = this.placeholderAndRelatedCells.get(placeholderItem);\n\t\t\t\t\t\tif (!Array.isArray(hiddenCellViewModels)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst start = this._items.indexOf(vm);\n\t\t\t\t\t\tthis._items.splice(start, hiddenCellViewModels.length, placeholderItem);\n\t\t\t\t\t\tthis._onDidChangeItems.fire({ start, deleteCount: hiddenCellViewModels.length, elements: [placeholderItem] });\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t\tconst hiddenCellViewModels = this.placeholderAndRelatedCells.get(placeholder) || [];\n\t\t\t\thiddenCellViewModels.push(vm);\n\t\t\t\tthis.placeholderAndRelatedCells.set(placeholder, hiddenCellViewModels);\n\t\t\t\tplaceholder.hiddenCells.push(vm);\n\t\t\t} else {\n\t\t\t\tplaceholder = undefined;\n\t\t\t\tthis._items.push(vm);\n\t\t\t}\n\t\t});\n\n\t\t// Note, ensure all of the height calculations are done before firing the event.\n\t\t// This is to ensure that the diff editor is not resized multiple times, thereby avoiding flickering.\n\t\tthis._onDidChangeItems.fire({ start: 0, deleteCount: oldLength, elements: this._items });\n\t}\n\tprivate async createDiffViewModels(computedCellDiffs: CellDiffInfo[], metadataChanged: boolean) {\n\t\tconst originalModel = this.model.original.notebook;\n\t\tconst modifiedModel = this.model.modified.notebook;\n\t\tconst initData = {\n\t\t\tmetadataStatusHeight: this.configurationService.getValue('notebook.diff.ignoreMetadata') ? 0 : 25,\n\t\t\toutputStatusHeight: this.configurationService.getValue<boolean>('notebook.diff.ignoreOutputs') || !!(modifiedModel.transientOptions.transientOutputs) ? 0 : 25,\n\t\t\tfontInfo: this.fontInfo\n\t\t};\n\n\t\tconst viewModels: (SingleSideDiffElementViewModel | SideBySideDiffElementViewModel | NotebookDocumentMetadataViewModel)[] = [];\n\t\tthis.notebookMetadataViewModel = this._register(new NotebookDocumentMetadataViewModel(this.model.original.notebook, this.model.modified.notebook, metadataChanged ? 'modifiedMetadata' : 'unchangedMetadata', this.eventDispatcher, initData, this.notebookService, this.diffEditorHeightCalculator));\n\t\tif (!this.ignoreMetadata) {\n\t\t\tif (metadataChanged) {\n\t\t\t\tawait this.notebookMetadataViewModel.computeHeights();\n\t\t\t}\n\t\t\tviewModels.push(this.notebookMetadataViewModel);\n\t\t}\n\t\tconst cellViewModels = await Promise.all(computedCellDiffs.map(async (diff) => {\n\t\t\tswitch (diff.type) {\n\t\t\t\tcase 'delete': {\n\t\t\t\t\treturn new SingleSideDiffElementViewModel(\n\t\t\t\t\t\toriginalModel,\n\t\t\t\t\t\tmodifiedModel,\n\t\t\t\t\t\toriginalModel.cells[diff.originalCellIndex],\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t'delete',\n\t\t\t\t\t\tthis.eventDispatcher,\n\t\t\t\t\t\tinitData,\n\t\t\t\t\t\tthis.notebookService,\n\t\t\t\t\t\tthis.configurationService,\n\t\t\t\t\t\tthis.diffEditorHeightCalculator,\n\t\t\t\t\t\tdiff.originalCellIndex\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tcase 'insert': {\n\t\t\t\t\treturn new SingleSideDiffElementViewModel(\n\t\t\t\t\t\tmodifiedModel,\n\t\t\t\t\t\toriginalModel,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tmodifiedModel.cells[diff.modifiedCellIndex],\n\t\t\t\t\t\t'insert',\n\t\t\t\t\t\tthis.eventDispatcher,\n\t\t\t\t\t\tinitData,\n\t\t\t\t\t\tthis.notebookService,\n\t\t\t\t\t\tthis.configurationService,\n\t\t\t\t\t\tthis.diffEditorHeightCalculator,\n\t\t\t\t\t\tdiff.modifiedCellIndex\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tcase 'modified': {\n\t\t\t\t\tconst viewModel = new SideBySideDiffElementViewModel(\n\t\t\t\t\t\tthis.model.modified.notebook,\n\t\t\t\t\t\tthis.model.original.notebook,\n\t\t\t\t\t\toriginalModel.cells[diff.originalCellIndex],\n\t\t\t\t\t\tmodifiedModel.cells[diff.modifiedCellIndex],\n\t\t\t\t\t\t'modified',\n\t\t\t\t\t\tthis.eventDispatcher,\n\t\t\t\t\t\tinitData,\n\t\t\t\t\t\tthis.notebookService,\n\t\t\t\t\t\tthis.configurationService,\n\t\t\t\t\t\tdiff.originalCellIndex,\n\t\t\t\t\t\tthis.diffEditorHeightCalculator\n\t\t\t\t\t);\n\t\t\t\t\t// Reduces flicker (compute this before setting the model)\n\t\t\t\t\t// Else when the model is set, the height of the editor will be x, after diff is computed, then height will be y.\n\t\t\t\t\t// & that results in flicker.\n\t\t\t\t\tawait viewModel.computeEditorHeights();\n\t\t\t\t\treturn viewModel;\n\t\t\t\t}\n\t\t\t\tcase 'unchanged': {\n\t\t\t\t\treturn new SideBySideDiffElementViewModel(\n\t\t\t\t\t\tthis.model.modified.notebook,\n\t\t\t\t\t\tthis.model.original.notebook,\n\t\t\t\t\t\toriginalModel.cells[diff.originalCellIndex],\n\t\t\t\t\t\tmodifiedModel.cells[diff.modifiedCellIndex],\n\t\t\t\t\t\t'unchanged', this.eventDispatcher,\n\t\t\t\t\t\tinitData,\n\t\t\t\t\t\tthis.notebookService,\n\t\t\t\t\t\tthis.configurationService,\n\t\t\t\t\t\tdiff.originalCellIndex,\n\t\t\t\t\t\tthis.diffEditorHeightCalculator\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tcellViewModels.forEach(vm => viewModels.push(vm));\n\n\t\treturn viewModels;\n\t}\n\n}\n\n\n/**\n * making sure that swapping cells are always translated to `insert+delete`.\n */\nexport function prettyChanges(model: INotebookDiffEditorModel, diffResult: IDiffResult) {\n\tconst changes = diffResult.changes;\n\tfor (let i = 0; i < diffResult.changes.length - 1; i++) {\n\t\t// then we know there is another change after current one\n\t\tconst curr = changes[i];\n\t\tconst next = changes[i + 1];\n\t\tconst x = curr.originalStart;\n\t\tconst y = curr.modifiedStart;\n\n\t\tif (\n\t\t\tcurr.originalLength === 1\n\t\t\t&& curr.modifiedLength === 0\n\t\t\t&& next.originalStart === x + 2\n\t\t\t&& next.originalLength === 0\n\t\t\t&& next.modifiedStart === y + 1\n\t\t\t&& next.modifiedLength === 1\n\t\t\t&& model.original.notebook.cells[x].getHashValue() === model.modified.notebook.cells[y + 1].getHashValue()\n\t\t\t&& model.original.notebook.cells[x + 1].getHashValue() === model.modified.notebook.cells[y].getHashValue()\n\t\t) {\n\t\t\t// this is a swap\n\t\t\tcurr.originalStart = x;\n\t\t\tcurr.originalLength = 0;\n\t\t\tcurr.modifiedStart = y;\n\t\t\tcurr.modifiedLength = 1;\n\n\t\t\tnext.originalStart = x + 1;\n\t\t\tnext.originalLength = 1;\n\t\t\tnext.modifiedStart = y + 2;\n\t\t\tnext.modifiedLength = 0;\n\n\t\t\ti++;\n\t\t}\n\t}\n}\n\ntype CellDiffInfo = {\n\toriginalCellIndex: number;\n\tmodifiedCellIndex: number;\n\ttype: 'unchanged' | 'modified';\n} |\n{\n\toriginalCellIndex: number;\n\ttype: 'delete';\n} |\n{\n\tmodifiedCellIndex: number;\n\ttype: 'insert';\n};\nfunction computeDiff(model: INotebookDiffEditorModel, diffResult: INotebookDiffResult) {\n\tconst cellChanges = diffResult.cellsDiff.changes;\n\tconst cellDiffInfo: CellDiffInfo[] = [];\n\tconst originalModel = model.original.notebook;\n\tconst modifiedModel = model.modified.notebook;\n\tlet originalCellIndex = 0;\n\tlet modifiedCellIndex = 0;\n\n\tlet firstChangeIndex = -1;\n\n\tfor (let i = 0; i < cellChanges.length; i++) {\n\t\tconst change = cellChanges[i];\n\t\t// common cells\n\n\t\tfor (let j = 0; j < change.originalStart - originalCellIndex; j++) {\n\t\t\tconst originalCell = originalModel.cells[originalCellIndex + j];\n\t\t\tconst modifiedCell = modifiedModel.cells[modifiedCellIndex + j];\n\t\t\tif (originalCell.getHashValue() === modifiedCell.getHashValue()) {\n\t\t\t\tcellDiffInfo.push({\n\t\t\t\t\toriginalCellIndex: originalCellIndex + j,\n\t\t\t\t\tmodifiedCellIndex: modifiedCellIndex + j,\n\t\t\t\t\ttype: 'unchanged'\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (firstChangeIndex === -1) {\n\t\t\t\t\tfirstChangeIndex = cellDiffInfo.length;\n\t\t\t\t}\n\t\t\t\tcellDiffInfo.push({\n\t\t\t\t\toriginalCellIndex: originalCellIndex + j,\n\t\t\t\t\tmodifiedCellIndex: modifiedCellIndex + j,\n\t\t\t\t\ttype: 'modified'\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tconst modifiedLCS = computeModifiedLCS(change, originalModel, modifiedModel);\n\t\tif (modifiedLCS.length && firstChangeIndex === -1) {\n\t\t\tfirstChangeIndex = cellDiffInfo.length;\n\t\t}\n\n\t\tcellDiffInfo.push(...modifiedLCS);\n\t\toriginalCellIndex = change.originalStart + change.originalLength;\n\t\tmodifiedCellIndex = change.modifiedStart + change.modifiedLength;\n\t}\n\n\tfor (let i = originalCellIndex; i < originalModel.cells.length; i++) {\n\t\tcellDiffInfo.push({\n\t\t\toriginalCellIndex: i,\n\t\t\tmodifiedCellIndex: i - originalCellIndex + modifiedCellIndex,\n\t\t\ttype: 'unchanged'\n\t\t});\n\t}\n\n\treturn {\n\t\tcellDiffInfo,\n\t\tfirstChangeIndex\n\t};\n}\nfunction isEqual(cellDiffInfo: CellDiffInfo[], viewModels: IDiffElementViewModelBase[], model: INotebookDiffEditorModel) {\n\tif (cellDiffInfo.length !== viewModels.length) {\n\t\treturn false;\n\t}\n\tconst originalModel = model.original.notebook;\n\tconst modifiedModel = model.modified.notebook;\n\tfor (let i = 0; i < viewModels.length; i++) {\n\t\tconst a = cellDiffInfo[i];\n\t\tconst b = viewModels[i];\n\t\tif (a.type !== b.type) {\n\t\t\treturn false;\n\t\t}\n\t\tswitch (a.type) {\n\t\t\tcase 'delete': {\n\t\t\t\tif (originalModel.cells[a.originalCellIndex].handle !== b.original?.handle) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcase 'insert': {\n\t\t\t\tif (modifiedModel.cells[a.modifiedCellIndex].handle !== b.modified?.handle) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tif (originalModel.cells[a.originalCellIndex].handle !== b.original?.handle) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (modifiedModel.cells[a.modifiedCellIndex].handle !== b.modified?.handle) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction computeModifiedLCS(change: IDiffChange, originalModel: NotebookTextModel, modifiedModel: NotebookTextModel) {\n\tconst result: CellDiffInfo[] = [];\n\t// modified cells\n\tconst modifiedLen = Math.min(change.originalLength, change.modifiedLength);\n\n\tfor (let j = 0; j < modifiedLen; j++) {\n\t\tconst isTheSame = originalModel.cells[change.originalStart + j].equal(modifiedModel.cells[change.modifiedStart + j]);\n\t\tresult.push({\n\t\t\toriginalCellIndex: change.originalStart + j,\n\t\t\tmodifiedCellIndex: change.modifiedStart + j,\n\t\t\ttype: isTheSame ? 'unchanged' : 'modified'\n\t\t});\n\t}\n\n\tfor (let j = modifiedLen; j < change.originalLength; j++) {\n\t\t// deletion\n\t\tresult.push({\n\t\t\toriginalCellIndex: change.originalStart + j,\n\t\t\ttype: 'delete'\n\t\t});\n\t}\n\n\tfor (let j = modifiedLen; j < change.modifiedLength; j++) {\n\t\tresult.push({\n\t\t\tmodifiedCellIndex: change.modifiedStart + j,\n\t\t\ttype: 'insert'\n\t\t});\n\t}\n\n\treturn result;\n}\n\n\nexport abstract class NotebookMultiDiffEditorItem extends MultiDiffEditorItem {\n\tconstructor(\n\t\toriginalUri: URI | undefined,\n\t\tmodifiedUri: URI | undefined,\n\t\tgoToFileUri: URI | undefined,\n\t\tpublic readonly type: IDiffElementViewModelBase['type'],\n\t\tpublic readonly containerType: IDiffElementViewModelBase['type'],\n\t\tpublic kind: 'Cell' | 'Metadata' | 'Output',\n\t\tcontextKeys?: Record<string, ContextKeyValue>,\n\t) {\n\t\tsuper(originalUri, modifiedUri, goToFileUri, contextKeys);\n\t}\n}\n\nclass NotebookMultiDiffEditorCellItem extends NotebookMultiDiffEditorItem {\n\tconstructor(\n\t\toriginalUri: URI | undefined,\n\t\tmodifiedUri: URI | undefined,\n\t\ttype: IDiffElementViewModelBase['type'],\n\t\tcontainerType: IDiffElementViewModelBase['type'],\n\t) {\n\t\tsuper(originalUri, modifiedUri, modifiedUri || originalUri, type, containerType, 'Cell', {\n\t\t\t[NOTEBOOK_DIFF_ITEM_KIND.key]: 'Cell',\n\t\t\t[NOTEBOOK_DIFF_ITEM_DIFF_STATE.key]: type\n\t\t});\n\t}\n}\n\nclass NotebookMultiDiffEditorMetadataItem extends NotebookMultiDiffEditorItem {\n\tconstructor(\n\t\toriginalUri: URI | undefined,\n\t\tmodifiedUri: URI | undefined,\n\t\ttype: IDiffElementViewModelBase['type'],\n\t\tcontainerType: IDiffElementViewModelBase['type'],\n\t) {\n\t\tsuper(originalUri, modifiedUri, modifiedUri || originalUri, type, containerType, 'Metadata', {\n\t\t\t[NOTEBOOK_DIFF_ITEM_KIND.key]: 'Metadata',\n\t\t\t[NOTEBOOK_DIFF_ITEM_DIFF_STATE.key]: type\n\t\t});\n\t}\n}\n\nclass NotebookMultiDiffEditorOutputItem extends NotebookMultiDiffEditorItem {\n\tconstructor(\n\t\toriginalUri: URI | undefined,\n\t\tmodifiedUri: URI | undefined,\n\t\ttype: IDiffElementViewModelBase['type'],\n\t\tcontainerType: IDiffElementViewModelBase['type'],\n\t) {\n\t\tsuper(originalUri, modifiedUri, modifiedUri || originalUri, type, containerType, 'Output', {\n\t\t\t[NOTEBOOK_DIFF_ITEM_KIND.key]: 'Output',\n\t\t\t[NOTEBOOK_DIFF_ITEM_DIFF_STATE.key]: type\n\t\t});\n\t}\n}\n"],
  "mappings": "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",
  "names": ["hiddenCellViewModels"]
}
