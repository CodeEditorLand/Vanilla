import * as DOM from "vs/base/browser/dom";
import { CancellationToken } from "vs/base/common/cancellation";
import type { URI } from "vs/base/common/uri";
import type { IMultiDiffEditorOptions } from "vs/editor/browser/widget/multiDiffEditor/multiDiffEditorWidgetImpl";
import { IConfigurationService } from "vs/platform/configuration/common/configuration";
import { IContextKeyService } from "vs/platform/contextkey/common/contextkey";
import { IInstantiationService } from "vs/platform/instantiation/common/instantiation";
import { IStorageService } from "vs/platform/storage/common/storage";
import { ITelemetryService } from "vs/platform/telemetry/common/telemetry";
import { IThemeService } from "vs/platform/theme/common/themeService";
import { EditorPane } from "vs/workbench/browser/parts/editor/editorPane";
import { IEditorOpenContext } from "vs/workbench/common/editor";
import { type IDiffElementViewModelBase } from "vs/workbench/contrib/notebook/browser/diff/diffElementViewModel";
import { NotebookMultiDiffEditorInput } from "vs/workbench/contrib/notebook/browser/diff/notebookMultiDiffEditorInput";
import { INotebookService } from "vs/workbench/contrib/notebook/common/notebookService";
import { INotebookEditorWorkerService } from "vs/workbench/contrib/notebook/common/services/notebookWorkerService";
import { IEditorGroup } from "vs/workbench/services/editor/common/editorGroupsService";
export declare class NotebookMultiTextDiffEditor extends EditorPane {
    private readonly instantiationService;
    private readonly _parentContextKeyService;
    private readonly notebookEditorWorkerService;
    private readonly configurationService;
    private readonly notebookService;
    private _multiDiffEditorWidget?;
    static readonly ID: string;
    private _fontInfo;
    protected _scopeContextKeyService: IContextKeyService;
    private readonly modelSpecificResources;
    private _model?;
    private viewModel?;
    private widgetViewModel?;
    get textModel(): any;
    private _notebookOptions;
    get notebookOptions(): NotebookOptions;
    private readonly ctxAllCollapsed;
    private readonly ctxHasUnchangedCells;
    private readonly ctxHiddenUnchangedCells;
    constructor(group: IEditorGroup, instantiationService: IInstantiationService, themeService: IThemeService, _parentContextKeyService: IContextKeyService, notebookEditorWorkerService: INotebookEditorWorkerService, configurationService: IConfigurationService, telemetryService: ITelemetryService, storageService: IStorageService, notebookService: INotebookService);
    private get fontInfo();
    layout(dimension: DOM.Dimension, position?: DOM.IDomPosition): void;
    private createFontInfo;
    protected createEditor(parent: HTMLElement): void;
    setInput(input: NotebookMultiDiffEditorInput, options: IMultiDiffEditorOptions | undefined, context: IEditorOpenContext, token: CancellationToken): Promise<void>;
    private _detachModel;
    _generateFontFamily(): string;
    setOptions(options: IMultiDiffEditorOptions | undefined): void;
    getControl(): any;
    focus(): void;
    hasFocus(): boolean;
    clearInput(): void;
    expandAll(): void;
    collapseAll(): void;
    hideUnchanged(): void;
    showUnchanged(): void;
    getDiffElementViewModel(uri: URI): IDiffElementViewModelBase | undefined;
}
