var x=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var c=(d,i,n,e)=>{for(var t=e>1?void 0:e?b(i,n):i,r=d.length-1,s;r>=0;r--)(s=d[r])&&(t=(e?s(i,n,t):s(t))||t);return e&&t&&x(i,n,t),t},u=(d,i)=>(n,e)=>i(n,e,d);import*as o from"../../../../../../../vs/base/browser/dom.js";import{Codicon as h}from"../../../../../../../vs/base/common/codicons.js";import{ThemeIcon as L}from"../../../../../../../vs/base/common/themables.js";import{localize as a}from"../../../../../../../vs/nls.js";import{IKeybindingService as E}from"../../../../../../../vs/platform/keybinding/common/keybinding.js";import{EXPAND_CELL_OUTPUT_COMMAND_ID as f}from"../../../../../../../vs/workbench/contrib/notebook/browser/notebookBrowser.js";import{CellContentPart as I}from"../../../../../../../vs/workbench/contrib/notebook/browser/view/cellPart.js";const m=o.$;let l=class extends I{constructor(n,e,t){super();this.notebookEditor=n;const r=o.append(e,m("span.expandOutputPlaceholder"));r.textContent=a("cellOutputsCollapsedMsg","Outputs are collapsed");const s=o.append(e,m("span.expandOutputIcon"));s.classList.add(...L.asClassNameArray(h.more));const p=t.lookupKeybinding(f);p&&(r.title=a("cellExpandOutputButtonLabelWithDoubleClick","Double-click to expand cell output ({0})",p.getLabel()),e.title=a("cellExpandOutputButtonLabel","Expand Cell Output (${0})",p.getLabel())),o.hide(e),this._register(o.addDisposableListener(s,o.EventType.CLICK,()=>this.expand())),this._register(o.addDisposableListener(e,o.EventType.DBLCLICK,()=>this.expand()))}expand(){!this.currentCell||!this.currentCell||this.notebookEditor.textModel.cells.indexOf(this.currentCell.model)<0||(this.currentCell.isOutputCollapsed=!this.currentCell.isOutputCollapsed)}};l=c([u(2,E)],l);export{l as CollapsedCellOutput};
