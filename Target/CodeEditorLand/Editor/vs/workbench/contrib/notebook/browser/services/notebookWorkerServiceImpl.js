var _=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var g=(d,n,o,t)=>{for(var r=t>1?void 0:t?v(n,o):n,a=d.length-1,c;a>=0;a--)(c=d[a])&&(r=(t?c(n,o,r):c(r))||r);return t&&r&&_(n,o,r),r},h=(d,n)=>(o,t)=>n(o,t,d);import{createWebWorker as S}from"../../../../../base/browser/defaultWorkerFactory.js";import{Disposable as p,DisposableStore as f,dispose as y,toDisposable as C}from"../../../../../base/common/lifecycle.js";import{Schemas as I}from"../../../../../base/common/network.js";import{isEqual as x}from"../../../../../base/common/resources.js";import{TextModel as N}from"../../../../../editor/common/model/textModel.js";import{IModelService as W}from"../../../../../editor/common/services/model.js";import{CellUri as w,NotebookCellsChangeType as m}from"../../common/notebookCommon.js";import{INotebookService as R}from"../../common/notebookService.js";let u=class extends p{_workerManager;constructor(n,o){super(),this._workerManager=this._register(new D(n,o))}canComputeDiff(n,o){throw new Error("Method not implemented.")}computeDiff(n,o){return this._workerManager.withWorker().then(t=>t.computeDiff(n,o))}canPromptRecommendation(n){return this._workerManager.withWorker().then(o=>o.canPromptRecommendation(n))}};u=g([h(0,R),h(1,W)],u);class D extends p{constructor(o,t){super();this._notebookService=o;this._modelService=t;this._editorWorkerClient=null}_editorWorkerClient;withWorker(){return this._editorWorkerClient||(this._editorWorkerClient=new U(this._notebookService,this._modelService)),Promise.resolve(this._editorWorkerClient)}}class E extends p{constructor(o,t,r){super();this._proxy=o;this._notebookService=t;this._modelService=r}_syncedModels=Object.create(null);_syncedModelsLastUsedTime=Object.create(null);ensureSyncedResources(o){for(const t of o){const r=t.toString();this._syncedModels[r]||this._beginModelSync(t),this._syncedModels[r]&&(this._syncedModelsLastUsedTime[r]=new Date().getTime())}}_beginModelSync(o){const t=this._notebookService.listNotebookDocuments().find(e=>e.uri.toString()===o.toString());if(!t)return;const r=o.toString();this._proxy.$acceptNewModel(t.uri.toString(),t.metadata,t.cells.map(e=>({handle:e.handle,url:e.uri.toString(),source:e.textBuffer.getLinesContent(),eol:e.textBuffer.getEOL(),versionId:e.textModel?.getVersionId()??0,language:e.language,mime:e.mime,cellKind:e.cellKind,outputs:e.outputs.map(i=>({outputId:i.outputId,outputs:i.outputs})),metadata:e.metadata,internalMetadata:e.internalMetadata})));const a=new f,c=e=>({handle:e.handle,url:e.uri.toString(),source:e.textBuffer.getLinesContent(),eol:e.textBuffer.getEOL(),versionId:0,language:e.language,cellKind:e.cellKind,outputs:e.outputs.map(i=>({outputId:i.outputId,outputs:i.outputs})),metadata:e.metadata,internalMetadata:e.internalMetadata}),k=new Set,b=e=>{!k.has(e)&&e.textModel&&(k.add(e),a.add(e.textModel.onDidChangeContent(i=>this._proxy.$acceptCellModelChanged(r,e.handle,i))))};t.cells.forEach(e=>b(e)),t.cells.length!==k.size&&a.add(this._modelService.onModelAdded(e=>{if(e.uri.scheme!==I.vscodeNotebookCell||!(e instanceof N))return;const i=w.parse(e.uri);if(!i||!x(i.notebook,t.uri))return;const s=t.cells.find(l=>l.handle===i.handle);s&&b(s)})),a.add(t.onDidChangeContent(e=>{const i=[];e.rawEvents.forEach(s=>{switch(s.kind){case m.ModelChange:case m.Initialize:{i.push({kind:s.kind,changes:s.changes.map(l=>[l[0],l[1],l[2].map(M=>c(M))])});break}case m.Move:{i.push({kind:m.Move,index:s.index,length:s.length,newIdx:s.newIdx,cells:s.cells.map(l=>c(l))});break}case m.ChangeCellContent:break;default:i.push(s)}}),this._proxy.$acceptModelChanged(r.toString(),{rawEvents:i,versionId:e.versionId})})),a.add(t.onWillDispose(()=>{this._stopModelSync(r)})),a.add(C(()=>{this._proxy.$acceptRemovedModel(r)})),this._syncedModels[r]=a}_stopModelSync(o){const t=this._syncedModels[o];delete this._syncedModels[o],delete this._syncedModelsLastUsedTime[o],y(t)}}class U extends p{constructor(o,t){super();this._notebookService=o;this._modelService=t;this._worker=null,this._modelManager=null}_worker;_modelManager;computeDiff(o,t){return this._ensureSyncedResources([o,t]).$computeDiff(o.toString(),t.toString())}canPromptRecommendation(o){return this._ensureSyncedResources([o]).$canPromptRecommendation(o.toString())}_getOrCreateModelManager(o){return this._modelManager||(this._modelManager=this._register(new E(o,this._notebookService,this._modelService))),this._modelManager}_ensureSyncedResources(o){const t=this._getOrCreateWorker().proxy;return this._getOrCreateModelManager(t).ensureSyncedResources(o),t}_getOrCreateWorker(){if(!this._worker)try{this._worker=this._register(S("vs/workbench/contrib/notebook/common/services/notebookSimpleWorker","NotebookEditorWorker"))}catch(o){throw o}return this._worker}}export{u as NotebookEditorWorkerServiceImpl};
