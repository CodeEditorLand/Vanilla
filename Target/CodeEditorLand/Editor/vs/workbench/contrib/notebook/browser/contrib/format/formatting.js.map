{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/format/formatting.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from \"../../../../../../base/common/cancellation.js\";\nimport { KeyCode, KeyMod } from \"../../../../../../base/common/keyCodes.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n} from \"../../../../../../base/common/lifecycle.js\";\nimport type { ICodeEditor } from \"../../../../../../editor/browser/editorBrowser.js\";\nimport {\n\tEditorAction,\n\tregisterEditorAction,\n} from \"../../../../../../editor/browser/editorExtensions.js\";\nimport {\n\tIBulkEditService,\n\tResourceTextEdit,\n} from \"../../../../../../editor/browser/services/bulkEditService.js\";\nimport { EditorContextKeys } from \"../../../../../../editor/common/editorContextKeys.js\";\nimport { IEditorWorkerService } from \"../../../../../../editor/common/services/editorWorker.js\";\nimport { ILanguageFeaturesService } from \"../../../../../../editor/common/services/languageFeatures.js\";\nimport { ITextModelService } from \"../../../../../../editor/common/services/resolverService.js\";\nimport {\n\tFormattingMode,\n\tformatDocumentWithSelectedProvider,\n\tgetDocumentFormattingEditsWithSelectedProvider,\n} from \"../../../../../../editor/contrib/format/browser/format.js\";\nimport { localize, localize2 } from \"../../../../../../nls.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../../../platform/configuration/common/configuration.js\";\nimport { ContextKeyExpr } from \"../../../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { Progress } from \"../../../../../../platform/progress/common/progress.js\";\nimport { Registry } from \"../../../../../../platform/registry/common/platform.js\";\nimport {\n\ttype IWorkbenchContribution,\n\ttype IWorkbenchContributionsRegistry,\n\tExtensions as WorkbenchContributionsExtensions,\n} from \"../../../../../common/contributions.js\";\nimport { IEditorService } from \"../../../../../services/editor/common/editorService.js\";\nimport { LifecyclePhase } from \"../../../../../services/lifecycle/common/lifecycle.js\";\nimport { NotebookSetting } from \"../../../common/notebookCommon.js\";\nimport {\n\tNOTEBOOK_EDITOR_EDITABLE,\n\tNOTEBOOK_IS_ACTIVE_EDITOR,\n} from \"../../../common/notebookContextKeys.js\";\nimport {\n\ttype ICellExecutionParticipant,\n\tINotebookExecutionService,\n} from \"../../../common/notebookExecutionService.js\";\nimport type { INotebookCellExecution } from \"../../../common/notebookExecutionStateService.js\";\nimport { INotebookService } from \"../../../common/notebookService.js\";\nimport { NOTEBOOK_ACTIONS_CATEGORY } from \"../../controller/coreActions.js\";\nimport { getNotebookEditorFromEditorPane } from \"../../notebookBrowser.js\";\nimport { CodeActionParticipantUtils } from \"../saveParticipants/saveParticipants.js\";\n\n// format notebook\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"notebook.format\",\n\t\t\t\ttitle: localize2(\"format.title\", \"Format Notebook\"),\n\t\t\t\tcategory: NOTEBOOK_ACTIONS_CATEGORY,\n\t\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\t\tNOTEBOOK_IS_ACTIVE_EDITOR,\n\t\t\t\t\tNOTEBOOK_EDITOR_EDITABLE,\n\t\t\t\t),\n\t\t\t\tkeybinding: {\n\t\t\t\t\twhen: EditorContextKeys.editorTextFocus.toNegated(),\n\t\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KeyF,\n\t\t\t\t\tlinux: {\n\t\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyI,\n\t\t\t\t\t},\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t},\n\t\t\t\tf1: true,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.EditorContext,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tEditorContextKeys.inCompositeEditor,\n\t\t\t\t\t\tEditorContextKeys.hasDocumentFormattingProvider,\n\t\t\t\t\t),\n\t\t\t\t\tgroup: \"1_modification\",\n\t\t\t\t\torder: 1.3,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst textModelService = accessor.get(ITextModelService);\n\t\t\tconst editorWorkerService = accessor.get(IEditorWorkerService);\n\t\t\tconst languageFeaturesService = accessor.get(\n\t\t\t\tILanguageFeaturesService,\n\t\t\t);\n\t\t\tconst bulkEditService = accessor.get(IBulkEditService);\n\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\n\t\t\tconst editor = getNotebookEditorFromEditorPane(\n\t\t\t\teditorService.activeEditorPane,\n\t\t\t);\n\t\t\tif (!editor || !editor.hasModel()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst notebook = editor.textModel;\n\n\t\t\tconst formatApplied: boolean =\n\t\t\t\tawait instantiationService.invokeFunction(\n\t\t\t\t\tCodeActionParticipantUtils.checkAndRunFormatCodeAction,\n\t\t\t\t\tnotebook,\n\t\t\t\t\tProgress.None,\n\t\t\t\t\tCancellationToken.None,\n\t\t\t\t);\n\n\t\t\tconst disposable = new DisposableStore();\n\t\t\ttry {\n\t\t\t\tif (!formatApplied) {\n\t\t\t\t\tconst allCellEdits = await Promise.all(\n\t\t\t\t\t\tnotebook.cells.map(async (cell) => {\n\t\t\t\t\t\t\tconst ref =\n\t\t\t\t\t\t\t\tawait textModelService.createModelReference(\n\t\t\t\t\t\t\t\t\tcell.uri,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdisposable.add(ref);\n\n\t\t\t\t\t\t\tconst model = ref.object.textEditorModel;\n\n\t\t\t\t\t\t\tconst formatEdits =\n\t\t\t\t\t\t\t\tawait getDocumentFormattingEditsWithSelectedProvider(\n\t\t\t\t\t\t\t\t\teditorWorkerService,\n\t\t\t\t\t\t\t\t\tlanguageFeaturesService,\n\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\tFormattingMode.Explicit,\n\t\t\t\t\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tconst edits: ResourceTextEdit[] = [];\n\n\t\t\t\t\t\t\tif (formatEdits) {\n\t\t\t\t\t\t\t\tfor (const edit of formatEdits) {\n\t\t\t\t\t\t\t\t\tedits.push(\n\t\t\t\t\t\t\t\t\t\tnew ResourceTextEdit(\n\t\t\t\t\t\t\t\t\t\t\tmodel.uri,\n\t\t\t\t\t\t\t\t\t\t\tedit,\n\t\t\t\t\t\t\t\t\t\t\tmodel.getVersionId(),\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn edits;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn [];\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\n\t\t\t\t\tawait bulkEditService.apply(\n\t\t\t\t\t\t/* edit */ allCellEdits.flat(),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: localize(\"label\", \"Format Notebook\"),\n\t\t\t\t\t\t\tcode: \"undoredo.formatNotebook\",\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tdisposable.dispose();\n\t\t\t}\n\t\t}\n\t},\n);\n\n// format cell\nregisterEditorAction(\n\tclass FormatCellAction extends EditorAction {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"notebook.formatCell\",\n\t\t\t\tlabel: localize(\"formatCell.label\", \"Format Cell\"),\n\t\t\t\talias: \"Format Cell\",\n\t\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\t\tNOTEBOOK_IS_ACTIVE_EDITOR,\n\t\t\t\t\tNOTEBOOK_EDITOR_EDITABLE,\n\t\t\t\t\tEditorContextKeys.inCompositeEditor,\n\t\t\t\t\tEditorContextKeys.writable,\n\t\t\t\t\tEditorContextKeys.hasDocumentFormattingProvider,\n\t\t\t\t),\n\t\t\t\tkbOpts: {\n\t\t\t\t\tkbExpr: ContextKeyExpr.and(\n\t\t\t\t\t\tEditorContextKeys.editorTextFocus,\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KeyF,\n\t\t\t\t\tlinux: {\n\t\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyI,\n\t\t\t\t\t},\n\t\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\t},\n\t\t\t\tcontextMenuOpts: {\n\t\t\t\t\tgroup: \"1_modification\",\n\t\t\t\t\torder: 1.301,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tasync run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\teditor: ICodeEditor,\n\t\t): Promise<void> {\n\t\t\tif (editor.hasModel()) {\n\t\t\t\tconst instaService = accessor.get(IInstantiationService);\n\t\t\t\tawait instaService.invokeFunction(\n\t\t\t\t\tformatDocumentWithSelectedProvider,\n\t\t\t\t\teditor,\n\t\t\t\t\tFormattingMode.Explicit,\n\t\t\t\t\tProgress.None,\n\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\ttrue,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n);\n\nclass FormatOnCellExecutionParticipant implements ICellExecutionParticipant {\n\tconstructor(\n\t\t@IBulkEditService private readonly bulkEditService: IBulkEditService,\n\t\t@ILanguageFeaturesService\n\t\tprivate readonly languageFeaturesService: ILanguageFeaturesService,\n\t\t@ITextModelService private readonly textModelService: ITextModelService,\n\t\t@IEditorWorkerService\n\t\tprivate readonly editorWorkerService: IEditorWorkerService,\n\t\t@IConfigurationService\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t) {}\n\n\tasync onWillExecuteCell(\n\t\texecutions: INotebookCellExecution[],\n\t): Promise<void> {\n\t\tconst enabled = this.configurationService.getValue<boolean>(\n\t\t\tNotebookSetting.formatOnCellExecution,\n\t\t);\n\t\tif (!enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst disposable = new DisposableStore();\n\t\ttry {\n\t\t\tconst allCellEdits = await Promise.all(\n\t\t\t\texecutions.map(async (cellExecution) => {\n\t\t\t\t\tconst nbModel = this._notebookService.getNotebookTextModel(\n\t\t\t\t\t\tcellExecution.notebook,\n\t\t\t\t\t);\n\t\t\t\t\tif (!nbModel) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t\tlet activeCell;\n\t\t\t\t\tfor (const cell of nbModel.cells) {\n\t\t\t\t\t\tif (cell.handle === cellExecution.cellHandle) {\n\t\t\t\t\t\t\tactiveCell = cell;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!activeCell) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\n\t\t\t\t\tconst ref =\n\t\t\t\t\t\tawait this.textModelService.createModelReference(\n\t\t\t\t\t\t\tactiveCell.uri,\n\t\t\t\t\t\t);\n\t\t\t\t\tdisposable.add(ref);\n\n\t\t\t\t\tconst model = ref.object.textEditorModel;\n\n\t\t\t\t\tconst formatEdits =\n\t\t\t\t\t\tawait getDocumentFormattingEditsWithSelectedProvider(\n\t\t\t\t\t\t\tthis.editorWorkerService,\n\t\t\t\t\t\t\tthis.languageFeaturesService,\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\tFormattingMode.Silent,\n\t\t\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\t\t);\n\n\t\t\t\t\tconst edits: ResourceTextEdit[] = [];\n\n\t\t\t\t\tif (formatEdits) {\n\t\t\t\t\t\tedits.push(\n\t\t\t\t\t\t\t...formatEdits.map(\n\t\t\t\t\t\t\t\t(edit) =>\n\t\t\t\t\t\t\t\t\tnew ResourceTextEdit(\n\t\t\t\t\t\t\t\t\t\tmodel.uri,\n\t\t\t\t\t\t\t\t\t\tedit,\n\t\t\t\t\t\t\t\t\t\tmodel.getVersionId(),\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn edits;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn [];\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tawait this.bulkEditService.apply(/* edit */ allCellEdits.flat(), {\n\t\t\t\tlabel: localize(\"formatCells.label\", \"Format Cells\"),\n\t\t\t\tcode: \"undoredo.notebooks.onWillExecuteFormat\",\n\t\t\t});\n\t\t} finally {\n\t\t\tdisposable.dispose();\n\t\t}\n\t}\n}\n\nexport class CellExecutionParticipantsContribution\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tconstructor(\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\t@INotebookExecutionService\n\t\tprivate readonly notebookExecutionService: INotebookExecutionService,\n\t) {\n\t\tsuper();\n\t\tthis.registerKernelExecutionParticipants();\n\t}\n\n\tprivate registerKernelExecutionParticipants(): void {\n\t\tthis._register(\n\t\t\tthis.notebookExecutionService.registerExecutionParticipant(\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tFormatOnCellExecutionParticipant,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t}\n}\n\nconst workbenchContributionsRegistry =\n\tRegistry.as<IWorkbenchContributionsRegistry>(\n\t\tWorkbenchContributionsExtensions.Workbench,\n\t);\nworkbenchContributionsRegistry.registerWorkbenchContribution(\n\tCellExecutionParticipantsContribution,\n\tLifecyclePhase.Restored,\n);\n"],
  "mappings": "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",
  "names": []
}
