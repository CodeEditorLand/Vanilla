{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/profile/notebookProfile.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { ServicesAccessor } from \"../../../../../../editor/browser/editorExtensions.js\";\nimport { localize } from \"../../../../../../nls.js\";\nimport {\n\tAction2,\n\tregisterAction2,\n} from \"../../../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../../../platform/configuration/common/configuration.js\";\nimport { NotebookSetting } from \"../../../common/notebookCommon.js\";\n\nexport enum NotebookProfileType {\n\tdefault = \"default\",\n\tjupyter = \"jupyter\",\n\tcolab = \"colab\",\n}\n\nconst profiles = {\n\t[NotebookProfileType.default]: {\n\t\t[NotebookSetting.focusIndicator]: \"gutter\",\n\t\t[NotebookSetting.insertToolbarLocation]: \"both\",\n\t\t[NotebookSetting.globalToolbar]: true,\n\t\t[NotebookSetting.cellToolbarLocation]: { default: \"right\" },\n\t\t[NotebookSetting.compactView]: true,\n\t\t[NotebookSetting.showCellStatusBar]: \"visible\",\n\t\t[NotebookSetting.consolidatedRunButton]: true,\n\t\t[NotebookSetting.undoRedoPerCell]: false,\n\t},\n\t[NotebookProfileType.jupyter]: {\n\t\t[NotebookSetting.focusIndicator]: \"gutter\",\n\t\t[NotebookSetting.insertToolbarLocation]: \"notebookToolbar\",\n\t\t[NotebookSetting.globalToolbar]: true,\n\t\t[NotebookSetting.cellToolbarLocation]: { default: \"left\" },\n\t\t[NotebookSetting.compactView]: true,\n\t\t[NotebookSetting.showCellStatusBar]: \"visible\",\n\t\t[NotebookSetting.consolidatedRunButton]: false,\n\t\t[NotebookSetting.undoRedoPerCell]: true,\n\t},\n\t[NotebookProfileType.colab]: {\n\t\t[NotebookSetting.focusIndicator]: \"border\",\n\t\t[NotebookSetting.insertToolbarLocation]: \"betweenCells\",\n\t\t[NotebookSetting.globalToolbar]: false,\n\t\t[NotebookSetting.cellToolbarLocation]: { default: \"right\" },\n\t\t[NotebookSetting.compactView]: false,\n\t\t[NotebookSetting.showCellStatusBar]: \"hidden\",\n\t\t[NotebookSetting.consolidatedRunButton]: true,\n\t\t[NotebookSetting.undoRedoPerCell]: false,\n\t},\n};\n\nasync function applyProfile(\n\tconfigService: IConfigurationService,\n\tprofile: Record<string, any>,\n): Promise<void> {\n\tconst promises = [];\n\tfor (const settingKey in profile) {\n\t\tpromises.push(\n\t\t\tconfigService.updateValue(settingKey, profile[settingKey]),\n\t\t);\n\t}\n\n\tawait Promise.all(promises);\n}\n\nexport interface ISetProfileArgs {\n\tprofile: NotebookProfileType;\n}\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"notebook.setProfile\",\n\t\t\t\ttitle: localize(\"setProfileTitle\", \"Set Profile\"),\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor, args: unknown): Promise<void> {\n\t\t\tif (!isSetProfileArgs(args)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst configService = accessor.get(IConfigurationService);\n\t\t\treturn applyProfile(configService, profiles[args.profile]);\n\t\t}\n\t},\n);\n\nfunction isSetProfileArgs(args: unknown): args is ISetProfileArgs {\n\tconst setProfileArgs = args as ISetProfileArgs;\n\treturn (\n\t\tsetProfileArgs.profile === NotebookProfileType.colab ||\n\t\tsetProfileArgs.profile === NotebookProfileType.default ||\n\t\tsetProfileArgs.profile === NotebookProfileType.jupyter\n\t);\n}\n\n// export class NotebookProfileContribution extends Disposable {\n\n// \tstatic readonly ID = 'workbench.contrib.notebookProfile';\n\n// \tconstructor(@IConfigurationService configService: IConfigurationService, @IWorkbenchAssignmentService private readonly experimentService: IWorkbenchAssignmentService) {\n// \t\tsuper();\n\n// \t\tif (this.experimentService) {\n// \t\t\tthis.experimentService.getTreatment<NotebookProfileType.default | NotebookProfileType.jupyter | NotebookProfileType.colab>('notebookprofile').then(treatment => {\n// \t\t\t\tif (treatment === undefined) {\n// \t\t\t\t\treturn;\n// \t\t\t\t} else {\n// \t\t\t\t\t// check if settings are already modified\n// \t\t\t\t\tconst focusIndicator = configService.getValue(NotebookSetting.focusIndicator);\n// \t\t\t\t\tconst insertToolbarPosition = configService.getValue(NotebookSetting.insertToolbarLocation);\n// \t\t\t\t\tconst globalToolbar = configService.getValue(NotebookSetting.globalToolbar);\n// \t\t\t\t\t// const cellToolbarLocation = configService.getValue(NotebookSetting.cellToolbarLocation);\n// \t\t\t\t\tconst compactView = configService.getValue(NotebookSetting.compactView);\n// \t\t\t\t\tconst showCellStatusBar = configService.getValue(NotebookSetting.showCellStatusBar);\n// \t\t\t\t\tconst consolidatedRunButton = configService.getValue(NotebookSetting.consolidatedRunButton);\n// \t\t\t\t\tif (focusIndicator === 'border'\n// \t\t\t\t\t\t&& insertToolbarPosition === 'both'\n// \t\t\t\t\t\t&& globalToolbar === false\n// \t\t\t\t\t\t// && cellToolbarLocation === undefined\n// \t\t\t\t\t\t&& compactView === true\n// \t\t\t\t\t\t&& showCellStatusBar === 'visible'\n// \t\t\t\t\t\t&& consolidatedRunButton === true\n// \t\t\t\t\t) {\n// \t\t\t\t\t\tapplyProfile(configService, profiles[treatment] ?? profiles[NotebookProfileType.default]);\n// \t\t\t\t\t}\n// \t\t\t\t}\n// \t\t\t});\n// \t\t}\n// \t}\n// }\n\n// registerWorkbenchContribution2(NotebookProfileContribution.ID, NotebookProfileContribution, WorkbenchPhase.BlockRestore);\n"],
  "mappings": ";;AAMA,SAAS,gBAAgB;AACzB;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,6BAA6B;AACtC,SAAS,uBAAuB;AAEzB,IAAK,sBAAL,kBAAKA,yBAAL;AACN,EAAAA,qBAAA,aAAU;AACV,EAAAA,qBAAA,aAAU;AACV,EAAAA,qBAAA,WAAQ;AAHG,SAAAA;AAAA,GAAA;AAMZ,MAAM,WAAW;AAAA,EAChB,CAAC,uBAA2B,GAAG;AAAA,IAC9B,CAAC,gBAAgB,cAAc,GAAG;AAAA,IAClC,CAAC,gBAAgB,qBAAqB,GAAG;AAAA,IACzC,CAAC,gBAAgB,aAAa,GAAG;AAAA,IACjC,CAAC,gBAAgB,mBAAmB,GAAG,EAAE,SAAS,QAAQ;AAAA,IAC1D,CAAC,gBAAgB,WAAW,GAAG;AAAA,IAC/B,CAAC,gBAAgB,iBAAiB,GAAG;AAAA,IACrC,CAAC,gBAAgB,qBAAqB,GAAG;AAAA,IACzC,CAAC,gBAAgB,eAAe,GAAG;AAAA,EACpC;AAAA,EACA,CAAC,uBAA2B,GAAG;AAAA,IAC9B,CAAC,gBAAgB,cAAc,GAAG;AAAA,IAClC,CAAC,gBAAgB,qBAAqB,GAAG;AAAA,IACzC,CAAC,gBAAgB,aAAa,GAAG;AAAA,IACjC,CAAC,gBAAgB,mBAAmB,GAAG,EAAE,SAAS,OAAO;AAAA,IACzD,CAAC,gBAAgB,WAAW,GAAG;AAAA,IAC/B,CAAC,gBAAgB,iBAAiB,GAAG;AAAA,IACrC,CAAC,gBAAgB,qBAAqB,GAAG;AAAA,IACzC,CAAC,gBAAgB,eAAe,GAAG;AAAA,EACpC;AAAA,EACA,CAAC,mBAAyB,GAAG;AAAA,IAC5B,CAAC,gBAAgB,cAAc,GAAG;AAAA,IAClC,CAAC,gBAAgB,qBAAqB,GAAG;AAAA,IACzC,CAAC,gBAAgB,aAAa,GAAG;AAAA,IACjC,CAAC,gBAAgB,mBAAmB,GAAG,EAAE,SAAS,QAAQ;AAAA,IAC1D,CAAC,gBAAgB,WAAW,GAAG;AAAA,IAC/B,CAAC,gBAAgB,iBAAiB,GAAG;AAAA,IACrC,CAAC,gBAAgB,qBAAqB,GAAG;AAAA,IACzC,CAAC,gBAAgB,eAAe,GAAG;AAAA,EACpC;AACD;AAEA,eAAe,aACd,eACA,SACgB;AAChB,QAAM,WAAW,CAAC;AAClB,aAAW,cAAc,SAAS;AACjC,aAAS;AAAA,MACR,cAAc,YAAY,YAAY,QAAQ,UAAU,CAAC;AAAA,IAC1D;AAAA,EACD;AAEA,QAAM,QAAQ,IAAI,QAAQ;AAC3B;AAZe;AAkBf;AAAA,EACC,cAAc,QAAQ;AAAA,IACrB,cAAc;AACb,YAAM;AAAA,QACL,IAAI;AAAA,QACJ,OAAO,SAAS,mBAAmB,aAAa;AAAA,MACjD,CAAC;AAAA,IACF;AAAA,IAEA,MAAM,IAAI,UAA4B,MAA8B;AACnE,UAAI,CAAC,iBAAiB,IAAI,GAAG;AAC5B;AAAA,MACD;AAEA,YAAM,gBAAgB,SAAS,IAAI,qBAAqB;AACxD,aAAO,aAAa,eAAe,SAAS,KAAK,OAAO,CAAC;AAAA,IAC1D;AAAA,EACD;AACD;AAEA,SAAS,iBAAiB,MAAwC;AACjE,QAAM,iBAAiB;AACvB,SACC,eAAe,YAAY,uBAC3B,eAAe,YAAY,2BAC3B,eAAe,YAAY;AAE7B;AAPS;",
  "names": ["NotebookProfileType"]
}
