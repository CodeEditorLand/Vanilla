{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/view/cellParts/cellStatusPart.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from \"../../../../../../base/browser/dom.js\";\nimport { StandardKeyboardEvent } from \"../../../../../../base/browser/keyboardEvent.js\";\nimport type { IManagedHoverTooltipMarkdownString } from \"../../../../../../base/browser/ui/hover/hover.js\";\nimport type {\n\tIHoverDelegate,\n\tIHoverDelegateOptions,\n} from \"../../../../../../base/browser/ui/hover/hoverDelegate.js\";\nimport { HoverPosition } from \"../../../../../../base/browser/ui/hover/hoverWidget.js\";\nimport { SimpleIconLabel } from \"../../../../../../base/browser/ui/iconLabel/simpleIconLabel.js\";\nimport type {\n\tWorkbenchActionExecutedClassification,\n\tWorkbenchActionExecutedEvent,\n} from \"../../../../../../base/common/actions.js\";\nimport { toErrorMessage } from \"../../../../../../base/common/errorMessage.js\";\nimport { Emitter, type Event } from \"../../../../../../base/common/event.js\";\nimport { stripIcons } from \"../../../../../../base/common/iconLabels.js\";\nimport { KeyCode } from \"../../../../../../base/common/keyCodes.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\tdispose,\n} from \"../../../../../../base/common/lifecycle.js\";\nimport { MarshalledId } from \"../../../../../../base/common/marshallingIds.js\";\nimport type { ThemeColor } from \"../../../../../../base/common/themables.js\";\nimport type { ICodeEditor } from \"../../../../../../editor/browser/editorBrowser.js\";\nimport { isThemeColor } from \"../../../../../../editor/common/editorCommon.js\";\nimport { ICommandService } from \"../../../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../../../platform/configuration/common/configuration.js\";\nimport { IHoverService } from \"../../../../../../platform/hover/browser/hover.js\";\nimport { IInstantiationService } from \"../../../../../../platform/instantiation/common/instantiation.js\";\nimport { INotificationService } from \"../../../../../../platform/notification/common/notification.js\";\nimport { ITelemetryService } from \"../../../../../../platform/telemetry/common/telemetry.js\";\nimport { IThemeService } from \"../../../../../../platform/theme/common/themeService.js\";\nimport {\n\tCellStatusbarAlignment,\n\ttype INotebookCellStatusBarItem,\n} from \"../../../common/notebookCommon.js\";\nimport type { INotebookCellActionContext } from \"../../controller/coreActions.js\";\nimport {\n\tCellFocusMode,\n\ttype ICellViewModel,\n\ttype INotebookEditorDelegate,\n} from \"../../notebookBrowser.js\";\nimport { CodeCellViewModel } from \"../../viewModel/codeCellViewModel.js\";\nimport { CellContentPart } from \"../cellPart.js\";\nimport { ClickTargetType, type IClickTarget } from \"./cellWidgets.js\";\n\nconst $ = DOM.$;\n\nexport class CellEditorStatusBar extends CellContentPart {\n\treadonly statusBarContainer: HTMLElement;\n\n\tprivate readonly leftItemsContainer: HTMLElement;\n\tprivate readonly rightItemsContainer: HTMLElement;\n\tprivate readonly itemsDisposable: DisposableStore;\n\n\tprivate leftItems: CellStatusBarItem[] = [];\n\tprivate rightItems: CellStatusBarItem[] = [];\n\tprivate width = 0;\n\n\tprivate currentContext: INotebookCellActionContext | undefined;\n\tprotected readonly _onDidClick: Emitter<IClickTarget> = this._register(\n\t\tnew Emitter<IClickTarget>(),\n\t);\n\treadonly onDidClick: Event<IClickTarget> = this._onDidClick.event;\n\n\tprivate readonly hoverDelegate: IHoverDelegate;\n\n\tconstructor(\n\t\tprivate readonly _notebookEditor: INotebookEditorDelegate,\n\t\tprivate readonly _cellContainer: HTMLElement,\n\t\teditorPart: HTMLElement,\n\t\tprivate readonly _editor: ICodeEditor | undefined,\n\t\t@IInstantiationService\n\t\tprivate readonly _instantiationService: IInstantiationService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t) {\n\t\tsuper();\n\t\tthis.statusBarContainer = DOM.append(\n\t\t\teditorPart,\n\t\t\t$(\".cell-statusbar-container\"),\n\t\t);\n\t\tthis.statusBarContainer.tabIndex = -1;\n\t\tconst leftItemsContainer = DOM.append(\n\t\t\tthis.statusBarContainer,\n\t\t\t$(\".cell-status-left\"),\n\t\t);\n\t\tconst rightItemsContainer = DOM.append(\n\t\t\tthis.statusBarContainer,\n\t\t\t$(\".cell-status-right\"),\n\t\t);\n\t\tthis.leftItemsContainer = DOM.append(\n\t\t\tleftItemsContainer,\n\t\t\t$(\".cell-contributed-items.cell-contributed-items-left\"),\n\t\t);\n\t\tthis.rightItemsContainer = DOM.append(\n\t\t\trightItemsContainer,\n\t\t\t$(\".cell-contributed-items.cell-contributed-items-right\"),\n\t\t);\n\n\t\tthis.itemsDisposable = this._register(new DisposableStore());\n\n\t\tthis.hoverDelegate = new (class implements IHoverDelegate {\n\t\t\tprivate _lastHoverHideTime = 0;\n\n\t\t\treadonly showHover = (options: IHoverDelegateOptions) => {\n\t\t\t\toptions.position = options.position ?? {};\n\t\t\t\toptions.position.hoverPosition = HoverPosition.ABOVE;\n\t\t\t\treturn hoverService.showHover(options);\n\t\t\t};\n\n\t\t\treadonly placement = \"element\";\n\n\t\t\tget delay(): number {\n\t\t\t\treturn Date.now() - this._lastHoverHideTime < 200\n\t\t\t\t\t? 0 // show instantly when a hover was recently shown\n\t\t\t\t\t: configurationService.getValue<number>(\n\t\t\t\t\t\t\t\"workbench.hover.delay\",\n\t\t\t\t\t\t);\n\t\t\t}\n\n\t\t\tonDidHideHover() {\n\t\t\t\tthis._lastHoverHideTime = Date.now();\n\t\t\t}\n\t\t})();\n\n\t\tthis._register(\n\t\t\tthis._themeService.onDidColorThemeChange(\n\t\t\t\t() =>\n\t\t\t\t\tthis.currentContext &&\n\t\t\t\t\tthis.updateContext(this.currentContext),\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tDOM.addDisposableListener(\n\t\t\t\tthis.statusBarContainer,\n\t\t\t\tDOM.EventType.CLICK,\n\t\t\t\t(e) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\te.target === leftItemsContainer ||\n\t\t\t\t\t\te.target === rightItemsContainer ||\n\t\t\t\t\t\te.target === this.statusBarContainer\n\t\t\t\t\t) {\n\t\t\t\t\t\t// hit on empty space\n\t\t\t\t\t\tthis._onDidClick.fire({\n\t\t\t\t\t\t\ttype: ClickTargetType.Container,\n\t\t\t\t\t\t\tevent: e,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst target = e.target;\n\t\t\t\t\t\tlet itemHasCommand = false;\n\t\t\t\t\t\tif (target && DOM.isHTMLElement(target)) {\n\t\t\t\t\t\t\tconst targetElement = <HTMLElement>target;\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\ttargetElement.classList.contains(\n\t\t\t\t\t\t\t\t\t\"cell-status-item-has-command\",\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\titemHasCommand = true;\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\ttargetElement.parentElement &&\n\t\t\t\t\t\t\t\ttargetElement.parentElement.classList.contains(\n\t\t\t\t\t\t\t\t\t\"cell-status-item-has-command\",\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\titemHasCommand = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (itemHasCommand) {\n\t\t\t\t\t\t\tthis._onDidClick.fire({\n\t\t\t\t\t\t\t\ttype: ClickTargetType.ContributedCommandItem,\n\t\t\t\t\t\t\t\tevent: e,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// text\n\t\t\t\t\t\t\tthis._onDidClick.fire({\n\t\t\t\t\t\t\t\ttype: ClickTargetType.ContributedTextItem,\n\t\t\t\t\t\t\t\tevent: e,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\toverride didRenderCell(element: ICellViewModel): void {\n\t\tif (this._notebookEditor.hasModel()) {\n\t\t\tconst context: INotebookCellActionContext & { $mid: number } = {\n\t\t\t\tui: true,\n\t\t\t\tcell: element,\n\t\t\t\tnotebookEditor: this._notebookEditor,\n\t\t\t\t$mid: MarshalledId.NotebookCellActionContext,\n\t\t\t};\n\t\t\tthis.updateContext(context);\n\t\t}\n\n\t\tif (this._editor) {\n\t\t\t// Focus Mode\n\t\t\tconst updateFocusModeForEditorEvent = () => {\n\t\t\t\tif (\n\t\t\t\t\tthis._editor &&\n\t\t\t\t\t(this._editor.hasWidgetFocus() ||\n\t\t\t\t\t\t(this.statusBarContainer.ownerDocument.activeElement &&\n\t\t\t\t\t\t\tthis.statusBarContainer.contains(\n\t\t\t\t\t\t\t\tthis.statusBarContainer.ownerDocument\n\t\t\t\t\t\t\t\t\t.activeElement,\n\t\t\t\t\t\t\t)))\n\t\t\t\t) {\n\t\t\t\t\telement.focusMode = CellFocusMode.Editor;\n\t\t\t\t} else {\n\t\t\t\t\tconst currentMode = element.focusMode;\n\t\t\t\t\tif (currentMode === CellFocusMode.ChatInput) {\n\t\t\t\t\t\telement.focusMode = CellFocusMode.ChatInput;\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tcurrentMode === CellFocusMode.Output &&\n\t\t\t\t\t\tthis._notebookEditor.hasWebviewFocus()\n\t\t\t\t\t) {\n\t\t\t\t\t\telement.focusMode = CellFocusMode.Output;\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.focusMode = CellFocusMode.Container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.cellDisposables.add(\n\t\t\t\tthis._editor.onDidFocusEditorWidget(() => {\n\t\t\t\t\tupdateFocusModeForEditorEvent();\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis.cellDisposables.add(\n\t\t\t\tthis._editor.onDidBlurEditorWidget(() => {\n\t\t\t\t\t// this is for a special case:\n\t\t\t\t\t// users click the status bar empty space, which we will then focus the editor\n\t\t\t\t\t// so we don't want to update the focus state too eagerly, it will be updated with onDidFocusEditorWidget\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis._notebookEditor.hasEditorFocus() &&\n\t\t\t\t\t\t!(\n\t\t\t\t\t\t\tthis.statusBarContainer.ownerDocument\n\t\t\t\t\t\t\t\t.activeElement &&\n\t\t\t\t\t\t\tthis.statusBarContainer.contains(\n\t\t\t\t\t\t\t\tthis.statusBarContainer.ownerDocument\n\t\t\t\t\t\t\t\t\t.activeElement,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tupdateFocusModeForEditorEvent();\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\t// Mouse click handlers\n\t\t\tthis.cellDisposables.add(\n\t\t\t\tthis.onDidClick((e) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.currentCell instanceof CodeCellViewModel &&\n\t\t\t\t\t\te.type !== ClickTargetType.ContributedCommandItem &&\n\t\t\t\t\t\tthis._editor\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst target = this._editor.getTargetAtClientPoint(\n\t\t\t\t\t\t\te.event.clientX,\n\t\t\t\t\t\t\te.event.clientY -\n\t\t\t\t\t\t\t\tthis._notebookEditor.notebookOptions.computeEditorStatusbarHeight(\n\t\t\t\t\t\t\t\t\tthis.currentCell.internalMetadata,\n\t\t\t\t\t\t\t\t\tthis.currentCell.uri,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (target?.position) {\n\t\t\t\t\t\t\tthis._editor.setPosition(target.position);\n\t\t\t\t\t\t\tthis._editor.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t}\n\n\toverride updateInternalLayoutNow(element: ICellViewModel): void {\n\t\t// todo@rebornix layer breaker\n\t\tthis._cellContainer.classList.toggle(\n\t\t\t\"cell-statusbar-hidden\",\n\t\t\tthis._notebookEditor.notebookOptions.computeEditorStatusbarHeight(\n\t\t\t\telement.internalMetadata,\n\t\t\t\telement.uri,\n\t\t\t) === 0,\n\t\t);\n\n\t\tconst layoutInfo = element.layoutInfo;\n\t\tconst width = layoutInfo.editorWidth;\n\t\tif (!width) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.width = width;\n\t\tthis.statusBarContainer.style.width = `${width}px`;\n\n\t\tconst maxItemWidth = this.getMaxItemWidth();\n\t\tthis.leftItems.forEach((item) => (item.maxWidth = maxItemWidth));\n\t\tthis.rightItems.forEach((item) => (item.maxWidth = maxItemWidth));\n\t}\n\n\tprivate getMaxItemWidth() {\n\t\treturn this.width / 2;\n\t}\n\n\tupdateContext(context: INotebookCellActionContext) {\n\t\tthis.currentContext = context;\n\t\tthis.itemsDisposable.clear();\n\n\t\tif (!this.currentContext) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.itemsDisposable.add(\n\t\t\tthis.currentContext.cell.onDidChangeLayout(() => {\n\t\t\t\tif (this.currentContext) {\n\t\t\t\t\tthis.updateInternalLayoutNow(this.currentContext.cell);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis.itemsDisposable.add(\n\t\t\tthis.currentContext.cell.onDidChangeCellStatusBarItems(() =>\n\t\t\t\tthis.updateRenderedItems(),\n\t\t\t),\n\t\t);\n\t\tthis.itemsDisposable.add(\n\t\t\tthis.currentContext.notebookEditor.onDidChangeActiveCell(() =>\n\t\t\t\tthis.updateActiveCell(),\n\t\t\t),\n\t\t);\n\t\tthis.updateInternalLayoutNow(this.currentContext.cell);\n\t\tthis.updateActiveCell();\n\t\tthis.updateRenderedItems();\n\t}\n\n\tprivate updateActiveCell(): void {\n\t\tconst isActiveCell =\n\t\t\tthis.currentContext!.notebookEditor.getActiveCell() ===\n\t\t\tthis.currentContext?.cell;\n\t\tthis.statusBarContainer.classList.toggle(\n\t\t\t\"is-active-cell\",\n\t\t\tisActiveCell,\n\t\t);\n\t}\n\n\tprivate updateRenderedItems(): void {\n\t\tconst items = this.currentContext!.cell.getCellStatusBarItems();\n\t\titems.sort((itemA, itemB) => {\n\t\t\treturn (itemB.priority ?? 0) - (itemA.priority ?? 0);\n\t\t});\n\n\t\tconst maxItemWidth = this.getMaxItemWidth();\n\t\tconst newLeftItems = items.filter(\n\t\t\t(item) => item.alignment === CellStatusbarAlignment.Left,\n\t\t);\n\t\tconst newRightItems = items\n\t\t\t.filter((item) => item.alignment === CellStatusbarAlignment.Right)\n\t\t\t.reverse();\n\n\t\tconst updateItems = (\n\t\t\trenderedItems: CellStatusBarItem[],\n\t\t\tnewItems: INotebookCellStatusBarItem[],\n\t\t\tcontainer: HTMLElement,\n\t\t) => {\n\t\t\tif (renderedItems.length > newItems.length) {\n\t\t\t\tconst deleted = renderedItems.splice(\n\t\t\t\t\tnewItems.length,\n\t\t\t\t\trenderedItems.length - newItems.length,\n\t\t\t\t);\n\t\t\t\tfor (const deletedItem of deleted) {\n\t\t\t\t\tdeletedItem.container.remove();\n\t\t\t\t\tdeletedItem.dispose();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnewItems.forEach((newLeftItem, i) => {\n\t\t\t\tconst existingItem = renderedItems[i];\n\t\t\t\tif (existingItem) {\n\t\t\t\t\texistingItem.updateItem(newLeftItem, maxItemWidth);\n\t\t\t\t} else {\n\t\t\t\t\tconst item = this._instantiationService.createInstance(\n\t\t\t\t\t\tCellStatusBarItem,\n\t\t\t\t\t\tthis.currentContext!,\n\t\t\t\t\t\tthis.hoverDelegate,\n\t\t\t\t\t\tthis._editor,\n\t\t\t\t\t\tnewLeftItem,\n\t\t\t\t\t\tmaxItemWidth,\n\t\t\t\t\t);\n\t\t\t\t\trenderedItems.push(item);\n\t\t\t\t\tcontainer.appendChild(item.container);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tupdateItems(this.leftItems, newLeftItems, this.leftItemsContainer);\n\t\tupdateItems(this.rightItems, newRightItems, this.rightItemsContainer);\n\t}\n\n\toverride dispose() {\n\t\tsuper.dispose();\n\t\tdispose(this.leftItems);\n\t\tdispose(this.rightItems);\n\t}\n}\n\nclass CellStatusBarItem extends Disposable {\n\treadonly container = $(\".cell-status-item\");\n\n\tset maxWidth(v: number) {\n\t\tthis.container.style.maxWidth = v + \"px\";\n\t}\n\n\tprivate _currentItem!: INotebookCellStatusBarItem;\n\tprivate readonly _itemDisposables = this._register(new DisposableStore());\n\n\tconstructor(\n\t\tprivate readonly _context: INotebookCellActionContext,\n\t\tprivate readonly _hoverDelegate: IHoverDelegate,\n\t\tprivate readonly _editor: ICodeEditor | undefined,\n\t\titemModel: INotebookCellStatusBarItem,\n\t\tmaxWidth: number | undefined,\n\t\t@ITelemetryService\n\t\tprivate readonly _telemetryService: ITelemetryService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@INotificationService\n\t\tprivate readonly _notificationService: INotificationService,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@IHoverService private readonly _hoverService: IHoverService,\n\t) {\n\t\tsuper();\n\n\t\tthis.updateItem(itemModel, maxWidth);\n\t}\n\n\tupdateItem(item: INotebookCellStatusBarItem, maxWidth: number | undefined) {\n\t\tthis._itemDisposables.clear();\n\n\t\tif (!this._currentItem || this._currentItem.text !== item.text) {\n\t\t\tthis._itemDisposables.add(\n\t\t\t\tnew SimpleIconLabel(this.container),\n\t\t\t).text = item.text.replace(/\\n/g, \" \");\n\t\t}\n\n\t\tconst resolveColor = (color: ThemeColor | string) => {\n\t\t\treturn isThemeColor(color)\n\t\t\t\t? this._themeService\n\t\t\t\t\t\t.getColorTheme()\n\t\t\t\t\t\t.getColor(color.id)\n\t\t\t\t\t\t?.toString() || \"\"\n\t\t\t\t: color;\n\t\t};\n\n\t\tthis.container.style.color = item.color ? resolveColor(item.color) : \"\";\n\t\tthis.container.style.backgroundColor = item.backgroundColor\n\t\t\t? resolveColor(item.backgroundColor)\n\t\t\t: \"\";\n\t\tthis.container.style.opacity = item.opacity ? item.opacity : \"\";\n\n\t\tthis.container.classList.toggle(\n\t\t\t\"cell-status-item-show-when-active\",\n\t\t\t!!item.onlyShowWhenActive,\n\t\t);\n\n\t\tif (typeof maxWidth === \"number\") {\n\t\t\tthis.maxWidth = maxWidth;\n\t\t}\n\n\t\tlet ariaLabel: string;\n\t\tlet role: string | undefined;\n\t\tif (item.accessibilityInformation) {\n\t\t\tariaLabel = item.accessibilityInformation.label;\n\t\t\trole = item.accessibilityInformation.role;\n\t\t} else {\n\t\t\tariaLabel = item.text ? stripIcons(item.text).trim() : \"\";\n\t\t}\n\n\t\tthis.container.setAttribute(\"aria-label\", ariaLabel);\n\t\tthis.container.setAttribute(\"role\", role || \"\");\n\n\t\tif (item.tooltip) {\n\t\t\tconst hoverContent =\n\t\t\t\ttypeof item.tooltip === \"string\"\n\t\t\t\t\t? item.tooltip\n\t\t\t\t\t: ({\n\t\t\t\t\t\t\tmarkdown: item.tooltip,\n\t\t\t\t\t\t\tmarkdownNotSupportedFallback: undefined,\n\t\t\t\t\t\t} satisfies IManagedHoverTooltipMarkdownString);\n\t\t\tthis._itemDisposables.add(\n\t\t\t\tthis._hoverService.setupManagedHover(\n\t\t\t\t\tthis._hoverDelegate,\n\t\t\t\t\tthis.container,\n\t\t\t\t\thoverContent,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tthis.container.classList.toggle(\n\t\t\t\"cell-status-item-has-command\",\n\t\t\t!!item.command,\n\t\t);\n\t\tif (item.command) {\n\t\t\tthis.container.tabIndex = 0;\n\n\t\t\tthis._itemDisposables.add(\n\t\t\t\tDOM.addDisposableListener(\n\t\t\t\t\tthis.container,\n\t\t\t\t\tDOM.EventType.CLICK,\n\t\t\t\t\t(_e) => {\n\t\t\t\t\t\tthis.executeCommand();\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis._itemDisposables.add(\n\t\t\t\tDOM.addDisposableListener(\n\t\t\t\t\tthis.container,\n\t\t\t\t\tDOM.EventType.KEY_DOWN,\n\t\t\t\t\t(e) => {\n\t\t\t\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tevent.equals(KeyCode.Space) ||\n\t\t\t\t\t\t\tevent.equals(KeyCode.Enter)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.executeCommand();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t} else {\n\t\t\tthis.container.removeAttribute(\"tabIndex\");\n\t\t}\n\n\t\tthis._currentItem = item;\n\t}\n\n\tprivate async executeCommand(): Promise<void> {\n\t\tconst command = this._currentItem.command;\n\t\tif (!command) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = typeof command === \"string\" ? command : command.id;\n\t\tconst args =\n\t\t\ttypeof command === \"string\" ? [] : (command.arguments ?? []);\n\n\t\tif (\n\t\t\ttypeof command === \"string\" ||\n\t\t\t!command.arguments ||\n\t\t\t!Array.isArray(command.arguments) ||\n\t\t\tcommand.arguments.length === 0\n\t\t) {\n\t\t\targs.unshift(this._context);\n\t\t}\n\n\t\tthis._telemetryService.publicLog2<\n\t\t\tWorkbenchActionExecutedEvent,\n\t\t\tWorkbenchActionExecutedClassification\n\t\t>(\"workbenchActionExecuted\", { id, from: \"cell status bar\" });\n\t\ttry {\n\t\t\tthis._editor?.focus();\n\t\t\tawait this._commandService.executeCommand(id, ...args);\n\t\t} catch (error) {\n\t\t\tthis._notificationService.error(toErrorMessage(error));\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
