{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/find/notebookFind.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './media/notebookFind.css';\nimport { KeyCode, KeyMod } from '../../../../../../base/common/keyCodes.js';\nimport { Schemas } from '../../../../../../base/common/network.js';\nimport { isEqual } from '../../../../../../base/common/resources.js';\nimport { URI } from '../../../../../../base/common/uri.js';\nimport { ICodeEditor } from '../../../../../../editor/browser/editorBrowser.js';\nimport { ICodeEditorService } from '../../../../../../editor/browser/services/codeEditorService.js';\nimport { EditorOption } from '../../../../../../editor/common/config/editorOptions.js';\nimport { EditorContextKeys } from '../../../../../../editor/common/editorContextKeys.js';\nimport { ITextModel } from '../../../../../../editor/common/model.js';\nimport { FindStartFocusAction, getSelectionSearchString, IFindStartOptions, StartFindAction, StartFindReplaceAction } from '../../../../../../editor/contrib/find/browser/findController.js';\nimport { localize2 } from '../../../../../../nls.js';\nimport { Action2, registerAction2 } from '../../../../../../platform/actions/common/actions.js';\nimport { ContextKeyExpr } from '../../../../../../platform/contextkey/common/contextkey.js';\nimport { ServicesAccessor } from '../../../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingWeight } from '../../../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { IShowNotebookFindWidgetOptions, NotebookFindContrib } from './notebookFindWidget.js';\nimport { INotebookCommandContext, NotebookMultiCellAction } from '../../controller/coreActions.js';\nimport { getNotebookEditorFromEditorPane } from '../../notebookBrowser.js';\nimport { registerNotebookContribution } from '../../notebookEditorExtensions.js';\nimport { CellUri, NotebookFindScopeType } from '../../../common/notebookCommon.js';\nimport { INTERACTIVE_WINDOW_IS_ACTIVE_EDITOR, KEYBINDING_CONTEXT_NOTEBOOK_FIND_WIDGET_FOCUSED, NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_IS_ACTIVE_EDITOR } from '../../../common/notebookContextKeys.js';\nimport { IEditorService } from '../../../../../services/editor/common/editorService.js';\n\nregisterNotebookContribution(NotebookFindContrib.id, NotebookFindContrib);\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'notebook.hideFind',\n\t\t\ttitle: localize2('notebookActions.hideFind', 'Hide Find in Notebook'),\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, KEYBINDING_CONTEXT_NOTEBOOK_FIND_WIDGET_FOCUSED),\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editor = getNotebookEditorFromEditorPane(editorService.activeEditorPane);\n\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst controller = editor.getContribution<NotebookFindContrib>(NotebookFindContrib.id);\n\t\tcontroller.hide();\n\t\teditor.focus();\n\t}\n});\n\nregisterAction2(class extends NotebookMultiCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'notebook.find',\n\t\t\ttitle: localize2('notebookActions.findInNotebook', 'Find in Notebook'),\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, ContextKeyExpr.or(NOTEBOOK_IS_ACTIVE_EDITOR, INTERACTIVE_WINDOW_IS_ACTIVE_EDITOR), EditorContextKeys.focus.toNegated()),\n\t\t\t\tprimary: KeyCode.KeyF | KeyMod.CtrlCmd,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editor = getNotebookEditorFromEditorPane(editorService.activeEditorPane);\n\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst controller = editor.getContribution<NotebookFindContrib>(NotebookFindContrib.id);\n\t\tcontroller.show(undefined, { findScope: { findScopeType: NotebookFindScopeType.None } });\n\t}\n});\n\nfunction notebookContainsTextModel(uri: URI, textModel: ITextModel) {\n\tif (textModel.uri.scheme === Schemas.vscodeNotebookCell) {\n\t\tconst cellUri = CellUri.parse(textModel.uri);\n\t\tif (cellUri && isEqual(cellUri.notebook, uri)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nfunction getSearchStringOptions(editor: ICodeEditor, opts: IFindStartOptions) {\n\t// Get the search string result, following the same logic in _start function in 'vs/editor/contrib/find/browser/findController'\n\tif (opts.seedSearchStringFromSelection === 'single') {\n\t\tconst selectionSearchString = getSelectionSearchString(editor, opts.seedSearchStringFromSelection, opts.seedSearchStringFromNonEmptySelection);\n\t\tif (selectionSearchString) {\n\t\t\treturn {\n\t\t\t\tsearchString: selectionSearchString,\n\t\t\t\tselection: editor.getSelection()\n\t\t\t};\n\t\t}\n\t} else if (opts.seedSearchStringFromSelection === 'multiple' && !opts.updateSearchScope) {\n\t\tconst selectionSearchString = getSelectionSearchString(editor, opts.seedSearchStringFromSelection);\n\t\tif (selectionSearchString) {\n\t\t\treturn {\n\t\t\t\tsearchString: selectionSearchString,\n\t\t\t\tselection: editor.getSelection()\n\t\t\t};\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\n\nStartFindAction.addImplementation(100, (accessor: ServicesAccessor, codeEditor: ICodeEditor, args: any) => {\n\tconst editorService = accessor.get(IEditorService);\n\tconst editor = getNotebookEditorFromEditorPane(editorService.activeEditorPane);\n\n\tif (!editor) {\n\t\treturn false;\n\t}\n\n\tif (!codeEditor.hasModel()) {\n\t\treturn false;\n\t}\n\n\tif (!editor.hasEditorFocus() && !editor.hasWebviewFocus()) {\n\t\tconst codeEditorService = accessor.get(ICodeEditorService);\n\t\t// check if the active pane contains the active text editor\n\t\tconst textEditor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n\t\tif (editor.hasModel() && textEditor && textEditor.hasModel() && notebookContainsTextModel(editor.textModel.uri, textEditor.getModel())) {\n\t\t\t// the active text editor is in notebook editor\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tconst controller = editor.getContribution<NotebookFindContrib>(NotebookFindContrib.id);\n\n\tconst searchStringOptions = getSearchStringOptions(codeEditor, {\n\t\tforceRevealReplace: false,\n\t\tseedSearchStringFromSelection: codeEditor.getOption(EditorOption.find).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n\t\tseedSearchStringFromNonEmptySelection: codeEditor.getOption(EditorOption.find).seedSearchStringFromSelection === 'selection',\n\t\tseedSearchStringFromGlobalClipboard: codeEditor.getOption(EditorOption.find).globalFindClipboard,\n\t\tshouldFocus: FindStartFocusAction.FocusFindInput,\n\t\tshouldAnimate: true,\n\t\tupdateSearchScope: false,\n\t\tloop: codeEditor.getOption(EditorOption.find).loop\n\t});\n\n\tlet options: IShowNotebookFindWidgetOptions | undefined = undefined;\n\tconst uri = codeEditor.getModel().uri;\n\tconst data = CellUri.parse(uri);\n\tif (searchStringOptions?.selection && data) {\n\t\tconst cell = editor.getCellByHandle(data.handle);\n\t\tif (cell) {\n\t\t\toptions = {\n\t\t\t\tsearchStringSeededFrom: { cell, range: searchStringOptions.selection },\n\t\t\t};\n\t\t}\n\t}\n\n\tcontroller.show(searchStringOptions?.searchString, options);\n\treturn true;\n});\n\nStartFindReplaceAction.addImplementation(100, (accessor: ServicesAccessor, codeEditor: ICodeEditor, args: any) => {\n\tconst editorService = accessor.get(IEditorService);\n\tconst editor = getNotebookEditorFromEditorPane(editorService.activeEditorPane);\n\n\tif (!editor) {\n\t\treturn false;\n\t}\n\n\tif (!codeEditor.hasModel()) {\n\t\treturn false;\n\t}\n\n\tconst controller = editor.getContribution<NotebookFindContrib>(NotebookFindContrib.id);\n\n\tconst searchStringOptions = getSearchStringOptions(codeEditor, {\n\t\tforceRevealReplace: false,\n\t\tseedSearchStringFromSelection: codeEditor.getOption(EditorOption.find).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n\t\tseedSearchStringFromNonEmptySelection: codeEditor.getOption(EditorOption.find).seedSearchStringFromSelection === 'selection',\n\t\tseedSearchStringFromGlobalClipboard: codeEditor.getOption(EditorOption.find).globalFindClipboard,\n\t\tshouldFocus: FindStartFocusAction.FocusFindInput,\n\t\tshouldAnimate: true,\n\t\tupdateSearchScope: false,\n\t\tloop: codeEditor.getOption(EditorOption.find).loop\n\t});\n\n\tif (controller) {\n\t\tcontroller.replace(searchStringOptions?.searchString);\n\t\treturn true;\n\t}\n\n\treturn false;\n});\n"],
  "mappings": "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",
  "names": []
}
