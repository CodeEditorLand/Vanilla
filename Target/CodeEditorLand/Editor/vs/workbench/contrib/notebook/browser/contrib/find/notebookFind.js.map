{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/find/notebookFind.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/notebookFind.css\";\nimport { KeyCode, KeyMod } from \"../../../../../../base/common/keyCodes.js\";\nimport { Schemas } from \"../../../../../../base/common/network.js\";\nimport { isEqual } from \"../../../../../../base/common/resources.js\";\nimport type { URI } from \"../../../../../../base/common/uri.js\";\nimport type { ICodeEditor } from \"../../../../../../editor/browser/editorBrowser.js\";\nimport { ICodeEditorService } from \"../../../../../../editor/browser/services/codeEditorService.js\";\nimport { EditorOption } from \"../../../../../../editor/common/config/editorOptions.js\";\nimport { EditorContextKeys } from \"../../../../../../editor/common/editorContextKeys.js\";\nimport type { ITextModel } from \"../../../../../../editor/common/model.js\";\nimport {\n\tFindStartFocusAction,\n\ttype IFindStartOptions,\n\tStartFindAction,\n\tStartFindReplaceAction,\n\tgetSelectionSearchString,\n} from \"../../../../../../editor/contrib/find/browser/findController.js\";\nimport { localize2 } from \"../../../../../../nls.js\";\nimport {\n\tAction2,\n\tregisterAction2,\n} from \"../../../../../../platform/actions/common/actions.js\";\nimport { ContextKeyExpr } from \"../../../../../../platform/contextkey/common/contextkey.js\";\nimport type { ServicesAccessor } from \"../../../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { IEditorService } from \"../../../../../services/editor/common/editorService.js\";\nimport {\n\tCellUri,\n\tNotebookFindScopeType,\n} from \"../../../common/notebookCommon.js\";\nimport {\n\tINTERACTIVE_WINDOW_IS_ACTIVE_EDITOR,\n\tKEYBINDING_CONTEXT_NOTEBOOK_FIND_WIDGET_FOCUSED,\n\tNOTEBOOK_EDITOR_FOCUSED,\n\tNOTEBOOK_IS_ACTIVE_EDITOR,\n} from \"../../../common/notebookContextKeys.js\";\nimport {\n\ttype INotebookCommandContext,\n\tNotebookMultiCellAction,\n} from \"../../controller/coreActions.js\";\nimport { getNotebookEditorFromEditorPane } from \"../../notebookBrowser.js\";\nimport { registerNotebookContribution } from \"../../notebookEditorExtensions.js\";\nimport {\n\ttype IShowNotebookFindWidgetOptions,\n\tNotebookFindContrib,\n} from \"./notebookFindWidget.js\";\n\nregisterNotebookContribution(NotebookFindContrib.id, NotebookFindContrib);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"notebook.hideFind\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"notebookActions.hideFind\",\n\t\t\t\t\t\"Hide Find in Notebook\",\n\t\t\t\t),\n\t\t\t\tkeybinding: {\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tNOTEBOOK_EDITOR_FOCUSED,\n\t\t\t\t\t\tKEYBINDING_CONTEXT_NOTEBOOK_FIND_WIDGET_FOCUSED,\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst editor = getNotebookEditorFromEditorPane(\n\t\t\t\teditorService.activeEditorPane,\n\t\t\t);\n\n\t\t\tif (!editor) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst controller = editor.getContribution<NotebookFindContrib>(\n\t\t\t\tNotebookFindContrib.id,\n\t\t\t);\n\t\t\tcontroller.hide();\n\t\t\teditor.focus();\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends NotebookMultiCellAction {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"notebook.find\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"notebookActions.findInNotebook\",\n\t\t\t\t\t\"Find in Notebook\",\n\t\t\t\t),\n\t\t\t\tkeybinding: {\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tNOTEBOOK_EDITOR_FOCUSED,\n\t\t\t\t\t\tContextKeyExpr.or(\n\t\t\t\t\t\t\tNOTEBOOK_IS_ACTIVE_EDITOR,\n\t\t\t\t\t\t\tINTERACTIVE_WINDOW_IS_ACTIVE_EDITOR,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tEditorContextKeys.focus.toNegated(),\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyCode.KeyF | KeyMod.CtrlCmd,\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tasync runWithContext(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tcontext: INotebookCommandContext,\n\t\t): Promise<void> {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst editor = getNotebookEditorFromEditorPane(\n\t\t\t\teditorService.activeEditorPane,\n\t\t\t);\n\n\t\t\tif (!editor) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst controller = editor.getContribution<NotebookFindContrib>(\n\t\t\t\tNotebookFindContrib.id,\n\t\t\t);\n\t\t\tcontroller.show(undefined, {\n\t\t\t\tfindScope: { findScopeType: NotebookFindScopeType.None },\n\t\t\t});\n\t\t}\n\t},\n);\n\nfunction notebookContainsTextModel(uri: URI, textModel: ITextModel) {\n\tif (textModel.uri.scheme === Schemas.vscodeNotebookCell) {\n\t\tconst cellUri = CellUri.parse(textModel.uri);\n\t\tif (cellUri && isEqual(cellUri.notebook, uri)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nfunction getSearchStringOptions(editor: ICodeEditor, opts: IFindStartOptions) {\n\t// Get the search string result, following the same logic in _start function in 'vs/editor/contrib/find/browser/findController'\n\tif (opts.seedSearchStringFromSelection === \"single\") {\n\t\tconst selectionSearchString = getSelectionSearchString(\n\t\t\teditor,\n\t\t\topts.seedSearchStringFromSelection,\n\t\t\topts.seedSearchStringFromNonEmptySelection,\n\t\t);\n\t\tif (selectionSearchString) {\n\t\t\treturn {\n\t\t\t\tsearchString: selectionSearchString,\n\t\t\t\tselection: editor.getSelection(),\n\t\t\t};\n\t\t}\n\t} else if (\n\t\topts.seedSearchStringFromSelection === \"multiple\" &&\n\t\t!opts.updateSearchScope\n\t) {\n\t\tconst selectionSearchString = getSelectionSearchString(\n\t\t\teditor,\n\t\t\topts.seedSearchStringFromSelection,\n\t\t);\n\t\tif (selectionSearchString) {\n\t\t\treturn {\n\t\t\t\tsearchString: selectionSearchString,\n\t\t\t\tselection: editor.getSelection(),\n\t\t\t};\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nStartFindAction.addImplementation(\n\t100,\n\t(accessor: ServicesAccessor, codeEditor: ICodeEditor, args: any) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editor = getNotebookEditorFromEditorPane(\n\t\t\teditorService.activeEditorPane,\n\t\t);\n\n\t\tif (!editor) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!codeEditor.hasModel()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!editor.hasEditorFocus() && !editor.hasWebviewFocus()) {\n\t\t\tconst codeEditorService = accessor.get(ICodeEditorService);\n\t\t\t// check if the active pane contains the active text editor\n\t\t\tconst textEditor =\n\t\t\t\tcodeEditorService.getFocusedCodeEditor() ||\n\t\t\t\tcodeEditorService.getActiveCodeEditor();\n\t\t\tif (\n\t\t\t\teditor.hasModel() &&\n\t\t\t\ttextEditor &&\n\t\t\t\ttextEditor.hasModel() &&\n\t\t\t\tnotebookContainsTextModel(\n\t\t\t\t\teditor.textModel.uri,\n\t\t\t\t\ttextEditor.getModel(),\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// the active text editor is in notebook editor\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tconst controller = editor.getContribution<NotebookFindContrib>(\n\t\t\tNotebookFindContrib.id,\n\t\t);\n\n\t\tconst searchStringOptions = getSearchStringOptions(codeEditor, {\n\t\t\tforceRevealReplace: false,\n\t\t\tseedSearchStringFromSelection:\n\t\t\t\tcodeEditor.getOption(EditorOption.find)\n\t\t\t\t\t.seedSearchStringFromSelection !== \"never\"\n\t\t\t\t\t? \"single\"\n\t\t\t\t\t: \"none\",\n\t\t\tseedSearchStringFromNonEmptySelection:\n\t\t\t\tcodeEditor.getOption(EditorOption.find)\n\t\t\t\t\t.seedSearchStringFromSelection === \"selection\",\n\t\t\tseedSearchStringFromGlobalClipboard: codeEditor.getOption(\n\t\t\t\tEditorOption.find,\n\t\t\t).globalFindClipboard,\n\t\t\tshouldFocus: FindStartFocusAction.FocusFindInput,\n\t\t\tshouldAnimate: true,\n\t\t\tupdateSearchScope: false,\n\t\t\tloop: codeEditor.getOption(EditorOption.find).loop,\n\t\t});\n\n\t\tlet options: IShowNotebookFindWidgetOptions | undefined;\n\t\tconst uri = codeEditor.getModel().uri;\n\t\tconst data = CellUri.parse(uri);\n\t\tif (searchStringOptions?.selection && data) {\n\t\t\tconst cell = editor.getCellByHandle(data.handle);\n\t\t\tif (cell) {\n\t\t\t\toptions = {\n\t\t\t\t\tsearchStringSeededFrom: {\n\t\t\t\t\t\tcell,\n\t\t\t\t\t\trange: searchStringOptions.selection,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tcontroller.show(searchStringOptions?.searchString, options);\n\t\treturn true;\n\t},\n);\n\nStartFindReplaceAction.addImplementation(\n\t100,\n\t(accessor: ServicesAccessor, codeEditor: ICodeEditor, args: any) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editor = getNotebookEditorFromEditorPane(\n\t\t\teditorService.activeEditorPane,\n\t\t);\n\n\t\tif (!editor) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!codeEditor.hasModel()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst controller = editor.getContribution<NotebookFindContrib>(\n\t\t\tNotebookFindContrib.id,\n\t\t);\n\n\t\tconst searchStringOptions = getSearchStringOptions(codeEditor, {\n\t\t\tforceRevealReplace: false,\n\t\t\tseedSearchStringFromSelection:\n\t\t\t\tcodeEditor.getOption(EditorOption.find)\n\t\t\t\t\t.seedSearchStringFromSelection !== \"never\"\n\t\t\t\t\t? \"single\"\n\t\t\t\t\t: \"none\",\n\t\t\tseedSearchStringFromNonEmptySelection:\n\t\t\t\tcodeEditor.getOption(EditorOption.find)\n\t\t\t\t\t.seedSearchStringFromSelection === \"selection\",\n\t\t\tseedSearchStringFromGlobalClipboard: codeEditor.getOption(\n\t\t\t\tEditorOption.find,\n\t\t\t).globalFindClipboard,\n\t\t\tshouldFocus: FindStartFocusAction.FocusFindInput,\n\t\t\tshouldAnimate: true,\n\t\t\tupdateSearchScope: false,\n\t\t\tloop: codeEditor.getOption(EditorOption.find).loop,\n\t\t});\n\n\t\tif (controller) {\n\t\t\tcontroller.replace(searchStringOptions?.searchString);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t},\n);\n"],
  "mappings": "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",
  "names": []
}
