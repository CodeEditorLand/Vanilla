{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/services/notebookKernelServiceImpl.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter } from '../../../../../base/common/event.js';\nimport { Disposable, IDisposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { INotebookKernelSourceAction, INotebookTextModel } from '../../common/notebookCommon.js';\nimport { INotebookKernel, ISelectedNotebooksChangeEvent, INotebookKernelMatchResult, INotebookKernelService, INotebookTextModelLike, ISourceAction, INotebookSourceActionChangeEvent, INotebookKernelDetectionTask, IKernelSourceActionProvider } from '../../common/notebookKernelService.js';\nimport { LRUCache, ResourceMap } from '../../../../../base/common/map.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../../platform/storage/common/storage.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { INotebookService } from '../../common/notebookService.js';\nimport { IMenu, IMenuService, MenuId } from '../../../../../platform/actions/common/actions.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IAction } from '../../../../../base/common/actions.js';\nimport { MarshalledId } from '../../../../../base/common/marshallingIds.js';\nimport { Schemas } from '../../../../../base/common/network.js';\nimport { getActiveWindow, runWhenWindowIdle } from '../../../../../base/browser/dom.js';\n\nclass KernelInfo {\n\n\tprivate static _logicClock = 0;\n\n\treadonly kernel: INotebookKernel;\n\tpublic score: number;\n\treadonly time: number;\n\n\treadonly notebookPriorities = new ResourceMap<number>();\n\n\tconstructor(kernel: INotebookKernel) {\n\t\tthis.kernel = kernel;\n\t\tthis.score = -1;\n\t\tthis.time = KernelInfo._logicClock++;\n\t}\n}\n\nclass NotebookTextModelLikeId {\n\tstatic str(k: INotebookTextModelLike): string {\n\t\treturn `${k.notebookType}/${k.uri.toString()}`;\n\t}\n\tstatic obj(s: string): INotebookTextModelLike {\n\t\tconst idx = s.indexOf('/');\n\t\treturn {\n\t\t\tnotebookType: s.substring(0, idx),\n\t\t\turi: URI.parse(s.substring(idx + 1))\n\t\t};\n\t}\n}\n\nclass SourceAction extends Disposable implements ISourceAction {\n\texecution: Promise<void> | undefined;\n\tprivate readonly _onDidChangeState = this._register(new Emitter<void>());\n\treadonly onDidChangeState = this._onDidChangeState.event;\n\n\tconstructor(\n\t\treadonly action: IAction,\n\t\treadonly model: INotebookTextModelLike,\n\t\treadonly isPrimary: boolean\n\t) {\n\t\tsuper();\n\t}\n\n\tasync runAction() {\n\t\tif (this.execution) {\n\t\t\treturn this.execution;\n\t\t}\n\n\t\tthis.execution = this._runAction();\n\t\tthis._onDidChangeState.fire();\n\t\tawait this.execution;\n\t\tthis.execution = undefined;\n\t\tthis._onDidChangeState.fire();\n\t}\n\n\tprivate async _runAction(): Promise<void> {\n\t\ttry {\n\t\t\tawait this.action.run({\n\t\t\t\turi: this.model.uri,\n\t\t\t\t$mid: MarshalledId.NotebookActionContext\n\t\t\t});\n\n\t\t} catch (error) {\n\t\t\tconsole.warn(`Kernel source command failed: ${error}`);\n\t\t}\n\t}\n}\n\ninterface IKernelInfoCache {\n\tmenu: IMenu;\n\tactions: [ISourceAction, IDisposable][];\n\n}\n\nexport class NotebookKernelService extends Disposable implements INotebookKernelService {\n\n\tdeclare _serviceBrand: undefined;\n\n\tprivate readonly _kernels = new Map<string, KernelInfo>();\n\n\tprivate readonly _notebookBindings = new LRUCache<string, string>(1000, 0.7);\n\n\tprivate readonly _onDidChangeNotebookKernelBinding = this._register(new Emitter<ISelectedNotebooksChangeEvent>());\n\tprivate readonly _onDidAddKernel = this._register(new Emitter<INotebookKernel>());\n\tprivate readonly _onDidRemoveKernel = this._register(new Emitter<INotebookKernel>());\n\tprivate readonly _onDidChangeNotebookAffinity = this._register(new Emitter<void>());\n\tprivate readonly _onDidChangeSourceActions = this._register(new Emitter<INotebookSourceActionChangeEvent>());\n\tprivate readonly _onDidNotebookVariablesChange = this._register(new Emitter<URI>());\n\tprivate readonly _kernelSources = new Map<string, IKernelInfoCache>();\n\tprivate readonly _kernelSourceActionsUpdates = new Map<string, IDisposable>();\n\tprivate readonly _kernelDetectionTasks = new Map<string, INotebookKernelDetectionTask[]>();\n\tprivate readonly _onDidChangeKernelDetectionTasks = this._register(new Emitter<string>());\n\tprivate readonly _kernelSourceActionProviders = new Map<string, IKernelSourceActionProvider[]>();\n\n\treadonly onDidChangeSelectedNotebooks: Event<ISelectedNotebooksChangeEvent> = this._onDidChangeNotebookKernelBinding.event;\n\treadonly onDidAddKernel: Event<INotebookKernel> = this._onDidAddKernel.event;\n\treadonly onDidRemoveKernel: Event<INotebookKernel> = this._onDidRemoveKernel.event;\n\treadonly onDidChangeNotebookAffinity: Event<void> = this._onDidChangeNotebookAffinity.event;\n\treadonly onDidChangeSourceActions: Event<INotebookSourceActionChangeEvent> = this._onDidChangeSourceActions.event;\n\treadonly onDidChangeKernelDetectionTasks: Event<string> = this._onDidChangeKernelDetectionTasks.event;\n\treadonly onDidNotebookVariablesUpdate: Event<URI> = this._onDidNotebookVariablesChange.event;\n\n\tprivate static _storageNotebookBinding = 'notebook.controller2NotebookBindings';\n\n\n\tconstructor(\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t\t@IMenuService private readonly _menuService: IMenuService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService\n\t) {\n\t\tsuper();\n\n\t\t// auto associate kernels to new notebook documents, also emit event when\n\t\t// a notebook has been closed (but don't update the memento)\n\t\tthis._register(_notebookService.onDidAddNotebookDocument(this._tryAutoBindNotebook, this));\n\t\tthis._register(_notebookService.onWillRemoveNotebookDocument(notebook => {\n\t\t\tconst id = NotebookTextModelLikeId.str(notebook);\n\t\t\tconst kernelId = this._notebookBindings.get(id);\n\t\t\tif (kernelId && notebook.uri.scheme === Schemas.untitled) {\n\t\t\t\tthis.selectKernelForNotebook(undefined, notebook);\n\t\t\t}\n\t\t\tthis._kernelSourceActionsUpdates.get(id)?.dispose();\n\t\t\tthis._kernelSourceActionsUpdates.delete(id);\n\t\t}));\n\n\t\t// restore from storage\n\t\ttry {\n\t\t\tconst data = JSON.parse(this._storageService.get(NotebookKernelService._storageNotebookBinding, StorageScope.WORKSPACE, '[]'));\n\t\t\tthis._notebookBindings.fromJSON(data);\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t}\n\n\toverride dispose() {\n\t\tthis._kernels.clear();\n\t\tthis._kernelSources.forEach(v => {\n\t\t\tv.menu.dispose();\n\t\t\tv.actions.forEach(a => a[1].dispose());\n\t\t});\n\t\tthis._kernelSourceActionsUpdates.forEach(v => {\n\t\t\tv.dispose();\n\t\t});\n\t\tthis._kernelSourceActionsUpdates.clear();\n\t\tsuper.dispose();\n\t}\n\n\tprivate _persistSoonHandle?: IDisposable;\n\n\tprivate _persistMementos(): void {\n\t\tthis._persistSoonHandle?.dispose();\n\t\tthis._persistSoonHandle = runWhenWindowIdle(getActiveWindow(), () => {\n\t\t\tthis._storageService.store(NotebookKernelService._storageNotebookBinding, JSON.stringify(this._notebookBindings), StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\t}, 100);\n\t}\n\n\tprivate static _score(kernel: INotebookKernel, notebook: INotebookTextModelLike): number {\n\t\tif (kernel.viewType === '*') {\n\t\t\treturn 5;\n\t\t} else if (kernel.viewType === notebook.notebookType) {\n\t\t\treturn 10;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate _tryAutoBindNotebook(notebook: INotebookTextModel, onlyThisKernel?: INotebookKernel): void {\n\n\t\tconst id = this._notebookBindings.get(NotebookTextModelLikeId.str(notebook));\n\t\tif (!id) {\n\t\t\t// no kernel associated\n\t\t\treturn;\n\t\t}\n\t\tconst existingKernel = this._kernels.get(id);\n\t\tif (!existingKernel || !NotebookKernelService._score(existingKernel.kernel, notebook)) {\n\t\t\t// associated kernel not known, not matching\n\t\t\treturn;\n\t\t}\n\t\tif (!onlyThisKernel || existingKernel.kernel === onlyThisKernel) {\n\t\t\tthis._onDidChangeNotebookKernelBinding.fire({ notebook: notebook.uri, oldKernel: undefined, newKernel: existingKernel.kernel.id });\n\t\t}\n\t}\n\n\tnotifyVariablesChange(notebookUri: URI): void {\n\t\tthis._onDidNotebookVariablesChange.fire(notebookUri);\n\t}\n\n\tregisterKernel(kernel: INotebookKernel): IDisposable {\n\t\tif (this._kernels.has(kernel.id)) {\n\t\t\tthrow new Error(`NOTEBOOK CONTROLLER with id '${kernel.id}' already exists`);\n\t\t}\n\n\t\tthis._kernels.set(kernel.id, new KernelInfo(kernel));\n\t\tthis._onDidAddKernel.fire(kernel);\n\n\t\t// auto associate the new kernel to existing notebooks it was\n\t\t// associated to in the past.\n\t\tfor (const notebook of this._notebookService.getNotebookTextModels()) {\n\t\t\tthis._tryAutoBindNotebook(notebook, kernel);\n\t\t}\n\n\t\treturn toDisposable(() => {\n\t\t\tif (this._kernels.delete(kernel.id)) {\n\t\t\t\tthis._onDidRemoveKernel.fire(kernel);\n\t\t\t}\n\t\t\tfor (const [key, candidate] of Array.from(this._notebookBindings)) {\n\t\t\t\tif (candidate === kernel.id) {\n\t\t\t\t\tthis._onDidChangeNotebookKernelBinding.fire({ notebook: NotebookTextModelLikeId.obj(key).uri, oldKernel: kernel.id, newKernel: undefined });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tgetMatchingKernel(notebook: INotebookTextModelLike): INotebookKernelMatchResult {\n\n\t\t// all applicable kernels\n\t\tconst kernels: { kernel: INotebookKernel; instanceAffinity: number; score: number }[] = [];\n\t\tfor (const info of this._kernels.values()) {\n\t\t\tconst score = NotebookKernelService._score(info.kernel, notebook);\n\t\t\tif (score) {\n\t\t\t\tkernels.push({\n\t\t\t\t\tscore,\n\t\t\t\t\tkernel: info.kernel,\n\t\t\t\t\tinstanceAffinity: info.notebookPriorities.get(notebook.uri) ?? 1 /* vscode.NotebookControllerPriority.Default */,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tkernels\n\t\t\t.sort((a, b) => b.instanceAffinity - a.instanceAffinity || a.score - b.score || a.kernel.label.localeCompare(b.kernel.label));\n\t\tconst all = kernels.map(obj => obj.kernel);\n\n\t\t// bound kernel\n\t\tconst selectedId = this._notebookBindings.get(NotebookTextModelLikeId.str(notebook));\n\t\tconst selected = selectedId ? this._kernels.get(selectedId)?.kernel : undefined;\n\t\tconst suggestions = kernels.filter(item => item.instanceAffinity > 1).map(item => item.kernel);\n\t\tconst hidden = kernels.filter(item => item.instanceAffinity < 0).map(item => item.kernel);\n\t\treturn { all, selected, suggestions, hidden };\n\t}\n\n\tgetSelectedOrSuggestedKernel(notebook: INotebookTextModel): INotebookKernel | undefined {\n\t\tconst info = this.getMatchingKernel(notebook);\n\t\tif (info.selected) {\n\t\t\treturn info.selected;\n\t\t}\n\n\t\tconst preferred = info.all.filter(kernel => this._kernels.get(kernel.id)?.notebookPriorities.get(notebook.uri) === 2 /* vscode.NotebookControllerPriority.Preferred */);\n\t\tif (preferred.length === 1) {\n\t\t\treturn preferred[0];\n\t\t}\n\n\t\treturn info.all.length === 1 ? info.all[0] : undefined;\n\t}\n\n\t// a notebook has one kernel, a kernel has N notebooks\n\t// notebook <-1----N-> kernel\n\tselectKernelForNotebook(kernel: INotebookKernel | undefined, notebook: INotebookTextModelLike): void {\n\t\tconst key = NotebookTextModelLikeId.str(notebook);\n\t\tconst oldKernel = this._notebookBindings.get(key);\n\t\tif (oldKernel !== kernel?.id) {\n\t\t\tif (kernel) {\n\t\t\t\tthis._notebookBindings.set(key, kernel.id);\n\t\t\t} else {\n\t\t\t\tthis._notebookBindings.delete(key);\n\t\t\t}\n\t\t\tthis._onDidChangeNotebookKernelBinding.fire({ notebook: notebook.uri, oldKernel, newKernel: kernel?.id });\n\t\t\tthis._persistMementos();\n\t\t}\n\t}\n\n\tpreselectKernelForNotebook(kernel: INotebookKernel, notebook: INotebookTextModelLike): void {\n\t\tconst key = NotebookTextModelLikeId.str(notebook);\n\t\tconst oldKernel = this._notebookBindings.get(key);\n\t\tif (oldKernel !== kernel?.id) {\n\t\t\tthis._notebookBindings.set(key, kernel.id);\n\t\t\tthis._persistMementos();\n\t\t}\n\t}\n\n\tupdateKernelNotebookAffinity(kernel: INotebookKernel, notebook: URI, preference: number | undefined): void {\n\t\tconst info = this._kernels.get(kernel.id);\n\t\tif (!info) {\n\t\t\tthrow new Error(`UNKNOWN kernel '${kernel.id}'`);\n\t\t}\n\t\tif (preference === undefined) {\n\t\t\tinfo.notebookPriorities.delete(notebook);\n\t\t} else {\n\t\t\tinfo.notebookPriorities.set(notebook, preference);\n\t\t}\n\t\tthis._onDidChangeNotebookAffinity.fire();\n\t}\n\n\tgetRunningSourceActions(notebook: INotebookTextModelLike) {\n\t\tconst id = NotebookTextModelLikeId.str(notebook);\n\t\tconst existingInfo = this._kernelSources.get(id);\n\t\tif (existingInfo) {\n\t\t\treturn existingInfo.actions.filter(action => action[0].execution).map(action => action[0]);\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tgetSourceActions(notebook: INotebookTextModelLike, contextKeyService: IContextKeyService | undefined): ISourceAction[] {\n\t\tcontextKeyService = contextKeyService ?? this._contextKeyService;\n\t\tconst id = NotebookTextModelLikeId.str(notebook);\n\t\tconst existingInfo = this._kernelSources.get(id);\n\n\t\tif (existingInfo) {\n\t\t\treturn existingInfo.actions.map(a => a[0]);\n\t\t}\n\n\t\tconst sourceMenu = this._register(this._menuService.createMenu(MenuId.NotebookKernelSource, contextKeyService));\n\t\tconst info: IKernelInfoCache = { menu: sourceMenu, actions: [] };\n\n\t\tconst loadActionsFromMenu = (menu: IMenu, document: INotebookTextModelLike) => {\n\t\t\tconst groups = menu.getActions({ shouldForwardArgs: true });\n\t\t\tconst sourceActions: [ISourceAction, IDisposable][] = [];\n\t\t\tgroups.forEach(group => {\n\t\t\t\tconst isPrimary = /^primary/.test(group[0]);\n\t\t\t\tgroup[1].forEach(action => {\n\t\t\t\t\tconst sourceAction = new SourceAction(action, document, isPrimary);\n\t\t\t\t\tconst stateChangeListener = sourceAction.onDidChangeState(() => {\n\t\t\t\t\t\tthis._onDidChangeSourceActions.fire({\n\t\t\t\t\t\t\tnotebook: document.uri,\n\t\t\t\t\t\t\tviewType: document.notebookType,\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tsourceActions.push([sourceAction, stateChangeListener]);\n\t\t\t\t});\n\t\t\t});\n\t\t\tinfo.actions = sourceActions;\n\t\t\tthis._kernelSources.set(id, info);\n\t\t\tthis._onDidChangeSourceActions.fire({ notebook: document.uri, viewType: document.notebookType });\n\t\t};\n\n\t\tthis._kernelSourceActionsUpdates.get(id)?.dispose();\n\t\tthis._kernelSourceActionsUpdates.set(id, sourceMenu.onDidChange(() => {\n\t\t\tloadActionsFromMenu(sourceMenu, notebook);\n\t\t}));\n\n\t\tloadActionsFromMenu(sourceMenu, notebook);\n\n\t\treturn info.actions.map(a => a[0]);\n\t}\n\n\tregisterNotebookKernelDetectionTask(task: INotebookKernelDetectionTask): IDisposable {\n\t\tconst notebookType = task.notebookType;\n\t\tconst all = this._kernelDetectionTasks.get(notebookType) ?? [];\n\t\tall.push(task);\n\t\tthis._kernelDetectionTasks.set(notebookType, all);\n\t\tthis._onDidChangeKernelDetectionTasks.fire(notebookType);\n\t\treturn toDisposable(() => {\n\t\t\tconst all = this._kernelDetectionTasks.get(notebookType) ?? [];\n\t\t\tconst idx = all.indexOf(task);\n\t\t\tif (idx >= 0) {\n\t\t\t\tall.splice(idx, 1);\n\t\t\t\tthis._kernelDetectionTasks.set(notebookType, all);\n\t\t\t\tthis._onDidChangeKernelDetectionTasks.fire(notebookType);\n\t\t\t}\n\t\t});\n\t}\n\n\tgetKernelDetectionTasks(notebook: INotebookTextModelLike): INotebookKernelDetectionTask[] {\n\t\treturn this._kernelDetectionTasks.get(notebook.notebookType) ?? [];\n\t}\n\n\tregisterKernelSourceActionProvider(viewType: string, provider: IKernelSourceActionProvider): IDisposable {\n\t\tconst providers = this._kernelSourceActionProviders.get(viewType) ?? [];\n\t\tproviders.push(provider);\n\t\tthis._kernelSourceActionProviders.set(viewType, providers);\n\t\tthis._onDidChangeSourceActions.fire({ viewType: viewType });\n\n\t\tconst eventEmitterDisposable = provider.onDidChangeSourceActions?.(() => {\n\t\t\tthis._onDidChangeSourceActions.fire({ viewType: viewType });\n\t\t});\n\n\t\treturn toDisposable(() => {\n\t\t\tconst providers = this._kernelSourceActionProviders.get(viewType) ?? [];\n\t\t\tconst idx = providers.indexOf(provider);\n\t\t\tif (idx >= 0) {\n\t\t\t\tproviders.splice(idx, 1);\n\t\t\t\tthis._kernelSourceActionProviders.set(viewType, providers);\n\t\t\t}\n\n\t\t\teventEmitterDisposable?.dispose();\n\t\t});\n\t}\n\n\t/**\n\t * Get kernel source actions from providers\n\t */\n\tgetKernelSourceActions2(notebook: INotebookTextModelLike): Promise<INotebookKernelSourceAction[]> {\n\t\tconst viewType = notebook.notebookType;\n\t\tconst providers = this._kernelSourceActionProviders.get(viewType) ?? [];\n\t\tconst promises = providers.map(provider => provider.provideKernelSourceActions());\n\t\treturn Promise.all(promises).then(actions => {\n\t\t\treturn actions.reduce((a, b) => a.concat(b), []);\n\t\t});\n\t}\n}\n"],
  "mappings": "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",
  "names": ["all", "providers"]
}
