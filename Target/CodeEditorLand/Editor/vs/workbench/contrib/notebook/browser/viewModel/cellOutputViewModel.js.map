{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/viewModel/cellOutputViewModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from \"../../../../../base/common/event.js\";\nimport { Disposable } from \"../../../../../base/common/lifecycle.js\";\nimport { observableValue } from \"../../../../../base/common/observable.js\";\nimport type { NotebookTextModel } from \"../../common/model/notebookTextModel.js\";\nimport {\n\ttype ICellOutput,\n\ttype IOrderedMimeType,\n\tRENDERER_NOT_AVAILABLE,\n} from \"../../common/notebookCommon.js\";\nimport type { INotebookService } from \"../../common/notebookService.js\";\nimport type {\n\tICellOutputViewModel,\n\tIGenericCellViewModel,\n} from \"../notebookBrowser.js\";\n\nlet handle = 0;\nexport class CellOutputViewModel\n\textends Disposable\n\timplements ICellOutputViewModel\n{\n\tprivate _onDidResetRendererEmitter = this._register(new Emitter<void>());\n\treadonly onDidResetRenderer = this._onDidResetRendererEmitter.event;\n\n\tprivate alwaysShow = false;\n\tvisible = observableValue<boolean>(\"outputVisible\", false);\n\tsetVisible(visible = true, force = false) {\n\t\tif (!visible && this.alwaysShow) {\n\t\t\t// we are forced to show, so no-op\n\t\t\treturn;\n\t\t}\n\n\t\tif (force && visible) {\n\t\t\tthis.alwaysShow = true;\n\t\t}\n\n\t\tthis.visible.set(visible, undefined);\n\t}\n\n\toutputHandle = handle++;\n\tget model(): ICellOutput {\n\t\treturn this._outputRawData;\n\t}\n\n\tprivate _pickedMimeType: IOrderedMimeType | undefined;\n\tget pickedMimeType() {\n\t\treturn this._pickedMimeType;\n\t}\n\n\tset pickedMimeType(value: IOrderedMimeType | undefined) {\n\t\tthis._pickedMimeType = value;\n\t}\n\n\tconstructor(\n\t\treadonly cellViewModel: IGenericCellViewModel,\n\t\tprivate readonly _outputRawData: ICellOutput,\n\t\tprivate readonly _notebookService: INotebookService,\n\t) {\n\t\tsuper();\n\t}\n\n\thasMultiMimeType() {\n\t\tif (this._outputRawData.outputs.length < 2) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst firstMimeType = this._outputRawData.outputs[0].mime;\n\t\treturn this._outputRawData.outputs.some(\n\t\t\t(output) => output.mime !== firstMimeType,\n\t\t);\n\t}\n\n\tresolveMimeTypes(\n\t\ttextModel: NotebookTextModel,\n\t\tkernelProvides: readonly string[] | undefined,\n\t): [readonly IOrderedMimeType[], number] {\n\t\tconst mimeTypes = this._notebookService.getOutputMimeTypeInfo(\n\t\t\ttextModel,\n\t\t\tkernelProvides,\n\t\t\tthis.model,\n\t\t);\n\t\tconst index = mimeTypes.findIndex(\n\t\t\t(mimeType) =>\n\t\t\t\tmimeType.rendererId !== RENDERER_NOT_AVAILABLE &&\n\t\t\t\tmimeType.isTrusted,\n\t\t);\n\n\t\treturn [mimeTypes, Math.max(index, 0)];\n\t}\n\n\tresetRenderer() {\n\t\t// reset the output renderer\n\t\tthis._pickedMimeType = undefined;\n\t\tthis.model.bumpVersion();\n\t\tthis._onDidResetRendererEmitter.fire();\n\t}\n\n\ttoRawJSON() {\n\t\treturn {\n\t\t\toutputs: this._outputRawData.outputs,\n\t\t\t// TODO@rebronix, no id, right?\n\t\t};\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,eAAe;AACxB,SAAS,kBAAkB;AAC3B,SAAS,uBAAuB;AAEhC;AAAA,EAGC;AAAA,OACM;AAOP,IAAI,SAAS;AACN,MAAM,4BACJ,WAET;AAAA,EAiCC,YACU,eACQ,gBACA,kBAChB;AACD,UAAM;AAJG;AACQ;AACA;AAAA,EAGlB;AAAA,EA/DD,OAwBA;AAAA;AAAA;AAAA,EACS,6BAA6B,KAAK,UAAU,IAAI,QAAc,CAAC;AAAA,EAC9D,qBAAqB,KAAK,2BAA2B;AAAA,EAEtD,aAAa;AAAA,EACrB,UAAU,gBAAyB,iBAAiB,KAAK;AAAA,EACzD,WAAW,UAAU,MAAM,QAAQ,OAAO;AACzC,QAAI,CAAC,WAAW,KAAK,YAAY;AAEhC;AAAA,IACD;AAEA,QAAI,SAAS,SAAS;AACrB,WAAK,aAAa;AAAA,IACnB;AAEA,SAAK,QAAQ,IAAI,SAAS,MAAS;AAAA,EACpC;AAAA,EAEA,eAAe;AAAA,EACf,IAAI,QAAqB;AACxB,WAAO,KAAK;AAAA,EACb;AAAA,EAEQ;AAAA,EACR,IAAI,iBAAiB;AACpB,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAI,eAAe,OAAqC;AACvD,SAAK,kBAAkB;AAAA,EACxB;AAAA,EAUA,mBAAmB;AAClB,QAAI,KAAK,eAAe,QAAQ,SAAS,GAAG;AAC3C,aAAO;AAAA,IACR;AAEA,UAAM,gBAAgB,KAAK,eAAe,QAAQ,CAAC,EAAE;AACrD,WAAO,KAAK,eAAe,QAAQ;AAAA,MAClC,CAAC,WAAW,OAAO,SAAS;AAAA,IAC7B;AAAA,EACD;AAAA,EAEA,iBACC,WACA,gBACwC;AACxC,UAAM,YAAY,KAAK,iBAAiB;AAAA,MACvC;AAAA,MACA;AAAA,MACA,KAAK;AAAA,IACN;AACA,UAAM,QAAQ,UAAU;AAAA,MACvB,CAAC,aACA,SAAS,eAAe,0BACxB,SAAS;AAAA,IACX;AAEA,WAAO,CAAC,WAAW,KAAK,IAAI,OAAO,CAAC,CAAC;AAAA,EACtC;AAAA,EAEA,gBAAgB;AAEf,SAAK,kBAAkB;AACvB,SAAK,MAAM,YAAY;AACvB,SAAK,2BAA2B,KAAK;AAAA,EACtC;AAAA,EAEA,YAAY;AACX,WAAO;AAAA,MACN,SAAS,KAAK,eAAe;AAAA;AAAA,IAE9B;AAAA,EACD;AACD;",
  "names": []
}
