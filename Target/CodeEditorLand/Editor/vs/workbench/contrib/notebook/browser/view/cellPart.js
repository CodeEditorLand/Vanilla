import*as n from"../../../../../base/browser/dom.js";import{onUnexpectedError as u}from"../../../../../base/common/errors.js";import{Disposable as d,DisposableStore as c,MutableDisposable as i}from"../../../../../base/common/lifecycle.js";import"../../common/notebookExecutionStateService.js";import"../notebookBrowser.js";import"../notebookViewEvents.js";class M extends d{currentCell;cellDisposables=this._register(new c);constructor(){super()}prepareRenderCell(l){}renderCell(l){this.currentCell=l,r(()=>this.didRenderCell(l))}didRenderCell(l){}unrenderCell(l){this.currentCell=void 0,this.cellDisposables.clear()}prepareLayout(){}updateInternalLayoutNow(l){}updateState(l,e){}updateForExecutionState(l,e){}}class P extends d{currentCell;cellDisposables=this._register(new c);constructor(){super()}prepareRenderCell(l){}renderCell(l){this.currentCell=l,this.didRenderCell(l)}didRenderCell(l){}unrenderCell(l){this.currentCell=void 0,this.cellDisposables.clear()}updateInternalLayoutNow(l){}updateState(l,e){}updateForExecutionState(l,e){}}function r(a){try{return a()}catch(l){return u(l),null}}class s extends d{constructor(e,t,o){super();this.targetWindow=e;this.contentParts=t;this.overlayParts=o}_scheduledOverlayRendering=this._register(new i);_scheduledOverlayUpdateState=this._register(new i);_scheduledOverlayUpdateExecutionState=this._register(new i);concatContentPart(e,t){return new s(t,this.contentParts.concat(e),this.overlayParts)}concatOverlayPart(e,t){return new s(t,this.contentParts,this.overlayParts.concat(e))}scheduleRenderCell(e){for(const t of this.contentParts)r(()=>t.prepareRenderCell(e));for(const t of this.overlayParts)r(()=>t.prepareRenderCell(e));for(const t of this.contentParts)r(()=>t.renderCell(e));this._scheduledOverlayRendering.value=n.modify(this.targetWindow,()=>{for(const t of this.overlayParts)r(()=>t.renderCell(e))})}unrenderCell(e){for(const t of this.contentParts)r(()=>t.unrenderCell(e));this._scheduledOverlayRendering.value=void 0,this._scheduledOverlayUpdateState.value=void 0,this._scheduledOverlayUpdateExecutionState.value=void 0;for(const t of this.overlayParts)r(()=>t.unrenderCell(e))}updateInternalLayoutNow(e){for(const t of this.contentParts)r(()=>t.updateInternalLayoutNow(e));for(const t of this.overlayParts)r(()=>t.updateInternalLayoutNow(e))}prepareLayout(){for(const e of this.contentParts)r(()=>e.prepareLayout())}updateState(e,t){for(const o of this.contentParts)r(()=>o.updateState(e,t));this._scheduledOverlayUpdateState.value=n.modify(this.targetWindow,()=>{for(const o of this.overlayParts)r(()=>o.updateState(e,t))})}updateForExecutionState(e,t){for(const o of this.contentParts)r(()=>o.updateForExecutionState(e,t));this._scheduledOverlayUpdateExecutionState.value=n.modify(this.targetWindow,()=>{for(const o of this.overlayParts)r(()=>o.updateForExecutionState(e,t))})}}export{M as CellContentPart,P as CellOverlayPart,s as CellPartsCollection};
