{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/execute/executionEditorProgress.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { throttle } from \"../../../../../../base/common/decorators.js\";\nimport {\n\tDisposable,\n\tMutableDisposable,\n} from \"../../../../../../base/common/lifecycle.js\";\nimport { IUserActivityService } from \"../../../../../services/userActivity/common/userActivityService.js\";\nimport { NotebookCellExecutionState } from \"../../../common/notebookCommon.js\";\nimport {\n\ttype INotebookCellExecution,\n\tINotebookExecutionStateService,\n} from \"../../../common/notebookExecutionStateService.js\";\nimport type {\n\tINotebookEditor,\n\tINotebookEditorContribution,\n} from \"../../notebookBrowser.js\";\nimport { registerNotebookContribution } from \"../../notebookEditorExtensions.js\";\n\nexport class ExecutionEditorProgressController\n\textends Disposable\n\timplements INotebookEditorContribution\n{\n\tstatic id = \"workbench.notebook.executionEditorProgress\";\n\n\tprivate readonly _activityMutex = this._register(new MutableDisposable());\n\n\tconstructor(\n\t\tprivate readonly _notebookEditor: INotebookEditor,\n\t\t@INotebookExecutionStateService private readonly _notebookExecutionStateService: INotebookExecutionStateService,\n\t\t@IUserActivityService private readonly _userActivity: IUserActivityService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(_notebookEditor.onDidScroll(() => this._update()));\n\n\t\tthis._register(_notebookExecutionStateService.onDidChangeExecution(e => {\n\t\t\tif (e.notebook.toString() !== this._notebookEditor.textModel?.uri.toString()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._update();\n\t\t}));\n\n\t\tthis._register(_notebookEditor.onDidChangeModel(() => this._update()));\n\t}\n\n\t@throttle(100)\n\tprivate _update() {\n\t\tif (!this._notebookEditor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst cellExecutions = this._notebookExecutionStateService\n\t\t\t.getCellExecutionsForNotebook(this._notebookEditor.textModel?.uri)\n\t\t\t.filter(\n\t\t\t\t(exe) => exe.state === NotebookCellExecutionState.Executing,\n\t\t\t);\n\t\tconst notebookExecution =\n\t\t\tthis._notebookExecutionStateService.getExecution(\n\t\t\t\tthis._notebookEditor.textModel?.uri,\n\t\t\t);\n\t\tconst executionIsVisible = (exe: INotebookCellExecution) => {\n\t\t\tfor (const range of this._notebookEditor.visibleRanges) {\n\t\t\t\tfor (const cell of this._notebookEditor.getCellsInRange(\n\t\t\t\t\trange,\n\t\t\t\t)) {\n\t\t\t\t\tif (cell.handle === exe.cellHandle) {\n\t\t\t\t\t\tconst top =\n\t\t\t\t\t\t\tthis._notebookEditor.getAbsoluteTopOfElement(cell);\n\t\t\t\t\t\tif (this._notebookEditor.scrollTop < top + 5) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\tconst hasAnyExecution = cellExecutions.length || notebookExecution;\n\t\tif (hasAnyExecution && !this._activityMutex.value) {\n\t\t\tthis._activityMutex.value = this._userActivity.markActive();\n\t\t} else if (!hasAnyExecution && this._activityMutex.value) {\n\t\t\tthis._activityMutex.clear();\n\t\t}\n\n\t\tconst shouldShowEditorProgressbarForCellExecutions =\n\t\t\tcellExecutions.length &&\n\t\t\t!cellExecutions.some(executionIsVisible) &&\n\t\t\t!cellExecutions.some((e) => e.isPaused);\n\t\tconst showEditorProgressBar =\n\t\t\t!!notebookExecution || shouldShowEditorProgressbarForCellExecutions;\n\t\tif (showEditorProgressBar) {\n\t\t\tthis._notebookEditor.showProgress();\n\t\t} else {\n\t\t\tthis._notebookEditor.hideProgress();\n\t\t}\n\t}\n}\n\nregisterNotebookContribution(\n\tExecutionEditorProgressController.id,\n\tExecutionEditorProgressController,\n);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,gBAAgB;AACzB;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,4BAA4B;AACrC,SAAS,kCAAkC;AAC3C;AAAA,EAEC;AAAA,OACM;AAKP,SAAS,oCAAoC;AAEtC,IAAM,oCAAN,cACE,WAET;AAAA,EAKC,YACkB,iBACgC,gCACV,eACtC;AACD,UAAM;AAJW;AACgC;AACV;AAIvC,SAAK,UAAU,gBAAgB,YAAY,MAAM,KAAK,QAAQ,CAAC,CAAC;AAEhE,SAAK,UAAU,+BAA+B,qBAAqB,OAAK;AACvE,UAAI,EAAE,SAAS,SAAS,MAAM,KAAK,gBAAgB,WAAW,IAAI,SAAS,GAAG;AAC7E;AAAA,MACD;AAEA,WAAK,QAAQ;AAAA,IACd,CAAC,CAAC;AAEF,SAAK,UAAU,gBAAgB,iBAAiB,MAAM,KAAK,QAAQ,CAAC,CAAC;AAAA,EACtE;AAAA,EAhDD,OAyBA;AAAA;AAAA;AAAA,EACC,OAAO,KAAK;AAAA,EAEK,iBAAiB,KAAK,UAAU,IAAI,kBAAkB,CAAC;AAAA,EAuBhE,UAAU;AACjB,QAAI,CAAC,KAAK,gBAAgB,SAAS,GAAG;AACrC;AAAA,IACD;AAEA,UAAM,iBAAiB,KAAK,+BAC1B,6BAA6B,KAAK,gBAAgB,WAAW,GAAG,EAChE;AAAA,MACA,CAAC,QAAQ,IAAI,UAAU,2BAA2B;AAAA,IACnD;AACD,UAAM,oBACL,KAAK,+BAA+B;AAAA,MACnC,KAAK,gBAAgB,WAAW;AAAA,IACjC;AACD,UAAM,qBAAqB,wBAAC,QAAgC;AAC3D,iBAAW,SAAS,KAAK,gBAAgB,eAAe;AACvD,mBAAW,QAAQ,KAAK,gBAAgB;AAAA,UACvC;AAAA,QACD,GAAG;AACF,cAAI,KAAK,WAAW,IAAI,YAAY;AACnC,kBAAM,MACL,KAAK,gBAAgB,wBAAwB,IAAI;AAClD,gBAAI,KAAK,gBAAgB,YAAY,MAAM,GAAG;AAC7C,qBAAO;AAAA,YACR;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAEA,aAAO;AAAA,IACR,GAhB2B;AAkB3B,UAAM,kBAAkB,eAAe,UAAU;AACjD,QAAI,mBAAmB,CAAC,KAAK,eAAe,OAAO;AAClD,WAAK,eAAe,QAAQ,KAAK,cAAc,WAAW;AAAA,IAC3D,WAAW,CAAC,mBAAmB,KAAK,eAAe,OAAO;AACzD,WAAK,eAAe,MAAM;AAAA,IAC3B;AAEA,UAAM,+CACL,eAAe,UACf,CAAC,eAAe,KAAK,kBAAkB,KACvC,CAAC,eAAe,KAAK,CAAC,MAAM,EAAE,QAAQ;AACvC,UAAM,wBACL,CAAC,CAAC,qBAAqB;AACxB,QAAI,uBAAuB;AAC1B,WAAK,gBAAgB,aAAa;AAAA,IACnC,OAAO;AACN,WAAK,gBAAgB,aAAa;AAAA,IACnC;AAAA,EACD;AACD;AAnDS;AAAA,EADP,SAAS,GAAG;AAAA,GA5BD,kCA6BJ;AA7BI,oCAAN;AAAA,EAUJ;AAAA,EACA;AAAA,GAXU;AAkFb;AAAA,EACC,kCAAkC;AAAA,EAClC;AACD;",
  "names": []
}
