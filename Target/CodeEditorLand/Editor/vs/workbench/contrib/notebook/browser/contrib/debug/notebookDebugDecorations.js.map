{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/debug/notebookDebugDecorations.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Delayer } from '../../../../../../base/common/async.js';\nimport { Disposable } from '../../../../../../base/common/lifecycle.js';\nimport { IRange, Range } from '../../../../../../editor/common/core/range.js';\nimport { IConfigurationService } from '../../../../../../platform/configuration/common/configuration.js';\nimport { debugIconBreakpointForeground } from '../../../../debug/browser/breakpointEditorContribution.js';\nimport { focusedStackFrameColor, topStackFrameColor } from '../../../../debug/browser/callStackEditorContribution.js';\nimport { IDebugService, IStackFrame } from '../../../../debug/common/debug.js';\nimport { INotebookCellDecorationOptions, INotebookDeltaDecoration, INotebookEditor, INotebookEditorContribution, NotebookOverviewRulerLane } from '../../notebookBrowser.js';\nimport { registerNotebookContribution } from '../../notebookEditorExtensions.js';\nimport { runningCellRulerDecorationColor } from '../../notebookEditorWidget.js';\nimport { CellUri, NotebookCellExecutionState } from '../../../common/notebookCommon.js';\nimport { INotebookExecutionStateService, NotebookExecutionType } from '../../../common/notebookExecutionStateService.js';\n\ninterface ICellAndRange {\n\thandle: number;\n\trange: IRange;\n}\n\nexport class PausedCellDecorationContribution extends Disposable implements INotebookEditorContribution {\n\tstatic id: string = 'workbench.notebook.debug.pausedCellDecorations';\n\n\tprivate _currentTopDecorations: string[] = [];\n\tprivate _currentOtherDecorations: string[] = [];\n\tprivate _executingCellDecorations: string[] = [];\n\n\tconstructor(\n\t\tprivate readonly _notebookEditor: INotebookEditor,\n\t\t@IDebugService private readonly _debugService: IDebugService,\n\t\t@INotebookExecutionStateService private readonly _notebookExecutionStateService: INotebookExecutionStateService,\n\t) {\n\t\tsuper();\n\n\t\tconst delayer = this._register(new Delayer(200));\n\t\tthis._register(_debugService.getModel().onDidChangeCallStack(() => this.updateExecutionDecorations()));\n\t\tthis._register(_debugService.getViewModel().onDidFocusStackFrame(() => this.updateExecutionDecorations()));\n\t\tthis._register(_notebookExecutionStateService.onDidChangeExecution(e => {\n\t\t\tif (e.type === NotebookExecutionType.cell && this._notebookEditor.textModel && e.affectsNotebook(this._notebookEditor.textModel.uri)) {\n\t\t\t\tdelayer.trigger(() => this.updateExecutionDecorations());\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate updateExecutionDecorations(): void {\n\t\tconst exes = this._notebookEditor.textModel ?\n\t\t\tthis._notebookExecutionStateService.getCellExecutionsByHandleForNotebook(this._notebookEditor.textModel.uri)\n\t\t\t: undefined;\n\n\t\tconst topFrameCellsAndRanges: ICellAndRange[] = [];\n\t\tlet focusedFrameCellAndRange: ICellAndRange | undefined = undefined;\n\n\t\tconst getNotebookCellAndRange = (sf: IStackFrame): ICellAndRange | undefined => {\n\t\t\tconst parsed = CellUri.parse(sf.source.uri);\n\t\t\tif (parsed && parsed.notebook.toString() === this._notebookEditor.textModel?.uri.toString()) {\n\t\t\t\treturn { handle: parsed.handle, range: sf.range };\n\t\t\t}\n\t\t\treturn undefined;\n\t\t};\n\n\t\tfor (const session of this._debugService.getModel().getSessions()) {\n\t\t\tfor (const thread of session.getAllThreads()) {\n\t\t\t\tconst topFrame = thread.getTopStackFrame();\n\t\t\t\tif (topFrame) {\n\t\t\t\t\tconst notebookCellAndRange = getNotebookCellAndRange(topFrame);\n\t\t\t\t\tif (notebookCellAndRange) {\n\t\t\t\t\t\ttopFrameCellsAndRanges.push(notebookCellAndRange);\n\t\t\t\t\t\texes?.delete(notebookCellAndRange.handle);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst focusedFrame = this._debugService.getViewModel().focusedStackFrame;\n\t\tif (focusedFrame && focusedFrame.thread.stopped) {\n\t\t\tconst thisFocusedFrameCellAndRange = getNotebookCellAndRange(focusedFrame);\n\t\t\tif (thisFocusedFrameCellAndRange &&\n\t\t\t\t!topFrameCellsAndRanges.some(topFrame => topFrame.handle === thisFocusedFrameCellAndRange?.handle && Range.equalsRange(topFrame.range, thisFocusedFrameCellAndRange?.range))) {\n\t\t\t\tfocusedFrameCellAndRange = thisFocusedFrameCellAndRange;\n\t\t\t\texes?.delete(focusedFrameCellAndRange.handle);\n\t\t\t}\n\t\t}\n\n\t\tthis.setTopFrameDecoration(topFrameCellsAndRanges);\n\t\tthis.setFocusedFrameDecoration(focusedFrameCellAndRange);\n\n\t\tconst exeHandles = exes ?\n\t\t\tArray.from(exes.entries())\n\t\t\t\t.filter(([_, exe]) => exe.state === NotebookCellExecutionState.Executing)\n\t\t\t\t.map(([handle]) => handle)\n\t\t\t: [];\n\t\tthis.setExecutingCellDecorations(exeHandles);\n\t}\n\n\tprivate setTopFrameDecoration(handlesAndRanges: ICellAndRange[]): void {\n\t\tconst newDecorations = handlesAndRanges.map(({ handle, range }) => {\n\t\t\tconst options: INotebookCellDecorationOptions = {\n\t\t\t\toverviewRuler: {\n\t\t\t\t\tcolor: topStackFrameColor,\n\t\t\t\t\tincludeOutput: false,\n\t\t\t\t\tmodelRanges: [range],\n\t\t\t\t\tposition: NotebookOverviewRulerLane.Full\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn { handle, options };\n\t\t});\n\n\t\tthis._currentTopDecorations = this._notebookEditor.deltaCellDecorations(this._currentTopDecorations, newDecorations);\n\t}\n\n\tprivate setFocusedFrameDecoration(focusedFrameCellAndRange: ICellAndRange | undefined): void {\n\t\tlet newDecorations: INotebookDeltaDecoration[] = [];\n\t\tif (focusedFrameCellAndRange) {\n\t\t\tconst options: INotebookCellDecorationOptions = {\n\t\t\t\toverviewRuler: {\n\t\t\t\t\tcolor: focusedStackFrameColor,\n\t\t\t\t\tincludeOutput: false,\n\t\t\t\t\tmodelRanges: [focusedFrameCellAndRange.range],\n\t\t\t\t\tposition: NotebookOverviewRulerLane.Full\n\t\t\t\t}\n\t\t\t};\n\t\t\tnewDecorations = [{ handle: focusedFrameCellAndRange.handle, options }];\n\t\t}\n\n\t\tthis._currentOtherDecorations = this._notebookEditor.deltaCellDecorations(this._currentOtherDecorations, newDecorations);\n\t}\n\n\tprivate setExecutingCellDecorations(handles: number[]): void {\n\t\tconst newDecorations = handles.map(handle => {\n\t\t\tconst options: INotebookCellDecorationOptions = {\n\t\t\t\toverviewRuler: {\n\t\t\t\t\tcolor: runningCellRulerDecorationColor,\n\t\t\t\t\tincludeOutput: false,\n\t\t\t\t\tmodelRanges: [new Range(0, 0, 0, 0)],\n\t\t\t\t\tposition: NotebookOverviewRulerLane.Left\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn { handle, options };\n\t\t});\n\n\t\tthis._executingCellDecorations = this._notebookEditor.deltaCellDecorations(this._executingCellDecorations, newDecorations);\n\t}\n}\n\nregisterNotebookContribution(PausedCellDecorationContribution.id, PausedCellDecorationContribution);\n\nexport class NotebookBreakpointDecorations extends Disposable implements INotebookEditorContribution {\n\tstatic id: string = 'workbench.notebook.debug.notebookBreakpointDecorations';\n\n\tprivate _currentDecorations: string[] = [];\n\n\tconstructor(\n\t\tprivate readonly _notebookEditor: INotebookEditor,\n\t\t@IDebugService private readonly _debugService: IDebugService,\n\t\t@IConfigurationService private readonly _configService: IConfigurationService,\n\t) {\n\t\tsuper();\n\t\tthis._register(_debugService.getModel().onDidChangeBreakpoints(() => this.updateDecorations()));\n\t\tthis._register(_configService.onDidChangeConfiguration(e => e.affectsConfiguration('debug.showBreakpointsInOverviewRuler') && this.updateDecorations()));\n\t}\n\n\tprivate updateDecorations(): void {\n\t\tconst enabled = this._configService.getValue('debug.showBreakpointsInOverviewRuler');\n\t\tconst newDecorations = enabled ?\n\t\t\tthis._debugService.getModel().getBreakpoints().map(breakpoint => {\n\t\t\t\tconst parsed = CellUri.parse(breakpoint.uri);\n\t\t\t\tif (!parsed || parsed.notebook.toString() !== this._notebookEditor.textModel!.uri.toString()) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst options: INotebookCellDecorationOptions = {\n\t\t\t\t\toverviewRuler: {\n\t\t\t\t\t\tcolor: debugIconBreakpointForeground,\n\t\t\t\t\t\tincludeOutput: false,\n\t\t\t\t\t\tmodelRanges: [new Range(breakpoint.lineNumber, 0, breakpoint.lineNumber, 0)],\n\t\t\t\t\t\tposition: NotebookOverviewRulerLane.Left\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\treturn { handle: parsed.handle, options };\n\t\t\t}).filter(x => !!x) as INotebookDeltaDecoration[]\n\t\t\t: [];\n\t\tthis._currentDecorations = this._notebookEditor.deltaCellDecorations(this._currentDecorations, newDecorations);\n\t}\n}\n\nregisterNotebookContribution(NotebookBreakpointDecorations.id, NotebookBreakpointDecorations);\n"],
  "mappings": "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",
  "names": []
}
