var k=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var C=(s,l,e,t)=>{for(var o=t>1?void 0:t?v(l,e):l,i=s.length-1,r;i>=0;i--)(r=s[i])&&(o=(t?r(l,e,o):r(o))||o);return t&&o&&k(l,e,o),o},g=(s,l)=>(e,t)=>l(e,t,s);import*as n from"../../../../../../base/browser/dom.js";import{Codicon as p}from"../../../../../../base/common/codicons.js";import{ThemeIcon as a}from"../../../../../../base/common/themables.js";import{localize as E}from"../../../../../../nls.js";import{FoldingController as S}from"../../controller/foldingController.js";import{CellEditState as I,CellFoldingState as b}from"../../notebookBrowser.js";import{CellContentPart as M}from"../cellPart.js";import{executingStateIcon as m}from"../../notebookIcons.js";import{INotebookExecutionStateService as y}from"../../../common/notebookExecutionStateService.js";import{CellKind as w,NotebookCellExecutionState as _}from"../../../common/notebookCommon.js";import{MutableDisposable as f}from"../../../../../../base/common/lifecycle.js";let u=class extends M{constructor(e,t,o){super();this._notebookEditor=e;this._container=t;this._notebookExecutionStateService=o}_runButtonListener=this._register(new f);_cellExecutionListener=this._register(new f);didRenderCell(e){this.update(e)}update(e){if(!this._notebookEditor.hasModel()){this._cellExecutionListener.clear(),this._runButtonListener.clear();return}if(e.isInputCollapsed||e.getEditState()===I.Editing)this._cellExecutionListener.clear(),this._runButtonListener.clear(),n.hide(this._container);else if(e.foldingState===b.Collapsed){const t=this._notebookEditor.getViewModel().getCellIndex(e),o=this._notebookEditor.getViewModel().getFoldedLength(t),i=this.getRunFoldedSectionButton({start:t,end:t+o+1});i?n.reset(this._container,i,this.getHiddenCellsLabel(o),this.getHiddenCellHintButton(e)):n.reset(this._container,this.getHiddenCellsLabel(o),this.getHiddenCellHintButton(e)),n.show(this._container);const r=e.layoutInfo.previewHeight;this._container.style.top=`${r}px`}else this._cellExecutionListener.clear(),this._runButtonListener.clear(),n.hide(this._container)}getHiddenCellsLabel(e){const t=e===1?E("hiddenCellsLabel","1 cell hidden"):E("hiddenCellsLabelPlural","{0} cells hidden",e);return n.$("span.notebook-folded-hint-label",void 0,t)}getHiddenCellHintButton(e){const t=n.$("span.cell-expand-part-button");return t.classList.add(...a.asClassNameArray(p.more)),this._register(n.addDisposableListener(t,n.EventType.CLICK,()=>{const o=this._notebookEditor.getContribution(S.id),i=this._notebookEditor.getCellIndex(e);typeof i=="number"&&o.setFoldingStateDown(i,b.Expanded,1)})),t}getRunFoldedSectionButton(e){const t=n.$("span.folded-cell-run-section-button"),o=this._notebookEditor.getCellsInRange(e);if(!o.some(d=>d.cellKind===w.Code))return;const x=o.some(d=>{const c=this._notebookExecutionStateService.getCellExecution(d.uri);return c&&c.state===_.Executing})?a.modify(m,"spin"):p.play;return t.classList.add(...a.asClassNameArray(x)),this._runButtonListener.value=n.addDisposableListener(t,n.EventType.CLICK,()=>{this._notebookEditor.executeNotebookCells(o)}),this._cellExecutionListener.value=this._notebookExecutionStateService.onDidChangeExecution(()=>{const c=o.some(L=>{const h=this._notebookExecutionStateService.getCellExecution(L.uri);return h&&h.state===_.Executing})?a.modify(m,"spin"):p.play;t.className="",t.classList.add("folded-cell-run-section-button",...a.asClassNameArray(c))}),t}updateInternalLayoutNow(e){this.update(e)}};u=C([g(2,y)],u);export{u as FoldedCellHint};
