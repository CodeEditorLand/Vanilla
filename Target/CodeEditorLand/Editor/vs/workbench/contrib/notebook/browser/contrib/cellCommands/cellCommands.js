import{KeyChord as g,KeyCode as s,KeyMod as i}from"../../../../../../../vs/base/common/keyCodes.js";import{Mimes as F}from"../../../../../../../vs/base/common/mime.js";import{IBulkEditService as _,ResourceTextEdit as J}from"../../../../../../../vs/editor/browser/services/bulkEditService.js";import{EditorContextKeys as q}from"../../../../../../../vs/editor/common/editorContextKeys.js";import{localize as Y,localize2 as r}from"../../../../../../../vs/nls.js";import{MenuId as p,registerAction2 as c}from"../../../../../../../vs/platform/actions/common/actions.js";import{IConfigurationService as X}from"../../../../../../../vs/platform/configuration/common/configuration.js";import{ContextKeyExpr as n}from"../../../../../../../vs/platform/contextkey/common/contextkey.js";import{InputFocusedContext as O,InputFocusedContextKey as S}from"../../../../../../../vs/platform/contextkey/common/contextkeys.js";import"../../../../../../../vs/platform/instantiation/common/instantiation.js";import{KeybindingWeight as a}from"../../../../../../../vs/platform/keybinding/common/keybindingsRegistry.js";import{INotificationService as H}from"../../../../../../../vs/platform/notification/common/notification.js";import{ResourceNotebookCellEdit as z}from"../../../../../../../vs/workbench/contrib/bulkEdit/browser/bulkCellEdits.js";import{changeCellToKind as w,computeCellLinesContents as Q,copyCellRange as f,joinCellsWithSurrounds as D,joinSelectedCells as Z,moveCellRange as M}from"../../../../../../../vs/workbench/contrib/notebook/browser/controller/cellOperations.js";import{CELL_TITLE_CELL_GROUP_ID as $,cellExecutionArgs as ee,CellOverflowToolbarGroups as b,CellToolbarOrder as oe,NotebookCellAction as A,NotebookMultiCellAction as u,parseMultiCellExecutionArgs as x}from"../../../../../../../vs/workbench/contrib/notebook/browser/controller/coreActions.js";import{CellFocusMode as te,EXPAND_CELL_INPUT_COMMAND_ID as le,EXPAND_CELL_OUTPUT_COMMAND_ID as ne}from"../../../../../../../vs/workbench/contrib/notebook/browser/notebookBrowser.js";import*as L from"../../../../../../../vs/workbench/contrib/notebook/browser/notebookIcons.js";import{CellEditType as ie,CellKind as v,NotebookSetting as se}from"../../../../../../../vs/workbench/contrib/notebook/common/notebookCommon.js";import{NOTEBOOK_CELL_EDITABLE as I,NOTEBOOK_CELL_HAS_OUTPUTS as P,NOTEBOOK_CELL_INPUT_COLLAPSED as y,NOTEBOOK_CELL_LIST_FOCUSED as E,NOTEBOOK_CELL_OUTPUT_COLLAPSED as W,NOTEBOOK_CELL_TYPE as h,NOTEBOOK_EDITOR_EDITABLE as k,NOTEBOOK_EDITOR_FOCUSED as C,NOTEBOOK_IS_ACTIVE_EDITOR as K,NOTEBOOK_OUTPUT_FOCUSED as U}from"../../../../../../../vs/workbench/contrib/notebook/common/notebookContextKeys.js";const re="notebook.cell.moveUp",ce="notebook.cell.moveDown",Ce="notebook.cell.copyUp",ae="notebook.cell.copyDown";c(class extends A{constructor(){super({id:re,title:r("notebookActions.moveCellUp","Move Cell Up"),icon:L.moveUpIcon,keybinding:{primary:i.Alt|s.UpArrow,when:n.and(C,O.toNegated()),weight:a.WorkbenchContrib},menu:{id:p.NotebookCellTitle,when:n.equals("config.notebook.dragAndDropEnabled",!1),group:b.Edit,order:14}})}async runWithContext(l,o){return M(o,"up")}}),c(class extends A{constructor(){super({id:ce,title:r("notebookActions.moveCellDown","Move Cell Down"),icon:L.moveDownIcon,keybinding:{primary:i.Alt|s.DownArrow,when:n.and(C,O.toNegated()),weight:a.WorkbenchContrib},menu:{id:p.NotebookCellTitle,when:n.equals("config.notebook.dragAndDropEnabled",!1),group:b.Edit,order:14}})}async runWithContext(l,o){return M(o,"down")}}),c(class extends A{constructor(){super({id:Ce,title:r("notebookActions.copyCellUp","Copy Cell Up"),keybinding:{primary:i.Alt|i.Shift|s.UpArrow,when:n.and(C,O.toNegated()),weight:a.WorkbenchContrib}})}async runWithContext(l,o){return f(o,"up")}}),c(class extends A{constructor(){super({id:ae,title:r("notebookActions.copyCellDown","Copy Cell Down"),keybinding:{primary:i.Alt|i.Shift|s.DownArrow,when:n.and(C,O.toNegated()),weight:a.WorkbenchContrib},menu:{id:p.NotebookCellTitle,when:n.and(C,k,I),group:b.Edit,order:13}})}async runWithContext(l,o){return f(o,"down")}});const de="notebook.cell.split",ue="notebook.cell.joinSelected",pe="notebook.cell.joinAbove",be="notebook.cell.joinBelow";c(class extends A{constructor(){super({id:de,title:r("notebookActions.splitCell","Split Cell"),menu:{id:p.NotebookCellTitle,when:n.and(k,I,y.toNegated()),order:oe.SplitCell,group:$},icon:L.splitCellIcon,keybinding:{when:n.and(C,k,I,q.editorTextFocus),primary:g(i.CtrlCmd|s.KeyK,i.CtrlCmd|i.Shift|s.Backslash),weight:a.WorkbenchContrib}})}async runWithContext(l,o){if(o.notebookEditor.isReadOnly)return;const e=l.get(_),t=o.cell,d=o.notebookEditor.getCellIndex(t),m=t.focusMode===te.Container?[{lineNumber:1,column:1}]:t.getSelectionsStartPosition();if(m&&m.length>0){if(await t.resolveTextModel(),!t.hasModel())return;const N=Q(t,m);if(N){const B=t.language,R=t.cellKind,V=t.mime,G=await t.resolveTextModel();await e.apply([new J(t.uri,{range:G.getFullModelRange(),text:N[0]}),new z(o.notebookEditor.textModel.uri,{editType:ie.Replace,index:d+1,count:0,cells:N.slice(1).map(j=>({cellKind:R,language:B,mime:V,source:j,outputs:[],metadata:{}}))})],{quotableLabel:"Split Notebook Cell"})}}}}),c(class extends A{constructor(){super({id:pe,title:r("notebookActions.joinCellAbove","Join With Previous Cell"),keybinding:{when:C,primary:i.WinCtrl|i.Alt|i.Shift|s.KeyJ,weight:a.WorkbenchContrib},menu:{id:p.NotebookCellTitle,when:n.and(C,k),group:b.Edit,order:10}})}async runWithContext(l,o){const e=l.get(_);return D(e,o,"above")}}),c(class extends A{constructor(){super({id:be,title:r("notebookActions.joinCellBelow","Join With Next Cell"),keybinding:{when:C,primary:i.WinCtrl|i.Alt|s.KeyJ,weight:a.WorkbenchContrib},menu:{id:p.NotebookCellTitle,when:n.and(C,k),group:b.Edit,order:11}})}async runWithContext(l,o){const e=l.get(_);return D(e,o,"below")}}),c(class extends A{constructor(){super({id:ue,title:r("notebookActions.joinSelectedCells","Join Selected Cells"),menu:{id:p.NotebookCellTitle,when:n.and(C,k),group:b.Edit,order:12}})}async runWithContext(l,o){const e=l.get(_),t=l.get(H);return Z(e,t,o)}});const Ae="notebook.cell.changeToCode",ke="notebook.cell.changeToMarkdown";c(class extends u{constructor(){super({id:Ae,title:r("notebookActions.changeCellToCode","Change Cell to Code"),keybinding:{when:n.and(C,n.not(S),U.toNegated()),primary:s.KeyY,weight:a.WorkbenchContrib},precondition:n.and(K,h.isEqualTo("markup")),menu:{id:p.NotebookCellTitle,when:n.and(C,k,I,h.isEqualTo("markup")),group:b.Edit}})}async runWithContext(o,e){await w(v.Code,e)}}),c(class extends u{constructor(){super({id:ke,title:r("notebookActions.changeCellToMarkdown","Change Cell to Markdown"),keybinding:{when:n.and(C,n.not(S),U.toNegated()),primary:s.KeyM,weight:a.WorkbenchContrib},precondition:n.and(K,h.isEqualTo("code")),menu:{id:p.NotebookCellTitle,when:n.and(C,k,I,h.isEqualTo("code")),group:b.Edit}})}async runWithContext(o,e){await w(v.Markup,e,"markdown",F.markdown)}});const me="notebook.cell.collapseCellInput",Oe="notebook.cell.collapseCellOutput",ge="notebook.cell.collapseAllCellInputs",Ee="notebook.cell.expandAllCellInputs",Ne="notebook.cell.collapseAllCellOutputs",Ie="notebook.cell.expandAllCellOutputs",_e="notebook.cell.toggleOutputs",he="notebook.cell.toggleOutputScrolling";c(class extends u{constructor(){super({id:me,title:r("notebookActions.collapseCellInput","Collapse Cell Input"),keybinding:{when:n.and(E,y.toNegated(),O.toNegated()),primary:g(i.CtrlCmd|s.KeyK,i.CtrlCmd|s.KeyC),weight:a.WorkbenchContrib}})}parseArgs(o,...e){return x(o,...e)}async runWithContext(o,e){e.ui?e.cell.isInputCollapsed=!0:e.selectedCells.forEach(t=>t.isInputCollapsed=!0)}}),c(class extends u{constructor(){super({id:le,title:r("notebookActions.expandCellInput","Expand Cell Input"),keybinding:{when:n.and(E,y),primary:g(i.CtrlCmd|s.KeyK,i.CtrlCmd|s.KeyC),weight:a.WorkbenchContrib}})}parseArgs(o,...e){return x(o,...e)}async runWithContext(o,e){e.ui?e.cell.isInputCollapsed=!1:e.selectedCells.forEach(t=>t.isInputCollapsed=!1)}}),c(class extends u{constructor(){super({id:Oe,title:r("notebookActions.collapseCellOutput","Collapse Cell Output"),keybinding:{when:n.and(E,W.toNegated(),O.toNegated(),P),primary:g(i.CtrlCmd|s.KeyK,s.KeyT),weight:a.WorkbenchContrib}})}async runWithContext(o,e){e.ui?e.cell.isOutputCollapsed=!0:e.selectedCells.forEach(t=>t.isOutputCollapsed=!0)}}),c(class extends u{constructor(){super({id:ne,title:r("notebookActions.expandCellOutput","Expand Cell Output"),keybinding:{when:n.and(E,W),primary:g(i.CtrlCmd|s.KeyK,s.KeyT),weight:a.WorkbenchContrib}})}async runWithContext(o,e){e.ui?e.cell.isOutputCollapsed=!1:e.selectedCells.forEach(t=>t.isOutputCollapsed=!1)}}),c(class extends u{constructor(){super({id:_e,precondition:E,title:r("notebookActions.toggleOutputs","Toggle Outputs"),metadata:{description:Y("notebookActions.toggleOutputs","Toggle Outputs"),args:ee}})}parseArgs(l,...o){return x(l,...o)}async runWithContext(l,o){let e=[];o.ui?e=[o.cell]:o.selectedCells&&(e=o.selectedCells);for(const t of e)t.isOutputCollapsed=!t.isOutputCollapsed}}),c(class extends u{constructor(){super({id:ge,title:r("notebookActions.collapseAllCellInput","Collapse All Cell Inputs"),f1:!0})}async runWithContext(o,e){T(e.notebookEditor,t=>t.isInputCollapsed=!0)}}),c(class extends u{constructor(){super({id:Ee,title:r("notebookActions.expandAllCellInput","Expand All Cell Inputs"),f1:!0})}async runWithContext(o,e){T(e.notebookEditor,t=>t.isInputCollapsed=!1)}}),c(class extends u{constructor(){super({id:Ne,title:r("notebookActions.collapseAllCellOutput","Collapse All Cell Outputs"),f1:!0})}async runWithContext(o,e){T(e.notebookEditor,t=>t.isOutputCollapsed=!0)}}),c(class extends u{constructor(){super({id:Ie,title:r("notebookActions.expandAllCellOutput","Expand All Cell Outputs"),f1:!0})}async runWithContext(o,e){T(e.notebookEditor,t=>t.isOutputCollapsed=!1)}}),c(class extends u{constructor(){super({id:he,title:r("notebookActions.toggleScrolling","Toggle Scroll Cell Output"),keybinding:{when:n.and(E,O.toNegated(),P),primary:g(i.CtrlCmd|s.KeyK,s.KeyY),weight:a.WorkbenchContrib}})}toggleOutputScrolling(o,e,t){const d=o.model.metadata;if(d){const m=d.scrollable!==void 0?d.scrollable:e,N=t||!m;d.scrollable=N,o.resetRenderer()}}async runWithContext(o,e){const t=o.get(X).getValue(se.outputScrolling);e.ui?(e.cell.outputsViewModels.forEach(d=>{this.toggleOutputScrolling(d,t,e.cell.isOutputCollapsed)}),e.cell.isOutputCollapsed=!1):e.selectedCells.forEach(d=>{d.outputsViewModels.forEach(m=>{this.toggleOutputScrolling(m,t,d.isOutputCollapsed)}),d.isOutputCollapsed=!1})}});function T(l,o){for(let e=0;e<l.getLength();e++){const t=l.cellAt(e);o(t,e)}}
