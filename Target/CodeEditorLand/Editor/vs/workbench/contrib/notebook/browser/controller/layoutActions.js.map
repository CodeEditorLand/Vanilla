{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/controller/layoutActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from '../../../../../base/common/codicons.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { URI, UriComponents } from '../../../../../base/common/uri.js';\nimport { localize, localize2 } from '../../../../../nls.js';\nimport { Categories } from '../../../../../platform/action/common/actionCommonCategories.js';\nimport { Action2, MenuId, MenuRegistry, registerAction2 } from '../../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../../platform/commands/common/commands.js';\nimport { ConfigurationTarget, IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { ServicesAccessor } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { IQuickInputService, IQuickPickItem } from '../../../../../platform/quickinput/common/quickInput.js';\nimport { NOTEBOOK_ACTIONS_CATEGORY } from './coreActions.js';\nimport { getNotebookEditorFromEditorPane } from '../notebookBrowser.js';\nimport { INotebookEditorService } from '../services/notebookEditorService.js';\nimport { NotebookSetting } from '../../common/notebookCommon.js';\nimport { NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_IS_ACTIVE_EDITOR } from '../../common/notebookContextKeys.js';\nimport { INotebookService } from '../../common/notebookService.js';\nimport { IEditorService } from '../../../../services/editor/common/editorService.js';\nimport { IPreferencesService } from '../../../../services/preferences/common/preferences.js';\n\nregisterAction2(class NotebookConfigureLayoutAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.notebook.layout.select',\n\t\t\ttitle: localize2('workbench.notebook.layout.select.label', \"Select between Notebook Layouts\"),\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.equals(`config.${NotebookSetting.openGettingStarted}`, true),\n\t\t\tcategory: NOTEBOOK_ACTIONS_CATEGORY,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\tgroup: 'notebookLayout',\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tNOTEBOOK_IS_ACTIVE_EDITOR,\n\t\t\t\t\t\tContextKeyExpr.notEquals('config.notebook.globalToolbar', true),\n\t\t\t\t\t\tContextKeyExpr.equals(`config.${NotebookSetting.openGettingStarted}`, true)\n\t\t\t\t\t),\n\t\t\t\t\torder: 0\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.NotebookToolbar,\n\t\t\t\t\tgroup: 'notebookLayout',\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tContextKeyExpr.equals('config.notebook.globalToolbar', true),\n\t\t\t\t\t\tContextKeyExpr.equals(`config.${NotebookSetting.openGettingStarted}`, true)\n\t\t\t\t\t),\n\t\t\t\t\torder: 0\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(ICommandService).executeCommand('workbench.action.openWalkthrough', { category: 'notebooks', step: 'notebookProfile' }, true);\n\t}\n});\n\nregisterAction2(class NotebookConfigureLayoutAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.notebook.layout.configure',\n\t\t\ttitle: localize2('workbench.notebook.layout.configure.label', \"Customize Notebook Layout\"),\n\t\t\tf1: true,\n\t\t\tcategory: NOTEBOOK_ACTIONS_CATEGORY,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.NotebookToolbar,\n\t\t\t\t\tgroup: 'notebookLayout',\n\t\t\t\t\twhen: ContextKeyExpr.equals('config.notebook.globalToolbar', true),\n\t\t\t\t\torder: 1\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(IPreferencesService).openSettings({ jsonEditor: false, query: '@tag:notebookLayout' });\n\t}\n});\n\nregisterAction2(class NotebookConfigureLayoutFromEditorTitle extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.notebook.layout.configure.editorTitle',\n\t\t\ttitle: localize2('workbench.notebook.layout.configure.label', \"Customize Notebook Layout\"),\n\t\t\tf1: false,\n\t\t\tcategory: NOTEBOOK_ACTIONS_CATEGORY,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.NotebookEditorLayoutConfigure,\n\t\t\t\t\tgroup: 'notebookLayout',\n\t\t\t\t\twhen: NOTEBOOK_IS_ACTIVE_EDITOR,\n\t\t\t\t\torder: 1\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(IPreferencesService).openSettings({ jsonEditor: false, query: '@tag:notebookLayout' });\n\t}\n});\n\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, {\n\tsubmenu: MenuId.NotebookEditorLayoutConfigure,\n\trememberDefaultAction: false,\n\ttitle: localize2('customizeNotebook', \"Customize Notebook...\"),\n\ticon: Codicon.gear,\n\tgroup: 'navigation',\n\torder: -1,\n\twhen: NOTEBOOK_IS_ACTIVE_EDITOR\n});\n\nregisterAction2(class ToggleLineNumberFromEditorTitle extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'notebook.toggleLineNumbersFromEditorTitle',\n\t\t\ttitle: localize2('notebook.toggleLineNumbers', 'Toggle Notebook Line Numbers'),\n\t\t\tprecondition: NOTEBOOK_EDITOR_FOCUSED,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.NotebookEditorLayoutConfigure,\n\t\t\t\t\tgroup: 'notebookLayoutDetails',\n\t\t\t\t\torder: 1,\n\t\t\t\t\twhen: NOTEBOOK_IS_ACTIVE_EDITOR\n\t\t\t\t}],\n\t\t\tcategory: NOTEBOOK_ACTIONS_CATEGORY,\n\t\t\tf1: true,\n\t\t\ttoggled: {\n\t\t\t\tcondition: ContextKeyExpr.notEquals('config.notebook.lineNumbers', 'off'),\n\t\t\t\ttitle: localize('notebook.showLineNumbers', \"Notebook Line Numbers\"),\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\treturn accessor.get(ICommandService).executeCommand('notebook.toggleLineNumbers');\n\t}\n});\n\nregisterAction2(class ToggleCellToolbarPositionFromEditorTitle extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'notebook.toggleCellToolbarPositionFromEditorTitle',\n\t\t\ttitle: localize2('notebook.toggleCellToolbarPosition', 'Toggle Cell Toolbar Position'),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.NotebookEditorLayoutConfigure,\n\t\t\t\tgroup: 'notebookLayoutDetails',\n\t\t\t\torder: 3\n\t\t\t}],\n\t\t\tcategory: NOTEBOOK_ACTIONS_CATEGORY,\n\t\t\tf1: false\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, ...args: any[]): Promise<void> {\n\t\treturn accessor.get(ICommandService).executeCommand('notebook.toggleCellToolbarPosition', ...args);\n\t}\n});\n\nregisterAction2(class ToggleBreadcrumbFromEditorTitle extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'breadcrumbs.toggleFromEditorTitle',\n\t\t\ttitle: localize2('notebook.toggleBreadcrumb', 'Toggle Breadcrumbs'),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.NotebookEditorLayoutConfigure,\n\t\t\t\tgroup: 'notebookLayoutDetails',\n\t\t\t\torder: 2\n\t\t\t}],\n\t\t\tf1: false\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\treturn accessor.get(ICommandService).executeCommand('breadcrumbs.toggle');\n\t}\n});\n\nregisterAction2(class SaveMimeTypeDisplayOrder extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'notebook.saveMimeTypeOrder',\n\t\t\ttitle: localize2('notebook.saveMimeTypeOrder', \"Save Mimetype Display Order\"),\n\t\t\tf1: true,\n\t\t\tcategory: NOTEBOOK_ACTIONS_CATEGORY,\n\t\t\tprecondition: NOTEBOOK_IS_ACTIVE_EDITOR,\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor) {\n\t\tconst service = accessor.get(INotebookService);\n\t\tconst disposables = new DisposableStore();\n\t\tconst qp = disposables.add(accessor.get(IQuickInputService).createQuickPick<IQuickPickItem & { target: ConfigurationTarget }>());\n\t\tqp.placeholder = localize('notebook.placeholder', 'Settings file to save in');\n\t\tqp.items = [\n\t\t\t{ target: ConfigurationTarget.USER, label: localize('saveTarget.machine', 'User Settings') },\n\t\t\t{ target: ConfigurationTarget.WORKSPACE, label: localize('saveTarget.workspace', 'Workspace Settings') },\n\t\t];\n\n\t\tdisposables.add(qp.onDidAccept(() => {\n\t\t\tconst target = qp.selectedItems[0]?.target;\n\t\t\tif (target !== undefined) {\n\t\t\t\tservice.saveMimeDisplayOrder(target);\n\t\t\t}\n\t\t\tqp.dispose();\n\t\t}));\n\n\t\tdisposables.add(qp.onDidHide(() => disposables.dispose()));\n\n\t\tqp.show();\n\t}\n});\n\nregisterAction2(class NotebookWebviewResetAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.notebook.layout.webview.reset',\n\t\t\ttitle: localize2('workbench.notebook.layout.webview.reset.label', \"Reset Notebook Webview\"),\n\t\t\tf1: false,\n\t\t\tcategory: NOTEBOOK_ACTIONS_CATEGORY\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor, args?: UriComponents): void {\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tif (args) {\n\t\t\tconst uri = URI.revive(args);\n\t\t\tconst notebookEditorService = accessor.get(INotebookEditorService);\n\t\t\tconst widgets = notebookEditorService.listNotebookEditors().filter(widget => widget.hasModel() && widget.textModel.uri.toString() === uri.toString());\n\t\t\tfor (const widget of widgets) {\n\t\t\t\tif (widget.hasModel()) {\n\t\t\t\t\twidget.getInnerWebview()?.reload();\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst editor = getNotebookEditorFromEditorPane(editorService.activeEditorPane);\n\t\t\tif (!editor) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\teditor.getInnerWebview()?.reload();\n\t\t}\n\t}\n});\n\nregisterAction2(class ToggleNotebookStickyScroll extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'notebook.action.toggleNotebookStickyScroll',\n\t\t\ttitle: {\n\t\t\t\t...localize2('toggleStickyScroll', \"Toggle Notebook Sticky Scroll\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'mitoggleNotebookStickyScroll', comment: ['&& denotes a mnemonic'] }, \"&&Toggle Notebook Sticky Scroll\"),\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\ttoggled: {\n\t\t\t\tcondition: ContextKeyExpr.equals('config.notebook.stickyScroll.enabled', true),\n\t\t\t\ttitle: localize('notebookStickyScroll', \"Toggle Notebook Sticky Scroll\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'mitoggleNotebookStickyScroll', comment: ['&& denotes a mnemonic'] }, \"&&Toggle Notebook Sticky Scroll\"),\n\t\t\t},\n\t\t\tmenu: [\n\t\t\t\t{ id: MenuId.CommandPalette },\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.NotebookStickyScrollContext,\n\t\t\t\t\tgroup: 'notebookView',\n\t\t\t\t\torder: 2\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst newValue = !configurationService.getValue('notebook.stickyScroll.enabled');\n\t\treturn configurationService.updateValue('notebook.stickyScroll.enabled', newValue);\n\t}\n});\n"],
  "mappings": "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",
  "names": ["NotebookConfigureLayoutAction"]
}
