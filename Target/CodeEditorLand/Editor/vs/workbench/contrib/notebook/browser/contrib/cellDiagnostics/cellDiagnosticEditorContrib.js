var g=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var c=(l,n,i,e)=>{for(var t=e>1?void 0:e?m(n,i):n,o=l.length-1,a;o>=0;o--)(a=l[o])&&(t=(e?a(n,i,t):a(t))||t);return e&&t&&g(n,i,t),t},s=(l,n)=>(i,e)=>n(i,e,l);import{Disposable as b,toDisposable as d}from"../../../../../../base/common/lifecycle.js";import{IMarkerService as f}from"../../../../../../platform/markers/common/markers.js";import"../../../../../../editor/common/core/range.js";import{INotebookExecutionStateService as E,NotebookExecutionType as v}from"../../../common/notebookExecutionStateService.js";import{IConfigurationService as C}from"../../../../../../platform/configuration/common/configuration.js";import{CellKind as I,NotebookSetting as u}from"../../../common/notebookCommon.js";import"../../notebookBrowser.js";import{registerNotebookContribution as S}from"../../notebookEditorExtensions.js";import{Iterable as h}from"../../../../../../base/common/iterator.js";import{CodeCellViewModel as k}from"../../viewModel/codeCellViewModel.js";import"../../../../../../base/common/uri.js";import{Event as x}from"../../../../../../base/common/event.js";import{IChatAgentService as D}from"../../../../chat/common/chatAgents.js";let r=class extends b{constructor(i,e,t,o,a){super();this.notebookEditor=i;this.notebookExecutionStateService=e;this.markerService=t;this.chatAgentService=o;this.configurationService=a;this.updateEnabled(),this._register(o.onDidChangeAgents(()=>this.updateEnabled())),this._register(a.onDidChangeConfiguration(p=>{p.affectsConfiguration(u.cellFailureDiagnostics)&&this.updateEnabled()}))}static ID="workbench.notebook.cellDiagnostics";enabled=!1;listening=!1;diagnosticsByHandle=new Map;updateEnabled(){const i=this.configurationService.getValue(u.cellFailureDiagnostics);this.enabled&&(!i||h.isEmpty(this.chatAgentService.getAgents()))?(this.enabled=!1,this.clearAll()):!this.enabled&&i&&!h.isEmpty(this.chatAgentService.getAgents())&&(this.enabled=!0,this.listening||(this.listening=!0,this._register(x.accumulate(this.notebookExecutionStateService.onDidChangeExecution,200)(e=>this.handleChangeExecutionState(e)))))}handleChangeExecutionState(i){if(!this.enabled)return;const e=new Set;for(const t of i.reverse()){const o=this.notebookEditor.textModel?.uri;t.type===v.cell&&o&&t.affectsNotebook(o)&&!e.has(t.cellHandle)&&(e.add(t.cellHandle),t.changed?this.clear(t.cellHandle):this.setDiagnostics(t.cellHandle))}}clearAll(){for(const i of this.diagnosticsByHandle.keys())this.clear(i)}clear(i){const e=this.diagnosticsByHandle.get(i);if(e){for(const t of e.disposables)t.dispose();this.diagnosticsByHandle.delete(i)}}setDiagnostics(i){if(this.diagnosticsByHandle.has(i))return;const e=this.notebookEditor.getCellByHandle(i);if(!e||e.cellKind!==I.Code)return;const t=e.model.internalMetadata;if(e instanceof k&&!t.lastRunSuccess&&t?.error?.location){const o=[],a=this.createMarkerData(t.error.message,t.error.location);this.markerService.changeOne(r.ID,e.uri,[a]),o.push(d(()=>this.markerService.changeOne(r.ID,e.uri,[]))),e.excecutionError.set(t.error,void 0),o.push(d(()=>e.excecutionError.set(void 0,void 0))),o.push(e.model.onDidChangeOutputs(()=>{e.model.outputs.length===0&&this.clear(i)})),o.push(e.model.onDidChangeContent(()=>{this.clear(i)})),this.diagnosticsByHandle.set(i,{cellUri:e.uri,error:t.error,disposables:o})}}createMarkerData(i,e){return{severity:8,message:i,startLineNumber:e.startLineNumber+1,startColumn:e.startColumn+1,endLineNumber:e.endLineNumber+1,endColumn:e.endColumn+1,source:"Cell Execution Error"}}dispose(){super.dispose(),this.clearAll()}};r=c([s(1,E),s(2,f),s(3,D),s(4,C)],r),S(r.ID,r);export{r as CellDiagnostics};
