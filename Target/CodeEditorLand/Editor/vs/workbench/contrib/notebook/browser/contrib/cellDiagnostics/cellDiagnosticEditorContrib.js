var g=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var c=(l,n,o,e)=>{for(var t=e>1?void 0:e?m(n,o):n,i=l.length-1,a;i>=0;i--)(a=l[i])&&(t=(e?a(n,o,t):a(t))||t);return e&&t&&g(n,o,t),t},s=(l,n)=>(o,e)=>n(o,e,l);import{Event as b}from"../../../../../../base/common/event.js";import{Iterable as d}from"../../../../../../base/common/iterator.js";import{Disposable as f,toDisposable as u}from"../../../../../../base/common/lifecycle.js";import{IConfigurationService as E}from"../../../../../../platform/configuration/common/configuration.js";import{IMarkerService as v}from"../../../../../../platform/markers/common/markers.js";import{IChatAgentService as C}from"../../../../chat/common/chatAgents.js";import{CellKind as I,NotebookSetting as p}from"../../../common/notebookCommon.js";import{INotebookExecutionStateService as S,NotebookExecutionType as k}from"../../../common/notebookExecutionStateService.js";import{registerNotebookContribution as y}from"../../notebookEditorExtensions.js";import{CodeCellViewModel as x}from"../../viewModel/codeCellViewModel.js";let r=class extends f{constructor(o,e,t,i,a){super();this.notebookEditor=o;this.notebookExecutionStateService=e;this.markerService=t;this.chatAgentService=i;this.configurationService=a;this.updateEnabled(),this._register(i.onDidChangeAgents(()=>this.updateEnabled())),this._register(a.onDidChangeConfiguration(h=>{h.affectsConfiguration(p.cellFailureDiagnostics)&&this.updateEnabled()}))}static ID="workbench.notebook.cellDiagnostics";enabled=!1;listening=!1;diagnosticsByHandle=new Map;updateEnabled(){const o=this.configurationService.getValue(p.cellFailureDiagnostics);this.enabled&&(!o||d.isEmpty(this.chatAgentService.getAgents()))?(this.enabled=!1,this.clearAll()):!this.enabled&&o&&!d.isEmpty(this.chatAgentService.getAgents())&&(this.enabled=!0,this.listening||(this.listening=!0,this._register(b.accumulate(this.notebookExecutionStateService.onDidChangeExecution,200)(e=>this.handleChangeExecutionState(e)))))}handleChangeExecutionState(o){if(!this.enabled)return;const e=new Set;for(const t of o.reverse()){const i=this.notebookEditor.textModel?.uri;t.type===k.cell&&i&&t.affectsNotebook(i)&&!e.has(t.cellHandle)&&(e.add(t.cellHandle),t.changed?this.clear(t.cellHandle):this.setDiagnostics(t.cellHandle))}}clearAll(){for(const o of this.diagnosticsByHandle.keys())this.clear(o)}clear(o){const e=this.diagnosticsByHandle.get(o);if(e){for(const t of e.disposables)t.dispose();this.diagnosticsByHandle.delete(o)}}setDiagnostics(o){if(this.diagnosticsByHandle.has(o))return;const e=this.notebookEditor.getCellByHandle(o);if(!e||e.cellKind!==I.Code)return;const t=e.model.internalMetadata;if(e instanceof x&&!t.lastRunSuccess&&t?.error?.location){const i=[],a=this.createMarkerData(t.error.message,t.error.location);this.markerService.changeOne(r.ID,e.uri,[a]),i.push(u(()=>this.markerService.changeOne(r.ID,e.uri,[]))),e.excecutionError.set(t.error,void 0),i.push(u(()=>e.excecutionError.set(void 0,void 0))),i.push(e.model.onDidChangeOutputs(()=>{e.model.outputs.length===0&&this.clear(o)})),i.push(e.model.onDidChangeContent(()=>{this.clear(o)})),this.diagnosticsByHandle.set(o,{cellUri:e.uri,error:t.error,disposables:i})}}createMarkerData(o,e){return{severity:8,message:o,startLineNumber:e.startLineNumber+1,startColumn:e.startColumn+1,endLineNumber:e.endLineNumber+1,endColumn:e.endColumn+1,source:"Cell Execution Error"}}dispose(){super.dispose(),this.clearAll()}};r=c([s(1,S),s(2,v),s(3,C),s(4,E)],r),y(r.ID,r);export{r as CellDiagnostics};
