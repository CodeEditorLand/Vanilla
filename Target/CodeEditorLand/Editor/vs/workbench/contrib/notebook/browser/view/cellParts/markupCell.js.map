{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/view/cellParts/markupCell.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from '../../../../../../base/browser/dom.js';\nimport { renderIcon } from '../../../../../../base/browser/ui/iconLabel/iconLabels.js';\nimport { disposableTimeout, raceCancellation } from '../../../../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../../../../base/common/cancellation.js';\nimport { Codicon } from '../../../../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../../../../base/common/themables.js';\nimport { Disposable, DisposableStore, MutableDisposable, toDisposable } from '../../../../../../base/common/lifecycle.js';\nimport { ICodeEditor } from '../../../../../../editor/browser/editorBrowser.js';\nimport { CodeEditorWidget } from '../../../../../../editor/browser/widget/codeEditor/codeEditorWidget.js';\nimport { IEditorOptions } from '../../../../../../editor/common/config/editorOptions.js';\nimport { EditorContextKeys } from '../../../../../../editor/common/editorContextKeys.js';\nimport { ILanguageService } from '../../../../../../editor/common/languages/language.js';\nimport { tokenizeToStringSync } from '../../../../../../editor/common/languages/textToHtmlTokenizer.js';\nimport { IReadonlyTextBuffer } from '../../../../../../editor/common/model.js';\nimport { localize } from '../../../../../../nls.js';\nimport { IAccessibilityService } from '../../../../../../platform/accessibility/common/accessibility.js';\nimport { IConfigurationService } from '../../../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../../../../platform/instantiation/common/serviceCollection.js';\nimport { IKeybindingService } from '../../../../../../platform/keybinding/common/keybinding.js';\nimport { CellEditState, CellFocusMode, CellFoldingState, EXPAND_CELL_INPUT_COMMAND_ID, IActiveNotebookEditorDelegate, ICellViewModel } from '../../notebookBrowser.js';\nimport { collapsedIcon, expandedIcon } from '../../notebookIcons.js';\nimport { CellEditorOptions } from './cellEditorOptions.js';\nimport { MarkdownCellRenderTemplate } from '../notebookRenderingCommon.js';\nimport { MarkupCellViewModel } from '../../viewModel/markupCellViewModel.js';\nimport { WordHighlighterContribution } from '../../../../../../editor/contrib/wordHighlighter/browser/wordHighlighter.js';\n\nexport class MarkupCell extends Disposable {\n\n\tprivate editor: CodeEditorWidget | null = null;\n\n\tprivate markdownAccessibilityContainer!: HTMLElement;\n\tprivate editorPart: HTMLElement;\n\n\tprivate readonly localDisposables = this._register(new DisposableStore());\n\tprivate readonly focusSwitchDisposable = this._register(new MutableDisposable());\n\tprivate readonly editorDisposables = this._register(new DisposableStore());\n\tprivate foldingState: CellFoldingState;\n\tprivate cellEditorOptions: CellEditorOptions;\n\tprivate editorOptions: IEditorOptions;\n\tprivate _isDisposed: boolean = false;\n\n\tconstructor(\n\t\tprivate readonly notebookEditor: IActiveNotebookEditorDelegate,\n\t\tprivate readonly viewCell: MarkupCellViewModel,\n\t\tprivate readonly templateData: MarkdownCellRenderTemplate,\n\t\tprivate readonly renderedEditors: Map<ICellViewModel, ICodeEditor | undefined>,\n\t\t@IAccessibilityService private readonly accessibilityService: IAccessibilityService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@IConfigurationService private configurationService: IConfigurationService,\n\t\t@IKeybindingService private keybindingService: IKeybindingService,\n\t) {\n\t\tsuper();\n\n\t\tthis.constructDOM();\n\t\tthis.editorPart = templateData.editorPart;\n\t\tthis.cellEditorOptions = this._register(new CellEditorOptions(this.notebookEditor.getBaseCellEditorOptions(viewCell.language), this.notebookEditor.notebookOptions, this.configurationService));\n\t\tthis.cellEditorOptions.setLineNumbers(this.viewCell.lineNumbers);\n\t\tthis.editorOptions = this.cellEditorOptions.getValue(this.viewCell.internalMetadata, this.viewCell.uri);\n\n\t\tthis._register(toDisposable(() => renderedEditors.delete(this.viewCell)));\n\t\tthis.registerListeners();\n\n\t\t// update for init state\n\t\tthis.templateData.cellParts.scheduleRenderCell(this.viewCell);\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.templateData.cellParts.unrenderCell(this.viewCell);\n\t\t}));\n\n\t\tthis._register(this.accessibilityService.onDidChangeScreenReaderOptimized(() => {\n\t\t\tthis.viewUpdate();\n\t\t}));\n\n\t\tthis.updateForHover();\n\t\tthis.updateForFocusModeChange();\n\t\tthis.foldingState = viewCell.foldingState;\n\t\tthis.layoutFoldingIndicator();\n\t\tthis.updateFoldingIconShowClass();\n\n\t\t// the markdown preview's height might already be updated after the renderer calls `element.getHeight()`\n\t\tif (this.viewCell.layoutInfo.totalHeight > 0) {\n\t\t\tthis.relayoutCell();\n\t\t}\n\n\t\tthis.applyDecorations();\n\t\tthis.viewUpdate();\n\n\t\tthis.layoutCellParts();\n\t\tthis._register(this.viewCell.onDidChangeLayout(() => {\n\t\t\tthis.layoutCellParts();\n\t\t}));\n\t}\n\n\tlayoutCellParts() {\n\t\tthis.templateData.cellParts.updateInternalLayoutNow(this.viewCell);\n\t}\n\n\tprivate constructDOM() {\n\t\t// Create an element that is only used to announce markup cell content to screen readers\n\t\tconst id = `aria-markup-cell-${this.viewCell.id}`;\n\t\tthis.markdownAccessibilityContainer = this.templateData.cellContainer;\n\t\tthis.markdownAccessibilityContainer.id = id;\n\t\t// Hide the element from non-screen readers\n\t\tthis.markdownAccessibilityContainer.style.height = '1px';\n\t\tthis.markdownAccessibilityContainer.style.overflow = 'hidden';\n\t\tthis.markdownAccessibilityContainer.style.position = 'absolute';\n\t\tthis.markdownAccessibilityContainer.style.top = '100000px';\n\t\tthis.markdownAccessibilityContainer.style.left = '10000px';\n\t\tthis.markdownAccessibilityContainer.ariaHidden = 'false';\n\n\t\tthis.templateData.rootContainer.setAttribute('aria-describedby', id);\n\t\tthis.templateData.container.classList.toggle('webview-backed-markdown-cell', true);\n\t}\n\n\tprivate registerListeners() {\n\t\tthis._register(this.viewCell.onDidChangeState(e => {\n\t\t\tthis.templateData.cellParts.updateState(this.viewCell, e);\n\t\t}));\n\n\t\tthis._register(this.viewCell.model.onDidChangeMetadata(() => {\n\t\t\tthis.viewUpdate();\n\t\t}));\n\n\t\tthis._register(this.viewCell.onDidChangeState((e) => {\n\t\t\tif (e.editStateChanged || e.contentChanged) {\n\t\t\t\tthis.viewUpdate();\n\t\t\t}\n\n\t\t\tif (e.focusModeChanged) {\n\t\t\t\tthis.updateForFocusModeChange();\n\t\t\t}\n\n\t\t\tif (e.foldingStateChanged) {\n\t\t\t\tconst foldingState = this.viewCell.foldingState;\n\n\t\t\t\tif (foldingState !== this.foldingState) {\n\t\t\t\t\tthis.foldingState = foldingState;\n\t\t\t\t\tthis.layoutFoldingIndicator();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (e.cellIsHoveredChanged) {\n\t\t\t\tthis.updateForHover();\n\t\t\t}\n\n\t\t\tif (e.inputCollapsedChanged) {\n\t\t\t\tthis.updateCollapsedState();\n\t\t\t\tthis.viewUpdate();\n\t\t\t}\n\n\t\t\tif (e.cellLineNumberChanged) {\n\t\t\t\tthis.cellEditorOptions.setLineNumbers(this.viewCell.lineNumbers);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.notebookEditor.notebookOptions.onDidChangeOptions(e => {\n\t\t\tif (e.showFoldingControls) {\n\t\t\t\tthis.updateFoldingIconShowClass();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.viewCell.onDidChangeLayout((e) => {\n\t\t\tconst layoutInfo = this.editor?.getLayoutInfo();\n\t\t\tif (e.outerWidth && this.viewCell.getEditState() === CellEditState.Editing && layoutInfo && layoutInfo.width !== this.viewCell.layoutInfo.editorWidth) {\n\t\t\t\tthis.onCellEditorWidthChange();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.cellEditorOptions.onDidChange(() => this.updateMarkupCellOptions()));\n\t}\n\n\tprivate updateMarkupCellOptions(): any {\n\t\tthis.updateEditorOptions(this.cellEditorOptions.getUpdatedValue(this.viewCell.internalMetadata, this.viewCell.uri));\n\n\t\tif (this.editor) {\n\t\t\tthis.editor.updateOptions(this.cellEditorOptions.getUpdatedValue(this.viewCell.internalMetadata, this.viewCell.uri));\n\n\t\t\tconst cts = new CancellationTokenSource();\n\t\t\tthis._register({ dispose() { cts.dispose(true); } });\n\t\t\traceCancellation(this.viewCell.resolveTextModel(), cts.token).then(model => {\n\t\t\t\tif (this._isDisposed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (model) {\n\t\t\t\t\tmodel.updateOptions({\n\t\t\t\t\t\tindentSize: this.cellEditorOptions.indentSize,\n\t\t\t\t\t\ttabSize: this.cellEditorOptions.tabSize,\n\t\t\t\t\t\tinsertSpaces: this.cellEditorOptions.insertSpaces,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate updateCollapsedState() {\n\t\tif (this.viewCell.isInputCollapsed) {\n\t\t\tthis.notebookEditor.hideMarkupPreviews([this.viewCell]);\n\t\t} else {\n\t\t\tthis.notebookEditor.unhideMarkupPreviews([this.viewCell]);\n\t\t}\n\t}\n\n\tprivate updateForHover(): void {\n\t\tthis.templateData.container.classList.toggle('markdown-cell-hover', this.viewCell.cellIsHovered);\n\t}\n\n\tprivate updateForFocusModeChange() {\n\t\tif (this.viewCell.focusMode === CellFocusMode.Editor) {\n\t\t\tthis.focusEditorIfNeeded();\n\t\t}\n\n\t\tthis.templateData.container.classList.toggle('cell-editor-focus', this.viewCell.focusMode === CellFocusMode.Editor);\n\t}\n\n\tprivate applyDecorations() {\n\t\t// apply decorations\n\t\tthis._register(this.viewCell.onCellDecorationsChanged((e) => {\n\t\t\te.added.forEach(options => {\n\t\t\t\tif (options.className) {\n\t\t\t\t\tthis.notebookEditor.deltaCellContainerClassNames(this.viewCell.id, [options.className], []);\n\t\t\t\t\tthis.templateData.rootContainer.classList.add(options.className);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\te.removed.forEach(options => {\n\t\t\t\tif (options.className) {\n\t\t\t\t\tthis.notebookEditor.deltaCellContainerClassNames(this.viewCell.id, [], [options.className]);\n\t\t\t\t\tthis.templateData.rootContainer.classList.remove(options.className);\n\t\t\t\t}\n\t\t\t});\n\t\t}));\n\n\t\tthis.viewCell.getCellDecorations().forEach(options => {\n\t\t\tif (options.className) {\n\t\t\t\tthis.notebookEditor.deltaCellContainerClassNames(this.viewCell.id, [options.className], []);\n\t\t\t\tthis.templateData.rootContainer.classList.add(options.className);\n\t\t\t}\n\t\t});\n\t}\n\n\toverride dispose() {\n\t\tthis._isDisposed = true;\n\n\t\t// move focus back to the cell list otherwise the focus goes to body\n\t\tif (this.notebookEditor.getActiveCell() === this.viewCell && this.viewCell.focusMode === CellFocusMode.Editor && (this.notebookEditor.hasEditorFocus() || this.notebookEditor.getDomNode().ownerDocument.activeElement === this.notebookEditor.getDomNode().ownerDocument.body)) {\n\t\t\tthis.notebookEditor.focusContainer();\n\t\t}\n\n\t\tthis.viewCell.detachTextEditor();\n\t\tsuper.dispose();\n\t}\n\n\tprivate updateFoldingIconShowClass() {\n\t\tconst showFoldingIcon = this.notebookEditor.notebookOptions.getDisplayOptions().showFoldingControls;\n\t\tthis.templateData.foldingIndicator.classList.remove('mouseover', 'always');\n\t\tthis.templateData.foldingIndicator.classList.add(showFoldingIcon);\n\t}\n\n\tprivate viewUpdate(): void {\n\t\tif (this.viewCell.isInputCollapsed) {\n\t\t\tthis.viewUpdateCollapsed();\n\t\t} else if (this.viewCell.getEditState() === CellEditState.Editing) {\n\t\t\tthis.viewUpdateEditing();\n\t\t} else {\n\t\t\tthis.viewUpdatePreview();\n\t\t}\n\t}\n\n\tprivate viewUpdateCollapsed(): void {\n\t\tDOM.show(this.templateData.cellInputCollapsedContainer);\n\t\tDOM.hide(this.editorPart);\n\n\t\tthis.templateData.cellInputCollapsedContainer.innerText = '';\n\n\t\tconst markdownIcon = DOM.append(this.templateData.cellInputCollapsedContainer, DOM.$('span'));\n\t\tmarkdownIcon.classList.add(...ThemeIcon.asClassNameArray(Codicon.markdown));\n\n\t\tconst element = DOM.$('div');\n\t\telement.classList.add('cell-collapse-preview');\n\t\tconst richEditorText = this.getRichText(this.viewCell.textBuffer, this.viewCell.language);\n\t\tDOM.safeInnerHtml(element, richEditorText);\n\t\tthis.templateData.cellInputCollapsedContainer.appendChild(element);\n\n\t\tconst expandIcon = DOM.append(element, DOM.$('span.expandInputIcon'));\n\t\texpandIcon.classList.add(...ThemeIcon.asClassNameArray(Codicon.more));\n\t\tconst keybinding = this.keybindingService.lookupKeybinding(EXPAND_CELL_INPUT_COMMAND_ID);\n\t\tif (keybinding) {\n\t\t\telement.title = localize('cellExpandInputButtonLabelWithDoubleClick', \"Double-click to expand cell input ({0})\", keybinding.getLabel());\n\t\t\texpandIcon.title = localize('cellExpandInputButtonLabel', \"Expand Cell Input ({0})\", keybinding.getLabel());\n\t\t}\n\n\t\tthis.markdownAccessibilityContainer.ariaHidden = 'true';\n\n\t\tthis.templateData.container.classList.toggle('input-collapsed', true);\n\t\tthis.viewCell.renderedMarkdownHeight = 0;\n\t\tthis.viewCell.layoutChange({});\n\t}\n\n\tprivate getRichText(buffer: IReadonlyTextBuffer, language: string) {\n\t\treturn tokenizeToStringSync(this.languageService, buffer.getLineContent(1), language);\n\t}\n\n\tprivate viewUpdateEditing(): void {\n\t\t// switch to editing mode\n\t\tlet editorHeight: number;\n\n\t\tDOM.show(this.editorPart);\n\t\tthis.markdownAccessibilityContainer.ariaHidden = 'true';\n\t\tDOM.hide(this.templateData.cellInputCollapsedContainer);\n\n\t\tthis.notebookEditor.hideMarkupPreviews([this.viewCell]);\n\n\t\tthis.templateData.container.classList.toggle('input-collapsed', false);\n\t\tthis.templateData.container.classList.toggle('markdown-cell-edit-mode', true);\n\n\t\tif (this.editor && this.editor.hasModel()) {\n\t\t\teditorHeight = this.editor.getContentHeight();\n\n\t\t\t// not first time, we don't need to create editor\n\t\t\tthis.viewCell.attachTextEditor(this.editor);\n\t\t\tthis.focusEditorIfNeeded();\n\n\t\t\tthis.bindEditorListeners(this.editor);\n\n\t\t\tthis.editor.layout({\n\t\t\t\twidth: this.viewCell.layoutInfo.editorWidth,\n\t\t\t\theight: editorHeight\n\t\t\t});\n\t\t} else {\n\t\t\tthis.editorDisposables.clear();\n\t\t\tconst width = this.notebookEditor.notebookOptions.computeMarkdownCellEditorWidth(this.notebookEditor.getLayoutInfo().width);\n\t\t\tconst lineNum = this.viewCell.lineCount;\n\t\t\tconst lineHeight = this.viewCell.layoutInfo.fontInfo?.lineHeight || 17;\n\t\t\tconst editorPadding = this.notebookEditor.notebookOptions.computeEditorPadding(this.viewCell.internalMetadata, this.viewCell.uri);\n\t\t\teditorHeight = Math.max(lineNum, 1) * lineHeight + editorPadding.top + editorPadding.bottom;\n\n\t\t\tthis.templateData.editorContainer.innerText = '';\n\n\t\t\t// create a special context key service that set the inCompositeEditor-contextkey\n\t\t\tconst editorContextKeyService = this.contextKeyService.createScoped(this.templateData.editorPart);\n\t\t\tEditorContextKeys.inCompositeEditor.bindTo(editorContextKeyService).set(true);\n\t\t\tconst editorInstaService = this.editorDisposables.add(this.instantiationService.createChild(new ServiceCollection([IContextKeyService, editorContextKeyService])));\n\t\t\tthis.editorDisposables.add(editorContextKeyService);\n\n\t\t\tthis.editor = this.editorDisposables.add(editorInstaService.createInstance(CodeEditorWidget, this.templateData.editorContainer, {\n\t\t\t\t...this.editorOptions,\n\t\t\t\tdimension: {\n\t\t\t\t\twidth: width,\n\t\t\t\t\theight: editorHeight\n\t\t\t\t},\n\t\t\t\t// overflowWidgetsDomNode: this.notebookEditor.getOverflowContainerDomNode()\n\t\t\t}, {\n\t\t\t\tcontributions: this.notebookEditor.creationOptions.cellEditorContributions\n\t\t\t}));\n\t\t\tthis.templateData.currentEditor = this.editor;\n\t\t\tthis.editorDisposables.add(this.editor.onDidBlurEditorWidget(() => {\n\t\t\t\tif (this.editor) {\n\t\t\t\t\tWordHighlighterContribution.get(this.editor)?.stopHighlighting();\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis.editorDisposables.add(this.editor.onDidFocusEditorWidget(() => {\n\t\t\t\tif (this.editor) {\n\t\t\t\t\tWordHighlighterContribution.get(this.editor)?.restoreViewState(true);\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tconst cts = new CancellationTokenSource();\n\t\t\tthis.editorDisposables.add({ dispose() { cts.dispose(true); } });\n\t\t\traceCancellation(this.viewCell.resolveTextModel(), cts.token).then(model => {\n\t\t\t\tif (!model) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.editor!.setModel(model);\n\t\t\t\tmodel.updateOptions({\n\t\t\t\t\tindentSize: this.cellEditorOptions.indentSize,\n\t\t\t\t\ttabSize: this.cellEditorOptions.tabSize,\n\t\t\t\t\tinsertSpaces: this.cellEditorOptions.insertSpaces,\n\t\t\t\t});\n\n\t\t\t\tconst realContentHeight = this.editor!.getContentHeight();\n\t\t\t\tif (realContentHeight !== editorHeight) {\n\t\t\t\t\tthis.editor!.layout(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\t\theight: realContentHeight\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\teditorHeight = realContentHeight;\n\t\t\t\t}\n\n\t\t\t\tthis.viewCell.attachTextEditor(this.editor!);\n\n\t\t\t\tif (this.viewCell.getEditState() === CellEditState.Editing) {\n\t\t\t\t\tthis.focusEditorIfNeeded();\n\t\t\t\t}\n\n\t\t\t\tthis.bindEditorListeners(this.editor!);\n\n\t\t\t\tthis.viewCell.editorHeight = editorHeight;\n\t\t\t});\n\t\t}\n\n\t\tthis.viewCell.editorHeight = editorHeight;\n\t\tthis.focusEditorIfNeeded();\n\t\tthis.renderedEditors.set(this.viewCell, this.editor);\n\t}\n\n\tprivate viewUpdatePreview(): void {\n\t\tthis.viewCell.detachTextEditor();\n\t\tDOM.hide(this.editorPart);\n\t\tDOM.hide(this.templateData.cellInputCollapsedContainer);\n\t\tthis.markdownAccessibilityContainer.ariaHidden = 'false';\n\t\tthis.templateData.container.classList.toggle('input-collapsed', false);\n\t\tthis.templateData.container.classList.toggle('markdown-cell-edit-mode', false);\n\n\t\tthis.renderedEditors.delete(this.viewCell);\n\n\t\tthis.markdownAccessibilityContainer.innerText = '';\n\t\tif (this.viewCell.renderedHtml) {\n\t\t\tif (this.accessibilityService.isScreenReaderOptimized()) {\n\t\t\t\tDOM.safeInnerHtml(this.markdownAccessibilityContainer, this.viewCell.renderedHtml);\n\t\t\t} else {\n\t\t\t\tDOM.clearNode(this.markdownAccessibilityContainer);\n\t\t\t}\n\t\t}\n\n\t\tthis.notebookEditor.createMarkupPreview(this.viewCell);\n\t}\n\n\tprivate focusEditorIfNeeded() {\n\t\tif (this.viewCell.focusMode === CellFocusMode.Editor &&\n\t\t\t(this.notebookEditor.hasEditorFocus() || this.notebookEditor.getDomNode().ownerDocument.activeElement === this.notebookEditor.getDomNode().ownerDocument.body)\n\t\t) { // Don't steal focus from other workbench parts, but if body has focus, we can take it\n\t\t\tif (!this.editor) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.editor.focus();\n\n\t\t\tconst primarySelection = this.editor.getSelection();\n\t\t\tif (!primarySelection) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.notebookEditor.revealRangeInViewAsync(this.viewCell, primarySelection);\n\t\t}\n\t}\n\n\tprivate layoutEditor(dimension: DOM.IDimension): void {\n\t\tthis.editor?.layout(dimension);\n\t}\n\n\tprivate onCellEditorWidthChange(): void {\n\t\tconst realContentHeight = this.editor!.getContentHeight();\n\t\tthis.layoutEditor(\n\t\t\t{\n\t\t\t\twidth: this.viewCell.layoutInfo.editorWidth,\n\t\t\t\theight: realContentHeight\n\t\t\t}\n\t\t);\n\n\t\t// LET the content size observer to handle it\n\t\t// this.viewCell.editorHeight = realContentHeight;\n\t\t// this.relayoutCell();\n\t}\n\n\trelayoutCell(): void {\n\t\tthis.notebookEditor.layoutNotebookCell(this.viewCell, this.viewCell.layoutInfo.totalHeight);\n\t\tthis.layoutFoldingIndicator();\n\t}\n\n\tupdateEditorOptions(newValue: IEditorOptions): void {\n\t\tthis.editorOptions = newValue;\n\t\tthis.editor?.updateOptions(this.editorOptions);\n\t}\n\n\tprivate layoutFoldingIndicator() {\n\t\tswitch (this.foldingState) {\n\t\t\tcase CellFoldingState.None:\n\t\t\t\tthis.templateData.foldingIndicator.style.display = 'none';\n\t\t\t\tthis.templateData.foldingIndicator.innerText = '';\n\t\t\t\tbreak;\n\t\t\tcase CellFoldingState.Collapsed:\n\t\t\t\tthis.templateData.foldingIndicator.style.display = '';\n\t\t\t\tDOM.reset(this.templateData.foldingIndicator, renderIcon(collapsedIcon));\n\t\t\t\tbreak;\n\t\t\tcase CellFoldingState.Expanded:\n\t\t\t\tthis.templateData.foldingIndicator.style.display = '';\n\t\t\t\tDOM.reset(this.templateData.foldingIndicator, renderIcon(expandedIcon));\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate bindEditorListeners(editor: CodeEditorWidget) {\n\n\t\tthis.localDisposables.clear();\n\t\tthis.focusSwitchDisposable.clear();\n\n\t\tthis.localDisposables.add(editor.onDidContentSizeChange(e => {\n\t\t\tif (e.contentHeightChanged) {\n\t\t\t\tthis.onCellEditorHeightChange(editor, e.contentHeight);\n\t\t\t}\n\t\t}));\n\n\t\tthis.localDisposables.add(editor.onDidChangeCursorSelection((e) => {\n\t\t\tif (e.source === 'restoreState') {\n\t\t\t\t// do not reveal the cell into view if this selection change was caused by restoring editors...\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selections = editor.getSelections();\n\n\t\t\tif (selections?.length) {\n\t\t\t\tconst contentHeight = editor.getContentHeight();\n\t\t\t\tconst layoutContentHeight = this.viewCell.layoutInfo.editorHeight;\n\n\t\t\t\tif (contentHeight !== layoutContentHeight) {\n\t\t\t\t\tthis.onCellEditorHeightChange(editor, contentHeight);\n\t\t\t\t}\n\t\t\t\tconst lastSelection = selections[selections.length - 1];\n\t\t\t\tthis.notebookEditor.revealRangeInViewAsync(this.viewCell, lastSelection);\n\t\t\t}\n\t\t}));\n\n\t\tconst updateFocusMode = () => this.viewCell.focusMode = editor.hasWidgetFocus() ? CellFocusMode.Editor : CellFocusMode.Container;\n\t\tthis.localDisposables.add(editor.onDidFocusEditorWidget(() => {\n\t\t\tupdateFocusMode();\n\t\t}));\n\n\t\tthis.localDisposables.add(editor.onDidBlurEditorWidget(() => {\n\t\t\t// this is for a special case:\n\t\t\t// users click the status bar empty space, which we will then focus the editor\n\t\t\t// so we don't want to update the focus state too eagerly\n\t\t\tif (this.templateData.container.ownerDocument.activeElement?.contains(this.templateData.container)) {\n\t\t\t\tthis.focusSwitchDisposable.value = disposableTimeout(() => updateFocusMode(), 300);\n\t\t\t} else {\n\t\t\t\tupdateFocusMode();\n\t\t\t}\n\t\t}));\n\n\t\tupdateFocusMode();\n\t}\n\n\tprivate onCellEditorHeightChange(editor: CodeEditorWidget, newHeight: number): void {\n\t\tconst viewLayout = editor.getLayoutInfo();\n\t\tthis.viewCell.editorHeight = newHeight;\n\t\teditor.layout(\n\t\t\t{\n\t\t\t\twidth: viewLayout.width,\n\t\t\t\theight: newHeight\n\t\t\t}\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
