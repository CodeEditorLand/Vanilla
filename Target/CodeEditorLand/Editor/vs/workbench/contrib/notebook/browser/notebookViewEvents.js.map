{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/notebookViewEvents.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FontInfo } from '../../../../editor/common/config/fontInfo.js';\nimport { NotebookCellTextModel } from '../common/model/notebookCellTextModel.js';\nimport { NotebookDocumentMetadata } from '../common/notebookCommon.js';\n\nexport interface NotebookLayoutInfo {\n\twidth: number;\n\theight: number;\n\tscrollHeight: number;\n\tfontInfo: FontInfo;\n\tstickyHeight: number;\n}\n\nexport interface CellViewModelStateChangeEvent {\n\treadonly metadataChanged?: boolean;\n\treadonly internalMetadataChanged?: boolean;\n\treadonly selectionChanged?: boolean;\n\treadonly focusModeChanged?: boolean;\n\treadonly editStateChanged?: boolean;\n\treadonly languageChanged?: boolean;\n\treadonly foldingStateChanged?: boolean;\n\treadonly contentChanged?: boolean;\n\treadonly outputIsHoveredChanged?: boolean;\n\treadonly outputIsFocusedChanged?: boolean;\n\treadonly cellIsHoveredChanged?: boolean;\n\treadonly cellLineNumberChanged?: boolean;\n\treadonly inputCollapsedChanged?: boolean;\n\treadonly outputCollapsedChanged?: boolean;\n\treadonly dragStateChanged?: boolean;\n}\n\nexport interface NotebookLayoutChangeEvent {\n\twidth?: boolean;\n\theight?: boolean;\n\tfontInfo?: boolean;\n}\n\nexport enum NotebookViewEventType {\n\tLayoutChanged = 1,\n\tMetadataChanged = 2,\n\tCellStateChanged = 3\n}\n\nexport class NotebookLayoutChangedEvent {\n\tpublic readonly type = NotebookViewEventType.LayoutChanged;\n\n\tconstructor(readonly source: NotebookLayoutChangeEvent, readonly value: NotebookLayoutInfo) {\n\n\t}\n}\n\n\nexport class NotebookMetadataChangedEvent {\n\tpublic readonly type = NotebookViewEventType.MetadataChanged;\n\n\tconstructor(readonly source: NotebookDocumentMetadata) {\n\n\t}\n}\n\nexport class NotebookCellStateChangedEvent {\n\tpublic readonly type = NotebookViewEventType.CellStateChanged;\n\n\tconstructor(readonly source: CellViewModelStateChangeEvent, readonly cell: NotebookCellTextModel) {\n\n\t}\n}\n\nexport type NotebookViewEvent = NotebookLayoutChangedEvent | NotebookMetadataChangedEvent | NotebookCellStateChangedEvent;\n"],
  "mappings": ";;AAKA,SAAS,gBAAgB;AACzB,SAAS,6BAA6B;AACtC,SAAS,gCAAgC;AAkClC,IAAK,wBAAL,kBAAKA,2BAAL;AACN,EAAAA,8CAAA,mBAAgB,KAAhB;AACA,EAAAA,8CAAA,qBAAkB,KAAlB;AACA,EAAAA,8CAAA,sBAAmB,KAAnB;AAHW,SAAAA;AAAA,GAAA;AAML,MAAM,2BAA2B;AAAA,EAGvC,YAAqB,QAA4C,OAA2B;AAAvE;AAA4C;AAAA,EAEjE;AAAA,EApDD,OA+CwC;AAAA;AAAA;AAAA,EACvB,OAAO;AAKxB;AAGO,MAAM,6BAA6B;AAAA,EAGzC,YAAqB,QAAkC;AAAlC;AAAA,EAErB;AAAA,EA7DD,OAwD0C;AAAA;AAAA;AAAA,EACzB,OAAO;AAKxB;AAEO,MAAM,8BAA8B;AAAA,EAG1C,YAAqB,QAAgD,MAA6B;AAA7E;AAAgD;AAAA,EAErE;AAAA,EArED,OAgE2C;AAAA;AAAA;AAAA,EAC1B,OAAO;AAKxB;",
  "names": ["NotebookViewEventType"]
}
