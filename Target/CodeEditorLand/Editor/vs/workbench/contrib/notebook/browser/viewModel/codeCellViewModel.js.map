{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/viewModel/codeCellViewModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tEmitter,\n\ttype Event,\n\tPauseableEmitter,\n} from \"../../../../../base/common/event.js\";\nimport { dispose } from \"../../../../../base/common/lifecycle.js\";\nimport { observableValue } from \"../../../../../base/common/observable.js\";\nimport * as UUID from \"../../../../../base/common/uuid.js\";\nimport { ICodeEditorService } from \"../../../../../editor/browser/services/codeEditorService.js\";\nimport type * as editorCommon from \"../../../../../editor/common/editorCommon.js\";\nimport { PrefixSumComputer } from \"../../../../../editor/common/model/prefixSumComputer.js\";\nimport { ITextModelService } from \"../../../../../editor/common/services/resolverService.js\";\nimport { IConfigurationService } from \"../../../../../platform/configuration/common/configuration.js\";\nimport { IInstantiationService } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport { IUndoRedoService } from \"../../../../../platform/undoRedo/common/undoRedo.js\";\nimport type { NotebookCellTextModel } from \"../../common/model/notebookCellTextModel.js\";\nimport {\n\tCellKind,\n\ttype INotebookFindOptions,\n\ttype NotebookCellOutputsSplice,\n} from \"../../common/notebookCommon.js\";\nimport type {\n\tICellExecutionError,\n\tICellExecutionStateChangedEvent,\n} from \"../../common/notebookExecutionStateService.js\";\nimport { INotebookService } from \"../../common/notebookService.js\";\nimport {\n\tCellEditState,\n\ttype CellFindMatch,\n\tCellLayoutState,\n\ttype CodeCellLayoutChangeEvent,\n\ttype CodeCellLayoutInfo,\n\ttype ICellOutputViewModel,\n\ttype ICellViewModel,\n} from \"../notebookBrowser.js\";\nimport type { NotebookOptionsChangeEvent } from \"../notebookOptions.js\";\nimport type { NotebookLayoutInfo } from \"../notebookViewEvents.js\";\nimport { BaseCellViewModel } from \"./baseCellViewModel.js\";\nimport { CellOutputViewModel } from \"./cellOutputViewModel.js\";\nimport type { ViewContext } from \"./viewContext.js\";\n\nexport const outputDisplayLimit = 500;\n\nexport class CodeCellViewModel\n\textends BaseCellViewModel\n\timplements ICellViewModel\n{\n\treadonly cellKind = CellKind.Code;\n\n\tprotected readonly _onLayoutInfoRead = this._register(new Emitter<void>());\n\treadonly onLayoutInfoRead = this._onLayoutInfoRead.event;\n\n\tprotected readonly _onDidStartExecution = this._register(\n\t\tnew Emitter<ICellExecutionStateChangedEvent>(),\n\t);\n\treadonly onDidStartExecution = this._onDidStartExecution.event;\n\tprotected readonly _onDidStopExecution = this._register(\n\t\tnew Emitter<ICellExecutionStateChangedEvent>(),\n\t);\n\treadonly onDidStopExecution = this._onDidStopExecution.event;\n\n\tprotected readonly _onDidChangeOutputs = this._register(\n\t\tnew Emitter<NotebookCellOutputsSplice>(),\n\t);\n\treadonly onDidChangeOutputs = this._onDidChangeOutputs.event;\n\n\tprivate readonly _onDidRemoveOutputs = this._register(\n\t\tnew Emitter<readonly ICellOutputViewModel[]>(),\n\t);\n\treadonly onDidRemoveOutputs = this._onDidRemoveOutputs.event;\n\n\tprivate _outputCollection: number[] = [];\n\n\tprivate _outputsTop: PrefixSumComputer | null = null;\n\n\tprotected _pauseableEmitter = this._register(\n\t\tnew PauseableEmitter<CodeCellLayoutChangeEvent>(),\n\t);\n\n\treadonly onDidChangeLayout = this._pauseableEmitter.event;\n\n\tprivate _editorHeight = 0;\n\tset editorHeight(height: number) {\n\t\tif (this._editorHeight === height) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._editorHeight = height;\n\t\tthis.layoutChange(\n\t\t\t{ editorHeight: true },\n\t\t\t\"CodeCellViewModel#editorHeight\",\n\t\t);\n\t}\n\n\tget editorHeight() {\n\t\tthrow new Error(\"editorHeight is write-only\");\n\t}\n\n\tprivate _chatHeight = 0;\n\tset chatHeight(height: number) {\n\t\tif (this._chatHeight === height) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._chatHeight = height;\n\t\tthis.layoutChange({ chatHeight: true }, \"CodeCellViewModel#chatHeight\");\n\t}\n\n\tget chatHeight() {\n\t\treturn this._chatHeight;\n\t}\n\n\tprivate _hoveringOutput = false;\n\tpublic get outputIsHovered(): boolean {\n\t\treturn this._hoveringOutput;\n\t}\n\n\tpublic set outputIsHovered(v: boolean) {\n\t\tthis._hoveringOutput = v;\n\t\tthis._onDidChangeState.fire({ outputIsHoveredChanged: true });\n\t}\n\n\tprivate _focusOnOutput = false;\n\tpublic get outputIsFocused(): boolean {\n\t\treturn this._focusOnOutput;\n\t}\n\n\tpublic set outputIsFocused(v: boolean) {\n\t\tthis._focusOnOutput = v;\n\t\tthis._onDidChangeState.fire({ outputIsFocusedChanged: true });\n\t}\n\n\tprivate _focusInputInOutput = false;\n\tpublic get inputInOutputIsFocused(): boolean {\n\t\treturn this._focusInputInOutput;\n\t}\n\n\tpublic set inputInOutputIsFocused(v: boolean) {\n\t\tthis._focusInputInOutput = v;\n\t}\n\n\tprivate _outputMinHeight = 0;\n\n\tprivate get outputMinHeight() {\n\t\treturn this._outputMinHeight;\n\t}\n\n\t/**\n\t * The minimum height of the output region. It's only set to non-zero temporarily when replacing an output with a new one.\n\t * It's reset to 0 when the new output is rendered, or in one second.\n\t */\n\tprivate set outputMinHeight(newMin: number) {\n\t\tthis._outputMinHeight = newMin;\n\t}\n\n\tprivate _layoutInfo: CodeCellLayoutInfo;\n\n\tget layoutInfo() {\n\t\treturn this._layoutInfo;\n\t}\n\n\tprivate _outputViewModels: ICellOutputViewModel[];\n\n\tget outputsViewModels() {\n\t\treturn this._outputViewModels;\n\t}\n\n\treadonly excecutionError = observableValue<ICellExecutionError | undefined>(\n\t\t\"excecutionError\",\n\t\tundefined,\n\t);\n\n\tconstructor(\n\t\tviewType: string,\n\t\tmodel: NotebookCellTextModel,\n\t\tinitialNotebookLayoutInfo: NotebookLayoutInfo | null,\n\t\treadonly viewContext: ViewContext,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t\t@ITextModelService modelService: ITextModelService,\n\t\t@IUndoRedoService undoRedoService: IUndoRedoService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tsuper(viewType, model, UUID.generateUuid(), viewContext, configurationService, modelService, undoRedoService, codeEditorService);\n\t\tthis._outputViewModels = this.model.outputs.map(output => new CellOutputViewModel(this, output, this._notebookService));\n\n\t\tthis._register(this.model.onDidChangeOutputs((splice) => {\n\t\t\tconst removedOutputs: ICellOutputViewModel[] = [];\n\t\t\tlet outputLayoutChange = false;\n\t\t\tfor (let i = splice.start; i < splice.start + splice.deleteCount; i++) {\n\t\t\t\tif (this._outputCollection[i] !== undefined && this._outputCollection[i] !== 0) {\n\t\t\t\t\toutputLayoutChange = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._outputCollection.splice(splice.start, splice.deleteCount, ...splice.newOutputs.map(() => 0));\n\t\t\tremovedOutputs.push(...this._outputViewModels.splice(splice.start, splice.deleteCount, ...splice.newOutputs.map(output => new CellOutputViewModel(this, output, this._notebookService))));\n\n\t\t\tthis._outputsTop = null;\n\t\t\tthis._onDidChangeOutputs.fire(splice);\n\t\t\tthis._onDidRemoveOutputs.fire(removedOutputs);\n\t\t\tif (outputLayoutChange) {\n\t\t\t\tthis.layoutChange({ outputHeight: true }, 'CodeCellViewModel#model.onDidChangeOutputs');\n\t\t\t}\n\t\t\tdispose(removedOutputs);\n\t\t}));\n\n\t\tthis._outputCollection = new Array(this.model.outputs.length);\n\n\t\tthis._layoutInfo = {\n\t\t\tfontInfo: initialNotebookLayoutInfo?.fontInfo || null,\n\t\t\teditorHeight: 0,\n\t\t\teditorWidth: initialNotebookLayoutInfo\n\t\t\t\t? this.viewContext.notebookOptions.computeCodeCellEditorWidth(initialNotebookLayoutInfo.width)\n\t\t\t\t: 0,\n\t\t\tchatHeight: 0,\n\t\t\tstatusBarHeight: 0,\n\t\t\tcommentOffset: 0,\n\t\t\tcommentHeight: 0,\n\t\t\toutputContainerOffset: 0,\n\t\t\toutputTotalHeight: 0,\n\t\t\toutputShowMoreContainerHeight: 0,\n\t\t\toutputShowMoreContainerOffset: 0,\n\t\t\ttotalHeight: this.computeTotalHeight(17, 0, 0, 0),\n\t\t\tcodeIndicatorHeight: 0,\n\t\t\toutputIndicatorHeight: 0,\n\t\t\tbottomToolbarOffset: 0,\n\t\t\tlayoutState: CellLayoutState.Uninitialized,\n\t\t\testimatedHasHorizontalScrolling: false\n\t\t};\n\t}\n\n\tupdateExecutionState(e: ICellExecutionStateChangedEvent) {\n\t\tif (e.changed) {\n\t\t\tthis._onDidStartExecution.fire(e);\n\t\t} else {\n\t\t\tthis._onDidStopExecution.fire(e);\n\t\t}\n\t}\n\n\tupdateOptions(e: NotebookOptionsChangeEvent) {\n\t\tif (\n\t\t\te.cellStatusBarVisibility ||\n\t\t\te.insertToolbarPosition ||\n\t\t\te.cellToolbarLocation\n\t\t) {\n\t\t\tthis.layoutChange({});\n\t\t}\n\t}\n\n\tpauseLayout() {\n\t\tthis._pauseableEmitter.pause();\n\t}\n\n\tresumeLayout() {\n\t\tthis._pauseableEmitter.resume();\n\t}\n\n\tlayoutChange(state: CodeCellLayoutChangeEvent, source?: string) {\n\t\t// recompute\n\t\tthis._ensureOutputsTop();\n\t\tconst notebookLayoutConfiguration =\n\t\t\tthis.viewContext.notebookOptions.getLayoutConfiguration();\n\t\tconst bottomToolbarDimensions =\n\t\t\tthis.viewContext.notebookOptions.computeBottomToolbarDimensions(\n\t\t\t\tthis.viewType,\n\t\t\t);\n\t\tconst outputShowMoreContainerHeight =\n\t\t\tstate.outputShowMoreContainerHeight\n\t\t\t\t? state.outputShowMoreContainerHeight\n\t\t\t\t: this._layoutInfo.outputShowMoreContainerHeight;\n\t\tconst outputTotalHeight = Math.max(\n\t\t\tthis._outputMinHeight,\n\t\t\tthis.isOutputCollapsed\n\t\t\t\t? notebookLayoutConfiguration.collapsedIndicatorHeight\n\t\t\t\t: this._outputsTop!.getTotalSum(),\n\t\t);\n\t\tconst commentHeight = state.commentHeight\n\t\t\t? this._commentHeight\n\t\t\t: this._layoutInfo.commentHeight;\n\n\t\tconst originalLayout = this.layoutInfo;\n\t\tif (this.isInputCollapsed) {\n\t\t\tconst codeIndicatorHeight =\n\t\t\t\tnotebookLayoutConfiguration.collapsedIndicatorHeight;\n\t\t\tconst outputIndicatorHeight =\n\t\t\t\toutputTotalHeight + outputShowMoreContainerHeight;\n\t\t\tconst chatHeight = state.chatHeight\n\t\t\t\t? this._chatHeight\n\t\t\t\t: this._layoutInfo.chatHeight;\n\n\t\t\tconst outputContainerOffset =\n\t\t\t\tnotebookLayoutConfiguration.cellTopMargin +\n\t\t\t\tnotebookLayoutConfiguration.collapsedIndicatorHeight;\n\t\t\tconst totalHeight =\n\t\t\t\tnotebookLayoutConfiguration.cellTopMargin +\n\t\t\t\tnotebookLayoutConfiguration.collapsedIndicatorHeight +\n\t\t\t\tnotebookLayoutConfiguration.cellBottomMargin + //CELL_BOTTOM_MARGIN\n\t\t\t\tbottomToolbarDimensions.bottomToolbarGap + //BOTTOM_CELL_TOOLBAR_GAP\n\t\t\t\tchatHeight +\n\t\t\t\tcommentHeight +\n\t\t\t\toutputTotalHeight +\n\t\t\t\toutputShowMoreContainerHeight;\n\t\t\tconst outputShowMoreContainerOffset =\n\t\t\t\ttotalHeight -\n\t\t\t\tbottomToolbarDimensions.bottomToolbarGap -\n\t\t\t\tbottomToolbarDimensions.bottomToolbarHeight / 2 -\n\t\t\t\toutputShowMoreContainerHeight;\n\t\t\tconst bottomToolbarOffset =\n\t\t\t\tthis.viewContext.notebookOptions.computeBottomToolbarOffset(\n\t\t\t\t\ttotalHeight,\n\t\t\t\t\tthis.viewType,\n\t\t\t\t);\n\t\t\tconst editorWidth =\n\t\t\t\tstate.outerWidth !== undefined\n\t\t\t\t\t? this.viewContext.notebookOptions.computeCodeCellEditorWidth(\n\t\t\t\t\t\t\tstate.outerWidth,\n\t\t\t\t\t\t)\n\t\t\t\t\t: this._layoutInfo?.editorWidth;\n\n\t\t\tthis._layoutInfo = {\n\t\t\t\tfontInfo: state.font ?? this._layoutInfo.fontInfo ?? null,\n\t\t\t\teditorHeight: this._layoutInfo.editorHeight,\n\t\t\t\teditorWidth,\n\t\t\t\tchatHeight: chatHeight,\n\t\t\t\tstatusBarHeight: 0,\n\t\t\t\toutputContainerOffset,\n\t\t\t\toutputTotalHeight,\n\t\t\t\toutputShowMoreContainerHeight,\n\t\t\t\toutputShowMoreContainerOffset,\n\t\t\t\tcommentOffset: outputContainerOffset + outputTotalHeight,\n\t\t\t\tcommentHeight,\n\t\t\t\ttotalHeight,\n\t\t\t\tcodeIndicatorHeight,\n\t\t\t\toutputIndicatorHeight,\n\t\t\t\tbottomToolbarOffset,\n\t\t\t\tlayoutState: this._layoutInfo.layoutState,\n\t\t\t\testimatedHasHorizontalScrolling: false,\n\t\t\t};\n\t\t} else {\n\t\t\tlet newState: CellLayoutState;\n\t\t\tlet editorHeight: number;\n\t\t\tlet totalHeight: number;\n\t\t\tlet hasHorizontalScrolling = false;\n\t\t\tconst chatHeight = state.chatHeight\n\t\t\t\t? this._chatHeight\n\t\t\t\t: this._layoutInfo.chatHeight;\n\t\t\tif (\n\t\t\t\t!state.editorHeight &&\n\t\t\t\tthis._layoutInfo.layoutState === CellLayoutState.FromCache &&\n\t\t\t\t!state.outputHeight\n\t\t\t) {\n\t\t\t\t// No new editorHeight info - keep cached totalHeight and estimate editorHeight\n\t\t\t\tconst estimate = this.estimateEditorHeight(\n\t\t\t\t\tstate.font?.lineHeight ??\n\t\t\t\t\t\tthis._layoutInfo.fontInfo?.lineHeight,\n\t\t\t\t);\n\t\t\t\teditorHeight = estimate.editorHeight;\n\t\t\t\thasHorizontalScrolling = estimate.hasHorizontalScrolling;\n\t\t\t\ttotalHeight = this._layoutInfo.totalHeight;\n\t\t\t\tnewState = CellLayoutState.FromCache;\n\t\t\t} else if (\n\t\t\t\tstate.editorHeight ||\n\t\t\t\tthis._layoutInfo.layoutState === CellLayoutState.Measured\n\t\t\t) {\n\t\t\t\t// Editor has been measured\n\t\t\t\teditorHeight = this._editorHeight;\n\t\t\t\ttotalHeight = this.computeTotalHeight(\n\t\t\t\t\tthis._editorHeight,\n\t\t\t\t\toutputTotalHeight,\n\t\t\t\t\toutputShowMoreContainerHeight,\n\t\t\t\t\tchatHeight,\n\t\t\t\t);\n\t\t\t\tnewState = CellLayoutState.Measured;\n\t\t\t\thasHorizontalScrolling =\n\t\t\t\t\tthis._layoutInfo.estimatedHasHorizontalScrolling;\n\t\t\t} else {\n\t\t\t\tconst estimate = this.estimateEditorHeight(\n\t\t\t\t\tstate.font?.lineHeight ??\n\t\t\t\t\t\tthis._layoutInfo.fontInfo?.lineHeight,\n\t\t\t\t);\n\t\t\t\teditorHeight = estimate.editorHeight;\n\t\t\t\thasHorizontalScrolling = estimate.hasHorizontalScrolling;\n\t\t\t\ttotalHeight = this.computeTotalHeight(\n\t\t\t\t\teditorHeight,\n\t\t\t\t\toutputTotalHeight,\n\t\t\t\t\toutputShowMoreContainerHeight,\n\t\t\t\t\tchatHeight,\n\t\t\t\t);\n\t\t\t\tnewState = CellLayoutState.Estimated;\n\t\t\t}\n\n\t\t\tconst statusBarHeight =\n\t\t\t\tthis.viewContext.notebookOptions.computeEditorStatusbarHeight(\n\t\t\t\t\tthis.internalMetadata,\n\t\t\t\t\tthis.uri,\n\t\t\t\t);\n\t\t\tconst codeIndicatorHeight = editorHeight + statusBarHeight;\n\t\t\tconst outputIndicatorHeight =\n\t\t\t\toutputTotalHeight + outputShowMoreContainerHeight;\n\t\t\tconst outputContainerOffset =\n\t\t\t\tnotebookLayoutConfiguration.editorToolbarHeight +\n\t\t\t\tnotebookLayoutConfiguration.cellTopMargin + // CELL_TOP_MARGIN\n\t\t\t\tchatHeight +\n\t\t\t\teditorHeight +\n\t\t\t\tstatusBarHeight;\n\t\t\tconst outputShowMoreContainerOffset =\n\t\t\t\ttotalHeight -\n\t\t\t\tbottomToolbarDimensions.bottomToolbarGap -\n\t\t\t\tbottomToolbarDimensions.bottomToolbarHeight / 2 -\n\t\t\t\toutputShowMoreContainerHeight;\n\t\t\tconst bottomToolbarOffset =\n\t\t\t\tthis.viewContext.notebookOptions.computeBottomToolbarOffset(\n\t\t\t\t\ttotalHeight,\n\t\t\t\t\tthis.viewType,\n\t\t\t\t);\n\t\t\tconst editorWidth =\n\t\t\t\tstate.outerWidth !== undefined\n\t\t\t\t\t? this.viewContext.notebookOptions.computeCodeCellEditorWidth(\n\t\t\t\t\t\t\tstate.outerWidth,\n\t\t\t\t\t\t)\n\t\t\t\t\t: this._layoutInfo?.editorWidth;\n\n\t\t\tthis._layoutInfo = {\n\t\t\t\tfontInfo: state.font ?? this._layoutInfo.fontInfo ?? null,\n\t\t\t\tchatHeight,\n\t\t\t\teditorHeight,\n\t\t\t\teditorWidth,\n\t\t\t\tstatusBarHeight,\n\t\t\t\toutputContainerOffset,\n\t\t\t\toutputTotalHeight,\n\t\t\t\toutputShowMoreContainerHeight,\n\t\t\t\toutputShowMoreContainerOffset,\n\t\t\t\tcommentOffset: outputContainerOffset + outputTotalHeight,\n\t\t\t\tcommentHeight,\n\t\t\t\ttotalHeight,\n\t\t\t\tcodeIndicatorHeight,\n\t\t\t\toutputIndicatorHeight,\n\t\t\t\tbottomToolbarOffset,\n\t\t\t\tlayoutState: newState,\n\t\t\t\testimatedHasHorizontalScrolling: hasHorizontalScrolling,\n\t\t\t};\n\t\t}\n\n\t\tthis._fireOnDidChangeLayout({\n\t\t\t...state,\n\t\t\ttotalHeight:\n\t\t\t\tthis.layoutInfo.totalHeight !== originalLayout.totalHeight,\n\t\t\tsource,\n\t\t});\n\t}\n\n\tprivate _fireOnDidChangeLayout(state: CodeCellLayoutChangeEvent) {\n\t\tthis._pauseableEmitter.fire(state);\n\t}\n\n\toverride restoreEditorViewState(\n\t\teditorViewStates: editorCommon.ICodeEditorViewState | null,\n\t\ttotalHeight?: number,\n\t) {\n\t\tsuper.restoreEditorViewState(editorViewStates);\n\t\tif (\n\t\t\ttotalHeight !== undefined &&\n\t\t\tthis._layoutInfo.layoutState !== CellLayoutState.Measured\n\t\t) {\n\t\t\tthis._layoutInfo = {\n\t\t\t\t...this._layoutInfo,\n\t\t\t\ttotalHeight: totalHeight,\n\t\t\t\tlayoutState: CellLayoutState.FromCache,\n\t\t\t};\n\t\t}\n\t}\n\n\tgetDynamicHeight() {\n\t\tthis._onLayoutInfoRead.fire();\n\t\treturn this._layoutInfo.totalHeight;\n\t}\n\n\tgetHeight(lineHeight: number) {\n\t\tif (this._layoutInfo.layoutState === CellLayoutState.Uninitialized) {\n\t\t\tconst estimate = this.estimateEditorHeight(lineHeight);\n\t\t\treturn this.computeTotalHeight(estimate.editorHeight, 0, 0, 0);\n\t\t} else {\n\t\t\treturn this._layoutInfo.totalHeight;\n\t\t}\n\t}\n\n\tprivate estimateEditorHeight(lineHeight: number | undefined = 20): {\n\t\teditorHeight: number;\n\t\thasHorizontalScrolling: boolean;\n\t} {\n\t\tlet hasHorizontalScrolling = false;\n\t\tconst cellEditorOptions = this.viewContext.getBaseCellEditorOptions(\n\t\t\tthis.language,\n\t\t);\n\t\tif (\n\t\t\tthis.layoutInfo.fontInfo &&\n\t\t\tcellEditorOptions.value.wordWrap === \"off\"\n\t\t) {\n\t\t\tfor (let i = 0; i < this.lineCount; i++) {\n\t\t\t\tconst max = this.textBuffer.getLineLastNonWhitespaceColumn(\n\t\t\t\t\ti + 1,\n\t\t\t\t);\n\t\t\t\tconst estimatedWidth =\n\t\t\t\t\tmax *\n\t\t\t\t\t(this.layoutInfo.fontInfo.typicalHalfwidthCharacterWidth +\n\t\t\t\t\t\tthis.layoutInfo.fontInfo.letterSpacing);\n\t\t\t\tif (estimatedWidth > this.layoutInfo.editorWidth) {\n\t\t\t\t\thasHorizontalScrolling = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst verticalScrollbarHeight = hasHorizontalScrolling ? 12 : 0; // take zoom level into account\n\t\tconst editorPadding =\n\t\t\tthis.viewContext.notebookOptions.computeEditorPadding(\n\t\t\t\tthis.internalMetadata,\n\t\t\t\tthis.uri,\n\t\t\t);\n\t\tconst editorHeight =\n\t\t\tthis.lineCount * lineHeight +\n\t\t\teditorPadding.top +\n\t\t\teditorPadding.bottom + // EDITOR_BOTTOM_PADDING\n\t\t\tverticalScrollbarHeight;\n\t\treturn {\n\t\t\teditorHeight,\n\t\t\thasHorizontalScrolling,\n\t\t};\n\t}\n\n\tprivate computeTotalHeight(\n\t\teditorHeight: number,\n\t\toutputsTotalHeight: number,\n\t\toutputShowMoreContainerHeight: number,\n\t\tchatHeight: number,\n\t): number {\n\t\tconst layoutConfiguration =\n\t\t\tthis.viewContext.notebookOptions.getLayoutConfiguration();\n\t\tconst { bottomToolbarGap } =\n\t\t\tthis.viewContext.notebookOptions.computeBottomToolbarDimensions(\n\t\t\t\tthis.viewType,\n\t\t\t);\n\t\treturn (\n\t\t\tlayoutConfiguration.editorToolbarHeight +\n\t\t\tlayoutConfiguration.cellTopMargin +\n\t\t\tchatHeight +\n\t\t\teditorHeight +\n\t\t\tthis.viewContext.notebookOptions.computeEditorStatusbarHeight(\n\t\t\t\tthis.internalMetadata,\n\t\t\t\tthis.uri,\n\t\t\t) +\n\t\t\tthis._commentHeight +\n\t\t\toutputsTotalHeight +\n\t\t\toutputShowMoreContainerHeight +\n\t\t\tbottomToolbarGap +\n\t\t\tlayoutConfiguration.cellBottomMargin\n\t\t);\n\t}\n\n\tprotected onDidChangeTextModelContent(): void {\n\t\tif (this.getEditState() !== CellEditState.Editing) {\n\t\t\tthis.updateEditState(\n\t\t\t\tCellEditState.Editing,\n\t\t\t\t\"onDidChangeTextModelContent\",\n\t\t\t);\n\t\t\tthis._onDidChangeState.fire({ contentChanged: true });\n\t\t}\n\t}\n\n\tonDeselect() {\n\t\tthis.updateEditState(CellEditState.Preview, \"onDeselect\");\n\t}\n\n\tupdateOutputShowMoreContainerHeight(height: number) {\n\t\tthis.layoutChange(\n\t\t\t{ outputShowMoreContainerHeight: height },\n\t\t\t\"CodeCellViewModel#updateOutputShowMoreContainerHeight\",\n\t\t);\n\t}\n\n\tupdateOutputMinHeight(height: number) {\n\t\tthis.outputMinHeight = height;\n\t}\n\n\tunlockOutputHeight() {\n\t\tthis.outputMinHeight = 0;\n\t\tthis.layoutChange({ outputHeight: true });\n\t}\n\n\tupdateOutputHeight(index: number, height: number, source?: string) {\n\t\tif (index >= this._outputCollection.length) {\n\t\t\tthrow new Error(\"Output index out of range!\");\n\t\t}\n\n\t\tthis._ensureOutputsTop();\n\n\t\tif (index === 0 || height > 0) {\n\t\t\tthis._outputViewModels[index].setVisible(true);\n\t\t} else if (height === 0) {\n\t\t\tthis._outputViewModels[index].setVisible(false);\n\t\t}\n\n\t\tif (this._outputViewModels[index].visible.get() && height < 28) {\n\t\t\theight = 28;\n\t\t}\n\n\t\tthis._outputCollection[index] = height;\n\t\tif (this._outputsTop!.setValue(index, height)) {\n\t\t\tthis.layoutChange({ outputHeight: true }, source);\n\t\t}\n\t}\n\n\tgetOutputOffsetInContainer(index: number) {\n\t\tthis._ensureOutputsTop();\n\n\t\tif (index >= this._outputCollection.length) {\n\t\t\tthrow new Error(\"Output index out of range!\");\n\t\t}\n\n\t\treturn this._outputsTop!.getPrefixSum(index - 1);\n\t}\n\n\tgetOutputOffset(index: number): number {\n\t\treturn (\n\t\t\tthis.layoutInfo.outputContainerOffset +\n\t\t\tthis.getOutputOffsetInContainer(index)\n\t\t);\n\t}\n\n\tspliceOutputHeights(start: number, deleteCnt: number, heights: number[]) {\n\t\tthis._ensureOutputsTop();\n\n\t\tthis._outputsTop!.removeValues(start, deleteCnt);\n\t\tif (heights.length) {\n\t\t\tconst values = new Uint32Array(heights.length);\n\t\t\tfor (let i = 0; i < heights.length; i++) {\n\t\t\t\tvalues[i] = heights[i];\n\t\t\t}\n\n\t\t\tthis._outputsTop!.insertValues(start, values);\n\t\t}\n\n\t\tthis.layoutChange(\n\t\t\t{ outputHeight: true },\n\t\t\t\"CodeCellViewModel#spliceOutputs\",\n\t\t);\n\t}\n\n\tprivate _ensureOutputsTop(): void {\n\t\tif (!this._outputsTop) {\n\t\t\tconst values = new Uint32Array(this._outputCollection.length);\n\t\t\tfor (let i = 0; i < this._outputCollection.length; i++) {\n\t\t\t\tvalues[i] = this._outputCollection[i];\n\t\t\t}\n\n\t\t\tthis._outputsTop = new PrefixSumComputer(values);\n\t\t}\n\t}\n\n\tprivate readonly _hasFindResult = this._register(new Emitter<boolean>());\n\tpublic readonly hasFindResult: Event<boolean> = this._hasFindResult.event;\n\n\tstartFind(\n\t\tvalue: string,\n\t\toptions: INotebookFindOptions,\n\t): CellFindMatch | null {\n\t\tconst matches = super.cellStartFind(value, options);\n\n\t\tif (matches === null) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tcell: this,\n\t\t\tcontentMatches: matches,\n\t\t};\n\t}\n\n\toverride dispose() {\n\t\tsuper.dispose();\n\n\t\tthis._outputCollection = [];\n\t\tthis._outputsTop = null;\n\t\tdispose(this._outputViewModels);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
