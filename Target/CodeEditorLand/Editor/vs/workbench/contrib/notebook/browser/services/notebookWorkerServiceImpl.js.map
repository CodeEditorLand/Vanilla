{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/services/notebookWorkerServiceImpl.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, DisposableStore, dispose, IDisposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { IWorkerClient, Proxied } from '../../../../../base/common/worker/simpleWorker.js';\nimport { createWebWorker } from '../../../../../base/browser/defaultWorkerFactory.js';\nimport { NotebookCellTextModel } from '../../common/model/notebookCellTextModel.js';\nimport { CellUri, IMainCellDto, INotebookDiffResult, NotebookCellsChangeType, NotebookRawContentEventDto } from '../../common/notebookCommon.js';\nimport { INotebookService } from '../../common/notebookService.js';\nimport { NotebookEditorSimpleWorker } from '../../common/services/notebookSimpleWorker.js';\nimport { INotebookEditorWorkerService } from '../../common/services/notebookWorkerService.js';\nimport { IModelService } from '../../../../../editor/common/services/model.js';\nimport { ITextModel } from '../../../../../editor/common/model.js';\nimport { TextModel } from '../../../../../editor/common/model/textModel.js';\nimport { Schemas } from '../../../../../base/common/network.js';\nimport { isEqual } from '../../../../../base/common/resources.js';\n\nexport class NotebookEditorWorkerServiceImpl extends Disposable implements INotebookEditorWorkerService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _workerManager: WorkerManager;\n\n\tconstructor(\n\t\t@INotebookService notebookService: INotebookService,\n\t\t@IModelService modelService: IModelService,\n\t) {\n\t\tsuper();\n\n\t\tthis._workerManager = this._register(new WorkerManager(notebookService, modelService));\n\t}\n\tcanComputeDiff(original: URI, modified: URI): boolean {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tcomputeDiff(original: URI, modified: URI): Promise<INotebookDiffResult> {\n\t\treturn this._workerManager.withWorker().then(client => {\n\t\t\treturn client.computeDiff(original, modified);\n\t\t});\n\t}\n\n\tcanPromptRecommendation(model: URI): Promise<boolean> {\n\t\treturn this._workerManager.withWorker().then(client => {\n\t\t\treturn client.canPromptRecommendation(model);\n\t\t});\n\t}\n}\n\nclass WorkerManager extends Disposable {\n\tprivate _editorWorkerClient: NotebookWorkerClient | null;\n\t// private _lastWorkerUsedTime: number;\n\n\tconstructor(\n\t\tprivate readonly _notebookService: INotebookService,\n\t\tprivate readonly _modelService: IModelService,\n\t) {\n\t\tsuper();\n\t\tthis._editorWorkerClient = null;\n\t\t// this._lastWorkerUsedTime = (new Date()).getTime();\n\t}\n\n\twithWorker(): Promise<NotebookWorkerClient> {\n\t\t// this._lastWorkerUsedTime = (new Date()).getTime();\n\t\tif (!this._editorWorkerClient) {\n\t\t\tthis._editorWorkerClient = new NotebookWorkerClient(this._notebookService, this._modelService);\n\t\t}\n\t\treturn Promise.resolve(this._editorWorkerClient);\n\t}\n}\n\nclass NotebookEditorModelManager extends Disposable {\n\tprivate _syncedModels: { [modelUrl: string]: IDisposable } = Object.create(null);\n\tprivate _syncedModelsLastUsedTime: { [modelUrl: string]: number } = Object.create(null);\n\n\tconstructor(\n\t\tprivate readonly _proxy: Proxied<NotebookEditorSimpleWorker>,\n\t\tprivate readonly _notebookService: INotebookService,\n\t\tprivate readonly _modelService: IModelService,\n\t) {\n\t\tsuper();\n\t}\n\n\tpublic ensureSyncedResources(resources: URI[]): void {\n\t\tfor (const resource of resources) {\n\t\t\tconst resourceStr = resource.toString();\n\n\t\t\tif (!this._syncedModels[resourceStr]) {\n\t\t\t\tthis._beginModelSync(resource);\n\t\t\t}\n\t\t\tif (this._syncedModels[resourceStr]) {\n\t\t\t\tthis._syncedModelsLastUsedTime[resourceStr] = (new Date()).getTime();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _beginModelSync(resource: URI): void {\n\t\tconst model = this._notebookService.listNotebookDocuments().find(document => document.uri.toString() === resource.toString());\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst modelUrl = resource.toString();\n\n\t\tthis._proxy.$acceptNewModel(\n\t\t\tmodel.uri.toString(),\n\t\t\tmodel.metadata,\n\t\t\tmodel.cells.map(cell => ({\n\t\t\t\thandle: cell.handle,\n\t\t\t\turl: cell.uri.toString(),\n\t\t\t\tsource: cell.textBuffer.getLinesContent(),\n\t\t\t\teol: cell.textBuffer.getEOL(),\n\t\t\t\tversionId: cell.textModel?.getVersionId() ?? 0,\n\t\t\t\tlanguage: cell.language,\n\t\t\t\tmime: cell.mime,\n\t\t\t\tcellKind: cell.cellKind,\n\t\t\t\toutputs: cell.outputs.map(op => ({ outputId: op.outputId, outputs: op.outputs })),\n\t\t\t\tmetadata: cell.metadata,\n\t\t\t\tinternalMetadata: cell.internalMetadata,\n\t\t\t}))\n\t\t);\n\n\t\tconst toDispose = new DisposableStore();\n\n\t\tconst cellToDto = (cell: NotebookCellTextModel): IMainCellDto => {\n\t\t\treturn {\n\t\t\t\thandle: cell.handle,\n\t\t\t\turl: cell.uri.toString(),\n\t\t\t\tsource: cell.textBuffer.getLinesContent(),\n\t\t\t\teol: cell.textBuffer.getEOL(),\n\t\t\t\tversionId: 0,\n\t\t\t\tlanguage: cell.language,\n\t\t\t\tcellKind: cell.cellKind,\n\t\t\t\toutputs: cell.outputs.map(op => ({ outputId: op.outputId, outputs: op.outputs })),\n\t\t\t\tmetadata: cell.metadata,\n\t\t\t\tinternalMetadata: cell.internalMetadata,\n\t\t\t};\n\t\t};\n\n\t\tconst cellHandlers = new Set<NotebookCellTextModel>();\n\t\tconst addCellContentChangeHandler = (cell: NotebookCellTextModel) => {\n\t\t\tif (!cellHandlers.has(cell) && cell.textModel) {\n\t\t\t\tcellHandlers.add(cell);\n\t\t\t\ttoDispose.add(cell.textModel.onDidChangeContent((e) => this._proxy.$acceptCellModelChanged(modelUrl, cell.handle, e)));\n\t\t\t}\n\t\t};\n\n\t\tmodel.cells.forEach(cell => addCellContentChangeHandler(cell));\n\t\t// Possible some of the models have not yet been loaded.\n\t\t// If all have been loaded, for all cells, then no need to listen to model add events.\n\t\tif (model.cells.length !== cellHandlers.size) {\n\t\t\ttoDispose.add(this._modelService.onModelAdded((textModel: ITextModel) => {\n\t\t\t\tif (textModel.uri.scheme !== Schemas.vscodeNotebookCell || !(textModel instanceof TextModel)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst cellUri = CellUri.parse(textModel.uri);\n\t\t\t\tif (!cellUri || !isEqual(cellUri.notebook, model.uri)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst cell = model.cells.find(cell => cell.handle === cellUri.handle);\n\t\t\t\tif (cell) {\n\t\t\t\t\taddCellContentChangeHandler(cell);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\ttoDispose.add(model.onDidChangeContent((event) => {\n\t\t\tconst dto: NotebookRawContentEventDto[] = [];\n\t\t\tevent.rawEvents\n\t\t\t\t.forEach(e => {\n\t\t\t\t\tswitch (e.kind) {\n\t\t\t\t\t\tcase NotebookCellsChangeType.ModelChange:\n\t\t\t\t\t\tcase NotebookCellsChangeType.Initialize: {\n\t\t\t\t\t\t\tdto.push({\n\t\t\t\t\t\t\t\tkind: e.kind,\n\t\t\t\t\t\t\t\tchanges: e.changes.map(diff => [diff[0], diff[1], diff[2].map(cell => cellToDto(cell as NotebookCellTextModel))] as [number, number, IMainCellDto[]])\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase NotebookCellsChangeType.Move: {\n\t\t\t\t\t\t\tdto.push({\n\t\t\t\t\t\t\t\tkind: NotebookCellsChangeType.Move,\n\t\t\t\t\t\t\t\tindex: e.index,\n\t\t\t\t\t\t\t\tlength: e.length,\n\t\t\t\t\t\t\t\tnewIdx: e.newIdx,\n\t\t\t\t\t\t\t\tcells: e.cells.map(cell => cellToDto(cell as NotebookCellTextModel))\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase NotebookCellsChangeType.ChangeCellContent:\n\t\t\t\t\t\t\t// Changes to cell content are handled by the cell model change listener.\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tdto.push(e);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tthis._proxy.$acceptModelChanged(modelUrl.toString(), {\n\t\t\t\trawEvents: dto,\n\t\t\t\tversionId: event.versionId\n\t\t\t});\n\t\t}));\n\n\t\ttoDispose.add(model.onWillDispose(() => {\n\t\t\tthis._stopModelSync(modelUrl);\n\t\t}));\n\t\ttoDispose.add(toDisposable(() => {\n\t\t\tthis._proxy.$acceptRemovedModel(modelUrl);\n\t\t}));\n\n\t\tthis._syncedModels[modelUrl] = toDispose;\n\t}\n\n\tprivate _stopModelSync(modelUrl: string): void {\n\t\tconst toDispose = this._syncedModels[modelUrl];\n\t\tdelete this._syncedModels[modelUrl];\n\t\tdelete this._syncedModelsLastUsedTime[modelUrl];\n\t\tdispose(toDispose);\n\t}\n}\n\nclass NotebookWorkerClient extends Disposable {\n\tprivate _worker: IWorkerClient<NotebookEditorSimpleWorker> | null;\n\tprivate _modelManager: NotebookEditorModelManager | null;\n\n\n\tconstructor(private readonly _notebookService: INotebookService, private readonly _modelService: IModelService) {\n\t\tsuper();\n\t\tthis._worker = null;\n\t\tthis._modelManager = null;\n\n\t}\n\n\tcomputeDiff(original: URI, modified: URI) {\n\t\tconst proxy = this._ensureSyncedResources([original, modified]);\n\t\treturn proxy.$computeDiff(original.toString(), modified.toString());\n\t}\n\n\tcanPromptRecommendation(modelUri: URI) {\n\t\tconst proxy = this._ensureSyncedResources([modelUri]);\n\t\treturn proxy.$canPromptRecommendation(modelUri.toString());\n\t}\n\n\tprivate _getOrCreateModelManager(proxy: Proxied<NotebookEditorSimpleWorker>): NotebookEditorModelManager {\n\t\tif (!this._modelManager) {\n\t\t\tthis._modelManager = this._register(new NotebookEditorModelManager(proxy, this._notebookService, this._modelService));\n\t\t}\n\t\treturn this._modelManager;\n\t}\n\n\tprotected _ensureSyncedResources(resources: URI[]): Proxied<NotebookEditorSimpleWorker> {\n\t\tconst proxy = this._getOrCreateWorker().proxy;\n\t\tthis._getOrCreateModelManager(proxy).ensureSyncedResources(resources);\n\t\treturn proxy;\n\t}\n\n\tprivate _getOrCreateWorker(): IWorkerClient<NotebookEditorSimpleWorker> {\n\t\tif (!this._worker) {\n\t\t\ttry {\n\t\t\t\tthis._worker = this._register(createWebWorker<NotebookEditorSimpleWorker>(\n\t\t\t\t\t'vs/workbench/contrib/notebook/common/services/notebookSimpleWorker',\n\t\t\t\t\t'NotebookEditorWorker'\n\t\t\t\t));\n\t\t\t} catch (err) {\n\t\t\t\t// logOnceWebWorkerWarning(err);\n\t\t\t\t// this._worker = new SynchronousWorkerClient(new EditorSimpleWorker(new EditorWorkerHost(this), null));\n\t\t\t\tthrow (err);\n\t\t\t}\n\t\t}\n\t\treturn this._worker;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["cell"]
}
