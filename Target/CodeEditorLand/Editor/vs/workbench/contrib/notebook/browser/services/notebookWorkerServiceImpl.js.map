{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/services/notebookWorkerServiceImpl.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createWebWorker } from \"../../../../../base/browser/defaultWorkerFactory.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\tdispose,\n\ttoDisposable,\n} from \"../../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../../base/common/network.js\";\nimport { isEqual } from \"../../../../../base/common/resources.js\";\nimport type { URI } from \"../../../../../base/common/uri.js\";\nimport type {\n\tIWorkerClient,\n\tProxied,\n} from \"../../../../../base/common/worker/simpleWorker.js\";\nimport type { ITextModel } from \"../../../../../editor/common/model.js\";\nimport { TextModel } from \"../../../../../editor/common/model/textModel.js\";\nimport { IModelService } from \"../../../../../editor/common/services/model.js\";\nimport type { NotebookCellTextModel } from \"../../common/model/notebookCellTextModel.js\";\nimport {\n\tCellUri,\n\ttype IMainCellDto,\n\ttype INotebookDiffResult,\n\tNotebookCellsChangeType,\n\ttype NotebookRawContentEventDto,\n} from \"../../common/notebookCommon.js\";\nimport { INotebookService } from \"../../common/notebookService.js\";\nimport type { NotebookEditorSimpleWorker } from \"../../common/services/notebookSimpleWorker.js\";\nimport type { INotebookEditorWorkerService } from \"../../common/services/notebookWorkerService.js\";\n\nexport class NotebookEditorWorkerServiceImpl\n\textends Disposable\n\timplements INotebookEditorWorkerService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _workerManager: WorkerManager;\n\n\tconstructor(\n\t\t@INotebookService notebookService: INotebookService,\n\t\t@IModelService modelService: IModelService,\n\t) {\n\t\tsuper();\n\n\t\tthis._workerManager = this._register(\n\t\t\tnew WorkerManager(notebookService, modelService),\n\t\t);\n\t}\n\tcanComputeDiff(original: URI, modified: URI): boolean {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\tcomputeDiff(original: URI, modified: URI): Promise<INotebookDiffResult> {\n\t\treturn this._workerManager.withWorker().then((client) => {\n\t\t\treturn client.computeDiff(original, modified);\n\t\t});\n\t}\n\n\tcanPromptRecommendation(model: URI): Promise<boolean> {\n\t\treturn this._workerManager.withWorker().then((client) => {\n\t\t\treturn client.canPromptRecommendation(model);\n\t\t});\n\t}\n}\n\nclass WorkerManager extends Disposable {\n\tprivate _editorWorkerClient: NotebookWorkerClient | null;\n\t// private _lastWorkerUsedTime: number;\n\n\tconstructor(\n\t\tprivate readonly _notebookService: INotebookService,\n\t\tprivate readonly _modelService: IModelService,\n\t) {\n\t\tsuper();\n\t\tthis._editorWorkerClient = null;\n\t\t// this._lastWorkerUsedTime = (new Date()).getTime();\n\t}\n\n\twithWorker(): Promise<NotebookWorkerClient> {\n\t\t// this._lastWorkerUsedTime = (new Date()).getTime();\n\t\tif (!this._editorWorkerClient) {\n\t\t\tthis._editorWorkerClient = new NotebookWorkerClient(\n\t\t\t\tthis._notebookService,\n\t\t\t\tthis._modelService,\n\t\t\t);\n\t\t}\n\t\treturn Promise.resolve(this._editorWorkerClient);\n\t}\n}\n\nclass NotebookEditorModelManager extends Disposable {\n\tprivate _syncedModels: { [modelUrl: string]: IDisposable } =\n\t\tObject.create(null);\n\tprivate _syncedModelsLastUsedTime: { [modelUrl: string]: number } =\n\t\tObject.create(null);\n\n\tconstructor(\n\t\tprivate readonly _proxy: Proxied<NotebookEditorSimpleWorker>,\n\t\tprivate readonly _notebookService: INotebookService,\n\t\tprivate readonly _modelService: IModelService,\n\t) {\n\t\tsuper();\n\t}\n\n\tpublic ensureSyncedResources(resources: URI[]): void {\n\t\tfor (const resource of resources) {\n\t\t\tconst resourceStr = resource.toString();\n\n\t\t\tif (!this._syncedModels[resourceStr]) {\n\t\t\t\tthis._beginModelSync(resource);\n\t\t\t}\n\t\t\tif (this._syncedModels[resourceStr]) {\n\t\t\t\tthis._syncedModelsLastUsedTime[resourceStr] =\n\t\t\t\t\tnew Date().getTime();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _beginModelSync(resource: URI): void {\n\t\tconst model = this._notebookService\n\t\t\t.listNotebookDocuments()\n\t\t\t.find(\n\t\t\t\t(document) => document.uri.toString() === resource.toString(),\n\t\t\t);\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst modelUrl = resource.toString();\n\n\t\tthis._proxy.$acceptNewModel(\n\t\t\tmodel.uri.toString(),\n\t\t\tmodel.metadata,\n\t\t\tmodel.cells.map((cell) => ({\n\t\t\t\thandle: cell.handle,\n\t\t\t\turl: cell.uri.toString(),\n\t\t\t\tsource: cell.textBuffer.getLinesContent(),\n\t\t\t\teol: cell.textBuffer.getEOL(),\n\t\t\t\tversionId: cell.textModel?.getVersionId() ?? 0,\n\t\t\t\tlanguage: cell.language,\n\t\t\t\tmime: cell.mime,\n\t\t\t\tcellKind: cell.cellKind,\n\t\t\t\toutputs: cell.outputs.map((op) => ({\n\t\t\t\t\toutputId: op.outputId,\n\t\t\t\t\toutputs: op.outputs,\n\t\t\t\t})),\n\t\t\t\tmetadata: cell.metadata,\n\t\t\t\tinternalMetadata: cell.internalMetadata,\n\t\t\t})),\n\t\t);\n\n\t\tconst toDispose = new DisposableStore();\n\n\t\tconst cellToDto = (cell: NotebookCellTextModel): IMainCellDto => {\n\t\t\treturn {\n\t\t\t\thandle: cell.handle,\n\t\t\t\turl: cell.uri.toString(),\n\t\t\t\tsource: cell.textBuffer.getLinesContent(),\n\t\t\t\teol: cell.textBuffer.getEOL(),\n\t\t\t\tversionId: 0,\n\t\t\t\tlanguage: cell.language,\n\t\t\t\tcellKind: cell.cellKind,\n\t\t\t\toutputs: cell.outputs.map((op) => ({\n\t\t\t\t\toutputId: op.outputId,\n\t\t\t\t\toutputs: op.outputs,\n\t\t\t\t})),\n\t\t\t\tmetadata: cell.metadata,\n\t\t\t\tinternalMetadata: cell.internalMetadata,\n\t\t\t};\n\t\t};\n\n\t\tconst cellHandlers = new Set<NotebookCellTextModel>();\n\t\tconst addCellContentChangeHandler = (cell: NotebookCellTextModel) => {\n\t\t\tif (!cellHandlers.has(cell) && cell.textModel) {\n\t\t\t\tcellHandlers.add(cell);\n\t\t\t\ttoDispose.add(\n\t\t\t\t\tcell.textModel.onDidChangeContent((e) =>\n\t\t\t\t\t\tthis._proxy.$acceptCellModelChanged(\n\t\t\t\t\t\t\tmodelUrl,\n\t\t\t\t\t\t\tcell.handle,\n\t\t\t\t\t\t\te,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\tmodel.cells.forEach((cell) => addCellContentChangeHandler(cell));\n\t\t// Possible some of the models have not yet been loaded.\n\t\t// If all have been loaded, for all cells, then no need to listen to model add events.\n\t\tif (model.cells.length !== cellHandlers.size) {\n\t\t\ttoDispose.add(\n\t\t\t\tthis._modelService.onModelAdded((textModel: ITextModel) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\ttextModel.uri.scheme !== Schemas.vscodeNotebookCell ||\n\t\t\t\t\t\t!(textModel instanceof TextModel)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst cellUri = CellUri.parse(textModel.uri);\n\t\t\t\t\tif (!cellUri || !isEqual(cellUri.notebook, model.uri)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst cell = model.cells.find(\n\t\t\t\t\t\t(cell) => cell.handle === cellUri.handle,\n\t\t\t\t\t);\n\t\t\t\t\tif (cell) {\n\t\t\t\t\t\taddCellContentChangeHandler(cell);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\ttoDispose.add(\n\t\t\tmodel.onDidChangeContent((event) => {\n\t\t\t\tconst dto: NotebookRawContentEventDto[] = [];\n\t\t\t\tevent.rawEvents.forEach((e) => {\n\t\t\t\t\tswitch (e.kind) {\n\t\t\t\t\t\tcase NotebookCellsChangeType.ModelChange:\n\t\t\t\t\t\tcase NotebookCellsChangeType.Initialize: {\n\t\t\t\t\t\t\tdto.push({\n\t\t\t\t\t\t\t\tkind: e.kind,\n\t\t\t\t\t\t\t\tchanges: e.changes.map(\n\t\t\t\t\t\t\t\t\t(diff) =>\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tdiff[0],\n\t\t\t\t\t\t\t\t\t\t\tdiff[1],\n\t\t\t\t\t\t\t\t\t\t\tdiff[2].map((cell) =>\n\t\t\t\t\t\t\t\t\t\t\t\tcellToDto(\n\t\t\t\t\t\t\t\t\t\t\t\t\tcell as NotebookCellTextModel,\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t] as [number, number, IMainCellDto[]],\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase NotebookCellsChangeType.Move: {\n\t\t\t\t\t\t\tdto.push({\n\t\t\t\t\t\t\t\tkind: NotebookCellsChangeType.Move,\n\t\t\t\t\t\t\t\tindex: e.index,\n\t\t\t\t\t\t\t\tlength: e.length,\n\t\t\t\t\t\t\t\tnewIdx: e.newIdx,\n\t\t\t\t\t\t\t\tcells: e.cells.map((cell) =>\n\t\t\t\t\t\t\t\t\tcellToDto(cell as NotebookCellTextModel),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase NotebookCellsChangeType.ChangeCellContent:\n\t\t\t\t\t\t\t// Changes to cell content are handled by the cell model change listener.\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tdto.push(e);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tthis._proxy.$acceptModelChanged(modelUrl.toString(), {\n\t\t\t\t\trawEvents: dto,\n\t\t\t\t\tversionId: event.versionId,\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\n\t\ttoDispose.add(\n\t\t\tmodel.onWillDispose(() => {\n\t\t\t\tthis._stopModelSync(modelUrl);\n\t\t\t}),\n\t\t);\n\t\ttoDispose.add(\n\t\t\ttoDisposable(() => {\n\t\t\t\tthis._proxy.$acceptRemovedModel(modelUrl);\n\t\t\t}),\n\t\t);\n\n\t\tthis._syncedModels[modelUrl] = toDispose;\n\t}\n\n\tprivate _stopModelSync(modelUrl: string): void {\n\t\tconst toDispose = this._syncedModels[modelUrl];\n\t\tdelete this._syncedModels[modelUrl];\n\t\tdelete this._syncedModelsLastUsedTime[modelUrl];\n\t\tdispose(toDispose);\n\t}\n}\n\nclass NotebookWorkerClient extends Disposable {\n\tprivate _worker: IWorkerClient<NotebookEditorSimpleWorker> | null;\n\tprivate _modelManager: NotebookEditorModelManager | null;\n\n\tconstructor(\n\t\tprivate readonly _notebookService: INotebookService,\n\t\tprivate readonly _modelService: IModelService,\n\t) {\n\t\tsuper();\n\t\tthis._worker = null;\n\t\tthis._modelManager = null;\n\t}\n\n\tcomputeDiff(original: URI, modified: URI) {\n\t\tconst proxy = this._ensureSyncedResources([original, modified]);\n\t\treturn proxy.$computeDiff(original.toString(), modified.toString());\n\t}\n\n\tcanPromptRecommendation(modelUri: URI) {\n\t\tconst proxy = this._ensureSyncedResources([modelUri]);\n\t\treturn proxy.$canPromptRecommendation(modelUri.toString());\n\t}\n\n\tprivate _getOrCreateModelManager(\n\t\tproxy: Proxied<NotebookEditorSimpleWorker>,\n\t): NotebookEditorModelManager {\n\t\tif (!this._modelManager) {\n\t\t\tthis._modelManager = this._register(\n\t\t\t\tnew NotebookEditorModelManager(\n\t\t\t\t\tproxy,\n\t\t\t\t\tthis._notebookService,\n\t\t\t\t\tthis._modelService,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\treturn this._modelManager;\n\t}\n\n\tprotected _ensureSyncedResources(\n\t\tresources: URI[],\n\t): Proxied<NotebookEditorSimpleWorker> {\n\t\tconst proxy = this._getOrCreateWorker().proxy;\n\t\tthis._getOrCreateModelManager(proxy).ensureSyncedResources(resources);\n\t\treturn proxy;\n\t}\n\n\tprivate _getOrCreateWorker(): IWorkerClient<NotebookEditorSimpleWorker> {\n\t\tif (!this._worker) {\n\t\t\ttry {\n\t\t\t\tthis._worker = this._register(\n\t\t\t\t\tcreateWebWorker<NotebookEditorSimpleWorker>(\n\t\t\t\t\t\t\"vs/workbench/contrib/notebook/common/services/notebookSimpleWorker\",\n\t\t\t\t\t\t\"NotebookEditorWorker\",\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t} catch (err) {\n\t\t\t\t// logOnceWebWorkerWarning(err);\n\t\t\t\t// this._worker = new SynchronousWorkerClient(new EditorSimpleWorker(new EditorWorkerHost(this), null));\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t\treturn this._worker;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["cell"]
}
