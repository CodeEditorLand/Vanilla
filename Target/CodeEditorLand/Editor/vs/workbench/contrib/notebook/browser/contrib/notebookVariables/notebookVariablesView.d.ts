import { ILocalizedString } from "vs/platform/action/common/action";
import { IMenuService } from "vs/platform/actions/common/actions";
import { ICommandService } from "vs/platform/commands/common/commands";
import { IConfigurationService } from "vs/platform/configuration/common/configuration";
import { IContextKeyService } from "vs/platform/contextkey/common/contextkey";
import { IContextMenuService } from "vs/platform/contextview/browser/contextView";
import { IHoverService } from "vs/platform/hover/browser/hover";
import { IInstantiationService } from "vs/platform/instantiation/common/instantiation";
import { IKeybindingService } from "vs/platform/keybinding/common/keybinding";
import { IOpenerService } from "vs/platform/opener/common/opener";
import { IQuickInputService } from "vs/platform/quickinput/common/quickInput";
import { ITelemetryService } from "vs/platform/telemetry/common/telemetry";
import { IThemeService } from "vs/platform/theme/common/themeService";
import { IViewPaneOptions, ViewPane } from "vs/workbench/browser/parts/views/viewPane";
import { IViewDescriptorService } from "vs/workbench/common/views";
import { INotebookExecutionStateService } from "vs/workbench/contrib/notebook/common/notebookExecutionStateService";
import { INotebookKernelService } from "vs/workbench/contrib/notebook/common/notebookKernelService";
import { IEditorService } from "vs/workbench/services/editor/common/editorService";
export type contextMenuArg = {
    source: string;
    name: string;
    type?: string;
    value?: string;
    expression?: string;
    language?: string;
    extensionId?: string;
};
export declare class NotebookVariablesView extends ViewPane {
    private readonly editorService;
    private readonly notebookKernelService;
    private readonly notebookExecutionStateService;
    protected quickInputService: IQuickInputService;
    protected commandService: ICommandService;
    private readonly menuService;
    static readonly ID = "notebookVariablesView";
    static readonly TITLE: ILocalizedString;
    private tree;
    private activeNotebook;
    private readonly dataSource;
    private updateScheduler;
    constructor(options: IViewPaneOptions, editorService: IEditorService, notebookKernelService: INotebookKernelService, notebookExecutionStateService: INotebookExecutionStateService, keybindingService: IKeybindingService, contextMenuService: IContextMenuService, contextKeyService: IContextKeyService, configurationService: IConfigurationService, instantiationService: IInstantiationService, viewDescriptorService: IViewDescriptorService, openerService: IOpenerService, quickInputService: IQuickInputService, commandService: ICommandService, themeService: IThemeService, telemetryService: ITelemetryService, hoverService: IHoverService, menuService: IMenuService);
    protected renderBody(container: HTMLElement): void;
    private onContextMenu;
    protected layoutBody(height: number, width: number): void;
    private setActiveNotebook;
    private handleActiveEditorChange;
    private handleExecutionStateChange;
    private handleVariablesChanged;
}
