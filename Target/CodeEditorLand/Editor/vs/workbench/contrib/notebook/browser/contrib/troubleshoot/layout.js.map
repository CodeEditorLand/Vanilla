{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/troubleshoot/layout.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\tdispose,\n} from \"../../../../../../base/common/lifecycle.js\";\nimport { localize2 } from \"../../../../../../nls.js\";\nimport { Categories } from \"../../../../../../platform/action/common/actionCommonCategories.js\";\nimport {\n\tAction2,\n\tregisterAction2,\n} from \"../../../../../../platform/actions/common/actions.js\";\nimport type { ServicesAccessor } from \"../../../../../../platform/instantiation/common/instantiation.js\";\nimport { IEditorService } from \"../../../../../services/editor/common/editorService.js\";\nimport {\n\tCellStatusbarAlignment,\n\ttype INotebookCellStatusBarItem,\n} from \"../../../common/notebookCommon.js\";\nimport { INotebookService } from \"../../../common/notebookService.js\";\nimport {\n\ttype ICellViewModel,\n\ttype ICommonCellViewModelLayoutChangeInfo,\n\ttype INotebookDeltaCellStatusBarItems,\n\ttype INotebookEditor,\n\ttype INotebookEditorContribution,\n\tgetNotebookEditorFromEditorPane,\n} from \"../../notebookBrowser.js\";\nimport { registerNotebookContribution } from \"../../notebookEditorExtensions.js\";\nimport type { NotebookEditorWidget } from \"../../notebookEditorWidget.js\";\n\nexport class TroubleshootController\n\textends Disposable\n\timplements INotebookEditorContribution\n{\n\tstatic id = \"workbench.notebook.troubleshoot\";\n\n\tprivate readonly _localStore = this._register(new DisposableStore());\n\tprivate _cellStateListeners: IDisposable[] = [];\n\tprivate _enabled = false;\n\tprivate _cellStatusItems: string[] = [];\n\n\tconstructor(private readonly _notebookEditor: INotebookEditor) {\n\t\tsuper();\n\n\t\tthis._register(\n\t\t\tthis._notebookEditor.onDidChangeModel(() => {\n\t\t\t\tthis._update();\n\t\t\t}),\n\t\t);\n\n\t\tthis._update();\n\t}\n\n\ttoggle(): void {\n\t\tthis._enabled = !this._enabled;\n\t\tthis._update();\n\t}\n\n\tprivate _update() {\n\t\tthis._localStore.clear();\n\t\tthis._cellStateListeners.forEach((listener) => listener.dispose());\n\n\t\tif (!this._notebookEditor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._updateListener();\n\t}\n\n\tprivate _log(cell: ICellViewModel, e: any) {\n\t\tif (this._enabled) {\n\t\t\tconst oldHeight = (\n\t\t\t\tthis._notebookEditor as NotebookEditorWidget\n\t\t\t).getViewHeight(cell);\n\t\t\tconsole.log(\n\t\t\t\t`cell#${cell.handle}`,\n\t\t\t\te,\n\t\t\t\t`${oldHeight} -> ${cell.layoutInfo.totalHeight}`,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _updateListener() {\n\t\tif (!this._notebookEditor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let i = 0; i < this._notebookEditor.getLength(); i++) {\n\t\t\tconst cell = this._notebookEditor.cellAt(i);\n\n\t\t\tthis._cellStateListeners.push(\n\t\t\t\tcell.onDidChangeLayout((e) => {\n\t\t\t\t\tthis._log(cell, e);\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\tthis._localStore.add(\n\t\t\tthis._notebookEditor.onDidChangeViewCells((e) => {\n\t\t\t\t[...e.splices].reverse().forEach((splice) => {\n\t\t\t\t\tconst [start, deleted, newCells] = splice;\n\t\t\t\t\tconst deletedCells = this._cellStateListeners.splice(\n\t\t\t\t\t\tstart,\n\t\t\t\t\t\tdeleted,\n\t\t\t\t\t\t...newCells.map((cell) => {\n\t\t\t\t\t\t\treturn cell.onDidChangeLayout(\n\t\t\t\t\t\t\t\t(e: ICommonCellViewModelLayoutChangeInfo) => {\n\t\t\t\t\t\t\t\t\tthis._log(cell, e);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\n\t\t\t\t\tdispose(deletedCells);\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\n\t\tconst vm = this._notebookEditor.getViewModel();\n\t\tlet items: INotebookDeltaCellStatusBarItems[] = [];\n\n\t\tif (this._enabled) {\n\t\t\titems = this._getItemsForCells();\n\t\t}\n\n\t\tthis._cellStatusItems = vm.deltaCellStatusBarItems(\n\t\t\tthis._cellStatusItems,\n\t\t\titems,\n\t\t);\n\t}\n\n\tprivate _getItemsForCells(): INotebookDeltaCellStatusBarItems[] {\n\t\tconst items: INotebookDeltaCellStatusBarItems[] = [];\n\t\tfor (let i = 0; i < this._notebookEditor.getLength(); i++) {\n\t\t\titems.push({\n\t\t\t\thandle: i,\n\t\t\t\titems: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttext: `index: ${i}`,\n\t\t\t\t\t\talignment: CellStatusbarAlignment.Left,\n\t\t\t\t\t\tpriority: Number.MAX_SAFE_INTEGER,\n\t\t\t\t\t} satisfies INotebookCellStatusBarItem,\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\treturn items;\n\t}\n\n\toverride dispose() {\n\t\tdispose(this._cellStateListeners);\n\t\tsuper.dispose();\n\t}\n}\n\nregisterNotebookContribution(TroubleshootController.id, TroubleshootController);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"notebook.toggleLayoutTroubleshoot\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"workbench.notebook.toggleLayoutTroubleshoot\",\n\t\t\t\t\t\"Toggle Layout Troubleshoot\",\n\t\t\t\t),\n\t\t\t\tcategory: Categories.Developer,\n\t\t\t\tf1: true,\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst editor = getNotebookEditorFromEditorPane(\n\t\t\t\teditorService.activeEditorPane,\n\t\t\t);\n\n\t\t\tif (!editor) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst controller = editor.getContribution<TroubleshootController>(\n\t\t\t\tTroubleshootController.id,\n\t\t\t);\n\t\t\tcontroller?.toggle();\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"notebook.inspectLayout\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"workbench.notebook.inspectLayout\",\n\t\t\t\t\t\"Inspect Notebook Layout\",\n\t\t\t\t),\n\t\t\t\tcategory: Categories.Developer,\n\t\t\t\tf1: true,\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst editor = getNotebookEditorFromEditorPane(\n\t\t\t\teditorService.activeEditorPane,\n\t\t\t);\n\n\t\t\tif (!editor || !editor.hasModel()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < editor.getLength(); i++) {\n\t\t\t\tconst cell = editor.cellAt(i);\n\t\t\t\tconsole.log(`cell#${cell.handle}`, cell.layoutInfo);\n\t\t\t}\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"notebook.clearNotebookEdtitorTypeCache\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"workbench.notebook.clearNotebookEdtitorTypeCache\",\n\t\t\t\t\t\"Clear Notebook Editor Type Cache\",\n\t\t\t\t),\n\t\t\t\tcategory: Categories.Developer,\n\t\t\t\tf1: true,\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst notebookService = accessor.get(INotebookService);\n\t\t\tnotebookService.clearEditorCache();\n\t\t}\n\t},\n);\n"],
  "mappings": "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",
  "names": ["e"]
}
