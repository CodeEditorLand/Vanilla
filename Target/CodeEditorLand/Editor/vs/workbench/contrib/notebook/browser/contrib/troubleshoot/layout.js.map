{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/troubleshoot/layout.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, DisposableStore, dispose, IDisposable } from '../../../../../../base/common/lifecycle.js';\nimport { localize2 } from '../../../../../../nls.js';\nimport { Categories } from '../../../../../../platform/action/common/actionCommonCategories.js';\nimport { Action2, registerAction2 } from '../../../../../../platform/actions/common/actions.js';\nimport { ServicesAccessor } from '../../../../../../platform/instantiation/common/instantiation.js';\nimport { getNotebookEditorFromEditorPane, ICellViewModel, ICommonCellViewModelLayoutChangeInfo, INotebookDeltaCellStatusBarItems, INotebookEditor, INotebookEditorContribution } from '../../notebookBrowser.js';\nimport { registerNotebookContribution } from '../../notebookEditorExtensions.js';\nimport { NotebookEditorWidget } from '../../notebookEditorWidget.js';\nimport { CellStatusbarAlignment, INotebookCellStatusBarItem } from '../../../common/notebookCommon.js';\nimport { INotebookService } from '../../../common/notebookService.js';\nimport { IEditorService } from '../../../../../services/editor/common/editorService.js';\n\nexport class TroubleshootController extends Disposable implements INotebookEditorContribution {\n\tstatic id: string = 'workbench.notebook.troubleshoot';\n\n\tprivate readonly _localStore = this._register(new DisposableStore());\n\tprivate _cellStateListeners: IDisposable[] = [];\n\tprivate _enabled: boolean = false;\n\tprivate _cellStatusItems: string[] = [];\n\n\tconstructor(private readonly _notebookEditor: INotebookEditor) {\n\t\tsuper();\n\n\t\tthis._register(this._notebookEditor.onDidChangeModel(() => {\n\t\t\tthis._update();\n\t\t}));\n\n\t\tthis._update();\n\t}\n\n\ttoggle(): void {\n\t\tthis._enabled = !this._enabled;\n\t\tthis._update();\n\t}\n\n\tprivate _update() {\n\t\tthis._localStore.clear();\n\t\tthis._cellStateListeners.forEach(listener => listener.dispose());\n\n\t\tif (!this._notebookEditor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._updateListener();\n\t}\n\n\tprivate _log(cell: ICellViewModel, e: any) {\n\t\tif (this._enabled) {\n\t\t\tconst oldHeight = (this._notebookEditor as NotebookEditorWidget).getViewHeight(cell);\n\t\t\tconsole.log(`cell#${cell.handle}`, e, `${oldHeight} -> ${cell.layoutInfo.totalHeight}`);\n\t\t}\n\t}\n\n\tprivate _updateListener() {\n\t\tif (!this._notebookEditor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let i = 0; i < this._notebookEditor.getLength(); i++) {\n\t\t\tconst cell = this._notebookEditor.cellAt(i);\n\n\t\t\tthis._cellStateListeners.push(cell.onDidChangeLayout(e => {\n\t\t\t\tthis._log(cell, e);\n\t\t\t}));\n\t\t}\n\n\t\tthis._localStore.add(this._notebookEditor.onDidChangeViewCells(e => {\n\t\t\t[...e.splices].reverse().forEach(splice => {\n\t\t\t\tconst [start, deleted, newCells] = splice;\n\t\t\t\tconst deletedCells = this._cellStateListeners.splice(start, deleted, ...newCells.map(cell => {\n\t\t\t\t\treturn cell.onDidChangeLayout((e: ICommonCellViewModelLayoutChangeInfo) => {\n\t\t\t\t\t\tthis._log(cell, e);\n\t\t\t\t\t});\n\t\t\t\t}));\n\n\t\t\t\tdispose(deletedCells);\n\t\t\t});\n\t\t}));\n\n\t\tconst vm = this._notebookEditor.getViewModel();\n\t\tlet items: INotebookDeltaCellStatusBarItems[] = [];\n\n\t\tif (this._enabled) {\n\t\t\titems = this._getItemsForCells();\n\t\t}\n\n\t\tthis._cellStatusItems = vm.deltaCellStatusBarItems(this._cellStatusItems, items);\n\t}\n\n\tprivate _getItemsForCells(): INotebookDeltaCellStatusBarItems[] {\n\t\tconst items: INotebookDeltaCellStatusBarItems[] = [];\n\t\tfor (let i = 0; i < this._notebookEditor.getLength(); i++) {\n\t\t\titems.push({\n\t\t\t\thandle: i,\n\t\t\t\titems: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttext: `index: ${i}`,\n\t\t\t\t\t\talignment: CellStatusbarAlignment.Left,\n\t\t\t\t\t\tpriority: Number.MAX_SAFE_INTEGER\n\t\t\t\t\t} satisfies INotebookCellStatusBarItem\n\t\t\t\t]\n\t\t\t});\n\t\t}\n\n\t\treturn items;\n\t}\n\n\toverride dispose() {\n\t\tdispose(this._cellStateListeners);\n\t\tsuper.dispose();\n\t}\n}\n\nregisterNotebookContribution(TroubleshootController.id, TroubleshootController);\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'notebook.toggleLayoutTroubleshoot',\n\t\t\ttitle: localize2('workbench.notebook.toggleLayoutTroubleshoot', \"Toggle Layout Troubleshoot\"),\n\t\t\tcategory: Categories.Developer,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editor = getNotebookEditorFromEditorPane(editorService.activeEditorPane);\n\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst controller = editor.getContribution<TroubleshootController>(TroubleshootController.id);\n\t\tcontroller?.toggle();\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'notebook.inspectLayout',\n\t\t\ttitle: localize2('workbench.notebook.inspectLayout', \"Inspect Notebook Layout\"),\n\t\t\tcategory: Categories.Developer,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editor = getNotebookEditorFromEditorPane(editorService.activeEditorPane);\n\n\t\tif (!editor || !editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let i = 0; i < editor.getLength(); i++) {\n\t\t\tconst cell = editor.cellAt(i);\n\t\t\tconsole.log(`cell#${cell.handle}`, cell.layoutInfo);\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'notebook.clearNotebookEdtitorTypeCache',\n\t\t\ttitle: localize2('workbench.notebook.clearNotebookEdtitorTypeCache', \"Clear Notebook Editor Type Cache\"),\n\t\t\tcategory: Categories.Developer,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst notebookService = accessor.get(INotebookService);\n\t\tnotebookService.clearEditorCache();\n\t}\n});\n"],
  "mappings": "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",
  "names": ["e"]
}
