{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/viewParts/notebookViewZones.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\ttype FastDomNode,\n\tcreateFastDomNode,\n} from \"../../../../../base/browser/fastDomNode.js\";\nimport { onUnexpectedError } from \"../../../../../base/common/errors.js\";\nimport { Disposable } from \"../../../../../base/common/lifecycle.js\";\nimport type {\n\tINotebookViewCellsUpdateEvent,\n\tINotebookViewZone,\n\tINotebookViewZoneChangeAccessor,\n} from \"../notebookBrowser.js\";\nimport type { NotebookCellListView } from \"../view/notebookCellListView.js\";\nimport type { ICoordinatesConverter } from \"../view/notebookRenderingCommon.js\";\nimport type { CellViewModel } from \"../viewModel/notebookViewModelImpl.js\";\n\nconst invalidFunc = () => {\n\tthrow new Error(`Invalid notebook view zone change accessor`);\n};\n\ninterface IZoneWidget {\n\twhitespaceId: string;\n\tisInHiddenArea: boolean;\n\tzone: INotebookViewZone;\n\tdomNode: FastDomNode<HTMLElement>;\n}\n\nexport class NotebookViewZones extends Disposable {\n\tprivate _zones: { [key: string]: IZoneWidget };\n\tpublic domNode: FastDomNode<HTMLElement>;\n\n\tconstructor(\n\t\tprivate readonly listView: NotebookCellListView<CellViewModel>,\n\t\tprivate readonly coordinator: ICoordinatesConverter,\n\t) {\n\t\tsuper();\n\t\tthis.domNode = createFastDomNode(document.createElement(\"div\"));\n\t\tthis.domNode.setClassName(\"view-zones\");\n\t\tthis.domNode.setPosition(\"absolute\");\n\t\tthis.domNode.setAttribute(\"role\", \"presentation\");\n\t\tthis.domNode.setAttribute(\"aria-hidden\", \"true\");\n\t\tthis.domNode.setWidth(\"100%\");\n\t\tthis._zones = {};\n\n\t\tthis.listView.containerDomNode.appendChild(this.domNode.domNode);\n\t}\n\n\tchangeViewZones(\n\t\tcallback: (changeAccessor: INotebookViewZoneChangeAccessor) => void,\n\t): boolean {\n\t\tlet zonesHaveChanged = false;\n\t\tconst changeAccessor: INotebookViewZoneChangeAccessor = {\n\t\t\taddZone: (zone: INotebookViewZone): string => {\n\t\t\t\tzonesHaveChanged = true;\n\t\t\t\treturn this._addZone(zone);\n\t\t\t},\n\t\t\tremoveZone: (id: string): void => {\n\t\t\t\tzonesHaveChanged = true;\n\t\t\t\t// TODO: validate if zones have changed layout\n\t\t\t\tthis._removeZone(id);\n\t\t\t},\n\t\t\tlayoutZone: (id: string): void => {\n\t\t\t\tzonesHaveChanged = true;\n\t\t\t\t// TODO: validate if zones have changed layout\n\t\t\t\tthis._layoutZone(id);\n\t\t\t},\n\t\t};\n\n\t\tsafeInvoke1Arg(callback, changeAccessor);\n\n\t\t// Invalidate changeAccessor\n\t\tchangeAccessor.addZone = invalidFunc;\n\t\tchangeAccessor.removeZone = invalidFunc;\n\t\tchangeAccessor.layoutZone = invalidFunc;\n\n\t\treturn zonesHaveChanged;\n\t}\n\n\tonCellsChanged(e: INotebookViewCellsUpdateEvent): void {\n\t\tconst splices = e.splices.slice().reverse();\n\t\tsplices.forEach((splice) => {\n\t\t\tconst [start, deleted, newCells] = splice;\n\t\t\tconst fromIndex = start;\n\t\t\tconst toIndex = start + deleted;\n\n\t\t\t// 1, 2, 0\n\t\t\t// delete cell index 1 and 2\n\t\t\t// from index 1, to index 3 (exclusive): [1, 3)\n\t\t\t// if we have whitespace afterModelPosition 3, which is after cell index 2\n\n\t\t\tfor (const id in this._zones) {\n\t\t\t\tconst zone = this._zones[id].zone;\n\n\t\t\t\tconst cellBeforeWhitespaceIndex = zone.afterModelPosition - 1;\n\n\t\t\t\tif (\n\t\t\t\t\tcellBeforeWhitespaceIndex >= fromIndex &&\n\t\t\t\t\tcellBeforeWhitespaceIndex < toIndex\n\t\t\t\t) {\n\t\t\t\t\t// The cell this whitespace was after has been deleted\n\t\t\t\t\t//  => move whitespace to before first deleted cell\n\t\t\t\t\tzone.afterModelPosition = fromIndex;\n\t\t\t\t\tthis._updateWhitespace(this._zones[id]);\n\t\t\t\t} else if (cellBeforeWhitespaceIndex >= toIndex) {\n\t\t\t\t\t// adjust afterModelPosition for all other cells\n\t\t\t\t\tconst insertLength = newCells.length;\n\t\t\t\t\tconst offset = insertLength - deleted;\n\t\t\t\t\tzone.afterModelPosition += offset;\n\t\t\t\t\tthis._updateWhitespace(this._zones[id]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tonHiddenRangesChange() {\n\t\tfor (const id in this._zones) {\n\t\t\tthis._updateWhitespace(this._zones[id]);\n\t\t}\n\t}\n\n\tprivate _updateWhitespace(zone: IZoneWidget) {\n\t\tconst whitespaceId = zone.whitespaceId;\n\t\tconst viewPosition = this.coordinator.convertModelIndexToViewIndex(\n\t\t\tzone.zone.afterModelPosition,\n\t\t);\n\t\tconst isInHiddenArea = this._isInHiddenRanges(zone.zone);\n\t\tzone.isInHiddenArea = isInHiddenArea;\n\t\tthis.listView.changeOneWhitespace(\n\t\t\twhitespaceId,\n\t\t\tviewPosition,\n\t\t\tisInHiddenArea ? 0 : zone.zone.heightInPx,\n\t\t);\n\t}\n\n\tlayout() {\n\t\tfor (const id in this._zones) {\n\t\t\tthis._layoutZone(id);\n\t\t}\n\t}\n\n\tprivate _addZone(zone: INotebookViewZone): string {\n\t\tconst viewPosition = this.coordinator.convertModelIndexToViewIndex(\n\t\t\tzone.afterModelPosition,\n\t\t);\n\t\tconst whitespaceId = this.listView.insertWhitespace(\n\t\t\tviewPosition,\n\t\t\tzone.heightInPx,\n\t\t);\n\t\tconst isInHiddenArea = this._isInHiddenRanges(zone);\n\t\tconst myZone: IZoneWidget = {\n\t\t\twhitespaceId: whitespaceId,\n\t\t\tzone: zone,\n\t\t\tdomNode: createFastDomNode(zone.domNode),\n\t\t\tisInHiddenArea: isInHiddenArea,\n\t\t};\n\n\t\tthis._zones[whitespaceId] = myZone;\n\t\tmyZone.domNode.setPosition(\"absolute\");\n\t\tmyZone.domNode.domNode.style.width = \"100%\";\n\t\tmyZone.domNode.setDisplay(\"none\");\n\t\tmyZone.domNode.setAttribute(\"notebook-view-zone\", whitespaceId);\n\t\tthis.domNode.appendChild(myZone.domNode);\n\t\treturn whitespaceId;\n\t}\n\n\tprivate _removeZone(id: string): void {\n\t\tthis.listView.removeWhitespace(id);\n\t\tdelete this._zones[id];\n\t}\n\n\tprivate _layoutZone(id: string): void {\n\t\tconst zoneWidget = this._zones[id];\n\t\tif (!zoneWidget) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._updateWhitespace(this._zones[id]);\n\n\t\tconst isInHiddenArea = this._isInHiddenRanges(zoneWidget.zone);\n\n\t\tif (isInHiddenArea) {\n\t\t\tzoneWidget.domNode.setDisplay(\"none\");\n\t\t} else {\n\t\t\tconst top = this.listView.getWhitespacePosition(\n\t\t\t\tzoneWidget.whitespaceId,\n\t\t\t);\n\t\t\tzoneWidget.domNode.setTop(top);\n\t\t\tzoneWidget.domNode.setDisplay(\"block\");\n\t\t\tzoneWidget.domNode.setHeight(zoneWidget.zone.heightInPx);\n\t\t}\n\t}\n\n\tprivate _isInHiddenRanges(zone: INotebookViewZone) {\n\t\t// The view zone is between two cells (zone.afterModelPosition - 1, zone.afterModelPosition)\n\t\tconst afterIndex = zone.afterModelPosition;\n\n\t\t// In notebook, the first cell (markdown cell) in a folding range is always visible, so we need to check the cell after the notebook view zone\n\t\treturn !this.coordinator.modelIndexIsVisible(afterIndex);\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._zones = {};\n\t}\n}\n\nfunction safeInvoke1Arg(func: Function, arg1: any): any {\n\ttry {\n\t\treturn func(arg1);\n\t} catch (e) {\n\t\tonUnexpectedError(e);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
