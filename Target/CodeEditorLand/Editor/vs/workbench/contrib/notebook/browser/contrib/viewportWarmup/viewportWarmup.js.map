{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/viewportWarmup/viewportWarmup.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from \"../../../../../../base/common/async.js\";\nimport { Disposable } from \"../../../../../../base/common/lifecycle.js\";\nimport { IAccessibilityService } from \"../../../../../../platform/accessibility/common/accessibility.js\";\nimport { CellKind } from \"../../../common/notebookCommon.js\";\nimport { cellRangesToIndexes } from \"../../../common/notebookRange.js\";\nimport { INotebookService } from \"../../../common/notebookService.js\";\nimport {\n\tCellEditState,\n\ttype IInsetRenderOutput,\n\ttype INotebookEditor,\n\ttype INotebookEditorContribution,\n\ttype INotebookEditorDelegate,\n\tRenderOutputType,\n} from \"../../notebookBrowser.js\";\nimport { registerNotebookContribution } from \"../../notebookEditorExtensions.js\";\nimport {\n\ttype CodeCellViewModel,\n\toutputDisplayLimit,\n} from \"../../viewModel/codeCellViewModel.js\";\n\nclass NotebookViewportContribution\n\textends Disposable\n\timplements INotebookEditorContribution\n{\n\tstatic id = \"workbench.notebook.viewportWarmup\";\n\tprivate readonly _warmupViewport: RunOnceScheduler;\n\tprivate readonly _warmupDocument: RunOnceScheduler | null = null;\n\n\tconstructor(\n\t\tprivate readonly _notebookEditor: INotebookEditor,\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t\t@IAccessibilityService accessibilityService: IAccessibilityService,\n\t) {\n\t\tsuper();\n\n\t\tthis._warmupViewport = new RunOnceScheduler(() => this._warmupViewportNow(), 200);\n\t\tthis._register(this._warmupViewport);\n\t\tthis._register(this._notebookEditor.onDidScroll(() => {\n\t\t\tthis._warmupViewport.schedule();\n\t\t}));\n\n\t\tthis._warmupDocument = new RunOnceScheduler(() => this._warmupDocumentNow(), 200);\n\t\tthis._register(this._warmupDocument);\n\t\tthis._register(this._notebookEditor.onDidAttachViewModel(() => {\n\t\t\tif (this._notebookEditor.hasModel()) {\n\t\t\t\tthis._warmupDocument?.schedule();\n\t\t\t}\n\t\t}));\n\n\t\tif (this._notebookEditor.hasModel()) {\n\t\t\tthis._warmupDocument?.schedule();\n\t\t}\n\t}\n\n\tprivate _warmupDocumentNow() {\n\t\tif (this._notebookEditor.hasModel()) {\n\t\t\tfor (let i = 0; i < this._notebookEditor.getLength(); i++) {\n\t\t\t\tconst cell = this._notebookEditor.cellAt(i);\n\n\t\t\t\tif (\n\t\t\t\t\tcell?.cellKind === CellKind.Markup &&\n\t\t\t\t\tcell?.getEditState() === CellEditState.Preview &&\n\t\t\t\t\t!cell.isInputCollapsed\n\t\t\t\t) {\n\t\t\t\t\t// TODO@rebornix currently we disable markdown cell rendering in webview for accessibility\n\t\t\t\t\t// this._notebookEditor.createMarkupPreview(cell);\n\t\t\t\t} else if (cell?.cellKind === CellKind.Code) {\n\t\t\t\t\tthis._warmupCodeCell(cell as CodeCellViewModel);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _warmupViewportNow() {\n\t\tif (this._notebookEditor.isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._notebookEditor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst visibleRanges =\n\t\t\tthis._notebookEditor.getVisibleRangesPlusViewportAboveAndBelow();\n\t\tcellRangesToIndexes(visibleRanges).forEach((index) => {\n\t\t\tconst cell = this._notebookEditor.cellAt(index);\n\n\t\t\tif (\n\t\t\t\tcell?.cellKind === CellKind.Markup &&\n\t\t\t\tcell?.getEditState() === CellEditState.Preview &&\n\t\t\t\t!cell.isInputCollapsed\n\t\t\t) {\n\t\t\t\t(\n\t\t\t\t\tthis._notebookEditor as INotebookEditorDelegate\n\t\t\t\t).createMarkupPreview(cell);\n\t\t\t} else if (cell?.cellKind === CellKind.Code) {\n\t\t\t\tthis._warmupCodeCell(cell as CodeCellViewModel);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _warmupCodeCell(viewCell: CodeCellViewModel) {\n\t\tif (viewCell.isOutputCollapsed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst outputs = viewCell.outputsViewModels;\n\t\tfor (const output of outputs.slice(0, outputDisplayLimit)) {\n\t\t\tconst [mimeTypes, pick] = output.resolveMimeTypes(\n\t\t\t\tthis._notebookEditor.textModel!,\n\t\t\t\tundefined,\n\t\t\t);\n\t\t\tif (\n\t\t\t\t!mimeTypes.find((mimeType) => mimeType.isTrusted) ||\n\t\t\t\tmimeTypes.length === 0\n\t\t\t) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst pickedMimeTypeRenderer = mimeTypes[pick];\n\n\t\t\tif (!pickedMimeTypeRenderer) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this._notebookEditor.hasModel()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst renderer = this._notebookService.getRendererInfo(\n\t\t\t\tpickedMimeTypeRenderer.rendererId,\n\t\t\t);\n\n\t\t\tif (!renderer) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst result: IInsetRenderOutput = {\n\t\t\t\ttype: RenderOutputType.Extension,\n\t\t\t\trenderer,\n\t\t\t\tsource: output,\n\t\t\t\tmimeType: pickedMimeTypeRenderer.mimeType,\n\t\t\t};\n\t\t\tthis._notebookEditor.createOutput(viewCell, result, 0, true);\n\t\t}\n\t}\n}\n\nregisterNotebookContribution(\n\tNotebookViewportContribution.id,\n\tNotebookViewportContribution,\n);\n"],
  "mappings": "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",
  "names": []
}
