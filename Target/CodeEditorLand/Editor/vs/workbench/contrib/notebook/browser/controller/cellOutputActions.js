import{localize as n}from"../../../../../nls.js";import{Action2 as p,MenuId as f,registerAction2 as s}from"../../../../../platform/actions/common/actions.js";import{IClipboardService as b}from"../../../../../platform/clipboard/common/clipboardService.js";import{ContextKeyExpr as E}from"../../../../../platform/contextkey/common/contextkey.js";import{ILogService as V}from"../../../../../platform/log/common/log.js";import{IOpenerService as k}from"../../../../../platform/opener/common/opener.js";import{IEditorService as O}from"../../../../services/editor/common/editorService.js";import{CellKind as m,CellUri as C}from"../../common/notebookCommon.js";import{NOTEBOOK_CELL_HAS_HIDDEN_OUTPUTS as g,NOTEBOOK_CELL_HAS_OUTPUTS as I}from"../../common/notebookContextKeys.js";import{copyCellOutput as v}from"../contrib/clipboard/cellOutputClipboard.js";import{getNotebookEditorFromEditorPane as w}from"../notebookBrowser.js";import*as M from"../notebookIcons.js";import{NOTEBOOK_ACTIONS_CATEGORY as c}from"./coreActions.js";const y="notebook.cellOutput.copy";s(class extends p{constructor(){super({id:"notebook.cellOuput.showEmptyOutputs",title:n("notebookActions.showAllOutput","Show empty outputs"),menu:{id:f.NotebookOutputToolbar,when:E.and(I,g)},f1:!1,category:c})}run(i,e){const t=e.cell;if(t&&t.cellKind===m.Code)for(let o=1;o<t.outputsViewModels.length;o++)t.outputsViewModels[o].visible.get()||(t.outputsViewModels[o].setVisible(!0,!0),t.updateOutputHeight(o,1,"command"))}}),s(class extends p{constructor(){super({id:y,title:n("notebookActions.copyOutput","Copy Cell Output"),menu:{id:f.NotebookOutputToolbar,when:I},category:c,icon:M.copyIcon})}getNoteboookEditor(i,e){return e&&"notebookEditor"in e?e.notebookEditor:w(i.activeEditorPane)}async run(i,e){const t=this.getNoteboookEditor(i.get(O),e);if(!t)return;let o;if(e&&"outputId"in e&&typeof e.outputId=="string"?o=a(e.outputId,t):e&&"outputViewModel"in e&&(o=e.outputViewModel),!o){const l=t.getActiveCell();if(!l)return;l.focusedOutputId!==void 0?o=l.outputsViewModels.find(u=>u.model.outputId===l.focusedOutputId):o=l.outputsViewModels.find(u=>u.pickedMimeType?.isTrusted)}if(!o)return;const r=o.pickedMimeType?.mimeType;if(r?.startsWith("image/")){const l={skipReveal:!0,outputId:o.model.outputId,altOutputId:o.model.alternativeOutputId};await t.focusNotebookCell(o.cellViewModel,"output",l),t.copyOutputImage(o)}else{const l=i.get(b),u=i.get(V);v(r,o,l,u)}}});function a(d,i){const e=i.getViewModel();if(e){const t=e.viewCells.filter(o=>o.cellKind===m.Code);for(const o of t){const r=o.outputsViewModels.find(l=>l.model.outputId===d||l.model.alternativeOutputId===d);if(r)return r}}}const A="notebook.cellOutput.openInTextEditor";s(class extends p{constructor(){super({id:A,title:n("notebookActions.openOutputInEditor","Open Cell Output in Text Editor"),f1:!1,category:c,icon:M.copyIcon})}getNoteboookEditor(i,e){return e&&"notebookEditor"in e?e.notebookEditor:w(i.activeEditorPane)}async run(i,e){const t=this.getNoteboookEditor(i.get(O),e);if(!t)return;let o;e&&"outputId"in e&&typeof e.outputId=="string"?o=a(e.outputId,t):e&&"outputViewModel"in e&&(o=e.outputViewModel);const r=i.get(k);o?.model.outputId&&t.textModel?.uri&&r.open(C.generateCellOutputUri(t.textModel.uri,o.model.outputId))}});export{y as COPY_OUTPUT_COMMAND_ID,A as OPEN_OUTPUT_COMMAND_ID};
