{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/viewModel/notebookOutlineDataSourceFactory.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ReferenceCollection, type IReference } from '../../../../../base/common/lifecycle.js';\nimport { IInstantiationService, createDecorator } from '../../../../../platform/instantiation/common/instantiation.js';\nimport type { INotebookEditor } from '../notebookBrowser.js';\nimport { NotebookCellOutlineDataSource } from './notebookOutlineDataSource.js';\n\nclass NotebookCellOutlineDataSourceReferenceCollection extends ReferenceCollection<NotebookCellOutlineDataSource> {\n\tconstructor(@IInstantiationService private readonly instantiationService: IInstantiationService) {\n\t\tsuper();\n\t}\n\tprotected override createReferencedObject(_key: string, editor: INotebookEditor): NotebookCellOutlineDataSource {\n\t\treturn this.instantiationService.createInstance(NotebookCellOutlineDataSource, editor);\n\t}\n\tprotected override destroyReferencedObject(_key: string, object: NotebookCellOutlineDataSource): void {\n\t\tobject.dispose();\n\t}\n}\n\nexport const INotebookCellOutlineDataSourceFactory = createDecorator<INotebookCellOutlineDataSourceFactory>('INotebookCellOutlineDataSourceFactory');\n\nexport interface INotebookCellOutlineDataSourceFactory {\n\tgetOrCreate(editor: INotebookEditor): IReference<NotebookCellOutlineDataSource>;\n}\n\nexport class NotebookCellOutlineDataSourceFactory implements INotebookCellOutlineDataSourceFactory {\n\tprivate readonly _data: NotebookCellOutlineDataSourceReferenceCollection;\n\tconstructor(@IInstantiationService instantiationService: IInstantiationService) {\n\t\tthis._data = instantiationService.createInstance(NotebookCellOutlineDataSourceReferenceCollection);\n\t}\n\n\tgetOrCreate(editor: INotebookEditor): IReference<NotebookCellOutlineDataSource> {\n\t\treturn this._data.acquire(editor.getId(), editor);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,2BAA4C;AACrD,SAAS,uBAAuB,uBAAuB;AAEvD,SAAS,qCAAqC;AAE9C,IAAM,mDAAN,cAA+D,oBAAmD;AAAA,EACjH,YAAoD,sBAA6C;AAChG,UAAM;AAD6C;AAAA,EAEpD;AAAA,EAbD,OAUkH;AAAA;AAAA;AAAA,EAI9F,uBAAuB,MAAc,QAAwD;AAC/G,WAAO,KAAK,qBAAqB,eAAe,+BAA+B,MAAM;AAAA,EACtF;AAAA,EACmB,wBAAwB,MAAc,QAA6C;AACrG,WAAO,QAAQ;AAAA,EAChB;AACD;AAVM,mDAAN;AAAA,EACc;AAAA,GADR;AAYC,MAAM,wCAAwC,gBAAuD,uCAAuC;AAM5I,IAAM,uCAAN,MAA4F;AAAA,EA5BnG,OA4BmG;AAAA;AAAA;AAAA,EACjF;AAAA,EACjB,YAAmC,sBAA6C;AAC/E,SAAK,QAAQ,qBAAqB,eAAe,gDAAgD;AAAA,EAClG;AAAA,EAEA,YAAY,QAAoE;AAC/E,WAAO,KAAK,MAAM,QAAQ,OAAO,MAAM,GAAG,MAAM;AAAA,EACjD;AACD;AATa,uCAAN;AAAA,EAEO;AAAA,GAFD;",
  "names": []
}
