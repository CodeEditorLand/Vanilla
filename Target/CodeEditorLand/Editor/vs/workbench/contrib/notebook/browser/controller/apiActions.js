import*as s from"../../../../../../vs/base/common/glob.js";import{URI as l}from"../../../../../../vs/base/common/uri.js";import{CommandsRegistry as o}from"../../../../../../vs/platform/commands/common/commands.js";import{isDocumentExcludePattern as m}from"../../../../../../vs/workbench/contrib/notebook/common/notebookCommon.js";import{INotebookKernelService as d}from"../../../../../../vs/workbench/contrib/notebook/common/notebookKernelService.js";import{INotebookService as u}from"../../../../../../vs/workbench/contrib/notebook/common/notebookService.js";o.registerCommand("_resolveNotebookContentProvider",n=>n.get(u).getContributedNotebookTypes().map(t=>{const r=t.selectors.map(e=>typeof e=="string"||s.isRelativePattern(e)?e:m(e)?{include:e.include,exclude:e.exclude}:null).filter(e=>e!==null);return{viewType:t.id,displayName:t.displayName,filenamePattern:r,options:{transientCellMetadata:t.options.transientCellMetadata,transientDocumentMetadata:t.options.transientDocumentMetadata,transientOutputs:t.options.transientOutputs}}})),o.registerCommand("_resolveNotebookKernels",async(n,i)=>{const a=n.get(d),t=l.revive(i.uri);return a.getMatchingKernel({uri:t,notebookType:i.viewType}).all.map(e=>({id:e.id,label:e.label,description:e.description,detail:e.detail,isPreferred:!1,preloads:e.preloadUris}))});
