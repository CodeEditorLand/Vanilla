var E=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var S=(c,t,n,s)=>{for(var o=s>1?void 0:s?T(t,n):t,e=c.length-1,i;e>=0;e--)(i=c[e])&&(o=(s?i(t,n,o):i(o))||o);return s&&o&&E(t,n,o),o},a=(c,t)=>(n,s)=>t(n,s,c);import"../../../../../../../vs/base/common/cancellation.js";import{Disposable as x}from"../../../../../../../vs/base/common/lifecycle.js";import{ResourceMap as R}from"../../../../../../../vs/base/common/map.js";import"../../../../../../../vs/base/common/uri.js";import{ILanguageService as N}from"../../../../../../../vs/editor/common/languages/language.js";import{localize as v}from"../../../../../../../vs/nls.js";import{IConfigurationService as w}from"../../../../../../../vs/platform/configuration/common/configuration.js";import{IInstantiationService as A}from"../../../../../../../vs/platform/instantiation/common/instantiation.js";import{IKeybindingService as K}from"../../../../../../../vs/platform/keybinding/common/keybinding.js";import{Registry as D}from"../../../../../../../vs/platform/registry/common/platform.js";import{Extensions as M}from"../../../../../../../vs/workbench/common/contributions.js";import{CHANGE_CELL_LANGUAGE as G,DETECT_CELL_LANGUAGE as L}from"../../../../../../../vs/workbench/contrib/notebook/browser/notebookBrowser.js";import{INotebookCellStatusBarService as U}from"../../../../../../../vs/workbench/contrib/notebook/common/notebookCellStatusBarService.js";import{CellKind as _,CellStatusbarAlignment as f}from"../../../../../../../vs/workbench/contrib/notebook/common/notebookCommon.js";import{INotebookKernelService as V}from"../../../../../../../vs/workbench/contrib/notebook/common/notebookKernelService.js";import{INotebookService as C}from"../../../../../../../vs/workbench/contrib/notebook/common/notebookService.js";import{ILanguageDetectionService as B}from"../../../../../../../vs/workbench/services/languageDetection/common/languageDetectionWorkerService.js";import{LifecyclePhase as W}from"../../../../../../../vs/workbench/services/lifecycle/common/lifecycle.js";let u=class{constructor(t,n){this._notebookService=t;this._languageService=n}viewType="*";async provideCellStatusBarItems(t,n,s){const e=this._notebookService.getNotebookTextModel(t)?.cells[n];if(!e)return;const i=[];let g=e.language;if(e.cellKind===_.Markup)g="markdown";else if(this._languageService.getLanguageIdByLanguageName(e.language))g=this._languageService.getLanguageName(g)??g;else{const l=v("notebook.cell.status.searchLanguageExtensions","Unknown cell language. Click to search for '{0}' extensions",e.language);i.push({text:"$(dialog-warning)",command:{id:"workbench.extensions.search",arguments:[`@tag:${e.language}`],title:"Search Extensions"},tooltip:l,alignment:f.Right,priority:-Number.MAX_SAFE_INTEGER+1})}return i.push({text:g,command:G,tooltip:v("notebook.cell.status.language","Select Cell Language Mode"),alignment:f.Right,priority:-Number.MAX_SAFE_INTEGER}),{items:i}}};u=S([a(0,C),a(1,N)],u);let m=class{constructor(t,n,s,o,e,i){this._notebookService=t;this._notebookKernelService=n;this._languageService=s;this._configurationService=o;this._languageDetectionService=e;this._keybindingService=i}viewType="*";cache=new R;async provideCellStatusBarItems(t,n,s){const o=this._notebookService.getNotebookTextModel(t),e=o?.cells[n];if(!e)return;const i=this._configurationService.getValue("workbench.editor.languageDetectionHints");if(!(typeof i=="object"&&i?.notebookEditors))return;const b=e.uri,l=e.textModel?.getVersionId();if(!l)return;const p=e.cellKind===_.Markup?"markdown":this._languageService.getLanguageIdByLanguageName(e.language)||e.language;this.cache.has(b)||this.cache.set(b,{cellLanguage:p,updateTimestamp:0,contentVersion:1});const r=this.cache.get(b);if(r.cellLanguage!==p||r.updateTimestamp<Date.now()-1e3&&r.contentVersion!==l){r.updateTimestamp=Date.now(),r.cellLanguage=p,r.contentVersion=l;const I=this._notebookKernelService.getSelectedOrSuggestedKernel(o);if(I){const k=[...I.supportedLanguages,"markdown"];r.guess=await this._languageDetectionService.detectLanguage(e.uri,k)}}const h=[];if(r.guess&&p!==r.guess){const I=this._languageService.getLanguageName(r.guess)||r.guess;let k=v("notebook.cell.status.autoDetectLanguage","Accept Detected Language: {0}",I);const y=this._keybindingService.lookupKeybinding(L)?.getLabel();y&&(k+=` (${y})`),h.push({text:"$(lightbulb-autofix)",command:L,tooltip:k,alignment:f.Right,priority:-Number.MAX_SAFE_INTEGER+1})}return{items:h}}};m=S([a(0,C),a(1,V),a(2,N),a(3,w),a(4,B),a(5,K)],m);let d=class extends x{constructor(t,n){super(),[u,m].forEach(o=>{this._register(n.registerCellStatusBarItemProvider(t.createInstance(o)))})}};d=S([a(0,A),a(1,U)],d),D.as(M.Workbench).registerWorkbenchContribution(d,W.Restored);
