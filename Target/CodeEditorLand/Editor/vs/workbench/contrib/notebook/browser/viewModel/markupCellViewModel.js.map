{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/viewModel/markupCellViewModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from '../../../../../base/common/event.js';\nimport * as UUID from '../../../../../base/common/uuid.js';\nimport * as editorCommon from '../../../../../editor/common/editorCommon.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { CellEditState, CellFindMatch, CellFoldingState, CellLayoutContext, CellLayoutState, EditorFoldingStateDelegate, ICellOutputViewModel, ICellViewModel, MarkupCellLayoutChangeEvent, MarkupCellLayoutInfo } from '../notebookBrowser.js';\nimport { BaseCellViewModel } from './baseCellViewModel.js';\nimport { NotebookCellTextModel } from '../../common/model/notebookCellTextModel.js';\nimport { CellKind, INotebookFindOptions } from '../../common/notebookCommon.js';\nimport { ITextModelService } from '../../../../../editor/common/services/resolverService.js';\nimport { ViewContext } from './viewContext.js';\nimport { IUndoRedoService } from '../../../../../platform/undoRedo/common/undoRedo.js';\nimport { NotebookOptionsChangeEvent } from '../notebookOptions.js';\nimport { ICodeEditorService } from '../../../../../editor/browser/services/codeEditorService.js';\nimport { NotebookCellStateChangedEvent, NotebookLayoutInfo } from '../notebookViewEvents.js';\n\nexport class MarkupCellViewModel extends BaseCellViewModel implements ICellViewModel {\n\n\treadonly cellKind = CellKind.Markup;\n\n\tprivate _layoutInfo: MarkupCellLayoutInfo;\n\n\tprivate _renderedHtml?: string;\n\n\tpublic get renderedHtml(): string | undefined { return this._renderedHtml; }\n\tpublic set renderedHtml(value: string | undefined) {\n\t\tif (this._renderedHtml !== value) {\n\t\t\tthis._renderedHtml = value;\n\t\t\tthis._onDidChangeState.fire({ contentChanged: true });\n\t\t}\n\t}\n\n\tget layoutInfo() {\n\t\treturn this._layoutInfo;\n\t}\n\n\tprivate _previewHeight = 0;\n\n\tset renderedMarkdownHeight(newHeight: number) {\n\t\tthis._previewHeight = newHeight;\n\t\tthis._updateTotalHeight(this._computeTotalHeight());\n\t}\n\n\tprivate _chatHeight = 0;\n\n\tset chatHeight(newHeight: number) {\n\t\tthis._chatHeight = newHeight;\n\t\tthis._updateTotalHeight(this._computeTotalHeight());\n\t}\n\n\tget chatHeight() {\n\t\treturn this._chatHeight;\n\t}\n\n\tprivate _editorHeight = 0;\n\tprivate _statusBarHeight = 0;\n\tset editorHeight(newHeight: number) {\n\t\tthis._editorHeight = newHeight;\n\t\tthis._statusBarHeight = this.viewContext.notebookOptions.computeStatusBarHeight();\n\t\tthis._updateTotalHeight(this._computeTotalHeight());\n\t}\n\n\tget editorHeight() {\n\t\tthrow new Error('MarkdownCellViewModel.editorHeight is write only');\n\t}\n\n\tprotected readonly _onDidChangeLayout = this._register(new Emitter<MarkupCellLayoutChangeEvent>());\n\treadonly onDidChangeLayout = this._onDidChangeLayout.event;\n\n\tget foldingState() {\n\t\treturn this.foldingDelegate.getFoldingState(this.foldingDelegate.getCellIndex(this));\n\t}\n\n\tprivate _hoveringOutput: boolean = false;\n\tpublic get outputIsHovered(): boolean {\n\t\treturn this._hoveringOutput;\n\t}\n\n\tpublic set outputIsHovered(v: boolean) {\n\t\tthis._hoveringOutput = v;\n\t}\n\n\tprivate _focusOnOutput: boolean = false;\n\tpublic get outputIsFocused(): boolean {\n\t\treturn this._focusOnOutput;\n\t}\n\n\tpublic set outputIsFocused(v: boolean) {\n\t\tthis._focusOnOutput = v;\n\t}\n\n\tpublic get inputInOutputIsFocused(): boolean {\n\t\treturn false;\n\t}\n\n\tpublic set inputInOutputIsFocused(_: boolean) {\n\t\t//\n\t}\n\n\tprivate _hoveringCell = false;\n\tpublic get cellIsHovered(): boolean {\n\t\treturn this._hoveringCell;\n\t}\n\n\tpublic set cellIsHovered(v: boolean) {\n\t\tthis._hoveringCell = v;\n\t\tthis._onDidChangeState.fire({ cellIsHoveredChanged: true });\n\t}\n\n\tconstructor(\n\t\tviewType: string,\n\t\tmodel: NotebookCellTextModel,\n\t\tinitialNotebookLayoutInfo: NotebookLayoutInfo | null,\n\t\treadonly foldingDelegate: EditorFoldingStateDelegate,\n\t\treadonly viewContext: ViewContext,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ITextModelService textModelService: ITextModelService,\n\t\t@IUndoRedoService undoRedoService: IUndoRedoService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService\n\t) {\n\t\tsuper(viewType, model, UUID.generateUuid(), viewContext, configurationService, textModelService, undoRedoService, codeEditorService);\n\n\t\tconst { bottomToolbarGap } = this.viewContext.notebookOptions.computeBottomToolbarDimensions(this.viewType);\n\n\t\tthis._layoutInfo = {\n\t\t\tchatHeight: 0,\n\t\t\teditorHeight: 0,\n\t\t\tpreviewHeight: 0,\n\t\t\tfontInfo: initialNotebookLayoutInfo?.fontInfo || null,\n\t\t\teditorWidth: initialNotebookLayoutInfo?.width\n\t\t\t\t? this.viewContext.notebookOptions.computeMarkdownCellEditorWidth(initialNotebookLayoutInfo.width)\n\t\t\t\t: 0,\n\t\t\tcommentOffset: 0,\n\t\t\tcommentHeight: 0,\n\t\t\tbottomToolbarOffset: bottomToolbarGap,\n\t\t\ttotalHeight: 100,\n\t\t\tlayoutState: CellLayoutState.Uninitialized,\n\t\t\tfoldHintHeight: 0,\n\t\t\tstatusBarHeight: 0\n\t\t};\n\n\t\tthis._register(this.onDidChangeState(e => {\n\t\t\tthis.viewContext.eventDispatcher.emit([new NotebookCellStateChangedEvent(e, this.model)]);\n\n\t\t\tif (e.foldingStateChanged) {\n\t\t\t\tthis._updateTotalHeight(this._computeTotalHeight(), CellLayoutContext.Fold);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _computeTotalHeight(): number {\n\t\tconst layoutConfiguration = this.viewContext.notebookOptions.getLayoutConfiguration();\n\t\tconst { bottomToolbarGap } = this.viewContext.notebookOptions.computeBottomToolbarDimensions(this.viewType);\n\t\tconst foldHintHeight = this._computeFoldHintHeight();\n\n\t\tif (this.getEditState() === CellEditState.Editing) {\n\t\t\treturn this._editorHeight\n\t\t\t\t+ layoutConfiguration.markdownCellTopMargin\n\t\t\t\t+ layoutConfiguration.markdownCellBottomMargin\n\t\t\t\t+ bottomToolbarGap\n\t\t\t\t+ this._statusBarHeight\n\t\t\t\t+ this._commentHeight;\n\t\t} else {\n\t\t\t// @rebornix\n\t\t\t// On file open, the previewHeight + bottomToolbarGap for a cell out of viewport can be 0\n\t\t\t// When it's 0, the list view will never try to render it anymore even if we scroll the cell into view.\n\t\t\t// Thus we make sure it's greater than 0\n\t\t\treturn Math.max(1, this._previewHeight + bottomToolbarGap + foldHintHeight + this._commentHeight);\n\t\t}\n\t}\n\n\tprivate _computeFoldHintHeight(): number {\n\t\treturn (this.getEditState() === CellEditState.Editing || this.foldingState !== CellFoldingState.Collapsed) ?\n\t\t\t0 : this.viewContext.notebookOptions.getLayoutConfiguration().markdownFoldHintHeight;\n\t}\n\n\tupdateOptions(e: NotebookOptionsChangeEvent) {\n\t\tif (e.cellStatusBarVisibility || e.insertToolbarPosition || e.cellToolbarLocation) {\n\t\t\tthis._updateTotalHeight(this._computeTotalHeight());\n\t\t}\n\t}\n\n\t/**\n\t * we put outputs stuff here to make compiler happy\n\t */\n\toutputsViewModels: ICellOutputViewModel[] = [];\n\tgetOutputOffset(index: number): number {\n\t\t// throw new Error('Method not implemented.');\n\t\treturn -1;\n\t}\n\tupdateOutputHeight(index: number, height: number): void {\n\t\t// throw new Error('Method not implemented.');\n\t}\n\n\ttriggerFoldingStateChange() {\n\t\tthis._onDidChangeState.fire({ foldingStateChanged: true });\n\t}\n\n\tprivate _updateTotalHeight(newHeight: number, context?: CellLayoutContext) {\n\t\tif (newHeight !== this.layoutInfo.totalHeight) {\n\t\t\tthis.layoutChange({ totalHeight: newHeight, context });\n\t\t}\n\t}\n\n\tlayoutChange(state: MarkupCellLayoutChangeEvent) {\n\t\tlet totalHeight: number;\n\t\tlet foldHintHeight: number;\n\t\tif (!this.isInputCollapsed) {\n\t\t\ttotalHeight = state.totalHeight === undefined ?\n\t\t\t\t(this._layoutInfo.layoutState ===\n\t\t\t\t\tCellLayoutState.Uninitialized ?\n\t\t\t\t\t100 :\n\t\t\t\t\tthis._layoutInfo.totalHeight) :\n\t\t\t\tstate.totalHeight;\n\t\t\t// recompute\n\t\t\tfoldHintHeight = this._computeFoldHintHeight();\n\t\t} else {\n\t\t\ttotalHeight =\n\t\t\t\tthis.viewContext.notebookOptions\n\t\t\t\t\t.computeCollapsedMarkdownCellHeight(this.viewType);\n\t\t\tstate.totalHeight = totalHeight;\n\n\t\t\tfoldHintHeight = 0;\n\t\t}\n\t\tlet commentOffset: number;\n\t\tif (this.getEditState() === CellEditState.Editing) {\n\t\t\tconst notebookLayoutConfiguration = this.viewContext.notebookOptions.getLayoutConfiguration();\n\t\t\tcommentOffset = notebookLayoutConfiguration.editorToolbarHeight\n\t\t\t\t+ notebookLayoutConfiguration.cellTopMargin // CELL_TOP_MARGIN\n\t\t\t\t+ this._chatHeight\n\t\t\t\t+ this._editorHeight\n\t\t\t\t+ this._statusBarHeight;\n\t\t} else {\n\t\t\tcommentOffset = this._previewHeight;\n\t\t}\n\n\t\tthis._layoutInfo = {\n\t\t\tfontInfo: state.font || this._layoutInfo.fontInfo,\n\t\t\teditorWidth: state.outerWidth !== undefined ?\n\t\t\t\tthis.viewContext.notebookOptions\n\t\t\t\t\t.computeMarkdownCellEditorWidth(state.outerWidth) :\n\t\t\t\tthis._layoutInfo.editorWidth,\n\t\t\tchatHeight: this._chatHeight,\n\t\t\teditorHeight: this._editorHeight,\n\t\t\tstatusBarHeight: this._statusBarHeight,\n\t\t\tpreviewHeight: this._previewHeight,\n\t\t\tbottomToolbarOffset: this.viewContext.notebookOptions\n\t\t\t\t.computeBottomToolbarOffset(\n\t\t\t\t\ttotalHeight, this.viewType),\n\t\t\ttotalHeight,\n\t\t\tlayoutState: CellLayoutState.Measured,\n\t\t\tfoldHintHeight,\n\t\t\tcommentOffset,\n\t\t\tcommentHeight: state.commentHeight ?\n\t\t\t\tthis._commentHeight :\n\t\t\t\tthis._layoutInfo.commentHeight,\n\t\t};\n\n\t\tthis._onDidChangeLayout.fire(state);\n\t}\n\n\toverride restoreEditorViewState(editorViewStates: editorCommon.ICodeEditorViewState | null, totalHeight?: number) {\n\t\tsuper.restoreEditorViewState(editorViewStates);\n\t\t// we might already warmup the viewport so the cell has a total height computed\n\t\tif (totalHeight !== undefined && this.layoutInfo.layoutState === CellLayoutState.Uninitialized) {\n\t\t\tthis._layoutInfo = {\n\t\t\t\t...this.layoutInfo,\n\t\t\t\ttotalHeight: totalHeight,\n\t\t\t\tchatHeight: this._chatHeight,\n\t\t\t\teditorHeight: this._editorHeight,\n\t\t\t\tstatusBarHeight: this._statusBarHeight,\n\t\t\t\tlayoutState: CellLayoutState.FromCache,\n\t\t\t};\n\t\t\tthis.layoutChange({});\n\t\t}\n\t}\n\n\tgetDynamicHeight() {\n\t\treturn null;\n\t}\n\n\tgetHeight(lineHeight: number) {\n\t\tif (this._layoutInfo.layoutState === CellLayoutState.Uninitialized) {\n\t\t\treturn 100;\n\t\t} else {\n\t\t\treturn this._layoutInfo.totalHeight;\n\t\t}\n\t}\n\n\tprotected onDidChangeTextModelContent(): void {\n\t\tthis._onDidChangeState.fire({ contentChanged: true });\n\t}\n\n\tonDeselect() {\n\t}\n\n\n\tprivate readonly _hasFindResult = this._register(new Emitter<boolean>());\n\tpublic readonly hasFindResult: Event<boolean> = this._hasFindResult.event;\n\n\tstartFind(value: string, options: INotebookFindOptions): CellFindMatch | null {\n\t\tconst matches = super.cellStartFind(value, options);\n\n\t\tif (matches === null) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tcell: this,\n\t\t\tcontentMatches: matches\n\t\t};\n\t}\n\n\toverride dispose() {\n\t\tsuper.dispose();\n\t\t(this.foldingDelegate as any) = null;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
