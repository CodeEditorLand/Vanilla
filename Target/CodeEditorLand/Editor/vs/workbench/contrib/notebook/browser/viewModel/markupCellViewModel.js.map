{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/viewModel/markupCellViewModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, type Event } from \"../../../../../base/common/event.js\";\nimport * as UUID from \"../../../../../base/common/uuid.js\";\nimport { ICodeEditorService } from \"../../../../../editor/browser/services/codeEditorService.js\";\nimport type * as editorCommon from \"../../../../../editor/common/editorCommon.js\";\nimport { ITextModelService } from \"../../../../../editor/common/services/resolverService.js\";\nimport { IConfigurationService } from \"../../../../../platform/configuration/common/configuration.js\";\nimport { IUndoRedoService } from \"../../../../../platform/undoRedo/common/undoRedo.js\";\nimport type { NotebookCellTextModel } from \"../../common/model/notebookCellTextModel.js\";\nimport {\n\tCellKind,\n\ttype INotebookFindOptions,\n} from \"../../common/notebookCommon.js\";\nimport {\n\tCellEditState,\n\ttype CellFindMatch,\n\tCellFoldingState,\n\tCellLayoutContext,\n\tCellLayoutState,\n\ttype EditorFoldingStateDelegate,\n\ttype ICellOutputViewModel,\n\ttype ICellViewModel,\n\ttype MarkupCellLayoutChangeEvent,\n\ttype MarkupCellLayoutInfo,\n} from \"../notebookBrowser.js\";\nimport type { NotebookOptionsChangeEvent } from \"../notebookOptions.js\";\nimport {\n\tNotebookCellStateChangedEvent,\n\ttype NotebookLayoutInfo,\n} from \"../notebookViewEvents.js\";\nimport { BaseCellViewModel } from \"./baseCellViewModel.js\";\nimport type { ViewContext } from \"./viewContext.js\";\n\nexport class MarkupCellViewModel\n\textends BaseCellViewModel\n\timplements ICellViewModel\n{\n\treadonly cellKind = CellKind.Markup;\n\n\tprivate _layoutInfo: MarkupCellLayoutInfo;\n\n\tprivate _renderedHtml?: string;\n\n\tpublic get renderedHtml(): string | undefined {\n\t\treturn this._renderedHtml;\n\t}\n\tpublic set renderedHtml(value: string | undefined) {\n\t\tif (this._renderedHtml !== value) {\n\t\t\tthis._renderedHtml = value;\n\t\t\tthis._onDidChangeState.fire({ contentChanged: true });\n\t\t}\n\t}\n\n\tget layoutInfo() {\n\t\treturn this._layoutInfo;\n\t}\n\n\tprivate _previewHeight = 0;\n\n\tset renderedMarkdownHeight(newHeight: number) {\n\t\tthis._previewHeight = newHeight;\n\t\tthis._updateTotalHeight(this._computeTotalHeight());\n\t}\n\n\tprivate _chatHeight = 0;\n\n\tset chatHeight(newHeight: number) {\n\t\tthis._chatHeight = newHeight;\n\t\tthis._updateTotalHeight(this._computeTotalHeight());\n\t}\n\n\tget chatHeight() {\n\t\treturn this._chatHeight;\n\t}\n\n\tprivate _editorHeight = 0;\n\tprivate _statusBarHeight = 0;\n\tset editorHeight(newHeight: number) {\n\t\tthis._editorHeight = newHeight;\n\t\tthis._statusBarHeight =\n\t\t\tthis.viewContext.notebookOptions.computeStatusBarHeight();\n\t\tthis._updateTotalHeight(this._computeTotalHeight());\n\t}\n\n\tget editorHeight() {\n\t\tthrow new Error(\"MarkdownCellViewModel.editorHeight is write only\");\n\t}\n\n\tprotected readonly _onDidChangeLayout = this._register(\n\t\tnew Emitter<MarkupCellLayoutChangeEvent>(),\n\t);\n\treadonly onDidChangeLayout = this._onDidChangeLayout.event;\n\n\tget foldingState() {\n\t\treturn this.foldingDelegate.getFoldingState(\n\t\t\tthis.foldingDelegate.getCellIndex(this),\n\t\t);\n\t}\n\n\tprivate _hoveringOutput = false;\n\tpublic get outputIsHovered(): boolean {\n\t\treturn this._hoveringOutput;\n\t}\n\n\tpublic set outputIsHovered(v: boolean) {\n\t\tthis._hoveringOutput = v;\n\t}\n\n\tprivate _focusOnOutput = false;\n\tpublic get outputIsFocused(): boolean {\n\t\treturn this._focusOnOutput;\n\t}\n\n\tpublic set outputIsFocused(v: boolean) {\n\t\tthis._focusOnOutput = v;\n\t}\n\n\tpublic get inputInOutputIsFocused(): boolean {\n\t\treturn false;\n\t}\n\n\tpublic set inputInOutputIsFocused(_: boolean) {\n\t\t//\n\t}\n\n\tprivate _hoveringCell = false;\n\tpublic get cellIsHovered(): boolean {\n\t\treturn this._hoveringCell;\n\t}\n\n\tpublic set cellIsHovered(v: boolean) {\n\t\tthis._hoveringCell = v;\n\t\tthis._onDidChangeState.fire({ cellIsHoveredChanged: true });\n\t}\n\n\tconstructor(\n\t\tviewType: string,\n\t\tmodel: NotebookCellTextModel,\n\t\tinitialNotebookLayoutInfo: NotebookLayoutInfo | null,\n\t\treadonly foldingDelegate: EditorFoldingStateDelegate,\n\t\treadonly viewContext: ViewContext,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ITextModelService textModelService: ITextModelService,\n\t\t@IUndoRedoService undoRedoService: IUndoRedoService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t) {\n\t\tsuper(\n\t\t\tviewType,\n\t\t\tmodel,\n\t\t\tUUID.generateUuid(),\n\t\t\tviewContext,\n\t\t\tconfigurationService,\n\t\t\ttextModelService,\n\t\t\tundoRedoService,\n\t\t\tcodeEditorService,\n\t\t);\n\n\t\tconst { bottomToolbarGap } =\n\t\t\tthis.viewContext.notebookOptions.computeBottomToolbarDimensions(\n\t\t\t\tthis.viewType,\n\t\t\t);\n\n\t\tthis._layoutInfo = {\n\t\t\tchatHeight: 0,\n\t\t\teditorHeight: 0,\n\t\t\tpreviewHeight: 0,\n\t\t\tfontInfo: initialNotebookLayoutInfo?.fontInfo || null,\n\t\t\teditorWidth: initialNotebookLayoutInfo?.width\n\t\t\t\t? this.viewContext.notebookOptions.computeMarkdownCellEditorWidth(\n\t\t\t\t\t\tinitialNotebookLayoutInfo.width,\n\t\t\t\t\t)\n\t\t\t\t: 0,\n\t\t\tcommentOffset: 0,\n\t\t\tcommentHeight: 0,\n\t\t\tbottomToolbarOffset: bottomToolbarGap,\n\t\t\ttotalHeight: 100,\n\t\t\tlayoutState: CellLayoutState.Uninitialized,\n\t\t\tfoldHintHeight: 0,\n\t\t\tstatusBarHeight: 0,\n\t\t};\n\n\t\tthis._register(\n\t\t\tthis.onDidChangeState((e) => {\n\t\t\t\tthis.viewContext.eventDispatcher.emit([\n\t\t\t\t\tnew NotebookCellStateChangedEvent(e, this.model),\n\t\t\t\t]);\n\n\t\t\t\tif (e.foldingStateChanged) {\n\t\t\t\t\tthis._updateTotalHeight(\n\t\t\t\t\t\tthis._computeTotalHeight(),\n\t\t\t\t\t\tCellLayoutContext.Fold,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate _computeTotalHeight(): number {\n\t\tconst layoutConfiguration =\n\t\t\tthis.viewContext.notebookOptions.getLayoutConfiguration();\n\t\tconst { bottomToolbarGap } =\n\t\t\tthis.viewContext.notebookOptions.computeBottomToolbarDimensions(\n\t\t\t\tthis.viewType,\n\t\t\t);\n\t\tconst foldHintHeight = this._computeFoldHintHeight();\n\n\t\tif (this.getEditState() === CellEditState.Editing) {\n\t\t\treturn (\n\t\t\t\tthis._editorHeight +\n\t\t\t\tlayoutConfiguration.markdownCellTopMargin +\n\t\t\t\tlayoutConfiguration.markdownCellBottomMargin +\n\t\t\t\tbottomToolbarGap +\n\t\t\t\tthis._statusBarHeight +\n\t\t\t\tthis._commentHeight\n\t\t\t);\n\t\t} else {\n\t\t\t// @rebornix\n\t\t\t// On file open, the previewHeight + bottomToolbarGap for a cell out of viewport can be 0\n\t\t\t// When it's 0, the list view will never try to render it anymore even if we scroll the cell into view.\n\t\t\t// Thus we make sure it's greater than 0\n\t\t\treturn Math.max(\n\t\t\t\t1,\n\t\t\t\tthis._previewHeight +\n\t\t\t\t\tbottomToolbarGap +\n\t\t\t\t\tfoldHintHeight +\n\t\t\t\t\tthis._commentHeight,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _computeFoldHintHeight(): number {\n\t\treturn this.getEditState() === CellEditState.Editing ||\n\t\t\tthis.foldingState !== CellFoldingState.Collapsed\n\t\t\t? 0\n\t\t\t: this.viewContext.notebookOptions.getLayoutConfiguration()\n\t\t\t\t\t.markdownFoldHintHeight;\n\t}\n\n\tupdateOptions(e: NotebookOptionsChangeEvent) {\n\t\tif (\n\t\t\te.cellStatusBarVisibility ||\n\t\t\te.insertToolbarPosition ||\n\t\t\te.cellToolbarLocation\n\t\t) {\n\t\t\tthis._updateTotalHeight(this._computeTotalHeight());\n\t\t}\n\t}\n\n\t/**\n\t * we put outputs stuff here to make compiler happy\n\t */\n\toutputsViewModels: ICellOutputViewModel[] = [];\n\tgetOutputOffset(index: number): number {\n\t\t// throw new Error('Method not implemented.');\n\t\treturn -1;\n\t}\n\tupdateOutputHeight(index: number, height: number): void {\n\t\t// throw new Error('Method not implemented.');\n\t}\n\n\ttriggerFoldingStateChange() {\n\t\tthis._onDidChangeState.fire({ foldingStateChanged: true });\n\t}\n\n\tprivate _updateTotalHeight(newHeight: number, context?: CellLayoutContext) {\n\t\tif (newHeight !== this.layoutInfo.totalHeight) {\n\t\t\tthis.layoutChange({ totalHeight: newHeight, context });\n\t\t}\n\t}\n\n\tlayoutChange(state: MarkupCellLayoutChangeEvent) {\n\t\tlet totalHeight: number;\n\t\tlet foldHintHeight: number;\n\t\tif (this.isInputCollapsed) {\n\t\t\ttotalHeight =\n\t\t\t\tthis.viewContext.notebookOptions.computeCollapsedMarkdownCellHeight(\n\t\t\t\t\tthis.viewType,\n\t\t\t\t);\n\t\t\tstate.totalHeight = totalHeight;\n\n\t\t\tfoldHintHeight = 0;\n\t\t} else {\n\t\t\ttotalHeight =\n\t\t\t\tstate.totalHeight === undefined\n\t\t\t\t\t? this._layoutInfo.layoutState ===\n\t\t\t\t\t\tCellLayoutState.Uninitialized\n\t\t\t\t\t\t? 100\n\t\t\t\t\t\t: this._layoutInfo.totalHeight\n\t\t\t\t\t: state.totalHeight;\n\t\t\t// recompute\n\t\t\tfoldHintHeight = this._computeFoldHintHeight();\n\t\t}\n\t\tlet commentOffset: number;\n\t\tif (this.getEditState() === CellEditState.Editing) {\n\t\t\tconst notebookLayoutConfiguration =\n\t\t\t\tthis.viewContext.notebookOptions.getLayoutConfiguration();\n\t\t\tcommentOffset =\n\t\t\t\tnotebookLayoutConfiguration.editorToolbarHeight +\n\t\t\t\tnotebookLayoutConfiguration.cellTopMargin + // CELL_TOP_MARGIN\n\t\t\t\tthis._chatHeight +\n\t\t\t\tthis._editorHeight +\n\t\t\t\tthis._statusBarHeight;\n\t\t} else {\n\t\t\tcommentOffset = this._previewHeight;\n\t\t}\n\n\t\tthis._layoutInfo = {\n\t\t\tfontInfo: state.font || this._layoutInfo.fontInfo,\n\t\t\teditorWidth:\n\t\t\t\tstate.outerWidth !== undefined\n\t\t\t\t\t? this.viewContext.notebookOptions.computeMarkdownCellEditorWidth(\n\t\t\t\t\t\t\tstate.outerWidth,\n\t\t\t\t\t\t)\n\t\t\t\t\t: this._layoutInfo.editorWidth,\n\t\t\tchatHeight: this._chatHeight,\n\t\t\teditorHeight: this._editorHeight,\n\t\t\tstatusBarHeight: this._statusBarHeight,\n\t\t\tpreviewHeight: this._previewHeight,\n\t\t\tbottomToolbarOffset:\n\t\t\t\tthis.viewContext.notebookOptions.computeBottomToolbarOffset(\n\t\t\t\t\ttotalHeight,\n\t\t\t\t\tthis.viewType,\n\t\t\t\t),\n\t\t\ttotalHeight,\n\t\t\tlayoutState: CellLayoutState.Measured,\n\t\t\tfoldHintHeight,\n\t\t\tcommentOffset,\n\t\t\tcommentHeight: state.commentHeight\n\t\t\t\t? this._commentHeight\n\t\t\t\t: this._layoutInfo.commentHeight,\n\t\t};\n\n\t\tthis._onDidChangeLayout.fire(state);\n\t}\n\n\toverride restoreEditorViewState(\n\t\teditorViewStates: editorCommon.ICodeEditorViewState | null,\n\t\ttotalHeight?: number,\n\t) {\n\t\tsuper.restoreEditorViewState(editorViewStates);\n\t\t// we might already warmup the viewport so the cell has a total height computed\n\t\tif (\n\t\t\ttotalHeight !== undefined &&\n\t\t\tthis.layoutInfo.layoutState === CellLayoutState.Uninitialized\n\t\t) {\n\t\t\tthis._layoutInfo = {\n\t\t\t\t...this.layoutInfo,\n\t\t\t\ttotalHeight: totalHeight,\n\t\t\t\tchatHeight: this._chatHeight,\n\t\t\t\teditorHeight: this._editorHeight,\n\t\t\t\tstatusBarHeight: this._statusBarHeight,\n\t\t\t\tlayoutState: CellLayoutState.FromCache,\n\t\t\t};\n\t\t\tthis.layoutChange({});\n\t\t}\n\t}\n\n\tgetDynamicHeight() {\n\t\treturn null;\n\t}\n\n\tgetHeight(lineHeight: number) {\n\t\tif (this._layoutInfo.layoutState === CellLayoutState.Uninitialized) {\n\t\t\treturn 100;\n\t\t} else {\n\t\t\treturn this._layoutInfo.totalHeight;\n\t\t}\n\t}\n\n\tprotected onDidChangeTextModelContent(): void {\n\t\tthis._onDidChangeState.fire({ contentChanged: true });\n\t}\n\n\tonDeselect() {}\n\n\tprivate readonly _hasFindResult = this._register(new Emitter<boolean>());\n\tpublic readonly hasFindResult: Event<boolean> = this._hasFindResult.event;\n\n\tstartFind(\n\t\tvalue: string,\n\t\toptions: INotebookFindOptions,\n\t): CellFindMatch | null {\n\t\tconst matches = super.cellStartFind(value, options);\n\n\t\tif (matches === null) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tcell: this,\n\t\t\tcontentMatches: matches,\n\t\t};\n\t}\n\n\toverride dispose() {\n\t\tsuper.dispose();\n\t\t(this.foldingDelegate as any) = null;\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,eAA2B;AACpC,YAAY,UAAU;AACtB,SAAS,0BAA0B;AAEnC,SAAS,yBAAyB;AAClC,SAAS,6BAA6B;AACtC,SAAS,wBAAwB;AAEjC;AAAA,EACC;AAAA,OAEM;AACP;AAAA,EACC;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,OAMM;AAEP;AAAA,EACC;AAAA,OAEM;AACP,SAAS,yBAAyB;AAG3B,IAAM,sBAAN,cACE,kBAET;AAAA,EAmGC,YACC,UACA,OACA,2BACS,iBACA,aACc,sBACJ,kBACD,iBACE,mBACnB;AACD;AAAA,MACC;AAAA,MACA;AAAA,MACA,KAAK,aAAa;AAAA,MAClB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAhBS;AACA;AAiBT,UAAM,EAAE,iBAAiB,IACxB,KAAK,YAAY,gBAAgB;AAAA,MAChC,KAAK;AAAA,IACN;AAED,SAAK,cAAc;AAAA,MAClB,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,eAAe;AAAA,MACf,UAAU,2BAA2B,YAAY;AAAA,MACjD,aAAa,2BAA2B,QACrC,KAAK,YAAY,gBAAgB;AAAA,QACjC,0BAA0B;AAAA,MAC3B,IACC;AAAA,MACH,eAAe;AAAA,MACf,eAAe;AAAA,MACf,qBAAqB;AAAA,MACrB,aAAa;AAAA,MACb,aAAa,gBAAgB;AAAA,MAC7B,gBAAgB;AAAA,MAChB,iBAAiB;AAAA,IAClB;AAEA,SAAK;AAAA,MACJ,KAAK,iBAAiB,CAAC,MAAM;AAC5B,aAAK,YAAY,gBAAgB,KAAK;AAAA,UACrC,IAAI,8BAA8B,GAAG,KAAK,KAAK;AAAA,QAChD,CAAC;AAED,YAAI,EAAE,qBAAqB;AAC1B,eAAK;AAAA,YACJ,KAAK,oBAAoB;AAAA,YACzB,kBAAkB;AAAA,UACnB;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAvMD,OAwCA;AAAA;AAAA;AAAA,EACU,WAAW,SAAS;AAAA,EAErB;AAAA,EAEA;AAAA,EAER,IAAW,eAAmC;AAC7C,WAAO,KAAK;AAAA,EACb;AAAA,EACA,IAAW,aAAa,OAA2B;AAClD,QAAI,KAAK,kBAAkB,OAAO;AACjC,WAAK,gBAAgB;AACrB,WAAK,kBAAkB,KAAK,EAAE,gBAAgB,KAAK,CAAC;AAAA,IACrD;AAAA,EACD;AAAA,EAEA,IAAI,aAAa;AAChB,WAAO,KAAK;AAAA,EACb;AAAA,EAEQ,iBAAiB;AAAA,EAEzB,IAAI,uBAAuB,WAAmB;AAC7C,SAAK,iBAAiB;AACtB,SAAK,mBAAmB,KAAK,oBAAoB,CAAC;AAAA,EACnD;AAAA,EAEQ,cAAc;AAAA,EAEtB,IAAI,WAAW,WAAmB;AACjC,SAAK,cAAc;AACnB,SAAK,mBAAmB,KAAK,oBAAoB,CAAC;AAAA,EACnD;AAAA,EAEA,IAAI,aAAa;AAChB,WAAO,KAAK;AAAA,EACb;AAAA,EAEQ,gBAAgB;AAAA,EAChB,mBAAmB;AAAA,EAC3B,IAAI,aAAa,WAAmB;AACnC,SAAK,gBAAgB;AACrB,SAAK,mBACJ,KAAK,YAAY,gBAAgB,uBAAuB;AACzD,SAAK,mBAAmB,KAAK,oBAAoB,CAAC;AAAA,EACnD;AAAA,EAEA,IAAI,eAAe;AAClB,UAAM,IAAI,MAAM,kDAAkD;AAAA,EACnE;AAAA,EAEmB,qBAAqB,KAAK;AAAA,IAC5C,IAAI,QAAqC;AAAA,EAC1C;AAAA,EACS,oBAAoB,KAAK,mBAAmB;AAAA,EAErD,IAAI,eAAe;AAClB,WAAO,KAAK,gBAAgB;AAAA,MAC3B,KAAK,gBAAgB,aAAa,IAAI;AAAA,IACvC;AAAA,EACD;AAAA,EAEQ,kBAAkB;AAAA,EAC1B,IAAW,kBAA2B;AACrC,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAW,gBAAgB,GAAY;AACtC,SAAK,kBAAkB;AAAA,EACxB;AAAA,EAEQ,iBAAiB;AAAA,EACzB,IAAW,kBAA2B;AACrC,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAW,gBAAgB,GAAY;AACtC,SAAK,iBAAiB;AAAA,EACvB;AAAA,EAEA,IAAW,yBAAkC;AAC5C,WAAO;AAAA,EACR;AAAA,EAEA,IAAW,uBAAuB,GAAY;AAAA,EAE9C;AAAA,EAEQ,gBAAgB;AAAA,EACxB,IAAW,gBAAyB;AACnC,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAW,cAAc,GAAY;AACpC,SAAK,gBAAgB;AACrB,SAAK,kBAAkB,KAAK,EAAE,sBAAsB,KAAK,CAAC;AAAA,EAC3D;AAAA,EAgEQ,sBAA8B;AACrC,UAAM,sBACL,KAAK,YAAY,gBAAgB,uBAAuB;AACzD,UAAM,EAAE,iBAAiB,IACxB,KAAK,YAAY,gBAAgB;AAAA,MAChC,KAAK;AAAA,IACN;AACD,UAAM,iBAAiB,KAAK,uBAAuB;AAEnD,QAAI,KAAK,aAAa,MAAM,cAAc,SAAS;AAClD,aACC,KAAK,gBACL,oBAAoB,wBACpB,oBAAoB,2BACpB,mBACA,KAAK,mBACL,KAAK;AAAA,IAEP,OAAO;AAKN,aAAO,KAAK;AAAA,QACX;AAAA,QACA,KAAK,iBACJ,mBACA,iBACA,KAAK;AAAA,MACP;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,yBAAiC;AACxC,WAAO,KAAK,aAAa,MAAM,cAAc,WAC5C,KAAK,iBAAiB,iBAAiB,YACrC,IACA,KAAK,YAAY,gBAAgB,uBAAuB,EACvD;AAAA,EACL;AAAA,EAEA,cAAc,GAA+B;AAC5C,QACC,EAAE,2BACF,EAAE,yBACF,EAAE,qBACD;AACD,WAAK,mBAAmB,KAAK,oBAAoB,CAAC;AAAA,IACnD;AAAA,EACD;AAAA;AAAA;AAAA;AAAA,EAKA,oBAA4C,CAAC;AAAA,EAC7C,gBAAgB,OAAuB;AAEtC,WAAO;AAAA,EACR;AAAA,EACA,mBAAmB,OAAe,QAAsB;AAAA,EAExD;AAAA,EAEA,4BAA4B;AAC3B,SAAK,kBAAkB,KAAK,EAAE,qBAAqB,KAAK,CAAC;AAAA,EAC1D;AAAA,EAEQ,mBAAmB,WAAmB,SAA6B;AAC1E,QAAI,cAAc,KAAK,WAAW,aAAa;AAC9C,WAAK,aAAa,EAAE,aAAa,WAAW,QAAQ,CAAC;AAAA,IACtD;AAAA,EACD;AAAA,EAEA,aAAa,OAAoC;AAChD,QAAI;AACJ,QAAI;AACJ,QAAI,KAAK,kBAAkB;AAC1B,oBACC,KAAK,YAAY,gBAAgB;AAAA,QAChC,KAAK;AAAA,MACN;AACD,YAAM,cAAc;AAEpB,uBAAiB;AAAA,IAClB,OAAO;AACN,oBACC,MAAM,gBAAgB,SACnB,KAAK,YAAY,gBAClB,gBAAgB,gBACd,MACA,KAAK,YAAY,cAClB,MAAM;AAEV,uBAAiB,KAAK,uBAAuB;AAAA,IAC9C;AACA,QAAI;AACJ,QAAI,KAAK,aAAa,MAAM,cAAc,SAAS;AAClD,YAAM,8BACL,KAAK,YAAY,gBAAgB,uBAAuB;AACzD,sBACC,4BAA4B,sBAC5B,4BAA4B;AAAA,MAC5B,KAAK,cACL,KAAK,gBACL,KAAK;AAAA,IACP,OAAO;AACN,sBAAgB,KAAK;AAAA,IACtB;AAEA,SAAK,cAAc;AAAA,MAClB,UAAU,MAAM,QAAQ,KAAK,YAAY;AAAA,MACzC,aACC,MAAM,eAAe,SAClB,KAAK,YAAY,gBAAgB;AAAA,QACjC,MAAM;AAAA,MACP,IACC,KAAK,YAAY;AAAA,MACrB,YAAY,KAAK;AAAA,MACjB,cAAc,KAAK;AAAA,MACnB,iBAAiB,KAAK;AAAA,MACtB,eAAe,KAAK;AAAA,MACpB,qBACC,KAAK,YAAY,gBAAgB;AAAA,QAChC;AAAA,QACA,KAAK;AAAA,MACN;AAAA,MACD;AAAA,MACA,aAAa,gBAAgB;AAAA,MAC7B;AAAA,MACA;AAAA,MACA,eAAe,MAAM,gBAClB,KAAK,iBACL,KAAK,YAAY;AAAA,IACrB;AAEA,SAAK,mBAAmB,KAAK,KAAK;AAAA,EACnC;AAAA,EAES,uBACR,kBACA,aACC;AACD,UAAM,uBAAuB,gBAAgB;AAE7C,QACC,gBAAgB,UAChB,KAAK,WAAW,gBAAgB,gBAAgB,eAC/C;AACD,WAAK,cAAc;AAAA,QAClB,GAAG,KAAK;AAAA,QACR;AAAA,QACA,YAAY,KAAK;AAAA,QACjB,cAAc,KAAK;AAAA,QACnB,iBAAiB,KAAK;AAAA,QACtB,aAAa,gBAAgB;AAAA,MAC9B;AACA,WAAK,aAAa,CAAC,CAAC;AAAA,IACrB;AAAA,EACD;AAAA,EAEA,mBAAmB;AAClB,WAAO;AAAA,EACR;AAAA,EAEA,UAAU,YAAoB;AAC7B,QAAI,KAAK,YAAY,gBAAgB,gBAAgB,eAAe;AACnE,aAAO;AAAA,IACR,OAAO;AACN,aAAO,KAAK,YAAY;AAAA,IACzB;AAAA,EACD;AAAA,EAEU,8BAAoC;AAC7C,SAAK,kBAAkB,KAAK,EAAE,gBAAgB,KAAK,CAAC;AAAA,EACrD;AAAA,EAEA,aAAa;AAAA,EAAC;AAAA,EAEG,iBAAiB,KAAK,UAAU,IAAI,QAAiB,CAAC;AAAA,EACvD,gBAAgC,KAAK,eAAe;AAAA,EAEpE,UACC,OACA,SACuB;AACvB,UAAM,UAAU,MAAM,cAAc,OAAO,OAAO;AAElD,QAAI,YAAY,MAAM;AACrB,aAAO;AAAA,IACR;AAEA,WAAO;AAAA,MACN,MAAM;AAAA,MACN,gBAAgB;AAAA,IACjB;AAAA,EACD;AAAA,EAES,UAAU;AAClB,UAAM,QAAQ;AACd,IAAC,KAAK,kBAA0B;AAAA,EACjC;AACD;AA7Wa,sBAAN;AAAA,EA4GJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GA/GU;",
  "names": []
}
