{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/services/notebookLoggingServiceImpl.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from \"../../../../../base/common/lifecycle.js\";\nimport * as nls from \"../../../../../nls.js\";\nimport {\n\ttype ILogger,\n\tILoggerService,\n} from \"../../../../../platform/log/common/log.js\";\nimport type { INotebookLoggingService } from \"../../common/notebookLoggingService.js\";\n\nconst logChannelId = \"notebook.rendering\";\n\nexport class NotebookLoggingService\n\textends Disposable\n\timplements INotebookLoggingService\n{\n\t_serviceBrand: undefined;\n\n\tstatic ID = \"notebook\";\n\tprivate readonly _logger: ILogger;\n\n\tconstructor(@ILoggerService loggerService: ILoggerService) {\n\t\tsuper();\n\t\tthis._logger = this._register(\n\t\t\tloggerService.createLogger(logChannelId, {\n\t\t\t\tname: nls.localize(\"renderChannelName\", \"Notebook\"),\n\t\t\t}),\n\t\t);\n\t}\n\n\tdebug(category: string, output: string): void {\n\t\tthis._logger.debug(`[${category}] ${output}`);\n\t}\n\n\tinfo(category: string, output: string): void {\n\t\tthis._logger.info(`[${category}] ${output}`);\n\t}\n\n\twarn(category: string, output: string): void {\n\t\tthis._logger.warn(`[${category}] ${output}`);\n\t}\n\n\terror(category: string, output: string): void {\n\t\tthis._logger.error(`[${category}] ${output}`);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,kBAAkB;AAC3B,YAAY,SAAS;AACrB;AAAA,EAEC;AAAA,OACM;AAGP,MAAM,eAAe;AAEd,IAAM,yBAAN,cACE,WAET;AAAA,EAlBA,OAkBA;AAAA;AAAA;AAAA,EACC;AAAA,EAEA,OAAO,KAAK;AAAA,EACK;AAAA,EAEjB,YAA4B,eAA+B;AAC1D,UAAM;AACN,SAAK,UAAU,KAAK;AAAA,MACnB,cAAc,aAAa,cAAc;AAAA,QACxC,MAAM,IAAI,SAAS,qBAAqB,UAAU;AAAA,MACnD,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAEA,MAAM,UAAkB,QAAsB;AAC7C,SAAK,QAAQ,MAAM,IAAI,QAAQ,KAAK,MAAM,EAAE;AAAA,EAC7C;AAAA,EAEA,KAAK,UAAkB,QAAsB;AAC5C,SAAK,QAAQ,KAAK,IAAI,QAAQ,KAAK,MAAM,EAAE;AAAA,EAC5C;AAAA,EAEA,KAAK,UAAkB,QAAsB;AAC5C,SAAK,QAAQ,KAAK,IAAI,QAAQ,KAAK,MAAM,EAAE;AAAA,EAC5C;AAAA,EAEA,MAAM,UAAkB,QAAsB;AAC7C,SAAK,QAAQ,MAAM,IAAI,QAAQ,KAAK,MAAM,EAAE;AAAA,EAC7C;AACD;AAjCa,yBAAN;AAAA,EASO;AAAA,GATD;",
  "names": []
}
