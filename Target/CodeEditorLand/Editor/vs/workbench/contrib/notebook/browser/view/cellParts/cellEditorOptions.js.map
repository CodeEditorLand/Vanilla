{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/view/cellParts/cellEditorOptions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from '../../../../../../base/common/event.js';\nimport { URI } from '../../../../../../base/common/uri.js';\nimport { IEditorOptions } from '../../../../../../editor/common/config/editorOptions.js';\nimport { localize, localize2 } from '../../../../../../nls.js';\nimport { Action2, MenuId, registerAction2 } from '../../../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../../../platform/configuration/common/configuration.js';\nimport { Extensions as ConfigurationExtensions, IConfigurationRegistry } from '../../../../../../platform/configuration/common/configurationRegistry.js';\nimport { ContextKeyExpr } from '../../../../../../platform/contextkey/common/contextkey.js';\nimport { ServicesAccessor } from '../../../../../../platform/instantiation/common/instantiation.js';\nimport { Registry } from '../../../../../../platform/registry/common/platform.js';\nimport { ActiveEditorContext } from '../../../../../common/contextkeys.js';\nimport { INotebookCellToolbarActionContext, INotebookCommandContext, NotebookMultiCellAction, NOTEBOOK_ACTIONS_CATEGORY } from '../../controller/coreActions.js';\nimport { IBaseCellEditorOptions, ICellViewModel } from '../../notebookBrowser.js';\nimport { NOTEBOOK_CELL_LINE_NUMBERS, NOTEBOOK_EDITOR_FOCUSED } from '../../../common/notebookContextKeys.js';\nimport { CellContentPart } from '../cellPart.js';\nimport { NotebookCellInternalMetadata, NOTEBOOK_EDITOR_ID } from '../../../common/notebookCommon.js';\nimport { NotebookOptions } from '../../notebookOptions.js';\nimport { CellViewModelStateChangeEvent } from '../../notebookViewEvents.js';\nimport { ITextModelUpdateOptions } from '../../../../../../editor/common/model.js';\n\n//todo@Yoyokrazy implenets is needed or not?\nexport class CellEditorOptions extends CellContentPart implements ITextModelUpdateOptions {\n\tprivate _lineNumbers: 'on' | 'off' | 'inherit' = 'inherit';\n\tprivate _tabSize?: number;\n\tprivate _indentSize?: number | 'tabSize';\n\tprivate _insertSpaces?: boolean;\n\n\tset tabSize(value: number | undefined) {\n\t\tif (this._tabSize !== value) {\n\t\t\tthis._tabSize = value;\n\t\t\tthis._onDidChange.fire();\n\t\t}\n\t}\n\n\tget tabSize() {\n\t\treturn this._tabSize;\n\t}\n\n\tset indentSize(value: number | 'tabSize' | undefined) {\n\t\tif (this._indentSize !== value) {\n\t\t\tthis._indentSize = value;\n\t\t\tthis._onDidChange.fire();\n\t\t}\n\t}\n\n\tget indentSize() {\n\t\treturn this._indentSize;\n\t}\n\n\tset insertSpaces(value: boolean | undefined) {\n\t\tif (this._insertSpaces !== value) {\n\t\t\tthis._insertSpaces = value;\n\t\t\tthis._onDidChange.fire();\n\t\t}\n\t}\n\n\tget insertSpaces() {\n\t\treturn this._insertSpaces;\n\t}\n\n\tprivate readonly _onDidChange = this._register(new Emitter<void>());\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\tprivate _value: IEditorOptions;\n\n\tconstructor(\n\t\tprivate readonly base: IBaseCellEditorOptions,\n\t\treadonly notebookOptions: NotebookOptions,\n\t\treadonly configurationService: IConfigurationService) {\n\t\tsuper();\n\n\t\tthis._register(base.onDidChange(() => {\n\t\t\tthis._recomputeOptions();\n\t\t}));\n\n\t\tthis._value = this._computeEditorOptions();\n\t}\n\n\toverride updateState(element: ICellViewModel, e: CellViewModelStateChangeEvent) {\n\t\tif (e.cellLineNumberChanged) {\n\t\t\tthis.setLineNumbers(element.lineNumbers);\n\t\t}\n\t}\n\n\tprivate _recomputeOptions(): void {\n\t\tthis._value = this._computeEditorOptions();\n\t\tthis._onDidChange.fire();\n\t}\n\n\tprivate _computeEditorOptions() {\n\t\tconst value = this.base.value; // base IEditorOptions\n\n\t\t// TODO @Yoyokrazy find a different way to get the editor overrides, this is not the right way\n\t\tconst cellEditorOverridesRaw = this.notebookOptions.getDisplayOptions().editorOptionsCustomizations;\n\t\tconst indentSize = cellEditorOverridesRaw?.['editor.indentSize'];\n\t\tif (indentSize !== undefined) {\n\t\t\tthis.indentSize = indentSize;\n\t\t}\n\t\tconst insertSpaces = cellEditorOverridesRaw?.['editor.insertSpaces'];\n\t\tif (insertSpaces !== undefined) {\n\t\t\tthis.insertSpaces = insertSpaces;\n\t\t}\n\t\tconst tabSize = cellEditorOverridesRaw?.['editor.tabSize'];\n\t\tif (tabSize !== undefined) {\n\t\t\tthis.tabSize = tabSize;\n\t\t}\n\n\t\tlet cellRenderLineNumber = value.lineNumbers;\n\n\t\tswitch (this._lineNumbers) {\n\t\t\tcase 'inherit':\n\t\t\t\t// inherit from the notebook setting\n\t\t\t\tif (this.configurationService.getValue<'on' | 'off'>('notebook.lineNumbers') === 'on') {\n\t\t\t\t\tif (value.lineNumbers === 'off') {\n\t\t\t\t\t\tcellRenderLineNumber = 'on';\n\t\t\t\t\t} // otherwise just use the editor setting\n\t\t\t\t} else {\n\t\t\t\t\tcellRenderLineNumber = 'off';\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'on':\n\t\t\t\t// should turn on, ignore the editor line numbers off options\n\t\t\t\tif (value.lineNumbers === 'off') {\n\t\t\t\t\tcellRenderLineNumber = 'on';\n\t\t\t\t} // otherwise just use the editor setting\n\t\t\t\tbreak;\n\t\t\tcase 'off':\n\t\t\t\tcellRenderLineNumber = 'off';\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (value.lineNumbers !== cellRenderLineNumber) {\n\t\t\treturn {\n\t\t\t\t...value,\n\t\t\t\t...{ lineNumbers: cellRenderLineNumber }\n\t\t\t};\n\t\t} else {\n\t\t\treturn Object.assign({}, value);\n\t\t}\n\t}\n\n\tgetUpdatedValue(internalMetadata: NotebookCellInternalMetadata, cellUri: URI): IEditorOptions {\n\t\tconst options = this.getValue(internalMetadata, cellUri);\n\t\tdelete options.hover; // This is toggled by a debug editor contribution\n\n\t\treturn options;\n\t}\n\n\tgetValue(internalMetadata: NotebookCellInternalMetadata, cellUri: URI): IEditorOptions {\n\t\treturn {\n\t\t\t...this._value,\n\t\t\t...{\n\t\t\t\tpadding: this.notebookOptions.computeEditorPadding(internalMetadata, cellUri)\n\t\t\t}\n\t\t};\n\t}\n\n\tgetDefaultValue(): IEditorOptions {\n\t\treturn {\n\t\t\t...this._value,\n\t\t\t...{\n\t\t\t\tpadding: { top: 12, bottom: 12 }\n\t\t\t}\n\t\t};\n\t}\n\n\tsetLineNumbers(lineNumbers: 'on' | 'off' | 'inherit'): void {\n\t\tthis._lineNumbers = lineNumbers;\n\t\tthis._recomputeOptions();\n\t}\n}\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).registerConfiguration({\n\tid: 'notebook',\n\torder: 100,\n\ttype: 'object',\n\t'properties': {\n\t\t'notebook.lineNumbers': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['off', 'on'],\n\t\t\tdefault: 'off',\n\t\t\tmarkdownDescription: localize('notebook.lineNumbers', \"Controls the display of line numbers in the cell editor.\")\n\t\t}\n\t}\n});\n\nregisterAction2(class ToggleLineNumberAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'notebook.toggleLineNumbers',\n\t\t\ttitle: localize2('notebook.toggleLineNumbers', 'Toggle Notebook Line Numbers'),\n\t\t\tprecondition: NOTEBOOK_EDITOR_FOCUSED,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.NotebookToolbar,\n\t\t\t\t\tgroup: 'notebookLayout',\n\t\t\t\t\torder: 2,\n\t\t\t\t\twhen: ContextKeyExpr.equals('config.notebook.globalToolbar', true)\n\t\t\t\t}],\n\t\t\tcategory: NOTEBOOK_ACTIONS_CATEGORY,\n\t\t\tf1: true,\n\t\t\ttoggled: {\n\t\t\t\tcondition: ContextKeyExpr.notEquals('config.notebook.lineNumbers', 'off'),\n\t\t\t\ttitle: localize('notebook.showLineNumbers', \"Notebook Line Numbers\"),\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst renderLiNumbers = configurationService.getValue<'on' | 'off'>('notebook.lineNumbers') === 'on';\n\n\t\tif (renderLiNumbers) {\n\t\t\tconfigurationService.updateValue('notebook.lineNumbers', 'off');\n\t\t} else {\n\t\t\tconfigurationService.updateValue('notebook.lineNumbers', 'on');\n\t\t}\n\t}\n});\n\nregisterAction2(class ToggleActiveLineNumberAction extends NotebookMultiCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'notebook.cell.toggleLineNumbers',\n\t\t\ttitle: localize('notebook.cell.toggleLineNumbers.title', \"Show Cell Line Numbers\"),\n\t\t\tprecondition: ActiveEditorContext.isEqualTo(NOTEBOOK_EDITOR_ID),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\tgroup: 'View',\n\t\t\t\torder: 1\n\t\t\t}],\n\t\t\ttoggled: ContextKeyExpr.or(\n\t\t\t\tNOTEBOOK_CELL_LINE_NUMBERS.isEqualTo('on'),\n\t\t\t\tContextKeyExpr.and(NOTEBOOK_CELL_LINE_NUMBERS.isEqualTo('inherit'), ContextKeyExpr.equals('config.notebook.lineNumbers', 'on'))\n\t\t\t)\n\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext | INotebookCellToolbarActionContext): Promise<void> {\n\t\tif (context.ui) {\n\t\t\tthis.updateCell(accessor.get(IConfigurationService), context.cell);\n\t\t} else {\n\t\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\t\tcontext.selectedCells.forEach(cell => {\n\t\t\t\tthis.updateCell(configurationService, cell);\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate updateCell(configurationService: IConfigurationService, cell: ICellViewModel) {\n\t\tconst renderLineNumbers = configurationService.getValue<'on' | 'off'>('notebook.lineNumbers') === 'on';\n\t\tconst cellLineNumbers = cell.lineNumbers;\n\t\t// 'on', 'inherit' \t-> 'on'\n\t\t// 'on', 'off'\t\t-> 'off'\n\t\t// 'on', 'on'\t\t-> 'on'\n\t\t// 'off', 'inherit'\t-> 'off'\n\t\t// 'off', 'off'\t\t-> 'off'\n\t\t// 'off', 'on'\t\t-> 'on'\n\t\tconst currentLineNumberIsOn = cellLineNumbers === 'on' || (cellLineNumbers === 'inherit' && renderLineNumbers);\n\n\t\tif (currentLineNumberIsOn) {\n\t\t\tcell.lineNumbers = 'off';\n\t\t} else {\n\t\t\tcell.lineNumbers = 'on';\n\t\t}\n\n\t}\n});\n"],
  "mappings": "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",
  "names": []
}
