{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/diff/notebookMultiDiffEditorInput.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from \"../../../../../base/common/uri.js\";\nimport { ITextModelService } from \"../../../../../editor/common/services/resolverService.js\";\nimport { ITextResourceConfigurationService } from \"../../../../../editor/common/services/textResourceConfiguration.js\";\nimport { IInstantiationService } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport { ITextFileService } from \"../../../../services/textfile/common/textfiles.js\";\nimport { MultiDiffEditorInput } from \"../../../multiDiffEditor/browser/multiDiffEditorInput.js\";\nimport {\n\ttype IMultiDiffSourceResolver,\n\tIMultiDiffSourceResolverService,\n\ttype IResolvedMultiDiffSource,\n} from \"../../../multiDiffEditor/browser/multiDiffSourceResolverService.js\";\nimport { NotebookDiffEditorInput } from \"../../common/notebookDiffEditorInput.js\";\nimport { NotebookEditorInput } from \"../../common/notebookEditorInput.js\";\nimport type { NotebookDiffViewModel } from \"./notebookDiffViewModel.js\";\n\nexport const NotebookMultiDiffEditorScheme = \"multi-cell-notebook-diff-editor\";\n\nexport class NotebookMultiDiffEditorInput extends NotebookDiffEditorInput {\n\tstatic override readonly ID: string =\n\t\t\"workbench.input.multiDiffNotebookInput\";\n\tstatic override create(\n\t\tinstantiationService: IInstantiationService,\n\t\tresource: URI,\n\t\tname: string | undefined,\n\t\tdescription: string | undefined,\n\t\toriginalResource: URI,\n\t\tviewType: string,\n\t) {\n\t\tconst original = NotebookEditorInput.getOrCreate(\n\t\t\tinstantiationService,\n\t\t\toriginalResource,\n\t\t\tundefined,\n\t\t\tviewType,\n\t\t);\n\t\tconst modified = NotebookEditorInput.getOrCreate(\n\t\t\tinstantiationService,\n\t\t\tresource,\n\t\t\tundefined,\n\t\t\tviewType,\n\t\t);\n\t\treturn instantiationService.createInstance(\n\t\t\tNotebookMultiDiffEditorInput,\n\t\t\tname,\n\t\t\tdescription,\n\t\t\toriginal,\n\t\t\tmodified,\n\t\t\tviewType,\n\t\t);\n\t}\n}\n\nexport class NotebookMultiDiffEditorWidgetInput\n\textends MultiDiffEditorInput\n\timplements IMultiDiffSourceResolver\n{\n\tpublic static createInput(\n\t\tnotebookDiffViewModel: NotebookDiffViewModel,\n\t\tinstantiationService: IInstantiationService,\n\t): NotebookMultiDiffEditorWidgetInput {\n\t\tconst multiDiffSource = URI.parse(\n\t\t\t`${NotebookMultiDiffEditorScheme}:${new Date().getMilliseconds().toString() + Math.random().toString()}`,\n\t\t);\n\t\treturn instantiationService.createInstance(\n\t\t\tNotebookMultiDiffEditorWidgetInput,\n\t\t\tmultiDiffSource,\n\t\t\tnotebookDiffViewModel,\n\t\t);\n\t}\n\tconstructor(\n\t\tmultiDiffSource: URI,\n\t\tprivate readonly notebookDiffViewModel: NotebookDiffViewModel,\n\t\t@ITextModelService _textModelService: ITextModelService,\n\t\t@ITextResourceConfigurationService _textResourceConfigurationService: ITextResourceConfigurationService,\n\t\t@IInstantiationService _instantiationService: IInstantiationService,\n\t\t@IMultiDiffSourceResolverService _multiDiffSourceResolverService: IMultiDiffSourceResolverService,\n\t\t@ITextFileService _textFileService: ITextFileService,\n\t) {\n\t\tsuper(\n\t\t\tmultiDiffSource,\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\ttrue,\n\t\t\t_textModelService,\n\t\t\t_textResourceConfigurationService,\n\t\t\t_instantiationService,\n\t\t\t_multiDiffSourceResolverService,\n\t\t\t_textFileService,\n\t\t);\n\t\tthis._register(_multiDiffSourceResolverService.registerResolver(this));\n\t}\n\n\tcanHandleUri(uri: URI): boolean {\n\t\treturn uri.toString() === this.multiDiffSource.toString();\n\t}\n\n\tasync resolveDiffSource(_: URI): Promise<IResolvedMultiDiffSource> {\n\t\treturn { resources: this.notebookDiffViewModel };\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,WAAW;AACpB,SAAS,yBAAyB;AAClC,SAAS,yCAAyC;AAClD,SAAS,6BAA6B;AACtC,SAAS,wBAAwB;AACjC,SAAS,4BAA4B;AACrC;AAAA,EAEC;AAAA,OAEM;AACP,SAAS,+BAA+B;AACxC,SAAS,2BAA2B;AAG7B,MAAM,gCAAgC;AAEtC,MAAM,qCAAqC,wBAAwB;AAAA,EAtB1E,OAsB0E;AAAA;AAAA;AAAA,EACzE,OAAyB,KACxB;AAAA,EACD,OAAgB,OACf,sBACA,UACA,MACA,aACA,kBACA,UACC;AACD,UAAM,WAAW,oBAAoB;AAAA,MACpC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AACA,UAAM,WAAW,oBAAoB;AAAA,MACpC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AACA,WAAO,qBAAqB;AAAA,MAC3B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AAEO,IAAM,qCAAN,cACE,qBAET;AAAA,EAcC,YACC,iBACiB,uBACE,mBACgB,mCACZ,uBACU,iCACf,kBACjB;AACD;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAjBiB;AAkBjB,SAAK,UAAU,gCAAgC,iBAAiB,IAAI,CAAC;AAAA,EACtE;AAAA,EA9FD,OA2DA;AAAA;AAAA;AAAA,EACC,OAAc,YACb,uBACA,sBACqC;AACrC,UAAM,kBAAkB,IAAI;AAAA,MAC3B,GAAG,6BAA6B,KAAI,oBAAI,KAAK,GAAE,gBAAgB,EAAE,SAAS,IAAI,KAAK,OAAO,EAAE,SAAS,CAAC;AAAA,IACvG;AACA,WAAO,qBAAqB;AAAA,MAC3B;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAAA,EAwBA,aAAa,KAAmB;AAC/B,WAAO,IAAI,SAAS,MAAM,KAAK,gBAAgB,SAAS;AAAA,EACzD;AAAA,EAEA,MAAM,kBAAkB,GAA2C;AAClE,WAAO,EAAE,WAAW,KAAK,sBAAsB;AAAA,EAChD;AACD;AA/Ca,qCAAN;AAAA,EAoBJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAxBU;",
  "names": []
}
