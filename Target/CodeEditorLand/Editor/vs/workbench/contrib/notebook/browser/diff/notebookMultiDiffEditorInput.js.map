{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/diff/notebookMultiDiffEditorInput.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from '../../../../../base/common/uri.js';\nimport { ITextModelService } from '../../../../../editor/common/services/resolverService.js';\nimport { ITextResourceConfigurationService } from '../../../../../editor/common/services/textResourceConfiguration.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { MultiDiffEditorInput } from '../../../multiDiffEditor/browser/multiDiffEditorInput.js';\nimport { IMultiDiffSourceResolverService, IResolvedMultiDiffSource, type IMultiDiffSourceResolver } from '../../../multiDiffEditor/browser/multiDiffSourceResolverService.js';\nimport { NotebookDiffViewModel } from './notebookDiffViewModel.js';\nimport { NotebookDiffEditorInput } from '../../common/notebookDiffEditorInput.js';\nimport { NotebookEditorInput } from '../../common/notebookEditorInput.js';\nimport { ITextFileService } from '../../../../services/textfile/common/textfiles.js';\n\nexport const NotebookMultiDiffEditorScheme = 'multi-cell-notebook-diff-editor';\n\nexport class NotebookMultiDiffEditorInput extends NotebookDiffEditorInput {\n\tstatic override readonly ID: string = 'workbench.input.multiDiffNotebookInput';\n\tstatic override create(instantiationService: IInstantiationService, resource: URI, name: string | undefined, description: string | undefined, originalResource: URI, viewType: string) {\n\t\tconst original = NotebookEditorInput.getOrCreate(instantiationService, originalResource, undefined, viewType);\n\t\tconst modified = NotebookEditorInput.getOrCreate(instantiationService, resource, undefined, viewType);\n\t\treturn instantiationService.createInstance(NotebookMultiDiffEditorInput, name, description, original, modified, viewType);\n\t}\n}\n\nexport class NotebookMultiDiffEditorWidgetInput extends MultiDiffEditorInput implements IMultiDiffSourceResolver {\n\tpublic static createInput(notebookDiffViewModel: NotebookDiffViewModel, instantiationService: IInstantiationService): NotebookMultiDiffEditorWidgetInput {\n\t\tconst multiDiffSource = URI.parse(`${NotebookMultiDiffEditorScheme}:${new Date().getMilliseconds().toString() + Math.random().toString()}`);\n\t\treturn instantiationService.createInstance(\n\t\t\tNotebookMultiDiffEditorWidgetInput,\n\t\t\tmultiDiffSource,\n\t\t\tnotebookDiffViewModel\n\t\t);\n\t}\n\tconstructor(\n\t\tmultiDiffSource: URI,\n\t\tprivate readonly notebookDiffViewModel: NotebookDiffViewModel,\n\t\t@ITextModelService _textModelService: ITextModelService,\n\t\t@ITextResourceConfigurationService _textResourceConfigurationService: ITextResourceConfigurationService,\n\t\t@IInstantiationService _instantiationService: IInstantiationService,\n\t\t@IMultiDiffSourceResolverService _multiDiffSourceResolverService: IMultiDiffSourceResolverService,\n\t\t@ITextFileService _textFileService: ITextFileService,\n\t) {\n\t\tsuper(multiDiffSource, undefined, undefined, true, _textModelService, _textResourceConfigurationService, _instantiationService, _multiDiffSourceResolverService, _textFileService);\n\t\tthis._register(_multiDiffSourceResolverService.registerResolver(this));\n\t}\n\n\tcanHandleUri(uri: URI): boolean {\n\t\treturn uri.toString() === this.multiDiffSource.toString();\n\t}\n\n\tasync resolveDiffSource(_: URI): Promise<IResolvedMultiDiffSource> {\n\t\treturn { resources: this.notebookDiffViewModel };\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,WAAW;AACpB,SAAS,yBAAyB;AAClC,SAAS,yCAAyC;AAClD,SAAS,6BAA6B;AACtC,SAAS,4BAA4B;AACrC,SAAS,iCAAiC,gCAA+D;AACzG,SAAS,6BAA6B;AACtC,SAAS,+BAA+B;AACxC,SAAS,2BAA2B;AACpC,SAAS,wBAAwB;AAE1B,MAAM,gCAAgC;AAEtC,MAAM,qCAAqC,wBAAwB;AAAA,EAlB1E,OAkB0E;AAAA;AAAA;AAAA,EACzE,OAAyB,KAAa;AAAA,EACtC,OAAgB,OAAO,sBAA6C,UAAe,MAA0B,aAAiC,kBAAuB,UAAkB;AACtL,UAAM,WAAW,oBAAoB,YAAY,sBAAsB,kBAAkB,QAAW,QAAQ;AAC5G,UAAM,WAAW,oBAAoB,YAAY,sBAAsB,UAAU,QAAW,QAAQ;AACpG,WAAO,qBAAqB,eAAe,8BAA8B,MAAM,aAAa,UAAU,UAAU,QAAQ;AAAA,EACzH;AACD;AAEO,IAAM,qCAAN,cAAiD,qBAAyD;AAAA,EAShH,YACC,iBACiB,uBACE,mBACgB,mCACZ,uBACU,iCACf,kBACjB;AACD,UAAM,iBAAiB,QAAW,QAAW,MAAM,mBAAmB,mCAAmC,uBAAuB,iCAAiC,gBAAgB;AAPhK;AAQjB,SAAK,UAAU,gCAAgC,iBAAiB,IAAI,CAAC;AAAA,EACtE;AAAA,EA/CD,OA2BiH;AAAA;AAAA;AAAA,EAChH,OAAc,YAAY,uBAA8C,sBAAiF;AACxJ,UAAM,kBAAkB,IAAI,MAAM,GAAG,6BAA6B,KAAI,oBAAI,KAAK,GAAE,gBAAgB,EAAE,SAAS,IAAI,KAAK,OAAO,EAAE,SAAS,CAAC,EAAE;AAC1I,WAAO,qBAAqB;AAAA,MAC3B;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAAA,EAcA,aAAa,KAAmB;AAC/B,WAAO,IAAI,SAAS,MAAM,KAAK,gBAAgB,SAAS;AAAA,EACzD;AAAA,EAEA,MAAM,kBAAkB,GAA2C;AAClE,WAAO,EAAE,WAAW,KAAK,sBAAsB;AAAA,EAChD;AACD;AA7Ba,qCAAN;AAAA,EAYJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAhBU;",
  "names": []
}
