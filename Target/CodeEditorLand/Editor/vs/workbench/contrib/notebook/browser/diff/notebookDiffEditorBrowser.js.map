{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/diff/notebookDiffEditorBrowser.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IMouseWheelEvent } from \"../../../../../base/browser/mouseEvent.js\";\nimport type { CancellationToken } from \"../../../../../base/common/cancellation.js\";\nimport type { Event } from \"../../../../../base/common/event.js\";\nimport type {\n\tDisposableStore,\n\tIDisposable,\n} from \"../../../../../base/common/lifecycle.js\";\nimport type { CodeEditorWidget } from \"../../../../../editor/browser/widget/codeEditor/codeEditorWidget.js\";\nimport type { DiffEditorWidget } from \"../../../../../editor/browser/widget/diffEditor/diffEditorWidget.js\";\nimport type { BareFontInfo } from \"../../../../../editor/common/config/fontInfo.js\";\nimport { localize } from \"../../../../../nls.js\";\nimport type { WorkbenchToolBar } from \"../../../../../platform/actions/browser/toolbar.js\";\nimport { RawContextKey } from \"../../../../../platform/contextkey/common/contextkey.js\";\nimport type { NotebookTextModel } from \"../../common/model/notebookTextModel.js\";\nimport type {\n\tCellLayoutState,\n\tICellOutputViewModel,\n\tICommonCellInfo,\n\tIGenericCellViewModel,\n\tIInsetRenderOutput,\n} from \"../notebookBrowser.js\";\nimport type { NotebookOptions } from \"../notebookOptions.js\";\nimport type { NotebookLayoutInfo } from \"../notebookViewEvents.js\";\nimport type {\n\tDiffElementCellViewModelBase,\n\tIDiffElementViewModelBase,\n} from \"./diffElementViewModel.js\";\n\nexport enum DiffSide {\n\tOriginal = 0,\n\tModified = 1,\n}\n\nexport interface IDiffCellInfo extends ICommonCellInfo {\n\tdiffElement: DiffElementCellViewModelBase;\n}\n\nexport interface INotebookTextDiffEditor {\n\tnotebookOptions: NotebookOptions;\n\treadonly textModel?: NotebookTextModel;\n\tonMouseUp: Event<{\n\t\treadonly event: MouseEvent;\n\t\treadonly target: IDiffElementViewModelBase;\n\t}>;\n\tonDidScroll: Event<void>;\n\tonDidDynamicOutputRendered: Event<{\n\t\tcell: IGenericCellViewModel;\n\t\toutput: ICellOutputViewModel;\n\t}>;\n\tgetOverflowContainerDomNode(): HTMLElement;\n\tgetLayoutInfo(): NotebookLayoutInfo;\n\tgetScrollTop(): number;\n\tgetScrollHeight(): number;\n\tlayoutNotebookCell(cell: IDiffElementViewModelBase, height: number): void;\n\tcreateOutput(\n\t\tcellDiffViewModel: DiffElementCellViewModelBase,\n\t\tcellViewModel: IDiffNestedCellViewModel,\n\t\toutput: IInsetRenderOutput,\n\t\tgetOffset: () => number,\n\t\tdiffSide: DiffSide,\n\t): void;\n\tshowInset(\n\t\tcellDiffViewModel: DiffElementCellViewModelBase,\n\t\tcellViewModel: IDiffNestedCellViewModel,\n\t\tdisplayOutput: ICellOutputViewModel,\n\t\tdiffSide: DiffSide,\n\t): void;\n\tremoveInset(\n\t\tcellDiffViewModel: DiffElementCellViewModelBase,\n\t\tcellViewModel: IDiffNestedCellViewModel,\n\t\toutput: ICellOutputViewModel,\n\t\tdiffSide: DiffSide,\n\t): void;\n\thideInset(\n\t\tcellDiffViewModel: DiffElementCellViewModelBase,\n\t\tcellViewModel: IDiffNestedCellViewModel,\n\t\toutput: ICellOutputViewModel,\n\t): void;\n\t/**\n\t * Trigger the editor to scroll from scroll event programmatically\n\t */\n\ttriggerScroll(event: IMouseWheelEvent): void;\n\tdelegateVerticalScrollbarPointerDown(browserEvent: PointerEvent): void;\n\tgetCellByInfo(cellInfo: ICommonCellInfo): IGenericCellViewModel;\n\tfocusNotebookCell(\n\t\tcell: IGenericCellViewModel,\n\t\tfocus: \"editor\" | \"container\" | \"output\",\n\t): Promise<void>;\n\tfocusNextNotebookCell(\n\t\tcell: IGenericCellViewModel,\n\t\tfocus: \"editor\" | \"container\" | \"output\",\n\t): Promise<void>;\n\tupdateOutputHeight(\n\t\tcellInfo: ICommonCellInfo,\n\t\toutput: ICellOutputViewModel,\n\t\theight: number,\n\t\tisInit: boolean,\n\t): void;\n\tdeltaCellOutputContainerClassNames(\n\t\tdiffSide: DiffSide,\n\t\tcellId: string,\n\t\tadded: string[],\n\t\tremoved: string[],\n\t): void;\n\tpreviousChange(): void;\n\tnextChange(): void;\n}\n\nexport type IDiffNestedCellViewModel = {};\n\nexport interface CellDiffCommonRenderTemplate {\n\treadonly leftBorder: HTMLElement;\n\treadonly rightBorder: HTMLElement;\n\treadonly topBorder: HTMLElement;\n\treadonly bottomBorder: HTMLElement;\n}\n\nexport interface CellDiffPlaceholderRenderTemplate {\n\treadonly container: HTMLElement;\n\treadonly placeholder: HTMLElement;\n\treadonly body: HTMLElement;\n\treadonly marginOverlay: IDiffCellMarginOverlay;\n\treadonly elementDisposables: DisposableStore;\n}\n\nexport interface CellDiffSingleSideRenderTemplate\n\textends CellDiffCommonRenderTemplate {\n\treadonly container: HTMLElement;\n\treadonly body: HTMLElement;\n\treadonly diffEditorContainer: HTMLElement;\n\treadonly diagonalFill: HTMLElement;\n\treadonly elementDisposables: DisposableStore;\n\treadonly cellHeaderContainer: HTMLElement;\n\treadonly editorContainer: HTMLElement;\n\treadonly sourceEditor: CodeEditorWidget;\n\treadonly metadataHeaderContainer: HTMLElement;\n\treadonly metadataInfoContainer: HTMLElement;\n\treadonly outputHeaderContainer: HTMLElement;\n\treadonly outputInfoContainer: HTMLElement;\n}\n\nexport interface NotebookDocumentDiffElementRenderTemplate\n\textends CellDiffCommonRenderTemplate {\n\treadonly container: HTMLElement;\n\treadonly body: HTMLElement;\n\treadonly diffEditorContainer: HTMLElement;\n\treadonly elementDisposables: DisposableStore;\n\treadonly cellHeaderContainer: HTMLElement;\n\treadonly sourceEditor: DiffEditorWidget;\n\treadonly editorContainer: HTMLElement;\n\treadonly inputToolbarContainer: HTMLElement;\n\treadonly toolbar: WorkbenchToolBar;\n\treadonly marginOverlay: IDiffCellMarginOverlay;\n}\n\nexport interface IDiffCellMarginOverlay extends IDisposable {\n\tonAction: Event<void>;\n\tshow(): void;\n\thide(): void;\n}\n\nexport interface CellDiffSideBySideRenderTemplate\n\textends CellDiffCommonRenderTemplate {\n\treadonly container: HTMLElement;\n\treadonly body: HTMLElement;\n\treadonly diffEditorContainer: HTMLElement;\n\treadonly elementDisposables: DisposableStore;\n\treadonly cellHeaderContainer: HTMLElement;\n\treadonly sourceEditor: DiffEditorWidget;\n\treadonly editorContainer: HTMLElement;\n\treadonly inputToolbarContainer: HTMLElement;\n\treadonly toolbar: WorkbenchToolBar;\n\treadonly metadataHeaderContainer: HTMLElement;\n\treadonly metadataInfoContainer: HTMLElement;\n\treadonly outputHeaderContainer: HTMLElement;\n\treadonly outputInfoContainer: HTMLElement;\n\treadonly marginOverlay: IDiffCellMarginOverlay;\n}\n\nexport interface IDiffElementLayoutInfo {\n\ttotalHeight: number;\n\twidth: number;\n\teditorHeight: number;\n\teditorMargin: number;\n\tmetadataHeight: number;\n\tcellStatusHeight: number;\n\tmetadataStatusHeight: number;\n\trawOutputHeight: number;\n\toutputMetadataHeight: number;\n\toutputTotalHeight: number;\n\toutputStatusHeight: number;\n\tbodyMargin: number;\n\tlayoutState: CellLayoutState;\n}\n\ntype IDiffElementSelfLayoutChangeEvent = {\n\t[K in keyof IDiffElementLayoutInfo]?: boolean;\n};\n\nexport interface CellDiffViewModelLayoutChangeEvent\n\textends IDiffElementSelfLayoutChangeEvent {\n\tfont?: BareFontInfo;\n\touterWidth?: boolean;\n\tmetadataEditor?: boolean;\n\toutputEditor?: boolean;\n\toutputView?: boolean;\n}\n\nexport const DIFF_CELL_MARGIN = 16;\nexport const NOTEBOOK_DIFF_CELL_INPUT = new RawContextKey<boolean>(\n\t\"notebook.diffEditor.cell.inputChanged\",\n\tfalse,\n);\nexport const NOTEBOOK_DIFF_METADATA = new RawContextKey<boolean>(\n\t\"notebook.diffEditor.metadataChanged\",\n\tfalse,\n);\nexport const NOTEBOOK_DIFF_CELL_IGNORE_WHITESPACE_KEY =\n\t\"notebook.diffEditor.cell.ignoreWhitespace\";\nexport const NOTEBOOK_DIFF_CELL_IGNORE_WHITESPACE = new RawContextKey<boolean>(\n\tNOTEBOOK_DIFF_CELL_IGNORE_WHITESPACE_KEY,\n\tfalse,\n);\nexport const NOTEBOOK_DIFF_CELL_PROPERTY = new RawContextKey<boolean>(\n\t\"notebook.diffEditor.cell.property.changed\",\n\tfalse,\n);\nexport const NOTEBOOK_DIFF_CELL_PROPERTY_EXPANDED = new RawContextKey<boolean>(\n\t\"notebook.diffEditor.cell.property.expanded\",\n\tfalse,\n);\nexport const NOTEBOOK_DIFF_CELLS_COLLAPSED = new RawContextKey<boolean>(\n\t\"notebook.diffEditor.allCollapsed\",\n\tundefined,\n\tlocalize(\n\t\t\"notebook.diffEditor.allCollapsed\",\n\t\t\"Whether all cells in notebook diff editor are collapsed\",\n\t),\n);\nexport const NOTEBOOK_DIFF_HAS_UNCHANGED_CELLS = new RawContextKey<boolean>(\n\t\"notebook.diffEditor.hasUnchangedCells\",\n\tundefined,\n\tlocalize(\n\t\t\"notebook.diffEditor.hasUnchangedCells\",\n\t\t\"Whether there are unchanged cells in the notebook diff editor\",\n\t),\n);\nexport const NOTEBOOK_DIFF_UNCHANGED_CELLS_HIDDEN = new RawContextKey<boolean>(\n\t\"notebook.diffEditor.unchangedCellsAreHidden\",\n\tundefined,\n\tlocalize(\n\t\t\"notebook.diffEditor.unchangedCellsAreHidden\",\n\t\t\"Whether the unchanged cells in the notebook diff editor are hidden\",\n\t),\n);\nexport const NOTEBOOK_DIFF_ITEM_KIND = new RawContextKey<boolean>(\n\t\"notebook.diffEditor.item.kind\",\n\tundefined,\n\tlocalize(\n\t\t\"notebook.diffEditor.item.kind\",\n\t\t\"The kind of item in the notebook diff editor, Cell, Metadata or Output\",\n\t),\n);\nexport const NOTEBOOK_DIFF_ITEM_DIFF_STATE = new RawContextKey<boolean>(\n\t\"notebook.diffEditor.item.state\",\n\tundefined,\n\tlocalize(\n\t\t\"notebook.diffEditor.item.state\",\n\t\t\"The diff state of item in the notebook diff editor, delete, insert, modified or unchanged\",\n\t),\n);\n\nexport interface INotebookDiffViewModelUpdateEvent {\n\treadonly start: number;\n\treadonly deleteCount: number;\n\treadonly elements: readonly IDiffElementViewModelBase[];\n}\n\nexport interface INotebookDiffViewModel extends IDisposable {\n\treadonly items: readonly IDiffElementViewModelBase[];\n\tonDidChangeItems: Event<INotebookDiffViewModelUpdateEvent>;\n\t/**\n\t * Computes the differences and generates the viewmodel.\n\t * If view models are generated, then the onDidChangeItems is triggered and will have a return value.\n\t * Else returns `undefined`\n\t * @param token\n\t */\n\tcomputeDiff(\n\t\ttoken: CancellationToken,\n\t): Promise<{ firstChangeIndex: number } | undefined>;\n}\n"],
  "mappings": "AAeA,SAAS,gBAAgB;AAEzB,SAAS,qBAAqB;AAgBvB,IAAK,WAAL,kBAAKA,cAAL;AACN,EAAAA,oBAAA,cAAW,KAAX;AACA,EAAAA,oBAAA,cAAW,KAAX;AAFW,SAAAA;AAAA,GAAA;AAoLL,MAAM,mBAAmB;AACzB,MAAM,2BAA2B,IAAI;AAAA,EAC3C;AAAA,EACA;AACD;AACO,MAAM,yBAAyB,IAAI;AAAA,EACzC;AAAA,EACA;AACD;AACO,MAAM,2CACZ;AACM,MAAM,uCAAuC,IAAI;AAAA,EACvD;AAAA,EACA;AACD;AACO,MAAM,8BAA8B,IAAI;AAAA,EAC9C;AAAA,EACA;AACD;AACO,MAAM,uCAAuC,IAAI;AAAA,EACvD;AAAA,EACA;AACD;AACO,MAAM,gCAAgC,IAAI;AAAA,EAChD;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,oCAAoC,IAAI;AAAA,EACpD;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,uCAAuC,IAAI;AAAA,EACvD;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,0BAA0B,IAAI;AAAA,EAC1C;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,gCAAgC,IAAI;AAAA,EAChD;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;",
  "names": ["DiffSide"]
}
