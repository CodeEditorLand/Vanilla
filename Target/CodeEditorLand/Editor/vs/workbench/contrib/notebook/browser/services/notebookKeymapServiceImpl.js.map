{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/services/notebookKeymapServiceImpl.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct } from \"../../../../../base/common/arrays.js\";\nimport { onUnexpectedError } from \"../../../../../base/common/errors.js\";\nimport { Event } from \"../../../../../base/common/event.js\";\nimport { Disposable } from \"../../../../../base/common/lifecycle.js\";\nimport { localize } from \"../../../../../nls.js\";\nimport {\n\ttype IExtensionIdentifier,\n\tIExtensionManagementService,\n\tInstallOperation,\n} from \"../../../../../platform/extensionManagement/common/extensionManagement.js\";\nimport { areSameExtensions } from \"../../../../../platform/extensionManagement/common/extensionManagementUtil.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tINotificationService,\n\tSeverity,\n} from \"../../../../../platform/notification/common/notification.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../../platform/storage/common/storage.js\";\nimport { Memento, type MementoObject } from \"../../../../common/memento.js\";\nimport {\n\tEnablementState,\n\tIWorkbenchExtensionEnablementService,\n} from \"../../../../services/extensionManagement/common/extensionManagement.js\";\nimport { ILifecycleService } from \"../../../../services/lifecycle/common/lifecycle.js\";\nimport {\n\ttype IExtensionStatus,\n\tgetInstalledExtensions,\n} from \"../../../extensions/common/extensionsUtils.js\";\nimport type { INotebookKeymapService } from \"../../common/notebookKeymapService.js\";\n\nfunction onExtensionChanged(\n\taccessor: ServicesAccessor,\n): Event<IExtensionIdentifier[]> {\n\tconst extensionService = accessor.get(IExtensionManagementService);\n\tconst extensionEnablementService = accessor.get(\n\t\tIWorkbenchExtensionEnablementService,\n\t);\n\tconst onDidInstallExtensions = Event.chain(\n\t\textensionService.onDidInstallExtensions,\n\t\t($) =>\n\t\t\t$.filter((e) =>\n\t\t\t\te.some(\n\t\t\t\t\t({ operation }) => operation === InstallOperation.Install,\n\t\t\t\t),\n\t\t\t).map((e) => e.map(({ identifier }) => identifier)),\n\t);\n\treturn Event.debounce<IExtensionIdentifier[], IExtensionIdentifier[]>(\n\t\tEvent.any(\n\t\t\tEvent.any(\n\t\t\t\tonDidInstallExtensions,\n\t\t\t\tEvent.map(extensionService.onDidUninstallExtension, (e) => [\n\t\t\t\t\te.identifier,\n\t\t\t\t]),\n\t\t\t),\n\t\t\tEvent.map(\n\t\t\t\textensionEnablementService.onEnablementChanged,\n\t\t\t\t(extensions) => extensions.map((e) => e.identifier),\n\t\t\t),\n\t\t),\n\t\t(\n\t\t\tresult: IExtensionIdentifier[] | undefined,\n\t\t\tidentifiers: IExtensionIdentifier[],\n\t\t) => {\n\t\t\tresult = result || (identifiers.length ? [identifiers[0]] : []);\n\t\t\tfor (const identifier of identifiers) {\n\t\t\t\tif (result.some((l) => !areSameExtensions(l, identifier))) {\n\t\t\t\t\tresult.push(identifier);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t},\n\t);\n}\n\nconst hasRecommendedKeymapKey = \"hasRecommendedKeymap\";\n\nexport class NotebookKeymapService\n\textends Disposable\n\timplements INotebookKeymapService\n{\n\t_serviceBrand: undefined;\n\n\tprivate notebookKeymapMemento: Memento;\n\tprivate notebookKeymap: MementoObject;\n\n\tconstructor(\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\t@IWorkbenchExtensionEnablementService\n\t\tprivate readonly extensionEnablementService: IWorkbenchExtensionEnablementService,\n\t\t@INotificationService\n\t\tprivate readonly notificationService: INotificationService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t) {\n\t\tsuper();\n\n\t\tthis.notebookKeymapMemento = new Memento(\n\t\t\t\"notebookKeymap\",\n\t\t\tstorageService,\n\t\t);\n\t\tthis.notebookKeymap = this.notebookKeymapMemento.getMemento(\n\t\t\tStorageScope.PROFILE,\n\t\t\tStorageTarget.USER,\n\t\t);\n\n\t\tthis._register(lifecycleService.onDidShutdown(() => this.dispose()));\n\t\tthis._register(\n\t\t\tthis.instantiationService.invokeFunction(onExtensionChanged)(\n\t\t\t\t(identifiers) => {\n\t\t\t\t\tPromise.all(\n\t\t\t\t\t\tidentifiers.map((identifier) =>\n\t\t\t\t\t\t\tthis.checkForOtherKeymaps(identifier),\n\t\t\t\t\t\t),\n\t\t\t\t\t).then(undefined, onUnexpectedError);\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate checkForOtherKeymaps(\n\t\textensionIdentifier: IExtensionIdentifier,\n\t): Promise<void> {\n\t\treturn this.instantiationService\n\t\t\t.invokeFunction(getInstalledExtensions)\n\t\t\t.then((extensions) => {\n\t\t\t\tconst keymaps = extensions.filter((extension) =>\n\t\t\t\t\tisNotebookKeymapExtension(extension),\n\t\t\t\t);\n\t\t\t\tconst extension = keymaps.find((extension) =>\n\t\t\t\t\tareSameExtensions(\n\t\t\t\t\t\textension.identifier,\n\t\t\t\t\t\textensionIdentifier,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tif (extension && extension.globallyEnabled) {\n\t\t\t\t\t// there is already a keymap extension\n\t\t\t\t\tthis.notebookKeymap[hasRecommendedKeymapKey] = true;\n\t\t\t\t\tthis.notebookKeymapMemento.saveMemento();\n\t\t\t\t\tconst otherKeymaps = keymaps.filter(\n\t\t\t\t\t\t(extension) =>\n\t\t\t\t\t\t\t!areSameExtensions(\n\t\t\t\t\t\t\t\textension.identifier,\n\t\t\t\t\t\t\t\textensionIdentifier,\n\t\t\t\t\t\t\t) && extension.globallyEnabled,\n\t\t\t\t\t);\n\t\t\t\t\tif (otherKeymaps.length) {\n\t\t\t\t\t\treturn this.promptForDisablingOtherKeymaps(\n\t\t\t\t\t\t\textension,\n\t\t\t\t\t\t\totherKeymaps,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t}\n\n\tprivate promptForDisablingOtherKeymaps(\n\t\tnewKeymap: IExtensionStatus,\n\t\toldKeymaps: IExtensionStatus[],\n\t): void {\n\t\tconst onPrompt = (confirmed: boolean) => {\n\t\t\tif (confirmed) {\n\t\t\t\tthis.extensionEnablementService.setEnablement(\n\t\t\t\t\toldKeymaps.map((keymap) => keymap.local),\n\t\t\t\t\tEnablementState.DisabledGlobally,\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\tthis.notificationService.prompt(\n\t\t\tSeverity.Info,\n\t\t\tlocalize(\n\t\t\t\t\"disableOtherKeymapsConfirmation\",\n\t\t\t\t\"Disable other keymaps ({0}) to avoid conflicts between keybindings?\",\n\t\t\t\tdistinct(oldKeymaps.map((k) => k.local.manifest.displayName))\n\t\t\t\t\t.map((name) => `'${name}'`)\n\t\t\t\t\t.join(\", \"),\n\t\t\t),\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tlabel: localize(\"yes\", \"Yes\"),\n\t\t\t\t\trun: () => onPrompt(true),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: localize(\"no\", \"No\"),\n\t\t\t\t\trun: () => onPrompt(false),\n\t\t\t\t},\n\t\t\t],\n\t\t);\n\t}\n}\n\nexport function isNotebookKeymapExtension(\n\textension: IExtensionStatus,\n): boolean {\n\tif (extension.local.manifest.extensionPack) {\n\t\treturn false;\n\t}\n\n\tconst keywords = extension.local.manifest.keywords;\n\tif (!keywords) {\n\t\treturn false;\n\t}\n\n\treturn keywords.indexOf(\"notebook-keymap\") !== -1;\n}\n"],
  "mappings": "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",
  "names": ["extension"]
}
