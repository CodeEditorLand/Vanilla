{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/viewModel/baseCellViewModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, type Event } from \"../../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n\ttype IReference,\n\tMutableDisposable,\n\tdispose,\n} from \"../../../../../base/common/lifecycle.js\";\nimport { Mimes } from \"../../../../../base/common/mime.js\";\nimport type { ICodeEditor } from \"../../../../../editor/browser/editorBrowser.js\";\nimport type { ICodeEditorService } from \"../../../../../editor/browser/services/codeEditorService.js\";\nimport type { IEditorCommentsOptions } from \"../../../../../editor/common/config/editorOptions.js\";\nimport type { IPosition } from \"../../../../../editor/common/core/position.js\";\nimport { type IRange, Range } from \"../../../../../editor/common/core/range.js\";\nimport { Selection } from \"../../../../../editor/common/core/selection.js\";\nimport * as editorCommon from \"../../../../../editor/common/editorCommon.js\";\nimport type * as model from \"../../../../../editor/common/model.js\";\nimport { SearchParams } from \"../../../../../editor/common/model/textModelSearch.js\";\nimport type {\n\tIResolvedTextEditorModel,\n\tITextModelService,\n} from \"../../../../../editor/common/services/resolverService.js\";\nimport type { IConfigurationService } from \"../../../../../platform/configuration/common/configuration.js\";\nimport type { IUndoRedoService } from \"../../../../../platform/undoRedo/common/undoRedo.js\";\nimport {\n\ttype IWordWrapTransientState,\n\treadTransientState,\n\twriteTransientState,\n} from \"../../../codeEditor/browser/toggleWordWrap.js\";\nimport { InlineChatController } from \"../../../inlineChat/browser/inlineChatController.js\";\nimport type { NotebookCellTextModel } from \"../../common/model/notebookCellTextModel.js\";\nimport type {\n\tCellKind,\n\tINotebookCellStatusBarItem,\n\tINotebookFindOptions,\n} from \"../../common/notebookCommon.js\";\nimport {\n\tCellEditState,\n\tCellFocusMode,\n\ttype CellLayoutChangeEvent,\n\tCursorAtBoundary,\n\tCursorAtLineBoundary,\n\ttype IEditableCellViewModel,\n\ttype INotebookCellDecorationOptions,\n} from \"../notebookBrowser.js\";\nimport type { NotebookOptionsChangeEvent } from \"../notebookOptions.js\";\nimport type { CellViewModelStateChangeEvent } from \"../notebookViewEvents.js\";\nimport type { ViewContext } from \"./viewContext.js\";\n\nexport abstract class BaseCellViewModel extends Disposable {\n\tprotected readonly _onDidChangeEditorAttachState = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\t// Do not merge this event with `onDidChangeState` as we are using `Event.once(onDidChangeEditorAttachState)` elsewhere.\n\treadonly onDidChangeEditorAttachState =\n\t\tthis._onDidChangeEditorAttachState.event;\n\tprotected readonly _onDidChangeState = this._register(\n\t\tnew Emitter<CellViewModelStateChangeEvent>(),\n\t);\n\tpublic readonly onDidChangeState: Event<CellViewModelStateChangeEvent> =\n\t\tthis._onDidChangeState.event;\n\n\tget handle() {\n\t\treturn this.model.handle;\n\t}\n\tget uri() {\n\t\treturn this.model.uri;\n\t}\n\tget lineCount() {\n\t\treturn this.model.textBuffer.getLineCount();\n\t}\n\tget metadata() {\n\t\treturn this.model.metadata;\n\t}\n\tget internalMetadata() {\n\t\treturn this.model.internalMetadata;\n\t}\n\tget language() {\n\t\treturn this.model.language;\n\t}\n\n\tget mime(): string {\n\t\tif (typeof this.model.mime === \"string\") {\n\t\t\treturn this.model.mime;\n\t\t}\n\n\t\tswitch (this.language) {\n\t\t\tcase \"markdown\":\n\t\t\t\treturn Mimes.markdown;\n\n\t\t\tdefault:\n\t\t\t\treturn Mimes.text;\n\t\t}\n\t}\n\n\tabstract cellKind: CellKind;\n\n\tprivate _editState: CellEditState = CellEditState.Preview;\n\n\tprivate _lineNumbers: \"on\" | \"off\" | \"inherit\" = \"inherit\";\n\tget lineNumbers(): \"on\" | \"off\" | \"inherit\" {\n\t\treturn this._lineNumbers;\n\t}\n\n\tset lineNumbers(lineNumbers: \"on\" | \"off\" | \"inherit\") {\n\t\tif (lineNumbers === this._lineNumbers) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._lineNumbers = lineNumbers;\n\t\tthis._onDidChangeState.fire({ cellLineNumberChanged: true });\n\t}\n\n\tprivate _commentOptions: IEditorCommentsOptions;\n\tpublic get commentOptions(): IEditorCommentsOptions {\n\t\treturn this._commentOptions;\n\t}\n\n\tpublic set commentOptions(newOptions: IEditorCommentsOptions) {\n\t\tthis._commentOptions = newOptions;\n\t}\n\n\tprivate _focusMode: CellFocusMode = CellFocusMode.Container;\n\tget focusMode() {\n\t\treturn this._focusMode;\n\t}\n\tset focusMode(newMode: CellFocusMode) {\n\t\tif (this._focusMode !== newMode) {\n\t\t\tthis._focusMode = newMode;\n\t\t\tthis._onDidChangeState.fire({ focusModeChanged: true });\n\t\t}\n\t}\n\n\tprotected _textEditor?: ICodeEditor;\n\tget editorAttached(): boolean {\n\t\treturn !!this._textEditor;\n\t}\n\tprivate _editorListeners: IDisposable[] = [];\n\tprivate _editorViewStates: editorCommon.ICodeEditorViewState | null = null;\n\tprivate _editorTransientState: IWordWrapTransientState | null = null;\n\tprivate _resolvedCellDecorations = new Map<\n\t\tstring,\n\t\tINotebookCellDecorationOptions\n\t>();\n\tprivate readonly _textModelRefChangeDisposable = this._register(\n\t\tnew MutableDisposable(),\n\t);\n\n\tprivate readonly _cellDecorationsChanged = this._register(\n\t\tnew Emitter<{\n\t\t\tadded: INotebookCellDecorationOptions[];\n\t\t\tremoved: INotebookCellDecorationOptions[];\n\t\t}>(),\n\t);\n\tonCellDecorationsChanged: Event<{\n\t\tadded: INotebookCellDecorationOptions[];\n\t\tremoved: INotebookCellDecorationOptions[];\n\t}> = this._cellDecorationsChanged.event;\n\n\tprivate _resolvedDecorations = new Map<\n\t\tstring,\n\t\t{\n\t\t\tid?: string;\n\t\t\toptions: model.IModelDeltaDecoration;\n\t\t}\n\t>();\n\tprivate _lastDecorationId = 0;\n\n\tprivate _cellStatusBarItems = new Map<string, INotebookCellStatusBarItem>();\n\tprivate readonly _onDidChangeCellStatusBarItems = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onDidChangeCellStatusBarItems: Event<void> =\n\t\tthis._onDidChangeCellStatusBarItems.event;\n\tprivate _lastStatusBarId = 0;\n\n\tget textModel(): model.ITextModel | undefined {\n\t\treturn this.model.textModel;\n\t}\n\n\thasModel(): this is IEditableCellViewModel {\n\t\treturn !!this.textModel;\n\t}\n\n\tprivate _dragging = false;\n\tget dragging(): boolean {\n\t\treturn this._dragging;\n\t}\n\n\tset dragging(v: boolean) {\n\t\tthis._dragging = v;\n\t\tthis._onDidChangeState.fire({ dragStateChanged: true });\n\t}\n\n\tprotected _textModelRef: IReference<IResolvedTextEditorModel> | undefined;\n\n\tprivate _inputCollapsed = false;\n\tget isInputCollapsed(): boolean {\n\t\treturn this._inputCollapsed;\n\t}\n\tset isInputCollapsed(v: boolean) {\n\t\tthis._inputCollapsed = v;\n\t\tthis._onDidChangeState.fire({ inputCollapsedChanged: true });\n\t}\n\n\tprivate _outputCollapsed = false;\n\tget isOutputCollapsed(): boolean {\n\t\treturn this._outputCollapsed;\n\t}\n\tset isOutputCollapsed(v: boolean) {\n\t\tthis._outputCollapsed = v;\n\t\tthis._onDidChangeState.fire({ outputCollapsedChanged: true });\n\t}\n\n\tprotected _commentHeight = 0;\n\n\tset commentHeight(height: number) {\n\t\tif (this._commentHeight === height) {\n\t\t\treturn;\n\t\t}\n\t\tthis._commentHeight = height;\n\t\tthis.layoutChange(\n\t\t\t{ commentHeight: true },\n\t\t\t\"BaseCellViewModel#commentHeight\",\n\t\t);\n\t}\n\n\tprivate _isDisposed = false;\n\n\tconstructor(\n\t\treadonly viewType: string,\n\t\treadonly model: NotebookCellTextModel,\n\t\tpublic id: string,\n\t\tprivate readonly _viewContext: ViewContext,\n\t\tprivate readonly _configurationService: IConfigurationService,\n\t\tprivate readonly _modelService: ITextModelService,\n\t\tprivate readonly _undoRedoService: IUndoRedoService,\n\t\tprivate readonly _codeEditorService: ICodeEditorService,\n\t\t// private readonly _keymapService: INotebookKeymapService\n\t) {\n\t\tsuper();\n\n\t\tthis._register(\n\t\t\tmodel.onDidChangeMetadata(() => {\n\t\t\t\tthis._onDidChangeState.fire({ metadataChanged: true });\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tmodel.onDidChangeInternalMetadata((e) => {\n\t\t\t\tthis._onDidChangeState.fire({ internalMetadataChanged: true });\n\t\t\t\tif (e.lastRunSuccessChanged) {\n\t\t\t\t\t// Statusbar visibility may change\n\t\t\t\t\tthis.layoutChange({});\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis._configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (e.affectsConfiguration(\"notebook.lineNumbers\")) {\n\t\t\t\t\tthis.lineNumbers = \"inherit\";\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tif (this.model.collapseState?.inputCollapsed) {\n\t\t\tthis._inputCollapsed = true;\n\t\t}\n\n\t\tif (this.model.collapseState?.outputCollapsed) {\n\t\t\tthis._outputCollapsed = true;\n\t\t}\n\n\t\tthis._commentOptions =\n\t\t\tthis._configurationService.getValue<IEditorCommentsOptions>(\n\t\t\t\t\"editor.comments\",\n\t\t\t\t{ overrideIdentifier: this.language },\n\t\t\t);\n\t\tthis._register(\n\t\t\tthis._configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (e.affectsConfiguration(\"editor.comments\")) {\n\t\t\t\t\tthis._commentOptions =\n\t\t\t\t\t\tthis._configurationService.getValue<IEditorCommentsOptions>(\n\t\t\t\t\t\t\t\"editor.comments\",\n\t\t\t\t\t\t\t{ overrideIdentifier: this.language },\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tabstract updateOptions(e: NotebookOptionsChangeEvent): void;\n\tabstract getHeight(lineHeight: number): number;\n\tabstract onDeselect(): void;\n\tabstract layoutChange(change: CellLayoutChangeEvent, source?: string): void;\n\n\tassertTextModelAttached(): boolean {\n\t\tif (\n\t\t\tthis.textModel &&\n\t\t\tthis._textEditor &&\n\t\t\tthis._textEditor.getModel() === this.textModel\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// private handleKeyDown(e: IKeyboardEvent) {\n\t// \tif (this.viewType === IPYNB_VIEW_TYPE && isWindows && e.ctrlKey && e.keyCode === KeyCode.Enter) {\n\t// \t\tthis._keymapService.promptKeymapRecommendation();\n\t// \t}\n\t// }\n\n\tattachTextEditor(\n\t\teditor: ICodeEditor,\n\t\testimatedHasHorizontalScrolling?: boolean,\n\t) {\n\t\tif (!editor.hasModel()) {\n\t\t\tthrow new Error(\"Invalid editor: model is missing\");\n\t\t}\n\n\t\tif (this._textEditor === editor) {\n\t\t\tif (this._editorListeners.length === 0) {\n\t\t\t\tthis._editorListeners.push(\n\t\t\t\t\tthis._textEditor.onDidChangeCursorSelection(() => {\n\t\t\t\t\t\tthis._onDidChangeState.fire({ selectionChanged: true });\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\t// this._editorListeners.push(this._textEditor.onKeyDown(e => this.handleKeyDown(e)));\n\t\t\t\tthis._onDidChangeState.fire({ selectionChanged: true });\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tthis._textEditor = editor;\n\n\t\tif (this._editorViewStates) {\n\t\t\tthis._restoreViewState(this._editorViewStates);\n\t\t} else {\n\t\t\t// If no real editor view state was persisted, restore a default state.\n\t\t\t// This forces the editor to measure its content width immediately.\n\t\t\tif (estimatedHasHorizontalScrolling) {\n\t\t\t\tthis._restoreViewState({\n\t\t\t\t\tcontributionsState: {},\n\t\t\t\t\tcursorState: [],\n\t\t\t\t\tviewState: {\n\t\t\t\t\t\tscrollLeft: 0,\n\t\t\t\t\t\tfirstPosition: { lineNumber: 1, column: 1 },\n\t\t\t\t\t\tfirstPositionDeltaTop:\n\t\t\t\t\t\t\tthis._viewContext.notebookOptions.getLayoutConfiguration()\n\t\t\t\t\t\t\t\t.editorTopPadding,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (this._editorTransientState) {\n\t\t\twriteTransientState(\n\t\t\t\teditor.getModel(),\n\t\t\t\tthis._editorTransientState,\n\t\t\t\tthis._codeEditorService,\n\t\t\t);\n\t\t}\n\n\t\tif (this._isDisposed) {\n\t\t\t// Restore View State could adjust the editor layout and trigger a list view update. The list view update might then dispose this view model.\n\t\t\treturn;\n\t\t}\n\n\t\teditor.changeDecorations((accessor) => {\n\t\t\tthis._resolvedDecorations.forEach((value, key) => {\n\t\t\t\tif (key.startsWith(\"_lazy_\")) {\n\t\t\t\t\t// lazy ones\n\t\t\t\t\tconst ret = accessor.addDecoration(\n\t\t\t\t\t\tvalue.options.range,\n\t\t\t\t\t\tvalue.options.options,\n\t\t\t\t\t);\n\t\t\t\t\tthis._resolvedDecorations.get(key)!.id = ret;\n\t\t\t\t} else {\n\t\t\t\t\tconst ret = accessor.addDecoration(\n\t\t\t\t\t\tvalue.options.range,\n\t\t\t\t\t\tvalue.options.options,\n\t\t\t\t\t);\n\t\t\t\t\tthis._resolvedDecorations.get(key)!.id = ret;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tthis._editorListeners.push(\n\t\t\teditor.onDidChangeCursorSelection(() => {\n\t\t\t\tthis._onDidChangeState.fire({ selectionChanged: true });\n\t\t\t}),\n\t\t);\n\t\tconst inlineChatController = InlineChatController.get(this._textEditor);\n\t\tif (inlineChatController) {\n\t\t\tthis._editorListeners.push(\n\t\t\t\tinlineChatController.onWillStartSession(() => {\n\t\t\t\t\tif (this.textBuffer.getLength() === 0) {\n\t\t\t\t\t\tthis.enableAutoLanguageDetection();\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\tthis._onDidChangeState.fire({ selectionChanged: true });\n\t\tthis._onDidChangeEditorAttachState.fire();\n\t}\n\n\tdetachTextEditor() {\n\t\tthis.saveViewState();\n\t\tthis.saveTransientState();\n\t\t// decorations need to be cleared first as editors can be resued.\n\t\tthis._textEditor?.changeDecorations((accessor) => {\n\t\t\tthis._resolvedDecorations.forEach((value) => {\n\t\t\t\tconst resolvedid = value.id;\n\n\t\t\t\tif (resolvedid) {\n\t\t\t\t\taccessor.removeDecoration(resolvedid);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tthis._textEditor = undefined;\n\t\tdispose(this._editorListeners);\n\t\tthis._editorListeners = [];\n\t\tthis._onDidChangeEditorAttachState.fire();\n\n\t\tif (this._textModelRef) {\n\t\t\tthis._textModelRef.dispose();\n\t\t\tthis._textModelRef = undefined;\n\t\t}\n\t\tthis._textModelRefChangeDisposable.clear();\n\t}\n\n\tgetText(): string {\n\t\treturn this.model.getValue();\n\t}\n\n\tgetAlternativeId(): number {\n\t\treturn this.model.alternativeId;\n\t}\n\n\tgetTextLength(): number {\n\t\treturn this.model.getTextLength();\n\t}\n\n\tenableAutoLanguageDetection() {\n\t\tthis.model.enableAutoLanguageDetection();\n\t}\n\n\tprivate saveViewState(): void {\n\t\tif (!this._textEditor) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._editorViewStates = this._textEditor.saveViewState();\n\t}\n\n\tprivate saveTransientState() {\n\t\tif (!this._textEditor || !this._textEditor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._editorTransientState = readTransientState(\n\t\t\tthis._textEditor.getModel(),\n\t\t\tthis._codeEditorService,\n\t\t);\n\t}\n\n\tsaveEditorViewState() {\n\t\tif (this._textEditor) {\n\t\t\tthis._editorViewStates = this._textEditor.saveViewState();\n\t\t}\n\n\t\treturn this._editorViewStates;\n\t}\n\n\trestoreEditorViewState(\n\t\teditorViewStates: editorCommon.ICodeEditorViewState | null,\n\t\ttotalHeight?: number,\n\t) {\n\t\tthis._editorViewStates = editorViewStates;\n\t}\n\n\tprivate _restoreViewState(\n\t\tstate: editorCommon.ICodeEditorViewState | null,\n\t): void {\n\t\tif (state) {\n\t\t\tthis._textEditor?.restoreViewState(state);\n\t\t}\n\t}\n\n\taddModelDecoration(decoration: model.IModelDeltaDecoration): string {\n\t\tif (!this._textEditor) {\n\t\t\tconst id = ++this._lastDecorationId;\n\t\t\tconst decorationId = `_lazy_${this.id};${id}`;\n\t\t\tthis._resolvedDecorations.set(decorationId, {\n\t\t\t\toptions: decoration,\n\t\t\t});\n\t\t\treturn decorationId;\n\t\t}\n\n\t\tlet id: string;\n\t\tthis._textEditor.changeDecorations((accessor) => {\n\t\t\tid = accessor.addDecoration(decoration.range, decoration.options);\n\t\t\tthis._resolvedDecorations.set(id, { id, options: decoration });\n\t\t});\n\t\treturn id!;\n\t}\n\n\tremoveModelDecoration(decorationId: string) {\n\t\tconst realDecorationId = this._resolvedDecorations.get(decorationId);\n\n\t\tif (\n\t\t\tthis._textEditor &&\n\t\t\trealDecorationId &&\n\t\t\trealDecorationId.id !== undefined\n\t\t) {\n\t\t\tthis._textEditor.changeDecorations((accessor) => {\n\t\t\t\taccessor.removeDecoration(realDecorationId.id!);\n\t\t\t});\n\t\t}\n\n\t\t// lastly, remove all the cache\n\t\tthis._resolvedDecorations.delete(decorationId);\n\t}\n\n\tdeltaModelDecorations(\n\t\toldDecorations: readonly string[],\n\t\tnewDecorations: readonly model.IModelDeltaDecoration[],\n\t): string[] {\n\t\toldDecorations.forEach((id) => {\n\t\t\tthis.removeModelDecoration(id);\n\t\t});\n\n\t\tconst ret = newDecorations.map((option) => {\n\t\t\treturn this.addModelDecoration(option);\n\t\t});\n\n\t\treturn ret;\n\t}\n\n\tprivate _removeCellDecoration(decorationId: string) {\n\t\tconst options = this._resolvedCellDecorations.get(decorationId);\n\t\tthis._resolvedCellDecorations.delete(decorationId);\n\n\t\tif (options) {\n\t\t\tfor (const existingOptions of this._resolvedCellDecorations.values()) {\n\t\t\t\t// don't remove decorations that are applied from other entries\n\t\t\t\tif (options.className === existingOptions.className) {\n\t\t\t\t\toptions.className = undefined;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\toptions.outputClassName === existingOptions.outputClassName\n\t\t\t\t) {\n\t\t\t\t\toptions.outputClassName = undefined;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\toptions.gutterClassName === existingOptions.gutterClassName\n\t\t\t\t) {\n\t\t\t\t\toptions.gutterClassName = undefined;\n\t\t\t\t}\n\t\t\t\tif (options.topClassName === existingOptions.topClassName) {\n\t\t\t\t\toptions.topClassName = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._cellDecorationsChanged.fire({\n\t\t\t\tadded: [],\n\t\t\t\tremoved: [options],\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _addCellDecoration(\n\t\toptions: INotebookCellDecorationOptions,\n\t): string {\n\t\tconst id = ++this._lastDecorationId;\n\t\tconst decorationId = `_cell_${this.id};${id}`;\n\t\tthis._resolvedCellDecorations.set(decorationId, options);\n\t\tthis._cellDecorationsChanged.fire({ added: [options], removed: [] });\n\t\treturn decorationId;\n\t}\n\n\tgetCellDecorations() {\n\t\treturn [...this._resolvedCellDecorations.values()];\n\t}\n\n\tgetCellDecorationRange(decorationId: string): Range | null {\n\t\tif (this._textEditor) {\n\t\t\t// (this._textEditor as CodeEditorWidget).decora\n\t\t\treturn (\n\t\t\t\tthis._textEditor.getModel()?.getDecorationRange(decorationId) ??\n\t\t\t\tnull\n\t\t\t);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tdeltaCellDecorations(\n\t\toldDecorations: string[],\n\t\tnewDecorations: INotebookCellDecorationOptions[],\n\t): string[] {\n\t\toldDecorations.forEach((id) => {\n\t\t\tthis._removeCellDecoration(id);\n\t\t});\n\n\t\tconst ret = newDecorations.map((option) => {\n\t\t\treturn this._addCellDecoration(option);\n\t\t});\n\n\t\treturn ret;\n\t}\n\n\tdeltaCellStatusBarItems(\n\t\toldItems: readonly string[],\n\t\tnewItems: readonly INotebookCellStatusBarItem[],\n\t): string[] {\n\t\toldItems.forEach((id) => {\n\t\t\tconst item = this._cellStatusBarItems.get(id);\n\t\t\tif (item) {\n\t\t\t\tthis._cellStatusBarItems.delete(id);\n\t\t\t}\n\t\t});\n\n\t\tconst newIds = newItems.map((item) => {\n\t\t\tconst id = ++this._lastStatusBarId;\n\t\t\tconst itemId = `_cell_${this.id};${id}`;\n\t\t\tthis._cellStatusBarItems.set(itemId, item);\n\t\t\treturn itemId;\n\t\t});\n\n\t\tthis._onDidChangeCellStatusBarItems.fire();\n\n\t\treturn newIds;\n\t}\n\n\tgetCellStatusBarItems(): INotebookCellStatusBarItem[] {\n\t\treturn Array.from(this._cellStatusBarItems.values());\n\t}\n\n\trevealRangeInCenter(range: Range) {\n\t\tthis._textEditor?.revealRangeInCenter(\n\t\t\trange,\n\t\t\teditorCommon.ScrollType.Immediate,\n\t\t);\n\t}\n\n\tsetSelection(range: Range) {\n\t\tthis._textEditor?.setSelection(range);\n\t}\n\n\tsetSelections(selections: Selection[]) {\n\t\tif (selections.length) {\n\t\t\tif (this._textEditor) {\n\t\t\t\tthis._textEditor?.setSelections(selections);\n\t\t\t} else if (this._editorViewStates) {\n\t\t\t\tthis._editorViewStates.cursorState = selections.map(\n\t\t\t\t\t(selection) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tinSelectionMode: !selection.isEmpty(),\n\t\t\t\t\t\t\tselectionStart: selection.getStartPosition(),\n\t\t\t\t\t\t\tposition: selection.getEndPosition(),\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetSelections() {\n\t\treturn (\n\t\t\tthis._textEditor?.getSelections() ??\n\t\t\tthis._editorViewStates?.cursorState.map(\n\t\t\t\t(state) =>\n\t\t\t\t\tnew Selection(\n\t\t\t\t\t\tstate.selectionStart.lineNumber,\n\t\t\t\t\t\tstate.selectionStart.column,\n\t\t\t\t\t\tstate.position.lineNumber,\n\t\t\t\t\t\tstate.position.column,\n\t\t\t\t\t),\n\t\t\t) ??\n\t\t\t[]\n\t\t);\n\t}\n\n\tgetSelectionsStartPosition(): IPosition[] | undefined {\n\t\tif (this._textEditor) {\n\t\t\tconst selections = this._textEditor.getSelections();\n\t\t\treturn selections?.map((s) => s.getStartPosition());\n\t\t} else {\n\t\t\tconst selections = this._editorViewStates?.cursorState;\n\t\t\treturn selections?.map((s) => s.selectionStart);\n\t\t}\n\t}\n\n\tgetLineScrollTopOffset(line: number): number {\n\t\tif (!this._textEditor) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst editorPadding =\n\t\t\tthis._viewContext.notebookOptions.computeEditorPadding(\n\t\t\t\tthis.internalMetadata,\n\t\t\t\tthis.uri,\n\t\t\t);\n\t\treturn this._textEditor.getTopForLineNumber(line) + editorPadding.top;\n\t}\n\n\tgetPositionScrollTopOffset(range: Selection | Range): number {\n\t\tif (!this._textEditor) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst position =\n\t\t\trange instanceof Selection\n\t\t\t\t? range.getPosition()\n\t\t\t\t: range.getStartPosition();\n\n\t\tconst editorPadding =\n\t\t\tthis._viewContext.notebookOptions.computeEditorPadding(\n\t\t\t\tthis.internalMetadata,\n\t\t\t\tthis.uri,\n\t\t\t);\n\t\treturn (\n\t\t\tthis._textEditor.getTopForPosition(\n\t\t\t\tposition.lineNumber,\n\t\t\t\tposition.column,\n\t\t\t) + editorPadding.top\n\t\t);\n\t}\n\n\tcursorAtLineBoundary(): CursorAtLineBoundary {\n\t\tif (\n\t\t\t!this._textEditor ||\n\t\t\t!this.textModel ||\n\t\t\t!this._textEditor.hasTextFocus()\n\t\t) {\n\t\t\treturn CursorAtLineBoundary.None;\n\t\t}\n\n\t\tconst selection = this._textEditor.getSelection();\n\n\t\tif (!selection || !selection.isEmpty()) {\n\t\t\treturn CursorAtLineBoundary.None;\n\t\t}\n\n\t\tconst currentLineLength = this.textModel.getLineLength(\n\t\t\tselection.startLineNumber,\n\t\t);\n\n\t\tif (currentLineLength === 0) {\n\t\t\treturn CursorAtLineBoundary.Both;\n\t\t}\n\n\t\tswitch (selection.startColumn) {\n\t\t\tcase 1:\n\t\t\t\treturn CursorAtLineBoundary.Start;\n\t\t\tcase currentLineLength + 1:\n\t\t\t\treturn CursorAtLineBoundary.End;\n\t\t\tdefault:\n\t\t\t\treturn CursorAtLineBoundary.None;\n\t\t}\n\t}\n\n\tcursorAtBoundary(): CursorAtBoundary {\n\t\tif (!this._textEditor) {\n\t\t\treturn CursorAtBoundary.None;\n\t\t}\n\n\t\tif (!this.textModel) {\n\t\t\treturn CursorAtBoundary.None;\n\t\t}\n\n\t\t// only validate primary cursor\n\t\tconst selection = this._textEditor.getSelection();\n\n\t\t// only validate empty cursor\n\t\tif (!selection || !selection.isEmpty()) {\n\t\t\treturn CursorAtBoundary.None;\n\t\t}\n\n\t\tconst firstViewLineTop = this._textEditor.getTopForPosition(1, 1);\n\t\tconst lastViewLineTop = this._textEditor.getTopForPosition(\n\t\t\tthis.textModel.getLineCount(),\n\t\t\tthis.textModel.getLineLength(this.textModel.getLineCount()),\n\t\t);\n\t\tconst selectionTop = this._textEditor.getTopForPosition(\n\t\t\tselection.startLineNumber,\n\t\t\tselection.startColumn,\n\t\t);\n\n\t\tif (selectionTop === lastViewLineTop) {\n\t\t\tif (selectionTop === firstViewLineTop) {\n\t\t\t\treturn CursorAtBoundary.Both;\n\t\t\t} else {\n\t\t\t\treturn CursorAtBoundary.Bottom;\n\t\t\t}\n\t\t} else if (selectionTop === firstViewLineTop) {\n\t\t\treturn CursorAtBoundary.Top;\n\t\t} else {\n\t\t\treturn CursorAtBoundary.None;\n\t\t}\n\t}\n\n\tprivate _editStateSource = \"\";\n\n\tget editStateSource(): string {\n\t\treturn this._editStateSource;\n\t}\n\n\tupdateEditState(newState: CellEditState, source: string) {\n\t\tthis._editStateSource = source;\n\t\tif (newState === this._editState) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._editState = newState;\n\t\tthis._onDidChangeState.fire({ editStateChanged: true });\n\t\tif (this._editState === CellEditState.Preview) {\n\t\t\tthis.focusMode = CellFocusMode.Container;\n\t\t}\n\t}\n\n\tgetEditState() {\n\t\treturn this._editState;\n\t}\n\n\tget textBuffer() {\n\t\treturn this.model.textBuffer;\n\t}\n\n\t/**\n\t * Text model is used for editing.\n\t */\n\tasync resolveTextModel(): Promise<model.ITextModel> {\n\t\tif (!this._textModelRef || !this.textModel) {\n\t\t\tthis._textModelRef = await this._modelService.createModelReference(\n\t\t\t\tthis.uri,\n\t\t\t);\n\t\t\tif (this._isDisposed) {\n\t\t\t\treturn this.textModel!;\n\t\t\t}\n\n\t\t\tif (!this._textModelRef) {\n\t\t\t\tthrow new Error(`Cannot resolve text model for ${this.uri}`);\n\t\t\t}\n\t\t\tthis._textModelRefChangeDisposable.value =\n\t\t\t\tthis.textModel!.onDidChangeContent(() =>\n\t\t\t\t\tthis.onDidChangeTextModelContent(),\n\t\t\t\t);\n\t\t}\n\n\t\treturn this.textModel!;\n\t}\n\n\tprotected abstract onDidChangeTextModelContent(): void;\n\n\tprotected cellStartFind(\n\t\tvalue: string,\n\t\toptions: INotebookFindOptions,\n\t): model.FindMatch[] | null {\n\t\tlet cellMatches: model.FindMatch[] = [];\n\n\t\tconst lineCount = this.textBuffer.getLineCount();\n\t\tconst findRange: IRange[] = options.findScope?.selectedTextRanges ?? [\n\t\t\tnew Range(\n\t\t\t\t1,\n\t\t\t\t1,\n\t\t\t\tlineCount,\n\t\t\t\tthis.textBuffer.getLineLength(lineCount) + 1,\n\t\t\t),\n\t\t];\n\n\t\tif (this.assertTextModelAttached()) {\n\t\t\tcellMatches = this.textModel!.findMatches(\n\t\t\t\tvalue,\n\t\t\t\tfindRange,\n\t\t\t\toptions.regex || false,\n\t\t\t\toptions.caseSensitive || false,\n\t\t\t\toptions.wholeWord ? options.wordSeparators || null : null,\n\t\t\t\toptions.regex || false,\n\t\t\t);\n\t\t} else {\n\t\t\tconst searchParams = new SearchParams(\n\t\t\t\tvalue,\n\t\t\t\toptions.regex || false,\n\t\t\t\toptions.caseSensitive || false,\n\t\t\t\toptions.wholeWord ? options.wordSeparators || null : null,\n\t\t\t);\n\t\t\tconst searchData = searchParams.parseSearchRequest();\n\n\t\t\tif (!searchData) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tfindRange.forEach((range) => {\n\t\t\t\tcellMatches.push(\n\t\t\t\t\t...this.textBuffer.findMatchesLineByLine(\n\t\t\t\t\t\tnew Range(\n\t\t\t\t\t\t\trange.startLineNumber,\n\t\t\t\t\t\t\trange.startColumn,\n\t\t\t\t\t\t\trange.endLineNumber,\n\t\t\t\t\t\t\trange.endColumn,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tsearchData,\n\t\t\t\t\t\toptions.regex || false,\n\t\t\t\t\t\t1000,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\treturn cellMatches;\n\t}\n\n\toverride dispose() {\n\t\tthis._isDisposed = true;\n\t\tsuper.dispose();\n\n\t\tdispose(this._editorListeners);\n\n\t\t// Only remove the undo redo stack if we map this cell uri to itself\n\t\t// If we are not in perCell mode, it will map to the full NotebookDocument and\n\t\t// we don't want to remove that entire document undo / redo stack when a cell is deleted\n\t\tif (\n\t\t\tthis._undoRedoService.getUriComparisonKey(this.uri) ===\n\t\t\tthis.uri.toString()\n\t\t) {\n\t\t\tthis._undoRedoService.removeElements(this.uri);\n\t\t}\n\n\t\tthis._textModelRef?.dispose();\n\t}\n\n\ttoJSON(): object {\n\t\treturn {\n\t\t\thandle: this.handle,\n\t\t};\n\t}\n}\n"],
  "mappings": "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",
  "names": ["id"]
}
