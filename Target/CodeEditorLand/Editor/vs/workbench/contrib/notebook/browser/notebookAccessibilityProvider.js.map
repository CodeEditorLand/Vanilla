{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/notebookAccessibilityProvider.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IListAccessibilityProvider } from \"../../../../base/browser/ui/list/listWidget.js\";\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { observableFromEvent } from \"../../../../base/common/observable.js\";\nimport * as nls from \"../../../../nls.js\";\nimport type { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport type { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { AccessibilityVerbositySettingId } from \"../../accessibility/browser/accessibilityConfiguration.js\";\nimport { AccessibilityCommandId } from \"../../accessibility/common/accessibilityCommands.js\";\nimport {\n\tCellKind,\n\tNotebookCellExecutionState,\n} from \"../common/notebookCommon.js\";\nimport {\n\ttype ICellExecutionStateChangedEvent,\n\ttype IExecutionStateChangedEvent,\n\ttype INotebookExecutionStateService,\n\tNotebookExecutionType,\n} from \"../common/notebookExecutionStateService.js\";\nimport type {\n\tCellViewModel,\n\tNotebookViewModel,\n} from \"./viewModel/notebookViewModelImpl.js\";\n\nexport class NotebookAccessibilityProvider\n\textends Disposable\n\timplements IListAccessibilityProvider<CellViewModel>\n{\n\tprivate readonly _onDidAriaLabelChange = new Emitter<CellViewModel>();\n\tprivate readonly onDidAriaLabelChange = this._onDidAriaLabelChange.event;\n\n\tconstructor(\n\t\tprivate readonly notebookExecutionStateService: INotebookExecutionStateService,\n\t\tprivate readonly viewModel: () => NotebookViewModel | undefined,\n\t\tprivate readonly keybindingService: IKeybindingService,\n\t\tprivate readonly configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\t\tthis._register(\n\t\t\tEvent.debounce<\n\t\t\t\tICellExecutionStateChangedEvent | IExecutionStateChangedEvent,\n\t\t\t\tnumber[]\n\t\t\t>(\n\t\t\t\tthis.notebookExecutionStateService.onDidChangeExecution,\n\t\t\t\t(\n\t\t\t\t\tlast: number[] | undefined,\n\t\t\t\t\te:\n\t\t\t\t\t\t| ICellExecutionStateChangedEvent\n\t\t\t\t\t\t| IExecutionStateChangedEvent,\n\t\t\t\t) => this.mergeEvents(last, e),\n\t\t\t\t100,\n\t\t\t)((cellHandles: number[]) => {\n\t\t\t\tconst viewModel = this.viewModel();\n\t\t\t\tif (viewModel) {\n\t\t\t\t\tfor (const handle of cellHandles) {\n\t\t\t\t\t\tconst cellModel = viewModel.getCellByHandle(handle);\n\t\t\t\t\t\tif (cellModel) {\n\t\t\t\t\t\t\tthis._onDidAriaLabelChange.fire(\n\t\t\t\t\t\t\t\tcellModel as CellViewModel,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this),\n\t\t);\n\t}\n\n\tgetAriaLabel(element: CellViewModel) {\n\t\tconst event = Event.filter(\n\t\t\tthis.onDidAriaLabelChange,\n\t\t\t(e) => e === element,\n\t\t);\n\t\treturn observableFromEvent(this, event, () => {\n\t\t\tconst viewModel = this.viewModel();\n\t\t\tif (!viewModel) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t\tconst index = viewModel.getCellIndex(element);\n\n\t\t\tif (index >= 0) {\n\t\t\t\treturn this.getLabel(index, element);\n\t\t\t}\n\n\t\t\treturn \"\";\n\t\t});\n\t}\n\n\tprivate getLabel(index: number, element: CellViewModel) {\n\t\tconst executionState =\n\t\t\tthis.notebookExecutionStateService.getCellExecution(\n\t\t\t\telement.uri,\n\t\t\t)?.state;\n\t\tconst executionLabel =\n\t\t\texecutionState === NotebookCellExecutionState.Executing\n\t\t\t\t? \", executing\"\n\t\t\t\t: executionState === NotebookCellExecutionState.Pending\n\t\t\t\t\t? \", pending\"\n\t\t\t\t\t: \"\";\n\t\treturn `Cell ${index}, ${element.cellKind === CellKind.Markup ? \"markdown\" : \"code\"} cell${executionLabel}`;\n\t}\n\n\tgetWidgetAriaLabel() {\n\t\tconst keybinding = this.keybindingService\n\t\t\t.lookupKeybinding(AccessibilityCommandId.OpenAccessibilityHelp)\n\t\t\t?.getLabel();\n\n\t\tif (\n\t\t\tthis.configurationService.getValue(\n\t\t\t\tAccessibilityVerbositySettingId.Notebook,\n\t\t\t)\n\t\t) {\n\t\t\treturn keybinding\n\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\"notebookTreeAriaLabelHelp\",\n\t\t\t\t\t\t\"Notebook\\nUse {0} for accessibility help\",\n\t\t\t\t\t\tkeybinding,\n\t\t\t\t\t)\n\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\"notebookTreeAriaLabelHelpNoKb\",\n\t\t\t\t\t\t\"Notebook\\nRun the Open Accessibility Help command for more information\",\n\t\t\t\t\t\tkeybinding,\n\t\t\t\t\t);\n\t\t}\n\t\treturn nls.localize(\"notebookTreeAriaLabel\", \"Notebook\");\n\t}\n\n\tprivate mergeEvents(\n\t\tlast: number[] | undefined,\n\t\te: ICellExecutionStateChangedEvent | IExecutionStateChangedEvent,\n\t): number[] {\n\t\tconst viewModel = this.viewModel();\n\t\tconst result = last || [];\n\t\tif (\n\t\t\tviewModel &&\n\t\t\te.type === NotebookExecutionType.cell &&\n\t\t\te.affectsNotebook(viewModel.uri)\n\t\t) {\n\t\t\tif (result.indexOf(e.cellHandle) < 0) {\n\t\t\t\tresult.push(e.cellHandle);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n"],
  "mappings": ";;AAMA,SAAS,SAAS,aAAa;AAC/B,SAAS,kBAAkB;AAC3B,SAAS,2BAA2B;AACpC,YAAY,SAAS;AAGrB,SAAS,uCAAuC;AAChD,SAAS,8BAA8B;AACvC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EAIC;AAAA,OACM;AAMA,MAAM,sCACJ,WAET;AAAA,EAIC,YACkB,+BACA,WACA,mBACA,sBAChB;AACD,UAAM;AALW;AACA;AACA;AACA;AAGjB,SAAK;AAAA,MACJ,MAAM;AAAA,QAIL,KAAK,8BAA8B;AAAA,QACnC,CACC,MACA,MAGI,KAAK,YAAY,MAAM,CAAC;AAAA,QAC7B;AAAA,MACD,EAAE,CAAC,gBAA0B;AAC5B,cAAMA,aAAY,KAAK,UAAU;AACjC,YAAIA,YAAW;AACd,qBAAW,UAAU,aAAa;AACjC,kBAAM,YAAYA,WAAU,gBAAgB,MAAM;AAClD,gBAAI,WAAW;AACd,mBAAK,sBAAsB;AAAA,gBAC1B;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,MACD,GAAG,IAAI;AAAA,IACR;AAAA,EACD;AAAA,EAtED,OAgCA;AAAA;AAAA;AAAA,EACkB,wBAAwB,IAAI,QAAuB;AAAA,EACnD,uBAAuB,KAAK,sBAAsB;AAAA,EAsCnE,aAAa,SAAwB;AACpC,UAAM,QAAQ,MAAM;AAAA,MACnB,KAAK;AAAA,MACL,CAAC,MAAM,MAAM;AAAA,IACd;AACA,WAAO,oBAAoB,MAAM,OAAO,MAAM;AAC7C,YAAM,YAAY,KAAK,UAAU;AACjC,UAAI,CAAC,WAAW;AACf,eAAO;AAAA,MACR;AACA,YAAM,QAAQ,UAAU,aAAa,OAAO;AAE5C,UAAI,SAAS,GAAG;AACf,eAAO,KAAK,SAAS,OAAO,OAAO;AAAA,MACpC;AAEA,aAAO;AAAA,IACR,CAAC;AAAA,EACF;AAAA,EAEQ,SAAS,OAAe,SAAwB;AACvD,UAAM,iBACL,KAAK,8BAA8B;AAAA,MAClC,QAAQ;AAAA,IACT,GAAG;AACJ,UAAM,iBACL,mBAAmB,2BAA2B,YAC3C,gBACA,mBAAmB,2BAA2B,UAC7C,cACA;AACL,WAAO,QAAQ,KAAK,KAAK,QAAQ,aAAa,SAAS,SAAS,aAAa,MAAM,QAAQ,cAAc;AAAA,EAC1G;AAAA,EAEA,qBAAqB;AACpB,UAAM,aAAa,KAAK,kBACtB,iBAAiB,uBAAuB,qBAAqB,GAC5D,SAAS;AAEZ,QACC,KAAK,qBAAqB;AAAA,MACzB,gCAAgC;AAAA,IACjC,GACC;AACD,aAAO,aACJ,IAAI;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,MACD,IACC,IAAI;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACH;AACA,WAAO,IAAI,SAAS,yBAAyB,UAAU;AAAA,EACxD;AAAA,EAEQ,YACP,MACA,GACW;AACX,UAAM,YAAY,KAAK,UAAU;AACjC,UAAM,SAAS,QAAQ,CAAC;AACxB,QACC,aACA,EAAE,SAAS,sBAAsB,QACjC,EAAE,gBAAgB,UAAU,GAAG,GAC9B;AACD,UAAI,OAAO,QAAQ,EAAE,UAAU,IAAI,GAAG;AACrC,eAAO,KAAK,EAAE,UAAU;AAAA,MACzB;AAAA,IACD;AACA,WAAO;AAAA,EACR;AACD;",
  "names": ["viewModel"]
}
