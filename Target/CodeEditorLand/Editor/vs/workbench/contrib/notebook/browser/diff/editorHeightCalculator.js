var M=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var l=(m,e,t,i)=>{for(var n=i>1?void 0:i?x(e,t):e,d=m.length-1,s;d>=0;d--)(s=m[d])&&(n=(i?s(e,t,n):s(n))||n);return i&&n&&M(e,t,n),n},c=(m,e)=>(t,i)=>e(t,i,m);import"../../../../../base/common/uri.js";import{UnchangedRegion as E}from"../../../../../editor/browser/widget/diffEditor/diffEditorViewModel.js";import{IEditorWorkerService as I}from"../../../../../editor/common/services/editorWorker.js";import{ITextModelService as y}from"../../../../../editor/common/services/resolverService.js";import{IConfigurationService as H}from"../../../../../platform/configuration/common/configuration.js";import{getEditorPadding as a}from"./diffCellEditorOptions.js";import{HeightOfHiddenLinesRegionInDiffEditor as U}from"./diffElementViewModel.js";let g=class{constructor(e,t,i,n){this.lineHeight=e;this.textModelResolverService=t;this.editorWorkerService=i;this.configurationService=n}async diffAndComputeHeight(e,t){const[i,n]=await Promise.all([this.textModelResolverService.createModelReference(e),this.textModelResolverService.createModelReference(t)]);try{const d=await this.editorWorkerService.computeDiff(e,t,{ignoreTrimWhitespace:!0,maxComputationTimeMs:0,computeMoves:!1},"advanced").then(r=>r?.changes||[]),s=this.configurationService.getValue("diffEditor.hideUnchangedRegions.enabled"),h=this.configurationService.getValue("diffEditor.hideUnchangedRegions.minimumLineCount"),p=this.configurationService.getValue("diffEditor.hideUnchangedRegions.contextLineCount"),b=i.object.textEditorModel.getLineCount(),v=n.object.textEditorModel.getLineCount(),u=s?E.fromDiffs(d,b,v,h??3,p??3):[],R=d.reduce((r,o)=>o.original.isEmpty&&!o.modified.isEmpty?r+o.modified.length:!o.original.isEmpty&&!o.modified.isEmpty&&o.modified.length>o.original.length?r+o.modified.length-o.original.length:r,0),L=i.object.textEditorModel.getLineCount(),S=u.reduce((r,o)=>r+o.lineCount,0),C=u.length*U,f=L+R-S;return f*this.lineHeight+a(f).top+a(f).bottom+C}finally{i.dispose(),n.dispose()}}computeHeightFromLines(e){return e*this.lineHeight+a(e).top+a(e).bottom}};g=l([c(1,y),c(2,I),c(3,H)],g);export{g as DiffEditorHeightCalculatorService};
