{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/diff/diffElementViewModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from '../../../../../base/common/event.js';\nimport { hash } from '../../../../../base/common/hash.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { DiffEditorWidget } from '../../../../../editor/browser/widget/diffEditor/diffEditorWidget.js';\nimport { FontInfo } from '../../../../../editor/common/config/fontInfo.js';\nimport * as editorCommon from '../../../../../editor/common/editorCommon.js';\nimport { getEditorPadding } from './diffCellEditorOptions.js';\nimport { DiffNestedCellViewModel } from './diffNestedCellViewModel.js';\nimport { NotebookDiffEditorEventDispatcher, NotebookDiffViewEventType } from './eventDispatcher.js';\nimport { CellDiffViewModelLayoutChangeEvent, DIFF_CELL_MARGIN, DiffSide, IDiffElementLayoutInfo } from './notebookDiffEditorBrowser.js';\nimport { CellLayoutState, IGenericCellViewModel } from '../notebookBrowser.js';\nimport { NotebookLayoutInfo } from '../notebookViewEvents.js';\nimport { getFormattedMetadataJSON, NotebookCellTextModel } from '../../common/model/notebookCellTextModel.js';\nimport { NotebookTextModel } from '../../common/model/notebookTextModel.js';\nimport { CellUri, ICellOutput, INotebookTextModel, IOutputDto, IOutputItemDto } from '../../common/notebookCommon.js';\nimport { INotebookService } from '../../common/notebookService.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { IUnchangedEditorRegionsService } from './unchangedEditorRegions.js';\nimport { Schemas } from '../../../../../base/common/network.js';\n\n// From `.monaco-editor .diff-hidden-lines .center` in src/vs/editor/browser/widget/diffEditor/style.css\nexport const HeightOfHiddenLinesRegionInDiffEditor = 24;\n\nexport const DefaultLineHeight = 17;\n\nexport enum PropertyFoldingState {\n\tExpanded,\n\tCollapsed\n}\n\nexport const OUTPUT_EDITOR_HEIGHT_MAGIC = 1440;\n\ntype ILayoutInfoDelta0 = { [K in keyof IDiffElementLayoutInfo]?: number; };\ninterface ILayoutInfoDelta extends ILayoutInfoDelta0 {\n\trawOutputHeight?: number;\n\trecomputeOutput?: boolean;\n}\n\nexport type IDiffElementViewModelBase = DiffElementCellViewModelBase | DiffElementPlaceholderViewModel;\n\nexport abstract class DiffElementViewModelBase extends Disposable {\n\tprotected _layoutInfoEmitter = this._register(new Emitter<CellDiffViewModelLayoutChangeEvent>());\n\tonDidLayoutChange = this._layoutInfoEmitter.event;\n\tconstructor(\n\t\tpublic readonly mainDocumentTextModel: INotebookTextModel,\n\t\tpublic readonly editorEventDispatcher: NotebookDiffEditorEventDispatcher,\n\t\tpublic readonly initData: {\n\t\t\tmetadataStatusHeight: number;\n\t\t\toutputStatusHeight: number;\n\t\t\tfontInfo: FontInfo | undefined;\n\t\t}\n\t) {\n\t\tsuper();\n\n\t\tthis._register(this.editorEventDispatcher.onDidChangeLayout(e => this._layoutInfoEmitter.fire({ outerWidth: true })));\n\t}\n\n\tabstract layoutChange(): void;\n\tabstract getHeight(lineHeight: number): number;\n\tabstract get totalHeight(): number;\n}\n\nexport class DiffElementPlaceholderViewModel extends DiffElementViewModelBase {\n\treadonly type: 'placeholder' = 'placeholder';\n\tpublic hiddenCells: DiffElementCellViewModelBase[] = [];\n\tprotected _unfoldHiddenCells = this._register(new Emitter<void>());\n\tonUnfoldHiddenCells = this._unfoldHiddenCells.event;\n\n\tconstructor(\n\t\tmainDocumentTextModel: INotebookTextModel,\n\t\teditorEventDispatcher: NotebookDiffEditorEventDispatcher,\n\t\tinitData: {\n\t\t\tmetadataStatusHeight: number;\n\t\t\toutputStatusHeight: number;\n\t\t\tfontInfo: FontInfo | undefined;\n\t\t}\n\t) {\n\t\tsuper(mainDocumentTextModel, editorEventDispatcher, initData);\n\n\t}\n\tget totalHeight() {\n\t\treturn 24 + (2 * DIFF_CELL_MARGIN);\n\t}\n\tgetHeight(_: number): number {\n\t\treturn this.totalHeight;\n\t}\n\toverride layoutChange(): void {\n\t\t//\n\t}\n\tshowHiddenCells() {\n\t\tthis._unfoldHiddenCells.fire();\n\t}\n}\n\nexport abstract class DiffElementCellViewModelBase extends DiffElementViewModelBase {\n\tpublic cellFoldingState: PropertyFoldingState;\n\tpublic metadataFoldingState: PropertyFoldingState;\n\tpublic outputFoldingState: PropertyFoldingState;\n\tprotected _stateChangeEmitter = this._register(new Emitter<{ renderOutput: boolean }>());\n\tonDidStateChange = this._stateChangeEmitter.event;\n\tprotected _layoutInfo!: IDiffElementLayoutInfo;\n\n\tpublic displayIconToHideUnmodifiedCells?: boolean;\n\tprivate _hideUnchangedCells = this._register(new Emitter<void>());\n\tpublic onHideUnchangedCells = this._hideUnchangedCells.event;\n\n\thideUnchangedCells() {\n\t\tthis._hideUnchangedCells.fire();\n\t}\n\tset rawOutputHeight(height: number) {\n\t\tthis._layout({ rawOutputHeight: Math.min(OUTPUT_EDITOR_HEIGHT_MAGIC, height) });\n\t}\n\n\tget rawOutputHeight() {\n\t\tthrow new Error('Use Cell.layoutInfo.rawOutputHeight');\n\t}\n\n\tset outputStatusHeight(height: number) {\n\t\tthis._layout({ outputStatusHeight: height });\n\t}\n\n\tget outputStatusHeight() {\n\t\tthrow new Error('Use Cell.layoutInfo.outputStatusHeight');\n\t}\n\n\tset outputMetadataHeight(height: number) {\n\t\tthis._layout({ outputMetadataHeight: height });\n\t}\n\n\tget outputMetadataHeight() {\n\t\tthrow new Error('Use Cell.layoutInfo.outputStatusHeight');\n\t}\n\n\tset editorHeight(height: number) {\n\t\tthis._layout({ editorHeight: height });\n\t}\n\n\tget editorHeight() {\n\t\tthrow new Error('Use Cell.layoutInfo.editorHeight');\n\t}\n\n\tset editorMargin(margin: number) {\n\t\tthis._layout({ editorMargin: margin });\n\t}\n\n\tget editorMargin() {\n\t\tthrow new Error('Use Cell.layoutInfo.editorMargin');\n\t}\n\n\tset metadataStatusHeight(height: number) {\n\t\tthis._layout({ metadataStatusHeight: height });\n\t}\n\n\tget metadataStatusHeight() {\n\t\tthrow new Error('Use Cell.layoutInfo.outputStatusHeight');\n\t}\n\n\tset metadataHeight(height: number) {\n\t\tthis._layout({ metadataHeight: height });\n\t}\n\n\tget metadataHeight() {\n\t\tthrow new Error('Use Cell.layoutInfo.metadataHeight');\n\t}\n\n\tprivate _renderOutput = true;\n\n\tset renderOutput(value: boolean) {\n\t\tthis._renderOutput = value;\n\t\tthis._layout({ recomputeOutput: true });\n\t\tthis._stateChangeEmitter.fire({ renderOutput: this._renderOutput });\n\t}\n\n\tget renderOutput() {\n\t\treturn this._renderOutput;\n\t}\n\n\tget layoutInfo(): IDiffElementLayoutInfo {\n\t\treturn this._layoutInfo;\n\t}\n\n\tget totalHeight() {\n\t\treturn this.layoutInfo.totalHeight;\n\t}\n\n\tprivate get ignoreOutputs() {\n\t\treturn this.configurationService.getValue<boolean>('notebook.diff.ignoreOutputs') || !!(this.mainDocumentTextModel?.transientOptions.transientOutputs);\n\t}\n\n\tprivate get ignoreMetadata() {\n\t\treturn this.configurationService.getValue<boolean>('notebook.diff.ignoreMetadata');\n\t}\n\n\tprivate _sourceEditorViewState: editorCommon.ICodeEditorViewState | editorCommon.IDiffEditorViewState | null = null;\n\tprivate _outputEditorViewState: editorCommon.ICodeEditorViewState | editorCommon.IDiffEditorViewState | null = null;\n\tprivate _metadataEditorViewState: editorCommon.ICodeEditorViewState | editorCommon.IDiffEditorViewState | null = null;\n\tpublic readonly original: DiffNestedCellViewModel | undefined;\n\n\tpublic readonly modified: DiffNestedCellViewModel | undefined;\n\tconstructor(\n\t\tmainDocumentTextModel: INotebookTextModel,\n\t\toriginal: NotebookCellTextModel | undefined,\n\t\tmodified: NotebookCellTextModel | undefined,\n\t\treadonly type: 'unchanged' | 'insert' | 'delete' | 'modified',\n\t\teditorEventDispatcher: NotebookDiffEditorEventDispatcher,\n\t\tinitData: {\n\t\t\tmetadataStatusHeight: number;\n\t\t\toutputStatusHeight: number;\n\t\t\tfontInfo: FontInfo | undefined;\n\t\t},\n\t\tnotebookService: INotebookService,\n\t\tpublic readonly index: number,\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\tpublic readonly unchangedRegionsService: IUnchangedEditorRegionsService\n\t) {\n\t\tsuper(mainDocumentTextModel, editorEventDispatcher, initData);\n\t\tthis.original = original ? this._register(new DiffNestedCellViewModel(original, notebookService)) : undefined;\n\t\tthis.modified = modified ? this._register(new DiffNestedCellViewModel(modified, notebookService)) : undefined;\n\t\tconst editorHeight = this._estimateEditorHeight(initData.fontInfo);\n\t\tconst cellStatusHeight = 25;\n\t\tthis._layoutInfo = {\n\t\t\twidth: 0,\n\t\t\teditorHeight: editorHeight,\n\t\t\teditorMargin: 0,\n\t\t\tmetadataHeight: 0,\n\t\t\tcellStatusHeight,\n\t\t\tmetadataStatusHeight: this.ignoreMetadata ? 0 : 25,\n\t\t\trawOutputHeight: 0,\n\t\t\toutputTotalHeight: 0,\n\t\t\toutputStatusHeight: this.ignoreOutputs ? 0 : 25,\n\t\t\toutputMetadataHeight: 0,\n\t\t\tbodyMargin: 32,\n\t\t\ttotalHeight: 82 + cellStatusHeight + editorHeight,\n\t\t\tlayoutState: CellLayoutState.Uninitialized\n\t\t};\n\n\t\tthis.cellFoldingState = modified?.getTextBufferHash() !== original?.getTextBufferHash() ? PropertyFoldingState.Expanded : PropertyFoldingState.Collapsed;\n\t\tthis.metadataFoldingState = PropertyFoldingState.Collapsed;\n\t\tthis.outputFoldingState = PropertyFoldingState.Collapsed;\n\t}\n\n\tlayoutChange() {\n\t\tthis._layout({ recomputeOutput: true });\n\t}\n\n\tprivate _estimateEditorHeight(fontInfo: FontInfo | undefined) {\n\t\tconst lineHeight = fontInfo?.lineHeight ?? 17;\n\n\t\tswitch (this.type) {\n\t\t\tcase 'unchanged':\n\t\t\tcase 'insert':\n\t\t\t\t{\n\t\t\t\t\tconst lineCount = this.modified!.textModel.textBuffer.getLineCount();\n\t\t\t\t\tconst editorHeight = lineCount * lineHeight + getEditorPadding(lineCount).top + getEditorPadding(lineCount).bottom;\n\t\t\t\t\treturn editorHeight;\n\t\t\t\t}\n\t\t\tcase 'delete':\n\t\t\tcase 'modified':\n\t\t\t\t{\n\t\t\t\t\tconst lineCount = this.original!.textModel.textBuffer.getLineCount();\n\t\t\t\t\tconst editorHeight = lineCount * lineHeight + getEditorPadding(lineCount).top + getEditorPadding(lineCount).bottom;\n\t\t\t\t\treturn editorHeight;\n\t\t\t\t}\n\t\t}\n\t}\n\n\tprotected _layout(delta: ILayoutInfoDelta) {\n\t\tconst width = delta.width !== undefined ? delta.width : this._layoutInfo.width;\n\t\tconst editorHeight = delta.editorHeight !== undefined ? delta.editorHeight : this._layoutInfo.editorHeight;\n\t\tconst editorMargin = delta.editorMargin !== undefined ? delta.editorMargin : this._layoutInfo.editorMargin;\n\t\tconst metadataHeight = delta.metadataHeight !== undefined ? delta.metadataHeight : this._layoutInfo.metadataHeight;\n\t\tconst cellStatusHeight = delta.cellStatusHeight !== undefined ? delta.cellStatusHeight : this._layoutInfo.cellStatusHeight;\n\t\tconst metadataStatusHeight = delta.metadataStatusHeight !== undefined ? delta.metadataStatusHeight : this._layoutInfo.metadataStatusHeight;\n\t\tconst rawOutputHeight = delta.rawOutputHeight !== undefined ? delta.rawOutputHeight : this._layoutInfo.rawOutputHeight;\n\t\tconst outputStatusHeight = delta.outputStatusHeight !== undefined ? delta.outputStatusHeight : this._layoutInfo.outputStatusHeight;\n\t\tconst bodyMargin = delta.bodyMargin !== undefined ? delta.bodyMargin : this._layoutInfo.bodyMargin;\n\t\tconst outputMetadataHeight = delta.outputMetadataHeight !== undefined ? delta.outputMetadataHeight : this._layoutInfo.outputMetadataHeight;\n\t\tconst outputHeight = this.ignoreOutputs ? 0 : (delta.recomputeOutput || delta.rawOutputHeight !== undefined || delta.outputMetadataHeight !== undefined) ? this._getOutputTotalHeight(rawOutputHeight, outputMetadataHeight) : this._layoutInfo.outputTotalHeight;\n\n\t\tconst totalHeight = editorHeight\n\t\t\t+ editorMargin\n\t\t\t+ cellStatusHeight\n\t\t\t+ metadataHeight\n\t\t\t+ metadataStatusHeight\n\t\t\t+ outputHeight\n\t\t\t+ outputStatusHeight\n\t\t\t+ bodyMargin;\n\n\t\tconst newLayout: IDiffElementLayoutInfo = {\n\t\t\twidth: width,\n\t\t\teditorHeight: editorHeight,\n\t\t\teditorMargin: editorMargin,\n\t\t\tmetadataHeight: metadataHeight,\n\t\t\tcellStatusHeight,\n\t\t\tmetadataStatusHeight: metadataStatusHeight,\n\t\t\toutputTotalHeight: outputHeight,\n\t\t\toutputStatusHeight: outputStatusHeight,\n\t\t\tbodyMargin: bodyMargin,\n\t\t\trawOutputHeight: rawOutputHeight,\n\t\t\toutputMetadataHeight: outputMetadataHeight,\n\t\t\ttotalHeight: totalHeight,\n\t\t\tlayoutState: CellLayoutState.Measured\n\t\t};\n\n\t\tlet somethingChanged = false;\n\n\t\tconst changeEvent: CellDiffViewModelLayoutChangeEvent = {};\n\n\t\tif (newLayout.width !== this._layoutInfo.width) {\n\t\t\tchangeEvent.width = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (newLayout.editorHeight !== this._layoutInfo.editorHeight) {\n\t\t\tchangeEvent.editorHeight = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (newLayout.editorMargin !== this._layoutInfo.editorMargin) {\n\t\t\tchangeEvent.editorMargin = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (newLayout.metadataHeight !== this._layoutInfo.metadataHeight) {\n\t\t\tchangeEvent.metadataHeight = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (newLayout.cellStatusHeight !== this._layoutInfo.cellStatusHeight) {\n\t\t\tchangeEvent.cellStatusHeight = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (newLayout.metadataStatusHeight !== this._layoutInfo.metadataStatusHeight) {\n\t\t\tchangeEvent.metadataStatusHeight = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (newLayout.outputTotalHeight !== this._layoutInfo.outputTotalHeight) {\n\t\t\tchangeEvent.outputTotalHeight = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (newLayout.outputStatusHeight !== this._layoutInfo.outputStatusHeight) {\n\t\t\tchangeEvent.outputStatusHeight = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (newLayout.bodyMargin !== this._layoutInfo.bodyMargin) {\n\t\t\tchangeEvent.bodyMargin = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (newLayout.outputMetadataHeight !== this._layoutInfo.outputMetadataHeight) {\n\t\t\tchangeEvent.outputMetadataHeight = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (newLayout.totalHeight !== this._layoutInfo.totalHeight) {\n\t\t\tchangeEvent.totalHeight = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (somethingChanged) {\n\t\t\tthis._layoutInfo = newLayout;\n\t\t\tthis._fireLayoutChangeEvent(changeEvent);\n\t\t}\n\t}\n\n\tgetHeight(lineHeight: number) {\n\t\tif (this._layoutInfo.layoutState === CellLayoutState.Uninitialized) {\n\t\t\tconst editorHeight = this.cellFoldingState === PropertyFoldingState.Collapsed ? 0 : this.computeInputEditorHeight(lineHeight);\n\t\t\treturn this._computeTotalHeight(editorHeight);\n\t\t} else {\n\t\t\treturn this._layoutInfo.totalHeight;\n\t\t}\n\t}\n\n\tprivate _computeTotalHeight(editorHeight: number) {\n\t\tconst totalHeight = editorHeight\n\t\t\t+ this._layoutInfo.editorMargin\n\t\t\t+ this._layoutInfo.metadataHeight\n\t\t\t+ this._layoutInfo.cellStatusHeight\n\t\t\t+ this._layoutInfo.metadataStatusHeight\n\t\t\t+ this._layoutInfo.outputTotalHeight\n\t\t\t+ this._layoutInfo.outputStatusHeight\n\t\t\t+ this._layoutInfo.outputMetadataHeight\n\t\t\t+ this._layoutInfo.bodyMargin;\n\n\t\treturn totalHeight;\n\t}\n\n\tpublic computeInputEditorHeight(lineHeight: number): number {\n\t\tconst lineCount = Math.max(this.original?.textModel.textBuffer.getLineCount() ?? 1, this.modified?.textModel.textBuffer.getLineCount() ?? 1);\n\t\treturn lineCount * lineHeight + getEditorPadding(lineCount).top + getEditorPadding(lineCount).bottom;\n\t}\n\n\tprivate _getOutputTotalHeight(rawOutputHeight: number, metadataHeight: number) {\n\t\tif (this.outputFoldingState === PropertyFoldingState.Collapsed) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (this.renderOutput) {\n\t\t\tif (this.isOutputEmpty()) {\n\t\t\t\t// single line;\n\t\t\t\treturn 24;\n\t\t\t}\n\t\t\treturn this.getRichOutputTotalHeight() + metadataHeight;\n\t\t} else {\n\t\t\treturn rawOutputHeight;\n\t\t}\n\t}\n\n\tprivate _fireLayoutChangeEvent(state: CellDiffViewModelLayoutChangeEvent) {\n\t\tthis._layoutInfoEmitter.fire(state);\n\t\tthis.editorEventDispatcher.emit([{ type: NotebookDiffViewEventType.CellLayoutChanged, source: this._layoutInfo }]);\n\t}\n\n\tabstract checkIfInputModified(): false | { reason: string | undefined };\n\tabstract checkIfOutputsModified(): false | { reason: string | undefined };\n\tabstract checkMetadataIfModified(): false | { reason: string | undefined };\n\tabstract isOutputEmpty(): boolean;\n\tabstract getRichOutputTotalHeight(): number;\n\tabstract getCellByUri(cellUri: URI): IGenericCellViewModel;\n\tabstract getOutputOffsetInCell(diffSide: DiffSide, index: number): number;\n\tabstract getOutputOffsetInContainer(diffSide: DiffSide, index: number): number;\n\tabstract updateOutputHeight(diffSide: DiffSide, index: number, height: number): void;\n\tabstract getNestedCellViewModel(diffSide: DiffSide): DiffNestedCellViewModel;\n\n\tgetComputedCellContainerWidth(layoutInfo: NotebookLayoutInfo, diffEditor: boolean, fullWidth: boolean) {\n\t\tif (fullWidth) {\n\t\t\treturn layoutInfo.width - 2 * DIFF_CELL_MARGIN + (diffEditor ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0) - 2;\n\t\t}\n\n\t\treturn (layoutInfo.width - 2 * DIFF_CELL_MARGIN + (diffEditor ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0)) / 2 - 18 - 2;\n\t}\n\n\tgetOutputEditorViewState(): editorCommon.ICodeEditorViewState | editorCommon.IDiffEditorViewState | null {\n\t\treturn this._outputEditorViewState;\n\t}\n\n\tsaveOutputEditorViewState(viewState: editorCommon.ICodeEditorViewState | editorCommon.IDiffEditorViewState | null) {\n\t\tthis._outputEditorViewState = viewState;\n\t}\n\n\tgetMetadataEditorViewState(): editorCommon.ICodeEditorViewState | editorCommon.IDiffEditorViewState | null {\n\t\treturn this._metadataEditorViewState;\n\t}\n\n\tsaveMetadataEditorViewState(viewState: editorCommon.ICodeEditorViewState | editorCommon.IDiffEditorViewState | null) {\n\t\tthis._metadataEditorViewState = viewState;\n\t}\n\n\tgetSourceEditorViewState(): editorCommon.ICodeEditorViewState | editorCommon.IDiffEditorViewState | null {\n\t\treturn this._sourceEditorViewState;\n\t}\n\n\tsaveSpirceEditorViewState(viewState: editorCommon.ICodeEditorViewState | editorCommon.IDiffEditorViewState | null) {\n\t\tthis._sourceEditorViewState = viewState;\n\t}\n}\n\nexport class SideBySideDiffElementViewModel extends DiffElementCellViewModelBase {\n\tget originalDocument() {\n\t\treturn this.otherDocumentTextModel;\n\t}\n\n\tget modifiedDocument() {\n\t\treturn this.mainDocumentTextModel;\n\t}\n\n\toverride readonly original!: DiffNestedCellViewModel;\n\toverride readonly modified!: DiffNestedCellViewModel;\n\toverride readonly type: 'unchanged' | 'modified';\n\n\t/**\n\t * The height of the editor when the unchanged lines are collapsed.\n\t */\n\tprivate editorHeightWithUnchangedLinesCollapsed?: number;\n\tconstructor(\n\t\tmainDocumentTextModel: NotebookTextModel,\n\t\treadonly otherDocumentTextModel: NotebookTextModel,\n\t\toriginal: NotebookCellTextModel,\n\t\tmodified: NotebookCellTextModel,\n\t\ttype: 'unchanged' | 'modified',\n\t\teditorEventDispatcher: NotebookDiffEditorEventDispatcher,\n\t\tinitData: {\n\t\t\tmetadataStatusHeight: number;\n\t\t\toutputStatusHeight: number;\n\t\t\tfontInfo: FontInfo | undefined;\n\t\t},\n\t\tnotebookService: INotebookService,\n\t\tconfigurationService: IConfigurationService,\n\t\tindex: number,\n\t\tunchangedRegionsService: IUnchangedEditorRegionsService\n\t) {\n\t\tsuper(\n\t\t\tmainDocumentTextModel,\n\t\t\toriginal,\n\t\t\tmodified,\n\t\t\ttype,\n\t\t\teditorEventDispatcher,\n\t\t\tinitData,\n\t\t\tnotebookService,\n\t\t\tindex,\n\t\t\tconfigurationService,\n\t\t\tunchangedRegionsService);\n\n\t\tthis.type = type;\n\n\t\tthis.cellFoldingState = this.modified.textModel.getValue() !== this.original.textModel.getValue() ? PropertyFoldingState.Expanded : PropertyFoldingState.Collapsed;\n\t\tthis.metadataFoldingState = PropertyFoldingState.Collapsed;\n\t\tthis.outputFoldingState = PropertyFoldingState.Collapsed;\n\n\t\tif (this.checkMetadataIfModified()) {\n\t\t\tthis.metadataFoldingState = PropertyFoldingState.Expanded;\n\t\t}\n\n\t\tif (this.checkIfOutputsModified()) {\n\t\t\tthis.outputFoldingState = PropertyFoldingState.Expanded;\n\t\t}\n\n\t\tthis._register(this.original.onDidChangeOutputLayout(() => {\n\t\t\tthis._layout({ recomputeOutput: true });\n\t\t}));\n\n\t\tthis._register(this.modified.onDidChangeOutputLayout(() => {\n\t\t\tthis._layout({ recomputeOutput: true });\n\t\t}));\n\n\t\tthis._register(this.modified.textModel.onDidChangeContent(() => {\n\t\t\tif (mainDocumentTextModel.transientOptions.cellContentMetadata) {\n\t\t\t\tconst cellMetadataKeys = [...Object.keys(mainDocumentTextModel.transientOptions.cellContentMetadata)];\n\t\t\t\tconst modifiedMedataRaw = Object.assign({}, this.modified.metadata);\n\t\t\t\tconst originalCellMetadata = this.original.metadata;\n\t\t\t\tfor (const key of cellMetadataKeys) {\n\t\t\t\t\tif (key in originalCellMetadata) {\n\t\t\t\t\t\tmodifiedMedataRaw[key] = originalCellMetadata[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.modified.textModel.metadata = modifiedMedataRaw;\n\t\t\t}\n\t\t}));\n\t}\n\n\toverride checkIfInputModified(): false | { reason: string | undefined } {\n\t\tif (this.original.textModel.getTextBufferHash() === this.modified.textModel.getTextBufferHash()) {\n\t\t\treturn false;\n\t\t}\n\t\treturn {\n\t\t\treason: 'Cell content has changed',\n\t\t};\n\t}\n\tcheckIfOutputsModified() {\n\t\tif (this.mainDocumentTextModel.transientOptions.transientOutputs) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst ret = outputsEqual(this.original?.outputs ?? [], this.modified?.outputs ?? []);\n\n\t\tif (ret === OutputComparison.Unchanged) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn {\n\t\t\treason: ret === OutputComparison.Metadata ? 'Output metadata has changed' : undefined,\n\t\t\tkind: ret\n\t\t};\n\t}\n\n\tcheckMetadataIfModified() {\n\t\tconst modified = hash(getFormattedMetadataJSON(this.mainDocumentTextModel.transientOptions.transientCellMetadata, this.original?.metadata || {}, this.original?.language)) !== hash(getFormattedMetadataJSON(this.mainDocumentTextModel.transientOptions.transientCellMetadata, this.modified?.metadata ?? {}, this.modified?.language));\n\t\tif (modified) {\n\t\t\treturn { reason: undefined };\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tupdateOutputHeight(diffSide: DiffSide, index: number, height: number) {\n\t\tif (diffSide === DiffSide.Original) {\n\t\t\tthis.original.updateOutputHeight(index, height);\n\t\t} else {\n\t\t\tthis.modified.updateOutputHeight(index, height);\n\t\t}\n\t}\n\n\tgetOutputOffsetInContainer(diffSide: DiffSide, index: number) {\n\t\tif (diffSide === DiffSide.Original) {\n\t\t\treturn this.original.getOutputOffset(index);\n\t\t} else {\n\t\t\treturn this.modified.getOutputOffset(index);\n\t\t}\n\t}\n\n\tgetOutputOffsetInCell(diffSide: DiffSide, index: number) {\n\t\tconst offsetInOutputsContainer = this.getOutputOffsetInContainer(diffSide, index);\n\n\t\treturn this._layoutInfo.editorHeight\n\t\t\t+ this._layoutInfo.editorMargin\n\t\t\t+ this._layoutInfo.metadataHeight\n\t\t\t+ this._layoutInfo.cellStatusHeight\n\t\t\t+ this._layoutInfo.metadataStatusHeight\n\t\t\t+ this._layoutInfo.outputStatusHeight\n\t\t\t+ this._layoutInfo.bodyMargin / 2\n\t\t\t+ offsetInOutputsContainer;\n\t}\n\n\tisOutputEmpty() {\n\t\tif (this.mainDocumentTextModel.transientOptions.transientOutputs) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this.checkIfOutputsModified()) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// outputs are not changed\n\n\t\treturn (this.original?.outputs || []).length === 0;\n\t}\n\n\tgetRichOutputTotalHeight() {\n\t\treturn Math.max(this.original.getOutputTotalHeight(), this.modified.getOutputTotalHeight());\n\t}\n\n\tgetNestedCellViewModel(diffSide: DiffSide): DiffNestedCellViewModel {\n\t\treturn diffSide === DiffSide.Original ? this.original : this.modified;\n\t}\n\n\tgetCellByUri(cellUri: URI): IGenericCellViewModel {\n\t\tif (cellUri.toString() === this.original.uri.toString()) {\n\t\t\treturn this.original;\n\t\t} else {\n\t\t\treturn this.modified;\n\t\t}\n\t}\n\n\tpublic override computeInputEditorHeight(lineHeight: number): number {\n\t\tif (this.type === 'modified' &&\n\t\t\ttypeof this.editorHeightWithUnchangedLinesCollapsed === 'number' &&\n\t\t\tthis.unchangedRegionsService.options.enabled &&\n\t\t\tthis.checkIfInputModified()) {\n\t\t\treturn this.editorHeightWithUnchangedLinesCollapsed;\n\t\t}\n\n\t\treturn super.computeInputEditorHeight(lineHeight);\n\t}\n\n\tprivate async computeInputEditorHeightWithUnchangedLinesHidden() {\n\t\tif (this.checkIfInputModified()) {\n\t\t\tthis.editorHeightWithUnchangedLinesCollapsed = this._layoutInfo.editorHeight = await this.unchangedRegionsService.computeEditorHeight(this.original.uri, this.modified.uri);\n\t\t}\n\t}\n\n\tprivate async computeMetadataEditorHeightWithUnchangedLinesHidden() {\n\t\tif (this.checkMetadataIfModified()) {\n\t\t\tconst originalMetadataUri = CellUri.generateCellPropertyUri(this.originalDocument.uri, this.original.handle, Schemas.vscodeNotebookCellMetadata);\n\t\t\tconst modifiedMetadataUri = CellUri.generateCellPropertyUri(this.modifiedDocument.uri, this.modified.handle, Schemas.vscodeNotebookCellMetadata);\n\t\t\tthis._layoutInfo.metadataHeight = await this.unchangedRegionsService.computeEditorHeight(originalMetadataUri, modifiedMetadataUri);\n\t\t}\n\t}\n\n\tpublic async computeEditorHeights() {\n\t\tif (this.type === 'unchanged' || !this.unchangedRegionsService.options.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait Promise.all([this.computeInputEditorHeightWithUnchangedLinesHidden(), this.computeMetadataEditorHeightWithUnchangedLinesHidden()]);\n\t}\n\n}\n\nexport class SingleSideDiffElementViewModel extends DiffElementCellViewModelBase {\n\tget cellViewModel() {\n\t\treturn this.type === 'insert' ? this.modified! : this.original!;\n\t}\n\n\tget originalDocument() {\n\t\tif (this.type === 'insert') {\n\t\t\treturn this.otherDocumentTextModel;\n\t\t} else {\n\t\t\treturn this.mainDocumentTextModel;\n\t\t}\n\t}\n\n\tget modifiedDocument() {\n\t\tif (this.type === 'insert') {\n\t\t\treturn this.mainDocumentTextModel;\n\t\t} else {\n\t\t\treturn this.otherDocumentTextModel;\n\t\t}\n\t}\n\n\toverride readonly type: 'insert' | 'delete';\n\n\tconstructor(\n\t\tmainDocumentTextModel: NotebookTextModel,\n\t\treadonly otherDocumentTextModel: NotebookTextModel,\n\t\toriginal: NotebookCellTextModel | undefined,\n\t\tmodified: NotebookCellTextModel | undefined,\n\t\ttype: 'insert' | 'delete',\n\t\teditorEventDispatcher: NotebookDiffEditorEventDispatcher,\n\t\tinitData: {\n\t\t\tmetadataStatusHeight: number;\n\t\t\toutputStatusHeight: number;\n\t\t\tfontInfo: FontInfo | undefined;\n\t\t},\n\t\tnotebookService: INotebookService,\n\t\tconfigurationService: IConfigurationService,\n\t\tunchangedRegionsService: IUnchangedEditorRegionsService,\n\t\tindex: number\n\t) {\n\t\tsuper(mainDocumentTextModel, original, modified, type, editorEventDispatcher, initData, notebookService, index, configurationService, unchangedRegionsService);\n\t\tthis.type = type;\n\n\t\tthis._register(this.cellViewModel.onDidChangeOutputLayout(() => {\n\t\t\tthis._layout({ recomputeOutput: true });\n\t\t}));\n\t}\n\n\toverride checkIfInputModified(): false | { reason: string | undefined } {\n\t\treturn {\n\t\t\treason: 'Cell content has changed',\n\t\t};\n\t}\n\n\tgetNestedCellViewModel(diffSide: DiffSide): DiffNestedCellViewModel {\n\t\treturn this.type === 'insert' ? this.modified! : this.original!;\n\t}\n\n\n\tcheckIfOutputsModified(): false | { reason: string | undefined } {\n\t\treturn false;\n\t}\n\n\tcheckMetadataIfModified(): false | { reason: string | undefined } {\n\t\treturn false;\n\t}\n\n\tupdateOutputHeight(diffSide: DiffSide, index: number, height: number) {\n\t\tthis.cellViewModel?.updateOutputHeight(index, height);\n\t}\n\n\tgetOutputOffsetInContainer(diffSide: DiffSide, index: number) {\n\t\treturn this.cellViewModel.getOutputOffset(index);\n\t}\n\n\tgetOutputOffsetInCell(diffSide: DiffSide, index: number) {\n\t\tconst offsetInOutputsContainer = this.cellViewModel.getOutputOffset(index);\n\n\t\treturn this._layoutInfo.editorHeight\n\t\t\t+ this._layoutInfo.editorMargin\n\t\t\t+ this._layoutInfo.metadataHeight\n\t\t\t+ this._layoutInfo.cellStatusHeight\n\t\t\t+ this._layoutInfo.metadataStatusHeight\n\t\t\t+ this._layoutInfo.outputStatusHeight\n\t\t\t+ this._layoutInfo.bodyMargin / 2\n\t\t\t+ offsetInOutputsContainer;\n\t}\n\n\tisOutputEmpty() {\n\t\tif (this.mainDocumentTextModel.transientOptions.transientOutputs) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// outputs are not changed\n\n\t\treturn (this.original?.outputs || this.modified?.outputs || []).length === 0;\n\t}\n\n\tgetRichOutputTotalHeight() {\n\t\treturn this.cellViewModel?.getOutputTotalHeight() ?? 0;\n\t}\n\n\tgetCellByUri(cellUri: URI): IGenericCellViewModel {\n\t\treturn this.cellViewModel;\n\t}\n}\n\nexport const enum OutputComparison {\n\tUnchanged = 0,\n\tMetadata = 1,\n\tOther = 2\n}\n\nexport function outputEqual(a: ICellOutput, b: ICellOutput): OutputComparison {\n\tif (hash(a.metadata) === hash(b.metadata)) {\n\t\treturn OutputComparison.Other;\n\t}\n\n\t// metadata not equal\n\tfor (let j = 0; j < a.outputs.length; j++) {\n\t\tconst aOutputItem = a.outputs[j];\n\t\tconst bOutputItem = b.outputs[j];\n\n\t\tif (aOutputItem.mime !== bOutputItem.mime) {\n\t\t\treturn OutputComparison.Other;\n\t\t}\n\n\t\tif (aOutputItem.data.buffer.length !== bOutputItem.data.buffer.length) {\n\t\t\treturn OutputComparison.Other;\n\t\t}\n\n\t\tfor (let k = 0; k < aOutputItem.data.buffer.length; k++) {\n\t\t\tif (aOutputItem.data.buffer[k] !== bOutputItem.data.buffer[k]) {\n\t\t\t\treturn OutputComparison.Other;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn OutputComparison.Metadata;\n}\n\nfunction outputsEqual(original: ICellOutput[], modified: ICellOutput[]) {\n\tif (original.length !== modified.length) {\n\t\treturn OutputComparison.Other;\n\t}\n\n\tconst len = original.length;\n\tfor (let i = 0; i < len; i++) {\n\t\tconst a = original[i];\n\t\tconst b = modified[i];\n\n\t\tif (hash(a.metadata) !== hash(b.metadata)) {\n\t\t\treturn OutputComparison.Metadata;\n\t\t}\n\n\t\tif (a.outputs.length !== b.outputs.length) {\n\t\t\treturn OutputComparison.Other;\n\t\t}\n\n\t\tfor (let j = 0; j < a.outputs.length; j++) {\n\t\t\tconst aOutputItem = a.outputs[j];\n\t\t\tconst bOutputItem = b.outputs[j];\n\n\t\t\tif (aOutputItem.mime !== bOutputItem.mime) {\n\t\t\t\treturn OutputComparison.Other;\n\t\t\t}\n\n\t\t\tif (aOutputItem.data.buffer.length !== bOutputItem.data.buffer.length) {\n\t\t\t\treturn OutputComparison.Other;\n\t\t\t}\n\n\t\t\tfor (let k = 0; k < aOutputItem.data.buffer.length; k++) {\n\t\t\t\tif (aOutputItem.data.buffer[k] !== bOutputItem.data.buffer[k]) {\n\t\t\t\t\treturn OutputComparison.Other;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn OutputComparison.Unchanged;\n}\n\nexport function getStreamOutputData(outputs: IOutputItemDto[]) {\n\tif (!outputs.length) {\n\t\treturn null;\n\t}\n\n\tconst first = outputs[0];\n\tconst mime = first.mime;\n\tconst sameStream = !outputs.find(op => op.mime !== mime);\n\n\tif (sameStream) {\n\t\treturn outputs.map(opit => opit.data.toString()).join('');\n\t} else {\n\t\treturn null;\n\t}\n}\n\nexport function getFormattedOutputJSON(outputs: IOutputDto[]) {\n\tif (outputs.length === 1) {\n\t\tconst streamOutputData = getStreamOutputData(outputs[0].outputs);\n\t\tif (streamOutputData) {\n\t\t\treturn streamOutputData;\n\t\t}\n\t}\n\n\treturn JSON.stringify(outputs.map(output => {\n\t\treturn ({\n\t\t\tmetadata: output.metadata,\n\t\t\toutputItems: output.outputs.map(opit => ({\n\t\t\t\tmimeType: opit.mime,\n\t\t\t\tdata: opit.data.toString()\n\t\t\t}))\n\t\t});\n\t}), undefined, '\\t');\n}\n"],
  "mappings": "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",
  "names": ["PropertyFoldingState", "OutputComparison"]
}
