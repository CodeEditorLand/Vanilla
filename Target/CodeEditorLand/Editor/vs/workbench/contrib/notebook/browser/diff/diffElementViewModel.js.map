{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/diff/diffElementViewModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from \"../../../../../base/common/event.js\";\nimport { hash } from \"../../../../../base/common/hash.js\";\nimport { Disposable } from \"../../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../../base/common/network.js\";\nimport type { URI } from \"../../../../../base/common/uri.js\";\nimport { DiffEditorWidget } from \"../../../../../editor/browser/widget/diffEditor/diffEditorWidget.js\";\nimport type { FontInfo } from \"../../../../../editor/common/config/fontInfo.js\";\nimport type * as editorCommon from \"../../../../../editor/common/editorCommon.js\";\nimport type { IConfigurationService } from \"../../../../../platform/configuration/common/configuration.js\";\nimport {\n\ttype NotebookCellTextModel,\n\tgetFormattedMetadataJSON,\n} from \"../../common/model/notebookCellTextModel.js\";\nimport { NotebookDocumentMetadataTextModel } from \"../../common/model/notebookMetadataTextModel.js\";\nimport type { NotebookTextModel } from \"../../common/model/notebookTextModel.js\";\nimport {\n\tCellUri,\n\ttype ICellOutput,\n\ttype INotebookTextModel,\n\ttype IOutputDto,\n\ttype IOutputItemDto,\n} from \"../../common/notebookCommon.js\";\nimport type { INotebookService } from \"../../common/notebookService.js\";\nimport {\n\tCellLayoutState,\n\ttype IGenericCellViewModel,\n} from \"../notebookBrowser.js\";\nimport type { NotebookLayoutInfo } from \"../notebookViewEvents.js\";\nimport { getEditorPadding } from \"./diffCellEditorOptions.js\";\nimport { DiffNestedCellViewModel } from \"./diffNestedCellViewModel.js\";\nimport type { IDiffEditorHeightCalculatorService } from \"./editorHeightCalculator.js\";\nimport {\n\ttype NotebookDiffEditorEventDispatcher,\n\tNotebookDiffViewEventType,\n} from \"./eventDispatcher.js\";\nimport {\n\ttype CellDiffViewModelLayoutChangeEvent,\n\tDIFF_CELL_MARGIN,\n\tDiffSide,\n\ttype IDiffElementLayoutInfo,\n} from \"./notebookDiffEditorBrowser.js\";\n\nconst PropertyHeaderHeight = 25;\n\n// From `.monaco-editor .diff-hidden-lines .center` in src/vs/editor/browser/widget/diffEditor/style.css\nexport const HeightOfHiddenLinesRegionInDiffEditor = 24;\n\nexport const DefaultLineHeight = 17;\n\nexport enum PropertyFoldingState {\n\tExpanded = 0,\n\tCollapsed = 1,\n}\n\nexport const OUTPUT_EDITOR_HEIGHT_MAGIC = 1440;\n\ntype ILayoutInfoDelta0 = { [K in keyof IDiffElementLayoutInfo]?: number };\ninterface ILayoutInfoDelta extends ILayoutInfoDelta0 {\n\trawOutputHeight?: number;\n\trecomputeOutput?: boolean;\n}\n\nexport type IDiffElementViewModelBase =\n\t| DiffElementCellViewModelBase\n\t| DiffElementPlaceholderViewModel\n\t| NotebookDocumentMetadataViewModel;\n\nexport abstract class DiffElementViewModelBase extends Disposable {\n\tprotected _layoutInfoEmitter = this._register(\n\t\tnew Emitter<CellDiffViewModelLayoutChangeEvent>(),\n\t);\n\tonDidLayoutChange = this._layoutInfoEmitter.event;\n\tabstract renderOutput: boolean;\n\tconstructor(\n\t\tpublic readonly mainDocumentTextModel: INotebookTextModel,\n\t\tpublic readonly editorEventDispatcher: NotebookDiffEditorEventDispatcher,\n\t\tpublic readonly initData: {\n\t\t\tmetadataStatusHeight: number;\n\t\t\toutputStatusHeight: number;\n\t\t\tfontInfo: FontInfo | undefined;\n\t\t},\n\t) {\n\t\tsuper();\n\n\t\tthis._register(\n\t\t\tthis.editorEventDispatcher.onDidChangeLayout((e) =>\n\t\t\t\tthis._layoutInfoEmitter.fire({ outerWidth: true }),\n\t\t\t),\n\t\t);\n\t}\n\n\tabstract layoutChange(): void;\n\tabstract getHeight(lineHeight: number): number;\n\tabstract get totalHeight(): number;\n}\n\nexport class DiffElementPlaceholderViewModel extends DiffElementViewModelBase {\n\treadonly type = \"placeholder\" as const;\n\tpublic hiddenCells: DiffElementCellViewModelBase[] = [];\n\tprotected _unfoldHiddenCells = this._register(new Emitter<void>());\n\tonUnfoldHiddenCells = this._unfoldHiddenCells.event;\n\n\tpublic renderOutput = false;\n\tconstructor(\n\t\tmainDocumentTextModel: INotebookTextModel,\n\t\teditorEventDispatcher: NotebookDiffEditorEventDispatcher,\n\t\tinitData: {\n\t\t\tmetadataStatusHeight: number;\n\t\t\toutputStatusHeight: number;\n\t\t\tfontInfo: FontInfo | undefined;\n\t\t},\n\t) {\n\t\tsuper(mainDocumentTextModel, editorEventDispatcher, initData);\n\t}\n\tget totalHeight() {\n\t\treturn 24 + 2 * DIFF_CELL_MARGIN;\n\t}\n\tgetHeight(_: number): number {\n\t\treturn this.totalHeight;\n\t}\n\toverride layoutChange(): void {\n\t\t//\n\t}\n\tshowHiddenCells() {\n\t\tthis._unfoldHiddenCells.fire();\n\t}\n}\n\nexport class NotebookDocumentMetadataViewModel extends DiffElementViewModelBase {\n\tpublic readonly originalMetadata: NotebookDocumentMetadataTextModel;\n\tpublic readonly modifiedMetadata: NotebookDocumentMetadataTextModel;\n\tpublic cellFoldingState: PropertyFoldingState;\n\tprotected _layoutInfo!: IDiffElementLayoutInfo;\n\tpublic renderOutput = false;\n\tset editorHeight(height: number) {\n\t\tthis._layout({ editorHeight: height });\n\t}\n\n\tget editorHeight() {\n\t\tthrow new Error(\"Use Cell.layoutInfo.editorHeight\");\n\t}\n\n\tset editorMargin(margin: number) {\n\t\tthis._layout({ editorMargin: margin });\n\t}\n\n\tget editorMargin() {\n\t\tthrow new Error(\"Use Cell.layoutInfo.editorMargin\");\n\t}\n\tget layoutInfo(): IDiffElementLayoutInfo {\n\t\treturn this._layoutInfo;\n\t}\n\n\tget totalHeight() {\n\t\treturn this.layoutInfo.totalHeight;\n\t}\n\n\tprivate _sourceEditorViewState:\n\t\t| editorCommon.ICodeEditorViewState\n\t\t| editorCommon.IDiffEditorViewState\n\t\t| null = null;\n\tconstructor(\n\t\tpublic readonly originalDocumentTextModel: INotebookTextModel,\n\t\tpublic readonly modifiedDocumentTextModel: INotebookTextModel,\n\t\tpublic readonly type: \"unchangedMetadata\" | \"modifiedMetadata\",\n\t\teditorEventDispatcher: NotebookDiffEditorEventDispatcher,\n\t\tinitData: {\n\t\t\tmetadataStatusHeight: number;\n\t\t\toutputStatusHeight: number;\n\t\t\tfontInfo: FontInfo | undefined;\n\t\t},\n\t\tnotebookService: INotebookService,\n\t\tprivate readonly editorHeightCalculator: IDiffEditorHeightCalculatorService,\n\t) {\n\t\tsuper(originalDocumentTextModel, editorEventDispatcher, initData);\n\n\t\tconst cellStatusHeight = PropertyHeaderHeight;\n\t\tthis._layoutInfo = {\n\t\t\twidth: 0,\n\t\t\teditorHeight: 0,\n\t\t\teditorMargin: 0,\n\t\t\tmetadataHeight: 0,\n\t\t\tcellStatusHeight,\n\t\t\tmetadataStatusHeight: 0,\n\t\t\trawOutputHeight: 0,\n\t\t\toutputTotalHeight: 0,\n\t\t\toutputStatusHeight: 0,\n\t\t\toutputMetadataHeight: 0,\n\t\t\tbodyMargin: 32,\n\t\t\ttotalHeight: 82 + cellStatusHeight + 0,\n\t\t\tlayoutState: CellLayoutState.Uninitialized,\n\t\t};\n\n\t\tthis.cellFoldingState =\n\t\t\ttype === \"modifiedMetadata\"\n\t\t\t\t? PropertyFoldingState.Expanded\n\t\t\t\t: PropertyFoldingState.Collapsed;\n\t\tthis.originalMetadata = this._register(\n\t\t\tnew NotebookDocumentMetadataTextModel(originalDocumentTextModel),\n\t\t);\n\t\tthis.modifiedMetadata = this._register(\n\t\t\tnew NotebookDocumentMetadataTextModel(modifiedDocumentTextModel),\n\t\t);\n\t}\n\n\tpublic async computeHeights() {\n\t\tif (this.type === \"unchangedMetadata\") {\n\t\t\tthis.editorHeight =\n\t\t\t\tthis.editorHeightCalculator.computeHeightFromLines(\n\t\t\t\t\tthis.originalMetadata.textBuffer.getLineCount(),\n\t\t\t\t);\n\t\t} else {\n\t\t\tconst original = this.originalMetadata.uri;\n\t\t\tconst modified = this.modifiedMetadata.uri;\n\t\t\tthis.editorHeight =\n\t\t\t\tawait this.editorHeightCalculator.diffAndComputeHeight(\n\t\t\t\t\toriginal,\n\t\t\t\t\tmodified,\n\t\t\t\t);\n\t\t}\n\t}\n\n\tlayoutChange() {\n\t\tthis._layout({ recomputeOutput: true });\n\t}\n\n\tprotected _layout(delta: ILayoutInfoDelta) {\n\t\tconst width =\n\t\t\tdelta.width !== undefined ? delta.width : this._layoutInfo.width;\n\t\tconst editorHeight =\n\t\t\tdelta.editorHeight !== undefined\n\t\t\t\t? delta.editorHeight\n\t\t\t\t: this._layoutInfo.editorHeight;\n\t\tconst editorMargin =\n\t\t\tdelta.editorMargin !== undefined\n\t\t\t\t? delta.editorMargin\n\t\t\t\t: this._layoutInfo.editorMargin;\n\t\tconst cellStatusHeight =\n\t\t\tdelta.cellStatusHeight !== undefined\n\t\t\t\t? delta.cellStatusHeight\n\t\t\t\t: this._layoutInfo.cellStatusHeight;\n\t\tconst bodyMargin =\n\t\t\tdelta.bodyMargin !== undefined\n\t\t\t\t? delta.bodyMargin\n\t\t\t\t: this._layoutInfo.bodyMargin;\n\n\t\tconst totalHeight =\n\t\t\teditorHeight + editorMargin + cellStatusHeight + bodyMargin;\n\n\t\tconst newLayout: IDiffElementLayoutInfo = {\n\t\t\twidth: width,\n\t\t\teditorHeight: editorHeight,\n\t\t\teditorMargin: editorMargin,\n\t\t\tmetadataHeight: 0,\n\t\t\tcellStatusHeight,\n\t\t\tmetadataStatusHeight: 0,\n\t\t\toutputTotalHeight: 0,\n\t\t\toutputStatusHeight: 0,\n\t\t\tbodyMargin: bodyMargin,\n\t\t\trawOutputHeight: 0,\n\t\t\toutputMetadataHeight: 0,\n\t\t\ttotalHeight: totalHeight,\n\t\t\tlayoutState: CellLayoutState.Measured,\n\t\t};\n\n\t\tlet somethingChanged = false;\n\n\t\tconst changeEvent: CellDiffViewModelLayoutChangeEvent = {};\n\n\t\tif (newLayout.width !== this._layoutInfo.width) {\n\t\t\tchangeEvent.width = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (newLayout.editorHeight !== this._layoutInfo.editorHeight) {\n\t\t\tchangeEvent.editorHeight = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (newLayout.editorMargin !== this._layoutInfo.editorMargin) {\n\t\t\tchangeEvent.editorMargin = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (newLayout.cellStatusHeight !== this._layoutInfo.cellStatusHeight) {\n\t\t\tchangeEvent.cellStatusHeight = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (newLayout.bodyMargin !== this._layoutInfo.bodyMargin) {\n\t\t\tchangeEvent.bodyMargin = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (newLayout.totalHeight !== this._layoutInfo.totalHeight) {\n\t\t\tchangeEvent.totalHeight = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (somethingChanged) {\n\t\t\tthis._layoutInfo = newLayout;\n\t\t\tthis._fireLayoutChangeEvent(changeEvent);\n\t\t}\n\t}\n\n\tgetHeight(lineHeight: number) {\n\t\tif (this._layoutInfo.layoutState === CellLayoutState.Uninitialized) {\n\t\t\tconst editorHeight =\n\t\t\t\tthis.cellFoldingState === PropertyFoldingState.Collapsed\n\t\t\t\t\t? 0\n\t\t\t\t\t: this.computeInputEditorHeight(lineHeight);\n\t\t\treturn this._computeTotalHeight(editorHeight);\n\t\t} else {\n\t\t\treturn this._layoutInfo.totalHeight;\n\t\t}\n\t}\n\n\tprivate _computeTotalHeight(editorHeight: number) {\n\t\tconst totalHeight =\n\t\t\teditorHeight +\n\t\t\tthis._layoutInfo.editorMargin +\n\t\t\tthis._layoutInfo.metadataHeight +\n\t\t\tthis._layoutInfo.cellStatusHeight +\n\t\t\tthis._layoutInfo.metadataStatusHeight +\n\t\t\tthis._layoutInfo.outputTotalHeight +\n\t\t\tthis._layoutInfo.outputStatusHeight +\n\t\t\tthis._layoutInfo.outputMetadataHeight +\n\t\t\tthis._layoutInfo.bodyMargin;\n\n\t\treturn totalHeight;\n\t}\n\n\tpublic computeInputEditorHeight(_lineHeight: number): number {\n\t\treturn this.editorHeightCalculator.computeHeightFromLines(\n\t\t\tMath.max(\n\t\t\t\tthis.originalMetadata.textBuffer.getLineCount(),\n\t\t\t\tthis.modifiedMetadata.textBuffer.getLineCount(),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate _fireLayoutChangeEvent(state: CellDiffViewModelLayoutChangeEvent) {\n\t\tthis._layoutInfoEmitter.fire(state);\n\t\tthis.editorEventDispatcher.emit([\n\t\t\t{\n\t\t\t\ttype: NotebookDiffViewEventType.CellLayoutChanged,\n\t\t\t\tsource: this._layoutInfo,\n\t\t\t},\n\t\t]);\n\t}\n\n\tgetComputedCellContainerWidth(\n\t\tlayoutInfo: NotebookLayoutInfo,\n\t\tdiffEditor: boolean,\n\t\tfullWidth: boolean,\n\t) {\n\t\tif (fullWidth) {\n\t\t\treturn (\n\t\t\t\tlayoutInfo.width -\n\t\t\t\t2 * DIFF_CELL_MARGIN +\n\t\t\t\t(diffEditor ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0) -\n\t\t\t\t2\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t(layoutInfo.width -\n\t\t\t\t2 * DIFF_CELL_MARGIN +\n\t\t\t\t(diffEditor\n\t\t\t\t\t? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH\n\t\t\t\t\t: 0)) /\n\t\t\t\t2 -\n\t\t\t18 -\n\t\t\t2\n\t\t);\n\t}\n\n\tgetSourceEditorViewState():\n\t\t| editorCommon.ICodeEditorViewState\n\t\t| editorCommon.IDiffEditorViewState\n\t\t| null {\n\t\treturn this._sourceEditorViewState;\n\t}\n\n\tsaveSpirceEditorViewState(\n\t\tviewState:\n\t\t\t| editorCommon.ICodeEditorViewState\n\t\t\t| editorCommon.IDiffEditorViewState\n\t\t\t| null,\n\t) {\n\t\tthis._sourceEditorViewState = viewState;\n\t}\n}\n\nexport abstract class DiffElementCellViewModelBase extends DiffElementViewModelBase {\n\tpublic cellFoldingState: PropertyFoldingState;\n\tpublic metadataFoldingState: PropertyFoldingState;\n\tpublic outputFoldingState: PropertyFoldingState;\n\tprotected _stateChangeEmitter = this._register(\n\t\tnew Emitter<{ renderOutput: boolean }>(),\n\t);\n\tonDidStateChange = this._stateChangeEmitter.event;\n\tprotected _layoutInfo!: IDiffElementLayoutInfo;\n\n\tpublic displayIconToHideUnmodifiedCells?: boolean;\n\tprivate _hideUnchangedCells = this._register(new Emitter<void>());\n\tpublic onHideUnchangedCells = this._hideUnchangedCells.event;\n\n\thideUnchangedCells() {\n\t\tthis._hideUnchangedCells.fire();\n\t}\n\tset rawOutputHeight(height: number) {\n\t\tthis._layout({\n\t\t\trawOutputHeight: Math.min(OUTPUT_EDITOR_HEIGHT_MAGIC, height),\n\t\t});\n\t}\n\n\tget rawOutputHeight() {\n\t\tthrow new Error(\"Use Cell.layoutInfo.rawOutputHeight\");\n\t}\n\n\tset outputStatusHeight(height: number) {\n\t\tthis._layout({ outputStatusHeight: height });\n\t}\n\n\tget outputStatusHeight() {\n\t\tthrow new Error(\"Use Cell.layoutInfo.outputStatusHeight\");\n\t}\n\n\tset outputMetadataHeight(height: number) {\n\t\tthis._layout({ outputMetadataHeight: height });\n\t}\n\n\tget outputMetadataHeight() {\n\t\tthrow new Error(\"Use Cell.layoutInfo.outputStatusHeight\");\n\t}\n\n\tset editorHeight(height: number) {\n\t\tthis._layout({ editorHeight: height });\n\t}\n\n\tget editorHeight() {\n\t\tthrow new Error(\"Use Cell.layoutInfo.editorHeight\");\n\t}\n\n\tset editorMargin(margin: number) {\n\t\tthis._layout({ editorMargin: margin });\n\t}\n\n\tget editorMargin() {\n\t\tthrow new Error(\"Use Cell.layoutInfo.editorMargin\");\n\t}\n\n\tset metadataStatusHeight(height: number) {\n\t\tthis._layout({ metadataStatusHeight: height });\n\t}\n\n\tget metadataStatusHeight() {\n\t\tthrow new Error(\"Use Cell.layoutInfo.outputStatusHeight\");\n\t}\n\n\tset metadataHeight(height: number) {\n\t\tthis._layout({ metadataHeight: height });\n\t}\n\n\tget metadataHeight() {\n\t\tthrow new Error(\"Use Cell.layoutInfo.metadataHeight\");\n\t}\n\n\tprivate _renderOutput = true;\n\n\tset renderOutput(value: boolean) {\n\t\tthis._renderOutput = value;\n\t\tthis._layout({ recomputeOutput: true });\n\t\tthis._stateChangeEmitter.fire({ renderOutput: this._renderOutput });\n\t}\n\n\tget renderOutput() {\n\t\treturn this._renderOutput;\n\t}\n\n\tget layoutInfo(): IDiffElementLayoutInfo {\n\t\treturn this._layoutInfo;\n\t}\n\n\tget totalHeight() {\n\t\treturn this.layoutInfo.totalHeight;\n\t}\n\n\tprivate get ignoreOutputs() {\n\t\treturn (\n\t\t\tthis.configurationService.getValue<boolean>(\n\t\t\t\t\"notebook.diff.ignoreOutputs\",\n\t\t\t) || !!this.mainDocumentTextModel?.transientOptions.transientOutputs\n\t\t);\n\t}\n\n\tprivate get ignoreMetadata() {\n\t\treturn this.configurationService.getValue<boolean>(\n\t\t\t\"notebook.diff.ignoreMetadata\",\n\t\t);\n\t}\n\n\tprivate _sourceEditorViewState:\n\t\t| editorCommon.ICodeEditorViewState\n\t\t| editorCommon.IDiffEditorViewState\n\t\t| null = null;\n\tprivate _outputEditorViewState:\n\t\t| editorCommon.ICodeEditorViewState\n\t\t| editorCommon.IDiffEditorViewState\n\t\t| null = null;\n\tprivate _metadataEditorViewState:\n\t\t| editorCommon.ICodeEditorViewState\n\t\t| editorCommon.IDiffEditorViewState\n\t\t| null = null;\n\tpublic readonly original: DiffNestedCellViewModel | undefined;\n\n\tpublic readonly modified: DiffNestedCellViewModel | undefined;\n\tconstructor(\n\t\tmainDocumentTextModel: INotebookTextModel,\n\t\toriginal: NotebookCellTextModel | undefined,\n\t\tmodified: NotebookCellTextModel | undefined,\n\t\treadonly type: \"unchanged\" | \"insert\" | \"delete\" | \"modified\",\n\t\teditorEventDispatcher: NotebookDiffEditorEventDispatcher,\n\t\tinitData: {\n\t\t\tmetadataStatusHeight: number;\n\t\t\toutputStatusHeight: number;\n\t\t\tfontInfo: FontInfo | undefined;\n\t\t},\n\t\tnotebookService: INotebookService,\n\t\tpublic readonly index: number,\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\tpublic readonly diffEditorHeightCalculator: IDiffEditorHeightCalculatorService,\n\t) {\n\t\tsuper(mainDocumentTextModel, editorEventDispatcher, initData);\n\t\tthis.original = original\n\t\t\t? this._register(\n\t\t\t\t\tnew DiffNestedCellViewModel(original, notebookService),\n\t\t\t\t)\n\t\t\t: undefined;\n\t\tthis.modified = modified\n\t\t\t? this._register(\n\t\t\t\t\tnew DiffNestedCellViewModel(modified, notebookService),\n\t\t\t\t)\n\t\t\t: undefined;\n\t\tconst editorHeight = this._estimateEditorHeight(initData.fontInfo);\n\t\tconst cellStatusHeight = PropertyHeaderHeight;\n\t\tthis._layoutInfo = {\n\t\t\twidth: 0,\n\t\t\teditorHeight: editorHeight,\n\t\t\teditorMargin: 0,\n\t\t\tmetadataHeight: 0,\n\t\t\tcellStatusHeight,\n\t\t\tmetadataStatusHeight: this.ignoreMetadata\n\t\t\t\t? 0\n\t\t\t\t: PropertyHeaderHeight,\n\t\t\trawOutputHeight: 0,\n\t\t\toutputTotalHeight: 0,\n\t\t\toutputStatusHeight: this.ignoreOutputs ? 0 : PropertyHeaderHeight,\n\t\t\toutputMetadataHeight: 0,\n\t\t\tbodyMargin: 32,\n\t\t\ttotalHeight: 82 + cellStatusHeight + editorHeight,\n\t\t\tlayoutState: CellLayoutState.Uninitialized,\n\t\t};\n\n\t\tthis.cellFoldingState =\n\t\t\tmodified?.getTextBufferHash() !== original?.getTextBufferHash()\n\t\t\t\t? PropertyFoldingState.Expanded\n\t\t\t\t: PropertyFoldingState.Collapsed;\n\t\tthis.metadataFoldingState = PropertyFoldingState.Collapsed;\n\t\tthis.outputFoldingState = PropertyFoldingState.Collapsed;\n\t}\n\n\tlayoutChange() {\n\t\tthis._layout({ recomputeOutput: true });\n\t}\n\n\tprivate _estimateEditorHeight(fontInfo: FontInfo | undefined) {\n\t\tconst lineHeight = fontInfo?.lineHeight ?? 17;\n\n\t\tswitch (this.type) {\n\t\t\tcase \"unchanged\":\n\t\t\tcase \"insert\": {\n\t\t\t\tconst lineCount =\n\t\t\t\t\tthis.modified!.textModel.textBuffer.getLineCount();\n\t\t\t\tconst editorHeight =\n\t\t\t\t\tlineCount * lineHeight +\n\t\t\t\t\tgetEditorPadding(lineCount).top +\n\t\t\t\t\tgetEditorPadding(lineCount).bottom;\n\t\t\t\treturn editorHeight;\n\t\t\t}\n\t\t\tcase \"delete\":\n\t\t\tcase \"modified\": {\n\t\t\t\tconst lineCount =\n\t\t\t\t\tthis.original!.textModel.textBuffer.getLineCount();\n\t\t\t\tconst editorHeight =\n\t\t\t\t\tlineCount * lineHeight +\n\t\t\t\t\tgetEditorPadding(lineCount).top +\n\t\t\t\t\tgetEditorPadding(lineCount).bottom;\n\t\t\t\treturn editorHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _layout(delta: ILayoutInfoDelta) {\n\t\tconst width =\n\t\t\tdelta.width !== undefined ? delta.width : this._layoutInfo.width;\n\t\tconst editorHeight =\n\t\t\tdelta.editorHeight !== undefined\n\t\t\t\t? delta.editorHeight\n\t\t\t\t: this._layoutInfo.editorHeight;\n\t\tconst editorMargin =\n\t\t\tdelta.editorMargin !== undefined\n\t\t\t\t? delta.editorMargin\n\t\t\t\t: this._layoutInfo.editorMargin;\n\t\tconst metadataHeight =\n\t\t\tdelta.metadataHeight !== undefined\n\t\t\t\t? delta.metadataHeight\n\t\t\t\t: this._layoutInfo.metadataHeight;\n\t\tconst cellStatusHeight =\n\t\t\tdelta.cellStatusHeight !== undefined\n\t\t\t\t? delta.cellStatusHeight\n\t\t\t\t: this._layoutInfo.cellStatusHeight;\n\t\tconst metadataStatusHeight =\n\t\t\tdelta.metadataStatusHeight !== undefined\n\t\t\t\t? delta.metadataStatusHeight\n\t\t\t\t: this._layoutInfo.metadataStatusHeight;\n\t\tconst rawOutputHeight =\n\t\t\tdelta.rawOutputHeight !== undefined\n\t\t\t\t? delta.rawOutputHeight\n\t\t\t\t: this._layoutInfo.rawOutputHeight;\n\t\tconst outputStatusHeight =\n\t\t\tdelta.outputStatusHeight !== undefined\n\t\t\t\t? delta.outputStatusHeight\n\t\t\t\t: this._layoutInfo.outputStatusHeight;\n\t\tconst bodyMargin =\n\t\t\tdelta.bodyMargin !== undefined\n\t\t\t\t? delta.bodyMargin\n\t\t\t\t: this._layoutInfo.bodyMargin;\n\t\tconst outputMetadataHeight =\n\t\t\tdelta.outputMetadataHeight !== undefined\n\t\t\t\t? delta.outputMetadataHeight\n\t\t\t\t: this._layoutInfo.outputMetadataHeight;\n\t\tconst outputHeight = this.ignoreOutputs\n\t\t\t? 0\n\t\t\t: delta.recomputeOutput ||\n\t\t\t\t\tdelta.rawOutputHeight !== undefined ||\n\t\t\t\t\tdelta.outputMetadataHeight !== undefined\n\t\t\t\t? this._getOutputTotalHeight(\n\t\t\t\t\t\trawOutputHeight,\n\t\t\t\t\t\toutputMetadataHeight,\n\t\t\t\t\t)\n\t\t\t\t: this._layoutInfo.outputTotalHeight;\n\n\t\tconst totalHeight =\n\t\t\teditorHeight +\n\t\t\teditorMargin +\n\t\t\tcellStatusHeight +\n\t\t\tmetadataHeight +\n\t\t\tmetadataStatusHeight +\n\t\t\toutputHeight +\n\t\t\toutputStatusHeight +\n\t\t\tbodyMargin;\n\n\t\tconst newLayout: IDiffElementLayoutInfo = {\n\t\t\twidth: width,\n\t\t\teditorHeight: editorHeight,\n\t\t\teditorMargin: editorMargin,\n\t\t\tmetadataHeight: metadataHeight,\n\t\t\tcellStatusHeight,\n\t\t\tmetadataStatusHeight: metadataStatusHeight,\n\t\t\toutputTotalHeight: outputHeight,\n\t\t\toutputStatusHeight: outputStatusHeight,\n\t\t\tbodyMargin: bodyMargin,\n\t\t\trawOutputHeight: rawOutputHeight,\n\t\t\toutputMetadataHeight: outputMetadataHeight,\n\t\t\ttotalHeight: totalHeight,\n\t\t\tlayoutState: CellLayoutState.Measured,\n\t\t};\n\n\t\tlet somethingChanged = false;\n\n\t\tconst changeEvent: CellDiffViewModelLayoutChangeEvent = {};\n\n\t\tif (newLayout.width !== this._layoutInfo.width) {\n\t\t\tchangeEvent.width = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (newLayout.editorHeight !== this._layoutInfo.editorHeight) {\n\t\t\tchangeEvent.editorHeight = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (newLayout.editorMargin !== this._layoutInfo.editorMargin) {\n\t\t\tchangeEvent.editorMargin = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (newLayout.metadataHeight !== this._layoutInfo.metadataHeight) {\n\t\t\tchangeEvent.metadataHeight = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (newLayout.cellStatusHeight !== this._layoutInfo.cellStatusHeight) {\n\t\t\tchangeEvent.cellStatusHeight = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (\n\t\t\tnewLayout.metadataStatusHeight !==\n\t\t\tthis._layoutInfo.metadataStatusHeight\n\t\t) {\n\t\t\tchangeEvent.metadataStatusHeight = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (\n\t\t\tnewLayout.outputTotalHeight !== this._layoutInfo.outputTotalHeight\n\t\t) {\n\t\t\tchangeEvent.outputTotalHeight = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (\n\t\t\tnewLayout.outputStatusHeight !== this._layoutInfo.outputStatusHeight\n\t\t) {\n\t\t\tchangeEvent.outputStatusHeight = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (newLayout.bodyMargin !== this._layoutInfo.bodyMargin) {\n\t\t\tchangeEvent.bodyMargin = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (\n\t\t\tnewLayout.outputMetadataHeight !==\n\t\t\tthis._layoutInfo.outputMetadataHeight\n\t\t) {\n\t\t\tchangeEvent.outputMetadataHeight = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (newLayout.totalHeight !== this._layoutInfo.totalHeight) {\n\t\t\tchangeEvent.totalHeight = true;\n\t\t\tsomethingChanged = true;\n\t\t}\n\n\t\tif (somethingChanged) {\n\t\t\tthis._layoutInfo = newLayout;\n\t\t\tthis._fireLayoutChangeEvent(changeEvent);\n\t\t}\n\t}\n\n\tgetHeight(lineHeight: number) {\n\t\tif (this._layoutInfo.layoutState === CellLayoutState.Uninitialized) {\n\t\t\tconst editorHeight =\n\t\t\t\tthis.cellFoldingState === PropertyFoldingState.Collapsed\n\t\t\t\t\t? 0\n\t\t\t\t\t: this.computeInputEditorHeight(lineHeight);\n\t\t\treturn this._computeTotalHeight(editorHeight);\n\t\t} else {\n\t\t\treturn this._layoutInfo.totalHeight;\n\t\t}\n\t}\n\n\tprivate _computeTotalHeight(editorHeight: number) {\n\t\tconst totalHeight =\n\t\t\teditorHeight +\n\t\t\tthis._layoutInfo.editorMargin +\n\t\t\tthis._layoutInfo.metadataHeight +\n\t\t\tthis._layoutInfo.cellStatusHeight +\n\t\t\tthis._layoutInfo.metadataStatusHeight +\n\t\t\tthis._layoutInfo.outputTotalHeight +\n\t\t\tthis._layoutInfo.outputStatusHeight +\n\t\t\tthis._layoutInfo.outputMetadataHeight +\n\t\t\tthis._layoutInfo.bodyMargin;\n\n\t\treturn totalHeight;\n\t}\n\n\tpublic computeInputEditorHeight(lineHeight: number): number {\n\t\tconst lineCount = Math.max(\n\t\t\tthis.original?.textModel.textBuffer.getLineCount() ?? 1,\n\t\t\tthis.modified?.textModel.textBuffer.getLineCount() ?? 1,\n\t\t);\n\t\treturn this.diffEditorHeightCalculator.computeHeightFromLines(\n\t\t\tlineCount,\n\t\t);\n\t}\n\n\tprivate _getOutputTotalHeight(\n\t\trawOutputHeight: number,\n\t\tmetadataHeight: number,\n\t) {\n\t\tif (this.outputFoldingState === PropertyFoldingState.Collapsed) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (this.renderOutput) {\n\t\t\tif (this.isOutputEmpty()) {\n\t\t\t\t// single line;\n\t\t\t\treturn 24;\n\t\t\t}\n\t\t\treturn this.getRichOutputTotalHeight() + metadataHeight;\n\t\t} else {\n\t\t\treturn rawOutputHeight;\n\t\t}\n\t}\n\n\tprivate _fireLayoutChangeEvent(state: CellDiffViewModelLayoutChangeEvent) {\n\t\tthis._layoutInfoEmitter.fire(state);\n\t\tthis.editorEventDispatcher.emit([\n\t\t\t{\n\t\t\t\ttype: NotebookDiffViewEventType.CellLayoutChanged,\n\t\t\t\tsource: this._layoutInfo,\n\t\t\t},\n\t\t]);\n\t}\n\n\tabstract checkIfInputModified(): false | { reason: string | undefined };\n\tabstract checkIfOutputsModified(): false | { reason: string | undefined };\n\tabstract checkMetadataIfModified(): false | { reason: string | undefined };\n\tabstract isOutputEmpty(): boolean;\n\tabstract getRichOutputTotalHeight(): number;\n\tabstract getCellByUri(cellUri: URI): IGenericCellViewModel;\n\tabstract getOutputOffsetInCell(diffSide: DiffSide, index: number): number;\n\tabstract getOutputOffsetInContainer(\n\t\tdiffSide: DiffSide,\n\t\tindex: number,\n\t): number;\n\tabstract updateOutputHeight(\n\t\tdiffSide: DiffSide,\n\t\tindex: number,\n\t\theight: number,\n\t): void;\n\tabstract getNestedCellViewModel(\n\t\tdiffSide: DiffSide,\n\t): DiffNestedCellViewModel;\n\n\tgetComputedCellContainerWidth(\n\t\tlayoutInfo: NotebookLayoutInfo,\n\t\tdiffEditor: boolean,\n\t\tfullWidth: boolean,\n\t) {\n\t\tif (fullWidth) {\n\t\t\treturn (\n\t\t\t\tlayoutInfo.width -\n\t\t\t\t2 * DIFF_CELL_MARGIN +\n\t\t\t\t(diffEditor ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0) -\n\t\t\t\t2\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t(layoutInfo.width -\n\t\t\t\t2 * DIFF_CELL_MARGIN +\n\t\t\t\t(diffEditor\n\t\t\t\t\t? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH\n\t\t\t\t\t: 0)) /\n\t\t\t\t2 -\n\t\t\t18 -\n\t\t\t2\n\t\t);\n\t}\n\n\tgetOutputEditorViewState():\n\t\t| editorCommon.ICodeEditorViewState\n\t\t| editorCommon.IDiffEditorViewState\n\t\t| null {\n\t\treturn this._outputEditorViewState;\n\t}\n\n\tsaveOutputEditorViewState(\n\t\tviewState:\n\t\t\t| editorCommon.ICodeEditorViewState\n\t\t\t| editorCommon.IDiffEditorViewState\n\t\t\t| null,\n\t) {\n\t\tthis._outputEditorViewState = viewState;\n\t}\n\n\tgetMetadataEditorViewState():\n\t\t| editorCommon.ICodeEditorViewState\n\t\t| editorCommon.IDiffEditorViewState\n\t\t| null {\n\t\treturn this._metadataEditorViewState;\n\t}\n\n\tsaveMetadataEditorViewState(\n\t\tviewState:\n\t\t\t| editorCommon.ICodeEditorViewState\n\t\t\t| editorCommon.IDiffEditorViewState\n\t\t\t| null,\n\t) {\n\t\tthis._metadataEditorViewState = viewState;\n\t}\n\n\tgetSourceEditorViewState():\n\t\t| editorCommon.ICodeEditorViewState\n\t\t| editorCommon.IDiffEditorViewState\n\t\t| null {\n\t\treturn this._sourceEditorViewState;\n\t}\n\n\tsaveSpirceEditorViewState(\n\t\tviewState:\n\t\t\t| editorCommon.ICodeEditorViewState\n\t\t\t| editorCommon.IDiffEditorViewState\n\t\t\t| null,\n\t) {\n\t\tthis._sourceEditorViewState = viewState;\n\t}\n}\n\nexport class SideBySideDiffElementViewModel extends DiffElementCellViewModelBase {\n\tget originalDocument() {\n\t\treturn this.otherDocumentTextModel;\n\t}\n\n\tget modifiedDocument() {\n\t\treturn this.mainDocumentTextModel;\n\t}\n\n\toverride readonly original!: DiffNestedCellViewModel;\n\toverride readonly modified!: DiffNestedCellViewModel;\n\toverride readonly type: \"unchanged\" | \"modified\";\n\n\t/**\n\t * The height of the editor when the unchanged lines are collapsed.\n\t */\n\tprivate editorHeightWithUnchangedLinesCollapsed?: number;\n\tconstructor(\n\t\tmainDocumentTextModel: NotebookTextModel,\n\t\treadonly otherDocumentTextModel: NotebookTextModel,\n\t\toriginal: NotebookCellTextModel,\n\t\tmodified: NotebookCellTextModel,\n\t\ttype: \"unchanged\" | \"modified\",\n\t\teditorEventDispatcher: NotebookDiffEditorEventDispatcher,\n\t\tinitData: {\n\t\t\tmetadataStatusHeight: number;\n\t\t\toutputStatusHeight: number;\n\t\t\tfontInfo: FontInfo | undefined;\n\t\t},\n\t\tnotebookService: INotebookService,\n\t\tconfigurationService: IConfigurationService,\n\t\tindex: number,\n\t\tdiffEditorHeightCalculator: IDiffEditorHeightCalculatorService,\n\t) {\n\t\tsuper(\n\t\t\tmainDocumentTextModel,\n\t\t\toriginal,\n\t\t\tmodified,\n\t\t\ttype,\n\t\t\teditorEventDispatcher,\n\t\t\tinitData,\n\t\t\tnotebookService,\n\t\t\tindex,\n\t\t\tconfigurationService,\n\t\t\tdiffEditorHeightCalculator,\n\t\t);\n\n\t\tthis.type = type;\n\n\t\tthis.cellFoldingState =\n\t\t\tthis.modified.textModel.getValue() !==\n\t\t\tthis.original.textModel.getValue()\n\t\t\t\t? PropertyFoldingState.Expanded\n\t\t\t\t: PropertyFoldingState.Collapsed;\n\t\tthis.metadataFoldingState = PropertyFoldingState.Collapsed;\n\t\tthis.outputFoldingState = PropertyFoldingState.Collapsed;\n\n\t\tif (this.checkMetadataIfModified()) {\n\t\t\tthis.metadataFoldingState = PropertyFoldingState.Expanded;\n\t\t}\n\n\t\tif (this.checkIfOutputsModified()) {\n\t\t\tthis.outputFoldingState = PropertyFoldingState.Expanded;\n\t\t}\n\n\t\tthis._register(\n\t\t\tthis.original.onDidChangeOutputLayout(() => {\n\t\t\t\tthis._layout({ recomputeOutput: true });\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.modified.onDidChangeOutputLayout(() => {\n\t\t\t\tthis._layout({ recomputeOutput: true });\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.modified.textModel.onDidChangeContent(() => {\n\t\t\t\tif (\n\t\t\t\t\tmainDocumentTextModel.transientOptions.cellContentMetadata\n\t\t\t\t) {\n\t\t\t\t\tconst cellMetadataKeys = [\n\t\t\t\t\t\t...Object.keys(\n\t\t\t\t\t\t\tmainDocumentTextModel.transientOptions\n\t\t\t\t\t\t\t\t.cellContentMetadata,\n\t\t\t\t\t\t),\n\t\t\t\t\t];\n\t\t\t\t\tconst modifiedMedataRaw = Object.assign(\n\t\t\t\t\t\t{},\n\t\t\t\t\t\tthis.modified.metadata,\n\t\t\t\t\t);\n\t\t\t\t\tconst originalCellMetadata = this.original.metadata;\n\t\t\t\t\tfor (const key of cellMetadataKeys) {\n\t\t\t\t\t\tif (key in originalCellMetadata) {\n\t\t\t\t\t\t\tmodifiedMedataRaw[key] = originalCellMetadata[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.modified.textModel.metadata = modifiedMedataRaw;\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\toverride checkIfInputModified(): false | { reason: string | undefined } {\n\t\tif (\n\t\t\tthis.original.textModel.getTextBufferHash() ===\n\t\t\tthis.modified.textModel.getTextBufferHash()\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\treturn {\n\t\t\treason: \"Cell content has changed\",\n\t\t};\n\t}\n\tcheckIfOutputsModified() {\n\t\tif (this.mainDocumentTextModel.transientOptions.transientOutputs) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst ret = outputsEqual(\n\t\t\tthis.original?.outputs ?? [],\n\t\t\tthis.modified?.outputs ?? [],\n\t\t);\n\n\t\tif (ret === OutputComparison.Unchanged) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn {\n\t\t\treason:\n\t\t\t\tret === OutputComparison.Metadata\n\t\t\t\t\t? \"Output metadata has changed\"\n\t\t\t\t\t: undefined,\n\t\t\tkind: ret,\n\t\t};\n\t}\n\n\tcheckMetadataIfModified() {\n\t\tconst modified =\n\t\t\thash(\n\t\t\t\tgetFormattedMetadataJSON(\n\t\t\t\t\tthis.mainDocumentTextModel.transientOptions\n\t\t\t\t\t\t.transientCellMetadata,\n\t\t\t\t\tthis.original?.metadata || {},\n\t\t\t\t\tthis.original?.language,\n\t\t\t\t),\n\t\t\t) !==\n\t\t\thash(\n\t\t\t\tgetFormattedMetadataJSON(\n\t\t\t\t\tthis.mainDocumentTextModel.transientOptions\n\t\t\t\t\t\t.transientCellMetadata,\n\t\t\t\t\tthis.modified?.metadata ?? {},\n\t\t\t\t\tthis.modified?.language,\n\t\t\t\t),\n\t\t\t);\n\t\tif (modified) {\n\t\t\treturn { reason: undefined };\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tupdateOutputHeight(diffSide: DiffSide, index: number, height: number) {\n\t\tif (diffSide === DiffSide.Original) {\n\t\t\tthis.original.updateOutputHeight(index, height);\n\t\t} else {\n\t\t\tthis.modified.updateOutputHeight(index, height);\n\t\t}\n\t}\n\n\tgetOutputOffsetInContainer(diffSide: DiffSide, index: number) {\n\t\tif (diffSide === DiffSide.Original) {\n\t\t\treturn this.original.getOutputOffset(index);\n\t\t} else {\n\t\t\treturn this.modified.getOutputOffset(index);\n\t\t}\n\t}\n\n\tgetOutputOffsetInCell(diffSide: DiffSide, index: number) {\n\t\tconst offsetInOutputsContainer = this.getOutputOffsetInContainer(\n\t\t\tdiffSide,\n\t\t\tindex,\n\t\t);\n\n\t\treturn (\n\t\t\tthis._layoutInfo.editorHeight +\n\t\t\tthis._layoutInfo.editorMargin +\n\t\t\tthis._layoutInfo.metadataHeight +\n\t\t\tthis._layoutInfo.cellStatusHeight +\n\t\t\tthis._layoutInfo.metadataStatusHeight +\n\t\t\tthis._layoutInfo.outputStatusHeight +\n\t\t\tthis._layoutInfo.bodyMargin / 2 +\n\t\t\toffsetInOutputsContainer\n\t\t);\n\t}\n\n\tisOutputEmpty() {\n\t\tif (this.mainDocumentTextModel.transientOptions.transientOutputs) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this.checkIfOutputsModified()) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// outputs are not changed\n\n\t\treturn (this.original?.outputs || []).length === 0;\n\t}\n\n\tgetRichOutputTotalHeight() {\n\t\treturn Math.max(\n\t\t\tthis.original.getOutputTotalHeight(),\n\t\t\tthis.modified.getOutputTotalHeight(),\n\t\t);\n\t}\n\n\tgetNestedCellViewModel(diffSide: DiffSide): DiffNestedCellViewModel {\n\t\treturn diffSide === DiffSide.Original ? this.original : this.modified;\n\t}\n\n\tgetCellByUri(cellUri: URI): IGenericCellViewModel {\n\t\tif (cellUri.toString() === this.original.uri.toString()) {\n\t\t\treturn this.original;\n\t\t} else {\n\t\t\treturn this.modified;\n\t\t}\n\t}\n\n\tpublic override computeInputEditorHeight(lineHeight: number): number {\n\t\tif (\n\t\t\tthis.type === \"modified\" &&\n\t\t\ttypeof this.editorHeightWithUnchangedLinesCollapsed === \"number\" &&\n\t\t\tthis.checkIfInputModified()\n\t\t) {\n\t\t\treturn this.editorHeightWithUnchangedLinesCollapsed;\n\t\t}\n\n\t\treturn super.computeInputEditorHeight(lineHeight);\n\t}\n\n\tprivate async computeModifiedInputEditorHeight() {\n\t\tif (this.checkIfInputModified()) {\n\t\t\tthis.editorHeightWithUnchangedLinesCollapsed =\n\t\t\t\tthis._layoutInfo.editorHeight =\n\t\t\t\t\tawait this.diffEditorHeightCalculator.diffAndComputeHeight(\n\t\t\t\t\t\tthis.original.uri,\n\t\t\t\t\t\tthis.modified.uri,\n\t\t\t\t\t);\n\t\t}\n\t}\n\n\tprivate async computeModifiedMetadataEditorHeight() {\n\t\tif (this.checkMetadataIfModified()) {\n\t\t\tconst originalMetadataUri = CellUri.generateCellPropertyUri(\n\t\t\t\tthis.originalDocument.uri,\n\t\t\t\tthis.original.handle,\n\t\t\t\tSchemas.vscodeNotebookCellMetadata,\n\t\t\t);\n\t\t\tconst modifiedMetadataUri = CellUri.generateCellPropertyUri(\n\t\t\t\tthis.modifiedDocument.uri,\n\t\t\t\tthis.modified.handle,\n\t\t\t\tSchemas.vscodeNotebookCellMetadata,\n\t\t\t);\n\t\t\tthis._layoutInfo.metadataHeight =\n\t\t\t\tawait this.diffEditorHeightCalculator.diffAndComputeHeight(\n\t\t\t\t\toriginalMetadataUri,\n\t\t\t\t\tmodifiedMetadataUri,\n\t\t\t\t);\n\t\t}\n\t}\n\n\tpublic async computeEditorHeights() {\n\t\tif (this.type === \"unchanged\") {\n\t\t\treturn;\n\t\t}\n\n\t\tawait Promise.all([\n\t\t\tthis.computeModifiedInputEditorHeight(),\n\t\t\tthis.computeModifiedMetadataEditorHeight(),\n\t\t]);\n\t}\n}\n\nexport class SingleSideDiffElementViewModel extends DiffElementCellViewModelBase {\n\tget cellViewModel() {\n\t\treturn this.type === \"insert\" ? this.modified! : this.original!;\n\t}\n\n\tget originalDocument() {\n\t\tif (this.type === \"insert\") {\n\t\t\treturn this.otherDocumentTextModel;\n\t\t} else {\n\t\t\treturn this.mainDocumentTextModel;\n\t\t}\n\t}\n\n\tget modifiedDocument() {\n\t\tif (this.type === \"insert\") {\n\t\t\treturn this.mainDocumentTextModel;\n\t\t} else {\n\t\t\treturn this.otherDocumentTextModel;\n\t\t}\n\t}\n\n\toverride readonly type: \"insert\" | \"delete\";\n\n\tconstructor(\n\t\tmainDocumentTextModel: NotebookTextModel,\n\t\treadonly otherDocumentTextModel: NotebookTextModel,\n\t\toriginal: NotebookCellTextModel | undefined,\n\t\tmodified: NotebookCellTextModel | undefined,\n\t\ttype: \"insert\" | \"delete\",\n\t\teditorEventDispatcher: NotebookDiffEditorEventDispatcher,\n\t\tinitData: {\n\t\t\tmetadataStatusHeight: number;\n\t\t\toutputStatusHeight: number;\n\t\t\tfontInfo: FontInfo | undefined;\n\t\t},\n\t\tnotebookService: INotebookService,\n\t\tconfigurationService: IConfigurationService,\n\t\tdiffEditorHeightCalculator: IDiffEditorHeightCalculatorService,\n\t\tindex: number,\n\t) {\n\t\tsuper(\n\t\t\tmainDocumentTextModel,\n\t\t\toriginal,\n\t\t\tmodified,\n\t\t\ttype,\n\t\t\teditorEventDispatcher,\n\t\t\tinitData,\n\t\t\tnotebookService,\n\t\t\tindex,\n\t\t\tconfigurationService,\n\t\t\tdiffEditorHeightCalculator,\n\t\t);\n\t\tthis.type = type;\n\n\t\tthis._register(\n\t\t\tthis.cellViewModel.onDidChangeOutputLayout(() => {\n\t\t\t\tthis._layout({ recomputeOutput: true });\n\t\t\t}),\n\t\t);\n\t}\n\n\toverride checkIfInputModified(): false | { reason: string | undefined } {\n\t\treturn {\n\t\t\treason: \"Cell content has changed\",\n\t\t};\n\t}\n\n\tgetNestedCellViewModel(diffSide: DiffSide): DiffNestedCellViewModel {\n\t\treturn this.type === \"insert\" ? this.modified! : this.original!;\n\t}\n\n\tcheckIfOutputsModified(): false | { reason: string | undefined } {\n\t\treturn false;\n\t}\n\n\tcheckMetadataIfModified(): false | { reason: string | undefined } {\n\t\treturn false;\n\t}\n\n\tupdateOutputHeight(diffSide: DiffSide, index: number, height: number) {\n\t\tthis.cellViewModel?.updateOutputHeight(index, height);\n\t}\n\n\tgetOutputOffsetInContainer(diffSide: DiffSide, index: number) {\n\t\treturn this.cellViewModel.getOutputOffset(index);\n\t}\n\n\tgetOutputOffsetInCell(diffSide: DiffSide, index: number) {\n\t\tconst offsetInOutputsContainer =\n\t\t\tthis.cellViewModel.getOutputOffset(index);\n\n\t\treturn (\n\t\t\tthis._layoutInfo.editorHeight +\n\t\t\tthis._layoutInfo.editorMargin +\n\t\t\tthis._layoutInfo.metadataHeight +\n\t\t\tthis._layoutInfo.cellStatusHeight +\n\t\t\tthis._layoutInfo.metadataStatusHeight +\n\t\t\tthis._layoutInfo.outputStatusHeight +\n\t\t\tthis._layoutInfo.bodyMargin / 2 +\n\t\t\toffsetInOutputsContainer\n\t\t);\n\t}\n\n\tisOutputEmpty() {\n\t\tif (this.mainDocumentTextModel.transientOptions.transientOutputs) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// outputs are not changed\n\n\t\treturn (\n\t\t\t(this.original?.outputs || this.modified?.outputs || []).length ===\n\t\t\t0\n\t\t);\n\t}\n\n\tgetRichOutputTotalHeight() {\n\t\treturn this.cellViewModel?.getOutputTotalHeight() ?? 0;\n\t}\n\n\tgetCellByUri(cellUri: URI): IGenericCellViewModel {\n\t\treturn this.cellViewModel;\n\t}\n}\n\nexport enum OutputComparison {\n\tUnchanged = 0,\n\tMetadata = 1,\n\tOther = 2,\n}\n\nexport function outputEqual(a: ICellOutput, b: ICellOutput): OutputComparison {\n\tif (hash(a.metadata) === hash(b.metadata)) {\n\t\treturn OutputComparison.Other;\n\t}\n\n\t// metadata not equal\n\tfor (let j = 0; j < a.outputs.length; j++) {\n\t\tconst aOutputItem = a.outputs[j];\n\t\tconst bOutputItem = b.outputs[j];\n\n\t\tif (aOutputItem.mime !== bOutputItem.mime) {\n\t\t\treturn OutputComparison.Other;\n\t\t}\n\n\t\tif (aOutputItem.data.buffer.length !== bOutputItem.data.buffer.length) {\n\t\t\treturn OutputComparison.Other;\n\t\t}\n\n\t\tfor (let k = 0; k < aOutputItem.data.buffer.length; k++) {\n\t\t\tif (aOutputItem.data.buffer[k] !== bOutputItem.data.buffer[k]) {\n\t\t\t\treturn OutputComparison.Other;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn OutputComparison.Metadata;\n}\n\nfunction outputsEqual(original: ICellOutput[], modified: ICellOutput[]) {\n\tif (original.length !== modified.length) {\n\t\treturn OutputComparison.Other;\n\t}\n\n\tconst len = original.length;\n\tfor (let i = 0; i < len; i++) {\n\t\tconst a = original[i];\n\t\tconst b = modified[i];\n\n\t\tif (hash(a.metadata) !== hash(b.metadata)) {\n\t\t\treturn OutputComparison.Metadata;\n\t\t}\n\n\t\tif (a.outputs.length !== b.outputs.length) {\n\t\t\treturn OutputComparison.Other;\n\t\t}\n\n\t\tfor (let j = 0; j < a.outputs.length; j++) {\n\t\t\tconst aOutputItem = a.outputs[j];\n\t\t\tconst bOutputItem = b.outputs[j];\n\n\t\t\tif (aOutputItem.mime !== bOutputItem.mime) {\n\t\t\t\treturn OutputComparison.Other;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\taOutputItem.data.buffer.length !==\n\t\t\t\tbOutputItem.data.buffer.length\n\t\t\t) {\n\t\t\t\treturn OutputComparison.Other;\n\t\t\t}\n\n\t\t\tfor (let k = 0; k < aOutputItem.data.buffer.length; k++) {\n\t\t\t\tif (aOutputItem.data.buffer[k] !== bOutputItem.data.buffer[k]) {\n\t\t\t\t\treturn OutputComparison.Other;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn OutputComparison.Unchanged;\n}\n\nexport function getStreamOutputData(outputs: IOutputItemDto[]) {\n\tif (!outputs.length) {\n\t\treturn null;\n\t}\n\n\tconst first = outputs[0];\n\tconst mime = first.mime;\n\tconst sameStream = !outputs.find((op) => op.mime !== mime);\n\n\tif (sameStream) {\n\t\treturn outputs.map((opit) => opit.data.toString()).join(\"\");\n\t} else {\n\t\treturn null;\n\t}\n}\n\nexport function getFormattedOutputJSON(outputs: IOutputDto[]) {\n\tif (outputs.length === 1) {\n\t\tconst streamOutputData = getStreamOutputData(outputs[0].outputs);\n\t\tif (streamOutputData) {\n\t\t\treturn streamOutputData;\n\t\t}\n\t}\n\n\treturn JSON.stringify(\n\t\toutputs.map((output) => {\n\t\t\treturn {\n\t\t\t\tmetadata: output.metadata,\n\t\t\t\toutputItems: output.outputs.map((opit) => ({\n\t\t\t\t\tmimeType: opit.mime,\n\t\t\t\t\tdata: opit.data.toString(),\n\t\t\t\t})),\n\t\t\t};\n\t\t}),\n\t\tundefined,\n\t\t\"\\t\",\n\t);\n}\n"],
  "mappings": "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",
  "names": ["PropertyFoldingState", "OutputComparison"]
}
