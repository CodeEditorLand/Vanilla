{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/clipboard/notebookClipboard.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize, localize2 } from '../../../../../../nls.js';\nimport { Disposable } from '../../../../../../base/common/lifecycle.js';\nimport { WorkbenchPhase, registerWorkbenchContribution2 } from '../../../../../common/contributions.js';\nimport { IEditorService } from '../../../../../services/editor/common/editorService.js';\nimport { NOTEBOOK_CELL_EDITABLE, NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_OUTPUT_FOCUSED } from '../../../common/notebookContextKeys.js';\nimport { cellRangeToViewCells, expandCellRangesWithHiddenCells, getNotebookEditorFromEditorPane, ICellViewModel, INotebookEditor } from '../../notebookBrowser.js';\nimport { CopyAction, CutAction, PasteAction } from '../../../../../../editor/contrib/clipboard/browser/clipboard.js';\nimport { IClipboardService } from '../../../../../../platform/clipboard/common/clipboardService.js';\nimport { cloneNotebookCellTextModel, NotebookCellTextModel } from '../../../common/model/notebookCellTextModel.js';\nimport { CellEditType, ICellEditOperation, ISelectionState, SelectionStateType } from '../../../common/notebookCommon.js';\nimport { INotebookService } from '../../../common/notebookService.js';\nimport * as platform from '../../../../../../base/common/platform.js';\nimport { Action2, MenuId, registerAction2 } from '../../../../../../platform/actions/common/actions.js';\nimport { CellOverflowToolbarGroups, INotebookActionContext, INotebookCellActionContext, NotebookAction, NotebookCellAction, NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT, NOTEBOOK_OUTPUT_WEBVIEW_ACTION_WEIGHT } from '../../controller/coreActions.js';\nimport { KeyCode, KeyMod } from '../../../../../../base/common/keyCodes.js';\nimport { ContextKeyExpr } from '../../../../../../platform/contextkey/common/contextkey.js';\nimport { InputFocusedContextKey } from '../../../../../../platform/contextkey/common/contextkeys.js';\nimport { KeybindingWeight } from '../../../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ServicesAccessor } from '../../../../../../platform/instantiation/common/instantiation.js';\nimport { RedoCommand, UndoCommand } from '../../../../../../editor/browser/editorExtensions.js';\nimport { IWebview } from '../../../../webview/browser/webview.js';\nimport { Categories } from '../../../../../../platform/action/common/actionCommonCategories.js';\nimport { ILogService } from '../../../../../../platform/log/common/log.js';\nimport { ICommandService } from '../../../../../../platform/commands/common/commands.js';\nimport { showWindowLogActionId } from '../../../../../services/log/common/logConstants.js';\nimport { getActiveElement, getWindow, isAncestor, isEditableElement, isHTMLElement } from '../../../../../../base/browser/dom.js';\n\nlet _logging: boolean = false;\nfunction toggleLogging() {\n\t_logging = !_logging;\n}\n\nfunction _log(loggerService: ILogService, str: string) {\n\tif (_logging) {\n\t\tloggerService.info(`[NotebookClipboard]: ${str}`);\n\t}\n}\n\nfunction getFocusedEditor(accessor: ServicesAccessor) {\n\tconst loggerService = accessor.get(ILogService);\n\tconst editorService = accessor.get(IEditorService);\n\tconst editor = getNotebookEditorFromEditorPane(editorService.activeEditorPane);\n\tif (!editor) {\n\t\t_log(loggerService, '[Revive Webview] No notebook editor found for active editor pane, bypass');\n\t\treturn;\n\t}\n\n\tif (!editor.hasEditorFocus()) {\n\t\t_log(loggerService, '[Revive Webview] Notebook editor is not focused, bypass');\n\t\treturn;\n\t}\n\n\tif (!editor.hasWebviewFocus()) {\n\t\t_log(loggerService, '[Revive Webview] Notebook editor backlayer webview is not focused, bypass');\n\t\treturn;\n\t}\n\t// If none of the outputs have focus, then webview is not focused\n\tconst view = editor.getViewModel();\n\tif (view && view.viewCells.every(cell => !cell.outputIsFocused && !cell.outputIsHovered)) {\n\t\treturn;\n\t}\n\n\treturn { editor, loggerService };\n}\nfunction getFocusedWebviewDelegate(accessor: ServicesAccessor): IWebview | undefined {\n\tconst result = getFocusedEditor(accessor);\n\tif (!result) {\n\t\treturn;\n\t}\n\tconst webview = result.editor.getInnerWebview();\n\t_log(result.loggerService, '[Revive Webview] Notebook editor backlayer webview is focused');\n\treturn webview;\n}\n\nfunction withWebview(accessor: ServicesAccessor, f: (webviewe: IWebview) => void) {\n\tconst webview = getFocusedWebviewDelegate(accessor);\n\tif (webview) {\n\t\tf(webview);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction withEditor(accessor: ServicesAccessor, f: (editor: INotebookEditor) => boolean) {\n\tconst result = getFocusedEditor(accessor);\n\treturn result ? f(result.editor) : false;\n}\n\nconst PRIORITY = 105;\n\nUndoCommand.addImplementation(PRIORITY, 'notebook-webview', accessor => {\n\treturn withWebview(accessor, webview => webview.undo());\n});\n\nRedoCommand.addImplementation(PRIORITY, 'notebook-webview', accessor => {\n\treturn withWebview(accessor, webview => webview.redo());\n});\n\nCopyAction?.addImplementation(PRIORITY, 'notebook-webview', accessor => {\n\treturn withWebview(accessor, webview => webview.copy());\n});\n\nPasteAction?.addImplementation(PRIORITY, 'notebook-webview', accessor => {\n\treturn withWebview(accessor, webview => webview.paste());\n});\n\nCutAction?.addImplementation(PRIORITY, 'notebook-webview', accessor => {\n\treturn withWebview(accessor, webview => webview.cut());\n});\n\nexport function runPasteCells(editor: INotebookEditor, activeCell: ICellViewModel | undefined, pasteCells: {\n\titems: NotebookCellTextModel[];\n\tisCopy: boolean;\n}): boolean {\n\tif (!editor.hasModel()) {\n\t\treturn false;\n\t}\n\tconst textModel = editor.textModel;\n\n\tif (editor.isReadOnly) {\n\t\treturn false;\n\t}\n\n\tconst originalState: ISelectionState = {\n\t\tkind: SelectionStateType.Index,\n\t\tfocus: editor.getFocus(),\n\t\tselections: editor.getSelections()\n\t};\n\n\tif (activeCell) {\n\t\tconst currCellIndex = editor.getCellIndex(activeCell);\n\t\tconst newFocusIndex = typeof currCellIndex === 'number' ? currCellIndex + 1 : 0;\n\t\ttextModel.applyEdits([\n\t\t\t{\n\t\t\t\teditType: CellEditType.Replace,\n\t\t\t\tindex: newFocusIndex,\n\t\t\t\tcount: 0,\n\t\t\t\tcells: pasteCells.items.map(cell => cloneNotebookCellTextModel(cell))\n\t\t\t}\n\t\t], true, originalState, () => ({\n\t\t\tkind: SelectionStateType.Index,\n\t\t\tfocus: { start: newFocusIndex, end: newFocusIndex + 1 },\n\t\t\tselections: [{ start: newFocusIndex, end: newFocusIndex + pasteCells.items.length }]\n\t\t}), undefined, true);\n\t} else {\n\t\tif (editor.getLength() !== 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttextModel.applyEdits([\n\t\t\t{\n\t\t\t\teditType: CellEditType.Replace,\n\t\t\t\tindex: 0,\n\t\t\t\tcount: 0,\n\t\t\t\tcells: pasteCells.items.map(cell => cloneNotebookCellTextModel(cell))\n\t\t\t}\n\t\t], true, originalState, () => ({\n\t\t\tkind: SelectionStateType.Index,\n\t\t\tfocus: { start: 0, end: 1 },\n\t\t\tselections: [{ start: 1, end: pasteCells.items.length + 1 }]\n\t\t}), undefined, true);\n\t}\n\n\treturn true;\n}\n\nexport function runCopyCells(accessor: ServicesAccessor, editor: INotebookEditor, targetCell: ICellViewModel | undefined): boolean {\n\tif (!editor.hasModel()) {\n\t\treturn false;\n\t}\n\n\tif (editor.hasOutputTextSelection()) {\n\t\tgetWindow(editor.getDomNode()).document.execCommand('copy');\n\t\treturn true;\n\t}\n\n\tconst clipboardService = accessor.get<IClipboardService>(IClipboardService);\n\tconst notebookService = accessor.get<INotebookService>(INotebookService);\n\tconst selections = editor.getSelections();\n\n\tif (targetCell) {\n\t\tconst targetCellIndex = editor.getCellIndex(targetCell);\n\t\tconst containingSelection = selections.find(selection => selection.start <= targetCellIndex && targetCellIndex < selection.end);\n\n\t\tif (!containingSelection) {\n\t\t\tclipboardService.writeText(targetCell.getText());\n\t\t\tnotebookService.setToCopy([targetCell.model], true);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tconst selectionRanges = expandCellRangesWithHiddenCells(editor, editor.getSelections());\n\tconst selectedCells = cellRangeToViewCells(editor, selectionRanges);\n\n\tif (!selectedCells.length) {\n\t\treturn false;\n\t}\n\n\tclipboardService.writeText(selectedCells.map(cell => cell.getText()).join('\\n'));\n\tnotebookService.setToCopy(selectedCells.map(cell => cell.model), true);\n\n\treturn true;\n}\nexport function runCutCells(accessor: ServicesAccessor, editor: INotebookEditor, targetCell: ICellViewModel | undefined): boolean {\n\tif (!editor.hasModel() || editor.isReadOnly) {\n\t\treturn false;\n\t}\n\n\tconst textModel = editor.textModel;\n\tconst clipboardService = accessor.get<IClipboardService>(IClipboardService);\n\tconst notebookService = accessor.get<INotebookService>(INotebookService);\n\tconst selections = editor.getSelections();\n\n\tif (targetCell) {\n\t\t// from ui\n\t\tconst targetCellIndex = editor.getCellIndex(targetCell);\n\t\tconst containingSelection = selections.find(selection => selection.start <= targetCellIndex && targetCellIndex < selection.end);\n\n\t\tif (!containingSelection) {\n\t\t\tclipboardService.writeText(targetCell.getText());\n\t\t\t// delete cell\n\t\t\tconst focus = editor.getFocus();\n\t\t\tconst newFocus = focus.end <= targetCellIndex ? focus : { start: focus.start - 1, end: focus.end - 1 };\n\t\t\tconst newSelections = selections.map(selection => (selection.end <= targetCellIndex ? selection : { start: selection.start - 1, end: selection.end - 1 }));\n\n\t\t\ttextModel.applyEdits([\n\t\t\t\t{ editType: CellEditType.Replace, index: targetCellIndex, count: 1, cells: [] }\n\t\t\t], true, { kind: SelectionStateType.Index, focus: editor.getFocus(), selections: selections }, () => ({ kind: SelectionStateType.Index, focus: newFocus, selections: newSelections }), undefined, true);\n\n\t\t\tnotebookService.setToCopy([targetCell.model], false);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tconst focus = editor.getFocus();\n\tconst containingSelection = selections.find(selection => selection.start <= focus.start && focus.end <= selection.end);\n\n\tif (!containingSelection) {\n\t\t// focus is out of any selection, we should only cut this cell\n\t\tconst targetCell = editor.cellAt(focus.start);\n\t\tclipboardService.writeText(targetCell.getText());\n\t\tconst newFocus = focus.end === editor.getLength() ? { start: focus.start - 1, end: focus.end - 1 } : focus;\n\t\tconst newSelections = selections.map(selection => (selection.end <= focus.start ? selection : { start: selection.start - 1, end: selection.end - 1 }));\n\t\ttextModel.applyEdits([\n\t\t\t{ editType: CellEditType.Replace, index: focus.start, count: 1, cells: [] }\n\t\t], true, { kind: SelectionStateType.Index, focus: editor.getFocus(), selections: selections }, () => ({ kind: SelectionStateType.Index, focus: newFocus, selections: newSelections }), undefined, true);\n\n\t\tnotebookService.setToCopy([targetCell.model], false);\n\t\treturn true;\n\t}\n\n\tconst selectionRanges = expandCellRangesWithHiddenCells(editor, editor.getSelections());\n\tconst selectedCells = cellRangeToViewCells(editor, selectionRanges);\n\n\tif (!selectedCells.length) {\n\t\treturn false;\n\t}\n\n\tclipboardService.writeText(selectedCells.map(cell => cell.getText()).join('\\n'));\n\tconst edits: ICellEditOperation[] = selectionRanges.map(range => ({ editType: CellEditType.Replace, index: range.start, count: range.end - range.start, cells: [] }));\n\tconst firstSelectIndex = selectionRanges[0].start;\n\n\t/**\n\t * If we have cells, 0, 1, 2, 3, 4, 5, 6\n\t * and cells 1, 2 are selected, and then we delete cells 1 and 2\n\t * the new focused cell should still be at index 1\n\t */\n\tconst newFocusedCellIndex = firstSelectIndex < textModel.cells.length - 1\n\t\t? firstSelectIndex\n\t\t: Math.max(textModel.cells.length - 2, 0);\n\n\ttextModel.applyEdits(edits, true, { kind: SelectionStateType.Index, focus: editor.getFocus(), selections: selectionRanges }, () => {\n\t\treturn {\n\t\t\tkind: SelectionStateType.Index,\n\t\t\tfocus: { start: newFocusedCellIndex, end: newFocusedCellIndex + 1 },\n\t\t\tselections: [{ start: newFocusedCellIndex, end: newFocusedCellIndex + 1 }]\n\t\t};\n\t}, undefined, true);\n\tnotebookService.setToCopy(selectedCells.map(cell => cell.model), false);\n\n\treturn true;\n}\n\nexport class NotebookClipboardContribution extends Disposable {\n\n\tstatic readonly ID = 'workbench.contrib.notebookClipboard';\n\n\tconstructor(@IEditorService private readonly _editorService: IEditorService) {\n\t\tsuper();\n\n\t\tconst PRIORITY = 105;\n\n\t\tif (CopyAction) {\n\t\t\tthis._register(CopyAction.addImplementation(PRIORITY, 'notebook-clipboard', accessor => {\n\t\t\t\treturn this.runCopyAction(accessor);\n\t\t\t}));\n\t\t}\n\n\t\tif (PasteAction) {\n\t\t\tthis._register(PasteAction.addImplementation(PRIORITY, 'notebook-clipboard', accessor => {\n\t\t\t\treturn this.runPasteAction(accessor);\n\t\t\t}));\n\t\t}\n\n\t\tif (CutAction) {\n\t\t\tthis._register(CutAction.addImplementation(PRIORITY, 'notebook-clipboard', accessor => {\n\t\t\t\treturn this.runCutAction(accessor);\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate _getContext() {\n\t\tconst editor = getNotebookEditorFromEditorPane(this._editorService.activeEditorPane);\n\t\tconst activeCell = editor?.getActiveCell();\n\n\t\treturn {\n\t\t\teditor,\n\t\t\tactiveCell\n\t\t};\n\t}\n\n\tprivate _focusInsideEmebedMonaco(editor: INotebookEditor) {\n\t\tconst windowSelection = getWindow(editor.getDomNode()).getSelection();\n\n\t\tif (windowSelection?.rangeCount !== 1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst activeSelection = windowSelection.getRangeAt(0);\n\t\tif (activeSelection.startContainer === activeSelection.endContainer && activeSelection.endOffset - activeSelection.startOffset === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet container: any = activeSelection.commonAncestorContainer;\n\t\tconst body = editor.getDomNode();\n\n\t\tif (!body.contains(container)) {\n\t\t\treturn false;\n\t\t}\n\n\t\twhile (container\n\t\t\t&&\n\t\t\tcontainer !== body) {\n\t\t\tif ((container as HTMLElement).classList && (container as HTMLElement).classList.contains('monaco-editor')) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tcontainer = container.parentNode;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\trunCopyAction(accessor: ServicesAccessor) {\n\t\tconst loggerService = accessor.get(ILogService);\n\n\t\tconst activeElement = getActiveElement();\n\t\tif (isHTMLElement(activeElement) && isEditableElement(activeElement)) {\n\t\t\t_log(loggerService, '[NotebookEditor] focus is on input or textarea element, bypass');\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { editor } = this._getContext();\n\t\tif (!editor) {\n\t\t\t_log(loggerService, '[NotebookEditor] no active notebook editor, bypass');\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!isAncestor(activeElement, editor.getDomNode())) {\n\t\t\t_log(loggerService, '[NotebookEditor] focus is outside of the notebook editor, bypass');\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this._focusInsideEmebedMonaco(editor)) {\n\t\t\t_log(loggerService, '[NotebookEditor] focus is on embed monaco editor, bypass');\n\t\t\treturn false;\n\t\t}\n\n\t\t_log(loggerService, '[NotebookEditor] run copy actions on notebook model');\n\t\treturn runCopyCells(accessor, editor, undefined);\n\t}\n\n\trunPasteAction(accessor: ServicesAccessor) {\n\t\tconst activeElement = <HTMLElement>getActiveElement();\n\t\tif (activeElement && isEditableElement(activeElement)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst notebookService = accessor.get<INotebookService>(INotebookService);\n\t\tconst pasteCells = notebookService.getToCopy();\n\n\t\tif (!pasteCells) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { editor, activeCell } = this._getContext();\n\t\tif (!editor) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn runPasteCells(editor, activeCell, pasteCells);\n\t}\n\n\trunCutAction(accessor: ServicesAccessor) {\n\t\tconst activeElement = <HTMLElement>getActiveElement();\n\t\tif (activeElement && isEditableElement(activeElement)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { editor } = this._getContext();\n\t\tif (!editor) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn runCutCells(accessor, editor, undefined);\n\t}\n}\n\nregisterWorkbenchContribution2(NotebookClipboardContribution.ID, NotebookClipboardContribution, WorkbenchPhase.BlockRestore);\n\nconst COPY_CELL_COMMAND_ID = 'notebook.cell.copy';\nconst CUT_CELL_COMMAND_ID = 'notebook.cell.cut';\nconst PASTE_CELL_COMMAND_ID = 'notebook.cell.paste';\nconst PASTE_CELL_ABOVE_COMMAND_ID = 'notebook.cell.pasteAbove';\n\nregisterAction2(class extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: COPY_CELL_COMMAND_ID,\n\t\t\t\ttitle: localize('notebookActions.copy', \"Copy Cell\"),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\t\twhen: NOTEBOOK_EDITOR_FOCUSED,\n\t\t\t\t\tgroup: CellOverflowToolbarGroups.Copy,\n\t\t\t\t\torder: 2,\n\t\t\t\t},\n\t\t\t\tkeybinding: platform.isNative ? undefined : {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyC,\n\t\t\t\t\twin: { primary: KeyMod.CtrlCmd | KeyCode.KeyC, secondary: [KeyMod.CtrlCmd | KeyCode.Insert] },\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, ContextKeyExpr.not(InputFocusedContextKey)),\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext) {\n\t\trunCopyCells(accessor, context.notebookEditor, context.cell);\n\t}\n});\n\nregisterAction2(class extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: CUT_CELL_COMMAND_ID,\n\t\t\t\ttitle: localize('notebookActions.cut', \"Cut Cell\"),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_CELL_EDITABLE),\n\t\t\t\t\tgroup: CellOverflowToolbarGroups.Copy,\n\t\t\t\t\torder: 1,\n\t\t\t\t},\n\t\t\t\tkeybinding: platform.isNative ? undefined : {\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, ContextKeyExpr.not(InputFocusedContextKey)),\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyX,\n\t\t\t\t\twin: { primary: KeyMod.CtrlCmd | KeyCode.KeyX, secondary: [KeyMod.Shift | KeyCode.Delete] },\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext) {\n\t\trunCutCells(accessor, context.notebookEditor, context.cell);\n\t}\n});\n\nregisterAction2(class extends NotebookAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: PASTE_CELL_COMMAND_ID,\n\t\t\t\ttitle: localize('notebookActions.paste', \"Paste Cell\"),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_EDITOR_EDITABLE),\n\t\t\t\t\tgroup: CellOverflowToolbarGroups.Copy,\n\t\t\t\t\torder: 3,\n\t\t\t\t},\n\t\t\t\tkeybinding: platform.isNative ? undefined : {\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, ContextKeyExpr.not(InputFocusedContextKey)),\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyV,\n\t\t\t\t\twin: { primary: KeyMod.CtrlCmd | KeyCode.KeyV, secondary: [KeyMod.Shift | KeyCode.Insert] },\n\t\t\t\t\tlinux: { primary: KeyMod.CtrlCmd | KeyCode.KeyV, secondary: [KeyMod.Shift | KeyCode.Insert] },\n\t\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookActionContext) {\n\t\tconst notebookService = accessor.get<INotebookService>(INotebookService);\n\t\tconst pasteCells = notebookService.getToCopy();\n\n\t\tif (!context.notebookEditor.hasModel() || context.notebookEditor.isReadOnly) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!pasteCells) {\n\t\t\treturn;\n\t\t}\n\n\t\trunPasteCells(context.notebookEditor, context.cell, pasteCells);\n\t}\n});\n\nregisterAction2(class extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: PASTE_CELL_ABOVE_COMMAND_ID,\n\t\t\t\ttitle: localize('notebookActions.pasteAbove', \"Paste Cell Above\"),\n\t\t\t\tkeybinding: {\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, ContextKeyExpr.not(InputFocusedContextKey)),\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyV,\n\t\t\t\t\tweight: NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT\n\t\t\t\t},\n\t\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext) {\n\t\tconst notebookService = accessor.get<INotebookService>(INotebookService);\n\t\tconst pasteCells = notebookService.getToCopy();\n\t\tconst editor = context.notebookEditor;\n\t\tconst textModel = editor.textModel;\n\n\t\tif (editor.isReadOnly) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!pasteCells) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst originalState: ISelectionState = {\n\t\t\tkind: SelectionStateType.Index,\n\t\t\tfocus: editor.getFocus(),\n\t\t\tselections: editor.getSelections()\n\t\t};\n\n\t\tconst currCellIndex = context.notebookEditor.getCellIndex(context.cell);\n\t\tconst newFocusIndex = currCellIndex;\n\t\ttextModel.applyEdits([\n\t\t\t{\n\t\t\t\teditType: CellEditType.Replace,\n\t\t\t\tindex: currCellIndex,\n\t\t\t\tcount: 0,\n\t\t\t\tcells: pasteCells.items.map(cell => cloneNotebookCellTextModel(cell))\n\t\t\t}\n\t\t], true, originalState, () => ({\n\t\t\tkind: SelectionStateType.Index,\n\t\t\tfocus: { start: newFocusIndex, end: newFocusIndex + 1 },\n\t\t\tselections: [{ start: newFocusIndex, end: newFocusIndex + pasteCells.items.length }]\n\t\t}), undefined, true);\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.toggleNotebookClipboardLog',\n\t\t\ttitle: localize2('toggleNotebookClipboardLog', 'Toggle Notebook Clipboard Troubleshooting'),\n\t\t\tcategory: Categories.Developer,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\ttoggleLogging();\n\t\tif (_logging) {\n\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\tcommandService.executeCommand(showWindowLogActionId);\n\t\t}\n\t}\n});\n\n\nregisterAction2(class extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: 'notebook.cell.output.selectAll',\n\t\t\t\ttitle: localize('notebook.cell.output.selectAll', \"Select All\"),\n\t\t\t\tkeybinding: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyA,\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_OUTPUT_FOCUSED),\n\t\t\t\t\tweight: NOTEBOOK_OUTPUT_WEBVIEW_ACTION_WEIGHT\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, _context: INotebookCellActionContext) {\n\t\twithEditor(accessor, editor => {\n\t\t\tif (!editor.hasEditorFocus()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (editor.hasEditorFocus() && !editor.hasWebviewFocus()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst cell = editor.getActiveCell();\n\t\t\tif (!cell || !cell.outputIsFocused || !editor.hasWebviewFocus()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (cell.inputInOutputIsFocused) {\n\t\t\t\teditor.selectInputContents(cell);\n\t\t\t} else {\n\t\t\t\teditor.selectOutputContent(cell);\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\n\t}\n});\n"],
  "mappings": "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",
  "names": ["containingSelection", "focus", "targetCell", "PRIORITY"]
}
