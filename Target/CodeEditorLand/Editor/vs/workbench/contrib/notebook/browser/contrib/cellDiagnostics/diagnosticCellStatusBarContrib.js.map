{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/cellDiagnostics/diagnosticCellStatusBarContrib.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../../../../base/common/lifecycle.js';\nimport { autorun } from '../../../../../../base/common/observable.js';\nimport { localize } from '../../../../../../nls.js';\nimport { IInstantiationService } from '../../../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../../../platform/keybinding/common/keybinding.js';\nimport { OPEN_CELL_FAILURE_ACTIONS_COMMAND_ID } from './cellDiagnosticsActions.js';\nimport { NotebookStatusBarController } from '../cellStatusBar/executionStatusBarItemController.js';\nimport { INotebookEditor, INotebookEditorContribution, INotebookViewModel } from '../../notebookBrowser.js';\nimport { registerNotebookContribution } from '../../notebookEditorExtensions.js';\nimport { CodeCellViewModel } from '../../viewModel/codeCellViewModel.js';\nimport { INotebookCellStatusBarItem, CellStatusbarAlignment } from '../../../common/notebookCommon.js';\nimport { ICellExecutionError } from '../../../common/notebookExecutionStateService.js';\n\nexport class DiagnosticCellStatusBarContrib extends Disposable implements INotebookEditorContribution {\n\tstatic id: string = 'workbench.notebook.statusBar.diagtnostic';\n\n\tconstructor(\n\t\tnotebookEditor: INotebookEditor,\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\t\tthis._register(new NotebookStatusBarController(notebookEditor, (vm, cell) =>\n\t\t\tcell instanceof CodeCellViewModel ?\n\t\t\t\tinstantiationService.createInstance(DiagnosticCellStatusBarItem, vm, cell) :\n\t\t\t\tDisposable.None\n\t\t));\n\t}\n}\nregisterNotebookContribution(DiagnosticCellStatusBarContrib.id, DiagnosticCellStatusBarContrib);\n\n\nclass DiagnosticCellStatusBarItem extends Disposable {\n\tprivate _currentItemIds: string[] = [];\n\n\tconstructor(\n\t\tprivate readonly _notebookViewModel: INotebookViewModel,\n\t\tprivate readonly cell: CodeCellViewModel,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t) {\n\t\tsuper();\n\t\tthis._register(autorun((reader) => this.updateSparkleItem(reader.readObservable(cell.excecutionError))));\n\n\t}\n\n\tprivate async updateSparkleItem(error: ICellExecutionError | undefined) {\n\t\tlet item: INotebookCellStatusBarItem | undefined;\n\n\t\tif (error?.location) {\n\t\t\tconst keybinding = this.keybindingService.lookupKeybinding(OPEN_CELL_FAILURE_ACTIONS_COMMAND_ID)?.getLabel();\n\t\t\tconst tooltip = localize('notebook.cell.status.diagnostic', \"Quick Actions {0}\", `(${keybinding})`);\n\n\t\t\titem = {\n\t\t\t\ttext: `$(sparkle)`,\n\t\t\t\ttooltip,\n\t\t\t\talignment: CellStatusbarAlignment.Left,\n\t\t\t\tcommand: OPEN_CELL_FAILURE_ACTIONS_COMMAND_ID,\n\t\t\t\tpriority: Number.MAX_SAFE_INTEGER - 1\n\t\t\t};\n\t\t}\n\n\t\tconst items = item ? [item] : [];\n\t\tthis._currentItemIds = this._notebookViewModel.deltaCellStatusBarItems(this._currentItemIds, [{ handle: this.cell.handle, items }]);\n\t}\n\n\toverride dispose() {\n\t\tsuper.dispose();\n\t\tthis._notebookViewModel.deltaCellStatusBarItems(this._currentItemIds, [{ handle: this.cell.handle, items: [] }]);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,kBAAkB;AAC3B,SAAS,eAAe;AACxB,SAAS,gBAAgB;AACzB,SAAS,6BAA6B;AACtC,SAAS,0BAA0B;AACnC,SAAS,4CAA4C;AACrD,SAAS,mCAAmC;AAC5C,SAAS,iBAAiB,6BAA6B,0BAA0B;AACjF,SAAS,oCAAoC;AAC7C,SAAS,yBAAyB;AAClC,SAAS,4BAA4B,8BAA8B;AACnE,SAAS,2BAA2B;AAE7B,IAAM,iCAAN,cAA6C,WAAkD;AAAA,EAlBtG,OAkBsG;AAAA;AAAA;AAAA,EACrG,OAAO,KAAa;AAAA,EAEpB,YACC,gBACuB,sBACtB;AACD,UAAM;AACN,SAAK,UAAU,IAAI;AAAA,MAA4B;AAAA,MAAgB,CAAC,IAAI,SACnE,gBAAgB,oBACf,qBAAqB,eAAe,6BAA6B,IAAI,IAAI,IACzE,WAAW;AAAA,IACb,CAAC;AAAA,EACF;AACD;AAda,iCAAN;AAAA,EAKJ;AAAA,GALU;AAeb,6BAA6B,+BAA+B,IAAI,8BAA8B;AAG9F,IAAM,8BAAN,cAA0C,WAAW;AAAA,EAGpD,YACkB,oBACA,MACoB,mBACpC;AACD,UAAM;AAJW;AACA;AACoB;AAGrC,SAAK,UAAU,QAAQ,CAAC,WAAW,KAAK,kBAAkB,OAAO,eAAe,KAAK,eAAe,CAAC,CAAC,CAAC;AAAA,EAExG;AAAA,EA/CD,OAoCqD;AAAA;AAAA;AAAA,EAC5C,kBAA4B,CAAC;AAAA,EAYrC,MAAc,kBAAkB,OAAwC;AACvE,QAAI;AAEJ,QAAI,OAAO,UAAU;AACpB,YAAM,aAAa,KAAK,kBAAkB,iBAAiB,oCAAoC,GAAG,SAAS;AAC3G,YAAM,UAAU,SAAS,mCAAmC,qBAAqB,IAAI,UAAU,GAAG;AAElG,aAAO;AAAA,QACN,MAAM;AAAA,QACN;AAAA,QACA,WAAW,uBAAuB;AAAA,QAClC,SAAS;AAAA,QACT,UAAU,OAAO,mBAAmB;AAAA,MACrC;AAAA,IACD;AAEA,UAAM,QAAQ,OAAO,CAAC,IAAI,IAAI,CAAC;AAC/B,SAAK,kBAAkB,KAAK,mBAAmB,wBAAwB,KAAK,iBAAiB,CAAC,EAAE,QAAQ,KAAK,KAAK,QAAQ,MAAM,CAAC,CAAC;AAAA,EACnI;AAAA,EAES,UAAU;AAClB,UAAM,QAAQ;AACd,SAAK,mBAAmB,wBAAwB,KAAK,iBAAiB,CAAC,EAAE,QAAQ,KAAK,KAAK,QAAQ,OAAO,CAAC,EAAE,CAAC,CAAC;AAAA,EAChH;AACD;AArCM,8BAAN;AAAA,EAMG;AAAA,GANG;",
  "names": []
}
