{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/cellDiagnostics/diagnosticCellStatusBarContrib.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from \"../../../../../../base/common/lifecycle.js\";\nimport { autorun } from \"../../../../../../base/common/observable.js\";\nimport { localize } from \"../../../../../../nls.js\";\nimport { IInstantiationService } from \"../../../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../../../platform/keybinding/common/keybinding.js\";\nimport {\n\tCellStatusbarAlignment,\n\ttype INotebookCellStatusBarItem,\n} from \"../../../common/notebookCommon.js\";\nimport type { ICellExecutionError } from \"../../../common/notebookExecutionStateService.js\";\nimport type {\n\tINotebookEditor,\n\tINotebookEditorContribution,\n\tINotebookViewModel,\n} from \"../../notebookBrowser.js\";\nimport { registerNotebookContribution } from \"../../notebookEditorExtensions.js\";\nimport { CodeCellViewModel } from \"../../viewModel/codeCellViewModel.js\";\nimport { NotebookStatusBarController } from \"../cellStatusBar/executionStatusBarItemController.js\";\nimport { OPEN_CELL_FAILURE_ACTIONS_COMMAND_ID } from \"./cellDiagnosticsActions.js\";\n\nexport class DiagnosticCellStatusBarContrib\n\textends Disposable\n\timplements INotebookEditorContribution\n{\n\tstatic id = \"workbench.notebook.statusBar.diagtnostic\";\n\n\tconstructor(\n\t\tnotebookEditor: INotebookEditor,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis._register(\n\t\t\tnew NotebookStatusBarController(notebookEditor, (vm, cell) =>\n\t\t\t\tcell instanceof CodeCellViewModel\n\t\t\t\t\t? instantiationService.createInstance(\n\t\t\t\t\t\t\tDiagnosticCellStatusBarItem,\n\t\t\t\t\t\t\tvm,\n\t\t\t\t\t\t\tcell,\n\t\t\t\t\t\t)\n\t\t\t\t\t: Disposable.None,\n\t\t\t),\n\t\t);\n\t}\n}\nregisterNotebookContribution(\n\tDiagnosticCellStatusBarContrib.id,\n\tDiagnosticCellStatusBarContrib,\n);\n\nclass DiagnosticCellStatusBarItem extends Disposable {\n\tprivate _currentItemIds: string[] = [];\n\n\tconstructor(\n\t\tprivate readonly _notebookViewModel: INotebookViewModel,\n\t\tprivate readonly cell: CodeCellViewModel,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t) {\n\t\tsuper();\n\t\tthis._register(autorun((reader) => this.updateSparkleItem(reader.readObservable(cell.excecutionError))));\n\n\t}\n\n\tprivate async updateSparkleItem(error: ICellExecutionError | undefined) {\n\t\tlet item: INotebookCellStatusBarItem | undefined;\n\n\t\tif (error?.location) {\n\t\t\tconst keybinding = this.keybindingService\n\t\t\t\t.lookupKeybinding(OPEN_CELL_FAILURE_ACTIONS_COMMAND_ID)\n\t\t\t\t?.getLabel();\n\t\t\tconst tooltip = localize(\n\t\t\t\t\"notebook.cell.status.diagnostic\",\n\t\t\t\t\"Quick Actions {0}\",\n\t\t\t\t`(${keybinding})`,\n\t\t\t);\n\n\t\t\titem = {\n\t\t\t\ttext: `$(sparkle)`,\n\t\t\t\ttooltip,\n\t\t\t\talignment: CellStatusbarAlignment.Left,\n\t\t\t\tcommand: OPEN_CELL_FAILURE_ACTIONS_COMMAND_ID,\n\t\t\t\tpriority: Number.MAX_SAFE_INTEGER - 1,\n\t\t\t};\n\t\t}\n\n\t\tconst items = item ? [item] : [];\n\t\tthis._currentItemIds = this._notebookViewModel.deltaCellStatusBarItems(\n\t\t\tthis._currentItemIds,\n\t\t\t[{ handle: this.cell.handle, items }],\n\t\t);\n\t}\n\n\toverride dispose() {\n\t\tsuper.dispose();\n\t\tthis._notebookViewModel.deltaCellStatusBarItems(this._currentItemIds, [\n\t\t\t{ handle: this.cell.handle, items: [] },\n\t\t]);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,kBAAkB;AAC3B,SAAS,eAAe;AACxB,SAAS,gBAAgB;AACzB,SAAS,6BAA6B;AACtC,SAAS,0BAA0B;AACnC;AAAA,EACC;AAAA,OAEM;AAOP,SAAS,oCAAoC;AAC7C,SAAS,yBAAyB;AAClC,SAAS,mCAAmC;AAC5C,SAAS,4CAA4C;AAE9C,IAAM,iCAAN,cACE,WAET;AAAA,EA5BA,OA4BA;AAAA;AAAA;AAAA,EACC,OAAO,KAAK;AAAA,EAEZ,YACC,gBACuB,sBACtB;AACD,UAAM;AACN,SAAK;AAAA,MACJ,IAAI;AAAA,QAA4B;AAAA,QAAgB,CAAC,IAAI,SACpD,gBAAgB,oBACb,qBAAqB;AAAA,UACrB;AAAA,UACA;AAAA,UACA;AAAA,QACD,IACC,WAAW;AAAA,MACf;AAAA,IACD;AAAA,EACD;AACD;AAvBa,iCAAN;AAAA,EAQJ;AAAA,GARU;AAwBb;AAAA,EACC,+BAA+B;AAAA,EAC/B;AACD;AAEA,IAAM,8BAAN,cAA0C,WAAW;AAAA,EAGpD,YACkB,oBACA,MACoB,mBACpC;AACD,UAAM;AAJW;AACA;AACoB;AAGrC,SAAK,UAAU,QAAQ,CAAC,WAAW,KAAK,kBAAkB,OAAO,eAAe,KAAK,eAAe,CAAC,CAAC,CAAC;AAAA,EAExG;AAAA,EAjED,OAsDqD;AAAA;AAAA;AAAA,EAC5C,kBAA4B,CAAC;AAAA,EAYrC,MAAc,kBAAkB,OAAwC;AACvE,QAAI;AAEJ,QAAI,OAAO,UAAU;AACpB,YAAM,aAAa,KAAK,kBACtB,iBAAiB,oCAAoC,GACpD,SAAS;AACZ,YAAM,UAAU;AAAA,QACf;AAAA,QACA;AAAA,QACA,IAAI,UAAU;AAAA,MACf;AAEA,aAAO;AAAA,QACN,MAAM;AAAA,QACN;AAAA,QACA,WAAW,uBAAuB;AAAA,QAClC,SAAS;AAAA,QACT,UAAU,OAAO,mBAAmB;AAAA,MACrC;AAAA,IACD;AAEA,UAAM,QAAQ,OAAO,CAAC,IAAI,IAAI,CAAC;AAC/B,SAAK,kBAAkB,KAAK,mBAAmB;AAAA,MAC9C,KAAK;AAAA,MACL,CAAC,EAAE,QAAQ,KAAK,KAAK,QAAQ,MAAM,CAAC;AAAA,IACrC;AAAA,EACD;AAAA,EAES,UAAU;AAClB,UAAM,QAAQ;AACd,SAAK,mBAAmB,wBAAwB,KAAK,iBAAiB;AAAA,MACrE,EAAE,QAAQ,KAAK,KAAK,QAAQ,OAAO,CAAC,EAAE;AAAA,IACvC,CAAC;AAAA,EACF;AACD;AAhDM,8BAAN;AAAA,EAMG;AAAA,GANG;",
  "names": []
}
