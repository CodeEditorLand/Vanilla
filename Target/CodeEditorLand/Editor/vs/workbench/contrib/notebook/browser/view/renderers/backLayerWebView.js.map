{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/view/renderers/backLayerWebView.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getWindow } from '../../../../../../base/browser/dom.js';\nimport { IMouseWheelEvent } from '../../../../../../base/browser/mouseEvent.js';\nimport { CodeWindow } from '../../../../../../base/browser/window.js';\nimport { WorkbenchActionExecutedClassification, WorkbenchActionExecutedEvent } from '../../../../../../base/common/actions.js';\nimport { coalesce } from '../../../../../../base/common/arrays.js';\nimport { DeferredPromise, runWhenGlobalIdle } from '../../../../../../base/common/async.js';\nimport { decodeBase64 } from '../../../../../../base/common/buffer.js';\nimport { Emitter, Event } from '../../../../../../base/common/event.js';\nimport { IDisposable } from '../../../../../../base/common/lifecycle.js';\nimport { getExtensionForMimeType } from '../../../../../../base/common/mime.js';\nimport { FileAccess, Schemas, matchesScheme, matchesSomeScheme } from '../../../../../../base/common/network.js';\nimport { equals } from '../../../../../../base/common/objects.js';\nimport * as osPath from '../../../../../../base/common/path.js';\nimport { isMacintosh, isWeb } from '../../../../../../base/common/platform.js';\nimport { dirname, extname, isEqual, joinPath } from '../../../../../../base/common/resources.js';\nimport { URI } from '../../../../../../base/common/uri.js';\nimport * as UUID from '../../../../../../base/common/uuid.js';\nimport { TokenizationRegistry } from '../../../../../../editor/common/languages.js';\nimport { ILanguageService } from '../../../../../../editor/common/languages/language.js';\nimport { generateTokensCSSForColorMap } from '../../../../../../editor/common/languages/supports/tokenization.js';\nimport { tokenizeToString } from '../../../../../../editor/common/languages/textToHtmlTokenizer.js';\nimport * as nls from '../../../../../../nls.js';\nimport { MenuId } from '../../../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../../../platform/contextview/browser/contextView.js';\nimport { IFileDialogService } from '../../../../../../platform/dialogs/common/dialogs.js';\nimport { ITextEditorOptions, ITextEditorSelection } from '../../../../../../platform/editor/common/editor.js';\nimport { IFileService } from '../../../../../../platform/files/common/files.js';\nimport { IOpenerService } from '../../../../../../platform/opener/common/opener.js';\nimport { IStorageService } from '../../../../../../platform/storage/common/storage.js';\nimport { ITelemetryService } from '../../../../../../platform/telemetry/common/telemetry.js';\nimport { editorFindMatch, editorFindMatchHighlight } from '../../../../../../platform/theme/common/colorRegistry.js';\nimport { IThemeService, Themable } from '../../../../../../platform/theme/common/themeService.js';\nimport { IWorkspaceContextService } from '../../../../../../platform/workspace/common/workspace.js';\nimport { IWorkspaceTrustManagementService } from '../../../../../../platform/workspace/common/workspaceTrust.js';\nimport { EditorInput } from '../../../../../common/editor/editorInput.js';\nimport { CellEditState, ICellOutputViewModel, ICellViewModel, ICommonCellInfo, IDisplayOutputLayoutUpdateRequest, IDisplayOutputViewModel, IFocusNotebookCellOptions, IGenericCellViewModel, IInsetRenderOutput, INotebookEditorCreationOptions, INotebookWebviewMessage, RenderOutputType } from '../../notebookBrowser.js';\nimport { NOTEBOOK_WEBVIEW_BOUNDARY } from '../notebookCellList.js';\nimport { preloadsScriptStr } from './webviewPreloads.js';\nimport { transformWebviewThemeVars } from './webviewThemeMapping.js';\nimport { MarkupCellViewModel } from '../../viewModel/markupCellViewModel.js';\nimport { CellUri, ICellOutput, INotebookRendererInfo, RendererMessagingSpec } from '../../../common/notebookCommon.js';\nimport { INotebookKernel } from '../../../common/notebookKernelService.js';\nimport { INotebookLoggingService } from '../../../common/notebookLoggingService.js';\nimport { IScopedRendererMessaging } from '../../../common/notebookRendererMessagingService.js';\nimport { INotebookService } from '../../../common/notebookService.js';\nimport { IWebviewElement, IWebviewService, WebviewContentPurpose, WebviewOriginStore } from '../../../../webview/browser/webview.js';\nimport { WebviewWindowDragMonitor } from '../../../../webview/browser/webviewWindowDragMonitor.js';\nimport { asWebviewUri, webviewGenericCspSource } from '../../../../webview/common/webview.js';\nimport { IEditorGroup, IEditorGroupsService } from '../../../../../services/editor/common/editorGroupsService.js';\nimport { IWorkbenchEnvironmentService } from '../../../../../services/environment/common/environmentService.js';\nimport { IPathService } from '../../../../../services/path/common/pathService.js';\nimport { FromWebviewMessage, IAckOutputHeight, IClickedDataUrlMessage, ICodeBlockHighlightRequest, IContentWidgetTopRequest, IControllerPreload, ICreationContent, ICreationRequestMessage, IFindMatch, IMarkupCellInitialization, RendererMetadata, StaticPreloadMetadata, ToWebviewMessage } from './webviewMessages.js';\n\nconst LINE_COLUMN_REGEX = /:([\\d]+)(?::([\\d]+))?$/;\nconst LineQueryRegex = /line=(\\d+)$/;\nconst FRAGMENT_REGEX = /^(.*)#([^#]*)$/;\n\nexport interface ICachedInset<K extends ICommonCellInfo> {\n\toutputId: string;\n\tversionId: number;\n\tcellInfo: K;\n\trenderer?: INotebookRendererInfo;\n\tcachedCreation: ICreationRequestMessage;\n\tinitialized?: boolean;\n}\n\nexport interface IResolvedBackLayerWebview {\n\twebview: IWebviewElement;\n}\n\n/**\n * Notebook Editor Delegate for back layer webview\n */\nexport interface INotebookDelegateForWebview {\n\treadonly creationOptions: INotebookEditorCreationOptions;\n\tgetCellById(cellId: string): IGenericCellViewModel | undefined;\n\tfocusNotebookCell(cell: IGenericCellViewModel, focus: 'editor' | 'container' | 'output', options?: IFocusNotebookCellOptions): Promise<void>;\n\ttoggleNotebookCellSelection(cell: IGenericCellViewModel, selectFromPrevious: boolean): void;\n\tgetCellByInfo(cellInfo: ICommonCellInfo): IGenericCellViewModel;\n\tfocusNextNotebookCell(cell: IGenericCellViewModel, focus: 'editor' | 'container' | 'output'): Promise<void>;\n\tupdateOutputHeight(cellInfo: ICommonCellInfo, output: IDisplayOutputViewModel, height: number, isInit: boolean, source?: string): void;\n\tscheduleOutputHeightAck(cellInfo: ICommonCellInfo, outputId: string, height: number): void;\n\tupdateMarkupCellHeight(cellId: string, height: number, isInit: boolean): void;\n\tsetMarkupCellEditState(cellId: string, editState: CellEditState): void;\n\tdidStartDragMarkupCell(cellId: string, event: { dragOffsetY: number }): void;\n\tdidDragMarkupCell(cellId: string, event: { dragOffsetY: number }): void;\n\tdidDropMarkupCell(cellId: string, event: { dragOffsetY: number; ctrlKey: boolean; altKey: boolean }): void;\n\tdidEndDragMarkupCell(cellId: string): void;\n\tdidResizeOutput(cellId: string): void;\n\tsetScrollTop(scrollTop: number): void;\n\ttriggerScroll(event: IMouseWheelEvent): void;\n\tupdatePerformanceMetadata(cellId: string, executionId: string, duration: number, rendererId: string): void;\n\tdidFocusOutputInputChange(inputFocused: boolean): void;\n}\n\ninterface BacklayerWebviewOptions {\n\treadonly outputNodePadding: number;\n\treadonly outputNodeLeftPadding: number;\n\treadonly previewNodePadding: number;\n\treadonly markdownLeftMargin: number;\n\treadonly leftMargin: number;\n\treadonly rightMargin: number;\n\treadonly runGutter: number;\n\treadonly dragAndDropEnabled: boolean;\n\treadonly fontSize: number;\n\treadonly outputFontSize: number;\n\treadonly fontFamily: string;\n\treadonly outputFontFamily: string;\n\treadonly markupFontSize: number;\n\treadonly markdownLineHeight: number;\n\treadonly outputLineHeight: number;\n\treadonly outputScrolling: boolean;\n\treadonly outputWordWrap: boolean;\n\treadonly outputLineLimit: number;\n\treadonly outputLinkifyFilePaths: boolean;\n\treadonly minimalError: boolean;\n}\n\n\nexport class BackLayerWebView<T extends ICommonCellInfo> extends Themable {\n\n\tprivate static _originStore?: WebviewOriginStore;\n\n\tprivate static getOriginStore(storageService: IStorageService): WebviewOriginStore {\n\t\tthis._originStore ??= new WebviewOriginStore('notebook.backlayerWebview.origins', storageService);\n\t\treturn this._originStore;\n\t}\n\n\telement: HTMLElement;\n\twebview: IWebviewElement | undefined = undefined;\n\tinsetMapping: Map<IDisplayOutputViewModel, ICachedInset<T>> = new Map();\n\tpendingWebviewIdleCreationRequest: Map<IDisplayOutputViewModel, IDisposable> = new Map();\n\tpendingWebviewIdleInsetMapping: Map<IDisplayOutputViewModel, ICachedInset<T>> = new Map();\n\tprivate reversedPendingWebviewIdleInsetMapping: Map<string, IDisplayOutputViewModel> = new Map();\n\n\treadonly markupPreviewMapping = new Map<string, IMarkupCellInitialization>();\n\tprivate hiddenInsetMapping: Set<IDisplayOutputViewModel> = new Set();\n\tprivate reversedInsetMapping: Map<string, IDisplayOutputViewModel> = new Map();\n\tprivate localResourceRootsCache: URI[] | undefined = undefined;\n\tprivate readonly _onMessage = this._register(new Emitter<INotebookWebviewMessage>());\n\tprivate readonly _preloadsCache = new Set<string>();\n\tpublic readonly onMessage: Event<INotebookWebviewMessage> = this._onMessage.event;\n\tprivate _disposed = false;\n\tprivate _currentKernel?: INotebookKernel;\n\n\tprivate firstInit = true;\n\tprivate initializeMarkupPromise?: { readonly requestId: string; readonly p: DeferredPromise<void>; readonly isFirstInit: boolean };\n\n\tprivate readonly nonce = UUID.generateUuid();\n\n\tconstructor(\n\t\tpublic notebookEditor: INotebookDelegateForWebview,\n\t\tprivate readonly id: string,\n\t\tpublic readonly notebookViewType: string,\n\t\tpublic readonly documentUri: URI,\n\t\tprivate options: BacklayerWebviewOptions,\n\t\tprivate readonly rendererMessaging: IScopedRendererMessaging | undefined,\n\t\t@IWebviewService private readonly webviewService: IWebviewService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@INotebookService private readonly notebookService: INotebookService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IFileDialogService private readonly fileDialogService: IFileDialogService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IWorkspaceTrustManagementService private readonly workspaceTrustManagementService: IWorkspaceTrustManagementService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IPathService private readonly pathService: IPathService,\n\t\t@INotebookLoggingService private readonly notebookLogService: INotebookLoggingService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService\n\t) {\n\t\tsuper(themeService);\n\n\t\tthis._logRendererDebugMessage('Creating backlayer webview for notebook');\n\n\t\tthis.element = document.createElement('div');\n\n\t\tthis.element.style.height = '1400px';\n\t\tthis.element.style.position = 'absolute';\n\n\t\tif (rendererMessaging) {\n\t\t\tthis._register(rendererMessaging);\n\t\t\trendererMessaging.receiveMessageHandler = (rendererId, message) => {\n\t\t\t\tif (!this.webview || this._disposed) {\n\t\t\t\t\treturn Promise.resolve(false);\n\t\t\t\t}\n\n\t\t\t\tthis._sendMessageToWebview({\n\t\t\t\t\t__vscode_notebook_message: true,\n\t\t\t\t\ttype: 'customRendererMessage',\n\t\t\t\t\trendererId: rendererId,\n\t\t\t\t\tmessage: message\n\t\t\t\t});\n\n\t\t\t\treturn Promise.resolve(true);\n\t\t\t};\n\t\t}\n\n\t\tthis._register(workspaceTrustManagementService.onDidChangeTrust(e => {\n\t\t\tconst baseUrl = this.asWebviewUri(this.getNotebookBaseUri(), undefined);\n\t\t\tconst htmlContent = this.generateContent(baseUrl.toString());\n\t\t\tthis.webview?.setHtml(htmlContent);\n\t\t}));\n\n\t\tthis._register(TokenizationRegistry.onDidChange(() => {\n\t\t\tthis._sendMessageToWebview({\n\t\t\t\ttype: 'tokenizedStylesChanged',\n\t\t\t\tcss: getTokenizationCss(),\n\t\t\t});\n\t\t}));\n\t}\n\n\tupdateOptions(options: BacklayerWebviewOptions) {\n\t\tthis.options = options;\n\t\tthis._updateStyles();\n\t\tthis._updateOptions();\n\t}\n\n\tprivate _logRendererDebugMessage(msg: string) {\n\t\tthis.notebookLogService.debug('BacklayerWebview', `${this.documentUri} (${this.id}) - ${msg}`);\n\t}\n\n\tprivate _updateStyles() {\n\t\tthis._sendMessageToWebview({\n\t\t\ttype: 'notebookStyles',\n\t\t\tstyles: this._generateStyles()\n\t\t});\n\t}\n\n\tprivate _updateOptions() {\n\t\tthis._sendMessageToWebview({\n\t\t\ttype: 'notebookOptions',\n\t\t\toptions: {\n\t\t\t\tdragAndDropEnabled: this.options.dragAndDropEnabled\n\t\t\t},\n\t\t\trenderOptions: {\n\t\t\t\tlineLimit: this.options.outputLineLimit,\n\t\t\t\toutputScrolling: this.options.outputScrolling,\n\t\t\t\toutputWordWrap: this.options.outputWordWrap,\n\t\t\t\tlinkifyFilePaths: this.options.outputLinkifyFilePaths,\n\t\t\t\tminimalError: this.options.minimalError\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _generateStyles() {\n\t\treturn {\n\t\t\t'notebook-output-left-margin': `${this.options.leftMargin + this.options.runGutter}px`,\n\t\t\t'notebook-output-width': `calc(100% - ${this.options.leftMargin + this.options.rightMargin + this.options.runGutter}px)`,\n\t\t\t'notebook-output-node-padding': `${this.options.outputNodePadding}px`,\n\t\t\t'notebook-run-gutter': `${this.options.runGutter}px`,\n\t\t\t'notebook-preview-node-padding': `${this.options.previewNodePadding}px`,\n\t\t\t'notebook-markdown-left-margin': `${this.options.markdownLeftMargin}px`,\n\t\t\t'notebook-output-node-left-padding': `${this.options.outputNodeLeftPadding}px`,\n\t\t\t'notebook-markdown-min-height': `${this.options.previewNodePadding * 2}px`,\n\t\t\t'notebook-markup-font-size': typeof this.options.markupFontSize === 'number' && this.options.markupFontSize > 0 ? `${this.options.markupFontSize}px` : `calc(${this.options.fontSize}px * 1.2)`,\n\t\t\t'notebook-markdown-line-height': typeof this.options.markdownLineHeight === 'number' && this.options.markdownLineHeight > 0 ? `${this.options.markdownLineHeight}px` : `normal`,\n\t\t\t'notebook-cell-output-font-size': `${this.options.outputFontSize || this.options.fontSize}px`,\n\t\t\t'notebook-cell-output-line-height': `${this.options.outputLineHeight}px`,\n\t\t\t'notebook-cell-output-max-height': `${this.options.outputLineHeight * this.options.outputLineLimit + 2}px`,\n\t\t\t'notebook-cell-output-font-family': this.options.outputFontFamily || this.options.fontFamily,\n\t\t\t'notebook-cell-markup-empty-content': nls.localize('notebook.emptyMarkdownPlaceholder', \"Empty markdown cell, double-click or press enter to edit.\"),\n\t\t\t'notebook-cell-renderer-not-found-error': nls.localize({\n\t\t\t\tkey: 'notebook.error.rendererNotFound',\n\t\t\t\tcomment: ['$0 is a placeholder for the mime type']\n\t\t\t}, \"No renderer found for '$0'\"),\n\t\t\t'notebook-cell-renderer-fallbacks-exhausted': nls.localize({\n\t\t\t\tkey: 'notebook.error.rendererFallbacksExhausted',\n\t\t\t\tcomment: ['$0 is a placeholder for the mime type']\n\t\t\t}, \"Could not render content for '$0'\"),\n\t\t};\n\t}\n\n\tprivate generateContent(baseUrl: string) {\n\t\tconst renderersData = this.getRendererData();\n\t\tconst preloadsData = this.getStaticPreloadsData();\n\t\tconst renderOptions = {\n\t\t\tlineLimit: this.options.outputLineLimit,\n\t\t\toutputScrolling: this.options.outputScrolling,\n\t\t\toutputWordWrap: this.options.outputWordWrap,\n\t\t\tlinkifyFilePaths: this.options.outputLinkifyFilePaths,\n\t\t\tminimalError: this.options.minimalError\n\t\t};\n\t\tconst preloadScript = preloadsScriptStr(\n\t\t\t{\n\t\t\t\t...this.options,\n\t\t\t\ttokenizationCss: getTokenizationCss(),\n\t\t\t},\n\t\t\t{ dragAndDropEnabled: this.options.dragAndDropEnabled },\n\t\t\trenderOptions,\n\t\t\trenderersData,\n\t\t\tpreloadsData,\n\t\t\tthis.workspaceTrustManagementService.isWorkspaceTrusted(),\n\t\t\tthis.nonce);\n\n\t\tconst enableCsp = this.configurationService.getValue('notebook.experimental.enableCsp');\n\t\tconst currentHighlight = this.getColor(editorFindMatch);\n\t\tconst findMatchHighlight = this.getColor(editorFindMatchHighlight);\n\t\treturn /* html */`\n\t\t<html lang=\"en\">\n\t\t\t<head>\n\t\t\t\t<meta charset=\"UTF-8\">\n\t\t\t\t<base href=\"${baseUrl}/\" />\n\t\t\t\t${enableCsp ?\n\t\t\t\t`<meta http-equiv=\"Content-Security-Policy\" content=\"\n\t\t\t\t\tdefault-src 'none';\n\t\t\t\t\tscript-src ${webviewGenericCspSource} 'unsafe-inline' 'unsafe-eval';\n\t\t\t\t\tstyle-src ${webviewGenericCspSource} 'unsafe-inline';\n\t\t\t\t\timg-src ${webviewGenericCspSource} https: http: data:;\n\t\t\t\t\tfont-src ${webviewGenericCspSource} https:;\n\t\t\t\t\tconnect-src https:;\n\t\t\t\t\tchild-src https: data:;\n\t\t\t\t\">` : ''}\n\t\t\t\t<style nonce=\"${this.nonce}\">\n\t\t\t\t\t::highlight(find-highlight) {\n\t\t\t\t\t\tbackground-color: var(--vscode-editor-findMatchBackground, ${findMatchHighlight});\n\t\t\t\t\t}\n\n\t\t\t\t\t::highlight(current-find-highlight) {\n\t\t\t\t\t\tbackground-color: var(--vscode-editor-findMatchHighlightBackground, ${currentHighlight});\n\t\t\t\t\t}\n\n\t\t\t\t\t#container .cell_container {\n\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t}\n\n\t\t\t\t\t#container .output_container {\n\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t}\n\n\t\t\t\t\t#container > div > div > div.output {\n\t\t\t\t\t\tfont-size: var(--notebook-cell-output-font-size);\n\t\t\t\t\t\twidth: var(--notebook-output-width);\n\t\t\t\t\t\tmargin-left: var(--notebook-output-left-margin);\n\t\t\t\t\t\tbackground-color: var(--theme-notebook-output-background);\n\t\t\t\t\t\tpadding-top: var(--notebook-output-node-padding);\n\t\t\t\t\t\tpadding-right: var(--notebook-output-node-padding);\n\t\t\t\t\t\tpadding-bottom: var(--notebook-output-node-padding);\n\t\t\t\t\t\tpadding-left: var(--notebook-output-node-left-padding);\n\t\t\t\t\t\tbox-sizing: border-box;\n\t\t\t\t\t\tborder-top: none;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* markdown */\n\t\t\t\t\t#container div.preview {\n\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\tpadding-right: var(--notebook-preview-node-padding);\n\t\t\t\t\t\tpadding-left: var(--notebook-markdown-left-margin);\n\t\t\t\t\t\tpadding-top: var(--notebook-preview-node-padding);\n\t\t\t\t\t\tpadding-bottom: var(--notebook-preview-node-padding);\n\n\t\t\t\t\t\tbox-sizing: border-box;\n\t\t\t\t\t\twhite-space: nowrap;\n\t\t\t\t\t\toverflow: hidden;\n\t\t\t\t\t\twhite-space: initial;\n\n\t\t\t\t\t\tfont-size: var(--notebook-markup-font-size);\n\t\t\t\t\t\tline-height: var(--notebook-markdown-line-height);\n\t\t\t\t\t\tcolor: var(--theme-ui-foreground);\n\t\t\t\t\t}\n\n\t\t\t\t\t#container div.preview.draggable {\n\t\t\t\t\t\tuser-select: none;\n\t\t\t\t\t\t-webkit-user-select: none;\n\t\t\t\t\t\t-ms-user-select: none;\n\t\t\t\t\t\tcursor: grab;\n\t\t\t\t\t}\n\n\t\t\t\t\t#container div.preview.selected {\n\t\t\t\t\t\tbackground: var(--theme-notebook-cell-selected-background);\n\t\t\t\t\t}\n\n\t\t\t\t\t#container div.preview.dragging {\n\t\t\t\t\t\tbackground-color: var(--theme-background);\n\t\t\t\t\t\topacity: 0.5 !important;\n\t\t\t\t\t}\n\n\t\t\t\t\t.monaco-workbench.vs-dark .notebookOverlay .cell.markdown .latex img,\n\t\t\t\t\t.monaco-workbench.vs-dark .notebookOverlay .cell.markdown .latex-block img {\n\t\t\t\t\t\tfilter: brightness(0) invert(1)\n\t\t\t\t\t}\n\n\t\t\t\t\t#container .markup > div.nb-symbolHighlight {\n\t\t\t\t\t\tbackground-color: var(--theme-notebook-symbol-highlight-background);\n\t\t\t\t\t}\n\n\t\t\t\t\t#container .nb-symbolHighlight .output_container .output {\n\t\t\t\t\t\tbackground-color: var(--theme-notebook-symbol-highlight-background);\n\t\t\t\t\t}\n\n\t\t\t\t\t#container .markup > div.nb-multiCellHighlight {\n\t\t\t\t\t\tbackground-color: var(--theme-notebook-symbol-highlight-background);\n\t\t\t\t\t}\n\n\t\t\t\t\t#container .nb-multiCellHighlight .output_container .output {\n\t\t\t\t\t\tbackground-color: var(--theme-notebook-symbol-highlight-background);\n\t\t\t\t\t}\n\n\t\t\t\t\t#container .nb-chatGenerationHighlight .output_container .output {\n\t\t\t\t\t\tbackground-color: var(--vscode-notebook-selectedCellBackground);\n\t\t\t\t\t}\n\n\t\t\t\t\t#container > div.nb-cellDeleted .output_container {\n\t\t\t\t\t\tbackground-color: var(--theme-notebook-diff-removed-background);\n\t\t\t\t\t}\n\n\t\t\t\t\t#container > div.nb-cellAdded .output_container {\n\t\t\t\t\t\tbackground-color: var(--theme-notebook-diff-inserted-background);\n\t\t\t\t\t}\n\n\t\t\t\t\t#container > div > div:not(.preview) > div {\n\t\t\t\t\t\toverflow-x: auto;\n\t\t\t\t\t}\n\n\t\t\t\t\t#container .no-renderer-error {\n\t\t\t\t\t\tcolor: var(--vscode-editorError-foreground);\n\t\t\t\t\t}\n\n\t\t\t\t\tbody {\n\t\t\t\t\t\tpadding: 0px;\n\t\t\t\t\t\theight: 100%;\n\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t}\n\n\t\t\t\t\ttable, thead, tr, th, td, tbody {\n\t\t\t\t\t\tborder: none;\n\t\t\t\t\t\tborder-color: transparent;\n\t\t\t\t\t\tborder-spacing: 0;\n\t\t\t\t\t\tborder-collapse: collapse;\n\t\t\t\t\t}\n\n\t\t\t\t\ttable, th, tr {\n\t\t\t\t\t\tvertical-align: middle;\n\t\t\t\t\t\ttext-align: right;\n\t\t\t\t\t}\n\n\t\t\t\t\tthead {\n\t\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\t\tbackground-color: rgba(130, 130, 130, 0.16);\n\t\t\t\t\t}\n\n\t\t\t\t\tth, td {\n\t\t\t\t\t\tpadding: 4px 8px;\n\t\t\t\t\t}\n\n\t\t\t\t\ttr:nth-child(even) {\n\t\t\t\t\t\tbackground-color: rgba(130, 130, 130, 0.08);\n\t\t\t\t\t}\n\n\t\t\t\t\ttbody th {\n\t\t\t\t\t\tfont-weight: normal;\n\t\t\t\t\t}\n\n\t\t\t\t\t.find-match {\n\t\t\t\t\t\tbackground-color: var(--vscode-editor-findMatchHighlightBackground);\n\t\t\t\t\t}\n\n\t\t\t\t\t.current-find-match {\n\t\t\t\t\t\tbackground-color: var(--vscode-editor-findMatchBackground);\n\t\t\t\t\t}\n\n\t\t\t\t\t#_defaultColorPalatte {\n\t\t\t\t\t\tcolor: var(--vscode-editor-findMatchHighlightBackground);\n\t\t\t\t\t\tbackground-color: var(--vscode-editor-findMatchBackground);\n\t\t\t\t\t}\n\t\t\t\t</style>\n\t\t\t</head>\n\t\t\t<body style=\"overflow: hidden;\">\n\t\t\t\t<div id='findStart' tabIndex=-1></div>\n\t\t\t\t<div id='container' class=\"widgetarea\" style=\"position: absolute;width:100%;top: 0px\"></div>\n\t\t\t\t<div id=\"_defaultColorPalatte\"></div>\n\t\t\t\t<script type=\"module\">${preloadScript}</script>\n\t\t\t</body>\n\t\t</html>`;\n\t}\n\n\tprivate getRendererData(): RendererMetadata[] {\n\t\treturn this.notebookService.getRenderers().map((renderer): RendererMetadata => {\n\t\t\tconst entrypoint = {\n\t\t\t\textends: renderer.entrypoint.extends,\n\t\t\t\tpath: this.asWebviewUri(renderer.entrypoint.path, renderer.extensionLocation).toString()\n\t\t\t};\n\t\t\treturn {\n\t\t\t\tid: renderer.id,\n\t\t\t\tentrypoint,\n\t\t\t\tmimeTypes: renderer.mimeTypes,\n\t\t\t\tmessaging: renderer.messaging !== RendererMessagingSpec.Never && !!this.rendererMessaging,\n\t\t\t\tisBuiltin: renderer.isBuiltin\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate getStaticPreloadsData(): StaticPreloadMetadata[] {\n\t\treturn Array.from(this.notebookService.getStaticPreloads(this.notebookViewType), preload => {\n\t\t\treturn { entrypoint: this.asWebviewUri(preload.entrypoint, preload.extensionLocation).toString().toString() };\n\t\t});\n\t}\n\n\tprivate asWebviewUri(uri: URI, fromExtension: URI | undefined) {\n\t\treturn asWebviewUri(uri, fromExtension?.scheme === Schemas.vscodeRemote ? { isRemote: true, authority: fromExtension.authority } : undefined);\n\t}\n\n\tpostKernelMessage(message: any) {\n\t\tthis._sendMessageToWebview({\n\t\t\t__vscode_notebook_message: true,\n\t\t\ttype: 'customKernelMessage',\n\t\t\tmessage,\n\t\t});\n\t}\n\n\tprivate resolveOutputId(id: string): { cellInfo: T; output: ICellOutputViewModel } | undefined {\n\t\tconst output = this.reversedInsetMapping.get(id);\n\t\tif (!output) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst cellInfo = this.insetMapping.get(output)!.cellInfo;\n\t\treturn { cellInfo, output };\n\t}\n\n\tisResolved(): this is IResolvedBackLayerWebview {\n\t\treturn !!this.webview;\n\t}\n\n\tcreateWebview(targetWindow: CodeWindow): Promise<void> {\n\t\tconst baseUrl = this.asWebviewUri(this.getNotebookBaseUri(), undefined);\n\t\tconst htmlContent = this.generateContent(baseUrl.toString());\n\t\treturn this._initialize(htmlContent, targetWindow);\n\t}\n\n\tprivate getNotebookBaseUri() {\n\t\tif (this.documentUri.scheme === Schemas.untitled) {\n\t\t\tconst folder = this.workspaceContextService.getWorkspaceFolder(this.documentUri);\n\t\t\tif (folder) {\n\t\t\t\treturn folder.uri;\n\t\t\t}\n\n\t\t\tconst folders = this.workspaceContextService.getWorkspace().folders;\n\t\t\tif (folders.length) {\n\t\t\t\treturn folders[0].uri;\n\t\t\t}\n\t\t}\n\n\t\treturn dirname(this.documentUri);\n\t}\n\n\tprivate getBuiltinLocalResourceRoots(): URI[] {\n\t\t// Python notebooks assume that requirejs is a global.\n\t\t// For all other notebooks, they need to provide their own loader.\n\t\tif (!this.documentUri.path.toLowerCase().endsWith('.ipynb')) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (isWeb) {\n\t\t\treturn []; // script is inlined\n\t\t}\n\n\t\treturn [\n\t\t\tdirname(FileAccess.asFileUri('vs/loader.js')), // TODO@esm this file will not exist in the future\n\t\t];\n\t}\n\n\tprivate _initialize(content: string, targetWindow: CodeWindow): Promise<void> {\n\t\tif (!getWindow(this.element).document.body.contains(this.element)) {\n\t\t\tthrow new Error('Element is already detached from the DOM tree');\n\t\t}\n\n\t\tthis.webview = this._createInset(this.webviewService, content);\n\t\tthis.webview.mountTo(this.element, targetWindow);\n\t\tthis._register(this.webview);\n\n\t\tthis._register(new WebviewWindowDragMonitor(targetWindow, () => this.webview));\n\n\t\tconst initializePromise = new DeferredPromise<void>();\n\n\t\tthis._register(this.webview.onFatalError(e => {\n\t\t\tinitializePromise.error(new Error(`Could not initialize webview: ${e.message}}`));\n\t\t}));\n\n\t\tthis._register(this.webview.onMessage(async (message) => {\n\t\t\tconst data: FromWebviewMessage | { readonly __vscode_notebook_message: undefined } = message.message;\n\t\t\tif (this._disposed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!data.__vscode_notebook_message) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tswitch (data.type) {\n\t\t\t\tcase 'initialized': {\n\t\t\t\t\tinitializePromise.complete();\n\t\t\t\t\tthis.initializeWebViewState();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'initializedMarkup': {\n\t\t\t\t\tif (this.initializeMarkupPromise?.requestId === data.requestId) {\n\t\t\t\t\t\tthis.initializeMarkupPromise?.p.complete();\n\t\t\t\t\t\tthis.initializeMarkupPromise = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'dimension': {\n\t\t\t\t\tfor (const update of data.updates) {\n\t\t\t\t\t\tconst height = update.height;\n\t\t\t\t\t\tif (update.isOutput) {\n\t\t\t\t\t\t\tconst resolvedResult = this.resolveOutputId(update.id);\n\t\t\t\t\t\t\tif (resolvedResult) {\n\t\t\t\t\t\t\t\tconst { cellInfo, output } = resolvedResult;\n\t\t\t\t\t\t\t\tthis.notebookEditor.updateOutputHeight(cellInfo, output, height, !!update.init, 'webview#dimension');\n\t\t\t\t\t\t\t\tthis.notebookEditor.scheduleOutputHeightAck(cellInfo, update.id, height);\n\t\t\t\t\t\t\t} else if (update.init) {\n\t\t\t\t\t\t\t\t// might be idle render request's ack\n\t\t\t\t\t\t\t\tconst outputRequest = this.reversedPendingWebviewIdleInsetMapping.get(update.id);\n\t\t\t\t\t\t\t\tif (outputRequest) {\n\t\t\t\t\t\t\t\t\tconst inset = this.pendingWebviewIdleInsetMapping.get(outputRequest)!;\n\n\t\t\t\t\t\t\t\t\t// clear the pending mapping\n\t\t\t\t\t\t\t\t\tthis.pendingWebviewIdleCreationRequest.delete(outputRequest);\n\t\t\t\t\t\t\t\t\tthis.pendingWebviewIdleCreationRequest.delete(outputRequest);\n\n\t\t\t\t\t\t\t\t\tconst cellInfo = inset.cellInfo;\n\t\t\t\t\t\t\t\t\tthis.reversedInsetMapping.set(update.id, outputRequest);\n\t\t\t\t\t\t\t\t\tthis.insetMapping.set(outputRequest, inset);\n\t\t\t\t\t\t\t\t\tthis.notebookEditor.updateOutputHeight(cellInfo, outputRequest, height, !!update.init, 'webview#dimension');\n\t\t\t\t\t\t\t\t\tthis.notebookEditor.scheduleOutputHeightAck(cellInfo, update.id, height);\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthis.reversedPendingWebviewIdleInsetMapping.delete(update.id);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (!update.init) {\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tconst output = this.reversedInsetMapping.get(update.id);\n\n\t\t\t\t\t\t\t\tif (!output) {\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tconst inset = this.insetMapping.get(output)!;\n\t\t\t\t\t\t\t\tinset.initialized = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.notebookEditor.updateMarkupCellHeight(update.id, height, !!update.init);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'mouseenter': {\n\t\t\t\t\tconst resolvedResult = this.resolveOutputId(data.id);\n\t\t\t\t\tif (resolvedResult) {\n\t\t\t\t\t\tconst latestCell = this.notebookEditor.getCellByInfo(resolvedResult.cellInfo);\n\t\t\t\t\t\tif (latestCell) {\n\t\t\t\t\t\t\tlatestCell.outputIsHovered = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'mouseleave': {\n\t\t\t\t\tconst resolvedResult = this.resolveOutputId(data.id);\n\t\t\t\t\tif (resolvedResult) {\n\t\t\t\t\t\tconst latestCell = this.notebookEditor.getCellByInfo(resolvedResult.cellInfo);\n\t\t\t\t\t\tif (latestCell) {\n\t\t\t\t\t\t\tlatestCell.outputIsHovered = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'outputFocus': {\n\t\t\t\t\tconst resolvedResult = this.resolveOutputId(data.id);\n\t\t\t\t\tif (resolvedResult) {\n\t\t\t\t\t\tconst latestCell = this.notebookEditor.getCellByInfo(resolvedResult.cellInfo);\n\t\t\t\t\t\tif (latestCell) {\n\t\t\t\t\t\t\tlatestCell.outputIsFocused = true;\n\t\t\t\t\t\t\tthis.notebookEditor.focusNotebookCell(latestCell, 'output', { outputId: resolvedResult.output.model.outputId, skipReveal: true, outputWebviewFocused: true });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'outputBlur': {\n\t\t\t\t\tconst resolvedResult = this.resolveOutputId(data.id);\n\t\t\t\t\tif (resolvedResult) {\n\t\t\t\t\t\tconst latestCell = this.notebookEditor.getCellByInfo(resolvedResult.cellInfo);\n\t\t\t\t\t\tif (latestCell) {\n\t\t\t\t\t\t\tlatestCell.outputIsFocused = false;\n\t\t\t\t\t\t\tlatestCell.inputInOutputIsFocused = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'scroll-ack': {\n\t\t\t\t\t// const date = new Date();\n\t\t\t\t\t// const top = data.data.top;\n\t\t\t\t\t// console.log('ack top ', top, ' version: ', data.version, ' - ', date.getMinutes() + ':' + date.getSeconds() + ':' + date.getMilliseconds());\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'scroll-to-reveal': {\n\t\t\t\t\tthis.notebookEditor.setScrollTop(data.scrollTop - NOTEBOOK_WEBVIEW_BOUNDARY);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'did-scroll-wheel': {\n\t\t\t\t\tthis.notebookEditor.triggerScroll({\n\t\t\t\t\t\t...data.payload,\n\t\t\t\t\t\tpreventDefault: () => { },\n\t\t\t\t\t\tstopPropagation: () => { }\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'focus-editor': {\n\t\t\t\t\tconst cell = this.notebookEditor.getCellById(data.cellId);\n\t\t\t\t\tif (cell) {\n\t\t\t\t\t\tif (data.focusNext) {\n\t\t\t\t\t\t\tthis.notebookEditor.focusNextNotebookCell(cell, 'editor');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tawait this.notebookEditor.focusNotebookCell(cell, 'editor');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'clicked-data-url': {\n\t\t\t\t\tthis._onDidClickDataLink(data);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'clicked-link': {\n\t\t\t\t\tif (matchesScheme(data.href, Schemas.command)) {\n\t\t\t\t\t\tconst uri = URI.parse(data.href);\n\n\t\t\t\t\t\tif (uri.path === 'workbench.action.openLargeOutput') {\n\t\t\t\t\t\t\tconst outputId = uri.query;\n\t\t\t\t\t\t\tconst group = this.editorGroupService.activeGroup;\n\t\t\t\t\t\t\tif (group) {\n\t\t\t\t\t\t\t\tif (group.activeEditor) {\n\t\t\t\t\t\t\t\t\tgroup.pinEditor(group.activeEditor);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.openerService.open(CellUri.generateCellOutputUri(this.documentUri, outputId));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (uri.path === 'cellOutput.enableScrolling') {\n\t\t\t\t\t\t\tconst outputId = uri.query;\n\t\t\t\t\t\t\tconst cell = this.reversedInsetMapping.get(outputId);\n\n\t\t\t\t\t\t\tif (cell) {\n\t\t\t\t\t\t\t\tthis.telemetryService.publicLog2<WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification>\n\t\t\t\t\t\t\t\t\t('workbenchActionExecuted', { id: 'notebook.cell.toggleOutputScrolling', from: 'inlineLink' });\n\n\t\t\t\t\t\t\t\tcell.cellViewModel.outputsViewModels.forEach((vm) => {\n\t\t\t\t\t\t\t\t\tif (vm.model.metadata) {\n\t\t\t\t\t\t\t\t\t\tvm.model.metadata['scrollable'] = true;\n\t\t\t\t\t\t\t\t\t\tvm.resetRenderer();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// We allow a very limited set of commands\n\t\t\t\t\t\tthis.openerService.open(data.href, {\n\t\t\t\t\t\t\tfromUserGesture: true,\n\t\t\t\t\t\t\tfromWorkspace: true,\n\t\t\t\t\t\t\tallowCommands: [\n\t\t\t\t\t\t\t\t'github-issues.authNow',\n\t\t\t\t\t\t\t\t'workbench.extensions.search',\n\t\t\t\t\t\t\t\t'workbench.action.openSettings',\n\t\t\t\t\t\t\t\t'_notebook.selectKernel',\n\t\t\t\t\t\t\t\t// TODO@rebornix explore open output channel with name command\n\t\t\t\t\t\t\t\t'jupyter.viewOutput'\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (matchesSomeScheme(data.href, Schemas.http, Schemas.https, Schemas.mailto)) {\n\t\t\t\t\t\tthis.openerService.open(data.href, { fromUserGesture: true, fromWorkspace: true });\n\t\t\t\t\t} else if (matchesScheme(data.href, Schemas.vscodeNotebookCell)) {\n\t\t\t\t\t\tconst uri = URI.parse(data.href);\n\t\t\t\t\t\tawait this._handleNotebookCellResource(uri);\n\t\t\t\t\t} else if (!/^[\\w\\-]+:/.test(data.href)) {\n\t\t\t\t\t\t// Uri without scheme, such as a file path\n\t\t\t\t\t\tawait this._handleResourceOpening(tryDecodeURIComponent(data.href));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// uri with scheme\n\t\t\t\t\t\tif (osPath.isAbsolute(data.href)) {\n\t\t\t\t\t\t\tthis._openUri(URI.file(data.href));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._openUri(URI.parse(data.href));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'customKernelMessage': {\n\t\t\t\t\tthis._onMessage.fire({ message: data.message });\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'customRendererMessage': {\n\t\t\t\t\tthis.rendererMessaging?.postMessage(data.rendererId, data.message);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'clickMarkupCell': {\n\t\t\t\t\tconst cell = this.notebookEditor.getCellById(data.cellId);\n\t\t\t\t\tif (cell) {\n\t\t\t\t\t\tif (data.shiftKey || (isMacintosh ? data.metaKey : data.ctrlKey)) {\n\t\t\t\t\t\t\t// Modify selection\n\t\t\t\t\t\t\tthis.notebookEditor.toggleNotebookCellSelection(cell, /* fromPrevious */ data.shiftKey);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Normal click\n\t\t\t\t\t\t\tawait this.notebookEditor.focusNotebookCell(cell, 'container', { skipReveal: true });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'contextMenuMarkupCell': {\n\t\t\t\t\tconst cell = this.notebookEditor.getCellById(data.cellId);\n\t\t\t\t\tif (cell) {\n\t\t\t\t\t\t// Focus the cell first\n\t\t\t\t\t\tawait this.notebookEditor.focusNotebookCell(cell, 'container', { skipReveal: true });\n\n\t\t\t\t\t\t// Then show the context menu\n\t\t\t\t\t\tconst webviewRect = this.element.getBoundingClientRect();\n\t\t\t\t\t\tthis.contextMenuService.showContextMenu({\n\t\t\t\t\t\t\tmenuId: MenuId.NotebookCellTitle,\n\t\t\t\t\t\t\tcontextKeyService: this.contextKeyService,\n\t\t\t\t\t\t\tgetAnchor: () => ({\n\t\t\t\t\t\t\t\tx: webviewRect.x + data.clientX,\n\t\t\t\t\t\t\t\ty: webviewRect.y + data.clientY\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'toggleMarkupPreview': {\n\t\t\t\t\tconst cell = this.notebookEditor.getCellById(data.cellId);\n\t\t\t\t\tif (cell && !this.notebookEditor.creationOptions.isReadOnly) {\n\t\t\t\t\t\tthis.notebookEditor.setMarkupCellEditState(data.cellId, CellEditState.Editing);\n\t\t\t\t\t\tawait this.notebookEditor.focusNotebookCell(cell, 'editor', { skipReveal: true });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'mouseEnterMarkupCell': {\n\t\t\t\t\tconst cell = this.notebookEditor.getCellById(data.cellId);\n\t\t\t\t\tif (cell instanceof MarkupCellViewModel) {\n\t\t\t\t\t\tcell.cellIsHovered = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'mouseLeaveMarkupCell': {\n\t\t\t\t\tconst cell = this.notebookEditor.getCellById(data.cellId);\n\t\t\t\t\tif (cell instanceof MarkupCellViewModel) {\n\t\t\t\t\t\tcell.cellIsHovered = false;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'cell-drag-start': {\n\t\t\t\t\tthis.notebookEditor.didStartDragMarkupCell(data.cellId, data);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'cell-drag': {\n\t\t\t\t\tthis.notebookEditor.didDragMarkupCell(data.cellId, data);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'cell-drop': {\n\t\t\t\t\tthis.notebookEditor.didDropMarkupCell(data.cellId, {\n\t\t\t\t\t\tdragOffsetY: data.dragOffsetY,\n\t\t\t\t\t\tctrlKey: data.ctrlKey,\n\t\t\t\t\t\taltKey: data.altKey,\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'cell-drag-end': {\n\t\t\t\t\tthis.notebookEditor.didEndDragMarkupCell(data.cellId);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'renderedMarkup': {\n\t\t\t\t\tconst cell = this.notebookEditor.getCellById(data.cellId);\n\t\t\t\t\tif (cell instanceof MarkupCellViewModel) {\n\t\t\t\t\t\tcell.renderedHtml = data.html;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._handleHighlightCodeBlock(data.codeBlocks);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'renderedCellOutput': {\n\t\t\t\t\tthis._handleHighlightCodeBlock(data.codeBlocks);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'outputResized': {\n\t\t\t\t\tthis.notebookEditor.didResizeOutput(data.cellId);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'getOutputItem': {\n\t\t\t\t\tconst resolvedResult = this.resolveOutputId(data.outputId);\n\t\t\t\t\tconst output = resolvedResult?.output.model.outputs.find(output => output.mime === data.mime);\n\n\t\t\t\t\tthis._sendMessageToWebview({\n\t\t\t\t\t\ttype: 'returnOutputItem',\n\t\t\t\t\t\trequestId: data.requestId,\n\t\t\t\t\t\toutput: output ? { mime: output.mime, valueBytes: output.data.buffer } : undefined,\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'logRendererDebugMessage': {\n\t\t\t\t\tthis._logRendererDebugMessage(`${data.message}${data.data ? ' ' + JSON.stringify(data.data, null, 4) : ''}`);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'notebookPerformanceMessage': {\n\t\t\t\t\tthis.notebookEditor.updatePerformanceMetadata(data.cellId, data.executionId, data.duration, data.rendererId);\n\t\t\t\t\tif (data.mimeType && data.outputSize && data.rendererId === 'vscode.builtin-renderer') {\n\t\t\t\t\t\tthis._sendPerformanceData(data.mimeType, data.outputSize, data.duration);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'outputInputFocus': {\n\t\t\t\t\tconst resolvedResult = this.resolveOutputId(data.id);\n\t\t\t\t\tif (resolvedResult) {\n\t\t\t\t\t\tconst latestCell = this.notebookEditor.getCellByInfo(resolvedResult.cellInfo);\n\t\t\t\t\t\tif (latestCell) {\n\t\t\t\t\t\t\tlatestCell.inputInOutputIsFocused = data.inputFocused;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.notebookEditor.didFocusOutputInputChange(data.inputFocused);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\treturn initializePromise.p;\n\t}\n\n\tprivate _sendPerformanceData(mimeType: string, outputSize: number, renderTime: number) {\n\t\ttype NotebookOutputRenderClassification = {\n\t\t\towner: 'amunger';\n\t\t\tcomment: 'Track performance data for output rendering';\n\t\t\tmimeType: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Presentation type of the output.' };\n\t\t\toutputSize: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Size of the output data buffer.'; isMeasurement: true };\n\t\t\trenderTime: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Time spent rendering output.'; isMeasurement: true };\n\t\t};\n\n\t\ttype NotebookOutputRenderEvent = {\n\t\t\tmimeType: string;\n\t\t\toutputSize: number;\n\t\t\trenderTime: number;\n\t\t};\n\n\t\tconst telemetryData = {\n\t\t\tmimeType,\n\t\t\toutputSize,\n\t\t\trenderTime\n\t\t};\n\n\t\tthis.telemetryService.publicLog2<NotebookOutputRenderEvent, NotebookOutputRenderClassification>('NotebookCellOutputRender', telemetryData);\n\t}\n\n\tprivate _handleNotebookCellResource(uri: URI) {\n\t\tconst notebookResource = uri.path.length > 0 ? uri : this.documentUri;\n\n\t\tconst lineMatch = /(?:^|&)line=([^&]+)/.exec(uri.query);\n\t\tlet editorOptions: ITextEditorOptions | undefined = undefined;\n\t\tif (lineMatch) {\n\t\t\tconst parsedLineNumber = parseInt(lineMatch[1], 10);\n\t\t\tif (!isNaN(parsedLineNumber)) {\n\t\t\t\tconst lineNumber = parsedLineNumber;\n\n\t\t\t\teditorOptions = {\n\t\t\t\t\tselection: { startLineNumber: lineNumber, startColumn: 1 }\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tconst executionMatch = /(?:^|&)execution_count=([^&]+)/.exec(uri.query);\n\t\tif (executionMatch) {\n\t\t\tconst executionCount = parseInt(executionMatch[1], 10);\n\t\t\tif (!isNaN(executionCount)) {\n\t\t\t\tconst notebookModel = this.notebookService.getNotebookTextModel(notebookResource);\n\t\t\t\t// multiple cells with the same execution count can exist if the kernel is restarted\n\t\t\t\t// so look for the most recently added cell with the matching execution count.\n\t\t\t\t// Somewhat more likely to be correct in notebooks, an much more likely for the interactive window\n\t\t\t\tconst cell = notebookModel?.cells.slice().reverse().find(cell => {\n\t\t\t\t\treturn cell.internalMetadata.executionOrder === executionCount;\n\t\t\t\t});\n\t\t\t\tif (cell?.uri) {\n\t\t\t\t\treturn this.openerService.open(cell.uri, {\n\t\t\t\t\t\tfromUserGesture: true,\n\t\t\t\t\t\tfromWorkspace: true,\n\t\t\t\t\t\teditorOptions: editorOptions\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// URLs built by the jupyter extension put the line query param in the fragment\n\t\t// They also have the cell fragment pre-calculated\n\t\tconst fragmentLineMatch = /\\?line=(\\d+)$/.exec(uri.fragment);\n\t\tif (fragmentLineMatch) {\n\t\t\tconst parsedLineNumber = parseInt(fragmentLineMatch[1], 10);\n\t\t\tif (!isNaN(parsedLineNumber)) {\n\t\t\t\tconst lineNumber = parsedLineNumber + 1;\n\t\t\t\tconst fragment = uri.fragment.substring(0, fragmentLineMatch.index);\n\n\t\t\t\t// open the uri with selection\n\t\t\t\tconst editorOptions: ITextEditorOptions = {\n\t\t\t\t\tselection: { startLineNumber: lineNumber, startColumn: 1, endLineNumber: lineNumber, endColumn: 1 }\n\t\t\t\t};\n\n\t\t\t\treturn this.openerService.open(notebookResource.with({ fragment }), {\n\t\t\t\t\tfromUserGesture: true,\n\t\t\t\t\tfromWorkspace: true,\n\t\t\t\t\teditorOptions: editorOptions\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn this.openerService.open(notebookResource, { fromUserGesture: true, fromWorkspace: true });\n\t}\n\n\tprivate async _handleResourceOpening(href: string) {\n\t\tlet linkToOpen: URI | undefined = undefined;\n\t\tlet fragment: string | undefined = undefined;\n\n\t\t// Separate out the fragment so that the subsequent calls\n\t\t// to URI.joinPath() don't URL encode it. This allows opening\n\t\t// links with both paths and fragments.\n\t\tconst hrefWithFragment = FRAGMENT_REGEX.exec(href);\n\t\tif (hrefWithFragment) {\n\t\t\thref = hrefWithFragment[1];\n\t\t\tfragment = hrefWithFragment[2];\n\t\t}\n\n\t\tif (href.startsWith('/')) {\n\t\t\tlinkToOpen = await this.pathService.fileURI(href);\n\t\t\tconst folders = this.workspaceContextService.getWorkspace().folders;\n\t\t\tif (folders.length) {\n\t\t\t\tlinkToOpen = linkToOpen.with({\n\t\t\t\t\tscheme: folders[0].uri.scheme,\n\t\t\t\t\tauthority: folders[0].uri.authority\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (href.startsWith('~')) {\n\t\t\tconst userHome = await this.pathService.userHome();\n\t\t\tif (userHome) {\n\t\t\t\tlinkToOpen = URI.joinPath(userHome, href.substring(2));\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.documentUri.scheme === Schemas.untitled) {\n\t\t\t\tconst folders = this.workspaceContextService.getWorkspace().folders;\n\t\t\t\tif (!folders.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlinkToOpen = URI.joinPath(folders[0].uri, href);\n\t\t\t} else {\n\t\t\t\t// Resolve relative to notebook document\n\t\t\t\tlinkToOpen = URI.joinPath(dirname(this.documentUri), href);\n\t\t\t}\n\t\t}\n\n\t\tif (linkToOpen) {\n\t\t\t// Re-attach fragment now that we have the full file path.\n\t\t\tif (fragment) {\n\t\t\t\tlinkToOpen = linkToOpen.with({ fragment });\n\t\t\t}\n\t\t\tthis._openUri(linkToOpen);\n\t\t}\n\t}\n\n\tprivate _openUri(uri: URI) {\n\t\tlet lineNumber: number | undefined = undefined;\n\t\tlet column: number | undefined = undefined;\n\t\tconst lineCol = LINE_COLUMN_REGEX.exec(uri.path);\n\t\tif (lineCol) {\n\t\t\turi = uri.with({\n\t\t\t\tpath: uri.path.slice(0, lineCol.index),\n\t\t\t\tfragment: `L${lineCol[0].slice(1)}`\n\t\t\t});\n\t\t\tlineNumber = parseInt(lineCol[1], 10);\n\t\t\tcolumn = parseInt(lineCol[2], 10);\n\t\t}\n\n\t\t//#region error renderer migration, remove once done\n\t\tconst lineMatch = LineQueryRegex.exec(uri.query);\n\t\tif (lineMatch) {\n\t\t\tconst parsedLineNumber = parseInt(lineMatch[1], 10);\n\t\t\tif (!isNaN(parsedLineNumber)) {\n\t\t\t\tlineNumber = parsedLineNumber + 1;\n\t\t\t\tcolumn = 1;\n\t\t\t\turi = uri.with({ fragment: `L${lineNumber}` });\n\t\t\t}\n\t\t}\n\n\t\turi = uri.with({\n\t\t\tquery: null\n\t\t});\n\t\t//#endregion\n\n\t\tlet match: { group: IEditorGroup; editor: EditorInput } | undefined = undefined;\n\n\t\tfor (const group of this.editorGroupService.groups) {\n\t\t\tconst editorInput = group.editors.find(editor => editor.resource && isEqual(editor.resource, uri, true));\n\t\t\tif (editorInput) {\n\t\t\t\tmatch = { group, editor: editorInput };\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (match) {\n\t\t\tconst selection: ITextEditorSelection | undefined = lineNumber !== undefined && column !== undefined ? { startLineNumber: lineNumber, startColumn: column } : undefined;\n\t\t\tconst textEditorOptions: ITextEditorOptions = { selection: selection };\n\t\t\tmatch.group.openEditor(match.editor, selection ? textEditorOptions : undefined);\n\t\t} else {\n\t\t\tthis.openerService.open(uri, { fromUserGesture: true, fromWorkspace: true });\n\t\t}\n\t}\n\n\tprivate _handleHighlightCodeBlock(codeBlocks: ReadonlyArray<ICodeBlockHighlightRequest>) {\n\t\tfor (const { id, value, lang } of codeBlocks) {\n\t\t\t// The language id may be a language aliases (e.g.js instead of javascript)\n\t\t\tconst languageId = this.languageService.getLanguageIdByLanguageName(lang);\n\t\t\tif (!languageId) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttokenizeToString(this.languageService, value, languageId).then((html) => {\n\t\t\t\tif (this._disposed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._sendMessageToWebview({\n\t\t\t\t\ttype: 'tokenizedCodeBlock',\n\t\t\t\t\thtml,\n\t\t\t\t\tcodeBlockId: id\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\tprivate async _onDidClickDataLink(event: IClickedDataUrlMessage): Promise<void> {\n\t\tif (typeof event.data !== 'string') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst [splitStart, splitData] = event.data.split(';base64,');\n\t\tif (!splitData || !splitStart) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst defaultDir = extname(this.documentUri) === '.interactive' ?\n\t\t\tthis.workspaceContextService.getWorkspace().folders[0]?.uri ?? await this.fileDialogService.defaultFilePath() :\n\t\t\tdirname(this.documentUri);\n\t\tlet defaultName: string;\n\t\tif (event.downloadName) {\n\t\t\tdefaultName = event.downloadName;\n\t\t} else {\n\t\t\tconst mimeType = splitStart.replace(/^data:/, '');\n\t\t\tconst candidateExtension = mimeType && getExtensionForMimeType(mimeType);\n\t\t\tdefaultName = candidateExtension ? `download${candidateExtension}` : 'download';\n\t\t}\n\n\t\tconst defaultUri = joinPath(defaultDir, defaultName);\n\t\tconst newFileUri = await this.fileDialogService.showSaveDialog({\n\t\t\tdefaultUri\n\t\t});\n\t\tif (!newFileUri) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst buff = decodeBase64(splitData);\n\t\tawait this.fileService.writeFile(newFileUri, buff);\n\t\tawait this.openerService.open(newFileUri);\n\t}\n\n\tprivate _createInset(webviewService: IWebviewService, content: string) {\n\t\tthis.localResourceRootsCache = this._getResourceRootsCache();\n\t\tconst webview = webviewService.createWebviewElement({\n\t\t\torigin: BackLayerWebView.getOriginStore(this.storageService).getOrigin(this.notebookViewType, undefined),\n\t\t\ttitle: nls.localize('webview title', \"Notebook webview content\"),\n\t\t\toptions: {\n\t\t\t\tpurpose: WebviewContentPurpose.NotebookRenderer,\n\t\t\t\tenableFindWidget: false,\n\t\t\t\ttransformCssVariables: transformWebviewThemeVars,\n\t\t\t},\n\t\t\tcontentOptions: {\n\t\t\t\tallowMultipleAPIAcquire: true,\n\t\t\t\tallowScripts: true,\n\t\t\t\tlocalResourceRoots: this.localResourceRootsCache,\n\t\t\t},\n\t\t\textension: undefined,\n\t\t\tprovidedViewType: 'notebook.output'\n\t\t});\n\n\t\twebview.setHtml(content);\n\t\twebview.setContextKeyService(this.contextKeyService);\n\t\treturn webview;\n\t}\n\n\tprivate _getResourceRootsCache(): URI[] {\n\t\tconst workspaceFolders = this.contextService.getWorkspace().folders.map(x => x.uri);\n\t\tconst notebookDir = this.getNotebookBaseUri();\n\t\treturn [\n\t\t\tthis.notebookService.getNotebookProviderResourceRoots(),\n\t\t\tthis.notebookService.getRenderers().map(x => dirname(x.entrypoint.path)),\n\t\t\t...Array.from(this.notebookService.getStaticPreloads(this.notebookViewType), x => [\n\t\t\t\tdirname(x.entrypoint),\n\t\t\t\t...x.localResourceRoots,\n\t\t\t]),\n\t\t\tworkspaceFolders,\n\t\t\tnotebookDir,\n\t\t\tthis.getBuiltinLocalResourceRoots()\n\t\t].flat();\n\t}\n\n\tprivate initializeWebViewState() {\n\t\tthis._preloadsCache.clear();\n\t\tif (this._currentKernel) {\n\t\t\tthis._updatePreloadsFromKernel(this._currentKernel);\n\t\t}\n\n\t\tfor (const [output, inset] of this.insetMapping.entries()) {\n\t\t\tthis._sendMessageToWebview({ ...inset.cachedCreation, initiallyHidden: this.hiddenInsetMapping.has(output) });\n\t\t}\n\n\t\tif (this.initializeMarkupPromise?.isFirstInit) {\n\t\t\t// On first run the contents have already been initialized so we don't need to init them again\n\t\t\t// no op\n\t\t} else {\n\t\t\tconst mdCells = [...this.markupPreviewMapping.values()];\n\t\t\tthis.markupPreviewMapping.clear();\n\t\t\tthis.initializeMarkup(mdCells);\n\t\t}\n\n\t\tthis._updateStyles();\n\t\tthis._updateOptions();\n\t}\n\n\tprivate shouldUpdateInset(cell: IGenericCellViewModel, output: ICellOutputViewModel, cellTop: number, outputOffset: number): boolean {\n\t\tif (this._disposed) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ('isOutputCollapsed' in cell && (cell as ICellViewModel).isOutputCollapsed) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.hiddenInsetMapping.has(output)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst outputCache = this.insetMapping.get(output);\n\t\tif (!outputCache) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (outputOffset === outputCache.cachedCreation.outputOffset && cellTop === outputCache.cachedCreation.cellTop) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tackHeight(updates: readonly IAckOutputHeight[]): void {\n\t\tthis._sendMessageToWebview({\n\t\t\ttype: 'ack-dimension',\n\t\t\tupdates\n\t\t});\n\t}\n\n\tupdateScrollTops(outputRequests: IDisplayOutputLayoutUpdateRequest[], markupPreviews: { id: string; top: number }[]) {\n\t\tif (this._disposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst widgets = coalesce(outputRequests.map((request): IContentWidgetTopRequest | undefined => {\n\t\t\tconst outputCache = this.insetMapping.get(request.output);\n\t\t\tif (!outputCache) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!request.forceDisplay && !this.shouldUpdateInset(request.cell, request.output, request.cellTop, request.outputOffset)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst id = outputCache.outputId;\n\t\t\toutputCache.cachedCreation.cellTop = request.cellTop;\n\t\t\toutputCache.cachedCreation.outputOffset = request.outputOffset;\n\t\t\tthis.hiddenInsetMapping.delete(request.output);\n\n\t\t\treturn {\n\t\t\t\tcellId: request.cell.id,\n\t\t\t\toutputId: id,\n\t\t\t\tcellTop: request.cellTop,\n\t\t\t\toutputOffset: request.outputOffset,\n\t\t\t\tforceDisplay: request.forceDisplay,\n\t\t\t};\n\t\t}));\n\n\t\tif (!widgets.length && !markupPreviews.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._sendMessageToWebview({\n\t\t\ttype: 'view-scroll',\n\t\t\twidgets: widgets,\n\t\t\tmarkupCells: markupPreviews,\n\t\t});\n\t}\n\n\tprivate async createMarkupPreview(initialization: IMarkupCellInitialization) {\n\t\tif (this._disposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.markupPreviewMapping.has(initialization.cellId)) {\n\t\t\tconsole.error('Trying to create markup preview that already exists');\n\t\t\treturn;\n\t\t}\n\n\t\tthis.markupPreviewMapping.set(initialization.cellId, initialization);\n\t\tthis._sendMessageToWebview({\n\t\t\ttype: 'createMarkupCell',\n\t\t\tcell: initialization\n\t\t});\n\t}\n\n\tasync showMarkupPreview(newContent: IMarkupCellInitialization) {\n\t\tif (this._disposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst entry = this.markupPreviewMapping.get(newContent.cellId);\n\t\tif (!entry) {\n\t\t\treturn this.createMarkupPreview(newContent);\n\t\t}\n\n\t\tconst sameContent = newContent.content === entry.content;\n\t\tconst sameMetadata = (equals(newContent.metadata, entry.metadata));\n\t\tif (!sameContent || !sameMetadata || !entry.visible) {\n\t\t\tthis._sendMessageToWebview({\n\t\t\t\ttype: 'showMarkupCell',\n\t\t\t\tid: newContent.cellId,\n\t\t\t\thandle: newContent.cellHandle,\n\t\t\t\t// If the content has not changed, we still want to make sure the\n\t\t\t\t// preview is visible but don't need to send anything over\n\t\t\t\tcontent: sameContent ? undefined : newContent.content,\n\t\t\t\ttop: newContent.offset,\n\t\t\t\tmetadata: sameMetadata ? undefined : newContent.metadata\n\t\t\t});\n\t\t}\n\t\tentry.metadata = newContent.metadata;\n\t\tentry.content = newContent.content;\n\t\tentry.offset = newContent.offset;\n\t\tentry.visible = true;\n\t}\n\n\tasync hideMarkupPreviews(cellIds: readonly string[]) {\n\t\tif (this._disposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst cellsToHide: string[] = [];\n\t\tfor (const cellId of cellIds) {\n\t\t\tconst entry = this.markupPreviewMapping.get(cellId);\n\t\t\tif (entry) {\n\t\t\t\tif (entry.visible) {\n\t\t\t\t\tcellsToHide.push(cellId);\n\t\t\t\t\tentry.visible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (cellsToHide.length) {\n\t\t\tthis._sendMessageToWebview({\n\t\t\t\ttype: 'hideMarkupCells',\n\t\t\t\tids: cellsToHide\n\t\t\t});\n\t\t}\n\t}\n\n\tasync unhideMarkupPreviews(cellIds: readonly string[]) {\n\t\tif (this._disposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst toUnhide: string[] = [];\n\t\tfor (const cellId of cellIds) {\n\t\t\tconst entry = this.markupPreviewMapping.get(cellId);\n\t\t\tif (entry) {\n\t\t\t\tif (!entry.visible) {\n\t\t\t\t\tentry.visible = true;\n\t\t\t\t\ttoUnhide.push(cellId);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.error(`Trying to unhide a preview that does not exist: ${cellId}`);\n\t\t\t}\n\t\t}\n\n\t\tthis._sendMessageToWebview({\n\t\t\ttype: 'unhideMarkupCells',\n\t\t\tids: toUnhide,\n\t\t});\n\t}\n\n\tasync deleteMarkupPreviews(cellIds: readonly string[]) {\n\t\tif (this._disposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const id of cellIds) {\n\t\t\tif (!this.markupPreviewMapping.has(id)) {\n\t\t\t\tconsole.error(`Trying to delete a preview that does not exist: ${id}`);\n\t\t\t}\n\t\t\tthis.markupPreviewMapping.delete(id);\n\t\t}\n\n\t\tif (cellIds.length) {\n\t\t\tthis._sendMessageToWebview({\n\t\t\t\ttype: 'deleteMarkupCell',\n\t\t\t\tids: cellIds\n\t\t\t});\n\t\t}\n\t}\n\n\tasync updateMarkupPreviewSelections(selectedCellsIds: string[]) {\n\t\tif (this._disposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._sendMessageToWebview({\n\t\t\ttype: 'updateSelectedMarkupCells',\n\t\t\tselectedCellIds: selectedCellsIds.filter(id => this.markupPreviewMapping.has(id)),\n\t\t});\n\t}\n\n\tasync initializeMarkup(cells: readonly IMarkupCellInitialization[]): Promise<void> {\n\t\tif (this._disposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.initializeMarkupPromise?.p.complete();\n\t\tconst requestId = UUID.generateUuid();\n\t\tthis.initializeMarkupPromise = { p: new DeferredPromise(), requestId, isFirstInit: this.firstInit };\n\n\t\tthis.firstInit = false;\n\n\t\tfor (const cell of cells) {\n\t\t\tthis.markupPreviewMapping.set(cell.cellId, cell);\n\t\t}\n\n\t\tthis._sendMessageToWebview({\n\t\t\ttype: 'initializeMarkup',\n\t\t\tcells,\n\t\t\trequestId,\n\t\t});\n\n\t\treturn this.initializeMarkupPromise.p.p;\n\t}\n\n\t/**\n\t * Validate if cached inset is out of date and require a rerender\n\t * Note that it doesn't account for output content change.\n\t */\n\tprivate _cachedInsetEqual(cachedInset: ICachedInset<T>, content: IInsetRenderOutput) {\n\t\tif (content.type === RenderOutputType.Extension) {\n\t\t\t// Use a new renderer\n\t\t\treturn cachedInset.renderer?.id === content.renderer.id;\n\t\t} else {\n\t\t\t// The new renderer is the default HTML renderer\n\t\t\treturn cachedInset.cachedCreation.type === 'html';\n\t\t}\n\t}\n\n\trequestCreateOutputWhenWebviewIdle(cellInfo: T, content: IInsetRenderOutput, cellTop: number, offset: number) {\n\t\tif (this._disposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.insetMapping.has(content.source)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.pendingWebviewIdleCreationRequest.has(content.source)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.pendingWebviewIdleInsetMapping.has(content.source)) {\n\t\t\t// handled in renderer process, waiting for webview to process it when idle\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pendingWebviewIdleCreationRequest.set(content.source, runWhenGlobalIdle(() => {\n\t\t\tconst { message, renderer, transfer: transferable } = this._createOutputCreationMessage(cellInfo, content, cellTop, offset, true, true);\n\t\t\tthis._sendMessageToWebview(message, transferable);\n\t\t\tthis.pendingWebviewIdleInsetMapping.set(content.source, { outputId: message.outputId, versionId: content.source.model.versionId, cellInfo: cellInfo, renderer, cachedCreation: message });\n\t\t\tthis.reversedPendingWebviewIdleInsetMapping.set(message.outputId, content.source);\n\t\t\tthis.pendingWebviewIdleCreationRequest.delete(content.source);\n\t\t}));\n\t}\n\n\tcreateOutput(cellInfo: T, content: IInsetRenderOutput, cellTop: number, offset: number): void {\n\t\tif (this._disposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst cachedInset = this.insetMapping.get(content.source);\n\n\t\t// we now request to render the output immediately, so we can remove the pending request\n\t\t// dispose the pending request in renderer process if it exists\n\t\tthis.pendingWebviewIdleCreationRequest.get(content.source)?.dispose();\n\t\tthis.pendingWebviewIdleCreationRequest.delete(content.source);\n\n\t\t// if request has already been sent out, we then remove it from the pending mapping\n\t\tthis.pendingWebviewIdleInsetMapping.delete(content.source);\n\t\tif (cachedInset) {\n\t\t\tthis.reversedPendingWebviewIdleInsetMapping.delete(cachedInset.outputId);\n\t\t}\n\n\t\tif (cachedInset && this._cachedInsetEqual(cachedInset, content)) {\n\t\t\tthis.hiddenInsetMapping.delete(content.source);\n\t\t\tthis._sendMessageToWebview({\n\t\t\t\ttype: 'showOutput',\n\t\t\t\tcellId: cachedInset.cellInfo.cellId,\n\t\t\t\toutputId: cachedInset.outputId,\n\t\t\t\tcellTop: cellTop,\n\t\t\t\toutputOffset: offset\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\t// create new output\n\t\tconst { message, renderer, transfer: transferable } = this._createOutputCreationMessage(cellInfo, content, cellTop, offset, false, false);\n\t\tthis._sendMessageToWebview(message, transferable);\n\t\tthis.insetMapping.set(content.source, { outputId: message.outputId, versionId: content.source.model.versionId, cellInfo: cellInfo, renderer, cachedCreation: message });\n\t\tthis.hiddenInsetMapping.delete(content.source);\n\t\tthis.reversedInsetMapping.set(message.outputId, content.source);\n\t}\n\n\tprivate createMetadata(output: ICellOutput, mimeType: string) {\n\t\tif (mimeType.startsWith('image')) {\n\t\t\tconst buffer = output.outputs.find(out => out.mime === 'text/plain')?.data.buffer;\n\t\t\tif (buffer?.length && buffer?.length > 0) {\n\t\t\t\tconst altText = new TextDecoder().decode(buffer);\n\t\t\t\treturn { ...output.metadata, vscode_altText: altText };\n\t\t\t}\n\t\t}\n\t\treturn output.metadata;\n\t}\n\n\tprivate _createOutputCreationMessage(cellInfo: T, content: IInsetRenderOutput, cellTop: number, offset: number, createOnIdle: boolean, initiallyHidden: boolean): { readonly message: ICreationRequestMessage; readonly renderer: INotebookRendererInfo | undefined; transfer: readonly ArrayBuffer[] } {\n\t\tconst messageBase = {\n\t\t\ttype: 'html',\n\t\t\texecutionId: cellInfo.executionId,\n\t\t\tcellId: cellInfo.cellId,\n\t\t\tcellTop: cellTop,\n\t\t\toutputOffset: offset,\n\t\t\tleft: 0,\n\t\t\trequiredPreloads: [],\n\t\t\tcreateOnIdle: createOnIdle\n\t\t} as const;\n\n\t\tconst transfer: ArrayBuffer[] = [];\n\n\t\tlet message: ICreationRequestMessage;\n\t\tlet renderer: INotebookRendererInfo | undefined;\n\t\tif (content.type === RenderOutputType.Extension) {\n\t\t\tconst output = content.source.model;\n\t\t\trenderer = content.renderer;\n\t\t\tconst first = output.outputs.find(op => op.mime === content.mimeType)!;\n\t\t\tconst metadata = this.createMetadata(output, content.mimeType);\n\t\t\tconst valueBytes = copyBufferIfNeeded(first.data.buffer, transfer);\n\t\t\tmessage = {\n\t\t\t\t...messageBase,\n\t\t\t\toutputId: output.outputId,\n\t\t\t\trendererId: content.renderer.id,\n\t\t\t\tcontent: {\n\t\t\t\t\ttype: RenderOutputType.Extension,\n\t\t\t\t\toutputId: output.outputId,\n\t\t\t\t\tmetadata: metadata,\n\t\t\t\t\toutput: {\n\t\t\t\t\t\tmime: first.mime,\n\t\t\t\t\t\tvalueBytes,\n\t\t\t\t\t},\n\t\t\t\t\tallOutputs: output.outputs.map(output => ({ mime: output.mime })),\n\t\t\t\t},\n\t\t\t\tinitiallyHidden: initiallyHidden\n\t\t\t};\n\t\t} else {\n\t\t\tmessage = {\n\t\t\t\t...messageBase,\n\t\t\t\toutputId: UUID.generateUuid(),\n\t\t\t\tcontent: {\n\t\t\t\t\ttype: content.type,\n\t\t\t\t\thtmlContent: content.htmlContent,\n\t\t\t\t},\n\t\t\t\tinitiallyHidden: initiallyHidden\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tmessage,\n\t\t\trenderer,\n\t\t\ttransfer,\n\t\t};\n\t}\n\n\tupdateOutput(cellInfo: T, content: IInsetRenderOutput, cellTop: number, offset: number): void {\n\t\tif (this._disposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.insetMapping.has(content.source)) {\n\t\t\tthis.createOutput(cellInfo, content, cellTop, offset);\n\t\t\treturn;\n\t\t}\n\n\t\tconst outputCache = this.insetMapping.get(content.source)!;\n\n\t\tif (outputCache.versionId === content.source.model.versionId) {\n\t\t\t// already sent this output version to the renderer\n\t\t\treturn;\n\t\t}\n\n\t\tthis.hiddenInsetMapping.delete(content.source);\n\t\tlet updatedContent: ICreationContent | undefined = undefined;\n\n\t\tconst transfer: ArrayBuffer[] = [];\n\t\tif (content.type === RenderOutputType.Extension) {\n\t\t\tconst output = content.source.model;\n\t\t\tconst firstBuffer = output.outputs.find(op => op.mime === content.mimeType)!;\n\t\t\tconst appenededData = output.appendedSinceVersion(outputCache.versionId, content.mimeType);\n\t\t\tconst appended = appenededData ? { valueBytes: appenededData.buffer, previousVersion: outputCache.versionId } : undefined;\n\n\t\t\tconst valueBytes = copyBufferIfNeeded(firstBuffer.data.buffer, transfer);\n\t\t\tupdatedContent = {\n\t\t\t\ttype: RenderOutputType.Extension,\n\t\t\t\toutputId: outputCache.outputId,\n\t\t\t\tmetadata: output.metadata,\n\t\t\t\toutput: {\n\t\t\t\t\tmime: content.mimeType,\n\t\t\t\t\tvalueBytes,\n\t\t\t\t\tappended: appended\n\t\t\t\t},\n\t\t\t\tallOutputs: output.outputs.map(output => ({ mime: output.mime }))\n\t\t\t};\n\t\t}\n\n\t\tthis._sendMessageToWebview({\n\t\t\ttype: 'showOutput',\n\t\t\tcellId: outputCache.cellInfo.cellId,\n\t\t\toutputId: outputCache.outputId,\n\t\t\tcellTop: cellTop,\n\t\t\toutputOffset: offset,\n\t\t\tcontent: updatedContent\n\t\t}, transfer);\n\n\t\toutputCache.versionId = content.source.model.versionId;\n\t\treturn;\n\t}\n\n\tasync copyImage(output: ICellOutputViewModel): Promise<void> {\n\t\tthis._sendMessageToWebview({\n\t\t\ttype: 'copyImage',\n\t\t\toutputId: output.model.outputId,\n\t\t\taltOutputId: output.model.alternativeOutputId\n\t\t});\n\t}\n\n\tremoveInsets(outputs: readonly ICellOutputViewModel[]): void {\n\t\tif (this._disposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const output of outputs) {\n\t\t\tconst outputCache = this.insetMapping.get(output);\n\t\t\tif (!outputCache) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst id = outputCache.outputId;\n\n\t\t\tthis._sendMessageToWebview({\n\t\t\t\ttype: 'clearOutput',\n\t\t\t\trendererId: outputCache.cachedCreation.rendererId,\n\t\t\t\tcellUri: outputCache.cellInfo.cellUri.toString(),\n\t\t\t\toutputId: id,\n\t\t\t\tcellId: outputCache.cellInfo.cellId\n\t\t\t});\n\t\t\tthis.insetMapping.delete(output);\n\t\t\tthis.pendingWebviewIdleCreationRequest.get(output)?.dispose();\n\t\t\tthis.pendingWebviewIdleCreationRequest.delete(output);\n\t\t\tthis.pendingWebviewIdleInsetMapping.delete(output);\n\t\t\tthis.reversedPendingWebviewIdleInsetMapping.delete(id);\n\t\t\tthis.reversedInsetMapping.delete(id);\n\t\t}\n\t}\n\n\thideInset(output: ICellOutputViewModel): void {\n\t\tif (this._disposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst outputCache = this.insetMapping.get(output);\n\t\tif (!outputCache) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.hiddenInsetMapping.add(output);\n\n\t\tthis._sendMessageToWebview({\n\t\t\ttype: 'hideOutput',\n\t\t\toutputId: outputCache.outputId,\n\t\t\tcellId: outputCache.cellInfo.cellId,\n\t\t});\n\t}\n\n\tfocusWebview() {\n\t\tif (this._disposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.webview?.focus();\n\t}\n\n\tselectOutputContents(cell: ICellViewModel) {\n\t\tif (this._disposed) {\n\t\t\treturn;\n\t\t}\n\t\tconst output = cell.outputsViewModels.find(o => o.model.outputId === cell.focusedOutputId);\n\t\tconst outputId = output ? this.insetMapping.get(output)?.outputId : undefined;\n\t\tthis._sendMessageToWebview({\n\t\t\ttype: 'select-output-contents',\n\t\t\tcellOrOutputId: outputId || cell.id\n\t\t});\n\t}\n\n\tselectInputContents(cell: ICellViewModel) {\n\t\tif (this._disposed) {\n\t\t\treturn;\n\t\t}\n\t\tconst output = cell.outputsViewModels.find(o => o.model.outputId === cell.focusedOutputId);\n\t\tconst outputId = output ? this.insetMapping.get(output)?.outputId : undefined;\n\t\tthis._sendMessageToWebview({\n\t\t\ttype: 'select-input-contents',\n\t\t\tcellOrOutputId: outputId || cell.id\n\t\t});\n\t}\n\n\tfocusOutput(cellOrOutputId: string, alternateId: string | undefined, viewFocused: boolean) {\n\t\tif (this._disposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!viewFocused) {\n\t\t\tthis.webview?.focus();\n\t\t}\n\n\t\tthis._sendMessageToWebview({\n\t\t\ttype: 'focus-output',\n\t\t\tcellOrOutputId: cellOrOutputId,\n\t\t\talternateId: alternateId\n\t\t});\n\t}\n\n\tblurOutput() {\n\t\tif (this._disposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._sendMessageToWebview({\n\t\t\ttype: 'blur-output'\n\t\t});\n\t}\n\n\tasync find(query: string, options: { wholeWord?: boolean; caseSensitive?: boolean; includeMarkup: boolean; includeOutput: boolean; shouldGetSearchPreviewInfo: boolean; ownerID: string; findIds: string[] }): Promise<IFindMatch[]> {\n\t\tif (query === '') {\n\t\t\tthis._sendMessageToWebview({\n\t\t\t\ttype: 'findStop',\n\t\t\t\townerID: options.ownerID\n\t\t\t});\n\t\t\treturn [];\n\t\t}\n\n\t\tconst p = new Promise<IFindMatch[]>(resolve => {\n\t\t\tconst sub = this.webview?.onMessage(e => {\n\t\t\t\tif (e.message.type === 'didFind') {\n\t\t\t\t\tresolve(e.message.matches);\n\t\t\t\t\tsub?.dispose();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tthis._sendMessageToWebview({\n\t\t\ttype: 'find',\n\t\t\tquery: query,\n\t\t\toptions\n\t\t});\n\n\t\tconst ret = await p;\n\t\treturn ret;\n\t}\n\n\tfindStop(ownerID: string) {\n\t\tthis._sendMessageToWebview({\n\t\t\ttype: 'findStop',\n\t\t\townerID\n\t\t});\n\t}\n\n\tasync findHighlightCurrent(index: number, ownerID: string): Promise<number> {\n\t\tconst p = new Promise<number>(resolve => {\n\t\t\tconst sub = this.webview?.onMessage(e => {\n\t\t\t\tif (e.message.type === 'didFindHighlightCurrent') {\n\t\t\t\t\tresolve(e.message.offset);\n\t\t\t\t\tsub?.dispose();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tthis._sendMessageToWebview({\n\t\t\ttype: 'findHighlightCurrent',\n\t\t\tindex,\n\t\t\townerID\n\t\t});\n\n\t\tconst ret = await p;\n\t\treturn ret;\n\t}\n\n\tasync findUnHighlightCurrent(index: number, ownerID: string): Promise<void> {\n\t\tthis._sendMessageToWebview({\n\t\t\ttype: 'findUnHighlightCurrent',\n\t\t\tindex,\n\t\t\townerID\n\t\t});\n\t}\n\n\n\tdeltaCellContainerClassNames(cellId: string, added: string[], removed: string[]) {\n\t\tthis._sendMessageToWebview({\n\t\t\ttype: 'decorations',\n\t\t\tcellId,\n\t\t\taddedClassNames: added,\n\t\t\tremovedClassNames: removed\n\t\t});\n\n\t}\n\n\tupdateOutputRenderers() {\n\t\tif (!this.webview) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst renderersData = this.getRendererData();\n\t\tthis.localResourceRootsCache = this._getResourceRootsCache();\n\t\tconst mixedResourceRoots = [\n\t\t\t...(this.localResourceRootsCache || []),\n\t\t\t...(this._currentKernel ? [this._currentKernel.localResourceRoot] : []),\n\t\t];\n\n\t\tthis.webview.localResourcesRoot = mixedResourceRoots;\n\t\tthis._sendMessageToWebview({\n\t\t\ttype: 'updateRenderers',\n\t\t\trendererData: renderersData\n\t\t});\n\t}\n\n\tasync updateKernelPreloads(kernel: INotebookKernel | undefined) {\n\t\tif (this._disposed || kernel === this._currentKernel) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst previousKernel = this._currentKernel;\n\t\tthis._currentKernel = kernel;\n\n\t\tif (previousKernel && previousKernel.preloadUris.length > 0) {\n\t\t\tthis.webview?.reload(); // preloads will be restored after reload\n\t\t} else if (kernel) {\n\t\t\tthis._updatePreloadsFromKernel(kernel);\n\t\t}\n\t}\n\n\tprivate _updatePreloadsFromKernel(kernel: INotebookKernel) {\n\t\tconst resources: IControllerPreload[] = [];\n\t\tfor (const preload of kernel.preloadUris) {\n\t\t\tconst uri = this.environmentService.isExtensionDevelopment && (preload.scheme === 'http' || preload.scheme === 'https')\n\t\t\t\t? preload : this.asWebviewUri(preload, undefined);\n\n\t\t\tif (!this._preloadsCache.has(uri.toString())) {\n\t\t\t\tresources.push({ uri: uri.toString(), originalUri: preload.toString() });\n\t\t\t\tthis._preloadsCache.add(uri.toString());\n\t\t\t}\n\t\t}\n\n\t\tif (!resources.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._updatePreloads(resources);\n\t}\n\n\tprivate _updatePreloads(resources: IControllerPreload[]) {\n\t\tif (!this.webview) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst mixedResourceRoots = [\n\t\t\t...(this.localResourceRootsCache || []),\n\t\t\t...(this._currentKernel ? [this._currentKernel.localResourceRoot] : []),\n\t\t];\n\n\t\tthis.webview.localResourcesRoot = mixedResourceRoots;\n\n\t\tthis._sendMessageToWebview({\n\t\t\ttype: 'preload',\n\t\t\tresources: resources,\n\t\t});\n\t}\n\n\tprivate _sendMessageToWebview(message: ToWebviewMessage, transfer?: readonly ArrayBuffer[]) {\n\t\tif (this._disposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.webview?.postMessage(message, transfer);\n\t}\n\n\toverride dispose() {\n\t\tthis._disposed = true;\n\t\tthis.webview?.dispose();\n\t\tthis.webview = undefined;\n\t\tthis.notebookEditor = null!;\n\t\tthis.insetMapping.clear();\n\t\tthis.pendingWebviewIdleCreationRequest.clear();\n\t\tsuper.dispose();\n\t}\n}\n\nfunction copyBufferIfNeeded(buffer: Uint8Array, transfer: ArrayBuffer[]): Uint8Array {\n\tif (buffer.byteLength === buffer.buffer.byteLength) {\n\t\t// No copy needed but we can't transfer either\n\t\treturn buffer;\n\t} else {\n\t\t// The buffer is smaller than its backing array buffer.\n\t\t// Create a copy to avoid sending the entire array buffer.\n\t\tconst valueBytes = new Uint8Array(buffer);\n\t\ttransfer.push(valueBytes.buffer);\n\t\treturn valueBytes;\n\t}\n}\n\nfunction getTokenizationCss() {\n\tconst colorMap = TokenizationRegistry.getColorMap();\n\tconst tokenizationCss = colorMap ? generateTokensCSSForColorMap(colorMap) : '';\n\treturn tokenizationCss;\n}\n\nfunction tryDecodeURIComponent(uri: string) {\n\ttry {\n\t\treturn decodeURIComponent(uri);\n\t} catch {\n\t\treturn uri;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["output", "cell", "editorOptions"]
}
