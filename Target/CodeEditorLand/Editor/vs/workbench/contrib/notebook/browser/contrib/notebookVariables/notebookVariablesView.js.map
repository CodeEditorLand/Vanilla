{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/notebookVariables/notebookVariablesView.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { ITreeContextMenuEvent } from \"../../../../../../base/browser/ui/tree/tree.js\";\nimport type { IAction } from \"../../../../../../base/common/actions.js\";\nimport { RunOnceScheduler } from \"../../../../../../base/common/async.js\";\nimport type { URI } from \"../../../../../../base/common/uri.js\";\nimport * as nls from \"../../../../../../nls.js\";\nimport type { ILocalizedString } from \"../../../../../../platform/action/common/action.js\";\nimport { createAndFillInContextMenuActions } from \"../../../../../../platform/actions/browser/menuEntryActionViewItem.js\";\nimport {\n\tIMenuService,\n\tMenuId,\n} from \"../../../../../../platform/actions/common/actions.js\";\nimport { ICommandService } from \"../../../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../../../platform/configuration/common/configuration.js\";\nimport { IContextKeyService } from \"../../../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextMenuService } from \"../../../../../../platform/contextview/browser/contextView.js\";\nimport { IHoverService } from \"../../../../../../platform/hover/browser/hover.js\";\n\nimport { IInstantiationService } from \"../../../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../../../platform/keybinding/common/keybinding.js\";\nimport { WorkbenchAsyncDataTree } from \"../../../../../../platform/list/browser/listService.js\";\nimport { IOpenerService } from \"../../../../../../platform/opener/common/opener.js\";\nimport { IQuickInputService } from \"../../../../../../platform/quickinput/common/quickInput.js\";\nimport { ITelemetryService } from \"../../../../../../platform/telemetry/common/telemetry.js\";\nimport { IThemeService } from \"../../../../../../platform/theme/common/themeService.js\";\nimport {\n\ttype IViewPaneOptions,\n\tViewPane,\n} from \"../../../../../browser/parts/views/viewPane.js\";\nimport { IViewDescriptorService } from \"../../../../../common/views.js\";\nimport { IEditorService } from \"../../../../../services/editor/common/editorService.js\";\nimport {\n\tCONTEXT_VARIABLE_EXTENSIONID,\n\tCONTEXT_VARIABLE_INTERFACES,\n\tCONTEXT_VARIABLE_LANGUAGE,\n\tCONTEXT_VARIABLE_NAME,\n\tCONTEXT_VARIABLE_TYPE,\n\tCONTEXT_VARIABLE_VALUE,\n} from \"../../../../debug/common/debug.js\";\nimport type { NotebookTextModel } from \"../../../common/model/notebookTextModel.js\";\nimport {\n\ttype ICellExecutionStateChangedEvent,\n\ttype IExecutionStateChangedEvent,\n\tINotebookExecutionStateService,\n} from \"../../../common/notebookExecutionStateService.js\";\nimport { INotebookKernelService } from \"../../../common/notebookKernelService.js\";\nimport { getNotebookEditorFromEditorPane } from \"../../notebookBrowser.js\";\nimport {\n\ttype INotebookScope,\n\ttype INotebookVariableElement,\n\tNotebookVariableDataSource,\n} from \"./notebookVariablesDataSource.js\";\nimport {\n\tNotebookVariableAccessibilityProvider,\n\tNotebookVariableRenderer,\n\tNotebookVariablesDelegate,\n} from \"./notebookVariablesTree.js\";\n\nexport type contextMenuArg = {\n\tsource: string;\n\tname: string;\n\ttype?: string;\n\tvalue?: string;\n\texpression?: string;\n\tlanguage?: string;\n\textensionId?: string;\n};\n\nexport class NotebookVariablesView extends ViewPane {\n\tstatic readonly ID = \"notebookVariablesView\";\n\tstatic readonly TITLE: ILocalizedString = nls.localize2(\n\t\t\"notebook.notebookVariables\",\n\t\t\"Notebook Variables\",\n\t);\n\n\tprivate tree:\n\t\t| WorkbenchAsyncDataTree<INotebookScope, INotebookVariableElement>\n\t\t| undefined;\n\tprivate activeNotebook: NotebookTextModel | undefined;\n\tprivate readonly dataSource: NotebookVariableDataSource;\n\n\tprivate updateScheduler: RunOnceScheduler;\n\n\tconstructor(\n\t\toptions: IViewPaneOptions,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@INotebookKernelService private readonly notebookKernelService: INotebookKernelService,\n\t\t@INotebookExecutionStateService private readonly notebookExecutionStateService: INotebookExecutionStateService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IQuickInputService protected quickInputService: IQuickInputService,\n\t\t@ICommandService protected commandService: ICommandService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IMenuService private readonly menuService: IMenuService\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService, hoverService);\n\n\t\tthis._register(this.editorService.onDidActiveEditorChange(this.handleActiveEditorChange.bind(this)));\n\t\tthis._register(this.notebookKernelService.onDidNotebookVariablesUpdate(this.handleVariablesChanged.bind(this)));\n\t\tthis._register(this.notebookExecutionStateService.onDidChangeExecution(this.handleExecutionStateChange.bind(this)));\n\n\t\tthis.setActiveNotebook();\n\n\t\tthis.dataSource = new NotebookVariableDataSource(this.notebookKernelService);\n\t\tthis.updateScheduler = new RunOnceScheduler(() => this.tree?.updateChildren(), 100);\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\t\tthis.element.classList.add(\"debug-pane\");\n\n\t\tthis.tree = <\n\t\t\tWorkbenchAsyncDataTree<INotebookScope, INotebookVariableElement>\n\t\t>this.instantiationService.createInstance(\n\t\t\tWorkbenchAsyncDataTree,\n\t\t\t\"notebookVariablesTree\",\n\t\t\tcontainer,\n\t\t\tnew NotebookVariablesDelegate(),\n\t\t\t[\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tNotebookVariableRenderer,\n\t\t\t\t),\n\t\t\t],\n\t\t\tthis.dataSource,\n\t\t\t{\n\t\t\t\taccessibilityProvider:\n\t\t\t\t\tnew NotebookVariableAccessibilityProvider(),\n\t\t\t\tidentityProvider: {\n\t\t\t\t\tgetId: (e: INotebookVariableElement) => e.id,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tthis.tree.layout();\n\t\tif (this.activeNotebook) {\n\t\t\tthis.tree.setInput({ kind: \"root\", notebook: this.activeNotebook });\n\t\t}\n\n\t\tthis._register(this.tree.onContextMenu((e) => this.onContextMenu(e)));\n\t}\n\n\tprivate onContextMenu(\n\t\te: ITreeContextMenuEvent<INotebookVariableElement>,\n\t): any {\n\t\tif (!e.element) {\n\t\t\treturn;\n\t\t}\n\t\tconst element = e.element;\n\n\t\tconst arg: contextMenuArg = {\n\t\t\tsource: element.notebook.uri.toString(),\n\t\t\tname: element.name,\n\t\t\tvalue: element.value,\n\t\t\ttype: element.type,\n\t\t\texpression: element.expression,\n\t\t\tlanguage: element.language,\n\t\t\textensionId: element.extensionId,\n\t\t};\n\t\tconst actions: IAction[] = [];\n\n\t\tconst overlayedContext = this.contextKeyService.createOverlay([\n\t\t\t[CONTEXT_VARIABLE_NAME.key, element.name],\n\t\t\t[CONTEXT_VARIABLE_VALUE.key, element.value],\n\t\t\t[CONTEXT_VARIABLE_TYPE.key, element.type],\n\t\t\t[CONTEXT_VARIABLE_INTERFACES.key, element.interfaces],\n\t\t\t[CONTEXT_VARIABLE_LANGUAGE.key, element.language],\n\t\t\t[CONTEXT_VARIABLE_EXTENSIONID.key, element.extensionId],\n\t\t]);\n\t\tconst menu = this.menuService.getMenuActions(\n\t\t\tMenuId.NotebookVariablesContext,\n\t\t\toverlayedContext,\n\t\t\t{ arg, shouldForwardArgs: true },\n\t\t);\n\t\tcreateAndFillInContextMenuActions(menu, actions);\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => e.anchor,\n\t\t\tgetActions: () => actions,\n\t\t});\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\t\tthis.tree?.layout(height, width);\n\t}\n\n\tprivate setActiveNotebook() {\n\t\tconst current = this.activeNotebook;\n\t\tconst activeEditorPane = this.editorService.activeEditorPane;\n\t\tif (\n\t\t\tactiveEditorPane?.getId() === \"workbench.editor.notebook\" ||\n\t\t\tactiveEditorPane?.getId() === \"workbench.editor.interactive\"\n\t\t) {\n\t\t\tconst notebookDocument =\n\t\t\t\tgetNotebookEditorFromEditorPane(\n\t\t\t\t\tactiveEditorPane,\n\t\t\t\t)?.getViewModel()?.notebookDocument;\n\t\t\tthis.activeNotebook = notebookDocument;\n\t\t}\n\n\t\treturn current !== this.activeNotebook;\n\t}\n\n\tprivate handleActiveEditorChange() {\n\t\tif (this.setActiveNotebook() && this.activeNotebook) {\n\t\t\tthis.tree?.setInput({\n\t\t\t\tkind: \"root\",\n\t\t\t\tnotebook: this.activeNotebook,\n\t\t\t});\n\t\t\tthis.updateScheduler.schedule();\n\t\t}\n\t}\n\n\tprivate handleExecutionStateChange(\n\t\tevent: ICellExecutionStateChangedEvent | IExecutionStateChangedEvent,\n\t) {\n\t\tif (this.activeNotebook) {\n\t\t\tif (event.affectsNotebook(this.activeNotebook.uri)) {\n\t\t\t\t// new execution state means either new variables or the kernel is busy so we shouldn't ask\n\t\t\t\tthis.dataSource.cancel();\n\n\t\t\t\t// changed === undefined -> excecution ended\n\t\t\t\tif (event.changed === undefined) {\n\t\t\t\t\tthis.updateScheduler.schedule();\n\t\t\t\t} else {\n\t\t\t\t\tthis.updateScheduler.cancel();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate handleVariablesChanged(notebookUri: URI) {\n\t\tif (\n\t\t\tthis.activeNotebook &&\n\t\t\tnotebookUri.toString() === this.activeNotebook.uri.toString()\n\t\t) {\n\t\t\tthis.tree?.setInput({\n\t\t\t\tkind: \"root\",\n\t\t\t\tnotebook: this.activeNotebook,\n\t\t\t});\n\t\t\tthis.updateScheduler.schedule();\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
