{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/controller/chat/notebookChatContext.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../../../../nls.js';\nimport { MenuId } from '../../../../../../platform/actions/common/actions.js';\nimport { RawContextKey } from '../../../../../../platform/contextkey/common/contextkey.js';\n\nexport const CTX_NOTEBOOK_CELL_CHAT_FOCUSED = new RawContextKey<boolean>('notebookCellChatFocused', false, localize('notebookCellChatFocused', \"Whether the cell chat editor is focused\"));\nexport const CTX_NOTEBOOK_CHAT_HAS_ACTIVE_REQUEST = new RawContextKey<boolean>('notebookChatHasActiveRequest', false, localize('notebookChatHasActiveRequest', \"Whether the cell chat editor has an active request\"));\nexport const CTX_NOTEBOOK_CHAT_USER_DID_EDIT = new RawContextKey<boolean>('notebookChatUserDidEdit', false, localize('notebookChatUserDidEdit', \"Whether the user did changes ontop of the notebook cell chat\"));\nexport const CTX_NOTEBOOK_CHAT_OUTER_FOCUS_POSITION = new RawContextKey<'above' | 'below' | ''>('notebookChatOuterFocusPosition', '', localize('notebookChatOuterFocusPosition', \"Whether the focus of the notebook editor is above or below the cell chat\"));\n\nexport const MENU_CELL_CHAT_INPUT = MenuId.for('cellChatInput');\nexport const MENU_CELL_CHAT_WIDGET = MenuId.for('cellChatWidget');\nexport const MENU_CELL_CHAT_WIDGET_STATUS = MenuId.for('cellChatWidget.status');\nexport const MENU_CELL_CHAT_WIDGET_FEEDBACK = MenuId.for('cellChatWidget.feedback');\nexport const MENU_CELL_CHAT_WIDGET_TOOLBAR = MenuId.for('cellChatWidget.toolbar');\n\nexport const CTX_NOTEBOOK_CHAT_HAS_AGENT = new RawContextKey<boolean>('notebookChatAgentRegistered', false, localize('notebookChatAgentRegistered', \"Whether a chat agent for notebook is registered\"));\n"],
  "mappings": "AAKA,SAAS,gBAAgB;AACzB,SAAS,cAAc;AACvB,SAAS,qBAAqB;AAEvB,MAAM,iCAAiC,IAAI,cAAuB,2BAA2B,OAAO,SAAS,2BAA2B,yCAAyC,CAAC;AAClL,MAAM,uCAAuC,IAAI,cAAuB,gCAAgC,OAAO,SAAS,gCAAgC,oDAAoD,CAAC;AAC7M,MAAM,kCAAkC,IAAI,cAAuB,2BAA2B,OAAO,SAAS,2BAA2B,8DAA8D,CAAC;AACxM,MAAM,yCAAyC,IAAI,cAAsC,kCAAkC,IAAI,SAAS,kCAAkC,0EAA0E,CAAC;AAErP,MAAM,uBAAuB,OAAO,IAAI,eAAe;AACvD,MAAM,wBAAwB,OAAO,IAAI,gBAAgB;AACzD,MAAM,+BAA+B,OAAO,IAAI,uBAAuB;AACvE,MAAM,iCAAiC,OAAO,IAAI,yBAAyB;AAC3E,MAAM,gCAAgC,OAAO,IAAI,wBAAwB;AAEzE,MAAM,8BAA8B,IAAI,cAAuB,+BAA+B,OAAO,SAAS,+BAA+B,iDAAiD,CAAC;",
  "names": []
}
