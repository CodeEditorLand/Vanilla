{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/controller/chat/notebookChatContext.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from \"../../../../../../nls.js\";\nimport { MenuId } from \"../../../../../../platform/actions/common/actions.js\";\nimport { RawContextKey } from \"../../../../../../platform/contextkey/common/contextkey.js\";\n\nexport const CTX_NOTEBOOK_CELL_CHAT_FOCUSED = new RawContextKey<boolean>(\n\t\"notebookCellChatFocused\",\n\tfalse,\n\tlocalize(\n\t\t\"notebookCellChatFocused\",\n\t\t\"Whether the cell chat editor is focused\",\n\t),\n);\nexport const CTX_NOTEBOOK_CHAT_HAS_ACTIVE_REQUEST = new RawContextKey<boolean>(\n\t\"notebookChatHasActiveRequest\",\n\tfalse,\n\tlocalize(\n\t\t\"notebookChatHasActiveRequest\",\n\t\t\"Whether the cell chat editor has an active request\",\n\t),\n);\nexport const CTX_NOTEBOOK_CHAT_USER_DID_EDIT = new RawContextKey<boolean>(\n\t\"notebookChatUserDidEdit\",\n\tfalse,\n\tlocalize(\n\t\t\"notebookChatUserDidEdit\",\n\t\t\"Whether the user did changes ontop of the notebook cell chat\",\n\t),\n);\nexport const CTX_NOTEBOOK_CHAT_OUTER_FOCUS_POSITION = new RawContextKey<\n\t\"above\" | \"below\" | \"\"\n>(\n\t\"notebookChatOuterFocusPosition\",\n\t\"\",\n\tlocalize(\n\t\t\"notebookChatOuterFocusPosition\",\n\t\t\"Whether the focus of the notebook editor is above or below the cell chat\",\n\t),\n);\n\nexport const MENU_CELL_CHAT_INPUT = MenuId.for(\"cellChatInput\");\nexport const MENU_CELL_CHAT_WIDGET = MenuId.for(\"cellChatWidget\");\nexport const MENU_CELL_CHAT_WIDGET_STATUS = MenuId.for(\"cellChatWidget.status\");\nexport const MENU_CELL_CHAT_WIDGET_FEEDBACK = MenuId.for(\n\t\"cellChatWidget.feedback\",\n);\nexport const MENU_CELL_CHAT_WIDGET_TOOLBAR = MenuId.for(\n\t\"cellChatWidget.toolbar\",\n);\n\nexport const CTX_NOTEBOOK_CHAT_HAS_AGENT = new RawContextKey<boolean>(\n\t\"notebookChatAgentRegistered\",\n\tfalse,\n\tlocalize(\n\t\t\"notebookChatAgentRegistered\",\n\t\t\"Whether a chat agent for notebook is registered\",\n\t),\n);\n"],
  "mappings": "AAKA,SAAS,gBAAgB;AACzB,SAAS,cAAc;AACvB,SAAS,qBAAqB;AAEvB,MAAM,iCAAiC,IAAI;AAAA,EACjD;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,uCAAuC,IAAI;AAAA,EACvD;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,kCAAkC,IAAI;AAAA,EAClD;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,yCAAyC,IAAI;AAAA,EAGzD;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AAEO,MAAM,uBAAuB,OAAO,IAAI,eAAe;AACvD,MAAM,wBAAwB,OAAO,IAAI,gBAAgB;AACzD,MAAM,+BAA+B,OAAO,IAAI,uBAAuB;AACvE,MAAM,iCAAiC,OAAO;AAAA,EACpD;AACD;AACO,MAAM,gCAAgC,OAAO;AAAA,EACnD;AACD;AAEO,MAAM,8BAA8B,IAAI;AAAA,EAC9C;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;",
  "names": []
}
