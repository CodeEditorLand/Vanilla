var g=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var I=(s,e,o,t)=>{for(var i=t>1?void 0:t?v(e,o):e,r=s.length-1,n;r>=0;r--)(n=s[r])&&(i=(t?n(e,o,i):n(i))||i);return t&&i&&g(e,o,i),i},d=(s,e)=>(o,t)=>e(o,t,s);import{ToolBar as E}from"../../../../../../../vs/base/browser/ui/toolbar/toolbar.js";import{Action as M}from"../../../../../../../vs/base/common/actions.js";import{DisposableStore as S}from"../../../../../../../vs/base/common/lifecycle.js";import{MarshalledId as T}from"../../../../../../../vs/base/common/marshallingIds.js";import{EditorContextKeys as b}from"../../../../../../../vs/editor/common/editorContextKeys.js";import{localize as x}from"../../../../../../../vs/nls.js";import{DropdownWithPrimaryActionViewItem as f}from"../../../../../../../vs/platform/actions/browser/dropdownWithPrimaryActionViewItem.js";import{createAndFillInActionBarActions as A}from"../../../../../../../vs/platform/actions/browser/menuEntryActionViewItem.js";import{IMenuService as k,MenuItemAction as O}from"../../../../../../../vs/platform/actions/common/actions.js";import"../../../../../../../vs/platform/contextkey/common/contextkey.js";import{InputFocusedContext as _}from"../../../../../../../vs/platform/contextkey/common/contextkeys.js";import{IContextMenuService as K}from"../../../../../../../vs/platform/contextview/browser/contextView.js";import{IInstantiationService as w}from"../../../../../../../vs/platform/instantiation/common/instantiation.js";import{IKeybindingService as D}from"../../../../../../../vs/platform/keybinding/common/keybinding.js";import"../../../../../../../vs/workbench/contrib/notebook/browser/controller/coreActions.js";import"../../../../../../../vs/workbench/contrib/notebook/browser/notebookBrowser.js";import{CellContentPart as L}from"../../../../../../../vs/workbench/contrib/notebook/browser/view/cellPart.js";import{registerCellToolbarStickyScroll as B}from"../../../../../../../vs/workbench/contrib/notebook/browser/view/cellParts/cellToolbarStickyScroll.js";import{NOTEBOOK_CELL_EXECUTION_STATE as N,NOTEBOOK_CELL_LIST_FOCUSED as F,NOTEBOOK_CELL_TYPE as P,NOTEBOOK_EDITOR_FOCUSED as V}from"../../../../../../../vs/workbench/contrib/notebook/common/notebookContextKeys.js";let l=class extends L{constructor(o,t,i,r,n,m,y,u){super();this.notebookEditor=o;this.contextKeyService=t;this.cellContainer=i;this.runButtonContainer=r;this.keybindingService=m;this.contextMenuService=y;this.instantiationService=u;this.primaryMenu=this._register(n.createMenu(this.notebookEditor.creationOptions.menuIds.cellExecutePrimary,t)),this.secondaryMenu=this._register(n.createMenu(this.notebookEditor.creationOptions.menuIds.cellExecuteToolbar,t)),this.createRunCellToolbar(r,i,t);const c=()=>{const a=this.getCellToolbarActions(this.primaryMenu).primary[0];this.toolbar.setActions(a?[a]:[])};c(),this._register(this.primaryMenu.onDidChange(c)),this._register(this.secondaryMenu.onDidChange(c)),this._register(this.notebookEditor.notebookOptions.onDidChangeOptions(c))}toolbar;primaryMenu;secondaryMenu;didRenderCell(o){if(this.cellDisposables.add(B(this.notebookEditor,o,this.runButtonContainer)),this.notebookEditor.hasModel()){const t={ui:!0,cell:o,notebookEditor:this.notebookEditor,$mid:T.NotebookCellActionContext};this.toolbar.context=t}}getCellToolbarActions(o){const r={primary:[],secondary:[]};return A(o,{shouldForwardArgs:!0},r,n=>/^inline/.test(n)),r}createRunCellToolbar(o,t,i){const r=this._register(new S),n=this._register(new M("notebook.moreRunActions",x("notebook.moreRunActionsLabel","More..."),"codicon-chevron-down",!0)),m=u=>this.keybindingService.lookupKeybinding(u.id,y),y=this._register(H(i));this.toolbar=this._register(new E(o,this.contextMenuService,{getKeyBinding:m,actionViewItemProvider:(u,c)=>{r.clear();const p=this.getCellToolbarActions(this.primaryMenu).primary[0];if(!(p instanceof O))return;const a=this.getCellToolbarActions(this.secondaryMenu).secondary;if(!a.length)return;const h=this.instantiationService.createInstance(f,p,n,a,"notebook-cell-run-toolbar",this.contextMenuService,{...c,getKeyBinding:m});return r.add(h.onDidChangeDropdownVisibility(C=>{t.classList.toggle("cell-run-toolbar-dropdown-active",C)})),h},renderDropdownAsChildElement:!0}))}};l=I([d(4,k),d(5,D),d(6,K),d(7,w)],l);function H(s){const e=s.createScoped(document.createElement("div"));return _.bindTo(e).set(!0),b.editorTextFocus.bindTo(e).set(!0),b.focus.bindTo(e).set(!0),b.textInputFocus.bindTo(e).set(!0),N.bindTo(e).set("idle"),F.bindTo(e).set(!0),V.bindTo(e).set(!0),P.bindTo(e).set("code"),e}export{l as RunToolbar,H as getCodeCellExecutionContextKeyService};
