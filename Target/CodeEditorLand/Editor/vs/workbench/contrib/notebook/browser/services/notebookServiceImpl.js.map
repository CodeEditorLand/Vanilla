{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/services/notebookServiceImpl.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toAction } from \"../../../../../base/common/actions.js\";\nimport {\n\tVSBuffer,\n\ttype VSBufferReadableStream,\n\tstreamToBuffer,\n} from \"../../../../../base/common/buffer.js\";\nimport { createErrorWithActions } from \"../../../../../base/common/errorMessage.js\";\nimport { Emitter, type Event } from \"../../../../../base/common/event.js\";\nimport type * as glob from \"../../../../../base/common/glob.js\";\nimport { Iterable } from \"../../../../../base/common/iterator.js\";\nimport { Lazy } from \"../../../../../base/common/lazy.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../../../../base/common/lifecycle.js\";\nimport { ResourceMap } from \"../../../../../base/common/map.js\";\nimport { Schemas } from \"../../../../../base/common/network.js\";\nimport { basename, isEqual } from \"../../../../../base/common/resources.js\";\nimport { isDefined } from \"../../../../../base/common/types.js\";\nimport { URI } from \"../../../../../base/common/uri.js\";\nimport { localize } from \"../../../../../nls.js\";\nimport { IAccessibilityService } from \"../../../../../platform/accessibility/common/accessibility.js\";\nimport {\n\ttype ConfigurationTarget,\n\tIConfigurationService,\n} from \"../../../../../platform/configuration/common/configuration.js\";\nimport type { IResourceEditorInput } from \"../../../../../platform/editor/common/editor.js\";\nimport { IFileService } from \"../../../../../platform/files/common/files.js\";\nimport { IInstantiationService } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../../platform/storage/common/storage.js\";\nimport { IUriIdentityService } from \"../../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport type {\n\tEditorInputWithOptions,\n\tIResourceDiffEditorInput,\n\tIResourceMergeEditorInput,\n} from \"../../../../common/editor.js\";\nimport { Memento, type MementoObject } from \"../../../../common/memento.js\";\nimport type { IEditorGroup } from \"../../../../services/editor/common/editorGroupsService.js\";\nimport {\n\ttype DiffEditorInputFactoryFunction,\n\ttype EditorInputFactoryFunction,\n\ttype EditorInputFactoryObject,\n\tIEditorResolverService,\n\ttype IEditorType,\n\ttype MergeEditorInputFactoryFunction,\n\ttype RegisteredEditorInfo,\n\tRegisteredEditorPriority,\n\ttype UntitledEditorInputFactoryFunction,\n} from \"../../../../services/editor/common/editorResolverService.js\";\nimport {\n\tIExtensionService,\n\tisProposedApiEnabled,\n} from \"../../../../services/extensions/common/extensions.js\";\nimport type { IExtensionPointUser } from \"../../../../services/extensions/common/extensionsRegistry.js\";\nimport {\n\ttype INotebookDocument,\n\tINotebookDocumentService,\n} from \"../../../../services/notebook/common/notebookDocumentService.js\";\nimport { InstallRecommendedExtensionAction } from \"../../../extensions/browser/extensionsActions.js\";\nimport { MergeEditorInput } from \"../../../mergeEditor/browser/mergeEditorInput.js\";\nimport type { NotebookCellTextModel } from \"../../common/model/notebookCellTextModel.js\";\nimport { NotebookTextModel } from \"../../common/model/notebookTextModel.js\";\nimport {\n\tACCESSIBLE_NOTEBOOK_DISPLAY_ORDER,\n\tCellUri,\n\ttype INotebookContributionData,\n\ttype INotebookExclusiveDocumentFilter,\n\ttype INotebookRendererInfo,\n\ttype INotebookStaticPreloadInfo,\n\ttype INotebookTextModel,\n\ttype IOrderedMimeType,\n\ttype IOutputDto,\n\tMimeTypeDisplayOrder,\n\tNOTEBOOK_DISPLAY_ORDER,\n\tNotebookEditorPriority,\n\ttype NotebookExtensionDescription,\n\tNotebookRendererMatch,\n\tNotebookSetting,\n\tRENDERER_EQUIVALENT_EXTENSIONS,\n\tRENDERER_NOT_AVAILABLE,\n} from \"../../common/notebookCommon.js\";\nimport { NotebookDiffEditorInput } from \"../../common/notebookDiffEditorInput.js\";\nimport { NotebookEditorInput } from \"../../common/notebookEditorInput.js\";\nimport { INotebookEditorModelResolverService } from \"../../common/notebookEditorModelResolverService.js\";\nimport {\n\tNotebookOutputRendererInfo,\n\tNotebookStaticPreloadInfo,\n} from \"../../common/notebookOutputRenderer.js\";\nimport {\n\ttype NotebookEditorDescriptor,\n\tNotebookProviderInfo,\n} from \"../../common/notebookProvider.js\";\nimport {\n\ttype INotebookSerializer,\n\ttype INotebookService,\n\tSimpleNotebookProviderInfo,\n} from \"../../common/notebookService.js\";\nimport { NotebookMultiDiffEditorInput } from \"../diff/notebookMultiDiffEditorInput.js\";\nimport type { INotebookEditorOptions } from \"../notebookBrowser.js\";\nimport {\n\ttype INotebookEditorContribution,\n\tnotebookPreloadExtensionPoint,\n\tnotebookRendererExtensionPoint,\n\tnotebooksExtensionPoint,\n} from \"../notebookExtensionPoint.js\";\n\nexport class NotebookProviderInfoStore extends Disposable {\n\tprivate static readonly CUSTOM_EDITORS_STORAGE_ID = \"notebookEditors\";\n\tprivate static readonly CUSTOM_EDITORS_ENTRY_ID = \"editors\";\n\n\tprivate readonly _memento: Memento;\n\tprivate _handled = false;\n\n\tprivate readonly _contributedEditors = new Map<\n\t\tstring,\n\t\tNotebookProviderInfo\n\t>();\n\tprivate readonly _contributedEditorDisposables = this._register(\n\t\tnew DisposableStore(),\n\t);\n\n\tconstructor(\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IEditorResolverService private readonly _editorResolverService: IEditorResolverService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@INotebookEditorModelResolverService private readonly _notebookEditorModelResolverService: INotebookEditorModelResolverService,\n\t\t@IUriIdentityService private readonly uriIdentService: IUriIdentityService,\n\t) {\n\t\tsuper();\n\n\t\tthis._memento = new Memento(NotebookProviderInfoStore.CUSTOM_EDITORS_STORAGE_ID, storageService);\n\n\t\tconst mementoObject = this._memento.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\t// Process the notebook contributions but buffer changes from the resolver\n\t\tthis._editorResolverService.bufferChangeEvents(() => {\n\t\t\tfor (const info of (mementoObject[NotebookProviderInfoStore.CUSTOM_EDITORS_ENTRY_ID] || []) as NotebookEditorDescriptor[]) {\n\t\t\t\tthis.add(new NotebookProviderInfo(info), false);\n\t\t\t}\n\t\t});\n\n\t\tthis._register(extensionService.onDidRegisterExtensions(() => {\n\t\t\tif (!this._handled) {\n\t\t\t\t// there is no extension point registered for notebook content provider\n\t\t\t\t// clear the memento and cache\n\t\t\t\tthis._clear();\n\t\t\t\tmementoObject[NotebookProviderInfoStore.CUSTOM_EDITORS_ENTRY_ID] = [];\n\t\t\t\tthis._memento.saveMemento();\n\t\t\t}\n\t\t}));\n\n\t\tnotebooksExtensionPoint.setHandler(extensions => this._setupHandler(extensions));\n\t}\n\n\toverride dispose(): void {\n\t\tthis._clear();\n\t\tsuper.dispose();\n\t}\n\n\tprivate _setupHandler(\n\t\textensions: readonly IExtensionPointUser<\n\t\t\tINotebookEditorContribution[]\n\t\t>[],\n\t) {\n\t\tthis._handled = true;\n\t\tconst builtins: NotebookProviderInfo[] = [\n\t\t\t...this._contributedEditors.values(),\n\t\t].filter((info) => !info.extension);\n\t\tthis._clear();\n\n\t\tconst builtinProvidersFromCache: Map<string, IDisposable> = new Map();\n\t\tbuiltins.forEach((builtin) => {\n\t\t\tbuiltinProvidersFromCache.set(builtin.id, this.add(builtin));\n\t\t});\n\n\t\tfor (const extension of extensions) {\n\t\t\tfor (const notebookContribution of extension.value) {\n\t\t\t\tif (!notebookContribution.type) {\n\t\t\t\t\textension.collector.error(\n\t\t\t\t\t\t`Notebook does not specify type-property`,\n\t\t\t\t\t);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst existing = this.get(notebookContribution.type);\n\n\t\t\t\tif (existing) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!existing.extension &&\n\t\t\t\t\t\textension.description.isBuiltin &&\n\t\t\t\t\t\tbuiltins.find(\n\t\t\t\t\t\t\t(builtin) =>\n\t\t\t\t\t\t\t\tbuiltin.id === notebookContribution.type,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\t// we are registering an extension which is using the same view type which is already cached\n\t\t\t\t\t\tbuiltinProvidersFromCache\n\t\t\t\t\t\t\t.get(notebookContribution.type)\n\t\t\t\t\t\t\t?.dispose();\n\t\t\t\t\t} else {\n\t\t\t\t\t\textension.collector.error(\n\t\t\t\t\t\t\t`Notebook type '${notebookContribution.type}' already used`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.add(\n\t\t\t\t\tnew NotebookProviderInfo({\n\t\t\t\t\t\textension: extension.description.identifier,\n\t\t\t\t\t\tid: notebookContribution.type,\n\t\t\t\t\t\tdisplayName: notebookContribution.displayName,\n\t\t\t\t\t\tselectors: notebookContribution.selector || [],\n\t\t\t\t\t\tpriority: this._convertPriority(\n\t\t\t\t\t\t\tnotebookContribution.priority,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tproviderDisplayName:\n\t\t\t\t\t\t\textension.description.displayName ??\n\t\t\t\t\t\t\textension.description.identifier.value,\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst mementoObject = this._memento.getMemento(\n\t\t\tStorageScope.PROFILE,\n\t\t\tStorageTarget.MACHINE,\n\t\t);\n\t\tmementoObject[NotebookProviderInfoStore.CUSTOM_EDITORS_ENTRY_ID] =\n\t\t\tArray.from(this._contributedEditors.values());\n\t\tthis._memento.saveMemento();\n\t}\n\n\tclearEditorCache() {\n\t\tconst mementoObject = this._memento.getMemento(\n\t\t\tStorageScope.PROFILE,\n\t\t\tStorageTarget.MACHINE,\n\t\t);\n\t\tmementoObject[NotebookProviderInfoStore.CUSTOM_EDITORS_ENTRY_ID] = [];\n\t\tthis._memento.saveMemento();\n\t}\n\n\tprivate _convertPriority(priority?: string) {\n\t\tif (!priority) {\n\t\t\treturn RegisteredEditorPriority.default;\n\t\t}\n\n\t\tif (priority === NotebookEditorPriority.default) {\n\t\t\treturn RegisteredEditorPriority.default;\n\t\t}\n\n\t\treturn RegisteredEditorPriority.option;\n\t}\n\n\tprivate _registerContributionPoint(\n\t\tnotebookProviderInfo: NotebookProviderInfo,\n\t): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\n\t\tfor (const selector of notebookProviderInfo.selectors) {\n\t\t\tconst globPattern =\n\t\t\t\t(selector as INotebookExclusiveDocumentFilter).include ||\n\t\t\t\t(selector as glob.IRelativePattern | string);\n\t\t\tconst notebookEditorInfo: RegisteredEditorInfo = {\n\t\t\t\tid: notebookProviderInfo.id,\n\t\t\t\tlabel: notebookProviderInfo.displayName,\n\t\t\t\tdetail: notebookProviderInfo.providerDisplayName,\n\t\t\t\tpriority: notebookProviderInfo.priority,\n\t\t\t};\n\t\t\tconst notebookEditorOptions = {\n\t\t\t\tcanHandleDiff: () =>\n\t\t\t\t\t!!this._configurationService.getValue(\n\t\t\t\t\t\tNotebookSetting.textDiffEditorPreview,\n\t\t\t\t\t) && !this._accessibilityService.isScreenReaderOptimized(),\n\t\t\t\tcanSupportResource: (resource: URI) =>\n\t\t\t\t\tresource.scheme === Schemas.untitled ||\n\t\t\t\t\tresource.scheme === Schemas.vscodeNotebookCell ||\n\t\t\t\t\tthis._fileService.hasProvider(resource),\n\t\t\t};\n\t\t\tconst notebookEditorInputFactory: EditorInputFactoryFunction = ({\n\t\t\t\tresource,\n\t\t\t\toptions,\n\t\t\t}) => {\n\t\t\t\tconst data = CellUri.parse(resource);\n\t\t\t\tlet notebookUri: URI;\n\n\t\t\t\tlet cellOptions: IResourceEditorInput | undefined;\n\t\t\t\tlet preferredResource = resource;\n\n\t\t\t\tif (data) {\n\t\t\t\t\t// resource is a notebook cell\n\t\t\t\t\tnotebookUri = this.uriIdentService.asCanonicalUri(\n\t\t\t\t\t\tdata.notebook,\n\t\t\t\t\t);\n\t\t\t\t\tpreferredResource = data.notebook;\n\t\t\t\t\tcellOptions = { resource, options };\n\t\t\t\t} else {\n\t\t\t\t\tnotebookUri = this.uriIdentService.asCanonicalUri(resource);\n\t\t\t\t}\n\n\t\t\t\tif (!cellOptions) {\n\t\t\t\t\tcellOptions = (\n\t\t\t\t\t\toptions as INotebookEditorOptions | undefined\n\t\t\t\t\t)?.cellOptions;\n\t\t\t\t}\n\n\t\t\t\tconst notebookOptions: INotebookEditorOptions = {\n\t\t\t\t\t...options,\n\t\t\t\t\tcellOptions,\n\t\t\t\t\tviewState: undefined,\n\t\t\t\t};\n\t\t\t\tconst editor = NotebookEditorInput.getOrCreate(\n\t\t\t\t\tthis._instantiationService,\n\t\t\t\t\tnotebookUri,\n\t\t\t\t\tpreferredResource,\n\t\t\t\t\tnotebookProviderInfo.id,\n\t\t\t\t);\n\t\t\t\treturn { editor, options: notebookOptions };\n\t\t\t};\n\n\t\t\tconst notebookUntitledEditorFactory: UntitledEditorInputFactoryFunction =\n\t\t\t\tasync ({ resource, options }) => {\n\t\t\t\t\tconst ref =\n\t\t\t\t\t\tawait this._notebookEditorModelResolverService.resolve(\n\t\t\t\t\t\t\t{ untitledResource: resource },\n\t\t\t\t\t\t\tnotebookProviderInfo.id,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t// untitled notebooks are disposed when they get saved. we should not hold a reference\n\t\t\t\t\t// to such a disposed notebook and therefore dispose the reference as well\n\t\t\t\t\tref.object.notebook.onWillDispose(() => {\n\t\t\t\t\t\tref.dispose();\n\t\t\t\t\t});\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\teditor: NotebookEditorInput.getOrCreate(\n\t\t\t\t\t\t\tthis._instantiationService,\n\t\t\t\t\t\t\tref.object.resource,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tnotebookProviderInfo.id,\n\t\t\t\t\t\t),\n\t\t\t\t\t\toptions,\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\tconst notebookDiffEditorInputFactory: DiffEditorInputFactoryFunction =\n\t\t\t\t(\n\t\t\t\t\tdiffEditorInput: IResourceDiffEditorInput,\n\t\t\t\t\tgroup: IEditorGroup,\n\t\t\t\t) => {\n\t\t\t\t\tconst { modified, original, label, description } =\n\t\t\t\t\t\tdiffEditorInput;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis._configurationService.getValue(\n\t\t\t\t\t\t\t\"notebook.experimental.enableNewDiffEditor\",\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\teditor: NotebookMultiDiffEditorInput.create(\n\t\t\t\t\t\t\t\tthis._instantiationService,\n\t\t\t\t\t\t\t\tmodified.resource!,\n\t\t\t\t\t\t\t\tlabel,\n\t\t\t\t\t\t\t\tdescription,\n\t\t\t\t\t\t\t\toriginal.resource!,\n\t\t\t\t\t\t\t\tnotebookProviderInfo.id,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\teditor: NotebookDiffEditorInput.create(\n\t\t\t\t\t\t\tthis._instantiationService,\n\t\t\t\t\t\t\tmodified.resource!,\n\t\t\t\t\t\t\tlabel,\n\t\t\t\t\t\t\tdescription,\n\t\t\t\t\t\t\toriginal.resource!,\n\t\t\t\t\t\t\tnotebookProviderInfo.id,\n\t\t\t\t\t\t),\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\tconst mergeEditorInputFactory: MergeEditorInputFactoryFunction = (\n\t\t\t\tmergeEditor: IResourceMergeEditorInput,\n\t\t\t): EditorInputWithOptions => {\n\t\t\t\treturn {\n\t\t\t\t\teditor: this._instantiationService.createInstance(\n\t\t\t\t\t\tMergeEditorInput,\n\t\t\t\t\t\tmergeEditor.base.resource,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\turi: mergeEditor.input1.resource,\n\t\t\t\t\t\t\ttitle:\n\t\t\t\t\t\t\t\tmergeEditor.input1.label ??\n\t\t\t\t\t\t\t\tbasename(mergeEditor.input1.resource),\n\t\t\t\t\t\t\tdescription: mergeEditor.input1.description ?? \"\",\n\t\t\t\t\t\t\tdetail: mergeEditor.input1.detail,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\turi: mergeEditor.input2.resource,\n\t\t\t\t\t\t\ttitle:\n\t\t\t\t\t\t\t\tmergeEditor.input2.label ??\n\t\t\t\t\t\t\t\tbasename(mergeEditor.input2.resource),\n\t\t\t\t\t\t\tdescription: mergeEditor.input2.description ?? \"\",\n\t\t\t\t\t\t\tdetail: mergeEditor.input2.detail,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmergeEditor.result.resource,\n\t\t\t\t\t),\n\t\t\t\t};\n\t\t\t};\n\n\t\t\tconst notebookFactoryObject: EditorInputFactoryObject = {\n\t\t\t\tcreateEditorInput: notebookEditorInputFactory,\n\t\t\t\tcreateDiffEditorInput: notebookDiffEditorInputFactory,\n\t\t\t\tcreateUntitledEditorInput: notebookUntitledEditorFactory,\n\t\t\t\tcreateMergeEditorInput: mergeEditorInputFactory,\n\t\t\t};\n\t\t\tconst notebookCellFactoryObject: EditorInputFactoryObject = {\n\t\t\t\tcreateEditorInput: notebookEditorInputFactory,\n\t\t\t\tcreateDiffEditorInput: notebookDiffEditorInputFactory,\n\t\t\t};\n\n\t\t\t// TODO @lramos15 find a better way to toggle handling diff editors than needing these listeners for every registration\n\t\t\t// This is a lot of event listeners especially if there are many notebooks\n\t\t\tdisposables.add(\n\t\t\t\tthis._configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\t\tNotebookSetting.textDiffEditorPreview,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst canHandleDiff =\n\t\t\t\t\t\t\t!!this._configurationService.getValue(\n\t\t\t\t\t\t\t\tNotebookSetting.textDiffEditorPreview,\n\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t!this._accessibilityService.isScreenReaderOptimized();\n\t\t\t\t\t\tif (canHandleDiff) {\n\t\t\t\t\t\t\tnotebookFactoryObject.createDiffEditorInput =\n\t\t\t\t\t\t\t\tnotebookDiffEditorInputFactory;\n\t\t\t\t\t\t\tnotebookCellFactoryObject.createDiffEditorInput =\n\t\t\t\t\t\t\t\tnotebookDiffEditorInputFactory;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnotebookFactoryObject.createDiffEditorInput =\n\t\t\t\t\t\t\t\tundefined;\n\t\t\t\t\t\t\tnotebookCellFactoryObject.createDiffEditorInput =\n\t\t\t\t\t\t\t\tundefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tdisposables.add(\n\t\t\t\tthis._accessibilityService.onDidChangeScreenReaderOptimized(\n\t\t\t\t\t() => {\n\t\t\t\t\t\tconst canHandleDiff =\n\t\t\t\t\t\t\t!!this._configurationService.getValue(\n\t\t\t\t\t\t\t\tNotebookSetting.textDiffEditorPreview,\n\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t!this._accessibilityService.isScreenReaderOptimized();\n\t\t\t\t\t\tif (canHandleDiff) {\n\t\t\t\t\t\t\tnotebookFactoryObject.createDiffEditorInput =\n\t\t\t\t\t\t\t\tnotebookDiffEditorInputFactory;\n\t\t\t\t\t\t\tnotebookCellFactoryObject.createDiffEditorInput =\n\t\t\t\t\t\t\t\tnotebookDiffEditorInputFactory;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnotebookFactoryObject.createDiffEditorInput =\n\t\t\t\t\t\t\t\tundefined;\n\t\t\t\t\t\t\tnotebookCellFactoryObject.createDiffEditorInput =\n\t\t\t\t\t\t\t\tundefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\n\t\t\t// Register the notebook editor\n\t\t\tdisposables.add(\n\t\t\t\tthis._editorResolverService.registerEditor(\n\t\t\t\t\tglobPattern,\n\t\t\t\t\tnotebookEditorInfo,\n\t\t\t\t\tnotebookEditorOptions,\n\t\t\t\t\tnotebookFactoryObject,\n\t\t\t\t),\n\t\t\t);\n\t\t\t// Then register the schema handler as exclusive for that notebook\n\t\t\tdisposables.add(\n\t\t\t\tthis._editorResolverService.registerEditor(\n\t\t\t\t\t`${Schemas.vscodeNotebookCell}:/**/${globPattern}`,\n\t\t\t\t\t{\n\t\t\t\t\t\t...notebookEditorInfo,\n\t\t\t\t\t\tpriority: RegisteredEditorPriority.exclusive,\n\t\t\t\t\t},\n\t\t\t\t\tnotebookEditorOptions,\n\t\t\t\t\tnotebookCellFactoryObject,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\treturn disposables;\n\t}\n\n\tprivate _clear(): void {\n\t\tthis._contributedEditors.clear();\n\t\tthis._contributedEditorDisposables.clear();\n\t}\n\n\tget(viewType: string): NotebookProviderInfo | undefined {\n\t\treturn this._contributedEditors.get(viewType);\n\t}\n\n\tadd(info: NotebookProviderInfo, saveMemento = true): IDisposable {\n\t\tif (this._contributedEditors.has(info.id)) {\n\t\t\tthrow new Error(`notebook type '${info.id}' ALREADY EXISTS`);\n\t\t}\n\t\tthis._contributedEditors.set(info.id, info);\n\t\tlet editorRegistration: IDisposable | undefined;\n\n\t\t// built-in notebook providers contribute their own editors\n\t\tif (info.extension) {\n\t\t\teditorRegistration = this._registerContributionPoint(info);\n\t\t\tthis._contributedEditorDisposables.add(editorRegistration);\n\t\t}\n\n\t\tif (saveMemento) {\n\t\t\tconst mementoObject = this._memento.getMemento(\n\t\t\t\tStorageScope.PROFILE,\n\t\t\t\tStorageTarget.MACHINE,\n\t\t\t);\n\t\t\tmementoObject[NotebookProviderInfoStore.CUSTOM_EDITORS_ENTRY_ID] =\n\t\t\t\tArray.from(this._contributedEditors.values());\n\t\t\tthis._memento.saveMemento();\n\t\t}\n\n\t\treturn this._register(\n\t\t\ttoDisposable(() => {\n\t\t\t\tconst mementoObject = this._memento.getMemento(\n\t\t\t\t\tStorageScope.PROFILE,\n\t\t\t\t\tStorageTarget.MACHINE,\n\t\t\t\t);\n\t\t\t\tmementoObject[\n\t\t\t\t\tNotebookProviderInfoStore.CUSTOM_EDITORS_ENTRY_ID\n\t\t\t\t] = Array.from(this._contributedEditors.values());\n\t\t\t\tthis._memento.saveMemento();\n\t\t\t\teditorRegistration?.dispose();\n\t\t\t\tthis._contributedEditors.delete(info.id);\n\t\t\t}),\n\t\t);\n\t}\n\n\tgetContributedNotebook(resource: URI): readonly NotebookProviderInfo[] {\n\t\tconst result: NotebookProviderInfo[] = [];\n\t\tfor (const info of this._contributedEditors.values()) {\n\t\t\tif (info.matches(resource)) {\n\t\t\t\tresult.push(info);\n\t\t\t}\n\t\t}\n\t\tif (result.length === 0 && resource.scheme === Schemas.untitled) {\n\t\t\t// untitled resource and no path-specific match => all providers apply\n\t\t\treturn Array.from(this._contributedEditors.values());\n\t\t}\n\t\treturn result;\n\t}\n\n\t[Symbol.iterator](): Iterator<NotebookProviderInfo> {\n\t\treturn this._contributedEditors.values();\n\t}\n}\n\nexport class NotebookOutputRendererInfoStore {\n\tprivate readonly contributedRenderers = new Map<\n\t\t/* rendererId */ string,\n\t\tNotebookOutputRendererInfo\n\t>();\n\tprivate readonly preferredMimetypeMemento: Memento;\n\tprivate readonly preferredMimetype = new Lazy<{\n\t\t[notebookType: string]: { [mimeType: string]: /* rendererId */ string };\n\t}>(() =>\n\t\tthis.preferredMimetypeMemento.getMemento(\n\t\t\tStorageScope.WORKSPACE,\n\t\t\tStorageTarget.MACHINE,\n\t\t),\n\t);\n\n\tconstructor(\n\t\t@IStorageService storageService: IStorageService,\n\t) {\n\t\tthis.preferredMimetypeMemento = new Memento('workbench.editor.notebook.preferredRenderer2', storageService);\n\t}\n\n\tclear() {\n\t\tthis.contributedRenderers.clear();\n\t}\n\n\tget(rendererId: string): NotebookOutputRendererInfo | undefined {\n\t\treturn this.contributedRenderers.get(rendererId);\n\t}\n\n\tgetAll(): NotebookOutputRendererInfo[] {\n\t\treturn Array.from(this.contributedRenderers.values());\n\t}\n\n\tadd(info: NotebookOutputRendererInfo): void {\n\t\tif (this.contributedRenderers.has(info.id)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.contributedRenderers.set(info.id, info);\n\t}\n\n\t/** Update and remember the preferred renderer for the given mimetype in this workspace */\n\tsetPreferred(\n\t\tnotebookProviderInfo: NotebookProviderInfo,\n\t\tmimeType: string,\n\t\trendererId: string,\n\t) {\n\t\tconst mementoObj = this.preferredMimetype.value;\n\t\tconst forNotebook = mementoObj[notebookProviderInfo.id];\n\t\tif (forNotebook) {\n\t\t\tforNotebook[mimeType] = rendererId;\n\t\t} else {\n\t\t\tmementoObj[notebookProviderInfo.id] = { [mimeType]: rendererId };\n\t\t}\n\n\t\tthis.preferredMimetypeMemento.saveMemento();\n\t}\n\n\tfindBestRenderers(\n\t\tnotebookProviderInfo: NotebookProviderInfo | undefined,\n\t\tmimeType: string,\n\t\tkernelProvides: readonly string[] | undefined,\n\t): IOrderedMimeType[] {\n\t\tenum ReuseOrder {\n\t\t\tPreviouslySelected = 1 << 8,\n\t\t\tSameExtensionAsNotebook = 2 << 8,\n\t\t\tOtherRenderer = 3 << 8,\n\t\t\tBuiltIn = 4 << 8,\n\t\t}\n\n\t\tconst preferred =\n\t\t\tnotebookProviderInfo &&\n\t\t\tthis.preferredMimetype.value[notebookProviderInfo.id]?.[mimeType];\n\t\tconst notebookExtId = notebookProviderInfo?.extension?.value;\n\t\tconst notebookId = notebookProviderInfo?.id;\n\t\tconst renderers: { ordered: IOrderedMimeType; score: number }[] =\n\t\t\tArray.from(this.contributedRenderers.values())\n\t\t\t\t.map((renderer) => {\n\t\t\t\t\tconst ownScore =\n\t\t\t\t\t\tkernelProvides === undefined\n\t\t\t\t\t\t\t? renderer.matchesWithoutKernel(mimeType)\n\t\t\t\t\t\t\t: renderer.matches(mimeType, kernelProvides);\n\n\t\t\t\t\tif (ownScore === NotebookRendererMatch.Never) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst rendererExtId = renderer.extensionId.value;\n\t\t\t\t\tconst reuseScore =\n\t\t\t\t\t\tpreferred === renderer.id\n\t\t\t\t\t\t\t? ReuseOrder.PreviouslySelected\n\t\t\t\t\t\t\t: rendererExtId === notebookExtId ||\n\t\t\t\t\t\t\t\t\tRENDERER_EQUIVALENT_EXTENSIONS.get(\n\t\t\t\t\t\t\t\t\t\trendererExtId,\n\t\t\t\t\t\t\t\t\t)?.has(notebookId!)\n\t\t\t\t\t\t\t\t? ReuseOrder.SameExtensionAsNotebook\n\t\t\t\t\t\t\t\t: renderer.isBuiltin\n\t\t\t\t\t\t\t\t\t? ReuseOrder.BuiltIn\n\t\t\t\t\t\t\t\t\t: ReuseOrder.OtherRenderer;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tordered: {\n\t\t\t\t\t\t\tmimeType,\n\t\t\t\t\t\t\trendererId: renderer.id,\n\t\t\t\t\t\t\tisTrusted: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tscore: reuseScore | ownScore,\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t\t.filter(isDefined);\n\n\t\tif (renderers.length === 0) {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tmimeType,\n\t\t\t\t\trendererId: RENDERER_NOT_AVAILABLE,\n\t\t\t\t\tisTrusted: true,\n\t\t\t\t},\n\t\t\t];\n\t\t}\n\n\t\treturn renderers\n\t\t\t.sort((a, b) => a.score - b.score)\n\t\t\t.map((r) => r.ordered);\n\t}\n}\n\nclass ModelData implements IDisposable, INotebookDocument {\n\tprivate readonly _modelEventListeners = new DisposableStore();\n\tget uri() {\n\t\treturn this.model.uri;\n\t}\n\n\tconstructor(\n\t\treadonly model: NotebookTextModel,\n\t\tonWillDispose: (model: INotebookTextModel) => void,\n\t) {\n\t\tthis._modelEventListeners.add(\n\t\t\tmodel.onWillDispose(() => onWillDispose(model)),\n\t\t);\n\t}\n\n\tgetCellIndex(cellUri: URI): number | undefined {\n\t\treturn this.model.cells.findIndex((cell) => isEqual(cell.uri, cellUri));\n\t}\n\n\tdispose(): void {\n\t\tthis._modelEventListeners.dispose();\n\t}\n}\n\nexport class NotebookService extends Disposable implements INotebookService {\n\tdeclare readonly _serviceBrand: undefined;\n\tprivate static _storageNotebookViewTypeProvider =\n\t\t\"notebook.viewTypeProvider\";\n\tprivate readonly _memento: Memento;\n\tprivate readonly _viewTypeCache: MementoObject;\n\n\tprivate readonly _notebookProviders = new Map<\n\t\tstring,\n\t\tSimpleNotebookProviderInfo\n\t>();\n\tprivate _notebookProviderInfoStore: NotebookProviderInfoStore | undefined =\n\t\tundefined;\n\tprivate get notebookProviderInfoStore(): NotebookProviderInfoStore {\n\t\tif (!this._notebookProviderInfoStore) {\n\t\t\tthis._notebookProviderInfoStore = this._register(\n\t\t\t\tthis._instantiationService.createInstance(\n\t\t\t\t\tNotebookProviderInfoStore,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\treturn this._notebookProviderInfoStore;\n\t}\n\tprivate readonly _notebookRenderersInfoStore =\n\t\tthis._instantiationService.createInstance(\n\t\t\tNotebookOutputRendererInfoStore,\n\t\t);\n\tprivate readonly _onDidChangeOutputRenderers = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onDidChangeOutputRenderers =\n\t\tthis._onDidChangeOutputRenderers.event;\n\n\tprivate readonly _notebookStaticPreloadInfoStore =\n\t\tnew Set<NotebookStaticPreloadInfo>();\n\n\tprivate readonly _models = new ResourceMap<ModelData>();\n\n\tprivate readonly _onWillAddNotebookDocument = this._register(\n\t\tnew Emitter<NotebookTextModel>(),\n\t);\n\tprivate readonly _onDidAddNotebookDocument = this._register(\n\t\tnew Emitter<NotebookTextModel>(),\n\t);\n\tprivate readonly _onWillRemoveNotebookDocument = this._register(\n\t\tnew Emitter<NotebookTextModel>(),\n\t);\n\tprivate readonly _onDidRemoveNotebookDocument = this._register(\n\t\tnew Emitter<NotebookTextModel>(),\n\t);\n\n\treadonly onWillAddNotebookDocument = this._onWillAddNotebookDocument.event;\n\treadonly onDidAddNotebookDocument = this._onDidAddNotebookDocument.event;\n\treadonly onDidRemoveNotebookDocument =\n\t\tthis._onDidRemoveNotebookDocument.event;\n\treadonly onWillRemoveNotebookDocument =\n\t\tthis._onWillRemoveNotebookDocument.event;\n\n\tprivate readonly _onAddViewType = this._register(new Emitter<string>());\n\treadonly onAddViewType = this._onAddViewType.event;\n\n\tprivate readonly _onWillRemoveViewType = this._register(\n\t\tnew Emitter<string>(),\n\t);\n\treadonly onWillRemoveViewType = this._onWillRemoveViewType.event;\n\n\tprivate readonly _onDidChangeEditorTypes = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\tonDidChangeEditorTypes: Event<void> = this._onDidChangeEditorTypes.event;\n\n\tprivate _cutItems: NotebookCellTextModel[] | undefined;\n\tprivate _lastClipboardIsCopy = true;\n\n\tprivate _displayOrder!: MimeTypeDisplayOrder;\n\n\tconstructor(\n\t\t@IExtensionService private readonly _extensionService: IExtensionService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t\t@INotebookDocumentService private readonly _notebookDocumentService: INotebookDocumentService\n\t) {\n\t\tsuper();\n\n\t\tnotebookRendererExtensionPoint.setHandler((renderers) => {\n\t\t\tthis._notebookRenderersInfoStore.clear();\n\n\t\t\tfor (const extension of renderers) {\n\t\t\t\tfor (const notebookContribution of extension.value) {\n\t\t\t\t\tif (!notebookContribution.entrypoint) { // avoid crashing\n\t\t\t\t\t\textension.collector.error(`Notebook renderer does not specify entry point`);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst id = notebookContribution.id;\n\t\t\t\t\tif (!id) {\n\t\t\t\t\t\textension.collector.error(`Notebook renderer does not specify id-property`);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._notebookRenderersInfoStore.add(new NotebookOutputRendererInfo({\n\t\t\t\t\t\tid,\n\t\t\t\t\t\textension: extension.description,\n\t\t\t\t\t\tentrypoint: notebookContribution.entrypoint,\n\t\t\t\t\t\tdisplayName: notebookContribution.displayName,\n\t\t\t\t\t\tmimeTypes: notebookContribution.mimeTypes || [],\n\t\t\t\t\t\tdependencies: notebookContribution.dependencies,\n\t\t\t\t\t\toptionalDependencies: notebookContribution.optionalDependencies,\n\t\t\t\t\t\trequiresMessaging: notebookContribution.requiresMessaging,\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._onDidChangeOutputRenderers.fire();\n\t\t});\n\n\t\tnotebookPreloadExtensionPoint.setHandler(extensions => {\n\t\t\tthis._notebookStaticPreloadInfoStore.clear();\n\n\t\t\tfor (const extension of extensions) {\n\t\t\t\tif (!isProposedApiEnabled(extension.description, 'contribNotebookStaticPreloads')) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (const notebookContribution of extension.value) {\n\t\t\t\t\tif (!notebookContribution.entrypoint) { // avoid crashing\n\t\t\t\t\t\textension.collector.error(`Notebook preload does not specify entry point`);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst type = notebookContribution.type;\n\t\t\t\t\tif (!type) {\n\t\t\t\t\t\textension.collector.error(`Notebook preload does not specify type-property`);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._notebookStaticPreloadInfoStore.add(new NotebookStaticPreloadInfo({\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\textension: extension.description,\n\t\t\t\t\t\tentrypoint: notebookContribution.entrypoint,\n\t\t\t\t\t\tlocalResourceRoots: notebookContribution.localResourceRoots ?? [],\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst updateOrder = () => {\n\t\t\tthis._displayOrder = new MimeTypeDisplayOrder(\n\t\t\t\tthis._configurationService.getValue<string[]>(NotebookSetting.displayOrder) || [],\n\t\t\t\tthis._accessibilityService.isScreenReaderOptimized()\n\t\t\t\t\t? ACCESSIBLE_NOTEBOOK_DISPLAY_ORDER\n\t\t\t\t\t: NOTEBOOK_DISPLAY_ORDER,\n\t\t\t);\n\t\t};\n\n\t\tupdateOrder();\n\n\t\tthis._register(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(NotebookSetting.displayOrder)) {\n\t\t\t\tupdateOrder();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._accessibilityService.onDidChangeScreenReaderOptimized(() => {\n\t\t\tupdateOrder();\n\t\t}));\n\n\t\tthis._memento = new Memento(NotebookService._storageNotebookViewTypeProvider, this._storageService);\n\t\tthis._viewTypeCache = this._memento.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t}\n\n\tgetEditorTypes(): IEditorType[] {\n\t\treturn [...this.notebookProviderInfoStore].map((info) => ({\n\t\t\tid: info.id,\n\t\t\tdisplayName: info.displayName,\n\t\t\tproviderDisplayName: info.providerDisplayName,\n\t\t}));\n\t}\n\n\tclearEditorCache(): void {\n\t\tthis.notebookProviderInfoStore.clearEditorCache();\n\t}\n\n\tprivate _postDocumentOpenActivation(viewType: string) {\n\t\t// send out activations on notebook text model creation\n\t\tthis._extensionService.activateByEvent(`onNotebook:${viewType}`);\n\t\tthis._extensionService.activateByEvent(`onNotebook:*`);\n\t}\n\n\tasync canResolve(viewType: string): Promise<boolean> {\n\t\tif (this._notebookProviders.has(viewType)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tawait this._extensionService.whenInstalledExtensionsRegistered();\n\t\tawait this._extensionService.activateByEvent(\n\t\t\t`onNotebookSerializer:${viewType}`,\n\t\t);\n\n\t\treturn this._notebookProviders.has(viewType);\n\t}\n\n\tregisterContributedNotebookType(\n\t\tviewType: string,\n\t\tdata: INotebookContributionData,\n\t): IDisposable {\n\t\tconst info = new NotebookProviderInfo({\n\t\t\textension: data.extension,\n\t\t\tid: viewType,\n\t\t\tdisplayName: data.displayName,\n\t\t\tproviderDisplayName: data.providerDisplayName,\n\t\t\tpriority: data.priority || RegisteredEditorPriority.default,\n\t\t\tselectors: [],\n\t\t});\n\n\t\tinfo.update({ selectors: data.filenamePattern });\n\n\t\tconst reg = this.notebookProviderInfoStore.add(info);\n\t\tthis._onDidChangeEditorTypes.fire();\n\n\t\treturn toDisposable(() => {\n\t\t\treg.dispose();\n\t\t\tthis._onDidChangeEditorTypes.fire();\n\t\t});\n\t}\n\n\tprivate _registerProviderData(\n\t\tviewType: string,\n\t\tdata: SimpleNotebookProviderInfo,\n\t): IDisposable {\n\t\tif (this._notebookProviders.has(viewType)) {\n\t\t\tthrow new Error(\n\t\t\t\t`notebook provider for viewtype '${viewType}' already exists`,\n\t\t\t);\n\t\t}\n\t\tthis._notebookProviders.set(viewType, data);\n\t\tthis._onAddViewType.fire(viewType);\n\t\treturn toDisposable(() => {\n\t\t\tthis._onWillRemoveViewType.fire(viewType);\n\t\t\tthis._notebookProviders.delete(viewType);\n\t\t});\n\t}\n\n\tregisterNotebookSerializer(\n\t\tviewType: string,\n\t\textensionData: NotebookExtensionDescription,\n\t\tserializer: INotebookSerializer,\n\t): IDisposable {\n\t\tthis.notebookProviderInfoStore\n\t\t\t.get(viewType)\n\t\t\t?.update({ options: serializer.options });\n\t\tthis._viewTypeCache[viewType] = extensionData.id.value;\n\t\tthis._persistMementos();\n\t\treturn this._registerProviderData(\n\t\t\tviewType,\n\t\t\tnew SimpleNotebookProviderInfo(viewType, serializer, extensionData),\n\t\t);\n\t}\n\n\tasync withNotebookDataProvider(\n\t\tviewType: string,\n\t): Promise<SimpleNotebookProviderInfo> {\n\t\tconst selected = this.notebookProviderInfoStore.get(viewType);\n\t\tif (!selected) {\n\t\t\tconst knownProvider = this.getViewTypeProvider(viewType);\n\n\t\t\tconst actions = knownProvider\n\t\t\t\t? [\n\t\t\t\t\t\ttoAction({\n\t\t\t\t\t\t\tid: \"workbench.notebook.action.installMissingViewType\",\n\t\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\t\"notebookOpenInstallMissingViewType\",\n\t\t\t\t\t\t\t\t\"Install extension for '{0}'\",\n\t\t\t\t\t\t\t\tviewType,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\trun: async () => {\n\t\t\t\t\t\t\t\tawait this._instantiationService\n\t\t\t\t\t\t\t\t\t.createInstance(\n\t\t\t\t\t\t\t\t\t\tInstallRecommendedExtensionAction,\n\t\t\t\t\t\t\t\t\t\tknownProvider,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t.run();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}),\n\t\t\t\t\t]\n\t\t\t\t: [];\n\n\t\t\tthrow createErrorWithActions(\n\t\t\t\t`UNKNOWN notebook type '${viewType}'`,\n\t\t\t\tactions,\n\t\t\t);\n\t\t}\n\t\tawait this.canResolve(selected.id);\n\t\tconst result = this._notebookProviders.get(selected.id);\n\t\tif (!result) {\n\t\t\tthrow new Error(\n\t\t\t\t`NO provider registered for view type: '${selected.id}'`,\n\t\t\t);\n\t\t}\n\t\treturn result;\n\t}\n\n\ttryGetDataProviderSync(\n\t\tviewType: string,\n\t): SimpleNotebookProviderInfo | undefined {\n\t\tconst selected = this.notebookProviderInfoStore.get(viewType);\n\t\tif (!selected) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._notebookProviders.get(selected.id);\n\t}\n\n\tprivate _persistMementos(): void {\n\t\tthis._memento.saveMemento();\n\t}\n\n\tgetViewTypeProvider(viewType: string): string | undefined {\n\t\treturn this._viewTypeCache[viewType];\n\t}\n\n\tgetRendererInfo(rendererId: string): INotebookRendererInfo | undefined {\n\t\treturn this._notebookRenderersInfoStore.get(rendererId);\n\t}\n\n\tupdateMimePreferredRenderer(\n\t\tviewType: string,\n\t\tmimeType: string,\n\t\trendererId: string,\n\t\totherMimetypes: readonly string[],\n\t): void {\n\t\tconst info = this.notebookProviderInfoStore.get(viewType);\n\t\tif (info) {\n\t\t\tthis._notebookRenderersInfoStore.setPreferred(\n\t\t\t\tinfo,\n\t\t\t\tmimeType,\n\t\t\t\trendererId,\n\t\t\t);\n\t\t}\n\n\t\tthis._displayOrder.prioritize(mimeType, otherMimetypes);\n\t}\n\n\tsaveMimeDisplayOrder(target: ConfigurationTarget) {\n\t\tthis._configurationService.updateValue(\n\t\t\tNotebookSetting.displayOrder,\n\t\t\tthis._displayOrder.toArray(),\n\t\t\ttarget,\n\t\t);\n\t}\n\n\tgetRenderers(): INotebookRendererInfo[] {\n\t\treturn this._notebookRenderersInfoStore.getAll();\n\t}\n\n\t*getStaticPreloads(viewType: string): Iterable<INotebookStaticPreloadInfo> {\n\t\tfor (const preload of this._notebookStaticPreloadInfoStore) {\n\t\t\tif (preload.type === viewType) {\n\t\t\t\tyield preload;\n\t\t\t}\n\t\t}\n\t}\n\n\t// --- notebook documents: create, destory, retrieve, enumerate\n\n\tasync createNotebookTextModel(\n\t\tviewType: string,\n\t\turi: URI,\n\t\tstream?: VSBufferReadableStream,\n\t): Promise<NotebookTextModel> {\n\t\tif (this._models.has(uri)) {\n\t\t\tthrow new Error(`notebook for ${uri} already exists`);\n\t\t}\n\n\t\tconst info = await this.withNotebookDataProvider(viewType);\n\t\tif (!(info instanceof SimpleNotebookProviderInfo)) {\n\t\t\tthrow new Error(\"CANNOT open file notebook with this provider\");\n\t\t}\n\n\t\tconst bytes = stream\n\t\t\t? await streamToBuffer(stream)\n\t\t\t: VSBuffer.fromByteArray([]);\n\t\tconst data = await info.serializer.dataToNotebook(bytes);\n\n\t\tconst notebookModel = this._instantiationService.createInstance(\n\t\t\tNotebookTextModel,\n\t\t\tinfo.viewType,\n\t\t\turi,\n\t\t\tdata.cells,\n\t\t\tdata.metadata,\n\t\t\tinfo.serializer.options,\n\t\t);\n\t\tconst modelData = new ModelData(\n\t\t\tnotebookModel,\n\t\t\tthis._onWillDisposeDocument.bind(this),\n\t\t);\n\t\tthis._models.set(uri, modelData);\n\t\tthis._notebookDocumentService.addNotebookDocument(modelData);\n\t\tthis._onWillAddNotebookDocument.fire(notebookModel);\n\t\tthis._onDidAddNotebookDocument.fire(notebookModel);\n\t\tthis._postDocumentOpenActivation(info.viewType);\n\t\treturn notebookModel;\n\t}\n\n\tgetNotebookTextModel(uri: URI): NotebookTextModel | undefined {\n\t\treturn this._models.get(uri)?.model;\n\t}\n\n\tgetNotebookTextModels(): Iterable<NotebookTextModel> {\n\t\treturn Iterable.map(this._models.values(), (data) => data.model);\n\t}\n\n\tlistNotebookDocuments(): NotebookTextModel[] {\n\t\treturn [...this._models].map((e) => e[1].model);\n\t}\n\n\tprivate _onWillDisposeDocument(model: INotebookTextModel): void {\n\t\tconst modelData = this._models.get(model.uri);\n\t\tif (modelData) {\n\t\t\tthis._onWillRemoveNotebookDocument.fire(modelData.model);\n\t\t\tthis._models.delete(model.uri);\n\t\t\tthis._notebookDocumentService.removeNotebookDocument(modelData);\n\t\t\tmodelData.dispose();\n\t\t\tthis._onDidRemoveNotebookDocument.fire(modelData.model);\n\t\t}\n\t}\n\n\tgetOutputMimeTypeInfo(\n\t\ttextModel: NotebookTextModel,\n\t\tkernelProvides: readonly string[] | undefined,\n\t\toutput: IOutputDto,\n\t): readonly IOrderedMimeType[] {\n\t\tconst sorted = this._displayOrder.sort(\n\t\t\tnew Set<string>(output.outputs.map((op) => op.mime)),\n\t\t);\n\t\tconst notebookProviderInfo = this.notebookProviderInfoStore.get(\n\t\t\ttextModel.viewType,\n\t\t);\n\n\t\treturn sorted\n\t\t\t.flatMap((mimeType) =>\n\t\t\t\tthis._notebookRenderersInfoStore.findBestRenderers(\n\t\t\t\t\tnotebookProviderInfo,\n\t\t\t\t\tmimeType,\n\t\t\t\t\tkernelProvides,\n\t\t\t\t),\n\t\t\t)\n\t\t\t.sort(\n\t\t\t\t(a, b) =>\n\t\t\t\t\t(a.rendererId === RENDERER_NOT_AVAILABLE ? 1 : 0) -\n\t\t\t\t\t(b.rendererId === RENDERER_NOT_AVAILABLE ? 1 : 0),\n\t\t\t);\n\t}\n\n\tgetContributedNotebookTypes(\n\t\tresource?: URI,\n\t): readonly NotebookProviderInfo[] {\n\t\tif (resource) {\n\t\t\treturn this.notebookProviderInfoStore.getContributedNotebook(\n\t\t\t\tresource,\n\t\t\t);\n\t\t}\n\n\t\treturn [...this.notebookProviderInfoStore];\n\t}\n\n\tgetContributedNotebookType(\n\t\tviewType: string,\n\t): NotebookProviderInfo | undefined {\n\t\treturn this.notebookProviderInfoStore.get(viewType);\n\t}\n\n\tgetNotebookProviderResourceRoots(): URI[] {\n\t\tconst ret: URI[] = [];\n\t\tthis._notebookProviders.forEach((val) => {\n\t\t\tif (val.extensionData.location) {\n\t\t\t\tret.push(URI.revive(val.extensionData.location));\n\t\t\t}\n\t\t});\n\n\t\treturn ret;\n\t}\n\n\t// --- copy & paste\n\n\tsetToCopy(items: NotebookCellTextModel[], isCopy: boolean) {\n\t\tthis._cutItems = items;\n\t\tthis._lastClipboardIsCopy = isCopy;\n\t}\n\n\tgetToCopy():\n\t\t| { items: NotebookCellTextModel[]; isCopy: boolean }\n\t\t| undefined {\n\t\tif (this._cutItems) {\n\t\t\treturn { items: this._cutItems, isCopy: this._lastClipboardIsCopy };\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["ReuseOrder"]
}
