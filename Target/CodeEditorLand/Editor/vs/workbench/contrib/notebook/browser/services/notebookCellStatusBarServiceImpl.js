import{onUnexpectedExternalError as l}from"../../../../../base/common/errors.js";import{Emitter as s}from"../../../../../base/common/event.js";import{Disposable as m,toDisposable as d}from"../../../../../base/common/lifecycle.js";class c extends m{_serviceBrand;_onDidChangeProviders=this._register(new s);onDidChangeProviders=this._onDidChangeProviders.event;_onDidChangeItems=this._register(new s);onDidChangeItems=this._onDidChangeItems.event;_providers=[];registerCellStatusBarItemProvider(e){this._providers.push(e);let t;return e.onDidChangeStatusBarItems&&(t=e.onDidChangeStatusBarItems(()=>this._onDidChangeItems.fire())),this._onDidChangeProviders.fire(),d(()=>{t?.dispose();const r=this._providers.findIndex(i=>i===e);this._providers.splice(r,1)})}async getStatusBarItemsForCell(e,t,r,i){const a=this._providers.filter(o=>o.viewType===r||o.viewType==="*");return await Promise.all(a.map(async o=>{try{return await o.provideCellStatusBarItems(e,t,i)??{items:[]}}catch(n){return l(n),{items:[]}}}))}}export{c as NotebookCellStatusBarService};
