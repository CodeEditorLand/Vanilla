{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/view/notebookCellAnchor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from '../../../../../base/common/lifecycle.js';\nimport { CellFocusMode, ICellViewModel } from '../notebookBrowser.js';\nimport { CodeCellViewModel } from '../viewModel/codeCellViewModel.js';\nimport { CellKind, NotebookCellExecutionState, NotebookSetting } from '../../common/notebookCommon.js';\nimport { INotebookExecutionStateService } from '../../common/notebookExecutionStateService.js';\nimport { Event } from '../../../../../base/common/event.js';\nimport { ScrollEvent } from '../../../../../base/common/scrollable.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { IListView } from '../../../../../base/browser/ui/list/listView.js';\nimport { CellViewModel } from '../viewModel/notebookViewModelImpl.js';\n\n\nexport class NotebookCellAnchor implements IDisposable {\n\n\tprivate stopAnchoring = false;\n\tprivate executionWatcher: IDisposable | undefined;\n\tprivate scrollWatcher: IDisposable | undefined;\n\n\tconstructor(\n\t\tprivate readonly notebookExecutionStateService: INotebookExecutionStateService,\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\tprivate readonly scrollEvent: Event<ScrollEvent>) {\n\t}\n\n\tpublic shouldAnchor(cellListView: IListView<CellViewModel>, focusedIndex: number, heightDelta: number, executingCellUri: ICellViewModel) {\n\t\tif (cellListView.element(focusedIndex).focusMode === CellFocusMode.Editor) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this.stopAnchoring) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst newFocusBottom = cellListView.elementTop(focusedIndex) + cellListView.elementHeight(focusedIndex) + heightDelta;\n\t\tconst viewBottom = cellListView.renderHeight + cellListView.getScrollTop();\n\t\tconst focusStillVisible = viewBottom > newFocusBottom;\n\t\tconst allowScrolling = this.configurationService.getValue(NotebookSetting.scrollToRevealCell) !== 'none';\n\t\tconst growing = heightDelta > 0;\n\t\tconst autoAnchor = allowScrolling && growing && !focusStillVisible;\n\n\t\tif (autoAnchor) {\n\t\t\tthis.watchAchorDuringExecution(executingCellUri);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic watchAchorDuringExecution(executingCell: ICellViewModel) {\n\t\t// anchor while the cell is executing unless the user scrolls up.\n\t\tif (!this.executionWatcher && executingCell.cellKind === CellKind.Code) {\n\t\t\tconst executionState = this.notebookExecutionStateService.getCellExecution(executingCell.uri);\n\t\t\tif (executionState && executionState.state === NotebookCellExecutionState.Executing) {\n\t\t\t\tthis.executionWatcher = (executingCell as CodeCellViewModel).onDidStopExecution(() => {\n\t\t\t\t\tthis.executionWatcher?.dispose();\n\t\t\t\t\tthis.executionWatcher = undefined;\n\t\t\t\t\tthis.scrollWatcher?.dispose();\n\t\t\t\t\tthis.stopAnchoring = false;\n\t\t\t\t});\n\t\t\t\tthis.scrollWatcher = this.scrollEvent((scrollEvent) => {\n\t\t\t\t\tif (scrollEvent.scrollTop < scrollEvent.oldScrollTop) {\n\t\t\t\t\t\tthis.stopAnchoring = true;\n\t\t\t\t\t\tthis.scrollWatcher?.dispose();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.executionWatcher?.dispose();\n\t\tthis.scrollWatcher?.dispose();\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,mBAAmB;AAC5B,SAAS,eAAe,sBAAsB;AAC9C,SAAS,yBAAyB;AAClC,SAAS,UAAU,4BAA4B,uBAAuB;AACtE,SAAS,sCAAsC;AAC/C,SAAS,aAAa;AACtB,SAAS,mBAAmB;AAC5B,SAAS,6BAA6B;AACtC,SAAS,iBAAiB;AAC1B,SAAS,qBAAqB;AAGvB,MAAM,mBAA0C;AAAA,EAMtD,YACkB,+BACA,sBACA,aAAiC;AAFjC;AACA;AACA;AAAA,EAClB;AAAA,EA3BD,OAiBuD;AAAA;AAAA;AAAA,EAE9C,gBAAgB;AAAA,EAChB;AAAA,EACA;AAAA,EAQD,aAAa,cAAwC,cAAsB,aAAqB,kBAAkC;AACxI,QAAI,aAAa,QAAQ,YAAY,EAAE,cAAc,cAAc,QAAQ;AAC1E,aAAO;AAAA,IACR;AACA,QAAI,KAAK,eAAe;AACvB,aAAO;AAAA,IACR;AAEA,UAAM,iBAAiB,aAAa,WAAW,YAAY,IAAI,aAAa,cAAc,YAAY,IAAI;AAC1G,UAAM,aAAa,aAAa,eAAe,aAAa,aAAa;AACzE,UAAM,oBAAoB,aAAa;AACvC,UAAM,iBAAiB,KAAK,qBAAqB,SAAS,gBAAgB,kBAAkB,MAAM;AAClG,UAAM,UAAU,cAAc;AAC9B,UAAM,aAAa,kBAAkB,WAAW,CAAC;AAEjD,QAAI,YAAY;AACf,WAAK,0BAA0B,gBAAgB;AAC/C,aAAO;AAAA,IACR;AAEA,WAAO;AAAA,EACR;AAAA,EAEO,0BAA0B,eAA+B;AAE/D,QAAI,CAAC,KAAK,oBAAoB,cAAc,aAAa,SAAS,MAAM;AACvE,YAAM,iBAAiB,KAAK,8BAA8B,iBAAiB,cAAc,GAAG;AAC5F,UAAI,kBAAkB,eAAe,UAAU,2BAA2B,WAAW;AACpF,aAAK,mBAAoB,cAAoC,mBAAmB,MAAM;AACrF,eAAK,kBAAkB,QAAQ;AAC/B,eAAK,mBAAmB;AACxB,eAAK,eAAe,QAAQ;AAC5B,eAAK,gBAAgB;AAAA,QACtB,CAAC;AACD,aAAK,gBAAgB,KAAK,YAAY,CAAC,gBAAgB;AACtD,cAAI,YAAY,YAAY,YAAY,cAAc;AACrD,iBAAK,gBAAgB;AACrB,iBAAK,eAAe,QAAQ;AAAA,UAC7B;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD;AAAA,EACD;AAAA,EAEA,UAAgB;AACf,SAAK,kBAAkB,QAAQ;AAC/B,SAAK,eAAe,QAAQ;AAAA,EAC7B;AACD;",
  "names": []
}
