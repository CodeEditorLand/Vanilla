{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/cellDiagnostics/cellDiagnosticsActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from \"../../../../../../base/common/keyCodes.js\";\nimport type { ServicesAccessor } from \"../../../../../../editor/browser/editorExtensions.js\";\nimport { Range } from \"../../../../../../editor/common/core/range.js\";\nimport { CodeActionController } from \"../../../../../../editor/contrib/codeAction/browser/codeActionController.js\";\nimport {\n\tCodeActionKind,\n\tCodeActionTriggerSource,\n} from \"../../../../../../editor/contrib/codeAction/common/types.js\";\nimport { localize, localize2 } from \"../../../../../../nls.js\";\nimport { registerAction2 } from \"../../../../../../platform/actions/common/actions.js\";\nimport { ContextKeyExpr } from \"../../../../../../platform/contextkey/common/contextkey.js\";\nimport { KeybindingWeight } from \"../../../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport {\n\tNOTEBOOK_CELL_EDITOR_FOCUSED,\n\tNOTEBOOK_CELL_FOCUSED,\n\tNOTEBOOK_CELL_HAS_ERROR_DIAGNOSTICS,\n} from \"../../../common/notebookContextKeys.js\";\nimport {\n\ttype INotebookCellActionContext,\n\tNotebookCellAction,\n\tfindTargetCellEditor,\n} from \"../../controller/coreActions.js\";\nimport { CodeCellViewModel } from \"../../viewModel/codeCellViewModel.js\";\n\nexport const OPEN_CELL_FAILURE_ACTIONS_COMMAND_ID =\n\t\"notebook.cell.openFailureActions\";\n\nregisterAction2(\n\tclass extends NotebookCellAction {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: OPEN_CELL_FAILURE_ACTIONS_COMMAND_ID,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"notebookActions.cellFailureActions\",\n\t\t\t\t\t\"Show Cell Failure Actions\",\n\t\t\t\t),\n\t\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\t\tNOTEBOOK_CELL_FOCUSED,\n\t\t\t\t\tNOTEBOOK_CELL_HAS_ERROR_DIAGNOSTICS,\n\t\t\t\t\tNOTEBOOK_CELL_EDITOR_FOCUSED.toNegated(),\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tNOTEBOOK_CELL_FOCUSED,\n\t\t\t\t\t\tNOTEBOOK_CELL_HAS_ERROR_DIAGNOSTICS,\n\t\t\t\t\t\tNOTEBOOK_CELL_EDITOR_FOCUSED.toNegated(),\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Period,\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tasync runWithContext(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tcontext: INotebookCellActionContext,\n\t\t): Promise<void> {\n\t\t\tif (context.cell instanceof CodeCellViewModel) {\n\t\t\t\tconst error = context.cell.excecutionError.get();\n\t\t\t\tif (error?.location) {\n\t\t\t\t\tconst location = Range.lift({\n\t\t\t\t\t\tstartLineNumber: error.location.startLineNumber + 1,\n\t\t\t\t\t\tstartColumn: error.location.startColumn + 1,\n\t\t\t\t\t\tendLineNumber: error.location.endLineNumber + 1,\n\t\t\t\t\t\tendColumn: error.location.endColumn + 1,\n\t\t\t\t\t});\n\t\t\t\t\tcontext.notebookEditor.setCellEditorSelection(\n\t\t\t\t\t\tcontext.cell,\n\t\t\t\t\t\tRange.lift(location),\n\t\t\t\t\t);\n\t\t\t\t\tconst editor = findTargetCellEditor(context, context.cell);\n\t\t\t\t\tif (editor) {\n\t\t\t\t\t\tconst controller = CodeActionController.get(editor);\n\t\t\t\t\t\tcontroller?.manualTriggerAtCurrentPosition(\n\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\"cellCommands.quickFix.noneMessage\",\n\t\t\t\t\t\t\t\t\"No code actions available\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tCodeActionTriggerSource.Default,\n\t\t\t\t\t\t\t{ include: CodeActionKind.QuickFix },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n);\n"],
  "mappings": "AAKA,SAAS,SAAS,cAAc;AAEhC,SAAS,aAAa;AACtB,SAAS,4BAA4B;AACrC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,UAAU,iBAAiB;AACpC,SAAS,uBAAuB;AAChC,SAAS,sBAAsB;AAC/B,SAAS,wBAAwB;AACjC;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP;AAAA,EAEC;AAAA,EACA;AAAA,OACM;AACP,SAAS,yBAAyB;AAE3B,MAAM,uCACZ;AAED;AAAA,EACC,cAAc,mBAAmB;AAAA,IAChC,cAAc;AACb,YAAM;AAAA,QACL,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,cAAc,eAAe;AAAA,UAC5B;AAAA,UACA;AAAA,UACA,6BAA6B,UAAU;AAAA,QACxC;AAAA,QACA,IAAI;AAAA,QACJ,YAAY;AAAA,UACX,MAAM,eAAe;AAAA,YACpB;AAAA,YACA;AAAA,YACA,6BAA6B,UAAU;AAAA,UACxC;AAAA,UACA,SAAS,OAAO,UAAU,QAAQ;AAAA,UAClC,QAAQ,iBAAiB;AAAA,QAC1B;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,MAAM,eACL,UACA,SACgB;AAChB,UAAI,QAAQ,gBAAgB,mBAAmB;AAC9C,cAAM,QAAQ,QAAQ,KAAK,gBAAgB,IAAI;AAC/C,YAAI,OAAO,UAAU;AACpB,gBAAM,WAAW,MAAM,KAAK;AAAA,YAC3B,iBAAiB,MAAM,SAAS,kBAAkB;AAAA,YAClD,aAAa,MAAM,SAAS,cAAc;AAAA,YAC1C,eAAe,MAAM,SAAS,gBAAgB;AAAA,YAC9C,WAAW,MAAM,SAAS,YAAY;AAAA,UACvC,CAAC;AACD,kBAAQ,eAAe;AAAA,YACtB,QAAQ;AAAA,YACR,MAAM,KAAK,QAAQ;AAAA,UACpB;AACA,gBAAM,SAAS,qBAAqB,SAAS,QAAQ,IAAI;AACzD,cAAI,QAAQ;AACX,kBAAM,aAAa,qBAAqB,IAAI,MAAM;AAClD,wBAAY;AAAA,cACX;AAAA,gBACC;AAAA,gBACA;AAAA,cACD;AAAA,cACA,wBAAwB;AAAA,cACxB,EAAE,SAAS,eAAe,SAAS;AAAA,YACpC;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;",
  "names": []
}
