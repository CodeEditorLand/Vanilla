{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/services/notebookCellStatusBarServiceImpl.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { CancellationToken } from \"../../../../../base/common/cancellation.js\";\nimport { onUnexpectedExternalError } from \"../../../../../base/common/errors.js\";\nimport { Emitter, type Event } from \"../../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../../../../base/common/lifecycle.js\";\nimport type { URI } from \"../../../../../base/common/uri.js\";\nimport type { INotebookCellStatusBarService } from \"../../common/notebookCellStatusBarService.js\";\nimport type {\n\tINotebookCellStatusBarItemList,\n\tINotebookCellStatusBarItemProvider,\n} from \"../../common/notebookCommon.js\";\n\nexport class NotebookCellStatusBarService\n\textends Disposable\n\timplements INotebookCellStatusBarService\n{\n\treadonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeProviders = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onDidChangeProviders: Event<void> =\n\t\tthis._onDidChangeProviders.event;\n\n\tprivate readonly _onDidChangeItems = this._register(new Emitter<void>());\n\treadonly onDidChangeItems: Event<void> = this._onDidChangeItems.event;\n\n\tprivate readonly _providers: INotebookCellStatusBarItemProvider[] = [];\n\n\tregisterCellStatusBarItemProvider(\n\t\tprovider: INotebookCellStatusBarItemProvider,\n\t): IDisposable {\n\t\tthis._providers.push(provider);\n\t\tlet changeListener: IDisposable | undefined;\n\t\tif (provider.onDidChangeStatusBarItems) {\n\t\t\tchangeListener = provider.onDidChangeStatusBarItems(() =>\n\t\t\t\tthis._onDidChangeItems.fire(),\n\t\t\t);\n\t\t}\n\n\t\tthis._onDidChangeProviders.fire();\n\n\t\treturn toDisposable(() => {\n\t\t\tchangeListener?.dispose();\n\t\t\tconst idx = this._providers.findIndex((p) => p === provider);\n\t\t\tthis._providers.splice(idx, 1);\n\t\t});\n\t}\n\n\tasync getStatusBarItemsForCell(\n\t\tdocUri: URI,\n\t\tcellIndex: number,\n\t\tviewType: string,\n\t\ttoken: CancellationToken,\n\t): Promise<INotebookCellStatusBarItemList[]> {\n\t\tconst providers = this._providers.filter(\n\t\t\t(p) => p.viewType === viewType || p.viewType === \"*\",\n\t\t);\n\t\treturn await Promise.all(\n\t\t\tproviders.map(async (p) => {\n\t\t\t\ttry {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t(await p.provideCellStatusBarItems(\n\t\t\t\t\t\t\tdocUri,\n\t\t\t\t\t\t\tcellIndex,\n\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t)) ?? { items: [] }\n\t\t\t\t\t);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedExternalError(e);\n\t\t\t\t\treturn { items: [] };\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n}\n"],
  "mappings": ";;AAMA,SAAS,iCAAiC;AAC1C,SAAS,eAA2B;AACpC;AAAA,EACC;AAAA,EAEA;AAAA,OACM;AAQA,MAAM,qCACJ,WAET;AAAA,EAvBA,OAuBA;AAAA;AAAA;AAAA,EACU;AAAA,EAEQ,wBAAwB,KAAK;AAAA,IAC7C,IAAI,QAAc;AAAA,EACnB;AAAA,EACS,uBACR,KAAK,sBAAsB;AAAA,EAEX,oBAAoB,KAAK,UAAU,IAAI,QAAc,CAAC;AAAA,EAC9D,mBAAgC,KAAK,kBAAkB;AAAA,EAE/C,aAAmD,CAAC;AAAA,EAErE,kCACC,UACc;AACd,SAAK,WAAW,KAAK,QAAQ;AAC7B,QAAI;AACJ,QAAI,SAAS,2BAA2B;AACvC,uBAAiB,SAAS;AAAA,QAA0B,MACnD,KAAK,kBAAkB,KAAK;AAAA,MAC7B;AAAA,IACD;AAEA,SAAK,sBAAsB,KAAK;AAEhC,WAAO,aAAa,MAAM;AACzB,sBAAgB,QAAQ;AACxB,YAAM,MAAM,KAAK,WAAW,UAAU,CAAC,MAAM,MAAM,QAAQ;AAC3D,WAAK,WAAW,OAAO,KAAK,CAAC;AAAA,IAC9B,CAAC;AAAA,EACF;AAAA,EAEA,MAAM,yBACL,QACA,WACA,UACA,OAC4C;AAC5C,UAAM,YAAY,KAAK,WAAW;AAAA,MACjC,CAAC,MAAM,EAAE,aAAa,YAAY,EAAE,aAAa;AAAA,IAClD;AACA,WAAO,MAAM,QAAQ;AAAA,MACpB,UAAU,IAAI,OAAO,MAAM;AAC1B,YAAI;AACH,iBACE,MAAM,EAAE;AAAA,YACR;AAAA,YACA;AAAA,YACA;AAAA,UACD,KAAM,EAAE,OAAO,CAAC,EAAE;AAAA,QAEpB,SAAS,GAAG;AACX,oCAA0B,CAAC;AAC3B,iBAAO,EAAE,OAAO,CAAC,EAAE;AAAA,QACpB;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD;AACD;",
  "names": []
}
