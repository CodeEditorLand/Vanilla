import{Codicon as D}from"../../../../../base/common/codicons.js";import{KeyCode as x,KeyMod as S}from"../../../../../base/common/keyCodes.js";import{IBulkEditService as M,ResourceTextEdit as q}from"../../../../../editor/browser/services/bulkEditService.js";import{ITextResourceConfigurationService as U}from"../../../../../editor/common/services/textResourceConfiguration.js";import{localize as g,localize2 as v}from"../../../../../nls.js";import{Action2 as c,MenuId as u,registerAction2 as l}from"../../../../../platform/actions/common/actions.js";import{IConfigurationService as A}from"../../../../../platform/configuration/common/configuration.js";import{Extensions as K}from"../../../../../platform/configuration/common/configurationRegistry.js";import{ContextKeyExpr as i}from"../../../../../platform/contextkey/common/contextkey.js";import{TextEditorSelectionRevealType as B}from"../../../../../platform/editor/common/editor.js";import{KeybindingWeight as R}from"../../../../../platform/keybinding/common/keybindingsRegistry.js";import{Registry as L}from"../../../../../platform/registry/common/platform.js";import{ActiveEditorContext as s}from"../../../../common/contextkeys.js";import{DEFAULT_EDITOR_ASSOCIATION as W}from"../../../../common/editor.js";import{IEditorService as E}from"../../../../services/editor/common/editorService.js";import{CellEditType as b,NOTEBOOK_DIFF_EDITOR_ID as F}from"../../common/notebookCommon.js";import{nextChangeIcon as H,openAsTextIcon as j,previousChangeIcon as G,renderOutputIcon as Y,revertIcon as T,toggleWhitespace as z}from"../notebookIcons.js";import{SideBySideDiffElementViewModel as h}from"./diffElementViewModel.js";import{NotebookTextDiffEditor as f}from"./notebookDiffEditor.js";import{NOTEBOOK_DIFF_CELL_IGNORE_WHITESPACE_KEY as X,NOTEBOOK_DIFF_CELL_INPUT as k,NOTEBOOK_DIFF_CELL_PROPERTY as C,NOTEBOOK_DIFF_CELL_PROPERTY_EXPANDED as J,NOTEBOOK_DIFF_HAS_UNCHANGED_CELLS as y,NOTEBOOK_DIFF_ITEM_DIFF_STATE as O,NOTEBOOK_DIFF_ITEM_KIND as w,NOTEBOOK_DIFF_UNCHANGED_CELLS_HIDDEN as N}from"./notebookDiffEditorBrowser.js";import{NotebookMultiTextDiffEditor as a}from"./notebookMultiDiffEditor.js";l(class extends c{constructor(){super({id:"notebook.diff.openFile",icon:D.goToFile,title:v("notebook.diff.openFile","Open File"),precondition:i.or(s.isEqualTo(f.ID),s.isEqualTo(a.ID)),menu:[{id:u.EditorTitle,group:"navigation",when:i.or(s.isEqualTo(f.ID),s.isEqualTo(a.ID))}]})}async run(n){const e=n.get(E),o=e.activeEditorPane;if(o&&(o instanceof f||o instanceof a)){const t=o.input.modified.resource;await e.openEditor({resource:t})}}}),l(class extends c{constructor(){super({id:"notebook.diff.cell.toggleCollapseUnchangedRegions",title:v("notebook.diff.cell.toggleCollapseUnchangedRegions","Toggle Collapse Unchanged Regions"),icon:D.map,toggled:i.has("config.diffEditor.hideUnchangedRegions.enabled"),precondition:s.isEqualTo(f.ID),menu:{id:u.EditorTitle,group:"navigation",when:s.isEqualTo(f.ID)}})}run(n,...e){const o=n.get(A),r=!o.getValue("diffEditor.hideUnchangedRegions.enabled");o.updateValue("diffEditor.hideUnchangedRegions.enabled",r)}}),l(class extends c{constructor(){super({id:"notebook.diff.switchToText",icon:j,title:v("notebook.diff.switchToText","Open Text Diff Editor"),precondition:i.or(s.isEqualTo(f.ID),s.isEqualTo(a.ID)),menu:[{id:u.EditorTitle,group:"navigation",when:i.or(s.isEqualTo(f.ID),s.isEqualTo(a.ID))}]})}async run(n){const e=n.get(E),o=e.activeEditorPane;if(o&&(o instanceof f||o instanceof a)){const r=o.input;await e.openEditor({original:{resource:r.original.resource},modified:{resource:r.resource},label:r.getName(),options:{preserveFocus:!1,override:W.id}})}}}),l(class extends c{constructor(){super({id:"notebook.diffEditor.showUnchangedCells",title:v("showUnchangedCells","Show Unchanged Cells"),icon:D.unfold,precondition:i.and(s.isEqualTo(a.ID),i.has(y.key)),menu:{when:i.and(s.isEqualTo(a.ID),i.has(y.key),i.equals(N.key,!0)),id:u.EditorTitle,order:22,group:"navigation"}})}run(n,...e){const o=n.get(E).activeEditorPane;o&&o instanceof a&&o.showUnchanged()}}),l(class extends c{constructor(){super({id:"notebook.diffEditor.hideUnchangedCells",title:v("hideUnchangedCells","Hide Unchanged Cells"),icon:D.fold,precondition:i.and(s.isEqualTo(a.ID),i.has(y.key)),menu:{when:i.and(s.isEqualTo(a.ID),i.has(y.key),i.equals(N.key,!1)),id:u.EditorTitle,order:22,group:"navigation"}})}run(n,...e){const o=n.get(E).activeEditorPane;o&&o instanceof a&&o.hideUnchanged()}}),l(class extends c{constructor(){super({id:"notebook.diffEditor.2.goToCell",title:v("goToCell","Go To Cell"),icon:D.goToFile,menu:{when:i.and(s.isEqualTo(a.ID),i.equals(w.key,"Cell"),i.notEquals(O.key,"delete")),id:u.MultiDiffEditorFileToolbar,order:0,group:"navigation"}})}async run(e,...o){const r=o[0],t=e.get(E);t.activeEditorPane instanceof a&&await t.openEditor({resource:r,options:{selectionRevealType:B.CenterIfOutsideViewport}})}});const _=g("notebook.diff.cell.revertInput","Revert Input");l(class extends c{constructor(){super({id:"notebook.diffEditor.2.cell.revertInput",title:_,icon:T,menu:{when:i.and(s.isEqualTo(a.ID),i.equals(w.key,"Cell"),i.equals(O.key,"modified")),id:u.MultiDiffEditorFileToolbar,order:2,group:"navigation"}})}async run(n,...e){const o=e[0],t=n.get(E).activeEditorPane;if(!(t instanceof a))return;const d=t.getDiffElementViewModel(o);if(d&&d instanceof h){const p=d.modified,m=d.original;if(!m||!p)return;await n.get(M).apply([new q(p.uri,{range:p.textModel.getFullModelRange(),text:m.textModel.getValue()})],{quotableLabel:"Revert Notebook Cell Content Change"})}}});const Q=g("notebook.diff.cell.revertOutputs","Revert Outputs");l(class extends c{constructor(){super({id:"notebook.diffEditor.2.cell.revertOutputs",title:Q,icon:T,f1:!1,menu:{when:i.and(s.isEqualTo(a.ID),i.equals(w.key,"Output"),i.equals(O.key,"modified")),id:u.MultiDiffEditorFileToolbar,order:2,group:"navigation"}})}async run(n,...e){const o=e[0],t=n.get(E).activeEditorPane;if(!(t instanceof a))return;const d=t.getDiffElementViewModel(o);if(d&&d instanceof h){const p=d.original,m=d.modifiedDocument.cells.findIndex(I=>I.handle===d.modified.handle);if(m===-1)return;d.mainDocumentTextModel.applyEdits([{editType:b.Output,index:m,outputs:p.outputs}],!0,void 0,()=>{},void 0,!0)}}});const P=g("notebook.diff.cell.revertMetadata","Revert Metadata");l(class extends c{constructor(){super({id:"notebook.diffEditor.2.cell.revertMetadata",title:P,icon:T,f1:!1,menu:{when:i.and(s.isEqualTo(a.ID),i.equals(w.key,"Metadata"),i.equals(O.key,"modified")),id:u.MultiDiffEditorFileToolbar,order:2,group:"navigation"}})}async run(n,...e){const o=e[0],t=n.get(E).activeEditorPane;if(!(t instanceof a))return;const d=t.getDiffElementViewModel(o);if(d&&d instanceof h){const p=d.original,m=d.modifiedDocument.cells.findIndex(I=>I.handle===d.modified.handle);if(m===-1)return;d.mainDocumentTextModel.applyEdits([{editType:b.Metadata,index:m,metadata:p.metadata}],!0,void 0,()=>{},void 0,!0)}}}),l(class extends c{constructor(){super({id:"notebook.diff.cell.revertMetadata",title:P,icon:T,f1:!1,menu:{id:u.NotebookDiffCellMetadataTitle,when:C},precondition:C})}run(n,e){if(!e||!(e instanceof h))return;const o=e.original,r=e.modified,t=e.mainDocumentTextModel.cells.indexOf(r.textModel);if(t===-1)return;const d=[{editType:b.Metadata,index:t,metadata:o.metadata}];e.original.language&&e.modified.language!==e.original.language&&d.push({editType:b.CellLanguage,index:t,language:e.original.language}),e.modifiedDocument.applyEdits(d,!0,void 0,()=>{},void 0,!0)}}),l(class extends c{constructor(){super({id:"notebook.diff.cell.switchOutputRenderingStyleToText",title:g("notebook.diff.cell.switchOutputRenderingStyleToText","Switch Output Rendering"),icon:Y,f1:!1,menu:{id:u.NotebookDiffCellOutputsTitle,when:J}})}run(n,e){e&&(e.renderOutput=!e.renderOutput)}}),l(class extends c{constructor(){super({id:"notebook.diff.cell.revertOutputs",title:g("notebook.diff.cell.revertOutputs","Revert Outputs"),icon:T,f1:!1,menu:{id:u.NotebookDiffCellOutputsTitle,when:C},precondition:C})}run(n,e){if(!e||!(e instanceof h))return;const o=e.original,r=e.modified,t=e.mainDocumentTextModel.cells.indexOf(r.textModel);t!==-1&&e.mainDocumentTextModel.applyEdits([{editType:b.Output,index:t,outputs:o.outputs}],!0,void 0,()=>{},void 0,!0)}}),l(class extends c{constructor(){super({id:"notebook.toggle.diff.cell.ignoreTrimWhitespace",title:g("ignoreTrimWhitespace.label","Show Leading/Trailing Whitespace Differences"),icon:z,f1:!1,menu:{id:u.NotebookDiffCellInputTitle,when:k,order:1},precondition:k,toggled:i.equals(X,!1)})}run(n,e){const o=e;if(!o?.modified)return;const r=o.modified.uri,t=n.get(U),d="diffEditor.ignoreTrimWhitespace",p=t.getValue(r,d);t.updateValue(r,d,!p)}}),l(class extends c{constructor(){super({id:"notebook.diff.cell.revertInput",title:_,icon:T,f1:!1,menu:{id:u.NotebookDiffCellInputTitle,when:k,order:2},precondition:k})}run(n,e){if(!e)return;const o=e.original,r=e.modified;return!o||!r?void 0:n.get(M).apply([new q(r.uri,{range:r.textModel.getFullModelRange(),text:o.textModel.getValue()})],{quotableLabel:"Revert Notebook Cell Content Change"})}});class V extends c{constructor(o,r,t,d,p,m,I){super({id:o,title:r,precondition:t,menu:[{id:u.EditorTitle,group:"notebook",when:t,order:p}],toggled:d});this.toggleOutputs=m;this.toggleMetadata=I}async run(o){const r=o.get(A);if(this.toggleOutputs!==void 0){const t=r.getValue("notebook.diff.ignoreOutputs");r.updateValue("notebook.diff.ignoreOutputs",!t)}if(this.toggleMetadata!==void 0){const t=r.getValue("notebook.diff.ignoreMetadata");r.updateValue("notebook.diff.ignoreMetadata",!t)}}}l(class extends V{constructor(){super("notebook.diff.showOutputs",v("notebook.diff.showOutputs","Show Outputs Differences"),i.or(s.isEqualTo(f.ID),s.isEqualTo(a.ID)),i.notEquals("config.notebook.diff.ignoreOutputs",!0),2,!0,void 0)}}),l(class extends V{constructor(){super("notebook.diff.showMetadata",v("notebook.diff.showMetadata","Show Metadata Differences"),i.or(s.isEqualTo(f.ID),s.isEqualTo(a.ID)),i.notEquals("config.notebook.diff.ignoreMetadata",!0),1,void 0,!0)}}),l(class extends c{constructor(){super({id:"notebook.diff.action.previous",title:g("notebook.diff.action.previous.title","Show Previous Change"),icon:G,f1:!1,keybinding:{primary:S.Shift|S.Alt|x.F3,weight:R.WorkbenchContrib,when:s.isEqualTo(f.ID)},menu:{id:u.EditorTitle,group:"navigation",when:s.isEqualTo(f.ID)}})}run(n){const e=n.get(E);if(e.activeEditorPane?.getId()!==F)return;e.activeEditorPane.getControl()?.previousChange()}}),l(class extends c{constructor(){super({id:"notebook.diff.action.next",title:g("notebook.diff.action.next.title","Show Next Change"),icon:H,f1:!1,keybinding:{primary:S.Alt|x.F3,weight:R.WorkbenchContrib,when:s.isEqualTo(f.ID)},menu:{id:u.EditorTitle,group:"navigation",when:s.isEqualTo(f.ID)}})}run(n){const e=n.get(E);if(e.activeEditorPane?.getId()!==F)return;e.activeEditorPane.getControl()?.nextChange()}}),L.as(K.Configuration).registerConfiguration({id:"notebook",order:100,type:"object",properties:{"notebook.diff.ignoreMetadata":{type:"boolean",default:!1,markdownDescription:g("notebook.diff.ignoreMetadata","Hide Metadata Differences")},"notebook.diff.ignoreOutputs":{type:"boolean",default:!1,markdownDescription:g("notebook.diff.ignoreOutputs","Hide Outputs Differences")}}});
