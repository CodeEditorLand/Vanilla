{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/view/notebookCellList.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from \"../../../../../base/browser/dom.js\";\nimport { FastDomNode } from \"../../../../../base/browser/fastDomNode.js\";\nimport type { IMouseWheelEvent } from \"../../../../../base/browser/mouseEvent.js\";\nimport {\n\ttype IListRenderer,\n\ttype IListVirtualDelegate,\n\tListError,\n} from \"../../../../../base/browser/ui/list/list.js\";\nimport type {\n\tIListView,\n\tIListViewOptions,\n} from \"../../../../../base/browser/ui/list/listView.js\";\nimport type {\n\tIListStyles,\n\tIStyleController,\n} from \"../../../../../base/browser/ui/list/listWidget.js\";\nimport { Emitter, Event } from \"../../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\tMutableDisposable,\n} from \"../../../../../base/common/lifecycle.js\";\nimport { clamp } from \"../../../../../base/common/numbers.js\";\nimport { isMacintosh } from \"../../../../../base/common/platform.js\";\nimport type { ScrollEvent } from \"../../../../../base/common/scrollable.js\";\nimport type { ISplice } from \"../../../../../base/common/sequence.js\";\nimport type { Range } from \"../../../../../editor/common/core/range.js\";\nimport type { Selection } from \"../../../../../editor/common/core/selection.js\";\nimport { TrackedRangeStickiness } from \"../../../../../editor/common/model.js\";\nimport { PrefixSumComputer } from \"../../../../../editor/common/model/prefixSumComputer.js\";\nimport { IConfigurationService } from \"../../../../../platform/configuration/common/configuration.js\";\nimport type { IContextKeyService } from \"../../../../../platform/contextkey/common/contextkey.js\";\nimport { IInstantiationService } from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tIListService,\n\ttype IWorkbenchListOptions,\n\tWorkbenchList,\n} from \"../../../../../platform/list/browser/listService.js\";\nimport {\n\tCellKind,\n\tNOTEBOOK_EDITOR_CURSOR_BOUNDARY,\n\tNOTEBOOK_EDITOR_CURSOR_LINE_BOUNDARY,\n\tSelectionStateType,\n\tdiff,\n} from \"../../common/notebookCommon.js\";\nimport { NOTEBOOK_CELL_LIST_FOCUSED } from \"../../common/notebookContextKeys.js\";\nimport { INotebookExecutionStateService } from \"../../common/notebookExecutionStateService.js\";\nimport {\n\ttype ICellRange,\n\tcellRangesEqual,\n\tcellRangesToIndexes,\n\treduceCellRanges,\n} from \"../../common/notebookRange.js\";\nimport {\n\tCellEditState,\n\tCellFocusMode,\n\tCellRevealRangeType,\n\tCellRevealType,\n\tCursorAtBoundary,\n\tCursorAtLineBoundary,\n\ttype ICellOutputViewModel,\n\ttype ICellViewModel,\n\ttype INotebookViewZoneChangeAccessor,\n} from \"../notebookBrowser.js\";\nimport type { NotebookOptions } from \"../notebookOptions.js\";\nimport { MarkupCellViewModel } from \"../viewModel/markupCellViewModel.js\";\nimport type {\n\tCellViewModel,\n\tNotebookViewModel,\n} from \"../viewModel/notebookViewModelImpl.js\";\nimport { NotebookViewZones } from \"../viewParts/notebookViewZones.js\";\nimport { NotebookCellAnchor } from \"./notebookCellAnchor.js\";\nimport { NotebookCellListView } from \"./notebookCellListView.js\";\nimport type {\n\tBaseCellRenderTemplate,\n\tINotebookCellList,\n} from \"./notebookRenderingCommon.js\";\n\nenum CellRevealPosition {\n\tTop = 0,\n\tCenter = 1,\n\tBottom = 2,\n\tNearTop = 3,\n}\n\nfunction getVisibleCells(cells: CellViewModel[], hiddenRanges: ICellRange[]) {\n\tif (!hiddenRanges.length) {\n\t\treturn cells;\n\t}\n\n\tlet start = 0;\n\tlet hiddenRangeIndex = 0;\n\tconst result: CellViewModel[] = [];\n\n\twhile (start < cells.length && hiddenRangeIndex < hiddenRanges.length) {\n\t\tif (start < hiddenRanges[hiddenRangeIndex].start) {\n\t\t\tresult.push(\n\t\t\t\t...cells.slice(start, hiddenRanges[hiddenRangeIndex].start),\n\t\t\t);\n\t\t}\n\n\t\tstart = hiddenRanges[hiddenRangeIndex].end + 1;\n\t\thiddenRangeIndex++;\n\t}\n\n\tif (start < cells.length) {\n\t\tresult.push(...cells.slice(start));\n\t}\n\n\treturn result;\n}\n\nexport const NOTEBOOK_WEBVIEW_BOUNDARY = 5000;\n\nfunction validateWebviewBoundary(element: HTMLElement) {\n\tconst webviewTop = 0 - (Number.parseInt(element.style.top, 10) || 0);\n\treturn webviewTop >= 0 && webviewTop <= NOTEBOOK_WEBVIEW_BOUNDARY * 2;\n}\n\nexport class NotebookCellList\n\textends WorkbenchList<CellViewModel>\n\timplements IDisposable, IStyleController, INotebookCellList\n{\n\tprotected override readonly view!: NotebookCellListView<CellViewModel>;\n\tprivate viewZones!: NotebookViewZones;\n\tget onWillScroll(): Event<ScrollEvent> {\n\t\treturn this.view.onWillScroll;\n\t}\n\n\tget rowsContainer(): HTMLElement {\n\t\treturn this.view.containerDomNode;\n\t}\n\n\tget scrollableElement(): HTMLElement {\n\t\treturn this.view.scrollableElementDomNode;\n\t}\n\tprivate _previousFocusedElements: readonly CellViewModel[] = [];\n\tprivate readonly _localDisposableStore = new DisposableStore();\n\tprivate readonly _viewModelStore = new DisposableStore();\n\tprivate styleElement?: HTMLStyleElement;\n\tprivate _notebookCellAnchor: NotebookCellAnchor;\n\n\tprivate readonly _onDidRemoveOutputs = this._localDisposableStore.add(\n\t\tnew Emitter<readonly ICellOutputViewModel[]>(),\n\t);\n\treadonly onDidRemoveOutputs = this._onDidRemoveOutputs.event;\n\n\tprivate readonly _onDidHideOutputs = this._localDisposableStore.add(\n\t\tnew Emitter<readonly ICellOutputViewModel[]>(),\n\t);\n\treadonly onDidHideOutputs = this._onDidHideOutputs.event;\n\n\tprivate readonly _onDidRemoveCellsFromView = this._localDisposableStore.add(\n\t\tnew Emitter<readonly ICellViewModel[]>(),\n\t);\n\treadonly onDidRemoveCellsFromView = this._onDidRemoveCellsFromView.event;\n\n\tprivate _viewModel: NotebookViewModel | null = null;\n\tget viewModel(): NotebookViewModel | null {\n\t\treturn this._viewModel;\n\t}\n\tprivate _hiddenRangeIds: string[] = [];\n\tprivate hiddenRangesPrefixSum: PrefixSumComputer | null = null;\n\n\tprivate readonly _onDidChangeVisibleRanges = this._localDisposableStore.add(\n\t\tnew Emitter<void>(),\n\t);\n\n\tonDidChangeVisibleRanges: Event<void> =\n\t\tthis._onDidChangeVisibleRanges.event;\n\tprivate _visibleRanges: ICellRange[] = [];\n\n\tget visibleRanges() {\n\t\treturn this._visibleRanges;\n\t}\n\n\tset visibleRanges(ranges: ICellRange[]) {\n\t\tif (cellRangesEqual(this._visibleRanges, ranges)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._visibleRanges = ranges;\n\t\tthis._onDidChangeVisibleRanges.fire();\n\t}\n\n\tprivate _isDisposed = false;\n\n\tget isDisposed() {\n\t\treturn this._isDisposed;\n\t}\n\n\tprivate _isInLayout = false;\n\n\tprivate _webviewElement: FastDomNode<HTMLElement> | null = null;\n\n\tget webviewElement() {\n\t\treturn this._webviewElement;\n\t}\n\n\tget inRenderingTransaction() {\n\t\treturn this.view.inRenderingTransaction;\n\t}\n\n\tconstructor(\n\t\tprivate listUser: string,\n\t\tcontainer: HTMLElement,\n\t\tprivate readonly notebookOptions: NotebookOptions,\n\t\tdelegate: IListVirtualDelegate<CellViewModel>,\n\t\trenderers: IListRenderer<CellViewModel, BaseCellRenderTemplate>[],\n\t\tcontextKeyService: IContextKeyService,\n\t\toptions: IWorkbenchListOptions<CellViewModel>,\n\t\t@IListService listService: IListService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@INotebookExecutionStateService\n\t\tnotebookExecutionStateService: INotebookExecutionStateService,\n\t) {\n\t\tsuper(\n\t\t\tlistUser,\n\t\t\tcontainer,\n\t\t\tdelegate,\n\t\t\trenderers,\n\t\t\toptions,\n\t\t\tcontextKeyService,\n\t\t\tlistService,\n\t\t\tconfigurationService,\n\t\t\tinstantiationService,\n\t\t);\n\t\tNOTEBOOK_CELL_LIST_FOCUSED.bindTo(this.contextKeyService).set(true);\n\t\tthis._previousFocusedElements = this.getFocusedElements();\n\t\tthis._localDisposableStore.add(\n\t\t\tthis.onDidChangeFocus((e) => {\n\t\t\t\tthis._previousFocusedElements.forEach((element) => {\n\t\t\t\t\tif (e.elements.indexOf(element) < 0) {\n\t\t\t\t\t\telement.onDeselect();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis._previousFocusedElements = e.elements;\n\t\t\t}),\n\t\t);\n\n\t\tconst notebookEditorCursorAtBoundaryContext =\n\t\t\tNOTEBOOK_EDITOR_CURSOR_BOUNDARY.bindTo(contextKeyService);\n\t\tnotebookEditorCursorAtBoundaryContext.set(\"none\");\n\n\t\tconst notebookEditorCursorAtLineBoundaryContext =\n\t\t\tNOTEBOOK_EDITOR_CURSOR_LINE_BOUNDARY.bindTo(contextKeyService);\n\t\tnotebookEditorCursorAtLineBoundaryContext.set(\"none\");\n\n\t\tconst cursorSelectionListener = this._localDisposableStore.add(\n\t\t\tnew MutableDisposable(),\n\t\t);\n\t\tconst textEditorAttachListener = this._localDisposableStore.add(\n\t\t\tnew MutableDisposable(),\n\t\t);\n\n\t\tthis._notebookCellAnchor = new NotebookCellAnchor(\n\t\t\tnotebookExecutionStateService,\n\t\t\tconfigurationService,\n\t\t\tthis.onDidScroll,\n\t\t);\n\n\t\tconst recomputeContext = (element: CellViewModel) => {\n\t\t\tswitch (element.cursorAtBoundary()) {\n\t\t\t\tcase CursorAtBoundary.Both:\n\t\t\t\t\tnotebookEditorCursorAtBoundaryContext.set(\"both\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase CursorAtBoundary.Top:\n\t\t\t\t\tnotebookEditorCursorAtBoundaryContext.set(\"top\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase CursorAtBoundary.Bottom:\n\t\t\t\t\tnotebookEditorCursorAtBoundaryContext.set(\"bottom\");\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tnotebookEditorCursorAtBoundaryContext.set(\"none\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tswitch (element.cursorAtLineBoundary()) {\n\t\t\t\tcase CursorAtLineBoundary.Both:\n\t\t\t\t\tnotebookEditorCursorAtLineBoundaryContext.set(\"both\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase CursorAtLineBoundary.Start:\n\t\t\t\t\tnotebookEditorCursorAtLineBoundaryContext.set(\"start\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase CursorAtLineBoundary.End:\n\t\t\t\t\tnotebookEditorCursorAtLineBoundaryContext.set(\"end\");\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tnotebookEditorCursorAtLineBoundaryContext.set(\"none\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn;\n\t\t};\n\n\t\t// Cursor Boundary context\n\t\tthis._localDisposableStore.add(\n\t\t\tthis.onDidChangeFocus((e) => {\n\t\t\t\tif (e.elements.length) {\n\t\t\t\t\t// we only validate the first focused element\n\t\t\t\t\tconst focusedElement = e.elements[0];\n\n\t\t\t\t\tcursorSelectionListener.value =\n\t\t\t\t\t\tfocusedElement.onDidChangeState((e) => {\n\t\t\t\t\t\t\tif (e.selectionChanged) {\n\t\t\t\t\t\t\t\trecomputeContext(focusedElement);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\ttextEditorAttachListener.value =\n\t\t\t\t\t\tfocusedElement.onDidChangeEditorAttachState(() => {\n\t\t\t\t\t\t\tif (focusedElement.editorAttached) {\n\t\t\t\t\t\t\t\trecomputeContext(focusedElement);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\trecomputeContext(focusedElement);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// reset context\n\t\t\t\tnotebookEditorCursorAtBoundaryContext.set(\"none\");\n\t\t\t}),\n\t\t);\n\n\t\tthis._localDisposableStore.add(\n\t\t\tthis.view.onMouseDblClick(() => {\n\t\t\t\tconst focus = this.getFocusedElements()[0];\n\n\t\t\t\tif (\n\t\t\t\t\tfocus &&\n\t\t\t\t\tfocus.cellKind === CellKind.Markup &&\n\t\t\t\t\t!focus.isInputCollapsed &&\n\t\t\t\t\t!this._viewModel?.options.isReadOnly\n\t\t\t\t) {\n\t\t\t\t\t// scroll the cell into view if out of viewport\n\t\t\t\t\tconst focusedCellIndex =\n\t\t\t\t\t\tthis._getViewIndexUpperBound(focus);\n\n\t\t\t\t\tif (focusedCellIndex >= 0) {\n\t\t\t\t\t\tthis._revealInViewWithMinimalScrolling(\n\t\t\t\t\t\t\tfocusedCellIndex,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tfocus.updateEditState(CellEditState.Editing, \"dbclick\");\n\t\t\t\t\tfocus.focusMode = CellFocusMode.Editor;\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// update visibleRanges\n\t\tconst updateVisibleRanges = () => {\n\t\t\tif (!this.view.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst top = this.getViewScrollTop();\n\t\t\tconst bottom = this.getViewScrollBottom();\n\t\t\tif (top >= bottom) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst topViewIndex = clamp(\n\t\t\t\tthis.view.indexAt(top),\n\t\t\t\t0,\n\t\t\t\tthis.view.length - 1,\n\t\t\t);\n\t\t\tconst topElement = this.view.element(topViewIndex);\n\t\t\tconst topModelIndex = this._viewModel!.getCellIndex(topElement);\n\t\t\tconst bottomViewIndex = clamp(\n\t\t\t\tthis.view.indexAt(bottom),\n\t\t\t\t0,\n\t\t\t\tthis.view.length - 1,\n\t\t\t);\n\t\t\tconst bottomElement = this.view.element(bottomViewIndex);\n\t\t\tconst bottomModelIndex =\n\t\t\t\tthis._viewModel!.getCellIndex(bottomElement);\n\n\t\t\tif (\n\t\t\t\tbottomModelIndex - topModelIndex ===\n\t\t\t\tbottomViewIndex - topViewIndex\n\t\t\t) {\n\t\t\t\tthis.visibleRanges = [\n\t\t\t\t\t{ start: topModelIndex, end: bottomModelIndex + 1 },\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tthis.visibleRanges = this._getVisibleRangesFromIndex(\n\t\t\t\t\ttopViewIndex,\n\t\t\t\t\ttopModelIndex,\n\t\t\t\t\tbottomViewIndex,\n\t\t\t\t\tbottomModelIndex,\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\tthis._localDisposableStore.add(\n\t\t\tthis.view.onDidChangeContentHeight(() => {\n\t\t\t\tif (this._isInLayout) {\n\t\t\t\t\tDOM.scheduleAtNextAnimationFrame(\n\t\t\t\t\t\tDOM.getWindow(container),\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tupdateVisibleRanges();\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tupdateVisibleRanges();\n\t\t\t}),\n\t\t);\n\t\tthis._localDisposableStore.add(\n\t\t\tthis.view.onDidScroll(() => {\n\t\t\t\tif (this._isInLayout) {\n\t\t\t\t\tDOM.scheduleAtNextAnimationFrame(\n\t\t\t\t\t\tDOM.getWindow(container),\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tupdateVisibleRanges();\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tupdateVisibleRanges();\n\t\t\t}),\n\t\t);\n\t}\n\n\tprotected override createListView(\n\t\tcontainer: HTMLElement,\n\t\tvirtualDelegate: IListVirtualDelegate<CellViewModel>,\n\t\trenderers: IListRenderer<any, any>[],\n\t\tviewOptions: IListViewOptions<CellViewModel>,\n\t): IListView<CellViewModel> {\n\t\tconst listView = new NotebookCellListView(\n\t\t\tcontainer,\n\t\t\tvirtualDelegate,\n\t\t\trenderers,\n\t\t\tviewOptions,\n\t\t);\n\t\tthis.viewZones = new NotebookViewZones(listView, this);\n\t\treturn listView;\n\t}\n\n\t/**\n\t * Test Only\n\t */\n\t_getView() {\n\t\treturn this.view;\n\t}\n\n\tattachWebview(element: HTMLElement) {\n\t\telement.style.top = `-${NOTEBOOK_WEBVIEW_BOUNDARY}px`;\n\t\tthis.rowsContainer.insertAdjacentElement(\"afterbegin\", element);\n\t\tthis._webviewElement = new FastDomNode<HTMLElement>(element);\n\t}\n\n\telementAt(position: number): ICellViewModel | undefined {\n\t\tif (!this.view.length) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst idx = this.view.indexAt(position);\n\t\tconst clamped = clamp(idx, 0, this.view.length - 1);\n\t\treturn this.element(clamped);\n\t}\n\n\telementHeight(element: ICellViewModel): number {\n\t\tconst index = this._getViewIndexUpperBound(element);\n\t\tif (index === undefined || index < 0 || index >= this.length) {\n\t\t\tthis._getViewIndexUpperBound(element);\n\t\t\tthrow new ListError(this.listUser, `Invalid index ${index}`);\n\t\t}\n\n\t\treturn this.view.elementHeight(index);\n\t}\n\n\tdetachViewModel() {\n\t\tthis._viewModelStore.clear();\n\t\tthis._viewModel = null;\n\t\tthis.hiddenRangesPrefixSum = null;\n\t}\n\n\tattachViewModel(model: NotebookViewModel) {\n\t\tthis._viewModel = model;\n\t\tthis._viewModelStore.add(\n\t\t\tmodel.onDidChangeViewCells((e) => {\n\t\t\t\tif (this._isDisposed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// update whitespaces which are anchored to the model indexes\n\t\t\t\tthis.viewZones.onCellsChanged(e);\n\n\t\t\t\tconst currentRanges = this._hiddenRangeIds\n\t\t\t\t\t.map((id) => this._viewModel!.getTrackedRange(id))\n\t\t\t\t\t.filter((range) => range !== null) as ICellRange[];\n\t\t\t\tconst newVisibleViewCells: CellViewModel[] = getVisibleCells(\n\t\t\t\t\tthis._viewModel!.viewCells as CellViewModel[],\n\t\t\t\t\tcurrentRanges,\n\t\t\t\t);\n\n\t\t\t\tconst oldVisibleViewCells: CellViewModel[] = [];\n\t\t\t\tconst oldViewCellMapping = new Set<string>();\n\t\t\t\tfor (let i = 0; i < this.length; i++) {\n\t\t\t\t\toldVisibleViewCells.push(this.element(i));\n\t\t\t\t\toldViewCellMapping.add(this.element(i).uri.toString());\n\t\t\t\t}\n\n\t\t\t\tconst viewDiffs = diff<CellViewModel>(\n\t\t\t\t\toldVisibleViewCells,\n\t\t\t\t\tnewVisibleViewCells,\n\t\t\t\t\t(a) => {\n\t\t\t\t\t\treturn oldViewCellMapping.has(a.uri.toString());\n\t\t\t\t\t},\n\t\t\t\t);\n\n\t\t\t\tif (e.synchronous) {\n\t\t\t\t\tthis._updateElementsInWebview(viewDiffs);\n\t\t\t\t} else {\n\t\t\t\t\tthis._viewModelStore.add(\n\t\t\t\t\t\tDOM.scheduleAtNextAnimationFrame(\n\t\t\t\t\t\t\tDOM.getWindow(this.rowsContainer),\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tif (this._isDisposed) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthis._updateElementsInWebview(viewDiffs);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._viewModelStore.add(\n\t\t\tmodel.onDidChangeSelection((e) => {\n\t\t\t\tif (e === \"view\") {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// convert model selections to view selections\n\t\t\t\tconst viewSelections = cellRangesToIndexes(\n\t\t\t\t\tmodel.getSelections(),\n\t\t\t\t)\n\t\t\t\t\t.map((index) => model.cellAt(index))\n\t\t\t\t\t.filter((cell) => !!cell)\n\t\t\t\t\t.map((cell) => this._getViewIndexUpperBound(cell!));\n\t\t\t\tthis.setSelection(viewSelections, undefined, true);\n\t\t\t\tconst primary = cellRangesToIndexes([model.getFocus()])\n\t\t\t\t\t.map((index) => model.cellAt(index))\n\t\t\t\t\t.filter((cell) => !!cell)\n\t\t\t\t\t.map((cell) => this._getViewIndexUpperBound(cell!));\n\n\t\t\t\tif (primary.length) {\n\t\t\t\t\tthis.setFocus(primary, undefined, true);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tconst hiddenRanges = model.getHiddenRanges();\n\t\tthis.setHiddenAreas(hiddenRanges, false);\n\t\tconst newRanges = reduceCellRanges(hiddenRanges);\n\t\tconst viewCells = model.viewCells.slice(0) as CellViewModel[];\n\t\tnewRanges.reverse().forEach((range) => {\n\t\t\tconst removedCells = viewCells.splice(\n\t\t\t\trange.start,\n\t\t\t\trange.end - range.start + 1,\n\t\t\t);\n\t\t\tthis._onDidRemoveCellsFromView.fire(removedCells);\n\t\t});\n\n\t\tthis.splice2(0, 0, viewCells);\n\t}\n\n\tprivate _updateElementsInWebview(viewDiffs: ISplice<CellViewModel>[]) {\n\t\tviewDiffs.reverse().forEach((diff) => {\n\t\t\tconst hiddenOutputs: ICellOutputViewModel[] = [];\n\t\t\tconst deletedOutputs: ICellOutputViewModel[] = [];\n\t\t\tconst removedMarkdownCells: ICellViewModel[] = [];\n\n\t\t\tfor (let i = diff.start; i < diff.start + diff.deleteCount; i++) {\n\t\t\t\tconst cell = this.element(i);\n\t\t\t\tif (cell.cellKind === CellKind.Code) {\n\t\t\t\t\tif (this._viewModel!.hasCell(cell)) {\n\t\t\t\t\t\thiddenOutputs.push(...cell?.outputsViewModels);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdeletedOutputs.push(...cell?.outputsViewModels);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tremovedMarkdownCells.push(cell);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.splice2(diff.start, diff.deleteCount, diff.toInsert);\n\n\t\t\tthis._onDidHideOutputs.fire(hiddenOutputs);\n\t\t\tthis._onDidRemoveOutputs.fire(deletedOutputs);\n\t\t\tthis._onDidRemoveCellsFromView.fire(removedMarkdownCells);\n\t\t});\n\t}\n\n\tclear() {\n\t\tsuper.splice(0, this.length);\n\t}\n\n\tsetHiddenAreas(_ranges: ICellRange[], triggerViewUpdate: boolean): boolean {\n\t\tif (!this._viewModel) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst newRanges = reduceCellRanges(_ranges);\n\t\t// delete old tracking ranges\n\t\tconst oldRanges = this._hiddenRangeIds\n\t\t\t.map((id) => this._viewModel!.getTrackedRange(id))\n\t\t\t.filter((range) => range !== null) as ICellRange[];\n\t\tif (newRanges.length === oldRanges.length) {\n\t\t\tlet hasDifference = false;\n\t\t\tfor (let i = 0; i < newRanges.length; i++) {\n\t\t\t\tif (\n\t\t\t\t\t!(\n\t\t\t\t\t\tnewRanges[i].start === oldRanges[i].start &&\n\t\t\t\t\t\tnewRanges[i].end === oldRanges[i].end\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\thasDifference = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!hasDifference) {\n\t\t\t\t// they call 'setHiddenAreas' for a reason, even if the ranges are still the same, it's possible that the hiddenRangeSum is not update to date\n\t\t\t\tthis._updateHiddenRangePrefixSum(newRanges);\n\t\t\t\tthis.viewZones.onHiddenRangesChange();\n\t\t\t\tthis.viewZones.layout();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tthis._hiddenRangeIds.forEach((id) =>\n\t\t\tthis._viewModel!.setTrackedRange(\n\t\t\t\tid,\n\t\t\t\tnull,\n\t\t\t\tTrackedRangeStickiness.GrowsOnlyWhenTypingAfter,\n\t\t\t),\n\t\t);\n\t\tconst hiddenAreaIds = newRanges\n\t\t\t.map((range) =>\n\t\t\t\tthis._viewModel!.setTrackedRange(\n\t\t\t\t\tnull,\n\t\t\t\t\trange,\n\t\t\t\t\tTrackedRangeStickiness.GrowsOnlyWhenTypingAfter,\n\t\t\t\t),\n\t\t\t)\n\t\t\t.filter((id) => id !== null) as string[];\n\n\t\tthis._hiddenRangeIds = hiddenAreaIds;\n\n\t\t// set hidden ranges prefix sum\n\t\tthis._updateHiddenRangePrefixSum(newRanges);\n\t\t// Update view zone positions after hidden ranges change\n\t\tthis.viewZones.onHiddenRangesChange();\n\n\t\tif (triggerViewUpdate) {\n\t\t\tthis.updateHiddenAreasInView(oldRanges, newRanges);\n\t\t}\n\n\t\tthis.viewZones.layout();\n\t\treturn true;\n\t}\n\n\tprivate _updateHiddenRangePrefixSum(newRanges: ICellRange[]) {\n\t\tlet start = 0;\n\t\tlet index = 0;\n\t\tconst ret: number[] = [];\n\n\t\twhile (index < newRanges.length) {\n\t\t\tfor (let j = start; j < newRanges[index].start - 1; j++) {\n\t\t\t\tret.push(1);\n\t\t\t}\n\n\t\t\tret.push(newRanges[index].end - newRanges[index].start + 1 + 1);\n\t\t\tstart = newRanges[index].end + 1;\n\t\t\tindex++;\n\t\t}\n\n\t\tfor (let i = start; i < this._viewModel!.length; i++) {\n\t\t\tret.push(1);\n\t\t}\n\n\t\tconst values = new Uint32Array(ret.length);\n\t\tfor (let i = 0; i < ret.length; i++) {\n\t\t\tvalues[i] = ret[i];\n\t\t}\n\n\t\tthis.hiddenRangesPrefixSum = new PrefixSumComputer(values);\n\t}\n\n\t/**\n\t * oldRanges and newRanges are all reduced and sorted.\n\t */\n\tupdateHiddenAreasInView(oldRanges: ICellRange[], newRanges: ICellRange[]) {\n\t\tconst oldViewCellEntries: CellViewModel[] = getVisibleCells(\n\t\t\tthis._viewModel!.viewCells as CellViewModel[],\n\t\t\toldRanges,\n\t\t);\n\t\tconst oldViewCellMapping = new Set<string>();\n\t\toldViewCellEntries.forEach((cell) => {\n\t\t\toldViewCellMapping.add(cell.uri.toString());\n\t\t});\n\n\t\tconst newViewCellEntries: CellViewModel[] = getVisibleCells(\n\t\t\tthis._viewModel!.viewCells as CellViewModel[],\n\t\t\tnewRanges,\n\t\t);\n\n\t\tconst viewDiffs = diff<CellViewModel>(\n\t\t\toldViewCellEntries,\n\t\t\tnewViewCellEntries,\n\t\t\t(a) => {\n\t\t\t\treturn oldViewCellMapping.has(a.uri.toString());\n\t\t\t},\n\t\t);\n\n\t\tthis._updateElementsInWebview(viewDiffs);\n\t}\n\n\tsplice2(\n\t\tstart: number,\n\t\tdeleteCount: number,\n\t\telements: readonly CellViewModel[] = [],\n\t): void {\n\t\t// we need to convert start and delete count based on hidden ranges\n\t\tif (start < 0 || start > this.view.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst focusInside = DOM.isAncestorOfActiveElement(this.rowsContainer);\n\t\tsuper.splice(start, deleteCount, elements);\n\t\tif (focusInside) {\n\t\t\tthis.domFocus();\n\t\t}\n\n\t\tconst selectionsLeft = [];\n\t\tthis.getSelectedElements().forEach((el) => {\n\t\t\tif (this._viewModel!.hasCell(el)) {\n\t\t\t\tselectionsLeft.push(el.handle);\n\t\t\t}\n\t\t});\n\n\t\tif (!selectionsLeft.length && this._viewModel!.viewCells.length) {\n\t\t\t// after splice, the selected cells are deleted\n\t\t\tthis._viewModel!.updateSelectionsState({\n\t\t\t\tkind: SelectionStateType.Index,\n\t\t\t\tfocus: { start: 0, end: 1 },\n\t\t\t\tselections: [{ start: 0, end: 1 }],\n\t\t\t});\n\t\t}\n\n\t\tthis.viewZones.layout();\n\t}\n\n\tgetModelIndex(cell: CellViewModel): number | undefined {\n\t\tconst viewIndex = this.indexOf(cell);\n\t\treturn this.getModelIndex2(viewIndex);\n\t}\n\n\tgetModelIndex2(viewIndex: number): number | undefined {\n\t\tif (!this.hiddenRangesPrefixSum) {\n\t\t\treturn viewIndex;\n\t\t}\n\n\t\tconst modelIndex = this.hiddenRangesPrefixSum.getPrefixSum(\n\t\t\tviewIndex - 1,\n\t\t);\n\t\treturn modelIndex;\n\t}\n\n\tgetViewIndex(cell: ICellViewModel) {\n\t\tconst modelIndex = this._viewModel!.getCellIndex(cell);\n\t\treturn this.getViewIndex2(modelIndex);\n\t}\n\n\tgetViewIndex2(modelIndex: number): number | undefined {\n\t\tif (!this.hiddenRangesPrefixSum) {\n\t\t\treturn modelIndex;\n\t\t}\n\n\t\tconst viewIndexInfo = this.hiddenRangesPrefixSum.getIndexOf(modelIndex);\n\n\t\tif (viewIndexInfo.remainder !== 0) {\n\t\t\tif (modelIndex >= this.hiddenRangesPrefixSum.getTotalSum()) {\n\t\t\t\t// it's already after the last hidden range\n\t\t\t\treturn (\n\t\t\t\t\tmodelIndex -\n\t\t\t\t\t(this.hiddenRangesPrefixSum.getTotalSum() -\n\t\t\t\t\t\tthis.hiddenRangesPrefixSum.getCount())\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\treturn viewIndexInfo.index;\n\t\t}\n\t}\n\n\tconvertModelIndexToViewIndex(modelIndex: number): number {\n\t\tif (!this.hiddenRangesPrefixSum) {\n\t\t\treturn modelIndex;\n\t\t}\n\n\t\tif (modelIndex >= this.hiddenRangesPrefixSum.getTotalSum()) {\n\t\t\t// it's already after the last hidden range\n\t\t\treturn Math.min(\n\t\t\t\tthis.length,\n\t\t\t\tthis.hiddenRangesPrefixSum.getTotalSum(),\n\t\t\t);\n\t\t}\n\n\t\treturn this.hiddenRangesPrefixSum.getIndexOf(modelIndex).index;\n\t}\n\n\tmodelIndexIsVisible(modelIndex: number): boolean {\n\t\tif (!this.hiddenRangesPrefixSum) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst viewIndexInfo = this.hiddenRangesPrefixSum.getIndexOf(modelIndex);\n\t\tif (viewIndexInfo.remainder !== 0) {\n\t\t\tif (modelIndex >= this.hiddenRangesPrefixSum.getTotalSum()) {\n\t\t\t\t// it's already after the last hidden range\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprivate _getVisibleRangesFromIndex(\n\t\ttopViewIndex: number,\n\t\ttopModelIndex: number,\n\t\tbottomViewIndex: number,\n\t\tbottomModelIndex: number,\n\t) {\n\t\tconst stack: number[] = [];\n\t\tconst ranges: ICellRange[] = [];\n\t\t// there are hidden ranges\n\t\tlet index = topViewIndex;\n\t\tlet modelIndex = topModelIndex;\n\n\t\twhile (index <= bottomViewIndex) {\n\t\t\tconst accu = this.hiddenRangesPrefixSum!.getPrefixSum(index);\n\t\t\tif (accu === modelIndex + 1) {\n\t\t\t\t// no hidden area after it\n\t\t\t\tif (stack.length) {\n\t\t\t\t\tif (stack[stack.length - 1] === modelIndex - 1) {\n\t\t\t\t\t\tranges.push({\n\t\t\t\t\t\t\tstart: stack[stack.length - 1],\n\t\t\t\t\t\t\tend: modelIndex + 1,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tranges.push({\n\t\t\t\t\t\t\tstart: stack[stack.length - 1],\n\t\t\t\t\t\t\tend: stack[stack.length - 1] + 1,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tstack.push(modelIndex);\n\t\t\t\tindex++;\n\t\t\t\tmodelIndex++;\n\t\t\t} else {\n\t\t\t\t// there are hidden ranges after it\n\t\t\t\tif (stack.length) {\n\t\t\t\t\tif (stack[stack.length - 1] === modelIndex - 1) {\n\t\t\t\t\t\tranges.push({\n\t\t\t\t\t\t\tstart: stack[stack.length - 1],\n\t\t\t\t\t\t\tend: modelIndex + 1,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tranges.push({\n\t\t\t\t\t\t\tstart: stack[stack.length - 1],\n\t\t\t\t\t\t\tend: stack[stack.length - 1] + 1,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tstack.push(modelIndex);\n\t\t\t\tindex++;\n\t\t\t\tmodelIndex = accu;\n\t\t\t}\n\t\t}\n\n\t\tif (stack.length) {\n\t\t\tranges.push({\n\t\t\t\tstart: stack[stack.length - 1],\n\t\t\t\tend: stack[stack.length - 1] + 1,\n\t\t\t});\n\t\t}\n\n\t\treturn reduceCellRanges(ranges);\n\t}\n\n\tgetVisibleRangesPlusViewportAboveAndBelow() {\n\t\tif (this.view.length <= 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst top = Math.max(this.getViewScrollTop() - this.renderHeight, 0);\n\t\tconst topViewIndex = this.view.indexAt(top);\n\t\tconst topElement = this.view.element(topViewIndex);\n\t\tconst topModelIndex = this._viewModel!.getCellIndex(topElement);\n\t\tconst bottom = clamp(\n\t\t\tthis.getViewScrollBottom() + this.renderHeight,\n\t\t\t0,\n\t\t\tthis.scrollHeight,\n\t\t);\n\t\tconst bottomViewIndex = clamp(\n\t\t\tthis.view.indexAt(bottom),\n\t\t\t0,\n\t\t\tthis.view.length - 1,\n\t\t);\n\t\tconst bottomElement = this.view.element(bottomViewIndex);\n\t\tconst bottomModelIndex = this._viewModel!.getCellIndex(bottomElement);\n\n\t\tif (\n\t\t\tbottomModelIndex - topModelIndex ===\n\t\t\tbottomViewIndex - topViewIndex\n\t\t) {\n\t\t\treturn [{ start: topModelIndex, end: bottomModelIndex }];\n\t\t} else {\n\t\t\treturn this._getVisibleRangesFromIndex(\n\t\t\t\ttopViewIndex,\n\t\t\t\ttopModelIndex,\n\t\t\t\tbottomViewIndex,\n\t\t\t\tbottomModelIndex,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _getViewIndexUpperBound(cell: ICellViewModel): number {\n\t\tif (!this._viewModel) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tconst modelIndex = this._viewModel.getCellIndex(cell);\n\t\tif (modelIndex === -1) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tif (!this.hiddenRangesPrefixSum) {\n\t\t\treturn modelIndex;\n\t\t}\n\n\t\tconst viewIndexInfo = this.hiddenRangesPrefixSum.getIndexOf(modelIndex);\n\n\t\tif (viewIndexInfo.remainder !== 0) {\n\t\t\tif (modelIndex >= this.hiddenRangesPrefixSum.getTotalSum()) {\n\t\t\t\treturn (\n\t\t\t\t\tmodelIndex -\n\t\t\t\t\t(this.hiddenRangesPrefixSum.getTotalSum() -\n\t\t\t\t\t\tthis.hiddenRangesPrefixSum.getCount())\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn viewIndexInfo.index;\n\t}\n\n\tprivate _getViewIndexUpperBound2(modelIndex: number) {\n\t\tif (!this.hiddenRangesPrefixSum) {\n\t\t\treturn modelIndex;\n\t\t}\n\n\t\tconst viewIndexInfo = this.hiddenRangesPrefixSum.getIndexOf(modelIndex);\n\n\t\tif (viewIndexInfo.remainder !== 0) {\n\t\t\tif (modelIndex >= this.hiddenRangesPrefixSum.getTotalSum()) {\n\t\t\t\treturn (\n\t\t\t\t\tmodelIndex -\n\t\t\t\t\t(this.hiddenRangesPrefixSum.getTotalSum() -\n\t\t\t\t\t\tthis.hiddenRangesPrefixSum.getCount())\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn viewIndexInfo.index;\n\t}\n\n\tfocusElement(cell: ICellViewModel) {\n\t\tconst index = this._getViewIndexUpperBound(cell);\n\n\t\tif (index >= 0 && this._viewModel) {\n\t\t\t// update view model first, which will update both `focus` and `selection` in a single transaction\n\t\t\tconst focusedElementHandle = this.element(index).handle;\n\t\t\tthis._viewModel.updateSelectionsState(\n\t\t\t\t{\n\t\t\t\t\tkind: SelectionStateType.Handle,\n\t\t\t\t\tprimary: focusedElementHandle,\n\t\t\t\t\tselections: [focusedElementHandle],\n\t\t\t\t},\n\t\t\t\t\"view\",\n\t\t\t);\n\n\t\t\t// update the view as previous model update will not trigger event\n\t\t\tthis.setFocus([index], undefined, false);\n\t\t}\n\t}\n\n\tselectElements(elements: ICellViewModel[]) {\n\t\tconst indices = elements\n\t\t\t.map((cell) => this._getViewIndexUpperBound(cell))\n\t\t\t.filter((index) => index >= 0);\n\t\tthis.setSelection(indices);\n\t}\n\n\tgetCellViewScrollTop(cell: ICellViewModel) {\n\t\tconst index = this._getViewIndexUpperBound(cell);\n\t\tif (index === undefined || index < 0 || index >= this.length) {\n\t\t\tthrow new ListError(this.listUser, `Invalid index ${index}`);\n\t\t}\n\n\t\treturn this.view.elementTop(index);\n\t}\n\n\tgetCellViewScrollBottom(cell: ICellViewModel) {\n\t\tconst index = this._getViewIndexUpperBound(cell);\n\t\tif (index === undefined || index < 0 || index >= this.length) {\n\t\t\tthrow new ListError(this.listUser, `Invalid index ${index}`);\n\t\t}\n\n\t\tconst top = this.view.elementTop(index);\n\t\tconst height = this.view.elementHeight(index);\n\t\treturn top + height;\n\t}\n\n\toverride setFocus(\n\t\tindexes: number[],\n\t\tbrowserEvent?: UIEvent,\n\t\tignoreTextModelUpdate?: boolean,\n\t): void {\n\t\tif (ignoreTextModelUpdate) {\n\t\t\tsuper.setFocus(indexes, browserEvent);\n\t\t\treturn;\n\t\t}\n\n\t\tif (indexes.length) {\n\t\t\tif (this._viewModel) {\n\t\t\t\tconst focusedElementHandle = this.element(indexes[0]).handle;\n\t\t\t\tthis._viewModel.updateSelectionsState(\n\t\t\t\t\t{\n\t\t\t\t\t\tkind: SelectionStateType.Handle,\n\t\t\t\t\t\tprimary: focusedElementHandle,\n\t\t\t\t\t\tselections: this.getSelection().map(\n\t\t\t\t\t\t\t(selection) => this.element(selection).handle,\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\t\"view\",\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (this._viewModel) {\n\t\t\tif (this.length) {\n\t\t\t\t// Don't allow clearing focus, #121129\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._viewModel.updateSelectionsState(\n\t\t\t\t{\n\t\t\t\t\tkind: SelectionStateType.Handle,\n\t\t\t\t\tprimary: null,\n\t\t\t\t\tselections: [],\n\t\t\t\t},\n\t\t\t\t\"view\",\n\t\t\t);\n\t\t}\n\n\t\tsuper.setFocus(indexes, browserEvent);\n\t}\n\n\toverride setSelection(\n\t\tindexes: number[],\n\t\tbrowserEvent?: UIEvent | undefined,\n\t\tignoreTextModelUpdate?: boolean,\n\t) {\n\t\tif (ignoreTextModelUpdate) {\n\t\t\tsuper.setSelection(indexes, browserEvent);\n\t\t\treturn;\n\t\t}\n\n\t\tif (indexes.length) {\n\t\t\tif (this._viewModel) {\n\t\t\t\tthis._viewModel.updateSelectionsState(\n\t\t\t\t\t{\n\t\t\t\t\t\tkind: SelectionStateType.Handle,\n\t\t\t\t\t\tprimary: this.getFocusedElements()[0]?.handle ?? null,\n\t\t\t\t\t\tselections: indexes\n\t\t\t\t\t\t\t.map((index) => this.element(index))\n\t\t\t\t\t\t\t.map((cell) => cell.handle),\n\t\t\t\t\t},\n\t\t\t\t\t\"view\",\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (this._viewModel) {\n\t\t\tthis._viewModel.updateSelectionsState(\n\t\t\t\t{\n\t\t\t\t\tkind: SelectionStateType.Handle,\n\t\t\t\t\tprimary: this.getFocusedElements()[0]?.handle ?? null,\n\t\t\t\t\tselections: [],\n\t\t\t\t},\n\t\t\t\t\"view\",\n\t\t\t);\n\t\t}\n\n\t\tsuper.setSelection(indexes, browserEvent);\n\t}\n\n\t/**\n\t * The range will be revealed with as little scrolling as possible.\n\t */\n\trevealCells(range: ICellRange) {\n\t\tconst startIndex = this._getViewIndexUpperBound2(range.start);\n\n\t\tif (startIndex < 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst endIndex = this._getViewIndexUpperBound2(range.end - 1);\n\n\t\tconst scrollTop = this.getViewScrollTop();\n\t\tconst wrapperBottom = this.getViewScrollBottom();\n\t\tconst elementTop = this.view.elementTop(startIndex);\n\t\tif (elementTop >= scrollTop && elementTop < wrapperBottom) {\n\t\t\t// start element is visible\n\t\t\t// check end\n\n\t\t\tconst endElementTop = this.view.elementTop(endIndex);\n\t\t\tconst endElementHeight = this.view.elementHeight(endIndex);\n\n\t\t\tif (endElementTop + endElementHeight <= wrapperBottom) {\n\t\t\t\t// fully visible\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (endElementTop >= wrapperBottom) {\n\t\t\t\treturn this._revealInternal(\n\t\t\t\t\tendIndex,\n\t\t\t\t\tfalse,\n\t\t\t\t\tCellRevealPosition.Bottom,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (endElementTop < wrapperBottom) {\n\t\t\t\t// end element partially visible\n\t\t\t\tif (\n\t\t\t\t\tendElementTop + endElementHeight - wrapperBottom <\n\t\t\t\t\telementTop - scrollTop\n\t\t\t\t) {\n\t\t\t\t\t// there is enough space to just scroll up a little bit to make the end element visible\n\t\t\t\t\treturn this.view.setScrollTop(\n\t\t\t\t\t\tscrollTop +\n\t\t\t\t\t\t\tendElementTop +\n\t\t\t\t\t\t\tendElementHeight -\n\t\t\t\t\t\t\twrapperBottom,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t// don't even try it\n\t\t\t\t\treturn this._revealInternal(\n\t\t\t\t\t\tstartIndex,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\tCellRevealPosition.Top,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._revealInViewWithMinimalScrolling(startIndex);\n\t}\n\n\tprivate _revealInViewWithMinimalScrolling(\n\t\tviewIndex: number,\n\t\tfirstLine?: boolean,\n\t) {\n\t\tconst firstIndex = this.view.firstMostlyVisibleIndex;\n\t\tconst elementHeight = this.view.elementHeight(viewIndex);\n\n\t\tif (\n\t\t\tviewIndex <= firstIndex ||\n\t\t\t(!firstLine && elementHeight >= this.view.renderHeight)\n\t\t) {\n\t\t\tthis._revealInternal(viewIndex, true, CellRevealPosition.Top);\n\t\t} else {\n\t\t\tthis._revealInternal(\n\t\t\t\tviewIndex,\n\t\t\t\ttrue,\n\t\t\t\tCellRevealPosition.Bottom,\n\t\t\t\tfirstLine,\n\t\t\t);\n\t\t}\n\t}\n\n\tscrollToBottom() {\n\t\tconst scrollHeight = this.view.scrollHeight;\n\t\tconst scrollTop = this.getViewScrollTop();\n\t\tconst wrapperBottom = this.getViewScrollBottom();\n\n\t\tthis.view.setScrollTop(scrollHeight - (wrapperBottom - scrollTop));\n\t}\n\n\t/**\n\t * Reveals the given cell in the notebook cell list. The cell will come into view syncronously\n\t * but the cell's editor will be attached asyncronously if it was previously out of view.\n\t * @returns The promise to await for the cell editor to be attached\n\t */\n\tasync revealCell(\n\t\tcell: ICellViewModel,\n\t\trevealType: CellRevealType,\n\t): Promise<void> {\n\t\tconst index = this._getViewIndexUpperBound(cell);\n\n\t\tif (index < 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (revealType) {\n\t\t\tcase CellRevealType.Top:\n\t\t\t\tthis._revealInternal(index, false, CellRevealPosition.Top);\n\t\t\t\tbreak;\n\t\t\tcase CellRevealType.Center:\n\t\t\t\tthis._revealInternal(index, false, CellRevealPosition.Center);\n\t\t\t\tbreak;\n\t\t\tcase CellRevealType.CenterIfOutsideViewport:\n\t\t\t\tthis._revealInternal(index, true, CellRevealPosition.Center);\n\t\t\t\tbreak;\n\t\t\tcase CellRevealType.NearTopIfOutsideViewport:\n\t\t\t\tthis._revealInternal(index, true, CellRevealPosition.NearTop);\n\t\t\t\tbreak;\n\t\t\tcase CellRevealType.FirstLineIfOutsideViewport:\n\t\t\t\tthis._revealInViewWithMinimalScrolling(index, true);\n\t\t\t\tbreak;\n\t\t\tcase CellRevealType.Default:\n\t\t\t\tthis._revealInViewWithMinimalScrolling(index);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (\n\t\t\t// wait for the editor to be created if the cell is in editing mode\n\t\t\t(cell.getEditState() === CellEditState.Editing ||\n\t\t\t\t// wait for the editor to be created if we are revealing the first line of the cell\n\t\t\t\t(revealType === CellRevealType.FirstLineIfOutsideViewport &&\n\t\t\t\t\tcell.cellKind === CellKind.Code)) &&\n\t\t\t!cell.editorAttached\n\t\t) {\n\t\t\treturn getEditorAttachedPromise(cell);\n\t\t}\n\n\t\treturn;\n\t}\n\n\tprivate _revealInternal(\n\t\tviewIndex: number,\n\t\tignoreIfInsideViewport: boolean,\n\t\trevealPosition: CellRevealPosition,\n\t\tfirstLine?: boolean,\n\t) {\n\t\tif (viewIndex >= this.view.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst scrollTop = this.getViewScrollTop();\n\t\tconst wrapperBottom = this.getViewScrollBottom();\n\t\tconst elementTop = this.view.elementTop(viewIndex);\n\t\tconst elementBottom = this.view.elementHeight(viewIndex) + elementTop;\n\n\t\tif (ignoreIfInsideViewport) {\n\t\t\tif (elementTop >= scrollTop && elementBottom < wrapperBottom) {\n\t\t\t\t// element is already fully visible\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tswitch (revealPosition) {\n\t\t\tcase CellRevealPosition.Top:\n\t\t\t\tthis.view.setScrollTop(elementTop);\n\t\t\t\tthis.view.setScrollTop(this.view.elementTop(viewIndex));\n\t\t\t\tbreak;\n\t\t\tcase CellRevealPosition.Center:\n\t\t\tcase CellRevealPosition.NearTop:\n\t\t\t\t{\n\t\t\t\t\t// reveal the cell top in the viewport center initially\n\t\t\t\t\tthis.view.setScrollTop(\n\t\t\t\t\t\telementTop - this.view.renderHeight / 2,\n\t\t\t\t\t);\n\t\t\t\t\t// cell rendered already, we now have a more accurate cell height\n\t\t\t\t\tconst newElementTop = this.view.elementTop(viewIndex);\n\t\t\t\t\tconst newElementHeight = this.view.elementHeight(viewIndex);\n\t\t\t\t\tconst renderHeight =\n\t\t\t\t\t\tthis.getViewScrollBottom() - this.getViewScrollTop();\n\t\t\t\t\tif (newElementHeight >= renderHeight) {\n\t\t\t\t\t\t// cell is larger than viewport, reveal top\n\t\t\t\t\t\tthis.view.setScrollTop(newElementTop);\n\t\t\t\t\t} else if (revealPosition === CellRevealPosition.Center) {\n\t\t\t\t\t\tthis.view.setScrollTop(\n\t\t\t\t\t\t\tnewElementTop +\n\t\t\t\t\t\t\t\tnewElementHeight / 2 -\n\t\t\t\t\t\t\t\trenderHeight / 2,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (revealPosition === CellRevealPosition.NearTop) {\n\t\t\t\t\t\tthis.view.setScrollTop(\n\t\t\t\t\t\t\tnewElementTop - renderHeight / 5,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase CellRevealPosition.Bottom:\n\t\t\t\tif (firstLine) {\n\t\t\t\t\tconst lineHeight =\n\t\t\t\t\t\tthis.viewModel?.layoutInfo?.fontInfo.lineHeight ?? 15;\n\t\t\t\t\tconst padding =\n\t\t\t\t\t\tthis.notebookOptions.getLayoutConfiguration()\n\t\t\t\t\t\t\t.cellTopMargin +\n\t\t\t\t\t\tthis.notebookOptions.getLayoutConfiguration()\n\t\t\t\t\t\t\t.editorTopPadding;\n\t\t\t\t\tconst firstLineLocation = elementTop + lineHeight + padding;\n\t\t\t\t\tif (firstLineLocation < wrapperBottom) {\n\t\t\t\t\t\t// first line is already visible\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.view.setScrollTop(\n\t\t\t\t\t\tthis.scrollTop + (firstLineLocation - wrapperBottom),\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthis.view.setScrollTop(\n\t\t\t\t\tthis.scrollTop + (elementBottom - wrapperBottom),\n\t\t\t\t);\n\t\t\t\tthis.view.setScrollTop(\n\t\t\t\t\tthis.scrollTop +\n\t\t\t\t\t\t(this.view.elementTop(viewIndex) +\n\t\t\t\t\t\t\tthis.view.elementHeight(viewIndex) -\n\t\t\t\t\t\t\tthis.getViewScrollBottom()),\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t//#region Reveal Cell Editor Range asynchronously\n\tasync revealRangeInCell(\n\t\tcell: ICellViewModel,\n\t\trange: Selection | Range,\n\t\trevealType: CellRevealRangeType,\n\t): Promise<void> {\n\t\tconst index = this._getViewIndexUpperBound(cell);\n\n\t\tif (index < 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (revealType) {\n\t\t\tcase CellRevealRangeType.Default:\n\t\t\t\treturn this._revealRangeInternalAsync(index, range);\n\t\t\tcase CellRevealRangeType.Center:\n\t\t\t\treturn this._revealRangeInCenterInternalAsync(index, range);\n\t\t\tcase CellRevealRangeType.CenterIfOutsideViewport:\n\t\t\t\treturn this._revealRangeInCenterIfOutsideViewportInternalAsync(\n\t\t\t\t\tindex,\n\t\t\t\t\trange,\n\t\t\t\t);\n\t\t}\n\t}\n\n\t// List items have real dynamic heights, which means after we set `scrollTop` based on the `elementTop(index)`, the element at `index` might still be removed from the view once all relayouting tasks are done.\n\t// For example, we scroll item 10 into the view upwards, in the first round, items 7, 8, 9, 10 are all in the viewport. Then item 7 and 8 resize themselves to be larger and finally item 10 is removed from the view.\n\t// To ensure that item 10 is always there, we need to scroll item 10 to the top edge of the viewport.\n\tprivate async _revealRangeInternalAsync(\n\t\tviewIndex: number,\n\t\trange: Selection | Range,\n\t): Promise<void> {\n\t\tconst scrollTop = this.getViewScrollTop();\n\t\tconst wrapperBottom = this.getViewScrollBottom();\n\t\tconst elementTop = this.view.elementTop(viewIndex);\n\t\tconst element = this.view.element(viewIndex);\n\n\t\tif (element.editorAttached) {\n\t\t\tthis._revealRangeCommon(viewIndex, range);\n\t\t} else {\n\t\t\tconst elementHeight = this.view.elementHeight(viewIndex);\n\t\t\tlet alignHint: \"top\" | \"bottom\" | undefined;\n\n\t\t\tif (elementTop + elementHeight <= scrollTop) {\n\t\t\t\t// scroll up\n\t\t\t\tthis.view.setScrollTop(elementTop);\n\t\t\t\talignHint = \"top\";\n\t\t\t} else if (elementTop >= wrapperBottom) {\n\t\t\t\t// scroll down\n\t\t\t\tthis.view.setScrollTop(elementTop - this.view.renderHeight / 2);\n\t\t\t\talignHint = \"bottom\";\n\t\t\t}\n\n\t\t\tconst editorAttachedPromise = new Promise<void>(\n\t\t\t\t(resolve, reject) => {\n\t\t\t\t\telement.onDidChangeEditorAttachState(() => {\n\t\t\t\t\t\telement.editorAttached ? resolve() : reject();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t);\n\n\t\t\treturn editorAttachedPromise.then(() => {\n\t\t\t\tthis._revealRangeCommon(viewIndex, range, alignHint);\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate async _revealRangeInCenterInternalAsync(\n\t\tviewIndex: number,\n\t\trange: Selection | Range,\n\t): Promise<void> {\n\t\tconst reveal = (viewIndex: number, range: Range) => {\n\t\t\tconst element = this.view.element(viewIndex);\n\t\t\tconst positionOffset = element.getPositionScrollTopOffset(range);\n\t\t\tconst positionOffsetInView =\n\t\t\t\tthis.view.elementTop(viewIndex) + positionOffset;\n\t\t\tthis.view.setScrollTop(\n\t\t\t\tpositionOffsetInView - this.view.renderHeight / 2,\n\t\t\t);\n\t\t\telement.revealRangeInCenter(range);\n\t\t};\n\n\t\tconst elementTop = this.view.elementTop(viewIndex);\n\t\tconst viewItemOffset = elementTop;\n\t\tthis.view.setScrollTop(viewItemOffset - this.view.renderHeight / 2);\n\t\tconst element = this.view.element(viewIndex);\n\n\t\tif (element.editorAttached) {\n\t\t\treveal(viewIndex, range);\n\t\t} else {\n\t\t\treturn getEditorAttachedPromise(element).then(() =>\n\t\t\t\treveal(viewIndex, range),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate async _revealRangeInCenterIfOutsideViewportInternalAsync(\n\t\tviewIndex: number,\n\t\trange: Selection | Range,\n\t): Promise<void> {\n\t\tconst reveal = (viewIndex: number, range: Range) => {\n\t\t\tconst element = this.view.element(viewIndex);\n\t\t\tconst positionOffset = element.getPositionScrollTopOffset(range);\n\t\t\tconst positionOffsetInView =\n\t\t\t\tthis.view.elementTop(viewIndex) + positionOffset;\n\t\t\tthis.view.setScrollTop(\n\t\t\t\tpositionOffsetInView - this.view.renderHeight / 2,\n\t\t\t);\n\n\t\t\telement.revealRangeInCenter(range);\n\t\t};\n\n\t\tconst scrollTop = this.getViewScrollTop();\n\t\tconst wrapperBottom = this.getViewScrollBottom();\n\t\tconst elementTop = this.view.elementTop(viewIndex);\n\t\tconst viewItemOffset = elementTop;\n\t\tconst element = this.view.element(viewIndex);\n\t\tconst positionOffset =\n\t\t\tviewItemOffset + element.getPositionScrollTopOffset(range);\n\n\t\tif (positionOffset < scrollTop || positionOffset > wrapperBottom) {\n\t\t\t// let it render\n\t\t\tthis.view.setScrollTop(positionOffset - this.view.renderHeight / 2);\n\n\t\t\t// after rendering, it might be pushed down due to markdown cell dynamic height\n\t\t\tconst newPositionOffset =\n\t\t\t\tthis.view.elementTop(viewIndex) +\n\t\t\t\telement.getPositionScrollTopOffset(range);\n\t\t\tthis.view.setScrollTop(\n\t\t\t\tnewPositionOffset - this.view.renderHeight / 2,\n\t\t\t);\n\n\t\t\t// reveal editor\n\t\t\tif (element.editorAttached) {\n\t\t\t\t// for example markdown\n\t\t\t} else {\n\t\t\t\treturn getEditorAttachedPromise(element).then(() =>\n\t\t\t\t\treveal(viewIndex, range),\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (element.editorAttached) {\n\t\t\telement.revealRangeInCenter(range);\n\t\t} else {\n\t\t\t// for example, markdown cell in preview mode\n\t\t\treturn getEditorAttachedPromise(element).then(() =>\n\t\t\t\treveal(viewIndex, range),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _revealRangeCommon(\n\t\tviewIndex: number,\n\t\trange: Selection | Range,\n\t\talignHint?: \"top\" | \"bottom\" | undefined,\n\t) {\n\t\tconst element = this.view.element(viewIndex);\n\t\tconst scrollTop = this.getViewScrollTop();\n\t\tconst wrapperBottom = this.getViewScrollBottom();\n\t\tconst positionOffset = element.getPositionScrollTopOffset(range);\n\t\tconst elementOriginalHeight = this.view.elementHeight(viewIndex);\n\t\tif (positionOffset >= elementOriginalHeight) {\n\t\t\t// we are revealing a range that is beyond current element height\n\t\t\t// if we don't update the element height now, and directly `setTop` to reveal the range\n\t\t\t// the element might be scrolled out of view\n\t\t\t// next frame, when we update the element height, the element will never be scrolled back into view\n\t\t\tconst newTotalHeight = element.layoutInfo.totalHeight;\n\t\t\tthis.updateElementHeight(viewIndex, newTotalHeight);\n\t\t}\n\t\tconst elementTop = this.view.elementTop(viewIndex);\n\t\tconst positionTop = elementTop + positionOffset;\n\n\t\t// TODO@rebornix 30 ---> line height * 1.5\n\t\tif (positionTop < scrollTop) {\n\t\t\tthis.view.setScrollTop(positionTop - 30);\n\t\t} else if (positionTop > wrapperBottom) {\n\t\t\tthis.view.setScrollTop(\n\t\t\t\tscrollTop + positionTop - wrapperBottom + 30,\n\t\t\t);\n\t\t} else if (alignHint === \"bottom\") {\n\t\t\t// Scrolled into view from below\n\t\t\tthis.view.setScrollTop(\n\t\t\t\tscrollTop + positionTop - wrapperBottom + 30,\n\t\t\t);\n\t\t} else if (alignHint === \"top\") {\n\t\t\t// Scrolled into view from above\n\t\t\tthis.view.setScrollTop(positionTop - 30);\n\t\t}\n\t}\n\t//#endregion\n\n\t/**\n\t * Reveals the specified offset of the given cell in the center of the viewport.\n\t * This enables revealing locations in the output as well as the input.\n\t */\n\trevealCellOffsetInCenter(cell: ICellViewModel, offset: number) {\n\t\tconst viewIndex = this._getViewIndexUpperBound(cell);\n\n\t\tif (viewIndex >= 0) {\n\t\t\tconst element = this.view.element(viewIndex);\n\t\t\tconst elementTop = this.view.elementTop(viewIndex);\n\t\t\tif (element instanceof MarkupCellViewModel) {\n\t\t\t\treturn this._revealInCenterIfOutsideViewport(viewIndex);\n\t\t\t} else {\n\t\t\t\tconst rangeOffset =\n\t\t\t\t\telement.layoutInfo.outputContainerOffset +\n\t\t\t\t\tMath.min(offset, element.layoutInfo.outputTotalHeight);\n\t\t\t\tthis.view.setScrollTop(elementTop - this.view.renderHeight / 2);\n\t\t\t\tthis.view.setScrollTop(\n\t\t\t\t\telementTop + rangeOffset - this.view.renderHeight / 2,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\trevealOffsetInCenterIfOutsideViewport(offset: number) {\n\t\tconst scrollTop = this.getViewScrollTop();\n\t\tconst wrapperBottom = this.getViewScrollBottom();\n\n\t\tif (offset < scrollTop || offset > wrapperBottom) {\n\t\t\tthis.view.setScrollTop(offset - this.view.renderHeight / 2);\n\t\t}\n\t}\n\n\tprivate _revealInCenterIfOutsideViewport(viewIndex: number) {\n\t\tthis._revealInternal(viewIndex, true, CellRevealPosition.Center);\n\t}\n\n\tdomElementOfElement(element: ICellViewModel): HTMLElement | null {\n\t\tconst index = this._getViewIndexUpperBound(element);\n\t\tif (index >= 0) {\n\t\t\treturn this.view.domElement(index);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfocusView() {\n\t\tthis.view.domNode.focus();\n\t}\n\n\ttriggerScrollFromMouseWheelEvent(browserEvent: IMouseWheelEvent) {\n\t\tthis.view.delegateScrollFromMouseWheelEvent(browserEvent);\n\t}\n\n\tdelegateVerticalScrollbarPointerDown(browserEvent: PointerEvent) {\n\t\tthis.view.delegateVerticalScrollbarPointerDown(browserEvent);\n\t}\n\n\tprivate isElementAboveViewport(index: number) {\n\t\tconst elementTop = this.view.elementTop(index);\n\t\tconst elementBottom = elementTop + this.view.elementHeight(index);\n\n\t\treturn elementBottom < this.scrollTop;\n\t}\n\n\tupdateElementHeight2(\n\t\telement: ICellViewModel,\n\t\tsize: number,\n\t\tanchorElementIndex: number | null = null,\n\t): void {\n\t\tconst index = this._getViewIndexUpperBound(element);\n\t\tif (index === undefined || index < 0 || index >= this.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.isElementAboveViewport(index)) {\n\t\t\t// update element above viewport\n\t\t\tconst oldHeight = this.elementHeight(element);\n\t\t\tconst delta = oldHeight - size;\n\t\t\tif (this._webviewElement) {\n\t\t\t\tEvent.once(this.view.onWillScroll)(() => {\n\t\t\t\t\tconst webviewTop = Number.parseInt(\n\t\t\t\t\t\tthis._webviewElement!.domNode.style.top,\n\t\t\t\t\t\t10,\n\t\t\t\t\t);\n\t\t\t\t\tif (\n\t\t\t\t\t\tvalidateWebviewBoundary(this._webviewElement!.domNode)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis._webviewElement!.setTop(webviewTop - delta);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// When the webview top boundary is below the list view scrollable element top boundary, then we can't insert a markdown cell at the top\n\t\t\t\t\t\t// or when its bottom boundary is above the list view bottom boundary, then we can't insert a markdown cell at the end\n\t\t\t\t\t\t// thus we have to revert the webview element position to initial state `-NOTEBOOK_WEBVIEW_BOUNDARY`.\n\t\t\t\t\t\t// this will trigger one visual flicker (as we need to update element offsets in the webview)\n\t\t\t\t\t\t// but as long as NOTEBOOK_WEBVIEW_BOUNDARY is large enough, it will happen less often\n\t\t\t\t\t\tthis._webviewElement!.setTop(\n\t\t\t\t\t\t\t-NOTEBOOK_WEBVIEW_BOUNDARY,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.view.updateElementHeight(index, size, anchorElementIndex);\n\t\t\tthis.viewZones.layout();\n\t\t\treturn;\n\t\t}\n\n\t\tif (anchorElementIndex !== null) {\n\t\t\tthis.view.updateElementHeight(index, size, anchorElementIndex);\n\t\t\tthis.viewZones.layout();\n\t\t\treturn;\n\t\t}\n\n\t\tconst focused = this.getFocus();\n\t\tconst focus = focused.length ? focused[0] : null;\n\n\t\tif (focus) {\n\t\t\t// If the cell is growing, we should favor anchoring to the focused cell\n\t\t\tconst heightDelta = size - this.view.elementHeight(index);\n\n\t\t\tif (\n\t\t\t\tthis._notebookCellAnchor.shouldAnchor(\n\t\t\t\t\tthis.view,\n\t\t\t\t\tfocus,\n\t\t\t\t\theightDelta,\n\t\t\t\t\tthis.element(index),\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthis.view.updateElementHeight(index, size, focus);\n\t\t\t\tthis.viewZones.layout();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.view.updateElementHeight(index, size, null);\n\t\tthis.viewZones.layout();\n\t\treturn;\n\t}\n\n\tchangeViewZones(\n\t\tcallback: (accessor: INotebookViewZoneChangeAccessor) => void,\n\t): void {\n\t\tif (this.viewZones.changeViewZones(callback)) {\n\t\t\tthis.viewZones.layout();\n\t\t}\n\t}\n\n\t// override\n\toverride domFocus() {\n\t\tconst focused = this.getFocusedElements()[0];\n\t\tconst focusedDomElement = focused && this.domElementOfElement(focused);\n\n\t\tif (\n\t\t\tthis.view.domNode.ownerDocument.activeElement &&\n\t\t\tfocusedDomElement &&\n\t\t\tfocusedDomElement.contains(\n\t\t\t\tthis.view.domNode.ownerDocument.activeElement,\n\t\t\t)\n\t\t) {\n\t\t\t// for example, when focus goes into monaco editor, if we refocus the list view, the editor will lose focus.\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\t!isMacintosh &&\n\t\t\tthis.view.domNode.ownerDocument.activeElement &&\n\t\t\t!!DOM.findParentWithClass(\n\t\t\t\t<HTMLElement>this.view.domNode.ownerDocument.activeElement,\n\t\t\t\t\"context-view\",\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.domFocus();\n\t}\n\n\tfocusContainer(clearSelection: boolean) {\n\t\tif (clearSelection) {\n\t\t\t// allow focus to be between cells\n\t\t\tthis._viewModel?.updateSelectionsState(\n\t\t\t\t{\n\t\t\t\t\tkind: SelectionStateType.Handle,\n\t\t\t\t\tprimary: null,\n\t\t\t\t\tselections: [],\n\t\t\t\t},\n\t\t\t\t\"view\",\n\t\t\t);\n\t\t\tthis.setFocus([], undefined, true);\n\t\t\tthis.setSelection([], undefined, true);\n\t\t}\n\n\t\tsuper.domFocus();\n\t}\n\n\tgetViewScrollTop() {\n\t\treturn this.view.getScrollTop();\n\t}\n\n\tgetViewScrollBottom() {\n\t\treturn this.getViewScrollTop() + this.view.renderHeight;\n\t}\n\n\tsetCellEditorSelection(cell: ICellViewModel, range: Range) {\n\t\tconst element = cell as CellViewModel;\n\t\tif (element.editorAttached) {\n\t\t\telement.setSelection(range);\n\t\t} else {\n\t\t\tgetEditorAttachedPromise(element).then(() => {\n\t\t\t\telement.setSelection(range);\n\t\t\t});\n\t\t}\n\t}\n\n\toverride style(styles: IListStyles) {\n\t\tconst selectorSuffix = this.view.domId;\n\t\tif (!this.styleElement) {\n\t\t\tthis.styleElement = DOM.createStyleSheet(this.view.domNode);\n\t\t}\n\t\tconst suffix = selectorSuffix && `.${selectorSuffix}`;\n\t\tconst content: string[] = [];\n\n\t\tif (styles.listBackground) {\n\t\t\tcontent.push(\n\t\t\t\t`.monaco-list${suffix} > div.monaco-scrollable-element > .monaco-list-rows { background: ${styles.listBackground}; }`,\n\t\t\t);\n\t\t}\n\n\t\tif (styles.listFocusBackground) {\n\t\t\tcontent.push(\n\t\t\t\t`.monaco-list${suffix}:focus > div.monaco-scrollable-element > .monaco-list-rows > .monaco-list-row.focused { background-color: ${styles.listFocusBackground}; }`,\n\t\t\t);\n\t\t\tcontent.push(\n\t\t\t\t`.monaco-list${suffix}:focus > div.monaco-scrollable-element > .monaco-list-rows > .monaco-list-row.focused:hover { background-color: ${styles.listFocusBackground}; }`,\n\t\t\t); // overwrite :hover style in this case!\n\t\t}\n\n\t\tif (styles.listFocusForeground) {\n\t\t\tcontent.push(\n\t\t\t\t`.monaco-list${suffix}:focus > div.monaco-scrollable-element > .monaco-list-rows > .monaco-list-row.focused { color: ${styles.listFocusForeground}; }`,\n\t\t\t);\n\t\t}\n\n\t\tif (styles.listActiveSelectionBackground) {\n\t\t\tcontent.push(\n\t\t\t\t`.monaco-list${suffix}:focus > div.monaco-scrollable-element > .monaco-list-rows > .monaco-list-row.selected { background-color: ${styles.listActiveSelectionBackground}; }`,\n\t\t\t);\n\t\t\tcontent.push(\n\t\t\t\t`.monaco-list${suffix}:focus > div.monaco-scrollable-element > .monaco-list-rows > .monaco-list-row.selected:hover { background-color: ${styles.listActiveSelectionBackground}; }`,\n\t\t\t); // overwrite :hover style in this case!\n\t\t}\n\n\t\tif (styles.listActiveSelectionForeground) {\n\t\t\tcontent.push(\n\t\t\t\t`.monaco-list${suffix}:focus > div.monaco-scrollable-element > .monaco-list-rows > .monaco-list-row.selected { color: ${styles.listActiveSelectionForeground}; }`,\n\t\t\t);\n\t\t}\n\n\t\tif (styles.listFocusAndSelectionBackground) {\n\t\t\tcontent.push(`\n\t\t\t\t.monaco-drag-image,\n\t\t\t\t.monaco-list${suffix}:focus > div.monaco-scrollable-element > .monaco-list-rows > .monaco-list-row.selected.focused { background-color: ${styles.listFocusAndSelectionBackground}; }\n\t\t\t`);\n\t\t}\n\n\t\tif (styles.listFocusAndSelectionForeground) {\n\t\t\tcontent.push(`\n\t\t\t\t.monaco-drag-image,\n\t\t\t\t.monaco-list${suffix}:focus > div.monaco-scrollable-element > .monaco-list-rows > .monaco-list-row.selected.focused { color: ${styles.listFocusAndSelectionForeground}; }\n\t\t\t`);\n\t\t}\n\n\t\tif (styles.listInactiveFocusBackground) {\n\t\t\tcontent.push(\n\t\t\t\t`.monaco-list${suffix} > div.monaco-scrollable-element > .monaco-list-rows > .monaco-list-row.focused { background-color:  ${styles.listInactiveFocusBackground}; }`,\n\t\t\t);\n\t\t\tcontent.push(\n\t\t\t\t`.monaco-list${suffix} > div.monaco-scrollable-element > .monaco-list-rows > .monaco-list-row.focused:hover { background-color:  ${styles.listInactiveFocusBackground}; }`,\n\t\t\t); // overwrite :hover style in this case!\n\t\t}\n\n\t\tif (styles.listInactiveSelectionBackground) {\n\t\t\tcontent.push(\n\t\t\t\t`.monaco-list${suffix} > div.monaco-scrollable-element > .monaco-list-rows > .monaco-list-row.selected { background-color:  ${styles.listInactiveSelectionBackground}; }`,\n\t\t\t);\n\t\t\tcontent.push(\n\t\t\t\t`.monaco-list${suffix} > div.monaco-scrollable-element > .monaco-list-rows > .monaco-list-row.selected:hover { background-color:  ${styles.listInactiveSelectionBackground}; }`,\n\t\t\t); // overwrite :hover style in this case!\n\t\t}\n\n\t\tif (styles.listInactiveSelectionForeground) {\n\t\t\tcontent.push(\n\t\t\t\t`.monaco-list${suffix} > div.monaco-scrollable-element > .monaco-list-rows > .monaco-list-row.selected { color: ${styles.listInactiveSelectionForeground}; }`,\n\t\t\t);\n\t\t}\n\n\t\tif (styles.listHoverBackground) {\n\t\t\tcontent.push(\n\t\t\t\t`.monaco-list${suffix}:not(.drop-target) > div.monaco-scrollable-element > .monaco-list-rows > .monaco-list-row:hover:not(.selected):not(.focused) { background-color:  ${styles.listHoverBackground}; }`,\n\t\t\t);\n\t\t}\n\n\t\tif (styles.listHoverForeground) {\n\t\t\tcontent.push(\n\t\t\t\t`.monaco-list${suffix} > div.monaco-scrollable-element > .monaco-list-rows > .monaco-list-row:hover:not(.selected):not(.focused) { color:  ${styles.listHoverForeground}; }`,\n\t\t\t);\n\t\t}\n\n\t\tif (styles.listSelectionOutline) {\n\t\t\tcontent.push(\n\t\t\t\t`.monaco-list${suffix} > div.monaco-scrollable-element > .monaco-list-rows > .monaco-list-row.selected { outline: 1px dotted ${styles.listSelectionOutline}; outline-offset: -1px; }`,\n\t\t\t);\n\t\t}\n\n\t\tif (styles.listFocusOutline) {\n\t\t\tcontent.push(`\n\t\t\t\t.monaco-drag-image,\n\t\t\t\t.monaco-list${suffix}:focus > div.monaco-scrollable-element > .monaco-list-rows > .monaco-list-row.focused { outline: 1px solid ${styles.listFocusOutline}; outline-offset: -1px; }\n\t\t\t`);\n\t\t}\n\n\t\tif (styles.listInactiveFocusOutline) {\n\t\t\tcontent.push(\n\t\t\t\t`.monaco-list${suffix} > div.monaco-scrollable-element > .monaco-list-rows > .monaco-list-row.focused { outline: 1px dotted ${styles.listInactiveFocusOutline}; outline-offset: -1px; }`,\n\t\t\t);\n\t\t}\n\n\t\tif (styles.listHoverOutline) {\n\t\t\tcontent.push(\n\t\t\t\t`.monaco-list${suffix} > div.monaco-scrollable-element > .monaco-list-rows > .monaco-list-row:hover { outline: 1px dashed ${styles.listHoverOutline}; outline-offset: -1px; }`,\n\t\t\t);\n\t\t}\n\n\t\tif (styles.listDropOverBackground) {\n\t\t\tcontent.push(`\n\t\t\t\t.monaco-list${suffix}.drop-target,\n\t\t\t\t.monaco-list${suffix} > div.monaco-scrollable-element > .monaco-list-rows.drop-target,\n\t\t\t\t.monaco-list${suffix} > div.monaco-scrollable-element > .monaco-list-row.drop-target { background-color: ${styles.listDropOverBackground} !important; color: inherit !important; }\n\t\t\t`);\n\t\t}\n\n\t\tconst newStyles = content.join(\"\\n\");\n\t\tif (newStyles !== this.styleElement.textContent) {\n\t\t\tthis.styleElement.textContent = newStyles;\n\t\t}\n\t}\n\n\tgetRenderHeight() {\n\t\treturn this.view.renderHeight;\n\t}\n\n\tgetScrollHeight() {\n\t\treturn this.view.scrollHeight;\n\t}\n\n\toverride layout(height?: number, width?: number): void {\n\t\tthis._isInLayout = true;\n\t\tsuper.layout(height, width);\n\t\tif (this.renderHeight === 0) {\n\t\t\tthis.view.domNode.style.visibility = \"hidden\";\n\t\t} else {\n\t\t\tthis.view.domNode.style.visibility = \"initial\";\n\t\t}\n\t\tthis._isInLayout = false;\n\t}\n\n\toverride dispose() {\n\t\tthis._isDisposed = true;\n\t\tthis._viewModelStore.dispose();\n\t\tthis._localDisposableStore.dispose();\n\t\tthis._notebookCellAnchor.dispose();\n\t\tthis.viewZones.dispose();\n\t\tsuper.dispose();\n\n\t\t// un-ref\n\t\tthis._previousFocusedElements = [];\n\t\tthis._viewModel = null;\n\t\tthis._hiddenRangeIds = [];\n\t\tthis.hiddenRangesPrefixSum = null;\n\t\tthis._visibleRanges = [];\n\t}\n}\n\nexport class ListViewInfoAccessor extends Disposable {\n\tconstructor(readonly list: INotebookCellList) {\n\t\tsuper();\n\t}\n\n\tgetViewIndex(cell: ICellViewModel): number {\n\t\treturn this.list.getViewIndex(cell) ?? -1;\n\t}\n\n\tgetViewHeight(cell: ICellViewModel): number {\n\t\tif (!this.list.viewModel) {\n\t\t\treturn -1;\n\t\t}\n\n\t\treturn this.list.elementHeight(cell);\n\t}\n\n\tgetCellRangeFromViewRange(\n\t\tstartIndex: number,\n\t\tendIndex: number,\n\t): ICellRange | undefined {\n\t\tif (!this.list.viewModel) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst modelIndex = this.list.getModelIndex2(startIndex);\n\t\tif (modelIndex === undefined) {\n\t\t\tthrow new Error(`startIndex ${startIndex} out of boundary`);\n\t\t}\n\n\t\tif (endIndex >= this.list.length) {\n\t\t\t// it's the end\n\t\t\tconst endModelIndex = this.list.viewModel.length;\n\t\t\treturn { start: modelIndex, end: endModelIndex };\n\t\t} else {\n\t\t\tconst endModelIndex = this.list.getModelIndex2(endIndex);\n\t\t\tif (endModelIndex === undefined) {\n\t\t\t\tthrow new Error(`endIndex ${endIndex} out of boundary`);\n\t\t\t}\n\t\t\treturn { start: modelIndex, end: endModelIndex };\n\t\t}\n\t}\n\n\tgetCellsFromViewRange(\n\t\tstartIndex: number,\n\t\tendIndex: number,\n\t): ReadonlyArray<ICellViewModel> {\n\t\tif (!this.list.viewModel) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst range = this.getCellRangeFromViewRange(startIndex, endIndex);\n\t\tif (!range) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn this.list.viewModel.getCellsInRange(range);\n\t}\n\n\tgetCellsInRange(range?: ICellRange): ReadonlyArray<ICellViewModel> {\n\t\treturn this.list.viewModel?.getCellsInRange(range) ?? [];\n\t}\n\n\tgetVisibleRangesPlusViewportAboveAndBelow(): ICellRange[] {\n\t\treturn this.list?.getVisibleRangesPlusViewportAboveAndBelow() ?? [];\n\t}\n}\n\nfunction getEditorAttachedPromise(element: ICellViewModel) {\n\treturn new Promise<void>((resolve, reject) => {\n\t\tEvent.once(element.onDidChangeEditorAttachState)(() =>\n\t\t\telement.editorAttached ? resolve() : reject(),\n\t\t);\n\t});\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,YAAY,SAAS;AACrB,SAAS,mBAAmB;AAE5B;AAAA,EAGC;AAAA,OACM;AASP,SAAS,SAAS,aAAa;AAC/B;AAAA,EACC;AAAA,EACA;AAAA,EAEA;AAAA,OACM;AACP,SAAS,aAAa;AACtB,SAAS,mBAAmB;AAK5B,SAAS,8BAA8B;AACvC,SAAS,yBAAyB;AAClC,SAAS,6BAA6B;AAEtC,SAAS,6BAA6B;AACtC;AAAA,EACC;AAAA,EAEA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,kCAAkC;AAC3C,SAAS,sCAAsC;AAC/C;AAAA,EAEC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OAIM;AAEP,SAAS,2BAA2B;AAKpC,SAAS,yBAAyB;AAClC,SAAS,0BAA0B;AACnC,SAAS,4BAA4B;AAMrC,IAAK,qBAAL,kBAAKA,wBAAL;AACC,EAAAA,wCAAA,SAAM,KAAN;AACA,EAAAA,wCAAA,YAAS,KAAT;AACA,EAAAA,wCAAA,YAAS,KAAT;AACA,EAAAA,wCAAA,aAAU,KAAV;AAJI,SAAAA;AAAA,GAAA;AAOL,SAAS,gBAAgB,OAAwB,cAA4B;AAC5E,MAAI,CAAC,aAAa,QAAQ;AACzB,WAAO;AAAA,EACR;AAEA,MAAI,QAAQ;AACZ,MAAI,mBAAmB;AACvB,QAAM,SAA0B,CAAC;AAEjC,SAAO,QAAQ,MAAM,UAAU,mBAAmB,aAAa,QAAQ;AACtE,QAAI,QAAQ,aAAa,gBAAgB,EAAE,OAAO;AACjD,aAAO;AAAA,QACN,GAAG,MAAM,MAAM,OAAO,aAAa,gBAAgB,EAAE,KAAK;AAAA,MAC3D;AAAA,IACD;AAEA,YAAQ,aAAa,gBAAgB,EAAE,MAAM;AAC7C;AAAA,EACD;AAEA,MAAI,QAAQ,MAAM,QAAQ;AACzB,WAAO,KAAK,GAAG,MAAM,MAAM,KAAK,CAAC;AAAA,EAClC;AAEA,SAAO;AACR;AAzBS;AA2BF,MAAM,4BAA4B;AAEzC,SAAS,wBAAwB,SAAsB;AACtD,QAAM,aAAa,KAAK,OAAO,SAAS,QAAQ,MAAM,KAAK,EAAE,KAAK;AAClE,SAAO,cAAc,KAAK,cAAc,4BAA4B;AACrE;AAHS;AAKF,IAAM,mBAAN,cACE,cAET;AAAA,EAiFC,YACS,UACR,WACiB,iBACjB,UACA,WACA,mBACA,SACc,aACS,sBACA,sBAEvB,+BACC;AACD;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAvBQ;AAES;AAsBjB,+BAA2B,OAAO,KAAK,iBAAiB,EAAE,IAAI,IAAI;AAClE,SAAK,2BAA2B,KAAK,mBAAmB;AACxD,SAAK,sBAAsB;AAAA,MAC1B,KAAK,iBAAiB,CAAC,MAAM;AAC5B,aAAK,yBAAyB,QAAQ,CAAC,YAAY;AAClD,cAAI,EAAE,SAAS,QAAQ,OAAO,IAAI,GAAG;AACpC,oBAAQ,WAAW;AAAA,UACpB;AAAA,QACD,CAAC;AACD,aAAK,2BAA2B,EAAE;AAAA,MACnC,CAAC;AAAA,IACF;AAEA,UAAM,wCACL,gCAAgC,OAAO,iBAAiB;AACzD,0CAAsC,IAAI,MAAM;AAEhD,UAAM,4CACL,qCAAqC,OAAO,iBAAiB;AAC9D,8CAA0C,IAAI,MAAM;AAEpD,UAAM,0BAA0B,KAAK,sBAAsB;AAAA,MAC1D,IAAI,kBAAkB;AAAA,IACvB;AACA,UAAM,2BAA2B,KAAK,sBAAsB;AAAA,MAC3D,IAAI,kBAAkB;AAAA,IACvB;AAEA,SAAK,sBAAsB,IAAI;AAAA,MAC9B;AAAA,MACA;AAAA,MACA,KAAK;AAAA,IACN;AAEA,UAAM,mBAAmB,wBAAC,YAA2B;AACpD,cAAQ,QAAQ,iBAAiB,GAAG;AAAA,QACnC,KAAK,iBAAiB;AACrB,gDAAsC,IAAI,MAAM;AAChD;AAAA,QACD,KAAK,iBAAiB;AACrB,gDAAsC,IAAI,KAAK;AAC/C;AAAA,QACD,KAAK,iBAAiB;AACrB,gDAAsC,IAAI,QAAQ;AAClD;AAAA,QACD;AACC,gDAAsC,IAAI,MAAM;AAChD;AAAA,MACF;AAEA,cAAQ,QAAQ,qBAAqB,GAAG;AAAA,QACvC,KAAK,qBAAqB;AACzB,oDAA0C,IAAI,MAAM;AACpD;AAAA,QACD,KAAK,qBAAqB;AACzB,oDAA0C,IAAI,OAAO;AACrD;AAAA,QACD,KAAK,qBAAqB;AACzB,oDAA0C,IAAI,KAAK;AACnD;AAAA,QACD;AACC,oDAA0C,IAAI,MAAM;AACpD;AAAA,MACF;AAEA;AAAA,IACD,GAhCyB;AAmCzB,SAAK,sBAAsB;AAAA,MAC1B,KAAK,iBAAiB,CAAC,MAAM;AAC5B,YAAI,EAAE,SAAS,QAAQ;AAEtB,gBAAM,iBAAiB,EAAE,SAAS,CAAC;AAEnC,kCAAwB,QACvB,eAAe,iBAAiB,CAACC,OAAM;AACtC,gBAAIA,GAAE,kBAAkB;AACvB,+BAAiB,cAAc;AAAA,YAChC;AAAA,UACD,CAAC;AAEF,mCAAyB,QACxB,eAAe,6BAA6B,MAAM;AACjD,gBAAI,eAAe,gBAAgB;AAClC,+BAAiB,cAAc;AAAA,YAChC;AAAA,UACD,CAAC;AAEF,2BAAiB,cAAc;AAC/B;AAAA,QACD;AAGA,8CAAsC,IAAI,MAAM;AAAA,MACjD,CAAC;AAAA,IACF;AAEA,SAAK,sBAAsB;AAAA,MAC1B,KAAK,KAAK,gBAAgB,MAAM;AAC/B,cAAM,QAAQ,KAAK,mBAAmB,EAAE,CAAC;AAEzC,YACC,SACA,MAAM,aAAa,SAAS,UAC5B,CAAC,MAAM,oBACP,CAAC,KAAK,YAAY,QAAQ,YACzB;AAED,gBAAM,mBACL,KAAK,wBAAwB,KAAK;AAEnC,cAAI,oBAAoB,GAAG;AAC1B,iBAAK;AAAA,cACJ;AAAA,YACD;AAAA,UACD;AACA,gBAAM,gBAAgB,cAAc,SAAS,SAAS;AACtD,gBAAM,YAAY,cAAc;AAAA,QACjC;AAAA,MACD,CAAC;AAAA,IACF;AAGA,UAAM,sBAAsB,6BAAM;AACjC,UAAI,CAAC,KAAK,KAAK,QAAQ;AACtB;AAAA,MACD;AAEA,YAAM,MAAM,KAAK,iBAAiB;AAClC,YAAM,SAAS,KAAK,oBAAoB;AACxC,UAAI,OAAO,QAAQ;AAClB;AAAA,MACD;AAEA,YAAM,eAAe;AAAA,QACpB,KAAK,KAAK,QAAQ,GAAG;AAAA,QACrB;AAAA,QACA,KAAK,KAAK,SAAS;AAAA,MACpB;AACA,YAAM,aAAa,KAAK,KAAK,QAAQ,YAAY;AACjD,YAAM,gBAAgB,KAAK,WAAY,aAAa,UAAU;AAC9D,YAAM,kBAAkB;AAAA,QACvB,KAAK,KAAK,QAAQ,MAAM;AAAA,QACxB;AAAA,QACA,KAAK,KAAK,SAAS;AAAA,MACpB;AACA,YAAM,gBAAgB,KAAK,KAAK,QAAQ,eAAe;AACvD,YAAM,mBACL,KAAK,WAAY,aAAa,aAAa;AAE5C,UACC,mBAAmB,kBACnB,kBAAkB,cACjB;AACD,aAAK,gBAAgB;AAAA,UACpB,EAAE,OAAO,eAAe,KAAK,mBAAmB,EAAE;AAAA,QACnD;AAAA,MACD,OAAO;AACN,aAAK,gBAAgB,KAAK;AAAA,UACzB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,IACD,GA1C4B;AA4C5B,SAAK,sBAAsB;AAAA,MAC1B,KAAK,KAAK,yBAAyB,MAAM;AACxC,YAAI,KAAK,aAAa;AACrB,cAAI;AAAA,YACH,IAAI,UAAU,SAAS;AAAA,YACvB,MAAM;AACL,kCAAoB;AAAA,YACrB;AAAA,UACD;AAAA,QACD;AACA,4BAAoB;AAAA,MACrB,CAAC;AAAA,IACF;AACA,SAAK,sBAAsB;AAAA,MAC1B,KAAK,KAAK,YAAY,MAAM;AAC3B,YAAI,KAAK,aAAa;AACrB,cAAI;AAAA,YACH,IAAI,UAAU,SAAS;AAAA,YACvB,MAAM;AACL,kCAAoB;AAAA,YACrB;AAAA,UACD;AAAA,QACD;AACA,4BAAoB;AAAA,MACrB,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EA5aD,OAgIA;AAAA;AAAA;AAAA,EAC6B;AAAA,EACpB;AAAA,EACR,IAAI,eAAmC;AACtC,WAAO,KAAK,KAAK;AAAA,EAClB;AAAA,EAEA,IAAI,gBAA6B;AAChC,WAAO,KAAK,KAAK;AAAA,EAClB;AAAA,EAEA,IAAI,oBAAiC;AACpC,WAAO,KAAK,KAAK;AAAA,EAClB;AAAA,EACQ,2BAAqD,CAAC;AAAA,EAC7C,wBAAwB,IAAI,gBAAgB;AAAA,EAC5C,kBAAkB,IAAI,gBAAgB;AAAA,EAC/C;AAAA,EACA;AAAA,EAES,sBAAsB,KAAK,sBAAsB;AAAA,IACjE,IAAI,QAAyC;AAAA,EAC9C;AAAA,EACS,qBAAqB,KAAK,oBAAoB;AAAA,EAEtC,oBAAoB,KAAK,sBAAsB;AAAA,IAC/D,IAAI,QAAyC;AAAA,EAC9C;AAAA,EACS,mBAAmB,KAAK,kBAAkB;AAAA,EAElC,4BAA4B,KAAK,sBAAsB;AAAA,IACvE,IAAI,QAAmC;AAAA,EACxC;AAAA,EACS,2BAA2B,KAAK,0BAA0B;AAAA,EAE3D,aAAuC;AAAA,EAC/C,IAAI,YAAsC;AACzC,WAAO,KAAK;AAAA,EACb;AAAA,EACQ,kBAA4B,CAAC;AAAA,EAC7B,wBAAkD;AAAA,EAEzC,4BAA4B,KAAK,sBAAsB;AAAA,IACvE,IAAI,QAAc;AAAA,EACnB;AAAA,EAEA,2BACC,KAAK,0BAA0B;AAAA,EACxB,iBAA+B,CAAC;AAAA,EAExC,IAAI,gBAAgB;AACnB,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAI,cAAc,QAAsB;AACvC,QAAI,gBAAgB,KAAK,gBAAgB,MAAM,GAAG;AACjD;AAAA,IACD;AAEA,SAAK,iBAAiB;AACtB,SAAK,0BAA0B,KAAK;AAAA,EACrC;AAAA,EAEQ,cAAc;AAAA,EAEtB,IAAI,aAAa;AAChB,WAAO,KAAK;AAAA,EACb;AAAA,EAEQ,cAAc;AAAA,EAEd,kBAAmD;AAAA,EAE3D,IAAI,iBAAiB;AACpB,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAI,yBAAyB;AAC5B,WAAO,KAAK,KAAK;AAAA,EAClB;AAAA,EA+NmB,eAClB,WACA,iBACA,WACA,aAC2B;AAC3B,UAAM,WAAW,IAAI;AAAA,MACpB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AACA,SAAK,YAAY,IAAI,kBAAkB,UAAU,IAAI;AACrD,WAAO;AAAA,EACR;AAAA;AAAA;AAAA;AAAA,EAKA,WAAW;AACV,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,cAAc,SAAsB;AACnC,YAAQ,MAAM,MAAM,IAAI,yBAAyB;AACjD,SAAK,cAAc,sBAAsB,cAAc,OAAO;AAC9D,SAAK,kBAAkB,IAAI,YAAyB,OAAO;AAAA,EAC5D;AAAA,EAEA,UAAU,UAA8C;AACvD,QAAI,CAAC,KAAK,KAAK,QAAQ;AACtB,aAAO;AAAA,IACR;AAEA,UAAM,MAAM,KAAK,KAAK,QAAQ,QAAQ;AACtC,UAAM,UAAU,MAAM,KAAK,GAAG,KAAK,KAAK,SAAS,CAAC;AAClD,WAAO,KAAK,QAAQ,OAAO;AAAA,EAC5B;AAAA,EAEA,cAAc,SAAiC;AAC9C,UAAM,QAAQ,KAAK,wBAAwB,OAAO;AAClD,QAAI,UAAU,UAAa,QAAQ,KAAK,SAAS,KAAK,QAAQ;AAC7D,WAAK,wBAAwB,OAAO;AACpC,YAAM,IAAI,UAAU,KAAK,UAAU,iBAAiB,KAAK,EAAE;AAAA,IAC5D;AAEA,WAAO,KAAK,KAAK,cAAc,KAAK;AAAA,EACrC;AAAA,EAEA,kBAAkB;AACjB,SAAK,gBAAgB,MAAM;AAC3B,SAAK,aAAa;AAClB,SAAK,wBAAwB;AAAA,EAC9B;AAAA,EAEA,gBAAgB,OAA0B;AACzC,SAAK,aAAa;AAClB,SAAK,gBAAgB;AAAA,MACpB,MAAM,qBAAqB,CAAC,MAAM;AACjC,YAAI,KAAK,aAAa;AACrB;AAAA,QACD;AAGA,aAAK,UAAU,eAAe,CAAC;AAE/B,cAAM,gBAAgB,KAAK,gBACzB,IAAI,CAAC,OAAO,KAAK,WAAY,gBAAgB,EAAE,CAAC,EAChD,OAAO,CAAC,UAAU,UAAU,IAAI;AAClC,cAAM,sBAAuC;AAAA,UAC5C,KAAK,WAAY;AAAA,UACjB;AAAA,QACD;AAEA,cAAM,sBAAuC,CAAC;AAC9C,cAAM,qBAAqB,oBAAI,IAAY;AAC3C,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACrC,8BAAoB,KAAK,KAAK,QAAQ,CAAC,CAAC;AACxC,6BAAmB,IAAI,KAAK,QAAQ,CAAC,EAAE,IAAI,SAAS,CAAC;AAAA,QACtD;AAEA,cAAM,YAAY;AAAA,UACjB;AAAA,UACA;AAAA,UACA,CAAC,MAAM;AACN,mBAAO,mBAAmB,IAAI,EAAE,IAAI,SAAS,CAAC;AAAA,UAC/C;AAAA,QACD;AAEA,YAAI,EAAE,aAAa;AAClB,eAAK,yBAAyB,SAAS;AAAA,QACxC,OAAO;AACN,eAAK,gBAAgB;AAAA,YACpB,IAAI;AAAA,cACH,IAAI,UAAU,KAAK,aAAa;AAAA,cAChC,MAAM;AACL,oBAAI,KAAK,aAAa;AACrB;AAAA,gBACD;AAEA,qBAAK,yBAAyB,SAAS;AAAA,cACxC;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAEA,SAAK,gBAAgB;AAAA,MACpB,MAAM,qBAAqB,CAAC,MAAM;AACjC,YAAI,MAAM,QAAQ;AACjB;AAAA,QACD;AAGA,cAAM,iBAAiB;AAAA,UACtB,MAAM,cAAc;AAAA,QACrB,EACE,IAAI,CAAC,UAAU,MAAM,OAAO,KAAK,CAAC,EAClC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,EACvB,IAAI,CAAC,SAAS,KAAK,wBAAwB,IAAK,CAAC;AACnD,aAAK,aAAa,gBAAgB,QAAW,IAAI;AACjD,cAAM,UAAU,oBAAoB,CAAC,MAAM,SAAS,CAAC,CAAC,EACpD,IAAI,CAAC,UAAU,MAAM,OAAO,KAAK,CAAC,EAClC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,EACvB,IAAI,CAAC,SAAS,KAAK,wBAAwB,IAAK,CAAC;AAEnD,YAAI,QAAQ,QAAQ;AACnB,eAAK,SAAS,SAAS,QAAW,IAAI;AAAA,QACvC;AAAA,MACD,CAAC;AAAA,IACF;AAEA,UAAM,eAAe,MAAM,gBAAgB;AAC3C,SAAK,eAAe,cAAc,KAAK;AACvC,UAAM,YAAY,iBAAiB,YAAY;AAC/C,UAAM,YAAY,MAAM,UAAU,MAAM,CAAC;AACzC,cAAU,QAAQ,EAAE,QAAQ,CAAC,UAAU;AACtC,YAAM,eAAe,UAAU;AAAA,QAC9B,MAAM;AAAA,QACN,MAAM,MAAM,MAAM,QAAQ;AAAA,MAC3B;AACA,WAAK,0BAA0B,KAAK,YAAY;AAAA,IACjD,CAAC;AAED,SAAK,QAAQ,GAAG,GAAG,SAAS;AAAA,EAC7B;AAAA,EAEQ,yBAAyB,WAAqC;AACrE,cAAU,QAAQ,EAAE,QAAQ,CAACC,UAAS;AACrC,YAAM,gBAAwC,CAAC;AAC/C,YAAM,iBAAyC,CAAC;AAChD,YAAM,uBAAyC,CAAC;AAEhD,eAAS,IAAIA,MAAK,OAAO,IAAIA,MAAK,QAAQA,MAAK,aAAa,KAAK;AAChE,cAAM,OAAO,KAAK,QAAQ,CAAC;AAC3B,YAAI,KAAK,aAAa,SAAS,MAAM;AACpC,cAAI,KAAK,WAAY,QAAQ,IAAI,GAAG;AACnC,0BAAc,KAAK,GAAG,MAAM,iBAAiB;AAAA,UAC9C,OAAO;AACN,2BAAe,KAAK,GAAG,MAAM,iBAAiB;AAAA,UAC/C;AAAA,QACD,OAAO;AACN,+BAAqB,KAAK,IAAI;AAAA,QAC/B;AAAA,MACD;AAEA,WAAK,QAAQA,MAAK,OAAOA,MAAK,aAAaA,MAAK,QAAQ;AAExD,WAAK,kBAAkB,KAAK,aAAa;AACzC,WAAK,oBAAoB,KAAK,cAAc;AAC5C,WAAK,0BAA0B,KAAK,oBAAoB;AAAA,IACzD,CAAC;AAAA,EACF;AAAA,EAEA,QAAQ;AACP,UAAM,OAAO,GAAG,KAAK,MAAM;AAAA,EAC5B;AAAA,EAEA,eAAe,SAAuB,mBAAqC;AAC1E,QAAI,CAAC,KAAK,YAAY;AACrB,aAAO;AAAA,IACR;AAEA,UAAM,YAAY,iBAAiB,OAAO;AAE1C,UAAM,YAAY,KAAK,gBACrB,IAAI,CAAC,OAAO,KAAK,WAAY,gBAAgB,EAAE,CAAC,EAChD,OAAO,CAAC,UAAU,UAAU,IAAI;AAClC,QAAI,UAAU,WAAW,UAAU,QAAQ;AAC1C,UAAI,gBAAgB;AACpB,eAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAC1C,YACC,EACC,UAAU,CAAC,EAAE,UAAU,UAAU,CAAC,EAAE,SACpC,UAAU,CAAC,EAAE,QAAQ,UAAU,CAAC,EAAE,MAElC;AACD,0BAAgB;AAChB;AAAA,QACD;AAAA,MACD;AAEA,UAAI,CAAC,eAAe;AAEnB,aAAK,4BAA4B,SAAS;AAC1C,aAAK,UAAU,qBAAqB;AACpC,aAAK,UAAU,OAAO;AACtB,eAAO;AAAA,MACR;AAAA,IACD;AAEA,SAAK,gBAAgB;AAAA,MAAQ,CAAC,OAC7B,KAAK,WAAY;AAAA,QAChB;AAAA,QACA;AAAA,QACA,uBAAuB;AAAA,MACxB;AAAA,IACD;AACA,UAAM,gBAAgB,UACpB;AAAA,MAAI,CAAC,UACL,KAAK,WAAY;AAAA,QAChB;AAAA,QACA;AAAA,QACA,uBAAuB;AAAA,MACxB;AAAA,IACD,EACC,OAAO,CAAC,OAAO,OAAO,IAAI;AAE5B,SAAK,kBAAkB;AAGvB,SAAK,4BAA4B,SAAS;AAE1C,SAAK,UAAU,qBAAqB;AAEpC,QAAI,mBAAmB;AACtB,WAAK,wBAAwB,WAAW,SAAS;AAAA,IAClD;AAEA,SAAK,UAAU,OAAO;AACtB,WAAO;AAAA,EACR;AAAA,EAEQ,4BAA4B,WAAyB;AAC5D,QAAI,QAAQ;AACZ,QAAI,QAAQ;AACZ,UAAM,MAAgB,CAAC;AAEvB,WAAO,QAAQ,UAAU,QAAQ;AAChC,eAAS,IAAI,OAAO,IAAI,UAAU,KAAK,EAAE,QAAQ,GAAG,KAAK;AACxD,YAAI,KAAK,CAAC;AAAA,MACX;AAEA,UAAI,KAAK,UAAU,KAAK,EAAE,MAAM,UAAU,KAAK,EAAE,QAAQ,IAAI,CAAC;AAC9D,cAAQ,UAAU,KAAK,EAAE,MAAM;AAC/B;AAAA,IACD;AAEA,aAAS,IAAI,OAAO,IAAI,KAAK,WAAY,QAAQ,KAAK;AACrD,UAAI,KAAK,CAAC;AAAA,IACX;AAEA,UAAM,SAAS,IAAI,YAAY,IAAI,MAAM;AACzC,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACpC,aAAO,CAAC,IAAI,IAAI,CAAC;AAAA,IAClB;AAEA,SAAK,wBAAwB,IAAI,kBAAkB,MAAM;AAAA,EAC1D;AAAA;AAAA;AAAA;AAAA,EAKA,wBAAwB,WAAyB,WAAyB;AACzE,UAAM,qBAAsC;AAAA,MAC3C,KAAK,WAAY;AAAA,MACjB;AAAA,IACD;AACA,UAAM,qBAAqB,oBAAI,IAAY;AAC3C,uBAAmB,QAAQ,CAAC,SAAS;AACpC,yBAAmB,IAAI,KAAK,IAAI,SAAS,CAAC;AAAA,IAC3C,CAAC;AAED,UAAM,qBAAsC;AAAA,MAC3C,KAAK,WAAY;AAAA,MACjB;AAAA,IACD;AAEA,UAAM,YAAY;AAAA,MACjB;AAAA,MACA;AAAA,MACA,CAAC,MAAM;AACN,eAAO,mBAAmB,IAAI,EAAE,IAAI,SAAS,CAAC;AAAA,MAC/C;AAAA,IACD;AAEA,SAAK,yBAAyB,SAAS;AAAA,EACxC;AAAA,EAEA,QACC,OACA,aACA,WAAqC,CAAC,GAC/B;AAEP,QAAI,QAAQ,KAAK,QAAQ,KAAK,KAAK,QAAQ;AAC1C;AAAA,IACD;AAEA,UAAM,cAAc,IAAI,0BAA0B,KAAK,aAAa;AACpE,UAAM,OAAO,OAAO,aAAa,QAAQ;AACzC,QAAI,aAAa;AAChB,WAAK,SAAS;AAAA,IACf;AAEA,UAAM,iBAAiB,CAAC;AACxB,SAAK,oBAAoB,EAAE,QAAQ,CAAC,OAAO;AAC1C,UAAI,KAAK,WAAY,QAAQ,EAAE,GAAG;AACjC,uBAAe,KAAK,GAAG,MAAM;AAAA,MAC9B;AAAA,IACD,CAAC;AAED,QAAI,CAAC,eAAe,UAAU,KAAK,WAAY,UAAU,QAAQ;AAEhE,WAAK,WAAY,sBAAsB;AAAA,QACtC,MAAM,mBAAmB;AAAA,QACzB,OAAO,EAAE,OAAO,GAAG,KAAK,EAAE;AAAA,QAC1B,YAAY,CAAC,EAAE,OAAO,GAAG,KAAK,EAAE,CAAC;AAAA,MAClC,CAAC;AAAA,IACF;AAEA,SAAK,UAAU,OAAO;AAAA,EACvB;AAAA,EAEA,cAAc,MAAyC;AACtD,UAAM,YAAY,KAAK,QAAQ,IAAI;AACnC,WAAO,KAAK,eAAe,SAAS;AAAA,EACrC;AAAA,EAEA,eAAe,WAAuC;AACrD,QAAI,CAAC,KAAK,uBAAuB;AAChC,aAAO;AAAA,IACR;AAEA,UAAM,aAAa,KAAK,sBAAsB;AAAA,MAC7C,YAAY;AAAA,IACb;AACA,WAAO;AAAA,EACR;AAAA,EAEA,aAAa,MAAsB;AAClC,UAAM,aAAa,KAAK,WAAY,aAAa,IAAI;AACrD,WAAO,KAAK,cAAc,UAAU;AAAA,EACrC;AAAA,EAEA,cAAc,YAAwC;AACrD,QAAI,CAAC,KAAK,uBAAuB;AAChC,aAAO;AAAA,IACR;AAEA,UAAM,gBAAgB,KAAK,sBAAsB,WAAW,UAAU;AAEtE,QAAI,cAAc,cAAc,GAAG;AAClC,UAAI,cAAc,KAAK,sBAAsB,YAAY,GAAG;AAE3D,eACC,cACC,KAAK,sBAAsB,YAAY,IACvC,KAAK,sBAAsB,SAAS;AAAA,MAEvC;AACA,aAAO;AAAA,IACR,OAAO;AACN,aAAO,cAAc;AAAA,IACtB;AAAA,EACD;AAAA,EAEA,6BAA6B,YAA4B;AACxD,QAAI,CAAC,KAAK,uBAAuB;AAChC,aAAO;AAAA,IACR;AAEA,QAAI,cAAc,KAAK,sBAAsB,YAAY,GAAG;AAE3D,aAAO,KAAK;AAAA,QACX,KAAK;AAAA,QACL,KAAK,sBAAsB,YAAY;AAAA,MACxC;AAAA,IACD;AAEA,WAAO,KAAK,sBAAsB,WAAW,UAAU,EAAE;AAAA,EAC1D;AAAA,EAEA,oBAAoB,YAA6B;AAChD,QAAI,CAAC,KAAK,uBAAuB;AAChC,aAAO;AAAA,IACR;AAEA,UAAM,gBAAgB,KAAK,sBAAsB,WAAW,UAAU;AACtE,QAAI,cAAc,cAAc,GAAG;AAClC,UAAI,cAAc,KAAK,sBAAsB,YAAY,GAAG;AAE3D,eAAO;AAAA,MACR;AACA,aAAO;AAAA,IACR,OAAO;AACN,aAAO;AAAA,IACR;AAAA,EACD;AAAA,EAEQ,2BACP,cACA,eACA,iBACA,kBACC;AACD,UAAM,QAAkB,CAAC;AACzB,UAAM,SAAuB,CAAC;AAE9B,QAAI,QAAQ;AACZ,QAAI,aAAa;AAEjB,WAAO,SAAS,iBAAiB;AAChC,YAAM,OAAO,KAAK,sBAAuB,aAAa,KAAK;AAC3D,UAAI,SAAS,aAAa,GAAG;AAE5B,YAAI,MAAM,QAAQ;AACjB,cAAI,MAAM,MAAM,SAAS,CAAC,MAAM,aAAa,GAAG;AAC/C,mBAAO,KAAK;AAAA,cACX,OAAO,MAAM,MAAM,SAAS,CAAC;AAAA,cAC7B,KAAK,aAAa;AAAA,YACnB,CAAC;AAAA,UACF,OAAO;AACN,mBAAO,KAAK;AAAA,cACX,OAAO,MAAM,MAAM,SAAS,CAAC;AAAA,cAC7B,KAAK,MAAM,MAAM,SAAS,CAAC,IAAI;AAAA,YAChC,CAAC;AAAA,UACF;AAAA,QACD;AAEA,cAAM,KAAK,UAAU;AACrB;AACA;AAAA,MACD,OAAO;AAEN,YAAI,MAAM,QAAQ;AACjB,cAAI,MAAM,MAAM,SAAS,CAAC,MAAM,aAAa,GAAG;AAC/C,mBAAO,KAAK;AAAA,cACX,OAAO,MAAM,MAAM,SAAS,CAAC;AAAA,cAC7B,KAAK,aAAa;AAAA,YACnB,CAAC;AAAA,UACF,OAAO;AACN,mBAAO,KAAK;AAAA,cACX,OAAO,MAAM,MAAM,SAAS,CAAC;AAAA,cAC7B,KAAK,MAAM,MAAM,SAAS,CAAC,IAAI;AAAA,YAChC,CAAC;AAAA,UACF;AAAA,QACD;AAEA,cAAM,KAAK,UAAU;AACrB;AACA,qBAAa;AAAA,MACd;AAAA,IACD;AAEA,QAAI,MAAM,QAAQ;AACjB,aAAO,KAAK;AAAA,QACX,OAAO,MAAM,MAAM,SAAS,CAAC;AAAA,QAC7B,KAAK,MAAM,MAAM,SAAS,CAAC,IAAI;AAAA,MAChC,CAAC;AAAA,IACF;AAEA,WAAO,iBAAiB,MAAM;AAAA,EAC/B;AAAA,EAEA,4CAA4C;AAC3C,QAAI,KAAK,KAAK,UAAU,GAAG;AAC1B,aAAO,CAAC;AAAA,IACT;AAEA,UAAM,MAAM,KAAK,IAAI,KAAK,iBAAiB,IAAI,KAAK,cAAc,CAAC;AACnE,UAAM,eAAe,KAAK,KAAK,QAAQ,GAAG;AAC1C,UAAM,aAAa,KAAK,KAAK,QAAQ,YAAY;AACjD,UAAM,gBAAgB,KAAK,WAAY,aAAa,UAAU;AAC9D,UAAM,SAAS;AAAA,MACd,KAAK,oBAAoB,IAAI,KAAK;AAAA,MAClC;AAAA,MACA,KAAK;AAAA,IACN;AACA,UAAM,kBAAkB;AAAA,MACvB,KAAK,KAAK,QAAQ,MAAM;AAAA,MACxB;AAAA,MACA,KAAK,KAAK,SAAS;AAAA,IACpB;AACA,UAAM,gBAAgB,KAAK,KAAK,QAAQ,eAAe;AACvD,UAAM,mBAAmB,KAAK,WAAY,aAAa,aAAa;AAEpE,QACC,mBAAmB,kBACnB,kBAAkB,cACjB;AACD,aAAO,CAAC,EAAE,OAAO,eAAe,KAAK,iBAAiB,CAAC;AAAA,IACxD,OAAO;AACN,aAAO,KAAK;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,wBAAwB,MAA8B;AAC7D,QAAI,CAAC,KAAK,YAAY;AACrB,aAAO;AAAA,IACR;AAEA,UAAM,aAAa,KAAK,WAAW,aAAa,IAAI;AACpD,QAAI,eAAe,IAAI;AACtB,aAAO;AAAA,IACR;AAEA,QAAI,CAAC,KAAK,uBAAuB;AAChC,aAAO;AAAA,IACR;AAEA,UAAM,gBAAgB,KAAK,sBAAsB,WAAW,UAAU;AAEtE,QAAI,cAAc,cAAc,GAAG;AAClC,UAAI,cAAc,KAAK,sBAAsB,YAAY,GAAG;AAC3D,eACC,cACC,KAAK,sBAAsB,YAAY,IACvC,KAAK,sBAAsB,SAAS;AAAA,MAEvC;AAAA,IACD;AAEA,WAAO,cAAc;AAAA,EACtB;AAAA,EAEQ,yBAAyB,YAAoB;AACpD,QAAI,CAAC,KAAK,uBAAuB;AAChC,aAAO;AAAA,IACR;AAEA,UAAM,gBAAgB,KAAK,sBAAsB,WAAW,UAAU;AAEtE,QAAI,cAAc,cAAc,GAAG;AAClC,UAAI,cAAc,KAAK,sBAAsB,YAAY,GAAG;AAC3D,eACC,cACC,KAAK,sBAAsB,YAAY,IACvC,KAAK,sBAAsB,SAAS;AAAA,MAEvC;AAAA,IACD;AAEA,WAAO,cAAc;AAAA,EACtB;AAAA,EAEA,aAAa,MAAsB;AAClC,UAAM,QAAQ,KAAK,wBAAwB,IAAI;AAE/C,QAAI,SAAS,KAAK,KAAK,YAAY;AAElC,YAAM,uBAAuB,KAAK,QAAQ,KAAK,EAAE;AACjD,WAAK,WAAW;AAAA,QACf;AAAA,UACC,MAAM,mBAAmB;AAAA,UACzB,SAAS;AAAA,UACT,YAAY,CAAC,oBAAoB;AAAA,QAClC;AAAA,QACA;AAAA,MACD;AAGA,WAAK,SAAS,CAAC,KAAK,GAAG,QAAW,KAAK;AAAA,IACxC;AAAA,EACD;AAAA,EAEA,eAAe,UAA4B;AAC1C,UAAM,UAAU,SACd,IAAI,CAAC,SAAS,KAAK,wBAAwB,IAAI,CAAC,EAChD,OAAO,CAAC,UAAU,SAAS,CAAC;AAC9B,SAAK,aAAa,OAAO;AAAA,EAC1B;AAAA,EAEA,qBAAqB,MAAsB;AAC1C,UAAM,QAAQ,KAAK,wBAAwB,IAAI;AAC/C,QAAI,UAAU,UAAa,QAAQ,KAAK,SAAS,KAAK,QAAQ;AAC7D,YAAM,IAAI,UAAU,KAAK,UAAU,iBAAiB,KAAK,EAAE;AAAA,IAC5D;AAEA,WAAO,KAAK,KAAK,WAAW,KAAK;AAAA,EAClC;AAAA,EAEA,wBAAwB,MAAsB;AAC7C,UAAM,QAAQ,KAAK,wBAAwB,IAAI;AAC/C,QAAI,UAAU,UAAa,QAAQ,KAAK,SAAS,KAAK,QAAQ;AAC7D,YAAM,IAAI,UAAU,KAAK,UAAU,iBAAiB,KAAK,EAAE;AAAA,IAC5D;AAEA,UAAM,MAAM,KAAK,KAAK,WAAW,KAAK;AACtC,UAAM,SAAS,KAAK,KAAK,cAAc,KAAK;AAC5C,WAAO,MAAM;AAAA,EACd;AAAA,EAES,SACR,SACA,cACA,uBACO;AACP,QAAI,uBAAuB;AAC1B,YAAM,SAAS,SAAS,YAAY;AACpC;AAAA,IACD;AAEA,QAAI,QAAQ,QAAQ;AACnB,UAAI,KAAK,YAAY;AACpB,cAAM,uBAAuB,KAAK,QAAQ,QAAQ,CAAC,CAAC,EAAE;AACtD,aAAK,WAAW;AAAA,UACf;AAAA,YACC,MAAM,mBAAmB;AAAA,YACzB,SAAS;AAAA,YACT,YAAY,KAAK,aAAa,EAAE;AAAA,cAC/B,CAAC,cAAc,KAAK,QAAQ,SAAS,EAAE;AAAA,YACxC;AAAA,UACD;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,IACD,WAAW,KAAK,YAAY;AAC3B,UAAI,KAAK,QAAQ;AAEhB;AAAA,MACD;AAEA,WAAK,WAAW;AAAA,QACf;AAAA,UACC,MAAM,mBAAmB;AAAA,UACzB,SAAS;AAAA,UACT,YAAY,CAAC;AAAA,QACd;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAEA,UAAM,SAAS,SAAS,YAAY;AAAA,EACrC;AAAA,EAES,aACR,SACA,cACA,uBACC;AACD,QAAI,uBAAuB;AAC1B,YAAM,aAAa,SAAS,YAAY;AACxC;AAAA,IACD;AAEA,QAAI,QAAQ,QAAQ;AACnB,UAAI,KAAK,YAAY;AACpB,aAAK,WAAW;AAAA,UACf;AAAA,YACC,MAAM,mBAAmB;AAAA,YACzB,SAAS,KAAK,mBAAmB,EAAE,CAAC,GAAG,UAAU;AAAA,YACjD,YAAY,QACV,IAAI,CAAC,UAAU,KAAK,QAAQ,KAAK,CAAC,EAClC,IAAI,CAAC,SAAS,KAAK,MAAM;AAAA,UAC5B;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,IACD,WAAW,KAAK,YAAY;AAC3B,WAAK,WAAW;AAAA,QACf;AAAA,UACC,MAAM,mBAAmB;AAAA,UACzB,SAAS,KAAK,mBAAmB,EAAE,CAAC,GAAG,UAAU;AAAA,UACjD,YAAY,CAAC;AAAA,QACd;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAEA,UAAM,aAAa,SAAS,YAAY;AAAA,EACzC;AAAA;AAAA;AAAA;AAAA,EAKA,YAAY,OAAmB;AAC9B,UAAM,aAAa,KAAK,yBAAyB,MAAM,KAAK;AAE5D,QAAI,aAAa,GAAG;AACnB;AAAA,IACD;AAEA,UAAM,WAAW,KAAK,yBAAyB,MAAM,MAAM,CAAC;AAE5D,UAAM,YAAY,KAAK,iBAAiB;AACxC,UAAM,gBAAgB,KAAK,oBAAoB;AAC/C,UAAM,aAAa,KAAK,KAAK,WAAW,UAAU;AAClD,QAAI,cAAc,aAAa,aAAa,eAAe;AAI1D,YAAM,gBAAgB,KAAK,KAAK,WAAW,QAAQ;AACnD,YAAM,mBAAmB,KAAK,KAAK,cAAc,QAAQ;AAEzD,UAAI,gBAAgB,oBAAoB,eAAe;AAEtD;AAAA,MACD;AAEA,UAAI,iBAAiB,eAAe;AACnC,eAAO,KAAK;AAAA,UACX;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAEA,UAAI,gBAAgB,eAAe;AAElC,YACC,gBAAgB,mBAAmB,gBACnC,aAAa,WACZ;AAED,iBAAO,KAAK,KAAK;AAAA,YAChB,YACC,gBACA,mBACA;AAAA,UACF;AAAA,QACD,OAAO;AAEN,iBAAO,KAAK;AAAA,YACX;AAAA,YACA;AAAA,YACA;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,SAAK,kCAAkC,UAAU;AAAA,EAClD;AAAA,EAEQ,kCACP,WACA,WACC;AACD,UAAM,aAAa,KAAK,KAAK;AAC7B,UAAM,gBAAgB,KAAK,KAAK,cAAc,SAAS;AAEvD,QACC,aAAa,cACZ,CAAC,aAAa,iBAAiB,KAAK,KAAK,cACzC;AACD,WAAK,gBAAgB,WAAW,MAAM,WAAsB;AAAA,IAC7D,OAAO;AACN,WAAK;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,iBAAiB;AAChB,UAAM,eAAe,KAAK,KAAK;AAC/B,UAAM,YAAY,KAAK,iBAAiB;AACxC,UAAM,gBAAgB,KAAK,oBAAoB;AAE/C,SAAK,KAAK,aAAa,gBAAgB,gBAAgB,UAAU;AAAA,EAClE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAM,WACL,MACA,YACgB;AAChB,UAAM,QAAQ,KAAK,wBAAwB,IAAI;AAE/C,QAAI,QAAQ,GAAG;AACd;AAAA,IACD;AAEA,YAAQ,YAAY;AAAA,MACnB,KAAK,eAAe;AACnB,aAAK,gBAAgB,OAAO,OAAO,WAAsB;AACzD;AAAA,MACD,KAAK,eAAe;AACnB,aAAK,gBAAgB,OAAO,OAAO,cAAyB;AAC5D;AAAA,MACD,KAAK,eAAe;AACnB,aAAK,gBAAgB,OAAO,MAAM,cAAyB;AAC3D;AAAA,MACD,KAAK,eAAe;AACnB,aAAK,gBAAgB,OAAO,MAAM,eAA0B;AAC5D;AAAA,MACD,KAAK,eAAe;AACnB,aAAK,kCAAkC,OAAO,IAAI;AAClD;AAAA,MACD,KAAK,eAAe;AACnB,aAAK,kCAAkC,KAAK;AAC5C;AAAA,IACF;AAEA;AAAA;AAAA,OAEE,KAAK,aAAa,MAAM,cAAc;AAAA,MAErC,eAAe,eAAe,8BAC9B,KAAK,aAAa,SAAS,SAC7B,CAAC,KAAK;AAAA,MACL;AACD,aAAO,yBAAyB,IAAI;AAAA,IACrC;AAEA;AAAA,EACD;AAAA,EAEQ,gBACP,WACA,wBACA,gBACA,WACC;AACD,QAAI,aAAa,KAAK,KAAK,QAAQ;AAClC;AAAA,IACD;AAEA,UAAM,YAAY,KAAK,iBAAiB;AACxC,UAAM,gBAAgB,KAAK,oBAAoB;AAC/C,UAAM,aAAa,KAAK,KAAK,WAAW,SAAS;AACjD,UAAM,gBAAgB,KAAK,KAAK,cAAc,SAAS,IAAI;AAE3D,QAAI,wBAAwB;AAC3B,UAAI,cAAc,aAAa,gBAAgB,eAAe;AAE7D;AAAA,MACD;AAAA,IACD;AAEA,YAAQ,gBAAgB;AAAA,MACvB,KAAK;AACJ,aAAK,KAAK,aAAa,UAAU;AACjC,aAAK,KAAK,aAAa,KAAK,KAAK,WAAW,SAAS,CAAC;AACtD;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AACJ;AAEC,eAAK,KAAK;AAAA,YACT,aAAa,KAAK,KAAK,eAAe;AAAA,UACvC;AAEA,gBAAM,gBAAgB,KAAK,KAAK,WAAW,SAAS;AACpD,gBAAM,mBAAmB,KAAK,KAAK,cAAc,SAAS;AAC1D,gBAAM,eACL,KAAK,oBAAoB,IAAI,KAAK,iBAAiB;AACpD,cAAI,oBAAoB,cAAc;AAErC,iBAAK,KAAK,aAAa,aAAa;AAAA,UACrC,WAAW,mBAAmB,gBAA2B;AACxD,iBAAK,KAAK;AAAA,cACT,gBACC,mBAAmB,IACnB,eAAe;AAAA,YACjB;AAAA,UACD,WAAW,mBAAmB,iBAA4B;AACzD,iBAAK,KAAK;AAAA,cACT,gBAAgB,eAAe;AAAA,YAChC;AAAA,UACD;AAAA,QACD;AACA;AAAA,MACD,KAAK;AACJ,YAAI,WAAW;AACd,gBAAM,aACL,KAAK,WAAW,YAAY,SAAS,cAAc;AACpD,gBAAM,UACL,KAAK,gBAAgB,uBAAuB,EAC1C,gBACF,KAAK,gBAAgB,uBAAuB,EAC1C;AACH,gBAAM,oBAAoB,aAAa,aAAa;AACpD,cAAI,oBAAoB,eAAe;AAEtC;AAAA,UACD;AAEA,eAAK,KAAK;AAAA,YACT,KAAK,aAAa,oBAAoB;AAAA,UACvC;AACA;AAAA,QACD;AACA,aAAK,KAAK;AAAA,UACT,KAAK,aAAa,gBAAgB;AAAA,QACnC;AACA,aAAK,KAAK;AAAA,UACT,KAAK,aACH,KAAK,KAAK,WAAW,SAAS,IAC9B,KAAK,KAAK,cAAc,SAAS,IACjC,KAAK,oBAAoB;AAAA,QAC5B;AACA;AAAA,MACD;AACC;AAAA,IACF;AAAA,EACD;AAAA;AAAA,EAGA,MAAM,kBACL,MACA,OACA,YACgB;AAChB,UAAM,QAAQ,KAAK,wBAAwB,IAAI;AAE/C,QAAI,QAAQ,GAAG;AACd;AAAA,IACD;AAEA,YAAQ,YAAY;AAAA,MACnB,KAAK,oBAAoB;AACxB,eAAO,KAAK,0BAA0B,OAAO,KAAK;AAAA,MACnD,KAAK,oBAAoB;AACxB,eAAO,KAAK,kCAAkC,OAAO,KAAK;AAAA,MAC3D,KAAK,oBAAoB;AACxB,eAAO,KAAK;AAAA,UACX;AAAA,UACA;AAAA,QACD;AAAA,IACF;AAAA,EACD;AAAA;AAAA;AAAA;AAAA,EAKA,MAAc,0BACb,WACA,OACgB;AAChB,UAAM,YAAY,KAAK,iBAAiB;AACxC,UAAM,gBAAgB,KAAK,oBAAoB;AAC/C,UAAM,aAAa,KAAK,KAAK,WAAW,SAAS;AACjD,UAAM,UAAU,KAAK,KAAK,QAAQ,SAAS;AAE3C,QAAI,QAAQ,gBAAgB;AAC3B,WAAK,mBAAmB,WAAW,KAAK;AAAA,IACzC,OAAO;AACN,YAAM,gBAAgB,KAAK,KAAK,cAAc,SAAS;AACvD,UAAI;AAEJ,UAAI,aAAa,iBAAiB,WAAW;AAE5C,aAAK,KAAK,aAAa,UAAU;AACjC,oBAAY;AAAA,MACb,WAAW,cAAc,eAAe;AAEvC,aAAK,KAAK,aAAa,aAAa,KAAK,KAAK,eAAe,CAAC;AAC9D,oBAAY;AAAA,MACb;AAEA,YAAM,wBAAwB,IAAI;AAAA,QACjC,CAAC,SAAS,WAAW;AACpB,kBAAQ,6BAA6B,MAAM;AAC1C,oBAAQ,iBAAiB,QAAQ,IAAI,OAAO;AAAA,UAC7C,CAAC;AAAA,QACF;AAAA,MACD;AAEA,aAAO,sBAAsB,KAAK,MAAM;AACvC,aAAK,mBAAmB,WAAW,OAAO,SAAS;AAAA,MACpD,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAEA,MAAc,kCACb,WACA,OACgB;AAChB,UAAM,SAAS,wBAACC,YAAmBC,WAAiB;AACnD,YAAMC,WAAU,KAAK,KAAK,QAAQF,UAAS;AAC3C,YAAM,iBAAiBE,SAAQ,2BAA2BD,MAAK;AAC/D,YAAM,uBACL,KAAK,KAAK,WAAWD,UAAS,IAAI;AACnC,WAAK,KAAK;AAAA,QACT,uBAAuB,KAAK,KAAK,eAAe;AAAA,MACjD;AACA,MAAAE,SAAQ,oBAAoBD,MAAK;AAAA,IAClC,GATe;AAWf,UAAM,aAAa,KAAK,KAAK,WAAW,SAAS;AACjD,UAAM,iBAAiB;AACvB,SAAK,KAAK,aAAa,iBAAiB,KAAK,KAAK,eAAe,CAAC;AAClE,UAAM,UAAU,KAAK,KAAK,QAAQ,SAAS;AAE3C,QAAI,QAAQ,gBAAgB;AAC3B,aAAO,WAAW,KAAK;AAAA,IACxB,OAAO;AACN,aAAO,yBAAyB,OAAO,EAAE;AAAA,QAAK,MAC7C,OAAO,WAAW,KAAK;AAAA,MACxB;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAc,mDACb,WACA,OACgB;AAChB,UAAM,SAAS,wBAACD,YAAmBC,WAAiB;AACnD,YAAMC,WAAU,KAAK,KAAK,QAAQF,UAAS;AAC3C,YAAMG,kBAAiBD,SAAQ,2BAA2BD,MAAK;AAC/D,YAAM,uBACL,KAAK,KAAK,WAAWD,UAAS,IAAIG;AACnC,WAAK,KAAK;AAAA,QACT,uBAAuB,KAAK,KAAK,eAAe;AAAA,MACjD;AAEA,MAAAD,SAAQ,oBAAoBD,MAAK;AAAA,IAClC,GAVe;AAYf,UAAM,YAAY,KAAK,iBAAiB;AACxC,UAAM,gBAAgB,KAAK,oBAAoB;AAC/C,UAAM,aAAa,KAAK,KAAK,WAAW,SAAS;AACjD,UAAM,iBAAiB;AACvB,UAAM,UAAU,KAAK,KAAK,QAAQ,SAAS;AAC3C,UAAM,iBACL,iBAAiB,QAAQ,2BAA2B,KAAK;AAE1D,QAAI,iBAAiB,aAAa,iBAAiB,eAAe;AAEjE,WAAK,KAAK,aAAa,iBAAiB,KAAK,KAAK,eAAe,CAAC;AAGlE,YAAM,oBACL,KAAK,KAAK,WAAW,SAAS,IAC9B,QAAQ,2BAA2B,KAAK;AACzC,WAAK,KAAK;AAAA,QACT,oBAAoB,KAAK,KAAK,eAAe;AAAA,MAC9C;AAGA,UAAI,QAAQ,gBAAgB;AAAA,MAE5B,OAAO;AACN,eAAO,yBAAyB,OAAO,EAAE;AAAA,UAAK,MAC7C,OAAO,WAAW,KAAK;AAAA,QACxB;AAAA,MACD;AAAA,IACD,WAAW,QAAQ,gBAAgB;AAClC,cAAQ,oBAAoB,KAAK;AAAA,IAClC,OAAO;AAEN,aAAO,yBAAyB,OAAO,EAAE;AAAA,QAAK,MAC7C,OAAO,WAAW,KAAK;AAAA,MACxB;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,mBACP,WACA,OACA,WACC;AACD,UAAM,UAAU,KAAK,KAAK,QAAQ,SAAS;AAC3C,UAAM,YAAY,KAAK,iBAAiB;AACxC,UAAM,gBAAgB,KAAK,oBAAoB;AAC/C,UAAM,iBAAiB,QAAQ,2BAA2B,KAAK;AAC/D,UAAM,wBAAwB,KAAK,KAAK,cAAc,SAAS;AAC/D,QAAI,kBAAkB,uBAAuB;AAK5C,YAAM,iBAAiB,QAAQ,WAAW;AAC1C,WAAK,oBAAoB,WAAW,cAAc;AAAA,IACnD;AACA,UAAM,aAAa,KAAK,KAAK,WAAW,SAAS;AACjD,UAAM,cAAc,aAAa;AAGjC,QAAI,cAAc,WAAW;AAC5B,WAAK,KAAK,aAAa,cAAc,EAAE;AAAA,IACxC,WAAW,cAAc,eAAe;AACvC,WAAK,KAAK;AAAA,QACT,YAAY,cAAc,gBAAgB;AAAA,MAC3C;AAAA,IACD,WAAW,cAAc,UAAU;AAElC,WAAK,KAAK;AAAA,QACT,YAAY,cAAc,gBAAgB;AAAA,MAC3C;AAAA,IACD,WAAW,cAAc,OAAO;AAE/B,WAAK,KAAK,aAAa,cAAc,EAAE;AAAA,IACxC;AAAA,EACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,yBAAyB,MAAsB,QAAgB;AAC9D,UAAM,YAAY,KAAK,wBAAwB,IAAI;AAEnD,QAAI,aAAa,GAAG;AACnB,YAAM,UAAU,KAAK,KAAK,QAAQ,SAAS;AAC3C,YAAM,aAAa,KAAK,KAAK,WAAW,SAAS;AACjD,UAAI,mBAAmB,qBAAqB;AAC3C,eAAO,KAAK,iCAAiC,SAAS;AAAA,MACvD,OAAO;AACN,cAAM,cACL,QAAQ,WAAW,wBACnB,KAAK,IAAI,QAAQ,QAAQ,WAAW,iBAAiB;AACtD,aAAK,KAAK,aAAa,aAAa,KAAK,KAAK,eAAe,CAAC;AAC9D,aAAK,KAAK;AAAA,UACT,aAAa,cAAc,KAAK,KAAK,eAAe;AAAA,QACrD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,sCAAsC,QAAgB;AACrD,UAAM,YAAY,KAAK,iBAAiB;AACxC,UAAM,gBAAgB,KAAK,oBAAoB;AAE/C,QAAI,SAAS,aAAa,SAAS,eAAe;AACjD,WAAK,KAAK,aAAa,SAAS,KAAK,KAAK,eAAe,CAAC;AAAA,IAC3D;AAAA,EACD;AAAA,EAEQ,iCAAiC,WAAmB;AAC3D,SAAK,gBAAgB,WAAW,MAAM,cAAyB;AAAA,EAChE;AAAA,EAEA,oBAAoB,SAA6C;AAChE,UAAM,QAAQ,KAAK,wBAAwB,OAAO;AAClD,QAAI,SAAS,GAAG;AACf,aAAO,KAAK,KAAK,WAAW,KAAK;AAAA,IAClC;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,YAAY;AACX,SAAK,KAAK,QAAQ,MAAM;AAAA,EACzB;AAAA,EAEA,iCAAiC,cAAgC;AAChE,SAAK,KAAK,kCAAkC,YAAY;AAAA,EACzD;AAAA,EAEA,qCAAqC,cAA4B;AAChE,SAAK,KAAK,qCAAqC,YAAY;AAAA,EAC5D;AAAA,EAEQ,uBAAuB,OAAe;AAC7C,UAAM,aAAa,KAAK,KAAK,WAAW,KAAK;AAC7C,UAAM,gBAAgB,aAAa,KAAK,KAAK,cAAc,KAAK;AAEhE,WAAO,gBAAgB,KAAK;AAAA,EAC7B;AAAA,EAEA,qBACC,SACA,MACA,qBAAoC,MAC7B;AACP,UAAM,QAAQ,KAAK,wBAAwB,OAAO;AAClD,QAAI,UAAU,UAAa,QAAQ,KAAK,SAAS,KAAK,QAAQ;AAC7D;AAAA,IACD;AAEA,QAAI,KAAK,uBAAuB,KAAK,GAAG;AAEvC,YAAM,YAAY,KAAK,cAAc,OAAO;AAC5C,YAAM,QAAQ,YAAY;AAC1B,UAAI,KAAK,iBAAiB;AACzB,cAAM,KAAK,KAAK,KAAK,YAAY,EAAE,MAAM;AACxC,gBAAM,aAAa,OAAO;AAAA,YACzB,KAAK,gBAAiB,QAAQ,MAAM;AAAA,YACpC;AAAA,UACD;AACA,cACC,wBAAwB,KAAK,gBAAiB,OAAO,GACpD;AACD,iBAAK,gBAAiB,OAAO,aAAa,KAAK;AAAA,UAChD,OAAO;AAMN,iBAAK,gBAAiB;AAAA,cACrB,CAAC;AAAA,YACF;AAAA,UACD;AAAA,QACD,CAAC;AAAA,MACF;AACA,WAAK,KAAK,oBAAoB,OAAO,MAAM,kBAAkB;AAC7D,WAAK,UAAU,OAAO;AACtB;AAAA,IACD;AAEA,QAAI,uBAAuB,MAAM;AAChC,WAAK,KAAK,oBAAoB,OAAO,MAAM,kBAAkB;AAC7D,WAAK,UAAU,OAAO;AACtB;AAAA,IACD;AAEA,UAAM,UAAU,KAAK,SAAS;AAC9B,UAAM,QAAQ,QAAQ,SAAS,QAAQ,CAAC,IAAI;AAE5C,QAAI,OAAO;AAEV,YAAM,cAAc,OAAO,KAAK,KAAK,cAAc,KAAK;AAExD,UACC,KAAK,oBAAoB;AAAA,QACxB,KAAK;AAAA,QACL;AAAA,QACA;AAAA,QACA,KAAK,QAAQ,KAAK;AAAA,MACnB,GACC;AACD,aAAK,KAAK,oBAAoB,OAAO,MAAM,KAAK;AAChD,aAAK,UAAU,OAAO;AACtB;AAAA,MACD;AAAA,IACD;AAEA,SAAK,KAAK,oBAAoB,OAAO,MAAM,IAAI;AAC/C,SAAK,UAAU,OAAO;AACtB;AAAA,EACD;AAAA,EAEA,gBACC,UACO;AACP,QAAI,KAAK,UAAU,gBAAgB,QAAQ,GAAG;AAC7C,WAAK,UAAU,OAAO;AAAA,IACvB;AAAA,EACD;AAAA;AAAA,EAGS,WAAW;AACnB,UAAM,UAAU,KAAK,mBAAmB,EAAE,CAAC;AAC3C,UAAM,oBAAoB,WAAW,KAAK,oBAAoB,OAAO;AAErE,QACC,KAAK,KAAK,QAAQ,cAAc,iBAChC,qBACA,kBAAkB;AAAA,MACjB,KAAK,KAAK,QAAQ,cAAc;AAAA,IACjC,GACC;AAED;AAAA,IACD;AAEA,QACC,CAAC,eACD,KAAK,KAAK,QAAQ,cAAc,iBAChC,CAAC,CAAC,IAAI;AAAA,MACQ,KAAK,KAAK,QAAQ,cAAc;AAAA,MAC7C;AAAA,IACD,GACC;AACD;AAAA,IACD;AAEA,UAAM,SAAS;AAAA,EAChB;AAAA,EAEA,eAAe,gBAAyB;AACvC,QAAI,gBAAgB;AAEnB,WAAK,YAAY;AAAA,QAChB;AAAA,UACC,MAAM,mBAAmB;AAAA,UACzB,SAAS;AAAA,UACT,YAAY,CAAC;AAAA,QACd;AAAA,QACA;AAAA,MACD;AACA,WAAK,SAAS,CAAC,GAAG,QAAW,IAAI;AACjC,WAAK,aAAa,CAAC,GAAG,QAAW,IAAI;AAAA,IACtC;AAEA,UAAM,SAAS;AAAA,EAChB;AAAA,EAEA,mBAAmB;AAClB,WAAO,KAAK,KAAK,aAAa;AAAA,EAC/B;AAAA,EAEA,sBAAsB;AACrB,WAAO,KAAK,iBAAiB,IAAI,KAAK,KAAK;AAAA,EAC5C;AAAA,EAEA,uBAAuB,MAAsB,OAAc;AAC1D,UAAM,UAAU;AAChB,QAAI,QAAQ,gBAAgB;AAC3B,cAAQ,aAAa,KAAK;AAAA,IAC3B,OAAO;AACN,+BAAyB,OAAO,EAAE,KAAK,MAAM;AAC5C,gBAAQ,aAAa,KAAK;AAAA,MAC3B,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAES,MAAM,QAAqB;AACnC,UAAM,iBAAiB,KAAK,KAAK;AACjC,QAAI,CAAC,KAAK,cAAc;AACvB,WAAK,eAAe,IAAI,iBAAiB,KAAK,KAAK,OAAO;AAAA,IAC3D;AACA,UAAM,SAAS,kBAAkB,IAAI,cAAc;AACnD,UAAM,UAAoB,CAAC;AAE3B,QAAI,OAAO,gBAAgB;AAC1B,cAAQ;AAAA,QACP,eAAe,MAAM,sEAAsE,OAAO,cAAc;AAAA,MACjH;AAAA,IACD;AAEA,QAAI,OAAO,qBAAqB;AAC/B,cAAQ;AAAA,QACP,eAAe,MAAM,6GAA6G,OAAO,mBAAmB;AAAA,MAC7J;AACA,cAAQ;AAAA,QACP,eAAe,MAAM,mHAAmH,OAAO,mBAAmB;AAAA,MACnK;AAAA,IACD;AAEA,QAAI,OAAO,qBAAqB;AAC/B,cAAQ;AAAA,QACP,eAAe,MAAM,kGAAkG,OAAO,mBAAmB;AAAA,MAClJ;AAAA,IACD;AAEA,QAAI,OAAO,+BAA+B;AACzC,cAAQ;AAAA,QACP,eAAe,MAAM,8GAA8G,OAAO,6BAA6B;AAAA,MACxK;AACA,cAAQ;AAAA,QACP,eAAe,MAAM,oHAAoH,OAAO,6BAA6B;AAAA,MAC9K;AAAA,IACD;AAEA,QAAI,OAAO,+BAA+B;AACzC,cAAQ;AAAA,QACP,eAAe,MAAM,mGAAmG,OAAO,6BAA6B;AAAA,MAC7J;AAAA,IACD;AAEA,QAAI,OAAO,iCAAiC;AAC3C,cAAQ,KAAK;AAAA;AAAA,kBAEE,MAAM,sHAAsH,OAAO,+BAA+B;AAAA,IAChL;AAAA,IACF;AAEA,QAAI,OAAO,iCAAiC;AAC3C,cAAQ,KAAK;AAAA;AAAA,kBAEE,MAAM,2GAA2G,OAAO,+BAA+B;AAAA,IACrK;AAAA,IACF;AAEA,QAAI,OAAO,6BAA6B;AACvC,cAAQ;AAAA,QACP,eAAe,MAAM,wGAAwG,OAAO,2BAA2B;AAAA,MAChK;AACA,cAAQ;AAAA,QACP,eAAe,MAAM,8GAA8G,OAAO,2BAA2B;AAAA,MACtK;AAAA,IACD;AAEA,QAAI,OAAO,iCAAiC;AAC3C,cAAQ;AAAA,QACP,eAAe,MAAM,yGAAyG,OAAO,+BAA+B;AAAA,MACrK;AACA,cAAQ;AAAA,QACP,eAAe,MAAM,+GAA+G,OAAO,+BAA+B;AAAA,MAC3K;AAAA,IACD;AAEA,QAAI,OAAO,iCAAiC;AAC3C,cAAQ;AAAA,QACP,eAAe,MAAM,6FAA6F,OAAO,+BAA+B;AAAA,MACzJ;AAAA,IACD;AAEA,QAAI,OAAO,qBAAqB;AAC/B,cAAQ;AAAA,QACP,eAAe,MAAM,qJAAqJ,OAAO,mBAAmB;AAAA,MACrM;AAAA,IACD;AAEA,QAAI,OAAO,qBAAqB;AAC/B,cAAQ;AAAA,QACP,eAAe,MAAM,wHAAwH,OAAO,mBAAmB;AAAA,MACxK;AAAA,IACD;AAEA,QAAI,OAAO,sBAAsB;AAChC,cAAQ;AAAA,QACP,eAAe,MAAM,0GAA0G,OAAO,oBAAoB;AAAA,MAC3J;AAAA,IACD;AAEA,QAAI,OAAO,kBAAkB;AAC5B,cAAQ,KAAK;AAAA;AAAA,kBAEE,MAAM,8GAA8G,OAAO,gBAAgB;AAAA,IACzJ;AAAA,IACF;AAEA,QAAI,OAAO,0BAA0B;AACpC,cAAQ;AAAA,QACP,eAAe,MAAM,yGAAyG,OAAO,wBAAwB;AAAA,MAC9J;AAAA,IACD;AAEA,QAAI,OAAO,kBAAkB;AAC5B,cAAQ;AAAA,QACP,eAAe,MAAM,uGAAuG,OAAO,gBAAgB;AAAA,MACpJ;AAAA,IACD;AAEA,QAAI,OAAO,wBAAwB;AAClC,cAAQ,KAAK;AAAA,kBACE,MAAM;AAAA,kBACN,MAAM;AAAA,kBACN,MAAM,uFAAuF,OAAO,sBAAsB;AAAA,IACxI;AAAA,IACF;AAEA,UAAM,YAAY,QAAQ,KAAK,IAAI;AACnC,QAAI,cAAc,KAAK,aAAa,aAAa;AAChD,WAAK,aAAa,cAAc;AAAA,IACjC;AAAA,EACD;AAAA,EAEA,kBAAkB;AACjB,WAAO,KAAK,KAAK;AAAA,EAClB;AAAA,EAEA,kBAAkB;AACjB,WAAO,KAAK,KAAK;AAAA,EAClB;AAAA,EAES,OAAO,QAAiB,OAAsB;AACtD,SAAK,cAAc;AACnB,UAAM,OAAO,QAAQ,KAAK;AAC1B,QAAI,KAAK,iBAAiB,GAAG;AAC5B,WAAK,KAAK,QAAQ,MAAM,aAAa;AAAA,IACtC,OAAO;AACN,WAAK,KAAK,QAAQ,MAAM,aAAa;AAAA,IACtC;AACA,SAAK,cAAc;AAAA,EACpB;AAAA,EAES,UAAU;AAClB,SAAK,cAAc;AACnB,SAAK,gBAAgB,QAAQ;AAC7B,SAAK,sBAAsB,QAAQ;AACnC,SAAK,oBAAoB,QAAQ;AACjC,SAAK,UAAU,QAAQ;AACvB,UAAM,QAAQ;AAGd,SAAK,2BAA2B,CAAC;AACjC,SAAK,aAAa;AAClB,SAAK,kBAAkB,CAAC;AACxB,SAAK,wBAAwB;AAC7B,SAAK,iBAAiB,CAAC;AAAA,EACxB;AACD;AApwDa,mBAAN;AAAA,EA4FJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GA/FU;AAswDN,MAAM,6BAA6B,WAAW;AAAA,EACpD,YAAqB,MAAyB;AAC7C,UAAM;AADc;AAAA,EAErB;AAAA,EAt4DD,OAm4DqD;AAAA;AAAA;AAAA,EAKpD,aAAa,MAA8B;AAC1C,WAAO,KAAK,KAAK,aAAa,IAAI,KAAK;AAAA,EACxC;AAAA,EAEA,cAAc,MAA8B;AAC3C,QAAI,CAAC,KAAK,KAAK,WAAW;AACzB,aAAO;AAAA,IACR;AAEA,WAAO,KAAK,KAAK,cAAc,IAAI;AAAA,EACpC;AAAA,EAEA,0BACC,YACA,UACyB;AACzB,QAAI,CAAC,KAAK,KAAK,WAAW;AACzB,aAAO;AAAA,IACR;AAEA,UAAM,aAAa,KAAK,KAAK,eAAe,UAAU;AACtD,QAAI,eAAe,QAAW;AAC7B,YAAM,IAAI,MAAM,cAAc,UAAU,kBAAkB;AAAA,IAC3D;AAEA,QAAI,YAAY,KAAK,KAAK,QAAQ;AAEjC,YAAM,gBAAgB,KAAK,KAAK,UAAU;AAC1C,aAAO,EAAE,OAAO,YAAY,KAAK,cAAc;AAAA,IAChD,OAAO;AACN,YAAM,gBAAgB,KAAK,KAAK,eAAe,QAAQ;AACvD,UAAI,kBAAkB,QAAW;AAChC,cAAM,IAAI,MAAM,YAAY,QAAQ,kBAAkB;AAAA,MACvD;AACA,aAAO,EAAE,OAAO,YAAY,KAAK,cAAc;AAAA,IAChD;AAAA,EACD;AAAA,EAEA,sBACC,YACA,UACgC;AAChC,QAAI,CAAC,KAAK,KAAK,WAAW;AACzB,aAAO,CAAC;AAAA,IACT;AAEA,UAAM,QAAQ,KAAK,0BAA0B,YAAY,QAAQ;AACjE,QAAI,CAAC,OAAO;AACX,aAAO,CAAC;AAAA,IACT;AAEA,WAAO,KAAK,KAAK,UAAU,gBAAgB,KAAK;AAAA,EACjD;AAAA,EAEA,gBAAgB,OAAmD;AAClE,WAAO,KAAK,KAAK,WAAW,gBAAgB,KAAK,KAAK,CAAC;AAAA,EACxD;AAAA,EAEA,4CAA0D;AACzD,WAAO,KAAK,MAAM,0CAA0C,KAAK,CAAC;AAAA,EACnE;AACD;AAEA,SAAS,yBAAyB,SAAyB;AAC1D,SAAO,IAAI,QAAc,CAAC,SAAS,WAAW;AAC7C,UAAM,KAAK,QAAQ,4BAA4B;AAAA,MAAE,MAChD,QAAQ,iBAAiB,QAAQ,IAAI,OAAO;AAAA,IAC7C;AAAA,EACD,CAAC;AACF;AANS;",
  "names": ["CellRevealPosition", "e", "diff", "viewIndex", "range", "element", "positionOffset"]
}
