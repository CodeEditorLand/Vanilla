{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/cellDiagnostics/cellDiagnosticEditorContrib.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from \"../../../../../../base/common/event.js\";\nimport { Iterable } from \"../../../../../../base/common/iterator.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../../../../../base/common/lifecycle.js\";\nimport type { URI } from \"../../../../../../base/common/uri.js\";\nimport type { IRange } from \"../../../../../../editor/common/core/range.js\";\nimport { IConfigurationService } from \"../../../../../../platform/configuration/common/configuration.js\";\nimport {\n\ttype IMarkerData,\n\tIMarkerService,\n} from \"../../../../../../platform/markers/common/markers.js\";\nimport { IChatAgentService } from \"../../../../chat/common/chatAgents.js\";\nimport { CellKind, NotebookSetting } from \"../../../common/notebookCommon.js\";\nimport {\n\ttype ICellExecutionError,\n\ttype ICellExecutionStateChangedEvent,\n\ttype IExecutionStateChangedEvent,\n\tINotebookExecutionStateService,\n\tNotebookExecutionType,\n} from \"../../../common/notebookExecutionStateService.js\";\nimport type {\n\tINotebookEditor,\n\tINotebookEditorContribution,\n} from \"../../notebookBrowser.js\";\nimport { registerNotebookContribution } from \"../../notebookEditorExtensions.js\";\nimport { CodeCellViewModel } from \"../../viewModel/codeCellViewModel.js\";\n\ntype CellDiagnostic = {\n\tcellUri: URI;\n\terror: ICellExecutionError;\n\tdisposables: IDisposable[];\n};\n\nexport class CellDiagnostics\n\textends Disposable\n\timplements INotebookEditorContribution\n{\n\tstatic ID = \"workbench.notebook.cellDiagnostics\";\n\n\tprivate enabled = false;\n\tprivate listening = false;\n\tprivate diagnosticsByHandle: Map<number, CellDiagnostic> = new Map();\n\n\tconstructor(\n\t\tprivate readonly notebookEditor: INotebookEditor,\n\t\t@INotebookExecutionStateService\n\t\tprivate readonly notebookExecutionStateService: INotebookExecutionStateService,\n\t\t@IMarkerService private readonly markerService: IMarkerService,\n\t\t@IChatAgentService private readonly chatAgentService: IChatAgentService,\n\t\t@IConfigurationService\n\t\tprivate readonly configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\n\t\tthis.updateEnabled();\n\n\t\tthis._register(\n\t\t\tchatAgentService.onDidChangeAgents(() => this.updateEnabled()),\n\t\t);\n\t\tthis._register(\n\t\t\tconfigurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (\n\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\tNotebookSetting.cellFailureDiagnostics,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tthis.updateEnabled();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate updateEnabled() {\n\t\tconst settingEnabled = this.configurationService.getValue(\n\t\t\tNotebookSetting.cellFailureDiagnostics,\n\t\t);\n\t\tif (\n\t\t\tthis.enabled &&\n\t\t\t(!settingEnabled ||\n\t\t\t\tIterable.isEmpty(this.chatAgentService.getAgents()))\n\t\t) {\n\t\t\tthis.enabled = false;\n\t\t\tthis.clearAll();\n\t\t} else if (\n\t\t\t!this.enabled &&\n\t\t\tsettingEnabled &&\n\t\t\t!Iterable.isEmpty(this.chatAgentService.getAgents())\n\t\t) {\n\t\t\tthis.enabled = true;\n\t\t\tif (!this.listening) {\n\t\t\t\tthis.listening = true;\n\t\t\t\tthis._register(\n\t\t\t\t\tEvent.accumulate<\n\t\t\t\t\t\t| ICellExecutionStateChangedEvent\n\t\t\t\t\t\t| IExecutionStateChangedEvent\n\t\t\t\t\t>(\n\t\t\t\t\t\tthis.notebookExecutionStateService.onDidChangeExecution,\n\t\t\t\t\t\t200,\n\t\t\t\t\t)((e) => this.handleChangeExecutionState(e)),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate handleChangeExecutionState(\n\t\tchanges: (\n\t\t\t| ICellExecutionStateChangedEvent\n\t\t\t| IExecutionStateChangedEvent\n\t\t)[],\n\t) {\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst handled = new Set<number>();\n\t\tfor (const e of changes.reverse()) {\n\t\t\tconst notebookUri = this.notebookEditor.textModel?.uri;\n\t\t\tif (\n\t\t\t\te.type === NotebookExecutionType.cell &&\n\t\t\t\tnotebookUri &&\n\t\t\t\te.affectsNotebook(notebookUri) &&\n\t\t\t\t!handled.has(e.cellHandle)\n\t\t\t) {\n\t\t\t\thandled.add(e.cellHandle);\n\t\t\t\tif (!!e.changed) {\n\t\t\t\t\t// cell is running\n\t\t\t\t\tthis.clear(e.cellHandle);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setDiagnostics(e.cellHandle);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate clearAll() {\n\t\tfor (const handle of this.diagnosticsByHandle.keys()) {\n\t\t\tthis.clear(handle);\n\t\t}\n\t}\n\n\tpublic clear(cellHandle: number) {\n\t\tconst diagnostic = this.diagnosticsByHandle.get(cellHandle);\n\t\tif (diagnostic) {\n\t\t\tfor (const disposable of diagnostic.disposables) {\n\t\t\t\tdisposable.dispose();\n\t\t\t}\n\t\t\tthis.diagnosticsByHandle.delete(cellHandle);\n\t\t}\n\t}\n\n\tprivate setDiagnostics(cellHandle: number) {\n\t\tif (this.diagnosticsByHandle.has(cellHandle)) {\n\t\t\t// multiple diagnostics per cell not supported for now\n\t\t\treturn;\n\t\t}\n\n\t\tconst cell = this.notebookEditor.getCellByHandle(cellHandle);\n\t\tif (!cell || cell.cellKind !== CellKind.Code) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst metadata = cell.model.internalMetadata;\n\t\tif (\n\t\t\tcell instanceof CodeCellViewModel &&\n\t\t\t!metadata.lastRunSuccess &&\n\t\t\tmetadata?.error?.location\n\t\t) {\n\t\t\tconst disposables: IDisposable[] = [];\n\t\t\tconst marker = this.createMarkerData(\n\t\t\t\tmetadata.error.message,\n\t\t\t\tmetadata.error.location,\n\t\t\t);\n\t\t\tthis.markerService.changeOne(CellDiagnostics.ID, cell.uri, [\n\t\t\t\tmarker,\n\t\t\t]);\n\t\t\tdisposables.push(\n\t\t\t\ttoDisposable(() =>\n\t\t\t\t\tthis.markerService.changeOne(\n\t\t\t\t\t\tCellDiagnostics.ID,\n\t\t\t\t\t\tcell.uri,\n\t\t\t\t\t\t[],\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t\tcell.excecutionError.set(metadata.error, undefined);\n\t\t\tdisposables.push(\n\t\t\t\ttoDisposable(() =>\n\t\t\t\t\tcell.excecutionError.set(undefined, undefined),\n\t\t\t\t),\n\t\t\t);\n\t\t\tdisposables.push(\n\t\t\t\tcell.model.onDidChangeOutputs(() => {\n\t\t\t\t\tif (cell.model.outputs.length === 0) {\n\t\t\t\t\t\tthis.clear(cellHandle);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t\tdisposables.push(\n\t\t\t\tcell.model.onDidChangeContent(() => {\n\t\t\t\t\tthis.clear(cellHandle);\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis.diagnosticsByHandle.set(cellHandle, {\n\t\t\t\tcellUri: cell.uri,\n\t\t\t\terror: metadata.error,\n\t\t\t\tdisposables,\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate createMarkerData(message: string, location: IRange): IMarkerData {\n\t\treturn {\n\t\t\tseverity: 8,\n\t\t\tmessage: message,\n\t\t\tstartLineNumber: location.startLineNumber + 1,\n\t\t\tstartColumn: location.startColumn + 1,\n\t\t\tendLineNumber: location.endLineNumber + 1,\n\t\t\tendColumn: location.endColumn + 1,\n\t\t\tsource: \"Cell Execution Error\",\n\t\t};\n\t}\n\n\toverride dispose() {\n\t\tsuper.dispose();\n\t\tthis.clearAll();\n\t}\n}\n\nregisterNotebookContribution(CellDiagnostics.ID, CellDiagnostics);\n"],
  "mappings": "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",
  "names": []
}
