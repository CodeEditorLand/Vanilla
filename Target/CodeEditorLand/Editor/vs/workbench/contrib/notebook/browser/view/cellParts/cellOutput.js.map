{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/view/cellParts/cellOutput.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from \"../../../../../../base/browser/dom.js\";\nimport type { FastDomNode } from \"../../../../../../base/browser/fastDomNode.js\";\nimport { renderMarkdown } from \"../../../../../../base/browser/markdownRenderer.js\";\nimport { Action, type IAction } from \"../../../../../../base/common/actions.js\";\nimport type { IMarkdownString } from \"../../../../../../base/common/htmlContent.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n} from \"../../../../../../base/common/lifecycle.js\";\nimport { MarshalledId } from \"../../../../../../base/common/marshallingIds.js\";\nimport {\n\tautorun,\n\tobservableValue,\n} from \"../../../../../../base/common/observable.js\";\nimport { ThemeIcon } from \"../../../../../../base/common/themables.js\";\nimport * as nls from \"../../../../../../nls.js\";\nimport { createAndFillInActionBarActions } from \"../../../../../../platform/actions/browser/menuEntryActionViewItem.js\";\nimport { WorkbenchToolBar } from \"../../../../../../platform/actions/browser/toolbar.js\";\nimport {\n\tIMenuService,\n\tMenuId,\n} from \"../../../../../../platform/actions/common/actions.js\";\nimport { IContextKeyService } from \"../../../../../../platform/contextkey/common/contextkey.js\";\nimport { IInstantiationService } from \"../../../../../../platform/instantiation/common/instantiation.js\";\nimport { IOpenerService } from \"../../../../../../platform/opener/common/opener.js\";\nimport {\n\tIQuickInputService,\n\ttype IQuickPickItem,\n} from \"../../../../../../platform/quickinput/common/quickInput.js\";\nimport { IExtensionsWorkbenchService } from \"../../../../extensions/common/extensions.js\";\nimport type { NotebookTextModel } from \"../../../common/model/notebookTextModel.js\";\nimport {\n\tCellUri,\n\ttype IOrderedMimeType,\n\tNotebookCellExecutionState,\n\ttype NotebookCellOutputsSplice,\n\tRENDERER_NOT_AVAILABLE,\n\tisTextStreamMime,\n} from \"../../../common/notebookCommon.js\";\nimport {\n\tNOTEBOOK_CELL_HAS_HIDDEN_OUTPUTS,\n\tNOTEBOOK_CELL_IS_FIRST_OUTPUT,\n} from \"../../../common/notebookContextKeys.js\";\nimport { INotebookExecutionStateService } from \"../../../common/notebookExecutionStateService.js\";\nimport type { INotebookKernel } from \"../../../common/notebookKernelService.js\";\nimport { INotebookService } from \"../../../common/notebookService.js\";\nimport { TEXT_BASED_MIMETYPES } from \"../../contrib/clipboard/cellOutputClipboard.js\";\nimport { COPY_OUTPUT_COMMAND_ID } from \"../../controller/cellOutputActions.js\";\nimport {\n\ttype ICellOutputViewModel,\n\ttype ICellViewModel,\n\ttype IInsetRenderOutput,\n\ttype INotebookEditorDelegate,\n\tJUPYTER_EXTENSION_ID,\n\tRenderOutputType,\n} from \"../../notebookBrowser.js\";\nimport { mimetypeIcon } from \"../../notebookIcons.js\";\nimport type { CodeCellViewModel } from \"../../viewModel/codeCellViewModel.js\";\nimport { CellContentPart } from \"../cellPart.js\";\nimport type { CodeCellRenderTemplate } from \"../notebookRenderingCommon.js\";\n\ninterface IMimeTypeRenderer extends IQuickPickItem {\n\tindex: number;\n}\n\ninterface IRenderResult {\n\tinitRenderIsSynchronous: false;\n}\n\n// DOM structure\n//\n//  #output\n//  |\n//  |  #output-inner-container\n//  |                        |  #cell-output-toolbar\n//  |                        |  #output-element\n//  |                        |  #output-element\n//  |                        |  #output-element\n//  |  #output-inner-container\n//  |                        |  #cell-output-toolbar\n//  |                        |  #output-element\n//  |  #output-inner-container\n//  |                        |  #cell-output-toolbar\n//  |                        |  #output-element\nclass CellOutputElement extends Disposable {\n\tprivate readonly toolbarDisposables = this._register(new DisposableStore());\n\n\tinnerContainer?: HTMLElement;\n\trenderedOutputContainer!: HTMLElement;\n\trenderResult?: IInsetRenderOutput;\n\n\tprivate readonly contextKeyService: IContextKeyService;\n\tprivate toolbarAttached = false;\n\n\tconstructor(\n\t\tprivate notebookEditor: INotebookEditorDelegate,\n\t\tprivate viewCell: CodeCellViewModel,\n\t\tprivate cellOutputContainer: CellOutputContainer,\n\t\tprivate outputContainer: FastDomNode<HTMLElement>,\n\t\treadonly output: ICellOutputViewModel,\n\t\t@INotebookService private readonly notebookService: INotebookService,\n\t\t@IQuickInputService\n\t\tprivate readonly quickInputService: IQuickInputService,\n\t\t@IContextKeyService parentContextKeyService: IContextKeyService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IExtensionsWorkbenchService\n\t\tprivate readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis.contextKeyService = parentContextKeyService;\n\n\t\tthis._register(\n\t\t\tthis.output.model.onDidChangeData(() => {\n\t\t\t\tthis.rerender();\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.output.onDidResetRenderer(() => {\n\t\t\t\tthis.rerender();\n\t\t\t}),\n\t\t);\n\t}\n\n\tdetach() {\n\t\tthis.renderedOutputContainer?.remove();\n\n\t\tlet count = 0;\n\t\tif (this.innerContainer) {\n\t\t\tfor (let i = 0; i < this.innerContainer.childNodes.length; i++) {\n\t\t\t\tif (\n\t\t\t\t\t(this.innerContainer.childNodes[i] as HTMLElement)\n\t\t\t\t\t\t.className === \"rendered-output\"\n\t\t\t\t) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (count === 0) {\n\t\t\t\tthis.innerContainer.remove();\n\t\t\t}\n\t\t}\n\n\t\tthis.notebookEditor.removeInset(this.output);\n\t}\n\n\tupdateDOMTop(top: number) {\n\t\tif (this.innerContainer) {\n\t\t\tthis.innerContainer.style.top = `${top}px`;\n\t\t}\n\t}\n\n\trerender() {\n\t\tif (\n\t\t\tthis.notebookEditor.hasModel() &&\n\t\t\tthis.innerContainer &&\n\t\t\tthis.renderResult &&\n\t\t\tthis.renderResult.type === RenderOutputType.Extension\n\t\t) {\n\t\t\t// Output rendered by extension renderer got an update\n\t\t\tconst [mimeTypes, pick] = this.output.resolveMimeTypes(\n\t\t\t\tthis.notebookEditor.textModel,\n\t\t\t\tthis.notebookEditor.activeKernel?.preloadProvides,\n\t\t\t);\n\t\t\tconst pickedMimeType = mimeTypes[pick];\n\t\t\tif (\n\t\t\t\tpickedMimeType.mimeType === this.renderResult.mimeType &&\n\t\t\t\tpickedMimeType.rendererId === this.renderResult.renderer.id\n\t\t\t) {\n\t\t\t\t// Same mimetype, same renderer, call the extension renderer to update\n\t\t\t\tconst index = this.viewCell.outputsViewModels.indexOf(\n\t\t\t\t\tthis.output,\n\t\t\t\t);\n\t\t\t\tthis.notebookEditor.updateOutput(\n\t\t\t\t\tthis.viewCell,\n\t\t\t\t\tthis.renderResult,\n\t\t\t\t\tthis.viewCell.getOutputOffset(index),\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (this.innerContainer) {\n\t\t\t// Another mimetype or renderer is picked, we need to clear the current output and re-render\n\t\t\tconst nextElement = this.innerContainer.nextElementSibling;\n\t\t\tthis.toolbarDisposables.clear();\n\t\t\tconst element = this.innerContainer;\n\t\t\tif (element) {\n\t\t\t\telement.remove();\n\t\t\t\tthis.notebookEditor.removeInset(this.output);\n\t\t\t}\n\n\t\t\tthis.render(nextElement as HTMLElement);\n\t\t} else {\n\t\t\t// init rendering didn't happen\n\t\t\tconst currOutputIndex =\n\t\t\t\tthis.cellOutputContainer.renderedOutputEntries.findIndex(\n\t\t\t\t\t(entry) => entry.element === this,\n\t\t\t\t);\n\t\t\tconst previousSibling =\n\t\t\t\tcurrOutputIndex > 0 &&\n\t\t\t\t!!this.cellOutputContainer.renderedOutputEntries[\n\t\t\t\t\tcurrOutputIndex - 1\n\t\t\t\t].element.innerContainer?.parentElement\n\t\t\t\t\t? this.cellOutputContainer.renderedOutputEntries[\n\t\t\t\t\t\t\tcurrOutputIndex - 1\n\t\t\t\t\t\t].element.innerContainer\n\t\t\t\t\t: undefined;\n\t\t\tthis.render(previousSibling);\n\t\t}\n\n\t\tthis._relayoutCell();\n\t}\n\n\t// insert after previousSibling\n\tprivate _generateInnerOutputContainer(\n\t\tpreviousSibling: HTMLElement | undefined,\n\t\tpickedMimeTypeRenderer: IOrderedMimeType,\n\t) {\n\t\tthis.innerContainer = DOM.$(\".output-inner-container\");\n\n\t\tif (previousSibling && previousSibling.nextElementSibling) {\n\t\t\tthis.outputContainer.domNode.insertBefore(\n\t\t\t\tthis.innerContainer,\n\t\t\t\tpreviousSibling.nextElementSibling,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.outputContainer.domNode.appendChild(this.innerContainer);\n\t\t}\n\n\t\tthis.innerContainer.setAttribute(\n\t\t\t\"output-mime-type\",\n\t\t\tpickedMimeTypeRenderer.mimeType,\n\t\t);\n\t\treturn this.innerContainer;\n\t}\n\n\trender(\n\t\tpreviousSibling: HTMLElement | undefined,\n\t): IRenderResult | undefined {\n\t\tconst index = this.viewCell.outputsViewModels.indexOf(this.output);\n\n\t\tif (\n\t\t\tthis.viewCell.isOutputCollapsed ||\n\t\t\t!this.notebookEditor.hasModel()\n\t\t) {\n\t\t\tthis.cellOutputContainer.flagAsStale();\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst notebookUri = CellUri.parse(this.viewCell.uri)?.notebook;\n\t\tif (!notebookUri) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst notebookTextModel = this.notebookEditor.textModel;\n\n\t\tconst [mimeTypes, pick] = this.output.resolveMimeTypes(\n\t\t\tnotebookTextModel,\n\t\t\tthis.notebookEditor.activeKernel?.preloadProvides,\n\t\t);\n\n\t\tif (\n\t\t\t!mimeTypes.find((mimeType) => mimeType.isTrusted) ||\n\t\t\tmimeTypes.length === 0\n\t\t) {\n\t\t\tthis.viewCell.updateOutputHeight(\n\t\t\t\tindex,\n\t\t\t\t0,\n\t\t\t\t\"CellOutputElement#noMimeType\",\n\t\t\t);\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst selectedPresentation = mimeTypes[pick];\n\t\tlet renderer = this.notebookService.getRendererInfo(\n\t\t\tselectedPresentation.rendererId,\n\t\t);\n\t\tif (!renderer && selectedPresentation.mimeType.indexOf(\"text/\") > -1) {\n\t\t\trenderer = this.notebookService.getRendererInfo(\n\t\t\t\t\"vscode.builtin-renderer\",\n\t\t\t);\n\t\t}\n\n\t\tconst innerContainer = this._generateInnerOutputContainer(\n\t\t\tpreviousSibling,\n\t\t\tselectedPresentation,\n\t\t);\n\t\tif (index === 0 || this.output.visible.get()) {\n\t\t\tthis._attachToolbar(\n\t\t\t\tinnerContainer,\n\t\t\t\tnotebookTextModel,\n\t\t\t\tthis.notebookEditor.activeKernel,\n\t\t\t\tindex,\n\t\t\t\tmimeTypes,\n\t\t\t);\n\t\t} else {\n\t\t\tthis._register(\n\t\t\t\tautorun((reader) => {\n\t\t\t\t\tconst visible = reader.readObservable(this.output.visible);\n\t\t\t\t\tif (visible && !this.toolbarAttached) {\n\t\t\t\t\t\tthis._attachToolbar(\n\t\t\t\t\t\t\tinnerContainer,\n\t\t\t\t\t\t\tnotebookTextModel,\n\t\t\t\t\t\t\tthis.notebookEditor.activeKernel,\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\tmimeTypes,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (!visible) {\n\t\t\t\t\t\tthis.toolbarDisposables.clear();\n\t\t\t\t\t}\n\t\t\t\t\tthis.cellOutputContainer.checkForHiddenOutputs();\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis.cellOutputContainer.hasHiddenOutputs.set(true, undefined);\n\t\t}\n\n\t\tthis.renderedOutputContainer = DOM.append(\n\t\t\tinnerContainer,\n\t\t\tDOM.$(\".rendered-output\"),\n\t\t);\n\n\t\tthis.renderResult = renderer\n\t\t\t? {\n\t\t\t\t\ttype: RenderOutputType.Extension,\n\t\t\t\t\trenderer,\n\t\t\t\t\tsource: this.output,\n\t\t\t\t\tmimeType: selectedPresentation.mimeType,\n\t\t\t\t}\n\t\t\t: this._renderMissingRenderer(\n\t\t\t\t\tthis.output,\n\t\t\t\t\tselectedPresentation.mimeType,\n\t\t\t\t);\n\n\t\tthis.output.pickedMimeType = selectedPresentation;\n\n\t\tif (!this.renderResult) {\n\t\t\tthis.viewCell.updateOutputHeight(\n\t\t\t\tindex,\n\t\t\t\t0,\n\t\t\t\t\"CellOutputElement#renderResultUndefined\",\n\t\t\t);\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis.notebookEditor.createOutput(\n\t\t\tthis.viewCell,\n\t\t\tthis.renderResult,\n\t\t\tthis.viewCell.getOutputOffset(index),\n\t\t\tfalse,\n\t\t);\n\t\tinnerContainer.classList.add(\"background\");\n\n\t\treturn { initRenderIsSynchronous: false };\n\t}\n\n\tprivate _renderMissingRenderer(\n\t\tviewModel: ICellOutputViewModel,\n\t\tpreferredMimeType: string | undefined,\n\t): IInsetRenderOutput {\n\t\tif (!viewModel.model.outputs.length) {\n\t\t\treturn this._renderMessage(\n\t\t\t\tviewModel,\n\t\t\t\tnls.localize(\"empty\", \"Cell has no output\"),\n\t\t\t);\n\t\t}\n\n\t\tif (!preferredMimeType) {\n\t\t\tconst mimeTypes = viewModel.model.outputs.map((op) => op.mime);\n\t\t\tconst mimeTypesMessage = mimeTypes.join(\", \");\n\t\t\treturn this._renderMessage(\n\t\t\t\tviewModel,\n\t\t\t\tnls.localize(\n\t\t\t\t\t\"noRenderer.2\",\n\t\t\t\t\t\"No renderer could be found for output. It has the following mimetypes: {0}\",\n\t\t\t\t\tmimeTypesMessage,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\treturn this._renderSearchForMimetype(viewModel, preferredMimeType);\n\t}\n\n\tprivate _renderSearchForMimetype(\n\t\tviewModel: ICellOutputViewModel,\n\t\tmimeType: string,\n\t): IInsetRenderOutput {\n\t\tconst query = `@tag:notebookRenderer ${mimeType}`;\n\n\t\tconst p = DOM.$(\n\t\t\t\"p\",\n\t\t\tundefined,\n\t\t\t`No renderer could be found for mimetype \"${mimeType}\", but one might be available on the Marketplace.`,\n\t\t);\n\t\tconst a = DOM.$(\n\t\t\t\"a\",\n\t\t\t{\n\t\t\t\thref: `command:workbench.extensions.search?%22${query}%22`,\n\t\t\t\tclass: \"monaco-button monaco-text-button\",\n\t\t\t\ttabindex: 0,\n\t\t\t\trole: \"button\",\n\t\t\t\tstyle: \"padding: 8px; text-decoration: none; color: rgb(255, 255, 255); background-color: rgb(14, 99, 156); max-width: 200px;\",\n\t\t\t},\n\t\t\t`Search Marketplace`,\n\t\t);\n\n\t\treturn {\n\t\t\ttype: RenderOutputType.Html,\n\t\t\tsource: viewModel,\n\t\t\thtmlContent: p.outerHTML + a.outerHTML,\n\t\t};\n\t}\n\n\tprivate _renderMessage(\n\t\tviewModel: ICellOutputViewModel,\n\t\tmessage: string,\n\t): IInsetRenderOutput {\n\t\tconst el = DOM.$(\"p\", undefined, message);\n\t\treturn {\n\t\t\ttype: RenderOutputType.Html,\n\t\t\tsource: viewModel,\n\t\t\thtmlContent: el.outerHTML,\n\t\t};\n\t}\n\n\tprivate shouldEnableCopy(mimeTypes: readonly IOrderedMimeType[]) {\n\t\tif (\n\t\t\t!mimeTypes.find(\n\t\t\t\t(mimeType) =>\n\t\t\t\t\tTEXT_BASED_MIMETYPES.indexOf(mimeType.mimeType) ||\n\t\t\t\t\tmimeType.mimeType.startsWith(\"image/\"),\n\t\t\t)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (isTextStreamMime(mimeTypes[0].mimeType)) {\n\t\t\tconst cellViewModel = this.output.cellViewModel as ICellViewModel;\n\t\t\tconst index = cellViewModel.outputsViewModels.indexOf(this.output);\n\t\t\tif (index > 0) {\n\t\t\t\tconst previousOutput = cellViewModel.model.outputs[index - 1];\n\t\t\t\t// if the previous output was also a stream, the copy command will be in that output instead\n\t\t\t\treturn !isTextStreamMime(previousOutput.outputs[0].mime);\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async _attachToolbar(\n\t\toutputItemDiv: HTMLElement,\n\t\tnotebookTextModel: NotebookTextModel,\n\t\tkernel: INotebookKernel | undefined,\n\t\tindex: number,\n\t\tmimeTypes: readonly IOrderedMimeType[],\n\t) {\n\t\tconst hasMultipleMimeTypes =\n\t\t\tmimeTypes.filter((mimeType) => mimeType.isTrusted).length > 1;\n\t\tconst isCopyEnabled = this.shouldEnableCopy(mimeTypes);\n\t\tif (index > 0 && !hasMultipleMimeTypes && !isCopyEnabled) {\n\t\t\t// nothing to put in the toolbar\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.notebookEditor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\toutputItemDiv.style.position = \"relative\";\n\t\tconst mimeTypePicker = DOM.$(\".cell-output-toolbar\");\n\n\t\toutputItemDiv.appendChild(mimeTypePicker);\n\n\t\tconst toolbar = this.toolbarDisposables.add(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tWorkbenchToolBar,\n\t\t\t\tmimeTypePicker,\n\t\t\t\t{\n\t\t\t\t\trenderDropdownAsChildElement: false,\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\ttoolbar.context = {\n\t\t\tui: true,\n\t\t\tcell: this.output.cellViewModel as ICellViewModel,\n\t\t\toutputViewModel: this.output,\n\t\t\tnotebookEditor: this.notebookEditor,\n\t\t\t$mid: MarshalledId.NotebookCellActionContext,\n\t\t};\n\n\t\t// TODO: This could probably be a real registered action, but it has to talk to this output element\n\t\tconst pickAction = this.toolbarDisposables.add(\n\t\t\tnew Action(\n\t\t\t\t\"notebook.output.pickMimetype\",\n\t\t\t\tnls.localize(\"pickMimeType\", \"Change Presentation\"),\n\t\t\t\tThemeIcon.asClassName(mimetypeIcon),\n\t\t\t\tundefined,\n\t\t\t\tasync (_context) =>\n\t\t\t\t\tthis._pickActiveMimeTypeRenderer(\n\t\t\t\t\t\toutputItemDiv,\n\t\t\t\t\t\tnotebookTextModel,\n\t\t\t\t\t\tkernel,\n\t\t\t\t\t\tthis.output,\n\t\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\tconst menuContextKeyService = this.toolbarDisposables.add(\n\t\t\tthis.contextKeyService.createScoped(outputItemDiv),\n\t\t);\n\t\tconst hasHiddenOutputs = NOTEBOOK_CELL_HAS_HIDDEN_OUTPUTS.bindTo(\n\t\t\tmenuContextKeyService,\n\t\t);\n\t\tconst isFirstCellOutput = NOTEBOOK_CELL_IS_FIRST_OUTPUT.bindTo(\n\t\t\tmenuContextKeyService,\n\t\t);\n\t\tisFirstCellOutput.set(index === 0);\n\t\tthis.toolbarDisposables.add(\n\t\t\tautorun((reader) => {\n\t\t\t\thasHiddenOutputs.set(\n\t\t\t\t\treader.readObservable(\n\t\t\t\t\t\tthis.cellOutputContainer.hasHiddenOutputs,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\t\tconst menu = this.toolbarDisposables.add(\n\t\t\tthis.menuService.createMenu(\n\t\t\t\tMenuId.NotebookOutputToolbar,\n\t\t\t\tmenuContextKeyService,\n\t\t\t),\n\t\t);\n\n\t\tconst updateMenuToolbar = () => {\n\t\t\tconst primary: IAction[] = [];\n\t\t\tlet secondary: IAction[] = [];\n\t\t\tconst result = { primary, secondary };\n\n\t\t\tcreateAndFillInActionBarActions(\n\t\t\t\tmenu!,\n\t\t\t\t{ shouldForwardArgs: true },\n\t\t\t\tresult,\n\t\t\t\t() => false,\n\t\t\t);\n\t\t\tif (!isCopyEnabled) {\n\t\t\t\tsecondary = secondary.filter(\n\t\t\t\t\t(action) => action.id !== COPY_OUTPUT_COMMAND_ID,\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (hasMultipleMimeTypes) {\n\t\t\t\tsecondary = [pickAction, ...secondary];\n\t\t\t}\n\n\t\t\ttoolbar.setActions([], secondary);\n\t\t};\n\t\tupdateMenuToolbar();\n\t\tthis.toolbarDisposables.add(menu.onDidChange(updateMenuToolbar));\n\t}\n\n\tprivate async _pickActiveMimeTypeRenderer(\n\t\toutputItemDiv: HTMLElement,\n\t\tnotebookTextModel: NotebookTextModel,\n\t\tkernel: INotebookKernel | undefined,\n\t\tviewModel: ICellOutputViewModel,\n\t) {\n\t\tconst [mimeTypes, currIndex] = viewModel.resolveMimeTypes(\n\t\t\tnotebookTextModel,\n\t\t\tkernel?.preloadProvides,\n\t\t);\n\n\t\tconst items: IMimeTypeRenderer[] = [];\n\t\tconst unsupportedItems: IMimeTypeRenderer[] = [];\n\t\tmimeTypes.forEach((mimeType, index) => {\n\t\t\tif (mimeType.isTrusted) {\n\t\t\t\tconst arr =\n\t\t\t\t\tmimeType.rendererId === RENDERER_NOT_AVAILABLE\n\t\t\t\t\t\t? unsupportedItems\n\t\t\t\t\t\t: items;\n\t\t\t\tarr.push({\n\t\t\t\t\tlabel: mimeType.mimeType,\n\t\t\t\t\tid: mimeType.mimeType,\n\t\t\t\t\tindex: index,\n\t\t\t\t\tpicked: index === currIndex,\n\t\t\t\t\tdetail: this._generateRendererInfo(mimeType.rendererId),\n\t\t\t\t\tdescription:\n\t\t\t\t\t\tindex === currIndex\n\t\t\t\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\t\t\t\"curruentActiveMimeType\",\n\t\t\t\t\t\t\t\t\t\"Currently Active\",\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tif (\n\t\t\tunsupportedItems.some((m) =>\n\t\t\t\tJUPYTER_RENDERER_MIMETYPES.includes(m.id!),\n\t\t\t)\n\t\t) {\n\t\t\tunsupportedItems.push({\n\t\t\t\tlabel: nls.localize(\n\t\t\t\t\t\"installJupyterPrompt\",\n\t\t\t\t\t\"Install additional renderers from the marketplace\",\n\t\t\t\t),\n\t\t\t\tid: \"installRenderers\",\n\t\t\t\tindex: mimeTypes.length,\n\t\t\t});\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst picker = disposables.add(\n\t\t\tthis.quickInputService.createQuickPick({ useSeparators: true }),\n\t\t);\n\t\tpicker.items = [...items, { type: \"separator\" }, ...unsupportedItems];\n\t\tpicker.activeItems = items.filter((item) => !!item.picked);\n\t\tpicker.placeholder =\n\t\t\titems.length !== mimeTypes.length\n\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\"promptChooseMimeTypeInSecure.placeHolder\",\n\t\t\t\t\t\t\"Select mimetype to render for current output\",\n\t\t\t\t\t)\n\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\"promptChooseMimeType.placeHolder\",\n\t\t\t\t\t\t\"Select mimetype to render for current output\",\n\t\t\t\t\t);\n\n\t\tconst pick = await new Promise<IMimeTypeRenderer | undefined>(\n\t\t\t(resolve) => {\n\t\t\t\tdisposables.add(\n\t\t\t\t\tpicker.onDidAccept(() => {\n\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\tpicker.selectedItems.length === 1\n\t\t\t\t\t\t\t\t? (picker.selectedItems[0] as IMimeTypeRenderer)\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdisposables.dispose();\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\tpicker.show();\n\t\t\t},\n\t\t);\n\n\t\tif (pick === undefined || pick.index === currIndex) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (pick.id === \"installRenderers\") {\n\t\t\tthis._showJupyterExtension();\n\t\t\treturn;\n\t\t}\n\n\t\t// user chooses another mimetype\n\t\tconst nextElement = outputItemDiv.nextElementSibling;\n\t\tthis.toolbarDisposables.clear();\n\t\tconst element = this.innerContainer;\n\t\tif (element) {\n\t\t\telement.remove();\n\t\t\tthis.notebookEditor.removeInset(viewModel);\n\t\t}\n\n\t\tviewModel.pickedMimeType = mimeTypes[pick.index];\n\t\tthis.viewCell.updateOutputMinHeight(\n\t\t\tthis.viewCell.layoutInfo.outputTotalHeight,\n\t\t);\n\n\t\tconst { mimeType, rendererId } = mimeTypes[pick.index];\n\t\tthis.notebookService.updateMimePreferredRenderer(\n\t\t\tnotebookTextModel.viewType,\n\t\t\tmimeType,\n\t\t\trendererId,\n\t\t\tmimeTypes.map((m) => m.mimeType),\n\t\t);\n\t\tthis.render(nextElement as HTMLElement);\n\t\tthis._validateFinalOutputHeight(false);\n\t\tthis._relayoutCell();\n\t}\n\n\tprivate async _showJupyterExtension() {\n\t\tawait this.extensionsWorkbenchService.openSearch(\n\t\t\t`@id:${JUPYTER_EXTENSION_ID}`,\n\t\t);\n\t}\n\n\tprivate _generateRendererInfo(renderId: string): string {\n\t\tconst renderInfo = this.notebookService.getRendererInfo(renderId);\n\n\t\tif (renderInfo) {\n\t\t\tconst displayName =\n\t\t\t\trenderInfo.displayName !== \"\"\n\t\t\t\t\t? renderInfo.displayName\n\t\t\t\t\t: renderInfo.id;\n\t\t\treturn `${displayName} (${renderInfo.extensionId.value})`;\n\t\t}\n\n\t\treturn nls.localize(\"unavailableRenderInfo\", \"renderer not available\");\n\t}\n\n\tprivate _outputHeightTimer: any = null;\n\n\tprivate _validateFinalOutputHeight(synchronous: boolean) {\n\t\tif (this._outputHeightTimer !== null) {\n\t\t\tclearTimeout(this._outputHeightTimer);\n\t\t}\n\n\t\tif (synchronous) {\n\t\t\tthis.viewCell.unlockOutputHeight();\n\t\t} else {\n\t\t\tthis._outputHeightTimer = setTimeout(() => {\n\t\t\t\tthis.viewCell.unlockOutputHeight();\n\t\t\t}, 1000);\n\t\t}\n\t}\n\n\tprivate _relayoutCell() {\n\t\tthis.notebookEditor.layoutNotebookCell(\n\t\t\tthis.viewCell,\n\t\t\tthis.viewCell.layoutInfo.totalHeight,\n\t\t);\n\t}\n\n\toverride dispose() {\n\t\tif (this._outputHeightTimer) {\n\t\t\tthis.viewCell.unlockOutputHeight();\n\t\t\tclearTimeout(this._outputHeightTimer);\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n}\n\nclass OutputEntryViewHandler {\n\tconstructor(\n\t\treadonly model: ICellOutputViewModel,\n\t\treadonly element: CellOutputElement,\n\t) {}\n}\n\nenum CellOutputUpdateContext {\n\tExecution = 1,\n\tOther = 2,\n}\n\nexport class CellOutputContainer extends CellContentPart {\n\tprivate _outputEntries: OutputEntryViewHandler[] = [];\n\tprivate _hasStaleOutputs = false;\n\n\thasHiddenOutputs = observableValue<boolean>(\"hasHiddenOutputs\", false);\n\tcheckForHiddenOutputs() {\n\t\tif (\n\t\t\tthis._outputEntries.find((entry) => {\n\t\t\t\treturn entry.model.visible;\n\t\t\t})\n\t\t) {\n\t\t\tthis.hasHiddenOutputs.set(true, undefined);\n\t\t} else {\n\t\t\tthis.hasHiddenOutputs.set(false, undefined);\n\t\t}\n\t}\n\n\tget renderedOutputEntries() {\n\t\treturn this._outputEntries;\n\t}\n\n\tconstructor(\n\t\tprivate notebookEditor: INotebookEditorDelegate,\n\t\tprivate viewCell: CodeCellViewModel,\n\t\tprivate readonly templateData: CodeCellRenderTemplate,\n\t\tprivate options: { limit: number },\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@INotebookExecutionStateService\n\t\tprivate readonly _notebookExecutionStateService: INotebookExecutionStateService,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(\n\t\t\tviewCell.onDidStartExecution(() => {\n\t\t\t\tviewCell.updateOutputMinHeight(\n\t\t\t\t\tviewCell.layoutInfo.outputTotalHeight,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tviewCell.onDidStopExecution(() => {\n\t\t\t\tthis._validateFinalOutputHeight(false);\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tviewCell.onDidChangeOutputs((splice) => {\n\t\t\t\tconst executionState =\n\t\t\t\t\tthis._notebookExecutionStateService.getCellExecution(\n\t\t\t\t\t\tviewCell.uri,\n\t\t\t\t\t);\n\t\t\t\tconst context = executionState\n\t\t\t\t\t? CellOutputUpdateContext.Execution\n\t\t\t\t\t: CellOutputUpdateContext.Other;\n\t\t\t\tthis._updateOutputs(splice, context);\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tviewCell.onDidChangeLayout(() => {\n\t\t\t\tthis.updateInternalLayoutNow(viewCell);\n\t\t\t}),\n\t\t);\n\t}\n\n\toverride updateInternalLayoutNow(viewCell: CodeCellViewModel) {\n\t\tthis.templateData.outputContainer.setTop(\n\t\t\tviewCell.layoutInfo.outputContainerOffset,\n\t\t);\n\t\tthis.templateData.outputShowMoreContainer.setTop(\n\t\t\tviewCell.layoutInfo.outputShowMoreContainerOffset,\n\t\t);\n\n\t\tthis._outputEntries.forEach((entry) => {\n\t\t\tconst index = this.viewCell.outputsViewModels.indexOf(entry.model);\n\t\t\tif (index >= 0) {\n\t\t\t\tconst top = this.viewCell.getOutputOffsetInContainer(index);\n\t\t\t\tentry.element.updateDOMTop(top);\n\t\t\t}\n\t\t});\n\t}\n\n\trender() {\n\t\ttry {\n\t\t\tthis._doRender();\n\t\t} finally {\n\t\t\t// TODO@rebornix, this is probably not necessary at all as cell layout change would send the update request.\n\t\t\tthis._relayoutCell();\n\t\t}\n\t}\n\n\t/**\n\t * Notify that an output may have been swapped out without the model getting rendered.\n\t */\n\tflagAsStale() {\n\t\tthis._hasStaleOutputs = true;\n\t}\n\n\tprivate _doRender() {\n\t\tif (this.viewCell.outputsViewModels.length > 0) {\n\t\t\tif (this.viewCell.layoutInfo.outputTotalHeight !== 0) {\n\t\t\t\tthis.viewCell.updateOutputMinHeight(\n\t\t\t\t\tthis.viewCell.layoutInfo.outputTotalHeight,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tDOM.show(this.templateData.outputContainer.domNode);\n\t\t\tfor (\n\t\t\t\tlet index = 0;\n\t\t\t\tindex <\n\t\t\t\tMath.min(\n\t\t\t\t\tthis.options.limit,\n\t\t\t\t\tthis.viewCell.outputsViewModels.length,\n\t\t\t\t);\n\t\t\t\tindex++\n\t\t\t) {\n\t\t\t\tconst currOutput = this.viewCell.outputsViewModels[index];\n\t\t\t\tconst entry = this.instantiationService.createInstance(\n\t\t\t\t\tCellOutputElement,\n\t\t\t\t\tthis.notebookEditor,\n\t\t\t\t\tthis.viewCell,\n\t\t\t\t\tthis,\n\t\t\t\t\tthis.templateData.outputContainer,\n\t\t\t\t\tcurrOutput,\n\t\t\t\t);\n\t\t\t\tthis._outputEntries.push(\n\t\t\t\t\tnew OutputEntryViewHandler(currOutput, entry),\n\t\t\t\t);\n\t\t\t\tentry.render(undefined);\n\t\t\t}\n\n\t\t\tif (this.viewCell.outputsViewModels.length > this.options.limit) {\n\t\t\t\tDOM.show(this.templateData.outputShowMoreContainer.domNode);\n\t\t\t\tthis.viewCell.updateOutputShowMoreContainerHeight(46);\n\t\t\t}\n\n\t\t\tthis._validateFinalOutputHeight(false);\n\t\t} else {\n\t\t\t// noop\n\t\t\tDOM.hide(this.templateData.outputContainer.domNode);\n\t\t}\n\n\t\tthis.templateData.outputShowMoreContainer.domNode.innerText = \"\";\n\t\tif (this.viewCell.outputsViewModels.length > this.options.limit) {\n\t\t\tthis.templateData.outputShowMoreContainer.domNode.appendChild(\n\t\t\t\tthis._generateShowMoreElement(\n\t\t\t\t\tthis.templateData.templateDisposables,\n\t\t\t\t),\n\t\t\t);\n\t\t} else {\n\t\t\tDOM.hide(this.templateData.outputShowMoreContainer.domNode);\n\t\t\tthis.viewCell.updateOutputShowMoreContainerHeight(0);\n\t\t}\n\t}\n\n\tviewUpdateShowOutputs(initRendering: boolean): void {\n\t\tif (this._hasStaleOutputs) {\n\t\t\tthis._hasStaleOutputs = false;\n\t\t\tthis._outputEntries.forEach((entry) => {\n\t\t\t\tentry.element.rerender();\n\t\t\t});\n\t\t}\n\n\t\tfor (let index = 0; index < this._outputEntries.length; index++) {\n\t\t\tconst viewHandler = this._outputEntries[index];\n\t\t\tconst outputEntry = viewHandler.element;\n\t\t\tif (outputEntry.renderResult) {\n\t\t\t\tthis.notebookEditor.createOutput(\n\t\t\t\t\tthis.viewCell,\n\t\t\t\t\toutputEntry.renderResult as IInsetRenderOutput,\n\t\t\t\t\tthis.viewCell.getOutputOffset(index),\n\t\t\t\t\tfalse,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toutputEntry.render(undefined);\n\t\t\t}\n\t\t}\n\n\t\tthis._relayoutCell();\n\t}\n\n\tviewUpdateHideOuputs(): void {\n\t\tfor (let index = 0; index < this._outputEntries.length; index++) {\n\t\t\tthis.notebookEditor.hideInset(this._outputEntries[index].model);\n\t\t}\n\t}\n\n\tprivate _outputHeightTimer: any = null;\n\n\tprivate _validateFinalOutputHeight(synchronous: boolean) {\n\t\tif (this._outputHeightTimer !== null) {\n\t\t\tclearTimeout(this._outputHeightTimer);\n\t\t}\n\n\t\tconst executionState =\n\t\t\tthis._notebookExecutionStateService.getCellExecution(\n\t\t\t\tthis.viewCell.uri,\n\t\t\t);\n\n\t\tif (synchronous) {\n\t\t\tthis.viewCell.unlockOutputHeight();\n\t\t} else if (\n\t\t\texecutionState?.state !== NotebookCellExecutionState.Executing\n\t\t) {\n\t\t\tthis._outputHeightTimer = setTimeout(() => {\n\t\t\t\tthis.viewCell.unlockOutputHeight();\n\t\t\t}, 200);\n\t\t}\n\t}\n\n\tprivate _updateOutputs(\n\t\tsplice: NotebookCellOutputsSplice,\n\t\tcontext: CellOutputUpdateContext = CellOutputUpdateContext.Other,\n\t) {\n\t\tconst previousOutputHeight = this.viewCell.layoutInfo.outputTotalHeight;\n\n\t\t// for cell output update, we make sure the cell does not shrink before the new outputs are rendered.\n\t\tthis.viewCell.updateOutputMinHeight(previousOutputHeight);\n\n\t\tif (this.viewCell.outputsViewModels.length) {\n\t\t\tDOM.show(this.templateData.outputContainer.domNode);\n\t\t} else {\n\t\t\tDOM.hide(this.templateData.outputContainer.domNode);\n\t\t}\n\n\t\tthis.viewCell.spliceOutputHeights(\n\t\t\tsplice.start,\n\t\t\tsplice.deleteCount,\n\t\t\tsplice.newOutputs.map((_) => 0),\n\t\t);\n\t\tthis._renderNow(splice, context);\n\t}\n\n\tprivate _renderNow(\n\t\tsplice: NotebookCellOutputsSplice,\n\t\tcontext: CellOutputUpdateContext,\n\t) {\n\t\tif (splice.start >= this.options.limit) {\n\t\t\t// splice items out of limit\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstGroupEntries = this._outputEntries.slice(0, splice.start);\n\t\tconst deletedEntries = this._outputEntries.slice(\n\t\t\tsplice.start,\n\t\t\tsplice.start + splice.deleteCount,\n\t\t);\n\t\tconst secondGroupEntries = this._outputEntries.slice(\n\t\t\tsplice.start + splice.deleteCount,\n\t\t);\n\t\tlet newlyInserted = this.viewCell.outputsViewModels.slice(\n\t\t\tsplice.start,\n\t\t\tsplice.start + splice.newOutputs.length,\n\t\t);\n\n\t\t// [...firstGroup, ...deletedEntries, ...secondGroupEntries]  [...restInModel]\n\t\t// [...firstGroup, ...newlyInserted, ...secondGroupEntries, restInModel]\n\t\tif (\n\t\t\tfirstGroupEntries.length +\n\t\t\t\tnewlyInserted.length +\n\t\t\t\tsecondGroupEntries.length >\n\t\t\tthis.options.limit\n\t\t) {\n\t\t\t// exceeds limit again\n\t\t\tif (\n\t\t\t\tfirstGroupEntries.length + newlyInserted.length >\n\t\t\t\tthis.options.limit\n\t\t\t) {\n\t\t\t\t[...deletedEntries, ...secondGroupEntries].forEach((entry) => {\n\t\t\t\t\tentry.element.detach();\n\t\t\t\t\tentry.element.dispose();\n\t\t\t\t});\n\n\t\t\t\tnewlyInserted = newlyInserted.slice(\n\t\t\t\t\t0,\n\t\t\t\t\tthis.options.limit - firstGroupEntries.length,\n\t\t\t\t);\n\t\t\t\tconst newlyInsertedEntries = newlyInserted.map((insert) => {\n\t\t\t\t\treturn new OutputEntryViewHandler(\n\t\t\t\t\t\tinsert,\n\t\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\t\tCellOutputElement,\n\t\t\t\t\t\t\tthis.notebookEditor,\n\t\t\t\t\t\t\tthis.viewCell,\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tthis.templateData.outputContainer,\n\t\t\t\t\t\t\tinsert,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t});\n\n\t\t\t\tthis._outputEntries = [\n\t\t\t\t\t...firstGroupEntries,\n\t\t\t\t\t...newlyInsertedEntries,\n\t\t\t\t];\n\n\t\t\t\t// render newly inserted outputs\n\t\t\t\tfor (\n\t\t\t\t\tlet i = firstGroupEntries.length;\n\t\t\t\t\ti < this._outputEntries.length;\n\t\t\t\t\ti++\n\t\t\t\t) {\n\t\t\t\t\tthis._outputEntries[i].element.render(undefined);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// part of secondGroupEntries are pushed out of view\n\t\t\t\t// now we have to be creative as secondGroupEntries might not use dedicated containers\n\t\t\t\tconst elementsPushedOutOfView = secondGroupEntries.slice(\n\t\t\t\t\tthis.options.limit -\n\t\t\t\t\t\tfirstGroupEntries.length -\n\t\t\t\t\t\tnewlyInserted.length,\n\t\t\t\t);\n\t\t\t\t[...deletedEntries, ...elementsPushedOutOfView].forEach(\n\t\t\t\t\t(entry) => {\n\t\t\t\t\t\tentry.element.detach();\n\t\t\t\t\t\tentry.element.dispose();\n\t\t\t\t\t},\n\t\t\t\t);\n\n\t\t\t\t// exclusive\n\t\t\t\tconst reRenderRightBoundary =\n\t\t\t\t\tfirstGroupEntries.length + newlyInserted.length;\n\n\t\t\t\tconst newlyInsertedEntries = newlyInserted.map((insert) => {\n\t\t\t\t\treturn new OutputEntryViewHandler(\n\t\t\t\t\t\tinsert,\n\t\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\t\tCellOutputElement,\n\t\t\t\t\t\t\tthis.notebookEditor,\n\t\t\t\t\t\t\tthis.viewCell,\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tthis.templateData.outputContainer,\n\t\t\t\t\t\t\tinsert,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t});\n\n\t\t\t\tthis._outputEntries = [\n\t\t\t\t\t...firstGroupEntries,\n\t\t\t\t\t...newlyInsertedEntries,\n\t\t\t\t\t...secondGroupEntries.slice(\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tthis.options.limit -\n\t\t\t\t\t\t\tfirstGroupEntries.length -\n\t\t\t\t\t\t\tnewlyInserted.length,\n\t\t\t\t\t),\n\t\t\t\t];\n\n\t\t\t\tfor (\n\t\t\t\t\tlet i = firstGroupEntries.length;\n\t\t\t\t\ti < reRenderRightBoundary;\n\t\t\t\t\ti++\n\t\t\t\t) {\n\t\t\t\t\tconst previousSibling =\n\t\t\t\t\t\ti - 1 >= 0 &&\n\t\t\t\t\t\tthis._outputEntries[i - 1] &&\n\t\t\t\t\t\t!!this._outputEntries[i - 1].element.innerContainer\n\t\t\t\t\t\t\t?.parentElement\n\t\t\t\t\t\t\t? this._outputEntries[i - 1].element.innerContainer\n\t\t\t\t\t\t\t: undefined;\n\t\t\t\t\tthis._outputEntries[i].element.render(previousSibling);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// after splice, it doesn't exceed\n\t\t\tdeletedEntries.forEach((entry) => {\n\t\t\t\tentry.element.detach();\n\t\t\t\tentry.element.dispose();\n\t\t\t});\n\n\t\t\tconst reRenderRightBoundary =\n\t\t\t\tfirstGroupEntries.length + newlyInserted.length;\n\n\t\t\tconst newlyInsertedEntries = newlyInserted.map((insert) => {\n\t\t\t\treturn new OutputEntryViewHandler(\n\t\t\t\t\tinsert,\n\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\tCellOutputElement,\n\t\t\t\t\t\tthis.notebookEditor,\n\t\t\t\t\t\tthis.viewCell,\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\tthis.templateData.outputContainer,\n\t\t\t\t\t\tinsert,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tlet outputsNewlyAvailable: OutputEntryViewHandler[] = [];\n\n\t\t\tif (\n\t\t\t\tfirstGroupEntries.length +\n\t\t\t\t\tnewlyInsertedEntries.length +\n\t\t\t\t\tsecondGroupEntries.length <\n\t\t\t\tthis.viewCell.outputsViewModels.length\n\t\t\t) {\n\t\t\t\tconst last = Math.min(\n\t\t\t\t\tthis.options.limit,\n\t\t\t\t\tthis.viewCell.outputsViewModels.length,\n\t\t\t\t);\n\t\t\t\toutputsNewlyAvailable = this.viewCell.outputsViewModels\n\t\t\t\t\t.slice(\n\t\t\t\t\t\tfirstGroupEntries.length +\n\t\t\t\t\t\t\tnewlyInsertedEntries.length +\n\t\t\t\t\t\t\tsecondGroupEntries.length,\n\t\t\t\t\t\tlast,\n\t\t\t\t\t)\n\t\t\t\t\t.map((output) => {\n\t\t\t\t\t\treturn new OutputEntryViewHandler(\n\t\t\t\t\t\t\toutput,\n\t\t\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\t\t\tCellOutputElement,\n\t\t\t\t\t\t\t\tthis.notebookEditor,\n\t\t\t\t\t\t\t\tthis.viewCell,\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\tthis.templateData.outputContainer,\n\t\t\t\t\t\t\t\toutput,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis._outputEntries = [\n\t\t\t\t...firstGroupEntries,\n\t\t\t\t...newlyInsertedEntries,\n\t\t\t\t...secondGroupEntries,\n\t\t\t\t...outputsNewlyAvailable,\n\t\t\t];\n\n\t\t\tfor (\n\t\t\t\tlet i = firstGroupEntries.length;\n\t\t\t\ti < reRenderRightBoundary;\n\t\t\t\ti++\n\t\t\t) {\n\t\t\t\tconst previousSibling =\n\t\t\t\t\ti - 1 >= 0 &&\n\t\t\t\t\tthis._outputEntries[i - 1] &&\n\t\t\t\t\t!!this._outputEntries[i - 1].element.innerContainer\n\t\t\t\t\t\t?.parentElement\n\t\t\t\t\t\t? this._outputEntries[i - 1].element.innerContainer\n\t\t\t\t\t\t: undefined;\n\t\t\t\tthis._outputEntries[i].element.render(previousSibling);\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < outputsNewlyAvailable.length; i++) {\n\t\t\t\tthis._outputEntries[\n\t\t\t\t\tfirstGroupEntries.length +\n\t\t\t\t\t\tnewlyInserted.length +\n\t\t\t\t\t\tsecondGroupEntries.length +\n\t\t\t\t\t\ti\n\t\t\t\t].element.render(undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (this.viewCell.outputsViewModels.length > this.options.limit) {\n\t\t\tDOM.show(this.templateData.outputShowMoreContainer.domNode);\n\t\t\tif (\n\t\t\t\t!this.templateData.outputShowMoreContainer.domNode.hasChildNodes()\n\t\t\t) {\n\t\t\t\tthis.templateData.outputShowMoreContainer.domNode.appendChild(\n\t\t\t\t\tthis._generateShowMoreElement(\n\t\t\t\t\t\tthis.templateData.templateDisposables,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.viewCell.updateOutputShowMoreContainerHeight(46);\n\t\t} else {\n\t\t\tDOM.hide(this.templateData.outputShowMoreContainer.domNode);\n\t\t}\n\n\t\tthis._relayoutCell();\n\t\t// if it's clearing all outputs, or outputs are all rendered synchronously\n\t\t// shrink immediately as the final output height will be zero.\n\t\t// if it's rerun, then the output clearing might be temporary, so we don't shrink immediately\n\t\tthis._validateFinalOutputHeight(\n\t\t\tcontext === CellOutputUpdateContext.Other &&\n\t\t\t\tthis.viewCell.outputsViewModels.length === 0,\n\t\t);\n\t}\n\n\tprivate _generateShowMoreElement(\n\t\tdisposables: DisposableStore,\n\t): HTMLElement {\n\t\tconst md: IMarkdownString = {\n\t\t\tvalue: `There are more than ${this.options.limit} outputs, [show more (open the raw output data in a text editor) ...](command:workbench.action.openLargeOutput)`,\n\t\t\tisTrusted: true,\n\t\t\tsupportThemeIcons: true,\n\t\t};\n\n\t\tconst rendered = renderMarkdown(md, {\n\t\t\tactionHandler: {\n\t\t\t\tcallback: (content) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tcontent === \"command:workbench.action.openLargeOutput\"\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.openerService.open(\n\t\t\t\t\t\t\tCellUri.generateCellOutputUri(\n\t\t\t\t\t\t\t\tthis.notebookEditor.textModel!.uri,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t},\n\t\t\t\tdisposables,\n\t\t\t},\n\t\t});\n\t\tdisposables.add(rendered);\n\n\t\trendered.element.classList.add(\"output-show-more\");\n\t\treturn rendered.element;\n\t}\n\n\tprivate _relayoutCell() {\n\t\tthis.notebookEditor.layoutNotebookCell(\n\t\t\tthis.viewCell,\n\t\t\tthis.viewCell.layoutInfo.totalHeight,\n\t\t);\n\t}\n\n\toverride dispose() {\n\t\tthis.viewCell.updateOutputMinHeight(0);\n\n\t\tif (this._outputHeightTimer) {\n\t\t\tclearTimeout(this._outputHeightTimer);\n\t\t}\n\n\t\tthis._outputEntries.forEach((entry) => {\n\t\t\tentry.element.dispose();\n\t\t});\n\n\t\tsuper.dispose();\n\t}\n}\n\nconst JUPYTER_RENDERER_MIMETYPES = [\n\t\"application/geo+json\",\n\t\"application/vdom.v1+json\",\n\t\"application/vnd.dataresource+json\",\n\t\"application/vnd.plotly.v1+json\",\n\t\"application/vnd.vega.v2+json\",\n\t\"application/vnd.vega.v3+json\",\n\t\"application/vnd.vega.v4+json\",\n\t\"application/vnd.vega.v5+json\",\n\t\"application/vnd.vegalite.v1+json\",\n\t\"application/vnd.vegalite.v2+json\",\n\t\"application/vnd.vegalite.v3+json\",\n\t\"application/vnd.vegalite.v4+json\",\n\t\"application/x-nteract-model-debug+json\",\n\t\"image/svg+xml\",\n\t\"text/latex\",\n\t\"text/vnd.plotly.v1+html\",\n\t\"application/vnd.jupyter.widget-view+json\",\n\t\"application/vnd.code.notebook.error\",\n];\n"],
  "mappings": "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",
  "names": ["mimeType", "CellOutputUpdateContext"]
}
