{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/view/cellParts/cellOutput.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from '../../../../../../base/browser/dom.js';\nimport { FastDomNode } from '../../../../../../base/browser/fastDomNode.js';\nimport { renderMarkdown } from '../../../../../../base/browser/markdownRenderer.js';\nimport { Action, IAction } from '../../../../../../base/common/actions.js';\nimport { IMarkdownString } from '../../../../../../base/common/htmlContent.js';\nimport { Disposable, DisposableStore } from '../../../../../../base/common/lifecycle.js';\nimport { MarshalledId } from '../../../../../../base/common/marshallingIds.js';\nimport * as nls from '../../../../../../nls.js';\nimport { createAndFillInActionBarActions } from '../../../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { WorkbenchToolBar } from '../../../../../../platform/actions/browser/toolbar.js';\nimport { IMenuService, MenuId } from '../../../../../../platform/actions/common/actions.js';\nimport { IContextKeyService } from '../../../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../../../platform/instantiation/common/instantiation.js';\nimport { IOpenerService } from '../../../../../../platform/opener/common/opener.js';\nimport { IQuickInputService, IQuickPickItem } from '../../../../../../platform/quickinput/common/quickInput.js';\nimport { ThemeIcon } from '../../../../../../base/common/themables.js';\nimport { IExtensionsWorkbenchService } from '../../../../extensions/common/extensions.js';\nimport { ICellOutputViewModel, ICellViewModel, IInsetRenderOutput, INotebookEditorDelegate, JUPYTER_EXTENSION_ID, RenderOutputType } from '../../notebookBrowser.js';\nimport { mimetypeIcon } from '../../notebookIcons.js';\nimport { CellContentPart } from '../cellPart.js';\nimport { CodeCellRenderTemplate } from '../notebookRenderingCommon.js';\nimport { CodeCellViewModel } from '../../viewModel/codeCellViewModel.js';\nimport { NotebookTextModel } from '../../../common/model/notebookTextModel.js';\nimport { CellUri, IOrderedMimeType, NotebookCellExecutionState, NotebookCellOutputsSplice, RENDERER_NOT_AVAILABLE, isTextStreamMime } from '../../../common/notebookCommon.js';\nimport { INotebookExecutionStateService } from '../../../common/notebookExecutionStateService.js';\nimport { INotebookKernel } from '../../../common/notebookKernelService.js';\nimport { INotebookService } from '../../../common/notebookService.js';\nimport { COPY_OUTPUT_COMMAND_ID } from '../../controller/cellOutputActions.js';\nimport { TEXT_BASED_MIMETYPES } from '../../contrib/clipboard/cellOutputClipboard.js';\nimport { autorun, observableValue } from '../../../../../../base/common/observable.js';\nimport { NOTEBOOK_CELL_HAS_HIDDEN_OUTPUTS, NOTEBOOK_CELL_IS_FIRST_OUTPUT } from '../../../common/notebookContextKeys.js';\n\ninterface IMimeTypeRenderer extends IQuickPickItem {\n\tindex: number;\n}\n\ninterface IRenderResult {\n\tinitRenderIsSynchronous: false;\n}\n\n// DOM structure\n//\n//  #output\n//  |\n//  |  #output-inner-container\n//  |                        |  #cell-output-toolbar\n//  |                        |  #output-element\n//  |                        |  #output-element\n//  |                        |  #output-element\n//  |  #output-inner-container\n//  |                        |  #cell-output-toolbar\n//  |                        |  #output-element\n//  |  #output-inner-container\n//  |                        |  #cell-output-toolbar\n//  |                        |  #output-element\nclass CellOutputElement extends Disposable {\n\tprivate readonly toolbarDisposables = this._register(new DisposableStore());\n\n\tinnerContainer?: HTMLElement;\n\trenderedOutputContainer!: HTMLElement;\n\trenderResult?: IInsetRenderOutput;\n\n\tprivate readonly contextKeyService: IContextKeyService;\n\tprivate toolbarAttached = false;\n\n\tconstructor(\n\t\tprivate notebookEditor: INotebookEditorDelegate,\n\t\tprivate viewCell: CodeCellViewModel,\n\t\tprivate cellOutputContainer: CellOutputContainer,\n\t\tprivate outputContainer: FastDomNode<HTMLElement>,\n\t\treadonly output: ICellOutputViewModel,\n\t\t@INotebookService private readonly notebookService: INotebookService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IContextKeyService parentContextKeyService: IContextKeyService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis.contextKeyService = parentContextKeyService;\n\n\t\tthis._register(this.output.model.onDidChangeData(() => {\n\t\t\tthis.rerender();\n\t\t}));\n\n\t\tthis._register(this.output.onDidResetRenderer(() => {\n\t\t\tthis.rerender();\n\t\t}));\n\t}\n\n\tdetach() {\n\t\tthis.renderedOutputContainer?.remove();\n\n\t\tlet count = 0;\n\t\tif (this.innerContainer) {\n\t\t\tfor (let i = 0; i < this.innerContainer.childNodes.length; i++) {\n\t\t\t\tif ((this.innerContainer.childNodes[i] as HTMLElement).className === 'rendered-output') {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (count === 0) {\n\t\t\t\tthis.innerContainer.remove();\n\t\t\t}\n\t\t}\n\n\t\tthis.notebookEditor.removeInset(this.output);\n\t}\n\n\tupdateDOMTop(top: number) {\n\t\tif (this.innerContainer) {\n\t\t\tthis.innerContainer.style.top = `${top}px`;\n\t\t}\n\t}\n\n\trerender() {\n\t\tif (\n\t\t\tthis.notebookEditor.hasModel() &&\n\t\t\tthis.innerContainer &&\n\t\t\tthis.renderResult &&\n\t\t\tthis.renderResult.type === RenderOutputType.Extension\n\t\t) {\n\t\t\t// Output rendered by extension renderer got an update\n\t\t\tconst [mimeTypes, pick] = this.output.resolveMimeTypes(this.notebookEditor.textModel, this.notebookEditor.activeKernel?.preloadProvides);\n\t\t\tconst pickedMimeType = mimeTypes[pick];\n\t\t\tif (pickedMimeType.mimeType === this.renderResult.mimeType && pickedMimeType.rendererId === this.renderResult.renderer.id) {\n\t\t\t\t// Same mimetype, same renderer, call the extension renderer to update\n\t\t\t\tconst index = this.viewCell.outputsViewModels.indexOf(this.output);\n\t\t\t\tthis.notebookEditor.updateOutput(this.viewCell, this.renderResult, this.viewCell.getOutputOffset(index));\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (!this.innerContainer) {\n\t\t\t// init rendering didn't happen\n\t\t\tconst currOutputIndex = this.cellOutputContainer.renderedOutputEntries.findIndex(entry => entry.element === this);\n\t\t\tconst previousSibling = currOutputIndex > 0 && !!(this.cellOutputContainer.renderedOutputEntries[currOutputIndex - 1].element.innerContainer?.parentElement)\n\t\t\t\t? this.cellOutputContainer.renderedOutputEntries[currOutputIndex - 1].element.innerContainer\n\t\t\t\t: undefined;\n\t\t\tthis.render(previousSibling);\n\t\t} else {\n\t\t\t// Another mimetype or renderer is picked, we need to clear the current output and re-render\n\t\t\tconst nextElement = this.innerContainer.nextElementSibling;\n\t\t\tthis.toolbarDisposables.clear();\n\t\t\tconst element = this.innerContainer;\n\t\t\tif (element) {\n\t\t\t\telement.remove();\n\t\t\t\tthis.notebookEditor.removeInset(this.output);\n\t\t\t}\n\n\t\t\tthis.render(nextElement as HTMLElement);\n\t\t}\n\n\t\tthis._relayoutCell();\n\t}\n\n\t// insert after previousSibling\n\tprivate _generateInnerOutputContainer(previousSibling: HTMLElement | undefined, pickedMimeTypeRenderer: IOrderedMimeType) {\n\t\tthis.innerContainer = DOM.$('.output-inner-container');\n\n\t\tif (previousSibling && previousSibling.nextElementSibling) {\n\t\t\tthis.outputContainer.domNode.insertBefore(this.innerContainer, previousSibling.nextElementSibling);\n\t\t} else {\n\t\t\tthis.outputContainer.domNode.appendChild(this.innerContainer);\n\t\t}\n\n\t\tthis.innerContainer.setAttribute('output-mime-type', pickedMimeTypeRenderer.mimeType);\n\t\treturn this.innerContainer;\n\t}\n\n\trender(previousSibling: HTMLElement | undefined): IRenderResult | undefined {\n\t\tconst index = this.viewCell.outputsViewModels.indexOf(this.output);\n\n\t\tif (this.viewCell.isOutputCollapsed || !this.notebookEditor.hasModel()) {\n\t\t\tthis.cellOutputContainer.flagAsStale();\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst notebookUri = CellUri.parse(this.viewCell.uri)?.notebook;\n\t\tif (!notebookUri) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst notebookTextModel = this.notebookEditor.textModel;\n\n\t\tconst [mimeTypes, pick] = this.output.resolveMimeTypes(notebookTextModel, this.notebookEditor.activeKernel?.preloadProvides);\n\n\t\tif (!mimeTypes.find(mimeType => mimeType.isTrusted) || mimeTypes.length === 0) {\n\t\t\tthis.viewCell.updateOutputHeight(index, 0, 'CellOutputElement#noMimeType');\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst selectedPresentation = mimeTypes[pick];\n\t\tlet renderer = this.notebookService.getRendererInfo(selectedPresentation.rendererId);\n\t\tif (!renderer && selectedPresentation.mimeType.indexOf('text/') > -1) {\n\t\t\trenderer = this.notebookService.getRendererInfo('vscode.builtin-renderer');\n\t\t}\n\n\t\tconst innerContainer = this._generateInnerOutputContainer(previousSibling, selectedPresentation);\n\t\tif (index === 0 || this.output.visible.get()) {\n\t\t\tthis._attachToolbar(innerContainer, notebookTextModel, this.notebookEditor.activeKernel, index, mimeTypes);\n\t\t} else {\n\t\t\tthis._register(autorun((reader) => {\n\t\t\t\tconst visible = reader.readObservable(this.output.visible);\n\t\t\t\tif (visible && !this.toolbarAttached) {\n\t\t\t\t\tthis._attachToolbar(innerContainer, notebookTextModel, this.notebookEditor.activeKernel, index, mimeTypes);\n\t\t\t\t} else if (!visible) {\n\t\t\t\t\tthis.toolbarDisposables.clear();\n\t\t\t\t}\n\t\t\t\tthis.cellOutputContainer.checkForHiddenOutputs();\n\t\t\t}));\n\t\t\tthis.cellOutputContainer.hasHiddenOutputs.set(true, undefined);\n\t\t}\n\n\t\tthis.renderedOutputContainer = DOM.append(innerContainer, DOM.$('.rendered-output'));\n\n\n\t\tthis.renderResult = renderer\n\t\t\t? { type: RenderOutputType.Extension, renderer, source: this.output, mimeType: selectedPresentation.mimeType }\n\t\t\t: this._renderMissingRenderer(this.output, selectedPresentation.mimeType);\n\n\t\tthis.output.pickedMimeType = selectedPresentation;\n\n\t\tif (!this.renderResult) {\n\t\t\tthis.viewCell.updateOutputHeight(index, 0, 'CellOutputElement#renderResultUndefined');\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis.notebookEditor.createOutput(this.viewCell, this.renderResult, this.viewCell.getOutputOffset(index), false);\n\t\tinnerContainer.classList.add('background');\n\n\t\treturn { initRenderIsSynchronous: false };\n\t}\n\n\tprivate _renderMissingRenderer(viewModel: ICellOutputViewModel, preferredMimeType: string | undefined): IInsetRenderOutput {\n\t\tif (!viewModel.model.outputs.length) {\n\t\t\treturn this._renderMessage(viewModel, nls.localize('empty', \"Cell has no output\"));\n\t\t}\n\n\t\tif (!preferredMimeType) {\n\t\t\tconst mimeTypes = viewModel.model.outputs.map(op => op.mime);\n\t\t\tconst mimeTypesMessage = mimeTypes.join(', ');\n\t\t\treturn this._renderMessage(viewModel, nls.localize('noRenderer.2', \"No renderer could be found for output. It has the following mimetypes: {0}\", mimeTypesMessage));\n\t\t}\n\n\t\treturn this._renderSearchForMimetype(viewModel, preferredMimeType);\n\t}\n\n\tprivate _renderSearchForMimetype(viewModel: ICellOutputViewModel, mimeType: string): IInsetRenderOutput {\n\t\tconst query = `@tag:notebookRenderer ${mimeType}`;\n\n\t\tconst p = DOM.$('p', undefined, `No renderer could be found for mimetype \"${mimeType}\", but one might be available on the Marketplace.`);\n\t\tconst a = DOM.$('a', { href: `command:workbench.extensions.search?%22${query}%22`, class: 'monaco-button monaco-text-button', tabindex: 0, role: 'button', style: 'padding: 8px; text-decoration: none; color: rgb(255, 255, 255); background-color: rgb(14, 99, 156); max-width: 200px;' }, `Search Marketplace`);\n\n\t\treturn {\n\t\t\ttype: RenderOutputType.Html,\n\t\t\tsource: viewModel,\n\t\t\thtmlContent: p.outerHTML + a.outerHTML\n\t\t};\n\t}\n\n\tprivate _renderMessage(viewModel: ICellOutputViewModel, message: string): IInsetRenderOutput {\n\t\tconst el = DOM.$('p', undefined, message);\n\t\treturn { type: RenderOutputType.Html, source: viewModel, htmlContent: el.outerHTML };\n\t}\n\n\tprivate shouldEnableCopy(mimeTypes: readonly IOrderedMimeType[]) {\n\t\tif (!mimeTypes.find(mimeType => TEXT_BASED_MIMETYPES.indexOf(mimeType.mimeType) || mimeType.mimeType.startsWith('image/'))) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (isTextStreamMime(mimeTypes[0].mimeType)) {\n\t\t\tconst cellViewModel = this.output.cellViewModel as ICellViewModel;\n\t\t\tconst index = cellViewModel.outputsViewModels.indexOf(this.output);\n\t\t\tif (index > 0) {\n\t\t\t\tconst previousOutput = cellViewModel.model.outputs[index - 1];\n\t\t\t\t// if the previous output was also a stream, the copy command will be in that output instead\n\t\t\t\treturn !isTextStreamMime(previousOutput.outputs[0].mime);\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async _attachToolbar(outputItemDiv: HTMLElement, notebookTextModel: NotebookTextModel, kernel: INotebookKernel | undefined, index: number, mimeTypes: readonly IOrderedMimeType[]) {\n\t\tconst hasMultipleMimeTypes = mimeTypes.filter(mimeType => mimeType.isTrusted).length > 1;\n\t\tconst isCopyEnabled = this.shouldEnableCopy(mimeTypes);\n\t\tif (index > 0 && !hasMultipleMimeTypes && !isCopyEnabled) {\n\t\t\t// nothing to put in the toolbar\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.notebookEditor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\toutputItemDiv.style.position = 'relative';\n\t\tconst mimeTypePicker = DOM.$('.cell-output-toolbar');\n\n\t\toutputItemDiv.appendChild(mimeTypePicker);\n\n\t\tconst toolbar = this.toolbarDisposables.add(this.instantiationService.createInstance(WorkbenchToolBar, mimeTypePicker, {\n\t\t\trenderDropdownAsChildElement: false\n\t\t}));\n\t\ttoolbar.context = {\n\t\t\tui: true,\n\t\t\tcell: this.output.cellViewModel as ICellViewModel,\n\t\t\toutputViewModel: this.output,\n\t\t\tnotebookEditor: this.notebookEditor,\n\t\t\t$mid: MarshalledId.NotebookCellActionContext\n\t\t};\n\n\t\t// TODO: This could probably be a real registered action, but it has to talk to this output element\n\t\tconst pickAction = this.toolbarDisposables.add(new Action('notebook.output.pickMimetype', nls.localize('pickMimeType', \"Change Presentation\"), ThemeIcon.asClassName(mimetypeIcon), undefined,\n\t\t\tasync _context => this._pickActiveMimeTypeRenderer(outputItemDiv, notebookTextModel, kernel, this.output)));\n\n\t\tconst menuContextKeyService = this.toolbarDisposables.add(this.contextKeyService.createScoped(outputItemDiv));\n\t\tconst hasHiddenOutputs = NOTEBOOK_CELL_HAS_HIDDEN_OUTPUTS.bindTo(menuContextKeyService);\n\t\tconst isFirstCellOutput = NOTEBOOK_CELL_IS_FIRST_OUTPUT.bindTo(menuContextKeyService);\n\t\tisFirstCellOutput.set(index === 0);\n\t\tthis.toolbarDisposables.add(autorun((reader) => { hasHiddenOutputs.set(reader.readObservable(this.cellOutputContainer.hasHiddenOutputs)); }));\n\t\tconst menu = this.toolbarDisposables.add(this.menuService.createMenu(MenuId.NotebookOutputToolbar, menuContextKeyService));\n\n\t\tconst updateMenuToolbar = () => {\n\t\t\tconst primary: IAction[] = [];\n\t\t\tlet secondary: IAction[] = [];\n\t\t\tconst result = { primary, secondary };\n\n\t\t\tcreateAndFillInActionBarActions(menu!, { shouldForwardArgs: true }, result, () => false);\n\t\t\tif (!isCopyEnabled) {\n\t\t\t\tsecondary = secondary.filter((action) => action.id !== COPY_OUTPUT_COMMAND_ID);\n\t\t\t}\n\t\t\tif (hasMultipleMimeTypes) {\n\t\t\t\tsecondary = [pickAction, ...secondary];\n\t\t\t}\n\n\t\t\ttoolbar.setActions([], secondary);\n\t\t};\n\t\tupdateMenuToolbar();\n\t\tthis.toolbarDisposables.add(menu.onDidChange(updateMenuToolbar));\n\t}\n\n\tprivate async _pickActiveMimeTypeRenderer(outputItemDiv: HTMLElement, notebookTextModel: NotebookTextModel, kernel: INotebookKernel | undefined, viewModel: ICellOutputViewModel) {\n\t\tconst [mimeTypes, currIndex] = viewModel.resolveMimeTypes(notebookTextModel, kernel?.preloadProvides);\n\n\t\tconst items: IMimeTypeRenderer[] = [];\n\t\tconst unsupportedItems: IMimeTypeRenderer[] = [];\n\t\tmimeTypes.forEach((mimeType, index) => {\n\t\t\tif (mimeType.isTrusted) {\n\t\t\t\tconst arr = mimeType.rendererId === RENDERER_NOT_AVAILABLE ?\n\t\t\t\t\tunsupportedItems :\n\t\t\t\t\titems;\n\t\t\t\tarr.push({\n\t\t\t\t\tlabel: mimeType.mimeType,\n\t\t\t\t\tid: mimeType.mimeType,\n\t\t\t\t\tindex: index,\n\t\t\t\t\tpicked: index === currIndex,\n\t\t\t\t\tdetail: this._generateRendererInfo(mimeType.rendererId),\n\t\t\t\t\tdescription: index === currIndex ? nls.localize('curruentActiveMimeType', \"Currently Active\") : undefined\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tif (unsupportedItems.some(m => JUPYTER_RENDERER_MIMETYPES.includes(m.id!))) {\n\t\t\tunsupportedItems.push({\n\t\t\t\tlabel: nls.localize('installJupyterPrompt', \"Install additional renderers from the marketplace\"),\n\t\t\t\tid: 'installRenderers',\n\t\t\t\tindex: mimeTypes.length\n\t\t\t});\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst picker = disposables.add(this.quickInputService.createQuickPick({ useSeparators: true }));\n\t\tpicker.items = [\n\t\t\t...items,\n\t\t\t{ type: 'separator' },\n\t\t\t...unsupportedItems\n\t\t];\n\t\tpicker.activeItems = items.filter(item => !!item.picked);\n\t\tpicker.placeholder = items.length !== mimeTypes.length\n\t\t\t? nls.localize('promptChooseMimeTypeInSecure.placeHolder', \"Select mimetype to render for current output\")\n\t\t\t: nls.localize('promptChooseMimeType.placeHolder', \"Select mimetype to render for current output\");\n\n\t\tconst pick = await new Promise<IMimeTypeRenderer | undefined>(resolve => {\n\t\t\tdisposables.add(picker.onDidAccept(() => {\n\t\t\t\tresolve(picker.selectedItems.length === 1 ? (picker.selectedItems[0] as IMimeTypeRenderer) : undefined);\n\t\t\t\tdisposables.dispose();\n\t\t\t}));\n\t\t\tpicker.show();\n\t\t});\n\n\t\tif (pick === undefined || pick.index === currIndex) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (pick.id === 'installRenderers') {\n\t\t\tthis._showJupyterExtension();\n\t\t\treturn;\n\t\t}\n\n\t\t// user chooses another mimetype\n\t\tconst nextElement = outputItemDiv.nextElementSibling;\n\t\tthis.toolbarDisposables.clear();\n\t\tconst element = this.innerContainer;\n\t\tif (element) {\n\t\t\telement.remove();\n\t\t\tthis.notebookEditor.removeInset(viewModel);\n\t\t}\n\n\t\tviewModel.pickedMimeType = mimeTypes[pick.index];\n\t\tthis.viewCell.updateOutputMinHeight(this.viewCell.layoutInfo.outputTotalHeight);\n\n\t\tconst { mimeType, rendererId } = mimeTypes[pick.index];\n\t\tthis.notebookService.updateMimePreferredRenderer(notebookTextModel.viewType, mimeType, rendererId, mimeTypes.map(m => m.mimeType));\n\t\tthis.render(nextElement as HTMLElement);\n\t\tthis._validateFinalOutputHeight(false);\n\t\tthis._relayoutCell();\n\t}\n\n\tprivate async _showJupyterExtension() {\n\t\tawait this.extensionsWorkbenchService.openSearch(`@id:${JUPYTER_EXTENSION_ID}`);\n\t}\n\n\tprivate _generateRendererInfo(renderId: string): string {\n\t\tconst renderInfo = this.notebookService.getRendererInfo(renderId);\n\n\t\tif (renderInfo) {\n\t\t\tconst displayName = renderInfo.displayName !== '' ? renderInfo.displayName : renderInfo.id;\n\t\t\treturn `${displayName} (${renderInfo.extensionId.value})`;\n\t\t}\n\n\t\treturn nls.localize('unavailableRenderInfo', \"renderer not available\");\n\t}\n\n\tprivate _outputHeightTimer: any = null;\n\n\tprivate _validateFinalOutputHeight(synchronous: boolean) {\n\t\tif (this._outputHeightTimer !== null) {\n\t\t\tclearTimeout(this._outputHeightTimer);\n\t\t}\n\n\t\tif (synchronous) {\n\t\t\tthis.viewCell.unlockOutputHeight();\n\t\t} else {\n\t\t\tthis._outputHeightTimer = setTimeout(() => {\n\t\t\t\tthis.viewCell.unlockOutputHeight();\n\t\t\t}, 1000);\n\t\t}\n\t}\n\n\tprivate _relayoutCell() {\n\t\tthis.notebookEditor.layoutNotebookCell(this.viewCell, this.viewCell.layoutInfo.totalHeight);\n\t}\n\n\toverride dispose() {\n\t\tif (this._outputHeightTimer) {\n\t\t\tthis.viewCell.unlockOutputHeight();\n\t\t\tclearTimeout(this._outputHeightTimer);\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n}\n\nclass OutputEntryViewHandler {\n\tconstructor(\n\t\treadonly model: ICellOutputViewModel,\n\t\treadonly element: CellOutputElement\n\t) {\n\n\t}\n}\n\nconst enum CellOutputUpdateContext {\n\tExecution = 1,\n\tOther = 2\n}\n\nexport class CellOutputContainer extends CellContentPart {\n\tprivate _outputEntries: OutputEntryViewHandler[] = [];\n\tprivate _hasStaleOutputs: boolean = false;\n\n\thasHiddenOutputs = observableValue<boolean>('hasHiddenOutputs', false);\n\tcheckForHiddenOutputs() {\n\t\tif (this._outputEntries.find(entry => { return entry.model.visible; })) {\n\t\t\tthis.hasHiddenOutputs.set(true, undefined);\n\t\t} else {\n\t\t\tthis.hasHiddenOutputs.set(false, undefined);\n\t\t}\n\t}\n\n\tget renderedOutputEntries() {\n\t\treturn this._outputEntries;\n\t}\n\n\tconstructor(\n\t\tprivate notebookEditor: INotebookEditorDelegate,\n\t\tprivate viewCell: CodeCellViewModel,\n\t\tprivate readonly templateData: CodeCellRenderTemplate,\n\t\tprivate options: { limit: number },\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@INotebookExecutionStateService private readonly _notebookExecutionStateService: INotebookExecutionStateService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\n\t\tthis._register(viewCell.onDidStartExecution(() => {\n\t\t\tviewCell.updateOutputMinHeight(viewCell.layoutInfo.outputTotalHeight);\n\t\t}));\n\n\t\tthis._register(viewCell.onDidStopExecution(() => {\n\t\t\tthis._validateFinalOutputHeight(false);\n\t\t}));\n\n\t\tthis._register(viewCell.onDidChangeOutputs(splice => {\n\t\t\tconst executionState = this._notebookExecutionStateService.getCellExecution(viewCell.uri);\n\t\t\tconst context = executionState ? CellOutputUpdateContext.Execution : CellOutputUpdateContext.Other;\n\t\t\tthis._updateOutputs(splice, context);\n\t\t}));\n\n\t\tthis._register(viewCell.onDidChangeLayout(() => {\n\t\t\tthis.updateInternalLayoutNow(viewCell);\n\t\t}));\n\t}\n\n\toverride updateInternalLayoutNow(viewCell: CodeCellViewModel) {\n\t\tthis.templateData.outputContainer.setTop(viewCell.layoutInfo.outputContainerOffset);\n\t\tthis.templateData.outputShowMoreContainer.setTop(viewCell.layoutInfo.outputShowMoreContainerOffset);\n\n\t\tthis._outputEntries.forEach(entry => {\n\t\t\tconst index = this.viewCell.outputsViewModels.indexOf(entry.model);\n\t\t\tif (index >= 0) {\n\t\t\t\tconst top = this.viewCell.getOutputOffsetInContainer(index);\n\t\t\t\tentry.element.updateDOMTop(top);\n\t\t\t}\n\t\t});\n\t}\n\n\trender() {\n\t\ttry {\n\t\t\tthis._doRender();\n\t\t} finally {\n\t\t\t// TODO@rebornix, this is probably not necessary at all as cell layout change would send the update request.\n\t\t\tthis._relayoutCell();\n\t\t}\n\t}\n\n\t/**\n\t * Notify that an output may have been swapped out without the model getting rendered.\n\t */\n\tflagAsStale() {\n\t\tthis._hasStaleOutputs = true;\n\t}\n\n\tprivate _doRender() {\n\t\tif (this.viewCell.outputsViewModels.length > 0) {\n\t\t\tif (this.viewCell.layoutInfo.outputTotalHeight !== 0) {\n\t\t\t\tthis.viewCell.updateOutputMinHeight(this.viewCell.layoutInfo.outputTotalHeight);\n\t\t\t}\n\n\t\t\tDOM.show(this.templateData.outputContainer.domNode);\n\t\t\tfor (let index = 0; index < Math.min(this.options.limit, this.viewCell.outputsViewModels.length); index++) {\n\t\t\t\tconst currOutput = this.viewCell.outputsViewModels[index];\n\t\t\t\tconst entry = this.instantiationService.createInstance(CellOutputElement, this.notebookEditor, this.viewCell, this, this.templateData.outputContainer, currOutput);\n\t\t\t\tthis._outputEntries.push(new OutputEntryViewHandler(currOutput, entry));\n\t\t\t\tentry.render(undefined);\n\t\t\t}\n\n\t\t\tif (this.viewCell.outputsViewModels.length > this.options.limit) {\n\t\t\t\tDOM.show(this.templateData.outputShowMoreContainer.domNode);\n\t\t\t\tthis.viewCell.updateOutputShowMoreContainerHeight(46);\n\t\t\t}\n\n\t\t\tthis._validateFinalOutputHeight(false);\n\t\t} else {\n\t\t\t// noop\n\t\t\tDOM.hide(this.templateData.outputContainer.domNode);\n\t\t}\n\n\t\tthis.templateData.outputShowMoreContainer.domNode.innerText = '';\n\t\tif (this.viewCell.outputsViewModels.length > this.options.limit) {\n\t\t\tthis.templateData.outputShowMoreContainer.domNode.appendChild(this._generateShowMoreElement(this.templateData.templateDisposables));\n\t\t} else {\n\t\t\tDOM.hide(this.templateData.outputShowMoreContainer.domNode);\n\t\t\tthis.viewCell.updateOutputShowMoreContainerHeight(0);\n\t\t}\n\t}\n\n\tviewUpdateShowOutputs(initRendering: boolean): void {\n\t\tif (this._hasStaleOutputs) {\n\t\t\tthis._hasStaleOutputs = false;\n\t\t\tthis._outputEntries.forEach(entry => {\n\t\t\t\tentry.element.rerender();\n\t\t\t});\n\t\t}\n\n\t\tfor (let index = 0; index < this._outputEntries.length; index++) {\n\t\t\tconst viewHandler = this._outputEntries[index];\n\t\t\tconst outputEntry = viewHandler.element;\n\t\t\tif (outputEntry.renderResult) {\n\t\t\t\tthis.notebookEditor.createOutput(this.viewCell, outputEntry.renderResult as IInsetRenderOutput, this.viewCell.getOutputOffset(index), false);\n\t\t\t} else {\n\t\t\t\toutputEntry.render(undefined);\n\t\t\t}\n\t\t}\n\n\t\tthis._relayoutCell();\n\t}\n\n\tviewUpdateHideOuputs(): void {\n\t\tfor (let index = 0; index < this._outputEntries.length; index++) {\n\t\t\tthis.notebookEditor.hideInset(this._outputEntries[index].model);\n\t\t}\n\t}\n\n\tprivate _outputHeightTimer: any = null;\n\n\tprivate _validateFinalOutputHeight(synchronous: boolean) {\n\t\tif (this._outputHeightTimer !== null) {\n\t\t\tclearTimeout(this._outputHeightTimer);\n\t\t}\n\n\t\tconst executionState = this._notebookExecutionStateService.getCellExecution(this.viewCell.uri);\n\n\t\tif (synchronous) {\n\t\t\tthis.viewCell.unlockOutputHeight();\n\t\t} else if (executionState?.state !== NotebookCellExecutionState.Executing) {\n\t\t\tthis._outputHeightTimer = setTimeout(() => {\n\t\t\t\tthis.viewCell.unlockOutputHeight();\n\t\t\t}, 200);\n\t\t}\n\t}\n\n\tprivate _updateOutputs(splice: NotebookCellOutputsSplice, context: CellOutputUpdateContext = CellOutputUpdateContext.Other) {\n\t\tconst previousOutputHeight = this.viewCell.layoutInfo.outputTotalHeight;\n\n\t\t// for cell output update, we make sure the cell does not shrink before the new outputs are rendered.\n\t\tthis.viewCell.updateOutputMinHeight(previousOutputHeight);\n\n\t\tif (this.viewCell.outputsViewModels.length) {\n\t\t\tDOM.show(this.templateData.outputContainer.domNode);\n\t\t} else {\n\t\t\tDOM.hide(this.templateData.outputContainer.domNode);\n\t\t}\n\n\t\tthis.viewCell.spliceOutputHeights(splice.start, splice.deleteCount, splice.newOutputs.map(_ => 0));\n\t\tthis._renderNow(splice, context);\n\t}\n\n\tprivate _renderNow(splice: NotebookCellOutputsSplice, context: CellOutputUpdateContext) {\n\t\tif (splice.start >= this.options.limit) {\n\t\t\t// splice items out of limit\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstGroupEntries = this._outputEntries.slice(0, splice.start);\n\t\tconst deletedEntries = this._outputEntries.slice(splice.start, splice.start + splice.deleteCount);\n\t\tconst secondGroupEntries = this._outputEntries.slice(splice.start + splice.deleteCount);\n\t\tlet newlyInserted = this.viewCell.outputsViewModels.slice(splice.start, splice.start + splice.newOutputs.length);\n\n\t\t// [...firstGroup, ...deletedEntries, ...secondGroupEntries]  [...restInModel]\n\t\t// [...firstGroup, ...newlyInserted, ...secondGroupEntries, restInModel]\n\t\tif (firstGroupEntries.length + newlyInserted.length + secondGroupEntries.length > this.options.limit) {\n\t\t\t// exceeds limit again\n\t\t\tif (firstGroupEntries.length + newlyInserted.length > this.options.limit) {\n\t\t\t\t[...deletedEntries, ...secondGroupEntries].forEach(entry => {\n\t\t\t\t\tentry.element.detach();\n\t\t\t\t\tentry.element.dispose();\n\t\t\t\t});\n\n\t\t\t\tnewlyInserted = newlyInserted.slice(0, this.options.limit - firstGroupEntries.length);\n\t\t\t\tconst newlyInsertedEntries = newlyInserted.map(insert => {\n\t\t\t\t\treturn new OutputEntryViewHandler(insert, this.instantiationService.createInstance(CellOutputElement, this.notebookEditor, this.viewCell, this, this.templateData.outputContainer, insert));\n\t\t\t\t});\n\n\t\t\t\tthis._outputEntries = [...firstGroupEntries, ...newlyInsertedEntries];\n\n\t\t\t\t// render newly inserted outputs\n\t\t\t\tfor (let i = firstGroupEntries.length; i < this._outputEntries.length; i++) {\n\t\t\t\t\tthis._outputEntries[i].element.render(undefined);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// part of secondGroupEntries are pushed out of view\n\t\t\t\t// now we have to be creative as secondGroupEntries might not use dedicated containers\n\t\t\t\tconst elementsPushedOutOfView = secondGroupEntries.slice(this.options.limit - firstGroupEntries.length - newlyInserted.length);\n\t\t\t\t[...deletedEntries, ...elementsPushedOutOfView].forEach(entry => {\n\t\t\t\t\tentry.element.detach();\n\t\t\t\t\tentry.element.dispose();\n\t\t\t\t});\n\n\t\t\t\t// exclusive\n\t\t\t\tconst reRenderRightBoundary = firstGroupEntries.length + newlyInserted.length;\n\n\t\t\t\tconst newlyInsertedEntries = newlyInserted.map(insert => {\n\t\t\t\t\treturn new OutputEntryViewHandler(insert, this.instantiationService.createInstance(CellOutputElement, this.notebookEditor, this.viewCell, this, this.templateData.outputContainer, insert));\n\t\t\t\t});\n\n\t\t\t\tthis._outputEntries = [...firstGroupEntries, ...newlyInsertedEntries, ...secondGroupEntries.slice(0, this.options.limit - firstGroupEntries.length - newlyInserted.length)];\n\n\t\t\t\tfor (let i = firstGroupEntries.length; i < reRenderRightBoundary; i++) {\n\t\t\t\t\tconst previousSibling = i - 1 >= 0 && this._outputEntries[i - 1] && !!(this._outputEntries[i - 1].element.innerContainer?.parentElement) ? this._outputEntries[i - 1].element.innerContainer : undefined;\n\t\t\t\t\tthis._outputEntries[i].element.render(previousSibling);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// after splice, it doesn't exceed\n\t\t\tdeletedEntries.forEach(entry => {\n\t\t\t\tentry.element.detach();\n\t\t\t\tentry.element.dispose();\n\t\t\t});\n\n\t\t\tconst reRenderRightBoundary = firstGroupEntries.length + newlyInserted.length;\n\n\t\t\tconst newlyInsertedEntries = newlyInserted.map(insert => {\n\t\t\t\treturn new OutputEntryViewHandler(insert, this.instantiationService.createInstance(CellOutputElement, this.notebookEditor, this.viewCell, this, this.templateData.outputContainer, insert));\n\t\t\t});\n\n\t\t\tlet outputsNewlyAvailable: OutputEntryViewHandler[] = [];\n\n\t\t\tif (firstGroupEntries.length + newlyInsertedEntries.length + secondGroupEntries.length < this.viewCell.outputsViewModels.length) {\n\t\t\t\tconst last = Math.min(this.options.limit, this.viewCell.outputsViewModels.length);\n\t\t\t\toutputsNewlyAvailable = this.viewCell.outputsViewModels.slice(firstGroupEntries.length + newlyInsertedEntries.length + secondGroupEntries.length, last).map(output => {\n\t\t\t\t\treturn new OutputEntryViewHandler(output, this.instantiationService.createInstance(CellOutputElement, this.notebookEditor, this.viewCell, this, this.templateData.outputContainer, output));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis._outputEntries = [...firstGroupEntries, ...newlyInsertedEntries, ...secondGroupEntries, ...outputsNewlyAvailable];\n\n\t\t\tfor (let i = firstGroupEntries.length; i < reRenderRightBoundary; i++) {\n\t\t\t\tconst previousSibling = i - 1 >= 0 && this._outputEntries[i - 1] && !!(this._outputEntries[i - 1].element.innerContainer?.parentElement) ? this._outputEntries[i - 1].element.innerContainer : undefined;\n\t\t\t\tthis._outputEntries[i].element.render(previousSibling);\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < outputsNewlyAvailable.length; i++) {\n\t\t\t\tthis._outputEntries[firstGroupEntries.length + newlyInserted.length + secondGroupEntries.length + i].element.render(undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (this.viewCell.outputsViewModels.length > this.options.limit) {\n\t\t\tDOM.show(this.templateData.outputShowMoreContainer.domNode);\n\t\t\tif (!this.templateData.outputShowMoreContainer.domNode.hasChildNodes()) {\n\t\t\t\tthis.templateData.outputShowMoreContainer.domNode.appendChild(this._generateShowMoreElement(this.templateData.templateDisposables));\n\t\t\t}\n\t\t\tthis.viewCell.updateOutputShowMoreContainerHeight(46);\n\t\t} else {\n\t\t\tDOM.hide(this.templateData.outputShowMoreContainer.domNode);\n\t\t}\n\n\t\tthis._relayoutCell();\n\t\t// if it's clearing all outputs, or outputs are all rendered synchronously\n\t\t// shrink immediately as the final output height will be zero.\n\t\t// if it's rerun, then the output clearing might be temporary, so we don't shrink immediately\n\t\tthis._validateFinalOutputHeight(context === CellOutputUpdateContext.Other && this.viewCell.outputsViewModels.length === 0);\n\t}\n\n\tprivate _generateShowMoreElement(disposables: DisposableStore): HTMLElement {\n\t\tconst md: IMarkdownString = {\n\t\t\tvalue: `There are more than ${this.options.limit} outputs, [show more (open the raw output data in a text editor) ...](command:workbench.action.openLargeOutput)`,\n\t\t\tisTrusted: true,\n\t\t\tsupportThemeIcons: true\n\t\t};\n\n\t\tconst rendered = renderMarkdown(md, {\n\t\t\tactionHandler: {\n\t\t\t\tcallback: (content) => {\n\t\t\t\t\tif (content === 'command:workbench.action.openLargeOutput') {\n\t\t\t\t\t\tthis.openerService.open(CellUri.generateCellOutputUri(this.notebookEditor.textModel!.uri));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t},\n\t\t\t\tdisposables\n\t\t\t}\n\t\t});\n\t\tdisposables.add(rendered);\n\n\t\trendered.element.classList.add('output-show-more');\n\t\treturn rendered.element;\n\t}\n\n\tprivate _relayoutCell() {\n\t\tthis.notebookEditor.layoutNotebookCell(this.viewCell, this.viewCell.layoutInfo.totalHeight);\n\t}\n\n\toverride dispose() {\n\t\tthis.viewCell.updateOutputMinHeight(0);\n\n\t\tif (this._outputHeightTimer) {\n\t\t\tclearTimeout(this._outputHeightTimer);\n\t\t}\n\n\t\tthis._outputEntries.forEach(entry => {\n\t\t\tentry.element.dispose();\n\t\t});\n\n\t\tsuper.dispose();\n\t}\n}\n\nconst JUPYTER_RENDERER_MIMETYPES = [\n\t'application/geo+json',\n\t'application/vdom.v1+json',\n\t'application/vnd.dataresource+json',\n\t'application/vnd.plotly.v1+json',\n\t'application/vnd.vega.v2+json',\n\t'application/vnd.vega.v3+json',\n\t'application/vnd.vega.v4+json',\n\t'application/vnd.vega.v5+json',\n\t'application/vnd.vegalite.v1+json',\n\t'application/vnd.vegalite.v2+json',\n\t'application/vnd.vegalite.v3+json',\n\t'application/vnd.vegalite.v4+json',\n\t'application/x-nteract-model-debug+json',\n\t'image/svg+xml',\n\t'text/latex',\n\t'text/vnd.plotly.v1+html',\n\t'application/vnd.jupyter.widget-view+json',\n\t'application/vnd.code.notebook.error'\n];\n"],
  "mappings": "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",
  "names": ["mimeType", "CellOutputUpdateContext"]
}
