var C=Object.defineProperty;var E=Object.getOwnPropertyDescriptor;var u=(n,e,r,o)=>{for(var t=o>1?void 0:o?E(e,r):e,c=n.length-1,i;c>=0;c--)(i=n[c])&&(t=(o?i(e,r,t):i(t))||t);return o&&t&&C(e,r,t),t},s=(n,e)=>(r,o)=>e(r,o,n);import{Disposable as x}from"../../../../../../base/common/lifecycle.js";import{localize2 as O}from"../../../../../../nls.js";import{Categories as R}from"../../../../../../platform/action/common/actionCommonCategories.js";import{Action2 as w,registerAction2 as N}from"../../../../../../platform/actions/common/actions.js";import{ICommandService as W}from"../../../../../../platform/commands/common/commands.js";import{IConfigurationService as A}from"../../../../../../platform/configuration/common/configuration.js";import{ContextKeyExpr as D,IContextKeyService as K}from"../../../../../../platform/contextkey/common/contextkey.js";import"../../../../../../platform/instantiation/common/instantiation.js";import{Registry as M}from"../../../../../../platform/registry/common/platform.js";import{IStorageService as f,StorageScope as S,StorageTarget as k}from"../../../../../../platform/storage/common/storage.js";import{Extensions as P}from"../../../../../common/contributions.js";import{Memento as h}from"../../../../../common/memento.js";import{NotebookSetting as l}from"../../../common/notebookCommon.js";import{HAS_OPENED_NOTEBOOK as G}from"../../../common/notebookContextKeys.js";import{NotebookEditorInput as I}from"../../../common/notebookEditorInput.js";import{IEditorService as L}from"../../../../../services/editor/common/editorService.js";import{LifecyclePhase as T}from"../../../../../services/lifecycle/common/lifecycle.js";const p="hasOpenedNotebook",v="hasShownNotebookGettingStarted";let a=class extends x{constructor(e,r,o,t,c){super();const i=G.bindTo(o),g=new h("notebookGettingStarted2",r),m=g.getMemento(S.PROFILE,k.USER);m[p]&&i.set(!0);const d=c.getValue(l.openGettingStarted)&&!m[v];if(!m[p]||d){const b=()=>{i.set(!0),m[p]=!0,d&&(t.executeCommand("workbench.action.openWalkthrough",{category:"notebooks",step:"notebookProfile"},!0),m[v]=!0),g.saveMemento()};if(e.activeEditor?.typeId===I.ID){b();return}const y=this._register(e.onDidActiveEditorChange(()=>{e.activeEditor?.typeId===I.ID&&(y.dispose(),b())}))}}};a=u([s(0,L),s(1,f),s(2,K),s(3,W),s(4,A)],a),M.as(P.Workbench).registerWorkbenchContribution(a,T.Restored),N(class extends w{constructor(){super({id:"workbench.notebook.layout.gettingStarted",title:O("workbench.notebook.layout.gettingStarted.label","Reset notebook getting started"),f1:!0,precondition:D.equals(`config.${l.openGettingStarted}`,!0),category:R.Developer})}run(e){const r=e.get(f),o=new h("notebookGettingStarted",r),t=o.getMemento(S.PROFILE,k.USER);t[p]=void 0,o.saveMemento()}});export{a as NotebookGettingStarted};
