{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/find/findMatchDecorationModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../../../../base/common/lifecycle.js';\nimport { IModelDeltaDecoration } from '../../../../../../editor/common/model.js';\nimport { ModelDecorationOptions } from '../../../../../../editor/common/model/textModel.js';\nimport { FindDecorations } from '../../../../../../editor/contrib/find/browser/findDecorations.js';\nimport { Range } from '../../../../../../editor/common/core/range.js';\nimport { overviewRulerSelectionHighlightForeground, overviewRulerFindMatchForeground } from '../../../../../../platform/theme/common/colorRegistry.js';\nimport { CellFindMatchWithIndex, ICellModelDecorations, ICellModelDeltaDecorations, ICellViewModel, INotebookDeltaDecoration, INotebookEditor, NotebookOverviewRulerLane, } from '../../notebookBrowser.js';\n\nexport class FindMatchDecorationModel extends Disposable {\n\tprivate _allMatchesDecorations: ICellModelDecorations[] = [];\n\tprivate _currentMatchCellDecorations: string[] = [];\n\tprivate _allMatchesCellDecorations: string[] = [];\n\tprivate _currentMatchDecorations: { kind: 'input'; decorations: ICellModelDecorations[] } | { kind: 'output'; index: number } | null = null;\n\n\tconstructor(\n\t\tprivate readonly _notebookEditor: INotebookEditor,\n\t\tprivate readonly ownerID: string,\n\t) {\n\t\tsuper();\n\t}\n\n\tpublic get currentMatchDecorations() {\n\t\treturn this._currentMatchDecorations;\n\t}\n\n\tprivate clearDecorations() {\n\t\tthis.clearCurrentFindMatchDecoration();\n\t\tthis.setAllFindMatchesDecorations([]);\n\t}\n\n\n\tpublic async highlightCurrentFindMatchDecorationInCell(cell: ICellViewModel, cellRange: Range): Promise<number | null> {\n\n\t\tthis.clearCurrentFindMatchDecoration();\n\n\t\t// match is an editor FindMatch, we update find match decoration in the editor\n\t\t// we will highlight the match in the webview\n\t\tthis._notebookEditor.changeModelDecorations(accessor => {\n\t\t\tconst findMatchesOptions: ModelDecorationOptions = FindDecorations._CURRENT_FIND_MATCH_DECORATION;\n\n\t\t\tconst decorations: IModelDeltaDecoration[] = [\n\t\t\t\t{ range: cellRange, options: findMatchesOptions }\n\t\t\t];\n\t\t\tconst deltaDecoration: ICellModelDeltaDecorations = {\n\t\t\t\townerId: cell.handle,\n\t\t\t\tdecorations: decorations\n\t\t\t};\n\n\t\t\tthis._currentMatchDecorations = {\n\t\t\t\tkind: 'input',\n\t\t\t\tdecorations: accessor.deltaDecorations(this._currentMatchDecorations?.kind === 'input' ? this._currentMatchDecorations.decorations : [], [deltaDecoration])\n\t\t\t};\n\t\t});\n\n\t\tthis._currentMatchCellDecorations = this._notebookEditor.deltaCellDecorations(this._currentMatchCellDecorations, [{\n\t\t\thandle: cell.handle,\n\t\t\toptions: {\n\t\t\t\toverviewRuler: {\n\t\t\t\t\tcolor: overviewRulerSelectionHighlightForeground,\n\t\t\t\t\tmodelRanges: [cellRange],\n\t\t\t\t\tincludeOutput: false,\n\t\t\t\t\tposition: NotebookOverviewRulerLane.Center\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\n\t\treturn null;\n\t}\n\n\tpublic async highlightCurrentFindMatchDecorationInWebview(cell: ICellViewModel, index: number): Promise<number | null> {\n\n\t\tthis.clearCurrentFindMatchDecoration();\n\n\t\tconst offset = await this._notebookEditor.findHighlightCurrent(index, this.ownerID);\n\t\tthis._currentMatchDecorations = { kind: 'output', index: index };\n\n\t\tthis._currentMatchCellDecorations = this._notebookEditor.deltaCellDecorations(this._currentMatchCellDecorations, [{\n\t\t\thandle: cell.handle,\n\t\t\toptions: {\n\t\t\t\toverviewRuler: {\n\t\t\t\t\tcolor: overviewRulerSelectionHighlightForeground,\n\t\t\t\t\tmodelRanges: [],\n\t\t\t\t\tincludeOutput: true,\n\t\t\t\t\tposition: NotebookOverviewRulerLane.Center\n\t\t\t\t}\n\t\t\t}\n\t\t} satisfies INotebookDeltaDecoration]);\n\n\t\treturn offset;\n\t}\n\n\tpublic clearCurrentFindMatchDecoration() {\n\t\tif (this._currentMatchDecorations?.kind === 'input') {\n\t\t\tthis._notebookEditor.changeModelDecorations(accessor => {\n\t\t\t\taccessor.deltaDecorations(this._currentMatchDecorations?.kind === 'input' ? this._currentMatchDecorations.decorations : [], []);\n\t\t\t\tthis._currentMatchDecorations = null;\n\t\t\t});\n\t\t} else if (this._currentMatchDecorations?.kind === 'output') {\n\t\t\tthis._notebookEditor.findUnHighlightCurrent(this._currentMatchDecorations.index, this.ownerID);\n\t\t}\n\n\t\tthis._currentMatchCellDecorations = this._notebookEditor.deltaCellDecorations(this._currentMatchCellDecorations, []);\n\t}\n\n\tpublic setAllFindMatchesDecorations(cellFindMatches: CellFindMatchWithIndex[]) {\n\t\tthis._notebookEditor.changeModelDecorations((accessor) => {\n\n\t\t\tconst findMatchesOptions: ModelDecorationOptions = FindDecorations._FIND_MATCH_DECORATION;\n\n\t\t\tconst deltaDecorations: ICellModelDeltaDecorations[] = cellFindMatches.map(cellFindMatch => {\n\t\t\t\t// Find matches\n\t\t\t\tconst newFindMatchesDecorations: IModelDeltaDecoration[] = new Array<IModelDeltaDecoration>(cellFindMatch.contentMatches.length);\n\t\t\t\tfor (let i = 0; i < cellFindMatch.contentMatches.length; i++) {\n\t\t\t\t\tnewFindMatchesDecorations[i] = {\n\t\t\t\t\t\trange: cellFindMatch.contentMatches[i].range,\n\t\t\t\t\t\toptions: findMatchesOptions\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn { ownerId: cellFindMatch.cell.handle, decorations: newFindMatchesDecorations };\n\t\t\t});\n\n\t\t\tthis._allMatchesDecorations = accessor.deltaDecorations(this._allMatchesDecorations, deltaDecorations);\n\t\t});\n\n\t\tthis._allMatchesCellDecorations = this._notebookEditor.deltaCellDecorations(this._allMatchesCellDecorations, cellFindMatches.map(cellFindMatch => {\n\t\t\treturn {\n\t\t\t\townerId: cellFindMatch.cell.handle,\n\t\t\t\thandle: cellFindMatch.cell.handle,\n\t\t\t\toptions: {\n\t\t\t\t\toverviewRuler: {\n\t\t\t\t\t\tcolor: overviewRulerFindMatchForeground,\n\t\t\t\t\t\tmodelRanges: cellFindMatch.contentMatches.map(match => match.range),\n\t\t\t\t\t\tincludeOutput: cellFindMatch.webviewMatches.length > 0,\n\t\t\t\t\t\tposition: NotebookOverviewRulerLane.Center\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}));\n\t}\n\n\tstopWebviewFind() {\n\t\tthis._notebookEditor.findStop(this.ownerID);\n\t}\n\n\toverride dispose() {\n\t\tthis.clearDecorations();\n\t\tsuper.dispose();\n\t}\n\n}\n"],
  "mappings": "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",
  "names": []
}
