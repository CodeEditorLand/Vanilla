{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/notebookLogger.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// import * as DOM from 'vs/base/browser/dom';\n\nclass NotebookLogger {\n\tconstructor() {\n\t\tthis._domFrameLog();\n\t}\n\tprivate _frameId = 0;\n\tprivate _domFrameLog() {\n\t\t// DOM.scheduleAtNextAnimationFrame(() => {\n\t\t// \tthis._frameId++;\n\t\t// \tthis._domFrameLog();\n\t\t// }, 1000000);\n\t}\n\n\tdebug(...args: any[]) {\n\t\tconst date = new Date();\n\t\tconsole.log(\n\t\t\t`${date.getSeconds()}:${date.getMilliseconds().toString().padStart(3, \"0\")}`,\n\t\t\t`frame #${this._frameId}: `,\n\t\t\t...args,\n\t\t);\n\t}\n}\n\nconst instance = new NotebookLogger();\nexport function notebookDebug(...args: any[]) {\n\tinstance.debug(...args);\n}\n"],
  "mappings": ";;AAOA,MAAM,eAAe;AAAA,EAPrB,OAOqB;AAAA;AAAA;AAAA,EACpB,cAAc;AACb,SAAK,aAAa;AAAA,EACnB;AAAA,EACQ,WAAW;AAAA,EACX,eAAe;AAAA,EAKvB;AAAA,EAEA,SAAS,MAAa;AACrB,UAAM,OAAO,oBAAI,KAAK;AACtB,YAAQ;AAAA,MACP,GAAG,KAAK,WAAW,CAAC,IAAI,KAAK,gBAAgB,EAAE,SAAS,EAAE,SAAS,GAAG,GAAG,CAAC;AAAA,MAC1E,UAAU,KAAK,QAAQ;AAAA,MACvB,GAAG;AAAA,IACJ;AAAA,EACD;AACD;AAEA,MAAM,WAAW,IAAI,eAAe;AAC7B,SAAS,iBAAiB,MAAa;AAC7C,WAAS,MAAM,GAAG,IAAI;AACvB;AAFgB;",
  "names": []
}
