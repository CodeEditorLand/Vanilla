{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/controller/apiActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as glob from '../../../../../base/common/glob.js';\nimport { URI, UriComponents } from '../../../../../base/common/uri.js';\nimport { CommandsRegistry } from '../../../../../platform/commands/common/commands.js';\nimport { isDocumentExcludePattern, TransientCellMetadata, TransientDocumentMetadata } from '../../common/notebookCommon.js';\nimport { INotebookKernelService } from '../../common/notebookKernelService.js';\nimport { INotebookService } from '../../common/notebookService.js';\n\nCommandsRegistry.registerCommand('_resolveNotebookContentProvider', (accessor): {\n\tviewType: string;\n\tdisplayName: string;\n\toptions: { transientOutputs: boolean; transientCellMetadata: TransientCellMetadata; transientDocumentMetadata: TransientDocumentMetadata };\n\tfilenamePattern: (string | glob.IRelativePattern | { include: string | glob.IRelativePattern; exclude: string | glob.IRelativePattern })[];\n}[] => {\n\tconst notebookService = accessor.get<INotebookService>(INotebookService);\n\tconst contentProviders = notebookService.getContributedNotebookTypes();\n\treturn contentProviders.map(provider => {\n\t\tconst filenamePatterns = provider.selectors.map(selector => {\n\t\t\tif (typeof selector === 'string') {\n\t\t\t\treturn selector;\n\t\t\t}\n\n\t\t\tif (glob.isRelativePattern(selector)) {\n\t\t\t\treturn selector;\n\t\t\t}\n\n\t\t\tif (isDocumentExcludePattern(selector)) {\n\t\t\t\treturn {\n\t\t\t\t\tinclude: selector.include,\n\t\t\t\t\texclude: selector.exclude\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}).filter(pattern => pattern !== null) as (string | glob.IRelativePattern | { include: string | glob.IRelativePattern; exclude: string | glob.IRelativePattern })[];\n\n\t\treturn {\n\t\t\tviewType: provider.id,\n\t\t\tdisplayName: provider.displayName,\n\t\t\tfilenamePattern: filenamePatterns,\n\t\t\toptions: {\n\t\t\t\ttransientCellMetadata: provider.options.transientCellMetadata,\n\t\t\t\ttransientDocumentMetadata: provider.options.transientDocumentMetadata,\n\t\t\t\ttransientOutputs: provider.options.transientOutputs\n\t\t\t}\n\t\t};\n\t});\n});\n\nCommandsRegistry.registerCommand('_resolveNotebookKernels', async (accessor, args: {\n\tviewType: string;\n\turi: UriComponents;\n}): Promise<{\n\tid?: string;\n\tlabel: string;\n\tdescription?: string;\n\tdetail?: string;\n\tisPreferred?: boolean;\n\tpreloads?: URI[];\n}[]> => {\n\tconst notebookKernelService = accessor.get(INotebookKernelService);\n\tconst uri = URI.revive(args.uri as UriComponents);\n\tconst kernels = notebookKernelService.getMatchingKernel({ uri, notebookType: args.viewType });\n\n\treturn kernels.all.map(provider => ({\n\t\tid: provider.id,\n\t\tlabel: provider.label,\n\t\tdescription: provider.description,\n\t\tdetail: provider.detail,\n\t\tisPreferred: false, // todo@jrieken,@rebornix\n\t\tpreloads: provider.preloadUris,\n\t}));\n});\n"],
  "mappings": "AAKA,YAAY,UAAU;AACtB,SAAS,KAAK,qBAAqB;AACnC,SAAS,wBAAwB;AACjC,SAAS,0BAA0B,uBAAuB,iCAAiC;AAC3F,SAAS,8BAA8B;AACvC,SAAS,wBAAwB;AAEjC,iBAAiB,gBAAgB,mCAAmC,CAAC,aAK9D;AACN,QAAM,kBAAkB,SAAS,IAAsB,gBAAgB;AACvE,QAAM,mBAAmB,gBAAgB,4BAA4B;AACrE,SAAO,iBAAiB,IAAI,cAAY;AACvC,UAAM,mBAAmB,SAAS,UAAU,IAAI,cAAY;AAC3D,UAAI,OAAO,aAAa,UAAU;AACjC,eAAO;AAAA,MACR;AAEA,UAAI,KAAK,kBAAkB,QAAQ,GAAG;AACrC,eAAO;AAAA,MACR;AAEA,UAAI,yBAAyB,QAAQ,GAAG;AACvC,eAAO;AAAA,UACN,SAAS,SAAS;AAAA,UAClB,SAAS,SAAS;AAAA,QACnB;AAAA,MACD;AAEA,aAAO;AAAA,IACR,CAAC,EAAE,OAAO,aAAW,YAAY,IAAI;AAErC,WAAO;AAAA,MACN,UAAU,SAAS;AAAA,MACnB,aAAa,SAAS;AAAA,MACtB,iBAAiB;AAAA,MACjB,SAAS;AAAA,QACR,uBAAuB,SAAS,QAAQ;AAAA,QACxC,2BAA2B,SAAS,QAAQ;AAAA,QAC5C,kBAAkB,SAAS,QAAQ;AAAA,MACpC;AAAA,IACD;AAAA,EACD,CAAC;AACF,CAAC;AAED,iBAAiB,gBAAgB,2BAA2B,OAAO,UAAU,SAUrE;AACP,QAAM,wBAAwB,SAAS,IAAI,sBAAsB;AACjE,QAAM,MAAM,IAAI,OAAO,KAAK,GAAoB;AAChD,QAAM,UAAU,sBAAsB,kBAAkB,EAAE,KAAK,cAAc,KAAK,SAAS,CAAC;AAE5F,SAAO,QAAQ,IAAI,IAAI,eAAa;AAAA,IACnC,IAAI,SAAS;AAAA,IACb,OAAO,SAAS;AAAA,IAChB,aAAa,SAAS;AAAA,IACtB,QAAQ,SAAS;AAAA,IACjB,aAAa;AAAA;AAAA,IACb,UAAU,SAAS;AAAA,EACpB,EAAE;AACH,CAAC;",
  "names": []
}
