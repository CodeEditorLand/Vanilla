import"../../../../../base/browser/ui/list/listView.js";import"../../../../../base/common/event.js";import"../../../../../base/common/lifecycle.js";import"../../../../../base/common/scrollable.js";import"../../../../../platform/configuration/common/configuration.js";import{CellKind as s,NotebookCellExecutionState as a,NotebookSetting as u}from"../../common/notebookCommon.js";import"../../common/notebookExecutionStateService.js";import{CellFocusMode as h}from"../notebookBrowser.js";import"../viewModel/codeCellViewModel.js";import"../viewModel/notebookViewModelImpl.js";class B{constructor(e,o,t){this.notebookExecutionStateService=e;this.configurationService=o;this.scrollEvent=t}stopAnchoring=!1;executionWatcher;scrollWatcher;shouldAnchor(e,o,t,i){if(e.element(o).focusMode===h.Editor)return!0;if(this.stopAnchoring)return!1;const r=e.elementTop(o)+e.elementHeight(o)+t,n=e.renderHeight+e.getScrollTop()>r,l=this.configurationService.getValue(u.scrollToRevealCell)!=="none",c=t>0;return l&&c&&!n?(this.watchAchorDuringExecution(i),!0):!1}watchAchorDuringExecution(e){if(!this.executionWatcher&&e.cellKind===s.Code){const o=this.notebookExecutionStateService.getCellExecution(e.uri);o&&o.state===a.Executing&&(this.executionWatcher=e.onDidStopExecution(()=>{this.executionWatcher?.dispose(),this.executionWatcher=void 0,this.scrollWatcher?.dispose(),this.stopAnchoring=!1}),this.scrollWatcher=this.scrollEvent(t=>{t.scrollTop<t.oldScrollTop&&(this.stopAnchoring=!0,this.scrollWatcher?.dispose())}))}}dispose(){this.executionWatcher?.dispose(),this.scrollWatcher?.dispose()}}export{B as NotebookCellAnchor};
