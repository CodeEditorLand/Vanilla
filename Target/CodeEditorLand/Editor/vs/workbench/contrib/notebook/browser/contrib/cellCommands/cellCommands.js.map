{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/cellCommands/cellCommands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyChord, KeyCode, KeyMod } from '../../../../../../base/common/keyCodes.js';\nimport { Mimes } from '../../../../../../base/common/mime.js';\nimport { IBulkEditService, ResourceTextEdit } from '../../../../../../editor/browser/services/bulkEditService.js';\nimport { localize, localize2 } from '../../../../../../nls.js';\nimport { MenuId, registerAction2 } from '../../../../../../platform/actions/common/actions.js';\nimport { ContextKeyExpr } from '../../../../../../platform/contextkey/common/contextkey.js';\nimport { InputFocusedContext, InputFocusedContextKey } from '../../../../../../platform/contextkey/common/contextkeys.js';\nimport { ServicesAccessor } from '../../../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingWeight } from '../../../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ResourceNotebookCellEdit } from '../../../../bulkEdit/browser/bulkCellEdits.js';\nimport { changeCellToKind, computeCellLinesContents, copyCellRange, joinCellsWithSurrounds, joinSelectedCells, moveCellRange } from '../../controller/cellOperations.js';\nimport { cellExecutionArgs, CellOverflowToolbarGroups, CellToolbarOrder, CELL_TITLE_CELL_GROUP_ID, INotebookCellActionContext, INotebookCellToolbarActionContext, INotebookCommandContext, NotebookCellAction, NotebookMultiCellAction, parseMultiCellExecutionArgs } from '../../controller/coreActions.js';\nimport { CellFocusMode, EXPAND_CELL_INPUT_COMMAND_ID, EXPAND_CELL_OUTPUT_COMMAND_ID, ICellOutputViewModel, ICellViewModel, INotebookEditor } from '../../notebookBrowser.js';\nimport { NOTEBOOK_CELL_EDITABLE, NOTEBOOK_CELL_HAS_OUTPUTS, NOTEBOOK_CELL_INPUT_COLLAPSED, NOTEBOOK_CELL_LIST_FOCUSED, NOTEBOOK_CELL_OUTPUT_COLLAPSED, NOTEBOOK_CELL_TYPE, NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_IS_ACTIVE_EDITOR, NOTEBOOK_OUTPUT_FOCUSED } from '../../../common/notebookContextKeys.js';\nimport * as icons from '../../notebookIcons.js';\nimport { CellEditType, CellKind, NotebookSetting } from '../../../common/notebookCommon.js';\nimport { INotificationService } from '../../../../../../platform/notification/common/notification.js';\nimport { EditorContextKeys } from '../../../../../../editor/common/editorContextKeys.js';\nimport { IConfigurationService } from '../../../../../../platform/configuration/common/configuration.js';\n\n//#region Move/Copy cells\nconst MOVE_CELL_UP_COMMAND_ID = 'notebook.cell.moveUp';\nconst MOVE_CELL_DOWN_COMMAND_ID = 'notebook.cell.moveDown';\nconst COPY_CELL_UP_COMMAND_ID = 'notebook.cell.copyUp';\nconst COPY_CELL_DOWN_COMMAND_ID = 'notebook.cell.copyDown';\n\nregisterAction2(class extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: MOVE_CELL_UP_COMMAND_ID,\n\t\t\t\ttitle: localize2('notebookActions.moveCellUp', \"Move Cell Up\"),\n\t\t\t\ticon: icons.moveUpIcon,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tprimary: KeyMod.Alt | KeyCode.UpArrow,\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, InputFocusedContext.toNegated()),\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t\t},\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\t\twhen: ContextKeyExpr.equals('config.notebook.dragAndDropEnabled', false),\n\t\t\t\t\tgroup: CellOverflowToolbarGroups.Edit,\n\t\t\t\t\torder: 14\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext) {\n\t\treturn moveCellRange(context, 'up');\n\t}\n});\n\nregisterAction2(class extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: MOVE_CELL_DOWN_COMMAND_ID,\n\t\t\t\ttitle: localize2('notebookActions.moveCellDown', \"Move Cell Down\"),\n\t\t\t\ticon: icons.moveDownIcon,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tprimary: KeyMod.Alt | KeyCode.DownArrow,\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, InputFocusedContext.toNegated()),\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t\t},\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\t\twhen: ContextKeyExpr.equals('config.notebook.dragAndDropEnabled', false),\n\t\t\t\t\tgroup: CellOverflowToolbarGroups.Edit,\n\t\t\t\t\torder: 14\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext) {\n\t\treturn moveCellRange(context, 'down');\n\t}\n});\n\nregisterAction2(class extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: COPY_CELL_UP_COMMAND_ID,\n\t\t\t\ttitle: localize2('notebookActions.copyCellUp', \"Copy Cell Up\"),\n\t\t\t\tkeybinding: {\n\t\t\t\t\tprimary: KeyMod.Alt | KeyMod.Shift | KeyCode.UpArrow,\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, InputFocusedContext.toNegated()),\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext) {\n\t\treturn copyCellRange(context, 'up');\n\t}\n});\n\nregisterAction2(class extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: COPY_CELL_DOWN_COMMAND_ID,\n\t\t\t\ttitle: localize2('notebookActions.copyCellDown', \"Copy Cell Down\"),\n\t\t\t\tkeybinding: {\n\t\t\t\t\tprimary: KeyMod.Alt | KeyMod.Shift | KeyCode.DownArrow,\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, InputFocusedContext.toNegated()),\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t\t},\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_CELL_EDITABLE),\n\t\t\t\t\tgroup: CellOverflowToolbarGroups.Edit,\n\t\t\t\t\torder: 13\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext) {\n\t\treturn copyCellRange(context, 'down');\n\t}\n});\n\n\n//#endregion\n\n//#region Join/Split\n\nconst SPLIT_CELL_COMMAND_ID = 'notebook.cell.split';\nconst JOIN_SELECTED_CELLS_COMMAND_ID = 'notebook.cell.joinSelected';\nconst JOIN_CELL_ABOVE_COMMAND_ID = 'notebook.cell.joinAbove';\nconst JOIN_CELL_BELOW_COMMAND_ID = 'notebook.cell.joinBelow';\n\n\nregisterAction2(class extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: SPLIT_CELL_COMMAND_ID,\n\t\t\t\ttitle: localize2('notebookActions.splitCell', \"Split Cell\"),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tNOTEBOOK_EDITOR_EDITABLE,\n\t\t\t\t\t\tNOTEBOOK_CELL_EDITABLE,\n\t\t\t\t\t\tNOTEBOOK_CELL_INPUT_COLLAPSED.toNegated()\n\t\t\t\t\t),\n\t\t\t\t\torder: CellToolbarOrder.SplitCell,\n\t\t\t\t\tgroup: CELL_TITLE_CELL_GROUP_ID\n\t\t\t\t},\n\t\t\t\ticon: icons.splitCellIcon,\n\t\t\t\tkeybinding: {\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_CELL_EDITABLE, EditorContextKeys.editorTextFocus),\n\t\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Backslash),\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t\t},\n\t\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext) {\n\t\tif (context.notebookEditor.isReadOnly) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst bulkEditService = accessor.get(IBulkEditService);\n\t\tconst cell = context.cell;\n\t\tconst index = context.notebookEditor.getCellIndex(cell);\n\t\tconst splitPoints = cell.focusMode === CellFocusMode.Container ? [{ lineNumber: 1, column: 1 }] : cell.getSelectionsStartPosition();\n\t\tif (splitPoints && splitPoints.length > 0) {\n\t\t\tawait cell.resolveTextModel();\n\n\t\t\tif (!cell.hasModel()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newLinesContents = computeCellLinesContents(cell, splitPoints);\n\t\t\tif (newLinesContents) {\n\t\t\t\tconst language = cell.language;\n\t\t\t\tconst kind = cell.cellKind;\n\t\t\t\tconst mime = cell.mime;\n\n\t\t\t\tconst textModel = await cell.resolveTextModel();\n\t\t\t\tawait bulkEditService.apply(\n\t\t\t\t\t[\n\t\t\t\t\t\tnew ResourceTextEdit(cell.uri, { range: textModel.getFullModelRange(), text: newLinesContents[0] }),\n\t\t\t\t\t\tnew ResourceNotebookCellEdit(context.notebookEditor.textModel.uri,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\teditType: CellEditType.Replace,\n\t\t\t\t\t\t\t\tindex: index + 1,\n\t\t\t\t\t\t\t\tcount: 0,\n\t\t\t\t\t\t\t\tcells: newLinesContents.slice(1).map(line => ({\n\t\t\t\t\t\t\t\t\tcellKind: kind,\n\t\t\t\t\t\t\t\t\tlanguage,\n\t\t\t\t\t\t\t\t\tmime,\n\t\t\t\t\t\t\t\t\tsource: line,\n\t\t\t\t\t\t\t\t\toutputs: [],\n\t\t\t\t\t\t\t\t\tmetadata: {}\n\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t],\n\t\t\t\t\t{ quotableLabel: 'Split Notebook Cell' }\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nregisterAction2(class extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: JOIN_CELL_ABOVE_COMMAND_ID,\n\t\t\t\ttitle: localize2('notebookActions.joinCellAbove', \"Join With Previous Cell\"),\n\t\t\t\tkeybinding: {\n\t\t\t\t\twhen: NOTEBOOK_EDITOR_FOCUSED,\n\t\t\t\t\tprimary: KeyMod.WinCtrl | KeyMod.Alt | KeyMod.Shift | KeyCode.KeyJ,\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t\t},\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_EDITOR_EDITABLE),\n\t\t\t\t\tgroup: CellOverflowToolbarGroups.Edit,\n\t\t\t\t\torder: 10\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext) {\n\t\tconst bulkEditService = accessor.get(IBulkEditService);\n\t\treturn joinCellsWithSurrounds(bulkEditService, context, 'above');\n\t}\n});\n\n\nregisterAction2(class extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: JOIN_CELL_BELOW_COMMAND_ID,\n\t\t\t\ttitle: localize2('notebookActions.joinCellBelow', \"Join With Next Cell\"),\n\t\t\t\tkeybinding: {\n\t\t\t\t\twhen: NOTEBOOK_EDITOR_FOCUSED,\n\t\t\t\t\tprimary: KeyMod.WinCtrl | KeyMod.Alt | KeyCode.KeyJ,\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t\t},\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_EDITOR_EDITABLE),\n\t\t\t\t\tgroup: CellOverflowToolbarGroups.Edit,\n\t\t\t\t\torder: 11\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext) {\n\t\tconst bulkEditService = accessor.get(IBulkEditService);\n\t\treturn joinCellsWithSurrounds(bulkEditService, context, 'below');\n\t}\n});\n\nregisterAction2(class extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: JOIN_SELECTED_CELLS_COMMAND_ID,\n\t\t\t\ttitle: localize2('notebookActions.joinSelectedCells', \"Join Selected Cells\"),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_EDITOR_EDITABLE),\n\t\t\t\t\tgroup: CellOverflowToolbarGroups.Edit,\n\t\t\t\t\torder: 12\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext) {\n\t\tconst bulkEditService = accessor.get(IBulkEditService);\n\t\tconst notificationService = accessor.get(INotificationService);\n\t\treturn joinSelectedCells(bulkEditService, notificationService, context);\n\t}\n});\n\n//#endregion\n\n//#region Change Cell Type\n\nconst CHANGE_CELL_TO_CODE_COMMAND_ID = 'notebook.cell.changeToCode';\nconst CHANGE_CELL_TO_MARKDOWN_COMMAND_ID = 'notebook.cell.changeToMarkdown';\n\nregisterAction2(class ChangeCellToCodeAction extends NotebookMultiCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CHANGE_CELL_TO_CODE_COMMAND_ID,\n\t\t\ttitle: localize2('notebookActions.changeCellToCode', \"Change Cell to Code\"),\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, ContextKeyExpr.not(InputFocusedContextKey), NOTEBOOK_OUTPUT_FOCUSED.toNegated()),\n\t\t\t\tprimary: KeyCode.KeyY,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t},\n\t\t\tprecondition: ContextKeyExpr.and(NOTEBOOK_IS_ACTIVE_EDITOR, NOTEBOOK_CELL_TYPE.isEqualTo('markup')),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_CELL_EDITABLE, NOTEBOOK_CELL_TYPE.isEqualTo('markup')),\n\t\t\t\tgroup: CellOverflowToolbarGroups.Edit,\n\t\t\t}\n\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext | INotebookCellToolbarActionContext): Promise<void> {\n\t\tawait changeCellToKind(CellKind.Code, context);\n\t}\n});\n\nregisterAction2(class ChangeCellToMarkdownAction extends NotebookMultiCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CHANGE_CELL_TO_MARKDOWN_COMMAND_ID,\n\t\t\ttitle: localize2('notebookActions.changeCellToMarkdown', \"Change Cell to Markdown\"),\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, ContextKeyExpr.not(InputFocusedContextKey), NOTEBOOK_OUTPUT_FOCUSED.toNegated()),\n\t\t\t\tprimary: KeyCode.KeyM,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t},\n\t\t\tprecondition: ContextKeyExpr.and(NOTEBOOK_IS_ACTIVE_EDITOR, NOTEBOOK_CELL_TYPE.isEqualTo('code')),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_CELL_EDITABLE, NOTEBOOK_CELL_TYPE.isEqualTo('code')),\n\t\t\t\tgroup: CellOverflowToolbarGroups.Edit,\n\t\t\t}\n\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext | INotebookCellToolbarActionContext): Promise<void> {\n\t\tawait changeCellToKind(CellKind.Markup, context, 'markdown', Mimes.markdown);\n\t}\n});\n\n//#endregion\n\n//#region Collapse Cell\n\nconst COLLAPSE_CELL_INPUT_COMMAND_ID = 'notebook.cell.collapseCellInput';\nconst COLLAPSE_CELL_OUTPUT_COMMAND_ID = 'notebook.cell.collapseCellOutput';\nconst COLLAPSE_ALL_CELL_INPUTS_COMMAND_ID = 'notebook.cell.collapseAllCellInputs';\nconst EXPAND_ALL_CELL_INPUTS_COMMAND_ID = 'notebook.cell.expandAllCellInputs';\nconst COLLAPSE_ALL_CELL_OUTPUTS_COMMAND_ID = 'notebook.cell.collapseAllCellOutputs';\nconst EXPAND_ALL_CELL_OUTPUTS_COMMAND_ID = 'notebook.cell.expandAllCellOutputs';\nconst TOGGLE_CELL_OUTPUTS_COMMAND_ID = 'notebook.cell.toggleOutputs';\nconst TOGGLE_CELL_OUTPUT_SCROLLING = 'notebook.cell.toggleOutputScrolling';\n\nregisterAction2(class CollapseCellInputAction extends NotebookMultiCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: COLLAPSE_CELL_INPUT_COMMAND_ID,\n\t\t\ttitle: localize2('notebookActions.collapseCellInput', \"Collapse Cell Input\"),\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_CELL_LIST_FOCUSED, NOTEBOOK_CELL_INPUT_COLLAPSED.toNegated(), InputFocusedContext.toNegated()),\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyC),\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t}\n\t\t});\n\t}\n\n\toverride parseArgs(accessor: ServicesAccessor, ...args: any[]): INotebookCommandContext | undefined {\n\t\treturn parseMultiCellExecutionArgs(accessor, ...args);\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext | INotebookCellToolbarActionContext): Promise<void> {\n\t\tif (context.ui) {\n\t\t\tcontext.cell.isInputCollapsed = true;\n\t\t} else {\n\t\t\tcontext.selectedCells.forEach(cell => cell.isInputCollapsed = true);\n\t\t}\n\t}\n});\n\nregisterAction2(class ExpandCellInputAction extends NotebookMultiCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: EXPAND_CELL_INPUT_COMMAND_ID,\n\t\t\ttitle: localize2('notebookActions.expandCellInput', \"Expand Cell Input\"),\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_CELL_LIST_FOCUSED, NOTEBOOK_CELL_INPUT_COLLAPSED),\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyC),\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t}\n\t\t});\n\t}\n\n\toverride parseArgs(accessor: ServicesAccessor, ...args: any[]): INotebookCommandContext | undefined {\n\t\treturn parseMultiCellExecutionArgs(accessor, ...args);\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext | INotebookCellToolbarActionContext): Promise<void> {\n\t\tif (context.ui) {\n\t\t\tcontext.cell.isInputCollapsed = false;\n\t\t} else {\n\t\t\tcontext.selectedCells.forEach(cell => cell.isInputCollapsed = false);\n\t\t}\n\t}\n});\n\nregisterAction2(class CollapseCellOutputAction extends NotebookMultiCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: COLLAPSE_CELL_OUTPUT_COMMAND_ID,\n\t\t\ttitle: localize2('notebookActions.collapseCellOutput', \"Collapse Cell Output\"),\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_CELL_LIST_FOCUSED, NOTEBOOK_CELL_OUTPUT_COLLAPSED.toNegated(), InputFocusedContext.toNegated(), NOTEBOOK_CELL_HAS_OUTPUTS),\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyT),\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext | INotebookCellToolbarActionContext): Promise<void> {\n\t\tif (context.ui) {\n\t\t\tcontext.cell.isOutputCollapsed = true;\n\t\t} else {\n\t\t\tcontext.selectedCells.forEach(cell => cell.isOutputCollapsed = true);\n\t\t}\n\t}\n});\n\nregisterAction2(class ExpandCellOuputAction extends NotebookMultiCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: EXPAND_CELL_OUTPUT_COMMAND_ID,\n\t\t\ttitle: localize2('notebookActions.expandCellOutput', \"Expand Cell Output\"),\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_CELL_LIST_FOCUSED, NOTEBOOK_CELL_OUTPUT_COLLAPSED),\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyT),\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext | INotebookCellToolbarActionContext): Promise<void> {\n\t\tif (context.ui) {\n\t\t\tcontext.cell.isOutputCollapsed = false;\n\t\t} else {\n\t\t\tcontext.selectedCells.forEach(cell => cell.isOutputCollapsed = false);\n\t\t}\n\t}\n});\n\nregisterAction2(class extends NotebookMultiCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: TOGGLE_CELL_OUTPUTS_COMMAND_ID,\n\t\t\tprecondition: NOTEBOOK_CELL_LIST_FOCUSED,\n\t\t\ttitle: localize2('notebookActions.toggleOutputs', \"Toggle Outputs\"),\n\t\t\tmetadata: {\n\t\t\t\tdescription: localize('notebookActions.toggleOutputs', \"Toggle Outputs\"),\n\t\t\t\targs: cellExecutionArgs\n\t\t\t}\n\t\t});\n\t}\n\n\toverride parseArgs(accessor: ServicesAccessor, ...args: any[]): INotebookCommandContext | undefined {\n\t\treturn parseMultiCellExecutionArgs(accessor, ...args);\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext | INotebookCellToolbarActionContext): Promise<void> {\n\t\tlet cells: readonly ICellViewModel[] = [];\n\t\tif (context.ui) {\n\t\t\tcells = [context.cell];\n\t\t} else if (context.selectedCells) {\n\t\t\tcells = context.selectedCells;\n\t\t}\n\n\t\tfor (const cell of cells) {\n\t\t\tcell.isOutputCollapsed = !cell.isOutputCollapsed;\n\t\t}\n\t}\n});\n\nregisterAction2(class CollapseAllCellInputsAction extends NotebookMultiCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: COLLAPSE_ALL_CELL_INPUTS_COMMAND_ID,\n\t\t\ttitle: localize2('notebookActions.collapseAllCellInput', \"Collapse All Cell Inputs\"),\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext | INotebookCellToolbarActionContext): Promise<void> {\n\t\tforEachCell(context.notebookEditor, cell => cell.isInputCollapsed = true);\n\t}\n});\n\nregisterAction2(class ExpandAllCellInputsAction extends NotebookMultiCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: EXPAND_ALL_CELL_INPUTS_COMMAND_ID,\n\t\t\ttitle: localize2('notebookActions.expandAllCellInput', \"Expand All Cell Inputs\"),\n\t\t\tf1: true\n\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext | INotebookCellToolbarActionContext): Promise<void> {\n\t\tforEachCell(context.notebookEditor, cell => cell.isInputCollapsed = false);\n\t}\n});\n\nregisterAction2(class CollapseAllCellOutputsAction extends NotebookMultiCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: COLLAPSE_ALL_CELL_OUTPUTS_COMMAND_ID,\n\t\t\ttitle: localize2('notebookActions.collapseAllCellOutput', \"Collapse All Cell Outputs\"),\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext | INotebookCellToolbarActionContext): Promise<void> {\n\t\tforEachCell(context.notebookEditor, cell => cell.isOutputCollapsed = true);\n\t}\n});\n\nregisterAction2(class ExpandAllCellOutputsAction extends NotebookMultiCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: EXPAND_ALL_CELL_OUTPUTS_COMMAND_ID,\n\t\t\ttitle: localize2('notebookActions.expandAllCellOutput', \"Expand All Cell Outputs\"),\n\t\t\tf1: true\n\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext | INotebookCellToolbarActionContext): Promise<void> {\n\t\tforEachCell(context.notebookEditor, cell => cell.isOutputCollapsed = false);\n\t}\n});\n\nregisterAction2(class ToggleCellOutputScrolling extends NotebookMultiCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: TOGGLE_CELL_OUTPUT_SCROLLING,\n\t\t\ttitle: localize2('notebookActions.toggleScrolling', \"Toggle Scroll Cell Output\"),\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_CELL_LIST_FOCUSED, InputFocusedContext.toNegated(), NOTEBOOK_CELL_HAS_OUTPUTS),\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyY),\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate toggleOutputScrolling(viewModel: ICellOutputViewModel, globalScrollSetting: boolean, collapsed: boolean) {\n\t\tconst cellMetadata = viewModel.model.metadata;\n\t\t// TODO: when is cellMetadata undefined? Is that a case we need to support? It is currently a read-only property.\n\t\tif (cellMetadata) {\n\t\t\tconst currentlyEnabled = cellMetadata['scrollable'] !== undefined ? cellMetadata['scrollable'] : globalScrollSetting;\n\t\t\tconst shouldEnableScrolling = collapsed || !currentlyEnabled;\n\t\t\tcellMetadata['scrollable'] = shouldEnableScrolling;\n\t\t\tviewModel.resetRenderer();\n\t\t}\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext | INotebookCellToolbarActionContext): Promise<void> {\n\t\tconst globalScrolling = accessor.get(IConfigurationService).getValue<boolean>(NotebookSetting.outputScrolling);\n\t\tif (context.ui) {\n\t\t\tcontext.cell.outputsViewModels.forEach((viewModel) => {\n\t\t\t\tthis.toggleOutputScrolling(viewModel, globalScrolling, context.cell.isOutputCollapsed);\n\t\t\t});\n\t\t\tcontext.cell.isOutputCollapsed = false;\n\t\t} else {\n\t\t\tcontext.selectedCells.forEach(cell => {\n\t\t\t\tcell.outputsViewModels.forEach((viewModel) => {\n\t\t\t\t\tthis.toggleOutputScrolling(viewModel, globalScrolling, cell.isOutputCollapsed);\n\t\t\t\t});\n\t\t\t\tcell.isOutputCollapsed = false;\n\t\t\t});\n\t\t}\n\t}\n});\n\n//#endregion\n\nfunction forEachCell(editor: INotebookEditor, callback: (cell: ICellViewModel, index: number) => void) {\n\tfor (let i = 0; i < editor.getLength(); i++) {\n\t\tconst cell = editor.cellAt(i);\n\t\tcallback(cell!, i);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
