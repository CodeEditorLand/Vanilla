{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/diff/diffElementOutputs.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from '../../../../../base/browser/dom.js';\nimport * as nls from '../../../../../nls.js';\nimport { Disposable, DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { DiffElementCellViewModelBase, SideBySideDiffElementViewModel } from './diffElementViewModel.js';\nimport { DiffSide, INotebookTextDiffEditor } from './notebookDiffEditorBrowser.js';\nimport { ICellOutputViewModel, IInsetRenderOutput, RenderOutputType } from '../notebookBrowser.js';\nimport { NotebookTextModel } from '../../common/model/notebookTextModel.js';\nimport { NotebookCellOutputsSplice } from '../../common/notebookCommon.js';\nimport { INotebookService } from '../../common/notebookService.js';\nimport { DiffNestedCellViewModel } from './diffNestedCellViewModel.js';\nimport { ThemeIcon } from '../../../../../base/common/themables.js';\nimport { mimetypeIcon } from '../notebookIcons.js';\nimport { StandardKeyboardEvent } from '../../../../../base/browser/keyboardEvent.js';\nimport { KeyCode } from '../../../../../base/common/keyCodes.js';\nimport { IQuickInputService, IQuickPickItem } from '../../../../../platform/quickinput/common/quickInput.js';\n\ninterface IMimeTypeRenderer extends IQuickPickItem {\n\tindex: number;\n}\n\nexport class OutputElement extends Disposable {\n\treadonly resizeListener = this._register(new DisposableStore());\n\tdomNode!: HTMLElement;\n\trenderResult?: IInsetRenderOutput;\n\n\tconstructor(\n\t\tprivate _notebookEditor: INotebookTextDiffEditor,\n\t\tprivate _notebookTextModel: NotebookTextModel,\n\t\tprivate _notebookService: INotebookService,\n\t\tprivate _quickInputService: IQuickInputService,\n\t\tprivate _diffElementViewModel: DiffElementCellViewModelBase,\n\t\tprivate _diffSide: DiffSide,\n\t\tprivate _nestedCell: DiffNestedCellViewModel,\n\t\tprivate _outputContainer: HTMLElement,\n\t\treadonly output: ICellOutputViewModel\n\t) {\n\t\tsuper();\n\t}\n\n\trender(index: number, beforeElement?: HTMLElement) {\n\t\tconst outputItemDiv = document.createElement('div');\n\t\tlet result: IInsetRenderOutput | undefined = undefined;\n\n\t\tconst [mimeTypes, pick] = this.output.resolveMimeTypes(this._notebookTextModel, undefined);\n\t\tconst pickedMimeTypeRenderer = this.output.pickedMimeType || mimeTypes[pick];\n\t\tif (mimeTypes.length > 1) {\n\t\t\toutputItemDiv.style.position = 'relative';\n\t\t\tconst mimeTypePicker = DOM.$('.multi-mimetype-output');\n\t\t\tmimeTypePicker.classList.add(...ThemeIcon.asClassNameArray(mimetypeIcon));\n\t\t\tmimeTypePicker.tabIndex = 0;\n\t\t\tmimeTypePicker.title = nls.localize('mimeTypePicker', \"Choose a different output mimetype, available mimetypes: {0}\", mimeTypes.map(mimeType => mimeType.mimeType).join(', '));\n\t\t\toutputItemDiv.appendChild(mimeTypePicker);\n\t\t\tthis.resizeListener.add(DOM.addStandardDisposableListener(mimeTypePicker, 'mousedown', async e => {\n\t\t\t\tif (e.leftButton) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\tawait this.pickActiveMimeTypeRenderer(this._notebookTextModel, this.output);\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tthis.resizeListener.add((DOM.addDisposableListener(mimeTypePicker, DOM.EventType.KEY_DOWN, async e => {\n\t\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\t\tif ((event.equals(KeyCode.Enter) || event.equals(KeyCode.Space))) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\tawait this.pickActiveMimeTypeRenderer(this._notebookTextModel, this.output);\n\t\t\t\t}\n\t\t\t})));\n\t\t}\n\n\t\tconst innerContainer = DOM.$('.output-inner-container');\n\t\tDOM.append(outputItemDiv, innerContainer);\n\n\n\t\tif (mimeTypes.length !== 0) {\n\t\t\tconst renderer = this._notebookService.getRendererInfo(pickedMimeTypeRenderer.rendererId);\n\t\t\tresult = renderer\n\t\t\t\t? { type: RenderOutputType.Extension, renderer, source: this.output, mimeType: pickedMimeTypeRenderer.mimeType }\n\t\t\t\t: this._renderMissingRenderer(this.output, pickedMimeTypeRenderer.mimeType);\n\n\t\t\tthis.output.pickedMimeType = pickedMimeTypeRenderer;\n\t\t}\n\n\t\tthis.domNode = outputItemDiv;\n\t\tthis.renderResult = result;\n\n\t\tif (!result) {\n\t\t\t// this.viewCell.updateOutputHeight(index, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tif (beforeElement) {\n\t\t\tthis._outputContainer.insertBefore(outputItemDiv, beforeElement);\n\t\t} else {\n\t\t\tthis._outputContainer.appendChild(outputItemDiv);\n\t\t}\n\n\t\tthis._notebookEditor.createOutput(\n\t\t\tthis._diffElementViewModel,\n\t\t\tthis._nestedCell,\n\t\t\tresult,\n\t\t\t() => this.getOutputOffsetInCell(index),\n\t\t\tthis._diffElementViewModel instanceof SideBySideDiffElementViewModel\n\t\t\t\t? this._diffSide\n\t\t\t\t: this._diffElementViewModel.type === 'insert' ? DiffSide.Modified : DiffSide.Original\n\t\t);\n\t}\n\n\tprivate _renderMissingRenderer(viewModel: ICellOutputViewModel, preferredMimeType: string | undefined): IInsetRenderOutput {\n\t\tif (!viewModel.model.outputs.length) {\n\t\t\treturn this._renderMessage(viewModel, nls.localize('empty', \"Cell has no output\"));\n\t\t}\n\n\t\tif (!preferredMimeType) {\n\t\t\tconst mimeTypes = viewModel.model.outputs.map(op => op.mime);\n\t\t\tconst mimeTypesMessage = mimeTypes.join(', ');\n\t\t\treturn this._renderMessage(viewModel, nls.localize('noRenderer.2', \"No renderer could be found for output. It has the following mimetypes: {0}\", mimeTypesMessage));\n\t\t}\n\n\t\treturn this._renderSearchForMimetype(viewModel, preferredMimeType);\n\t}\n\n\tprivate _renderSearchForMimetype(viewModel: ICellOutputViewModel, mimeType: string): IInsetRenderOutput {\n\t\tconst query = `@tag:notebookRenderer ${mimeType}`;\n\n\t\tconst p = DOM.$('p', undefined, `No renderer could be found for mimetype \"${mimeType}\", but one might be available on the Marketplace.`);\n\t\tconst a = DOM.$('a', { href: `command:workbench.extensions.search?%22${query}%22`, class: 'monaco-button monaco-text-button', tabindex: 0, role: 'button', style: 'padding: 8px; text-decoration: none; color: rgb(255, 255, 255); background-color: rgb(14, 99, 156); max-width: 200px;' }, `Search Marketplace`);\n\n\t\treturn {\n\t\t\ttype: RenderOutputType.Html,\n\t\t\tsource: viewModel,\n\t\t\thtmlContent: p.outerHTML + a.outerHTML,\n\t\t};\n\t}\n\n\tprivate _renderMessage(viewModel: ICellOutputViewModel, message: string): IInsetRenderOutput {\n\t\tconst el = DOM.$('p', undefined, message);\n\t\treturn { type: RenderOutputType.Html, source: viewModel, htmlContent: el.outerHTML };\n\t}\n\n\tprivate async pickActiveMimeTypeRenderer(notebookTextModel: NotebookTextModel, viewModel: ICellOutputViewModel) {\n\t\tconst [mimeTypes, currIndex] = viewModel.resolveMimeTypes(notebookTextModel, undefined);\n\n\t\tconst items = mimeTypes.filter(mimeType => mimeType.isTrusted).map((mimeType, index): IMimeTypeRenderer => ({\n\t\t\tlabel: mimeType.mimeType,\n\t\t\tid: mimeType.mimeType,\n\t\t\tindex: index,\n\t\t\tpicked: index === currIndex,\n\t\t\tdetail: this.generateRendererInfo(mimeType.rendererId),\n\t\t\tdescription: index === currIndex ? nls.localize('curruentActiveMimeType', \"Currently Active\") : undefined\n\t\t}));\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst picker = disposables.add(this._quickInputService.createQuickPick());\n\t\tpicker.items = items;\n\t\tpicker.activeItems = items.filter(item => !!item.picked);\n\t\tpicker.placeholder = items.length !== mimeTypes.length\n\t\t\t? nls.localize('promptChooseMimeTypeInSecure.placeHolder', \"Select mimetype to render for current output. Rich mimetypes are available only when the notebook is trusted\")\n\t\t\t: nls.localize('promptChooseMimeType.placeHolder', \"Select mimetype to render for current output\");\n\n\t\tconst pick = await new Promise<number | undefined>(resolve => {\n\t\t\tdisposables.add(picker.onDidAccept(() => {\n\t\t\t\tresolve(picker.selectedItems.length === 1 ? (picker.selectedItems[0] as IMimeTypeRenderer).index : undefined);\n\t\t\t\tdisposables.dispose();\n\t\t\t}));\n\t\t\tpicker.show();\n\t\t});\n\n\t\tif (pick === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (pick !== currIndex) {\n\t\t\t// user chooses another mimetype\n\t\t\tconst index = this._nestedCell.outputsViewModels.indexOf(viewModel);\n\t\t\tconst nextElement = this.domNode.nextElementSibling;\n\t\t\tthis.resizeListener.clear();\n\t\t\tconst element = this.domNode;\n\t\t\tif (element) {\n\t\t\t\telement.remove();\n\t\t\t\tthis._notebookEditor.removeInset(\n\t\t\t\t\tthis._diffElementViewModel,\n\t\t\t\t\tthis._nestedCell,\n\t\t\t\t\tviewModel,\n\t\t\t\t\tthis._diffSide\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tviewModel.pickedMimeType = mimeTypes[pick];\n\t\t\tthis.render(index, nextElement as HTMLElement);\n\t\t}\n\t}\n\n\tprivate generateRendererInfo(renderId: string): string {\n\t\tconst renderInfo = this._notebookService.getRendererInfo(renderId);\n\n\t\tif (renderInfo) {\n\t\t\tconst displayName = renderInfo.displayName !== '' ? renderInfo.displayName : renderInfo.id;\n\t\t\treturn `${displayName} (${renderInfo.extensionId.value})`;\n\t\t}\n\n\t\treturn nls.localize('builtinRenderInfo', \"built-in\");\n\t}\n\n\tgetCellOutputCurrentIndex() {\n\t\treturn this._diffElementViewModel.getNestedCellViewModel(this._diffSide).outputs.indexOf(this.output.model);\n\t}\n\n\tupdateHeight(index: number, height: number) {\n\t\tthis._diffElementViewModel.updateOutputHeight(this._diffSide, index, height);\n\t}\n\n\tgetOutputOffsetInContainer(index: number) {\n\t\treturn this._diffElementViewModel.getOutputOffsetInContainer(this._diffSide, index);\n\t}\n\n\tgetOutputOffsetInCell(index: number) {\n\t\treturn this._diffElementViewModel.getOutputOffsetInCell(this._diffSide, index);\n\t}\n}\n\nexport class OutputContainer extends Disposable {\n\tprivate _outputEntries = new Map<ICellOutputViewModel, OutputElement>();\n\tconstructor(\n\t\tprivate _editor: INotebookTextDiffEditor,\n\t\tprivate _notebookTextModel: NotebookTextModel,\n\t\tprivate _diffElementViewModel: DiffElementCellViewModelBase,\n\t\tprivate _nestedCellViewModel: DiffNestedCellViewModel,\n\t\tprivate _diffSide: DiffSide,\n\t\tprivate _outputContainer: HTMLElement,\n\t\t@INotebookService private _notebookService: INotebookService,\n\t\t@IQuickInputService private readonly _quickInputService: IQuickInputService,\n\t) {\n\t\tsuper();\n\t\tthis._register(this._diffElementViewModel.onDidLayoutChange(() => {\n\t\t\tthis._outputEntries.forEach((value, key) => {\n\t\t\t\tconst index = _nestedCellViewModel.outputs.indexOf(key.model);\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\tconst top = this._diffElementViewModel.getOutputOffsetInContainer(this._diffSide, index);\n\t\t\t\t\tvalue.domNode.style.top = `${top}px`;\n\t\t\t\t}\n\t\t\t});\n\t\t}));\n\n\t\tthis._register(this._nestedCellViewModel.textModel.onDidChangeOutputs(splice => {\n\t\t\tthis._updateOutputs(splice);\n\t\t}));\n\t}\n\n\tprivate _updateOutputs(splice: NotebookCellOutputsSplice) {\n\t\tconst removedKeys: ICellOutputViewModel[] = [];\n\n\t\tthis._outputEntries.forEach((value, key) => {\n\t\t\tif (this._nestedCellViewModel.outputsViewModels.indexOf(key) < 0) {\n\t\t\t\t// already removed\n\t\t\t\tremovedKeys.push(key);\n\t\t\t\t// remove element from DOM\n\t\t\t\tvalue.domNode.remove();\n\t\t\t\tthis._editor.removeInset(this._diffElementViewModel, this._nestedCellViewModel, key, this._diffSide);\n\t\t\t}\n\t\t});\n\n\t\tremovedKeys.forEach(key => {\n\t\t\tthis._outputEntries.get(key)?.dispose();\n\t\t\tthis._outputEntries.delete(key);\n\t\t});\n\n\t\tlet prevElement: HTMLElement | undefined = undefined;\n\t\tconst outputsToRender = this._nestedCellViewModel.outputsViewModels;\n\n\t\toutputsToRender.reverse().forEach(output => {\n\t\t\tif (this._outputEntries.has(output)) {\n\t\t\t\t// already exist\n\t\t\t\tprevElement = this._outputEntries.get(output)!.domNode;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// newly added element\n\t\t\tconst currIndex = this._nestedCellViewModel.outputsViewModels.indexOf(output);\n\t\t\tthis._renderOutput(output, currIndex, prevElement);\n\t\t\tprevElement = this._outputEntries.get(output)?.domNode;\n\t\t});\n\t}\n\trender() {\n\t\t// TODO, outputs to render (should have a limit)\n\t\tfor (let index = 0; index < this._nestedCellViewModel.outputsViewModels.length; index++) {\n\t\t\tconst currOutput = this._nestedCellViewModel.outputsViewModels[index];\n\n\t\t\t// always add to the end\n\t\t\tthis._renderOutput(currOutput, index, undefined);\n\t\t}\n\t}\n\n\tshowOutputs() {\n\t\tfor (let index = 0; index < this._nestedCellViewModel.outputsViewModels.length; index++) {\n\t\t\tconst currOutput = this._nestedCellViewModel.outputsViewModels[index];\n\t\t\t// always add to the end\n\t\t\tthis._editor.showInset(this._diffElementViewModel, currOutput.cellViewModel, currOutput, this._diffSide);\n\t\t}\n\t}\n\n\thideOutputs() {\n\t\tthis._outputEntries.forEach((outputElement, cellOutputViewModel) => {\n\t\t\tthis._editor.hideInset(this._diffElementViewModel, this._nestedCellViewModel, cellOutputViewModel);\n\t\t});\n\t}\n\n\tprivate _renderOutput(currOutput: ICellOutputViewModel, index: number, beforeElement?: HTMLElement) {\n\t\tif (!this._outputEntries.has(currOutput)) {\n\t\t\tthis._outputEntries.set(currOutput, new OutputElement(this._editor, this._notebookTextModel, this._notebookService, this._quickInputService, this._diffElementViewModel, this._diffSide, this._nestedCellViewModel, this._outputContainer, currOutput));\n\t\t}\n\n\t\tconst renderElement = this._outputEntries.get(currOutput)!;\n\t\trenderElement.render(index, beforeElement);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
