import*as a from"../../../../../../base/browser/dom.js";import{Delayer as V}from"../../../../../../base/common/async.js";import{Disposable as M,MutableDisposable as S}from"../../../../../../base/common/lifecycle.js";import*as y from"../../../../../../base/common/platform.js";import{cloneNotebookCellTextModel as A}from"../../../common/model/notebookCellTextModel.js";import{CellEditType as w,SelectionStateType as C}from"../../../common/notebookCommon.js";import{cellRangesToIndexes as L}from"../../../common/notebookRange.js";import{expandCellRangesWithHiddenCells as O}from"../../notebookBrowser.js";import{CellContentPart as H}from"../cellPart.js";const N=a.$,k="cell-dragging",v="global-drag-active";class $ extends H{constructor(e){super();this.container=e}didRenderCell(e){this.update(e)}updateState(e,i){i.dragStateChanged&&this.update(e)}update(e){this.container.classList.toggle(k,e.dragging)}}class j extends M{constructor(e,i){super();this.notebookEditor=e;this.notebookListContainer=i;this.listInsertionIndicator=a.append(i,N(".cell-list-insertion-indicator")),this._register(a.addDisposableListener(i.ownerDocument.body,a.EventType.DRAG_START,this.onGlobalDragStart.bind(this),!0)),this._register(a.addDisposableListener(i.ownerDocument.body,a.EventType.DRAG_END,this.onGlobalDragEnd.bind(this),!0));const o=(t,l,s=!1)=>{this._register(a.addDisposableListener(e.getDomNode(),t,p=>{const n=this.toCellDragEvent(p);n&&l(n)},s))};o(a.EventType.DRAG_OVER,t=>{this.currentDraggedCell&&(t.browserEvent.preventDefault(),this.onCellDragover(t))},!0),o(a.EventType.DROP,t=>{this.currentDraggedCell&&(t.browserEvent.preventDefault(),this.onCellDrop(t))}),o(a.EventType.DRAG_LEAVE,t=>{t.browserEvent.preventDefault(),this.onCellDragLeave(t)}),this.scrollingDelayer=this._register(new V(200))}currentDraggedCell;draggedCells=[];listInsertionIndicator;list;isScrolling=!1;scrollingDelayer;listOnWillScrollListener=this._register(new S);setList(e){this.list=e,this.listOnWillScrollListener.value=this.list.onWillScroll(i=>{i.scrollTopChanged&&(this.setInsertIndicatorVisibility(!1),this.isScrolling=!0,this.scrollingDelayer.trigger(()=>{this.isScrolling=!1}))})}setInsertIndicatorVisibility(e){this.listInsertionIndicator.style.opacity=e?"1":"0"}toCellDragEvent(e){const i=this.notebookListContainer.getBoundingClientRect().top,o=this.list.scrollTop+e.clientY-i,t=this.list.elementAt(o);if(!t)return;const l=this.list.getCellViewScrollTop(t),s=this.list.elementHeight(t),n=(o-l)/s;return{browserEvent:e,draggedOverCell:t,cellTop:l,cellHeight:s,dragPosRatio:n}}clearGlobalDragState(){this.notebookEditor.getDomNode().classList.remove(v)}onGlobalDragStart(){this.notebookEditor.getDomNode().classList.add(v)}onGlobalDragEnd(){this.notebookEditor.getDomNode().classList.remove(v)}onCellDragover(e){if(!e.browserEvent.dataTransfer)return;if(!this.currentDraggedCell){e.browserEvent.dataTransfer.dropEffect="none";return}if(this.isScrolling||this.currentDraggedCell===e.draggedOverCell){this.setInsertIndicatorVisibility(!1);return}const i=this.getDropInsertDirection(e.dragPosRatio),o=i==="above"?e.cellTop:e.cellTop+e.cellHeight;this.updateInsertIndicator(i,o)}updateInsertIndicator(e,i){const{bottomToolbarGap:o}=this.notebookEditor.notebookOptions.computeBottomToolbarDimensions(this.notebookEditor.textModel?.viewType),t=i-this.list.scrollTop+o/2;t>=0?(this.listInsertionIndicator.style.top=`${t}px`,this.setInsertIndicatorVisibility(!0)):this.setInsertIndicatorVisibility(!1)}getDropInsertDirection(e){return e<.5?"above":"below"}onCellDrop(e){const i=this.currentDraggedCell;if(this.isScrolling||this.currentDraggedCell===e.draggedOverCell)return;this.dragCleanup();const o=this.getDropInsertDirection(e.dragPosRatio);this._dropImpl(i,o,e.browserEvent,e.draggedOverCell)}getCellRangeAroundDragTarget(e){const i=this.notebookEditor.getSelections(),t=O(this.notebookEditor,i).find(l=>l.start<=e&&e<l.end);return t||{start:e,end:e+1}}_dropImpl(e,i,o,t){const l=this.list.getCellViewScrollTop(t),s=this.list.elementHeight(t),p=i==="above"?l:l+s,{bottomToolbarGap:n}=this.notebookEditor.notebookOptions.computeBottomToolbarDimensions(this.notebookEditor.textModel?.viewType),d=p-this.list.scrollTop+n/2,c=this.notebookEditor.getDomNode().getBoundingClientRect().height;if(d<0||d>c)return;const D=o.ctrlKey&&!y.isMacintosh||o.altKey&&y.isMacintosh;if(!this.notebookEditor.hasModel())return;const f=this.notebookEditor.textModel;if(D){const I=this.notebookEditor.getCellIndex(e),h=this.getCellRangeAroundDragTarget(I);let r=this.notebookEditor.getCellIndex(t);if(i==="below"){const u=this.notebookEditor.getCellIndex(t);r=this.notebookEditor.getNextVisibleCellIndex(u)}let b,E;if(r<=h.start)b={start:r,end:r+h.end-h.start},E={start:r+I-h.start,end:r+I-h.start+1};else{const u=r-h.start;b={start:h.start+u,end:h.end+u},E={start:I+u,end:I+u+1}}f.applyEdits([{editType:w.Replace,index:r,count:0,cells:L([h]).map(u=>A(this.notebookEditor.cellAt(u).model))}],!0,{kind:C.Index,focus:this.notebookEditor.getFocus(),selections:this.notebookEditor.getSelections()},()=>({kind:C.Index,focus:E,selections:[b]}),void 0,!0),this.notebookEditor.revealCellRangeInView(b)}else P(this.notebookEditor,e,i,t)}onCellDragLeave(e){(!e.browserEvent.relatedTarget||!a.isAncestor(e.browserEvent.relatedTarget,this.notebookEditor.getDomNode()))&&this.setInsertIndicatorVisibility(!1)}dragCleanup(){this.currentDraggedCell&&(this.draggedCells.forEach(e=>e.dragging=!1),this.currentDraggedCell=void 0,this.draggedCells=[]),this.setInsertIndicatorVisibility(!1)}registerDragHandle(e,i,o,t){const l=e.container;for(const n of o)n.setAttribute("draggable","true");const s=()=>{!this.notebookEditor.notebookOptions.getDisplayOptions().dragAndDropEnabled||this.notebookEditor.isReadOnly||(l.classList.remove(k),this.dragCleanup())};for(const n of o)e.templateDisposables.add(a.addDisposableListener(n,a.EventType.DRAG_END,s));const p=n=>{if(!n.dataTransfer||!this.notebookEditor.notebookOptions.getDisplayOptions().dragAndDropEnabled||this.notebookEditor.isReadOnly)return;this.currentDraggedCell=e.currentRenderedCell,this.draggedCells=this.notebookEditor.getSelections().flatMap(c=>this.notebookEditor.getCellsInRange(c)),this.draggedCells.forEach(c=>c.dragging=!0);const d=t();i.parentElement.appendChild(d),n.dataTransfer.setDragImage(d,0,0),setTimeout(()=>d.remove(),0)};for(const n of o)e.templateDisposables.add(a.addDisposableListener(n,a.EventType.DRAG_START,p))}startExplicitDrag(e,i){!this.notebookEditor.notebookOptions.getDisplayOptions().dragAndDropEnabled||this.notebookEditor.isReadOnly||(this.currentDraggedCell=e,this.setInsertIndicatorVisibility(!0))}explicitDrag(e,i){if(!this.notebookEditor.notebookOptions.getDisplayOptions().dragAndDropEnabled||this.notebookEditor.isReadOnly)return;const o=this.list.elementAt(i);if(o&&o!==e){const d=this.list.getCellViewScrollTop(o),c=this.list.elementHeight(o),D=this.getExplicitDragDropDirection(i,d,c),f=D==="above"?d:d+c;this.updateInsertIndicator(D,f)}if(this.currentDraggedCell!==e)return;const t=this.notebookEditor.getDomNode().getBoundingClientRect(),l=i-this.list.scrollTop,s=.2,p=20,n=l/t.height;n<s?this.list.scrollTop-=p*(1-n/s):n>1-s&&(this.list.scrollTop+=p*(1-(1-n)/s))}endExplicitDrag(e){this.setInsertIndicatorVisibility(!1)}explicitDrop(e,i){this.currentDraggedCell=void 0,this.setInsertIndicatorVisibility(!1);const o=this.list.elementAt(i.dragOffsetY);if(!o||o===e)return;const t=this.list.getCellViewScrollTop(o),l=this.list.elementHeight(o),s=this.getExplicitDragDropDirection(i.dragOffsetY,t,l);this._dropImpl(e,s,i,o)}getExplicitDragDropDirection(e,i,o){const l=(e-i)/o;return this.getDropInsertDirection(l)}dispose(){this.notebookEditor=null,super.dispose()}}function P(g,m,e,i){const o=g.getCellIndex(m);let t=g.getCellIndex(i);if(typeof o!="number"||typeof t!="number")return;e==="below"&&(t=g.getNextVisibleCellIndex(t)??t);let l=g.getSelections();l.length||(l=[g.getFocus()]);let s=g.getFocus().start;l.some(r=>r.start<=o&&r.end>o)||(l=[{start:o,end:o+1}],s=o);const p=l.find(r=>r.start<=t&&r.end>t);p&&(t=p.start);let n=0,d=t,c=t;l.sort((r,b)=>b.start-r.start);const D=l.map(r=>{const b=r.end-r.start;let E=0;r.end<=c&&(E=-b);const u=c+E;if(s>=r.start&&s<=r.end){const R=s-r.start;d=u+R}const T=r.start>=t?n:0,x={editType:w.Move,index:r.start+T,length:b,newIdx:u};return n+=b,r.end<c&&(c-=b),x}),f=D[D.length-1],I={start:f.newIdx,end:f.newIdx+n},h={start:d,end:d+1};g.textModel.applyEdits(D,!0,{kind:C.Index,focus:g.getFocus(),selections:g.getSelections()},()=>({kind:C.Index,focus:h,selections:[I]}),void 0,!0),g.revealCellRangeInView(I)}export{j as CellDragAndDropController,$ as CellDragAndDropPart,P as performCellDropEdits};
