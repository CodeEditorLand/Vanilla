{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/multicursor/notebookMulticursor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, type Event } from \"../../../../../../base/common/event.js\";\nimport { KeyCode, KeyMod } from \"../../../../../../base/common/keyCodes.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n} from \"../../../../../../base/common/lifecycle.js\";\nimport { ResourceMap } from \"../../../../../../base/common/map.js\";\nimport type { URI } from \"../../../../../../base/common/uri.js\";\nimport { EditorConfiguration } from \"../../../../../../editor/browser/config/editorConfiguration.js\";\nimport type {\n\tICodeEditor,\n\tPastePayload,\n} from \"../../../../../../editor/browser/editorBrowser.js\";\nimport {\n\tRedoCommand,\n\tUndoCommand,\n} from \"../../../../../../editor/browser/editorExtensions.js\";\nimport { CodeEditorWidget } from \"../../../../../../editor/browser/widget/codeEditor/codeEditorWidget.js\";\nimport type { IEditorConfiguration } from \"../../../../../../editor/common/config/editorConfiguration.js\";\nimport type { Position } from \"../../../../../../editor/common/core/position.js\";\nimport type { Range } from \"../../../../../../editor/common/core/range.js\";\nimport {\n\tSelection,\n\tSelectionDirection,\n} from \"../../../../../../editor/common/core/selection.js\";\nimport {\n\ttype IWordAtPosition,\n\tUSUAL_WORD_SEPARATORS,\n} from \"../../../../../../editor/common/core/wordHelper.js\";\nimport {\n\tCommandExecutor,\n\tCursorsController,\n} from \"../../../../../../editor/common/cursor/cursor.js\";\nimport { DeleteOperations } from \"../../../../../../editor/common/cursor/cursorDeleteOperations.js\";\nimport {\n\tCursorConfiguration,\n\ttype ICursorSimpleModel,\n} from \"../../../../../../editor/common/cursorCommon.js\";\nimport { CursorChangeReason } from \"../../../../../../editor/common/cursorEvents.js\";\nimport {\n\ttype CompositionTypePayload,\n\tHandler,\n\ttype ReplacePreviousCharPayload,\n} from \"../../../../../../editor/common/editorCommon.js\";\nimport { ILanguageConfigurationService } from \"../../../../../../editor/common/languages/languageConfigurationRegistry.js\";\nimport type {\n\tIModelDeltaDecoration,\n\tITextModel,\n\tPositionAffinity,\n} from \"../../../../../../editor/common/model.js\";\nimport { indentOfLine } from \"../../../../../../editor/common/model/textModel.js\";\nimport { ITextModelService } from \"../../../../../../editor/common/services/resolverService.js\";\nimport type { ICoordinatesConverter } from \"../../../../../../editor/common/viewModel.js\";\nimport { ViewModelEventsCollector } from \"../../../../../../editor/common/viewModelEventDispatcher.js\";\nimport { localize } from \"../../../../../../nls.js\";\nimport { IAccessibilityService } from \"../../../../../../platform/accessibility/common/accessibility.js\";\nimport {\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../../../platform/configuration/common/configuration.js\";\nimport {\n\tContextKeyExpr,\n\tIContextKeyService,\n\tRawContextKey,\n} from \"../../../../../../platform/contextkey/common/contextkey.js\";\nimport type { ServicesAccessor } from \"../../../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport {\n\ttype IPastFutureElements,\n\ttype IUndoRedoElement,\n\tIUndoRedoService,\n\tUndoRedoElementType,\n} from \"../../../../../../platform/undoRedo/common/undoRedo.js\";\nimport {\n\tWorkbenchPhase,\n\tregisterWorkbenchContribution2,\n} from \"../../../../../common/contributions.js\";\nimport { IEditorService } from \"../../../../../services/editor/common/editorService.js\";\nimport {\n\tNOTEBOOK_CELL_EDITOR_FOCUSED,\n\tNOTEBOOK_IS_ACTIVE_EDITOR,\n} from \"../../../common/notebookContextKeys.js\";\nimport {\n\ttype INotebookActionContext,\n\tNotebookAction,\n} from \"../../controller/coreActions.js\";\nimport {\n\ttype ICellViewModel,\n\ttype INotebookEditor,\n\ttype INotebookEditorContribution,\n\tgetNotebookEditorFromEditorPane,\n} from \"../../notebookBrowser.js\";\nimport { registerNotebookContribution } from \"../../notebookEditorExtensions.js\";\nimport { CellEditorOptions } from \"../../view/cellParts/cellEditorOptions.js\";\n\nconst NOTEBOOK_ADD_FIND_MATCH_TO_SELECTION_ID =\n\t\"notebook.addFindMatchToSelection\";\n\nenum NotebookMultiCursorState {\n\tIdle = 0,\n\tSelecting = 1,\n\tEditing = 2,\n}\n\ninterface TrackedMatch {\n\tcellViewModel: ICellViewModel;\n\tinitialSelection: Selection;\n\twordSelections: Selection[];\n\tconfig: IEditorConfiguration;\n\tdecorationIds: string[];\n\tundoRedoHistory: IPastFutureElements;\n}\n\nexport const NOTEBOOK_MULTI_SELECTION_CONTEXT = {\n\tIsNotebookMultiSelect: new RawContextKey<boolean>(\n\t\t\"isNotebookMultiSelect\",\n\t\tfalse,\n\t),\n\tNotebookMultiSelectState: new RawContextKey<NotebookMultiCursorState>(\n\t\t\"notebookMultiSelectState\",\n\t\tNotebookMultiCursorState.Idle,\n\t),\n};\n\nexport class NotebookMultiCursorController\n\textends Disposable\n\timplements INotebookEditorContribution\n{\n\tstatic readonly id: string = \"notebook.multiCursorController\";\n\n\tprivate state: NotebookMultiCursorState = NotebookMultiCursorState.Idle;\n\n\tprivate word = \"\";\n\tprivate trackedMatches: TrackedMatch[] = [];\n\n\tprivate readonly _onDidChangeAnchorCell = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onDidChangeAnchorCell: Event<void> =\n\t\tthis._onDidChangeAnchorCell.event;\n\tprivate anchorCell: [ICellViewModel, ICodeEditor] | undefined;\n\n\tprivate readonly anchorDisposables = this._register(new DisposableStore());\n\tprivate readonly cursorsDisposables = this._register(new DisposableStore());\n\tprivate cursorsControllers: ResourceMap<CursorsController> =\n\t\tnew ResourceMap<CursorsController>();\n\n\tprivate _nbIsMultiSelectSession =\n\t\tNOTEBOOK_MULTI_SELECTION_CONTEXT.IsNotebookMultiSelect.bindTo(\n\t\t\tthis.contextKeyService,\n\t\t);\n\tprivate _nbMultiSelectState =\n\t\tNOTEBOOK_MULTI_SELECTION_CONTEXT.NotebookMultiSelectState.bindTo(\n\t\t\tthis.contextKeyService,\n\t\t);\n\n\tconstructor(\n\t\tprivate readonly notebookEditor: INotebookEditor,\n\t\t@IContextKeyService\n\t\tprivate readonly contextKeyService: IContextKeyService,\n\t\t@ITextModelService private readonly textModelService: ITextModelService,\n\t\t@ILanguageConfigurationService\n\t\tprivate readonly languageConfigurationService: ILanguageConfigurationService,\n\t\t@IAccessibilityService\n\t\tprivate readonly accessibilityService: IAccessibilityService,\n\t\t@IConfigurationService\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\t@IUndoRedoService private readonly undoRedoService: IUndoRedoService,\n\t) {\n\t\tsuper();\n\n\t\tif (\n\t\t\t!this.configurationService.getValue<boolean>(\n\t\t\t\t\"notebook.multiSelect.enabled\",\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.anchorCell = this.notebookEditor.activeCellAndCodeEditor;\n\n\t\t// anchor cell will catch and relay all type, cut, paste events to the cursors controllers\n\t\t// need to create new controllers when the anchor cell changes, then update their listeners\n\t\t// ** cursor controllers need to happen first, because anchor listeners relay to them\n\t\tthis._register(\n\t\t\tthis.onDidChangeAnchorCell(() => {\n\t\t\t\tthis.updateCursorsControllers();\n\t\t\t\tthis.updateAnchorListeners();\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate updateCursorsControllers() {\n\t\tthis.cursorsDisposables.clear();\n\t\tthis.trackedMatches.forEach(async (match) => {\n\t\t\tconst textModelRef =\n\t\t\t\tawait this.textModelService.createModelReference(\n\t\t\t\t\tmatch.cellViewModel.uri,\n\t\t\t\t);\n\t\t\tconst textModel = textModelRef.object.textEditorModel;\n\t\t\tif (!textModel) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst cursorSimpleModel = this.constructCursorSimpleModel(\n\t\t\t\tmatch.cellViewModel,\n\t\t\t);\n\t\t\tconst converter = this.constructCoordinatesConverter();\n\t\t\tconst editorConfig = match.config;\n\n\t\t\tconst controller = this.cursorsDisposables.add(\n\t\t\t\tnew CursorsController(\n\t\t\t\t\ttextModel,\n\t\t\t\t\tcursorSimpleModel,\n\t\t\t\t\tconverter,\n\t\t\t\t\tnew CursorConfiguration(\n\t\t\t\t\t\ttextModel.getLanguageId(),\n\t\t\t\t\t\ttextModel.getOptions(),\n\t\t\t\t\t\teditorConfig,\n\t\t\t\t\t\tthis.languageConfigurationService,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t\tcontroller.setSelections(\n\t\t\t\tnew ViewModelEventsCollector(),\n\t\t\t\tundefined,\n\t\t\t\tmatch.wordSelections,\n\t\t\t\tCursorChangeReason.Explicit,\n\t\t\t);\n\t\t\tthis.cursorsControllers.set(match.cellViewModel.uri, controller);\n\t\t});\n\t}\n\n\tprivate constructCoordinatesConverter(): ICoordinatesConverter {\n\t\treturn {\n\t\t\tconvertViewPositionToModelPosition(\n\t\t\t\tviewPosition: Position,\n\t\t\t): Position {\n\t\t\t\treturn viewPosition;\n\t\t\t},\n\t\t\tconvertViewRangeToModelRange(viewRange: Range): Range {\n\t\t\t\treturn viewRange;\n\t\t\t},\n\t\t\tvalidateViewPosition(\n\t\t\t\tviewPosition: Position,\n\t\t\t\texpectedModelPosition: Position,\n\t\t\t): Position {\n\t\t\t\treturn viewPosition;\n\t\t\t},\n\t\t\tvalidateViewRange(\n\t\t\t\tviewRange: Range,\n\t\t\t\texpectedModelRange: Range,\n\t\t\t): Range {\n\t\t\t\treturn viewRange;\n\t\t\t},\n\t\t\tconvertModelPositionToViewPosition(\n\t\t\t\tmodelPosition: Position,\n\t\t\t\taffinity?: PositionAffinity,\n\t\t\t\tallowZeroLineNumber?: boolean,\n\t\t\t\tbelowHiddenRanges?: boolean,\n\t\t\t): Position {\n\t\t\t\treturn modelPosition;\n\t\t\t},\n\t\t\tconvertModelRangeToViewRange(\n\t\t\t\tmodelRange: Range,\n\t\t\t\taffinity?: PositionAffinity,\n\t\t\t): Range {\n\t\t\t\treturn modelRange;\n\t\t\t},\n\t\t\tmodelPositionIsVisible(modelPosition: Position): boolean {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tgetModelLineViewLineCount(modelLineNumber: number): number {\n\t\t\t\treturn 1;\n\t\t\t},\n\t\t\tgetViewLineNumberOfModelPosition(\n\t\t\t\tmodelLineNumber: number,\n\t\t\t\tmodelColumn: number,\n\t\t\t): number {\n\t\t\t\treturn modelLineNumber;\n\t\t\t},\n\t\t};\n\t}\n\n\tprivate constructCursorSimpleModel(\n\t\tcell: ICellViewModel,\n\t): ICursorSimpleModel {\n\t\treturn {\n\t\t\tgetLineCount(): number {\n\t\t\t\treturn cell.textBuffer.getLineCount();\n\t\t\t},\n\t\t\tgetLineContent(lineNumber: number): string {\n\t\t\t\treturn cell.textBuffer.getLineContent(lineNumber);\n\t\t\t},\n\t\t\tgetLineMinColumn(lineNumber: number): number {\n\t\t\t\treturn cell.textBuffer.getLineMinColumn(lineNumber);\n\t\t\t},\n\t\t\tgetLineMaxColumn(lineNumber: number): number {\n\t\t\t\treturn cell.textBuffer.getLineMaxColumn(lineNumber);\n\t\t\t},\n\t\t\tgetLineFirstNonWhitespaceColumn(lineNumber: number): number {\n\t\t\t\treturn cell.textBuffer.getLineFirstNonWhitespaceColumn(\n\t\t\t\t\tlineNumber,\n\t\t\t\t);\n\t\t\t},\n\t\t\tgetLineLastNonWhitespaceColumn(lineNumber: number): number {\n\t\t\t\treturn cell.textBuffer.getLineLastNonWhitespaceColumn(\n\t\t\t\t\tlineNumber,\n\t\t\t\t);\n\t\t\t},\n\t\t\tnormalizePosition(\n\t\t\t\tposition: Position,\n\t\t\t\taffinity: PositionAffinity,\n\t\t\t): Position {\n\t\t\t\treturn position;\n\t\t\t},\n\t\t\tgetLineIndentColumn(lineNumber: number): number {\n\t\t\t\treturn (\n\t\t\t\t\tindentOfLine(cell.textBuffer.getLineContent(lineNumber)) + 1\n\t\t\t\t);\n\t\t\t},\n\t\t};\n\t}\n\n\tprivate updateAnchorListeners() {\n\t\tthis.anchorDisposables.clear();\n\n\t\tif (!this.anchorCell) {\n\t\t\tthrow new Error(\"Anchor cell is undefined\");\n\t\t}\n\n\t\t// typing\n\t\tthis.anchorDisposables.add(\n\t\t\tthis.anchorCell[1].onWillType((input) => {\n\t\t\t\tconst collector = new ViewModelEventsCollector();\n\t\t\t\tthis.trackedMatches.forEach((match) => {\n\t\t\t\t\tconst controller = this.cursorsControllers.get(\n\t\t\t\t\t\tmatch.cellViewModel.uri,\n\t\t\t\t\t);\n\t\t\t\t\tif (!controller) {\n\t\t\t\t\t\t// should not happen\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\tmatch.cellViewModel.handle !==\n\t\t\t\t\t\tthis.anchorCell?.[0].handle\n\t\t\t\t\t) {\n\t\t\t\t\t\t// don't relay to active cell, already has a controller for typing\n\t\t\t\t\t\tcontroller.type(collector, input, \"keyboard\");\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\n\t\tthis.anchorDisposables.add(\n\t\t\tthis.anchorCell[1].onDidType(() => {\n\t\t\t\tthis.state = NotebookMultiCursorState.Editing; // typing will continue to work as normal across ranges, just preps for another cmd+d\n\t\t\t\tthis._nbMultiSelectState.set(NotebookMultiCursorState.Editing);\n\n\t\t\t\tconst anchorController = this.cursorsControllers.get(\n\t\t\t\t\tthis.anchorCell![0].uri,\n\t\t\t\t);\n\t\t\t\tif (!anchorController) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst activeSelections =\n\t\t\t\t\tthis.notebookEditor.activeCodeEditor?.getSelections();\n\t\t\t\tif (!activeSelections) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// need to keep anchor cursor controller in sync manually (for delete usage), since we don't relay type event to it\n\t\t\t\tanchorController.setSelections(\n\t\t\t\t\tnew ViewModelEventsCollector(),\n\t\t\t\t\t\"keyboard\",\n\t\t\t\t\tactiveSelections,\n\t\t\t\t\tCursorChangeReason.Explicit,\n\t\t\t\t);\n\n\t\t\t\tthis.trackedMatches.forEach((match) => {\n\t\t\t\t\tconst controller = this.cursorsControllers.get(\n\t\t\t\t\t\tmatch.cellViewModel.uri,\n\t\t\t\t\t);\n\t\t\t\t\tif (!controller) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// this is used upon exiting the multicursor session to set the selections back to the correct cursor state\n\t\t\t\t\tmatch.initialSelection = controller.getSelection();\n\t\t\t\t\t// clear tracked selection data as it is invalid once typing begins\n\t\t\t\t\tmatch.wordSelections = [];\n\t\t\t\t});\n\n\t\t\t\tthis.updateLazyDecorations();\n\t\t\t}),\n\t\t);\n\n\t\t// arrow key navigation\n\t\tthis.anchorDisposables.add(\n\t\t\tthis.anchorCell[1].onDidChangeCursorSelection((e) => {\n\t\t\t\tif (e.source !== \"keyboard\") {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.trackedMatches.forEach((match) => {\n\t\t\t\t\tconst controller = this.cursorsControllers.get(\n\t\t\t\t\t\tmatch.cellViewModel.uri,\n\t\t\t\t\t);\n\t\t\t\t\tif (!controller) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcontroller.setSelections(\n\t\t\t\t\t\tnew ViewModelEventsCollector(),\n\t\t\t\t\t\te.source,\n\t\t\t\t\t\t[e.selection],\n\t\t\t\t\t\tCursorChangeReason.Explicit,\n\t\t\t\t\t);\n\t\t\t\t\tthis.updateLazyDecorations();\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\n\t\t// core actions\n\t\tthis.anchorDisposables.add(\n\t\t\tthis.anchorCell[1].onWillTriggerEditorOperationEvent((e) => {\n\t\t\t\tthis.trackedMatches.forEach((match) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tmatch.cellViewModel.handle ===\n\t\t\t\t\t\tthis.anchorCell?.[0].handle\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst eventsCollector = new ViewModelEventsCollector();\n\t\t\t\t\tconst controller = this.cursorsControllers.get(\n\t\t\t\t\t\tmatch.cellViewModel.uri,\n\t\t\t\t\t);\n\t\t\t\t\tif (!controller) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tswitch (e.handlerId) {\n\t\t\t\t\t\tcase Handler.CompositionStart:\n\t\t\t\t\t\t\tcontroller.startComposition(eventsCollector);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\tcase Handler.CompositionEnd:\n\t\t\t\t\t\t\tcontroller.endComposition(\n\t\t\t\t\t\t\t\teventsCollector,\n\t\t\t\t\t\t\t\te.source,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\tcase Handler.ReplacePreviousChar: {\n\t\t\t\t\t\t\tconst args = <Partial<ReplacePreviousCharPayload>>(\n\t\t\t\t\t\t\t\te.payload\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontroller.compositionType(\n\t\t\t\t\t\t\t\teventsCollector,\n\t\t\t\t\t\t\t\targs.text || \"\",\n\t\t\t\t\t\t\t\targs.replaceCharCnt || 0,\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\te.source,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase Handler.CompositionType: {\n\t\t\t\t\t\t\tconst args = <Partial<CompositionTypePayload>>(\n\t\t\t\t\t\t\t\te.payload\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontroller.compositionType(\n\t\t\t\t\t\t\t\teventsCollector,\n\t\t\t\t\t\t\t\targs.text || \"\",\n\t\t\t\t\t\t\t\targs.replacePrevCharCnt || 0,\n\t\t\t\t\t\t\t\targs.replaceNextCharCnt || 0,\n\t\t\t\t\t\t\t\targs.positionDelta || 0,\n\t\t\t\t\t\t\t\te.source,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase Handler.Paste: {\n\t\t\t\t\t\t\tconst args = <Partial<PastePayload>>e.payload;\n\t\t\t\t\t\t\tcontroller.paste(\n\t\t\t\t\t\t\t\teventsCollector,\n\t\t\t\t\t\t\t\targs.text || \"\",\n\t\t\t\t\t\t\t\targs.pasteOnNewLine || false,\n\t\t\t\t\t\t\t\targs.multicursorText || null,\n\t\t\t\t\t\t\t\te.source,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t\t// ! this code is for firing the paste event, not sure what that would enable, trace the event listener\n\t\t\t\t\t\t\t// const startPos = XYZ\n\t\t\t\t\t\t\t// const endPos = XYZ\n\t\t\t\t\t\t\t// if (source === 'keyboard') {\n\t\t\t\t\t\t\t// \tthis._onDidPaste.fire({\n\t\t\t\t\t\t\t// \t\tclipboardEvent,\n\t\t\t\t\t\t\t// \t\trange: new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column),\n\t\t\t\t\t\t\t// \t\tlanguageId: mode\n\t\t\t\t\t\t\t// \t});\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase Handler.Cut:\n\t\t\t\t\t\t\tcontroller.cut(eventsCollector, e.source);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\n\t\t// exit mode\n\t\tthis.anchorDisposables.add(\n\t\t\tthis.anchorCell[1].onDidChangeCursorSelection((e) => {\n\t\t\t\tif (e.source === \"mouse\" || e.source === \"deleteRight\") {\n\t\t\t\t\tthis.resetToIdleState();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis.anchorDisposables.add(\n\t\t\tthis.anchorCell[1].onDidBlurEditorWidget(() => {\n\t\t\t\tif (\n\t\t\t\t\tthis.state === NotebookMultiCursorState.Selecting ||\n\t\t\t\t\tthis.state === NotebookMultiCursorState.Editing\n\t\t\t\t) {\n\t\t\t\t\tthis.resetToIdleState();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate updateFinalUndoRedo() {\n\t\tconst anchorCellModel = this.anchorCell?.[1].getModel();\n\t\tif (!anchorCellModel) {\n\t\t\t// should not happen\n\t\t\treturn;\n\t\t}\n\n\t\tconst newElementsMap: ResourceMap<IUndoRedoElement[]> = new ResourceMap<\n\t\t\tIUndoRedoElement[]\n\t\t>();\n\t\tconst resources: URI[] = [];\n\n\t\tthis.trackedMatches.forEach((trackedMatch) => {\n\t\t\tconst undoRedoState = trackedMatch.undoRedoHistory;\n\t\t\tif (!undoRedoState) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresources.push(trackedMatch.cellViewModel.uri);\n\n\t\t\tconst currentPastElements = this.undoRedoService\n\t\t\t\t.getElements(trackedMatch.cellViewModel.uri)\n\t\t\t\t.past.slice();\n\t\t\tconst oldPastElements = trackedMatch.undoRedoHistory.past.slice();\n\t\t\tconst newElements = currentPastElements.slice(\n\t\t\t\toldPastElements.length,\n\t\t\t);\n\t\t\tif (newElements.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnewElementsMap.set(trackedMatch.cellViewModel.uri, newElements);\n\n\t\t\tthis.undoRedoService.removeElements(trackedMatch.cellViewModel.uri);\n\t\t\toldPastElements.forEach((element) => {\n\t\t\t\tthis.undoRedoService.pushElement(element);\n\t\t\t});\n\t\t});\n\n\t\tthis.undoRedoService.pushElement({\n\t\t\ttype: UndoRedoElementType.Workspace,\n\t\t\tresources: resources,\n\t\t\tlabel: \"Multi Cursor Edit\",\n\t\t\tcode: \"multiCursorEdit\",\n\t\t\tconfirmBeforeUndo: false,\n\t\t\tundo: async () => {\n\t\t\t\tnewElementsMap.forEach(async (value) => {\n\t\t\t\t\tvalue.reverse().forEach(async (element) => {\n\t\t\t\t\t\tawait element.undo();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t\tredo: async () => {\n\t\t\t\tnewElementsMap.forEach(async (value) => {\n\t\t\t\t\tvalue.forEach(async (element) => {\n\t\t\t\t\t\tawait element.redo();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic resetToIdleState() {\n\t\tthis.state = NotebookMultiCursorState.Idle;\n\t\tthis._nbMultiSelectState.set(NotebookMultiCursorState.Idle);\n\t\tthis._nbIsMultiSelectSession.set(false);\n\t\tthis.updateFinalUndoRedo();\n\n\t\tthis.trackedMatches.forEach((match) => {\n\t\t\tthis.clearDecorations(match);\n\t\t\tmatch.cellViewModel.setSelections([match.initialSelection]); // correct cursor placement upon exiting cmd-d session\n\t\t});\n\n\t\tthis.anchorDisposables.clear();\n\t\tthis.cursorsDisposables.clear();\n\t\tthis.cursorsControllers.clear();\n\t\tthis.trackedMatches = [];\n\t}\n\n\tpublic async findAndTrackNextSelection(\n\t\tcell: ICellViewModel,\n\t): Promise<void> {\n\t\tif (this.state === NotebookMultiCursorState.Idle) {\n\t\t\t// move cursor to end of the symbol + track it, transition to selecting state\n\t\t\tconst textModel = cell.textModel;\n\t\t\tif (!textModel) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst inputSelection = cell.getSelections()[0];\n\t\t\tconst word = this.getWord(inputSelection, textModel);\n\t\t\tif (!word) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.word = word.word;\n\n\t\t\tconst newSelection = new Selection(\n\t\t\t\tinputSelection.startLineNumber,\n\t\t\t\tword.startColumn,\n\t\t\t\tinputSelection.startLineNumber,\n\t\t\t\tword.endColumn,\n\t\t\t);\n\t\t\tcell.setSelections([newSelection]);\n\n\t\t\tthis.anchorCell = this.notebookEditor.activeCellAndCodeEditor;\n\t\t\tif (!this.anchorCell || this.anchorCell[0].handle !== cell.handle) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"Active cell is not the same as the cell passed as context\",\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (!(this.anchorCell[1] instanceof CodeEditorWidget)) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"Active cell is not an instance of CodeEditorWidget\",\n\t\t\t\t);\n\t\t\t}\n\n\t\t\ttextModel.pushStackElement();\n\n\t\t\tthis.trackedMatches = [];\n\t\t\tconst editorConfig = this.constructCellEditorOptions(\n\t\t\t\tthis.anchorCell[0],\n\t\t\t);\n\t\t\tconst newMatch: TrackedMatch = {\n\t\t\t\tcellViewModel: cell,\n\t\t\t\tinitialSelection: inputSelection,\n\t\t\t\twordSelections: [newSelection],\n\t\t\t\tconfig: editorConfig, // cache this in the match so we can create new cursors controllers with the correct language config\n\t\t\t\tdecorationIds: [],\n\t\t\t\tundoRedoHistory: this.undoRedoService.getElements(cell.uri),\n\t\t\t};\n\t\t\tthis.trackedMatches.push(newMatch);\n\n\t\t\tthis.initializeMultiSelectDecorations(newMatch);\n\t\t\tthis._nbIsMultiSelectSession.set(true);\n\t\t\tthis.state = NotebookMultiCursorState.Selecting;\n\t\t\tthis._nbMultiSelectState.set(NotebookMultiCursorState.Selecting);\n\t\t\tthis._onDidChangeAnchorCell.fire();\n\t\t} else if (this.state === NotebookMultiCursorState.Selecting) {\n\t\t\t// use the word we stored from idle state transition to find next match, track it\n\t\t\tconst notebookTextModel = this.notebookEditor.textModel;\n\t\t\tif (!notebookTextModel) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst index = this.notebookEditor.getCellIndex(cell);\n\t\t\tif (index === undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst findResult = notebookTextModel.findNextMatch(\n\t\t\t\tthis.word,\n\t\t\t\t{\n\t\t\t\t\tcellIndex: index,\n\t\t\t\t\tposition: cell\n\t\t\t\t\t\t.getSelections()\n\t\t\t\t\t\t[cell.getSelections().length - 1].getEndPosition(),\n\t\t\t\t},\n\t\t\t\tfalse,\n\t\t\t\ttrue,\n\t\t\t\tUSUAL_WORD_SEPARATORS, //! might want to get these from the editor config\n\t\t\t);\n\t\t\tif (!findResult) {\n\t\t\t\treturn; //todo: some sort of message to the user alerting them that there are no more matches? editor does not do this\n\t\t\t}\n\n\t\t\tconst resultCellViewModel = this.notebookEditor.getCellByHandle(\n\t\t\t\tfindResult.cell.handle,\n\t\t\t);\n\t\t\tif (!resultCellViewModel) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet newMatch: TrackedMatch;\n\t\t\tif (findResult.cell.handle !== cell.handle) {\n\t\t\t\t// result is in a different cell, move focus there and apply selection, then update anchor\n\t\t\t\tawait this.notebookEditor.revealRangeInViewAsync(\n\t\t\t\t\tresultCellViewModel,\n\t\t\t\t\tfindResult.match.range,\n\t\t\t\t);\n\t\t\t\tthis.notebookEditor.focusNotebookCell(\n\t\t\t\t\tresultCellViewModel,\n\t\t\t\t\t\"editor\",\n\t\t\t\t);\n\n\t\t\t\tconst initialSelection = resultCellViewModel.getSelections()[0];\n\t\t\t\tconst newSelection = Selection.fromRange(\n\t\t\t\t\tfindResult.match.range,\n\t\t\t\t\tSelectionDirection.LTR,\n\t\t\t\t);\n\t\t\t\tresultCellViewModel.setSelections([newSelection]);\n\n\t\t\t\tthis.anchorCell = this.notebookEditor.activeCellAndCodeEditor;\n\t\t\t\tif (\n\t\t\t\t\t!this.anchorCell ||\n\t\t\t\t\t!(this.anchorCell[1] instanceof CodeEditorWidget)\n\t\t\t\t) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\"Active cell is not an instance of CodeEditorWidget\",\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst textModel = await resultCellViewModel.resolveTextModel();\n\t\t\t\ttextModel.pushStackElement();\n\n\t\t\t\tnewMatch = {\n\t\t\t\t\tcellViewModel: resultCellViewModel,\n\t\t\t\t\tinitialSelection: initialSelection,\n\t\t\t\t\twordSelections: [newSelection],\n\t\t\t\t\tconfig: this.constructCellEditorOptions(this.anchorCell[0]),\n\t\t\t\t\tdecorationIds: [],\n\t\t\t\t\tundoRedoHistory: this.undoRedoService.getElements(\n\t\t\t\t\t\tresultCellViewModel.uri,\n\t\t\t\t\t),\n\t\t\t\t} satisfies TrackedMatch;\n\t\t\t\tthis.trackedMatches.push(newMatch);\n\n\t\t\t\tthis._onDidChangeAnchorCell.fire();\n\t\t\t} else {\n\t\t\t\t// match is in the same cell, find tracked entry, update and set selections\n\t\t\t\tnewMatch = this.trackedMatches.find(\n\t\t\t\t\t(match) =>\n\t\t\t\t\t\tmatch.cellViewModel.handle === findResult.cell.handle,\n\t\t\t\t)!;\n\t\t\t\tnewMatch.wordSelections.push(\n\t\t\t\t\tSelection.fromRange(\n\t\t\t\t\t\tfindResult.match.range,\n\t\t\t\t\t\tSelectionDirection.LTR,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tresultCellViewModel.setSelections(newMatch.wordSelections);\n\t\t\t}\n\n\t\t\tthis.initializeMultiSelectDecorations(newMatch);\n\t\t}\n\t}\n\n\tpublic async deleteLeft(): Promise<void> {\n\t\tthis.trackedMatches.forEach((match) => {\n\t\t\tconst controller = this.cursorsControllers.get(\n\t\t\t\tmatch.cellViewModel.uri,\n\t\t\t);\n\t\t\tif (!controller) {\n\t\t\t\t// should not happen\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst [, commands] = DeleteOperations.deleteLeft(\n\t\t\t\tcontroller.getPrevEditOperationType(),\n\t\t\t\tcontroller.context.cursorConfig,\n\t\t\t\tcontroller.context.model,\n\t\t\t\tcontroller.getSelections(),\n\t\t\t\tcontroller.getAutoClosedCharacters(),\n\t\t\t);\n\n\t\t\tconst delSelections = CommandExecutor.executeCommands(\n\t\t\t\tcontroller.context.model,\n\t\t\t\tcontroller.getSelections(),\n\t\t\t\tcommands,\n\t\t\t);\n\t\t\tif (!delSelections) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontroller.setSelections(\n\t\t\t\tnew ViewModelEventsCollector(),\n\t\t\t\tundefined,\n\t\t\t\tdelSelections,\n\t\t\t\tCursorChangeReason.Explicit,\n\t\t\t);\n\t\t});\n\t}\n\n\tasync undo() {\n\t\tconst models: ITextModel[] = [];\n\t\tfor (const match of this.trackedMatches) {\n\t\t\tconst model = await match.cellViewModel.resolveTextModel();\n\t\t\tif (model) {\n\t\t\t\tmodels.push(model);\n\t\t\t}\n\t\t}\n\n\t\tawait Promise.all(models.map((model) => model.undo()));\n\t}\n\n\tasync redo() {\n\t\tconst models: ITextModel[] = [];\n\t\tfor (const match of this.trackedMatches) {\n\t\t\tconst model = await match.cellViewModel.resolveTextModel();\n\t\t\tif (model) {\n\t\t\t\tmodels.push(model);\n\t\t\t}\n\t\t}\n\n\t\tawait Promise.all(models.map((model) => model.redo()));\n\t}\n\n\tprivate constructCellEditorOptions(\n\t\tcell: ICellViewModel,\n\t): EditorConfiguration {\n\t\tconst cellEditorOptions = new CellEditorOptions(\n\t\t\tthis.notebookEditor.getBaseCellEditorOptions(cell.language),\n\t\t\tthis.notebookEditor.notebookOptions,\n\t\t\tthis.configurationService,\n\t\t);\n\t\tconst options = cellEditorOptions.getUpdatedValue(\n\t\t\tcell.internalMetadata,\n\t\t\tcell.uri,\n\t\t);\n\t\treturn new EditorConfiguration(\n\t\t\tfalse,\n\t\t\tMenuId.EditorContent,\n\t\t\toptions,\n\t\t\tnull,\n\t\t\tthis.accessibilityService,\n\t\t);\n\t}\n\n\t/**\n\t * Updates the multicursor selection decorations for a specific matched cell\n\t *\n\t * @param match -- match object containing the viewmodel + selections\n\t */\n\tprivate initializeMultiSelectDecorations(match: TrackedMatch) {\n\t\tconst decorations: IModelDeltaDecoration[] = [];\n\n\t\tmatch.wordSelections.forEach((selection) => {\n\t\t\tdecorations.push({\n\t\t\t\trange: selection,\n\t\t\t\toptions: {\n\t\t\t\t\tdescription: \"\",\n\t\t\t\t\tclassName: \"nb-multicursor-selection\",\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\n\t\tmatch.decorationIds = match.cellViewModel.deltaModelDecorations(\n\t\t\tmatch.decorationIds,\n\t\t\tdecorations,\n\t\t);\n\t}\n\n\t//TODO: make sure nothing happens for the anchor cell ONCE THE DECORATIONS ARE PRETTY-IFIED\n\tprivate updateLazyDecorations() {\n\t\t// for every tracked match that is not in the visible range, dispose of their decorations and update them based off the cursorcontroller\n\t\tthis.trackedMatches.forEach((match) => {\n\t\t\tconst cellIndex = this.notebookEditor.getCellIndex(\n\t\t\t\tmatch.cellViewModel,\n\t\t\t);\n\t\t\tif (cellIndex === undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst controller = this.cursorsControllers.get(\n\t\t\t\tmatch.cellViewModel.uri,\n\t\t\t);\n\t\t\tif (!controller) {\n\t\t\t\t// should not happen\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst selections = controller.getSelections();\n\n\t\t\tconst newDecorations = selections?.map((selection) => {\n\t\t\t\treturn {\n\t\t\t\t\trange: selection,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tdescription: \"\",\n\t\t\t\t\t\tclassName: \"nb-multicursor-selection\",\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tmatch.decorationIds = match.cellViewModel.deltaModelDecorations(\n\t\t\t\tmatch.decorationIds,\n\t\t\t\tnewDecorations ?? [],\n\t\t\t);\n\t\t});\n\t}\n\n\tprivate clearDecorations(match: TrackedMatch) {\n\t\tmatch.decorationIds = match.cellViewModel.deltaModelDecorations(\n\t\t\tmatch.decorationIds,\n\t\t\t[],\n\t\t);\n\t}\n\n\tprivate getWord(\n\t\tselection: Selection,\n\t\tmodel: ITextModel,\n\t): IWordAtPosition | null {\n\t\tconst lineNumber = selection.startLineNumber;\n\t\tconst startColumn = selection.startColumn;\n\n\t\tif (model.isDisposed()) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn model.getWordAtPosition({\n\t\t\tlineNumber: lineNumber,\n\t\t\tcolumn: startColumn,\n\t\t});\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.anchorDisposables.dispose();\n\t\tthis.cursorsDisposables.dispose();\n\n\t\tthis.trackedMatches.forEach((match) => {\n\t\t\tthis.clearDecorations(match);\n\t\t});\n\t\tthis.trackedMatches = [];\n\t}\n}\n\nclass NotebookAddMatchToMultiSelectionAction extends NotebookAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: NOTEBOOK_ADD_FIND_MATCH_TO_SELECTION_ID,\n\t\t\ttitle: localize(\n\t\t\t\t\"addFindMatchToSelection\",\n\t\t\t\t\"Add Find Match to Selection\",\n\t\t\t),\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\"config.notebook.multiSelect.enabled\",\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t),\n\t\t\t\t\tNOTEBOOK_IS_ACTIVE_EDITOR,\n\t\t\t\t\tNOTEBOOK_CELL_EDITOR_FOCUSED,\n\t\t\t\t),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyD,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t},\n\t\t});\n\t}\n\n\toverride async runWithContext(\n\t\taccessor: ServicesAccessor,\n\t\tcontext: INotebookActionContext,\n\t): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editor = getNotebookEditorFromEditorPane(\n\t\t\teditorService.activeEditorPane,\n\t\t);\n\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!context.cell) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst controller =\n\t\t\teditor.getContribution<NotebookMultiCursorController>(\n\t\t\t\tNotebookMultiCursorController.id,\n\t\t\t);\n\t\tcontroller.findAndTrackNextSelection(context.cell);\n\t}\n}\n\nclass NotebookExitMultiSelectionAction extends NotebookAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"noteMultiCursor.exit\",\n\t\t\ttitle: localize(\"exitMultiSelection\", \"Exit Multi Cursor Mode\"),\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\"config.notebook.multiSelect.enabled\",\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t),\n\t\t\t\t\tNOTEBOOK_IS_ACTIVE_EDITOR,\n\t\t\t\t\tNOTEBOOK_MULTI_SELECTION_CONTEXT.IsNotebookMultiSelect,\n\t\t\t\t),\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t},\n\t\t});\n\t}\n\n\toverride async runWithContext(\n\t\taccessor: ServicesAccessor,\n\t\tcontext: INotebookActionContext,\n\t): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editor = getNotebookEditorFromEditorPane(\n\t\t\teditorService.activeEditorPane,\n\t\t);\n\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst controller =\n\t\t\teditor.getContribution<NotebookMultiCursorController>(\n\t\t\t\tNotebookMultiCursorController.id,\n\t\t\t);\n\t\tcontroller.resetToIdleState();\n\t}\n}\n\nclass NotebookDeleteLeftMultiSelectionAction extends NotebookAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"noteMultiCursor.deleteLeft\",\n\t\t\ttitle: localize(\"deleteLeftMultiSelection\", \"Delete Left\"),\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\"config.notebook.multiSelect.enabled\",\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t),\n\t\t\t\t\tNOTEBOOK_IS_ACTIVE_EDITOR,\n\t\t\t\t\tNOTEBOOK_MULTI_SELECTION_CONTEXT.IsNotebookMultiSelect,\n\t\t\t\t\tContextKeyExpr.or(\n\t\t\t\t\t\tNOTEBOOK_MULTI_SELECTION_CONTEXT.NotebookMultiSelectState.isEqualTo(\n\t\t\t\t\t\t\tNotebookMultiCursorState.Selecting,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tNOTEBOOK_MULTI_SELECTION_CONTEXT.NotebookMultiSelectState.isEqualTo(\n\t\t\t\t\t\t\tNotebookMultiCursorState.Editing,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tprimary: KeyCode.Backspace,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t},\n\t\t});\n\t}\n\n\toverride async runWithContext(\n\t\taccessor: ServicesAccessor,\n\t\tcontext: INotebookActionContext,\n\t): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editor = getNotebookEditorFromEditorPane(\n\t\t\teditorService.activeEditorPane,\n\t\t);\n\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst controller =\n\t\t\teditor.getContribution<NotebookMultiCursorController>(\n\t\t\t\tNotebookMultiCursorController.id,\n\t\t\t);\n\t\tcontroller.deleteLeft();\n\t}\n}\n\nclass NotebookMultiCursorUndoRedoContribution extends Disposable {\n\tstatic readonly ID = \"workbench.contrib.notebook.multiCursorUndoRedo\";\n\n\tconstructor(\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IConfigurationService\n\t\tprivate readonly configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\n\t\tif (\n\t\t\t!this.configurationService.getValue<boolean>(\n\t\t\t\t\"notebook.multiSelect.enabled\",\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst PRIORITY = 10005;\n\t\tthis._register(\n\t\t\tUndoCommand.addImplementation(\n\t\t\t\tPRIORITY,\n\t\t\t\t\"notebook-multicursor-undo-redo\",\n\t\t\t\t() => {\n\t\t\t\t\tconst editor = getNotebookEditorFromEditorPane(\n\t\t\t\t\t\tthis._editorService.activeEditorPane,\n\t\t\t\t\t);\n\t\t\t\t\tif (!editor) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!editor.hasModel()) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst controller =\n\t\t\t\t\t\teditor.getContribution<NotebookMultiCursorController>(\n\t\t\t\t\t\t\tNotebookMultiCursorController.id,\n\t\t\t\t\t\t);\n\n\t\t\t\t\treturn controller.undo();\n\t\t\t\t},\n\t\t\t\tContextKeyExpr.and(\n\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\"config.notebook.multiSelect.enabled\",\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t),\n\t\t\t\t\tNOTEBOOK_IS_ACTIVE_EDITOR,\n\t\t\t\t\tNOTEBOOK_MULTI_SELECTION_CONTEXT.IsNotebookMultiSelect,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tRedoCommand.addImplementation(\n\t\t\t\tPRIORITY,\n\t\t\t\t\"notebook-multicursor-undo-redo\",\n\t\t\t\t() => {\n\t\t\t\t\tconst editor = getNotebookEditorFromEditorPane(\n\t\t\t\t\t\tthis._editorService.activeEditorPane,\n\t\t\t\t\t);\n\t\t\t\t\tif (!editor) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!editor.hasModel()) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst controller =\n\t\t\t\t\t\teditor.getContribution<NotebookMultiCursorController>(\n\t\t\t\t\t\t\tNotebookMultiCursorController.id,\n\t\t\t\t\t\t);\n\t\t\t\t\treturn controller.redo();\n\t\t\t\t},\n\t\t\t\tContextKeyExpr.and(\n\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\"config.notebook.multiSelect.enabled\",\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t),\n\t\t\t\t\tNOTEBOOK_IS_ACTIVE_EDITOR,\n\t\t\t\t\tNOTEBOOK_MULTI_SELECTION_CONTEXT.IsNotebookMultiSelect,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t}\n}\n\nregisterNotebookContribution(\n\tNotebookMultiCursorController.id,\n\tNotebookMultiCursorController,\n);\nregisterAction2(NotebookAddMatchToMultiSelectionAction);\nregisterAction2(NotebookExitMultiSelectionAction);\nregisterAction2(NotebookDeleteLeftMultiSelectionAction);\nregisterWorkbenchContribution2(\n\tNotebookMultiCursorUndoRedoContribution.ID,\n\tNotebookMultiCursorUndoRedoContribution,\n\tWorkbenchPhase.BlockRestore,\n);\n"],
  "mappings": "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",
  "names": ["NotebookMultiCursorState"]
}
