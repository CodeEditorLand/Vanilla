{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/controller/editActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from \"../../../../../base/common/keyCodes.js\";\nimport { Mimes } from \"../../../../../base/common/mime.js\";\nimport { URI } from \"../../../../../base/common/uri.js\";\nimport type { ICodeEditor } from \"../../../../../editor/browser/editorBrowser.js\";\nimport { Selection } from \"../../../../../editor/common/core/selection.js\";\nimport { CommandExecutor } from \"../../../../../editor/common/cursor/cursor.js\";\nimport { EditorContextKeys } from \"../../../../../editor/common/editorContextKeys.js\";\nimport { ILanguageService } from \"../../../../../editor/common/languages/language.js\";\nimport { ILanguageConfigurationService } from \"../../../../../editor/common/languages/languageConfigurationRegistry.js\";\nimport { TrackedRangeStickiness } from \"../../../../../editor/common/model.js\";\nimport { getIconClasses } from \"../../../../../editor/common/services/getIconClasses.js\";\nimport { IModelService } from \"../../../../../editor/common/services/model.js\";\nimport {\n\tLineCommentCommand,\n\tType,\n} from \"../../../../../editor/contrib/comment/browser/lineCommentCommand.js\";\nimport { localize, localize2 } from \"../../../../../nls.js\";\nimport {\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../../platform/configuration/common/configuration.js\";\nimport { ContextKeyExpr } from \"../../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tInputFocusedContext,\n\tInputFocusedContextKey,\n} from \"../../../../../platform/contextkey/common/contextkeys.js\";\nimport {\n\ttype IConfirmationResult,\n\tIDialogService,\n} from \"../../../../../platform/dialogs/common/dialogs.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { INotificationService } from \"../../../../../platform/notification/common/notification.js\";\nimport {\n\tIQuickInputService,\n\ttype IQuickPickItem,\n\ttype QuickPickInput,\n} from \"../../../../../platform/quickinput/common/quickInput.js\";\nimport { IEditorService } from \"../../../../services/editor/common/editorService.js\";\nimport { ILanguageDetectionService } from \"../../../../services/languageDetection/common/languageDetectionWorkerService.js\";\nimport { InlineChatController } from \"../../../inlineChat/browser/inlineChatController.js\";\nimport { CTX_INLINE_CHAT_FOCUSED } from \"../../../inlineChat/common/inlineChat.js\";\nimport {\n\tCellEditType,\n\tCellKind,\n\ttype ICellEditOperation,\n\tNotebookCellExecutionState,\n\tNotebookSetting,\n} from \"../../common/notebookCommon.js\";\nimport {\n\tNOTEBOOK_CELL_EDITABLE,\n\tNOTEBOOK_CELL_HAS_OUTPUTS,\n\tNOTEBOOK_CELL_IS_FIRST_OUTPUT,\n\tNOTEBOOK_CELL_LIST_FOCUSED,\n\tNOTEBOOK_CELL_MARKDOWN_EDIT_MODE,\n\tNOTEBOOK_CELL_TYPE,\n\tNOTEBOOK_EDITOR_EDITABLE,\n\tNOTEBOOK_EDITOR_FOCUSED,\n\tNOTEBOOK_HAS_OUTPUTS,\n\tNOTEBOOK_IS_ACTIVE_EDITOR,\n\tNOTEBOOK_OUTPUT_FOCUSED,\n\tNOTEBOOK_OUTPUT_INPUT_FOCUSED,\n\tNOTEBOOK_USE_CONSOLIDATED_OUTPUT_BUTTON,\n} from \"../../common/notebookContextKeys.js\";\nimport { INotebookExecutionStateService } from \"../../common/notebookExecutionStateService.js\";\nimport { INotebookKernelService } from \"../../common/notebookKernelService.js\";\nimport type { ICellRange } from \"../../common/notebookRange.js\";\nimport {\n\tCHANGE_CELL_LANGUAGE,\n\tCellEditState,\n\tDETECT_CELL_LANGUAGE,\n\tQUIT_EDIT_CELL_COMMAND_ID,\n\tgetNotebookEditorFromEditorPane,\n} from \"../notebookBrowser.js\";\nimport * as icons from \"../notebookIcons.js\";\nimport { changeCellToKind, runDeleteAction } from \"./cellOperations.js\";\nimport {\n\tCELL_TITLE_CELL_GROUP_ID,\n\tCELL_TITLE_OUTPUT_GROUP_ID,\n\tCellToolbarOrder,\n\ttype INotebookActionContext,\n\ttype INotebookCellActionContext,\n\ttype INotebookCommandContext,\n\tNOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT,\n\tNotebookAction,\n\tNotebookCellAction,\n\tNotebookMultiCellAction,\n\texecuteNotebookCondition,\n\tfindTargetCellEditor,\n} from \"./coreActions.js\";\nimport {\n\tNotebookChangeTabDisplaySize,\n\tNotebookIndentUsingSpaces,\n\tNotebookIndentUsingTabs,\n\tNotebookIndentationToSpacesAction,\n\tNotebookIndentationToTabsAction,\n} from \"./notebookIndentationActions.js\";\n\nconst CLEAR_ALL_CELLS_OUTPUTS_COMMAND_ID = \"notebook.clearAllCellsOutputs\";\nconst EDIT_CELL_COMMAND_ID = \"notebook.cell.edit\";\nconst DELETE_CELL_COMMAND_ID = \"notebook.cell.delete\";\nexport const CLEAR_CELL_OUTPUTS_COMMAND_ID = \"notebook.cell.clearOutputs\";\nexport const SELECT_NOTEBOOK_INDENTATION_ID = \"notebook.selectIndentation\";\nexport const COMMENT_SELECTED_CELLS_ID = \"notebook.commentSelectedCells\";\n\nregisterAction2(\n\tclass EditCellAction extends NotebookCellAction {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: EDIT_CELL_COMMAND_ID,\n\t\t\t\ttitle: localize(\"notebookActions.editCell\", \"Edit Cell\"),\n\t\t\t\tkeybinding: {\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tNOTEBOOK_CELL_LIST_FOCUSED,\n\t\t\t\t\t\tContextKeyExpr.not(InputFocusedContextKey),\n\t\t\t\t\t\tNOTEBOOK_EDITOR_EDITABLE.isEqualTo(true),\n\t\t\t\t\t\tEditorContextKeys.hoverFocused.toNegated(),\n\t\t\t\t\t\tNOTEBOOK_OUTPUT_INPUT_FOCUSED.toNegated(),\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyCode.Enter,\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t},\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tNOTEBOOK_EDITOR_EDITABLE.isEqualTo(true),\n\t\t\t\t\t\tNOTEBOOK_CELL_TYPE.isEqualTo(\"markup\"),\n\t\t\t\t\t\tNOTEBOOK_CELL_MARKDOWN_EDIT_MODE.toNegated(),\n\t\t\t\t\t\tNOTEBOOK_CELL_EDITABLE,\n\t\t\t\t\t),\n\t\t\t\t\torder: CellToolbarOrder.EditCell,\n\t\t\t\t\tgroup: CELL_TITLE_CELL_GROUP_ID,\n\t\t\t\t},\n\t\t\t\ticon: icons.editIcon,\n\t\t\t});\n\t\t}\n\n\t\tasync runWithContext(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tcontext: INotebookCellActionContext,\n\t\t): Promise<void> {\n\t\t\tif (\n\t\t\t\t!context.notebookEditor.hasModel() ||\n\t\t\t\tcontext.notebookEditor.isReadOnly\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait context.notebookEditor.focusNotebookCell(\n\t\t\t\tcontext.cell,\n\t\t\t\t\"editor\",\n\t\t\t);\n\t\t\tconst foundEditor: ICodeEditor | undefined = context.cell\n\t\t\t\t? findTargetCellEditor(context, context.cell)\n\t\t\t\t: undefined;\n\t\t\tif (\n\t\t\t\tfoundEditor &&\n\t\t\t\tfoundEditor.hasTextFocus() &&\n\t\t\t\tInlineChatController.get(foundEditor)?.getWidgetPosition()\n\t\t\t\t\t?.lineNumber === foundEditor.getPosition()?.lineNumber\n\t\t\t) {\n\t\t\t\tInlineChatController.get(foundEditor)?.focus();\n\t\t\t}\n\t\t}\n\t},\n);\n\nconst quitEditCondition = ContextKeyExpr.and(\n\tNOTEBOOK_EDITOR_FOCUSED,\n\tInputFocusedContext,\n\tCTX_INLINE_CHAT_FOCUSED.toNegated(),\n);\nregisterAction2(\n\tclass QuitEditCellAction extends NotebookCellAction {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: QUIT_EDIT_CELL_COMMAND_ID,\n\t\t\t\ttitle: localize(\n\t\t\t\t\t\"notebookActions.quitEdit\",\n\t\t\t\t\t\"Stop Editing Cell\",\n\t\t\t\t),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tNOTEBOOK_CELL_TYPE.isEqualTo(\"markup\"),\n\t\t\t\t\t\tNOTEBOOK_CELL_MARKDOWN_EDIT_MODE,\n\t\t\t\t\t\tNOTEBOOK_CELL_EDITABLE,\n\t\t\t\t\t),\n\t\t\t\t\torder: CellToolbarOrder.SaveCell,\n\t\t\t\t\tgroup: CELL_TITLE_CELL_GROUP_ID,\n\t\t\t\t},\n\t\t\t\ticon: icons.stopEditIcon,\n\t\t\t\tkeybinding: [\n\t\t\t\t\t{\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tquitEditCondition,\n\t\t\t\t\t\t\tEditorContextKeys.hoverVisible.toNegated(),\n\t\t\t\t\t\t\tEditorContextKeys.hasNonEmptySelection.toNegated(),\n\t\t\t\t\t\t\tEditorContextKeys.hasMultipleSelections.toNegated(),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\t\t\tweight: NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT - 5,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tNOTEBOOK_EDITOR_FOCUSED,\n\t\t\t\t\t\t\tNOTEBOOK_OUTPUT_FOCUSED,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib + 5,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tquitEditCondition,\n\t\t\t\t\t\t\tNOTEBOOK_CELL_TYPE.isEqualTo(\"markup\"),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tprimary: KeyMod.WinCtrl | KeyCode.Enter,\n\t\t\t\t\t\twin: {\n\t\t\t\t\t\t\tprimary:\n\t\t\t\t\t\t\t\tKeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Enter,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tweight: NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT - 5,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\tasync runWithContext(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tcontext: INotebookCellActionContext,\n\t\t) {\n\t\t\tif (context.cell.cellKind === CellKind.Markup) {\n\t\t\t\tcontext.cell.updateEditState(\n\t\t\t\t\tCellEditState.Preview,\n\t\t\t\t\tQUIT_EDIT_CELL_COMMAND_ID,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tawait context.notebookEditor.focusNotebookCell(\n\t\t\t\tcontext.cell,\n\t\t\t\t\"container\",\n\t\t\t\t{ skipReveal: true },\n\t\t\t);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass DeleteCellAction extends NotebookCellAction {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: DELETE_CELL_COMMAND_ID,\n\t\t\t\ttitle: localize(\"notebookActions.deleteCell\", \"Delete Cell\"),\n\t\t\t\tkeybinding: {\n\t\t\t\t\tprimary: KeyCode.Delete,\n\t\t\t\t\tmac: {\n\t\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Backspace,\n\t\t\t\t\t},\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tNOTEBOOK_EDITOR_FOCUSED,\n\t\t\t\t\t\tContextKeyExpr.not(InputFocusedContextKey),\n\t\t\t\t\t\tNOTEBOOK_OUTPUT_INPUT_FOCUSED.toNegated(),\n\t\t\t\t\t),\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t},\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.NotebookCellDelete,\n\t\t\t\t\t\twhen: NOTEBOOK_EDITOR_EDITABLE,\n\t\t\t\t\t\tgroup: CELL_TITLE_CELL_GROUP_ID,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.InteractiveCellDelete,\n\t\t\t\t\t\tgroup: CELL_TITLE_CELL_GROUP_ID,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\ticon: icons.deleteCellIcon,\n\t\t\t});\n\t\t}\n\n\t\tasync runWithContext(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tcontext: INotebookCellActionContext,\n\t\t) {\n\t\t\tif (!context.notebookEditor.hasModel()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet confirmation: IConfirmationResult;\n\t\t\tconst notebookExecutionStateService = accessor.get(\n\t\t\t\tINotebookExecutionStateService,\n\t\t\t);\n\t\t\tconst runState = notebookExecutionStateService.getCellExecution(\n\t\t\t\tcontext.cell.uri,\n\t\t\t)?.state;\n\t\t\tconst configService = accessor.get(IConfigurationService);\n\n\t\t\tif (\n\t\t\t\trunState === NotebookCellExecutionState.Executing &&\n\t\t\t\tconfigService.getValue(NotebookSetting.confirmDeleteRunningCell)\n\t\t\t) {\n\t\t\t\tconst dialogService = accessor.get(IDialogService);\n\t\t\t\tconst primaryButton = localize(\"confirmDeleteButton\", \"Delete\");\n\n\t\t\t\tconfirmation = await dialogService.confirm({\n\t\t\t\t\ttype: \"question\",\n\t\t\t\t\tmessage: localize(\n\t\t\t\t\t\t\"confirmDeleteButtonMessage\",\n\t\t\t\t\t\t\"This cell is running, are you sure you want to delete it?\",\n\t\t\t\t\t),\n\t\t\t\t\tprimaryButton: primaryButton,\n\t\t\t\t\tcheckbox: {\n\t\t\t\t\t\tlabel: localize(\"doNotAskAgain\", \"Do not ask me again\"),\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconfirmation = { confirmed: true };\n\t\t\t}\n\n\t\t\tif (!confirmation.confirmed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (confirmation.checkboxChecked === true) {\n\t\t\t\tawait configService.updateValue(\n\t\t\t\t\tNotebookSetting.confirmDeleteRunningCell,\n\t\t\t\t\tfalse,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\trunDeleteAction(context.notebookEditor, context.cell);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass ClearCellOutputsAction extends NotebookCellAction {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: CLEAR_CELL_OUTPUTS_COMMAND_ID,\n\t\t\t\ttitle: localize(\"clearCellOutputs\", \"Clear Cell Outputs\"),\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tNOTEBOOK_CELL_TYPE.isEqualTo(\"code\"),\n\t\t\t\t\t\t\texecuteNotebookCondition,\n\t\t\t\t\t\t\tNOTEBOOK_CELL_HAS_OUTPUTS,\n\t\t\t\t\t\t\tNOTEBOOK_EDITOR_EDITABLE,\n\t\t\t\t\t\t\tNOTEBOOK_CELL_EDITABLE,\n\t\t\t\t\t\t\tNOTEBOOK_USE_CONSOLIDATED_OUTPUT_BUTTON.toNegated(),\n\t\t\t\t\t\t),\n\t\t\t\t\t\torder: CellToolbarOrder.ClearCellOutput,\n\t\t\t\t\t\tgroup: CELL_TITLE_OUTPUT_GROUP_ID,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.NotebookOutputToolbar,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tNOTEBOOK_CELL_HAS_OUTPUTS,\n\t\t\t\t\t\t\tNOTEBOOK_EDITOR_EDITABLE,\n\t\t\t\t\t\t\tNOTEBOOK_CELL_EDITABLE,\n\t\t\t\t\t\t\tNOTEBOOK_CELL_IS_FIRST_OUTPUT,\n\t\t\t\t\t\t\tNOTEBOOK_USE_CONSOLIDATED_OUTPUT_BUTTON,\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tkeybinding: {\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tNOTEBOOK_EDITOR_FOCUSED,\n\t\t\t\t\t\tContextKeyExpr.not(InputFocusedContextKey),\n\t\t\t\t\t\tNOTEBOOK_CELL_HAS_OUTPUTS,\n\t\t\t\t\t\tNOTEBOOK_EDITOR_EDITABLE,\n\t\t\t\t\t\tNOTEBOOK_CELL_EDITABLE,\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyMod.Alt | KeyCode.Delete,\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t},\n\t\t\t\ticon: icons.clearIcon,\n\t\t\t});\n\t\t}\n\n\t\tasync runWithContext(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tcontext: INotebookCellActionContext,\n\t\t): Promise<void> {\n\t\t\tconst notebookExecutionStateService = accessor.get(\n\t\t\t\tINotebookExecutionStateService,\n\t\t\t);\n\t\t\tconst editor = context.notebookEditor;\n\t\t\tif (!editor.hasModel() || !editor.textModel.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst cell = context.cell;\n\t\t\tconst index = editor.textModel.cells.indexOf(cell.model);\n\n\t\t\tif (index < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst computeUndoRedo = !editor.isReadOnly;\n\t\t\teditor.textModel.applyEdits(\n\t\t\t\t[{ editType: CellEditType.Output, index, outputs: [] }],\n\t\t\t\ttrue,\n\t\t\t\tundefined,\n\t\t\t\t() => undefined,\n\t\t\t\tundefined,\n\t\t\t\tcomputeUndoRedo,\n\t\t\t);\n\n\t\t\tconst runState = notebookExecutionStateService.getCellExecution(\n\t\t\t\tcontext.cell.uri,\n\t\t\t)?.state;\n\t\t\tif (runState !== NotebookCellExecutionState.Executing) {\n\t\t\t\tcontext.notebookEditor.textModel.applyEdits(\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\teditType: CellEditType.PartialInternalMetadata,\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\tinternalMetadata: {\n\t\t\t\t\t\t\t\trunStartTime: null,\n\t\t\t\t\t\t\t\trunStartTimeAdjustment: null,\n\t\t\t\t\t\t\t\trunEndTime: null,\n\t\t\t\t\t\t\t\texecutionOrder: null,\n\t\t\t\t\t\t\t\tlastRunSuccess: null,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\ttrue,\n\t\t\t\t\tundefined,\n\t\t\t\t\t() => undefined,\n\t\t\t\t\tundefined,\n\t\t\t\t\tcomputeUndoRedo,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass ClearAllCellOutputsAction extends NotebookAction {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: CLEAR_ALL_CELLS_OUTPUTS_COMMAND_ID,\n\t\t\t\ttitle: localize(\"clearAllCellsOutputs\", \"Clear All Outputs\"),\n\t\t\t\tprecondition: NOTEBOOK_HAS_OUTPUTS,\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tNOTEBOOK_IS_ACTIVE_EDITOR,\n\t\t\t\t\t\t\tContextKeyExpr.notEquals(\n\t\t\t\t\t\t\t\t\"config.notebook.globalToolbar\",\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\torder: 0,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.NotebookToolbar,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\texecuteNotebookCondition,\n\t\t\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\t\t\"config.notebook.globalToolbar\",\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tgroup: \"navigation/execute\",\n\t\t\t\t\t\torder: 10,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\ticon: icons.clearIcon,\n\t\t\t});\n\t\t}\n\n\t\tasync runWithContext(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tcontext: INotebookActionContext,\n\t\t): Promise<void> {\n\t\t\tconst notebookExecutionStateService = accessor.get(\n\t\t\t\tINotebookExecutionStateService,\n\t\t\t);\n\t\t\tconst editor = context.notebookEditor;\n\t\t\tif (!editor.hasModel() || !editor.textModel.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst computeUndoRedo = !editor.isReadOnly;\n\t\t\teditor.textModel.applyEdits(\n\t\t\t\teditor.textModel.cells.map((cell, index) => ({\n\t\t\t\t\teditType: CellEditType.Output,\n\t\t\t\t\tindex,\n\t\t\t\t\toutputs: [],\n\t\t\t\t})),\n\t\t\t\ttrue,\n\t\t\t\tundefined,\n\t\t\t\t() => undefined,\n\t\t\t\tundefined,\n\t\t\t\tcomputeUndoRedo,\n\t\t\t);\n\n\t\t\tconst clearExecutionMetadataEdits = editor.textModel.cells\n\t\t\t\t.map((cell, index) => {\n\t\t\t\t\tconst runState =\n\t\t\t\t\t\tnotebookExecutionStateService.getCellExecution(\n\t\t\t\t\t\t\tcell.uri,\n\t\t\t\t\t\t)?.state;\n\t\t\t\t\tif (runState !== NotebookCellExecutionState.Executing) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\teditType: CellEditType.PartialInternalMetadata,\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\tinternalMetadata: {\n\t\t\t\t\t\t\t\trunStartTime: null,\n\t\t\t\t\t\t\t\trunStartTimeAdjustment: null,\n\t\t\t\t\t\t\t\trunEndTime: null,\n\t\t\t\t\t\t\t\texecutionOrder: null,\n\t\t\t\t\t\t\t\tlastRunSuccess: null,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.filter((edit) => !!edit) as ICellEditOperation[];\n\t\t\tif (clearExecutionMetadataEdits.length) {\n\t\t\t\tcontext.notebookEditor.textModel.applyEdits(\n\t\t\t\t\tclearExecutionMetadataEdits,\n\t\t\t\t\ttrue,\n\t\t\t\t\tundefined,\n\t\t\t\t\t() => undefined,\n\t\t\t\t\tundefined,\n\t\t\t\t\tcomputeUndoRedo,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n);\n\ninterface ILanguagePickInput extends IQuickPickItem {\n\tlanguageId: string;\n\tdescription: string;\n}\n\ninterface IChangeCellContext extends INotebookCellActionContext {\n\t// TODO@rebornix : `cells`\n\t// range: ICellRange;\n\tlanguage?: string;\n}\n\nregisterAction2(\n\tclass ChangeCellLanguageAction extends NotebookCellAction<ICellRange> {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: CHANGE_CELL_LANGUAGE,\n\t\t\t\ttitle: localize(\"changeLanguage\", \"Change Cell Language\"),\n\t\t\t\tmetadata: {\n\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\"changeLanguage\",\n\t\t\t\t\t\t\"Change Cell Language\",\n\t\t\t\t\t),\n\t\t\t\t\targs: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"range\",\n\t\t\t\t\t\t\tdescription: \"The cell range\",\n\t\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\t\t\trequired: [\"start\", \"end\"],\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tstart: {\n\t\t\t\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tend: {\n\t\t\t\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"language\",\n\t\t\t\t\t\t\tdescription: \"The target cell language\",\n\t\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tprotected override getCellContextFromArgs(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tcontext?: ICellRange,\n\t\t\t...additionalArgs: any[]\n\t\t): IChangeCellContext | undefined {\n\t\t\tif (\n\t\t\t\t!context ||\n\t\t\t\ttypeof context.start !== \"number\" ||\n\t\t\t\ttypeof context.end !== \"number\" ||\n\t\t\t\tcontext.start >= context.end\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst language =\n\t\t\t\tadditionalArgs.length && typeof additionalArgs[0] === \"string\"\n\t\t\t\t\t? additionalArgs[0]\n\t\t\t\t\t: undefined;\n\t\t\tconst activeEditorContext =\n\t\t\t\tthis.getEditorContextFromArgsOrActive(accessor);\n\n\t\t\tif (\n\t\t\t\t!activeEditorContext ||\n\t\t\t\t!activeEditorContext.notebookEditor.hasModel() ||\n\t\t\t\tcontext.start >= activeEditorContext.notebookEditor.getLength()\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// TODO@rebornix, support multiple cells\n\t\t\treturn {\n\t\t\t\tnotebookEditor: activeEditorContext.notebookEditor,\n\t\t\t\tcell: activeEditorContext.notebookEditor.cellAt(context.start)!,\n\t\t\t\tlanguage,\n\t\t\t};\n\t\t}\n\n\t\tasync runWithContext(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tcontext: IChangeCellContext,\n\t\t): Promise<void> {\n\t\t\tif (context.language) {\n\t\t\t\tawait this.setLanguage(context, context.language);\n\t\t\t} else {\n\t\t\t\tawait this.showLanguagePicker(accessor, context);\n\t\t\t}\n\t\t}\n\n\t\tprivate async showLanguagePicker(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tcontext: IChangeCellContext,\n\t\t) {\n\t\t\tconst topItems: ILanguagePickInput[] = [];\n\t\t\tconst mainItems: ILanguagePickInput[] = [];\n\n\t\t\tconst languageService = accessor.get(ILanguageService);\n\t\t\tconst modelService = accessor.get(IModelService);\n\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\tconst languageDetectionService = accessor.get(\n\t\t\t\tILanguageDetectionService,\n\t\t\t);\n\t\t\tconst kernelService = accessor.get(INotebookKernelService);\n\n\t\t\tlet languages =\n\t\t\t\tcontext.notebookEditor.activeKernel?.supportedLanguages;\n\t\t\tif (!languages) {\n\t\t\t\tconst matchResult = kernelService.getMatchingKernel(\n\t\t\t\t\tcontext.notebookEditor.textModel,\n\t\t\t\t);\n\t\t\t\tconst allSupportedLanguages = matchResult.all.flatMap(\n\t\t\t\t\t(kernel) => kernel.supportedLanguages,\n\t\t\t\t);\n\t\t\t\tlanguages =\n\t\t\t\t\tallSupportedLanguages.length > 0\n\t\t\t\t\t\t? allSupportedLanguages\n\t\t\t\t\t\t: languageService.getRegisteredLanguageIds();\n\t\t\t}\n\n\t\t\tconst providerLanguages = new Set([...languages, \"markdown\"]);\n\n\t\t\tproviderLanguages.forEach((languageId) => {\n\t\t\t\tlet description: string;\n\t\t\t\tif (\n\t\t\t\t\tcontext.cell.cellKind === CellKind.Markup\n\t\t\t\t\t\t? languageId === \"markdown\"\n\t\t\t\t\t\t: languageId === context.cell.language\n\t\t\t\t) {\n\t\t\t\t\tdescription = localize(\n\t\t\t\t\t\t\"languageDescription\",\n\t\t\t\t\t\t\"({0}) - Current Language\",\n\t\t\t\t\t\tlanguageId,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tdescription = localize(\n\t\t\t\t\t\t\"languageDescriptionConfigured\",\n\t\t\t\t\t\t\"({0})\",\n\t\t\t\t\t\tlanguageId,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst languageName =\n\t\t\t\t\tlanguageService.getLanguageName(languageId);\n\t\t\t\tif (!languageName) {\n\t\t\t\t\t// Notebook has unrecognized language\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst item: ILanguagePickInput = {\n\t\t\t\t\tlabel: languageName,\n\t\t\t\t\ticonClasses: getIconClasses(\n\t\t\t\t\t\tmodelService,\n\t\t\t\t\t\tlanguageService,\n\t\t\t\t\t\tthis.getFakeResource(languageName, languageService),\n\t\t\t\t\t),\n\t\t\t\t\tdescription,\n\t\t\t\t\tlanguageId,\n\t\t\t\t};\n\n\t\t\t\tif (\n\t\t\t\t\tlanguageId === \"markdown\" ||\n\t\t\t\t\tlanguageId === context.cell.language\n\t\t\t\t) {\n\t\t\t\t\ttopItems.push(item);\n\t\t\t\t} else {\n\t\t\t\t\tmainItems.push(item);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmainItems.sort((a, b) => {\n\t\t\t\treturn a.description.localeCompare(b.description);\n\t\t\t});\n\n\t\t\t// Offer to \"Auto Detect\"\n\t\t\tconst autoDetectMode: IQuickPickItem = {\n\t\t\t\tlabel: localize(\"autoDetect\", \"Auto Detect\"),\n\t\t\t};\n\n\t\t\tconst picks: QuickPickInput[] = [\n\t\t\t\tautoDetectMode,\n\t\t\t\t{\n\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\tlabel: localize(\"languagesPicks\", \"languages (identifier)\"),\n\t\t\t\t},\n\t\t\t\t...topItems,\n\t\t\t\t{ type: \"separator\" },\n\t\t\t\t...mainItems,\n\t\t\t];\n\n\t\t\tconst selection = await quickInputService.pick(picks, {\n\t\t\t\tplaceHolder: localize(\n\t\t\t\t\t\"pickLanguageToConfigure\",\n\t\t\t\t\t\"Select Language Mode\",\n\t\t\t\t),\n\t\t\t});\n\t\t\tconst languageId =\n\t\t\t\tselection === autoDetectMode\n\t\t\t\t\t? await languageDetectionService.detectLanguage(\n\t\t\t\t\t\t\tcontext.cell.uri,\n\t\t\t\t\t\t)\n\t\t\t\t\t: (selection as ILanguagePickInput)?.languageId;\n\n\t\t\tif (languageId) {\n\t\t\t\tawait this.setLanguage(context, languageId);\n\t\t\t}\n\t\t}\n\n\t\tprivate async setLanguage(\n\t\t\tcontext: IChangeCellContext,\n\t\t\tlanguageId: string,\n\t\t) {\n\t\t\tawait setCellToLanguage(languageId, context);\n\t\t}\n\n\t\t/**\n\t\t * Copied from editorStatus.ts\n\t\t */\n\t\tprivate getFakeResource(\n\t\t\tlang: string,\n\t\t\tlanguageService: ILanguageService,\n\t\t): URI | undefined {\n\t\t\tlet fakeResource: URI | undefined;\n\n\t\t\tconst languageId =\n\t\t\t\tlanguageService.getLanguageIdByLanguageName(lang);\n\t\t\tif (languageId) {\n\t\t\t\tconst extensions = languageService.getExtensions(languageId);\n\t\t\t\tif (extensions.length) {\n\t\t\t\t\tfakeResource = URI.file(extensions[0]);\n\t\t\t\t} else {\n\t\t\t\t\tconst filenames = languageService.getFilenames(languageId);\n\t\t\t\t\tif (filenames.length) {\n\t\t\t\t\t\tfakeResource = URI.file(filenames[0]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn fakeResource;\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass DetectCellLanguageAction extends NotebookCellAction {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: DETECT_CELL_LANGUAGE,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"detectLanguage\",\n\t\t\t\t\t\"Accept Detected Language for Cell\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\t\tNOTEBOOK_EDITOR_EDITABLE,\n\t\t\t\t\tNOTEBOOK_CELL_EDITABLE,\n\t\t\t\t),\n\t\t\t\tkeybinding: {\n\t\t\t\t\tprimary: KeyCode.KeyD | KeyMod.Alt | KeyMod.Shift,\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tasync runWithContext(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tcontext: INotebookCellActionContext,\n\t\t): Promise<void> {\n\t\t\tconst languageDetectionService = accessor.get(\n\t\t\t\tILanguageDetectionService,\n\t\t\t);\n\t\t\tconst notificationService = accessor.get(INotificationService);\n\t\t\tconst kernelService = accessor.get(INotebookKernelService);\n\t\t\tconst kernel = kernelService.getSelectedOrSuggestedKernel(\n\t\t\t\tcontext.notebookEditor.textModel,\n\t\t\t);\n\t\t\tconst providerLanguages = [...(kernel?.supportedLanguages ?? [])];\n\t\t\tproviderLanguages.push(\"markdown\");\n\t\t\tconst detection = await languageDetectionService.detectLanguage(\n\t\t\t\tcontext.cell.uri,\n\t\t\t\tproviderLanguages,\n\t\t\t);\n\t\t\tif (detection) {\n\t\t\t\tsetCellToLanguage(detection, context);\n\t\t\t} else {\n\t\t\t\tnotificationService.warn(\n\t\t\t\t\tlocalize(\"noDetection\", \"Unable to detect cell language\"),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n);\n\nasync function setCellToLanguage(\n\tlanguageId: string,\n\tcontext: IChangeCellContext,\n) {\n\tif (languageId === \"markdown\" && context.cell?.language !== \"markdown\") {\n\t\tconst idx = context.notebookEditor.getCellIndex(context.cell);\n\t\tawait changeCellToKind(\n\t\t\tCellKind.Markup,\n\t\t\t{\n\t\t\t\tcell: context.cell,\n\t\t\t\tnotebookEditor: context.notebookEditor,\n\t\t\t\tui: true,\n\t\t\t},\n\t\t\t\"markdown\",\n\t\t\tMimes.markdown,\n\t\t);\n\t\tconst newCell = context.notebookEditor.cellAt(idx);\n\n\t\tif (newCell) {\n\t\t\tawait context.notebookEditor.focusNotebookCell(newCell, \"editor\");\n\t\t}\n\t} else if (\n\t\tlanguageId !== \"markdown\" &&\n\t\tcontext.cell?.cellKind === CellKind.Markup\n\t) {\n\t\tawait changeCellToKind(\n\t\t\tCellKind.Code,\n\t\t\t{\n\t\t\t\tcell: context.cell,\n\t\t\t\tnotebookEditor: context.notebookEditor,\n\t\t\t\tui: true,\n\t\t\t},\n\t\t\tlanguageId,\n\t\t);\n\t} else {\n\t\tconst index = context.notebookEditor.textModel.cells.indexOf(\n\t\t\tcontext.cell.model,\n\t\t);\n\t\tcontext.notebookEditor.textModel.applyEdits(\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\teditType: CellEditType.CellLanguage,\n\t\t\t\t\tindex,\n\t\t\t\t\tlanguage: languageId,\n\t\t\t\t},\n\t\t\t],\n\t\t\ttrue,\n\t\t\tundefined,\n\t\t\t() => undefined,\n\t\t\tundefined,\n\t\t\t!context.notebookEditor.isReadOnly,\n\t\t);\n\t}\n}\n\nregisterAction2(\n\tclass SelectNotebookIndentation extends NotebookAction {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: SELECT_NOTEBOOK_INDENTATION_ID,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"selectNotebookIndentation\",\n\t\t\t\t\t\"Select Indentation\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\t\tNOTEBOOK_IS_ACTIVE_EDITOR,\n\t\t\t\t\tNOTEBOOK_EDITOR_EDITABLE,\n\t\t\t\t\tNOTEBOOK_CELL_EDITABLE,\n\t\t\t\t),\n\t\t\t});\n\t\t}\n\n\t\tasync runWithContext(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tcontext: INotebookActionContext,\n\t\t): Promise<void> {\n\t\t\tawait this.showNotebookIndentationPicker(accessor, context);\n\t\t}\n\n\t\tprivate async showNotebookIndentationPicker(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tcontext: INotebookActionContext,\n\t\t) {\n\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\n\t\t\tconst activeNotebook = getNotebookEditorFromEditorPane(\n\t\t\t\teditorService.activeEditorPane,\n\t\t\t);\n\t\t\tif (!activeNotebook || activeNotebook.isDisposed) {\n\t\t\t\treturn quickInputService.pick([\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\"noNotebookEditor\",\n\t\t\t\t\t\t\t\"No notebook editor active at this time\",\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\tif (activeNotebook.isReadOnly) {\n\t\t\t\treturn quickInputService.pick([\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\"noWritableCodeEditor\",\n\t\t\t\t\t\t\t\"The active notebook editor is read-only.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\tconst picks: QuickPickInput<IQuickPickItem & { run(): void }>[] = [\n\t\t\t\tnew NotebookIndentUsingTabs(), // indent using tabs\n\t\t\t\tnew NotebookIndentUsingSpaces(), // indent using spaces\n\t\t\t\tnew NotebookChangeTabDisplaySize(), // change tab size\n\t\t\t\tnew NotebookIndentationToTabsAction(), // convert indentation to tabs\n\t\t\t\tnew NotebookIndentationToSpacesAction(), // convert indentation to spaces\n\t\t\t].map((item) => {\n\t\t\t\treturn {\n\t\t\t\t\tid: item.desc.id,\n\t\t\t\t\tlabel: item.desc.title.toString(),\n\t\t\t\t\trun: () => {\n\t\t\t\t\t\tinstantiationService.invokeFunction(item.run);\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tpicks.splice(3, 0, {\n\t\t\t\ttype: \"separator\",\n\t\t\t\tlabel: localize(\"indentConvert\", \"convert file\"),\n\t\t\t});\n\t\t\tpicks.unshift({\n\t\t\t\ttype: \"separator\",\n\t\t\t\tlabel: localize(\"indentView\", \"change view\"),\n\t\t\t});\n\n\t\t\tconst action = await quickInputService.pick(picks, {\n\t\t\t\tplaceHolder: localize(\"pickAction\", \"Select Action\"),\n\t\t\t\tmatchOnDetail: true,\n\t\t\t});\n\t\t\tif (!action) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\taction.run();\n\t\t\tcontext.notebookEditor.focus();\n\t\t\treturn;\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass CommentSelectedCellsAction extends NotebookMultiCellAction {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: COMMENT_SELECTED_CELLS_ID,\n\t\t\t\ttitle: localize(\n\t\t\t\t\t\"commentSelectedCells\",\n\t\t\t\t\t\"Comment Selected Cells\",\n\t\t\t\t),\n\t\t\t\tkeybinding: {\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tNOTEBOOK_EDITOR_FOCUSED,\n\t\t\t\t\t\tNOTEBOOK_EDITOR_EDITABLE,\n\t\t\t\t\t\tContextKeyExpr.not(InputFocusedContextKey),\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Slash,\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tasync runWithContext(\n\t\t\taccessor: ServicesAccessor,\n\t\t\tcontext: INotebookCommandContext,\n\t\t): Promise<void> {\n\t\t\tconst languageConfigurationService = accessor.get(\n\t\t\t\tILanguageConfigurationService,\n\t\t\t);\n\n\t\t\tcontext.selectedCells.forEach(async (cellViewModel) => {\n\t\t\t\tconst textModel = await cellViewModel.resolveTextModel();\n\n\t\t\t\tconst commentsOptions = cellViewModel.commentOptions;\n\t\t\t\tconst cellCommentCommand = new LineCommentCommand(\n\t\t\t\t\tlanguageConfigurationService,\n\t\t\t\t\tnew Selection(\n\t\t\t\t\t\t1,\n\t\t\t\t\t\t1,\n\t\t\t\t\t\ttextModel.getLineCount(),\n\t\t\t\t\t\ttextModel.getLineMaxColumn(textModel.getLineCount()),\n\t\t\t\t\t), // comment the entire cell\n\t\t\t\t\ttextModel.getOptions().tabSize,\n\t\t\t\t\tType.Toggle,\n\t\t\t\t\tcommentsOptions.insertSpace ?? true,\n\t\t\t\t\tcommentsOptions.ignoreEmptyLines ?? true,\n\t\t\t\t\tfalse,\n\t\t\t\t);\n\n\t\t\t\t// store any selections that are in the cell, allows them to be shifted by comments and preserved\n\t\t\t\tconst cellEditorSelections = cellViewModel.getSelections();\n\t\t\t\tconst initialTrackedRangesIDs: string[] =\n\t\t\t\t\tcellEditorSelections.map((selection) => {\n\t\t\t\t\t\treturn textModel._setTrackedRange(\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tselection,\n\t\t\t\t\t\t\tTrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\n\t\t\t\tCommandExecutor.executeCommands(\n\t\t\t\t\ttextModel,\n\t\t\t\t\tcellEditorSelections,\n\t\t\t\t\t[cellCommentCommand],\n\t\t\t\t);\n\n\t\t\t\tconst newTrackedSelections = initialTrackedRangesIDs\n\t\t\t\t\t.map((i) => {\n\t\t\t\t\t\treturn textModel._getTrackedRange(i);\n\t\t\t\t\t})\n\t\t\t\t\t.filter((r) => !!r)\n\t\t\t\t\t.map((range) => {\n\t\t\t\t\t\treturn new Selection(\n\t\t\t\t\t\t\trange.startLineNumber,\n\t\t\t\t\t\t\trange.startColumn,\n\t\t\t\t\t\t\trange.endLineNumber,\n\t\t\t\t\t\t\trange.endColumn,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\tcellViewModel.setSelections(newTrackedSelections ?? []);\n\t\t\t}); // end of cells forEach\n\t\t}\n\t},\n);\n"],
  "mappings": "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",
  "names": ["languageId"]
}
