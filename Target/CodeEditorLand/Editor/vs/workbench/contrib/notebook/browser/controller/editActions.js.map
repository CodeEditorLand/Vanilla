{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/controller/editActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from '../../../../../base/common/keyCodes.js';\nimport { Mimes } from '../../../../../base/common/mime.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { ICodeEditor } from '../../../../../editor/browser/editorBrowser.js';\nimport { Selection } from '../../../../../editor/common/core/selection.js';\nimport { CommandExecutor } from '../../../../../editor/common/cursor/cursor.js';\nimport { EditorContextKeys } from '../../../../../editor/common/editorContextKeys.js';\nimport { ILanguageService } from '../../../../../editor/common/languages/language.js';\nimport { ILanguageConfigurationService } from '../../../../../editor/common/languages/languageConfigurationRegistry.js';\nimport { TrackedRangeStickiness } from '../../../../../editor/common/model.js';\nimport { getIconClasses } from '../../../../../editor/common/services/getIconClasses.js';\nimport { IModelService } from '../../../../../editor/common/services/model.js';\nimport { LineCommentCommand, Type } from '../../../../../editor/contrib/comment/browser/lineCommentCommand.js';\nimport { localize, localize2 } from '../../../../../nls.js';\nimport { MenuId, registerAction2 } from '../../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { InputFocusedContext, InputFocusedContextKey } from '../../../../../platform/contextkey/common/contextkeys.js';\nimport { IConfirmationResult, IDialogService } from '../../../../../platform/dialogs/common/dialogs.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingWeight } from '../../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { INotificationService } from '../../../../../platform/notification/common/notification.js';\nimport { IQuickInputService, IQuickPickItem, QuickPickInput } from '../../../../../platform/quickinput/common/quickInput.js';\nimport { InlineChatController } from '../../../inlineChat/browser/inlineChatController.js';\nimport { CTX_INLINE_CHAT_FOCUSED } from '../../../inlineChat/common/inlineChat.js';\nimport { changeCellToKind, runDeleteAction } from './cellOperations.js';\nimport { CELL_TITLE_CELL_GROUP_ID, CELL_TITLE_OUTPUT_GROUP_ID, CellToolbarOrder, INotebookActionContext, INotebookCellActionContext, INotebookCommandContext, NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT, NotebookAction, NotebookCellAction, NotebookMultiCellAction, executeNotebookCondition, findTargetCellEditor } from './coreActions.js';\nimport { NotebookChangeTabDisplaySize, NotebookIndentUsingSpaces, NotebookIndentUsingTabs, NotebookIndentationToSpacesAction, NotebookIndentationToTabsAction } from './notebookIndentationActions.js';\nimport { CHANGE_CELL_LANGUAGE, CellEditState, DETECT_CELL_LANGUAGE, QUIT_EDIT_CELL_COMMAND_ID, getNotebookEditorFromEditorPane } from '../notebookBrowser.js';\nimport * as icons from '../notebookIcons.js';\nimport { CellEditType, CellKind, ICellEditOperation, NotebookCellExecutionState, NotebookSetting } from '../../common/notebookCommon.js';\nimport { NOTEBOOK_CELL_EDITABLE, NOTEBOOK_CELL_HAS_OUTPUTS, NOTEBOOK_CELL_IS_FIRST_OUTPUT, NOTEBOOK_CELL_LIST_FOCUSED, NOTEBOOK_CELL_MARKDOWN_EDIT_MODE, NOTEBOOK_CELL_TYPE, NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_HAS_OUTPUTS, NOTEBOOK_IS_ACTIVE_EDITOR, NOTEBOOK_OUTPUT_FOCUSED, NOTEBOOK_OUTPUT_INPUT_FOCUSED, NOTEBOOK_USE_CONSOLIDATED_OUTPUT_BUTTON } from '../../common/notebookContextKeys.js';\nimport { INotebookExecutionStateService } from '../../common/notebookExecutionStateService.js';\nimport { INotebookKernelService } from '../../common/notebookKernelService.js';\nimport { ICellRange } from '../../common/notebookRange.js';\nimport { IEditorService } from '../../../../services/editor/common/editorService.js';\nimport { ILanguageDetectionService } from '../../../../services/languageDetection/common/languageDetectionWorkerService.js';\n\nconst CLEAR_ALL_CELLS_OUTPUTS_COMMAND_ID = 'notebook.clearAllCellsOutputs';\nconst EDIT_CELL_COMMAND_ID = 'notebook.cell.edit';\nconst DELETE_CELL_COMMAND_ID = 'notebook.cell.delete';\nexport const CLEAR_CELL_OUTPUTS_COMMAND_ID = 'notebook.cell.clearOutputs';\nexport const SELECT_NOTEBOOK_INDENTATION_ID = 'notebook.selectIndentation';\nexport const COMMENT_SELECTED_CELLS_ID = 'notebook.commentSelectedCells';\n\nregisterAction2(class EditCellAction extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: EDIT_CELL_COMMAND_ID,\n\t\t\t\ttitle: localize('notebookActions.editCell', \"Edit Cell\"),\n\t\t\t\tkeybinding: {\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tNOTEBOOK_CELL_LIST_FOCUSED,\n\t\t\t\t\t\tContextKeyExpr.not(InputFocusedContextKey),\n\t\t\t\t\t\tNOTEBOOK_EDITOR_EDITABLE.isEqualTo(true),\n\t\t\t\t\t\tEditorContextKeys.hoverFocused.toNegated(),\n\t\t\t\t\t\tNOTEBOOK_OUTPUT_INPUT_FOCUSED.toNegated()\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyCode.Enter,\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t\t},\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tNOTEBOOK_EDITOR_EDITABLE.isEqualTo(true),\n\t\t\t\t\t\tNOTEBOOK_CELL_TYPE.isEqualTo('markup'),\n\t\t\t\t\t\tNOTEBOOK_CELL_MARKDOWN_EDIT_MODE.toNegated(),\n\t\t\t\t\t\tNOTEBOOK_CELL_EDITABLE),\n\t\t\t\t\torder: CellToolbarOrder.EditCell,\n\t\t\t\t\tgroup: CELL_TITLE_CELL_GROUP_ID\n\t\t\t\t},\n\t\t\t\ticon: icons.editIcon,\n\t\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext): Promise<void> {\n\t\tif (!context.notebookEditor.hasModel() || context.notebookEditor.isReadOnly) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait context.notebookEditor.focusNotebookCell(context.cell, 'editor');\n\t\tconst foundEditor: ICodeEditor | undefined = context.cell ? findTargetCellEditor(context, context.cell) : undefined;\n\t\tif (foundEditor && foundEditor.hasTextFocus() && InlineChatController.get(foundEditor)?.getWidgetPosition()?.lineNumber === foundEditor.getPosition()?.lineNumber) {\n\t\t\tInlineChatController.get(foundEditor)?.focus();\n\t\t}\n\t}\n});\n\nconst quitEditCondition = ContextKeyExpr.and(\n\tNOTEBOOK_EDITOR_FOCUSED,\n\tInputFocusedContext,\n\tCTX_INLINE_CHAT_FOCUSED.toNegated()\n);\nregisterAction2(class QuitEditCellAction extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: QUIT_EDIT_CELL_COMMAND_ID,\n\t\t\t\ttitle: localize('notebookActions.quitEdit', \"Stop Editing Cell\"),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tNOTEBOOK_CELL_TYPE.isEqualTo('markup'),\n\t\t\t\t\t\tNOTEBOOK_CELL_MARKDOWN_EDIT_MODE,\n\t\t\t\t\t\tNOTEBOOK_CELL_EDITABLE),\n\t\t\t\t\torder: CellToolbarOrder.SaveCell,\n\t\t\t\t\tgroup: CELL_TITLE_CELL_GROUP_ID\n\t\t\t\t},\n\t\t\t\ticon: icons.stopEditIcon,\n\t\t\t\tkeybinding: [\n\t\t\t\t\t{\n\t\t\t\t\t\twhen: ContextKeyExpr.and(quitEditCondition,\n\t\t\t\t\t\t\tEditorContextKeys.hoverVisible.toNegated(),\n\t\t\t\t\t\t\tEditorContextKeys.hasNonEmptySelection.toNegated(),\n\t\t\t\t\t\t\tEditorContextKeys.hasMultipleSelections.toNegated()),\n\t\t\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\t\t\tweight: NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT - 5\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED,\n\t\t\t\t\t\t\tNOTEBOOK_OUTPUT_FOCUSED),\n\t\t\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib + 5\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tquitEditCondition,\n\t\t\t\t\t\t\tNOTEBOOK_CELL_TYPE.isEqualTo('markup')),\n\t\t\t\t\t\tprimary: KeyMod.WinCtrl | KeyCode.Enter,\n\t\t\t\t\t\twin: {\n\t\t\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Enter\n\t\t\t\t\t\t},\n\t\t\t\t\t\tweight: NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT - 5\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext) {\n\t\tif (context.cell.cellKind === CellKind.Markup) {\n\t\t\tcontext.cell.updateEditState(CellEditState.Preview, QUIT_EDIT_CELL_COMMAND_ID);\n\t\t}\n\n\t\tawait context.notebookEditor.focusNotebookCell(context.cell, 'container', { skipReveal: true });\n\t}\n});\n\nregisterAction2(class DeleteCellAction extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: DELETE_CELL_COMMAND_ID,\n\t\t\t\ttitle: localize('notebookActions.deleteCell', \"Delete Cell\"),\n\t\t\t\tkeybinding: {\n\t\t\t\t\tprimary: KeyCode.Delete,\n\t\t\t\t\tmac: {\n\t\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Backspace\n\t\t\t\t\t},\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, ContextKeyExpr.not(InputFocusedContextKey), NOTEBOOK_OUTPUT_INPUT_FOCUSED.toNegated()),\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t\t},\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.NotebookCellDelete,\n\t\t\t\t\t\twhen: NOTEBOOK_EDITOR_EDITABLE,\n\t\t\t\t\t\tgroup: CELL_TITLE_CELL_GROUP_ID\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.InteractiveCellDelete,\n\t\t\t\t\t\tgroup: CELL_TITLE_CELL_GROUP_ID\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\ticon: icons.deleteCellIcon\n\t\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext) {\n\t\tif (!context.notebookEditor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet confirmation: IConfirmationResult;\n\t\tconst notebookExecutionStateService = accessor.get(INotebookExecutionStateService);\n\t\tconst runState = notebookExecutionStateService.getCellExecution(context.cell.uri)?.state;\n\t\tconst configService = accessor.get(IConfigurationService);\n\n\t\tif (runState === NotebookCellExecutionState.Executing && configService.getValue(NotebookSetting.confirmDeleteRunningCell)) {\n\t\t\tconst dialogService = accessor.get(IDialogService);\n\t\t\tconst primaryButton = localize('confirmDeleteButton', \"Delete\");\n\n\t\t\tconfirmation = await dialogService.confirm({\n\t\t\t\ttype: 'question',\n\t\t\t\tmessage: localize('confirmDeleteButtonMessage', \"This cell is running, are you sure you want to delete it?\"),\n\t\t\t\tprimaryButton: primaryButton,\n\t\t\t\tcheckbox: {\n\t\t\t\t\tlabel: localize('doNotAskAgain', \"Do not ask me again\")\n\t\t\t\t}\n\t\t\t});\n\n\t\t} else {\n\t\t\tconfirmation = { confirmed: true };\n\t\t}\n\n\t\tif (!confirmation.confirmed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (confirmation.checkboxChecked === true) {\n\t\t\tawait configService.updateValue(NotebookSetting.confirmDeleteRunningCell, false);\n\t\t}\n\n\t\trunDeleteAction(context.notebookEditor, context.cell);\n\t}\n});\n\nregisterAction2(class ClearCellOutputsAction extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CLEAR_CELL_OUTPUTS_COMMAND_ID,\n\t\t\ttitle: localize('clearCellOutputs', 'Clear Cell Outputs'),\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_CELL_TYPE.isEqualTo('code'), executeNotebookCondition, NOTEBOOK_CELL_HAS_OUTPUTS, NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_CELL_EDITABLE, NOTEBOOK_USE_CONSOLIDATED_OUTPUT_BUTTON.toNegated()),\n\t\t\t\t\torder: CellToolbarOrder.ClearCellOutput,\n\t\t\t\t\tgroup: CELL_TITLE_OUTPUT_GROUP_ID\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.NotebookOutputToolbar,\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_CELL_HAS_OUTPUTS, NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_CELL_EDITABLE, NOTEBOOK_CELL_IS_FIRST_OUTPUT, NOTEBOOK_USE_CONSOLIDATED_OUTPUT_BUTTON)\n\t\t\t\t},\n\t\t\t],\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, ContextKeyExpr.not(InputFocusedContextKey), NOTEBOOK_CELL_HAS_OUTPUTS, NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_CELL_EDITABLE),\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.Delete,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t},\n\t\t\ticon: icons.clearIcon\n\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext): Promise<void> {\n\t\tconst notebookExecutionStateService = accessor.get(INotebookExecutionStateService);\n\t\tconst editor = context.notebookEditor;\n\t\tif (!editor.hasModel() || !editor.textModel.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst cell = context.cell;\n\t\tconst index = editor.textModel.cells.indexOf(cell.model);\n\n\t\tif (index < 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst computeUndoRedo = !editor.isReadOnly;\n\t\teditor.textModel.applyEdits([{ editType: CellEditType.Output, index, outputs: [] }], true, undefined, () => undefined, undefined, computeUndoRedo);\n\n\t\tconst runState = notebookExecutionStateService.getCellExecution(context.cell.uri)?.state;\n\t\tif (runState !== NotebookCellExecutionState.Executing) {\n\t\t\tcontext.notebookEditor.textModel.applyEdits([{\n\t\t\t\teditType: CellEditType.PartialInternalMetadata, index, internalMetadata: {\n\t\t\t\t\trunStartTime: null,\n\t\t\t\t\trunStartTimeAdjustment: null,\n\t\t\t\t\trunEndTime: null,\n\t\t\t\t\texecutionOrder: null,\n\t\t\t\t\tlastRunSuccess: null\n\t\t\t\t}\n\t\t\t}], true, undefined, () => undefined, undefined, computeUndoRedo);\n\t\t}\n\t}\n});\n\nregisterAction2(class ClearAllCellOutputsAction extends NotebookAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CLEAR_ALL_CELLS_OUTPUTS_COMMAND_ID,\n\t\t\ttitle: localize('clearAllCellsOutputs', 'Clear All Outputs'),\n\t\t\tprecondition: NOTEBOOK_HAS_OUTPUTS,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tNOTEBOOK_IS_ACTIVE_EDITOR,\n\t\t\t\t\t\tContextKeyExpr.notEquals('config.notebook.globalToolbar', true)\n\t\t\t\t\t),\n\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\torder: 0\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.NotebookToolbar,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\texecuteNotebookCondition,\n\t\t\t\t\t\tContextKeyExpr.equals('config.notebook.globalToolbar', true)\n\t\t\t\t\t),\n\t\t\t\t\tgroup: 'navigation/execute',\n\t\t\t\t\torder: 10\n\t\t\t\t}\n\t\t\t],\n\t\t\ticon: icons.clearIcon\n\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookActionContext): Promise<void> {\n\t\tconst notebookExecutionStateService = accessor.get(INotebookExecutionStateService);\n\t\tconst editor = context.notebookEditor;\n\t\tif (!editor.hasModel() || !editor.textModel.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst computeUndoRedo = !editor.isReadOnly;\n\t\teditor.textModel.applyEdits(\n\t\t\teditor.textModel.cells.map((cell, index) => ({\n\t\t\t\teditType: CellEditType.Output, index, outputs: []\n\t\t\t})), true, undefined, () => undefined, undefined, computeUndoRedo);\n\n\t\tconst clearExecutionMetadataEdits = editor.textModel.cells.map((cell, index) => {\n\t\t\tconst runState = notebookExecutionStateService.getCellExecution(cell.uri)?.state;\n\t\t\tif (runState !== NotebookCellExecutionState.Executing) {\n\t\t\t\treturn {\n\t\t\t\t\teditType: CellEditType.PartialInternalMetadata, index, internalMetadata: {\n\t\t\t\t\t\trunStartTime: null,\n\t\t\t\t\t\trunStartTimeAdjustment: null,\n\t\t\t\t\t\trunEndTime: null,\n\t\t\t\t\t\texecutionOrder: null,\n\t\t\t\t\t\tlastRunSuccess: null\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}).filter(edit => !!edit) as ICellEditOperation[];\n\t\tif (clearExecutionMetadataEdits.length) {\n\t\t\tcontext.notebookEditor.textModel.applyEdits(clearExecutionMetadataEdits, true, undefined, () => undefined, undefined, computeUndoRedo);\n\t\t}\n\t}\n});\n\ninterface ILanguagePickInput extends IQuickPickItem {\n\tlanguageId: string;\n\tdescription: string;\n}\n\ninterface IChangeCellContext extends INotebookCellActionContext {\n\t// TODO@rebornix : `cells`\n\t// range: ICellRange;\n\tlanguage?: string;\n}\n\nregisterAction2(class ChangeCellLanguageAction extends NotebookCellAction<ICellRange> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CHANGE_CELL_LANGUAGE,\n\t\t\ttitle: localize('changeLanguage', 'Change Cell Language'),\n\t\t\tmetadata: {\n\t\t\t\tdescription: localize('changeLanguage', 'Change Cell Language'),\n\t\t\t\targs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'range',\n\t\t\t\t\t\tdescription: 'The cell range',\n\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\t'type': 'object',\n\t\t\t\t\t\t\t'required': ['start', 'end'],\n\t\t\t\t\t\t\t'properties': {\n\t\t\t\t\t\t\t\t'start': {\n\t\t\t\t\t\t\t\t\t'type': 'number'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t'end': {\n\t\t\t\t\t\t\t\t\t'type': 'number'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'language',\n\t\t\t\t\t\tdescription: 'The target cell language',\n\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\t'type': 'string'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected override getCellContextFromArgs(accessor: ServicesAccessor, context?: ICellRange, ...additionalArgs: any[]): IChangeCellContext | undefined {\n\t\tif (!context || typeof context.start !== 'number' || typeof context.end !== 'number' || context.start >= context.end) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst language = additionalArgs.length && typeof additionalArgs[0] === 'string' ? additionalArgs[0] : undefined;\n\t\tconst activeEditorContext = this.getEditorContextFromArgsOrActive(accessor);\n\n\t\tif (!activeEditorContext || !activeEditorContext.notebookEditor.hasModel() || context.start >= activeEditorContext.notebookEditor.getLength()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO@rebornix, support multiple cells\n\t\treturn {\n\t\t\tnotebookEditor: activeEditorContext.notebookEditor,\n\t\t\tcell: activeEditorContext.notebookEditor.cellAt(context.start)!,\n\t\t\tlanguage\n\t\t};\n\t}\n\n\n\tasync runWithContext(accessor: ServicesAccessor, context: IChangeCellContext): Promise<void> {\n\t\tif (context.language) {\n\t\t\tawait this.setLanguage(context, context.language);\n\t\t} else {\n\t\t\tawait this.showLanguagePicker(accessor, context);\n\t\t}\n\t}\n\n\tprivate async showLanguagePicker(accessor: ServicesAccessor, context: IChangeCellContext) {\n\t\tconst topItems: ILanguagePickInput[] = [];\n\t\tconst mainItems: ILanguagePickInput[] = [];\n\n\t\tconst languageService = accessor.get(ILanguageService);\n\t\tconst modelService = accessor.get(IModelService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst languageDetectionService = accessor.get(ILanguageDetectionService);\n\t\tconst kernelService = accessor.get(INotebookKernelService);\n\n\t\tlet languages = context.notebookEditor.activeKernel?.supportedLanguages;\n\t\tif (!languages) {\n\t\t\tconst matchResult = kernelService.getMatchingKernel(context.notebookEditor.textModel);\n\t\t\tconst allSupportedLanguages = matchResult.all.flatMap(kernel => kernel.supportedLanguages);\n\t\t\tlanguages = allSupportedLanguages.length > 0 ? allSupportedLanguages : languageService.getRegisteredLanguageIds();\n\t\t}\n\n\t\tconst providerLanguages = new Set([\n\t\t\t...languages,\n\t\t\t'markdown'\n\t\t]);\n\n\t\tproviderLanguages.forEach(languageId => {\n\t\t\tlet description: string;\n\t\t\tif (context.cell.cellKind === CellKind.Markup ? (languageId === 'markdown') : (languageId === context.cell.language)) {\n\t\t\t\tdescription = localize('languageDescription', \"({0}) - Current Language\", languageId);\n\t\t\t} else {\n\t\t\t\tdescription = localize('languageDescriptionConfigured', \"({0})\", languageId);\n\t\t\t}\n\n\t\t\tconst languageName = languageService.getLanguageName(languageId);\n\t\t\tif (!languageName) {\n\t\t\t\t// Notebook has unrecognized language\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst item: ILanguagePickInput = {\n\t\t\t\tlabel: languageName,\n\t\t\t\ticonClasses: getIconClasses(modelService, languageService, this.getFakeResource(languageName, languageService)),\n\t\t\t\tdescription,\n\t\t\t\tlanguageId\n\t\t\t};\n\n\t\t\tif (languageId === 'markdown' || languageId === context.cell.language) {\n\t\t\t\ttopItems.push(item);\n\t\t\t} else {\n\t\t\t\tmainItems.push(item);\n\t\t\t}\n\t\t});\n\n\t\tmainItems.sort((a, b) => {\n\t\t\treturn a.description.localeCompare(b.description);\n\t\t});\n\n\t\t// Offer to \"Auto Detect\"\n\t\tconst autoDetectMode: IQuickPickItem = {\n\t\t\tlabel: localize('autoDetect', \"Auto Detect\")\n\t\t};\n\n\t\tconst picks: QuickPickInput[] = [\n\t\t\tautoDetectMode,\n\t\t\t{ type: 'separator', label: localize('languagesPicks', \"languages (identifier)\") },\n\t\t\t...topItems,\n\t\t\t{ type: 'separator' },\n\t\t\t...mainItems\n\t\t];\n\n\t\tconst selection = await quickInputService.pick(picks, { placeHolder: localize('pickLanguageToConfigure', \"Select Language Mode\") });\n\t\tconst languageId = selection === autoDetectMode\n\t\t\t? await languageDetectionService.detectLanguage(context.cell.uri)\n\t\t\t: (selection as ILanguagePickInput)?.languageId;\n\n\t\tif (languageId) {\n\t\t\tawait this.setLanguage(context, languageId);\n\t\t}\n\t}\n\n\tprivate async setLanguage(context: IChangeCellContext, languageId: string) {\n\t\tawait setCellToLanguage(languageId, context);\n\t}\n\n\t/**\n\t * Copied from editorStatus.ts\n\t */\n\tprivate getFakeResource(lang: string, languageService: ILanguageService): URI | undefined {\n\t\tlet fakeResource: URI | undefined;\n\n\t\tconst languageId = languageService.getLanguageIdByLanguageName(lang);\n\t\tif (languageId) {\n\t\t\tconst extensions = languageService.getExtensions(languageId);\n\t\t\tif (extensions.length) {\n\t\t\t\tfakeResource = URI.file(extensions[0]);\n\t\t\t} else {\n\t\t\t\tconst filenames = languageService.getFilenames(languageId);\n\t\t\t\tif (filenames.length) {\n\t\t\t\t\tfakeResource = URI.file(filenames[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fakeResource;\n\t}\n});\n\nregisterAction2(class DetectCellLanguageAction extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: DETECT_CELL_LANGUAGE,\n\t\t\ttitle: localize2('detectLanguage', \"Accept Detected Language for Cell\"),\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.and(NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_CELL_EDITABLE),\n\t\t\tkeybinding: { primary: KeyCode.KeyD | KeyMod.Alt | KeyMod.Shift, weight: KeybindingWeight.WorkbenchContrib }\n\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext): Promise<void> {\n\t\tconst languageDetectionService = accessor.get(ILanguageDetectionService);\n\t\tconst notificationService = accessor.get(INotificationService);\n\t\tconst kernelService = accessor.get(INotebookKernelService);\n\t\tconst kernel = kernelService.getSelectedOrSuggestedKernel(context.notebookEditor.textModel);\n\t\tconst providerLanguages = [...kernel?.supportedLanguages ?? []];\n\t\tproviderLanguages.push('markdown');\n\t\tconst detection = await languageDetectionService.detectLanguage(context.cell.uri, providerLanguages);\n\t\tif (detection) {\n\t\t\tsetCellToLanguage(detection, context);\n\t\t} else {\n\t\t\tnotificationService.warn(localize('noDetection', \"Unable to detect cell language\"));\n\t\t}\n\t}\n});\n\nasync function setCellToLanguage(languageId: string, context: IChangeCellContext) {\n\tif (languageId === 'markdown' && context.cell?.language !== 'markdown') {\n\t\tconst idx = context.notebookEditor.getCellIndex(context.cell);\n\t\tawait changeCellToKind(CellKind.Markup, { cell: context.cell, notebookEditor: context.notebookEditor, ui: true }, 'markdown', Mimes.markdown);\n\t\tconst newCell = context.notebookEditor.cellAt(idx);\n\n\t\tif (newCell) {\n\t\t\tawait context.notebookEditor.focusNotebookCell(newCell, 'editor');\n\t\t}\n\t} else if (languageId !== 'markdown' && context.cell?.cellKind === CellKind.Markup) {\n\t\tawait changeCellToKind(CellKind.Code, { cell: context.cell, notebookEditor: context.notebookEditor, ui: true }, languageId);\n\t} else {\n\t\tconst index = context.notebookEditor.textModel.cells.indexOf(context.cell.model);\n\t\tcontext.notebookEditor.textModel.applyEdits(\n\t\t\t[{ editType: CellEditType.CellLanguage, index, language: languageId }],\n\t\t\ttrue, undefined, () => undefined, undefined, !context.notebookEditor.isReadOnly\n\t\t);\n\t}\n}\n\nregisterAction2(class SelectNotebookIndentation extends NotebookAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: SELECT_NOTEBOOK_INDENTATION_ID,\n\t\t\ttitle: localize2('selectNotebookIndentation', 'Select Indentation'),\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.and(NOTEBOOK_IS_ACTIVE_EDITOR, NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_CELL_EDITABLE),\n\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookActionContext): Promise<void> {\n\t\tawait this.showNotebookIndentationPicker(accessor, context);\n\t}\n\n\tprivate async showNotebookIndentationPicker(accessor: ServicesAccessor, context: INotebookActionContext) {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst instantiationService = accessor.get(IInstantiationService);\n\n\t\tconst activeNotebook = getNotebookEditorFromEditorPane(editorService.activeEditorPane);\n\t\tif (!activeNotebook || activeNotebook.isDisposed) {\n\t\t\treturn quickInputService.pick([{ label: localize('noNotebookEditor', \"No notebook editor active at this time\") }]);\n\t\t}\n\n\t\tif (activeNotebook.isReadOnly) {\n\t\t\treturn quickInputService.pick([{ label: localize('noWritableCodeEditor', \"The active notebook editor is read-only.\") }]);\n\t\t}\n\n\t\tconst picks: QuickPickInput<IQuickPickItem & { run(): void }>[] = [\n\t\t\tnew NotebookIndentUsingTabs(), // indent using tabs\n\t\t\tnew NotebookIndentUsingSpaces(), // indent using spaces\n\t\t\tnew NotebookChangeTabDisplaySize(), // change tab size\n\t\t\tnew NotebookIndentationToTabsAction(), // convert indentation to tabs\n\t\t\tnew NotebookIndentationToSpacesAction() // convert indentation to spaces\n\t\t].map(item => {\n\t\t\treturn {\n\t\t\t\tid: item.desc.id,\n\t\t\t\tlabel: item.desc.title.toString(),\n\t\t\t\trun: () => {\n\t\t\t\t\tinstantiationService.invokeFunction(item.run);\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\n\t\tpicks.splice(3, 0, { type: 'separator', label: localize('indentConvert', \"convert file\") });\n\t\tpicks.unshift({ type: 'separator', label: localize('indentView', \"change view\") });\n\n\t\tconst action = await quickInputService.pick(picks, { placeHolder: localize('pickAction', \"Select Action\"), matchOnDetail: true });\n\t\tif (!action) {\n\t\t\treturn;\n\t\t}\n\t\taction.run();\n\t\tcontext.notebookEditor.focus();\n\t\treturn;\n\t}\n});\n\nregisterAction2(class CommentSelectedCellsAction extends NotebookMultiCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: COMMENT_SELECTED_CELLS_ID,\n\t\t\ttitle: localize('commentSelectedCells', \"Comment Selected Cells\"),\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tNOTEBOOK_EDITOR_FOCUSED,\n\t\t\t\t\tNOTEBOOK_EDITOR_EDITABLE,\n\t\t\t\t\tContextKeyExpr.not(InputFocusedContextKey),\n\t\t\t\t),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Slash,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext): Promise<void> {\n\t\tconst languageConfigurationService = accessor.get(ILanguageConfigurationService);\n\n\t\tcontext.selectedCells.forEach(async cellViewModel => {\n\t\t\tconst textModel = await cellViewModel.resolveTextModel();\n\n\t\t\tconst commentsOptions = cellViewModel.commentOptions;\n\t\t\tconst cellCommentCommand = new LineCommentCommand(\n\t\t\t\tlanguageConfigurationService,\n\t\t\t\tnew Selection(1, 1, textModel.getLineCount(), textModel.getLineMaxColumn(textModel.getLineCount())), // comment the entire cell\n\t\t\t\ttextModel.getOptions().tabSize,\n\t\t\t\tType.Toggle,\n\t\t\t\tcommentsOptions.insertSpace ?? true,\n\t\t\t\tcommentsOptions.ignoreEmptyLines ?? true,\n\t\t\t\tfalse\n\t\t\t);\n\n\t\t\t// store any selections that are in the cell, allows them to be shifted by comments and preserved\n\t\t\tconst cellEditorSelections = cellViewModel.getSelections();\n\t\t\tconst initialTrackedRangesIDs: string[] = cellEditorSelections.map(selection => {\n\t\t\t\treturn textModel._setTrackedRange(null, selection, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges);\n\t\t\t});\n\n\t\t\tCommandExecutor.executeCommands(textModel, cellEditorSelections, [cellCommentCommand]);\n\n\t\t\tconst newTrackedSelections = initialTrackedRangesIDs.map(i => {\n\t\t\t\treturn textModel._getTrackedRange(i);\n\t\t\t}).filter(r => !!r).map((range,) => {\n\t\t\t\treturn new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n\t\t\t});\n\t\t\tcellViewModel.setSelections(newTrackedSelections ?? []);\n\t\t}); // end of cells forEach\n\t}\n\n});\n"],
  "mappings": "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",
  "names": ["languageId"]
}
