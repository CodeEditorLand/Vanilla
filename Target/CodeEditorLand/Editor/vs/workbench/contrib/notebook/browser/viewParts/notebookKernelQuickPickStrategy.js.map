{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/viewParts/notebookKernelQuickPickStrategy.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IAction } from '../../../../../base/common/actions.js';\nimport { groupBy } from '../../../../../base/common/arrays.js';\nimport { createCancelablePromise } from '../../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { Codicon } from '../../../../../base/common/codicons.js';\nimport { Event } from '../../../../../base/common/event.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { MarshalledId } from '../../../../../base/common/marshallingIds.js';\nimport { uppercaseFirstLetter } from '../../../../../base/common/strings.js';\nimport { Command } from '../../../../../editor/common/languages.js';\nimport { localize } from '../../../../../nls.js';\nimport { ICommandService } from '../../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { ILabelService } from '../../../../../platform/label/common/label.js';\nimport { ILogService } from '../../../../../platform/log/common/log.js';\nimport { IProductService } from '../../../../../platform/product/common/productService.js';\nimport { ProgressLocation } from '../../../../../platform/progress/common/progress.js';\nimport { IQuickInputButton, IQuickInputService, IQuickPick, IQuickPickItem, QuickPickInput } from '../../../../../platform/quickinput/common/quickInput.js';\nimport { ThemeIcon } from '../../../../../base/common/themables.js';\nimport { IExtension, IExtensionsWorkbenchService } from '../../../extensions/common/extensions.js';\nimport { IActiveNotebookEditor, INotebookExtensionRecommendation, JUPYTER_EXTENSION_ID, KERNEL_RECOMMENDATIONS } from '../notebookBrowser.js';\nimport { NotebookEditorWidget } from '../notebookEditorWidget.js';\nimport { executingStateIcon, selectKernelIcon } from '../notebookIcons.js';\nimport { NotebookTextModel } from '../../common/model/notebookTextModel.js';\nimport { INotebookKernel, INotebookKernelHistoryService, INotebookKernelMatchResult, INotebookKernelService, ISourceAction } from '../../common/notebookKernelService.js';\nimport { IExtensionService } from '../../../../services/extensions/common/extensions.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { IOpenerService } from '../../../../../platform/opener/common/opener.js';\nimport { INotebookTextModel } from '../../common/notebookCommon.js';\nimport { SELECT_KERNEL_ID } from '../controller/coreActions.js';\nimport { EnablementState } from '../../../../services/extensionManagement/common/extensionManagement.js';\n\ntype KernelPick = IQuickPickItem & { kernel: INotebookKernel };\nfunction isKernelPick(item: QuickPickInput<IQuickPickItem>): item is KernelPick {\n\treturn 'kernel' in item;\n}\ntype GroupedKernelsPick = IQuickPickItem & { kernels: INotebookKernel[]; source: string };\nfunction isGroupedKernelsPick(item: QuickPickInput<IQuickPickItem>): item is GroupedKernelsPick {\n\treturn 'kernels' in item;\n}\ntype SourcePick = IQuickPickItem & { action: ISourceAction };\nfunction isSourcePick(item: QuickPickInput<IQuickPickItem>): item is SourcePick {\n\treturn 'action' in item;\n}\ntype InstallExtensionPick = IQuickPickItem & { extensionIds: string[] };\nfunction isInstallExtensionPick(item: QuickPickInput<IQuickPickItem>): item is InstallExtensionPick {\n\treturn item.id === 'installSuggested' && 'extensionIds' in item;\n}\ntype SearchMarketplacePick = IQuickPickItem & { id: 'install' };\nfunction isSearchMarketplacePick(item: QuickPickInput<IQuickPickItem>): item is SearchMarketplacePick {\n\treturn item.id === 'install';\n}\n\ntype KernelSourceQuickPickItem = IQuickPickItem & { command: Command; documentation?: string };\nfunction isKernelSourceQuickPickItem(item: IQuickPickItem): item is KernelSourceQuickPickItem {\n\treturn 'command' in item;\n}\n\nfunction supportAutoRun(item: QuickPickInput<IQuickPickItem>): item is IQuickPickItem {\n\treturn 'autoRun' in item && !!item.autoRun;\n}\ntype KernelQuickPickItem = (IQuickPickItem & { autoRun?: boolean }) | SearchMarketplacePick | InstallExtensionPick | KernelPick | GroupedKernelsPick | SourcePick | KernelSourceQuickPickItem;\nconst KERNEL_PICKER_UPDATE_DEBOUNCE = 200;\n\nexport type KernelQuickPickContext =\n\t{ id: string; extension: string } |\n\t{ notebookEditorId: string } |\n\t{ id: string; extension: string; notebookEditorId: string } |\n\t{ ui?: boolean; notebookEditor?: NotebookEditorWidget };\n\nexport interface IKernelPickerStrategy {\n\tshowQuickPick(editor: IActiveNotebookEditor, wantedKernelId?: string): Promise<boolean>;\n}\n\nfunction toKernelQuickPick(kernel: INotebookKernel, selected: INotebookKernel | undefined) {\n\tconst res: KernelPick = {\n\t\tkernel,\n\t\tpicked: kernel.id === selected?.id,\n\t\tlabel: kernel.label,\n\t\tdescription: kernel.description,\n\t\tdetail: kernel.detail\n\t};\n\tif (kernel.id === selected?.id) {\n\t\tif (!res.description) {\n\t\t\tres.description = localize('current1', \"Currently Selected\");\n\t\t} else {\n\t\t\tres.description = localize('current2', \"{0} - Currently Selected\", res.description);\n\t\t}\n\t}\n\treturn res;\n}\n\n\nabstract class KernelPickerStrategyBase implements IKernelPickerStrategy {\n\tconstructor(\n\t\tprotected readonly _notebookKernelService: INotebookKernelService,\n\t\tprotected readonly _productService: IProductService,\n\t\tprotected readonly _quickInputService: IQuickInputService,\n\t\tprotected readonly _labelService: ILabelService,\n\t\tprotected readonly _logService: ILogService,\n\t\tprotected readonly _extensionWorkbenchService: IExtensionsWorkbenchService,\n\t\tprotected readonly _extensionService: IExtensionService,\n\t\tprotected readonly _commandService: ICommandService\n\t) { }\n\n\tasync showQuickPick(editor: IActiveNotebookEditor, wantedId?: string, skipAutoRun?: boolean): Promise<boolean> {\n\t\tconst notebook = editor.textModel;\n\t\tconst scopedContextKeyService = editor.scopedContextKeyService;\n\t\tconst matchResult = this._getMatchingResult(notebook);\n\t\tconst { selected, all } = matchResult;\n\n\t\tlet newKernel: INotebookKernel | undefined;\n\t\tif (wantedId) {\n\t\t\tfor (const candidate of all) {\n\t\t\t\tif (candidate.id === wantedId) {\n\t\t\t\t\tnewKernel = candidate;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!newKernel) {\n\t\t\t\tthis._logService.warn(`wanted kernel DOES NOT EXIST, wanted: ${wantedId}, all: ${all.map(k => k.id)}`);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (newKernel) {\n\t\t\tthis._selecteKernel(notebook, newKernel);\n\t\t\treturn true;\n\t\t}\n\n\n\t\tconst localDisposableStore = new DisposableStore();\n\t\tconst quickPick = localDisposableStore.add(this._quickInputService.createQuickPick<KernelQuickPickItem>({ useSeparators: true }));\n\t\tconst quickPickItems = this._getKernelPickerQuickPickItems(notebook, matchResult, this._notebookKernelService, scopedContextKeyService);\n\n\t\tif (quickPickItems.length === 1 && supportAutoRun(quickPickItems[0]) && !skipAutoRun) {\n\t\t\tconst picked = await this._handleQuickPick(editor, quickPickItems[0], quickPickItems as KernelQuickPickItem[]);\n\t\t\tlocalDisposableStore.dispose();\n\t\t\treturn picked;\n\t\t}\n\n\t\tquickPick.items = quickPickItems;\n\t\tquickPick.canSelectMany = false;\n\t\tquickPick.placeholder = selected\n\t\t\t? localize('prompt.placeholder.change', \"Change kernel for '{0}'\", this._labelService.getUriLabel(notebook.uri, { relative: true }))\n\t\t\t: localize('prompt.placeholder.select', \"Select kernel for '{0}'\", this._labelService.getUriLabel(notebook.uri, { relative: true }));\n\n\t\tquickPick.busy = this._notebookKernelService.getKernelDetectionTasks(notebook).length > 0;\n\n\t\tconst kernelDetectionTaskListener = this._notebookKernelService.onDidChangeKernelDetectionTasks(() => {\n\t\t\tquickPick.busy = this._notebookKernelService.getKernelDetectionTasks(notebook).length > 0;\n\t\t});\n\n\t\t// run extension recommendataion task if quickPickItems is empty\n\t\tconst extensionRecommendataionPromise = quickPickItems.length === 0\n\t\t\t? createCancelablePromise(token => this._showInstallKernelExtensionRecommendation(notebook, quickPick, this._extensionWorkbenchService, token))\n\t\t\t: undefined;\n\n\t\tconst kernelChangeEventListener = Event.debounce<void, void>(\n\t\t\tEvent.any(\n\t\t\t\tthis._notebookKernelService.onDidChangeSourceActions,\n\t\t\t\tthis._notebookKernelService.onDidAddKernel,\n\t\t\t\tthis._notebookKernelService.onDidRemoveKernel,\n\t\t\t\tthis._notebookKernelService.onDidChangeNotebookAffinity\n\t\t\t),\n\t\t\t(last, _current) => last,\n\t\t\tKERNEL_PICKER_UPDATE_DEBOUNCE\n\t\t)(async () => {\n\t\t\t// reset quick pick progress\n\t\t\tquickPick.busy = false;\n\t\t\textensionRecommendataionPromise?.cancel();\n\n\t\t\tconst currentActiveItems = quickPick.activeItems;\n\t\t\tconst matchResult = this._getMatchingResult(notebook);\n\t\t\tconst quickPickItems = this._getKernelPickerQuickPickItems(notebook, matchResult, this._notebookKernelService, scopedContextKeyService);\n\t\t\tquickPick.keepScrollPosition = true;\n\n\t\t\t// recalcuate active items\n\t\t\tconst activeItems: KernelQuickPickItem[] = [];\n\t\t\tfor (const item of currentActiveItems) {\n\t\t\t\tif (isKernelPick(item)) {\n\t\t\t\t\tconst kernelId = item.kernel.id;\n\t\t\t\t\tconst sameItem = quickPickItems.find(pi => isKernelPick(pi) && pi.kernel.id === kernelId) as KernelPick | undefined;\n\t\t\t\t\tif (sameItem) {\n\t\t\t\t\t\tactiveItems.push(sameItem);\n\t\t\t\t\t}\n\t\t\t\t} else if (isSourcePick(item)) {\n\t\t\t\t\tconst sameItem = quickPickItems.find(pi => isSourcePick(pi) && pi.action.action.id === item.action.action.id) as SourcePick | undefined;\n\t\t\t\t\tif (sameItem) {\n\t\t\t\t\t\tactiveItems.push(sameItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tquickPick.items = quickPickItems;\n\t\t\tquickPick.activeItems = activeItems;\n\t\t}, this);\n\n\t\tconst pick = await new Promise<{ selected: KernelQuickPickItem | undefined; items: KernelQuickPickItem[] }>((resolve, reject) => {\n\t\t\tlocalDisposableStore.add(quickPick.onDidAccept(() => {\n\t\t\t\tconst item = quickPick.selectedItems[0];\n\t\t\t\tif (item) {\n\t\t\t\t\tresolve({ selected: item, items: quickPick.items as KernelQuickPickItem[] });\n\t\t\t\t} else {\n\t\t\t\t\tresolve({ selected: undefined, items: quickPick.items as KernelQuickPickItem[] });\n\t\t\t\t}\n\n\t\t\t\tquickPick.hide();\n\t\t\t}));\n\n\t\t\tlocalDisposableStore.add(quickPick.onDidHide(() => {\n\t\t\t\tkernelDetectionTaskListener.dispose();\n\t\t\t\tkernelChangeEventListener.dispose();\n\t\t\t\tquickPick.dispose();\n\t\t\t\tresolve({ selected: undefined, items: quickPick.items as KernelQuickPickItem[] });\n\t\t\t}));\n\t\t\tquickPick.show();\n\t\t});\n\n\t\tlocalDisposableStore.dispose();\n\n\t\tif (pick.selected) {\n\t\t\treturn await this._handleQuickPick(editor, pick.selected, pick.items);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprotected _getMatchingResult(notebook: NotebookTextModel) {\n\t\treturn this._notebookKernelService.getMatchingKernel(notebook);\n\t}\n\n\tprotected abstract _getKernelPickerQuickPickItems(\n\t\tnotebookTextModel: NotebookTextModel,\n\t\tmatchResult: INotebookKernelMatchResult,\n\t\tnotebookKernelService: INotebookKernelService,\n\t\tscopedContextKeyService: IContextKeyService\n\t): QuickPickInput<KernelQuickPickItem>[];\n\n\tprotected async _handleQuickPick(editor: IActiveNotebookEditor, pick: KernelQuickPickItem, quickPickItems: KernelQuickPickItem[]): Promise<boolean> {\n\t\tif (isKernelPick(pick)) {\n\t\t\tconst newKernel = pick.kernel;\n\t\t\tthis._selecteKernel(editor.textModel, newKernel);\n\t\t\treturn true;\n\t\t}\n\n\t\t// actions\n\t\tif (isSearchMarketplacePick(pick)) {\n\t\t\tawait this._showKernelExtension(\n\t\t\t\tthis._extensionWorkbenchService,\n\t\t\t\tthis._extensionService,\n\t\t\t\teditor.textModel.viewType,\n\t\t\t\t[]\n\t\t\t);\n\t\t\t// suggestedExtension must be defined for this option to be shown, but still check to make TS happy\n\t\t} else if (isInstallExtensionPick(pick)) {\n\t\t\tawait this._showKernelExtension(\n\t\t\t\tthis._extensionWorkbenchService,\n\t\t\t\tthis._extensionService,\n\t\t\t\teditor.textModel.viewType,\n\t\t\t\tpick.extensionIds,\n\t\t\t\tthis._productService.quality !== 'stable'\n\t\t\t);\n\t\t} else if (isSourcePick(pick)) {\n\t\t\t// selected explicilty, it should trigger the execution?\n\t\t\tpick.action.runAction();\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprotected _selecteKernel(notebook: NotebookTextModel, kernel: INotebookKernel) {\n\t\tthis._notebookKernelService.selectKernelForNotebook(kernel, notebook);\n\t}\n\n\tprotected async _showKernelExtension(\n\t\textensionWorkbenchService: IExtensionsWorkbenchService,\n\t\textensionService: IExtensionService,\n\t\tviewType: string,\n\t\textIds: string[],\n\t\tisInsiders?: boolean\n\t) {\n\t\t// If extension id is provided attempt to install the extension as the user has requested the suggested ones be installed\n\t\tconst extensionsToInstall: IExtension[] = [];\n\t\tconst extensionsToEnable: IExtension[] = [];\n\n\t\tfor (const extId of extIds) {\n\t\t\tconst extension = (await extensionWorkbenchService.getExtensions([{ id: extId }], CancellationToken.None))[0];\n\t\t\tif (extension.enablementState === EnablementState.DisabledGlobally || extension.enablementState === EnablementState.DisabledWorkspace || extension.enablementState === EnablementState.DisabledByEnvironment) {\n\t\t\t\textensionsToEnable.push(extension);\n\t\t\t} else {\n\t\t\t\tconst canInstall = await extensionWorkbenchService.canInstall(extension);\n\t\t\t\tif (canInstall) {\n\t\t\t\t\textensionsToInstall.push(extension);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (extensionsToInstall.length || extensionsToEnable.length) {\n\t\t\tawait Promise.all([...extensionsToInstall.map(async extension => {\n\t\t\t\tawait extensionWorkbenchService.install(\n\t\t\t\t\textension,\n\t\t\t\t\t{\n\t\t\t\t\t\tinstallPreReleaseVersion: isInsiders ?? false,\n\t\t\t\t\t\tcontext: { skipWalkthrough: true }\n\t\t\t\t\t},\n\t\t\t\t\tProgressLocation.Notification\n\t\t\t\t);\n\t\t\t}), ...extensionsToEnable.map(async extension => {\n\t\t\t\tswitch (extension.enablementState) {\n\t\t\t\t\tcase EnablementState.DisabledWorkspace:\n\t\t\t\t\t\tawait extensionWorkbenchService.setEnablement([extension], EnablementState.EnabledWorkspace);\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase EnablementState.DisabledGlobally:\n\t\t\t\t\t\tawait extensionWorkbenchService.setEnablement([extension], EnablementState.EnabledGlobally);\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase EnablementState.DisabledByEnvironment:\n\t\t\t\t\t\tawait extensionWorkbenchService.setEnablement([extension], EnablementState.EnabledByEnvironment);\n\t\t\t\t\t\treturn;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t})]);\n\n\t\t\tawait extensionService.activateByEvent(`onNotebook:${viewType}`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst pascalCased = viewType.split(/[^a-z0-9]/ig).map(uppercaseFirstLetter).join('');\n\t\tawait extensionWorkbenchService.openSearch(`@tag:notebookKernel${pascalCased}`);\n\t}\n\n\tprivate async _showInstallKernelExtensionRecommendation(\n\t\tnotebookTextModel: NotebookTextModel,\n\t\tquickPick: IQuickPick<KernelQuickPickItem, { useSeparators: true }>,\n\t\textensionWorkbenchService: IExtensionsWorkbenchService,\n\t\ttoken: CancellationToken\n\t) {\n\t\tquickPick.busy = true;\n\n\t\tconst newQuickPickItems = await this._getKernelRecommendationsQuickPickItems(notebookTextModel, extensionWorkbenchService);\n\t\tquickPick.busy = false;\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (newQuickPickItems && quickPick.items.length === 0) {\n\t\t\tquickPick.items = newQuickPickItems;\n\t\t}\n\t}\n\n\tprotected async _getKernelRecommendationsQuickPickItems(\n\t\tnotebookTextModel: NotebookTextModel,\n\t\textensionWorkbenchService: IExtensionsWorkbenchService,\n\t): Promise<QuickPickInput<SearchMarketplacePick | InstallExtensionPick>[] | undefined> {\n\t\tconst quickPickItems: QuickPickInput<SearchMarketplacePick | InstallExtensionPick>[] = [];\n\n\t\tconst language = this.getSuggestedLanguage(notebookTextModel);\n\t\tconst suggestedExtension: INotebookExtensionRecommendation | undefined = language ? this.getSuggestedKernelFromLanguage(notebookTextModel.viewType, language) : undefined;\n\t\tif (suggestedExtension) {\n\t\t\tawait extensionWorkbenchService.queryLocal();\n\n\t\t\tconst extensions = extensionWorkbenchService.installed.filter(e =>\n\t\t\t\t(e.enablementState === EnablementState.EnabledByEnvironment || e.enablementState === EnablementState.EnabledGlobally || e.enablementState === EnablementState.EnabledWorkspace)\n\t\t\t\t&& suggestedExtension.extensionIds.includes(e.identifier.id)\n\t\t\t);\n\n\t\t\tif (extensions.length === suggestedExtension.extensionIds.length) {\n\t\t\t\t// it's installed but might be detecting kernels\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\t// We have a suggested kernel, show an option to install it\n\t\t\tquickPickItems.push({\n\t\t\t\tid: 'installSuggested',\n\t\t\t\tdescription: suggestedExtension.displayName ?? suggestedExtension.extensionIds.join(', '),\n\t\t\t\tlabel: `$(${Codicon.lightbulb.id}) ` + localize('installSuggestedKernel', 'Install/Enable suggested extensions'),\n\t\t\t\textensionIds: suggestedExtension.extensionIds\n\t\t\t} satisfies InstallExtensionPick);\n\t\t}\n\t\t// there is no kernel, show the install from marketplace\n\t\tquickPickItems.push({\n\t\t\tid: 'install',\n\t\t\tlabel: localize('searchForKernels', \"Browse marketplace for kernel extensions\"),\n\t\t} satisfies SearchMarketplacePick);\n\n\t\treturn quickPickItems;\n\t}\n\n\t/**\n\t * Examine the most common language in the notebook\n\t * @param notebookTextModel The notebook text model\n\t * @returns What the suggested language is for the notebook. Used for kernal installing\n\t */\n\tprivate getSuggestedLanguage(notebookTextModel: NotebookTextModel): string | undefined {\n\t\tconst metaData = notebookTextModel.metadata;\n\t\tlet suggestedKernelLanguage: string | undefined = (metaData as any)?.metadata?.language_info?.name;\n\t\t// TODO how do we suggest multi language notebooks?\n\t\tif (!suggestedKernelLanguage) {\n\t\t\tconst cellLanguages = notebookTextModel.cells.map(cell => cell.language).filter(language => language !== 'markdown');\n\t\t\t// Check if cell languages is all the same\n\t\t\tif (cellLanguages.length > 1) {\n\t\t\t\tconst firstLanguage = cellLanguages[0];\n\t\t\t\tif (cellLanguages.every(language => language === firstLanguage)) {\n\t\t\t\t\tsuggestedKernelLanguage = firstLanguage;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn suggestedKernelLanguage;\n\t}\n\n\t/**\n\t * Given a language and notebook view type suggest a kernel for installation\n\t * @param language The language to find a suggested kernel extension for\n\t * @returns A recommednation object for the recommended extension, else undefined\n\t */\n\tprivate getSuggestedKernelFromLanguage(viewType: string, language: string): INotebookExtensionRecommendation | undefined {\n\t\tconst recommendation = KERNEL_RECOMMENDATIONS.get(viewType)?.get(language);\n\t\treturn recommendation;\n\t}\n}\n\nexport class KernelPickerMRUStrategy extends KernelPickerStrategyBase {\n\tconstructor(\n\t\t@INotebookKernelService _notebookKernelService: INotebookKernelService,\n\t\t@IProductService _productService: IProductService,\n\t\t@IQuickInputService _quickInputService: IQuickInputService,\n\t\t@ILabelService _labelService: ILabelService,\n\t\t@ILogService _logService: ILogService,\n\t\t@IExtensionsWorkbenchService _extensionWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IExtensionService _extensionService: IExtensionService,\n\t\t@ICommandService _commandService: ICommandService,\n\t\t@INotebookKernelHistoryService private readonly _notebookKernelHistoryService: INotebookKernelHistoryService,\n\t\t@IOpenerService private readonly _openerService: IOpenerService\n\n\t) {\n\t\tsuper(\n\t\t\t_notebookKernelService,\n\t\t\t_productService,\n\t\t\t_quickInputService,\n\t\t\t_labelService,\n\t\t\t_logService,\n\t\t\t_extensionWorkbenchService,\n\t\t\t_extensionService,\n\t\t\t_commandService,\n\t\t);\n\t}\n\n\tprotected _getKernelPickerQuickPickItems(notebookTextModel: NotebookTextModel, matchResult: INotebookKernelMatchResult, notebookKernelService: INotebookKernelService, scopedContextKeyService: IContextKeyService): QuickPickInput<KernelQuickPickItem>[] {\n\t\tconst quickPickItems: QuickPickInput<KernelQuickPickItem>[] = [];\n\n\t\tif (matchResult.selected) {\n\t\t\tconst kernelItem = toKernelQuickPick(matchResult.selected, matchResult.selected);\n\t\t\tquickPickItems.push(kernelItem);\n\t\t}\n\n\t\tmatchResult.suggestions.filter(kernel => kernel.id !== matchResult.selected?.id).map(kernel => toKernelQuickPick(kernel, matchResult.selected))\n\t\t\t.forEach(kernel => {\n\t\t\t\tquickPickItems.push(kernel);\n\t\t\t});\n\n\t\tconst shouldAutoRun = quickPickItems.length === 0;\n\n\t\tif (quickPickItems.length > 0) {\n\t\t\tquickPickItems.push({\n\t\t\t\ttype: 'separator'\n\t\t\t});\n\t\t}\n\n\t\t// select another kernel quick pick\n\t\tquickPickItems.push({\n\t\t\tid: 'selectAnother',\n\t\t\tlabel: localize('selectAnotherKernel.more', \"Select Another Kernel...\"),\n\t\t\tautoRun: shouldAutoRun\n\t\t});\n\n\t\treturn quickPickItems;\n\t}\n\n\tprotected override _selecteKernel(notebook: NotebookTextModel, kernel: INotebookKernel): void {\n\t\tconst currentInfo = this._notebookKernelService.getMatchingKernel(notebook);\n\t\tif (currentInfo.selected) {\n\t\t\t// there is already a selected kernel\n\t\t\tthis._notebookKernelHistoryService.addMostRecentKernel(currentInfo.selected);\n\t\t}\n\t\tsuper._selecteKernel(notebook, kernel);\n\t\tthis._notebookKernelHistoryService.addMostRecentKernel(kernel);\n\t}\n\n\tprotected override _getMatchingResult(notebook: NotebookTextModel): INotebookKernelMatchResult {\n\t\tconst { selected, all } = this._notebookKernelHistoryService.getKernels(notebook);\n\t\tconst matchingResult = this._notebookKernelService.getMatchingKernel(notebook);\n\t\treturn {\n\t\t\tselected: selected,\n\t\t\tall: matchingResult.all,\n\t\t\tsuggestions: all,\n\t\t\thidden: []\n\t\t};\n\t}\n\n\tprotected override async _handleQuickPick(editor: IActiveNotebookEditor, pick: KernelQuickPickItem, items: KernelQuickPickItem[]): Promise<boolean> {\n\t\tif (pick.id === 'selectAnother') {\n\t\t\treturn this.displaySelectAnotherQuickPick(editor, items.length === 1 && items[0] === pick);\n\t\t}\n\n\t\treturn super._handleQuickPick(editor, pick, items);\n\t}\n\n\tprivate async displaySelectAnotherQuickPick(editor: IActiveNotebookEditor, kernelListEmpty: boolean): Promise<boolean> {\n\t\tconst notebook: NotebookTextModel = editor.textModel;\n\t\tconst disposables = new DisposableStore();\n\t\tconst quickPick = disposables.add(this._quickInputService.createQuickPick<KernelQuickPickItem>({ useSeparators: true }));\n\t\tconst quickPickItem = await new Promise<KernelQuickPickItem | IQuickInputButton | undefined>(resolve => {\n\t\t\t// select from kernel sources\n\t\t\tquickPick.title = kernelListEmpty ? localize('select', \"Select Kernel\") : localize('selectAnotherKernel', \"Select Another Kernel\");\n\t\t\tquickPick.placeholder = localize('selectKernel.placeholder', \"Type to choose a kernel source\");\n\t\t\tquickPick.busy = true;\n\t\t\tquickPick.buttons = [this._quickInputService.backButton];\n\t\t\tquickPick.show();\n\n\t\t\tdisposables.add(quickPick.onDidTriggerButton(button => {\n\t\t\t\tif (button === this._quickInputService.backButton) {\n\t\t\t\t\tresolve(button);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tdisposables.add(quickPick.onDidTriggerItemButton(async (e) => {\n\t\t\t\tif (isKernelSourceQuickPickItem(e.item) && e.item.documentation !== undefined) {\n\t\t\t\t\tconst uri = URI.isUri(e.item.documentation) ? URI.parse(e.item.documentation) : await this._commandService.executeCommand(e.item.documentation);\n\t\t\t\t\tvoid this._openerService.open(uri, { openExternal: true });\n\t\t\t\t}\n\t\t\t}));\n\t\t\tdisposables.add(quickPick.onDidAccept(async () => {\n\t\t\t\tresolve(quickPick.selectedItems[0]);\n\t\t\t}));\n\t\t\tdisposables.add(quickPick.onDidHide(() => {\n\t\t\t\tresolve(undefined);\n\t\t\t}));\n\n\t\t\tthis._calculdateKernelSources(editor).then(quickPickItems => {\n\t\t\t\tquickPick.items = quickPickItems;\n\t\t\t\tif (quickPick.items.length > 0) {\n\t\t\t\t\tquickPick.busy = false;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tdisposables.add(Event.debounce<void, void>(\n\t\t\t\tEvent.any(\n\t\t\t\t\tthis._notebookKernelService.onDidChangeSourceActions,\n\t\t\t\t\tthis._notebookKernelService.onDidAddKernel,\n\t\t\t\t\tthis._notebookKernelService.onDidRemoveKernel\n\t\t\t\t),\n\t\t\t\t(last, _current) => last,\n\t\t\t\tKERNEL_PICKER_UPDATE_DEBOUNCE\n\t\t\t)(async () => {\n\t\t\t\tquickPick.busy = true;\n\t\t\t\tconst quickPickItems = await this._calculdateKernelSources(editor);\n\t\t\t\tquickPick.items = quickPickItems;\n\t\t\t\tquickPick.busy = false;\n\t\t\t}));\n\t\t});\n\n\t\tquickPick.hide();\n\t\tdisposables.dispose();\n\n\t\tif (quickPickItem === this._quickInputService.backButton) {\n\t\t\treturn this.showQuickPick(editor, undefined, true);\n\t\t}\n\n\t\tif (quickPickItem) {\n\t\t\tconst selectedKernelPickItem = quickPickItem as KernelQuickPickItem;\n\t\t\tif (isKernelSourceQuickPickItem(selectedKernelPickItem)) {\n\t\t\t\ttry {\n\t\t\t\t\tconst selectedKernelId = await this._executeCommand<string>(notebook, selectedKernelPickItem.command);\n\t\t\t\t\tif (selectedKernelId) {\n\t\t\t\t\t\tconst { all } = await this._getMatchingResult(notebook);\n\t\t\t\t\t\tconst kernel = all.find(kernel => kernel.id === `ms-toolsai.jupyter/${selectedKernelId}`);\n\t\t\t\t\t\tif (kernel) {\n\t\t\t\t\t\t\tawait this._selecteKernel(notebook, kernel);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this.displaySelectAnotherQuickPick(editor, false);\n\t\t\t\t\t}\n\t\t\t\t} catch (ex) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (isKernelPick(selectedKernelPickItem)) {\n\t\t\t\tawait this._selecteKernel(notebook, selectedKernelPickItem.kernel);\n\t\t\t\treturn true;\n\t\t\t} else if (isGroupedKernelsPick(selectedKernelPickItem)) {\n\t\t\t\tawait this._selectOneKernel(notebook, selectedKernelPickItem.label, selectedKernelPickItem.kernels);\n\t\t\t\treturn true;\n\t\t\t} else if (isSourcePick(selectedKernelPickItem)) {\n\t\t\t\t// selected explicilty, it should trigger the execution?\n\t\t\t\ttry {\n\t\t\t\t\tawait selectedKernelPickItem.action.runAction();\n\t\t\t\t\treturn true;\n\t\t\t\t} catch (ex) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (isSearchMarketplacePick(selectedKernelPickItem)) {\n\t\t\t\tawait this._showKernelExtension(\n\t\t\t\t\tthis._extensionWorkbenchService,\n\t\t\t\t\tthis._extensionService,\n\t\t\t\t\teditor.textModel.viewType,\n\t\t\t\t\t[]\n\t\t\t\t);\n\t\t\t\treturn true;\n\t\t\t} else if (isInstallExtensionPick(selectedKernelPickItem)) {\n\t\t\t\tawait this._showKernelExtension(\n\t\t\t\t\tthis._extensionWorkbenchService,\n\t\t\t\t\tthis._extensionService,\n\t\t\t\t\teditor.textModel.viewType,\n\t\t\t\t\tselectedKernelPickItem.extensionIds,\n\t\t\t\t\tthis._productService.quality !== 'stable'\n\t\t\t\t);\n\t\t\t\treturn this.displaySelectAnotherQuickPick(editor, false);\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate async _calculdateKernelSources(editor: IActiveNotebookEditor) {\n\t\tconst notebook: NotebookTextModel = editor.textModel;\n\n\t\tconst sourceActionCommands = this._notebookKernelService.getSourceActions(notebook, editor.scopedContextKeyService);\n\t\tconst actions = await this._notebookKernelService.getKernelSourceActions2(notebook);\n\t\tconst matchResult = this._getMatchingResult(notebook);\n\n\t\tif (sourceActionCommands.length === 0 && matchResult.all.length === 0 && actions.length === 0) {\n\t\t\treturn await this._getKernelRecommendationsQuickPickItems(notebook, this._extensionWorkbenchService) ?? [];\n\t\t}\n\n\t\tconst others = matchResult.all.filter(item => item.extension.value !== JUPYTER_EXTENSION_ID);\n\t\tconst quickPickItems: QuickPickInput<KernelQuickPickItem>[] = [];\n\n\t\t// group controllers by extension\n\t\tfor (const group of groupBy(others, (a, b) => a.extension.value === b.extension.value ? 0 : 1)) {\n\t\t\tconst extension = this._extensionService.extensions.find(extension => extension.identifier.value === group[0].extension.value);\n\t\t\tconst source = extension?.displayName ?? extension?.description ?? group[0].extension.value;\n\t\t\tif (group.length > 1) {\n\t\t\t\tquickPickItems.push({\n\t\t\t\t\tlabel: source,\n\t\t\t\t\tkernels: group\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tquickPickItems.push({\n\t\t\t\t\tlabel: group[0].label,\n\t\t\t\t\tkernel: group[0]\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tconst validActions = actions.filter(action => action.command);\n\n\t\tquickPickItems.push(...validActions.map(action => {\n\t\t\tconst buttons = action.documentation ? [{\n\t\t\t\ticonClass: ThemeIcon.asClassName(Codicon.info),\n\t\t\t\ttooltip: localize('learnMoreTooltip', 'Learn More'),\n\t\t\t}] : [];\n\t\t\treturn {\n\t\t\t\tid: typeof action.command! === 'string' ? action.command : action.command!.id,\n\t\t\t\tlabel: action.label,\n\t\t\t\tdescription: action.description,\n\t\t\t\tcommand: action.command,\n\t\t\t\tdocumentation: action.documentation,\n\t\t\t\tbuttons\n\t\t\t};\n\t\t}));\n\n\t\tfor (const sourceAction of sourceActionCommands) {\n\t\t\tconst res: SourcePick = {\n\t\t\t\taction: sourceAction,\n\t\t\t\tpicked: false,\n\t\t\t\tlabel: sourceAction.action.label,\n\t\t\t\ttooltip: sourceAction.action.tooltip\n\t\t\t};\n\n\t\t\tquickPickItems.push(res);\n\t\t}\n\n\t\treturn quickPickItems;\n\t}\n\n\tprivate async _selectOneKernel(notebook: NotebookTextModel, source: string, kernels: INotebookKernel[]) {\n\t\tconst quickPickItems: QuickPickInput<KernelPick>[] = kernels.map(kernel => toKernelQuickPick(kernel, undefined));\n\t\tconst localDisposableStore = new DisposableStore();\n\t\tconst quickPick = localDisposableStore.add(this._quickInputService.createQuickPick<KernelQuickPickItem>({ useSeparators: true }));\n\t\tquickPick.items = quickPickItems;\n\t\tquickPick.canSelectMany = false;\n\n\t\tquickPick.title = localize('selectKernelFromExtension', \"Select Kernel from {0}\", source);\n\n\t\tlocalDisposableStore.add(quickPick.onDidAccept(async () => {\n\t\t\tif (quickPick.selectedItems && quickPick.selectedItems.length > 0 && isKernelPick(quickPick.selectedItems[0])) {\n\t\t\t\tawait this._selecteKernel(notebook, quickPick.selectedItems[0].kernel);\n\t\t\t}\n\n\t\t\tquickPick.hide();\n\t\t\tquickPick.dispose();\n\t\t}));\n\n\t\tlocalDisposableStore.add(quickPick.onDidHide(() => {\n\t\t\tlocalDisposableStore.dispose();\n\t\t}));\n\n\t\tquickPick.show();\n\t}\n\n\tprivate async _executeCommand<T>(notebook: NotebookTextModel, command: string | Command): Promise<T | undefined | void> {\n\t\tconst id = typeof command === 'string' ? command : command.id;\n\t\tconst args = typeof command === 'string' ? [] : command.arguments ?? [];\n\n\t\tif (typeof command === 'string' || !command.arguments || !Array.isArray(command.arguments) || command.arguments.length === 0) {\n\t\t\targs.unshift({\n\t\t\t\turi: notebook.uri,\n\t\t\t\t$mid: MarshalledId.NotebookActionContext\n\t\t\t});\n\t\t}\n\n\t\tif (typeof command === 'string') {\n\t\t\treturn this._commandService.executeCommand(id);\n\t\t} else {\n\t\t\treturn this._commandService.executeCommand(id, ...args);\n\t\t}\n\t}\n\n\tstatic updateKernelStatusAction(notebook: NotebookTextModel, action: IAction, notebookKernelService: INotebookKernelService, notebookKernelHistoryService: INotebookKernelHistoryService) {\n\t\tconst detectionTasks = notebookKernelService.getKernelDetectionTasks(notebook);\n\t\tif (detectionTasks.length) {\n\t\t\tconst info = notebookKernelService.getMatchingKernel(notebook);\n\t\t\taction.enabled = true;\n\t\t\taction.class = ThemeIcon.asClassName(ThemeIcon.modify(executingStateIcon, 'spin'));\n\n\t\t\tif (info.selected) {\n\t\t\t\taction.label = info.selected.label;\n\t\t\t\tconst kernelInfo = info.selected.description ?? info.selected.detail;\n\t\t\t\taction.tooltip = kernelInfo\n\t\t\t\t\t? localize('kernels.selectedKernelAndKernelDetectionRunning', \"Selected Kernel: {0} (Kernel Detection Tasks Running)\", kernelInfo)\n\t\t\t\t\t: localize('kernels.detecting', \"Detecting Kernels\");\n\t\t\t} else {\n\t\t\t\taction.label = localize('kernels.detecting', \"Detecting Kernels\");\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tconst runningActions = notebookKernelService.getRunningSourceActions(notebook);\n\n\t\tconst updateActionFromSourceAction = (sourceAction: ISourceAction, running: boolean) => {\n\t\t\tconst sAction = sourceAction.action;\n\t\t\taction.class = running ? ThemeIcon.asClassName(ThemeIcon.modify(executingStateIcon, 'spin')) : ThemeIcon.asClassName(selectKernelIcon);\n\t\t\taction.label = sAction.label;\n\t\t\taction.enabled = true;\n\t\t};\n\n\t\tif (runningActions.length) {\n\t\t\treturn updateActionFromSourceAction(runningActions[0] /** TODO handle multiple actions state */, true);\n\t\t}\n\n\t\tconst { selected } = notebookKernelHistoryService.getKernels(notebook);\n\n\t\tif (selected) {\n\t\t\taction.label = selected.label;\n\t\t\taction.class = ThemeIcon.asClassName(selectKernelIcon);\n\t\t\taction.tooltip = selected.description ?? selected.detail ?? '';\n\t\t} else {\n\t\t\taction.label = localize('select', \"Select Kernel\");\n\t\t\taction.class = ThemeIcon.asClassName(selectKernelIcon);\n\t\t\taction.tooltip = '';\n\t\t}\n\t}\n\n\tstatic async resolveKernel(notebook: INotebookTextModel, notebookKernelService: INotebookKernelService, notebookKernelHistoryService: INotebookKernelHistoryService, commandService: ICommandService): Promise<INotebookKernel | undefined> {\n\t\tconst alreadySelected = notebookKernelHistoryService.getKernels(notebook);\n\n\t\tif (alreadySelected.selected) {\n\t\t\treturn alreadySelected.selected;\n\t\t}\n\n\t\tawait commandService.executeCommand(SELECT_KERNEL_ID);\n\t\tconst { selected } = notebookKernelHistoryService.getKernels(notebook);\n\t\treturn selected;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["matchResult", "quickPickItems", "kernel", "extension"]
}
