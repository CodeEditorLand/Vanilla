import"../../../../../../vs/base/common/uri.js";import"../../../../../../vs/editor/common/core/range.js";import"../../../../../../vs/editor/common/core/selection.js";import{UndoRedoElementType as i}from"../../../../../../vs/platform/undoRedo/common/undoRedo.js";import{CellFocusMode as t}from"../../../../../../vs/workbench/contrib/notebook/browser/notebookBrowser.js";import"../../../../../../vs/workbench/contrib/notebook/browser/viewModel/baseCellViewModel.js";import"../../../../../../vs/workbench/contrib/notebook/common/model/cellEdit.js";import"../../../../../../vs/workbench/contrib/notebook/common/model/notebookCellTextModel.js";import{SelectionStateType as l}from"../../../../../../vs/workbench/contrib/notebook/common/notebookCommon.js";class N{constructor(e,d,n,r,s,a,c,m,p){this.resource=e;this.index=d;this.direction=n;this.cell=r;this.selections=s;this.inverseRange=a;this.insertContent=c;this.removedCell=m;this.editingDelegate=p;this._deletedRawCell=this.removedCell.model}type=i.Resource;label="Join Cell";code="undoredo.textBufferEdit";_deletedRawCell;async undo(){if(!this.editingDelegate.insertCell||!this.editingDelegate.createCellViewModel)throw new Error("Notebook Insert Cell not implemented for Undo/Redo");await this.cell.resolveTextModel(),this.cell.textModel?.applyEdits([{range:this.inverseRange,text:""}]),this.cell.setSelections(this.selections);const e=this.editingDelegate.createCellViewModel(this._deletedRawCell);this.direction==="above"?(this.editingDelegate.insertCell(this.index,this._deletedRawCell,{kind:l.Handle,primary:e.handle,selections:[e.handle]}),e.focusMode=t.Editor):(this.editingDelegate.insertCell(this.index,e.model,{kind:l.Handle,primary:this.cell.handle,selections:[this.cell.handle]}),this.cell.focusMode=t.Editor)}async redo(){if(!this.editingDelegate.deleteCell)throw new Error("Notebook Delete Cell not implemented for Undo/Redo");await this.cell.resolveTextModel(),this.cell.textModel?.applyEdits([{range:this.inverseRange,text:this.insertContent}]),this.editingDelegate.deleteCell(this.index,{kind:l.Handle,primary:this.cell.handle,selections:[this.cell.handle]}),this.cell.focusMode=t.Editor}}export{N as JoinCellEdit};
