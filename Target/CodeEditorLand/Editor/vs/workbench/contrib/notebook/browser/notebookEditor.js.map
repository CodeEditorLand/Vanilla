{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/notebookEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from \"../../../../base/browser/dom.js\";\nimport type { IActionViewItemOptions } from \"../../../../base/browser/ui/actionbar/actionViewItems.js\";\nimport type { IActionViewItem } from \"../../../../base/browser/ui/actionbar/actionbar.js\";\nimport { type IAction, toAction } from \"../../../../base/common/actions.js\";\nimport { timeout } from \"../../../../base/common/async.js\";\nimport { streamToBuffer } from \"../../../../base/common/buffer.js\";\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { Emitter, type Event } from \"../../../../base/common/event.js\";\nimport {\n\tDisposableStore,\n\tMutableDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { extname, isEqual } from \"../../../../base/common/resources.js\";\nimport { StopWatch } from \"../../../../base/common/stopwatch.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { generateUuid } from \"../../../../base/common/uuid.js\";\nimport type { Selection } from \"../../../../editor/common/core/selection.js\";\nimport { ITextResourceConfigurationService } from \"../../../../editor/common/services/textResourceConfiguration.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport type { IEditorOptions } from \"../../../../platform/editor/common/editor.js\";\nimport {\n\tByteSize,\n\ttype FileOperationError,\n\tFileOperationResult,\n\tIFileService,\n\tTooLargeFileOperationError,\n} from \"../../../../platform/files/common/files.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { IEditorProgressService } from \"../../../../platform/progress/common/progress.js\";\nimport { IStorageService } from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport { EditorPane } from \"../../../browser/parts/editor/editorPane.js\";\nimport {\n\tDEFAULT_EDITOR_ASSOCIATION,\n\tEditorPaneSelectionChangeReason,\n\tEditorPaneSelectionCompareResult,\n\tEditorResourceAccessor,\n\ttype IEditorMemento,\n\ttype IEditorOpenContext,\n\ttype IEditorPaneScrollPosition,\n\ttype IEditorPaneSelection,\n\ttype IEditorPaneSelectionChangeEvent,\n\ttype IEditorPaneWithScrolling,\n\tcreateEditorOpenError,\n\tcreateTooLargeFileError,\n\tisEditorOpenError,\n} from \"../../../common/editor.js\";\nimport type { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport {\n\tGroupsOrder,\n\ttype IEditorGroup,\n\tIEditorGroupsService,\n} from \"../../../services/editor/common/editorGroupsService.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { EnablementState } from \"../../../services/extensionManagement/common/extensionManagement.js\";\nimport { IPreferencesService } from \"../../../services/preferences/common/preferences.js\";\nimport { IWorkingCopyBackupService } from \"../../../services/workingCopy/common/workingCopyBackup.js\";\nimport { InstallRecommendedExtensionAction } from \"../../extensions/browser/extensionsActions.js\";\nimport { IExtensionsWorkbenchService } from \"../../extensions/common/extensions.js\";\nimport type { NotebookTextModel } from \"../common/model/notebookTextModel.js\";\nimport {\n\tCellKind,\n\tNOTEBOOK_EDITOR_ID,\n\tNotebookWorkingCopyTypeIdentifier,\n} from \"../common/notebookCommon.js\";\nimport { NotebookEditorInput } from \"../common/notebookEditorInput.js\";\nimport { NotebookPerfMarks } from \"../common/notebookPerformance.js\";\nimport { INotebookService } from \"../common/notebookService.js\";\nimport { INotebookEditorWorkerService } from \"../common/services/notebookWorkerService.js\";\nimport { SELECT_KERNEL_ID } from \"./controller/coreActions.js\";\nimport type {\n\tINotebookEditorOptions,\n\tINotebookEditorPane,\n\tINotebookEditorViewState,\n} from \"./notebookBrowser.js\";\nimport type { NotebookEditorWidget } from \"./notebookEditorWidget.js\";\nimport {\n\ttype IBorrowValue,\n\tINotebookEditorService,\n} from \"./services/notebookEditorService.js\";\nimport { NotebooKernelActionViewItem } from \"./viewParts/notebookKernelView.js\";\n\nconst NOTEBOOK_EDITOR_VIEW_STATE_PREFERENCE_KEY = \"NotebookEditorViewState\";\n\nexport class NotebookEditor\n\textends EditorPane\n\timplements INotebookEditorPane, IEditorPaneWithScrolling\n{\n\tstatic readonly ID: string = NOTEBOOK_EDITOR_ID;\n\n\tprivate readonly _editorMemento: IEditorMemento<INotebookEditorViewState>;\n\tprivate readonly _groupListener = this._register(new DisposableStore());\n\tprivate readonly _widgetDisposableStore: DisposableStore = this._register(\n\t\tnew DisposableStore(),\n\t);\n\tprivate _widget: IBorrowValue<NotebookEditorWidget> = { value: undefined };\n\tprivate _rootElement!: HTMLElement;\n\tprivate _pagePosition?: {\n\t\treadonly dimension: DOM.Dimension;\n\t\treadonly position: DOM.IDomPosition;\n\t};\n\n\tprivate readonly _inputListener = this._register(new MutableDisposable());\n\n\t// override onDidFocus and onDidBlur to be based on the NotebookEditorWidget element\n\tprivate readonly _onDidFocusWidget = this._register(new Emitter<void>());\n\toverride get onDidFocus(): Event<void> {\n\t\treturn this._onDidFocusWidget.event;\n\t}\n\tprivate readonly _onDidBlurWidget = this._register(new Emitter<void>());\n\toverride get onDidBlur(): Event<void> {\n\t\treturn this._onDidBlurWidget.event;\n\t}\n\n\tprivate readonly _onDidChangeModel = this._register(new Emitter<void>());\n\treadonly onDidChangeModel: Event<void> = this._onDidChangeModel.event;\n\n\tprivate readonly _onDidChangeSelection = this._register(\n\t\tnew Emitter<IEditorPaneSelectionChangeEvent>(),\n\t);\n\treadonly onDidChangeSelection = this._onDidChangeSelection.event;\n\n\tprotected readonly _onDidChangeScroll = this._register(new Emitter<void>());\n\treadonly onDidChangeScroll = this._onDidChangeScroll.event;\n\n\tconstructor(\n\t\tgroup: IEditorGroup,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IEditorGroupsService private readonly _editorGroupService: IEditorGroupsService,\n\t\t@INotebookEditorService private readonly _notebookWidgetService: INotebookEditorService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@ITextResourceConfigurationService configurationService: ITextResourceConfigurationService,\n\t\t@IEditorProgressService private readonly _editorProgressService: IEditorProgressService,\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t\t@IExtensionsWorkbenchService private readonly _extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IWorkingCopyBackupService private readonly _workingCopyBackupService: IWorkingCopyBackupService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@INotebookEditorWorkerService private readonly _notebookEditorWorkerService: INotebookEditorWorkerService,\n\t\t@IPreferencesService private readonly _preferencesService: IPreferencesService\n\t) {\n\t\tsuper(NotebookEditor.ID, group, telemetryService, themeService, storageService);\n\t\tthis._editorMemento = this.getEditorMemento<INotebookEditorViewState>(_editorGroupService, configurationService, NOTEBOOK_EDITOR_VIEW_STATE_PREFERENCE_KEY);\n\n\t\tthis._register(this._fileService.onDidChangeFileSystemProviderCapabilities(e => this._onDidChangeFileSystemProvider(e.scheme)));\n\t\tthis._register(this._fileService.onDidChangeFileSystemProviderRegistrations(e => this._onDidChangeFileSystemProvider(e.scheme)));\n\t}\n\n\tprivate _onDidChangeFileSystemProvider(scheme: string): void {\n\t\tif (\n\t\t\tthis.input instanceof NotebookEditorInput &&\n\t\t\tthis.input.resource?.scheme === scheme\n\t\t) {\n\t\t\tthis._updateReadonly(this.input);\n\t\t}\n\t}\n\n\tprivate _onDidChangeInputCapabilities(input: NotebookEditorInput): void {\n\t\tif (this.input === input) {\n\t\t\tthis._updateReadonly(input);\n\t\t}\n\t}\n\n\tprivate _updateReadonly(input: NotebookEditorInput): void {\n\t\tthis._widget.value?.setOptions({ isReadOnly: !!input.isReadonly() });\n\t}\n\n\tget textModel(): NotebookTextModel | undefined {\n\t\treturn this._widget.value?.textModel;\n\t}\n\n\toverride get minimumWidth(): number {\n\t\treturn 220;\n\t}\n\toverride get maximumWidth(): number {\n\t\treturn Number.POSITIVE_INFINITY;\n\t}\n\n\t// these setters need to exist because this extends from EditorPane\n\toverride set minimumWidth(value: number) {\n\t\t/*noop*/\n\t}\n\toverride set maximumWidth(value: number) {\n\t\t/*noop*/\n\t}\n\n\t//#region Editor Core\n\toverride get scopedContextKeyService(): IContextKeyService | undefined {\n\t\treturn this._widget.value?.scopedContextKeyService;\n\t}\n\n\tprotected createEditor(parent: HTMLElement): void {\n\t\tthis._rootElement = DOM.append(parent, DOM.$(\".notebook-editor\"));\n\t\tthis._rootElement.id = `notebook-editor-element-${generateUuid()}`;\n\t}\n\n\toverride getActionViewItem(\n\t\taction: IAction,\n\t\toptions: IActionViewItemOptions,\n\t): IActionViewItem | undefined {\n\t\tif (action.id === SELECT_KERNEL_ID) {\n\t\t\t// this is being disposed by the consumer\n\t\t\treturn this._instantiationService.createInstance(\n\t\t\t\tNotebooKernelActionViewItem,\n\t\t\t\taction,\n\t\t\t\tthis,\n\t\t\t\toptions,\n\t\t\t);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\toverride getControl(): NotebookEditorWidget | undefined {\n\t\treturn this._widget.value;\n\t}\n\n\toverride setVisible(visible: boolean): void {\n\t\tsuper.setVisible(visible);\n\t\tif (!visible) {\n\t\t\tthis._widget.value?.onWillHide();\n\t\t}\n\t}\n\n\tprotected override setEditorVisible(visible: boolean): void {\n\t\tsuper.setEditorVisible(visible);\n\t\tthis._groupListener.clear();\n\t\tthis._groupListener.add(\n\t\t\tthis.group.onWillCloseEditor((e) =>\n\t\t\t\tthis._saveEditorViewState(e.editor),\n\t\t\t),\n\t\t);\n\t\tthis._groupListener.add(\n\t\t\tthis.group.onDidModelChange(() => {\n\t\t\t\tif (this._editorGroupService.activeGroup !== this.group) {\n\t\t\t\t\tthis._widget?.value?.updateEditorFocus();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tif (!visible) {\n\t\t\tthis._saveEditorViewState(this.input);\n\t\t\tif (this.input && this._widget.value) {\n\t\t\t\t// the widget is not transfered to other editor inputs\n\t\t\t\tthis._widget.value.onWillHide();\n\t\t\t}\n\t\t}\n\t}\n\n\toverride focus() {\n\t\tsuper.focus();\n\t\tthis._widget.value?.focus();\n\t}\n\n\toverride hasFocus(): boolean {\n\t\tconst value = this._widget.value;\n\t\tif (!value) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn (\n\t\t\t!!value &&\n\t\t\tDOM.isAncestorOfActiveElement(\n\t\t\t\tvalue.getDomNode() ||\n\t\t\t\t\tDOM.isAncestorOfActiveElement(\n\t\t\t\t\t\tvalue.getOverflowContainerDomNode(),\n\t\t\t\t\t),\n\t\t\t)\n\t\t);\n\t}\n\n\toverride async setInput(\n\t\tinput: NotebookEditorInput,\n\t\toptions: INotebookEditorOptions | undefined,\n\t\tcontext: IEditorOpenContext,\n\t\ttoken: CancellationToken,\n\t\tnoRetry?: boolean,\n\t): Promise<void> {\n\t\ttry {\n\t\t\tlet perfMarksCaptured = false;\n\t\t\tconst fileOpenMonitor = timeout(10000);\n\t\t\tfileOpenMonitor.then(() => {\n\t\t\t\tperfMarksCaptured = true;\n\t\t\t\tthis._handlePerfMark(perf, input);\n\t\t\t});\n\n\t\t\tconst perf = new NotebookPerfMarks();\n\t\t\tperf.mark(\"startTime\");\n\n\t\t\tthis._inputListener.value = input.onDidChangeCapabilities(() =>\n\t\t\t\tthis._onDidChangeInputCapabilities(input),\n\t\t\t);\n\n\t\t\tthis._widgetDisposableStore.clear();\n\n\t\t\t// there currently is a widget which we still own so\n\t\t\t// we need to hide it before getting a new widget\n\t\t\tthis._widget.value?.onWillHide();\n\n\t\t\tthis._widget = <IBorrowValue<NotebookEditorWidget>>(\n\t\t\t\tthis._instantiationService.invokeFunction(\n\t\t\t\t\tthis._notebookWidgetService.retrieveWidget,\n\t\t\t\t\tthis.group.id,\n\t\t\t\t\tinput,\n\t\t\t\t\tundefined,\n\t\t\t\t\tthis._pagePosition?.dimension,\n\t\t\t\t\tthis.window,\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tif (this._rootElement && this._widget.value!.getDomNode()) {\n\t\t\t\tthis._rootElement.setAttribute(\n\t\t\t\t\t\"aria-flowto\",\n\t\t\t\t\tthis._widget.value!.getDomNode().id || \"\",\n\t\t\t\t);\n\t\t\t\tDOM.setParentFlowTo(\n\t\t\t\t\tthis._widget.value!.getDomNode(),\n\t\t\t\t\tthis._rootElement,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis._widgetDisposableStore.add(\n\t\t\t\tthis._widget.value!.onDidChangeModel(() =>\n\t\t\t\t\tthis._onDidChangeModel.fire(),\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis._widgetDisposableStore.add(\n\t\t\t\tthis._widget.value!.onDidChangeActiveCell(() =>\n\t\t\t\t\tthis._onDidChangeSelection.fire({\n\t\t\t\t\t\treason: EditorPaneSelectionChangeReason.USER,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tif (this._pagePosition) {\n\t\t\t\tthis._widget.value!.layout(\n\t\t\t\t\tthis._pagePosition.dimension,\n\t\t\t\t\tthis._rootElement,\n\t\t\t\t\tthis._pagePosition.position,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// only now `setInput` and yield/await. this is AFTER the actual widget is ready. This is very important\n\t\t\t// so that others synchronously receive a notebook editor with the correct widget being set\n\t\t\tawait super.setInput(input, options, context, token);\n\t\t\tconst model = await input.resolve(options, perf);\n\t\t\tperf.mark(\"inputLoaded\");\n\n\t\t\t// Check for cancellation\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\t// The widget has been taken away again. This can happen when the tab has been closed while\n\t\t\t// loading was in progress, in particular when open the same resource as different view type.\n\t\t\t// When this happen, retry once\n\t\t\tif (!this._widget.value) {\n\t\t\t\tif (noRetry) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn this.setInput(input, options, context, token, true);\n\t\t\t}\n\n\t\t\tif (model === null) {\n\t\t\t\tconst knownProvider = this._notebookService.getViewTypeProvider(\n\t\t\t\t\tinput.viewType,\n\t\t\t\t);\n\n\t\t\t\tif (!knownProvider) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\"fail.noEditor\",\n\t\t\t\t\t\t\t\"Cannot open resource with notebook editor type '{0}', please check if you have the right extension installed and enabled.\",\n\t\t\t\t\t\t\tinput.viewType,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tawait this._extensionsWorkbenchService.whenInitialized;\n\t\t\t\tconst extensionInfo =\n\t\t\t\t\tthis._extensionsWorkbenchService.local.find(\n\t\t\t\t\t\t(e) => e.identifier.id === knownProvider,\n\t\t\t\t\t);\n\n\t\t\t\tthrow createEditorOpenError(\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\"fail.noEditor.extensionMissing\",\n\t\t\t\t\t\t\t\"Cannot open resource with notebook editor type '{0}', please check if you have the right extension installed and enabled.\",\n\t\t\t\t\t\t\tinput.viewType,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\t[\n\t\t\t\t\t\ttoAction({\n\t\t\t\t\t\t\tid: \"workbench.notebook.action.installOrEnableMissing\",\n\t\t\t\t\t\t\tlabel: extensionInfo\n\t\t\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\t\t\"notebookOpenEnableMissingViewType\",\n\t\t\t\t\t\t\t\t\t\t\"Enable extension for '{0}'\",\n\t\t\t\t\t\t\t\t\t\tinput.viewType,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\t\t\"notebookOpenInstallMissingViewType\",\n\t\t\t\t\t\t\t\t\t\t\"Install extension for '{0}'\",\n\t\t\t\t\t\t\t\t\t\tinput.viewType,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\trun: async () => {\n\t\t\t\t\t\t\t\tconst d = this._notebookService.onAddViewType(\n\t\t\t\t\t\t\t\t\t(viewType) => {\n\t\t\t\t\t\t\t\t\t\tif (viewType === input.viewType) {\n\t\t\t\t\t\t\t\t\t\t\t// serializer is registered, try to open again\n\t\t\t\t\t\t\t\t\t\t\tthis._editorService.openEditor({\n\t\t\t\t\t\t\t\t\t\t\t\tresource: input.resource,\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\td.dispose();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconst extensionInfo =\n\t\t\t\t\t\t\t\t\tthis._extensionsWorkbenchService.local.find(\n\t\t\t\t\t\t\t\t\t\t(e) =>\n\t\t\t\t\t\t\t\t\t\t\te.identifier.id === knownProvider,\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tif (extensionInfo) {\n\t\t\t\t\t\t\t\t\t\tawait this._extensionsWorkbenchService.setEnablement(\n\t\t\t\t\t\t\t\t\t\t\textensionInfo,\n\t\t\t\t\t\t\t\t\t\t\textensionInfo.enablementState ===\n\t\t\t\t\t\t\t\t\t\t\t\tEnablementState.DisabledWorkspace\n\t\t\t\t\t\t\t\t\t\t\t\t? EnablementState.EnabledWorkspace\n\t\t\t\t\t\t\t\t\t\t\t\t: EnablementState.EnabledGlobally,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tawait this._instantiationService\n\t\t\t\t\t\t\t\t\t\t\t.createInstance(\n\t\t\t\t\t\t\t\t\t\t\t\tInstallRecommendedExtensionAction,\n\t\t\t\t\t\t\t\t\t\t\t\tknownProvider,\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t.run();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\t\t\t\tthis.logService.error(\n\t\t\t\t\t\t\t\t\t\t`Failed to install or enable extension ${knownProvider}`,\n\t\t\t\t\t\t\t\t\t\tex,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\td.dispose();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}),\n\t\t\t\t\t\ttoAction({\n\t\t\t\t\t\t\tid: \"workbench.notebook.action.openAsText\",\n\t\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\t\"notebookOpenAsText\",\n\t\t\t\t\t\t\t\t\"Open As Text\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\trun: async () => {\n\t\t\t\t\t\t\t\tconst backup =\n\t\t\t\t\t\t\t\t\tawait this._workingCopyBackupService.resolve(\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tresource: input.resource,\n\t\t\t\t\t\t\t\t\t\t\ttypeId: NotebookWorkingCopyTypeIdentifier.create(\n\t\t\t\t\t\t\t\t\t\t\t\tinput.viewType,\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (backup) {\n\t\t\t\t\t\t\t\t\t// with a backup present, we must resort to opening the backup contents\n\t\t\t\t\t\t\t\t\t// as untitled text file to not show the wrong data to the user\n\t\t\t\t\t\t\t\t\tconst contents = await streamToBuffer(\n\t\t\t\t\t\t\t\t\t\tbackup.value,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis._editorService.openEditor({\n\t\t\t\t\t\t\t\t\t\tresource: undefined,\n\t\t\t\t\t\t\t\t\t\tcontents: contents.toString(),\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// without a backup present, we can open the original resource\n\t\t\t\t\t\t\t\t\tthis._editorService.openEditor({\n\t\t\t\t\t\t\t\t\t\tresource: input.resource,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\toverride:\n\t\t\t\t\t\t\t\t\t\t\t\tDEFAULT_EDITOR_ASSOCIATION.id,\n\t\t\t\t\t\t\t\t\t\t\tpinned: true,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}),\n\t\t\t\t\t],\n\t\t\t\t\t{ allowDialog: true },\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis._widgetDisposableStore.add(\n\t\t\t\tmodel.notebook.onDidChangeContent(() =>\n\t\t\t\t\tthis._onDidChangeSelection.fire({\n\t\t\t\t\t\treason: EditorPaneSelectionChangeReason.EDIT,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tconst viewState =\n\t\t\t\toptions?.viewState ?? this._loadNotebookEditorViewState(input);\n\n\t\t\t// We might be moving the notebook widget between groups, and these services are tied to the group\n\t\t\tthis._widget.value.setParentContextKeyService(\n\t\t\t\tthis._contextKeyService,\n\t\t\t);\n\t\t\tthis._widget.value.setEditorProgressService(\n\t\t\t\tthis._editorProgressService,\n\t\t\t);\n\n\t\t\tawait this._widget.value.setModel(model.notebook, viewState, perf);\n\t\t\tconst isReadOnly = !!input.isReadonly();\n\t\t\tawait this._widget.value.setOptions({ ...options, isReadOnly });\n\t\t\tthis._widgetDisposableStore.add(\n\t\t\t\tthis._widget.value.onDidFocusWidget(() =>\n\t\t\t\t\tthis._onDidFocusWidget.fire(),\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis._widgetDisposableStore.add(\n\t\t\t\tthis._widget.value.onDidBlurWidget(() =>\n\t\t\t\t\tthis._onDidBlurWidget.fire(),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tthis._widgetDisposableStore.add(\n\t\t\t\tthis._editorGroupService.createEditorDropTarget(\n\t\t\t\t\tthis._widget.value.getDomNode(),\n\t\t\t\t\t{\n\t\t\t\t\t\tcontainsGroup: (group) => this.group.id === group.id,\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tthis._widgetDisposableStore.add(\n\t\t\t\tthis._widget.value.onDidScroll(() => {\n\t\t\t\t\tthis._onDidChangeScroll.fire();\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tperf.mark(\"editorLoaded\");\n\n\t\t\tfileOpenMonitor.cancel();\n\t\t\tif (perfMarksCaptured) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._handlePerfMark(perf, input, model.notebook);\n\t\t\tthis._handlePromptRecommendations(model.notebook);\n\t\t} catch (e) {\n\t\t\tthis.logService.warn(\"NotebookEditorWidget#setInput failed\", e);\n\t\t\tif (isEditorOpenError(e)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\t// Handle case where a file is too large to open without confirmation\n\t\t\tif (\n\t\t\t\t(<FileOperationError>e).fileOperationResult ===\n\t\t\t\tFileOperationResult.FILE_TOO_LARGE\n\t\t\t) {\n\t\t\t\tlet message: string;\n\t\t\t\tif (e instanceof TooLargeFileOperationError) {\n\t\t\t\t\tmessage = localize(\n\t\t\t\t\t\t\"notebookTooLargeForHeapErrorWithSize\",\n\t\t\t\t\t\t\"The notebook is not displayed in the notebook editor because it is very large ({0}).\",\n\t\t\t\t\t\tByteSize.formatSize(e.size),\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tmessage = localize(\n\t\t\t\t\t\t\"notebookTooLargeForHeapErrorWithoutSize\",\n\t\t\t\t\t\t\"The notebook is not displayed in the notebook editor because it is very large.\",\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthrow createTooLargeFileError(\n\t\t\t\t\tthis.group,\n\t\t\t\t\tinput,\n\t\t\t\t\toptions,\n\t\t\t\t\tmessage,\n\t\t\t\t\tthis._preferencesService,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst error = createEditorOpenError(\n\t\t\t\te instanceof Error ? e : new Error(e ? e.message : \"\"),\n\t\t\t\t[\n\t\t\t\t\ttoAction({\n\t\t\t\t\t\tid: \"workbench.notebook.action.openInTextEditor\",\n\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\"notebookOpenInTextEditor\",\n\t\t\t\t\t\t\t\"Open in Text Editor\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\trun: async () => {\n\t\t\t\t\t\t\tconst activeEditorPane =\n\t\t\t\t\t\t\t\tthis._editorService.activeEditorPane;\n\t\t\t\t\t\t\tif (!activeEditorPane) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst activeEditorResource =\n\t\t\t\t\t\t\t\tEditorResourceAccessor.getCanonicalUri(\n\t\t\t\t\t\t\t\t\tactiveEditorPane.input,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (!activeEditorResource) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tactiveEditorResource.toString() ===\n\t\t\t\t\t\t\t\tinput.resource?.toString()\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t// Replace the current editor with the text editor\n\t\t\t\t\t\t\t\treturn this._editorService.openEditor({\n\t\t\t\t\t\t\t\t\tresource: activeEditorResource,\n\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\toverride: DEFAULT_EDITOR_ASSOCIATION.id,\n\t\t\t\t\t\t\t\t\t\tpinned: true, // new file gets pinned by default\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t\t{ allowDialog: true },\n\t\t\t);\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate _handlePerfMark(\n\t\tperf: NotebookPerfMarks,\n\t\tinput: NotebookEditorInput,\n\t\tnotebook?: NotebookTextModel,\n\t) {\n\t\tconst perfMarks = perf.value;\n\n\t\ttype WorkbenchNotebookOpenClassification = {\n\t\t\towner: \"rebornix\";\n\t\t\tcomment: \"The notebook file open metrics. Used to get a better understanding of the performance of notebook file opening\";\n\t\t\tscheme: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"File system provider scheme for the notebook resource\";\n\t\t\t};\n\t\t\text: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"File extension for the notebook resource\";\n\t\t\t};\n\t\t\tviewType: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"The view type of the notebook editor\";\n\t\t\t};\n\t\t\textensionActivated: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Extension activation time for the resource opening\";\n\t\t\t};\n\t\t\tinputLoaded: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Editor Input loading time for the resource opening\";\n\t\t\t};\n\t\t\twebviewCommLoaded: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Webview initialization time for the resource opening\";\n\t\t\t};\n\t\t\tcustomMarkdownLoaded: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Custom markdown loading time for the resource opening\";\n\t\t\t};\n\t\t\teditorLoaded: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Overall editor loading time for the resource opening\";\n\t\t\t};\n\t\t\tcodeCellCount: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Total number of code cell\";\n\t\t\t};\n\t\t\tmdCellCount: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Total number of markdown cell\";\n\t\t\t};\n\t\t\toutputCount: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Total number of cell outputs\";\n\t\t\t};\n\t\t\toutputBytes: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Total number of bytes for all outputs\";\n\t\t\t};\n\t\t\tcodeLength: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Length of text in all code cells\";\n\t\t\t};\n\t\t\tmarkdownLength: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Length of text in all markdown cells\";\n\t\t\t};\n\t\t\tnotebookStatsLoaded: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Time for generating the notebook level information for telemetry\";\n\t\t\t};\n\t\t};\n\n\t\ttype WorkbenchNotebookOpenEvent = {\n\t\t\tscheme: string;\n\t\t\text: string;\n\t\t\tviewType: string;\n\t\t\textensionActivated: number;\n\t\t\tinputLoaded: number;\n\t\t\twebviewCommLoaded: number;\n\t\t\tcustomMarkdownLoaded: number | undefined;\n\t\t\teditorLoaded: number;\n\t\t\tcodeCellCount: number | undefined;\n\t\t\tmdCellCount: number | undefined;\n\t\t\toutputCount: number | undefined;\n\t\t\toutputBytes: number | undefined;\n\t\t\tcodeLength: number | undefined;\n\t\t\tmarkdownLength: number | undefined;\n\t\t\tnotebookStatsLoaded: number | undefined;\n\t\t};\n\n\t\tconst startTime = perfMarks[\"startTime\"];\n\t\tconst extensionActivated = perfMarks[\"extensionActivated\"];\n\t\tconst inputLoaded = perfMarks[\"inputLoaded\"];\n\t\tconst webviewCommLoaded = perfMarks[\"webviewCommLoaded\"];\n\t\tconst customMarkdownLoaded = perfMarks[\"customMarkdownLoaded\"];\n\t\tconst editorLoaded = perfMarks[\"editorLoaded\"];\n\n\t\tlet extensionActivationTimespan = -1;\n\t\tlet inputLoadingTimespan = -1;\n\t\tlet webviewCommLoadingTimespan = -1;\n\t\tlet customMarkdownLoadingTimespan = -1;\n\t\tlet editorLoadingTimespan = -1;\n\n\t\tif (startTime !== undefined && extensionActivated !== undefined) {\n\t\t\textensionActivationTimespan = extensionActivated - startTime;\n\n\t\t\tif (inputLoaded !== undefined) {\n\t\t\t\tinputLoadingTimespan = inputLoaded - extensionActivated;\n\t\t\t}\n\n\t\t\tif (webviewCommLoaded !== undefined) {\n\t\t\t\twebviewCommLoadingTimespan =\n\t\t\t\t\twebviewCommLoaded - extensionActivated;\n\t\t\t}\n\n\t\t\tif (customMarkdownLoaded !== undefined) {\n\t\t\t\tcustomMarkdownLoadingTimespan =\n\t\t\t\t\tcustomMarkdownLoaded - startTime;\n\t\t\t}\n\n\t\t\tif (editorLoaded !== undefined) {\n\t\t\t\teditorLoadingTimespan = editorLoaded - startTime;\n\t\t\t}\n\t\t}\n\n\t\t// Notebook information\n\t\tlet codeCellCount: number | undefined;\n\t\tlet mdCellCount: number | undefined;\n\t\tlet outputCount: number | undefined;\n\t\tlet outputBytes: number | undefined;\n\t\tlet codeLength: number | undefined;\n\t\tlet markdownLength: number | undefined;\n\t\tlet notebookStatsLoaded: number | undefined;\n\t\tif (notebook) {\n\t\t\tconst stopWatch = new StopWatch();\n\t\t\tfor (const cell of notebook.cells) {\n\t\t\t\tif (cell.cellKind === CellKind.Code) {\n\t\t\t\t\tcodeCellCount = (codeCellCount || 0) + 1;\n\t\t\t\t\tcodeLength = (codeLength || 0) + cell.getTextLength();\n\t\t\t\t\toutputCount = (outputCount || 0) + cell.outputs.length;\n\t\t\t\t\toutputBytes =\n\t\t\t\t\t\t(outputBytes || 0) +\n\t\t\t\t\t\tcell.outputs.reduce(\n\t\t\t\t\t\t\t(prev, cur) =>\n\t\t\t\t\t\t\t\tprev +\n\t\t\t\t\t\t\t\tcur.outputs.reduce(\n\t\t\t\t\t\t\t\t\t(size, item) => size + item.data.byteLength,\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tmdCellCount = (mdCellCount || 0) + 1;\n\t\t\t\t\tmarkdownLength = (codeLength || 0) + cell.getTextLength();\n\t\t\t\t}\n\t\t\t}\n\t\t\tnotebookStatsLoaded = stopWatch.elapsed();\n\t\t}\n\n\t\tthis.logService.trace(\n\t\t\t`[NotebookEditor] open notebook perf ${notebook?.uri.toString() ?? \"\"} - extensionActivation: ${extensionActivationTimespan}, inputLoad: ${inputLoadingTimespan}, webviewComm: ${webviewCommLoadingTimespan}, customMarkdown: ${customMarkdownLoadingTimespan}, editorLoad: ${editorLoadingTimespan}`,\n\t\t);\n\n\t\tthis.telemetryService.publicLog2<\n\t\t\tWorkbenchNotebookOpenEvent,\n\t\t\tWorkbenchNotebookOpenClassification\n\t\t>(\"notebook/editorOpenPerf\", {\n\t\t\tscheme: input.resource.scheme,\n\t\t\text: extname(input.resource),\n\t\t\tviewType: input.viewType,\n\t\t\textensionActivated: extensionActivationTimespan,\n\t\t\tinputLoaded: inputLoadingTimespan,\n\t\t\twebviewCommLoaded: webviewCommLoadingTimespan,\n\t\t\tcustomMarkdownLoaded: customMarkdownLoadingTimespan,\n\t\t\teditorLoaded: editorLoadingTimespan,\n\t\t\tcodeCellCount,\n\t\t\tmdCellCount,\n\t\t\toutputCount,\n\t\t\toutputBytes,\n\t\t\tcodeLength,\n\t\t\tmarkdownLength,\n\t\t\tnotebookStatsLoaded,\n\t\t});\n\t}\n\n\tprivate _handlePromptRecommendations(model: NotebookTextModel) {\n\t\tthis._notebookEditorWorkerService\n\t\t\t.canPromptRecommendation(model.uri)\n\t\t\t.then((shouldPrompt) => {\n\t\t\t\ttype WorkbenchNotebookShouldPromptRecommendationClassification =\n\t\t\t\t\t{\n\t\t\t\t\t\towner: \"rebornix\";\n\t\t\t\t\t\tcomment: \"The notebook file metrics. Used to get a better understanding of if we should prompt for notebook extension recommendations\";\n\t\t\t\t\t\tshouldPrompt: {\n\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\t\t\tcomment: \"Should we prompt for notebook extension recommendations\";\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\n\t\t\t\ttype WorkbenchNotebookShouldPromptRecommendationEvent = {\n\t\t\t\t\tshouldPrompt: boolean;\n\t\t\t\t};\n\n\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\tWorkbenchNotebookShouldPromptRecommendationEvent,\n\t\t\t\t\tWorkbenchNotebookShouldPromptRecommendationClassification\n\t\t\t\t>(\"notebook/shouldPromptRecommendation\", {\n\t\t\t\t\tshouldPrompt: shouldPrompt,\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\toverride clearInput(): void {\n\t\tthis._inputListener.clear();\n\n\t\tif (this._widget.value) {\n\t\t\tthis._saveEditorViewState(this.input);\n\t\t\tthis._widget.value.onWillHide();\n\t\t}\n\t\tsuper.clearInput();\n\t}\n\n\toverride setOptions(options: INotebookEditorOptions | undefined): void {\n\t\tthis._widget.value?.setOptions(options);\n\t\tsuper.setOptions(options);\n\t}\n\n\tprotected override saveState(): void {\n\t\tthis._saveEditorViewState(this.input);\n\t\tsuper.saveState();\n\t}\n\n\toverride getViewState(): INotebookEditorViewState | undefined {\n\t\tconst input = this.input;\n\t\tif (!(input instanceof NotebookEditorInput)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis._saveEditorViewState(input);\n\t\treturn this._loadNotebookEditorViewState(input);\n\t}\n\n\tgetSelection(): IEditorPaneSelection | undefined {\n\t\tif (this._widget.value) {\n\t\t\tconst activeCell = this._widget.value.getActiveCell();\n\t\t\tif (activeCell) {\n\t\t\t\tconst cellUri = activeCell.uri;\n\t\t\t\treturn new NotebookEditorSelection(\n\t\t\t\t\tcellUri,\n\t\t\t\t\tactiveCell.getSelections(),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tgetScrollPosition(): IEditorPaneScrollPosition {\n\t\tconst widget = this.getControl();\n\t\tif (!widget) {\n\t\t\tthrow new Error(\"Notebook widget has not yet been initialized\");\n\t\t}\n\n\t\treturn {\n\t\t\tscrollTop: widget.scrollTop,\n\t\t\tscrollLeft: 0,\n\t\t};\n\t}\n\n\tsetScrollPosition(scrollPosition: IEditorPaneScrollPosition): void {\n\t\tconst editor = this.getControl();\n\t\tif (!editor) {\n\t\t\tthrow new Error(\"Control has not yet been initialized\");\n\t\t}\n\n\t\teditor.setScrollTop(scrollPosition.scrollTop);\n\t}\n\n\tprivate _saveEditorViewState(input: EditorInput | undefined): void {\n\t\tif (this._widget.value && input instanceof NotebookEditorInput) {\n\t\t\tif (this._widget.value.isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst state = this._widget.value.getEditorViewState();\n\t\t\tthis._editorMemento.saveEditorState(\n\t\t\t\tthis.group,\n\t\t\t\tinput.resource,\n\t\t\t\tstate,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _loadNotebookEditorViewState(\n\t\tinput: NotebookEditorInput,\n\t): INotebookEditorViewState | undefined {\n\t\tconst result = this._editorMemento.loadEditorState(\n\t\t\tthis.group,\n\t\t\tinput.resource,\n\t\t);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\t// when we don't have a view state for the group/input-tuple then we try to use an existing\n\t\t// editor for the same resource.\n\t\tfor (const group of this._editorGroupService.getGroups(\n\t\t\tGroupsOrder.MOST_RECENTLY_ACTIVE,\n\t\t)) {\n\t\t\tif (\n\t\t\t\tgroup.activeEditorPane !== this &&\n\t\t\t\tgroup.activeEditorPane instanceof NotebookEditor &&\n\t\t\t\tgroup.activeEditor?.matches(input)\n\t\t\t) {\n\t\t\t\treturn group.activeEditorPane._widget.value?.getEditorViewState();\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tlayout(dimension: DOM.Dimension, position: DOM.IDomPosition): void {\n\t\tthis._rootElement.classList.toggle(\n\t\t\t\"mid-width\",\n\t\t\tdimension.width < 1000 && dimension.width >= 600,\n\t\t);\n\t\tthis._rootElement.classList.toggle(\n\t\t\t\"narrow-width\",\n\t\t\tdimension.width < 600,\n\t\t);\n\t\tthis._pagePosition = { dimension, position };\n\n\t\tif (\n\t\t\t!this._widget.value ||\n\t\t\t!(this.input instanceof NotebookEditorInput)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tthis.input.resource.toString() !== this.textModel?.uri.toString() &&\n\t\t\tthis._widget.value?.hasModel()\n\t\t) {\n\t\t\t// input and widget mismatch\n\t\t\t// this happens when\n\t\t\t// 1. open document A, pin the document\n\t\t\t// 2. open document B\n\t\t\t// 3. close document B\n\t\t\t// 4. a layout is triggered\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.isVisible()) {\n\t\t\tthis._widget.value.layout(dimension, this._rootElement, position);\n\t\t}\n\t}\n\n\t//#endregion\n}\n\nclass NotebookEditorSelection implements IEditorPaneSelection {\n\tconstructor(\n\t\tprivate readonly cellUri: URI,\n\t\tprivate readonly selections: Selection[],\n\t) {}\n\n\tcompare(other: IEditorPaneSelection): EditorPaneSelectionCompareResult {\n\t\tif (!(other instanceof NotebookEditorSelection)) {\n\t\t\treturn EditorPaneSelectionCompareResult.DIFFERENT;\n\t\t}\n\n\t\tif (isEqual(this.cellUri, other.cellUri)) {\n\t\t\treturn EditorPaneSelectionCompareResult.IDENTICAL;\n\t\t}\n\n\t\treturn EditorPaneSelectionCompareResult.DIFFERENT;\n\t}\n\n\trestore(options: IEditorOptions): INotebookEditorOptions {\n\t\tconst notebookOptions: INotebookEditorOptions = {\n\t\t\tcellOptions: {\n\t\t\t\tresource: this.cellUri,\n\t\t\t\toptions: {\n\t\t\t\t\tselection: this.selections[0],\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\tObject.assign(notebookOptions, options);\n\n\t\treturn notebookOptions;\n\t}\n\n\tlog(): string {\n\t\treturn this.cellUri.fragment;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["extensionInfo"]
}
