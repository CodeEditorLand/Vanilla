{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/notebookEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from '../../../../base/browser/dom.js';\nimport { IActionViewItem } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { IAction, toAction } from '../../../../base/common/actions.js';\nimport { timeout } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { DisposableStore, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { extname, isEqual } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { generateUuid } from '../../../../base/common/uuid.js';\nimport { ITextResourceConfigurationService } from '../../../../editor/common/services/textResourceConfiguration.js';\nimport { localize } from '../../../../nls.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IEditorOptions } from '../../../../platform/editor/common/editor.js';\nimport { ByteSize, FileOperationError, FileOperationResult, IFileService, TooLargeFileOperationError } from '../../../../platform/files/common/files.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { Selection } from '../../../../editor/common/core/selection.js';\nimport { EditorPane } from '../../../browser/parts/editor/editorPane.js';\nimport { DEFAULT_EDITOR_ASSOCIATION, EditorPaneSelectionChangeReason, EditorPaneSelectionCompareResult, EditorResourceAccessor, IEditorMemento, IEditorOpenContext, IEditorPaneScrollPosition, IEditorPaneSelection, IEditorPaneSelectionChangeEvent, IEditorPaneWithScrolling, createEditorOpenError, createTooLargeFileError, isEditorOpenError } from '../../../common/editor.js';\nimport { EditorInput } from '../../../common/editor/editorInput.js';\nimport { SELECT_KERNEL_ID } from './controller/coreActions.js';\nimport { INotebookEditorOptions, INotebookEditorPane, INotebookEditorViewState } from './notebookBrowser.js';\nimport { IBorrowValue, INotebookEditorService } from './services/notebookEditorService.js';\nimport { NotebookEditorWidget } from './notebookEditorWidget.js';\nimport { NotebooKernelActionViewItem } from './viewParts/notebookKernelView.js';\nimport { NotebookTextModel } from '../common/model/notebookTextModel.js';\nimport { CellKind, NOTEBOOK_EDITOR_ID, NotebookWorkingCopyTypeIdentifier } from '../common/notebookCommon.js';\nimport { NotebookEditorInput } from '../common/notebookEditorInput.js';\nimport { NotebookPerfMarks } from '../common/notebookPerformance.js';\nimport { GroupsOrder, IEditorGroup, IEditorGroupsService } from '../../../services/editor/common/editorGroupsService.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { InstallRecommendedExtensionAction } from '../../extensions/browser/extensionsActions.js';\nimport { INotebookService } from '../common/notebookService.js';\nimport { IExtensionsWorkbenchService } from '../../extensions/common/extensions.js';\nimport { EnablementState } from '../../../services/extensionManagement/common/extensionManagement.js';\nimport { IWorkingCopyBackupService } from '../../../services/workingCopy/common/workingCopyBackup.js';\nimport { streamToBuffer } from '../../../../base/common/buffer.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { INotebookEditorWorkerService } from '../common/services/notebookWorkerService.js';\nimport { IPreferencesService } from '../../../services/preferences/common/preferences.js';\nimport { IActionViewItemOptions } from '../../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\n\nconst NOTEBOOK_EDITOR_VIEW_STATE_PREFERENCE_KEY = 'NotebookEditorViewState';\n\nexport class NotebookEditor extends EditorPane implements INotebookEditorPane, IEditorPaneWithScrolling {\n\tstatic readonly ID: string = NOTEBOOK_EDITOR_ID;\n\n\tprivate readonly _editorMemento: IEditorMemento<INotebookEditorViewState>;\n\tprivate readonly _groupListener = this._register(new DisposableStore());\n\tprivate readonly _widgetDisposableStore: DisposableStore = this._register(new DisposableStore());\n\tprivate _widget: IBorrowValue<NotebookEditorWidget> = { value: undefined };\n\tprivate _rootElement!: HTMLElement;\n\tprivate _pagePosition?: { readonly dimension: DOM.Dimension; readonly position: DOM.IDomPosition };\n\n\tprivate readonly _inputListener = this._register(new MutableDisposable());\n\n\t// override onDidFocus and onDidBlur to be based on the NotebookEditorWidget element\n\tprivate readonly _onDidFocusWidget = this._register(new Emitter<void>());\n\toverride get onDidFocus(): Event<void> { return this._onDidFocusWidget.event; }\n\tprivate readonly _onDidBlurWidget = this._register(new Emitter<void>());\n\toverride get onDidBlur(): Event<void> { return this._onDidBlurWidget.event; }\n\n\tprivate readonly _onDidChangeModel = this._register(new Emitter<void>());\n\treadonly onDidChangeModel: Event<void> = this._onDidChangeModel.event;\n\n\tprivate readonly _onDidChangeSelection = this._register(new Emitter<IEditorPaneSelectionChangeEvent>());\n\treadonly onDidChangeSelection = this._onDidChangeSelection.event;\n\n\tprotected readonly _onDidChangeScroll = this._register(new Emitter<void>());\n\treadonly onDidChangeScroll = this._onDidChangeScroll.event;\n\n\tconstructor(\n\t\tgroup: IEditorGroup,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IEditorGroupsService private readonly _editorGroupService: IEditorGroupsService,\n\t\t@INotebookEditorService private readonly _notebookWidgetService: INotebookEditorService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@ITextResourceConfigurationService configurationService: ITextResourceConfigurationService,\n\t\t@IEditorProgressService private readonly _editorProgressService: IEditorProgressService,\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t\t@IExtensionsWorkbenchService private readonly _extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IWorkingCopyBackupService private readonly _workingCopyBackupService: IWorkingCopyBackupService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@INotebookEditorWorkerService private readonly _notebookEditorWorkerService: INotebookEditorWorkerService,\n\t\t@IPreferencesService private readonly _preferencesService: IPreferencesService\n\t) {\n\t\tsuper(NotebookEditor.ID, group, telemetryService, themeService, storageService);\n\t\tthis._editorMemento = this.getEditorMemento<INotebookEditorViewState>(_editorGroupService, configurationService, NOTEBOOK_EDITOR_VIEW_STATE_PREFERENCE_KEY);\n\n\t\tthis._register(this._fileService.onDidChangeFileSystemProviderCapabilities(e => this._onDidChangeFileSystemProvider(e.scheme)));\n\t\tthis._register(this._fileService.onDidChangeFileSystemProviderRegistrations(e => this._onDidChangeFileSystemProvider(e.scheme)));\n\t}\n\n\tprivate _onDidChangeFileSystemProvider(scheme: string): void {\n\t\tif (this.input instanceof NotebookEditorInput && this.input.resource?.scheme === scheme) {\n\t\t\tthis._updateReadonly(this.input);\n\t\t}\n\t}\n\n\tprivate _onDidChangeInputCapabilities(input: NotebookEditorInput): void {\n\t\tif (this.input === input) {\n\t\t\tthis._updateReadonly(input);\n\t\t}\n\t}\n\n\tprivate _updateReadonly(input: NotebookEditorInput): void {\n\t\tthis._widget.value?.setOptions({ isReadOnly: !!input.isReadonly() });\n\t}\n\n\tget textModel(): NotebookTextModel | undefined {\n\t\treturn this._widget.value?.textModel;\n\t}\n\n\toverride get minimumWidth(): number { return 220; }\n\toverride get maximumWidth(): number { return Number.POSITIVE_INFINITY; }\n\n\t// these setters need to exist because this extends from EditorPane\n\toverride set minimumWidth(value: number) { /*noop*/ }\n\toverride set maximumWidth(value: number) { /*noop*/ }\n\n\t//#region Editor Core\n\toverride get scopedContextKeyService(): IContextKeyService | undefined {\n\t\treturn this._widget.value?.scopedContextKeyService;\n\t}\n\n\tprotected createEditor(parent: HTMLElement): void {\n\t\tthis._rootElement = DOM.append(parent, DOM.$('.notebook-editor'));\n\t\tthis._rootElement.id = `notebook-editor-element-${generateUuid()}`;\n\t}\n\n\toverride getActionViewItem(action: IAction, options: IActionViewItemOptions): IActionViewItem | undefined {\n\t\tif (action.id === SELECT_KERNEL_ID) {\n\t\t\t// this is being disposed by the consumer\n\t\t\treturn this._instantiationService.createInstance(NotebooKernelActionViewItem, action, this, options);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\toverride getControl(): NotebookEditorWidget | undefined {\n\t\treturn this._widget.value;\n\t}\n\n\toverride setVisible(visible: boolean): void {\n\t\tsuper.setVisible(visible);\n\t\tif (!visible) {\n\t\t\tthis._widget.value?.onWillHide();\n\t\t}\n\t}\n\n\tprotected override setEditorVisible(visible: boolean): void {\n\t\tsuper.setEditorVisible(visible);\n\t\tthis._groupListener.clear();\n\t\tthis._groupListener.add(this.group.onWillCloseEditor(e => this._saveEditorViewState(e.editor)));\n\t\tthis._groupListener.add(this.group.onDidModelChange(() => {\n\t\t\tif (this._editorGroupService.activeGroup !== this.group) {\n\t\t\t\tthis._widget?.value?.updateEditorFocus();\n\t\t\t}\n\t\t}));\n\n\t\tif (!visible) {\n\t\t\tthis._saveEditorViewState(this.input);\n\t\t\tif (this.input && this._widget.value) {\n\t\t\t\t// the widget is not transfered to other editor inputs\n\t\t\t\tthis._widget.value.onWillHide();\n\t\t\t}\n\t\t}\n\t}\n\n\toverride focus() {\n\t\tsuper.focus();\n\t\tthis._widget.value?.focus();\n\t}\n\n\toverride hasFocus(): boolean {\n\t\tconst value = this._widget.value;\n\t\tif (!value) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!value && (DOM.isAncestorOfActiveElement(value.getDomNode() || DOM.isAncestorOfActiveElement(value.getOverflowContainerDomNode())));\n\t}\n\n\toverride async setInput(input: NotebookEditorInput, options: INotebookEditorOptions | undefined, context: IEditorOpenContext, token: CancellationToken, noRetry?: boolean): Promise<void> {\n\t\ttry {\n\t\t\tlet perfMarksCaptured = false;\n\t\t\tconst fileOpenMonitor = timeout(10000);\n\t\t\tfileOpenMonitor.then(() => {\n\t\t\t\tperfMarksCaptured = true;\n\t\t\t\tthis._handlePerfMark(perf, input);\n\t\t\t});\n\n\t\t\tconst perf = new NotebookPerfMarks();\n\t\t\tperf.mark('startTime');\n\n\t\t\tthis._inputListener.value = input.onDidChangeCapabilities(() => this._onDidChangeInputCapabilities(input));\n\n\t\t\tthis._widgetDisposableStore.clear();\n\n\t\t\t// there currently is a widget which we still own so\n\t\t\t// we need to hide it before getting a new widget\n\t\t\tthis._widget.value?.onWillHide();\n\n\t\t\tthis._widget = <IBorrowValue<NotebookEditorWidget>>this._instantiationService.invokeFunction(this._notebookWidgetService.retrieveWidget, this.group.id, input, undefined, this._pagePosition?.dimension, this.window);\n\n\t\t\tif (this._rootElement && this._widget.value!.getDomNode()) {\n\t\t\t\tthis._rootElement.setAttribute('aria-flowto', this._widget.value!.getDomNode().id || '');\n\t\t\t\tDOM.setParentFlowTo(this._widget.value!.getDomNode(), this._rootElement);\n\t\t\t}\n\n\t\t\tthis._widgetDisposableStore.add(this._widget.value!.onDidChangeModel(() => this._onDidChangeModel.fire()));\n\t\t\tthis._widgetDisposableStore.add(this._widget.value!.onDidChangeActiveCell(() => this._onDidChangeSelection.fire({ reason: EditorPaneSelectionChangeReason.USER })));\n\n\t\t\tif (this._pagePosition) {\n\t\t\t\tthis._widget.value!.layout(this._pagePosition.dimension, this._rootElement, this._pagePosition.position);\n\t\t\t}\n\n\t\t\t// only now `setInput` and yield/await. this is AFTER the actual widget is ready. This is very important\n\t\t\t// so that others synchronously receive a notebook editor with the correct widget being set\n\t\t\tawait super.setInput(input, options, context, token);\n\t\t\tconst model = await input.resolve(options, perf);\n\t\t\tperf.mark('inputLoaded');\n\n\t\t\t// Check for cancellation\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\t// The widget has been taken away again. This can happen when the tab has been closed while\n\t\t\t// loading was in progress, in particular when open the same resource as different view type.\n\t\t\t// When this happen, retry once\n\t\t\tif (!this._widget.value) {\n\t\t\t\tif (noRetry) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn this.setInput(input, options, context, token, true);\n\t\t\t}\n\n\t\t\tif (model === null) {\n\t\t\t\tconst knownProvider = this._notebookService.getViewTypeProvider(input.viewType);\n\n\t\t\t\tif (!knownProvider) {\n\t\t\t\t\tthrow new Error(localize('fail.noEditor', \"Cannot open resource with notebook editor type '{0}', please check if you have the right extension installed and enabled.\", input.viewType));\n\t\t\t\t}\n\n\t\t\t\tawait this._extensionsWorkbenchService.whenInitialized;\n\t\t\t\tconst extensionInfo = this._extensionsWorkbenchService.local.find(e => e.identifier.id === knownProvider);\n\n\t\t\t\tthrow createEditorOpenError(new Error(localize('fail.noEditor.extensionMissing', \"Cannot open resource with notebook editor type '{0}', please check if you have the right extension installed and enabled.\", input.viewType)), [\n\t\t\t\t\ttoAction({\n\t\t\t\t\t\tid: 'workbench.notebook.action.installOrEnableMissing', label:\n\t\t\t\t\t\t\textensionInfo\n\t\t\t\t\t\t\t\t? localize('notebookOpenEnableMissingViewType', \"Enable extension for '{0}'\", input.viewType)\n\t\t\t\t\t\t\t\t: localize('notebookOpenInstallMissingViewType', \"Install extension for '{0}'\", input.viewType)\n\t\t\t\t\t\t, run: async () => {\n\t\t\t\t\t\t\tconst d = this._notebookService.onAddViewType(viewType => {\n\t\t\t\t\t\t\t\tif (viewType === input.viewType) {\n\t\t\t\t\t\t\t\t\t// serializer is registered, try to open again\n\t\t\t\t\t\t\t\t\tthis._editorService.openEditor({ resource: input.resource });\n\t\t\t\t\t\t\t\t\td.dispose();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconst extensionInfo = this._extensionsWorkbenchService.local.find(e => e.identifier.id === knownProvider);\n\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tif (extensionInfo) {\n\t\t\t\t\t\t\t\t\tawait this._extensionsWorkbenchService.setEnablement(extensionInfo, extensionInfo.enablementState === EnablementState.DisabledWorkspace ? EnablementState.EnabledWorkspace : EnablementState.EnabledGlobally);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tawait this._instantiationService.createInstance(InstallRecommendedExtensionAction, knownProvider).run();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\t\t\tthis.logService.error(`Failed to install or enable extension ${knownProvider}`, ex);\n\t\t\t\t\t\t\t\td.dispose();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\ttoAction({\n\t\t\t\t\t\tid: 'workbench.notebook.action.openAsText', label: localize('notebookOpenAsText', \"Open As Text\"), run: async () => {\n\t\t\t\t\t\t\tconst backup = await this._workingCopyBackupService.resolve({ resource: input.resource, typeId: NotebookWorkingCopyTypeIdentifier.create(input.viewType) });\n\t\t\t\t\t\t\tif (backup) {\n\t\t\t\t\t\t\t\t// with a backup present, we must resort to opening the backup contents\n\t\t\t\t\t\t\t\t// as untitled text file to not show the wrong data to the user\n\t\t\t\t\t\t\t\tconst contents = await streamToBuffer(backup.value);\n\t\t\t\t\t\t\t\tthis._editorService.openEditor({ resource: undefined, contents: contents.toString() });\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// without a backup present, we can open the original resource\n\t\t\t\t\t\t\t\tthis._editorService.openEditor({ resource: input.resource, options: { override: DEFAULT_EDITOR_ASSOCIATION.id, pinned: true } });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t], { allowDialog: true });\n\n\t\t\t}\n\n\t\t\tthis._widgetDisposableStore.add(model.notebook.onDidChangeContent(() => this._onDidChangeSelection.fire({ reason: EditorPaneSelectionChangeReason.EDIT })));\n\n\t\t\tconst viewState = options?.viewState ?? this._loadNotebookEditorViewState(input);\n\n\t\t\t// We might be moving the notebook widget between groups, and these services are tied to the group\n\t\t\tthis._widget.value.setParentContextKeyService(this._contextKeyService);\n\t\t\tthis._widget.value.setEditorProgressService(this._editorProgressService);\n\n\t\t\tawait this._widget.value.setModel(model.notebook, viewState, perf);\n\t\t\tconst isReadOnly = !!input.isReadonly();\n\t\t\tawait this._widget.value.setOptions({ ...options, isReadOnly });\n\t\t\tthis._widgetDisposableStore.add(this._widget.value.onDidFocusWidget(() => this._onDidFocusWidget.fire()));\n\t\t\tthis._widgetDisposableStore.add(this._widget.value.onDidBlurWidget(() => this._onDidBlurWidget.fire()));\n\n\t\t\tthis._widgetDisposableStore.add(this._editorGroupService.createEditorDropTarget(this._widget.value.getDomNode(), {\n\t\t\t\tcontainsGroup: (group) => this.group.id === group.id\n\t\t\t}));\n\n\t\t\tthis._widgetDisposableStore.add(this._widget.value.onDidScroll(() => { this._onDidChangeScroll.fire(); }));\n\n\t\t\tperf.mark('editorLoaded');\n\n\t\t\tfileOpenMonitor.cancel();\n\t\t\tif (perfMarksCaptured) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._handlePerfMark(perf, input, model.notebook);\n\t\t\tthis._handlePromptRecommendations(model.notebook);\n\t\t} catch (e) {\n\t\t\tthis.logService.warn('NotebookEditorWidget#setInput failed', e);\n\t\t\tif (isEditorOpenError(e)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\t// Handle case where a file is too large to open without confirmation\n\t\t\tif ((<FileOperationError>e).fileOperationResult === FileOperationResult.FILE_TOO_LARGE) {\n\t\t\t\tlet message: string;\n\t\t\t\tif (e instanceof TooLargeFileOperationError) {\n\t\t\t\t\tmessage = localize('notebookTooLargeForHeapErrorWithSize', \"The notebook is not displayed in the notebook editor because it is very large ({0}).\", ByteSize.formatSize(e.size));\n\t\t\t\t} else {\n\t\t\t\t\tmessage = localize('notebookTooLargeForHeapErrorWithoutSize', \"The notebook is not displayed in the notebook editor because it is very large.\");\n\t\t\t\t}\n\n\t\t\t\tthrow createTooLargeFileError(this.group, input, options, message, this._preferencesService);\n\t\t\t}\n\n\t\t\tconst error = createEditorOpenError(e instanceof Error ? e : new Error((e ? e.message : '')), [\n\t\t\t\ttoAction({\n\t\t\t\t\tid: 'workbench.notebook.action.openInTextEditor', label: localize('notebookOpenInTextEditor', \"Open in Text Editor\"), run: async () => {\n\t\t\t\t\t\tconst activeEditorPane = this._editorService.activeEditorPane;\n\t\t\t\t\t\tif (!activeEditorPane) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst activeEditorResource = EditorResourceAccessor.getCanonicalUri(activeEditorPane.input);\n\t\t\t\t\t\tif (!activeEditorResource) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (activeEditorResource.toString() === input.resource?.toString()) {\n\t\t\t\t\t\t\t// Replace the current editor with the text editor\n\t\t\t\t\t\t\treturn this._editorService.openEditor({\n\t\t\t\t\t\t\t\tresource: activeEditorResource,\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\toverride: DEFAULT_EDITOR_ASSOCIATION.id,\n\t\t\t\t\t\t\t\t\tpinned: true // new file gets pinned by default\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t], { allowDialog: true });\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate _handlePerfMark(perf: NotebookPerfMarks, input: NotebookEditorInput, notebook?: NotebookTextModel) {\n\t\tconst perfMarks = perf.value;\n\n\t\ttype WorkbenchNotebookOpenClassification = {\n\t\t\towner: 'rebornix';\n\t\t\tcomment: 'The notebook file open metrics. Used to get a better understanding of the performance of notebook file opening';\n\t\t\tscheme: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'File system provider scheme for the notebook resource' };\n\t\t\text: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'File extension for the notebook resource' };\n\t\t\tviewType: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The view type of the notebook editor' };\n\t\t\textensionActivated: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Extension activation time for the resource opening' };\n\t\t\tinputLoaded: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Editor Input loading time for the resource opening' };\n\t\t\twebviewCommLoaded: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Webview initialization time for the resource opening' };\n\t\t\tcustomMarkdownLoaded: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Custom markdown loading time for the resource opening' };\n\t\t\teditorLoaded: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Overall editor loading time for the resource opening' };\n\t\t\tcodeCellCount: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Total number of code cell' };\n\t\t\tmdCellCount: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Total number of markdown cell' };\n\t\t\toutputCount: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Total number of cell outputs' };\n\t\t\toutputBytes: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Total number of bytes for all outputs' };\n\t\t\tcodeLength: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Length of text in all code cells' };\n\t\t\tmarkdownLength: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Length of text in all markdown cells' };\n\t\t\tnotebookStatsLoaded: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Time for generating the notebook level information for telemetry' };\n\t\t};\n\n\t\ttype WorkbenchNotebookOpenEvent = {\n\t\t\tscheme: string;\n\t\t\text: string;\n\t\t\tviewType: string;\n\t\t\textensionActivated: number;\n\t\t\tinputLoaded: number;\n\t\t\twebviewCommLoaded: number;\n\t\t\tcustomMarkdownLoaded: number | undefined;\n\t\t\teditorLoaded: number;\n\t\t\tcodeCellCount: number | undefined;\n\t\t\tmdCellCount: number | undefined;\n\t\t\toutputCount: number | undefined;\n\t\t\toutputBytes: number | undefined;\n\t\t\tcodeLength: number | undefined;\n\t\t\tmarkdownLength: number | undefined;\n\t\t\tnotebookStatsLoaded: number | undefined;\n\t\t};\n\n\t\tconst startTime = perfMarks['startTime'];\n\t\tconst extensionActivated = perfMarks['extensionActivated'];\n\t\tconst inputLoaded = perfMarks['inputLoaded'];\n\t\tconst webviewCommLoaded = perfMarks['webviewCommLoaded'];\n\t\tconst customMarkdownLoaded = perfMarks['customMarkdownLoaded'];\n\t\tconst editorLoaded = perfMarks['editorLoaded'];\n\n\t\tlet extensionActivationTimespan = -1;\n\t\tlet inputLoadingTimespan = -1;\n\t\tlet webviewCommLoadingTimespan = -1;\n\t\tlet customMarkdownLoadingTimespan = -1;\n\t\tlet editorLoadingTimespan = -1;\n\n\t\tif (startTime !== undefined && extensionActivated !== undefined) {\n\t\t\textensionActivationTimespan = extensionActivated - startTime;\n\n\t\t\tif (inputLoaded !== undefined) {\n\t\t\t\tinputLoadingTimespan = inputLoaded - extensionActivated;\n\t\t\t}\n\n\t\t\tif (webviewCommLoaded !== undefined) {\n\t\t\t\twebviewCommLoadingTimespan = webviewCommLoaded - extensionActivated;\n\n\t\t\t}\n\n\t\t\tif (customMarkdownLoaded !== undefined) {\n\t\t\t\tcustomMarkdownLoadingTimespan = customMarkdownLoaded - startTime;\n\t\t\t}\n\n\t\t\tif (editorLoaded !== undefined) {\n\t\t\t\teditorLoadingTimespan = editorLoaded - startTime;\n\t\t\t}\n\t\t}\n\n\t\t// Notebook information\n\t\tlet codeCellCount: number | undefined = undefined;\n\t\tlet mdCellCount: number | undefined = undefined;\n\t\tlet outputCount: number | undefined = undefined;\n\t\tlet outputBytes: number | undefined = undefined;\n\t\tlet codeLength: number | undefined = undefined;\n\t\tlet markdownLength: number | undefined = undefined;\n\t\tlet notebookStatsLoaded: number | undefined = undefined;\n\t\tif (notebook) {\n\t\t\tconst stopWatch = new StopWatch();\n\t\t\tfor (const cell of notebook.cells) {\n\t\t\t\tif (cell.cellKind === CellKind.Code) {\n\t\t\t\t\tcodeCellCount = (codeCellCount || 0) + 1;\n\t\t\t\t\tcodeLength = (codeLength || 0) + cell.getTextLength();\n\t\t\t\t\toutputCount = (outputCount || 0) + cell.outputs.length;\n\t\t\t\t\toutputBytes = (outputBytes || 0) + cell.outputs.reduce((prev, cur) => prev + cur.outputs.reduce((size, item) => size + item.data.byteLength, 0), 0);\n\t\t\t\t} else {\n\t\t\t\t\tmdCellCount = (mdCellCount || 0) + 1;\n\t\t\t\t\tmarkdownLength = (codeLength || 0) + cell.getTextLength();\n\t\t\t\t}\n\t\t\t}\n\t\t\tnotebookStatsLoaded = stopWatch.elapsed();\n\t\t}\n\n\t\tthis.logService.trace(`[NotebookEditor] open notebook perf ${notebook?.uri.toString() ?? ''} - extensionActivation: ${extensionActivationTimespan}, inputLoad: ${inputLoadingTimespan}, webviewComm: ${webviewCommLoadingTimespan}, customMarkdown: ${customMarkdownLoadingTimespan}, editorLoad: ${editorLoadingTimespan}`);\n\n\t\tthis.telemetryService.publicLog2<WorkbenchNotebookOpenEvent, WorkbenchNotebookOpenClassification>('notebook/editorOpenPerf', {\n\t\t\tscheme: input.resource.scheme,\n\t\t\text: extname(input.resource),\n\t\t\tviewType: input.viewType,\n\t\t\textensionActivated: extensionActivationTimespan,\n\t\t\tinputLoaded: inputLoadingTimespan,\n\t\t\twebviewCommLoaded: webviewCommLoadingTimespan,\n\t\t\tcustomMarkdownLoaded: customMarkdownLoadingTimespan,\n\t\t\teditorLoaded: editorLoadingTimespan,\n\t\t\tcodeCellCount,\n\t\t\tmdCellCount,\n\t\t\toutputCount,\n\t\t\toutputBytes,\n\t\t\tcodeLength,\n\t\t\tmarkdownLength,\n\t\t\tnotebookStatsLoaded\n\t\t});\n\t}\n\n\tprivate _handlePromptRecommendations(model: NotebookTextModel) {\n\t\tthis._notebookEditorWorkerService.canPromptRecommendation(model.uri).then(shouldPrompt => {\n\t\t\ttype WorkbenchNotebookShouldPromptRecommendationClassification = {\n\t\t\t\towner: 'rebornix';\n\t\t\t\tcomment: 'The notebook file metrics. Used to get a better understanding of if we should prompt for notebook extension recommendations';\n\t\t\t\tshouldPrompt: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Should we prompt for notebook extension recommendations' };\n\t\t\t};\n\n\t\t\ttype WorkbenchNotebookShouldPromptRecommendationEvent = {\n\t\t\t\tshouldPrompt: boolean;\n\t\t\t};\n\n\t\t\tthis.telemetryService.publicLog2<WorkbenchNotebookShouldPromptRecommendationEvent, WorkbenchNotebookShouldPromptRecommendationClassification>('notebook/shouldPromptRecommendation', {\n\t\t\t\tshouldPrompt: shouldPrompt\n\t\t\t});\n\t\t});\n\t}\n\n\toverride clearInput(): void {\n\t\tthis._inputListener.clear();\n\n\t\tif (this._widget.value) {\n\t\t\tthis._saveEditorViewState(this.input);\n\t\t\tthis._widget.value.onWillHide();\n\t\t}\n\t\tsuper.clearInput();\n\t}\n\n\toverride setOptions(options: INotebookEditorOptions | undefined): void {\n\t\tthis._widget.value?.setOptions(options);\n\t\tsuper.setOptions(options);\n\t}\n\n\tprotected override saveState(): void {\n\t\tthis._saveEditorViewState(this.input);\n\t\tsuper.saveState();\n\t}\n\n\toverride getViewState(): INotebookEditorViewState | undefined {\n\t\tconst input = this.input;\n\t\tif (!(input instanceof NotebookEditorInput)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis._saveEditorViewState(input);\n\t\treturn this._loadNotebookEditorViewState(input);\n\t}\n\n\tgetSelection(): IEditorPaneSelection | undefined {\n\t\tif (this._widget.value) {\n\t\t\tconst activeCell = this._widget.value.getActiveCell();\n\t\t\tif (activeCell) {\n\t\t\t\tconst cellUri = activeCell.uri;\n\t\t\t\treturn new NotebookEditorSelection(cellUri, activeCell.getSelections());\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tgetScrollPosition(): IEditorPaneScrollPosition {\n\t\tconst widget = this.getControl();\n\t\tif (!widget) {\n\t\t\tthrow new Error('Notebook widget has not yet been initialized');\n\t\t}\n\n\t\treturn {\n\t\t\tscrollTop: widget.scrollTop,\n\t\t\tscrollLeft: 0,\n\t\t};\n\t}\n\n\tsetScrollPosition(scrollPosition: IEditorPaneScrollPosition): void {\n\t\tconst editor = this.getControl();\n\t\tif (!editor) {\n\t\t\tthrow new Error('Control has not yet been initialized');\n\t\t}\n\n\t\teditor.setScrollTop(scrollPosition.scrollTop);\n\t}\n\n\tprivate _saveEditorViewState(input: EditorInput | undefined): void {\n\t\tif (this._widget.value && input instanceof NotebookEditorInput) {\n\t\t\tif (this._widget.value.isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst state = this._widget.value.getEditorViewState();\n\t\t\tthis._editorMemento.saveEditorState(this.group, input.resource, state);\n\t\t}\n\t}\n\n\tprivate _loadNotebookEditorViewState(input: NotebookEditorInput): INotebookEditorViewState | undefined {\n\t\tconst result = this._editorMemento.loadEditorState(this.group, input.resource);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\t// when we don't have a view state for the group/input-tuple then we try to use an existing\n\t\t// editor for the same resource.\n\t\tfor (const group of this._editorGroupService.getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE)) {\n\t\t\tif (group.activeEditorPane !== this && group.activeEditorPane instanceof NotebookEditor && group.activeEditor?.matches(input)) {\n\t\t\t\treturn group.activeEditorPane._widget.value?.getEditorViewState();\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tlayout(dimension: DOM.Dimension, position: DOM.IDomPosition): void {\n\t\tthis._rootElement.classList.toggle('mid-width', dimension.width < 1000 && dimension.width >= 600);\n\t\tthis._rootElement.classList.toggle('narrow-width', dimension.width < 600);\n\t\tthis._pagePosition = { dimension, position };\n\n\t\tif (!this._widget.value || !(this.input instanceof NotebookEditorInput)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.input.resource.toString() !== this.textModel?.uri.toString() && this._widget.value?.hasModel()) {\n\t\t\t// input and widget mismatch\n\t\t\t// this happens when\n\t\t\t// 1. open document A, pin the document\n\t\t\t// 2. open document B\n\t\t\t// 3. close document B\n\t\t\t// 4. a layout is triggered\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.isVisible()) {\n\t\t\tthis._widget.value.layout(dimension, this._rootElement, position);\n\t\t}\n\t}\n\n\t//#endregion\n}\n\nclass NotebookEditorSelection implements IEditorPaneSelection {\n\n\tconstructor(\n\t\tprivate readonly cellUri: URI,\n\t\tprivate readonly selections: Selection[]\n\t) { }\n\n\tcompare(other: IEditorPaneSelection): EditorPaneSelectionCompareResult {\n\t\tif (!(other instanceof NotebookEditorSelection)) {\n\t\t\treturn EditorPaneSelectionCompareResult.DIFFERENT;\n\t\t}\n\n\t\tif (isEqual(this.cellUri, other.cellUri)) {\n\t\t\treturn EditorPaneSelectionCompareResult.IDENTICAL;\n\t\t}\n\n\t\treturn EditorPaneSelectionCompareResult.DIFFERENT;\n\t}\n\n\trestore(options: IEditorOptions): INotebookEditorOptions {\n\t\tconst notebookOptions: INotebookEditorOptions = {\n\t\t\tcellOptions: {\n\t\t\t\tresource: this.cellUri,\n\t\t\t\toptions: {\n\t\t\t\t\tselection: this.selections[0]\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tObject.assign(notebookOptions, options);\n\n\t\treturn notebookOptions;\n\t}\n\n\tlog(): string {\n\t\treturn this.cellUri.fragment;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["extensionInfo"]
}
