{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/outline/notebookOutline.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from \"../../../../../../base/browser/dom.js\";\nimport {\n\ttype IIconLabelValueOptions,\n\tIconLabel,\n} from \"../../../../../../base/browser/ui/iconLabel/iconLabel.js\";\nimport type {\n\tIKeyboardNavigationLabelProvider,\n\tIListVirtualDelegate,\n} from \"../../../../../../base/browser/ui/list/list.js\";\nimport type { IListAccessibilityProvider } from \"../../../../../../base/browser/ui/list/listWidget.js\";\nimport { ToolBar } from \"../../../../../../base/browser/ui/toolbar/toolbar.js\";\nimport type {\n\tIDataSource,\n\tITreeNode,\n\tITreeRenderer,\n} from \"../../../../../../base/browser/ui/tree/tree.js\";\nimport { mainWindow } from \"../../../../../../base/browser/window.js\";\nimport type { IAction } from \"../../../../../../base/common/actions.js\";\nimport {\n\tDelayer,\n\tdisposableTimeout,\n} from \"../../../../../../base/common/async.js\";\nimport { CancellationToken } from \"../../../../../../base/common/cancellation.js\";\nimport { Codicon } from \"../../../../../../base/common/codicons.js\";\nimport { Emitter, type Event } from \"../../../../../../base/common/event.js\";\nimport {\n\ttype FuzzyScore,\n\tcreateMatches,\n} from \"../../../../../../base/common/filters.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\ttype IReference,\n\ttoDisposable,\n} from \"../../../../../../base/common/lifecycle.js\";\nimport { ThemeIcon } from \"../../../../../../base/common/themables.js\";\nimport type { URI } from \"../../../../../../base/common/uri.js\";\nimport { Range } from \"../../../../../../editor/common/core/range.js\";\nimport type { IModelDeltaDecoration } from \"../../../../../../editor/common/model.js\";\nimport { getIconClassesForLanguageId } from \"../../../../../../editor/common/services/getIconClasses.js\";\nimport { ILanguageFeaturesService } from \"../../../../../../editor/common/services/languageFeatures.js\";\nimport { localize } from \"../../../../../../nls.js\";\nimport {\n\tMenuEntryActionViewItem,\n\tcreateAndFillInActionBarActions,\n} from \"../../../../../../platform/actions/browser/menuEntryActionViewItem.js\";\nimport {\n\tAction2,\n\ttype IMenu,\n\tIMenuService,\n\tMenuId,\n\tMenuItemAction,\n\tMenuRegistry,\n\tregisterAction2,\n} from \"../../../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../../../platform/configuration/common/configuration.js\";\nimport {\n\tExtensions as ConfigurationExtensions,\n\ttype IConfigurationRegistry,\n} from \"../../../../../../platform/configuration/common/configurationRegistry.js\";\nimport {\n\tContextKeyExpr,\n\tIContextKeyService,\n\tRawContextKey,\n} from \"../../../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextMenuService } from \"../../../../../../platform/contextview/browser/contextView.js\";\nimport type { IEditorOptions } from \"../../../../../../platform/editor/common/editor.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../../../platform/instantiation/common/instantiation.js\";\nimport type { IWorkbenchDataTreeOptions } from \"../../../../../../platform/list/browser/listService.js\";\nimport { MarkerSeverity } from \"../../../../../../platform/markers/common/markers.js\";\nimport { Registry } from \"../../../../../../platform/registry/common/platform.js\";\nimport {\n\tlistErrorForeground,\n\tlistWarningForeground,\n} from \"../../../../../../platform/theme/common/colorRegistry.js\";\nimport { IThemeService } from \"../../../../../../platform/theme/common/themeService.js\";\nimport {\n\ttype IWorkbenchContributionsRegistry,\n\tExtensions as WorkbenchExtensions,\n} from \"../../../../../common/contributions.js\";\nimport type { IEditorPane } from \"../../../../../common/editor.js\";\nimport {\n\tIEditorService,\n\tSIDE_GROUP,\n} from \"../../../../../services/editor/common/editorService.js\";\nimport { LifecyclePhase } from \"../../../../../services/lifecycle/common/lifecycle.js\";\nimport {\n\ttype IBreadcrumbsDataSource,\n\ttype IOutline,\n\ttype IOutlineComparator,\n\ttype IOutlineCreator,\n\ttype IOutlineListConfig,\n\tIOutlineService,\n\ttype IQuickPickDataSource,\n\ttype IQuickPickOutlineElement,\n\ttype OutlineChangeEvent,\n\tOutlineConfigCollapseItemsValues,\n\tOutlineConfigKeys,\n\tOutlineTarget,\n} from \"../../../../../services/outline/browser/outline.js\";\nimport { IOutlinePane } from \"../../../../outline/browser/outline.js\";\nimport {\n\tCellKind,\n\tNotebookCellsChangeType,\n\tNotebookSetting,\n} from \"../../../common/notebookCommon.js\";\nimport { NOTEBOOK_IS_ACTIVE_EDITOR } from \"../../../common/notebookContextKeys.js\";\nimport {\n\tINotebookExecutionStateService,\n\tNotebookExecutionType,\n} from \"../../../common/notebookExecutionStateService.js\";\nimport type { NotebookSectionArgs } from \"../../controller/sectionActions.js\";\nimport {\n\tCellFoldingState,\n\tCellRevealType,\n\ttype ICellModelDecorations,\n\ttype ICellModelDeltaDecorations,\n\ttype ICellViewModel,\n\ttype INotebookEditor,\n\ttype INotebookEditorOptions,\n\ttype INotebookEditorPane,\n\ttype INotebookViewModel,\n} from \"../../notebookBrowser.js\";\nimport { NotebookEditor } from \"../../notebookEditor.js\";\nimport type { OutlineEntry } from \"../../viewModel/OutlineEntry.js\";\nimport type { MarkupCellViewModel } from \"../../viewModel/markupCellViewModel.js\";\nimport type {\n\tINotebookCellOutlineDataSource,\n\tNotebookCellOutlineDataSource,\n} from \"../../viewModel/notebookOutlineDataSource.js\";\nimport { INotebookCellOutlineDataSourceFactory } from \"../../viewModel/notebookOutlineDataSourceFactory.js\";\nimport { NotebookOutlineConstants } from \"../../viewModel/notebookOutlineEntryFactory.js\";\n\nclass NotebookOutlineTemplate {\n\tstatic readonly templateId = \"NotebookOutlineRenderer\";\n\n\tconstructor(\n\t\treadonly container: HTMLElement,\n\t\treadonly iconClass: HTMLElement,\n\t\treadonly iconLabel: IconLabel,\n\t\treadonly decoration: HTMLElement,\n\t\treadonly actionMenu: HTMLElement,\n\t\treadonly elementDisposables: DisposableStore,\n\t) {}\n}\n\nclass NotebookOutlineRenderer\n\timplements ITreeRenderer<OutlineEntry, FuzzyScore, NotebookOutlineTemplate>\n{\n\ttemplateId: string = NotebookOutlineTemplate.templateId;\n\n\tconstructor(\n\t\tprivate readonly _editor: INotebookEditor | undefined,\n\t\tprivate readonly _target: OutlineTarget,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IContextMenuService private readonly _contextMenuService: IContextMenuService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IMenuService private readonly _menuService: IMenuService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t) { }\n\n\trenderTemplate(container: HTMLElement): NotebookOutlineTemplate {\n\t\tconst elementDisposables = new DisposableStore();\n\n\t\tcontainer.classList.add(\"notebook-outline-element\", \"show-file-icons\");\n\t\tconst iconClass = document.createElement(\"div\");\n\t\tcontainer.append(iconClass);\n\t\tconst iconLabel = new IconLabel(container, { supportHighlights: true });\n\t\tconst decoration = document.createElement(\"div\");\n\t\tdecoration.className = \"element-decoration\";\n\t\tcontainer.append(decoration);\n\t\tconst actionMenu = document.createElement(\"div\");\n\t\tactionMenu.className = \"action-menu\";\n\t\tcontainer.append(actionMenu);\n\n\t\treturn new NotebookOutlineTemplate(\n\t\t\tcontainer,\n\t\t\ticonClass,\n\t\t\ticonLabel,\n\t\t\tdecoration,\n\t\t\tactionMenu,\n\t\t\telementDisposables,\n\t\t);\n\t}\n\n\trenderElement(\n\t\tnode: ITreeNode<OutlineEntry, FuzzyScore>,\n\t\t_index: number,\n\t\ttemplate: NotebookOutlineTemplate,\n\t\t_height: number | undefined,\n\t): void {\n\t\tconst extraClasses: string[] = [];\n\t\tconst options: IIconLabelValueOptions = {\n\t\t\tmatches: createMatches(node.filterData),\n\t\t\tlabelEscapeNewLines: true,\n\t\t\textraClasses,\n\t\t};\n\n\t\tconst isCodeCell = node.element.cell.cellKind === CellKind.Code;\n\t\tif (node.element.level >= 8) {\n\t\t\t// symbol\n\t\t\ttemplate.iconClass.className =\n\t\t\t\t\"element-icon \" +\n\t\t\t\tThemeIcon.asClassNameArray(node.element.icon).join(\" \");\n\t\t} else if (\n\t\t\tisCodeCell &&\n\t\t\tthis._themeService.getFileIconTheme().hasFileIcons &&\n\t\t\t!node.element.isExecuting\n\t\t) {\n\t\t\ttemplate.iconClass.className = \"\";\n\t\t\textraClasses.push(\n\t\t\t\t...getIconClassesForLanguageId(\n\t\t\t\t\tnode.element.cell.language ?? \"\",\n\t\t\t\t),\n\t\t\t);\n\t\t} else {\n\t\t\ttemplate.iconClass.className =\n\t\t\t\t\"element-icon \" +\n\t\t\t\tThemeIcon.asClassNameArray(node.element.icon).join(\" \");\n\t\t}\n\n\t\ttemplate.iconLabel.setLabel(\n\t\t\t\" \" + node.element.label,\n\t\t\tundefined,\n\t\t\toptions,\n\t\t);\n\n\t\tconst { markerInfo } = node.element;\n\n\t\ttemplate.container.style.removeProperty(\"--outline-element-color\");\n\t\ttemplate.decoration.innerText = \"\";\n\t\tif (markerInfo) {\n\t\t\tconst problem = this._configurationService.getValue(\n\t\t\t\t\"problems.visibility\",\n\t\t\t);\n\t\t\tconst useBadges = this._configurationService.getValue(\n\t\t\t\tOutlineConfigKeys.problemsBadges,\n\t\t\t);\n\n\t\t\tif (!useBadges || !problem) {\n\t\t\t\ttemplate.decoration.classList.remove(\"bubble\");\n\t\t\t\ttemplate.decoration.innerText = \"\";\n\t\t\t} else if (markerInfo.count === 0) {\n\t\t\t\ttemplate.decoration.classList.add(\"bubble\");\n\t\t\t\ttemplate.decoration.innerText = \"\\uea71\";\n\t\t\t} else {\n\t\t\t\ttemplate.decoration.classList.remove(\"bubble\");\n\t\t\t\ttemplate.decoration.innerText =\n\t\t\t\t\tmarkerInfo.count > 9 ? \"9+\" : String(markerInfo.count);\n\t\t\t}\n\t\t\tconst color = this._themeService\n\t\t\t\t.getColorTheme()\n\t\t\t\t.getColor(\n\t\t\t\t\tmarkerInfo.topSev === MarkerSeverity.Error\n\t\t\t\t\t\t? listErrorForeground\n\t\t\t\t\t\t: listWarningForeground,\n\t\t\t\t);\n\t\t\tif (problem === undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst useColors = this._configurationService.getValue(\n\t\t\t\tOutlineConfigKeys.problemsColors,\n\t\t\t);\n\t\t\tif (!useColors || !problem) {\n\t\t\t\ttemplate.container.style.removeProperty(\n\t\t\t\t\t\"--outline-element-color\",\n\t\t\t\t);\n\t\t\t\ttemplate.decoration.style.setProperty(\n\t\t\t\t\t\"--outline-element-color\",\n\t\t\t\t\tcolor?.toString() ?? \"inherit\",\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\ttemplate.container.style.setProperty(\n\t\t\t\t\t\"--outline-element-color\",\n\t\t\t\t\tcolor?.toString() ?? \"inherit\",\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (this._target === OutlineTarget.OutlinePane) {\n\t\t\tconst nbCell = node.element.cell;\n\t\t\tconst nbViewModel = this._editor?.getViewModel();\n\t\t\tif (!nbViewModel) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst idx = nbViewModel.getCellIndex(nbCell);\n\t\t\tconst length = isCodeCell ? 0 : nbViewModel.getFoldedLength(idx);\n\n\t\t\tconst scopedContextKeyService = template.elementDisposables.add(\n\t\t\t\tthis._contextKeyService.createScoped(template.container),\n\t\t\t);\n\t\t\tNotebookOutlineContext.CellKind.bindTo(scopedContextKeyService).set(\n\t\t\t\tisCodeCell ? CellKind.Code : CellKind.Markup,\n\t\t\t);\n\t\t\tNotebookOutlineContext.CellHasChildren.bindTo(\n\t\t\t\tscopedContextKeyService,\n\t\t\t).set(length > 0);\n\t\t\tNotebookOutlineContext.CellHasHeader.bindTo(\n\t\t\t\tscopedContextKeyService,\n\t\t\t).set(\n\t\t\t\tnode.element.level !==\n\t\t\t\t\tNotebookOutlineConstants.NonHeaderOutlineLevel,\n\t\t\t);\n\t\t\tNotebookOutlineContext.OutlineElementTarget.bindTo(\n\t\t\t\tscopedContextKeyService,\n\t\t\t).set(this._target);\n\t\t\tthis.setupFolding(\n\t\t\t\tisCodeCell,\n\t\t\t\tnbViewModel,\n\t\t\t\tscopedContextKeyService,\n\t\t\t\ttemplate,\n\t\t\t\tnbCell,\n\t\t\t);\n\n\t\t\tconst outlineEntryToolbar = template.elementDisposables.add(\n\t\t\t\tnew ToolBar(template.actionMenu, this._contextMenuService, {\n\t\t\t\t\tactionViewItemProvider: (action) => {\n\t\t\t\t\t\tif (action instanceof MenuItemAction) {\n\t\t\t\t\t\t\treturn this._instantiationService.createInstance(\n\t\t\t\t\t\t\t\tMenuEntryActionViewItem,\n\t\t\t\t\t\t\t\taction,\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst menu = template.elementDisposables.add(\n\t\t\t\tthis._menuService.createMenu(\n\t\t\t\t\tMenuId.NotebookOutlineActionMenu,\n\t\t\t\t\tscopedContextKeyService,\n\t\t\t\t),\n\t\t\t);\n\t\t\tconst actions = getOutlineToolbarActions(menu, {\n\t\t\t\tnotebookEditor: this._editor,\n\t\t\t\toutlineEntry: node.element,\n\t\t\t});\n\t\t\toutlineEntryToolbar.setActions(actions.primary, actions.secondary);\n\n\t\t\tthis.setupToolbarListeners(\n\t\t\t\toutlineEntryToolbar,\n\t\t\t\tmenu,\n\t\t\t\tactions,\n\t\t\t\tnode.element,\n\t\t\t\ttemplate,\n\t\t\t);\n\t\t\ttemplate.actionMenu.style.padding = \"0 0.8em 0 0.4em\";\n\t\t}\n\t}\n\n\tdisposeTemplate(templateData: NotebookOutlineTemplate): void {\n\t\ttemplateData.iconLabel.dispose();\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeElement(\n\t\telement: ITreeNode<OutlineEntry, FuzzyScore>,\n\t\tindex: number,\n\t\ttemplateData: NotebookOutlineTemplate,\n\t\theight: number | undefined,\n\t): void {\n\t\ttemplateData.elementDisposables.clear();\n\t\tDOM.clearNode(templateData.actionMenu);\n\t}\n\n\tprivate setupFolding(\n\t\tisCodeCell: boolean,\n\t\tnbViewModel: INotebookViewModel,\n\t\tscopedContextKeyService: IContextKeyService,\n\t\ttemplate: NotebookOutlineTemplate,\n\t\tnbCell: ICellViewModel,\n\t) {\n\t\tconst foldingState = isCodeCell\n\t\t\t? CellFoldingState.None\n\t\t\t: (nbCell as MarkupCellViewModel).foldingState;\n\t\tconst foldingStateCtx = NotebookOutlineContext.CellFoldingState.bindTo(\n\t\t\tscopedContextKeyService,\n\t\t);\n\t\tfoldingStateCtx.set(foldingState);\n\n\t\tif (!isCodeCell) {\n\t\t\ttemplate.elementDisposables.add(\n\t\t\t\tnbViewModel.onDidFoldingStateChanged(() => {\n\t\t\t\t\tconst foldingState = (nbCell as MarkupCellViewModel)\n\t\t\t\t\t\t.foldingState;\n\t\t\t\t\tNotebookOutlineContext.CellFoldingState.bindTo(\n\t\t\t\t\t\tscopedContextKeyService,\n\t\t\t\t\t).set(foldingState);\n\t\t\t\t\tfoldingStateCtx.set(foldingState);\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate setupToolbarListeners(\n\t\ttoolbar: ToolBar,\n\t\tmenu: IMenu,\n\t\tinitActions: { primary: IAction[]; secondary: IAction[] },\n\t\tentry: OutlineEntry,\n\t\ttemplateData: NotebookOutlineTemplate,\n\t): void {\n\t\t// same fix as in cellToolbars setupListeners re #103926\n\t\tlet dropdownIsVisible = false;\n\t\tlet deferredUpdate: (() => void) | undefined;\n\n\t\ttoolbar.setActions(initActions.primary, initActions.secondary);\n\t\ttemplateData.elementDisposables.add(\n\t\t\tmenu.onDidChange(() => {\n\t\t\t\tif (dropdownIsVisible) {\n\t\t\t\t\tconst actions = getOutlineToolbarActions(menu, {\n\t\t\t\t\t\tnotebookEditor: this._editor,\n\t\t\t\t\t\toutlineEntry: entry,\n\t\t\t\t\t});\n\t\t\t\t\tdeferredUpdate = () =>\n\t\t\t\t\t\ttoolbar.setActions(actions.primary, actions.secondary);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst actions = getOutlineToolbarActions(menu, {\n\t\t\t\t\tnotebookEditor: this._editor,\n\t\t\t\t\toutlineEntry: entry,\n\t\t\t\t});\n\t\t\t\ttoolbar.setActions(actions.primary, actions.secondary);\n\t\t\t}),\n\t\t);\n\n\t\ttemplateData.container.classList.remove(\n\t\t\t\"notebook-outline-toolbar-dropdown-active\",\n\t\t);\n\t\ttemplateData.elementDisposables.add(\n\t\t\ttoolbar.onDidChangeDropdownVisibility((visible) => {\n\t\t\t\tdropdownIsVisible = visible;\n\t\t\t\tif (visible) {\n\t\t\t\t\ttemplateData.container.classList.add(\n\t\t\t\t\t\t\"notebook-outline-toolbar-dropdown-active\",\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\ttemplateData.container.classList.remove(\n\t\t\t\t\t\t\"notebook-outline-toolbar-dropdown-active\",\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (deferredUpdate && !visible) {\n\t\t\t\t\tdisposableTimeout(\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tdeferredUpdate?.();\n\t\t\t\t\t\t},\n\t\t\t\t\t\t0,\n\t\t\t\t\t\ttemplateData.elementDisposables,\n\t\t\t\t\t);\n\n\t\t\t\t\tdeferredUpdate = undefined;\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n}\n\nfunction getOutlineToolbarActions(\n\tmenu: IMenu,\n\targs?: NotebookSectionArgs,\n): { primary: IAction[]; secondary: IAction[] } {\n\tconst primary: IAction[] = [];\n\tconst secondary: IAction[] = [];\n\tconst result = { primary, secondary };\n\n\t// TODO: @Yoyokrazy bring the \"inline\" back when there's an appropriate run in section icon\n\tcreateAndFillInActionBarActions(\n\t\tmenu,\n\t\t{ shouldForwardArgs: true, arg: args },\n\t\tresult,\n\t); //, g => /^inline/.test(g));\n\n\treturn result;\n}\n\nclass NotebookOutlineAccessibility\n\timplements IListAccessibilityProvider<OutlineEntry>\n{\n\tgetAriaLabel(element: OutlineEntry): string | null {\n\t\treturn element.label;\n\t}\n\tgetWidgetAriaLabel(): string {\n\t\treturn \"\";\n\t}\n}\n\nclass NotebookNavigationLabelProvider\n\timplements IKeyboardNavigationLabelProvider<OutlineEntry>\n{\n\tgetKeyboardNavigationLabel(\n\t\telement: OutlineEntry,\n\t):\n\t\t| { toString(): string | undefined }\n\t\t| { toString(): string | undefined }[]\n\t\t| undefined {\n\t\treturn element.label;\n\t}\n}\n\nclass NotebookOutlineVirtualDelegate\n\timplements IListVirtualDelegate<OutlineEntry>\n{\n\tgetHeight(_element: OutlineEntry): number {\n\t\treturn 22;\n\t}\n\n\tgetTemplateId(_element: OutlineEntry): string {\n\t\treturn NotebookOutlineTemplate.templateId;\n\t}\n}\n\nexport class NotebookQuickPickProvider\n\timplements IQuickPickDataSource<OutlineEntry>\n{\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate gotoShowCodeCellSymbols: boolean;\n\n\tconstructor(\n\t\tprivate readonly notebookCellOutlineDataSourceRef: IReference<INotebookCellOutlineDataSource> | undefined,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IThemeService private readonly _themeService: IThemeService\n\t) {\n\t\tthis.gotoShowCodeCellSymbols = this._configurationService.getValue<boolean>(NotebookSetting.gotoSymbolsAllSymbols);\n\n\t\tthis._disposables.add(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(NotebookSetting.gotoSymbolsAllSymbols)) {\n\t\t\t\tthis.gotoShowCodeCellSymbols = this._configurationService.getValue<boolean>(NotebookSetting.gotoSymbolsAllSymbols);\n\t\t\t}\n\t\t}));\n\t}\n\n\tgetQuickPickElements(): IQuickPickOutlineElement<OutlineEntry>[] {\n\t\tconst bucket: OutlineEntry[] = [];\n\t\tfor (const entry of this.notebookCellOutlineDataSourceRef?.object\n\t\t\t?.entries ?? []) {\n\t\t\tentry.asFlatList(bucket);\n\t\t}\n\t\tconst result: IQuickPickOutlineElement<OutlineEntry>[] = [];\n\t\tconst { hasFileIcons } = this._themeService.getFileIconTheme();\n\n\t\tconst isSymbol = (element: OutlineEntry) => !!element.symbolKind;\n\t\tconst isCodeCell = (element: OutlineEntry) =>\n\t\t\telement.cell.cellKind === CellKind.Code &&\n\t\t\telement.level === NotebookOutlineConstants.NonHeaderOutlineLevel; // code cell entries are exactly level 7 by this constant\n\t\tfor (let i = 0; i < bucket.length; i++) {\n\t\t\tconst element = bucket[i];\n\t\t\tconst nextElement = bucket[i + 1]; // can be undefined\n\n\t\t\tif (!this.gotoShowCodeCellSymbols && isSymbol(element)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tthis.gotoShowCodeCellSymbols &&\n\t\t\t\tisCodeCell(element) &&\n\t\t\t\tnextElement &&\n\t\t\t\tisSymbol(nextElement)\n\t\t\t) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst useFileIcon = hasFileIcons && !element.symbolKind;\n\t\t\t// todo@jrieken it is fishy that codicons cannot be used with iconClasses\n\t\t\t// but file icons can...\n\t\t\tresult.push({\n\t\t\t\telement,\n\t\t\t\tlabel: useFileIcon\n\t\t\t\t\t? element.label\n\t\t\t\t\t: `$(${element.icon.id}) ${element.label}`,\n\t\t\t\tariaLabel: element.label,\n\t\t\t\ticonClasses: useFileIcon\n\t\t\t\t\t? getIconClassesForLanguageId(element.cell.language ?? \"\")\n\t\t\t\t\t: undefined,\n\t\t\t});\n\t\t}\n\t\treturn result;\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n}\n\nexport class NotebookOutlinePaneProvider\n\timplements IDataSource<NotebookCellOutline, OutlineEntry>\n{\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate showCodeCells: boolean;\n\tprivate showCodeCellSymbols: boolean;\n\tprivate showMarkdownHeadersOnly: boolean;\n\n\tconstructor(\n\t\tprivate readonly outlineDataSourceRef: IReference<INotebookCellOutlineDataSource> | undefined,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t) {\n\t\tthis.showCodeCells = this._configurationService.getValue<boolean>(NotebookSetting.outlineShowCodeCells);\n\t\tthis.showCodeCellSymbols = this._configurationService.getValue<boolean>(NotebookSetting.outlineShowCodeCellSymbols);\n\t\tthis.showMarkdownHeadersOnly = this._configurationService.getValue<boolean>(NotebookSetting.outlineShowMarkdownHeadersOnly);\n\n\t\tthis._disposables.add(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(NotebookSetting.outlineShowCodeCells)) {\n\t\t\t\tthis.showCodeCells = this._configurationService.getValue<boolean>(NotebookSetting.outlineShowCodeCells);\n\t\t\t}\n\t\t\tif (e.affectsConfiguration(NotebookSetting.outlineShowCodeCellSymbols)) {\n\t\t\t\tthis.showCodeCellSymbols = this._configurationService.getValue<boolean>(NotebookSetting.outlineShowCodeCellSymbols);\n\t\t\t}\n\t\t\tif (e.affectsConfiguration(NotebookSetting.outlineShowMarkdownHeadersOnly)) {\n\t\t\t\tthis.showMarkdownHeadersOnly = this._configurationService.getValue<boolean>(NotebookSetting.outlineShowMarkdownHeadersOnly);\n\t\t\t}\n\t\t}));\n\t}\n\n\tpublic getActiveEntry(): OutlineEntry | undefined {\n\t\tconst newActive = this.outlineDataSourceRef?.object?.activeElement;\n\t\tif (!newActive) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this.filterEntry(newActive)) {\n\t\t\treturn newActive;\n\t\t}\n\n\t\t// find a valid parent\n\t\tlet parent = newActive.parent;\n\t\twhile (parent) {\n\t\t\tif (this.filterEntry(parent)) {\n\t\t\t\tparent = parent.parent;\n\t\t\t} else {\n\t\t\t\treturn parent;\n\t\t\t}\n\t\t}\n\n\t\t// no valid parent found, return undefined\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Checks if the given outline entry should be filtered out of the outlinePane\n\t *\n\t * @param entry the OutlineEntry to check\n\t * @returns true if the entry should be filtered out of the outlinePane\n\t */\n\tprivate filterEntry(entry: OutlineEntry): boolean {\n\t\t// if any are true, return true, this entry should NOT be included in the outline\n\t\tif (\n\t\t\t(this.showMarkdownHeadersOnly &&\n\t\t\t\tentry.cell.cellKind === CellKind.Markup &&\n\t\t\t\tentry.level ===\n\t\t\t\t\tNotebookOutlineConstants.NonHeaderOutlineLevel) || // show headers only   + cell is mkdn + is level 7 (not header)\n\t\t\t(!this.showCodeCells && entry.cell.cellKind === CellKind.Code) || // show code cells off + cell is code\n\t\t\t(!this.showCodeCellSymbols &&\n\t\t\t\tentry.cell.cellKind === CellKind.Code &&\n\t\t\t\tentry.level > NotebookOutlineConstants.NonHeaderOutlineLevel) // show symbols off    + cell is code + is level >7 (nb symbol levels)\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t*getChildren(\n\t\telement: NotebookCellOutline | OutlineEntry,\n\t): Iterable<OutlineEntry> {\n\t\tconst isOutline = element instanceof NotebookCellOutline;\n\t\tconst entries = isOutline\n\t\t\t? (this.outlineDataSourceRef?.object?.entries ?? [])\n\t\t\t: element.children;\n\n\t\tfor (const entry of entries) {\n\t\t\tif (entry.cell.cellKind === CellKind.Markup) {\n\t\t\t\tif (!this.showMarkdownHeadersOnly) {\n\t\t\t\t\tyield entry;\n\t\t\t\t} else if (\n\t\t\t\t\tentry.level < NotebookOutlineConstants.NonHeaderOutlineLevel\n\t\t\t\t) {\n\t\t\t\t\tyield entry;\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tthis.showCodeCells &&\n\t\t\t\tentry.cell.cellKind === CellKind.Code\n\t\t\t) {\n\t\t\t\tif (this.showCodeCellSymbols) {\n\t\t\t\t\tyield entry;\n\t\t\t\t} else if (\n\t\t\t\t\tentry.level ===\n\t\t\t\t\tNotebookOutlineConstants.NonHeaderOutlineLevel\n\t\t\t\t) {\n\t\t\t\t\tyield entry;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n}\n\nexport class NotebookBreadcrumbsProvider\n\timplements IBreadcrumbsDataSource<OutlineEntry>\n{\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate showCodeCells: boolean;\n\n\tconstructor(\n\t\tprivate readonly outlineDataSourceRef: IReference<INotebookCellOutlineDataSource> | undefined,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t) {\n\t\tthis.showCodeCells = this._configurationService.getValue<boolean>(NotebookSetting.breadcrumbsShowCodeCells);\n\t\tthis._disposables.add(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(NotebookSetting.breadcrumbsShowCodeCells)) {\n\t\t\t\tthis.showCodeCells = this._configurationService.getValue<boolean>(NotebookSetting.breadcrumbsShowCodeCells);\n\t\t\t}\n\t\t}));\n\t}\n\n\tgetBreadcrumbElements(): readonly OutlineEntry[] {\n\t\tconst result: OutlineEntry[] = [];\n\t\tlet candidate = this.outlineDataSourceRef?.object?.activeElement;\n\t\twhile (candidate) {\n\t\t\tif (\n\t\t\t\tthis.showCodeCells ||\n\t\t\t\tcandidate.cell.cellKind !== CellKind.Code\n\t\t\t) {\n\t\t\t\tresult.unshift(candidate);\n\t\t\t}\n\t\t\tcandidate = candidate.parent;\n\t\t}\n\t\treturn result;\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n}\n\nclass NotebookComparator implements IOutlineComparator<OutlineEntry> {\n\tprivate readonly _collator = new DOM.WindowIdleValue<Intl.Collator>(\n\t\tmainWindow,\n\t\t() => new Intl.Collator(undefined, { numeric: true }),\n\t);\n\n\tcompareByPosition(a: OutlineEntry, b: OutlineEntry): number {\n\t\treturn a.index - b.index;\n\t}\n\tcompareByType(a: OutlineEntry, b: OutlineEntry): number {\n\t\treturn (\n\t\t\ta.cell.cellKind - b.cell.cellKind ||\n\t\t\tthis._collator.value.compare(a.label, b.label)\n\t\t);\n\t}\n\tcompareByName(a: OutlineEntry, b: OutlineEntry): number {\n\t\treturn this._collator.value.compare(a.label, b.label);\n\t}\n}\n\nexport class NotebookCellOutline implements IOutline<OutlineEntry> {\n\treadonly outlineKind = \"notebookCells\";\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate readonly _modelDisposables = new DisposableStore();\n\tprivate readonly _dataSourceDisposables = new DisposableStore();\n\n\tprivate readonly _onDidChange = new Emitter<OutlineChangeEvent>();\n\treadonly onDidChange: Event<OutlineChangeEvent> = this._onDidChange.event;\n\n\tprivate readonly delayerRecomputeState: Delayer<void> =\n\t\tthis._disposables.add(new Delayer<void>(300));\n\tprivate readonly delayerRecomputeActive: Delayer<void> =\n\t\tthis._disposables.add(new Delayer<void>(200));\n\t// this can be long, because it will force a recompute at the end, so ideally we only do this once all nb language features are registered\n\tprivate readonly delayerRecomputeSymbols: Delayer<void> =\n\t\tthis._disposables.add(new Delayer<void>(2000));\n\n\treadonly config: IOutlineListConfig<OutlineEntry>;\n\tprivate _outlineDataSourceReference:\n\t\t| IReference<NotebookCellOutlineDataSource>\n\t\t| undefined;\n\t// These three fields will always be set via setDataSources() on L475\n\tprivate _treeDataSource!: IDataSource<NotebookCellOutline, OutlineEntry>;\n\tprivate _quickPickDataSource!: IQuickPickDataSource<OutlineEntry>;\n\tprivate _breadcrumbsDataSource!: IBreadcrumbsDataSource<OutlineEntry>;\n\n\t// view settings\n\tprivate outlineShowCodeCellSymbols: boolean;\n\n\t// getters\n\tget activeElement(): OutlineEntry | undefined {\n\t\tthis.checkDelayer();\n\t\tif (this._target === OutlineTarget.OutlinePane) {\n\t\t\treturn (\n\t\t\t\tthis.config.treeDataSource as NotebookOutlinePaneProvider\n\t\t\t).getActiveEntry();\n\t\t} else {\n\t\t\tconsole.error(\n\t\t\t\t\"activeElement should not be called outside of the OutlinePane\",\n\t\t\t);\n\t\t\treturn undefined;\n\t\t}\n\t}\n\tget entries(): OutlineEntry[] {\n\t\tthis.checkDelayer();\n\t\treturn this._outlineDataSourceReference?.object?.entries ?? [];\n\t}\n\tget uri(): URI | undefined {\n\t\treturn this._outlineDataSourceReference?.object?.uri;\n\t}\n\tget isEmpty(): boolean {\n\t\treturn this._outlineDataSourceReference?.object?.isEmpty ?? true;\n\t}\n\n\tprivate checkDelayer() {\n\t\tif (this.delayerRecomputeState.isTriggered()) {\n\t\t\tthis.delayerRecomputeState.cancel();\n\t\t\tthis.recomputeState();\n\t\t}\n\t}\n\n\tconstructor(\n\t\tprivate readonly _editor: INotebookEditorPane,\n\t\tprivate readonly _target: OutlineTarget,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@INotebookExecutionStateService private readonly _notebookExecutionStateService: INotebookExecutionStateService,\n\t) {\n\t\tthis.outlineShowCodeCellSymbols = this._configurationService.getValue<boolean>(NotebookSetting.outlineShowCodeCellSymbols);\n\n\t\tthis.initializeOutline();\n\n\t\tconst delegate = new NotebookOutlineVirtualDelegate();\n\t\tconst renderers = [this._instantiationService.createInstance(NotebookOutlineRenderer, this._editor.getControl(), this._target)];\n\t\tconst comparator = new NotebookComparator();\n\n\t\tconst options: IWorkbenchDataTreeOptions<OutlineEntry, FuzzyScore> = {\n\t\t\tcollapseByDefault: this._target === OutlineTarget.Breadcrumbs || (this._target === OutlineTarget.OutlinePane && this._configurationService.getValue(OutlineConfigKeys.collapseItems) === OutlineConfigCollapseItemsValues.Collapsed),\n\t\t\texpandOnlyOnTwistieClick: true,\n\t\t\tmultipleSelectionSupport: false,\n\t\t\taccessibilityProvider: new NotebookOutlineAccessibility(),\n\t\t\tidentityProvider: { getId: element => element.cell.uri.toString() },\n\t\t\tkeyboardNavigationLabelProvider: new NotebookNavigationLabelProvider()\n\t\t};\n\n\t\tthis.config = {\n\t\t\ttreeDataSource: this._treeDataSource,\n\t\t\tquickPickDataSource: this._quickPickDataSource,\n\t\t\tbreadcrumbsDataSource: this._breadcrumbsDataSource,\n\t\t\tdelegate,\n\t\t\trenderers,\n\t\t\tcomparator,\n\t\t\toptions\n\t\t};\n\t}\n\n\tprivate initializeOutline() {\n\t\t// initial setup\n\t\tthis.setDataSources();\n\t\tthis.setModelListeners();\n\n\t\t// reset the data sources + model listeners when we get a new notebook model\n\t\tthis._disposables.add(\n\t\t\tthis._editor.onDidChangeModel(() => {\n\t\t\t\tthis.setDataSources();\n\t\t\t\tthis.setModelListeners();\n\t\t\t\tthis.computeSymbols();\n\t\t\t}),\n\t\t);\n\n\t\t// recompute symbols as document symbol providers are updated in the language features registry\n\t\tthis._disposables.add(\n\t\t\tthis._languageFeaturesService.documentSymbolProvider.onDidChange(\n\t\t\t\t() => {\n\t\t\t\t\tthis.delayedComputeSymbols();\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\t// recompute active when the selection changes\n\t\tthis._disposables.add(\n\t\t\tthis._editor.onDidChangeSelection(() => {\n\t\t\t\tthis.delayedRecomputeActive();\n\t\t\t}),\n\t\t);\n\n\t\t// recompute state when filter config changes\n\t\tthis._disposables.add(\n\t\t\tthis._configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (\n\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\tNotebookSetting.outlineShowMarkdownHeadersOnly,\n\t\t\t\t\t) ||\n\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\tNotebookSetting.outlineShowCodeCells,\n\t\t\t\t\t) ||\n\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\tNotebookSetting.outlineShowCodeCellSymbols,\n\t\t\t\t\t) ||\n\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\tNotebookSetting.breadcrumbsShowCodeCells,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tthis.delayedRecomputeState();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// recompute state when execution states change\n\t\tthis._disposables.add(\n\t\t\tthis._notebookExecutionStateService.onDidChangeExecution((e) => {\n\t\t\t\tif (\n\t\t\t\t\te.type === NotebookExecutionType.cell &&\n\t\t\t\t\t!!this._editor.textModel &&\n\t\t\t\t\te.affectsNotebook(this._editor.textModel?.uri)\n\t\t\t\t) {\n\t\t\t\t\tthis.delayedRecomputeState();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// recompute symbols when the configuration changes (recompute state - and therefore recompute active - is also called within compute symbols)\n\t\tthis._disposables.add(\n\t\t\tthis._configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (\n\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\tNotebookSetting.outlineShowCodeCellSymbols,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tthis.outlineShowCodeCellSymbols =\n\t\t\t\t\t\tthis._configurationService.getValue<boolean>(\n\t\t\t\t\t\t\tNotebookSetting.outlineShowCodeCellSymbols,\n\t\t\t\t\t\t);\n\t\t\t\t\tthis.computeSymbols();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// fire a change event when the theme changes\n\t\tthis._disposables.add(\n\t\t\tthis._themeService.onDidFileIconThemeChange(() => {\n\t\t\t\tthis._onDidChange.fire({});\n\t\t\t}),\n\t\t);\n\n\t\t// finish with a recompute state\n\t\tthis.recomputeState();\n\t}\n\n\t/**\n\t * set up the primary data source + three viewing sources for the various outline views\n\t */\n\tprivate setDataSources(): void {\n\t\tconst notebookEditor = this._editor.getControl();\n\t\tthis._outlineDataSourceReference?.dispose();\n\t\tthis._dataSourceDisposables.clear();\n\n\t\tif (notebookEditor?.hasModel()) {\n\t\t\tthis._outlineDataSourceReference = this._dataSourceDisposables.add(\n\t\t\t\tthis._instantiationService.invokeFunction((accessor) =>\n\t\t\t\t\taccessor\n\t\t\t\t\t\t.get(INotebookCellOutlineDataSourceFactory)\n\t\t\t\t\t\t.getOrCreate(notebookEditor),\n\t\t\t\t),\n\t\t\t);\n\t\t\t// escalate outline data source change events\n\t\t\tthis._dataSourceDisposables.add(\n\t\t\t\tthis._outlineDataSourceReference.object.onDidChange(() => {\n\t\t\t\t\tthis._onDidChange.fire({});\n\t\t\t\t}),\n\t\t\t);\n\t\t} else {\n\t\t\tthis._outlineDataSourceReference = undefined;\n\t\t}\n\n\t\t// these fields can be passed undefined outlineDataSources. View Providers all handle it accordingly\n\t\tthis._treeDataSource = this._dataSourceDisposables.add(\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\tNotebookOutlinePaneProvider,\n\t\t\t\tthis._outlineDataSourceReference,\n\t\t\t),\n\t\t);\n\t\tthis._quickPickDataSource = this._dataSourceDisposables.add(\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\tNotebookQuickPickProvider,\n\t\t\t\tthis._outlineDataSourceReference,\n\t\t\t),\n\t\t);\n\t\tthis._breadcrumbsDataSource = this._dataSourceDisposables.add(\n\t\t\tthis._instantiationService.createInstance(\n\t\t\t\tNotebookBreadcrumbsProvider,\n\t\t\t\tthis._outlineDataSourceReference,\n\t\t\t),\n\t\t);\n\t}\n\n\t/**\n\t * set up the listeners for the outline content, these respond to model changes in the notebook\n\t */\n\tprivate setModelListeners(): void {\n\t\tthis._modelDisposables.clear();\n\t\tif (!this._editor.textModel) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Perhaps this is the first time we're building the outline\n\t\tif (!this.entries.length) {\n\t\t\tthis.computeSymbols();\n\t\t}\n\n\t\t// recompute state when there are notebook content changes\n\t\tthis._modelDisposables.add(\n\t\t\tthis._editor.textModel.onDidChangeContent((contentChanges) => {\n\t\t\t\tif (\n\t\t\t\t\tcontentChanges.rawEvents.some(\n\t\t\t\t\t\t(c) =>\n\t\t\t\t\t\t\tc.kind ===\n\t\t\t\t\t\t\t\tNotebookCellsChangeType.ChangeCellContent ||\n\t\t\t\t\t\t\tc.kind ===\n\t\t\t\t\t\t\t\tNotebookCellsChangeType.ChangeCellInternalMetadata ||\n\t\t\t\t\t\t\tc.kind === NotebookCellsChangeType.Move ||\n\t\t\t\t\t\t\tc.kind === NotebookCellsChangeType.ModelChange,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tthis.delayedRecomputeState();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate async computeSymbols(\n\t\tcancelToken: CancellationToken = CancellationToken.None,\n\t) {\n\t\tif (\n\t\t\tthis._target === OutlineTarget.OutlinePane &&\n\t\t\tthis.outlineShowCodeCellSymbols\n\t\t) {\n\t\t\t// No need to wait for this, we want the outline to show up quickly.\n\t\t\tvoid this.doComputeSymbols(cancelToken);\n\t\t}\n\t}\n\tpublic async doComputeSymbols(\n\t\tcancelToken: CancellationToken,\n\t): Promise<void> {\n\t\tawait this._outlineDataSourceReference?.object?.computeFullSymbols(\n\t\t\tcancelToken,\n\t\t);\n\t}\n\tprivate async delayedComputeSymbols() {\n\t\tthis.delayerRecomputeState.cancel();\n\t\tthis.delayerRecomputeActive.cancel();\n\t\tthis.delayerRecomputeSymbols.trigger(() => {\n\t\t\tthis.computeSymbols();\n\t\t});\n\t}\n\n\tprivate recomputeState() {\n\t\tthis._outlineDataSourceReference?.object?.recomputeState();\n\t}\n\tprivate delayedRecomputeState() {\n\t\tthis.delayerRecomputeActive.cancel(); // Active is always recomputed after a recomputing the State.\n\t\tthis.delayerRecomputeState.trigger(() => {\n\t\t\tthis.recomputeState();\n\t\t});\n\t}\n\n\tprivate recomputeActive() {\n\t\tthis._outlineDataSourceReference?.object?.recomputeActive();\n\t}\n\tprivate delayedRecomputeActive() {\n\t\tthis.delayerRecomputeActive.trigger(() => {\n\t\t\tthis.recomputeActive();\n\t\t});\n\t}\n\n\tasync reveal(\n\t\tentry: OutlineEntry,\n\t\toptions: IEditorOptions,\n\t\tsideBySide: boolean,\n\t): Promise<void> {\n\t\tconst notebookEditorOptions: INotebookEditorOptions = {\n\t\t\t...options,\n\t\t\toverride: this._editor.input?.editorId,\n\t\t\tcellRevealType: CellRevealType.NearTopIfOutsideViewport,\n\t\t\tselection: entry.position,\n\t\t\tviewState: undefined,\n\t\t};\n\t\tawait this._editorService.openEditor(\n\t\t\t{\n\t\t\t\tresource: entry.cell.uri,\n\t\t\t\toptions: notebookEditorOptions,\n\t\t\t},\n\t\t\tsideBySide ? SIDE_GROUP : undefined,\n\t\t);\n\t}\n\n\tpreview(entry: OutlineEntry): IDisposable {\n\t\tconst widget = this._editor.getControl();\n\t\tif (!widget) {\n\t\t\treturn Disposable.None;\n\t\t}\n\n\t\tif (entry.range) {\n\t\t\tconst range = Range.lift(entry.range);\n\t\t\twidget.revealRangeInCenterIfOutsideViewportAsync(entry.cell, range);\n\t\t} else {\n\t\t\twidget.revealInCenterIfOutsideViewport(entry.cell);\n\t\t}\n\n\t\tconst ids = widget.deltaCellDecorations(\n\t\t\t[],\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\thandle: entry.cell.handle,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tclassName: \"nb-symbolHighlight\",\n\t\t\t\t\t\toutputClassName: \"nb-symbolHighlight\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t);\n\n\t\tlet editorDecorations: ICellModelDecorations[];\n\t\twidget.changeModelDecorations((accessor) => {\n\t\t\tif (entry.range) {\n\t\t\t\tconst decorations: IModelDeltaDecoration[] = [\n\t\t\t\t\t{\n\t\t\t\t\t\trange: entry.range,\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\"document-symbols-outline-range-highlight\",\n\t\t\t\t\t\t\tclassName: \"rangeHighlight\",\n\t\t\t\t\t\t\tisWholeLine: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t];\n\t\t\t\tconst deltaDecoration: ICellModelDeltaDecorations = {\n\t\t\t\t\townerId: entry.cell.handle,\n\t\t\t\t\tdecorations: decorations,\n\t\t\t\t};\n\n\t\t\t\teditorDecorations = accessor.deltaDecorations(\n\t\t\t\t\t[],\n\t\t\t\t\t[deltaDecoration],\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\treturn toDisposable(() => {\n\t\t\twidget.deltaCellDecorations(ids, []);\n\t\t\tif (editorDecorations?.length) {\n\t\t\t\twidget.changeModelDecorations((accessor) => {\n\t\t\t\t\taccessor.deltaDecorations(editorDecorations, []);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tcaptureViewState(): IDisposable {\n\t\tconst widget = this._editor.getControl();\n\t\tconst viewState = widget?.getEditorViewState();\n\t\treturn toDisposable(() => {\n\t\t\tif (viewState) {\n\t\t\t\twidget?.restoreListViewState(viewState);\n\t\t\t}\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis._onDidChange.dispose();\n\t\tthis._disposables.dispose();\n\t\tthis._modelDisposables.dispose();\n\t\tthis._dataSourceDisposables.dispose();\n\t\tthis._outlineDataSourceReference?.dispose();\n\t}\n}\n\nexport class NotebookOutlineCreator\n\timplements IOutlineCreator<NotebookEditor, OutlineEntry>\n{\n\treadonly dispose: () => void;\n\n\tconstructor(\n\t\t@IOutlineService outlineService: IOutlineService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService\n\t) {\n\t\tconst reg = outlineService.registerOutlineCreator(this);\n\t\tthis.dispose = () => reg.dispose();\n\t}\n\n\tmatches(candidate: IEditorPane): candidate is NotebookEditor {\n\t\treturn candidate.getId() === NotebookEditor.ID;\n\t}\n\n\tasync createOutline(\n\t\teditor: INotebookEditorPane,\n\t\ttarget: OutlineTarget,\n\t\tcancelToken: CancellationToken,\n\t): Promise<IOutline<OutlineEntry> | undefined> {\n\t\tconst outline = this._instantiationService.createInstance(\n\t\t\tNotebookCellOutline,\n\t\t\teditor,\n\t\t\ttarget,\n\t\t);\n\t\tif (target === OutlineTarget.QuickPick) {\n\t\t\t// The quickpick creates the outline on demand\n\t\t\t// so we need to ensure the symbols are pre-cached before the entries are syncronously requested\n\t\t\tawait outline.doComputeSymbols(cancelToken);\n\t\t}\n\t\treturn outline;\n\t}\n}\n\nexport const NotebookOutlineContext = {\n\tCellKind: new RawContextKey<CellKind>(\"notebookCellKind\", undefined),\n\tCellHasChildren: new RawContextKey<boolean>(\n\t\t\"notebookCellHasChildren\",\n\t\tfalse,\n\t),\n\tCellHasHeader: new RawContextKey<boolean>(\"notebookCellHasHeader\", false),\n\tCellFoldingState: new RawContextKey<CellFoldingState>(\n\t\t\"notebookCellFoldingState\",\n\t\tCellFoldingState.None,\n\t),\n\tOutlineElementTarget: new RawContextKey<OutlineTarget>(\n\t\t\"notebookOutlineElementTarget\",\n\t\tundefined,\n\t),\n};\n\nRegistry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n).registerWorkbenchContribution(\n\tNotebookOutlineCreator,\n\tLifecyclePhase.Eventually,\n);\n\nRegistry.as<IConfigurationRegistry>(\n\tConfigurationExtensions.Configuration,\n).registerConfiguration({\n\tid: \"notebook\",\n\torder: 100,\n\ttype: \"object\",\n\tproperties: {\n\t\t[NotebookSetting.outlineShowMarkdownHeadersOnly]: {\n\t\t\ttype: \"boolean\",\n\t\t\tdefault: true,\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t\"outline.showMarkdownHeadersOnly\",\n\t\t\t\t\"When enabled, notebook outline will show only markdown cells containing a header.\",\n\t\t\t),\n\t\t},\n\t\t[NotebookSetting.outlineShowCodeCells]: {\n\t\t\ttype: \"boolean\",\n\t\t\tdefault: false,\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t\"outline.showCodeCells\",\n\t\t\t\t\"When enabled, notebook outline shows code cells.\",\n\t\t\t),\n\t\t},\n\t\t[NotebookSetting.outlineShowCodeCellSymbols]: {\n\t\t\ttype: \"boolean\",\n\t\t\tdefault: true,\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t\"outline.showCodeCellSymbols\",\n\t\t\t\t\"When enabled, notebook outline shows code cell symbols. Relies on `notebook.outline.showCodeCells` being enabled.\",\n\t\t\t),\n\t\t},\n\t\t[NotebookSetting.breadcrumbsShowCodeCells]: {\n\t\t\ttype: \"boolean\",\n\t\t\tdefault: true,\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t\"breadcrumbs.showCodeCells\",\n\t\t\t\t\"When enabled, notebook breadcrumbs contain code cells.\",\n\t\t\t),\n\t\t},\n\t\t[NotebookSetting.gotoSymbolsAllSymbols]: {\n\t\t\ttype: \"boolean\",\n\t\t\tdefault: true,\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t\"notebook.gotoSymbols.showAllSymbols\",\n\t\t\t\t\"When enabled, the Go to Symbol Quick Pick will display full code symbols from the notebook, as well as Markdown headers.\",\n\t\t\t),\n\t\t},\n\t},\n});\n\nMenuRegistry.appendMenuItem(MenuId.ViewTitle, {\n\tsubmenu: MenuId.NotebookOutlineFilter,\n\ttitle: localize(\"filter\", \"Filter Entries\"),\n\ticon: Codicon.filter,\n\tgroup: \"navigation\",\n\torder: -1,\n\twhen: ContextKeyExpr.and(\n\t\tContextKeyExpr.equals(\"view\", IOutlinePane.Id),\n\t\tNOTEBOOK_IS_ACTIVE_EDITOR,\n\t),\n});\n\nregisterAction2(\n\tclass ToggleShowMarkdownHeadersOnly extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"notebook.outline.toggleShowMarkdownHeadersOnly\",\n\t\t\t\ttitle: localize(\n\t\t\t\t\t\"toggleShowMarkdownHeadersOnly\",\n\t\t\t\t\t\"Markdown Headers Only\",\n\t\t\t\t),\n\t\t\t\tf1: false,\n\t\t\t\ttoggled: {\n\t\t\t\t\tcondition: ContextKeyExpr.equals(\n\t\t\t\t\t\t\"config.notebook.outline.showMarkdownHeadersOnly\",\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookOutlineFilter,\n\t\t\t\t\tgroup: \"0_markdown_cells\",\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\t\tconst showMarkdownHeadersOnly =\n\t\t\t\tconfigurationService.getValue<boolean>(\n\t\t\t\t\tNotebookSetting.outlineShowMarkdownHeadersOnly,\n\t\t\t\t);\n\t\t\tconfigurationService.updateValue(\n\t\t\t\tNotebookSetting.outlineShowMarkdownHeadersOnly,\n\t\t\t\t!showMarkdownHeadersOnly,\n\t\t\t);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass ToggleCodeCellEntries extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"notebook.outline.toggleCodeCells\",\n\t\t\t\ttitle: localize(\"toggleCodeCells\", \"Code Cells\"),\n\t\t\t\tf1: false,\n\t\t\t\ttoggled: {\n\t\t\t\t\tcondition: ContextKeyExpr.equals(\n\t\t\t\t\t\t\"config.notebook.outline.showCodeCells\",\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookOutlineFilter,\n\t\t\t\t\torder: 1,\n\t\t\t\t\tgroup: \"1_code_cells\",\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\t\tconst showCodeCells = configurationService.getValue<boolean>(\n\t\t\t\tNotebookSetting.outlineShowCodeCells,\n\t\t\t);\n\t\t\tconfigurationService.updateValue(\n\t\t\t\tNotebookSetting.outlineShowCodeCells,\n\t\t\t\t!showCodeCells,\n\t\t\t);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass ToggleCodeCellSymbolEntries extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"notebook.outline.toggleCodeCellSymbols\",\n\t\t\t\ttitle: localize(\"toggleCodeCellSymbols\", \"Code Cell Symbols\"),\n\t\t\t\tf1: false,\n\t\t\t\ttoggled: {\n\t\t\t\t\tcondition: ContextKeyExpr.equals(\n\t\t\t\t\t\t\"config.notebook.outline.showCodeCellSymbols\",\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookOutlineFilter,\n\t\t\t\t\torder: 2,\n\t\t\t\t\tgroup: \"1_code_cells\",\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\t\tconst showCodeCellSymbols = configurationService.getValue<boolean>(\n\t\t\t\tNotebookSetting.outlineShowCodeCellSymbols,\n\t\t\t);\n\t\t\tconfigurationService.updateValue(\n\t\t\t\tNotebookSetting.outlineShowCodeCellSymbols,\n\t\t\t\t!showCodeCellSymbols,\n\t\t\t);\n\t\t}\n\t},\n);\n"],
  "mappings": "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",
  "names": ["foldingState", "actions"]
}
