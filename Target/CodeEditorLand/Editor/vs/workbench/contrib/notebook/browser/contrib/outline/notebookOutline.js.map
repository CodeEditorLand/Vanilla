{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/outline/notebookOutline.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../../../../nls.js';\nimport * as DOM from '../../../../../../base/browser/dom.js';\nimport { ToolBar } from '../../../../../../base/browser/ui/toolbar/toolbar.js';\nimport { IIconLabelValueOptions, IconLabel } from '../../../../../../base/browser/ui/iconLabel/iconLabel.js';\nimport { IKeyboardNavigationLabelProvider, IListVirtualDelegate } from '../../../../../../base/browser/ui/list/list.js';\nimport { IListAccessibilityProvider } from '../../../../../../base/browser/ui/list/listWidget.js';\nimport { IDataSource, ITreeNode, ITreeRenderer } from '../../../../../../base/browser/ui/tree/tree.js';\nimport { Emitter, Event } from '../../../../../../base/common/event.js';\nimport { FuzzyScore, createMatches } from '../../../../../../base/common/filters.js';\nimport { Disposable, DisposableStore, IDisposable, toDisposable, type IReference } from '../../../../../../base/common/lifecycle.js';\nimport { ThemeIcon } from '../../../../../../base/common/themables.js';\nimport { URI } from '../../../../../../base/common/uri.js';\nimport { getIconClassesForLanguageId } from '../../../../../../editor/common/services/getIconClasses.js';\nimport { IConfigurationService } from '../../../../../../platform/configuration/common/configuration.js';\nimport { Extensions as ConfigurationExtensions, IConfigurationRegistry } from '../../../../../../platform/configuration/common/configurationRegistry.js';\nimport { IEditorOptions } from '../../../../../../platform/editor/common/editor.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../../../platform/instantiation/common/instantiation.js';\nimport { IWorkbenchDataTreeOptions } from '../../../../../../platform/list/browser/listService.js';\nimport { MarkerSeverity } from '../../../../../../platform/markers/common/markers.js';\nimport { Registry } from '../../../../../../platform/registry/common/platform.js';\nimport { listErrorForeground, listWarningForeground } from '../../../../../../platform/theme/common/colorRegistry.js';\nimport { IThemeService } from '../../../../../../platform/theme/common/themeService.js';\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions } from '../../../../../common/contributions.js';\nimport { IEditorPane } from '../../../../../common/editor.js';\nimport { CellFoldingState, CellRevealType, ICellModelDecorations, ICellModelDeltaDecorations, ICellViewModel, INotebookEditor, INotebookEditorOptions, INotebookEditorPane, INotebookViewModel } from '../../notebookBrowser.js';\nimport { NotebookEditor } from '../../notebookEditor.js';\nimport { INotebookCellOutlineDataSource, NotebookCellOutlineDataSource } from '../../viewModel/notebookOutlineDataSource.js';\nimport { CellKind, NotebookCellsChangeType, NotebookSetting } from '../../../common/notebookCommon.js';\nimport { IEditorService, SIDE_GROUP } from '../../../../../services/editor/common/editorService.js';\nimport { LifecyclePhase } from '../../../../../services/lifecycle/common/lifecycle.js';\nimport { IBreadcrumbsDataSource, IOutline, IOutlineComparator, IOutlineCreator, IOutlineListConfig, IOutlineService, IQuickPickDataSource, IQuickPickOutlineElement, OutlineChangeEvent, OutlineConfigCollapseItemsValues, OutlineConfigKeys, OutlineTarget } from '../../../../../services/outline/browser/outline.js';\nimport { OutlineEntry } from '../../viewModel/OutlineEntry.js';\nimport { CancellationToken } from '../../../../../../base/common/cancellation.js';\nimport { IModelDeltaDecoration } from '../../../../../../editor/common/model.js';\nimport { Range } from '../../../../../../editor/common/core/range.js';\nimport { mainWindow } from '../../../../../../base/browser/window.js';\nimport { IContextMenuService } from '../../../../../../platform/contextview/browser/contextView.js';\nimport { Action2, IMenu, IMenuService, MenuId, MenuItemAction, MenuRegistry, registerAction2 } from '../../../../../../platform/actions/common/actions.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../../../platform/contextkey/common/contextkey.js';\nimport { MenuEntryActionViewItem, createAndFillInActionBarActions } from '../../../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { IAction } from '../../../../../../base/common/actions.js';\nimport { NotebookSectionArgs } from '../../controller/sectionActions.js';\nimport { MarkupCellViewModel } from '../../viewModel/markupCellViewModel.js';\nimport { Delayer, disposableTimeout } from '../../../../../../base/common/async.js';\nimport { IOutlinePane } from '../../../../outline/browser/outline.js';\nimport { Codicon } from '../../../../../../base/common/codicons.js';\nimport { NOTEBOOK_IS_ACTIVE_EDITOR } from '../../../common/notebookContextKeys.js';\nimport { NotebookOutlineConstants } from '../../viewModel/notebookOutlineEntryFactory.js';\nimport { INotebookCellOutlineDataSourceFactory } from '../../viewModel/notebookOutlineDataSourceFactory.js';\nimport { INotebookExecutionStateService, NotebookExecutionType } from '../../../common/notebookExecutionStateService.js';\nimport { ILanguageFeaturesService } from '../../../../../../editor/common/services/languageFeatures.js';\n\nclass NotebookOutlineTemplate {\n\n\tstatic readonly templateId = 'NotebookOutlineRenderer';\n\n\tconstructor(\n\t\treadonly container: HTMLElement,\n\t\treadonly iconClass: HTMLElement,\n\t\treadonly iconLabel: IconLabel,\n\t\treadonly decoration: HTMLElement,\n\t\treadonly actionMenu: HTMLElement,\n\t\treadonly elementDisposables: DisposableStore,\n\t) { }\n}\n\nclass NotebookOutlineRenderer implements ITreeRenderer<OutlineEntry, FuzzyScore, NotebookOutlineTemplate> {\n\n\ttemplateId: string = NotebookOutlineTemplate.templateId;\n\n\tconstructor(\n\t\tprivate readonly _editor: INotebookEditor | undefined,\n\t\tprivate readonly _target: OutlineTarget,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IContextMenuService private readonly _contextMenuService: IContextMenuService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IMenuService private readonly _menuService: IMenuService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t) { }\n\n\trenderTemplate(container: HTMLElement): NotebookOutlineTemplate {\n\t\tconst elementDisposables = new DisposableStore();\n\n\t\tcontainer.classList.add('notebook-outline-element', 'show-file-icons');\n\t\tconst iconClass = document.createElement('div');\n\t\tcontainer.append(iconClass);\n\t\tconst iconLabel = new IconLabel(container, { supportHighlights: true });\n\t\tconst decoration = document.createElement('div');\n\t\tdecoration.className = 'element-decoration';\n\t\tcontainer.append(decoration);\n\t\tconst actionMenu = document.createElement('div');\n\t\tactionMenu.className = 'action-menu';\n\t\tcontainer.append(actionMenu);\n\n\t\treturn new NotebookOutlineTemplate(container, iconClass, iconLabel, decoration, actionMenu, elementDisposables);\n\t}\n\n\trenderElement(node: ITreeNode<OutlineEntry, FuzzyScore>, _index: number, template: NotebookOutlineTemplate, _height: number | undefined): void {\n\t\tconst extraClasses: string[] = [];\n\t\tconst options: IIconLabelValueOptions = {\n\t\t\tmatches: createMatches(node.filterData),\n\t\t\tlabelEscapeNewLines: true,\n\t\t\textraClasses,\n\t\t};\n\n\t\tconst isCodeCell = node.element.cell.cellKind === CellKind.Code;\n\t\tif (node.element.level >= 8) { // symbol\n\t\t\ttemplate.iconClass.className = 'element-icon ' + ThemeIcon.asClassNameArray(node.element.icon).join(' ');\n\t\t} else if (isCodeCell && this._themeService.getFileIconTheme().hasFileIcons && !node.element.isExecuting) {\n\t\t\ttemplate.iconClass.className = '';\n\t\t\textraClasses.push(...getIconClassesForLanguageId(node.element.cell.language ?? ''));\n\t\t} else {\n\t\t\ttemplate.iconClass.className = 'element-icon ' + ThemeIcon.asClassNameArray(node.element.icon).join(' ');\n\t\t}\n\n\t\ttemplate.iconLabel.setLabel(' ' + node.element.label, undefined, options);\n\n\t\tconst { markerInfo } = node.element;\n\n\t\ttemplate.container.style.removeProperty('--outline-element-color');\n\t\ttemplate.decoration.innerText = '';\n\t\tif (markerInfo) {\n\t\t\tconst problem = this._configurationService.getValue('problems.visibility');\n\t\t\tconst useBadges = this._configurationService.getValue(OutlineConfigKeys.problemsBadges);\n\n\t\t\tif (!useBadges || !problem) {\n\t\t\t\ttemplate.decoration.classList.remove('bubble');\n\t\t\t\ttemplate.decoration.innerText = '';\n\t\t\t} else if (markerInfo.count === 0) {\n\t\t\t\ttemplate.decoration.classList.add('bubble');\n\t\t\t\ttemplate.decoration.innerText = '\\uea71';\n\t\t\t} else {\n\t\t\t\ttemplate.decoration.classList.remove('bubble');\n\t\t\t\ttemplate.decoration.innerText = markerInfo.count > 9 ? '9+' : String(markerInfo.count);\n\t\t\t}\n\t\t\tconst color = this._themeService.getColorTheme().getColor(markerInfo.topSev === MarkerSeverity.Error ? listErrorForeground : listWarningForeground);\n\t\t\tif (problem === undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst useColors = this._configurationService.getValue(OutlineConfigKeys.problemsColors);\n\t\t\tif (!useColors || !problem) {\n\t\t\t\ttemplate.container.style.removeProperty('--outline-element-color');\n\t\t\t\ttemplate.decoration.style.setProperty('--outline-element-color', color?.toString() ?? 'inherit');\n\t\t\t} else {\n\t\t\t\ttemplate.container.style.setProperty('--outline-element-color', color?.toString() ?? 'inherit');\n\t\t\t}\n\t\t}\n\n\t\tif (this._target === OutlineTarget.OutlinePane) {\n\t\t\tconst nbCell = node.element.cell;\n\t\t\tconst nbViewModel = this._editor?.getViewModel();\n\t\t\tif (!nbViewModel) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst idx = nbViewModel.getCellIndex(nbCell);\n\t\t\tconst length = isCodeCell ? 0 : nbViewModel.getFoldedLength(idx);\n\n\t\t\tconst scopedContextKeyService = template.elementDisposables.add(this._contextKeyService.createScoped(template.container));\n\t\t\tNotebookOutlineContext.CellKind.bindTo(scopedContextKeyService).set(isCodeCell ? CellKind.Code : CellKind.Markup);\n\t\t\tNotebookOutlineContext.CellHasChildren.bindTo(scopedContextKeyService).set(length > 0);\n\t\t\tNotebookOutlineContext.CellHasHeader.bindTo(scopedContextKeyService).set(node.element.level !== NotebookOutlineConstants.NonHeaderOutlineLevel);\n\t\t\tNotebookOutlineContext.OutlineElementTarget.bindTo(scopedContextKeyService).set(this._target);\n\t\t\tthis.setupFolding(isCodeCell, nbViewModel, scopedContextKeyService, template, nbCell);\n\n\t\t\tconst outlineEntryToolbar = template.elementDisposables.add(new ToolBar(template.actionMenu, this._contextMenuService, {\n\t\t\t\tactionViewItemProvider: action => {\n\t\t\t\t\tif (action instanceof MenuItemAction) {\n\t\t\t\t\t\treturn this._instantiationService.createInstance(MenuEntryActionViewItem, action, undefined);\n\t\t\t\t\t}\n\t\t\t\t\treturn undefined;\n\t\t\t\t},\n\t\t\t}));\n\n\t\t\tconst menu = template.elementDisposables.add(this._menuService.createMenu(MenuId.NotebookOutlineActionMenu, scopedContextKeyService));\n\t\t\tconst actions = getOutlineToolbarActions(menu, { notebookEditor: this._editor, outlineEntry: node.element });\n\t\t\toutlineEntryToolbar.setActions(actions.primary, actions.secondary);\n\n\t\t\tthis.setupToolbarListeners(outlineEntryToolbar, menu, actions, node.element, template);\n\t\t\ttemplate.actionMenu.style.padding = '0 0.8em 0 0.4em';\n\t\t}\n\t}\n\n\tdisposeTemplate(templateData: NotebookOutlineTemplate): void {\n\t\ttemplateData.iconLabel.dispose();\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeElement(element: ITreeNode<OutlineEntry, FuzzyScore>, index: number, templateData: NotebookOutlineTemplate, height: number | undefined): void {\n\t\ttemplateData.elementDisposables.clear();\n\t\tDOM.clearNode(templateData.actionMenu);\n\t}\n\n\tprivate setupFolding(isCodeCell: boolean, nbViewModel: INotebookViewModel, scopedContextKeyService: IContextKeyService, template: NotebookOutlineTemplate, nbCell: ICellViewModel) {\n\t\tconst foldingState = isCodeCell ? CellFoldingState.None : ((nbCell as MarkupCellViewModel).foldingState);\n\t\tconst foldingStateCtx = NotebookOutlineContext.CellFoldingState.bindTo(scopedContextKeyService);\n\t\tfoldingStateCtx.set(foldingState);\n\n\t\tif (!isCodeCell) {\n\t\t\ttemplate.elementDisposables.add(nbViewModel.onDidFoldingStateChanged(() => {\n\t\t\t\tconst foldingState = (nbCell as MarkupCellViewModel).foldingState;\n\t\t\t\tNotebookOutlineContext.CellFoldingState.bindTo(scopedContextKeyService).set(foldingState);\n\t\t\t\tfoldingStateCtx.set(foldingState);\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate setupToolbarListeners(toolbar: ToolBar, menu: IMenu, initActions: { primary: IAction[]; secondary: IAction[] }, entry: OutlineEntry, templateData: NotebookOutlineTemplate): void {\n\t\t// same fix as in cellToolbars setupListeners re #103926\n\t\tlet dropdownIsVisible = false;\n\t\tlet deferredUpdate: (() => void) | undefined;\n\n\t\ttoolbar.setActions(initActions.primary, initActions.secondary);\n\t\ttemplateData.elementDisposables.add(menu.onDidChange(() => {\n\t\t\tif (dropdownIsVisible) {\n\t\t\t\tconst actions = getOutlineToolbarActions(menu, { notebookEditor: this._editor, outlineEntry: entry });\n\t\t\t\tdeferredUpdate = () => toolbar.setActions(actions.primary, actions.secondary);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst actions = getOutlineToolbarActions(menu, { notebookEditor: this._editor, outlineEntry: entry });\n\t\t\ttoolbar.setActions(actions.primary, actions.secondary);\n\t\t}));\n\n\t\ttemplateData.container.classList.remove('notebook-outline-toolbar-dropdown-active');\n\t\ttemplateData.elementDisposables.add(toolbar.onDidChangeDropdownVisibility(visible => {\n\t\t\tdropdownIsVisible = visible;\n\t\t\tif (visible) {\n\t\t\t\ttemplateData.container.classList.add('notebook-outline-toolbar-dropdown-active');\n\t\t\t} else {\n\t\t\t\ttemplateData.container.classList.remove('notebook-outline-toolbar-dropdown-active');\n\t\t\t}\n\n\t\t\tif (deferredUpdate && !visible) {\n\t\t\t\tdisposableTimeout(() => {\n\t\t\t\t\tdeferredUpdate?.();\n\t\t\t\t}, 0, templateData.elementDisposables);\n\n\t\t\t\tdeferredUpdate = undefined;\n\t\t\t}\n\t\t}));\n\n\t}\n}\n\nfunction getOutlineToolbarActions(menu: IMenu, args?: NotebookSectionArgs): { primary: IAction[]; secondary: IAction[] } {\n\tconst primary: IAction[] = [];\n\tconst secondary: IAction[] = [];\n\tconst result = { primary, secondary };\n\n\t// TODO: @Yoyokrazy bring the \"inline\" back when there's an appropriate run in section icon\n\tcreateAndFillInActionBarActions(menu, { shouldForwardArgs: true, arg: args }, result); //, g => /^inline/.test(g));\n\n\treturn result;\n}\n\nclass NotebookOutlineAccessibility implements IListAccessibilityProvider<OutlineEntry> {\n\tgetAriaLabel(element: OutlineEntry): string | null {\n\t\treturn element.label;\n\t}\n\tgetWidgetAriaLabel(): string {\n\t\treturn '';\n\t}\n}\n\nclass NotebookNavigationLabelProvider implements IKeyboardNavigationLabelProvider<OutlineEntry> {\n\tgetKeyboardNavigationLabel(element: OutlineEntry): { toString(): string | undefined } | { toString(): string | undefined }[] | undefined {\n\t\treturn element.label;\n\t}\n}\n\nclass NotebookOutlineVirtualDelegate implements IListVirtualDelegate<OutlineEntry> {\n\n\tgetHeight(_element: OutlineEntry): number {\n\t\treturn 22;\n\t}\n\n\tgetTemplateId(_element: OutlineEntry): string {\n\t\treturn NotebookOutlineTemplate.templateId;\n\t}\n}\n\nexport class NotebookQuickPickProvider implements IQuickPickDataSource<OutlineEntry> {\n\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate gotoShowCodeCellSymbols: boolean;\n\n\tconstructor(\n\t\tprivate readonly notebookCellOutlineDataSourceRef: IReference<INotebookCellOutlineDataSource> | undefined,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IThemeService private readonly _themeService: IThemeService\n\t) {\n\t\tthis.gotoShowCodeCellSymbols = this._configurationService.getValue<boolean>(NotebookSetting.gotoSymbolsAllSymbols);\n\n\t\tthis._disposables.add(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(NotebookSetting.gotoSymbolsAllSymbols)) {\n\t\t\t\tthis.gotoShowCodeCellSymbols = this._configurationService.getValue<boolean>(NotebookSetting.gotoSymbolsAllSymbols);\n\t\t\t}\n\t\t}));\n\t}\n\n\tgetQuickPickElements(): IQuickPickOutlineElement<OutlineEntry>[] {\n\t\tconst bucket: OutlineEntry[] = [];\n\t\tfor (const entry of this.notebookCellOutlineDataSourceRef?.object?.entries ?? []) {\n\t\t\tentry.asFlatList(bucket);\n\t\t}\n\t\tconst result: IQuickPickOutlineElement<OutlineEntry>[] = [];\n\t\tconst { hasFileIcons } = this._themeService.getFileIconTheme();\n\n\t\tconst isSymbol = (element: OutlineEntry) => !!element.symbolKind;\n\t\tconst isCodeCell = (element: OutlineEntry) => (element.cell.cellKind === CellKind.Code && element.level === NotebookOutlineConstants.NonHeaderOutlineLevel); // code cell entries are exactly level 7 by this constant\n\t\tfor (let i = 0; i < bucket.length; i++) {\n\t\t\tconst element = bucket[i];\n\t\t\tconst nextElement = bucket[i + 1]; // can be undefined\n\n\t\t\tif (!this.gotoShowCodeCellSymbols\n\t\t\t\t&& isSymbol(element)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (this.gotoShowCodeCellSymbols\n\t\t\t\t&& isCodeCell(element)\n\t\t\t\t&& nextElement && isSymbol(nextElement)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst useFileIcon = hasFileIcons && !element.symbolKind;\n\t\t\t// todo@jrieken it is fishy that codicons cannot be used with iconClasses\n\t\t\t// but file icons can...\n\t\t\tresult.push({\n\t\t\t\telement,\n\t\t\t\tlabel: useFileIcon ? element.label : `$(${element.icon.id}) ${element.label}`,\n\t\t\t\tariaLabel: element.label,\n\t\t\t\ticonClasses: useFileIcon ? getIconClassesForLanguageId(element.cell.language ?? '') : undefined,\n\t\t\t});\n\t\t}\n\t\treturn result;\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n}\n\nexport class NotebookOutlinePaneProvider implements IDataSource<NotebookCellOutline, OutlineEntry> {\n\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate showCodeCells: boolean;\n\tprivate showCodeCellSymbols: boolean;\n\tprivate showMarkdownHeadersOnly: boolean;\n\n\tconstructor(\n\t\tprivate readonly outlineDataSourceRef: IReference<INotebookCellOutlineDataSource> | undefined,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t) {\n\t\tthis.showCodeCells = this._configurationService.getValue<boolean>(NotebookSetting.outlineShowCodeCells);\n\t\tthis.showCodeCellSymbols = this._configurationService.getValue<boolean>(NotebookSetting.outlineShowCodeCellSymbols);\n\t\tthis.showMarkdownHeadersOnly = this._configurationService.getValue<boolean>(NotebookSetting.outlineShowMarkdownHeadersOnly);\n\n\t\tthis._disposables.add(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(NotebookSetting.outlineShowCodeCells)) {\n\t\t\t\tthis.showCodeCells = this._configurationService.getValue<boolean>(NotebookSetting.outlineShowCodeCells);\n\t\t\t}\n\t\t\tif (e.affectsConfiguration(NotebookSetting.outlineShowCodeCellSymbols)) {\n\t\t\t\tthis.showCodeCellSymbols = this._configurationService.getValue<boolean>(NotebookSetting.outlineShowCodeCellSymbols);\n\t\t\t}\n\t\t\tif (e.affectsConfiguration(NotebookSetting.outlineShowMarkdownHeadersOnly)) {\n\t\t\t\tthis.showMarkdownHeadersOnly = this._configurationService.getValue<boolean>(NotebookSetting.outlineShowMarkdownHeadersOnly);\n\t\t\t}\n\t\t}));\n\t}\n\n\tpublic getActiveEntry(): OutlineEntry | undefined {\n\t\tconst newActive = this.outlineDataSourceRef?.object?.activeElement;\n\t\tif (!newActive) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this.filterEntry(newActive)) {\n\t\t\treturn newActive;\n\t\t}\n\n\t\t// find a valid parent\n\t\tlet parent = newActive.parent;\n\t\twhile (parent) {\n\t\t\tif (this.filterEntry(parent)) {\n\t\t\t\tparent = parent.parent;\n\t\t\t} else {\n\t\t\t\treturn parent;\n\t\t\t}\n\t\t}\n\n\t\t// no valid parent found, return undefined\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Checks if the given outline entry should be filtered out of the outlinePane\n\t *\n\t * @param entry the OutlineEntry to check\n\t * @returns true if the entry should be filtered out of the outlinePane\n\t */\n\tprivate filterEntry(entry: OutlineEntry): boolean {\n\t\t// if any are true, return true, this entry should NOT be included in the outline\n\t\tif (\n\t\t\t(this.showMarkdownHeadersOnly && entry.cell.cellKind === CellKind.Markup && entry.level === NotebookOutlineConstants.NonHeaderOutlineLevel) ||\t// show headers only   + cell is mkdn + is level 7 (not header)\n\t\t\t(!this.showCodeCells && entry.cell.cellKind === CellKind.Code) ||\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// show code cells off + cell is code\n\t\t\t(!this.showCodeCellSymbols && entry.cell.cellKind === CellKind.Code && entry.level > NotebookOutlineConstants.NonHeaderOutlineLevel)\t\t\t\t// show symbols off    + cell is code + is level >7 (nb symbol levels)\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t*getChildren(element: NotebookCellOutline | OutlineEntry): Iterable<OutlineEntry> {\n\t\tconst isOutline = element instanceof NotebookCellOutline;\n\t\tconst entries = isOutline ? this.outlineDataSourceRef?.object?.entries ?? [] : element.children;\n\n\t\tfor (const entry of entries) {\n\t\t\tif (entry.cell.cellKind === CellKind.Markup) {\n\t\t\t\tif (!this.showMarkdownHeadersOnly) {\n\t\t\t\t\tyield entry;\n\t\t\t\t} else if (entry.level < NotebookOutlineConstants.NonHeaderOutlineLevel) {\n\t\t\t\t\tyield entry;\n\t\t\t\t}\n\n\t\t\t} else if (this.showCodeCells && entry.cell.cellKind === CellKind.Code) {\n\t\t\t\tif (this.showCodeCellSymbols) {\n\t\t\t\t\tyield entry;\n\t\t\t\t} else if (entry.level === NotebookOutlineConstants.NonHeaderOutlineLevel) {\n\t\t\t\t\tyield entry;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n}\n\nexport class NotebookBreadcrumbsProvider implements IBreadcrumbsDataSource<OutlineEntry> {\n\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate showCodeCells: boolean;\n\n\tconstructor(\n\t\tprivate readonly outlineDataSourceRef: IReference<INotebookCellOutlineDataSource> | undefined,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t) {\n\t\tthis.showCodeCells = this._configurationService.getValue<boolean>(NotebookSetting.breadcrumbsShowCodeCells);\n\t\tthis._disposables.add(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(NotebookSetting.breadcrumbsShowCodeCells)) {\n\t\t\t\tthis.showCodeCells = this._configurationService.getValue<boolean>(NotebookSetting.breadcrumbsShowCodeCells);\n\t\t\t}\n\t\t}));\n\t}\n\n\tgetBreadcrumbElements(): readonly OutlineEntry[] {\n\t\tconst result: OutlineEntry[] = [];\n\t\tlet candidate = this.outlineDataSourceRef?.object?.activeElement;\n\t\twhile (candidate) {\n\t\t\tif (this.showCodeCells || candidate.cell.cellKind !== CellKind.Code) {\n\t\t\t\tresult.unshift(candidate);\n\t\t\t}\n\t\t\tcandidate = candidate.parent;\n\t\t}\n\t\treturn result;\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n}\n\nclass NotebookComparator implements IOutlineComparator<OutlineEntry> {\n\n\tprivate readonly _collator = new DOM.WindowIdleValue<Intl.Collator>(mainWindow, () => new Intl.Collator(undefined, { numeric: true }));\n\n\tcompareByPosition(a: OutlineEntry, b: OutlineEntry): number {\n\t\treturn a.index - b.index;\n\t}\n\tcompareByType(a: OutlineEntry, b: OutlineEntry): number {\n\t\treturn a.cell.cellKind - b.cell.cellKind || this._collator.value.compare(a.label, b.label);\n\t}\n\tcompareByName(a: OutlineEntry, b: OutlineEntry): number {\n\t\treturn this._collator.value.compare(a.label, b.label);\n\t}\n}\n\nexport class NotebookCellOutline implements IOutline<OutlineEntry> {\n\treadonly outlineKind = 'notebookCells';\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate readonly _modelDisposables = new DisposableStore();\n\tprivate readonly _dataSourceDisposables = new DisposableStore();\n\n\tprivate readonly _onDidChange = new Emitter<OutlineChangeEvent>();\n\treadonly onDidChange: Event<OutlineChangeEvent> = this._onDidChange.event;\n\n\tprivate readonly delayerRecomputeState: Delayer<void> = this._disposables.add(new Delayer<void>(300));\n\tprivate readonly delayerRecomputeActive: Delayer<void> = this._disposables.add(new Delayer<void>(200));\n\t// this can be long, because it will force a recompute at the end, so ideally we only do this once all nb language features are registered\n\tprivate readonly delayerRecomputeSymbols: Delayer<void> = this._disposables.add(new Delayer<void>(2000));\n\n\treadonly config: IOutlineListConfig<OutlineEntry>;\n\tprivate _outlineDataSourceReference: IReference<NotebookCellOutlineDataSource> | undefined;\n\t// These three fields will always be set via setDataSources() on L475\n\tprivate _treeDataSource!: IDataSource<NotebookCellOutline, OutlineEntry>;\n\tprivate _quickPickDataSource!: IQuickPickDataSource<OutlineEntry>;\n\tprivate _breadcrumbsDataSource!: IBreadcrumbsDataSource<OutlineEntry>;\n\n\t// view settings\n\tprivate outlineShowCodeCellSymbols: boolean;\n\n\t// getters\n\tget activeElement(): OutlineEntry | undefined {\n\t\tthis.checkDelayer();\n\t\tif (this._target === OutlineTarget.OutlinePane) {\n\t\t\treturn (this.config.treeDataSource as NotebookOutlinePaneProvider).getActiveEntry();\n\t\t} else {\n\t\t\tconsole.error('activeElement should not be called outside of the OutlinePane');\n\t\t\treturn undefined;\n\t\t}\n\t}\n\tget entries(): OutlineEntry[] {\n\t\tthis.checkDelayer();\n\t\treturn this._outlineDataSourceReference?.object?.entries ?? [];\n\t}\n\tget uri(): URI | undefined {\n\t\treturn this._outlineDataSourceReference?.object?.uri;\n\t}\n\tget isEmpty(): boolean {\n\t\treturn this._outlineDataSourceReference?.object?.isEmpty ?? true;\n\t}\n\n\tprivate checkDelayer() {\n\t\tif (this.delayerRecomputeState.isTriggered()) {\n\t\t\tthis.delayerRecomputeState.cancel();\n\t\t\tthis.recomputeState();\n\t\t}\n\t}\n\n\tconstructor(\n\t\tprivate readonly _editor: INotebookEditorPane,\n\t\tprivate readonly _target: OutlineTarget,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@INotebookExecutionStateService private readonly _notebookExecutionStateService: INotebookExecutionStateService,\n\t) {\n\t\tthis.outlineShowCodeCellSymbols = this._configurationService.getValue<boolean>(NotebookSetting.outlineShowCodeCellSymbols);\n\n\t\tthis.initializeOutline();\n\n\t\tconst delegate = new NotebookOutlineVirtualDelegate();\n\t\tconst renderers = [this._instantiationService.createInstance(NotebookOutlineRenderer, this._editor.getControl(), this._target)];\n\t\tconst comparator = new NotebookComparator();\n\n\t\tconst options: IWorkbenchDataTreeOptions<OutlineEntry, FuzzyScore> = {\n\t\t\tcollapseByDefault: this._target === OutlineTarget.Breadcrumbs || (this._target === OutlineTarget.OutlinePane && this._configurationService.getValue(OutlineConfigKeys.collapseItems) === OutlineConfigCollapseItemsValues.Collapsed),\n\t\t\texpandOnlyOnTwistieClick: true,\n\t\t\tmultipleSelectionSupport: false,\n\t\t\taccessibilityProvider: new NotebookOutlineAccessibility(),\n\t\t\tidentityProvider: { getId: element => element.cell.uri.toString() },\n\t\t\tkeyboardNavigationLabelProvider: new NotebookNavigationLabelProvider()\n\t\t};\n\n\t\tthis.config = {\n\t\t\ttreeDataSource: this._treeDataSource,\n\t\t\tquickPickDataSource: this._quickPickDataSource,\n\t\t\tbreadcrumbsDataSource: this._breadcrumbsDataSource,\n\t\t\tdelegate,\n\t\t\trenderers,\n\t\t\tcomparator,\n\t\t\toptions\n\t\t};\n\t}\n\n\tprivate initializeOutline() {\n\t\t// initial setup\n\t\tthis.setDataSources();\n\t\tthis.setModelListeners();\n\n\t\t// reset the data sources + model listeners when we get a new notebook model\n\t\tthis._disposables.add(this._editor.onDidChangeModel(() => {\n\t\t\tthis.setDataSources();\n\t\t\tthis.setModelListeners();\n\t\t\tthis.computeSymbols();\n\t\t}));\n\n\t\t// recompute symbols as document symbol providers are updated in the language features registry\n\t\tthis._disposables.add(this._languageFeaturesService.documentSymbolProvider.onDidChange(() => {\n\t\t\tthis.delayedComputeSymbols();\n\t\t}));\n\n\t\t// recompute active when the selection changes\n\t\tthis._disposables.add(this._editor.onDidChangeSelection(() => {\n\t\t\tthis.delayedRecomputeActive();\n\t\t}));\n\n\t\t// recompute state when filter config changes\n\t\tthis._disposables.add(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(NotebookSetting.outlineShowMarkdownHeadersOnly) ||\n\t\t\t\te.affectsConfiguration(NotebookSetting.outlineShowCodeCells) ||\n\t\t\t\te.affectsConfiguration(NotebookSetting.outlineShowCodeCellSymbols) ||\n\t\t\t\te.affectsConfiguration(NotebookSetting.breadcrumbsShowCodeCells)\n\t\t\t) {\n\t\t\t\tthis.delayedRecomputeState();\n\t\t\t}\n\t\t}));\n\n\t\t// recompute state when execution states change\n\t\tthis._disposables.add(this._notebookExecutionStateService.onDidChangeExecution(e => {\n\t\t\tif (e.type === NotebookExecutionType.cell && !!this._editor.textModel && e.affectsNotebook(this._editor.textModel?.uri)) {\n\t\t\t\tthis.delayedRecomputeState();\n\t\t\t}\n\t\t}));\n\n\t\t// recompute symbols when the configuration changes (recompute state - and therefore recompute active - is also called within compute symbols)\n\t\tthis._disposables.add(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(NotebookSetting.outlineShowCodeCellSymbols)) {\n\t\t\t\tthis.outlineShowCodeCellSymbols = this._configurationService.getValue<boolean>(NotebookSetting.outlineShowCodeCellSymbols);\n\t\t\t\tthis.computeSymbols();\n\t\t\t}\n\t\t}));\n\n\t\t// fire a change event when the theme changes\n\t\tthis._disposables.add(this._themeService.onDidFileIconThemeChange(() => {\n\t\t\tthis._onDidChange.fire({});\n\t\t}));\n\n\t\t// finish with a recompute state\n\t\tthis.recomputeState();\n\t}\n\n\t/**\n\t * set up the primary data source + three viewing sources for the various outline views\n\t */\n\tprivate setDataSources(): void {\n\t\tconst notebookEditor = this._editor.getControl();\n\t\tthis._outlineDataSourceReference?.dispose();\n\t\tthis._dataSourceDisposables.clear();\n\n\t\tif (!notebookEditor?.hasModel()) {\n\t\t\tthis._outlineDataSourceReference = undefined;\n\t\t} else {\n\t\t\tthis._outlineDataSourceReference = this._dataSourceDisposables.add(this._instantiationService.invokeFunction((accessor) => accessor.get(INotebookCellOutlineDataSourceFactory).getOrCreate(notebookEditor)));\n\t\t\t// escalate outline data source change events\n\t\t\tthis._dataSourceDisposables.add(this._outlineDataSourceReference.object.onDidChange(() => {\n\t\t\t\tthis._onDidChange.fire({});\n\t\t\t}));\n\t\t}\n\n\t\t// these fields can be passed undefined outlineDataSources. View Providers all handle it accordingly\n\t\tthis._treeDataSource = this._dataSourceDisposables.add(this._instantiationService.createInstance(NotebookOutlinePaneProvider, this._outlineDataSourceReference));\n\t\tthis._quickPickDataSource = this._dataSourceDisposables.add(this._instantiationService.createInstance(NotebookQuickPickProvider, this._outlineDataSourceReference));\n\t\tthis._breadcrumbsDataSource = this._dataSourceDisposables.add(this._instantiationService.createInstance(NotebookBreadcrumbsProvider, this._outlineDataSourceReference));\n\t}\n\n\t/**\n\t * set up the listeners for the outline content, these respond to model changes in the notebook\n\t */\n\tprivate setModelListeners(): void {\n\t\tthis._modelDisposables.clear();\n\t\tif (!this._editor.textModel) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Perhaps this is the first time we're building the outline\n\t\tif (!this.entries.length) {\n\t\t\tthis.computeSymbols();\n\t\t}\n\n\t\t// recompute state when there are notebook content changes\n\t\tthis._modelDisposables.add(this._editor.textModel.onDidChangeContent(contentChanges => {\n\t\t\tif (contentChanges.rawEvents.some(c =>\n\t\t\t\tc.kind === NotebookCellsChangeType.ChangeCellContent ||\n\t\t\t\tc.kind === NotebookCellsChangeType.ChangeCellInternalMetadata ||\n\t\t\t\tc.kind === NotebookCellsChangeType.Move ||\n\t\t\t\tc.kind === NotebookCellsChangeType.ModelChange)) {\n\t\t\t\tthis.delayedRecomputeState();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate async computeSymbols(cancelToken: CancellationToken = CancellationToken.None) {\n\t\tif (this._target === OutlineTarget.OutlinePane && this.outlineShowCodeCellSymbols) {\n\t\t\t// No need to wait for this, we want the outline to show up quickly.\n\t\t\tvoid this.doComputeSymbols(cancelToken);\n\t\t}\n\t}\n\tpublic async doComputeSymbols(cancelToken: CancellationToken): Promise<void> {\n\t\tawait this._outlineDataSourceReference?.object?.computeFullSymbols(cancelToken);\n\t}\n\tprivate async delayedComputeSymbols() {\n\t\tthis.delayerRecomputeState.cancel();\n\t\tthis.delayerRecomputeActive.cancel();\n\t\tthis.delayerRecomputeSymbols.trigger(() => { this.computeSymbols(); });\n\t}\n\n\tprivate recomputeState() { this._outlineDataSourceReference?.object?.recomputeState(); }\n\tprivate delayedRecomputeState() {\n\t\tthis.delayerRecomputeActive.cancel(); // Active is always recomputed after a recomputing the State.\n\t\tthis.delayerRecomputeState.trigger(() => { this.recomputeState(); });\n\t}\n\n\tprivate recomputeActive() { this._outlineDataSourceReference?.object?.recomputeActive(); }\n\tprivate delayedRecomputeActive() {\n\t\tthis.delayerRecomputeActive.trigger(() => { this.recomputeActive(); });\n\t}\n\n\tasync reveal(entry: OutlineEntry, options: IEditorOptions, sideBySide: boolean): Promise<void> {\n\t\tconst notebookEditorOptions: INotebookEditorOptions = {\n\t\t\t...options,\n\t\t\toverride: this._editor.input?.editorId,\n\t\t\tcellRevealType: CellRevealType.NearTopIfOutsideViewport,\n\t\t\tselection: entry.position,\n\t\t\tviewState: undefined,\n\t\t};\n\t\tawait this._editorService.openEditor({\n\t\t\tresource: entry.cell.uri,\n\t\t\toptions: notebookEditorOptions,\n\t\t}, sideBySide ? SIDE_GROUP : undefined);\n\t}\n\n\tpreview(entry: OutlineEntry): IDisposable {\n\t\tconst widget = this._editor.getControl();\n\t\tif (!widget) {\n\t\t\treturn Disposable.None;\n\t\t}\n\n\n\t\tif (entry.range) {\n\t\t\tconst range = Range.lift(entry.range);\n\t\t\twidget.revealRangeInCenterIfOutsideViewportAsync(entry.cell, range);\n\t\t} else {\n\t\t\twidget.revealInCenterIfOutsideViewport(entry.cell);\n\t\t}\n\n\t\tconst ids = widget.deltaCellDecorations([], [{\n\t\t\thandle: entry.cell.handle,\n\t\t\toptions: { className: 'nb-symbolHighlight', outputClassName: 'nb-symbolHighlight' }\n\t\t}]);\n\n\t\tlet editorDecorations: ICellModelDecorations[];\n\t\twidget.changeModelDecorations(accessor => {\n\t\t\tif (entry.range) {\n\t\t\t\tconst decorations: IModelDeltaDecoration[] = [\n\t\t\t\t\t{\n\t\t\t\t\t\trange: entry.range, options: {\n\t\t\t\t\t\t\tdescription: 'document-symbols-outline-range-highlight',\n\t\t\t\t\t\t\tclassName: 'rangeHighlight',\n\t\t\t\t\t\t\tisWholeLine: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t\t\tconst deltaDecoration: ICellModelDeltaDecorations = {\n\t\t\t\t\townerId: entry.cell.handle,\n\t\t\t\t\tdecorations: decorations\n\t\t\t\t};\n\n\t\t\t\teditorDecorations = accessor.deltaDecorations([], [deltaDecoration]);\n\t\t\t}\n\t\t});\n\n\t\treturn toDisposable(() => {\n\t\t\twidget.deltaCellDecorations(ids, []);\n\t\t\tif (editorDecorations?.length) {\n\t\t\t\twidget.changeModelDecorations(accessor => {\n\t\t\t\t\taccessor.deltaDecorations(editorDecorations, []);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t}\n\n\tcaptureViewState(): IDisposable {\n\t\tconst widget = this._editor.getControl();\n\t\tconst viewState = widget?.getEditorViewState();\n\t\treturn toDisposable(() => {\n\t\t\tif (viewState) {\n\t\t\t\twidget?.restoreListViewState(viewState);\n\t\t\t}\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis._onDidChange.dispose();\n\t\tthis._disposables.dispose();\n\t\tthis._modelDisposables.dispose();\n\t\tthis._dataSourceDisposables.dispose();\n\t\tthis._outlineDataSourceReference?.dispose();\n\t}\n}\n\nexport class NotebookOutlineCreator implements IOutlineCreator<NotebookEditor, OutlineEntry> {\n\n\treadonly dispose: () => void;\n\n\tconstructor(\n\t\t@IOutlineService outlineService: IOutlineService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService\n\t) {\n\t\tconst reg = outlineService.registerOutlineCreator(this);\n\t\tthis.dispose = () => reg.dispose();\n\t}\n\n\tmatches(candidate: IEditorPane): candidate is NotebookEditor {\n\t\treturn candidate.getId() === NotebookEditor.ID;\n\t}\n\n\tasync createOutline(editor: INotebookEditorPane, target: OutlineTarget, cancelToken: CancellationToken): Promise<IOutline<OutlineEntry> | undefined> {\n\t\tconst outline = this._instantiationService.createInstance(NotebookCellOutline, editor, target);\n\t\tif (target === OutlineTarget.QuickPick) {\n\t\t\t// The quickpick creates the outline on demand\n\t\t\t// so we need to ensure the symbols are pre-cached before the entries are syncronously requested\n\t\t\tawait outline.doComputeSymbols(cancelToken);\n\t\t}\n\t\treturn outline;\n\t}\n}\n\nexport const NotebookOutlineContext = {\n\tCellKind: new RawContextKey<CellKind>('notebookCellKind', undefined),\n\tCellHasChildren: new RawContextKey<boolean>('notebookCellHasChildren', false),\n\tCellHasHeader: new RawContextKey<boolean>('notebookCellHasHeader', false),\n\tCellFoldingState: new RawContextKey<CellFoldingState>('notebookCellFoldingState', CellFoldingState.None),\n\tOutlineElementTarget: new RawContextKey<OutlineTarget>('notebookOutlineElementTarget', undefined),\n};\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(NotebookOutlineCreator, LifecyclePhase.Eventually);\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).registerConfiguration({\n\tid: 'notebook',\n\torder: 100,\n\ttype: 'object',\n\t'properties': {\n\t\t[NotebookSetting.outlineShowMarkdownHeadersOnly]: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tmarkdownDescription: localize('outline.showMarkdownHeadersOnly', \"When enabled, notebook outline will show only markdown cells containing a header.\")\n\t\t},\n\t\t[NotebookSetting.outlineShowCodeCells]: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tmarkdownDescription: localize('outline.showCodeCells', \"When enabled, notebook outline shows code cells.\")\n\t\t},\n\t\t[NotebookSetting.outlineShowCodeCellSymbols]: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tmarkdownDescription: localize('outline.showCodeCellSymbols', \"When enabled, notebook outline shows code cell symbols. Relies on `notebook.outline.showCodeCells` being enabled.\")\n\t\t},\n\t\t[NotebookSetting.breadcrumbsShowCodeCells]: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tmarkdownDescription: localize('breadcrumbs.showCodeCells', \"When enabled, notebook breadcrumbs contain code cells.\")\n\t\t},\n\t\t[NotebookSetting.gotoSymbolsAllSymbols]: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tmarkdownDescription: localize('notebook.gotoSymbols.showAllSymbols', \"When enabled, the Go to Symbol Quick Pick will display full code symbols from the notebook, as well as Markdown headers.\")\n\t\t},\n\t}\n});\n\nMenuRegistry.appendMenuItem(MenuId.ViewTitle, {\n\tsubmenu: MenuId.NotebookOutlineFilter,\n\ttitle: localize('filter', \"Filter Entries\"),\n\ticon: Codicon.filter,\n\tgroup: 'navigation',\n\torder: -1,\n\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', IOutlinePane.Id), NOTEBOOK_IS_ACTIVE_EDITOR),\n});\n\nregisterAction2(class ToggleShowMarkdownHeadersOnly extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'notebook.outline.toggleShowMarkdownHeadersOnly',\n\t\t\ttitle: localize('toggleShowMarkdownHeadersOnly', \"Markdown Headers Only\"),\n\t\t\tf1: false,\n\t\t\ttoggled: {\n\t\t\t\tcondition: ContextKeyExpr.equals('config.notebook.outline.showMarkdownHeadersOnly', true)\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.NotebookOutlineFilter,\n\t\t\t\tgroup: '0_markdown_cells',\n\t\t\t}\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst showMarkdownHeadersOnly = configurationService.getValue<boolean>(NotebookSetting.outlineShowMarkdownHeadersOnly);\n\t\tconfigurationService.updateValue(NotebookSetting.outlineShowMarkdownHeadersOnly, !showMarkdownHeadersOnly);\n\t}\n});\n\nregisterAction2(class ToggleCodeCellEntries extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'notebook.outline.toggleCodeCells',\n\t\t\ttitle: localize('toggleCodeCells', \"Code Cells\"),\n\t\t\tf1: false,\n\t\t\ttoggled: {\n\t\t\t\tcondition: ContextKeyExpr.equals('config.notebook.outline.showCodeCells', true)\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.NotebookOutlineFilter,\n\t\t\t\torder: 1,\n\t\t\t\tgroup: '1_code_cells',\n\t\t\t}\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst showCodeCells = configurationService.getValue<boolean>(NotebookSetting.outlineShowCodeCells);\n\t\tconfigurationService.updateValue(NotebookSetting.outlineShowCodeCells, !showCodeCells);\n\t}\n});\n\nregisterAction2(class ToggleCodeCellSymbolEntries extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'notebook.outline.toggleCodeCellSymbols',\n\t\t\ttitle: localize('toggleCodeCellSymbols', \"Code Cell Symbols\"),\n\t\t\tf1: false,\n\t\t\ttoggled: {\n\t\t\t\tcondition: ContextKeyExpr.equals('config.notebook.outline.showCodeCellSymbols', true)\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.NotebookOutlineFilter,\n\t\t\t\torder: 2,\n\t\t\t\tgroup: '1_code_cells',\n\t\t\t}\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst showCodeCellSymbols = configurationService.getValue<boolean>(NotebookSetting.outlineShowCodeCellSymbols);\n\t\tconfigurationService.updateValue(NotebookSetting.outlineShowCodeCellSymbols, !showCodeCellSymbols);\n\t}\n});\n"],
  "mappings": "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",
  "names": ["foldingState", "actions"]
}
