{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/kernelDetection/notebookKernelDetection.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n} from \"../../../../../../base/common/lifecycle.js\";\nimport { Registry } from \"../../../../../../platform/registry/common/platform.js\";\nimport {\n\ttype IWorkbenchContribution,\n\ttype IWorkbenchContributionsRegistry,\n\tExtensions as WorkbenchExtensions,\n} from \"../../../../../common/contributions.js\";\nimport { IExtensionService } from \"../../../../../services/extensions/common/extensions.js\";\nimport { LifecyclePhase } from \"../../../../../services/lifecycle/common/lifecycle.js\";\nimport { INotebookKernelService } from \"../../../common/notebookKernelService.js\";\nimport { INotebookLoggingService } from \"../../../common/notebookLoggingService.js\";\n\nclass NotebookKernelDetection\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tprivate _detectionMap = new Map<string, IDisposable>();\n\tprivate readonly _localDisposableStore = this._register(\n\t\tnew DisposableStore(),\n\t);\n\n\tconstructor(\n\t\t@INotebookKernelService\n\t\tprivate readonly _notebookKernelService: INotebookKernelService,\n\t\t@IExtensionService\n\t\tprivate readonly _extensionService: IExtensionService,\n\t\t@INotebookLoggingService\n\t\tprivate readonly _notebookLoggingService: INotebookLoggingService,\n\t) {\n\t\tsuper();\n\n\t\tthis._registerListeners();\n\t}\n\n\tprivate _registerListeners() {\n\t\tthis._localDisposableStore.clear();\n\n\t\tthis._localDisposableStore.add(\n\t\t\tthis._extensionService.onWillActivateByEvent((e) => {\n\t\t\t\tif (e.event.startsWith(\"onNotebook:\")) {\n\t\t\t\t\tif (this._extensionService.activationEventIsDone(e.event)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// parse the event to get the notebook type\n\t\t\t\t\tconst notebookType = e.event.substring(\n\t\t\t\t\t\t\"onNotebook:\".length,\n\t\t\t\t\t);\n\n\t\t\t\t\tif (notebookType === \"*\") {\n\t\t\t\t\t\t// ignore\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet shouldStartDetection = false;\n\n\t\t\t\t\tconst extensionStatus =\n\t\t\t\t\t\tthis._extensionService.getExtensionsStatus();\n\t\t\t\t\tthis._extensionService.extensions.forEach((extension) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\textensionStatus[extension.identifier.value]\n\t\t\t\t\t\t\t\t.activationTimes\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// already activated\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (extension.activationEvents?.includes(e.event)) {\n\t\t\t\t\t\t\tshouldStartDetection = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tshouldStartDetection &&\n\t\t\t\t\t\t!this._detectionMap.has(notebookType)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis._notebookLoggingService.debug(\n\t\t\t\t\t\t\t\"KernelDetection\",\n\t\t\t\t\t\t\t`start extension activation for ${notebookType}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst task =\n\t\t\t\t\t\t\tthis._notebookKernelService.registerNotebookKernelDetectionTask(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tnotebookType: notebookType,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\tthis._detectionMap.set(notebookType, task);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tlet timer: any = null;\n\n\t\tthis._localDisposableStore.add(\n\t\t\tthis._extensionService.onDidChangeExtensionsStatus(() => {\n\t\t\t\tif (timer) {\n\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t}\n\n\t\t\t\t// activation state might not be updated yet, postpone to next frame\n\t\t\t\ttimer = setTimeout(() => {\n\t\t\t\t\tconst taskToDelete: string[] = [];\n\t\t\t\t\tfor (const [notebookType, task] of this._detectionMap) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis._extensionService.activationEventIsDone(\n\t\t\t\t\t\t\t\t`onNotebook:${notebookType}`,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis._notebookLoggingService.debug(\n\t\t\t\t\t\t\t\t\"KernelDetection\",\n\t\t\t\t\t\t\t\t`finish extension activation for ${notebookType}`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\ttaskToDelete.push(notebookType);\n\t\t\t\t\t\t\ttask.dispose();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\ttaskToDelete.forEach((notebookType) => {\n\t\t\t\t\t\tthis._detectionMap.delete(notebookType);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\n\t\tthis._localDisposableStore.add({\n\t\t\tdispose: () => {\n\t\t\t\tif (timer) {\n\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n).registerWorkbenchContribution(\n\tNotebookKernelDetection,\n\tLifecyclePhase.Restored,\n);\n"],
  "mappings": ";;;;;;;;;;;;AAKA;AAAA,EACC;AAAA,EACA;AAAA,OAEM;AACP,SAAS,gBAAgB;AACzB;AAAA,EAGC,cAAc;AAAA,OACR;AACP,SAAS,yBAAyB;AAClC,SAAS,sBAAsB;AAC/B,SAAS,8BAA8B;AACvC,SAAS,+BAA+B;AAExC,IAAM,0BAAN,cACS,WAET;AAAA,EAMC,YAEkB,wBAEA,mBAEA,yBAChB;AACD,UAAM;AANW;AAEA;AAEA;AAIjB,SAAK,mBAAmB;AAAA,EACzB;AAAA,EAzCD,OAwBA;AAAA;AAAA;AAAA,EACS,gBAAgB,oBAAI,IAAyB;AAAA,EACpC,wBAAwB,KAAK;AAAA,IAC7C,IAAI,gBAAgB;AAAA,EACrB;AAAA,EAeQ,qBAAqB;AAC5B,SAAK,sBAAsB,MAAM;AAEjC,SAAK,sBAAsB;AAAA,MAC1B,KAAK,kBAAkB,sBAAsB,CAAC,MAAM;AACnD,YAAI,EAAE,MAAM,WAAW,aAAa,GAAG;AACtC,cAAI,KAAK,kBAAkB,sBAAsB,EAAE,KAAK,GAAG;AAC1D;AAAA,UACD;AAGA,gBAAM,eAAe,EAAE,MAAM;AAAA,YAC5B,cAAc;AAAA,UACf;AAEA,cAAI,iBAAiB,KAAK;AAEzB;AAAA,UACD;AAEA,cAAI,uBAAuB;AAE3B,gBAAM,kBACL,KAAK,kBAAkB,oBAAoB;AAC5C,eAAK,kBAAkB,WAAW,QAAQ,CAAC,cAAc;AACxD,gBACC,gBAAgB,UAAU,WAAW,KAAK,EACxC,iBACD;AAED;AAAA,YACD;AACA,gBAAI,UAAU,kBAAkB,SAAS,EAAE,KAAK,GAAG;AAClD,qCAAuB;AAAA,YACxB;AAAA,UACD,CAAC;AAED,cACC,wBACA,CAAC,KAAK,cAAc,IAAI,YAAY,GACnC;AACD,iBAAK,wBAAwB;AAAA,cAC5B;AAAA,cACA,kCAAkC,YAAY;AAAA,YAC/C;AACA,kBAAM,OACL,KAAK,uBAAuB;AAAA,cAC3B;AAAA,gBACC;AAAA,cACD;AAAA,YACD;AAED,iBAAK,cAAc,IAAI,cAAc,IAAI;AAAA,UAC1C;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAEA,QAAI,QAAa;AAEjB,SAAK,sBAAsB;AAAA,MAC1B,KAAK,kBAAkB,4BAA4B,MAAM;AACxD,YAAI,OAAO;AACV,uBAAa,KAAK;AAAA,QACnB;AAGA,gBAAQ,WAAW,MAAM;AACxB,gBAAM,eAAyB,CAAC;AAChC,qBAAW,CAAC,cAAc,IAAI,KAAK,KAAK,eAAe;AACtD,gBACC,KAAK,kBAAkB;AAAA,cACtB,cAAc,YAAY;AAAA,YAC3B,GACC;AACD,mBAAK,wBAAwB;AAAA,gBAC5B;AAAA,gBACA,mCAAmC,YAAY;AAAA,cAChD;AACA,2BAAa,KAAK,YAAY;AAC9B,mBAAK,QAAQ;AAAA,YACd;AAAA,UACD;AAEA,uBAAa,QAAQ,CAAC,iBAAiB;AACtC,iBAAK,cAAc,OAAO,YAAY;AAAA,UACvC,CAAC;AAAA,QACF,CAAC;AAAA,MACF,CAAC;AAAA,IACF;AAEA,SAAK,sBAAsB,IAAI;AAAA,MAC9B,SAAS,6BAAM;AACd,YAAI,OAAO;AACV,uBAAa,KAAK;AAAA,QACnB;AAAA,MACD,GAJS;AAAA,IAKV,CAAC;AAAA,EACF;AACD;AAzHM,0BAAN;AAAA,EAUG;AAAA,EAEA;AAAA,EAEA;AAAA,GAdG;AA2HN,SAAS;AAAA,EACR,oBAAoB;AACrB,EAAE;AAAA,EACD;AAAA,EACA,eAAe;AAChB;",
  "names": []
}
