{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/test/browser/notebookExecutionStateService.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { AsyncIterableObject, DeferredPromise } from '../../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { Event } from '../../../../../base/common/event.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { mock } from '../../../../../base/test/common/mock.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../../../../../editor/common/languages/modesRegistry.js';\nimport { IMenu, IMenuService } from '../../../../../platform/actions/common/actions.js';\nimport { ExtensionIdentifier } from '../../../../../platform/extensions/common/extensions.js';\nimport { TestInstantiationService } from '../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { insertCellAtIndex } from '../../browser/controller/cellOperations.js';\nimport { NotebookExecutionService } from '../../browser/services/notebookExecutionServiceImpl.js';\nimport { NotebookExecutionStateService } from '../../browser/services/notebookExecutionStateServiceImpl.js';\nimport { NotebookKernelService } from '../../browser/services/notebookKernelServiceImpl.js';\nimport { NotebookViewModel } from '../../browser/viewModel/notebookViewModelImpl.js';\nimport { NotebookTextModel } from '../../common/model/notebookTextModel.js';\nimport { CellEditType, CellKind, CellUri, IOutputDto, NotebookCellMetadata, NotebookExecutionState } from '../../common/notebookCommon.js';\nimport { CellExecutionUpdateType, INotebookExecutionService } from '../../common/notebookExecutionService.js';\nimport { INotebookExecutionStateService, NotebookExecutionType } from '../../common/notebookExecutionStateService.js';\nimport { INotebookKernel, INotebookKernelService, VariablesResult } from '../../common/notebookKernelService.js';\nimport { INotebookLoggingService } from '../../common/notebookLoggingService.js';\nimport { INotebookService } from '../../common/notebookService.js';\nimport { setupInstantiationService, withTestNotebook as _withTestNotebook } from './testNotebookEditor.js';\n\nsuite('NotebookExecutionStateService', () => {\n\n\tlet instantiationService: TestInstantiationService;\n\tlet kernelService: INotebookKernelService;\n\tlet disposables: DisposableStore;\n\tlet testNotebookModel: NotebookTextModel | undefined;\n\n\tteardown(() => {\n\t\tdisposables.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(function () {\n\n\t\tdisposables = new DisposableStore();\n\n\t\tinstantiationService = setupInstantiationService(disposables);\n\n\t\tinstantiationService.stub(INotebookService, new class extends mock<INotebookService>() {\n\t\t\toverride onDidAddNotebookDocument = Event.None;\n\t\t\toverride onWillRemoveNotebookDocument = Event.None;\n\t\t\toverride getNotebookTextModels() { return []; }\n\t\t\toverride getNotebookTextModel(uri: URI): NotebookTextModel | undefined {\n\t\t\t\treturn testNotebookModel;\n\t\t\t}\n\t\t});\n\n\t\tinstantiationService.stub(IMenuService, new class extends mock<IMenuService>() {\n\t\t\toverride createMenu() {\n\t\t\t\treturn new class extends mock<IMenu>() {\n\t\t\t\t\toverride onDidChange = Event.None;\n\t\t\t\t\toverride getActions() { return []; }\n\t\t\t\t\toverride dispose() { }\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t\tinstantiationService.stub(INotebookLoggingService, new class extends mock<INotebookLoggingService>() {\n\t\t\toverride debug(category: string, output: string): void {\n\t\t\t\t//\n\t\t\t}\n\t\t});\n\n\t\tkernelService = disposables.add(instantiationService.createInstance(NotebookKernelService));\n\t\tinstantiationService.set(INotebookKernelService, kernelService);\n\t\tinstantiationService.set(INotebookExecutionService, disposables.add(instantiationService.createInstance(NotebookExecutionService)));\n\t\tinstantiationService.set(INotebookExecutionStateService, disposables.add(instantiationService.createInstance(NotebookExecutionStateService)));\n\t});\n\n\tasync function withTestNotebook(cells: [string, string, CellKind, IOutputDto[], NotebookCellMetadata][], callback: (viewModel: NotebookViewModel, textModel: NotebookTextModel, disposables: DisposableStore) => void | Promise<void>) {\n\t\treturn _withTestNotebook(cells, (editor, viewModel) => callback(viewModel, viewModel.notebookDocument, disposables));\n\t}\n\n\tfunction testCancelOnDelete(expectedCancels: number, implementsInterrupt: boolean) {\n\t\treturn withTestNotebook([], async (viewModel, _document, disposables) => {\n\t\t\ttestNotebookModel = viewModel.notebookDocument;\n\n\t\t\tlet cancels = 0;\n\t\t\tconst kernel = new class extends TestNotebookKernel {\n\t\t\t\timplementsInterrupt = implementsInterrupt;\n\n\t\t\t\tconstructor() {\n\t\t\t\t\tsuper({ languages: ['javascript'] });\n\t\t\t\t}\n\n\t\t\t\toverride async executeNotebookCellsRequest(): Promise<void> { }\n\n\t\t\t\toverride async cancelNotebookCellExecution(_uri: URI, handles: number[]): Promise<void> {\n\t\t\t\t\tcancels += handles.length;\n\t\t\t\t}\n\t\t\t};\n\t\t\tdisposables.add(kernelService.registerKernel(kernel));\n\t\t\tkernelService.selectKernelForNotebook(kernel, viewModel.notebookDocument);\n\n\t\t\tconst executionStateService: INotebookExecutionStateService = instantiationService.get(INotebookExecutionStateService);\n\n\t\t\t// Should cancel executing and pending cells, when kernel does not implement interrupt\n\t\t\tconst cell = disposables.add(insertCellAtIndex(viewModel, 0, 'var c = 3', 'javascript', CellKind.Code, {}, [], true, true));\n\t\t\tconst cell2 = disposables.add(insertCellAtIndex(viewModel, 1, 'var c = 3', 'javascript', CellKind.Code, {}, [], true, true));\n\t\t\tconst cell3 = disposables.add(insertCellAtIndex(viewModel, 2, 'var c = 3', 'javascript', CellKind.Code, {}, [], true, true));\n\t\t\tinsertCellAtIndex(viewModel, 3, 'var c = 3', 'javascript', CellKind.Code, {}, [], true, true); // Not deleted\n\t\t\tconst exe = executionStateService.createCellExecution(viewModel.uri, cell.handle); // Executing\n\t\t\texe.confirm();\n\t\t\texe.update([{ editType: CellExecutionUpdateType.ExecutionState, executionOrder: 1 }]);\n\t\t\tconst exe2 = executionStateService.createCellExecution(viewModel.uri, cell2.handle); // Pending\n\t\t\texe2.confirm();\n\t\t\texecutionStateService.createCellExecution(viewModel.uri, cell3.handle); // Unconfirmed\n\t\t\tassert.strictEqual(cancels, 0);\n\t\t\tviewModel.notebookDocument.applyEdits([{\n\t\t\t\teditType: CellEditType.Replace, index: 0, count: 3, cells: []\n\t\t\t}], true, undefined, () => undefined, undefined, false);\n\t\t\tassert.strictEqual(cancels, expectedCancels);\n\t\t});\n\n\t}\n\n\t// TODO@roblou Could be a test just for NotebookExecutionListeners, which can be a standalone contribution\n\ttest('cancel execution when cell is deleted', async function () {\n\t\treturn testCancelOnDelete(3, false);\n\t});\n\n\ttest('cancel execution when cell is deleted in interrupt-type kernel', async function () {\n\t\treturn testCancelOnDelete(1, true);\n\t});\n\n\ttest('fires onDidChangeCellExecution when cell is completed while deleted', async function () {\n\t\treturn withTestNotebook([], async (viewModel, _document, disposables) => {\n\t\t\ttestNotebookModel = viewModel.notebookDocument;\n\n\t\t\tconst kernel = new TestNotebookKernel();\n\t\t\tdisposables.add(kernelService.registerKernel(kernel));\n\t\t\tkernelService.selectKernelForNotebook(kernel, viewModel.notebookDocument);\n\n\t\t\tconst executionStateService: INotebookExecutionStateService = instantiationService.get(INotebookExecutionStateService);\n\t\t\tconst cell = insertCellAtIndex(viewModel, 0, 'var c = 3', 'javascript', CellKind.Code, {}, [], true, true);\n\t\t\tconst exe = executionStateService.createCellExecution(viewModel.uri, cell.handle);\n\n\t\t\tlet didFire = false;\n\t\t\tdisposables.add(executionStateService.onDidChangeExecution(e => {\n\t\t\t\tif (e.type === NotebookExecutionType.cell) {\n\t\t\t\t\tdidFire = !e.changed;\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tviewModel.notebookDocument.applyEdits([{\n\t\t\t\teditType: CellEditType.Replace, index: 0, count: 1, cells: []\n\t\t\t}], true, undefined, () => undefined, undefined, false);\n\t\t\texe.complete({});\n\t\t\tassert.strictEqual(didFire, true);\n\t\t});\n\t});\n\n\ttest('does not fire onDidChangeCellExecution for output updates', async function () {\n\t\treturn withTestNotebook([], async (viewModel, _document, disposables) => {\n\t\t\ttestNotebookModel = viewModel.notebookDocument;\n\n\t\t\tconst kernel = new TestNotebookKernel();\n\t\t\tdisposables.add(kernelService.registerKernel(kernel));\n\t\t\tkernelService.selectKernelForNotebook(kernel, viewModel.notebookDocument);\n\n\t\t\tconst executionStateService: INotebookExecutionStateService = instantiationService.get(INotebookExecutionStateService);\n\t\t\tconst cell = disposables.add(insertCellAtIndex(viewModel, 0, 'var c = 3', 'javascript', CellKind.Code, {}, [], true, true));\n\t\t\tconst exe = executionStateService.createCellExecution(viewModel.uri, cell.handle);\n\n\t\t\tlet didFire = false;\n\t\t\tdisposables.add(executionStateService.onDidChangeExecution(e => {\n\t\t\t\tif (e.type === NotebookExecutionType.cell) {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\texe.update([{ editType: CellExecutionUpdateType.OutputItems, items: [], outputId: '1' }]);\n\t\t\tassert.strictEqual(didFire, false);\n\t\t\texe.update([{ editType: CellExecutionUpdateType.ExecutionState, executionOrder: 123 }]);\n\t\t\tassert.strictEqual(didFire, true);\n\t\t\texe.complete({});\n\t\t});\n\t});\n\n\t// #142466\n\ttest('getCellExecution and onDidChangeCellExecution', async function () {\n\t\treturn withTestNotebook([], async (viewModel, _document, disposables) => {\n\t\t\ttestNotebookModel = viewModel.notebookDocument;\n\n\t\t\tconst kernel = new TestNotebookKernel();\n\t\t\tdisposables.add(kernelService.registerKernel(kernel));\n\t\t\tkernelService.selectKernelForNotebook(kernel, viewModel.notebookDocument);\n\n\t\t\tconst executionStateService: INotebookExecutionStateService = instantiationService.get(INotebookExecutionStateService);\n\t\t\tconst cell = disposables.add(insertCellAtIndex(viewModel, 0, 'var c = 3', 'javascript', CellKind.Code, {}, [], true, true));\n\n\t\t\tconst deferred = new DeferredPromise<void>();\n\t\t\tdisposables.add(executionStateService.onDidChangeExecution(e => {\n\t\t\t\tif (e.type === NotebookExecutionType.cell) {\n\t\t\t\t\tconst cellUri = CellUri.generate(e.notebook, e.cellHandle);\n\t\t\t\t\tconst exe = executionStateService.getCellExecution(cellUri);\n\t\t\t\t\tassert.ok(exe);\n\t\t\t\t\tassert.strictEqual(e.notebook.toString(), exe.notebook.toString());\n\t\t\t\t\tassert.strictEqual(e.cellHandle, exe.cellHandle);\n\n\t\t\t\t\tassert.strictEqual(exe.notebook.toString(), e.changed?.notebook.toString());\n\t\t\t\t\tassert.strictEqual(exe.cellHandle, e.changed?.cellHandle);\n\n\t\t\t\t\tdeferred.complete();\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\texecutionStateService.createCellExecution(viewModel.uri, cell.handle);\n\n\t\t\treturn deferred.p;\n\t\t});\n\t});\n\ttest('getExecution and onDidChangeExecution', async function () {\n\t\treturn withTestNotebook([], async (viewModel, _document, disposables) => {\n\t\t\ttestNotebookModel = viewModel.notebookDocument;\n\n\t\t\tconst kernel = new TestNotebookKernel();\n\t\t\tdisposables.add(kernelService.registerKernel(kernel));\n\t\t\tkernelService.selectKernelForNotebook(kernel, viewModel.notebookDocument);\n\n\t\t\tconst eventRaisedWithExecution: boolean[] = [];\n\t\t\tconst executionStateService: INotebookExecutionStateService = instantiationService.get(INotebookExecutionStateService);\n\t\t\texecutionStateService.onDidChangeExecution(e => eventRaisedWithExecution.push(e.type === NotebookExecutionType.notebook && !!e.changed), this, disposables);\n\n\t\t\tconst deferred = new DeferredPromise<void>();\n\t\t\tdisposables.add(executionStateService.onDidChangeExecution(e => {\n\t\t\t\tif (e.type === NotebookExecutionType.notebook) {\n\t\t\t\t\tconst exe = executionStateService.getExecution(viewModel.uri);\n\t\t\t\t\tassert.ok(exe);\n\t\t\t\t\tassert.strictEqual(e.notebook.toString(), exe.notebook.toString());\n\t\t\t\t\tassert.ok(e.affectsNotebook(viewModel.uri));\n\t\t\t\t\tassert.deepStrictEqual(eventRaisedWithExecution, [true]);\n\t\t\t\t\tdeferred.complete();\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\texecutionStateService.createExecution(viewModel.uri);\n\n\t\t\treturn deferred.p;\n\t\t});\n\t});\n\n\ttest('getExecution and onDidChangeExecution 2', async function () {\n\t\treturn withTestNotebook([], async (viewModel, _document, disposables) => {\n\t\t\ttestNotebookModel = viewModel.notebookDocument;\n\n\t\t\tconst kernel = new TestNotebookKernel();\n\t\t\tdisposables.add(kernelService.registerKernel(kernel));\n\t\t\tkernelService.selectKernelForNotebook(kernel, viewModel.notebookDocument);\n\n\t\t\tconst executionStateService: INotebookExecutionStateService = instantiationService.get(INotebookExecutionStateService);\n\n\t\t\tconst deferred = new DeferredPromise<void>();\n\t\t\tconst expectedNotebookEventStates: (NotebookExecutionState | undefined)[] = [NotebookExecutionState.Unconfirmed, NotebookExecutionState.Pending, NotebookExecutionState.Executing, undefined];\n\t\t\texecutionStateService.onDidChangeExecution(e => {\n\t\t\t\tif (e.type === NotebookExecutionType.notebook) {\n\t\t\t\t\tconst expectedState = expectedNotebookEventStates.shift();\n\t\t\t\t\tif (typeof expectedState === 'number') {\n\t\t\t\t\t\tconst exe = executionStateService.getExecution(viewModel.uri);\n\t\t\t\t\t\tassert.ok(exe);\n\t\t\t\t\t\tassert.strictEqual(e.notebook.toString(), exe.notebook.toString());\n\t\t\t\t\t\tassert.strictEqual(e.changed?.state, expectedState);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tassert.ok(e.changed === undefined);\n\t\t\t\t\t}\n\n\t\t\t\t\tassert.ok(e.affectsNotebook(viewModel.uri));\n\t\t\t\t\tif (expectedNotebookEventStates.length === 0) {\n\t\t\t\t\t\tdeferred.complete();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this, disposables);\n\n\t\t\tconst execution = executionStateService.createExecution(viewModel.uri);\n\t\t\texecution.confirm();\n\t\t\texecution.begin();\n\t\t\texecution.complete();\n\n\t\t\treturn deferred.p;\n\t\t});\n\t});\n\n\ttest('force-cancel works for Cell Execution', async function () {\n\t\treturn withTestNotebook([], async (viewModel, _document, disposables) => {\n\t\t\ttestNotebookModel = viewModel.notebookDocument;\n\n\t\t\tconst kernel = new TestNotebookKernel();\n\t\t\tdisposables.add(kernelService.registerKernel(kernel));\n\t\t\tkernelService.selectKernelForNotebook(kernel, viewModel.notebookDocument);\n\n\t\t\tconst executionStateService: INotebookExecutionStateService = instantiationService.get(INotebookExecutionStateService);\n\t\t\tconst cell = disposables.add(insertCellAtIndex(viewModel, 0, 'var c = 3', 'javascript', CellKind.Code, {}, [], true, true));\n\t\t\texecutionStateService.createCellExecution(viewModel.uri, cell.handle);\n\t\t\tconst exe = executionStateService.getCellExecution(cell.uri);\n\t\t\tassert.ok(exe);\n\n\t\t\texecutionStateService.forceCancelNotebookExecutions(viewModel.uri);\n\t\t\tconst exe2 = executionStateService.getCellExecution(cell.uri);\n\t\t\tassert.strictEqual(exe2, undefined);\n\t\t});\n\t});\n\ttest('force-cancel works for Notebook Execution', async function () {\n\t\treturn withTestNotebook([], async (viewModel, _document, disposables) => {\n\t\t\ttestNotebookModel = viewModel.notebookDocument;\n\n\t\t\tconst kernel = new TestNotebookKernel();\n\t\t\tdisposables.add(kernelService.registerKernel(kernel));\n\t\t\tkernelService.selectKernelForNotebook(kernel, viewModel.notebookDocument);\n\t\t\tconst eventRaisedWithExecution: boolean[] = [];\n\n\t\t\tconst executionStateService: INotebookExecutionStateService = instantiationService.get(INotebookExecutionStateService);\n\t\t\texecutionStateService.onDidChangeExecution(e => eventRaisedWithExecution.push(e.type === NotebookExecutionType.notebook && !!e.changed), this, disposables);\n\t\t\texecutionStateService.createExecution(viewModel.uri);\n\t\t\tconst exe = executionStateService.getExecution(viewModel.uri);\n\t\t\tassert.ok(exe);\n\t\t\tassert.deepStrictEqual(eventRaisedWithExecution, [true]);\n\n\t\t\texecutionStateService.forceCancelNotebookExecutions(viewModel.uri);\n\t\t\tconst exe2 = executionStateService.getExecution(viewModel.uri);\n\t\t\tassert.deepStrictEqual(eventRaisedWithExecution, [true, false]);\n\t\t\tassert.strictEqual(exe2, undefined);\n\t\t});\n\t});\n\ttest('force-cancel works for Cell and Notebook Execution', async function () {\n\t\treturn withTestNotebook([], async (viewModel, _document, disposables) => {\n\t\t\ttestNotebookModel = viewModel.notebookDocument;\n\n\t\t\tconst kernel = new TestNotebookKernel();\n\t\t\tdisposables.add(kernelService.registerKernel(kernel));\n\t\t\tkernelService.selectKernelForNotebook(kernel, viewModel.notebookDocument);\n\n\t\t\tconst executionStateService: INotebookExecutionStateService = instantiationService.get(INotebookExecutionStateService);\n\t\t\texecutionStateService.createExecution(viewModel.uri);\n\t\t\texecutionStateService.createExecution(viewModel.uri);\n\t\t\tconst cellExe = executionStateService.getExecution(viewModel.uri);\n\t\t\tconst exe = executionStateService.getExecution(viewModel.uri);\n\t\t\tassert.ok(cellExe);\n\t\t\tassert.ok(exe);\n\n\t\t\texecutionStateService.forceCancelNotebookExecutions(viewModel.uri);\n\t\t\tconst cellExe2 = executionStateService.getExecution(viewModel.uri);\n\t\t\tconst exe2 = executionStateService.getExecution(viewModel.uri);\n\t\t\tassert.strictEqual(cellExe2, undefined);\n\t\t\tassert.strictEqual(exe2, undefined);\n\t\t});\n\t});\n});\n\nclass TestNotebookKernel implements INotebookKernel {\n\tid: string = 'test';\n\tlabel: string = '';\n\tviewType = '*';\n\tonDidChange = Event.None;\n\textension: ExtensionIdentifier = new ExtensionIdentifier('test');\n\tlocalResourceRoot: URI = URI.file('/test');\n\tdescription?: string | undefined;\n\tdetail?: string | undefined;\n\tpreloadUris: URI[] = [];\n\tpreloadProvides: string[] = [];\n\tsupportedLanguages: string[] = [];\n\tasync executeNotebookCellsRequest(): Promise<void> { }\n\tasync cancelNotebookCellExecution(uri: URI, cellHandles: number[]): Promise<void> { }\n\tprovideVariables(notebookUri: URI, parentId: number | undefined, kind: 'named' | 'indexed', start: number, token: CancellationToken): AsyncIterableObject<VariablesResult> {\n\t\treturn AsyncIterableObject.EMPTY;\n\t}\n\n\tconstructor(opts?: { languages?: string[]; id?: string }) {\n\t\tthis.supportedLanguages = opts?.languages ?? [PLAINTEXT_LANGUAGE_ID];\n\t\tif (opts?.id) {\n\t\t\tthis.id = opts?.id;\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["disposables"]
}
