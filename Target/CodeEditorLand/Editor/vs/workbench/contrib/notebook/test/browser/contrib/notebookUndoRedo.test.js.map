{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/test/browser/contrib/notebookUndoRedo.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../../base/test/common/utils.js';\nimport { CellEditType, CellKind, SelectionStateType } from '../../../common/notebookCommon.js';\nimport { createNotebookCellList, withTestNotebook } from '../testNotebookEditor.js';\n\nsuite('Notebook Undo/Redo', () => {\n\tconst disposables = ensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('Basics', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body', 'markdown', CellKind.Markup, [], {}],\n\t\t\t],\n\t\t\tasync (editor, viewModel, _ds, _accessor) => {\n\t\t\t\tassert.strictEqual(viewModel.length, 2);\n\t\t\t\tassert.strictEqual(viewModel.getVersionId(), 0);\n\t\t\t\tassert.strictEqual(viewModel.getAlternativeId(), '0_0,1;1,1');\n\n\t\t\t\teditor.textModel.applyEdits([{\n\t\t\t\t\teditType: CellEditType.Replace, index: 0, count: 2, cells: []\n\t\t\t\t}], true, undefined, () => undefined, undefined, true);\n\t\t\t\tassert.strictEqual(viewModel.length, 0);\n\t\t\t\tassert.strictEqual(viewModel.getVersionId(), 1);\n\t\t\t\tassert.strictEqual(viewModel.getAlternativeId(), '1_');\n\n\t\t\t\tawait viewModel.undo();\n\t\t\t\tassert.strictEqual(viewModel.length, 2);\n\t\t\t\tassert.strictEqual(viewModel.getVersionId(), 2);\n\t\t\t\tassert.strictEqual(viewModel.getAlternativeId(), '0_0,1;1,1');\n\n\t\t\t\tawait viewModel.redo();\n\t\t\t\tassert.strictEqual(viewModel.length, 0);\n\t\t\t\tassert.strictEqual(viewModel.getVersionId(), 3);\n\t\t\t\tassert.strictEqual(viewModel.getAlternativeId(), '1_');\n\n\t\t\t\teditor.textModel.applyEdits([{\n\t\t\t\t\teditType: CellEditType.Replace, index: 0, count: 0, cells: [\n\t\t\t\t\t\t{ source: '# header 3', language: 'markdown', cellKind: CellKind.Markup, outputs: [], mime: undefined }\n\t\t\t\t\t]\n\t\t\t\t}], true, undefined, () => undefined, undefined, true);\n\t\t\t\tassert.strictEqual(viewModel.getVersionId(), 4);\n\t\t\t\tassert.strictEqual(viewModel.getAlternativeId(), '4_2,1');\n\n\t\t\t\tawait viewModel.undo();\n\t\t\t\tassert.strictEqual(viewModel.getVersionId(), 5);\n\t\t\t\tassert.strictEqual(viewModel.getAlternativeId(), '1_');\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('Invalid replace count should not throw', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body', 'markdown', CellKind.Markup, [], {}],\n\t\t\t],\n\t\t\tasync (editor, _viewModel, _ds, _accessor) => {\n\t\t\t\teditor.textModel.applyEdits([{\n\t\t\t\t\teditType: CellEditType.Replace, index: 0, count: 2, cells: []\n\t\t\t\t}], true, undefined, () => undefined, undefined, true);\n\n\t\t\t\tassert.doesNotThrow(() => {\n\t\t\t\t\teditor.textModel.applyEdits([{\n\t\t\t\t\t\teditType: CellEditType.Replace, index: 0, count: 2, cells: [\n\t\t\t\t\t\t\t{ source: '# header 2', language: 'markdown', cellKind: CellKind.Markup, outputs: [], mime: undefined }\n\t\t\t\t\t\t]\n\t\t\t\t\t}], true, undefined, () => undefined, undefined, true);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('Replace beyond length', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body', 'markdown', CellKind.Markup, [], {}],\n\t\t\t],\n\t\t\tasync (editor, viewModel) => {\n\t\t\t\teditor.textModel.applyEdits([{\n\t\t\t\t\teditType: CellEditType.Replace, index: 1, count: 2, cells: []\n\t\t\t\t}], true, undefined, () => undefined, undefined, true);\n\n\t\t\t\tassert.deepStrictEqual(viewModel.length, 1);\n\t\t\t\tawait viewModel.undo();\n\t\t\t\tassert.deepStrictEqual(viewModel.length, 2);\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('Invalid replace count should not affect undo/redo', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body', 'markdown', CellKind.Markup, [], {}],\n\t\t\t],\n\t\t\tasync (editor, viewModel, _ds, _accessor) => {\n\t\t\t\teditor.textModel.applyEdits([{\n\t\t\t\t\teditType: CellEditType.Replace, index: 0, count: 2, cells: []\n\t\t\t\t}], true, undefined, () => undefined, undefined, true);\n\n\t\t\t\teditor.textModel.applyEdits([{\n\t\t\t\t\teditType: CellEditType.Replace, index: 0, count: 2, cells: [\n\t\t\t\t\t\t{ source: '# header 2', language: 'markdown', cellKind: CellKind.Markup, outputs: [], mime: undefined }\n\t\t\t\t\t]\n\t\t\t\t}], true, undefined, () => undefined, undefined, true);\n\n\t\t\t\tassert.deepStrictEqual(viewModel.length, 1);\n\n\t\t\t\tawait viewModel.undo();\n\t\t\t\tawait viewModel.undo();\n\n\t\t\t\tassert.deepStrictEqual(viewModel.length, 2);\n\t\t\t\teditor.textModel.applyEdits([{\n\t\t\t\t\teditType: CellEditType.Replace, index: 1, count: 2, cells: []\n\t\t\t\t}], true, undefined, () => undefined, undefined, true);\n\t\t\t\tassert.deepStrictEqual(viewModel.length, 1);\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('Focus/selection update', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body', 'markdown', CellKind.Markup, [], {}],\n\t\t\t],\n\t\t\tasync (editor, viewModel, _ds, accessor) => {\n\t\t\t\tconst cellList = createNotebookCellList(accessor, disposables);\n\t\t\t\tcellList.attachViewModel(viewModel);\n\t\t\t\tcellList.setFocus([1]);\n\n\t\t\t\teditor.textModel.applyEdits([{\n\t\t\t\t\teditType: CellEditType.Replace, index: 2, count: 0, cells: [\n\t\t\t\t\t\t{ source: '# header 2', language: 'markdown', cellKind: CellKind.Markup, outputs: [], mime: undefined }\n\t\t\t\t\t]\n\t\t\t\t}], true, { focus: { start: 1, end: 2 }, selections: [{ start: 1, end: 2 }], kind: SelectionStateType.Index }, () => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfocus: { start: 2, end: 3 }, selections: [{ start: 2, end: 3 }], kind: SelectionStateType.Index\n\t\t\t\t\t};\n\t\t\t\t}, undefined, true);\n\t\t\t\tassert.strictEqual(viewModel.length, 3);\n\t\t\t\tassert.strictEqual(viewModel.getVersionId(), 1);\n\t\t\t\tassert.deepStrictEqual(cellList.getFocus(), [2]);\n\t\t\t\tassert.deepStrictEqual(cellList.getSelection(), [2]);\n\n\t\t\t\tawait viewModel.undo();\n\t\t\t\tassert.strictEqual(viewModel.length, 2);\n\t\t\t\tassert.strictEqual(viewModel.getVersionId(), 2);\n\t\t\t\tassert.deepStrictEqual(cellList.getFocus(), [1]);\n\t\t\t\tassert.deepStrictEqual(cellList.getSelection(), [1]);\n\n\t\t\t\tawait viewModel.redo();\n\t\t\t\tassert.strictEqual(viewModel.length, 3);\n\t\t\t\tassert.strictEqual(viewModel.getVersionId(), 3);\n\t\t\t\tassert.deepStrictEqual(cellList.getFocus(), [2]);\n\t\t\t\tassert.deepStrictEqual(cellList.getSelection(), [2]);\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('Batch edits', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body', 'markdown', CellKind.Markup, [], {}],\n\t\t\t],\n\t\t\tasync (editor, viewModel, _ds, accessor) => {\n\t\t\t\teditor.textModel.applyEdits([{\n\t\t\t\t\teditType: CellEditType.Replace, index: 2, count: 0, cells: [\n\t\t\t\t\t\t{ source: '# header 2', language: 'markdown', cellKind: CellKind.Markup, outputs: [], mime: undefined }\n\t\t\t\t\t]\n\t\t\t\t}, {\n\t\t\t\t\teditType: CellEditType.Metadata, index: 0, metadata: { inputCollapsed: false }\n\t\t\t\t}], true, undefined, () => undefined, undefined, true);\n\t\t\t\tassert.strictEqual(viewModel.getVersionId(), 1);\n\t\t\t\tassert.deepStrictEqual(viewModel.cellAt(0)?.metadata, { inputCollapsed: false });\n\n\t\t\t\tawait viewModel.undo();\n\t\t\t\tassert.strictEqual(viewModel.length, 2);\n\t\t\t\tassert.strictEqual(viewModel.getVersionId(), 2);\n\t\t\t\tassert.deepStrictEqual(viewModel.cellAt(0)?.metadata, {});\n\n\t\t\t\tawait viewModel.redo();\n\t\t\t\tassert.strictEqual(viewModel.length, 3);\n\t\t\t\tassert.strictEqual(viewModel.getVersionId(), 3);\n\t\t\t\tassert.deepStrictEqual(viewModel.cellAt(0)?.metadata, { inputCollapsed: false });\n\n\t\t\t}\n\t\t);\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
