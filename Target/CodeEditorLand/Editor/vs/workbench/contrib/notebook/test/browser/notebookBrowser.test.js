import o from"assert";import{ensureNoDisposablesAreLeakedInTestSuite as r}from"../../../../../base/test/common/utils.js";import"../../browser/notebookBrowser.js";import{CellKind as e}from"../../common/notebookCommon.js";import"../../common/notebookRange.js";function d(n,l){const c=[];let t;return n.forEach((s,i)=>{l(s)?t?t.end=i+1:(t={start:i,end:i+1},c.push(t)):t=void 0}),c}suite("notebookBrowser",()=>{r(),suite("getRanges",function(){const n=l=>l.cellKind===e.Code;test("all code",function(){const l=[{cellKind:e.Code},{cellKind:e.Code}];o.deepStrictEqual(d(l,n),[{start:0,end:2}])}),test("none code",function(){const l=[{cellKind:e.Markup},{cellKind:e.Markup}];o.deepStrictEqual(d(l,n),[])}),test("start code",function(){const l=[{cellKind:e.Code},{cellKind:e.Markup}];o.deepStrictEqual(d(l,n),[{start:0,end:1}])}),test("random",function(){const l=[{cellKind:e.Code},{cellKind:e.Code},{cellKind:e.Markup},{cellKind:e.Code},{cellKind:e.Markup},{cellKind:e.Markup},{cellKind:e.Code}];o.deepStrictEqual(d(l,n),[{start:0,end:2},{start:3,end:4},{start:6,end:7}])})})});
