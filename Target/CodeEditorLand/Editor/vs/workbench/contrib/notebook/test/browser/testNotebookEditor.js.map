{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/test/browser/testNotebookEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from '../../../../../base/browser/dom.js';\nimport { IListRenderer, IListVirtualDelegate } from '../../../../../base/browser/ui/list/list.js';\nimport { VSBuffer } from '../../../../../base/common/buffer.js';\nimport { NotImplementedError } from '../../../../../base/common/errors.js';\nimport { Emitter, Event } from '../../../../../base/common/event.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { ResourceMap } from '../../../../../base/common/map.js';\nimport { Mimes } from '../../../../../base/common/mime.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { mock } from '../../../../../base/test/common/mock.js';\nimport { runWithFakedTimers } from '../../../../../base/test/common/timeTravelScheduler.js';\nimport { ILanguageService } from '../../../../../editor/common/languages/language.js';\nimport { ILanguageConfigurationService } from '../../../../../editor/common/languages/languageConfigurationRegistry.js';\nimport { LanguageService } from '../../../../../editor/common/services/languageService.js';\nimport { IModelService } from '../../../../../editor/common/services/model.js';\nimport { ModelService } from '../../../../../editor/common/services/modelService.js';\nimport { ITextModelService } from '../../../../../editor/common/services/resolverService.js';\nimport { TestLanguageConfigurationService } from '../../../../../editor/test/common/modes/testLanguageConfigurationService.js';\nimport { IClipboardService } from '../../../../../platform/clipboard/common/clipboardService.js';\nimport { TestClipboardService } from '../../../../../platform/clipboard/test/common/testClipboardService.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { TestConfigurationService } from '../../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { ContextKeyService } from '../../../../../platform/contextkey/browser/contextKeyService.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { TestInstantiationService } from '../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { IKeybindingService } from '../../../../../platform/keybinding/common/keybinding.js';\nimport { MockKeybindingService } from '../../../../../platform/keybinding/test/common/mockKeybindingService.js';\nimport { ILayoutService } from '../../../../../platform/layout/browser/layoutService.js';\nimport { IListService, ListService } from '../../../../../platform/list/browser/listService.js';\nimport { ILogService, NullLogService } from '../../../../../platform/log/common/log.js';\nimport { IStorageService } from '../../../../../platform/storage/common/storage.js';\nimport { IThemeService } from '../../../../../platform/theme/common/themeService.js';\nimport { TestThemeService } from '../../../../../platform/theme/test/common/testThemeService.js';\nimport { IUndoRedoService } from '../../../../../platform/undoRedo/common/undoRedo.js';\nimport { UndoRedoService } from '../../../../../platform/undoRedo/common/undoRedoService.js';\nimport { IWorkspaceTrustRequestService } from '../../../../../platform/workspace/common/workspaceTrust.js';\nimport { EditorInput } from '../../../../common/editor/editorInput.js';\nimport { EditorModel } from '../../../../common/editor/editorModel.js';\nimport { CellFindMatchWithIndex, CellFocusMode, IActiveNotebookEditorDelegate, IBaseCellEditorOptions, ICellViewModel, INotebookEditorDelegate } from '../../browser/notebookBrowser.js';\nimport { NotebookCellStateChangedEvent, NotebookLayoutInfo } from '../../browser/notebookViewEvents.js';\nimport { NotebookCellStatusBarService } from '../../browser/services/notebookCellStatusBarServiceImpl.js';\nimport { ListViewInfoAccessor, NotebookCellList } from '../../browser/view/notebookCellList.js';\nimport { BaseCellRenderTemplate } from '../../browser/view/notebookRenderingCommon.js';\nimport { NotebookEventDispatcher } from '../../browser/viewModel/eventDispatcher.js';\nimport { CellViewModel, NotebookViewModel } from '../../browser/viewModel/notebookViewModelImpl.js';\nimport { ViewContext } from '../../browser/viewModel/viewContext.js';\nimport { NotebookCellTextModel } from '../../common/model/notebookCellTextModel.js';\nimport { NotebookTextModel } from '../../common/model/notebookTextModel.js';\nimport { INotebookCellStatusBarService } from '../../common/notebookCellStatusBarService.js';\nimport { CellKind, CellUri, ICellDto2, INotebookDiffEditorModel, INotebookEditorModel, INotebookFindOptions, IOutputDto, IResolvedNotebookEditorModel, NotebookCellExecutionState, NotebookCellMetadata, SelectionStateType } from '../../common/notebookCommon.js';\nimport { ICellExecuteUpdate, ICellExecutionComplete, ICellExecutionStateChangedEvent, IExecutionStateChangedEvent, INotebookCellExecution, INotebookExecution, INotebookExecutionStateService, INotebookFailStateChangedEvent } from '../../common/notebookExecutionStateService.js';\nimport { NotebookOptions } from '../../browser/notebookOptions.js';\nimport { ICellRange } from '../../common/notebookRange.js';\nimport { TextModelResolverService } from '../../../../services/textmodelResolver/common/textModelResolverService.js';\nimport { IWorkingCopySaveEvent } from '../../../../services/workingCopy/common/workingCopy.js';\nimport { TestLayoutService } from '../../../../test/browser/workbenchTestServices.js';\nimport { TestStorageService, TestWorkspaceTrustRequestService } from '../../../../test/common/workbenchTestServices.js';\nimport { FontInfo } from '../../../../../editor/common/config/fontInfo.js';\nimport { EditorFontLigatures, EditorFontVariations } from '../../../../../editor/common/config/editorOptions.js';\nimport { ICodeEditorService } from '../../../../../editor/browser/services/codeEditorService.js';\nimport { mainWindow } from '../../../../../base/browser/window.js';\nimport { TestCodeEditorService } from '../../../../../editor/test/browser/editorTestServices.js';\nimport { INotebookCellOutlineDataSourceFactory, NotebookCellOutlineDataSourceFactory } from '../../browser/viewModel/notebookOutlineDataSourceFactory.js';\nimport { ILanguageDetectionService } from '../../../../services/languageDetection/common/languageDetectionWorkerService.js';\nimport { INotebookOutlineEntryFactory, NotebookOutlineEntryFactory } from '../../browser/viewModel/notebookOutlineEntryFactory.js';\nimport { IOutlineService } from '../../../../services/outline/browser/outline.js';\n\nexport class TestCell extends NotebookCellTextModel {\n\tconstructor(\n\t\tpublic viewType: string,\n\t\thandle: number,\n\t\tpublic source: string,\n\t\tlanguage: string,\n\t\tcellKind: CellKind,\n\t\toutputs: IOutputDto[],\n\t\tlanguageService: ILanguageService,\n\t) {\n\t\tsuper(CellUri.generate(URI.parse('test:///fake/notebook'), handle), handle, source, language, Mimes.text, cellKind, outputs, undefined, undefined, undefined, { transientCellMetadata: {}, transientDocumentMetadata: {}, transientOutputs: false, cellContentMetadata: {} }, languageService);\n\t}\n}\n\nexport class NotebookEditorTestModel extends EditorModel implements INotebookEditorModel {\n\tprivate _dirty = false;\n\n\tprotected readonly _onDidSave = this._register(new Emitter<IWorkingCopySaveEvent>());\n\treadonly onDidSave = this._onDidSave.event;\n\n\tprotected readonly _onDidChangeDirty = this._register(new Emitter<void>());\n\treadonly onDidChangeDirty = this._onDidChangeDirty.event;\n\n\treadonly onDidChangeOrphaned = Event.None;\n\treadonly onDidChangeReadonly = Event.None;\n\treadonly onDidRevertUntitled = Event.None;\n\n\tprivate readonly _onDidChangeContent = this._register(new Emitter<void>());\n\treadonly onDidChangeContent: Event<void> = this._onDidChangeContent.event;\n\n\n\tget viewType() {\n\t\treturn this._notebook.viewType;\n\t}\n\n\tget resource() {\n\t\treturn this._notebook.uri;\n\t}\n\n\tget notebook(): NotebookTextModel {\n\t\treturn this._notebook;\n\t}\n\n\tconstructor(\n\t\tprivate _notebook: NotebookTextModel\n\t) {\n\t\tsuper();\n\n\t\tif (_notebook && _notebook.onDidChangeContent) {\n\t\t\tthis._register(_notebook.onDidChangeContent(() => {\n\t\t\t\tthis._dirty = true;\n\t\t\t\tthis._onDidChangeDirty.fire();\n\t\t\t\tthis._onDidChangeContent.fire();\n\t\t\t}));\n\t\t}\n\t}\n\n\tisReadonly(): boolean {\n\t\treturn false;\n\t}\n\n\tisOrphaned(): boolean {\n\t\treturn false;\n\t}\n\n\thasAssociatedFilePath(): boolean {\n\t\treturn false;\n\t}\n\n\tisDirty() {\n\t\treturn this._dirty;\n\t}\n\n\tget hasErrorState() {\n\t\treturn false;\n\t}\n\n\tisModified(): boolean {\n\t\treturn this._dirty;\n\t}\n\n\tgetNotebook(): NotebookTextModel {\n\t\treturn this._notebook;\n\t}\n\n\tasync load(): Promise<IResolvedNotebookEditorModel> {\n\t\treturn this;\n\t}\n\n\tasync save(): Promise<boolean> {\n\t\tif (this._notebook) {\n\t\t\tthis._dirty = false;\n\t\t\tthis._onDidChangeDirty.fire();\n\t\t\tthis._onDidSave.fire({});\n\t\t\t// todo, flush all states\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tsaveAs(): Promise<EditorInput | undefined> {\n\t\tthrow new NotImplementedError();\n\t}\n\n\trevert(): Promise<void> {\n\t\tthrow new NotImplementedError();\n\t}\n}\n\nexport function setupInstantiationService(disposables: Pick<DisposableStore, 'add'>) {\n\tconst instantiationService = disposables.add(new TestInstantiationService());\n\tconst testThemeService = new TestThemeService();\n\tinstantiationService.stub(ILanguageService, disposables.add(new LanguageService()));\n\tinstantiationService.stub(IUndoRedoService, instantiationService.createInstance(UndoRedoService));\n\tinstantiationService.stub(IConfigurationService, new TestConfigurationService());\n\tinstantiationService.stub(IThemeService, testThemeService);\n\tinstantiationService.stub(ILanguageConfigurationService, disposables.add(new TestLanguageConfigurationService()));\n\tinstantiationService.stub(IModelService, disposables.add(instantiationService.createInstance(ModelService)));\n\tinstantiationService.stub(ITextModelService, <ITextModelService>disposables.add(instantiationService.createInstance(TextModelResolverService)));\n\tinstantiationService.stub(IContextKeyService, disposables.add(instantiationService.createInstance(ContextKeyService)));\n\tinstantiationService.stub(IListService, disposables.add(instantiationService.createInstance(ListService)));\n\tinstantiationService.stub(ILayoutService, new TestLayoutService());\n\tinstantiationService.stub(ILogService, new NullLogService());\n\tinstantiationService.stub(IClipboardService, TestClipboardService);\n\tinstantiationService.stub(IStorageService, disposables.add(new TestStorageService()));\n\tinstantiationService.stub(IWorkspaceTrustRequestService, disposables.add(new TestWorkspaceTrustRequestService(true)));\n\tinstantiationService.stub(INotebookExecutionStateService, new TestNotebookExecutionStateService());\n\tinstantiationService.stub(IKeybindingService, new MockKeybindingService());\n\tinstantiationService.stub(INotebookCellStatusBarService, disposables.add(new NotebookCellStatusBarService()));\n\tinstantiationService.stub(ICodeEditorService, disposables.add(new TestCodeEditorService(testThemeService)));\n\tinstantiationService.stub(IOutlineService, new class extends mock<IOutlineService>() { override registerOutlineCreator() { return { dispose() { } }; } });\n\tinstantiationService.stub(INotebookCellOutlineDataSourceFactory, instantiationService.createInstance(NotebookCellOutlineDataSourceFactory));\n\tinstantiationService.stub(INotebookOutlineEntryFactory, instantiationService.createInstance(NotebookOutlineEntryFactory));\n\n\tinstantiationService.stub(ILanguageDetectionService, new class MockLanguageDetectionService implements ILanguageDetectionService {\n\t\t_serviceBrand: undefined;\n\t\tisEnabledForLanguage(languageId: string): boolean {\n\t\t\treturn false;\n\t\t}\n\t\tasync detectLanguage(resource: URI, supportedLangs?: string[] | undefined): Promise<string | undefined> {\n\t\t\treturn undefined;\n\t\t}\n\t});\n\n\treturn instantiationService;\n}\n\nfunction _createTestNotebookEditor(instantiationService: TestInstantiationService, disposables: DisposableStore, cells: MockNotebookCell[]): { editor: IActiveNotebookEditorDelegate; viewModel: NotebookViewModel } {\n\n\tconst viewType = 'notebook';\n\tconst notebook = disposables.add(instantiationService.createInstance(NotebookTextModel, viewType, URI.parse('test://test'), cells.map((cell): ICellDto2 => {\n\t\treturn {\n\t\t\tsource: cell[0],\n\t\t\tmime: undefined,\n\t\t\tlanguage: cell[1],\n\t\t\tcellKind: cell[2],\n\t\t\toutputs: cell[3] ?? [],\n\t\t\tmetadata: cell[4]\n\t\t};\n\t}), {}, { transientCellMetadata: {}, transientDocumentMetadata: {}, cellContentMetadata: {}, transientOutputs: false }));\n\n\tconst model = disposables.add(new NotebookEditorTestModel(notebook));\n\tconst notebookOptions = disposables.add(new NotebookOptions(mainWindow, false, undefined, instantiationService.get(IConfigurationService), instantiationService.get(INotebookExecutionStateService), instantiationService.get(ICodeEditorService)));\n\tconst baseCellEditorOptions = new class extends mock<IBaseCellEditorOptions>() { };\n\tconst viewContext = new ViewContext(notebookOptions, disposables.add(new NotebookEventDispatcher()), () => baseCellEditorOptions);\n\tconst viewModel: NotebookViewModel = disposables.add(instantiationService.createInstance(NotebookViewModel, viewType, model.notebook, viewContext, null, { isReadOnly: false }));\n\n\tconst cellList = disposables.add(createNotebookCellList(instantiationService, disposables, viewContext));\n\tcellList.attachViewModel(viewModel);\n\tconst listViewInfoAccessor = disposables.add(new ListViewInfoAccessor(cellList));\n\n\tlet visibleRanges: ICellRange[] = [{ start: 0, end: 100 }];\n\n\tconst id = Date.now().toString();\n\tconst notebookEditor: IActiveNotebookEditorDelegate = new class extends mock<IActiveNotebookEditorDelegate>() {\n\t\t// eslint-disable-next-line local/code-must-use-super-dispose\n\t\toverride dispose() {\n\t\t\tviewModel.dispose();\n\t\t}\n\t\toverride notebookOptions = notebookOptions;\n\t\toverride onDidChangeModel: Event<NotebookTextModel | undefined> = new Emitter<NotebookTextModel | undefined>().event;\n\t\toverride onDidChangeCellState: Event<NotebookCellStateChangedEvent> = new Emitter<NotebookCellStateChangedEvent>().event;\n\t\toverride getViewModel(): NotebookViewModel {\n\t\t\treturn viewModel;\n\t\t}\n\t\toverride textModel = viewModel.notebookDocument;\n\t\toverride hasModel(): this is IActiveNotebookEditorDelegate {\n\t\t\treturn !!viewModel;\n\t\t}\n\t\toverride getLength() { return viewModel.length; }\n\t\toverride getFocus() { return viewModel.getFocus(); }\n\t\toverride getSelections() { return viewModel.getSelections(); }\n\t\toverride setFocus(focus: ICellRange) {\n\t\t\tviewModel.updateSelectionsState({\n\t\t\t\tkind: SelectionStateType.Index,\n\t\t\t\tfocus: focus,\n\t\t\t\tselections: viewModel.getSelections()\n\t\t\t});\n\t\t}\n\t\toverride setSelections(selections: ICellRange[]) {\n\t\t\tviewModel.updateSelectionsState({\n\t\t\t\tkind: SelectionStateType.Index,\n\t\t\t\tfocus: viewModel.getFocus(),\n\t\t\t\tselections: selections\n\t\t\t});\n\t\t}\n\t\toverride getViewIndexByModelIndex(index: number) { return listViewInfoAccessor.getViewIndex(viewModel.viewCells[index]); }\n\t\toverride getCellRangeFromViewRange(startIndex: number, endIndex: number) { return listViewInfoAccessor.getCellRangeFromViewRange(startIndex, endIndex); }\n\t\toverride revealCellRangeInView() { }\n\t\toverride setHiddenAreas(_ranges: ICellRange[]): boolean {\n\t\t\treturn cellList.setHiddenAreas(_ranges, true);\n\t\t}\n\t\toverride getActiveCell() {\n\t\t\tconst elements = cellList.getFocusedElements();\n\n\t\t\tif (elements && elements.length) {\n\t\t\t\treturn elements[0];\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\t\toverride hasOutputTextSelection() {\n\t\t\treturn false;\n\t\t}\n\t\toverride changeModelDecorations() { return null; }\n\t\toverride focusElement() { }\n\t\toverride setCellEditorSelection() { }\n\t\toverride async revealRangeInCenterIfOutsideViewportAsync() { }\n\t\toverride async layoutNotebookCell() { }\n\t\toverride async createOutput() { }\n\t\toverride async removeInset() { }\n\t\toverride async focusNotebookCell(cell: ICellViewModel, focusItem: 'editor' | 'container' | 'output') {\n\t\t\tcell.focusMode = focusItem === 'editor' ? CellFocusMode.Editor\n\t\t\t\t: focusItem === 'output' ? CellFocusMode.Output\n\t\t\t\t\t: CellFocusMode.Container;\n\t\t}\n\t\toverride cellAt(index: number) { return viewModel.cellAt(index)!; }\n\t\toverride getCellIndex(cell: ICellViewModel) { return viewModel.getCellIndex(cell); }\n\t\toverride getCellsInRange(range?: ICellRange) { return viewModel.getCellsInRange(range); }\n\t\toverride getCellByHandle(handle: number) { return viewModel.getCellByHandle(handle); }\n\t\toverride getNextVisibleCellIndex(index: number) { return viewModel.getNextVisibleCellIndex(index); }\n\t\tgetControl() { return this; }\n\t\toverride get onDidChangeSelection() { return viewModel.onDidChangeSelection as Event<any>; }\n\t\toverride get onDidChangeOptions() { return viewModel.onDidChangeOptions; }\n\t\toverride get onDidChangeViewCells() { return viewModel.onDidChangeViewCells; }\n\t\toverride async find(query: string, options: INotebookFindOptions): Promise<CellFindMatchWithIndex[]> {\n\t\t\tconst findMatches = viewModel.find(query, options).filter(match => match.length > 0);\n\t\t\treturn findMatches;\n\t\t}\n\t\toverride deltaCellDecorations() { return []; }\n\t\toverride onDidChangeVisibleRanges = Event.None;\n\n\t\toverride get visibleRanges() {\n\t\t\treturn visibleRanges;\n\t\t}\n\n\t\toverride set visibleRanges(_ranges: ICellRange[]) {\n\t\t\tvisibleRanges = _ranges;\n\t\t}\n\n\t\toverride getId(): string { return id; }\n\t\toverride setScrollTop(scrollTop: number): void {\n\t\t\tcellList.scrollTop = scrollTop;\n\t\t}\n\t\toverride get scrollTop(): number {\n\t\t\treturn cellList.scrollTop;\n\t\t}\n\t\toverride getLayoutInfo(): NotebookLayoutInfo {\n\t\t\treturn {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t\tscrollHeight: cellList.getScrollHeight(),\n\t\t\t\tfontInfo: new FontInfo({\n\t\t\t\t\tpixelRatio: 1,\n\t\t\t\t\tfontFamily: 'mockFont',\n\t\t\t\t\tfontWeight: 'normal',\n\t\t\t\t\tfontSize: 14,\n\t\t\t\t\tfontFeatureSettings: EditorFontLigatures.OFF,\n\t\t\t\t\tfontVariationSettings: EditorFontVariations.OFF,\n\t\t\t\t\tlineHeight: 19,\n\t\t\t\t\tletterSpacing: 1.5,\n\t\t\t\t\tisMonospace: true,\n\t\t\t\t\ttypicalHalfwidthCharacterWidth: 10,\n\t\t\t\t\ttypicalFullwidthCharacterWidth: 20,\n\t\t\t\t\tcanUseHalfwidthRightwardsArrow: true,\n\t\t\t\t\tspaceWidth: 10,\n\t\t\t\t\tmiddotWidth: 10,\n\t\t\t\t\twsmiddotWidth: 10,\n\t\t\t\t\tmaxDigitWidth: 10,\n\t\t\t\t}, true),\n\t\t\t\tstickyHeight: 0\n\t\t\t};\n\t\t}\n\t};\n\n\treturn { editor: notebookEditor, viewModel };\n}\n\nexport function createTestNotebookEditor(instantiationService: TestInstantiationService, disposables: DisposableStore, cells: [source: string, lang: string, kind: CellKind, output?: IOutputDto[], metadata?: NotebookCellMetadata][]): { editor: INotebookEditorDelegate; viewModel: NotebookViewModel } {\n\treturn _createTestNotebookEditor(instantiationService, disposables, cells);\n}\n\nexport async function withTestNotebookDiffModel<R = any>(originalCells: [source: string, lang: string, kind: CellKind, output?: IOutputDto[], metadata?: NotebookCellMetadata][], modifiedCells: [source: string, lang: string, kind: CellKind, output?: IOutputDto[], metadata?: NotebookCellMetadata][], callback: (diffModel: INotebookDiffEditorModel, disposables: DisposableStore, accessor: TestInstantiationService) => Promise<R> | R): Promise<R> {\n\tconst disposables = new DisposableStore();\n\tconst instantiationService = setupInstantiationService(disposables);\n\tconst originalNotebook = createTestNotebookEditor(instantiationService, disposables, originalCells);\n\tconst modifiedNotebook = createTestNotebookEditor(instantiationService, disposables, modifiedCells);\n\tconst originalResource = new class extends mock<IResolvedNotebookEditorModel>() {\n\t\toverride get notebook() {\n\t\t\treturn originalNotebook.viewModel.notebookDocument;\n\t\t}\n\t\toverride get resource() {\n\t\t\treturn originalNotebook.viewModel.notebookDocument.uri;\n\t\t}\n\t};\n\n\tconst modifiedResource = new class extends mock<IResolvedNotebookEditorModel>() {\n\t\toverride get notebook() {\n\t\t\treturn modifiedNotebook.viewModel.notebookDocument;\n\t\t}\n\t\toverride get resource() {\n\t\t\treturn modifiedNotebook.viewModel.notebookDocument.uri;\n\t\t}\n\t};\n\n\tconst model = new class extends mock<INotebookDiffEditorModel>() {\n\t\toverride get original() {\n\t\t\treturn originalResource;\n\t\t}\n\t\toverride get modified() {\n\t\t\treturn modifiedResource;\n\t\t}\n\t};\n\n\tconst res = await callback(model, disposables, instantiationService);\n\tif (res instanceof Promise) {\n\t\tres.finally(() => {\n\t\t\toriginalNotebook.editor.dispose();\n\t\t\toriginalNotebook.viewModel.notebookDocument.dispose();\n\t\t\toriginalNotebook.viewModel.dispose();\n\t\t\tmodifiedNotebook.editor.dispose();\n\t\t\tmodifiedNotebook.viewModel.notebookDocument.dispose();\n\t\t\tmodifiedNotebook.viewModel.dispose();\n\t\t\tdisposables.dispose();\n\t\t});\n\t} else {\n\t\toriginalNotebook.editor.dispose();\n\t\toriginalNotebook.viewModel.notebookDocument.dispose();\n\t\toriginalNotebook.viewModel.dispose();\n\t\tmodifiedNotebook.editor.dispose();\n\t\tmodifiedNotebook.viewModel.notebookDocument.dispose();\n\t\tmodifiedNotebook.viewModel.dispose();\n\t\tdisposables.dispose();\n\t}\n\treturn res;\n}\n\ninterface IActiveTestNotebookEditorDelegate extends IActiveNotebookEditorDelegate {\n\tvisibleRanges: ICellRange[];\n}\n\nexport type MockNotebookCell = [\n\tsource: string,\n\tlang: string,\n\tkind: CellKind,\n\toutput?: IOutputDto[],\n\tmetadata?: NotebookCellMetadata,\n];\n\nexport type MockDocumentSymbol = {\n\tname: string;\n\trange: {};\n\tkind?: number;\n\tchildren?: MockDocumentSymbol[];\n};\n\nexport async function withTestNotebook<R = any>(cells: MockNotebookCell[], callback: (editor: IActiveTestNotebookEditorDelegate, viewModel: NotebookViewModel, disposables: DisposableStore, accessor: TestInstantiationService) => Promise<R> | R, accessor?: TestInstantiationService): Promise<R> {\n\tconst disposables: DisposableStore = new DisposableStore();\n\tconst instantiationService = accessor ?? setupInstantiationService(disposables);\n\tconst notebookEditor = _createTestNotebookEditor(instantiationService, disposables, cells);\n\n\treturn runWithFakedTimers({ useFakeTimers: true }, async () => {\n\t\tconst res = await callback(notebookEditor.editor, notebookEditor.viewModel, disposables, instantiationService);\n\t\tif (res instanceof Promise) {\n\t\t\tres.finally(() => {\n\t\t\t\tnotebookEditor.editor.dispose();\n\t\t\t\tnotebookEditor.viewModel.dispose();\n\t\t\t\tnotebookEditor.editor.textModel.dispose();\n\t\t\t\tdisposables.dispose();\n\t\t\t});\n\t\t} else {\n\t\t\tnotebookEditor.editor.dispose();\n\t\t\tnotebookEditor.viewModel.dispose();\n\t\t\tnotebookEditor.editor.textModel.dispose();\n\t\t\tdisposables.dispose();\n\t\t}\n\t\treturn res;\n\t});\n}\n\nexport function createNotebookCellList(instantiationService: TestInstantiationService, disposables: Pick<DisposableStore, 'add'>, viewContext?: ViewContext) {\n\tconst delegate: IListVirtualDelegate<CellViewModel> = {\n\t\tgetHeight(element: CellViewModel) { return element.getHeight(17); },\n\t\tgetTemplateId() { return 'template'; }\n\t};\n\n\tconst baseCellRenderTemplate = new class extends mock<BaseCellRenderTemplate>() { };\n\tconst renderer: IListRenderer<CellViewModel, BaseCellRenderTemplate> = {\n\t\ttemplateId: 'template',\n\t\trenderTemplate() { return baseCellRenderTemplate; },\n\t\trenderElement() { },\n\t\tdisposeTemplate() { }\n\t};\n\n\tconst notebookOptions = !!viewContext ? viewContext.notebookOptions\n\t\t: disposables.add(new NotebookOptions(mainWindow, false, undefined, instantiationService.get(IConfigurationService), instantiationService.get(INotebookExecutionStateService), instantiationService.get(ICodeEditorService)));\n\tconst cellList: NotebookCellList = disposables.add(instantiationService.createInstance(\n\t\tNotebookCellList,\n\t\t'NotebookCellList',\n\t\tDOM.$('container'),\n\t\tnotebookOptions,\n\t\tdelegate,\n\t\t[renderer],\n\t\tinstantiationService.get<IContextKeyService>(IContextKeyService),\n\t\t{\n\t\t\tsupportDynamicHeights: true,\n\t\t\tmultipleSelectionSupport: true,\n\t\t}\n\t));\n\n\treturn cellList;\n}\n\nexport function valueBytesFromString(value: string): VSBuffer {\n\treturn VSBuffer.fromString(value);\n}\n\nclass TestCellExecution implements INotebookCellExecution {\n\tconstructor(\n\t\treadonly notebook: URI,\n\t\treadonly cellHandle: number,\n\t\tprivate onComplete: () => void,\n\t) { }\n\n\treadonly state: NotebookCellExecutionState = NotebookCellExecutionState.Unconfirmed;\n\n\treadonly didPause: boolean = false;\n\treadonly isPaused: boolean = false;\n\n\tconfirm(): void {\n\t}\n\n\tupdate(updates: ICellExecuteUpdate[]): void {\n\t}\n\n\tcomplete(complete: ICellExecutionComplete): void {\n\t\tthis.onComplete();\n\t}\n}\n\nexport class TestNotebookExecutionStateService implements INotebookExecutionStateService {\n\t_serviceBrand: undefined;\n\n\tprivate _executions = new ResourceMap<INotebookCellExecution>();\n\n\tonDidChangeExecution = new Emitter<ICellExecutionStateChangedEvent | IExecutionStateChangedEvent>().event;\n\tonDidChangeLastRunFailState = new Emitter<INotebookFailStateChangedEvent>().event;\n\n\tforceCancelNotebookExecutions(notebookUri: URI): void {\n\t}\n\n\tgetCellExecutionsForNotebook(notebook: URI): INotebookCellExecution[] {\n\t\treturn [];\n\t}\n\n\tgetCellExecution(cellUri: URI): INotebookCellExecution | undefined {\n\t\treturn this._executions.get(cellUri);\n\t}\n\n\tcreateCellExecution(notebook: URI, cellHandle: number): INotebookCellExecution {\n\t\tconst onComplete = () => this._executions.delete(CellUri.generate(notebook, cellHandle));\n\t\tconst exe = new TestCellExecution(notebook, cellHandle, onComplete);\n\t\tthis._executions.set(CellUri.generate(notebook, cellHandle), exe);\n\t\treturn exe;\n\t}\n\n\tgetCellExecutionsByHandleForNotebook(notebook: URI): Map<number, INotebookCellExecution> | undefined {\n\t\treturn;\n\t}\n\n\tgetLastFailedCellForNotebook(notebook: URI): number | undefined {\n\t\treturn;\n\t}\n\tgetExecution(notebook: URI): INotebookExecution | undefined {\n\t\treturn;\n\t}\n\tcreateExecution(notebook: URI): INotebookExecution {\n\t\tthrow new Error('Method not implemented.');\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
