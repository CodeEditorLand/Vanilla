{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/test/browser/notebookCommon.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { Mimes } from '../../../../../base/common/mime.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { ILanguageService } from '../../../../../editor/common/languages/language.js';\nimport { TestInstantiationService } from '../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { CellKind, CellUri, diff, MimeTypeDisplayOrder, NotebookWorkingCopyTypeIdentifier } from '../../common/notebookCommon.js';\nimport { cellIndexesToRanges, cellRangesToIndexes, reduceCellRanges } from '../../common/notebookRange.js';\nimport { setupInstantiationService, TestCell } from './testNotebookEditor.js';\n\nsuite('NotebookCommon', () => {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tlet disposables: DisposableStore;\n\tlet instantiationService: TestInstantiationService;\n\tlet languageService: ILanguageService;\n\n\tsetup(() => {\n\t\tdisposables = new DisposableStore();\n\t\tinstantiationService = setupInstantiationService(disposables);\n\t\tlanguageService = instantiationService.get(ILanguageService);\n\t});\n\n\ttest('sortMimeTypes default orders', function () {\n\t\tassert.deepStrictEqual(new MimeTypeDisplayOrder().sort(\n\t\t\t[\n\t\t\t\t'application/json',\n\t\t\t\t'application/javascript',\n\t\t\t\t'text/html',\n\t\t\t\t'image/svg+xml',\n\t\t\t\tMimes.latex,\n\t\t\t\tMimes.markdown,\n\t\t\t\t'image/png',\n\t\t\t\t'image/jpeg',\n\t\t\t\tMimes.text\n\t\t\t]),\n\t\t\t[\n\t\t\t\t'application/json',\n\t\t\t\t'application/javascript',\n\t\t\t\t'text/html',\n\t\t\t\t'image/svg+xml',\n\t\t\t\tMimes.latex,\n\t\t\t\tMimes.markdown,\n\t\t\t\t'image/png',\n\t\t\t\t'image/jpeg',\n\t\t\t\tMimes.text\n\t\t\t]\n\t\t);\n\n\t\tassert.deepStrictEqual(new MimeTypeDisplayOrder().sort(\n\t\t\t[\n\t\t\t\t'application/json',\n\t\t\t\tMimes.latex,\n\t\t\t\tMimes.markdown,\n\t\t\t\t'application/javascript',\n\t\t\t\t'text/html',\n\t\t\t\tMimes.text,\n\t\t\t\t'image/png',\n\t\t\t\t'image/jpeg',\n\t\t\t\t'image/svg+xml'\n\t\t\t]),\n\t\t\t[\n\t\t\t\t'application/json',\n\t\t\t\t'application/javascript',\n\t\t\t\t'text/html',\n\t\t\t\t'image/svg+xml',\n\t\t\t\tMimes.latex,\n\t\t\t\tMimes.markdown,\n\t\t\t\t'image/png',\n\t\t\t\t'image/jpeg',\n\t\t\t\tMimes.text\n\t\t\t]\n\t\t);\n\n\t\tassert.deepStrictEqual(new MimeTypeDisplayOrder().sort(\n\t\t\t[\n\t\t\t\tMimes.markdown,\n\t\t\t\t'application/json',\n\t\t\t\tMimes.text,\n\t\t\t\t'image/jpeg',\n\t\t\t\t'application/javascript',\n\t\t\t\t'text/html',\n\t\t\t\t'image/png',\n\t\t\t\t'image/svg+xml'\n\t\t\t]),\n\t\t\t[\n\t\t\t\t'application/json',\n\t\t\t\t'application/javascript',\n\t\t\t\t'text/html',\n\t\t\t\t'image/svg+xml',\n\t\t\t\tMimes.markdown,\n\t\t\t\t'image/png',\n\t\t\t\t'image/jpeg',\n\t\t\t\tMimes.text\n\t\t\t]\n\t\t);\n\n\t\tdisposables.dispose();\n\t});\n\n\n\n\ttest('sortMimeTypes user orders', function () {\n\t\tassert.deepStrictEqual(\n\t\t\tnew MimeTypeDisplayOrder([\n\t\t\t\t'image/png',\n\t\t\t\tMimes.text,\n\t\t\t\tMimes.markdown,\n\t\t\t\t'text/html',\n\t\t\t\t'application/json'\n\t\t\t]).sort(\n\t\t\t\t[\n\t\t\t\t\t'application/json',\n\t\t\t\t\t'application/javascript',\n\t\t\t\t\t'text/html',\n\t\t\t\t\t'image/svg+xml',\n\t\t\t\t\tMimes.markdown,\n\t\t\t\t\t'image/png',\n\t\t\t\t\t'image/jpeg',\n\t\t\t\t\tMimes.text\n\t\t\t\t]\n\t\t\t),\n\t\t\t[\n\t\t\t\t'image/png',\n\t\t\t\tMimes.text,\n\t\t\t\tMimes.markdown,\n\t\t\t\t'text/html',\n\t\t\t\t'application/json',\n\t\t\t\t'application/javascript',\n\t\t\t\t'image/svg+xml',\n\t\t\t\t'image/jpeg',\n\t\t\t]\n\t\t);\n\n\t\tassert.deepStrictEqual(\n\t\t\tnew MimeTypeDisplayOrder([\n\t\t\t\t'application/json',\n\t\t\t\t'text/html',\n\t\t\t\t'text/html',\n\t\t\t\tMimes.markdown,\n\t\t\t\t'application/json'\n\t\t\t]).sort([\n\t\t\t\tMimes.markdown,\n\t\t\t\t'application/json',\n\t\t\t\tMimes.text,\n\t\t\t\t'application/javascript',\n\t\t\t\t'text/html',\n\t\t\t\t'image/svg+xml',\n\t\t\t\t'image/jpeg',\n\t\t\t\t'image/png'\n\t\t\t]),\n\t\t\t[\n\t\t\t\t'application/json',\n\t\t\t\t'text/html',\n\t\t\t\tMimes.markdown,\n\t\t\t\t'application/javascript',\n\t\t\t\t'image/svg+xml',\n\t\t\t\t'image/png',\n\t\t\t\t'image/jpeg',\n\t\t\t\tMimes.text\n\t\t\t]\n\t\t);\n\n\t\tdisposables.dispose();\n\t});\n\n\ttest('prioritizes mimetypes', () => {\n\t\tconst m = new MimeTypeDisplayOrder([\n\t\t\tMimes.markdown,\n\t\t\t'text/html',\n\t\t\t'application/json'\n\t\t]);\n\t\tassert.deepStrictEqual(m.toArray(), [Mimes.markdown, 'text/html', 'application/json']);\n\n\t\t// no-op if already in the right order\n\t\tm.prioritize('text/html', ['application/json']);\n\t\tassert.deepStrictEqual(m.toArray(), [Mimes.markdown, 'text/html', 'application/json']);\n\n\t\t// sorts to highest priority\n\t\tm.prioritize('text/html', ['application/json', Mimes.markdown]);\n\t\tassert.deepStrictEqual(m.toArray(), ['text/html', Mimes.markdown, 'application/json']);\n\n\t\t// adds in new type\n\t\tm.prioritize('text/plain', ['application/json', Mimes.markdown]);\n\t\tassert.deepStrictEqual(m.toArray(), ['text/plain', 'text/html', Mimes.markdown, 'application/json']);\n\n\t\t// moves multiple, preserves order\n\t\tm.prioritize(Mimes.markdown, ['text/plain', 'application/json', Mimes.markdown]);\n\t\tassert.deepStrictEqual(m.toArray(), ['text/html', Mimes.markdown, 'text/plain', 'application/json']);\n\n\t\t// deletes multiple\n\t\tm.prioritize('text/plain', ['text/plain', 'text/html', Mimes.markdown]);\n\t\tassert.deepStrictEqual(m.toArray(), ['text/plain', 'text/html', Mimes.markdown, 'application/json']);\n\n\t\t// handles multiple mimetypes, unknown mimetype\n\t\tconst m2 = new MimeTypeDisplayOrder(['a', 'b']);\n\t\tm2.prioritize('b', ['a', 'b', 'a', 'q']);\n\t\tassert.deepStrictEqual(m2.toArray(), ['b', 'a']);\n\n\t\tdisposables.dispose();\n\t});\n\n\ttest('sortMimeTypes glob', function () {\n\t\tassert.deepStrictEqual(\n\t\t\tnew MimeTypeDisplayOrder([\n\t\t\t\t'application/vnd-vega*',\n\t\t\t\tMimes.markdown,\n\t\t\t\t'text/html',\n\t\t\t\t'application/json'\n\t\t\t]).sort(\n\t\t\t\t[\n\t\t\t\t\t'application/json',\n\t\t\t\t\t'application/javascript',\n\t\t\t\t\t'text/html',\n\t\t\t\t\t'application/vnd-plot.json',\n\t\t\t\t\t'application/vnd-vega.json'\n\t\t\t\t]\n\t\t\t),\n\t\t\t[\n\t\t\t\t'application/vnd-vega.json',\n\t\t\t\t'text/html',\n\t\t\t\t'application/json',\n\t\t\t\t'application/vnd-plot.json',\n\t\t\t\t'application/javascript',\n\t\t\t],\n\t\t\t'glob *'\n\t\t);\n\n\t\tdisposables.dispose();\n\t});\n\n\ttest('diff cells', function () {\n\t\tconst cells: TestCell[] = [];\n\n\t\tfor (let i = 0; i < 5; i++) {\n\t\t\tcells.push(\n\t\t\t\tdisposables.add(new TestCell('notebook', i, `var a = ${i};`, 'javascript', CellKind.Code, [], languageService))\n\t\t\t);\n\t\t}\n\n\t\tassert.deepStrictEqual(diff<TestCell>(cells, [], (cell) => {\n\t\t\treturn cells.indexOf(cell) > -1;\n\t\t}), [\n\t\t\t{\n\t\t\t\tstart: 0,\n\t\t\t\tdeleteCount: 5,\n\t\t\t\ttoInsert: []\n\t\t\t}\n\t\t]\n\t\t);\n\n\t\tassert.deepStrictEqual(diff<TestCell>([], cells, (cell) => {\n\t\t\treturn false;\n\t\t}), [\n\t\t\t{\n\t\t\t\tstart: 0,\n\t\t\t\tdeleteCount: 0,\n\t\t\t\ttoInsert: cells\n\t\t\t}\n\t\t]\n\t\t);\n\n\t\tconst cellA = disposables.add(new TestCell('notebook', 6, 'var a = 6;', 'javascript', CellKind.Code, [], languageService));\n\t\tconst cellB = disposables.add(new TestCell('notebook', 7, 'var a = 7;', 'javascript', CellKind.Code, [], languageService));\n\n\t\tconst modifiedCells = [\n\t\t\tcells[0],\n\t\t\tcells[1],\n\t\t\tcellA,\n\t\t\tcells[3],\n\t\t\tcellB,\n\t\t\tcells[4]\n\t\t];\n\n\t\tconst splices = diff<TestCell>(cells, modifiedCells, (cell) => {\n\t\t\treturn cells.indexOf(cell) > -1;\n\t\t});\n\n\t\tassert.deepStrictEqual(splices,\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tstart: 2,\n\t\t\t\t\tdeleteCount: 1,\n\t\t\t\t\ttoInsert: [cellA]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tstart: 4,\n\t\t\t\t\tdeleteCount: 0,\n\t\t\t\t\ttoInsert: [cellB]\n\t\t\t\t}\n\t\t\t]\n\t\t);\n\n\t\tdisposables.dispose();\n\t});\n\n});\n\n\nsuite('CellUri', function () {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('parse, generate (file-scheme)', function () {\n\n\t\tconst nb = URI.parse('file:///bar/f\u00F8lder/file.nb');\n\t\tconst id = 17;\n\n\t\tconst data = CellUri.generate(nb, id);\n\t\tconst actual = CellUri.parse(data);\n\t\tassert.ok(Boolean(actual));\n\t\tassert.strictEqual(actual?.handle, id);\n\t\tassert.strictEqual(actual?.notebook.toString(), nb.toString());\n\t});\n\n\ttest('parse, generate (foo-scheme)', function () {\n\n\t\tconst nb = URI.parse('foo:///bar/f\u00F8lder/file.nb');\n\t\tconst id = 17;\n\n\t\tconst data = CellUri.generate(nb, id);\n\t\tconst actual = CellUri.parse(data);\n\t\tassert.ok(Boolean(actual));\n\t\tassert.strictEqual(actual?.handle, id);\n\t\tassert.strictEqual(actual?.notebook.toString(), nb.toString());\n\t});\n\n\ttest('stable order', function () {\n\n\t\tconst nb = URI.parse('foo:///bar/f\u00F8lder/file.nb');\n\t\tconst handles = [1, 2, 9, 10, 88, 100, 666666, 7777777];\n\n\t\tconst uris = handles.map(h => CellUri.generate(nb, h)).sort();\n\n\t\tconst strUris = uris.map(String).sort();\n\t\tconst parsedUris = strUris.map(s => URI.parse(s));\n\n\t\tconst actual = parsedUris.map(u => CellUri.parse(u)?.handle);\n\n\t\tassert.deepStrictEqual(actual, handles);\n\t});\n});\n\n\nsuite('CellRange', function () {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('Cell range to index', function () {\n\t\tassert.deepStrictEqual(cellRangesToIndexes([]), []);\n\t\tassert.deepStrictEqual(cellRangesToIndexes([{ start: 0, end: 0 }]), []);\n\t\tassert.deepStrictEqual(cellRangesToIndexes([{ start: 0, end: 1 }]), [0]);\n\t\tassert.deepStrictEqual(cellRangesToIndexes([{ start: 0, end: 2 }]), [0, 1]);\n\t\tassert.deepStrictEqual(cellRangesToIndexes([{ start: 0, end: 2 }, { start: 2, end: 3 }]), [0, 1, 2]);\n\t\tassert.deepStrictEqual(cellRangesToIndexes([{ start: 0, end: 2 }, { start: 3, end: 4 }]), [0, 1, 3]);\n\t});\n\n\ttest('Cell index to range', function () {\n\t\tassert.deepStrictEqual(cellIndexesToRanges([]), []);\n\t\tassert.deepStrictEqual(cellIndexesToRanges([0]), [{ start: 0, end: 1 }]);\n\t\tassert.deepStrictEqual(cellIndexesToRanges([0, 1]), [{ start: 0, end: 2 }]);\n\t\tassert.deepStrictEqual(cellIndexesToRanges([0, 1, 2]), [{ start: 0, end: 3 }]);\n\t\tassert.deepStrictEqual(cellIndexesToRanges([0, 1, 3]), [{ start: 0, end: 2 }, { start: 3, end: 4 }]);\n\n\t\tassert.deepStrictEqual(cellIndexesToRanges([1, 0]), [{ start: 0, end: 2 }]);\n\t\tassert.deepStrictEqual(cellIndexesToRanges([1, 2, 0]), [{ start: 0, end: 3 }]);\n\t\tassert.deepStrictEqual(cellIndexesToRanges([3, 1, 0]), [{ start: 0, end: 2 }, { start: 3, end: 4 }]);\n\n\t\tassert.deepStrictEqual(cellIndexesToRanges([9, 10]), [{ start: 9, end: 11 }]);\n\t\tassert.deepStrictEqual(cellIndexesToRanges([10, 9]), [{ start: 9, end: 11 }]);\n\t});\n\n\ttest('Reduce ranges', function () {\n\t\tassert.deepStrictEqual(reduceCellRanges([{ start: 0, end: 1 }, { start: 1, end: 2 }]), [{ start: 0, end: 2 }]);\n\t\tassert.deepStrictEqual(reduceCellRanges([{ start: 0, end: 2 }, { start: 1, end: 3 }]), [{ start: 0, end: 3 }]);\n\t\tassert.deepStrictEqual(reduceCellRanges([{ start: 1, end: 3 }, { start: 0, end: 2 }]), [{ start: 0, end: 3 }]);\n\t\tassert.deepStrictEqual(reduceCellRanges([{ start: 0, end: 2 }, { start: 4, end: 5 }]), [{ start: 0, end: 2 }, { start: 4, end: 5 }]);\n\n\t\tassert.deepStrictEqual(reduceCellRanges([\n\t\t\t{ start: 0, end: 1 },\n\t\t\t{ start: 1, end: 2 },\n\t\t\t{ start: 4, end: 6 }\n\t\t]), [\n\t\t\t{ start: 0, end: 2 },\n\t\t\t{ start: 4, end: 6 }\n\t\t]);\n\n\t\tassert.deepStrictEqual(reduceCellRanges([\n\t\t\t{ start: 0, end: 1 },\n\t\t\t{ start: 1, end: 3 },\n\t\t\t{ start: 3, end: 4 }\n\t\t]), [\n\t\t\t{ start: 0, end: 4 }\n\t\t]);\n\t});\n\n\ttest('Reduce ranges 2, empty ranges', function () {\n\t\tassert.deepStrictEqual(reduceCellRanges([{ start: 0, end: 0 }, { start: 0, end: 0 }]), [{ start: 0, end: 0 }]);\n\t\tassert.deepStrictEqual(reduceCellRanges([{ start: 0, end: 0 }, { start: 1, end: 2 }]), [{ start: 1, end: 2 }]);\n\t\tassert.deepStrictEqual(reduceCellRanges([{ start: 2, end: 2 }]), [{ start: 2, end: 2 }]);\n\t});\n});\n\nsuite('NotebookWorkingCopyTypeIdentifier', function () {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('works', function () {\n\t\tconst viewType = 'testViewType';\n\t\tconst type = NotebookWorkingCopyTypeIdentifier.create('testViewType');\n\t\tassert.strictEqual(NotebookWorkingCopyTypeIdentifier.parse(type), viewType);\n\t\tassert.strictEqual(NotebookWorkingCopyTypeIdentifier.parse('something'), undefined);\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
