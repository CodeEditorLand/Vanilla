{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/test/browser/notebookVariablesDataSource.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport assert from 'assert';\nimport { AsyncIterableObject, AsyncIterableSource } from '../../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { mock } from '../../../../../base/test/common/mock.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { INotebookVariableElement, NotebookVariableDataSource } from '../../browser/contrib/notebookVariables/notebookVariablesDataSource.js';\nimport { NotebookTextModel } from '../../common/model/notebookTextModel.js';\nimport { INotebookKernel, INotebookKernelService, VariablesResult } from '../../common/notebookKernelService.js';\n\n\nsuite('NotebookVariableDataSource', () => {\n\tlet dataSource: NotebookVariableDataSource;\n\tconst notebookModel = { uri: 'one.ipynb', languages: ['python'] } as unknown as NotebookTextModel;\n\tlet provideVariablesCalled: boolean;\n\n\ttype VariablesResultWithAction = VariablesResult & { action?: () => void };\n\tlet results: VariablesResultWithAction[];\n\n\tconst kernel = new class extends mock<INotebookKernel>() {\n\t\toverride hasVariableProvider = true;\n\t\toverride provideVariables(\n\t\t\tnotebookUri: URI,\n\t\t\tparentId: number | undefined,\n\t\t\tkind: 'named' | 'indexed',\n\t\t\tstart: number,\n\t\t\ttoken: CancellationToken\n\t\t): AsyncIterableObject<VariablesResult> {\n\t\t\tprovideVariablesCalled = true;\n\t\t\tconst source = new AsyncIterableSource<VariablesResult>();\n\t\t\tfor (let i = 0; i < results.length; i++) {\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (results[i].action) {\n\t\t\t\t\tresults[i].action!();\n\t\t\t\t}\n\t\t\t\tsource.emitOne(results[i]);\n\t\t\t}\n\n\t\t\tsetTimeout(() => source.resolve(), 0);\n\t\t\treturn source.asyncIterable;\n\t\t}\n\t};\n\n\tconst kernelService = new class extends mock<INotebookKernelService>() {\n\t\toverride getMatchingKernel(notebook: NotebookTextModel) {\n\t\t\treturn { selected: kernel, all: [], suggestions: [], hidden: [] };\n\t\t}\n\t};\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(() => {\n\t\tprovideVariablesCalled = false;\n\t\tdataSource = new NotebookVariableDataSource(kernelService);\n\t\tresults = [\n\t\t\t{ id: 1, name: 'a', value: '1', hasNamedChildren: false, indexedChildrenCount: 0 },\n\t\t];\n\t});\n\n\ttest('Root element should return children', async () => {\n\t\tconst variables = await dataSource.getChildren({ kind: 'root', notebook: notebookModel });\n\n\t\tassert.strictEqual(variables.length, 1);\n\t});\n\n\ttest('Get children of list element', async () => {\n\t\tconst parent = { kind: 'variable', notebook: notebookModel, id: '1', extHostId: 1, name: 'list', value: '[...]', hasNamedChildren: false, indexedChildrenCount: 5 } as INotebookVariableElement;\n\t\tresults = [\n\t\t\t{ id: 2, name: 'first', value: '1', hasNamedChildren: false, indexedChildrenCount: 0 },\n\t\t\t{ id: 3, name: 'second', value: '2', hasNamedChildren: false, indexedChildrenCount: 0 },\n\t\t\t{ id: 4, name: 'third', value: '3', hasNamedChildren: false, indexedChildrenCount: 0 },\n\t\t\t{ id: 5, name: 'fourth', value: '4', hasNamedChildren: false, indexedChildrenCount: 0 },\n\t\t\t{ id: 6, name: 'fifth', value: '5', hasNamedChildren: false, indexedChildrenCount: 0 },\n\t\t];\n\n\t\tconst variables = await dataSource.getChildren(parent);\n\n\t\tassert.strictEqual(variables.length, 5);\n\t});\n\n\ttest('Get children for large list', async () => {\n\t\tconst parent = { kind: 'variable', notebook: notebookModel, id: '1', extHostId: 1, name: 'list', value: '[...]', hasNamedChildren: false, indexedChildrenCount: 2000 } as INotebookVariableElement;\n\t\tresults = [];\n\n\t\tconst variables = await dataSource.getChildren(parent);\n\n\t\tassert(variables.length > 1, 'We should have results for groups of children');\n\t\tassert(!provideVariablesCalled, 'provideVariables should not be called');\n\t\tassert.equal(variables[0].extHostId, parent.extHostId, 'ExtHostId should match the parent since we will use it to get the real children');\n\t});\n\n\ttest('Get children for very large list', async () => {\n\t\tconst parent = { kind: 'variable', notebook: notebookModel, id: '1', extHostId: 1, name: 'list', value: '[...]', hasNamedChildren: false, indexedChildrenCount: 1_000_000 } as INotebookVariableElement;\n\t\tresults = [];\n\n\t\tconst groups = await dataSource.getChildren(parent);\n\t\tconst children = await dataSource.getChildren(groups[99]);\n\n\t\tassert(children.length === 100, 'We should have a full page of child groups');\n\t\tassert(!provideVariablesCalled, 'provideVariables should not be called');\n\t\tassert.equal(children[0].extHostId, parent.extHostId, 'ExtHostId should match the parent since we will use it to get the real children');\n\t});\n\n\ttest('Cancel while enumerating through children', async () => {\n\t\tconst parent = { kind: 'variable', notebook: notebookModel, id: '1', extHostId: 1, name: 'list', value: '[...]', hasNamedChildren: false, indexedChildrenCount: 10 } as INotebookVariableElement;\n\t\tresults = [\n\t\t\t{ id: 2, name: 'first', value: '1', hasNamedChildren: false, indexedChildrenCount: 0 },\n\t\t\t{ id: 3, name: 'second', value: '2', hasNamedChildren: false, indexedChildrenCount: 0 },\n\t\t\t{ id: 4, name: 'third', value: '3', hasNamedChildren: false, indexedChildrenCount: 0 },\n\t\t\t{ id: 5, name: 'fourth', value: '4', hasNamedChildren: false, indexedChildrenCount: 0 },\n\t\t\t{ id: 5, name: 'fifth', value: '4', hasNamedChildren: false, indexedChildrenCount: 0, action: () => dataSource.cancel() } as VariablesResult,\n\t\t\t{ id: 7, name: 'sixth', value: '6', hasNamedChildren: false, indexedChildrenCount: 0 },\n\t\t\t{ id: 8, name: 'seventh', value: '7', hasNamedChildren: false, indexedChildrenCount: 0 },\n\t\t\t{ id: 9, name: 'eighth', value: '8', hasNamedChildren: false, indexedChildrenCount: 0 },\n\t\t\t{ id: 10, name: 'ninth', value: '9', hasNamedChildren: false, indexedChildrenCount: 0 },\n\t\t\t{ id: 11, name: 'tenth', value: '10', hasNamedChildren: false, indexedChildrenCount: 0 },\n\t\t];\n\n\t\tconst variables = await dataSource.getChildren(parent);\n\n\t\tassert.equal(variables.length, 5, 'Iterating should have been cancelled');\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
