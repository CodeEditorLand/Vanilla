{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/test/browser/contrib/contributedStatusBarItemController.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { CancellationToken } from '../../../../../../base/common/cancellation.js';\nimport { Emitter, Event } from '../../../../../../base/common/event.js';\nimport { Disposable, DisposableStore } from '../../../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../../../base/common/uri.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../../base/test/common/utils.js';\nimport { ContributedStatusBarItemController } from '../../../browser/contrib/cellStatusBar/contributedStatusBarItemController.js';\nimport { INotebookCellStatusBarService } from '../../../common/notebookCellStatusBarService.js';\nimport { CellKind, INotebookCellStatusBarItemProvider } from '../../../common/notebookCommon.js';\nimport { withTestNotebook } from '../testNotebookEditor.js';\n\nsuite('Notebook Statusbar', () => {\n\tconst testDisposables = new DisposableStore();\n\n\tteardown(() => {\n\t\ttestDisposables.clear();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('Calls item provider', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['var b = 1;', 'javascript', CellKind.Code, [], {}],\n\t\t\t\t['# header a', 'markdown', CellKind.Markup, [], {}],\n\t\t\t],\n\t\t\tasync (editor, viewModel, _ds, accessor) => {\n\t\t\t\tconst cellStatusbarSvc = accessor.get(INotebookCellStatusBarService);\n\t\t\t\ttestDisposables.add(accessor.createInstance(ContributedStatusBarItemController, editor));\n\n\t\t\t\tconst provider = testDisposables.add(new class extends Disposable implements INotebookCellStatusBarItemProvider {\n\t\t\t\t\tprivate provideCalls = 0;\n\n\t\t\t\t\tprivate _onProvideCalled = this._register(new Emitter<number>());\n\t\t\t\t\tpublic onProvideCalled = this._onProvideCalled.event;\n\n\t\t\t\t\tpublic _onDidChangeStatusBarItems = this._register(new Emitter<void>());\n\t\t\t\t\tpublic onDidChangeStatusBarItems = this._onDidChangeStatusBarItems.event;\n\n\t\t\t\t\tasync provideCellStatusBarItems(_uri: URI, index: number, _token: CancellationToken) {\n\t\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\t\tthis.provideCalls++;\n\t\t\t\t\t\t\tthis._onProvideCalled.fire(this.provideCalls);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn { items: [] };\n\t\t\t\t\t}\n\n\t\t\t\t\tviewType = editor.textModel.viewType;\n\t\t\t\t});\n\t\t\t\tconst providePromise1 = asPromise(provider.onProvideCalled, 'registering provider');\n\t\t\t\ttestDisposables.add(cellStatusbarSvc.registerCellStatusBarItemProvider(provider));\n\t\t\t\tassert.strictEqual(await providePromise1, 1, 'should call provider on registration');\n\n\t\t\t\tconst providePromise2 = asPromise(provider.onProvideCalled, 'updating metadata');\n\t\t\t\tconst cell0 = editor.textModel.cells[0];\n\t\t\t\tcell0.metadata = { ...cell0.metadata, ...{ newMetadata: true } };\n\t\t\t\tassert.strictEqual(await providePromise2, 2, 'should call provider on updating metadata');\n\n\t\t\t\tconst providePromise3 = asPromise(provider.onProvideCalled, 'changing cell language');\n\t\t\t\tcell0.language = 'newlanguage';\n\t\t\t\tassert.strictEqual(await providePromise3, 3, 'should call provider on changing language');\n\n\t\t\t\tconst providePromise4 = asPromise(provider.onProvideCalled, 'manually firing change event');\n\t\t\t\tprovider._onDidChangeStatusBarItems.fire();\n\t\t\t\tassert.strictEqual(await providePromise4, 4, 'should call provider on manually firing change event');\n\t\t\t});\n\t});\n});\n\nasync function asPromise<T>(event: Event<T>, message: string): Promise<T> {\n\tconst error = new Error('asPromise TIMEOUT reached: ' + message);\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst handle = setTimeout(() => {\n\t\t\tsub.dispose();\n\t\t\treject(error);\n\t\t}, 1000);\n\n\t\tconst sub = event(e => {\n\t\t\tclearTimeout(handle);\n\t\t\tsub.dispose();\n\t\t\tresolve(e);\n\t\t});\n\t});\n}\n"],
  "mappings": ";;AAKA,OAAO,YAAY;AACnB,SAAS,yBAAyB;AAClC,SAAS,SAAS,aAAa;AAC/B,SAAS,YAAY,uBAAuB;AAC5C,SAAS,WAAW;AACpB,SAAS,+CAA+C;AACxD,SAAS,0CAA0C;AACnD,SAAS,qCAAqC;AAC9C,SAAS,UAAU,0CAA0C;AAC7D,SAAS,wBAAwB;AAEjC,MAAM,sBAAsB,MAAM;AACjC,QAAM,kBAAkB,IAAI,gBAAgB;AAE5C,WAAS,MAAM;AACd,oBAAgB,MAAM;AAAA,EACvB,CAAC;AAED,0CAAwC;AAExC,OAAK,uBAAuB,iBAAkB;AAC7C,UAAM;AAAA,MACL;AAAA,QACC,CAAC,cAAc,cAAc,SAAS,MAAM,CAAC,GAAG,CAAC,CAAC;AAAA,QAClD,CAAC,cAAc,YAAY,SAAS,QAAQ,CAAC,GAAG,CAAC,CAAC;AAAA,MACnD;AAAA,MACA,OAAO,QAAQ,WAAW,KAAK,aAAa;AAC3C,cAAM,mBAAmB,SAAS,IAAI,6BAA6B;AACnE,wBAAgB,IAAI,SAAS,eAAe,oCAAoC,MAAM,CAAC;AAEvF,cAAM,WAAW,gBAAgB,IAAI,IAAI,cAAc,WAAyD;AAAA,UACvG,eAAe;AAAA,UAEf,mBAAmB,KAAK,UAAU,IAAI,QAAgB,CAAC;AAAA,UACxD,kBAAkB,KAAK,iBAAiB;AAAA,UAExC,6BAA6B,KAAK,UAAU,IAAI,QAAc,CAAC;AAAA,UAC/D,4BAA4B,KAAK,2BAA2B;AAAA,UAEnE,MAAM,0BAA0B,MAAW,OAAe,QAA2B;AACpF,gBAAI,UAAU,GAAG;AAChB,mBAAK;AACL,mBAAK,iBAAiB,KAAK,KAAK,YAAY;AAAA,YAC7C;AAEA,mBAAO,EAAE,OAAO,CAAC,EAAE;AAAA,UACpB;AAAA,UAEA,WAAW,OAAO,UAAU;AAAA,QAC7B,GAAC;AACD,cAAM,kBAAkB,UAAU,SAAS,iBAAiB,sBAAsB;AAClF,wBAAgB,IAAI,iBAAiB,kCAAkC,QAAQ,CAAC;AAChF,eAAO,YAAY,MAAM,iBAAiB,GAAG,sCAAsC;AAEnF,cAAM,kBAAkB,UAAU,SAAS,iBAAiB,mBAAmB;AAC/E,cAAM,QAAQ,OAAO,UAAU,MAAM,CAAC;AACtC,cAAM,WAAW,EAAE,GAAG,MAAM,UAAU,GAAG,EAAE,aAAa,KAAK,EAAE;AAC/D,eAAO,YAAY,MAAM,iBAAiB,GAAG,2CAA2C;AAExF,cAAM,kBAAkB,UAAU,SAAS,iBAAiB,wBAAwB;AACpF,cAAM,WAAW;AACjB,eAAO,YAAY,MAAM,iBAAiB,GAAG,2CAA2C;AAExF,cAAM,kBAAkB,UAAU,SAAS,iBAAiB,8BAA8B;AAC1F,iBAAS,2BAA2B,KAAK;AACzC,eAAO,YAAY,MAAM,iBAAiB,GAAG,sDAAsD;AAAA,MACpG;AAAA,IAAC;AAAA,EACH,CAAC;AACF,CAAC;AAED,eAAe,UAAa,OAAiB,SAA6B;AACzE,QAAM,QAAQ,IAAI,MAAM,gCAAgC,OAAO;AAC/D,SAAO,IAAI,QAAW,CAAC,SAAS,WAAW;AAC1C,UAAM,SAAS,WAAW,MAAM;AAC/B,UAAI,QAAQ;AACZ,aAAO,KAAK;AAAA,IACb,GAAG,GAAI;AAEP,UAAM,MAAM,MAAM,OAAK;AACtB,mBAAa,MAAM;AACnB,UAAI,QAAQ;AACZ,cAAQ,CAAC;AAAA,IACV,CAAC;AAAA,EACF,CAAC;AACF;AAde;",
  "names": []
}
