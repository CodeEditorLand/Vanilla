import t from"assert";import{setupInstantiationService as S,withTestNotebook as E}from"../testNotebookEditor.js";import{OutlineTarget as c}from"../../../../../services/outline/browser/outline.js";import{IThemeService as P}from"../../../../../../platform/theme/common/themeService.js";import{mock as u}from"../../../../../../base/test/common/mock.js";import{Event as s}from"../../../../../../base/common/event.js";import{IEditorService as q}from"../../../../../services/editor/common/editorService.js";import{IMarkerService as h}from"../../../../../../platform/markers/common/markers.js";import{MarkerService as b}from"../../../../../../platform/markers/common/markerService.js";import{CellKind as a}from"../../../common/notebookCommon.js";import"../../../browser/notebookBrowser.js";import{DisposableStore as D}from"../../../../../../base/common/lifecycle.js";import"../../../../../../platform/instantiation/test/common/instantiationServiceMock.js";import{NotebookCellOutline as o,NotebookOutlineCreator as I}from"../../../browser/contrib/outline/notebookOutline.js";import{ensureNoDisposablesAreLeakedInTestSuite as v}from"../../../../../../base/test/common/utils.js";import{ILanguageFeaturesService as y}from"../../../../../../editor/common/services/languageFeatures.js";import{LanguageFeaturesService as O}from"../../../../../../editor/common/services/languageFeaturesService.js";import"../../../../../common/editor.js";import{CancellationToken as w}from"../../../../../../base/common/cancellation.js";import{INotebookOutlineEntryFactory as Q,NotebookOutlineEntryFactory as N}from"../../../browser/viewModel/notebookOutlineEntryFactory.js";suite("Notebook Outline",function(){let r,n,l;teardown(()=>r.dispose()),v(),setup(()=>{l=!1,r=new D,n=S(r),n.set(q,new class extends u(){}),n.set(y,new O),n.set(h,r.add(new b)),n.set(P,new class extends u(){onDidFileIconThemeChange=s.None;getFileIconTheme(){return{hasFileIcons:!0,hasFolderIcons:!0,hidesExplorerArrows:!1}}})});async function i(e,g,f){return E(e,async k=>{k.hasModel()||t.ok(!1,"MUST have active text editor");const p=new class extends u(){getControl(){return k}onDidChangeModel=s.None;onDidChangeSelection=s.None},m=n.createInstance(N);m.cacheSymbols=async()=>{l=!0},n.stub(Q,m);const d=await n.createInstance(I).createOutline(p,g,w.None);return r.add(d),f(d,k)})}test("basic",async function(){await i([],c.OutlinePane,e=>{t.ok(e instanceof o),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements(),[])})}),test("special characters in heading",async function(){await i([["# Hell\xF6 & H\xE4llo","md",a.Markup]],c.OutlinePane,e=>{t.ok(e instanceof o),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements().length,1),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements()[0].label,"Hell\xF6 & H\xE4llo")}),await i([["# bo<i>ld</i>","md",a.Markup]],c.OutlinePane,e=>{t.ok(e instanceof o),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements().length,1),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements()[0].label,"bold")})}),test('Notebook falsely detects "empty cells"',async function(){await i([["  \u7684\u65F6\u4EE3   ","md",a.Markup]],c.OutlinePane,e=>{t.ok(e instanceof o),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements().length,1),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements()[0].label,"\u7684\u65F6\u4EE3")}),await i([["   ","md",a.Markup]],c.OutlinePane,e=>{t.ok(e instanceof o),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements().length,1),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements()[0].label,"empty cell")}),await i([["+++++[]{}--)(0  ","md",a.Markup]],c.OutlinePane,e=>{t.ok(e instanceof o),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements().length,1),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements()[0].label,"+++++[]{}--)(0")}),await i([["+++++[]{}--)(0 Hello **&^ ","md",a.Markup]],c.OutlinePane,e=>{t.ok(e instanceof o),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements().length,1),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements()[0].label,"+++++[]{}--)(0 Hello **&^")}),await i([[`!@#$
 \xDCberschr\xEFft`,"md",a.Markup]],c.OutlinePane,e=>{t.ok(e instanceof o),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements().length,1),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements()[0].label,"!@#$")})}),test("Heading text defines entry label",async function(){return await i([[`foo
 # h1`,"md",a.Markup]],c.OutlinePane,e=>{t.ok(e instanceof o),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements().length,1),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements()[0].label,"h1")})}),test("Notebook outline ignores markdown headings #115200",async function(){await i([[`## h2 
# h1`,"md",a.Markup]],c.OutlinePane,e=>{t.ok(e instanceof o),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements().length,2),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements()[0].label,"h2"),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements()[1].label,"h1")}),await i([["## h2","md",a.Markup],["# h1","md",a.Markup]],c.OutlinePane,e=>{t.ok(e instanceof o),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements().length,2),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements()[0].label,"h2"),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements()[1].label,"h1")})}),test("Symbols for goto quickpick are pre-cached",async function(){await i([[`a = 1
b = 2`,"python",a.Code]],c.QuickPick,e=>{t.ok(e instanceof o),t.strictEqual(l,!0)})})});
