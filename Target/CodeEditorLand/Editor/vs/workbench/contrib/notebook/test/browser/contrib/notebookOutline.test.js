import t from"assert";import{setupInstantiationService as m,withTestNotebook as d}from"../testNotebookEditor.js";import{OutlineTarget as g}from"../../../../../services/outline/browser/outline.js";import{IThemeService as f}from"../../../../../../platform/theme/common/themeService.js";import{mock as k}from"../../../../../../base/test/common/mock.js";import{Event as l}from"../../../../../../base/common/event.js";import{IEditorService as p}from"../../../../../services/editor/common/editorService.js";import{IMarkerService as S}from"../../../../../../platform/markers/common/markers.js";import{MarkerService as E}from"../../../../../../platform/markers/common/markerService.js";import{CellKind as a}from"../../../common/notebookCommon.js";import"../../../browser/notebookBrowser.js";import{DisposableStore as P}from"../../../../../../base/common/lifecycle.js";import"../../../../../../platform/instantiation/test/common/instantiationServiceMock.js";import{NotebookCellOutline as i}from"../../../browser/contrib/outline/notebookOutline.js";import{ensureNoDisposablesAreLeakedInTestSuite as q}from"../../../../../../base/test/common/utils.js";import{ILanguageFeaturesService as h}from"../../../../../../editor/common/services/languageFeatures.js";import{LanguageFeaturesService as b}from"../../../../../../editor/common/services/languageFeaturesService.js";import"../../../../../common/editor.js";suite("Notebook Outline",function(){let n,o;teardown(()=>n.dispose()),q(),setup(()=>{n=new P,o=m(n),o.set(p,new class extends k(){}),o.set(h,new b),o.set(S,n.add(new E)),o.set(f,new class extends k(){onDidFileIconThemeChange=l.None;getFileIconTheme(){return{hasFileIcons:!0,hasFolderIcons:!0,hidesExplorerArrows:!1}}})});function c(e,s){return d(e,r=>{r.hasModel()||t.ok(!1,"MUST have active text editor");const u=o.createInstance(i,new class extends k(){getControl(){return r}onDidChangeModel=l.None;onDidChangeSelection=l.None},g.OutlinePane);return n.add(u),s(u,r)})}test("basic",async function(){await c([],e=>{t.ok(e instanceof i),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements(),[])})}),test("special characters in heading",async function(){await c([["# Hell\xF6 & H\xE4llo","md",a.Markup]],e=>{t.ok(e instanceof i),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements().length,1),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements()[0].label,"Hell\xF6 & H\xE4llo")}),await c([["# bo<i>ld</i>","md",a.Markup]],e=>{t.ok(e instanceof i),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements().length,1),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements()[0].label,"bold")})}),test('Notebook falsely detects "empty cells"',async function(){await c([["  \u7684\u65F6\u4EE3   ","md",a.Markup]],e=>{t.ok(e instanceof i),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements().length,1),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements()[0].label,"\u7684\u65F6\u4EE3")}),await c([["   ","md",a.Markup]],e=>{t.ok(e instanceof i),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements().length,1),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements()[0].label,"empty cell")}),await c([["+++++[]{}--)(0  ","md",a.Markup]],e=>{t.ok(e instanceof i),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements().length,1),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements()[0].label,"+++++[]{}--)(0")}),await c([["+++++[]{}--)(0 Hello **&^ ","md",a.Markup]],e=>{t.ok(e instanceof i),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements().length,1),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements()[0].label,"+++++[]{}--)(0 Hello **&^")}),await c([[`!@#$
 \xDCberschr\xEFft`,"md",a.Markup]],e=>{t.ok(e instanceof i),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements().length,1),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements()[0].label,"!@#$")})}),test("Heading text defines entry label",async function(){return await c([[`foo
 # h1`,"md",a.Markup]],e=>{t.ok(e instanceof i),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements().length,1),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements()[0].label,"h1")})}),test("Notebook outline ignores markdown headings #115200",async function(){await c([[`## h2 
# h1`,"md",a.Markup]],e=>{t.ok(e instanceof i),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements().length,2),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements()[0].label,"h2"),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements()[1].label,"h1")}),await c([["## h2","md",a.Markup],["# h1","md",a.Markup]],e=>{t.ok(e instanceof i),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements().length,2),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements()[0].label,"h2"),t.deepStrictEqual(e.config.quickPickDataSource.getQuickPickElements()[1].label,"h1")})})});
