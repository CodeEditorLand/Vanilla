{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/test/browser/cellDecorations.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { CellKind } from '../../common/notebookCommon.js';\nimport { withTestNotebook } from './testNotebookEditor.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { Event } from '../../../../../base/common/event.js';\n\nsuite('CellDecorations', () => {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('Add and remove a cell decoration', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header a', 'markdown', CellKind.Markup, [], {}],\n\t\t\t],\n\t\t\tasync (editor, viewModel) => {\n\t\t\t\tconst cell = viewModel.cellAt(0);\n\t\t\t\tassert.ok(cell);\n\n\t\t\t\tlet added = false;\n\t\t\t\tEvent.once(cell.onCellDecorationsChanged)(e => added = !!e.added.find(decoration => decoration.className === 'style1'));\n\n\t\t\t\tconst decorationIds = cell.deltaCellDecorations([], [{ className: 'style1' }]);\n\t\t\t\tassert.ok(cell.getCellDecorations().find(dec => dec.className === 'style1'));\n\n\t\t\t\tlet removed = false;\n\t\t\t\tEvent.once(cell.onCellDecorationsChanged)(e => removed = !!e.removed.find(decoration => decoration.className === 'style1'));\n\t\t\t\tcell.deltaCellDecorations(decorationIds, []);\n\n\t\t\t\tassert.ok(!cell.getCellDecorations().find(dec => dec.className === 'style1'));\n\t\t\t\tassert.ok(added);\n\t\t\t\tassert.ok(removed);\n\t\t\t});\n\t});\n\n\ttest('Removing one cell decoration should not remove all', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header a', 'markdown', CellKind.Markup, [], {}],\n\t\t\t],\n\t\t\tasync (editor, viewModel) => {\n\t\t\t\tconst cell = viewModel.cellAt(0);\n\t\t\t\tassert.ok(cell);\n\n\t\t\t\tconst decorationIds = cell.deltaCellDecorations([], [{ className: 'style1', outputClassName: 'style1' }]);\n\t\t\t\tcell.deltaCellDecorations([], [{ className: 'style1' }]);\n\n\t\t\t\tlet styleRemoved = false;\n\t\t\t\tlet outputStyleRemoved = false;\n\t\t\t\tEvent.once(cell.onCellDecorationsChanged)(e => {\n\t\t\t\t\tstyleRemoved = !!e.removed.find(decoration => decoration.className === 'style1');\n\t\t\t\t\toutputStyleRemoved = !!e.removed.find(decoration => decoration.outputClassName === 'style1');\n\t\t\t\t});\n\t\t\t\t// remove the first style added, which should only remove the output class\n\t\t\t\tcell.deltaCellDecorations(decorationIds, []);\n\n\t\t\t\tassert.ok(!cell.getCellDecorations().find(dec => dec.outputClassName === 'style1'));\n\t\t\t\tassert.ok(cell.getCellDecorations().find(dec => dec.className === 'style1'));\n\t\t\t\tassert.ok(!styleRemoved);\n\t\t\t\tassert.ok(outputStyleRemoved);\n\t\t\t});\n\t});\n});\n"],
  "mappings": "AAKA,OAAO,YAAY;AACnB,SAAS,gBAAgB;AACzB,SAAS,wBAAwB;AACjC,SAAS,+CAA+C;AACxD,SAAS,aAAa;AAEtB,MAAM,mBAAmB,MAAM;AAC9B,0CAAwC;AAExC,OAAK,oCAAoC,iBAAkB;AAC1D,UAAM;AAAA,MACL;AAAA,QACC,CAAC,cAAc,YAAY,SAAS,QAAQ,CAAC,GAAG,CAAC,CAAC;AAAA,MACnD;AAAA,MACA,OAAO,QAAQ,cAAc;AAC5B,cAAM,OAAO,UAAU,OAAO,CAAC;AAC/B,eAAO,GAAG,IAAI;AAEd,YAAI,QAAQ;AACZ,cAAM,KAAK,KAAK,wBAAwB,EAAE,OAAK,QAAQ,CAAC,CAAC,EAAE,MAAM,KAAK,gBAAc,WAAW,cAAc,QAAQ,CAAC;AAEtH,cAAM,gBAAgB,KAAK,qBAAqB,CAAC,GAAG,CAAC,EAAE,WAAW,SAAS,CAAC,CAAC;AAC7E,eAAO,GAAG,KAAK,mBAAmB,EAAE,KAAK,SAAO,IAAI,cAAc,QAAQ,CAAC;AAE3E,YAAI,UAAU;AACd,cAAM,KAAK,KAAK,wBAAwB,EAAE,OAAK,UAAU,CAAC,CAAC,EAAE,QAAQ,KAAK,gBAAc,WAAW,cAAc,QAAQ,CAAC;AAC1H,aAAK,qBAAqB,eAAe,CAAC,CAAC;AAE3C,eAAO,GAAG,CAAC,KAAK,mBAAmB,EAAE,KAAK,SAAO,IAAI,cAAc,QAAQ,CAAC;AAC5E,eAAO,GAAG,KAAK;AACf,eAAO,GAAG,OAAO;AAAA,MAClB;AAAA,IAAC;AAAA,EACH,CAAC;AAED,OAAK,sDAAsD,iBAAkB;AAC5E,UAAM;AAAA,MACL;AAAA,QACC,CAAC,cAAc,YAAY,SAAS,QAAQ,CAAC,GAAG,CAAC,CAAC;AAAA,MACnD;AAAA,MACA,OAAO,QAAQ,cAAc;AAC5B,cAAM,OAAO,UAAU,OAAO,CAAC;AAC/B,eAAO,GAAG,IAAI;AAEd,cAAM,gBAAgB,KAAK,qBAAqB,CAAC,GAAG,CAAC,EAAE,WAAW,UAAU,iBAAiB,SAAS,CAAC,CAAC;AACxG,aAAK,qBAAqB,CAAC,GAAG,CAAC,EAAE,WAAW,SAAS,CAAC,CAAC;AAEvD,YAAI,eAAe;AACnB,YAAI,qBAAqB;AACzB,cAAM,KAAK,KAAK,wBAAwB,EAAE,OAAK;AAC9C,yBAAe,CAAC,CAAC,EAAE,QAAQ,KAAK,gBAAc,WAAW,cAAc,QAAQ;AAC/E,+BAAqB,CAAC,CAAC,EAAE,QAAQ,KAAK,gBAAc,WAAW,oBAAoB,QAAQ;AAAA,QAC5F,CAAC;AAED,aAAK,qBAAqB,eAAe,CAAC,CAAC;AAE3C,eAAO,GAAG,CAAC,KAAK,mBAAmB,EAAE,KAAK,SAAO,IAAI,oBAAoB,QAAQ,CAAC;AAClF,eAAO,GAAG,KAAK,mBAAmB,EAAE,KAAK,SAAO,IAAI,cAAc,QAAQ,CAAC;AAC3E,eAAO,GAAG,CAAC,YAAY;AACvB,eAAO,GAAG,kBAAkB;AAAA,MAC7B;AAAA,IAAC;AAAA,EACH,CAAC;AACF,CAAC;",
  "names": []
}
