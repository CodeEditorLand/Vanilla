{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/test/browser/notebookFolding.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { CellKind } from '../../common/notebookCommon.js';\nimport { setupInstantiationService, withTestNotebook } from './testNotebookEditor.js';\nimport { IUndoRedoService } from '../../../../../platform/undoRedo/common/undoRedo.js';\nimport { FoldingModel, updateFoldingStateAtIndex } from '../../browser/viewModel/foldingModel.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { TestInstantiationService } from '../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\n\nsuite('Notebook Folding', () => {\n\tlet disposables: DisposableStore;\n\tlet instantiationService: TestInstantiationService;\n\n\tteardown(() => disposables.dispose());\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(() => {\n\t\tdisposables = new DisposableStore();\n\t\tinstantiationService = setupInstantiationService(disposables);\n\t\tinstantiationService.spy(IUndoRedoService, 'pushElement');\n\t});\n\n\n\ttest('Folding based on markdown cells', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['## header 2.1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 3', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['## header 2.2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['var e = 7;', 'markdown', CellKind.Markup, [], {}],\n\t\t\t],\n\t\t\t(editor, viewModel, ds) => {\n\t\t\t\tconst foldingController = ds.add(new FoldingModel());\n\t\t\t\tfoldingController.attachViewModel(viewModel);\n\n\t\t\t\tassert.strictEqual(foldingController.regions.findRange(1), 0);\n\t\t\t\tassert.strictEqual(foldingController.regions.findRange(2), 0);\n\t\t\t\tassert.strictEqual(foldingController.regions.findRange(3), 1);\n\t\t\t\tassert.strictEqual(foldingController.regions.findRange(4), 1);\n\t\t\t\tassert.strictEqual(foldingController.regions.findRange(5), 1);\n\t\t\t\tassert.strictEqual(foldingController.regions.findRange(6), 2);\n\t\t\t\tassert.strictEqual(foldingController.regions.findRange(7), 2);\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('Folding not based on code cells', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['# comment 1', 'python', CellKind.Code, [], {}],\n\t\t\t\t['body 2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 3\\n```\\n## comment 2\\n```', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 4', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['## header 2.1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['var e = 7;', 'python', CellKind.Code, [], {}],\n\t\t\t],\n\t\t\t(editor, viewModel, ds) => {\n\t\t\t\tconst foldingController = ds.add(new FoldingModel());\n\t\t\t\tfoldingController.attachViewModel(viewModel);\n\n\t\t\t\tassert.strictEqual(foldingController.regions.findRange(1), 0);\n\t\t\t\tassert.strictEqual(foldingController.regions.findRange(2), 0);\n\t\t\t\tassert.strictEqual(foldingController.regions.findRange(3), 0);\n\t\t\t\tassert.strictEqual(foldingController.regions.findRange(4), 0);\n\t\t\t\tassert.strictEqual(foldingController.regions.findRange(5), 0);\n\t\t\t\tassert.strictEqual(foldingController.regions.findRange(6), 0);\n\t\t\t\tassert.strictEqual(foldingController.regions.findRange(7), 1);\n\t\t\t\tassert.strictEqual(foldingController.regions.findRange(8), 1);\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('Top level header in a cell wins', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['## header 2.1\\n# header3', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 3', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['## header 2.2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['var e = 7;', 'markdown', CellKind.Markup, [], {}],\n\t\t\t],\n\t\t\t(editor, viewModel, ds) => {\n\t\t\t\tconst foldingController = ds.add(new FoldingModel());\n\t\t\t\tfoldingController.attachViewModel(viewModel);\n\n\t\t\t\tassert.strictEqual(foldingController.regions.findRange(1), 0);\n\t\t\t\tassert.strictEqual(foldingController.regions.findRange(2), 0);\n\t\t\t\tassert.strictEqual(foldingController.regions.getEndLineNumber(0), 2);\n\n\t\t\t\tassert.strictEqual(foldingController.regions.findRange(3), 1);\n\t\t\t\tassert.strictEqual(foldingController.regions.findRange(4), 1);\n\t\t\t\tassert.strictEqual(foldingController.regions.findRange(5), 1);\n\t\t\t\tassert.strictEqual(foldingController.regions.getEndLineNumber(1), 7);\n\n\t\t\t\tassert.strictEqual(foldingController.regions.findRange(6), 2);\n\t\t\t\tassert.strictEqual(foldingController.regions.findRange(7), 2);\n\t\t\t\tassert.strictEqual(foldingController.regions.getEndLineNumber(2), 7);\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('Folding', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['## header 2.1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 3', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['## header 2.2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['var e = 7;', 'markdown', CellKind.Markup, [], {}],\n\t\t\t],\n\t\t\t(editor, viewModel, ds) => {\n\t\t\t\tconst foldingModel = ds.add(new FoldingModel());\n\t\t\t\tfoldingModel.attachViewModel(viewModel);\n\t\t\t\tupdateFoldingStateAtIndex(foldingModel, 0, true);\n\t\t\t\tviewModel.updateFoldingRanges(foldingModel.regions);\n\t\t\t\tassert.deepStrictEqual(viewModel.getHiddenRanges(), [\n\t\t\t\t\t{ start: 1, end: 6 }\n\t\t\t\t]);\n\t\t\t}\n\t\t);\n\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['## header 2.1\\n', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 3', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['## header 2.2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['var e = 7;', 'markdown', CellKind.Markup, [], {}],\n\t\t\t],\n\t\t\t(editor, viewModel, ds) => {\n\t\t\t\tconst foldingModel = ds.add(new FoldingModel());\n\t\t\t\tfoldingModel.attachViewModel(viewModel);\n\t\t\t\tupdateFoldingStateAtIndex(foldingModel, 2, true);\n\t\t\t\tviewModel.updateFoldingRanges(foldingModel.regions);\n\n\t\t\t\tassert.deepStrictEqual(viewModel.getHiddenRanges(), [\n\t\t\t\t\t{ start: 3, end: 4 }\n\t\t\t\t]);\n\t\t\t}\n\t\t);\n\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['# header 2.1\\n', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 3', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['## header 2.2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['var e = 7;', 'markdown', CellKind.Markup, [], {}],\n\t\t\t],\n\t\t\t(editor, viewModel, ds) => {\n\t\t\t\tconst foldingModel = ds.add(new FoldingModel());\n\t\t\t\tfoldingModel.attachViewModel(viewModel);\n\t\t\t\tupdateFoldingStateAtIndex(foldingModel, 2, true);\n\t\t\t\tviewModel.updateFoldingRanges(foldingModel.regions);\n\n\t\t\t\tassert.deepStrictEqual(viewModel.getHiddenRanges(), [\n\t\t\t\t\t{ start: 3, end: 6 }\n\t\t\t\t]);\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('Nested Folding', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['# header 2.1\\n', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 3', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['## header 2.2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['var e = 7;', 'markdown', CellKind.Markup, [], {}],\n\t\t\t],\n\t\t\t(editor, viewModel, ds) => {\n\t\t\t\tconst foldingModel = ds.add(new FoldingModel());\n\t\t\t\tfoldingModel.attachViewModel(viewModel);\n\t\t\t\tupdateFoldingStateAtIndex(foldingModel, 0, true);\n\t\t\t\tviewModel.updateFoldingRanges(foldingModel.regions);\n\n\t\t\t\tassert.deepStrictEqual(viewModel.getHiddenRanges(), [\n\t\t\t\t\t{ start: 1, end: 1 }\n\t\t\t\t]);\n\n\t\t\t\tupdateFoldingStateAtIndex(foldingModel, 5, true);\n\t\t\t\tupdateFoldingStateAtIndex(foldingModel, 2, true);\n\t\t\t\tviewModel.updateFoldingRanges(foldingModel.regions);\n\n\t\t\t\tassert.deepStrictEqual(viewModel.getHiddenRanges(), [\n\t\t\t\t\t{ start: 1, end: 1 },\n\t\t\t\t\t{ start: 3, end: 6 }\n\t\t\t\t]);\n\n\t\t\t\tupdateFoldingStateAtIndex(foldingModel, 2, false);\n\t\t\t\tviewModel.updateFoldingRanges(foldingModel.regions);\n\t\t\t\tassert.deepStrictEqual(viewModel.getHiddenRanges(), [\n\t\t\t\t\t{ start: 1, end: 1 },\n\t\t\t\t\t{ start: 6, end: 6 }\n\t\t\t\t]);\n\n\t\t\t\t// viewModel.insertCell(7, new TestCell(viewModel.viewType, 7, ['var c = 8;'], 'markdown', CellKind.Code, []), true);\n\n\t\t\t\t// assert.deepStrictEqual(viewModel.getHiddenRanges(), [\n\t\t\t\t// \t{ start: 1, end: 1 },\n\t\t\t\t// \t{ start: 6, end: 7 }\n\t\t\t\t// ]);\n\n\t\t\t\t// viewModel.insertCell(1, new TestCell(viewModel.viewType, 8, ['var c = 9;'], 'markdown', CellKind.Code, []), true);\n\t\t\t\t// assert.deepStrictEqual(viewModel.getHiddenRanges(), [\n\t\t\t\t// \t// the first collapsed range is now expanded as we insert content into it.\n\t\t\t\t// \t// { start: 1,},\n\t\t\t\t// \t{ start: 7, end: 8 }\n\t\t\t\t// ]);\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('Folding Memento', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['# header 2.1\\n', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 3', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['## header 2.2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['var e = 7;', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['# header 2.1\\n', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 3', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['## header 2.2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['var e = 7;', 'markdown', CellKind.Markup, [], {}],\n\t\t\t],\n\t\t\t(editor, viewModel, ds) => {\n\t\t\t\tconst foldingModel = ds.add(new FoldingModel());\n\t\t\t\tfoldingModel.attachViewModel(viewModel);\n\t\t\t\tfoldingModel.applyMemento([{ start: 2, end: 6 }]);\n\t\t\t\tviewModel.updateFoldingRanges(foldingModel.regions);\n\n\t\t\t\t// Note that hidden ranges !== folding ranges\n\t\t\t\tassert.deepStrictEqual(viewModel.getHiddenRanges(), [\n\t\t\t\t\t{ start: 3, end: 6 }\n\t\t\t\t]);\n\t\t\t}\n\t\t);\n\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['# header 2.1\\n', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 3', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['## header 2.2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['var e = 7;', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['# header 2.1\\n', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 3', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['## header 2.2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['var e = 7;', 'markdown', CellKind.Markup, [], {}],\n\t\t\t],\n\t\t\t(editor, viewModel, ds) => {\n\t\t\t\tconst foldingModel = ds.add(new FoldingModel());\n\t\t\t\tfoldingModel.attachViewModel(viewModel);\n\t\t\t\tfoldingModel.applyMemento([\n\t\t\t\t\t{ start: 5, end: 6 },\n\t\t\t\t\t{ start: 10, end: 11 },\n\t\t\t\t]);\n\t\t\t\tviewModel.updateFoldingRanges(foldingModel.regions);\n\n\t\t\t\t// Note that hidden ranges !== folding ranges\n\t\t\t\tassert.deepStrictEqual(viewModel.getHiddenRanges(), [\n\t\t\t\t\t{ start: 6, end: 6 },\n\t\t\t\t\t{ start: 11, end: 11 }\n\t\t\t\t]);\n\t\t\t}\n\t\t);\n\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['# header 2.1\\n', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 3', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['## header 2.2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['var e = 7;', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['# header 2.1\\n', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 3', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['## header 2.2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['var e = 7;', 'markdown', CellKind.Markup, [], {}],\n\t\t\t],\n\t\t\t(editor, viewModel, ds) => {\n\t\t\t\tconst foldingModel = ds.add(new FoldingModel());\n\t\t\t\tfoldingModel.attachViewModel(viewModel);\n\t\t\t\tfoldingModel.applyMemento([\n\t\t\t\t\t{ start: 5, end: 6 },\n\t\t\t\t\t{ start: 7, end: 11 },\n\t\t\t\t]);\n\t\t\t\tviewModel.updateFoldingRanges(foldingModel.regions);\n\n\t\t\t\t// Note that hidden ranges !== folding ranges\n\t\t\t\tassert.deepStrictEqual(viewModel.getHiddenRanges(), [\n\t\t\t\t\t{ start: 6, end: 6 },\n\t\t\t\t\t{ start: 8, end: 11 }\n\t\t\t\t]);\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('View Index', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['# header 2.1\\n', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 3', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['## header 2.2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['var e = 7;', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['# header 2.1\\n', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 3', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['## header 2.2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['var e = 7;', 'markdown', CellKind.Markup, [], {}],\n\t\t\t],\n\t\t\t(editor, viewModel, ds) => {\n\t\t\t\tconst foldingModel = ds.add(new FoldingModel());\n\t\t\t\tfoldingModel.attachViewModel(viewModel);\n\t\t\t\tfoldingModel.applyMemento([{ start: 2, end: 6 }]);\n\t\t\t\tviewModel.updateFoldingRanges(foldingModel.regions);\n\n\t\t\t\t// Note that hidden ranges !== folding ranges\n\t\t\t\tassert.deepStrictEqual(viewModel.getHiddenRanges(), [\n\t\t\t\t\t{ start: 3, end: 6 }\n\t\t\t\t]);\n\n\t\t\t\tassert.strictEqual(viewModel.getNextVisibleCellIndex(1), 2);\n\t\t\t\tassert.strictEqual(viewModel.getNextVisibleCellIndex(2), 7);\n\t\t\t\tassert.strictEqual(viewModel.getNextVisibleCellIndex(3), 7);\n\t\t\t\tassert.strictEqual(viewModel.getNextVisibleCellIndex(4), 7);\n\t\t\t\tassert.strictEqual(viewModel.getNextVisibleCellIndex(5), 7);\n\t\t\t\tassert.strictEqual(viewModel.getNextVisibleCellIndex(6), 7);\n\t\t\t\tassert.strictEqual(viewModel.getNextVisibleCellIndex(7), 8);\n\t\t\t}\n\t\t);\n\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['# header 2.1\\n', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 3', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['## header 2.2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['var e = 7;', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['# header 2.1\\n', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['body 3', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['## header 2.2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['var e = 7;', 'markdown', CellKind.Markup, [], {}],\n\t\t\t],\n\t\t\t(editor, viewModel, ds) => {\n\t\t\t\tconst foldingModel = ds.add(new FoldingModel());\n\t\t\t\tfoldingModel.attachViewModel(viewModel);\n\t\t\t\tfoldingModel.applyMemento([\n\t\t\t\t\t{ start: 5, end: 6 },\n\t\t\t\t\t{ start: 10, end: 11 },\n\t\t\t\t]);\n\n\t\t\t\tviewModel.updateFoldingRanges(foldingModel.regions);\n\n\t\t\t\t// Note that hidden ranges !== folding ranges\n\t\t\t\tassert.deepStrictEqual(viewModel.getHiddenRanges(), [\n\t\t\t\t\t{ start: 6, end: 6 },\n\t\t\t\t\t{ start: 11, end: 11 }\n\t\t\t\t]);\n\n\t\t\t\t// folding ranges\n\t\t\t\t// [5, 6]\n\t\t\t\t// [10, 11]\n\t\t\t\tassert.strictEqual(viewModel.getNextVisibleCellIndex(4), 5);\n\t\t\t\tassert.strictEqual(viewModel.getNextVisibleCellIndex(5), 7);\n\t\t\t\tassert.strictEqual(viewModel.getNextVisibleCellIndex(6), 7);\n\n\t\t\t\tassert.strictEqual(viewModel.getNextVisibleCellIndex(9), 10);\n\t\t\t\tassert.strictEqual(viewModel.getNextVisibleCellIndex(10), 12);\n\t\t\t\tassert.strictEqual(viewModel.getNextVisibleCellIndex(11), 12);\n\t\t\t}\n\t\t);\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
