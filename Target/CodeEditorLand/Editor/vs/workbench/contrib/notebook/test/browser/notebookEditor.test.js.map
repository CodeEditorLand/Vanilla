{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/notebook/test/browser/notebookEditor.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { mock } from '../../../../../base/test/common/mock.js';\nimport { TestInstantiationService } from '../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { FoldingModel, updateFoldingStateAtIndex } from '../../browser/viewModel/foldingModel.js';\nimport { expandCellRangesWithHiddenCells, INotebookEditor } from '../../browser/notebookBrowser.js';\nimport { CellKind } from '../../common/notebookCommon.js';\nimport { createNotebookCellList, setupInstantiationService, withTestNotebook } from './testNotebookEditor.js';\nimport { ListViewInfoAccessor } from '../../browser/view/notebookCellList.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\n\nsuite('ListViewInfoAccessor', () => {\n\tlet disposables: DisposableStore;\n\tlet instantiationService: TestInstantiationService;\n\n\tteardown(() => {\n\t\tdisposables.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(() => {\n\t\tdisposables = new DisposableStore();\n\t\tinstantiationService = setupInstantiationService(disposables);\n\t});\n\n\ttest('basics', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header a', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['var b = 1;', 'javascript', CellKind.Code, [], {}],\n\t\t\t\t['# header b', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['var b = 2;', 'javascript', CellKind.Code, [], {}],\n\t\t\t\t['var c = 3;', 'javascript', CellKind.Code, [], {}]\n\t\t\t],\n\t\t\t(editor, viewModel, ds) => {\n\t\t\t\tconst foldingModel = ds.add(new FoldingModel());\n\t\t\t\tfoldingModel.attachViewModel(viewModel);\n\n\t\t\t\tconst cellList = ds.add(createNotebookCellList(instantiationService, ds));\n\t\t\t\tcellList.attachViewModel(viewModel);\n\t\t\t\tconst listViewInfoAccessor = ds.add(new ListViewInfoAccessor(cellList));\n\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(0)!), 0);\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(1)!), 1);\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(2)!), 2);\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(3)!), 3);\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(4)!), 4);\n\t\t\t\tassert.deepStrictEqual(listViewInfoAccessor.getCellRangeFromViewRange(0, 1), { start: 0, end: 1 });\n\t\t\t\tassert.deepStrictEqual(listViewInfoAccessor.getCellRangeFromViewRange(1, 2), { start: 1, end: 2 });\n\n\t\t\t\tupdateFoldingStateAtIndex(foldingModel, 0, true);\n\t\t\t\tupdateFoldingStateAtIndex(foldingModel, 2, true);\n\t\t\t\tviewModel.updateFoldingRanges(foldingModel.regions);\n\t\t\t\tcellList.setHiddenAreas(viewModel.getHiddenRanges(), true);\n\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(0)!), 0);\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(1)!), -1);\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(2)!), 1);\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(3)!), -1);\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(4)!), -1);\n\n\t\t\t\tassert.deepStrictEqual(listViewInfoAccessor.getCellRangeFromViewRange(0, 1), { start: 0, end: 2 });\n\t\t\t\tassert.deepStrictEqual(listViewInfoAccessor.getCellRangeFromViewRange(1, 2), { start: 2, end: 5 });\n\t\t\t\tassert.deepStrictEqual(listViewInfoAccessor.getCellsFromViewRange(0, 1), viewModel.getCellsInRange({ start: 0, end: 2 }));\n\t\t\t\tassert.deepStrictEqual(listViewInfoAccessor.getCellsFromViewRange(1, 2), viewModel.getCellsInRange({ start: 2, end: 5 }));\n\n\t\t\t\tconst notebookEditor = new class extends mock<INotebookEditor>() {\n\t\t\t\t\toverride getViewIndexByModelIndex(index: number) { return listViewInfoAccessor.getViewIndex(viewModel.viewCells[index]!); }\n\t\t\t\t\toverride getCellRangeFromViewRange(startIndex: number, endIndex: number) { return listViewInfoAccessor.getCellRangeFromViewRange(startIndex, endIndex); }\n\t\t\t\t\toverride cellAt(index: number) { return viewModel.cellAt(index); }\n\t\t\t\t};\n\n\t\t\t\tassert.deepStrictEqual(expandCellRangesWithHiddenCells(notebookEditor, [{ start: 0, end: 1 }]), [{ start: 0, end: 2 }]);\n\t\t\t\tassert.deepStrictEqual(expandCellRangesWithHiddenCells(notebookEditor, [{ start: 2, end: 3 }]), [{ start: 2, end: 5 }]);\n\t\t\t\tassert.deepStrictEqual(expandCellRangesWithHiddenCells(notebookEditor, [{ start: 0, end: 1 }, { start: 2, end: 3 }]), [{ start: 0, end: 5 }]);\n\t\t\t});\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
