{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/userDataSync/electron-sandbox/userDataSync.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { ProxyChannel } from \"../../../../base/parts/ipc/common/ipc.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { IEnvironmentService } from \"../../../../platform/environment/common/environment.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ISharedProcessService } from \"../../../../platform/ipc/electron-sandbox/services.js\";\nimport { INativeHostService } from \"../../../../platform/native/common/native.js\";\nimport {\n\tINotificationService,\n\tSeverity,\n} from \"../../../../platform/notification/common/notification.js\";\nimport {\n\tIUserDataSyncUtilService,\n\tSyncStatus,\n} from \"../../../../platform/userDataSync/common/userDataSync.js\";\nimport {\n\ttype IWorkbenchContribution,\n\tWorkbenchPhase,\n\tregisterWorkbenchContribution2,\n} from \"../../../common/contributions.js\";\nimport {\n\tCONTEXT_SYNC_STATE,\n\tDOWNLOAD_ACTIVITY_ACTION_DESCRIPTOR,\n\tIUserDataSyncWorkbenchService,\n\tSYNC_TITLE,\n} from \"../../../services/userDataSync/common/userDataSync.js\";\n\nclass UserDataSyncServicesContribution\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tstatic readonly ID = \"workbench.contrib.userDataSyncServices\";\n\n\tconstructor(\n\t\t@IUserDataSyncUtilService userDataSyncUtilService: IUserDataSyncUtilService,\n\t\t@ISharedProcessService sharedProcessService: ISharedProcessService,\n\t) {\n\t\tsuper();\n\t\tsharedProcessService.registerChannel(\n\t\t\t\"userDataSyncUtil\",\n\t\t\tProxyChannel.fromService(userDataSyncUtilService, this._store),\n\t\t);\n\t}\n}\n\nregisterWorkbenchContribution2(\n\tUserDataSyncServicesContribution.ID,\n\tUserDataSyncServicesContribution,\n\tWorkbenchPhase.BlockStartup,\n);\n\nregisterAction2(\n\tclass OpenSyncBackupsFolder extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.userData.actions.openSyncBackupsFolder\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"Open Backup folder\",\n\t\t\t\t\t\"Open Local Backups Folder\",\n\t\t\t\t),\n\t\t\t\tcategory: SYNC_TITLE,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\twhen: CONTEXT_SYNC_STATE.notEqualsTo(\n\t\t\t\t\t\tSyncStatus.Uninitialized,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst syncHome = accessor.get(IEnvironmentService).userDataSyncHome;\n\t\t\tconst nativeHostService = accessor.get(INativeHostService);\n\t\t\tconst fileService = accessor.get(IFileService);\n\t\t\tconst notificationService = accessor.get(INotificationService);\n\t\t\tif (await fileService.exists(syncHome)) {\n\t\t\t\tconst folderStat = await fileService.resolve(syncHome);\n\t\t\t\tconst item =\n\t\t\t\t\tfolderStat.children && folderStat.children[0]\n\t\t\t\t\t\t? folderStat.children[0].resource\n\t\t\t\t\t\t: syncHome;\n\t\t\t\treturn nativeHostService.showItemInFolder(\n\t\t\t\t\titem.with({ scheme: Schemas.file }).fsPath,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tnotificationService.info(\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"no backups\",\n\t\t\t\t\t\t\"Local backups folder does not exist\",\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass DownloadSyncActivityAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper(DOWNLOAD_ACTIVITY_ACTION_DESCRIPTOR);\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst userDataSyncWorkbenchService = accessor.get(\n\t\t\t\tIUserDataSyncWorkbenchService,\n\t\t\t);\n\t\t\tconst notificationService = accessor.get(INotificationService);\n\t\t\tconst hostService = accessor.get(INativeHostService);\n\t\t\tconst folder =\n\t\t\t\tawait userDataSyncWorkbenchService.downloadSyncActivity();\n\t\t\tif (folder) {\n\t\t\t\tnotificationService.prompt(\n\t\t\t\t\tSeverity.Info,\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"download sync activity complete\",\n\t\t\t\t\t\t\"Successfully downloaded Settings Sync activity.\",\n\t\t\t\t\t),\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: localize(\"open\", \"Open Folder\"),\n\t\t\t\t\t\t\trun: () =>\n\t\t\t\t\t\t\t\thostService.showItemInFolder(folder.fsPath),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,kBAAkB;AAC3B,SAAS,eAAe;AACxB,SAAS,oBAAoB;AAC7B,SAAS,UAAU,iBAAiB;AACpC;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,2BAA2B;AACpC,SAAS,oBAAoB;AAE7B,SAAS,6BAA6B;AACtC,SAAS,0BAA0B;AACnC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EAEC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAEP,IAAM,mCAAN,cACS,WAET;AAAA,EA1CA,OA0CA;AAAA;AAAA;AAAA,EACC,OAAgB,KAAK;AAAA,EAErB,YAC2B,yBACH,sBACtB;AACD,UAAM;AACN,yBAAqB;AAAA,MACpB;AAAA,MACA,aAAa,YAAY,yBAAyB,KAAK,MAAM;AAAA,IAC9D;AAAA,EACD;AACD;AAhBM,mCAAN;AAAA,EAOG;AAAA,EACA;AAAA,GARG;AAkBN;AAAA,EACC,iCAAiC;AAAA,EACjC;AAAA,EACA,eAAe;AAChB;AAEA;AAAA,EACC,MAAM,8BAA8B,QAAQ;AAAA,IAhE7C,OAgE6C;AAAA;AAAA;AAAA,IAC3C,cAAc;AACb,YAAM;AAAA,QACL,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,UAAU;AAAA,QACV,MAAM;AAAA,UACL,IAAI,OAAO;AAAA,UACX,MAAM,mBAAmB;AAAA,YACxB,WAAW;AAAA,UACZ;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IACA,MAAM,IAAI,UAA2C;AACpD,YAAM,WAAW,SAAS,IAAI,mBAAmB,EAAE;AACnD,YAAM,oBAAoB,SAAS,IAAI,kBAAkB;AACzD,YAAM,cAAc,SAAS,IAAI,YAAY;AAC7C,YAAM,sBAAsB,SAAS,IAAI,oBAAoB;AAC7D,UAAI,MAAM,YAAY,OAAO,QAAQ,GAAG;AACvC,cAAM,aAAa,MAAM,YAAY,QAAQ,QAAQ;AACrD,cAAM,OACL,WAAW,YAAY,WAAW,SAAS,CAAC,IACzC,WAAW,SAAS,CAAC,EAAE,WACvB;AACJ,eAAO,kBAAkB;AAAA,UACxB,KAAK,KAAK,EAAE,QAAQ,QAAQ,KAAK,CAAC,EAAE;AAAA,QACrC;AAAA,MACD,OAAO;AACN,4BAAoB;AAAA,UACnB;AAAA,YACC;AAAA,YACA;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,mCAAmC,QAAQ;AAAA,IA5GlD,OA4GkD;AAAA;AAAA;AAAA,IAChD,cAAc;AACb,YAAM,mCAAmC;AAAA,IAC1C;AAAA,IAEA,MAAM,IAAI,UAA2C;AACpD,YAAM,+BAA+B,SAAS;AAAA,QAC7C;AAAA,MACD;AACA,YAAM,sBAAsB,SAAS,IAAI,oBAAoB;AAC7D,YAAM,cAAc,SAAS,IAAI,kBAAkB;AACnD,YAAM,SACL,MAAM,6BAA6B,qBAAqB;AACzD,UAAI,QAAQ;AACX,4BAAoB;AAAA,UACnB,SAAS;AAAA,UACT;AAAA,YACC;AAAA,YACA;AAAA,UACD;AAAA,UACA;AAAA,YACC;AAAA,cACC,OAAO,SAAS,QAAQ,aAAa;AAAA,cACrC,KAAK,6BACJ,YAAY,iBAAiB,OAAO,MAAM,GADtC;AAAA,YAEN;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;",
  "names": []
}
