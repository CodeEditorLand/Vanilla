{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/userDataSync/electron-sandbox/userDataSync.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWorkbenchContribution, WorkbenchPhase, registerWorkbenchContribution2 } from '../../../common/contributions.js';\nimport { IUserDataSyncUtilService, SyncStatus } from '../../../../platform/userDataSync/common/userDataSync.js';\nimport { ISharedProcessService } from '../../../../platform/ipc/electron-sandbox/services.js';\nimport { registerAction2, Action2, MenuId } from '../../../../platform/actions/common/actions.js';\nimport { localize, localize2 } from '../../../../nls.js';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IEnvironmentService } from '../../../../platform/environment/common/environment.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { INativeHostService } from '../../../../platform/native/common/native.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport { CONTEXT_SYNC_STATE, DOWNLOAD_ACTIVITY_ACTION_DESCRIPTOR, IUserDataSyncWorkbenchService, SYNC_TITLE } from '../../../services/userDataSync/common/userDataSync.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { ProxyChannel } from '../../../../base/parts/ipc/common/ipc.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\n\nclass UserDataSyncServicesContribution extends Disposable implements IWorkbenchContribution {\n\n\tstatic readonly ID = 'workbench.contrib.userDataSyncServices';\n\n\tconstructor(\n\t\t@IUserDataSyncUtilService userDataSyncUtilService: IUserDataSyncUtilService,\n\t\t@ISharedProcessService sharedProcessService: ISharedProcessService,\n\t) {\n\t\tsuper();\n\t\tsharedProcessService.registerChannel('userDataSyncUtil', ProxyChannel.fromService(userDataSyncUtilService, this._store));\n\t}\n}\n\nregisterWorkbenchContribution2(UserDataSyncServicesContribution.ID, UserDataSyncServicesContribution, WorkbenchPhase.BlockStartup);\n\nregisterAction2(class OpenSyncBackupsFolder extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.userData.actions.openSyncBackupsFolder',\n\t\t\ttitle: localize2('Open Backup folder', \"Open Local Backups Folder\"),\n\t\t\tcategory: SYNC_TITLE,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: CONTEXT_SYNC_STATE.notEqualsTo(SyncStatus.Uninitialized),\n\t\t\t}\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst syncHome = accessor.get(IEnvironmentService).userDataSyncHome;\n\t\tconst nativeHostService = accessor.get(INativeHostService);\n\t\tconst fileService = accessor.get(IFileService);\n\t\tconst notificationService = accessor.get(INotificationService);\n\t\tif (await fileService.exists(syncHome)) {\n\t\t\tconst folderStat = await fileService.resolve(syncHome);\n\t\t\tconst item = folderStat.children && folderStat.children[0] ? folderStat.children[0].resource : syncHome;\n\t\t\treturn nativeHostService.showItemInFolder(item.with({ scheme: Schemas.file }).fsPath);\n\t\t} else {\n\t\t\tnotificationService.info(localize('no backups', \"Local backups folder does not exist\"));\n\t\t}\n\t}\n});\n\nregisterAction2(class DownloadSyncActivityAction extends Action2 {\n\tconstructor() {\n\t\tsuper(DOWNLOAD_ACTIVITY_ACTION_DESCRIPTOR);\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst userDataSyncWorkbenchService = accessor.get(IUserDataSyncWorkbenchService);\n\t\tconst notificationService = accessor.get(INotificationService);\n\t\tconst hostService = accessor.get(INativeHostService);\n\t\tconst folder = await userDataSyncWorkbenchService.downloadSyncActivity();\n\t\tif (folder) {\n\t\t\tnotificationService.prompt(Severity.Info, localize('download sync activity complete', \"Successfully downloaded Settings Sync activity.\"),\n\t\t\t\t[{\n\t\t\t\t\tlabel: localize('open', \"Open Folder\"),\n\t\t\t\t\trun: () => hostService.showItemInFolder(folder.fsPath)\n\t\t\t\t}]);\n\t\t}\n\t}\n});\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,wBAAwB,gBAAgB,sCAAsC;AACvF,SAAS,0BAA0B,kBAAkB;AACrD,SAAS,6BAA6B;AACtC,SAAS,iBAAiB,SAAS,cAAc;AACjD,SAAS,UAAU,iBAAiB;AACpC,SAAS,wBAAwB;AACjC,SAAS,2BAA2B;AACpC,SAAS,oBAAoB;AAC7B,SAAS,0BAA0B;AACnC,SAAS,sBAAsB,gBAAgB;AAC/C,SAAS,oBAAoB,qCAAqC,+BAA+B,kBAAkB;AACnH,SAAS,eAAe;AACxB,SAAS,oBAAoB;AAC7B,SAAS,kBAAkB;AAE3B,IAAM,mCAAN,cAA+C,WAA6C;AAAA,EApB5F,OAoB4F;AAAA;AAAA;AAAA,EAE3F,OAAgB,KAAK;AAAA,EAErB,YAC2B,yBACH,sBACtB;AACD,UAAM;AACN,yBAAqB,gBAAgB,oBAAoB,aAAa,YAAY,yBAAyB,KAAK,MAAM,CAAC;AAAA,EACxH;AACD;AAXM,mCAAN;AAAA,EAKG;AAAA,EACA;AAAA,GANG;AAaN,+BAA+B,iCAAiC,IAAI,kCAAkC,eAAe,YAAY;AAEjI,gBAAgB,MAAM,8BAA8B,QAAQ;AAAA,EAnC5D,OAmC4D;AAAA;AAAA;AAAA,EAC3D,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,UAAU,sBAAsB,2BAA2B;AAAA,MAClE,UAAU;AAAA,MACV,MAAM;AAAA,QACL,IAAI,OAAO;AAAA,QACX,MAAM,mBAAmB,YAAY,WAAW,aAAa;AAAA,MAC9D;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EACA,MAAM,IAAI,UAA2C;AACpD,UAAM,WAAW,SAAS,IAAI,mBAAmB,EAAE;AACnD,UAAM,oBAAoB,SAAS,IAAI,kBAAkB;AACzD,UAAM,cAAc,SAAS,IAAI,YAAY;AAC7C,UAAM,sBAAsB,SAAS,IAAI,oBAAoB;AAC7D,QAAI,MAAM,YAAY,OAAO,QAAQ,GAAG;AACvC,YAAM,aAAa,MAAM,YAAY,QAAQ,QAAQ;AACrD,YAAM,OAAO,WAAW,YAAY,WAAW,SAAS,CAAC,IAAI,WAAW,SAAS,CAAC,EAAE,WAAW;AAC/F,aAAO,kBAAkB,iBAAiB,KAAK,KAAK,EAAE,QAAQ,QAAQ,KAAK,CAAC,EAAE,MAAM;AAAA,IACrF,OAAO;AACN,0BAAoB,KAAK,SAAS,cAAc,qCAAqC,CAAC;AAAA,IACvF;AAAA,EACD;AACD,CAAC;AAED,gBAAgB,MAAM,mCAAmC,QAAQ;AAAA,EA9DjE,OA8DiE;AAAA;AAAA;AAAA,EAChE,cAAc;AACb,UAAM,mCAAmC;AAAA,EAC1C;AAAA,EAEA,MAAM,IAAI,UAA2C;AACpD,UAAM,+BAA+B,SAAS,IAAI,6BAA6B;AAC/E,UAAM,sBAAsB,SAAS,IAAI,oBAAoB;AAC7D,UAAM,cAAc,SAAS,IAAI,kBAAkB;AACnD,UAAM,SAAS,MAAM,6BAA6B,qBAAqB;AACvE,QAAI,QAAQ;AACX,0BAAoB;AAAA,QAAO,SAAS;AAAA,QAAM,SAAS,mCAAmC,iDAAiD;AAAA,QACtI,CAAC;AAAA,UACA,OAAO,SAAS,QAAQ,aAAa;AAAA,UACrC,KAAK,6BAAM,YAAY,iBAAiB,OAAO,MAAM,GAAhD;AAAA,QACN,CAAC;AAAA,MAAC;AAAA,IACJ;AAAA,EACD;AACD,CAAC;",
  "names": []
}
