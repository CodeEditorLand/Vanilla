{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/userDataSync/browser/userDataSync.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Action } from '../../../../base/common/actions.js';\nimport { getErrorMessage, isCancellationError } from '../../../../base/common/errors.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, DisposableStore, MutableDisposable, toDisposable, IDisposable } from '../../../../base/common/lifecycle.js';\nimport { isEqual } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ServicesAccessor } from '../../../../editor/browser/editorExtensions.js';\nimport type { ITextModel } from '../../../../editor/common/model.js';\nimport { IModelService } from '../../../../editor/common/services/model.js';\nimport { ILanguageService } from '../../../../editor/common/languages/language.js';\nimport { ITextModelContentProvider, ITextModelService } from '../../../../editor/common/services/resolverService.js';\nimport { localize, localize2 } from '../../../../nls.js';\nimport { MenuId, MenuRegistry, registerAction2, Action2 } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, ContextKeyTrueExpr, IContextKey, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport { QuickPickItem, IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport {\n\tIUserDataAutoSyncService, IUserDataSyncService, registerConfiguration,\n\tSyncResource, SyncStatus, UserDataSyncError, UserDataSyncErrorCode, USER_DATA_SYNC_SCHEME, IUserDataSyncEnablementService,\n\tIResourcePreview, IUserDataSyncStoreManagementService, UserDataSyncStoreType, IUserDataSyncStore, IUserDataSyncResourceConflicts, IUserDataSyncResource, IUserDataSyncResourceError, USER_DATA_SYNC_LOG_ID\n} from '../../../../platform/userDataSync/common/userDataSync.js';\nimport { IWorkbenchContribution } from '../../../common/contributions.js';\nimport { EditorResourceAccessor, SideBySideEditor } from '../../../common/editor.js';\nimport { IOutputService } from '../../../services/output/common/output.js';\nimport { IActivityService, IBadge, NumberBadge, ProgressBadge } from '../../../services/activity/common/activity.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IPreferencesService } from '../../../services/preferences/common/preferences.js';\nimport { fromNow } from '../../../../base/common/date.js';\nimport { IProductService } from '../../../../platform/product/common/productService.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { IAuthenticationService } from '../../../services/authentication/common/authentication.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { SyncDescriptor } from '../../../../platform/instantiation/common/descriptors.js';\nimport { ViewContainerLocation, IViewContainersRegistry, Extensions, ViewContainer } from '../../../common/views.js';\nimport { UserDataSyncDataViews } from './userDataSyncViews.js';\nimport { IUserDataSyncWorkbenchService, getSyncAreaLabel, AccountStatus, CONTEXT_SYNC_STATE, CONTEXT_SYNC_ENABLEMENT, CONTEXT_ACCOUNT_STATE, CONFIGURE_SYNC_COMMAND_ID, SHOW_SYNC_LOG_COMMAND_ID, SYNC_VIEW_CONTAINER_ID, SYNC_TITLE, SYNC_VIEW_ICON, CONTEXT_HAS_CONFLICTS, DOWNLOAD_ACTIVITY_ACTION_DESCRIPTOR } from '../../../services/userDataSync/common/userDataSync.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { ViewPaneContainer } from '../../../browser/parts/views/viewPaneContainer.js';\nimport { Categories } from '../../../../platform/action/common/actionCommonCategories.js';\nimport { IHostService } from '../../../services/host/browser/host.js';\nimport { IUserDataProfilesService } from '../../../../platform/userDataProfile/common/userDataProfile.js';\nimport { ITextFileService } from '../../../services/textfile/common/textfiles.js';\nimport { ctxIsMergeResultEditor, ctxMergeBaseUri } from '../../mergeEditor/common/mergeEditor.js';\nimport { IWorkbenchIssueService } from '../../issue/common/issue.js';\nimport { IUserDataProfileService } from '../../../services/userDataProfile/common/userDataProfile.js';\nimport { ILocalizedString } from '../../../../platform/action/common/action.js';\nimport { isWeb } from '../../../../base/common/platform.js';\n\ntype ConfigureSyncQuickPickItem = { id: SyncResource; label: string; description?: string };\n\ntype SyncConflictsClassification = {\n\towner: 'sandy081';\n\tcomment: 'Response information when conflict happens during settings sync';\n\tsource: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'settings sync resource. eg., settings, keybindings...' };\n\taction?: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'action taken while resolving conflicts. Eg: acceptLocal, acceptRemote' };\n};\n\nconst turnOffSyncCommand = { id: 'workbench.userDataSync.actions.turnOff', title: localize2('stop sync', 'Turn Off') };\nconst configureSyncCommand = { id: CONFIGURE_SYNC_COMMAND_ID, title: localize2('configure sync', 'Configure...') };\nconst showConflictsCommandId = 'workbench.userDataSync.actions.showConflicts';\nconst syncNowCommand = {\n\tid: 'workbench.userDataSync.actions.syncNow',\n\ttitle: localize2('sync now', 'Sync Now'),\n\tdescription(userDataSyncService: IUserDataSyncService): string | undefined {\n\t\tif (userDataSyncService.status === SyncStatus.Syncing) {\n\t\t\treturn localize('syncing', \"syncing\");\n\t\t}\n\t\tif (userDataSyncService.lastSyncTime) {\n\t\t\treturn localize('synced with time', \"synced {0}\", fromNow(userDataSyncService.lastSyncTime, true));\n\t\t}\n\t\treturn undefined;\n\t}\n};\nconst showSyncSettingsCommand = { id: 'workbench.userDataSync.actions.settings', title: localize2('sync settings', 'Show Settings'), };\nconst showSyncedDataCommand = { id: 'workbench.userDataSync.actions.showSyncedData', title: localize2('show synced data', 'Show Synced Data'), };\n\nconst CONTEXT_TURNING_ON_STATE = new RawContextKey<false>('userDataSyncTurningOn', false);\n\nexport class UserDataSyncWorkbenchContribution extends Disposable implements IWorkbenchContribution {\n\n\tprivate readonly turningOnSyncContext: IContextKey<boolean>;\n\n\tprivate readonly globalActivityBadgeDisposable = this._register(new MutableDisposable());\n\tprivate readonly accountBadgeDisposable = this._register(new MutableDisposable());\n\n\tconstructor(\n\t\t@IUserDataSyncEnablementService private readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@IUserDataSyncService private readonly userDataSyncService: IUserDataSyncService,\n\t\t@IUserDataSyncWorkbenchService private readonly userDataSyncWorkbenchService: IUserDataSyncWorkbenchService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IActivityService private readonly activityService: IActivityService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IOutputService private readonly outputService: IOutputService,\n\t\t@IUserDataAutoSyncService userDataAutoSyncService: IUserDataAutoSyncService,\n\t\t@ITextModelService textModelResolverService: ITextModelService,\n\t\t@IPreferencesService private readonly preferencesService: IPreferencesService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@IAuthenticationService private readonly authenticationService: IAuthenticationService,\n\t\t@IUserDataSyncStoreManagementService private readonly userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IWorkbenchIssueService private readonly workbenchIssueService: IWorkbenchIssueService\n\t) {\n\t\tsuper();\n\n\t\tthis.turningOnSyncContext = CONTEXT_TURNING_ON_STATE.bindTo(contextKeyService);\n\n\t\tif (userDataSyncWorkbenchService.enabled) {\n\t\t\tregisterConfiguration();\n\n\t\t\tthis.updateAccountBadge();\n\t\t\tthis.updateGlobalActivityBadge();\n\t\t\tthis.onDidChangeConflicts(this.userDataSyncService.conflicts);\n\n\t\t\tthis._register(Event.any(\n\t\t\t\tEvent.debounce(userDataSyncService.onDidChangeStatus, () => undefined, 500),\n\t\t\t\tthis.userDataSyncEnablementService.onDidChangeEnablement,\n\t\t\t\tthis.userDataSyncWorkbenchService.onDidChangeAccountStatus\n\t\t\t)(() => {\n\t\t\t\tthis.updateAccountBadge();\n\t\t\t\tthis.updateGlobalActivityBadge();\n\t\t\t}));\n\t\t\tthis._register(userDataSyncService.onDidChangeConflicts(() => this.onDidChangeConflicts(this.userDataSyncService.conflicts)));\n\t\t\tthis._register(userDataSyncEnablementService.onDidChangeEnablement(() => this.onDidChangeConflicts(this.userDataSyncService.conflicts)));\n\t\t\tthis._register(userDataSyncService.onSyncErrors(errors => this.onSynchronizerErrors(errors)));\n\t\t\tthis._register(userDataAutoSyncService.onError(error => this.onAutoSyncError(error)));\n\n\t\t\tthis.registerActions();\n\t\t\tthis.registerViews();\n\n\t\t\ttextModelResolverService.registerTextModelContentProvider(USER_DATA_SYNC_SCHEME, instantiationService.createInstance(UserDataRemoteContentProvider));\n\n\t\t\tthis._register(Event.any(userDataSyncService.onDidChangeStatus, userDataSyncEnablementService.onDidChangeEnablement)\n\t\t\t\t(() => this.turningOnSync = !userDataSyncEnablementService.isEnabled() && userDataSyncService.status !== SyncStatus.Idle));\n\t\t}\n\t}\n\n\tprivate get turningOnSync(): boolean {\n\t\treturn !!this.turningOnSyncContext.get();\n\t}\n\n\tprivate set turningOnSync(turningOn: boolean) {\n\t\tthis.turningOnSyncContext.set(turningOn);\n\t\tthis.updateGlobalActivityBadge();\n\t}\n\n\tprivate toKey({ syncResource: resource, profile }: IUserDataSyncResource): string {\n\t\treturn `${profile.id}:${resource}`;\n\t}\n\n\tprivate readonly conflictsDisposables = new Map<string, IDisposable>();\n\tprivate onDidChangeConflicts(conflicts: IUserDataSyncResourceConflicts[]) {\n\t\tthis.updateGlobalActivityBadge();\n\t\tthis.registerShowConflictsAction();\n\t\tif (!this.userDataSyncEnablementService.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\t\tif (conflicts.length) {\n\t\t\t// Clear and dispose conflicts those were cleared\n\t\t\tfor (const [key, disposable] of this.conflictsDisposables.entries()) {\n\t\t\t\tif (!conflicts.some(conflict => this.toKey(conflict) === key)) {\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\tthis.conflictsDisposables.delete(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const conflict of this.userDataSyncService.conflicts) {\n\t\t\t\tconst key = this.toKey(conflict);\n\t\t\t\t// Show conflicts notification if not shown before\n\t\t\t\tif (!this.conflictsDisposables.has(key)) {\n\t\t\t\t\tconst conflictsArea = getSyncAreaLabel(conflict.syncResource);\n\t\t\t\t\tconst handle = this.notificationService.prompt(Severity.Warning, localize('conflicts detected', \"Unable to sync due to conflicts in {0}. Please resolve them to continue.\", conflictsArea.toLowerCase()),\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: localize('replace remote', \"Replace Remote\"),\n\t\t\t\t\t\t\t\trun: () => {\n\t\t\t\t\t\t\t\t\tthis.telemetryService.publicLog2<{ source: string; action: string }, SyncConflictsClassification>('sync/handleConflicts', { source: conflict.syncResource, action: 'acceptLocal' });\n\t\t\t\t\t\t\t\t\tthis.acceptLocal(conflict, conflict.conflicts[0]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: localize('replace local', \"Replace Local\"),\n\t\t\t\t\t\t\t\trun: () => {\n\t\t\t\t\t\t\t\t\tthis.telemetryService.publicLog2<{ source: string; action: string }, SyncConflictsClassification>('sync/handleConflicts', { source: conflict.syncResource, action: 'acceptRemote' });\n\t\t\t\t\t\t\t\t\tthis.acceptRemote(conflict, conflict.conflicts[0]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: localize('show conflicts', \"Show Conflicts\"),\n\t\t\t\t\t\t\t\trun: () => {\n\t\t\t\t\t\t\t\t\tthis.telemetryService.publicLog2<{ source: string; action?: string }, SyncConflictsClassification>('sync/showConflicts', { source: conflict.syncResource });\n\t\t\t\t\t\t\t\t\tthis.userDataSyncWorkbenchService.showConflicts(conflict.conflicts[0]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsticky: true\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tthis.conflictsDisposables.set(key, toDisposable(() => {\n\t\t\t\t\t\t// close the conflicts warning notification\n\t\t\t\t\t\thandle.close();\n\t\t\t\t\t\tthis.conflictsDisposables.delete(key);\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.conflictsDisposables.forEach(disposable => disposable.dispose());\n\t\t\tthis.conflictsDisposables.clear();\n\t\t}\n\t}\n\n\tprivate async acceptRemote(syncResource: IUserDataSyncResource, conflict: IResourcePreview) {\n\t\ttry {\n\t\t\tawait this.userDataSyncService.accept(syncResource, conflict.remoteResource, undefined, this.userDataSyncEnablementService.isEnabled());\n\t\t} catch (e) {\n\t\t\tthis.notificationService.error(localize('accept failed', \"Error while accepting changes. Please check [logs]({0}) for more details.\", `command:${SHOW_SYNC_LOG_COMMAND_ID}`));\n\t\t}\n\t}\n\n\tprivate async acceptLocal(syncResource: IUserDataSyncResource, conflict: IResourcePreview): Promise<void> {\n\t\ttry {\n\t\t\tawait this.userDataSyncService.accept(syncResource, conflict.localResource, undefined, this.userDataSyncEnablementService.isEnabled());\n\t\t} catch (e) {\n\t\t\tthis.notificationService.error(localize('accept failed', \"Error while accepting changes. Please check [logs]({0}) for more details.\", `command:${SHOW_SYNC_LOG_COMMAND_ID}`));\n\t\t}\n\t}\n\n\tprivate onAutoSyncError(error: UserDataSyncError): void {\n\t\tswitch (error.code) {\n\t\t\tcase UserDataSyncErrorCode.SessionExpired:\n\t\t\t\tthis.notificationService.notify({\n\t\t\t\t\tseverity: Severity.Info,\n\t\t\t\t\tmessage: localize('session expired', \"Settings sync was turned off because current session is expired, please sign in again to turn on sync.\"),\n\t\t\t\t\tactions: {\n\t\t\t\t\t\tprimary: [new Action('turn on sync', localize('turn on sync', \"Turn on Settings Sync...\"), undefined, true, () => this.turnOn())]\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase UserDataSyncErrorCode.TurnedOff:\n\t\t\t\tthis.notificationService.notify({\n\t\t\t\t\tseverity: Severity.Info,\n\t\t\t\t\tmessage: localize('turned off', \"Settings sync was turned off from another device, please turn on sync again.\"),\n\t\t\t\t\tactions: {\n\t\t\t\t\t\tprimary: [new Action('turn on sync', localize('turn on sync', \"Turn on Settings Sync...\"), undefined, true, () => this.turnOn())]\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase UserDataSyncErrorCode.TooLarge:\n\t\t\t\tif (error.resource === SyncResource.Keybindings || error.resource === SyncResource.Settings || error.resource === SyncResource.Tasks) {\n\t\t\t\t\tthis.disableSync(error.resource);\n\t\t\t\t\tconst sourceArea = getSyncAreaLabel(error.resource);\n\t\t\t\t\tthis.handleTooLargeError(error.resource, localize('too large', \"Disabled syncing {0} because size of the {1} file to sync is larger than {2}. Please open the file and reduce the size and enable sync\", sourceArea.toLowerCase(), sourceArea.toLowerCase(), '100kb'), error);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase UserDataSyncErrorCode.LocalTooManyProfiles:\n\t\t\t\tthis.disableSync(SyncResource.Profiles);\n\t\t\t\tthis.notificationService.error(localize('too many profiles', \"Disabled syncing profiles because there are too many profiles to sync. Settings Sync supports syncing maximum 20 profiles. Please reduce the number of profiles and enable sync\"));\n\t\t\t\tbreak;\n\t\t\tcase UserDataSyncErrorCode.IncompatibleLocalContent:\n\t\t\tcase UserDataSyncErrorCode.Gone:\n\t\t\tcase UserDataSyncErrorCode.UpgradeRequired: {\n\t\t\t\tconst message = localize('error upgrade required', \"Settings sync is disabled because the current version ({0}, {1}) is not compatible with the sync service. Please update before turning on sync.\", this.productService.version, this.productService.commit);\n\t\t\t\tconst operationId = error.operationId ? localize('operationId', \"Operation Id: {0}\", error.operationId) : undefined;\n\t\t\t\tthis.notificationService.notify({\n\t\t\t\t\tseverity: Severity.Error,\n\t\t\t\t\tmessage: operationId ? `${message} ${operationId}` : message,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase UserDataSyncErrorCode.MethodNotFound: {\n\t\t\t\tconst message = localize('method not found', \"Settings sync is disabled because the client is making invalid requests. Please report an issue with the logs.\");\n\t\t\t\tconst operationId = error.operationId ? localize('operationId', \"Operation Id: {0}\", error.operationId) : undefined;\n\t\t\t\tthis.notificationService.notify({\n\t\t\t\t\tseverity: Severity.Error,\n\t\t\t\t\tmessage: operationId ? `${message} ${operationId}` : message,\n\t\t\t\t\tactions: {\n\t\t\t\t\t\tprimary: [\n\t\t\t\t\t\t\tnew Action('Show Sync Logs', localize('show sync logs', \"Show Log\"), undefined, true, () => this.commandService.executeCommand(SHOW_SYNC_LOG_COMMAND_ID)),\n\t\t\t\t\t\t\tnew Action('Report Issue', localize('report issue', \"Report Issue\"), undefined, true, () => this.workbenchIssueService.openReporter())\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase UserDataSyncErrorCode.IncompatibleRemoteContent:\n\t\t\t\tthis.notificationService.notify({\n\t\t\t\t\tseverity: Severity.Error,\n\t\t\t\t\tmessage: localize('error reset required', \"Settings sync is disabled because your data in the cloud is older than that of the client. Please clear your data in the cloud before turning on sync.\"),\n\t\t\t\t\tactions: {\n\t\t\t\t\t\tprimary: [\n\t\t\t\t\t\t\tnew Action('reset', localize('reset', \"Clear Data in Cloud...\"), undefined, true, () => this.userDataSyncWorkbenchService.resetSyncedData()),\n\t\t\t\t\t\t\tnew Action('show synced data', localize('show synced data action', \"Show Synced Data\"), undefined, true, () => this.userDataSyncWorkbenchService.showSyncActivity())\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\n\t\t\tcase UserDataSyncErrorCode.ServiceChanged:\n\t\t\t\tthis.notificationService.notify({\n\t\t\t\t\tseverity: Severity.Info,\n\t\t\t\t\tmessage: this.userDataSyncStoreManagementService.userDataSyncStore?.type === 'insiders' ?\n\t\t\t\t\t\tlocalize('service switched to insiders', \"Settings Sync has been switched to insiders service\") :\n\t\t\t\t\t\tlocalize('service switched to stable', \"Settings Sync has been switched to stable service\"),\n\t\t\t\t});\n\n\t\t\t\treturn;\n\n\t\t\tcase UserDataSyncErrorCode.DefaultServiceChanged:\n\t\t\t\t// Settings sync is using separate service\n\t\t\t\tif (this.userDataSyncEnablementService.isEnabled()) {\n\t\t\t\t\tthis.notificationService.notify({\n\t\t\t\t\t\tseverity: Severity.Info,\n\t\t\t\t\t\tmessage: localize('using separate service', \"Settings sync now uses a separate service, more information is available in the [Settings Sync Documentation](https://aka.ms/vscode-settings-sync-help#_syncing-stable-versus-insiders).\"),\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// If settings sync got turned off then ask user to turn on sync again.\n\t\t\t\telse {\n\t\t\t\t\tthis.notificationService.notify({\n\t\t\t\t\t\tseverity: Severity.Info,\n\t\t\t\t\t\tmessage: localize('service changed and turned off', \"Settings sync was turned off because {0} now uses a separate service. Please turn on sync again.\", this.productService.nameLong),\n\t\t\t\t\t\tactions: {\n\t\t\t\t\t\t\tprimary: [new Action('turn on sync', localize('turn on sync', \"Turn on Settings Sync...\"), undefined, true, () => this.turnOn())]\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t}\n\t}\n\n\tprivate handleTooLargeError(resource: SyncResource, message: string, error: UserDataSyncError): void {\n\t\tconst operationId = error.operationId ? localize('operationId', \"Operation Id: {0}\", error.operationId) : undefined;\n\t\tthis.notificationService.notify({\n\t\t\tseverity: Severity.Error,\n\t\t\tmessage: operationId ? `${message} ${operationId}` : message,\n\t\t\tactions: {\n\t\t\t\tprimary: [new Action('open sync file', localize('open file', \"Open {0} File\", getSyncAreaLabel(resource)), undefined, true,\n\t\t\t\t\t() => resource === SyncResource.Settings ? this.preferencesService.openUserSettings({ jsonEditor: true }) : this.preferencesService.openGlobalKeybindingSettings(true))]\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate readonly invalidContentErrorDisposables = new Map<string, IDisposable>();\n\tprivate onSynchronizerErrors(errors: IUserDataSyncResourceError[]): void {\n\t\tif (errors.length) {\n\t\t\tfor (const { profile, syncResource: resource, error } of errors) {\n\t\t\t\tswitch (error.code) {\n\t\t\t\t\tcase UserDataSyncErrorCode.LocalInvalidContent:\n\t\t\t\t\t\tthis.handleInvalidContentError({ profile, syncResource: resource });\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tconst key = `${profile.id}:${resource}`;\n\t\t\t\t\t\tconst disposable = this.invalidContentErrorDisposables.get(key);\n\t\t\t\t\t\tif (disposable) {\n\t\t\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\t\t\tthis.invalidContentErrorDisposables.delete(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.invalidContentErrorDisposables.forEach(disposable => disposable.dispose());\n\t\t\tthis.invalidContentErrorDisposables.clear();\n\t\t}\n\t}\n\n\tprivate handleInvalidContentError({ profile, syncResource: source }: IUserDataSyncResource): void {\n\t\tif (this.userDataProfileService.currentProfile.id !== profile.id) {\n\t\t\treturn;\n\t\t}\n\t\tconst key = `${profile.id}:${source}`;\n\t\tif (this.invalidContentErrorDisposables.has(key)) {\n\t\t\treturn;\n\t\t}\n\t\tif (source !== SyncResource.Settings && source !== SyncResource.Keybindings && source !== SyncResource.Tasks) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.hostService.hasFocus) {\n\t\t\treturn;\n\t\t}\n\t\tconst resource = source === SyncResource.Settings ? this.userDataProfileService.currentProfile.settingsResource\n\t\t\t: source === SyncResource.Keybindings ? this.userDataProfileService.currentProfile.keybindingsResource\n\t\t\t\t: this.userDataProfileService.currentProfile.tasksResource;\n\t\tconst editorUri = EditorResourceAccessor.getCanonicalUri(this.editorService.activeEditor, { supportSideBySide: SideBySideEditor.PRIMARY });\n\t\tif (isEqual(resource, editorUri)) {\n\t\t\t// Do not show notification if the file in error is active\n\t\t\treturn;\n\t\t}\n\t\tconst errorArea = getSyncAreaLabel(source);\n\t\tconst handle = this.notificationService.notify({\n\t\t\tseverity: Severity.Error,\n\t\t\tmessage: localize('errorInvalidConfiguration', \"Unable to sync {0} because the content in the file is not valid. Please open the file and correct it.\", errorArea.toLowerCase()),\n\t\t\tactions: {\n\t\t\t\tprimary: [new Action('open sync file', localize('open file', \"Open {0} File\", errorArea), undefined, true,\n\t\t\t\t\t() => source === SyncResource.Settings ? this.preferencesService.openUserSettings({ jsonEditor: true }) : this.preferencesService.openGlobalKeybindingSettings(true))]\n\t\t\t}\n\t\t});\n\t\tthis.invalidContentErrorDisposables.set(key, toDisposable(() => {\n\t\t\t// close the error warning notification\n\t\t\thandle.close();\n\t\t\tthis.invalidContentErrorDisposables.delete(key);\n\t\t}));\n\t}\n\n\tprivate getConflictsCount(): number {\n\t\treturn this.userDataSyncService.conflicts.reduce((result, { conflicts }) => { return result + conflicts.length; }, 0);\n\t}\n\n\tprivate async updateGlobalActivityBadge(): Promise<void> {\n\t\tthis.globalActivityBadgeDisposable.clear();\n\n\t\tlet badge: IBadge | undefined = undefined;\n\t\tlet priority: number | undefined = undefined;\n\n\t\tif (this.userDataSyncService.conflicts.length && this.userDataSyncEnablementService.isEnabled()) {\n\t\t\tbadge = new NumberBadge(this.getConflictsCount(), () => localize('has conflicts', \"{0}: Conflicts Detected\", SYNC_TITLE.value));\n\t\t} else if (this.turningOnSync) {\n\t\t\tbadge = new ProgressBadge(() => localize('turning on syncing', \"Turning on Settings Sync...\"));\n\t\t\tpriority = 1;\n\t\t}\n\n\t\tif (badge) {\n\t\t\tthis.globalActivityBadgeDisposable.value = this.activityService.showGlobalActivity({ badge, priority });\n\t\t}\n\t}\n\n\tprivate async updateAccountBadge(): Promise<void> {\n\t\tthis.accountBadgeDisposable.clear();\n\n\t\tlet badge: IBadge | undefined = undefined;\n\n\t\tif (this.userDataSyncService.status !== SyncStatus.Uninitialized && this.userDataSyncEnablementService.isEnabled() && this.userDataSyncWorkbenchService.accountStatus === AccountStatus.Unavailable) {\n\t\t\tbadge = new NumberBadge(1, () => localize('sign in to sync', \"Sign in to Sync Settings\"));\n\t\t}\n\n\t\tif (badge) {\n\t\t\tthis.accountBadgeDisposable.value = this.activityService.showAccountsActivity({ badge, priority: undefined });\n\t\t}\n\t}\n\n\tprivate async turnOn(): Promise<void> {\n\t\ttry {\n\t\t\tif (!this.userDataSyncWorkbenchService.authenticationProviders.length) {\n\t\t\t\tthrow new Error(localize('no authentication providers', \"No authentication providers are available.\"));\n\t\t\t}\n\t\t\tconst turnOn = await this.askToConfigure();\n\t\t\tif (!turnOn) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this.userDataSyncStoreManagementService.userDataSyncStore?.canSwitch) {\n\t\t\t\tawait this.selectSettingsSyncService(this.userDataSyncStoreManagementService.userDataSyncStore);\n\t\t\t}\n\t\t\tawait this.userDataSyncWorkbenchService.turnOn();\n\t\t} catch (e) {\n\t\t\tif (isCancellationError(e)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (e instanceof UserDataSyncError) {\n\t\t\t\tswitch (e.code) {\n\t\t\t\t\tcase UserDataSyncErrorCode.TooLarge:\n\t\t\t\t\t\tif (e.resource === SyncResource.Keybindings || e.resource === SyncResource.Settings || e.resource === SyncResource.Tasks) {\n\t\t\t\t\t\t\tthis.handleTooLargeError(e.resource, localize('too large while starting sync', \"Settings sync cannot be turned on because size of the {0} file to sync is larger than {1}. Please open the file and reduce the size and turn on sync\", getSyncAreaLabel(e.resource).toLowerCase(), '100kb'), e);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase UserDataSyncErrorCode.IncompatibleLocalContent:\n\t\t\t\t\tcase UserDataSyncErrorCode.Gone:\n\t\t\t\t\tcase UserDataSyncErrorCode.UpgradeRequired: {\n\t\t\t\t\t\tconst message = localize('error upgrade required while starting sync', \"Settings sync cannot be turned on because the current version ({0}, {1}) is not compatible with the sync service. Please update before turning on sync.\", this.productService.version, this.productService.commit);\n\t\t\t\t\t\tconst operationId = e.operationId ? localize('operationId', \"Operation Id: {0}\", e.operationId) : undefined;\n\t\t\t\t\t\tthis.notificationService.notify({\n\t\t\t\t\t\t\tseverity: Severity.Error,\n\t\t\t\t\t\t\tmessage: operationId ? `${message} ${operationId}` : message,\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcase UserDataSyncErrorCode.IncompatibleRemoteContent:\n\t\t\t\t\t\tthis.notificationService.notify({\n\t\t\t\t\t\t\tseverity: Severity.Error,\n\t\t\t\t\t\t\tmessage: localize('error reset required while starting sync', \"Settings sync cannot be turned on because your data in the cloud is older than that of the client. Please clear your data in the cloud before turning on sync.\"),\n\t\t\t\t\t\t\tactions: {\n\t\t\t\t\t\t\t\tprimary: [\n\t\t\t\t\t\t\t\t\tnew Action('reset', localize('reset', \"Clear Data in Cloud...\"), undefined, true, () => this.userDataSyncWorkbenchService.resetSyncedData()),\n\t\t\t\t\t\t\t\t\tnew Action('show synced data', localize('show synced data action', \"Show Synced Data\"), undefined, true, () => this.userDataSyncWorkbenchService.showSyncActivity())\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase UserDataSyncErrorCode.Unauthorized:\n\t\t\t\t\tcase UserDataSyncErrorCode.Forbidden:\n\t\t\t\t\t\tthis.notificationService.error(localize('auth failed', \"Error while turning on Settings Sync: Authentication failed.\"));\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.notificationService.error(localize('turn on failed with user data sync error', \"Error while turning on Settings Sync. Please check [logs]({0}) for more details.\", `command:${SHOW_SYNC_LOG_COMMAND_ID}`));\n\t\t\t} else {\n\t\t\t\tthis.notificationService.error(localize({ key: 'turn on failed', comment: ['Substitution is for error reason'] }, \"Error while turning on Settings Sync. {0}\", getErrorMessage(e)));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async askToConfigure(): Promise<boolean> {\n\t\treturn new Promise<boolean>((c, e) => {\n\t\t\tconst disposables: DisposableStore = new DisposableStore();\n\t\t\tconst quickPick = this.quickInputService.createQuickPick<ConfigureSyncQuickPickItem>();\n\t\t\tdisposables.add(quickPick);\n\t\t\tquickPick.title = SYNC_TITLE.value;\n\t\t\tquickPick.ok = false;\n\t\t\tquickPick.customButton = true;\n\t\t\tquickPick.customLabel = localize('sign in and turn on', \"Sign in\");\n\t\t\tquickPick.description = localize('configure and turn on sync detail', \"Please sign in to backup and sync your data across devices.\");\n\t\t\tquickPick.canSelectMany = true;\n\t\t\tquickPick.ignoreFocusOut = true;\n\t\t\tquickPick.hideInput = true;\n\t\t\tquickPick.hideCheckAll = true;\n\n\t\t\tconst items = this.getConfigureSyncQuickPickItems();\n\t\t\tquickPick.items = items;\n\t\t\tquickPick.selectedItems = items.filter(item => this.userDataSyncEnablementService.isResourceEnabled(item.id));\n\t\t\tlet accepted: boolean = false;\n\t\t\tdisposables.add(Event.any(quickPick.onDidAccept, quickPick.onDidCustom)(() => {\n\t\t\t\taccepted = true;\n\t\t\t\tquickPick.hide();\n\t\t\t}));\n\t\t\tdisposables.add(quickPick.onDidHide(() => {\n\t\t\t\ttry {\n\t\t\t\t\tif (accepted) {\n\t\t\t\t\t\tthis.updateConfiguration(items, quickPick.selectedItems);\n\t\t\t\t\t}\n\t\t\t\t\tc(accepted);\n\t\t\t\t} catch (error) {\n\t\t\t\t\te(error);\n\t\t\t\t} finally {\n\t\t\t\t\tdisposables.dispose();\n\t\t\t\t}\n\t\t\t}));\n\t\t\tquickPick.show();\n\t\t});\n\t}\n\n\tprivate getConfigureSyncQuickPickItems(): ConfigureSyncQuickPickItem[] {\n\t\tconst result = [{\n\t\t\tid: SyncResource.Settings,\n\t\t\tlabel: getSyncAreaLabel(SyncResource.Settings)\n\t\t}, {\n\t\t\tid: SyncResource.Keybindings,\n\t\t\tlabel: getSyncAreaLabel(SyncResource.Keybindings),\n\t\t}, {\n\t\t\tid: SyncResource.Snippets,\n\t\t\tlabel: getSyncAreaLabel(SyncResource.Snippets)\n\t\t}, {\n\t\t\tid: SyncResource.Tasks,\n\t\t\tlabel: getSyncAreaLabel(SyncResource.Tasks)\n\t\t}, {\n\t\t\tid: SyncResource.GlobalState,\n\t\t\tlabel: getSyncAreaLabel(SyncResource.GlobalState),\n\t\t}, {\n\t\t\tid: SyncResource.Extensions,\n\t\t\tlabel: getSyncAreaLabel(SyncResource.Extensions)\n\t\t}];\n\t\tif (this.userDataProfilesService.isEnabled()) {\n\t\t\tresult.push({\n\t\t\t\tid: SyncResource.Profiles,\n\t\t\t\tlabel: getSyncAreaLabel(SyncResource.Profiles),\n\t\t\t});\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate updateConfiguration(items: ConfigureSyncQuickPickItem[], selectedItems: ReadonlyArray<ConfigureSyncQuickPickItem>): void {\n\t\tfor (const item of items) {\n\t\t\tconst wasEnabled = this.userDataSyncEnablementService.isResourceEnabled(item.id);\n\t\t\tconst isEnabled = !!selectedItems.filter(selected => selected.id === item.id)[0];\n\t\t\tif (wasEnabled !== isEnabled) {\n\t\t\t\tthis.userDataSyncEnablementService.setResourceEnablement(item.id, isEnabled);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async configureSyncOptions(): Promise<void> {\n\t\treturn new Promise((c, e) => {\n\t\t\tconst disposables: DisposableStore = new DisposableStore();\n\t\t\tconst quickPick = this.quickInputService.createQuickPick<ConfigureSyncQuickPickItem>();\n\t\t\tdisposables.add(quickPick);\n\t\t\tquickPick.title = localize('configure sync title', \"{0}: Configure...\", SYNC_TITLE.value);\n\t\t\tquickPick.placeholder = localize('configure sync placeholder', \"Choose what to sync\");\n\t\t\tquickPick.canSelectMany = true;\n\t\t\tquickPick.ignoreFocusOut = true;\n\t\t\tquickPick.ok = true;\n\t\t\tconst items = this.getConfigureSyncQuickPickItems();\n\t\t\tquickPick.items = items;\n\t\t\tquickPick.selectedItems = items.filter(item => this.userDataSyncEnablementService.isResourceEnabled(item.id));\n\t\t\tdisposables.add(quickPick.onDidAccept(async () => {\n\t\t\t\tif (quickPick.selectedItems.length) {\n\t\t\t\t\tthis.updateConfiguration(items, quickPick.selectedItems);\n\t\t\t\t\tquickPick.hide();\n\t\t\t\t}\n\t\t\t}));\n\t\t\tdisposables.add(quickPick.onDidHide(() => {\n\t\t\t\tdisposables.dispose();\n\t\t\t\tc();\n\t\t\t}));\n\t\t\tquickPick.show();\n\t\t});\n\t}\n\n\tprivate async turnOff(): Promise<void> {\n\t\tconst result = await this.dialogService.confirm({\n\t\t\tmessage: localize('turn off sync confirmation', \"Do you want to turn off sync?\"),\n\t\t\tdetail: localize('turn off sync detail', \"Your settings, keybindings, extensions, snippets and UI State will no longer be synced.\"),\n\t\t\tprimaryButton: localize({ key: 'turn off', comment: ['&& denotes a mnemonic'] }, \"&&Turn off\"),\n\t\t\tcheckbox: this.userDataSyncWorkbenchService.accountStatus === AccountStatus.Available ? {\n\t\t\t\tlabel: localize('turn off sync everywhere', \"Turn off sync on all your devices and clear the data from the cloud.\")\n\t\t\t} : undefined\n\t\t});\n\t\tif (result.confirmed) {\n\t\t\treturn this.userDataSyncWorkbenchService.turnoff(!!result.checkboxChecked);\n\t\t}\n\t}\n\n\tprivate disableSync(source: SyncResource): void {\n\t\tswitch (source) {\n\t\t\tcase SyncResource.Settings: return this.userDataSyncEnablementService.setResourceEnablement(SyncResource.Settings, false);\n\t\t\tcase SyncResource.Keybindings: return this.userDataSyncEnablementService.setResourceEnablement(SyncResource.Keybindings, false);\n\t\t\tcase SyncResource.Snippets: return this.userDataSyncEnablementService.setResourceEnablement(SyncResource.Snippets, false);\n\t\t\tcase SyncResource.Tasks: return this.userDataSyncEnablementService.setResourceEnablement(SyncResource.Tasks, false);\n\t\t\tcase SyncResource.Extensions: return this.userDataSyncEnablementService.setResourceEnablement(SyncResource.Extensions, false);\n\t\t\tcase SyncResource.GlobalState: return this.userDataSyncEnablementService.setResourceEnablement(SyncResource.GlobalState, false);\n\t\t\tcase SyncResource.Profiles: return this.userDataSyncEnablementService.setResourceEnablement(SyncResource.Profiles, false);\n\t\t}\n\t}\n\n\tprivate showSyncActivity(): Promise<void> {\n\t\treturn this.outputService.showChannel(USER_DATA_SYNC_LOG_ID);\n\t}\n\n\tprivate async selectSettingsSyncService(userDataSyncStore: IUserDataSyncStore): Promise<void> {\n\t\treturn new Promise<void>((c, e) => {\n\t\t\tconst disposables: DisposableStore = new DisposableStore();\n\t\t\tconst quickPick = disposables.add(this.quickInputService.createQuickPick<{ id: UserDataSyncStoreType; label: string; description?: string }>());\n\t\t\tquickPick.title = localize('switchSyncService.title', \"{0}: Select Service\", SYNC_TITLE.value);\n\t\t\tquickPick.description = localize('switchSyncService.description', \"Ensure you are using the same settings sync service when syncing with multiple environments\");\n\t\t\tquickPick.hideInput = true;\n\t\t\tquickPick.ignoreFocusOut = true;\n\t\t\tconst getDescription = (url: URI): string | undefined => {\n\t\t\t\tconst isDefault = isEqual(url, userDataSyncStore.defaultUrl);\n\t\t\t\tif (isDefault) {\n\t\t\t\t\treturn localize('default', \"Default\");\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t};\n\t\t\tquickPick.items = [\n\t\t\t\t{\n\t\t\t\t\tid: 'insiders',\n\t\t\t\t\tlabel: localize('insiders', \"Insiders\"),\n\t\t\t\t\tdescription: getDescription(userDataSyncStore.insidersUrl)\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'stable',\n\t\t\t\t\tlabel: localize('stable', \"Stable\"),\n\t\t\t\t\tdescription: getDescription(userDataSyncStore.stableUrl)\n\t\t\t\t}\n\t\t\t];\n\t\t\tdisposables.add(quickPick.onDidAccept(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.userDataSyncStoreManagementService.switch(quickPick.selectedItems[0].id);\n\t\t\t\t\tc();\n\t\t\t\t} catch (error) {\n\t\t\t\t\te(error);\n\t\t\t\t} finally {\n\t\t\t\t\tquickPick.hide();\n\t\t\t\t}\n\t\t\t}));\n\t\t\tdisposables.add(quickPick.onDidHide(() => disposables.dispose()));\n\t\t\tquickPick.show();\n\t\t});\n\t}\n\n\tprivate registerActions(): void {\n\t\tif (this.userDataSyncEnablementService.canToggleEnablement()) {\n\t\t\tthis.registerTurnOnSyncAction();\n\t\t\tthis.registerTurnOffSyncAction();\n\t\t}\n\t\tthis.registerTurningOnSyncAction();\n\t\tthis.registerCancelTurnOnSyncAction();\n\t\tthis.registerSignInAction(); // When Sync is turned on from CLI\n\t\tthis.registerShowConflictsAction();\n\n\t\tthis.registerEnableSyncViewsAction();\n\t\tthis.registerManageSyncAction();\n\t\tthis.registerSyncNowAction();\n\t\tthis.registerConfigureSyncAction();\n\t\tthis.registerShowSettingsAction();\n\t\tthis.registerHelpAction();\n\t\tthis.registerShowLogAction();\n\t\tthis.registerResetSyncDataAction();\n\t\tthis.registerAcceptMergesAction();\n\n\t\tif (isWeb) {\n\t\t\tthis.registerDownloadSyncActivityAction();\n\t\t}\n\t}\n\n\tprivate registerTurnOnSyncAction(): void {\n\t\tconst that = this;\n\t\tconst when = ContextKeyExpr.and(CONTEXT_SYNC_STATE.notEqualsTo(SyncStatus.Uninitialized), CONTEXT_SYNC_ENABLEMENT.toNegated(), CONTEXT_TURNING_ON_STATE.negate());\n\t\tthis._register(registerAction2(class TurningOnSyncAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.userDataSync.actions.turnOn',\n\t\t\t\t\ttitle: localize2('global activity turn on sync', 'Backup and Sync Settings...'),\n\t\t\t\t\tcategory: SYNC_TITLE,\n\t\t\t\t\tf1: true,\n\t\t\t\t\tprecondition: when,\n\t\t\t\t\tmenu: [{\n\t\t\t\t\t\tgroup: '3_configuration',\n\t\t\t\t\t\tid: MenuId.GlobalActivity,\n\t\t\t\t\t\twhen,\n\t\t\t\t\t\torder: 2\n\t\t\t\t\t}, {\n\t\t\t\t\t\tgroup: '3_configuration',\n\t\t\t\t\t\tid: MenuId.MenubarPreferencesMenu,\n\t\t\t\t\t\twhen,\n\t\t\t\t\t\torder: 2\n\t\t\t\t\t}, {\n\t\t\t\t\t\tgroup: '1_settings',\n\t\t\t\t\t\tid: MenuId.AccountsContext,\n\t\t\t\t\t\twhen,\n\t\t\t\t\t\torder: 2\n\t\t\t\t\t}]\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(): Promise<any> {\n\t\t\t\treturn that.turnOn();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerTurningOnSyncAction(): void {\n\t\tconst when = ContextKeyExpr.and(CONTEXT_SYNC_STATE.notEqualsTo(SyncStatus.Uninitialized), CONTEXT_SYNC_ENABLEMENT.toNegated(), CONTEXT_TURNING_ON_STATE);\n\t\tthis._register(registerAction2(class TurningOnSyncAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.userData.actions.turningOn',\n\t\t\t\t\ttitle: localize('turnin on sync', \"Turning on Settings Sync...\"),\n\t\t\t\t\tprecondition: ContextKeyExpr.false(),\n\t\t\t\t\tmenu: [{\n\t\t\t\t\t\tgroup: '3_configuration',\n\t\t\t\t\t\tid: MenuId.GlobalActivity,\n\t\t\t\t\t\twhen,\n\t\t\t\t\t\torder: 2\n\t\t\t\t\t}, {\n\t\t\t\t\t\tgroup: '1_settings',\n\t\t\t\t\t\tid: MenuId.AccountsContext,\n\t\t\t\t\t\twhen,\n\t\t\t\t\t}]\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(): Promise<any> { }\n\t\t}));\n\t}\n\n\tprivate registerCancelTurnOnSyncAction(): void {\n\t\tconst that = this;\n\t\tthis._register(registerAction2(class TurningOnSyncAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.userData.actions.cancelTurnOn',\n\t\t\t\t\ttitle: localize('cancel turning on sync', \"Cancel\"),\n\t\t\t\t\ticon: Codicon.stopCircle,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.ViewContainerTitle,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_TURNING_ON_STATE, ContextKeyExpr.equals('viewContainer', SYNC_VIEW_CONTAINER_ID)),\n\t\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\t\torder: 1\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(): Promise<any> {\n\t\t\t\treturn that.userDataSyncWorkbenchService.turnoff(false);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerSignInAction(): void {\n\t\tconst that = this;\n\t\tconst id = 'workbench.userData.actions.signin';\n\t\tconst when = ContextKeyExpr.and(CONTEXT_SYNC_STATE.notEqualsTo(SyncStatus.Uninitialized), CONTEXT_SYNC_ENABLEMENT, CONTEXT_ACCOUNT_STATE.isEqualTo(AccountStatus.Unavailable));\n\t\tthis._register(registerAction2(class StopSyncAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.userData.actions.signin',\n\t\t\t\t\ttitle: localize('sign in global', \"Sign in to Sync Settings\"),\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tgroup: '3_configuration',\n\t\t\t\t\t\tid: MenuId.GlobalActivity,\n\t\t\t\t\t\twhen,\n\t\t\t\t\t\torder: 2\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(): Promise<any> {\n\t\t\t\ttry {\n\t\t\t\t\tawait that.userDataSyncWorkbenchService.signIn();\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthat.notificationService.error(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tthis._register(MenuRegistry.appendMenuItem(MenuId.AccountsContext, {\n\t\t\tgroup: '1_settings',\n\t\t\tcommand: {\n\t\t\t\tid,\n\t\t\t\ttitle: localize('sign in accounts', \"Sign in to Sync Settings (1)\"),\n\t\t\t},\n\t\t\twhen\n\t\t}));\n\t}\n\n\tprivate getShowConflictsTitle(): ILocalizedString {\n\t\treturn localize2('resolveConflicts_global', \"Show Conflicts ({0})\", this.getConflictsCount());\n\t}\n\n\tprivate readonly conflictsActionDisposable = this._register(new MutableDisposable());\n\tprivate registerShowConflictsAction(): void {\n\t\tthis.conflictsActionDisposable.value = undefined;\n\t\tconst that = this;\n\t\tthis.conflictsActionDisposable.value = registerAction2(class TurningOnSyncAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: showConflictsCommandId,\n\t\t\t\t\tget title() { return that.getShowConflictsTitle(); },\n\t\t\t\t\tcategory: SYNC_TITLE,\n\t\t\t\t\tf1: true,\n\t\t\t\t\tprecondition: CONTEXT_HAS_CONFLICTS,\n\t\t\t\t\tmenu: [{\n\t\t\t\t\t\tgroup: '3_configuration',\n\t\t\t\t\t\tid: MenuId.GlobalActivity,\n\t\t\t\t\t\twhen: CONTEXT_HAS_CONFLICTS,\n\t\t\t\t\t\torder: 2\n\t\t\t\t\t}, {\n\t\t\t\t\t\tgroup: '3_configuration',\n\t\t\t\t\t\tid: MenuId.MenubarPreferencesMenu,\n\t\t\t\t\t\twhen: CONTEXT_HAS_CONFLICTS,\n\t\t\t\t\t\torder: 2\n\t\t\t\t\t}]\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(): Promise<any> {\n\t\t\t\treturn that.userDataSyncWorkbenchService.showConflicts();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate registerManageSyncAction(): void {\n\t\tconst that = this;\n\t\tconst when = ContextKeyExpr.and(CONTEXT_SYNC_ENABLEMENT, CONTEXT_ACCOUNT_STATE.isEqualTo(AccountStatus.Available), CONTEXT_SYNC_STATE.notEqualsTo(SyncStatus.Uninitialized));\n\t\tthis._register(registerAction2(class SyncStatusAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.userDataSync.actions.manage',\n\t\t\t\t\ttitle: localize('sync is on', \"Settings Sync is On\"),\n\t\t\t\t\ttoggled: ContextKeyTrueExpr.INSTANCE,\n\t\t\t\t\tmenu: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: MenuId.GlobalActivity,\n\t\t\t\t\t\t\tgroup: '3_configuration',\n\t\t\t\t\t\t\twhen,\n\t\t\t\t\t\t\torder: 2\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: MenuId.MenubarPreferencesMenu,\n\t\t\t\t\t\t\tgroup: '3_configuration',\n\t\t\t\t\t\t\twhen,\n\t\t\t\t\t\t\torder: 2,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: MenuId.AccountsContext,\n\t\t\t\t\t\t\tgroup: '1_settings',\n\t\t\t\t\t\t\twhen,\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor): any {\n\t\t\t\treturn new Promise<void>((c, e) => {\n\t\t\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\t\t\tconst disposables = new DisposableStore();\n\t\t\t\t\tconst quickPick = quickInputService.createQuickPick({ useSeparators: true });\n\t\t\t\t\tdisposables.add(quickPick);\n\t\t\t\t\tconst items: Array<QuickPickItem> = [];\n\t\t\t\t\tif (that.userDataSyncService.conflicts.length) {\n\t\t\t\t\t\titems.push({ id: showConflictsCommandId, label: `${SYNC_TITLE.value}: ${that.getShowConflictsTitle().original}` });\n\t\t\t\t\t\titems.push({ type: 'separator' });\n\t\t\t\t\t}\n\t\t\t\t\titems.push({ id: configureSyncCommand.id, label: `${SYNC_TITLE.value}: ${configureSyncCommand.title.original}` });\n\t\t\t\t\titems.push({ id: showSyncSettingsCommand.id, label: `${SYNC_TITLE.value}: ${showSyncSettingsCommand.title.original}` });\n\t\t\t\t\titems.push({ id: showSyncedDataCommand.id, label: `${SYNC_TITLE.value}: ${showSyncedDataCommand.title.original}` });\n\t\t\t\t\titems.push({ type: 'separator' });\n\t\t\t\t\titems.push({ id: syncNowCommand.id, label: `${SYNC_TITLE.value}: ${syncNowCommand.title.original}`, description: syncNowCommand.description(that.userDataSyncService) });\n\t\t\t\t\tif (that.userDataSyncEnablementService.canToggleEnablement()) {\n\t\t\t\t\t\tconst account = that.userDataSyncWorkbenchService.current;\n\t\t\t\t\t\titems.push({ id: turnOffSyncCommand.id, label: `${SYNC_TITLE.value}: ${turnOffSyncCommand.title.original}`, description: account ? `${account.accountName} (${that.authenticationService.getProvider(account.authenticationProviderId).label})` : undefined });\n\t\t\t\t\t}\n\t\t\t\t\tquickPick.items = items;\n\t\t\t\t\tdisposables.add(quickPick.onDidAccept(() => {\n\t\t\t\t\t\tif (quickPick.selectedItems[0] && quickPick.selectedItems[0].id) {\n\t\t\t\t\t\t\tcommandService.executeCommand(quickPick.selectedItems[0].id);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tquickPick.hide();\n\t\t\t\t\t}));\n\t\t\t\t\tdisposables.add(quickPick.onDidHide(() => {\n\t\t\t\t\t\tdisposables.dispose();\n\t\t\t\t\t\tc();\n\t\t\t\t\t}));\n\t\t\t\t\tquickPick.show();\n\t\t\t\t});\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerEnableSyncViewsAction(): void {\n\t\tconst that = this;\n\t\tconst when = ContextKeyExpr.and(CONTEXT_ACCOUNT_STATE.isEqualTo(AccountStatus.Available), CONTEXT_SYNC_STATE.notEqualsTo(SyncStatus.Uninitialized));\n\t\tthis._register(registerAction2(class SyncStatusAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: showSyncedDataCommand.id,\n\t\t\t\t\ttitle: showSyncedDataCommand.title,\n\t\t\t\t\tcategory: SYNC_TITLE,\n\t\t\t\t\tprecondition: when,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t\twhen\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\treturn that.userDataSyncWorkbenchService.showSyncActivity();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerSyncNowAction(): void {\n\t\tconst that = this;\n\t\tthis._register(registerAction2(class SyncNowAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: syncNowCommand.id,\n\t\t\t\t\ttitle: syncNowCommand.title,\n\t\t\t\t\tcategory: SYNC_TITLE,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_SYNC_ENABLEMENT, CONTEXT_ACCOUNT_STATE.isEqualTo(AccountStatus.Available), CONTEXT_SYNC_STATE.notEqualsTo(SyncStatus.Uninitialized))\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor): Promise<any> {\n\t\t\t\treturn that.userDataSyncWorkbenchService.syncNow();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerTurnOffSyncAction(): void {\n\t\tconst that = this;\n\t\tthis._register(registerAction2(class StopSyncAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: turnOffSyncCommand.id,\n\t\t\t\t\ttitle: turnOffSyncCommand.title,\n\t\t\t\t\tcategory: SYNC_TITLE,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_SYNC_STATE.notEqualsTo(SyncStatus.Uninitialized), CONTEXT_SYNC_ENABLEMENT),\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(): Promise<any> {\n\t\t\t\ttry {\n\t\t\t\t\tawait that.turnOff();\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (!isCancellationError(e)) {\n\t\t\t\t\t\tthat.notificationService.error(localize('turn off failed', \"Error while turning off Settings Sync. Please check [logs]({0}) for more details.\", `command:${SHOW_SYNC_LOG_COMMAND_ID}`));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerConfigureSyncAction(): void {\n\t\tconst that = this;\n\t\tconst when = ContextKeyExpr.and(CONTEXT_SYNC_STATE.notEqualsTo(SyncStatus.Uninitialized), CONTEXT_SYNC_ENABLEMENT);\n\t\tthis._register(registerAction2(class ConfigureSyncAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: configureSyncCommand.id,\n\t\t\t\t\ttitle: configureSyncCommand.title,\n\t\t\t\t\tcategory: SYNC_TITLE,\n\t\t\t\t\ticon: Codicon.settingsGear,\n\t\t\t\t\ttooltip: localize('configure', \"Configure...\"),\n\t\t\t\t\tmenu: [{\n\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t\twhen\n\t\t\t\t\t}, {\n\t\t\t\t\t\tid: MenuId.ViewContainerTitle,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_SYNC_ENABLEMENT, ContextKeyExpr.equals('viewContainer', SYNC_VIEW_CONTAINER_ID)),\n\t\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\t\torder: 2\n\t\t\t\t\t}]\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(): any { return that.configureSyncOptions(); }\n\t\t}));\n\t}\n\n\tprivate registerShowLogAction(): void {\n\t\tconst that = this;\n\t\tthis._register(registerAction2(class ShowSyncActivityAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: SHOW_SYNC_LOG_COMMAND_ID,\n\t\t\t\t\ttitle: localize('show sync log title', \"{0}: Show Log\", SYNC_TITLE.value),\n\t\t\t\t\ttooltip: localize('show sync log toolrip', \"Show Log\"),\n\t\t\t\t\ticon: Codicon.output,\n\t\t\t\t\tmenu: [{\n\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_SYNC_STATE.notEqualsTo(SyncStatus.Uninitialized)),\n\t\t\t\t\t}, {\n\t\t\t\t\t\tid: MenuId.ViewContainerTitle,\n\t\t\t\t\t\twhen: ContextKeyExpr.equals('viewContainer', SYNC_VIEW_CONTAINER_ID),\n\t\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\t\torder: 1\n\t\t\t\t\t}],\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(): any { return that.showSyncActivity(); }\n\t\t}));\n\t}\n\n\tprivate registerShowSettingsAction(): void {\n\t\tthis._register(registerAction2(class ShowSyncSettingsAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: showSyncSettingsCommand.id,\n\t\t\t\t\ttitle: showSyncSettingsCommand.title,\n\t\t\t\t\tcategory: SYNC_TITLE,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_SYNC_STATE.notEqualsTo(SyncStatus.Uninitialized)),\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor): any {\n\t\t\t\taccessor.get(IPreferencesService).openUserSettings({ jsonEditor: false, query: '@tag:sync' });\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerHelpAction(): void {\n\t\tconst that = this;\n\t\tthis._register(registerAction2(class HelpAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.userDataSync.actions.help',\n\t\t\t\t\ttitle: SYNC_TITLE,\n\t\t\t\t\tcategory: Categories.Help,\n\t\t\t\t\tmenu: [{\n\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_SYNC_STATE.notEqualsTo(SyncStatus.Uninitialized)),\n\t\t\t\t\t}],\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(): any { return that.openerService.open(URI.parse('https://aka.ms/vscode-settings-sync-help')); }\n\t\t}));\n\t\tMenuRegistry.appendMenuItem(MenuId.ViewContainerTitle, {\n\t\t\tcommand: {\n\t\t\t\tid: 'workbench.userDataSync.actions.help',\n\t\t\t\ttitle: Categories.Help.value\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.equals('viewContainer', SYNC_VIEW_CONTAINER_ID),\n\t\t\tgroup: '1_help',\n\t\t});\n\t}\n\n\tprivate registerAcceptMergesAction(): void {\n\t\tconst that = this;\n\t\tthis._register(registerAction2(class AcceptMergesAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.userDataSync.actions.acceptMerges',\n\t\t\t\t\ttitle: localize('complete merges title', \"Complete Merge\"),\n\t\t\t\t\tmenu: [{\n\t\t\t\t\t\tid: MenuId.EditorContent,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(ctxIsMergeResultEditor, ContextKeyExpr.regex(ctxMergeBaseUri.key, new RegExp(`^${USER_DATA_SYNC_SCHEME}:`))),\n\t\t\t\t\t}],\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tasync run(accessor: ServicesAccessor, previewResource: URI): Promise<void> {\n\t\t\t\tconst textFileService = accessor.get(ITextFileService);\n\t\t\t\tawait textFileService.save(previewResource);\n\t\t\t\tconst content = await textFileService.read(previewResource);\n\t\t\t\tawait that.userDataSyncService.accept(this.getSyncResource(previewResource), previewResource, content.value, true);\n\t\t\t}\n\n\t\t\tprivate getSyncResource(previewResource: URI): IUserDataSyncResource {\n\t\t\t\tconst conflict = that.userDataSyncService.conflicts.find(({ conflicts }) => conflicts.some(conflict => isEqual(conflict.previewResource, previewResource)));\n\t\t\t\tif (conflict) {\n\t\t\t\t\treturn conflict;\n\t\t\t\t}\n\t\t\t\tthrow new Error(`Unknown resource: ${previewResource.toString()}`);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerDownloadSyncActivityAction(): void {\n\t\tthis._register(registerAction2(class DownloadSyncActivityAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper(DOWNLOAD_ACTIVITY_ACTION_DESCRIPTOR);\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\tconst userDataSyncWorkbenchService = accessor.get(IUserDataSyncWorkbenchService);\n\t\t\t\tconst notificationService = accessor.get(INotificationService);\n\t\t\t\tconst folder = await userDataSyncWorkbenchService.downloadSyncActivity();\n\t\t\t\tif (folder) {\n\t\t\t\t\tnotificationService.info(localize('download sync activity complete', \"Successfully downloaded Settings Sync activity.\"));\n\t\t\t\t}\n\t\t\t}\n\n\t\t}));\n\t}\n\n\tprivate registerViews(): void {\n\t\tconst container = this.registerViewContainer();\n\t\tthis.registerDataViews(container);\n\t}\n\n\tprivate registerViewContainer(): ViewContainer {\n\t\treturn Registry.as<IViewContainersRegistry>(Extensions.ViewContainersRegistry).registerViewContainer(\n\t\t\t{\n\t\t\t\tid: SYNC_VIEW_CONTAINER_ID,\n\t\t\t\ttitle: SYNC_TITLE,\n\t\t\t\tctorDescriptor: new SyncDescriptor(\n\t\t\t\t\tViewPaneContainer,\n\t\t\t\t\t[SYNC_VIEW_CONTAINER_ID, { mergeViewWithContainerWhenSingleView: true }]\n\t\t\t\t),\n\t\t\t\ticon: SYNC_VIEW_ICON,\n\t\t\t\thideIfEmpty: true,\n\t\t\t}, ViewContainerLocation.Sidebar);\n\t}\n\n\tprivate registerResetSyncDataAction(): void {\n\t\tconst that = this;\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.actions.syncData.reset',\n\t\t\t\t\ttitle: localize('workbench.actions.syncData.reset', \"Clear Data in Cloud...\"),\n\t\t\t\t\tmenu: [{\n\t\t\t\t\t\tid: MenuId.ViewContainerTitle,\n\t\t\t\t\t\twhen: ContextKeyExpr.equals('viewContainer', SYNC_VIEW_CONTAINER_ID),\n\t\t\t\t\t\tgroup: '0_configure',\n\t\t\t\t\t}],\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(): any { return that.userDataSyncWorkbenchService.resetSyncedData(); }\n\t\t}));\n\t}\n\n\tprivate registerDataViews(container: ViewContainer): void {\n\t\tthis._register(this.instantiationService.createInstance(UserDataSyncDataViews, container));\n\t}\n\n}\n\nclass UserDataRemoteContentProvider implements ITextModelContentProvider {\n\n\tconstructor(\n\t\t@IUserDataSyncService private readonly userDataSyncService: IUserDataSyncService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t) {\n\t}\n\n\tprovideTextContent(uri: URI): Promise<ITextModel> | null {\n\t\tif (uri.scheme === USER_DATA_SYNC_SCHEME) {\n\t\t\treturn this.userDataSyncService.resolveContent(uri).then(content => this.modelService.createModel(content || '', this.languageService.createById('jsonc'), uri));\n\t\t}\n\t\treturn null;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["conflict"]
}
