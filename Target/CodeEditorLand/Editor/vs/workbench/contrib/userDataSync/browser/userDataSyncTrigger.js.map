{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/userDataSync/browser/userDataSyncTrigger.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from \"../../../../base/common/event.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { isWeb } from \"../../../../base/common/platform.js\";\nimport { isEqual } from \"../../../../base/common/resources.js\";\nimport { IUserDataProfilesService } from \"../../../../platform/userDataProfile/common/userDataProfile.js\";\nimport { IUserDataAutoSyncService } from \"../../../../platform/userDataSync/common/userDataSync.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport type { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { IHostService } from \"../../../services/host/browser/host.js\";\nimport { KeybindingsEditorInput } from \"../../../services/preferences/browser/keybindingsEditorInput.js\";\nimport { SettingsEditor2Input } from \"../../../services/preferences/common/preferencesEditorInput.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport { VIEWLET_ID } from \"../../extensions/common/extensions.js\";\n\nexport class UserDataSyncTrigger\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tconstructor(\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IUserDataProfilesService\n\t\tprivate readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IViewsService viewsService: IViewsService,\n\t\t@IUserDataAutoSyncService\n\t\tuserDataAutoSyncService: IUserDataAutoSyncService,\n\t\t@IHostService hostService: IHostService,\n\t) {\n\t\tsuper();\n\t\tconst event = Event.filter(\n\t\t\tEvent.any<string | undefined>(\n\t\t\t\tEvent.map(editorService.onDidActiveEditorChange, () =>\n\t\t\t\t\tthis.getUserDataEditorInputSource(\n\t\t\t\t\t\teditorService.activeEditor,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tEvent.map(\n\t\t\t\t\tEvent.filter(\n\t\t\t\t\t\tviewsService.onDidChangeViewContainerVisibility,\n\t\t\t\t\t\t(e) => e.id === VIEWLET_ID && e.visible,\n\t\t\t\t\t),\n\t\t\t\t\t(e) => e.id,\n\t\t\t\t),\n\t\t\t),\n\t\t\t(source) => source !== undefined,\n\t\t);\n\t\tif (isWeb) {\n\t\t\tthis._register(\n\t\t\t\tEvent.debounce<string, string[]>(\n\t\t\t\t\tEvent.any<string>(\n\t\t\t\t\t\tEvent.map(\n\t\t\t\t\t\t\thostService.onDidChangeFocus,\n\t\t\t\t\t\t\t() => \"windowFocus\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tEvent.map(event, (source) => source!),\n\t\t\t\t\t),\n\t\t\t\t\t(last, source) => (last ? [...last, source] : [source]),\n\t\t\t\t\t1000,\n\t\t\t\t)((sources) =>\n\t\t\t\t\tuserDataAutoSyncService.triggerSync(sources, true, false),\n\t\t\t\t),\n\t\t\t);\n\t\t} else {\n\t\t\tthis._register(\n\t\t\t\tevent((source) =>\n\t\t\t\t\tuserDataAutoSyncService.triggerSync([source!], true, false),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate getUserDataEditorInputSource(\n\t\teditorInput: EditorInput | undefined,\n\t): string | undefined {\n\t\tif (!editorInput) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (editorInput instanceof SettingsEditor2Input) {\n\t\t\treturn \"settingsEditor\";\n\t\t}\n\t\tif (editorInput instanceof KeybindingsEditorInput) {\n\t\t\treturn \"keybindingsEditor\";\n\t\t}\n\t\tconst resource = editorInput.resource;\n\t\tif (\n\t\t\tisEqual(\n\t\t\t\tresource,\n\t\t\t\tthis.userDataProfilesService.defaultProfile.settingsResource,\n\t\t\t)\n\t\t) {\n\t\t\treturn \"settingsEditor\";\n\t\t}\n\t\tif (\n\t\t\tisEqual(\n\t\t\t\tresource,\n\t\t\t\tthis.userDataProfilesService.defaultProfile.keybindingsResource,\n\t\t\t)\n\t\t) {\n\t\t\treturn \"keybindingsEditor\";\n\t\t}\n\t\treturn undefined;\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,aAAa;AACtB,SAAS,kBAAkB;AAC3B,SAAS,aAAa;AACtB,SAAS,eAAe;AACxB,SAAS,gCAAgC;AACzC,SAAS,gCAAgC;AAGzC,SAAS,sBAAsB;AAC/B,SAAS,oBAAoB;AAC7B,SAAS,8BAA8B;AACvC,SAAS,4BAA4B;AACrC,SAAS,qBAAqB;AAC9B,SAAS,kBAAkB;AAEpB,IAAM,sBAAN,cACE,WAET;AAAA,EACC,YACiB,eAEC,yBACF,cAEf,yBACc,aACb;AACD,UAAM;AANW;AAOjB,UAAM,QAAQ,MAAM;AAAA,MACnB,MAAM;AAAA,QACL,MAAM;AAAA,UAAI,cAAc;AAAA,UAAyB,MAChD,KAAK;AAAA,YACJ,cAAc;AAAA,UACf;AAAA,QACD;AAAA,QACA,MAAM;AAAA,UACL,MAAM;AAAA,YACL,aAAa;AAAA,YACb,CAAC,MAAM,EAAE,OAAO,cAAc,EAAE;AAAA,UACjC;AAAA,UACA,CAAC,MAAM,EAAE;AAAA,QACV;AAAA,MACD;AAAA,MACA,CAAC,WAAW,WAAW;AAAA,IACxB;AACA,QAAI,OAAO;AACV,WAAK;AAAA,QACJ,MAAM;AAAA,UACL,MAAM;AAAA,YACL,MAAM;AAAA,cACL,YAAY;AAAA,cACZ,MAAM;AAAA,YACP;AAAA,YACA,MAAM,IAAI,OAAO,CAAC,WAAW,MAAO;AAAA,UACrC;AAAA,UACA,CAAC,MAAM,WAAY,OAAO,CAAC,GAAG,MAAM,MAAM,IAAI,CAAC,MAAM;AAAA,UACrD;AAAA,QACD;AAAA,UAAE,CAAC,YACF,wBAAwB,YAAY,SAAS,MAAM,KAAK;AAAA,QACzD;AAAA,MACD;AAAA,IACD,OAAO;AACN,WAAK;AAAA,QACJ;AAAA,UAAM,CAAC,WACN,wBAAwB,YAAY,CAAC,MAAO,GAAG,MAAM,KAAK;AAAA,QAC3D;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EA1ED,OAuBA;AAAA;AAAA;AAAA,EAqDS,6BACP,aACqB;AACrB,QAAI,CAAC,aAAa;AACjB,aAAO;AAAA,IACR;AACA,QAAI,uBAAuB,sBAAsB;AAChD,aAAO;AAAA,IACR;AACA,QAAI,uBAAuB,wBAAwB;AAClD,aAAO;AAAA,IACR;AACA,UAAM,WAAW,YAAY;AAC7B,QACC;AAAA,MACC;AAAA,MACA,KAAK,wBAAwB,eAAe;AAAA,IAC7C,GACC;AACD,aAAO;AAAA,IACR;AACA,QACC;AAAA,MACC;AAAA,MACA,KAAK,wBAAwB,eAAe;AAAA,IAC7C,GACC;AACD,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR;AACD;AAvFa,sBAAN;AAAA,EAKJ;AAAA,EACA;AAAA,EAEA;AAAA,EACA;AAAA,EAEA;AAAA,GAXU;",
  "names": []
}
