{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/userDataSync/browser/userDataSyncViews.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { IViewsRegistry, Extensions, ITreeViewDescriptor, ITreeViewDataProvider, ITreeItem, TreeItemCollapsibleState, TreeViewItemHandleArg, ViewContainer } from '../../../common/views.js';\nimport { localize, localize2 } from '../../../../nls.js';\nimport { SyncDescriptor } from '../../../../platform/instantiation/common/descriptors.js';\nimport { TreeView, TreeViewPane } from '../../../browser/parts/views/treeView.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ALL_SYNC_RESOURCES, IUserDataSyncService, ISyncResourceHandle as IResourceHandle, SyncStatus, IUserDataSyncEnablementService, IUserDataAutoSyncService, UserDataSyncError, UserDataSyncErrorCode, getLastSyncResourceUri, SyncResource, ISyncUserDataProfile, IUserDataSyncResourceProviderService } from '../../../../platform/userDataSync/common/userDataSync.js';\nimport { registerAction2, Action2, MenuId } from '../../../../platform/actions/common/actions.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { URI, UriDto } from '../../../../base/common/uri.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { FolderThemeIcon } from '../../../../platform/theme/common/themeService.js';\nimport { fromNow } from '../../../../base/common/date.js';\nimport { IDialogService, IFileDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Action } from '../../../../base/common/actions.js';\nimport { IUserDataSyncWorkbenchService, CONTEXT_SYNC_STATE, getSyncAreaLabel, CONTEXT_ACCOUNT_STATE, AccountStatus, CONTEXT_ENABLE_ACTIVITY_VIEWS, SYNC_TITLE, SYNC_CONFLICTS_VIEW_ID, CONTEXT_ENABLE_SYNC_CONFLICTS_VIEW, CONTEXT_HAS_CONFLICTS } from '../../../services/userDataSync/common/userDataSync.js';\nimport { IUserDataSyncMachinesService, IUserDataSyncMachine, isWebPlatform } from '../../../../platform/userDataSync/common/userDataSyncMachines.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport { basename } from '../../../../base/common/resources.js';\nimport { API_OPEN_DIFF_EDITOR_COMMAND_ID, API_OPEN_EDITOR_COMMAND_ID } from '../../../browser/parts/editor/editorCommands.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { IEnvironmentService } from '../../../../platform/environment/common/environment.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IUserDataProfile, IUserDataProfilesService } from '../../../../platform/userDataProfile/common/userDataProfile.js';\nimport { UserDataSyncConflictsViewPane } from './userDataSyncConflictsView.js';\n\nexport class UserDataSyncDataViews extends Disposable {\n\n\tconstructor(\n\t\tcontainer: ViewContainer,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IUserDataSyncEnablementService private readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@IUserDataSyncMachinesService private readonly userDataSyncMachinesService: IUserDataSyncMachinesService,\n\t\t@IUserDataSyncService private readonly userDataSyncService: IUserDataSyncService,\n\t) {\n\t\tsuper();\n\t\tthis.registerViews(container);\n\t}\n\n\tprivate registerViews(container: ViewContainer): void {\n\t\tthis.registerConflictsView(container);\n\n\t\tthis.registerActivityView(container, true);\n\t\tthis.registerMachinesView(container);\n\n\t\tthis.registerActivityView(container, false);\n\t\tthis.registerTroubleShootView(container);\n\t\tthis.registerExternalActivityView(container);\n\t}\n\n\tprivate registerConflictsView(container: ViewContainer): void {\n\t\tconst viewsRegistry = Registry.as<IViewsRegistry>(Extensions.ViewsRegistry);\n\t\tconst viewName = localize2('conflicts', \"Conflicts\");\n\t\tconst viewDescriptor: ITreeViewDescriptor = {\n\t\t\tid: SYNC_CONFLICTS_VIEW_ID,\n\t\t\tname: viewName,\n\t\t\tctorDescriptor: new SyncDescriptor(UserDataSyncConflictsViewPane),\n\t\t\twhen: ContextKeyExpr.and(CONTEXT_ENABLE_SYNC_CONFLICTS_VIEW, CONTEXT_HAS_CONFLICTS),\n\t\t\tcanToggleVisibility: false,\n\t\t\tcanMoveView: false,\n\t\t\ttreeView: this.instantiationService.createInstance(TreeView, SYNC_CONFLICTS_VIEW_ID, viewName.value),\n\t\t\tcollapsed: false,\n\t\t\torder: 100,\n\t\t};\n\t\tviewsRegistry.registerViews([viewDescriptor], container);\n\t}\n\n\tprivate registerMachinesView(container: ViewContainer): void {\n\t\tconst id = `workbench.views.sync.machines`;\n\t\tconst name = localize2('synced machines', \"Synced Machines\");\n\t\tconst treeView = this.instantiationService.createInstance(TreeView, id, name.value);\n\t\tconst dataProvider = this.instantiationService.createInstance(UserDataSyncMachinesViewDataProvider, treeView);\n\t\ttreeView.showRefreshAction = true;\n\t\ttreeView.canSelectMany = true;\n\t\ttreeView.dataProvider = dataProvider;\n\n\t\tthis._register(Event.any(this.userDataSyncMachinesService.onDidChange, this.userDataSyncService.onDidResetRemote)(() => treeView.refresh()));\n\t\tconst viewsRegistry = Registry.as<IViewsRegistry>(Extensions.ViewsRegistry);\n\t\tconst viewDescriptor: ITreeViewDescriptor = {\n\t\t\tid,\n\t\t\tname,\n\t\t\tctorDescriptor: new SyncDescriptor(TreeViewPane),\n\t\t\twhen: ContextKeyExpr.and(CONTEXT_SYNC_STATE.notEqualsTo(SyncStatus.Uninitialized), CONTEXT_ACCOUNT_STATE.isEqualTo(AccountStatus.Available), CONTEXT_ENABLE_ACTIVITY_VIEWS),\n\t\t\tcanToggleVisibility: true,\n\t\t\tcanMoveView: false,\n\t\t\ttreeView,\n\t\t\tcollapsed: false,\n\t\t\torder: 300,\n\t\t};\n\t\tviewsRegistry.registerViews([viewDescriptor], container);\n\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: `workbench.actions.sync.editMachineName`,\n\t\t\t\t\ttitle: localize('workbench.actions.sync.editMachineName', \"Edit Name\"),\n\t\t\t\t\ticon: Codicon.edit,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.ViewItemContext,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', id)),\n\t\t\t\t\t\tgroup: 'inline',\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor, handle: TreeViewItemHandleArg): Promise<void> {\n\t\t\t\tconst changed = await dataProvider.rename(handle.$treeItemHandle);\n\t\t\t\tif (changed) {\n\t\t\t\t\tawait treeView.refresh();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: `workbench.actions.sync.turnOffSyncOnMachine`,\n\t\t\t\t\ttitle: localize('workbench.actions.sync.turnOffSyncOnMachine', \"Turn off Settings Sync\"),\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.ViewItemContext,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', id), ContextKeyExpr.equals('viewItem', 'sync-machine')),\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor, handle: TreeViewItemHandleArg, selected?: TreeViewItemHandleArg[]): Promise<void> {\n\t\t\t\tif (await dataProvider.disable((selected || [handle]).map(handle => handle.$treeItemHandle))) {\n\t\t\t\t\tawait treeView.refresh();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t}\n\n\tprivate registerActivityView(container: ViewContainer, remote: boolean): void {\n\t\tconst id = `workbench.views.sync.${remote ? 'remote' : 'local'}Activity`;\n\t\tconst name = remote ? localize2('remote sync activity title', \"Sync Activity (Remote)\") : localize2('local sync activity title', \"Sync Activity (Local)\");\n\t\tconst treeView = this.instantiationService.createInstance(TreeView, id, name.value);\n\t\ttreeView.showCollapseAllAction = true;\n\t\ttreeView.showRefreshAction = true;\n\t\ttreeView.dataProvider = remote ? this.instantiationService.createInstance(RemoteUserDataSyncActivityViewDataProvider)\n\t\t\t: this.instantiationService.createInstance(LocalUserDataSyncActivityViewDataProvider);\n\n\t\tthis._register(Event.any(this.userDataSyncEnablementService.onDidChangeResourceEnablement,\n\t\t\tthis.userDataSyncEnablementService.onDidChangeEnablement,\n\t\t\tthis.userDataSyncService.onDidResetLocal,\n\t\t\tthis.userDataSyncService.onDidResetRemote)(() => treeView.refresh()));\n\t\tconst viewsRegistry = Registry.as<IViewsRegistry>(Extensions.ViewsRegistry);\n\t\tconst viewDescriptor: ITreeViewDescriptor = {\n\t\t\tid,\n\t\t\tname,\n\t\t\tctorDescriptor: new SyncDescriptor(TreeViewPane),\n\t\t\twhen: ContextKeyExpr.and(CONTEXT_SYNC_STATE.notEqualsTo(SyncStatus.Uninitialized), CONTEXT_ACCOUNT_STATE.isEqualTo(AccountStatus.Available), CONTEXT_ENABLE_ACTIVITY_VIEWS),\n\t\t\tcanToggleVisibility: true,\n\t\t\tcanMoveView: false,\n\t\t\ttreeView,\n\t\t\tcollapsed: false,\n\t\t\torder: remote ? 200 : 400,\n\t\t\thideByDefault: !remote,\n\t\t};\n\t\tviewsRegistry.registerViews([viewDescriptor], container);\n\n\t\tthis.registerDataViewActions(id);\n\t}\n\n\tprivate registerExternalActivityView(container: ViewContainer): void {\n\t\tconst id = `workbench.views.sync.externalActivity`;\n\t\tconst name = localize2('downloaded sync activity title', \"Sync Activity (Developer)\");\n\t\tconst dataProvider = this.instantiationService.createInstance(ExtractedUserDataSyncActivityViewDataProvider, undefined);\n\t\tconst treeView = this.instantiationService.createInstance(TreeView, id, name.value);\n\t\ttreeView.showCollapseAllAction = false;\n\t\ttreeView.showRefreshAction = false;\n\t\ttreeView.dataProvider = dataProvider;\n\n\t\tconst viewsRegistry = Registry.as<IViewsRegistry>(Extensions.ViewsRegistry);\n\t\tconst viewDescriptor: ITreeViewDescriptor = {\n\t\t\tid,\n\t\t\tname,\n\t\t\tctorDescriptor: new SyncDescriptor(TreeViewPane),\n\t\t\twhen: CONTEXT_ENABLE_ACTIVITY_VIEWS,\n\t\t\tcanToggleVisibility: true,\n\t\t\tcanMoveView: false,\n\t\t\ttreeView,\n\t\t\tcollapsed: false,\n\t\t\thideByDefault: false,\n\t\t};\n\t\tviewsRegistry.registerViews([viewDescriptor], container);\n\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: `workbench.actions.sync.loadActivity`,\n\t\t\t\t\ttitle: localize('workbench.actions.sync.loadActivity', \"Load Sync Activity\"),\n\t\t\t\t\ticon: Codicon.cloudUpload,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\t\twhen: ContextKeyExpr.equals('view', id),\n\t\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\tconst fileDialogService = accessor.get(IFileDialogService);\n\t\t\t\tconst result = await fileDialogService.showOpenDialog({\n\t\t\t\t\ttitle: localize('select sync activity file', \"Select Sync Activity File or Folder\"),\n\t\t\t\t\tcanSelectFiles: true,\n\t\t\t\t\tcanSelectFolders: true,\n\t\t\t\t\tcanSelectMany: false,\n\t\t\t\t});\n\t\t\t\tif (!result?.[0]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdataProvider.activityDataResource = result[0];\n\t\t\t\tawait treeView.refresh();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerDataViewActions(viewId: string) {\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: `workbench.actions.sync.${viewId}.resolveResource`,\n\t\t\t\t\ttitle: localize('workbench.actions.sync.resolveResourceRef', \"Show raw JSON sync data\"),\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.ViewItemContext,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', viewId), ContextKeyExpr.regex('viewItem', /sync-resource-.*/i))\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor, handle: TreeViewItemHandleArg): Promise<void> {\n\t\t\t\tconst { resource } = <{ resource: string }>JSON.parse(handle.$treeItemHandle);\n\t\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\t\tawait editorService.openEditor({ resource: URI.parse(resource), options: { pinned: true } });\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: `workbench.actions.sync.${viewId}.compareWithLocal`,\n\t\t\t\t\ttitle: localize('workbench.actions.sync.compareWithLocal', \"Compare with Local\"),\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.ViewItemContext,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', viewId), ContextKeyExpr.regex('viewItem', /sync-associatedResource-.*/i))\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor, handle: TreeViewItemHandleArg): Promise<void> {\n\t\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\t\tconst { resource, comparableResource } = <{ resource: string; comparableResource: string }>JSON.parse(handle.$treeItemHandle);\n\t\t\t\tconst remoteResource = URI.parse(resource);\n\t\t\t\tconst localResource = URI.parse(comparableResource);\n\t\t\t\treturn commandService.executeCommand(API_OPEN_DIFF_EDITOR_COMMAND_ID,\n\t\t\t\t\tremoteResource,\n\t\t\t\t\tlocalResource,\n\t\t\t\t\tlocalize('remoteToLocalDiff', \"{0} \u2194 {1}\", localize({ key: 'leftResourceName', comment: ['remote as in file in cloud'] }, \"{0} (Remote)\", basename(remoteResource)), localize({ key: 'rightResourceName', comment: ['local as in file in disk'] }, \"{0} (Local)\", basename(localResource))),\n\t\t\t\t\tundefined\n\t\t\t\t);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: `workbench.actions.sync.${viewId}.replaceCurrent`,\n\t\t\t\t\ttitle: localize('workbench.actions.sync.replaceCurrent', \"Restore\"),\n\t\t\t\t\ticon: Codicon.discard,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.ViewItemContext,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', viewId), ContextKeyExpr.regex('viewItem', /sync-resource-.*/i), ContextKeyExpr.notEquals('viewItem', `sync-resource-${SyncResource.Profiles}`)),\n\t\t\t\t\t\tgroup: 'inline',\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor, handle: TreeViewItemHandleArg): Promise<void> {\n\t\t\t\tconst dialogService = accessor.get(IDialogService);\n\t\t\t\tconst userDataSyncService = accessor.get(IUserDataSyncService);\n\t\t\t\tconst { syncResourceHandle, syncResource } = <{ syncResourceHandle: UriDto<ISyncResourceHandle>; syncResource: SyncResource }>JSON.parse(handle.$treeItemHandle);\n\t\t\t\tconst result = await dialogService.confirm({\n\t\t\t\t\tmessage: localize({ key: 'confirm replace', comment: ['A confirmation message to replace current user data (settings, extensions, keybindings, snippets) with selected version'] }, \"Would you like to replace your current {0} with selected?\", getSyncAreaLabel(syncResource)),\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\ttitle: SYNC_TITLE.value\n\t\t\t\t});\n\t\t\t\tif (result.confirmed) {\n\t\t\t\t\treturn userDataSyncService.replace({ created: syncResourceHandle.created, uri: URI.revive(syncResourceHandle.uri) });\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t}\n\n\tprivate registerTroubleShootView(container: ViewContainer): void {\n\t\tconst id = `workbench.views.sync.troubleshoot`;\n\t\tconst name = localize2('troubleshoot', \"Troubleshoot\");\n\t\tconst treeView = this.instantiationService.createInstance(TreeView, id, name.value);\n\t\tconst dataProvider = this.instantiationService.createInstance(UserDataSyncTroubleshootViewDataProvider);\n\t\ttreeView.showRefreshAction = true;\n\t\ttreeView.dataProvider = dataProvider;\n\n\t\tconst viewsRegistry = Registry.as<IViewsRegistry>(Extensions.ViewsRegistry);\n\t\tconst viewDescriptor: ITreeViewDescriptor = {\n\t\t\tid,\n\t\t\tname,\n\t\t\tctorDescriptor: new SyncDescriptor(TreeViewPane),\n\t\t\twhen: CONTEXT_ENABLE_ACTIVITY_VIEWS,\n\t\t\tcanToggleVisibility: true,\n\t\t\tcanMoveView: false,\n\t\t\ttreeView,\n\t\t\tcollapsed: false,\n\t\t\torder: 500,\n\t\t\thideByDefault: true\n\t\t};\n\t\tviewsRegistry.registerViews([viewDescriptor], container);\n\n\t}\n\n}\n\ntype Profile = IUserDataProfile | ISyncUserDataProfile;\n\ninterface ISyncResourceHandle extends IResourceHandle {\n\tprofileId?: string;\n\tsyncResource: SyncResource;\n\tprevious?: IResourceHandle;\n}\n\ninterface SyncResourceHandleTreeItem extends ITreeItem {\n\tsyncResourceHandle: ISyncResourceHandle;\n}\n\ninterface ProfileTreeItem extends ITreeItem {\n\tprofile: Profile;\n}\n\nabstract class UserDataSyncActivityViewDataProvider<T = Profile> implements ITreeViewDataProvider {\n\n\tprivate readonly syncResourceHandlesByProfile = new Map<string, Promise<SyncResourceHandleTreeItem[]>>();\n\n\tconstructor(\n\t\t@IUserDataSyncService protected readonly userDataSyncService: IUserDataSyncService,\n\t\t@IUserDataSyncResourceProviderService protected readonly userDataSyncResourceProviderService: IUserDataSyncResourceProviderService,\n\t\t@IUserDataAutoSyncService protected readonly userDataAutoSyncService: IUserDataAutoSyncService,\n\t\t@IUserDataSyncWorkbenchService private readonly userDataSyncWorkbenchService: IUserDataSyncWorkbenchService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IUserDataProfilesService protected readonly userDataProfilesService: IUserDataProfilesService,\n\t) { }\n\n\tasync getChildren(element?: ITreeItem): Promise<ITreeItem[]> {\n\t\ttry {\n\t\t\tif (!element) {\n\t\t\t\treturn await this.getRoots();\n\t\t\t}\n\t\t\tif ((<ProfileTreeItem>element).profile || element.handle === this.userDataProfilesService.defaultProfile.id) {\n\t\t\t\tlet promise = this.syncResourceHandlesByProfile.get(element.handle);\n\t\t\t\tif (!promise) {\n\t\t\t\t\tthis.syncResourceHandlesByProfile.set(element.handle, promise = this.getSyncResourceHandles(<T>(<ProfileTreeItem>element).profile));\n\t\t\t\t}\n\t\t\t\treturn await promise;\n\t\t\t}\n\t\t\tif ((<SyncResourceHandleTreeItem>element).syncResourceHandle) {\n\t\t\t\treturn await this.getChildrenForSyncResourceTreeItem(<SyncResourceHandleTreeItem>element);\n\t\t\t}\n\t\t\treturn [];\n\t\t} catch (error) {\n\t\t\tif (!(error instanceof UserDataSyncError)) {\n\t\t\t\terror = UserDataSyncError.toUserDataSyncError(error);\n\t\t\t}\n\t\t\tif (error instanceof UserDataSyncError && error.code === UserDataSyncErrorCode.IncompatibleRemoteContent) {\n\t\t\t\tthis.notificationService.notify({\n\t\t\t\t\tseverity: Severity.Error,\n\t\t\t\t\tmessage: error.message,\n\t\t\t\t\tactions: {\n\t\t\t\t\t\tprimary: [\n\t\t\t\t\t\t\tnew Action('reset', localize('reset', \"Reset Synced Data\"), undefined, true, () => this.userDataSyncWorkbenchService.resetSyncedData()),\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.notificationService.error(error);\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async getRoots(): Promise<ITreeItem[]> {\n\t\tthis.syncResourceHandlesByProfile.clear();\n\n\t\tconst roots: ITreeItem[] = [];\n\n\t\tconst profiles = await this.getProfiles();\n\t\tif (profiles.length) {\n\t\t\tconst profileTreeItem = {\n\t\t\t\thandle: this.userDataProfilesService.defaultProfile.id,\n\t\t\t\tlabel: { label: this.userDataProfilesService.defaultProfile.name },\n\t\t\t\tcollapsibleState: TreeItemCollapsibleState.Expanded,\n\t\t\t};\n\t\t\troots.push(profileTreeItem);\n\t\t} else {\n\t\t\tconst defaultSyncResourceHandles = await this.getSyncResourceHandles();\n\t\t\troots.push(...defaultSyncResourceHandles);\n\t\t}\n\n\t\tfor (const profile of profiles) {\n\t\t\tconst profileTreeItem: ProfileTreeItem = {\n\t\t\t\thandle: profile.id,\n\t\t\t\tlabel: { label: profile.name },\n\t\t\t\tcollapsibleState: TreeItemCollapsibleState.Collapsed,\n\t\t\t\tprofile,\n\t\t\t};\n\t\t\troots.push(profileTreeItem);\n\t\t}\n\n\t\treturn roots;\n\t}\n\n\tprotected async getChildrenForSyncResourceTreeItem(element: SyncResourceHandleTreeItem): Promise<ITreeItem[]> {\n\t\tconst syncResourceHandle = (<SyncResourceHandleTreeItem>element).syncResourceHandle;\n\t\tconst associatedResources = await this.userDataSyncResourceProviderService.getAssociatedResources(syncResourceHandle);\n\t\tconst previousAssociatedResources = syncResourceHandle.previous ? await this.userDataSyncResourceProviderService.getAssociatedResources(syncResourceHandle.previous) : [];\n\t\treturn associatedResources.map(({ resource, comparableResource }) => {\n\t\t\tconst handle = JSON.stringify({ resource: resource.toString(), comparableResource: comparableResource.toString() });\n\t\t\tconst previousResource = previousAssociatedResources.find(previous => basename(previous.resource) === basename(resource))?.resource;\n\t\t\treturn {\n\t\t\t\thandle,\n\t\t\t\tcollapsibleState: TreeItemCollapsibleState.None,\n\t\t\t\tresourceUri: resource,\n\t\t\t\tcommand: previousResource ? {\n\t\t\t\t\tid: API_OPEN_DIFF_EDITOR_COMMAND_ID,\n\t\t\t\t\ttitle: '',\n\t\t\t\t\targuments: [\n\t\t\t\t\t\tpreviousResource,\n\t\t\t\t\t\tresource,\n\t\t\t\t\t\tlocalize('sideBySideLabels', \"{0} \u2194 {1}\", `${basename(resource)} (${fromNow(syncResourceHandle.previous!.created, true)})`, `${basename(resource)} (${fromNow(syncResourceHandle.created, true)})`),\n\t\t\t\t\t\tundefined\n\t\t\t\t\t]\n\t\t\t\t} : {\n\t\t\t\t\tid: API_OPEN_EDITOR_COMMAND_ID,\n\t\t\t\t\ttitle: '',\n\t\t\t\t\targuments: [resource, undefined, undefined]\n\t\t\t\t},\n\t\t\t\tcontextValue: `sync-associatedResource-${syncResourceHandle.syncResource}`\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate async getSyncResourceHandles(profile?: T): Promise<SyncResourceHandleTreeItem[]> {\n\t\tconst treeItems: SyncResourceHandleTreeItem[] = [];\n\t\tconst result = await Promise.all(ALL_SYNC_RESOURCES.map(async syncResource => {\n\t\t\tconst resourceHandles = await this.getResourceHandles(syncResource, profile);\n\t\t\treturn resourceHandles.map((resourceHandle, index) => ({ ...resourceHandle, syncResource, previous: resourceHandles[index + 1] }));\n\t\t}));\n\t\tconst syncResourceHandles = result.flat().sort((a, b) => b.created - a.created);\n\t\tfor (const syncResourceHandle of syncResourceHandles) {\n\t\t\tconst handle = JSON.stringify({ syncResourceHandle, syncResource: syncResourceHandle.syncResource });\n\t\t\ttreeItems.push({\n\t\t\t\thandle,\n\t\t\t\tcollapsibleState: TreeItemCollapsibleState.Collapsed,\n\t\t\t\tlabel: { label: getSyncAreaLabel(syncResourceHandle.syncResource) },\n\t\t\t\tdescription: fromNow(syncResourceHandle.created, true),\n\t\t\t\ttooltip: new Date(syncResourceHandle.created).toLocaleString(),\n\t\t\t\tthemeIcon: FolderThemeIcon,\n\t\t\t\tsyncResourceHandle,\n\t\t\t\tcontextValue: `sync-resource-${syncResourceHandle.syncResource}`\n\t\t\t});\n\t\t}\n\t\treturn treeItems;\n\t}\n\n\tprotected abstract getProfiles(): Promise<Profile[]>;\n\tprotected abstract getResourceHandles(syncResource: SyncResource, profile?: T): Promise<IResourceHandle[]>;\n}\n\nclass LocalUserDataSyncActivityViewDataProvider extends UserDataSyncActivityViewDataProvider<ISyncUserDataProfile> {\n\n\tprotected getResourceHandles(syncResource: SyncResource, profile: ISyncUserDataProfile | undefined): Promise<IResourceHandle[]> {\n\t\treturn this.userDataSyncResourceProviderService.getLocalSyncResourceHandles(syncResource, profile);\n\t}\n\n\tprotected async getProfiles(): Promise<ISyncUserDataProfile[]> {\n\t\treturn this.userDataProfilesService.profiles\n\t\t\t.filter(p => !p.isDefault)\n\t\t\t.map(p => ({\n\t\t\t\tid: p.id,\n\t\t\t\tcollection: p.id,\n\t\t\t\tname: p.name,\n\t\t\t}));\n\t}\n}\n\nclass RemoteUserDataSyncActivityViewDataProvider extends UserDataSyncActivityViewDataProvider<ISyncUserDataProfile> {\n\n\tprivate machinesPromise: Promise<IUserDataSyncMachine[]> | undefined;\n\n\tconstructor(\n\t\t@IUserDataSyncService userDataSyncService: IUserDataSyncService,\n\t\t@IUserDataSyncResourceProviderService userDataSyncResourceProviderService: IUserDataSyncResourceProviderService,\n\t\t@IUserDataAutoSyncService userDataAutoSyncService: IUserDataAutoSyncService,\n\t\t@IUserDataSyncMachinesService private readonly userDataSyncMachinesService: IUserDataSyncMachinesService,\n\t\t@IUserDataSyncWorkbenchService userDataSyncWorkbenchService: IUserDataSyncWorkbenchService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IUserDataProfilesService userDataProfilesService: IUserDataProfilesService,\n\t) {\n\t\tsuper(userDataSyncService, userDataSyncResourceProviderService, userDataAutoSyncService, userDataSyncWorkbenchService, notificationService, userDataProfilesService);\n\t}\n\n\toverride async getChildren(element?: ITreeItem): Promise<ITreeItem[]> {\n\t\tif (!element) {\n\t\t\tthis.machinesPromise = undefined;\n\t\t}\n\t\treturn super.getChildren(element);\n\t}\n\n\tprivate getMachines(): Promise<IUserDataSyncMachine[]> {\n\t\tif (this.machinesPromise === undefined) {\n\t\t\tthis.machinesPromise = this.userDataSyncMachinesService.getMachines();\n\t\t}\n\t\treturn this.machinesPromise;\n\t}\n\n\tprotected getResourceHandles(syncResource: SyncResource, profile?: ISyncUserDataProfile): Promise<IResourceHandle[]> {\n\t\treturn this.userDataSyncResourceProviderService.getRemoteSyncResourceHandles(syncResource, profile);\n\t}\n\n\tprotected getProfiles(): Promise<ISyncUserDataProfile[]> {\n\t\treturn this.userDataSyncResourceProviderService.getRemoteSyncedProfiles();\n\t}\n\n\tprotected override async getChildrenForSyncResourceTreeItem(element: SyncResourceHandleTreeItem): Promise<ITreeItem[]> {\n\t\tconst children = await super.getChildrenForSyncResourceTreeItem(element);\n\t\tif (children.length) {\n\t\t\tconst machineId = await this.userDataSyncResourceProviderService.getMachineId(element.syncResourceHandle);\n\t\t\tif (machineId) {\n\t\t\t\tconst machines = await this.getMachines();\n\t\t\t\tconst machine = machines.find(({ id }) => id === machineId);\n\t\t\t\tchildren[0].description = machine?.isCurrent ? localize({ key: 'current', comment: ['Represents current machine'] }, \"Current\") : machine?.name;\n\t\t\t}\n\t\t}\n\t\treturn children;\n\t}\n}\n\nclass ExtractedUserDataSyncActivityViewDataProvider extends UserDataSyncActivityViewDataProvider<ISyncUserDataProfile> {\n\n\tprivate machinesPromise: Promise<IUserDataSyncMachine[]> | undefined;\n\n\tprivate activityDataLocation: URI | undefined;\n\n\tconstructor(\n\t\tpublic activityDataResource: URI | undefined,\n\t\t@IUserDataSyncService userDataSyncService: IUserDataSyncService,\n\t\t@IUserDataSyncResourceProviderService userDataSyncResourceProviderService: IUserDataSyncResourceProviderService,\n\t\t@IUserDataAutoSyncService userDataAutoSyncService: IUserDataAutoSyncService,\n\t\t@IUserDataSyncWorkbenchService userDataSyncWorkbenchService: IUserDataSyncWorkbenchService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IUserDataProfilesService userDataProfilesService: IUserDataProfilesService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(userDataSyncService, userDataSyncResourceProviderService, userDataAutoSyncService, userDataSyncWorkbenchService, notificationService, userDataProfilesService);\n\t}\n\n\toverride async getChildren(element?: ITreeItem): Promise<ITreeItem[]> {\n\t\tif (!element) {\n\t\t\tthis.machinesPromise = undefined;\n\t\t\tif (!this.activityDataResource) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tconst stat = await this.fileService.resolve(this.activityDataResource);\n\t\t\tif (stat.isDirectory) {\n\t\t\t\tthis.activityDataLocation = this.activityDataResource;\n\t\t\t} else {\n\t\t\t\tthis.activityDataLocation = this.uriIdentityService.extUri.joinPath(this.uriIdentityService.extUri.dirname(this.activityDataResource), 'remoteActivity');\n\t\t\t\ttry { await this.fileService.del(this.activityDataLocation, { recursive: true }); } catch (e) {/* ignore */ }\n\t\t\t\tawait this.userDataSyncService.extractActivityData(this.activityDataResource, this.activityDataLocation);\n\t\t\t}\n\t\t}\n\t\treturn super.getChildren(element);\n\t}\n\n\tprotected getResourceHandles(syncResource: SyncResource, profile: ISyncUserDataProfile | undefined): Promise<IResourceHandle[]> {\n\t\treturn this.userDataSyncResourceProviderService.getLocalSyncResourceHandles(syncResource, profile, this.activityDataLocation);\n\t}\n\n\tprotected override async getProfiles(): Promise<ISyncUserDataProfile[]> {\n\t\treturn this.userDataSyncResourceProviderService.getLocalSyncedProfiles(this.activityDataLocation);\n\t}\n\n\tprotected override async getChildrenForSyncResourceTreeItem(element: SyncResourceHandleTreeItem): Promise<ITreeItem[]> {\n\t\tconst children = await super.getChildrenForSyncResourceTreeItem(element);\n\t\tif (children.length) {\n\t\t\tconst machineId = await this.userDataSyncResourceProviderService.getMachineId(element.syncResourceHandle);\n\t\t\tif (machineId) {\n\t\t\t\tconst machines = await this.getMachines();\n\t\t\t\tconst machine = machines.find(({ id }) => id === machineId);\n\t\t\t\tchildren[0].description = machine?.isCurrent ? localize({ key: 'current', comment: ['Represents current machine'] }, \"Current\") : machine?.name;\n\t\t\t}\n\t\t}\n\t\treturn children;\n\t}\n\n\tprivate getMachines(): Promise<IUserDataSyncMachine[]> {\n\t\tif (this.machinesPromise === undefined) {\n\t\t\tthis.machinesPromise = this.userDataSyncResourceProviderService.getLocalSyncedMachines(this.activityDataLocation);\n\t\t}\n\t\treturn this.machinesPromise;\n\t}\n}\n\nclass UserDataSyncMachinesViewDataProvider implements ITreeViewDataProvider {\n\n\tprivate machinesPromise: Promise<IUserDataSyncMachine[]> | undefined;\n\n\tconstructor(\n\t\tprivate readonly treeView: TreeView,\n\t\t@IUserDataSyncMachinesService private readonly userDataSyncMachinesService: IUserDataSyncMachinesService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IUserDataSyncWorkbenchService private readonly userDataSyncWorkbenchService: IUserDataSyncWorkbenchService,\n\t) {\n\t}\n\n\tasync getChildren(element?: ITreeItem): Promise<ITreeItem[]> {\n\t\tif (!element) {\n\t\t\tthis.machinesPromise = undefined;\n\t\t}\n\t\ttry {\n\t\t\tlet machines = await this.getMachines();\n\t\t\tmachines = machines.filter(m => !m.disabled).sort((m1, m2) => m1.isCurrent ? -1 : 1);\n\t\t\tthis.treeView.message = machines.length ? undefined : localize('no machines', \"No Machines\");\n\t\t\treturn machines.map(({ id, name, isCurrent, platform }) => ({\n\t\t\t\thandle: id,\n\t\t\t\tcollapsibleState: TreeItemCollapsibleState.None,\n\t\t\t\tlabel: { label: name },\n\t\t\t\tdescription: isCurrent ? localize({ key: 'current', comment: ['Current machine'] }, \"Current\") : undefined,\n\t\t\t\tthemeIcon: platform && isWebPlatform(platform) ? Codicon.globe : Codicon.vm,\n\t\t\t\tcontextValue: 'sync-machine'\n\t\t\t}));\n\t\t} catch (error) {\n\t\t\tthis.notificationService.error(error);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate getMachines(): Promise<IUserDataSyncMachine[]> {\n\t\tif (this.machinesPromise === undefined) {\n\t\t\tthis.machinesPromise = this.userDataSyncMachinesService.getMachines();\n\t\t}\n\t\treturn this.machinesPromise;\n\t}\n\n\tasync disable(machineIds: string[]): Promise<boolean> {\n\t\tconst machines = await this.getMachines();\n\t\tconst machinesToDisable = machines.filter(({ id }) => machineIds.includes(id));\n\t\tif (!machinesToDisable.length) {\n\t\t\tthrow new Error(localize('not found', \"machine not found with id: {0}\", machineIds.join(',')));\n\t\t}\n\n\t\tconst result = await this.dialogService.confirm({\n\t\t\ttype: 'info',\n\t\t\tmessage: machinesToDisable.length > 1 ? localize('turn off sync on multiple machines', \"Are you sure you want to turn off sync on selected machines?\")\n\t\t\t\t: localize('turn off sync on machine', \"Are you sure you want to turn off sync on {0}?\", machinesToDisable[0].name),\n\t\t\tprimaryButton: localize({ key: 'turn off', comment: ['&& denotes a mnemonic'] }, \"&&Turn off\"),\n\t\t});\n\n\t\tif (!result.confirmed) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (machinesToDisable.some(machine => machine.isCurrent)) {\n\t\t\tawait this.userDataSyncWorkbenchService.turnoff(false);\n\t\t}\n\n\t\tconst otherMachinesToDisable: [string, boolean][] = machinesToDisable.filter(machine => !machine.isCurrent)\n\t\t\t.map(machine => ([machine.id, false]));\n\t\tif (otherMachinesToDisable.length) {\n\t\t\tawait this.userDataSyncMachinesService.setEnablements(otherMachinesToDisable);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tasync rename(machineId: string): Promise<boolean> {\n\t\tconst disposableStore = new DisposableStore();\n\t\tconst inputBox = disposableStore.add(this.quickInputService.createInputBox());\n\t\tinputBox.placeholder = localize('placeholder', \"Enter the name of the machine\");\n\t\tinputBox.busy = true;\n\t\tinputBox.show();\n\t\tconst machines = await this.getMachines();\n\t\tconst machine = machines.find(({ id }) => id === machineId);\n\t\tif (!machine) {\n\t\t\tinputBox.hide();\n\t\t\tdisposableStore.dispose();\n\t\t\tthrow new Error(localize('not found', \"machine not found with id: {0}\", machineId));\n\t\t}\n\t\tinputBox.busy = false;\n\t\tinputBox.value = machine.name;\n\t\tconst validateMachineName = (machineName: string): string | null => {\n\t\t\tmachineName = machineName.trim();\n\t\t\treturn machineName && !machines.some(m => m.id !== machineId && m.name === machineName) ? machineName : null;\n\t\t};\n\t\tdisposableStore.add(inputBox.onDidChangeValue(() =>\n\t\t\tinputBox.validationMessage = validateMachineName(inputBox.value) ? '' : localize('valid message', \"Machine name should be unique and not empty\")));\n\t\treturn new Promise<boolean>((c, e) => {\n\t\t\tdisposableStore.add(inputBox.onDidAccept(async () => {\n\t\t\t\tconst machineName = validateMachineName(inputBox.value);\n\t\t\t\tdisposableStore.dispose();\n\t\t\t\tif (machineName && machineName !== machine.name) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.userDataSyncMachinesService.renameMachine(machineId, machineName);\n\t\t\t\t\t\tc(true);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\te(error);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tc(false);\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\t}\n}\n\nclass UserDataSyncTroubleshootViewDataProvider implements ITreeViewDataProvider {\n\n\tconstructor(\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IUserDataSyncWorkbenchService private readonly userDataSyncWorkbenchService: IUserDataSyncWorkbenchService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t) {\n\t}\n\n\tasync getChildren(element?: ITreeItem): Promise<ITreeItem[]> {\n\t\tif (!element) {\n\t\t\treturn [{\n\t\t\t\thandle: 'SYNC_LOGS',\n\t\t\t\tcollapsibleState: TreeItemCollapsibleState.Collapsed,\n\t\t\t\tlabel: { label: localize('sync logs', \"Logs\") },\n\t\t\t\tthemeIcon: Codicon.folder,\n\t\t\t}, {\n\t\t\t\thandle: 'LAST_SYNC_STATES',\n\t\t\t\tcollapsibleState: TreeItemCollapsibleState.Collapsed,\n\t\t\t\tlabel: { label: localize('last sync states', \"Last Synced Remotes\") },\n\t\t\t\tthemeIcon: Codicon.folder,\n\t\t\t}];\n\t\t}\n\n\t\tif (element.handle === 'LAST_SYNC_STATES') {\n\t\t\treturn this.getLastSyncStates();\n\t\t}\n\n\t\tif (element.handle === 'SYNC_LOGS') {\n\t\t\treturn this.getSyncLogs();\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate async getLastSyncStates(): Promise<ITreeItem[]> {\n\t\tconst result: ITreeItem[] = [];\n\t\tfor (const syncResource of ALL_SYNC_RESOURCES) {\n\t\t\tconst resource = getLastSyncResourceUri(undefined, syncResource, this.environmentService, this.uriIdentityService.extUri);\n\t\t\tif (await this.fileService.exists(resource)) {\n\t\t\t\tresult.push({\n\t\t\t\t\thandle: resource.toString(),\n\t\t\t\t\tlabel: { label: getSyncAreaLabel(syncResource) },\n\t\t\t\t\tcollapsibleState: TreeItemCollapsibleState.None,\n\t\t\t\t\tresourceUri: resource,\n\t\t\t\t\tcommand: { id: API_OPEN_EDITOR_COMMAND_ID, title: '', arguments: [resource, undefined, undefined] },\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate async getSyncLogs(): Promise<ITreeItem[]> {\n\t\tconst logResources = await this.userDataSyncWorkbenchService.getAllLogResources();\n\t\tconst result: ITreeItem[] = [];\n\t\tfor (const syncLogResource of logResources) {\n\t\t\tconst logFolder = this.uriIdentityService.extUri.dirname(syncLogResource);\n\t\t\tresult.push({\n\t\t\t\thandle: syncLogResource.toString(),\n\t\t\t\tcollapsibleState: TreeItemCollapsibleState.None,\n\t\t\t\tresourceUri: syncLogResource,\n\t\t\t\tlabel: { label: this.uriIdentityService.extUri.basename(logFolder) },\n\t\t\t\tdescription: this.uriIdentityService.extUri.isEqual(logFolder, this.environmentService.logsHome) ? localize({ key: 'current', comment: ['Represents current log file'] }, \"Current\") : undefined,\n\t\t\t\tcommand: { id: API_OPEN_EDITOR_COMMAND_ID, title: '', arguments: [syncLogResource, undefined, undefined] },\n\t\t\t});\n\t\t}\n\t\treturn result;\n\t}\n\n}\n"],
  "mappings": "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",
  "names": ["handle"]
}
