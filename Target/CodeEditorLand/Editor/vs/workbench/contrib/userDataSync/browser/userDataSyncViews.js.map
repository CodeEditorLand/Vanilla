{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/userDataSync/browser/userDataSyncViews.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Action } from \"../../../../base/common/actions.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { fromNow } from \"../../../../base/common/date.js\";\nimport { Event } from \"../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n} from \"../../../../base/common/lifecycle.js\";\nimport { basename } from \"../../../../base/common/resources.js\";\nimport { URI, type UriDto } from \"../../../../base/common/uri.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tIDialogService,\n\tIFileDialogService,\n} from \"../../../../platform/dialogs/common/dialogs.js\";\nimport { IEnvironmentService } from \"../../../../platform/environment/common/environment.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport { SyncDescriptor } from \"../../../../platform/instantiation/common/descriptors.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tINotificationService,\n\tSeverity,\n} from \"../../../../platform/notification/common/notification.js\";\nimport { IQuickInputService } from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { FolderThemeIcon } from \"../../../../platform/theme/common/themeService.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport {\n\ttype IUserDataProfile,\n\tIUserDataProfilesService,\n} from \"../../../../platform/userDataProfile/common/userDataProfile.js\";\nimport {\n\tALL_SYNC_RESOURCES,\n\ttype ISyncResourceHandle as IResourceHandle,\n\ttype ISyncUserDataProfile,\n\tIUserDataAutoSyncService,\n\tIUserDataSyncEnablementService,\n\tIUserDataSyncResourceProviderService,\n\tIUserDataSyncService,\n\tSyncResource,\n\tSyncStatus,\n\tUserDataSyncError,\n\tUserDataSyncErrorCode,\n\tgetLastSyncResourceUri,\n} from \"../../../../platform/userDataSync/common/userDataSync.js\";\nimport {\n\ttype IUserDataSyncMachine,\n\tIUserDataSyncMachinesService,\n\tisWebPlatform,\n} from \"../../../../platform/userDataSync/common/userDataSyncMachines.js\";\nimport {\n\tAPI_OPEN_DIFF_EDITOR_COMMAND_ID,\n\tAPI_OPEN_EDITOR_COMMAND_ID,\n} from \"../../../browser/parts/editor/editorCommands.js\";\nimport {\n\tTreeView,\n\tTreeViewPane,\n} from \"../../../browser/parts/views/treeView.js\";\nimport {\n\tExtensions,\n\ttype ITreeItem,\n\ttype ITreeViewDataProvider,\n\ttype ITreeViewDescriptor,\n\ttype IViewsRegistry,\n\tTreeItemCollapsibleState,\n\ttype TreeViewItemHandleArg,\n\ttype ViewContainer,\n} from \"../../../common/views.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport {\n\tAccountStatus,\n\tCONTEXT_ACCOUNT_STATE,\n\tCONTEXT_ENABLE_ACTIVITY_VIEWS,\n\tCONTEXT_ENABLE_SYNC_CONFLICTS_VIEW,\n\tCONTEXT_HAS_CONFLICTS,\n\tCONTEXT_SYNC_STATE,\n\tIUserDataSyncWorkbenchService,\n\tSYNC_CONFLICTS_VIEW_ID,\n\tSYNC_TITLE,\n\tgetSyncAreaLabel,\n} from \"../../../services/userDataSync/common/userDataSync.js\";\nimport { UserDataSyncConflictsViewPane } from \"./userDataSyncConflictsView.js\";\n\nexport class UserDataSyncDataViews extends Disposable {\n\tconstructor(\n\t\tcontainer: ViewContainer,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\t@IUserDataSyncEnablementService\n\t\tprivate readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@IUserDataSyncMachinesService\n\t\tprivate readonly userDataSyncMachinesService: IUserDataSyncMachinesService,\n\t\t@IUserDataSyncService\n\t\tprivate readonly userDataSyncService: IUserDataSyncService,\n\t) {\n\t\tsuper();\n\t\tthis.registerViews(container);\n\t}\n\n\tprivate registerViews(container: ViewContainer): void {\n\t\tthis.registerConflictsView(container);\n\n\t\tthis.registerActivityView(container, true);\n\t\tthis.registerMachinesView(container);\n\n\t\tthis.registerActivityView(container, false);\n\t\tthis.registerTroubleShootView(container);\n\t\tthis.registerExternalActivityView(container);\n\t}\n\n\tprivate registerConflictsView(container: ViewContainer): void {\n\t\tconst viewsRegistry = Registry.as<IViewsRegistry>(\n\t\t\tExtensions.ViewsRegistry,\n\t\t);\n\t\tconst viewName = localize2(\"conflicts\", \"Conflicts\");\n\t\tconst viewDescriptor: ITreeViewDescriptor = {\n\t\t\tid: SYNC_CONFLICTS_VIEW_ID,\n\t\t\tname: viewName,\n\t\t\tctorDescriptor: new SyncDescriptor(UserDataSyncConflictsViewPane),\n\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\tCONTEXT_ENABLE_SYNC_CONFLICTS_VIEW,\n\t\t\t\tCONTEXT_HAS_CONFLICTS,\n\t\t\t),\n\t\t\tcanToggleVisibility: false,\n\t\t\tcanMoveView: false,\n\t\t\ttreeView: this.instantiationService.createInstance(\n\t\t\t\tTreeView,\n\t\t\t\tSYNC_CONFLICTS_VIEW_ID,\n\t\t\t\tviewName.value,\n\t\t\t),\n\t\t\tcollapsed: false,\n\t\t\torder: 100,\n\t\t};\n\t\tviewsRegistry.registerViews([viewDescriptor], container);\n\t}\n\n\tprivate registerMachinesView(container: ViewContainer): void {\n\t\tconst id = `workbench.views.sync.machines`;\n\t\tconst name = localize2(\"synced machines\", \"Synced Machines\");\n\t\tconst treeView = this.instantiationService.createInstance(\n\t\t\tTreeView,\n\t\t\tid,\n\t\t\tname.value,\n\t\t);\n\t\tconst dataProvider = this.instantiationService.createInstance(\n\t\t\tUserDataSyncMachinesViewDataProvider,\n\t\t\ttreeView,\n\t\t);\n\t\ttreeView.showRefreshAction = true;\n\t\ttreeView.canSelectMany = true;\n\t\ttreeView.dataProvider = dataProvider;\n\n\t\tthis._register(\n\t\t\tEvent.any(\n\t\t\t\tthis.userDataSyncMachinesService.onDidChange,\n\t\t\t\tthis.userDataSyncService.onDidResetRemote,\n\t\t\t)(() => treeView.refresh()),\n\t\t);\n\t\tconst viewsRegistry = Registry.as<IViewsRegistry>(\n\t\t\tExtensions.ViewsRegistry,\n\t\t);\n\t\tconst viewDescriptor: ITreeViewDescriptor = {\n\t\t\tid,\n\t\t\tname,\n\t\t\tctorDescriptor: new SyncDescriptor(TreeViewPane),\n\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\tCONTEXT_SYNC_STATE.notEqualsTo(SyncStatus.Uninitialized),\n\t\t\t\tCONTEXT_ACCOUNT_STATE.isEqualTo(AccountStatus.Available),\n\t\t\t\tCONTEXT_ENABLE_ACTIVITY_VIEWS,\n\t\t\t),\n\t\t\tcanToggleVisibility: true,\n\t\t\tcanMoveView: false,\n\t\t\ttreeView,\n\t\t\tcollapsed: false,\n\t\t\torder: 300,\n\t\t};\n\t\tviewsRegistry.registerViews([viewDescriptor], container);\n\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: `workbench.actions.sync.editMachineName`,\n\t\t\t\t\t\t\ttitle: localize(\n\t\t\t\t\t\t\t\t\"workbench.actions.sync.editMachineName\",\n\t\t\t\t\t\t\t\t\"Edit Name\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ticon: Codicon.edit,\n\t\t\t\t\t\t\tmenu: {\n\t\t\t\t\t\t\t\tid: MenuId.ViewItemContext,\n\t\t\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\t\t\tContextKeyExpr.equals(\"view\", id),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tgroup: \"inline\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tasync run(\n\t\t\t\t\t\taccessor: ServicesAccessor,\n\t\t\t\t\t\thandle: TreeViewItemHandleArg,\n\t\t\t\t\t): Promise<void> {\n\t\t\t\t\t\tconst changed = await dataProvider.rename(\n\t\t\t\t\t\t\thandle.$treeItemHandle,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (changed) {\n\t\t\t\t\t\t\tawait treeView.refresh();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: `workbench.actions.sync.turnOffSyncOnMachine`,\n\t\t\t\t\t\t\ttitle: localize(\n\t\t\t\t\t\t\t\t\"workbench.actions.sync.turnOffSyncOnMachine\",\n\t\t\t\t\t\t\t\t\"Turn off Settings Sync\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tmenu: {\n\t\t\t\t\t\t\t\tid: MenuId.ViewItemContext,\n\t\t\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\t\t\tContextKeyExpr.equals(\"view\", id),\n\t\t\t\t\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\t\t\t\t\"viewItem\",\n\t\t\t\t\t\t\t\t\t\t\"sync-machine\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tasync run(\n\t\t\t\t\t\taccessor: ServicesAccessor,\n\t\t\t\t\t\thandle: TreeViewItemHandleArg,\n\t\t\t\t\t\tselected?: TreeViewItemHandleArg[],\n\t\t\t\t\t): Promise<void> {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tawait dataProvider.disable(\n\t\t\t\t\t\t\t\t(selected || [handle]).map(\n\t\t\t\t\t\t\t\t\t(handle) => handle.$treeItemHandle,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tawait treeView.refresh();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate registerActivityView(\n\t\tcontainer: ViewContainer,\n\t\tremote: boolean,\n\t): void {\n\t\tconst id = `workbench.views.sync.${remote ? \"remote\" : \"local\"}Activity`;\n\t\tconst name = remote\n\t\t\t? localize2(\"remote sync activity title\", \"Sync Activity (Remote)\")\n\t\t\t: localize2(\"local sync activity title\", \"Sync Activity (Local)\");\n\t\tconst treeView = this.instantiationService.createInstance(\n\t\t\tTreeView,\n\t\t\tid,\n\t\t\tname.value,\n\t\t);\n\t\ttreeView.showCollapseAllAction = true;\n\t\ttreeView.showRefreshAction = true;\n\t\ttreeView.dataProvider = remote\n\t\t\t? this.instantiationService.createInstance(\n\t\t\t\t\tRemoteUserDataSyncActivityViewDataProvider,\n\t\t\t\t)\n\t\t\t: this.instantiationService.createInstance(\n\t\t\t\t\tLocalUserDataSyncActivityViewDataProvider,\n\t\t\t\t);\n\n\t\tthis._register(\n\t\t\tEvent.any(\n\t\t\t\tthis.userDataSyncEnablementService\n\t\t\t\t\t.onDidChangeResourceEnablement,\n\t\t\t\tthis.userDataSyncEnablementService.onDidChangeEnablement,\n\t\t\t\tthis.userDataSyncService.onDidResetLocal,\n\t\t\t\tthis.userDataSyncService.onDidResetRemote,\n\t\t\t)(() => treeView.refresh()),\n\t\t);\n\t\tconst viewsRegistry = Registry.as<IViewsRegistry>(\n\t\t\tExtensions.ViewsRegistry,\n\t\t);\n\t\tconst viewDescriptor: ITreeViewDescriptor = {\n\t\t\tid,\n\t\t\tname,\n\t\t\tctorDescriptor: new SyncDescriptor(TreeViewPane),\n\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\tCONTEXT_SYNC_STATE.notEqualsTo(SyncStatus.Uninitialized),\n\t\t\t\tCONTEXT_ACCOUNT_STATE.isEqualTo(AccountStatus.Available),\n\t\t\t\tCONTEXT_ENABLE_ACTIVITY_VIEWS,\n\t\t\t),\n\t\t\tcanToggleVisibility: true,\n\t\t\tcanMoveView: false,\n\t\t\ttreeView,\n\t\t\tcollapsed: false,\n\t\t\torder: remote ? 200 : 400,\n\t\t\thideByDefault: !remote,\n\t\t};\n\t\tviewsRegistry.registerViews([viewDescriptor], container);\n\n\t\tthis.registerDataViewActions(id);\n\t}\n\n\tprivate registerExternalActivityView(container: ViewContainer): void {\n\t\tconst id = `workbench.views.sync.externalActivity`;\n\t\tconst name = localize2(\n\t\t\t\"downloaded sync activity title\",\n\t\t\t\"Sync Activity (Developer)\",\n\t\t);\n\t\tconst dataProvider = this.instantiationService.createInstance(\n\t\t\tExtractedUserDataSyncActivityViewDataProvider,\n\t\t\tundefined,\n\t\t);\n\t\tconst treeView = this.instantiationService.createInstance(\n\t\t\tTreeView,\n\t\t\tid,\n\t\t\tname.value,\n\t\t);\n\t\ttreeView.showCollapseAllAction = false;\n\t\ttreeView.showRefreshAction = false;\n\t\ttreeView.dataProvider = dataProvider;\n\n\t\tconst viewsRegistry = Registry.as<IViewsRegistry>(\n\t\t\tExtensions.ViewsRegistry,\n\t\t);\n\t\tconst viewDescriptor: ITreeViewDescriptor = {\n\t\t\tid,\n\t\t\tname,\n\t\t\tctorDescriptor: new SyncDescriptor(TreeViewPane),\n\t\t\twhen: CONTEXT_ENABLE_ACTIVITY_VIEWS,\n\t\t\tcanToggleVisibility: true,\n\t\t\tcanMoveView: false,\n\t\t\ttreeView,\n\t\t\tcollapsed: false,\n\t\t\thideByDefault: false,\n\t\t};\n\t\tviewsRegistry.registerViews([viewDescriptor], container);\n\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: `workbench.actions.sync.loadActivity`,\n\t\t\t\t\t\t\ttitle: localize(\n\t\t\t\t\t\t\t\t\"workbench.actions.sync.loadActivity\",\n\t\t\t\t\t\t\t\t\"Load Sync Activity\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ticon: Codicon.cloudUpload,\n\t\t\t\t\t\t\tmenu: {\n\t\t\t\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\t\t\t\twhen: ContextKeyExpr.equals(\"view\", id),\n\t\t\t\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\t\t\tconst fileDialogService =\n\t\t\t\t\t\t\taccessor.get(IFileDialogService);\n\t\t\t\t\t\tconst result = await fileDialogService.showOpenDialog({\n\t\t\t\t\t\t\ttitle: localize(\n\t\t\t\t\t\t\t\t\"select sync activity file\",\n\t\t\t\t\t\t\t\t\"Select Sync Activity File or Folder\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tcanSelectFiles: true,\n\t\t\t\t\t\t\tcanSelectFolders: true,\n\t\t\t\t\t\t\tcanSelectMany: false,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (!result?.[0]) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdataProvider.activityDataResource = result[0];\n\t\t\t\t\t\tawait treeView.refresh();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate registerDataViewActions(viewId: string) {\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: `workbench.actions.sync.${viewId}.resolveResource`,\n\t\t\t\t\t\t\ttitle: localize(\n\t\t\t\t\t\t\t\t\"workbench.actions.sync.resolveResourceRef\",\n\t\t\t\t\t\t\t\t\"Show raw JSON sync data\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tmenu: {\n\t\t\t\t\t\t\t\tid: MenuId.ViewItemContext,\n\t\t\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\t\t\tContextKeyExpr.equals(\"view\", viewId),\n\t\t\t\t\t\t\t\t\tContextKeyExpr.regex(\n\t\t\t\t\t\t\t\t\t\t\"viewItem\",\n\t\t\t\t\t\t\t\t\t\t/sync-resource-.*/i,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tasync run(\n\t\t\t\t\t\taccessor: ServicesAccessor,\n\t\t\t\t\t\thandle: TreeViewItemHandleArg,\n\t\t\t\t\t): Promise<void> {\n\t\t\t\t\t\tconst { resource } = <{ resource: string }>(\n\t\t\t\t\t\t\tJSON.parse(handle.$treeItemHandle)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\t\t\t\tawait editorService.openEditor({\n\t\t\t\t\t\t\tresource: URI.parse(resource),\n\t\t\t\t\t\t\toptions: { pinned: true },\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: `workbench.actions.sync.${viewId}.compareWithLocal`,\n\t\t\t\t\t\t\ttitle: localize(\n\t\t\t\t\t\t\t\t\"workbench.actions.sync.compareWithLocal\",\n\t\t\t\t\t\t\t\t\"Compare with Local\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tmenu: {\n\t\t\t\t\t\t\t\tid: MenuId.ViewItemContext,\n\t\t\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\t\t\tContextKeyExpr.equals(\"view\", viewId),\n\t\t\t\t\t\t\t\t\tContextKeyExpr.regex(\n\t\t\t\t\t\t\t\t\t\t\"viewItem\",\n\t\t\t\t\t\t\t\t\t\t/sync-associatedResource-.*/i,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tasync run(\n\t\t\t\t\t\taccessor: ServicesAccessor,\n\t\t\t\t\t\thandle: TreeViewItemHandleArg,\n\t\t\t\t\t): Promise<void> {\n\t\t\t\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\t\t\t\tconst { resource, comparableResource } = <\n\t\t\t\t\t\t\t{ resource: string; comparableResource: string }\n\t\t\t\t\t\t>JSON.parse(handle.$treeItemHandle);\n\t\t\t\t\t\tconst remoteResource = URI.parse(resource);\n\t\t\t\t\t\tconst localResource = URI.parse(comparableResource);\n\t\t\t\t\t\treturn commandService.executeCommand(\n\t\t\t\t\t\t\tAPI_OPEN_DIFF_EDITOR_COMMAND_ID,\n\t\t\t\t\t\t\tremoteResource,\n\t\t\t\t\t\t\tlocalResource,\n\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\"remoteToLocalDiff\",\n\t\t\t\t\t\t\t\t\"{0} \u2194 {1}\",\n\t\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tkey: \"leftResourceName\",\n\t\t\t\t\t\t\t\t\t\tcomment: [\"remote as in file in cloud\"],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"{0} (Remote)\",\n\t\t\t\t\t\t\t\t\tbasename(remoteResource),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tkey: \"rightResourceName\",\n\t\t\t\t\t\t\t\t\t\tcomment: [\"local as in file in disk\"],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"{0} (Local)\",\n\t\t\t\t\t\t\t\t\tbasename(localResource),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: `workbench.actions.sync.${viewId}.replaceCurrent`,\n\t\t\t\t\t\t\ttitle: localize(\n\t\t\t\t\t\t\t\t\"workbench.actions.sync.replaceCurrent\",\n\t\t\t\t\t\t\t\t\"Restore\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ticon: Codicon.discard,\n\t\t\t\t\t\t\tmenu: {\n\t\t\t\t\t\t\t\tid: MenuId.ViewItemContext,\n\t\t\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\t\t\tContextKeyExpr.equals(\"view\", viewId),\n\t\t\t\t\t\t\t\t\tContextKeyExpr.regex(\n\t\t\t\t\t\t\t\t\t\t\"viewItem\",\n\t\t\t\t\t\t\t\t\t\t/sync-resource-.*/i,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tContextKeyExpr.notEquals(\n\t\t\t\t\t\t\t\t\t\t\"viewItem\",\n\t\t\t\t\t\t\t\t\t\t`sync-resource-${SyncResource.Profiles}`,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tgroup: \"inline\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tasync run(\n\t\t\t\t\t\taccessor: ServicesAccessor,\n\t\t\t\t\t\thandle: TreeViewItemHandleArg,\n\t\t\t\t\t): Promise<void> {\n\t\t\t\t\t\tconst dialogService = accessor.get(IDialogService);\n\t\t\t\t\t\tconst userDataSyncService =\n\t\t\t\t\t\t\taccessor.get(IUserDataSyncService);\n\t\t\t\t\t\tconst { syncResourceHandle, syncResource } = <\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsyncResourceHandle: UriDto<ISyncResourceHandle>;\n\t\t\t\t\t\t\t\tsyncResource: SyncResource;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>JSON.parse(handle.$treeItemHandle);\n\t\t\t\t\t\tconst result = await dialogService.confirm({\n\t\t\t\t\t\t\tmessage: localize(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tkey: \"confirm replace\",\n\t\t\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\t\t\"A confirmation message to replace current user data (settings, extensions, keybindings, snippets) with selected version\",\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"Would you like to replace your current {0} with selected?\",\n\t\t\t\t\t\t\t\tgetSyncAreaLabel(syncResource),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttype: \"info\",\n\t\t\t\t\t\t\ttitle: SYNC_TITLE.value,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (result.confirmed) {\n\t\t\t\t\t\t\treturn userDataSyncService.replace({\n\t\t\t\t\t\t\t\tcreated: syncResourceHandle.created,\n\t\t\t\t\t\t\t\turi: URI.revive(syncResourceHandle.uri),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate registerTroubleShootView(container: ViewContainer): void {\n\t\tconst id = `workbench.views.sync.troubleshoot`;\n\t\tconst name = localize2(\"troubleshoot\", \"Troubleshoot\");\n\t\tconst treeView = this.instantiationService.createInstance(\n\t\t\tTreeView,\n\t\t\tid,\n\t\t\tname.value,\n\t\t);\n\t\tconst dataProvider = this.instantiationService.createInstance(\n\t\t\tUserDataSyncTroubleshootViewDataProvider,\n\t\t);\n\t\ttreeView.showRefreshAction = true;\n\t\ttreeView.dataProvider = dataProvider;\n\n\t\tconst viewsRegistry = Registry.as<IViewsRegistry>(\n\t\t\tExtensions.ViewsRegistry,\n\t\t);\n\t\tconst viewDescriptor: ITreeViewDescriptor = {\n\t\t\tid,\n\t\t\tname,\n\t\t\tctorDescriptor: new SyncDescriptor(TreeViewPane),\n\t\t\twhen: CONTEXT_ENABLE_ACTIVITY_VIEWS,\n\t\t\tcanToggleVisibility: true,\n\t\t\tcanMoveView: false,\n\t\t\ttreeView,\n\t\t\tcollapsed: false,\n\t\t\torder: 500,\n\t\t\thideByDefault: true,\n\t\t};\n\t\tviewsRegistry.registerViews([viewDescriptor], container);\n\t}\n}\n\ntype Profile = IUserDataProfile | ISyncUserDataProfile;\n\ninterface ISyncResourceHandle extends IResourceHandle {\n\tprofileId?: string;\n\tsyncResource: SyncResource;\n\tprevious?: IResourceHandle;\n}\n\ninterface SyncResourceHandleTreeItem extends ITreeItem {\n\tsyncResourceHandle: ISyncResourceHandle;\n}\n\ninterface ProfileTreeItem extends ITreeItem {\n\tprofile: Profile;\n}\n\nabstract class UserDataSyncActivityViewDataProvider<T = Profile>\n\timplements ITreeViewDataProvider\n{\n\tprivate readonly syncResourceHandlesByProfile = new Map<\n\t\tstring,\n\t\tPromise<SyncResourceHandleTreeItem[]>\n\t>();\n\n\tconstructor(\n\t\t@IUserDataSyncService\n\t\tprotected readonly userDataSyncService: IUserDataSyncService,\n\t\t@IUserDataSyncResourceProviderService\n\t\tprotected readonly userDataSyncResourceProviderService: IUserDataSyncResourceProviderService,\n\t\t@IUserDataAutoSyncService\n\t\tprotected readonly userDataAutoSyncService: IUserDataAutoSyncService,\n\t\t@IUserDataSyncWorkbenchService\n\t\tprivate readonly userDataSyncWorkbenchService: IUserDataSyncWorkbenchService,\n\t\t@INotificationService\n\t\tprivate readonly notificationService: INotificationService,\n\t\t@IUserDataProfilesService\n\t\tprotected readonly userDataProfilesService: IUserDataProfilesService,\n\t) {}\n\n\tasync getChildren(element?: ITreeItem): Promise<ITreeItem[]> {\n\t\ttry {\n\t\t\tif (!element) {\n\t\t\t\treturn await this.getRoots();\n\t\t\t}\n\t\t\tif (\n\t\t\t\t(<ProfileTreeItem>element).profile ||\n\t\t\t\telement.handle ===\n\t\t\t\t\tthis.userDataProfilesService.defaultProfile.id\n\t\t\t) {\n\t\t\t\tlet promise = this.syncResourceHandlesByProfile.get(\n\t\t\t\t\telement.handle,\n\t\t\t\t);\n\t\t\t\tif (!promise) {\n\t\t\t\t\tthis.syncResourceHandlesByProfile.set(\n\t\t\t\t\t\telement.handle,\n\t\t\t\t\t\t(promise = this.getSyncResourceHandles(\n\t\t\t\t\t\t\t<T>(<ProfileTreeItem>element).profile,\n\t\t\t\t\t\t)),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn await promise;\n\t\t\t}\n\t\t\tif ((<SyncResourceHandleTreeItem>element).syncResourceHandle) {\n\t\t\t\treturn await this.getChildrenForSyncResourceTreeItem(\n\t\t\t\t\t<SyncResourceHandleTreeItem>element,\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn [];\n\t\t} catch (error) {\n\t\t\tif (!(error instanceof UserDataSyncError)) {\n\t\t\t\terror = UserDataSyncError.toUserDataSyncError(error);\n\t\t\t}\n\t\t\tif (\n\t\t\t\terror instanceof UserDataSyncError &&\n\t\t\t\terror.code === UserDataSyncErrorCode.IncompatibleRemoteContent\n\t\t\t) {\n\t\t\t\tthis.notificationService.notify({\n\t\t\t\t\tseverity: Severity.Error,\n\t\t\t\t\tmessage: error.message,\n\t\t\t\t\tactions: {\n\t\t\t\t\t\tprimary: [\n\t\t\t\t\t\t\tnew Action(\n\t\t\t\t\t\t\t\t\"reset\",\n\t\t\t\t\t\t\t\tlocalize(\"reset\", \"Reset Synced Data\"),\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\t\tthis.userDataSyncWorkbenchService.resetSyncedData(),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.notificationService.error(error);\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async getRoots(): Promise<ITreeItem[]> {\n\t\tthis.syncResourceHandlesByProfile.clear();\n\n\t\tconst roots: ITreeItem[] = [];\n\n\t\tconst profiles = await this.getProfiles();\n\t\tif (profiles.length) {\n\t\t\tconst profileTreeItem = {\n\t\t\t\thandle: this.userDataProfilesService.defaultProfile.id,\n\t\t\t\tlabel: {\n\t\t\t\t\tlabel: this.userDataProfilesService.defaultProfile.name,\n\t\t\t\t},\n\t\t\t\tcollapsibleState: TreeItemCollapsibleState.Expanded,\n\t\t\t};\n\t\t\troots.push(profileTreeItem);\n\t\t} else {\n\t\t\tconst defaultSyncResourceHandles =\n\t\t\t\tawait this.getSyncResourceHandles();\n\t\t\troots.push(...defaultSyncResourceHandles);\n\t\t}\n\n\t\tfor (const profile of profiles) {\n\t\t\tconst profileTreeItem: ProfileTreeItem = {\n\t\t\t\thandle: profile.id,\n\t\t\t\tlabel: { label: profile.name },\n\t\t\t\tcollapsibleState: TreeItemCollapsibleState.Collapsed,\n\t\t\t\tprofile,\n\t\t\t};\n\t\t\troots.push(profileTreeItem);\n\t\t}\n\n\t\treturn roots;\n\t}\n\n\tprotected async getChildrenForSyncResourceTreeItem(\n\t\telement: SyncResourceHandleTreeItem,\n\t): Promise<ITreeItem[]> {\n\t\tconst syncResourceHandle = (<SyncResourceHandleTreeItem>element)\n\t\t\t.syncResourceHandle;\n\t\tconst associatedResources =\n\t\t\tawait this.userDataSyncResourceProviderService.getAssociatedResources(\n\t\t\t\tsyncResourceHandle,\n\t\t\t);\n\t\tconst previousAssociatedResources = syncResourceHandle.previous\n\t\t\t? await this.userDataSyncResourceProviderService.getAssociatedResources(\n\t\t\t\t\tsyncResourceHandle.previous,\n\t\t\t\t)\n\t\t\t: [];\n\t\treturn associatedResources.map(({ resource, comparableResource }) => {\n\t\t\tconst handle = JSON.stringify({\n\t\t\t\tresource: resource.toString(),\n\t\t\t\tcomparableResource: comparableResource.toString(),\n\t\t\t});\n\t\t\tconst previousResource = previousAssociatedResources.find(\n\t\t\t\t(previous) =>\n\t\t\t\t\tbasename(previous.resource) === basename(resource),\n\t\t\t)?.resource;\n\t\t\treturn {\n\t\t\t\thandle,\n\t\t\t\tcollapsibleState: TreeItemCollapsibleState.None,\n\t\t\t\tresourceUri: resource,\n\t\t\t\tcommand: previousResource\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tid: API_OPEN_DIFF_EDITOR_COMMAND_ID,\n\t\t\t\t\t\t\ttitle: \"\",\n\t\t\t\t\t\t\targuments: [\n\t\t\t\t\t\t\t\tpreviousResource,\n\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\t\"sideBySideLabels\",\n\t\t\t\t\t\t\t\t\t\"{0} \u2194 {1}\",\n\t\t\t\t\t\t\t\t\t`${basename(resource)} (${fromNow(syncResourceHandle.previous!.created, true)})`,\n\t\t\t\t\t\t\t\t\t`${basename(resource)} (${fromNow(syncResourceHandle.created, true)})`,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t}\n\t\t\t\t\t: {\n\t\t\t\t\t\t\tid: API_OPEN_EDITOR_COMMAND_ID,\n\t\t\t\t\t\t\ttitle: \"\",\n\t\t\t\t\t\t\targuments: [resource, undefined, undefined],\n\t\t\t\t\t\t},\n\t\t\t\tcontextValue: `sync-associatedResource-${syncResourceHandle.syncResource}`,\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate async getSyncResourceHandles(\n\t\tprofile?: T,\n\t): Promise<SyncResourceHandleTreeItem[]> {\n\t\tconst treeItems: SyncResourceHandleTreeItem[] = [];\n\t\tconst result = await Promise.all(\n\t\t\tALL_SYNC_RESOURCES.map(async (syncResource) => {\n\t\t\t\tconst resourceHandles = await this.getResourceHandles(\n\t\t\t\t\tsyncResource,\n\t\t\t\t\tprofile,\n\t\t\t\t);\n\t\t\t\treturn resourceHandles.map((resourceHandle, index) => ({\n\t\t\t\t\t...resourceHandle,\n\t\t\t\t\tsyncResource,\n\t\t\t\t\tprevious: resourceHandles[index + 1],\n\t\t\t\t}));\n\t\t\t}),\n\t\t);\n\t\tconst syncResourceHandles = result\n\t\t\t.flat()\n\t\t\t.sort((a, b) => b.created - a.created);\n\t\tfor (const syncResourceHandle of syncResourceHandles) {\n\t\t\tconst handle = JSON.stringify({\n\t\t\t\tsyncResourceHandle,\n\t\t\t\tsyncResource: syncResourceHandle.syncResource,\n\t\t\t});\n\t\t\ttreeItems.push({\n\t\t\t\thandle,\n\t\t\t\tcollapsibleState: TreeItemCollapsibleState.Collapsed,\n\t\t\t\tlabel: {\n\t\t\t\t\tlabel: getSyncAreaLabel(syncResourceHandle.syncResource),\n\t\t\t\t},\n\t\t\t\tdescription: fromNow(syncResourceHandle.created, true),\n\t\t\t\ttooltip: new Date(syncResourceHandle.created).toLocaleString(),\n\t\t\t\tthemeIcon: FolderThemeIcon,\n\t\t\t\tsyncResourceHandle,\n\t\t\t\tcontextValue: `sync-resource-${syncResourceHandle.syncResource}`,\n\t\t\t});\n\t\t}\n\t\treturn treeItems;\n\t}\n\n\tprotected abstract getProfiles(): Promise<Profile[]>;\n\tprotected abstract getResourceHandles(\n\t\tsyncResource: SyncResource,\n\t\tprofile?: T,\n\t): Promise<IResourceHandle[]>;\n}\n\nclass LocalUserDataSyncActivityViewDataProvider extends UserDataSyncActivityViewDataProvider<ISyncUserDataProfile> {\n\tprotected getResourceHandles(\n\t\tsyncResource: SyncResource,\n\t\tprofile: ISyncUserDataProfile | undefined,\n\t): Promise<IResourceHandle[]> {\n\t\treturn this.userDataSyncResourceProviderService.getLocalSyncResourceHandles(\n\t\t\tsyncResource,\n\t\t\tprofile,\n\t\t);\n\t}\n\n\tprotected async getProfiles(): Promise<ISyncUserDataProfile[]> {\n\t\treturn this.userDataProfilesService.profiles\n\t\t\t.filter((p) => !p.isDefault)\n\t\t\t.map((p) => ({\n\t\t\t\tid: p.id,\n\t\t\t\tcollection: p.id,\n\t\t\t\tname: p.name,\n\t\t\t}));\n\t}\n}\n\nclass RemoteUserDataSyncActivityViewDataProvider extends UserDataSyncActivityViewDataProvider<ISyncUserDataProfile> {\n\tprivate machinesPromise: Promise<IUserDataSyncMachine[]> | undefined;\n\n\tconstructor(\n\t\t@IUserDataSyncService userDataSyncService: IUserDataSyncService,\n\t\t@IUserDataSyncResourceProviderService\n\t\tuserDataSyncResourceProviderService: IUserDataSyncResourceProviderService,\n\t\t@IUserDataAutoSyncService\n\t\tuserDataAutoSyncService: IUserDataAutoSyncService,\n\t\t@IUserDataSyncMachinesService\n\t\tprivate readonly userDataSyncMachinesService: IUserDataSyncMachinesService,\n\t\t@IUserDataSyncWorkbenchService\n\t\tuserDataSyncWorkbenchService: IUserDataSyncWorkbenchService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IUserDataProfilesService\n\t\tuserDataProfilesService: IUserDataProfilesService,\n\t) {\n\t\tsuper(\n\t\t\tuserDataSyncService,\n\t\t\tuserDataSyncResourceProviderService,\n\t\t\tuserDataAutoSyncService,\n\t\t\tuserDataSyncWorkbenchService,\n\t\t\tnotificationService,\n\t\t\tuserDataProfilesService,\n\t\t);\n\t}\n\n\toverride async getChildren(element?: ITreeItem): Promise<ITreeItem[]> {\n\t\tif (!element) {\n\t\t\tthis.machinesPromise = undefined;\n\t\t}\n\t\treturn super.getChildren(element);\n\t}\n\n\tprivate getMachines(): Promise<IUserDataSyncMachine[]> {\n\t\tif (this.machinesPromise === undefined) {\n\t\t\tthis.machinesPromise =\n\t\t\t\tthis.userDataSyncMachinesService.getMachines();\n\t\t}\n\t\treturn this.machinesPromise;\n\t}\n\n\tprotected getResourceHandles(\n\t\tsyncResource: SyncResource,\n\t\tprofile?: ISyncUserDataProfile,\n\t): Promise<IResourceHandle[]> {\n\t\treturn this.userDataSyncResourceProviderService.getRemoteSyncResourceHandles(\n\t\t\tsyncResource,\n\t\t\tprofile,\n\t\t);\n\t}\n\n\tprotected getProfiles(): Promise<ISyncUserDataProfile[]> {\n\t\treturn this.userDataSyncResourceProviderService.getRemoteSyncedProfiles();\n\t}\n\n\tprotected override async getChildrenForSyncResourceTreeItem(\n\t\telement: SyncResourceHandleTreeItem,\n\t): Promise<ITreeItem[]> {\n\t\tconst children = await super.getChildrenForSyncResourceTreeItem(\n\t\t\telement,\n\t\t);\n\t\tif (children.length) {\n\t\t\tconst machineId =\n\t\t\t\tawait this.userDataSyncResourceProviderService.getMachineId(\n\t\t\t\t\telement.syncResourceHandle,\n\t\t\t\t);\n\t\t\tif (machineId) {\n\t\t\t\tconst machines = await this.getMachines();\n\t\t\t\tconst machine = machines.find(({ id }) => id === machineId);\n\t\t\t\tchildren[0].description = machine?.isCurrent\n\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"current\",\n\t\t\t\t\t\t\t\tcomment: [\"Represents current machine\"],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"Current\",\n\t\t\t\t\t\t)\n\t\t\t\t\t: machine?.name;\n\t\t\t}\n\t\t}\n\t\treturn children;\n\t}\n}\n\nclass ExtractedUserDataSyncActivityViewDataProvider extends UserDataSyncActivityViewDataProvider<ISyncUserDataProfile> {\n\tprivate machinesPromise: Promise<IUserDataSyncMachine[]> | undefined;\n\n\tprivate activityDataLocation: URI | undefined;\n\n\tconstructor(\n\t\tpublic activityDataResource: URI | undefined,\n\t\t@IUserDataSyncService userDataSyncService: IUserDataSyncService,\n\t\t@IUserDataSyncResourceProviderService\n\t\tuserDataSyncResourceProviderService: IUserDataSyncResourceProviderService,\n\t\t@IUserDataAutoSyncService\n\t\tuserDataAutoSyncService: IUserDataAutoSyncService,\n\t\t@IUserDataSyncWorkbenchService\n\t\tuserDataSyncWorkbenchService: IUserDataSyncWorkbenchService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IUserDataProfilesService\n\t\tuserDataProfilesService: IUserDataProfilesService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IUriIdentityService\n\t\tprivate readonly uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(\n\t\t\tuserDataSyncService,\n\t\t\tuserDataSyncResourceProviderService,\n\t\t\tuserDataAutoSyncService,\n\t\t\tuserDataSyncWorkbenchService,\n\t\t\tnotificationService,\n\t\t\tuserDataProfilesService,\n\t\t);\n\t}\n\n\toverride async getChildren(element?: ITreeItem): Promise<ITreeItem[]> {\n\t\tif (!element) {\n\t\t\tthis.machinesPromise = undefined;\n\t\t\tif (!this.activityDataResource) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tconst stat = await this.fileService.resolve(\n\t\t\t\tthis.activityDataResource,\n\t\t\t);\n\t\t\tif (stat.isDirectory) {\n\t\t\t\tthis.activityDataLocation = this.activityDataResource;\n\t\t\t} else {\n\t\t\t\tthis.activityDataLocation =\n\t\t\t\t\tthis.uriIdentityService.extUri.joinPath(\n\t\t\t\t\t\tthis.uriIdentityService.extUri.dirname(\n\t\t\t\t\t\t\tthis.activityDataResource,\n\t\t\t\t\t\t),\n\t\t\t\t\t\t\"remoteActivity\",\n\t\t\t\t\t);\n\t\t\t\ttry {\n\t\t\t\t\tawait this.fileService.del(this.activityDataLocation, {\n\t\t\t\t\t\trecursive: true,\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\t/* ignore */\n\t\t\t\t}\n\t\t\t\tawait this.userDataSyncService.extractActivityData(\n\t\t\t\t\tthis.activityDataResource,\n\t\t\t\t\tthis.activityDataLocation,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn super.getChildren(element);\n\t}\n\n\tprotected getResourceHandles(\n\t\tsyncResource: SyncResource,\n\t\tprofile: ISyncUserDataProfile | undefined,\n\t): Promise<IResourceHandle[]> {\n\t\treturn this.userDataSyncResourceProviderService.getLocalSyncResourceHandles(\n\t\t\tsyncResource,\n\t\t\tprofile,\n\t\t\tthis.activityDataLocation,\n\t\t);\n\t}\n\n\tprotected override async getProfiles(): Promise<ISyncUserDataProfile[]> {\n\t\treturn this.userDataSyncResourceProviderService.getLocalSyncedProfiles(\n\t\t\tthis.activityDataLocation,\n\t\t);\n\t}\n\n\tprotected override async getChildrenForSyncResourceTreeItem(\n\t\telement: SyncResourceHandleTreeItem,\n\t): Promise<ITreeItem[]> {\n\t\tconst children = await super.getChildrenForSyncResourceTreeItem(\n\t\t\telement,\n\t\t);\n\t\tif (children.length) {\n\t\t\tconst machineId =\n\t\t\t\tawait this.userDataSyncResourceProviderService.getMachineId(\n\t\t\t\t\telement.syncResourceHandle,\n\t\t\t\t);\n\t\t\tif (machineId) {\n\t\t\t\tconst machines = await this.getMachines();\n\t\t\t\tconst machine = machines.find(({ id }) => id === machineId);\n\t\t\t\tchildren[0].description = machine?.isCurrent\n\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"current\",\n\t\t\t\t\t\t\t\tcomment: [\"Represents current machine\"],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"Current\",\n\t\t\t\t\t\t)\n\t\t\t\t\t: machine?.name;\n\t\t\t}\n\t\t}\n\t\treturn children;\n\t}\n\n\tprivate getMachines(): Promise<IUserDataSyncMachine[]> {\n\t\tif (this.machinesPromise === undefined) {\n\t\t\tthis.machinesPromise =\n\t\t\t\tthis.userDataSyncResourceProviderService.getLocalSyncedMachines(\n\t\t\t\t\tthis.activityDataLocation,\n\t\t\t\t);\n\t\t}\n\t\treturn this.machinesPromise;\n\t}\n}\n\nclass UserDataSyncMachinesViewDataProvider implements ITreeViewDataProvider {\n\tprivate machinesPromise: Promise<IUserDataSyncMachine[]> | undefined;\n\n\tconstructor(\n\t\tprivate readonly treeView: TreeView,\n\t\t@IUserDataSyncMachinesService\n\t\tprivate readonly userDataSyncMachinesService: IUserDataSyncMachinesService,\n\t\t@IQuickInputService\n\t\tprivate readonly quickInputService: IQuickInputService,\n\t\t@INotificationService\n\t\tprivate readonly notificationService: INotificationService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IUserDataSyncWorkbenchService\n\t\tprivate readonly userDataSyncWorkbenchService: IUserDataSyncWorkbenchService,\n\t) {}\n\n\tasync getChildren(element?: ITreeItem): Promise<ITreeItem[]> {\n\t\tif (!element) {\n\t\t\tthis.machinesPromise = undefined;\n\t\t}\n\t\ttry {\n\t\t\tlet machines = await this.getMachines();\n\t\t\tmachines = machines\n\t\t\t\t.filter((m) => !m.disabled)\n\t\t\t\t.sort((m1, m2) => (m1.isCurrent ? -1 : 1));\n\t\t\tthis.treeView.message = machines.length\n\t\t\t\t? undefined\n\t\t\t\t: localize(\"no machines\", \"No Machines\");\n\t\t\treturn machines.map(({ id, name, isCurrent, platform }) => ({\n\t\t\t\thandle: id,\n\t\t\t\tcollapsibleState: TreeItemCollapsibleState.None,\n\t\t\t\tlabel: { label: name },\n\t\t\t\tdescription: isCurrent\n\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t{ key: \"current\", comment: [\"Current machine\"] },\n\t\t\t\t\t\t\t\"Current\",\n\t\t\t\t\t\t)\n\t\t\t\t\t: undefined,\n\t\t\t\tthemeIcon:\n\t\t\t\t\tplatform && isWebPlatform(platform)\n\t\t\t\t\t\t? Codicon.globe\n\t\t\t\t\t\t: Codicon.vm,\n\t\t\t\tcontextValue: \"sync-machine\",\n\t\t\t}));\n\t\t} catch (error) {\n\t\t\tthis.notificationService.error(error);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate getMachines(): Promise<IUserDataSyncMachine[]> {\n\t\tif (this.machinesPromise === undefined) {\n\t\t\tthis.machinesPromise =\n\t\t\t\tthis.userDataSyncMachinesService.getMachines();\n\t\t}\n\t\treturn this.machinesPromise;\n\t}\n\n\tasync disable(machineIds: string[]): Promise<boolean> {\n\t\tconst machines = await this.getMachines();\n\t\tconst machinesToDisable = machines.filter(({ id }) =>\n\t\t\tmachineIds.includes(id),\n\t\t);\n\t\tif (!machinesToDisable.length) {\n\t\t\tthrow new Error(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"not found\",\n\t\t\t\t\t\"machine not found with id: {0}\",\n\t\t\t\t\tmachineIds.join(\",\"),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tconst result = await this.dialogService.confirm({\n\t\t\ttype: \"info\",\n\t\t\tmessage:\n\t\t\t\tmachinesToDisable.length > 1\n\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\"turn off sync on multiple machines\",\n\t\t\t\t\t\t\t\"Are you sure you want to turn off sync on selected machines?\",\n\t\t\t\t\t\t)\n\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\"turn off sync on machine\",\n\t\t\t\t\t\t\t\"Are you sure you want to turn off sync on {0}?\",\n\t\t\t\t\t\t\tmachinesToDisable[0].name,\n\t\t\t\t\t\t),\n\t\t\tprimaryButton: localize(\n\t\t\t\t{ key: \"turn off\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\"&&Turn off\",\n\t\t\t),\n\t\t});\n\n\t\tif (!result.confirmed) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (machinesToDisable.some((machine) => machine.isCurrent)) {\n\t\t\tawait this.userDataSyncWorkbenchService.turnoff(false);\n\t\t}\n\n\t\tconst otherMachinesToDisable: [string, boolean][] = machinesToDisable\n\t\t\t.filter((machine) => !machine.isCurrent)\n\t\t\t.map((machine) => [machine.id, false]);\n\t\tif (otherMachinesToDisable.length) {\n\t\t\tawait this.userDataSyncMachinesService.setEnablements(\n\t\t\t\totherMachinesToDisable,\n\t\t\t);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tasync rename(machineId: string): Promise<boolean> {\n\t\tconst disposableStore = new DisposableStore();\n\t\tconst inputBox = disposableStore.add(\n\t\t\tthis.quickInputService.createInputBox(),\n\t\t);\n\t\tinputBox.placeholder = localize(\n\t\t\t\"placeholder\",\n\t\t\t\"Enter the name of the machine\",\n\t\t);\n\t\tinputBox.busy = true;\n\t\tinputBox.show();\n\t\tconst machines = await this.getMachines();\n\t\tconst machine = machines.find(({ id }) => id === machineId);\n\t\tif (!machine) {\n\t\t\tinputBox.hide();\n\t\t\tdisposableStore.dispose();\n\t\t\tthrow new Error(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"not found\",\n\t\t\t\t\t\"machine not found with id: {0}\",\n\t\t\t\t\tmachineId,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\tinputBox.busy = false;\n\t\tinputBox.value = machine.name;\n\t\tconst validateMachineName = (machineName: string): string | null => {\n\t\t\tmachineName = machineName.trim();\n\t\t\treturn machineName &&\n\t\t\t\t!machines.some(\n\t\t\t\t\t(m) => m.id !== machineId && m.name === machineName,\n\t\t\t\t)\n\t\t\t\t? machineName\n\t\t\t\t: null;\n\t\t};\n\t\tdisposableStore.add(\n\t\t\tinputBox.onDidChangeValue(\n\t\t\t\t() =>\n\t\t\t\t\t(inputBox.validationMessage = validateMachineName(\n\t\t\t\t\t\tinputBox.value,\n\t\t\t\t\t)\n\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\"valid message\",\n\t\t\t\t\t\t\t\t\"Machine name should be unique and not empty\",\n\t\t\t\t\t\t\t)),\n\t\t\t),\n\t\t);\n\t\treturn new Promise<boolean>((c, e) => {\n\t\t\tdisposableStore.add(\n\t\t\t\tinputBox.onDidAccept(async () => {\n\t\t\t\t\tconst machineName = validateMachineName(inputBox.value);\n\t\t\t\t\tdisposableStore.dispose();\n\t\t\t\t\tif (machineName && machineName !== machine.name) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait this.userDataSyncMachinesService.renameMachine(\n\t\t\t\t\t\t\t\tmachineId,\n\t\t\t\t\t\t\t\tmachineName,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tc(true);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\te(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc(false);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t}\n}\n\nclass UserDataSyncTroubleshootViewDataProvider\n\timplements ITreeViewDataProvider\n{\n\tconstructor(\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IUserDataSyncWorkbenchService\n\t\tprivate readonly userDataSyncWorkbenchService: IUserDataSyncWorkbenchService,\n\t\t@IEnvironmentService\n\t\tprivate readonly environmentService: IEnvironmentService,\n\t\t@IUriIdentityService\n\t\tprivate readonly uriIdentityService: IUriIdentityService,\n\t) {}\n\n\tasync getChildren(element?: ITreeItem): Promise<ITreeItem[]> {\n\t\tif (!element) {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\thandle: \"SYNC_LOGS\",\n\t\t\t\t\tcollapsibleState: TreeItemCollapsibleState.Collapsed,\n\t\t\t\t\tlabel: { label: localize(\"sync logs\", \"Logs\") },\n\t\t\t\t\tthemeIcon: Codicon.folder,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\thandle: \"LAST_SYNC_STATES\",\n\t\t\t\t\tcollapsibleState: TreeItemCollapsibleState.Collapsed,\n\t\t\t\t\tlabel: {\n\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\"last sync states\",\n\t\t\t\t\t\t\t\"Last Synced Remotes\",\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\tthemeIcon: Codicon.folder,\n\t\t\t\t},\n\t\t\t];\n\t\t}\n\n\t\tif (element.handle === \"LAST_SYNC_STATES\") {\n\t\t\treturn this.getLastSyncStates();\n\t\t}\n\n\t\tif (element.handle === \"SYNC_LOGS\") {\n\t\t\treturn this.getSyncLogs();\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate async getLastSyncStates(): Promise<ITreeItem[]> {\n\t\tconst result: ITreeItem[] = [];\n\t\tfor (const syncResource of ALL_SYNC_RESOURCES) {\n\t\t\tconst resource = getLastSyncResourceUri(\n\t\t\t\tundefined,\n\t\t\t\tsyncResource,\n\t\t\t\tthis.environmentService,\n\t\t\t\tthis.uriIdentityService.extUri,\n\t\t\t);\n\t\t\tif (await this.fileService.exists(resource)) {\n\t\t\t\tresult.push({\n\t\t\t\t\thandle: resource.toString(),\n\t\t\t\t\tlabel: { label: getSyncAreaLabel(syncResource) },\n\t\t\t\t\tcollapsibleState: TreeItemCollapsibleState.None,\n\t\t\t\t\tresourceUri: resource,\n\t\t\t\t\tcommand: {\n\t\t\t\t\t\tid: API_OPEN_EDITOR_COMMAND_ID,\n\t\t\t\t\t\ttitle: \"\",\n\t\t\t\t\t\targuments: [resource, undefined, undefined],\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate async getSyncLogs(): Promise<ITreeItem[]> {\n\t\tconst logResources =\n\t\t\tawait this.userDataSyncWorkbenchService.getAllLogResources();\n\t\tconst result: ITreeItem[] = [];\n\t\tfor (const syncLogResource of logResources) {\n\t\t\tconst logFolder =\n\t\t\t\tthis.uriIdentityService.extUri.dirname(syncLogResource);\n\t\t\tresult.push({\n\t\t\t\thandle: syncLogResource.toString(),\n\t\t\t\tcollapsibleState: TreeItemCollapsibleState.None,\n\t\t\t\tresourceUri: syncLogResource,\n\t\t\t\tlabel: {\n\t\t\t\t\tlabel: this.uriIdentityService.extUri.basename(logFolder),\n\t\t\t\t},\n\t\t\t\tdescription: this.uriIdentityService.extUri.isEqual(\n\t\t\t\t\tlogFolder,\n\t\t\t\t\tthis.environmentService.logsHome,\n\t\t\t\t)\n\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"current\",\n\t\t\t\t\t\t\t\tcomment: [\"Represents current log file\"],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"Current\",\n\t\t\t\t\t\t)\n\t\t\t\t\t: undefined,\n\t\t\t\tcommand: {\n\t\t\t\t\tid: API_OPEN_EDITOR_COMMAND_ID,\n\t\t\t\t\ttitle: \"\",\n\t\t\t\t\targuments: [syncLogResource, undefined, undefined],\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\treturn result;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["handle"]
}
