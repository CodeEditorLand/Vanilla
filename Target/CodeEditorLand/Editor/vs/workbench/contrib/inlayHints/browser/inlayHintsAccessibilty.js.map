{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/inlayHints/browser/inlayHintsAccessibilty.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport { CancellationTokenSource } from \"../../../../base/common/cancellation.js\";\nimport { KeyCode } from \"../../../../base/common/keyCodes.js\";\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport type { ICodeEditor } from \"../../../../editor/browser/editorBrowser.js\";\nimport {\n\tEditorAction2,\n\tEditorContributionInstantiation,\n\tregisterEditorContribution,\n} from \"../../../../editor/browser/editorExtensions.js\";\nimport type { IEditorContribution } from \"../../../../editor/common/editorCommon.js\";\nimport { EditorContextKeys } from \"../../../../editor/common/editorContextKeys.js\";\nimport {\n\ttype InlayHintItem,\n\tasCommandLink,\n} from \"../../../../editor/contrib/inlayHints/browser/inlayHints.js\";\nimport { InlayHintsController } from \"../../../../editor/contrib/inlayHints/browser/inlayHintsController.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport {\n\tAccessibilitySignal,\n\tIAccessibilitySignalService,\n} from \"../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js\";\nimport { registerAction2 } from \"../../../../platform/actions/common/actions.js\";\nimport {\n\ttype IContextKey,\n\tIContextKeyService,\n\tRawContextKey,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { Link } from \"../../../../platform/opener/browser/link.js\";\n\nexport class InlayHintsAccessibility implements IEditorContribution {\n\tstatic readonly IsReading = new RawContextKey<boolean>(\n\t\t\"isReadingLineWithInlayHints\",\n\t\tfalse,\n\t\t{\n\t\t\ttype: \"boolean\",\n\t\t\tdescription: localize(\n\t\t\t\t\"isReadingLineWithInlayHints\",\n\t\t\t\t\"Whether the current line and its inlay hints are currently focused\",\n\t\t\t),\n\t\t},\n\t);\n\n\tstatic readonly ID: string = \"editor.contrib.InlayHintsAccessibility\";\n\n\tstatic get(editor: ICodeEditor): InlayHintsAccessibility | undefined {\n\t\treturn (\n\t\t\teditor.getContribution<InlayHintsAccessibility>(\n\t\t\t\tInlayHintsAccessibility.ID,\n\t\t\t) ?? undefined\n\t\t);\n\t}\n\n\tprivate readonly _ariaElement: HTMLSpanElement;\n\tprivate readonly _ctxIsReading: IContextKey<boolean>;\n\n\tprivate readonly _sessionDispoosables = new DisposableStore();\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IAccessibilitySignalService private readonly _accessibilitySignalService: IAccessibilitySignalService,\n\t\t@IInstantiationService private readonly _instaService: IInstantiationService,\n\t) {\n\t\tthis._ariaElement = document.createElement('span');\n\t\tthis._ariaElement.style.position = 'fixed';\n\t\tthis._ariaElement.className = 'inlayhint-accessibility-element';\n\t\tthis._ariaElement.tabIndex = 0;\n\t\tthis._ariaElement.setAttribute('aria-description', localize('description', \"Code with Inlay Hint Information\"));\n\n\t\tthis._ctxIsReading = InlayHintsAccessibility.IsReading.bindTo(contextKeyService);\n\t}\n\n\tdispose(): void {\n\t\tthis._sessionDispoosables.dispose();\n\t\tthis._ctxIsReading.reset();\n\t\tthis._ariaElement.remove();\n\t}\n\n\tprivate _reset(): void {\n\t\tdom.clearNode(this._ariaElement);\n\t\tthis._sessionDispoosables.clear();\n\t\tthis._ctxIsReading.reset();\n\t}\n\n\tprivate async _read(line: number, hints: InlayHintItem[]) {\n\t\tthis._sessionDispoosables.clear();\n\n\t\tif (!this._ariaElement.isConnected) {\n\t\t\tthis._editor.getDomNode()?.appendChild(this._ariaElement);\n\t\t}\n\n\t\tif (!this._editor.hasModel() || !this._ariaElement.isConnected) {\n\t\t\tthis._ctxIsReading.set(false);\n\t\t\treturn;\n\t\t}\n\n\t\tconst cts = new CancellationTokenSource();\n\t\tthis._sessionDispoosables.add(cts);\n\n\t\tfor (const hint of hints) {\n\t\t\tawait hint.resolve(cts.token);\n\t\t}\n\n\t\tif (cts.token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\t\tconst model = this._editor.getModel();\n\t\t// const text = this._editor.getModel().getLineContent(line);\n\t\tconst newChildren: (string | HTMLElement)[] = [];\n\n\t\tlet start = 0;\n\t\tlet tooLongToRead = false;\n\n\t\tfor (const item of hints) {\n\t\t\t// text\n\t\t\tconst part = model.getValueInRange({\n\t\t\t\tstartLineNumber: line,\n\t\t\t\tstartColumn: start + 1,\n\t\t\t\tendLineNumber: line,\n\t\t\t\tendColumn: item.hint.position.column,\n\t\t\t});\n\t\t\tif (part.length > 0) {\n\t\t\t\tnewChildren.push(part);\n\t\t\t\tstart = item.hint.position.column - 1;\n\t\t\t}\n\n\t\t\t// check length\n\t\t\tif (start > 750) {\n\t\t\t\tnewChildren.push(\"\u2026\");\n\t\t\t\ttooLongToRead = true;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// hint\n\t\t\tconst em = document.createElement(\"em\");\n\t\t\tconst { label } = item.hint;\n\t\t\tif (typeof label === \"string\") {\n\t\t\t\tem.innerText = label;\n\t\t\t} else {\n\t\t\t\tfor (const part of label) {\n\t\t\t\t\tif (part.command) {\n\t\t\t\t\t\tconst link = this._instaService.createInstance(\n\t\t\t\t\t\t\tLink,\n\t\t\t\t\t\t\tem,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\thref: asCommandLink(part.command),\n\t\t\t\t\t\t\t\tlabel: part.label,\n\t\t\t\t\t\t\t\ttitle: part.command.title,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis._sessionDispoosables.add(link);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tem.innerText += part.label;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tnewChildren.push(em);\n\t\t}\n\n\t\t// trailing text\n\t\tif (!tooLongToRead) {\n\t\t\tnewChildren.push(\n\t\t\t\tmodel.getValueInRange({\n\t\t\t\t\tstartLineNumber: line,\n\t\t\t\t\tstartColumn: start + 1,\n\t\t\t\t\tendLineNumber: line,\n\t\t\t\t\tendColumn: Number.MAX_SAFE_INTEGER,\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\tdom.reset(this._ariaElement, ...newChildren);\n\t\tthis._ariaElement.focus();\n\t\tthis._ctxIsReading.set(true);\n\n\t\t// reset on blur\n\t\tthis._sessionDispoosables.add(\n\t\t\tdom.addDisposableListener(this._ariaElement, \"focusout\", () => {\n\t\t\t\tthis._reset();\n\t\t\t}),\n\t\t);\n\t}\n\n\tstartInlayHintsReading(): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst line = this._editor.getPosition().lineNumber;\n\t\tconst hints = InlayHintsController.get(\n\t\t\tthis._editor,\n\t\t)?.getInlayHintsForLine(line);\n\t\tif (!hints || hints.length === 0) {\n\t\t\tthis._accessibilitySignalService.playSignal(\n\t\t\t\tAccessibilitySignal.noInlayHints,\n\t\t\t);\n\t\t} else {\n\t\t\tthis._read(line, hints);\n\t\t}\n\t}\n\n\tstopInlayHintsReading(): void {\n\t\tthis._reset();\n\t\tthis._editor.focus();\n\t}\n}\n\nregisterAction2(\n\tclass StartReadHints extends EditorAction2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"inlayHints.startReadingLineWithHint\",\n\t\t\t\ttitle: localize2(\"read.title\", \"Read Line With Inline Hints\"),\n\t\t\t\tprecondition: EditorContextKeys.hasInlayHintsProvider,\n\t\t\t\tf1: true,\n\t\t\t});\n\t\t}\n\n\t\trunEditorCommand(_accessor: ServicesAccessor, editor: ICodeEditor) {\n\t\t\tconst ctrl = InlayHintsAccessibility.get(editor);\n\t\t\tctrl?.startInlayHintsReading();\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass StopReadHints extends EditorAction2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"inlayHints.stopReadingLineWithHint\",\n\t\t\t\ttitle: localize2(\"stop.title\", \"Stop Inlay Hints Reading\"),\n\t\t\t\tprecondition: InlayHintsAccessibility.IsReading,\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\trunEditorCommand(_accessor: ServicesAccessor, editor: ICodeEditor) {\n\t\t\tconst ctrl = InlayHintsAccessibility.get(editor);\n\t\t\tctrl?.stopInlayHintsReading();\n\t\t}\n\t},\n);\n\nregisterEditorContribution(\n\tInlayHintsAccessibility.ID,\n\tInlayHintsAccessibility,\n\tEditorContributionInstantiation.Lazy,\n);\n"],
  "mappings": "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",
  "names": ["part"]
}
