var C=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var y=(a,e,t,i)=>{for(var o=i>1?void 0:i?v(e,t):e,s=a.length-1,r;s>=0;s--)(r=a[s])&&(o=(i?r(e,t,o):r(o))||o);return i&&o&&C(e,t,o),o},m=(a,e)=>(t,i)=>e(t,i,a);import*as h from"../../../../base/browser/dom.js";import{CancellationTokenSource as R}from"../../../../base/common/cancellation.js";import{KeyCode as S}from"../../../../base/common/keyCodes.js";import{DisposableStore as H}from"../../../../base/common/lifecycle.js";import{EditorAction2 as f,EditorContributionInstantiation as x,registerEditorContribution as L}from"../../../../editor/browser/editorExtensions.js";import{EditorContextKeys as D}from"../../../../editor/common/editorContextKeys.js";import{asCommandLink as w}from"../../../../editor/contrib/inlayHints/browser/inlayHints.js";import{InlayHintsController as N}from"../../../../editor/contrib/inlayHints/browser/inlayHintsController.js";import{localize as g,localize2 as _}from"../../../../nls.js";import{AccessibilitySignal as A,IAccessibilitySignalService as k}from"../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js";import{registerAction2 as b}from"../../../../platform/actions/common/actions.js";import{IContextKeyService as K,RawContextKey as T}from"../../../../platform/contextkey/common/contextkey.js";import{IInstantiationService as W}from"../../../../platform/instantiation/common/instantiation.js";import{KeybindingWeight as M}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{Link as z}from"../../../../platform/opener/browser/link.js";let n=class{constructor(e,t,i,o){this._editor=e;this._accessibilitySignalService=i;this._instaService=o;this._ariaElement=document.createElement("span"),this._ariaElement.style.position="fixed",this._ariaElement.className="inlayhint-accessibility-element",this._ariaElement.tabIndex=0,this._ariaElement.setAttribute("aria-description",g("description","Code with Inlay Hint Information")),this._ctxIsReading=n.IsReading.bindTo(t)}static IsReading=new T("isReadingLineWithInlayHints",!1,{type:"boolean",description:g("isReadingLineWithInlayHints","Whether the current line and its inlay hints are currently focused")});static ID="editor.contrib.InlayHintsAccessibility";static get(e){return e.getContribution(n.ID)??void 0}_ariaElement;_ctxIsReading;_sessionDispoosables=new H;dispose(){this._sessionDispoosables.dispose(),this._ctxIsReading.reset(),this._ariaElement.remove()}_reset(){h.clearNode(this._ariaElement),this._sessionDispoosables.clear(),this._ctxIsReading.reset()}async _read(e,t){if(this._sessionDispoosables.clear(),this._ariaElement.isConnected||this._editor.getDomNode()?.appendChild(this._ariaElement),!this._editor.hasModel()||!this._ariaElement.isConnected){this._ctxIsReading.set(!1);return}const i=new R;this._sessionDispoosables.add(i);for(const l of t)await l.resolve(i.token);if(i.token.isCancellationRequested)return;const o=this._editor.getModel(),s=[];let r=0,u=!1;for(const l of t){const I=o.getValueInRange({startLineNumber:e,startColumn:r+1,endLineNumber:e,endColumn:l.hint.position.column});if(I.length>0&&(s.push(I),r=l.hint.position.column-1),r>750){s.push("\u2026"),u=!0;break}const c=document.createElement("em"),{label:p}=l.hint;if(typeof p=="string")c.innerText=p;else for(const d of p)if(d.command){const E=this._instaService.createInstance(z,c,{href:w(d.command),label:d.label,title:d.command.title},void 0);this._sessionDispoosables.add(E)}else c.innerText+=d.label;s.push(c)}u||s.push(o.getValueInRange({startLineNumber:e,startColumn:r+1,endLineNumber:e,endColumn:Number.MAX_SAFE_INTEGER})),h.reset(this._ariaElement,...s),this._ariaElement.focus(),this._ctxIsReading.set(!0),this._sessionDispoosables.add(h.addDisposableListener(this._ariaElement,"focusout",()=>{this._reset()}))}startInlayHintsReading(){if(!this._editor.hasModel())return;const e=this._editor.getPosition().lineNumber,t=N.get(this._editor)?.getInlayHintsForLine(e);!t||t.length===0?this._accessibilitySignalService.playSignal(A.noInlayHints):this._read(e,t)}stopInlayHintsReading(){this._reset(),this._editor.focus()}};n=y([m(1,K),m(2,k),m(3,W)],n),b(class extends f{constructor(){super({id:"inlayHints.startReadingLineWithHint",title:_("read.title","Read Line With Inline Hints"),precondition:D.hasInlayHintsProvider,f1:!0})}runEditorCommand(e,t){n.get(t)?.startInlayHintsReading()}}),b(class extends f{constructor(){super({id:"inlayHints.stopReadingLineWithHint",title:_("stop.title","Stop Inlay Hints Reading"),precondition:n.IsReading,f1:!0,keybinding:{weight:M.EditorContrib,primary:S.Escape}})}runEditorCommand(e,t){n.get(t)?.stopInlayHintsReading()}}),L(n.ID,n,x.Lazy);export{n as InlayHintsAccessibility};
