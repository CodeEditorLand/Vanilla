{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/comments/browser/commentsView.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './media/panel.css';\nimport * as nls from '../../../../nls.js';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { basename } from '../../../../base/common/resources.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { CommentNode, ICommentThreadChangedEvent, ResourceWithCommentThreads } from '../common/commentModel.js';\nimport { ICommentService, IWorkspaceCommentThreadsEvent } from './commentService.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { ResourceLabels } from '../../../browser/labels.js';\nimport { CommentsList, COMMENTS_VIEW_TITLE, Filter } from './commentsTreeViewer.js';\nimport { IViewPaneOptions, FilterViewPane } from '../../../browser/parts/views/viewPane.js';\nimport { IViewDescriptorService } from '../../../common/views.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IContextKey, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { CommentsViewFilterFocusContextKey, ICommentsView } from './comments.js';\nimport { CommentsFilters, CommentsFiltersChangeEvent, CommentsSortOrder } from './commentsViewActions.js';\nimport { Memento, MementoObject } from '../../../common/memento.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../platform/storage/common/storage.js';\nimport { FilterOptions } from './commentsFilterOptions.js';\nimport { CommentThreadApplicability, CommentThreadState } from '../../../../editor/common/languages.js';\nimport { revealCommentThread } from './commentsController.js';\nimport { registerNavigableContainer } from '../../../browser/actions/widgetNavigationCommands.js';\nimport { CommentsModel, threadHasMeaningfulComments, type ICommentsModel } from './commentsModel.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\nimport { AccessibilityVerbositySettingId } from '../../accessibility/browser/accessibilityConfiguration.js';\nimport { AccessibleViewAction } from '../../accessibility/browser/accessibleViewActions.js';\nimport type { ITreeElement } from '../../../../base/browser/ui/tree/tree.js';\nimport { IPathService } from '../../../services/path/common/pathService.js';\nimport { isCodeEditor } from '../../../../editor/browser/editorBrowser.js';\n\nexport const CONTEXT_KEY_HAS_COMMENTS = new RawContextKey<boolean>('commentsView.hasComments', false);\nexport const CONTEXT_KEY_SOME_COMMENTS_EXPANDED = new RawContextKey<boolean>('commentsView.someCommentsExpanded', false);\nexport const CONTEXT_KEY_COMMENT_FOCUSED = new RawContextKey<boolean>('commentsView.commentFocused', false);\nconst VIEW_STORAGE_ID = 'commentsViewState';\n\ntype CommentsTreeNode = CommentsModel | ResourceWithCommentThreads | CommentNode;\n\nfunction createResourceCommentsIterator(model: ICommentsModel): Iterable<ITreeElement<CommentsTreeNode>> {\n\tconst result: ITreeElement<CommentsTreeNode>[] = [];\n\n\tfor (const m of model.resourceCommentThreads) {\n\t\tconst children = [];\n\t\tfor (const r of m.commentThreads) {\n\t\t\tif (threadHasMeaningfulComments(r.thread)) {\n\t\t\t\tchildren.push({ element: r });\n\t\t\t}\n\t\t}\n\t\tif (children.length > 0) {\n\t\t\tresult.push({ element: m, children });\n\t\t}\n\t}\n\treturn result;\n}\n\nexport class CommentsPanel extends FilterViewPane implements ICommentsView {\n\tprivate treeLabels!: ResourceLabels;\n\tprivate tree: CommentsList | undefined;\n\tprivate treeContainer!: HTMLElement;\n\tprivate messageBoxContainer!: HTMLElement;\n\tprivate totalComments: number = 0;\n\tprivate readonly hasCommentsContextKey: IContextKey<boolean>;\n\tprivate readonly someCommentsExpandedContextKey: IContextKey<boolean>;\n\tprivate readonly commentsFocusedContextKey: IContextKey<boolean>;\n\tprivate readonly filter: Filter;\n\treadonly filters: CommentsFilters;\n\n\tprivate currentHeight = 0;\n\tprivate currentWidth = 0;\n\tprivate readonly viewState: MementoObject;\n\tprivate readonly stateMemento: Memento;\n\tprivate cachedFilterStats: { total: number; filtered: number } | undefined = undefined;\n\n\treadonly onDidChangeVisibility = this.onDidChangeBodyVisibility;\n\n\tget focusedCommentNode(): CommentNode | undefined {\n\t\tconst focused = this.tree?.getFocus();\n\t\tif (focused?.length === 1 && focused[0] instanceof CommentNode) {\n\t\t\treturn focused[0];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tget focusedCommentInfo(): string | undefined {\n\t\tif (!this.focusedCommentNode) {\n\t\t\treturn;\n\t\t}\n\t\treturn this.getScreenReaderInfoForNode(this.focusedCommentNode);\n\t}\n\n\tfocusNextNode(): void {\n\t\tif (!this.tree) {\n\t\t\treturn;\n\t\t}\n\t\tconst focused = this.tree.getFocus()?.[0];\n\t\tif (!focused) {\n\t\t\treturn;\n\t\t}\n\t\tlet next = this.tree.navigate(focused).next();\n\t\twhile (next && !(next instanceof CommentNode)) {\n\t\t\tnext = this.tree.navigate(next).next();\n\t\t}\n\t\tif (!next) {\n\t\t\treturn;\n\t\t}\n\t\tthis.tree.setFocus([next]);\n\t}\n\n\tfocusPreviousNode(): void {\n\t\tif (!this.tree) {\n\t\t\treturn;\n\t\t}\n\t\tconst focused = this.tree.getFocus()?.[0];\n\t\tif (!focused) {\n\t\t\treturn;\n\t\t}\n\t\tlet previous = this.tree.navigate(focused).previous();\n\t\twhile (previous && !(previous instanceof CommentNode)) {\n\t\t\tprevious = this.tree.navigate(previous).previous();\n\t\t}\n\t\tif (!previous) {\n\t\t\treturn;\n\t\t}\n\t\tthis.tree.setFocus([previous]);\n\t}\n\n\tconstructor(\n\t\toptions: IViewPaneOptions,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ICommentService private readonly commentService: ICommentService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IPathService private readonly pathService: IPathService,\n\t) {\n\t\tconst stateMemento = new Memento(VIEW_STORAGE_ID, storageService);\n\t\tconst viewState = stateMemento.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tsuper({\n\t\t\t...options,\n\t\t\tfilterOptions: {\n\t\t\t\tplaceholder: nls.localize('comments.filter.placeholder', \"Filter (e.g. text, author)\"),\n\t\t\t\tariaLabel: nls.localize('comments.filter.ariaLabel', \"Filter comments\"),\n\t\t\t\thistory: viewState['filterHistory'] || [],\n\t\t\t\ttext: viewState['filter'] || '',\n\t\t\t\tfocusContextKey: CommentsViewFilterFocusContextKey.key\n\t\t\t}\n\t\t}, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService, hoverService);\n\t\tthis.hasCommentsContextKey = CONTEXT_KEY_HAS_COMMENTS.bindTo(contextKeyService);\n\t\tthis.someCommentsExpandedContextKey = CONTEXT_KEY_SOME_COMMENTS_EXPANDED.bindTo(contextKeyService);\n\t\tthis.commentsFocusedContextKey = CONTEXT_KEY_COMMENT_FOCUSED.bindTo(contextKeyService);\n\t\tthis.stateMemento = stateMemento;\n\t\tthis.viewState = viewState;\n\n\t\tthis.filters = this._register(new CommentsFilters({\n\t\t\tshowResolved: this.viewState['showResolved'] !== false,\n\t\t\tshowUnresolved: this.viewState['showUnresolved'] !== false,\n\t\t\tsortBy: this.viewState['sortBy'] ?? CommentsSortOrder.ResourceAscending,\n\t\t}, this.contextKeyService));\n\t\tthis.filter = new Filter(new FilterOptions(this.filterWidget.getFilterText(), this.filters.showResolved, this.filters.showUnresolved));\n\n\t\tthis._register(this.filters.onDidChange((event: CommentsFiltersChangeEvent) => {\n\t\t\tif (event.showResolved || event.showUnresolved) {\n\t\t\t\tthis.updateFilter();\n\t\t\t}\n\t\t\tif (event.sortBy) {\n\t\t\t\tthis.refresh();\n\t\t\t}\n\t\t}));\n\t\tthis._register(this.filterWidget.onDidChangeFilterText(() => this.updateFilter()));\n\t}\n\n\toverride saveState(): void {\n\t\tthis.viewState['filter'] = this.filterWidget.getFilterText();\n\t\tthis.viewState['filterHistory'] = this.filterWidget.getHistory();\n\t\tthis.viewState['showResolved'] = this.filters.showResolved;\n\t\tthis.viewState['showUnresolved'] = this.filters.showUnresolved;\n\t\tthis.viewState['sortBy'] = this.filters.sortBy;\n\t\tthis.stateMemento.saveMemento();\n\t\tsuper.saveState();\n\t}\n\n\toverride render(): void {\n\t\tsuper.render();\n\t\tthis._register(registerNavigableContainer({\n\t\t\tname: 'commentsView',\n\t\t\tfocusNotifiers: [this, this.filterWidget],\n\t\t\tfocusNextWidget: () => {\n\t\t\t\tif (this.filterWidget.hasFocus()) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t}\n\t\t\t},\n\t\t\tfocusPreviousWidget: () => {\n\t\t\t\tif (!this.filterWidget.hasFocus()) {\n\t\t\t\t\tthis.focusFilter();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tpublic focusFilter(): void {\n\t\tthis.filterWidget.focus();\n\t}\n\n\tpublic clearFilterText(): void {\n\t\tthis.filterWidget.setFilterText('');\n\t}\n\n\tpublic getFilterStats(): { total: number; filtered: number } {\n\t\tif (!this.cachedFilterStats) {\n\t\t\tthis.cachedFilterStats = {\n\t\t\t\ttotal: this.totalComments,\n\t\t\t\tfiltered: this.tree?.getVisibleItemCount() ?? 0\n\t\t\t};\n\t\t}\n\n\t\treturn this.cachedFilterStats;\n\t}\n\n\tprivate updateFilter() {\n\t\tthis.filter.options = new FilterOptions(this.filterWidget.getFilterText(), this.filters.showResolved, this.filters.showUnresolved);\n\t\tthis.tree?.filterComments();\n\n\t\tthis.cachedFilterStats = undefined;\n\t\tconst { total, filtered } = this.getFilterStats();\n\t\tthis.filterWidget.updateBadge(total === filtered || total === 0 ? undefined : nls.localize('showing filtered results', \"Showing {0} of {1}\", filtered, total));\n\t\tthis.filterWidget.checkMoreFilters(!this.filters.showResolved || !this.filters.showUnresolved);\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tcontainer.classList.add('comments-panel');\n\n\t\tconst domContainer = dom.append(container, dom.$('.comments-panel-container'));\n\n\t\tthis.treeContainer = dom.append(domContainer, dom.$('.tree-container'));\n\t\tthis.treeContainer.classList.add('file-icon-themable-tree', 'show-file-icons');\n\n\t\tthis.cachedFilterStats = undefined;\n\t\tthis.createTree();\n\t\tthis.createMessageBox(domContainer);\n\n\t\tthis._register(this.commentService.onDidSetAllCommentThreads(this.onAllCommentsChanged, this));\n\t\tthis._register(this.commentService.onDidUpdateCommentThreads(this.onCommentsUpdated, this));\n\t\tthis._register(this.commentService.onDidDeleteDataProvider(this.onDataProviderDeleted, this));\n\n\t\tthis._register(this.onDidChangeBodyVisibility(visible => {\n\t\t\tif (visible) {\n\t\t\t\tthis.refresh();\n\t\t\t}\n\t\t}));\n\n\t\tthis.renderComments();\n\t}\n\n\tpublic override focus(): void {\n\t\tsuper.focus();\n\n\t\tconst element = this.tree?.getHTMLElement();\n\t\tif (element && dom.isActiveElement(element)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.commentService.commentsModel.hasCommentThreads() && this.messageBoxContainer) {\n\t\t\tthis.messageBoxContainer.focus();\n\t\t} else if (this.tree) {\n\t\t\tthis.tree.domFocus();\n\t\t}\n\t}\n\n\tprivate renderComments(): void {\n\t\tthis.treeContainer.classList.toggle('hidden', !this.commentService.commentsModel.hasCommentThreads());\n\t\tthis.renderMessage();\n\t\tthis.tree?.setChildren(null, createResourceCommentsIterator(this.commentService.commentsModel));\n\t}\n\n\tpublic collapseAll() {\n\t\tif (this.tree) {\n\t\t\tthis.tree.collapseAll();\n\t\t\tthis.tree.setSelection([]);\n\t\t\tthis.tree.setFocus([]);\n\t\t\tthis.tree.domFocus();\n\t\t\tthis.tree.focusFirst();\n\t\t}\n\t}\n\n\tpublic expandAll() {\n\t\tif (this.tree) {\n\t\t\tthis.tree.expandAll();\n\t\t\tthis.tree.setSelection([]);\n\t\t\tthis.tree.setFocus([]);\n\t\t\tthis.tree.domFocus();\n\t\t\tthis.tree.focusFirst();\n\t\t}\n\t}\n\n\tpublic get hasRendered(): boolean {\n\t\treturn !!this.tree;\n\t}\n\n\tprotected layoutBodyContent(height: number = this.currentHeight, width: number = this.currentWidth): void {\n\t\tif (this.messageBoxContainer) {\n\t\t\tthis.messageBoxContainer.style.height = `${height}px`;\n\t\t}\n\t\tthis.tree?.layout(height, width);\n\t\tthis.currentHeight = height;\n\t\tthis.currentWidth = width;\n\t}\n\n\tprivate createMessageBox(parent: HTMLElement): void {\n\t\tthis.messageBoxContainer = dom.append(parent, dom.$('.message-box-container'));\n\t\tthis.messageBoxContainer.setAttribute('tabIndex', '0');\n\t}\n\n\tprivate renderMessage(): void {\n\t\tthis.messageBoxContainer.textContent = this.commentService.commentsModel.getMessage();\n\t\tthis.messageBoxContainer.classList.toggle('hidden', this.commentService.commentsModel.hasCommentThreads());\n\t}\n\n\tprivate getScreenReaderInfoForNode(element: CommentNode, forAriaLabel?: boolean): string {\n\t\tlet accessibleViewHint = '';\n\t\tif (forAriaLabel && this.configurationService.getValue(AccessibilityVerbositySettingId.Comments)) {\n\t\t\tconst kbLabel = this.keybindingService.lookupKeybinding(AccessibleViewAction.id)?.getAriaLabel();\n\t\t\taccessibleViewHint = kbLabel ? nls.localize('acessibleViewHint', \"Inspect this in the accessible view ({0}).\\n\", kbLabel) : nls.localize('acessibleViewHintNoKbOpen', \"Inspect this in the accessible view via the command Open Accessible View which is currently not triggerable via keybinding.\\n\");\n\t\t}\n\t\tconst replyCount = this.getReplyCountAsString(element, forAriaLabel);\n\t\tconst replies = this.getRepliesAsString(element, forAriaLabel);\n\t\tconst editor = this.editorService.findEditors(element.resource);\n\t\tconst codeEditor = this.editorService.activeEditorPane?.getControl();\n\t\tlet content;\n\t\tif (element.range && editor?.length && isCodeEditor(codeEditor)) {\n\t\t\tcontent = codeEditor.getModel()?.getValueInRange(element.range);\n\t\t\tif (content) {\n\t\t\t\tcontent = '\\nCorresponding code: \\n' + content;\n\t\t\t}\n\t\t}\n\t\tif (element.range) {\n\t\t\tif (element.threadRelevance === CommentThreadApplicability.Outdated) {\n\t\t\t\treturn accessibleViewHint + nls.localize('resourceWithCommentLabelOutdated',\n\t\t\t\t\t\"Outdated from {0} at line {1} column {2} in {3}{4}\\nComment: {5}{6}\",\n\t\t\t\t\telement.comment.userName,\n\t\t\t\t\telement.range.startLineNumber,\n\t\t\t\t\telement.range.startColumn,\n\t\t\t\t\tbasename(element.resource),\n\t\t\t\t\treplyCount,\n\t\t\t\t\t(typeof element.comment.body === 'string') ? element.comment.body : element.comment.body.value,\n\t\t\t\t\tcontent,\n\t\t\t\t) + replies;\n\t\t\t} else {\n\t\t\t\treturn accessibleViewHint + nls.localize('resourceWithCommentLabel',\n\t\t\t\t\t\"{0} at line {1} column {2} in {3} {4}\\nComment: {5}{6}\",\n\t\t\t\t\telement.comment.userName,\n\t\t\t\t\telement.range.startLineNumber,\n\t\t\t\t\telement.range.startColumn,\n\t\t\t\t\tbasename(element.resource),\n\t\t\t\t\treplyCount,\n\t\t\t\t\t(typeof element.comment.body === 'string') ? element.comment.body : element.comment.body.value,\n\t\t\t\t\tcontent,\n\t\t\t\t) + replies;\n\t\t\t}\n\t\t} else {\n\t\t\tif (element.threadRelevance === CommentThreadApplicability.Outdated) {\n\t\t\t\treturn accessibleViewHint + nls.localize('resourceWithCommentLabelFileOutdated',\n\t\t\t\t\t\"Outdated from {0} in {1} {2}\\nComment: {3}{4}{5}\",\n\t\t\t\t\telement.comment.userName,\n\t\t\t\t\tbasename(element.resource),\n\t\t\t\t\treplyCount,\n\t\t\t\t\t(typeof element.comment.body === 'string') ? element.comment.body : element.comment.body.value\n\t\t\t\t) + replies;\n\t\t\t} else {\n\t\t\t\treturn accessibleViewHint + nls.localize('resourceWithCommentLabelFile',\n\t\t\t\t\t\"{0} in {1} {2}\\nComment: {3}{4}\",\n\t\t\t\t\telement.comment.userName,\n\t\t\t\t\tbasename(element.resource),\n\t\t\t\t\treplyCount,\n\t\t\t\t\t(typeof element.comment.body === 'string') ? element.comment.body : element.comment.body.value,\n\t\t\t\t\tcontent\n\t\t\t\t) + replies;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getRepliesAsString(node: CommentNode, forAriaLabel?: boolean): string {\n\t\tif (!node.replies.length || forAriaLabel) {\n\t\t\treturn '';\n\t\t}\n\t\treturn '\\n' + node.replies.map(reply => nls.localize('resourceWithRepliesLabel',\n\t\t\t\"{0} {1}\",\n\t\t\treply.comment.userName,\n\t\t\t(typeof reply.comment.body === 'string') ? reply.comment.body : reply.comment.body.value)\n\t\t).join('\\n');\n\t}\n\n\tprivate getReplyCountAsString(node: CommentNode, forAriaLabel?: boolean): string {\n\t\treturn node.replies.length && !forAriaLabel ? nls.localize('replyCount', \" {0} replies,\", node.replies.length) : '';\n\t}\n\n\tprivate createTree(): void {\n\t\tthis.treeLabels = this._register(this.instantiationService.createInstance(ResourceLabels, this));\n\t\tthis.tree = this._register(this.instantiationService.createInstance(CommentsList, this.treeLabels, this.treeContainer, {\n\t\t\toverrideStyles: this.getLocationBasedColors().listOverrideStyles,\n\t\t\tselectionNavigation: true,\n\t\t\tfilter: this.filter,\n\t\t\tsorter: {\n\t\t\t\tcompare: (a: CommentsTreeNode, b: CommentsTreeNode) => {\n\t\t\t\t\tif (a instanceof CommentsModel || b instanceof CommentsModel) {\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.filters.sortBy === CommentsSortOrder.UpdatedAtDescending) {\n\t\t\t\t\t\treturn a.lastUpdatedAt > b.lastUpdatedAt ? -1 : 1;\n\t\t\t\t\t} else if (this.filters.sortBy === CommentsSortOrder.ResourceAscending) {\n\t\t\t\t\t\tif (a instanceof ResourceWithCommentThreads && b instanceof ResourceWithCommentThreads) {\n\t\t\t\t\t\t\tconst workspaceScheme = this.pathService.defaultUriScheme;\n\t\t\t\t\t\t\tif ((a.resource.scheme !== b.resource.scheme) && (a.resource.scheme === workspaceScheme || b.resource.scheme === workspaceScheme)) {\n\t\t\t\t\t\t\t\t// Workspace scheme should always come first\n\t\t\t\t\t\t\t\treturn b.resource.scheme === workspaceScheme ? 1 : -1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn a.resource.toString() > b.resource.toString() ? 1 : -1;\n\t\t\t\t\t\t} else if (a instanceof CommentNode && b instanceof CommentNode && a.thread.range && b.thread.range) {\n\t\t\t\t\t\t\treturn a.thread.range?.startLineNumber > b.thread.range?.startLineNumber ? 1 : -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t},\n\t\t\t},\n\t\t\tkeyboardNavigationLabelProvider: {\n\t\t\t\tgetKeyboardNavigationLabel: (item: CommentsTreeNode) => {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t},\n\t\t\taccessibilityProvider: {\n\t\t\t\tgetAriaLabel: (element: any): string => {\n\t\t\t\t\tif (element instanceof CommentsModel) {\n\t\t\t\t\t\treturn nls.localize('rootCommentsLabel', \"Comments for current workspace\");\n\t\t\t\t\t}\n\t\t\t\t\tif (element instanceof ResourceWithCommentThreads) {\n\t\t\t\t\t\treturn nls.localize('resourceWithCommentThreadsLabel', \"Comments in {0}, full path {1}\", basename(element.resource), element.resource.fsPath);\n\t\t\t\t\t}\n\t\t\t\t\tif (element instanceof CommentNode) {\n\t\t\t\t\t\treturn this.getScreenReaderInfoForNode(element, true);\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t},\n\t\t\t\tgetWidgetAriaLabel(): string {\n\t\t\t\t\treturn COMMENTS_VIEW_TITLE.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.tree.onDidOpen(e => {\n\t\t\tthis.openFile(e.element, e.editorOptions.pinned, e.editorOptions.preserveFocus, e.sideBySide);\n\t\t}));\n\n\n\t\tthis._register(this.tree.onDidChangeModel(() => {\n\t\t\tthis.updateSomeCommentsExpanded();\n\t\t}));\n\t\tthis._register(this.tree.onDidChangeCollapseState(() => {\n\t\t\tthis.updateSomeCommentsExpanded();\n\t\t}));\n\t\tthis._register(this.tree.onDidFocus(() => this.commentsFocusedContextKey.set(true)));\n\t\tthis._register(this.tree.onDidBlur(() => this.commentsFocusedContextKey.set(false)));\n\t}\n\n\tprivate openFile(element: any, pinned?: boolean, preserveFocus?: boolean, sideBySide?: boolean): void {\n\t\tif (!element) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!(element instanceof ResourceWithCommentThreads || element instanceof CommentNode)) {\n\t\t\treturn;\n\t\t}\n\t\tconst threadToReveal = element instanceof ResourceWithCommentThreads ? element.commentThreads[0].thread : element.thread;\n\t\tconst commentToReveal = element instanceof ResourceWithCommentThreads ? element.commentThreads[0].comment : undefined;\n\t\treturn revealCommentThread(this.commentService, this.editorService, this.uriIdentityService, threadToReveal, commentToReveal, false, pinned, preserveFocus, sideBySide);\n\t}\n\n\tprivate async refresh(): Promise<void> {\n\t\tif (!this.tree) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.isVisible()) {\n\t\t\tthis.hasCommentsContextKey.set(this.commentService.commentsModel.hasCommentThreads());\n\t\t\tthis.cachedFilterStats = undefined;\n\t\t\tthis.renderComments();\n\n\t\t\tif (this.tree.getSelection().length === 0 && this.commentService.commentsModel.hasCommentThreads()) {\n\t\t\t\tconst firstComment = this.commentService.commentsModel.resourceCommentThreads[0].commentThreads[0];\n\t\t\t\tif (firstComment) {\n\t\t\t\t\tthis.tree.setFocus([firstComment]);\n\t\t\t\t\tthis.tree.setSelection([firstComment]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onAllCommentsChanged(e: IWorkspaceCommentThreadsEvent): void {\n\t\tthis.cachedFilterStats = undefined;\n\t\tthis.totalComments += e.commentThreads.length;\n\n\t\tlet unresolved = 0;\n\t\tfor (const thread of e.commentThreads) {\n\t\t\tif (thread.state === CommentThreadState.Unresolved) {\n\t\t\t\tunresolved++;\n\t\t\t}\n\t\t}\n\t\tthis.refresh();\n\t}\n\n\tprivate onCommentsUpdated(e: ICommentThreadChangedEvent): void {\n\t\tthis.cachedFilterStats = undefined;\n\n\t\tthis.totalComments += e.added.length;\n\t\tthis.totalComments -= e.removed.length;\n\n\t\tlet unresolved = 0;\n\t\tfor (const resource of this.commentService.commentsModel.resourceCommentThreads) {\n\t\t\tfor (const thread of resource.commentThreads) {\n\t\t\t\tif (thread.threadState === CommentThreadState.Unresolved) {\n\t\t\t\t\tunresolved++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.refresh();\n\t}\n\n\tprivate onDataProviderDeleted(owner: string | undefined): void {\n\t\tthis.cachedFilterStats = undefined;\n\t\tthis.totalComments = 0;\n\t\tthis.refresh();\n\t}\n\n\tprivate updateSomeCommentsExpanded() {\n\t\tthis.someCommentsExpandedContextKey.set(this.isSomeCommentsExpanded());\n\t}\n\n\tpublic areAllCommentsExpanded(): boolean {\n\t\tif (!this.tree) {\n\t\t\treturn false;\n\t\t}\n\t\tconst navigator = this.tree.navigate();\n\t\twhile (navigator.next()) {\n\t\t\tif (this.tree.isCollapsed(navigator.current())) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic isSomeCommentsExpanded(): boolean {\n\t\tif (!this.tree) {\n\t\t\treturn false;\n\t\t}\n\t\tconst navigator = this.tree.navigate();\n\t\twhile (navigator.next()) {\n\t\t\tif (!this.tree.isCollapsed(navigator.current())) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
