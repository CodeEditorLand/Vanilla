{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/comments/browser/commentsFilterOptions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\ttype IFilter,\n\tmatchesFuzzy,\n\tmatchesFuzzy2,\n} from \"../../../../base/common/filters.js\";\nimport * as strings from \"../../../../base/common/strings.js\";\n\nexport class FilterOptions {\n\tstatic readonly _filter: IFilter = matchesFuzzy2;\n\tstatic readonly _messageFilter: IFilter = matchesFuzzy;\n\n\treadonly showResolved: boolean = true;\n\treadonly showUnresolved: boolean = true;\n\treadonly textFilter: { readonly text: string; readonly negate: boolean };\n\n\tconstructor(\n\t\treadonly filter: string,\n\t\tshowResolved: boolean,\n\t\tshowUnresolved: boolean,\n\t) {\n\t\tfilter = filter.trim();\n\t\tthis.showResolved = showResolved;\n\t\tthis.showUnresolved = showUnresolved;\n\n\t\tconst negate = filter.startsWith(\"!\");\n\t\tthis.textFilter = {\n\t\t\ttext: (negate ? strings.ltrim(filter, \"!\") : filter).trim(),\n\t\t\tnegate,\n\t\t};\n\t}\n}\n"],
  "mappings": ";;AAKA;AAAA,EAEC;AAAA,EACA;AAAA,OACM;AACP,YAAY,aAAa;AAElB,MAAM,cAAc;AAAA,EAQ1B,YACU,QACT,cACA,gBACC;AAHQ;AAIT,aAAS,OAAO,KAAK;AACrB,SAAK,eAAe;AACpB,SAAK,iBAAiB;AAEtB,UAAM,SAAS,OAAO,WAAW,GAAG;AACpC,SAAK,aAAa;AAAA,MACjB,OAAO,SAAS,QAAQ,MAAM,QAAQ,GAAG,IAAI,QAAQ,KAAK;AAAA,MAC1D;AAAA,IACD;AAAA,EACD;AAAA,EAlCD,OAY2B;AAAA;AAAA;AAAA,EAC1B,OAAgB,UAAmB;AAAA,EACnC,OAAgB,iBAA0B;AAAA,EAEjC,eAAwB;AAAA,EACxB,iBAA0B;AAAA,EAC1B;AAiBV;",
  "names": []
}
