{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/comments/browser/commentReply.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport { getDefaultHoverDelegate } from \"../../../../base/browser/ui/hover/hoverDelegateFactory.js\";\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from \"../../../../base/browser/ui/mouseCursor/mouseCursor.js\";\nimport type { IAction } from \"../../../../base/common/actions.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n\tdispose,\n} from \"../../../../base/common/lifecycle.js\";\nimport { MarshalledId } from \"../../../../base/common/marshallingIds.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { generateUuid } from \"../../../../base/common/uuid.js\";\nimport type { ICodeEditor } from \"../../../../editor/browser/editorBrowser.js\";\nimport type { IRange } from \"../../../../editor/common/core/range.js\";\nimport type * as languages from \"../../../../editor/common/languages.js\";\nimport type { ITextModel } from \"../../../../editor/common/model.js\";\nimport { ITextModelService } from \"../../../../editor/common/services/resolverService.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport type {\n\tIContextKey,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport type { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport type { ICellRange } from \"../../notebook/common/notebookRange.js\";\nimport { CommentContextKeys } from \"../common/commentContextKeys.js\";\nimport type { ICommentThreadWidget } from \"../common/commentThreadWidget.js\";\nimport { CommentFormActions } from \"./commentFormActions.js\";\nimport type { CommentMenus } from \"./commentMenus.js\";\nimport { ICommentService } from \"./commentService.js\";\nimport {\n\ttype LayoutableEditor,\n\tMIN_EDITOR_HEIGHT,\n\tSimpleCommentEditor,\n\tcalculateEditorHeight,\n} from \"./simpleCommentEditor.js\";\n\nlet INMEM_MODEL_ID = 0;\nexport const COMMENTEDITOR_DECORATION_KEY = \"commenteditordecoration\";\n\nexport class CommentReply<T extends IRange | ICellRange> extends Disposable {\n\tcommentEditor: ICodeEditor;\n\tform: HTMLElement;\n\tcommentEditorIsEmpty: IContextKey<boolean>;\n\tprivate _error!: HTMLElement;\n\tprivate _formActions!: HTMLElement;\n\tprivate _editorActions!: HTMLElement;\n\tprivate _commentThreadDisposables: IDisposable[] = [];\n\tprivate _commentFormActions!: CommentFormActions;\n\tprivate _commentEditorActions!: CommentFormActions;\n\tprivate _reviewThreadReplyButton!: HTMLElement;\n\tprivate _editorHeight = MIN_EDITOR_HEIGHT;\n\n\tconstructor(\n\t\treadonly owner: string,\n\t\tcontainer: HTMLElement,\n\t\tprivate readonly _parentEditor: LayoutableEditor,\n\t\tprivate _commentThread: languages.CommentThread<T>,\n\t\tprivate _scopedInstatiationService: IInstantiationService,\n\t\tprivate _contextKeyService: IContextKeyService,\n\t\tprivate _commentMenus: CommentMenus,\n\t\tprivate _commentOptions: languages.CommentOptions | undefined,\n\t\tprivate _pendingComment: string | undefined,\n\t\tprivate _parentThread: ICommentThreadWidget,\n\t\tfocus: boolean,\n\t\tprivate _actionRunDelegate: (() => void) | null,\n\t\t@ICommentService private commentService: ICommentService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IKeybindingService private keybindingService: IKeybindingService,\n\t\t@IHoverService private hoverService: IHoverService,\n\t\t@ITextModelService private readonly textModelService: ITextModelService\n\t) {\n\t\tsuper();\n\n\t\tthis.form = dom.append(container, dom.$('.comment-form'));\n\t\tthis.commentEditor = this._register(this._scopedInstatiationService.createInstance(SimpleCommentEditor, this.form, SimpleCommentEditor.getEditorOptions(configurationService), _contextKeyService, this._parentThread));\n\t\tthis.commentEditorIsEmpty = CommentContextKeys.commentIsEmpty.bindTo(this._contextKeyService);\n\t\tthis.commentEditorIsEmpty.set(!this._pendingComment);\n\n\t\tthis.initialize(focus);\n\t}\n\n\tasync initialize(focus: boolean) {\n\t\tconst hasExistingComments =\n\t\t\tthis._commentThread.comments &&\n\t\t\tthis._commentThread.comments.length > 0;\n\t\tconst modeId =\n\t\t\tgenerateUuid() +\n\t\t\t\"-\" +\n\t\t\t(hasExistingComments\n\t\t\t\t? this._commentThread.threadId\n\t\t\t\t: ++INMEM_MODEL_ID);\n\t\tconst params = JSON.stringify({\n\t\t\textensionId: this._commentThread.extensionId,\n\t\t\tcommentThreadId: this._commentThread.threadId,\n\t\t});\n\n\t\tlet resource = URI.from({\n\t\t\tscheme: Schemas.commentsInput,\n\t\t\tpath: `/${this._commentThread.extensionId}/commentinput-${modeId}.md?${params}`, // TODO. Remove params once extensions adopt authority.\n\t\t});\n\t\tconst commentController = this.commentService.getCommentController(\n\t\t\tthis.owner,\n\t\t);\n\t\tif (commentController) {\n\t\t\tresource = resource.with({ authority: commentController.id });\n\t\t}\n\n\t\tconst model =\n\t\t\tawait this.textModelService.createModelReference(resource);\n\t\tmodel.object.textEditorModel.setValue(this._pendingComment || \"\");\n\n\t\tthis._register(model);\n\t\tthis.commentEditor.setModel(model.object.textEditorModel);\n\t\tthis.calculateEditorHeight();\n\n\t\tthis._register(\n\t\t\tmodel.object.textEditorModel.onDidChangeContent(() => {\n\t\t\t\tthis.setCommentEditorDecorations();\n\t\t\t\tthis.commentEditorIsEmpty?.set(!this.commentEditor.getValue());\n\t\t\t\tif (this.calculateEditorHeight()) {\n\t\t\t\t\tthis.commentEditor.layout({\n\t\t\t\t\t\theight: this._editorHeight,\n\t\t\t\t\t\twidth: this.commentEditor.getLayoutInfo().width,\n\t\t\t\t\t});\n\t\t\t\t\tthis.commentEditor.render(true);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis.createTextModelListener(this.commentEditor, this.form);\n\n\t\tthis.setCommentEditorDecorations();\n\n\t\t// Only add the additional step of clicking a reply button to expand the textarea when there are existing comments\n\t\tif (this._pendingComment) {\n\t\t\tthis.expandReplyArea();\n\t\t} else if (hasExistingComments) {\n\t\t\tthis.createReplyButton(this.commentEditor, this.form);\n\t\t} else if (\n\t\t\tfocus &&\n\t\t\tthis._commentThread.comments &&\n\t\t\tthis._commentThread.comments.length === 0\n\t\t) {\n\t\t\tthis.expandReplyArea();\n\t\t}\n\t\tthis._error = dom.append(this.form, dom.$(\".validation-error.hidden\"));\n\t\tconst formActions = dom.append(this.form, dom.$(\".form-actions\"));\n\t\tthis._formActions = dom.append(formActions, dom.$(\".other-actions\"));\n\t\tthis.createCommentWidgetFormActions(\n\t\t\tthis._formActions,\n\t\t\tmodel.object.textEditorModel,\n\t\t);\n\t\tthis._editorActions = dom.append(formActions, dom.$(\".editor-actions\"));\n\t\tthis.createCommentWidgetEditorActions(\n\t\t\tthis._editorActions,\n\t\t\tmodel.object.textEditorModel,\n\t\t);\n\t}\n\n\tprivate calculateEditorHeight(): boolean {\n\t\tconst newEditorHeight = calculateEditorHeight(\n\t\t\tthis._parentEditor,\n\t\t\tthis.commentEditor,\n\t\t\tthis._editorHeight,\n\t\t);\n\t\tif (newEditorHeight !== this._editorHeight) {\n\t\t\tthis._editorHeight = newEditorHeight;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic updateCommentThread(\n\t\tcommentThread: languages.CommentThread<IRange | ICellRange>,\n\t) {\n\t\tconst isReplying = this.commentEditor.hasTextFocus();\n\t\tconst oldAndNewBothEmpty =\n\t\t\t!this._commentThread.comments?.length &&\n\t\t\t!commentThread.comments?.length;\n\n\t\tif (!this._reviewThreadReplyButton) {\n\t\t\tthis.createReplyButton(this.commentEditor, this.form);\n\t\t}\n\n\t\tif (\n\t\t\tthis._commentThread.comments &&\n\t\t\tthis._commentThread.comments.length === 0 &&\n\t\t\t!oldAndNewBothEmpty\n\t\t) {\n\t\t\tthis.expandReplyArea();\n\t\t}\n\n\t\tif (isReplying) {\n\t\t\tthis.commentEditor.focus();\n\t\t}\n\t}\n\n\tpublic getPendingComment(): string | undefined {\n\t\tconst model = this.commentEditor.getModel();\n\n\t\tif (model && model.getValueLength() > 0) {\n\t\t\t// checking length is cheap\n\t\t\treturn model.getValue();\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tpublic setPendingComment(comment: string) {\n\t\tthis._pendingComment = comment;\n\t\tthis.expandReplyArea();\n\t\tthis.commentEditor.setValue(comment);\n\t}\n\n\tpublic layout(widthInPixel: number) {\n\t\tthis.commentEditor.layout({\n\t\t\theight: this._editorHeight,\n\t\t\twidth: widthInPixel - 54 /* margin 20px * 10 + scrollbar 14px*/,\n\t\t});\n\t}\n\n\tpublic focusIfNeeded() {\n\t\tif (\n\t\t\t!this._commentThread.comments ||\n\t\t\t!this._commentThread.comments.length\n\t\t) {\n\t\t\tthis.commentEditor.focus();\n\t\t} else if ((this.commentEditor.getModel()?.getValueLength() ?? 0) > 0) {\n\t\t\tthis.expandReplyArea();\n\t\t}\n\t}\n\n\tpublic focusCommentEditor() {\n\t\tthis.commentEditor.focus();\n\t}\n\n\tpublic expandReplyAreaAndFocusCommentEditor() {\n\t\tthis.expandReplyArea();\n\t\tthis.commentEditor.focus();\n\t}\n\n\tpublic isCommentEditorFocused(): boolean {\n\t\treturn this.commentEditor.hasWidgetFocus();\n\t}\n\n\tpublic updateCanReply() {\n\t\tif (this._commentThread.canReply) {\n\t\t\tthis.form.style.display = \"block\";\n\t\t} else {\n\t\t\tthis.form.style.display = \"none\";\n\t\t}\n\t}\n\n\tasync submitComment(): Promise<void> {\n\t\tawait this._commentFormActions?.triggerDefaultAction();\n\t\tthis._pendingComment = undefined;\n\t}\n\n\tsetCommentEditorDecorations() {\n\t\tconst hasExistingComments =\n\t\t\tthis._commentThread.comments &&\n\t\t\tthis._commentThread.comments.length > 0;\n\t\tconst placeholder = hasExistingComments\n\t\t\t? this._commentOptions?.placeHolder ||\n\t\t\t\tnls.localize(\"reply\", \"Reply...\")\n\t\t\t: this._commentOptions?.placeHolder ||\n\t\t\t\tnls.localize(\"newComment\", \"Type a new comment\");\n\n\t\tthis.commentEditor.updateOptions({ placeholder });\n\t}\n\n\tprivate createTextModelListener(\n\t\tcommentEditor: ICodeEditor,\n\t\tcommentForm: HTMLElement,\n\t) {\n\t\tthis._commentThreadDisposables.push(\n\t\t\tcommentEditor.onDidFocusEditorWidget(() => {\n\t\t\t\tthis._commentThread.input = {\n\t\t\t\t\turi: commentEditor.getModel()!.uri,\n\t\t\t\t\tvalue: commentEditor.getValue(),\n\t\t\t\t};\n\t\t\t\tthis.commentService.setActiveEditingCommentThread(\n\t\t\t\t\tthis._commentThread,\n\t\t\t\t);\n\t\t\t\tthis.commentService.setActiveCommentAndThread(this.owner, {\n\t\t\t\t\tthread: this._commentThread,\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\n\t\tthis._commentThreadDisposables.push(\n\t\t\tcommentEditor.getModel()!.onDidChangeContent(() => {\n\t\t\t\tconst modelContent = commentEditor.getValue();\n\t\t\t\tif (\n\t\t\t\t\tthis._commentThread.input &&\n\t\t\t\t\tthis._commentThread.input.uri ===\n\t\t\t\t\t\tcommentEditor.getModel()!.uri &&\n\t\t\t\t\tthis._commentThread.input.value !== modelContent\n\t\t\t\t) {\n\t\t\t\t\tconst newInput: languages.CommentInput =\n\t\t\t\t\t\tthis._commentThread.input;\n\t\t\t\t\tnewInput.value = modelContent;\n\t\t\t\t\tthis._commentThread.input = newInput;\n\t\t\t\t}\n\t\t\t\tthis.commentService.setActiveEditingCommentThread(\n\t\t\t\t\tthis._commentThread,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\tthis._commentThreadDisposables.push(\n\t\t\tthis._commentThread.onDidChangeInput((input) => {\n\t\t\t\tconst thread = this._commentThread;\n\t\t\t\tconst model = commentEditor.getModel();\n\t\t\t\tif (thread.input && model && thread.input.uri !== model.uri) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!input) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (commentEditor.getValue() !== input.value) {\n\t\t\t\t\tcommentEditor.setValue(input.value);\n\n\t\t\t\t\tif (input.value === \"\") {\n\t\t\t\t\t\tthis._pendingComment = \"\";\n\t\t\t\t\t\tcommentForm.classList.remove(\"expand\");\n\t\t\t\t\t\tcommentEditor.getDomNode()!.style.outline = \"\";\n\t\t\t\t\t\tthis._error.textContent = \"\";\n\t\t\t\t\t\tthis._error.classList.add(\"hidden\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\t/**\n\t * Command based actions.\n\t */\n\tprivate createCommentWidgetFormActions(\n\t\tcontainer: HTMLElement,\n\t\tmodel: ITextModel,\n\t) {\n\t\tconst menu = this._commentMenus.getCommentThreadActions(\n\t\t\tthis._contextKeyService,\n\t\t);\n\n\t\tthis._register(menu);\n\t\tthis._register(\n\t\t\tmenu.onDidChange(() => {\n\t\t\t\tthis._commentFormActions.setActions(menu);\n\t\t\t}),\n\t\t);\n\n\t\tthis._commentFormActions = new CommentFormActions(\n\t\t\tthis.keybindingService,\n\t\t\tthis._contextKeyService,\n\t\t\tcontainer,\n\t\t\tasync (action: IAction) => {\n\t\t\t\tawait this._actionRunDelegate?.();\n\n\t\t\t\tawait action.run({\n\t\t\t\t\tthread: this._commentThread,\n\t\t\t\t\ttext: this.commentEditor.getValue(),\n\t\t\t\t\t$mid: MarshalledId.CommentThreadReply,\n\t\t\t\t});\n\n\t\t\t\tthis.hideReplyArea();\n\t\t\t},\n\t\t);\n\n\t\tthis._register(this._commentFormActions);\n\t\tthis._commentFormActions.setActions(menu);\n\t}\n\n\tprivate createCommentWidgetEditorActions(\n\t\tcontainer: HTMLElement,\n\t\tmodel: ITextModel,\n\t) {\n\t\tconst editorMenu = this._commentMenus.getCommentEditorActions(\n\t\t\tthis._contextKeyService,\n\t\t);\n\t\tthis._register(editorMenu);\n\t\tthis._register(\n\t\t\teditorMenu.onDidChange(() => {\n\t\t\t\tthis._commentEditorActions.setActions(editorMenu);\n\t\t\t}),\n\t\t);\n\n\t\tthis._commentEditorActions = new CommentFormActions(\n\t\t\tthis.keybindingService,\n\t\t\tthis._contextKeyService,\n\t\t\tcontainer,\n\t\t\tasync (action: IAction) => {\n\t\t\t\tthis._actionRunDelegate?.();\n\n\t\t\t\taction.run({\n\t\t\t\t\tthread: this._commentThread,\n\t\t\t\t\ttext: this.commentEditor.getValue(),\n\t\t\t\t\t$mid: MarshalledId.CommentThreadReply,\n\t\t\t\t});\n\n\t\t\t\tthis.focusCommentEditor();\n\t\t\t},\n\t\t);\n\n\t\tthis._register(this._commentEditorActions);\n\t\tthis._commentEditorActions.setActions(editorMenu, true);\n\t}\n\n\tprivate get isReplyExpanded(): boolean {\n\t\treturn this.form.classList.contains(\"expand\");\n\t}\n\n\tprivate expandReplyArea() {\n\t\tif (!this.isReplyExpanded) {\n\t\t\tthis.form.classList.add(\"expand\");\n\t\t\tthis.commentEditor.focus();\n\t\t\tthis.commentEditor.layout();\n\t\t}\n\t}\n\n\tprivate clearAndExpandReplyArea() {\n\t\tif (!this.isReplyExpanded) {\n\t\t\tthis.commentEditor.setValue(\"\");\n\t\t\tthis.expandReplyArea();\n\t\t}\n\t}\n\n\tprivate hideReplyArea() {\n\t\tconst domNode = this.commentEditor.getDomNode();\n\t\tif (domNode) {\n\t\t\tdomNode.style.outline = \"\";\n\t\t}\n\t\tthis.commentEditor.setValue(\"\");\n\t\tthis._pendingComment = \"\";\n\t\tthis.form.classList.remove(\"expand\");\n\t\tthis._error.textContent = \"\";\n\t\tthis._error.classList.add(\"hidden\");\n\t}\n\n\tprivate createReplyButton(\n\t\tcommentEditor: ICodeEditor,\n\t\tcommentForm: HTMLElement,\n\t) {\n\t\tthis._reviewThreadReplyButton = <HTMLButtonElement>(\n\t\t\tdom.append(\n\t\t\t\tcommentForm,\n\t\t\t\tdom.$(\n\t\t\t\t\t`button.review-thread-reply-button.${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`,\n\t\t\t\t),\n\t\t\t)\n\t\t);\n\t\tthis._register(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\tthis._reviewThreadReplyButton,\n\t\t\t\tthis._commentOptions?.prompt ||\n\t\t\t\t\tnls.localize(\"reply\", \"Reply...\"),\n\t\t\t),\n\t\t);\n\n\t\tthis._reviewThreadReplyButton.textContent =\n\t\t\tthis._commentOptions?.prompt || nls.localize(\"reply\", \"Reply...\");\n\t\t// bind click/escape actions for reviewThreadReplyButton and textArea\n\t\tthis._register(\n\t\t\tdom.addDisposableListener(\n\t\t\t\tthis._reviewThreadReplyButton,\n\t\t\t\t\"click\",\n\t\t\t\t(_) => this.clearAndExpandReplyArea(),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tdom.addDisposableListener(\n\t\t\t\tthis._reviewThreadReplyButton,\n\t\t\t\t\"focus\",\n\t\t\t\t(_) => this.clearAndExpandReplyArea(),\n\t\t\t),\n\t\t);\n\n\t\tcommentEditor.onDidBlurEditorWidget(() => {\n\t\t\tif (\n\t\t\t\tcommentEditor.getModel()!.getValueLength() === 0 &&\n\t\t\t\tcommentForm.classList.contains(\"expand\")\n\t\t\t) {\n\t\t\t\tcommentForm.classList.remove(\"expand\");\n\t\t\t}\n\t\t});\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tdispose(this._commentThreadDisposables);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
