import{Color as r}from"../../../../../vs/base/common/color.js";import{ContentWidgetPositionPreference as l}from"../../../../../vs/editor/browser/editorBrowser.js";import"../../../../../vs/editor/common/editorCommon.js";import{CommentThreadState as u}from"../../../../../vs/editor/common/languages.js";import{OverviewRulerLane as h}from"../../../../../vs/editor/common/model.js";import{ModelDecorationOptions as p}from"../../../../../vs/editor/common/model/textModel.js";import*as o from"../../../../../vs/nls.js";import{darken as g,editorBackground as n,editorForeground as s,listInactiveSelectionBackground as m,opaque as c,registerColor as t}from"../../../../../vs/platform/theme/common/colorRegistry.js";import{themeColorFromId as v}from"../../../../../vs/platform/theme/common/themeService.js";const C=t("editorGutter.commentRangeForeground",{dark:c(m,n),light:g(c(m,n),.05),hcDark:r.white,hcLight:r.black},o.localize("editorGutterCommentRangeForeground","Editor gutter decoration color for commenting ranges. This color should be opaque.")),d=t("editorOverviewRuler.commentForeground",C,o.localize("editorOverviewRuler.commentForeground","Editor overview ruler decoration color for resolved comments. This color should be opaque.")),D=t("editorOverviewRuler.commentUnresolvedForeground",d,o.localize("editorOverviewRuler.commentUnresolvedForeground","Editor overview ruler decoration color for unresolved comments. This color should be opaque.")),_=t("editorGutter.commentGlyphForeground",{dark:s,light:s,hcDark:r.black,hcLight:r.white},o.localize("editorGutterCommentGlyphForeground","Editor gutter decoration color for commenting glyphs."));t("editorGutter.commentUnresolvedGlyphForeground",_,o.localize("editorGutterCommentUnresolvedGlyphForeground","Editor gutter decoration color for commenting glyphs for unresolved comment threads."));class a{static description="comment-glyph-widget";_lineNumber;_editor;_threadState;_commentsDecorations;_commentsOptions;constructor(e,i){this._commentsOptions=this.createDecorationOptions(),this._editor=e,this._commentsDecorations=this._editor.createDecorationsCollection(),this.setLineNumber(i)}createDecorationOptions(){const e=this._threadState===u.Unresolved,i={description:a.description,isWholeLine:!0,overviewRuler:{color:v(e?D:d),position:h.Center},collapseOnReplaceEdit:!0,linesDecorationsClassName:`comment-range-glyph comment-thread${e?"-unresolved":""}`};return p.createDynamic(i)}setThreadState(e){this._threadState!==e&&(this._threadState=e,this._commentsOptions=this.createDecorationOptions(),this._updateDecorations())}_updateDecorations(){const e=[{range:{startLineNumber:this._lineNumber,startColumn:1,endLineNumber:this._lineNumber,endColumn:1},options:this._commentsOptions}];this._commentsDecorations.set(e)}setLineNumber(e){this._lineNumber=e,this._updateDecorations()}getPosition(){const e=this._commentsDecorations.length>0?this._commentsDecorations.getRange(0):null;return{position:{lineNumber:e?e.endLineNumber:this._lineNumber,column:1},preference:[l.EXACT]}}dispose(){this._commentsDecorations.clear()}}export{a as CommentGlyphWidget,C as overviewRulerCommentingRangeForeground};
