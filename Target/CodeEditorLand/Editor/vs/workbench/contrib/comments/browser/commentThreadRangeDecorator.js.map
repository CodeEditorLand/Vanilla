{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/comments/browser/commentThreadRangeDecorator.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, dispose, IDisposable } from '../../../../base/common/lifecycle.js';\nimport { ICodeEditor } from '../../../../editor/browser/editorBrowser.js';\nimport { IRange } from '../../../../editor/common/core/range.js';\nimport { CommentThread, CommentThreadCollapsibleState } from '../../../../editor/common/languages.js';\nimport { IModelDecorationOptions, IModelDeltaDecoration } from '../../../../editor/common/model.js';\nimport { ModelDecorationOptions } from '../../../../editor/common/model/textModel.js';\nimport { ICommentInfo, ICommentService } from './commentService.js';\n\nclass CommentThreadRangeDecoration implements IModelDeltaDecoration {\n\tprivate _decorationId: string | undefined;\n\n\tpublic get id(): string | undefined {\n\t\treturn this._decorationId;\n\t}\n\n\tpublic set id(id: string | undefined) {\n\t\tthis._decorationId = id;\n\t}\n\n\tconstructor(\n\t\tpublic readonly range: IRange,\n\t\tpublic readonly options: ModelDecorationOptions) {\n\t}\n}\n\nexport class CommentThreadRangeDecorator extends Disposable {\n\tprivate static description = 'comment-thread-range-decorator';\n\tprivate decorationOptions: ModelDecorationOptions;\n\tprivate activeDecorationOptions: ModelDecorationOptions;\n\tprivate decorationIds: string[] = [];\n\tprivate activeDecorationIds: string[] = [];\n\tprivate editor: ICodeEditor | undefined;\n\tprivate threadCollapseStateListeners: IDisposable[] = [];\n\tprivate currentThreadCollapseStateListener: IDisposable | undefined;\n\n\tconstructor(commentService: ICommentService) {\n\t\tsuper();\n\t\tconst decorationOptions: IModelDecorationOptions = {\n\t\t\tdescription: CommentThreadRangeDecorator.description,\n\t\t\tisWholeLine: false,\n\t\t\tzIndex: 20,\n\t\t\tclassName: 'comment-thread-range',\n\t\t\tshouldFillLineOnLineBreak: true\n\t\t};\n\n\t\tthis.decorationOptions = ModelDecorationOptions.createDynamic(decorationOptions);\n\n\t\tconst activeDecorationOptions: IModelDecorationOptions = {\n\t\t\tdescription: CommentThreadRangeDecorator.description,\n\t\t\tisWholeLine: false,\n\t\t\tzIndex: 20,\n\t\t\tclassName: 'comment-thread-range-current',\n\t\t\tshouldFillLineOnLineBreak: true\n\t\t};\n\n\t\tthis.activeDecorationOptions = ModelDecorationOptions.createDynamic(activeDecorationOptions);\n\t\tthis._register(commentService.onDidChangeCurrentCommentThread(thread => {\n\t\t\tthis.updateCurrent(thread);\n\t\t}));\n\t\tthis._register(commentService.onDidUpdateCommentThreads(() => {\n\t\t\tthis.updateCurrent(undefined);\n\t\t}));\n\t}\n\n\tprivate updateCurrent(thread: CommentThread<IRange> | undefined) {\n\t\tif (!this.editor || (thread?.resource && (thread.resource?.toString() !== this.editor.getModel()?.uri.toString()))) {\n\t\t\treturn;\n\t\t}\n\t\tthis.currentThreadCollapseStateListener?.dispose();\n\t\tconst newDecoration: CommentThreadRangeDecoration[] = [];\n\t\tif (thread) {\n\t\t\tconst range = thread.range;\n\t\t\tif (range && !((range.startLineNumber === range.endLineNumber) && (range.startColumn === range.endColumn))) {\n\t\t\t\tif (thread.collapsibleState === CommentThreadCollapsibleState.Expanded) {\n\t\t\t\t\tthis.currentThreadCollapseStateListener = thread.onDidChangeCollapsibleState(state => {\n\t\t\t\t\t\tif (state === CommentThreadCollapsibleState.Collapsed) {\n\t\t\t\t\t\t\tthis.updateCurrent(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tnewDecoration.push(new CommentThreadRangeDecoration(range, this.activeDecorationOptions));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.editor.changeDecorations((changeAccessor) => {\n\t\t\tthis.activeDecorationIds = changeAccessor.deltaDecorations(this.activeDecorationIds, newDecoration);\n\t\t\tnewDecoration.forEach((decoration, index) => decoration.id = this.decorationIds[index]);\n\t\t});\n\t}\n\n\tpublic update(editor: ICodeEditor | undefined, commentInfos: ICommentInfo[]) {\n\t\tconst model = editor?.getModel();\n\t\tif (!editor || !model) {\n\t\t\treturn;\n\t\t}\n\t\tdispose(this.threadCollapseStateListeners);\n\t\tthis.editor = editor;\n\n\t\tconst commentThreadRangeDecorations: CommentThreadRangeDecoration[] = [];\n\t\tfor (const info of commentInfos) {\n\t\t\tinfo.threads.forEach(thread => {\n\t\t\t\tif (thread.isDisposed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst range = thread.range;\n\t\t\t\t// We only want to show a range decoration when there's the range spans either multiple lines\n\t\t\t\t// or, when is spans multiple characters on the sample line\n\t\t\t\tif (!range || (range.startLineNumber === range.endLineNumber) && (range.startColumn === range.endColumn)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.threadCollapseStateListeners.push(thread.onDidChangeCollapsibleState(() => {\n\t\t\t\t\tthis.update(editor, commentInfos);\n\t\t\t\t}));\n\n\t\t\t\tif (thread.collapsibleState === CommentThreadCollapsibleState.Collapsed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcommentThreadRangeDecorations.push(new CommentThreadRangeDecoration(range, this.decorationOptions));\n\t\t\t});\n\t\t}\n\n\t\teditor.changeDecorations((changeAccessor) => {\n\t\t\tthis.decorationIds = changeAccessor.deltaDecorations(this.decorationIds, commentThreadRangeDecorations);\n\t\t\tcommentThreadRangeDecorations.forEach((decoration, index) => decoration.id = this.decorationIds[index]);\n\t\t});\n\t}\n\n\toverride dispose() {\n\t\tdispose(this.threadCollapseStateListeners);\n\t\tthis.currentThreadCollapseStateListener?.dispose();\n\t\tsuper.dispose();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
