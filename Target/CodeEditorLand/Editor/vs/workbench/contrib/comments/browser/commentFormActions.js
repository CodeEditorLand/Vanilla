import{Button as m}from"../../../../base/browser/ui/button/button.js";import{DisposableStore as p}from"../../../../base/common/lifecycle.js";import{defaultButtonStyles as d}from"../../../../platform/theme/browser/defaultStyles.js";import{CommentCommandId as b}from"../common/commentCommandIds.js";class v{constructor(e,r,a,n,i){this.keybindingService=e;this.contextKeyService=r;this.container=a;this.actionHandler=n;this.maxActions=i}_buttonElements=[];_toDispose=new p;_actions=[];setActions(e,r=!1){this._toDispose.clear(),this._buttonElements.forEach(i=>i.remove()),this._buttonElements=[];const a=e.getActions({shouldForwardArgs:!0});let n=!r;for(const i of a){const[,c]=i;this._actions=c;for(const t of c){let s=this.keybindingService.lookupKeybinding(t.id,this.contextKeyService)?.getLabel();!s&&n&&(s=this.keybindingService.lookupKeybinding(b.Submit,this.contextKeyService)?.getLabel());const l=s?`${t.label} (${s})`:t.label,o=new m(this.container,{secondary:!n,title:l,...d});if(n=!1,this._buttonElements.push(o.element),this._toDispose.add(o),this._toDispose.add(o.onDidClick(()=>this.actionHandler(t))),o.enabled=t.enabled,o.label=t.label,this.maxActions!==void 0&&this._buttonElements.length>=this.maxActions)return}}}triggerDefaultAction(){if(this._actions.length){const e=this._actions[0];if(e.enabled)return this.actionHandler(e)}}dispose(){this._toDispose.dispose()}}export{v as CommentFormActions};
