{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/comments/browser/commentsEditorContribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyChord, KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport \"./media/review.css\";\nimport {\n\ttype IActiveCodeEditor,\n\tisCodeEditor,\n\tisDiffEditor,\n} from \"../../../../editor/browser/editorBrowser.js\";\nimport {\n\tEditorContributionInstantiation,\n\tregisterEditorContribution,\n} from \"../../../../editor/browser/editorExtensions.js\";\nimport { ICodeEditorService } from \"../../../../editor/browser/services/codeEditorService.js\";\nimport { type IRange, Range } from \"../../../../editor/common/core/range.js\";\nimport { EditorContextKeys } from \"../../../../editor/common/editorContextKeys.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { AccessibleViewProviderId } from \"../../../../platform/accessibility/browser/accessibleView.js\";\nimport { CONTEXT_ACCESSIBILITY_MODE_ENABLED } from \"../../../../platform/accessibility/common/accessibility.js\";\nimport {\n\tMenuId,\n\tMenuRegistry,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { CommandsRegistry } from \"../../../../platform/commands/common/commands.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tKeybindingWeight,\n\tKeybindingsRegistry,\n} from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { INotificationService } from \"../../../../platform/notification/common/notification.js\";\nimport {\n\tWorkbenchPhase,\n\tregisterWorkbenchContribution2,\n} from \"../../../common/contributions.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport {\n\taccessibilityHelpIsShown,\n\taccessibleViewCurrentProviderId,\n} from \"../../accessibility/browser/accessibilityConfiguration.js\";\nimport { CommentCommandId } from \"../common/commentCommandIds.js\";\nimport { CommentContextKeys } from \"../common/commentContextKeys.js\";\nimport { ICommentService } from \"./commentService.js\";\nimport { CommentController, ID } from \"./commentsController.js\";\nimport { CommentsInputContentProvider } from \"./commentsInputContentProvider.js\";\nimport {\n\tSimpleCommentEditor,\n\tctxCommentEditorFocused,\n} from \"./simpleCommentEditor.js\";\n\nregisterEditorContribution(\n\tID,\n\tCommentController,\n\tEditorContributionInstantiation.AfterFirstRender,\n);\nregisterWorkbenchContribution2(\n\tCommentsInputContentProvider.ID,\n\tCommentsInputContentProvider,\n\tWorkbenchPhase.BlockRestore,\n);\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: CommentCommandId.NextThread,\n\thandler: async (\n\t\taccessor,\n\t\targs?: { range: IRange; fileComment: boolean },\n\t) => {\n\t\tconst activeEditor = getActiveEditor(accessor);\n\t\tif (!activeEditor) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst controller = CommentController.get(activeEditor);\n\t\tif (!controller) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tcontroller.nextCommentThread();\n\t},\n\tweight: KeybindingWeight.EditorContrib,\n\tprimary: KeyMod.Alt | KeyCode.F9,\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: CommentCommandId.PreviousThread,\n\thandler: async (\n\t\taccessor,\n\t\targs?: { range: IRange; fileComment: boolean },\n\t) => {\n\t\tconst activeEditor = getActiveEditor(accessor);\n\t\tif (!activeEditor) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst controller = CommentController.get(activeEditor);\n\t\tif (!controller) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tcontroller.previousCommentThread();\n\t},\n\tweight: KeybindingWeight.EditorContrib,\n\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.F9,\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: CommentCommandId.NextRange,\n\thandler: async (\n\t\taccessor,\n\t\targs?: { range: IRange; fileComment: boolean },\n\t) => {\n\t\tconst activeEditor = getActiveEditor(accessor);\n\t\tif (!activeEditor) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst controller = CommentController.get(activeEditor);\n\t\tif (!controller) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tcontroller.nextCommentingRange();\n\t},\n\twhen: ContextKeyExpr.and(\n\t\tCONTEXT_ACCESSIBILITY_MODE_ENABLED,\n\t\tContextKeyExpr.or(\n\t\t\tEditorContextKeys.focus,\n\t\t\tCommentContextKeys.commentFocused,\n\t\t\tContextKeyExpr.and(\n\t\t\t\taccessibilityHelpIsShown,\n\t\t\t\taccessibleViewCurrentProviderId.isEqualTo(\n\t\t\t\t\tAccessibleViewProviderId.Comments,\n\t\t\t\t),\n\t\t\t),\n\t\t),\n\t),\n\tprimary: KeyChord(\n\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\tKeyMod.CtrlCmd | KeyMod.Alt | KeyCode.DownArrow,\n\t),\n\tweight: KeybindingWeight.EditorContrib,\n});\n\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\tcommand: {\n\t\tid: CommentCommandId.NextRange,\n\t\ttitle: nls.localize(\n\t\t\t\"comments.nextCommentingRange\",\n\t\t\t\"Go to Next Commenting Range\",\n\t\t),\n\t\tcategory: \"Comments\",\n\t},\n\twhen: CommentContextKeys.activeEditorHasCommentingRange,\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: CommentCommandId.PreviousRange,\n\thandler: async (\n\t\taccessor,\n\t\targs?: { range: IRange; fileComment: boolean },\n\t) => {\n\t\tconst activeEditor = getActiveEditor(accessor);\n\t\tif (!activeEditor) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst controller = CommentController.get(activeEditor);\n\t\tif (!controller) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tcontroller.previousCommentingRange();\n\t},\n\twhen: ContextKeyExpr.and(\n\t\tCONTEXT_ACCESSIBILITY_MODE_ENABLED,\n\t\tContextKeyExpr.or(\n\t\t\tEditorContextKeys.focus,\n\t\t\tCommentContextKeys.commentFocused,\n\t\t\tContextKeyExpr.and(\n\t\t\t\taccessibilityHelpIsShown,\n\t\t\t\taccessibleViewCurrentProviderId.isEqualTo(\n\t\t\t\t\tAccessibleViewProviderId.Comments,\n\t\t\t\t),\n\t\t\t),\n\t\t),\n\t),\n\tprimary: KeyChord(\n\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\tKeyMod.CtrlCmd | KeyMod.Alt | KeyCode.UpArrow,\n\t),\n\tweight: KeybindingWeight.EditorContrib,\n});\n\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\tcommand: {\n\t\tid: CommentCommandId.PreviousRange,\n\t\ttitle: nls.localize(\n\t\t\t\"comments.previousCommentingRange\",\n\t\t\t\"Go to Previous Commenting Range\",\n\t\t),\n\t\tcategory: \"Comments\",\n\t},\n\twhen: CommentContextKeys.activeEditorHasCommentingRange,\n});\n\nCommandsRegistry.registerCommand({\n\tid: CommentCommandId.ToggleCommenting,\n\thandler: (accessor) => {\n\t\tconst commentService = accessor.get(ICommentService);\n\t\tconst enable = commentService.isCommentingEnabled;\n\t\tcommentService.enableCommenting(!enable);\n\t},\n});\n\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\tcommand: {\n\t\tid: CommentCommandId.ToggleCommenting,\n\t\ttitle: nls.localize(\n\t\t\t\"comments.toggleCommenting\",\n\t\t\t\"Toggle Editor Commenting\",\n\t\t),\n\t\tcategory: \"Comments\",\n\t},\n\twhen: CommentContextKeys.WorkspaceHasCommenting,\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: CommentCommandId.Add,\n\thandler: async (\n\t\taccessor,\n\t\targs?: { range: IRange; fileComment: boolean },\n\t) => {\n\t\tconst activeEditor = getActiveEditor(accessor);\n\t\tif (!activeEditor) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst controller = CommentController.get(activeEditor);\n\t\tif (!controller) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst position = args?.range\n\t\t\t? new Range(\n\t\t\t\t\targs.range.startLineNumber,\n\t\t\t\t\targs.range.startLineNumber,\n\t\t\t\t\targs.range.endLineNumber,\n\t\t\t\t\targs.range.endColumn,\n\t\t\t\t)\n\t\t\t: args?.fileComment\n\t\t\t\t? undefined\n\t\t\t\t: activeEditor.getSelection();\n\t\tconst notificationService = accessor.get(INotificationService);\n\t\ttry {\n\t\t\tawait controller.addOrToggleCommentAtLine(position, undefined);\n\t\t} catch (e) {\n\t\t\tnotificationService.error(\n\t\t\t\tnls.localize(\n\t\t\t\t\t\"comments.addCommand.error\",\n\t\t\t\t\t\"The cursor must be within a commenting range to add a comment\",\n\t\t\t\t),\n\t\t\t); // TODO: Once we have commands to go to next commenting range they should be included as buttons in the error.\n\t\t}\n\t},\n\tweight: KeybindingWeight.EditorContrib,\n\tprimary: KeyChord(\n\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\tKeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyC,\n\t),\n});\n\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\tcommand: {\n\t\tid: CommentCommandId.Add,\n\t\ttitle: nls.localize(\n\t\t\t\"comments.addCommand\",\n\t\t\t\"Add Comment on Current Selection\",\n\t\t),\n\t\tcategory: \"Comments\",\n\t},\n\twhen: CommentContextKeys.activeCursorHasCommentingRange,\n});\n\nCommandsRegistry.registerCommand({\n\tid: CommentCommandId.CollapseAll,\n\thandler: (accessor) => {\n\t\treturn getActiveController(accessor)?.collapseAll();\n\t},\n});\n\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\tcommand: {\n\t\tid: CommentCommandId.CollapseAll,\n\t\ttitle: nls.localize(\"comments.collapseAll\", \"Collapse All Comments\"),\n\t\tcategory: \"Comments\",\n\t},\n\twhen: CommentContextKeys.WorkspaceHasCommenting,\n});\n\nCommandsRegistry.registerCommand({\n\tid: CommentCommandId.ExpandAll,\n\thandler: (accessor) => {\n\t\treturn getActiveController(accessor)?.expandAll();\n\t},\n});\n\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\tcommand: {\n\t\tid: CommentCommandId.ExpandAll,\n\t\ttitle: nls.localize(\"comments.expandAll\", \"Expand All Comments\"),\n\t\tcategory: \"Comments\",\n\t},\n\twhen: CommentContextKeys.WorkspaceHasCommenting,\n});\n\nCommandsRegistry.registerCommand({\n\tid: CommentCommandId.ExpandUnresolved,\n\thandler: (accessor) => {\n\t\treturn getActiveController(accessor)?.expandUnresolved();\n\t},\n});\n\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\tcommand: {\n\t\tid: CommentCommandId.ExpandUnresolved,\n\t\ttitle: nls.localize(\n\t\t\t\"comments.expandUnresolved\",\n\t\t\t\"Expand Unresolved Comments\",\n\t\t),\n\t\tcategory: \"Comments\",\n\t},\n\twhen: CommentContextKeys.WorkspaceHasCommenting,\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: CommentCommandId.Submit,\n\tweight: KeybindingWeight.EditorContrib,\n\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\twhen: ctxCommentEditorFocused,\n\thandler: (accessor, args) => {\n\t\tconst activeCodeEditor = accessor\n\t\t\t.get(ICodeEditorService)\n\t\t\t.getFocusedCodeEditor();\n\t\tif (activeCodeEditor instanceof SimpleCommentEditor) {\n\t\t\tactiveCodeEditor.getParentThread().submitComment();\n\t\t}\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: CommentCommandId.Hide,\n\tweight: KeybindingWeight.EditorContrib,\n\tprimary: KeyCode.Escape,\n\tsecondary: [KeyMod.Shift | KeyCode.Escape],\n\twhen: ctxCommentEditorFocused,\n\thandler: (accessor, args) => {\n\t\tconst activeCodeEditor = accessor\n\t\t\t.get(ICodeEditorService)\n\t\t\t.getFocusedCodeEditor();\n\t\tif (activeCodeEditor instanceof SimpleCommentEditor) {\n\t\t\tactiveCodeEditor.getParentThread().collapse();\n\t\t}\n\t},\n});\n\nexport function getActiveEditor(\n\taccessor: ServicesAccessor,\n): IActiveCodeEditor | null {\n\tlet activeTextEditorControl =\n\t\taccessor.get(IEditorService).activeTextEditorControl;\n\n\tif (isDiffEditor(activeTextEditorControl)) {\n\t\tif (activeTextEditorControl.getOriginalEditor().hasTextFocus()) {\n\t\t\tactiveTextEditorControl =\n\t\t\t\tactiveTextEditorControl.getOriginalEditor();\n\t\t} else {\n\t\t\tactiveTextEditorControl =\n\t\t\t\tactiveTextEditorControl.getModifiedEditor();\n\t\t}\n\t}\n\n\tif (\n\t\t!isCodeEditor(activeTextEditorControl) ||\n\t\t!activeTextEditorControl.hasModel()\n\t) {\n\t\treturn null;\n\t}\n\n\treturn activeTextEditorControl;\n}\n\nfunction getActiveController(\n\taccessor: ServicesAccessor,\n): CommentController | undefined {\n\tconst activeEditor = getActiveEditor(accessor);\n\tif (!activeEditor) {\n\t\treturn undefined;\n\t}\n\n\tconst controller = CommentController.get(activeEditor);\n\tif (!controller) {\n\t\treturn undefined;\n\t}\n\treturn controller;\n}\n"],
  "mappings": "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",
  "names": []
}
