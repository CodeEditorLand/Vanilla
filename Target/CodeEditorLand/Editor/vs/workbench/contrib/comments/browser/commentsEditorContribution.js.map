{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/comments/browser/commentsEditorContribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyChord, KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport './media/review.css';\nimport { IActiveCodeEditor, isCodeEditor, isDiffEditor } from '../../../../editor/browser/editorBrowser.js';\nimport { EditorContributionInstantiation, registerEditorContribution } from '../../../../editor/browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../../editor/browser/services/codeEditorService.js';\nimport * as nls from '../../../../nls.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingsRegistry, KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ICommentService } from './commentService.js';\nimport { ctxCommentEditorFocused, SimpleCommentEditor } from './simpleCommentEditor.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { MenuId, MenuRegistry } from '../../../../platform/actions/common/actions.js';\nimport { EditorContextKeys } from '../../../../editor/common/editorContextKeys.js';\nimport { CommentController, ID } from './commentsController.js';\nimport { IRange, Range } from '../../../../editor/common/core/range.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { CommentContextKeys } from '../common/commentContextKeys.js';\nimport { CONTEXT_ACCESSIBILITY_MODE_ENABLED } from '../../../../platform/accessibility/common/accessibility.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { accessibilityHelpIsShown, accessibleViewCurrentProviderId } from '../../accessibility/browser/accessibilityConfiguration.js';\nimport { CommentCommandId } from '../common/commentCommandIds.js';\nimport { registerWorkbenchContribution2, WorkbenchPhase } from '../../../common/contributions.js';\nimport { CommentsInputContentProvider } from './commentsInputContentProvider.js';\nimport { AccessibleViewProviderId } from '../../../../platform/accessibility/browser/accessibleView.js';\n\nregisterEditorContribution(ID, CommentController, EditorContributionInstantiation.AfterFirstRender);\nregisterWorkbenchContribution2(CommentsInputContentProvider.ID, CommentsInputContentProvider, WorkbenchPhase.BlockRestore);\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: CommentCommandId.NextThread,\n\thandler: async (accessor, args?: { range: IRange; fileComment: boolean }) => {\n\t\tconst activeEditor = getActiveEditor(accessor);\n\t\tif (!activeEditor) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst controller = CommentController.get(activeEditor);\n\t\tif (!controller) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tcontroller.nextCommentThread();\n\t},\n\tweight: KeybindingWeight.EditorContrib,\n\tprimary: KeyMod.Alt | KeyCode.F9,\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: CommentCommandId.PreviousThread,\n\thandler: async (accessor, args?: { range: IRange; fileComment: boolean }) => {\n\t\tconst activeEditor = getActiveEditor(accessor);\n\t\tif (!activeEditor) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst controller = CommentController.get(activeEditor);\n\t\tif (!controller) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tcontroller.previousCommentThread();\n\t},\n\tweight: KeybindingWeight.EditorContrib,\n\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.F9\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: CommentCommandId.NextRange,\n\thandler: async (accessor, args?: { range: IRange; fileComment: boolean }) => {\n\t\tconst activeEditor = getActiveEditor(accessor);\n\t\tif (!activeEditor) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst controller = CommentController.get(activeEditor);\n\t\tif (!controller) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tcontroller.nextCommentingRange();\n\t},\n\twhen: ContextKeyExpr.and(CONTEXT_ACCESSIBILITY_MODE_ENABLED, ContextKeyExpr.or(EditorContextKeys.focus, CommentContextKeys.commentFocused, ContextKeyExpr.and(accessibilityHelpIsShown, accessibleViewCurrentProviderId.isEqualTo(AccessibleViewProviderId.Comments)))),\n\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.DownArrow),\n\tweight: KeybindingWeight.EditorContrib\n});\n\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\tcommand: {\n\t\tid: CommentCommandId.NextRange,\n\t\ttitle: nls.localize('comments.nextCommentingRange', \"Go to Next Commenting Range\"),\n\t\tcategory: 'Comments',\n\t},\n\twhen: CommentContextKeys.activeEditorHasCommentingRange\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: CommentCommandId.PreviousRange,\n\thandler: async (accessor, args?: { range: IRange; fileComment: boolean }) => {\n\t\tconst activeEditor = getActiveEditor(accessor);\n\t\tif (!activeEditor) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst controller = CommentController.get(activeEditor);\n\t\tif (!controller) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tcontroller.previousCommentingRange();\n\t},\n\twhen: ContextKeyExpr.and(CONTEXT_ACCESSIBILITY_MODE_ENABLED, ContextKeyExpr.or(EditorContextKeys.focus, CommentContextKeys.commentFocused, ContextKeyExpr.and(accessibilityHelpIsShown, accessibleViewCurrentProviderId.isEqualTo(AccessibleViewProviderId.Comments)))),\n\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.UpArrow),\n\tweight: KeybindingWeight.EditorContrib\n});\n\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\tcommand: {\n\t\tid: CommentCommandId.PreviousRange,\n\t\ttitle: nls.localize('comments.previousCommentingRange', \"Go to Previous Commenting Range\"),\n\t\tcategory: 'Comments',\n\t},\n\twhen: CommentContextKeys.activeEditorHasCommentingRange\n});\n\nCommandsRegistry.registerCommand({\n\tid: CommentCommandId.ToggleCommenting,\n\thandler: (accessor) => {\n\t\tconst commentService = accessor.get(ICommentService);\n\t\tconst enable = commentService.isCommentingEnabled;\n\t\tcommentService.enableCommenting(!enable);\n\t}\n});\n\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\tcommand: {\n\t\tid: CommentCommandId.ToggleCommenting,\n\t\ttitle: nls.localize('comments.toggleCommenting', \"Toggle Editor Commenting\"),\n\t\tcategory: 'Comments',\n\t},\n\twhen: CommentContextKeys.WorkspaceHasCommenting\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: CommentCommandId.Add,\n\thandler: async (accessor, args?: { range: IRange; fileComment: boolean }) => {\n\t\tconst activeEditor = getActiveEditor(accessor);\n\t\tif (!activeEditor) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst controller = CommentController.get(activeEditor);\n\t\tif (!controller) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst position = args?.range ? new Range(args.range.startLineNumber, args.range.startLineNumber, args.range.endLineNumber, args.range.endColumn)\n\t\t\t: (args?.fileComment ? undefined : activeEditor.getSelection());\n\t\tconst notificationService = accessor.get(INotificationService);\n\t\ttry {\n\t\t\tawait controller.addOrToggleCommentAtLine(position, undefined);\n\t\t} catch (e) {\n\t\t\tnotificationService.error(nls.localize('comments.addCommand.error', \"The cursor must be within a commenting range to add a comment\")); // TODO: Once we have commands to go to next commenting range they should be included as buttons in the error.\n\t\t}\n\t},\n\tweight: KeybindingWeight.EditorContrib,\n\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyC),\n});\n\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\tcommand: {\n\t\tid: CommentCommandId.Add,\n\t\ttitle: nls.localize('comments.addCommand', \"Add Comment on Current Selection\"),\n\t\tcategory: 'Comments'\n\t},\n\twhen: CommentContextKeys.activeCursorHasCommentingRange\n});\n\nCommandsRegistry.registerCommand({\n\tid: CommentCommandId.CollapseAll,\n\thandler: (accessor) => {\n\t\treturn getActiveController(accessor)?.collapseAll();\n\t}\n});\n\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\tcommand: {\n\t\tid: CommentCommandId.CollapseAll,\n\t\ttitle: nls.localize('comments.collapseAll', \"Collapse All Comments\"),\n\t\tcategory: 'Comments'\n\t},\n\twhen: CommentContextKeys.WorkspaceHasCommenting\n});\n\nCommandsRegistry.registerCommand({\n\tid: CommentCommandId.ExpandAll,\n\thandler: (accessor) => {\n\t\treturn getActiveController(accessor)?.expandAll();\n\t}\n});\n\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\tcommand: {\n\t\tid: CommentCommandId.ExpandAll,\n\t\ttitle: nls.localize('comments.expandAll', \"Expand All Comments\"),\n\t\tcategory: 'Comments'\n\t},\n\twhen: CommentContextKeys.WorkspaceHasCommenting\n});\n\nCommandsRegistry.registerCommand({\n\tid: CommentCommandId.ExpandUnresolved,\n\thandler: (accessor) => {\n\t\treturn getActiveController(accessor)?.expandUnresolved();\n\t}\n});\n\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\tcommand: {\n\t\tid: CommentCommandId.ExpandUnresolved,\n\t\ttitle: nls.localize('comments.expandUnresolved', \"Expand Unresolved Comments\"),\n\t\tcategory: 'Comments'\n\t},\n\twhen: CommentContextKeys.WorkspaceHasCommenting\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: CommentCommandId.Submit,\n\tweight: KeybindingWeight.EditorContrib,\n\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\twhen: ctxCommentEditorFocused,\n\thandler: (accessor, args) => {\n\t\tconst activeCodeEditor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n\t\tif (activeCodeEditor instanceof SimpleCommentEditor) {\n\t\t\tactiveCodeEditor.getParentThread().submitComment();\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: CommentCommandId.Hide,\n\tweight: KeybindingWeight.EditorContrib,\n\tprimary: KeyCode.Escape,\n\tsecondary: [KeyMod.Shift | KeyCode.Escape],\n\twhen: ctxCommentEditorFocused,\n\thandler: (accessor, args) => {\n\t\tconst activeCodeEditor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n\t\tif (activeCodeEditor instanceof SimpleCommentEditor) {\n\t\t\tactiveCodeEditor.getParentThread().collapse();\n\t\t}\n\t}\n});\n\nexport function getActiveEditor(accessor: ServicesAccessor): IActiveCodeEditor | null {\n\tlet activeTextEditorControl = accessor.get(IEditorService).activeTextEditorControl;\n\n\tif (isDiffEditor(activeTextEditorControl)) {\n\t\tif (activeTextEditorControl.getOriginalEditor().hasTextFocus()) {\n\t\t\tactiveTextEditorControl = activeTextEditorControl.getOriginalEditor();\n\t\t} else {\n\t\t\tactiveTextEditorControl = activeTextEditorControl.getModifiedEditor();\n\t\t}\n\t}\n\n\tif (!isCodeEditor(activeTextEditorControl) || !activeTextEditorControl.hasModel()) {\n\t\treturn null;\n\t}\n\n\treturn activeTextEditorControl;\n}\n\nfunction getActiveController(accessor: ServicesAccessor): CommentController | undefined {\n\tconst activeEditor = getActiveEditor(accessor);\n\tif (!activeEditor) {\n\t\treturn undefined;\n\t}\n\n\tconst controller = CommentController.get(activeEditor);\n\tif (!controller) {\n\t\treturn undefined;\n\t}\n\treturn controller;\n}\n\n"],
  "mappings": "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",
  "names": []
}
