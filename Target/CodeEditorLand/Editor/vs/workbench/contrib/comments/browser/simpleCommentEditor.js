var x=Object.defineProperty;var M=Object.getOwnPropertyDescriptor;var g=(a,t,i,o)=>{for(var e=o>1?void 0:o?M(t,i):t,r=a.length-1,s;r>=0;r--)(s=a[r])&&(e=(o?s(t,i,e):s(e))||e);return o&&e&&x(t,i,e),e},n=(a,t)=>(i,o)=>t(i,o,a);import{EditorContributionInstantiation as m,EditorExtensionsRegistry as u}from"../../../../editor/browser/editorExtensions.js";import{ICodeEditorService as W}from"../../../../editor/browser/services/codeEditorService.js";import{CodeEditorWidget as H}from"../../../../editor/browser/widget/codeEditor/codeEditorWidget.js";import{EditorOption as O}from"../../../../editor/common/config/editorOptions.js";import{ICommandService as F}from"../../../../platform/commands/common/commands.js";import{RawContextKey as w}from"../../../../platform/contextkey/common/contextkey.js";import{IInstantiationService as A}from"../../../../platform/instantiation/common/instantiation.js";import{clamp as I}from"../../../../base/common/numbers.js";import{ILanguageConfigurationService as B}from"../../../../editor/common/languages/languageConfigurationRegistry.js";import{ILanguageFeaturesService as V}from"../../../../editor/common/services/languageFeatures.js";import{CodeActionController as z}from"../../../../editor/contrib/codeAction/browser/codeActionController.js";import{ContextMenuController as f}from"../../../../editor/contrib/contextmenu/browser/contextmenu.js";import{CopyPasteController as K}from"../../../../editor/contrib/dropOrPasteInto/browser/copyPasteController.js";import{DropIntoEditorController as N}from"../../../../editor/contrib/dropOrPasteInto/browser/dropIntoEditorController.js";import{ContentHoverController as R}from"../../../../editor/contrib/hover/browser/contentHoverController.js";import{GlyphHoverController as k}from"../../../../editor/contrib/hover/browser/glyphHoverController.js";import{InlineCompletionsController as j}from"../../../../editor/contrib/inlineCompletions/browser/controller/inlineCompletionsController.js";import{LinkDetector as G}from"../../../../editor/contrib/links/browser/links.js";import{MessageController as P}from"../../../../editor/contrib/message/browser/messageController.js";import{SnippetController2 as h}from"../../../../editor/contrib/snippet/browser/snippetController2.js";import{SuggestController as C}from"../../../../editor/contrib/suggest/browser/suggestController.js";import{IAccessibilityService as q}from"../../../../platform/accessibility/common/accessibility.js";import{MenuId as X}from"../../../../platform/actions/common/actions.js";import{INotificationService as J}from"../../../../platform/notification/common/notification.js";import{IThemeService as Q}from"../../../../platform/theme/common/themeService.js";import{EditorDictation as E}from"../../codeEditor/browser/dictation/editorDictation.js";import{MenuPreventer as y}from"../../codeEditor/browser/menuPreventer.js";import{SelectionClipboardContributionID as U}from"../../codeEditor/browser/selectionClipboard.js";import{TabCompletionController as b}from"../../snippets/browser/tabCompletion.js";import{CommentContextKeys as Y}from"../common/commentContextKeys.js";const Z=new w("commentEditorFocused",!1),l=5*18,$=25*18;let d=class extends H{_parentThread;_commentEditorFocused;_commentEditorEmpty;constructor(t,i,o,e,r,s,c,v,D,S,_,L){const T={contributions:[{id:y.ID,ctor:y,instantiation:m.BeforeFirstInteraction},{id:f.ID,ctor:f,instantiation:m.BeforeFirstInteraction},{id:C.ID,ctor:C,instantiation:m.Eager},{id:h.ID,ctor:h,instantiation:m.Lazy},{id:b.ID,ctor:b,instantiation:m.Eager},{id:E.ID,ctor:E,instantiation:m.Lazy},...u.getSomeEditorContributions([K.ID,N.ID,G.ID,P.ID,R.ID,k.ID,U,j.ID,z.ID])],contextMenuId:X.SimpleEditorContext};super(t,i,T,r,s,c,o,v,D,S,_,L),this._commentEditorFocused=Z.bindTo(o),this._commentEditorEmpty=Y.commentIsEmpty.bindTo(o),this._commentEditorEmpty.set(!this.getModel()?.getValueLength()),this._parentThread=e,this._register(this.onDidFocusEditorWidget(p=>this._commentEditorFocused.set(!0))),this._register(this.onDidChangeModelContent(p=>this._commentEditorEmpty.set(!this.getModel()?.getValueLength()))),this._register(this.onDidBlurEditorWidget(p=>this._commentEditorFocused.reset()))}getParentThread(){return this._parentThread}_getActions(){return u.getEditorActions()}static getEditorOptions(t){return{wordWrap:"on",glyphMargin:!1,lineNumbers:"off",folding:!1,selectOnLineNumbers:!1,scrollbar:{vertical:"visible",verticalScrollbarSize:14,horizontal:"auto",useShadows:!0,verticalHasArrows:!1,horizontalHasArrows:!1,alwaysConsumeMouseWheel:!1},overviewRulerLanes:2,lineDecorationsWidth:0,scrollBeyondLastLine:!1,renderLineHighlight:"none",fixedOverflowWidgets:!0,acceptSuggestionOnEnter:"smart",minimap:{enabled:!1},dropIntoEditor:{enabled:!0},autoClosingBrackets:t.getValue("editor.autoClosingBrackets"),quickSuggestions:!1,accessibilitySupport:t.getValue("editor.accessibilitySupport"),fontFamily:t.getValue("editor.fontFamily")}}};d=g([n(4,A),n(5,W),n(6,F),n(7,Q),n(8,J),n(9,q),n(10,B),n(11,V)],d);function Ht(a,t,i){const o=t.getLayoutInfo(),e=t.getOption(O.lineHeight),r=t._getViewModel()?.getLineCount()*e;if(r>o.height||r<o.height&&i>l){const s=Math.ceil((r-o.height)/e),c=o.height+e*s;return I(c,l,I(a.getLayoutInfo().height-90,l,$))}return i}export{$ as MAX_EDITOR_HEIGHT,l as MIN_EDITOR_HEIGHT,d as SimpleCommentEditor,Ht as calculateEditorHeight,Z as ctxCommentEditorFocused};
