{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/comments/browser/commentThreadZoneWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { IDisposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ICodeEditor, IEditorMouseEvent, MouseTargetType } from '../../../../editor/browser/editorBrowser.js';\nimport { IPosition } from '../../../../editor/common/core/position.js';\nimport { IRange, Range } from '../../../../editor/common/core/range.js';\nimport * as languages from '../../../../editor/common/languages.js';\nimport { ZoneWidget } from '../../../../editor/contrib/zoneWidget/browser/zoneWidget.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IColorTheme, IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { CommentGlyphWidget } from './commentGlyphWidget.js';\nimport { ICommentService } from './commentService.js';\nimport { ICommentThreadWidget } from '../common/commentThreadWidget.js';\nimport { EDITOR_FONT_DEFAULTS, EditorOption, IEditorOptions } from '../../../../editor/common/config/editorOptions.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nimport { CommentThreadWidget } from './commentThreadWidget.js';\nimport { ICellRange } from '../../notebook/common/notebookRange.js';\nimport { commentThreadStateBackgroundColorVar, commentThreadStateColorVar, getCommentThreadStateBorderColor } from './commentColors.js';\nimport { peekViewBorder } from '../../../../editor/contrib/peekView/browser/peekView.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { StableEditorScrollState } from '../../../../editor/browser/stableEditorScroll.js';\n\nfunction getCommentThreadWidgetStateColor(thread: languages.CommentThreadState | undefined, theme: IColorTheme): Color | undefined {\n\treturn getCommentThreadStateBorderColor(thread, theme) ?? theme.getColor(peekViewBorder);\n}\n\nexport enum CommentWidgetFocus {\n\tNone = 0,\n\tWidget = 1,\n\tEditor = 2\n}\n\nexport function parseMouseDownInfoFromEvent(e: IEditorMouseEvent) {\n\tconst range = e.target.range;\n\n\tif (!range) {\n\t\treturn null;\n\t}\n\n\tif (!e.event.leftButton) {\n\t\treturn null;\n\t}\n\n\tif (e.target.type !== MouseTargetType.GUTTER_LINE_DECORATIONS) {\n\t\treturn null;\n\t}\n\n\tconst data = e.target.detail;\n\tconst gutterOffsetX = data.offsetX - data.glyphMarginWidth - data.lineNumbersWidth - data.glyphMarginLeft;\n\n\t// don't collide with folding and git decorations\n\tif (gutterOffsetX > 20) {\n\t\treturn null;\n\t}\n\n\treturn { lineNumber: range.startLineNumber };\n}\n\nexport function isMouseUpEventDragFromMouseDown(mouseDownInfo: { lineNumber: number } | null, e: IEditorMouseEvent) {\n\tif (!mouseDownInfo) {\n\t\treturn null;\n\t}\n\n\tconst { lineNumber } = mouseDownInfo;\n\n\tconst range = e.target.range;\n\n\tif (!range) {\n\t\treturn null;\n\t}\n\n\treturn lineNumber;\n}\n\nexport function isMouseUpEventMatchMouseDown(mouseDownInfo: { lineNumber: number } | null, e: IEditorMouseEvent) {\n\tif (!mouseDownInfo) {\n\t\treturn null;\n\t}\n\n\tconst { lineNumber } = mouseDownInfo;\n\n\tconst range = e.target.range;\n\n\tif (!range || range.startLineNumber !== lineNumber) {\n\t\treturn null;\n\t}\n\n\tif (e.target.type !== MouseTargetType.GUTTER_LINE_DECORATIONS) {\n\t\treturn null;\n\t}\n\n\treturn lineNumber;\n}\n\nexport class ReviewZoneWidget extends ZoneWidget implements ICommentThreadWidget {\n\tprivate _commentThreadWidget!: CommentThreadWidget;\n\tprivate readonly _onDidClose = new Emitter<ReviewZoneWidget | undefined>();\n\tprivate readonly _onDidCreateThread = new Emitter<ReviewZoneWidget>();\n\tprivate _isExpanded?: boolean;\n\tprivate _initialCollapsibleState?: languages.CommentThreadCollapsibleState;\n\tprivate _commentGlyph?: CommentGlyphWidget;\n\tprivate readonly _globalToDispose = new DisposableStore();\n\tprivate _commentThreadDisposables: IDisposable[] = [];\n\tprivate _contextKeyService: IContextKeyService;\n\tprivate _scopedInstantiationService: IInstantiationService;\n\n\tpublic get uniqueOwner(): string {\n\t\treturn this._uniqueOwner;\n\t}\n\tpublic get commentThread(): languages.CommentThread {\n\t\treturn this._commentThread;\n\t}\n\n\tpublic get expanded(): boolean | undefined {\n\t\treturn this._isExpanded;\n\t}\n\n\tprivate _commentOptions: languages.CommentOptions | undefined;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\tprivate _uniqueOwner: string,\n\t\tprivate _commentThread: languages.CommentThread,\n\t\tprivate _pendingComment: string | undefined,\n\t\tprivate _pendingEdits: { [key: number]: string } | undefined,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThemeService private themeService: IThemeService,\n\t\t@ICommentService private commentService: ICommentService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper(editor, { keepEditorSelection: true, isAccessible: true });\n\t\tthis._contextKeyService = contextKeyService.createScoped(this.domNode);\n\n\t\tthis._scopedInstantiationService = this._globalToDispose.add(instantiationService.createChild(new ServiceCollection(\n\t\t\t[IContextKeyService, this._contextKeyService]\n\t\t)));\n\n\t\tconst controller = this.commentService.getCommentController(this._uniqueOwner);\n\t\tif (controller) {\n\t\t\tthis._commentOptions = controller.options;\n\t\t}\n\n\t\tthis._initialCollapsibleState = _pendingComment ? languages.CommentThreadCollapsibleState.Expanded : _commentThread.initialCollapsibleState;\n\t\t_commentThread.initialCollapsibleState = this._initialCollapsibleState;\n\t\tthis._commentThreadDisposables = [];\n\t\tthis.create();\n\n\t\tthis._globalToDispose.add(this.themeService.onDidColorThemeChange(this._applyTheme, this));\n\t\tthis._globalToDispose.add(this.editor.onDidChangeConfiguration(e => {\n\t\t\tif (e.hasChanged(EditorOption.fontInfo)) {\n\t\t\t\tthis._applyTheme(this.themeService.getColorTheme());\n\t\t\t}\n\t\t}));\n\t\tthis._applyTheme(this.themeService.getColorTheme());\n\n\t}\n\n\tpublic get onDidClose(): Event<ReviewZoneWidget | undefined> {\n\t\treturn this._onDidClose.event;\n\t}\n\n\tpublic get onDidCreateThread(): Event<ReviewZoneWidget> {\n\t\treturn this._onDidCreateThread.event;\n\t}\n\n\tpublic getPosition(): IPosition | undefined {\n\t\tif (this.position) {\n\t\t\treturn this.position;\n\t\t}\n\n\t\tif (this._commentGlyph) {\n\t\t\treturn this._commentGlyph.getPosition().position ?? undefined;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprotected override revealRange() {\n\t\t// we don't do anything here as we always do the reveal ourselves.\n\t}\n\n\tpublic reveal(commentUniqueId?: number, focus: CommentWidgetFocus = CommentWidgetFocus.None) {\n\t\tthis.makeVisible(commentUniqueId, focus);\n\t\tconst comment = this._commentThread.comments?.find(comment => comment.uniqueIdInThread === commentUniqueId);\n\t\tthis.commentService.setActiveCommentAndThread(this.uniqueOwner, { thread: this._commentThread, comment });\n\t}\n\n\tprivate _expandAndShowZoneWidget() {\n\t\tif (!this._isExpanded) {\n\t\t\tthis.show(this.arrowPosition(this._commentThread.range), 2);\n\t\t}\n\t}\n\n\tprivate _setFocus(focus: CommentWidgetFocus) {\n\t\tif (focus === CommentWidgetFocus.Widget) {\n\t\t\tthis._commentThreadWidget.focus();\n\t\t} else if (focus === CommentWidgetFocus.Editor) {\n\t\t\tthis._commentThreadWidget.focusCommentEditor();\n\t\t}\n\t}\n\n\tprivate _goToComment(commentUniqueId: number, focus: CommentWidgetFocus) {\n\t\tconst height = this.editor.getLayoutInfo().height;\n\t\tconst coords = this._commentThreadWidget.getCommentCoords(commentUniqueId);\n\t\tif (coords) {\n\t\t\tlet scrollTop: number = 1;\n\t\t\tif (this._commentThread.range) {\n\t\t\t\tconst commentThreadCoords = coords.thread;\n\t\t\t\tconst commentCoords = coords.comment;\n\t\t\t\tscrollTop = this.editor.getTopForLineNumber(this._commentThread.range.startLineNumber) - height / 2 + commentCoords.top - commentThreadCoords.top;\n\t\t\t}\n\t\t\tthis.editor.setScrollTop(scrollTop);\n\t\t\tthis._setFocus(focus);\n\t\t} else {\n\t\t\tthis._goToThread(focus);\n\t\t}\n\t}\n\n\tprivate _goToThread(focus: CommentWidgetFocus) {\n\t\tconst rangeToReveal = this._commentThread.range\n\t\t\t? new Range(this._commentThread.range.startLineNumber, this._commentThread.range.startColumn, this._commentThread.range.endLineNumber + 1, 1)\n\t\t\t: new Range(1, 1, 1, 1);\n\n\t\tthis.editor.revealRangeInCenter(rangeToReveal);\n\t\tthis._setFocus(focus);\n\t}\n\n\tpublic makeVisible(commentUniqueId?: number, focus: CommentWidgetFocus = CommentWidgetFocus.None) {\n\t\tthis._expandAndShowZoneWidget();\n\n\t\tif (commentUniqueId !== undefined) {\n\t\t\tthis._goToComment(commentUniqueId, focus);\n\t\t} else {\n\t\t\tthis._goToThread(focus);\n\t\t}\n\t}\n\n\tpublic getPendingComments(): { newComment: string | undefined; edits: { [key: number]: string } } {\n\t\treturn {\n\t\t\tnewComment: this._commentThreadWidget.getPendingComment(),\n\t\t\tedits: this._commentThreadWidget.getPendingEdits()\n\t\t};\n\t}\n\n\tpublic setPendingComment(comment: string) {\n\t\tthis._pendingComment = comment;\n\t\tthis.expand();\n\t\tthis._commentThreadWidget.setPendingComment(comment);\n\t}\n\n\tprotected _fillContainer(container: HTMLElement): void {\n\t\tthis.setCssClass('review-widget');\n\t\tthis._commentThreadWidget = this._scopedInstantiationService.createInstance(\n\t\t\tCommentThreadWidget,\n\t\t\tcontainer,\n\t\t\tthis.editor,\n\t\t\tthis._uniqueOwner,\n\t\t\tthis.editor.getModel()!.uri,\n\t\t\tthis._contextKeyService,\n\t\t\tthis._scopedInstantiationService,\n\t\t\tthis._commentThread as unknown as languages.CommentThread<IRange | ICellRange>,\n\t\t\tthis._pendingComment,\n\t\t\tthis._pendingEdits,\n\t\t\t{ editor: this.editor, codeBlockFontSize: '', codeBlockFontFamily: this.configurationService.getValue<IEditorOptions>('editor').fontFamily || EDITOR_FONT_DEFAULTS.fontFamily },\n\t\t\tthis._commentOptions,\n\t\t\t{\n\t\t\t\tactionRunner: async () => {\n\t\t\t\t\tif (!this._commentThread.comments || !this._commentThread.comments.length) {\n\t\t\t\t\t\tconst newPosition = this.getPosition();\n\n\t\t\t\t\t\tif (newPosition) {\n\t\t\t\t\t\t\tconst originalRange = this._commentThread.range;\n\t\t\t\t\t\t\tif (!originalRange) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet range: Range;\n\n\t\t\t\t\t\t\tif (newPosition.lineNumber !== originalRange.endLineNumber) {\n\t\t\t\t\t\t\t\t// The widget could have moved as a result of editor changes.\n\t\t\t\t\t\t\t\t// We need to try to calculate the new, more correct, range for the comment.\n\t\t\t\t\t\t\t\tconst distance = newPosition.lineNumber - originalRange.endLineNumber;\n\t\t\t\t\t\t\t\trange = new Range(originalRange.startLineNumber + distance, originalRange.startColumn, originalRange.endLineNumber + distance, originalRange.endColumn);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\trange = new Range(originalRange.startLineNumber, originalRange.startColumn, originalRange.endLineNumber, originalRange.endColumn);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tawait this.commentService.updateCommentThreadTemplate(this.uniqueOwner, this._commentThread.commentThreadHandle, range);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcollapse: () => {\n\t\t\t\t\tthis.collapse();\n\t\t\t\t}\n\t\t\t}\n\t\t) as unknown as CommentThreadWidget<IRange>;\n\n\t\tthis._disposables.add(this._commentThreadWidget);\n\t}\n\n\tprivate arrowPosition(range: IRange | undefined): IPosition | undefined {\n\t\tif (!range) {\n\t\t\treturn undefined;\n\t\t}\n\t\t// Arrow on top edge of zone widget will be at the start of the line if range is multi-line, else at midpoint of range (rounding rightwards)\n\t\treturn { lineNumber: range.endLineNumber, column: range.endLineNumber === range.startLineNumber ? (range.startColumn + range.endColumn + 1) / 2 : 1 };\n\t}\n\n\tprivate deleteCommentThread(): void {\n\t\tthis.dispose();\n\t\tthis.commentService.disposeCommentThread(this.uniqueOwner, this._commentThread.threadId);\n\t}\n\n\tpublic collapse() {\n\t\tthis._commentThread.collapsibleState = languages.CommentThreadCollapsibleState.Collapsed;\n\t}\n\n\tpublic expand(setActive?: boolean) {\n\t\tthis._commentThread.collapsibleState = languages.CommentThreadCollapsibleState.Expanded;\n\t\tif (setActive) {\n\t\t\tthis.commentService.setActiveCommentAndThread(this.uniqueOwner, { thread: this._commentThread });\n\t\t}\n\t}\n\n\tpublic getGlyphPosition(): number {\n\t\tif (this._commentGlyph) {\n\t\t\treturn this._commentGlyph.getPosition().position!.lineNumber;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tasync update(commentThread: languages.CommentThread<IRange>) {\n\t\tif (this._commentThread !== commentThread) {\n\t\t\tthis._commentThreadDisposables.forEach(disposable => disposable.dispose());\n\t\t\tthis._commentThread = commentThread;\n\t\t\tthis._commentThreadDisposables = [];\n\t\t\tthis.bindCommentThreadListeners();\n\t\t}\n\n\t\tawait this._commentThreadWidget.updateCommentThread(commentThread);\n\n\t\t// Move comment glyph widget and show position if the line has changed.\n\t\tconst lineNumber = this._commentThread.range?.endLineNumber ?? 1;\n\t\tlet shouldMoveWidget = false;\n\t\tif (this._commentGlyph) {\n\t\t\tthis._commentGlyph.setThreadState(commentThread.state);\n\t\t\tif (this._commentGlyph.getPosition().position!.lineNumber !== lineNumber) {\n\t\t\t\tshouldMoveWidget = true;\n\t\t\t\tthis._commentGlyph.setLineNumber(lineNumber);\n\t\t\t}\n\t\t}\n\n\t\tif ((shouldMoveWidget && this._isExpanded) || (this._commentThread.collapsibleState === languages.CommentThreadCollapsibleState.Expanded && !this._isExpanded)) {\n\t\t\tthis.show(this.arrowPosition(this._commentThread.range), 2);\n\t\t} else if (this._commentThread.collapsibleState !== languages.CommentThreadCollapsibleState.Expanded) {\n\t\t\tthis.hide();\n\t\t}\n\t}\n\n\tprotected override _onWidth(widthInPixel: number): void {\n\t\tthis._commentThreadWidget.layout(widthInPixel);\n\t}\n\n\tprotected override _doLayout(heightInPixel: number, widthInPixel: number): void {\n\t\tthis._commentThreadWidget.layout(widthInPixel);\n\t}\n\n\tasync display(range: IRange | undefined, shouldReveal: boolean) {\n\t\tif (range) {\n\t\t\tthis._commentGlyph = new CommentGlyphWidget(this.editor, range?.endLineNumber ?? -1);\n\t\t\tthis._commentGlyph.setThreadState(this._commentThread.state);\n\t\t\tthis._globalToDispose.add(this._commentGlyph.onDidChangeLineNumber(async e => {\n\t\t\t\tif (!this._commentThread.range) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst shift = e - (this._commentThread.range.endLineNumber);\n\t\t\t\tconst newRange = new Range(this._commentThread.range.startLineNumber + shift, this._commentThread.range.startColumn, this._commentThread.range.endLineNumber + shift, this._commentThread.range.endColumn);\n\t\t\t\tthis._commentThread.range = newRange;\n\t\t\t}));\n\t\t}\n\n\t\tawait this._commentThreadWidget.display(this.editor.getOption(EditorOption.lineHeight), shouldReveal);\n\t\tthis._disposables.add(this._commentThreadWidget.onDidResize(dimension => {\n\t\t\tthis._refresh(dimension);\n\t\t}));\n\t\tif ((this._commentThread.collapsibleState === languages.CommentThreadCollapsibleState.Expanded) || (range === undefined)) {\n\t\t\tthis.show(this.arrowPosition(range), 2);\n\t\t}\n\n\t\t// If this is a new comment thread awaiting user input then we need to reveal it.\n\t\tif (shouldReveal) {\n\t\t\tthis.makeVisible();\n\t\t}\n\n\t\tthis.bindCommentThreadListeners();\n\t}\n\n\tprivate bindCommentThreadListeners() {\n\t\tthis._commentThreadDisposables.push(this._commentThread.onDidChangeComments(async _ => {\n\t\t\tawait this.update(this._commentThread);\n\t\t}));\n\n\t\tthis._commentThreadDisposables.push(this._commentThread.onDidChangeCollapsibleState(state => {\n\t\t\tif (state === languages.CommentThreadCollapsibleState.Expanded && !this._isExpanded) {\n\t\t\t\tthis.show(this.arrowPosition(this._commentThread.range), 2);\n\t\t\t\tthis._commentThreadWidget.ensureFocusIntoNewEditingComment();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (state === languages.CommentThreadCollapsibleState.Collapsed && this._isExpanded) {\n\t\t\t\tthis.hide();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}));\n\n\t\tif (this._initialCollapsibleState === undefined) {\n\t\t\tconst onDidChangeInitialCollapsibleState = this._commentThread.onDidChangeInitialCollapsibleState(state => {\n\t\t\t\t// File comments always start expanded\n\t\t\t\tthis._initialCollapsibleState = state;\n\t\t\t\tthis._commentThread.collapsibleState = this._initialCollapsibleState;\n\t\t\t\tonDidChangeInitialCollapsibleState.dispose();\n\t\t\t});\n\t\t\tthis._commentThreadDisposables.push(onDidChangeInitialCollapsibleState);\n\t\t}\n\n\n\t\tthis._commentThreadDisposables.push(this._commentThread.onDidChangeState(() => {\n\t\t\tconst borderColor =\n\t\t\t\tgetCommentThreadWidgetStateColor(this._commentThread.state, this.themeService.getColorTheme()) || Color.transparent;\n\t\t\tthis.style({\n\t\t\t\tframeColor: borderColor,\n\t\t\t\tarrowColor: borderColor,\n\t\t\t});\n\t\t\tthis.container?.style.setProperty(commentThreadStateColorVar, `${borderColor}`);\n\t\t\tthis.container?.style.setProperty(commentThreadStateBackgroundColorVar, `${borderColor.transparent(.1)}`);\n\t\t}));\n\t}\n\n\tasync submitComment(): Promise<void> {\n\t\treturn this._commentThreadWidget.submitComment();\n\t}\n\n\t_refresh(dimensions: dom.Dimension) {\n\t\tif ((this._isExpanded === undefined) && (dimensions.height === 0) && (dimensions.width === 0)) {\n\t\t\tthis.commentThread.collapsibleState = languages.CommentThreadCollapsibleState.Collapsed;\n\t\t\treturn;\n\t\t}\n\t\tif (this._isExpanded) {\n\t\t\tthis._commentThreadWidget.layout();\n\n\t\t\tconst headHeight = Math.ceil(this.editor.getOption(EditorOption.lineHeight) * 1.2);\n\t\t\tconst lineHeight = this.editor.getOption(EditorOption.lineHeight);\n\t\t\tconst arrowHeight = Math.round(lineHeight / 3);\n\t\t\tconst frameThickness = Math.round(lineHeight / 9) * 2;\n\n\t\t\tconst computedLinesNumber = Math.ceil((headHeight + dimensions.height + arrowHeight + frameThickness + 8 /** margin bottom to avoid margin collapse */) / lineHeight);\n\n\t\t\tif (this._viewZone?.heightInLines === computedLinesNumber) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst currentPosition = this.getPosition();\n\n\t\t\tif (this._viewZone && currentPosition && currentPosition.lineNumber !== this._viewZone.afterLineNumber && this._viewZone.afterLineNumber !== 0) {\n\t\t\t\tthis._viewZone.afterLineNumber = currentPosition.lineNumber;\n\t\t\t}\n\n\t\t\tconst capture = StableEditorScrollState.capture(this.editor);\n\t\t\tthis._relayout(computedLinesNumber);\n\t\t\tcapture.restore(this.editor);\n\t\t}\n\t}\n\n\tprivate _applyTheme(theme: IColorTheme) {\n\t\tconst borderColor = getCommentThreadWidgetStateColor(this._commentThread.state, this.themeService.getColorTheme()) || Color.transparent;\n\t\tthis.style({\n\t\t\tarrowColor: borderColor,\n\t\t\tframeColor: borderColor\n\t\t});\n\t\tconst fontInfo = this.editor.getOption(EditorOption.fontInfo);\n\n\t\t// Editor decorations should also be responsive to theme changes\n\t\tthis._commentThreadWidget.applyTheme(theme, fontInfo);\n\t}\n\n\toverride show(rangeOrPos: IRange | IPosition | undefined, heightInLines: number): void {\n\t\tconst glyphPosition = this._commentGlyph?.getPosition();\n\t\tlet range = Range.isIRange(rangeOrPos) ? rangeOrPos : (rangeOrPos ? Range.fromPositions(rangeOrPos) : undefined);\n\t\tif (glyphPosition?.position && range && glyphPosition.position.lineNumber !== range.endLineNumber) {\n\t\t\t// The widget could have moved as a result of editor changes.\n\t\t\t// We need to try to calculate the new, more correct, range for the comment.\n\t\t\tconst distance = glyphPosition.position.lineNumber - range.endLineNumber;\n\t\t\trange = new Range(range.startLineNumber + distance, range.startColumn, range.endLineNumber + distance, range.endColumn);\n\t\t}\n\n\t\tthis._isExpanded = true;\n\t\tsuper.show(range ?? new Range(0, 0, 0, 0), heightInLines);\n\t\tthis._commentThread.collapsibleState = languages.CommentThreadCollapsibleState.Expanded;\n\t\tthis._refresh(this._commentThreadWidget.getDimensions());\n\t}\n\n\toverride hide() {\n\t\tif (this._isExpanded) {\n\t\t\tthis._isExpanded = false;\n\t\t\t// Focus the container so that the comment editor will be blurred before it is hidden\n\t\t\tif (this.editor.hasWidgetFocus()) {\n\t\t\t\tthis.editor.focus();\n\t\t\t}\n\n\t\t\tif (!this._commentThread.comments || !this._commentThread.comments.length) {\n\t\t\t\tthis.deleteCommentThread();\n\t\t\t}\n\t\t}\n\t\tsuper.hide();\n\t}\n\n\toverride dispose() {\n\t\tsuper.dispose();\n\n\t\tif (this._commentGlyph) {\n\t\t\tthis._commentGlyph.dispose();\n\t\t\tthis._commentGlyph = undefined;\n\t\t}\n\n\t\tthis._globalToDispose.dispose();\n\t\tthis._commentThreadDisposables.forEach(global => global.dispose());\n\t\tthis._onDidClose.fire(undefined);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,YAAY,SAAS;AACrB,SAAS,aAAa;AACtB,SAAS,SAAS,aAAa;AAC/B,SAAS,aAAa,uBAAuB;AAC7C,SAAS,aAAa,mBAAmB,uBAAuB;AAChE,SAAS,iBAAiB;AAC1B,SAAS,QAAQ,aAAa;AAC9B,YAAY,eAAe;AAC3B,SAAS,kBAAkB;AAC3B,SAAS,0BAA0B;AACnC,SAAS,6BAA6B;AACtC,SAAS,aAAa,qBAAqB;AAC3C,SAAS,0BAA0B;AACnC,SAAS,uBAAuB;AAChC,SAAS,4BAA4B;AACrC,SAAS,sBAAsB,cAAc,sBAAsB;AACnE,SAAS,yBAAyB;AAClC,SAAS,2BAA2B;AACpC,SAAS,kBAAkB;AAC3B,SAAS,sCAAsC,4BAA4B,wCAAwC;AACnH,SAAS,sBAAsB;AAC/B,SAAS,6BAA6B;AACtC,SAAS,+BAA+B;AAExC,SAAS,iCAAiC,QAAkD,OAAuC;AAClI,SAAO,iCAAiC,QAAQ,KAAK,KAAK,MAAM,SAAS,cAAc;AACxF;AAFS;AAIF,IAAK,qBAAL,kBAAKA,wBAAL;AACN,EAAAA,wCAAA,UAAO,KAAP;AACA,EAAAA,wCAAA,YAAS,KAAT;AACA,EAAAA,wCAAA,YAAS,KAAT;AAHW,SAAAA;AAAA,GAAA;AAML,SAAS,4BAA4B,GAAsB;AACjE,QAAM,QAAQ,EAAE,OAAO;AAEvB,MAAI,CAAC,OAAO;AACX,WAAO;AAAA,EACR;AAEA,MAAI,CAAC,EAAE,MAAM,YAAY;AACxB,WAAO;AAAA,EACR;AAEA,MAAI,EAAE,OAAO,SAAS,gBAAgB,yBAAyB;AAC9D,WAAO;AAAA,EACR;AAEA,QAAM,OAAO,EAAE,OAAO;AACtB,QAAM,gBAAgB,KAAK,UAAU,KAAK,mBAAmB,KAAK,mBAAmB,KAAK;AAG1F,MAAI,gBAAgB,IAAI;AACvB,WAAO;AAAA,EACR;AAEA,SAAO,EAAE,YAAY,MAAM,gBAAgB;AAC5C;AAxBgB;AA0BT,SAAS,gCAAgC,eAA8C,GAAsB;AACnH,MAAI,CAAC,eAAe;AACnB,WAAO;AAAA,EACR;AAEA,QAAM,EAAE,WAAW,IAAI;AAEvB,QAAM,QAAQ,EAAE,OAAO;AAEvB,MAAI,CAAC,OAAO;AACX,WAAO;AAAA,EACR;AAEA,SAAO;AACR;AAdgB;AAgBT,SAAS,6BAA6B,eAA8C,GAAsB;AAChH,MAAI,CAAC,eAAe;AACnB,WAAO;AAAA,EACR;AAEA,QAAM,EAAE,WAAW,IAAI;AAEvB,QAAM,QAAQ,EAAE,OAAO;AAEvB,MAAI,CAAC,SAAS,MAAM,oBAAoB,YAAY;AACnD,WAAO;AAAA,EACR;AAEA,MAAI,EAAE,OAAO,SAAS,gBAAgB,yBAAyB;AAC9D,WAAO;AAAA,EACR;AAEA,SAAO;AACR;AAlBgB;AAoBT,IAAM,mBAAN,cAA+B,WAA2C;AAAA,EAyBhF,YACC,QACQ,cACA,gBACA,iBACA,eACe,sBACA,cACE,gBACL,mBACoB,sBACvC;AACD,UAAM,QAAQ,EAAE,qBAAqB,MAAM,cAAc,KAAK,CAAC;AAVvD;AACA;AACA;AACA;AAEe;AACE;AAEe;AAGxC,SAAK,qBAAqB,kBAAkB,aAAa,KAAK,OAAO;AAErE,SAAK,8BAA8B,KAAK,iBAAiB,IAAI,qBAAqB,YAAY,IAAI;AAAA,MACjG,CAAC,oBAAoB,KAAK,kBAAkB;AAAA,IAC7C,CAAC,CAAC;AAEF,UAAM,aAAa,KAAK,eAAe,qBAAqB,KAAK,YAAY;AAC7E,QAAI,YAAY;AACf,WAAK,kBAAkB,WAAW;AAAA,IACnC;AAEA,SAAK,2BAA2B,kBAAkB,UAAU,8BAA8B,WAAW,eAAe;AACpH,mBAAe,0BAA0B,KAAK;AAC9C,SAAK,4BAA4B,CAAC;AAClC,SAAK,OAAO;AAEZ,SAAK,iBAAiB,IAAI,KAAK,aAAa,sBAAsB,KAAK,aAAa,IAAI,CAAC;AACzF,SAAK,iBAAiB,IAAI,KAAK,OAAO,yBAAyB,OAAK;AACnE,UAAI,EAAE,WAAW,aAAa,QAAQ,GAAG;AACxC,aAAK,YAAY,KAAK,aAAa,cAAc,CAAC;AAAA,MACnD;AAAA,IACD,CAAC,CAAC;AACF,SAAK,YAAY,KAAK,aAAa,cAAc,CAAC;AAAA,EAEnD;AAAA,EAnKD,OAqGiF;AAAA;AAAA;AAAA,EACxE;AAAA,EACS,cAAc,IAAI,QAAsC;AAAA,EACxD,qBAAqB,IAAI,QAA0B;AAAA,EAC5D;AAAA,EACA;AAAA,EACA;AAAA,EACS,mBAAmB,IAAI,gBAAgB;AAAA,EAChD,4BAA2C,CAAC;AAAA,EAC5C;AAAA,EACA;AAAA,EAER,IAAW,cAAsB;AAChC,WAAO,KAAK;AAAA,EACb;AAAA,EACA,IAAW,gBAAyC;AACnD,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAW,WAAgC;AAC1C,WAAO,KAAK;AAAA,EACb;AAAA,EAEQ;AAAA,EAyCR,IAAW,aAAkD;AAC5D,WAAO,KAAK,YAAY;AAAA,EACzB;AAAA,EAEA,IAAW,oBAA6C;AACvD,WAAO,KAAK,mBAAmB;AAAA,EAChC;AAAA,EAEO,cAAqC;AAC3C,QAAI,KAAK,UAAU;AAClB,aAAO,KAAK;AAAA,IACb;AAEA,QAAI,KAAK,eAAe;AACvB,aAAO,KAAK,cAAc,YAAY,EAAE,YAAY;AAAA,IACrD;AACA,WAAO;AAAA,EACR;AAAA,EAEmB,cAAc;AAAA,EAEjC;AAAA,EAEO,OAAO,iBAA0B,QAA4B,cAAyB;AAC5F,SAAK,YAAY,iBAAiB,KAAK;AACvC,UAAM,UAAU,KAAK,eAAe,UAAU,KAAK,CAAAC,aAAWA,SAAQ,qBAAqB,eAAe;AAC1G,SAAK,eAAe,0BAA0B,KAAK,aAAa,EAAE,QAAQ,KAAK,gBAAgB,QAAQ,CAAC;AAAA,EACzG;AAAA,EAEQ,2BAA2B;AAClC,QAAI,CAAC,KAAK,aAAa;AACtB,WAAK,KAAK,KAAK,cAAc,KAAK,eAAe,KAAK,GAAG,CAAC;AAAA,IAC3D;AAAA,EACD;AAAA,EAEQ,UAAU,OAA2B;AAC5C,QAAI,UAAU,gBAA2B;AACxC,WAAK,qBAAqB,MAAM;AAAA,IACjC,WAAW,UAAU,gBAA2B;AAC/C,WAAK,qBAAqB,mBAAmB;AAAA,IAC9C;AAAA,EACD;AAAA,EAEQ,aAAa,iBAAyB,OAA2B;AACxE,UAAM,SAAS,KAAK,OAAO,cAAc,EAAE;AAC3C,UAAM,SAAS,KAAK,qBAAqB,iBAAiB,eAAe;AACzE,QAAI,QAAQ;AACX,UAAI,YAAoB;AACxB,UAAI,KAAK,eAAe,OAAO;AAC9B,cAAM,sBAAsB,OAAO;AACnC,cAAM,gBAAgB,OAAO;AAC7B,oBAAY,KAAK,OAAO,oBAAoB,KAAK,eAAe,MAAM,eAAe,IAAI,SAAS,IAAI,cAAc,MAAM,oBAAoB;AAAA,MAC/I;AACA,WAAK,OAAO,aAAa,SAAS;AAClC,WAAK,UAAU,KAAK;AAAA,IACrB,OAAO;AACN,WAAK,YAAY,KAAK;AAAA,IACvB;AAAA,EACD;AAAA,EAEQ,YAAY,OAA2B;AAC9C,UAAM,gBAAgB,KAAK,eAAe,QACvC,IAAI,MAAM,KAAK,eAAe,MAAM,iBAAiB,KAAK,eAAe,MAAM,aAAa,KAAK,eAAe,MAAM,gBAAgB,GAAG,CAAC,IAC1I,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC;AAEvB,SAAK,OAAO,oBAAoB,aAAa;AAC7C,SAAK,UAAU,KAAK;AAAA,EACrB;AAAA,EAEO,YAAY,iBAA0B,QAA4B,cAAyB;AACjG,SAAK,yBAAyB;AAE9B,QAAI,oBAAoB,QAAW;AAClC,WAAK,aAAa,iBAAiB,KAAK;AAAA,IACzC,OAAO;AACN,WAAK,YAAY,KAAK;AAAA,IACvB;AAAA,EACD;AAAA,EAEO,qBAA2F;AACjG,WAAO;AAAA,MACN,YAAY,KAAK,qBAAqB,kBAAkB;AAAA,MACxD,OAAO,KAAK,qBAAqB,gBAAgB;AAAA,IAClD;AAAA,EACD;AAAA,EAEO,kBAAkB,SAAiB;AACzC,SAAK,kBAAkB;AACvB,SAAK,OAAO;AACZ,SAAK,qBAAqB,kBAAkB,OAAO;AAAA,EACpD;AAAA,EAEU,eAAe,WAA8B;AACtD,SAAK,YAAY,eAAe;AAChC,SAAK,uBAAuB,KAAK,4BAA4B;AAAA,MAC5D;AAAA,MACA;AAAA,MACA,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK,OAAO,SAAS,EAAG;AAAA,MACxB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,EAAE,QAAQ,KAAK,QAAQ,mBAAmB,IAAI,qBAAqB,KAAK,qBAAqB,SAAyB,QAAQ,EAAE,cAAc,qBAAqB,WAAW;AAAA,MAC9K,KAAK;AAAA,MACL;AAAA,QACC,cAAc,mCAAY;AACzB,cAAI,CAAC,KAAK,eAAe,YAAY,CAAC,KAAK,eAAe,SAAS,QAAQ;AAC1E,kBAAM,cAAc,KAAK,YAAY;AAErC,gBAAI,aAAa;AAChB,oBAAM,gBAAgB,KAAK,eAAe;AAC1C,kBAAI,CAAC,eAAe;AACnB;AAAA,cACD;AACA,kBAAI;AAEJ,kBAAI,YAAY,eAAe,cAAc,eAAe;AAG3D,sBAAM,WAAW,YAAY,aAAa,cAAc;AACxD,wBAAQ,IAAI,MAAM,cAAc,kBAAkB,UAAU,cAAc,aAAa,cAAc,gBAAgB,UAAU,cAAc,SAAS;AAAA,cACvJ,OAAO;AACN,wBAAQ,IAAI,MAAM,cAAc,iBAAiB,cAAc,aAAa,cAAc,eAAe,cAAc,SAAS;AAAA,cACjI;AACA,oBAAM,KAAK,eAAe,4BAA4B,KAAK,aAAa,KAAK,eAAe,qBAAqB,KAAK;AAAA,YACvH;AAAA,UACD;AAAA,QACD,GAtBc;AAAA,QAuBd,UAAU,6BAAM;AACf,eAAK,SAAS;AAAA,QACf,GAFU;AAAA,MAGX;AAAA,IACD;AAEA,SAAK,aAAa,IAAI,KAAK,oBAAoB;AAAA,EAChD;AAAA,EAEQ,cAAc,OAAkD;AACvE,QAAI,CAAC,OAAO;AACX,aAAO;AAAA,IACR;AAEA,WAAO,EAAE,YAAY,MAAM,eAAe,QAAQ,MAAM,kBAAkB,MAAM,mBAAmB,MAAM,cAAc,MAAM,YAAY,KAAK,IAAI,EAAE;AAAA,EACrJ;AAAA,EAEQ,sBAA4B;AACnC,SAAK,QAAQ;AACb,SAAK,eAAe,qBAAqB,KAAK,aAAa,KAAK,eAAe,QAAQ;AAAA,EACxF;AAAA,EAEO,WAAW;AACjB,SAAK,eAAe,mBAAmB,UAAU,8BAA8B;AAAA,EAChF;AAAA,EAEO,OAAO,WAAqB;AAClC,SAAK,eAAe,mBAAmB,UAAU,8BAA8B;AAC/E,QAAI,WAAW;AACd,WAAK,eAAe,0BAA0B,KAAK,aAAa,EAAE,QAAQ,KAAK,eAAe,CAAC;AAAA,IAChG;AAAA,EACD;AAAA,EAEO,mBAA2B;AACjC,QAAI,KAAK,eAAe;AACvB,aAAO,KAAK,cAAc,YAAY,EAAE,SAAU;AAAA,IACnD;AACA,WAAO;AAAA,EACR;AAAA,EAEA,MAAM,OAAO,eAAgD;AAC5D,QAAI,KAAK,mBAAmB,eAAe;AAC1C,WAAK,0BAA0B,QAAQ,gBAAc,WAAW,QAAQ,CAAC;AACzE,WAAK,iBAAiB;AACtB,WAAK,4BAA4B,CAAC;AAClC,WAAK,2BAA2B;AAAA,IACjC;AAEA,UAAM,KAAK,qBAAqB,oBAAoB,aAAa;AAGjE,UAAM,aAAa,KAAK,eAAe,OAAO,iBAAiB;AAC/D,QAAI,mBAAmB;AACvB,QAAI,KAAK,eAAe;AACvB,WAAK,cAAc,eAAe,cAAc,KAAK;AACrD,UAAI,KAAK,cAAc,YAAY,EAAE,SAAU,eAAe,YAAY;AACzE,2BAAmB;AACnB,aAAK,cAAc,cAAc,UAAU;AAAA,MAC5C;AAAA,IACD;AAEA,QAAK,oBAAoB,KAAK,eAAiB,KAAK,eAAe,qBAAqB,UAAU,8BAA8B,YAAY,CAAC,KAAK,aAAc;AAC/J,WAAK,KAAK,KAAK,cAAc,KAAK,eAAe,KAAK,GAAG,CAAC;AAAA,IAC3D,WAAW,KAAK,eAAe,qBAAqB,UAAU,8BAA8B,UAAU;AACrG,WAAK,KAAK;AAAA,IACX;AAAA,EACD;AAAA,EAEmB,SAAS,cAA4B;AACvD,SAAK,qBAAqB,OAAO,YAAY;AAAA,EAC9C;AAAA,EAEmB,UAAU,eAAuB,cAA4B;AAC/E,SAAK,qBAAqB,OAAO,YAAY;AAAA,EAC9C;AAAA,EAEA,MAAM,QAAQ,OAA2B,cAAuB;AAC/D,QAAI,OAAO;AACV,WAAK,gBAAgB,IAAI,mBAAmB,KAAK,QAAQ,OAAO,iBAAiB,EAAE;AACnF,WAAK,cAAc,eAAe,KAAK,eAAe,KAAK;AAC3D,WAAK,iBAAiB,IAAI,KAAK,cAAc,sBAAsB,OAAM,MAAK;AAC7E,YAAI,CAAC,KAAK,eAAe,OAAO;AAC/B;AAAA,QACD;AACA,cAAM,QAAQ,IAAK,KAAK,eAAe,MAAM;AAC7C,cAAM,WAAW,IAAI,MAAM,KAAK,eAAe,MAAM,kBAAkB,OAAO,KAAK,eAAe,MAAM,aAAa,KAAK,eAAe,MAAM,gBAAgB,OAAO,KAAK,eAAe,MAAM,SAAS;AACzM,aAAK,eAAe,QAAQ;AAAA,MAC7B,CAAC,CAAC;AAAA,IACH;AAEA,UAAM,KAAK,qBAAqB,QAAQ,KAAK,OAAO,UAAU,aAAa,UAAU,GAAG,YAAY;AACpG,SAAK,aAAa,IAAI,KAAK,qBAAqB,YAAY,eAAa;AACxE,WAAK,SAAS,SAAS;AAAA,IACxB,CAAC,CAAC;AACF,QAAK,KAAK,eAAe,qBAAqB,UAAU,8BAA8B,YAAc,UAAU,QAAY;AACzH,WAAK,KAAK,KAAK,cAAc,KAAK,GAAG,CAAC;AAAA,IACvC;AAGA,QAAI,cAAc;AACjB,WAAK,YAAY;AAAA,IAClB;AAEA,SAAK,2BAA2B;AAAA,EACjC;AAAA,EAEQ,6BAA6B;AACpC,SAAK,0BAA0B,KAAK,KAAK,eAAe,oBAAoB,OAAM,MAAK;AACtF,YAAM,KAAK,OAAO,KAAK,cAAc;AAAA,IACtC,CAAC,CAAC;AAEF,SAAK,0BAA0B,KAAK,KAAK,eAAe,4BAA4B,WAAS;AAC5F,UAAI,UAAU,UAAU,8BAA8B,YAAY,CAAC,KAAK,aAAa;AACpF,aAAK,KAAK,KAAK,cAAc,KAAK,eAAe,KAAK,GAAG,CAAC;AAC1D,aAAK,qBAAqB,iCAAiC;AAC3D;AAAA,MACD;AAEA,UAAI,UAAU,UAAU,8BAA8B,aAAa,KAAK,aAAa;AACpF,aAAK,KAAK;AACV;AAAA,MACD;AAAA,IACD,CAAC,CAAC;AAEF,QAAI,KAAK,6BAA6B,QAAW;AAChD,YAAM,qCAAqC,KAAK,eAAe,mCAAmC,WAAS;AAE1G,aAAK,2BAA2B;AAChC,aAAK,eAAe,mBAAmB,KAAK;AAC5C,2CAAmC,QAAQ;AAAA,MAC5C,CAAC;AACD,WAAK,0BAA0B,KAAK,kCAAkC;AAAA,IACvE;AAGA,SAAK,0BAA0B,KAAK,KAAK,eAAe,iBAAiB,MAAM;AAC9E,YAAM,cACL,iCAAiC,KAAK,eAAe,OAAO,KAAK,aAAa,cAAc,CAAC,KAAK,MAAM;AACzG,WAAK,MAAM;AAAA,QACV,YAAY;AAAA,QACZ,YAAY;AAAA,MACb,CAAC;AACD,WAAK,WAAW,MAAM,YAAY,4BAA4B,GAAG,WAAW,EAAE;AAC9E,WAAK,WAAW,MAAM,YAAY,sCAAsC,GAAG,YAAY,YAAY,GAAE,CAAC,EAAE;AAAA,IACzG,CAAC,CAAC;AAAA,EACH;AAAA,EAEA,MAAM,gBAA+B;AACpC,WAAO,KAAK,qBAAqB,cAAc;AAAA,EAChD;AAAA,EAEA,SAAS,YAA2B;AACnC,QAAK,KAAK,gBAAgB,UAAe,WAAW,WAAW,KAAO,WAAW,UAAU,GAAI;AAC9F,WAAK,cAAc,mBAAmB,UAAU,8BAA8B;AAC9E;AAAA,IACD;AACA,QAAI,KAAK,aAAa;AACrB,WAAK,qBAAqB,OAAO;AAEjC,YAAM,aAAa,KAAK,KAAK,KAAK,OAAO,UAAU,aAAa,UAAU,IAAI,GAAG;AACjF,YAAM,aAAa,KAAK,OAAO,UAAU,aAAa,UAAU;AAChE,YAAM,cAAc,KAAK,MAAM,aAAa,CAAC;AAC7C,YAAM,iBAAiB,KAAK,MAAM,aAAa,CAAC,IAAI;AAEpD,YAAM,sBAAsB,KAAK,MAAM,aAAa,WAAW,SAAS,cAAc,iBAAiB,KAAmD,UAAU;AAEpK,UAAI,KAAK,WAAW,kBAAkB,qBAAqB;AAC1D;AAAA,MACD;AAEA,YAAM,kBAAkB,KAAK,YAAY;AAEzC,UAAI,KAAK,aAAa,mBAAmB,gBAAgB,eAAe,KAAK,UAAU,mBAAmB,KAAK,UAAU,oBAAoB,GAAG;AAC/I,aAAK,UAAU,kBAAkB,gBAAgB;AAAA,MAClD;AAEA,YAAM,UAAU,wBAAwB,QAAQ,KAAK,MAAM;AAC3D,WAAK,UAAU,mBAAmB;AAClC,cAAQ,QAAQ,KAAK,MAAM;AAAA,IAC5B;AAAA,EACD;AAAA,EAEQ,YAAY,OAAoB;AACvC,UAAM,cAAc,iCAAiC,KAAK,eAAe,OAAO,KAAK,aAAa,cAAc,CAAC,KAAK,MAAM;AAC5H,SAAK,MAAM;AAAA,MACV,YAAY;AAAA,MACZ,YAAY;AAAA,IACb,CAAC;AACD,UAAM,WAAW,KAAK,OAAO,UAAU,aAAa,QAAQ;AAG5D,SAAK,qBAAqB,WAAW,OAAO,QAAQ;AAAA,EACrD;AAAA,EAES,KAAK,YAA4C,eAA6B;AACtF,UAAM,gBAAgB,KAAK,eAAe,YAAY;AACtD,QAAI,QAAQ,MAAM,SAAS,UAAU,IAAI,aAAc,aAAa,MAAM,cAAc,UAAU,IAAI;AACtG,QAAI,eAAe,YAAY,SAAS,cAAc,SAAS,eAAe,MAAM,eAAe;AAGlG,YAAM,WAAW,cAAc,SAAS,aAAa,MAAM;AAC3D,cAAQ,IAAI,MAAM,MAAM,kBAAkB,UAAU,MAAM,aAAa,MAAM,gBAAgB,UAAU,MAAM,SAAS;AAAA,IACvH;AAEA,SAAK,cAAc;AACnB,UAAM,KAAK,SAAS,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,aAAa;AACxD,SAAK,eAAe,mBAAmB,UAAU,8BAA8B;AAC/E,SAAK,SAAS,KAAK,qBAAqB,cAAc,CAAC;AAAA,EACxD;AAAA,EAES,OAAO;AACf,QAAI,KAAK,aAAa;AACrB,WAAK,cAAc;AAEnB,UAAI,KAAK,OAAO,eAAe,GAAG;AACjC,aAAK,OAAO,MAAM;AAAA,MACnB;AAEA,UAAI,CAAC,KAAK,eAAe,YAAY,CAAC,KAAK,eAAe,SAAS,QAAQ;AAC1E,aAAK,oBAAoB;AAAA,MAC1B;AAAA,IACD;AACA,UAAM,KAAK;AAAA,EACZ;AAAA,EAES,UAAU;AAClB,UAAM,QAAQ;AAEd,QAAI,KAAK,eAAe;AACvB,WAAK,cAAc,QAAQ;AAC3B,WAAK,gBAAgB;AAAA,IACtB;AAEA,SAAK,iBAAiB,QAAQ;AAC9B,SAAK,0BAA0B,QAAQ,YAAU,OAAO,QAAQ,CAAC;AACjE,SAAK,YAAY,KAAK,MAAS;AAAA,EAChC;AACD;AAhba,mBAAN;AAAA,EA+BJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAnCU;",
  "names": ["CommentWidgetFocus", "comment"]
}
