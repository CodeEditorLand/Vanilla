{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/comments/browser/commentsController.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Action, IAction } from '../../../../base/common/actions.js';\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { findFirstIdxMonotonousOrArrLen } from '../../../../base/common/arraysFind.js';\nimport { CancelablePromise, createCancelablePromise, Delayer } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { DisposableStore, dispose, IDisposable } from '../../../../base/common/lifecycle.js';\nimport './media/review.css';\nimport { ICodeEditor, IEditorMouseEvent, isCodeEditor, isDiffEditor } from '../../../../editor/browser/editorBrowser.js';\nimport { ICodeEditorService } from '../../../../editor/browser/services/codeEditorService.js';\nimport { IRange, Range } from '../../../../editor/common/core/range.js';\nimport { EditorType, IDiffEditor, IEditor, IEditorContribution, IModelChangedEvent } from '../../../../editor/common/editorCommon.js';\nimport { IModelDecorationOptions, IModelDeltaDecoration } from '../../../../editor/common/model.js';\nimport { ModelDecorationOptions, TextModel } from '../../../../editor/common/model/textModel.js';\nimport * as languages from '../../../../editor/common/languages.js';\nimport * as nls from '../../../../nls.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IQuickInputService, IQuickPickItem, QuickPickInput } from '../../../../platform/quickinput/common/quickInput.js';\nimport { CommentGlyphWidget } from './commentGlyphWidget.js';\nimport { ICommentInfo, ICommentService } from './commentService.js';\nimport { CommentWidgetFocus, isMouseUpEventDragFromMouseDown, parseMouseDownInfoFromEvent, ReviewZoneWidget } from './commentThreadZoneWidget.js';\nimport { ACTIVE_GROUP, IEditorService, SIDE_GROUP } from '../../../services/editor/common/editorService.js';\nimport { EmbeddedCodeEditorWidget } from '../../../../editor/browser/widget/codeEditor/embeddedCodeEditorWidget.js';\nimport { EditorOption } from '../../../../editor/common/config/editorOptions.js';\nimport { IViewsService } from '../../../services/views/common/viewsService.js';\nimport { COMMENTS_VIEW_ID } from './commentsTreeViewer.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { COMMENTS_SECTION, ICommentsConfiguration } from '../common/commentsConfiguration.js';\nimport { COMMENTEDITOR_DECORATION_KEY } from './commentReply.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { IContextKey, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { Position } from '../../../../editor/common/core/position.js';\nimport { CommentThreadRangeDecorator } from './commentThreadRangeDecorator.js';\nimport { ICursorSelectionChangedEvent } from '../../../../editor/common/cursorEvents.js';\nimport { CommentsPanel } from './commentsView.js';\nimport { status } from '../../../../base/browser/ui/aria/aria.js';\nimport { CommentContextKeys } from '../common/commentContextKeys.js';\nimport { AccessibilityVerbositySettingId } from '../../accessibility/browser/accessibilityConfiguration.js';\nimport { AccessibilityCommandId } from '../../accessibility/common/accessibilityCommands.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { threadHasMeaningfulComments } from './commentsModel.js';\n\nexport const ID = 'editor.contrib.review';\n\ninterface CommentRangeAction {\n\townerId: string;\n\textensionId: string | undefined;\n\tlabel: string | undefined;\n\tcommentingRangesInfo: languages.CommentingRanges;\n}\n\ninterface MergedCommentRangeActions {\n\trange?: Range;\n\taction: CommentRangeAction;\n}\n\nclass CommentingRangeDecoration implements IModelDeltaDecoration {\n\tprivate _decorationId: string | undefined;\n\tprivate _startLineNumber: number;\n\tprivate _endLineNumber: number;\n\n\tpublic get id(): string | undefined {\n\t\treturn this._decorationId;\n\t}\n\n\tpublic set id(id: string | undefined) {\n\t\tthis._decorationId = id;\n\t}\n\n\tpublic get range(): IRange {\n\t\treturn {\n\t\t\tstartLineNumber: this._startLineNumber, startColumn: 1,\n\t\t\tendLineNumber: this._endLineNumber, endColumn: 1\n\t\t};\n\t}\n\n\tconstructor(private _editor: ICodeEditor, private _ownerId: string, private _extensionId: string | undefined, private _label: string | undefined, private _range: IRange, public readonly options: ModelDecorationOptions, private commentingRangesInfo: languages.CommentingRanges, public readonly isHover: boolean = false) {\n\t\tthis._startLineNumber = _range.startLineNumber;\n\t\tthis._endLineNumber = _range.endLineNumber;\n\t}\n\n\tpublic getCommentAction(): CommentRangeAction {\n\t\treturn {\n\t\t\textensionId: this._extensionId,\n\t\t\tlabel: this._label,\n\t\t\townerId: this._ownerId,\n\t\t\tcommentingRangesInfo: this.commentingRangesInfo\n\t\t};\n\t}\n\n\tpublic getOriginalRange() {\n\t\treturn this._range;\n\t}\n\n\tpublic getActiveRange() {\n\t\treturn this.id ? this._editor.getModel()!.getDecorationRange(this.id) : undefined;\n\t}\n}\n\nclass CommentingRangeDecorator {\n\tpublic static description = 'commenting-range-decorator';\n\tprivate decorationOptions: ModelDecorationOptions;\n\tprivate hoverDecorationOptions: ModelDecorationOptions;\n\tprivate multilineDecorationOptions: ModelDecorationOptions;\n\tprivate commentingRangeDecorations: CommentingRangeDecoration[] = [];\n\tprivate decorationIds: string[] = [];\n\tprivate _editor: ICodeEditor | undefined;\n\tprivate _infos: ICommentInfo[] | undefined;\n\tprivate _lastHover: number = -1;\n\tprivate _lastSelection: Range | undefined;\n\tprivate _lastSelectionCursor: number | undefined;\n\tprivate _onDidChangeDecorationsCount: Emitter<number> = new Emitter();\n\tpublic readonly onDidChangeDecorationsCount = this._onDidChangeDecorationsCount.event;\n\n\tconstructor() {\n\t\tconst decorationOptions: IModelDecorationOptions = {\n\t\t\tdescription: CommentingRangeDecorator.description,\n\t\t\tisWholeLine: true,\n\t\t\tlinesDecorationsClassName: 'comment-range-glyph comment-diff-added'\n\t\t};\n\n\t\tthis.decorationOptions = ModelDecorationOptions.createDynamic(decorationOptions);\n\n\t\tconst hoverDecorationOptions: IModelDecorationOptions = {\n\t\t\tdescription: CommentingRangeDecorator.description,\n\t\t\tisWholeLine: true,\n\t\t\tlinesDecorationsClassName: `comment-range-glyph line-hover`\n\t\t};\n\n\t\tthis.hoverDecorationOptions = ModelDecorationOptions.createDynamic(hoverDecorationOptions);\n\n\t\tconst multilineDecorationOptions: IModelDecorationOptions = {\n\t\t\tdescription: CommentingRangeDecorator.description,\n\t\t\tisWholeLine: true,\n\t\t\tlinesDecorationsClassName: `comment-range-glyph multiline-add`\n\t\t};\n\n\t\tthis.multilineDecorationOptions = ModelDecorationOptions.createDynamic(multilineDecorationOptions);\n\t}\n\n\tpublic updateHover(hoverLine?: number) {\n\t\tif (this._editor && this._infos && (hoverLine !== this._lastHover)) {\n\t\t\tthis._doUpdate(this._editor, this._infos, hoverLine);\n\t\t}\n\t\tthis._lastHover = hoverLine ?? -1;\n\t}\n\n\tpublic updateSelection(cursorLine: number, range: Range = new Range(0, 0, 0, 0)) {\n\t\tthis._lastSelection = range.isEmpty() ? undefined : range;\n\t\tthis._lastSelectionCursor = range.isEmpty() ? undefined : cursorLine;\n\t\t// Some scenarios:\n\t\t// Selection is made. Emphasis should show on the drag/selection end location.\n\t\t// Selection is made, then user clicks elsewhere. We should still show the decoration.\n\t\tif (this._editor && this._infos) {\n\t\t\tthis._doUpdate(this._editor, this._infos, cursorLine, range);\n\t\t}\n\t}\n\n\tpublic update(editor: ICodeEditor | undefined, commentInfos: ICommentInfo[], cursorLine?: number, range?: Range) {\n\t\tif (editor) {\n\t\t\tthis._editor = editor;\n\t\t\tthis._infos = commentInfos;\n\t\t\tthis._doUpdate(editor, commentInfos, cursorLine, range);\n\t\t}\n\t}\n\n\tprivate _lineHasThread(editor: ICodeEditor, lineRange: Range) {\n\t\treturn editor.getDecorationsInRange(lineRange)?.find(decoration => decoration.options.description === CommentGlyphWidget.description);\n\t}\n\n\tprivate _doUpdate(editor: ICodeEditor, commentInfos: ICommentInfo[], emphasisLine: number = -1, selectionRange: Range | undefined = this._lastSelection) {\n\t\tconst model = editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there's still a selection, use that.\n\t\temphasisLine = this._lastSelectionCursor ?? emphasisLine;\n\n\t\tconst commentingRangeDecorations: CommentingRangeDecoration[] = [];\n\t\tfor (const info of commentInfos) {\n\t\t\tinfo.commentingRanges.ranges.forEach(range => {\n\t\t\t\tconst rangeObject = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n\t\t\t\tlet intersectingSelectionRange = selectionRange ? rangeObject.intersectRanges(selectionRange) : undefined;\n\t\t\t\tif ((selectionRange && (emphasisLine >= 0) && intersectingSelectionRange)\n\t\t\t\t\t// If there's only one selection line, then just drop into the else if and show an emphasis line.\n\t\t\t\t\t&& !((intersectingSelectionRange.startLineNumber === intersectingSelectionRange.endLineNumber)\n\t\t\t\t\t\t&& (emphasisLine === intersectingSelectionRange.startLineNumber))) {\n\t\t\t\t\t// The emphasisLine should be within the commenting range, even if the selection range stretches\n\t\t\t\t\t// outside of the commenting range.\n\t\t\t\t\t// Clip the emphasis and selection ranges to the commenting range\n\t\t\t\t\tlet intersectingEmphasisRange: Range;\n\t\t\t\t\tif (emphasisLine <= intersectingSelectionRange.startLineNumber) {\n\t\t\t\t\t\tintersectingEmphasisRange = intersectingSelectionRange.collapseToStart();\n\t\t\t\t\t\tintersectingSelectionRange = new Range(intersectingSelectionRange.startLineNumber + 1, 1, intersectingSelectionRange.endLineNumber, 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tintersectingEmphasisRange = new Range(intersectingSelectionRange.endLineNumber, 1, intersectingSelectionRange.endLineNumber, 1);\n\t\t\t\t\t\tintersectingSelectionRange = new Range(intersectingSelectionRange.startLineNumber, 1, intersectingSelectionRange.endLineNumber - 1, 1);\n\t\t\t\t\t}\n\t\t\t\t\tcommentingRangeDecorations.push(new CommentingRangeDecoration(editor, info.uniqueOwner, info.extensionId, info.label, intersectingSelectionRange, this.multilineDecorationOptions, info.commentingRanges, true));\n\n\t\t\t\t\tif (!this._lineHasThread(editor, intersectingEmphasisRange)) {\n\t\t\t\t\t\tcommentingRangeDecorations.push(new CommentingRangeDecoration(editor, info.uniqueOwner, info.extensionId, info.label, intersectingEmphasisRange, this.hoverDecorationOptions, info.commentingRanges, true));\n\t\t\t\t\t}\n\n\t\t\t\t\tconst beforeRangeEndLine = Math.min(intersectingEmphasisRange.startLineNumber, intersectingSelectionRange.startLineNumber) - 1;\n\t\t\t\t\tconst hasBeforeRange = rangeObject.startLineNumber <= beforeRangeEndLine;\n\t\t\t\t\tconst afterRangeStartLine = Math.max(intersectingEmphasisRange.endLineNumber, intersectingSelectionRange.endLineNumber) + 1;\n\t\t\t\t\tconst hasAfterRange = rangeObject.endLineNumber >= afterRangeStartLine;\n\t\t\t\t\tif (hasBeforeRange) {\n\t\t\t\t\t\tconst beforeRange = new Range(range.startLineNumber, 1, beforeRangeEndLine, 1);\n\t\t\t\t\t\tcommentingRangeDecorations.push(new CommentingRangeDecoration(editor, info.uniqueOwner, info.extensionId, info.label, beforeRange, this.decorationOptions, info.commentingRanges, true));\n\t\t\t\t\t}\n\t\t\t\t\tif (hasAfterRange) {\n\t\t\t\t\t\tconst afterRange = new Range(afterRangeStartLine, 1, range.endLineNumber, 1);\n\t\t\t\t\t\tcommentingRangeDecorations.push(new CommentingRangeDecoration(editor, info.uniqueOwner, info.extensionId, info.label, afterRange, this.decorationOptions, info.commentingRanges, true));\n\t\t\t\t\t}\n\t\t\t\t} else if ((rangeObject.startLineNumber <= emphasisLine) && (emphasisLine <= rangeObject.endLineNumber)) {\n\t\t\t\t\tif (rangeObject.startLineNumber < emphasisLine) {\n\t\t\t\t\t\tconst beforeRange = new Range(range.startLineNumber, 1, emphasisLine - 1, 1);\n\t\t\t\t\t\tcommentingRangeDecorations.push(new CommentingRangeDecoration(editor, info.uniqueOwner, info.extensionId, info.label, beforeRange, this.decorationOptions, info.commentingRanges, true));\n\t\t\t\t\t}\n\t\t\t\t\tconst emphasisRange = new Range(emphasisLine, 1, emphasisLine, 1);\n\t\t\t\t\tif (!this._lineHasThread(editor, emphasisRange)) {\n\t\t\t\t\t\tcommentingRangeDecorations.push(new CommentingRangeDecoration(editor, info.uniqueOwner, info.extensionId, info.label, emphasisRange, this.hoverDecorationOptions, info.commentingRanges, true));\n\t\t\t\t\t}\n\t\t\t\t\tif (emphasisLine < rangeObject.endLineNumber) {\n\t\t\t\t\t\tconst afterRange = new Range(emphasisLine + 1, 1, range.endLineNumber, 1);\n\t\t\t\t\t\tcommentingRangeDecorations.push(new CommentingRangeDecoration(editor, info.uniqueOwner, info.extensionId, info.label, afterRange, this.decorationOptions, info.commentingRanges, true));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcommentingRangeDecorations.push(new CommentingRangeDecoration(editor, info.uniqueOwner, info.extensionId, info.label, range, this.decorationOptions, info.commentingRanges));\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\teditor.changeDecorations((accessor) => {\n\t\t\tthis.decorationIds = accessor.deltaDecorations(this.decorationIds, commentingRangeDecorations);\n\t\t\tcommentingRangeDecorations.forEach((decoration, index) => decoration.id = this.decorationIds[index]);\n\t\t});\n\n\t\tconst rangesDifference = this.commentingRangeDecorations.length - commentingRangeDecorations.length;\n\t\tthis.commentingRangeDecorations = commentingRangeDecorations;\n\t\tif (rangesDifference) {\n\t\t\tthis._onDidChangeDecorationsCount.fire(this.commentingRangeDecorations.length);\n\t\t}\n\t}\n\n\tprivate areRangesIntersectingOrTouchingByLine(a: Range, b: Range) {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < (b.startLineNumber - 1)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif ((b.endLineNumber + 1) < a.startLineNumber) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\tpublic getMatchedCommentAction(commentRange: Range | undefined): MergedCommentRangeActions[] {\n\t\tif (commentRange === undefined) {\n\t\t\tconst foundInfos = this._infos?.filter(info => info.commentingRanges.fileComments);\n\t\t\tif (foundInfos) {\n\t\t\t\treturn foundInfos.map(foundInfo => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\taction: {\n\t\t\t\t\t\t\townerId: foundInfo.uniqueOwner,\n\t\t\t\t\t\t\textensionId: foundInfo.extensionId,\n\t\t\t\t\t\t\tlabel: foundInfo.label,\n\t\t\t\t\t\t\tcommentingRangesInfo: foundInfo.commentingRanges\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn [];\n\t\t}\n\n\t\t// keys is ownerId\n\t\tconst foundHoverActions = new Map<string, { range: Range; action: CommentRangeAction }>();\n\t\tfor (const decoration of this.commentingRangeDecorations) {\n\t\t\tconst range = decoration.getActiveRange();\n\t\t\tif (range && this.areRangesIntersectingOrTouchingByLine(range, commentRange)) {\n\t\t\t\t// We can have several commenting ranges that match from the same uniqueOwner because of how\n\t\t\t\t// the line hover and selection decoration is done.\n\t\t\t\t// The ranges must be merged so that we can see if the new commentRange fits within them.\n\t\t\t\tconst action = decoration.getCommentAction();\n\t\t\t\tconst alreadyFoundInfo = foundHoverActions.get(action.ownerId);\n\t\t\t\tif (alreadyFoundInfo?.action.commentingRangesInfo === action.commentingRangesInfo) {\n\t\t\t\t\t// Merge ranges.\n\t\t\t\t\tconst newRange = new Range(\n\t\t\t\t\t\trange.startLineNumber < alreadyFoundInfo.range.startLineNumber ? range.startLineNumber : alreadyFoundInfo.range.startLineNumber,\n\t\t\t\t\t\trange.startColumn < alreadyFoundInfo.range.startColumn ? range.startColumn : alreadyFoundInfo.range.startColumn,\n\t\t\t\t\t\trange.endLineNumber > alreadyFoundInfo.range.endLineNumber ? range.endLineNumber : alreadyFoundInfo.range.endLineNumber,\n\t\t\t\t\t\trange.endColumn > alreadyFoundInfo.range.endColumn ? range.endColumn : alreadyFoundInfo.range.endColumn\n\t\t\t\t\t);\n\t\t\t\t\tfoundHoverActions.set(action.ownerId, { range: newRange, action });\n\t\t\t\t} else {\n\t\t\t\t\tfoundHoverActions.set(action.ownerId, { range, action });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst seenOwners = new Set<string>();\n\t\treturn Array.from(foundHoverActions.values()).filter(action => {\n\t\t\tif (seenOwners.has(action.action.ownerId)) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tseenOwners.add(action.action.ownerId);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getNearestCommentingRange(findPosition: Position, reverse?: boolean): Range | undefined {\n\t\tlet findPositionContainedWithin: Range | undefined;\n\t\tlet decorations: CommentingRangeDecoration[];\n\t\tif (reverse) {\n\t\t\tdecorations = [];\n\t\t\tfor (let i = this.commentingRangeDecorations.length - 1; i >= 0; i--) {\n\t\t\t\tdecorations.push(this.commentingRangeDecorations[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tdecorations = this.commentingRangeDecorations;\n\t\t}\n\t\tfor (const decoration of decorations) {\n\t\t\tconst range = decoration.getActiveRange();\n\t\t\tif (!range) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (findPositionContainedWithin && this.areRangesIntersectingOrTouchingByLine(range, findPositionContainedWithin)) {\n\t\t\t\tfindPositionContainedWithin = Range.plusRange(findPositionContainedWithin, range);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (range.startLineNumber <= findPosition.lineNumber && findPosition.lineNumber <= range.endLineNumber) {\n\t\t\t\tfindPositionContainedWithin = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!reverse && range.endLineNumber < findPosition.lineNumber) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (reverse && range.startLineNumber > findPosition.lineNumber) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\treturn range;\n\t\t}\n\t\treturn (decorations.length > 0 ? (decorations[0].getActiveRange() ?? undefined) : undefined);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.commentingRangeDecorations = [];\n\t}\n}\n\nexport function revealCommentThread(commentService: ICommentService, editorService: IEditorService, uriIdentityService: IUriIdentityService,\n\tcommentThread: languages.CommentThread<IRange>, comment: languages.Comment | undefined, focusReply?: boolean, pinned?: boolean, preserveFocus?: boolean, sideBySide?: boolean): void {\n\tif (!commentThread.resource) {\n\t\treturn;\n\t}\n\tif (!commentService.isCommentingEnabled) {\n\t\tcommentService.enableCommenting(true);\n\t}\n\n\tconst range = commentThread.range;\n\tconst focus = focusReply ? CommentWidgetFocus.Editor : (preserveFocus ? CommentWidgetFocus.None : CommentWidgetFocus.Widget);\n\n\tconst activeEditor = editorService.activeTextEditorControl;\n\t// If the active editor is a diff editor where one of the sides has the comment,\n\t// then we try to reveal the comment in the diff editor.\n\tconst currentActiveResources: IEditor[] = isDiffEditor(activeEditor) ? [activeEditor.getOriginalEditor(), activeEditor.getModifiedEditor()]\n\t\t: (activeEditor ? [activeEditor] : []);\n\tconst threadToReveal = commentThread.threadId;\n\tconst commentToReveal = comment?.uniqueIdInThread;\n\tconst resource = URI.parse(commentThread.resource);\n\n\tfor (const editor of currentActiveResources) {\n\t\tconst model = editor.getModel();\n\t\tif ((model instanceof TextModel) && uriIdentityService.extUri.isEqual(resource, model.uri)) {\n\n\t\t\tif (threadToReveal && isCodeEditor(editor)) {\n\t\t\t\tconst controller = CommentController.get(editor);\n\t\t\t\tcontroller?.revealCommentThread(threadToReveal, commentToReveal, true, focus);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t}\n\n\teditorService.openEditor({\n\t\tresource,\n\t\toptions: {\n\t\t\tpinned: pinned,\n\t\t\tpreserveFocus: preserveFocus,\n\t\t\tselection: range ?? new Range(1, 1, 1, 1)\n\t\t}\n\t}, sideBySide ? SIDE_GROUP : ACTIVE_GROUP).then(editor => {\n\t\tif (editor) {\n\t\t\tconst control = editor.getControl();\n\t\t\tif (threadToReveal && isCodeEditor(control)) {\n\t\t\t\tconst controller = CommentController.get(control);\n\t\t\t\tcontroller?.revealCommentThread(threadToReveal, commentToReveal, true, focus);\n\t\t\t}\n\t\t}\n\t});\n}\n\nexport class CommentController implements IEditorContribution {\n\tprivate readonly globalToDispose = new DisposableStore();\n\tprivate readonly localToDispose = new DisposableStore();\n\tprivate editor: ICodeEditor | undefined;\n\tprivate _commentWidgets: ReviewZoneWidget[];\n\tprivate _commentInfos: ICommentInfo[];\n\tprivate _commentingRangeDecorator!: CommentingRangeDecorator;\n\tprivate _commentThreadRangeDecorator!: CommentThreadRangeDecorator;\n\tprivate mouseDownInfo: { lineNumber: number } | null = null;\n\tprivate _commentingRangeSpaceReserved = false;\n\tprivate _commentingRangeAmountReserved = 0;\n\tprivate _computePromise: CancelablePromise<Array<ICommentInfo | null>> | null;\n\tprivate _computeAndSetPromise: Promise<void> | undefined;\n\tprivate _addInProgress!: boolean;\n\tprivate _emptyThreadsToAddQueue: [Range | undefined, IEditorMouseEvent | undefined][] = [];\n\tprivate _computeCommentingRangePromise!: CancelablePromise<ICommentInfo[]> | null;\n\tprivate _computeCommentingRangeScheduler!: Delayer<Array<ICommentInfo | null>> | null;\n\tprivate _pendingNewCommentCache: { [key: string]: { [key: string]: string } };\n\tprivate _pendingEditsCache: { [key: string]: { [key: string]: { [key: number]: string } } }; // uniqueOwner -> threadId -> uniqueIdInThread -> pending comment\n\tprivate _inProcessContinueOnComments: Map<string, languages.PendingCommentThread[]> = new Map();\n\tprivate _editorDisposables: IDisposable[] = [];\n\tprivate _activeCursorHasCommentingRange: IContextKey<boolean>;\n\tprivate _activeEditorHasCommentingRange: IContextKey<boolean>;\n\tprivate _hasRespondedToEditorChange: boolean = false;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@ICommentService private readonly commentService: ICommentService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ICodeEditorService private readonly codeEditorService: ICodeEditorService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IViewsService private readonly viewsService: IViewsService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@IAccessibilityService private readonly accessibilityService: IAccessibilityService\n\t) {\n\t\tthis._commentInfos = [];\n\t\tthis._commentWidgets = [];\n\t\tthis._pendingNewCommentCache = {};\n\t\tthis._pendingEditsCache = {};\n\t\tthis._computePromise = null;\n\t\tthis._activeCursorHasCommentingRange = CommentContextKeys.activeCursorHasCommentingRange.bindTo(contextKeyService);\n\t\tthis._activeEditorHasCommentingRange = CommentContextKeys.activeEditorHasCommentingRange.bindTo(contextKeyService);\n\n\t\tif (editor instanceof EmbeddedCodeEditorWidget) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.editor = editor;\n\n\t\tthis._commentingRangeDecorator = new CommentingRangeDecorator();\n\t\tthis.globalToDispose.add(this._commentingRangeDecorator.onDidChangeDecorationsCount(count => {\n\t\t\tif (count === 0) {\n\t\t\t\tthis.clearEditorListeners();\n\t\t\t} else if (this._editorDisposables.length === 0) {\n\t\t\t\tthis.registerEditorListeners();\n\t\t\t}\n\t\t}));\n\n\t\tthis.globalToDispose.add(this._commentThreadRangeDecorator = new CommentThreadRangeDecorator(this.commentService));\n\n\t\tthis.globalToDispose.add(this.commentService.onDidDeleteDataProvider(ownerId => {\n\t\t\tif (ownerId) {\n\t\t\t\tdelete this._pendingNewCommentCache[ownerId];\n\t\t\t\tdelete this._pendingEditsCache[ownerId];\n\t\t\t} else {\n\t\t\t\tthis._pendingNewCommentCache = {};\n\t\t\t\tthis._pendingEditsCache = {};\n\t\t\t}\n\t\t\tthis.beginCompute();\n\t\t}));\n\t\tthis.globalToDispose.add(this.commentService.onDidSetDataProvider(_ => this.beginComputeAndHandleEditorChange()));\n\t\tthis.globalToDispose.add(this.commentService.onDidUpdateCommentingRanges(_ => this.beginComputeAndHandleEditorChange()));\n\n\t\tthis.globalToDispose.add(this.commentService.onDidSetResourceCommentInfos(async e => {\n\t\t\tconst editorURI = this.editor && this.editor.hasModel() && this.editor.getModel().uri;\n\t\t\tif (editorURI && editorURI.toString() === e.resource.toString()) {\n\t\t\t\tawait this.setComments(e.commentInfos.filter(commentInfo => commentInfo !== null));\n\t\t\t}\n\t\t}));\n\n\t\tthis.globalToDispose.add(this.commentService.onDidChangeCommentingEnabled(e => {\n\t\t\tif (e) {\n\t\t\t\tthis.registerEditorListeners();\n\t\t\t\tthis.beginCompute();\n\t\t\t} else {\n\t\t\t\tthis.tryUpdateReservedSpace();\n\t\t\t\tthis.clearEditorListeners();\n\t\t\t\tthis._commentingRangeDecorator.update(this.editor, []);\n\t\t\t\tthis._commentThreadRangeDecorator.update(this.editor, []);\n\t\t\t\tdispose(this._commentWidgets);\n\t\t\t\tthis._commentWidgets = [];\n\t\t\t}\n\t\t}));\n\n\t\tthis.globalToDispose.add(this.editor.onWillChangeModel(e => this.onWillChangeModel(e)));\n\t\tthis.globalToDispose.add(this.editor.onDidChangeModel(_ => this.onModelChanged()));\n\t\tthis.globalToDispose.add(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('diffEditor.renderSideBySide')) {\n\t\t\t\tthis.beginCompute();\n\t\t\t}\n\t\t}));\n\n\t\tthis.onModelChanged();\n\t\tthis.codeEditorService.registerDecorationType('comment-controller', COMMENTEDITOR_DECORATION_KEY, {});\n\t\tthis.globalToDispose.add(\n\t\t\tthis.commentService.registerContinueOnCommentProvider({\n\t\t\t\tprovideContinueOnComments: () => {\n\t\t\t\t\tconst pendingComments: languages.PendingCommentThread[] = [];\n\t\t\t\t\tif (this._commentWidgets) {\n\t\t\t\t\t\tfor (const zone of this._commentWidgets) {\n\t\t\t\t\t\t\tconst zonePendingComments = zone.getPendingComments();\n\t\t\t\t\t\t\tconst pendingNewComment = zonePendingComments.newComment;\n\t\t\t\t\t\t\tif (!pendingNewComment) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet lastCommentBody;\n\t\t\t\t\t\t\tif (zone.commentThread.comments && zone.commentThread.comments.length) {\n\t\t\t\t\t\t\t\tconst lastComment = zone.commentThread.comments[zone.commentThread.comments.length - 1];\n\t\t\t\t\t\t\t\tif (typeof lastComment.body === 'string') {\n\t\t\t\t\t\t\t\t\tlastCommentBody = lastComment.body;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tlastCommentBody = lastComment.body.value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (pendingNewComment !== lastCommentBody) {\n\t\t\t\t\t\t\t\tpendingComments.push({\n\t\t\t\t\t\t\t\t\tuniqueOwner: zone.uniqueOwner,\n\t\t\t\t\t\t\t\t\turi: zone.editor.getModel()!.uri,\n\t\t\t\t\t\t\t\t\trange: zone.commentThread.range,\n\t\t\t\t\t\t\t\t\tbody: pendingNewComment,\n\t\t\t\t\t\t\t\t\tisReply: (zone.commentThread.comments !== undefined) && (zone.commentThread.comments.length > 0)\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn pendingComments;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t}\n\n\tprivate registerEditorListeners() {\n\t\tthis._editorDisposables = [];\n\t\tif (!this.editor) {\n\t\t\treturn;\n\t\t}\n\t\tthis._editorDisposables.push(this.editor.onMouseMove(e => this.onEditorMouseMove(e)));\n\t\tthis._editorDisposables.push(this.editor.onMouseLeave(() => this.onEditorMouseLeave()));\n\t\tthis._editorDisposables.push(this.editor.onDidChangeCursorPosition(e => this.onEditorChangeCursorPosition(e.position)));\n\t\tthis._editorDisposables.push(this.editor.onDidFocusEditorWidget(() => this.onEditorChangeCursorPosition(this.editor?.getPosition() ?? null)));\n\t\tthis._editorDisposables.push(this.editor.onDidChangeCursorSelection(e => this.onEditorChangeCursorSelection(e)));\n\t\tthis._editorDisposables.push(this.editor.onDidBlurEditorWidget(() => this.onEditorChangeCursorSelection()));\n\t}\n\n\tprivate clearEditorListeners() {\n\t\tdispose(this._editorDisposables);\n\t\tthis._editorDisposables = [];\n\t}\n\n\tprivate onEditorMouseLeave() {\n\t\tthis._commentingRangeDecorator.updateHover();\n\t}\n\n\tprivate onEditorMouseMove(e: IEditorMouseEvent): void {\n\t\tconst position = e.target.position?.lineNumber;\n\t\tif (e.event.leftButton.valueOf() && position && this.mouseDownInfo) {\n\t\t\tthis._commentingRangeDecorator.updateSelection(position, new Range(this.mouseDownInfo.lineNumber, 1, position, 1));\n\t\t} else {\n\t\t\tthis._commentingRangeDecorator.updateHover(position);\n\t\t}\n\t}\n\n\tprivate onEditorChangeCursorSelection(e?: ICursorSelectionChangedEvent): void {\n\t\tconst position = this.editor?.getPosition()?.lineNumber;\n\t\tif (position) {\n\t\t\tthis._commentingRangeDecorator.updateSelection(position, e?.selection);\n\t\t}\n\t}\n\n\tprivate onEditorChangeCursorPosition(e: Position | null) {\n\t\tconst decorations = e ? this.editor?.getDecorationsInRange(Range.fromPositions(e, { column: -1, lineNumber: e.lineNumber })) : undefined;\n\t\tlet hasCommentingRange = false;\n\t\tif (decorations) {\n\t\t\tfor (const decoration of decorations) {\n\t\t\t\tif (decoration.options.description === CommentGlyphWidget.description) {\n\t\t\t\t\t// We don't allow multiple comments on the same line.\n\t\t\t\t\thasCommentingRange = false;\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (decoration.options.description === CommentingRangeDecorator.description) {\n\t\t\t\t\thasCommentingRange = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._activeCursorHasCommentingRange.set(hasCommentingRange);\n\t}\n\n\tprivate isEditorInlineOriginal(testEditor: ICodeEditor): boolean {\n\t\tif (this.configurationService.getValue<boolean>('diffEditor.renderSideBySide')) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst foundEditor = this.editorService.visibleTextEditorControls.find(editor => {\n\t\t\tif (editor.getEditorType() === EditorType.IDiffEditor) {\n\t\t\t\tconst diffEditor = editor as IDiffEditor;\n\t\t\t\treturn diffEditor.getOriginalEditor() === testEditor;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t\treturn !!foundEditor;\n\t}\n\n\tprivate beginCompute(): Promise<void> {\n\t\tthis._computePromise = createCancelablePromise(token => {\n\t\t\tconst editorURI = this.editor && this.editor.hasModel() && this.editor.getModel().uri;\n\n\t\t\tif (editorURI) {\n\t\t\t\treturn this.commentService.getDocumentComments(editorURI);\n\t\t\t}\n\n\t\t\treturn Promise.resolve([]);\n\t\t});\n\n\t\tthis._computeAndSetPromise = this._computePromise.then(async commentInfos => {\n\t\t\tawait this.setComments(coalesce(commentInfos));\n\t\t\tthis._computePromise = null;\n\t\t}, error => console.log(error));\n\t\tthis._computePromise.then(() => this._computeAndSetPromise = undefined);\n\t\treturn this._computeAndSetPromise;\n\t}\n\n\tprivate beginComputeCommentingRanges() {\n\t\tif (this._computeCommentingRangeScheduler) {\n\t\t\tif (this._computeCommentingRangePromise) {\n\t\t\t\tthis._computeCommentingRangePromise.cancel();\n\t\t\t\tthis._computeCommentingRangePromise = null;\n\t\t\t}\n\n\t\t\tthis._computeCommentingRangeScheduler.trigger(() => {\n\t\t\t\tconst editorURI = this.editor && this.editor.hasModel() && this.editor.getModel().uri;\n\n\t\t\t\tif (editorURI) {\n\t\t\t\t\treturn this.commentService.getDocumentComments(editorURI);\n\t\t\t\t}\n\n\t\t\t\treturn Promise.resolve([]);\n\t\t\t}).then(commentInfos => {\n\t\t\t\tif (this.commentService.isCommentingEnabled) {\n\t\t\t\t\tconst meaningfulCommentInfos = coalesce(commentInfos);\n\t\t\t\t\tthis._commentingRangeDecorator.update(this.editor, meaningfulCommentInfos, this.editor?.getPosition()?.lineNumber, this.editor?.getSelection() ?? undefined);\n\t\t\t\t}\n\t\t\t}, (err) => {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t\treturn null;\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic static get(editor: ICodeEditor): CommentController | null {\n\t\treturn editor.getContribution<CommentController>(ID);\n\t}\n\n\tpublic revealCommentThread(threadId: string, commentUniqueId: number | undefined, fetchOnceIfNotExist: boolean, focus: CommentWidgetFocus): void {\n\t\tconst commentThreadWidget = this._commentWidgets.filter(widget => widget.commentThread.threadId === threadId);\n\t\tif (commentThreadWidget.length === 1) {\n\t\t\tcommentThreadWidget[0].reveal(commentUniqueId, focus);\n\t\t} else if (fetchOnceIfNotExist) {\n\t\t\tif (this._computeAndSetPromise) {\n\t\t\t\tthis._computeAndSetPromise.then(_ => {\n\t\t\t\t\tthis.revealCommentThread(threadId, commentUniqueId, false, focus);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.beginCompute().then(_ => {\n\t\t\t\t\tthis.revealCommentThread(threadId, commentUniqueId, false, focus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic collapseAll(): void {\n\t\tfor (const widget of this._commentWidgets) {\n\t\t\twidget.collapse();\n\t\t}\n\t}\n\n\tpublic expandAll(): void {\n\t\tfor (const widget of this._commentWidgets) {\n\t\t\twidget.expand();\n\t\t}\n\t}\n\n\tpublic expandUnresolved(): void {\n\t\tfor (const widget of this._commentWidgets) {\n\t\t\tif (widget.commentThread.state === languages.CommentThreadState.Unresolved) {\n\t\t\t\twidget.expand();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic nextCommentThread(): void {\n\t\tthis._findNearestCommentThread();\n\t}\n\n\tprivate _findNearestCommentThread(reverse?: boolean): void {\n\t\tif (!this._commentWidgets.length || !this.editor?.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst after = reverse ? this.editor.getSelection().getStartPosition() : this.editor.getSelection().getEndPosition();\n\t\tconst sortedWidgets = this._commentWidgets.sort((a, b) => {\n\t\t\tif (reverse) {\n\t\t\t\tconst temp = a;\n\t\t\t\ta = b;\n\t\t\t\tb = temp;\n\t\t\t}\n\t\t\tif (a.commentThread.range === undefined) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (b.commentThread.range === undefined) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (a.commentThread.range.startLineNumber < b.commentThread.range.startLineNumber) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tif (a.commentThread.range.startLineNumber > b.commentThread.range.startLineNumber) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif (a.commentThread.range.startColumn < b.commentThread.range.startColumn) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tif (a.commentThread.range.startColumn > b.commentThread.range.startColumn) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t});\n\n\t\tconst idx = findFirstIdxMonotonousOrArrLen(sortedWidgets, widget => {\n\t\t\tconst lineValueOne = reverse ? after.lineNumber : (widget.commentThread.range?.startLineNumber ?? 0);\n\t\t\tconst lineValueTwo = reverse ? (widget.commentThread.range?.startLineNumber ?? 0) : after.lineNumber;\n\t\t\tconst columnValueOne = reverse ? after.column : (widget.commentThread.range?.startColumn ?? 0);\n\t\t\tconst columnValueTwo = reverse ? (widget.commentThread.range?.startColumn ?? 0) : after.column;\n\t\t\tif (lineValueOne > lineValueTwo) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (lineValueOne < lineValueTwo) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (columnValueOne > columnValueTwo) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tconst nextWidget: ReviewZoneWidget | undefined = sortedWidgets[idx];\n\t\tif (nextWidget !== undefined) {\n\t\t\tthis.editor.setSelection(nextWidget.commentThread.range ?? new Range(1, 1, 1, 1));\n\t\t\tnextWidget.reveal(undefined, CommentWidgetFocus.Widget);\n\t\t}\n\t}\n\n\tpublic previousCommentThread(): void {\n\t\tthis._findNearestCommentThread(true);\n\t}\n\n\tprivate _findNearestCommentingRange(reverse?: boolean): void {\n\t\tif (!this.editor?.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst after = this.editor.getSelection().getEndPosition();\n\t\tconst range = this._commentingRangeDecorator.getNearestCommentingRange(after, reverse);\n\t\tif (range) {\n\t\t\tconst position = reverse ? range.getEndPosition() : range.getStartPosition();\n\t\t\tthis.editor.setPosition(position);\n\t\t\tthis.editor.revealLineInCenterIfOutsideViewport(position.lineNumber);\n\t\t}\n\t\tif (this.accessibilityService.isScreenReaderOptimized()) {\n\t\t\tconst commentRangeStart = range?.getStartPosition().lineNumber;\n\t\t\tconst commentRangeEnd = range?.getEndPosition().lineNumber;\n\t\t\tif (commentRangeStart && commentRangeEnd) {\n\t\t\t\tconst oneLine = commentRangeStart === commentRangeEnd;\n\t\t\t\toneLine ? status(nls.localize('commentRange', \"Line {0}\", commentRangeStart)) : status(nls.localize('commentRangeStart', \"Lines {0} to {1}\", commentRangeStart, commentRangeEnd));\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic nextCommentingRange(): void {\n\t\tthis._findNearestCommentingRange();\n\t}\n\n\tpublic previousCommentingRange(): void {\n\t\tthis._findNearestCommentingRange(true);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.globalToDispose.dispose();\n\t\tthis.localToDispose.dispose();\n\t\tdispose(this._editorDisposables);\n\t\tdispose(this._commentWidgets);\n\n\t\tthis.editor = null!; // Strict null override - nulling out in dispose\n\t}\n\n\tprivate onWillChangeModel(e: IModelChangedEvent): void {\n\t\tif (e.newModelUrl) {\n\t\t\tthis.tryUpdateReservedSpace(e.newModelUrl);\n\t\t}\n\t}\n\n\tprivate async handleCommentAdded(editorId: string | undefined, uniqueOwner: string, thread: languages.AddedCommentThread): Promise<void> {\n\t\tconst matchedZones = this._commentWidgets.filter(zoneWidget => zoneWidget.uniqueOwner === uniqueOwner && zoneWidget.commentThread.threadId === thread.threadId);\n\t\tif (matchedZones.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst matchedNewCommentThreadZones = this._commentWidgets.filter(zoneWidget => zoneWidget.uniqueOwner === uniqueOwner && zoneWidget.commentThread.commentThreadHandle === -1 && Range.equalsRange(zoneWidget.commentThread.range, thread.range));\n\n\t\tif (matchedNewCommentThreadZones.length) {\n\t\t\tmatchedNewCommentThreadZones[0].update(thread);\n\t\t\treturn;\n\t\t}\n\n\t\tconst continueOnCommentIndex = this._inProcessContinueOnComments.get(uniqueOwner)?.findIndex(pending => {\n\t\t\tif (pending.range === undefined) {\n\t\t\t\treturn thread.range === undefined;\n\t\t\t} else {\n\t\t\t\treturn Range.lift(pending.range).equalsRange(thread.range);\n\t\t\t}\n\t\t});\n\t\tlet continueOnCommentText: string | undefined;\n\t\tif ((continueOnCommentIndex !== undefined) && continueOnCommentIndex >= 0) {\n\t\t\tcontinueOnCommentText = this._inProcessContinueOnComments.get(uniqueOwner)?.splice(continueOnCommentIndex, 1)[0].body;\n\t\t}\n\n\t\tconst pendingCommentText = (this._pendingNewCommentCache[uniqueOwner] && this._pendingNewCommentCache[uniqueOwner][thread.threadId])\n\t\t\t?? continueOnCommentText;\n\t\tconst pendingEdits = this._pendingEditsCache[uniqueOwner] && this._pendingEditsCache[uniqueOwner][thread.threadId];\n\t\tconst shouldReveal = thread.canReply && thread.isTemplate && (!thread.comments || (thread.comments.length === 0)) && (!thread.editorId || (thread.editorId === editorId));\n\t\tawait this.displayCommentThread(uniqueOwner, thread, shouldReveal, pendingCommentText, pendingEdits);\n\t\tthis._commentInfos.filter(info => info.uniqueOwner === uniqueOwner)[0].threads.push(thread);\n\t\tthis.tryUpdateReservedSpace();\n\t}\n\n\tpublic onModelChanged(): void {\n\t\tthis.localToDispose.clear();\n\t\tthis.tryUpdateReservedSpace();\n\n\t\tthis.removeCommentWidgetsAndStoreCache();\n\t\tif (!this.editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._hasRespondedToEditorChange = false;\n\n\t\tthis.localToDispose.add(this.editor.onMouseDown(e => this.onEditorMouseDown(e)));\n\t\tthis.localToDispose.add(this.editor.onMouseUp(e => this.onEditorMouseUp(e)));\n\t\tif (this._editorDisposables.length) {\n\t\t\tthis.clearEditorListeners();\n\t\t\tthis.registerEditorListeners();\n\t\t}\n\n\t\tthis._computeCommentingRangeScheduler = new Delayer<ICommentInfo[]>(200);\n\t\tthis.localToDispose.add({\n\t\t\tdispose: () => {\n\t\t\t\tthis._computeCommentingRangeScheduler?.cancel();\n\t\t\t\tthis._computeCommentingRangeScheduler = null;\n\t\t\t}\n\t\t});\n\t\tthis.localToDispose.add(this.editor.onDidChangeModelContent(async () => {\n\t\t\tthis.beginComputeCommentingRanges();\n\t\t}));\n\t\tthis.localToDispose.add(this.commentService.onDidUpdateCommentThreads(async e => {\n\t\t\tconst editorURI = this.editor && this.editor.hasModel() && this.editor.getModel().uri;\n\t\t\tif (!editorURI || !this.commentService.isCommentingEnabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this._computePromise) {\n\t\t\t\tawait this._computePromise;\n\t\t\t}\n\n\t\t\tconst commentInfo = this._commentInfos.filter(info => info.uniqueOwner === e.uniqueOwner);\n\t\t\tif (!commentInfo || !commentInfo.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst added = e.added.filter(thread => thread.resource && thread.resource === editorURI.toString());\n\t\t\tconst removed = e.removed.filter(thread => thread.resource && thread.resource === editorURI.toString());\n\t\t\tconst changed = e.changed.filter(thread => thread.resource && thread.resource === editorURI.toString());\n\t\t\tconst pending = e.pending.filter(pending => pending.uri.toString() === editorURI.toString());\n\n\t\t\tremoved.forEach(thread => {\n\t\t\t\tconst matchedZones = this._commentWidgets.filter(zoneWidget => zoneWidget.uniqueOwner === e.uniqueOwner && zoneWidget.commentThread.threadId === thread.threadId && zoneWidget.commentThread.threadId !== '');\n\t\t\t\tif (matchedZones.length) {\n\t\t\t\t\tconst matchedZone = matchedZones[0];\n\t\t\t\t\tconst index = this._commentWidgets.indexOf(matchedZone);\n\t\t\t\t\tthis._commentWidgets.splice(index, 1);\n\t\t\t\t\tmatchedZone.dispose();\n\t\t\t\t}\n\t\t\t\tconst infosThreads = this._commentInfos.filter(info => info.uniqueOwner === e.uniqueOwner)[0].threads;\n\t\t\t\tfor (let i = 0; i < infosThreads.length; i++) {\n\t\t\t\t\tif (infosThreads[i] === thread) {\n\t\t\t\t\t\tinfosThreads.splice(i, 1);\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfor (const thread of changed) {\n\t\t\t\tconst matchedZones = this._commentWidgets.filter(zoneWidget => zoneWidget.uniqueOwner === e.uniqueOwner && zoneWidget.commentThread.threadId === thread.threadId);\n\t\t\t\tif (matchedZones.length) {\n\t\t\t\t\tconst matchedZone = matchedZones[0];\n\t\t\t\t\tmatchedZone.update(thread);\n\t\t\t\t\tthis.openCommentsView(thread);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst editorId = this.editor?.getId();\n\t\t\tfor (const thread of added) {\n\t\t\t\tawait this.handleCommentAdded(editorId, e.uniqueOwner, thread);\n\t\t\t}\n\n\t\t\tfor (const thread of pending) {\n\t\t\t\tawait this.resumePendingComment(editorURI, thread);\n\t\t\t}\n\t\t\tthis._commentThreadRangeDecorator.update(this.editor, commentInfo);\n\t\t}));\n\n\t\tthis.beginComputeAndHandleEditorChange();\n\t}\n\n\tprivate async resumePendingComment(editorURI: URI, thread: languages.PendingCommentThread) {\n\t\tconst matchedZones = this._commentWidgets.filter(zoneWidget => zoneWidget.uniqueOwner === thread.uniqueOwner && Range.lift(zoneWidget.commentThread.range)?.equalsRange(thread.range));\n\t\tif (thread.isReply && matchedZones.length) {\n\t\t\tthis.commentService.removeContinueOnComment({ uniqueOwner: thread.uniqueOwner, uri: editorURI, range: thread.range, isReply: true });\n\t\t\tmatchedZones[0].setPendingComment(thread.body);\n\t\t} else if (matchedZones.length) {\n\t\t\tthis.commentService.removeContinueOnComment({ uniqueOwner: thread.uniqueOwner, uri: editorURI, range: thread.range, isReply: false });\n\t\t\tconst existingPendingComment = matchedZones[0].getPendingComments().newComment;\n\t\t\t// We need to try to reconcile the existing pending comment with the incoming pending comment\n\t\t\tlet pendingComment: string;\n\t\t\tif (!existingPendingComment || thread.body.includes(existingPendingComment)) {\n\t\t\t\tpendingComment = thread.body;\n\t\t\t} else if (existingPendingComment.includes(thread.body)) {\n\t\t\t\tpendingComment = existingPendingComment;\n\t\t\t} else {\n\t\t\t\tpendingComment = `${existingPendingComment}\\n${thread.body}`;\n\t\t\t}\n\t\t\tmatchedZones[0].setPendingComment(pendingComment);\n\t\t} else if (!thread.isReply) {\n\t\t\tconst threadStillAvailable = this.commentService.removeContinueOnComment({ uniqueOwner: thread.uniqueOwner, uri: editorURI, range: thread.range, isReply: false });\n\t\t\tif (!threadStillAvailable) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this._inProcessContinueOnComments.has(thread.uniqueOwner)) {\n\t\t\t\tthis._inProcessContinueOnComments.set(thread.uniqueOwner, []);\n\t\t\t}\n\t\t\tthis._inProcessContinueOnComments.get(thread.uniqueOwner)?.push(thread);\n\t\t\tawait this.commentService.createCommentThreadTemplate(thread.uniqueOwner, thread.uri, thread.range ? Range.lift(thread.range) : undefined);\n\t\t}\n\t}\n\n\tprivate beginComputeAndHandleEditorChange(): void {\n\t\tthis.beginCompute().then(() => {\n\t\t\tif (!this._hasRespondedToEditorChange) {\n\t\t\t\tif (this._commentInfos.some(commentInfo => commentInfo.commentingRanges.ranges.length > 0 || commentInfo.commentingRanges.fileComments)) {\n\t\t\t\t\tthis._hasRespondedToEditorChange = true;\n\t\t\t\t\tconst verbose = this.configurationService.getValue(AccessibilityVerbositySettingId.Comments);\n\t\t\t\t\tif (verbose) {\n\t\t\t\t\t\tconst keybinding = this.keybindingService.lookupKeybinding(AccessibilityCommandId.OpenAccessibilityHelp)?.getAriaLabel();\n\t\t\t\t\t\tif (keybinding) {\n\t\t\t\t\t\t\tstatus(nls.localize('hasCommentRangesKb', \"Editor has commenting ranges, run the command Open Accessibility Help ({0}), for more information.\", keybinding));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstatus(nls.localize('hasCommentRangesNoKb', \"Editor has commenting ranges, run the command Open Accessibility Help, which is currently not triggerable via keybinding, for more information.\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstatus(nls.localize('hasCommentRanges', \"Editor has commenting ranges.\"));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async openCommentsView(thread: languages.CommentThread) {\n\t\tif (thread.comments && (thread.comments.length > 0) && threadHasMeaningfulComments(thread)) {\n\t\t\tconst openViewState = this.configurationService.getValue<ICommentsConfiguration>(COMMENTS_SECTION).openView;\n\t\t\tif (openViewState === 'file') {\n\t\t\t\treturn this.viewsService.openView(COMMENTS_VIEW_ID);\n\t\t\t} else if (openViewState === 'firstFile' || (openViewState === 'firstFileUnresolved' && thread.state === languages.CommentThreadState.Unresolved)) {\n\t\t\t\tconst hasShownView = this.viewsService.getViewWithId<CommentsPanel>(COMMENTS_VIEW_ID)?.hasRendered;\n\t\t\t\tif (!hasShownView) {\n\t\t\t\t\treturn this.viewsService.openView(COMMENTS_VIEW_ID);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async displayCommentThread(uniqueOwner: string, thread: languages.CommentThread, shouldReveal: boolean, pendingComment: string | undefined, pendingEdits: { [key: number]: string } | undefined): Promise<void> {\n\t\tconst editor = this.editor?.getModel();\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.editor || this.isEditorInlineOriginal(this.editor)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet continueOnCommentReply: languages.PendingCommentThread | undefined;\n\t\tif (thread.range && !pendingComment) {\n\t\t\tcontinueOnCommentReply = this.commentService.removeContinueOnComment({ uniqueOwner, uri: editor.uri, range: thread.range, isReply: true });\n\t\t}\n\t\tconst zoneWidget = this.instantiationService.createInstance(ReviewZoneWidget, this.editor, uniqueOwner, thread, pendingComment ?? continueOnCommentReply?.body, pendingEdits);\n\t\tawait zoneWidget.display(thread.range, shouldReveal);\n\t\tthis._commentWidgets.push(zoneWidget);\n\t\tthis.openCommentsView(thread);\n\t}\n\n\tprivate onEditorMouseDown(e: IEditorMouseEvent): void {\n\t\tthis.mouseDownInfo = parseMouseDownInfoFromEvent(e);\n\t}\n\n\tprivate onEditorMouseUp(e: IEditorMouseEvent): void {\n\t\tconst matchedLineNumber = isMouseUpEventDragFromMouseDown(this.mouseDownInfo, e);\n\t\tthis.mouseDownInfo = null;\n\n\t\tif (!this.editor || matchedLineNumber === null || !e.target.element) {\n\t\t\treturn;\n\t\t}\n\t\tconst mouseUpIsOnDecorator = (e.target.element.className.indexOf('comment-range-glyph') >= 0);\n\n\t\tconst lineNumber = e.target.position!.lineNumber;\n\t\tlet range: Range | undefined;\n\t\tlet selection: Range | null | undefined;\n\t\t// Check for drag along gutter decoration\n\t\tif ((matchedLineNumber !== lineNumber)) {\n\t\t\tif (matchedLineNumber > lineNumber) {\n\t\t\t\tselection = new Range(matchedLineNumber, this.editor.getModel()!.getLineLength(matchedLineNumber) + 1, lineNumber, 1);\n\t\t\t} else {\n\t\t\t\tselection = new Range(matchedLineNumber, 1, lineNumber, this.editor.getModel()!.getLineLength(lineNumber) + 1);\n\t\t\t}\n\t\t} else if (mouseUpIsOnDecorator) {\n\t\t\tselection = this.editor.getSelection();\n\t\t}\n\n\t\t// Check for selection at line number.\n\t\tif (selection && (selection.startLineNumber <= lineNumber) && (lineNumber <= selection.endLineNumber)) {\n\t\t\trange = selection;\n\t\t\tthis.editor.setSelection(new Range(selection.endLineNumber, 1, selection.endLineNumber, 1));\n\t\t} else if (mouseUpIsOnDecorator) {\n\t\t\trange = new Range(lineNumber, 1, lineNumber, 1);\n\t\t}\n\n\t\tif (range) {\n\t\t\tthis.addOrToggleCommentAtLine(range, e);\n\t\t}\n\t}\n\n\tpublic async addOrToggleCommentAtLine(commentRange: Range | undefined, e: IEditorMouseEvent | undefined): Promise<void> {\n\t\t// If an add is already in progress, queue the next add and process it after the current one finishes to\n\t\t// prevent empty comment threads from being added to the same line.\n\t\tif (!this._addInProgress) {\n\t\t\tthis._addInProgress = true;\n\t\t\t// The widget's position is undefined until the widget has been displayed, so rely on the glyph position instead\n\t\t\tconst existingCommentsAtLine = this._commentWidgets.filter(widget => widget.getGlyphPosition() === (commentRange ? commentRange.endLineNumber : 0));\n\t\t\tif (existingCommentsAtLine.length) {\n\t\t\t\tconst allExpanded = existingCommentsAtLine.every(widget => widget.expanded);\n\t\t\t\texistingCommentsAtLine.forEach(allExpanded ? widget => widget.collapse() : widget => widget.expand(true));\n\t\t\t\tthis.processNextThreadToAdd();\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tthis.addCommentAtLine(commentRange, e);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._emptyThreadsToAddQueue.push([commentRange, e]);\n\t\t}\n\t}\n\n\tprivate processNextThreadToAdd(): void {\n\t\tthis._addInProgress = false;\n\t\tconst info = this._emptyThreadsToAddQueue.shift();\n\t\tif (info) {\n\t\t\tthis.addOrToggleCommentAtLine(info[0], info[1]);\n\t\t}\n\t}\n\n\tprivate clipUserRangeToCommentRange(userRange: Range, commentRange: Range): Range {\n\t\tif (userRange.startLineNumber < commentRange.startLineNumber) {\n\t\t\tuserRange = new Range(commentRange.startLineNumber, commentRange.startColumn, userRange.endLineNumber, userRange.endColumn);\n\t\t}\n\t\tif (userRange.endLineNumber > commentRange.endLineNumber) {\n\t\t\tuserRange = new Range(userRange.startLineNumber, userRange.startColumn, commentRange.endLineNumber, commentRange.endColumn);\n\t\t}\n\t\treturn userRange;\n\t}\n\n\tpublic addCommentAtLine(range: Range | undefined, e: IEditorMouseEvent | undefined): Promise<void> {\n\t\tconst newCommentInfos = this._commentingRangeDecorator.getMatchedCommentAction(range);\n\t\tif (!newCommentInfos.length || !this.editor?.hasModel()) {\n\t\t\tthis._addInProgress = false;\n\t\t\tif (!newCommentInfos.length) {\n\t\t\t\tthrow new Error(`There are no commenting ranges at the current position (${range ? 'with range' : 'without range'}).`);\n\t\t\t}\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tif (newCommentInfos.length > 1) {\n\t\t\tif (e && range) {\n\t\t\t\tthis.contextMenuService.showContextMenu({\n\t\t\t\t\tgetAnchor: () => e.event,\n\t\t\t\t\tgetActions: () => this.getContextMenuActions(newCommentInfos, range),\n\t\t\t\t\tgetActionsContext: () => newCommentInfos.length ? newCommentInfos[0] : undefined,\n\t\t\t\t\tonHide: () => { this._addInProgress = false; }\n\t\t\t\t});\n\n\t\t\t\treturn Promise.resolve();\n\t\t\t} else {\n\t\t\t\tconst picks = this.getCommentProvidersQuickPicks(newCommentInfos);\n\t\t\t\treturn this.quickInputService.pick(picks, { placeHolder: nls.localize('pickCommentService', \"Select Comment Provider\"), matchOnDescription: true }).then(pick => {\n\t\t\t\t\tif (!pick) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst commentInfos = newCommentInfos.filter(info => info.action.ownerId === pick.id);\n\n\t\t\t\t\tif (commentInfos.length) {\n\t\t\t\t\t\tconst { ownerId } = commentInfos[0].action;\n\t\t\t\t\t\tconst clippedRange = range && commentInfos[0].range ? this.clipUserRangeToCommentRange(range, commentInfos[0].range) : range;\n\t\t\t\t\t\tthis.addCommentAtLine2(clippedRange, ownerId);\n\t\t\t\t\t}\n\t\t\t\t}).then(() => {\n\t\t\t\t\tthis._addInProgress = false;\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tconst { ownerId } = newCommentInfos[0]!.action;\n\t\t\tconst clippedRange = range && newCommentInfos[0].range ? this.clipUserRangeToCommentRange(range, newCommentInfos[0].range) : range;\n\t\t\tthis.addCommentAtLine2(clippedRange, ownerId);\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\tprivate getCommentProvidersQuickPicks(commentInfos: MergedCommentRangeActions[]) {\n\t\tconst picks: QuickPickInput[] = commentInfos.map((commentInfo) => {\n\t\t\tconst { ownerId, extensionId, label } = commentInfo.action;\n\n\t\t\treturn {\n\t\t\t\tlabel: label ?? extensionId ?? ownerId,\n\t\t\t\tid: ownerId\n\t\t\t} satisfies IQuickPickItem;\n\t\t});\n\n\t\treturn picks;\n\t}\n\n\tprivate getContextMenuActions(commentInfos: MergedCommentRangeActions[], commentRange: Range): IAction[] {\n\t\tconst actions: IAction[] = [];\n\n\t\tcommentInfos.forEach(commentInfo => {\n\t\t\tconst { ownerId, extensionId, label } = commentInfo.action;\n\n\t\t\tactions.push(new Action(\n\t\t\t\t'addCommentThread',\n\t\t\t\t`${label || extensionId}`,\n\t\t\t\tundefined,\n\t\t\t\ttrue,\n\t\t\t\t() => {\n\t\t\t\t\tconst clippedRange = commentInfo.range ? this.clipUserRangeToCommentRange(commentRange, commentInfo.range) : commentRange;\n\t\t\t\t\tthis.addCommentAtLine2(clippedRange, ownerId);\n\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t}\n\t\t\t));\n\t\t});\n\t\treturn actions;\n\t}\n\n\tpublic addCommentAtLine2(range: Range | undefined, ownerId: string) {\n\t\tif (!this.editor) {\n\t\t\treturn;\n\t\t}\n\t\tthis.commentService.createCommentThreadTemplate(ownerId, this.editor.getModel()!.uri, range, this.editor.getId());\n\t\tthis.processNextThreadToAdd();\n\t\treturn;\n\t}\n\n\tprivate getExistingCommentEditorOptions(editor: ICodeEditor) {\n\t\tconst lineDecorationsWidth: number = editor.getOption(EditorOption.lineDecorationsWidth);\n\t\tlet extraEditorClassName: string[] = [];\n\t\tconst configuredExtraClassName = editor.getRawOptions().extraEditorClassName;\n\t\tif (configuredExtraClassName) {\n\t\t\textraEditorClassName = configuredExtraClassName.split(' ');\n\t\t}\n\t\treturn { lineDecorationsWidth, extraEditorClassName };\n\t}\n\n\tprivate getWithoutCommentsEditorOptions(editor: ICodeEditor, extraEditorClassName: string[], startingLineDecorationsWidth: number) {\n\t\tlet lineDecorationsWidth = startingLineDecorationsWidth;\n\t\tconst inlineCommentPos = extraEditorClassName.findIndex(name => name === 'inline-comment');\n\t\tif (inlineCommentPos >= 0) {\n\t\t\textraEditorClassName.splice(inlineCommentPos, 1);\n\t\t}\n\n\t\tconst options = editor.getOptions();\n\t\tif (options.get(EditorOption.folding) && options.get(EditorOption.showFoldingControls) !== 'never') {\n\t\t\tlineDecorationsWidth += 11; // 11 comes from https://github.com/microsoft/vscode/blob/94ee5f58619d59170983f453fe78f156c0cc73a3/src/vs/workbench/contrib/comments/browser/media/review.css#L485\n\t\t}\n\t\tlineDecorationsWidth -= 24;\n\t\treturn { extraEditorClassName, lineDecorationsWidth };\n\t}\n\n\tprivate getWithCommentsLineDecorationWidth(editor: ICodeEditor, startingLineDecorationsWidth: number) {\n\t\tlet lineDecorationsWidth = startingLineDecorationsWidth;\n\t\tconst options = editor.getOptions();\n\t\tif (options.get(EditorOption.folding) && options.get(EditorOption.showFoldingControls) !== 'never') {\n\t\t\tlineDecorationsWidth -= 11;\n\t\t}\n\t\tlineDecorationsWidth += 24;\n\t\tthis._commentingRangeAmountReserved = lineDecorationsWidth;\n\t\treturn this._commentingRangeAmountReserved;\n\t}\n\n\tprivate getWithCommentsEditorOptions(editor: ICodeEditor, extraEditorClassName: string[], startingLineDecorationsWidth: number) {\n\t\textraEditorClassName.push('inline-comment');\n\t\treturn { lineDecorationsWidth: this.getWithCommentsLineDecorationWidth(editor, startingLineDecorationsWidth), extraEditorClassName };\n\t}\n\n\tprivate updateEditorLayoutOptions(editor: ICodeEditor, extraEditorClassName: string[], lineDecorationsWidth: number) {\n\t\teditor.updateOptions({\n\t\t\textraEditorClassName: extraEditorClassName.join(' '),\n\t\t\tlineDecorationsWidth: lineDecorationsWidth\n\t\t});\n\t}\n\n\tprivate ensureCommentingRangeReservedAmount(editor: ICodeEditor) {\n\t\tconst existing = this.getExistingCommentEditorOptions(editor);\n\t\tif (existing.lineDecorationsWidth !== this._commentingRangeAmountReserved) {\n\t\t\teditor.updateOptions({\n\t\t\t\tlineDecorationsWidth: this.getWithCommentsLineDecorationWidth(editor, existing.lineDecorationsWidth)\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate tryUpdateReservedSpace(uri?: URI) {\n\t\tif (!this.editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst hasCommentsOrRangesInInfo = this._commentInfos.some(info => {\n\t\t\tconst hasRanges = Boolean(info.commentingRanges && (Array.isArray(info.commentingRanges) ? info.commentingRanges : info.commentingRanges.ranges).length);\n\t\t\treturn hasRanges || (info.threads.length > 0);\n\t\t});\n\t\turi = uri ?? this.editor.getModel()?.uri;\n\t\tconst resourceHasCommentingRanges = uri ? this.commentService.resourceHasCommentingRanges(uri) : false;\n\n\t\tconst hasCommentsOrRanges = hasCommentsOrRangesInInfo || resourceHasCommentingRanges;\n\n\t\tif (hasCommentsOrRanges && this.commentService.isCommentingEnabled) {\n\t\t\tif (!this._commentingRangeSpaceReserved) {\n\t\t\t\tthis._commentingRangeSpaceReserved = true;\n\t\t\t\tconst { lineDecorationsWidth, extraEditorClassName } = this.getExistingCommentEditorOptions(this.editor);\n\t\t\t\tconst newOptions = this.getWithCommentsEditorOptions(this.editor, extraEditorClassName, lineDecorationsWidth);\n\t\t\t\tthis.updateEditorLayoutOptions(this.editor, newOptions.extraEditorClassName, newOptions.lineDecorationsWidth);\n\t\t\t} else {\n\t\t\t\tthis.ensureCommentingRangeReservedAmount(this.editor);\n\t\t\t}\n\t\t} else if ((!hasCommentsOrRanges || !this.commentService.isCommentingEnabled) && this._commentingRangeSpaceReserved) {\n\t\t\tthis._commentingRangeSpaceReserved = false;\n\t\t\tconst { lineDecorationsWidth, extraEditorClassName } = this.getExistingCommentEditorOptions(this.editor);\n\t\t\tconst newOptions = this.getWithoutCommentsEditorOptions(this.editor, extraEditorClassName, lineDecorationsWidth);\n\t\t\tthis.updateEditorLayoutOptions(this.editor, newOptions.extraEditorClassName, newOptions.lineDecorationsWidth);\n\t\t}\n\t}\n\n\tprivate async setComments(commentInfos: ICommentInfo[]): Promise<void> {\n\t\tif (!this.editor || !this.commentService.isCommentingEnabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._commentInfos = commentInfos;\n\t\tthis.tryUpdateReservedSpace();\n\t\t// create viewzones\n\t\tthis.removeCommentWidgetsAndStoreCache();\n\n\t\tlet hasCommentingRanges = false;\n\t\tfor (const info of this._commentInfos) {\n\t\t\tif (!hasCommentingRanges && (info.commentingRanges.ranges.length > 0 || info.commentingRanges.fileComments)) {\n\t\t\t\thasCommentingRanges = true;\n\t\t\t}\n\n\t\t\tconst providerCacheStore = this._pendingNewCommentCache[info.uniqueOwner];\n\t\t\tconst providerEditsCacheStore = this._pendingEditsCache[info.uniqueOwner];\n\t\t\tinfo.threads = info.threads.filter(thread => !thread.isDisposed);\n\t\t\tfor (const thread of info.threads) {\n\t\t\t\tlet pendingComment: string | undefined = undefined;\n\t\t\t\tif (providerCacheStore) {\n\t\t\t\t\tpendingComment = providerCacheStore[thread.threadId];\n\t\t\t\t}\n\n\t\t\t\tlet pendingEdits: { [key: number]: string } | undefined = undefined;\n\t\t\t\tif (providerEditsCacheStore) {\n\t\t\t\t\tpendingEdits = providerEditsCacheStore[thread.threadId];\n\t\t\t\t}\n\n\t\t\t\tawait this.displayCommentThread(info.uniqueOwner, thread, false, pendingComment, pendingEdits);\n\t\t\t}\n\t\t\tfor (const thread of info.pendingCommentThreads ?? []) {\n\t\t\t\tthis.resumePendingComment(this.editor!.getModel()!.uri, thread);\n\t\t\t}\n\t\t}\n\n\t\tthis._commentingRangeDecorator.update(this.editor, this._commentInfos);\n\t\tthis._commentThreadRangeDecorator.update(this.editor, this._commentInfos);\n\n\t\tif (hasCommentingRanges) {\n\t\t\tthis._activeEditorHasCommentingRange.set(true);\n\t\t} else {\n\t\t\tthis._activeEditorHasCommentingRange.set(false);\n\t\t}\n\t}\n\n\tpublic closeWidget(): void {\n\t\tthis._commentWidgets?.forEach(widget => widget.hide());\n\t\tif (this.editor) {\n\t\t\tthis.editor.focus();\n\t\t\tthis.editor.revealRangeInCenter(this.editor.getSelection()!);\n\t\t}\n\t}\n\n\tprivate removeCommentWidgetsAndStoreCache() {\n\t\tif (this._commentWidgets) {\n\t\t\tthis._commentWidgets.forEach(zone => {\n\t\t\t\tconst pendingComments = zone.getPendingComments();\n\t\t\t\tconst pendingNewComment = pendingComments.newComment;\n\t\t\t\tconst providerNewCommentCacheStore = this._pendingNewCommentCache[zone.uniqueOwner];\n\n\t\t\t\tlet lastCommentBody;\n\t\t\t\tif (zone.commentThread.comments && zone.commentThread.comments.length) {\n\t\t\t\t\tconst lastComment = zone.commentThread.comments[zone.commentThread.comments.length - 1];\n\t\t\t\t\tif (typeof lastComment.body === 'string') {\n\t\t\t\t\t\tlastCommentBody = lastComment.body;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlastCommentBody = lastComment.body.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pendingNewComment && (pendingNewComment !== lastCommentBody)) {\n\t\t\t\t\tif (!providerNewCommentCacheStore) {\n\t\t\t\t\t\tthis._pendingNewCommentCache[zone.uniqueOwner] = {};\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pendingNewCommentCache[zone.uniqueOwner][zone.commentThread.threadId] = pendingNewComment;\n\t\t\t\t} else {\n\t\t\t\t\tif (providerNewCommentCacheStore) {\n\t\t\t\t\t\tdelete providerNewCommentCacheStore[zone.commentThread.threadId];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst pendingEdits = pendingComments.edits;\n\t\t\t\tconst providerEditsCacheStore = this._pendingEditsCache[zone.uniqueOwner];\n\t\t\t\tif (Object.keys(pendingEdits).length > 0) {\n\t\t\t\t\tif (!providerEditsCacheStore) {\n\t\t\t\t\t\tthis._pendingEditsCache[zone.uniqueOwner] = {};\n\t\t\t\t\t}\n\t\t\t\t\tthis._pendingEditsCache[zone.uniqueOwner][zone.commentThread.threadId] = pendingEdits;\n\t\t\t\t} else if (providerEditsCacheStore) {\n\t\t\t\t\tdelete providerEditsCacheStore[zone.commentThread.threadId];\n\t\t\t\t}\n\n\t\t\t\tzone.dispose();\n\t\t\t});\n\t\t}\n\n\t\tthis._commentWidgets = [];\n\t}\n}\n"],
  "mappings": "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",
  "names": ["pending"]
}
