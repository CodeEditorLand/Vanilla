{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/comments/browser/commentsController.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Action, type IAction } from \"../../../../base/common/actions.js\";\nimport { coalesce } from \"../../../../base/common/arrays.js\";\nimport { findFirstIdxMonotonousOrArrLen } from \"../../../../base/common/arraysFind.js\";\nimport {\n\ttype CancelablePromise,\n\tDelayer,\n\tcreateCancelablePromise,\n} from \"../../../../base/common/async.js\";\nimport { onUnexpectedError } from \"../../../../base/common/errors.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n\tdispose,\n} from \"../../../../base/common/lifecycle.js\";\nimport \"./media/review.css\";\nimport { status } from \"../../../../base/browser/ui/aria/aria.js\";\nimport { Emitter } from \"../../../../base/common/event.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport {\n\ttype ICodeEditor,\n\ttype IEditorMouseEvent,\n\tisCodeEditor,\n\tisDiffEditor,\n} from \"../../../../editor/browser/editorBrowser.js\";\nimport { ICodeEditorService } from \"../../../../editor/browser/services/codeEditorService.js\";\nimport { EmbeddedCodeEditorWidget } from \"../../../../editor/browser/widget/codeEditor/embeddedCodeEditorWidget.js\";\nimport { EditorOption } from \"../../../../editor/common/config/editorOptions.js\";\nimport type { Position } from \"../../../../editor/common/core/position.js\";\nimport { type IRange, Range } from \"../../../../editor/common/core/range.js\";\nimport type { ICursorSelectionChangedEvent } from \"../../../../editor/common/cursorEvents.js\";\nimport {\n\tEditorType,\n\ttype IDiffEditor,\n\ttype IEditor,\n\ttype IEditorContribution,\n\ttype IModelChangedEvent,\n} from \"../../../../editor/common/editorCommon.js\";\nimport * as languages from \"../../../../editor/common/languages.js\";\nimport type {\n\tIModelDecorationOptions,\n\tIModelDeltaDecoration,\n} from \"../../../../editor/common/model.js\";\nimport {\n\tModelDecorationOptions,\n\tTextModel,\n} from \"../../../../editor/common/model/textModel.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { IAccessibilityService } from \"../../../../platform/accessibility/common/accessibility.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextMenuService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport {\n\tIQuickInputService,\n\ttype IQuickPickItem,\n\ttype QuickPickInput,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport type { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport {\n\tACTIVE_GROUP,\n\tIEditorService,\n\tSIDE_GROUP,\n} from \"../../../services/editor/common/editorService.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport { AccessibilityVerbositySettingId } from \"../../accessibility/browser/accessibilityConfiguration.js\";\nimport { AccessibilityCommandId } from \"../../accessibility/common/accessibilityCommands.js\";\nimport { CommentContextKeys } from \"../common/commentContextKeys.js\";\nimport {\n\tCOMMENTS_SECTION,\n\ttype ICommentsConfiguration,\n} from \"../common/commentsConfiguration.js\";\nimport { CommentGlyphWidget } from \"./commentGlyphWidget.js\";\nimport { COMMENTEDITOR_DECORATION_KEY } from \"./commentReply.js\";\nimport { type ICommentInfo, ICommentService } from \"./commentService.js\";\nimport { CommentThreadRangeDecorator } from \"./commentThreadRangeDecorator.js\";\nimport {\n\tCommentWidgetFocus,\n\tReviewZoneWidget,\n\tisMouseUpEventDragFromMouseDown,\n\tparseMouseDownInfoFromEvent,\n} from \"./commentThreadZoneWidget.js\";\nimport { threadHasMeaningfulComments } from \"./commentsModel.js\";\nimport { COMMENTS_VIEW_ID } from \"./commentsTreeViewer.js\";\nimport type { CommentsPanel } from \"./commentsView.js\";\n\nexport const ID = \"editor.contrib.review\";\n\ninterface CommentRangeAction {\n\townerId: string;\n\textensionId: string | undefined;\n\tlabel: string | undefined;\n\tcommentingRangesInfo: languages.CommentingRanges;\n}\n\ninterface MergedCommentRangeActions {\n\trange?: Range;\n\taction: CommentRangeAction;\n}\n\nclass CommentingRangeDecoration implements IModelDeltaDecoration {\n\tprivate _decorationId: string | undefined;\n\tprivate _startLineNumber: number;\n\tprivate _endLineNumber: number;\n\n\tpublic get id(): string | undefined {\n\t\treturn this._decorationId;\n\t}\n\n\tpublic set id(id: string | undefined) {\n\t\tthis._decorationId = id;\n\t}\n\n\tpublic get range(): IRange {\n\t\treturn {\n\t\t\tstartLineNumber: this._startLineNumber,\n\t\t\tstartColumn: 1,\n\t\t\tendLineNumber: this._endLineNumber,\n\t\t\tendColumn: 1,\n\t\t};\n\t}\n\n\tconstructor(\n\t\tprivate _editor: ICodeEditor,\n\t\tprivate _ownerId: string,\n\t\tprivate _extensionId: string | undefined,\n\t\tprivate _label: string | undefined,\n\t\tprivate _range: IRange,\n\t\tpublic readonly options: ModelDecorationOptions,\n\t\tprivate commentingRangesInfo: languages.CommentingRanges,\n\t\tpublic readonly isHover: boolean = false,\n\t) {\n\t\tthis._startLineNumber = _range.startLineNumber;\n\t\tthis._endLineNumber = _range.endLineNumber;\n\t}\n\n\tpublic getCommentAction(): CommentRangeAction {\n\t\treturn {\n\t\t\textensionId: this._extensionId,\n\t\t\tlabel: this._label,\n\t\t\townerId: this._ownerId,\n\t\t\tcommentingRangesInfo: this.commentingRangesInfo,\n\t\t};\n\t}\n\n\tpublic getOriginalRange() {\n\t\treturn this._range;\n\t}\n\n\tpublic getActiveRange() {\n\t\treturn this.id\n\t\t\t? this._editor.getModel()!.getDecorationRange(this.id)\n\t\t\t: undefined;\n\t}\n}\n\nclass CommentingRangeDecorator {\n\tpublic static description = \"commenting-range-decorator\";\n\tprivate decorationOptions: ModelDecorationOptions;\n\tprivate hoverDecorationOptions: ModelDecorationOptions;\n\tprivate multilineDecorationOptions: ModelDecorationOptions;\n\tprivate commentingRangeDecorations: CommentingRangeDecoration[] = [];\n\tprivate decorationIds: string[] = [];\n\tprivate _editor: ICodeEditor | undefined;\n\tprivate _infos: ICommentInfo[] | undefined;\n\tprivate _lastHover = -1;\n\tprivate _lastSelection: Range | undefined;\n\tprivate _lastSelectionCursor: number | undefined;\n\tprivate _onDidChangeDecorationsCount: Emitter<number> = new Emitter();\n\tpublic readonly onDidChangeDecorationsCount =\n\t\tthis._onDidChangeDecorationsCount.event;\n\n\tconstructor() {\n\t\tconst decorationOptions: IModelDecorationOptions = {\n\t\t\tdescription: CommentingRangeDecorator.description,\n\t\t\tisWholeLine: true,\n\t\t\tlinesDecorationsClassName: \"comment-range-glyph comment-diff-added\",\n\t\t};\n\n\t\tthis.decorationOptions =\n\t\t\tModelDecorationOptions.createDynamic(decorationOptions);\n\n\t\tconst hoverDecorationOptions: IModelDecorationOptions = {\n\t\t\tdescription: CommentingRangeDecorator.description,\n\t\t\tisWholeLine: true,\n\t\t\tlinesDecorationsClassName: `comment-range-glyph line-hover`,\n\t\t};\n\n\t\tthis.hoverDecorationOptions = ModelDecorationOptions.createDynamic(\n\t\t\thoverDecorationOptions,\n\t\t);\n\n\t\tconst multilineDecorationOptions: IModelDecorationOptions = {\n\t\t\tdescription: CommentingRangeDecorator.description,\n\t\t\tisWholeLine: true,\n\t\t\tlinesDecorationsClassName: `comment-range-glyph multiline-add`,\n\t\t};\n\n\t\tthis.multilineDecorationOptions = ModelDecorationOptions.createDynamic(\n\t\t\tmultilineDecorationOptions,\n\t\t);\n\t}\n\n\tpublic updateHover(hoverLine?: number) {\n\t\tif (this._editor && this._infos && hoverLine !== this._lastHover) {\n\t\t\tthis._doUpdate(this._editor, this._infos, hoverLine);\n\t\t}\n\t\tthis._lastHover = hoverLine ?? -1;\n\t}\n\n\tpublic updateSelection(\n\t\tcursorLine: number,\n\t\trange: Range = new Range(0, 0, 0, 0),\n\t) {\n\t\tthis._lastSelection = range.isEmpty() ? undefined : range;\n\t\tthis._lastSelectionCursor = range.isEmpty() ? undefined : cursorLine;\n\t\t// Some scenarios:\n\t\t// Selection is made. Emphasis should show on the drag/selection end location.\n\t\t// Selection is made, then user clicks elsewhere. We should still show the decoration.\n\t\tif (this._editor && this._infos) {\n\t\t\tthis._doUpdate(this._editor, this._infos, cursorLine, range);\n\t\t}\n\t}\n\n\tpublic update(\n\t\teditor: ICodeEditor | undefined,\n\t\tcommentInfos: ICommentInfo[],\n\t\tcursorLine?: number,\n\t\trange?: Range,\n\t) {\n\t\tif (editor) {\n\t\t\tthis._editor = editor;\n\t\t\tthis._infos = commentInfos;\n\t\t\tthis._doUpdate(editor, commentInfos, cursorLine, range);\n\t\t}\n\t}\n\n\tprivate _lineHasThread(editor: ICodeEditor, lineRange: Range) {\n\t\treturn editor\n\t\t\t.getDecorationsInRange(lineRange)\n\t\t\t?.find(\n\t\t\t\t(decoration) =>\n\t\t\t\t\tdecoration.options.description ===\n\t\t\t\t\tCommentGlyphWidget.description,\n\t\t\t);\n\t}\n\n\tprivate _doUpdate(\n\t\teditor: ICodeEditor,\n\t\tcommentInfos: ICommentInfo[],\n\t\temphasisLine = -1,\n\t\tselectionRange: Range | undefined = this._lastSelection,\n\t) {\n\t\tconst model = editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there's still a selection, use that.\n\t\temphasisLine = this._lastSelectionCursor ?? emphasisLine;\n\n\t\tconst commentingRangeDecorations: CommentingRangeDecoration[] = [];\n\t\tfor (const info of commentInfos) {\n\t\t\tinfo.commentingRanges.ranges.forEach((range) => {\n\t\t\t\tconst rangeObject = new Range(\n\t\t\t\t\trange.startLineNumber,\n\t\t\t\t\trange.startColumn,\n\t\t\t\t\trange.endLineNumber,\n\t\t\t\t\trange.endColumn,\n\t\t\t\t);\n\t\t\t\tlet intersectingSelectionRange = selectionRange\n\t\t\t\t\t? rangeObject.intersectRanges(selectionRange)\n\t\t\t\t\t: undefined;\n\t\t\t\tif (\n\t\t\t\t\tselectionRange &&\n\t\t\t\t\temphasisLine >= 0 &&\n\t\t\t\t\tintersectingSelectionRange &&\n\t\t\t\t\t// If there's only one selection line, then just drop into the else if and show an emphasis line.\n\t\t\t\t\t!(\n\t\t\t\t\t\tintersectingSelectionRange.startLineNumber ===\n\t\t\t\t\t\t\tintersectingSelectionRange.endLineNumber &&\n\t\t\t\t\t\temphasisLine ===\n\t\t\t\t\t\t\tintersectingSelectionRange.startLineNumber\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\t// The emphasisLine should be within the commenting range, even if the selection range stretches\n\t\t\t\t\t// outside of the commenting range.\n\t\t\t\t\t// Clip the emphasis and selection ranges to the commenting range\n\t\t\t\t\tlet intersectingEmphasisRange: Range;\n\t\t\t\t\tif (\n\t\t\t\t\t\temphasisLine <=\n\t\t\t\t\t\tintersectingSelectionRange.startLineNumber\n\t\t\t\t\t) {\n\t\t\t\t\t\tintersectingEmphasisRange =\n\t\t\t\t\t\t\tintersectingSelectionRange.collapseToStart();\n\t\t\t\t\t\tintersectingSelectionRange = new Range(\n\t\t\t\t\t\t\tintersectingSelectionRange.startLineNumber + 1,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\tintersectingSelectionRange.endLineNumber,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tintersectingEmphasisRange = new Range(\n\t\t\t\t\t\t\tintersectingSelectionRange.endLineNumber,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\tintersectingSelectionRange.endLineNumber,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tintersectingSelectionRange = new Range(\n\t\t\t\t\t\t\tintersectingSelectionRange.startLineNumber,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\tintersectingSelectionRange.endLineNumber - 1,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tcommentingRangeDecorations.push(\n\t\t\t\t\t\tnew CommentingRangeDecoration(\n\t\t\t\t\t\t\teditor,\n\t\t\t\t\t\t\tinfo.uniqueOwner,\n\t\t\t\t\t\t\tinfo.extensionId,\n\t\t\t\t\t\t\tinfo.label,\n\t\t\t\t\t\t\tintersectingSelectionRange,\n\t\t\t\t\t\t\tthis.multilineDecorationOptions,\n\t\t\t\t\t\t\tinfo.commentingRanges,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this._lineHasThread(editor, intersectingEmphasisRange)\n\t\t\t\t\t) {\n\t\t\t\t\t\tcommentingRangeDecorations.push(\n\t\t\t\t\t\t\tnew CommentingRangeDecoration(\n\t\t\t\t\t\t\t\teditor,\n\t\t\t\t\t\t\t\tinfo.uniqueOwner,\n\t\t\t\t\t\t\t\tinfo.extensionId,\n\t\t\t\t\t\t\t\tinfo.label,\n\t\t\t\t\t\t\t\tintersectingEmphasisRange,\n\t\t\t\t\t\t\t\tthis.hoverDecorationOptions,\n\t\t\t\t\t\t\t\tinfo.commentingRanges,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst beforeRangeEndLine =\n\t\t\t\t\t\tMath.min(\n\t\t\t\t\t\t\tintersectingEmphasisRange.startLineNumber,\n\t\t\t\t\t\t\tintersectingSelectionRange.startLineNumber,\n\t\t\t\t\t\t) - 1;\n\t\t\t\t\tconst hasBeforeRange =\n\t\t\t\t\t\trangeObject.startLineNumber <= beforeRangeEndLine;\n\t\t\t\t\tconst afterRangeStartLine =\n\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\tintersectingEmphasisRange.endLineNumber,\n\t\t\t\t\t\t\tintersectingSelectionRange.endLineNumber,\n\t\t\t\t\t\t) + 1;\n\t\t\t\t\tconst hasAfterRange =\n\t\t\t\t\t\trangeObject.endLineNumber >= afterRangeStartLine;\n\t\t\t\t\tif (hasBeforeRange) {\n\t\t\t\t\t\tconst beforeRange = new Range(\n\t\t\t\t\t\t\trange.startLineNumber,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\tbeforeRangeEndLine,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tcommentingRangeDecorations.push(\n\t\t\t\t\t\t\tnew CommentingRangeDecoration(\n\t\t\t\t\t\t\t\teditor,\n\t\t\t\t\t\t\t\tinfo.uniqueOwner,\n\t\t\t\t\t\t\t\tinfo.extensionId,\n\t\t\t\t\t\t\t\tinfo.label,\n\t\t\t\t\t\t\t\tbeforeRange,\n\t\t\t\t\t\t\t\tthis.decorationOptions,\n\t\t\t\t\t\t\t\tinfo.commentingRanges,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (hasAfterRange) {\n\t\t\t\t\t\tconst afterRange = new Range(\n\t\t\t\t\t\t\tafterRangeStartLine,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\trange.endLineNumber,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tcommentingRangeDecorations.push(\n\t\t\t\t\t\t\tnew CommentingRangeDecoration(\n\t\t\t\t\t\t\t\teditor,\n\t\t\t\t\t\t\t\tinfo.uniqueOwner,\n\t\t\t\t\t\t\t\tinfo.extensionId,\n\t\t\t\t\t\t\t\tinfo.label,\n\t\t\t\t\t\t\t\tafterRange,\n\t\t\t\t\t\t\t\tthis.decorationOptions,\n\t\t\t\t\t\t\t\tinfo.commentingRanges,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (\n\t\t\t\t\trangeObject.startLineNumber <= emphasisLine &&\n\t\t\t\t\temphasisLine <= rangeObject.endLineNumber\n\t\t\t\t) {\n\t\t\t\t\tif (rangeObject.startLineNumber < emphasisLine) {\n\t\t\t\t\t\tconst beforeRange = new Range(\n\t\t\t\t\t\t\trange.startLineNumber,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\temphasisLine - 1,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tcommentingRangeDecorations.push(\n\t\t\t\t\t\t\tnew CommentingRangeDecoration(\n\t\t\t\t\t\t\t\teditor,\n\t\t\t\t\t\t\t\tinfo.uniqueOwner,\n\t\t\t\t\t\t\t\tinfo.extensionId,\n\t\t\t\t\t\t\t\tinfo.label,\n\t\t\t\t\t\t\t\tbeforeRange,\n\t\t\t\t\t\t\t\tthis.decorationOptions,\n\t\t\t\t\t\t\t\tinfo.commentingRanges,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tconst emphasisRange = new Range(\n\t\t\t\t\t\temphasisLine,\n\t\t\t\t\t\t1,\n\t\t\t\t\t\temphasisLine,\n\t\t\t\t\t\t1,\n\t\t\t\t\t);\n\t\t\t\t\tif (!this._lineHasThread(editor, emphasisRange)) {\n\t\t\t\t\t\tcommentingRangeDecorations.push(\n\t\t\t\t\t\t\tnew CommentingRangeDecoration(\n\t\t\t\t\t\t\t\teditor,\n\t\t\t\t\t\t\t\tinfo.uniqueOwner,\n\t\t\t\t\t\t\t\tinfo.extensionId,\n\t\t\t\t\t\t\t\tinfo.label,\n\t\t\t\t\t\t\t\temphasisRange,\n\t\t\t\t\t\t\t\tthis.hoverDecorationOptions,\n\t\t\t\t\t\t\t\tinfo.commentingRanges,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (emphasisLine < rangeObject.endLineNumber) {\n\t\t\t\t\t\tconst afterRange = new Range(\n\t\t\t\t\t\t\temphasisLine + 1,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\trange.endLineNumber,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tcommentingRangeDecorations.push(\n\t\t\t\t\t\t\tnew CommentingRangeDecoration(\n\t\t\t\t\t\t\t\teditor,\n\t\t\t\t\t\t\t\tinfo.uniqueOwner,\n\t\t\t\t\t\t\t\tinfo.extensionId,\n\t\t\t\t\t\t\t\tinfo.label,\n\t\t\t\t\t\t\t\tafterRange,\n\t\t\t\t\t\t\t\tthis.decorationOptions,\n\t\t\t\t\t\t\t\tinfo.commentingRanges,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcommentingRangeDecorations.push(\n\t\t\t\t\t\tnew CommentingRangeDecoration(\n\t\t\t\t\t\t\teditor,\n\t\t\t\t\t\t\tinfo.uniqueOwner,\n\t\t\t\t\t\t\tinfo.extensionId,\n\t\t\t\t\t\t\tinfo.label,\n\t\t\t\t\t\t\trange,\n\t\t\t\t\t\t\tthis.decorationOptions,\n\t\t\t\t\t\t\tinfo.commentingRanges,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\teditor.changeDecorations((accessor) => {\n\t\t\tthis.decorationIds = accessor.deltaDecorations(\n\t\t\t\tthis.decorationIds,\n\t\t\t\tcommentingRangeDecorations,\n\t\t\t);\n\t\t\tcommentingRangeDecorations.forEach(\n\t\t\t\t(decoration, index) =>\n\t\t\t\t\t(decoration.id = this.decorationIds[index]),\n\t\t\t);\n\t\t});\n\n\t\tconst rangesDifference =\n\t\t\tthis.commentingRangeDecorations.length -\n\t\t\tcommentingRangeDecorations.length;\n\t\tthis.commentingRangeDecorations = commentingRangeDecorations;\n\t\tif (rangesDifference) {\n\t\t\tthis._onDidChangeDecorationsCount.fire(\n\t\t\t\tthis.commentingRangeDecorations.length,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate areRangesIntersectingOrTouchingByLine(a: Range, b: Range) {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber - 1) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber + 1 < a.startLineNumber) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\tpublic getMatchedCommentAction(\n\t\tcommentRange: Range | undefined,\n\t): MergedCommentRangeActions[] {\n\t\tif (commentRange === undefined) {\n\t\t\tconst foundInfos = this._infos?.filter(\n\t\t\t\t(info) => info.commentingRanges.fileComments,\n\t\t\t);\n\t\t\tif (foundInfos) {\n\t\t\t\treturn foundInfos.map((foundInfo) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\taction: {\n\t\t\t\t\t\t\townerId: foundInfo.uniqueOwner,\n\t\t\t\t\t\t\textensionId: foundInfo.extensionId,\n\t\t\t\t\t\t\tlabel: foundInfo.label,\n\t\t\t\t\t\t\tcommentingRangesInfo: foundInfo.commentingRanges,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn [];\n\t\t}\n\n\t\t// keys is ownerId\n\t\tconst foundHoverActions = new Map<\n\t\t\tstring,\n\t\t\t{ range: Range; action: CommentRangeAction }\n\t\t>();\n\t\tfor (const decoration of this.commentingRangeDecorations) {\n\t\t\tconst range = decoration.getActiveRange();\n\t\t\tif (\n\t\t\t\trange &&\n\t\t\t\tthis.areRangesIntersectingOrTouchingByLine(range, commentRange)\n\t\t\t) {\n\t\t\t\t// We can have several commenting ranges that match from the same uniqueOwner because of how\n\t\t\t\t// the line hover and selection decoration is done.\n\t\t\t\t// The ranges must be merged so that we can see if the new commentRange fits within them.\n\t\t\t\tconst action = decoration.getCommentAction();\n\t\t\t\tconst alreadyFoundInfo = foundHoverActions.get(action.ownerId);\n\t\t\t\tif (\n\t\t\t\t\talreadyFoundInfo?.action.commentingRangesInfo ===\n\t\t\t\t\taction.commentingRangesInfo\n\t\t\t\t) {\n\t\t\t\t\t// Merge ranges.\n\t\t\t\t\tconst newRange = new Range(\n\t\t\t\t\t\trange.startLineNumber <\n\t\t\t\t\t\t\talreadyFoundInfo.range.startLineNumber\n\t\t\t\t\t\t\t? range.startLineNumber\n\t\t\t\t\t\t\t: alreadyFoundInfo.range.startLineNumber,\n\t\t\t\t\t\trange.startColumn < alreadyFoundInfo.range.startColumn\n\t\t\t\t\t\t\t? range.startColumn\n\t\t\t\t\t\t\t: alreadyFoundInfo.range.startColumn,\n\t\t\t\t\t\trange.endLineNumber >\n\t\t\t\t\t\t\talreadyFoundInfo.range.endLineNumber\n\t\t\t\t\t\t\t? range.endLineNumber\n\t\t\t\t\t\t\t: alreadyFoundInfo.range.endLineNumber,\n\t\t\t\t\t\trange.endColumn > alreadyFoundInfo.range.endColumn\n\t\t\t\t\t\t\t? range.endColumn\n\t\t\t\t\t\t\t: alreadyFoundInfo.range.endColumn,\n\t\t\t\t\t);\n\t\t\t\t\tfoundHoverActions.set(action.ownerId, {\n\t\t\t\t\t\trange: newRange,\n\t\t\t\t\t\taction,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tfoundHoverActions.set(action.ownerId, { range, action });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst seenOwners = new Set<string>();\n\t\treturn Array.from(foundHoverActions.values()).filter((action) => {\n\t\t\tif (seenOwners.has(action.action.ownerId)) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tseenOwners.add(action.action.ownerId);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getNearestCommentingRange(\n\t\tfindPosition: Position,\n\t\treverse?: boolean,\n\t): Range | undefined {\n\t\tlet findPositionContainedWithin: Range | undefined;\n\t\tlet decorations: CommentingRangeDecoration[];\n\t\tif (reverse) {\n\t\t\tdecorations = [];\n\t\t\tfor (\n\t\t\t\tlet i = this.commentingRangeDecorations.length - 1;\n\t\t\t\ti >= 0;\n\t\t\t\ti--\n\t\t\t) {\n\t\t\t\tdecorations.push(this.commentingRangeDecorations[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tdecorations = this.commentingRangeDecorations;\n\t\t}\n\t\tfor (const decoration of decorations) {\n\t\t\tconst range = decoration.getActiveRange();\n\t\t\tif (!range) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tfindPositionContainedWithin &&\n\t\t\t\tthis.areRangesIntersectingOrTouchingByLine(\n\t\t\t\t\trange,\n\t\t\t\t\tfindPositionContainedWithin,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tfindPositionContainedWithin = Range.plusRange(\n\t\t\t\t\tfindPositionContainedWithin,\n\t\t\t\t\trange,\n\t\t\t\t);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\trange.startLineNumber <= findPosition.lineNumber &&\n\t\t\t\tfindPosition.lineNumber <= range.endLineNumber\n\t\t\t) {\n\t\t\t\tfindPositionContainedWithin = new Range(\n\t\t\t\t\trange.startLineNumber,\n\t\t\t\t\trange.startColumn,\n\t\t\t\t\trange.endLineNumber,\n\t\t\t\t\trange.endColumn,\n\t\t\t\t);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!reverse && range.endLineNumber < findPosition.lineNumber) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (reverse && range.startLineNumber > findPosition.lineNumber) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\treturn range;\n\t\t}\n\t\treturn decorations.length > 0\n\t\t\t? (decorations[0].getActiveRange() ?? undefined)\n\t\t\t: undefined;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.commentingRangeDecorations = [];\n\t}\n}\n\nexport function revealCommentThread(\n\tcommentService: ICommentService,\n\teditorService: IEditorService,\n\turiIdentityService: IUriIdentityService,\n\tcommentThread: languages.CommentThread<IRange>,\n\tcomment: languages.Comment | undefined,\n\tfocusReply?: boolean,\n\tpinned?: boolean,\n\tpreserveFocus?: boolean,\n\tsideBySide?: boolean,\n): void {\n\tif (!commentThread.resource) {\n\t\treturn;\n\t}\n\tif (!commentService.isCommentingEnabled) {\n\t\tcommentService.enableCommenting(true);\n\t}\n\n\tconst range = commentThread.range;\n\tconst focus = focusReply\n\t\t? CommentWidgetFocus.Editor\n\t\t: preserveFocus\n\t\t\t? CommentWidgetFocus.None\n\t\t\t: CommentWidgetFocus.Widget;\n\n\tconst activeEditor = editorService.activeTextEditorControl;\n\t// If the active editor is a diff editor where one of the sides has the comment,\n\t// then we try to reveal the comment in the diff editor.\n\tconst currentActiveResources: IEditor[] = isDiffEditor(activeEditor)\n\t\t? [activeEditor.getOriginalEditor(), activeEditor.getModifiedEditor()]\n\t\t: activeEditor\n\t\t\t? [activeEditor]\n\t\t\t: [];\n\tconst threadToReveal = commentThread.threadId;\n\tconst commentToReveal = comment?.uniqueIdInThread;\n\tconst resource = URI.parse(commentThread.resource);\n\n\tfor (const editor of currentActiveResources) {\n\t\tconst model = editor.getModel();\n\t\tif (\n\t\t\tmodel instanceof TextModel &&\n\t\t\turiIdentityService.extUri.isEqual(resource, model.uri)\n\t\t) {\n\t\t\tif (threadToReveal && isCodeEditor(editor)) {\n\t\t\t\tconst controller = CommentController.get(editor);\n\t\t\t\tcontroller?.revealCommentThread(\n\t\t\t\t\tthreadToReveal,\n\t\t\t\t\tcommentToReveal,\n\t\t\t\t\ttrue,\n\t\t\t\t\tfocus,\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t}\n\n\teditorService\n\t\t.openEditor(\n\t\t\t{\n\t\t\t\tresource,\n\t\t\t\toptions: {\n\t\t\t\t\tpinned: pinned,\n\t\t\t\t\tpreserveFocus: preserveFocus,\n\t\t\t\t\tselection: range ?? new Range(1, 1, 1, 1),\n\t\t\t\t},\n\t\t\t},\n\t\t\tsideBySide ? SIDE_GROUP : ACTIVE_GROUP,\n\t\t)\n\t\t.then((editor) => {\n\t\t\tif (editor) {\n\t\t\t\tconst control = editor.getControl();\n\t\t\t\tif (threadToReveal && isCodeEditor(control)) {\n\t\t\t\t\tconst controller = CommentController.get(control);\n\t\t\t\t\tcontroller?.revealCommentThread(\n\t\t\t\t\t\tthreadToReveal,\n\t\t\t\t\t\tcommentToReveal,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tfocus,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n}\n\nexport class CommentController implements IEditorContribution {\n\tprivate readonly globalToDispose = new DisposableStore();\n\tprivate readonly localToDispose = new DisposableStore();\n\tprivate editor: ICodeEditor | undefined;\n\tprivate _commentWidgets: ReviewZoneWidget[];\n\tprivate _commentInfos: ICommentInfo[];\n\tprivate _commentingRangeDecorator!: CommentingRangeDecorator;\n\tprivate _commentThreadRangeDecorator!: CommentThreadRangeDecorator;\n\tprivate mouseDownInfo: { lineNumber: number } | null = null;\n\tprivate _commentingRangeSpaceReserved = false;\n\tprivate _commentingRangeAmountReserved = 0;\n\tprivate _computePromise: CancelablePromise<\n\t\tArray<ICommentInfo | null>\n\t> | null;\n\tprivate _computeAndSetPromise: Promise<void> | undefined;\n\tprivate _addInProgress!: boolean;\n\tprivate _emptyThreadsToAddQueue: [\n\t\tRange | undefined,\n\t\tIEditorMouseEvent | undefined,\n\t][] = [];\n\tprivate _computeCommentingRangePromise!: CancelablePromise<\n\t\tICommentInfo[]\n\t> | null;\n\tprivate _computeCommentingRangeScheduler!: Delayer<\n\t\tArray<ICommentInfo | null>\n\t> | null;\n\tprivate _pendingNewCommentCache: {\n\t\t[key: string]: { [key: string]: string };\n\t};\n\tprivate _pendingEditsCache: {\n\t\t[key: string]: { [key: string]: { [key: number]: string } };\n\t}; // uniqueOwner -> threadId -> uniqueIdInThread -> pending comment\n\tprivate _inProcessContinueOnComments: Map<\n\t\tstring,\n\t\tlanguages.PendingCommentThread[]\n\t> = new Map();\n\tprivate _editorDisposables: IDisposable[] = [];\n\tprivate _activeCursorHasCommentingRange: IContextKey<boolean>;\n\tprivate _activeEditorHasCommentingRange: IContextKey<boolean>;\n\tprivate _hasRespondedToEditorChange = false;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@ICommentService private readonly commentService: ICommentService,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\t@ICodeEditorService\n\t\tprivate readonly codeEditorService: ICodeEditorService,\n\t\t@IContextMenuService\n\t\tprivate readonly contextMenuService: IContextMenuService,\n\t\t@IQuickInputService\n\t\tprivate readonly quickInputService: IQuickInputService,\n\t\t@IViewsService private readonly viewsService: IViewsService,\n\t\t@IConfigurationService\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IKeybindingService\n\t\tprivate readonly keybindingService: IKeybindingService,\n\t\t@IAccessibilityService\n\t\tprivate readonly accessibilityService: IAccessibilityService,\n\t) {\n\t\tthis._commentInfos = [];\n\t\tthis._commentWidgets = [];\n\t\tthis._pendingNewCommentCache = {};\n\t\tthis._pendingEditsCache = {};\n\t\tthis._computePromise = null;\n\t\tthis._activeCursorHasCommentingRange =\n\t\t\tCommentContextKeys.activeCursorHasCommentingRange.bindTo(\n\t\t\t\tcontextKeyService,\n\t\t\t);\n\t\tthis._activeEditorHasCommentingRange =\n\t\t\tCommentContextKeys.activeEditorHasCommentingRange.bindTo(\n\t\t\t\tcontextKeyService,\n\t\t\t);\n\n\t\tif (editor instanceof EmbeddedCodeEditorWidget) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.editor = editor;\n\n\t\tthis._commentingRangeDecorator = new CommentingRangeDecorator();\n\t\tthis.globalToDispose.add(\n\t\t\tthis._commentingRangeDecorator.onDidChangeDecorationsCount(\n\t\t\t\t(count) => {\n\t\t\t\t\tif (count === 0) {\n\t\t\t\t\t\tthis.clearEditorListeners();\n\t\t\t\t\t} else if (this._editorDisposables.length === 0) {\n\t\t\t\t\t\tthis.registerEditorListeners();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis.globalToDispose.add(\n\t\t\t(this._commentThreadRangeDecorator =\n\t\t\t\tnew CommentThreadRangeDecorator(this.commentService)),\n\t\t);\n\n\t\tthis.globalToDispose.add(\n\t\t\tthis.commentService.onDidDeleteDataProvider((ownerId) => {\n\t\t\t\tif (ownerId) {\n\t\t\t\t\tdelete this._pendingNewCommentCache[ownerId];\n\t\t\t\t\tdelete this._pendingEditsCache[ownerId];\n\t\t\t\t} else {\n\t\t\t\t\tthis._pendingNewCommentCache = {};\n\t\t\t\t\tthis._pendingEditsCache = {};\n\t\t\t\t}\n\t\t\t\tthis.beginCompute();\n\t\t\t}),\n\t\t);\n\t\tthis.globalToDispose.add(\n\t\t\tthis.commentService.onDidSetDataProvider((_) =>\n\t\t\t\tthis.beginComputeAndHandleEditorChange(),\n\t\t\t),\n\t\t);\n\t\tthis.globalToDispose.add(\n\t\t\tthis.commentService.onDidUpdateCommentingRanges((_) =>\n\t\t\t\tthis.beginComputeAndHandleEditorChange(),\n\t\t\t),\n\t\t);\n\n\t\tthis.globalToDispose.add(\n\t\t\tthis.commentService.onDidSetResourceCommentInfos(async (e) => {\n\t\t\t\tconst editorURI =\n\t\t\t\t\tthis.editor &&\n\t\t\t\t\tthis.editor.hasModel() &&\n\t\t\t\t\tthis.editor.getModel().uri;\n\t\t\t\tif (\n\t\t\t\t\teditorURI &&\n\t\t\t\t\teditorURI.toString() === e.resource.toString()\n\t\t\t\t) {\n\t\t\t\t\tawait this.setComments(\n\t\t\t\t\t\te.commentInfos.filter(\n\t\t\t\t\t\t\t(commentInfo) => commentInfo !== null,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis.globalToDispose.add(\n\t\t\tthis.commentService.onDidChangeCommentingEnabled((e) => {\n\t\t\t\tif (e) {\n\t\t\t\t\tthis.registerEditorListeners();\n\t\t\t\t\tthis.beginCompute();\n\t\t\t\t} else {\n\t\t\t\t\tthis.tryUpdateReservedSpace();\n\t\t\t\t\tthis.clearEditorListeners();\n\t\t\t\t\tthis._commentingRangeDecorator.update(this.editor, []);\n\t\t\t\t\tthis._commentThreadRangeDecorator.update(this.editor, []);\n\t\t\t\t\tdispose(this._commentWidgets);\n\t\t\t\t\tthis._commentWidgets = [];\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis.globalToDispose.add(\n\t\t\tthis.editor.onWillChangeModel((e) => this.onWillChangeModel(e)),\n\t\t);\n\t\tthis.globalToDispose.add(\n\t\t\tthis.editor.onDidChangeModel((_) => this.onModelChanged()),\n\t\t);\n\t\tthis.globalToDispose.add(\n\t\t\tthis.configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (e.affectsConfiguration(\"diffEditor.renderSideBySide\")) {\n\t\t\t\t\tthis.beginCompute();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis.onModelChanged();\n\t\tthis.codeEditorService.registerDecorationType(\n\t\t\t\"comment-controller\",\n\t\t\tCOMMENTEDITOR_DECORATION_KEY,\n\t\t\t{},\n\t\t);\n\t\tthis.globalToDispose.add(\n\t\t\tthis.commentService.registerContinueOnCommentProvider({\n\t\t\t\tprovideContinueOnComments: () => {\n\t\t\t\t\tconst pendingComments: languages.PendingCommentThread[] =\n\t\t\t\t\t\t[];\n\t\t\t\t\tif (this._commentWidgets) {\n\t\t\t\t\t\tfor (const zone of this._commentWidgets) {\n\t\t\t\t\t\t\tconst zonePendingComments =\n\t\t\t\t\t\t\t\tzone.getPendingComments();\n\t\t\t\t\t\t\tconst pendingNewComment =\n\t\t\t\t\t\t\t\tzonePendingComments.newComment;\n\t\t\t\t\t\t\tif (!pendingNewComment) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet lastCommentBody;\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tzone.commentThread.comments &&\n\t\t\t\t\t\t\t\tzone.commentThread.comments.length\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tconst lastComment =\n\t\t\t\t\t\t\t\t\tzone.commentThread.comments[\n\t\t\t\t\t\t\t\t\t\tzone.commentThread.comments.length - 1\n\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\tif (typeof lastComment.body === \"string\") {\n\t\t\t\t\t\t\t\t\tlastCommentBody = lastComment.body;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tlastCommentBody = lastComment.body.value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (pendingNewComment !== lastCommentBody) {\n\t\t\t\t\t\t\t\tpendingComments.push({\n\t\t\t\t\t\t\t\t\tuniqueOwner: zone.uniqueOwner,\n\t\t\t\t\t\t\t\t\turi: zone.editor.getModel()!.uri,\n\t\t\t\t\t\t\t\t\trange: zone.commentThread.range,\n\t\t\t\t\t\t\t\t\tbody: pendingNewComment,\n\t\t\t\t\t\t\t\t\tisReply:\n\t\t\t\t\t\t\t\t\t\tzone.commentThread.comments !==\n\t\t\t\t\t\t\t\t\t\t\tundefined &&\n\t\t\t\t\t\t\t\t\t\tzone.commentThread.comments.length > 0,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn pendingComments;\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate registerEditorListeners() {\n\t\tthis._editorDisposables = [];\n\t\tif (!this.editor) {\n\t\t\treturn;\n\t\t}\n\t\tthis._editorDisposables.push(\n\t\t\tthis.editor.onMouseMove((e) => this.onEditorMouseMove(e)),\n\t\t);\n\t\tthis._editorDisposables.push(\n\t\t\tthis.editor.onMouseLeave(() => this.onEditorMouseLeave()),\n\t\t);\n\t\tthis._editorDisposables.push(\n\t\t\tthis.editor.onDidChangeCursorPosition((e) =>\n\t\t\t\tthis.onEditorChangeCursorPosition(e.position),\n\t\t\t),\n\t\t);\n\t\tthis._editorDisposables.push(\n\t\t\tthis.editor.onDidFocusEditorWidget(() =>\n\t\t\t\tthis.onEditorChangeCursorPosition(\n\t\t\t\t\tthis.editor?.getPosition() ?? null,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t\tthis._editorDisposables.push(\n\t\t\tthis.editor.onDidChangeCursorSelection((e) =>\n\t\t\t\tthis.onEditorChangeCursorSelection(e),\n\t\t\t),\n\t\t);\n\t\tthis._editorDisposables.push(\n\t\t\tthis.editor.onDidBlurEditorWidget(() =>\n\t\t\t\tthis.onEditorChangeCursorSelection(),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate clearEditorListeners() {\n\t\tdispose(this._editorDisposables);\n\t\tthis._editorDisposables = [];\n\t}\n\n\tprivate onEditorMouseLeave() {\n\t\tthis._commentingRangeDecorator.updateHover();\n\t}\n\n\tprivate onEditorMouseMove(e: IEditorMouseEvent): void {\n\t\tconst position = e.target.position?.lineNumber;\n\t\tif (e.event.leftButton.valueOf() && position && this.mouseDownInfo) {\n\t\t\tthis._commentingRangeDecorator.updateSelection(\n\t\t\t\tposition,\n\t\t\t\tnew Range(this.mouseDownInfo.lineNumber, 1, position, 1),\n\t\t\t);\n\t\t} else {\n\t\t\tthis._commentingRangeDecorator.updateHover(position);\n\t\t}\n\t}\n\n\tprivate onEditorChangeCursorSelection(\n\t\te?: ICursorSelectionChangedEvent,\n\t): void {\n\t\tconst position = this.editor?.getPosition()?.lineNumber;\n\t\tif (position) {\n\t\t\tthis._commentingRangeDecorator.updateSelection(\n\t\t\t\tposition,\n\t\t\t\te?.selection,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate onEditorChangeCursorPosition(e: Position | null) {\n\t\tconst decorations = e\n\t\t\t? this.editor?.getDecorationsInRange(\n\t\t\t\t\tRange.fromPositions(e, {\n\t\t\t\t\t\tcolumn: -1,\n\t\t\t\t\t\tlineNumber: e.lineNumber,\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t: undefined;\n\t\tlet hasCommentingRange = false;\n\t\tif (decorations) {\n\t\t\tfor (const decoration of decorations) {\n\t\t\t\tif (\n\t\t\t\t\tdecoration.options.description ===\n\t\t\t\t\tCommentGlyphWidget.description\n\t\t\t\t) {\n\t\t\t\t\t// We don't allow multiple comments on the same line.\n\t\t\t\t\thasCommentingRange = false;\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (\n\t\t\t\t\tdecoration.options.description ===\n\t\t\t\t\tCommentingRangeDecorator.description\n\t\t\t\t) {\n\t\t\t\t\thasCommentingRange = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._activeCursorHasCommentingRange.set(hasCommentingRange);\n\t}\n\n\tprivate isEditorInlineOriginal(testEditor: ICodeEditor): boolean {\n\t\tif (\n\t\t\tthis.configurationService.getValue<boolean>(\n\t\t\t\t\"diffEditor.renderSideBySide\",\n\t\t\t)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst foundEditor = this.editorService.visibleTextEditorControls.find(\n\t\t\t(editor) => {\n\t\t\t\tif (editor.getEditorType() === EditorType.IDiffEditor) {\n\t\t\t\t\tconst diffEditor = editor as IDiffEditor;\n\t\t\t\t\treturn diffEditor.getOriginalEditor() === testEditor;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t);\n\t\treturn !!foundEditor;\n\t}\n\n\tprivate beginCompute(): Promise<void> {\n\t\tthis._computePromise = createCancelablePromise((token) => {\n\t\t\tconst editorURI =\n\t\t\t\tthis.editor &&\n\t\t\t\tthis.editor.hasModel() &&\n\t\t\t\tthis.editor.getModel().uri;\n\n\t\t\tif (editorURI) {\n\t\t\t\treturn this.commentService.getDocumentComments(editorURI);\n\t\t\t}\n\n\t\t\treturn Promise.resolve([]);\n\t\t});\n\n\t\tthis._computeAndSetPromise = this._computePromise.then(\n\t\t\tasync (commentInfos) => {\n\t\t\t\tawait this.setComments(coalesce(commentInfos));\n\t\t\t\tthis._computePromise = null;\n\t\t\t},\n\t\t\t(error) => console.log(error),\n\t\t);\n\t\tthis._computePromise.then(\n\t\t\t() => (this._computeAndSetPromise = undefined),\n\t\t);\n\t\treturn this._computeAndSetPromise;\n\t}\n\n\tprivate beginComputeCommentingRanges() {\n\t\tif (this._computeCommentingRangeScheduler) {\n\t\t\tif (this._computeCommentingRangePromise) {\n\t\t\t\tthis._computeCommentingRangePromise.cancel();\n\t\t\t\tthis._computeCommentingRangePromise = null;\n\t\t\t}\n\n\t\t\tthis._computeCommentingRangeScheduler\n\t\t\t\t.trigger(() => {\n\t\t\t\t\tconst editorURI =\n\t\t\t\t\t\tthis.editor &&\n\t\t\t\t\t\tthis.editor.hasModel() &&\n\t\t\t\t\t\tthis.editor.getModel().uri;\n\n\t\t\t\t\tif (editorURI) {\n\t\t\t\t\t\treturn this.commentService.getDocumentComments(\n\t\t\t\t\t\t\teditorURI,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.resolve([]);\n\t\t\t\t})\n\t\t\t\t.then(\n\t\t\t\t\t(commentInfos) => {\n\t\t\t\t\t\tif (this.commentService.isCommentingEnabled) {\n\t\t\t\t\t\t\tconst meaningfulCommentInfos =\n\t\t\t\t\t\t\t\tcoalesce(commentInfos);\n\t\t\t\t\t\t\tthis._commentingRangeDecorator.update(\n\t\t\t\t\t\t\t\tthis.editor,\n\t\t\t\t\t\t\t\tmeaningfulCommentInfos,\n\t\t\t\t\t\t\t\tthis.editor?.getPosition()?.lineNumber,\n\t\t\t\t\t\t\t\tthis.editor?.getSelection() ?? undefined,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t(err) => {\n\t\t\t\t\t\tonUnexpectedError(err);\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t}\n\t}\n\n\tpublic static get(editor: ICodeEditor): CommentController | null {\n\t\treturn editor.getContribution<CommentController>(ID);\n\t}\n\n\tpublic revealCommentThread(\n\t\tthreadId: string,\n\t\tcommentUniqueId: number | undefined,\n\t\tfetchOnceIfNotExist: boolean,\n\t\tfocus: CommentWidgetFocus,\n\t): void {\n\t\tconst commentThreadWidget = this._commentWidgets.filter(\n\t\t\t(widget) => widget.commentThread.threadId === threadId,\n\t\t);\n\t\tif (commentThreadWidget.length === 1) {\n\t\t\tcommentThreadWidget[0].reveal(commentUniqueId, focus);\n\t\t} else if (fetchOnceIfNotExist) {\n\t\t\tif (this._computeAndSetPromise) {\n\t\t\t\tthis._computeAndSetPromise.then((_) => {\n\t\t\t\t\tthis.revealCommentThread(\n\t\t\t\t\t\tthreadId,\n\t\t\t\t\t\tcommentUniqueId,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\tfocus,\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.beginCompute().then((_) => {\n\t\t\t\t\tthis.revealCommentThread(\n\t\t\t\t\t\tthreadId,\n\t\t\t\t\t\tcommentUniqueId,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\tfocus,\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic collapseAll(): void {\n\t\tfor (const widget of this._commentWidgets) {\n\t\t\twidget.collapse();\n\t\t}\n\t}\n\n\tpublic expandAll(): void {\n\t\tfor (const widget of this._commentWidgets) {\n\t\t\twidget.expand();\n\t\t}\n\t}\n\n\tpublic expandUnresolved(): void {\n\t\tfor (const widget of this._commentWidgets) {\n\t\t\tif (\n\t\t\t\twidget.commentThread.state ===\n\t\t\t\tlanguages.CommentThreadState.Unresolved\n\t\t\t) {\n\t\t\t\twidget.expand();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic nextCommentThread(): void {\n\t\tthis._findNearestCommentThread();\n\t}\n\n\tprivate _findNearestCommentThread(reverse?: boolean): void {\n\t\tif (!this._commentWidgets.length || !this.editor?.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst after = reverse\n\t\t\t? this.editor.getSelection().getStartPosition()\n\t\t\t: this.editor.getSelection().getEndPosition();\n\t\tconst sortedWidgets = this._commentWidgets.sort((a, b) => {\n\t\t\tif (reverse) {\n\t\t\t\tconst temp = a;\n\t\t\t\ta = b;\n\t\t\t\tb = temp;\n\t\t\t}\n\t\t\tif (a.commentThread.range === undefined) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (b.commentThread.range === undefined) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (\n\t\t\t\ta.commentThread.range.startLineNumber <\n\t\t\t\tb.commentThread.range.startLineNumber\n\t\t\t) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ta.commentThread.range.startLineNumber >\n\t\t\t\tb.commentThread.range.startLineNumber\n\t\t\t) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ta.commentThread.range.startColumn <\n\t\t\t\tb.commentThread.range.startColumn\n\t\t\t) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ta.commentThread.range.startColumn >\n\t\t\t\tb.commentThread.range.startColumn\n\t\t\t) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t});\n\n\t\tconst idx = findFirstIdxMonotonousOrArrLen(sortedWidgets, (widget) => {\n\t\t\tconst lineValueOne = reverse\n\t\t\t\t? after.lineNumber\n\t\t\t\t: (widget.commentThread.range?.startLineNumber ?? 0);\n\t\t\tconst lineValueTwo = reverse\n\t\t\t\t? (widget.commentThread.range?.startLineNumber ?? 0)\n\t\t\t\t: after.lineNumber;\n\t\t\tconst columnValueOne = reverse\n\t\t\t\t? after.column\n\t\t\t\t: (widget.commentThread.range?.startColumn ?? 0);\n\t\t\tconst columnValueTwo = reverse\n\t\t\t\t? (widget.commentThread.range?.startColumn ?? 0)\n\t\t\t\t: after.column;\n\t\t\tif (lineValueOne > lineValueTwo) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (lineValueOne < lineValueTwo) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (columnValueOne > columnValueTwo) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tconst nextWidget: ReviewZoneWidget | undefined = sortedWidgets[idx];\n\t\tif (nextWidget !== undefined) {\n\t\t\tthis.editor.setSelection(\n\t\t\t\tnextWidget.commentThread.range ?? new Range(1, 1, 1, 1),\n\t\t\t);\n\t\t\tnextWidget.reveal(undefined, CommentWidgetFocus.Widget);\n\t\t}\n\t}\n\n\tpublic previousCommentThread(): void {\n\t\tthis._findNearestCommentThread(true);\n\t}\n\n\tprivate _findNearestCommentingRange(reverse?: boolean): void {\n\t\tif (!this.editor?.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst after = this.editor.getSelection().getEndPosition();\n\t\tconst range = this._commentingRangeDecorator.getNearestCommentingRange(\n\t\t\tafter,\n\t\t\treverse,\n\t\t);\n\t\tif (range) {\n\t\t\tconst position = reverse\n\t\t\t\t? range.getEndPosition()\n\t\t\t\t: range.getStartPosition();\n\t\t\tthis.editor.setPosition(position);\n\t\t\tthis.editor.revealLineInCenterIfOutsideViewport(\n\t\t\t\tposition.lineNumber,\n\t\t\t);\n\t\t}\n\t\tif (this.accessibilityService.isScreenReaderOptimized()) {\n\t\t\tconst commentRangeStart = range?.getStartPosition().lineNumber;\n\t\t\tconst commentRangeEnd = range?.getEndPosition().lineNumber;\n\t\t\tif (commentRangeStart && commentRangeEnd) {\n\t\t\t\tconst oneLine = commentRangeStart === commentRangeEnd;\n\t\t\t\toneLine\n\t\t\t\t\t? status(\n\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\"commentRange\",\n\t\t\t\t\t\t\t\t\"Line {0}\",\n\t\t\t\t\t\t\t\tcommentRangeStart,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t)\n\t\t\t\t\t: status(\n\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\"commentRangeStart\",\n\t\t\t\t\t\t\t\t\"Lines {0} to {1}\",\n\t\t\t\t\t\t\t\tcommentRangeStart,\n\t\t\t\t\t\t\t\tcommentRangeEnd,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic nextCommentingRange(): void {\n\t\tthis._findNearestCommentingRange();\n\t}\n\n\tpublic previousCommentingRange(): void {\n\t\tthis._findNearestCommentingRange(true);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.globalToDispose.dispose();\n\t\tthis.localToDispose.dispose();\n\t\tdispose(this._editorDisposables);\n\t\tdispose(this._commentWidgets);\n\n\t\tthis.editor = null!; // Strict null override - nulling out in dispose\n\t}\n\n\tprivate onWillChangeModel(e: IModelChangedEvent): void {\n\t\tif (e.newModelUrl) {\n\t\t\tthis.tryUpdateReservedSpace(e.newModelUrl);\n\t\t}\n\t}\n\n\tprivate async handleCommentAdded(\n\t\teditorId: string | undefined,\n\t\tuniqueOwner: string,\n\t\tthread: languages.AddedCommentThread,\n\t): Promise<void> {\n\t\tconst matchedZones = this._commentWidgets.filter(\n\t\t\t(zoneWidget) =>\n\t\t\t\tzoneWidget.uniqueOwner === uniqueOwner &&\n\t\t\t\tzoneWidget.commentThread.threadId === thread.threadId,\n\t\t);\n\t\tif (matchedZones.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst matchedNewCommentThreadZones = this._commentWidgets.filter(\n\t\t\t(zoneWidget) =>\n\t\t\t\tzoneWidget.uniqueOwner === uniqueOwner &&\n\t\t\t\tzoneWidget.commentThread.commentThreadHandle === -1 &&\n\t\t\t\tRange.equalsRange(zoneWidget.commentThread.range, thread.range),\n\t\t);\n\n\t\tif (matchedNewCommentThreadZones.length) {\n\t\t\tmatchedNewCommentThreadZones[0].update(thread);\n\t\t\treturn;\n\t\t}\n\n\t\tconst continueOnCommentIndex = this._inProcessContinueOnComments\n\t\t\t.get(uniqueOwner)\n\t\t\t?.findIndex((pending) => {\n\t\t\t\tif (pending.range === undefined) {\n\t\t\t\t\treturn thread.range === undefined;\n\t\t\t\t} else {\n\t\t\t\t\treturn Range.lift(pending.range).equalsRange(thread.range);\n\t\t\t\t}\n\t\t\t});\n\t\tlet continueOnCommentText: string | undefined;\n\t\tif (\n\t\t\tcontinueOnCommentIndex !== undefined &&\n\t\t\tcontinueOnCommentIndex >= 0\n\t\t) {\n\t\t\tcontinueOnCommentText = this._inProcessContinueOnComments\n\t\t\t\t.get(uniqueOwner)\n\t\t\t\t?.splice(continueOnCommentIndex, 1)[0].body;\n\t\t}\n\n\t\tconst pendingCommentText =\n\t\t\t(this._pendingNewCommentCache[uniqueOwner] &&\n\t\t\t\tthis._pendingNewCommentCache[uniqueOwner][thread.threadId]) ??\n\t\t\tcontinueOnCommentText;\n\t\tconst pendingEdits =\n\t\t\tthis._pendingEditsCache[uniqueOwner] &&\n\t\t\tthis._pendingEditsCache[uniqueOwner][thread.threadId];\n\t\tconst shouldReveal =\n\t\t\tthread.canReply &&\n\t\t\tthread.isTemplate &&\n\t\t\t(!thread.comments || thread.comments.length === 0) &&\n\t\t\t(!thread.editorId || thread.editorId === editorId);\n\t\tawait this.displayCommentThread(\n\t\t\tuniqueOwner,\n\t\t\tthread,\n\t\t\tshouldReveal,\n\t\t\tpendingCommentText,\n\t\t\tpendingEdits,\n\t\t);\n\t\tthis._commentInfos\n\t\t\t.filter((info) => info.uniqueOwner === uniqueOwner)[0]\n\t\t\t.threads.push(thread);\n\t\tthis.tryUpdateReservedSpace();\n\t}\n\n\tpublic onModelChanged(): void {\n\t\tthis.localToDispose.clear();\n\t\tthis.tryUpdateReservedSpace();\n\n\t\tthis.removeCommentWidgetsAndStoreCache();\n\t\tif (!this.editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._hasRespondedToEditorChange = false;\n\n\t\tthis.localToDispose.add(\n\t\t\tthis.editor.onMouseDown((e) => this.onEditorMouseDown(e)),\n\t\t);\n\t\tthis.localToDispose.add(\n\t\t\tthis.editor.onMouseUp((e) => this.onEditorMouseUp(e)),\n\t\t);\n\t\tif (this._editorDisposables.length) {\n\t\t\tthis.clearEditorListeners();\n\t\t\tthis.registerEditorListeners();\n\t\t}\n\n\t\tthis._computeCommentingRangeScheduler = new Delayer<ICommentInfo[]>(\n\t\t\t200,\n\t\t);\n\t\tthis.localToDispose.add({\n\t\t\tdispose: () => {\n\t\t\t\tthis._computeCommentingRangeScheduler?.cancel();\n\t\t\t\tthis._computeCommentingRangeScheduler = null;\n\t\t\t},\n\t\t});\n\t\tthis.localToDispose.add(\n\t\t\tthis.editor.onDidChangeModelContent(async () => {\n\t\t\t\tthis.beginComputeCommentingRanges();\n\t\t\t}),\n\t\t);\n\t\tthis.localToDispose.add(\n\t\t\tthis.commentService.onDidUpdateCommentThreads(async (e) => {\n\t\t\t\tconst editorURI =\n\t\t\t\t\tthis.editor &&\n\t\t\t\t\tthis.editor.hasModel() &&\n\t\t\t\t\tthis.editor.getModel().uri;\n\t\t\t\tif (!editorURI || !this.commentService.isCommentingEnabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this._computePromise) {\n\t\t\t\t\tawait this._computePromise;\n\t\t\t\t}\n\n\t\t\t\tconst commentInfo = this._commentInfos.filter(\n\t\t\t\t\t(info) => info.uniqueOwner === e.uniqueOwner,\n\t\t\t\t);\n\t\t\t\tif (!commentInfo || !commentInfo.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst added = e.added.filter(\n\t\t\t\t\t(thread) =>\n\t\t\t\t\t\tthread.resource &&\n\t\t\t\t\t\tthread.resource === editorURI.toString(),\n\t\t\t\t);\n\t\t\t\tconst removed = e.removed.filter(\n\t\t\t\t\t(thread) =>\n\t\t\t\t\t\tthread.resource &&\n\t\t\t\t\t\tthread.resource === editorURI.toString(),\n\t\t\t\t);\n\t\t\t\tconst changed = e.changed.filter(\n\t\t\t\t\t(thread) =>\n\t\t\t\t\t\tthread.resource &&\n\t\t\t\t\t\tthread.resource === editorURI.toString(),\n\t\t\t\t);\n\t\t\t\tconst pending = e.pending.filter(\n\t\t\t\t\t(pending) =>\n\t\t\t\t\t\tpending.uri.toString() === editorURI.toString(),\n\t\t\t\t);\n\n\t\t\t\tremoved.forEach((thread) => {\n\t\t\t\t\tconst matchedZones = this._commentWidgets.filter(\n\t\t\t\t\t\t(zoneWidget) =>\n\t\t\t\t\t\t\tzoneWidget.uniqueOwner === e.uniqueOwner &&\n\t\t\t\t\t\t\tzoneWidget.commentThread.threadId ===\n\t\t\t\t\t\t\t\tthread.threadId &&\n\t\t\t\t\t\t\tzoneWidget.commentThread.threadId !== \"\",\n\t\t\t\t\t);\n\t\t\t\t\tif (matchedZones.length) {\n\t\t\t\t\t\tconst matchedZone = matchedZones[0];\n\t\t\t\t\t\tconst index = this._commentWidgets.indexOf(matchedZone);\n\t\t\t\t\t\tthis._commentWidgets.splice(index, 1);\n\t\t\t\t\t\tmatchedZone.dispose();\n\t\t\t\t\t}\n\t\t\t\t\tconst infosThreads = this._commentInfos.filter(\n\t\t\t\t\t\t(info) => info.uniqueOwner === e.uniqueOwner,\n\t\t\t\t\t)[0].threads;\n\t\t\t\t\tfor (let i = 0; i < infosThreads.length; i++) {\n\t\t\t\t\t\tif (infosThreads[i] === thread) {\n\t\t\t\t\t\t\tinfosThreads.splice(i, 1);\n\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tfor (const thread of changed) {\n\t\t\t\t\tconst matchedZones = this._commentWidgets.filter(\n\t\t\t\t\t\t(zoneWidget) =>\n\t\t\t\t\t\t\tzoneWidget.uniqueOwner === e.uniqueOwner &&\n\t\t\t\t\t\t\tzoneWidget.commentThread.threadId ===\n\t\t\t\t\t\t\t\tthread.threadId,\n\t\t\t\t\t);\n\t\t\t\t\tif (matchedZones.length) {\n\t\t\t\t\t\tconst matchedZone = matchedZones[0];\n\t\t\t\t\t\tmatchedZone.update(thread);\n\t\t\t\t\t\tthis.openCommentsView(thread);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst editorId = this.editor?.getId();\n\t\t\t\tfor (const thread of added) {\n\t\t\t\t\tawait this.handleCommentAdded(\n\t\t\t\t\t\teditorId,\n\t\t\t\t\t\te.uniqueOwner,\n\t\t\t\t\t\tthread,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tfor (const thread of pending) {\n\t\t\t\t\tawait this.resumePendingComment(editorURI, thread);\n\t\t\t\t}\n\t\t\t\tthis._commentThreadRangeDecorator.update(\n\t\t\t\t\tthis.editor,\n\t\t\t\t\tcommentInfo,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\tthis.beginComputeAndHandleEditorChange();\n\t}\n\n\tprivate async resumePendingComment(\n\t\teditorURI: URI,\n\t\tthread: languages.PendingCommentThread,\n\t) {\n\t\tconst matchedZones = this._commentWidgets.filter(\n\t\t\t(zoneWidget) =>\n\t\t\t\tzoneWidget.uniqueOwner === thread.uniqueOwner &&\n\t\t\t\tRange.lift(zoneWidget.commentThread.range)?.equalsRange(\n\t\t\t\t\tthread.range,\n\t\t\t\t),\n\t\t);\n\t\tif (thread.isReply && matchedZones.length) {\n\t\t\tthis.commentService.removeContinueOnComment({\n\t\t\t\tuniqueOwner: thread.uniqueOwner,\n\t\t\t\turi: editorURI,\n\t\t\t\trange: thread.range,\n\t\t\t\tisReply: true,\n\t\t\t});\n\t\t\tmatchedZones[0].setPendingComment(thread.body);\n\t\t} else if (matchedZones.length) {\n\t\t\tthis.commentService.removeContinueOnComment({\n\t\t\t\tuniqueOwner: thread.uniqueOwner,\n\t\t\t\turi: editorURI,\n\t\t\t\trange: thread.range,\n\t\t\t\tisReply: false,\n\t\t\t});\n\t\t\tconst existingPendingComment =\n\t\t\t\tmatchedZones[0].getPendingComments().newComment;\n\t\t\t// We need to try to reconcile the existing pending comment with the incoming pending comment\n\t\t\tlet pendingComment: string;\n\t\t\tif (\n\t\t\t\t!existingPendingComment ||\n\t\t\t\tthread.body.includes(existingPendingComment)\n\t\t\t) {\n\t\t\t\tpendingComment = thread.body;\n\t\t\t} else if (existingPendingComment.includes(thread.body)) {\n\t\t\t\tpendingComment = existingPendingComment;\n\t\t\t} else {\n\t\t\t\tpendingComment = `${existingPendingComment}\\n${thread.body}`;\n\t\t\t}\n\t\t\tmatchedZones[0].setPendingComment(pendingComment);\n\t\t} else if (!thread.isReply) {\n\t\t\tconst threadStillAvailable =\n\t\t\t\tthis.commentService.removeContinueOnComment({\n\t\t\t\t\tuniqueOwner: thread.uniqueOwner,\n\t\t\t\t\turi: editorURI,\n\t\t\t\t\trange: thread.range,\n\t\t\t\t\tisReply: false,\n\t\t\t\t});\n\t\t\tif (!threadStillAvailable) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this._inProcessContinueOnComments.has(thread.uniqueOwner)) {\n\t\t\t\tthis._inProcessContinueOnComments.set(thread.uniqueOwner, []);\n\t\t\t}\n\t\t\tthis._inProcessContinueOnComments\n\t\t\t\t.get(thread.uniqueOwner)\n\t\t\t\t?.push(thread);\n\t\t\tawait this.commentService.createCommentThreadTemplate(\n\t\t\t\tthread.uniqueOwner,\n\t\t\t\tthread.uri,\n\t\t\t\tthread.range ? Range.lift(thread.range) : undefined,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate beginComputeAndHandleEditorChange(): void {\n\t\tthis.beginCompute().then(() => {\n\t\t\tif (!this._hasRespondedToEditorChange) {\n\t\t\t\tif (\n\t\t\t\t\tthis._commentInfos.some(\n\t\t\t\t\t\t(commentInfo) =>\n\t\t\t\t\t\t\tcommentInfo.commentingRanges.ranges.length > 0 ||\n\t\t\t\t\t\t\tcommentInfo.commentingRanges.fileComments,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tthis._hasRespondedToEditorChange = true;\n\t\t\t\t\tconst verbose = this.configurationService.getValue(\n\t\t\t\t\t\tAccessibilityVerbositySettingId.Comments,\n\t\t\t\t\t);\n\t\t\t\t\tif (verbose) {\n\t\t\t\t\t\tconst keybinding = this.keybindingService\n\t\t\t\t\t\t\t.lookupKeybinding(\n\t\t\t\t\t\t\t\tAccessibilityCommandId.OpenAccessibilityHelp,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t?.getAriaLabel();\n\t\t\t\t\t\tif (keybinding) {\n\t\t\t\t\t\t\tstatus(\n\t\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\t\"hasCommentRangesKb\",\n\t\t\t\t\t\t\t\t\t\"Editor has commenting ranges, run the command Open Accessibility Help ({0}), for more information.\",\n\t\t\t\t\t\t\t\t\tkeybinding,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstatus(\n\t\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\t\"hasCommentRangesNoKb\",\n\t\t\t\t\t\t\t\t\t\"Editor has commenting ranges, run the command Open Accessibility Help, which is currently not triggerable via keybinding, for more information.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstatus(\n\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\"hasCommentRanges\",\n\t\t\t\t\t\t\t\t\"Editor has commenting ranges.\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async openCommentsView(thread: languages.CommentThread) {\n\t\tif (\n\t\t\tthread.comments &&\n\t\t\tthread.comments.length > 0 &&\n\t\t\tthreadHasMeaningfulComments(thread)\n\t\t) {\n\t\t\tconst openViewState =\n\t\t\t\tthis.configurationService.getValue<ICommentsConfiguration>(\n\t\t\t\t\tCOMMENTS_SECTION,\n\t\t\t\t).openView;\n\t\t\tif (openViewState === \"file\") {\n\t\t\t\treturn this.viewsService.openView(COMMENTS_VIEW_ID);\n\t\t\t} else if (\n\t\t\t\topenViewState === \"firstFile\" ||\n\t\t\t\t(openViewState === \"firstFileUnresolved\" &&\n\t\t\t\t\tthread.state === languages.CommentThreadState.Unresolved)\n\t\t\t) {\n\t\t\t\tconst hasShownView =\n\t\t\t\t\tthis.viewsService.getViewWithId<CommentsPanel>(\n\t\t\t\t\t\tCOMMENTS_VIEW_ID,\n\t\t\t\t\t)?.hasRendered;\n\t\t\t\tif (!hasShownView) {\n\t\t\t\t\treturn this.viewsService.openView(COMMENTS_VIEW_ID);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async displayCommentThread(\n\t\tuniqueOwner: string,\n\t\tthread: languages.CommentThread,\n\t\tshouldReveal: boolean,\n\t\tpendingComment: string | undefined,\n\t\tpendingEdits: { [key: number]: string } | undefined,\n\t): Promise<void> {\n\t\tconst editor = this.editor?.getModel();\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.editor || this.isEditorInlineOriginal(this.editor)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet continueOnCommentReply: languages.PendingCommentThread | undefined;\n\t\tif (thread.range && !pendingComment) {\n\t\t\tcontinueOnCommentReply =\n\t\t\t\tthis.commentService.removeContinueOnComment({\n\t\t\t\t\tuniqueOwner,\n\t\t\t\t\turi: editor.uri,\n\t\t\t\t\trange: thread.range,\n\t\t\t\t\tisReply: true,\n\t\t\t\t});\n\t\t}\n\t\tconst zoneWidget = this.instantiationService.createInstance(\n\t\t\tReviewZoneWidget,\n\t\t\tthis.editor,\n\t\t\tuniqueOwner,\n\t\t\tthread,\n\t\t\tpendingComment ?? continueOnCommentReply?.body,\n\t\t\tpendingEdits,\n\t\t);\n\t\tawait zoneWidget.display(thread.range, shouldReveal);\n\t\tthis._commentWidgets.push(zoneWidget);\n\t\tthis.openCommentsView(thread);\n\t}\n\n\tprivate onEditorMouseDown(e: IEditorMouseEvent): void {\n\t\tthis.mouseDownInfo = parseMouseDownInfoFromEvent(e);\n\t}\n\n\tprivate onEditorMouseUp(e: IEditorMouseEvent): void {\n\t\tconst matchedLineNumber = isMouseUpEventDragFromMouseDown(\n\t\t\tthis.mouseDownInfo,\n\t\t\te,\n\t\t);\n\t\tthis.mouseDownInfo = null;\n\n\t\tif (!this.editor || matchedLineNumber === null || !e.target.element) {\n\t\t\treturn;\n\t\t}\n\t\tconst mouseUpIsOnDecorator =\n\t\t\te.target.element.className.indexOf(\"comment-range-glyph\") >= 0;\n\n\t\tconst lineNumber = e.target.position!.lineNumber;\n\t\tlet range: Range | undefined;\n\t\tlet selection: Range | null | undefined;\n\t\t// Check for drag along gutter decoration\n\t\tif (matchedLineNumber !== lineNumber) {\n\t\t\tif (matchedLineNumber > lineNumber) {\n\t\t\t\tselection = new Range(\n\t\t\t\t\tmatchedLineNumber,\n\t\t\t\t\tthis.editor.getModel()!.getLineLength(matchedLineNumber) +\n\t\t\t\t\t\t1,\n\t\t\t\t\tlineNumber,\n\t\t\t\t\t1,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tselection = new Range(\n\t\t\t\t\tmatchedLineNumber,\n\t\t\t\t\t1,\n\t\t\t\t\tlineNumber,\n\t\t\t\t\tthis.editor.getModel()!.getLineLength(lineNumber) + 1,\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (mouseUpIsOnDecorator) {\n\t\t\tselection = this.editor.getSelection();\n\t\t}\n\n\t\t// Check for selection at line number.\n\t\tif (\n\t\t\tselection &&\n\t\t\tselection.startLineNumber <= lineNumber &&\n\t\t\tlineNumber <= selection.endLineNumber\n\t\t) {\n\t\t\trange = selection;\n\t\t\tthis.editor.setSelection(\n\t\t\t\tnew Range(\n\t\t\t\t\tselection.endLineNumber,\n\t\t\t\t\t1,\n\t\t\t\t\tselection.endLineNumber,\n\t\t\t\t\t1,\n\t\t\t\t),\n\t\t\t);\n\t\t} else if (mouseUpIsOnDecorator) {\n\t\t\trange = new Range(lineNumber, 1, lineNumber, 1);\n\t\t}\n\n\t\tif (range) {\n\t\t\tthis.addOrToggleCommentAtLine(range, e);\n\t\t}\n\t}\n\n\tpublic async addOrToggleCommentAtLine(\n\t\tcommentRange: Range | undefined,\n\t\te: IEditorMouseEvent | undefined,\n\t): Promise<void> {\n\t\t// If an add is already in progress, queue the next add and process it after the current one finishes to\n\t\t// prevent empty comment threads from being added to the same line.\n\t\tif (this._addInProgress) {\n\t\t\tthis._emptyThreadsToAddQueue.push([commentRange, e]);\n\t\t} else {\n\t\t\tthis._addInProgress = true;\n\t\t\t// The widget's position is undefined until the widget has been displayed, so rely on the glyph position instead\n\t\t\tconst existingCommentsAtLine = this._commentWidgets.filter(\n\t\t\t\t(widget) =>\n\t\t\t\t\twidget.getGlyphPosition() ===\n\t\t\t\t\t(commentRange ? commentRange.endLineNumber : 0),\n\t\t\t);\n\t\t\tif (existingCommentsAtLine.length) {\n\t\t\t\tconst allExpanded = existingCommentsAtLine.every(\n\t\t\t\t\t(widget) => widget.expanded,\n\t\t\t\t);\n\t\t\t\texistingCommentsAtLine.forEach(\n\t\t\t\t\tallExpanded\n\t\t\t\t\t\t? (widget) => widget.collapse()\n\t\t\t\t\t\t: (widget) => widget.expand(true),\n\t\t\t\t);\n\t\t\t\tthis.processNextThreadToAdd();\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tthis.addCommentAtLine(commentRange, e);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate processNextThreadToAdd(): void {\n\t\tthis._addInProgress = false;\n\t\tconst info = this._emptyThreadsToAddQueue.shift();\n\t\tif (info) {\n\t\t\tthis.addOrToggleCommentAtLine(info[0], info[1]);\n\t\t}\n\t}\n\n\tprivate clipUserRangeToCommentRange(\n\t\tuserRange: Range,\n\t\tcommentRange: Range,\n\t): Range {\n\t\tif (userRange.startLineNumber < commentRange.startLineNumber) {\n\t\t\tuserRange = new Range(\n\t\t\t\tcommentRange.startLineNumber,\n\t\t\t\tcommentRange.startColumn,\n\t\t\t\tuserRange.endLineNumber,\n\t\t\t\tuserRange.endColumn,\n\t\t\t);\n\t\t}\n\t\tif (userRange.endLineNumber > commentRange.endLineNumber) {\n\t\t\tuserRange = new Range(\n\t\t\t\tuserRange.startLineNumber,\n\t\t\t\tuserRange.startColumn,\n\t\t\t\tcommentRange.endLineNumber,\n\t\t\t\tcommentRange.endColumn,\n\t\t\t);\n\t\t}\n\t\treturn userRange;\n\t}\n\n\tpublic addCommentAtLine(\n\t\trange: Range | undefined,\n\t\te: IEditorMouseEvent | undefined,\n\t): Promise<void> {\n\t\tconst newCommentInfos =\n\t\t\tthis._commentingRangeDecorator.getMatchedCommentAction(range);\n\t\tif (!newCommentInfos.length || !this.editor?.hasModel()) {\n\t\t\tthis._addInProgress = false;\n\t\t\tif (!newCommentInfos.length) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`There are no commenting ranges at the current position (${range ? \"with range\" : \"without range\"}).`,\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tif (newCommentInfos.length > 1) {\n\t\t\tif (e && range) {\n\t\t\t\tthis.contextMenuService.showContextMenu({\n\t\t\t\t\tgetAnchor: () => e.event,\n\t\t\t\t\tgetActions: () =>\n\t\t\t\t\t\tthis.getContextMenuActions(newCommentInfos, range),\n\t\t\t\t\tgetActionsContext: () =>\n\t\t\t\t\t\tnewCommentInfos.length ? newCommentInfos[0] : undefined,\n\t\t\t\t\tonHide: () => {\n\t\t\t\t\t\tthis._addInProgress = false;\n\t\t\t\t\t},\n\t\t\t\t});\n\n\t\t\t\treturn Promise.resolve();\n\t\t\t} else {\n\t\t\t\tconst picks =\n\t\t\t\t\tthis.getCommentProvidersQuickPicks(newCommentInfos);\n\t\t\t\treturn this.quickInputService\n\t\t\t\t\t.pick(picks, {\n\t\t\t\t\t\tplaceHolder: nls.localize(\n\t\t\t\t\t\t\t\"pickCommentService\",\n\t\t\t\t\t\t\t\"Select Comment Provider\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tmatchOnDescription: true,\n\t\t\t\t\t})\n\t\t\t\t\t.then((pick) => {\n\t\t\t\t\t\tif (!pick) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst commentInfos = newCommentInfos.filter(\n\t\t\t\t\t\t\t(info) => info.action.ownerId === pick.id,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (commentInfos.length) {\n\t\t\t\t\t\t\tconst { ownerId } = commentInfos[0].action;\n\t\t\t\t\t\t\tconst clippedRange =\n\t\t\t\t\t\t\t\trange && commentInfos[0].range\n\t\t\t\t\t\t\t\t\t? this.clipUserRangeToCommentRange(\n\t\t\t\t\t\t\t\t\t\t\trange,\n\t\t\t\t\t\t\t\t\t\t\tcommentInfos[0].range,\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t: range;\n\t\t\t\t\t\t\tthis.addCommentAtLine2(clippedRange, ownerId);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tthis._addInProgress = false;\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tconst { ownerId } = newCommentInfos[0]!.action;\n\t\t\tconst clippedRange =\n\t\t\t\trange && newCommentInfos[0].range\n\t\t\t\t\t? this.clipUserRangeToCommentRange(\n\t\t\t\t\t\t\trange,\n\t\t\t\t\t\t\tnewCommentInfos[0].range,\n\t\t\t\t\t\t)\n\t\t\t\t\t: range;\n\t\t\tthis.addCommentAtLine2(clippedRange, ownerId);\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\tprivate getCommentProvidersQuickPicks(\n\t\tcommentInfos: MergedCommentRangeActions[],\n\t) {\n\t\tconst picks: QuickPickInput[] = commentInfos.map((commentInfo) => {\n\t\t\tconst { ownerId, extensionId, label } = commentInfo.action;\n\n\t\t\treturn {\n\t\t\t\tlabel: label ?? extensionId ?? ownerId,\n\t\t\t\tid: ownerId,\n\t\t\t} satisfies IQuickPickItem;\n\t\t});\n\n\t\treturn picks;\n\t}\n\n\tprivate getContextMenuActions(\n\t\tcommentInfos: MergedCommentRangeActions[],\n\t\tcommentRange: Range,\n\t): IAction[] {\n\t\tconst actions: IAction[] = [];\n\n\t\tcommentInfos.forEach((commentInfo) => {\n\t\t\tconst { ownerId, extensionId, label } = commentInfo.action;\n\n\t\t\tactions.push(\n\t\t\t\tnew Action(\n\t\t\t\t\t\"addCommentThread\",\n\t\t\t\t\t`${label || extensionId}`,\n\t\t\t\t\tundefined,\n\t\t\t\t\ttrue,\n\t\t\t\t\t() => {\n\t\t\t\t\t\tconst clippedRange = commentInfo.range\n\t\t\t\t\t\t\t? this.clipUserRangeToCommentRange(\n\t\t\t\t\t\t\t\t\tcommentRange,\n\t\t\t\t\t\t\t\t\tcommentInfo.range,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: commentRange;\n\t\t\t\t\t\tthis.addCommentAtLine2(clippedRange, ownerId);\n\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t});\n\t\treturn actions;\n\t}\n\n\tpublic addCommentAtLine2(range: Range | undefined, ownerId: string) {\n\t\tif (!this.editor) {\n\t\t\treturn;\n\t\t}\n\t\tthis.commentService.createCommentThreadTemplate(\n\t\t\townerId,\n\t\t\tthis.editor.getModel()!.uri,\n\t\t\trange,\n\t\t\tthis.editor.getId(),\n\t\t);\n\t\tthis.processNextThreadToAdd();\n\t\treturn;\n\t}\n\n\tprivate getExistingCommentEditorOptions(editor: ICodeEditor) {\n\t\tconst lineDecorationsWidth: number = editor.getOption(\n\t\t\tEditorOption.lineDecorationsWidth,\n\t\t);\n\t\tlet extraEditorClassName: string[] = [];\n\t\tconst configuredExtraClassName =\n\t\t\teditor.getRawOptions().extraEditorClassName;\n\t\tif (configuredExtraClassName) {\n\t\t\textraEditorClassName = configuredExtraClassName.split(\" \");\n\t\t}\n\t\treturn { lineDecorationsWidth, extraEditorClassName };\n\t}\n\n\tprivate getWithoutCommentsEditorOptions(\n\t\teditor: ICodeEditor,\n\t\textraEditorClassName: string[],\n\t\tstartingLineDecorationsWidth: number,\n\t) {\n\t\tlet lineDecorationsWidth = startingLineDecorationsWidth;\n\t\tconst inlineCommentPos = extraEditorClassName.findIndex(\n\t\t\t(name) => name === \"inline-comment\",\n\t\t);\n\t\tif (inlineCommentPos >= 0) {\n\t\t\textraEditorClassName.splice(inlineCommentPos, 1);\n\t\t}\n\n\t\tconst options = editor.getOptions();\n\t\tif (\n\t\t\toptions.get(EditorOption.folding) &&\n\t\t\toptions.get(EditorOption.showFoldingControls) !== \"never\"\n\t\t) {\n\t\t\tlineDecorationsWidth += 11; // 11 comes from https://github.com/microsoft/vscode/blob/94ee5f58619d59170983f453fe78f156c0cc73a3/src/vs/workbench/contrib/comments/browser/media/review.css#L485\n\t\t}\n\t\tlineDecorationsWidth -= 24;\n\t\treturn { extraEditorClassName, lineDecorationsWidth };\n\t}\n\n\tprivate getWithCommentsLineDecorationWidth(\n\t\teditor: ICodeEditor,\n\t\tstartingLineDecorationsWidth: number,\n\t) {\n\t\tlet lineDecorationsWidth = startingLineDecorationsWidth;\n\t\tconst options = editor.getOptions();\n\t\tif (\n\t\t\toptions.get(EditorOption.folding) &&\n\t\t\toptions.get(EditorOption.showFoldingControls) !== \"never\"\n\t\t) {\n\t\t\tlineDecorationsWidth -= 11;\n\t\t}\n\t\tlineDecorationsWidth += 24;\n\t\tthis._commentingRangeAmountReserved = lineDecorationsWidth;\n\t\treturn this._commentingRangeAmountReserved;\n\t}\n\n\tprivate getWithCommentsEditorOptions(\n\t\teditor: ICodeEditor,\n\t\textraEditorClassName: string[],\n\t\tstartingLineDecorationsWidth: number,\n\t) {\n\t\textraEditorClassName.push(\"inline-comment\");\n\t\treturn {\n\t\t\tlineDecorationsWidth: this.getWithCommentsLineDecorationWidth(\n\t\t\t\teditor,\n\t\t\t\tstartingLineDecorationsWidth,\n\t\t\t),\n\t\t\textraEditorClassName,\n\t\t};\n\t}\n\n\tprivate updateEditorLayoutOptions(\n\t\teditor: ICodeEditor,\n\t\textraEditorClassName: string[],\n\t\tlineDecorationsWidth: number,\n\t) {\n\t\teditor.updateOptions({\n\t\t\textraEditorClassName: extraEditorClassName.join(\" \"),\n\t\t\tlineDecorationsWidth: lineDecorationsWidth,\n\t\t});\n\t}\n\n\tprivate ensureCommentingRangeReservedAmount(editor: ICodeEditor) {\n\t\tconst existing = this.getExistingCommentEditorOptions(editor);\n\t\tif (\n\t\t\texisting.lineDecorationsWidth !==\n\t\t\tthis._commentingRangeAmountReserved\n\t\t) {\n\t\t\teditor.updateOptions({\n\t\t\t\tlineDecorationsWidth: this.getWithCommentsLineDecorationWidth(\n\t\t\t\t\teditor,\n\t\t\t\t\texisting.lineDecorationsWidth,\n\t\t\t\t),\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate tryUpdateReservedSpace(uri?: URI) {\n\t\tif (!this.editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst hasCommentsOrRangesInInfo = this._commentInfos.some((info) => {\n\t\t\tconst hasRanges = Boolean(\n\t\t\t\tinfo.commentingRanges &&\n\t\t\t\t\t(Array.isArray(info.commentingRanges)\n\t\t\t\t\t\t? info.commentingRanges\n\t\t\t\t\t\t: info.commentingRanges.ranges\n\t\t\t\t\t).length,\n\t\t\t);\n\t\t\treturn hasRanges || info.threads.length > 0;\n\t\t});\n\t\turi = uri ?? this.editor.getModel()?.uri;\n\t\tconst resourceHasCommentingRanges = uri\n\t\t\t? this.commentService.resourceHasCommentingRanges(uri)\n\t\t\t: false;\n\n\t\tconst hasCommentsOrRanges =\n\t\t\thasCommentsOrRangesInInfo || resourceHasCommentingRanges;\n\n\t\tif (hasCommentsOrRanges && this.commentService.isCommentingEnabled) {\n\t\t\tif (this._commentingRangeSpaceReserved) {\n\t\t\t\tthis.ensureCommentingRangeReservedAmount(this.editor);\n\t\t\t} else {\n\t\t\t\tthis._commentingRangeSpaceReserved = true;\n\t\t\t\tconst { lineDecorationsWidth, extraEditorClassName } =\n\t\t\t\t\tthis.getExistingCommentEditorOptions(this.editor);\n\t\t\t\tconst newOptions = this.getWithCommentsEditorOptions(\n\t\t\t\t\tthis.editor,\n\t\t\t\t\textraEditorClassName,\n\t\t\t\t\tlineDecorationsWidth,\n\t\t\t\t);\n\t\t\t\tthis.updateEditorLayoutOptions(\n\t\t\t\t\tthis.editor,\n\t\t\t\t\tnewOptions.extraEditorClassName,\n\t\t\t\t\tnewOptions.lineDecorationsWidth,\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (\n\t\t\t(!hasCommentsOrRanges ||\n\t\t\t\t!this.commentService.isCommentingEnabled) &&\n\t\t\tthis._commentingRangeSpaceReserved\n\t\t) {\n\t\t\tthis._commentingRangeSpaceReserved = false;\n\t\t\tconst { lineDecorationsWidth, extraEditorClassName } =\n\t\t\t\tthis.getExistingCommentEditorOptions(this.editor);\n\t\t\tconst newOptions = this.getWithoutCommentsEditorOptions(\n\t\t\t\tthis.editor,\n\t\t\t\textraEditorClassName,\n\t\t\t\tlineDecorationsWidth,\n\t\t\t);\n\t\t\tthis.updateEditorLayoutOptions(\n\t\t\t\tthis.editor,\n\t\t\t\tnewOptions.extraEditorClassName,\n\t\t\t\tnewOptions.lineDecorationsWidth,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate async setComments(commentInfos: ICommentInfo[]): Promise<void> {\n\t\tif (!this.editor || !this.commentService.isCommentingEnabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._commentInfos = commentInfos;\n\t\tthis.tryUpdateReservedSpace();\n\t\t// create viewzones\n\t\tthis.removeCommentWidgetsAndStoreCache();\n\n\t\tlet hasCommentingRanges = false;\n\t\tfor (const info of this._commentInfos) {\n\t\t\tif (\n\t\t\t\t!hasCommentingRanges &&\n\t\t\t\t(info.commentingRanges.ranges.length > 0 ||\n\t\t\t\t\tinfo.commentingRanges.fileComments)\n\t\t\t) {\n\t\t\t\thasCommentingRanges = true;\n\t\t\t}\n\n\t\t\tconst providerCacheStore =\n\t\t\t\tthis._pendingNewCommentCache[info.uniqueOwner];\n\t\t\tconst providerEditsCacheStore =\n\t\t\t\tthis._pendingEditsCache[info.uniqueOwner];\n\t\t\tinfo.threads = info.threads.filter((thread) => !thread.isDisposed);\n\t\t\tfor (const thread of info.threads) {\n\t\t\t\tlet pendingComment: string | undefined;\n\t\t\t\tif (providerCacheStore) {\n\t\t\t\t\tpendingComment = providerCacheStore[thread.threadId];\n\t\t\t\t}\n\n\t\t\t\tlet pendingEdits: { [key: number]: string } | undefined;\n\t\t\t\tif (providerEditsCacheStore) {\n\t\t\t\t\tpendingEdits = providerEditsCacheStore[thread.threadId];\n\t\t\t\t}\n\n\t\t\t\tawait this.displayCommentThread(\n\t\t\t\t\tinfo.uniqueOwner,\n\t\t\t\t\tthread,\n\t\t\t\t\tfalse,\n\t\t\t\t\tpendingComment,\n\t\t\t\t\tpendingEdits,\n\t\t\t\t);\n\t\t\t}\n\t\t\tfor (const thread of info.pendingCommentThreads ?? []) {\n\t\t\t\tthis.resumePendingComment(this.editor!.getModel()!.uri, thread);\n\t\t\t}\n\t\t}\n\n\t\tthis._commentingRangeDecorator.update(this.editor, this._commentInfos);\n\t\tthis._commentThreadRangeDecorator.update(\n\t\t\tthis.editor,\n\t\t\tthis._commentInfos,\n\t\t);\n\n\t\tif (hasCommentingRanges) {\n\t\t\tthis._activeEditorHasCommentingRange.set(true);\n\t\t} else {\n\t\t\tthis._activeEditorHasCommentingRange.set(false);\n\t\t}\n\t}\n\n\tpublic closeWidget(): void {\n\t\tthis._commentWidgets?.forEach((widget) => widget.hide());\n\t\tif (this.editor) {\n\t\t\tthis.editor.focus();\n\t\t\tthis.editor.revealRangeInCenter(this.editor.getSelection()!);\n\t\t}\n\t}\n\n\tprivate removeCommentWidgetsAndStoreCache() {\n\t\tif (this._commentWidgets) {\n\t\t\tthis._commentWidgets.forEach((zone) => {\n\t\t\t\tconst pendingComments = zone.getPendingComments();\n\t\t\t\tconst pendingNewComment = pendingComments.newComment;\n\t\t\t\tconst providerNewCommentCacheStore =\n\t\t\t\t\tthis._pendingNewCommentCache[zone.uniqueOwner];\n\n\t\t\t\tlet lastCommentBody;\n\t\t\t\tif (\n\t\t\t\t\tzone.commentThread.comments &&\n\t\t\t\t\tzone.commentThread.comments.length\n\t\t\t\t) {\n\t\t\t\t\tconst lastComment =\n\t\t\t\t\t\tzone.commentThread.comments[\n\t\t\t\t\t\t\tzone.commentThread.comments.length - 1\n\t\t\t\t\t\t];\n\t\t\t\t\tif (typeof lastComment.body === \"string\") {\n\t\t\t\t\t\tlastCommentBody = lastComment.body;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlastCommentBody = lastComment.body.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tpendingNewComment &&\n\t\t\t\t\tpendingNewComment !== lastCommentBody\n\t\t\t\t) {\n\t\t\t\t\tif (!providerNewCommentCacheStore) {\n\t\t\t\t\t\tthis._pendingNewCommentCache[zone.uniqueOwner] = {};\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pendingNewCommentCache[zone.uniqueOwner][\n\t\t\t\t\t\tzone.commentThread.threadId\n\t\t\t\t\t] = pendingNewComment;\n\t\t\t\t} else if (providerNewCommentCacheStore) {\n\t\t\t\t\tdelete providerNewCommentCacheStore[\n\t\t\t\t\t\tzone.commentThread.threadId\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\tconst pendingEdits = pendingComments.edits;\n\t\t\t\tconst providerEditsCacheStore =\n\t\t\t\t\tthis._pendingEditsCache[zone.uniqueOwner];\n\t\t\t\tif (Object.keys(pendingEdits).length > 0) {\n\t\t\t\t\tif (!providerEditsCacheStore) {\n\t\t\t\t\t\tthis._pendingEditsCache[zone.uniqueOwner] = {};\n\t\t\t\t\t}\n\t\t\t\t\tthis._pendingEditsCache[zone.uniqueOwner][\n\t\t\t\t\t\tzone.commentThread.threadId\n\t\t\t\t\t] = pendingEdits;\n\t\t\t\t} else if (providerEditsCacheStore) {\n\t\t\t\t\tdelete providerEditsCacheStore[zone.commentThread.threadId];\n\t\t\t\t}\n\n\t\t\t\tzone.dispose();\n\t\t\t});\n\t\t}\n\n\t\tthis._commentWidgets = [];\n\t}\n}\n"],
  "mappings": "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",
  "names": ["pending"]
}
