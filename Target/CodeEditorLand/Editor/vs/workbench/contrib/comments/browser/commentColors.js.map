{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/comments/browser/commentColors.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Color } from \"../../../../base/common/color.js\";\nimport * as languages from \"../../../../editor/common/languages.js\";\nimport { peekViewTitleBackground } from \"../../../../editor/contrib/peekView/browser/peekView.js\";\nimport * as nls from \"../../../../nls.js\";\nimport {\n\tcontrastBorder,\n\tdisabledForeground,\n\tlistFocusOutline,\n\tregisterColor,\n\ttransparent,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport type { IColorTheme } from \"../../../../platform/theme/common/themeService.js\";\n\nconst resolvedCommentViewIcon = registerColor(\n\t\"commentsView.resolvedIcon\",\n\t{\n\t\tdark: disabledForeground,\n\t\tlight: disabledForeground,\n\t\thcDark: contrastBorder,\n\t\thcLight: contrastBorder,\n\t},\n\tnls.localize(\"resolvedCommentIcon\", \"Icon color for resolved comments.\"),\n);\nconst unresolvedCommentViewIcon = registerColor(\n\t\"commentsView.unresolvedIcon\",\n\t{\n\t\tdark: listFocusOutline,\n\t\tlight: listFocusOutline,\n\t\thcDark: contrastBorder,\n\t\thcLight: contrastBorder,\n\t},\n\tnls.localize(\n\t\t\"unresolvedCommentIcon\",\n\t\t\"Icon color for unresolved comments.\",\n\t),\n);\n\nregisterColor(\n\t\"editorCommentsWidget.replyInputBackground\",\n\tpeekViewTitleBackground,\n\tnls.localize(\n\t\t\"commentReplyInputBackground\",\n\t\t\"Background color for comment reply input box.\",\n\t),\n);\nconst resolvedCommentBorder = registerColor(\n\t\"editorCommentsWidget.resolvedBorder\",\n\t{\n\t\tdark: resolvedCommentViewIcon,\n\t\tlight: resolvedCommentViewIcon,\n\t\thcDark: contrastBorder,\n\t\thcLight: contrastBorder,\n\t},\n\tnls.localize(\n\t\t\"resolvedCommentBorder\",\n\t\t\"Color of borders and arrow for resolved comments.\",\n\t),\n);\nconst unresolvedCommentBorder = registerColor(\n\t\"editorCommentsWidget.unresolvedBorder\",\n\t{\n\t\tdark: unresolvedCommentViewIcon,\n\t\tlight: unresolvedCommentViewIcon,\n\t\thcDark: contrastBorder,\n\t\thcLight: contrastBorder,\n\t},\n\tnls.localize(\n\t\t\"unresolvedCommentBorder\",\n\t\t\"Color of borders and arrow for unresolved comments.\",\n\t),\n);\nexport const commentThreadRangeBackground = registerColor(\n\t\"editorCommentsWidget.rangeBackground\",\n\ttransparent(unresolvedCommentBorder, 0.1),\n\tnls.localize(\n\t\t\"commentThreadRangeBackground\",\n\t\t\"Color of background for comment ranges.\",\n\t),\n);\nexport const commentThreadRangeActiveBackground = registerColor(\n\t\"editorCommentsWidget.rangeActiveBackground\",\n\ttransparent(unresolvedCommentBorder, 0.1),\n\tnls.localize(\n\t\t\"commentThreadActiveRangeBackground\",\n\t\t\"Color of background for currently selected or hovered comment range.\",\n\t),\n);\n\nconst commentThreadStateBorderColors = new Map([\n\t[languages.CommentThreadState.Unresolved, unresolvedCommentBorder],\n\t[languages.CommentThreadState.Resolved, resolvedCommentBorder],\n]);\n\nconst commentThreadStateIconColors = new Map([\n\t[languages.CommentThreadState.Unresolved, unresolvedCommentViewIcon],\n\t[languages.CommentThreadState.Resolved, resolvedCommentViewIcon],\n]);\n\nexport const commentThreadStateColorVar = \"--comment-thread-state-color\";\nexport const commentViewThreadStateColorVar =\n\t\"--comment-view-thread-state-color\";\nexport const commentThreadStateBackgroundColorVar =\n\t\"--comment-thread-state-background-color\";\n\nfunction getCommentThreadStateColor(\n\tstate: languages.CommentThreadState | undefined,\n\ttheme: IColorTheme,\n\tmap: Map<languages.CommentThreadState, string>,\n): Color | undefined {\n\tconst colorId = state !== undefined ? map.get(state) : undefined;\n\treturn colorId !== undefined ? theme.getColor(colorId) : undefined;\n}\n\nexport function getCommentThreadStateBorderColor(\n\tstate: languages.CommentThreadState | undefined,\n\ttheme: IColorTheme,\n): Color | undefined {\n\treturn getCommentThreadStateColor(\n\t\tstate,\n\t\ttheme,\n\t\tcommentThreadStateBorderColors,\n\t);\n}\n\nexport function getCommentThreadStateIconColor(\n\tstate: languages.CommentThreadState | undefined,\n\ttheme: IColorTheme,\n): Color | undefined {\n\treturn getCommentThreadStateColor(\n\t\tstate,\n\t\ttheme,\n\t\tcommentThreadStateIconColors,\n\t);\n}\n"],
  "mappings": ";;AAMA,YAAY,eAAe;AAC3B,SAAS,+BAA+B;AACxC,YAAY,SAAS;AACrB;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAGP,MAAM,0BAA0B;AAAA,EAC/B;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,SAAS;AAAA,EACV;AAAA,EACA,IAAI,SAAS,uBAAuB,mCAAmC;AACxE;AACA,MAAM,4BAA4B;AAAA,EACjC;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,SAAS;AAAA,EACV;AAAA,EACA,IAAI;AAAA,IACH;AAAA,IACA;AAAA,EACD;AACD;AAEA;AAAA,EACC;AAAA,EACA;AAAA,EACA,IAAI;AAAA,IACH;AAAA,IACA;AAAA,EACD;AACD;AACA,MAAM,wBAAwB;AAAA,EAC7B;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,SAAS;AAAA,EACV;AAAA,EACA,IAAI;AAAA,IACH;AAAA,IACA;AAAA,EACD;AACD;AACA,MAAM,0BAA0B;AAAA,EAC/B;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,SAAS;AAAA,EACV;AAAA,EACA,IAAI;AAAA,IACH;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,+BAA+B;AAAA,EAC3C;AAAA,EACA,YAAY,yBAAyB,GAAG;AAAA,EACxC,IAAI;AAAA,IACH;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,qCAAqC;AAAA,EACjD;AAAA,EACA,YAAY,yBAAyB,GAAG;AAAA,EACxC,IAAI;AAAA,IACH;AAAA,IACA;AAAA,EACD;AACD;AAEA,MAAM,iCAAiC,oBAAI,IAAI;AAAA,EAC9C,CAAC,UAAU,mBAAmB,YAAY,uBAAuB;AAAA,EACjE,CAAC,UAAU,mBAAmB,UAAU,qBAAqB;AAC9D,CAAC;AAED,MAAM,+BAA+B,oBAAI,IAAI;AAAA,EAC5C,CAAC,UAAU,mBAAmB,YAAY,yBAAyB;AAAA,EACnE,CAAC,UAAU,mBAAmB,UAAU,uBAAuB;AAChE,CAAC;AAEM,MAAM,6BAA6B;AACnC,MAAM,iCACZ;AACM,MAAM,uCACZ;AAED,SAAS,2BACR,OACA,OACA,KACoB;AACpB,QAAM,UAAU,UAAU,SAAY,IAAI,IAAI,KAAK,IAAI;AACvD,SAAO,YAAY,SAAY,MAAM,SAAS,OAAO,IAAI;AAC1D;AAPS;AASF,SAAS,iCACf,OACA,OACoB;AACpB,SAAO;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,EACD;AACD;AATgB;AAWT,SAAS,+BACf,OACA,OACoB;AACpB,SAAO;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,EACD;AACD;AATgB;",
  "names": []
}
