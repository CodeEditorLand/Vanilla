{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/comments/browser/commentGlyphWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Color } from \"../../../../base/common/color.js\";\nimport { Emitter } from \"../../../../base/common/event.js\";\nimport { Disposable, toDisposable } from \"../../../../base/common/lifecycle.js\";\nimport {\n\tContentWidgetPositionPreference,\n\ttype ICodeEditor,\n\ttype IContentWidgetPosition,\n} from \"../../../../editor/browser/editorBrowser.js\";\nimport type { IEditorDecorationsCollection } from \"../../../../editor/common/editorCommon.js\";\nimport { CommentThreadState } from \"../../../../editor/common/languages.js\";\nimport {\n\ttype IModelDecorationOptions,\n\tOverviewRulerLane,\n} from \"../../../../editor/common/model.js\";\nimport { ModelDecorationOptions } from \"../../../../editor/common/model/textModel.js\";\nimport * as nls from \"../../../../nls.js\";\nimport {\n\tdarken,\n\teditorBackground,\n\teditorForeground,\n\tlistInactiveSelectionBackground,\n\topaque,\n\tregisterColor,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport { themeColorFromId } from \"../../../../platform/theme/common/themeService.js\";\n\nexport const overviewRulerCommentingRangeForeground = registerColor(\n\t\"editorGutter.commentRangeForeground\",\n\t{\n\t\tdark: opaque(listInactiveSelectionBackground, editorBackground),\n\t\tlight: darken(\n\t\t\topaque(listInactiveSelectionBackground, editorBackground),\n\t\t\t0.05,\n\t\t),\n\t\thcDark: Color.white,\n\t\thcLight: Color.black,\n\t},\n\tnls.localize(\n\t\t\"editorGutterCommentRangeForeground\",\n\t\t\"Editor gutter decoration color for commenting ranges. This color should be opaque.\",\n\t),\n);\nconst overviewRulerCommentForeground = registerColor(\n\t\"editorOverviewRuler.commentForeground\",\n\toverviewRulerCommentingRangeForeground,\n\tnls.localize(\n\t\t\"editorOverviewRuler.commentForeground\",\n\t\t\"Editor overview ruler decoration color for resolved comments. This color should be opaque.\",\n\t),\n);\nconst overviewRulerCommentUnresolvedForeground = registerColor(\n\t\"editorOverviewRuler.commentUnresolvedForeground\",\n\toverviewRulerCommentForeground,\n\tnls.localize(\n\t\t\"editorOverviewRuler.commentUnresolvedForeground\",\n\t\t\"Editor overview ruler decoration color for unresolved comments. This color should be opaque.\",\n\t),\n);\n\nconst editorGutterCommentGlyphForeground = registerColor(\n\t\"editorGutter.commentGlyphForeground\",\n\t{\n\t\tdark: editorForeground,\n\t\tlight: editorForeground,\n\t\thcDark: Color.black,\n\t\thcLight: Color.white,\n\t},\n\tnls.localize(\n\t\t\"editorGutterCommentGlyphForeground\",\n\t\t\"Editor gutter decoration color for commenting glyphs.\",\n\t),\n);\nregisterColor(\n\t\"editorGutter.commentUnresolvedGlyphForeground\",\n\teditorGutterCommentGlyphForeground,\n\tnls.localize(\n\t\t\"editorGutterCommentUnresolvedGlyphForeground\",\n\t\t\"Editor gutter decoration color for commenting glyphs for unresolved comment threads.\",\n\t),\n);\n\nexport class CommentGlyphWidget extends Disposable {\n\tpublic static description = \"comment-glyph-widget\";\n\tprivate _lineNumber!: number;\n\tprivate _editor: ICodeEditor;\n\tprivate _threadState: CommentThreadState | undefined;\n\tprivate readonly _commentsDecorations: IEditorDecorationsCollection;\n\tprivate _commentsOptions: ModelDecorationOptions;\n\n\tprivate readonly _onDidChangeLineNumber = this._register(\n\t\tnew Emitter<number>(),\n\t);\n\tpublic readonly onDidChangeLineNumber = this._onDidChangeLineNumber.event;\n\n\tconstructor(editor: ICodeEditor, lineNumber: number) {\n\t\tsuper();\n\t\tthis._commentsOptions = this.createDecorationOptions();\n\t\tthis._editor = editor;\n\t\tthis._commentsDecorations = this._editor.createDecorationsCollection();\n\t\tthis._register(\n\t\t\tthis._commentsDecorations.onDidChange((e) => {\n\t\t\t\tconst range =\n\t\t\t\t\tthis._commentsDecorations.length > 0\n\t\t\t\t\t\t? this._commentsDecorations.getRange(0)\n\t\t\t\t\t\t: null;\n\t\t\t\tif (range && range.endLineNumber !== this._lineNumber) {\n\t\t\t\t\tthis._lineNumber = range.endLineNumber;\n\t\t\t\t\tthis._onDidChangeLineNumber.fire(this._lineNumber);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis._register(toDisposable(() => this._commentsDecorations.clear()));\n\t\tthis.setLineNumber(lineNumber);\n\t}\n\n\tprivate createDecorationOptions(): ModelDecorationOptions {\n\t\tconst unresolved = this._threadState === CommentThreadState.Unresolved;\n\t\tconst decorationOptions: IModelDecorationOptions = {\n\t\t\tdescription: CommentGlyphWidget.description,\n\t\t\tisWholeLine: true,\n\t\t\toverviewRuler: {\n\t\t\t\tcolor: themeColorFromId(\n\t\t\t\t\tunresolved\n\t\t\t\t\t\t? overviewRulerCommentUnresolvedForeground\n\t\t\t\t\t\t: overviewRulerCommentForeground,\n\t\t\t\t),\n\t\t\t\tposition: OverviewRulerLane.Center,\n\t\t\t},\n\t\t\tcollapseOnReplaceEdit: true,\n\t\t\tlinesDecorationsClassName: `comment-range-glyph comment-thread${unresolved ? \"-unresolved\" : \"\"}`,\n\t\t};\n\n\t\treturn ModelDecorationOptions.createDynamic(decorationOptions);\n\t}\n\n\tsetThreadState(state: CommentThreadState | undefined): void {\n\t\tif (this._threadState !== state) {\n\t\t\tthis._threadState = state;\n\t\t\tthis._commentsOptions = this.createDecorationOptions();\n\t\t\tthis._updateDecorations();\n\t\t}\n\t}\n\n\tprivate _updateDecorations(): void {\n\t\tconst commentsDecorations = [\n\t\t\t{\n\t\t\t\trange: {\n\t\t\t\t\tstartLineNumber: this._lineNumber,\n\t\t\t\t\tstartColumn: 1,\n\t\t\t\t\tendLineNumber: this._lineNumber,\n\t\t\t\t\tendColumn: 1,\n\t\t\t\t},\n\t\t\t\toptions: this._commentsOptions,\n\t\t\t},\n\t\t];\n\n\t\tthis._commentsDecorations.set(commentsDecorations);\n\t}\n\n\tsetLineNumber(lineNumber: number): void {\n\t\tthis._lineNumber = lineNumber;\n\t\tthis._updateDecorations();\n\t}\n\n\tgetPosition(): IContentWidgetPosition {\n\t\tconst range =\n\t\t\tthis._commentsDecorations.length > 0\n\t\t\t\t? this._commentsDecorations.getRange(0)\n\t\t\t\t: null;\n\n\t\treturn {\n\t\t\tposition: {\n\t\t\t\tlineNumber: range ? range.endLineNumber : this._lineNumber,\n\t\t\t\tcolumn: 1,\n\t\t\t},\n\t\t\tpreference: [ContentWidgetPositionPreference.EXACT],\n\t\t};\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
