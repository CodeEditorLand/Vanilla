{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/contrib/comments/browser/commentGlyphWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { ContentWidgetPositionPreference, ICodeEditor, IContentWidgetPosition } from '../../../../editor/browser/editorBrowser.js';\nimport { IModelDecorationOptions, OverviewRulerLane } from '../../../../editor/common/model.js';\nimport { ModelDecorationOptions } from '../../../../editor/common/model/textModel.js';\nimport { darken, editorBackground, editorForeground, listInactiveSelectionBackground, opaque, registerColor } from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nimport { IEditorDecorationsCollection } from '../../../../editor/common/editorCommon.js';\nimport { CommentThreadState } from '../../../../editor/common/languages.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { Emitter } from '../../../../base/common/event.js';\n\nexport const overviewRulerCommentingRangeForeground = registerColor('editorGutter.commentRangeForeground', { dark: opaque(listInactiveSelectionBackground, editorBackground), light: darken(opaque(listInactiveSelectionBackground, editorBackground), .05), hcDark: Color.white, hcLight: Color.black }, nls.localize('editorGutterCommentRangeForeground', 'Editor gutter decoration color for commenting ranges. This color should be opaque.'));\nconst overviewRulerCommentForeground = registerColor('editorOverviewRuler.commentForeground', overviewRulerCommentingRangeForeground, nls.localize('editorOverviewRuler.commentForeground', 'Editor overview ruler decoration color for resolved comments. This color should be opaque.'));\nconst overviewRulerCommentUnresolvedForeground = registerColor('editorOverviewRuler.commentUnresolvedForeground', overviewRulerCommentForeground, nls.localize('editorOverviewRuler.commentUnresolvedForeground', 'Editor overview ruler decoration color for unresolved comments. This color should be opaque.'));\n\nconst editorGutterCommentGlyphForeground = registerColor('editorGutter.commentGlyphForeground', { dark: editorForeground, light: editorForeground, hcDark: Color.black, hcLight: Color.white }, nls.localize('editorGutterCommentGlyphForeground', 'Editor gutter decoration color for commenting glyphs.'));\nregisterColor('editorGutter.commentUnresolvedGlyphForeground', editorGutterCommentGlyphForeground, nls.localize('editorGutterCommentUnresolvedGlyphForeground', 'Editor gutter decoration color for commenting glyphs for unresolved comment threads.'));\n\nexport class CommentGlyphWidget extends Disposable {\n\tpublic static description = 'comment-glyph-widget';\n\tprivate _lineNumber!: number;\n\tprivate _editor: ICodeEditor;\n\tprivate _threadState: CommentThreadState | undefined;\n\tprivate readonly _commentsDecorations: IEditorDecorationsCollection;\n\tprivate _commentsOptions: ModelDecorationOptions;\n\n\tprivate readonly _onDidChangeLineNumber = this._register(new Emitter<number>());\n\tpublic readonly onDidChangeLineNumber = this._onDidChangeLineNumber.event;\n\n\tconstructor(editor: ICodeEditor, lineNumber: number) {\n\t\tsuper();\n\t\tthis._commentsOptions = this.createDecorationOptions();\n\t\tthis._editor = editor;\n\t\tthis._commentsDecorations = this._editor.createDecorationsCollection();\n\t\tthis._register(this._commentsDecorations.onDidChange(e => {\n\t\t\tconst range = (this._commentsDecorations.length > 0 ? this._commentsDecorations.getRange(0) : null);\n\t\t\tif (range && range.endLineNumber !== this._lineNumber) {\n\t\t\t\tthis._lineNumber = range.endLineNumber;\n\t\t\t\tthis._onDidChangeLineNumber.fire(this._lineNumber);\n\t\t\t}\n\t\t}));\n\t\tthis._register(toDisposable(() => this._commentsDecorations.clear()));\n\t\tthis.setLineNumber(lineNumber);\n\t}\n\n\tprivate createDecorationOptions(): ModelDecorationOptions {\n\t\tconst unresolved = this._threadState === CommentThreadState.Unresolved;\n\t\tconst decorationOptions: IModelDecorationOptions = {\n\t\t\tdescription: CommentGlyphWidget.description,\n\t\t\tisWholeLine: true,\n\t\t\toverviewRuler: {\n\t\t\t\tcolor: themeColorFromId(unresolved ? overviewRulerCommentUnresolvedForeground : overviewRulerCommentForeground),\n\t\t\t\tposition: OverviewRulerLane.Center\n\t\t\t},\n\t\t\tcollapseOnReplaceEdit: true,\n\t\t\tlinesDecorationsClassName: `comment-range-glyph comment-thread${unresolved ? '-unresolved' : ''}`\n\t\t};\n\n\t\treturn ModelDecorationOptions.createDynamic(decorationOptions);\n\t}\n\n\tsetThreadState(state: CommentThreadState | undefined): void {\n\t\tif (this._threadState !== state) {\n\t\t\tthis._threadState = state;\n\t\t\tthis._commentsOptions = this.createDecorationOptions();\n\t\t\tthis._updateDecorations();\n\t\t}\n\t}\n\n\tprivate _updateDecorations(): void {\n\t\tconst commentsDecorations = [{\n\t\t\trange: {\n\t\t\t\tstartLineNumber: this._lineNumber, startColumn: 1,\n\t\t\t\tendLineNumber: this._lineNumber, endColumn: 1\n\t\t\t},\n\t\t\toptions: this._commentsOptions\n\t\t}];\n\n\t\tthis._commentsDecorations.set(commentsDecorations);\n\t}\n\n\tsetLineNumber(lineNumber: number): void {\n\t\tthis._lineNumber = lineNumber;\n\t\tthis._updateDecorations();\n\t}\n\n\tgetPosition(): IContentWidgetPosition {\n\t\tconst range = (this._commentsDecorations.length > 0 ? this._commentsDecorations.getRange(0) : null);\n\n\t\treturn {\n\t\t\tposition: {\n\t\t\t\tlineNumber: range ? range.endLineNumber : this._lineNumber,\n\t\t\t\tcolumn: 1\n\t\t\t},\n\t\t\tpreference: [ContentWidgetPositionPreference.EXACT]\n\t\t};\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
