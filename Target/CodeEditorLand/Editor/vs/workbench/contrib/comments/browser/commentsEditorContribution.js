import{KeyChord as E,KeyCode as m,KeyMod as i}from"../../../../base/common/keyCodes.js";import"./media/review.css";import{isCodeEditor as S,isDiffEditor as M}from"../../../../editor/browser/editorBrowser.js";import{EditorContributionInstantiation as N,registerEditorContribution as F}from"../../../../editor/browser/editorExtensions.js";import{ICodeEditorService as h}from"../../../../editor/browser/services/codeEditorService.js";import{Range as H}from"../../../../editor/common/core/range.js";import{EditorContextKeys as y}from"../../../../editor/common/editorContextKeys.js";import*as a from"../../../../nls.js";import{AccessibleViewProviderId as A}from"../../../../platform/accessibility/browser/accessibleView.js";import{CONTEXT_ACCESSIBILITY_MODE_ENABLED as b}from"../../../../platform/accessibility/common/accessibility.js";import{MenuId as l,MenuRegistry as s}from"../../../../platform/actions/common/actions.js";import{CommandsRegistry as f}from"../../../../platform/commands/common/commands.js";import{ContextKeyExpr as p}from"../../../../platform/contextkey/common/contextkey.js";import"../../../../platform/instantiation/common/instantiation.js";import{KeybindingsRegistry as c,KeybindingWeight as C}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{INotificationService as z}from"../../../../platform/notification/common/notification.js";import{registerWorkbenchContribution2 as k,WorkbenchPhase as W}from"../../../common/contributions.js";import{IEditorService as D}from"../../../services/editor/common/editorService.js";import{accessibilityHelpIsShown as R,accessibleViewCurrentProviderId as I}from"../../accessibility/browser/accessibilityConfiguration.js";import{CommentCommandId as n}from"../common/commentCommandIds.js";import{CommentContextKeys as d}from"../common/commentContextKeys.js";import{CommentController as g,ID as L}from"./commentsController.js";import{ICommentService as U}from"./commentService.js";import{CommentsInputContentProvider as w}from"./commentsInputContentProvider.js";import{ctxCommentEditorFocused as P,SimpleCommentEditor as x}from"./simpleCommentEditor.js";F(L,g,N.AfterFirstRender),k(w.ID,w,W.BlockRestore),c.registerCommandAndKeybindingRule({id:n.NextThread,handler:async(o,e)=>{const t=u(o);if(!t)return Promise.resolve();const r=g.get(t);if(!r)return Promise.resolve();r.nextCommentThread()},weight:C.EditorContrib,primary:i.Alt|m.F9}),c.registerCommandAndKeybindingRule({id:n.PreviousThread,handler:async(o,e)=>{const t=u(o);if(!t)return Promise.resolve();const r=g.get(t);if(!r)return Promise.resolve();r.previousCommentThread()},weight:C.EditorContrib,primary:i.Shift|i.Alt|m.F9}),c.registerCommandAndKeybindingRule({id:n.NextRange,handler:async(o,e)=>{const t=u(o);if(!t)return Promise.resolve();const r=g.get(t);if(!r)return Promise.resolve();r.nextCommentingRange()},when:p.and(b,p.or(y.focus,d.commentFocused,p.and(R,I.isEqualTo(A.Comments)))),primary:E(i.CtrlCmd|m.KeyK,i.CtrlCmd|i.Alt|m.DownArrow),weight:C.EditorContrib}),s.appendMenuItem(l.CommandPalette,{command:{id:n.NextRange,title:a.localize("comments.nextCommentingRange","Go to Next Commenting Range"),category:"Comments"},when:d.activeEditorHasCommentingRange}),c.registerCommandAndKeybindingRule({id:n.PreviousRange,handler:async(o,e)=>{const t=u(o);if(!t)return Promise.resolve();const r=g.get(t);if(!r)return Promise.resolve();r.previousCommentingRange()},when:p.and(b,p.or(y.focus,d.commentFocused,p.and(R,I.isEqualTo(A.Comments)))),primary:E(i.CtrlCmd|m.KeyK,i.CtrlCmd|i.Alt|m.UpArrow),weight:C.EditorContrib}),s.appendMenuItem(l.CommandPalette,{command:{id:n.PreviousRange,title:a.localize("comments.previousCommentingRange","Go to Previous Commenting Range"),category:"Comments"},when:d.activeEditorHasCommentingRange}),f.registerCommand({id:n.ToggleCommenting,handler:o=>{const e=o.get(U),t=e.isCommentingEnabled;e.enableCommenting(!t)}}),s.appendMenuItem(l.CommandPalette,{command:{id:n.ToggleCommenting,title:a.localize("comments.toggleCommenting","Toggle Editor Commenting"),category:"Comments"},when:d.WorkspaceHasCommenting}),c.registerCommandAndKeybindingRule({id:n.Add,handler:async(o,e)=>{const t=u(o);if(!t)return Promise.resolve();const r=g.get(t);if(!r)return Promise.resolve();const K=e?.range?new H(e.range.startLineNumber,e.range.startLineNumber,e.range.endLineNumber,e.range.endColumn):e?.fileComment?void 0:t.getSelection(),T=o.get(z);try{await r.addOrToggleCommentAtLine(K,void 0)}catch{T.error(a.localize("comments.addCommand.error","The cursor must be within a commenting range to add a comment"))}},weight:C.EditorContrib,primary:E(i.CtrlCmd|m.KeyK,i.CtrlCmd|i.Alt|m.KeyC)}),s.appendMenuItem(l.CommandPalette,{command:{id:n.Add,title:a.localize("comments.addCommand","Add Comment on Current Selection"),category:"Comments"},when:d.activeCursorHasCommentingRange}),f.registerCommand({id:n.CollapseAll,handler:o=>v(o)?.collapseAll()}),s.appendMenuItem(l.CommandPalette,{command:{id:n.CollapseAll,title:a.localize("comments.collapseAll","Collapse All Comments"),category:"Comments"},when:d.WorkspaceHasCommenting}),f.registerCommand({id:n.ExpandAll,handler:o=>v(o)?.expandAll()}),s.appendMenuItem(l.CommandPalette,{command:{id:n.ExpandAll,title:a.localize("comments.expandAll","Expand All Comments"),category:"Comments"},when:d.WorkspaceHasCommenting}),f.registerCommand({id:n.ExpandUnresolved,handler:o=>v(o)?.expandUnresolved()}),s.appendMenuItem(l.CommandPalette,{command:{id:n.ExpandUnresolved,title:a.localize("comments.expandUnresolved","Expand Unresolved Comments"),category:"Comments"},when:d.WorkspaceHasCommenting}),c.registerCommandAndKeybindingRule({id:n.Submit,weight:C.EditorContrib,primary:i.CtrlCmd|m.Enter,when:P,handler:(o,e)=>{const t=o.get(h).getFocusedCodeEditor();t instanceof x&&t.getParentThread().submitComment()}}),c.registerCommandAndKeybindingRule({id:n.Hide,weight:C.EditorContrib,primary:m.Escape,secondary:[i.Shift|m.Escape],when:P,handler:(o,e)=>{const t=o.get(h).getFocusedCodeEditor();t instanceof x&&t.getParentThread().collapse()}});function u(o){let e=o.get(D).activeTextEditorControl;return M(e)&&(e.getOriginalEditor().hasTextFocus()?e=e.getOriginalEditor():e=e.getModifiedEditor()),!S(e)||!e.hasModel()?null:e}function v(o){const e=u(o);if(!e)return;const t=g.get(e);if(t)return t}export{u as getActiveEditor};
