import{KeyChord as A,KeyCode as a,KeyMod as i}from"../../../../base/common/keyCodes.js";import"./media/review.css";import{isCodeEditor as H,isDiffEditor as L}from"../../../../editor/browser/editorBrowser.js";import{EditorContributionInstantiation as k,registerEditorContribution as W}from"../../../../editor/browser/editorExtensions.js";import{ICodeEditorService as w}from"../../../../editor/browser/services/codeEditorService.js";import*as m from"../../../../nls.js";import{CommandsRegistry as v}from"../../../../platform/commands/common/commands.js";import"../../../../platform/instantiation/common/instantiation.js";import{KeybindingsRegistry as g,KeybindingWeight as l}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{ICommentService as O}from"./commentService.js";import{ctxCommentEditorFocused as I,SimpleCommentEditor as P}from"./simpleCommentEditor.js";import{IEditorService as D}from"../../../services/editor/common/editorService.js";import{Action2 as b,MenuId as C,MenuRegistry as u,registerAction2 as R}from"../../../../platform/actions/common/actions.js";import{EditorContextKeys as S}from"../../../../editor/common/editorContextKeys.js";import{CommentController as s,ID as G}from"./commentsController.js";import{Range as U}from"../../../../editor/common/core/range.js";import{INotificationService as T}from"../../../../platform/notification/common/notification.js";import{CommentContextKeys as d}from"../common/commentContextKeys.js";import{CONTEXT_ACCESSIBILITY_MODE_ENABLED as K}from"../../../../platform/accessibility/common/accessibility.js";import{ContextKeyExpr as f}from"../../../../platform/contextkey/common/contextkey.js";import{accessibilityHelpIsShown as z,accessibleViewCurrentProviderId as F}from"../../accessibility/browser/accessibilityConfiguration.js";import{CommentCommandId as r}from"../common/commentCommandIds.js";import{registerWorkbenchContribution2 as B,WorkbenchPhase as _}from"../../../common/contributions.js";import{CommentsInputContentProvider as N}from"./commentsInputContentProvider.js";import{AccessibleViewProviderId as M}from"../../../../platform/accessibility/browser/accessibleView.js";import{CommentWidgetFocus as q}from"./commentThreadZoneWidget.js";W(G,s,k.AfterFirstRender),B(N.ID,N,_.BlockRestore),g.registerCommandAndKeybindingRule({id:r.NextThread,handler:async(t,o)=>{const e=c(t);if(!e)return Promise.resolve();const n=s.get(e);if(!n)return Promise.resolve();n.nextCommentThread(!0)},weight:l.EditorContrib,primary:i.Alt|a.F9}),g.registerCommandAndKeybindingRule({id:r.PreviousThread,handler:async(t,o)=>{const e=c(t);if(!e)return Promise.resolve();const n=s.get(e);if(!n)return Promise.resolve();n.previousCommentThread(!0)},weight:l.EditorContrib,primary:i.Shift|i.Alt|a.F9}),R(class extends b{constructor(){super({id:r.NextCommentedRange,title:{value:m.localize("comments.NextCommentedRange","Go to Next Commented Range"),original:"Go to Next Commented Range"},category:{value:m.localize("commentsCategory","Comments"),original:"Comments"},f1:!0,keybinding:{primary:i.Alt|a.F10,weight:l.EditorContrib,when:d.activeEditorHasCommentingRange}})}run(t,...o){const e=c(t);if(!e)return;const n=s.get(e);n&&n.nextCommentThread(!1)}}),R(class extends b{constructor(){super({id:r.PreviousCommentedRange,title:{value:m.localize("comments.previousCommentedRange","Go to Previous Commented Range"),original:"Go to Previous Commented Range"},category:{value:m.localize("commentsCategory","Comments"),original:"Comments"},f1:!0,keybinding:{primary:i.Shift|i.Alt|a.F10,weight:l.EditorContrib,when:d.activeEditorHasCommentingRange}})}run(t,...o){const e=c(t);if(!e)return;const n=s.get(e);n&&n.previousCommentThread(!1)}}),g.registerCommandAndKeybindingRule({id:r.NextRange,handler:async(t,o)=>{const e=c(t);if(!e)return Promise.resolve();const n=s.get(e);if(!n)return Promise.resolve();n.nextCommentingRange()},when:f.and(K,f.or(S.focus,d.commentFocused,f.and(z,F.isEqualTo(M.Comments)))),primary:A(i.CtrlCmd|a.KeyK,i.CtrlCmd|i.Alt|a.DownArrow),weight:l.EditorContrib}),u.appendMenuItem(C.CommandPalette,{command:{id:r.NextRange,title:m.localize("comments.nextCommentingRange","Go to Next Commenting Range"),category:"Comments"},when:d.activeEditorHasCommentingRange}),g.registerCommandAndKeybindingRule({id:r.PreviousRange,handler:async(t,o)=>{const e=c(t);if(!e)return Promise.resolve();const n=s.get(e);if(!n)return Promise.resolve();n.previousCommentingRange()},when:f.and(K,f.or(S.focus,d.commentFocused,f.and(z,F.isEqualTo(M.Comments)))),primary:A(i.CtrlCmd|a.KeyK,i.CtrlCmd|i.Alt|a.UpArrow),weight:l.EditorContrib}),u.appendMenuItem(C.CommandPalette,{command:{id:r.PreviousRange,title:m.localize("comments.previousCommentingRange","Go to Previous Commenting Range"),category:"Comments"},when:d.activeEditorHasCommentingRange}),v.registerCommand({id:r.ToggleCommenting,handler:t=>{const o=t.get(O),e=o.isCommentingEnabled;o.enableCommenting(!e)}}),u.appendMenuItem(C.CommandPalette,{command:{id:r.ToggleCommenting,title:m.localize("comments.toggleCommenting","Toggle Editor Commenting"),category:"Comments"},when:d.WorkspaceHasCommenting}),g.registerCommandAndKeybindingRule({id:r.Add,handler:async(t,o)=>{const e=c(t);if(!e)return Promise.resolve();const n=s.get(e);if(!n)return Promise.resolve();const h=o?.range?new U(o.range.startLineNumber,o.range.startLineNumber,o.range.endLineNumber,o.range.endColumn):o?.fileComment?void 0:e.getSelection(),E=t.get(T);try{await n.addOrToggleCommentAtLine(h,void 0)}catch{E.error(m.localize("comments.addCommand.error","The cursor must be within a commenting range to add a comment"))}},weight:l.EditorContrib,primary:A(i.CtrlCmd|a.KeyK,i.CtrlCmd|i.Alt|a.KeyC)}),u.appendMenuItem(C.CommandPalette,{command:{id:r.Add,title:m.localize("comments.addCommand","Add Comment on Current Selection"),category:"Comments"},when:d.activeCursorHasCommentingRange}),R(class extends b{constructor(){super({id:r.FocusCommentOnCurrentLine,title:{value:m.localize("comments.focusCommentOnCurrentLine","Focus Comment on Current Line"),original:"Focus Comment on Current Line"},category:{value:m.localize("commentsCategory","Comments"),original:"Comments"},f1:!0,precondition:d.activeCursorHasComment})}async run(t,...o){const e=c(t);if(!e)return;const n=s.get(e);if(!n)return;const h=e.getSelection(),E=t.get(T);let p=!1;try{const y=n.getCommentsAtLine(h);y.length===0?p=!0:await n.revealCommentThread(y[0].commentThread.threadId,void 0,!1,q.Widget)}catch{p=!0}p&&E.error(m.localize("comments.focusCommand.error","The cursor must be on a line with a comment to focus the comment"))}}),v.registerCommand({id:r.CollapseAll,handler:t=>x(t)?.collapseAll()}),u.appendMenuItem(C.CommandPalette,{command:{id:r.CollapseAll,title:m.localize("comments.collapseAll","Collapse All Comments"),category:"Comments"},when:d.WorkspaceHasCommenting}),v.registerCommand({id:r.ExpandAll,handler:t=>x(t)?.expandAll()}),u.appendMenuItem(C.CommandPalette,{command:{id:r.ExpandAll,title:m.localize("comments.expandAll","Expand All Comments"),category:"Comments"},when:d.WorkspaceHasCommenting}),v.registerCommand({id:r.ExpandUnresolved,handler:t=>x(t)?.expandUnresolved()}),u.appendMenuItem(C.CommandPalette,{command:{id:r.ExpandUnresolved,title:m.localize("comments.expandUnresolved","Expand Unresolved Comments"),category:"Comments"},when:d.WorkspaceHasCommenting}),g.registerCommandAndKeybindingRule({id:r.Submit,weight:l.EditorContrib,primary:i.CtrlCmd|a.Enter,when:I,handler:(t,o)=>{const e=t.get(w).getFocusedCodeEditor();e instanceof P&&e.getParentThread().submitComment()}}),g.registerCommandAndKeybindingRule({id:r.Hide,weight:l.EditorContrib,primary:a.Escape,secondary:[i.Shift|a.Escape],when:I,handler:(t,o)=>{const e=t.get(w).getFocusedCodeEditor();e instanceof P&&e.getParentThread().collapse()}});function c(t){let o=t.get(D).activeTextEditorControl;return L(o)&&(o.getOriginalEditor().hasTextFocus()?o=o.getOriginalEditor():o=o.getModifiedEditor()),!H(o)||!o.hasModel()?null:o}function x(t){const o=c(t);if(!o)return;const e=s.get(o);if(e)return e}export{c as getActiveEditor};
