import{setFullscreen as Y}from"../../base/browser/browser.js";import{detectFullscreen as Z,domContentLoaded as $,getCookieValue as G,getWindow as Q}from"../../base/browser/dom.js";import{IndexedDB as X}from"../../base/browser/indexedDB.js";import{mainWindow as R}from"../../base/browser/window.js";import{DeferredPromise as ee,timeout as re}from"../../base/common/async.js";import{VSBuffer as oe}from"../../base/common/buffer.js";import{toLocalISOString as te}from"../../base/common/date.js";import{onUnexpectedError as E}from"../../base/common/errors.js";import{Disposable as ie,DisposableStore as ne,toDisposable as z}from"../../base/common/lifecycle.js";import{Schemas as u,connectionTokenCookieName as se}from"../../base/common/network.js";import{mixin as ce,safeStringify as ae}from"../../base/common/objects.js";import{mark as M}from"../../base/common/performance.js";import{dirname as me,joinPath as de}from"../../base/common/resources.js";import{assertIsDefined as le}from"../../base/common/types.js";import{URI as pe}from"../../base/common/uri.js";import{localize as _,localize2 as ve}from"../../nls.js";import{Categories as fe}from"../../platform/action/common/actionCommonCategories.js";import{Action2 as Se,MenuId as ge,registerAction2 as ue}from"../../platform/actions/common/actions.js";import{ICommandService as Ie}from"../../platform/commands/common/commands.js";import{IDialogService as he}from"../../platform/dialogs/common/dialogs.js";import{IEncryptionService as we}from"../../platform/encryption/common/encryptionService.js";import{HTMLFileSystemProvider as ye}from"../../platform/files/browser/htmlFileSystemProvider.js";import{IndexedDBFileSystemProvider as N}from"../../platform/files/browser/indexedDBFileSystemProvider.js";import{WebFileSystemAccess as Pe}from"../../platform/files/browser/webFileSystemAccess.js";import{FileService as De}from"../../platform/files/common/fileService.js";import{IFileService as ke}from"../../platform/files/common/files.js";import{InMemoryFileSystemProvider as x}from"../../platform/files/common/inMemoryFilesystemProvider.js";import{IInstantiationService as We}from"../../platform/instantiation/common/instantiation.js";import{ServiceCollection as be}from"../../platform/instantiation/common/serviceCollection.js";import{ILabelService as Ue}from"../../platform/label/common/label.js";import{ConsoleLogInAutomationLogger as Le}from"../../platform/log/browser/log.js";import{BufferLogger as Fe}from"../../platform/log/common/bufferLog.js";import{FileLoggerService as Re}from"../../platform/log/common/fileLog.js";import{ConsoleLogger as xe,ILogService as q,ILoggerService as Te,getLogLevel as Be}from"../../platform/log/common/log.js";import{LogService as Ce}from"../../platform/log/common/logService.js";import{INotificationService as Ae,Severity as Ee}from"../../platform/notification/common/notification.js";import{IOpenerService as ze}from"../../platform/opener/common/opener.js";import{NullPolicyService as Me}from"../../platform/policy/common/policy.js";import _e from"../../platform/product/common/product.js";import{IProductService as H}from"../../platform/product/common/productService.js";import{IProgressService as Ne}from"../../platform/progress/common/progress.js";import{BrowserSocketFactory as qe}from"../../platform/remote/browser/browserSocketFactory.js";import{RemoteAuthorityResolverService as He}from"../../platform/remote/browser/remoteAuthorityResolverService.js";import{IRemoteAuthorityResolverService as j,RemoteConnectionType as je}from"../../platform/remote/common/remoteAuthorityResolver.js";import{IRemoteSocketFactoryService as Oe,RemoteSocketFactoryService as Ke}from"../../platform/remote/common/remoteSocketFactoryService.js";import{IRequestService as Ve}from"../../platform/request/common/request.js";import{ISecretStorageService as Je}from"../../platform/secrets/common/secrets.js";import{SignService as Ye}from"../../platform/sign/browser/signService.js";import{ISignService as Ze}from"../../platform/sign/common/sign.js";import{IStorageService as O}from"../../platform/storage/common/storage.js";import{ITelemetryService as $e}from"../../platform/telemetry/common/telemetry.js";import{DisposableTunnel as Ge,TunnelProtocol as K}from"../../platform/tunnel/common/tunnel.js";import{IUriIdentityService as Qe}from"../../platform/uriIdentity/common/uriIdentity.js";import{UriIdentityService as Xe}from"../../platform/uriIdentity/common/uriIdentityService.js";import{BrowserUserDataProfilesService as er}from"../../platform/userDataProfile/browser/userDataProfile.js";import{IUserDataProfilesService as rr}from"../../platform/userDataProfile/common/userDataProfile.js";import{IUserDataSyncStoreManagementService as or}from"../../platform/userDataSync/common/userDataSync.js";import{UserDataSyncStoreManagementService as tr}from"../../platform/userDataSync/common/userDataSyncStoreService.js";import{isFolderToOpen as ir,isWorkspaceToOpen as nr}from"../../platform/window/common/window.js";import{IWorkspaceContextService as sr,UNKNOWN_EMPTY_WINDOW_WORKSPACE as cr,isTemporaryWorkspace as ar,isWorkspaceIdentifier as mr}from"../../platform/workspace/common/workspace.js";import{IWorkspaceTrustEnablementService as dr,IWorkspaceTrustManagementService as lr}from"../../platform/workspace/common/workspaceTrust.js";import{WorkspaceService as pr}from"../services/configuration/browser/configurationService.js";import{IWorkbenchConfigurationService as vr}from"../services/configuration/common/configuration.js";import{ConfigurationCache as fr}from"../services/configuration/common/configurationCache.js";import{EncryptionService as Sr}from"../services/encryption/browser/encryptionService.js";import{BrowserWorkbenchEnvironmentService as gr,IBrowserWorkbenchEnvironmentService as V}from"../services/environment/browser/environmentService.js";import{IHostService as ur}from"../services/host/browser/host.js";import{ILifecycleService as Ir}from"../services/lifecycle/common/lifecycle.js";import{windowLogId as hr}from"../services/log/common/logConstants.js";import{DelayedLogChannel as wr}from"../services/output/common/delayedLogChannel.js";import{BrowserRemoteResourceLoader as yr}from"../services/remote/browser/browserRemoteResourceHandler.js";import{RemoteAgentService as Pr}from"../services/remote/browser/remoteAgentService.js";import{IRemoteAgentService as Dr}from"../services/remote/common/remoteAgentService.js";import{IRemoteExplorerService as kr}from"../services/remote/common/remoteExplorerService.js";import{RemoteFileSystemProviderClient as Wr}from"../services/remote/common/remoteFileSystemProviderClient.js";import{TunnelSource as br}from"../services/remote/common/tunnelModel.js";import{BrowserRequestService as Ur}from"../services/request/browser/requestService.js";import{BrowserSecretStorageService as Lr}from"../services/secrets/browser/secretStorageService.js";import{BrowserStorageService as J}from"../services/storage/browser/storageService.js";import{IEmbedderTerminalService as Fr}from"../services/terminal/common/embedderTerminalService.js";import{ITimerService as Rr}from"../services/timer/browser/timerService.js";import{IUserDataInitializationService as xr,UserDataInitializationService as Tr}from"../services/userData/browser/userDataInit.js";import{UserDataProfileInitializer as Br}from"../services/userDataProfile/browser/userDataProfileInit.js";import{IUserDataProfileService as Cr}from"../services/userDataProfile/common/userDataProfile.js";import{UserDataProfileService as Ar}from"../services/userDataProfile/common/userDataProfileService.js";import{UserDataSyncInitializer as Er}from"../services/userDataSync/browser/userDataSyncInit.js";import{getSingleFolderWorkspaceIdentifier as zr,getWorkspaceIdentifier as Mr}from"../services/workspaces/browser/workspaces.js";import{WorkspaceTrustEnablementService as _r,WorkspaceTrustManagementService as Nr}from"../services/workspaces/common/workspaceTrust.js";import{BrowserWindow as qr}from"./window.js";import{Workbench as Hr}from"./workbench.js";class Lt extends ie{constructor(e,t){super();this.domElement=e;this.configuration=t;this.init()}onWillShutdownDisposables=this._register(new ne);indexedDBFileSystemProviders=[];init(){Y(!!Z(R),R)}async open(){const[e]=await Promise.all([this.initServices(),$(Q(this.domElement))]),t=new Hr(this.domElement,void 0,e.serviceCollection,e.logService);this.registerListeners(t);const n=t.startup();return this._register(n.createInstance(qr)),e.logService.trace("workbench#open with configuration",ae(this.configuration)),n.invokeFunction(o=>{const r=o.get($e);for(const a of this.indexedDBFileSystemProviders)this._register(a.onReportError(c=>r.publicLog2("indexedDBFileSystemProviderError",c)))}),n.invokeFunction(o=>{const r=o.get(Ie),a=o.get(Ir),c=o.get(Rr),d=o.get(ze),l=o.get(H),p=o.get(Ne),i=o.get(V),b=o.get(We),U=o.get(kr),L=o.get(Ue),P=o.get(Fr),k=o.get(j),f=o.get(Ae);async function I(s,m,...h){const v=new ee,S=f.prompt(s,m,h.map(y=>({label:y,run:()=>v.complete(y)}))),W=S.onDidClose(()=>{v.complete(void 0),W.dispose()}),w=await v.p;return S.close(),w}let D;return{commands:{executeCommand:(s,...m)=>r.executeCommand(s,...m)},env:{async getUriScheme(){return l.urlProtocol},async retrievePerformanceMarks(){return await c.whenReady(),c.getPerformanceMarks()},async openUri(s){return d.open(s,{})}},logger:{log:(s,m)=>{D||(D=b.createInstance(wr,"webEmbedder",l.embedderIdentifier||l.nameShort,de(me(i.logFile),"webEmbedder.log"))),D.log(s,m)}},window:{withProgress:(s,m)=>p.withProgress(s,m),createTerminal:async s=>P.createTerminal(s),showInformationMessage:(s,...m)=>I(Ee.Info,s,...m)},workspace:{didResolveRemoteAuthority:async()=>{this.configuration.remoteAuthority&&await k.resolveAuthority(this.configuration.remoteAuthority)},openTunnel:async s=>{const m=le(await U.forward({remote:s.remoteAddress,local:s.localAddressPort,name:s.label,source:{source:br.Extension,description:L.getHostLabel(u.vscodeRemote,this.configuration.remoteAuthority)},elevateIfNeeded:!1,privacy:s.privacy},{label:s.label,elevateIfNeeded:void 0,onAutoForward:void 0,requireLocalPort:void 0,protocol:s.protocol===K.Https?s.protocol:K.Http}));if(typeof m=="string")throw new Error(m);return new class extends Ge{}({port:m.tunnelRemotePort,host:m.tunnelRemoteHost},m.localAddress,()=>m.dispose())}},shutdown:()=>a.shutdown()}})}registerListeners(e){this._register(e.onWillShutdown(()=>this.onWillShutdownDisposables.clear())),this._register(e.onDidShutdown(()=>this.dispose()))}async initServices(){const e=new be,t=this.resolveWorkspace(),n=ce({_serviceBrand:void 0,..._e},this.configuration.productConfiguration);e.set(H,n);const o=pe.file(te(new Date).replace(/-|:|\.\d+Z$/g,"")).with({scheme:"vscode-log"}),r=new gr(t.id,o,this.configuration,n);e.set(V,r);const a=new Fe,c=this._register(new De(a));e.set(ke,c);const d=new Re(Be(r),o,c);e.set(Te,d);const l=[new xe(d.getLogLevel())];r.isExtensionDevelopment&&r.extensionTestsLocationURI&&l.push(new Le(d.getLogLevel()));const p=d.createLogger(r.logFile,{id:hr,name:_("rendererLog","Window")}),i=new Ce(p,l);e.set(q,i),a.logger=i,await this.registerIndexedDBFileSystemProviders(r,c,i,d,o);const b=r.options.connectionToken||G(se),U=this.configuration.remoteResourceProvider?new yr(c,this.configuration.remoteResourceProvider):void 0,L=this.configuration.resourceUriProvider??U?.getResourceUriProvider(),P=new He(!r.expectsResolverExtension,b,L,this.configuration.serverBasePath,n,i);e.set(j,P);const k=new Ye(n);e.set(Ze,k);const f=new Xe(c);e.set(Qe,f);const I=new er(r,c,f,i);e.set(rr,I);const D=await this.getCurrentProfile(t,I,r),s=new Ar(D);e.set(Cr,s);const m=new Ke;m.register(je.WebSocket,new qe(this.configuration.webSocketFactory)),e.set(Oe,m);const h=this._register(new Pr(m,s,r,n,P,k,i));e.set(Dr,h),this._register(Wr.register(h,c,i));const[v,S]=await Promise.all([this.createWorkspaceService(t,r,s,I,c,h,f,i).then(g=>(e.set(sr,g),e.set(vr,g),g)),this.createStorageService(t,i,s).then(g=>(e.set(O,g),g))]),W=new _r(v,r);e.set(dr,W);const w=new Nr(v,P,S,f,r,v,W,c);e.set(lr,w),v.updateWorkspaceTrust(w.isWorkspaceTrusted()),this._register(w.onDidChangeTrust(()=>v.updateWorkspaceTrust(w.isWorkspaceTrusted())));const y=new Ur(h,v,i);e.set(Ve,y);const T=new tr(n,v,S);e.set(or,T);const B=new Sr;e.set(we,B);const C=new Lr(S,B,r,i);e.set(Je,C);const F=[];F.push(new Er(r,C,T,c,I,S,n,y,i,f)),r.options.profile&&F.push(new Br(r,c,s,S,i,f,y));const A=new Tr(F);e.set(xr,A);try{await Promise.race([re(5e3),this.initializeUserData(A,v)])}catch(g){i.error(g)}return{serviceCollection:e,configurationService:v,logService:i}}async initializeUserData(e,t){await e.requiresInitialization()&&(M("code/willInitRequiredUserData"),await e.initializeRequiredResources(),await t.reloadLocalUserConfiguration(),M("code/didInitRequiredUserData"))}async registerIndexedDBFileSystemProviders(e,t,n,o,r){let a;const c="vscode-userdata-store",d="vscode-logs-store",l="vscode-filehandles-store";try{a=await X.create("vscode-web-db",3,[c,d,l]),this.onWillShutdownDisposables.add(z(()=>a?.close()))}catch(i){n.error("Error while creating IndexedDB",i)}if(a){const i=new N(r.scheme,a,d,!1);this.indexedDBFileSystemProviders.push(i),t.registerProvider(r.scheme,i)}else t.registerProvider(r.scheme,new x);let p;a?(p=new N(u.vscodeUserData,a,c,!0),this.indexedDBFileSystemProviders.push(p),this.registerDeveloperActions(p)):(n.info("Using in-memory user data provider"),p=new x),t.registerProvider(u.vscodeUserData,p),Pe.supported(R)&&t.registerProvider(u.file,new ye(a,l,n)),t.registerProvider(u.tmp,new x)}registerDeveloperActions(e){this._register(ue(class extends Se{constructor(){super({id:"workbench.action.resetUserData",title:ve("reset","Reset User Data"),category:fe.Developer,menu:{id:ge.CommandPalette}})}async run(n){const o=n.get(he),r=n.get(ur),a=n.get(O),c=n.get(q);if((await o.confirm({message:_("reset user data message","Would you like to reset your data (settings, keybindings, extensions, snippets and UI State) and reload?")})).confirmed)try{await e?.reset(),a instanceof J&&await a.clear()}catch(l){throw c.error(l),l}r.reload()}}))}async createStorageService(e,t,n){const o=new J(e,n,t);try{return await o.initialize(),this.onWillShutdownDisposables.add(z(()=>o.close())),o}catch(r){return E(r),t.error(r),o}}async createWorkspaceService(e,t,n,o,r,a,c,d){if(mr(e)&&ar(e.configPath))try{const i={folders:[]};await r.createFile(e.configPath,oe.fromString(JSON.stringify(i,null,"	")),{overwrite:!1})}catch{}const l=new fr([u.file,u.vscodeUserData,u.tmp],t,r),p=new pr({remoteAuthority:this.configuration.remoteAuthority,configurationCache:l},t,n,o,r,a,c,d,new Me);try{return await p.initialize(e),p}catch(i){return E(i),d.error(i),p}}async getCurrentProfile(e,t,n){const o=n.options?.profile?.name??n.profile;if(o){const r=t.profiles.find(a=>a.name===o);return r||t.createNamedProfile(o,void 0,e)}return t.getProfileForWorkspace(e)??t.defaultProfile}resolveWorkspace(){let e;return this.configuration.workspaceProvider&&(e=this.configuration.workspaceProvider.workspace),e&&nr(e)?Mr(e.workspaceUri):e&&ir(e)?zr(e.folderUri):cr}}export{Lt as BrowserMain};
