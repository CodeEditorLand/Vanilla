import{mark as E}from"../../base/common/performance.js";import{domContentLoaded as Y,detectFullscreen as Z,getCookieValue as $,getWindow as G}from"../../base/browser/dom.js";import{assertIsDefined as Q}from"../../base/common/types.js";import{ServiceCollection as X}from"../../platform/instantiation/common/serviceCollection.js";import{ILogService as z,ConsoleLogger as ee,getLogLevel as re,ILoggerService as oe}from"../../platform/log/common/log.js";import{ConsoleLogInAutomationLogger as te}from"../../platform/log/browser/log.js";import{Disposable as ie,DisposableStore as ne,toDisposable as M}from"../../base/common/lifecycle.js";import{BrowserWorkbenchEnvironmentService as se,IBrowserWorkbenchEnvironmentService as _}from"../services/environment/browser/environmentService.js";import{Workbench as ce}from"./workbench.js";import{RemoteFileSystemProviderClient as ae}from"../services/remote/common/remoteFileSystemProviderClient.js";import{IProductService as N}from"../../platform/product/common/productService.js";import me from"../../platform/product/common/product.js";import{RemoteAgentService as de}from"../services/remote/browser/remoteAgentService.js";import{RemoteAuthorityResolverService as le}from"../../platform/remote/browser/remoteAuthorityResolverService.js";import{IRemoteAuthorityResolverService as q,RemoteConnectionType as pe}from"../../platform/remote/common/remoteAuthorityResolver.js";import{IRemoteAgentService as fe}from"../services/remote/common/remoteAgentService.js";import{IFileService as ve}from"../../platform/files/common/files.js";import{FileService as Se}from"../../platform/files/common/fileService.js";import{Schemas as u,connectionTokenCookieName as ge}from"../../base/common/network.js";import{IWorkspaceContextService as ue,UNKNOWN_EMPTY_WINDOW_WORKSPACE as Ie,isTemporaryWorkspace as he,isWorkspaceIdentifier as we}from"../../platform/workspace/common/workspace.js";import{IWorkbenchConfigurationService as ye}from"../services/configuration/common/configuration.js";import{onUnexpectedError as H}from"../../base/common/errors.js";import{setFullscreen as Pe}from"../../base/browser/browser.js";import{URI as De}from"../../base/common/uri.js";import{WorkspaceService as ke}from"../services/configuration/browser/configurationService.js";import{ConfigurationCache as We}from"../services/configuration/common/configurationCache.js";import{ISignService as be}from"../../platform/sign/common/sign.js";import{SignService as Ue}from"../../platform/sign/browser/signService.js";import{BrowserStorageService as O}from"../services/storage/browser/storageService.js";import{IStorageService as K}from"../../platform/storage/common/storage.js";import{toLocalISOString as Le}from"../../base/common/date.js";import{isWorkspaceToOpen as Fe,isFolderToOpen as Re}from"../../platform/window/common/window.js";import{getSingleFolderWorkspaceIdentifier as xe,getWorkspaceIdentifier as Te}from"../services/workspaces/browser/workspaces.js";import{InMemoryFileSystemProvider as R}from"../../platform/files/common/inMemoryFilesystemProvider.js";import{ICommandService as Be}from"../../platform/commands/common/commands.js";import{IndexedDBFileSystemProvider as V}from"../../platform/files/browser/indexedDBFileSystemProvider.js";import{BrowserRequestService as Ce}from"../services/request/browser/requestService.js";import{IRequestService as Ae}from"../../platform/request/common/request.js";import{IUserDataInitializationService as Ee,UserDataInitializationService as ze}from"../services/userData/browser/userDataInit.js";import{UserDataSyncStoreManagementService as Me}from"../../platform/userDataSync/common/userDataSyncStoreService.js";import{IUserDataSyncStoreManagementService as _e}from"../../platform/userDataSync/common/userDataSync.js";import{ILifecycleService as Ne}from"../services/lifecycle/common/lifecycle.js";import{Action2 as qe,MenuId as He,registerAction2 as Oe}from"../../platform/actions/common/actions.js";import{IInstantiationService as Ke}from"../../platform/instantiation/common/instantiation.js";import{localize as j,localize2 as Ve}from"../../nls.js";import{Categories as je}from"../../platform/action/common/actionCommonCategories.js";import{IDialogService as Je}from"../../platform/dialogs/common/dialogs.js";import{IHostService as Ye}from"../services/host/browser/host.js";import{IUriIdentityService as Ze}from"../../platform/uriIdentity/common/uriIdentity.js";import{UriIdentityService as $e}from"../../platform/uriIdentity/common/uriIdentityService.js";import{BrowserWindow as Ge}from"./window.js";import{ITimerService as Qe}from"../services/timer/browser/timerService.js";import{WorkspaceTrustEnablementService as Xe,WorkspaceTrustManagementService as er}from"../services/workspaces/common/workspaceTrust.js";import{IWorkspaceTrustEnablementService as rr,IWorkspaceTrustManagementService as or}from"../../platform/workspace/common/workspaceTrust.js";import{HTMLFileSystemProvider as tr}from"../../platform/files/browser/htmlFileSystemProvider.js";import{IOpenerService as ir}from"../../platform/opener/common/opener.js";import{mixin as nr,safeStringify as sr}from"../../base/common/objects.js";import{IndexedDB as cr}from"../../base/browser/indexedDB.js";import{WebFileSystemAccess as ar}from"../../platform/files/browser/webFileSystemAccess.js";import{ITelemetryService as mr}from"../../platform/telemetry/common/telemetry.js";import{IProgressService as dr}from"../../platform/progress/common/progress.js";import{DelayedLogChannel as lr}from"../services/output/common/delayedLogChannel.js";import{dirname as pr,joinPath as fr}from"../../base/common/resources.js";import{IUserDataProfilesService as vr}from"../../platform/userDataProfile/common/userDataProfile.js";import{NullPolicyService as Sr}from"../../platform/policy/common/policy.js";import{IRemoteExplorerService as gr}from"../services/remote/common/remoteExplorerService.js";import{DisposableTunnel as ur,TunnelProtocol as J}from"../../platform/tunnel/common/tunnel.js";import{ILabelService as Ir}from"../../platform/label/common/label.js";import{UserDataProfileService as hr}from"../services/userDataProfile/common/userDataProfileService.js";import{IUserDataProfileService as wr}from"../services/userDataProfile/common/userDataProfile.js";import{BrowserUserDataProfilesService as yr}from"../../platform/userDataProfile/browser/userDataProfile.js";import{DeferredPromise as Pr,timeout as Dr}from"../../base/common/async.js";import{windowLogId as kr}from"../services/log/common/logConstants.js";import{LogService as Wr}from"../../platform/log/common/logService.js";import{IRemoteSocketFactoryService as br,RemoteSocketFactoryService as Ur}from"../../platform/remote/common/remoteSocketFactoryService.js";import{BrowserSocketFactory as Lr}from"../../platform/remote/browser/browserSocketFactory.js";import{VSBuffer as Fr}from"../../base/common/buffer.js";import{UserDataProfileInitializer as Rr}from"../services/userDataProfile/browser/userDataProfileInit.js";import{UserDataSyncInitializer as xr}from"../services/userDataSync/browser/userDataSyncInit.js";import{BrowserRemoteResourceLoader as Tr}from"../services/remote/browser/browserRemoteResourceHandler.js";import{BufferLogger as Br}from"../../platform/log/common/bufferLog.js";import{FileLoggerService as Cr}from"../../platform/log/common/fileLog.js";import{IEmbedderTerminalService as Ar}from"../services/terminal/common/embedderTerminalService.js";import{BrowserSecretStorageService as Er}from"../services/secrets/browser/secretStorageService.js";import{EncryptionService as zr}from"../services/encryption/browser/encryptionService.js";import{IEncryptionService as Mr}from"../../platform/encryption/common/encryptionService.js";import{ISecretStorageService as _r}from"../../platform/secrets/common/secrets.js";import{TunnelSource as Nr}from"../services/remote/common/tunnelModel.js";import{mainWindow as x}from"../../base/browser/window.js";import{INotificationService as qr,Severity as Hr}from"../../platform/notification/common/notification.js";class Kt extends ie{constructor(e,t){super();this.domElement=e;this.configuration=t;this.init()}onWillShutdownDisposables=this._register(new ne);indexedDBFileSystemProviders=[];init(){Pe(!!Z(x),x)}async open(){const[e]=await Promise.all([this.initServices(),Y(G(this.domElement))]),t=new ce(this.domElement,void 0,e.serviceCollection,e.logService);this.registerListeners(t);const n=t.startup();return this._register(n.createInstance(Ge)),e.logService.trace("workbench#open with configuration",sr(this.configuration)),n.invokeFunction(o=>{const r=o.get(mr);for(const a of this.indexedDBFileSystemProviders)this._register(a.onReportError(c=>r.publicLog2("indexedDBFileSystemProviderError",c)))}),n.invokeFunction(o=>{const r=o.get(Be),a=o.get(Ne),c=o.get(Qe),d=o.get(ir),l=o.get(N),p=o.get(dr),i=o.get(_),b=o.get(Ke),U=o.get(gr),L=o.get(Ir),P=o.get(Ar),k=o.get(q),v=o.get(qr);async function I(s,m,...h){const f=new Pr,S=v.prompt(s,m,h.map(y=>({label:y,run:()=>f.complete(y)}))),W=S.onDidClose(()=>{f.complete(void 0),W.dispose()}),w=await f.p;return S.close(),w}let D;return{commands:{executeCommand:(s,...m)=>r.executeCommand(s,...m)},env:{async getUriScheme(){return l.urlProtocol},async retrievePerformanceMarks(){return await c.whenReady(),c.getPerformanceMarks()},async openUri(s){return d.open(s,{})}},logger:{log:(s,m)=>{D||(D=b.createInstance(lr,"webEmbedder",l.embedderIdentifier||l.nameShort,fr(pr(i.logFile),"webEmbedder.log"))),D.log(s,m)}},window:{withProgress:(s,m)=>p.withProgress(s,m),createTerminal:async s=>P.createTerminal(s),showInformationMessage:(s,...m)=>I(Hr.Info,s,...m)},workspace:{didResolveRemoteAuthority:async()=>{this.configuration.remoteAuthority&&await k.resolveAuthority(this.configuration.remoteAuthority)},openTunnel:async s=>{const m=Q(await U.forward({remote:s.remoteAddress,local:s.localAddressPort,name:s.label,source:{source:Nr.Extension,description:L.getHostLabel(u.vscodeRemote,this.configuration.remoteAuthority)},elevateIfNeeded:!1,privacy:s.privacy},{label:s.label,elevateIfNeeded:void 0,onAutoForward:void 0,requireLocalPort:void 0,protocol:s.protocol===J.Https?s.protocol:J.Http}));if(typeof m=="string")throw new Error(m);return new class extends ur{}({port:m.tunnelRemotePort,host:m.tunnelRemoteHost},m.localAddress,()=>m.dispose())}},shutdown:()=>a.shutdown()}})}registerListeners(e){this._register(e.onWillShutdown(()=>this.onWillShutdownDisposables.clear())),this._register(e.onDidShutdown(()=>this.dispose()))}async initServices(){const e=new X,t=this.resolveWorkspace(),n=nr({_serviceBrand:void 0,...me},this.configuration.productConfiguration);e.set(N,n);const o=De.file(Le(new Date).replace(/-|:|\.\d+Z$/g,"")).with({scheme:"vscode-log"}),r=new se(t.id,o,this.configuration,n);e.set(_,r);const a=new Br,c=this._register(new Se(a));e.set(ve,c);const d=new Cr(re(r),o,c);e.set(oe,d);const l=[new ee(d.getLogLevel())];r.isExtensionDevelopment&&r.extensionTestsLocationURI&&l.push(new te(d.getLogLevel()));const p=d.createLogger(r.logFile,{id:kr,name:j("rendererLog","Window")}),i=new Wr(p,l);e.set(z,i),a.logger=i,await this.registerIndexedDBFileSystemProviders(r,c,i,d,o);const b=r.options.connectionToken||$(ge),U=this.configuration.remoteResourceProvider?new Tr(c,this.configuration.remoteResourceProvider):void 0,L=this.configuration.resourceUriProvider??U?.getResourceUriProvider(),P=new le(!r.expectsResolverExtension,b,L,this.configuration.serverBasePath,n,i);e.set(q,P);const k=new Ue(n);e.set(be,k);const v=new $e(c);e.set(Ze,v);const I=new yr(r,c,v,i);e.set(vr,I);const D=await this.getCurrentProfile(t,I,r),s=new hr(D);e.set(wr,s);const m=new Ur;m.register(pe.WebSocket,new Lr(this.configuration.webSocketFactory)),e.set(br,m);const h=this._register(new de(m,s,r,n,P,k,i));e.set(fe,h),this._register(ae.register(h,c,i));const[f,S]=await Promise.all([this.createWorkspaceService(t,r,s,I,c,h,v,i).then(g=>(e.set(ue,g),e.set(ye,g),g)),this.createStorageService(t,i,s).then(g=>(e.set(K,g),g))]),W=new Xe(f,r);e.set(rr,W);const w=new er(f,P,S,v,r,f,W,c);e.set(or,w),f.updateWorkspaceTrust(w.isWorkspaceTrusted()),this._register(w.onDidChangeTrust(()=>f.updateWorkspaceTrust(w.isWorkspaceTrusted())));const y=new Ce(h,f,i);e.set(Ae,y);const T=new Me(n,f,S);e.set(_e,T);const B=new zr;e.set(Mr,B);const C=new Er(S,B,r,i);e.set(_r,C);const F=[];F.push(new xr(r,C,T,c,I,S,n,y,i,v)),r.options.profile&&F.push(new Rr(r,c,s,S,i,v,y));const A=new ze(F);e.set(Ee,A);try{await Promise.race([Dr(5e3),this.initializeUserData(A,f)])}catch(g){i.error(g)}return{serviceCollection:e,configurationService:f,logService:i}}async initializeUserData(e,t){await e.requiresInitialization()&&(E("code/willInitRequiredUserData"),await e.initializeRequiredResources(),await t.reloadLocalUserConfiguration(),E("code/didInitRequiredUserData"))}async registerIndexedDBFileSystemProviders(e,t,n,o,r){let a;const c="vscode-userdata-store",d="vscode-logs-store",l="vscode-filehandles-store";try{a=await cr.create("vscode-web-db",3,[c,d,l]),this.onWillShutdownDisposables.add(M(()=>a?.close()))}catch(i){n.error("Error while creating IndexedDB",i)}if(a){const i=new V(r.scheme,a,d,!1);this.indexedDBFileSystemProviders.push(i),t.registerProvider(r.scheme,i)}else t.registerProvider(r.scheme,new R);let p;a?(p=new V(u.vscodeUserData,a,c,!0),this.indexedDBFileSystemProviders.push(p),this.registerDeveloperActions(p)):(n.info("Using in-memory user data provider"),p=new R),t.registerProvider(u.vscodeUserData,p),ar.supported(x)&&t.registerProvider(u.file,new tr(a,l,n)),t.registerProvider(u.tmp,new R)}registerDeveloperActions(e){this._register(Oe(class extends qe{constructor(){super({id:"workbench.action.resetUserData",title:Ve("reset","Reset User Data"),category:je.Developer,menu:{id:He.CommandPalette}})}async run(n){const o=n.get(Je),r=n.get(Ye),a=n.get(K),c=n.get(z);if((await o.confirm({message:j("reset user data message","Would you like to reset your data (settings, keybindings, extensions, snippets and UI State) and reload?")})).confirmed)try{await e?.reset(),a instanceof O&&await a.clear()}catch(l){throw c.error(l),l}r.reload()}}))}async createStorageService(e,t,n){const o=new O(e,n,t);try{return await o.initialize(),this.onWillShutdownDisposables.add(M(()=>o.close())),o}catch(r){return H(r),t.error(r),o}}async createWorkspaceService(e,t,n,o,r,a,c,d){if(we(e)&&he(e.configPath))try{const i={folders:[]};await r.createFile(e.configPath,Fr.fromString(JSON.stringify(i,null,"	")),{overwrite:!1})}catch{}const l=new We([u.file,u.vscodeUserData,u.tmp],t,r),p=new ke({remoteAuthority:this.configuration.remoteAuthority,configurationCache:l},t,n,o,r,a,c,d,new Sr);try{return await p.initialize(e),p}catch(i){return H(i),d.error(i),p}}async getCurrentProfile(e,t,n){const o=n.options?.profile?.name??n.profile;if(o){const r=t.profiles.find(a=>a.name===o);return r||t.createNamedProfile(o,void 0,e)}return t.getProfileForWorkspace(e)??t.defaultProfile}resolveWorkspace(){let e;return this.configuration.workspaceProvider&&(e=this.configuration.workspaceProvider.workspace),e&&Fe(e)?Te(e.workspaceUri):e&&Re(e)?xe(e.folderUri):Ie}}export{Kt as BrowserMain};
