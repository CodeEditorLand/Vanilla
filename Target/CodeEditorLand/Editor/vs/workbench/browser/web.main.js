import{setFullscreen as Y}from"../../../vs/base/browser/browser.js";import{detectFullscreen as Z,domContentLoaded as $,getCookieValue as G,getWindow as Q}from"../../../vs/base/browser/dom.js";import{IndexedDB as X}from"../../../vs/base/browser/indexedDB.js";import{mainWindow as R}from"../../../vs/base/browser/window.js";import{DeferredPromise as ee,timeout as re}from"../../../vs/base/common/async.js";import{VSBuffer as oe}from"../../../vs/base/common/buffer.js";import{toLocalISOString as te}from"../../../vs/base/common/date.js";import{onUnexpectedError as E}from"../../../vs/base/common/errors.js";import{Disposable as ie,DisposableStore as ne,toDisposable as z}from"../../../vs/base/common/lifecycle.js";import{connectionTokenCookieName as se,Schemas as u}from"../../../vs/base/common/network.js";import{mixin as ce,safeStringify as ae}from"../../../vs/base/common/objects.js";import{mark as M}from"vs/base/common/performance";import{dirname as me,joinPath as de}from"../../../vs/base/common/resources.js";import{assertIsDefined as le}from"../../../vs/base/common/types.js";import{URI as pe}from"../../../vs/base/common/uri.js";import{localize as _,localize2 as fe}from"../../../vs/nls.js";import{Categories as ve}from"../../../vs/platform/action/common/actionCommonCategories.js";import{Action2 as Se,MenuId as ge,registerAction2 as ue}from"../../../vs/platform/actions/common/actions.js";import{ICommandService as Ie}from"../../../vs/platform/commands/common/commands.js";import{IDialogService as he}from"../../../vs/platform/dialogs/common/dialogs.js";import{IEncryptionService as we}from"../../../vs/platform/encryption/common/encryptionService.js";import{HTMLFileSystemProvider as ye}from"../../../vs/platform/files/browser/htmlFileSystemProvider.js";import{IndexedDBFileSystemProvider as N}from"../../../vs/platform/files/browser/indexedDBFileSystemProvider.js";import{WebFileSystemAccess as Pe}from"../../../vs/platform/files/browser/webFileSystemAccess.js";import{IFileService as De}from"../../../vs/platform/files/common/files.js";import{FileService as ke}from"../../../vs/platform/files/common/fileService.js";import{InMemoryFileSystemProvider as x}from"../../../vs/platform/files/common/inMemoryFilesystemProvider.js";import{IInstantiationService as We}from"../../../vs/platform/instantiation/common/instantiation.js";import{ServiceCollection as be}from"../../../vs/platform/instantiation/common/serviceCollection.js";import{ILabelService as Ue}from"../../../vs/platform/label/common/label.js";import{ConsoleLogInAutomationLogger as Le}from"../../../vs/platform/log/browser/log.js";import{BufferLogger as Fe}from"../../../vs/platform/log/common/bufferLog.js";import{FileLoggerService as Re}from"../../../vs/platform/log/common/fileLog.js";import{ConsoleLogger as xe,getLogLevel as Te,ILoggerService as Be,ILogService as q}from"../../../vs/platform/log/common/log.js";import{LogService as Ce}from"../../../vs/platform/log/common/logService.js";import{INotificationService as Ae,Severity as Ee}from"../../../vs/platform/notification/common/notification.js";import{IOpenerService as ze}from"../../../vs/platform/opener/common/opener.js";import{NullPolicyService as Me}from"../../../vs/platform/policy/common/policy.js";import _e from"../../../vs/platform/product/common/product.js";import{IProductService as H}from"../../../vs/platform/product/common/productService.js";import{IProgressService as Ne}from"../../../vs/platform/progress/common/progress.js";import{BrowserSocketFactory as qe}from"../../../vs/platform/remote/browser/browserSocketFactory.js";import{RemoteAuthorityResolverService as He}from"../../../vs/platform/remote/browser/remoteAuthorityResolverService.js";import{IRemoteAuthorityResolverService as O,RemoteConnectionType as Oe}from"../../../vs/platform/remote/common/remoteAuthorityResolver.js";import{IRemoteSocketFactoryService as Ke,RemoteSocketFactoryService as Ve}from"../../../vs/platform/remote/common/remoteSocketFactoryService.js";import{IRequestService as je}from"../../../vs/platform/request/common/request.js";import{ISecretStorageService as Je}from"../../../vs/platform/secrets/common/secrets.js";import{SignService as Ye}from"../../../vs/platform/sign/browser/signService.js";import{ISignService as Ze}from"../../../vs/platform/sign/common/sign.js";import{IStorageService as K}from"../../../vs/platform/storage/common/storage.js";import{ITelemetryService as $e}from"../../../vs/platform/telemetry/common/telemetry.js";import{DisposableTunnel as Ge,TunnelProtocol as V}from"../../../vs/platform/tunnel/common/tunnel.js";import{IUriIdentityService as Qe}from"../../../vs/platform/uriIdentity/common/uriIdentity.js";import{UriIdentityService as Xe}from"../../../vs/platform/uriIdentity/common/uriIdentityService.js";import{BrowserUserDataProfilesService as er}from"../../../vs/platform/userDataProfile/browser/userDataProfile.js";import{IUserDataProfilesService as rr}from"../../../vs/platform/userDataProfile/common/userDataProfile.js";import{IUserDataSyncStoreManagementService as or}from"../../../vs/platform/userDataSync/common/userDataSync.js";import{UserDataSyncStoreManagementService as tr}from"../../../vs/platform/userDataSync/common/userDataSyncStoreService.js";import{isFolderToOpen as ir,isWorkspaceToOpen as nr}from"../../../vs/platform/window/common/window.js";import{isTemporaryWorkspace as sr,isWorkspaceIdentifier as cr,IWorkspaceContextService as ar,UNKNOWN_EMPTY_WINDOW_WORKSPACE as mr}from"../../../vs/platform/workspace/common/workspace.js";import{IWorkspaceTrustEnablementService as dr,IWorkspaceTrustManagementService as lr}from"../../../vs/platform/workspace/common/workspaceTrust.js";import"../../../vs/platform/workspaces/common/workspaces.js";import"../../../vs/workbench/browser/web.api.js";import{BrowserWindow as pr}from"../../../vs/workbench/browser/window.js";import{Workbench as fr}from"../../../vs/workbench/browser/workbench.js";import{WorkspaceService as vr}from"../../../vs/workbench/services/configuration/browser/configurationService.js";import{IWorkbenchConfigurationService as Sr}from"../../../vs/workbench/services/configuration/common/configuration.js";import{ConfigurationCache as gr}from"../../../vs/workbench/services/configuration/common/configurationCache.js";import{EncryptionService as ur}from"../../../vs/workbench/services/encryption/browser/encryptionService.js";import{BrowserWorkbenchEnvironmentService as Ir,IBrowserWorkbenchEnvironmentService as j}from"../../../vs/workbench/services/environment/browser/environmentService.js";import"../../../vs/workbench/services/environment/common/environmentService.js";import{IHostService as hr}from"../../../vs/workbench/services/host/browser/host.js";import{ILifecycleService as wr}from"../../../vs/workbench/services/lifecycle/common/lifecycle.js";import{windowLogId as yr}from"../../../vs/workbench/services/log/common/logConstants.js";import{DelayedLogChannel as Pr}from"../../../vs/workbench/services/output/common/delayedLogChannel.js";import{BrowserRemoteResourceLoader as Dr}from"../../../vs/workbench/services/remote/browser/browserRemoteResourceHandler.js";import{RemoteAgentService as kr}from"../../../vs/workbench/services/remote/browser/remoteAgentService.js";import{IRemoteAgentService as Wr}from"../../../vs/workbench/services/remote/common/remoteAgentService.js";import{IRemoteExplorerService as br}from"../../../vs/workbench/services/remote/common/remoteExplorerService.js";import{RemoteFileSystemProviderClient as Ur}from"../../../vs/workbench/services/remote/common/remoteFileSystemProviderClient.js";import{TunnelSource as Lr}from"../../../vs/workbench/services/remote/common/tunnelModel.js";import{BrowserRequestService as Fr}from"../../../vs/workbench/services/request/browser/requestService.js";import{BrowserSecretStorageService as Rr}from"../../../vs/workbench/services/secrets/browser/secretStorageService.js";import{BrowserStorageService as J}from"../../../vs/workbench/services/storage/browser/storageService.js";import{IEmbedderTerminalService as xr}from"../../../vs/workbench/services/terminal/common/embedderTerminalService.js";import{ITimerService as Tr}from"../../../vs/workbench/services/timer/browser/timerService.js";import{IUserDataInitializationService as Br,UserDataInitializationService as Cr}from"../../../vs/workbench/services/userData/browser/userDataInit.js";import{UserDataProfileInitializer as Ar}from"../../../vs/workbench/services/userDataProfile/browser/userDataProfileInit.js";import{IUserDataProfileService as Er}from"../../../vs/workbench/services/userDataProfile/common/userDataProfile.js";import{UserDataProfileService as zr}from"../../../vs/workbench/services/userDataProfile/common/userDataProfileService.js";import{UserDataSyncInitializer as Mr}from"../../../vs/workbench/services/userDataSync/browser/userDataSyncInit.js";import{getSingleFolderWorkspaceIdentifier as _r,getWorkspaceIdentifier as Nr}from"../../../vs/workbench/services/workspaces/browser/workspaces.js";import{WorkspaceTrustEnablementService as qr,WorkspaceTrustManagementService as Hr}from"../../../vs/workbench/services/workspaces/common/workspaceTrust.js";class Kt extends ie{constructor(e,t){super();this.domElement=e;this.configuration=t;this.init()}onWillShutdownDisposables=this._register(new ne);indexedDBFileSystemProviders=[];init(){Y(!!Z(R),R)}async open(){const[e]=await Promise.all([this.initServices(),$(Q(this.domElement))]),t=new fr(this.domElement,void 0,e.serviceCollection,e.logService);this.registerListeners(t);const i=t.startup();return this._register(i.createInstance(pr)),e.logService.trace("workbench#open with configuration",ae(this.configuration)),i.invokeFunction(o=>{const r=o.get($e);for(const a of this.indexedDBFileSystemProviders)this._register(a.onReportError(c=>r.publicLog2("indexedDBFileSystemProviderError",c)))}),i.invokeFunction(o=>{const r=o.get(Ie),a=o.get(wr),c=o.get(Tr),d=o.get(ze),l=o.get(H),p=o.get(Ne),n=o.get(j),b=o.get(We),U=o.get(br),L=o.get(Ue),P=o.get(xr),k=o.get(O),v=o.get(Ae);async function I(s,m,...h){const f=new ee,S=v.prompt(s,m,h.map(y=>({label:y,run:()=>f.complete(y)}))),W=S.onDidClose(()=>{f.complete(void 0),W.dispose()}),w=await f.p;return S.close(),w}let D;return{commands:{executeCommand:(s,...m)=>r.executeCommand(s,...m)},env:{async getUriScheme(){return l.urlProtocol},async retrievePerformanceMarks(){return await c.whenReady(),c.getPerformanceMarks()},async openUri(s){return d.open(s,{})}},logger:{log:(s,m)=>{D||(D=b.createInstance(Pr,"webEmbedder",l.embedderIdentifier||l.nameShort,de(me(n.logFile),"webEmbedder.log"))),D.log(s,m)}},window:{withProgress:(s,m)=>p.withProgress(s,m),createTerminal:async s=>P.createTerminal(s),showInformationMessage:(s,...m)=>I(Ee.Info,s,...m)},workspace:{didResolveRemoteAuthority:async()=>{this.configuration.remoteAuthority&&await k.resolveAuthority(this.configuration.remoteAuthority)},openTunnel:async s=>{const m=le(await U.forward({remote:s.remoteAddress,local:s.localAddressPort,name:s.label,source:{source:Lr.Extension,description:L.getHostLabel(u.vscodeRemote,this.configuration.remoteAuthority)},elevateIfNeeded:!1,privacy:s.privacy},{label:s.label,elevateIfNeeded:void 0,onAutoForward:void 0,requireLocalPort:void 0,protocol:s.protocol===V.Https?s.protocol:V.Http}));if(typeof m=="string")throw new Error(m);return new class extends Ge{}({port:m.tunnelRemotePort,host:m.tunnelRemoteHost},m.localAddress,()=>m.dispose())}},shutdown:()=>a.shutdown()}})}registerListeners(e){this._register(e.onWillShutdown(()=>this.onWillShutdownDisposables.clear())),this._register(e.onDidShutdown(()=>this.dispose()))}async initServices(){const e=new be,t=this.resolveWorkspace(),i=ce({_serviceBrand:void 0,..._e},this.configuration.productConfiguration);e.set(H,i);const o=pe.file(te(new Date).replace(/-|:|\.\d+Z$/g,"")).with({scheme:"vscode-log"}),r=new Ir(t.id,o,this.configuration,i);e.set(j,r);const a=new Fe,c=this._register(new ke(a));e.set(De,c);const d=new Re(Te(r),o,c);e.set(Be,d);const l=[new xe(d.getLogLevel())];r.isExtensionDevelopment&&r.extensionTestsLocationURI&&l.push(new Le(d.getLogLevel()));const p=d.createLogger(r.logFile,{id:yr,name:_("rendererLog","Window")}),n=new Ce(p,l);e.set(q,n),a.logger=n,await this.registerIndexedDBFileSystemProviders(r,c,n,d,o);const b=r.options.connectionToken||G(se),U=this.configuration.remoteResourceProvider?new Dr(c,this.configuration.remoteResourceProvider):void 0,L=this.configuration.resourceUriProvider??U?.getResourceUriProvider(),P=new He(!r.expectsResolverExtension,b,L,this.configuration.serverBasePath,i,n);e.set(O,P);const k=new Ye(i);e.set(Ze,k);const v=new Xe(c);e.set(Qe,v);const I=new er(r,c,v,n);e.set(rr,I);const D=await this.getCurrentProfile(t,I,r),s=new zr(D);e.set(Er,s);const m=new Ve;m.register(Oe.WebSocket,new qe(this.configuration.webSocketFactory)),e.set(Ke,m);const h=this._register(new kr(m,s,r,i,P,k,n));e.set(Wr,h),this._register(Ur.register(h,c,n));const[f,S]=await Promise.all([this.createWorkspaceService(t,r,s,I,c,h,v,n).then(g=>(e.set(ar,g),e.set(Sr,g),g)),this.createStorageService(t,n,s).then(g=>(e.set(K,g),g))]),W=new qr(f,r);e.set(dr,W);const w=new Hr(f,P,S,v,r,f,W,c);e.set(lr,w),f.updateWorkspaceTrust(w.isWorkspaceTrusted()),this._register(w.onDidChangeTrust(()=>f.updateWorkspaceTrust(w.isWorkspaceTrusted())));const y=new Fr(h,f,d);e.set(je,y);const T=new tr(i,f,S);e.set(or,T);const B=new ur;e.set(we,B);const C=new Rr(S,B,r,n);e.set(Je,C);const F=[];F.push(new Mr(r,C,T,c,I,S,i,y,n,v)),r.options.profile&&F.push(new Ar(r,c,s,S,n,v,y));const A=new Cr(F);e.set(Br,A);try{await Promise.race([re(5e3),this.initializeUserData(A,f)])}catch(g){n.error(g)}return{serviceCollection:e,configurationService:f,logService:n}}async initializeUserData(e,t){await e.requiresInitialization()&&(M("code/willInitRequiredUserData"),await e.initializeRequiredResources(),await t.reloadLocalUserConfiguration(),M("code/didInitRequiredUserData"))}async registerIndexedDBFileSystemProviders(e,t,i,o,r){let a;const c="vscode-userdata-store",d="vscode-logs-store",l="vscode-filehandles-store";try{a=await X.create("vscode-web-db",3,[c,d,l]),this.onWillShutdownDisposables.add(z(()=>a?.close()))}catch(n){i.error("Error while creating IndexedDB",n)}if(a){const n=new N(r.scheme,a,d,!1);this.indexedDBFileSystemProviders.push(n),t.registerProvider(r.scheme,n)}else t.registerProvider(r.scheme,new x);let p;a?(p=new N(u.vscodeUserData,a,c,!0),this.indexedDBFileSystemProviders.push(p),this.registerDeveloperActions(p)):(i.info("Using in-memory user data provider"),p=new x),t.registerProvider(u.vscodeUserData,p),Pe.supported(R)&&t.registerProvider(u.file,new ye(a,l,i)),t.registerProvider(u.tmp,new x)}registerDeveloperActions(e){this._register(ue(class extends Se{constructor(){super({id:"workbench.action.resetUserData",title:fe("reset","Reset User Data"),category:ve.Developer,menu:{id:ge.CommandPalette}})}async run(i){const o=i.get(he),r=i.get(hr),a=i.get(K),c=i.get(q);if((await o.confirm({message:_("reset user data message","Would you like to reset your data (settings, keybindings, extensions, snippets and UI State) and reload?")})).confirmed)try{await e?.reset(),a instanceof J&&await a.clear()}catch(l){throw c.error(l),l}r.reload()}}))}async createStorageService(e,t,i){const o=new J(e,i,t);try{return await o.initialize(),this.onWillShutdownDisposables.add(z(()=>o.close())),o}catch(r){return E(r),t.error(r),o}}async createWorkspaceService(e,t,i,o,r,a,c,d){if(cr(e)&&sr(e.configPath))try{const n={folders:[]};await r.createFile(e.configPath,oe.fromString(JSON.stringify(n,null,"	")),{overwrite:!1})}catch{}const l=new gr([u.file,u.vscodeUserData,u.tmp],t,r),p=new vr({remoteAuthority:this.configuration.remoteAuthority,configurationCache:l},t,i,o,r,a,c,d,new Me);try{return await p.initialize(e),p}catch(n){return E(n),d.error(n),p}}async getCurrentProfile(e,t,i){const o=i.options?.profile?.name??i.profile;if(o){const r=t.profiles.find(a=>a.name===o);return r||t.createNamedProfile(o,void 0,e)}return t.getProfileForWorkspace(e)??t.defaultProfile}resolveWorkspace(){let e;return this.configuration.workspaceProvider&&(e=this.configuration.workspaceProvider.workspace),e&&nr(e)?Nr(e.workspaceUri):e&&ir(e)?_r(e.folderUri):mr}}export{Kt as BrowserMain};
