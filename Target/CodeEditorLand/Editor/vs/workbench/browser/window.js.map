{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/window.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isSafari, setFullscreen } from '../../base/browser/browser.js';\nimport { addDisposableListener, EventHelper, EventType, getActiveWindow, getWindow, getWindowById, getWindows, getWindowsCount, windowOpenNoOpener, windowOpenPopup, windowOpenWithSuccess } from '../../base/browser/dom.js';\nimport { DomEmitter } from '../../base/browser/event.js';\nimport { HidDeviceData, requestHidDevice, requestSerialPort, requestUsbDevice, SerialPortData, UsbDeviceData } from '../../base/browser/deviceAccess.js';\nimport { timeout } from '../../base/common/async.js';\nimport { Event } from '../../base/common/event.js';\nimport { Disposable, IDisposable, dispose, toDisposable } from '../../base/common/lifecycle.js';\nimport { matchesScheme, Schemas } from '../../base/common/network.js';\nimport { isIOS, isMacintosh } from '../../base/common/platform.js';\nimport Severity from '../../base/common/severity.js';\nimport { URI } from '../../base/common/uri.js';\nimport { localize } from '../../nls.js';\nimport { CommandsRegistry } from '../../platform/commands/common/commands.js';\nimport { IDialogService, IPromptButton } from '../../platform/dialogs/common/dialogs.js';\nimport { IInstantiationService, ServicesAccessor } from '../../platform/instantiation/common/instantiation.js';\nimport { ILabelService } from '../../platform/label/common/label.js';\nimport { IOpenerService } from '../../platform/opener/common/opener.js';\nimport { IProductService } from '../../platform/product/common/productService.js';\nimport { IBrowserWorkbenchEnvironmentService } from '../services/environment/browser/environmentService.js';\nimport { IWorkbenchLayoutService } from '../services/layout/browser/layoutService.js';\nimport { BrowserLifecycleService } from '../services/lifecycle/browser/lifecycleService.js';\nimport { ILifecycleService, ShutdownReason } from '../services/lifecycle/common/lifecycle.js';\nimport { IHostService } from '../services/host/browser/host.js';\nimport { registerWindowDriver } from '../services/driver/browser/driver.js';\nimport { CodeWindow, isAuxiliaryWindow, mainWindow } from '../../base/browser/window.js';\nimport { createSingleCallFunction } from '../../base/common/functional.js';\nimport { IConfigurationService } from '../../platform/configuration/common/configuration.js';\nimport { IWorkbenchEnvironmentService } from '../services/environment/common/environmentService.js';\n\nexport abstract class BaseWindow extends Disposable {\n\n\tprivate static TIMEOUT_HANDLES = Number.MIN_SAFE_INTEGER; // try to not compete with the IDs of native `setTimeout`\n\tprivate static readonly TIMEOUT_DISPOSABLES = new Map<number, Set<IDisposable>>();\n\n\tconstructor(\n\t\ttargetWindow: CodeWindow,\n\t\tdom = { getWindowsCount, getWindows }, /* for testing */\n\t\t@IHostService protected readonly hostService: IHostService,\n\t\t@IWorkbenchEnvironmentService protected readonly environmentService: IWorkbenchEnvironmentService\n\t) {\n\t\tsuper();\n\n\t\tthis.enableWindowFocusOnElementFocus(targetWindow);\n\t\tthis.enableMultiWindowAwareTimeout(targetWindow, dom);\n\n\t\tthis.registerFullScreenListeners(targetWindow.vscodeWindowId);\n\t}\n\n\t//#region focus handling in multi-window applications\n\n\tprotected enableWindowFocusOnElementFocus(targetWindow: CodeWindow): void {\n\t\tconst originalFocus = targetWindow.HTMLElement.prototype.focus;\n\n\t\tconst that = this;\n\t\ttargetWindow.HTMLElement.prototype.focus = function (this: HTMLElement, options?: FocusOptions | undefined): void {\n\n\t\t\t// Ensure the window the element belongs to is focused\n\t\t\t// in scenarios where auxiliary windows are present\n\t\t\tthat.onElementFocus(getWindow(this));\n\n\t\t\t// Pass to original focus() method\n\t\t\toriginalFocus.apply(this, [options]);\n\t\t};\n\t}\n\n\tprivate onElementFocus(targetWindow: CodeWindow): void {\n\t\tconst activeWindow = getActiveWindow();\n\t\tif (activeWindow !== targetWindow && activeWindow.document.hasFocus()) {\n\n\t\t\t// Call original focus()\n\t\t\ttargetWindow.focus();\n\n\t\t\t// In Electron, `window.focus()` fails to bring the window\n\t\t\t// to the front if multiple windows exist in the same process\n\t\t\t// group (floating windows). As such, we ask the host service\n\t\t\t// to focus the window which can take care of bringin the\n\t\t\t// window to the front.\n\t\t\t//\n\t\t\t// To minimise disruption by bringing windows to the front\n\t\t\t// by accident, we only do this if the window is not already\n\t\t\t// focused and the active window is not the target window\n\t\t\t// but has focus. This is an indication that multiple windows\n\t\t\t// are opened in the same process group while the target window\n\t\t\t// is not focused.\n\n\t\t\tif (\n\t\t\t\t!this.environmentService.extensionTestsLocationURI &&\n\t\t\t\t!targetWindow.document.hasFocus()\n\t\t\t) {\n\t\t\t\tthis.hostService.focus(targetWindow);\n\t\t\t}\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region timeout handling in multi-window applications\n\n\tprotected enableMultiWindowAwareTimeout(targetWindow: Window, dom = { getWindowsCount, getWindows }): void {\n\n\t\t// Override `setTimeout` and `clearTimeout` on the provided window to make\n\t\t// sure timeouts are dispatched to all opened windows. Some browsers may decide\n\t\t// to throttle timeouts in minimized windows, so with this we can ensure the\n\t\t// timeout is scheduled without being throttled (unless all windows are minimized).\n\n\t\tconst originalSetTimeout = targetWindow.setTimeout;\n\t\tObject.defineProperty(targetWindow, 'vscodeOriginalSetTimeout', { get: () => originalSetTimeout });\n\n\t\tconst originalClearTimeout = targetWindow.clearTimeout;\n\t\tObject.defineProperty(targetWindow, 'vscodeOriginalClearTimeout', { get: () => originalClearTimeout });\n\n\t\ttargetWindow.setTimeout = function (this: unknown, handler: TimerHandler, timeout = 0, ...args: unknown[]): number {\n\t\t\tif (dom.getWindowsCount() === 1 || typeof handler === 'string' || timeout === 0 /* immediates are never throttled */) {\n\t\t\t\treturn originalSetTimeout.apply(this, [handler, timeout, ...args]);\n\t\t\t}\n\n\t\t\tconst timeoutDisposables = new Set<IDisposable>();\n\t\t\tconst timeoutHandle = BaseWindow.TIMEOUT_HANDLES++;\n\t\t\tBaseWindow.TIMEOUT_DISPOSABLES.set(timeoutHandle, timeoutDisposables);\n\n\t\t\tconst handlerFn = createSingleCallFunction(handler, () => {\n\t\t\t\tdispose(timeoutDisposables);\n\t\t\t\tBaseWindow.TIMEOUT_DISPOSABLES.delete(timeoutHandle);\n\t\t\t});\n\n\t\t\tfor (const { window, disposables } of dom.getWindows()) {\n\t\t\t\tif (isAuxiliaryWindow(window) && window.document.visibilityState === 'hidden') {\n\t\t\t\t\tcontinue; // skip over hidden windows (but never over main window)\n\t\t\t\t}\n\n\t\t\t\t// we track didClear in case the browser does not properly clear the timeout\n\t\t\t\t// this can happen for timeouts on unfocused windows\n\t\t\t\tlet didClear = false;\n\n\t\t\t\tconst handle = (window as any).vscodeOriginalSetTimeout.apply(this, [(...args: unknown[]) => {\n\t\t\t\t\tif (didClear) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\thandlerFn(...args);\n\t\t\t\t}, timeout, ...args]);\n\n\t\t\t\tconst timeoutDisposable = toDisposable(() => {\n\t\t\t\t\tdidClear = true;\n\t\t\t\t\t(window as any).vscodeOriginalClearTimeout(handle);\n\t\t\t\t\ttimeoutDisposables.delete(timeoutDisposable);\n\t\t\t\t});\n\n\t\t\t\tdisposables.add(timeoutDisposable);\n\t\t\t\ttimeoutDisposables.add(timeoutDisposable);\n\t\t\t}\n\n\t\t\treturn timeoutHandle;\n\t\t};\n\n\t\ttargetWindow.clearTimeout = function (this: unknown, timeoutHandle: number | undefined): void {\n\t\t\tconst timeoutDisposables = typeof timeoutHandle === 'number' ? BaseWindow.TIMEOUT_DISPOSABLES.get(timeoutHandle) : undefined;\n\t\t\tif (timeoutDisposables) {\n\t\t\t\tdispose(timeoutDisposables);\n\t\t\t\tBaseWindow.TIMEOUT_DISPOSABLES.delete(timeoutHandle!);\n\t\t\t} else {\n\t\t\t\toriginalClearTimeout.apply(this, [timeoutHandle]);\n\t\t\t}\n\t\t};\n\t}\n\n\t//#endregion\n\n\tprivate registerFullScreenListeners(targetWindowId: number): void {\n\t\tthis._register(this.hostService.onDidChangeFullScreen(({ windowId, fullscreen }) => {\n\t\t\tif (windowId === targetWindowId) {\n\t\t\t\tconst targetWindow = getWindowById(targetWindowId);\n\t\t\t\tif (targetWindow) {\n\t\t\t\t\tsetFullscreen(fullscreen, targetWindow.window);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\t//#region Confirm on Shutdown\n\n\tstatic async confirmOnShutdown(accessor: ServicesAccessor, reason: ShutdownReason): Promise<boolean> {\n\t\tconst dialogService = accessor.get(IDialogService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst message = reason === ShutdownReason.QUIT ?\n\t\t\t(isMacintosh ? localize('quitMessageMac', \"Are you sure you want to quit?\") : localize('quitMessage', \"Are you sure you want to exit?\")) :\n\t\t\tlocalize('closeWindowMessage', \"Are you sure you want to close the window?\");\n\t\tconst primaryButton = reason === ShutdownReason.QUIT ?\n\t\t\t(isMacintosh ? localize({ key: 'quitButtonLabel', comment: ['&& denotes a mnemonic'] }, \"&&Quit\") : localize({ key: 'exitButtonLabel', comment: ['&& denotes a mnemonic'] }, \"&&Exit\")) :\n\t\t\tlocalize({ key: 'closeWindowButtonLabel', comment: ['&& denotes a mnemonic'] }, \"&&Close Window\");\n\n\t\tconst res = await dialogService.confirm({\n\t\t\tmessage,\n\t\t\tprimaryButton,\n\t\t\tcheckbox: {\n\t\t\t\tlabel: localize('doNotAskAgain', \"Do not ask me again\")\n\t\t\t}\n\t\t});\n\n\t\t// Update setting if checkbox checked\n\t\tif (res.confirmed && res.checkboxChecked) {\n\t\t\tawait configurationService.updateValue('window.confirmBeforeClose', 'never');\n\t\t}\n\n\t\treturn res.confirmed;\n\t}\n\n\t//#endregion\n}\n\nexport class BrowserWindow extends BaseWindow {\n\n\tconstructor(\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@ILifecycleService private readonly lifecycleService: BrowserLifecycleService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IBrowserWorkbenchEnvironmentService private readonly browserEnvironmentService: IBrowserWorkbenchEnvironmentService,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IHostService hostService: IHostService\n\t) {\n\t\tsuper(mainWindow, undefined, hostService, browserEnvironmentService);\n\n\t\tthis.registerListeners();\n\t\tthis.create();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Lifecycle\n\t\tthis._register(this.lifecycleService.onWillShutdown(() => this.onWillShutdown()));\n\n\t\t// Layout\n\t\tconst viewport = isIOS && mainWindow.visualViewport ? mainWindow.visualViewport /** Visual viewport */ : mainWindow /** Layout viewport */;\n\t\tthis._register(addDisposableListener(viewport, EventType.RESIZE, () => {\n\t\t\tthis.layoutService.layout();\n\n\t\t\t// Sometimes the keyboard appearing scrolls the whole workbench out of view, as a workaround scroll back into view #121206\n\t\t\tif (isIOS) {\n\t\t\t\tmainWindow.scrollTo(0, 0);\n\t\t\t}\n\t\t}));\n\n\t\t// Prevent the back/forward gestures in macOS\n\t\tthis._register(addDisposableListener(this.layoutService.mainContainer, EventType.WHEEL, e => e.preventDefault(), { passive: false }));\n\n\t\t// Prevent native context menus in web\n\t\tthis._register(addDisposableListener(this.layoutService.mainContainer, EventType.CONTEXT_MENU, e => EventHelper.stop(e, true)));\n\n\t\t// Prevent default navigation on drop\n\t\tthis._register(addDisposableListener(this.layoutService.mainContainer, EventType.DROP, e => EventHelper.stop(e, true)));\n\t}\n\n\tprivate onWillShutdown(): void {\n\n\t\t// Try to detect some user interaction with the workbench\n\t\t// when shutdown has happened to not show the dialog e.g.\n\t\t// when navigation takes a longer time.\n\t\tEvent.toPromise(Event.any(\n\t\t\tEvent.once(new DomEmitter(mainWindow.document.body, EventType.KEY_DOWN, true).event),\n\t\t\tEvent.once(new DomEmitter(mainWindow.document.body, EventType.MOUSE_DOWN, true).event)\n\t\t)).then(async () => {\n\n\t\t\t// Delay the dialog in case the user interacted\n\t\t\t// with the page before it transitioned away\n\t\t\tawait timeout(3000);\n\n\t\t\t// This should normally not happen, but if for some reason\n\t\t\t// the workbench was shutdown while the page is still there,\n\t\t\t// inform the user that only a reload can bring back a working\n\t\t\t// state.\n\t\t\tawait this.dialogService.prompt({\n\t\t\t\ttype: Severity.Error,\n\t\t\t\tmessage: localize('shutdownError', \"An unexpected error occurred that requires a reload of this page.\"),\n\t\t\t\tdetail: localize('shutdownErrorDetail', \"The workbench was unexpectedly disposed while running.\"),\n\t\t\t\tbuttons: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: localize({ key: 'reload', comment: ['&& denotes a mnemonic'] }, \"&&Reload\"),\n\t\t\t\t\t\trun: () => mainWindow.location.reload() // do not use any services at this point since they are likely not functional at this point\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate create(): void {\n\n\t\t// Handle open calls\n\t\tthis.setupOpenHandlers();\n\n\t\t// Label formatting\n\t\tthis.registerLabelFormatters();\n\n\t\t// Commands\n\t\tthis.registerCommands();\n\n\t\t// Smoke Test Driver\n\t\tthis.setupDriver();\n\t}\n\n\tprivate setupDriver(): void {\n\t\tif (this.environmentService.enableSmokeTestDriver) {\n\t\t\tregisterWindowDriver(this.instantiationService);\n\t\t}\n\t}\n\n\tprivate setupOpenHandlers(): void {\n\n\t\t// We need to ignore the `beforeunload` event while\n\t\t// we handle external links to open specifically for\n\t\t// the case of application protocols that e.g. invoke\n\t\t// vscode itself. We do not want to open these links\n\t\t// in a new window because that would leave a blank\n\t\t// window to the user, but using `window.location.href`\n\t\t// will trigger the `beforeunload`.\n\t\tthis.openerService.setDefaultExternalOpener({\n\t\t\topenExternal: async (href: string) => {\n\t\t\t\tlet isAllowedOpener = false;\n\t\t\t\tif (this.browserEnvironmentService.options?.openerAllowedExternalUrlPrefixes) {\n\t\t\t\t\tfor (const trustedPopupPrefix of this.browserEnvironmentService.options.openerAllowedExternalUrlPrefixes) {\n\t\t\t\t\t\tif (href.startsWith(trustedPopupPrefix)) {\n\t\t\t\t\t\t\tisAllowedOpener = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP(s): open in new window and deal with potential popup blockers\n\t\t\t\tif (matchesScheme(href, Schemas.http) || matchesScheme(href, Schemas.https)) {\n\t\t\t\t\tif (isSafari) {\n\t\t\t\t\t\tconst opened = windowOpenWithSuccess(href, !isAllowedOpener);\n\t\t\t\t\t\tif (!opened) {\n\t\t\t\t\t\t\tawait this.dialogService.prompt({\n\t\t\t\t\t\t\t\ttype: Severity.Warning,\n\t\t\t\t\t\t\t\tmessage: localize('unableToOpenExternal', \"The browser interrupted the opening of a new tab or window. Press 'Open' to open it anyway.\"),\n\t\t\t\t\t\t\t\tdetail: href,\n\t\t\t\t\t\t\t\tbuttons: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tlabel: localize({ key: 'open', comment: ['&& denotes a mnemonic'] }, \"&&Open\"),\n\t\t\t\t\t\t\t\t\t\trun: () => isAllowedOpener ? windowOpenPopup(href) : windowOpenNoOpener(href)\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tlabel: localize({ key: 'learnMore', comment: ['&& denotes a mnemonic'] }, \"&&Learn More\"),\n\t\t\t\t\t\t\t\t\t\trun: () => this.openerService.open(URI.parse('https://aka.ms/allow-vscode-popup'))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tcancelButton: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisAllowedOpener\n\t\t\t\t\t\t\t? windowOpenPopup(href)\n\t\t\t\t\t\t\t: windowOpenNoOpener(href);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Anything else: set location to trigger protocol handler in the browser\n\t\t\t\t// but make sure to signal this as an expected unload and disable unload\n\t\t\t\t// handling explicitly to prevent the workbench from going down.\n\t\t\t\telse {\n\t\t\t\t\tconst invokeProtocolHandler = () => {\n\t\t\t\t\t\tthis.lifecycleService.withExpectedShutdown({ disableShutdownHandling: true }, () => mainWindow.location.href = href);\n\t\t\t\t\t};\n\n\t\t\t\t\tinvokeProtocolHandler();\n\n\t\t\t\t\tconst showProtocolUrlOpenedDialog = async () => {\n\t\t\t\t\t\tconst { downloadUrl } = this.productService;\n\t\t\t\t\t\tlet detail: string;\n\n\t\t\t\t\t\tconst buttons: IPromptButton<void>[] = [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: localize({ key: 'openExternalDialogButtonRetry.v2', comment: ['&& denotes a mnemonic'] }, \"&&Try Again\"),\n\t\t\t\t\t\t\t\trun: () => invokeProtocolHandler()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t];\n\n\t\t\t\t\t\tif (downloadUrl !== undefined) {\n\t\t\t\t\t\t\tdetail = localize(\n\t\t\t\t\t\t\t\t'openExternalDialogDetail.v2',\n\t\t\t\t\t\t\t\t\"We launched {0} on your computer.\\n\\nIf {1} did not launch, try again or install it below.\",\n\t\t\t\t\t\t\t\tthis.productService.nameLong,\n\t\t\t\t\t\t\t\tthis.productService.nameLong\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbuttons.push({\n\t\t\t\t\t\t\t\tlabel: localize({ key: 'openExternalDialogButtonInstall.v3', comment: ['&& denotes a mnemonic'] }, \"&&Install\"),\n\t\t\t\t\t\t\t\trun: async () => {\n\t\t\t\t\t\t\t\t\tawait this.openerService.open(URI.parse(downloadUrl));\n\n\t\t\t\t\t\t\t\t\t// Re-show the dialog so that the user can come back after installing and try again\n\t\t\t\t\t\t\t\t\tshowProtocolUrlOpenedDialog();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdetail = localize(\n\t\t\t\t\t\t\t\t'openExternalDialogDetailNoInstall',\n\t\t\t\t\t\t\t\t\"We launched {0} on your computer.\\n\\nIf {1} did not launch, try again below.\",\n\t\t\t\t\t\t\t\tthis.productService.nameLong,\n\t\t\t\t\t\t\t\tthis.productService.nameLong\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// While this dialog shows, closing the tab will not display a confirmation dialog\n\t\t\t\t\t\t// to avoid showing the user two dialogs at once\n\t\t\t\t\t\tawait this.hostService.withExpectedShutdown(() => this.dialogService.prompt({\n\t\t\t\t\t\t\ttype: Severity.Info,\n\t\t\t\t\t\t\tmessage: localize('openExternalDialogTitle', \"All done. You can close this tab now.\"),\n\t\t\t\t\t\t\tdetail,\n\t\t\t\t\t\t\tbuttons,\n\t\t\t\t\t\t\tcancelButton: true\n\t\t\t\t\t\t}));\n\t\t\t\t\t};\n\n\t\t\t\t\t// We cannot know whether the protocol handler succeeded.\n\t\t\t\t\t// Display guidance in case it did not, e.g. the app is not installed locally.\n\t\t\t\t\tif (matchesScheme(href, this.productService.urlProtocol)) {\n\t\t\t\t\t\tawait showProtocolUrlOpenedDialog();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate registerLabelFormatters(): void {\n\t\tthis._register(this.labelService.registerFormatter({\n\t\t\tscheme: Schemas.vscodeUserData,\n\t\t\tpriority: true,\n\t\t\tformatting: {\n\t\t\t\tlabel: '(Settings) ${path}',\n\t\t\t\tseparator: '/',\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerCommands(): void {\n\n\t\t// Allow extensions to request USB devices in Web\n\t\tCommandsRegistry.registerCommand('workbench.experimental.requestUsbDevice', async (_accessor: ServicesAccessor, options?: { filters?: unknown[] }): Promise<UsbDeviceData | undefined> => {\n\t\t\treturn requestUsbDevice(options);\n\t\t});\n\n\t\t// Allow extensions to request Serial devices in Web\n\t\tCommandsRegistry.registerCommand('workbench.experimental.requestSerialPort', async (_accessor: ServicesAccessor, options?: { filters?: unknown[] }): Promise<SerialPortData | undefined> => {\n\t\t\treturn requestSerialPort(options);\n\t\t});\n\n\t\t// Allow extensions to request HID devices in Web\n\t\tCommandsRegistry.registerCommand('workbench.experimental.requestHidDevice', async (_accessor: ServicesAccessor, options?: { filters?: unknown[] }): Promise<HidDeviceData | undefined> => {\n\t\t\treturn requestHidDevice(options);\n\t\t});\n\t}\n}\n"],
  "mappings": "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",
  "names": ["timeout", "args"]
}
