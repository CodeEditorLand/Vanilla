var m=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var u=(r,i,e,o)=>{for(var t=o>1?void 0:o?I(i,e):i,d=r.length-1,n;d>=0;d--)(n=r[d])&&(t=(o?n(i,e,t):n(t))||t);return o&&t&&m(i,e,t),t},a=(r,i)=>(e,o)=>i(e,o,r);import{Disposable as l}from"../../base/common/lifecycle.js";import{getIEditor as f}from"../../editor/browser/editorBrowser.js";import{localize as E}from"../../nls.js";import{ContextKeyExpr as p,RawContextKey as y}from"../../platform/contextkey/common/contextkey.js";import{IKeybindingService as v}from"../../platform/keybinding/common/keybinding.js";import{IQuickInputService as S}from"../../platform/quickinput/common/quickInput.js";import{IEditorGroupsService as h}from"../services/editor/common/editorGroupsService.js";import{IEditorService as g}from"../services/editor/common/editorService.js";const c="inQuickOpen",U=new y(c,!1,E("inQuickOpen","Whether keyboard focus is inside the quick open control")),k=p.has(c),w="inFilesPicker",O=p.and(k,p.has(w));function Q(r,i){return e=>{const o=e.get(v),t=e.get(S),n={keybindings:o.lookupKeybindings(r)};t.navigate(!!i,n)}}let s=class extends l{constructor(e,o){super();this.editorService=e;this.editorGroupsService=o}_editorViewState=void 0;openedTransientEditors=new Set;set(){if(this._editorViewState)return;const e=this.editorService.activeEditorPane;e&&(this._editorViewState={group:e.group,editor:e.input,state:f(e.getControl())?.saveViewState()??void 0})}async openTransientEditor(e,o){e.options={...e.options,transient:!0};const t=await this.editorService.openEditor(e,o);return t?.input&&t.input!==this._editorViewState?.editor&&t.group.isTransient(t.input)&&this.openedTransientEditors.add(t.input),t}async restore(){if(this._editorViewState){for(const e of this.openedTransientEditors)if(!e.isDirty())for(const o of this.editorGroupsService.groups)o.isTransient(e)&&await o.closeEditor(e,{preserveFocus:!0});await this._editorViewState.group.openEditor(this._editorViewState.editor,{viewState:this._editorViewState.state,preserveFocus:!0}),this.reset()}}reset(){this._editorViewState=void 0,this.openedTransientEditors.clear()}dispose(){super.dispose(),this.reset()}};s=u([a(0,g),a(1,h)],s);export{U as InQuickPickContextKey,s as PickerEditorState,O as defaultQuickAccessContext,w as defaultQuickAccessContextKeyValue,Q as getQuickNavigateHandler,k as inQuickPickContext,c as inQuickPickContextKeyValue};
