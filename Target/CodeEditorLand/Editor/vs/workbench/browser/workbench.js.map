{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/workbench.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './style.js';\nimport { localize } from '../../nls.js';\nimport { runWhenWindowIdle } from '../../base/browser/dom.js';\nimport { Event, Emitter, setGlobalLeakWarningThreshold } from '../../base/common/event.js';\nimport { RunOnceScheduler, timeout } from '../../base/common/async.js';\nimport { isFirefox, isSafari, isChrome } from '../../base/browser/browser.js';\nimport { mark } from '../../base/common/performance.js';\nimport { onUnexpectedError, setUnexpectedErrorHandler } from '../../base/common/errors.js';\nimport { Registry } from '../../platform/registry/common/platform.js';\nimport { isWindows, isLinux, isWeb, isNative, isMacintosh } from '../../base/common/platform.js';\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions } from '../common/contributions.js';\nimport { IEditorFactoryRegistry, EditorExtensions } from '../common/editor.js';\nimport { getSingletonServiceDescriptors } from '../../platform/instantiation/common/extensions.js';\nimport { Position, Parts, IWorkbenchLayoutService, positionToString } from '../services/layout/browser/layoutService.js';\nimport { IStorageService, WillSaveStateReason, StorageScope, StorageTarget } from '../../platform/storage/common/storage.js';\nimport { IConfigurationChangeEvent, IConfigurationService } from '../../platform/configuration/common/configuration.js';\nimport { IInstantiationService } from '../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../platform/instantiation/common/serviceCollection.js';\nimport { LifecyclePhase, ILifecycleService, WillShutdownEvent } from '../services/lifecycle/common/lifecycle.js';\nimport { INotificationService } from '../../platform/notification/common/notification.js';\nimport { NotificationService } from '../services/notification/common/notificationService.js';\nimport { NotificationsCenter } from './parts/notifications/notificationsCenter.js';\nimport { NotificationsAlerts } from './parts/notifications/notificationsAlerts.js';\nimport { NotificationsStatus } from './parts/notifications/notificationsStatus.js';\nimport { NotificationsTelemetry } from './parts/notifications/notificationsTelemetry.js';\nimport { registerNotificationCommands } from './parts/notifications/notificationsCommands.js';\nimport { NotificationsToasts } from './parts/notifications/notificationsToasts.js';\nimport { setARIAContainer } from '../../base/browser/ui/aria/aria.js';\nimport { FontMeasurements } from '../../editor/browser/config/fontMeasurements.js';\nimport { BareFontInfo } from '../../editor/common/config/fontInfo.js';\nimport { ILogService } from '../../platform/log/common/log.js';\nimport { toErrorMessage } from '../../base/common/errorMessage.js';\nimport { WorkbenchContextKeysHandler } from './contextkeys.js';\nimport { coalesce } from '../../base/common/arrays.js';\nimport { InstantiationService } from '../../platform/instantiation/common/instantiationService.js';\nimport { Layout } from './layout.js';\nimport { IHostService } from '../services/host/browser/host.js';\nimport { IDialogService } from '../../platform/dialogs/common/dialogs.js';\nimport { mainWindow } from '../../base/browser/window.js';\nimport { PixelRatio } from '../../base/browser/pixelRatio.js';\nimport { IHoverService, WorkbenchHoverDelegate } from '../../platform/hover/browser/hover.js';\nimport { setHoverDelegateFactory } from '../../base/browser/ui/hover/hoverDelegateFactory.js';\nimport { setBaseLayerHoverDelegate } from '../../base/browser/ui/hover/hoverDelegate2.js';\nimport { AccessibilityProgressSignalScheduler } from '../../platform/accessibilitySignal/browser/progressAccessibilitySignalScheduler.js';\nimport { setProgressAcccessibilitySignalScheduler } from '../../base/browser/ui/progressbar/progressAccessibilitySignal.js';\nimport { AccessibleViewRegistry } from '../../platform/accessibility/browser/accessibleViewRegistry.js';\nimport { NotificationAccessibleView } from './parts/notifications/notificationAccessibleView.js';\nimport { isESM } from '../../base/common/amd.js';\n\nexport interface IWorkbenchOptions {\n\n\t/**\n\t * Extra classes to be added to the workbench container.\n\t */\n\textraClasses?: string[];\n}\n\nexport class Workbench extends Layout {\n\n\tprivate readonly _onWillShutdown = this._register(new Emitter<WillShutdownEvent>());\n\treadonly onWillShutdown = this._onWillShutdown.event;\n\n\tprivate readonly _onDidShutdown = this._register(new Emitter<void>());\n\treadonly onDidShutdown = this._onDidShutdown.event;\n\n\tconstructor(\n\t\tparent: HTMLElement,\n\t\tprivate readonly options: IWorkbenchOptions | undefined,\n\t\tprivate readonly serviceCollection: ServiceCollection,\n\t\tlogService: ILogService\n\t) {\n\t\tsuper(parent);\n\n\t\t// Perf: measure workbench startup time\n\t\tmark('code/willStartWorkbench');\n\n\t\tthis.registerErrorHandler(logService);\n\t}\n\n\tprivate registerErrorHandler(logService: ILogService): void {\n\n\t\t// Listen on unhandled rejection events\n\t\t// Note: intentionally not registered as disposable to handle\n\t\t//       errors that can occur during shutdown phase.\n\t\tmainWindow.addEventListener('unhandledrejection', (event) => {\n\n\t\t\t// See https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n\t\t\tonUnexpectedError(event.reason);\n\n\t\t\t// Prevent the printing of this event to the console\n\t\t\tevent.preventDefault();\n\t\t});\n\n\t\t// Install handler for unexpected errors\n\t\tsetUnexpectedErrorHandler(error => this.handleUnexpectedError(error, logService));\n\n\t\t// Inform user about loading issues from the loader\n\t\tif (!isESM && typeof mainWindow.require?.config === 'function') {\n\t\t\tinterface AnnotatedLoadingError extends Error {\n\t\t\t\tphase: 'loading';\n\t\t\t\tmoduleId: string;\n\t\t\t\tneededBy: string[];\n\t\t\t}\n\t\t\tinterface AnnotatedFactoryError extends Error {\n\t\t\t\tphase: 'factory';\n\t\t\t\tmoduleId: string;\n\t\t\t}\n\t\t\tinterface AnnotatedValidationError extends Error {\n\t\t\t\tphase: 'configuration';\n\t\t\t}\n\t\t\ttype AnnotatedError = AnnotatedLoadingError | AnnotatedFactoryError | AnnotatedValidationError;\n\t\t\tmainWindow.require.config({\n\t\t\t\tonError: (err: AnnotatedError) => {\n\t\t\t\t\tif (err.phase === 'loading') {\n\t\t\t\t\t\tonUnexpectedError(new Error(localize('loaderErrorNative', \"Failed to load a required file. Please restart the application to try again. Details: {0}\", JSON.stringify(err))));\n\t\t\t\t\t}\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate previousUnexpectedError: { message: string | undefined; time: number } = { message: undefined, time: 0 };\n\tprivate handleUnexpectedError(error: unknown, logService: ILogService): void {\n\t\tconst message = toErrorMessage(error, true);\n\t\tif (!message) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst now = Date.now();\n\t\tif (message === this.previousUnexpectedError.message && now - this.previousUnexpectedError.time <= 1000) {\n\t\t\treturn; // Return if error message identical to previous and shorter than 1 second\n\t\t}\n\n\t\tthis.previousUnexpectedError.time = now;\n\t\tthis.previousUnexpectedError.message = message;\n\n\t\t// Log it\n\t\tlogService.error(message);\n\t}\n\n\tstartup(): IInstantiationService {\n\t\ttry {\n\n\t\t\t// Configure emitter leak warning threshold\n\t\t\tthis._register(setGlobalLeakWarningThreshold(175));\n\n\t\t\t// Services\n\t\t\tconst instantiationService = this.initServices(this.serviceCollection);\n\n\t\t\tinstantiationService.invokeFunction(accessor => {\n\t\t\t\tconst lifecycleService = accessor.get(ILifecycleService);\n\t\t\t\tconst storageService = accessor.get(IStorageService);\n\t\t\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\t\t\tconst hostService = accessor.get(IHostService);\n\t\t\t\tconst hoverService = accessor.get(IHoverService);\n\t\t\t\tconst dialogService = accessor.get(IDialogService);\n\t\t\t\tconst notificationService = accessor.get(INotificationService) as NotificationService;\n\n\t\t\t\t// Default Hover Delegate must be registered before creating any workbench/layout components\n\t\t\t\t// as these possibly will use the default hover delegate\n\t\t\t\tsetHoverDelegateFactory((placement, enableInstantHover) => instantiationService.createInstance(WorkbenchHoverDelegate, placement, enableInstantHover, {}));\n\t\t\t\tsetBaseLayerHoverDelegate(hoverService);\n\n\t\t\t\t// Layout\n\t\t\t\tthis.initLayout(accessor);\n\n\t\t\t\t// Registries\n\t\t\t\tRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).start(accessor);\n\t\t\t\tRegistry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory).start(accessor);\n\n\t\t\t\t// Context Keys\n\t\t\t\tthis._register(instantiationService.createInstance(WorkbenchContextKeysHandler));\n\n\t\t\t\t// Register Listeners\n\t\t\t\tthis.registerListeners(lifecycleService, storageService, configurationService, hostService, dialogService);\n\n\t\t\t\t// Render Workbench\n\t\t\t\tthis.renderWorkbench(instantiationService, notificationService, storageService, configurationService);\n\n\t\t\t\t// Workbench Layout\n\t\t\t\tthis.createWorkbenchLayout();\n\n\t\t\t\t// Layout\n\t\t\t\tthis.layout();\n\n\t\t\t\t// Restore\n\t\t\t\tthis.restore(lifecycleService);\n\t\t\t});\n\n\t\t\treturn instantiationService;\n\t\t} catch (error) {\n\t\t\tonUnexpectedError(error);\n\n\t\t\tthrow error; // rethrow because this is a critical issue we cannot handle properly here\n\t\t}\n\t}\n\n\tprivate initServices(serviceCollection: ServiceCollection): IInstantiationService {\n\n\t\t// Layout Service\n\t\tserviceCollection.set(IWorkbenchLayoutService, this);\n\n\t\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t\t//\n\t\t// NOTE: Please do NOT register services here. Use `registerSingleton()`\n\t\t//       from `workbench.common.main.ts` if the service is shared between\n\t\t//       desktop and web or `workbench.desktop.main.ts` if the service\n\t\t//       is desktop only.\n\t\t//\n\t\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\t\t// All Contributed Services\n\t\tconst contributedServices = getSingletonServiceDescriptors();\n\t\tfor (const [id, descriptor] of contributedServices) {\n\t\t\tserviceCollection.set(id, descriptor);\n\t\t}\n\n\t\tconst instantiationService = new InstantiationService(serviceCollection, true);\n\n\t\t// Wrap up\n\t\tinstantiationService.invokeFunction(accessor => {\n\t\t\tconst lifecycleService = accessor.get(ILifecycleService);\n\n\t\t\t// TODO@Sandeep debt around cyclic dependencies\n\t\t\tconst configurationService = accessor.get(IConfigurationService) as any;\n\t\t\tif (typeof configurationService.acquireInstantiationService === 'function') {\n\t\t\t\tconfigurationService.acquireInstantiationService(instantiationService);\n\t\t\t}\n\n\t\t\t// Signal to lifecycle that services are set\n\t\t\tlifecycleService.phase = LifecyclePhase.Ready;\n\t\t});\n\n\t\treturn instantiationService;\n\t}\n\n\tprivate registerListeners(lifecycleService: ILifecycleService, storageService: IStorageService, configurationService: IConfigurationService, hostService: IHostService, dialogService: IDialogService): void {\n\n\t\t// Configuration changes\n\t\tthis._register(configurationService.onDidChangeConfiguration(e => this.updateFontAliasing(e, configurationService)));\n\n\t\t// Font Info\n\t\tif (isNative) {\n\t\t\tthis._register(storageService.onWillSaveState(e => {\n\t\t\t\tif (e.reason === WillSaveStateReason.SHUTDOWN) {\n\t\t\t\t\tthis.storeFontInfo(storageService);\n\t\t\t\t}\n\t\t\t}));\n\t\t} else {\n\t\t\tthis._register(lifecycleService.onWillShutdown(() => this.storeFontInfo(storageService)));\n\t\t}\n\n\t\t// Lifecycle\n\t\tthis._register(lifecycleService.onWillShutdown(event => this._onWillShutdown.fire(event)));\n\t\tthis._register(lifecycleService.onDidShutdown(() => {\n\t\t\tthis._onDidShutdown.fire();\n\t\t\tthis.dispose();\n\t\t}));\n\n\t\t// In some environments we do not get enough time to persist state on shutdown.\n\t\t// In other cases, VSCode might crash, so we periodically save state to reduce\n\t\t// the chance of loosing any state.\n\t\t// The window loosing focus is a good indication that the user has stopped working\n\t\t// in that window so we pick that at a time to collect state.\n\t\tthis._register(hostService.onDidChangeFocus(focus => {\n\t\t\tif (!focus) {\n\t\t\t\tstorageService.flush();\n\t\t\t}\n\t\t}));\n\n\t\t// Dialogs showing/hiding\n\t\tthis._register(dialogService.onWillShowDialog(() => this.mainContainer.classList.add('modal-dialog-visible')));\n\t\tthis._register(dialogService.onDidShowDialog(() => this.mainContainer.classList.remove('modal-dialog-visible')));\n\t}\n\n\tprivate fontAliasing: 'default' | 'antialiased' | 'none' | 'auto' | undefined;\n\tprivate updateFontAliasing(e: IConfigurationChangeEvent | undefined, configurationService: IConfigurationService) {\n\t\tif (!isMacintosh) {\n\t\t\treturn; // macOS only\n\t\t}\n\n\t\tif (e && !e.affectsConfiguration('workbench.fontAliasing')) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst aliasing = configurationService.getValue<'default' | 'antialiased' | 'none' | 'auto'>('workbench.fontAliasing');\n\t\tif (this.fontAliasing === aliasing) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.fontAliasing = aliasing;\n\n\t\t// Remove all\n\t\tconst fontAliasingValues: (typeof aliasing)[] = ['antialiased', 'none', 'auto'];\n\t\tthis.mainContainer.classList.remove(...fontAliasingValues.map(value => `monaco-font-aliasing-${value}`));\n\n\t\t// Add specific\n\t\tif (fontAliasingValues.some(option => option === aliasing)) {\n\t\t\tthis.mainContainer.classList.add(`monaco-font-aliasing-${aliasing}`);\n\t\t}\n\t}\n\n\tprivate restoreFontInfo(storageService: IStorageService, configurationService: IConfigurationService): void {\n\t\tconst storedFontInfoRaw = storageService.get('editorFontInfo', StorageScope.APPLICATION);\n\t\tif (storedFontInfoRaw) {\n\t\t\ttry {\n\t\t\t\tconst storedFontInfo = JSON.parse(storedFontInfoRaw);\n\t\t\t\tif (Array.isArray(storedFontInfo)) {\n\t\t\t\t\tFontMeasurements.restoreFontInfo(mainWindow, storedFontInfo);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t/* ignore */\n\t\t\t}\n\t\t}\n\n\t\tFontMeasurements.readFontInfo(mainWindow, BareFontInfo.createFromRawSettings(configurationService.getValue('editor'), PixelRatio.getInstance(mainWindow).value));\n\t}\n\n\tprivate storeFontInfo(storageService: IStorageService): void {\n\t\tconst serializedFontInfo = FontMeasurements.serializeFontInfo(mainWindow);\n\t\tif (serializedFontInfo) {\n\t\t\tstorageService.store('editorFontInfo', JSON.stringify(serializedFontInfo), StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\t}\n\t}\n\n\tprivate renderWorkbench(instantiationService: IInstantiationService, notificationService: NotificationService, storageService: IStorageService, configurationService: IConfigurationService): void {\n\n\t\t// ARIA & Signals\n\t\tsetARIAContainer(this.mainContainer);\n\t\tsetProgressAcccessibilitySignalScheduler((msDelayTime: number, msLoopTime?: number) => instantiationService.createInstance(AccessibilityProgressSignalScheduler, msDelayTime, msLoopTime));\n\n\t\t// State specific classes\n\t\tconst platformClass = isWindows ? 'windows' : isLinux ? 'linux' : 'mac';\n\t\tconst workbenchClasses = coalesce([\n\t\t\t'monaco-workbench',\n\t\t\tplatformClass,\n\t\t\tisWeb ? 'web' : undefined,\n\t\t\tisChrome ? 'chromium' : isFirefox ? 'firefox' : isSafari ? 'safari' : undefined,\n\t\t\t...this.getLayoutClasses(),\n\t\t\t...(this.options?.extraClasses ? this.options.extraClasses : [])\n\t\t]);\n\n\t\tthis.mainContainer.classList.add(...workbenchClasses);\n\t\tmainWindow.document.body.classList.add(platformClass); // used by our fonts\n\n\t\tif (isWeb) {\n\t\t\tmainWindow.document.body.classList.add('web');\n\t\t}\n\n\t\t// Apply font aliasing\n\t\tthis.updateFontAliasing(undefined, configurationService);\n\n\t\t// Warm up font cache information before building up too many dom elements\n\t\tthis.restoreFontInfo(storageService, configurationService);\n\n\t\t// Create Parts\n\t\tfor (const { id, role, classes, options } of [\n\t\t\t{ id: Parts.TITLEBAR_PART, role: 'none', classes: ['titlebar'] },\n\t\t\t{ id: Parts.BANNER_PART, role: 'banner', classes: ['banner'] },\n\t\t\t{ id: Parts.ACTIVITYBAR_PART, role: 'none', classes: ['activitybar', this.getSideBarPosition() === Position.LEFT ? 'left' : 'right'] }, // Use role 'none' for some parts to make screen readers less chatty #114892\n\t\t\t{ id: Parts.SIDEBAR_PART, role: 'none', classes: ['sidebar', this.getSideBarPosition() === Position.LEFT ? 'left' : 'right'] },\n\t\t\t{ id: Parts.EDITOR_PART, role: 'main', classes: ['editor'], options: { restorePreviousState: this.willRestoreEditors() } },\n\t\t\t{ id: Parts.PANEL_PART, role: 'none', classes: ['panel', 'basepanel', positionToString(this.getPanelPosition())] },\n\t\t\t{ id: Parts.AUXILIARYBAR_PART, role: 'none', classes: ['auxiliarybar', 'basepanel', this.getSideBarPosition() === Position.LEFT ? 'right' : 'left'] },\n\t\t\t{ id: Parts.STATUSBAR_PART, role: 'status', classes: ['statusbar'] }\n\t\t]) {\n\t\t\tconst partContainer = this.createPart(id, role, classes);\n\n\t\t\tmark(`code/willCreatePart/${id}`);\n\t\t\tthis.getPart(id).create(partContainer, options);\n\t\t\tmark(`code/didCreatePart/${id}`);\n\t\t}\n\n\t\t// Notification Handlers\n\t\tthis.createNotificationsHandlers(instantiationService, notificationService);\n\n\t\t// Add Workbench to DOM\n\t\tthis.parent.appendChild(this.mainContainer);\n\t}\n\n\tprivate createPart(id: string, role: string, classes: string[]): HTMLElement {\n\t\tconst part = document.createElement(role === 'status' ? 'footer' /* Use footer element for status bar #98376 */ : 'div');\n\t\tpart.classList.add('part', ...classes);\n\t\tpart.id = id;\n\t\tpart.setAttribute('role', role);\n\t\tif (role === 'status') {\n\t\t\tpart.setAttribute('aria-live', 'off');\n\t\t}\n\n\t\treturn part;\n\t}\n\n\tprivate createNotificationsHandlers(instantiationService: IInstantiationService, notificationService: NotificationService): void {\n\n\t\t// Instantiate Notification components\n\t\tconst notificationsCenter = this._register(instantiationService.createInstance(NotificationsCenter, this.mainContainer, notificationService.model));\n\t\tconst notificationsToasts = this._register(instantiationService.createInstance(NotificationsToasts, this.mainContainer, notificationService.model));\n\t\tthis._register(instantiationService.createInstance(NotificationsAlerts, notificationService.model));\n\t\tconst notificationsStatus = instantiationService.createInstance(NotificationsStatus, notificationService.model);\n\t\tthis._register(instantiationService.createInstance(NotificationsTelemetry));\n\n\t\t// Visibility\n\t\tthis._register(notificationsCenter.onDidChangeVisibility(() => {\n\t\t\tnotificationsStatus.update(notificationsCenter.isVisible, notificationsToasts.isVisible);\n\t\t\tnotificationsToasts.update(notificationsCenter.isVisible);\n\t\t}));\n\n\t\tthis._register(notificationsToasts.onDidChangeVisibility(() => {\n\t\t\tnotificationsStatus.update(notificationsCenter.isVisible, notificationsToasts.isVisible);\n\t\t}));\n\n\t\t// Register Commands\n\t\tregisterNotificationCommands(notificationsCenter, notificationsToasts, notificationService.model);\n\n\t\t// Register notification accessible view\n\t\tAccessibleViewRegistry.register(new NotificationAccessibleView());\n\n\t\t// Register with Layout\n\t\tthis.registerNotifications({\n\t\t\tonDidChangeNotificationsVisibility: Event.map(Event.any(notificationsToasts.onDidChangeVisibility, notificationsCenter.onDidChangeVisibility), () => notificationsToasts.isVisible || notificationsCenter.isVisible)\n\t\t});\n\t}\n\n\tprivate restore(lifecycleService: ILifecycleService): void {\n\n\t\t// Ask each part to restore\n\t\ttry {\n\t\t\tthis.restoreParts();\n\t\t} catch (error) {\n\t\t\tonUnexpectedError(error);\n\t\t}\n\n\t\t// Transition into restored phase after layout has restored\n\t\t// but do not wait indefinitely on this to account for slow\n\t\t// editors restoring. Since the workbench is fully functional\n\t\t// even when the visible editors have not resolved, we still\n\t\t// want contributions on the `Restored` phase to work before\n\t\t// slow editors have resolved. But we also do not want fast\n\t\t// editors to resolve slow when too many contributions get\n\t\t// instantiated, so we find a middle ground solution via\n\t\t// `Promise.race`\n\t\tthis.whenReady.finally(() =>\n\t\t\tPromise.race([\n\t\t\t\tthis.whenRestored,\n\t\t\t\ttimeout(2000)\n\t\t\t]).finally(() => {\n\n\t\t\t\t// Update perf marks only when the layout is fully\n\t\t\t\t// restored. We want the time it takes to restore\n\t\t\t\t// editors to be included in these numbers\n\n\t\t\t\tfunction markDidStartWorkbench() {\n\t\t\t\t\tmark('code/didStartWorkbench');\n\t\t\t\t\tperformance.measure('perf: workbench create & restore', 'code/didLoadWorkbenchMain', 'code/didStartWorkbench');\n\t\t\t\t}\n\n\t\t\t\tif (this.isRestored()) {\n\t\t\t\t\tmarkDidStartWorkbench();\n\t\t\t\t} else {\n\t\t\t\t\tthis.whenRestored.finally(() => markDidStartWorkbench());\n\t\t\t\t}\n\n\t\t\t\t// Set lifecycle phase to `Restored`\n\t\t\t\tlifecycleService.phase = LifecyclePhase.Restored;\n\n\t\t\t\t// Set lifecycle phase to `Eventually` after a short delay and when idle (min 2.5sec, max 5sec)\n\t\t\t\tconst eventuallyPhaseScheduler = this._register(new RunOnceScheduler(() => {\n\t\t\t\t\tthis._register(runWhenWindowIdle(mainWindow, () => lifecycleService.phase = LifecyclePhase.Eventually, 2500));\n\t\t\t\t}, 2500));\n\t\t\t\teventuallyPhaseScheduler.schedule();\n\t\t\t})\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
