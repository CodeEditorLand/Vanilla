{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/workbench.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./style.js\";\nimport { isChrome, isFirefox, isSafari } from \"../../base/browser/browser.js\";\nimport { runWhenWindowIdle } from \"../../base/browser/dom.js\";\nimport { PixelRatio } from \"../../base/browser/pixelRatio.js\";\nimport { setARIAContainer } from \"../../base/browser/ui/aria/aria.js\";\nimport { setBaseLayerHoverDelegate } from \"../../base/browser/ui/hover/hoverDelegate2.js\";\nimport { setHoverDelegateFactory } from \"../../base/browser/ui/hover/hoverDelegateFactory.js\";\nimport { setProgressAcccessibilitySignalScheduler } from \"../../base/browser/ui/progressbar/progressAccessibilitySignal.js\";\nimport { mainWindow } from \"../../base/browser/window.js\";\nimport { isESM } from \"../../base/common/amd.js\";\nimport { coalesce } from \"../../base/common/arrays.js\";\nimport { RunOnceScheduler, timeout } from \"../../base/common/async.js\";\nimport { toErrorMessage } from \"../../base/common/errorMessage.js\";\nimport {\n\tonUnexpectedError,\n\tsetUnexpectedErrorHandler,\n} from \"../../base/common/errors.js\";\nimport {\n\tEmitter,\n\tEvent,\n\tsetGlobalLeakWarningThreshold,\n} from \"../../base/common/event.js\";\nimport { mark } from \"../../base/common/performance.js\";\nimport {\n\tisLinux,\n\tisMacintosh,\n\tisNative,\n\tisWeb,\n\tisWindows,\n} from \"../../base/common/platform.js\";\nimport { FontMeasurements } from \"../../editor/browser/config/fontMeasurements.js\";\nimport { BareFontInfo } from \"../../editor/common/config/fontInfo.js\";\nimport { localize } from \"../../nls.js\";\nimport { AccessibleViewRegistry } from \"../../platform/accessibility/browser/accessibleViewRegistry.js\";\nimport { AccessibilityProgressSignalScheduler } from \"../../platform/accessibilitySignal/browser/progressAccessibilitySignalScheduler.js\";\nimport {\n\ttype IConfigurationChangeEvent,\n\tIConfigurationService,\n} from \"../../platform/configuration/common/configuration.js\";\nimport { IDialogService } from \"../../platform/dialogs/common/dialogs.js\";\nimport {\n\tIHoverService,\n\tWorkbenchHoverDelegate,\n} from \"../../platform/hover/browser/hover.js\";\nimport { getSingletonServiceDescriptors } from \"../../platform/instantiation/common/extensions.js\";\nimport type { IInstantiationService } from \"../../platform/instantiation/common/instantiation.js\";\nimport { InstantiationService } from \"../../platform/instantiation/common/instantiationService.js\";\nimport type { ServiceCollection } from \"../../platform/instantiation/common/serviceCollection.js\";\nimport type { ILogService } from \"../../platform/log/common/log.js\";\nimport { INotificationService } from \"../../platform/notification/common/notification.js\";\nimport { Registry } from \"../../platform/registry/common/platform.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n\tWillSaveStateReason,\n} from \"../../platform/storage/common/storage.js\";\nimport {\n\ttype IWorkbenchContributionsRegistry,\n\tExtensions as WorkbenchExtensions,\n} from \"../common/contributions.js\";\nimport {\n\tEditorExtensions,\n\ttype IEditorFactoryRegistry,\n} from \"../common/editor.js\";\nimport { IHostService } from \"../services/host/browser/host.js\";\nimport {\n\tIWorkbenchLayoutService,\n\tParts,\n\tPosition,\n\tpositionToString,\n} from \"../services/layout/browser/layoutService.js\";\nimport {\n\tILifecycleService,\n\tLifecyclePhase,\n\ttype WillShutdownEvent,\n} from \"../services/lifecycle/common/lifecycle.js\";\nimport type { NotificationService } from \"../services/notification/common/notificationService.js\";\nimport { WorkbenchContextKeysHandler } from \"./contextkeys.js\";\nimport { Layout } from \"./layout.js\";\nimport { NotificationAccessibleView } from \"./parts/notifications/notificationAccessibleView.js\";\nimport { NotificationsAlerts } from \"./parts/notifications/notificationsAlerts.js\";\nimport { NotificationsCenter } from \"./parts/notifications/notificationsCenter.js\";\nimport { registerNotificationCommands } from \"./parts/notifications/notificationsCommands.js\";\nimport { NotificationsStatus } from \"./parts/notifications/notificationsStatus.js\";\nimport { NotificationsTelemetry } from \"./parts/notifications/notificationsTelemetry.js\";\nimport { NotificationsToasts } from \"./parts/notifications/notificationsToasts.js\";\n\nexport interface IWorkbenchOptions {\n\t/**\n\t * Extra classes to be added to the workbench container.\n\t */\n\textraClasses?: string[];\n}\n\nexport class Workbench extends Layout {\n\tprivate readonly _onWillShutdown = this._register(\n\t\tnew Emitter<WillShutdownEvent>(),\n\t);\n\treadonly onWillShutdown = this._onWillShutdown.event;\n\n\tprivate readonly _onDidShutdown = this._register(new Emitter<void>());\n\treadonly onDidShutdown = this._onDidShutdown.event;\n\n\tconstructor(\n\t\tparent: HTMLElement,\n\t\tprivate readonly options: IWorkbenchOptions | undefined,\n\t\tprivate readonly serviceCollection: ServiceCollection,\n\t\tlogService: ILogService,\n\t) {\n\t\tsuper(parent);\n\n\t\t// Perf: measure workbench startup time\n\t\tmark(\"code/willStartWorkbench\");\n\n\t\tthis.registerErrorHandler(logService);\n\t}\n\n\tprivate registerErrorHandler(logService: ILogService): void {\n\t\t// Listen on unhandled rejection events\n\t\t// Note: intentionally not registered as disposable to handle\n\t\t//       errors that can occur during shutdown phase.\n\t\tmainWindow.addEventListener(\"unhandledrejection\", (event) => {\n\t\t\t// See https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n\t\t\tonUnexpectedError(event.reason);\n\n\t\t\t// Prevent the printing of this event to the console\n\t\t\tevent.preventDefault();\n\t\t});\n\n\t\t// Install handler for unexpected errors\n\t\tsetUnexpectedErrorHandler((error) =>\n\t\t\tthis.handleUnexpectedError(error, logService),\n\t\t);\n\n\t\t// Inform user about loading issues from the loader\n\t\tif (!isESM && typeof mainWindow.require?.config === \"function\") {\n\t\t\tinterface AnnotatedLoadingError extends Error {\n\t\t\t\tphase: \"loading\";\n\t\t\t\tmoduleId: string;\n\t\t\t\tneededBy: string[];\n\t\t\t}\n\t\t\tinterface AnnotatedFactoryError extends Error {\n\t\t\t\tphase: \"factory\";\n\t\t\t\tmoduleId: string;\n\t\t\t}\n\t\t\tinterface AnnotatedValidationError extends Error {\n\t\t\t\tphase: \"configuration\";\n\t\t\t}\n\t\t\ttype AnnotatedError =\n\t\t\t\t| AnnotatedLoadingError\n\t\t\t\t| AnnotatedFactoryError\n\t\t\t\t| AnnotatedValidationError;\n\t\t\tmainWindow.require.config({\n\t\t\t\tonError: (err: AnnotatedError) => {\n\t\t\t\t\tif (err.phase === \"loading\") {\n\t\t\t\t\t\tonUnexpectedError(\n\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\t\"loaderErrorNative\",\n\t\t\t\t\t\t\t\t\t\"Failed to load a required file. Please restart the application to try again. Details: {0}\",\n\t\t\t\t\t\t\t\t\tJSON.stringify(err),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate previousUnexpectedError: {\n\t\tmessage: string | undefined;\n\t\ttime: number;\n\t} = { message: undefined, time: 0 };\n\tprivate handleUnexpectedError(\n\t\terror: unknown,\n\t\tlogService: ILogService,\n\t): void {\n\t\tconst message = toErrorMessage(error, true);\n\t\tif (!message) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst now = Date.now();\n\t\tif (\n\t\t\tmessage === this.previousUnexpectedError.message &&\n\t\t\tnow - this.previousUnexpectedError.time <= 1000\n\t\t) {\n\t\t\treturn; // Return if error message identical to previous and shorter than 1 second\n\t\t}\n\n\t\tthis.previousUnexpectedError.time = now;\n\t\tthis.previousUnexpectedError.message = message;\n\n\t\t// Log it\n\t\tlogService.error(message);\n\t}\n\n\tstartup(): IInstantiationService {\n\t\ttry {\n\t\t\t// Configure emitter leak warning threshold\n\t\t\tthis._register(setGlobalLeakWarningThreshold(175));\n\n\t\t\t// Services\n\t\t\tconst instantiationService = this.initServices(\n\t\t\t\tthis.serviceCollection,\n\t\t\t);\n\n\t\t\tinstantiationService.invokeFunction((accessor) => {\n\t\t\t\tconst lifecycleService = accessor.get(ILifecycleService);\n\t\t\t\tconst storageService = accessor.get(IStorageService);\n\t\t\t\tconst configurationService = accessor.get(\n\t\t\t\t\tIConfigurationService,\n\t\t\t\t);\n\t\t\t\tconst hostService = accessor.get(IHostService);\n\t\t\t\tconst hoverService = accessor.get(IHoverService);\n\t\t\t\tconst dialogService = accessor.get(IDialogService);\n\t\t\t\tconst notificationService = accessor.get(\n\t\t\t\t\tINotificationService,\n\t\t\t\t) as NotificationService;\n\n\t\t\t\t// Default Hover Delegate must be registered before creating any workbench/layout components\n\t\t\t\t// as these possibly will use the default hover delegate\n\t\t\t\tsetHoverDelegateFactory((placement, enableInstantHover) =>\n\t\t\t\t\tinstantiationService.createInstance(\n\t\t\t\t\t\tWorkbenchHoverDelegate,\n\t\t\t\t\t\tplacement,\n\t\t\t\t\t\tenableInstantHover,\n\t\t\t\t\t\t{},\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tsetBaseLayerHoverDelegate(hoverService);\n\n\t\t\t\t// Layout\n\t\t\t\tthis.initLayout(accessor);\n\n\t\t\t\t// Registries\n\t\t\t\tRegistry.as<IWorkbenchContributionsRegistry>(\n\t\t\t\t\tWorkbenchExtensions.Workbench,\n\t\t\t\t).start(accessor);\n\t\t\t\tRegistry.as<IEditorFactoryRegistry>(\n\t\t\t\t\tEditorExtensions.EditorFactory,\n\t\t\t\t).start(accessor);\n\n\t\t\t\t// Context Keys\n\t\t\t\tthis._register(\n\t\t\t\t\tinstantiationService.createInstance(\n\t\t\t\t\t\tWorkbenchContextKeysHandler,\n\t\t\t\t\t),\n\t\t\t\t);\n\n\t\t\t\t// Register Listeners\n\t\t\t\tthis.registerListeners(\n\t\t\t\t\tlifecycleService,\n\t\t\t\t\tstorageService,\n\t\t\t\t\tconfigurationService,\n\t\t\t\t\thostService,\n\t\t\t\t\tdialogService,\n\t\t\t\t);\n\n\t\t\t\t// Render Workbench\n\t\t\t\tthis.renderWorkbench(\n\t\t\t\t\tinstantiationService,\n\t\t\t\t\tnotificationService,\n\t\t\t\t\tstorageService,\n\t\t\t\t\tconfigurationService,\n\t\t\t\t);\n\n\t\t\t\t// Workbench Layout\n\t\t\t\tthis.createWorkbenchLayout();\n\n\t\t\t\t// Layout\n\t\t\t\tthis.layout();\n\n\t\t\t\t// Restore\n\t\t\t\tthis.restore(lifecycleService);\n\t\t\t});\n\n\t\t\treturn instantiationService;\n\t\t} catch (error) {\n\t\t\tonUnexpectedError(error);\n\n\t\t\tthrow error; // rethrow because this is a critical issue we cannot handle properly here\n\t\t}\n\t}\n\n\tprivate initServices(\n\t\tserviceCollection: ServiceCollection,\n\t): IInstantiationService {\n\t\t// Layout Service\n\t\tserviceCollection.set(IWorkbenchLayoutService, this);\n\n\t\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t\t//\n\t\t// NOTE: Please do NOT register services here. Use `registerSingleton()`\n\t\t//       from `workbench.common.main.ts` if the service is shared between\n\t\t//       desktop and web or `workbench.desktop.main.ts` if the service\n\t\t//       is desktop only.\n\t\t//\n\t\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\t\t// All Contributed Services\n\t\tconst contributedServices = getSingletonServiceDescriptors();\n\t\tfor (const [id, descriptor] of contributedServices) {\n\t\t\tserviceCollection.set(id, descriptor);\n\t\t}\n\n\t\tconst instantiationService = new InstantiationService(\n\t\t\tserviceCollection,\n\t\t\ttrue,\n\t\t);\n\n\t\t// Wrap up\n\t\tinstantiationService.invokeFunction((accessor) => {\n\t\t\tconst lifecycleService = accessor.get(ILifecycleService);\n\n\t\t\t// TODO@Sandeep debt around cyclic dependencies\n\t\t\tconst configurationService = accessor.get(\n\t\t\t\tIConfigurationService,\n\t\t\t) as any;\n\t\t\tif (\n\t\t\t\ttypeof configurationService.acquireInstantiationService ===\n\t\t\t\t\"function\"\n\t\t\t) {\n\t\t\t\tconfigurationService.acquireInstantiationService(\n\t\t\t\t\tinstantiationService,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Signal to lifecycle that services are set\n\t\t\tlifecycleService.phase = LifecyclePhase.Ready;\n\t\t});\n\n\t\treturn instantiationService;\n\t}\n\n\tprivate registerListeners(\n\t\tlifecycleService: ILifecycleService,\n\t\tstorageService: IStorageService,\n\t\tconfigurationService: IConfigurationService,\n\t\thostService: IHostService,\n\t\tdialogService: IDialogService,\n\t): void {\n\t\t// Configuration changes\n\t\tthis._register(\n\t\t\tconfigurationService.onDidChangeConfiguration((e) =>\n\t\t\t\tthis.updateFontAliasing(e, configurationService),\n\t\t\t),\n\t\t);\n\n\t\t// Font Info\n\t\tif (isNative) {\n\t\t\tthis._register(\n\t\t\t\tstorageService.onWillSaveState((e) => {\n\t\t\t\t\tif (e.reason === WillSaveStateReason.SHUTDOWN) {\n\t\t\t\t\t\tthis.storeFontInfo(storageService);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t} else {\n\t\t\tthis._register(\n\t\t\t\tlifecycleService.onWillShutdown(() =>\n\t\t\t\t\tthis.storeFontInfo(storageService),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\t// Lifecycle\n\t\tthis._register(\n\t\t\tlifecycleService.onWillShutdown((event) =>\n\t\t\t\tthis._onWillShutdown.fire(event),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tlifecycleService.onDidShutdown(() => {\n\t\t\t\tthis._onDidShutdown.fire();\n\t\t\t\tthis.dispose();\n\t\t\t}),\n\t\t);\n\n\t\t// In some environments we do not get enough time to persist state on shutdown.\n\t\t// In other cases, VSCode might crash, so we periodically save state to reduce\n\t\t// the chance of loosing any state.\n\t\t// The window loosing focus is a good indication that the user has stopped working\n\t\t// in that window so we pick that at a time to collect state.\n\t\tthis._register(\n\t\t\thostService.onDidChangeFocus((focus) => {\n\t\t\t\tif (!focus) {\n\t\t\t\t\tstorageService.flush();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// Dialogs showing/hiding\n\t\tthis._register(\n\t\t\tdialogService.onWillShowDialog(() =>\n\t\t\t\tthis.mainContainer.classList.add(\"modal-dialog-visible\"),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tdialogService.onDidShowDialog(() =>\n\t\t\t\tthis.mainContainer.classList.remove(\"modal-dialog-visible\"),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate fontAliasing:\n\t\t| \"default\"\n\t\t| \"antialiased\"\n\t\t| \"none\"\n\t\t| \"auto\"\n\t\t| undefined;\n\tprivate updateFontAliasing(\n\t\te: IConfigurationChangeEvent | undefined,\n\t\tconfigurationService: IConfigurationService,\n\t) {\n\t\tif (!isMacintosh) {\n\t\t\treturn; // macOS only\n\t\t}\n\n\t\tif (e && !e.affectsConfiguration(\"workbench.fontAliasing\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst aliasing = configurationService.getValue<\n\t\t\t\"default\" | \"antialiased\" | \"none\" | \"auto\"\n\t\t>(\"workbench.fontAliasing\");\n\t\tif (this.fontAliasing === aliasing) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.fontAliasing = aliasing;\n\n\t\t// Remove all\n\t\tconst fontAliasingValues: (typeof aliasing)[] = [\n\t\t\t\"antialiased\",\n\t\t\t\"none\",\n\t\t\t\"auto\",\n\t\t];\n\t\tthis.mainContainer.classList.remove(\n\t\t\t...fontAliasingValues.map(\n\t\t\t\t(value) => `monaco-font-aliasing-${value}`,\n\t\t\t),\n\t\t);\n\n\t\t// Add specific\n\t\tif (fontAliasingValues.some((option) => option === aliasing)) {\n\t\t\tthis.mainContainer.classList.add(\n\t\t\t\t`monaco-font-aliasing-${aliasing}`,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate restoreFontInfo(\n\t\tstorageService: IStorageService,\n\t\tconfigurationService: IConfigurationService,\n\t): void {\n\t\tconst storedFontInfoRaw = storageService.get(\n\t\t\t\"editorFontInfo\",\n\t\t\tStorageScope.APPLICATION,\n\t\t);\n\t\tif (storedFontInfoRaw) {\n\t\t\ttry {\n\t\t\t\tconst storedFontInfo = JSON.parse(storedFontInfoRaw);\n\t\t\t\tif (Array.isArray(storedFontInfo)) {\n\t\t\t\t\tFontMeasurements.restoreFontInfo(\n\t\t\t\t\t\tmainWindow,\n\t\t\t\t\t\tstoredFontInfo,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t/* ignore */\n\t\t\t}\n\t\t}\n\n\t\tFontMeasurements.readFontInfo(\n\t\t\tmainWindow,\n\t\t\tBareFontInfo.createFromRawSettings(\n\t\t\t\tconfigurationService.getValue(\"editor\"),\n\t\t\t\tPixelRatio.getInstance(mainWindow).value,\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate storeFontInfo(storageService: IStorageService): void {\n\t\tconst serializedFontInfo =\n\t\t\tFontMeasurements.serializeFontInfo(mainWindow);\n\t\tif (serializedFontInfo) {\n\t\t\tstorageService.store(\n\t\t\t\t\"editorFontInfo\",\n\t\t\t\tJSON.stringify(serializedFontInfo),\n\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\tStorageTarget.MACHINE,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate renderWorkbench(\n\t\tinstantiationService: IInstantiationService,\n\t\tnotificationService: NotificationService,\n\t\tstorageService: IStorageService,\n\t\tconfigurationService: IConfigurationService,\n\t): void {\n\t\t// ARIA & Signals\n\t\tsetARIAContainer(this.mainContainer);\n\t\tsetProgressAcccessibilitySignalScheduler(\n\t\t\t(msDelayTime: number, msLoopTime?: number) =>\n\t\t\t\tinstantiationService.createInstance(\n\t\t\t\t\tAccessibilityProgressSignalScheduler,\n\t\t\t\t\tmsDelayTime,\n\t\t\t\t\tmsLoopTime,\n\t\t\t\t),\n\t\t);\n\n\t\t// State specific classes\n\t\tconst platformClass = isWindows ? \"windows\" : isLinux ? \"linux\" : \"mac\";\n\t\tconst workbenchClasses = coalesce([\n\t\t\t\"monaco-workbench\",\n\t\t\tplatformClass,\n\t\t\tisWeb ? \"web\" : undefined,\n\t\t\tisChrome\n\t\t\t\t? \"chromium\"\n\t\t\t\t: isFirefox\n\t\t\t\t\t? \"firefox\"\n\t\t\t\t\t: isSafari\n\t\t\t\t\t\t? \"safari\"\n\t\t\t\t\t\t: undefined,\n\t\t\t...this.getLayoutClasses(),\n\t\t\t...(this.options?.extraClasses ? this.options.extraClasses : []),\n\t\t]);\n\n\t\tthis.mainContainer.classList.add(...workbenchClasses);\n\t\tmainWindow.document.body.classList.add(platformClass); // used by our fonts\n\n\t\tif (isWeb) {\n\t\t\tmainWindow.document.body.classList.add(\"web\");\n\t\t}\n\n\t\t// Apply font aliasing\n\t\tthis.updateFontAliasing(undefined, configurationService);\n\n\t\t// Warm up font cache information before building up too many dom elements\n\t\tthis.restoreFontInfo(storageService, configurationService);\n\n\t\t// Create Parts\n\t\tfor (const { id, role, classes, options } of [\n\t\t\t{ id: Parts.TITLEBAR_PART, role: \"none\", classes: [\"titlebar\"] },\n\t\t\t{ id: Parts.BANNER_PART, role: \"banner\", classes: [\"banner\"] },\n\t\t\t{\n\t\t\t\tid: Parts.ACTIVITYBAR_PART,\n\t\t\t\trole: \"none\",\n\t\t\t\tclasses: [\n\t\t\t\t\t\"activitybar\",\n\t\t\t\t\tthis.getSideBarPosition() === Position.LEFT\n\t\t\t\t\t\t? \"left\"\n\t\t\t\t\t\t: \"right\",\n\t\t\t\t],\n\t\t\t}, // Use role 'none' for some parts to make screen readers less chatty #114892\n\t\t\t{\n\t\t\t\tid: Parts.SIDEBAR_PART,\n\t\t\t\trole: \"none\",\n\t\t\t\tclasses: [\n\t\t\t\t\t\"sidebar\",\n\t\t\t\t\tthis.getSideBarPosition() === Position.LEFT\n\t\t\t\t\t\t? \"left\"\n\t\t\t\t\t\t: \"right\",\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: Parts.EDITOR_PART,\n\t\t\t\trole: \"main\",\n\t\t\t\tclasses: [\"editor\"],\n\t\t\t\toptions: { restorePreviousState: this.willRestoreEditors() },\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: Parts.PANEL_PART,\n\t\t\t\trole: \"none\",\n\t\t\t\tclasses: [\n\t\t\t\t\t\"panel\",\n\t\t\t\t\t\"basepanel\",\n\t\t\t\t\tpositionToString(this.getPanelPosition()),\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: Parts.AUXILIARYBAR_PART,\n\t\t\t\trole: \"none\",\n\t\t\t\tclasses: [\n\t\t\t\t\t\"auxiliarybar\",\n\t\t\t\t\t\"basepanel\",\n\t\t\t\t\tthis.getSideBarPosition() === Position.LEFT\n\t\t\t\t\t\t? \"right\"\n\t\t\t\t\t\t: \"left\",\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: Parts.STATUSBAR_PART,\n\t\t\t\trole: \"status\",\n\t\t\t\tclasses: [\"statusbar\"],\n\t\t\t},\n\t\t]) {\n\t\t\tconst partContainer = this.createPart(id, role, classes);\n\n\t\t\tmark(`code/willCreatePart/${id}`);\n\t\t\tthis.getPart(id).create(partContainer, options);\n\t\t\tmark(`code/didCreatePart/${id}`);\n\t\t}\n\n\t\t// Notification Handlers\n\t\tthis.createNotificationsHandlers(\n\t\t\tinstantiationService,\n\t\t\tnotificationService,\n\t\t);\n\n\t\t// Add Workbench to DOM\n\t\tthis.parent.appendChild(this.mainContainer);\n\t}\n\n\tprivate createPart(\n\t\tid: string,\n\t\trole: string,\n\t\tclasses: string[],\n\t): HTMLElement {\n\t\tconst part = document.createElement(\n\t\t\trole === \"status\"\n\t\t\t\t? \"footer\" /* Use footer element for status bar #98376 */\n\t\t\t\t: \"div\",\n\t\t);\n\t\tpart.classList.add(\"part\", ...classes);\n\t\tpart.id = id;\n\t\tpart.setAttribute(\"role\", role);\n\t\tif (role === \"status\") {\n\t\t\tpart.setAttribute(\"aria-live\", \"off\");\n\t\t}\n\n\t\treturn part;\n\t}\n\n\tprivate createNotificationsHandlers(\n\t\tinstantiationService: IInstantiationService,\n\t\tnotificationService: NotificationService,\n\t): void {\n\t\t// Instantiate Notification components\n\t\tconst notificationsCenter = this._register(\n\t\t\tinstantiationService.createInstance(\n\t\t\t\tNotificationsCenter,\n\t\t\t\tthis.mainContainer,\n\t\t\t\tnotificationService.model,\n\t\t\t),\n\t\t);\n\t\tconst notificationsToasts = this._register(\n\t\t\tinstantiationService.createInstance(\n\t\t\t\tNotificationsToasts,\n\t\t\t\tthis.mainContainer,\n\t\t\t\tnotificationService.model,\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tinstantiationService.createInstance(\n\t\t\t\tNotificationsAlerts,\n\t\t\t\tnotificationService.model,\n\t\t\t),\n\t\t);\n\t\tconst notificationsStatus = instantiationService.createInstance(\n\t\t\tNotificationsStatus,\n\t\t\tnotificationService.model,\n\t\t);\n\t\tthis._register(\n\t\t\tinstantiationService.createInstance(NotificationsTelemetry),\n\t\t);\n\n\t\t// Visibility\n\t\tthis._register(\n\t\t\tnotificationsCenter.onDidChangeVisibility(() => {\n\t\t\t\tnotificationsStatus.update(\n\t\t\t\t\tnotificationsCenter.isVisible,\n\t\t\t\t\tnotificationsToasts.isVisible,\n\t\t\t\t);\n\t\t\t\tnotificationsToasts.update(notificationsCenter.isVisible);\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tnotificationsToasts.onDidChangeVisibility(() => {\n\t\t\t\tnotificationsStatus.update(\n\t\t\t\t\tnotificationsCenter.isVisible,\n\t\t\t\t\tnotificationsToasts.isVisible,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\t// Register Commands\n\t\tregisterNotificationCommands(\n\t\t\tnotificationsCenter,\n\t\t\tnotificationsToasts,\n\t\t\tnotificationService.model,\n\t\t);\n\n\t\t// Register notification accessible view\n\t\tAccessibleViewRegistry.register(new NotificationAccessibleView());\n\n\t\t// Register with Layout\n\t\tthis.registerNotifications({\n\t\t\tonDidChangeNotificationsVisibility: Event.map(\n\t\t\t\tEvent.any(\n\t\t\t\t\tnotificationsToasts.onDidChangeVisibility,\n\t\t\t\t\tnotificationsCenter.onDidChangeVisibility,\n\t\t\t\t),\n\t\t\t\t() =>\n\t\t\t\t\tnotificationsToasts.isVisible ||\n\t\t\t\t\tnotificationsCenter.isVisible,\n\t\t\t),\n\t\t});\n\t}\n\n\tprivate restore(lifecycleService: ILifecycleService): void {\n\t\t// Ask each part to restore\n\t\ttry {\n\t\t\tthis.restoreParts();\n\t\t} catch (error) {\n\t\t\tonUnexpectedError(error);\n\t\t}\n\n\t\t// Transition into restored phase after layout has restored\n\t\t// but do not wait indefinitely on this to account for slow\n\t\t// editors restoring. Since the workbench is fully functional\n\t\t// even when the visible editors have not resolved, we still\n\t\t// want contributions on the `Restored` phase to work before\n\t\t// slow editors have resolved. But we also do not want fast\n\t\t// editors to resolve slow when too many contributions get\n\t\t// instantiated, so we find a middle ground solution via\n\t\t// `Promise.race`\n\t\tthis.whenReady.finally(() =>\n\t\t\tPromise.race([this.whenRestored, timeout(2000)]).finally(() => {\n\t\t\t\t// Update perf marks only when the layout is fully\n\t\t\t\t// restored. We want the time it takes to restore\n\t\t\t\t// editors to be included in these numbers\n\n\t\t\t\tfunction markDidStartWorkbench() {\n\t\t\t\t\tmark(\"code/didStartWorkbench\");\n\t\t\t\t\tperformance.measure(\n\t\t\t\t\t\t\"perf: workbench create & restore\",\n\t\t\t\t\t\t\"code/didLoadWorkbenchMain\",\n\t\t\t\t\t\t\"code/didStartWorkbench\",\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (this.isRestored()) {\n\t\t\t\t\tmarkDidStartWorkbench();\n\t\t\t\t} else {\n\t\t\t\t\tthis.whenRestored.finally(() => markDidStartWorkbench());\n\t\t\t\t}\n\n\t\t\t\t// Set lifecycle phase to `Restored`\n\t\t\t\tlifecycleService.phase = LifecyclePhase.Restored;\n\n\t\t\t\t// Set lifecycle phase to `Eventually` after a short delay and when idle (min 2.5sec, max 5sec)\n\t\t\t\tconst eventuallyPhaseScheduler = this._register(\n\t\t\t\t\tnew RunOnceScheduler(() => {\n\t\t\t\t\t\tthis._register(\n\t\t\t\t\t\t\trunWhenWindowIdle(\n\t\t\t\t\t\t\t\tmainWindow,\n\t\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\t\t(lifecycleService.phase =\n\t\t\t\t\t\t\t\t\t\tLifecyclePhase.Eventually),\n\t\t\t\t\t\t\t\t2500,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}, 2500),\n\t\t\t\t);\n\t\t\t\teventuallyPhaseScheduler.schedule();\n\t\t\t}),\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
