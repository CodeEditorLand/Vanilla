{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/labels.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\ttype IIconLabelCreationOptions,\n\ttype IIconLabelValueOptions,\n\tIconLabel,\n} from \"../../base/browser/ui/iconLabel/iconLabel.js\";\nimport { Emitter, Event } from \"../../base/common/event.js\";\nimport { normalizeDriveLetter } from \"../../base/common/labels.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n\tMutableDisposable,\n\tdispose,\n} from \"../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../base/common/network.js\";\nimport {\n\tbasenameOrAuthority,\n\tdirname,\n\tisEqual,\n} from \"../../base/common/resources.js\";\nimport type { ThemeIcon } from \"../../base/common/themables.js\";\nimport { URI } from \"../../base/common/uri.js\";\nimport type { IRange } from \"../../editor/common/core/range.js\";\nimport { ILanguageService } from \"../../editor/common/languages/language.js\";\nimport type { ITextModel } from \"../../editor/common/model.js\";\nimport { getIconClasses } from \"../../editor/common/services/getIconClasses.js\";\nimport { IModelService } from \"../../editor/common/services/model.js\";\nimport { localize } from \"../../nls.js\";\nimport { IConfigurationService } from \"../../platform/configuration/common/configuration.js\";\nimport {\n\tFILES_ASSOCIATIONS_CONFIG,\n\tFileKind,\n} from \"../../platform/files/common/files.js\";\nimport { IInstantiationService } from \"../../platform/instantiation/common/instantiation.js\";\nimport { ILabelService } from \"../../platform/label/common/label.js\";\nimport { IThemeService } from \"../../platform/theme/common/themeService.js\";\nimport { IWorkspaceContextService } from \"../../platform/workspace/common/workspace.js\";\nimport {\n\ttype IDecoration,\n\tIDecorationsService,\n\ttype IResourceDecorationChangeEvent,\n} from \"../services/decorations/common/decorations.js\";\nimport { INotebookDocumentService } from \"../services/notebook/common/notebookDocumentService.js\";\nimport { ITextFileService } from \"../services/textfile/common/textfiles.js\";\n\nexport interface IResourceLabelProps {\n\tresource?: URI | { primary?: URI; secondary?: URI };\n\tname?: string | string[];\n\trange?: IRange;\n\tdescription?: string;\n}\n\nfunction toResource(props: IResourceLabelProps | undefined): URI | undefined {\n\tif (!props || !props.resource) {\n\t\treturn undefined;\n\t}\n\n\tif (URI.isUri(props.resource)) {\n\t\treturn props.resource;\n\t}\n\n\treturn props.resource.primary;\n}\n\nexport interface IResourceLabelOptions extends IIconLabelValueOptions {\n\t/**\n\t * A hint to the file kind of the resource.\n\t */\n\tfileKind?: FileKind;\n\n\t/**\n\t * File decorations to use for the label.\n\t */\n\treadonly fileDecorations?: { colors: boolean; badges: boolean };\n\n\t/**\n\t * Will take the provided label as is and e.g. not override it for untitled files.\n\t */\n\treadonly forceLabel?: boolean;\n\n\t/**\n\t * Uses the provided icon instead of deriving a resource icon.\n\t */\n\treadonly icon?: ThemeIcon | URI;\n}\n\nexport interface IFileLabelOptions extends IResourceLabelOptions {\n\thideLabel?: boolean;\n\thidePath?: boolean;\n\trange?: IRange;\n}\n\nexport interface IResourceLabel extends IDisposable {\n\treadonly element: HTMLElement;\n\n\treadonly onDidRender: Event<void>;\n\n\t/**\n\t * Most generic way to apply a label with raw information.\n\t */\n\tsetLabel(\n\t\tlabel?: string,\n\t\tdescription?: string,\n\t\toptions?: IIconLabelValueOptions,\n\t): void;\n\n\t/**\n\t * Convenient method to apply a label by passing a resource along.\n\t *\n\t * Note: for file resources consider to use the #setFile() method instead.\n\t */\n\tsetResource(\n\t\tlabel: IResourceLabelProps,\n\t\toptions?: IResourceLabelOptions,\n\t): void;\n\n\t/**\n\t * Convenient method to render a file label based on a resource.\n\t */\n\tsetFile(resource: URI, options?: IFileLabelOptions): void;\n\n\t/**\n\t * Resets the label to be empty.\n\t */\n\tclear(): void;\n}\n\nexport interface IResourceLabelsContainer {\n\treadonly onDidChangeVisibility: Event<boolean>;\n}\n\nexport const DEFAULT_LABELS_CONTAINER: IResourceLabelsContainer = {\n\tonDidChangeVisibility: Event.None,\n};\n\nexport class ResourceLabels extends Disposable {\n\tprivate readonly _onDidChangeDecorations = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onDidChangeDecorations = this._onDidChangeDecorations.event;\n\n\tprivate widgets: ResourceLabelWidget[] = [];\n\tprivate labels: IResourceLabel[] = [];\n\n\tconstructor(\n\t\tcontainer: IResourceLabelsContainer,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@IWorkspaceContextService private readonly workspaceService: IWorkspaceContextService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@IDecorationsService private readonly decorationsService: IDecorationsService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@ITextFileService private readonly textFileService: ITextFileService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners(container);\n\t}\n\n\tprivate registerListeners(container: IResourceLabelsContainer): void {\n\t\t// notify when visibility changes\n\t\tthis._register(\n\t\t\tcontainer.onDidChangeVisibility((visible) => {\n\t\t\t\tthis.widgets.forEach((widget) =>\n\t\t\t\t\twidget.notifyVisibilityChanged(visible),\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\t// notify when extensions are registered with potentially new languages\n\t\tthis._register(\n\t\t\tthis.languageService.onDidChange(() =>\n\t\t\t\tthis.widgets.forEach((widget) =>\n\t\t\t\t\twidget.notifyExtensionsRegistered(),\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\t// notify when model language changes\n\t\tthis._register(\n\t\t\tthis.modelService.onModelLanguageChanged((e) => {\n\t\t\t\tif (!e.model.uri) {\n\t\t\t\t\treturn; // we need the resource to compare\n\t\t\t\t}\n\n\t\t\t\tthis.widgets.forEach((widget) =>\n\t\t\t\t\twidget.notifyModelLanguageChanged(e.model),\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\t// notify when model is added\n\t\tthis._register(\n\t\t\tthis.modelService.onModelAdded((model) => {\n\t\t\t\tif (!model.uri) {\n\t\t\t\t\treturn; // we need the resource to compare\n\t\t\t\t}\n\n\t\t\t\tthis.widgets.forEach((widget) =>\n\t\t\t\t\twidget.notifyModelAdded(model),\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\t// notify when workspace folders changes\n\t\tthis._register(\n\t\t\tthis.workspaceService.onDidChangeWorkspaceFolders(() => {\n\t\t\t\tthis.widgets.forEach((widget) =>\n\t\t\t\t\twidget.notifyWorkspaceFoldersChange(),\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\t// notify when file decoration changes\n\t\tthis._register(\n\t\t\tthis.decorationsService.onDidChangeDecorations((e) => {\n\t\t\t\tlet notifyDidChangeDecorations = false;\n\t\t\t\tthis.widgets.forEach((widget) => {\n\t\t\t\t\tif (widget.notifyFileDecorationsChanges(e)) {\n\t\t\t\t\t\tnotifyDidChangeDecorations = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (notifyDidChangeDecorations) {\n\t\t\t\t\tthis._onDidChangeDecorations.fire();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// notify when theme changes\n\t\tthis._register(\n\t\t\tthis.themeService.onDidColorThemeChange(() =>\n\t\t\t\tthis.widgets.forEach((widget) => widget.notifyThemeChange()),\n\t\t\t),\n\t\t);\n\n\t\t// notify when files.associations changes\n\t\tthis._register(\n\t\t\tthis.configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (e.affectsConfiguration(FILES_ASSOCIATIONS_CONFIG)) {\n\t\t\t\t\tthis.widgets.forEach((widget) =>\n\t\t\t\t\t\twidget.notifyFileAssociationsChange(),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// notify when label formatters change\n\t\tthis._register(\n\t\t\tthis.labelService.onDidChangeFormatters((e) => {\n\t\t\t\tthis.widgets.forEach((widget) =>\n\t\t\t\t\twidget.notifyFormattersChange(e.scheme),\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\t// notify when untitled labels change\n\t\tthis._register(\n\t\t\tthis.textFileService.untitled.onDidChangeLabel((model) => {\n\t\t\t\tthis.widgets.forEach((widget) =>\n\t\t\t\t\twidget.notifyUntitledLabelChange(model.resource),\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\t}\n\n\tget(index: number): IResourceLabel {\n\t\treturn this.labels[index];\n\t}\n\n\tcreate(\n\t\tcontainer: HTMLElement,\n\t\toptions?: IIconLabelCreationOptions,\n\t): IResourceLabel {\n\t\tconst widget = this.instantiationService.createInstance(\n\t\t\tResourceLabelWidget,\n\t\t\tcontainer,\n\t\t\toptions,\n\t\t);\n\n\t\t// Only expose a handle to the outside\n\t\tconst label: IResourceLabel = {\n\t\t\telement: widget.element,\n\t\t\tonDidRender: widget.onDidRender,\n\t\t\tsetLabel: (\n\t\t\t\tlabel: string,\n\t\t\t\tdescription?: string,\n\t\t\t\toptions?: IIconLabelValueOptions,\n\t\t\t) => widget.setLabel(label, description, options),\n\t\t\tsetResource: (\n\t\t\t\tlabel: IResourceLabelProps,\n\t\t\t\toptions?: IResourceLabelOptions,\n\t\t\t) => widget.setResource(label, options),\n\t\t\tsetFile: (resource: URI, options?: IFileLabelOptions) =>\n\t\t\t\twidget.setFile(resource, options),\n\t\t\tclear: () => widget.clear(),\n\t\t\tdispose: () => this.disposeWidget(widget),\n\t\t};\n\n\t\t// Store\n\t\tthis.labels.push(label);\n\t\tthis.widgets.push(widget);\n\n\t\treturn label;\n\t}\n\n\tprivate disposeWidget(widget: ResourceLabelWidget): void {\n\t\tconst index = this.widgets.indexOf(widget);\n\t\tif (index > -1) {\n\t\t\tthis.widgets.splice(index, 1);\n\t\t\tthis.labels.splice(index, 1);\n\t\t}\n\n\t\tdispose(widget);\n\t}\n\n\tclear(): void {\n\t\tthis.widgets = dispose(this.widgets);\n\t\tthis.labels = [];\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.clear();\n\t}\n}\n\n/**\n * Note: please consider to use `ResourceLabels` if you are in need\n * of more than one label for your widget.\n */\nexport class ResourceLabel extends ResourceLabels {\n\tprivate label: IResourceLabel;\n\tget element(): IResourceLabel {\n\t\treturn this.label;\n\t}\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\toptions: IIconLabelCreationOptions | undefined,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IModelService modelService: IModelService,\n\t\t@IWorkspaceContextService workspaceService: IWorkspaceContextService,\n\t\t@ILanguageService languageService: ILanguageService,\n\t\t@IDecorationsService decorationsService: IDecorationsService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@ITextFileService textFileService: ITextFileService,\n\t) {\n\t\tsuper(\n\t\t\tDEFAULT_LABELS_CONTAINER,\n\t\t\tinstantiationService,\n\t\t\tconfigurationService,\n\t\t\tmodelService,\n\t\t\tworkspaceService,\n\t\t\tlanguageService,\n\t\t\tdecorationsService,\n\t\t\tthemeService,\n\t\t\tlabelService,\n\t\t\ttextFileService,\n\t\t);\n\n\t\tthis.label = this._register(this.create(container, options));\n\t}\n}\n\nenum Redraw {\n\tBasic = 1,\n\tFull = 2,\n}\n\nclass ResourceLabelWidget extends IconLabel {\n\tprivate readonly _onDidRender = this._register(new Emitter<void>());\n\treadonly onDidRender = this._onDidRender.event;\n\n\tprivate label: IResourceLabelProps | undefined = undefined;\n\tprivate readonly decoration = this._register(\n\t\tnew MutableDisposable<IDecoration>(),\n\t);\n\tprivate options: IResourceLabelOptions | undefined = undefined;\n\n\tprivate computedIconClasses: string[] | undefined = undefined;\n\tprivate computedLanguageId: string | undefined = undefined;\n\tprivate computedPathLabel: string | undefined = undefined;\n\tprivate computedWorkspaceFolderLabel: string | undefined = undefined;\n\n\tprivate needsRedraw: Redraw | undefined = undefined;\n\tprivate isHidden = false;\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\toptions: IIconLabelCreationOptions | undefined,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@IDecorationsService private readonly decorationsService: IDecorationsService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@INotebookDocumentService private readonly notebookDocumentService: INotebookDocumentService\n\t) {\n\t\tsuper(container, options);\n\t}\n\n\tnotifyVisibilityChanged(visible: boolean): void {\n\t\tif (visible === this.isHidden) {\n\t\t\tthis.isHidden = !visible;\n\n\t\t\tif (visible && this.needsRedraw) {\n\t\t\t\tthis.render({\n\t\t\t\t\tupdateIcon: this.needsRedraw === Redraw.Full,\n\t\t\t\t\tupdateDecoration: this.needsRedraw === Redraw.Full,\n\t\t\t\t});\n\n\t\t\t\tthis.needsRedraw = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tnotifyModelLanguageChanged(model: ITextModel): void {\n\t\tthis.handleModelEvent(model);\n\t}\n\n\tnotifyModelAdded(model: ITextModel): void {\n\t\tthis.handleModelEvent(model);\n\t}\n\n\tprivate handleModelEvent(model: ITextModel): void {\n\t\tconst resource = toResource(this.label);\n\t\tif (!resource) {\n\t\t\treturn; // only update if resource exists\n\t\t}\n\n\t\tif (isEqual(model.uri, resource)) {\n\t\t\tif (this.computedLanguageId !== model.getLanguageId()) {\n\t\t\t\tthis.computedLanguageId = model.getLanguageId();\n\t\t\t\tthis.render({ updateIcon: true, updateDecoration: false }); // update if the language id of the model has changed from our last known state\n\t\t\t}\n\t\t}\n\t}\n\n\tnotifyFileDecorationsChanges(e: IResourceDecorationChangeEvent): boolean {\n\t\tif (!this.options) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst resource = toResource(this.label);\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.options.fileDecorations && e.affectsResource(resource)) {\n\t\t\treturn this.render({ updateIcon: false, updateDecoration: true });\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tnotifyExtensionsRegistered(): void {\n\t\tthis.render({ updateIcon: true, updateDecoration: false });\n\t}\n\n\tnotifyThemeChange(): void {\n\t\tthis.render({ updateIcon: false, updateDecoration: false });\n\t}\n\n\tnotifyFileAssociationsChange(): void {\n\t\tthis.render({ updateIcon: true, updateDecoration: false });\n\t}\n\n\tnotifyFormattersChange(scheme: string): void {\n\t\tif (toResource(this.label)?.scheme === scheme) {\n\t\t\tthis.render({ updateIcon: false, updateDecoration: false });\n\t\t}\n\t}\n\n\tnotifyUntitledLabelChange(resource: URI): void {\n\t\tif (isEqual(resource, toResource(this.label))) {\n\t\t\tthis.render({ updateIcon: false, updateDecoration: false });\n\t\t}\n\t}\n\n\tnotifyWorkspaceFoldersChange(): void {\n\t\tif (typeof this.computedWorkspaceFolderLabel === \"string\") {\n\t\t\tconst resource = toResource(this.label);\n\t\t\tif (\n\t\t\t\tURI.isUri(resource) &&\n\t\t\t\tthis.label?.name === this.computedWorkspaceFolderLabel\n\t\t\t) {\n\t\t\t\tthis.setFile(resource, this.options);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetFile(resource: URI, options?: IFileLabelOptions): void {\n\t\tconst hideLabel = options?.hideLabel;\n\t\tlet name: string | undefined;\n\t\tif (!hideLabel) {\n\t\t\tif (options?.fileKind === FileKind.ROOT_FOLDER) {\n\t\t\t\tconst workspaceFolder =\n\t\t\t\t\tthis.contextService.getWorkspaceFolder(resource);\n\t\t\t\tif (workspaceFolder) {\n\t\t\t\t\tname = workspaceFolder.name;\n\t\t\t\t\tthis.computedWorkspaceFolderLabel = name;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!name) {\n\t\t\t\tname = normalizeDriveLetter(basenameOrAuthority(resource));\n\t\t\t}\n\t\t}\n\n\t\tlet description: string | undefined;\n\t\tif (!options?.hidePath) {\n\t\t\tconst descriptionCandidate = this.labelService.getUriLabel(\n\t\t\t\tdirname(resource),\n\t\t\t\t{ relative: true },\n\t\t\t);\n\t\t\tif (descriptionCandidate && descriptionCandidate !== \".\") {\n\t\t\t\t// omit description if its not significant: a relative path\n\t\t\t\t// of '.' just indicates that there is no parent to the path\n\t\t\t\t// https://github.com/microsoft/vscode/issues/208692\n\t\t\t\tdescription = descriptionCandidate;\n\t\t\t}\n\t\t}\n\n\t\tthis.setResource(\n\t\t\t{ resource, name, description, range: options?.range },\n\t\t\toptions,\n\t\t);\n\t}\n\n\tsetResource(\n\t\tlabel: IResourceLabelProps,\n\t\toptions: IResourceLabelOptions = Object.create(null),\n\t): void {\n\t\tconst resource = toResource(label);\n\t\tconst isSideBySideEditor =\n\t\t\tlabel?.resource && !URI.isUri(label.resource);\n\n\t\tif (\n\t\t\t!options.forceLabel &&\n\t\t\t!isSideBySideEditor &&\n\t\t\tresource?.scheme === Schemas.untitled\n\t\t) {\n\t\t\t// Untitled labels are very dynamic because they may change\n\t\t\t// whenever the content changes (unless a path is associated).\n\t\t\t// As such we always ask the actual editor for it's name and\n\t\t\t// description to get latest in case name/description are\n\t\t\t// provided. If they are not provided from the label we got\n\t\t\t// we assume that the client does not want to display them\n\t\t\t// and as such do not override.\n\t\t\t//\n\t\t\t// We do not touch the label if it represents a primary-secondary\n\t\t\t// because in that case we expect it to carry a proper label\n\t\t\t// and description.\n\t\t\tconst untitledModel = this.textFileService.untitled.get(resource);\n\t\t\tif (untitledModel && !untitledModel.hasAssociatedFilePath) {\n\t\t\t\tif (typeof label.name === \"string\") {\n\t\t\t\t\tlabel.name = untitledModel.name;\n\t\t\t\t}\n\n\t\t\t\tif (typeof label.description === \"string\") {\n\t\t\t\t\tconst untitledDescription = untitledModel.resource.path;\n\t\t\t\t\tif (label.name !== untitledDescription) {\n\t\t\t\t\t\tlabel.description = untitledDescription;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlabel.description = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst untitledTitle = untitledModel.resource.path;\n\t\t\t\tif (untitledModel.name !== untitledTitle) {\n\t\t\t\t\toptions.title = `${untitledModel.name} \u2022 ${untitledTitle}`;\n\t\t\t\t} else {\n\t\t\t\t\toptions.title = untitledTitle;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\t!options.forceLabel &&\n\t\t\t!isSideBySideEditor &&\n\t\t\tresource?.scheme === Schemas.vscodeNotebookCell\n\t\t) {\n\t\t\t// Notebook cells are embeded in a notebook document\n\t\t\t// As such we always ask the actual notebook document\n\t\t\t// for its position in the document.\n\t\t\tconst notebookDocument =\n\t\t\t\tthis.notebookDocumentService.getNotebook(resource);\n\t\t\tconst cellIndex = notebookDocument?.getCellIndex(resource);\n\t\t\tif (\n\t\t\t\tnotebookDocument &&\n\t\t\t\tcellIndex !== undefined &&\n\t\t\t\ttypeof label.name === \"string\"\n\t\t\t) {\n\t\t\t\toptions.title = localize(\n\t\t\t\t\t\"notebookCellLabel\",\n\t\t\t\t\t\"{0} \u2022 Cell {1}\",\n\t\t\t\t\tlabel.name,\n\t\t\t\t\t`${cellIndex + 1}`,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof label.name === \"string\" &&\n\t\t\t\tnotebookDocument &&\n\t\t\t\tcellIndex !== undefined &&\n\t\t\t\ttypeof label.name === \"string\"\n\t\t\t) {\n\t\t\t\tlabel.name = localize(\n\t\t\t\t\t\"notebookCellLabel\",\n\t\t\t\t\t\"{0} \u2022 Cell {1}\",\n\t\t\t\t\tlabel.name,\n\t\t\t\t\t`${cellIndex + 1}`,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst hasResourceChanged = this.hasResourceChanged(label);\n\t\tconst hasPathLabelChanged =\n\t\t\thasResourceChanged || this.hasPathLabelChanged(label);\n\t\tconst hasFileKindChanged = this.hasFileKindChanged(options);\n\t\tconst hasIconChanged = this.hasIconChanged(options);\n\n\t\tthis.label = label;\n\t\tthis.options = options;\n\n\t\tif (hasResourceChanged) {\n\t\t\tthis.computedLanguageId = undefined; // reset computed language since resource changed\n\t\t}\n\n\t\tif (hasPathLabelChanged) {\n\t\t\tthis.computedPathLabel = undefined; // reset path label due to resource/path-label change\n\t\t}\n\n\t\tthis.render({\n\t\t\tupdateIcon:\n\t\t\t\thasResourceChanged || hasFileKindChanged || hasIconChanged,\n\t\t\tupdateDecoration: hasResourceChanged || hasFileKindChanged,\n\t\t});\n\t}\n\n\tprivate hasFileKindChanged(newOptions?: IResourceLabelOptions): boolean {\n\t\tconst newFileKind = newOptions?.fileKind;\n\t\tconst oldFileKind = this.options?.fileKind;\n\n\t\treturn newFileKind !== oldFileKind; // same resource but different kind (file, folder)\n\t}\n\n\tprivate hasResourceChanged(newLabel: IResourceLabelProps): boolean {\n\t\tconst newResource = toResource(newLabel);\n\t\tconst oldResource = toResource(this.label);\n\n\t\tif (newResource && oldResource) {\n\t\t\treturn newResource.toString() !== oldResource.toString();\n\t\t}\n\n\t\tif (!newResource && !oldResource) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate hasPathLabelChanged(newLabel: IResourceLabelProps): boolean {\n\t\tconst newResource = toResource(newLabel);\n\n\t\treturn (\n\t\t\t!!newResource &&\n\t\t\tthis.computedPathLabel !==\n\t\t\t\tthis.labelService.getUriLabel(newResource)\n\t\t);\n\t}\n\n\tprivate hasIconChanged(newOptions?: IResourceLabelOptions): boolean {\n\t\treturn this.options?.icon !== newOptions?.icon;\n\t}\n\n\tclear(): void {\n\t\tthis.label = undefined;\n\t\tthis.options = undefined;\n\t\tthis.computedLanguageId = undefined;\n\t\tthis.computedIconClasses = undefined;\n\t\tthis.computedPathLabel = undefined;\n\n\t\tthis.setLabel(\"\");\n\t}\n\n\tprivate render(options: {\n\t\tupdateIcon: boolean;\n\t\tupdateDecoration: boolean;\n\t}): boolean {\n\t\tif (this.isHidden) {\n\t\t\tif (this.needsRedraw !== Redraw.Full) {\n\t\t\t\tthis.needsRedraw =\n\t\t\t\t\toptions.updateIcon || options.updateDecoration\n\t\t\t\t\t\t? Redraw.Full\n\t\t\t\t\t\t: Redraw.Basic;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tif (options.updateIcon) {\n\t\t\tthis.computedIconClasses = undefined;\n\t\t}\n\n\t\tif (!this.label) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst iconLabelOptions: IIconLabelValueOptions & {\n\t\t\textraClasses: string[];\n\t\t} = {\n\t\t\ttitle: \"\",\n\t\t\titalic: this.options?.italic,\n\t\t\tstrikethrough: this.options?.strikethrough,\n\t\t\tmatches: this.options?.matches,\n\t\t\tdescriptionMatches: this.options?.descriptionMatches,\n\t\t\textraClasses: [],\n\t\t\tseparator: this.options?.separator,\n\t\t\tdomId: this.options?.domId,\n\t\t\tdisabledCommand: this.options?.disabledCommand,\n\t\t\tlabelEscapeNewLines: this.options?.labelEscapeNewLines,\n\t\t\tdescriptionTitle: this.options?.descriptionTitle,\n\t\t};\n\n\t\tconst resource = toResource(this.label);\n\n\t\tif (this.options?.title !== undefined) {\n\t\t\ticonLabelOptions.title = this.options.title;\n\t\t}\n\n\t\tif (\n\t\t\tresource &&\n\t\t\tresource.scheme !==\n\t\t\t\tSchemas.data /* do not accidentally inline Data URIs */ &&\n\t\t\t(!this.options?.title ||\n\t\t\t\t(typeof this.options.title !== \"string\" &&\n\t\t\t\t\t!this.options.title.markdownNotSupportedFallback))\n\t\t) {\n\t\t\tif (!this.computedPathLabel) {\n\t\t\t\tthis.computedPathLabel =\n\t\t\t\t\tthis.labelService.getUriLabel(resource);\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!iconLabelOptions.title ||\n\t\t\t\ttypeof iconLabelOptions.title === \"string\"\n\t\t\t) {\n\t\t\t\ticonLabelOptions.title = this.computedPathLabel;\n\t\t\t} else if (!iconLabelOptions.title.markdownNotSupportedFallback) {\n\t\t\t\ticonLabelOptions.title.markdownNotSupportedFallback =\n\t\t\t\t\tthis.computedPathLabel;\n\t\t\t}\n\t\t}\n\n\t\tif (this.options && !this.options.hideIcon) {\n\t\t\tif (!this.computedIconClasses) {\n\t\t\t\tthis.computedIconClasses = getIconClasses(\n\t\t\t\t\tthis.modelService,\n\t\t\t\t\tthis.languageService,\n\t\t\t\t\tresource,\n\t\t\t\t\tthis.options.fileKind,\n\t\t\t\t\tthis.options.icon,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (URI.isUri(this.options.icon)) {\n\t\t\t\ticonLabelOptions.iconPath = this.options.icon;\n\t\t\t}\n\n\t\t\ticonLabelOptions.extraClasses = this.computedIconClasses.slice(0);\n\t\t}\n\n\t\tif (this.options?.extraClasses) {\n\t\t\ticonLabelOptions.extraClasses.push(...this.options.extraClasses);\n\t\t}\n\n\t\tif (this.options?.fileDecorations && resource) {\n\t\t\tif (options.updateDecoration) {\n\t\t\t\tthis.decoration.value = this.decorationsService.getDecoration(\n\t\t\t\t\tresource,\n\t\t\t\t\tthis.options.fileKind !== FileKind.FILE,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst decoration = this.decoration.value;\n\t\t\tif (decoration) {\n\t\t\t\tif (decoration.tooltip) {\n\t\t\t\t\tif (typeof iconLabelOptions.title === \"string\") {\n\t\t\t\t\t\ticonLabelOptions.title = `${iconLabelOptions.title} \u2022 ${decoration.tooltip}`;\n\t\t\t\t\t} else if (\n\t\t\t\t\t\ttypeof iconLabelOptions.title?.markdown === \"string\"\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst title = `${iconLabelOptions.title.markdown} \u2022 ${decoration.tooltip}`;\n\t\t\t\t\t\ticonLabelOptions.title = {\n\t\t\t\t\t\t\tmarkdown: title,\n\t\t\t\t\t\t\tmarkdownNotSupportedFallback: title,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (decoration.strikethrough) {\n\t\t\t\t\ticonLabelOptions.strikethrough = true;\n\t\t\t\t}\n\n\t\t\t\tif (this.options.fileDecorations.colors) {\n\t\t\t\t\ticonLabelOptions.extraClasses.push(\n\t\t\t\t\t\tdecoration.labelClassName,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (this.options.fileDecorations.badges) {\n\t\t\t\t\ticonLabelOptions.extraClasses.push(\n\t\t\t\t\t\tdecoration.badgeClassName,\n\t\t\t\t\t);\n\t\t\t\t\ticonLabelOptions.extraClasses.push(\n\t\t\t\t\t\tdecoration.iconClassName,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.label.range) {\n\t\t\ticonLabelOptions.suffix =\n\t\t\t\tthis.label.range.startLineNumber !==\n\t\t\t\tthis.label.range.endLineNumber\n\t\t\t\t\t? `:${this.label.range.startLineNumber}-${this.label.range.endLineNumber}`\n\t\t\t\t\t: `:${this.label.range.startLineNumber}`;\n\t\t}\n\n\t\tthis.setLabel(\n\t\t\tthis.label.name ?? \"\",\n\t\t\tthis.label.description,\n\t\t\ticonLabelOptions,\n\t\t);\n\n\t\tthis._onDidRender.fire();\n\n\t\treturn true;\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.label = undefined;\n\t\tthis.options = undefined;\n\t\tthis.computedLanguageId = undefined;\n\t\tthis.computedIconClasses = undefined;\n\t\tthis.computedPathLabel = undefined;\n\t\tthis.computedWorkspaceFolderLabel = undefined;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["label", "options", "Redraw"]
}
