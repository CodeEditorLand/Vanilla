{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/panecomposite.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Registry } from '../../platform/registry/common/platform.js';\nimport { Composite, CompositeDescriptor, CompositeRegistry } from './composite.js';\nimport { IConstructorSignature, BrandedService, IInstantiationService } from '../../platform/instantiation/common/instantiation.js';\nimport { URI } from '../../base/common/uri.js';\nimport { Dimension } from '../../base/browser/dom.js';\nimport { IActionViewItem } from '../../base/browser/ui/actionbar/actionbar.js';\nimport { IAction, Separator } from '../../base/common/actions.js';\nimport { MenuId, SubmenuItemAction } from '../../platform/actions/common/actions.js';\nimport { IContextMenuService } from '../../platform/contextview/browser/contextView.js';\nimport { IStorageService } from '../../platform/storage/common/storage.js';\nimport { ITelemetryService } from '../../platform/telemetry/common/telemetry.js';\nimport { IThemeService } from '../../platform/theme/common/themeService.js';\nimport { IWorkspaceContextService } from '../../platform/workspace/common/workspace.js';\nimport { ViewPaneContainer, ViewsSubMenu } from './parts/views/viewPaneContainer.js';\nimport { IPaneComposite } from '../common/panecomposite.js';\nimport { IView } from '../common/views.js';\nimport { IExtensionService } from '../services/extensions/common/extensions.js';\nimport { VIEWPANE_FILTER_ACTION } from './parts/views/viewPane.js';\nimport { IBoundarySashes } from '../../base/browser/ui/sash/sash.js';\nimport { IBaseActionViewItemOptions } from '../../base/browser/ui/actionbar/actionViewItems.js';\n\nexport abstract class PaneComposite extends Composite implements IPaneComposite {\n\n\tprivate viewPaneContainer?: ViewPaneContainer;\n\n\tconstructor(\n\t\tid: string,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IStorageService protected storageService: IStorageService,\n\t\t@IInstantiationService protected instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IContextMenuService protected contextMenuService: IContextMenuService,\n\t\t@IExtensionService protected extensionService: IExtensionService,\n\t\t@IWorkspaceContextService protected contextService: IWorkspaceContextService\n\t) {\n\t\tsuper(id, telemetryService, themeService, storageService);\n\t}\n\n\toverride create(parent: HTMLElement): void {\n\t\tsuper.create(parent);\n\t\tthis.viewPaneContainer = this._register(this.createViewPaneContainer(parent));\n\t\tthis._register(this.viewPaneContainer.onTitleAreaUpdate(() => this.updateTitleArea()));\n\t\tthis.viewPaneContainer.create(parent);\n\t}\n\n\toverride setVisible(visible: boolean): void {\n\t\tsuper.setVisible(visible);\n\t\tthis.viewPaneContainer?.setVisible(visible);\n\t}\n\n\tlayout(dimension: Dimension): void {\n\t\tthis.viewPaneContainer?.layout(dimension);\n\t}\n\n\tsetBoundarySashes(sashes: IBoundarySashes): void {\n\t\tthis.viewPaneContainer?.setBoundarySashes(sashes);\n\t}\n\n\tgetOptimalWidth(): number {\n\t\treturn this.viewPaneContainer?.getOptimalWidth() ?? 0;\n\t}\n\n\topenView<T extends IView>(id: string, focus?: boolean): T | undefined {\n\t\treturn this.viewPaneContainer?.openView(id, focus) as T;\n\t}\n\n\tgetViewPaneContainer(): ViewPaneContainer | undefined {\n\t\treturn this.viewPaneContainer;\n\t}\n\n\toverride getActionsContext(): unknown {\n\t\treturn this.getViewPaneContainer()?.getActionsContext();\n\t}\n\n\toverride getContextMenuActions(): readonly IAction[] {\n\t\treturn this.viewPaneContainer?.menuActions?.getContextMenuActions() ?? [];\n\t}\n\n\toverride getMenuIds(): MenuId[] {\n\t\tconst result: MenuId[] = [];\n\t\tif (this.viewPaneContainer?.menuActions) {\n\t\t\tresult.push(this.viewPaneContainer.menuActions.menuId);\n\t\t\tif (this.viewPaneContainer.isViewMergedWithContainer()) {\n\t\t\t\tresult.push(this.viewPaneContainer.panes[0].menuActions.menuId);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\toverride getActions(): readonly IAction[] {\n\t\tconst result = [];\n\t\tif (this.viewPaneContainer?.menuActions) {\n\t\t\tresult.push(...this.viewPaneContainer.menuActions.getPrimaryActions());\n\t\t\tif (this.viewPaneContainer.isViewMergedWithContainer()) {\n\t\t\t\tconst viewPane = this.viewPaneContainer.panes[0];\n\t\t\t\tif (viewPane.shouldShowFilterInHeader()) {\n\t\t\t\t\tresult.push(VIEWPANE_FILTER_ACTION);\n\t\t\t\t}\n\t\t\t\tresult.push(...viewPane.menuActions.getPrimaryActions());\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\toverride getSecondaryActions(): readonly IAction[] {\n\t\tif (!this.viewPaneContainer?.menuActions) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst viewPaneActions = this.viewPaneContainer.isViewMergedWithContainer() ? this.viewPaneContainer.panes[0].menuActions.getSecondaryActions() : [];\n\t\tlet menuActions = this.viewPaneContainer.menuActions.getSecondaryActions();\n\n\t\tconst viewsSubmenuActionIndex = menuActions.findIndex(action => action instanceof SubmenuItemAction && action.item.submenu === ViewsSubMenu);\n\t\tif (viewsSubmenuActionIndex !== -1) {\n\t\t\tconst viewsSubmenuAction = <SubmenuItemAction>menuActions[viewsSubmenuActionIndex];\n\t\t\tif (viewsSubmenuAction.actions.some(({ enabled }) => enabled)) {\n\t\t\t\tif (menuActions.length === 1 && viewPaneActions.length === 0) {\n\t\t\t\t\tmenuActions = viewsSubmenuAction.actions.slice();\n\t\t\t\t} else if (viewsSubmenuActionIndex !== 0) {\n\t\t\t\t\tmenuActions = [viewsSubmenuAction, ...menuActions.slice(0, viewsSubmenuActionIndex), ...menuActions.slice(viewsSubmenuActionIndex + 1)];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Remove views submenu if none of the actions are enabled\n\t\t\t\tmenuActions.splice(viewsSubmenuActionIndex, 1);\n\t\t\t}\n\t\t}\n\n\t\tif (menuActions.length && viewPaneActions.length) {\n\t\t\treturn [\n\t\t\t\t...menuActions,\n\t\t\t\tnew Separator(),\n\t\t\t\t...viewPaneActions\n\t\t\t];\n\t\t}\n\n\t\treturn menuActions.length ? menuActions : viewPaneActions;\n\t}\n\n\toverride getActionViewItem(action: IAction, options: IBaseActionViewItemOptions): IActionViewItem | undefined {\n\t\treturn this.viewPaneContainer?.getActionViewItem(action, options);\n\t}\n\n\toverride getTitle(): string {\n\t\treturn this.viewPaneContainer?.getTitle() ?? '';\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\t\tthis.viewPaneContainer?.focus();\n\t}\n\n\tprotected abstract createViewPaneContainer(parent: HTMLElement): ViewPaneContainer;\n}\n\n\n/**\n * A Pane Composite descriptor is a lightweight descriptor of a Pane Composite in the workbench.\n */\nexport class PaneCompositeDescriptor extends CompositeDescriptor<PaneComposite> {\n\n\tstatic create<Services extends BrandedService[]>(\n\t\tctor: { new(...services: Services): PaneComposite },\n\t\tid: string,\n\t\tname: string,\n\t\tcssClass?: string,\n\t\torder?: number,\n\t\trequestedIndex?: number,\n\t\ticonUrl?: URI\n\t): PaneCompositeDescriptor {\n\n\t\treturn new PaneCompositeDescriptor(ctor as IConstructorSignature<PaneComposite>, id, name, cssClass, order, requestedIndex, iconUrl);\n\t}\n\n\tprivate constructor(\n\t\tctor: IConstructorSignature<PaneComposite>,\n\t\tid: string,\n\t\tname: string,\n\t\tcssClass?: string,\n\t\torder?: number,\n\t\trequestedIndex?: number,\n\t\treadonly iconUrl?: URI\n\t) {\n\t\tsuper(ctor, id, name, cssClass, order, requestedIndex);\n\t}\n}\n\nexport const Extensions = {\n\tViewlets: 'workbench.contributions.viewlets',\n\tPanels: 'workbench.contributions.panels',\n\tAuxiliary: 'workbench.contributions.auxiliary',\n};\n\nexport class PaneCompositeRegistry extends CompositeRegistry<PaneComposite> {\n\n\t/**\n\t * Registers a viewlet to the platform.\n\t */\n\tregisterPaneComposite(descriptor: PaneCompositeDescriptor): void {\n\t\tsuper.registerComposite(descriptor);\n\t}\n\n\t/**\n\t * Deregisters a viewlet to the platform.\n\t */\n\tderegisterPaneComposite(id: string): void {\n\t\tsuper.deregisterComposite(id);\n\t}\n\n\t/**\n\t * Returns the viewlet descriptor for the given id or null if none.\n\t */\n\tgetPaneComposite(id: string): PaneCompositeDescriptor {\n\t\treturn this.getComposite(id) as PaneCompositeDescriptor;\n\t}\n\n\t/**\n\t * Returns an array of registered viewlets known to the platform.\n\t */\n\tgetPaneComposites(): PaneCompositeDescriptor[] {\n\t\treturn this.getComposites() as PaneCompositeDescriptor[];\n\t}\n}\n\nRegistry.add(Extensions.Viewlets, new PaneCompositeRegistry());\nRegistry.add(Extensions.Panels, new PaneCompositeRegistry());\nRegistry.add(Extensions.Auxiliary, new PaneCompositeRegistry());\n"],
  "mappings": "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",
  "names": []
}
