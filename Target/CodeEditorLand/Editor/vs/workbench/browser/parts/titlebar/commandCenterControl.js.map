{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/titlebar/commandCenterControl.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isActiveDocument, reset } from '../../../../base/browser/dom.js';\nimport { BaseActionViewItem, IBaseActionViewItemOptions } from '../../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { getDefaultHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegateFactory.js';\nimport { IHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegate.js';\nimport { renderIcon } from '../../../../base/browser/ui/iconLabel/iconLabels.js';\nimport { IAction, SubmenuAction } from '../../../../base/common/actions.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { localize } from '../../../../nls.js';\nimport { createActionViewItem } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { HiddenItemStrategy, MenuWorkbenchToolBar, WorkbenchToolBar } from '../../../../platform/actions/browser/toolbar.js';\nimport { MenuId, MenuRegistry, SubmenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { WindowTitle } from './windowTitle.js';\nimport { IEditorGroupsService } from '../../../services/editor/common/editorGroupsService.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\n\nexport class CommandCenterControl {\n\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate readonly _onDidChangeVisibility = new Emitter<void>();\n\treadonly onDidChangeVisibility: Event<void> = this._onDidChangeVisibility.event;\n\n\treadonly element: HTMLElement = document.createElement('div');\n\n\tconstructor(\n\t\twindowTitle: WindowTitle,\n\t\thoverDelegate: IHoverDelegate,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IQuickInputService quickInputService: IQuickInputService,\n\t) {\n\t\tthis.element.classList.add('command-center');\n\n\t\tconst titleToolbar = instantiationService.createInstance(MenuWorkbenchToolBar, this.element, MenuId.CommandCenter, {\n\t\t\tcontextMenu: MenuId.TitleBarContext,\n\t\t\thiddenItemStrategy: HiddenItemStrategy.NoHide,\n\t\t\ttoolbarOptions: {\n\t\t\t\tprimaryGroup: () => true,\n\t\t\t},\n\t\t\ttelemetrySource: 'commandCenter',\n\t\t\tactionViewItemProvider: (action, options) => {\n\t\t\t\tif (action instanceof SubmenuItemAction && action.item.submenu === MenuId.CommandCenterCenter) {\n\t\t\t\t\treturn instantiationService.createInstance(CommandCenterCenterViewItem, action, windowTitle, { ...options, hoverDelegate });\n\t\t\t\t} else {\n\t\t\t\t\treturn createActionViewItem(instantiationService, action, { ...options, hoverDelegate });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._disposables.add(Event.filter(quickInputService.onShow, () => isActiveDocument(this.element), this._disposables)(this._setVisibility.bind(this, false)));\n\t\tthis._disposables.add(Event.filter(quickInputService.onHide, () => isActiveDocument(this.element), this._disposables)(this._setVisibility.bind(this, true)));\n\t\tthis._disposables.add(titleToolbar);\n\t}\n\n\tprivate _setVisibility(show: boolean): void {\n\t\tthis.element.classList.toggle('hide', !show);\n\t\tthis._onDidChangeVisibility.fire();\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n}\n\n\nclass CommandCenterCenterViewItem extends BaseActionViewItem {\n\n\tprivate static readonly _quickOpenCommandId = 'workbench.action.quickOpenWithModes';\n\n\tprivate readonly _hoverDelegate: IHoverDelegate;\n\n\tconstructor(\n\t\tprivate readonly _submenu: SubmenuItemAction,\n\t\tprivate readonly _windowTitle: WindowTitle,\n\t\toptions: IBaseActionViewItemOptions,\n\t\t@IHoverService private readonly _hoverService: IHoverService,\n\t\t@IKeybindingService private _keybindingService: IKeybindingService,\n\t\t@IInstantiationService private _instaService: IInstantiationService,\n\t\t@IEditorGroupsService private _editorGroupService: IEditorGroupsService,\n\t) {\n\t\tsuper(undefined, _submenu.actions.find(action => action.id === 'workbench.action.quickOpenWithModes') ?? _submenu.actions[0], options);\n\t\tthis._hoverDelegate = options.hoverDelegate ?? getDefaultHoverDelegate('mouse');\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\t\tcontainer.classList.add('command-center-center');\n\t\tcontainer.classList.toggle('multiple', (this._submenu.actions.length > 1));\n\n\t\tconst hover = this._store.add(this._hoverService.setupManagedHover(this._hoverDelegate, container, this.getTooltip()));\n\n\t\t// update label & tooltip when window title changes\n\t\tthis._store.add(this._windowTitle.onDidChange(() => {\n\t\t\thover.update(this.getTooltip());\n\t\t}));\n\n\t\tconst groups: (readonly IAction[])[] = [];\n\t\tfor (const action of this._submenu.actions) {\n\t\t\tif (action instanceof SubmenuAction) {\n\t\t\t\tgroups.push(action.actions);\n\t\t\t} else {\n\t\t\t\tgroups.push([action]);\n\t\t\t}\n\t\t}\n\n\n\t\tfor (let i = 0; i < groups.length; i++) {\n\t\t\tconst group = groups[i];\n\n\t\t\t// nested toolbar\n\t\t\tconst toolbar = this._instaService.createInstance(WorkbenchToolBar, container, {\n\t\t\t\thiddenItemStrategy: HiddenItemStrategy.NoHide,\n\t\t\t\ttelemetrySource: 'commandCenterCenter',\n\t\t\t\tactionViewItemProvider: (action, options) => {\n\t\t\t\t\toptions = {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\thoverDelegate: this._hoverDelegate,\n\t\t\t\t\t};\n\n\t\t\t\t\tif (action.id !== CommandCenterCenterViewItem._quickOpenCommandId) {\n\t\t\t\t\t\treturn createActionViewItem(this._instaService, action, options);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst that = this;\n\n\t\t\t\t\treturn this._instaService.createInstance(class CommandCenterQuickPickItem extends BaseActionViewItem {\n\n\t\t\t\t\t\tconstructor() {\n\t\t\t\t\t\t\tsuper(undefined, action, options);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toverride render(container: HTMLElement): void {\n\t\t\t\t\t\t\tsuper.render(container);\n\t\t\t\t\t\t\tcontainer.classList.toggle('command-center-quick-pick');\n\t\t\t\t\t\t\tcontainer.role = 'button';\n\t\t\t\t\t\t\tconst action = this.action;\n\n\t\t\t\t\t\t\t// icon (search)\n\t\t\t\t\t\t\tconst searchIcon = document.createElement('span');\n\t\t\t\t\t\t\tsearchIcon.ariaHidden = 'true';\n\t\t\t\t\t\t\tsearchIcon.className = action.class ?? '';\n\t\t\t\t\t\t\tsearchIcon.classList.add('search-icon');\n\n\t\t\t\t\t\t\t// label: just workspace name and optional decorations\n\t\t\t\t\t\t\tconst label = this._getLabel();\n\t\t\t\t\t\t\tconst labelElement = document.createElement('span');\n\t\t\t\t\t\t\tlabelElement.classList.add('search-label');\n\t\t\t\t\t\t\tlabelElement.innerText = label;\n\t\t\t\t\t\t\treset(container, searchIcon, labelElement);\n\n\t\t\t\t\t\t\tconst hover = this._store.add(that._hoverService.setupManagedHover(that._hoverDelegate, container, this.getTooltip()));\n\n\t\t\t\t\t\t\t// update label & tooltip when window title changes\n\t\t\t\t\t\t\tthis._store.add(that._windowTitle.onDidChange(() => {\n\t\t\t\t\t\t\t\thover.update(this.getTooltip());\n\t\t\t\t\t\t\t\tlabelElement.innerText = this._getLabel();\n\t\t\t\t\t\t\t}));\n\n\t\t\t\t\t\t\t// update label & tooltip when tabs visibility changes\n\t\t\t\t\t\t\tthis._store.add(that._editorGroupService.onDidChangeEditorPartOptions(({ newPartOptions, oldPartOptions }) => {\n\t\t\t\t\t\t\t\tif (newPartOptions.showTabs !== oldPartOptions.showTabs) {\n\t\t\t\t\t\t\t\t\thover.update(this.getTooltip());\n\t\t\t\t\t\t\t\t\tlabelElement.innerText = this._getLabel();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprotected override getTooltip() {\n\t\t\t\t\t\t\treturn that.getTooltip();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprivate _getLabel(): string {\n\t\t\t\t\t\t\tconst { prefix, suffix } = that._windowTitle.getTitleDecorations();\n\t\t\t\t\t\t\tlet label = that._windowTitle.workspaceName;\n\t\t\t\t\t\t\tif (that._windowTitle.isCustomTitleFormat()) {\n\t\t\t\t\t\t\t\tlabel = that._windowTitle.getWindowTitle();\n\t\t\t\t\t\t\t} else if (that._editorGroupService.partOptions.showTabs === 'none') {\n\t\t\t\t\t\t\t\tlabel = that._windowTitle.fileName ?? label;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!label) {\n\t\t\t\t\t\t\t\tlabel = localize('label.dfl', \"Search\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (prefix) {\n\t\t\t\t\t\t\t\tlabel = localize('label1', \"{0} {1}\", prefix, label);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (suffix) {\n\t\t\t\t\t\t\t\tlabel = localize('label2', \"{0} {1}\", label, suffix);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn label.replaceAll(/\\r\\n|\\r|\\n/g, '\\u23CE');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t\ttoolbar.setActions(group);\n\t\t\tthis._store.add(toolbar);\n\n\n\t\t\t// spacer\n\t\t\tif (i < groups.length - 1) {\n\t\t\t\tconst icon = renderIcon(Codicon.circleSmallFilled);\n\t\t\t\ticon.style.padding = '0 12px';\n\t\t\t\ticon.style.height = '100%';\n\t\t\t\ticon.style.opacity = '0.5';\n\t\t\t\tcontainer.appendChild(icon);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected override getTooltip() {\n\n\t\t// tooltip: full windowTitle\n\t\tconst kb = this._keybindingService.lookupKeybinding(this.action.id)?.getLabel();\n\t\tconst title = kb\n\t\t\t? localize('title', \"Search {0} ({1}) \\u2014 {2}\", this._windowTitle.workspaceName, kb, this._windowTitle.value)\n\t\t\t: localize('title2', \"Search {0} \\u2014 {1}\", this._windowTitle.workspaceName, this._windowTitle.value);\n\n\t\treturn title;\n\t}\n}\n\nMenuRegistry.appendMenuItem(MenuId.CommandCenter, {\n\tsubmenu: MenuId.CommandCenterCenter,\n\ttitle: localize('title3', \"Command Center\"),\n\ticon: Codicon.shield,\n\torder: 101,\n});\n"],
  "mappings": "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",
  "names": ["container", "action", "hover"]
}
