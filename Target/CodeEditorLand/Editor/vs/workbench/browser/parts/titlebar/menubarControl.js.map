{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/titlebar/menubarControl.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './media/menubarControl.css';\nimport { localize, localize2 } from '../../../../nls.js';\nimport { IMenuService, MenuId, IMenu, SubmenuItemAction, registerAction2, Action2, MenuItemAction, MenuRegistry } from '../../../../platform/actions/common/actions.js';\nimport { MenuBarVisibility, IWindowOpenable, getMenuBarVisibility, hasNativeTitlebar, TitleBarSetting } from '../../../../platform/window/common/window.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IAction, Action, SubmenuAction, Separator, IActionRunner, ActionRunner, WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification, toAction } from '../../../../base/common/actions.js';\nimport { addDisposableListener, Dimension, EventType } from '../../../../base/browser/dom.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { isMacintosh, isWeb, isIOS, isNative } from '../../../../base/common/platform.js';\nimport { IConfigurationService, IConfigurationChangeEvent } from '../../../../platform/configuration/common/configuration.js';\nimport { Event, Emitter } from '../../../../base/common/event.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { IRecentlyOpened, isRecentFolder, IRecent, isRecentWorkspace, IWorkspacesService } from '../../../../platform/workspaces/common/workspaces.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ILabelService, Verbosity } from '../../../../platform/label/common/label.js';\nimport { IUpdateService, StateType } from '../../../../platform/update/common/update.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../platform/storage/common/storage.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport { IPreferencesService } from '../../../services/preferences/common/preferences.js';\nimport { IWorkbenchEnvironmentService } from '../../../services/environment/common/environmentService.js';\nimport { MenuBar, IMenuBarOptions } from '../../../../base/browser/ui/menu/menubar.js';\nimport { HorizontalDirection, IMenuDirection, VerticalDirection } from '../../../../base/browser/ui/menu/menu.js';\nimport { mnemonicMenuLabel, unmnemonicLabel } from '../../../../base/common/labels.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { isFullscreen, onDidChangeFullscreen } from '../../../../base/browser/browser.js';\nimport { IHostService } from '../../../services/host/browser/host.js';\nimport { BrowserFeatures } from '../../../../base/browser/canIUse.js';\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { IsMacNativeContext, IsWebContext } from '../../../../platform/contextkey/common/contextkeys.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { OpenRecentAction } from '../../actions/windowActions.js';\nimport { isICommandActionToggleInfo } from '../../../../platform/action/common/action.js';\nimport { createAndFillInContextMenuActions } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { defaultMenuStyles } from '../../../../platform/theme/browser/defaultStyles.js';\nimport { mainWindow } from '../../../../base/browser/window.js';\nimport { ActivityBarPosition } from '../../../services/layout/browser/layoutService.js';\n\nexport type IOpenRecentAction = IAction & { uri: URI; remoteAuthority?: string };\n\nMenuRegistry.appendMenuItem(MenuId.MenubarMainMenu, {\n\tsubmenu: MenuId.MenubarFileMenu,\n\ttitle: {\n\t\tvalue: 'File',\n\t\toriginal: 'File',\n\t\tmnemonicTitle: localize({ key: 'mFile', comment: ['&& denotes a mnemonic'] }, \"&&File\"),\n\t},\n\torder: 1\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarMainMenu, {\n\tsubmenu: MenuId.MenubarEditMenu,\n\ttitle: {\n\t\tvalue: 'Edit',\n\t\toriginal: 'Edit',\n\t\tmnemonicTitle: localize({ key: 'mEdit', comment: ['&& denotes a mnemonic'] }, \"&&Edit\")\n\t},\n\torder: 2\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarMainMenu, {\n\tsubmenu: MenuId.MenubarSelectionMenu,\n\ttitle: {\n\t\tvalue: 'Selection',\n\t\toriginal: 'Selection',\n\t\tmnemonicTitle: localize({ key: 'mSelection', comment: ['&& denotes a mnemonic'] }, \"&&Selection\")\n\t},\n\torder: 3\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarMainMenu, {\n\tsubmenu: MenuId.MenubarViewMenu,\n\ttitle: {\n\t\tvalue: 'View',\n\t\toriginal: 'View',\n\t\tmnemonicTitle: localize({ key: 'mView', comment: ['&& denotes a mnemonic'] }, \"&&View\")\n\t},\n\torder: 4\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarMainMenu, {\n\tsubmenu: MenuId.MenubarGoMenu,\n\ttitle: {\n\t\tvalue: 'Go',\n\t\toriginal: 'Go',\n\t\tmnemonicTitle: localize({ key: 'mGoto', comment: ['&& denotes a mnemonic'] }, \"&&Go\")\n\t},\n\torder: 5\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarMainMenu, {\n\tsubmenu: MenuId.MenubarTerminalMenu,\n\ttitle: {\n\t\tvalue: 'Terminal',\n\t\toriginal: 'Terminal',\n\t\tmnemonicTitle: localize({ key: 'mTerminal', comment: ['&& denotes a mnemonic'] }, \"&&Terminal\")\n\t},\n\torder: 7\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarMainMenu, {\n\tsubmenu: MenuId.MenubarHelpMenu,\n\ttitle: {\n\t\tvalue: 'Help',\n\t\toriginal: 'Help',\n\t\tmnemonicTitle: localize({ key: 'mHelp', comment: ['&& denotes a mnemonic'] }, \"&&Help\")\n\t},\n\torder: 8\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarMainMenu, {\n\tsubmenu: MenuId.MenubarPreferencesMenu,\n\ttitle: {\n\t\tvalue: 'Preferences',\n\t\toriginal: 'Preferences',\n\t\tmnemonicTitle: localize({ key: 'mPreferences', comment: ['&& denotes a mnemonic'] }, \"Preferences\")\n\t},\n\twhen: IsMacNativeContext,\n\torder: 9\n});\n\nexport abstract class MenubarControl extends Disposable {\n\n\tprotected keys = [\n\t\t'window.menuBarVisibility',\n\t\t'window.enableMenuBarMnemonics',\n\t\t'window.customMenuBarAltFocus',\n\t\t'workbench.sideBar.location',\n\t\t'window.nativeTabs'\n\t];\n\n\tprotected mainMenu: IMenu;\n\tprotected menus: {\n\t\t[index: string]: IMenu | undefined;\n\t} = {};\n\n\tprotected topLevelTitles: { [menu: string]: string } = {};\n\n\tprotected readonly mainMenuDisposables: DisposableStore;\n\n\tprotected recentlyOpened: IRecentlyOpened = { files: [], workspaces: [] };\n\n\tprotected menuUpdater: RunOnceScheduler;\n\n\tprotected static readonly MAX_MENU_RECENT_ENTRIES = 10;\n\n\tconstructor(\n\t\tprotected readonly menuService: IMenuService,\n\t\tprotected readonly workspacesService: IWorkspacesService,\n\t\tprotected readonly contextKeyService: IContextKeyService,\n\t\tprotected readonly keybindingService: IKeybindingService,\n\t\tprotected readonly configurationService: IConfigurationService,\n\t\tprotected readonly labelService: ILabelService,\n\t\tprotected readonly updateService: IUpdateService,\n\t\tprotected readonly storageService: IStorageService,\n\t\tprotected readonly notificationService: INotificationService,\n\t\tprotected readonly preferencesService: IPreferencesService,\n\t\tprotected readonly environmentService: IWorkbenchEnvironmentService,\n\t\tprotected readonly accessibilityService: IAccessibilityService,\n\t\tprotected readonly hostService: IHostService,\n\t\tprotected readonly commandService: ICommandService\n\t) {\n\n\t\tsuper();\n\n\t\tthis.mainMenu = this._register(this.menuService.createMenu(MenuId.MenubarMainMenu, this.contextKeyService));\n\t\tthis.mainMenuDisposables = this._register(new DisposableStore());\n\n\t\tthis.setupMainMenu();\n\n\t\tthis.menuUpdater = this._register(new RunOnceScheduler(() => this.doUpdateMenubar(false), 200));\n\n\t\tthis.notifyUserOfCustomMenubarAccessibility();\n\t}\n\n\tprotected abstract doUpdateMenubar(firstTime: boolean): void;\n\n\tprotected registerListeners(): void {\n\t\t// Listen for window focus changes\n\t\tthis._register(this.hostService.onDidChangeFocus(e => this.onDidChangeWindowFocus(e)));\n\n\t\t// Update when config changes\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => this.onConfigurationUpdated(e)));\n\n\t\t// Listen to update service\n\t\tthis._register(this.updateService.onStateChange(() => this.onUpdateStateChange()));\n\n\t\t// Listen for changes in recently opened menu\n\t\tthis._register(this.workspacesService.onDidChangeRecentlyOpened(() => { this.onDidChangeRecentlyOpened(); }));\n\n\t\t// Listen to keybindings change\n\t\tthis._register(this.keybindingService.onDidUpdateKeybindings(() => this.updateMenubar()));\n\n\t\t// Update recent menu items on formatter registration\n\t\tthis._register(this.labelService.onDidChangeFormatters(() => { this.onDidChangeRecentlyOpened(); }));\n\n\t\t// Listen for changes on the main menu\n\t\tthis._register(this.mainMenu.onDidChange(() => { this.setupMainMenu(); this.doUpdateMenubar(true); }));\n\t}\n\n\tprotected setupMainMenu(): void {\n\t\tthis.mainMenuDisposables.clear();\n\t\tthis.menus = {};\n\t\tthis.topLevelTitles = {};\n\n\t\tconst [, mainMenuActions] = this.mainMenu.getActions()[0];\n\t\tfor (const mainMenuAction of mainMenuActions) {\n\t\t\tif (mainMenuAction instanceof SubmenuItemAction && typeof mainMenuAction.item.title !== 'string') {\n\t\t\t\tthis.menus[mainMenuAction.item.title.original] = this.mainMenuDisposables.add(this.menuService.createMenu(mainMenuAction.item.submenu, this.contextKeyService, { emitEventsForSubmenuChanges: true }));\n\t\t\t\tthis.topLevelTitles[mainMenuAction.item.title.original] = mainMenuAction.item.title.mnemonicTitle ?? mainMenuAction.item.title.value;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected updateMenubar(): void {\n\t\tthis.menuUpdater.schedule();\n\t}\n\n\tprotected calculateActionLabel(action: { id: string; label: string }): string {\n\t\tconst label = action.label;\n\t\tswitch (action.id) {\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn label;\n\t}\n\n\tprotected onUpdateStateChange(): void {\n\t\tthis.updateMenubar();\n\t}\n\n\tprotected onUpdateKeybindings(): void {\n\t\tthis.updateMenubar();\n\t}\n\n\tprotected getOpenRecentActions(): (Separator | IOpenRecentAction)[] {\n\t\tif (!this.recentlyOpened) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst { workspaces, files } = this.recentlyOpened;\n\n\t\tconst result = [];\n\n\t\tif (workspaces.length > 0) {\n\t\t\tfor (let i = 0; i < MenubarControl.MAX_MENU_RECENT_ENTRIES && i < workspaces.length; i++) {\n\t\t\t\tresult.push(this.createOpenRecentMenuAction(workspaces[i]));\n\t\t\t}\n\n\t\t\tresult.push(new Separator());\n\t\t}\n\n\t\tif (files.length > 0) {\n\t\t\tfor (let i = 0; i < MenubarControl.MAX_MENU_RECENT_ENTRIES && i < files.length; i++) {\n\t\t\t\tresult.push(this.createOpenRecentMenuAction(files[i]));\n\t\t\t}\n\n\t\t\tresult.push(new Separator());\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprotected onDidChangeWindowFocus(hasFocus: boolean): void {\n\t\t// When we regain focus, update the recent menu items\n\t\tif (hasFocus) {\n\t\t\tthis.onDidChangeRecentlyOpened();\n\t\t}\n\t}\n\n\tprivate onConfigurationUpdated(event: IConfigurationChangeEvent): void {\n\t\tif (this.keys.some(key => event.affectsConfiguration(key))) {\n\t\t\tthis.updateMenubar();\n\t\t}\n\n\t\tif (event.affectsConfiguration('editor.accessibilitySupport')) {\n\t\t\tthis.notifyUserOfCustomMenubarAccessibility();\n\t\t}\n\n\t\t// Since we try not update when hidden, we should\n\t\t// try to update the recently opened list on visibility changes\n\t\tif (event.affectsConfiguration('window.menuBarVisibility')) {\n\t\t\tthis.onDidChangeRecentlyOpened();\n\t\t}\n\t}\n\n\tprivate get menubarHidden(): boolean {\n\t\treturn isMacintosh && isNative ? false : getMenuBarVisibility(this.configurationService) === 'hidden';\n\t}\n\n\tprotected onDidChangeRecentlyOpened(): void {\n\n\t\t// Do not update recently opened when the menubar is hidden #108712\n\t\tif (!this.menubarHidden) {\n\t\t\tthis.workspacesService.getRecentlyOpened().then(recentlyOpened => {\n\t\t\t\tthis.recentlyOpened = recentlyOpened;\n\t\t\t\tthis.updateMenubar();\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate createOpenRecentMenuAction(recent: IRecent): IOpenRecentAction {\n\n\t\tlet label: string;\n\t\tlet uri: URI;\n\t\tlet commandId: string;\n\t\tlet openable: IWindowOpenable;\n\t\tconst remoteAuthority = recent.remoteAuthority;\n\n\t\tif (isRecentFolder(recent)) {\n\t\t\turi = recent.folderUri;\n\t\t\tlabel = recent.label || this.labelService.getWorkspaceLabel(uri, { verbose: Verbosity.LONG });\n\t\t\tcommandId = 'openRecentFolder';\n\t\t\topenable = { folderUri: uri };\n\t\t} else if (isRecentWorkspace(recent)) {\n\t\t\turi = recent.workspace.configPath;\n\t\t\tlabel = recent.label || this.labelService.getWorkspaceLabel(recent.workspace, { verbose: Verbosity.LONG });\n\t\t\tcommandId = 'openRecentWorkspace';\n\t\t\topenable = { workspaceUri: uri };\n\t\t} else {\n\t\t\turi = recent.fileUri;\n\t\t\tlabel = recent.label || this.labelService.getUriLabel(uri);\n\t\t\tcommandId = 'openRecentFile';\n\t\t\topenable = { fileUri: uri };\n\t\t}\n\n\t\tconst ret = toAction({\n\t\t\tid: commandId, label: unmnemonicLabel(label), run: (browserEvent: KeyboardEvent) => {\n\t\t\t\tconst openInNewWindow = browserEvent && ((!isMacintosh && (browserEvent.ctrlKey || browserEvent.shiftKey)) || (isMacintosh && (browserEvent.metaKey || browserEvent.altKey)));\n\n\t\t\t\treturn this.hostService.openWindow([openable], {\n\t\t\t\t\tforceNewWindow: !!openInNewWindow,\n\t\t\t\t\tremoteAuthority: remoteAuthority || null // local window if remoteAuthority is not set or can not be deducted from the openable\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn Object.assign(ret, { uri, remoteAuthority });\n\t}\n\n\tprivate notifyUserOfCustomMenubarAccessibility(): void {\n\t\tif (isWeb || isMacintosh) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst hasBeenNotified = this.storageService.getBoolean('menubar/accessibleMenubarNotified', StorageScope.APPLICATION, false);\n\t\tconst usingCustomMenubar = !hasNativeTitlebar(this.configurationService);\n\n\t\tif (hasBeenNotified || usingCustomMenubar || !this.accessibilityService.isScreenReaderOptimized()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = localize('menubar.customTitlebarAccessibilityNotification', \"Accessibility support is enabled for you. For the most accessible experience, we recommend the custom title bar style.\");\n\t\tthis.notificationService.prompt(Severity.Info, message, [\n\t\t\t{\n\t\t\t\tlabel: localize('goToSetting', \"Open Settings\"),\n\t\t\t\trun: () => {\n\t\t\t\t\treturn this.preferencesService.openUserSettings({ query: TitleBarSetting.TITLE_BAR_STYLE });\n\t\t\t\t}\n\t\t\t}\n\t\t]);\n\n\t\tthis.storageService.store('menubar/accessibleMenubarNotified', true, StorageScope.APPLICATION, StorageTarget.USER);\n\t}\n}\n\n// This is a bit complex due to the issue https://github.com/microsoft/vscode/issues/205836\nlet focusMenuBarEmitter: Emitter<void> | undefined = undefined;\nfunction enableFocusMenuBarAction(): Emitter<void> {\n\tif (!focusMenuBarEmitter) {\n\t\tfocusMenuBarEmitter = new Emitter<void>();\n\n\t\tregisterAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: `workbench.actions.menubar.focus`,\n\t\t\t\t\ttitle: localize2('focusMenu', 'Focus Application Menu'),\n\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\tprimary: KeyMod.Alt | KeyCode.F10,\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\twhen: IsWebContext\n\t\t\t\t\t},\n\t\t\t\t\tf1: true\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tasync run(): Promise<void> {\n\t\t\t\tfocusMenuBarEmitter?.fire();\n\t\t\t}\n\t\t});\n\t}\n\n\treturn focusMenuBarEmitter;\n}\n\nexport class CustomMenubarControl extends MenubarControl {\n\tprivate menubar: MenuBar | undefined;\n\tprivate container: HTMLElement | undefined;\n\tprivate alwaysOnMnemonics: boolean = false;\n\tprivate focusInsideMenubar: boolean = false;\n\tprivate pendingFirstTimeUpdate: boolean = false;\n\tprivate visible: boolean = true;\n\tprivate actionRunner: IActionRunner;\n\tprivate readonly webNavigationMenu = this._register(this.menuService.createMenu(MenuId.MenubarHomeMenu, this.contextKeyService));\n\n\tprivate readonly _onVisibilityChange: Emitter<boolean>;\n\tprivate readonly _onFocusStateChange: Emitter<boolean>;\n\n\tconstructor(\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IWorkspacesService workspacesService: IWorkspacesService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IUpdateService updateService: IUpdateService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IPreferencesService preferencesService: IPreferencesService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IAccessibilityService accessibilityService: IAccessibilityService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IHostService hostService: IHostService,\n\t\t@ICommandService commandService: ICommandService\n\t) {\n\t\tsuper(menuService, workspacesService, contextKeyService, keybindingService, configurationService, labelService, updateService, storageService, notificationService, preferencesService, environmentService, accessibilityService, hostService, commandService);\n\n\t\tthis._onVisibilityChange = this._register(new Emitter<boolean>());\n\t\tthis._onFocusStateChange = this._register(new Emitter<boolean>());\n\n\t\tthis.actionRunner = this._register(new ActionRunner());\n\t\tthis.actionRunner.onDidRun(e => {\n\t\t\tthis.telemetryService.publicLog2<WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification>('workbenchActionExecuted', { id: e.action.id, from: 'menu' });\n\t\t});\n\n\t\tthis.workspacesService.getRecentlyOpened().then((recentlyOpened) => {\n\t\t\tthis.recentlyOpened = recentlyOpened;\n\t\t});\n\n\t\tthis.registerListeners();\n\t}\n\n\tprotected doUpdateMenubar(firstTime: boolean): void {\n\t\tif (!this.focusInsideMenubar) {\n\t\t\tthis.setupCustomMenubar(firstTime);\n\t\t}\n\n\t\tif (firstTime) {\n\t\t\tthis.pendingFirstTimeUpdate = true;\n\t\t}\n\t}\n\n\tprivate getUpdateAction(): IAction | null {\n\t\tconst state = this.updateService.state;\n\n\t\tswitch (state.type) {\n\t\t\tcase StateType.Idle:\n\t\t\t\treturn new Action('update.check', localize({ key: 'checkForUpdates', comment: ['&& denotes a mnemonic'] }, \"Check for &&Updates...\"), undefined, true, () =>\n\t\t\t\t\tthis.updateService.checkForUpdates(true));\n\n\t\t\tcase StateType.CheckingForUpdates:\n\t\t\t\treturn new Action('update.checking', localize('checkingForUpdates', \"Checking for Updates...\"), undefined, false);\n\n\t\t\tcase StateType.AvailableForDownload:\n\t\t\t\treturn new Action('update.downloadNow', localize({ key: 'download now', comment: ['&& denotes a mnemonic'] }, \"D&&ownload Update\"), undefined, true, () =>\n\t\t\t\t\tthis.updateService.downloadUpdate());\n\n\t\t\tcase StateType.Downloading:\n\t\t\t\treturn new Action('update.downloading', localize('DownloadingUpdate', \"Downloading Update...\"), undefined, false);\n\n\t\t\tcase StateType.Downloaded:\n\t\t\t\treturn isMacintosh ? null : new Action('update.install', localize({ key: 'installUpdate...', comment: ['&& denotes a mnemonic'] }, \"Install &&Update...\"), undefined, true, () =>\n\t\t\t\t\tthis.updateService.applyUpdate());\n\n\t\t\tcase StateType.Updating:\n\t\t\t\treturn new Action('update.updating', localize('installingUpdate', \"Installing Update...\"), undefined, false);\n\n\t\t\tcase StateType.Ready:\n\t\t\t\treturn new Action('update.restart', localize({ key: 'restartToUpdate', comment: ['&& denotes a mnemonic'] }, \"Restart to &&Update\"), undefined, true, () =>\n\t\t\t\t\tthis.updateService.quitAndInstall());\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate get currentMenubarVisibility(): MenuBarVisibility {\n\t\treturn getMenuBarVisibility(this.configurationService);\n\t}\n\n\tprivate get currentDisableMenuBarAltFocus(): boolean {\n\t\tconst settingValue = this.configurationService.getValue<boolean>('window.customMenuBarAltFocus');\n\n\t\tlet disableMenuBarAltBehavior = false;\n\t\tif (typeof settingValue === 'boolean') {\n\t\t\tdisableMenuBarAltBehavior = !settingValue;\n\t\t}\n\n\t\treturn disableMenuBarAltBehavior;\n\t}\n\n\tprivate insertActionsBefore(nextAction: IAction, target: IAction[]): void {\n\t\tswitch (nextAction.id) {\n\t\t\tcase OpenRecentAction.ID:\n\t\t\t\ttarget.push(...this.getOpenRecentActions());\n\t\t\t\tbreak;\n\n\t\t\tcase 'workbench.action.showAboutDialog':\n\t\t\t\tif (!isMacintosh && !isWeb) {\n\t\t\t\t\tconst updateAction = this.getUpdateAction();\n\t\t\t\t\tif (updateAction) {\n\t\t\t\t\t\tupdateAction.label = mnemonicMenuLabel(updateAction.label);\n\t\t\t\t\t\ttarget.push(updateAction);\n\t\t\t\t\t\ttarget.push(new Separator());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate get currentEnableMenuBarMnemonics(): boolean {\n\t\tlet enableMenuBarMnemonics = this.configurationService.getValue<boolean>('window.enableMenuBarMnemonics');\n\t\tif (typeof enableMenuBarMnemonics !== 'boolean') {\n\t\t\tenableMenuBarMnemonics = true;\n\t\t}\n\n\t\treturn enableMenuBarMnemonics && (!isWeb || isFullscreen(mainWindow));\n\t}\n\n\tprivate get currentCompactMenuMode(): IMenuDirection | undefined {\n\t\tif (this.currentMenubarVisibility !== 'compact') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Menu bar lives in activity bar and should flow based on its location\n\t\tconst currentSidebarLocation = this.configurationService.getValue<string>('workbench.sideBar.location');\n\t\tconst horizontalDirection = currentSidebarLocation === 'right' ? HorizontalDirection.Left : HorizontalDirection.Right;\n\n\t\tconst activityBarLocation = this.configurationService.getValue<string>('workbench.activityBar.location');\n\t\tconst verticalDirection = activityBarLocation === ActivityBarPosition.BOTTOM ? VerticalDirection.Above : VerticalDirection.Below;\n\n\t\treturn { horizontal: horizontalDirection, vertical: verticalDirection };\n\t}\n\n\tprivate onDidVisibilityChange(visible: boolean): void {\n\t\tthis.visible = visible;\n\t\tthis.onDidChangeRecentlyOpened();\n\t\tthis._onVisibilityChange.fire(visible);\n\t}\n\n\tprivate toActionsArray(menu: IMenu): IAction[] {\n\t\tconst result: IAction[] = [];\n\t\tcreateAndFillInContextMenuActions(menu, { shouldForwardArgs: true }, result);\n\t\treturn result;\n\t}\n\n\tprivate readonly reinstallDisposables = this._register(new DisposableStore());\n\tprivate setupCustomMenubar(firstTime: boolean): void {\n\t\t// If there is no container, we cannot setup the menubar\n\t\tif (!this.container) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstTime) {\n\t\t\t// Reset and create new menubar\n\t\t\tif (this.menubar) {\n\t\t\t\tthis.reinstallDisposables.clear();\n\t\t\t}\n\n\t\t\tthis.menubar = this.reinstallDisposables.add(new MenuBar(this.container, this.getMenuBarOptions(), defaultMenuStyles));\n\n\t\t\tthis.accessibilityService.alwaysUnderlineAccessKeys().then(val => {\n\t\t\t\tthis.alwaysOnMnemonics = val;\n\t\t\t\tthis.menubar?.update(this.getMenuBarOptions());\n\t\t\t});\n\n\t\t\tthis.reinstallDisposables.add(this.menubar.onFocusStateChange(focused => {\n\t\t\t\tthis._onFocusStateChange.fire(focused);\n\n\t\t\t\t// When the menubar loses focus, update it to clear any pending updates\n\t\t\t\tif (!focused) {\n\t\t\t\t\tif (this.pendingFirstTimeUpdate) {\n\t\t\t\t\t\tthis.setupCustomMenubar(true);\n\t\t\t\t\t\tthis.pendingFirstTimeUpdate = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.updateMenubar();\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.focusInsideMenubar = false;\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tthis.reinstallDisposables.add(this.menubar.onVisibilityChange(e => this.onDidVisibilityChange(e)));\n\n\t\t\t// Before we focus the menubar, stop updates to it so that focus-related context keys will work\n\t\t\tthis.reinstallDisposables.add(addDisposableListener(this.container, EventType.FOCUS_IN, () => {\n\t\t\t\tthis.focusInsideMenubar = true;\n\t\t\t}));\n\n\t\t\tthis.reinstallDisposables.add(addDisposableListener(this.container, EventType.FOCUS_OUT, () => {\n\t\t\t\tthis.focusInsideMenubar = false;\n\t\t\t}));\n\n\t\t\t// Fire visibility change for the first install if menu is shown\n\t\t\tif (this.menubar.isVisible) {\n\t\t\t\tthis.onDidVisibilityChange(true);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.menubar?.update(this.getMenuBarOptions());\n\t\t}\n\n\t\t// Update the menu actions\n\t\tconst updateActions = (menuActions: readonly IAction[], target: IAction[], topLevelTitle: string) => {\n\t\t\ttarget.splice(0);\n\n\t\t\tfor (const menuItem of menuActions) {\n\t\t\t\tthis.insertActionsBefore(menuItem, target);\n\n\t\t\t\tif (menuItem instanceof Separator) {\n\t\t\t\t\ttarget.push(menuItem);\n\t\t\t\t} else if (menuItem instanceof SubmenuItemAction || menuItem instanceof MenuItemAction) {\n\t\t\t\t\t// use mnemonicTitle whenever possible\n\t\t\t\t\tlet title = typeof menuItem.item.title === 'string'\n\t\t\t\t\t\t? menuItem.item.title\n\t\t\t\t\t\t: menuItem.item.title.mnemonicTitle ?? menuItem.item.title.value;\n\n\t\t\t\t\tif (menuItem instanceof SubmenuItemAction) {\n\t\t\t\t\t\tconst submenuActions: SubmenuAction[] = [];\n\t\t\t\t\t\tupdateActions(menuItem.actions, submenuActions, topLevelTitle);\n\n\t\t\t\t\t\tif (submenuActions.length > 0) {\n\t\t\t\t\t\t\ttarget.push(new SubmenuAction(menuItem.id, mnemonicMenuLabel(title), submenuActions));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (isICommandActionToggleInfo(menuItem.item.toggled)) {\n\t\t\t\t\t\t\ttitle = menuItem.item.toggled.mnemonicTitle ?? menuItem.item.toggled.title ?? title;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst newAction = new Action(menuItem.id, mnemonicMenuLabel(title), menuItem.class, menuItem.enabled, () => this.commandService.executeCommand(menuItem.id));\n\t\t\t\t\t\tnewAction.tooltip = menuItem.tooltip;\n\t\t\t\t\t\tnewAction.checked = menuItem.checked;\n\t\t\t\t\t\ttarget.push(newAction);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Append web navigation menu items to the file menu when not compact\n\t\t\tif (topLevelTitle === 'File' && this.currentCompactMenuMode === undefined) {\n\t\t\t\tconst webActions = this.getWebNavigationActions();\n\t\t\t\tif (webActions.length) {\n\t\t\t\t\ttarget.push(...webActions);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfor (const title of Object.keys(this.topLevelTitles)) {\n\t\t\tconst menu = this.menus[title];\n\t\t\tif (firstTime && menu) {\n\t\t\t\tthis.reinstallDisposables.add(menu.onDidChange(() => {\n\t\t\t\t\tif (!this.focusInsideMenubar) {\n\t\t\t\t\t\tconst actions: IAction[] = [];\n\t\t\t\t\t\tupdateActions(this.toActionsArray(menu), actions, title);\n\t\t\t\t\t\tthis.menubar?.updateMenu({ actions, label: mnemonicMenuLabel(this.topLevelTitles[title]) });\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\t// For the file menu, we need to update if the web nav menu updates as well\n\t\t\t\tif (menu === this.menus.File) {\n\t\t\t\t\tthis.reinstallDisposables.add(this.webNavigationMenu.onDidChange(() => {\n\t\t\t\t\t\tif (!this.focusInsideMenubar) {\n\t\t\t\t\t\t\tconst actions: IAction[] = [];\n\t\t\t\t\t\t\tupdateActions(this.toActionsArray(menu), actions, title);\n\t\t\t\t\t\t\tthis.menubar?.updateMenu({ actions, label: mnemonicMenuLabel(this.topLevelTitles[title]) });\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst actions: IAction[] = [];\n\t\t\tif (menu) {\n\t\t\t\tupdateActions(this.toActionsArray(menu), actions, title);\n\t\t\t}\n\n\t\t\tif (this.menubar) {\n\t\t\t\tif (!firstTime) {\n\t\t\t\t\tthis.menubar.updateMenu({ actions, label: mnemonicMenuLabel(this.topLevelTitles[title]) });\n\t\t\t\t} else {\n\t\t\t\t\tthis.menubar.push({ actions, label: mnemonicMenuLabel(this.topLevelTitles[title]) });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getWebNavigationActions(): IAction[] {\n\t\tif (!isWeb) {\n\t\t\treturn []; // only for web\n\t\t}\n\n\t\tconst webNavigationActions = [];\n\t\tfor (const groups of this.webNavigationMenu.getActions()) {\n\t\t\tconst [, actions] = groups;\n\t\t\tfor (const action of actions) {\n\t\t\t\tif (action instanceof MenuItemAction) {\n\t\t\t\t\tconst title = typeof action.item.title === 'string'\n\t\t\t\t\t\t? action.item.title\n\t\t\t\t\t\t: action.item.title.mnemonicTitle ?? action.item.title.value;\n\t\t\t\t\twebNavigationActions.push(new Action(action.id, mnemonicMenuLabel(title), action.class, action.enabled, async (event?: any) => {\n\t\t\t\t\t\tthis.commandService.executeCommand(action.id, event);\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twebNavigationActions.push(new Separator());\n\t\t}\n\n\t\tif (webNavigationActions.length) {\n\t\t\twebNavigationActions.pop();\n\t\t}\n\n\t\treturn webNavigationActions;\n\t}\n\n\tprivate getMenuBarOptions(): IMenuBarOptions {\n\t\treturn {\n\t\t\tenableMnemonics: this.currentEnableMenuBarMnemonics,\n\t\t\tdisableAltFocus: this.currentDisableMenuBarAltFocus,\n\t\t\tvisibility: this.currentMenubarVisibility,\n\t\t\tactionRunner: this.actionRunner,\n\t\t\tgetKeybinding: (action) => this.keybindingService.lookupKeybinding(action.id),\n\t\t\talwaysOnMnemonics: this.alwaysOnMnemonics,\n\t\t\tcompactMode: this.currentCompactMenuMode,\n\t\t\tgetCompactMenuActions: () => {\n\t\t\t\tif (!isWeb) {\n\t\t\t\t\treturn []; // only for web\n\t\t\t\t}\n\n\t\t\t\treturn this.getWebNavigationActions();\n\t\t\t}\n\t\t};\n\t}\n\n\tprotected override onDidChangeWindowFocus(hasFocus: boolean): void {\n\t\tif (!this.visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.onDidChangeWindowFocus(hasFocus);\n\n\t\tif (this.container) {\n\t\t\tif (hasFocus) {\n\t\t\t\tthis.container.classList.remove('inactive');\n\t\t\t} else {\n\t\t\t\tthis.container.classList.add('inactive');\n\t\t\t\tthis.menubar?.blur();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected override onUpdateStateChange(): void {\n\t\tif (!this.visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.onUpdateStateChange();\n\t}\n\n\tprotected override onDidChangeRecentlyOpened(): void {\n\t\tif (!this.visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.onDidChangeRecentlyOpened();\n\t}\n\n\tprotected override onUpdateKeybindings(): void {\n\t\tif (!this.visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.onUpdateKeybindings();\n\t}\n\n\tprotected override registerListeners(): void {\n\t\tsuper.registerListeners();\n\n\t\tthis._register(addDisposableListener(mainWindow, EventType.RESIZE, () => {\n\t\t\tif (this.menubar && !(isIOS && BrowserFeatures.pointerEvents)) {\n\t\t\t\tthis.menubar.blur();\n\t\t\t}\n\t\t}));\n\n\t\t// Mnemonics require fullscreen in web\n\t\tif (isWeb) {\n\t\t\tthis._register(onDidChangeFullscreen(windowId => {\n\t\t\t\tif (windowId === mainWindow.vscodeWindowId) {\n\t\t\t\t\tthis.updateMenubar();\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis._register(this.webNavigationMenu.onDidChange(() => this.updateMenubar()));\n\t\t\tthis._register(enableFocusMenuBarAction().event(() => this.menubar?.toggleFocus()));\n\t\t}\n\t}\n\n\tget onVisibilityChange(): Event<boolean> {\n\t\treturn this._onVisibilityChange.event;\n\t}\n\n\tget onFocusStateChange(): Event<boolean> {\n\t\treturn this._onFocusStateChange.event;\n\t}\n\n\tgetMenubarItemsDimensions(): Dimension {\n\t\tif (this.menubar) {\n\t\t\treturn new Dimension(this.menubar.getWidth(), this.menubar.getHeight());\n\t\t}\n\n\t\treturn new Dimension(0, 0);\n\t}\n\n\tcreate(parent: HTMLElement): HTMLElement {\n\t\tthis.container = parent;\n\n\t\t// Build the menubar\n\t\tif (this.container) {\n\t\t\tthis.doUpdateMenubar(true);\n\t\t}\n\n\t\treturn this.container;\n\t}\n\n\tlayout(dimension: Dimension) {\n\t\tthis.menubar?.update(this.getMenuBarOptions());\n\t}\n\n\ttoggleFocus() {\n\t\tthis.menubar?.toggleFocus();\n\t}\n}\n"],
  "mappings": "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",
  "names": ["actions"]
}
