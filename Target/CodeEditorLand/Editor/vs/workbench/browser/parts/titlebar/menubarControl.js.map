{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/titlebar/menubarControl.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/menubarControl.css\";\nimport {\n\tisFullscreen,\n\tonDidChangeFullscreen,\n} from \"../../../../base/browser/browser.js\";\nimport { BrowserFeatures } from \"../../../../base/browser/canIUse.js\";\nimport {\n\tDimension,\n\tEventType,\n\taddDisposableListener,\n} from \"../../../../base/browser/dom.js\";\nimport {\n\tHorizontalDirection,\n\ttype IMenuDirection,\n\tVerticalDirection,\n} from \"../../../../base/browser/ui/menu/menu.js\";\nimport {\n\ttype IMenuBarOptions,\n\tMenuBar,\n} from \"../../../../base/browser/ui/menu/menubar.js\";\nimport { mainWindow } from \"../../../../base/browser/window.js\";\nimport {\n\tAction,\n\tActionRunner,\n\ttype IAction,\n\ttype IActionRunner,\n\tSeparator,\n\tSubmenuAction,\n\ttype WorkbenchActionExecutedClassification,\n\ttype WorkbenchActionExecutedEvent,\n\ttoAction,\n} from \"../../../../base/common/actions.js\";\nimport { RunOnceScheduler } from \"../../../../base/common/async.js\";\nimport { Emitter, type Event } from \"../../../../base/common/event.js\";\nimport { KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport {\n\tmnemonicMenuLabel,\n\tunmnemonicLabel,\n} from \"../../../../base/common/labels.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n} from \"../../../../base/common/lifecycle.js\";\nimport {\n\tisIOS,\n\tisMacintosh,\n\tisNative,\n\tisWeb,\n} from \"../../../../base/common/platform.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport { IAccessibilityService } from \"../../../../platform/accessibility/common/accessibility.js\";\nimport { isICommandActionToggleInfo } from \"../../../../platform/action/common/action.js\";\nimport { createAndFillInContextMenuActions } from \"../../../../platform/actions/browser/menuEntryActionViewItem.js\";\nimport {\n\tAction2,\n\ttype IMenu,\n\tIMenuService,\n\tMenuId,\n\tMenuItemAction,\n\tMenuRegistry,\n\tSubmenuItemAction,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport {\n\ttype IConfigurationChangeEvent,\n\tIConfigurationService,\n} from \"../../../../platform/configuration/common/configuration.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tIsMacNativeContext,\n\tIsWebContext,\n} from \"../../../../platform/contextkey/common/contextkeys.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport {\n\tILabelService,\n\tVerbosity,\n} from \"../../../../platform/label/common/label.js\";\nimport {\n\tINotificationService,\n\tSeverity,\n} from \"../../../../platform/notification/common/notification.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { defaultMenuStyles } from \"../../../../platform/theme/browser/defaultStyles.js\";\nimport {\n\tIUpdateService,\n\tStateType,\n} from \"../../../../platform/update/common/update.js\";\nimport {\n\ttype IWindowOpenable,\n\ttype MenuBarVisibility,\n\tTitleBarSetting,\n\tgetMenuBarVisibility,\n\thasNativeTitlebar,\n} from \"../../../../platform/window/common/window.js\";\nimport {\n\ttype IRecent,\n\ttype IRecentlyOpened,\n\tIWorkspacesService,\n\tisRecentFolder,\n\tisRecentWorkspace,\n} from \"../../../../platform/workspaces/common/workspaces.js\";\nimport { IWorkbenchEnvironmentService } from \"../../../services/environment/common/environmentService.js\";\nimport { IHostService } from \"../../../services/host/browser/host.js\";\nimport { ActivityBarPosition } from \"../../../services/layout/browser/layoutService.js\";\nimport { IPreferencesService } from \"../../../services/preferences/common/preferences.js\";\nimport { OpenRecentAction } from \"../../actions/windowActions.js\";\n\nexport type IOpenRecentAction = IAction & {\n\turi: URI;\n\tremoteAuthority?: string;\n};\n\nMenuRegistry.appendMenuItem(MenuId.MenubarMainMenu, {\n\tsubmenu: MenuId.MenubarFileMenu,\n\ttitle: {\n\t\tvalue: \"File\",\n\t\toriginal: \"File\",\n\t\tmnemonicTitle: localize(\n\t\t\t{ key: \"mFile\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\"&&File\",\n\t\t),\n\t},\n\torder: 1,\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarMainMenu, {\n\tsubmenu: MenuId.MenubarEditMenu,\n\ttitle: {\n\t\tvalue: \"Edit\",\n\t\toriginal: \"Edit\",\n\t\tmnemonicTitle: localize(\n\t\t\t{ key: \"mEdit\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\"&&Edit\",\n\t\t),\n\t},\n\torder: 2,\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarMainMenu, {\n\tsubmenu: MenuId.MenubarSelectionMenu,\n\ttitle: {\n\t\tvalue: \"Selection\",\n\t\toriginal: \"Selection\",\n\t\tmnemonicTitle: localize(\n\t\t\t{ key: \"mSelection\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\"&&Selection\",\n\t\t),\n\t},\n\torder: 3,\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarMainMenu, {\n\tsubmenu: MenuId.MenubarViewMenu,\n\ttitle: {\n\t\tvalue: \"View\",\n\t\toriginal: \"View\",\n\t\tmnemonicTitle: localize(\n\t\t\t{ key: \"mView\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\"&&View\",\n\t\t),\n\t},\n\torder: 4,\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarMainMenu, {\n\tsubmenu: MenuId.MenubarGoMenu,\n\ttitle: {\n\t\tvalue: \"Go\",\n\t\toriginal: \"Go\",\n\t\tmnemonicTitle: localize(\n\t\t\t{ key: \"mGoto\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\"&&Go\",\n\t\t),\n\t},\n\torder: 5,\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarMainMenu, {\n\tsubmenu: MenuId.MenubarTerminalMenu,\n\ttitle: {\n\t\tvalue: \"Terminal\",\n\t\toriginal: \"Terminal\",\n\t\tmnemonicTitle: localize(\n\t\t\t{ key: \"mTerminal\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\"&&Terminal\",\n\t\t),\n\t},\n\torder: 7,\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarMainMenu, {\n\tsubmenu: MenuId.MenubarHelpMenu,\n\ttitle: {\n\t\tvalue: \"Help\",\n\t\toriginal: \"Help\",\n\t\tmnemonicTitle: localize(\n\t\t\t{ key: \"mHelp\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\"&&Help\",\n\t\t),\n\t},\n\torder: 8,\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarMainMenu, {\n\tsubmenu: MenuId.MenubarPreferencesMenu,\n\ttitle: {\n\t\tvalue: \"Preferences\",\n\t\toriginal: \"Preferences\",\n\t\tmnemonicTitle: localize(\n\t\t\t{ key: \"mPreferences\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\"Preferences\",\n\t\t),\n\t},\n\twhen: IsMacNativeContext,\n\torder: 9,\n});\n\nexport abstract class MenubarControl extends Disposable {\n\tprotected keys = [\n\t\t\"window.menuBarVisibility\",\n\t\t\"window.enableMenuBarMnemonics\",\n\t\t\"window.customMenuBarAltFocus\",\n\t\t\"workbench.sideBar.location\",\n\t\t\"window.nativeTabs\",\n\t];\n\n\tprotected mainMenu: IMenu;\n\tprotected menus: {\n\t\t[index: string]: IMenu | undefined;\n\t} = {};\n\n\tprotected topLevelTitles: { [menu: string]: string } = {};\n\n\tprotected readonly mainMenuDisposables: DisposableStore;\n\n\tprotected recentlyOpened: IRecentlyOpened = { files: [], workspaces: [] };\n\n\tprotected menuUpdater: RunOnceScheduler;\n\n\tprotected static readonly MAX_MENU_RECENT_ENTRIES = 10;\n\n\tconstructor(\n\t\tprotected readonly menuService: IMenuService,\n\t\tprotected readonly workspacesService: IWorkspacesService,\n\t\tprotected readonly contextKeyService: IContextKeyService,\n\t\tprotected readonly keybindingService: IKeybindingService,\n\t\tprotected readonly configurationService: IConfigurationService,\n\t\tprotected readonly labelService: ILabelService,\n\t\tprotected readonly updateService: IUpdateService,\n\t\tprotected readonly storageService: IStorageService,\n\t\tprotected readonly notificationService: INotificationService,\n\t\tprotected readonly preferencesService: IPreferencesService,\n\t\tprotected readonly environmentService: IWorkbenchEnvironmentService,\n\t\tprotected readonly accessibilityService: IAccessibilityService,\n\t\tprotected readonly hostService: IHostService,\n\t\tprotected readonly commandService: ICommandService,\n\t) {\n\t\tsuper();\n\n\t\tthis.mainMenu = this._register(\n\t\t\tthis.menuService.createMenu(\n\t\t\t\tMenuId.MenubarMainMenu,\n\t\t\t\tthis.contextKeyService,\n\t\t\t),\n\t\t);\n\t\tthis.mainMenuDisposables = this._register(new DisposableStore());\n\n\t\tthis.setupMainMenu();\n\n\t\tthis.menuUpdater = this._register(\n\t\t\tnew RunOnceScheduler(() => this.doUpdateMenubar(false), 200),\n\t\t);\n\n\t\tthis.notifyUserOfCustomMenubarAccessibility();\n\t}\n\n\tprotected abstract doUpdateMenubar(firstTime: boolean): void;\n\n\tprotected registerListeners(): void {\n\t\t// Listen for window focus changes\n\t\tthis._register(\n\t\t\tthis.hostService.onDidChangeFocus((e) =>\n\t\t\t\tthis.onDidChangeWindowFocus(e),\n\t\t\t),\n\t\t);\n\n\t\t// Update when config changes\n\t\tthis._register(\n\t\t\tthis.configurationService.onDidChangeConfiguration((e) =>\n\t\t\t\tthis.onConfigurationUpdated(e),\n\t\t\t),\n\t\t);\n\n\t\t// Listen to update service\n\t\tthis._register(\n\t\t\tthis.updateService.onStateChange(() => this.onUpdateStateChange()),\n\t\t);\n\n\t\t// Listen for changes in recently opened menu\n\t\tthis._register(\n\t\t\tthis.workspacesService.onDidChangeRecentlyOpened(() => {\n\t\t\t\tthis.onDidChangeRecentlyOpened();\n\t\t\t}),\n\t\t);\n\n\t\t// Listen to keybindings change\n\t\tthis._register(\n\t\t\tthis.keybindingService.onDidUpdateKeybindings(() =>\n\t\t\t\tthis.updateMenubar(),\n\t\t\t),\n\t\t);\n\n\t\t// Update recent menu items on formatter registration\n\t\tthis._register(\n\t\t\tthis.labelService.onDidChangeFormatters(() => {\n\t\t\t\tthis.onDidChangeRecentlyOpened();\n\t\t\t}),\n\t\t);\n\n\t\t// Listen for changes on the main menu\n\t\tthis._register(\n\t\t\tthis.mainMenu.onDidChange(() => {\n\t\t\t\tthis.setupMainMenu();\n\t\t\t\tthis.doUpdateMenubar(true);\n\t\t\t}),\n\t\t);\n\t}\n\n\tprotected setupMainMenu(): void {\n\t\tthis.mainMenuDisposables.clear();\n\t\tthis.menus = {};\n\t\tthis.topLevelTitles = {};\n\n\t\tconst [, mainMenuActions] = this.mainMenu.getActions()[0];\n\t\tfor (const mainMenuAction of mainMenuActions) {\n\t\t\tif (\n\t\t\t\tmainMenuAction instanceof SubmenuItemAction &&\n\t\t\t\ttypeof mainMenuAction.item.title !== \"string\"\n\t\t\t) {\n\t\t\t\tthis.menus[mainMenuAction.item.title.original] =\n\t\t\t\t\tthis.mainMenuDisposables.add(\n\t\t\t\t\t\tthis.menuService.createMenu(\n\t\t\t\t\t\t\tmainMenuAction.item.submenu,\n\t\t\t\t\t\t\tthis.contextKeyService,\n\t\t\t\t\t\t\t{ emitEventsForSubmenuChanges: true },\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\tthis.topLevelTitles[mainMenuAction.item.title.original] =\n\t\t\t\t\tmainMenuAction.item.title.mnemonicTitle ??\n\t\t\t\t\tmainMenuAction.item.title.value;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected updateMenubar(): void {\n\t\tthis.menuUpdater.schedule();\n\t}\n\n\tprotected calculateActionLabel(action: {\n\t\tid: string;\n\t\tlabel: string;\n\t}): string {\n\t\tconst label = action.label;\n\t\tswitch (action.id) {\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn label;\n\t}\n\n\tprotected onUpdateStateChange(): void {\n\t\tthis.updateMenubar();\n\t}\n\n\tprotected onUpdateKeybindings(): void {\n\t\tthis.updateMenubar();\n\t}\n\n\tprotected getOpenRecentActions(): (Separator | IOpenRecentAction)[] {\n\t\tif (!this.recentlyOpened) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst { workspaces, files } = this.recentlyOpened;\n\n\t\tconst result = [];\n\n\t\tif (workspaces.length > 0) {\n\t\t\tfor (\n\t\t\t\tlet i = 0;\n\t\t\t\ti < MenubarControl.MAX_MENU_RECENT_ENTRIES &&\n\t\t\t\ti < workspaces.length;\n\t\t\t\ti++\n\t\t\t) {\n\t\t\t\tresult.push(this.createOpenRecentMenuAction(workspaces[i]));\n\t\t\t}\n\n\t\t\tresult.push(new Separator());\n\t\t}\n\n\t\tif (files.length > 0) {\n\t\t\tfor (\n\t\t\t\tlet i = 0;\n\t\t\t\ti < MenubarControl.MAX_MENU_RECENT_ENTRIES && i < files.length;\n\t\t\t\ti++\n\t\t\t) {\n\t\t\t\tresult.push(this.createOpenRecentMenuAction(files[i]));\n\t\t\t}\n\n\t\t\tresult.push(new Separator());\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprotected onDidChangeWindowFocus(hasFocus: boolean): void {\n\t\t// When we regain focus, update the recent menu items\n\t\tif (hasFocus) {\n\t\t\tthis.onDidChangeRecentlyOpened();\n\t\t}\n\t}\n\n\tprivate onConfigurationUpdated(event: IConfigurationChangeEvent): void {\n\t\tif (this.keys.some((key) => event.affectsConfiguration(key))) {\n\t\t\tthis.updateMenubar();\n\t\t}\n\n\t\tif (event.affectsConfiguration(\"editor.accessibilitySupport\")) {\n\t\t\tthis.notifyUserOfCustomMenubarAccessibility();\n\t\t}\n\n\t\t// Since we try not update when hidden, we should\n\t\t// try to update the recently opened list on visibility changes\n\t\tif (event.affectsConfiguration(\"window.menuBarVisibility\")) {\n\t\t\tthis.onDidChangeRecentlyOpened();\n\t\t}\n\t}\n\n\tprivate get menubarHidden(): boolean {\n\t\treturn isMacintosh && isNative\n\t\t\t? false\n\t\t\t: getMenuBarVisibility(this.configurationService) === \"hidden\";\n\t}\n\n\tprotected onDidChangeRecentlyOpened(): void {\n\t\t// Do not update recently opened when the menubar is hidden #108712\n\t\tif (!this.menubarHidden) {\n\t\t\tthis.workspacesService\n\t\t\t\t.getRecentlyOpened()\n\t\t\t\t.then((recentlyOpened) => {\n\t\t\t\t\tthis.recentlyOpened = recentlyOpened;\n\t\t\t\t\tthis.updateMenubar();\n\t\t\t\t});\n\t\t}\n\t}\n\n\tprivate createOpenRecentMenuAction(recent: IRecent): IOpenRecentAction {\n\t\tlet label: string;\n\t\tlet uri: URI;\n\t\tlet commandId: string;\n\t\tlet openable: IWindowOpenable;\n\t\tconst remoteAuthority = recent.remoteAuthority;\n\n\t\tif (isRecentFolder(recent)) {\n\t\t\turi = recent.folderUri;\n\t\t\tlabel =\n\t\t\t\trecent.label ||\n\t\t\t\tthis.labelService.getWorkspaceLabel(uri, {\n\t\t\t\t\tverbose: Verbosity.LONG,\n\t\t\t\t});\n\t\t\tcommandId = \"openRecentFolder\";\n\t\t\topenable = { folderUri: uri };\n\t\t} else if (isRecentWorkspace(recent)) {\n\t\t\turi = recent.workspace.configPath;\n\t\t\tlabel =\n\t\t\t\trecent.label ||\n\t\t\t\tthis.labelService.getWorkspaceLabel(recent.workspace, {\n\t\t\t\t\tverbose: Verbosity.LONG,\n\t\t\t\t});\n\t\t\tcommandId = \"openRecentWorkspace\";\n\t\t\topenable = { workspaceUri: uri };\n\t\t} else {\n\t\t\turi = recent.fileUri;\n\t\t\tlabel = recent.label || this.labelService.getUriLabel(uri);\n\t\t\tcommandId = \"openRecentFile\";\n\t\t\topenable = { fileUri: uri };\n\t\t}\n\n\t\tconst ret = toAction({\n\t\t\tid: commandId,\n\t\t\tlabel: unmnemonicLabel(label),\n\t\t\trun: (browserEvent: KeyboardEvent) => {\n\t\t\t\tconst openInNewWindow =\n\t\t\t\t\tbrowserEvent &&\n\t\t\t\t\t((!isMacintosh &&\n\t\t\t\t\t\t(browserEvent.ctrlKey || browserEvent.shiftKey)) ||\n\t\t\t\t\t\t(isMacintosh &&\n\t\t\t\t\t\t\t(browserEvent.metaKey || browserEvent.altKey)));\n\n\t\t\t\treturn this.hostService.openWindow([openable], {\n\t\t\t\t\tforceNewWindow: !!openInNewWindow,\n\t\t\t\t\tremoteAuthority: remoteAuthority || null, // local window if remoteAuthority is not set or can not be deducted from the openable\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\n\t\treturn Object.assign(ret, { uri, remoteAuthority });\n\t}\n\n\tprivate notifyUserOfCustomMenubarAccessibility(): void {\n\t\tif (isWeb || isMacintosh) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst hasBeenNotified = this.storageService.getBoolean(\n\t\t\t\"menubar/accessibleMenubarNotified\",\n\t\t\tStorageScope.APPLICATION,\n\t\t\tfalse,\n\t\t);\n\t\tconst usingCustomMenubar = !hasNativeTitlebar(\n\t\t\tthis.configurationService,\n\t\t);\n\n\t\tif (\n\t\t\thasBeenNotified ||\n\t\t\tusingCustomMenubar ||\n\t\t\t!this.accessibilityService.isScreenReaderOptimized()\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = localize(\n\t\t\t\"menubar.customTitlebarAccessibilityNotification\",\n\t\t\t\"Accessibility support is enabled for you. For the most accessible experience, we recommend the custom title bar style.\",\n\t\t);\n\t\tthis.notificationService.prompt(Severity.Info, message, [\n\t\t\t{\n\t\t\t\tlabel: localize(\"goToSetting\", \"Open Settings\"),\n\t\t\t\trun: () => {\n\t\t\t\t\treturn this.preferencesService.openUserSettings({\n\t\t\t\t\t\tquery: TitleBarSetting.TITLE_BAR_STYLE,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t},\n\t\t]);\n\n\t\tthis.storageService.store(\n\t\t\t\"menubar/accessibleMenubarNotified\",\n\t\t\ttrue,\n\t\t\tStorageScope.APPLICATION,\n\t\t\tStorageTarget.USER,\n\t\t);\n\t}\n}\n\n// This is a bit complex due to the issue https://github.com/microsoft/vscode/issues/205836\nlet focusMenuBarEmitter: Emitter<void> | undefined;\nfunction enableFocusMenuBarAction(): Emitter<void> {\n\tif (!focusMenuBarEmitter) {\n\t\tfocusMenuBarEmitter = new Emitter<void>();\n\n\t\tregisterAction2(\n\t\t\tclass extends Action2 {\n\t\t\t\tconstructor() {\n\t\t\t\t\tsuper({\n\t\t\t\t\t\tid: `workbench.actions.menubar.focus`,\n\t\t\t\t\t\ttitle: localize2(\"focusMenu\", \"Focus Application Menu\"),\n\t\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\t\tprimary: KeyMod.Alt | KeyCode.F10,\n\t\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\t\twhen: IsWebContext,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tf1: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tasync run(): Promise<void> {\n\t\t\t\t\tfocusMenuBarEmitter?.fire();\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t}\n\n\treturn focusMenuBarEmitter;\n}\n\nexport class CustomMenubarControl extends MenubarControl {\n\tprivate menubar: MenuBar | undefined;\n\tprivate container: HTMLElement | undefined;\n\tprivate alwaysOnMnemonics = false;\n\tprivate focusInsideMenubar = false;\n\tprivate pendingFirstTimeUpdate = false;\n\tprivate visible = true;\n\tprivate actionRunner: IActionRunner;\n\tprivate readonly webNavigationMenu = this._register(\n\t\tthis.menuService.createMenu(\n\t\t\tMenuId.MenubarHomeMenu,\n\t\t\tthis.contextKeyService,\n\t\t),\n\t);\n\n\tprivate readonly _onVisibilityChange: Emitter<boolean>;\n\tprivate readonly _onFocusStateChange: Emitter<boolean>;\n\n\tconstructor(\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IWorkspacesService workspacesService: IWorkspacesService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IUpdateService updateService: IUpdateService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IPreferencesService preferencesService: IPreferencesService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IAccessibilityService accessibilityService: IAccessibilityService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IHostService hostService: IHostService,\n\t\t@ICommandService commandService: ICommandService\n\t) {\n\t\tsuper(menuService, workspacesService, contextKeyService, keybindingService, configurationService, labelService, updateService, storageService, notificationService, preferencesService, environmentService, accessibilityService, hostService, commandService);\n\n\t\tthis._onVisibilityChange = this._register(new Emitter<boolean>());\n\t\tthis._onFocusStateChange = this._register(new Emitter<boolean>());\n\n\t\tthis.actionRunner = this._register(new ActionRunner());\n\t\tthis.actionRunner.onDidRun(e => {\n\t\t\tthis.telemetryService.publicLog2<WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification>('workbenchActionExecuted', { id: e.action.id, from: 'menu' });\n\t\t});\n\n\t\tthis.workspacesService.getRecentlyOpened().then((recentlyOpened) => {\n\t\t\tthis.recentlyOpened = recentlyOpened;\n\t\t});\n\n\t\tthis.registerListeners();\n\t}\n\n\tprotected doUpdateMenubar(firstTime: boolean): void {\n\t\tif (!this.focusInsideMenubar) {\n\t\t\tthis.setupCustomMenubar(firstTime);\n\t\t}\n\n\t\tif (firstTime) {\n\t\t\tthis.pendingFirstTimeUpdate = true;\n\t\t}\n\t}\n\n\tprivate getUpdateAction(): IAction | null {\n\t\tconst state = this.updateService.state;\n\n\t\tswitch (state.type) {\n\t\t\tcase StateType.Idle:\n\t\t\t\treturn new Action(\n\t\t\t\t\t\"update.check\",\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"checkForUpdates\",\n\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"Check for &&Updates...\",\n\t\t\t\t\t),\n\t\t\t\t\tundefined,\n\t\t\t\t\ttrue,\n\t\t\t\t\t() => this.updateService.checkForUpdates(true),\n\t\t\t\t);\n\n\t\t\tcase StateType.CheckingForUpdates:\n\t\t\t\treturn new Action(\n\t\t\t\t\t\"update.checking\",\n\t\t\t\t\tlocalize(\"checkingForUpdates\", \"Checking for Updates...\"),\n\t\t\t\t\tundefined,\n\t\t\t\t\tfalse,\n\t\t\t\t);\n\n\t\t\tcase StateType.AvailableForDownload:\n\t\t\t\treturn new Action(\n\t\t\t\t\t\"update.downloadNow\",\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"download now\",\n\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"D&&ownload Update\",\n\t\t\t\t\t),\n\t\t\t\t\tundefined,\n\t\t\t\t\ttrue,\n\t\t\t\t\t() => this.updateService.downloadUpdate(),\n\t\t\t\t);\n\n\t\t\tcase StateType.Downloading:\n\t\t\t\treturn new Action(\n\t\t\t\t\t\"update.downloading\",\n\t\t\t\t\tlocalize(\"DownloadingUpdate\", \"Downloading Update...\"),\n\t\t\t\t\tundefined,\n\t\t\t\t\tfalse,\n\t\t\t\t);\n\n\t\t\tcase StateType.Downloaded:\n\t\t\t\treturn isMacintosh\n\t\t\t\t\t? null\n\t\t\t\t\t: new Action(\n\t\t\t\t\t\t\t\"update.install\",\n\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tkey: \"installUpdate...\",\n\t\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"Install &&Update...\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t() => this.updateService.applyUpdate(),\n\t\t\t\t\t\t);\n\n\t\t\tcase StateType.Updating:\n\t\t\t\treturn new Action(\n\t\t\t\t\t\"update.updating\",\n\t\t\t\t\tlocalize(\"installingUpdate\", \"Installing Update...\"),\n\t\t\t\t\tundefined,\n\t\t\t\t\tfalse,\n\t\t\t\t);\n\n\t\t\tcase StateType.Ready:\n\t\t\t\treturn new Action(\n\t\t\t\t\t\"update.restart\",\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"restartToUpdate\",\n\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"Restart to &&Update\",\n\t\t\t\t\t),\n\t\t\t\t\tundefined,\n\t\t\t\t\ttrue,\n\t\t\t\t\t() => this.updateService.quitAndInstall(),\n\t\t\t\t);\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate get currentMenubarVisibility(): MenuBarVisibility {\n\t\treturn getMenuBarVisibility(this.configurationService);\n\t}\n\n\tprivate get currentDisableMenuBarAltFocus(): boolean {\n\t\tconst settingValue = this.configurationService.getValue<boolean>(\n\t\t\t\"window.customMenuBarAltFocus\",\n\t\t);\n\n\t\tlet disableMenuBarAltBehavior = false;\n\t\tif (typeof settingValue === \"boolean\") {\n\t\t\tdisableMenuBarAltBehavior = !settingValue;\n\t\t}\n\n\t\treturn disableMenuBarAltBehavior;\n\t}\n\n\tprivate insertActionsBefore(nextAction: IAction, target: IAction[]): void {\n\t\tswitch (nextAction.id) {\n\t\t\tcase OpenRecentAction.ID:\n\t\t\t\ttarget.push(...this.getOpenRecentActions());\n\t\t\t\tbreak;\n\n\t\t\tcase \"workbench.action.showAboutDialog\":\n\t\t\t\tif (!isMacintosh && !isWeb) {\n\t\t\t\t\tconst updateAction = this.getUpdateAction();\n\t\t\t\t\tif (updateAction) {\n\t\t\t\t\t\tupdateAction.label = mnemonicMenuLabel(\n\t\t\t\t\t\t\tupdateAction.label,\n\t\t\t\t\t\t);\n\t\t\t\t\t\ttarget.push(updateAction);\n\t\t\t\t\t\ttarget.push(new Separator());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate get currentEnableMenuBarMnemonics(): boolean {\n\t\tlet enableMenuBarMnemonics =\n\t\t\tthis.configurationService.getValue<boolean>(\n\t\t\t\t\"window.enableMenuBarMnemonics\",\n\t\t\t);\n\t\tif (typeof enableMenuBarMnemonics !== \"boolean\") {\n\t\t\tenableMenuBarMnemonics = true;\n\t\t}\n\n\t\treturn enableMenuBarMnemonics && (!isWeb || isFullscreen(mainWindow));\n\t}\n\n\tprivate get currentCompactMenuMode(): IMenuDirection | undefined {\n\t\tif (this.currentMenubarVisibility !== \"compact\") {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Menu bar lives in activity bar and should flow based on its location\n\t\tconst currentSidebarLocation =\n\t\t\tthis.configurationService.getValue<string>(\n\t\t\t\t\"workbench.sideBar.location\",\n\t\t\t);\n\t\tconst horizontalDirection =\n\t\t\tcurrentSidebarLocation === \"right\"\n\t\t\t\t? HorizontalDirection.Left\n\t\t\t\t: HorizontalDirection.Right;\n\n\t\tconst activityBarLocation = this.configurationService.getValue<string>(\n\t\t\t\"workbench.activityBar.location\",\n\t\t);\n\t\tconst verticalDirection =\n\t\t\tactivityBarLocation === ActivityBarPosition.BOTTOM\n\t\t\t\t? VerticalDirection.Above\n\t\t\t\t: VerticalDirection.Below;\n\n\t\treturn { horizontal: horizontalDirection, vertical: verticalDirection };\n\t}\n\n\tprivate onDidVisibilityChange(visible: boolean): void {\n\t\tthis.visible = visible;\n\t\tthis.onDidChangeRecentlyOpened();\n\t\tthis._onVisibilityChange.fire(visible);\n\t}\n\n\tprivate toActionsArray(menu: IMenu): IAction[] {\n\t\tconst result: IAction[] = [];\n\t\tcreateAndFillInContextMenuActions(\n\t\t\tmenu,\n\t\t\t{ shouldForwardArgs: true },\n\t\t\tresult,\n\t\t);\n\t\treturn result;\n\t}\n\n\tprivate readonly reinstallDisposables = this._register(\n\t\tnew DisposableStore(),\n\t);\n\tprivate setupCustomMenubar(firstTime: boolean): void {\n\t\t// If there is no container, we cannot setup the menubar\n\t\tif (!this.container) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstTime) {\n\t\t\t// Reset and create new menubar\n\t\t\tif (this.menubar) {\n\t\t\t\tthis.reinstallDisposables.clear();\n\t\t\t}\n\n\t\t\tthis.menubar = this.reinstallDisposables.add(\n\t\t\t\tnew MenuBar(\n\t\t\t\t\tthis.container,\n\t\t\t\t\tthis.getMenuBarOptions(),\n\t\t\t\t\tdefaultMenuStyles,\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tthis.accessibilityService\n\t\t\t\t.alwaysUnderlineAccessKeys()\n\t\t\t\t.then((val) => {\n\t\t\t\t\tthis.alwaysOnMnemonics = val;\n\t\t\t\t\tthis.menubar?.update(this.getMenuBarOptions());\n\t\t\t\t});\n\n\t\t\tthis.reinstallDisposables.add(\n\t\t\t\tthis.menubar.onFocusStateChange((focused) => {\n\t\t\t\t\tthis._onFocusStateChange.fire(focused);\n\n\t\t\t\t\t// When the menubar loses focus, update it to clear any pending updates\n\t\t\t\t\tif (!focused) {\n\t\t\t\t\t\tif (this.pendingFirstTimeUpdate) {\n\t\t\t\t\t\t\tthis.setupCustomMenubar(true);\n\t\t\t\t\t\t\tthis.pendingFirstTimeUpdate = false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.updateMenubar();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.focusInsideMenubar = false;\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tthis.reinstallDisposables.add(\n\t\t\t\tthis.menubar.onVisibilityChange((e) =>\n\t\t\t\t\tthis.onDidVisibilityChange(e),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\t// Before we focus the menubar, stop updates to it so that focus-related context keys will work\n\t\t\tthis.reinstallDisposables.add(\n\t\t\t\taddDisposableListener(\n\t\t\t\t\tthis.container,\n\t\t\t\t\tEventType.FOCUS_IN,\n\t\t\t\t\t() => {\n\t\t\t\t\t\tthis.focusInsideMenubar = true;\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tthis.reinstallDisposables.add(\n\t\t\t\taddDisposableListener(\n\t\t\t\t\tthis.container,\n\t\t\t\t\tEventType.FOCUS_OUT,\n\t\t\t\t\t() => {\n\t\t\t\t\t\tthis.focusInsideMenubar = false;\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\n\t\t\t// Fire visibility change for the first install if menu is shown\n\t\t\tif (this.menubar.isVisible) {\n\t\t\t\tthis.onDidVisibilityChange(true);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.menubar?.update(this.getMenuBarOptions());\n\t\t}\n\n\t\t// Update the menu actions\n\t\tconst updateActions = (\n\t\t\tmenuActions: readonly IAction[],\n\t\t\ttarget: IAction[],\n\t\t\ttopLevelTitle: string,\n\t\t) => {\n\t\t\ttarget.splice(0);\n\n\t\t\tfor (const menuItem of menuActions) {\n\t\t\t\tthis.insertActionsBefore(menuItem, target);\n\n\t\t\t\tif (menuItem instanceof Separator) {\n\t\t\t\t\ttarget.push(menuItem);\n\t\t\t\t} else if (\n\t\t\t\t\tmenuItem instanceof SubmenuItemAction ||\n\t\t\t\t\tmenuItem instanceof MenuItemAction\n\t\t\t\t) {\n\t\t\t\t\t// use mnemonicTitle whenever possible\n\t\t\t\t\tlet title =\n\t\t\t\t\t\ttypeof menuItem.item.title === \"string\"\n\t\t\t\t\t\t\t? menuItem.item.title\n\t\t\t\t\t\t\t: (menuItem.item.title.mnemonicTitle ??\n\t\t\t\t\t\t\t\tmenuItem.item.title.value);\n\n\t\t\t\t\tif (menuItem instanceof SubmenuItemAction) {\n\t\t\t\t\t\tconst submenuActions: SubmenuAction[] = [];\n\t\t\t\t\t\tupdateActions(\n\t\t\t\t\t\t\tmenuItem.actions,\n\t\t\t\t\t\t\tsubmenuActions,\n\t\t\t\t\t\t\ttopLevelTitle,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (submenuActions.length > 0) {\n\t\t\t\t\t\t\ttarget.push(\n\t\t\t\t\t\t\t\tnew SubmenuAction(\n\t\t\t\t\t\t\t\t\tmenuItem.id,\n\t\t\t\t\t\t\t\t\tmnemonicMenuLabel(title),\n\t\t\t\t\t\t\t\t\tsubmenuActions,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (isICommandActionToggleInfo(menuItem.item.toggled)) {\n\t\t\t\t\t\t\ttitle =\n\t\t\t\t\t\t\t\tmenuItem.item.toggled.mnemonicTitle ??\n\t\t\t\t\t\t\t\tmenuItem.item.toggled.title ??\n\t\t\t\t\t\t\t\ttitle;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst newAction = new Action(\n\t\t\t\t\t\t\tmenuItem.id,\n\t\t\t\t\t\t\tmnemonicMenuLabel(title),\n\t\t\t\t\t\t\tmenuItem.class,\n\t\t\t\t\t\t\tmenuItem.enabled,\n\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\tthis.commandService.executeCommand(menuItem.id),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tnewAction.tooltip = menuItem.tooltip;\n\t\t\t\t\t\tnewAction.checked = menuItem.checked;\n\t\t\t\t\t\ttarget.push(newAction);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Append web navigation menu items to the file menu when not compact\n\t\t\tif (\n\t\t\t\ttopLevelTitle === \"File\" &&\n\t\t\t\tthis.currentCompactMenuMode === undefined\n\t\t\t) {\n\t\t\t\tconst webActions = this.getWebNavigationActions();\n\t\t\t\tif (webActions.length) {\n\t\t\t\t\ttarget.push(...webActions);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfor (const title of Object.keys(this.topLevelTitles)) {\n\t\t\tconst menu = this.menus[title];\n\t\t\tif (firstTime && menu) {\n\t\t\t\tthis.reinstallDisposables.add(\n\t\t\t\t\tmenu.onDidChange(() => {\n\t\t\t\t\t\tif (!this.focusInsideMenubar) {\n\t\t\t\t\t\t\tconst actions: IAction[] = [];\n\t\t\t\t\t\t\tupdateActions(\n\t\t\t\t\t\t\t\tthis.toActionsArray(menu),\n\t\t\t\t\t\t\t\tactions,\n\t\t\t\t\t\t\t\ttitle,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthis.menubar?.updateMenu({\n\t\t\t\t\t\t\t\tactions,\n\t\t\t\t\t\t\t\tlabel: mnemonicMenuLabel(\n\t\t\t\t\t\t\t\t\tthis.topLevelTitles[title],\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t);\n\n\t\t\t\t// For the file menu, we need to update if the web nav menu updates as well\n\t\t\t\tif (menu === this.menus.File) {\n\t\t\t\t\tthis.reinstallDisposables.add(\n\t\t\t\t\t\tthis.webNavigationMenu.onDidChange(() => {\n\t\t\t\t\t\t\tif (!this.focusInsideMenubar) {\n\t\t\t\t\t\t\t\tconst actions: IAction[] = [];\n\t\t\t\t\t\t\t\tupdateActions(\n\t\t\t\t\t\t\t\t\tthis.toActionsArray(menu),\n\t\t\t\t\t\t\t\t\tactions,\n\t\t\t\t\t\t\t\t\ttitle,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tthis.menubar?.updateMenu({\n\t\t\t\t\t\t\t\t\tactions,\n\t\t\t\t\t\t\t\t\tlabel: mnemonicMenuLabel(\n\t\t\t\t\t\t\t\t\t\tthis.topLevelTitles[title],\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst actions: IAction[] = [];\n\t\t\tif (menu) {\n\t\t\t\tupdateActions(this.toActionsArray(menu), actions, title);\n\t\t\t}\n\n\t\t\tif (this.menubar) {\n\t\t\t\tif (firstTime) {\n\t\t\t\t\tthis.menubar.push({\n\t\t\t\t\t\tactions,\n\t\t\t\t\t\tlabel: mnemonicMenuLabel(this.topLevelTitles[title]),\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.menubar.updateMenu({\n\t\t\t\t\t\tactions,\n\t\t\t\t\t\tlabel: mnemonicMenuLabel(this.topLevelTitles[title]),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getWebNavigationActions(): IAction[] {\n\t\tif (!isWeb) {\n\t\t\treturn []; // only for web\n\t\t}\n\n\t\tconst webNavigationActions = [];\n\t\tfor (const groups of this.webNavigationMenu.getActions()) {\n\t\t\tconst [, actions] = groups;\n\t\t\tfor (const action of actions) {\n\t\t\t\tif (action instanceof MenuItemAction) {\n\t\t\t\t\tconst title =\n\t\t\t\t\t\ttypeof action.item.title === \"string\"\n\t\t\t\t\t\t\t? action.item.title\n\t\t\t\t\t\t\t: (action.item.title.mnemonicTitle ??\n\t\t\t\t\t\t\t\taction.item.title.value);\n\t\t\t\t\twebNavigationActions.push(\n\t\t\t\t\t\tnew Action(\n\t\t\t\t\t\t\taction.id,\n\t\t\t\t\t\t\tmnemonicMenuLabel(title),\n\t\t\t\t\t\t\taction.class,\n\t\t\t\t\t\t\taction.enabled,\n\t\t\t\t\t\t\tasync (event?: any) => {\n\t\t\t\t\t\t\t\tthis.commandService.executeCommand(\n\t\t\t\t\t\t\t\t\taction.id,\n\t\t\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twebNavigationActions.push(new Separator());\n\t\t}\n\n\t\tif (webNavigationActions.length) {\n\t\t\twebNavigationActions.pop();\n\t\t}\n\n\t\treturn webNavigationActions;\n\t}\n\n\tprivate getMenuBarOptions(): IMenuBarOptions {\n\t\treturn {\n\t\t\tenableMnemonics: this.currentEnableMenuBarMnemonics,\n\t\t\tdisableAltFocus: this.currentDisableMenuBarAltFocus,\n\t\t\tvisibility: this.currentMenubarVisibility,\n\t\t\tactionRunner: this.actionRunner,\n\t\t\tgetKeybinding: (action) =>\n\t\t\t\tthis.keybindingService.lookupKeybinding(action.id),\n\t\t\talwaysOnMnemonics: this.alwaysOnMnemonics,\n\t\t\tcompactMode: this.currentCompactMenuMode,\n\t\t\tgetCompactMenuActions: () => {\n\t\t\t\tif (!isWeb) {\n\t\t\t\t\treturn []; // only for web\n\t\t\t\t}\n\n\t\t\t\treturn this.getWebNavigationActions();\n\t\t\t},\n\t\t};\n\t}\n\n\tprotected override onDidChangeWindowFocus(hasFocus: boolean): void {\n\t\tif (!this.visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.onDidChangeWindowFocus(hasFocus);\n\n\t\tif (this.container) {\n\t\t\tif (hasFocus) {\n\t\t\t\tthis.container.classList.remove(\"inactive\");\n\t\t\t} else {\n\t\t\t\tthis.container.classList.add(\"inactive\");\n\t\t\t\tthis.menubar?.blur();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected override onUpdateStateChange(): void {\n\t\tif (!this.visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.onUpdateStateChange();\n\t}\n\n\tprotected override onDidChangeRecentlyOpened(): void {\n\t\tif (!this.visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.onDidChangeRecentlyOpened();\n\t}\n\n\tprotected override onUpdateKeybindings(): void {\n\t\tif (!this.visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.onUpdateKeybindings();\n\t}\n\n\tprotected override registerListeners(): void {\n\t\tsuper.registerListeners();\n\n\t\tthis._register(\n\t\t\taddDisposableListener(mainWindow, EventType.RESIZE, () => {\n\t\t\t\tif (this.menubar && !(isIOS && BrowserFeatures.pointerEvents)) {\n\t\t\t\t\tthis.menubar.blur();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// Mnemonics require fullscreen in web\n\t\tif (isWeb) {\n\t\t\tthis._register(\n\t\t\t\tonDidChangeFullscreen((windowId) => {\n\t\t\t\t\tif (windowId === mainWindow.vscodeWindowId) {\n\t\t\t\t\t\tthis.updateMenubar();\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tthis.webNavigationMenu.onDidChange(() => this.updateMenubar()),\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tenableFocusMenuBarAction().event(() =>\n\t\t\t\t\tthis.menubar?.toggleFocus(),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\tget onVisibilityChange(): Event<boolean> {\n\t\treturn this._onVisibilityChange.event;\n\t}\n\n\tget onFocusStateChange(): Event<boolean> {\n\t\treturn this._onFocusStateChange.event;\n\t}\n\n\tgetMenubarItemsDimensions(): Dimension {\n\t\tif (this.menubar) {\n\t\t\treturn new Dimension(\n\t\t\t\tthis.menubar.getWidth(),\n\t\t\t\tthis.menubar.getHeight(),\n\t\t\t);\n\t\t}\n\n\t\treturn new Dimension(0, 0);\n\t}\n\n\tcreate(parent: HTMLElement): HTMLElement {\n\t\tthis.container = parent;\n\n\t\t// Build the menubar\n\t\tif (this.container) {\n\t\t\tthis.doUpdateMenubar(true);\n\t\t}\n\n\t\treturn this.container;\n\t}\n\n\tlayout(dimension: Dimension) {\n\t\tthis.menubar?.update(this.getMenuBarOptions());\n\t}\n\n\ttoggleFocus() {\n\t\tthis.menubar?.toggleFocus();\n\t}\n}\n"],
  "mappings": "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",
  "names": ["actions"]
}
