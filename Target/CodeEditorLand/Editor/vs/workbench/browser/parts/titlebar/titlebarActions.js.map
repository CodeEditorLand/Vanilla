{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/titlebar/titlebarActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IAction } from \"../../../../base/common/actions.js\";\nimport { type ILocalizedString, localize, localize2 } from \"../../../../nls.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tContextKeyExpr,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport {\n\tCustomTitleBarVisibility,\n\tTitleBarSetting,\n\tTitlebarStyle,\n} from \"../../../../platform/window/common/window.js\";\nimport {\n\tACCOUNTS_ACTIVITY_ID,\n\tGLOBAL_ACTIVITY_ID,\n} from \"../../../common/activity.js\";\nimport {\n\tIsAuxiliaryWindowFocusedContext,\n\tIsMainWindowFullscreenContext,\n\tTitleBarStyleContext,\n\tTitleBarVisibleContext,\n} from \"../../../common/contextkeys.js\";\nimport { LayoutSettings } from \"../../../services/layout/browser/layoutService.js\";\n\n// --- Context Menu Actions --- //\n\nclass ToggleConfigAction extends Action2 {\n\tconstructor(\n\t\tprivate readonly section: string,\n\t\ttitle: string,\n\t\tdescription: string | ILocalizedString | undefined,\n\t\torder: number,\n\t\tmainWindowOnly: boolean,\n\t) {\n\t\tconst when = mainWindowOnly\n\t\t\t? IsAuxiliaryWindowFocusedContext.toNegated()\n\t\t\t: ContextKeyExpr.true();\n\t\tsuper({\n\t\t\tid: `toggle.${section}`,\n\t\t\ttitle,\n\t\t\tmetadata: description ? { description } : undefined,\n\t\t\ttoggled: ContextKeyExpr.equals(`config.${section}`, true),\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.TitleBarContext,\n\t\t\t\t\twhen,\n\t\t\t\t\torder,\n\t\t\t\t\tgroup: \"2_config\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.TitleBarTitleContext,\n\t\t\t\t\twhen,\n\t\t\t\t\torder,\n\t\t\t\t\tgroup: \"2_config\",\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: any[]): void {\n\t\tconst configService = accessor.get(IConfigurationService);\n\t\tconst value = configService.getValue(this.section);\n\t\tconfigService.updateValue(this.section, !value);\n\t}\n}\n\nregisterAction2(\n\tclass ToggleCommandCenter extends ToggleConfigAction {\n\t\tconstructor() {\n\t\t\tsuper(\n\t\t\t\tLayoutSettings.COMMAND_CENTER,\n\t\t\t\tlocalize(\"toggle.commandCenter\", \"Command Center\"),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"toggle.commandCenterDescription\",\n\t\t\t\t\t\"Toggle visibility of the Command Center in title bar\",\n\t\t\t\t),\n\t\t\t\t1,\n\t\t\t\tfalse,\n\t\t\t);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass ToggleLayoutControl extends ToggleConfigAction {\n\t\tconstructor() {\n\t\t\tsuper(\n\t\t\t\t\"workbench.layoutControl.enabled\",\n\t\t\t\tlocalize(\"toggle.layout\", \"Layout Controls\"),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"toggle.layoutDescription\",\n\t\t\t\t\t\"Toggle visibility of the Layout Controls in title bar\",\n\t\t\t\t),\n\t\t\t\t2,\n\t\t\t\ttrue,\n\t\t\t);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass ToggleCustomTitleBar extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: `toggle.${TitleBarSetting.CUSTOM_TITLE_BAR_VISIBILITY}`,\n\t\t\t\ttitle: localize(\n\t\t\t\t\t\"toggle.hideCustomTitleBar\",\n\t\t\t\t\t\"Hide Custom Title Bar\",\n\t\t\t\t),\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.TitleBarContext,\n\t\t\t\t\t\torder: 0,\n\t\t\t\t\t\twhen: ContextKeyExpr.equals(\n\t\t\t\t\t\t\tTitleBarStyleContext.key,\n\t\t\t\t\t\t\tTitlebarStyle.NATIVE,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tgroup: \"3_toggle\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.TitleBarTitleContext,\n\t\t\t\t\t\torder: 0,\n\t\t\t\t\t\twhen: ContextKeyExpr.equals(\n\t\t\t\t\t\t\tTitleBarStyleContext.key,\n\t\t\t\t\t\t\tTitlebarStyle.NATIVE,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tgroup: \"3_toggle\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor, ...args: any[]): void {\n\t\t\tconst configService = accessor.get(IConfigurationService);\n\t\t\tconfigService.updateValue(\n\t\t\t\tTitleBarSetting.CUSTOM_TITLE_BAR_VISIBILITY,\n\t\t\t\tCustomTitleBarVisibility.NEVER,\n\t\t\t);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass ToggleCustomTitleBarWindowed extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: `toggle.${TitleBarSetting.CUSTOM_TITLE_BAR_VISIBILITY}.windowed`,\n\t\t\t\ttitle: localize(\n\t\t\t\t\t\"toggle.hideCustomTitleBarInFullScreen\",\n\t\t\t\t\t\"Hide Custom Title Bar In Full Screen\",\n\t\t\t\t),\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.TitleBarContext,\n\t\t\t\t\t\torder: 1,\n\t\t\t\t\t\twhen: IsMainWindowFullscreenContext,\n\t\t\t\t\t\tgroup: \"3_toggle\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.TitleBarTitleContext,\n\t\t\t\t\t\torder: 1,\n\t\t\t\t\t\twhen: IsMainWindowFullscreenContext,\n\t\t\t\t\t\tgroup: \"3_toggle\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor, ...args: any[]): void {\n\t\t\tconst configService = accessor.get(IConfigurationService);\n\t\t\tconfigService.updateValue(\n\t\t\t\tTitleBarSetting.CUSTOM_TITLE_BAR_VISIBILITY,\n\t\t\t\tCustomTitleBarVisibility.WINDOWED,\n\t\t\t);\n\t\t}\n\t},\n);\n\nclass ToggleCustomTitleBar extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: `toggle.toggleCustomTitleBar`,\n\t\t\ttitle: localize(\"toggle.customTitleBar\", \"Custom Title Bar\"),\n\t\t\ttoggled: TitleBarVisibleContext,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\t\torder: 6,\n\t\t\t\t\twhen: ContextKeyExpr.or(\n\t\t\t\t\t\tContextKeyExpr.and(\n\t\t\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\t\tTitleBarStyleContext.key,\n\t\t\t\t\t\t\t\tTitlebarStyle.NATIVE,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tContextKeyExpr.and(\n\t\t\t\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\t\t\t\"config.workbench.layoutControl.enabled\",\n\t\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\t\t\t\"config.window.commandCenter\",\n\t\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tContextKeyExpr.notEquals(\n\t\t\t\t\t\t\t\t\t\"config.workbench.editor.editorActionsLocation\",\n\t\t\t\t\t\t\t\t\t\"titleBar\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tContextKeyExpr.notEquals(\n\t\t\t\t\t\t\t\t\t\"config.workbench.activityBar.location\",\n\t\t\t\t\t\t\t\t\t\"top\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tContextKeyExpr.notEquals(\n\t\t\t\t\t\t\t\t\t\"config.workbench.activityBar.location\",\n\t\t\t\t\t\t\t\t\t\"bottom\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t)?.negate(),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tIsMainWindowFullscreenContext,\n\t\t\t\t\t),\n\t\t\t\t\tgroup: \"2_workbench_layout\",\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: any[]): void {\n\t\tconst configService = accessor.get(IConfigurationService);\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tconst titleBarVisibility =\n\t\t\tconfigService.getValue<CustomTitleBarVisibility>(\n\t\t\t\tTitleBarSetting.CUSTOM_TITLE_BAR_VISIBILITY,\n\t\t\t);\n\t\tswitch (titleBarVisibility) {\n\t\t\tcase CustomTitleBarVisibility.NEVER:\n\t\t\t\tconfigService.updateValue(\n\t\t\t\t\tTitleBarSetting.CUSTOM_TITLE_BAR_VISIBILITY,\n\t\t\t\t\tCustomTitleBarVisibility.AUTO,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase CustomTitleBarVisibility.WINDOWED: {\n\t\t\t\tconst isFullScreen = IsMainWindowFullscreenContext.evaluate(\n\t\t\t\t\tcontextKeyService.getContext(null),\n\t\t\t\t);\n\t\t\t\tif (isFullScreen) {\n\t\t\t\t\tconfigService.updateValue(\n\t\t\t\t\t\tTitleBarSetting.CUSTOM_TITLE_BAR_VISIBILITY,\n\t\t\t\t\t\tCustomTitleBarVisibility.AUTO,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tconfigService.updateValue(\n\t\t\t\t\t\tTitleBarSetting.CUSTOM_TITLE_BAR_VISIBILITY,\n\t\t\t\t\t\tCustomTitleBarVisibility.NEVER,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase CustomTitleBarVisibility.AUTO:\n\t\t\tdefault:\n\t\t\t\tconfigService.updateValue(\n\t\t\t\t\tTitleBarSetting.CUSTOM_TITLE_BAR_VISIBILITY,\n\t\t\t\t\tCustomTitleBarVisibility.NEVER,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\nregisterAction2(ToggleCustomTitleBar);\n\nregisterAction2(\n\tclass ShowCustomTitleBar extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: `showCustomTitleBar`,\n\t\t\t\ttitle: localize2(\"showCustomTitleBar\", \"Show Custom Title Bar\"),\n\t\t\t\tprecondition: TitleBarVisibleContext.negate(),\n\t\t\t\tf1: true,\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor, ...args: any[]): void {\n\t\t\tconst configService = accessor.get(IConfigurationService);\n\t\t\tconfigService.updateValue(\n\t\t\t\tTitleBarSetting.CUSTOM_TITLE_BAR_VISIBILITY,\n\t\t\t\tCustomTitleBarVisibility.AUTO,\n\t\t\t);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass HideCustomTitleBar extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: `hideCustomTitleBar`,\n\t\t\t\ttitle: localize2(\"hideCustomTitleBar\", \"Hide Custom Title Bar\"),\n\t\t\t\tprecondition: TitleBarVisibleContext,\n\t\t\t\tf1: true,\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor, ...args: any[]): void {\n\t\t\tconst configService = accessor.get(IConfigurationService);\n\t\t\tconfigService.updateValue(\n\t\t\t\tTitleBarSetting.CUSTOM_TITLE_BAR_VISIBILITY,\n\t\t\t\tCustomTitleBarVisibility.NEVER,\n\t\t\t);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass HideCustomTitleBar extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: `hideCustomTitleBarInFullScreen`,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"hideCustomTitleBarInFullScreen\",\n\t\t\t\t\t\"Hide Custom Title Bar In Full Screen\",\n\t\t\t\t),\n\t\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\t\tTitleBarVisibleContext,\n\t\t\t\t\tIsMainWindowFullscreenContext,\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor, ...args: any[]): void {\n\t\t\tconst configService = accessor.get(IConfigurationService);\n\t\t\tconfigService.updateValue(\n\t\t\t\tTitleBarSetting.CUSTOM_TITLE_BAR_VISIBILITY,\n\t\t\t\tCustomTitleBarVisibility.WINDOWED,\n\t\t\t);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass ToggleEditorActions extends Action2 {\n\t\tstatic readonly settingsID = `workbench.editor.editorActionsLocation`;\n\t\tconstructor() {\n\t\t\tconst titleBarContextCondition = ContextKeyExpr.and(\n\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t`config.workbench.editor.showTabs`,\n\t\t\t\t\t\"none\",\n\t\t\t\t).negate(),\n\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t`config.${ToggleEditorActions.settingsID}`,\n\t\t\t\t\t\"default\",\n\t\t\t\t),\n\t\t\t)?.negate();\n\n\t\t\tsuper({\n\t\t\t\tid: `toggle.${ToggleEditorActions.settingsID}`,\n\t\t\t\ttitle: localize(\"toggle.editorActions\", \"Editor Actions\"),\n\t\t\t\ttoggled: ContextKeyExpr.equals(\n\t\t\t\t\t`config.${ToggleEditorActions.settingsID}`,\n\t\t\t\t\t\"hidden\",\n\t\t\t\t).negate(),\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.TitleBarContext,\n\t\t\t\t\t\torder: 3,\n\t\t\t\t\t\twhen: titleBarContextCondition,\n\t\t\t\t\t\tgroup: \"2_config\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.TitleBarTitleContext,\n\t\t\t\t\t\torder: 3,\n\t\t\t\t\t\twhen: titleBarContextCondition,\n\t\t\t\t\t\tgroup: \"2_config\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor, ...args: any[]): void {\n\t\t\tconst configService = accessor.get(IConfigurationService);\n\t\t\tconst storageService = accessor.get(IStorageService);\n\n\t\t\tconst location = configService.getValue<string>(\n\t\t\t\tToggleEditorActions.settingsID,\n\t\t\t);\n\t\t\tif (location === \"hidden\") {\n\t\t\t\tconst showTabs = configService.getValue<string>(\n\t\t\t\t\tLayoutSettings.EDITOR_TABS_MODE,\n\t\t\t\t);\n\n\t\t\t\t// If tabs are visible, then set the editor actions to be in the title bar\n\t\t\t\tif (showTabs !== \"none\") {\n\t\t\t\t\tconfigService.updateValue(\n\t\t\t\t\t\tToggleEditorActions.settingsID,\n\t\t\t\t\t\t\"titleBar\",\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// If tabs are not visible, then set the editor actions to the last location the were before being hidden\n\t\t\t\telse {\n\t\t\t\t\tconst storedValue = storageService.get(\n\t\t\t\t\t\tToggleEditorActions.settingsID,\n\t\t\t\t\t\tStorageScope.PROFILE,\n\t\t\t\t\t);\n\t\t\t\t\tconfigService.updateValue(\n\t\t\t\t\t\tToggleEditorActions.settingsID,\n\t\t\t\t\t\tstoredValue ?? \"default\",\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tstorageService.remove(\n\t\t\t\t\tToggleEditorActions.settingsID,\n\t\t\t\t\tStorageScope.PROFILE,\n\t\t\t\t);\n\t\t\t}\n\t\t\t// Store the current value (titleBar or default) in the storage service for later to restore\n\t\t\telse {\n\t\t\t\tconfigService.updateValue(\n\t\t\t\t\tToggleEditorActions.settingsID,\n\t\t\t\t\t\"hidden\",\n\t\t\t\t);\n\t\t\t\tstorageService.store(\n\t\t\t\t\tToggleEditorActions.settingsID,\n\t\t\t\t\tlocation,\n\t\t\t\t\tStorageScope.PROFILE,\n\t\t\t\t\tStorageTarget.USER,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n);\n\n// --- Toolbar actions --- //\n\nexport const ACCOUNTS_ACTIVITY_TILE_ACTION: IAction = {\n\tid: ACCOUNTS_ACTIVITY_ID,\n\tlabel: localize(\"accounts\", \"Accounts\"),\n\ttooltip: localize(\"accounts\", \"Accounts\"),\n\tclass: undefined,\n\tenabled: true,\n\trun: (): void => {},\n};\n\nexport const GLOBAL_ACTIVITY_TITLE_ACTION: IAction = {\n\tid: GLOBAL_ACTIVITY_ID,\n\tlabel: localize(\"manage\", \"Manage\"),\n\ttooltip: localize(\"manage\", \"Manage\"),\n\tclass: undefined,\n\tenabled: true,\n\trun: (): void => {},\n};\n"],
  "mappings": ";;AAMA,SAAgC,UAAU,iBAAiB;AAC3D;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,6BAA6B;AACtC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AAEP;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,sBAAsB;AAI/B,MAAM,2BAA2B,QAAQ;AAAA,EACxC,YACkB,SACjB,OACA,aACA,OACA,gBACC;AACD,UAAM,OAAO,iBACV,gCAAgC,UAAU,IAC1C,eAAe,KAAK;AACvB,UAAM;AAAA,MACL,IAAI,UAAU,OAAO;AAAA,MACrB;AAAA,MACA,UAAU,cAAc,EAAE,YAAY,IAAI;AAAA,MAC1C,SAAS,eAAe,OAAO,UAAU,OAAO,IAAI,IAAI;AAAA,MACxD,MAAM;AAAA,QACL;AAAA,UACC,IAAI,OAAO;AAAA,UACX;AAAA,UACA;AAAA,UACA,OAAO;AAAA,QACR;AAAA,QACA;AAAA,UACC,IAAI,OAAO;AAAA,UACX;AAAA,UACA;AAAA,UACA,OAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD,CAAC;AA5BgB;AAAA,EA6BlB;AAAA,EAzED,OA0CyC;AAAA;AAAA;AAAA,EAiCxC,IAAI,aAA+B,MAAmB;AACrD,UAAM,gBAAgB,SAAS,IAAI,qBAAqB;AACxD,UAAM,QAAQ,cAAc,SAAS,KAAK,OAAO;AACjD,kBAAc,YAAY,KAAK,SAAS,CAAC,KAAK;AAAA,EAC/C;AACD;AAEA;AAAA,EACC,MAAM,4BAA4B,mBAAmB;AAAA,IAnFtD,OAmFsD;AAAA;AAAA;AAAA,IACpD,cAAc;AACb;AAAA,QACC,eAAe;AAAA,QACf,SAAS,wBAAwB,gBAAgB;AAAA,QACjD;AAAA,UACC;AAAA,UACA;AAAA,QACD;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,4BAA4B,mBAAmB;AAAA,IApGtD,OAoGsD;AAAA;AAAA;AAAA,IACpD,cAAc;AACb;AAAA,QACC;AAAA,QACA,SAAS,iBAAiB,iBAAiB;AAAA,QAC3C;AAAA,UACC;AAAA,UACA;AAAA,QACD;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,6BAA6B,QAAQ;AAAA,IArH5C,OAqH4C;AAAA;AAAA;AAAA,IAC1C,cAAc;AACb,YAAM;AAAA,QACL,IAAI,UAAU,gBAAgB,2BAA2B;AAAA,QACzD,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,MAAM;AAAA,UACL;AAAA,YACC,IAAI,OAAO;AAAA,YACX,OAAO;AAAA,YACP,MAAM,eAAe;AAAA,cACpB,qBAAqB;AAAA,cACrB,cAAc;AAAA,YACf;AAAA,YACA,OAAO;AAAA,UACR;AAAA,UACA;AAAA,YACC,IAAI,OAAO;AAAA,YACX,OAAO;AAAA,YACP,MAAM,eAAe;AAAA,cACpB,qBAAqB;AAAA,cACrB,cAAc;AAAA,YACf;AAAA,YACA,OAAO;AAAA,UACR;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,IAAI,aAA+B,MAAmB;AACrD,YAAM,gBAAgB,SAAS,IAAI,qBAAqB;AACxD,oBAAc;AAAA,QACb,gBAAgB;AAAA,QAChB,yBAAyB;AAAA,MAC1B;AAAA,IACD;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,qCAAqC,QAAQ;AAAA,IA/JpD,OA+JoD;AAAA;AAAA;AAAA,IAClD,cAAc;AACb,YAAM;AAAA,QACL,IAAI,UAAU,gBAAgB,2BAA2B;AAAA,QACzD,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,MAAM;AAAA,UACL;AAAA,YACC,IAAI,OAAO;AAAA,YACX,OAAO;AAAA,YACP,MAAM;AAAA,YACN,OAAO;AAAA,UACR;AAAA,UACA;AAAA,YACC,IAAI,OAAO;AAAA,YACX,OAAO;AAAA,YACP,MAAM;AAAA,YACN,OAAO;AAAA,UACR;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,IAAI,aAA+B,MAAmB;AACrD,YAAM,gBAAgB,SAAS,IAAI,qBAAqB;AACxD,oBAAc;AAAA,QACb,gBAAgB;AAAA,QAChB,yBAAyB;AAAA,MAC1B;AAAA,IACD;AAAA,EACD;AACD;AAEA,MAAMA,8BAA6B,QAAQ;AAAA,EAlM3C,OAkM2C;AAAA;AAAA;AAAA,EAC1C,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,SAAS,yBAAyB,kBAAkB;AAAA,MAC3D,SAAS;AAAA,MACT,MAAM;AAAA,QACL;AAAA,UACC,IAAI,OAAO;AAAA,UACX,OAAO;AAAA,UACP,MAAM,eAAe;AAAA,YACpB,eAAe;AAAA,cACd,eAAe;AAAA,gBACd,qBAAqB;AAAA,gBACrB,cAAc;AAAA,cACf;AAAA,cACA,eAAe;AAAA,gBACd,eAAe;AAAA,kBACd;AAAA,kBACA;AAAA,gBACD;AAAA,gBACA,eAAe;AAAA,kBACd;AAAA,kBACA;AAAA,gBACD;AAAA,gBACA,eAAe;AAAA,kBACd;AAAA,kBACA;AAAA,gBACD;AAAA,gBACA,eAAe;AAAA,kBACd;AAAA,kBACA;AAAA,gBACD;AAAA,gBACA,eAAe;AAAA,kBACd;AAAA,kBACA;AAAA,gBACD;AAAA,cACD,GAAG,OAAO;AAAA,YACX;AAAA,YACA;AAAA,UACD;AAAA,UACA,OAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,IAAI,aAA+B,MAAmB;AACrD,UAAM,gBAAgB,SAAS,IAAI,qBAAqB;AACxD,UAAM,oBAAoB,SAAS,IAAI,kBAAkB;AACzD,UAAM,qBACL,cAAc;AAAA,MACb,gBAAgB;AAAA,IACjB;AACD,YAAQ,oBAAoB;AAAA,MAC3B,KAAK,yBAAyB;AAC7B,sBAAc;AAAA,UACb,gBAAgB;AAAA,UAChB,yBAAyB;AAAA,QAC1B;AACA;AAAA,MACD,KAAK,yBAAyB,UAAU;AACvC,cAAM,eAAe,8BAA8B;AAAA,UAClD,kBAAkB,WAAW,IAAI;AAAA,QAClC;AACA,YAAI,cAAc;AACjB,wBAAc;AAAA,YACb,gBAAgB;AAAA,YAChB,yBAAyB;AAAA,UAC1B;AAAA,QACD,OAAO;AACN,wBAAc;AAAA,YACb,gBAAgB;AAAA,YAChB,yBAAyB;AAAA,UAC1B;AAAA,QACD;AACA;AAAA,MACD;AAAA,MACA,KAAK,yBAAyB;AAAA,MAC9B;AACC,sBAAc;AAAA,UACb,gBAAgB;AAAA,UAChB,yBAAyB;AAAA,QAC1B;AACA;AAAA,IACF;AAAA,EACD;AACD;AACA,gBAAgBA,qBAAoB;AAEpC;AAAA,EACC,MAAM,2BAA2B,QAAQ;AAAA,IA7R1C,OA6R0C;AAAA;AAAA;AAAA,IACxC,cAAc;AACb,YAAM;AAAA,QACL,IAAI;AAAA,QACJ,OAAO,UAAU,sBAAsB,uBAAuB;AAAA,QAC9D,cAAc,uBAAuB,OAAO;AAAA,QAC5C,IAAI;AAAA,MACL,CAAC;AAAA,IACF;AAAA,IAEA,IAAI,aAA+B,MAAmB;AACrD,YAAM,gBAAgB,SAAS,IAAI,qBAAqB;AACxD,oBAAc;AAAA,QACb,gBAAgB;AAAA,QAChB,yBAAyB;AAAA,MAC1B;AAAA,IACD;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,2BAA2B,QAAQ;AAAA,IAlT1C,OAkT0C;AAAA;AAAA;AAAA,IACxC,cAAc;AACb,YAAM;AAAA,QACL,IAAI;AAAA,QACJ,OAAO,UAAU,sBAAsB,uBAAuB;AAAA,QAC9D,cAAc;AAAA,QACd,IAAI;AAAA,MACL,CAAC;AAAA,IACF;AAAA,IAEA,IAAI,aAA+B,MAAmB;AACrD,YAAM,gBAAgB,SAAS,IAAI,qBAAqB;AACxD,oBAAc;AAAA,QACb,gBAAgB;AAAA,QAChB,yBAAyB;AAAA,MAC1B;AAAA,IACD;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAMC,4BAA2B,QAAQ;AAAA,IAvU1C,OAuU0C;AAAA;AAAA;AAAA,IACxC,cAAc;AACb,YAAM;AAAA,QACL,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,cAAc,eAAe;AAAA,UAC5B;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,MACL,CAAC;AAAA,IACF;AAAA,IAEA,IAAI,aAA+B,MAAmB;AACrD,YAAM,gBAAgB,SAAS,IAAI,qBAAqB;AACxD,oBAAc;AAAA,QACb,gBAAgB;AAAA,QAChB,yBAAyB;AAAA,MAC1B;AAAA,IACD;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,4BAA4B,QAAQ;AAAA,IAlW3C,OAkW2C;AAAA;AAAA;AAAA,IACzC,OAAgB,aAAa;AAAA,IAC7B,cAAc;AACb,YAAM,2BAA2B,eAAe;AAAA,QAC/C,eAAe;AAAA,UACd;AAAA,UACA;AAAA,QACD,EAAE,OAAO;AAAA,QACT,eAAe;AAAA,UACd,UAAU,oBAAoB,UAAU;AAAA,UACxC;AAAA,QACD;AAAA,MACD,GAAG,OAAO;AAEV,YAAM;AAAA,QACL,IAAI,UAAU,oBAAoB,UAAU;AAAA,QAC5C,OAAO,SAAS,wBAAwB,gBAAgB;AAAA,QACxD,SAAS,eAAe;AAAA,UACvB,UAAU,oBAAoB,UAAU;AAAA,UACxC;AAAA,QACD,EAAE,OAAO;AAAA,QACT,MAAM;AAAA,UACL;AAAA,YACC,IAAI,OAAO;AAAA,YACX,OAAO;AAAA,YACP,MAAM;AAAA,YACN,OAAO;AAAA,UACR;AAAA,UACA;AAAA,YACC,IAAI,OAAO;AAAA,YACX,OAAO;AAAA,YACP,MAAM;AAAA,YACN,OAAO;AAAA,UACR;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,IAAI,aAA+B,MAAmB;AACrD,YAAM,gBAAgB,SAAS,IAAI,qBAAqB;AACxD,YAAM,iBAAiB,SAAS,IAAI,eAAe;AAEnD,YAAM,WAAW,cAAc;AAAA,QAC9B,oBAAoB;AAAA,MACrB;AACA,UAAI,aAAa,UAAU;AAC1B,cAAM,WAAW,cAAc;AAAA,UAC9B,eAAe;AAAA,QAChB;AAGA,YAAI,aAAa,QAAQ;AACxB,wBAAc;AAAA,YACb,oBAAoB;AAAA,YACpB;AAAA,UACD;AAAA,QACD,OAGK;AACJ,gBAAM,cAAc,eAAe;AAAA,YAClC,oBAAoB;AAAA,YACpB,aAAa;AAAA,UACd;AACA,wBAAc;AAAA,YACb,oBAAoB;AAAA,YACpB,eAAe;AAAA,UAChB;AAAA,QACD;AAEA,uBAAe;AAAA,UACd,oBAAoB;AAAA,UACpB,aAAa;AAAA,QACd;AAAA,MACD,OAEK;AACJ,sBAAc;AAAA,UACb,oBAAoB;AAAA,UACpB;AAAA,QACD;AACA,uBAAe;AAAA,UACd,oBAAoB;AAAA,UACpB;AAAA,UACA,aAAa;AAAA,UACb,cAAc;AAAA,QACf;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAIO,MAAM,gCAAyC;AAAA,EACrD,IAAI;AAAA,EACJ,OAAO,SAAS,YAAY,UAAU;AAAA,EACtC,SAAS,SAAS,YAAY,UAAU;AAAA,EACxC,OAAO;AAAA,EACP,SAAS;AAAA,EACT,KAAK,6BAAY;AAAA,EAAC,GAAb;AACN;AAEO,MAAM,+BAAwC;AAAA,EACpD,IAAI;AAAA,EACJ,OAAO,SAAS,UAAU,QAAQ;AAAA,EAClC,SAAS,SAAS,UAAU,QAAQ;AAAA,EACpC,OAAO;AAAA,EACP,SAAS;AAAA,EACT,KAAK,6BAAY;AAAA,EAAC,GAAb;AACN;",
  "names": ["ToggleCustomTitleBar", "HideCustomTitleBar"]
}
