{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/titlebar/titlebarActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILocalizedString, localize, localize2 } from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../platform/storage/common/storage.js';\nimport { LayoutSettings } from '../../../services/layout/browser/layoutService.js';\nimport { Action2, MenuId, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ACCOUNTS_ACTIVITY_ID, GLOBAL_ACTIVITY_ID } from '../../../common/activity.js';\nimport { IAction } from '../../../../base/common/actions.js';\nimport { IsAuxiliaryWindowFocusedContext, IsMainWindowFullscreenContext, TitleBarStyleContext, TitleBarVisibleContext } from '../../../common/contextkeys.js';\nimport { CustomTitleBarVisibility, TitleBarSetting, TitlebarStyle } from '../../../../platform/window/common/window.js';\n\n// --- Context Menu Actions --- //\n\nclass ToggleConfigAction extends Action2 {\n\n\tconstructor(private readonly section: string, title: string, description: string | ILocalizedString | undefined, order: number, mainWindowOnly: boolean) {\n\t\tconst when = mainWindowOnly ? IsAuxiliaryWindowFocusedContext.toNegated() : ContextKeyExpr.true();\n\t\tsuper({\n\t\t\tid: `toggle.${section}`,\n\t\t\ttitle,\n\t\t\tmetadata: description ? { description } : undefined,\n\t\t\ttoggled: ContextKeyExpr.equals(`config.${section}`, true),\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.TitleBarContext,\n\t\t\t\t\twhen,\n\t\t\t\t\torder,\n\t\t\t\t\tgroup: '2_config'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.TitleBarTitleContext,\n\t\t\t\t\twhen,\n\t\t\t\t\torder,\n\t\t\t\t\tgroup: '2_config'\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: any[]): void {\n\t\tconst configService = accessor.get(IConfigurationService);\n\t\tconst value = configService.getValue(this.section);\n\t\tconfigService.updateValue(this.section, !value);\n\t}\n}\n\nregisterAction2(class ToggleCommandCenter extends ToggleConfigAction {\n\tconstructor() {\n\t\tsuper(LayoutSettings.COMMAND_CENTER, localize('toggle.commandCenter', 'Command Center'), localize('toggle.commandCenterDescription', \"Toggle visibility of the Command Center in title bar\"), 1, false);\n\t}\n});\n\nregisterAction2(class ToggleLayoutControl extends ToggleConfigAction {\n\tconstructor() {\n\t\tsuper('workbench.layoutControl.enabled', localize('toggle.layout', 'Layout Controls'), localize('toggle.layoutDescription', \"Toggle visibility of the Layout Controls in title bar\"), 2, true);\n\t}\n});\n\nregisterAction2(class ToggleCustomTitleBar extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: `toggle.${TitleBarSetting.CUSTOM_TITLE_BAR_VISIBILITY}`,\n\t\t\ttitle: localize('toggle.hideCustomTitleBar', 'Hide Custom Title Bar'),\n\t\t\tmenu: [\n\t\t\t\t{ id: MenuId.TitleBarContext, order: 0, when: ContextKeyExpr.equals(TitleBarStyleContext.key, TitlebarStyle.NATIVE), group: '3_toggle' },\n\t\t\t\t{ id: MenuId.TitleBarTitleContext, order: 0, when: ContextKeyExpr.equals(TitleBarStyleContext.key, TitlebarStyle.NATIVE), group: '3_toggle' },\n\t\t\t]\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: any[]): void {\n\t\tconst configService = accessor.get(IConfigurationService);\n\t\tconfigService.updateValue(TitleBarSetting.CUSTOM_TITLE_BAR_VISIBILITY, CustomTitleBarVisibility.NEVER);\n\t}\n});\n\nregisterAction2(class ToggleCustomTitleBarWindowed extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: `toggle.${TitleBarSetting.CUSTOM_TITLE_BAR_VISIBILITY}.windowed`,\n\t\t\ttitle: localize('toggle.hideCustomTitleBarInFullScreen', 'Hide Custom Title Bar In Full Screen'),\n\t\t\tmenu: [\n\t\t\t\t{ id: MenuId.TitleBarContext, order: 1, when: IsMainWindowFullscreenContext, group: '3_toggle' },\n\t\t\t\t{ id: MenuId.TitleBarTitleContext, order: 1, when: IsMainWindowFullscreenContext, group: '3_toggle' },\n\t\t\t]\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: any[]): void {\n\t\tconst configService = accessor.get(IConfigurationService);\n\t\tconfigService.updateValue(TitleBarSetting.CUSTOM_TITLE_BAR_VISIBILITY, CustomTitleBarVisibility.WINDOWED);\n\t}\n});\n\n\nclass ToggleCustomTitleBar extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: `toggle.toggleCustomTitleBar`,\n\t\t\ttitle: localize('toggle.customTitleBar', 'Custom Title Bar'),\n\t\t\ttoggled: TitleBarVisibleContext,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\t\torder: 6,\n\t\t\t\t\twhen: ContextKeyExpr.or(\n\t\t\t\t\t\tContextKeyExpr.and(\n\t\t\t\t\t\t\tContextKeyExpr.equals(TitleBarStyleContext.key, TitlebarStyle.NATIVE),\n\t\t\t\t\t\t\tContextKeyExpr.and(\n\t\t\t\t\t\t\t\tContextKeyExpr.equals('config.workbench.layoutControl.enabled', false),\n\t\t\t\t\t\t\t\tContextKeyExpr.equals('config.window.commandCenter', false),\n\t\t\t\t\t\t\t\tContextKeyExpr.notEquals('config.workbench.editor.editorActionsLocation', 'titleBar'),\n\t\t\t\t\t\t\t\tContextKeyExpr.notEquals('config.workbench.activityBar.location', 'top'),\n\t\t\t\t\t\t\t\tContextKeyExpr.notEquals('config.workbench.activityBar.location', 'bottom')\n\t\t\t\t\t\t\t)?.negate()\n\t\t\t\t\t\t),\n\t\t\t\t\t\tIsMainWindowFullscreenContext\n\t\t\t\t\t),\n\t\t\t\t\tgroup: '2_workbench_layout'\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: any[]): void {\n\t\tconst configService = accessor.get(IConfigurationService);\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tconst titleBarVisibility = configService.getValue<CustomTitleBarVisibility>(TitleBarSetting.CUSTOM_TITLE_BAR_VISIBILITY);\n\t\tswitch (titleBarVisibility) {\n\t\t\tcase CustomTitleBarVisibility.NEVER:\n\t\t\t\tconfigService.updateValue(TitleBarSetting.CUSTOM_TITLE_BAR_VISIBILITY, CustomTitleBarVisibility.AUTO);\n\t\t\t\tbreak;\n\t\t\tcase CustomTitleBarVisibility.WINDOWED: {\n\t\t\t\tconst isFullScreen = IsMainWindowFullscreenContext.evaluate(contextKeyService.getContext(null));\n\t\t\t\tif (isFullScreen) {\n\t\t\t\t\tconfigService.updateValue(TitleBarSetting.CUSTOM_TITLE_BAR_VISIBILITY, CustomTitleBarVisibility.AUTO);\n\t\t\t\t} else {\n\t\t\t\t\tconfigService.updateValue(TitleBarSetting.CUSTOM_TITLE_BAR_VISIBILITY, CustomTitleBarVisibility.NEVER);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase CustomTitleBarVisibility.AUTO:\n\t\t\tdefault:\n\t\t\t\tconfigService.updateValue(TitleBarSetting.CUSTOM_TITLE_BAR_VISIBILITY, CustomTitleBarVisibility.NEVER);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\nregisterAction2(ToggleCustomTitleBar);\n\nregisterAction2(class ShowCustomTitleBar extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: `showCustomTitleBar`,\n\t\t\ttitle: localize2('showCustomTitleBar', \"Show Custom Title Bar\"),\n\t\t\tprecondition: TitleBarVisibleContext.negate(),\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: any[]): void {\n\t\tconst configService = accessor.get(IConfigurationService);\n\t\tconfigService.updateValue(TitleBarSetting.CUSTOM_TITLE_BAR_VISIBILITY, CustomTitleBarVisibility.AUTO);\n\t}\n});\n\n\nregisterAction2(class HideCustomTitleBar extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: `hideCustomTitleBar`,\n\t\t\ttitle: localize2('hideCustomTitleBar', \"Hide Custom Title Bar\"),\n\t\t\tprecondition: TitleBarVisibleContext,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: any[]): void {\n\t\tconst configService = accessor.get(IConfigurationService);\n\t\tconfigService.updateValue(TitleBarSetting.CUSTOM_TITLE_BAR_VISIBILITY, CustomTitleBarVisibility.NEVER);\n\t}\n});\n\nregisterAction2(class HideCustomTitleBar extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: `hideCustomTitleBarInFullScreen`,\n\t\t\ttitle: localize2('hideCustomTitleBarInFullScreen', \"Hide Custom Title Bar In Full Screen\"),\n\t\t\tprecondition: ContextKeyExpr.and(TitleBarVisibleContext, IsMainWindowFullscreenContext),\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: any[]): void {\n\t\tconst configService = accessor.get(IConfigurationService);\n\t\tconfigService.updateValue(TitleBarSetting.CUSTOM_TITLE_BAR_VISIBILITY, CustomTitleBarVisibility.WINDOWED);\n\t}\n});\n\nregisterAction2(class ToggleEditorActions extends Action2 {\n\tstatic readonly settingsID = `workbench.editor.editorActionsLocation`;\n\tconstructor() {\n\n\t\tconst titleBarContextCondition = ContextKeyExpr.and(\n\t\t\tContextKeyExpr.equals(`config.workbench.editor.showTabs`, 'none').negate(),\n\t\t\tContextKeyExpr.equals(`config.${ToggleEditorActions.settingsID}`, 'default'),\n\t\t)?.negate();\n\n\t\tsuper({\n\t\t\tid: `toggle.${ToggleEditorActions.settingsID}`,\n\t\t\ttitle: localize('toggle.editorActions', 'Editor Actions'),\n\t\t\ttoggled: ContextKeyExpr.equals(`config.${ToggleEditorActions.settingsID}`, 'hidden').negate(),\n\t\t\tmenu: [\n\t\t\t\t{ id: MenuId.TitleBarContext, order: 3, when: titleBarContextCondition, group: '2_config' },\n\t\t\t\t{ id: MenuId.TitleBarTitleContext, order: 3, when: titleBarContextCondition, group: '2_config' }\n\t\t\t]\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: any[]): void {\n\t\tconst configService = accessor.get(IConfigurationService);\n\t\tconst storageService = accessor.get(IStorageService);\n\n\t\tconst location = configService.getValue<string>(ToggleEditorActions.settingsID);\n\t\tif (location === 'hidden') {\n\t\t\tconst showTabs = configService.getValue<string>(LayoutSettings.EDITOR_TABS_MODE);\n\n\t\t\t// If tabs are visible, then set the editor actions to be in the title bar\n\t\t\tif (showTabs !== 'none') {\n\t\t\t\tconfigService.updateValue(ToggleEditorActions.settingsID, 'titleBar');\n\t\t\t}\n\n\t\t\t// If tabs are not visible, then set the editor actions to the last location the were before being hidden\n\t\t\telse {\n\t\t\t\tconst storedValue = storageService.get(ToggleEditorActions.settingsID, StorageScope.PROFILE);\n\t\t\t\tconfigService.updateValue(ToggleEditorActions.settingsID, storedValue ?? 'default');\n\t\t\t}\n\n\t\t\tstorageService.remove(ToggleEditorActions.settingsID, StorageScope.PROFILE);\n\t\t}\n\t\t// Store the current value (titleBar or default) in the storage service for later to restore\n\t\telse {\n\t\t\tconfigService.updateValue(ToggleEditorActions.settingsID, 'hidden');\n\t\t\tstorageService.store(ToggleEditorActions.settingsID, location, StorageScope.PROFILE, StorageTarget.USER);\n\t\t}\n\t}\n});\n\n// --- Toolbar actions --- //\n\nexport const ACCOUNTS_ACTIVITY_TILE_ACTION: IAction = {\n\tid: ACCOUNTS_ACTIVITY_ID,\n\tlabel: localize('accounts', \"Accounts\"),\n\ttooltip: localize('accounts', \"Accounts\"),\n\tclass: undefined,\n\tenabled: true,\n\trun: function (): void { }\n};\n\nexport const GLOBAL_ACTIVITY_TITLE_ACTION: IAction = {\n\tid: GLOBAL_ACTIVITY_ID,\n\tlabel: localize('manage', \"Manage\"),\n\ttooltip: localize('manage', \"Manage\"),\n\tclass: undefined,\n\tenabled: true,\n\trun: function (): void { }\n};\n"],
  "mappings": "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",
  "names": ["ToggleCustomTitleBar", "HideCustomTitleBar"]
}
