var z=Object.defineProperty;var X=Object.getOwnPropertyDescriptor;var B=(v,p,e,t)=>{for(var i=t>1?void 0:t?X(p,e):p,n=v.length-1,r;n>=0;n--)(r=v[n])&&(i=(t?r(p,e,i):r(i))||i);return t&&i&&z(p,e,i),i},u=(v,p)=>(e,t)=>p(e,t,v);import"./media/menubarControl.css";import{localize as a,localize2 as j}from"../../../../nls.js";import{IMenuService as q,MenuId as s,SubmenuItemAction as C,registerAction2 as Y,Action2 as Z,MenuItemAction as L,MenuRegistry as m}from"../../../../platform/actions/common/actions.js";import{getMenuBarVisibility as _,hasNativeTitlebar as J,TitleBarSetting as Q}from"../../../../platform/window/common/window.js";import{IContextKeyService as $}from"../../../../platform/contextkey/common/contextkey.js";import{Action as d,SubmenuAction as ee,Separator as M,ActionRunner as ie,toAction as te}from"../../../../base/common/actions.js";import{addDisposableListener as U,Dimension as N,EventType as k}from"../../../../base/browser/dom.js";import{IKeybindingService as ne}from"../../../../platform/keybinding/common/keybinding.js";import{isMacintosh as f,isWeb as g,isIOS as oe,isNative as re}from"../../../../base/common/platform.js";import{IConfigurationService as se}from"../../../../platform/configuration/common/configuration.js";import{Emitter as D}from"../../../../base/common/event.js";import{Disposable as ae,DisposableStore as W}from"../../../../base/common/lifecycle.js";import{isRecentFolder as ce,isRecentWorkspace as ue,IWorkspacesService as le}from"../../../../platform/workspaces/common/workspaces.js";import{RunOnceScheduler as de}from"../../../../base/common/async.js";import{ILabelService as pe,Verbosity as V}from"../../../../platform/label/common/label.js";import{IUpdateService as me,StateType as b}from"../../../../platform/update/common/update.js";import{IStorageService as he,StorageScope as x,StorageTarget as be}from"../../../../platform/storage/common/storage.js";import{INotificationService as fe,Severity as ge}from"../../../../platform/notification/common/notification.js";import{IPreferencesService as ve}from"../../../services/preferences/common/preferences.js";import{IWorkbenchEnvironmentService as Me}from"../../../services/environment/common/environmentService.js";import{MenuBar as ye}from"../../../../base/browser/ui/menu/menubar.js";import{HorizontalDirection as K,VerticalDirection as H}from"../../../../base/browser/ui/menu/menu.js";import{mnemonicMenuLabel as h,unmnemonicLabel as Se}from"../../../../base/common/labels.js";import{IAccessibilityService as Ie}from"../../../../platform/accessibility/common/accessibility.js";import{isFullscreen as Ae,onDidChangeFullscreen as we}from"../../../../base/browser/browser.js";import{IHostService as Ce}from"../../../services/host/browser/host.js";import{BrowserFeatures as Ue}from"../../../../base/browser/canIUse.js";import{KeyCode as ke,KeyMod as De}from"../../../../base/common/keyCodes.js";import{KeybindingWeight as Oe}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{IsMacNativeContext as Re,IsWebContext as Te}from"../../../../platform/contextkey/common/contextkeys.js";import{ICommandService as Ee}from"../../../../platform/commands/common/commands.js";import{ITelemetryService as Fe}from"../../../../platform/telemetry/common/telemetry.js";import{OpenRecentAction as Be}from"../../actions/windowActions.js";import{isICommandActionToggleInfo as Le}from"../../../../platform/action/common/action.js";import{createAndFillInContextMenuActions as _e}from"../../../../platform/actions/browser/menuEntryActionViewItem.js";import{defaultMenuStyles as Ne}from"../../../../platform/theme/browser/defaultStyles.js";import{mainWindow as O}from"../../../../base/browser/window.js";import{ActivityBarPosition as We}from"../../../services/layout/browser/layoutService.js";m.appendMenuItem(s.MenubarMainMenu,{submenu:s.MenubarFileMenu,title:{value:"File",original:"File",mnemonicTitle:a({key:"mFile",comment:["&& denotes a mnemonic"]},"&&File")},order:1}),m.appendMenuItem(s.MenubarMainMenu,{submenu:s.MenubarEditMenu,title:{value:"Edit",original:"Edit",mnemonicTitle:a({key:"mEdit",comment:["&& denotes a mnemonic"]},"&&Edit")},order:2}),m.appendMenuItem(s.MenubarMainMenu,{submenu:s.MenubarSelectionMenu,title:{value:"Selection",original:"Selection",mnemonicTitle:a({key:"mSelection",comment:["&& denotes a mnemonic"]},"&&Selection")},order:3}),m.appendMenuItem(s.MenubarMainMenu,{submenu:s.MenubarViewMenu,title:{value:"View",original:"View",mnemonicTitle:a({key:"mView",comment:["&& denotes a mnemonic"]},"&&View")},order:4}),m.appendMenuItem(s.MenubarMainMenu,{submenu:s.MenubarGoMenu,title:{value:"Go",original:"Go",mnemonicTitle:a({key:"mGoto",comment:["&& denotes a mnemonic"]},"&&Go")},order:5}),m.appendMenuItem(s.MenubarMainMenu,{submenu:s.MenubarTerminalMenu,title:{value:"Terminal",original:"Terminal",mnemonicTitle:a({key:"mTerminal",comment:["&& denotes a mnemonic"]},"&&Terminal")},order:7}),m.appendMenuItem(s.MenubarMainMenu,{submenu:s.MenubarHelpMenu,title:{value:"Help",original:"Help",mnemonicTitle:a({key:"mHelp",comment:["&& denotes a mnemonic"]},"&&Help")},order:8}),m.appendMenuItem(s.MenubarMainMenu,{submenu:s.MenubarPreferencesMenu,title:{value:"Preferences",original:"Preferences",mnemonicTitle:a({key:"mPreferences",comment:["&& denotes a mnemonic"]},"Preferences")},when:Re,order:9});class A extends ae{constructor(e,t,i,n,r,o,l,c,y,R,T,E,P,F){super();this.menuService=e;this.workspacesService=t;this.contextKeyService=i;this.keybindingService=n;this.configurationService=r;this.labelService=o;this.updateService=l;this.storageService=c;this.notificationService=y;this.preferencesService=R;this.environmentService=T;this.accessibilityService=E;this.hostService=P;this.commandService=F;this.mainMenu=this._register(this.menuService.createMenu(s.MenubarMainMenu,this.contextKeyService)),this.mainMenuDisposables=this._register(new W),this.setupMainMenu(),this.menuUpdater=this._register(new de(()=>this.doUpdateMenubar(!1),200)),this.notifyUserOfCustomMenubarAccessibility()}keys=["window.menuBarVisibility","window.enableMenuBarMnemonics","window.customMenuBarAltFocus","workbench.sideBar.location","window.nativeTabs"];mainMenu;menus={};topLevelTitles={};mainMenuDisposables;recentlyOpened={files:[],workspaces:[]};menuUpdater;static MAX_MENU_RECENT_ENTRIES=10;registerListeners(){this._register(this.hostService.onDidChangeFocus(e=>this.onDidChangeWindowFocus(e))),this._register(this.configurationService.onDidChangeConfiguration(e=>this.onConfigurationUpdated(e))),this._register(this.updateService.onStateChange(()=>this.onUpdateStateChange())),this._register(this.workspacesService.onDidChangeRecentlyOpened(()=>{this.onDidChangeRecentlyOpened()})),this._register(this.keybindingService.onDidUpdateKeybindings(()=>this.updateMenubar())),this._register(this.labelService.onDidChangeFormatters(()=>{this.onDidChangeRecentlyOpened()})),this._register(this.mainMenu.onDidChange(()=>{this.setupMainMenu(),this.doUpdateMenubar(!0)}))}setupMainMenu(){this.mainMenuDisposables.clear(),this.menus={},this.topLevelTitles={};const[,e]=this.mainMenu.getActions()[0];for(const t of e)t instanceof C&&typeof t.item.title!="string"&&(this.menus[t.item.title.original]=this.mainMenuDisposables.add(this.menuService.createMenu(t.item.submenu,this.contextKeyService,{emitEventsForSubmenuChanges:!0})),this.topLevelTitles[t.item.title.original]=t.item.title.mnemonicTitle??t.item.title.value)}updateMenubar(){this.menuUpdater.schedule()}calculateActionLabel(e){const t=e.label;switch(e.id){default:break}return t}onUpdateStateChange(){this.updateMenubar()}onUpdateKeybindings(){this.updateMenubar()}getOpenRecentActions(){if(!this.recentlyOpened)return[];const{workspaces:e,files:t}=this.recentlyOpened,i=[];if(e.length>0){for(let n=0;n<A.MAX_MENU_RECENT_ENTRIES&&n<e.length;n++)i.push(this.createOpenRecentMenuAction(e[n]));i.push(new M)}if(t.length>0){for(let n=0;n<A.MAX_MENU_RECENT_ENTRIES&&n<t.length;n++)i.push(this.createOpenRecentMenuAction(t[n]));i.push(new M)}return i}onDidChangeWindowFocus(e){e&&this.onDidChangeRecentlyOpened()}onConfigurationUpdated(e){this.keys.some(t=>e.affectsConfiguration(t))&&this.updateMenubar(),e.affectsConfiguration("editor.accessibilitySupport")&&this.notifyUserOfCustomMenubarAccessibility(),e.affectsConfiguration("window.menuBarVisibility")&&this.onDidChangeRecentlyOpened()}get menubarHidden(){return f&&re?!1:_(this.configurationService)==="hidden"}onDidChangeRecentlyOpened(){this.menubarHidden||this.workspacesService.getRecentlyOpened().then(e=>{this.recentlyOpened=e,this.updateMenubar()})}createOpenRecentMenuAction(e){let t,i,n,r;const o=e.remoteAuthority;ce(e)?(i=e.folderUri,t=e.label||this.labelService.getWorkspaceLabel(i,{verbose:V.LONG}),n="openRecentFolder",r={folderUri:i}):ue(e)?(i=e.workspace.configPath,t=e.label||this.labelService.getWorkspaceLabel(e.workspace,{verbose:V.LONG}),n="openRecentWorkspace",r={workspaceUri:i}):(i=e.fileUri,t=e.label||this.labelService.getUriLabel(i),n="openRecentFile",r={fileUri:i});const l=te({id:n,label:Se(t),run:c=>{const y=c&&(!f&&(c.ctrlKey||c.shiftKey)||f&&(c.metaKey||c.altKey));return this.hostService.openWindow([r],{forceNewWindow:!!y,remoteAuthority:o||null})}});return Object.assign(l,{uri:i,remoteAuthority:o})}notifyUserOfCustomMenubarAccessibility(){if(g||f)return;const e=this.storageService.getBoolean("menubar/accessibleMenubarNotified",x.APPLICATION,!1),t=!J(this.configurationService);if(e||t||!this.accessibilityService.isScreenReaderOptimized())return;const i=a("menubar.customTitlebarAccessibilityNotification","Accessibility support is enabled for you. For the most accessible experience, we recommend the custom title bar style.");this.notificationService.prompt(ge.Info,i,[{label:a("goToSetting","Open Settings"),run:()=>this.preferencesService.openUserSettings({query:Q.TITLE_BAR_STYLE})}]),this.storageService.store("menubar/accessibleMenubarNotified",!0,x.APPLICATION,be.USER)}}let S;function Ve(){return S||(S=new D,Y(class extends Z{constructor(){super({id:"workbench.actions.menubar.focus",title:j("focusMenu","Focus Application Menu"),keybinding:{primary:De.Alt|ke.F10,weight:Oe.WorkbenchContrib,when:Te},f1:!0})}async run(){S?.fire()}})),S}let I=class extends A{constructor(e,t,i,n,r,o,l,c,y,R,T,E,P,F,G){super(e,t,i,n,r,o,l,c,y,R,T,E,F,G);this.telemetryService=P;this._onVisibilityChange=this._register(new D),this._onFocusStateChange=this._register(new D),this.actionRunner=this._register(new ie),this.actionRunner.onDidRun(w=>{this.telemetryService.publicLog2("workbenchActionExecuted",{id:w.action.id,from:"menu"})}),this.workspacesService.getRecentlyOpened().then(w=>{this.recentlyOpened=w}),this.registerListeners()}menubar;container;alwaysOnMnemonics=!1;focusInsideMenubar=!1;pendingFirstTimeUpdate=!1;visible=!0;actionRunner;webNavigationMenu=this._register(this.menuService.createMenu(s.MenubarHomeMenu,this.contextKeyService));_onVisibilityChange;_onFocusStateChange;doUpdateMenubar(e){this.focusInsideMenubar||this.setupCustomMenubar(e),e&&(this.pendingFirstTimeUpdate=!0)}getUpdateAction(){switch(this.updateService.state.type){case b.Idle:return new d("update.check",a({key:"checkForUpdates",comment:["&& denotes a mnemonic"]},"Check for &&Updates..."),void 0,!0,()=>this.updateService.checkForUpdates(!0));case b.CheckingForUpdates:return new d("update.checking",a("checkingForUpdates","Checking for Updates..."),void 0,!1);case b.AvailableForDownload:return new d("update.downloadNow",a({key:"download now",comment:["&& denotes a mnemonic"]},"D&&ownload Update"),void 0,!0,()=>this.updateService.downloadUpdate());case b.Downloading:return new d("update.downloading",a("DownloadingUpdate","Downloading Update..."),void 0,!1);case b.Downloaded:return f?null:new d("update.install",a({key:"installUpdate...",comment:["&& denotes a mnemonic"]},"Install &&Update..."),void 0,!0,()=>this.updateService.applyUpdate());case b.Updating:return new d("update.updating",a("installingUpdate","Installing Update..."),void 0,!1);case b.Ready:return new d("update.restart",a({key:"restartToUpdate",comment:["&& denotes a mnemonic"]},"Restart to &&Update"),void 0,!0,()=>this.updateService.quitAndInstall());default:return null}}get currentMenubarVisibility(){return _(this.configurationService)}get currentDisableMenuBarAltFocus(){const e=this.configurationService.getValue("window.customMenuBarAltFocus");let t=!1;return typeof e=="boolean"&&(t=!e),t}insertActionsBefore(e,t){switch(e.id){case Be.ID:t.push(...this.getOpenRecentActions());break;case"workbench.action.showAboutDialog":if(!f&&!g){const i=this.getUpdateAction();i&&(i.label=h(i.label),t.push(i),t.push(new M))}break;default:break}}get currentEnableMenuBarMnemonics(){let e=this.configurationService.getValue("window.enableMenuBarMnemonics");return typeof e!="boolean"&&(e=!0),e&&(!g||Ae(O))}get currentCompactMenuMode(){if(this.currentMenubarVisibility!=="compact")return;const t=this.configurationService.getValue("workbench.sideBar.location")==="right"?K.Left:K.Right,n=this.configurationService.getValue("workbench.activityBar.location")===We.BOTTOM?H.Above:H.Below;return{horizontal:t,vertical:n}}onDidVisibilityChange(e){this.visible=e,this.onDidChangeRecentlyOpened(),this._onVisibilityChange.fire(e)}toActionsArray(e){const t=[];return _e(e,{shouldForwardArgs:!0},t),t}reinstallDisposables=this._register(new W);setupCustomMenubar(e){if(!this.container)return;e?(this.menubar&&this.reinstallDisposables.clear(),this.menubar=this.reinstallDisposables.add(new ye(this.container,this.getMenuBarOptions(),Ne)),this.accessibilityService.alwaysUnderlineAccessKeys().then(i=>{this.alwaysOnMnemonics=i,this.menubar?.update(this.getMenuBarOptions())}),this.reinstallDisposables.add(this.menubar.onFocusStateChange(i=>{this._onFocusStateChange.fire(i),i||(this.pendingFirstTimeUpdate?(this.setupCustomMenubar(!0),this.pendingFirstTimeUpdate=!1):this.updateMenubar(),this.focusInsideMenubar=!1)})),this.reinstallDisposables.add(this.menubar.onVisibilityChange(i=>this.onDidVisibilityChange(i))),this.reinstallDisposables.add(U(this.container,k.FOCUS_IN,()=>{this.focusInsideMenubar=!0})),this.reinstallDisposables.add(U(this.container,k.FOCUS_OUT,()=>{this.focusInsideMenubar=!1})),this.menubar.isVisible&&this.onDidVisibilityChange(!0)):this.menubar?.update(this.getMenuBarOptions());const t=(i,n,r)=>{n.splice(0);for(const o of i)if(this.insertActionsBefore(o,n),o instanceof M)n.push(o);else if(o instanceof C||o instanceof L){let l=typeof o.item.title=="string"?o.item.title:o.item.title.mnemonicTitle??o.item.title.value;if(o instanceof C){const c=[];t(o.actions,c,r),c.length>0&&n.push(new ee(o.id,h(l),c))}else{Le(o.item.toggled)&&(l=o.item.toggled.mnemonicTitle??o.item.toggled.title??l);const c=new d(o.id,h(l),o.class,o.enabled,()=>this.commandService.executeCommand(o.id));c.tooltip=o.tooltip,c.checked=o.checked,n.push(c)}}if(r==="File"&&this.currentCompactMenuMode===void 0){const o=this.getWebNavigationActions();o.length&&n.push(...o)}};for(const i of Object.keys(this.topLevelTitles)){const n=this.menus[i];e&&n&&(this.reinstallDisposables.add(n.onDidChange(()=>{if(!this.focusInsideMenubar){const o=[];t(this.toActionsArray(n),o,i),this.menubar?.updateMenu({actions:o,label:h(this.topLevelTitles[i])})}})),n===this.menus.File&&this.reinstallDisposables.add(this.webNavigationMenu.onDidChange(()=>{if(!this.focusInsideMenubar){const o=[];t(this.toActionsArray(n),o,i),this.menubar?.updateMenu({actions:o,label:h(this.topLevelTitles[i])})}})));const r=[];n&&t(this.toActionsArray(n),r,i),this.menubar&&(e?this.menubar.push({actions:r,label:h(this.topLevelTitles[i])}):this.menubar.updateMenu({actions:r,label:h(this.topLevelTitles[i])}))}}getWebNavigationActions(){if(!g)return[];const e=[];for(const t of this.webNavigationMenu.getActions()){const[,i]=t;for(const n of i)if(n instanceof L){const r=typeof n.item.title=="string"?n.item.title:n.item.title.mnemonicTitle??n.item.title.value;e.push(new d(n.id,h(r),n.class,n.enabled,async o=>{this.commandService.executeCommand(n.id,o)}))}e.push(new M)}return e.length&&e.pop(),e}getMenuBarOptions(){return{enableMnemonics:this.currentEnableMenuBarMnemonics,disableAltFocus:this.currentDisableMenuBarAltFocus,visibility:this.currentMenubarVisibility,actionRunner:this.actionRunner,getKeybinding:e=>this.keybindingService.lookupKeybinding(e.id),alwaysOnMnemonics:this.alwaysOnMnemonics,compactMode:this.currentCompactMenuMode,getCompactMenuActions:()=>g?this.getWebNavigationActions():[]}}onDidChangeWindowFocus(e){this.visible&&(super.onDidChangeWindowFocus(e),this.container&&(e?this.container.classList.remove("inactive"):(this.container.classList.add("inactive"),this.menubar?.blur())))}onUpdateStateChange(){this.visible&&super.onUpdateStateChange()}onDidChangeRecentlyOpened(){this.visible&&super.onDidChangeRecentlyOpened()}onUpdateKeybindings(){this.visible&&super.onUpdateKeybindings()}registerListeners(){super.registerListeners(),this._register(U(O,k.RESIZE,()=>{this.menubar&&!(oe&&Ue.pointerEvents)&&this.menubar.blur()})),g&&(this._register(we(e=>{e===O.vscodeWindowId&&this.updateMenubar()})),this._register(this.webNavigationMenu.onDidChange(()=>this.updateMenubar())),this._register(Ve().event(()=>this.menubar?.toggleFocus())))}get onVisibilityChange(){return this._onVisibilityChange.event}get onFocusStateChange(){return this._onFocusStateChange.event}getMenubarItemsDimensions(){return this.menubar?new N(this.menubar.getWidth(),this.menubar.getHeight()):new N(0,0)}create(e){return this.container=e,this.container&&this.doUpdateMenubar(!0),this.container}layout(e){this.menubar?.update(this.getMenuBarOptions())}toggleFocus(){this.menubar?.toggleFocus()}};I=B([u(0,q),u(1,le),u(2,$),u(3,ne),u(4,se),u(5,pe),u(6,me),u(7,he),u(8,fe),u(9,ve),u(10,Me),u(11,Ie),u(12,Fe),u(13,Ce),u(14,Ee)],I);export{I as CustomMenubarControl,A as MenubarControl};
