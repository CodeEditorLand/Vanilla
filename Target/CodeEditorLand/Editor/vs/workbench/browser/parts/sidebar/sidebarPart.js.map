{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/sidebar/sidebarPart.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/sidebarpart.css\";\nimport \"./sidebarActions.js\";\nimport { ActionsOrientation } from \"../../../../base/browser/ui/actionbar/actionbar.js\";\nimport { AnchorAlignment } from \"../../../../base/browser/ui/contextview/contextview.js\";\nimport { LayoutPriority } from \"../../../../base/browser/ui/grid/grid.js\";\nimport { HoverPosition } from \"../../../../base/browser/ui/hover/hoverWidget.js\";\nimport { Separator } from \"../../../../base/common/actions.js\";\nimport { assertIsDefined } from \"../../../../base/common/types.js\";\nimport { localize2 } from \"../../../../nls.js\";\nimport {\n\tAction2,\n\tIMenuService,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextMenuService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { INotificationService } from \"../../../../platform/notification/common/notification.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { contrastBorder } from \"../../../../platform/theme/common/colorRegistry.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport {\n\tActiveViewletContext,\n\tSidebarFocusContext,\n} from \"../../../common/contextkeys.js\";\nimport {\n\tACTIVITY_BAR_BADGE_BACKGROUND,\n\tACTIVITY_BAR_BADGE_FOREGROUND,\n\tACTIVITY_BAR_TOP_ACTIVE_BORDER,\n\tACTIVITY_BAR_TOP_DRAG_AND_DROP_BORDER,\n\tACTIVITY_BAR_TOP_FOREGROUND,\n\tACTIVITY_BAR_TOP_INACTIVE_FOREGROUND,\n\tSIDE_BAR_BACKGROUND,\n\tSIDE_BAR_BORDER,\n\tSIDE_BAR_DRAG_AND_DROP_BACKGROUND,\n\tSIDE_BAR_FOREGROUND,\n\tSIDE_BAR_TITLE_FOREGROUND,\n} from \"../../../common/theme.js\";\nimport { IViewDescriptorService } from \"../../../common/views.js\";\nimport { IExtensionService } from \"../../../services/extensions/common/extensions.js\";\nimport {\n\tActivityBarPosition,\n\tIWorkbenchLayoutService,\n\tLayoutSettings,\n\tParts,\n\tPosition as SideBarPosition,\n} from \"../../../services/layout/browser/layoutService.js\";\nimport { ToggleActivityBarVisibilityActionId } from \"../../actions/layoutActions.js\";\nimport {\n\tActivityBarCompositeBar,\n\tActivitybarPart,\n} from \"../activitybar/activitybarPart.js\";\nimport type { IPaneCompositeBarOptions } from \"../paneCompositeBar.js\";\nimport {\n\tAbstractPaneCompositePart,\n\tCompositeBarPosition,\n} from \"../paneCompositePart.js\";\n\nexport class SidebarPart extends AbstractPaneCompositePart {\n\tstatic readonly activeViewletSettingsKey =\n\t\t\"workbench.sidebar.activeviewletid\";\n\n\t//#region IView\n\n\treadonly minimumWidth: number = 170;\n\treadonly maximumWidth: number = Number.POSITIVE_INFINITY;\n\treadonly minimumHeight: number = 0;\n\treadonly maximumHeight: number = Number.POSITIVE_INFINITY;\n\toverride get snap(): boolean {\n\t\treturn true;\n\t}\n\n\treadonly priority: LayoutPriority = LayoutPriority.Low;\n\n\tget preferredWidth(): number | undefined {\n\t\tconst viewlet = this.getActivePaneComposite();\n\n\t\tif (!viewlet) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst width = viewlet.getOptimalWidth();\n\t\tif (typeof width !== \"number\") {\n\t\t\treturn;\n\t\t}\n\n\t\treturn Math.max(width, 300);\n\t}\n\n\tprivate readonly activityBarPart = this._register(\n\t\tthis.instantiationService.createInstance(ActivitybarPart, this),\n\t);\n\n\t//#endregion\n\n\tconstructor(\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IMenuService menuService: IMenuService,\n\t) {\n\t\tsuper(\n\t\t\tParts.SIDEBAR_PART,\n\t\t\t{ hasTitle: true, borderWidth: () => (this.getColor(SIDE_BAR_BORDER) || this.getColor(contrastBorder)) ? 1 : 0 },\n\t\t\tSidebarPart.activeViewletSettingsKey,\n\t\t\tActiveViewletContext.bindTo(contextKeyService),\n\t\t\tSidebarFocusContext.bindTo(contextKeyService),\n\t\t\t'sideBar',\n\t\t\t'viewlet',\n\t\t\tSIDE_BAR_TITLE_FOREGROUND,\n\t\t\tnotificationService,\n\t\t\tstorageService,\n\t\t\tcontextMenuService,\n\t\t\tlayoutService,\n\t\t\tkeybindingService,\n\t\t\thoverService,\n\t\t\tinstantiationService,\n\t\t\tthemeService,\n\t\t\tviewDescriptorService,\n\t\t\tcontextKeyService,\n\t\t\textensionService,\n\t\t\tmenuService,\n\t\t);\n\n\t\tthis.rememberActivityBarVisiblePosition();\n\t\tthis._register(configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(LayoutSettings.ACTIVITY_BAR_LOCATION)) {\n\t\t\t\tthis.onDidChangeActivityBarLocation();\n\t\t\t}\n\t\t}));\n\n\t\tthis.registerActions();\n\t}\n\n\tprivate onDidChangeActivityBarLocation(): void {\n\t\tthis.activityBarPart.hide();\n\n\t\tthis.updateCompositeBar();\n\n\t\tconst id = this.getActiveComposite()?.getId();\n\t\tif (id) {\n\t\t\tthis.onTitleAreaUpdate(id);\n\t\t}\n\n\t\tif (this.shouldShowActivityBar()) {\n\t\t\tthis.activityBarPart.show();\n\t\t}\n\n\t\tthis.rememberActivityBarVisiblePosition();\n\t}\n\n\toverride updateStyles(): void {\n\t\tsuper.updateStyles();\n\n\t\tconst container = assertIsDefined(this.getContainer());\n\n\t\tcontainer.style.backgroundColor =\n\t\t\tthis.getColor(SIDE_BAR_BACKGROUND) || \"\";\n\t\tcontainer.style.color = this.getColor(SIDE_BAR_FOREGROUND) || \"\";\n\n\t\tconst borderColor =\n\t\t\tthis.getColor(SIDE_BAR_BORDER) || this.getColor(contrastBorder);\n\t\tconst isPositionLeft =\n\t\t\tthis.layoutService.getSideBarPosition() === SideBarPosition.LEFT;\n\t\tcontainer.style.borderRightWidth =\n\t\t\tborderColor && isPositionLeft ? \"1px\" : \"\";\n\t\tcontainer.style.borderRightStyle =\n\t\t\tborderColor && isPositionLeft ? \"solid\" : \"\";\n\t\tcontainer.style.borderRightColor = isPositionLeft\n\t\t\t? borderColor || \"\"\n\t\t\t: \"\";\n\t\tcontainer.style.borderLeftWidth =\n\t\t\tborderColor && !isPositionLeft ? \"1px\" : \"\";\n\t\tcontainer.style.borderLeftStyle =\n\t\t\tborderColor && !isPositionLeft ? \"solid\" : \"\";\n\t\tcontainer.style.borderLeftColor = isPositionLeft\n\t\t\t? \"\"\n\t\t\t: borderColor || \"\";\n\t\tcontainer.style.outlineColor =\n\t\t\tthis.getColor(SIDE_BAR_DRAG_AND_DROP_BACKGROUND) ?? \"\";\n\t}\n\n\toverride layout(\n\t\twidth: number,\n\t\theight: number,\n\t\ttop: number,\n\t\tleft: number,\n\t): void {\n\t\tif (!this.layoutService.isVisible(Parts.SIDEBAR_PART)) {\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.layout(width, height, top, left);\n\t}\n\n\tprotected override getTitleAreaDropDownAnchorAlignment(): AnchorAlignment {\n\t\treturn this.layoutService.getSideBarPosition() === SideBarPosition.LEFT\n\t\t\t? AnchorAlignment.LEFT\n\t\t\t: AnchorAlignment.RIGHT;\n\t}\n\n\tprotected override createCompositeBar(): ActivityBarCompositeBar {\n\t\treturn this.instantiationService.createInstance(\n\t\t\tActivityBarCompositeBar,\n\t\t\tthis.getCompositeBarOptions(),\n\t\t\tthis.partId,\n\t\t\tthis,\n\t\t\tfalse,\n\t\t);\n\t}\n\n\tprotected getCompositeBarOptions(): IPaneCompositeBarOptions {\n\t\treturn {\n\t\t\tpartContainerClass: \"sidebar\",\n\t\t\tpinnedViewContainersKey: ActivitybarPart.pinnedViewContainersKey,\n\t\t\tplaceholderViewContainersKey:\n\t\t\t\tActivitybarPart.placeholderViewContainersKey,\n\t\t\tviewContainersWorkspaceStateKey:\n\t\t\t\tActivitybarPart.viewContainersWorkspaceStateKey,\n\t\t\ticon: true,\n\t\t\torientation: ActionsOrientation.HORIZONTAL,\n\t\t\trecomputeSizes: true,\n\t\t\tactivityHoverOptions: {\n\t\t\t\tposition: () =>\n\t\t\t\t\tthis.getCompositeBarPosition() ===\n\t\t\t\t\tCompositeBarPosition.BOTTOM\n\t\t\t\t\t\t? HoverPosition.ABOVE\n\t\t\t\t\t\t: HoverPosition.BELOW,\n\t\t\t},\n\t\t\tfillExtraContextMenuActions: (actions) => {\n\t\t\t\tconst viewsSubmenuAction = this.getViewsSubmenuAction();\n\t\t\t\tif (viewsSubmenuAction) {\n\t\t\t\t\tactions.push(new Separator());\n\t\t\t\t\tactions.push(viewsSubmenuAction);\n\t\t\t\t}\n\t\t\t},\n\t\t\tcompositeSize: 0,\n\t\t\ticonSize: 16,\n\t\t\toverflowActionSize: 30,\n\t\t\tcolors: (theme) => ({\n\t\t\t\tactiveBackgroundColor: theme.getColor(SIDE_BAR_BACKGROUND),\n\t\t\t\tinactiveBackgroundColor: theme.getColor(SIDE_BAR_BACKGROUND),\n\t\t\t\tactiveBorderBottomColor: theme.getColor(\n\t\t\t\t\tACTIVITY_BAR_TOP_ACTIVE_BORDER,\n\t\t\t\t),\n\t\t\t\tactiveForegroundColor: theme.getColor(\n\t\t\t\t\tACTIVITY_BAR_TOP_FOREGROUND,\n\t\t\t\t),\n\t\t\t\tinactiveForegroundColor: theme.getColor(\n\t\t\t\t\tACTIVITY_BAR_TOP_INACTIVE_FOREGROUND,\n\t\t\t\t),\n\t\t\t\tbadgeBackground: theme.getColor(ACTIVITY_BAR_BADGE_BACKGROUND),\n\t\t\t\tbadgeForeground: theme.getColor(ACTIVITY_BAR_BADGE_FOREGROUND),\n\t\t\t\tdragAndDropBorder: theme.getColor(\n\t\t\t\t\tACTIVITY_BAR_TOP_DRAG_AND_DROP_BORDER,\n\t\t\t\t),\n\t\t\t}),\n\t\t\tcompact: true,\n\t\t};\n\t}\n\n\tprotected shouldShowCompositeBar(): boolean {\n\t\tconst activityBarPosition =\n\t\t\tthis.configurationService.getValue<ActivityBarPosition>(\n\t\t\t\tLayoutSettings.ACTIVITY_BAR_LOCATION,\n\t\t\t);\n\t\treturn (\n\t\t\tactivityBarPosition === ActivityBarPosition.TOP ||\n\t\t\tactivityBarPosition === ActivityBarPosition.BOTTOM\n\t\t);\n\t}\n\n\tprivate shouldShowActivityBar(): boolean {\n\t\tif (this.shouldShowCompositeBar()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn (\n\t\t\tthis.configurationService.getValue(\n\t\t\t\tLayoutSettings.ACTIVITY_BAR_LOCATION,\n\t\t\t) !== ActivityBarPosition.HIDDEN\n\t\t);\n\t}\n\n\tprotected getCompositeBarPosition(): CompositeBarPosition {\n\t\tconst activityBarPosition =\n\t\t\tthis.configurationService.getValue<ActivityBarPosition>(\n\t\t\t\tLayoutSettings.ACTIVITY_BAR_LOCATION,\n\t\t\t);\n\t\tswitch (activityBarPosition) {\n\t\t\tcase ActivityBarPosition.TOP:\n\t\t\t\treturn CompositeBarPosition.TOP;\n\t\t\tcase ActivityBarPosition.BOTTOM:\n\t\t\t\treturn CompositeBarPosition.BOTTOM;\n\t\t\tcase ActivityBarPosition.HIDDEN:\n\t\t\tcase ActivityBarPosition.DEFAULT: // noop\n\t\t\tdefault:\n\t\t\t\treturn CompositeBarPosition.TITLE;\n\t\t}\n\t}\n\n\tprivate rememberActivityBarVisiblePosition(): void {\n\t\tconst activityBarPosition = this.configurationService.getValue<string>(\n\t\t\tLayoutSettings.ACTIVITY_BAR_LOCATION,\n\t\t);\n\t\tif (activityBarPosition !== ActivityBarPosition.HIDDEN) {\n\t\t\tthis.storageService.store(\n\t\t\t\tLayoutSettings.ACTIVITY_BAR_LOCATION,\n\t\t\t\tactivityBarPosition,\n\t\t\t\tStorageScope.PROFILE,\n\t\t\t\tStorageTarget.USER,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate getRememberedActivityBarVisiblePosition(): ActivityBarPosition {\n\t\tconst activityBarPosition = this.storageService.get(\n\t\t\tLayoutSettings.ACTIVITY_BAR_LOCATION,\n\t\t\tStorageScope.PROFILE,\n\t\t);\n\t\tswitch (activityBarPosition) {\n\t\t\tcase ActivityBarPosition.TOP:\n\t\t\t\treturn ActivityBarPosition.TOP;\n\t\t\tcase ActivityBarPosition.BOTTOM:\n\t\t\t\treturn ActivityBarPosition.BOTTOM;\n\t\t\tdefault:\n\t\t\t\treturn ActivityBarPosition.DEFAULT;\n\t\t}\n\t}\n\n\toverride getPinnedPaneCompositeIds(): string[] {\n\t\treturn this.shouldShowCompositeBar()\n\t\t\t? super.getPinnedPaneCompositeIds()\n\t\t\t: this.activityBarPart.getPinnedPaneCompositeIds();\n\t}\n\n\toverride getVisiblePaneCompositeIds(): string[] {\n\t\treturn this.shouldShowCompositeBar()\n\t\t\t? super.getVisiblePaneCompositeIds()\n\t\t\t: this.activityBarPart.getVisiblePaneCompositeIds();\n\t}\n\n\tasync focusActivityBar(): Promise<void> {\n\t\tif (\n\t\t\tthis.configurationService.getValue(\n\t\t\t\tLayoutSettings.ACTIVITY_BAR_LOCATION,\n\t\t\t) === ActivityBarPosition.HIDDEN\n\t\t) {\n\t\t\tawait this.configurationService.updateValue(\n\t\t\t\tLayoutSettings.ACTIVITY_BAR_LOCATION,\n\t\t\t\tthis.getRememberedActivityBarVisiblePosition(),\n\t\t\t);\n\n\t\t\tthis.onDidChangeActivityBarLocation();\n\t\t}\n\n\t\tif (this.shouldShowCompositeBar()) {\n\t\t\tthis.focusCompositeBar();\n\t\t} else {\n\t\t\tif (!this.layoutService.isVisible(Parts.ACTIVITYBAR_PART)) {\n\t\t\t\tthis.layoutService.setPartHidden(false, Parts.ACTIVITYBAR_PART);\n\t\t\t}\n\n\t\t\tthis.activityBarPart.show(true);\n\t\t}\n\t}\n\n\tprivate registerActions(): void {\n\t\tconst that = this;\n\t\tthis._register(\n\t\t\tregisterAction2(\n\t\t\t\tclass extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: ToggleActivityBarVisibilityActionId,\n\t\t\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\t\t\"toggleActivityBar\",\n\t\t\t\t\t\t\t\t\"Toggle Activity Bar Visibility\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\trun(): Promise<void> {\n\t\t\t\t\t\tconst value =\n\t\t\t\t\t\t\tthat.configurationService.getValue(\n\t\t\t\t\t\t\t\tLayoutSettings.ACTIVITY_BAR_LOCATION,\n\t\t\t\t\t\t\t) === ActivityBarPosition.HIDDEN\n\t\t\t\t\t\t\t\t? that.getRememberedActivityBarVisiblePosition()\n\t\t\t\t\t\t\t\t: ActivityBarPosition.HIDDEN;\n\t\t\t\t\t\treturn that.configurationService.updateValue(\n\t\t\t\t\t\t\tLayoutSettings.ACTIVITY_BAR_LOCATION,\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\ttoJSON(): object {\n\t\treturn {\n\t\t\ttype: Parts.SIDEBAR_PART,\n\t\t};\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
