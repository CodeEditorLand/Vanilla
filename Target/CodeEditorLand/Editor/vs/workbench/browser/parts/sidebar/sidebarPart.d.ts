import "vs/css!./media/sidebarpart";
import "vs/workbench/browser/parts/sidebar/sidebarActions";
import { AnchorAlignment } from "vs/base/browser/ui/contextview/contextview";
import { LayoutPriority } from "vs/base/browser/ui/grid/grid";
import { IMenuService } from "vs/platform/actions/common/actions";
import { IConfigurationService } from "vs/platform/configuration/common/configuration";
import { IContextKeyService } from "vs/platform/contextkey/common/contextkey";
import { IContextMenuService } from "vs/platform/contextview/browser/contextView";
import { IHoverService } from "vs/platform/hover/browser/hover";
import { IInstantiationService } from "vs/platform/instantiation/common/instantiation";
import { IKeybindingService } from "vs/platform/keybinding/common/keybinding";
import { INotificationService } from "vs/platform/notification/common/notification";
import { IStorageService } from "vs/platform/storage/common/storage";
import { IThemeService } from "vs/platform/theme/common/themeService";
import { ActivityBarCompositeBar } from "vs/workbench/browser/parts/activitybar/activitybarPart";
import { IPaneCompositeBarOptions } from "vs/workbench/browser/parts/paneCompositeBar";
import { AbstractPaneCompositePart, CompositeBarPosition } from "vs/workbench/browser/parts/paneCompositePart";
import { IViewDescriptorService } from "vs/workbench/common/views";
import { IExtensionService } from "vs/workbench/services/extensions/common/extensions";
import { IWorkbenchLayoutService } from "vs/workbench/services/layout/browser/layoutService";
export declare class SidebarPart extends AbstractPaneCompositePart {
    private readonly configurationService;
    static readonly activeViewletSettingsKey = "workbench.sidebar.activeviewletid";
    readonly minimumWidth: number;
    readonly maximumWidth: number;
    readonly minimumHeight: number;
    readonly maximumHeight: number;
    get snap(): boolean;
    readonly priority: LayoutPriority;
    get preferredWidth(): number | undefined;
    private readonly activityBarPart;
    constructor(notificationService: INotificationService, storageService: IStorageService, contextMenuService: IContextMenuService, layoutService: IWorkbenchLayoutService, keybindingService: IKeybindingService, hoverService: IHoverService, instantiationService: IInstantiationService, themeService: IThemeService, viewDescriptorService: IViewDescriptorService, contextKeyService: IContextKeyService, extensionService: IExtensionService, configurationService: IConfigurationService, menuService: IMenuService);
    private onDidChangeActivityBarLocation;
    updateStyles(): void;
    layout(width: number, height: number, top: number, left: number): void;
    protected getTitleAreaDropDownAnchorAlignment(): AnchorAlignment;
    protected createCompositeBar(): ActivityBarCompositeBar;
    protected getCompositeBarOptions(): IPaneCompositeBarOptions;
    protected shouldShowCompositeBar(): boolean;
    private shouldShowActivityBar;
    protected getCompositeBarPosition(): CompositeBarPosition;
    private rememberActivityBarVisiblePosition;
    private getRememberedActivityBarVisiblePosition;
    getPinnedPaneCompositeIds(): string[];
    getVisiblePaneCompositeIds(): string[];
    focusActivityBar(): Promise<void>;
    private registerActions;
    toJSON(): object;
}
