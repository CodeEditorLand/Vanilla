{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/compositeBarActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../nls.js';\nimport { Action, IAction, Separator } from '../../../base/common/actions.js';\nimport { $, addDisposableListener, append, clearNode, EventHelper, EventType, getDomNodePagePosition, hide, show } from '../../../base/browser/dom.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { toDisposable, DisposableStore, MutableDisposable } from '../../../base/common/lifecycle.js';\nimport { IContextMenuService } from '../../../platform/contextview/browser/contextView.js';\nimport { IThemeService, IColorTheme } from '../../../platform/theme/common/themeService.js';\nimport { NumberBadge, IBadge, IActivity, ProgressBadge, IconBadge } from '../../services/activity/common/activity.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { DelayedDragHandler } from '../../../base/browser/dnd.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { CompositeDragAndDropObserver, ICompositeDragAndDrop, Before2D, toggleDropEffect } from '../dnd.js';\nimport { Color } from '../../../base/common/color.js';\nimport { BaseActionViewItem, IActionViewItemOptions } from '../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { IHoverService } from '../../../platform/hover/browser/hover.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { HoverPosition } from '../../../base/browser/ui/hover/hoverWidget.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { badgeBackground, badgeForeground, contrastBorder } from '../../../platform/theme/common/colorRegistry.js';\nimport type { IHoverWidget } from '../../../base/browser/ui/hover/hover.js';\n\nexport interface ICompositeBar {\n\n\t/**\n\t * Unpins a composite from the composite bar.\n\t */\n\tunpin(compositeId: string): void;\n\n\t/**\n\t * Pin a composite inside the composite bar.\n\t */\n\tpin(compositeId: string): void;\n\n\t/**\n\t * Find out if a composite is pinned in the composite bar.\n\t */\n\tisPinned(compositeId: string): boolean;\n\n\t/**\n\t * Returns if badges are enabled for that specified composite.\n\t * @param compositeId The id of the composite to check\n\t */\n\tareBadgesEnabled(compositeId: string): boolean;\n\n\t/**\n\t * Toggles whether or not badges are shown on that particular composite.\n\t * @param compositeId The composite to toggle badge enablement for\n\t */\n\ttoggleBadgeEnablement(compositeId: string): void;\n\n\t/**\n\t * Reorder composite ordering by moving a composite to the location of another composite.\n\t */\n\tmove(compositeId: string, tocompositeId: string): void;\n}\n\nexport interface ICompositeBarActionItem {\n\tid: string;\n\tname: string;\n\tkeybindingId?: string;\n\tclassNames?: string[];\n\ticonUrl?: URI;\n}\n\nexport class CompositeBarAction extends Action {\n\n\tprivate readonly _onDidChangeCompositeBarActionItem = this._register(new Emitter<CompositeBarAction>());\n\treadonly onDidChangeCompositeBarActionItem = this._onDidChangeCompositeBarActionItem.event;\n\n\tprivate readonly _onDidChangeActivity = this._register(new Emitter<IActivity | undefined>());\n\treadonly onDidChangeActivity = this._onDidChangeActivity.event;\n\n\tprivate _activity: IActivity | undefined;\n\n\tconstructor(private item: ICompositeBarActionItem) {\n\t\tsuper(item.id, item.name, item.classNames?.join(' '), true);\n\t}\n\n\tget compositeBarActionItem(): ICompositeBarActionItem {\n\t\treturn this.item;\n\t}\n\n\tset compositeBarActionItem(item: ICompositeBarActionItem) {\n\t\tthis._label = item.name;\n\t\tthis.item = item;\n\t\tthis._onDidChangeCompositeBarActionItem.fire(this);\n\t}\n\n\tget activity(): IActivity | undefined {\n\t\treturn this._activity;\n\t}\n\n\tset activity(activity: IActivity | undefined) {\n\t\tthis._activity = activity;\n\t\tthis._onDidChangeActivity.fire(activity);\n\t}\n\n\tactivate(): void {\n\t\tif (!this.checked) {\n\t\t\tthis._setChecked(true);\n\t\t}\n\t}\n\n\tdeactivate(): void {\n\t\tif (this.checked) {\n\t\t\tthis._setChecked(false);\n\t\t}\n\t}\n\n}\n\nexport interface ICompositeBarColors {\n\treadonly activeBackgroundColor?: Color;\n\treadonly inactiveBackgroundColor?: Color;\n\treadonly activeBorderColor?: Color;\n\treadonly activeBackground?: Color;\n\treadonly activeBorderBottomColor?: Color;\n\treadonly activeForegroundColor?: Color;\n\treadonly inactiveForegroundColor?: Color;\n\treadonly badgeBackground?: Color;\n\treadonly badgeForeground?: Color;\n\treadonly dragAndDropBorder?: Color;\n}\n\nexport interface IActivityHoverOptions {\n\treadonly position: () => HoverPosition;\n}\n\nexport interface ICompositeBarActionViewItemOptions extends IActionViewItemOptions {\n\treadonly icon?: boolean;\n\treadonly colors: (theme: IColorTheme) => ICompositeBarColors;\n\n\treadonly hoverOptions: IActivityHoverOptions;\n\treadonly hasPopup?: boolean;\n\treadonly compact?: boolean;\n}\n\nexport class CompositeBarActionViewItem extends BaseActionViewItem {\n\n\tprivate static hoverLeaveTime = 0;\n\n\tprotected container!: HTMLElement;\n\tprotected label!: HTMLElement;\n\tprotected badge!: HTMLElement;\n\tprotected override readonly options: ICompositeBarActionViewItemOptions;\n\n\tprivate badgeContent: HTMLElement | undefined;\n\tprivate readonly badgeDisposable = this._register(new MutableDisposable<DisposableStore>());\n\tprivate mouseUpTimeout: any;\n\tprivate keybindingLabel: string | undefined | null;\n\n\tprivate readonly hoverDisposables = this._register(new DisposableStore());\n\tprivate lastHover: IHoverWidget | undefined;\n\tprivate readonly showHoverScheduler = new RunOnceScheduler(() => this.showHover(), 0);\n\n\tconstructor(\n\t\taction: CompositeBarAction,\n\t\toptions: ICompositeBarActionViewItemOptions,\n\t\tprivate readonly badgesEnabled: (compositeId: string) => boolean,\n\t\t@IThemeService protected readonly themeService: IThemeService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t\t@IConfigurationService protected readonly configurationService: IConfigurationService,\n\t\t@IKeybindingService protected readonly keybindingService: IKeybindingService,\n\t) {\n\t\tsuper(null, action, options);\n\n\t\tthis.options = options;\n\n\t\tthis._register(this.themeService.onDidColorThemeChange(this.onThemeChange, this));\n\t\tthis._register(action.onDidChangeCompositeBarActionItem(() => this.update()));\n\t\tthis._register(Event.filter(keybindingService.onDidUpdateKeybindings, () => this.keybindingLabel !== this.computeKeybindingLabel())(() => this.updateTitle()));\n\t\tthis._register(action.onDidChangeActivity(() => this.updateActivity()));\n\t\tthis._register(toDisposable(() => this.showHoverScheduler.cancel()));\n\t}\n\n\tprotected get compositeBarActionItem(): ICompositeBarActionItem {\n\t\treturn (this._action as CompositeBarAction).compositeBarActionItem;\n\t}\n\n\tprotected updateStyles(): void {\n\t\tconst theme = this.themeService.getColorTheme();\n\t\tconst colors = this.options.colors(theme);\n\n\t\tif (this.label) {\n\t\t\tif (this.options.icon) {\n\t\t\t\tconst foreground = this._action.checked ? colors.activeForegroundColor : colors.inactiveForegroundColor;\n\t\t\t\tif (this.compositeBarActionItem.iconUrl) {\n\t\t\t\t\t// Apply background color to activity bar item provided with iconUrls\n\t\t\t\t\tthis.label.style.backgroundColor = foreground ? foreground.toString() : '';\n\t\t\t\t\tthis.label.style.color = '';\n\t\t\t\t} else {\n\t\t\t\t\t// Apply foreground color to activity bar items provided with codicons\n\t\t\t\t\tthis.label.style.color = foreground ? foreground.toString() : '';\n\t\t\t\t\tthis.label.style.backgroundColor = '';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst foreground = this._action.checked ? colors.activeForegroundColor : colors.inactiveForegroundColor;\n\t\t\t\tconst borderBottomColor = this._action.checked ? colors.activeBorderBottomColor : null;\n\t\t\t\tthis.label.style.color = foreground ? foreground.toString() : '';\n\t\t\t\tthis.label.style.borderBottomColor = borderBottomColor ? borderBottomColor.toString() : '';\n\t\t\t}\n\n\t\t\tthis.container.style.setProperty('--insert-border-color', colors.dragAndDropBorder ? colors.dragAndDropBorder.toString() : '');\n\t\t}\n\n\t\t// Badge\n\t\tif (this.badgeContent) {\n\t\t\tconst badgeStyles = this.getActivity()?.badge.getColors(theme);\n\t\t\tconst badgeFg = badgeStyles?.badgeForeground ?? colors.badgeForeground ?? theme.getColor(badgeForeground);\n\t\t\tconst badgeBg = badgeStyles?.badgeBackground ?? colors.badgeBackground ?? theme.getColor(badgeBackground);\n\t\t\tconst contrastBorderColor = badgeStyles?.badgeBorder ?? theme.getColor(contrastBorder);\n\n\t\t\tthis.badgeContent.style.color = badgeFg ? badgeFg.toString() : '';\n\t\t\tthis.badgeContent.style.backgroundColor = badgeBg ? badgeBg.toString() : '';\n\n\t\t\tthis.badgeContent.style.borderStyle = contrastBorderColor && !this.options.compact ? 'solid' : '';\n\t\t\tthis.badgeContent.style.borderWidth = contrastBorderColor ? '1px' : '';\n\t\t\tthis.badgeContent.style.borderColor = contrastBorderColor ? contrastBorderColor.toString() : '';\n\t\t}\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\n\t\tthis.container = container;\n\t\tif (this.options.icon) {\n\t\t\tthis.container.classList.add('icon');\n\t\t}\n\n\t\tif (this.options.hasPopup) {\n\t\t\tthis.container.setAttribute('role', 'button');\n\t\t\tthis.container.setAttribute('aria-haspopup', 'true');\n\t\t} else {\n\t\t\tthis.container.setAttribute('role', 'tab');\n\t\t}\n\n\t\t// Try hard to prevent keyboard only focus feedback when using mouse\n\t\tthis._register(addDisposableListener(this.container, EventType.MOUSE_DOWN, () => {\n\t\t\tthis.container.classList.add('clicked');\n\t\t}));\n\n\t\tthis._register(addDisposableListener(this.container, EventType.MOUSE_UP, () => {\n\t\t\tif (this.mouseUpTimeout) {\n\t\t\t\tclearTimeout(this.mouseUpTimeout);\n\t\t\t}\n\n\t\t\tthis.mouseUpTimeout = setTimeout(() => {\n\t\t\t\tthis.container.classList.remove('clicked');\n\t\t\t}, 800); // delayed to prevent focus feedback from showing on mouse up\n\t\t}));\n\n\t\t// Label\n\t\tthis.label = append(container, $('a'));\n\n\t\t// Badge\n\t\tthis.badge = append(container, $('.badge'));\n\t\tthis.badgeContent = append(this.badge, $('.badge-content'));\n\n\t\t// pane composite bar active border + background\n\t\tappend(container, $('.active-item-indicator'));\n\n\t\thide(this.badge);\n\n\t\tthis.update();\n\t\tthis.updateStyles();\n\t\tthis.updateHover();\n\t}\n\n\tprivate onThemeChange(theme: IColorTheme): void {\n\t\tthis.updateStyles();\n\t}\n\n\tprotected update(): void {\n\t\tthis.updateLabel();\n\t\tthis.updateActivity();\n\t\tthis.updateTitle();\n\t\tthis.updateStyles();\n\t}\n\n\tprivate getActivity(): IActivity | undefined {\n\t\tif (this._action instanceof CompositeBarAction) {\n\t\t\treturn this._action.activity;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprotected updateActivity(): void {\n\t\tif (!this.badge || !this.badgeContent || !(this._action instanceof CompositeBarAction)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst activity = this.getActivity();\n\n\t\tthis.badgeDisposable.value = new DisposableStore();\n\n\t\tclearNode(this.badgeContent);\n\t\thide(this.badge);\n\n\t\tconst shouldRenderBadges = this.badgesEnabled(this.compositeBarActionItem.id);\n\n\t\tif (activity && shouldRenderBadges) {\n\n\t\t\tconst { badge } = activity;\n\t\t\tconst classes: string[] = [];\n\n\t\t\tif (this.options.compact) {\n\t\t\t\tclasses.push('compact');\n\t\t\t}\n\n\t\t\t// Progress\n\t\t\tif (badge instanceof ProgressBadge) {\n\t\t\t\tshow(this.badge);\n\t\t\t\tclasses.push('progress-badge');\n\t\t\t}\n\n\t\t\t// Number\n\t\t\telse if (badge instanceof NumberBadge) {\n\t\t\t\tif (badge.number) {\n\t\t\t\t\tlet number = badge.number.toString();\n\t\t\t\t\tif (badge.number > 999) {\n\t\t\t\t\t\tconst noOfThousands = badge.number / 1000;\n\t\t\t\t\t\tconst floor = Math.floor(noOfThousands);\n\t\t\t\t\t\tif (noOfThousands > floor) {\n\t\t\t\t\t\t\tnumber = `${floor}K+`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnumber = `${noOfThousands}K`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (this.options.compact && number.length >= 3) {\n\t\t\t\t\t\tclasses.push('compact-content');\n\t\t\t\t\t}\n\t\t\t\t\tthis.badgeContent.textContent = number;\n\t\t\t\t\tshow(this.badge);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Icon\n\t\t\telse if (badge instanceof IconBadge) {\n\t\t\t\tclasses.push('icon-badge');\n\t\t\t\tconst badgeContentClassess = ['icon-overlay', ...ThemeIcon.asClassNameArray(badge.icon)];\n\t\t\t\tthis.badgeContent.classList.add(...badgeContentClassess);\n\t\t\t\tthis.badgeDisposable.value.add(toDisposable(() => this.badgeContent?.classList.remove(...badgeContentClassess)));\n\t\t\t\tshow(this.badge);\n\t\t\t}\n\n\t\t\tif (classes.length) {\n\t\t\t\tthis.badge.classList.add(...classes);\n\t\t\t\tthis.badgeDisposable.value.add(toDisposable(() => this.badge.classList.remove(...classes)));\n\t\t\t}\n\n\t\t}\n\n\t\tthis.updateTitle();\n\t\tthis.updateStyles();\n\t}\n\n\tprotected override updateLabel(): void {\n\t\tthis.label.className = 'action-label';\n\n\t\tif (this.compositeBarActionItem.classNames) {\n\t\t\tthis.label.classList.add(...this.compositeBarActionItem.classNames);\n\t\t}\n\n\t\tif (!this.options.icon) {\n\t\t\tthis.label.textContent = this.action.label;\n\t\t}\n\t}\n\n\tprivate updateTitle(): void {\n\t\tconst title = this.computeTitle();\n\t\t[this.label, this.badge, this.container].forEach(element => {\n\t\t\tif (element) {\n\t\t\t\telement.setAttribute('aria-label', title);\n\t\t\t\telement.setAttribute('title', '');\n\t\t\t\telement.removeAttribute('title');\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected computeTitle(): string {\n\t\tthis.keybindingLabel = this.computeKeybindingLabel();\n\t\tlet title = this.keybindingLabel ? localize('titleKeybinding', \"{0} ({1})\", this.compositeBarActionItem.name, this.keybindingLabel) : this.compositeBarActionItem.name;\n\t\tconst badge = (this.action as CompositeBarAction).activity?.badge;\n\t\tif (badge?.getDescription()) {\n\t\t\ttitle = localize('badgeTitle', \"{0} - {1}\", title, badge.getDescription());\n\t\t}\n\n\t\treturn title;\n\t}\n\n\tprivate computeKeybindingLabel(): string | undefined | null {\n\t\tconst keybinding = this.compositeBarActionItem.keybindingId ? this.keybindingService.lookupKeybinding(this.compositeBarActionItem.keybindingId) : null;\n\n\t\treturn keybinding?.getLabel();\n\t}\n\n\tprivate updateHover(): void {\n\t\tthis.hoverDisposables.clear();\n\n\t\tthis.updateTitle();\n\n\t\tthis.hoverDisposables.add(addDisposableListener(this.container, EventType.MOUSE_OVER, () => {\n\t\t\tif (!this.showHoverScheduler.isScheduled()) {\n\t\t\t\tif (Date.now() - CompositeBarActionViewItem.hoverLeaveTime < 200) {\n\t\t\t\t\tthis.showHover(true);\n\t\t\t\t} else {\n\t\t\t\t\tthis.showHoverScheduler.schedule(this.configurationService.getValue<number>('workbench.hover.delay'));\n\t\t\t\t}\n\t\t\t}\n\t\t}, true));\n\n\t\tthis.hoverDisposables.add(addDisposableListener(this.container, EventType.MOUSE_LEAVE, e => {\n\t\t\tif (e.target === this.container) {\n\t\t\t\tCompositeBarActionViewItem.hoverLeaveTime = Date.now();\n\t\t\t\tthis.hoverService.hideHover();\n\t\t\t\tthis.showHoverScheduler.cancel();\n\t\t\t}\n\t\t}, true));\n\n\t\tthis.hoverDisposables.add(toDisposable(() => {\n\t\t\tthis.hoverService.hideHover();\n\t\t\tthis.showHoverScheduler.cancel();\n\t\t}));\n\t}\n\n\tshowHover(skipFadeInAnimation: boolean = false): void {\n\t\tif (this.lastHover && !this.lastHover.isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst hoverPosition = this.options.hoverOptions.position();\n\t\tthis.lastHover = this.hoverService.showHover({\n\t\t\ttarget: this.container,\n\t\t\tcontent: this.computeTitle(),\n\t\t\tposition: {\n\t\t\t\thoverPosition,\n\t\t\t},\n\t\t\tpersistence: {\n\t\t\t\thideOnKeyDown: true,\n\t\t\t},\n\t\t\tappearance: {\n\t\t\t\tshowPointer: true,\n\t\t\t\tcompact: true,\n\t\t\t\tskipFadeInAnimation,\n\t\t\t}\n\t\t});\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tif (this.mouseUpTimeout) {\n\t\t\tclearTimeout(this.mouseUpTimeout);\n\t\t}\n\n\t\tthis.badge.remove();\n\t}\n}\n\nexport class CompositeOverflowActivityAction extends CompositeBarAction {\n\n\tconstructor(\n\t\tprivate showMenu: () => void\n\t) {\n\t\tsuper({\n\t\t\tid: 'additionalComposites.action',\n\t\t\tname: localize('additionalViews', \"Additional Views\"),\n\t\t\tclassNames: ThemeIcon.asClassNameArray(Codicon.more)\n\t\t});\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tthis.showMenu();\n\t}\n}\n\nexport class CompositeOverflowActivityActionViewItem extends CompositeBarActionViewItem {\n\n\tconstructor(\n\t\taction: CompositeBarAction,\n\t\tprivate getOverflowingComposites: () => { id: string; name?: string }[],\n\t\tprivate getActiveCompositeId: () => string | undefined,\n\t\tprivate getBadge: (compositeId: string) => IBadge,\n\t\tprivate getCompositeOpenAction: (compositeId: string) => IAction,\n\t\tcolors: (theme: IColorTheme) => ICompositeBarColors,\n\t\thoverOptions: IActivityHoverOptions,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t) {\n\t\tsuper(action, { icon: true, colors, hasPopup: true, hoverOptions }, () => true, themeService, hoverService, configurationService, keybindingService);\n\t}\n\n\tshowMenu(): void {\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => this.container,\n\t\t\tgetActions: () => this.getActions(),\n\t\t\tgetCheckedActionsRepresentation: () => 'radio',\n\t\t});\n\t}\n\n\tprivate getActions(): IAction[] {\n\t\treturn this.getOverflowingComposites().map(composite => {\n\t\t\tconst action = this.getCompositeOpenAction(composite.id);\n\t\t\taction.checked = this.getActiveCompositeId() === action.id;\n\n\t\t\tconst badge = this.getBadge(composite.id);\n\t\t\tlet suffix: string | number | undefined;\n\t\t\tif (badge instanceof NumberBadge) {\n\t\t\t\tsuffix = badge.number;\n\t\t\t}\n\n\t\t\tif (suffix) {\n\t\t\t\taction.label = localize('numberBadge', \"{0} ({1})\", composite.name, suffix);\n\t\t\t} else {\n\t\t\t\taction.label = composite.name || '';\n\t\t\t}\n\n\t\t\treturn action;\n\t\t});\n\t}\n}\n\nclass ManageExtensionAction extends Action {\n\n\tconstructor(\n\t\t@ICommandService private readonly commandService: ICommandService\n\t) {\n\t\tsuper('activitybar.manage.extension', localize('manageExtension', \"Manage Extension\"));\n\t}\n\n\toverride run(id: string): Promise<void> {\n\t\treturn this.commandService.executeCommand('_extensions.manage', id);\n\t}\n}\n\nexport class CompositeActionViewItem extends CompositeBarActionViewItem {\n\n\tprivate static manageExtensionAction: ManageExtensionAction;\n\n\tconstructor(\n\t\toptions: ICompositeBarActionViewItemOptions,\n\t\tprivate readonly compositeActivityAction: CompositeBarAction,\n\t\tprivate readonly toggleCompositePinnedAction: IAction,\n\t\tprivate readonly toggleCompositeBadgeAction: IAction,\n\t\tprivate readonly compositeContextMenuActionsProvider: (compositeId: string) => IAction[],\n\t\tprivate readonly contextMenuActionsProvider: () => IAction[],\n\t\tprivate readonly dndHandler: ICompositeDragAndDrop,\n\t\tprivate readonly compositeBar: ICompositeBar,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper(\n\t\t\tcompositeActivityAction,\n\t\t\toptions,\n\t\t\tcompositeBar.areBadgesEnabled.bind(compositeBar),\n\t\t\tthemeService,\n\t\t\thoverService,\n\t\t\tconfigurationService,\n\t\t\tkeybindingService\n\t\t);\n\n\t\tif (!CompositeActionViewItem.manageExtensionAction) {\n\t\t\tCompositeActionViewItem.manageExtensionAction = instantiationService.createInstance(ManageExtensionAction);\n\t\t}\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\n\t\tthis.updateChecked();\n\t\tthis.updateEnabled();\n\n\t\tthis._register(addDisposableListener(this.container, EventType.CONTEXT_MENU, e => {\n\t\t\tEventHelper.stop(e, true);\n\n\t\t\tthis.showContextMenu(container);\n\t\t}));\n\n\t\t// Allow to drag\n\t\tlet insertDropBefore: Before2D | undefined = undefined;\n\t\tthis._register(CompositeDragAndDropObserver.INSTANCE.registerDraggable(this.container, () => { return { type: 'composite', id: this.compositeBarActionItem.id }; }, {\n\t\t\tonDragOver: e => {\n\t\t\t\tconst isValidMove = e.dragAndDropData.getData().id !== this.compositeBarActionItem.id && this.dndHandler.onDragOver(e.dragAndDropData, this.compositeBarActionItem.id, e.eventData);\n\t\t\t\ttoggleDropEffect(e.eventData.dataTransfer, 'move', isValidMove);\n\t\t\t\tinsertDropBefore = this.updateFromDragging(container, isValidMove, e.eventData);\n\t\t\t},\n\t\t\tonDragLeave: e => {\n\t\t\t\tinsertDropBefore = this.updateFromDragging(container, false, e.eventData);\n\t\t\t},\n\t\t\tonDragEnd: e => {\n\t\t\t\tinsertDropBefore = this.updateFromDragging(container, false, e.eventData);\n\t\t\t},\n\t\t\tonDrop: e => {\n\t\t\t\tEventHelper.stop(e.eventData, true);\n\t\t\t\tthis.dndHandler.drop(e.dragAndDropData, this.compositeBarActionItem.id, e.eventData, insertDropBefore);\n\t\t\t\tinsertDropBefore = this.updateFromDragging(container, false, e.eventData);\n\t\t\t},\n\t\t\tonDragStart: e => {\n\t\t\t\tif (e.dragAndDropData.getData().id !== this.compositeBarActionItem.id) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (e.eventData.dataTransfer) {\n\t\t\t\t\te.eventData.dataTransfer.effectAllowed = 'move';\n\t\t\t\t}\n\n\t\t\t\tthis.blur(); // Remove focus indicator when dragging\n\t\t\t}\n\t\t}));\n\n\t\t// Activate on drag over to reveal targets\n\t\t[this.badge, this.label].forEach(element => this._register(new DelayedDragHandler(element, () => {\n\t\t\tif (!this.action.checked) {\n\t\t\t\tthis.action.run();\n\t\t\t}\n\t\t})));\n\n\t\tthis.updateStyles();\n\t}\n\n\tprivate updateFromDragging(element: HTMLElement, showFeedback: boolean, event: DragEvent): Before2D | undefined {\n\t\tconst rect = element.getBoundingClientRect();\n\t\tconst posX = event.clientX;\n\t\tconst posY = event.clientY;\n\t\tconst height = rect.bottom - rect.top;\n\t\tconst width = rect.right - rect.left;\n\n\t\tconst forceTop = posY <= rect.top + height * 0.4;\n\t\tconst forceBottom = posY > rect.bottom - height * 0.4;\n\t\tconst preferTop = posY <= rect.top + height * 0.5;\n\n\t\tconst forceLeft = posX <= rect.left + width * 0.4;\n\t\tconst forceRight = posX > rect.right - width * 0.4;\n\t\tconst preferLeft = posX <= rect.left + width * 0.5;\n\n\t\tconst classes = element.classList;\n\t\tconst lastClasses = {\n\t\t\tvertical: classes.contains('top') ? 'top' : (classes.contains('bottom') ? 'bottom' : undefined),\n\t\t\thorizontal: classes.contains('left') ? 'left' : (classes.contains('right') ? 'right' : undefined)\n\t\t};\n\n\t\tconst top = forceTop || (preferTop && !lastClasses.vertical) || (!forceBottom && lastClasses.vertical === 'top');\n\t\tconst bottom = forceBottom || (!preferTop && !lastClasses.vertical) || (!forceTop && lastClasses.vertical === 'bottom');\n\t\tconst left = forceLeft || (preferLeft && !lastClasses.horizontal) || (!forceRight && lastClasses.horizontal === 'left');\n\t\tconst right = forceRight || (!preferLeft && !lastClasses.horizontal) || (!forceLeft && lastClasses.horizontal === 'right');\n\n\t\telement.classList.toggle('top', showFeedback && top);\n\t\telement.classList.toggle('bottom', showFeedback && bottom);\n\t\telement.classList.toggle('left', showFeedback && left);\n\t\telement.classList.toggle('right', showFeedback && right);\n\n\t\tif (!showFeedback) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn { verticallyBefore: top, horizontallyBefore: left };\n\t}\n\n\tprivate showContextMenu(container: HTMLElement): void {\n\t\tconst actions: IAction[] = [this.toggleCompositePinnedAction, this.toggleCompositeBadgeAction];\n\n\t\tconst compositeContextMenuActions = this.compositeContextMenuActionsProvider(this.compositeBarActionItem.id);\n\t\tif (compositeContextMenuActions.length) {\n\t\t\tactions.push(...compositeContextMenuActions);\n\t\t}\n\n\t\tif ((<any>this.compositeActivityAction.compositeBarActionItem).extensionId) {\n\t\t\tactions.push(new Separator());\n\t\t\tactions.push(CompositeActionViewItem.manageExtensionAction);\n\t\t}\n\n\t\tconst isPinned = this.compositeBar.isPinned(this.compositeBarActionItem.id);\n\t\tif (isPinned) {\n\t\t\tthis.toggleCompositePinnedAction.label = localize('hide', \"Hide '{0}'\", this.compositeBarActionItem.name);\n\t\t\tthis.toggleCompositePinnedAction.checked = false;\n\t\t} else {\n\t\t\tthis.toggleCompositePinnedAction.label = localize('keep', \"Keep '{0}'\", this.compositeBarActionItem.name);\n\t\t}\n\n\t\tconst isBadgeEnabled = this.compositeBar.areBadgesEnabled(this.compositeBarActionItem.id);\n\t\tif (isBadgeEnabled) {\n\t\t\tthis.toggleCompositeBadgeAction.label = localize('hideBadge', \"Hide Badge\");\n\t\t} else {\n\t\t\tthis.toggleCompositeBadgeAction.label = localize('showBadge', \"Show Badge\");\n\t\t}\n\n\t\tconst otherActions = this.contextMenuActionsProvider();\n\t\tif (otherActions.length) {\n\t\t\tactions.push(new Separator());\n\t\t\tactions.push(...otherActions);\n\t\t}\n\n\t\tconst elementPosition = getDomNodePagePosition(container);\n\t\tconst anchor = {\n\t\t\tx: Math.floor(elementPosition.left + (elementPosition.width / 2)),\n\t\t\ty: elementPosition.top + elementPosition.height\n\t\t};\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => anchor,\n\t\t\tgetActions: () => actions,\n\t\t\tgetActionsContext: () => this.compositeBarActionItem.id\n\t\t});\n\t}\n\n\tprotected override updateChecked(): void {\n\t\tif (this.action.checked) {\n\t\t\tthis.container.classList.add('checked');\n\t\t\tthis.container.setAttribute('aria-label', this.getTooltip() ?? this.container.title);\n\t\t\tthis.container.setAttribute('aria-expanded', 'true');\n\t\t\tthis.container.setAttribute('aria-selected', 'true');\n\t\t} else {\n\t\t\tthis.container.classList.remove('checked');\n\t\t\tthis.container.setAttribute('aria-label', this.getTooltip() ?? this.container.title);\n\t\t\tthis.container.setAttribute('aria-expanded', 'false');\n\t\t\tthis.container.setAttribute('aria-selected', 'false');\n\t\t}\n\n\t\tthis.updateStyles();\n\t}\n\n\tprotected override updateEnabled(): void {\n\t\tif (!this.element) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.action.enabled) {\n\t\t\tthis.element.classList.remove('disabled');\n\t\t} else {\n\t\t\tthis.element.classList.add('disabled');\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.label.remove();\n\t}\n}\n\nexport class ToggleCompositePinnedAction extends Action {\n\n\tconstructor(\n\t\tprivate activity: ICompositeBarActionItem | undefined,\n\t\tprivate compositeBar: ICompositeBar\n\t) {\n\t\tsuper('show.toggleCompositePinned', activity ? activity.name : localize('toggle', \"Toggle View Pinned\"));\n\n\t\tthis.checked = !!this.activity && this.compositeBar.isPinned(this.activity.id);\n\t}\n\n\toverride async run(context: string): Promise<void> {\n\t\tconst id = this.activity ? this.activity.id : context;\n\n\t\tif (this.compositeBar.isPinned(id)) {\n\t\t\tthis.compositeBar.unpin(id);\n\t\t} else {\n\t\t\tthis.compositeBar.pin(id);\n\t\t}\n\t}\n}\n\nexport class ToggleCompositeBadgeAction extends Action {\n\tconstructor(\n\t\tprivate compositeBarActionItem: ICompositeBarActionItem | undefined,\n\t\tprivate compositeBar: ICompositeBar\n\t) {\n\t\tsuper('show.toggleCompositeBadge', compositeBarActionItem ? compositeBarActionItem.name : localize('toggleBadge', \"Toggle View Badge\"));\n\n\t\tthis.checked = false;\n\t}\n\n\toverride async run(context: string): Promise<void> {\n\t\tconst id = this.compositeBarActionItem ? this.compositeBarActionItem.id : context;\n\t\tthis.compositeBar.toggleBadgeEnablement(id);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
