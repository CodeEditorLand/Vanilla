{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/compositeBarActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DelayedDragHandler } from \"../../../base/browser/dnd.js\";\nimport {\n\t$,\n\tEventHelper,\n\tEventType,\n\taddDisposableListener,\n\tappend,\n\tclearNode,\n\tgetDomNodePagePosition,\n\thide,\n\tshow,\n} from \"../../../base/browser/dom.js\";\nimport {\n\tBaseActionViewItem,\n\ttype IActionViewItemOptions,\n} from \"../../../base/browser/ui/actionbar/actionViewItems.js\";\nimport type { IHoverWidget } from \"../../../base/browser/ui/hover/hover.js\";\nimport type { HoverPosition } from \"../../../base/browser/ui/hover/hoverWidget.js\";\nimport {\n\tAction,\n\ttype IAction,\n\tSeparator,\n} from \"../../../base/common/actions.js\";\nimport { RunOnceScheduler } from \"../../../base/common/async.js\";\nimport { Codicon } from \"../../../base/common/codicons.js\";\nimport type { Color } from \"../../../base/common/color.js\";\nimport { Emitter, Event } from \"../../../base/common/event.js\";\nimport {\n\tDisposableStore,\n\tMutableDisposable,\n\ttoDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport { ThemeIcon } from \"../../../base/common/themables.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport { localize } from \"../../../nls.js\";\nimport { ICommandService } from \"../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../platform/configuration/common/configuration.js\";\nimport { IContextMenuService } from \"../../../platform/contextview/browser/contextView.js\";\nimport { IHoverService } from \"../../../platform/hover/browser/hover.js\";\nimport { IInstantiationService } from \"../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../platform/keybinding/common/keybinding.js\";\nimport {\n\tbadgeBackground,\n\tbadgeForeground,\n\tcontrastBorder,\n} from \"../../../platform/theme/common/colorRegistry.js\";\nimport {\n\ttype IColorTheme,\n\tIThemeService,\n} from \"../../../platform/theme/common/themeService.js\";\nimport {\n\ttype IActivity,\n\ttype IBadge,\n\tIconBadge,\n\tNumberBadge,\n\tProgressBadge,\n} from \"../../services/activity/common/activity.js\";\nimport {\n\ttype Before2D,\n\tCompositeDragAndDropObserver,\n\ttype ICompositeDragAndDrop,\n\ttoggleDropEffect,\n} from \"../dnd.js\";\n\nexport interface ICompositeBar {\n\t/**\n\t * Unpins a composite from the composite bar.\n\t */\n\tunpin(compositeId: string): void;\n\n\t/**\n\t * Pin a composite inside the composite bar.\n\t */\n\tpin(compositeId: string): void;\n\n\t/**\n\t * Find out if a composite is pinned in the composite bar.\n\t */\n\tisPinned(compositeId: string): boolean;\n\n\t/**\n\t * Returns if badges are enabled for that specified composite.\n\t * @param compositeId The id of the composite to check\n\t */\n\tareBadgesEnabled(compositeId: string): boolean;\n\n\t/**\n\t * Toggles whether or not badges are shown on that particular composite.\n\t * @param compositeId The composite to toggle badge enablement for\n\t */\n\ttoggleBadgeEnablement(compositeId: string): void;\n\n\t/**\n\t * Reorder composite ordering by moving a composite to the location of another composite.\n\t */\n\tmove(compositeId: string, tocompositeId: string): void;\n}\n\nexport interface ICompositeBarActionItem {\n\tid: string;\n\tname: string;\n\tkeybindingId?: string;\n\tclassNames?: string[];\n\ticonUrl?: URI;\n}\n\nexport class CompositeBarAction extends Action {\n\tprivate readonly _onDidChangeCompositeBarActionItem = this._register(\n\t\tnew Emitter<CompositeBarAction>(),\n\t);\n\treadonly onDidChangeCompositeBarActionItem =\n\t\tthis._onDidChangeCompositeBarActionItem.event;\n\n\tprivate readonly _onDidChangeActivity = this._register(\n\t\tnew Emitter<IActivity | undefined>(),\n\t);\n\treadonly onDidChangeActivity = this._onDidChangeActivity.event;\n\n\tprivate _activity: IActivity | undefined;\n\n\tconstructor(private item: ICompositeBarActionItem) {\n\t\tsuper(item.id, item.name, item.classNames?.join(\" \"), true);\n\t}\n\n\tget compositeBarActionItem(): ICompositeBarActionItem {\n\t\treturn this.item;\n\t}\n\n\tset compositeBarActionItem(item: ICompositeBarActionItem) {\n\t\tthis._label = item.name;\n\t\tthis.item = item;\n\t\tthis._onDidChangeCompositeBarActionItem.fire(this);\n\t}\n\n\tget activity(): IActivity | undefined {\n\t\treturn this._activity;\n\t}\n\n\tset activity(activity: IActivity | undefined) {\n\t\tthis._activity = activity;\n\t\tthis._onDidChangeActivity.fire(activity);\n\t}\n\n\tactivate(): void {\n\t\tif (!this.checked) {\n\t\t\tthis._setChecked(true);\n\t\t}\n\t}\n\n\tdeactivate(): void {\n\t\tif (this.checked) {\n\t\t\tthis._setChecked(false);\n\t\t}\n\t}\n}\n\nexport interface ICompositeBarColors {\n\treadonly activeBackgroundColor?: Color;\n\treadonly inactiveBackgroundColor?: Color;\n\treadonly activeBorderColor?: Color;\n\treadonly activeBackground?: Color;\n\treadonly activeBorderBottomColor?: Color;\n\treadonly activeForegroundColor?: Color;\n\treadonly inactiveForegroundColor?: Color;\n\treadonly badgeBackground?: Color;\n\treadonly badgeForeground?: Color;\n\treadonly dragAndDropBorder?: Color;\n}\n\nexport interface IActivityHoverOptions {\n\treadonly position: () => HoverPosition;\n}\n\nexport interface ICompositeBarActionViewItemOptions\n\textends IActionViewItemOptions {\n\treadonly icon?: boolean;\n\treadonly colors: (theme: IColorTheme) => ICompositeBarColors;\n\n\treadonly hoverOptions: IActivityHoverOptions;\n\treadonly hasPopup?: boolean;\n\treadonly compact?: boolean;\n}\n\nexport class CompositeBarActionViewItem extends BaseActionViewItem {\n\tprivate static hoverLeaveTime = 0;\n\n\tprotected container!: HTMLElement;\n\tprotected label!: HTMLElement;\n\tprotected badge!: HTMLElement;\n\tprotected override readonly options: ICompositeBarActionViewItemOptions;\n\n\tprivate badgeContent: HTMLElement | undefined;\n\tprivate readonly badgeDisposable = this._register(\n\t\tnew MutableDisposable<DisposableStore>(),\n\t);\n\tprivate mouseUpTimeout: any;\n\tprivate keybindingLabel: string | undefined | null;\n\n\tprivate readonly hoverDisposables = this._register(new DisposableStore());\n\tprivate lastHover: IHoverWidget | undefined;\n\tprivate readonly showHoverScheduler = new RunOnceScheduler(\n\t\t() => this.showHover(),\n\t\t0,\n\t);\n\n\tconstructor(\n\t\taction: CompositeBarAction,\n\t\toptions: ICompositeBarActionViewItemOptions,\n\t\tprivate readonly badgesEnabled: (compositeId: string) => boolean,\n\t\t@IThemeService protected readonly themeService: IThemeService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t\t@IConfigurationService protected readonly configurationService: IConfigurationService,\n\t\t@IKeybindingService protected readonly keybindingService: IKeybindingService,\n\t) {\n\t\tsuper(null, action, options);\n\n\t\tthis.options = options;\n\n\t\tthis._register(this.themeService.onDidColorThemeChange(this.onThemeChange, this));\n\t\tthis._register(action.onDidChangeCompositeBarActionItem(() => this.update()));\n\t\tthis._register(Event.filter(keybindingService.onDidUpdateKeybindings, () => this.keybindingLabel !== this.computeKeybindingLabel())(() => this.updateTitle()));\n\t\tthis._register(action.onDidChangeActivity(() => this.updateActivity()));\n\t\tthis._register(toDisposable(() => this.showHoverScheduler.cancel()));\n\t}\n\n\tprotected get compositeBarActionItem(): ICompositeBarActionItem {\n\t\treturn (this._action as CompositeBarAction).compositeBarActionItem;\n\t}\n\n\tprotected updateStyles(): void {\n\t\tconst theme = this.themeService.getColorTheme();\n\t\tconst colors = this.options.colors(theme);\n\n\t\tif (this.label) {\n\t\t\tif (this.options.icon) {\n\t\t\t\tconst foreground = this._action.checked\n\t\t\t\t\t? colors.activeForegroundColor\n\t\t\t\t\t: colors.inactiveForegroundColor;\n\t\t\t\tif (this.compositeBarActionItem.iconUrl) {\n\t\t\t\t\t// Apply background color to activity bar item provided with iconUrls\n\t\t\t\t\tthis.label.style.backgroundColor = foreground\n\t\t\t\t\t\t? foreground.toString()\n\t\t\t\t\t\t: \"\";\n\t\t\t\t\tthis.label.style.color = \"\";\n\t\t\t\t} else {\n\t\t\t\t\t// Apply foreground color to activity bar items provided with codicons\n\t\t\t\t\tthis.label.style.color = foreground\n\t\t\t\t\t\t? foreground.toString()\n\t\t\t\t\t\t: \"\";\n\t\t\t\t\tthis.label.style.backgroundColor = \"\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst foreground = this._action.checked\n\t\t\t\t\t? colors.activeForegroundColor\n\t\t\t\t\t: colors.inactiveForegroundColor;\n\t\t\t\tconst borderBottomColor = this._action.checked\n\t\t\t\t\t? colors.activeBorderBottomColor\n\t\t\t\t\t: null;\n\t\t\t\tthis.label.style.color = foreground\n\t\t\t\t\t? foreground.toString()\n\t\t\t\t\t: \"\";\n\t\t\t\tthis.label.style.borderBottomColor = borderBottomColor\n\t\t\t\t\t? borderBottomColor.toString()\n\t\t\t\t\t: \"\";\n\t\t\t}\n\n\t\t\tthis.container.style.setProperty(\n\t\t\t\t\"--insert-border-color\",\n\t\t\t\tcolors.dragAndDropBorder\n\t\t\t\t\t? colors.dragAndDropBorder.toString()\n\t\t\t\t\t: \"\",\n\t\t\t);\n\t\t}\n\n\t\t// Badge\n\t\tif (this.badgeContent) {\n\t\t\tconst badgeStyles = this.getActivity()?.badge.getColors(theme);\n\t\t\tconst badgeFg =\n\t\t\t\tbadgeStyles?.badgeForeground ??\n\t\t\t\tcolors.badgeForeground ??\n\t\t\t\ttheme.getColor(badgeForeground);\n\t\t\tconst badgeBg =\n\t\t\t\tbadgeStyles?.badgeBackground ??\n\t\t\t\tcolors.badgeBackground ??\n\t\t\t\ttheme.getColor(badgeBackground);\n\t\t\tconst contrastBorderColor =\n\t\t\t\tbadgeStyles?.badgeBorder ?? theme.getColor(contrastBorder);\n\n\t\t\tthis.badgeContent.style.color = badgeFg ? badgeFg.toString() : \"\";\n\t\t\tthis.badgeContent.style.backgroundColor = badgeBg\n\t\t\t\t? badgeBg.toString()\n\t\t\t\t: \"\";\n\n\t\t\tthis.badgeContent.style.borderStyle =\n\t\t\t\tcontrastBorderColor && !this.options.compact ? \"solid\" : \"\";\n\t\t\tthis.badgeContent.style.borderWidth = contrastBorderColor\n\t\t\t\t? \"1px\"\n\t\t\t\t: \"\";\n\t\t\tthis.badgeContent.style.borderColor = contrastBorderColor\n\t\t\t\t? contrastBorderColor.toString()\n\t\t\t\t: \"\";\n\t\t}\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\n\t\tthis.container = container;\n\t\tif (this.options.icon) {\n\t\t\tthis.container.classList.add(\"icon\");\n\t\t}\n\n\t\tif (this.options.hasPopup) {\n\t\t\tthis.container.setAttribute(\"role\", \"button\");\n\t\t\tthis.container.setAttribute(\"aria-haspopup\", \"true\");\n\t\t} else {\n\t\t\tthis.container.setAttribute(\"role\", \"tab\");\n\t\t}\n\n\t\t// Try hard to prevent keyboard only focus feedback when using mouse\n\t\tthis._register(\n\t\t\taddDisposableListener(this.container, EventType.MOUSE_DOWN, () => {\n\t\t\t\tthis.container.classList.add(\"clicked\");\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\taddDisposableListener(this.container, EventType.MOUSE_UP, () => {\n\t\t\t\tif (this.mouseUpTimeout) {\n\t\t\t\t\tclearTimeout(this.mouseUpTimeout);\n\t\t\t\t}\n\n\t\t\t\tthis.mouseUpTimeout = setTimeout(() => {\n\t\t\t\t\tthis.container.classList.remove(\"clicked\");\n\t\t\t\t}, 800); // delayed to prevent focus feedback from showing on mouse up\n\t\t\t}),\n\t\t);\n\n\t\t// Label\n\t\tthis.label = append(container, $(\"a\"));\n\n\t\t// Badge\n\t\tthis.badge = append(container, $(\".badge\"));\n\t\tthis.badgeContent = append(this.badge, $(\".badge-content\"));\n\n\t\t// pane composite bar active border + background\n\t\tappend(container, $(\".active-item-indicator\"));\n\n\t\thide(this.badge);\n\n\t\tthis.update();\n\t\tthis.updateStyles();\n\t\tthis.updateHover();\n\t}\n\n\tprivate onThemeChange(theme: IColorTheme): void {\n\t\tthis.updateStyles();\n\t}\n\n\tprotected update(): void {\n\t\tthis.updateLabel();\n\t\tthis.updateActivity();\n\t\tthis.updateTitle();\n\t\tthis.updateStyles();\n\t}\n\n\tprivate getActivity(): IActivity | undefined {\n\t\tif (this._action instanceof CompositeBarAction) {\n\t\t\treturn this._action.activity;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprotected updateActivity(): void {\n\t\tif (\n\t\t\t!this.badge ||\n\t\t\t!this.badgeContent ||\n\t\t\t!(this._action instanceof CompositeBarAction)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst activity = this.getActivity();\n\n\t\tthis.badgeDisposable.value = new DisposableStore();\n\n\t\tclearNode(this.badgeContent);\n\t\thide(this.badge);\n\n\t\tconst shouldRenderBadges = this.badgesEnabled(\n\t\t\tthis.compositeBarActionItem.id,\n\t\t);\n\n\t\tif (activity && shouldRenderBadges) {\n\t\t\tconst { badge } = activity;\n\t\t\tconst classes: string[] = [];\n\n\t\t\tif (this.options.compact) {\n\t\t\t\tclasses.push(\"compact\");\n\t\t\t}\n\n\t\t\t// Progress\n\t\t\tif (badge instanceof ProgressBadge) {\n\t\t\t\tshow(this.badge);\n\t\t\t\tclasses.push(\"progress-badge\");\n\t\t\t}\n\n\t\t\t// Number\n\t\t\telse if (badge instanceof NumberBadge) {\n\t\t\t\tif (badge.number) {\n\t\t\t\t\tlet number = badge.number.toString();\n\t\t\t\t\tif (badge.number > 999) {\n\t\t\t\t\t\tconst noOfThousands = badge.number / 1000;\n\t\t\t\t\t\tconst floor = Math.floor(noOfThousands);\n\t\t\t\t\t\tif (noOfThousands > floor) {\n\t\t\t\t\t\t\tnumber = `${floor}K+`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnumber = `${noOfThousands}K`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (this.options.compact && number.length >= 3) {\n\t\t\t\t\t\tclasses.push(\"compact-content\");\n\t\t\t\t\t}\n\t\t\t\t\tthis.badgeContent.textContent = number;\n\t\t\t\t\tshow(this.badge);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Icon\n\t\t\telse if (badge instanceof IconBadge) {\n\t\t\t\tclasses.push(\"icon-badge\");\n\t\t\t\tconst badgeContentClassess = [\n\t\t\t\t\t\"icon-overlay\",\n\t\t\t\t\t...ThemeIcon.asClassNameArray(badge.icon),\n\t\t\t\t];\n\t\t\t\tthis.badgeContent.classList.add(...badgeContentClassess);\n\t\t\t\tthis.badgeDisposable.value.add(\n\t\t\t\t\ttoDisposable(() =>\n\t\t\t\t\t\tthis.badgeContent?.classList.remove(\n\t\t\t\t\t\t\t...badgeContentClassess,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tshow(this.badge);\n\t\t\t}\n\n\t\t\tif (classes.length) {\n\t\t\t\tthis.badge.classList.add(...classes);\n\t\t\t\tthis.badgeDisposable.value.add(\n\t\t\t\t\ttoDisposable(() => this.badge.classList.remove(...classes)),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthis.updateTitle();\n\t\tthis.updateStyles();\n\t}\n\n\tprotected override updateLabel(): void {\n\t\tthis.label.className = \"action-label\";\n\n\t\tif (this.compositeBarActionItem.classNames) {\n\t\t\tthis.label.classList.add(...this.compositeBarActionItem.classNames);\n\t\t}\n\n\t\tif (!this.options.icon) {\n\t\t\tthis.label.textContent = this.action.label;\n\t\t}\n\t}\n\n\tprivate updateTitle(): void {\n\t\tconst title = this.computeTitle();\n\t\t[this.label, this.badge, this.container].forEach((element) => {\n\t\t\tif (element) {\n\t\t\t\telement.setAttribute(\"aria-label\", title);\n\t\t\t\telement.setAttribute(\"title\", \"\");\n\t\t\t\telement.removeAttribute(\"title\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected computeTitle(): string {\n\t\tthis.keybindingLabel = this.computeKeybindingLabel();\n\t\tlet title = this.keybindingLabel\n\t\t\t? localize(\n\t\t\t\t\t\"titleKeybinding\",\n\t\t\t\t\t\"{0} ({1})\",\n\t\t\t\t\tthis.compositeBarActionItem.name,\n\t\t\t\t\tthis.keybindingLabel,\n\t\t\t\t)\n\t\t\t: this.compositeBarActionItem.name;\n\t\tconst badge = (this.action as CompositeBarAction).activity?.badge;\n\t\tif (badge?.getDescription()) {\n\t\t\ttitle = localize(\n\t\t\t\t\"badgeTitle\",\n\t\t\t\t\"{0} - {1}\",\n\t\t\t\ttitle,\n\t\t\t\tbadge.getDescription(),\n\t\t\t);\n\t\t}\n\n\t\treturn title;\n\t}\n\n\tprivate computeKeybindingLabel(): string | undefined | null {\n\t\tconst keybinding = this.compositeBarActionItem.keybindingId\n\t\t\t? this.keybindingService.lookupKeybinding(\n\t\t\t\t\tthis.compositeBarActionItem.keybindingId,\n\t\t\t\t)\n\t\t\t: null;\n\n\t\treturn keybinding?.getLabel();\n\t}\n\n\tprivate updateHover(): void {\n\t\tthis.hoverDisposables.clear();\n\n\t\tthis.updateTitle();\n\n\t\tthis.hoverDisposables.add(\n\t\t\taddDisposableListener(\n\t\t\t\tthis.container,\n\t\t\t\tEventType.MOUSE_OVER,\n\t\t\t\t() => {\n\t\t\t\t\tif (!this.showHoverScheduler.isScheduled()) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tDate.now() -\n\t\t\t\t\t\t\t\tCompositeBarActionViewItem.hoverLeaveTime <\n\t\t\t\t\t\t\t200\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.showHover(true);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.showHoverScheduler.schedule(\n\t\t\t\t\t\t\t\tthis.configurationService.getValue<number>(\n\t\t\t\t\t\t\t\t\t\"workbench.hover.delay\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttrue,\n\t\t\t),\n\t\t);\n\n\t\tthis.hoverDisposables.add(\n\t\t\taddDisposableListener(\n\t\t\t\tthis.container,\n\t\t\t\tEventType.MOUSE_LEAVE,\n\t\t\t\t(e) => {\n\t\t\t\t\tif (e.target === this.container) {\n\t\t\t\t\t\tCompositeBarActionViewItem.hoverLeaveTime = Date.now();\n\t\t\t\t\t\tthis.hoverService.hideHover();\n\t\t\t\t\t\tthis.showHoverScheduler.cancel();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttrue,\n\t\t\t),\n\t\t);\n\n\t\tthis.hoverDisposables.add(\n\t\t\ttoDisposable(() => {\n\t\t\t\tthis.hoverService.hideHover();\n\t\t\t\tthis.showHoverScheduler.cancel();\n\t\t\t}),\n\t\t);\n\t}\n\n\tshowHover(skipFadeInAnimation = false): void {\n\t\tif (this.lastHover && !this.lastHover.isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst hoverPosition = this.options.hoverOptions.position();\n\t\tthis.lastHover = this.hoverService.showHover({\n\t\t\ttarget: this.container,\n\t\t\tcontent: this.computeTitle(),\n\t\t\tposition: {\n\t\t\t\thoverPosition,\n\t\t\t},\n\t\t\tpersistence: {\n\t\t\t\thideOnKeyDown: true,\n\t\t\t},\n\t\t\tappearance: {\n\t\t\t\tshowPointer: true,\n\t\t\t\tcompact: true,\n\t\t\t\tskipFadeInAnimation,\n\t\t\t},\n\t\t});\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tif (this.mouseUpTimeout) {\n\t\t\tclearTimeout(this.mouseUpTimeout);\n\t\t}\n\n\t\tthis.badge.remove();\n\t}\n}\n\nexport class CompositeOverflowActivityAction extends CompositeBarAction {\n\tconstructor(private showMenu: () => void) {\n\t\tsuper({\n\t\t\tid: \"additionalComposites.action\",\n\t\t\tname: localize(\"additionalViews\", \"Additional Views\"),\n\t\t\tclassNames: ThemeIcon.asClassNameArray(Codicon.more),\n\t\t});\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tthis.showMenu();\n\t}\n}\n\nexport class CompositeOverflowActivityActionViewItem extends CompositeBarActionViewItem {\n\tconstructor(\n\t\taction: CompositeBarAction,\n\t\tprivate getOverflowingComposites: () => { id: string; name?: string }[],\n\t\tprivate getActiveCompositeId: () => string | undefined,\n\t\tprivate getBadge: (compositeId: string) => IBadge,\n\t\tprivate getCompositeOpenAction: (compositeId: string) => IAction,\n\t\tcolors: (theme: IColorTheme) => ICompositeBarColors,\n\t\thoverOptions: IActivityHoverOptions,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t) {\n\t\tsuper(action, { icon: true, colors, hasPopup: true, hoverOptions }, () => true, themeService, hoverService, configurationService, keybindingService);\n\t}\n\n\tshowMenu(): void {\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => this.container,\n\t\t\tgetActions: () => this.getActions(),\n\t\t\tgetCheckedActionsRepresentation: () => \"radio\",\n\t\t});\n\t}\n\n\tprivate getActions(): IAction[] {\n\t\treturn this.getOverflowingComposites().map((composite) => {\n\t\t\tconst action = this.getCompositeOpenAction(composite.id);\n\t\t\taction.checked = this.getActiveCompositeId() === action.id;\n\n\t\t\tconst badge = this.getBadge(composite.id);\n\t\t\tlet suffix: string | number | undefined;\n\t\t\tif (badge instanceof NumberBadge) {\n\t\t\t\tsuffix = badge.number;\n\t\t\t}\n\n\t\t\tif (suffix) {\n\t\t\t\taction.label = localize(\n\t\t\t\t\t\"numberBadge\",\n\t\t\t\t\t\"{0} ({1})\",\n\t\t\t\t\tcomposite.name,\n\t\t\t\t\tsuffix,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\taction.label = composite.name || \"\";\n\t\t\t}\n\n\t\t\treturn action;\n\t\t});\n\t}\n}\n\nclass ManageExtensionAction extends Action {\n\tconstructor(\n\t\t@ICommandService private readonly commandService: ICommandService\n\t) {\n\t\tsuper('activitybar.manage.extension', localize('manageExtension', \"Manage Extension\"));\n\t}\n\n\toverride run(id: string): Promise<void> {\n\t\treturn this.commandService.executeCommand(\"_extensions.manage\", id);\n\t}\n}\n\nexport class CompositeActionViewItem extends CompositeBarActionViewItem {\n\tprivate static manageExtensionAction: ManageExtensionAction;\n\n\tconstructor(\n\t\toptions: ICompositeBarActionViewItemOptions,\n\t\tprivate readonly compositeActivityAction: CompositeBarAction,\n\t\tprivate readonly toggleCompositePinnedAction: IAction,\n\t\tprivate readonly toggleCompositeBadgeAction: IAction,\n\t\tprivate readonly compositeContextMenuActionsProvider: (compositeId: string) => IAction[],\n\t\tprivate readonly contextMenuActionsProvider: () => IAction[],\n\t\tprivate readonly dndHandler: ICompositeDragAndDrop,\n\t\tprivate readonly compositeBar: ICompositeBar,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper(\n\t\t\tcompositeActivityAction,\n\t\t\toptions,\n\t\t\tcompositeBar.areBadgesEnabled.bind(compositeBar),\n\t\t\tthemeService,\n\t\t\thoverService,\n\t\t\tconfigurationService,\n\t\t\tkeybindingService\n\t\t);\n\n\t\tif (!CompositeActionViewItem.manageExtensionAction) {\n\t\t\tCompositeActionViewItem.manageExtensionAction = instantiationService.createInstance(ManageExtensionAction);\n\t\t}\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\n\t\tthis.updateChecked();\n\t\tthis.updateEnabled();\n\n\t\tthis._register(\n\t\t\taddDisposableListener(\n\t\t\t\tthis.container,\n\t\t\t\tEventType.CONTEXT_MENU,\n\t\t\t\t(e) => {\n\t\t\t\t\tEventHelper.stop(e, true);\n\n\t\t\t\t\tthis.showContextMenu(container);\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\t// Allow to drag\n\t\tlet insertDropBefore: Before2D | undefined;\n\t\tthis._register(\n\t\t\tCompositeDragAndDropObserver.INSTANCE.registerDraggable(\n\t\t\t\tthis.container,\n\t\t\t\t() => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: \"composite\",\n\t\t\t\t\t\tid: this.compositeBarActionItem.id,\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tonDragOver: (e) => {\n\t\t\t\t\t\tconst isValidMove =\n\t\t\t\t\t\t\te.dragAndDropData.getData().id !==\n\t\t\t\t\t\t\t\tthis.compositeBarActionItem.id &&\n\t\t\t\t\t\t\tthis.dndHandler.onDragOver(\n\t\t\t\t\t\t\t\te.dragAndDropData,\n\t\t\t\t\t\t\t\tthis.compositeBarActionItem.id,\n\t\t\t\t\t\t\t\te.eventData,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\ttoggleDropEffect(\n\t\t\t\t\t\t\te.eventData.dataTransfer,\n\t\t\t\t\t\t\t\"move\",\n\t\t\t\t\t\t\tisValidMove,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tinsertDropBefore = this.updateFromDragging(\n\t\t\t\t\t\t\tcontainer,\n\t\t\t\t\t\t\tisValidMove,\n\t\t\t\t\t\t\te.eventData,\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tonDragLeave: (e) => {\n\t\t\t\t\t\tinsertDropBefore = this.updateFromDragging(\n\t\t\t\t\t\t\tcontainer,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\te.eventData,\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tonDragEnd: (e) => {\n\t\t\t\t\t\tinsertDropBefore = this.updateFromDragging(\n\t\t\t\t\t\t\tcontainer,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\te.eventData,\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tonDrop: (e) => {\n\t\t\t\t\t\tEventHelper.stop(e.eventData, true);\n\t\t\t\t\t\tthis.dndHandler.drop(\n\t\t\t\t\t\t\te.dragAndDropData,\n\t\t\t\t\t\t\tthis.compositeBarActionItem.id,\n\t\t\t\t\t\t\te.eventData,\n\t\t\t\t\t\t\tinsertDropBefore,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tinsertDropBefore = this.updateFromDragging(\n\t\t\t\t\t\t\tcontainer,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\te.eventData,\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tonDragStart: (e) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\te.dragAndDropData.getData().id !==\n\t\t\t\t\t\t\tthis.compositeBarActionItem.id\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (e.eventData.dataTransfer) {\n\t\t\t\t\t\t\te.eventData.dataTransfer.effectAllowed = \"move\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.blur(); // Remove focus indicator when dragging\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\t// Activate on drag over to reveal targets\n\t\t[this.badge, this.label].forEach((element) =>\n\t\t\tthis._register(\n\t\t\t\tnew DelayedDragHandler(element, () => {\n\t\t\t\t\tif (!this.action.checked) {\n\t\t\t\t\t\tthis.action.run();\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t),\n\t\t);\n\n\t\tthis.updateStyles();\n\t}\n\n\tprivate updateFromDragging(\n\t\telement: HTMLElement,\n\t\tshowFeedback: boolean,\n\t\tevent: DragEvent,\n\t): Before2D | undefined {\n\t\tconst rect = element.getBoundingClientRect();\n\t\tconst posX = event.clientX;\n\t\tconst posY = event.clientY;\n\t\tconst height = rect.bottom - rect.top;\n\t\tconst width = rect.right - rect.left;\n\n\t\tconst forceTop = posY <= rect.top + height * 0.4;\n\t\tconst forceBottom = posY > rect.bottom - height * 0.4;\n\t\tconst preferTop = posY <= rect.top + height * 0.5;\n\n\t\tconst forceLeft = posX <= rect.left + width * 0.4;\n\t\tconst forceRight = posX > rect.right - width * 0.4;\n\t\tconst preferLeft = posX <= rect.left + width * 0.5;\n\n\t\tconst classes = element.classList;\n\t\tconst lastClasses = {\n\t\t\tvertical: classes.contains(\"top\")\n\t\t\t\t? \"top\"\n\t\t\t\t: classes.contains(\"bottom\")\n\t\t\t\t\t? \"bottom\"\n\t\t\t\t\t: undefined,\n\t\t\thorizontal: classes.contains(\"left\")\n\t\t\t\t? \"left\"\n\t\t\t\t: classes.contains(\"right\")\n\t\t\t\t\t? \"right\"\n\t\t\t\t\t: undefined,\n\t\t};\n\n\t\tconst top =\n\t\t\tforceTop ||\n\t\t\t(preferTop && !lastClasses.vertical) ||\n\t\t\t(!forceBottom && lastClasses.vertical === \"top\");\n\t\tconst bottom =\n\t\t\tforceBottom ||\n\t\t\t(!preferTop && !lastClasses.vertical) ||\n\t\t\t(!forceTop && lastClasses.vertical === \"bottom\");\n\t\tconst left =\n\t\t\tforceLeft ||\n\t\t\t(preferLeft && !lastClasses.horizontal) ||\n\t\t\t(!forceRight && lastClasses.horizontal === \"left\");\n\t\tconst right =\n\t\t\tforceRight ||\n\t\t\t(!preferLeft && !lastClasses.horizontal) ||\n\t\t\t(!forceLeft && lastClasses.horizontal === \"right\");\n\n\t\telement.classList.toggle(\"top\", showFeedback && top);\n\t\telement.classList.toggle(\"bottom\", showFeedback && bottom);\n\t\telement.classList.toggle(\"left\", showFeedback && left);\n\t\telement.classList.toggle(\"right\", showFeedback && right);\n\n\t\tif (!showFeedback) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn { verticallyBefore: top, horizontallyBefore: left };\n\t}\n\n\tprivate showContextMenu(container: HTMLElement): void {\n\t\tconst actions: IAction[] = [\n\t\t\tthis.toggleCompositePinnedAction,\n\t\t\tthis.toggleCompositeBadgeAction,\n\t\t];\n\n\t\tconst compositeContextMenuActions =\n\t\t\tthis.compositeContextMenuActionsProvider(\n\t\t\t\tthis.compositeBarActionItem.id,\n\t\t\t);\n\t\tif (compositeContextMenuActions.length) {\n\t\t\tactions.push(...compositeContextMenuActions);\n\t\t}\n\n\t\tif (\n\t\t\t(<any>this.compositeActivityAction.compositeBarActionItem)\n\t\t\t\t.extensionId\n\t\t) {\n\t\t\tactions.push(new Separator());\n\t\t\tactions.push(CompositeActionViewItem.manageExtensionAction);\n\t\t}\n\n\t\tconst isPinned = this.compositeBar.isPinned(\n\t\t\tthis.compositeBarActionItem.id,\n\t\t);\n\t\tif (isPinned) {\n\t\t\tthis.toggleCompositePinnedAction.label = localize(\n\t\t\t\t\"hide\",\n\t\t\t\t\"Hide '{0}'\",\n\t\t\t\tthis.compositeBarActionItem.name,\n\t\t\t);\n\t\t\tthis.toggleCompositePinnedAction.checked = false;\n\t\t} else {\n\t\t\tthis.toggleCompositePinnedAction.label = localize(\n\t\t\t\t\"keep\",\n\t\t\t\t\"Keep '{0}'\",\n\t\t\t\tthis.compositeBarActionItem.name,\n\t\t\t);\n\t\t}\n\n\t\tconst isBadgeEnabled = this.compositeBar.areBadgesEnabled(\n\t\t\tthis.compositeBarActionItem.id,\n\t\t);\n\t\tif (isBadgeEnabled) {\n\t\t\tthis.toggleCompositeBadgeAction.label = localize(\n\t\t\t\t\"hideBadge\",\n\t\t\t\t\"Hide Badge\",\n\t\t\t);\n\t\t} else {\n\t\t\tthis.toggleCompositeBadgeAction.label = localize(\n\t\t\t\t\"showBadge\",\n\t\t\t\t\"Show Badge\",\n\t\t\t);\n\t\t}\n\n\t\tconst otherActions = this.contextMenuActionsProvider();\n\t\tif (otherActions.length) {\n\t\t\tactions.push(new Separator());\n\t\t\tactions.push(...otherActions);\n\t\t}\n\n\t\tconst elementPosition = getDomNodePagePosition(container);\n\t\tconst anchor = {\n\t\t\tx: Math.floor(elementPosition.left + elementPosition.width / 2),\n\t\t\ty: elementPosition.top + elementPosition.height,\n\t\t};\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => anchor,\n\t\t\tgetActions: () => actions,\n\t\t\tgetActionsContext: () => this.compositeBarActionItem.id,\n\t\t});\n\t}\n\n\tprotected override updateChecked(): void {\n\t\tif (this.action.checked) {\n\t\t\tthis.container.classList.add(\"checked\");\n\t\t\tthis.container.setAttribute(\n\t\t\t\t\"aria-label\",\n\t\t\t\tthis.getTooltip() ?? this.container.title,\n\t\t\t);\n\t\t\tthis.container.setAttribute(\"aria-expanded\", \"true\");\n\t\t\tthis.container.setAttribute(\"aria-selected\", \"true\");\n\t\t} else {\n\t\t\tthis.container.classList.remove(\"checked\");\n\t\t\tthis.container.setAttribute(\n\t\t\t\t\"aria-label\",\n\t\t\t\tthis.getTooltip() ?? this.container.title,\n\t\t\t);\n\t\t\tthis.container.setAttribute(\"aria-expanded\", \"false\");\n\t\t\tthis.container.setAttribute(\"aria-selected\", \"false\");\n\t\t}\n\n\t\tthis.updateStyles();\n\t}\n\n\tprotected override updateEnabled(): void {\n\t\tif (!this.element) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.action.enabled) {\n\t\t\tthis.element.classList.remove(\"disabled\");\n\t\t} else {\n\t\t\tthis.element.classList.add(\"disabled\");\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.label.remove();\n\t}\n}\n\nexport class ToggleCompositePinnedAction extends Action {\n\tconstructor(\n\t\tprivate activity: ICompositeBarActionItem | undefined,\n\t\tprivate compositeBar: ICompositeBar,\n\t) {\n\t\tsuper(\n\t\t\t\"show.toggleCompositePinned\",\n\t\t\tactivity ? activity.name : localize(\"toggle\", \"Toggle View Pinned\"),\n\t\t);\n\n\t\tthis.checked =\n\t\t\t!!this.activity && this.compositeBar.isPinned(this.activity.id);\n\t}\n\n\toverride async run(context: string): Promise<void> {\n\t\tconst id = this.activity ? this.activity.id : context;\n\n\t\tif (this.compositeBar.isPinned(id)) {\n\t\t\tthis.compositeBar.unpin(id);\n\t\t} else {\n\t\t\tthis.compositeBar.pin(id);\n\t\t}\n\t}\n}\n\nexport class ToggleCompositeBadgeAction extends Action {\n\tconstructor(\n\t\tprivate compositeBarActionItem: ICompositeBarActionItem | undefined,\n\t\tprivate compositeBar: ICompositeBar,\n\t) {\n\t\tsuper(\n\t\t\t\"show.toggleCompositeBadge\",\n\t\t\tcompositeBarActionItem\n\t\t\t\t? compositeBarActionItem.name\n\t\t\t\t: localize(\"toggleBadge\", \"Toggle View Badge\"),\n\t\t);\n\n\t\tthis.checked = false;\n\t}\n\n\toverride async run(context: string): Promise<void> {\n\t\tconst id = this.compositeBarActionItem\n\t\t\t? this.compositeBarActionItem.id\n\t\t\t: context;\n\t\tthis.compositeBar.toggleBadgeEnablement(id);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
