{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/compositeBar.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../nls.js';\nimport { IAction, toAction } from '../../../base/common/actions.js';\nimport { IActivity } from '../../services/activity/common/activity.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { ActionBar, ActionsOrientation } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { CompositeActionViewItem, CompositeOverflowActivityAction, CompositeOverflowActivityActionViewItem, CompositeBarAction, ICompositeBar, ICompositeBarColors, IActivityHoverOptions } from './compositeBarActions.js';\nimport { Dimension, $, addDisposableListener, EventType, EventHelper, isAncestor, getWindow } from '../../../base/browser/dom.js';\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\nimport { IContextMenuService } from '../../../platform/contextview/browser/contextView.js';\nimport { Widget } from '../../../base/browser/ui/widget.js';\nimport { isUndefinedOrNull } from '../../../base/common/types.js';\nimport { IColorTheme } from '../../../platform/theme/common/themeService.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { ViewContainerLocation, IViewDescriptorService } from '../../common/views.js';\nimport { IPaneComposite } from '../../common/panecomposite.js';\nimport { IComposite } from '../../common/composite.js';\nimport { CompositeDragAndDropData, CompositeDragAndDropObserver, IDraggedCompositeData, ICompositeDragAndDrop, Before2D, toggleDropEffect, ICompositeDragAndDropObserverCallbacks } from '../dnd.js';\nimport { Gesture, EventType as TouchEventType, GestureEvent } from '../../../base/browser/touch.js';\n\nexport interface ICompositeBarItem {\n\n\treadonly id: string;\n\n\tname?: string;\n\tpinned: boolean;\n\torder?: number;\n\tvisible: boolean;\n}\n\nexport class CompositeDragAndDrop implements ICompositeDragAndDrop {\n\n\tconstructor(\n\t\tprivate viewDescriptorService: IViewDescriptorService,\n\t\tprivate targetContainerLocation: ViewContainerLocation,\n\t\tprivate orientation: ActionsOrientation,\n\t\tprivate openComposite: (id: string, focus?: boolean) => Promise<IPaneComposite | null>,\n\t\tprivate moveComposite: (from: string, to: string, before?: Before2D) => void,\n\t\tprivate getItems: () => ICompositeBarItem[]\n\t) { }\n\n\tdrop(data: CompositeDragAndDropData, targetCompositeId: string | undefined, originalEvent: DragEvent, before?: Before2D): void {\n\t\tconst dragData = data.getData();\n\n\t\tif (dragData.type === 'composite') {\n\t\t\tconst currentContainer = this.viewDescriptorService.getViewContainerById(dragData.id)!;\n\t\t\tconst currentLocation = this.viewDescriptorService.getViewContainerLocation(currentContainer);\n\n\t\t\t// ... on the same composite bar\n\t\t\tif (currentLocation === this.targetContainerLocation) {\n\t\t\t\tif (targetCompositeId) {\n\t\t\t\t\tthis.moveComposite(dragData.id, targetCompositeId, before);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ... on a different composite bar\n\t\t\telse {\n\t\t\t\tthis.viewDescriptorService.moveViewContainerToLocation(currentContainer, this.targetContainerLocation, this.getTargetIndex(targetCompositeId, before), 'dnd');\n\t\t\t}\n\t\t}\n\n\t\tif (dragData.type === 'view') {\n\t\t\tconst viewToMove = this.viewDescriptorService.getViewDescriptorById(dragData.id)!;\n\t\t\tif (viewToMove && viewToMove.canMoveView) {\n\t\t\t\tthis.viewDescriptorService.moveViewToLocation(viewToMove, this.targetContainerLocation, 'dnd');\n\n\t\t\t\tconst newContainer = this.viewDescriptorService.getViewContainerByViewId(viewToMove.id)!;\n\n\t\t\t\tif (targetCompositeId) {\n\t\t\t\t\tthis.moveComposite(newContainer.id, targetCompositeId, before);\n\t\t\t\t}\n\n\t\t\t\tthis.openComposite(newContainer.id, true).then(composite => {\n\t\t\t\t\tcomposite?.openView(viewToMove.id, true);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tonDragEnter(data: CompositeDragAndDropData, targetCompositeId: string | undefined, originalEvent: DragEvent): boolean {\n\t\treturn this.canDrop(data, targetCompositeId);\n\t}\n\n\tonDragOver(data: CompositeDragAndDropData, targetCompositeId: string | undefined, originalEvent: DragEvent): boolean {\n\t\treturn this.canDrop(data, targetCompositeId);\n\t}\n\n\tprivate getTargetIndex(targetId: string | undefined, before2d: Before2D | undefined): number | undefined {\n\t\tif (!targetId) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst items = this.getItems();\n\t\tconst before = this.orientation === ActionsOrientation.HORIZONTAL ? before2d?.horizontallyBefore : before2d?.verticallyBefore;\n\t\treturn items.filter(item => item.visible).findIndex(item => item.id === targetId) + (before ? 0 : 1);\n\t}\n\n\tprivate canDrop(data: CompositeDragAndDropData, targetCompositeId: string | undefined): boolean {\n\t\tconst dragData = data.getData();\n\n\t\tif (dragData.type === 'composite') {\n\n\t\t\t// Dragging a composite\n\t\t\tconst currentContainer = this.viewDescriptorService.getViewContainerById(dragData.id)!;\n\t\t\tconst currentLocation = this.viewDescriptorService.getViewContainerLocation(currentContainer);\n\n\t\t\t// ... to the same composite location\n\t\t\tif (currentLocation === this.targetContainerLocation) {\n\t\t\t\treturn dragData.id !== targetCompositeId;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} else {\n\n\t\t\t// Dragging an individual view\n\t\t\tconst viewDescriptor = this.viewDescriptorService.getViewDescriptorById(dragData.id);\n\n\t\t\t// ... that cannot move\n\t\t\tif (!viewDescriptor || !viewDescriptor.canMoveView) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// ... to create a view container\n\t\t\treturn true;\n\t\t}\n\t}\n}\n\nexport interface ICompositeBarOptions {\n\n\treadonly icon: boolean;\n\treadonly orientation: ActionsOrientation;\n\treadonly colors: (theme: IColorTheme) => ICompositeBarColors;\n\treadonly compact?: boolean;\n\treadonly compositeSize: number;\n\treadonly overflowActionSize: number;\n\treadonly dndHandler: ICompositeDragAndDrop;\n\treadonly activityHoverOptions: IActivityHoverOptions;\n\treadonly preventLoopNavigation?: boolean;\n\n\treadonly getActivityAction: (compositeId: string) => CompositeBarAction;\n\treadonly getCompositePinnedAction: (compositeId: string) => IAction;\n\treadonly getCompositeBadgeAction: (compositeId: string) => IAction;\n\treadonly getOnCompositeClickAction: (compositeId: string) => IAction;\n\treadonly fillExtraContextMenuActions: (actions: IAction[], e?: MouseEvent | GestureEvent) => void;\n\treadonly getContextMenuActionsForComposite: (compositeId: string) => IAction[];\n\n\treadonly openComposite: (compositeId: string, preserveFocus?: boolean) => Promise<IComposite | null>;\n\treadonly getDefaultCompositeId: () => string | undefined;\n}\n\nclass CompositeBarDndCallbacks implements ICompositeDragAndDropObserverCallbacks {\n\n\tprivate insertDropBefore: Before2D | undefined = undefined;\n\n\tconstructor(\n\t\tprivate readonly compositeBarContainer: HTMLElement,\n\t\tprivate readonly actionBarContainer: HTMLElement,\n\t\tprivate readonly compositeBarModel: CompositeBarModel,\n\t\tprivate readonly dndHandler: ICompositeDragAndDrop,\n\t\tprivate readonly orientation: ActionsOrientation,\n\t) { }\n\n\tonDragOver(e: IDraggedCompositeData) {\n\n\t\t// don't add feedback if this is over the composite bar actions or there are no actions\n\t\tconst visibleItems = this.compositeBarModel.visibleItems;\n\t\tif (!visibleItems.length || (e.eventData.target && isAncestor(e.eventData.target as HTMLElement, this.actionBarContainer))) {\n\t\t\tthis.insertDropBefore = this.updateFromDragging(this.compositeBarContainer, false, false, true);\n\t\t\treturn;\n\t\t}\n\n\t\tconst insertAtFront = this.insertAtFront(this.actionBarContainer, e.eventData);\n\t\tconst target = insertAtFront ? visibleItems[0] : visibleItems[visibleItems.length - 1];\n\t\tconst validDropTarget = this.dndHandler.onDragOver(e.dragAndDropData, target.id, e.eventData);\n\t\ttoggleDropEffect(e.eventData.dataTransfer, 'move', validDropTarget);\n\t\tthis.insertDropBefore = this.updateFromDragging(this.compositeBarContainer, validDropTarget, insertAtFront, true);\n\t}\n\n\tonDragLeave(e: IDraggedCompositeData) {\n\t\tthis.insertDropBefore = this.updateFromDragging(this.compositeBarContainer, false, false, false);\n\t}\n\n\tonDragEnd(e: IDraggedCompositeData) {\n\t\tthis.insertDropBefore = this.updateFromDragging(this.compositeBarContainer, false, false, false);\n\t}\n\n\tonDrop(e: IDraggedCompositeData) {\n\t\tconst visibleItems = this.compositeBarModel.visibleItems;\n\t\tlet targetId = undefined;\n\t\tif (visibleItems.length) {\n\t\t\ttargetId = this.insertAtFront(this.actionBarContainer, e.eventData) ? visibleItems[0].id : visibleItems[visibleItems.length - 1].id;\n\t\t}\n\t\tthis.dndHandler.drop(e.dragAndDropData, targetId, e.eventData, this.insertDropBefore);\n\t\tthis.insertDropBefore = this.updateFromDragging(this.compositeBarContainer, false, false, false);\n\t}\n\n\tprivate insertAtFront(element: HTMLElement, event: DragEvent): boolean {\n\t\tconst rect = element.getBoundingClientRect();\n\t\tconst posX = event.clientX;\n\t\tconst posY = event.clientY;\n\n\t\tswitch (this.orientation) {\n\t\t\tcase ActionsOrientation.HORIZONTAL:\n\t\t\t\treturn posX < rect.left;\n\t\t\tcase ActionsOrientation.VERTICAL:\n\t\t\t\treturn posY < rect.top;\n\t\t}\n\t}\n\n\tprivate updateFromDragging(element: HTMLElement, showFeedback: boolean, front: boolean, isDragging: boolean): Before2D | undefined {\n\t\telement.classList.toggle('dragged-over', isDragging);\n\t\telement.classList.toggle('dragged-over-head', showFeedback && front);\n\t\telement.classList.toggle('dragged-over-tail', showFeedback && !front);\n\n\t\tif (!showFeedback) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn { verticallyBefore: front, horizontallyBefore: front };\n\t}\n}\n\nexport class CompositeBar extends Widget implements ICompositeBar {\n\n\tprivate readonly _onDidChange = this._register(new Emitter<void>());\n\treadonly onDidChange = this._onDidChange.event;\n\n\tprivate dimension: Dimension | undefined;\n\n\tprivate compositeSwitcherBar: ActionBar | undefined;\n\tprivate compositeOverflowAction: CompositeOverflowActivityAction | undefined;\n\tprivate compositeOverflowActionViewItem: CompositeOverflowActivityActionViewItem | undefined;\n\n\tprivate readonly model: CompositeBarModel;\n\tprivate readonly visibleComposites: string[];\n\tprivate readonly compositeSizeInBar: Map<string, number>;\n\n\tconstructor(\n\t\titems: ICompositeBarItem[],\n\t\tprivate readonly options: ICompositeBarOptions,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IViewDescriptorService private readonly viewDescriptorService: IViewDescriptorService,\n\t) {\n\t\tsuper();\n\n\t\tthis.model = new CompositeBarModel(items, options);\n\t\tthis.visibleComposites = [];\n\t\tthis.compositeSizeInBar = new Map<string, number>();\n\t\tthis.computeSizes(this.model.visibleItems);\n\t}\n\n\tgetCompositeBarItems(): ICompositeBarItem[] {\n\t\treturn [...this.model.items];\n\t}\n\n\tsetCompositeBarItems(items: ICompositeBarItem[]): void {\n\t\tthis.model.setItems(items);\n\t\tthis.updateCompositeSwitcher();\n\t}\n\n\tgetPinnedComposites(): ICompositeBarItem[] {\n\t\treturn this.model.pinnedItems;\n\t}\n\n\tgetVisibleComposites(): ICompositeBarItem[] {\n\t\treturn this.model.visibleItems;\n\t}\n\n\tcreate(parent: HTMLElement): HTMLElement {\n\t\tconst actionBarDiv = parent.appendChild($('.composite-bar'));\n\t\tthis.compositeSwitcherBar = this._register(new ActionBar(actionBarDiv, {\n\t\t\tactionViewItemProvider: (action, options) => {\n\t\t\t\tif (action instanceof CompositeOverflowActivityAction) {\n\t\t\t\t\treturn this.compositeOverflowActionViewItem;\n\t\t\t\t}\n\t\t\t\tconst item = this.model.findItem(action.id);\n\t\t\t\treturn item && this.instantiationService.createInstance(\n\t\t\t\t\tCompositeActionViewItem,\n\t\t\t\t\t{ ...options, draggable: true, colors: this.options.colors, icon: this.options.icon, hoverOptions: this.options.activityHoverOptions, compact: this.options.compact },\n\t\t\t\t\taction as CompositeBarAction,\n\t\t\t\t\titem.pinnedAction,\n\t\t\t\t\titem.toggleBadgeAction,\n\t\t\t\t\tcompositeId => this.options.getContextMenuActionsForComposite(compositeId),\n\t\t\t\t\t() => this.getContextMenuActions(),\n\t\t\t\t\tthis.options.dndHandler,\n\t\t\t\t\tthis\n\t\t\t\t);\n\t\t\t},\n\t\t\torientation: this.options.orientation,\n\t\t\tariaLabel: localize('activityBarAriaLabel', \"Active View Switcher\"),\n\t\t\tariaRole: 'tablist',\n\t\t\tpreventLoopNavigation: this.options.preventLoopNavigation,\n\t\t\ttriggerKeys: { keyDown: true }\n\t\t}));\n\n\t\t// Contextmenu for composites\n\t\tthis._register(addDisposableListener(parent, EventType.CONTEXT_MENU, e => this.showContextMenu(getWindow(parent), e)));\n\t\tthis._register(Gesture.addTarget(parent));\n\t\tthis._register(addDisposableListener(parent, TouchEventType.Contextmenu, e => this.showContextMenu(getWindow(parent), e)));\n\n\t\t// Register a drop target on the whole bar to prevent forbidden feedback\n\t\tconst dndCallback = new CompositeBarDndCallbacks(parent, actionBarDiv, this.model, this.options.dndHandler, this.options.orientation);\n\t\tthis._register(CompositeDragAndDropObserver.INSTANCE.registerTarget(parent, dndCallback));\n\n\t\treturn actionBarDiv;\n\t}\n\n\tfocus(index?: number): void {\n\t\tthis.compositeSwitcherBar?.focus(index);\n\t}\n\n\trecomputeSizes(): void {\n\t\tthis.computeSizes(this.model.visibleItems);\n\t\tthis.updateCompositeSwitcher();\n\t}\n\n\tlayout(dimension: Dimension): void {\n\t\tthis.dimension = dimension;\n\n\t\tif (dimension.height === 0 || dimension.width === 0) {\n\t\t\t// Do not layout if not visible. Otherwise the size measurment would be computed wrongly\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.compositeSizeInBar.size === 0) {\n\t\t\t// Compute size of each composite by getting the size from the css renderer\n\t\t\t// Size is later used for overflow computation\n\t\t\tthis.computeSizes(this.model.visibleItems);\n\t\t}\n\n\t\tthis.updateCompositeSwitcher();\n\t}\n\n\taddComposite({ id, name, order, requestedIndex }: { id: string; name: string; order?: number; requestedIndex?: number }): void {\n\t\tif (this.model.add(id, name, order, requestedIndex)) {\n\t\t\tthis.computeSizes([this.model.findItem(id)]);\n\t\t\tthis.updateCompositeSwitcher();\n\t\t}\n\t}\n\n\tremoveComposite(id: string): void {\n\n\t\t// If it pinned, unpin it first\n\t\tif (this.isPinned(id)) {\n\t\t\tthis.unpin(id);\n\t\t}\n\n\t\t// Remove from the model\n\t\tif (this.model.remove(id)) {\n\t\t\tthis.updateCompositeSwitcher();\n\t\t}\n\t}\n\n\thideComposite(id: string): void {\n\t\tif (this.model.hide(id)) {\n\t\t\tthis.resetActiveComposite(id);\n\t\t\tthis.updateCompositeSwitcher();\n\t\t}\n\t}\n\n\tactivateComposite(id: string): void {\n\t\tconst previousActiveItem = this.model.activeItem;\n\t\tif (this.model.activate(id)) {\n\t\t\t// Update if current composite is neither visible nor pinned\n\t\t\t// or previous active composite is not pinned\n\t\t\tif (this.visibleComposites.indexOf(id) === - 1 || (!!this.model.activeItem && !this.model.activeItem.pinned) || (previousActiveItem && !previousActiveItem.pinned)) {\n\t\t\t\tthis.updateCompositeSwitcher();\n\t\t\t}\n\t\t}\n\t}\n\n\tdeactivateComposite(id: string): void {\n\t\tconst previousActiveItem = this.model.activeItem;\n\t\tif (this.model.deactivate()) {\n\t\t\tif (previousActiveItem && !previousActiveItem.pinned) {\n\t\t\t\tthis.updateCompositeSwitcher();\n\t\t\t}\n\t\t}\n\t}\n\n\tasync pin(compositeId: string, open?: boolean): Promise<void> {\n\t\tif (this.model.setPinned(compositeId, true)) {\n\t\t\tthis.updateCompositeSwitcher();\n\n\t\t\tif (open) {\n\t\t\t\tawait this.options.openComposite(compositeId);\n\t\t\t\tthis.activateComposite(compositeId); // Activate after opening\n\t\t\t}\n\t\t}\n\t}\n\n\tunpin(compositeId: string): void {\n\t\tif (this.model.setPinned(compositeId, false)) {\n\n\t\t\tthis.updateCompositeSwitcher();\n\n\t\t\tthis.resetActiveComposite(compositeId);\n\t\t}\n\t}\n\n\tareBadgesEnabled(compositeId: string): boolean {\n\t\treturn this.viewDescriptorService.getViewContainerBadgeEnablementState(compositeId);\n\t}\n\n\ttoggleBadgeEnablement(compositeId: string): void {\n\t\tthis.viewDescriptorService.setViewContainerBadgeEnablementState(compositeId, !this.areBadgesEnabled(compositeId));\n\t\tthis.updateCompositeSwitcher();\n\t\tconst item = this.model.findItem(compositeId);\n\t\tif (item) {\n\t\t\t// TODO @lramos15 how do we tell the activity to re-render the badge? This triggers an onDidChange but isn't the right way to do it.\n\t\t\t// I could add another specific function like `activity.updateBadgeEnablement` would then the activity store the sate?\n\t\t\titem.activityAction.activity = item.activityAction.activity;\n\t\t}\n\t}\n\n\tprivate resetActiveComposite(compositeId: string) {\n\t\tconst defaultCompositeId = this.options.getDefaultCompositeId();\n\n\t\t// Case: composite is not the active one or the active one is a different one\n\t\t// Solv: we do nothing\n\t\tif (!this.model.activeItem || this.model.activeItem.id !== compositeId) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Deactivate itself\n\t\tthis.deactivateComposite(compositeId);\n\n\t\t// Case: composite is not the default composite and default composite is still showing\n\t\t// Solv: we open the default composite\n\t\tif (defaultCompositeId && defaultCompositeId !== compositeId && this.isPinned(defaultCompositeId)) {\n\t\t\tthis.options.openComposite(defaultCompositeId, true);\n\t\t}\n\n\t\t// Case: we closed the default composite\n\t\t// Solv: we open the next visible composite from top\n\t\telse {\n\t\t\tthis.options.openComposite(this.visibleComposites.filter(cid => cid !== compositeId)[0]);\n\t\t}\n\t}\n\n\tisPinned(compositeId: string): boolean {\n\t\tconst item = this.model.findItem(compositeId);\n\t\treturn item?.pinned;\n\t}\n\n\tmove(compositeId: string, toCompositeId: string, before?: boolean): void {\n\t\tif (before !== undefined) {\n\t\t\tconst fromIndex = this.model.items.findIndex(c => c.id === compositeId);\n\t\t\tlet toIndex = this.model.items.findIndex(c => c.id === toCompositeId);\n\n\t\t\tif (fromIndex >= 0 && toIndex >= 0) {\n\t\t\t\tif (!before && fromIndex > toIndex) {\n\t\t\t\t\ttoIndex++;\n\t\t\t\t}\n\n\t\t\t\tif (before && fromIndex < toIndex) {\n\t\t\t\t\ttoIndex--;\n\t\t\t\t}\n\n\t\t\t\tif (toIndex < this.model.items.length && toIndex >= 0 && toIndex !== fromIndex) {\n\t\t\t\t\tif (this.model.move(this.model.items[fromIndex].id, this.model.items[toIndex].id)) {\n\t\t\t\t\t\t// timeout helps to prevent artifacts from showing up\n\t\t\t\t\t\tsetTimeout(() => this.updateCompositeSwitcher(), 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.model.move(compositeId, toCompositeId)) {\n\t\t\t\t// timeout helps to prevent artifacts from showing up\n\t\t\t\tsetTimeout(() => this.updateCompositeSwitcher(), 0);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetAction(compositeId: string): CompositeBarAction {\n\t\tconst item = this.model.findItem(compositeId);\n\n\t\treturn item?.activityAction;\n\t}\n\n\tprivate computeSizes(items: ICompositeBarModelItem[]): void {\n\t\tconst size = this.options.compositeSize;\n\t\tif (size) {\n\t\t\titems.forEach(composite => this.compositeSizeInBar.set(composite.id, size));\n\t\t} else {\n\t\t\tconst compositeSwitcherBar = this.compositeSwitcherBar;\n\t\t\tif (compositeSwitcherBar && this.dimension && this.dimension.height !== 0 && this.dimension.width !== 0) {\n\n\t\t\t\t// Compute sizes only if visible. Otherwise the size measurment would be computed wrongly.\n\t\t\t\tconst currentItemsLength = compositeSwitcherBar.viewItems.length;\n\t\t\t\tcompositeSwitcherBar.push(items.map(composite => composite.activityAction));\n\t\t\t\titems.map((composite, index) => this.compositeSizeInBar.set(composite.id, this.options.orientation === ActionsOrientation.VERTICAL\n\t\t\t\t\t? compositeSwitcherBar.getHeight(currentItemsLength + index)\n\t\t\t\t\t: compositeSwitcherBar.getWidth(currentItemsLength + index)\n\t\t\t\t));\n\t\t\t\titems.forEach(() => compositeSwitcherBar.pull(compositeSwitcherBar.viewItems.length - 1));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateCompositeSwitcher(): void {\n\t\tconst compositeSwitcherBar = this.compositeSwitcherBar;\n\t\tif (!compositeSwitcherBar || !this.dimension) {\n\t\t\treturn; // We have not been rendered yet so there is nothing to update.\n\t\t}\n\n\t\tlet compositesToShow = this.model.visibleItems.filter(item =>\n\t\t\titem.pinned\n\t\t\t|| (this.model.activeItem && this.model.activeItem.id === item.id) /* Show the active composite even if it is not pinned */\n\t\t).map(item => item.id);\n\n\t\t// Ensure we are not showing more composites than we have height for\n\t\tlet maxVisible = compositesToShow.length;\n\t\tconst totalComposites = compositesToShow.length;\n\t\tlet size = 0;\n\t\tconst limit = this.options.orientation === ActionsOrientation.VERTICAL ? this.dimension.height : this.dimension.width;\n\n\t\t// Add composites while they fit\n\t\tfor (let i = 0; i < compositesToShow.length; i++) {\n\t\t\tconst compositeSize = this.compositeSizeInBar.get(compositesToShow[i])!;\n\t\t\t// Adding this composite will overflow available size, so don't\n\t\t\tif (size + compositeSize > limit) {\n\t\t\t\tmaxVisible = i;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tsize += compositeSize;\n\t\t}\n\n\t\t// Remove the tail of composites that did not fit\n\t\tif (totalComposites > maxVisible) {\n\t\t\tcompositesToShow = compositesToShow.slice(0, maxVisible);\n\t\t}\n\n\t\t// We always try show the active composite, so re-add it if it was sliced out\n\t\tif (this.model.activeItem && compositesToShow.every(compositeId => !!this.model.activeItem && compositeId !== this.model.activeItem.id)) {\n\t\t\tsize += this.compositeSizeInBar.get(this.model.activeItem.id)!;\n\t\t\tcompositesToShow.push(this.model.activeItem.id);\n\t\t}\n\n\t\t// The active composite might have pushed us over the limit\n\t\t// Keep popping the composite before the active one until it fits\n\t\t// If even the active one doesn't fit, we will resort to overflow\n\t\twhile (size > limit && compositesToShow.length) {\n\t\t\tconst removedComposite = compositesToShow.length > 1 ? compositesToShow.splice(compositesToShow.length - 2, 1)[0] : compositesToShow.pop();\n\t\t\tsize -= this.compositeSizeInBar.get(removedComposite!)!;\n\t\t}\n\n\t\t// We are overflowing, add the overflow size\n\t\tif (totalComposites > compositesToShow.length) {\n\t\t\tsize += this.options.overflowActionSize;\n\t\t}\n\n\t\t// Check if we need to make extra room for the overflow action\n\t\twhile (size > limit && compositesToShow.length) {\n\t\t\tconst removedComposite = compositesToShow.length > 1 && compositesToShow[compositesToShow.length - 1] === this.model.activeItem?.id ?\n\t\t\t\tcompositesToShow.splice(compositesToShow.length - 2, 1)[0] : compositesToShow.pop();\n\t\t\tsize -= this.compositeSizeInBar.get(removedComposite!)!;\n\t\t}\n\n\t\t// Remove the overflow action if there are no overflows\n\t\tif (totalComposites === compositesToShow.length && this.compositeOverflowAction) {\n\t\t\tcompositeSwitcherBar.pull(compositeSwitcherBar.length() - 1);\n\n\t\t\tthis.compositeOverflowAction.dispose();\n\t\t\tthis.compositeOverflowAction = undefined;\n\n\t\t\tthis.compositeOverflowActionViewItem?.dispose();\n\t\t\tthis.compositeOverflowActionViewItem = undefined;\n\t\t}\n\n\t\t// Pull out composites that overflow or got hidden\n\t\tconst compositesToRemove: number[] = [];\n\t\tthis.visibleComposites.forEach((compositeId, index) => {\n\t\t\tif (!compositesToShow.includes(compositeId)) {\n\t\t\t\tcompositesToRemove.push(index);\n\t\t\t}\n\t\t});\n\t\tcompositesToRemove.reverse().forEach(index => {\n\t\t\tcompositeSwitcherBar.pull(index);\n\t\t\tthis.visibleComposites.splice(index, 1);\n\t\t});\n\n\t\t// Update the positions of the composites\n\t\tcompositesToShow.forEach((compositeId, newIndex) => {\n\t\t\tconst currentIndex = this.visibleComposites.indexOf(compositeId);\n\t\t\tif (newIndex !== currentIndex) {\n\t\t\t\tif (currentIndex !== -1) {\n\t\t\t\t\tcompositeSwitcherBar.pull(currentIndex);\n\t\t\t\t\tthis.visibleComposites.splice(currentIndex, 1);\n\t\t\t\t}\n\n\t\t\t\tcompositeSwitcherBar.push(this.model.findItem(compositeId).activityAction, { label: true, icon: this.options.icon, index: newIndex });\n\t\t\t\tthis.visibleComposites.splice(newIndex, 0, compositeId);\n\t\t\t}\n\t\t});\n\n\t\t// Add overflow action as needed\n\t\tif (totalComposites > compositesToShow.length && !this.compositeOverflowAction) {\n\t\t\tthis.compositeOverflowAction = this._register(this.instantiationService.createInstance(CompositeOverflowActivityAction, () => {\n\t\t\t\tthis.compositeOverflowActionViewItem?.showMenu();\n\t\t\t}));\n\t\t\tthis.compositeOverflowActionViewItem = this._register(this.instantiationService.createInstance(\n\t\t\t\tCompositeOverflowActivityActionViewItem,\n\t\t\t\tthis.compositeOverflowAction,\n\t\t\t\t() => this.getOverflowingComposites(),\n\t\t\t\t() => this.model.activeItem ? this.model.activeItem.id : undefined,\n\t\t\t\tcompositeId => {\n\t\t\t\t\tconst item = this.model.findItem(compositeId);\n\t\t\t\t\treturn item?.activity[0]?.badge;\n\t\t\t\t},\n\t\t\t\tthis.options.getOnCompositeClickAction,\n\t\t\t\tthis.options.colors,\n\t\t\t\tthis.options.activityHoverOptions\n\t\t\t));\n\n\t\t\tcompositeSwitcherBar.push(this.compositeOverflowAction, { label: false, icon: true });\n\t\t}\n\n\t\tthis._onDidChange.fire();\n\t}\n\n\tprivate getOverflowingComposites(): { id: string; name?: string }[] {\n\t\tlet overflowingIds = this.model.visibleItems.filter(item => item.pinned).map(item => item.id);\n\n\t\t// Show the active composite even if it is not pinned\n\t\tif (this.model.activeItem && !this.model.activeItem.pinned) {\n\t\t\toverflowingIds.push(this.model.activeItem.id);\n\t\t}\n\n\t\toverflowingIds = overflowingIds.filter(compositeId => !this.visibleComposites.includes(compositeId));\n\t\treturn this.model.visibleItems.filter(c => overflowingIds.includes(c.id)).map(item => { return { id: item.id, name: this.getAction(item.id)?.label || item.name }; });\n\t}\n\n\tprivate showContextMenu(targetWindow: Window, e: MouseEvent | GestureEvent): void {\n\t\tEventHelper.stop(e, true);\n\n\t\tconst event = new StandardMouseEvent(targetWindow, e);\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => event,\n\t\t\tgetActions: () => this.getContextMenuActions(e)\n\t\t});\n\t}\n\n\tgetContextMenuActions(e?: MouseEvent | GestureEvent): IAction[] {\n\t\tconst actions: IAction[] = this.model.visibleItems\n\t\t\t.map(({ id, name, activityAction }) => (toAction({\n\t\t\t\tid,\n\t\t\t\tlabel: this.getAction(id).label || name || id,\n\t\t\t\tchecked: this.isPinned(id),\n\t\t\t\tenabled: activityAction.enabled,\n\t\t\t\trun: () => {\n\t\t\t\t\tif (this.isPinned(id)) {\n\t\t\t\t\t\tthis.unpin(id);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.pin(id, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})));\n\n\t\tthis.options.fillExtraContextMenuActions(actions, e);\n\n\t\treturn actions;\n\t}\n}\n\ninterface ICompositeBarModelItem extends ICompositeBarItem {\n\treadonly activityAction: CompositeBarAction;\n\treadonly pinnedAction: IAction;\n\treadonly toggleBadgeAction: IAction;\n\treadonly activity: IActivity[];\n}\n\nclass CompositeBarModel {\n\n\tprivate _items: ICompositeBarModelItem[] = [];\n\tget items(): ICompositeBarModelItem[] { return this._items; }\n\n\tprivate readonly options: ICompositeBarOptions;\n\n\tactiveItem?: ICompositeBarModelItem;\n\n\tconstructor(\n\t\titems: ICompositeBarItem[],\n\t\toptions: ICompositeBarOptions\n\t) {\n\t\tthis.options = options;\n\t\tthis.setItems(items);\n\t}\n\n\tsetItems(items: ICompositeBarItem[]): void {\n\t\tthis._items = [];\n\t\tthis._items = items\n\t\t\t.map(i => this.createCompositeBarItem(i.id, i.name, i.order, i.pinned, i.visible));\n\t}\n\n\tget visibleItems(): ICompositeBarModelItem[] {\n\t\treturn this.items.filter(item => item.visible);\n\t}\n\n\tget pinnedItems(): ICompositeBarModelItem[] {\n\t\treturn this.items.filter(item => item.visible && item.pinned);\n\t}\n\n\tprivate createCompositeBarItem(id: string, name: string | undefined, order: number | undefined, pinned: boolean, visible: boolean): ICompositeBarModelItem {\n\t\tconst options = this.options;\n\t\treturn {\n\t\t\tid, name, pinned, order, visible,\n\t\t\tactivity: [],\n\t\t\tget activityAction() {\n\t\t\t\treturn options.getActivityAction(id);\n\t\t\t},\n\t\t\tget pinnedAction() {\n\t\t\t\treturn options.getCompositePinnedAction(id);\n\t\t\t},\n\t\t\tget toggleBadgeAction() {\n\t\t\t\treturn options.getCompositeBadgeAction(id);\n\t\t\t}\n\t\t};\n\t}\n\n\tadd(id: string, name: string, order: number | undefined, requestedIndex: number | undefined): boolean {\n\t\tconst item = this.findItem(id);\n\t\tif (item) {\n\t\t\tlet changed = false;\n\t\t\titem.name = name;\n\t\t\tif (!isUndefinedOrNull(order)) {\n\t\t\t\tchanged = item.order !== order;\n\t\t\t\titem.order = order;\n\t\t\t}\n\t\t\tif (!item.visible) {\n\t\t\t\titem.visible = true;\n\t\t\t\tchanged = true;\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t} else {\n\t\t\tconst item = this.createCompositeBarItem(id, name, order, true, true);\n\t\t\tif (!isUndefinedOrNull(requestedIndex)) {\n\t\t\t\tlet index = 0;\n\t\t\t\tlet rIndex = requestedIndex;\n\t\t\t\twhile (rIndex > 0 && index < this.items.length) {\n\t\t\t\t\tif (this.items[index++].visible) {\n\t\t\t\t\t\trIndex--;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.items.splice(index, 0, item);\n\t\t\t} else if (isUndefinedOrNull(order)) {\n\t\t\t\tthis.items.push(item);\n\t\t\t} else {\n\t\t\t\tlet index = 0;\n\t\t\t\twhile (index < this.items.length && typeof this.items[index].order === 'number' && this.items[index].order! < order) {\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\t\t\tthis.items.splice(index, 0, item);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tremove(id: string): boolean {\n\t\tfor (let index = 0; index < this.items.length; index++) {\n\t\t\tif (this.items[index].id === id) {\n\t\t\t\tthis.items.splice(index, 1);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\thide(id: string): boolean {\n\t\tfor (const item of this.items) {\n\t\t\tif (item.id === id) {\n\t\t\t\tif (item.visible) {\n\t\t\t\t\titem.visible = false;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tmove(compositeId: string, toCompositeId: string): boolean {\n\n\t\tconst fromIndex = this.findIndex(compositeId);\n\t\tconst toIndex = this.findIndex(toCompositeId);\n\n\t\t// Make sure both items are known to the model\n\t\tif (fromIndex === -1 || toIndex === -1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst sourceItem = this.items.splice(fromIndex, 1)[0];\n\t\tthis.items.splice(toIndex, 0, sourceItem);\n\n\t\t// Make sure a moved composite gets pinned\n\t\tsourceItem.pinned = true;\n\n\t\treturn true;\n\t}\n\n\tsetPinned(id: string, pinned: boolean): boolean {\n\t\tfor (const item of this.items) {\n\t\t\tif (item.id === id) {\n\t\t\t\tif (item.pinned !== pinned) {\n\t\t\t\t\titem.pinned = pinned;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tactivate(id: string): boolean {\n\t\tif (!this.activeItem || this.activeItem.id !== id) {\n\t\t\tif (this.activeItem) {\n\t\t\t\tthis.deactivate();\n\t\t\t}\n\t\t\tfor (const item of this.items) {\n\t\t\t\tif (item.id === id) {\n\t\t\t\t\tthis.activeItem = item;\n\t\t\t\t\tthis.activeItem.activityAction.activate();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tdeactivate(): boolean {\n\t\tif (this.activeItem) {\n\t\t\tthis.activeItem.activityAction.deactivate();\n\t\t\tthis.activeItem = undefined;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfindItem(id: string): ICompositeBarModelItem {\n\t\treturn this.items.filter(item => item.id === id)[0];\n\t}\n\n\tprivate findIndex(id: string): number {\n\t\tfor (let index = 0; index < this.items.length; index++) {\n\t\t\tif (this.items[index].id === id) {\n\t\t\t\treturn index;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["item"]
}
