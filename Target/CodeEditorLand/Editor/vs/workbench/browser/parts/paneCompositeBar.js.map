{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/paneCompositeBar.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../nls.js';\nimport { ActionsOrientation } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { IActivityService } from '../../services/activity/common/activity.js';\nimport { IWorkbenchLayoutService, Parts } from '../../services/layout/browser/layoutService.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { IDisposable, DisposableStore, Disposable, DisposableMap } from '../../../base/common/lifecycle.js';\nimport { IColorTheme } from '../../../platform/theme/common/themeService.js';\nimport { CompositeBar, ICompositeBarItem, CompositeDragAndDrop } from './compositeBar.js';\nimport { Dimension, createCSSRule, asCSSUrl, isMouseEvent } from '../../../base/browser/dom.js';\nimport { IStorageService, StorageScope, StorageTarget, IProfileStorageValueChangeEvent } from '../../../platform/storage/common/storage.js';\nimport { IExtensionService } from '../../services/extensions/common/extensions.js';\nimport { URI, UriComponents } from '../../../base/common/uri.js';\nimport { ToggleCompositePinnedAction, ICompositeBarColors, IActivityHoverOptions, ToggleCompositeBadgeAction, CompositeBarAction, ICompositeBar, ICompositeBarActionItem } from './compositeBarActions.js';\nimport { IViewDescriptorService, ViewContainer, IViewContainerModel, ViewContainerLocation } from '../../common/views.js';\nimport { IContextKeyService, ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\nimport { isString } from '../../../base/common/types.js';\nimport { IWorkbenchEnvironmentService } from '../../services/environment/common/environmentService.js';\nimport { isNative } from '../../../base/common/platform.js';\nimport { Before2D, ICompositeDragAndDrop } from '../dnd.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { IAction, toAction } from '../../../base/common/actions.js';\nimport { StringSHA1 } from '../../../base/common/hash.js';\nimport { GestureEvent } from '../../../base/browser/touch.js';\nimport { IPaneCompositePart } from './paneCompositePart.js';\nimport { ITelemetryService } from '../../../platform/telemetry/common/telemetry.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { IViewsService } from '../../services/views/common/viewsService.js';\n\ninterface IPlaceholderViewContainer {\n\treadonly id: string;\n\treadonly name?: string;\n\treadonly iconUrl?: UriComponents;\n\treadonly themeIcon?: ThemeIcon;\n\treadonly isBuiltin?: boolean;\n\treadonly views?: { when?: string }[];\n\t// TODO @sandy081: Remove this after a while. Migrated to visible in IViewContainerWorkspaceState\n\treadonly visible?: boolean;\n}\n\ninterface IPinnedViewContainer {\n\treadonly id: string;\n\treadonly pinned: boolean;\n\treadonly order?: number;\n\t// TODO @sandy081: Remove this after a while. Migrated to visible in IViewContainerWorkspaceState\n\treadonly visible: boolean;\n}\n\ninterface IViewContainerWorkspaceState {\n\treadonly id: string;\n\treadonly visible: boolean;\n}\n\ninterface ICachedViewContainer {\n\treadonly id: string;\n\tname?: string;\n\ticon?: URI | ThemeIcon;\n\treadonly pinned: boolean;\n\treadonly order?: number;\n\tvisible: boolean;\n\tisBuiltin?: boolean;\n\tviews?: { when?: string }[];\n}\n\nexport interface IPaneCompositeBarOptions {\n\treadonly partContainerClass: string;\n\treadonly pinnedViewContainersKey: string;\n\treadonly placeholderViewContainersKey: string;\n\treadonly viewContainersWorkspaceStateKey: string;\n\treadonly icon: boolean;\n\treadonly compact?: boolean;\n\treadonly iconSize: number;\n\treadonly recomputeSizes: boolean;\n\treadonly orientation: ActionsOrientation;\n\treadonly compositeSize: number;\n\treadonly overflowActionSize: number;\n\treadonly preventLoopNavigation?: boolean;\n\treadonly activityHoverOptions: IActivityHoverOptions;\n\treadonly fillExtraContextMenuActions: (actions: IAction[], e?: MouseEvent | GestureEvent) => void;\n\treadonly colors: (theme: IColorTheme) => ICompositeBarColors;\n}\n\nexport class PaneCompositeBar extends Disposable {\n\n\tprivate readonly viewContainerDisposables = this._register(new DisposableMap<string, IDisposable>());\n\tprivate readonly location: ViewContainerLocation;\n\n\tprivate readonly compositeBar: CompositeBar;\n\treadonly dndHandler: ICompositeDragAndDrop;\n\tprivate readonly compositeActions = new Map<string, { activityAction: ViewContainerActivityAction; pinnedAction: ToggleCompositePinnedAction; badgeAction: ToggleCompositeBadgeAction }>();\n\n\tprivate hasExtensionsRegistered: boolean = false;\n\n\tconstructor(\n\t\tprotected readonly options: IPaneCompositeBarOptions,\n\t\tprivate readonly part: Parts,\n\t\tprivate readonly paneCompositePart: IPaneCompositePart,\n\t\t@IInstantiationService protected readonly instantiationService: IInstantiationService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IViewDescriptorService private readonly viewDescriptorService: IViewDescriptorService,\n\t\t@IViewsService private readonly viewService: IViewsService,\n\t\t@IContextKeyService protected readonly contextKeyService: IContextKeyService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IWorkbenchLayoutService protected readonly layoutService: IWorkbenchLayoutService,\n\t) {\n\t\tsuper();\n\t\tthis.location = paneCompositePart.partId === Parts.PANEL_PART\n\t\t\t? ViewContainerLocation.Panel : paneCompositePart.partId === Parts.AUXILIARYBAR_PART\n\t\t\t\t? ViewContainerLocation.AuxiliaryBar : ViewContainerLocation.Sidebar;\n\n\t\tthis.dndHandler = new CompositeDragAndDrop(this.viewDescriptorService, this.location, this.options.orientation,\n\t\t\tasync (id: string, focus?: boolean) => { return await this.paneCompositePart.openPaneComposite(id, focus) ?? null; },\n\t\t\t(from: string, to: string, before?: Before2D) => this.compositeBar.move(from, to, this.options.orientation === ActionsOrientation.VERTICAL ? before?.verticallyBefore : before?.horizontallyBefore),\n\t\t\t() => this.compositeBar.getCompositeBarItems(),\n\t\t);\n\n\t\tconst cachedItems = this.cachedViewContainers\n\t\t\t.map(container => ({\n\t\t\t\tid: container.id,\n\t\t\t\tname: container.name,\n\t\t\t\tvisible: !this.shouldBeHidden(container.id, container),\n\t\t\t\torder: container.order,\n\t\t\t\tpinned: container.pinned,\n\t\t\t}));\n\t\tthis.compositeBar = this.createCompositeBar(cachedItems);\n\t\tthis.onDidRegisterViewContainers(this.getViewContainers());\n\t\tthis.registerListeners();\n\t}\n\n\tprivate createCompositeBar(cachedItems: ICompositeBarItem[]) {\n\t\treturn this._register(this.instantiationService.createInstance(CompositeBar, cachedItems, {\n\t\t\ticon: this.options.icon,\n\t\t\tcompact: this.options.compact,\n\t\t\torientation: this.options.orientation,\n\t\t\tactivityHoverOptions: this.options.activityHoverOptions,\n\t\t\tpreventLoopNavigation: this.options.preventLoopNavigation,\n\t\t\topenComposite: async (compositeId, preserveFocus) => {\n\t\t\t\treturn (await this.paneCompositePart.openPaneComposite(compositeId, !preserveFocus)) ?? null;\n\t\t\t},\n\t\t\tgetActivityAction: compositeId => this.getCompositeActions(compositeId).activityAction,\n\t\t\tgetCompositePinnedAction: compositeId => this.getCompositeActions(compositeId).pinnedAction,\n\t\t\tgetCompositeBadgeAction: compositeId => this.getCompositeActions(compositeId).badgeAction,\n\t\t\tgetOnCompositeClickAction: compositeId => this.getCompositeActions(compositeId).activityAction,\n\t\t\tfillExtraContextMenuActions: (actions, e) => this.options.fillExtraContextMenuActions(actions, e),\n\t\t\tgetContextMenuActionsForComposite: compositeId => this.getContextMenuActionsForComposite(compositeId),\n\t\t\tgetDefaultCompositeId: () => this.viewDescriptorService.getDefaultViewContainer(this.location)?.id,\n\t\t\tdndHandler: this.dndHandler,\n\t\t\tcompositeSize: this.options.compositeSize,\n\t\t\toverflowActionSize: this.options.overflowActionSize,\n\t\t\tcolors: theme => this.options.colors(theme),\n\t\t}));\n\t}\n\n\tprivate getContextMenuActionsForComposite(compositeId: string): IAction[] {\n\t\tconst actions: IAction[] = [];\n\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerById(compositeId)!;\n\t\tconst defaultLocation = this.viewDescriptorService.getDefaultViewContainerLocation(viewContainer)!;\n\t\tif (defaultLocation !== this.viewDescriptorService.getViewContainerLocation(viewContainer)) {\n\t\t\tactions.push(toAction({ id: 'resetLocationAction', label: localize('resetLocation', \"Reset Location\"), run: () => this.viewDescriptorService.moveViewContainerToLocation(viewContainer, defaultLocation, undefined, 'resetLocationAction') }));\n\t\t} else {\n\t\t\tconst viewContainerModel = this.viewDescriptorService.getViewContainerModel(viewContainer);\n\t\t\tif (viewContainerModel.allViewDescriptors.length === 1) {\n\t\t\t\tconst viewToReset = viewContainerModel.allViewDescriptors[0];\n\t\t\t\tconst defaultContainer = this.viewDescriptorService.getDefaultContainerById(viewToReset.id)!;\n\t\t\t\tif (defaultContainer !== viewContainer) {\n\t\t\t\t\tactions.push(toAction({ id: 'resetLocationAction', label: localize('resetLocation', \"Reset Location\"), run: () => this.viewDescriptorService.moveViewsToContainer([viewToReset], defaultContainer, undefined, 'resetLocationAction') }));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn actions;\n\t}\n\n\tprivate registerListeners(): void {\n\t\t// View Container Changes\n\t\tthis._register(this.viewDescriptorService.onDidChangeViewContainers(({ added, removed }) => this.onDidChangeViewContainers(added, removed)));\n\t\tthis._register(this.viewDescriptorService.onDidChangeContainerLocation(({ viewContainer, from, to }) => this.onDidChangeViewContainerLocation(viewContainer, from, to)));\n\n\t\t// View Container Visibility Changes\n\t\tthis._register(this.paneCompositePart.onDidPaneCompositeOpen(e => this.onDidChangeViewContainerVisibility(e.getId(), true)));\n\t\tthis._register(this.paneCompositePart.onDidPaneCompositeClose(e => this.onDidChangeViewContainerVisibility(e.getId(), false)));\n\n\t\t// Extension registration\n\t\tthis.extensionService.whenInstalledExtensionsRegistered().then(() => {\n\t\t\tif (this._store.isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.onDidRegisterExtensions();\n\t\t\tthis._register(this.compositeBar.onDidChange(() => this.saveCachedViewContainers()));\n\t\t\tthis._register(this.storageService.onDidChangeValue(StorageScope.PROFILE, this.options.pinnedViewContainersKey, this._store)(e => this.onDidPinnedViewContainersStorageValueChange(e)));\n\t\t});\n\t}\n\n\tprivate onDidChangeViewContainers(added: readonly { container: ViewContainer; location: ViewContainerLocation }[], removed: readonly { container: ViewContainer; location: ViewContainerLocation }[]) {\n\t\tremoved.filter(({ location }) => location === this.location).forEach(({ container }) => this.onDidDeregisterViewContainer(container));\n\t\tthis.onDidRegisterViewContainers(added.filter(({ location }) => location === this.location).map(({ container }) => container));\n\t}\n\n\tprivate onDidChangeViewContainerLocation(container: ViewContainer, from: ViewContainerLocation, to: ViewContainerLocation) {\n\t\tif (from === this.location) {\n\t\t\tthis.onDidDeregisterViewContainer(container);\n\t\t}\n\n\t\tif (to === this.location) {\n\t\t\tthis.onDidRegisterViewContainers([container]);\n\t\t}\n\t}\n\n\tprivate onDidChangeViewContainerVisibility(id: string, visible: boolean) {\n\t\tif (visible) {\n\t\t\t// Activate view container action on opening of a view container\n\t\t\tthis.onDidViewContainerVisible(id);\n\t\t} else {\n\t\t\t// Deactivate view container action on close\n\t\t\tthis.compositeBar.deactivateComposite(id);\n\t\t}\n\t}\n\n\tprivate onDidRegisterExtensions(): void {\n\t\tthis.hasExtensionsRegistered = true;\n\n\t\t// show/hide/remove composites\n\t\tfor (const { id } of this.cachedViewContainers) {\n\t\t\tconst viewContainer = this.getViewContainer(id);\n\t\t\tif (viewContainer) {\n\t\t\t\tthis.showOrHideViewContainer(viewContainer);\n\t\t\t} else {\n\t\t\t\tif (this.viewDescriptorService.isViewContainerRemovedPermanently(id)) {\n\t\t\t\t\tthis.removeComposite(id);\n\t\t\t\t} else {\n\t\t\t\t\tthis.hideComposite(id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.saveCachedViewContainers();\n\t}\n\n\tprivate onDidViewContainerVisible(id: string): void {\n\t\tconst viewContainer = this.getViewContainer(id);\n\t\tif (viewContainer) {\n\n\t\t\t// Update the composite bar by adding\n\t\t\tthis.addComposite(viewContainer);\n\t\t\tthis.compositeBar.activateComposite(viewContainer.id);\n\n\t\t\tif (this.shouldBeHidden(viewContainer)) {\n\t\t\t\tconst viewContainerModel = this.viewDescriptorService.getViewContainerModel(viewContainer);\n\t\t\t\tif (viewContainerModel.activeViewDescriptors.length === 0) {\n\t\t\t\t\t// Update the composite bar by hiding\n\t\t\t\t\tthis.hideComposite(viewContainer.id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tcreate(parent: HTMLElement): HTMLElement {\n\t\treturn this.compositeBar.create(parent);\n\t}\n\n\tprivate getCompositeActions(compositeId: string): { activityAction: ViewContainerActivityAction; pinnedAction: ToggleCompositePinnedAction; badgeAction: ToggleCompositeBadgeAction } {\n\t\tlet compositeActions = this.compositeActions.get(compositeId);\n\t\tif (!compositeActions) {\n\t\t\tconst viewContainer = this.getViewContainer(compositeId);\n\t\t\tif (viewContainer) {\n\t\t\t\tconst viewContainerModel = this.viewDescriptorService.getViewContainerModel(viewContainer);\n\t\t\t\tcompositeActions = {\n\t\t\t\t\tactivityAction: this._register(this.instantiationService.createInstance(ViewContainerActivityAction, this.toCompositeBarActionItemFrom(viewContainerModel), this.part, this.paneCompositePart)),\n\t\t\t\t\tpinnedAction: this._register(new ToggleCompositePinnedAction(this.toCompositeBarActionItemFrom(viewContainerModel), this.compositeBar)),\n\t\t\t\t\tbadgeAction: this._register(new ToggleCompositeBadgeAction(this.toCompositeBarActionItemFrom(viewContainerModel), this.compositeBar))\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tconst cachedComposite = this.cachedViewContainers.filter(c => c.id === compositeId)[0];\n\t\t\t\tcompositeActions = {\n\t\t\t\t\tactivityAction: this._register(this.instantiationService.createInstance(PlaceHolderViewContainerActivityAction, this.toCompositeBarActionItem(compositeId, cachedComposite?.name ?? compositeId, cachedComposite?.icon, undefined), this.part, this.paneCompositePart)),\n\t\t\t\t\tpinnedAction: this._register(new PlaceHolderToggleCompositePinnedAction(compositeId, this.compositeBar)),\n\t\t\t\t\tbadgeAction: this._register(new PlaceHolderToggleCompositeBadgeAction(compositeId, this.compositeBar))\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.compositeActions.set(compositeId, compositeActions);\n\t\t}\n\n\t\treturn compositeActions;\n\t}\n\n\tprivate onDidRegisterViewContainers(viewContainers: readonly ViewContainer[]): void {\n\t\tfor (const viewContainer of viewContainers) {\n\t\t\tthis.addComposite(viewContainer);\n\n\t\t\t// Pin it by default if it is new\n\t\t\tconst cachedViewContainer = this.cachedViewContainers.filter(({ id }) => id === viewContainer.id)[0];\n\t\t\tif (!cachedViewContainer) {\n\t\t\t\tthis.compositeBar.pin(viewContainer.id);\n\t\t\t}\n\n\t\t\t// Active\n\t\t\tconst visibleViewContainer = this.paneCompositePart.getActivePaneComposite();\n\t\t\tif (visibleViewContainer?.getId() === viewContainer.id) {\n\t\t\t\tthis.compositeBar.activateComposite(viewContainer.id);\n\t\t\t}\n\n\t\t\tconst viewContainerModel = this.viewDescriptorService.getViewContainerModel(viewContainer);\n\t\t\tthis.updateCompositeBarActionItem(viewContainer, viewContainerModel);\n\t\t\tthis.showOrHideViewContainer(viewContainer);\n\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tdisposables.add(viewContainerModel.onDidChangeContainerInfo(() => this.updateCompositeBarActionItem(viewContainer, viewContainerModel)));\n\t\t\tdisposables.add(viewContainerModel.onDidChangeActiveViewDescriptors(() => this.showOrHideViewContainer(viewContainer)));\n\n\t\t\tthis.viewContainerDisposables.set(viewContainer.id, disposables);\n\t\t}\n\t}\n\n\tprivate onDidDeregisterViewContainer(viewContainer: ViewContainer): void {\n\t\tthis.viewContainerDisposables.deleteAndDispose(viewContainer.id);\n\t\tthis.removeComposite(viewContainer.id);\n\t}\n\n\tprivate updateCompositeBarActionItem(viewContainer: ViewContainer, viewContainerModel: IViewContainerModel): void {\n\t\tconst compositeBarActionItem = this.toCompositeBarActionItemFrom(viewContainerModel);\n\t\tconst { activityAction, pinnedAction } = this.getCompositeActions(viewContainer.id);\n\t\tactivityAction.updateCompositeBarActionItem(compositeBarActionItem);\n\n\t\tif (pinnedAction instanceof PlaceHolderToggleCompositePinnedAction) {\n\t\t\tpinnedAction.setActivity(compositeBarActionItem);\n\t\t}\n\n\t\tif (this.options.recomputeSizes) {\n\t\t\tthis.compositeBar.recomputeSizes();\n\t\t}\n\n\t\tthis.saveCachedViewContainers();\n\t}\n\n\tprivate toCompositeBarActionItemFrom(viewContainerModel: IViewContainerModel): ICompositeBarActionItem {\n\t\treturn this.toCompositeBarActionItem(viewContainerModel.viewContainer.id, viewContainerModel.title, viewContainerModel.icon, viewContainerModel.keybindingId);\n\t}\n\n\tprivate toCompositeBarActionItem(id: string, name: string, icon: URI | ThemeIcon | undefined, keybindingId: string | undefined): ICompositeBarActionItem {\n\t\tlet classNames: string[] | undefined = undefined;\n\t\tlet iconUrl: URI | undefined = undefined;\n\t\tif (this.options.icon) {\n\t\t\tif (URI.isUri(icon)) {\n\t\t\t\ticonUrl = icon;\n\t\t\t\tconst cssUrl = asCSSUrl(icon);\n\t\t\t\tconst hash = new StringSHA1();\n\t\t\t\thash.update(cssUrl);\n\t\t\t\tconst iconId = `activity-${id.replace(/\\./g, '-')}-${hash.digest()}`;\n\t\t\t\tconst iconClass = `.monaco-workbench .${this.options.partContainerClass} .monaco-action-bar .action-label.${iconId}`;\n\t\t\t\tclassNames = [iconId, 'uri-icon'];\n\t\t\t\tcreateCSSRule(iconClass, `\n\t\t\t\tmask: ${cssUrl} no-repeat 50% 50%;\n\t\t\t\tmask-size: ${this.options.iconSize}px;\n\t\t\t\t-webkit-mask: ${cssUrl} no-repeat 50% 50%;\n\t\t\t\t-webkit-mask-size: ${this.options.iconSize}px;\n\t\t\t\tmask-origin: padding;\n\t\t\t\t-webkit-mask-origin: padding;\n\t\t\t`);\n\t\t\t} else if (ThemeIcon.isThemeIcon(icon)) {\n\t\t\t\tclassNames = ThemeIcon.asClassNameArray(icon);\n\t\t\t}\n\t\t}\n\n\t\treturn { id, name, classNames, iconUrl, keybindingId };\n\t}\n\n\tprivate showOrHideViewContainer(viewContainer: ViewContainer): void {\n\t\tif (this.shouldBeHidden(viewContainer)) {\n\t\t\tthis.hideComposite(viewContainer.id);\n\t\t} else {\n\t\t\tthis.addComposite(viewContainer);\n\t\t}\n\t}\n\n\tprivate shouldBeHidden(viewContainerOrId: string | ViewContainer, cachedViewContainer?: ICachedViewContainer): boolean {\n\t\tconst viewContainer = isString(viewContainerOrId) ? this.getViewContainer(viewContainerOrId) : viewContainerOrId;\n\t\tconst viewContainerId = isString(viewContainerOrId) ? viewContainerOrId : viewContainerOrId.id;\n\n\t\tif (viewContainer) {\n\t\t\tif (viewContainer.hideIfEmpty) {\n\t\t\t\tif (this.viewService.isViewContainerActive(viewContainerId)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Check cache only if extensions are not yet registered and current window is not native (desktop) remote connection window\n\t\tif (!this.hasExtensionsRegistered && !(this.part === Parts.SIDEBAR_PART && this.environmentService.remoteAuthority && isNative)) {\n\t\t\tcachedViewContainer = cachedViewContainer || this.cachedViewContainers.find(({ id }) => id === viewContainerId);\n\n\t\t\t// Show builtin ViewContainer if not registered yet\n\t\t\tif (!viewContainer && cachedViewContainer?.isBuiltin && cachedViewContainer?.visible) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (cachedViewContainer?.views?.length) {\n\t\t\t\treturn cachedViewContainer.views.every(({ when }) => !!when && !this.contextKeyService.contextMatchesRules(ContextKeyExpr.deserialize(when)));\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate addComposite(viewContainer: ViewContainer): void {\n\t\tthis.compositeBar.addComposite({ id: viewContainer.id, name: typeof viewContainer.title === 'string' ? viewContainer.title : viewContainer.title.value, order: viewContainer.order, requestedIndex: viewContainer.requestedIndex });\n\t}\n\n\tprivate hideComposite(compositeId: string): void {\n\t\tthis.compositeBar.hideComposite(compositeId);\n\n\t\tconst compositeActions = this.compositeActions.get(compositeId);\n\t\tif (compositeActions) {\n\t\t\tcompositeActions.activityAction.dispose();\n\t\t\tcompositeActions.pinnedAction.dispose();\n\t\t\tthis.compositeActions.delete(compositeId);\n\t\t}\n\t}\n\n\tprivate removeComposite(compositeId: string): void {\n\t\tthis.compositeBar.removeComposite(compositeId);\n\n\t\tconst compositeActions = this.compositeActions.get(compositeId);\n\t\tif (compositeActions) {\n\t\t\tcompositeActions.activityAction.dispose();\n\t\t\tcompositeActions.pinnedAction.dispose();\n\t\t\tthis.compositeActions.delete(compositeId);\n\t\t}\n\t}\n\n\tgetPinnedPaneCompositeIds(): string[] {\n\t\tconst pinnedCompositeIds = this.compositeBar.getPinnedComposites().map(v => v.id);\n\t\treturn this.getViewContainers()\n\t\t\t.filter(v => this.compositeBar.isPinned(v.id))\n\t\t\t.sort((v1, v2) => pinnedCompositeIds.indexOf(v1.id) - pinnedCompositeIds.indexOf(v2.id))\n\t\t\t.map(v => v.id);\n\t}\n\n\tgetVisiblePaneCompositeIds(): string[] {\n\t\treturn this.compositeBar.getVisibleComposites()\n\t\t\t.filter(v => this.paneCompositePart.getActivePaneComposite()?.getId() === v.id || this.compositeBar.isPinned(v.id))\n\t\t\t.map(v => v.id);\n\t}\n\n\tgetContextMenuActions(): IAction[] {\n\t\treturn this.compositeBar.getContextMenuActions();\n\t}\n\n\tfocus(index?: number): void {\n\t\tthis.compositeBar.focus(index);\n\t}\n\n\tlayout(width: number, height: number): void {\n\t\tthis.compositeBar.layout(new Dimension(width, height));\n\t}\n\n\tprivate getViewContainer(id: string): ViewContainer | undefined {\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerById(id);\n\t\treturn viewContainer && this.viewDescriptorService.getViewContainerLocation(viewContainer) === this.location ? viewContainer : undefined;\n\t}\n\n\tprivate getViewContainers(): readonly ViewContainer[] {\n\t\treturn this.viewDescriptorService.getViewContainersByLocation(this.location);\n\t}\n\n\tprivate onDidPinnedViewContainersStorageValueChange(e: IProfileStorageValueChangeEvent): void {\n\t\tif (this.pinnedViewContainersValue !== this.getStoredPinnedViewContainersValue() /* This checks if current window changed the value or not */) {\n\t\t\tthis._placeholderViewContainersValue = undefined;\n\t\t\tthis._pinnedViewContainersValue = undefined;\n\t\t\tthis._cachedViewContainers = undefined;\n\n\t\t\tconst newCompositeItems: ICompositeBarItem[] = [];\n\t\t\tconst compositeItems = this.compositeBar.getCompositeBarItems();\n\n\t\t\tfor (const cachedViewContainer of this.cachedViewContainers) {\n\t\t\t\tnewCompositeItems.push({\n\t\t\t\t\tid: cachedViewContainer.id,\n\t\t\t\t\tname: cachedViewContainer.name,\n\t\t\t\t\torder: cachedViewContainer.order,\n\t\t\t\t\tpinned: cachedViewContainer.pinned,\n\t\t\t\t\tvisible: cachedViewContainer.visible && !!this.getViewContainer(cachedViewContainer.id),\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfor (const viewContainer of this.getViewContainers()) {\n\t\t\t\t// Add missing view containers\n\t\t\t\tif (!newCompositeItems.some(({ id }) => id === viewContainer.id)) {\n\t\t\t\t\tconst index = compositeItems.findIndex(({ id }) => id === viewContainer.id);\n\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\tconst compositeItem = compositeItems[index];\n\t\t\t\t\t\tnewCompositeItems.splice(index, 0, {\n\t\t\t\t\t\t\tid: viewContainer.id,\n\t\t\t\t\t\t\tname: typeof viewContainer.title === 'string' ? viewContainer.title : viewContainer.title.value,\n\t\t\t\t\t\t\torder: compositeItem.order,\n\t\t\t\t\t\t\tpinned: compositeItem.pinned,\n\t\t\t\t\t\t\tvisible: compositeItem.visible,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewCompositeItems.push({\n\t\t\t\t\t\t\tid: viewContainer.id,\n\t\t\t\t\t\t\tname: typeof viewContainer.title === 'string' ? viewContainer.title : viewContainer.title.value,\n\t\t\t\t\t\t\torder: viewContainer.order,\n\t\t\t\t\t\t\tpinned: true,\n\t\t\t\t\t\t\tvisible: !this.shouldBeHidden(viewContainer),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.compositeBar.setCompositeBarItems(newCompositeItems);\n\t\t}\n\t}\n\n\tprivate saveCachedViewContainers(): void {\n\t\tconst state: ICachedViewContainer[] = [];\n\n\t\tconst compositeItems = this.compositeBar.getCompositeBarItems();\n\t\tfor (const compositeItem of compositeItems) {\n\t\t\tconst viewContainer = this.getViewContainer(compositeItem.id);\n\t\t\tif (viewContainer) {\n\t\t\t\tconst viewContainerModel = this.viewDescriptorService.getViewContainerModel(viewContainer);\n\t\t\t\tconst views: { when: string | undefined }[] = [];\n\t\t\t\tfor (const { when } of viewContainerModel.allViewDescriptors) {\n\t\t\t\t\tviews.push({ when: when ? when.serialize() : undefined });\n\t\t\t\t}\n\t\t\t\tstate.push({\n\t\t\t\t\tid: compositeItem.id,\n\t\t\t\t\tname: viewContainerModel.title,\n\t\t\t\t\ticon: URI.isUri(viewContainerModel.icon) && this.environmentService.remoteAuthority ? undefined : viewContainerModel.icon, // Do not cache uri icons with remote connection\n\t\t\t\t\tviews,\n\t\t\t\t\tpinned: compositeItem.pinned,\n\t\t\t\t\torder: compositeItem.order,\n\t\t\t\t\tvisible: compositeItem.visible,\n\t\t\t\t\tisBuiltin: !viewContainer.extensionId\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tstate.push({ id: compositeItem.id, name: compositeItem.name, pinned: compositeItem.pinned, order: compositeItem.order, visible: false, isBuiltin: false });\n\t\t\t}\n\t\t}\n\n\t\tthis.storeCachedViewContainersState(state);\n\t}\n\n\tprivate _cachedViewContainers: ICachedViewContainer[] | undefined = undefined;\n\tprivate get cachedViewContainers(): ICachedViewContainer[] {\n\t\tif (this._cachedViewContainers === undefined) {\n\t\t\tthis._cachedViewContainers = this.getPinnedViewContainers();\n\t\t\tfor (const placeholderViewContainer of this.getPlaceholderViewContainers()) {\n\t\t\t\tconst cachedViewContainer = this._cachedViewContainers.find(cached => cached.id === placeholderViewContainer.id);\n\t\t\t\tif (cachedViewContainer) {\n\t\t\t\t\tcachedViewContainer.visible = placeholderViewContainer.visible ?? cachedViewContainer.visible;\n\t\t\t\t\tcachedViewContainer.name = placeholderViewContainer.name;\n\t\t\t\t\tcachedViewContainer.icon = placeholderViewContainer.themeIcon ? placeholderViewContainer.themeIcon :\n\t\t\t\t\t\tplaceholderViewContainer.iconUrl ? URI.revive(placeholderViewContainer.iconUrl) : undefined;\n\t\t\t\t\tif (URI.isUri(cachedViewContainer.icon) && this.environmentService.remoteAuthority) {\n\t\t\t\t\t\tcachedViewContainer.icon = undefined; // Do not cache uri icons with remote connection\n\t\t\t\t\t}\n\t\t\t\t\tcachedViewContainer.views = placeholderViewContainer.views;\n\t\t\t\t\tcachedViewContainer.isBuiltin = placeholderViewContainer.isBuiltin;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const viewContainerWorkspaceState of this.getViewContainersWorkspaceState()) {\n\t\t\t\tconst cachedViewContainer = this._cachedViewContainers.find(cached => cached.id === viewContainerWorkspaceState.id);\n\t\t\t\tif (cachedViewContainer) {\n\t\t\t\t\tcachedViewContainer.visible = viewContainerWorkspaceState.visible ?? cachedViewContainer.visible;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._cachedViewContainers;\n\t}\n\n\tprivate storeCachedViewContainersState(cachedViewContainers: ICachedViewContainer[]): void {\n\t\tconst pinnedViewContainers = this.getPinnedViewContainers();\n\t\tthis.setPinnedViewContainers(cachedViewContainers.map(({ id, pinned, order }) => ({\n\t\t\tid,\n\t\t\tpinned,\n\t\t\tvisible: Boolean(pinnedViewContainers.find(({ id: pinnedId }) => pinnedId === id)?.visible),\n\t\t\torder\n\t\t} satisfies IPinnedViewContainer)));\n\n\t\tthis.setPlaceholderViewContainers(cachedViewContainers.map(({ id, icon, name, views, isBuiltin }) => ({\n\t\t\tid,\n\t\t\ticonUrl: URI.isUri(icon) ? icon : undefined,\n\t\t\tthemeIcon: ThemeIcon.isThemeIcon(icon) ? icon : undefined,\n\t\t\tname,\n\t\t\tisBuiltin,\n\t\t\tviews\n\t\t} satisfies IPlaceholderViewContainer)));\n\n\t\tthis.setViewContainersWorkspaceState(cachedViewContainers.map(({ id, visible }) => ({\n\t\t\tid,\n\t\t\tvisible,\n\t\t} satisfies IViewContainerWorkspaceState)));\n\t}\n\n\tprivate getPinnedViewContainers(): IPinnedViewContainer[] {\n\t\treturn JSON.parse(this.pinnedViewContainersValue);\n\t}\n\n\tprivate setPinnedViewContainers(pinnedViewContainers: IPinnedViewContainer[]): void {\n\t\tthis.pinnedViewContainersValue = JSON.stringify(pinnedViewContainers);\n\t}\n\n\tprivate _pinnedViewContainersValue: string | undefined;\n\tprivate get pinnedViewContainersValue(): string {\n\t\tif (!this._pinnedViewContainersValue) {\n\t\t\tthis._pinnedViewContainersValue = this.getStoredPinnedViewContainersValue();\n\t\t}\n\n\t\treturn this._pinnedViewContainersValue;\n\t}\n\n\tprivate set pinnedViewContainersValue(pinnedViewContainersValue: string) {\n\t\tif (this.pinnedViewContainersValue !== pinnedViewContainersValue) {\n\t\t\tthis._pinnedViewContainersValue = pinnedViewContainersValue;\n\t\t\tthis.setStoredPinnedViewContainersValue(pinnedViewContainersValue);\n\t\t}\n\t}\n\n\tprivate getStoredPinnedViewContainersValue(): string {\n\t\treturn this.storageService.get(this.options.pinnedViewContainersKey, StorageScope.PROFILE, '[]');\n\t}\n\n\tprivate setStoredPinnedViewContainersValue(value: string): void {\n\t\tthis.storageService.store(this.options.pinnedViewContainersKey, value, StorageScope.PROFILE, StorageTarget.USER);\n\t}\n\n\tprivate getPlaceholderViewContainers(): IPlaceholderViewContainer[] {\n\t\treturn JSON.parse(this.placeholderViewContainersValue);\n\t}\n\n\tprivate setPlaceholderViewContainers(placeholderViewContainers: IPlaceholderViewContainer[]): void {\n\t\tthis.placeholderViewContainersValue = JSON.stringify(placeholderViewContainers);\n\t}\n\n\tprivate _placeholderViewContainersValue: string | undefined;\n\tprivate get placeholderViewContainersValue(): string {\n\t\tif (!this._placeholderViewContainersValue) {\n\t\t\tthis._placeholderViewContainersValue = this.getStoredPlaceholderViewContainersValue();\n\t\t}\n\n\t\treturn this._placeholderViewContainersValue;\n\t}\n\n\tprivate set placeholderViewContainersValue(placeholderViewContainesValue: string) {\n\t\tif (this.placeholderViewContainersValue !== placeholderViewContainesValue) {\n\t\t\tthis._placeholderViewContainersValue = placeholderViewContainesValue;\n\t\t\tthis.setStoredPlaceholderViewContainersValue(placeholderViewContainesValue);\n\t\t}\n\t}\n\n\tprivate getStoredPlaceholderViewContainersValue(): string {\n\t\treturn this.storageService.get(this.options.placeholderViewContainersKey, StorageScope.PROFILE, '[]');\n\t}\n\n\tprivate setStoredPlaceholderViewContainersValue(value: string): void {\n\t\tthis.storageService.store(this.options.placeholderViewContainersKey, value, StorageScope.PROFILE, StorageTarget.MACHINE);\n\t}\n\n\tprivate getViewContainersWorkspaceState(): IViewContainerWorkspaceState[] {\n\t\treturn JSON.parse(this.viewContainersWorkspaceStateValue);\n\t}\n\n\tprivate setViewContainersWorkspaceState(viewContainersWorkspaceState: IViewContainerWorkspaceState[]): void {\n\t\tthis.viewContainersWorkspaceStateValue = JSON.stringify(viewContainersWorkspaceState);\n\t}\n\n\tprivate _viewContainersWorkspaceStateValue: string | undefined;\n\tprivate get viewContainersWorkspaceStateValue(): string {\n\t\tif (!this._viewContainersWorkspaceStateValue) {\n\t\t\tthis._viewContainersWorkspaceStateValue = this.getStoredViewContainersWorkspaceStateValue();\n\t\t}\n\n\t\treturn this._viewContainersWorkspaceStateValue;\n\t}\n\n\tprivate set viewContainersWorkspaceStateValue(viewContainersWorkspaceStateValue: string) {\n\t\tif (this.viewContainersWorkspaceStateValue !== viewContainersWorkspaceStateValue) {\n\t\t\tthis._viewContainersWorkspaceStateValue = viewContainersWorkspaceStateValue;\n\t\t\tthis.setStoredViewContainersWorkspaceStateValue(viewContainersWorkspaceStateValue);\n\t\t}\n\t}\n\n\tprivate getStoredViewContainersWorkspaceStateValue(): string {\n\t\treturn this.storageService.get(this.options.viewContainersWorkspaceStateKey, StorageScope.WORKSPACE, '[]');\n\t}\n\n\tprivate setStoredViewContainersWorkspaceStateValue(value: string): void {\n\t\tthis.storageService.store(this.options.viewContainersWorkspaceStateKey, value, StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t}\n}\n\nclass ViewContainerActivityAction extends CompositeBarAction {\n\n\tprivate static readonly preventDoubleClickDelay = 300;\n\n\tprivate lastRun = 0;\n\n\tconstructor(\n\t\tcompositeBarActionItem: ICompositeBarActionItem,\n\t\tprivate readonly part: Parts,\n\t\tprivate readonly paneCompositePart: IPaneCompositePart,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IActivityService private readonly activityService: IActivityService,\n\t) {\n\t\tsuper(compositeBarActionItem);\n\t\tthis.updateActivity();\n\t\tthis._register(this.activityService.onDidChangeActivity(viewContainerOrAction => {\n\t\t\tif (!isString(viewContainerOrAction) && viewContainerOrAction.id === this.compositeBarActionItem.id) {\n\t\t\t\tthis.updateActivity();\n\t\t\t}\n\t\t}));\n\t}\n\n\tupdateCompositeBarActionItem(compositeBarActionItem: ICompositeBarActionItem): void {\n\t\tthis.compositeBarActionItem = compositeBarActionItem;\n\t}\n\n\tprivate updateActivity(): void {\n\t\tconst activities = this.activityService.getViewContainerActivities(this.compositeBarActionItem.id);\n\t\tthis.activity = activities[0];\n\t}\n\n\toverride async run(event: { preserveFocus: boolean }): Promise<void> {\n\t\tif (isMouseEvent(event) && event.button === 2) {\n\t\t\treturn; // do not run on right click\n\t\t}\n\n\t\t// prevent accident trigger on a doubleclick (to help nervous people)\n\t\tconst now = Date.now();\n\t\tif (now > this.lastRun /* https://github.com/microsoft/vscode/issues/25830 */ && now - this.lastRun < ViewContainerActivityAction.preventDoubleClickDelay) {\n\t\t\treturn;\n\t\t}\n\t\tthis.lastRun = now;\n\n\t\tconst focus = (event && 'preserveFocus' in event) ? !event.preserveFocus : true;\n\n\t\tif (this.part === Parts.ACTIVITYBAR_PART) {\n\t\t\tconst sideBarVisible = this.layoutService.isVisible(Parts.SIDEBAR_PART);\n\t\t\tconst activeViewlet = this.paneCompositePart.getActivePaneComposite();\n\t\t\tconst focusBehavior = this.configurationService.getValue<string>('workbench.activityBar.iconClickBehavior');\n\n\t\t\tif (sideBarVisible && activeViewlet?.getId() === this.compositeBarActionItem.id) {\n\t\t\t\tswitch (focusBehavior) {\n\t\t\t\t\tcase 'focus':\n\t\t\t\t\t\tthis.logAction('refocus');\n\t\t\t\t\t\tthis.paneCompositePart.openPaneComposite(this.compositeBarActionItem.id, focus);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'toggle':\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// Hide sidebar if selected viewlet already visible\n\t\t\t\t\t\tthis.logAction('hide');\n\t\t\t\t\t\tthis.layoutService.setPartHidden(true, Parts.SIDEBAR_PART);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.logAction('show');\n\t\t}\n\n\t\tawait this.paneCompositePart.openPaneComposite(this.compositeBarActionItem.id, focus);\n\t\treturn this.activate();\n\t}\n\n\tprivate logAction(action: string) {\n\t\ttype ActivityBarActionClassification = {\n\t\t\towner: 'sbatten';\n\t\t\tcomment: 'Event logged when an activity bar action is triggered.';\n\t\t\tviewletId: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The view in the activity bar for which the action was performed.' };\n\t\t\taction: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The action that was performed. e.g. \"hide\", \"show\", or \"refocus\"' };\n\t\t};\n\t\tthis.telemetryService.publicLog2<{ viewletId: String; action: String }, ActivityBarActionClassification>('activityBarAction', { viewletId: this.compositeBarActionItem.id, action });\n\t}\n}\n\nclass PlaceHolderViewContainerActivityAction extends ViewContainerActivityAction { }\n\nclass PlaceHolderToggleCompositePinnedAction extends ToggleCompositePinnedAction {\n\n\tconstructor(id: string, compositeBar: ICompositeBar) {\n\t\tsuper({ id, name: id, classNames: undefined }, compositeBar);\n\t}\n\n\tsetActivity(activity: ICompositeBarActionItem): void {\n\t\tthis.label = activity.name;\n\t}\n}\n\nclass PlaceHolderToggleCompositeBadgeAction extends ToggleCompositeBadgeAction {\n\n\tconstructor(id: string, compositeBar: ICompositeBar) {\n\t\tsuper({ id, name: id, classNames: undefined }, compositeBar);\n\t}\n\n\tsetCompositeBarActionItem(actionItem: ICompositeBarActionItem): void {\n\t\tthis.label = actionItem.name;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
