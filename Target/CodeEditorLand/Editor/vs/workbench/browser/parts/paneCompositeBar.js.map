{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/paneCompositeBar.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tDimension,\n\tasCSSUrl,\n\tcreateCSSRule,\n\tisMouseEvent,\n} from \"../../../base/browser/dom.js\";\nimport type { GestureEvent } from \"../../../base/browser/touch.js\";\nimport { ActionsOrientation } from \"../../../base/browser/ui/actionbar/actionbar.js\";\nimport { type IAction, toAction } from \"../../../base/common/actions.js\";\nimport { StringSHA1 } from \"../../../base/common/hash.js\";\nimport {\n\tDisposable,\n\tDisposableMap,\n\tDisposableStore,\n\ttype IDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport { isNative } from \"../../../base/common/platform.js\";\nimport { ThemeIcon } from \"../../../base/common/themables.js\";\nimport { isString } from \"../../../base/common/types.js\";\nimport { URI, type UriComponents } from \"../../../base/common/uri.js\";\nimport { localize } from \"../../../nls.js\";\nimport { IConfigurationService } from \"../../../platform/configuration/common/configuration.js\";\nimport {\n\tContextKeyExpr,\n\tIContextKeyService,\n} from \"../../../platform/contextkey/common/contextkey.js\";\nimport { IInstantiationService } from \"../../../platform/instantiation/common/instantiation.js\";\nimport {\n\ttype IProfileStorageValueChangeEvent,\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../platform/telemetry/common/telemetry.js\";\nimport type { IColorTheme } from \"../../../platform/theme/common/themeService.js\";\nimport {\n\ttype IViewContainerModel,\n\tIViewDescriptorService,\n\ttype ViewContainer,\n\tViewContainerLocation,\n} from \"../../common/views.js\";\nimport { IActivityService } from \"../../services/activity/common/activity.js\";\nimport { IWorkbenchEnvironmentService } from \"../../services/environment/common/environmentService.js\";\nimport { IExtensionService } from \"../../services/extensions/common/extensions.js\";\nimport {\n\tIWorkbenchLayoutService,\n\tParts,\n} from \"../../services/layout/browser/layoutService.js\";\nimport { IViewsService } from \"../../services/views/common/viewsService.js\";\nimport type { Before2D, ICompositeDragAndDrop } from \"../dnd.js\";\nimport {\n\tCompositeBar,\n\tCompositeDragAndDrop,\n\ttype ICompositeBarItem,\n} from \"./compositeBar.js\";\nimport {\n\tCompositeBarAction,\n\ttype IActivityHoverOptions,\n\ttype ICompositeBar,\n\ttype ICompositeBarActionItem,\n\ttype ICompositeBarColors,\n\tToggleCompositeBadgeAction,\n\tToggleCompositePinnedAction,\n} from \"./compositeBarActions.js\";\nimport type { IPaneCompositePart } from \"./paneCompositePart.js\";\n\ninterface IPlaceholderViewContainer {\n\treadonly id: string;\n\treadonly name?: string;\n\treadonly iconUrl?: UriComponents;\n\treadonly themeIcon?: ThemeIcon;\n\treadonly isBuiltin?: boolean;\n\treadonly views?: { when?: string }[];\n\t// TODO @sandy081: Remove this after a while. Migrated to visible in IViewContainerWorkspaceState\n\treadonly visible?: boolean;\n}\n\ninterface IPinnedViewContainer {\n\treadonly id: string;\n\treadonly pinned: boolean;\n\treadonly order?: number;\n\t// TODO @sandy081: Remove this after a while. Migrated to visible in IViewContainerWorkspaceState\n\treadonly visible: boolean;\n}\n\ninterface IViewContainerWorkspaceState {\n\treadonly id: string;\n\treadonly visible: boolean;\n}\n\ninterface ICachedViewContainer {\n\treadonly id: string;\n\tname?: string;\n\ticon?: URI | ThemeIcon;\n\treadonly pinned: boolean;\n\treadonly order?: number;\n\tvisible: boolean;\n\tisBuiltin?: boolean;\n\tviews?: { when?: string }[];\n}\n\nexport interface IPaneCompositeBarOptions {\n\treadonly partContainerClass: string;\n\treadonly pinnedViewContainersKey: string;\n\treadonly placeholderViewContainersKey: string;\n\treadonly viewContainersWorkspaceStateKey: string;\n\treadonly icon: boolean;\n\treadonly compact?: boolean;\n\treadonly iconSize: number;\n\treadonly recomputeSizes: boolean;\n\treadonly orientation: ActionsOrientation;\n\treadonly compositeSize: number;\n\treadonly overflowActionSize: number;\n\treadonly preventLoopNavigation?: boolean;\n\treadonly activityHoverOptions: IActivityHoverOptions;\n\treadonly fillExtraContextMenuActions: (\n\t\tactions: IAction[],\n\t\te?: MouseEvent | GestureEvent,\n\t) => void;\n\treadonly colors: (theme: IColorTheme) => ICompositeBarColors;\n}\n\nexport class PaneCompositeBar extends Disposable {\n\tprivate readonly viewContainerDisposables = this._register(\n\t\tnew DisposableMap<string, IDisposable>(),\n\t);\n\tprivate readonly location: ViewContainerLocation;\n\n\tprivate readonly compositeBar: CompositeBar;\n\treadonly dndHandler: ICompositeDragAndDrop;\n\tprivate readonly compositeActions = new Map<\n\t\tstring,\n\t\t{\n\t\t\tactivityAction: ViewContainerActivityAction;\n\t\t\tpinnedAction: ToggleCompositePinnedAction;\n\t\t\tbadgeAction: ToggleCompositeBadgeAction;\n\t\t}\n\t>();\n\n\tprivate hasExtensionsRegistered = false;\n\n\tconstructor(\n\t\tprotected readonly options: IPaneCompositeBarOptions,\n\t\tprivate readonly part: Parts,\n\t\tprivate readonly paneCompositePart: IPaneCompositePart,\n\t\t@IInstantiationService protected readonly instantiationService: IInstantiationService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IViewDescriptorService private readonly viewDescriptorService: IViewDescriptorService,\n\t\t@IViewsService private readonly viewService: IViewsService,\n\t\t@IContextKeyService protected readonly contextKeyService: IContextKeyService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IWorkbenchLayoutService protected readonly layoutService: IWorkbenchLayoutService,\n\t) {\n\t\tsuper();\n\t\tthis.location = paneCompositePart.partId === Parts.PANEL_PART\n\t\t\t? ViewContainerLocation.Panel : paneCompositePart.partId === Parts.AUXILIARYBAR_PART\n\t\t\t\t? ViewContainerLocation.AuxiliaryBar : ViewContainerLocation.Sidebar;\n\n\t\tthis.dndHandler = new CompositeDragAndDrop(this.viewDescriptorService, this.location, this.options.orientation,\n\t\t\tasync (id: string, focus?: boolean) => { return await this.paneCompositePart.openPaneComposite(id, focus) ?? null; },\n\t\t\t(from: string, to: string, before?: Before2D) => this.compositeBar.move(from, to, this.options.orientation === ActionsOrientation.VERTICAL ? before?.verticallyBefore : before?.horizontallyBefore),\n\t\t\t() => this.compositeBar.getCompositeBarItems(),\n\t\t);\n\n\t\tconst cachedItems = this.cachedViewContainers\n\t\t\t.map(container => ({\n\t\t\t\tid: container.id,\n\t\t\t\tname: container.name,\n\t\t\t\tvisible: !this.shouldBeHidden(container.id, container),\n\t\t\t\torder: container.order,\n\t\t\t\tpinned: container.pinned,\n\t\t\t}));\n\t\tthis.compositeBar = this.createCompositeBar(cachedItems);\n\t\tthis.onDidRegisterViewContainers(this.getViewContainers());\n\t\tthis.registerListeners();\n\t}\n\n\tprivate createCompositeBar(cachedItems: ICompositeBarItem[]) {\n\t\treturn this._register(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tCompositeBar,\n\t\t\t\tcachedItems,\n\t\t\t\t{\n\t\t\t\t\ticon: this.options.icon,\n\t\t\t\t\tcompact: this.options.compact,\n\t\t\t\t\torientation: this.options.orientation,\n\t\t\t\t\tactivityHoverOptions: this.options.activityHoverOptions,\n\t\t\t\t\tpreventLoopNavigation: this.options.preventLoopNavigation,\n\t\t\t\t\topenComposite: async (compositeId, preserveFocus) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t(await this.paneCompositePart.openPaneComposite(\n\t\t\t\t\t\t\t\tcompositeId,\n\t\t\t\t\t\t\t\t!preserveFocus,\n\t\t\t\t\t\t\t)) ?? null\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tgetActivityAction: (compositeId) =>\n\t\t\t\t\t\tthis.getCompositeActions(compositeId).activityAction,\n\t\t\t\t\tgetCompositePinnedAction: (compositeId) =>\n\t\t\t\t\t\tthis.getCompositeActions(compositeId).pinnedAction,\n\t\t\t\t\tgetCompositeBadgeAction: (compositeId) =>\n\t\t\t\t\t\tthis.getCompositeActions(compositeId).badgeAction,\n\t\t\t\t\tgetOnCompositeClickAction: (compositeId) =>\n\t\t\t\t\t\tthis.getCompositeActions(compositeId).activityAction,\n\t\t\t\t\tfillExtraContextMenuActions: (actions, e) =>\n\t\t\t\t\t\tthis.options.fillExtraContextMenuActions(actions, e),\n\t\t\t\t\tgetContextMenuActionsForComposite: (compositeId) =>\n\t\t\t\t\t\tthis.getContextMenuActionsForComposite(compositeId),\n\t\t\t\t\tgetDefaultCompositeId: () =>\n\t\t\t\t\t\tthis.viewDescriptorService.getDefaultViewContainer(\n\t\t\t\t\t\t\tthis.location,\n\t\t\t\t\t\t)?.id,\n\t\t\t\t\tdndHandler: this.dndHandler,\n\t\t\t\t\tcompositeSize: this.options.compositeSize,\n\t\t\t\t\toverflowActionSize: this.options.overflowActionSize,\n\t\t\t\t\tcolors: (theme) => this.options.colors(theme),\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate getContextMenuActionsForComposite(compositeId: string): IAction[] {\n\t\tconst actions: IAction[] = [];\n\n\t\tconst viewContainer =\n\t\t\tthis.viewDescriptorService.getViewContainerById(compositeId)!;\n\t\tconst defaultLocation =\n\t\t\tthis.viewDescriptorService.getDefaultViewContainerLocation(\n\t\t\t\tviewContainer,\n\t\t\t)!;\n\t\tif (\n\t\t\tdefaultLocation !==\n\t\t\tthis.viewDescriptorService.getViewContainerLocation(viewContainer)\n\t\t) {\n\t\t\tactions.push(\n\t\t\t\ttoAction({\n\t\t\t\t\tid: \"resetLocationAction\",\n\t\t\t\t\tlabel: localize(\"resetLocation\", \"Reset Location\"),\n\t\t\t\t\trun: () =>\n\t\t\t\t\t\tthis.viewDescriptorService.moveViewContainerToLocation(\n\t\t\t\t\t\t\tviewContainer,\n\t\t\t\t\t\t\tdefaultLocation,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\"resetLocationAction\",\n\t\t\t\t\t\t),\n\t\t\t\t}),\n\t\t\t);\n\t\t} else {\n\t\t\tconst viewContainerModel =\n\t\t\t\tthis.viewDescriptorService.getViewContainerModel(viewContainer);\n\t\t\tif (viewContainerModel.allViewDescriptors.length === 1) {\n\t\t\t\tconst viewToReset = viewContainerModel.allViewDescriptors[0];\n\t\t\t\tconst defaultContainer =\n\t\t\t\t\tthis.viewDescriptorService.getDefaultContainerById(\n\t\t\t\t\t\tviewToReset.id,\n\t\t\t\t\t)!;\n\t\t\t\tif (defaultContainer !== viewContainer) {\n\t\t\t\t\tactions.push(\n\t\t\t\t\t\ttoAction({\n\t\t\t\t\t\t\tid: \"resetLocationAction\",\n\t\t\t\t\t\t\tlabel: localize(\"resetLocation\", \"Reset Location\"),\n\t\t\t\t\t\t\trun: () =>\n\t\t\t\t\t\t\t\tthis.viewDescriptorService.moveViewsToContainer(\n\t\t\t\t\t\t\t\t\t[viewToReset],\n\t\t\t\t\t\t\t\t\tdefaultContainer,\n\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\t\"resetLocationAction\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn actions;\n\t}\n\n\tprivate registerListeners(): void {\n\t\t// View Container Changes\n\t\tthis._register(\n\t\t\tthis.viewDescriptorService.onDidChangeViewContainers(\n\t\t\t\t({ added, removed }) =>\n\t\t\t\t\tthis.onDidChangeViewContainers(added, removed),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.viewDescriptorService.onDidChangeContainerLocation(\n\t\t\t\t({ viewContainer, from, to }) =>\n\t\t\t\t\tthis.onDidChangeViewContainerLocation(\n\t\t\t\t\t\tviewContainer,\n\t\t\t\t\t\tfrom,\n\t\t\t\t\t\tto,\n\t\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\t// View Container Visibility Changes\n\t\tthis._register(\n\t\t\tthis.paneCompositePart.onDidPaneCompositeOpen((e) =>\n\t\t\t\tthis.onDidChangeViewContainerVisibility(e.getId(), true),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.paneCompositePart.onDidPaneCompositeClose((e) =>\n\t\t\t\tthis.onDidChangeViewContainerVisibility(e.getId(), false),\n\t\t\t),\n\t\t);\n\n\t\t// Extension registration\n\t\tthis.extensionService.whenInstalledExtensionsRegistered().then(() => {\n\t\t\tif (this._store.isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.onDidRegisterExtensions();\n\t\t\tthis._register(\n\t\t\t\tthis.compositeBar.onDidChange(() =>\n\t\t\t\t\tthis.saveCachedViewContainers(),\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tthis.storageService.onDidChangeValue(\n\t\t\t\t\tStorageScope.PROFILE,\n\t\t\t\t\tthis.options.pinnedViewContainersKey,\n\t\t\t\t\tthis._store,\n\t\t\t\t)((e) => this.onDidPinnedViewContainersStorageValueChange(e)),\n\t\t\t);\n\t\t});\n\t}\n\n\tprivate onDidChangeViewContainers(\n\t\tadded: readonly {\n\t\t\tcontainer: ViewContainer;\n\t\t\tlocation: ViewContainerLocation;\n\t\t}[],\n\t\tremoved: readonly {\n\t\t\tcontainer: ViewContainer;\n\t\t\tlocation: ViewContainerLocation;\n\t\t}[],\n\t) {\n\t\tremoved\n\t\t\t.filter(({ location }) => location === this.location)\n\t\t\t.forEach(({ container }) =>\n\t\t\t\tthis.onDidDeregisterViewContainer(container),\n\t\t\t);\n\t\tthis.onDidRegisterViewContainers(\n\t\t\tadded\n\t\t\t\t.filter(({ location }) => location === this.location)\n\t\t\t\t.map(({ container }) => container),\n\t\t);\n\t}\n\n\tprivate onDidChangeViewContainerLocation(\n\t\tcontainer: ViewContainer,\n\t\tfrom: ViewContainerLocation,\n\t\tto: ViewContainerLocation,\n\t) {\n\t\tif (from === this.location) {\n\t\t\tthis.onDidDeregisterViewContainer(container);\n\t\t}\n\n\t\tif (to === this.location) {\n\t\t\tthis.onDidRegisterViewContainers([container]);\n\t\t}\n\t}\n\n\tprivate onDidChangeViewContainerVisibility(id: string, visible: boolean) {\n\t\tif (visible) {\n\t\t\t// Activate view container action on opening of a view container\n\t\t\tthis.onDidViewContainerVisible(id);\n\t\t} else {\n\t\t\t// Deactivate view container action on close\n\t\t\tthis.compositeBar.deactivateComposite(id);\n\t\t}\n\t}\n\n\tprivate onDidRegisterExtensions(): void {\n\t\tthis.hasExtensionsRegistered = true;\n\n\t\t// show/hide/remove composites\n\t\tfor (const { id } of this.cachedViewContainers) {\n\t\t\tconst viewContainer = this.getViewContainer(id);\n\t\t\tif (viewContainer) {\n\t\t\t\tthis.showOrHideViewContainer(viewContainer);\n\t\t\t} else if (\n\t\t\t\tthis.viewDescriptorService.isViewContainerRemovedPermanently(id)\n\t\t\t) {\n\t\t\t\tthis.removeComposite(id);\n\t\t\t} else {\n\t\t\t\tthis.hideComposite(id);\n\t\t\t}\n\t\t}\n\n\t\tthis.saveCachedViewContainers();\n\t}\n\n\tprivate onDidViewContainerVisible(id: string): void {\n\t\tconst viewContainer = this.getViewContainer(id);\n\t\tif (viewContainer) {\n\t\t\t// Update the composite bar by adding\n\t\t\tthis.addComposite(viewContainer);\n\t\t\tthis.compositeBar.activateComposite(viewContainer.id);\n\n\t\t\tif (this.shouldBeHidden(viewContainer)) {\n\t\t\t\tconst viewContainerModel =\n\t\t\t\t\tthis.viewDescriptorService.getViewContainerModel(\n\t\t\t\t\t\tviewContainer,\n\t\t\t\t\t);\n\t\t\t\tif (viewContainerModel.activeViewDescriptors.length === 0) {\n\t\t\t\t\t// Update the composite bar by hiding\n\t\t\t\t\tthis.hideComposite(viewContainer.id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tcreate(parent: HTMLElement): HTMLElement {\n\t\treturn this.compositeBar.create(parent);\n\t}\n\n\tprivate getCompositeActions(compositeId: string): {\n\t\tactivityAction: ViewContainerActivityAction;\n\t\tpinnedAction: ToggleCompositePinnedAction;\n\t\tbadgeAction: ToggleCompositeBadgeAction;\n\t} {\n\t\tlet compositeActions = this.compositeActions.get(compositeId);\n\t\tif (!compositeActions) {\n\t\t\tconst viewContainer = this.getViewContainer(compositeId);\n\t\t\tif (viewContainer) {\n\t\t\t\tconst viewContainerModel =\n\t\t\t\t\tthis.viewDescriptorService.getViewContainerModel(\n\t\t\t\t\t\tviewContainer,\n\t\t\t\t\t);\n\t\t\t\tcompositeActions = {\n\t\t\t\t\tactivityAction: this._register(\n\t\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\t\tViewContainerActivityAction,\n\t\t\t\t\t\t\tthis.toCompositeBarActionItemFrom(\n\t\t\t\t\t\t\t\tviewContainerModel,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tthis.part,\n\t\t\t\t\t\t\tthis.paneCompositePart,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\tpinnedAction: this._register(\n\t\t\t\t\t\tnew ToggleCompositePinnedAction(\n\t\t\t\t\t\t\tthis.toCompositeBarActionItemFrom(\n\t\t\t\t\t\t\t\tviewContainerModel,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tthis.compositeBar,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\tbadgeAction: this._register(\n\t\t\t\t\t\tnew ToggleCompositeBadgeAction(\n\t\t\t\t\t\t\tthis.toCompositeBarActionItemFrom(\n\t\t\t\t\t\t\t\tviewContainerModel,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tthis.compositeBar,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tconst cachedComposite = this.cachedViewContainers.filter(\n\t\t\t\t\t(c) => c.id === compositeId,\n\t\t\t\t)[0];\n\t\t\t\tcompositeActions = {\n\t\t\t\t\tactivityAction: this._register(\n\t\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\t\tPlaceHolderViewContainerActivityAction,\n\t\t\t\t\t\t\tthis.toCompositeBarActionItem(\n\t\t\t\t\t\t\t\tcompositeId,\n\t\t\t\t\t\t\t\tcachedComposite?.name ?? compositeId,\n\t\t\t\t\t\t\t\tcachedComposite?.icon,\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tthis.part,\n\t\t\t\t\t\t\tthis.paneCompositePart,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\tpinnedAction: this._register(\n\t\t\t\t\t\tnew PlaceHolderToggleCompositePinnedAction(\n\t\t\t\t\t\t\tcompositeId,\n\t\t\t\t\t\t\tthis.compositeBar,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\tbadgeAction: this._register(\n\t\t\t\t\t\tnew PlaceHolderToggleCompositeBadgeAction(\n\t\t\t\t\t\t\tcompositeId,\n\t\t\t\t\t\t\tthis.compositeBar,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.compositeActions.set(compositeId, compositeActions);\n\t\t}\n\n\t\treturn compositeActions;\n\t}\n\n\tprivate onDidRegisterViewContainers(\n\t\tviewContainers: readonly ViewContainer[],\n\t): void {\n\t\tfor (const viewContainer of viewContainers) {\n\t\t\tthis.addComposite(viewContainer);\n\n\t\t\t// Pin it by default if it is new\n\t\t\tconst cachedViewContainer = this.cachedViewContainers.filter(\n\t\t\t\t({ id }) => id === viewContainer.id,\n\t\t\t)[0];\n\t\t\tif (!cachedViewContainer) {\n\t\t\t\tthis.compositeBar.pin(viewContainer.id);\n\t\t\t}\n\n\t\t\t// Active\n\t\t\tconst visibleViewContainer =\n\t\t\t\tthis.paneCompositePart.getActivePaneComposite();\n\t\t\tif (visibleViewContainer?.getId() === viewContainer.id) {\n\t\t\t\tthis.compositeBar.activateComposite(viewContainer.id);\n\t\t\t}\n\n\t\t\tconst viewContainerModel =\n\t\t\t\tthis.viewDescriptorService.getViewContainerModel(viewContainer);\n\t\t\tthis.updateCompositeBarActionItem(\n\t\t\t\tviewContainer,\n\t\t\t\tviewContainerModel,\n\t\t\t);\n\t\t\tthis.showOrHideViewContainer(viewContainer);\n\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tdisposables.add(\n\t\t\t\tviewContainerModel.onDidChangeContainerInfo(() =>\n\t\t\t\t\tthis.updateCompositeBarActionItem(\n\t\t\t\t\t\tviewContainer,\n\t\t\t\t\t\tviewContainerModel,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t\tdisposables.add(\n\t\t\t\tviewContainerModel.onDidChangeActiveViewDescriptors(() =>\n\t\t\t\t\tthis.showOrHideViewContainer(viewContainer),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tthis.viewContainerDisposables.set(viewContainer.id, disposables);\n\t\t}\n\t}\n\n\tprivate onDidDeregisterViewContainer(viewContainer: ViewContainer): void {\n\t\tthis.viewContainerDisposables.deleteAndDispose(viewContainer.id);\n\t\tthis.removeComposite(viewContainer.id);\n\t}\n\n\tprivate updateCompositeBarActionItem(\n\t\tviewContainer: ViewContainer,\n\t\tviewContainerModel: IViewContainerModel,\n\t): void {\n\t\tconst compositeBarActionItem =\n\t\t\tthis.toCompositeBarActionItemFrom(viewContainerModel);\n\t\tconst { activityAction, pinnedAction } = this.getCompositeActions(\n\t\t\tviewContainer.id,\n\t\t);\n\t\tactivityAction.updateCompositeBarActionItem(compositeBarActionItem);\n\n\t\tif (pinnedAction instanceof PlaceHolderToggleCompositePinnedAction) {\n\t\t\tpinnedAction.setActivity(compositeBarActionItem);\n\t\t}\n\n\t\tif (this.options.recomputeSizes) {\n\t\t\tthis.compositeBar.recomputeSizes();\n\t\t}\n\n\t\tthis.saveCachedViewContainers();\n\t}\n\n\tprivate toCompositeBarActionItemFrom(\n\t\tviewContainerModel: IViewContainerModel,\n\t): ICompositeBarActionItem {\n\t\treturn this.toCompositeBarActionItem(\n\t\t\tviewContainerModel.viewContainer.id,\n\t\t\tviewContainerModel.title,\n\t\t\tviewContainerModel.icon,\n\t\t\tviewContainerModel.keybindingId,\n\t\t);\n\t}\n\n\tprivate toCompositeBarActionItem(\n\t\tid: string,\n\t\tname: string,\n\t\ticon: URI | ThemeIcon | undefined,\n\t\tkeybindingId: string | undefined,\n\t): ICompositeBarActionItem {\n\t\tlet classNames: string[] | undefined;\n\t\tlet iconUrl: URI | undefined;\n\t\tif (this.options.icon) {\n\t\t\tif (URI.isUri(icon)) {\n\t\t\t\ticonUrl = icon;\n\t\t\t\tconst cssUrl = asCSSUrl(icon);\n\t\t\t\tconst hash = new StringSHA1();\n\t\t\t\thash.update(cssUrl);\n\t\t\t\tconst iconId = `activity-${id.replace(/\\./g, \"-\")}-${hash.digest()}`;\n\t\t\t\tconst iconClass = `.monaco-workbench .${this.options.partContainerClass} .monaco-action-bar .action-label.${iconId}`;\n\t\t\t\tclassNames = [iconId, \"uri-icon\"];\n\t\t\t\tcreateCSSRule(\n\t\t\t\t\ticonClass,\n\t\t\t\t\t`\n\t\t\t\tmask: ${cssUrl} no-repeat 50% 50%;\n\t\t\t\tmask-size: ${this.options.iconSize}px;\n\t\t\t\t-webkit-mask: ${cssUrl} no-repeat 50% 50%;\n\t\t\t\t-webkit-mask-size: ${this.options.iconSize}px;\n\t\t\t\tmask-origin: padding;\n\t\t\t\t-webkit-mask-origin: padding;\n\t\t\t`,\n\t\t\t\t);\n\t\t\t} else if (ThemeIcon.isThemeIcon(icon)) {\n\t\t\t\tclassNames = ThemeIcon.asClassNameArray(icon);\n\t\t\t}\n\t\t}\n\n\t\treturn { id, name, classNames, iconUrl, keybindingId };\n\t}\n\n\tprivate showOrHideViewContainer(viewContainer: ViewContainer): void {\n\t\tif (this.shouldBeHidden(viewContainer)) {\n\t\t\tthis.hideComposite(viewContainer.id);\n\t\t} else {\n\t\t\tthis.addComposite(viewContainer);\n\t\t}\n\t}\n\n\tprivate shouldBeHidden(\n\t\tviewContainerOrId: string | ViewContainer,\n\t\tcachedViewContainer?: ICachedViewContainer,\n\t): boolean {\n\t\tconst viewContainer = isString(viewContainerOrId)\n\t\t\t? this.getViewContainer(viewContainerOrId)\n\t\t\t: viewContainerOrId;\n\t\tconst viewContainerId = isString(viewContainerOrId)\n\t\t\t? viewContainerOrId\n\t\t\t: viewContainerOrId.id;\n\n\t\tif (viewContainer) {\n\t\t\tif (viewContainer.hideIfEmpty) {\n\t\t\t\tif (this.viewService.isViewContainerActive(viewContainerId)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Check cache only if extensions are not yet registered and current window is not native (desktop) remote connection window\n\t\tif (\n\t\t\t!this.hasExtensionsRegistered &&\n\t\t\t!(\n\t\t\t\tthis.part === Parts.SIDEBAR_PART &&\n\t\t\t\tthis.environmentService.remoteAuthority &&\n\t\t\t\tisNative\n\t\t\t)\n\t\t) {\n\t\t\tcachedViewContainer =\n\t\t\t\tcachedViewContainer ||\n\t\t\t\tthis.cachedViewContainers.find(\n\t\t\t\t\t({ id }) => id === viewContainerId,\n\t\t\t\t);\n\n\t\t\t// Show builtin ViewContainer if not registered yet\n\t\t\tif (\n\t\t\t\t!viewContainer &&\n\t\t\t\tcachedViewContainer?.isBuiltin &&\n\t\t\t\tcachedViewContainer?.visible\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (cachedViewContainer?.views?.length) {\n\t\t\t\treturn cachedViewContainer.views.every(\n\t\t\t\t\t({ when }) =>\n\t\t\t\t\t\t!!when &&\n\t\t\t\t\t\t!this.contextKeyService.contextMatchesRules(\n\t\t\t\t\t\t\tContextKeyExpr.deserialize(when),\n\t\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate addComposite(viewContainer: ViewContainer): void {\n\t\tthis.compositeBar.addComposite({\n\t\t\tid: viewContainer.id,\n\t\t\tname:\n\t\t\t\ttypeof viewContainer.title === \"string\"\n\t\t\t\t\t? viewContainer.title\n\t\t\t\t\t: viewContainer.title.value,\n\t\t\torder: viewContainer.order,\n\t\t\trequestedIndex: viewContainer.requestedIndex,\n\t\t});\n\t}\n\n\tprivate hideComposite(compositeId: string): void {\n\t\tthis.compositeBar.hideComposite(compositeId);\n\n\t\tconst compositeActions = this.compositeActions.get(compositeId);\n\t\tif (compositeActions) {\n\t\t\tcompositeActions.activityAction.dispose();\n\t\t\tcompositeActions.pinnedAction.dispose();\n\t\t\tthis.compositeActions.delete(compositeId);\n\t\t}\n\t}\n\n\tprivate removeComposite(compositeId: string): void {\n\t\tthis.compositeBar.removeComposite(compositeId);\n\n\t\tconst compositeActions = this.compositeActions.get(compositeId);\n\t\tif (compositeActions) {\n\t\t\tcompositeActions.activityAction.dispose();\n\t\t\tcompositeActions.pinnedAction.dispose();\n\t\t\tthis.compositeActions.delete(compositeId);\n\t\t}\n\t}\n\n\tgetPinnedPaneCompositeIds(): string[] {\n\t\tconst pinnedCompositeIds = this.compositeBar\n\t\t\t.getPinnedComposites()\n\t\t\t.map((v) => v.id);\n\t\treturn this.getViewContainers()\n\t\t\t.filter((v) => this.compositeBar.isPinned(v.id))\n\t\t\t.sort(\n\t\t\t\t(v1, v2) =>\n\t\t\t\t\tpinnedCompositeIds.indexOf(v1.id) -\n\t\t\t\t\tpinnedCompositeIds.indexOf(v2.id),\n\t\t\t)\n\t\t\t.map((v) => v.id);\n\t}\n\n\tgetVisiblePaneCompositeIds(): string[] {\n\t\treturn this.compositeBar\n\t\t\t.getVisibleComposites()\n\t\t\t.filter(\n\t\t\t\t(v) =>\n\t\t\t\t\tthis.paneCompositePart.getActivePaneComposite()?.getId() ===\n\t\t\t\t\t\tv.id || this.compositeBar.isPinned(v.id),\n\t\t\t)\n\t\t\t.map((v) => v.id);\n\t}\n\n\tgetContextMenuActions(): IAction[] {\n\t\treturn this.compositeBar.getContextMenuActions();\n\t}\n\n\tfocus(index?: number): void {\n\t\tthis.compositeBar.focus(index);\n\t}\n\n\tlayout(width: number, height: number): void {\n\t\tthis.compositeBar.layout(new Dimension(width, height));\n\t}\n\n\tprivate getViewContainer(id: string): ViewContainer | undefined {\n\t\tconst viewContainer =\n\t\t\tthis.viewDescriptorService.getViewContainerById(id);\n\t\treturn viewContainer &&\n\t\t\tthis.viewDescriptorService.getViewContainerLocation(\n\t\t\t\tviewContainer,\n\t\t\t) === this.location\n\t\t\t? viewContainer\n\t\t\t: undefined;\n\t}\n\n\tprivate getViewContainers(): readonly ViewContainer[] {\n\t\treturn this.viewDescriptorService.getViewContainersByLocation(\n\t\t\tthis.location,\n\t\t);\n\t}\n\n\tprivate onDidPinnedViewContainersStorageValueChange(\n\t\te: IProfileStorageValueChangeEvent,\n\t): void {\n\t\tif (\n\t\t\tthis.pinnedViewContainersValue !==\n\t\t\tthis.getStoredPinnedViewContainersValue() /* This checks if current window changed the value or not */\n\t\t) {\n\t\t\tthis._placeholderViewContainersValue = undefined;\n\t\t\tthis._pinnedViewContainersValue = undefined;\n\t\t\tthis._cachedViewContainers = undefined;\n\n\t\t\tconst newCompositeItems: ICompositeBarItem[] = [];\n\t\t\tconst compositeItems = this.compositeBar.getCompositeBarItems();\n\n\t\t\tfor (const cachedViewContainer of this.cachedViewContainers) {\n\t\t\t\tnewCompositeItems.push({\n\t\t\t\t\tid: cachedViewContainer.id,\n\t\t\t\t\tname: cachedViewContainer.name,\n\t\t\t\t\torder: cachedViewContainer.order,\n\t\t\t\t\tpinned: cachedViewContainer.pinned,\n\t\t\t\t\tvisible:\n\t\t\t\t\t\tcachedViewContainer.visible &&\n\t\t\t\t\t\t!!this.getViewContainer(cachedViewContainer.id),\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfor (const viewContainer of this.getViewContainers()) {\n\t\t\t\t// Add missing view containers\n\t\t\t\tif (\n\t\t\t\t\t!newCompositeItems.some(({ id }) => id === viewContainer.id)\n\t\t\t\t) {\n\t\t\t\t\tconst index = compositeItems.findIndex(\n\t\t\t\t\t\t({ id }) => id === viewContainer.id,\n\t\t\t\t\t);\n\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\tconst compositeItem = compositeItems[index];\n\t\t\t\t\t\tnewCompositeItems.splice(index, 0, {\n\t\t\t\t\t\t\tid: viewContainer.id,\n\t\t\t\t\t\t\tname:\n\t\t\t\t\t\t\t\ttypeof viewContainer.title === \"string\"\n\t\t\t\t\t\t\t\t\t? viewContainer.title\n\t\t\t\t\t\t\t\t\t: viewContainer.title.value,\n\t\t\t\t\t\t\torder: compositeItem.order,\n\t\t\t\t\t\t\tpinned: compositeItem.pinned,\n\t\t\t\t\t\t\tvisible: compositeItem.visible,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewCompositeItems.push({\n\t\t\t\t\t\t\tid: viewContainer.id,\n\t\t\t\t\t\t\tname:\n\t\t\t\t\t\t\t\ttypeof viewContainer.title === \"string\"\n\t\t\t\t\t\t\t\t\t? viewContainer.title\n\t\t\t\t\t\t\t\t\t: viewContainer.title.value,\n\t\t\t\t\t\t\torder: viewContainer.order,\n\t\t\t\t\t\t\tpinned: true,\n\t\t\t\t\t\t\tvisible: !this.shouldBeHidden(viewContainer),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.compositeBar.setCompositeBarItems(newCompositeItems);\n\t\t}\n\t}\n\n\tprivate saveCachedViewContainers(): void {\n\t\tconst state: ICachedViewContainer[] = [];\n\n\t\tconst compositeItems = this.compositeBar.getCompositeBarItems();\n\t\tfor (const compositeItem of compositeItems) {\n\t\t\tconst viewContainer = this.getViewContainer(compositeItem.id);\n\t\t\tif (viewContainer) {\n\t\t\t\tconst viewContainerModel =\n\t\t\t\t\tthis.viewDescriptorService.getViewContainerModel(\n\t\t\t\t\t\tviewContainer,\n\t\t\t\t\t);\n\t\t\t\tconst views: { when: string | undefined }[] = [];\n\t\t\t\tfor (const { when } of viewContainerModel.allViewDescriptors) {\n\t\t\t\t\tviews.push({ when: when ? when.serialize() : undefined });\n\t\t\t\t}\n\t\t\t\tstate.push({\n\t\t\t\t\tid: compositeItem.id,\n\t\t\t\t\tname: viewContainerModel.title,\n\t\t\t\t\ticon:\n\t\t\t\t\t\tURI.isUri(viewContainerModel.icon) &&\n\t\t\t\t\t\tthis.environmentService.remoteAuthority\n\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t: viewContainerModel.icon, // Do not cache uri icons with remote connection\n\t\t\t\t\tviews,\n\t\t\t\t\tpinned: compositeItem.pinned,\n\t\t\t\t\torder: compositeItem.order,\n\t\t\t\t\tvisible: compositeItem.visible,\n\t\t\t\t\tisBuiltin: !viewContainer.extensionId,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tstate.push({\n\t\t\t\t\tid: compositeItem.id,\n\t\t\t\t\tname: compositeItem.name,\n\t\t\t\t\tpinned: compositeItem.pinned,\n\t\t\t\t\torder: compositeItem.order,\n\t\t\t\t\tvisible: false,\n\t\t\t\t\tisBuiltin: false,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tthis.storeCachedViewContainersState(state);\n\t}\n\n\tprivate _cachedViewContainers: ICachedViewContainer[] | undefined =\n\t\tundefined;\n\tprivate get cachedViewContainers(): ICachedViewContainer[] {\n\t\tif (this._cachedViewContainers === undefined) {\n\t\t\tthis._cachedViewContainers = this.getPinnedViewContainers();\n\t\t\tfor (const placeholderViewContainer of this.getPlaceholderViewContainers()) {\n\t\t\t\tconst cachedViewContainer = this._cachedViewContainers.find(\n\t\t\t\t\t(cached) => cached.id === placeholderViewContainer.id,\n\t\t\t\t);\n\t\t\t\tif (cachedViewContainer) {\n\t\t\t\t\tcachedViewContainer.visible =\n\t\t\t\t\t\tplaceholderViewContainer.visible ??\n\t\t\t\t\t\tcachedViewContainer.visible;\n\t\t\t\t\tcachedViewContainer.name = placeholderViewContainer.name;\n\t\t\t\t\tcachedViewContainer.icon =\n\t\t\t\t\t\tplaceholderViewContainer.themeIcon\n\t\t\t\t\t\t\t? placeholderViewContainer.themeIcon\n\t\t\t\t\t\t\t: placeholderViewContainer.iconUrl\n\t\t\t\t\t\t\t\t? URI.revive(placeholderViewContainer.iconUrl)\n\t\t\t\t\t\t\t\t: undefined;\n\t\t\t\t\tif (\n\t\t\t\t\t\tURI.isUri(cachedViewContainer.icon) &&\n\t\t\t\t\t\tthis.environmentService.remoteAuthority\n\t\t\t\t\t) {\n\t\t\t\t\t\tcachedViewContainer.icon = undefined; // Do not cache uri icons with remote connection\n\t\t\t\t\t}\n\t\t\t\t\tcachedViewContainer.views = placeholderViewContainer.views;\n\t\t\t\t\tcachedViewContainer.isBuiltin =\n\t\t\t\t\t\tplaceholderViewContainer.isBuiltin;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const viewContainerWorkspaceState of this.getViewContainersWorkspaceState()) {\n\t\t\t\tconst cachedViewContainer = this._cachedViewContainers.find(\n\t\t\t\t\t(cached) => cached.id === viewContainerWorkspaceState.id,\n\t\t\t\t);\n\t\t\t\tif (cachedViewContainer) {\n\t\t\t\t\tcachedViewContainer.visible =\n\t\t\t\t\t\tviewContainerWorkspaceState.visible ??\n\t\t\t\t\t\tcachedViewContainer.visible;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._cachedViewContainers;\n\t}\n\n\tprivate storeCachedViewContainersState(\n\t\tcachedViewContainers: ICachedViewContainer[],\n\t): void {\n\t\tconst pinnedViewContainers = this.getPinnedViewContainers();\n\t\tthis.setPinnedViewContainers(\n\t\t\tcachedViewContainers.map(\n\t\t\t\t({ id, pinned, order }) =>\n\t\t\t\t\t({\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tpinned,\n\t\t\t\t\t\tvisible: Boolean(\n\t\t\t\t\t\t\tpinnedViewContainers.find(\n\t\t\t\t\t\t\t\t({ id: pinnedId }) => pinnedId === id,\n\t\t\t\t\t\t\t)?.visible,\n\t\t\t\t\t\t),\n\t\t\t\t\t\torder,\n\t\t\t\t\t}) satisfies IPinnedViewContainer,\n\t\t\t),\n\t\t);\n\n\t\tthis.setPlaceholderViewContainers(\n\t\t\tcachedViewContainers.map(\n\t\t\t\t({ id, icon, name, views, isBuiltin }) =>\n\t\t\t\t\t({\n\t\t\t\t\t\tid,\n\t\t\t\t\t\ticonUrl: URI.isUri(icon) ? icon : undefined,\n\t\t\t\t\t\tthemeIcon: ThemeIcon.isThemeIcon(icon)\n\t\t\t\t\t\t\t? icon\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tisBuiltin,\n\t\t\t\t\t\tviews,\n\t\t\t\t\t}) satisfies IPlaceholderViewContainer,\n\t\t\t),\n\t\t);\n\n\t\tthis.setViewContainersWorkspaceState(\n\t\t\tcachedViewContainers.map(\n\t\t\t\t({ id, visible }) =>\n\t\t\t\t\t({\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tvisible,\n\t\t\t\t\t}) satisfies IViewContainerWorkspaceState,\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate getPinnedViewContainers(): IPinnedViewContainer[] {\n\t\treturn JSON.parse(this.pinnedViewContainersValue);\n\t}\n\n\tprivate setPinnedViewContainers(\n\t\tpinnedViewContainers: IPinnedViewContainer[],\n\t): void {\n\t\tthis.pinnedViewContainersValue = JSON.stringify(pinnedViewContainers);\n\t}\n\n\tprivate _pinnedViewContainersValue: string | undefined;\n\tprivate get pinnedViewContainersValue(): string {\n\t\tif (!this._pinnedViewContainersValue) {\n\t\t\tthis._pinnedViewContainersValue =\n\t\t\t\tthis.getStoredPinnedViewContainersValue();\n\t\t}\n\n\t\treturn this._pinnedViewContainersValue;\n\t}\n\n\tprivate set pinnedViewContainersValue(pinnedViewContainersValue: string) {\n\t\tif (this.pinnedViewContainersValue !== pinnedViewContainersValue) {\n\t\t\tthis._pinnedViewContainersValue = pinnedViewContainersValue;\n\t\t\tthis.setStoredPinnedViewContainersValue(pinnedViewContainersValue);\n\t\t}\n\t}\n\n\tprivate getStoredPinnedViewContainersValue(): string {\n\t\treturn this.storageService.get(\n\t\t\tthis.options.pinnedViewContainersKey,\n\t\t\tStorageScope.PROFILE,\n\t\t\t\"[]\",\n\t\t);\n\t}\n\n\tprivate setStoredPinnedViewContainersValue(value: string): void {\n\t\tthis.storageService.store(\n\t\t\tthis.options.pinnedViewContainersKey,\n\t\t\tvalue,\n\t\t\tStorageScope.PROFILE,\n\t\t\tStorageTarget.USER,\n\t\t);\n\t}\n\n\tprivate getPlaceholderViewContainers(): IPlaceholderViewContainer[] {\n\t\treturn JSON.parse(this.placeholderViewContainersValue);\n\t}\n\n\tprivate setPlaceholderViewContainers(\n\t\tplaceholderViewContainers: IPlaceholderViewContainer[],\n\t): void {\n\t\tthis.placeholderViewContainersValue = JSON.stringify(\n\t\t\tplaceholderViewContainers,\n\t\t);\n\t}\n\n\tprivate _placeholderViewContainersValue: string | undefined;\n\tprivate get placeholderViewContainersValue(): string {\n\t\tif (!this._placeholderViewContainersValue) {\n\t\t\tthis._placeholderViewContainersValue =\n\t\t\t\tthis.getStoredPlaceholderViewContainersValue();\n\t\t}\n\n\t\treturn this._placeholderViewContainersValue;\n\t}\n\n\tprivate set placeholderViewContainersValue(placeholderViewContainesValue: string) {\n\t\tif (\n\t\t\tthis.placeholderViewContainersValue !==\n\t\t\tplaceholderViewContainesValue\n\t\t) {\n\t\t\tthis._placeholderViewContainersValue =\n\t\t\t\tplaceholderViewContainesValue;\n\t\t\tthis.setStoredPlaceholderViewContainersValue(\n\t\t\t\tplaceholderViewContainesValue,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate getStoredPlaceholderViewContainersValue(): string {\n\t\treturn this.storageService.get(\n\t\t\tthis.options.placeholderViewContainersKey,\n\t\t\tStorageScope.PROFILE,\n\t\t\t\"[]\",\n\t\t);\n\t}\n\n\tprivate setStoredPlaceholderViewContainersValue(value: string): void {\n\t\tthis.storageService.store(\n\t\t\tthis.options.placeholderViewContainersKey,\n\t\t\tvalue,\n\t\t\tStorageScope.PROFILE,\n\t\t\tStorageTarget.MACHINE,\n\t\t);\n\t}\n\n\tprivate getViewContainersWorkspaceState(): IViewContainerWorkspaceState[] {\n\t\treturn JSON.parse(this.viewContainersWorkspaceStateValue);\n\t}\n\n\tprivate setViewContainersWorkspaceState(\n\t\tviewContainersWorkspaceState: IViewContainerWorkspaceState[],\n\t): void {\n\t\tthis.viewContainersWorkspaceStateValue = JSON.stringify(\n\t\t\tviewContainersWorkspaceState,\n\t\t);\n\t}\n\n\tprivate _viewContainersWorkspaceStateValue: string | undefined;\n\tprivate get viewContainersWorkspaceStateValue(): string {\n\t\tif (!this._viewContainersWorkspaceStateValue) {\n\t\t\tthis._viewContainersWorkspaceStateValue =\n\t\t\t\tthis.getStoredViewContainersWorkspaceStateValue();\n\t\t}\n\n\t\treturn this._viewContainersWorkspaceStateValue;\n\t}\n\n\tprivate set viewContainersWorkspaceStateValue(viewContainersWorkspaceStateValue: string) {\n\t\tif (\n\t\t\tthis.viewContainersWorkspaceStateValue !==\n\t\t\tviewContainersWorkspaceStateValue\n\t\t) {\n\t\t\tthis._viewContainersWorkspaceStateValue =\n\t\t\t\tviewContainersWorkspaceStateValue;\n\t\t\tthis.setStoredViewContainersWorkspaceStateValue(\n\t\t\t\tviewContainersWorkspaceStateValue,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate getStoredViewContainersWorkspaceStateValue(): string {\n\t\treturn this.storageService.get(\n\t\t\tthis.options.viewContainersWorkspaceStateKey,\n\t\t\tStorageScope.WORKSPACE,\n\t\t\t\"[]\",\n\t\t);\n\t}\n\n\tprivate setStoredViewContainersWorkspaceStateValue(value: string): void {\n\t\tthis.storageService.store(\n\t\t\tthis.options.viewContainersWorkspaceStateKey,\n\t\t\tvalue,\n\t\t\tStorageScope.WORKSPACE,\n\t\t\tStorageTarget.MACHINE,\n\t\t);\n\t}\n}\n\nclass ViewContainerActivityAction extends CompositeBarAction {\n\tprivate static readonly preventDoubleClickDelay = 300;\n\n\tprivate lastRun = 0;\n\n\tconstructor(\n\t\tcompositeBarActionItem: ICompositeBarActionItem,\n\t\tprivate readonly part: Parts,\n\t\tprivate readonly paneCompositePart: IPaneCompositePart,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IActivityService private readonly activityService: IActivityService,\n\t) {\n\t\tsuper(compositeBarActionItem);\n\t\tthis.updateActivity();\n\t\tthis._register(this.activityService.onDidChangeActivity(viewContainerOrAction => {\n\t\t\tif (!isString(viewContainerOrAction) && viewContainerOrAction.id === this.compositeBarActionItem.id) {\n\t\t\t\tthis.updateActivity();\n\t\t\t}\n\t\t}));\n\t}\n\n\tupdateCompositeBarActionItem(\n\t\tcompositeBarActionItem: ICompositeBarActionItem,\n\t): void {\n\t\tthis.compositeBarActionItem = compositeBarActionItem;\n\t}\n\n\tprivate updateActivity(): void {\n\t\tconst activities = this.activityService.getViewContainerActivities(\n\t\t\tthis.compositeBarActionItem.id,\n\t\t);\n\t\tthis.activity = activities[0];\n\t}\n\n\toverride async run(event: { preserveFocus: boolean }): Promise<void> {\n\t\tif (isMouseEvent(event) && event.button === 2) {\n\t\t\treturn; // do not run on right click\n\t\t}\n\n\t\t// prevent accident trigger on a doubleclick (to help nervous people)\n\t\tconst now = Date.now();\n\t\tif (\n\t\t\tnow >\n\t\t\t\tthis\n\t\t\t\t\t.lastRun /* https://github.com/microsoft/vscode/issues/25830 */ &&\n\t\t\tnow - this.lastRun <\n\t\t\t\tViewContainerActivityAction.preventDoubleClickDelay\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tthis.lastRun = now;\n\n\t\tconst focus =\n\t\t\tevent && \"preserveFocus\" in event ? !event.preserveFocus : true;\n\n\t\tif (this.part === Parts.ACTIVITYBAR_PART) {\n\t\t\tconst sideBarVisible = this.layoutService.isVisible(\n\t\t\t\tParts.SIDEBAR_PART,\n\t\t\t);\n\t\t\tconst activeViewlet =\n\t\t\t\tthis.paneCompositePart.getActivePaneComposite();\n\t\t\tconst focusBehavior = this.configurationService.getValue<string>(\n\t\t\t\t\"workbench.activityBar.iconClickBehavior\",\n\t\t\t);\n\n\t\t\tif (\n\t\t\t\tsideBarVisible &&\n\t\t\t\tactiveViewlet?.getId() === this.compositeBarActionItem.id\n\t\t\t) {\n\t\t\t\tswitch (focusBehavior) {\n\t\t\t\t\tcase \"focus\":\n\t\t\t\t\t\tthis.logAction(\"refocus\");\n\t\t\t\t\t\tthis.paneCompositePart.openPaneComposite(\n\t\t\t\t\t\t\tthis.compositeBarActionItem.id,\n\t\t\t\t\t\t\tfocus,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"toggle\":\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// Hide sidebar if selected viewlet already visible\n\t\t\t\t\t\tthis.logAction(\"hide\");\n\t\t\t\t\t\tthis.layoutService.setPartHidden(\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\tParts.SIDEBAR_PART,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.logAction(\"show\");\n\t\t}\n\n\t\tawait this.paneCompositePart.openPaneComposite(\n\t\t\tthis.compositeBarActionItem.id,\n\t\t\tfocus,\n\t\t);\n\t\treturn this.activate();\n\t}\n\n\tprivate logAction(action: string) {\n\t\ttype ActivityBarActionClassification = {\n\t\t\towner: \"sbatten\";\n\t\t\tcomment: \"Event logged when an activity bar action is triggered.\";\n\t\t\tviewletId: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"The view in the activity bar for which the action was performed.\";\n\t\t\t};\n\t\t\taction: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: 'The action that was performed. e.g. \"hide\", \"show\", or \"refocus\"';\n\t\t\t};\n\t\t};\n\t\tthis.telemetryService.publicLog2<\n\t\t\t{ viewletId: string; action: string },\n\t\t\tActivityBarActionClassification\n\t\t>(\"activityBarAction\", {\n\t\t\tviewletId: this.compositeBarActionItem.id,\n\t\t\taction,\n\t\t});\n\t}\n}\n\nclass PlaceHolderViewContainerActivityAction extends ViewContainerActivityAction {}\n\nclass PlaceHolderToggleCompositePinnedAction extends ToggleCompositePinnedAction {\n\tconstructor(id: string, compositeBar: ICompositeBar) {\n\t\tsuper({ id, name: id, classNames: undefined }, compositeBar);\n\t}\n\n\tsetActivity(activity: ICompositeBarActionItem): void {\n\t\tthis.label = activity.name;\n\t}\n}\n\nclass PlaceHolderToggleCompositeBadgeAction extends ToggleCompositeBadgeAction {\n\tconstructor(id: string, compositeBar: ICompositeBar) {\n\t\tsuper({ id, name: id, classNames: undefined }, compositeBar);\n\t}\n\n\tsetCompositeBarActionItem(actionItem: ICompositeBarActionItem): void {\n\t\tthis.label = actionItem.name;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
