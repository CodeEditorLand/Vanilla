{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/dialogs/dialog.web.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { IDialogHandler, IDialogResult, IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { ILayoutService } from '../../../../platform/layout/browser/layoutService.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { IProductService } from '../../../../platform/product/common/productService.js';\nimport { IWorkbenchContribution, WorkbenchPhase, registerWorkbenchContribution2 } from '../../../common/contributions.js';\nimport { IDialogsModel, IDialogViewItem } from '../../../common/dialogs.js';\nimport { BrowserDialogHandler } from './dialogHandler.js';\nimport { DialogService } from '../../../services/dialogs/common/dialogService.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { Lazy } from '../../../../base/common/lazy.js';\n\nexport class DialogHandlerContribution extends Disposable implements IWorkbenchContribution {\n\n\tstatic readonly ID = 'workbench.contrib.dialogHandler';\n\n\tprivate readonly model: IDialogsModel;\n\tprivate readonly impl: Lazy<IDialogHandler>;\n\n\tprivate currentDialog: IDialogViewItem | undefined;\n\n\tconstructor(\n\t\t@IDialogService private dialogService: IDialogService,\n\t\t@ILogService logService: ILogService,\n\t\t@ILayoutService layoutService: ILayoutService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IProductService productService: IProductService,\n\t\t@IClipboardService clipboardService: IClipboardService\n\t) {\n\t\tsuper();\n\n\t\tthis.impl = new Lazy(() => new BrowserDialogHandler(logService, layoutService, keybindingService, instantiationService, productService, clipboardService));\n\n\t\tthis.model = (this.dialogService as DialogService).model;\n\n\t\tthis._register(this.model.onWillShowDialog(() => {\n\t\t\tif (!this.currentDialog) {\n\t\t\t\tthis.processDialogs();\n\t\t\t}\n\t\t}));\n\n\t\tthis.processDialogs();\n\t}\n\n\tprivate async processDialogs(): Promise<void> {\n\t\twhile (this.model.dialogs.length) {\n\t\t\tthis.currentDialog = this.model.dialogs[0];\n\n\t\t\tlet result: IDialogResult | Error | undefined = undefined;\n\t\t\ttry {\n\t\t\t\tif (this.currentDialog.args.confirmArgs) {\n\t\t\t\t\tconst args = this.currentDialog.args.confirmArgs;\n\t\t\t\t\tresult = await this.impl.value.confirm(args.confirmation);\n\t\t\t\t} else if (this.currentDialog.args.inputArgs) {\n\t\t\t\t\tconst args = this.currentDialog.args.inputArgs;\n\t\t\t\t\tresult = await this.impl.value.input(args.input);\n\t\t\t\t} else if (this.currentDialog.args.promptArgs) {\n\t\t\t\t\tconst args = this.currentDialog.args.promptArgs;\n\t\t\t\t\tresult = await this.impl.value.prompt(args.prompt);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.impl.value.about();\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tresult = error;\n\t\t\t}\n\n\t\t\tthis.currentDialog.close(result);\n\t\t\tthis.currentDialog = undefined;\n\t\t}\n\t}\n}\n\nregisterWorkbenchContribution2(\n\tDialogHandlerContribution.ID,\n\tDialogHandlerContribution,\n\tWorkbenchPhase.BlockStartup // Block to allow for dialogs to show before restore finished\n);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,yBAAyB;AAClC,SAAS,gBAAgB,eAAe,sBAAsB;AAC9D,SAAS,0BAA0B;AACnC,SAAS,sBAAsB;AAC/B,SAAS,mBAAmB;AAC5B,SAAS,uBAAuB;AAChC,SAAS,wBAAwB,gBAAgB,sCAAsC;AACvF,SAAS,eAAe,uBAAuB;AAC/C,SAAS,4BAA4B;AACrC,SAAS,qBAAqB;AAC9B,SAAS,kBAAkB;AAC3B,SAAS,6BAA6B;AACtC,SAAS,YAAY;AAEd,IAAM,4BAAN,cAAwC,WAA6C;AAAA,EAS3F,YACyB,eACX,YACG,eACI,mBACG,sBACN,gBACE,kBAClB;AACD,UAAM;AARkB;AAUxB,SAAK,OAAO,IAAI,KAAK,MAAM,IAAI,qBAAqB,YAAY,eAAe,mBAAmB,sBAAsB,gBAAgB,gBAAgB,CAAC;AAEzJ,SAAK,QAAS,KAAK,cAAgC;AAEnD,SAAK,UAAU,KAAK,MAAM,iBAAiB,MAAM;AAChD,UAAI,CAAC,KAAK,eAAe;AACxB,aAAK,eAAe;AAAA,MACrB;AAAA,IACD,CAAC,CAAC;AAEF,SAAK,eAAe;AAAA,EACrB;AAAA,EAlDD,OAmB4F;AAAA;AAAA;AAAA,EAE3F,OAAgB,KAAK;AAAA,EAEJ;AAAA,EACA;AAAA,EAET;AAAA,EA0BR,MAAc,iBAAgC;AAC7C,WAAO,KAAK,MAAM,QAAQ,QAAQ;AACjC,WAAK,gBAAgB,KAAK,MAAM,QAAQ,CAAC;AAEzC,UAAI,SAA4C;AAChD,UAAI;AACH,YAAI,KAAK,cAAc,KAAK,aAAa;AACxC,gBAAM,OAAO,KAAK,cAAc,KAAK;AACrC,mBAAS,MAAM,KAAK,KAAK,MAAM,QAAQ,KAAK,YAAY;AAAA,QACzD,WAAW,KAAK,cAAc,KAAK,WAAW;AAC7C,gBAAM,OAAO,KAAK,cAAc,KAAK;AACrC,mBAAS,MAAM,KAAK,KAAK,MAAM,MAAM,KAAK,KAAK;AAAA,QAChD,WAAW,KAAK,cAAc,KAAK,YAAY;AAC9C,gBAAM,OAAO,KAAK,cAAc,KAAK;AACrC,mBAAS,MAAM,KAAK,KAAK,MAAM,OAAO,KAAK,MAAM;AAAA,QAClD,OAAO;AACN,gBAAM,KAAK,KAAK,MAAM,MAAM;AAAA,QAC7B;AAAA,MACD,SAAS,OAAO;AACf,iBAAS;AAAA,MACV;AAEA,WAAK,cAAc,MAAM,MAAM;AAC/B,WAAK,gBAAgB;AAAA,IACtB;AAAA,EACD;AACD;AA3Da,4BAAN;AAAA,EAUJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAhBU;AA6Db;AAAA,EACC,0BAA0B;AAAA,EAC1B;AAAA,EACA,eAAe;AAAA;AAChB;",
  "names": []
}
