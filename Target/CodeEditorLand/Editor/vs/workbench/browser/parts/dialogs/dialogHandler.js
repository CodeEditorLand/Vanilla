var f=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var b=(u,n,e,t)=>{for(var o=t>1?void 0:t?k(n,e):n,i=u.length-1,r;i>=0;i--)(r=u[i])&&(o=(t?r(n,e,o):r(o))||o);return t&&o&&f(n,e,o),o},s=(u,n)=>(e,t)=>n(e,t,u);import{EventHelper as C}from"../../../../base/browser/dom.js";import{Dialog as w}from"../../../../base/browser/ui/dialog/dialog.js";import{fromNow as D}from"../../../../base/common/date.js";import{DisposableStore as x}from"../../../../base/common/lifecycle.js";import A from"../../../../base/common/severity.js";import{MarkdownRenderer as L}from"../../../../editor/browser/widget/markdownRenderer/browser/markdownRenderer.js";import{localize as v}from"../../../../nls.js";import{IClipboardService as P}from"../../../../platform/clipboard/common/clipboardService.js";import{AbstractDialogHandler as R}from"../../../../platform/dialogs/common/dialogs.js";import{IInstantiationService as E}from"../../../../platform/instantiation/common/instantiation.js";import{IKeybindingService as T}from"../../../../platform/keybinding/common/keybinding.js";import{ResultKind as B}from"../../../../platform/keybinding/common/keybindingResolver.js";import{ILayoutService as K}from"../../../../platform/layout/browser/layoutService.js";import{ILogService as M}from"../../../../platform/log/common/log.js";import{IProductService as j}from"../../../../platform/product/common/productService.js";import{defaultButtonStyles as N,defaultCheckboxStyles as O,defaultDialogStyles as U,defaultInputBoxStyles as q}from"../../../../platform/theme/browser/defaultStyles.js";let d=class extends R{constructor(e,t,o,i,r,m){super();this.logService=e;this.layoutService=t;this.keybindingService=o;this.instantiationService=i;this.productService=r;this.clipboardService=m}static ALLOWABLE_COMMANDS=["copy","cut","editor.action.selectAll","editor.action.clipboardCopyAction","editor.action.clipboardCutAction","editor.action.clipboardPasteAction"];markdownRenderer=this.instantiationService.createInstance(L,{});async prompt(e){this.logService.trace("DialogService#prompt",e.message);const t=this.getPromptButtons(e),{button:o,checkboxChecked:i}=await this.doShow(e.type,e.message,t,e.detail,e.cancelButton?t.length-1:-1,e.checkbox,void 0,typeof e?.custom=="object"?e.custom:void 0);return this.getPromptResult(e,o,i)}async confirm(e){this.logService.trace("DialogService#confirm",e.message);const t=this.getConfirmationButtons(e),{button:o,checkboxChecked:i}=await this.doShow(e.type??"question",e.message,t,e.detail,t.length-1,e.checkbox,void 0,typeof e?.custom=="object"?e.custom:void 0);return{confirmed:o===0,checkboxChecked:i}}async input(e){this.logService.trace("DialogService#input",e.message);const t=this.getInputButtons(e),{button:o,checkboxChecked:i,values:r}=await this.doShow(e.type??"question",e.message,t,e.detail,t.length-1,e?.checkbox,e.inputs,typeof e.custom=="object"?e.custom:void 0);return{confirmed:o===0,checkboxChecked:i,values:r}}async about(){const e=r=>v("aboutDetail",`Version: {0}
Commit: {1}
Date: {2}
Browser: {3}`,this.productService.version||"Unknown",this.productService.commit||"Unknown",this.productService.date?`${this.productService.date}${r?" ("+D(new Date(this.productService.date),!0)+")":""}`:"Unknown",navigator.userAgent),t=e(!0),o=e(!1),{button:i}=await this.doShow(A.Info,this.productService.nameLong,[v({key:"copy",comment:["&& denotes a mnemonic"]},"&&Copy"),v("ok","OK")],t,1);i===0&&this.clipboardService.writeText(o)}async doShow(e,t,o,i,r,m,h,a){const p=new x,I=a?l=>{l.classList.add(...a.classes||[]),a.markdownDetails?.forEach(c=>{const y=this.markdownRenderer.render(c.markdown);l.appendChild(y.element),y.element.classList.add(...c.classes||[]),p.add(y)})}:void 0,S=new w(this.layoutService.activeContainer,t,o,{detail:i,cancelId:r,type:this.getDialogType(e),keyEventProcessor:l=>{const c=this.keybindingService.softDispatch(l,this.layoutService.activeContainer);c.kind===B.KbFound&&c.commandId&&d.ALLOWABLE_COMMANDS.indexOf(c.commandId)===-1&&C.stop(l,!0)},renderBody:I,icon:a?.icon,disableCloseAction:a?.disableCloseAction,buttonDetails:a?.buttonDetails,checkboxLabel:m?.label,checkboxChecked:m?.checked,inputs:h,buttonStyles:N,checkboxStyles:O,inputBoxStyles:q,dialogStyles:U});p.add(S);const g=await S.show();return p.dispose(),g}};d=b([s(0,M),s(1,K),s(2,T),s(3,E),s(4,j),s(5,P)],d);export{d as BrowserDialogHandler};
