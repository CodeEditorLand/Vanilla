{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/dialogs/dialogHandler.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../../nls.js';\nimport { IConfirmation, IConfirmationResult, IInputResult, ICheckbox, IInputElement, ICustomDialogOptions, IInput, AbstractDialogHandler, DialogType, IPrompt, IAsyncPromptResult } from '../../../../platform/dialogs/common/dialogs.js';\nimport { ILayoutService } from '../../../../platform/layout/browser/layoutService.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport Severity from '../../../../base/common/severity.js';\nimport { Dialog, IDialogResult } from '../../../../base/browser/ui/dialog/dialog.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { StandardKeyboardEvent } from '../../../../base/browser/keyboardEvent.js';\nimport { EventHelper } from '../../../../base/browser/dom.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { IProductService } from '../../../../platform/product/common/productService.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { fromNow } from '../../../../base/common/date.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { MarkdownRenderer } from '../../../../editor/browser/widget/markdownRenderer/browser/markdownRenderer.js';\nimport { defaultButtonStyles, defaultCheckboxStyles, defaultDialogStyles, defaultInputBoxStyles } from '../../../../platform/theme/browser/defaultStyles.js';\nimport { ResultKind } from '../../../../platform/keybinding/common/keybindingResolver.js';\n\nexport class BrowserDialogHandler extends AbstractDialogHandler {\n\n\tprivate static readonly ALLOWABLE_COMMANDS = [\n\t\t'copy',\n\t\t'cut',\n\t\t'editor.action.selectAll',\n\t\t'editor.action.clipboardCopyAction',\n\t\t'editor.action.clipboardCutAction',\n\t\t'editor.action.clipboardPasteAction'\n\t];\n\n\tprivate readonly markdownRenderer = this.instantiationService.createInstance(MarkdownRenderer, {});\n\n\tconstructor(\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@ILayoutService private readonly layoutService: ILayoutService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IClipboardService private readonly clipboardService: IClipboardService\n\t) {\n\t\tsuper();\n\t}\n\n\tasync prompt<T>(prompt: IPrompt<T>): Promise<IAsyncPromptResult<T>> {\n\t\tthis.logService.trace('DialogService#prompt', prompt.message);\n\n\t\tconst buttons = this.getPromptButtons(prompt);\n\n\t\tconst { button, checkboxChecked } = await this.doShow(prompt.type, prompt.message, buttons, prompt.detail, prompt.cancelButton ? buttons.length - 1 : -1 /* Disabled */, prompt.checkbox, undefined, typeof prompt?.custom === 'object' ? prompt.custom : undefined);\n\n\t\treturn this.getPromptResult(prompt, button, checkboxChecked);\n\t}\n\n\tasync confirm(confirmation: IConfirmation): Promise<IConfirmationResult> {\n\t\tthis.logService.trace('DialogService#confirm', confirmation.message);\n\n\t\tconst buttons = this.getConfirmationButtons(confirmation);\n\n\t\tconst { button, checkboxChecked } = await this.doShow(confirmation.type ?? 'question', confirmation.message, buttons, confirmation.detail, buttons.length - 1, confirmation.checkbox, undefined, typeof confirmation?.custom === 'object' ? confirmation.custom : undefined);\n\n\t\treturn { confirmed: button === 0, checkboxChecked };\n\t}\n\n\tasync input(input: IInput): Promise<IInputResult> {\n\t\tthis.logService.trace('DialogService#input', input.message);\n\n\t\tconst buttons = this.getInputButtons(input);\n\n\t\tconst { button, checkboxChecked, values } = await this.doShow(input.type ?? 'question', input.message, buttons, input.detail, buttons.length - 1, input?.checkbox, input.inputs, typeof input.custom === 'object' ? input.custom : undefined);\n\n\t\treturn { confirmed: button === 0, checkboxChecked, values };\n\t}\n\n\tasync about(): Promise<void> {\n\t\tconst detailString = (useAgo: boolean): string => {\n\t\t\treturn localize('aboutDetail',\n\t\t\t\t\"Version: {0}\\nCommit: {1}\\nDate: {2}\\nBrowser: {3}\",\n\t\t\t\tthis.productService.version || 'Unknown',\n\t\t\t\tthis.productService.commit || 'Unknown',\n\t\t\t\tthis.productService.date ? `${this.productService.date}${useAgo ? ' (' + fromNow(new Date(this.productService.date), true) + ')' : ''}` : 'Unknown',\n\t\t\t\tnavigator.userAgent\n\t\t\t);\n\t\t};\n\n\t\tconst detail = detailString(true);\n\t\tconst detailToCopy = detailString(false);\n\n\t\tconst { button } = await this.doShow(\n\t\t\tSeverity.Info,\n\t\t\tthis.productService.nameLong,\n\t\t\t[\n\t\t\t\tlocalize({ key: 'copy', comment: ['&& denotes a mnemonic'] }, \"&&Copy\"),\n\t\t\t\tlocalize('ok', \"OK\")\n\t\t\t],\n\t\t\tdetail,\n\t\t\t1\n\t\t);\n\n\t\tif (button === 0) {\n\t\t\tthis.clipboardService.writeText(detailToCopy);\n\t\t}\n\t}\n\n\tprivate async doShow(type: Severity | DialogType | undefined, message: string, buttons?: string[], detail?: string, cancelId?: number, checkbox?: ICheckbox, inputs?: IInputElement[], customOptions?: ICustomDialogOptions): Promise<IDialogResult> {\n\t\tconst dialogDisposables = new DisposableStore();\n\n\t\tconst renderBody = customOptions ? (parent: HTMLElement) => {\n\t\t\tparent.classList.add(...(customOptions.classes || []));\n\t\t\tcustomOptions.markdownDetails?.forEach(markdownDetail => {\n\t\t\t\tconst result = this.markdownRenderer.render(markdownDetail.markdown);\n\t\t\t\tparent.appendChild(result.element);\n\t\t\t\tresult.element.classList.add(...(markdownDetail.classes || []));\n\t\t\t\tdialogDisposables.add(result);\n\t\t\t});\n\t\t} : undefined;\n\n\t\tconst dialog = new Dialog(\n\t\t\tthis.layoutService.activeContainer,\n\t\t\tmessage,\n\t\t\tbuttons,\n\t\t\t{\n\t\t\t\tdetail,\n\t\t\t\tcancelId,\n\t\t\t\ttype: this.getDialogType(type),\n\t\t\t\tkeyEventProcessor: (event: StandardKeyboardEvent) => {\n\t\t\t\t\tconst resolved = this.keybindingService.softDispatch(event, this.layoutService.activeContainer);\n\t\t\t\t\tif (resolved.kind === ResultKind.KbFound && resolved.commandId) {\n\t\t\t\t\t\tif (BrowserDialogHandler.ALLOWABLE_COMMANDS.indexOf(resolved.commandId) === -1) {\n\t\t\t\t\t\t\tEventHelper.stop(event, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\trenderBody,\n\t\t\t\ticon: customOptions?.icon,\n\t\t\t\tdisableCloseAction: customOptions?.disableCloseAction,\n\t\t\t\tbuttonDetails: customOptions?.buttonDetails,\n\t\t\t\tcheckboxLabel: checkbox?.label,\n\t\t\t\tcheckboxChecked: checkbox?.checked,\n\t\t\t\tinputs,\n\t\t\t\tbuttonStyles: defaultButtonStyles,\n\t\t\t\tcheckboxStyles: defaultCheckboxStyles,\n\t\t\t\tinputBoxStyles: defaultInputBoxStyles,\n\t\t\t\tdialogStyles: defaultDialogStyles\n\t\t\t}\n\t\t);\n\n\t\tdialogDisposables.add(dialog);\n\n\t\tconst result = await dialog.show();\n\t\tdialogDisposables.dispose();\n\n\t\treturn result;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["result"]
}
