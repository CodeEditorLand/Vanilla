{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/statusbar/statusbarActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getActiveWindow } from \"../../../../base/browser/dom.js\";\nimport { Action } from \"../../../../base/common/actions.js\";\nimport { KeyCode } from \"../../../../base/common/keyCodes.js\";\nimport type { ServicesAccessor } from \"../../../../editor/browser/editorExtensions.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport { Categories } from \"../../../../platform/action/common/actionCommonCategories.js\";\nimport {\n\tAction2,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport {\n\tKeybindingWeight,\n\tKeybindingsRegistry,\n} from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { StatusBarFocused } from \"../../../common/contextkeys.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport {\n\tIWorkbenchLayoutService,\n\tParts,\n} from \"../../../services/layout/browser/layoutService.js\";\nimport { IStatusbarService } from \"../../../services/statusbar/browser/statusbar.js\";\nimport type { StatusbarViewModel } from \"./statusbarModel.js\";\n\nexport class ToggleStatusbarEntryVisibilityAction extends Action {\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\tprivate model: StatusbarViewModel,\n\t) {\n\t\tsuper(id, label, undefined, true);\n\n\t\tthis.checked = !model.isHidden(id);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tif (this.model.isHidden(this.id)) {\n\t\t\tthis.model.show(this.id);\n\t\t} else {\n\t\t\tthis.model.hide(this.id);\n\t\t}\n\t}\n}\n\nexport class HideStatusbarEntryAction extends Action {\n\tconstructor(\n\t\tid: string,\n\t\tname: string,\n\t\tprivate model: StatusbarViewModel,\n\t) {\n\t\tsuper(id, localize(\"hide\", \"Hide '{0}'\", name), undefined, true);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tthis.model.hide(this.id);\n\t}\n}\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"workbench.statusBar.focusPrevious\",\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyCode.LeftArrow,\n\tsecondary: [KeyCode.UpArrow],\n\twhen: StatusBarFocused,\n\thandler: (accessor: ServicesAccessor) => {\n\t\tconst statusBarService = accessor.get(IStatusbarService);\n\t\tstatusBarService.focusPreviousEntry();\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"workbench.statusBar.focusNext\",\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyCode.RightArrow,\n\tsecondary: [KeyCode.DownArrow],\n\twhen: StatusBarFocused,\n\thandler: (accessor: ServicesAccessor) => {\n\t\tconst statusBarService = accessor.get(IStatusbarService);\n\t\tstatusBarService.focusNextEntry();\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"workbench.statusBar.focusFirst\",\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyCode.Home,\n\twhen: StatusBarFocused,\n\thandler: (accessor: ServicesAccessor) => {\n\t\tconst statusBarService = accessor.get(IStatusbarService);\n\t\tstatusBarService.focus(false);\n\t\tstatusBarService.focusNextEntry();\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"workbench.statusBar.focusLast\",\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyCode.End,\n\twhen: StatusBarFocused,\n\thandler: (accessor: ServicesAccessor) => {\n\t\tconst statusBarService = accessor.get(IStatusbarService);\n\t\tstatusBarService.focus(false);\n\t\tstatusBarService.focusPreviousEntry();\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"workbench.statusBar.clearFocus\",\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyCode.Escape,\n\twhen: StatusBarFocused,\n\thandler: (accessor: ServicesAccessor) => {\n\t\tconst statusBarService = accessor.get(IStatusbarService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tif (statusBarService.isEntryFocused()) {\n\t\t\tstatusBarService.focus(false);\n\t\t} else if (editorService.activeEditorPane) {\n\t\t\teditorService.activeEditorPane.focus();\n\t\t}\n\t},\n});\n\nclass FocusStatusBarAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.focusStatusBar\",\n\t\t\ttitle: localize2(\"focusStatusBar\", \"Focus Status Bar\"),\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\t\tlayoutService.focusPart(Parts.STATUSBAR_PART, getActiveWindow());\n\t}\n}\n\nregisterAction2(FocusStatusBarAction);\n"],
  "mappings": "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",
  "names": []
}
