{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/statusbar/statusbarItem.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tEventHelper,\n\tEventType,\n\taddDisposableListener,\n\tappend,\n\thide,\n\tshow,\n} from \"../../../../base/browser/dom.js\";\nimport { StandardKeyboardEvent } from \"../../../../base/browser/keyboardEvent.js\";\nimport {\n\tGesture,\n\tEventType as TouchEventType,\n} from \"../../../../base/browser/touch.js\";\nimport type { IManagedHover } from \"../../../../base/browser/ui/hover/hover.js\";\nimport type { IHoverDelegate } from \"../../../../base/browser/ui/hover/hoverDelegate.js\";\nimport {\n\trenderIcon,\n\trenderLabelWithIcons,\n} from \"../../../../base/browser/ui/iconLabel/iconLabels.js\";\nimport { SimpleIconLabel } from \"../../../../base/browser/ui/iconLabel/simpleIconLabel.js\";\nimport type {\n\tWorkbenchActionExecutedClassification,\n\tWorkbenchActionExecutedEvent,\n} from \"../../../../base/common/actions.js\";\nimport { toErrorMessage } from \"../../../../base/common/errorMessage.js\";\nimport {\n\tisMarkdownString,\n\tmarkdownStringEqual,\n} from \"../../../../base/common/htmlContent.js\";\nimport { KeyCode } from \"../../../../base/common/keyCodes.js\";\nimport {\n\tDisposable,\n\tMutableDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport type { ThemeColor } from \"../../../../base/common/themables.js\";\nimport { assertIsDefined } from \"../../../../base/common/types.js\";\nimport { isThemeColor } from \"../../../../editor/common/editorCommon.js\";\nimport type { Command } from \"../../../../editor/common/languages.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport { INotificationService } from \"../../../../platform/notification/common/notification.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport {\n\tspinningLoading,\n\tsyncing,\n} from \"../../../../platform/theme/common/iconRegistry.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport {\n\ttype IStatusbarEntry,\n\tShowTooltipCommand,\n\tStatusbarEntryKinds,\n} from \"../../../services/statusbar/browser/statusbar.js\";\n\nexport class StatusbarEntryItem extends Disposable {\n\tprivate readonly label: StatusBarCodiconLabel;\n\n\tprivate entry: IStatusbarEntry | undefined = undefined;\n\n\tprivate readonly foregroundListener = this._register(\n\t\tnew MutableDisposable(),\n\t);\n\tprivate readonly backgroundListener = this._register(\n\t\tnew MutableDisposable(),\n\t);\n\n\tprivate readonly commandMouseListener = this._register(\n\t\tnew MutableDisposable(),\n\t);\n\tprivate readonly commandTouchListener = this._register(\n\t\tnew MutableDisposable(),\n\t);\n\tprivate readonly commandKeyboardListener = this._register(\n\t\tnew MutableDisposable(),\n\t);\n\tprivate readonly focusListener = this._register(new MutableDisposable());\n\tprivate readonly focusOutListener = this._register(new MutableDisposable());\n\n\tprivate hover: IManagedHover | undefined = undefined;\n\n\treadonly labelContainer: HTMLElement;\n\treadonly beakContainer: HTMLElement;\n\n\tget name(): string {\n\t\treturn assertIsDefined(this.entry).name;\n\t}\n\n\tget hasCommand(): boolean {\n\t\treturn typeof this.entry?.command !== \"undefined\";\n\t}\n\n\tconstructor(\n\t\tprivate container: HTMLElement,\n\t\tentry: IStatusbarEntry,\n\t\tprivate readonly hoverDelegate: IHoverDelegate,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IThemeService private readonly themeService: IThemeService\n\t) {\n\t\tsuper();\n\n\t\t// Label Container\n\t\tthis.labelContainer = document.createElement('a');\n\t\tthis.labelContainer.tabIndex = -1; // allows screen readers to read title, but still prevents tab focus.\n\t\tthis.labelContainer.setAttribute('role', 'button');\n\t\tthis.labelContainer.className = 'statusbar-item-label';\n\t\tthis._register(Gesture.addTarget(this.labelContainer)); // enable touch\n\n\t\t// Label (with support for progress)\n\t\tthis.label = this._register(new StatusBarCodiconLabel(this.labelContainer));\n\t\tthis.container.appendChild(this.labelContainer);\n\n\t\t// Beak Container\n\t\tthis.beakContainer = document.createElement('div');\n\t\tthis.beakContainer.className = 'status-bar-item-beak-container';\n\t\tthis.container.appendChild(this.beakContainer);\n\n\t\tthis.update(entry);\n\t}\n\n\tupdate(entry: IStatusbarEntry): void {\n\t\t// Update: Progress\n\t\tthis.label.showProgress = entry.showProgress ?? false;\n\n\t\t// Update: Text\n\t\tif (!this.entry || entry.text !== this.entry.text) {\n\t\t\tthis.label.text = entry.text;\n\n\t\t\tif (entry.text) {\n\t\t\t\tshow(this.labelContainer);\n\t\t\t} else {\n\t\t\t\thide(this.labelContainer);\n\t\t\t}\n\t\t}\n\n\t\t// Update: ARIA label\n\t\t//\n\t\t// Set the aria label on both elements so screen readers would read\n\t\t// the correct thing without duplication #96210\n\n\t\tif (!this.entry || entry.ariaLabel !== this.entry.ariaLabel) {\n\t\t\tthis.container.setAttribute(\"aria-label\", entry.ariaLabel);\n\t\t\tthis.labelContainer.setAttribute(\"aria-label\", entry.ariaLabel);\n\t\t}\n\n\t\tif (!this.entry || entry.role !== this.entry.role) {\n\t\t\tthis.labelContainer.setAttribute(\"role\", entry.role || \"button\");\n\t\t}\n\n\t\t// Update: Hover\n\t\tif (!this.entry || !this.isEqualTooltip(this.entry, entry)) {\n\t\t\tconst hoverContents = isMarkdownString(entry.tooltip)\n\t\t\t\t? {\n\t\t\t\t\t\tmarkdown: entry.tooltip,\n\t\t\t\t\t\tmarkdownNotSupportedFallback: undefined,\n\t\t\t\t\t}\n\t\t\t\t: entry.tooltip;\n\t\t\tif (this.hover) {\n\t\t\t\tthis.hover.update(hoverContents);\n\t\t\t} else {\n\t\t\t\tthis.hover = this._register(\n\t\t\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\t\t\tthis.hoverDelegate,\n\t\t\t\t\t\tthis.container,\n\t\t\t\t\t\thoverContents,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (\n\t\t\t\tentry.command !==\n\t\t\t\tShowTooltipCommand /* prevents flicker on click */\n\t\t\t) {\n\t\t\t\tthis.focusListener.value = addDisposableListener(\n\t\t\t\t\tthis.labelContainer,\n\t\t\t\t\tEventType.FOCUS,\n\t\t\t\t\t(e) => {\n\t\t\t\t\t\tEventHelper.stop(e);\n\t\t\t\t\t\tthis.hover?.show(false);\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t\tthis.focusOutListener.value = addDisposableListener(\n\t\t\t\t\tthis.labelContainer,\n\t\t\t\t\tEventType.FOCUS_OUT,\n\t\t\t\t\t(e) => {\n\t\t\t\t\t\tEventHelper.stop(e);\n\t\t\t\t\t\tthis.hover?.hide();\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// Update: Command\n\t\tif (!this.entry || entry.command !== this.entry.command) {\n\t\t\tthis.commandMouseListener.clear();\n\t\t\tthis.commandTouchListener.clear();\n\t\t\tthis.commandKeyboardListener.clear();\n\n\t\t\tconst command = entry.command;\n\t\t\tif (\n\t\t\t\tcommand &&\n\t\t\t\t(command !== ShowTooltipCommand ||\n\t\t\t\t\tthis\n\t\t\t\t\t\t.hover) /* \"Show Hover\" is only valid when we have a hover */\n\t\t\t) {\n\t\t\t\tthis.commandMouseListener.value = addDisposableListener(\n\t\t\t\t\tthis.labelContainer,\n\t\t\t\t\tEventType.CLICK,\n\t\t\t\t\t() => this.executeCommand(command),\n\t\t\t\t);\n\t\t\t\tthis.commandTouchListener.value = addDisposableListener(\n\t\t\t\t\tthis.labelContainer,\n\t\t\t\t\tTouchEventType.Tap,\n\t\t\t\t\t() => this.executeCommand(command),\n\t\t\t\t);\n\t\t\t\tthis.commandKeyboardListener.value = addDisposableListener(\n\t\t\t\t\tthis.labelContainer,\n\t\t\t\t\tEventType.KEY_DOWN,\n\t\t\t\t\t(e) => {\n\t\t\t\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tevent.equals(KeyCode.Space) ||\n\t\t\t\t\t\t\tevent.equals(KeyCode.Enter)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tEventHelper.stop(e);\n\n\t\t\t\t\t\t\tthis.executeCommand(command);\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tevent.equals(KeyCode.Escape) ||\n\t\t\t\t\t\t\tevent.equals(KeyCode.LeftArrow) ||\n\t\t\t\t\t\t\tevent.equals(KeyCode.RightArrow)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tEventHelper.stop(e);\n\n\t\t\t\t\t\t\tthis.hover?.hide();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t);\n\n\t\t\t\tthis.labelContainer.classList.remove(\"disabled\");\n\t\t\t} else {\n\t\t\t\tthis.labelContainer.classList.add(\"disabled\");\n\t\t\t}\n\t\t}\n\n\t\t// Update: Beak\n\t\tif (!this.entry || entry.showBeak !== this.entry.showBeak) {\n\t\t\tif (entry.showBeak) {\n\t\t\t\tthis.container.classList.add(\"has-beak\");\n\t\t\t} else {\n\t\t\t\tthis.container.classList.remove(\"has-beak\");\n\t\t\t}\n\t\t}\n\n\t\tconst hasBackgroundColor =\n\t\t\t!!entry.backgroundColor ||\n\t\t\t(entry.kind && entry.kind !== \"standard\");\n\n\t\t// Update: Kind\n\t\tif (!this.entry || entry.kind !== this.entry.kind) {\n\t\t\tfor (const kind of StatusbarEntryKinds) {\n\t\t\t\tthis.container.classList.remove(`${kind}-kind`);\n\t\t\t}\n\n\t\t\tif (entry.kind && entry.kind !== \"standard\") {\n\t\t\t\tthis.container.classList.add(`${entry.kind}-kind`);\n\t\t\t}\n\n\t\t\tthis.container.classList.toggle(\n\t\t\t\t\"has-background-color\",\n\t\t\t\thasBackgroundColor,\n\t\t\t);\n\t\t}\n\n\t\t// Update: Foreground\n\t\tif (!this.entry || entry.color !== this.entry.color) {\n\t\t\tthis.applyColor(this.labelContainer, entry.color);\n\t\t}\n\n\t\t// Update: Background\n\t\tif (\n\t\t\t!this.entry ||\n\t\t\tentry.backgroundColor !== this.entry.backgroundColor\n\t\t) {\n\t\t\tthis.container.classList.toggle(\n\t\t\t\t\"has-background-color\",\n\t\t\t\thasBackgroundColor,\n\t\t\t);\n\t\t\tthis.applyColor(this.container, entry.backgroundColor, true);\n\t\t}\n\n\t\t// Remember for next round\n\t\tthis.entry = entry;\n\t}\n\n\tprivate isEqualTooltip(\n\t\t{ tooltip }: IStatusbarEntry,\n\t\t{ tooltip: otherTooltip }: IStatusbarEntry,\n\t) {\n\t\tif (tooltip === undefined) {\n\t\t\treturn otherTooltip === undefined;\n\t\t}\n\n\t\tif (isMarkdownString(tooltip)) {\n\t\t\treturn (\n\t\t\t\tisMarkdownString(otherTooltip) &&\n\t\t\t\tmarkdownStringEqual(tooltip, otherTooltip)\n\t\t\t);\n\t\t}\n\n\t\treturn tooltip === otherTooltip;\n\t}\n\n\tprivate async executeCommand(command: string | Command): Promise<void> {\n\t\t// Custom command from us: Show tooltip\n\t\tif (command === ShowTooltipCommand) {\n\t\t\tthis.hover?.show(true /* focus */);\n\t\t}\n\n\t\t// Any other command is going through command service\n\t\telse {\n\t\t\tconst id = typeof command === \"string\" ? command : command.id;\n\t\t\tconst args =\n\t\t\t\ttypeof command === \"string\" ? [] : (command.arguments ?? []);\n\n\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\tWorkbenchActionExecutedEvent,\n\t\t\t\tWorkbenchActionExecutedClassification\n\t\t\t>(\"workbenchActionExecuted\", { id, from: \"status bar\" });\n\t\t\ttry {\n\t\t\t\tawait this.commandService.executeCommand(id, ...args);\n\t\t\t} catch (error) {\n\t\t\t\tthis.notificationService.error(toErrorMessage(error));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate applyColor(\n\t\tcontainer: HTMLElement,\n\t\tcolor: string | ThemeColor | undefined,\n\t\tisBackground?: boolean,\n\t): void {\n\t\tlet colorResult: string | undefined;\n\n\t\tif (isBackground) {\n\t\t\tthis.backgroundListener.clear();\n\t\t} else {\n\t\t\tthis.foregroundListener.clear();\n\t\t}\n\n\t\tif (color) {\n\t\t\tif (isThemeColor(color)) {\n\t\t\t\tcolorResult = this.themeService\n\t\t\t\t\t.getColorTheme()\n\t\t\t\t\t.getColor(color.id)\n\t\t\t\t\t?.toString();\n\n\t\t\t\tconst listener = this.themeService.onDidColorThemeChange(\n\t\t\t\t\t(theme) => {\n\t\t\t\t\t\tconst colorValue = theme.getColor(color.id)?.toString();\n\n\t\t\t\t\t\tif (isBackground) {\n\t\t\t\t\t\t\tcontainer.style.backgroundColor = colorValue ?? \"\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontainer.style.color = colorValue ?? \"\";\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t);\n\n\t\t\t\tif (isBackground) {\n\t\t\t\t\tthis.backgroundListener.value = listener;\n\t\t\t\t} else {\n\t\t\t\t\tthis.foregroundListener.value = listener;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcolorResult = color;\n\t\t\t}\n\t\t}\n\n\t\tif (isBackground) {\n\t\t\tcontainer.style.backgroundColor = colorResult ?? \"\";\n\t\t} else {\n\t\t\tcontainer.style.color = colorResult ?? \"\";\n\t\t}\n\t}\n}\n\nclass StatusBarCodiconLabel extends SimpleIconLabel {\n\tprivate progressCodicon = renderIcon(syncing);\n\n\tprivate currentText = \"\";\n\tprivate currentShowProgress: boolean | \"loading\" | \"syncing\" = false;\n\n\tconstructor(private readonly container: HTMLElement) {\n\t\tsuper(container);\n\t}\n\n\tset showProgress(showProgress: boolean | \"loading\" | \"syncing\") {\n\t\tif (this.currentShowProgress !== showProgress) {\n\t\t\tthis.currentShowProgress = showProgress;\n\t\t\tthis.progressCodicon = renderIcon(\n\t\t\t\tshowProgress === \"syncing\" ? syncing : spinningLoading,\n\t\t\t);\n\t\t\tthis.text = this.currentText;\n\t\t}\n\t}\n\n\toverride set text(text: string) {\n\t\t// Progress: insert progress codicon as first element as needed\n\t\t// but keep it stable so that the animation does not reset\n\t\tif (this.currentShowProgress) {\n\t\t\t// Append as needed\n\t\t\tif (this.container.firstChild !== this.progressCodicon) {\n\t\t\t\tthis.container.appendChild(this.progressCodicon);\n\t\t\t}\n\n\t\t\t// Remove others\n\t\t\tfor (const node of Array.from(this.container.childNodes)) {\n\t\t\t\tif (node !== this.progressCodicon) {\n\t\t\t\t\tnode.remove();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we have text to show, add a space to separate from progress\n\t\t\tlet textContent = text ?? \"\";\n\t\t\tif (textContent) {\n\t\t\t\ttextContent = ` ${textContent}`;\n\t\t\t}\n\n\t\t\t// Append new elements\n\t\t\tappend(this.container, ...renderLabelWithIcons(textContent));\n\t\t}\n\n\t\t// No Progress: no special handling\n\t\telse {\n\t\t\tsuper.text = text;\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
