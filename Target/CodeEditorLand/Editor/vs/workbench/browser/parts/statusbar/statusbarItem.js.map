{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/statusbar/statusbarItem.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toErrorMessage } from '../../../../base/common/errorMessage.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { SimpleIconLabel } from '../../../../base/browser/ui/iconLabel/simpleIconLabel.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { IStatusbarEntry, ShowTooltipCommand, StatusbarEntryKinds } from '../../../services/statusbar/browser/statusbar.js';\nimport { WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification } from '../../../../base/common/actions.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { ThemeColor } from '../../../../base/common/themables.js';\nimport { isThemeColor } from '../../../../editor/common/editorCommon.js';\nimport { addDisposableListener, EventType, hide, show, append, EventHelper } from '../../../../base/browser/dom.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { assertIsDefined } from '../../../../base/common/types.js';\nimport { Command } from '../../../../editor/common/languages.js';\nimport { StandardKeyboardEvent } from '../../../../base/browser/keyboardEvent.js';\nimport { KeyCode } from '../../../../base/common/keyCodes.js';\nimport { renderIcon, renderLabelWithIcons } from '../../../../base/browser/ui/iconLabel/iconLabels.js';\nimport { spinningLoading, syncing } from '../../../../platform/theme/common/iconRegistry.js';\nimport { isMarkdownString, markdownStringEqual } from '../../../../base/common/htmlContent.js';\nimport { IHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegate.js';\nimport { Gesture, EventType as TouchEventType } from '../../../../base/browser/touch.js';\nimport type { IManagedHover } from '../../../../base/browser/ui/hover/hover.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\n\nexport class StatusbarEntryItem extends Disposable {\n\n\tprivate readonly label: StatusBarCodiconLabel;\n\n\tprivate entry: IStatusbarEntry | undefined = undefined;\n\n\tprivate readonly foregroundListener = this._register(new MutableDisposable());\n\tprivate readonly backgroundListener = this._register(new MutableDisposable());\n\n\tprivate readonly commandMouseListener = this._register(new MutableDisposable());\n\tprivate readonly commandTouchListener = this._register(new MutableDisposable());\n\tprivate readonly commandKeyboardListener = this._register(new MutableDisposable());\n\tprivate readonly focusListener = this._register(new MutableDisposable());\n\tprivate readonly focusOutListener = this._register(new MutableDisposable());\n\n\tprivate hover: IManagedHover | undefined = undefined;\n\n\treadonly labelContainer: HTMLElement;\n\treadonly beakContainer: HTMLElement;\n\n\tget name(): string {\n\t\treturn assertIsDefined(this.entry).name;\n\t}\n\n\tget hasCommand(): boolean {\n\t\treturn typeof this.entry?.command !== 'undefined';\n\t}\n\n\tconstructor(\n\t\tprivate container: HTMLElement,\n\t\tentry: IStatusbarEntry,\n\t\tprivate readonly hoverDelegate: IHoverDelegate,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IThemeService private readonly themeService: IThemeService\n\t) {\n\t\tsuper();\n\n\t\t// Label Container\n\t\tthis.labelContainer = document.createElement('a');\n\t\tthis.labelContainer.tabIndex = -1; // allows screen readers to read title, but still prevents tab focus.\n\t\tthis.labelContainer.setAttribute('role', 'button');\n\t\tthis.labelContainer.className = 'statusbar-item-label';\n\t\tthis._register(Gesture.addTarget(this.labelContainer)); // enable touch\n\n\t\t// Label (with support for progress)\n\t\tthis.label = this._register(new StatusBarCodiconLabel(this.labelContainer));\n\t\tthis.container.appendChild(this.labelContainer);\n\n\t\t// Beak Container\n\t\tthis.beakContainer = document.createElement('div');\n\t\tthis.beakContainer.className = 'status-bar-item-beak-container';\n\t\tthis.container.appendChild(this.beakContainer);\n\n\t\tthis.update(entry);\n\t}\n\n\tupdate(entry: IStatusbarEntry): void {\n\n\t\t// Update: Progress\n\t\tthis.label.showProgress = entry.showProgress ?? false;\n\n\t\t// Update: Text\n\t\tif (!this.entry || entry.text !== this.entry.text) {\n\t\t\tthis.label.text = entry.text;\n\n\t\t\tif (entry.text) {\n\t\t\t\tshow(this.labelContainer);\n\t\t\t} else {\n\t\t\t\thide(this.labelContainer);\n\t\t\t}\n\t\t}\n\n\t\t// Update: ARIA label\n\t\t//\n\t\t// Set the aria label on both elements so screen readers would read\n\t\t// the correct thing without duplication #96210\n\n\t\tif (!this.entry || entry.ariaLabel !== this.entry.ariaLabel) {\n\t\t\tthis.container.setAttribute('aria-label', entry.ariaLabel);\n\t\t\tthis.labelContainer.setAttribute('aria-label', entry.ariaLabel);\n\t\t}\n\n\t\tif (!this.entry || entry.role !== this.entry.role) {\n\t\t\tthis.labelContainer.setAttribute('role', entry.role || 'button');\n\t\t}\n\n\t\t// Update: Hover\n\t\tif (!this.entry || !this.isEqualTooltip(this.entry, entry)) {\n\t\t\tconst hoverContents = isMarkdownString(entry.tooltip) ? { markdown: entry.tooltip, markdownNotSupportedFallback: undefined } : entry.tooltip;\n\t\t\tif (this.hover) {\n\t\t\t\tthis.hover.update(hoverContents);\n\t\t\t} else {\n\t\t\t\tthis.hover = this._register(this.hoverService.setupManagedHover(this.hoverDelegate, this.container, hoverContents));\n\t\t\t}\n\t\t\tif (entry.command !== ShowTooltipCommand /* prevents flicker on click */) {\n\t\t\t\tthis.focusListener.value = addDisposableListener(this.labelContainer, EventType.FOCUS, e => {\n\t\t\t\t\tEventHelper.stop(e);\n\t\t\t\t\tthis.hover?.show(false);\n\t\t\t\t});\n\t\t\t\tthis.focusOutListener.value = addDisposableListener(this.labelContainer, EventType.FOCUS_OUT, e => {\n\t\t\t\t\tEventHelper.stop(e);\n\t\t\t\t\tthis.hover?.hide();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// Update: Command\n\t\tif (!this.entry || entry.command !== this.entry.command) {\n\t\t\tthis.commandMouseListener.clear();\n\t\t\tthis.commandTouchListener.clear();\n\t\t\tthis.commandKeyboardListener.clear();\n\n\t\t\tconst command = entry.command;\n\t\t\tif (command && (command !== ShowTooltipCommand || this.hover) /* \"Show Hover\" is only valid when we have a hover */) {\n\t\t\t\tthis.commandMouseListener.value = addDisposableListener(this.labelContainer, EventType.CLICK, () => this.executeCommand(command));\n\t\t\t\tthis.commandTouchListener.value = addDisposableListener(this.labelContainer, TouchEventType.Tap, () => this.executeCommand(command));\n\t\t\t\tthis.commandKeyboardListener.value = addDisposableListener(this.labelContainer, EventType.KEY_DOWN, e => {\n\t\t\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\t\t\tif (event.equals(KeyCode.Space) || event.equals(KeyCode.Enter)) {\n\t\t\t\t\t\tEventHelper.stop(e);\n\n\t\t\t\t\t\tthis.executeCommand(command);\n\t\t\t\t\t} else if (event.equals(KeyCode.Escape) || event.equals(KeyCode.LeftArrow) || event.equals(KeyCode.RightArrow)) {\n\t\t\t\t\t\tEventHelper.stop(e);\n\n\t\t\t\t\t\tthis.hover?.hide();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tthis.labelContainer.classList.remove('disabled');\n\t\t\t} else {\n\t\t\t\tthis.labelContainer.classList.add('disabled');\n\t\t\t}\n\t\t}\n\n\t\t// Update: Beak\n\t\tif (!this.entry || entry.showBeak !== this.entry.showBeak) {\n\t\t\tif (entry.showBeak) {\n\t\t\t\tthis.container.classList.add('has-beak');\n\t\t\t} else {\n\t\t\t\tthis.container.classList.remove('has-beak');\n\t\t\t}\n\t\t}\n\n\t\tconst hasBackgroundColor = !!entry.backgroundColor || (entry.kind && entry.kind !== 'standard');\n\n\t\t// Update: Kind\n\t\tif (!this.entry || entry.kind !== this.entry.kind) {\n\t\t\tfor (const kind of StatusbarEntryKinds) {\n\t\t\t\tthis.container.classList.remove(`${kind}-kind`);\n\t\t\t}\n\n\t\t\tif (entry.kind && entry.kind !== 'standard') {\n\t\t\t\tthis.container.classList.add(`${entry.kind}-kind`);\n\t\t\t}\n\n\t\t\tthis.container.classList.toggle('has-background-color', hasBackgroundColor);\n\t\t}\n\n\t\t// Update: Foreground\n\t\tif (!this.entry || entry.color !== this.entry.color) {\n\t\t\tthis.applyColor(this.labelContainer, entry.color);\n\t\t}\n\n\t\t// Update: Background\n\t\tif (!this.entry || entry.backgroundColor !== this.entry.backgroundColor) {\n\t\t\tthis.container.classList.toggle('has-background-color', hasBackgroundColor);\n\t\t\tthis.applyColor(this.container, entry.backgroundColor, true);\n\t\t}\n\n\t\t// Remember for next round\n\t\tthis.entry = entry;\n\t}\n\n\tprivate isEqualTooltip({ tooltip }: IStatusbarEntry, { tooltip: otherTooltip }: IStatusbarEntry) {\n\t\tif (tooltip === undefined) {\n\t\t\treturn otherTooltip === undefined;\n\t\t}\n\n\t\tif (isMarkdownString(tooltip)) {\n\t\t\treturn isMarkdownString(otherTooltip) && markdownStringEqual(tooltip, otherTooltip);\n\t\t}\n\n\t\treturn tooltip === otherTooltip;\n\t}\n\n\tprivate async executeCommand(command: string | Command): Promise<void> {\n\n\t\t// Custom command from us: Show tooltip\n\t\tif (command === ShowTooltipCommand) {\n\t\t\tthis.hover?.show(true /* focus */);\n\t\t}\n\n\t\t// Any other command is going through command service\n\t\telse {\n\t\t\tconst id = typeof command === 'string' ? command : command.id;\n\t\t\tconst args = typeof command === 'string' ? [] : command.arguments ?? [];\n\n\t\t\tthis.telemetryService.publicLog2<WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification>('workbenchActionExecuted', { id, from: 'status bar' });\n\t\t\ttry {\n\t\t\t\tawait this.commandService.executeCommand(id, ...args);\n\t\t\t} catch (error) {\n\t\t\t\tthis.notificationService.error(toErrorMessage(error));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate applyColor(container: HTMLElement, color: string | ThemeColor | undefined, isBackground?: boolean): void {\n\t\tlet colorResult: string | undefined = undefined;\n\n\t\tif (isBackground) {\n\t\t\tthis.backgroundListener.clear();\n\t\t} else {\n\t\t\tthis.foregroundListener.clear();\n\t\t}\n\n\t\tif (color) {\n\t\t\tif (isThemeColor(color)) {\n\t\t\t\tcolorResult = this.themeService.getColorTheme().getColor(color.id)?.toString();\n\n\t\t\t\tconst listener = this.themeService.onDidColorThemeChange(theme => {\n\t\t\t\t\tconst colorValue = theme.getColor(color.id)?.toString();\n\n\t\t\t\t\tif (isBackground) {\n\t\t\t\t\t\tcontainer.style.backgroundColor = colorValue ?? '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontainer.style.color = colorValue ?? '';\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (isBackground) {\n\t\t\t\t\tthis.backgroundListener.value = listener;\n\t\t\t\t} else {\n\t\t\t\t\tthis.foregroundListener.value = listener;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcolorResult = color;\n\t\t\t}\n\t\t}\n\n\t\tif (isBackground) {\n\t\t\tcontainer.style.backgroundColor = colorResult ?? '';\n\t\t} else {\n\t\t\tcontainer.style.color = colorResult ?? '';\n\t\t}\n\t}\n}\n\nclass StatusBarCodiconLabel extends SimpleIconLabel {\n\n\tprivate progressCodicon = renderIcon(syncing);\n\n\tprivate currentText = '';\n\tprivate currentShowProgress: boolean | 'loading' | 'syncing' = false;\n\n\tconstructor(\n\t\tprivate readonly container: HTMLElement\n\t) {\n\t\tsuper(container);\n\t}\n\n\tset showProgress(showProgress: boolean | 'loading' | 'syncing') {\n\t\tif (this.currentShowProgress !== showProgress) {\n\t\t\tthis.currentShowProgress = showProgress;\n\t\t\tthis.progressCodicon = renderIcon(showProgress === 'syncing' ? syncing : spinningLoading);\n\t\t\tthis.text = this.currentText;\n\t\t}\n\t}\n\n\toverride set text(text: string) {\n\n\t\t// Progress: insert progress codicon as first element as needed\n\t\t// but keep it stable so that the animation does not reset\n\t\tif (this.currentShowProgress) {\n\n\t\t\t// Append as needed\n\t\t\tif (this.container.firstChild !== this.progressCodicon) {\n\t\t\t\tthis.container.appendChild(this.progressCodicon);\n\t\t\t}\n\n\t\t\t// Remove others\n\t\t\tfor (const node of Array.from(this.container.childNodes)) {\n\t\t\t\tif (node !== this.progressCodicon) {\n\t\t\t\t\tnode.remove();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we have text to show, add a space to separate from progress\n\t\t\tlet textContent = text ?? '';\n\t\t\tif (textContent) {\n\t\t\t\ttextContent = ` ${textContent}`;\n\t\t\t}\n\n\t\t\t// Append new elements\n\t\t\tappend(this.container, ...renderLabelWithIcons(textContent));\n\t\t}\n\n\t\t// No Progress: no special handling\n\t\telse {\n\t\t\tsuper.text = text;\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
