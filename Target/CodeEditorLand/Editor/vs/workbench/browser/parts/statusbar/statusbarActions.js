import{getActiveWindow as m}from"../../../../../vs/base/browser/dom.js";import{Action as u}from"../../../../../vs/base/common/actions.js";import{KeyCode as i}from"../../../../../vs/base/common/keyCodes.js";import"../../../../../vs/editor/browser/editorExtensions.js";import{localize as h,localize2 as f}from"../../../../../vs/nls.js";import{Categories as g}from"../../../../../vs/platform/action/common/actionCommonCategories.js";import{Action2 as l,registerAction2 as v}from"../../../../../vs/platform/actions/common/actions.js";import{KeybindingsRegistry as s,KeybindingWeight as o}from"../../../../../vs/platform/keybinding/common/keybindingsRegistry.js";import"../../../../../vs/workbench/browser/parts/statusbar/statusbarModel.js";import{StatusBarFocused as c}from"../../../../../vs/workbench/common/contextkeys.js";import{IEditorService as S}from"../../../../../vs/workbench/services/editor/common/editorService.js";import{IWorkbenchLayoutService as b,Parts as y}from"../../../../../vs/workbench/services/layout/browser/layoutService.js";import{IStatusbarService as n}from"../../../../../vs/workbench/services/statusbar/browser/statusbar.js";class I extends u{constructor(t,a,d){super(t,a,void 0,!0);this.model=d;this.checked=!d.isHidden(t)}async run(){this.model.isHidden(this.id)?this.model.show(this.id):this.model.hide(this.id)}}class L extends u{constructor(t,a,d){super(t,h("hide","Hide '{0}'",a),void 0,!0);this.model=d}async run(){this.model.hide(this.id)}}s.registerCommandAndKeybindingRule({id:"workbench.statusBar.focusPrevious",weight:o.WorkbenchContrib,primary:i.LeftArrow,secondary:[i.UpArrow],when:c,handler:r=>{r.get(n).focusPreviousEntry()}}),s.registerCommandAndKeybindingRule({id:"workbench.statusBar.focusNext",weight:o.WorkbenchContrib,primary:i.RightArrow,secondary:[i.DownArrow],when:c,handler:r=>{r.get(n).focusNextEntry()}}),s.registerCommandAndKeybindingRule({id:"workbench.statusBar.focusFirst",weight:o.WorkbenchContrib,primary:i.Home,when:c,handler:r=>{const e=r.get(n);e.focus(!1),e.focusNextEntry()}}),s.registerCommandAndKeybindingRule({id:"workbench.statusBar.focusLast",weight:o.WorkbenchContrib,primary:i.End,when:c,handler:r=>{const e=r.get(n);e.focus(!1),e.focusPreviousEntry()}}),s.registerCommandAndKeybindingRule({id:"workbench.statusBar.clearFocus",weight:o.WorkbenchContrib,primary:i.Escape,when:c,handler:r=>{const e=r.get(n),t=r.get(S);e.isEntryFocused()?e.focus(!1):t.activeEditorPane&&t.activeEditorPane.focus()}});class p extends l{constructor(){super({id:"workbench.action.focusStatusBar",title:f("focusStatusBar","Focus Status Bar"),category:g.View,f1:!0})}async run(e){e.get(b).focusPart(y.STATUSBAR_PART,m())}}v(p);export{L as HideStatusbarEntryAction,I as ToggleStatusbarEntryVisibilityAction};
