{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/notifications/notificationsTelemetry.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { INotificationService, NotificationMessage, NotificationPriority } from '../../../../platform/notification/common/notification.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { IWorkbenchContribution } from '../../../common/contributions.js';\nimport { hash } from '../../../../base/common/hash.js';\n\nexport interface NotificationMetrics {\n\treadonly id: string;\n\treadonly silent: boolean;\n\treadonly source?: string;\n}\n\nexport type NotificationMetricsClassification = {\n\tid: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The identifier of the source of the notification.' };\n\tsilent: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Whether the notification is silent or not.' };\n\tsource?: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The source of the notification.' };\n\towner: 'bpasero';\n\tcomment: 'Helps us gain insights to what notifications are being shown, how many, and if they are silent or not.';\n};\n\nexport function notificationToMetrics(message: NotificationMessage, source: string | undefined, silent: boolean): NotificationMetrics {\n\treturn {\n\t\tid: hash(message.toString()).toString(),\n\t\tsilent,\n\t\tsource: source || 'core'\n\t};\n}\n\nexport class NotificationsTelemetry extends Disposable implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@INotificationService private readonly notificationService: INotificationService\n\t) {\n\t\tsuper();\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.notificationService.onDidAddNotification(notification => {\n\t\t\tconst source = notification.source && typeof notification.source !== 'string' ? notification.source.id : notification.source;\n\t\t\tthis.telemetryService.publicLog2<NotificationMetrics, NotificationMetricsClassification>('notification:show', notificationToMetrics(notification.message, source, notification.priority === NotificationPriority.SILENT));\n\t\t}));\n\n\t\tthis._register(this.notificationService.onDidRemoveNotification(notification => {\n\t\t\tconst source = notification.source && typeof notification.source !== 'string' ? notification.source.id : notification.source;\n\t\t\tthis.telemetryService.publicLog2<NotificationMetrics, NotificationMetricsClassification>('notification:close', notificationToMetrics(notification.message, source, notification.priority === NotificationPriority.SILENT));\n\t\t}));\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,kBAAkB;AAC3B,SAAS,sBAAsB,qBAAqB,4BAA4B;AAChF,SAAS,yBAAyB;AAClC,SAAS,8BAA8B;AACvC,SAAS,YAAY;AAgBd,SAAS,sBAAsB,SAA8B,QAA4B,QAAsC;AACrI,SAAO;AAAA,IACN,IAAI,KAAK,QAAQ,SAAS,CAAC,EAAE,SAAS;AAAA,IACtC;AAAA,IACA,QAAQ,UAAU;AAAA,EACnB;AACD;AANgB;AAQT,IAAM,yBAAN,cAAqC,WAA6C;AAAA,EAExF,YACqC,kBACG,qBACtC;AACD,UAAM;AAH8B;AACG;AAGvC,SAAK,kBAAkB;AAAA,EACxB;AAAA,EAzCD,OAiCyF;AAAA;AAAA;AAAA,EAUhF,oBAA0B;AACjC,SAAK,UAAU,KAAK,oBAAoB,qBAAqB,kBAAgB;AAC5E,YAAM,SAAS,aAAa,UAAU,OAAO,aAAa,WAAW,WAAW,aAAa,OAAO,KAAK,aAAa;AACtH,WAAK,iBAAiB,WAAmE,qBAAqB,sBAAsB,aAAa,SAAS,QAAQ,aAAa,aAAa,qBAAqB,MAAM,CAAC;AAAA,IACzN,CAAC,CAAC;AAEF,SAAK,UAAU,KAAK,oBAAoB,wBAAwB,kBAAgB;AAC/E,YAAM,SAAS,aAAa,UAAU,OAAO,aAAa,WAAW,WAAW,aAAa,OAAO,KAAK,aAAa;AACtH,WAAK,iBAAiB,WAAmE,sBAAsB,sBAAsB,aAAa,SAAS,QAAQ,aAAa,aAAa,qBAAqB,MAAM,CAAC;AAAA,IAC1N,CAAC,CAAC;AAAA,EACH;AACD;AArBa,yBAAN;AAAA,EAGJ;AAAA,EACA;AAAA,GAJU;",
  "names": []
}
