var w=Object.defineProperty;var B=Object.getOwnPropertyDescriptor;var a=(t,r,e,o)=>{for(var n=o>1?void 0:o?B(r,e):r,N=t.length-1,g;N>=0;N--)(g=t[N])&&(n=(o?g(r,e,n):g(n))||n);return o&&n&&w(r,e,n),n},s=(t,r)=>(e,o)=>r(e,o,t);import"./media/notificationsActions.css";import{Action as c}from"../../../../base/common/actions.js";import{Codicon as m}from"../../../../base/common/codicons.js";import{ThemeIcon as d}from"../../../../base/common/themables.js";import{localize as i}from"../../../../nls.js";import{IClipboardService as P}from"../../../../platform/clipboard/common/clipboardService.js";import{ICommandService as l}from"../../../../platform/commands/common/commands.js";import{registerIcon as I}from"../../../../platform/theme/common/iconRegistry.js";import{CLEAR_ALL_NOTIFICATIONS as h,CLEAR_NOTIFICATION as L,COLLAPSE_NOTIFICATION as D,EXPAND_NOTIFICATION as E,HIDE_NOTIFICATIONS_CENTER as O,TOGGLE_DO_NOT_DISTURB_MODE as _,TOGGLE_DO_NOT_DISTURB_MODE_BY_SOURCE as T}from"./notificationsCommands.js";const M=I("notifications-clear",m.close,i("clearIcon","Icon for the clear action in notifications.")),R=I("notifications-clear-all",m.clearAll,i("clearAllIcon","Icon for the clear all action in notifications.")),V=I("notifications-hide",m.chevronDown,i("hideIcon","Icon for the hide action in notifications.")),F=I("notifications-expand",m.chevronUp,i("expandIcon","Icon for the expand action in notifications.")),G=I("notifications-collapse",m.chevronDown,i("collapseIcon","Icon for the collapse action in notifications.")),U=I("notifications-configure",m.gear,i("configureIcon","Icon for the configure action in notifications.")),b=I("notifications-do-not-disturb",m.bellSlash,i("doNotDisturbIcon","Icon for the mute all action in notifications."));let v=class extends c{constructor(e,o,n){super(e,o,d.asClassName(M));this.commandService=n}static ID=L;static LABEL=i("clearNotification","Clear Notification");async run(e){this.commandService.executeCommand(L,e)}};v=a([s(2,l)],v);let u=class extends c{constructor(e,o,n){super(e,o,d.asClassName(R));this.commandService=n}static ID=h;static LABEL=i("clearNotifications","Clear All Notifications");async run(){this.commandService.executeCommand(h)}};u=a([s(2,l)],u);let p=class extends c{constructor(e,o,n){super(e,o,d.asClassName(b));this.commandService=n}static ID=_;static LABEL=i("toggleDoNotDisturbMode","Toggle Do Not Disturb Mode");async run(){this.commandService.executeCommand(_)}};p=a([s(2,l)],p);let f=class extends c{constructor(e,o,n){super(e,o);this.commandService=n}static ID=T;static LABEL=i("toggleDoNotDisturbModeBySource","Toggle Do Not Disturb Mode By Source...");async run(){this.commandService.executeCommand(T)}};f=a([s(2,l)],f);class W extends c{static ID="workbench.action.configureDoNotDisturbMode";static LABEL=i("configureDoNotDisturbMode","Configure Do Not Disturb...");constructor(r,e){super(r,e,d.asClassName(b))}}let y=class extends c{constructor(e,o,n){super(e,o,d.asClassName(V));this.commandService=n}static ID=O;static LABEL=i("hideNotificationsCenter","Hide Notifications");async run(){this.commandService.executeCommand(O)}};y=a([s(2,l)],y);let x=class extends c{constructor(e,o,n){super(e,o,d.asClassName(F));this.commandService=n}static ID=E;static LABEL=i("expandNotification","Expand Notification");async run(e){this.commandService.executeCommand(E,e)}};x=a([s(2,l)],x);let S=class extends c{constructor(e,o,n){super(e,o,d.asClassName(G));this.commandService=n}static ID=D;static LABEL=i("collapseNotification","Collapse Notification");async run(e){this.commandService.executeCommand(D,e)}};S=a([s(2,l)],S);class Z extends c{constructor(e,o,n){super(e,o,d.asClassName(U));this.notification=n}static ID="workbench.action.configureNotification";static LABEL=i("configureNotification","More Actions...")}let C=class extends c{constructor(e,o,n){super(e,o);this.clipboardService=n}static ID="workbench.action.copyNotificationMessage";static LABEL=i("copyNotification","Copy Text");run(e){return this.clipboardService.writeText(e.message.raw)}};C=a([s(2,P)],C);export{u as ClearAllNotificationsAction,v as ClearNotificationAction,S as CollapseNotificationAction,W as ConfigureDoNotDisturbAction,Z as ConfigureNotificationAction,C as CopyNotificationMessageAction,x as ExpandNotificationAction,y as HideNotificationsCenterAction,p as ToggleDoNotDisturbAction,f as ToggleDoNotDisturbBySourceAction};
