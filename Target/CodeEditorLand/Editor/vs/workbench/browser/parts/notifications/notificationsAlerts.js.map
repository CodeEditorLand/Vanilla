{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/notifications/notificationsAlerts.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { alert } from \"../../../../base/browser/ui/aria/aria.js\";\nimport { toErrorMessage } from \"../../../../base/common/errorMessage.js\";\nimport { Event } from \"../../../../base/common/event.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\tNotificationPriority,\n\tSeverity,\n} from \"../../../../platform/notification/common/notification.js\";\nimport {\n\ttype INotificationChangeEvent,\n\ttype INotificationViewItem,\n\ttype INotificationsModel,\n\tNotificationChangeType,\n\tNotificationViewItemContentChangeKind,\n} from \"../../../common/notifications.js\";\n\nexport class NotificationsAlerts extends Disposable {\n\tconstructor(private readonly model: INotificationsModel) {\n\t\tsuper();\n\n\t\t// Alert initial notifications if any\n\t\tfor (const notification of model.notifications) {\n\t\t\tthis.triggerAriaAlert(notification);\n\t\t}\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(\n\t\t\tthis.model.onDidChangeNotification((e) =>\n\t\t\t\tthis.onDidChangeNotification(e),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate onDidChangeNotification(e: INotificationChangeEvent): void {\n\t\tif (e.kind === NotificationChangeType.ADD) {\n\t\t\t// ARIA alert for screen readers\n\t\t\tthis.triggerAriaAlert(e.item);\n\n\t\t\t// Always log errors to console with full details\n\t\t\tif (e.item.severity === Severity.Error) {\n\t\t\t\tif (e.item.message.original instanceof Error) {\n\t\t\t\t\tconsole.error(e.item.message.original);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\ttoErrorMessage(\n\t\t\t\t\t\t\te.item.message.linkedText.toString(),\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate triggerAriaAlert(notification: INotificationViewItem): void {\n\t\tif (notification.priority === NotificationPriority.SILENT) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Trigger the alert again whenever the message changes\n\t\tconst listener = notification.onDidChangeContent((e) => {\n\t\t\tif (e.kind === NotificationViewItemContentChangeKind.MESSAGE) {\n\t\t\t\tthis.doTriggerAriaAlert(notification);\n\t\t\t}\n\t\t});\n\n\t\tEvent.once(notification.onDidClose)(() => listener.dispose());\n\n\t\tthis.doTriggerAriaAlert(notification);\n\t}\n\n\tprivate doTriggerAriaAlert(notification: INotificationViewItem): void {\n\t\tlet alertText: string;\n\t\tif (notification.severity === Severity.Error) {\n\t\t\talertText = localize(\n\t\t\t\t\"alertErrorMessage\",\n\t\t\t\t\"Error: {0}\",\n\t\t\t\tnotification.message.linkedText.toString(),\n\t\t\t);\n\t\t} else if (notification.severity === Severity.Warning) {\n\t\t\talertText = localize(\n\t\t\t\t\"alertWarningMessage\",\n\t\t\t\t\"Warning: {0}\",\n\t\t\t\tnotification.message.linkedText.toString(),\n\t\t\t);\n\t\t} else {\n\t\t\talertText = localize(\n\t\t\t\t\"alertInfoMessage\",\n\t\t\t\t\"Info: {0}\",\n\t\t\t\tnotification.message.linkedText.toString(),\n\t\t\t);\n\t\t}\n\n\t\talert(alertText);\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,aAAa;AACtB,SAAS,sBAAsB;AAC/B,SAAS,aAAa;AACtB,SAAS,kBAAkB;AAC3B,SAAS,gBAAgB;AACzB;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EAIC;AAAA,EACA;AAAA,OACM;AAEA,MAAM,4BAA4B,WAAW;AAAA,EACnD,YAA6B,OAA4B;AACxD,UAAM;AADsB;AAI5B,eAAW,gBAAgB,MAAM,eAAe;AAC/C,WAAK,iBAAiB,YAAY;AAAA,IACnC;AAEA,SAAK,kBAAkB;AAAA,EACxB;AAAA,EAhCD,OAsBoD;AAAA;AAAA;AAAA,EAY3C,oBAA0B;AACjC,SAAK;AAAA,MACJ,KAAK,MAAM;AAAA,QAAwB,CAAC,MACnC,KAAK,wBAAwB,CAAC;AAAA,MAC/B;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,wBAAwB,GAAmC;AAClE,QAAI,EAAE,SAAS,uBAAuB,KAAK;AAE1C,WAAK,iBAAiB,EAAE,IAAI;AAG5B,UAAI,EAAE,KAAK,aAAa,SAAS,OAAO;AACvC,YAAI,EAAE,KAAK,QAAQ,oBAAoB,OAAO;AAC7C,kBAAQ,MAAM,EAAE,KAAK,QAAQ,QAAQ;AAAA,QACtC,OAAO;AACN,kBAAQ;AAAA,YACP;AAAA,cACC,EAAE,KAAK,QAAQ,WAAW,SAAS;AAAA,cACnC;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,iBAAiB,cAA2C;AACnE,QAAI,aAAa,aAAa,qBAAqB,QAAQ;AAC1D;AAAA,IACD;AAGA,UAAM,WAAW,aAAa,mBAAmB,CAAC,MAAM;AACvD,UAAI,EAAE,SAAS,sCAAsC,SAAS;AAC7D,aAAK,mBAAmB,YAAY;AAAA,MACrC;AAAA,IACD,CAAC;AAED,UAAM,KAAK,aAAa,UAAU,EAAE,MAAM,SAAS,QAAQ,CAAC;AAE5D,SAAK,mBAAmB,YAAY;AAAA,EACrC;AAAA,EAEQ,mBAAmB,cAA2C;AACrE,QAAI;AACJ,QAAI,aAAa,aAAa,SAAS,OAAO;AAC7C,kBAAY;AAAA,QACX;AAAA,QACA;AAAA,QACA,aAAa,QAAQ,WAAW,SAAS;AAAA,MAC1C;AAAA,IACD,WAAW,aAAa,aAAa,SAAS,SAAS;AACtD,kBAAY;AAAA,QACX;AAAA,QACA;AAAA,QACA,aAAa,QAAQ,WAAW,SAAS;AAAA,MAC1C;AAAA,IACD,OAAO;AACN,kBAAY;AAAA,QACX;AAAA,QACA;AAAA,QACA,aAAa,QAAQ,WAAW,SAAS;AAAA,MAC1C;AAAA,IACD;AAEA,UAAM,SAAS;AAAA,EAChB;AACD;",
  "names": []
}
