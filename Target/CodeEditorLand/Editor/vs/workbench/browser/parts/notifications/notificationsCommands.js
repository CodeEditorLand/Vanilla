var B=Object.defineProperty;var H=Object.getOwnPropertyDescriptor;var R=(c,n,r,t)=>{for(var i=t>1?void 0:t?H(n,r):n,o=c.length-1,e;o>=0;o--)(e=c[o])&&(i=(t?e(n,r,i):e(i))||i);return t&&i&&B(n,r,i),i},F=(c,n)=>(r,t)=>n(r,t,c);import{CommandsRegistry as C}from"../../../../platform/commands/common/commands.js";import{ContextKeyExpr as N}from"../../../../platform/contextkey/common/contextkey.js";import{KeybindingsRegistry as d,KeybindingWeight as l}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{KeyChord as Q,KeyCode as a,KeyMod as b}from"../../../../base/common/keyCodes.js";import{isNotificationViewItem as w}from"../../../common/notifications.js";import{MenuRegistry as u,MenuId as I}from"../../../../platform/actions/common/actions.js";import{localize as z,localize2 as p}from"../../../../nls.js";import{IListService as T,WorkbenchList as X}from"../../../../platform/list/browser/listService.js";import{ITelemetryService as E}from"../../../../platform/telemetry/common/telemetry.js";import{notificationToMetrics as k}from"./notificationsTelemetry.js";import{NotificationFocusedContext as f,NotificationsCenterVisibleContext as D,NotificationsToastsVisibleContext as h}from"../../../common/contextkeys.js";import{INotificationService as v,NotificationPriority as _,NotificationsFilter as y}from"../../../../platform/notification/common/notification.js";import{IInstantiationService as Y}from"../../../../platform/instantiation/common/instantiation.js";import{ActionRunner as $}from"../../../../base/common/actions.js";import{hash as q}from"../../../../base/common/hash.js";import{IQuickInputService as j}from"../../../../platform/quickinput/common/quickInput.js";import{DisposableStore as J}from"../../../../base/common/lifecycle.js";import{AccessibilitySignal as Z,IAccessibilitySignalService as ii}from"../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js";const L="notifications.showList",x="notifications.hideList",ti="notifications.toggleList",M="notifications.hideToasts",P="notifications.focusToasts",ei="notifications.focusNextToast",oi="notifications.focusPreviousToast",ni="notifications.focusFirstToast",ri="notifications.focusLastToast",ai="notification.collapse",ci="notification.expand",K="notification.acceptPrimaryAction",si="notification.toggle",di="notification.clear",W="notifications.clearAll",U="notifications.toggleDoNotDisturbMode",G="notifications.toggleDoNotDisturbModeBySource";function A(c,n){if(w(n))return n;const r=c.lastFocusedList;if(r instanceof X){let t=r.getFocusedElements()[0];if(w(t)||r.isDOMFocused()&&(t=r.element(0)),w(t))return t}}function Ki(c,n,r){d.registerCommandAndKeybindingRule({id:L,weight:l.WorkbenchContrib,primary:Q(b.CtrlCmd|a.KeyK,b.CtrlCmd|b.Shift|a.KeyN),handler:()=>{n.hide(),c.show()}}),d.registerCommandAndKeybindingRule({id:x,weight:l.WorkbenchContrib+50,when:D,primary:a.Escape,handler:i=>{const o=i.get(E);for(const e of r.notifications)e.visible&&o.publicLog2("notification:hide",k(e.message.original,e.sourceId,e.priority===_.SILENT));c.hide()}}),C.registerCommand(ti,()=>{c.isVisible?c.hide():(n.hide(),c.show())}),d.registerCommandAndKeybindingRule({id:di,weight:l.WorkbenchContrib,when:f,primary:a.Delete,mac:{primary:b.CtrlCmd|a.Backspace},handler:(i,o)=>{const e=i.get(ii),g=A(i.get(T),o);g&&!g.hasProgress&&(g.close(),e.playSignal(Z.clear))}}),d.registerCommandAndKeybindingRule({id:ci,weight:l.WorkbenchContrib,when:f,primary:a.RightArrow,handler:(i,o)=>{A(i.get(T),o)?.expand()}}),d.registerCommandAndKeybindingRule({id:K,weight:l.WorkbenchContrib,when:N.or(f,h),primary:b.CtrlCmd|b.Shift|a.KeyA,handler:i=>{const o=i.get(Y).createInstance(S),e=A(i.get(T))||r.notifications.at(0);if(!e)return;const g=e.actions?.primary?e.actions.primary.at(0):void 0;g&&(o.run(g,e),e.close())}}),d.registerCommandAndKeybindingRule({id:ai,weight:l.WorkbenchContrib,when:f,primary:a.LeftArrow,handler:(i,o)=>{A(i.get(T),o)?.collapse()}}),d.registerCommandAndKeybindingRule({id:si,weight:l.WorkbenchContrib,when:f,primary:a.Space,secondary:[a.Enter],handler:i=>{A(i.get(T))?.toggle()}}),C.registerCommand(M,i=>{const o=i.get(E);for(const e of r.notifications)e.visible&&o.publicLog2("notification:hide",k(e.message.original,e.sourceId,e.priority===_.SILENT));n.hide()}),d.registerKeybindingRule({id:M,weight:l.WorkbenchContrib-50,when:h,primary:a.Escape}),d.registerKeybindingRule({id:M,weight:l.WorkbenchContrib+100,when:N.and(h,f),primary:a.Escape}),C.registerCommand(P,()=>n.focus()),d.registerCommandAndKeybindingRule({id:ei,weight:l.WorkbenchContrib,when:N.and(f,h),primary:a.DownArrow,handler:()=>{n.focusNext()}}),d.registerCommandAndKeybindingRule({id:oi,weight:l.WorkbenchContrib,when:N.and(f,h),primary:a.UpArrow,handler:()=>{n.focusPrevious()}}),d.registerCommandAndKeybindingRule({id:ni,weight:l.WorkbenchContrib,when:N.and(f,h),primary:a.PageUp,secondary:[a.Home],handler:()=>{n.focusFirst()}}),d.registerCommandAndKeybindingRule({id:ri,weight:l.WorkbenchContrib,when:N.and(f,h),primary:a.PageDown,secondary:[a.End],handler:()=>{n.focusLast()}}),C.registerCommand(W,()=>c.clearAll()),C.registerCommand(U,i=>{const o=i.get(v);o.setFilter(o.getFilter()===y.ERROR?y.OFF:y.ERROR)}),C.registerCommand(G,i=>{const o=i.get(v),e=i.get(j),g=o.getFilters().sort((s,V)=>s.label.localeCompare(V.label)),O=new J,m=O.add(e.createQuickPick());m.items=g.map(s=>({id:s.id,label:s.label,tooltip:`${s.label} (${s.id})`,filter:s.filter})),m.canSelectMany=!0,m.placeholder=z("selectSources","Select sources to enable all notifications from"),m.selectedItems=m.items.filter(s=>s.filter===y.OFF),m.show(),O.add(m.onDidAccept(async()=>{for(const s of m.items)o.setFilter({id:s.id,label:s.label,filter:m.selectedItems.includes(s)?y.OFF:y.ERROR});m.hide()})),O.add(m.onDidHide(()=>O.dispose()))});const t=p("notifications","Notifications");u.appendMenuItem(I.CommandPalette,{command:{id:L,title:p("showNotifications","Show Notifications"),category:t}}),u.appendMenuItem(I.CommandPalette,{command:{id:x,title:p("hideNotifications","Hide Notifications"),category:t},when:D}),u.appendMenuItem(I.CommandPalette,{command:{id:W,title:p("clearAllNotifications","Clear All Notifications"),category:t}}),u.appendMenuItem(I.CommandPalette,{command:{id:K,title:p("acceptNotificationPrimaryAction","Accept Notification Primary Action"),category:t}}),u.appendMenuItem(I.CommandPalette,{command:{id:U,title:p("toggleDoNotDisturbMode","Toggle Do Not Disturb Mode"),category:t}}),u.appendMenuItem(I.CommandPalette,{command:{id:G,title:p("toggleDoNotDisturbModeBySource","Toggle Do Not Disturb Mode By Source..."),category:t}}),u.appendMenuItem(I.CommandPalette,{command:{id:P,title:p("focusNotificationToasts","Focus Notification Toast"),category:t},when:h})}let S=class extends ${constructor(r,t){super();this.telemetryService=r;this.notificationService=t}async runAction(r,t){this.telemetryService.publicLog2("workbenchActionExecuted",{id:r.id,from:"message"}),w(t)&&this.telemetryService.publicLog2("notification:actionExecuted",{id:q(t.message.original.toString()).toString(),actionLabel:r.label,source:t.sourceId||"core",silent:t.priority===_.SILENT});try{await super.runAction(r,t)}catch(i){this.notificationService.error(i)}}};S=R([F(0,E),F(1,v)],S);export{K as ACCEPT_PRIMARY_ACTION_NOTIFICATION,W as CLEAR_ALL_NOTIFICATIONS,di as CLEAR_NOTIFICATION,ai as COLLAPSE_NOTIFICATION,ci as EXPAND_NOTIFICATION,x as HIDE_NOTIFICATIONS_CENTER,M as HIDE_NOTIFICATION_TOAST,S as NotificationActionRunner,L as SHOW_NOTIFICATIONS_CENTER,U as TOGGLE_DO_NOT_DISTURB_MODE,G as TOGGLE_DO_NOT_DISTURB_MODE_BY_SOURCE,A as getNotificationFromContext,Ki as registerNotificationCommands};
