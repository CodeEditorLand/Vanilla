var O=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var T=(h,l,i,t)=>{for(var o=t>1?void 0:t?w(l,i):l,e=h.length-1,s;e>=0;e--)(s=h[e])&&(o=(t?s(l,i,o):s(o))||o);return t&&o&&O(l,i,o),o},c=(h,l)=>(i,t)=>l(i,t,h);import"./media/notificationsToasts.css";import{addDisposableListener as u,Dimension as m,EventType as v,getWindow as M,isAncestorOfActiveElement as I,scheduleAtNextAnimationFrame as A}from"../../../../base/browser/dom.js";import{mainWindow as y}from"../../../../base/browser/window.js";import{IntervalCounter as _}from"../../../../base/common/async.js";import{Emitter as x,Event as R}from"../../../../base/common/event.js";import{DisposableStore as H,dispose as b,toDisposable as N}from"../../../../base/common/lifecycle.js";import{ScrollbarVisibility as k}from"../../../../base/common/scrollable.js";import{assertIsDefined as F}from"../../../../base/common/types.js";import{localize as S}from"../../../../nls.js";import{IContextKeyService as B}from"../../../../platform/contextkey/common/contextkey.js";import{IInstantiationService as P}from"../../../../platform/instantiation/common/instantiation.js";import{NotificationPriority as C,NotificationsFilter as D,Severity as p}from"../../../../platform/notification/common/notification.js";import{widgetShadow as G}from"../../../../platform/theme/common/colorRegistry.js";import{IThemeService as U,Themable as W}from"../../../../platform/theme/common/themeService.js";import{NotificationsToastsVisibleContext as K}from"../../../common/contextkeys.js";import{NotificationChangeType as E,NotificationViewItemContentChangeKind as g}from"../../../common/notifications.js";import{NOTIFICATIONS_BACKGROUND as X,NOTIFICATIONS_TOAST_BORDER as z}from"../../../common/theme.js";import{IEditorGroupsService as $}from"../../../services/editor/common/editorGroupsService.js";import{IHostService as j}from"../../../services/host/browser/host.js";import{IWorkbenchLayoutService as q,Parts as V}from"../../../services/layout/browser/layoutService.js";import{ILifecycleService as J,LifecyclePhase as Q}from"../../../services/lifecycle/common/lifecycle.js";import"./notificationsCommands.js";import{NotificationsList as Y}from"./notificationsList.js";var Z=(t=>(t[t.HIDDEN_OR_VISIBLE=0]="HIDDEN_OR_VISIBLE",t[t.HIDDEN=1]="HIDDEN",t[t.VISIBLE=2]="VISIBLE",t))(Z||{});let r=class extends W{constructor(i,t,o,e,s,n,a,f,d){super(s);this.container=i;this.model=t;this.instantiationService=o;this.layoutService=e;this.editorGroupService=n;this.contextKeyService=a;this.lifecycleService=f;this.hostService=d;this.registerListeners()}static MAX_WIDTH=450;static MAX_NOTIFICATIONS=3;static PURGE_TIMEOUT={[p.Info]:15e3,[p.Warning]:18e3,[p.Error]:2e4};static SPAM_PROTECTION={interval:800,limit:this.MAX_NOTIFICATIONS};_onDidChangeVisibility=this._register(new x);onDidChangeVisibility=this._onDidChangeVisibility.event;_isVisible=!1;get isVisible(){return!!this._isVisible}notificationsToastsContainer;workbenchDimensions;isNotificationsCenterVisible;mapNotificationToToast=new Map;mapNotificationToDisposable=new Map;notificationsToastsVisibleContextKey=K.bindTo(this.contextKeyService);addedToastsIntervalCounter=new _(r.SPAM_PROTECTION.interval);registerListeners(){this._register(this.layoutService.onDidLayoutMainContainer(i=>this.layout(m.lift(i)))),this.lifecycleService.when(Q.Restored).then(()=>{this.model.notifications.forEach(i=>this.addToast(i)),this._register(this.model.onDidChangeNotification(i=>this.onDidChangeNotification(i)))}),this._register(this.model.onDidChangeFilter(({global:i,sources:t})=>{if(i===D.ERROR)this.hide();else if(t)for(const[o]of this.mapNotificationToToast)typeof o.sourceId=="string"&&t.get(o.sourceId)===D.ERROR&&o.severity!==p.Error&&o.priority!==C.URGENT&&this.removeToast(o)}))}onDidChangeNotification(i){switch(i.kind){case E.ADD:return this.addToast(i.item);case E.REMOVE:return this.removeToast(i.item)}}addToast(i){if(this.isNotificationsCenterVisible||i.priority===C.SILENT||this.addedToastsIntervalCounter.increment()>r.SPAM_PROTECTION.limit)return;const t=new H;this.mapNotificationToDisposable.set(i,t),t.add(A(M(this.container),()=>this.doAddToast(i,t)))}doAddToast(i,t){let o=this.notificationsToastsContainer;o||(o=this.notificationsToastsContainer=document.createElement("div"),o.classList.add("notifications-toasts"),this.container.appendChild(o)),o.classList.add("visible");const e=document.createElement("div");e.classList.add("notification-toast-container");const s=o.firstChild;s?o.insertBefore(e,s):o.appendChild(e);const n=document.createElement("div");n.classList.add("notification-toast"),e.appendChild(n);const a=this.instantiationService.createInstance(Y,n,{verticalScrollMode:k.Hidden,widgetAriaLabel:i.source?S("notificationWithSourceAriaLabel","{0}, source: {1}, notification",i.message.raw,i.source):S("notificationAriaLabel","{0}, notification",i.message.raw)});t.add(a);const f={item:i,list:a,container:e,toast:n};this.mapNotificationToToast.set(i,f),t.add(N(()=>this.updateToastVisibility(f,!1))),a.show();const d=this.computeMaxDimensions();this.layoutLists(d.width),a.updateNotificationsList(0,0,[i]),this.layoutContainer(d.height),t.add(i.onDidChangeExpansion(()=>{a.updateNotificationsList(0,1,[i])})),t.add(i.onDidChangeContent(L=>{switch(L.kind){case g.ACTIONS:a.updateNotificationsList(0,1,[i]);break;case g.MESSAGE:i.expanded&&a.updateNotificationHeight(i);break}})),R.once(i.onDidClose)(()=>{this.removeToast(i)}),this.purgeNotification(i,e,a,t),this.updateStyles(),this.notificationsToastsVisibleContextKey.set(!0),n.classList.add("notification-fade-in"),t.add(u(n,"transitionend",()=>{n.classList.remove("notification-fade-in"),n.classList.add("notification-fade-in-done")})),i.updateVisibility(!0),this._isVisible||(this._isVisible=!0,this._onDidChangeVisibility.fire())}purgeNotification(i,t,o,e){let s=!1;e.add(u(t,v.MOUSE_OVER,()=>s=!0)),e.add(u(t,v.MOUSE_OUT,()=>s=!1));let n,a;const f=()=>{n=setTimeout(()=>{this.hostService.hasFocus?i.sticky||o.hasFocus()||s?f():this.removeToast(i):a||(a=this.hostService.onDidChangeFocus(d=>{d&&f()}),e.add(a))},r.PURGE_TIMEOUT[i.severity])};f(),e.add(N(()=>clearTimeout(n)))}removeToast(i){let t=!1;const o=this.mapNotificationToToast.get(i);o&&(I(o.container)&&(t=!(this.focusNext()||this.focusPrevious())),this.mapNotificationToToast.delete(i));const e=this.mapNotificationToDisposable.get(i);e&&(b(e),this.mapNotificationToDisposable.delete(i)),this.mapNotificationToToast.size>0?this.layout(this.workbenchDimensions):(this.doHide(),t&&this.editorGroupService.activeGroup.focus())}removeToasts(){this.mapNotificationToToast.clear(),this.mapNotificationToDisposable.forEach(i=>b(i)),this.mapNotificationToDisposable.clear(),this.doHide()}doHide(){this.notificationsToastsContainer?.classList.remove("visible"),this.notificationsToastsVisibleContextKey.set(!1),this._isVisible&&(this._isVisible=!1,this._onDidChangeVisibility.fire())}hide(){const i=this.notificationsToastsContainer?I(this.notificationsToastsContainer):!1;this.removeToasts(),i&&this.editorGroupService.activeGroup.focus()}focus(){const i=this.getToasts(2);return i.length>0?(i[0].list.focusFirst(),!0):!1}focusNext(){const i=this.getToasts(2);for(let t=0;t<i.length;t++)if(i[t].list.hasFocus()){const e=i[t+1];if(e)return e.list.focusFirst(),!0;break}return!1}focusPrevious(){const i=this.getToasts(2);for(let t=0;t<i.length;t++)if(i[t].list.hasFocus()){const e=i[t-1];if(e)return e.list.focusFirst(),!0;break}return!1}focusFirst(){const i=this.getToasts(2)[0];return i?(i.list.focusFirst(),!0):!1}focusLast(){const i=this.getToasts(2);return i.length>0?(i[i.length-1].list.focusFirst(),!0):!1}update(i){this.isNotificationsCenterVisible!==i&&(this.isNotificationsCenterVisible=i,this.isNotificationsCenterVisible&&this.removeToasts())}updateStyles(){this.mapNotificationToToast.forEach(({toast:i})=>{const t=this.getColor(X);i.style.background=t||"";const o=this.getColor(G);i.style.boxShadow=o?`0 0 8px 2px ${o}`:"";const e=this.getColor(z);i.style.border=e?`1px solid ${e}`:""})}getToasts(i){const t=[];return this.mapNotificationToToast.forEach(o=>{switch(i){case 0:t.push(o);break;case 1:this.isToastInDOM(o)||t.push(o);break;case 2:this.isToastInDOM(o)&&t.push(o);break}}),t.reverse()}layout(i){this.workbenchDimensions=i;const t=this.computeMaxDimensions();t.height&&this.layoutContainer(t.height),this.layoutLists(t.width)}computeMaxDimensions(){const i=r.MAX_WIDTH;let t=i,o;return this.workbenchDimensions&&(t=this.workbenchDimensions.width,t-=2*8,o=this.workbenchDimensions.height,this.layoutService.isVisible(V.STATUSBAR_PART,y)&&(o-=22),this.layoutService.isVisible(V.TITLEBAR_PART,y)&&(o-=22),o-=2*12),o=typeof o=="number"?Math.round(o*.618):0,new m(Math.min(i,t),o)}layoutLists(i){this.mapNotificationToToast.forEach(({list:t})=>t.layout(i))}layoutContainer(i){let t=0;for(const o of this.getToasts(0)){o.container.style.opacity="0",this.updateToastVisibility(o,!0),i-=o.container.offsetHeight;let e=!1;t===r.MAX_NOTIFICATIONS?e=!1:i>=0&&(e=!0),this.updateToastVisibility(o,e),o.container.style.opacity="",e&&t++}}updateToastVisibility(i,t){if(this.isToastInDOM(i)===t)return;const o=F(this.notificationsToastsContainer);t?o.appendChild(i.container):i.container.remove(),i.item.updateVisibility(t)}isToastInDOM(i){return!!i.container.parentElement}};r=T([c(2,P),c(3,q),c(4,U),c(5,$),c(6,B),c(7,J),c(8,j)],r);export{r as NotificationsToasts};
