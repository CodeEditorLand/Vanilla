var y=Object.defineProperty;var L=Object.getOwnPropertyDescriptor;var v=(l,o,i,t)=>{for(var s=t>1?void 0:t?L(o,i):o,e=l.length-1,n;e>=0;e--)(n=l[e])&&(s=(t?n(o,i,s):n(s))||s);return t&&s&&y(o,i,s),s},h=(l,o)=>(i,t)=>o(i,t,l);import"./media/notificationsList.css";import{getWindow as S,isAncestorOfActiveElement as I,trackFocus as C}from"../../../../base/browser/dom.js";import{Disposable as A}from"../../../../base/common/lifecycle.js";import{assertAllDefined as w}from"../../../../base/common/types.js";import{localize as c}from"../../../../nls.js";import{IConfigurationService as N}from"../../../../platform/configuration/common/configuration.js";import{IContextMenuService as x}from"../../../../platform/contextview/browser/contextView.js";import{IInstantiationService as M}from"../../../../platform/instantiation/common/instantiation.js";import{IKeybindingService as V}from"../../../../platform/keybinding/common/keybinding.js";import{WorkbenchList as F}from"../../../../platform/list/browser/listService.js";import{NotificationFocusedContext as D}from"../../../common/contextkeys.js";import{NOTIFICATIONS_BACKGROUND as _}from"../../../common/theme.js";import{CopyNotificationMessageAction as b}from"./notificationsActions.js";import{NotificationActionRunner as H}from"./notificationsCommands.js";import{NotificationRenderer as O,NotificationsListDelegate as k}from"./notificationsViewer.js";let u=class extends A{constructor(i,t,s,e){super();this.container=i;this.options=t;this.instantiationService=s;this.contextMenuService=e}listContainer;list;listDelegate;viewModel=[];isVisible;show(){this.isVisible||(this.list||this.createNotificationsList(),this.isVisible=!0)}createNotificationsList(){this.listContainer=document.createElement("div"),this.listContainer.classList.add("notifications-list-container");const i=this._register(this.instantiationService.createInstance(H)),t=this.instantiationService.createInstance(O,i),s=this.listDelegate=new k(this.listContainer),e=this.options,n=this.list=this._register(this.instantiationService.createInstance(F,"NotificationsList",this.listContainer,s,[t],{...e,setRowLineHeight:!1,horizontalScrolling:!1,overrideStyles:{listBackground:_},accessibilityProvider:this.instantiationService.createInstance(d,e)})),p=this._register(this.instantiationService.createInstance(b,b.ID,b.LABEL));this._register(n.onContextMenu(r=>{r.element&&this.contextMenuService.showContextMenu({getAnchor:()=>r.anchor,getActions:()=>[p],getActionsContext:()=>r.element,actionRunner:i})})),this._register(n.onMouseDblClick(r=>r.element.toggle()));const a=this._register(C(n.getHTMLElement()));this._register(a.onDidBlur(()=>{S(this.listContainer).document.hasFocus()&&n.setFocus([])})),D.bindTo(n.contextKeyService),this._register(n.onDidChangeSelection(r=>{r.indexes.length>0&&n.setSelection([])})),this.container.appendChild(this.listContainer)}updateNotificationsList(i,t,s=[]){const[e,n]=w(this.list,this.listContainer),p=I(n),a=e.getFocus()[0],r=this.viewModel[a];let m=null;if(typeof a=="number"&&(m=e.getRelativeTop(a)),this.viewModel.splice(i,t,...s),e.splice(i,t,s),e.layout(),this.viewModel.length===0)this.hide();else if(typeof a=="number"){let g=0;if(r){let f=this.viewModel.indexOf(r);f===-1&&(f=a-1),f<this.viewModel.length&&f>=0&&(g=f)}typeof m=="number"&&e.reveal(g,m),e.setFocus([g])}this.isVisible&&p&&e.domFocus()}updateNotificationHeight(i){const t=this.viewModel.indexOf(i);if(t===-1)return;const[s,e]=w(this.list,this.listDelegate);s.updateElementHeight(t,e.getHeight(i)),s.layout()}hide(){!this.isVisible||!this.list||(this.isVisible=!1,this.list.splice(0,this.viewModel.length),this.viewModel=[])}focusFirst(){this.list&&(this.list.focusFirst(),this.list.domFocus())}hasFocus(){return this.listContainer?I(this.listContainer):!1}layout(i,t){this.listContainer&&this.list&&(this.listContainer.style.width=`${i}px`,typeof t=="number"&&(this.list.getHTMLElement().style.maxHeight=`${t}px`),this.list.layout())}dispose(){this.hide(),super.dispose()}};u=v([h(2,M),h(3,x)],u);let d=class{constructor(o,i,t){this._options=o;this._keybindingService=i;this._configurationService=t}getAriaLabel(o){let i;const t=this._keybindingService.lookupKeybinding("editor.action.accessibleView")?.getAriaLabel();return this._configurationService.getValue("accessibility.verbosity.notification")&&(i=t?c("notificationAccessibleViewHint","Inspect the response in the accessible view with {0}",t):c("notificationAccessibleViewHintNoKb","Inspect the response in the accessible view via the command Open Accessible View which is currently not triggerable via keybinding")),o.source?i?c("notificationWithSourceAriaLabelHint","{0}, source: {1}, notification, {2}",o.message.raw,o.source,i):c("notificationWithSourceAriaLabel","{0}, source: {1}, notification",o.message.raw,o.source):i?c("notificationAriaLabelHint","{0}, notification, {1}",o.message.raw,i):c("notificationAriaLabel","{0}, notification",o.message.raw)}getWidgetAriaLabel(){return this._options.widgetAriaLabel??c("notificationsList","Notifications List")}getRole(){return"dialog"}};d=v([h(1,V),h(2,N)],d);export{u as NotificationsList};
