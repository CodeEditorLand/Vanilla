{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/notifications/notificationsViewer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\t$,\n\tEventHelper,\n\tEventType,\n\taddDisposableListener,\n\tclearNode,\n\tisEventLike,\n} from \"../../../../base/browser/dom.js\";\nimport { DomEmitter } from \"../../../../base/browser/event.js\";\nimport { StandardKeyboardEvent } from \"../../../../base/browser/keyboardEvent.js\";\nimport {\n\tGesture,\n\tEventType as GestureEventType,\n} from \"../../../../base/browser/touch.js\";\nimport { ActionBar } from \"../../../../base/browser/ui/actionbar/actionbar.js\";\nimport {\n\tButtonBar,\n\ttype IButtonOptions,\n} from \"../../../../base/browser/ui/button/button.js\";\nimport { DropdownMenuActionViewItem } from \"../../../../base/browser/ui/dropdown/dropdownActionViewItem.js\";\nimport type { IManagedHover } from \"../../../../base/browser/ui/hover/hover.js\";\nimport { getDefaultHoverDelegate } from \"../../../../base/browser/ui/hover/hoverDelegateFactory.js\";\nimport type {\n\tIListRenderer,\n\tIListVirtualDelegate,\n} from \"../../../../base/browser/ui/list/list.js\";\nimport { ProgressBar } from \"../../../../base/browser/ui/progressbar/progressbar.js\";\nimport {\n\tActionRunner,\n\ttype IAction,\n\ttype IActionRunner,\n\tSeparator,\n\ttoAction,\n} from \"../../../../base/common/actions.js\";\nimport { isNonEmptyArray } from \"../../../../base/common/arrays.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { Event } from \"../../../../base/common/event.js\";\nimport { KeyCode } from \"../../../../base/common/keyCodes.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\tdispose,\n} from \"../../../../base/common/lifecycle.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IContextMenuService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport {\n\tINotificationService,\n\tNotificationsFilter,\n\tSeverity,\n\tisNotificationSource,\n} from \"../../../../platform/notification/common/notification.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport {\n\tdefaultButtonStyles,\n\tdefaultProgressBarStyles,\n} from \"../../../../platform/theme/browser/defaultStyles.js\";\nimport {\n\tChoiceAction,\n\ttype INotificationMessage,\n\ttype INotificationViewItem,\n\tNotificationViewItem,\n\tNotificationViewItemContentChangeKind,\n} from \"../../../common/notifications.js\";\nimport {\n\tClearNotificationAction,\n\tCollapseNotificationAction,\n\tConfigureNotificationAction,\n\tExpandNotificationAction,\n} from \"./notificationsActions.js\";\n\nexport class NotificationsListDelegate\n\timplements IListVirtualDelegate<INotificationViewItem>\n{\n\tprivate static readonly ROW_HEIGHT = 42;\n\tprivate static readonly LINE_HEIGHT = 22;\n\n\tprivate offsetHelper: HTMLElement;\n\n\tconstructor(container: HTMLElement) {\n\t\tthis.offsetHelper = this.createOffsetHelper(container);\n\t}\n\n\tprivate createOffsetHelper(container: HTMLElement): HTMLElement {\n\t\tconst offsetHelper = document.createElement(\"div\");\n\t\toffsetHelper.classList.add(\"notification-offset-helper\");\n\n\t\tcontainer.appendChild(offsetHelper);\n\n\t\treturn offsetHelper;\n\t}\n\n\tgetHeight(notification: INotificationViewItem): number {\n\t\tif (!notification.expanded) {\n\t\t\treturn NotificationsListDelegate.ROW_HEIGHT; // return early if there are no more rows to show\n\t\t}\n\n\t\t// First row: message and actions\n\t\tlet expandedHeight = NotificationsListDelegate.ROW_HEIGHT;\n\n\t\t// Dynamic height: if message overflows\n\t\tconst preferredMessageHeight =\n\t\t\tthis.computePreferredHeight(notification);\n\t\tconst messageOverflows =\n\t\t\tNotificationsListDelegate.LINE_HEIGHT < preferredMessageHeight;\n\t\tif (messageOverflows) {\n\t\t\tconst overflow =\n\t\t\t\tpreferredMessageHeight - NotificationsListDelegate.LINE_HEIGHT;\n\t\t\texpandedHeight += overflow;\n\t\t}\n\n\t\t// Last row: source and buttons if we have any\n\t\tif (\n\t\t\tnotification.source ||\n\t\t\tisNonEmptyArray(\n\t\t\t\tnotification.actions && notification.actions.primary,\n\t\t\t)\n\t\t) {\n\t\t\texpandedHeight += NotificationsListDelegate.ROW_HEIGHT;\n\t\t}\n\n\t\t// If the expanded height is same as collapsed, unset the expanded state\n\t\t// but skip events because there is no change that has visual impact\n\t\tif (expandedHeight === NotificationsListDelegate.ROW_HEIGHT) {\n\t\t\tnotification.collapse(true /* skip events, no change in height */);\n\t\t}\n\n\t\treturn expandedHeight;\n\t}\n\n\tprivate computePreferredHeight(\n\t\tnotification: INotificationViewItem,\n\t): number {\n\t\t// Prepare offset helper depending on toolbar actions count\n\t\tlet actions = 0;\n\t\tif (!notification.hasProgress) {\n\t\t\tactions++; // close\n\t\t}\n\t\tif (notification.canCollapse) {\n\t\t\tactions++; // expand/collapse\n\t\t}\n\t\tif (\n\t\t\tisNonEmptyArray(\n\t\t\t\tnotification.actions && notification.actions.secondary,\n\t\t\t)\n\t\t) {\n\t\t\tactions++; // secondary actions\n\t\t}\n\t\tthis.offsetHelper.style.width = `${450 /* notifications container width */ - (10 /* padding */ + 30 /* severity icon */ + actions * 30 /* actions */ - Math.max(actions - 1, 0) * 4) /* less padding for actions > 1 */}px`;\n\n\t\t// Render message into offset helper\n\t\tconst renderedMessage = NotificationMessageRenderer.render(\n\t\t\tnotification.message,\n\t\t);\n\t\tthis.offsetHelper.appendChild(renderedMessage);\n\n\t\t// Compute height\n\t\tconst preferredHeight = Math.max(\n\t\t\tthis.offsetHelper.offsetHeight,\n\t\t\tthis.offsetHelper.scrollHeight,\n\t\t);\n\n\t\t// Always clear offset helper after use\n\t\tclearNode(this.offsetHelper);\n\n\t\treturn preferredHeight;\n\t}\n\n\tgetTemplateId(element: INotificationViewItem): string {\n\t\tif (element instanceof NotificationViewItem) {\n\t\t\treturn NotificationRenderer.TEMPLATE_ID;\n\t\t}\n\n\t\tthrow new Error(\"unknown element type: \" + element);\n\t}\n}\n\nexport interface INotificationTemplateData {\n\tcontainer: HTMLElement;\n\ttoDispose: DisposableStore;\n\n\tmainRow: HTMLElement;\n\ticon: HTMLElement;\n\tmessage: HTMLElement;\n\ttoolbar: ActionBar;\n\n\tdetailsRow: HTMLElement;\n\tsource: HTMLElement;\n\tbuttonsContainer: HTMLElement;\n\tprogress: ProgressBar;\n\n\trenderer: NotificationTemplateRenderer;\n}\n\ninterface IMessageActionHandler {\n\treadonly toDispose: DisposableStore;\n\n\tcallback: (href: string) => void;\n}\n\nclass NotificationMessageRenderer {\n\tstatic render(\n\t\tmessage: INotificationMessage,\n\t\tactionHandler?: IMessageActionHandler,\n\t): HTMLElement {\n\t\tconst messageContainer = document.createElement(\"span\");\n\n\t\tfor (const node of message.linkedText.nodes) {\n\t\t\tif (typeof node === \"string\") {\n\t\t\t\tmessageContainer.appendChild(document.createTextNode(node));\n\t\t\t} else {\n\t\t\t\tlet title = node.title;\n\n\t\t\t\tif (!title && node.href.startsWith(\"command:\")) {\n\t\t\t\t\ttitle = localize(\n\t\t\t\t\t\t\"executeCommand\",\n\t\t\t\t\t\t\"Click to execute command '{0}'\",\n\t\t\t\t\t\tnode.href.substr(\"command:\".length),\n\t\t\t\t\t);\n\t\t\t\t} else if (!title) {\n\t\t\t\t\ttitle = node.href;\n\t\t\t\t}\n\n\t\t\t\tconst anchor = $(\n\t\t\t\t\t\"a\",\n\t\t\t\t\t{ href: node.href, title, tabIndex: 0 },\n\t\t\t\t\tnode.label,\n\t\t\t\t);\n\n\t\t\t\tif (actionHandler) {\n\t\t\t\t\tconst handleOpen = (e: unknown) => {\n\t\t\t\t\t\tif (isEventLike(e)) {\n\t\t\t\t\t\t\tEventHelper.stop(e, true);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tactionHandler.callback(node.href);\n\t\t\t\t\t};\n\n\t\t\t\t\tconst onClick = actionHandler.toDispose.add(\n\t\t\t\t\t\tnew DomEmitter(anchor, EventType.CLICK),\n\t\t\t\t\t).event;\n\n\t\t\t\t\tconst onKeydown = actionHandler.toDispose.add(\n\t\t\t\t\t\tnew DomEmitter(anchor, EventType.KEY_DOWN),\n\t\t\t\t\t).event;\n\t\t\t\t\tconst onSpaceOrEnter = Event.chain(onKeydown, ($) =>\n\t\t\t\t\t\t$.filter((e) => {\n\t\t\t\t\t\t\tconst event = new StandardKeyboardEvent(e);\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\tevent.equals(KeyCode.Space) ||\n\t\t\t\t\t\t\t\tevent.equals(KeyCode.Enter)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\n\t\t\t\t\tactionHandler.toDispose.add(Gesture.addTarget(anchor));\n\t\t\t\t\tconst onTap = actionHandler.toDispose.add(\n\t\t\t\t\t\tnew DomEmitter(anchor, GestureEventType.Tap),\n\t\t\t\t\t).event;\n\n\t\t\t\t\tEvent.any(onClick, onTap, onSpaceOrEnter)(\n\t\t\t\t\t\thandleOpen,\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tactionHandler.toDispose,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tmessageContainer.appendChild(anchor);\n\t\t\t}\n\t\t}\n\n\t\treturn messageContainer;\n\t}\n}\n\nexport class NotificationRenderer\n\timplements IListRenderer<INotificationViewItem, INotificationTemplateData>\n{\n\tstatic readonly TEMPLATE_ID = \"notification\";\n\n\tconstructor(\n\t\tprivate actionRunner: IActionRunner,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@INotificationService private readonly notificationService: INotificationService\n\t) {\n\t}\n\n\tget templateId() {\n\t\treturn NotificationRenderer.TEMPLATE_ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): INotificationTemplateData {\n\t\tconst data: INotificationTemplateData = Object.create(null);\n\t\tdata.toDispose = new DisposableStore();\n\n\t\t// Container\n\t\tdata.container = document.createElement(\"div\");\n\t\tdata.container.classList.add(\"notification-list-item\");\n\n\t\t// Main Row\n\t\tdata.mainRow = document.createElement(\"div\");\n\t\tdata.mainRow.classList.add(\"notification-list-item-main-row\");\n\n\t\t// Icon\n\t\tdata.icon = document.createElement(\"div\");\n\t\tdata.icon.classList.add(\"notification-list-item-icon\", \"codicon\");\n\n\t\t// Message\n\t\tdata.message = document.createElement(\"div\");\n\t\tdata.message.classList.add(\"notification-list-item-message\");\n\n\t\t// Toolbar\n\t\tconst that = this;\n\t\tconst toolbarContainer = document.createElement(\"div\");\n\t\ttoolbarContainer.classList.add(\n\t\t\t\"notification-list-item-toolbar-container\",\n\t\t);\n\t\tdata.toolbar = new ActionBar(toolbarContainer, {\n\t\t\tariaLabel: localize(\"notificationActions\", \"Notification Actions\"),\n\t\t\tactionViewItemProvider: (action, options) => {\n\t\t\t\tif (action instanceof ConfigureNotificationAction) {\n\t\t\t\t\treturn data.toDispose.add(\n\t\t\t\t\t\tnew DropdownMenuActionViewItem(\n\t\t\t\t\t\t\taction,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgetActions() {\n\t\t\t\t\t\t\t\t\tconst actions: IAction[] = [];\n\n\t\t\t\t\t\t\t\t\tconst source = {\n\t\t\t\t\t\t\t\t\t\tid: action.notification.sourceId,\n\t\t\t\t\t\t\t\t\t\tlabel: action.notification.source,\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tif (isNotificationSource(source)) {\n\t\t\t\t\t\t\t\t\t\tconst isSourceFiltered =\n\t\t\t\t\t\t\t\t\t\t\tthat.notificationService.getFilter(\n\t\t\t\t\t\t\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\t\t\t\t\t) === NotificationsFilter.ERROR;\n\t\t\t\t\t\t\t\t\t\tactions.push(\n\t\t\t\t\t\t\t\t\t\t\ttoAction({\n\t\t\t\t\t\t\t\t\t\t\t\tid: source.id,\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: isSourceFiltered\n\t\t\t\t\t\t\t\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"turnOnNotifications\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Turn On All Notifications from '{0}'\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsource.label,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"turnOffNotifications\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Turn Off Info and Warning Notifications from '{0}'\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsource.label,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\trun: () =>\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat.notificationService.setFilter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...source,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilter: isSourceFiltered\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? NotificationsFilter.OFF\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: NotificationsFilter.ERROR,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\taction.notification.actions\n\t\t\t\t\t\t\t\t\t\t\t\t?.secondary?.length\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tactions.push(new Separator());\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tArray.isArray(\n\t\t\t\t\t\t\t\t\t\t\taction.notification.actions\n\t\t\t\t\t\t\t\t\t\t\t\t?.secondary,\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tactions.push(\n\t\t\t\t\t\t\t\t\t\t\t...action.notification.actions\n\t\t\t\t\t\t\t\t\t\t\t\t.secondary,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturn actions;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tthis.contextMenuService,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t...options,\n\t\t\t\t\t\t\t\tactionRunner: this.actionRunner,\n\t\t\t\t\t\t\t\tclassNames: action.class,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tactionRunner: this.actionRunner,\n\t\t});\n\t\tdata.toDispose.add(data.toolbar);\n\n\t\t// Details Row\n\t\tdata.detailsRow = document.createElement(\"div\");\n\t\tdata.detailsRow.classList.add(\"notification-list-item-details-row\");\n\n\t\t// Source\n\t\tdata.source = document.createElement(\"div\");\n\t\tdata.source.classList.add(\"notification-list-item-source\");\n\n\t\t// Buttons Container\n\t\tdata.buttonsContainer = document.createElement(\"div\");\n\t\tdata.buttonsContainer.classList.add(\n\t\t\t\"notification-list-item-buttons-container\",\n\t\t);\n\n\t\tcontainer.appendChild(data.container);\n\n\t\t// the details row appears first in order for better keyboard access to notification buttons\n\t\tdata.container.appendChild(data.detailsRow);\n\t\tdata.detailsRow.appendChild(data.source);\n\t\tdata.detailsRow.appendChild(data.buttonsContainer);\n\n\t\t// main row\n\t\tdata.container.appendChild(data.mainRow);\n\t\tdata.mainRow.appendChild(data.icon);\n\t\tdata.mainRow.appendChild(data.message);\n\t\tdata.mainRow.appendChild(toolbarContainer);\n\n\t\t// Progress: below the rows to span the entire width of the item\n\t\tdata.progress = new ProgressBar(container, defaultProgressBarStyles);\n\t\tdata.toDispose.add(data.progress);\n\n\t\t// Renderer\n\t\tdata.renderer = this.instantiationService.createInstance(\n\t\t\tNotificationTemplateRenderer,\n\t\t\tdata,\n\t\t\tthis.actionRunner,\n\t\t);\n\t\tdata.toDispose.add(data.renderer);\n\n\t\treturn data;\n\t}\n\n\trenderElement(\n\t\tnotification: INotificationViewItem,\n\t\tindex: number,\n\t\tdata: INotificationTemplateData,\n\t): void {\n\t\tdata.renderer.setInput(notification);\n\t}\n\n\tdisposeTemplate(templateData: INotificationTemplateData): void {\n\t\tdispose(templateData.toDispose);\n\t}\n}\n\nexport class NotificationTemplateRenderer extends Disposable {\n\tprivate static closeNotificationAction: ClearNotificationAction;\n\tprivate static expandNotificationAction: ExpandNotificationAction;\n\tprivate static collapseNotificationAction: CollapseNotificationAction;\n\n\tprivate static readonly SEVERITIES = [\n\t\tSeverity.Info,\n\t\tSeverity.Warning,\n\t\tSeverity.Error,\n\t];\n\n\tprivate readonly inputDisposables = this._register(new DisposableStore());\n\n\tconstructor(\n\t\tprivate template: INotificationTemplateData,\n\t\tprivate actionRunner: IActionRunner,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t) {\n\t\tsuper();\n\n\t\tif (!NotificationTemplateRenderer.closeNotificationAction) {\n\t\t\tNotificationTemplateRenderer.closeNotificationAction = instantiationService.createInstance(ClearNotificationAction, ClearNotificationAction.ID, ClearNotificationAction.LABEL);\n\t\t\tNotificationTemplateRenderer.expandNotificationAction = instantiationService.createInstance(ExpandNotificationAction, ExpandNotificationAction.ID, ExpandNotificationAction.LABEL);\n\t\t\tNotificationTemplateRenderer.collapseNotificationAction = instantiationService.createInstance(CollapseNotificationAction, CollapseNotificationAction.ID, CollapseNotificationAction.LABEL);\n\t\t}\n\t}\n\n\tsetInput(notification: INotificationViewItem): void {\n\t\tthis.inputDisposables.clear();\n\n\t\tthis.render(notification);\n\t}\n\n\tprivate render(notification: INotificationViewItem): void {\n\t\t// Container\n\t\tthis.template.container.classList.toggle(\n\t\t\t\"expanded\",\n\t\t\tnotification.expanded,\n\t\t);\n\t\tthis.inputDisposables.add(\n\t\t\taddDisposableListener(\n\t\t\t\tthis.template.container,\n\t\t\t\tEventType.MOUSE_UP,\n\t\t\t\t(e) => {\n\t\t\t\t\tif (e.button === 1 /* Middle Button */) {\n\t\t\t\t\t\t// Prevent firing the 'paste' event in the editor textarea - #109322\n\t\t\t\t\t\tEventHelper.stop(e, true);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tthis.inputDisposables.add(\n\t\t\taddDisposableListener(\n\t\t\t\tthis.template.container,\n\t\t\t\tEventType.AUXCLICK,\n\t\t\t\t(e) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!notification.hasProgress &&\n\t\t\t\t\t\te.button === 1 /* Middle Button */\n\t\t\t\t\t) {\n\t\t\t\t\t\tEventHelper.stop(e, true);\n\n\t\t\t\t\t\tnotification.close();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\t// Severity Icon\n\t\tthis.renderSeverity(notification);\n\n\t\t// Message\n\t\tconst messageCustomHover = this.inputDisposables.add(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\tthis.template.message,\n\t\t\t\t\"\",\n\t\t\t),\n\t\t);\n\t\tconst messageOverflows = this.renderMessage(\n\t\t\tnotification,\n\t\t\tmessageCustomHover,\n\t\t);\n\n\t\t// Secondary Actions\n\t\tthis.renderSecondaryActions(notification, messageOverflows);\n\n\t\t// Source\n\t\tconst sourceCustomHover = this.inputDisposables.add(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\tthis.template.source,\n\t\t\t\t\"\",\n\t\t\t),\n\t\t);\n\t\tthis.renderSource(notification, sourceCustomHover);\n\n\t\t// Buttons\n\t\tthis.renderButtons(notification);\n\n\t\t// Progress\n\t\tthis.renderProgress(notification);\n\n\t\t// Label Change Events that we can handle directly\n\t\t// (changes to actions require an entire redraw of\n\t\t// the notification because it has an impact on\n\t\t// epxansion state)\n\t\tthis.inputDisposables.add(\n\t\t\tnotification.onDidChangeContent((event) => {\n\t\t\t\tswitch (event.kind) {\n\t\t\t\t\tcase NotificationViewItemContentChangeKind.SEVERITY:\n\t\t\t\t\t\tthis.renderSeverity(notification);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase NotificationViewItemContentChangeKind.PROGRESS:\n\t\t\t\t\t\tthis.renderProgress(notification);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase NotificationViewItemContentChangeKind.MESSAGE:\n\t\t\t\t\t\tthis.renderMessage(notification, messageCustomHover);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate renderSeverity(notification: INotificationViewItem): void {\n\t\t// first remove, then set as the codicon class names overlap\n\t\tNotificationTemplateRenderer.SEVERITIES.forEach((severity) => {\n\t\t\tif (notification.severity !== severity) {\n\t\t\t\tthis.template.icon.classList.remove(\n\t\t\t\t\t...ThemeIcon.asClassNameArray(\n\t\t\t\t\t\tthis.toSeverityIcon(severity),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\tthis.template.icon.classList.add(\n\t\t\t...ThemeIcon.asClassNameArray(\n\t\t\t\tthis.toSeverityIcon(notification.severity),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate renderMessage(\n\t\tnotification: INotificationViewItem,\n\t\tcustomHover: IManagedHover,\n\t): boolean {\n\t\tclearNode(this.template.message);\n\t\tthis.template.message.appendChild(\n\t\t\tNotificationMessageRenderer.render(notification.message, {\n\t\t\t\tcallback: (link) =>\n\t\t\t\t\tthis.openerService.open(URI.parse(link), {\n\t\t\t\t\t\tallowCommands: true,\n\t\t\t\t\t}),\n\t\t\t\ttoDispose: this.inputDisposables,\n\t\t\t}),\n\t\t);\n\n\t\tconst messageOverflows =\n\t\t\tnotification.canCollapse &&\n\t\t\t!notification.expanded &&\n\t\t\tthis.template.message.scrollWidth >\n\t\t\t\tthis.template.message.clientWidth;\n\n\t\tcustomHover.update(\n\t\t\tmessageOverflows ? this.template.message.textContent + \"\" : \"\",\n\t\t);\n\n\t\treturn messageOverflows;\n\t}\n\n\tprivate renderSecondaryActions(\n\t\tnotification: INotificationViewItem,\n\t\tmessageOverflows: boolean,\n\t): void {\n\t\tconst actions: IAction[] = [];\n\n\t\t// Secondary Actions\n\t\tif (isNonEmptyArray(notification.actions?.secondary)) {\n\t\t\tconst configureNotificationAction =\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tConfigureNotificationAction,\n\t\t\t\t\tConfigureNotificationAction.ID,\n\t\t\t\t\tConfigureNotificationAction.LABEL,\n\t\t\t\t\tnotification,\n\t\t\t\t);\n\t\t\tactions.push(configureNotificationAction);\n\t\t\tthis.inputDisposables.add(configureNotificationAction);\n\t\t}\n\n\t\t// Expand / Collapse\n\t\tlet showExpandCollapseAction = false;\n\t\tif (notification.canCollapse) {\n\t\t\tif (notification.expanded) {\n\t\t\t\tshowExpandCollapseAction = true; // allow to collapse an expanded message\n\t\t\t} else if (notification.source) {\n\t\t\t\tshowExpandCollapseAction = true; // allow to expand to details row\n\t\t\t} else if (messageOverflows) {\n\t\t\t\tshowExpandCollapseAction = true; // allow to expand if message overflows\n\t\t\t}\n\t\t}\n\n\t\tif (showExpandCollapseAction) {\n\t\t\tactions.push(\n\t\t\t\tnotification.expanded\n\t\t\t\t\t? NotificationTemplateRenderer.collapseNotificationAction\n\t\t\t\t\t: NotificationTemplateRenderer.expandNotificationAction,\n\t\t\t);\n\t\t}\n\n\t\t// Close (unless progress is showing)\n\t\tif (!notification.hasProgress) {\n\t\t\tactions.push(NotificationTemplateRenderer.closeNotificationAction);\n\t\t}\n\n\t\tthis.template.toolbar.clear();\n\t\tthis.template.toolbar.context = notification;\n\t\tactions.forEach((action) =>\n\t\t\tthis.template.toolbar.push(action, {\n\t\t\t\ticon: true,\n\t\t\t\tlabel: false,\n\t\t\t\tkeybinding: this.getKeybindingLabel(action),\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate renderSource(\n\t\tnotification: INotificationViewItem,\n\t\tsourceCustomHover: IManagedHover,\n\t): void {\n\t\tif (notification.expanded && notification.source) {\n\t\t\tthis.template.source.textContent = localize(\n\t\t\t\t\"notificationSource\",\n\t\t\t\t\"Source: {0}\",\n\t\t\t\tnotification.source,\n\t\t\t);\n\t\t\tsourceCustomHover.update(notification.source);\n\t\t} else {\n\t\t\tthis.template.source.textContent = \"\";\n\t\t\tsourceCustomHover.update(\"\");\n\t\t}\n\t}\n\n\tprivate renderButtons(notification: INotificationViewItem): void {\n\t\tclearNode(this.template.buttonsContainer);\n\n\t\tconst primaryActions = notification.actions\n\t\t\t? notification.actions.primary\n\t\t\t: undefined;\n\t\tif (notification.expanded && isNonEmptyArray(primaryActions)) {\n\t\t\tconst that = this;\n\n\t\t\tconst actionRunner: IActionRunner =\n\t\t\t\tnew (class extends ActionRunner {\n\t\t\t\t\tprotected override async runAction(\n\t\t\t\t\t\taction: IAction,\n\t\t\t\t\t): Promise<void> {\n\t\t\t\t\t\t// Run action\n\t\t\t\t\t\tthat.actionRunner.run(action, notification);\n\n\t\t\t\t\t\t// Hide notification (unless explicitly prevented)\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!(action instanceof ChoiceAction) ||\n\t\t\t\t\t\t\t!action.keepOpen\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tnotification.close();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})();\n\n\t\t\tconst buttonToolbar = this.inputDisposables.add(\n\t\t\t\tnew ButtonBar(this.template.buttonsContainer),\n\t\t\t);\n\t\t\tfor (let i = 0; i < primaryActions.length; i++) {\n\t\t\t\tconst action = primaryActions[i];\n\n\t\t\t\tconst options: IButtonOptions = {\n\t\t\t\t\ttitle: true, // assign titles to buttons in case they overflow\n\t\t\t\t\tsecondary: i > 0,\n\t\t\t\t\t...defaultButtonStyles,\n\t\t\t\t};\n\n\t\t\t\tconst dropdownActions =\n\t\t\t\t\taction instanceof ChoiceAction ? action.menu : undefined;\n\t\t\t\tconst button = this.inputDisposables.add(\n\t\t\t\t\tdropdownActions\n\t\t\t\t\t\t? buttonToolbar.addButtonWithDropdown({\n\t\t\t\t\t\t\t\t...options,\n\t\t\t\t\t\t\t\tcontextMenuProvider: this.contextMenuService,\n\t\t\t\t\t\t\t\tactions: dropdownActions,\n\t\t\t\t\t\t\t\tactionRunner,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t: buttonToolbar.addButton(options),\n\t\t\t\t);\n\n\t\t\t\tbutton.label = action.label;\n\n\t\t\t\tthis.inputDisposables.add(\n\t\t\t\t\tbutton.onDidClick((e) => {\n\t\t\t\t\t\tif (e) {\n\t\t\t\t\t\t\tEventHelper.stop(e, true);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tactionRunner.run(action);\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate renderProgress(notification: INotificationViewItem): void {\n\t\t// Return early if the item has no progress\n\t\tif (!notification.hasProgress) {\n\t\t\tthis.template.progress.stop().hide();\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Infinite\n\t\tconst state = notification.progress.state;\n\t\tif (state.infinite) {\n\t\t\tthis.template.progress.infinite().show();\n\t\t}\n\n\t\t// Total / Worked\n\t\telse if (\n\t\t\ttypeof state.total === \"number\" ||\n\t\t\ttypeof state.worked === \"number\"\n\t\t) {\n\t\t\tif (\n\t\t\t\ttypeof state.total === \"number\" &&\n\t\t\t\t!this.template.progress.hasTotal()\n\t\t\t) {\n\t\t\t\tthis.template.progress.total(state.total);\n\t\t\t}\n\n\t\t\tif (typeof state.worked === \"number\") {\n\t\t\t\tthis.template.progress.setWorked(state.worked).show();\n\t\t\t}\n\t\t}\n\n\t\t// Done\n\t\telse {\n\t\t\tthis.template.progress.done().hide();\n\t\t}\n\t}\n\n\tprivate toSeverityIcon(severity: Severity): ThemeIcon {\n\t\tswitch (severity) {\n\t\t\tcase Severity.Warning:\n\t\t\t\treturn Codicon.warning;\n\t\t\tcase Severity.Error:\n\t\t\t\treturn Codicon.error;\n\t\t}\n\t\treturn Codicon.info;\n\t}\n\n\tprivate getKeybindingLabel(action: IAction): string | null {\n\t\tconst keybinding = this.keybindingService.lookupKeybinding(action.id);\n\n\t\treturn keybinding ? keybinding.getLabel() : null;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["$"]
}
