{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/globalCompositeBar.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\t$,\n\tEventHelper,\n\tEventType,\n\taddDisposableListener,\n\tappend,\n\tclearNode,\n\tgetWindow,\n\thide,\n\trunWhenWindowIdle,\n\tshow,\n} from \"../../../base/browser/dom.js\";\nimport { StandardKeyboardEvent } from \"../../../base/browser/keyboardEvent.js\";\nimport { StandardMouseEvent } from \"../../../base/browser/mouseEvent.js\";\nimport {\n\ttype GestureEvent,\n\tEventType as TouchEventType,\n} from \"../../../base/browser/touch.js\";\nimport type { IBaseActionViewItemOptions } from \"../../../base/browser/ui/actionbar/actionViewItems.js\";\nimport {\n\tActionBar,\n\tActionsOrientation,\n} from \"../../../base/browser/ui/actionbar/actionbar.js\";\nimport {\n\tAnchorAlignment,\n\tAnchorAxisAlignment,\n} from \"../../../base/browser/ui/contextview/contextview.js\";\nimport {\n\tAction,\n\ttype IAction,\n\tSeparator,\n\tSubmenuAction,\n\ttoAction,\n} from \"../../../base/common/actions.js\";\nimport { Codicon } from \"../../../base/common/codicons.js\";\nimport { KeyCode } from \"../../../base/common/keyCodes.js\";\nimport { Lazy } from \"../../../base/common/lazy.js\";\nimport { Disposable, DisposableStore } from \"../../../base/common/lifecycle.js\";\nimport { ThemeIcon } from \"../../../base/common/themables.js\";\nimport { isString } from \"../../../base/common/types.js\";\nimport { localize } from \"../../../nls.js\";\nimport { createAndFillInActionBarActions } from \"../../../platform/actions/browser/menuEntryActionViewItem.js\";\nimport {\n\ttype IMenu,\n\tIMenuService,\n\tMenuId,\n} from \"../../../platform/actions/common/actions.js\";\nimport { ICommandService } from \"../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../platform/configuration/common/configuration.js\";\nimport { IContextKeyService } from \"../../../platform/contextkey/common/contextkey.js\";\nimport { IContextMenuService } from \"../../../platform/contextview/browser/contextView.js\";\nimport { IHoverService } from \"../../../platform/hover/browser/hover.js\";\nimport { IInstantiationService } from \"../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../platform/keybinding/common/keybinding.js\";\nimport { ILogService } from \"../../../platform/log/common/log.js\";\nimport { IProductService } from \"../../../platform/product/common/productService.js\";\nimport { ISecretStorageService } from \"../../../platform/secrets/common/secrets.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../platform/storage/common/storage.js\";\nimport { registerIcon } from \"../../../platform/theme/common/iconRegistry.js\";\nimport {\n\ttype IColorTheme,\n\tIThemeService,\n} from \"../../../platform/theme/common/themeService.js\";\nimport {\n\tACCOUNTS_ACTIVITY_ID,\n\tGLOBAL_ACTIVITY_ID,\n} from \"../../common/activity.js\";\nimport {\n\tACTIVITY_BAR_BADGE_BACKGROUND,\n\tACTIVITY_BAR_BADGE_FOREGROUND,\n} from \"../../common/theme.js\";\nimport {\n\ttype IActivity,\n\tIActivityService,\n\tNumberBadge,\n} from \"../../services/activity/common/activity.js\";\nimport {\n\ttype AuthenticationSessionInfo,\n\tgetCurrentAuthenticationSessionInfo,\n} from \"../../services/authentication/browser/authenticationService.js\";\nimport {\n\ttype AuthenticationSessionAccount,\n\tIAuthenticationService,\n} from \"../../services/authentication/common/authentication.js\";\nimport { IWorkbenchEnvironmentService } from \"../../services/environment/common/environmentService.js\";\nimport { IExtensionService } from \"../../services/extensions/common/extensions.js\";\nimport {\n\tILifecycleService,\n\tLifecyclePhase,\n} from \"../../services/lifecycle/common/lifecycle.js\";\nimport { IUserDataProfileService } from \"../../services/userDataProfile/common/userDataProfile.js\";\nimport { DEFAULT_ICON } from \"../../services/userDataProfile/common/userDataProfileIcons.js\";\nimport {\n\tCompositeBarAction,\n\tCompositeBarActionViewItem,\n\ttype IActivityHoverOptions,\n\ttype ICompositeBarActionViewItemOptions,\n\ttype ICompositeBarColors,\n} from \"./compositeBarActions.js\";\n\nexport class GlobalCompositeBar extends Disposable {\n\tprivate static readonly ACCOUNTS_ACTION_INDEX = 0;\n\tstatic readonly ACCOUNTS_ICON = registerIcon(\n\t\t\"accounts-view-bar-icon\",\n\t\tCodicon.account,\n\t\tlocalize(\"accountsViewBarIcon\", \"Accounts icon in the view bar.\"),\n\t);\n\n\treadonly element: HTMLElement;\n\n\tprivate readonly globalActivityAction = this._register(\n\t\tnew Action(GLOBAL_ACTIVITY_ID),\n\t);\n\tprivate readonly accountAction = this._register(\n\t\tnew Action(ACCOUNTS_ACTIVITY_ID),\n\t);\n\tprivate readonly globalActivityActionBar: ActionBar;\n\n\tconstructor(\n\t\tprivate readonly contextMenuActionsProvider: () => IAction[],\n\t\tprivate readonly colors: (theme: IColorTheme) => ICompositeBarColors,\n\t\tprivate readonly activityHoverOptions: IActivityHoverOptions,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t) {\n\t\tsuper();\n\n\t\tthis.element = document.createElement('div');\n\t\tconst contextMenuAlignmentOptions = () => ({\n\t\t\tanchorAlignment: configurationService.getValue('workbench.sideBar.location') === 'left' ? AnchorAlignment.RIGHT : AnchorAlignment.LEFT,\n\t\t\tanchorAxisAlignment: AnchorAxisAlignment.HORIZONTAL\n\t\t});\n\t\tthis.globalActivityActionBar = this._register(new ActionBar(this.element, {\n\t\t\tactionViewItemProvider: (action, options) => {\n\t\t\t\tif (action.id === GLOBAL_ACTIVITY_ID) {\n\t\t\t\t\treturn this.instantiationService.createInstance(GlobalActivityActionViewItem, this.contextMenuActionsProvider, { ...options, colors: this.colors, hoverOptions: this.activityHoverOptions }, contextMenuAlignmentOptions);\n\t\t\t\t}\n\n\t\t\t\tif (action.id === ACCOUNTS_ACTIVITY_ID) {\n\t\t\t\t\treturn this.instantiationService.createInstance(AccountsActivityActionViewItem,\n\t\t\t\t\t\tthis.contextMenuActionsProvider,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...options,\n\t\t\t\t\t\t\tcolors: this.colors,\n\t\t\t\t\t\t\thoverOptions: this.activityHoverOptions\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcontextMenuAlignmentOptions,\n\t\t\t\t\t\t(actions: IAction[]) => {\n\t\t\t\t\t\t\tactions.unshift(...[\n\t\t\t\t\t\t\t\ttoAction({ id: 'hideAccounts', label: localize('hideAccounts', \"Hide Accounts\"), run: () => setAccountsActionVisible(storageService, false) }),\n\t\t\t\t\t\t\t\tnew Separator()\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`No view item for action '${action.id}'`);\n\t\t\t},\n\t\t\torientation: ActionsOrientation.VERTICAL,\n\t\t\tariaLabel: localize('manage', \"Manage\"),\n\t\t\tpreventLoopNavigation: true\n\t\t}));\n\n\t\tif (this.accountsVisibilityPreference) {\n\t\t\tthis.globalActivityActionBar.push(this.accountAction, { index: GlobalCompositeBar.ACCOUNTS_ACTION_INDEX });\n\t\t}\n\n\t\tthis.globalActivityActionBar.push(this.globalActivityAction);\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis.extensionService.whenInstalledExtensionsRegistered().then(() => {\n\t\t\tif (!this._store.isDisposed) {\n\t\t\t\tthis._register(\n\t\t\t\t\tthis.storageService.onDidChangeValue(\n\t\t\t\t\t\tStorageScope.PROFILE,\n\t\t\t\t\t\tAccountsActivityActionViewItem.ACCOUNTS_VISIBILITY_PREFERENCE_KEY,\n\t\t\t\t\t\tthis._store,\n\t\t\t\t\t)(() => this.toggleAccountsActivity()),\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\tcreate(parent: HTMLElement): void {\n\t\tparent.appendChild(this.element);\n\t}\n\n\tfocus(): void {\n\t\tthis.globalActivityActionBar.focus(true);\n\t}\n\n\tsize(): number {\n\t\treturn this.globalActivityActionBar.viewItems.length;\n\t}\n\n\tgetContextMenuActions(): IAction[] {\n\t\treturn [\n\t\t\ttoAction({\n\t\t\t\tid: \"toggleAccountsVisibility\",\n\t\t\t\tlabel: localize(\"accounts\", \"Accounts\"),\n\t\t\t\tchecked: this.accountsVisibilityPreference,\n\t\t\t\trun: () =>\n\t\t\t\t\t(this.accountsVisibilityPreference =\n\t\t\t\t\t\t!this.accountsVisibilityPreference),\n\t\t\t}),\n\t\t];\n\t}\n\n\tprivate toggleAccountsActivity() {\n\t\tif (\n\t\t\tthis.globalActivityActionBar.length() === 2 &&\n\t\t\tthis.accountsVisibilityPreference\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.globalActivityActionBar.length() === 2) {\n\t\t\tthis.globalActivityActionBar.pull(\n\t\t\t\tGlobalCompositeBar.ACCOUNTS_ACTION_INDEX,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.globalActivityActionBar.push(this.accountAction, {\n\t\t\t\tindex: GlobalCompositeBar.ACCOUNTS_ACTION_INDEX,\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate get accountsVisibilityPreference(): boolean {\n\t\treturn isAccountsActionVisible(this.storageService);\n\t}\n\n\tprivate set accountsVisibilityPreference(value: boolean) {\n\t\tsetAccountsActionVisible(this.storageService, value);\n\t}\n}\n\nabstract class AbstractGlobalActivityActionViewItem extends CompositeBarActionViewItem {\n\tconstructor(\n\t\tprivate readonly menuId: MenuId,\n\t\taction: CompositeBarAction,\n\t\toptions: ICompositeBarActionViewItemOptions,\n\t\tprivate readonly contextMenuActionsProvider: () => IAction[],\n\t\tprivate readonly contextMenuAlignmentOptions: () => Readonly<{ anchorAlignment: AnchorAlignment; anchorAxisAlignment: AnchorAxisAlignment }> | undefined,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IActivityService private readonly activityService: IActivityService,\n\t) {\n\t\tsuper(action, { draggable: false, icon: true, hasPopup: true, ...options }, () => true, themeService, hoverService, configurationService, keybindingService);\n\n\t\tthis.updateItemActivity();\n\t\tthis._register(this.activityService.onDidChangeActivity(viewContainerOrAction => {\n\t\t\tif (isString(viewContainerOrAction) && viewContainerOrAction === this.compositeBarActionItem.id) {\n\t\t\t\tthis.updateItemActivity();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate updateItemActivity(): void {\n\t\tconst activities = this.activityService.getActivity(\n\t\t\tthis.compositeBarActionItem.id,\n\t\t);\n\t\tlet activity = activities[0];\n\t\tif (activity) {\n\t\t\tconst { badge, priority } = activity;\n\t\t\tif (badge instanceof NumberBadge && activities.length > 1) {\n\t\t\t\tconst cumulativeNumberBadge = this.getCumulativeNumberBadge(\n\t\t\t\t\tactivities,\n\t\t\t\t\tpriority ?? 0,\n\t\t\t\t);\n\t\t\t\tactivity = { badge: cumulativeNumberBadge };\n\t\t\t}\n\t\t}\n\t\t(this.action as CompositeBarAction).activity = activity;\n\t}\n\n\tprivate getCumulativeNumberBadge(\n\t\tactivityCache: IActivity[],\n\t\tpriority: number,\n\t): NumberBadge {\n\t\tconst numberActivities = activityCache.filter(\n\t\t\t(activity) =>\n\t\t\t\tactivity.badge instanceof NumberBadge &&\n\t\t\t\t(activity.priority ?? 0) === priority,\n\t\t);\n\t\tconst number = numberActivities.reduce((result, activity) => {\n\t\t\treturn result + (<NumberBadge>activity.badge).number;\n\t\t}, 0);\n\t\tconst descriptorFn = (): string => {\n\t\t\treturn numberActivities.reduce((result, activity, index) => {\n\t\t\t\tresult =\n\t\t\t\t\tresult + (<NumberBadge>activity.badge).getDescription();\n\t\t\t\tif (index < numberActivities.length - 1) {\n\t\t\t\t\tresult = `${result}\\n`;\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, \"\");\n\t\t};\n\n\t\treturn new NumberBadge(number, descriptorFn);\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\n\t\tthis._register(\n\t\t\taddDisposableListener(\n\t\t\t\tthis.container,\n\t\t\t\tEventType.MOUSE_DOWN,\n\t\t\t\tasync (e: MouseEvent) => {\n\t\t\t\t\tEventHelper.stop(e, true);\n\t\t\t\t\tconst isLeftClick = e?.button !== 2;\n\t\t\t\t\t// Left-click run\n\t\t\t\t\tif (isLeftClick) {\n\t\t\t\t\t\tthis.run();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\t// The rest of the activity bar uses context menu event for the context menu, so we match this\n\t\tthis._register(\n\t\t\taddDisposableListener(\n\t\t\t\tthis.container,\n\t\t\t\tEventType.CONTEXT_MENU,\n\t\t\t\tasync (e: MouseEvent) => {\n\t\t\t\t\t// Let the item decide on the context menu instead of the toolbar\n\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\tconst disposables = new DisposableStore();\n\t\t\t\t\tconst actions =\n\t\t\t\t\t\tawait this.resolveContextMenuActions(disposables);\n\n\t\t\t\t\tconst event = new StandardMouseEvent(\n\t\t\t\t\t\tgetWindow(this.container),\n\t\t\t\t\t\te,\n\t\t\t\t\t);\n\n\t\t\t\t\tthis.contextMenuService.showContextMenu({\n\t\t\t\t\t\tgetAnchor: () => event,\n\t\t\t\t\t\tgetActions: () => actions,\n\t\t\t\t\t\tonHide: () => disposables.dispose(),\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\taddDisposableListener(\n\t\t\t\tthis.container,\n\t\t\t\tEventType.KEY_UP,\n\t\t\t\t(e: KeyboardEvent) => {\n\t\t\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\t\t\tif (\n\t\t\t\t\t\tevent.equals(KeyCode.Enter) ||\n\t\t\t\t\t\tevent.equals(KeyCode.Space)\n\t\t\t\t\t) {\n\t\t\t\t\t\tEventHelper.stop(e, true);\n\t\t\t\t\t\tthis.run();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\taddDisposableListener(\n\t\t\t\tthis.container,\n\t\t\t\tTouchEventType.Tap,\n\t\t\t\t(e: GestureEvent) => {\n\t\t\t\t\tEventHelper.stop(e, true);\n\t\t\t\t\tthis.run();\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprotected async resolveContextMenuActions(\n\t\tdisposables: DisposableStore,\n\t): Promise<IAction[]> {\n\t\treturn this.contextMenuActionsProvider();\n\t}\n\n\tprivate async run(): Promise<void> {\n\t\tconst disposables = new DisposableStore();\n\t\tconst menu = disposables.add(\n\t\t\tthis.menuService.createMenu(this.menuId, this.contextKeyService),\n\t\t);\n\t\tconst actions = await this.resolveMainMenuActions(menu, disposables);\n\t\tconst { anchorAlignment, anchorAxisAlignment } =\n\t\t\tthis.contextMenuAlignmentOptions() ?? {\n\t\t\t\tanchorAlignment: undefined,\n\t\t\t\tanchorAxisAlignment: undefined,\n\t\t\t};\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => this.label,\n\t\t\tanchorAlignment,\n\t\t\tanchorAxisAlignment,\n\t\t\tgetActions: () => actions,\n\t\t\tonHide: () => disposables.dispose(),\n\t\t\tmenuActionOptions: { renderShortTitle: true },\n\t\t});\n\t}\n\n\tprotected async resolveMainMenuActions(\n\t\tmenu: IMenu,\n\t\t_disposable: DisposableStore,\n\t): Promise<IAction[]> {\n\t\tconst actions: IAction[] = [];\n\t\tcreateAndFillInActionBarActions(\n\t\t\tmenu,\n\t\t\t{ renderShortTitle: true },\n\t\t\t{ primary: [], secondary: actions },\n\t\t);\n\t\treturn actions;\n\t}\n}\n\nexport class AccountsActivityActionViewItem extends AbstractGlobalActivityActionViewItem {\n\tstatic readonly ACCOUNTS_VISIBILITY_PREFERENCE_KEY =\n\t\t\"workbench.activity.showAccounts\";\n\n\tprivate readonly groupedAccounts: Map<\n\t\tstring,\n\t\t(AuthenticationSessionAccount & { canSignOut: boolean })[]\n\t> = new Map();\n\tprivate readonly problematicProviders: Set<string> = new Set();\n\n\tprivate initialized = false;\n\tprivate sessionFromEmbedder = new Lazy<\n\t\tPromise<AuthenticationSessionInfo | undefined>\n\t>(() =>\n\t\tgetCurrentAuthenticationSessionInfo(\n\t\t\tthis.secretStorageService,\n\t\t\tthis.productService,\n\t\t),\n\t);\n\n\tconstructor(\n\t\tcontextMenuActionsProvider: () => IAction[],\n\t\toptions: ICompositeBarActionViewItemOptions,\n\t\tcontextMenuAlignmentOptions: () => Readonly<{ anchorAlignment: AnchorAlignment; anchorAxisAlignment: AnchorAxisAlignment }> | undefined,\n\t\tprivate readonly fillContextMenuActions: (actions: IAction[]) => void,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IAuthenticationService private readonly authenticationService: IAuthenticationService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@ISecretStorageService private readonly secretStorageService: ISecretStorageService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IActivityService activityService: IActivityService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ICommandService private readonly commandService: ICommandService\n\t) {\n\t\tconst action = instantiationService.createInstance(CompositeBarAction, {\n\t\t\tid: ACCOUNTS_ACTIVITY_ID,\n\t\t\tname: localize('accounts', \"Accounts\"),\n\t\t\tclassNames: ThemeIcon.asClassNameArray(GlobalCompositeBar.ACCOUNTS_ICON)\n\t\t});\n\t\tsuper(MenuId.AccountsContext, action, options, contextMenuActionsProvider, contextMenuAlignmentOptions, themeService, hoverService, menuService, contextMenuService, contextKeyService, configurationService, keybindingService, activityService);\n\t\tthis._register(action);\n\t\tthis.registerListeners();\n\t\tthis.initialize();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(\n\t\t\tthis.authenticationService.onDidRegisterAuthenticationProvider(\n\t\t\t\tasync (e) => {\n\t\t\t\t\tawait this.addAccountsFromProvider(e.id);\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.authenticationService.onDidUnregisterAuthenticationProvider(\n\t\t\t\t(e) => {\n\t\t\t\t\tthis.groupedAccounts.delete(e.id);\n\t\t\t\t\tthis.problematicProviders.delete(e.id);\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.authenticationService.onDidChangeSessions(async (e) => {\n\t\t\t\tif (e.event.removed) {\n\t\t\t\t\tfor (const removed of e.event.removed) {\n\t\t\t\t\t\tthis.removeAccount(e.providerId, removed.account);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const changed of [\n\t\t\t\t\t...(e.event.changed ?? []),\n\t\t\t\t\t...(e.event.added ?? []),\n\t\t\t\t]) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.addOrUpdateAccount(\n\t\t\t\t\t\t\te.providerId,\n\t\t\t\t\t\t\tchanged.account,\n\t\t\t\t\t\t);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthis.logService.error(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\t// This function exists to ensure that the accounts are added for auth providers that had already been registered\n\t// before the menu was created.\n\tprivate async initialize(): Promise<void> {\n\t\t// Resolving the menu doesn't need to happen immediately, so we can wait until after the workbench has been restored\n\t\t// and only run this when the system is idle.\n\t\tawait this.lifecycleService.when(LifecyclePhase.Restored);\n\t\tif (this._store.isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tconst disposable = this._register(\n\t\t\trunWhenWindowIdle(getWindow(this.element), async () => {\n\t\t\t\tawait this.doInitialize();\n\t\t\t\tdisposable.dispose();\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate async doInitialize(): Promise<void> {\n\t\tconst providerIds = this.authenticationService.getProviderIds();\n\t\tconst results = await Promise.allSettled(\n\t\t\tproviderIds.map((providerId) =>\n\t\t\t\tthis.addAccountsFromProvider(providerId),\n\t\t\t),\n\t\t);\n\n\t\t// Log any errors that occurred while initializing. We try to be best effort here to show the most amount of accounts\n\t\tfor (const result of results) {\n\t\t\tif (result.status === \"rejected\") {\n\t\t\t\tthis.logService.error(result.reason);\n\t\t\t}\n\t\t}\n\n\t\tthis.initialized = true;\n\t}\n\n\t//#region overrides\n\n\tprotected override async resolveMainMenuActions(\n\t\taccountsMenu: IMenu,\n\t\tdisposables: DisposableStore,\n\t): Promise<IAction[]> {\n\t\tawait super.resolveMainMenuActions(accountsMenu, disposables);\n\n\t\tconst providers = this.authenticationService.getProviderIds();\n\t\tconst otherCommands = accountsMenu.getActions();\n\t\tlet menus: IAction[] = [];\n\n\t\tfor (const providerId of providers) {\n\t\t\tif (!this.initialized) {\n\t\t\t\tconst noAccountsAvailableAction = disposables.add(\n\t\t\t\t\tnew Action(\n\t\t\t\t\t\t\"noAccountsAvailable\",\n\t\t\t\t\t\tlocalize(\"loading\", \"Loading...\"),\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tmenus.push(noAccountsAvailableAction);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst providerLabel =\n\t\t\t\tthis.authenticationService.getProvider(providerId).label;\n\t\t\tconst accounts = this.groupedAccounts.get(providerId);\n\t\t\tif (!accounts) {\n\t\t\t\tif (this.problematicProviders.has(providerId)) {\n\t\t\t\t\tconst providerUnavailableAction = disposables.add(\n\t\t\t\t\t\tnew Action(\n\t\t\t\t\t\t\t\"providerUnavailable\",\n\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\"authProviderUnavailable\",\n\t\t\t\t\t\t\t\t\"{0} is currently unavailable\",\n\t\t\t\t\t\t\t\tproviderLabel,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tmenus.push(providerUnavailableAction);\n\t\t\t\t\t// try again in the background so that if the failure was intermittent, we can resolve it on the next showing of the menu\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.addAccountsFromProvider(providerId);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthis.logService.error(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (const account of accounts) {\n\t\t\t\tconst manageExtensionsAction = toAction({\n\t\t\t\t\tid: `configureSessions${account.label}`,\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\"manageTrustedExtensions\",\n\t\t\t\t\t\t\"Manage Trusted Extensions\",\n\t\t\t\t\t),\n\t\t\t\t\tenabled: true,\n\t\t\t\t\trun: () =>\n\t\t\t\t\t\tthis.commandService.executeCommand(\n\t\t\t\t\t\t\t\"_manageTrustedExtensionsForAccount\",\n\t\t\t\t\t\t\t{ providerId, accountLabel: account.label },\n\t\t\t\t\t\t),\n\t\t\t\t});\n\n\t\t\t\tconst providerSubMenuActions: IAction[] = [\n\t\t\t\t\tmanageExtensionsAction,\n\t\t\t\t];\n\n\t\t\t\tif (account.canSignOut) {\n\t\t\t\t\tproviderSubMenuActions.push(\n\t\t\t\t\t\ttoAction({\n\t\t\t\t\t\t\tid: \"signOut\",\n\t\t\t\t\t\t\tlabel: localize(\"signOut\", \"Sign Out\"),\n\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\trun: () =>\n\t\t\t\t\t\t\t\tthis.commandService.executeCommand(\n\t\t\t\t\t\t\t\t\t\"_signOutOfAccount\",\n\t\t\t\t\t\t\t\t\t{ providerId, accountLabel: account.label },\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst providerSubMenu = new SubmenuAction(\n\t\t\t\t\t\"activitybar.submenu\",\n\t\t\t\t\t`${account.label} (${providerLabel})`,\n\t\t\t\t\tproviderSubMenuActions,\n\t\t\t\t);\n\t\t\t\tmenus.push(providerSubMenu);\n\t\t\t}\n\t\t}\n\n\t\tif (providers.length && !menus.length) {\n\t\t\tconst noAccountsAvailableAction = disposables.add(\n\t\t\t\tnew Action(\n\t\t\t\t\t\"noAccountsAvailable\",\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"noAccounts\",\n\t\t\t\t\t\t\"You are not signed in to any accounts\",\n\t\t\t\t\t),\n\t\t\t\t\tundefined,\n\t\t\t\t\tfalse,\n\t\t\t\t),\n\t\t\t);\n\t\t\tmenus.push(noAccountsAvailableAction);\n\t\t}\n\n\t\tif (menus.length && otherCommands.length) {\n\t\t\tmenus.push(new Separator());\n\t\t}\n\n\t\totherCommands.forEach((group, i) => {\n\t\t\tconst actions = group[1];\n\t\t\tmenus = menus.concat(actions);\n\t\t\tif (i !== otherCommands.length - 1) {\n\t\t\t\tmenus.push(new Separator());\n\t\t\t}\n\t\t});\n\n\t\treturn menus;\n\t}\n\n\tprotected override async resolveContextMenuActions(\n\t\tdisposables: DisposableStore,\n\t): Promise<IAction[]> {\n\t\tconst actions = await super.resolveContextMenuActions(disposables);\n\t\tthis.fillContextMenuActions(actions);\n\t\treturn actions;\n\t}\n\n\t//#endregion\n\n\t//#region groupedAccounts helpers\n\n\tprivate async addOrUpdateAccount(\n\t\tproviderId: string,\n\t\taccount: AuthenticationSessionAccount,\n\t): Promise<void> {\n\t\tlet accounts = this.groupedAccounts.get(providerId);\n\t\tif (!accounts) {\n\t\t\taccounts = [];\n\t\t\tthis.groupedAccounts.set(providerId, accounts);\n\t\t}\n\n\t\tconst sessionFromEmbedder = await this.sessionFromEmbedder.value;\n\t\tlet canSignOut = true;\n\t\tif (\n\t\t\tsessionFromEmbedder && // if we have a session from the embedder\n\t\t\t!sessionFromEmbedder.canSignOut && // and that session says we can't sign out\n\t\t\t(await this.authenticationService.getSessions(providerId)) // and that session is associated with the account we are adding/updating\n\t\t\t\t.some(\n\t\t\t\t\t(s) =>\n\t\t\t\t\t\ts.id === sessionFromEmbedder.id &&\n\t\t\t\t\t\ts.account.id === account.id,\n\t\t\t\t)\n\t\t) {\n\t\t\tcanSignOut = false;\n\t\t}\n\n\t\tconst existingAccount = accounts.find((a) => a.label === account.label);\n\t\tif (existingAccount) {\n\t\t\t// if we have an existing account and we discover that we\n\t\t\t// can't sign out of it, update the account to mark it as \"can't sign out\"\n\t\t\tif (!canSignOut) {\n\t\t\t\texistingAccount.canSignOut = canSignOut;\n\t\t\t}\n\t\t} else {\n\t\t\taccounts.push({ ...account, canSignOut });\n\t\t}\n\t}\n\n\tprivate removeAccount(\n\t\tproviderId: string,\n\t\taccount: AuthenticationSessionAccount,\n\t): void {\n\t\tconst accounts = this.groupedAccounts.get(providerId);\n\t\tif (!accounts) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst index = accounts.findIndex((a) => a.id === account.id);\n\t\tif (index === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\taccounts.splice(index, 1);\n\t\tif (accounts.length === 0) {\n\t\t\tthis.groupedAccounts.delete(providerId);\n\t\t}\n\t}\n\n\tprivate async addAccountsFromProvider(providerId: string): Promise<void> {\n\t\ttry {\n\t\t\tconst sessions =\n\t\t\t\tawait this.authenticationService.getSessions(providerId);\n\t\t\tthis.problematicProviders.delete(providerId);\n\n\t\t\tfor (const session of sessions) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.addOrUpdateAccount(providerId, session.account);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthis.logService.error(e);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t\tthis.problematicProviders.add(providerId);\n\t\t}\n\t}\n\n\t//#endregion\n}\n\nexport class GlobalActivityActionViewItem extends AbstractGlobalActivityActionViewItem {\n\tprivate profileBadge: HTMLElement | undefined;\n\tprivate profileBadgeContent: HTMLElement | undefined;\n\n\tconstructor(\n\t\tcontextMenuActionsProvider: () => IAction[],\n\t\toptions: ICompositeBarActionViewItemOptions,\n\t\tcontextMenuAlignmentOptions: () => Readonly<{ anchorAlignment: AnchorAlignment; anchorAxisAlignment: AnchorAxisAlignment }> | undefined,\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IActivityService activityService: IActivityService,\n\t) {\n\t\tconst action = instantiationService.createInstance(CompositeBarAction, {\n\t\t\tid: GLOBAL_ACTIVITY_ID,\n\t\t\tname: localize('manage', \"Manage\"),\n\t\t\tclassNames: ThemeIcon.asClassNameArray(userDataProfileService.currentProfile.icon ? ThemeIcon.fromId(userDataProfileService.currentProfile.icon) : DEFAULT_ICON)\n\t\t});\n\t\tsuper(MenuId.GlobalActivity, action, options, contextMenuActionsProvider, contextMenuAlignmentOptions, themeService, hoverService, menuService, contextMenuService, contextKeyService, configurationService, keybindingService, activityService);\n\t\tthis._register(action);\n\t\tthis._register(this.userDataProfileService.onDidChangeCurrentProfile(e => {\n\t\t\taction.compositeBarActionItem = {\n\t\t\t\t...action.compositeBarActionItem,\n\t\t\t\tclassNames: ThemeIcon.asClassNameArray(userDataProfileService.currentProfile.icon ? ThemeIcon.fromId(userDataProfileService.currentProfile.icon) : DEFAULT_ICON)\n\t\t\t};\n\t\t}));\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\n\t\tthis.profileBadge = append(container, $(\".profile-badge\"));\n\t\tthis.profileBadgeContent = append(\n\t\t\tthis.profileBadge,\n\t\t\t$(\".profile-badge-content\"),\n\t\t);\n\t\tthis.updateProfileBadge();\n\t}\n\n\tprivate updateProfileBadge(): void {\n\t\tif (!this.profileBadge || !this.profileBadgeContent) {\n\t\t\treturn;\n\t\t}\n\n\t\tclearNode(this.profileBadgeContent);\n\t\thide(this.profileBadge);\n\n\t\tif (this.userDataProfileService.currentProfile.isDefault) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tthis.userDataProfileService.currentProfile.icon &&\n\t\t\tthis.userDataProfileService.currentProfile.icon !== DEFAULT_ICON.id\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ((this.action as CompositeBarAction).activity) {\n\t\t\treturn;\n\t\t}\n\n\t\tshow(this.profileBadge);\n\t\tthis.profileBadgeContent.classList.add(\"profile-text-overlay\");\n\t\tthis.profileBadgeContent.textContent =\n\t\t\tthis.userDataProfileService.currentProfile.name\n\t\t\t\t.substring(0, 2)\n\t\t\t\t.toUpperCase();\n\t}\n\n\tprotected override updateActivity(): void {\n\t\tsuper.updateActivity();\n\t\tthis.updateProfileBadge();\n\t}\n\n\tprotected override computeTitle(): string {\n\t\treturn this.userDataProfileService.currentProfile.isDefault\n\t\t\t? super.computeTitle()\n\t\t\t: localize(\n\t\t\t\t\t\"manage profile\",\n\t\t\t\t\t\"Manage {0} (Profile)\",\n\t\t\t\t\tthis.userDataProfileService.currentProfile.name,\n\t\t\t\t);\n\t}\n}\n\nexport class SimpleAccountActivityActionViewItem extends AccountsActivityActionViewItem {\n\tconstructor(\n\t\thoverOptions: IActivityHoverOptions,\n\t\toptions: IBaseActionViewItemOptions,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IAuthenticationService authenticationService: IAuthenticationService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IProductService productService: IProductService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@ISecretStorageService secretStorageService: ISecretStorageService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@ILogService logService: ILogService,\n\t\t@IActivityService activityService: IActivityService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ICommandService commandService: ICommandService,\n\t) {\n\t\tsuper(\n\t\t\t() => simpleActivityContextMenuActions(storageService, true),\n\t\t\t{\n\t\t\t\t...options,\n\t\t\t\tcolors: (theme) => ({\n\t\t\t\t\tbadgeBackground: theme.getColor(\n\t\t\t\t\t\tACTIVITY_BAR_BADGE_BACKGROUND,\n\t\t\t\t\t),\n\t\t\t\t\tbadgeForeground: theme.getColor(\n\t\t\t\t\t\tACTIVITY_BAR_BADGE_FOREGROUND,\n\t\t\t\t\t),\n\t\t\t\t}),\n\t\t\t\thoverOptions,\n\t\t\t\tcompact: true,\n\t\t\t},\n\t\t\t() => undefined,\n\t\t\t(actions) => actions,\n\t\t\tthemeService,\n\t\t\tlifecycleService,\n\t\t\thoverService,\n\t\t\tcontextMenuService,\n\t\t\tmenuService,\n\t\t\tcontextKeyService,\n\t\t\tauthenticationService,\n\t\t\tenvironmentService,\n\t\t\tproductService,\n\t\t\tconfigurationService,\n\t\t\tkeybindingService,\n\t\t\tsecretStorageService,\n\t\t\tlogService,\n\t\t\tactivityService,\n\t\t\tinstantiationService,\n\t\t\tcommandService,\n\t\t);\n\t}\n}\n\nexport class SimpleGlobalActivityActionViewItem extends GlobalActivityActionViewItem {\n\tconstructor(\n\t\thoverOptions: IActivityHoverOptions,\n\t\toptions: IBaseActionViewItemOptions,\n\t\t@IUserDataProfileService userDataProfileService: IUserDataProfileService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IActivityService activityService: IActivityService,\n\t\t@IStorageService storageService: IStorageService,\n\t) {\n\t\tsuper(\n\t\t\t() => simpleActivityContextMenuActions(storageService, false),\n\t\t\t{\n\t\t\t\t...options,\n\t\t\t\tcolors: (theme) => ({\n\t\t\t\t\tbadgeBackground: theme.getColor(\n\t\t\t\t\t\tACTIVITY_BAR_BADGE_BACKGROUND,\n\t\t\t\t\t),\n\t\t\t\t\tbadgeForeground: theme.getColor(\n\t\t\t\t\t\tACTIVITY_BAR_BADGE_FOREGROUND,\n\t\t\t\t\t),\n\t\t\t\t}),\n\t\t\t\thoverOptions,\n\t\t\t\tcompact: true,\n\t\t\t},\n\t\t\t() => undefined,\n\t\t\tuserDataProfileService,\n\t\t\tthemeService,\n\t\t\thoverService,\n\t\t\tmenuService,\n\t\t\tcontextMenuService,\n\t\t\tcontextKeyService,\n\t\t\tconfigurationService,\n\t\t\tenvironmentService,\n\t\t\tkeybindingService,\n\t\t\tinstantiationService,\n\t\t\tactivityService,\n\t\t);\n\t}\n}\n\nfunction simpleActivityContextMenuActions(\n\tstorageService: IStorageService,\n\tisAccount: boolean,\n): IAction[] {\n\tconst currentElementContextMenuActions: IAction[] = [];\n\tif (isAccount) {\n\t\tcurrentElementContextMenuActions.push(\n\t\t\ttoAction({\n\t\t\t\tid: \"hideAccounts\",\n\t\t\t\tlabel: localize(\"hideAccounts\", \"Hide Accounts\"),\n\t\t\t\trun: () => setAccountsActionVisible(storageService, false),\n\t\t\t}),\n\t\t\tnew Separator(),\n\t\t);\n\t}\n\treturn [\n\t\t...currentElementContextMenuActions,\n\t\ttoAction({\n\t\t\tid: \"toggle.hideAccounts\",\n\t\t\tlabel: localize(\"accounts\", \"Accounts\"),\n\t\t\tchecked: isAccountsActionVisible(storageService),\n\t\t\trun: () =>\n\t\t\t\tsetAccountsActionVisible(\n\t\t\t\t\tstorageService,\n\t\t\t\t\t!isAccountsActionVisible(storageService),\n\t\t\t\t),\n\t\t}),\n\t\ttoAction({\n\t\t\tid: \"toggle.hideManage\",\n\t\t\tlabel: localize(\"manage\", \"Manage\"),\n\t\t\tchecked: true,\n\t\t\tenabled: false,\n\t\t\trun: () => {\n\t\t\t\tthrow new Error('\"Manage\" can not be hidden');\n\t\t\t},\n\t\t}),\n\t];\n}\n\nexport function isAccountsActionVisible(\n\tstorageService: IStorageService,\n): boolean {\n\treturn storageService.getBoolean(\n\t\tAccountsActivityActionViewItem.ACCOUNTS_VISIBILITY_PREFERENCE_KEY,\n\t\tStorageScope.PROFILE,\n\t\ttrue,\n\t);\n}\n\nfunction setAccountsActionVisible(\n\tstorageService: IStorageService,\n\tvisible: boolean,\n) {\n\tstorageService.store(\n\t\tAccountsActivityActionViewItem.ACCOUNTS_VISIBILITY_PREFERENCE_KEY,\n\t\tvisible,\n\t\tStorageScope.PROFILE,\n\t\tStorageTarget.USER,\n\t);\n}\n"],
  "mappings": "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",
  "names": ["e"]
}
