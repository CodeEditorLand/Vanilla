{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/globalCompositeBar.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../nls.js';\nimport { ActionBar, ActionsOrientation } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { ACCOUNTS_ACTIVITY_ID, GLOBAL_ACTIVITY_ID } from '../../common/activity.js';\nimport { IActivity, IActivityService, NumberBadge } from '../../services/activity/common/activity.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { DisposableStore, Disposable } from '../../../base/common/lifecycle.js';\nimport { IColorTheme, IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../platform/storage/common/storage.js';\nimport { IExtensionService } from '../../services/extensions/common/extensions.js';\nimport { CompositeBarActionViewItem, CompositeBarAction, IActivityHoverOptions, ICompositeBarActionViewItemOptions, ICompositeBarColors } from './compositeBarActions.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\nimport { Action, IAction, Separator, SubmenuAction, toAction } from '../../../base/common/actions.js';\nimport { IMenu, IMenuService, MenuId } from '../../../platform/actions/common/actions.js';\nimport { addDisposableListener, EventType, append, clearNode, hide, show, EventHelper, $, runWhenWindowIdle, getWindow } from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\nimport { EventType as TouchEventType, GestureEvent } from '../../../base/browser/touch.js';\nimport { AnchorAlignment, AnchorAxisAlignment } from '../../../base/browser/ui/contextview/contextview.js';\nimport { Lazy } from '../../../base/common/lazy.js';\nimport { createAndFillInActionBarActions } from '../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../platform/contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { IProductService } from '../../../platform/product/common/productService.js';\nimport { ISecretStorageService } from '../../../platform/secrets/common/secrets.js';\nimport { AuthenticationSessionInfo, getCurrentAuthenticationSessionInfo } from '../../services/authentication/browser/authenticationService.js';\nimport { AuthenticationSessionAccount, IAuthenticationService } from '../../services/authentication/common/authentication.js';\nimport { IWorkbenchEnvironmentService } from '../../services/environment/common/environmentService.js';\nimport { IHoverService } from '../../../platform/hover/browser/hover.js';\nimport { ILifecycleService, LifecyclePhase } from '../../services/lifecycle/common/lifecycle.js';\nimport { IUserDataProfileService } from '../../services/userDataProfile/common/userDataProfile.js';\nimport { DEFAULT_ICON } from '../../services/userDataProfile/common/userDataProfileIcons.js';\nimport { isString } from '../../../base/common/types.js';\nimport { KeyCode } from '../../../base/common/keyCodes.js';\nimport { ACTIVITY_BAR_BADGE_BACKGROUND, ACTIVITY_BAR_BADGE_FOREGROUND } from '../../common/theme.js';\nimport { IBaseActionViewItemOptions } from '../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\n\nexport class GlobalCompositeBar extends Disposable {\n\n\tprivate static readonly ACCOUNTS_ACTION_INDEX = 0;\n\tstatic readonly ACCOUNTS_ICON = registerIcon('accounts-view-bar-icon', Codicon.account, localize('accountsViewBarIcon', \"Accounts icon in the view bar.\"));\n\n\treadonly element: HTMLElement;\n\n\tprivate readonly globalActivityAction = this._register(new Action(GLOBAL_ACTIVITY_ID));\n\tprivate readonly accountAction = this._register(new Action(ACCOUNTS_ACTIVITY_ID));\n\tprivate readonly globalActivityActionBar: ActionBar;\n\n\tconstructor(\n\t\tprivate readonly contextMenuActionsProvider: () => IAction[],\n\t\tprivate readonly colors: (theme: IColorTheme) => ICompositeBarColors,\n\t\tprivate readonly activityHoverOptions: IActivityHoverOptions,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t) {\n\t\tsuper();\n\n\t\tthis.element = document.createElement('div');\n\t\tconst contextMenuAlignmentOptions = () => ({\n\t\t\tanchorAlignment: configurationService.getValue('workbench.sideBar.location') === 'left' ? AnchorAlignment.RIGHT : AnchorAlignment.LEFT,\n\t\t\tanchorAxisAlignment: AnchorAxisAlignment.HORIZONTAL\n\t\t});\n\t\tthis.globalActivityActionBar = this._register(new ActionBar(this.element, {\n\t\t\tactionViewItemProvider: (action, options) => {\n\t\t\t\tif (action.id === GLOBAL_ACTIVITY_ID) {\n\t\t\t\t\treturn this.instantiationService.createInstance(GlobalActivityActionViewItem, this.contextMenuActionsProvider, { ...options, colors: this.colors, hoverOptions: this.activityHoverOptions }, contextMenuAlignmentOptions);\n\t\t\t\t}\n\n\t\t\t\tif (action.id === ACCOUNTS_ACTIVITY_ID) {\n\t\t\t\t\treturn this.instantiationService.createInstance(AccountsActivityActionViewItem,\n\t\t\t\t\t\tthis.contextMenuActionsProvider,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...options,\n\t\t\t\t\t\t\tcolors: this.colors,\n\t\t\t\t\t\t\thoverOptions: this.activityHoverOptions\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcontextMenuAlignmentOptions,\n\t\t\t\t\t\t(actions: IAction[]) => {\n\t\t\t\t\t\t\tactions.unshift(...[\n\t\t\t\t\t\t\t\ttoAction({ id: 'hideAccounts', label: localize('hideAccounts', \"Hide Accounts\"), run: () => setAccountsActionVisible(storageService, false) }),\n\t\t\t\t\t\t\t\tnew Separator()\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`No view item for action '${action.id}'`);\n\t\t\t},\n\t\t\torientation: ActionsOrientation.VERTICAL,\n\t\t\tariaLabel: localize('manage', \"Manage\"),\n\t\t\tpreventLoopNavigation: true\n\t\t}));\n\n\t\tif (this.accountsVisibilityPreference) {\n\t\t\tthis.globalActivityActionBar.push(this.accountAction, { index: GlobalCompositeBar.ACCOUNTS_ACTION_INDEX });\n\t\t}\n\n\t\tthis.globalActivityActionBar.push(this.globalActivityAction);\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis.extensionService.whenInstalledExtensionsRegistered().then(() => {\n\t\t\tif (!this._store.isDisposed) {\n\t\t\t\tthis._register(this.storageService.onDidChangeValue(StorageScope.PROFILE, AccountsActivityActionViewItem.ACCOUNTS_VISIBILITY_PREFERENCE_KEY, this._store)(() => this.toggleAccountsActivity()));\n\t\t\t}\n\t\t});\n\t}\n\n\tcreate(parent: HTMLElement): void {\n\t\tparent.appendChild(this.element);\n\t}\n\n\tfocus(): void {\n\t\tthis.globalActivityActionBar.focus(true);\n\t}\n\n\tsize(): number {\n\t\treturn this.globalActivityActionBar.viewItems.length;\n\t}\n\n\tgetContextMenuActions(): IAction[] {\n\t\treturn [toAction({ id: 'toggleAccountsVisibility', label: localize('accounts', \"Accounts\"), checked: this.accountsVisibilityPreference, run: () => this.accountsVisibilityPreference = !this.accountsVisibilityPreference })];\n\t}\n\n\tprivate toggleAccountsActivity() {\n\t\tif (this.globalActivityActionBar.length() === 2 && this.accountsVisibilityPreference) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.globalActivityActionBar.length() === 2) {\n\t\t\tthis.globalActivityActionBar.pull(GlobalCompositeBar.ACCOUNTS_ACTION_INDEX);\n\t\t} else {\n\t\t\tthis.globalActivityActionBar.push(this.accountAction, { index: GlobalCompositeBar.ACCOUNTS_ACTION_INDEX });\n\t\t}\n\t}\n\n\tprivate get accountsVisibilityPreference(): boolean {\n\t\treturn isAccountsActionVisible(this.storageService);\n\t}\n\n\tprivate set accountsVisibilityPreference(value: boolean) {\n\t\tsetAccountsActionVisible(this.storageService, value);\n\t}\n}\n\nabstract class AbstractGlobalActivityActionViewItem extends CompositeBarActionViewItem {\n\n\tconstructor(\n\t\tprivate readonly menuId: MenuId,\n\t\taction: CompositeBarAction,\n\t\toptions: ICompositeBarActionViewItemOptions,\n\t\tprivate readonly contextMenuActionsProvider: () => IAction[],\n\t\tprivate readonly contextMenuAlignmentOptions: () => Readonly<{ anchorAlignment: AnchorAlignment; anchorAxisAlignment: AnchorAxisAlignment }> | undefined,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IActivityService private readonly activityService: IActivityService,\n\t) {\n\t\tsuper(action, { draggable: false, icon: true, hasPopup: true, ...options }, () => true, themeService, hoverService, configurationService, keybindingService);\n\n\t\tthis.updateItemActivity();\n\t\tthis._register(this.activityService.onDidChangeActivity(viewContainerOrAction => {\n\t\t\tif (isString(viewContainerOrAction) && viewContainerOrAction === this.compositeBarActionItem.id) {\n\t\t\t\tthis.updateItemActivity();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate updateItemActivity(): void {\n\t\tconst activities = this.activityService.getActivity(this.compositeBarActionItem.id);\n\t\tlet activity = activities[0];\n\t\tif (activity) {\n\t\t\tconst { badge, priority } = activity;\n\t\t\tif (badge instanceof NumberBadge && activities.length > 1) {\n\t\t\t\tconst cumulativeNumberBadge = this.getCumulativeNumberBadge(activities, priority ?? 0);\n\t\t\t\tactivity = { badge: cumulativeNumberBadge };\n\t\t\t}\n\t\t}\n\t\t(this.action as CompositeBarAction).activity = activity;\n\t}\n\n\tprivate getCumulativeNumberBadge(activityCache: IActivity[], priority: number): NumberBadge {\n\t\tconst numberActivities = activityCache.filter(activity => activity.badge instanceof NumberBadge && (activity.priority ?? 0) === priority);\n\t\tconst number = numberActivities.reduce((result, activity) => { return result + (<NumberBadge>activity.badge).number; }, 0);\n\t\tconst descriptorFn = (): string => {\n\t\t\treturn numberActivities.reduce((result, activity, index) => {\n\t\t\t\tresult = result + (<NumberBadge>activity.badge).getDescription();\n\t\t\t\tif (index < numberActivities.length - 1) {\n\t\t\t\t\tresult = `${result}\\n`;\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, '');\n\t\t};\n\n\t\treturn new NumberBadge(number, descriptorFn);\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\n\t\tthis._register(addDisposableListener(this.container, EventType.MOUSE_DOWN, async (e: MouseEvent) => {\n\t\t\tEventHelper.stop(e, true);\n\t\t\tconst isLeftClick = e?.button !== 2;\n\t\t\t// Left-click run\n\t\t\tif (isLeftClick) {\n\t\t\t\tthis.run();\n\t\t\t}\n\t\t}));\n\n\t\t// The rest of the activity bar uses context menu event for the context menu, so we match this\n\t\tthis._register(addDisposableListener(this.container, EventType.CONTEXT_MENU, async (e: MouseEvent) => {\n\t\t\t// Let the item decide on the context menu instead of the toolbar\n\t\t\te.stopPropagation();\n\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tconst actions = await this.resolveContextMenuActions(disposables);\n\n\t\t\tconst event = new StandardMouseEvent(getWindow(this.container), e);\n\n\t\t\tthis.contextMenuService.showContextMenu({\n\t\t\t\tgetAnchor: () => event,\n\t\t\t\tgetActions: () => actions,\n\t\t\t\tonHide: () => disposables.dispose()\n\t\t\t});\n\t\t}));\n\n\t\tthis._register(addDisposableListener(this.container, EventType.KEY_UP, (e: KeyboardEvent) => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\tif (event.equals(KeyCode.Enter) || event.equals(KeyCode.Space)) {\n\t\t\t\tEventHelper.stop(e, true);\n\t\t\t\tthis.run();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(addDisposableListener(this.container, TouchEventType.Tap, (e: GestureEvent) => {\n\t\t\tEventHelper.stop(e, true);\n\t\t\tthis.run();\n\t\t}));\n\t}\n\n\tprotected async resolveContextMenuActions(disposables: DisposableStore): Promise<IAction[]> {\n\t\treturn this.contextMenuActionsProvider();\n\t}\n\n\tprivate async run(): Promise<void> {\n\t\tconst disposables = new DisposableStore();\n\t\tconst menu = disposables.add(this.menuService.createMenu(this.menuId, this.contextKeyService));\n\t\tconst actions = await this.resolveMainMenuActions(menu, disposables);\n\t\tconst { anchorAlignment, anchorAxisAlignment } = this.contextMenuAlignmentOptions() ?? { anchorAlignment: undefined, anchorAxisAlignment: undefined };\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => this.label,\n\t\t\tanchorAlignment,\n\t\t\tanchorAxisAlignment,\n\t\t\tgetActions: () => actions,\n\t\t\tonHide: () => disposables.dispose(),\n\t\t\tmenuActionOptions: { renderShortTitle: true },\n\t\t});\n\n\t}\n\n\tprotected async resolveMainMenuActions(menu: IMenu, _disposable: DisposableStore): Promise<IAction[]> {\n\t\tconst actions: IAction[] = [];\n\t\tcreateAndFillInActionBarActions(menu, { renderShortTitle: true }, { primary: [], secondary: actions });\n\t\treturn actions;\n\t}\n}\n\nexport class AccountsActivityActionViewItem extends AbstractGlobalActivityActionViewItem {\n\n\tstatic readonly ACCOUNTS_VISIBILITY_PREFERENCE_KEY = 'workbench.activity.showAccounts';\n\n\tprivate readonly groupedAccounts: Map<string, (AuthenticationSessionAccount & { canSignOut: boolean })[]> = new Map();\n\tprivate readonly problematicProviders: Set<string> = new Set();\n\n\tprivate initialized = false;\n\tprivate sessionFromEmbedder = new Lazy<Promise<AuthenticationSessionInfo | undefined>>(() => getCurrentAuthenticationSessionInfo(this.secretStorageService, this.productService));\n\n\tconstructor(\n\t\tcontextMenuActionsProvider: () => IAction[],\n\t\toptions: ICompositeBarActionViewItemOptions,\n\t\tcontextMenuAlignmentOptions: () => Readonly<{ anchorAlignment: AnchorAlignment; anchorAxisAlignment: AnchorAxisAlignment }> | undefined,\n\t\tprivate readonly fillContextMenuActions: (actions: IAction[]) => void,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IAuthenticationService private readonly authenticationService: IAuthenticationService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@ISecretStorageService private readonly secretStorageService: ISecretStorageService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IActivityService activityService: IActivityService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ICommandService private readonly commandService: ICommandService\n\t) {\n\t\tconst action = instantiationService.createInstance(CompositeBarAction, {\n\t\t\tid: ACCOUNTS_ACTIVITY_ID,\n\t\t\tname: localize('accounts', \"Accounts\"),\n\t\t\tclassNames: ThemeIcon.asClassNameArray(GlobalCompositeBar.ACCOUNTS_ICON)\n\t\t});\n\t\tsuper(MenuId.AccountsContext, action, options, contextMenuActionsProvider, contextMenuAlignmentOptions, themeService, hoverService, menuService, contextMenuService, contextKeyService, configurationService, keybindingService, activityService);\n\t\tthis._register(action);\n\t\tthis.registerListeners();\n\t\tthis.initialize();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.authenticationService.onDidRegisterAuthenticationProvider(async (e) => {\n\t\t\tawait this.addAccountsFromProvider(e.id);\n\t\t}));\n\n\t\tthis._register(this.authenticationService.onDidUnregisterAuthenticationProvider((e) => {\n\t\t\tthis.groupedAccounts.delete(e.id);\n\t\t\tthis.problematicProviders.delete(e.id);\n\t\t}));\n\n\t\tthis._register(this.authenticationService.onDidChangeSessions(async e => {\n\t\t\tif (e.event.removed) {\n\t\t\t\tfor (const removed of e.event.removed) {\n\t\t\t\t\tthis.removeAccount(e.providerId, removed.account);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const changed of [...(e.event.changed ?? []), ...(e.event.added ?? [])]) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.addOrUpdateAccount(e.providerId, changed.account);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthis.logService.error(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\t// This function exists to ensure that the accounts are added for auth providers that had already been registered\n\t// before the menu was created.\n\tprivate async initialize(): Promise<void> {\n\t\t// Resolving the menu doesn't need to happen immediately, so we can wait until after the workbench has been restored\n\t\t// and only run this when the system is idle.\n\t\tawait this.lifecycleService.when(LifecyclePhase.Restored);\n\t\tif (this._store.isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tconst disposable = this._register(runWhenWindowIdle(getWindow(this.element), async () => {\n\t\t\tawait this.doInitialize();\n\t\t\tdisposable.dispose();\n\t\t}));\n\t}\n\n\tprivate async doInitialize(): Promise<void> {\n\t\tconst providerIds = this.authenticationService.getProviderIds();\n\t\tconst results = await Promise.allSettled(providerIds.map(providerId => this.addAccountsFromProvider(providerId)));\n\n\t\t// Log any errors that occurred while initializing. We try to be best effort here to show the most amount of accounts\n\t\tfor (const result of results) {\n\t\t\tif (result.status === 'rejected') {\n\t\t\t\tthis.logService.error(result.reason);\n\t\t\t}\n\t\t}\n\n\t\tthis.initialized = true;\n\t}\n\n\t//#region overrides\n\n\tprotected override async resolveMainMenuActions(accountsMenu: IMenu, disposables: DisposableStore): Promise<IAction[]> {\n\t\tawait super.resolveMainMenuActions(accountsMenu, disposables);\n\n\t\tconst providers = this.authenticationService.getProviderIds();\n\t\tconst otherCommands = accountsMenu.getActions();\n\t\tlet menus: IAction[] = [];\n\n\t\tfor (const providerId of providers) {\n\t\t\tif (!this.initialized) {\n\t\t\t\tconst noAccountsAvailableAction = disposables.add(new Action('noAccountsAvailable', localize('loading', \"Loading...\"), undefined, false));\n\t\t\t\tmenus.push(noAccountsAvailableAction);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst providerLabel = this.authenticationService.getProvider(providerId).label;\n\t\t\tconst accounts = this.groupedAccounts.get(providerId);\n\t\t\tif (!accounts) {\n\t\t\t\tif (this.problematicProviders.has(providerId)) {\n\t\t\t\t\tconst providerUnavailableAction = disposables.add(new Action('providerUnavailable', localize('authProviderUnavailable', '{0} is currently unavailable', providerLabel), undefined, false));\n\t\t\t\t\tmenus.push(providerUnavailableAction);\n\t\t\t\t\t// try again in the background so that if the failure was intermittent, we can resolve it on the next showing of the menu\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.addAccountsFromProvider(providerId);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthis.logService.error(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (const account of accounts) {\n\t\t\t\tconst manageExtensionsAction = toAction({\n\t\t\t\t\tid: `configureSessions${account.label}`,\n\t\t\t\t\tlabel: localize('manageTrustedExtensions', \"Manage Trusted Extensions\"),\n\t\t\t\t\tenabled: true,\n\t\t\t\t\trun: () => this.commandService.executeCommand('_manageTrustedExtensionsForAccount', { providerId, accountLabel: account.label })\n\t\t\t\t});\n\n\t\t\t\tconst providerSubMenuActions: IAction[] = [manageExtensionsAction];\n\n\t\t\t\tif (account.canSignOut) {\n\t\t\t\t\tproviderSubMenuActions.push(toAction({\n\t\t\t\t\t\tid: 'signOut',\n\t\t\t\t\t\tlabel: localize('signOut', \"Sign Out\"),\n\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\trun: () => this.commandService.executeCommand('_signOutOfAccount', { providerId, accountLabel: account.label })\n\t\t\t\t\t}));\n\t\t\t\t}\n\n\t\t\t\tconst providerSubMenu = new SubmenuAction('activitybar.submenu', `${account.label} (${providerLabel})`, providerSubMenuActions);\n\t\t\t\tmenus.push(providerSubMenu);\n\t\t\t}\n\t\t}\n\n\t\tif (providers.length && !menus.length) {\n\t\t\tconst noAccountsAvailableAction = disposables.add(new Action('noAccountsAvailable', localize('noAccounts', \"You are not signed in to any accounts\"), undefined, false));\n\t\t\tmenus.push(noAccountsAvailableAction);\n\t\t}\n\n\t\tif (menus.length && otherCommands.length) {\n\t\t\tmenus.push(new Separator());\n\t\t}\n\n\t\totherCommands.forEach((group, i) => {\n\t\t\tconst actions = group[1];\n\t\t\tmenus = menus.concat(actions);\n\t\t\tif (i !== otherCommands.length - 1) {\n\t\t\t\tmenus.push(new Separator());\n\t\t\t}\n\t\t});\n\n\t\treturn menus;\n\t}\n\n\tprotected override async resolveContextMenuActions(disposables: DisposableStore): Promise<IAction[]> {\n\t\tconst actions = await super.resolveContextMenuActions(disposables);\n\t\tthis.fillContextMenuActions(actions);\n\t\treturn actions;\n\t}\n\n\t//#endregion\n\n\t//#region groupedAccounts helpers\n\n\tprivate async addOrUpdateAccount(providerId: string, account: AuthenticationSessionAccount): Promise<void> {\n\t\tlet accounts = this.groupedAccounts.get(providerId);\n\t\tif (!accounts) {\n\t\t\taccounts = [];\n\t\t\tthis.groupedAccounts.set(providerId, accounts);\n\t\t}\n\n\t\tconst sessionFromEmbedder = await this.sessionFromEmbedder.value;\n\t\tlet canSignOut = true;\n\t\tif (\n\t\t\tsessionFromEmbedder\t\t\t\t\t\t\t\t\t\t\t\t// if we have a session from the embedder\n\t\t\t&& !sessionFromEmbedder.canSignOut\t\t\t\t\t\t\t\t// and that session says we can't sign out\n\t\t\t&& (await this.authenticationService.getSessions(providerId))\t// and that session is associated with the account we are adding/updating\n\t\t\t\t.some(s =>\n\t\t\t\t\ts.id === sessionFromEmbedder.id\n\t\t\t\t\t&& s.account.id === account.id\n\t\t\t\t)\n\t\t) {\n\t\t\tcanSignOut = false;\n\t\t}\n\n\t\tconst existingAccount = accounts.find(a => a.label === account.label);\n\t\tif (existingAccount) {\n\t\t\t// if we have an existing account and we discover that we\n\t\t\t// can't sign out of it, update the account to mark it as \"can't sign out\"\n\t\t\tif (!canSignOut) {\n\t\t\t\texistingAccount.canSignOut = canSignOut;\n\t\t\t}\n\t\t} else {\n\t\t\taccounts.push({ ...account, canSignOut });\n\t\t}\n\t}\n\n\tprivate removeAccount(providerId: string, account: AuthenticationSessionAccount): void {\n\t\tconst accounts = this.groupedAccounts.get(providerId);\n\t\tif (!accounts) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst index = accounts.findIndex(a => a.id === account.id);\n\t\tif (index === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\taccounts.splice(index, 1);\n\t\tif (accounts.length === 0) {\n\t\t\tthis.groupedAccounts.delete(providerId);\n\t\t}\n\t}\n\n\tprivate async addAccountsFromProvider(providerId: string): Promise<void> {\n\t\ttry {\n\t\t\tconst sessions = await this.authenticationService.getSessions(providerId);\n\t\t\tthis.problematicProviders.delete(providerId);\n\n\t\t\tfor (const session of sessions) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.addOrUpdateAccount(providerId, session.account);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthis.logService.error(e);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t\tthis.problematicProviders.add(providerId);\n\t\t}\n\t}\n\n\t//#endregion\n}\n\nexport class GlobalActivityActionViewItem extends AbstractGlobalActivityActionViewItem {\n\n\tprivate profileBadge: HTMLElement | undefined;\n\tprivate profileBadgeContent: HTMLElement | undefined;\n\n\tconstructor(\n\t\tcontextMenuActionsProvider: () => IAction[],\n\t\toptions: ICompositeBarActionViewItemOptions,\n\t\tcontextMenuAlignmentOptions: () => Readonly<{ anchorAlignment: AnchorAlignment; anchorAxisAlignment: AnchorAxisAlignment }> | undefined,\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IActivityService activityService: IActivityService,\n\t) {\n\t\tconst action = instantiationService.createInstance(CompositeBarAction, {\n\t\t\tid: GLOBAL_ACTIVITY_ID,\n\t\t\tname: localize('manage', \"Manage\"),\n\t\t\tclassNames: ThemeIcon.asClassNameArray(userDataProfileService.currentProfile.icon ? ThemeIcon.fromId(userDataProfileService.currentProfile.icon) : DEFAULT_ICON)\n\t\t});\n\t\tsuper(MenuId.GlobalActivity, action, options, contextMenuActionsProvider, contextMenuAlignmentOptions, themeService, hoverService, menuService, contextMenuService, contextKeyService, configurationService, keybindingService, activityService);\n\t\tthis._register(action);\n\t\tthis._register(this.userDataProfileService.onDidChangeCurrentProfile(e => {\n\t\t\taction.compositeBarActionItem = {\n\t\t\t\t...action.compositeBarActionItem,\n\t\t\t\tclassNames: ThemeIcon.asClassNameArray(userDataProfileService.currentProfile.icon ? ThemeIcon.fromId(userDataProfileService.currentProfile.icon) : DEFAULT_ICON)\n\t\t\t};\n\t\t}));\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\n\t\tthis.profileBadge = append(container, $('.profile-badge'));\n\t\tthis.profileBadgeContent = append(this.profileBadge, $('.profile-badge-content'));\n\t\tthis.updateProfileBadge();\n\t}\n\n\tprivate updateProfileBadge(): void {\n\t\tif (!this.profileBadge || !this.profileBadgeContent) {\n\t\t\treturn;\n\t\t}\n\n\t\tclearNode(this.profileBadgeContent);\n\t\thide(this.profileBadge);\n\n\t\tif (this.userDataProfileService.currentProfile.isDefault) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.userDataProfileService.currentProfile.icon && this.userDataProfileService.currentProfile.icon !== DEFAULT_ICON.id) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ((this.action as CompositeBarAction).activity) {\n\t\t\treturn;\n\t\t}\n\n\t\tshow(this.profileBadge);\n\t\tthis.profileBadgeContent.classList.add('profile-text-overlay');\n\t\tthis.profileBadgeContent.textContent = this.userDataProfileService.currentProfile.name.substring(0, 2).toUpperCase();\n\t}\n\n\tprotected override updateActivity(): void {\n\t\tsuper.updateActivity();\n\t\tthis.updateProfileBadge();\n\t}\n\n\tprotected override computeTitle(): string {\n\t\treturn this.userDataProfileService.currentProfile.isDefault ? super.computeTitle() : localize('manage profile', \"Manage {0} (Profile)\", this.userDataProfileService.currentProfile.name);\n\t}\n}\n\nexport class SimpleAccountActivityActionViewItem extends AccountsActivityActionViewItem {\n\n\tconstructor(\n\t\thoverOptions: IActivityHoverOptions,\n\t\toptions: IBaseActionViewItemOptions,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IAuthenticationService authenticationService: IAuthenticationService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IProductService productService: IProductService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@ISecretStorageService secretStorageService: ISecretStorageService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@ILogService logService: ILogService,\n\t\t@IActivityService activityService: IActivityService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ICommandService commandService: ICommandService\n\t) {\n\t\tsuper(() => simpleActivityContextMenuActions(storageService, true),\n\t\t\t{\n\t\t\t\t...options,\n\t\t\t\tcolors: theme => ({\n\t\t\t\t\tbadgeBackground: theme.getColor(ACTIVITY_BAR_BADGE_BACKGROUND),\n\t\t\t\t\tbadgeForeground: theme.getColor(ACTIVITY_BAR_BADGE_FOREGROUND),\n\t\t\t\t}),\n\t\t\t\thoverOptions,\n\t\t\t\tcompact: true,\n\t\t\t}, () => undefined, actions => actions, themeService, lifecycleService, hoverService, contextMenuService, menuService, contextKeyService, authenticationService, environmentService, productService, configurationService, keybindingService, secretStorageService, logService, activityService, instantiationService, commandService);\n\t}\n}\n\nexport class SimpleGlobalActivityActionViewItem extends GlobalActivityActionViewItem {\n\n\tconstructor(\n\t\thoverOptions: IActivityHoverOptions,\n\t\toptions: IBaseActionViewItemOptions,\n\t\t@IUserDataProfileService userDataProfileService: IUserDataProfileService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IActivityService activityService: IActivityService,\n\t\t@IStorageService storageService: IStorageService\n\t) {\n\t\tsuper(() => simpleActivityContextMenuActions(storageService, false),\n\t\t\t{\n\t\t\t\t...options,\n\t\t\t\tcolors: theme => ({\n\t\t\t\t\tbadgeBackground: theme.getColor(ACTIVITY_BAR_BADGE_BACKGROUND),\n\t\t\t\t\tbadgeForeground: theme.getColor(ACTIVITY_BAR_BADGE_FOREGROUND),\n\t\t\t\t}),\n\t\t\t\thoverOptions,\n\t\t\t\tcompact: true,\n\t\t\t}, () => undefined, userDataProfileService, themeService, hoverService, menuService, contextMenuService, contextKeyService, configurationService, environmentService, keybindingService, instantiationService, activityService);\n\t}\n}\n\nfunction simpleActivityContextMenuActions(storageService: IStorageService, isAccount: boolean): IAction[] {\n\tconst currentElementContextMenuActions: IAction[] = [];\n\tif (isAccount) {\n\t\tcurrentElementContextMenuActions.push(\n\t\t\ttoAction({ id: 'hideAccounts', label: localize('hideAccounts', \"Hide Accounts\"), run: () => setAccountsActionVisible(storageService, false) }),\n\t\t\tnew Separator()\n\t\t);\n\t}\n\treturn [\n\t\t...currentElementContextMenuActions,\n\t\ttoAction({ id: 'toggle.hideAccounts', label: localize('accounts', \"Accounts\"), checked: isAccountsActionVisible(storageService), run: () => setAccountsActionVisible(storageService, !isAccountsActionVisible(storageService)) }),\n\t\ttoAction({ id: 'toggle.hideManage', label: localize('manage', \"Manage\"), checked: true, enabled: false, run: () => { throw new Error('\"Manage\" can not be hidden'); } })\n\t];\n}\n\nexport function isAccountsActionVisible(storageService: IStorageService): boolean {\n\treturn storageService.getBoolean(AccountsActivityActionViewItem.ACCOUNTS_VISIBILITY_PREFERENCE_KEY, StorageScope.PROFILE, true);\n}\n\nfunction setAccountsActionVisible(storageService: IStorageService, visible: boolean) {\n\tstorageService.store(AccountsActivityActionViewItem.ACCOUNTS_VISIBILITY_PREFERENCE_KEY, visible, StorageScope.PROFILE, StorageTarget.USER);\n}\n"],
  "mappings": "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",
  "names": ["e"]
}
