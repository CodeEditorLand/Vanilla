{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/editor/binaryDiffEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../../nls.js';\nimport { BINARY_DIFF_EDITOR_ID } from '../../../common/editor.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { SideBySideEditor } from './sideBySideEditor.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { BaseBinaryResourceEditor } from './binaryEditor.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ITextResourceConfigurationService } from '../../../../editor/common/services/textResourceConfiguration.js';\nimport { IEditorGroup, IEditorGroupsService } from '../../../services/editor/common/editorGroupsService.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\n\n/**\n * An implementation of editor for diffing binary files like images or videos.\n */\nexport class BinaryResourceDiffEditor extends SideBySideEditor {\n\n\tstatic override readonly ID = BINARY_DIFF_EDITOR_ID;\n\n\tconstructor(\n\t\tgroup: IEditorGroup,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ITextResourceConfigurationService textResourceConfigurationService: ITextResourceConfigurationService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(group, telemetryService, instantiationService, themeService, storageService, configurationService, textResourceConfigurationService, editorService, editorGroupService);\n\t}\n\n\tgetMetadata(): string | undefined {\n\t\tconst primary = this.getPrimaryEditorPane();\n\t\tconst secondary = this.getSecondaryEditorPane();\n\n\t\tif (primary instanceof BaseBinaryResourceEditor && secondary instanceof BaseBinaryResourceEditor) {\n\t\t\treturn localize('metadataDiff', \"{0} \u2194 {1}\", secondary.getMetadata(), primary.getMetadata());\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,gBAAgB;AACzB,SAAS,6BAA6B;AACtC,SAAS,yBAAyB;AAClC,SAAS,qBAAqB;AAC9B,SAAS,wBAAwB;AACjC,SAAS,6BAA6B;AACtC,SAAS,gCAAgC;AACzC,SAAS,uBAAuB;AAChC,SAAS,6BAA6B;AACtC,SAAS,yCAAyC;AAClD,SAAS,cAAc,4BAA4B;AACnD,SAAS,sBAAsB;AAKxB,IAAM,2BAAN,cAAuC,iBAAiB;AAAA,EArB/D,OAqB+D;AAAA;AAAA;AAAA,EAE9D,OAAyB,KAAK;AAAA,EAE9B,YACC,OACmB,kBACI,sBACR,cACE,gBACM,sBACY,kCACnB,eACM,oBACrB;AACD,UAAM,OAAO,kBAAkB,sBAAsB,cAAc,gBAAgB,sBAAsB,kCAAkC,eAAe,kBAAkB;AAAA,EAC7K;AAAA,EAEA,cAAkC;AACjC,UAAM,UAAU,KAAK,qBAAqB;AAC1C,UAAM,YAAY,KAAK,uBAAuB;AAE9C,QAAI,mBAAmB,4BAA4B,qBAAqB,0BAA0B;AACjG,aAAO,SAAS,gBAAgB,kBAAa,UAAU,YAAY,GAAG,QAAQ,YAAY,CAAC;AAAA,IAC5F;AAEA,WAAO;AAAA,EACR;AACD;AA5Ba,2BAAN;AAAA,EAMJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAbU;",
  "names": []
}
