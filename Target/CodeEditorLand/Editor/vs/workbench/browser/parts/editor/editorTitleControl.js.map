{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/editor/editorTitleControl.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/editortitlecontrol.css\";\nimport { Dimension, clearNode } from \"../../../../base/browser/dom.js\";\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tIThemeService,\n\tThemable,\n} from \"../../../../platform/theme/common/themeService.js\";\nimport type { IEditorPartOptions } from \"../../../common/editor.js\";\nimport type { IReadonlyEditorGroupModel } from \"../../../common/editor/editorGroupModel.js\";\nimport type { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport {\n\tBreadcrumbsControl,\n\tBreadcrumbsControlFactory,\n} from \"./breadcrumbsControl.js\";\nimport type {\n\tIEditorGroupTitleHeight,\n\tIEditorGroupView,\n\tIEditorGroupsView,\n\tIEditorPartsView,\n\tIInternalEditorOpenOptions,\n} from \"./editor.js\";\nimport type { IEditorTabsControl } from \"./editorTabsControl.js\";\nimport { MultiEditorTabsControl } from \"./multiEditorTabsControl.js\";\nimport { MultiRowEditorControl } from \"./multiRowEditorTabsControl.js\";\nimport { NoEditorTabsControl } from \"./noEditorTabsControl.js\";\nimport { SingleEditorTabsControl } from \"./singleEditorTabsControl.js\";\n\nexport interface IEditorTitleControlDimensions {\n\t/**\n\t * The size of the parent container the title control is layed out in.\n\t */\n\treadonly container: Dimension;\n\n\t/**\n\t * The maximum size the title control is allowed to consume based on\n\t * other controls that are positioned inside the container.\n\t */\n\treadonly available: Dimension;\n}\n\nexport class EditorTitleControl extends Themable {\n\tprivate editorTabsControl: IEditorTabsControl;\n\tprivate readonly editorTabsControlDisposable = this._register(\n\t\tnew DisposableStore(),\n\t);\n\n\tprivate breadcrumbsControlFactory: BreadcrumbsControlFactory | undefined;\n\tprivate readonly breadcrumbsControlDisposables = this._register(\n\t\tnew DisposableStore(),\n\t);\n\tprivate get breadcrumbsControl() {\n\t\treturn this.breadcrumbsControlFactory?.control;\n\t}\n\n\tconstructor(\n\t\tprivate readonly parent: HTMLElement,\n\t\tprivate readonly editorPartsView: IEditorPartsView,\n\t\tprivate readonly groupsView: IEditorGroupsView,\n\t\tprivate readonly groupView: IEditorGroupView,\n\t\tprivate readonly model: IReadonlyEditorGroupModel,\n\t\t@IInstantiationService private instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService\n\t) {\n\t\tsuper(themeService);\n\n\t\tthis.editorTabsControl = this.createEditorTabsControl();\n\t\tthis.breadcrumbsControlFactory = this.createBreadcrumbsControl();\n\t}\n\n\tprivate createEditorTabsControl(): IEditorTabsControl {\n\t\tlet tabsControlType;\n\t\tswitch (this.groupsView.partOptions.showTabs) {\n\t\t\tcase \"none\":\n\t\t\t\ttabsControlType = NoEditorTabsControl;\n\t\t\t\tbreak;\n\t\t\tcase \"single\":\n\t\t\t\ttabsControlType = SingleEditorTabsControl;\n\t\t\t\tbreak;\n\t\t\tcase \"multiple\":\n\t\t\tdefault:\n\t\t\t\ttabsControlType = this.groupsView.partOptions\n\t\t\t\t\t.pinnedTabsOnSeparateRow\n\t\t\t\t\t? MultiRowEditorControl\n\t\t\t\t\t: MultiEditorTabsControl;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst control = this.instantiationService.createInstance(\n\t\t\ttabsControlType,\n\t\t\tthis.parent,\n\t\t\tthis.editorPartsView,\n\t\t\tthis.groupsView,\n\t\t\tthis.groupView,\n\t\t\tthis.model,\n\t\t);\n\t\treturn this.editorTabsControlDisposable.add(control);\n\t}\n\n\tprivate createBreadcrumbsControl(): BreadcrumbsControlFactory | undefined {\n\t\tif (this.groupsView.partOptions.showTabs === \"single\") {\n\t\t\treturn undefined; // Single tabs have breadcrumbs inlined. No tabs have no breadcrumbs.\n\t\t}\n\n\t\t// Breadcrumbs container\n\t\tconst breadcrumbsContainer = document.createElement(\"div\");\n\t\tbreadcrumbsContainer.classList.add(\"breadcrumbs-below-tabs\");\n\t\tthis.parent.appendChild(breadcrumbsContainer);\n\n\t\tconst breadcrumbsControlFactory =\n\t\t\tthis.breadcrumbsControlDisposables.add(\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tBreadcrumbsControlFactory,\n\t\t\t\t\tbreadcrumbsContainer,\n\t\t\t\t\tthis.groupView,\n\t\t\t\t\t{\n\t\t\t\t\t\tshowFileIcons: true,\n\t\t\t\t\t\tshowSymbolIcons: true,\n\t\t\t\t\t\tshowDecorationColors: false,\n\t\t\t\t\t\tshowPlaceholder: true,\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\n\t\t// Breadcrumbs enablement & visibility change have an impact on layout\n\t\t// so we need to relayout the editor group when that happens.\n\t\tthis.breadcrumbsControlDisposables.add(\n\t\t\tbreadcrumbsControlFactory.onDidEnablementChange(() =>\n\t\t\t\tthis.groupView.relayout(),\n\t\t\t),\n\t\t);\n\t\tthis.breadcrumbsControlDisposables.add(\n\t\t\tbreadcrumbsControlFactory.onDidVisibilityChange(() =>\n\t\t\t\tthis.groupView.relayout(),\n\t\t\t),\n\t\t);\n\n\t\treturn breadcrumbsControlFactory;\n\t}\n\n\topenEditor(\n\t\teditor: EditorInput,\n\t\toptions?: IInternalEditorOpenOptions,\n\t): void {\n\t\tconst didChange = this.editorTabsControl.openEditor(editor, options);\n\n\t\tthis.handleOpenedEditors(didChange);\n\t}\n\n\topenEditors(editors: EditorInput[]): void {\n\t\tconst didChange = this.editorTabsControl.openEditors(editors);\n\n\t\tthis.handleOpenedEditors(didChange);\n\t}\n\n\tprivate handleOpenedEditors(didChange: boolean): void {\n\t\tif (didChange) {\n\t\t\tthis.breadcrumbsControl?.update();\n\t\t} else {\n\t\t\tthis.breadcrumbsControl?.revealLast();\n\t\t}\n\t}\n\n\tbeforeCloseEditor(editor: EditorInput): void {\n\t\treturn this.editorTabsControl.beforeCloseEditor(editor);\n\t}\n\n\tcloseEditor(editor: EditorInput): void {\n\t\tthis.editorTabsControl.closeEditor(editor);\n\n\t\tthis.handleClosedEditors();\n\t}\n\n\tcloseEditors(editors: EditorInput[]): void {\n\t\tthis.editorTabsControl.closeEditors(editors);\n\n\t\tthis.handleClosedEditors();\n\t}\n\n\tprivate handleClosedEditors(): void {\n\t\tif (!this.groupView.activeEditor) {\n\t\t\tthis.breadcrumbsControl?.update();\n\t\t}\n\t}\n\n\tmoveEditor(\n\t\teditor: EditorInput,\n\t\tfromIndex: number,\n\t\ttargetIndex: number,\n\t\tstickyStateChange: boolean,\n\t): void {\n\t\treturn this.editorTabsControl.moveEditor(\n\t\t\teditor,\n\t\t\tfromIndex,\n\t\t\ttargetIndex,\n\t\t\tstickyStateChange,\n\t\t);\n\t}\n\n\tpinEditor(editor: EditorInput): void {\n\t\treturn this.editorTabsControl.pinEditor(editor);\n\t}\n\n\tstickEditor(editor: EditorInput): void {\n\t\treturn this.editorTabsControl.stickEditor(editor);\n\t}\n\n\tunstickEditor(editor: EditorInput): void {\n\t\treturn this.editorTabsControl.unstickEditor(editor);\n\t}\n\n\tsetActive(isActive: boolean): void {\n\t\treturn this.editorTabsControl.setActive(isActive);\n\t}\n\n\tupdateEditorSelections(): void {\n\t\tthis.editorTabsControl.updateEditorSelections();\n\t}\n\n\tupdateEditorLabel(editor: EditorInput): void {\n\t\treturn this.editorTabsControl.updateEditorLabel(editor);\n\t}\n\n\tupdateEditorDirty(editor: EditorInput): void {\n\t\treturn this.editorTabsControl.updateEditorDirty(editor);\n\t}\n\n\tupdateOptions(\n\t\toldOptions: IEditorPartOptions,\n\t\tnewOptions: IEditorPartOptions,\n\t): void {\n\t\t// Update editor tabs control if options changed\n\t\tif (\n\t\t\toldOptions.showTabs !== newOptions.showTabs ||\n\t\t\t(newOptions.showTabs !== \"single\" &&\n\t\t\t\toldOptions.pinnedTabsOnSeparateRow !==\n\t\t\t\t\tnewOptions.pinnedTabsOnSeparateRow)\n\t\t) {\n\t\t\t// Clear old\n\t\t\tthis.editorTabsControlDisposable.clear();\n\t\t\tthis.breadcrumbsControlDisposables.clear();\n\t\t\tclearNode(this.parent);\n\n\t\t\t// Create new\n\t\t\tthis.editorTabsControl = this.createEditorTabsControl();\n\t\t\tthis.breadcrumbsControlFactory = this.createBreadcrumbsControl();\n\t\t}\n\n\t\t// Forward into editor tabs control\n\t\telse {\n\t\t\tthis.editorTabsControl.updateOptions(oldOptions, newOptions);\n\t\t}\n\t}\n\n\tlayout(dimensions: IEditorTitleControlDimensions): Dimension {\n\t\t// Layout tabs control\n\t\tconst tabsControlDimension = this.editorTabsControl.layout(dimensions);\n\n\t\t// Layout breadcrumbs if visible\n\t\tlet breadcrumbsControlDimension: Dimension | undefined;\n\t\tif (this.breadcrumbsControl?.isHidden() === false) {\n\t\t\tbreadcrumbsControlDimension = new Dimension(\n\t\t\t\tdimensions.container.width,\n\t\t\t\tBreadcrumbsControl.HEIGHT,\n\t\t\t);\n\t\t\tthis.breadcrumbsControl.layout(breadcrumbsControlDimension);\n\t\t}\n\n\t\treturn new Dimension(\n\t\t\tdimensions.container.width,\n\t\t\ttabsControlDimension.height +\n\t\t\t\t(breadcrumbsControlDimension\n\t\t\t\t\t? breadcrumbsControlDimension.height\n\t\t\t\t\t: 0),\n\t\t);\n\t}\n\n\tgetHeight(): IEditorGroupTitleHeight {\n\t\tconst tabsControlHeight = this.editorTabsControl.getHeight();\n\t\tconst breadcrumbsControlHeight =\n\t\t\tthis.breadcrumbsControl?.isHidden() === false\n\t\t\t\t? BreadcrumbsControl.HEIGHT\n\t\t\t\t: 0;\n\n\t\treturn {\n\t\t\ttotal: tabsControlHeight + breadcrumbsControlHeight,\n\t\t\toffset: tabsControlHeight,\n\t\t};\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
