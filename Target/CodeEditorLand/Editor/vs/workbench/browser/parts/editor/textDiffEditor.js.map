{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/editor/textDiffEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\ttype Dimension,\n\tmultibyteAwareBtoa,\n} from \"../../../../base/browser/dom.js\";\nimport type { IBoundarySashes } from \"../../../../base/browser/ui/sash/sash.js\";\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { deepClone } from \"../../../../base/common/objects.js\";\nimport { isEqual } from \"../../../../base/common/resources.js\";\nimport { StopWatch } from \"../../../../base/common/stopwatch.js\";\nimport { assertIsDefined, isObject } from \"../../../../base/common/types.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport type {\n\tICodeEditor,\n\tIDiffEditor,\n} from \"../../../../editor/browser/editorBrowser.js\";\nimport { DiffEditorWidget } from \"../../../../editor/browser/widget/diffEditor/diffEditorWidget.js\";\nimport type {\n\tIEditorOptions as ICodeEditorOptions,\n\tIDiffEditorOptions,\n} from \"../../../../editor/common/config/editorOptions.js\";\nimport {\n\ttype IDiffEditorModel,\n\ttype IDiffEditorViewModel,\n\ttype IDiffEditorViewState,\n\tScrollType,\n} from \"../../../../editor/common/editorCommon.js\";\nimport {\n\ttype ITextResourceConfigurationChangeEvent,\n\tITextResourceConfigurationService,\n} from \"../../../../editor/common/services/textResourceConfiguration.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tEditorActivation,\n\ttype ITextEditorOptions,\n} from \"../../../../platform/editor/common/editor.js\";\nimport {\n\tByteSize,\n\ttype FileOperationError,\n\tFileOperationResult,\n\tIFileService,\n\tTooLargeFileOperationError,\n} from \"../../../../platform/files/common/files.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { IStorageService } from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport {\n\tEditorExtensions,\n\ttype IEditorFactoryRegistry,\n\ttype IEditorOpenContext,\n\ttype ITextDiffEditorPane,\n\tTEXT_DIFF_EDITOR_ID,\n\tcreateTooLargeFileError,\n\tisEditorInput,\n\tisTextEditorViewState,\n} from \"../../../common/editor.js\";\nimport { DiffEditorInput } from \"../../../common/editor/diffEditorInput.js\";\nimport type { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport { applyTextEditorOptions } from \"../../../common/editor/editorOptions.js\";\nimport { TextDiffEditorModel } from \"../../../common/editor/textDiffEditorModel.js\";\nimport {\n\ttype IEditorGroup,\n\tIEditorGroupsService,\n} from \"../../../services/editor/common/editorGroupsService.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { IPreferencesService } from \"../../../services/preferences/common/preferences.js\";\nimport {\n\ttype TextFileOperationError,\n\tTextFileOperationResult,\n} from \"../../../services/textfile/common/textfiles.js\";\nimport { AbstractTextEditor, type IEditorConfiguration } from \"./textEditor.js\";\n\n/**\n * The text editor that leverages the diff text editor for the editing experience.\n */\nexport class TextDiffEditor\n\textends AbstractTextEditor<IDiffEditorViewState>\n\timplements ITextDiffEditorPane\n{\n\tstatic readonly ID = TEXT_DIFF_EDITOR_ID;\n\n\tprivate diffEditorControl: IDiffEditor | undefined = undefined;\n\n\tprivate inputLifecycleStopWatch: StopWatch | undefined = undefined;\n\n\toverride get scopedContextKeyService(): IContextKeyService | undefined {\n\t\tif (!this.diffEditorControl) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst originalEditor = this.diffEditorControl.getOriginalEditor();\n\t\tconst modifiedEditor = this.diffEditorControl.getModifiedEditor();\n\n\t\treturn (\n\t\t\toriginalEditor.hasTextFocus() ? originalEditor : modifiedEditor\n\t\t).invokeWithinContext((accessor) => accessor.get(IContextKeyService));\n\t}\n\n\tconstructor(\n\t\tgroup: IEditorGroup,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@ITextResourceConfigurationService configurationService: ITextResourceConfigurationService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IPreferencesService private readonly preferencesService: IPreferencesService\n\t) {\n\t\tsuper(TextDiffEditor.ID, group, telemetryService, instantiationService, storageService, configurationService, themeService, editorService, editorGroupService, fileService);\n\t}\n\n\toverride getTitle(): string {\n\t\tif (this.input) {\n\t\t\treturn this.input.getName();\n\t\t}\n\n\t\treturn localize(\"textDiffEditor\", \"Text Diff Editor\");\n\t}\n\n\tprotected override createEditorControl(\n\t\tparent: HTMLElement,\n\t\tconfiguration: ICodeEditorOptions,\n\t): void {\n\t\tthis.diffEditorControl = this._register(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tDiffEditorWidget,\n\t\t\t\tparent,\n\t\t\t\tconfiguration,\n\t\t\t\t{},\n\t\t\t),\n\t\t);\n\t}\n\n\tprotected updateEditorControlOptions(options: ICodeEditorOptions): void {\n\t\tthis.diffEditorControl?.updateOptions(options);\n\t}\n\n\tprotected getMainControl(): ICodeEditor | undefined {\n\t\treturn this.diffEditorControl?.getModifiedEditor();\n\t}\n\n\tprivate _previousViewModel: IDiffEditorViewModel | null = null;\n\n\toverride async setInput(\n\t\tinput: DiffEditorInput,\n\t\toptions: ITextEditorOptions | undefined,\n\t\tcontext: IEditorOpenContext,\n\t\ttoken: CancellationToken,\n\t): Promise<void> {\n\t\tif (this._previousViewModel) {\n\t\t\tthis._previousViewModel.dispose();\n\t\t\tthis._previousViewModel = null;\n\t\t}\n\n\t\t// Cleanup previous things associated with the input\n\t\tthis.inputLifecycleStopWatch = undefined;\n\n\t\t// Set input and resolve\n\t\tawait super.setInput(input, options, context, token);\n\n\t\ttry {\n\t\t\tconst resolvedModel = await input.resolve();\n\n\t\t\t// Check for cancellation\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\t// Fallback to open as binary if not text\n\t\t\tif (!(resolvedModel instanceof TextDiffEditorModel)) {\n\t\t\t\tthis.openAsBinary(input, options);\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\t// Set Editor Model\n\t\t\tconst control = assertIsDefined(this.diffEditorControl);\n\t\t\tconst resolvedDiffEditorModel =\n\t\t\t\tresolvedModel as TextDiffEditorModel;\n\n\t\t\tconst vm = resolvedDiffEditorModel.textDiffEditorModel\n\t\t\t\t? control.createViewModel(\n\t\t\t\t\t\tresolvedDiffEditorModel.textDiffEditorModel,\n\t\t\t\t\t)\n\t\t\t\t: null;\n\t\t\tthis._previousViewModel = vm;\n\t\t\tawait vm?.waitForDiff();\n\t\t\tcontrol.setModel(vm);\n\n\t\t\t// Restore view state (unless provided by options)\n\t\t\tlet hasPreviousViewState = false;\n\t\t\tif (!isTextEditorViewState(options?.viewState)) {\n\t\t\t\thasPreviousViewState = this.restoreTextDiffEditorViewState(\n\t\t\t\t\tinput,\n\t\t\t\t\toptions,\n\t\t\t\t\tcontext,\n\t\t\t\t\tcontrol,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Apply options to editor if any\n\t\t\tlet optionsGotApplied = false;\n\t\t\tif (options) {\n\t\t\t\toptionsGotApplied = applyTextEditorOptions(\n\t\t\t\t\toptions,\n\t\t\t\t\tcontrol,\n\t\t\t\t\tScrollType.Immediate,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (!optionsGotApplied && !hasPreviousViewState) {\n\t\t\t\tcontrol.revealFirstDiff();\n\t\t\t}\n\n\t\t\t// Since the resolved model provides information about being readonly\n\t\t\t// or not, we apply it here to the editor even though the editor input\n\t\t\t// was already asked for being readonly or not. The rationale is that\n\t\t\t// a resolved model might have more specific information about being\n\t\t\t// readonly or not that the input did not have.\n\t\t\tcontrol.updateOptions({\n\t\t\t\t...this.getReadonlyConfiguration(\n\t\t\t\t\tresolvedDiffEditorModel.modifiedModel?.isReadonly(),\n\t\t\t\t),\n\t\t\t\toriginalEditable:\n\t\t\t\t\t!resolvedDiffEditorModel.originalModel?.isReadonly(),\n\t\t\t});\n\n\t\t\tcontrol.handleInitialized();\n\n\t\t\t// Start to measure input lifecycle\n\t\t\tthis.inputLifecycleStopWatch = new StopWatch(false);\n\t\t} catch (error) {\n\t\t\tawait this.handleSetInputError(error, input, options);\n\t\t}\n\t}\n\n\tprivate async handleSetInputError(\n\t\terror: Error,\n\t\tinput: DiffEditorInput,\n\t\toptions: ITextEditorOptions | undefined,\n\t): Promise<void> {\n\t\t// Handle case where content appears to be binary\n\t\tif (this.isFileBinaryError(error)) {\n\t\t\treturn this.openAsBinary(input, options);\n\t\t}\n\n\t\t// Handle case where a file is too large to open without confirmation\n\t\tif (\n\t\t\t(<FileOperationError>error).fileOperationResult ===\n\t\t\tFileOperationResult.FILE_TOO_LARGE\n\t\t) {\n\t\t\tlet message: string;\n\t\t\tif (error instanceof TooLargeFileOperationError) {\n\t\t\t\tmessage = localize(\n\t\t\t\t\t\"fileTooLargeForHeapErrorWithSize\",\n\t\t\t\t\t\"At least one file is not displayed in the text compare editor because it is very large ({0}).\",\n\t\t\t\t\tByteSize.formatSize(error.size),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tmessage = localize(\n\t\t\t\t\t\"fileTooLargeForHeapErrorWithoutSize\",\n\t\t\t\t\t\"At least one file is not displayed in the text compare editor because it is very large.\",\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthrow createTooLargeFileError(\n\t\t\t\tthis.group,\n\t\t\t\tinput,\n\t\t\t\toptions,\n\t\t\t\tmessage,\n\t\t\t\tthis.preferencesService,\n\t\t\t);\n\t\t}\n\n\t\t// Otherwise make sure the error bubbles up\n\t\tthrow error;\n\t}\n\n\tprivate restoreTextDiffEditorViewState(\n\t\teditor: DiffEditorInput,\n\t\toptions: ITextEditorOptions | undefined,\n\t\tcontext: IEditorOpenContext,\n\t\tcontrol: IDiffEditor,\n\t): boolean {\n\t\tconst editorViewState = this.loadEditorViewState(editor, context);\n\t\tif (editorViewState) {\n\t\t\tif (options?.selection && editorViewState.modified) {\n\t\t\t\teditorViewState.modified.cursorState = []; // prevent duplicate selections via options\n\t\t\t}\n\n\t\t\tcontrol.restoreViewState(editorViewState);\n\n\t\t\tif (options?.revealIfVisible) {\n\t\t\t\tcontrol.revealFirstDiff();\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate openAsBinary(\n\t\tinput: DiffEditorInput,\n\t\toptions: ITextEditorOptions | undefined,\n\t): void {\n\t\tconst original = input.original;\n\t\tconst modified = input.modified;\n\n\t\tconst binaryDiffInput = this.instantiationService.createInstance(\n\t\t\tDiffEditorInput,\n\t\t\tinput.getName(),\n\t\t\tinput.getDescription(),\n\t\t\toriginal,\n\t\t\tmodified,\n\t\t\ttrue,\n\t\t);\n\n\t\t// Forward binary flag to input if supported\n\t\tconst fileEditorFactory = Registry.as<IEditorFactoryRegistry>(\n\t\t\tEditorExtensions.EditorFactory,\n\t\t).getFileEditorFactory();\n\t\tif (fileEditorFactory.isFileEditor(original)) {\n\t\t\toriginal.setForceOpenAsBinary();\n\t\t}\n\n\t\tif (fileEditorFactory.isFileEditor(modified)) {\n\t\t\tmodified.setForceOpenAsBinary();\n\t\t}\n\n\t\t// Replace this editor with the binary one\n\t\tthis.group.replaceEditors([\n\t\t\t{\n\t\t\t\teditor: input,\n\t\t\t\treplacement: binaryDiffInput,\n\t\t\t\toptions: {\n\t\t\t\t\t...options,\n\t\t\t\t\t// Make sure to not steal away the currently active group\n\t\t\t\t\t// because we are triggering another openEditor() call\n\t\t\t\t\t// and do not control the initial intent that resulted\n\t\t\t\t\t// in us now opening as binary.\n\t\t\t\t\tactivation: EditorActivation.PRESERVE,\n\t\t\t\t\tpinned: this.group.isPinned(input),\n\t\t\t\t\tsticky: this.group.isSticky(input),\n\t\t\t\t},\n\t\t\t},\n\t\t]);\n\t}\n\n\toverride setOptions(options: ITextEditorOptions | undefined): void {\n\t\tsuper.setOptions(options);\n\n\t\tif (options) {\n\t\t\tapplyTextEditorOptions(\n\t\t\t\toptions,\n\t\t\t\tassertIsDefined(this.diffEditorControl),\n\t\t\t\tScrollType.Smooth,\n\t\t\t);\n\t\t}\n\t}\n\n\tprotected override shouldHandleConfigurationChangeEvent(\n\t\te: ITextResourceConfigurationChangeEvent,\n\t\tresource: URI,\n\t): boolean {\n\t\tif (super.shouldHandleConfigurationChangeEvent(e, resource)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn (\n\t\t\te.affectsConfiguration(resource, \"diffEditor\") ||\n\t\t\te.affectsConfiguration(\n\t\t\t\tresource,\n\t\t\t\t\"accessibility.verbosity.diffEditor\",\n\t\t\t)\n\t\t);\n\t}\n\n\tprotected override computeConfiguration(\n\t\tconfiguration: IEditorConfiguration,\n\t): ICodeEditorOptions {\n\t\tconst editorConfiguration = super.computeConfiguration(configuration);\n\n\t\t// Handle diff editor specially by merging in diffEditor configuration\n\t\tif (isObject(configuration.diffEditor)) {\n\t\t\tconst diffEditorConfiguration: IDiffEditorOptions = deepClone(\n\t\t\t\tconfiguration.diffEditor,\n\t\t\t);\n\n\t\t\t// User settings defines `diffEditor.codeLens`, but here we rename that to `diffEditor.diffCodeLens` to avoid collisions with `editor.codeLens`.\n\t\t\tdiffEditorConfiguration.diffCodeLens =\n\t\t\t\tdiffEditorConfiguration.codeLens;\n\t\t\tdelete diffEditorConfiguration.codeLens;\n\n\t\t\t// User settings defines `diffEditor.wordWrap`, but here we rename that to `diffEditor.diffWordWrap` to avoid collisions with `editor.wordWrap`.\n\t\t\tdiffEditorConfiguration.diffWordWrap = <\n\t\t\t\t\"off\" | \"on\" | \"inherit\" | undefined\n\t\t\t>diffEditorConfiguration.wordWrap;\n\t\t\tdelete diffEditorConfiguration.wordWrap;\n\n\t\t\tObject.assign(editorConfiguration, diffEditorConfiguration);\n\t\t}\n\n\t\tconst verbose =\n\t\t\tconfiguration.accessibility?.verbosity?.diffEditor ?? false;\n\t\t(editorConfiguration as IDiffEditorOptions).accessibilityVerbose =\n\t\t\tverbose;\n\n\t\treturn editorConfiguration;\n\t}\n\n\tprotected override getConfigurationOverrides(\n\t\tconfiguration: IEditorConfiguration,\n\t): IDiffEditorOptions {\n\t\treturn {\n\t\t\t...super.getConfigurationOverrides(configuration),\n\t\t\t...this.getReadonlyConfiguration(this.input?.isReadonly()),\n\t\t\toriginalEditable:\n\t\t\t\tthis.input instanceof DiffEditorInput &&\n\t\t\t\t!this.input.original.isReadonly(),\n\t\t\tlineDecorationsWidth: \"2ch\",\n\t\t};\n\t}\n\n\tprotected override updateReadonly(input: EditorInput): void {\n\t\tif (input instanceof DiffEditorInput) {\n\t\t\tthis.diffEditorControl?.updateOptions({\n\t\t\t\t...this.getReadonlyConfiguration(input.isReadonly()),\n\t\t\t\toriginalEditable: !input.original.isReadonly(),\n\t\t\t});\n\t\t} else {\n\t\t\tsuper.updateReadonly(input);\n\t\t}\n\t}\n\n\tprivate isFileBinaryError(error: Error[]): boolean;\n\tprivate isFileBinaryError(error: Error): boolean;\n\tprivate isFileBinaryError(error: Error | Error[]): boolean {\n\t\tif (Array.isArray(error)) {\n\t\t\tconst errors = <Error[]>error;\n\n\t\t\treturn errors.some((error) => this.isFileBinaryError(error));\n\t\t}\n\n\t\treturn (\n\t\t\t(<TextFileOperationError>error).textFileOperationResult ===\n\t\t\tTextFileOperationResult.FILE_IS_BINARY\n\t\t);\n\t}\n\n\toverride clearInput(): void {\n\t\tif (this._previousViewModel) {\n\t\t\tthis._previousViewModel.dispose();\n\t\t\tthis._previousViewModel = null;\n\t\t}\n\n\t\tsuper.clearInput();\n\n\t\t// Log input lifecycle telemetry\n\t\tconst inputLifecycleElapsed = this.inputLifecycleStopWatch?.elapsed();\n\t\tthis.inputLifecycleStopWatch = undefined;\n\t\tif (typeof inputLifecycleElapsed === \"number\") {\n\t\t\tthis.logInputLifecycleTelemetry(\n\t\t\t\tinputLifecycleElapsed,\n\t\t\t\tthis.getControl()?.getModel()?.modified?.getLanguageId(),\n\t\t\t);\n\t\t}\n\n\t\t// Clear Model\n\t\tthis.diffEditorControl?.setModel(null);\n\t}\n\n\tprivate logInputLifecycleTelemetry(\n\t\tduration: number,\n\t\tlanguageId: string | undefined,\n\t): void {\n\t\tlet collapseUnchangedRegions = false;\n\t\tif (this.diffEditorControl instanceof DiffEditorWidget) {\n\t\t\tcollapseUnchangedRegions =\n\t\t\t\tthis.diffEditorControl.collapseUnchangedRegions;\n\t\t}\n\t\tthis.telemetryService.publicLog2<\n\t\t\t{\n\t\t\t\teditorVisibleTimeMs: number;\n\t\t\t\tlanguageId: string;\n\t\t\t\tcollapseUnchangedRegions: boolean;\n\t\t\t},\n\t\t\t{\n\t\t\t\towner: \"hediet\";\n\t\t\t\teditorVisibleTimeMs: {\n\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\tcomment: \"Indicates the time the diff editor was visible to the user\";\n\t\t\t\t};\n\t\t\t\tlanguageId: {\n\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\tcomment: \"Indicates for which language the diff editor was shown\";\n\t\t\t\t};\n\t\t\t\tcollapseUnchangedRegions: {\n\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\tcomment: \"Indicates whether unchanged regions were collapsed\";\n\t\t\t\t};\n\t\t\t\tcomment: \"This event gives insight about how long the diff editor was visible to the user.\";\n\t\t\t}\n\t\t>(\"diffEditor.editorVisibleTime\", {\n\t\t\teditorVisibleTimeMs: duration,\n\t\t\tlanguageId: languageId ?? \"\",\n\t\t\tcollapseUnchangedRegions,\n\t\t});\n\t}\n\n\toverride getControl(): IDiffEditor | undefined {\n\t\treturn this.diffEditorControl;\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\n\t\tthis.diffEditorControl?.focus();\n\t}\n\n\toverride hasFocus(): boolean {\n\t\treturn this.diffEditorControl?.hasTextFocus() || super.hasFocus();\n\t}\n\n\tprotected override setEditorVisible(visible: boolean): void {\n\t\tsuper.setEditorVisible(visible);\n\n\t\tif (visible) {\n\t\t\tthis.diffEditorControl?.onVisible();\n\t\t} else {\n\t\t\tthis.diffEditorControl?.onHide();\n\t\t}\n\t}\n\n\toverride layout(dimension: Dimension): void {\n\t\tthis.diffEditorControl?.layout(dimension);\n\t}\n\n\toverride setBoundarySashes(sashes: IBoundarySashes) {\n\t\tthis.diffEditorControl?.setBoundarySashes(sashes);\n\t}\n\n\tprotected override tracksEditorViewState(input: EditorInput): boolean {\n\t\treturn input instanceof DiffEditorInput;\n\t}\n\n\tprotected override computeEditorViewState(\n\t\tresource: URI,\n\t): IDiffEditorViewState | undefined {\n\t\tif (!this.diffEditorControl) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst model = this.diffEditorControl.getModel();\n\t\tif (!model || !model.modified || !model.original) {\n\t\t\treturn undefined; // view state always needs a model\n\t\t}\n\n\t\tconst modelUri = this.toEditorViewStateResource(model);\n\t\tif (!modelUri) {\n\t\t\treturn undefined; // model URI is needed to make sure we save the view state correctly\n\t\t}\n\n\t\tif (!isEqual(modelUri, resource)) {\n\t\t\treturn undefined; // prevent saving view state for a model that is not the expected one\n\t\t}\n\n\t\treturn this.diffEditorControl.saveViewState() ?? undefined;\n\t}\n\n\tprotected override toEditorViewStateResource(\n\t\tmodelOrInput: IDiffEditorModel | EditorInput,\n\t): URI | undefined {\n\t\tlet original: URI | undefined;\n\t\tlet modified: URI | undefined;\n\n\t\tif (modelOrInput instanceof DiffEditorInput) {\n\t\t\toriginal = modelOrInput.original.resource;\n\t\t\tmodified = modelOrInput.modified.resource;\n\t\t} else if (!isEditorInput(modelOrInput)) {\n\t\t\toriginal = modelOrInput.original.uri;\n\t\t\tmodified = modelOrInput.modified.uri;\n\t\t}\n\n\t\tif (!original || !modified) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// create a URI that is the Base64 concatenation of original + modified resource\n\t\treturn URI.from({\n\t\t\tscheme: \"diff\",\n\t\t\tpath: `${multibyteAwareBtoa(original.toString())}${multibyteAwareBtoa(modified.toString())}`,\n\t\t});\n\t}\n}\n"],
  "mappings": "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",
  "names": ["error"]
}
