import { Disposable } from "vs/base/common/lifecycle";
import { ILogService } from "vs/platform/log/common/log";
import { IMarkerService } from "vs/platform/markers/common/markers";
import { IUriIdentityService } from "vs/platform/uriIdentity/common/uriIdentity";
import { IWorkbenchContribution } from "vs/workbench/common/contributions";
import { IEditorGroupsService } from "vs/workbench/services/editor/common/editorGroupsService";
import { IEditorService } from "vs/workbench/services/editor/common/editorService";
import { IFilesConfigurationService } from "vs/workbench/services/filesConfiguration/common/filesConfigurationService";
import { IHostService } from "vs/workbench/services/host/browser/host";
import { IWorkingCopyService } from "vs/workbench/services/workingCopy/common/workingCopyService";
export declare class EditorAutoSave extends Disposable implements IWorkbenchContribution {
    private readonly filesConfigurationService;
    private readonly hostService;
    private readonly editorService;
    private readonly editorGroupService;
    private readonly workingCopyService;
    private readonly logService;
    private readonly markerService;
    private readonly uriIdentityService;
    static readonly ID = "workbench.contrib.editorAutoSave";
    private readonly scheduledAutoSavesAfterDelay;
    private lastActiveEditor;
    private lastActiveGroupId;
    private readonly lastActiveEditorControlDisposable;
    private readonly waitingOnConditionAutoSaveWorkingCopies;
    private readonly waitingOnConditionAutoSaveEditors;
    constructor(filesConfigurationService: IFilesConfigurationService, hostService: IHostService, editorService: IEditorService, editorGroupService: IEditorGroupsService, workingCopyService: IWorkingCopyService, logService: ILogService, markerService: IMarkerService, uriIdentityService: IUriIdentityService);
    private registerListeners;
    private onConditionChanged;
    private onWindowFocusChange;
    private onActiveWindowChange;
    private onDidActiveEditorChange;
    private maybeTriggerAutoSave;
    private onDidChangeAutoSaveConfiguration;
    private saveAllDirtyAutoSaveables;
    private onDidRegister;
    private onDidUnregister;
    private onDidChangeDirty;
    private onDidChangeContent;
    private scheduleAutoSave;
    private discardAutoSave;
}
