{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/editor/editorActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getActiveDocument } from \"../../../../base/browser/dom.js\";\nimport { Action } from \"../../../../base/common/actions.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { KeyChord, KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport {\n\tisLinux,\n\tisNative,\n\tisWindows,\n} from \"../../../../base/common/platform.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport type { ICommandActionTitle } from \"../../../../platform/action/common/action.js\";\nimport { Categories } from \"../../../../platform/action/common/actionCommonCategories.js\";\nimport {\n\tAction2,\n\ttype IAction2Options,\n\tMenuId,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tConfirmResult,\n\tIDialogService,\n\tIFileDialogService,\n} from \"../../../../platform/dialogs/common/dialogs.js\";\nimport type { ServicesAccessor } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport {\n\ttype IKeybindingRule,\n\tKeybindingWeight,\n} from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { IListService } from \"../../../../platform/list/browser/listService.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport {\n\tIProgressService,\n\tProgressLocation,\n} from \"../../../../platform/progress/common/progress.js\";\nimport {\n\tIQuickInputService,\n\tItemActivation,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { IWorkspacesService } from \"../../../../platform/workspaces/common/workspaces.js\";\nimport {\n\tActiveEditorAvailableEditorIdsContext,\n\tActiveEditorContext,\n\tActiveEditorGroupEmptyContext,\n\tAuxiliaryBarVisibleContext,\n\tEditorPartMaximizedEditorGroupContext,\n\tEditorPartMultipleEditorGroupsContext,\n\tIsAuxiliaryWindowFocusedContext,\n\tMultipleEditorGroupsContext,\n\tSideBarVisibleContext,\n} from \"../../../common/contextkeys.js\";\nimport {\n\tCloseDirection,\n\tDEFAULT_EDITOR_ASSOCIATION,\n\tEditorInputCapabilities,\n\tEditorResourceAccessor,\n\tEditorsOrder,\n\ttype GroupIdentifier,\n\ttype IEditorCommandsContext,\n\ttype IEditorIdentifier,\n\tSaveReason,\n} from \"../../../common/editor.js\";\nimport type { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport { SideBySideEditorInput } from \"../../../common/editor/sideBySideEditorInput.js\";\nimport {\n\ttype EditorGroupLayout,\n\tGroupDirection,\n\tGroupLocation,\n\tGroupOrientation,\n\tGroupsArrangement,\n\tGroupsOrder,\n\ttype IEditorGroup,\n\tIEditorGroupsService,\n\ttype IFindGroupScope,\n\tMergeGroupMode,\n\tpreferredSideBySideGroupDirection,\n} from \"../../../services/editor/common/editorGroupsService.js\";\nimport { IEditorResolverService } from \"../../../services/editor/common/editorResolverService.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport {\n\tAutoSaveMode,\n\tIFilesConfigurationService,\n} from \"../../../services/filesConfiguration/common/filesConfigurationService.js\";\nimport {\n\tGoFilter,\n\tIHistoryService,\n} from \"../../../services/history/common/history.js\";\nimport {\n\tIWorkbenchLayoutService,\n\tParts,\n} from \"../../../services/layout/browser/layoutService.js\";\nimport {\n\ttype ActiveEditorMoveCopyArguments,\n\tCLOSE_EDITOR_COMMAND_ID,\n\tCOPY_ACTIVE_EDITOR_COMMAND_ID,\n\tCOPY_EDITOR_GROUP_INTO_NEW_WINDOW_COMMAND_ID,\n\tCOPY_EDITOR_INTO_NEW_WINDOW_COMMAND_ID,\n\tLAYOUT_EDITOR_GROUPS_COMMAND_ID,\n\tMOVE_ACTIVE_EDITOR_COMMAND_ID,\n\tMOVE_EDITOR_GROUP_INTO_NEW_WINDOW_COMMAND_ID,\n\tMOVE_EDITOR_INTO_NEW_WINDOW_COMMAND_ID,\n\tNEW_EMPTY_EDITOR_WINDOW_COMMAND_ID,\n\tSPLIT_EDITOR,\n\tSPLIT_EDITOR_DOWN,\n\tSPLIT_EDITOR_LEFT,\n\tSPLIT_EDITOR_RIGHT,\n\tSPLIT_EDITOR_UP,\n\tTOGGLE_MAXIMIZE_EDITOR_GROUP,\n\tUNPIN_EDITOR_COMMAND_ID,\n\tsplitEditor,\n} from \"./editorCommands.js\";\nimport { resolveCommandsContext } from \"./editorCommandsContext.js\";\nimport {\n\tActiveGroupEditorsByMostRecentlyUsedQuickAccess,\n\tAllEditorsByAppearanceQuickAccess,\n\tAllEditorsByMostRecentlyUsedQuickAccess,\n} from \"./editorQuickAccess.js\";\n\nclass ExecuteCommandAction extends Action2 {\n\tconstructor(\n\t\tdesc: Readonly<IAction2Options>,\n\t\tprivate readonly commandId: string,\n\t\tprivate readonly commandArgs?: unknown,\n\t) {\n\t\tsuper(desc);\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst commandService = accessor.get(ICommandService);\n\n\t\treturn commandService.executeCommand(this.commandId, this.commandArgs);\n\t}\n}\n\nabstract class AbstractSplitEditorAction extends Action2 {\n\tprotected getDirection(\n\t\tconfigurationService: IConfigurationService,\n\t): GroupDirection {\n\t\treturn preferredSideBySideGroupDirection(configurationService);\n\t}\n\n\toverride async run(\n\t\taccessor: ServicesAccessor,\n\t\t...args: unknown[]\n\t): Promise<void> {\n\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst direction = this.getDirection(configurationService);\n\t\tconst commandContext = resolveCommandsContext(\n\t\t\targs,\n\t\t\taccessor.get(IEditorService),\n\t\t\teditorGroupsService,\n\t\t\taccessor.get(IListService),\n\t\t);\n\n\t\tsplitEditor(editorGroupsService, direction, commandContext);\n\t}\n}\n\nexport class SplitEditorAction extends AbstractSplitEditorAction {\n\tstatic readonly ID = SPLIT_EDITOR;\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: SplitEditorAction.ID,\n\t\t\ttitle: localize2(\"splitEditor\", \"Split Editor\"),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Backslash,\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n}\n\nexport class SplitEditorOrthogonalAction extends AbstractSplitEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.splitEditorOrthogonal\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"splitEditorOrthogonal\",\n\t\t\t\t\"Split Editor Orthogonal\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(\n\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.Backslash,\n\t\t\t\t),\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\tprotected override getDirection(\n\t\tconfigurationService: IConfigurationService,\n\t): GroupDirection {\n\t\tconst direction =\n\t\t\tpreferredSideBySideGroupDirection(configurationService);\n\n\t\treturn direction === GroupDirection.RIGHT\n\t\t\t? GroupDirection.DOWN\n\t\t\t: GroupDirection.RIGHT;\n\t}\n}\n\nexport class SplitEditorLeftAction extends ExecuteCommandAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: SPLIT_EDITOR_LEFT,\n\t\t\t\ttitle: localize2(\"splitEditorGroupLeft\", \"Split Editor Left\"),\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.Backslash,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tSPLIT_EDITOR_LEFT,\n\t\t);\n\t}\n}\n\nexport class SplitEditorRightAction extends ExecuteCommandAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: SPLIT_EDITOR_RIGHT,\n\t\t\t\ttitle: localize2(\"splitEditorGroupRight\", \"Split Editor Right\"),\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.Backslash,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tSPLIT_EDITOR_RIGHT,\n\t\t);\n\t}\n}\n\nexport class SplitEditorUpAction extends ExecuteCommandAction {\n\tstatic readonly LABEL = localize(\"splitEditorGroupUp\", \"Split Editor Up\");\n\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: SPLIT_EDITOR_UP,\n\t\t\t\ttitle: localize2(\"splitEditorGroupUp\", \"Split Editor Up\"),\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.Backslash,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tSPLIT_EDITOR_UP,\n\t\t);\n\t}\n}\n\nexport class SplitEditorDownAction extends ExecuteCommandAction {\n\tstatic readonly LABEL = localize(\n\t\t\"splitEditorGroupDown\",\n\t\t\"Split Editor Down\",\n\t);\n\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: SPLIT_EDITOR_DOWN,\n\t\t\t\ttitle: localize2(\"splitEditorGroupDown\", \"Split Editor Down\"),\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.Backslash,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tSPLIT_EDITOR_DOWN,\n\t\t);\n\t}\n}\n\nexport class JoinTwoGroupsAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.joinTwoGroups\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"joinTwoGroups\",\n\t\t\t\t\"Join Editor Group with Next Group\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\toverride async run(\n\t\taccessor: ServicesAccessor,\n\t\tcontext?: IEditorIdentifier,\n\t): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tlet sourceGroup: IEditorGroup | undefined;\n\t\tif (context && typeof context.groupId === \"number\") {\n\t\t\tsourceGroup = editorGroupService.getGroup(context.groupId);\n\t\t} else {\n\t\t\tsourceGroup = editorGroupService.activeGroup;\n\t\t}\n\n\t\tif (sourceGroup) {\n\t\t\tconst targetGroupDirections = [\n\t\t\t\tGroupDirection.RIGHT,\n\t\t\t\tGroupDirection.DOWN,\n\t\t\t\tGroupDirection.LEFT,\n\t\t\t\tGroupDirection.UP,\n\t\t\t];\n\t\t\tfor (const targetGroupDirection of targetGroupDirections) {\n\t\t\t\tconst targetGroup = editorGroupService.findGroup(\n\t\t\t\t\t{ direction: targetGroupDirection },\n\t\t\t\t\tsourceGroup,\n\t\t\t\t);\n\t\t\t\tif (targetGroup && sourceGroup !== targetGroup) {\n\t\t\t\t\teditorGroupService.mergeGroup(sourceGroup, targetGroup);\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class JoinAllGroupsAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.joinAllGroups\",\n\t\t\ttitle: localize2(\"joinAllGroups\", \"Join All Editor Groups\"),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\teditorGroupService.mergeAllGroups(editorGroupService.activeGroup);\n\t}\n}\n\nexport class NavigateBetweenGroupsAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.navigateEditorGroups\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"navigateEditorGroups\",\n\t\t\t\t\"Navigate Between Editor Groups\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tconst nextGroup = editorGroupService.findGroup(\n\t\t\t{ location: GroupLocation.NEXT },\n\t\t\teditorGroupService.activeGroup,\n\t\t\ttrue,\n\t\t);\n\t\tnextGroup?.focus();\n\t}\n}\n\nexport class FocusActiveGroupAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.focusActiveEditorGroup\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"focusActiveEditorGroup\",\n\t\t\t\t\"Focus Active Editor Group\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\teditorGroupService.activeGroup.focus();\n\t}\n}\n\nabstract class AbstractFocusGroupAction extends Action2 {\n\tconstructor(\n\t\tdesc: Readonly<IAction2Options>,\n\t\tprivate readonly scope: IFindGroupScope,\n\t) {\n\t\tsuper(desc);\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tconst group = editorGroupService.findGroup(\n\t\t\tthis.scope,\n\t\t\teditorGroupService.activeGroup,\n\t\t\ttrue,\n\t\t);\n\t\tgroup?.focus();\n\t}\n}\n\nexport class FocusFirstGroupAction extends AbstractFocusGroupAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.focusFirstEditorGroup\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"focusFirstEditorGroup\",\n\t\t\t\t\t\"Focus First Editor Group\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Digit1,\n\t\t\t\t},\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\t{ location: GroupLocation.FIRST },\n\t\t);\n\t}\n}\n\nexport class FocusLastGroupAction extends AbstractFocusGroupAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.focusLastEditorGroup\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"focusLastEditorGroup\",\n\t\t\t\t\t\"Focus Last Editor Group\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\t{ location: GroupLocation.LAST },\n\t\t);\n\t}\n}\n\nexport class FocusNextGroup extends AbstractFocusGroupAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.focusNextGroup\",\n\t\t\t\ttitle: localize2(\"focusNextGroup\", \"Focus Next Editor Group\"),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\t{ location: GroupLocation.NEXT },\n\t\t);\n\t}\n}\n\nexport class FocusPreviousGroup extends AbstractFocusGroupAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.focusPreviousGroup\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"focusPreviousGroup\",\n\t\t\t\t\t\"Focus Previous Editor Group\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\t{ location: GroupLocation.PREVIOUS },\n\t\t);\n\t}\n}\n\nexport class FocusLeftGroup extends AbstractFocusGroupAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.focusLeftGroup\",\n\t\t\t\ttitle: localize2(\"focusLeftGroup\", \"Focus Left Editor Group\"),\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.LeftArrow,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\t{ direction: GroupDirection.LEFT },\n\t\t);\n\t}\n}\n\nexport class FocusRightGroup extends AbstractFocusGroupAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.focusRightGroup\",\n\t\t\t\ttitle: localize2(\"focusRightGroup\", \"Focus Right Editor Group\"),\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.RightArrow,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\t{ direction: GroupDirection.RIGHT },\n\t\t);\n\t}\n}\n\nexport class FocusAboveGroup extends AbstractFocusGroupAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.focusAboveGroup\",\n\t\t\t\ttitle: localize2(\"focusAboveGroup\", \"Focus Editor Group Above\"),\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.UpArrow,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\t{ direction: GroupDirection.UP },\n\t\t);\n\t}\n}\n\nexport class FocusBelowGroup extends AbstractFocusGroupAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.focusBelowGroup\",\n\t\t\t\ttitle: localize2(\"focusBelowGroup\", \"Focus Editor Group Below\"),\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.DownArrow,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\t{ direction: GroupDirection.DOWN },\n\t\t);\n\t}\n}\n\nexport class CloseEditorAction extends Action {\n\tstatic readonly ID = \"workbench.action.closeActiveEditor\";\n\tstatic readonly LABEL = localize(\"closeEditor\", \"Close Editor\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService private readonly commandService: ICommandService\n\t) {\n\t\tsuper(id, label, ThemeIcon.asClassName(Codicon.close));\n\t}\n\n\toverride run(context?: IEditorCommandsContext): Promise<void> {\n\t\treturn this.commandService.executeCommand(\n\t\t\tCLOSE_EDITOR_COMMAND_ID,\n\t\t\tundefined,\n\t\t\tcontext,\n\t\t);\n\t}\n}\n\nexport class UnpinEditorAction extends Action {\n\tstatic readonly ID = \"workbench.action.unpinActiveEditor\";\n\tstatic readonly LABEL = localize(\"unpinEditor\", \"Unpin Editor\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService private readonly commandService: ICommandService\n\t) {\n\t\tsuper(id, label, ThemeIcon.asClassName(Codicon.pinned));\n\t}\n\n\toverride run(context?: IEditorCommandsContext): Promise<void> {\n\t\treturn this.commandService.executeCommand(\n\t\t\tUNPIN_EDITOR_COMMAND_ID,\n\t\t\tundefined,\n\t\t\tcontext,\n\t\t);\n\t}\n}\n\nexport class CloseEditorTabAction extends Action {\n\tstatic readonly ID = \"workbench.action.closeActiveEditor\";\n\tstatic readonly LABEL = localize(\"closeOneEditor\", \"Close\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label, ThemeIcon.asClassName(Codicon.close));\n\t}\n\n\toverride async run(context?: IEditorCommandsContext): Promise<void> {\n\t\tconst group = context\n\t\t\t? this.editorGroupService.getGroup(context.groupId)\n\t\t\t: this.editorGroupService.activeGroup;\n\t\tif (!group) {\n\t\t\t// group mentioned in context does not exist\n\t\t\treturn;\n\t\t}\n\n\t\tconst targetEditor =\n\t\t\tcontext?.editorIndex !== undefined\n\t\t\t\t? group.getEditorByIndex(context.editorIndex)\n\t\t\t\t: group.activeEditor;\n\t\tif (!targetEditor) {\n\t\t\t// No editor open or editor at index does not exist\n\t\t\treturn;\n\t\t}\n\n\t\tconst editors: EditorInput[] = [];\n\t\tif (group.isSelected(targetEditor)) {\n\t\t\teditors.push(...group.selectedEditors);\n\t\t} else {\n\t\t\teditors.push(targetEditor);\n\t\t}\n\n\t\t// Close specific editors in group\n\t\tfor (const editor of editors) {\n\t\t\tawait group.closeEditor(editor, {\n\t\t\t\tpreserveFocus: context?.preserveFocus,\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport class RevertAndCloseEditorAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.revertAndCloseActiveEditor\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"revertAndCloseActiveEditor\",\n\t\t\t\t\"Revert and Close Editor\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst logService = accessor.get(ILogService);\n\n\t\tconst activeEditorPane = editorService.activeEditorPane;\n\t\tif (activeEditorPane) {\n\t\t\tconst editor = activeEditorPane.input;\n\t\t\tconst group = activeEditorPane.group;\n\n\t\t\t// first try a normal revert where the contents of the editor are restored\n\t\t\ttry {\n\t\t\t\tawait editorService.revert({ editor, groupId: group.id });\n\t\t\t} catch (error) {\n\t\t\t\tlogService.error(error);\n\n\t\t\t\t// if that fails, since we are about to close the editor, we accept that\n\t\t\t\t// the editor cannot be reverted and instead do a soft revert that just\n\t\t\t\t// enables us to close the editor. With this, a user can always close a\n\t\t\t\t// dirty editor even when reverting fails.\n\n\t\t\t\tawait editorService.revert(\n\t\t\t\t\t{ editor, groupId: group.id },\n\t\t\t\t\t{ soft: true },\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tawait group.closeEditor(editor);\n\t\t}\n\t}\n}\n\nexport class CloseLeftEditorsInGroupAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.closeEditorsToTheLeft\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"closeEditorsToTheLeft\",\n\t\t\t\t\"Close Editors to the Left in Group\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\toverride async run(\n\t\taccessor: ServicesAccessor,\n\t\tcontext?: IEditorIdentifier,\n\t): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tconst { group, editor } = this.getTarget(editorGroupService, context);\n\t\tif (group && editor) {\n\t\t\tawait group.closeEditors({\n\t\t\t\tdirection: CloseDirection.LEFT,\n\t\t\t\texcept: editor,\n\t\t\t\texcludeSticky: true,\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate getTarget(\n\t\teditorGroupService: IEditorGroupsService,\n\t\tcontext?: IEditorIdentifier,\n\t): { editor: EditorInput | null; group: IEditorGroup | undefined } {\n\t\tif (context) {\n\t\t\treturn {\n\t\t\t\teditor: context.editor,\n\t\t\t\tgroup: editorGroupService.getGroup(context.groupId),\n\t\t\t};\n\t\t}\n\n\t\t// Fallback to active group\n\t\treturn {\n\t\t\tgroup: editorGroupService.activeGroup,\n\t\t\teditor: editorGroupService.activeGroup.activeEditor,\n\t\t};\n\t}\n}\n\nabstract class AbstractCloseAllAction extends Action2 {\n\tprotected groupsToClose(\n\t\teditorGroupService: IEditorGroupsService,\n\t): IEditorGroup[] {\n\t\tconst groupsToClose: IEditorGroup[] = [];\n\n\t\t// Close editors in reverse order of their grid appearance so that the editor\n\t\t// group that is the first (top-left) remains. This helps to keep view state\n\t\t// for editors around that have been opened in this visually first group.\n\t\tconst groups = editorGroupService.getGroups(\n\t\t\tGroupsOrder.GRID_APPEARANCE,\n\t\t);\n\t\tfor (let i = groups.length - 1; i >= 0; i--) {\n\t\t\tgroupsToClose.push(groups[i]);\n\t\t}\n\n\t\treturn groupsToClose;\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst logService = accessor.get(ILogService);\n\t\tconst progressService = accessor.get(IProgressService);\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\tconst filesConfigurationService = accessor.get(\n\t\t\tIFilesConfigurationService,\n\t\t);\n\t\tconst fileDialogService = accessor.get(IFileDialogService);\n\n\t\t// Depending on the editor and auto save configuration,\n\t\t// split editors into buckets for handling confirmation\n\n\t\tconst dirtyEditorsWithDefaultConfirm = new Set<IEditorIdentifier>();\n\t\tconst dirtyAutoSaveOnFocusChangeEditors = new Set<IEditorIdentifier>();\n\t\tconst dirtyAutoSaveOnWindowChangeEditors = new Set<IEditorIdentifier>();\n\t\tconst editorsWithCustomConfirm = new Map<\n\t\t\tstring /* typeId */,\n\t\t\tSet<IEditorIdentifier>\n\t\t>();\n\n\t\tfor (const { editor, groupId } of editorService.getEditors(\n\t\t\tEditorsOrder.SEQUENTIAL,\n\t\t\t{ excludeSticky: this.excludeSticky },\n\t\t)) {\n\t\t\tlet confirmClose = false;\n\t\t\tif (editor.closeHandler) {\n\t\t\t\tconfirmClose = editor.closeHandler.showConfirm(); // custom handling of confirmation on close\n\t\t\t} else {\n\t\t\t\tconfirmClose = editor.isDirty() && !editor.isSaving(); // default confirm only when dirty and not saving\n\t\t\t}\n\n\t\t\tif (!confirmClose) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Editor has custom confirm implementation\n\t\t\tif (typeof editor.closeHandler?.confirm === \"function\") {\n\t\t\t\tlet customEditorsToConfirm = editorsWithCustomConfirm.get(\n\t\t\t\t\teditor.typeId,\n\t\t\t\t);\n\t\t\t\tif (!customEditorsToConfirm) {\n\t\t\t\t\tcustomEditorsToConfirm = new Set();\n\t\t\t\t\teditorsWithCustomConfirm.set(\n\t\t\t\t\t\teditor.typeId,\n\t\t\t\t\t\tcustomEditorsToConfirm,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tcustomEditorsToConfirm.add({ editor, groupId });\n\t\t\t}\n\n\t\t\t// Editor will be saved on focus change when a\n\t\t\t// dialog appears, so just track that separate\n\t\t\telse if (\n\t\t\t\t!editor.hasCapability(EditorInputCapabilities.Untitled) &&\n\t\t\t\tfilesConfigurationService.getAutoSaveMode(editor).mode ===\n\t\t\t\t\tAutoSaveMode.ON_FOCUS_CHANGE\n\t\t\t) {\n\t\t\t\tdirtyAutoSaveOnFocusChangeEditors.add({ editor, groupId });\n\t\t\t}\n\n\t\t\t// Windows, Linux: editor will be saved on window change\n\t\t\t// when a native dialog appears, so just track that separate\n\t\t\t// (see https://github.com/microsoft/vscode/issues/134250)\n\t\t\telse if (\n\t\t\t\tisNative &&\n\t\t\t\t(isWindows || isLinux) &&\n\t\t\t\t!editor.hasCapability(EditorInputCapabilities.Untitled) &&\n\t\t\t\tfilesConfigurationService.getAutoSaveMode(editor).mode ===\n\t\t\t\t\tAutoSaveMode.ON_WINDOW_CHANGE\n\t\t\t) {\n\t\t\t\tdirtyAutoSaveOnWindowChangeEditors.add({ editor, groupId });\n\t\t\t}\n\n\t\t\t// Editor will show in generic file based dialog\n\t\t\telse {\n\t\t\t\tdirtyEditorsWithDefaultConfirm.add({ editor, groupId });\n\t\t\t}\n\t\t}\n\n\t\t// 1.) Show default file based dialog\n\t\tif (dirtyEditorsWithDefaultConfirm.size > 0) {\n\t\t\tconst editors = Array.from(dirtyEditorsWithDefaultConfirm.values());\n\n\t\t\tawait this.revealEditorsToConfirm(editors, editorGroupService); // help user make a decision by revealing editors\n\n\t\t\tconst confirmation = await fileDialogService.showSaveConfirm(\n\t\t\t\teditors.map(({ editor }) => {\n\t\t\t\t\tif (editor instanceof SideBySideEditorInput) {\n\t\t\t\t\t\treturn editor.primary.getName(); // prefer shorter names by using primary's name in this case\n\t\t\t\t\t}\n\n\t\t\t\t\treturn editor.getName();\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tswitch (confirmation) {\n\t\t\t\tcase ConfirmResult.CANCEL:\n\t\t\t\t\treturn;\n\t\t\t\tcase ConfirmResult.DONT_SAVE:\n\t\t\t\t\tawait this.revertEditors(\n\t\t\t\t\t\teditorService,\n\t\t\t\t\t\tlogService,\n\t\t\t\t\t\tprogressService,\n\t\t\t\t\t\teditors,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ConfirmResult.SAVE:\n\t\t\t\t\tawait editorService.save(editors, {\n\t\t\t\t\t\treason: SaveReason.EXPLICIT,\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// 2.) Show custom confirm based dialog\n\t\tfor (const [, editorIdentifiers] of editorsWithCustomConfirm) {\n\t\t\tconst editors = Array.from(editorIdentifiers.values());\n\n\t\t\tawait this.revealEditorsToConfirm(editors, editorGroupService); // help user make a decision by revealing editors\n\n\t\t\tconst confirmation = await editors\n\t\t\t\t.at(0)\n\t\t\t\t?.editor.closeHandler?.confirm?.(editors);\n\t\t\tif (typeof confirmation === \"number\") {\n\t\t\t\tswitch (confirmation) {\n\t\t\t\t\tcase ConfirmResult.CANCEL:\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase ConfirmResult.DONT_SAVE:\n\t\t\t\t\t\tawait this.revertEditors(\n\t\t\t\t\t\t\teditorService,\n\t\t\t\t\t\t\tlogService,\n\t\t\t\t\t\t\tprogressService,\n\t\t\t\t\t\t\teditors,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ConfirmResult.SAVE:\n\t\t\t\t\t\tawait editorService.save(editors, {\n\t\t\t\t\t\t\treason: SaveReason.EXPLICIT,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3.) Save autosaveable editors (focus change)\n\t\tif (dirtyAutoSaveOnFocusChangeEditors.size > 0) {\n\t\t\tconst editors = Array.from(\n\t\t\t\tdirtyAutoSaveOnFocusChangeEditors.values(),\n\t\t\t);\n\n\t\t\tawait editorService.save(editors, {\n\t\t\t\treason: SaveReason.FOCUS_CHANGE,\n\t\t\t});\n\t\t}\n\n\t\t// 4.) Save autosaveable editors (window change)\n\t\tif (dirtyAutoSaveOnWindowChangeEditors.size > 0) {\n\t\t\tconst editors = Array.from(\n\t\t\t\tdirtyAutoSaveOnWindowChangeEditors.values(),\n\t\t\t);\n\n\t\t\tawait editorService.save(editors, {\n\t\t\t\treason: SaveReason.WINDOW_CHANGE,\n\t\t\t});\n\t\t}\n\n\t\t// 5.) Finally close all editors: even if an editor failed to\n\t\t// save or revert and still reports dirty, the editor part makes\n\t\t// sure to bring up another confirm dialog for those editors\n\t\t// specifically.\n\t\treturn this.doCloseAll(editorGroupService);\n\t}\n\n\tprivate revertEditors(\n\t\teditorService: IEditorService,\n\t\tlogService: ILogService,\n\t\tprogressService: IProgressService,\n\t\teditors: IEditorIdentifier[],\n\t): Promise<void> {\n\t\treturn progressService.withProgress(\n\t\t\t{\n\t\t\t\tlocation: ProgressLocation.Window, // use window progress to not be too annoying about this operation\n\t\t\t\tdelay: 800, // delay so that it only appears when operation takes a long time\n\t\t\t\ttitle: localize(\"reverting\", \"Reverting Editors...\"),\n\t\t\t},\n\t\t\t() => this.doRevertEditors(editorService, logService, editors),\n\t\t);\n\t}\n\n\tprivate async doRevertEditors(\n\t\teditorService: IEditorService,\n\t\tlogService: ILogService,\n\t\teditors: IEditorIdentifier[],\n\t): Promise<void> {\n\t\ttry {\n\t\t\t// We first attempt to revert all editors with `soft: false`, to ensure that\n\t\t\t// working copies revert to their state on disk. Even though we close editors,\n\t\t\t// it is possible that other parties hold a reference to the working copy\n\t\t\t// and expect it to be in a certain state after the editor is closed without\n\t\t\t// saving.\n\t\t\tawait editorService.revert(editors);\n\t\t} catch (error) {\n\t\t\tlogService.error(error);\n\n\t\t\t// if that fails, since we are about to close the editor, we accept that\n\t\t\t// the editor cannot be reverted and instead do a soft revert that just\n\t\t\t// enables us to close the editor. With this, a user can always close a\n\t\t\t// dirty editor even when reverting fails.\n\t\t\tawait editorService.revert(editors, { soft: true });\n\t\t}\n\t}\n\n\tprivate async revealEditorsToConfirm(\n\t\teditors: ReadonlyArray<IEditorIdentifier>,\n\t\teditorGroupService: IEditorGroupsService,\n\t): Promise<void> {\n\t\ttry {\n\t\t\tconst handledGroups = new Set<GroupIdentifier>();\n\t\t\tfor (const { editor, groupId } of editors) {\n\t\t\t\tif (handledGroups.has(groupId)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\thandledGroups.add(groupId);\n\n\t\t\t\tconst group = editorGroupService.getGroup(groupId);\n\t\t\t\tawait group?.openEditor(editor);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// ignore any error as the revealing is just convinience\n\t\t}\n\t}\n\n\tprotected abstract get excludeSticky(): boolean;\n\n\tprotected async doCloseAll(\n\t\teditorGroupService: IEditorGroupsService,\n\t): Promise<void> {\n\t\tawait Promise.all(\n\t\t\tthis.groupsToClose(editorGroupService).map((group) =>\n\t\t\t\tgroup.closeAllEditors({ excludeSticky: this.excludeSticky }),\n\t\t\t),\n\t\t);\n\t}\n}\n\nexport class CloseAllEditorsAction extends AbstractCloseAllAction {\n\tstatic readonly ID = \"workbench.action.closeAllEditors\";\n\tstatic readonly LABEL = localize2(\"closeAllEditors\", \"Close All Editors\");\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CloseAllEditorsAction.ID,\n\t\t\ttitle: CloseAllEditorsAction.LABEL,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(\n\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyW,\n\t\t\t\t),\n\t\t\t},\n\t\t\ticon: Codicon.closeAll,\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\tprotected get excludeSticky(): boolean {\n\t\treturn true; // exclude sticky from this mass-closing operation\n\t}\n}\n\nexport class CloseAllEditorGroupsAction extends AbstractCloseAllAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.closeAllGroups\",\n\t\t\ttitle: localize2(\"closeAllGroups\", \"Close All Editor Groups\"),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(\n\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\tKeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyW,\n\t\t\t\t),\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\tprotected get excludeSticky(): boolean {\n\t\treturn false; // the intent to close groups means, even sticky are included\n\t}\n\n\tprotected override async doCloseAll(\n\t\teditorGroupService: IEditorGroupsService,\n\t): Promise<void> {\n\t\tawait super.doCloseAll(editorGroupService);\n\n\t\tfor (const groupToClose of this.groupsToClose(editorGroupService)) {\n\t\t\teditorGroupService.removeGroup(groupToClose);\n\t\t}\n\t}\n}\n\nexport class CloseEditorsInOtherGroupsAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.closeEditorsInOtherGroups\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"closeEditorsInOtherGroups\",\n\t\t\t\t\"Close Editors in Other Groups\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\toverride async run(\n\t\taccessor: ServicesAccessor,\n\t\tcontext?: IEditorIdentifier,\n\t): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tconst groupToSkip = context\n\t\t\t? editorGroupService.getGroup(context.groupId)\n\t\t\t: editorGroupService.activeGroup;\n\t\tawait Promise.all(\n\t\t\teditorGroupService\n\t\t\t\t.getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE)\n\t\t\t\t.map(async (group) => {\n\t\t\t\t\tif (groupToSkip && group.id === groupToSkip.id) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn group.closeAllEditors({ excludeSticky: true });\n\t\t\t\t}),\n\t\t);\n\t}\n}\n\nexport class CloseEditorInAllGroupsAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.closeEditorInAllGroups\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"closeEditorInAllGroups\",\n\t\t\t\t\"Close Editor in All Groups\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tconst activeEditor = editorService.activeEditor;\n\t\tif (activeEditor) {\n\t\t\tawait Promise.all(\n\t\t\t\teditorGroupService\n\t\t\t\t\t.getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE)\n\t\t\t\t\t.map((group) => group.closeEditor(activeEditor)),\n\t\t\t);\n\t\t}\n\t}\n}\n\nabstract class AbstractMoveCopyGroupAction extends Action2 {\n\tconstructor(\n\t\tdesc: Readonly<IAction2Options>,\n\t\tprivate readonly direction: GroupDirection,\n\t\tprivate readonly isMove: boolean,\n\t) {\n\t\tsuper(desc);\n\t}\n\n\toverride async run(\n\t\taccessor: ServicesAccessor,\n\t\tcontext?: IEditorIdentifier,\n\t): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tlet sourceGroup: IEditorGroup | undefined;\n\t\tif (context && typeof context.groupId === \"number\") {\n\t\t\tsourceGroup = editorGroupService.getGroup(context.groupId);\n\t\t} else {\n\t\t\tsourceGroup = editorGroupService.activeGroup;\n\t\t}\n\n\t\tif (sourceGroup) {\n\t\t\tlet resultGroup: IEditorGroup | undefined;\n\t\t\tif (this.isMove) {\n\t\t\t\tconst targetGroup = this.findTargetGroup(\n\t\t\t\t\teditorGroupService,\n\t\t\t\t\tsourceGroup,\n\t\t\t\t);\n\t\t\t\tif (targetGroup) {\n\t\t\t\t\tresultGroup = editorGroupService.moveGroup(\n\t\t\t\t\t\tsourceGroup,\n\t\t\t\t\t\ttargetGroup,\n\t\t\t\t\t\tthis.direction,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresultGroup = editorGroupService.copyGroup(\n\t\t\t\t\tsourceGroup,\n\t\t\t\t\tsourceGroup,\n\t\t\t\t\tthis.direction,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (resultGroup) {\n\t\t\t\teditorGroupService.activateGroup(resultGroup);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate findTargetGroup(\n\t\teditorGroupService: IEditorGroupsService,\n\t\tsourceGroup: IEditorGroup,\n\t): IEditorGroup | undefined {\n\t\tconst targetNeighbours: GroupDirection[] = [this.direction];\n\n\t\t// Allow the target group to be in alternative locations to support more\n\t\t// scenarios of moving the group to the taret location.\n\t\t// Helps for https://github.com/microsoft/vscode/issues/50741\n\t\tswitch (this.direction) {\n\t\t\tcase GroupDirection.LEFT:\n\t\t\tcase GroupDirection.RIGHT:\n\t\t\t\ttargetNeighbours.push(GroupDirection.UP, GroupDirection.DOWN);\n\t\t\t\tbreak;\n\t\t\tcase GroupDirection.UP:\n\t\t\tcase GroupDirection.DOWN:\n\t\t\t\ttargetNeighbours.push(\n\t\t\t\t\tGroupDirection.LEFT,\n\t\t\t\t\tGroupDirection.RIGHT,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tfor (const targetNeighbour of targetNeighbours) {\n\t\t\tconst targetNeighbourGroup = editorGroupService.findGroup(\n\t\t\t\t{ direction: targetNeighbour },\n\t\t\t\tsourceGroup,\n\t\t\t);\n\t\t\tif (targetNeighbourGroup) {\n\t\t\t\treturn targetNeighbourGroup;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\nabstract class AbstractMoveGroupAction extends AbstractMoveCopyGroupAction {\n\tconstructor(desc: Readonly<IAction2Options>, direction: GroupDirection) {\n\t\tsuper(desc, direction, true);\n\t}\n}\n\nexport class MoveGroupLeftAction extends AbstractMoveGroupAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.moveActiveEditorGroupLeft\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"moveActiveGroupLeft\",\n\t\t\t\t\t\"Move Editor Group Left\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\t\tKeyCode.LeftArrow,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tGroupDirection.LEFT,\n\t\t);\n\t}\n}\n\nexport class MoveGroupRightAction extends AbstractMoveGroupAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.moveActiveEditorGroupRight\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"moveActiveGroupRight\",\n\t\t\t\t\t\"Move Editor Group Right\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\t\tKeyCode.RightArrow,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tGroupDirection.RIGHT,\n\t\t);\n\t}\n}\n\nexport class MoveGroupUpAction extends AbstractMoveGroupAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.moveActiveEditorGroupUp\",\n\t\t\t\ttitle: localize2(\"moveActiveGroupUp\", \"Move Editor Group Up\"),\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\t\tKeyCode.UpArrow,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tGroupDirection.UP,\n\t\t);\n\t}\n}\n\nexport class MoveGroupDownAction extends AbstractMoveGroupAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.moveActiveEditorGroupDown\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"moveActiveGroupDown\",\n\t\t\t\t\t\"Move Editor Group Down\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\t\tKeyCode.DownArrow,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tGroupDirection.DOWN,\n\t\t);\n\t}\n}\n\nabstract class AbstractDuplicateGroupAction extends AbstractMoveCopyGroupAction {\n\tconstructor(desc: Readonly<IAction2Options>, direction: GroupDirection) {\n\t\tsuper(desc, direction, false);\n\t}\n}\n\nexport class DuplicateGroupLeftAction extends AbstractDuplicateGroupAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.duplicateActiveEditorGroupLeft\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"duplicateActiveGroupLeft\",\n\t\t\t\t\t\"Duplicate Editor Group Left\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tGroupDirection.LEFT,\n\t\t);\n\t}\n}\n\nexport class DuplicateGroupRightAction extends AbstractDuplicateGroupAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.duplicateActiveEditorGroupRight\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"duplicateActiveGroupRight\",\n\t\t\t\t\t\"Duplicate Editor Group Right\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tGroupDirection.RIGHT,\n\t\t);\n\t}\n}\n\nexport class DuplicateGroupUpAction extends AbstractDuplicateGroupAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.duplicateActiveEditorGroupUp\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"duplicateActiveGroupUp\",\n\t\t\t\t\t\"Duplicate Editor Group Up\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tGroupDirection.UP,\n\t\t);\n\t}\n}\n\nexport class DuplicateGroupDownAction extends AbstractDuplicateGroupAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.duplicateActiveEditorGroupDown\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"duplicateActiveGroupDown\",\n\t\t\t\t\t\"Duplicate Editor Group Down\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tGroupDirection.DOWN,\n\t\t);\n\t}\n}\n\nexport class MinimizeOtherGroupsAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.minimizeOtherEditors\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"minimizeOtherEditorGroups\",\n\t\t\t\t\"Expand Editor Group\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t\tprecondition: MultipleEditorGroupsContext,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\teditorGroupService.arrangeGroups(GroupsArrangement.EXPAND);\n\t}\n}\n\nexport class MinimizeOtherGroupsHideSidebarAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.minimizeOtherEditorsHideSidebar\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"minimizeOtherEditorGroupsHideSidebar\",\n\t\t\t\t\"Expand Editor Group and Hide Side Bars\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t\tprecondition: ContextKeyExpr.or(\n\t\t\t\tMultipleEditorGroupsContext,\n\t\t\t\tSideBarVisibleContext,\n\t\t\t\tAuxiliaryBarVisibleContext,\n\t\t\t),\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\n\t\tlayoutService.setPartHidden(true, Parts.SIDEBAR_PART);\n\t\tlayoutService.setPartHidden(true, Parts.AUXILIARYBAR_PART);\n\t\teditorGroupService.arrangeGroups(GroupsArrangement.EXPAND);\n\t}\n}\n\nexport class ResetGroupSizesAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.evenEditorWidths\",\n\t\t\ttitle: localize2(\"evenEditorGroups\", \"Reset Editor Group Sizes\"),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\teditorGroupService.arrangeGroups(GroupsArrangement.EVEN);\n\t}\n}\n\nexport class ToggleGroupSizesAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.toggleEditorWidths\",\n\t\t\ttitle: localize2(\"toggleEditorWidths\", \"Toggle Editor Group Sizes\"),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\teditorGroupService.toggleExpandGroup();\n\t}\n}\n\nexport class MaximizeGroupHideSidebarAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.maximizeEditorHideSidebar\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"maximizeEditorHideSidebar\",\n\t\t\t\t\"Maximize Editor Group and Hide Side Bars\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t\tprecondition: ContextKeyExpr.or(\n\t\t\t\tContextKeyExpr.and(\n\t\t\t\t\tEditorPartMaximizedEditorGroupContext.negate(),\n\t\t\t\t\tEditorPartMultipleEditorGroupsContext,\n\t\t\t\t),\n\t\t\t\tSideBarVisibleContext,\n\t\t\t\tAuxiliaryBarVisibleContext,\n\t\t\t),\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tif (editorService.activeEditor) {\n\t\t\tlayoutService.setPartHidden(true, Parts.SIDEBAR_PART);\n\t\t\tlayoutService.setPartHidden(true, Parts.AUXILIARYBAR_PART);\n\t\t\teditorGroupService.arrangeGroups(GroupsArrangement.MAXIMIZE);\n\t\t}\n\t}\n}\n\nexport class ToggleMaximizeEditorGroupAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: TOGGLE_MAXIMIZE_EDITOR_GROUP,\n\t\t\ttitle: localize2(\n\t\t\t\t\"toggleMaximizeEditorGroup\",\n\t\t\t\t\"Toggle Maximize Editor Group\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t\tprecondition: ContextKeyExpr.or(\n\t\t\t\tEditorPartMultipleEditorGroupsContext,\n\t\t\t\tEditorPartMaximizedEditorGroupContext,\n\t\t\t),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(\n\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyM,\n\t\t\t\t),\n\t\t\t},\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\torder: -10000, // towards the front\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\twhen: EditorPartMaximizedEditorGroupContext,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.EmptyEditorGroup,\n\t\t\t\t\torder: -10000, // towards the front\n\t\t\t\t\tgroup: \"navigation\",\n\t\t\t\t\twhen: EditorPartMaximizedEditorGroupContext,\n\t\t\t\t},\n\t\t\t],\n\t\t\ticon: Codicon.screenFull,\n\t\t\ttoggled: EditorPartMaximizedEditorGroupContext,\n\t\t});\n\t}\n\n\toverride async run(\n\t\taccessor: ServicesAccessor,\n\t\t...args: unknown[]\n\t): Promise<void> {\n\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\n\t\tconst resolvedContext = resolveCommandsContext(\n\t\t\targs,\n\t\t\taccessor.get(IEditorService),\n\t\t\teditorGroupsService,\n\t\t\taccessor.get(IListService),\n\t\t);\n\t\tif (resolvedContext.groupedEditors.length) {\n\t\t\teditorGroupsService.toggleMaximizeGroup(\n\t\t\t\tresolvedContext.groupedEditors[0].group,\n\t\t\t);\n\t\t}\n\t}\n}\n\nabstract class AbstractNavigateEditorAction extends Action2 {\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tconst result = this.navigate(editorGroupService);\n\t\tif (!result) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { groupId, editor } = result;\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst group = editorGroupService.getGroup(groupId);\n\t\tif (group) {\n\t\t\tawait group.openEditor(editor);\n\t\t}\n\t}\n\n\tprotected abstract navigate(\n\t\teditorGroupService: IEditorGroupsService,\n\t): IEditorIdentifier | undefined;\n}\n\nexport class OpenNextEditor extends AbstractNavigateEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.nextEditor\",\n\t\t\ttitle: localize2(\"openNextEditor\", \"Open Next Editor\"),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.PageDown,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.RightArrow,\n\t\t\t\t\tsecondary: [\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyMod.Shift | KeyCode.BracketRight,\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\tprotected navigate(\n\t\teditorGroupService: IEditorGroupsService,\n\t): IEditorIdentifier | undefined {\n\t\t// Navigate in active group if possible\n\t\tconst activeGroup = editorGroupService.activeGroup;\n\t\tconst activeGroupEditors = activeGroup.getEditors(\n\t\t\tEditorsOrder.SEQUENTIAL,\n\t\t);\n\t\tconst activeEditorIndex = activeGroup.activeEditor\n\t\t\t? activeGroupEditors.indexOf(activeGroup.activeEditor)\n\t\t\t: -1;\n\t\tif (activeEditorIndex + 1 < activeGroupEditors.length) {\n\t\t\treturn {\n\t\t\t\teditor: activeGroupEditors[activeEditorIndex + 1],\n\t\t\t\tgroupId: activeGroup.id,\n\t\t\t};\n\t\t}\n\n\t\t// Otherwise try in next group that has editors\n\t\tconst handledGroups = new Set<number>();\n\t\tlet currentGroup: IEditorGroup | undefined =\n\t\t\teditorGroupService.activeGroup;\n\t\twhile (currentGroup && !handledGroups.has(currentGroup.id)) {\n\t\t\tcurrentGroup = editorGroupService.findGroup(\n\t\t\t\t{ location: GroupLocation.NEXT },\n\t\t\t\tcurrentGroup,\n\t\t\t\ttrue,\n\t\t\t);\n\t\t\tif (currentGroup) {\n\t\t\t\thandledGroups.add(currentGroup.id);\n\n\t\t\t\tconst groupEditors = currentGroup.getEditors(\n\t\t\t\t\tEditorsOrder.SEQUENTIAL,\n\t\t\t\t);\n\t\t\t\tif (groupEditors.length > 0) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\teditor: groupEditors[0],\n\t\t\t\t\t\tgroupId: currentGroup.id,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\nexport class OpenPreviousEditor extends AbstractNavigateEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.previousEditor\",\n\t\t\ttitle: localize2(\"openPreviousEditor\", \"Open Previous Editor\"),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.PageUp,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.LeftArrow,\n\t\t\t\t\tsecondary: [\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyMod.Shift | KeyCode.BracketLeft,\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\tprotected navigate(\n\t\teditorGroupService: IEditorGroupsService,\n\t): IEditorIdentifier | undefined {\n\t\t// Navigate in active group if possible\n\t\tconst activeGroup = editorGroupService.activeGroup;\n\t\tconst activeGroupEditors = activeGroup.getEditors(\n\t\t\tEditorsOrder.SEQUENTIAL,\n\t\t);\n\t\tconst activeEditorIndex = activeGroup.activeEditor\n\t\t\t? activeGroupEditors.indexOf(activeGroup.activeEditor)\n\t\t\t: -1;\n\t\tif (activeEditorIndex > 0) {\n\t\t\treturn {\n\t\t\t\teditor: activeGroupEditors[activeEditorIndex - 1],\n\t\t\t\tgroupId: activeGroup.id,\n\t\t\t};\n\t\t}\n\n\t\t// Otherwise try in previous group that has editors\n\t\tconst handledGroups = new Set<number>();\n\t\tlet currentGroup: IEditorGroup | undefined =\n\t\t\teditorGroupService.activeGroup;\n\t\twhile (currentGroup && !handledGroups.has(currentGroup.id)) {\n\t\t\tcurrentGroup = editorGroupService.findGroup(\n\t\t\t\t{ location: GroupLocation.PREVIOUS },\n\t\t\t\tcurrentGroup,\n\t\t\t\ttrue,\n\t\t\t);\n\t\t\tif (currentGroup) {\n\t\t\t\thandledGroups.add(currentGroup.id);\n\n\t\t\t\tconst groupEditors = currentGroup.getEditors(\n\t\t\t\t\tEditorsOrder.SEQUENTIAL,\n\t\t\t\t);\n\t\t\t\tif (groupEditors.length > 0) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\teditor: groupEditors[groupEditors.length - 1],\n\t\t\t\t\t\tgroupId: currentGroup.id,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\nexport class OpenNextEditorInGroup extends AbstractNavigateEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.nextEditorInGroup\",\n\t\t\ttitle: localize2(\"nextEditorInGroup\", \"Open Next Editor in Group\"),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(\n\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.PageDown,\n\t\t\t\t),\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyMod.Alt | KeyCode.RightArrow,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\tprotected navigate(\n\t\teditorGroupService: IEditorGroupsService,\n\t): IEditorIdentifier {\n\t\tconst group = editorGroupService.activeGroup;\n\t\tconst editors = group.getEditors(EditorsOrder.SEQUENTIAL);\n\t\tconst index = group.activeEditor\n\t\t\t? editors.indexOf(group.activeEditor)\n\t\t\t: -1;\n\n\t\treturn {\n\t\t\teditor:\n\t\t\t\tindex + 1 < editors.length ? editors[index + 1] : editors[0],\n\t\t\tgroupId: group.id,\n\t\t};\n\t}\n}\n\nexport class OpenPreviousEditorInGroup extends AbstractNavigateEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.previousEditorInGroup\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"openPreviousEditorInGroup\",\n\t\t\t\t\"Open Previous Editor in Group\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(\n\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.PageUp,\n\t\t\t\t),\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyMod.Alt | KeyCode.LeftArrow,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\tprotected navigate(\n\t\teditorGroupService: IEditorGroupsService,\n\t): IEditorIdentifier {\n\t\tconst group = editorGroupService.activeGroup;\n\t\tconst editors = group.getEditors(EditorsOrder.SEQUENTIAL);\n\t\tconst index = group.activeEditor\n\t\t\t? editors.indexOf(group.activeEditor)\n\t\t\t: -1;\n\n\t\treturn {\n\t\t\teditor:\n\t\t\t\tindex > 0 ? editors[index - 1] : editors[editors.length - 1],\n\t\t\tgroupId: group.id,\n\t\t};\n\t}\n}\n\nexport class OpenFirstEditorInGroup extends AbstractNavigateEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.firstEditorInGroup\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"firstEditorInGroup\",\n\t\t\t\t\"Open First Editor in Group\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\tprotected navigate(\n\t\teditorGroupService: IEditorGroupsService,\n\t): IEditorIdentifier {\n\t\tconst group = editorGroupService.activeGroup;\n\t\tconst editors = group.getEditors(EditorsOrder.SEQUENTIAL);\n\n\t\treturn { editor: editors[0], groupId: group.id };\n\t}\n}\n\nexport class OpenLastEditorInGroup extends AbstractNavigateEditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.lastEditorInGroup\",\n\t\t\ttitle: localize2(\"lastEditorInGroup\", \"Open Last Editor in Group\"),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.Digit0,\n\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.Digit9],\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.WinCtrl | KeyCode.Digit0,\n\t\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.Digit9],\n\t\t\t\t},\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\tprotected navigate(\n\t\teditorGroupService: IEditorGroupsService,\n\t): IEditorIdentifier {\n\t\tconst group = editorGroupService.activeGroup;\n\t\tconst editors = group.getEditors(EditorsOrder.SEQUENTIAL);\n\n\t\treturn { editor: editors[editors.length - 1], groupId: group.id };\n\t}\n}\n\nexport class NavigateForwardAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.navigateForward\";\n\tstatic readonly LABEL = localize(\"navigateForward\", \"Go Forward\");\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: NavigateForwardAction.ID,\n\t\t\ttitle: {\n\t\t\t\t...localize2(\"navigateForward\", \"Go Forward\"),\n\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t{ key: \"miForward\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\"&&Forward\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tf1: true,\n\t\t\ticon: Codicon.arrowRight,\n\t\t\tprecondition: ContextKeyExpr.has(\"canNavigateForward\"),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twin: { primary: KeyMod.Alt | KeyCode.RightArrow },\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyMod.Shift | KeyCode.Minus },\n\t\t\t\tlinux: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Minus,\n\t\t\t\t},\n\t\t\t},\n\t\t\tmenu: [\n\t\t\t\t{ id: MenuId.MenubarGoMenu, group: \"1_history_nav\", order: 2 },\n\t\t\t\t{ id: MenuId.CommandCenter, order: 2 },\n\t\t\t],\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\tawait historyService.goForward(GoFilter.NONE);\n\t}\n}\n\nexport class NavigateBackwardsAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.navigateBack\";\n\tstatic readonly LABEL = localize(\"navigateBack\", \"Go Back\");\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: NavigateBackwardsAction.ID,\n\t\t\ttitle: {\n\t\t\t\t...localize2(\"navigateBack\", \"Go Back\"),\n\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t{ key: \"miBack\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\"&&Back\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.has(\"canNavigateBack\"),\n\t\t\ticon: Codicon.arrowLeft,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twin: { primary: KeyMod.Alt | KeyCode.LeftArrow },\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.Minus },\n\t\t\t\tlinux: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Minus },\n\t\t\t},\n\t\t\tmenu: [\n\t\t\t\t{ id: MenuId.MenubarGoMenu, group: \"1_history_nav\", order: 1 },\n\t\t\t\t{ id: MenuId.CommandCenter, order: 1 },\n\t\t\t],\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\tawait historyService.goBack(GoFilter.NONE);\n\t}\n}\n\nexport class NavigatePreviousAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.navigateLast\",\n\t\t\ttitle: localize2(\"navigatePrevious\", \"Go Previous\"),\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\tawait historyService.goPrevious(GoFilter.NONE);\n\t}\n}\n\nexport class NavigateForwardInEditsAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.navigateForwardInEditLocations\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"navigateForwardInEdits\",\n\t\t\t\t\"Go Forward in Edit Locations\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\tawait historyService.goForward(GoFilter.EDITS);\n\t}\n}\n\nexport class NavigateBackwardsInEditsAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.navigateBackInEditLocations\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"navigateBackInEdits\",\n\t\t\t\t\"Go Back in Edit Locations\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\tawait historyService.goBack(GoFilter.EDITS);\n\t}\n}\n\nexport class NavigatePreviousInEditsAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.navigatePreviousInEditLocations\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"navigatePreviousInEdits\",\n\t\t\t\t\"Go Previous in Edit Locations\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\tawait historyService.goPrevious(GoFilter.EDITS);\n\t}\n}\n\nexport class NavigateToLastEditLocationAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.navigateToLastEditLocation\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"navigateToLastEditLocation\",\n\t\t\t\t\"Go to Last Edit Location\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(\n\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyQ,\n\t\t\t\t),\n\t\t\t},\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\tawait historyService.goLast(GoFilter.EDITS);\n\t}\n}\n\nexport class NavigateForwardInNavigationsAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.navigateForwardInNavigationLocations\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"navigateForwardInNavigations\",\n\t\t\t\t\"Go Forward in Navigation Locations\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\tawait historyService.goForward(GoFilter.NAVIGATION);\n\t}\n}\n\nexport class NavigateBackwardsInNavigationsAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.navigateBackInNavigationLocations\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"navigateBackInNavigations\",\n\t\t\t\t\"Go Back in Navigation Locations\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\tawait historyService.goBack(GoFilter.NAVIGATION);\n\t}\n}\n\nexport class NavigatePreviousInNavigationsAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.navigatePreviousInNavigationLocations\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"navigatePreviousInNavigationLocations\",\n\t\t\t\t\"Go Previous in Navigation Locations\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\tawait historyService.goPrevious(GoFilter.NAVIGATION);\n\t}\n}\n\nexport class NavigateToLastNavigationLocationAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.navigateToLastNavigationLocation\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"navigateToLastNavigationLocation\",\n\t\t\t\t\"Go to Last Navigation Location\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\tawait historyService.goLast(GoFilter.NAVIGATION);\n\t}\n}\n\nexport class ReopenClosedEditorAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.reopenClosedEditor\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ReopenClosedEditorAction.ID,\n\t\t\ttitle: localize2(\"reopenClosedEditor\", \"Reopen Closed Editor\"),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyT,\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\tawait historyService.reopenLastClosedEditor();\n\t}\n}\n\nexport class ClearRecentFilesAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.clearRecentFiles\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ClearRecentFilesAction.ID,\n\t\t\ttitle: localize2(\"clearRecentFiles\", \"Clear Recently Opened...\"),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.File,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst dialogService = accessor.get(IDialogService);\n\t\tconst workspacesService = accessor.get(IWorkspacesService);\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\t// Ask for confirmation\n\t\tconst { confirmed } = await dialogService.confirm({\n\t\t\ttype: \"warning\",\n\t\t\tmessage: localize(\n\t\t\t\t\"confirmClearRecentsMessage\",\n\t\t\t\t\"Do you want to clear all recently opened files and workspaces?\",\n\t\t\t),\n\t\t\tdetail: localize(\n\t\t\t\t\"confirmClearDetail\",\n\t\t\t\t\"This action is irreversible!\",\n\t\t\t),\n\t\t\tprimaryButton: localize(\n\t\t\t\t{ key: \"clearButtonLabel\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\"&&Clear\",\n\t\t\t),\n\t\t});\n\n\t\tif (!confirmed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clear global recently opened\n\t\tworkspacesService.clearRecentlyOpened();\n\n\t\t// Clear workspace specific recently opened\n\t\thistoryService.clearRecentlyOpened();\n\t}\n}\n\nexport class ShowEditorsInActiveGroupByMostRecentlyUsedAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.showEditorsInActiveGroup\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ShowEditorsInActiveGroupByMostRecentlyUsedAction.ID,\n\t\t\ttitle: localize2(\n\t\t\t\t\"showEditorsInActiveGroup\",\n\t\t\t\t\"Show Editors in Active Group By Most Recently Used\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\tquickInputService.quickAccess.show(\n\t\t\tActiveGroupEditorsByMostRecentlyUsedQuickAccess.PREFIX,\n\t\t);\n\t}\n}\n\nexport class ShowAllEditorsByAppearanceAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.showAllEditors\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ShowAllEditorsByAppearanceAction.ID,\n\t\t\ttitle: localize2(\n\t\t\t\t\"showAllEditors\",\n\t\t\t\t\"Show All Editors By Appearance\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(\n\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyP,\n\t\t\t\t),\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Tab,\n\t\t\t\t},\n\t\t\t},\n\t\t\tcategory: Categories.File,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\tquickInputService.quickAccess.show(\n\t\t\tAllEditorsByAppearanceQuickAccess.PREFIX,\n\t\t);\n\t}\n}\n\nexport class ShowAllEditorsByMostRecentlyUsedAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.showAllEditorsByMostRecentlyUsed\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ShowAllEditorsByMostRecentlyUsedAction.ID,\n\t\t\ttitle: localize2(\n\t\t\t\t\"showAllEditorsByMostRecentlyUsed\",\n\t\t\t\t\"Show All Editors By Most Recently Used\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\tquickInputService.quickAccess.show(\n\t\t\tAllEditorsByMostRecentlyUsedQuickAccess.PREFIX,\n\t\t);\n\t}\n}\n\nabstract class AbstractQuickAccessEditorAction extends Action2 {\n\tconstructor(\n\t\tdesc: Readonly<IAction2Options>,\n\t\tprivate readonly prefix: string,\n\t\tprivate readonly itemActivation: ItemActivation | undefined,\n\t) {\n\t\tsuper(desc);\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst keybindingService = accessor.get(IKeybindingService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\tconst keybindings = keybindingService.lookupKeybindings(this.desc.id);\n\n\t\tquickInputService.quickAccess.show(this.prefix, {\n\t\t\tquickNavigateConfiguration: { keybindings },\n\t\t\titemActivation: this.itemActivation,\n\t\t});\n\t}\n}\n\nexport class QuickAccessPreviousRecentlyUsedEditorAction extends AbstractQuickAccessEditorAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.quickOpenPreviousRecentlyUsedEditor\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"quickOpenPreviousRecentlyUsedEditor\",\n\t\t\t\t\t\"Quick Open Previous Recently Used Editor\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tAllEditorsByMostRecentlyUsedQuickAccess.PREFIX,\n\t\t\tundefined,\n\t\t);\n\t}\n}\n\nexport class QuickAccessLeastRecentlyUsedEditorAction extends AbstractQuickAccessEditorAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.quickOpenLeastRecentlyUsedEditor\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"quickOpenLeastRecentlyUsedEditor\",\n\t\t\t\t\t\"Quick Open Least Recently Used Editor\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tAllEditorsByMostRecentlyUsedQuickAccess.PREFIX,\n\t\t\tundefined,\n\t\t);\n\t}\n}\n\nexport class QuickAccessPreviousRecentlyUsedEditorInGroupAction extends AbstractQuickAccessEditorAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"quickOpenPreviousRecentlyUsedEditorInGroup\",\n\t\t\t\t\t\"Quick Open Previous Recently Used Editor in Group\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Tab,\n\t\t\t\t\tmac: {\n\t\t\t\t\t\tprimary: KeyMod.WinCtrl | KeyCode.Tab,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tprecondition: ActiveEditorGroupEmptyContext.toNegated(),\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tActiveGroupEditorsByMostRecentlyUsedQuickAccess.PREFIX,\n\t\t\tundefined,\n\t\t);\n\t}\n}\n\nexport class QuickAccessLeastRecentlyUsedEditorInGroupAction extends AbstractQuickAccessEditorAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.quickOpenLeastRecentlyUsedEditorInGroup\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"quickOpenLeastRecentlyUsedEditorInGroup\",\n\t\t\t\t\t\"Quick Open Least Recently Used Editor in Group\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Tab,\n\t\t\t\t\tmac: {\n\t\t\t\t\t\tprimary: KeyMod.WinCtrl | KeyMod.Shift | KeyCode.Tab,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tprecondition: ActiveEditorGroupEmptyContext.toNegated(),\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tActiveGroupEditorsByMostRecentlyUsedQuickAccess.PREFIX,\n\t\t\tItemActivation.LAST,\n\t\t);\n\t}\n}\n\nexport class QuickAccessPreviousEditorFromHistoryAction extends Action2 {\n\tprivate static readonly ID =\n\t\t\"workbench.action.openPreviousEditorFromHistory\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: QuickAccessPreviousEditorFromHistoryAction.ID,\n\t\t\ttitle: localize2(\n\t\t\t\t\"navigateEditorHistoryByInput\",\n\t\t\t\t\"Quick Open Previous Editor from History\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst keybindingService = accessor.get(IKeybindingService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tconst keybindings = keybindingService.lookupKeybindings(\n\t\t\tQuickAccessPreviousEditorFromHistoryAction.ID,\n\t\t);\n\n\t\t// Enforce to activate the first item in quick access if\n\t\t// the currently active editor group has n editor opened\n\t\tlet itemActivation: ItemActivation | undefined;\n\t\tif (editorGroupService.activeGroup.count === 0) {\n\t\t\titemActivation = ItemActivation.FIRST;\n\t\t}\n\n\t\tquickInputService.quickAccess.show(\"\", {\n\t\t\tquickNavigateConfiguration: { keybindings },\n\t\t\titemActivation,\n\t\t});\n\t}\n}\n\nexport class OpenNextRecentlyUsedEditorAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.openNextRecentlyUsedEditor\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"openNextRecentlyUsedEditor\",\n\t\t\t\t\"Open Next Recently Used Editor\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\thistoryService.openNextRecentlyUsedEditor();\n\t}\n}\n\nexport class OpenPreviousRecentlyUsedEditorAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.openPreviousRecentlyUsedEditor\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"openPreviousRecentlyUsedEditor\",\n\t\t\t\t\"Open Previous Recently Used Editor\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\thistoryService.openPreviouslyUsedEditor();\n\t}\n}\n\nexport class OpenNextRecentlyUsedEditorInGroupAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.openNextRecentlyUsedEditorInGroup\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"openNextRecentlyUsedEditorInGroup\",\n\t\t\t\t\"Open Next Recently Used Editor In Group\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\n\t\thistoryService.openNextRecentlyUsedEditor(\n\t\t\teditorGroupsService.activeGroup.id,\n\t\t);\n\t}\n}\n\nexport class OpenPreviousRecentlyUsedEditorInGroupAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.openPreviousRecentlyUsedEditorInGroup\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"openPreviousRecentlyUsedEditorInGroup\",\n\t\t\t\t\"Open Previous Recently Used Editor In Group\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\n\t\thistoryService.openPreviouslyUsedEditor(\n\t\t\teditorGroupsService.activeGroup.id,\n\t\t);\n\t}\n}\n\nexport class ClearEditorHistoryAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.clearEditorHistory\",\n\t\t\ttitle: localize2(\"clearEditorHistory\", \"Clear Editor History\"),\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst dialogService = accessor.get(IDialogService);\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\t// Ask for confirmation\n\t\tconst { confirmed } = await dialogService.confirm({\n\t\t\ttype: \"warning\",\n\t\t\tmessage: localize(\n\t\t\t\t\"confirmClearEditorHistoryMessage\",\n\t\t\t\t\"Do you want to clear the history of recently opened editors?\",\n\t\t\t),\n\t\t\tdetail: localize(\n\t\t\t\t\"confirmClearDetail\",\n\t\t\t\t\"This action is irreversible!\",\n\t\t\t),\n\t\t\tprimaryButton: localize(\n\t\t\t\t{ key: \"clearButtonLabel\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\"&&Clear\",\n\t\t\t),\n\t\t});\n\n\t\tif (!confirmed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clear editor history\n\t\thistoryService.clear();\n\t}\n}\n\nexport class MoveEditorLeftInGroupAction extends ExecuteCommandAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.moveEditorLeftInGroup\",\n\t\t\t\ttitle: localize2(\"moveEditorLeft\", \"Move Editor Left\"),\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.PageUp,\n\t\t\t\t\tmac: {\n\t\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\t\t\tKeyMod.CtrlCmd | KeyMod.Shift | KeyCode.LeftArrow,\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tMOVE_ACTIVE_EDITOR_COMMAND_ID,\n\t\t\t{ to: \"left\" } satisfies ActiveEditorMoveCopyArguments,\n\t\t);\n\t}\n}\n\nexport class MoveEditorRightInGroupAction extends ExecuteCommandAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.moveEditorRightInGroup\",\n\t\t\t\ttitle: localize2(\"moveEditorRight\", \"Move Editor Right\"),\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.PageDown,\n\t\t\t\t\tmac: {\n\t\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\t\t\tKeyMod.CtrlCmd | KeyMod.Shift | KeyCode.RightArrow,\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tMOVE_ACTIVE_EDITOR_COMMAND_ID,\n\t\t\t{ to: \"right\" } satisfies ActiveEditorMoveCopyArguments,\n\t\t);\n\t}\n}\n\nexport class MoveEditorToPreviousGroupAction extends ExecuteCommandAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.moveEditorToPreviousGroup\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"moveEditorToPreviousGroup\",\n\t\t\t\t\t\"Move Editor into Previous Group\",\n\t\t\t\t),\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.LeftArrow,\n\t\t\t\t\tmac: {\n\t\t\t\t\t\tprimary:\n\t\t\t\t\t\t\tKeyMod.CtrlCmd | KeyMod.WinCtrl | KeyCode.LeftArrow,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tMOVE_ACTIVE_EDITOR_COMMAND_ID,\n\t\t\t{\n\t\t\t\tto: \"previous\",\n\t\t\t\tby: \"group\",\n\t\t\t} satisfies ActiveEditorMoveCopyArguments,\n\t\t);\n\t}\n}\n\nexport class MoveEditorToNextGroupAction extends ExecuteCommandAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.moveEditorToNextGroup\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"moveEditorToNextGroup\",\n\t\t\t\t\t\"Move Editor into Next Group\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.RightArrow,\n\t\t\t\t\tmac: {\n\t\t\t\t\t\tprimary:\n\t\t\t\t\t\t\tKeyMod.CtrlCmd |\n\t\t\t\t\t\t\tKeyMod.WinCtrl |\n\t\t\t\t\t\t\tKeyCode.RightArrow,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tMOVE_ACTIVE_EDITOR_COMMAND_ID,\n\t\t\t{ to: \"next\", by: \"group\" } satisfies ActiveEditorMoveCopyArguments,\n\t\t);\n\t}\n}\n\nexport class MoveEditorToAboveGroupAction extends ExecuteCommandAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.moveEditorToAboveGroup\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"moveEditorToAboveGroup\",\n\t\t\t\t\t\"Move Editor into Group Above\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tMOVE_ACTIVE_EDITOR_COMMAND_ID,\n\t\t\t{ to: \"up\", by: \"group\" } satisfies ActiveEditorMoveCopyArguments,\n\t\t);\n\t}\n}\n\nexport class MoveEditorToBelowGroupAction extends ExecuteCommandAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.moveEditorToBelowGroup\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"moveEditorToBelowGroup\",\n\t\t\t\t\t\"Move Editor into Group Below\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tMOVE_ACTIVE_EDITOR_COMMAND_ID,\n\t\t\t{ to: \"down\", by: \"group\" } satisfies ActiveEditorMoveCopyArguments,\n\t\t);\n\t}\n}\n\nexport class MoveEditorToLeftGroupAction extends ExecuteCommandAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.moveEditorToLeftGroup\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"moveEditorToLeftGroup\",\n\t\t\t\t\t\"Move Editor into Left Group\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tMOVE_ACTIVE_EDITOR_COMMAND_ID,\n\t\t\t{ to: \"left\", by: \"group\" } satisfies ActiveEditorMoveCopyArguments,\n\t\t);\n\t}\n}\n\nexport class MoveEditorToRightGroupAction extends ExecuteCommandAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.moveEditorToRightGroup\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"moveEditorToRightGroup\",\n\t\t\t\t\t\"Move Editor into Right Group\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tMOVE_ACTIVE_EDITOR_COMMAND_ID,\n\t\t\t{\n\t\t\t\tto: \"right\",\n\t\t\t\tby: \"group\",\n\t\t\t} satisfies ActiveEditorMoveCopyArguments,\n\t\t);\n\t}\n}\n\nexport class MoveEditorToFirstGroupAction extends ExecuteCommandAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.moveEditorToFirstGroup\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"moveEditorToFirstGroup\",\n\t\t\t\t\t\"Move Editor into First Group\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.Digit1,\n\t\t\t\t\tmac: {\n\t\t\t\t\t\tprimary:\n\t\t\t\t\t\t\tKeyMod.CtrlCmd | KeyMod.WinCtrl | KeyCode.Digit1,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tMOVE_ACTIVE_EDITOR_COMMAND_ID,\n\t\t\t{\n\t\t\t\tto: \"first\",\n\t\t\t\tby: \"group\",\n\t\t\t} satisfies ActiveEditorMoveCopyArguments,\n\t\t);\n\t}\n}\n\nexport class MoveEditorToLastGroupAction extends ExecuteCommandAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.moveEditorToLastGroup\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"moveEditorToLastGroup\",\n\t\t\t\t\t\"Move Editor into Last Group\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.Digit9,\n\t\t\t\t\tmac: {\n\t\t\t\t\t\tprimary:\n\t\t\t\t\t\t\tKeyMod.CtrlCmd | KeyMod.WinCtrl | KeyCode.Digit9,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tMOVE_ACTIVE_EDITOR_COMMAND_ID,\n\t\t\t{ to: \"last\", by: \"group\" } satisfies ActiveEditorMoveCopyArguments,\n\t\t);\n\t}\n}\n\nexport class SplitEditorToPreviousGroupAction extends ExecuteCommandAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.splitEditorToPreviousGroup\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"splitEditorToPreviousGroup\",\n\t\t\t\t\t\"Split Editor into Previous Group\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tCOPY_ACTIVE_EDITOR_COMMAND_ID,\n\t\t\t{\n\t\t\t\tto: \"previous\",\n\t\t\t\tby: \"group\",\n\t\t\t} satisfies ActiveEditorMoveCopyArguments,\n\t\t);\n\t}\n}\n\nexport class SplitEditorToNextGroupAction extends ExecuteCommandAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.splitEditorToNextGroup\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"splitEditorToNextGroup\",\n\t\t\t\t\t\"Split Editor into Next Group\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tCOPY_ACTIVE_EDITOR_COMMAND_ID,\n\t\t\t{ to: \"next\", by: \"group\" } satisfies ActiveEditorMoveCopyArguments,\n\t\t);\n\t}\n}\n\nexport class SplitEditorToAboveGroupAction extends ExecuteCommandAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.splitEditorToAboveGroup\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"splitEditorToAboveGroup\",\n\t\t\t\t\t\"Split Editor into Group Above\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tCOPY_ACTIVE_EDITOR_COMMAND_ID,\n\t\t\t{ to: \"up\", by: \"group\" } satisfies ActiveEditorMoveCopyArguments,\n\t\t);\n\t}\n}\n\nexport class SplitEditorToBelowGroupAction extends ExecuteCommandAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.splitEditorToBelowGroup\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"splitEditorToBelowGroup\",\n\t\t\t\t\t\"Split Editor into Group Below\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tCOPY_ACTIVE_EDITOR_COMMAND_ID,\n\t\t\t{ to: \"down\", by: \"group\" } satisfies ActiveEditorMoveCopyArguments,\n\t\t);\n\t}\n}\n\nexport class SplitEditorToLeftGroupAction extends ExecuteCommandAction {\n\tstatic readonly ID = \"workbench.action.splitEditorToLeftGroup\";\n\tstatic readonly LABEL = localize(\n\t\t\"splitEditorToLeftGroup\",\n\t\t\"Split Editor into Left Group\",\n\t);\n\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.splitEditorToLeftGroup\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"splitEditorToLeftGroup\",\n\t\t\t\t\t\"Split Editor into Left Group\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tCOPY_ACTIVE_EDITOR_COMMAND_ID,\n\t\t\t{ to: \"left\", by: \"group\" } satisfies ActiveEditorMoveCopyArguments,\n\t\t);\n\t}\n}\n\nexport class SplitEditorToRightGroupAction extends ExecuteCommandAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.splitEditorToRightGroup\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"splitEditorToRightGroup\",\n\t\t\t\t\t\"Split Editor into Right Group\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tCOPY_ACTIVE_EDITOR_COMMAND_ID,\n\t\t\t{\n\t\t\t\tto: \"right\",\n\t\t\t\tby: \"group\",\n\t\t\t} satisfies ActiveEditorMoveCopyArguments,\n\t\t);\n\t}\n}\n\nexport class SplitEditorToFirstGroupAction extends ExecuteCommandAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.splitEditorToFirstGroup\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"splitEditorToFirstGroup\",\n\t\t\t\t\t\"Split Editor into First Group\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tCOPY_ACTIVE_EDITOR_COMMAND_ID,\n\t\t\t{\n\t\t\t\tto: \"first\",\n\t\t\t\tby: \"group\",\n\t\t\t} satisfies ActiveEditorMoveCopyArguments,\n\t\t);\n\t}\n}\n\nexport class SplitEditorToLastGroupAction extends ExecuteCommandAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.splitEditorToLastGroup\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"splitEditorToLastGroup\",\n\t\t\t\t\t\"Split Editor into Last Group\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tCOPY_ACTIVE_EDITOR_COMMAND_ID,\n\t\t\t{ to: \"last\", by: \"group\" } satisfies ActiveEditorMoveCopyArguments,\n\t\t);\n\t}\n}\n\nexport class EditorLayoutSingleAction extends ExecuteCommandAction {\n\tstatic readonly ID = \"workbench.action.editorLayoutSingle\";\n\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: EditorLayoutSingleAction.ID,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"editorLayoutSingle\",\n\t\t\t\t\t\"Single Column Editor Layout\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tLAYOUT_EDITOR_GROUPS_COMMAND_ID,\n\t\t\t{\n\t\t\t\tgroups: [{}],\n\t\t\t\torientation: GroupOrientation.HORIZONTAL,\n\t\t\t} satisfies EditorGroupLayout,\n\t\t);\n\t}\n}\n\nexport class EditorLayoutTwoColumnsAction extends ExecuteCommandAction {\n\tstatic readonly ID = \"workbench.action.editorLayoutTwoColumns\";\n\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: EditorLayoutTwoColumnsAction.ID,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"editorLayoutTwoColumns\",\n\t\t\t\t\t\"Two Columns Editor Layout\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tLAYOUT_EDITOR_GROUPS_COMMAND_ID,\n\t\t\t{\n\t\t\t\tgroups: [{}, {}],\n\t\t\t\torientation: GroupOrientation.HORIZONTAL,\n\t\t\t} satisfies EditorGroupLayout,\n\t\t);\n\t}\n}\n\nexport class EditorLayoutThreeColumnsAction extends ExecuteCommandAction {\n\tstatic readonly ID = \"workbench.action.editorLayoutThreeColumns\";\n\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: EditorLayoutThreeColumnsAction.ID,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"editorLayoutThreeColumns\",\n\t\t\t\t\t\"Three Columns Editor Layout\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tLAYOUT_EDITOR_GROUPS_COMMAND_ID,\n\t\t\t{\n\t\t\t\tgroups: [{}, {}, {}],\n\t\t\t\torientation: GroupOrientation.HORIZONTAL,\n\t\t\t} satisfies EditorGroupLayout,\n\t\t);\n\t}\n}\n\nexport class EditorLayoutTwoRowsAction extends ExecuteCommandAction {\n\tstatic readonly ID = \"workbench.action.editorLayoutTwoRows\";\n\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: EditorLayoutTwoRowsAction.ID,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"editorLayoutTwoRows\",\n\t\t\t\t\t\"Two Rows Editor Layout\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tLAYOUT_EDITOR_GROUPS_COMMAND_ID,\n\t\t\t{\n\t\t\t\tgroups: [{}, {}],\n\t\t\t\torientation: GroupOrientation.VERTICAL,\n\t\t\t} satisfies EditorGroupLayout,\n\t\t);\n\t}\n}\n\nexport class EditorLayoutThreeRowsAction extends ExecuteCommandAction {\n\tstatic readonly ID = \"workbench.action.editorLayoutThreeRows\";\n\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: EditorLayoutThreeRowsAction.ID,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"editorLayoutThreeRows\",\n\t\t\t\t\t\"Three Rows Editor Layout\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tLAYOUT_EDITOR_GROUPS_COMMAND_ID,\n\t\t\t{\n\t\t\t\tgroups: [{}, {}, {}],\n\t\t\t\torientation: GroupOrientation.VERTICAL,\n\t\t\t} satisfies EditorGroupLayout,\n\t\t);\n\t}\n}\n\nexport class EditorLayoutTwoByTwoGridAction extends ExecuteCommandAction {\n\tstatic readonly ID = \"workbench.action.editorLayoutTwoByTwoGrid\";\n\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: EditorLayoutTwoByTwoGridAction.ID,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"editorLayoutTwoByTwoGrid\",\n\t\t\t\t\t\"Grid Editor Layout (2x2)\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tLAYOUT_EDITOR_GROUPS_COMMAND_ID,\n\t\t\t{\n\t\t\t\tgroups: [{ groups: [{}, {}] }, { groups: [{}, {}] }],\n\t\t\t\torientation: GroupOrientation.HORIZONTAL,\n\t\t\t} satisfies EditorGroupLayout,\n\t\t);\n\t}\n}\n\nexport class EditorLayoutTwoColumnsBottomAction extends ExecuteCommandAction {\n\tstatic readonly ID = \"workbench.action.editorLayoutTwoColumnsBottom\";\n\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: EditorLayoutTwoColumnsBottomAction.ID,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"editorLayoutTwoColumnsBottom\",\n\t\t\t\t\t\"Two Columns Bottom Editor Layout\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tLAYOUT_EDITOR_GROUPS_COMMAND_ID,\n\t\t\t{\n\t\t\t\tgroups: [{}, { groups: [{}, {}] }],\n\t\t\t\torientation: GroupOrientation.VERTICAL,\n\t\t\t} satisfies EditorGroupLayout,\n\t\t);\n\t}\n}\n\nexport class EditorLayoutTwoRowsRightAction extends ExecuteCommandAction {\n\tstatic readonly ID = \"workbench.action.editorLayoutTwoRowsRight\";\n\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: EditorLayoutTwoRowsRightAction.ID,\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"editorLayoutTwoRowsRight\",\n\t\t\t\t\t\"Two Rows Right Editor Layout\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tLAYOUT_EDITOR_GROUPS_COMMAND_ID,\n\t\t\t{\n\t\t\t\tgroups: [{}, { groups: [{}, {}] }],\n\t\t\t\torientation: GroupOrientation.HORIZONTAL,\n\t\t\t} satisfies EditorGroupLayout,\n\t\t);\n\t}\n}\n\nabstract class AbstractCreateEditorGroupAction extends Action2 {\n\tconstructor(\n\t\tdesc: Readonly<IAction2Options>,\n\t\tprivate readonly direction: GroupDirection,\n\t) {\n\t\tsuper(desc);\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\n\t\t// We are about to create a new empty editor group. We make an opiniated\n\t\t// decision here whether to focus that new editor group or not based\n\t\t// on what is currently focused. If focus is outside the editor area not\n\t\t// in the <body>, we do not focus, with the rationale that a user might\n\t\t// have focus on a tree/list with the intention to pick an element to\n\t\t// open in the new group from that tree/list.\n\t\t//\n\t\t// If focus is inside the editor area, we want to prevent the situation\n\t\t// of an editor having keyboard focus in an inactive editor group\n\t\t// (see https://github.com/microsoft/vscode/issues/189256)\n\n\t\tconst activeDocument = getActiveDocument();\n\t\tconst focusNewGroup =\n\t\t\tlayoutService.hasFocus(Parts.EDITOR_PART) ||\n\t\t\tactiveDocument.activeElement === activeDocument.body;\n\n\t\tconst group = editorGroupService.addGroup(\n\t\t\teditorGroupService.activeGroup,\n\t\t\tthis.direction,\n\t\t);\n\t\teditorGroupService.activateGroup(group);\n\n\t\tif (focusNewGroup) {\n\t\t\tgroup.focus();\n\t\t}\n\t}\n}\n\nexport class NewEditorGroupLeftAction extends AbstractCreateEditorGroupAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.newGroupLeft\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"newGroupLeft\",\n\t\t\t\t\t\"New Editor Group to the Left\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tGroupDirection.LEFT,\n\t\t);\n\t}\n}\n\nexport class NewEditorGroupRightAction extends AbstractCreateEditorGroupAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.newGroupRight\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"newGroupRight\",\n\t\t\t\t\t\"New Editor Group to the Right\",\n\t\t\t\t),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tGroupDirection.RIGHT,\n\t\t);\n\t}\n}\n\nexport class NewEditorGroupAboveAction extends AbstractCreateEditorGroupAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.newGroupAbove\",\n\t\t\t\ttitle: localize2(\"newGroupAbove\", \"New Editor Group Above\"),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tGroupDirection.UP,\n\t\t);\n\t}\n}\n\nexport class NewEditorGroupBelowAction extends AbstractCreateEditorGroupAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: \"workbench.action.newGroupBelow\",\n\t\t\t\ttitle: localize2(\"newGroupBelow\", \"New Editor Group Below\"),\n\t\t\t\tf1: true,\n\t\t\t\tcategory: Categories.View,\n\t\t\t},\n\t\t\tGroupDirection.DOWN,\n\t\t);\n\t}\n}\n\nexport class ToggleEditorTypeAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.toggleEditorType\",\n\t\t\ttitle: localize2(\"toggleEditorType\", \"Toggle Editor Type\"),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t\tprecondition: ActiveEditorAvailableEditorIdsContext,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorResolverService = accessor.get(IEditorResolverService);\n\n\t\tconst activeEditorPane = editorService.activeEditorPane;\n\t\tif (!activeEditorPane) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst activeEditorResource = EditorResourceAccessor.getCanonicalUri(\n\t\t\tactiveEditorPane.input,\n\t\t);\n\t\tif (!activeEditorResource) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editorIds = editorResolverService\n\t\t\t.getEditors(activeEditorResource)\n\t\t\t.map((editor) => editor.id)\n\t\t\t.filter((id) => id !== activeEditorPane.input.editorId);\n\t\tif (editorIds.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Replace the current editor with the next avaiable editor type\n\t\tawait editorService.replaceEditors(\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\teditor: activeEditorPane.input,\n\t\t\t\t\treplacement: {\n\t\t\t\t\t\tresource: activeEditorResource,\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\toverride: editorIds[0],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tactiveEditorPane.group,\n\t\t);\n\t}\n}\n\nexport class ReOpenInTextEditorAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.reopenTextEditor\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"reopenTextEditor\",\n\t\t\t\t\"Reopen Editor With Text Editor\",\n\t\t\t),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t\tprecondition: ActiveEditorAvailableEditorIdsContext,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tconst activeEditorPane = editorService.activeEditorPane;\n\t\tif (!activeEditorPane) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst activeEditorResource = EditorResourceAccessor.getCanonicalUri(\n\t\t\tactiveEditorPane.input,\n\t\t);\n\t\tif (!activeEditorResource) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Replace the current editor with the text editor\n\t\tawait editorService.replaceEditors(\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\teditor: activeEditorPane.input,\n\t\t\t\t\treplacement: {\n\t\t\t\t\t\tresource: activeEditorResource,\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\toverride: DEFAULT_EDITOR_ASSOCIATION.id,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tactiveEditorPane.group,\n\t\t);\n\t}\n}\n\nabstract class BaseMoveCopyEditorToNewWindowAction extends Action2 {\n\tconstructor(\n\t\tid: string,\n\t\ttitle: ICommandActionTitle,\n\t\tkeybinding: Omit<IKeybindingRule, \"id\"> | undefined,\n\t\tprivate readonly move: boolean,\n\t) {\n\t\tsuper({\n\t\t\tid,\n\t\t\ttitle,\n\t\t\tcategory: Categories.View,\n\t\t\tprecondition: ActiveEditorContext,\n\t\t\tkeybinding,\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor, ...args: unknown[]) {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\tconst resolvedContext = resolveCommandsContext(\n\t\t\targs,\n\t\t\taccessor.get(IEditorService),\n\t\t\teditorGroupService,\n\t\t\taccessor.get(IListService),\n\t\t);\n\t\tif (!resolvedContext.groupedEditors.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst auxiliaryEditorPart =\n\t\t\tawait editorGroupService.createAuxiliaryEditorPart();\n\n\t\t// only single group supported for move/copy for now\n\t\tconst { group, editors } = resolvedContext.groupedEditors[0];\n\t\tconst options = { preserveFocus: resolvedContext.preserveFocus };\n\t\tconst editorsWithOptions = editors.map((editor) => ({\n\t\t\teditor,\n\t\t\toptions,\n\t\t}));\n\n\t\tif (this.move) {\n\t\t\tgroup.moveEditors(\n\t\t\t\teditorsWithOptions,\n\t\t\t\tauxiliaryEditorPart.activeGroup,\n\t\t\t);\n\t\t} else {\n\t\t\tgroup.copyEditors(\n\t\t\t\teditorsWithOptions,\n\t\t\t\tauxiliaryEditorPart.activeGroup,\n\t\t\t);\n\t\t}\n\n\t\tauxiliaryEditorPart.activeGroup.focus();\n\t}\n}\n\nexport class MoveEditorToNewWindowAction extends BaseMoveCopyEditorToNewWindowAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\tMOVE_EDITOR_INTO_NEW_WINDOW_COMMAND_ID,\n\t\t\t{\n\t\t\t\t...localize2(\n\t\t\t\t\t\"moveEditorToNewWindow\",\n\t\t\t\t\t\"Move Editor into New Window\",\n\t\t\t\t),\n\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"miMoveEditorToNewWindow\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"&&Move Editor into New Window\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tundefined,\n\t\t\ttrue,\n\t\t);\n\t}\n}\n\nexport class CopyEditorToNewindowAction extends BaseMoveCopyEditorToNewWindowAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\tCOPY_EDITOR_INTO_NEW_WINDOW_COMMAND_ID,\n\t\t\t{\n\t\t\t\t...localize2(\n\t\t\t\t\t\"copyEditorToNewWindow\",\n\t\t\t\t\t\"Copy Editor into New Window\",\n\t\t\t\t),\n\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"miCopyEditorToNewWindow\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"&&Copy Editor into New Window\",\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyO),\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t},\n\t\t\tfalse,\n\t\t);\n\t}\n}\n\nabstract class BaseMoveCopyEditorGroupToNewWindowAction extends Action2 {\n\tconstructor(\n\t\tid: string,\n\t\ttitle: ICommandActionTitle,\n\t\tprivate readonly move: boolean,\n\t) {\n\t\tsuper({\n\t\t\tid,\n\t\t\ttitle,\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\tconst activeGroup = editorGroupService.activeGroup;\n\n\t\tconst auxiliaryEditorPart =\n\t\t\tawait editorGroupService.createAuxiliaryEditorPart();\n\n\t\teditorGroupService.mergeGroup(\n\t\t\tactiveGroup,\n\t\t\tauxiliaryEditorPart.activeGroup,\n\t\t\t{\n\t\t\t\tmode: this.move\n\t\t\t\t\t? MergeGroupMode.MOVE_EDITORS\n\t\t\t\t\t: MergeGroupMode.COPY_EDITORS,\n\t\t\t},\n\t\t);\n\n\t\tauxiliaryEditorPart.activeGroup.focus();\n\t}\n}\n\nexport class MoveEditorGroupToNewWindowAction extends BaseMoveCopyEditorGroupToNewWindowAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\tMOVE_EDITOR_GROUP_INTO_NEW_WINDOW_COMMAND_ID,\n\t\t\t{\n\t\t\t\t...localize2(\n\t\t\t\t\t\"moveEditorGroupToNewWindow\",\n\t\t\t\t\t\"Move Editor Group into New Window\",\n\t\t\t\t),\n\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"miMoveEditorGroupToNewWindow\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"&&Move Editor Group into New Window\",\n\t\t\t\t),\n\t\t\t},\n\t\t\ttrue,\n\t\t);\n\t}\n}\n\nexport class CopyEditorGroupToNewWindowAction extends BaseMoveCopyEditorGroupToNewWindowAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\tCOPY_EDITOR_GROUP_INTO_NEW_WINDOW_COMMAND_ID,\n\t\t\t{\n\t\t\t\t...localize2(\n\t\t\t\t\t\"copyEditorGroupToNewWindow\",\n\t\t\t\t\t\"Copy Editor Group into New Window\",\n\t\t\t\t),\n\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"miCopyEditorGroupToNewWindow\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"&&Copy Editor Group into New Window\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tfalse,\n\t\t);\n\t}\n}\n\nexport class RestoreEditorsToMainWindowAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.restoreEditorsToMainWindow\",\n\t\t\ttitle: {\n\t\t\t\t...localize2(\n\t\t\t\t\t\"restoreEditorsToMainWindow\",\n\t\t\t\t\t\"Restore Editors into Main Window\",\n\t\t\t\t),\n\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"miRestoreEditorsToMainWindow\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"&&Restore Editors into Main Window\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tf1: true,\n\t\t\tprecondition: IsAuxiliaryWindowFocusedContext,\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\teditorGroupService.mergeAllGroups(\n\t\t\teditorGroupService.mainPart.activeGroup,\n\t\t);\n\t}\n}\n\nexport class NewEmptyEditorWindowAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: NEW_EMPTY_EDITOR_WINDOW_COMMAND_ID,\n\t\t\ttitle: {\n\t\t\t\t...localize2(\"newEmptyEditorWindow\", \"New Empty Editor Window\"),\n\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"miNewEmptyEditorWindow\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"&&New Empty Editor Window\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tconst auxiliaryEditorPart =\n\t\t\tawait editorGroupService.createAuxiliaryEditorPart();\n\t\tauxiliaryEditorPart.activeGroup.focus();\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,yBAAyB;AAClC,SAAS,cAAc;AACvB,SAAS,eAAe;AACxB,SAAS,UAAU,SAAS,cAAc;AAC1C;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,iBAAiB;AAC1B,SAAS,UAAU,iBAAiB;AAEpC,SAAS,kBAAkB;AAC3B;AAAA,EACC;AAAA,EAEA;AAAA,OACM;AACP,SAAS,uBAAuB;AAChC,SAAS,6BAA6B;AACtC,SAAS,sBAAsB;AAC/B;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAEP,SAAS,0BAA0B;AACnC;AAAA,EAEC;AAAA,OACM;AACP,SAAS,oBAAoB;AAC7B,SAAS,mBAAmB;AAC5B;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,0BAA0B;AACnC;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAIA;AAAA,OACM;AAEP,SAAS,6BAA6B;AACtC;AAAA,EAEC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAEA;AAAA,EAEA;AAAA,EACA;AAAA,OACM;AACP,SAAS,8BAA8B;AACvC,SAAS,sBAAsB;AAC/B;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EAEC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,8BAA8B;AACvC;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAEP,MAAM,6BAA6B,QAAQ;AAAA,EAC1C,YACC,MACiB,WACA,aAChB;AACD,UAAM,IAAI;AAHO;AACA;AAAA,EAGlB;AAAA,EArID,OA8H2C;AAAA;AAAA;AAAA,EASjC,IAAI,UAA2C;AACvD,UAAM,iBAAiB,SAAS,IAAI,eAAe;AAEnD,WAAO,eAAe,eAAe,KAAK,WAAW,KAAK,WAAW;AAAA,EACtE;AACD;AAEA,MAAe,kCAAkC,QAAQ;AAAA,EA9IzD,OA8IyD;AAAA;AAAA;AAAA,EAC9C,aACT,sBACiB;AACjB,WAAO,kCAAkC,oBAAoB;AAAA,EAC9D;AAAA,EAEA,MAAe,IACd,aACG,MACa;AAChB,UAAM,sBAAsB,SAAS,IAAI,oBAAoB;AAC7D,UAAM,uBAAuB,SAAS,IAAI,qBAAqB;AAE/D,UAAM,YAAY,KAAK,aAAa,oBAAoB;AACxD,UAAM,iBAAiB;AAAA,MACtB;AAAA,MACA,SAAS,IAAI,cAAc;AAAA,MAC3B;AAAA,MACA,SAAS,IAAI,YAAY;AAAA,IAC1B;AAEA,gBAAY,qBAAqB,WAAW,cAAc;AAAA,EAC3D;AACD;AAEO,MAAM,0BAA0B,0BAA0B;AAAA,EAxKjE,OAwKiE;AAAA;AAAA;AAAA,EAChE,OAAgB,KAAK;AAAA,EAErB,cAAc;AACb,UAAM;AAAA,MACL,IAAI,kBAAkB;AAAA,MACtB,OAAO,UAAU,eAAe,cAAc;AAAA,MAC9C,IAAI;AAAA,MACJ,YAAY;AAAA,QACX,QAAQ,iBAAiB;AAAA,QACzB,SAAS,OAAO,UAAU,QAAQ;AAAA,MACnC;AAAA,MACA,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AACD;AAEO,MAAM,oCAAoC,0BAA0B;AAAA,EAzL3E,OAyL2E;AAAA;AAAA;AAAA,EAC1E,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,YAAY;AAAA,QACX,QAAQ,iBAAiB;AAAA,QACzB,SAAS;AAAA,UACR,OAAO,UAAU,QAAQ;AAAA,UACzB,OAAO,UAAU,QAAQ;AAAA,QAC1B;AAAA,MACD;AAAA,MACA,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEmB,aAClB,sBACiB;AACjB,UAAM,YACL,kCAAkC,oBAAoB;AAEvD,WAAO,cAAc,eAAe,QACjC,eAAe,OACf,eAAe;AAAA,EACnB;AACD;AAEO,MAAM,8BAA8B,qBAAqB;AAAA,EAzNhE,OAyNgE;AAAA;AAAA;AAAA,EAC/D,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO,UAAU,wBAAwB,mBAAmB;AAAA,QAC5D,IAAI;AAAA,QACJ,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,SAAS;AAAA,YACR,OAAO,UAAU,QAAQ;AAAA,YACzB,OAAO,UAAU,QAAQ;AAAA,UAC1B;AAAA,QACD;AAAA,QACA,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,+BAA+B,qBAAqB;AAAA,EA9OjE,OA8OiE;AAAA;AAAA;AAAA,EAChE,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO,UAAU,yBAAyB,oBAAoB;AAAA,QAC9D,IAAI;AAAA,QACJ,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,SAAS;AAAA,YACR,OAAO,UAAU,QAAQ;AAAA,YACzB,OAAO,UAAU,QAAQ;AAAA,UAC1B;AAAA,QACD;AAAA,QACA,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,4BAA4B,qBAAqB;AAAA,EAnQ9D,OAmQ8D;AAAA;AAAA;AAAA,EAC7D,OAAgB,QAAQ,SAAS,sBAAsB,iBAAiB;AAAA,EAExE,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO,UAAU,sBAAsB,iBAAiB;AAAA,QACxD,IAAI;AAAA,QACJ,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,SAAS;AAAA,YACR,OAAO,UAAU,QAAQ;AAAA,YACzB,OAAO,UAAU,QAAQ;AAAA,UAC1B;AAAA,QACD;AAAA,QACA,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,8BAA8B,qBAAqB;AAAA,EA1RhE,OA0RgE;AAAA;AAAA;AAAA,EAC/D,OAAgB,QAAQ;AAAA,IACvB;AAAA,IACA;AAAA,EACD;AAAA,EAEA,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO,UAAU,wBAAwB,mBAAmB;AAAA,QAC5D,IAAI;AAAA,QACJ,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,SAAS;AAAA,YACR,OAAO,UAAU,QAAQ;AAAA,YACzB,OAAO,UAAU,QAAQ;AAAA,UAC1B;AAAA,QACD;AAAA,QACA,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,4BAA4B,QAAQ;AAAA,EApTjD,OAoTiD;AAAA;AAAA;AAAA,EAChD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IACd,UACA,SACgB;AAChB,UAAM,qBAAqB,SAAS,IAAI,oBAAoB;AAE5D,QAAI;AACJ,QAAI,WAAW,OAAO,QAAQ,YAAY,UAAU;AACnD,oBAAc,mBAAmB,SAAS,QAAQ,OAAO;AAAA,IAC1D,OAAO;AACN,oBAAc,mBAAmB;AAAA,IAClC;AAEA,QAAI,aAAa;AAChB,YAAM,wBAAwB;AAAA,QAC7B,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,MAChB;AACA,iBAAW,wBAAwB,uBAAuB;AACzD,cAAM,cAAc,mBAAmB;AAAA,UACtC,EAAE,WAAW,qBAAqB;AAAA,UAClC;AAAA,QACD;AACA,YAAI,eAAe,gBAAgB,aAAa;AAC/C,6BAAmB,WAAW,aAAa,WAAW;AAEtD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,4BAA4B,QAAQ;AAAA,EApWjD,OAoWiD;AAAA;AAAA;AAAA,EAChD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,UAAU,iBAAiB,wBAAwB;AAAA,MAC1D,IAAI;AAAA,MACJ,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,qBAAqB,SAAS,IAAI,oBAAoB;AAE5D,uBAAmB,eAAe,mBAAmB,WAAW;AAAA,EACjE;AACD;AAEO,MAAM,oCAAoC,QAAQ;AAAA,EArXzD,OAqXyD;AAAA;AAAA;AAAA,EACxD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,qBAAqB,SAAS,IAAI,oBAAoB;AAE5D,UAAM,YAAY,mBAAmB;AAAA,MACpC,EAAE,UAAU,cAAc,KAAK;AAAA,MAC/B,mBAAmB;AAAA,MACnB;AAAA,IACD;AACA,eAAW,MAAM;AAAA,EAClB;AACD;AAEO,MAAM,+BAA+B,QAAQ;AAAA,EA9YpD,OA8YoD;AAAA;AAAA;AAAA,EACnD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,qBAAqB,SAAS,IAAI,oBAAoB;AAE5D,uBAAmB,YAAY,MAAM;AAAA,EACtC;AACD;AAEA,MAAe,iCAAiC,QAAQ;AAAA,EACvD,YACC,MACiB,OAChB;AACD,UAAM,IAAI;AAFO;AAAA,EAGlB;AAAA,EAxaD,OAkawD;AAAA;AAAA;AAAA,EAQvD,MAAe,IAAI,UAA2C;AAC7D,UAAM,qBAAqB,SAAS,IAAI,oBAAoB;AAE5D,UAAM,QAAQ,mBAAmB;AAAA,MAChC,KAAK;AAAA,MACL,mBAAmB;AAAA,MACnB;AAAA,IACD;AACA,WAAO,MAAM;AAAA,EACd;AACD;AAEO,MAAM,8BAA8B,yBAAyB;AAAA,EAtbpE,OAsboE;AAAA;AAAA;AAAA,EACnE,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,SAAS,OAAO,UAAU,QAAQ;AAAA,QACnC;AAAA,QACA,UAAU,WAAW;AAAA,MACtB;AAAA,MACA,EAAE,UAAU,cAAc,MAAM;AAAA,IACjC;AAAA,EACD;AACD;AAEO,MAAM,6BAA6B,yBAAyB;AAAA,EA3cnE,OA2cmE;AAAA;AAAA;AAAA,EAClE,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA,EAAE,UAAU,cAAc,KAAK;AAAA,IAChC;AAAA,EACD;AACD;AAEO,MAAM,uBAAuB,yBAAyB;AAAA,EA5d7D,OA4d6D;AAAA;AAAA;AAAA,EAC5D,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO,UAAU,kBAAkB,yBAAyB;AAAA,QAC5D,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA,EAAE,UAAU,cAAc,KAAK;AAAA,IAChC;AAAA,EACD;AACD;AAEO,MAAM,2BAA2B,yBAAyB;AAAA,EA1ejE,OA0eiE;AAAA;AAAA;AAAA,EAChE,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA,EAAE,UAAU,cAAc,SAAS;AAAA,IACpC;AAAA,EACD;AACD;AAEO,MAAM,uBAAuB,yBAAyB;AAAA,EA3f7D,OA2f6D;AAAA;AAAA;AAAA,EAC5D,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO,UAAU,kBAAkB,yBAAyB;AAAA,QAC5D,IAAI;AAAA,QACJ,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,SAAS;AAAA,YACR,OAAO,UAAU,QAAQ;AAAA,YACzB,OAAO,UAAU,QAAQ;AAAA,UAC1B;AAAA,QACD;AAAA,QACA,UAAU,WAAW;AAAA,MACtB;AAAA,MACA,EAAE,WAAW,eAAe,KAAK;AAAA,IAClC;AAAA,EACD;AACD;AAEO,MAAM,wBAAwB,yBAAyB;AAAA,EAhhB9D,OAghB8D;AAAA;AAAA;AAAA,EAC7D,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO,UAAU,mBAAmB,0BAA0B;AAAA,QAC9D,IAAI;AAAA,QACJ,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,SAAS;AAAA,YACR,OAAO,UAAU,QAAQ;AAAA,YACzB,OAAO,UAAU,QAAQ;AAAA,UAC1B;AAAA,QACD;AAAA,QACA,UAAU,WAAW;AAAA,MACtB;AAAA,MACA,EAAE,WAAW,eAAe,MAAM;AAAA,IACnC;AAAA,EACD;AACD;AAEO,MAAM,wBAAwB,yBAAyB;AAAA,EAriB9D,OAqiB8D;AAAA;AAAA;AAAA,EAC7D,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO,UAAU,mBAAmB,0BAA0B;AAAA,QAC9D,IAAI;AAAA,QACJ,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,SAAS;AAAA,YACR,OAAO,UAAU,QAAQ;AAAA,YACzB,OAAO,UAAU,QAAQ;AAAA,UAC1B;AAAA,QACD;AAAA,QACA,UAAU,WAAW;AAAA,MACtB;AAAA,MACA,EAAE,WAAW,eAAe,GAAG;AAAA,IAChC;AAAA,EACD;AACD;AAEO,MAAM,wBAAwB,yBAAyB;AAAA,EA1jB9D,OA0jB8D;AAAA;AAAA;AAAA,EAC7D,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO,UAAU,mBAAmB,0BAA0B;AAAA,QAC9D,IAAI;AAAA,QACJ,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,SAAS;AAAA,YACR,OAAO,UAAU,QAAQ;AAAA,YACzB,OAAO,UAAU,QAAQ;AAAA,UAC1B;AAAA,QACD;AAAA,QACA,UAAU,WAAW;AAAA,MACtB;AAAA,MACA,EAAE,WAAW,eAAe,KAAK;AAAA,IAClC;AAAA,EACD;AACD;AAEO,IAAM,oBAAN,cAAgC,OAAO;AAAA,EAI7C,YACC,IACA,OACkC,gBACjC;AACD,UAAM,IAAI,OAAO,UAAU,YAAY,QAAQ,KAAK,CAAC;AAFnB;AAAA,EAGnC;AAAA,EAzlBD,OA+kB8C;AAAA;AAAA;AAAA,EAC7C,OAAgB,KAAK;AAAA,EACrB,OAAgB,QAAQ,SAAS,eAAe,cAAc;AAAA,EAUrD,IAAI,SAAiD;AAC7D,WAAO,KAAK,eAAe;AAAA,MAC1B;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AAnBa,oBAAN;AAAA,EAOJ;AAAA,GAPU;AAqBN,IAAM,oBAAN,cAAgC,OAAO;AAAA,EAI7C,YACC,IACA,OACkC,gBACjC;AACD,UAAM,IAAI,OAAO,UAAU,YAAY,QAAQ,MAAM,CAAC;AAFpB;AAAA,EAGnC;AAAA,EA9mBD,OAomB8C;AAAA;AAAA;AAAA,EAC7C,OAAgB,KAAK;AAAA,EACrB,OAAgB,QAAQ,SAAS,eAAe,cAAc;AAAA,EAUrD,IAAI,SAAiD;AAC7D,WAAO,KAAK,eAAe;AAAA,MAC1B;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AAnBa,oBAAN;AAAA,EAOJ;AAAA,GAPU;AAqBN,IAAM,uBAAN,cAAmC,OAAO;AAAA,EAIhD,YACC,IACA,OACuC,oBACtC;AACD,UAAM,IAAI,OAAO,UAAU,YAAY,QAAQ,KAAK,CAAC;AAFd;AAAA,EAGxC;AAAA,EAnoBD,OAynBiD;AAAA;AAAA;AAAA,EAChD,OAAgB,KAAK;AAAA,EACrB,OAAgB,QAAQ,SAAS,kBAAkB,OAAO;AAAA,EAU1D,MAAe,IAAI,SAAiD;AACnE,UAAM,QAAQ,UACX,KAAK,mBAAmB,SAAS,QAAQ,OAAO,IAChD,KAAK,mBAAmB;AAC3B,QAAI,CAAC,OAAO;AAEX;AAAA,IACD;AAEA,UAAM,eACL,SAAS,gBAAgB,SACtB,MAAM,iBAAiB,QAAQ,WAAW,IAC1C,MAAM;AACV,QAAI,CAAC,cAAc;AAElB;AAAA,IACD;AAEA,UAAM,UAAyB,CAAC;AAChC,QAAI,MAAM,WAAW,YAAY,GAAG;AACnC,cAAQ,KAAK,GAAG,MAAM,eAAe;AAAA,IACtC,OAAO;AACN,cAAQ,KAAK,YAAY;AAAA,IAC1B;AAGA,eAAW,UAAU,SAAS;AAC7B,YAAM,MAAM,YAAY,QAAQ;AAAA,QAC/B,eAAe,SAAS;AAAA,MACzB,CAAC;AAAA,IACF;AAAA,EACD;AACD;AA5Ca,uBAAN;AAAA,EAOJ;AAAA,GAPU;AA8CN,MAAM,mCAAmC,QAAQ;AAAA,EAvqBxD,OAuqBwD;AAAA;AAAA;AAAA,EACvD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,gBAAgB,SAAS,IAAI,cAAc;AACjD,UAAM,aAAa,SAAS,IAAI,WAAW;AAE3C,UAAM,mBAAmB,cAAc;AACvC,QAAI,kBAAkB;AACrB,YAAM,SAAS,iBAAiB;AAChC,YAAM,QAAQ,iBAAiB;AAG/B,UAAI;AACH,cAAM,cAAc,OAAO,EAAE,QAAQ,SAAS,MAAM,GAAG,CAAC;AAAA,MACzD,SAAS,OAAO;AACf,mBAAW,MAAM,KAAK;AAOtB,cAAM,cAAc;AAAA,UACnB,EAAE,QAAQ,SAAS,MAAM,GAAG;AAAA,UAC5B,EAAE,MAAM,KAAK;AAAA,QACd;AAAA,MACD;AAEA,YAAM,MAAM,YAAY,MAAM;AAAA,IAC/B;AAAA,EACD;AACD;AAEO,MAAM,sCAAsC,QAAQ;AAAA,EAntB3D,OAmtB2D;AAAA;AAAA;AAAA,EAC1D,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IACd,UACA,SACgB;AAChB,UAAM,qBAAqB,SAAS,IAAI,oBAAoB;AAE5D,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,UAAU,oBAAoB,OAAO;AACpE,QAAI,SAAS,QAAQ;AACpB,YAAM,MAAM,aAAa;AAAA,QACxB,WAAW,eAAe;AAAA,QAC1B,QAAQ;AAAA,QACR,eAAe;AAAA,MAChB,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAEQ,UACP,oBACA,SACkE;AAClE,QAAI,SAAS;AACZ,aAAO;AAAA,QACN,QAAQ,QAAQ;AAAA,QAChB,OAAO,mBAAmB,SAAS,QAAQ,OAAO;AAAA,MACnD;AAAA,IACD;AAGA,WAAO;AAAA,MACN,OAAO,mBAAmB;AAAA,MAC1B,QAAQ,mBAAmB,YAAY;AAAA,IACxC;AAAA,EACD;AACD;AAEA,MAAe,+BAA+B,QAAQ;AAAA,EAnwBtD,OAmwBsD;AAAA;AAAA;AAAA,EAC3C,cACT,oBACiB;AACjB,UAAM,gBAAgC,CAAC;AAKvC,UAAM,SAAS,mBAAmB;AAAA,MACjC,YAAY;AAAA,IACb;AACA,aAAS,IAAI,OAAO,SAAS,GAAG,KAAK,GAAG,KAAK;AAC5C,oBAAc,KAAK,OAAO,CAAC,CAAC;AAAA,IAC7B;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,gBAAgB,SAAS,IAAI,cAAc;AACjD,UAAM,aAAa,SAAS,IAAI,WAAW;AAC3C,UAAM,kBAAkB,SAAS,IAAI,gBAAgB;AACrD,UAAM,qBAAqB,SAAS,IAAI,oBAAoB;AAC5D,UAAM,4BAA4B,SAAS;AAAA,MAC1C;AAAA,IACD;AACA,UAAM,oBAAoB,SAAS,IAAI,kBAAkB;AAKzD,UAAM,iCAAiC,oBAAI,IAAuB;AAClE,UAAM,oCAAoC,oBAAI,IAAuB;AACrE,UAAM,qCAAqC,oBAAI,IAAuB;AACtE,UAAM,2BAA2B,oBAAI,IAGnC;AAEF,eAAW,EAAE,QAAQ,QAAQ,KAAK,cAAc;AAAA,MAC/C,aAAa;AAAA,MACb,EAAE,eAAe,KAAK,cAAc;AAAA,IACrC,GAAG;AACF,UAAI,eAAe;AACnB,UAAI,OAAO,cAAc;AACxB,uBAAe,OAAO,aAAa,YAAY;AAAA,MAChD,OAAO;AACN,uBAAe,OAAO,QAAQ,KAAK,CAAC,OAAO,SAAS;AAAA,MACrD;AAEA,UAAI,CAAC,cAAc;AAClB;AAAA,MACD;AAGA,UAAI,OAAO,OAAO,cAAc,YAAY,YAAY;AACvD,YAAI,yBAAyB,yBAAyB;AAAA,UACrD,OAAO;AAAA,QACR;AACA,YAAI,CAAC,wBAAwB;AAC5B,mCAAyB,oBAAI,IAAI;AACjC,mCAAyB;AAAA,YACxB,OAAO;AAAA,YACP;AAAA,UACD;AAAA,QACD;AAEA,+BAAuB,IAAI,EAAE,QAAQ,QAAQ,CAAC;AAAA,MAC/C,WAKC,CAAC,OAAO,cAAc,wBAAwB,QAAQ,KACtD,0BAA0B,gBAAgB,MAAM,EAAE,SACjD,aAAa,iBACb;AACD,0CAAkC,IAAI,EAAE,QAAQ,QAAQ,CAAC;AAAA,MAC1D,WAMC,aACC,aAAa,YACd,CAAC,OAAO,cAAc,wBAAwB,QAAQ,KACtD,0BAA0B,gBAAgB,MAAM,EAAE,SACjD,aAAa,kBACb;AACD,2CAAmC,IAAI,EAAE,QAAQ,QAAQ,CAAC;AAAA,MAC3D,OAGK;AACJ,uCAA+B,IAAI,EAAE,QAAQ,QAAQ,CAAC;AAAA,MACvD;AAAA,IACD;AAGA,QAAI,+BAA+B,OAAO,GAAG;AAC5C,YAAM,UAAU,MAAM,KAAK,+BAA+B,OAAO,CAAC;AAElE,YAAM,KAAK,uBAAuB,SAAS,kBAAkB;AAE7D,YAAM,eAAe,MAAM,kBAAkB;AAAA,QAC5C,QAAQ,IAAI,CAAC,EAAE,OAAO,MAAM;AAC3B,cAAI,kBAAkB,uBAAuB;AAC5C,mBAAO,OAAO,QAAQ,QAAQ;AAAA,UAC/B;AAEA,iBAAO,OAAO,QAAQ;AAAA,QACvB,CAAC;AAAA,MACF;AAEA,cAAQ,cAAc;AAAA,QACrB,KAAK,cAAc;AAClB;AAAA,QACD,KAAK,cAAc;AAClB,gBAAM,KAAK;AAAA,YACV;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACD;AACA;AAAA,QACD,KAAK,cAAc;AAClB,gBAAM,cAAc,KAAK,SAAS;AAAA,YACjC,QAAQ,WAAW;AAAA,UACpB,CAAC;AACD;AAAA,MACF;AAAA,IACD;AAGA,eAAW,CAAC,EAAE,iBAAiB,KAAK,0BAA0B;AAC7D,YAAM,UAAU,MAAM,KAAK,kBAAkB,OAAO,CAAC;AAErD,YAAM,KAAK,uBAAuB,SAAS,kBAAkB;AAE7D,YAAM,eAAe,MAAM,QACzB,GAAG,CAAC,GACH,OAAO,cAAc,UAAU,OAAO;AACzC,UAAI,OAAO,iBAAiB,UAAU;AACrC,gBAAQ,cAAc;AAAA,UACrB,KAAK,cAAc;AAClB;AAAA,UACD,KAAK,cAAc;AAClB,kBAAM,KAAK;AAAA,cACV;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACD;AACA;AAAA,UACD,KAAK,cAAc;AAClB,kBAAM,cAAc,KAAK,SAAS;AAAA,cACjC,QAAQ,WAAW;AAAA,YACpB,CAAC;AACD;AAAA,QACF;AAAA,MACD;AAAA,IACD;AAGA,QAAI,kCAAkC,OAAO,GAAG;AAC/C,YAAM,UAAU,MAAM;AAAA,QACrB,kCAAkC,OAAO;AAAA,MAC1C;AAEA,YAAM,cAAc,KAAK,SAAS;AAAA,QACjC,QAAQ,WAAW;AAAA,MACpB,CAAC;AAAA,IACF;AAGA,QAAI,mCAAmC,OAAO,GAAG;AAChD,YAAM,UAAU,MAAM;AAAA,QACrB,mCAAmC,OAAO;AAAA,MAC3C;AAEA,YAAM,cAAc,KAAK,SAAS;AAAA,QACjC,QAAQ,WAAW;AAAA,MACpB,CAAC;AAAA,IACF;AAMA,WAAO,KAAK,WAAW,kBAAkB;AAAA,EAC1C;AAAA,EAEQ,cACP,eACA,YACA,iBACA,SACgB;AAChB,WAAO,gBAAgB;AAAA,MACtB;AAAA,QACC,UAAU,iBAAiB;AAAA;AAAA,QAC3B,OAAO;AAAA;AAAA,QACP,OAAO,SAAS,aAAa,sBAAsB;AAAA,MACpD;AAAA,MACA,MAAM,KAAK,gBAAgB,eAAe,YAAY,OAAO;AAAA,IAC9D;AAAA,EACD;AAAA,EAEA,MAAc,gBACb,eACA,YACA,SACgB;AAChB,QAAI;AAMH,YAAM,cAAc,OAAO,OAAO;AAAA,IACnC,SAAS,OAAO;AACf,iBAAW,MAAM,KAAK;AAMtB,YAAM,cAAc,OAAO,SAAS,EAAE,MAAM,KAAK,CAAC;AAAA,IACnD;AAAA,EACD;AAAA,EAEA,MAAc,uBACb,SACA,oBACgB;AAChB,QAAI;AACH,YAAM,gBAAgB,oBAAI,IAAqB;AAC/C,iBAAW,EAAE,QAAQ,QAAQ,KAAK,SAAS;AAC1C,YAAI,cAAc,IAAI,OAAO,GAAG;AAC/B;AAAA,QACD;AAEA,sBAAc,IAAI,OAAO;AAEzB,cAAM,QAAQ,mBAAmB,SAAS,OAAO;AACjD,cAAM,OAAO,WAAW,MAAM;AAAA,MAC/B;AAAA,IACD,SAAS,OAAO;AAAA,IAEhB;AAAA,EACD;AAAA,EAIA,MAAgB,WACf,oBACgB;AAChB,UAAM,QAAQ;AAAA,MACb,KAAK,cAAc,kBAAkB,EAAE;AAAA,QAAI,CAAC,UAC3C,MAAM,gBAAgB,EAAE,eAAe,KAAK,cAAc,CAAC;AAAA,MAC5D;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,8BAA8B,uBAAuB;AAAA,EA9gClE,OA8gCkE;AAAA;AAAA;AAAA,EACjE,OAAgB,KAAK;AAAA,EACrB,OAAgB,QAAQ,UAAU,mBAAmB,mBAAmB;AAAA,EAExE,cAAc;AACb,UAAM;AAAA,MACL,IAAI,sBAAsB;AAAA,MAC1B,OAAO,sBAAsB;AAAA,MAC7B,IAAI;AAAA,MACJ,YAAY;AAAA,QACX,QAAQ,iBAAiB;AAAA,QACzB,SAAS;AAAA,UACR,OAAO,UAAU,QAAQ;AAAA,UACzB,OAAO,UAAU,QAAQ;AAAA,QAC1B;AAAA,MACD;AAAA,MACA,MAAM,QAAQ;AAAA,MACd,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEA,IAAc,gBAAyB;AACtC,WAAO;AAAA,EACR;AACD;AAEO,MAAM,mCAAmC,uBAAuB;AAAA,EAxiCvE,OAwiCuE;AAAA;AAAA;AAAA,EACtE,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,UAAU,kBAAkB,yBAAyB;AAAA,MAC5D,IAAI;AAAA,MACJ,YAAY;AAAA,QACX,QAAQ,iBAAiB;AAAA,QACzB,SAAS;AAAA,UACR,OAAO,UAAU,QAAQ;AAAA,UACzB,OAAO,UAAU,OAAO,QAAQ,QAAQ;AAAA,QACzC;AAAA,MACD;AAAA,MACA,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEA,IAAc,gBAAyB;AACtC,WAAO;AAAA,EACR;AAAA,EAEA,MAAyB,WACxB,oBACgB;AAChB,UAAM,MAAM,WAAW,kBAAkB;AAEzC,eAAW,gBAAgB,KAAK,cAAc,kBAAkB,GAAG;AAClE,yBAAmB,YAAY,YAAY;AAAA,IAC5C;AAAA,EACD;AACD;AAEO,MAAM,wCAAwC,QAAQ;AAAA,EAxkC7D,OAwkC6D;AAAA;AAAA;AAAA,EAC5D,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IACd,UACA,SACgB;AAChB,UAAM,qBAAqB,SAAS,IAAI,oBAAoB;AAE5D,UAAM,cAAc,UACjB,mBAAmB,SAAS,QAAQ,OAAO,IAC3C,mBAAmB;AACtB,UAAM,QAAQ;AAAA,MACb,mBACE,UAAU,YAAY,oBAAoB,EAC1C,IAAI,OAAO,UAAU;AACrB,YAAI,eAAe,MAAM,OAAO,YAAY,IAAI;AAC/C;AAAA,QACD;AAEA,eAAO,MAAM,gBAAgB,EAAE,eAAe,KAAK,CAAC;AAAA,MACrD,CAAC;AAAA,IACH;AAAA,EACD;AACD;AAEO,MAAM,qCAAqC,QAAQ;AAAA,EA5mC1D,OA4mC0D;AAAA;AAAA;AAAA,EACzD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,gBAAgB,SAAS,IAAI,cAAc;AACjD,UAAM,qBAAqB,SAAS,IAAI,oBAAoB;AAE5D,UAAM,eAAe,cAAc;AACnC,QAAI,cAAc;AACjB,YAAM,QAAQ;AAAA,QACb,mBACE,UAAU,YAAY,oBAAoB,EAC1C,IAAI,CAAC,UAAU,MAAM,YAAY,YAAY,CAAC;AAAA,MACjD;AAAA,IACD;AAAA,EACD;AACD;AAEA,MAAe,oCAAoC,QAAQ;AAAA,EAC1D,YACC,MACiB,WACA,QAChB;AACD,UAAM,IAAI;AAHO;AACA;AAAA,EAGlB;AAAA,EA/oCD,OAwoC2D;AAAA;AAAA;AAAA,EAS1D,MAAe,IACd,UACA,SACgB;AAChB,UAAM,qBAAqB,SAAS,IAAI,oBAAoB;AAE5D,QAAI;AACJ,QAAI,WAAW,OAAO,QAAQ,YAAY,UAAU;AACnD,oBAAc,mBAAmB,SAAS,QAAQ,OAAO;AAAA,IAC1D,OAAO;AACN,oBAAc,mBAAmB;AAAA,IAClC;AAEA,QAAI,aAAa;AAChB,UAAI;AACJ,UAAI,KAAK,QAAQ;AAChB,cAAM,cAAc,KAAK;AAAA,UACxB;AAAA,UACA;AAAA,QACD;AACA,YAAI,aAAa;AAChB,wBAAc,mBAAmB;AAAA,YAChC;AAAA,YACA;AAAA,YACA,KAAK;AAAA,UACN;AAAA,QACD;AAAA,MACD,OAAO;AACN,sBAAc,mBAAmB;AAAA,UAChC;AAAA,UACA;AAAA,UACA,KAAK;AAAA,QACN;AAAA,MACD;AAEA,UAAI,aAAa;AAChB,2BAAmB,cAAc,WAAW;AAAA,MAC7C;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,gBACP,oBACA,aAC2B;AAC3B,UAAM,mBAAqC,CAAC,KAAK,SAAS;AAK1D,YAAQ,KAAK,WAAW;AAAA,MACvB,KAAK,eAAe;AAAA,MACpB,KAAK,eAAe;AACnB,yBAAiB,KAAK,eAAe,IAAI,eAAe,IAAI;AAC5D;AAAA,MACD,KAAK,eAAe;AAAA,MACpB,KAAK,eAAe;AACnB,yBAAiB;AAAA,UAChB,eAAe;AAAA,UACf,eAAe;AAAA,QAChB;AACA;AAAA,IACF;AAEA,eAAW,mBAAmB,kBAAkB;AAC/C,YAAM,uBAAuB,mBAAmB;AAAA,QAC/C,EAAE,WAAW,gBAAgB;AAAA,QAC7B;AAAA,MACD;AACA,UAAI,sBAAsB;AACzB,eAAO;AAAA,MACR;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AACD;AAEA,MAAe,gCAAgC,4BAA4B;AAAA,EA/tC3E,OA+tC2E;AAAA;AAAA;AAAA,EAC1E,YAAY,MAAiC,WAA2B;AACvE,UAAM,MAAM,WAAW,IAAI;AAAA,EAC5B;AACD;AAEO,MAAM,4BAA4B,wBAAwB;AAAA,EAruCjE,OAquCiE;AAAA;AAAA;AAAA,EAChE,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,SAAS;AAAA,YACR,OAAO,UAAU,QAAQ;AAAA,YACzB,QAAQ;AAAA,UACT;AAAA,QACD;AAAA,QACA,UAAU,WAAW;AAAA,MACtB;AAAA,MACA,eAAe;AAAA,IAChB;AAAA,EACD;AACD;AAEO,MAAM,6BAA6B,wBAAwB;AAAA,EA7vClE,OA6vCkE;AAAA;AAAA;AAAA,EACjE,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,SAAS;AAAA,YACR,OAAO,UAAU,QAAQ;AAAA,YACzB,QAAQ;AAAA,UACT;AAAA,QACD;AAAA,QACA,UAAU,WAAW;AAAA,MACtB;AAAA,MACA,eAAe;AAAA,IAChB;AAAA,EACD;AACD;AAEO,MAAM,0BAA0B,wBAAwB;AAAA,EArxC/D,OAqxC+D;AAAA;AAAA;AAAA,EAC9D,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO,UAAU,qBAAqB,sBAAsB;AAAA,QAC5D,IAAI;AAAA,QACJ,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,SAAS;AAAA,YACR,OAAO,UAAU,QAAQ;AAAA,YACzB,QAAQ;AAAA,UACT;AAAA,QACD;AAAA,QACA,UAAU,WAAW;AAAA,MACtB;AAAA,MACA,eAAe;AAAA,IAChB;AAAA,EACD;AACD;AAEO,MAAM,4BAA4B,wBAAwB;AAAA,EA1yCjE,OA0yCiE;AAAA;AAAA;AAAA,EAChE,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,SAAS;AAAA,YACR,OAAO,UAAU,QAAQ;AAAA,YACzB,QAAQ;AAAA,UACT;AAAA,QACD;AAAA,QACA,UAAU,WAAW;AAAA,MACtB;AAAA,MACA,eAAe;AAAA,IAChB;AAAA,EACD;AACD;AAEA,MAAe,qCAAqC,4BAA4B;AAAA,EAl0ChF,OAk0CgF;AAAA;AAAA;AAAA,EAC/E,YAAY,MAAiC,WAA2B;AACvE,UAAM,MAAM,WAAW,KAAK;AAAA,EAC7B;AACD;AAEO,MAAM,iCAAiC,6BAA6B;AAAA,EAx0C3E,OAw0C2E;AAAA;AAAA;AAAA,EAC1E,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA,eAAe;AAAA,IAChB;AAAA,EACD;AACD;AAEO,MAAM,kCAAkC,6BAA6B;AAAA,EAz1C5E,OAy1C4E;AAAA;AAAA;AAAA,EAC3E,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA,eAAe;AAAA,IAChB;AAAA,EACD;AACD;AAEO,MAAM,+BAA+B,6BAA6B;AAAA,EA12CzE,OA02CyE;AAAA;AAAA;AAAA,EACxE,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA,eAAe;AAAA,IAChB;AAAA,EACD;AACD;AAEO,MAAM,iCAAiC,6BAA6B;AAAA,EA33C3E,OA23C2E;AAAA;AAAA;AAAA,EAC1E,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA,eAAe;AAAA,IAChB;AAAA,EACD;AACD;AAEO,MAAM,kCAAkC,QAAQ;AAAA,EA54CvD,OA44CuD;AAAA;AAAA;AAAA,EACtD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,UAAU,WAAW;AAAA,MACrB,cAAc;AAAA,IACf,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,qBAAqB,SAAS,IAAI,oBAAoB;AAE5D,uBAAmB,cAAc,kBAAkB,MAAM;AAAA,EAC1D;AACD;AAEO,MAAM,6CAA6C,QAAQ;AAAA,EAj6ClE,OAi6CkE;AAAA;AAAA;AAAA,EACjE,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,UAAU,WAAW;AAAA,MACrB,cAAc,eAAe;AAAA,QAC5B;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,qBAAqB,SAAS,IAAI,oBAAoB;AAC5D,UAAM,gBAAgB,SAAS,IAAI,uBAAuB;AAE1D,kBAAc,cAAc,MAAM,MAAM,YAAY;AACpD,kBAAc,cAAc,MAAM,MAAM,iBAAiB;AACzD,uBAAmB,cAAc,kBAAkB,MAAM;AAAA,EAC1D;AACD;AAEO,MAAM,8BAA8B,QAAQ;AAAA,EA77CnD,OA67CmD;AAAA;AAAA;AAAA,EAClD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,UAAU,oBAAoB,0BAA0B;AAAA,MAC/D,IAAI;AAAA,MACJ,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,qBAAqB,SAAS,IAAI,oBAAoB;AAE5D,uBAAmB,cAAc,kBAAkB,IAAI;AAAA,EACxD;AACD;AAEO,MAAM,+BAA+B,QAAQ;AAAA,EA98CpD,OA88CoD;AAAA;AAAA;AAAA,EACnD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,UAAU,sBAAsB,2BAA2B;AAAA,MAClE,IAAI;AAAA,MACJ,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,qBAAqB,SAAS,IAAI,oBAAoB;AAE5D,uBAAmB,kBAAkB;AAAA,EACtC;AACD;AAEO,MAAM,uCAAuC,QAAQ;AAAA,EA/9C5D,OA+9C4D;AAAA;AAAA;AAAA,EAC3D,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,UAAU,WAAW;AAAA,MACrB,cAAc,eAAe;AAAA,QAC5B,eAAe;AAAA,UACd,sCAAsC,OAAO;AAAA,UAC7C;AAAA,QACD;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,gBAAgB,SAAS,IAAI,uBAAuB;AAC1D,UAAM,qBAAqB,SAAS,IAAI,oBAAoB;AAC5D,UAAM,gBAAgB,SAAS,IAAI,cAAc;AAEjD,QAAI,cAAc,cAAc;AAC/B,oBAAc,cAAc,MAAM,MAAM,YAAY;AACpD,oBAAc,cAAc,MAAM,MAAM,iBAAiB;AACzD,yBAAmB,cAAc,kBAAkB,QAAQ;AAAA,IAC5D;AAAA,EACD;AACD;AAEO,MAAM,wCAAwC,QAAQ;AAAA,EAjgD7D,OAigD6D;AAAA;AAAA;AAAA,EAC5D,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,UAAU,WAAW;AAAA,MACrB,cAAc,eAAe;AAAA,QAC5B;AAAA,QACA;AAAA,MACD;AAAA,MACA,YAAY;AAAA,QACX,QAAQ,iBAAiB;AAAA,QACzB,SAAS;AAAA,UACR,OAAO,UAAU,QAAQ;AAAA,UACzB,OAAO,UAAU,QAAQ;AAAA,QAC1B;AAAA,MACD;AAAA,MACA,MAAM;AAAA,QACL;AAAA,UACC,IAAI,OAAO;AAAA,UACX,OAAO;AAAA;AAAA,UACP,OAAO;AAAA,UACP,MAAM;AAAA,QACP;AAAA,QACA;AAAA,UACC,IAAI,OAAO;AAAA,UACX,OAAO;AAAA;AAAA,UACP,OAAO;AAAA,UACP,MAAM;AAAA,QACP;AAAA,MACD;AAAA,MACA,MAAM,QAAQ;AAAA,MACd,SAAS;AAAA,IACV,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IACd,aACG,MACa;AAChB,UAAM,sBAAsB,SAAS,IAAI,oBAAoB;AAE7D,UAAM,kBAAkB;AAAA,MACvB;AAAA,MACA,SAAS,IAAI,cAAc;AAAA,MAC3B;AAAA,MACA,SAAS,IAAI,YAAY;AAAA,IAC1B;AACA,QAAI,gBAAgB,eAAe,QAAQ;AAC1C,0BAAoB;AAAA,QACnB,gBAAgB,eAAe,CAAC,EAAE;AAAA,MACnC;AAAA,IACD;AAAA,EACD;AACD;AAEA,MAAe,qCAAqC,QAAQ;AAAA,EA7jD5D,OA6jD4D;AAAA;AAAA;AAAA,EAC3D,MAAe,IAAI,UAA2C;AAC7D,UAAM,qBAAqB,SAAS,IAAI,oBAAoB;AAE5D,UAAM,SAAS,KAAK,SAAS,kBAAkB;AAC/C,QAAI,CAAC,QAAQ;AACZ;AAAA,IACD;AAEA,UAAM,EAAE,SAAS,OAAO,IAAI;AAC5B,QAAI,CAAC,QAAQ;AACZ;AAAA,IACD;AAEA,UAAM,QAAQ,mBAAmB,SAAS,OAAO;AACjD,QAAI,OAAO;AACV,YAAM,MAAM,WAAW,MAAM;AAAA,IAC9B;AAAA,EACD;AAKD;AAEO,MAAM,uBAAuB,6BAA6B;AAAA,EAtlDjE,OAslDiE;AAAA;AAAA;AAAA,EAChE,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,UAAU,kBAAkB,kBAAkB;AAAA,MACrD,IAAI;AAAA,MACJ,YAAY;AAAA,QACX,QAAQ,iBAAiB;AAAA,QACzB,SAAS,OAAO,UAAU,QAAQ;AAAA,QAClC,KAAK;AAAA,UACJ,SAAS,OAAO,UAAU,OAAO,MAAM,QAAQ;AAAA,UAC/C,WAAW;AAAA,YACV,OAAO,UAAU,OAAO,QAAQ,QAAQ;AAAA,UACzC;AAAA,QACD;AAAA,MACD;AAAA,MACA,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEU,SACT,oBACgC;AAEhC,UAAM,cAAc,mBAAmB;AACvC,UAAM,qBAAqB,YAAY;AAAA,MACtC,aAAa;AAAA,IACd;AACA,UAAM,oBAAoB,YAAY,eACnC,mBAAmB,QAAQ,YAAY,YAAY,IACnD;AACH,QAAI,oBAAoB,IAAI,mBAAmB,QAAQ;AACtD,aAAO;AAAA,QACN,QAAQ,mBAAmB,oBAAoB,CAAC;AAAA,QAChD,SAAS,YAAY;AAAA,MACtB;AAAA,IACD;AAGA,UAAM,gBAAgB,oBAAI,IAAY;AACtC,QAAI,eACH,mBAAmB;AACpB,WAAO,gBAAgB,CAAC,cAAc,IAAI,aAAa,EAAE,GAAG;AAC3D,qBAAe,mBAAmB;AAAA,QACjC,EAAE,UAAU,cAAc,KAAK;AAAA,QAC/B;AAAA,QACA;AAAA,MACD;AACA,UAAI,cAAc;AACjB,sBAAc,IAAI,aAAa,EAAE;AAEjC,cAAM,eAAe,aAAa;AAAA,UACjC,aAAa;AAAA,QACd;AACA,YAAI,aAAa,SAAS,GAAG;AAC5B,iBAAO;AAAA,YACN,QAAQ,aAAa,CAAC;AAAA,YACtB,SAAS,aAAa;AAAA,UACvB;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AACD;AAEO,MAAM,2BAA2B,6BAA6B;AAAA,EAzpDrE,OAypDqE;AAAA;AAAA;AAAA,EACpE,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,UAAU,sBAAsB,sBAAsB;AAAA,MAC7D,IAAI;AAAA,MACJ,YAAY;AAAA,QACX,QAAQ,iBAAiB;AAAA,QACzB,SAAS,OAAO,UAAU,QAAQ;AAAA,QAClC,KAAK;AAAA,UACJ,SAAS,OAAO,UAAU,OAAO,MAAM,QAAQ;AAAA,UAC/C,WAAW;AAAA,YACV,OAAO,UAAU,OAAO,QAAQ,QAAQ;AAAA,UACzC;AAAA,QACD;AAAA,MACD;AAAA,MACA,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEU,SACT,oBACgC;AAEhC,UAAM,cAAc,mBAAmB;AACvC,UAAM,qBAAqB,YAAY;AAAA,MACtC,aAAa;AAAA,IACd;AACA,UAAM,oBAAoB,YAAY,eACnC,mBAAmB,QAAQ,YAAY,YAAY,IACnD;AACH,QAAI,oBAAoB,GAAG;AAC1B,aAAO;AAAA,QACN,QAAQ,mBAAmB,oBAAoB,CAAC;AAAA,QAChD,SAAS,YAAY;AAAA,MACtB;AAAA,IACD;AAGA,UAAM,gBAAgB,oBAAI,IAAY;AACtC,QAAI,eACH,mBAAmB;AACpB,WAAO,gBAAgB,CAAC,cAAc,IAAI,aAAa,EAAE,GAAG;AAC3D,qBAAe,mBAAmB;AAAA,QACjC,EAAE,UAAU,cAAc,SAAS;AAAA,QACnC;AAAA,QACA;AAAA,MACD;AACA,UAAI,cAAc;AACjB,sBAAc,IAAI,aAAa,EAAE;AAEjC,cAAM,eAAe,aAAa;AAAA,UACjC,aAAa;AAAA,QACd;AACA,YAAI,aAAa,SAAS,GAAG;AAC5B,iBAAO;AAAA,YACN,QAAQ,aAAa,aAAa,SAAS,CAAC;AAAA,YAC5C,SAAS,aAAa;AAAA,UACvB;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AACD;AAEO,MAAM,8BAA8B,6BAA6B;AAAA,EA5tDxE,OA4tDwE;AAAA;AAAA;AAAA,EACvE,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,UAAU,qBAAqB,2BAA2B;AAAA,MACjE,IAAI;AAAA,MACJ,YAAY;AAAA,QACX,QAAQ,iBAAiB;AAAA,QACzB,SAAS;AAAA,UACR,OAAO,UAAU,QAAQ;AAAA,UACzB,OAAO,UAAU,QAAQ;AAAA,QAC1B;AAAA,QACA,KAAK;AAAA,UACJ,SAAS;AAAA,YACR,OAAO,UAAU,QAAQ;AAAA,YACzB,OAAO,UAAU,OAAO,MAAM,QAAQ;AAAA,UACvC;AAAA,QACD;AAAA,MACD;AAAA,MACA,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEU,SACT,oBACoB;AACpB,UAAM,QAAQ,mBAAmB;AACjC,UAAM,UAAU,MAAM,WAAW,aAAa,UAAU;AACxD,UAAM,QAAQ,MAAM,eACjB,QAAQ,QAAQ,MAAM,YAAY,IAClC;AAEH,WAAO;AAAA,MACN,QACC,QAAQ,IAAI,QAAQ,SAAS,QAAQ,QAAQ,CAAC,IAAI,QAAQ,CAAC;AAAA,MAC5D,SAAS,MAAM;AAAA,IAChB;AAAA,EACD;AACD;AAEO,MAAM,kCAAkC,6BAA6B;AAAA,EApwD5E,OAowD4E;AAAA;AAAA;AAAA,EAC3E,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,YAAY;AAAA,QACX,QAAQ,iBAAiB;AAAA,QACzB,SAAS;AAAA,UACR,OAAO,UAAU,QAAQ;AAAA,UACzB,OAAO,UAAU,QAAQ;AAAA,QAC1B;AAAA,QACA,KAAK;AAAA,UACJ,SAAS;AAAA,YACR,OAAO,UAAU,QAAQ;AAAA,YACzB,OAAO,UAAU,OAAO,MAAM,QAAQ;AAAA,UACvC;AAAA,QACD;AAAA,MACD;AAAA,MACA,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEU,SACT,oBACoB;AACpB,UAAM,QAAQ,mBAAmB;AACjC,UAAM,UAAU,MAAM,WAAW,aAAa,UAAU;AACxD,UAAM,QAAQ,MAAM,eACjB,QAAQ,QAAQ,MAAM,YAAY,IAClC;AAEH,WAAO;AAAA,MACN,QACC,QAAQ,IAAI,QAAQ,QAAQ,CAAC,IAAI,QAAQ,QAAQ,SAAS,CAAC;AAAA,MAC5D,SAAS,MAAM;AAAA,IAChB;AAAA,EACD;AACD;AAEO,MAAM,+BAA+B,6BAA6B;AAAA,EA/yDzE,OA+yDyE;AAAA;AAAA;AAAA,EACxE,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEU,SACT,oBACoB;AACpB,UAAM,QAAQ,mBAAmB;AACjC,UAAM,UAAU,MAAM,WAAW,aAAa,UAAU;AAExD,WAAO,EAAE,QAAQ,QAAQ,CAAC,GAAG,SAAS,MAAM,GAAG;AAAA,EAChD;AACD;AAEO,MAAM,8BAA8B,6BAA6B;AAAA,EAt0DxE,OAs0DwE;AAAA;AAAA;AAAA,EACvE,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,UAAU,qBAAqB,2BAA2B;AAAA,MACjE,IAAI;AAAA,MACJ,YAAY;AAAA,QACX,QAAQ,iBAAiB;AAAA,QACzB,SAAS,OAAO,MAAM,QAAQ;AAAA,QAC9B,WAAW,CAAC,OAAO,UAAU,QAAQ,MAAM;AAAA,QAC3C,KAAK;AAAA,UACJ,SAAS,OAAO,UAAU,QAAQ;AAAA,UAClC,WAAW,CAAC,OAAO,UAAU,QAAQ,MAAM;AAAA,QAC5C;AAAA,MACD;AAAA,MACA,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEU,SACT,oBACoB;AACpB,UAAM,QAAQ,mBAAmB;AACjC,UAAM,UAAU,MAAM,WAAW,aAAa,UAAU;AAExD,WAAO,EAAE,QAAQ,QAAQ,QAAQ,SAAS,CAAC,GAAG,SAAS,MAAM,GAAG;AAAA,EACjE;AACD;AAEO,MAAM,8BAA8B,QAAQ;AAAA,EAn2DnD,OAm2DmD;AAAA;AAAA;AAAA,EAClD,OAAgB,KAAK;AAAA,EACrB,OAAgB,QAAQ,SAAS,mBAAmB,YAAY;AAAA,EAEhE,cAAc;AACb,UAAM;AAAA,MACL,IAAI,sBAAsB;AAAA,MAC1B,OAAO;AAAA,QACN,GAAG,UAAU,mBAAmB,YAAY;AAAA,QAC5C,eAAe;AAAA,UACd,EAAE,KAAK,aAAa,SAAS,CAAC,uBAAuB,EAAE;AAAA,UACvD;AAAA,QACD;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,MAAM,QAAQ;AAAA,MACd,cAAc,eAAe,IAAI,oBAAoB;AAAA,MACrD,YAAY;AAAA,QACX,QAAQ,iBAAiB;AAAA,QACzB,KAAK,EAAE,SAAS,OAAO,MAAM,QAAQ,WAAW;AAAA,QAChD,KAAK,EAAE,SAAS,OAAO,UAAU,OAAO,QAAQ,QAAQ,MAAM;AAAA,QAC9D,OAAO;AAAA,UACN,SAAS,OAAO,UAAU,OAAO,QAAQ,QAAQ;AAAA,QAClD;AAAA,MACD;AAAA,MACA,MAAM;AAAA,QACL,EAAE,IAAI,OAAO,eAAe,OAAO,iBAAiB,OAAO,EAAE;AAAA,QAC7D,EAAE,IAAI,OAAO,eAAe,OAAO,EAAE;AAAA,MACtC;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,MAAM,IAAI,UAA2C;AACpD,UAAM,iBAAiB,SAAS,IAAI,eAAe;AAEnD,UAAM,eAAe,UAAU,SAAS,IAAI;AAAA,EAC7C;AACD;AAEO,MAAM,gCAAgC,QAAQ;AAAA,EA14DrD,OA04DqD;AAAA;AAAA;AAAA,EACpD,OAAgB,KAAK;AAAA,EACrB,OAAgB,QAAQ,SAAS,gBAAgB,SAAS;AAAA,EAE1D,cAAc;AACb,UAAM;AAAA,MACL,IAAI,wBAAwB;AAAA,MAC5B,OAAO;AAAA,QACN,GAAG,UAAU,gBAAgB,SAAS;AAAA,QACtC,eAAe;AAAA,UACd,EAAE,KAAK,UAAU,SAAS,CAAC,uBAAuB,EAAE;AAAA,UACpD;AAAA,QACD;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,cAAc,eAAe,IAAI,iBAAiB;AAAA,MAClD,MAAM,QAAQ;AAAA,MACd,YAAY;AAAA,QACX,QAAQ,iBAAiB;AAAA,QACzB,KAAK,EAAE,SAAS,OAAO,MAAM,QAAQ,UAAU;AAAA,QAC/C,KAAK,EAAE,SAAS,OAAO,UAAU,QAAQ,MAAM;AAAA,QAC/C,OAAO,EAAE,SAAS,OAAO,UAAU,OAAO,MAAM,QAAQ,MAAM;AAAA,MAC/D;AAAA,MACA,MAAM;AAAA,QACL,EAAE,IAAI,OAAO,eAAe,OAAO,iBAAiB,OAAO,EAAE;AAAA,QAC7D,EAAE,IAAI,OAAO,eAAe,OAAO,EAAE;AAAA,MACtC;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,MAAM,IAAI,UAA2C;AACpD,UAAM,iBAAiB,SAAS,IAAI,eAAe;AAEnD,UAAM,eAAe,OAAO,SAAS,IAAI;AAAA,EAC1C;AACD;AAEO,MAAM,+BAA+B,QAAQ;AAAA,EA/6DpD,OA+6DoD;AAAA;AAAA;AAAA,EACnD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,UAAU,oBAAoB,aAAa;AAAA,MAClD,IAAI;AAAA,IACL,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,iBAAiB,SAAS,IAAI,eAAe;AAEnD,UAAM,eAAe,WAAW,SAAS,IAAI;AAAA,EAC9C;AACD;AAEO,MAAM,qCAAqC,QAAQ;AAAA,EA/7D1D,OA+7D0D;AAAA;AAAA;AAAA,EACzD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,IACL,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,iBAAiB,SAAS,IAAI,eAAe;AAEnD,UAAM,eAAe,UAAU,SAAS,KAAK;AAAA,EAC9C;AACD;AAEO,MAAM,uCAAuC,QAAQ;AAAA,EAl9D5D,OAk9D4D;AAAA;AAAA;AAAA,EAC3D,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,IACL,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,iBAAiB,SAAS,IAAI,eAAe;AAEnD,UAAM,eAAe,OAAO,SAAS,KAAK;AAAA,EAC3C;AACD;AAEO,MAAM,sCAAsC,QAAQ;AAAA,EAr+D3D,OAq+D2D;AAAA;AAAA;AAAA,EAC1D,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,IACL,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,iBAAiB,SAAS,IAAI,eAAe;AAEnD,UAAM,eAAe,WAAW,SAAS,KAAK;AAAA,EAC/C;AACD;AAEO,MAAM,yCAAyC,QAAQ;AAAA,EAx/D9D,OAw/D8D;AAAA;AAAA;AAAA,EAC7D,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,YAAY;AAAA,QACX,QAAQ,iBAAiB;AAAA,QACzB,SAAS;AAAA,UACR,OAAO,UAAU,QAAQ;AAAA,UACzB,OAAO,UAAU,QAAQ;AAAA,QAC1B;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,iBAAiB,SAAS,IAAI,eAAe;AAEnD,UAAM,eAAe,OAAO,SAAS,KAAK;AAAA,EAC3C;AACD;AAEO,MAAM,2CAA2C,QAAQ;AAAA,EAlhEhE,OAkhEgE;AAAA;AAAA;AAAA,EAC/D,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,IACL,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,iBAAiB,SAAS,IAAI,eAAe;AAEnD,UAAM,eAAe,UAAU,SAAS,UAAU;AAAA,EACnD;AACD;AAEO,MAAM,6CAA6C,QAAQ;AAAA,EAriElE,OAqiEkE;AAAA;AAAA;AAAA,EACjE,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,IACL,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,iBAAiB,SAAS,IAAI,eAAe;AAEnD,UAAM,eAAe,OAAO,SAAS,UAAU;AAAA,EAChD;AACD;AAEO,MAAM,4CAA4C,QAAQ;AAAA,EAxjEjE,OAwjEiE;AAAA;AAAA;AAAA,EAChE,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,IACL,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,iBAAiB,SAAS,IAAI,eAAe;AAEnD,UAAM,eAAe,WAAW,SAAS,UAAU;AAAA,EACpD;AACD;AAEO,MAAM,+CAA+C,QAAQ;AAAA,EA3kEpE,OA2kEoE;AAAA;AAAA;AAAA,EACnE,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,IACL,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,iBAAiB,SAAS,IAAI,eAAe;AAEnD,UAAM,eAAe,OAAO,SAAS,UAAU;AAAA,EAChD;AACD;AAEO,MAAM,iCAAiC,QAAQ;AAAA,EA9lEtD,OA8lEsD;AAAA;AAAA;AAAA,EACrD,OAAgB,KAAK;AAAA,EAErB,cAAc;AACb,UAAM;AAAA,MACL,IAAI,yBAAyB;AAAA,MAC7B,OAAO,UAAU,sBAAsB,sBAAsB;AAAA,MAC7D,IAAI;AAAA,MACJ,YAAY;AAAA,QACX,QAAQ,iBAAiB;AAAA,QACzB,SAAS,OAAO,UAAU,OAAO,QAAQ,QAAQ;AAAA,MAClD;AAAA,MACA,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,iBAAiB,SAAS,IAAI,eAAe;AAEnD,UAAM,eAAe,uBAAuB;AAAA,EAC7C;AACD;AAEO,MAAM,+BAA+B,QAAQ;AAAA,EArnEpD,OAqnEoD;AAAA;AAAA;AAAA,EACnD,OAAgB,KAAK;AAAA,EAErB,cAAc;AACb,UAAM;AAAA,MACL,IAAI,uBAAuB;AAAA,MAC3B,OAAO,UAAU,oBAAoB,0BAA0B;AAAA,MAC/D,IAAI;AAAA,MACJ,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,gBAAgB,SAAS,IAAI,cAAc;AACjD,UAAM,oBAAoB,SAAS,IAAI,kBAAkB;AACzD,UAAM,iBAAiB,SAAS,IAAI,eAAe;AAGnD,UAAM,EAAE,UAAU,IAAI,MAAM,cAAc,QAAQ;AAAA,MACjD,MAAM;AAAA,MACN,SAAS;AAAA,QACR;AAAA,QACA;AAAA,MACD;AAAA,MACA,QAAQ;AAAA,QACP;AAAA,QACA;AAAA,MACD;AAAA,MACA,eAAe;AAAA,QACd,EAAE,KAAK,oBAAoB,SAAS,CAAC,uBAAuB,EAAE;AAAA,QAC9D;AAAA,MACD;AAAA,IACD,CAAC;AAED,QAAI,CAAC,WAAW;AACf;AAAA,IACD;AAGA,sBAAkB,oBAAoB;AAGtC,mBAAe,oBAAoB;AAAA,EACpC;AACD;AAEO,MAAM,yDAAyD,QAAQ;AAAA,EAnqE9E,OAmqE8E;AAAA;AAAA;AAAA,EAC7E,OAAgB,KAAK;AAAA,EAErB,cAAc;AACb,UAAM;AAAA,MACL,IAAI,iDAAiD;AAAA,MACrD,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,oBAAoB,SAAS,IAAI,kBAAkB;AAEzD,sBAAkB,YAAY;AAAA,MAC7B,gDAAgD;AAAA,IACjD;AAAA,EACD;AACD;AAEO,MAAM,yCAAyC,QAAQ;AAAA,EA3rE9D,OA2rE8D;AAAA;AAAA;AAAA,EAC7D,OAAgB,KAAK;AAAA,EAErB,cAAc;AACb,UAAM;AAAA,MACL,IAAI,iCAAiC;AAAA,MACrC,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,YAAY;AAAA,QACX,QAAQ,iBAAiB;AAAA,QACzB,SAAS;AAAA,UACR,OAAO,UAAU,QAAQ;AAAA,UACzB,OAAO,UAAU,QAAQ;AAAA,QAC1B;AAAA,QACA,KAAK;AAAA,UACJ,SAAS,OAAO,UAAU,OAAO,MAAM,QAAQ;AAAA,QAChD;AAAA,MACD;AAAA,MACA,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,oBAAoB,SAAS,IAAI,kBAAkB;AAEzD,sBAAkB,YAAY;AAAA,MAC7B,kCAAkC;AAAA,IACnC;AAAA,EACD;AACD;AAEO,MAAM,+CAA+C,QAAQ;AAAA,EA7tEpE,OA6tEoE;AAAA;AAAA;AAAA,EACnE,OAAgB,KAAK;AAAA,EAErB,cAAc;AACb,UAAM;AAAA,MACL,IAAI,uCAAuC;AAAA,MAC3C,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,oBAAoB,SAAS,IAAI,kBAAkB;AAEzD,sBAAkB,YAAY;AAAA,MAC7B,wCAAwC;AAAA,IACzC;AAAA,EACD;AACD;AAEA,MAAe,wCAAwC,QAAQ;AAAA,EAC9D,YACC,MACiB,QACA,gBAChB;AACD,UAAM,IAAI;AAHO;AACA;AAAA,EAGlB;AAAA,EA5vED,OAqvE+D;AAAA;AAAA;AAAA,EAS9D,MAAe,IAAI,UAA2C;AAC7D,UAAM,oBAAoB,SAAS,IAAI,kBAAkB;AACzD,UAAM,oBAAoB,SAAS,IAAI,kBAAkB;AAEzD,UAAM,cAAc,kBAAkB,kBAAkB,KAAK,KAAK,EAAE;AAEpE,sBAAkB,YAAY,KAAK,KAAK,QAAQ;AAAA,MAC/C,4BAA4B,EAAE,YAAY;AAAA,MAC1C,gBAAgB,KAAK;AAAA,IACtB,CAAC;AAAA,EACF;AACD;AAEO,MAAM,oDAAoD,gCAAgC;AAAA,EA3wEjG,OA2wEiG;AAAA;AAAA;AAAA,EAChG,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA,wCAAwC;AAAA,MACxC;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,iDAAiD,gCAAgC;AAAA,EA7xE9F,OA6xE8F;AAAA;AAAA;AAAA,EAC7F,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA,wCAAwC;AAAA,MACxC;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,2DAA2D,gCAAgC;AAAA,EA/yExG,OA+yEwG;AAAA;AAAA;AAAA,EACvG,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,SAAS,OAAO,UAAU,QAAQ;AAAA,UAClC,KAAK;AAAA,YACJ,SAAS,OAAO,UAAU,QAAQ;AAAA,UACnC;AAAA,QACD;AAAA,QACA,cAAc,8BAA8B,UAAU;AAAA,QACtD,UAAU,WAAW;AAAA,MACtB;AAAA,MACA,gDAAgD;AAAA,MAChD;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,wDAAwD,gCAAgC;AAAA,EAz0ErG,OAy0EqG;AAAA;AAAA;AAAA,EACpG,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,SAAS,OAAO,UAAU,OAAO,QAAQ,QAAQ;AAAA,UACjD,KAAK;AAAA,YACJ,SAAS,OAAO,UAAU,OAAO,QAAQ,QAAQ;AAAA,UAClD;AAAA,QACD;AAAA,QACA,cAAc,8BAA8B,UAAU;AAAA,QACtD,UAAU,WAAW;AAAA,MACtB;AAAA,MACA,gDAAgD;AAAA,MAChD,eAAe;AAAA,IAChB;AAAA,EACD;AACD;AAEO,MAAM,mDAAmD,QAAQ;AAAA,EAn2ExE,OAm2EwE;AAAA;AAAA;AAAA,EACvE,OAAwB,KACvB;AAAA,EAED,cAAc;AACb,UAAM;AAAA,MACL,IAAI,2CAA2C;AAAA,MAC/C,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,IACL,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,oBAAoB,SAAS,IAAI,kBAAkB;AACzD,UAAM,oBAAoB,SAAS,IAAI,kBAAkB;AACzD,UAAM,qBAAqB,SAAS,IAAI,oBAAoB;AAE5D,UAAM,cAAc,kBAAkB;AAAA,MACrC,2CAA2C;AAAA,IAC5C;AAIA,QAAI;AACJ,QAAI,mBAAmB,YAAY,UAAU,GAAG;AAC/C,uBAAiB,eAAe;AAAA,IACjC;AAEA,sBAAkB,YAAY,KAAK,IAAI;AAAA,MACtC,4BAA4B,EAAE,YAAY;AAAA,MAC1C;AAAA,IACD,CAAC;AAAA,EACF;AACD;AAEO,MAAM,yCAAyC,QAAQ;AAAA,EAz4E9D,OAy4E8D;AAAA;AAAA;AAAA,EAC7D,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,iBAAiB,SAAS,IAAI,eAAe;AAEnD,mBAAe,2BAA2B;AAAA,EAC3C;AACD;AAEO,MAAM,6CAA6C,QAAQ;AAAA,EA75ElE,OA65EkE;AAAA;AAAA;AAAA,EACjE,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,iBAAiB,SAAS,IAAI,eAAe;AAEnD,mBAAe,yBAAyB;AAAA,EACzC;AACD;AAEO,MAAM,gDAAgD,QAAQ;AAAA,EAj7ErE,OAi7EqE;AAAA;AAAA;AAAA,EACpE,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,iBAAiB,SAAS,IAAI,eAAe;AACnD,UAAM,sBAAsB,SAAS,IAAI,oBAAoB;AAE7D,mBAAe;AAAA,MACd,oBAAoB,YAAY;AAAA,IACjC;AAAA,EACD;AACD;AAEO,MAAM,oDAAoD,QAAQ;AAAA,EAx8EzE,OAw8EyE;AAAA;AAAA;AAAA,EACxE,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,iBAAiB,SAAS,IAAI,eAAe;AACnD,UAAM,sBAAsB,SAAS,IAAI,oBAAoB;AAE7D,mBAAe;AAAA,MACd,oBAAoB,YAAY;AAAA,IACjC;AAAA,EACD;AACD;AAEO,MAAM,iCAAiC,QAAQ;AAAA,EA/9EtD,OA+9EsD;AAAA;AAAA;AAAA,EACrD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,UAAU,sBAAsB,sBAAsB;AAAA,MAC7D,IAAI;AAAA,IACL,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,gBAAgB,SAAS,IAAI,cAAc;AACjD,UAAM,iBAAiB,SAAS,IAAI,eAAe;AAGnD,UAAM,EAAE,UAAU,IAAI,MAAM,cAAc,QAAQ;AAAA,MACjD,MAAM;AAAA,MACN,SAAS;AAAA,QACR;AAAA,QACA;AAAA,MACD;AAAA,MACA,QAAQ;AAAA,QACP;AAAA,QACA;AAAA,MACD;AAAA,MACA,eAAe;AAAA,QACd,EAAE,KAAK,oBAAoB,SAAS,CAAC,uBAAuB,EAAE;AAAA,QAC9D;AAAA,MACD;AAAA,IACD,CAAC;AAED,QAAI,CAAC,WAAW;AACf;AAAA,IACD;AAGA,mBAAe,MAAM;AAAA,EACtB;AACD;AAEO,MAAM,oCAAoC,qBAAqB;AAAA,EAtgFtE,OAsgFsE;AAAA;AAAA;AAAA,EACrE,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO,UAAU,kBAAkB,kBAAkB;AAAA,QACrD,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,SAAS,OAAO,UAAU,OAAO,QAAQ,QAAQ;AAAA,UACjD,KAAK;AAAA,YACJ,SAAS;AAAA,cACR,OAAO,UAAU,QAAQ;AAAA,cACzB,OAAO,UAAU,OAAO,QAAQ,QAAQ;AAAA,YACzC;AAAA,UACD;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,MACA,EAAE,IAAI,OAAO;AAAA,IACd;AAAA,EACD;AACD;AAEO,MAAM,qCAAqC,qBAAqB;AAAA,EA/hFvE,OA+hFuE;AAAA;AAAA;AAAA,EACtE,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO,UAAU,mBAAmB,mBAAmB;AAAA,QACvD,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,SAAS,OAAO,UAAU,OAAO,QAAQ,QAAQ;AAAA,UACjD,KAAK;AAAA,YACJ,SAAS;AAAA,cACR,OAAO,UAAU,QAAQ;AAAA,cACzB,OAAO,UAAU,OAAO,QAAQ,QAAQ;AAAA,YACzC;AAAA,UACD;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,MACA,EAAE,IAAI,QAAQ;AAAA,IACf;AAAA,EACD;AACD;AAEO,MAAM,wCAAwC,qBAAqB;AAAA,EAxjF1E,OAwjF0E;AAAA;AAAA;AAAA,EACzE,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,SAAS,OAAO,UAAU,OAAO,MAAM,QAAQ;AAAA,UAC/C,KAAK;AAAA,YACJ,SACC,OAAO,UAAU,OAAO,UAAU,QAAQ;AAAA,UAC5C;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,QACC,IAAI;AAAA,QACJ,IAAI;AAAA,MACL;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,oCAAoC,qBAAqB;AAAA,EArlFtE,OAqlFsE;AAAA;AAAA;AAAA,EACrE,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,SAAS,OAAO,UAAU,OAAO,MAAM,QAAQ;AAAA,UAC/C,KAAK;AAAA,YACJ,SACC,OAAO,UACP,OAAO,UACP,QAAQ;AAAA,UACV;AAAA,QACD;AAAA,QACA,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,MACA,EAAE,IAAI,QAAQ,IAAI,QAAQ;AAAA,IAC3B;AAAA,EACD;AACD;AAEO,MAAM,qCAAqC,qBAAqB;AAAA,EAjnFvE,OAinFuE;AAAA;AAAA;AAAA,EACtE,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,MACA,EAAE,IAAI,MAAM,IAAI,QAAQ;AAAA,IACzB;AAAA,EACD;AACD;AAEO,MAAM,qCAAqC,qBAAqB;AAAA,EAnoFvE,OAmoFuE;AAAA;AAAA;AAAA,EACtE,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,MACA,EAAE,IAAI,QAAQ,IAAI,QAAQ;AAAA,IAC3B;AAAA,EACD;AACD;AAEO,MAAM,oCAAoC,qBAAqB;AAAA,EArpFtE,OAqpFsE;AAAA;AAAA;AAAA,EACrE,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,MACA,EAAE,IAAI,QAAQ,IAAI,QAAQ;AAAA,IAC3B;AAAA,EACD;AACD;AAEO,MAAM,qCAAqC,qBAAqB;AAAA,EAvqFvE,OAuqFuE;AAAA;AAAA;AAAA,EACtE,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,QACC,IAAI;AAAA,QACJ,IAAI;AAAA,MACL;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,qCAAqC,qBAAqB;AAAA,EA5rFvE,OA4rFuE;AAAA;AAAA;AAAA,EACtE,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,SAAS,OAAO,QAAQ,OAAO,MAAM,QAAQ;AAAA,UAC7C,KAAK;AAAA,YACJ,SACC,OAAO,UAAU,OAAO,UAAU,QAAQ;AAAA,UAC5C;AAAA,QACD;AAAA,QACA,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,QACC,IAAI;AAAA,QACJ,IAAI;AAAA,MACL;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,oCAAoC,qBAAqB;AAAA,EAztFtE,OAytFsE;AAAA;AAAA;AAAA,EACrE,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,YAAY;AAAA,UACX,QAAQ,iBAAiB;AAAA,UACzB,SAAS,OAAO,QAAQ,OAAO,MAAM,QAAQ;AAAA,UAC7C,KAAK;AAAA,YACJ,SACC,OAAO,UAAU,OAAO,UAAU,QAAQ;AAAA,UAC5C;AAAA,QACD;AAAA,QACA,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,MACA,EAAE,IAAI,QAAQ,IAAI,QAAQ;AAAA,IAC3B;AAAA,EACD;AACD;AAEO,MAAM,yCAAyC,qBAAqB;AAAA,EAnvF3E,OAmvF2E;AAAA;AAAA;AAAA,EAC1E,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,QACC,IAAI;AAAA,QACJ,IAAI;AAAA,MACL;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,qCAAqC,qBAAqB;AAAA,EAxwFvE,OAwwFuE;AAAA;AAAA;AAAA,EACtE,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,MACA,EAAE,IAAI,QAAQ,IAAI,QAAQ;AAAA,IAC3B;AAAA,EACD;AACD;AAEO,MAAM,sCAAsC,qBAAqB;AAAA,EA1xFxE,OA0xFwE;AAAA;AAAA;AAAA,EACvE,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,MACA,EAAE,IAAI,MAAM,IAAI,QAAQ;AAAA,IACzB;AAAA,EACD;AACD;AAEO,MAAM,sCAAsC,qBAAqB;AAAA,EA5yFxE,OA4yFwE;AAAA;AAAA;AAAA,EACvE,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,MACA,EAAE,IAAI,QAAQ,IAAI,QAAQ;AAAA,IAC3B;AAAA,EACD;AACD;AAEO,MAAM,qCAAqC,qBAAqB;AAAA,EA9zFvE,OA8zFuE;AAAA;AAAA;AAAA,EACtE,OAAgB,KAAK;AAAA,EACrB,OAAgB,QAAQ;AAAA,IACvB;AAAA,IACA;AAAA,EACD;AAAA,EAEA,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,MACA,EAAE,IAAI,QAAQ,IAAI,QAAQ;AAAA,IAC3B;AAAA,EACD;AACD;AAEO,MAAM,sCAAsC,qBAAqB;AAAA,EAt1FxE,OAs1FwE;AAAA;AAAA;AAAA,EACvE,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,QACC,IAAI;AAAA,QACJ,IAAI;AAAA,MACL;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,sCAAsC,qBAAqB;AAAA,EA32FxE,OA22FwE;AAAA;AAAA;AAAA,EACvE,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,QACC,IAAI;AAAA,QACJ,IAAI;AAAA,MACL;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,qCAAqC,qBAAqB;AAAA,EAh4FvE,OAg4FuE;AAAA;AAAA;AAAA,EACtE,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,MACA,EAAE,IAAI,QAAQ,IAAI,QAAQ;AAAA,IAC3B;AAAA,EACD;AACD;AAEO,MAAM,iCAAiC,qBAAqB;AAAA,EAl5FnE,OAk5FmE;AAAA;AAAA;AAAA,EAClE,OAAgB,KAAK;AAAA,EAErB,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI,yBAAyB;AAAA,QAC7B,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,QACC,QAAQ,CAAC,CAAC,CAAC;AAAA,QACX,aAAa,iBAAiB;AAAA,MAC/B;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,qCAAqC,qBAAqB;AAAA,EAz6FvE,OAy6FuE;AAAA;AAAA;AAAA,EACtE,OAAgB,KAAK;AAAA,EAErB,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI,6BAA6B;AAAA,QACjC,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,QACC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;AAAA,QACf,aAAa,iBAAiB;AAAA,MAC/B;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,uCAAuC,qBAAqB;AAAA,EAh8FzE,OAg8FyE;AAAA;AAAA;AAAA,EACxE,OAAgB,KAAK;AAAA,EAErB,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI,+BAA+B;AAAA,QACnC,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,QACC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAAA,QACnB,aAAa,iBAAiB;AAAA,MAC/B;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,kCAAkC,qBAAqB;AAAA,EAv9FpE,OAu9FoE;AAAA;AAAA;AAAA,EACnE,OAAgB,KAAK;AAAA,EAErB,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI,0BAA0B;AAAA,QAC9B,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,QACC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;AAAA,QACf,aAAa,iBAAiB;AAAA,MAC/B;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,oCAAoC,qBAAqB;AAAA,EA9+FtE,OA8+FsE;AAAA;AAAA;AAAA,EACrE,OAAgB,KAAK;AAAA,EAErB,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI,4BAA4B;AAAA,QAChC,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,QACC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAAA,QACnB,aAAa,iBAAiB;AAAA,MAC/B;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,uCAAuC,qBAAqB;AAAA,EArgGzE,OAqgGyE;AAAA;AAAA;AAAA,EACxE,OAAgB,KAAK;AAAA,EAErB,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI,+BAA+B;AAAA,QACnC,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,QACC,QAAQ,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;AAAA,QACnD,aAAa,iBAAiB;AAAA,MAC/B;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,2CAA2C,qBAAqB;AAAA,EA5hG7E,OA4hG6E;AAAA;AAAA;AAAA,EAC5E,OAAgB,KAAK;AAAA,EAErB,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI,mCAAmC;AAAA,QACvC,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,QACC,QAAQ,CAAC,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;AAAA,QACjC,aAAa,iBAAiB;AAAA,MAC/B;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,uCAAuC,qBAAqB;AAAA,EAnjGzE,OAmjGyE;AAAA;AAAA;AAAA,EACxE,OAAgB,KAAK;AAAA,EAErB,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI,+BAA+B;AAAA,QACnC,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,QACC,QAAQ,CAAC,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;AAAA,QACjC,aAAa,iBAAiB;AAAA,MAC/B;AAAA,IACD;AAAA,EACD;AACD;AAEA,MAAe,wCAAwC,QAAQ;AAAA,EAC9D,YACC,MACiB,WAChB;AACD,UAAM,IAAI;AAFO;AAAA,EAGlB;AAAA,EAhlGD,OA0kG+D;AAAA;AAAA;AAAA,EAQ9D,MAAe,IAAI,UAA2C;AAC7D,UAAM,qBAAqB,SAAS,IAAI,oBAAoB;AAC5D,UAAM,gBAAgB,SAAS,IAAI,uBAAuB;AAa1D,UAAM,iBAAiB,kBAAkB;AACzC,UAAM,gBACL,cAAc,SAAS,MAAM,WAAW,KACxC,eAAe,kBAAkB,eAAe;AAEjD,UAAM,QAAQ,mBAAmB;AAAA,MAChC,mBAAmB;AAAA,MACnB,KAAK;AAAA,IACN;AACA,uBAAmB,cAAc,KAAK;AAEtC,QAAI,eAAe;AAClB,YAAM,MAAM;AAAA,IACb;AAAA,EACD;AACD;AAEO,MAAM,iCAAiC,gCAAgC;AAAA,EAlnG9E,OAknG8E;AAAA;AAAA;AAAA,EAC7E,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA,eAAe;AAAA,IAChB;AAAA,EACD;AACD;AAEO,MAAM,kCAAkC,gCAAgC;AAAA,EAnoG/E,OAmoG+E;AAAA;AAAA;AAAA,EAC9E,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO;AAAA,UACN;AAAA,UACA;AAAA,QACD;AAAA,QACA,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA,eAAe;AAAA,IAChB;AAAA,EACD;AACD;AAEO,MAAM,kCAAkC,gCAAgC;AAAA,EAppG/E,OAopG+E;AAAA;AAAA;AAAA,EAC9E,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO,UAAU,iBAAiB,wBAAwB;AAAA,QAC1D,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA,eAAe;AAAA,IAChB;AAAA,EACD;AACD;AAEO,MAAM,kCAAkC,gCAAgC;AAAA,EAlqG/E,OAkqG+E;AAAA;AAAA;AAAA,EAC9E,cAAc;AACb;AAAA,MACC;AAAA,QACC,IAAI;AAAA,QACJ,OAAO,UAAU,iBAAiB,wBAAwB;AAAA,QAC1D,IAAI;AAAA,QACJ,UAAU,WAAW;AAAA,MACtB;AAAA,MACA,eAAe;AAAA,IAChB;AAAA,EACD;AACD;AAEO,MAAM,+BAA+B,QAAQ;AAAA,EAhrGpD,OAgrGoD;AAAA;AAAA;AAAA,EACnD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO,UAAU,oBAAoB,oBAAoB;AAAA,MACzD,IAAI;AAAA,MACJ,UAAU,WAAW;AAAA,MACrB,cAAc;AAAA,IACf,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,gBAAgB,SAAS,IAAI,cAAc;AACjD,UAAM,wBAAwB,SAAS,IAAI,sBAAsB;AAEjE,UAAM,mBAAmB,cAAc;AACvC,QAAI,CAAC,kBAAkB;AACtB;AAAA,IACD;AAEA,UAAM,uBAAuB,uBAAuB;AAAA,MACnD,iBAAiB;AAAA,IAClB;AACA,QAAI,CAAC,sBAAsB;AAC1B;AAAA,IACD;AAEA,UAAM,YAAY,sBAChB,WAAW,oBAAoB,EAC/B,IAAI,CAAC,WAAW,OAAO,EAAE,EACzB,OAAO,CAAC,OAAO,OAAO,iBAAiB,MAAM,QAAQ;AACvD,QAAI,UAAU,WAAW,GAAG;AAC3B;AAAA,IACD;AAGA,UAAM,cAAc;AAAA,MACnB;AAAA,QACC;AAAA,UACC,QAAQ,iBAAiB;AAAA,UACzB,aAAa;AAAA,YACZ,UAAU;AAAA,YACV,SAAS;AAAA,cACR,UAAU,UAAU,CAAC;AAAA,YACtB;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,MACA,iBAAiB;AAAA,IAClB;AAAA,EACD;AACD;AAEO,MAAM,iCAAiC,QAAQ;AAAA,EAruGtD,OAquGsD;AAAA;AAAA;AAAA,EACrD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,UAAU,WAAW;AAAA,MACrB,cAAc;AAAA,IACf,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,gBAAgB,SAAS,IAAI,cAAc;AAEjD,UAAM,mBAAmB,cAAc;AACvC,QAAI,CAAC,kBAAkB;AACtB;AAAA,IACD;AAEA,UAAM,uBAAuB,uBAAuB;AAAA,MACnD,iBAAiB;AAAA,IAClB;AACA,QAAI,CAAC,sBAAsB;AAC1B;AAAA,IACD;AAGA,UAAM,cAAc;AAAA,MACnB;AAAA,QACC;AAAA,UACC,QAAQ,iBAAiB;AAAA,UACzB,aAAa;AAAA,YACZ,UAAU;AAAA,YACV,SAAS;AAAA,cACR,UAAU,2BAA2B;AAAA,YACtC;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,MACA,iBAAiB;AAAA,IAClB;AAAA,EACD;AACD;AAEA,MAAe,4CAA4C,QAAQ;AAAA,EAClE,YACC,IACA,OACA,YACiB,MAChB;AACD,UAAM;AAAA,MACL;AAAA,MACA;AAAA,MACA,UAAU,WAAW;AAAA,MACrB,cAAc;AAAA,MACd;AAAA,MACA,IAAI;AAAA,IACL,CAAC;AATgB;AAAA,EAUlB;AAAA,EAnyGD,OAoxGmE;AAAA;AAAA;AAAA,EAiBlE,MAAe,IAAI,aAA+B,MAAiB;AAClE,UAAM,qBAAqB,SAAS,IAAI,oBAAoB;AAC5D,UAAM,kBAAkB;AAAA,MACvB;AAAA,MACA,SAAS,IAAI,cAAc;AAAA,MAC3B;AAAA,MACA,SAAS,IAAI,YAAY;AAAA,IAC1B;AACA,QAAI,CAAC,gBAAgB,eAAe,QAAQ;AAC3C;AAAA,IACD;AAEA,UAAM,sBACL,MAAM,mBAAmB,0BAA0B;AAGpD,UAAM,EAAE,OAAO,QAAQ,IAAI,gBAAgB,eAAe,CAAC;AAC3D,UAAM,UAAU,EAAE,eAAe,gBAAgB,cAAc;AAC/D,UAAM,qBAAqB,QAAQ,IAAI,CAAC,YAAY;AAAA,MACnD;AAAA,MACA;AAAA,IACD,EAAE;AAEF,QAAI,KAAK,MAAM;AACd,YAAM;AAAA,QACL;AAAA,QACA,oBAAoB;AAAA,MACrB;AAAA,IACD,OAAO;AACN,YAAM;AAAA,QACL;AAAA,QACA,oBAAoB;AAAA,MACrB;AAAA,IACD;AAEA,wBAAoB,YAAY,MAAM;AAAA,EACvC;AACD;AAEO,MAAM,oCAAoC,oCAAoC;AAAA,EA50GrF,OA40GqF;AAAA;AAAA;AAAA,EACpF,cAAc;AACb;AAAA,MACC;AAAA,MACA;AAAA,QACC,GAAG;AAAA,UACF;AAAA,UACA;AAAA,QACD;AAAA,QACA,eAAe;AAAA,UACd;AAAA,YACC,KAAK;AAAA,YACL,SAAS,CAAC,uBAAuB;AAAA,UAClC;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,mCAAmC,oCAAoC;AAAA,EAn2GpF,OAm2GoF;AAAA;AAAA;AAAA,EACnF,cAAc;AACb;AAAA,MACC;AAAA,MACA;AAAA,QACC,GAAG;AAAA,UACF;AAAA,UACA;AAAA,QACD;AAAA,QACA,eAAe;AAAA,UACd;AAAA,YACC,KAAK;AAAA,YACL,SAAS,CAAC,uBAAuB;AAAA,UAClC;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,MACA;AAAA,QACC,SAAS,SAAS,OAAO,UAAU,QAAQ,MAAM,QAAQ,IAAI;AAAA,QAC7D,QAAQ,iBAAiB;AAAA,MAC1B;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AAEA,MAAe,iDAAiD,QAAQ;AAAA,EACvE,YACC,IACA,OACiB,MAChB;AACD,UAAM;AAAA,MACL;AAAA,MACA;AAAA,MACA,UAAU,WAAW;AAAA,MACrB,IAAI;AAAA,IACL,CAAC;AAPgB;AAAA,EAQlB;AAAA,EAz4GD,OA63GwE;AAAA;AAAA;AAAA,EAcvE,MAAe,IAAI,UAA2C;AAC7D,UAAM,qBAAqB,SAAS,IAAI,oBAAoB;AAC5D,UAAM,cAAc,mBAAmB;AAEvC,UAAM,sBACL,MAAM,mBAAmB,0BAA0B;AAEpD,uBAAmB;AAAA,MAClB;AAAA,MACA,oBAAoB;AAAA,MACpB;AAAA,QACC,MAAM,KAAK,OACR,eAAe,eACf,eAAe;AAAA,MACnB;AAAA,IACD;AAEA,wBAAoB,YAAY,MAAM;AAAA,EACvC;AACD;AAEO,MAAM,yCAAyC,yCAAyC;AAAA,EAh6G/F,OAg6G+F;AAAA;AAAA;AAAA,EAC9F,cAAc;AACb;AAAA,MACC;AAAA,MACA;AAAA,QACC,GAAG;AAAA,UACF;AAAA,UACA;AAAA,QACD;AAAA,QACA,eAAe;AAAA,UACd;AAAA,YACC,KAAK;AAAA,YACL,SAAS,CAAC,uBAAuB;AAAA,UAClC;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,yCAAyC,yCAAyC;AAAA,EAt7G/F,OAs7G+F;AAAA;AAAA;AAAA,EAC9F,cAAc;AACb;AAAA,MACC;AAAA,MACA;AAAA,QACC,GAAG;AAAA,UACF;AAAA,UACA;AAAA,QACD;AAAA,QACA,eAAe;AAAA,UACd;AAAA,YACC,KAAK;AAAA,YACL,SAAS,CAAC,uBAAuB;AAAA,UAClC;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,yCAAyC,QAAQ;AAAA,EA58G9D,OA48G8D;AAAA;AAAA;AAAA,EAC7D,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN,GAAG;AAAA,UACF;AAAA,UACA;AAAA,QACD;AAAA,QACA,eAAe;AAAA,UACd;AAAA,YACC,KAAK;AAAA,YACL,SAAS,CAAC,uBAAuB;AAAA,UAClC;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,cAAc;AAAA,MACd,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,qBAAqB,SAAS,IAAI,oBAAoB;AAE5D,uBAAmB;AAAA,MAClB,mBAAmB,SAAS;AAAA,IAC7B;AAAA,EACD;AACD;AAEO,MAAM,mCAAmC,QAAQ;AAAA,EA5+GxD,OA4+GwD;AAAA;AAAA;AAAA,EACvD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN,GAAG,UAAU,wBAAwB,yBAAyB;AAAA,QAC9D,eAAe;AAAA,UACd;AAAA,YACC,KAAK;AAAA,YACL,SAAS,CAAC,uBAAuB;AAAA,UAClC;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,MACA,IAAI;AAAA,MACJ,UAAU,WAAW;AAAA,IACtB,CAAC;AAAA,EACF;AAAA,EAEA,MAAe,IAAI,UAA2C;AAC7D,UAAM,qBAAqB,SAAS,IAAI,oBAAoB;AAE5D,UAAM,sBACL,MAAM,mBAAmB,0BAA0B;AACpD,wBAAoB,YAAY,MAAM;AAAA,EACvC;AACD;",
  "names": []
}
