{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/editor/editorActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize, localize2 } from '../../../../nls.js';\nimport { Action } from '../../../../base/common/actions.js';\nimport { IEditorIdentifier, IEditorCommandsContext, CloseDirection, SaveReason, EditorsOrder, EditorInputCapabilities, DEFAULT_EDITOR_ASSOCIATION, GroupIdentifier, EditorResourceAccessor } from '../../../common/editor.js';\nimport { EditorInput } from '../../../common/editor/editorInput.js';\nimport { SideBySideEditorInput } from '../../../common/editor/sideBySideEditorInput.js';\nimport { IWorkbenchLayoutService, Parts } from '../../../services/layout/browser/layoutService.js';\nimport { GoFilter, IHistoryService } from '../../../services/history/common/history.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { CLOSE_EDITOR_COMMAND_ID, MOVE_ACTIVE_EDITOR_COMMAND_ID, ActiveEditorMoveCopyArguments, SPLIT_EDITOR_LEFT, SPLIT_EDITOR_RIGHT, SPLIT_EDITOR_UP, SPLIT_EDITOR_DOWN, splitEditor, LAYOUT_EDITOR_GROUPS_COMMAND_ID, UNPIN_EDITOR_COMMAND_ID, COPY_ACTIVE_EDITOR_COMMAND_ID, SPLIT_EDITOR, TOGGLE_MAXIMIZE_EDITOR_GROUP, MOVE_EDITOR_INTO_NEW_WINDOW_COMMAND_ID, COPY_EDITOR_INTO_NEW_WINDOW_COMMAND_ID, MOVE_EDITOR_GROUP_INTO_NEW_WINDOW_COMMAND_ID, COPY_EDITOR_GROUP_INTO_NEW_WINDOW_COMMAND_ID, NEW_EMPTY_EDITOR_WINDOW_COMMAND_ID as NEW_EMPTY_EDITOR_WINDOW_COMMAND_ID } from './editorCommands.js';\nimport { IEditorGroupsService, IEditorGroup, GroupsArrangement, GroupLocation, GroupDirection, preferredSideBySideGroupDirection, IFindGroupScope, GroupOrientation, EditorGroupLayout, GroupsOrder, MergeGroupMode } from '../../../services/editor/common/editorGroupsService.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IWorkspacesService } from '../../../../platform/workspaces/common/workspaces.js';\nimport { IFileDialogService, ConfirmResult, IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nimport { ItemActivation, IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { AllEditorsByMostRecentlyUsedQuickAccess, ActiveGroupEditorsByMostRecentlyUsedQuickAccess, AllEditorsByAppearanceQuickAccess } from './editorQuickAccess.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { IFilesConfigurationService, AutoSaveMode } from '../../../services/filesConfiguration/common/filesConfigurationService.js';\nimport { IEditorResolverService } from '../../../services/editor/common/editorResolverService.js';\nimport { isLinux, isNative, isWindows } from '../../../../base/common/platform.js';\nimport { Action2, IAction2Options, MenuId } from '../../../../platform/actions/common/actions.js';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { KeyChord, KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { IKeybindingRule, KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { Categories } from '../../../../platform/action/common/actionCommonCategories.js';\nimport { ActiveEditorAvailableEditorIdsContext, ActiveEditorContext, ActiveEditorGroupEmptyContext, AuxiliaryBarVisibleContext, EditorPartMaximizedEditorGroupContext, EditorPartMultipleEditorGroupsContext, IsAuxiliaryWindowFocusedContext, MultipleEditorGroupsContext, SideBarVisibleContext } from '../../../common/contextkeys.js';\nimport { getActiveDocument } from '../../../../base/browser/dom.js';\nimport { ICommandActionTitle } from '../../../../platform/action/common/action.js';\nimport { IProgressService, ProgressLocation } from '../../../../platform/progress/common/progress.js';\nimport { resolveCommandsContext } from './editorCommandsContext.js';\nimport { IListService } from '../../../../platform/list/browser/listService.js';\n\nclass ExecuteCommandAction extends Action2 {\n\n\tconstructor(\n\t\tdesc: Readonly<IAction2Options>,\n\t\tprivate readonly commandId: string,\n\t\tprivate readonly commandArgs?: unknown\n\t) {\n\t\tsuper(desc);\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst commandService = accessor.get(ICommandService);\n\n\t\treturn commandService.executeCommand(this.commandId, this.commandArgs);\n\t}\n}\n\nabstract class AbstractSplitEditorAction extends Action2 {\n\n\tprotected getDirection(configurationService: IConfigurationService): GroupDirection {\n\t\treturn preferredSideBySideGroupDirection(configurationService);\n\t}\n\n\toverride async run(accessor: ServicesAccessor, ...args: unknown[]): Promise<void> {\n\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst direction = this.getDirection(configurationService);\n\t\tconst commandContext = resolveCommandsContext(args, accessor.get(IEditorService), editorGroupsService, accessor.get(IListService));\n\n\t\tsplitEditor(editorGroupsService, direction, commandContext);\n\t}\n}\n\nexport class SplitEditorAction extends AbstractSplitEditorAction {\n\n\tstatic readonly ID = SPLIT_EDITOR;\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: SplitEditorAction.ID,\n\t\t\ttitle: localize2('splitEditor', 'Split Editor'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Backslash\n\t\t\t},\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n}\n\nexport class SplitEditorOrthogonalAction extends AbstractSplitEditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.splitEditorOrthogonal',\n\t\t\ttitle: localize2('splitEditorOrthogonal', 'Split Editor Orthogonal'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.Backslash)\n\t\t\t},\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n\n\tprotected override getDirection(configurationService: IConfigurationService): GroupDirection {\n\t\tconst direction = preferredSideBySideGroupDirection(configurationService);\n\n\t\treturn direction === GroupDirection.RIGHT ? GroupDirection.DOWN : GroupDirection.RIGHT;\n\t}\n}\n\nexport class SplitEditorLeftAction extends ExecuteCommandAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: SPLIT_EDITOR_LEFT,\n\t\t\ttitle: localize2('splitEditorGroupLeft', 'Split Editor Left'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.Backslash)\n\t\t\t},\n\t\t\tcategory: Categories.View\n\t\t}, SPLIT_EDITOR_LEFT);\n\t}\n}\n\nexport class SplitEditorRightAction extends ExecuteCommandAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: SPLIT_EDITOR_RIGHT,\n\t\t\ttitle: localize2('splitEditorGroupRight', 'Split Editor Right'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.Backslash)\n\t\t\t},\n\t\t\tcategory: Categories.View\n\t\t}, SPLIT_EDITOR_RIGHT);\n\t}\n}\n\nexport class SplitEditorUpAction extends ExecuteCommandAction {\n\n\tstatic readonly LABEL = localize('splitEditorGroupUp', \"Split Editor Up\");\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: SPLIT_EDITOR_UP,\n\t\t\ttitle: localize2('splitEditorGroupUp', \"Split Editor Up\"),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.Backslash)\n\t\t\t},\n\t\t\tcategory: Categories.View\n\t\t}, SPLIT_EDITOR_UP);\n\t}\n}\n\nexport class SplitEditorDownAction extends ExecuteCommandAction {\n\n\tstatic readonly LABEL = localize('splitEditorGroupDown', \"Split Editor Down\");\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: SPLIT_EDITOR_DOWN,\n\t\t\ttitle: localize2('splitEditorGroupDown', \"Split Editor Down\"),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.Backslash)\n\t\t\t},\n\t\t\tcategory: Categories.View\n\t\t}, SPLIT_EDITOR_DOWN);\n\t}\n}\n\nexport class JoinTwoGroupsAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.joinTwoGroups',\n\t\t\ttitle: localize2('joinTwoGroups', 'Join Editor Group with Next Group'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor, context?: IEditorIdentifier): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tlet sourceGroup: IEditorGroup | undefined;\n\t\tif (context && typeof context.groupId === 'number') {\n\t\t\tsourceGroup = editorGroupService.getGroup(context.groupId);\n\t\t} else {\n\t\t\tsourceGroup = editorGroupService.activeGroup;\n\t\t}\n\n\t\tif (sourceGroup) {\n\t\t\tconst targetGroupDirections = [GroupDirection.RIGHT, GroupDirection.DOWN, GroupDirection.LEFT, GroupDirection.UP];\n\t\t\tfor (const targetGroupDirection of targetGroupDirections) {\n\t\t\t\tconst targetGroup = editorGroupService.findGroup({ direction: targetGroupDirection }, sourceGroup);\n\t\t\t\tif (targetGroup && sourceGroup !== targetGroup) {\n\t\t\t\t\teditorGroupService.mergeGroup(sourceGroup, targetGroup);\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class JoinAllGroupsAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.joinAllGroups',\n\t\t\ttitle: localize2('joinAllGroups', 'Join All Editor Groups'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\teditorGroupService.mergeAllGroups(editorGroupService.activeGroup);\n\t}\n}\n\nexport class NavigateBetweenGroupsAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.navigateEditorGroups',\n\t\t\ttitle: localize2('navigateEditorGroups', 'Navigate Between Editor Groups'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tconst nextGroup = editorGroupService.findGroup({ location: GroupLocation.NEXT }, editorGroupService.activeGroup, true);\n\t\tnextGroup?.focus();\n\t}\n}\n\nexport class FocusActiveGroupAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.focusActiveEditorGroup',\n\t\t\ttitle: localize2('focusActiveEditorGroup', 'Focus Active Editor Group'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\teditorGroupService.activeGroup.focus();\n\t}\n}\n\nabstract class AbstractFocusGroupAction extends Action2 {\n\n\tconstructor(\n\t\tdesc: Readonly<IAction2Options>,\n\t\tprivate readonly scope: IFindGroupScope\n\t) {\n\t\tsuper(desc);\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tconst group = editorGroupService.findGroup(this.scope, editorGroupService.activeGroup, true);\n\t\tgroup?.focus();\n\t}\n}\n\nexport class FocusFirstGroupAction extends AbstractFocusGroupAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.focusFirstEditorGroup',\n\t\t\ttitle: localize2('focusFirstEditorGroup', 'Focus First Editor Group'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Digit1\n\t\t\t},\n\t\t\tcategory: Categories.View\n\t\t}, { location: GroupLocation.FIRST });\n\t}\n}\n\nexport class FocusLastGroupAction extends AbstractFocusGroupAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.focusLastEditorGroup',\n\t\t\ttitle: localize2('focusLastEditorGroup', 'Focus Last Editor Group'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, { location: GroupLocation.LAST });\n\t}\n}\n\nexport class FocusNextGroup extends AbstractFocusGroupAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.focusNextGroup',\n\t\t\ttitle: localize2('focusNextGroup', 'Focus Next Editor Group'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, { location: GroupLocation.NEXT });\n\t}\n}\n\nexport class FocusPreviousGroup extends AbstractFocusGroupAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.focusPreviousGroup',\n\t\t\ttitle: localize2('focusPreviousGroup', 'Focus Previous Editor Group'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, { location: GroupLocation.PREVIOUS });\n\t}\n}\n\nexport class FocusLeftGroup extends AbstractFocusGroupAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.focusLeftGroup',\n\t\t\ttitle: localize2('focusLeftGroup', 'Focus Left Editor Group'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.LeftArrow)\n\t\t\t},\n\t\t\tcategory: Categories.View\n\t\t}, { direction: GroupDirection.LEFT });\n\t}\n}\n\nexport class FocusRightGroup extends AbstractFocusGroupAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.focusRightGroup',\n\t\t\ttitle: localize2('focusRightGroup', 'Focus Right Editor Group'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.RightArrow)\n\t\t\t},\n\t\t\tcategory: Categories.View\n\t\t}, { direction: GroupDirection.RIGHT });\n\t}\n}\n\nexport class FocusAboveGroup extends AbstractFocusGroupAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.focusAboveGroup',\n\t\t\ttitle: localize2('focusAboveGroup', 'Focus Editor Group Above'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.UpArrow)\n\t\t\t},\n\t\t\tcategory: Categories.View\n\t\t}, { direction: GroupDirection.UP });\n\t}\n}\n\nexport class FocusBelowGroup extends AbstractFocusGroupAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.focusBelowGroup',\n\t\t\ttitle: localize2('focusBelowGroup', 'Focus Editor Group Below'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.DownArrow)\n\t\t\t},\n\t\t\tcategory: Categories.View\n\t\t}, { direction: GroupDirection.DOWN });\n\t}\n}\n\nexport class CloseEditorAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.closeActiveEditor';\n\tstatic readonly LABEL = localize('closeEditor', \"Close Editor\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService private readonly commandService: ICommandService\n\t) {\n\t\tsuper(id, label, ThemeIcon.asClassName(Codicon.close));\n\t}\n\n\toverride run(context?: IEditorCommandsContext): Promise<void> {\n\t\treturn this.commandService.executeCommand(CLOSE_EDITOR_COMMAND_ID, undefined, context);\n\t}\n}\n\nexport class UnpinEditorAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.unpinActiveEditor';\n\tstatic readonly LABEL = localize('unpinEditor', \"Unpin Editor\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService private readonly commandService: ICommandService\n\t) {\n\t\tsuper(id, label, ThemeIcon.asClassName(Codicon.pinned));\n\t}\n\n\toverride run(context?: IEditorCommandsContext): Promise<void> {\n\t\treturn this.commandService.executeCommand(UNPIN_EDITOR_COMMAND_ID, undefined, context);\n\t}\n}\n\nexport class CloseEditorTabAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.closeActiveEditor';\n\tstatic readonly LABEL = localize('closeOneEditor', \"Close\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label, ThemeIcon.asClassName(Codicon.close));\n\t}\n\n\toverride async run(context?: IEditorCommandsContext): Promise<void> {\n\t\tconst group = context ? this.editorGroupService.getGroup(context.groupId) : this.editorGroupService.activeGroup;\n\t\tif (!group) {\n\t\t\t// group mentioned in context does not exist\n\t\t\treturn;\n\t\t}\n\n\t\tconst targetEditor = context?.editorIndex !== undefined ? group.getEditorByIndex(context.editorIndex) : group.activeEditor;\n\t\tif (!targetEditor) {\n\t\t\t// No editor open or editor at index does not exist\n\t\t\treturn;\n\t\t}\n\n\t\tconst editors: EditorInput[] = [];\n\t\tif (group.isSelected(targetEditor)) {\n\t\t\teditors.push(...group.selectedEditors);\n\t\t} else {\n\t\t\teditors.push(targetEditor);\n\t\t}\n\n\t\t// Close specific editors in group\n\t\tfor (const editor of editors) {\n\t\t\tawait group.closeEditor(editor, { preserveFocus: context?.preserveFocus });\n\t\t}\n\t}\n}\n\nexport class RevertAndCloseEditorAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.revertAndCloseActiveEditor',\n\t\t\ttitle: localize2('revertAndCloseActiveEditor', 'Revert and Close Editor'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst logService = accessor.get(ILogService);\n\n\t\tconst activeEditorPane = editorService.activeEditorPane;\n\t\tif (activeEditorPane) {\n\t\t\tconst editor = activeEditorPane.input;\n\t\t\tconst group = activeEditorPane.group;\n\n\t\t\t// first try a normal revert where the contents of the editor are restored\n\t\t\ttry {\n\t\t\t\tawait editorService.revert({ editor, groupId: group.id });\n\t\t\t} catch (error) {\n\t\t\t\tlogService.error(error);\n\n\t\t\t\t// if that fails, since we are about to close the editor, we accept that\n\t\t\t\t// the editor cannot be reverted and instead do a soft revert that just\n\t\t\t\t// enables us to close the editor. With this, a user can always close a\n\t\t\t\t// dirty editor even when reverting fails.\n\n\t\t\t\tawait editorService.revert({ editor, groupId: group.id }, { soft: true });\n\t\t\t}\n\n\t\t\tawait group.closeEditor(editor);\n\t\t}\n\t}\n}\n\nexport class CloseLeftEditorsInGroupAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.closeEditorsToTheLeft',\n\t\t\ttitle: localize2('closeEditorsToTheLeft', 'Close Editors to the Left in Group'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor, context?: IEditorIdentifier): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tconst { group, editor } = this.getTarget(editorGroupService, context);\n\t\tif (group && editor) {\n\t\t\tawait group.closeEditors({ direction: CloseDirection.LEFT, except: editor, excludeSticky: true });\n\t\t}\n\t}\n\n\tprivate getTarget(editorGroupService: IEditorGroupsService, context?: IEditorIdentifier): { editor: EditorInput | null; group: IEditorGroup | undefined } {\n\t\tif (context) {\n\t\t\treturn { editor: context.editor, group: editorGroupService.getGroup(context.groupId) };\n\t\t}\n\n\t\t// Fallback to active group\n\t\treturn { group: editorGroupService.activeGroup, editor: editorGroupService.activeGroup.activeEditor };\n\t}\n}\n\nabstract class AbstractCloseAllAction extends Action2 {\n\n\tprotected groupsToClose(editorGroupService: IEditorGroupsService): IEditorGroup[] {\n\t\tconst groupsToClose: IEditorGroup[] = [];\n\n\t\t// Close editors in reverse order of their grid appearance so that the editor\n\t\t// group that is the first (top-left) remains. This helps to keep view state\n\t\t// for editors around that have been opened in this visually first group.\n\t\tconst groups = editorGroupService.getGroups(GroupsOrder.GRID_APPEARANCE);\n\t\tfor (let i = groups.length - 1; i >= 0; i--) {\n\t\t\tgroupsToClose.push(groups[i]);\n\t\t}\n\n\t\treturn groupsToClose;\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst logService = accessor.get(ILogService);\n\t\tconst progressService = accessor.get(IProgressService);\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\tconst filesConfigurationService = accessor.get(IFilesConfigurationService);\n\t\tconst fileDialogService = accessor.get(IFileDialogService);\n\n\t\t// Depending on the editor and auto save configuration,\n\t\t// split editors into buckets for handling confirmation\n\n\t\tconst dirtyEditorsWithDefaultConfirm = new Set<IEditorIdentifier>();\n\t\tconst dirtyAutoSaveOnFocusChangeEditors = new Set<IEditorIdentifier>();\n\t\tconst dirtyAutoSaveOnWindowChangeEditors = new Set<IEditorIdentifier>();\n\t\tconst editorsWithCustomConfirm = new Map<string /* typeId */, Set<IEditorIdentifier>>();\n\n\t\tfor (const { editor, groupId } of editorService.getEditors(EditorsOrder.SEQUENTIAL, { excludeSticky: this.excludeSticky })) {\n\t\t\tlet confirmClose = false;\n\t\t\tif (editor.closeHandler) {\n\t\t\t\tconfirmClose = editor.closeHandler.showConfirm(); // custom handling of confirmation on close\n\t\t\t} else {\n\t\t\t\tconfirmClose = editor.isDirty() && !editor.isSaving(); // default confirm only when dirty and not saving\n\t\t\t}\n\n\t\t\tif (!confirmClose) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Editor has custom confirm implementation\n\t\t\tif (typeof editor.closeHandler?.confirm === 'function') {\n\t\t\t\tlet customEditorsToConfirm = editorsWithCustomConfirm.get(editor.typeId);\n\t\t\t\tif (!customEditorsToConfirm) {\n\t\t\t\t\tcustomEditorsToConfirm = new Set();\n\t\t\t\t\teditorsWithCustomConfirm.set(editor.typeId, customEditorsToConfirm);\n\t\t\t\t}\n\n\t\t\t\tcustomEditorsToConfirm.add({ editor, groupId });\n\t\t\t}\n\n\t\t\t// Editor will be saved on focus change when a\n\t\t\t// dialog appears, so just track that separate\n\t\t\telse if (!editor.hasCapability(EditorInputCapabilities.Untitled) && filesConfigurationService.getAutoSaveMode(editor).mode === AutoSaveMode.ON_FOCUS_CHANGE) {\n\t\t\t\tdirtyAutoSaveOnFocusChangeEditors.add({ editor, groupId });\n\t\t\t}\n\n\t\t\t// Windows, Linux: editor will be saved on window change\n\t\t\t// when a native dialog appears, so just track that separate\n\t\t\t// (see https://github.com/microsoft/vscode/issues/134250)\n\t\t\telse if ((isNative && (isWindows || isLinux)) && !editor.hasCapability(EditorInputCapabilities.Untitled) && filesConfigurationService.getAutoSaveMode(editor).mode === AutoSaveMode.ON_WINDOW_CHANGE) {\n\t\t\t\tdirtyAutoSaveOnWindowChangeEditors.add({ editor, groupId });\n\t\t\t}\n\n\t\t\t// Editor will show in generic file based dialog\n\t\t\telse {\n\t\t\t\tdirtyEditorsWithDefaultConfirm.add({ editor, groupId });\n\t\t\t}\n\t\t}\n\n\t\t// 1.) Show default file based dialog\n\t\tif (dirtyEditorsWithDefaultConfirm.size > 0) {\n\t\t\tconst editors = Array.from(dirtyEditorsWithDefaultConfirm.values());\n\n\t\t\tawait this.revealEditorsToConfirm(editors, editorGroupService); // help user make a decision by revealing editors\n\n\t\t\tconst confirmation = await fileDialogService.showSaveConfirm(editors.map(({ editor }) => {\n\t\t\t\tif (editor instanceof SideBySideEditorInput) {\n\t\t\t\t\treturn editor.primary.getName(); // prefer shorter names by using primary's name in this case\n\t\t\t\t}\n\n\t\t\t\treturn editor.getName();\n\t\t\t}));\n\n\t\t\tswitch (confirmation) {\n\t\t\t\tcase ConfirmResult.CANCEL:\n\t\t\t\t\treturn;\n\t\t\t\tcase ConfirmResult.DONT_SAVE:\n\t\t\t\t\tawait this.revertEditors(editorService, logService, progressService, editors);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ConfirmResult.SAVE:\n\t\t\t\t\tawait editorService.save(editors, { reason: SaveReason.EXPLICIT });\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// 2.) Show custom confirm based dialog\n\t\tfor (const [, editorIdentifiers] of editorsWithCustomConfirm) {\n\t\t\tconst editors = Array.from(editorIdentifiers.values());\n\n\t\t\tawait this.revealEditorsToConfirm(editors, editorGroupService); // help user make a decision by revealing editors\n\n\t\t\tconst confirmation = await editors.at(0)?.editor.closeHandler?.confirm?.(editors);\n\t\t\tif (typeof confirmation === 'number') {\n\t\t\t\tswitch (confirmation) {\n\t\t\t\t\tcase ConfirmResult.CANCEL:\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase ConfirmResult.DONT_SAVE:\n\t\t\t\t\t\tawait this.revertEditors(editorService, logService, progressService, editors);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ConfirmResult.SAVE:\n\t\t\t\t\t\tawait editorService.save(editors, { reason: SaveReason.EXPLICIT });\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3.) Save autosaveable editors (focus change)\n\t\tif (dirtyAutoSaveOnFocusChangeEditors.size > 0) {\n\t\t\tconst editors = Array.from(dirtyAutoSaveOnFocusChangeEditors.values());\n\n\t\t\tawait editorService.save(editors, { reason: SaveReason.FOCUS_CHANGE });\n\t\t}\n\n\t\t// 4.) Save autosaveable editors (window change)\n\t\tif (dirtyAutoSaveOnWindowChangeEditors.size > 0) {\n\t\t\tconst editors = Array.from(dirtyAutoSaveOnWindowChangeEditors.values());\n\n\t\t\tawait editorService.save(editors, { reason: SaveReason.WINDOW_CHANGE });\n\t\t}\n\n\t\t// 5.) Finally close all editors: even if an editor failed to\n\t\t// save or revert and still reports dirty, the editor part makes\n\t\t// sure to bring up another confirm dialog for those editors\n\t\t// specifically.\n\t\treturn this.doCloseAll(editorGroupService);\n\t}\n\n\tprivate revertEditors(editorService: IEditorService, logService: ILogService, progressService: IProgressService, editors: IEditorIdentifier[]): Promise<void> {\n\t\treturn progressService.withProgress({\n\t\t\tlocation: ProgressLocation.Window, \t// use window progress to not be too annoying about this operation\n\t\t\tdelay: 800,\t\t\t\t\t\t\t// delay so that it only appears when operation takes a long time\n\t\t\ttitle: localize('reverting', \"Reverting Editors...\"),\n\t\t}, () => this.doRevertEditors(editorService, logService, editors));\n\t}\n\n\tprivate async doRevertEditors(editorService: IEditorService, logService: ILogService, editors: IEditorIdentifier[]): Promise<void> {\n\t\ttry {\n\t\t\t// We first attempt to revert all editors with `soft: false`, to ensure that\n\t\t\t// working copies revert to their state on disk. Even though we close editors,\n\t\t\t// it is possible that other parties hold a reference to the working copy\n\t\t\t// and expect it to be in a certain state after the editor is closed without\n\t\t\t// saving.\n\t\t\tawait editorService.revert(editors);\n\t\t} catch (error) {\n\t\t\tlogService.error(error);\n\n\t\t\t// if that fails, since we are about to close the editor, we accept that\n\t\t\t// the editor cannot be reverted and instead do a soft revert that just\n\t\t\t// enables us to close the editor. With this, a user can always close a\n\t\t\t// dirty editor even when reverting fails.\n\t\t\tawait editorService.revert(editors, { soft: true });\n\t\t}\n\t}\n\n\tprivate async revealEditorsToConfirm(editors: ReadonlyArray<IEditorIdentifier>, editorGroupService: IEditorGroupsService): Promise<void> {\n\t\ttry {\n\t\t\tconst handledGroups = new Set<GroupIdentifier>();\n\t\t\tfor (const { editor, groupId } of editors) {\n\t\t\t\tif (handledGroups.has(groupId)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\thandledGroups.add(groupId);\n\n\t\t\t\tconst group = editorGroupService.getGroup(groupId);\n\t\t\t\tawait group?.openEditor(editor);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// ignore any error as the revealing is just convinience\n\t\t}\n\t}\n\n\tprotected abstract get excludeSticky(): boolean;\n\n\tprotected async doCloseAll(editorGroupService: IEditorGroupsService): Promise<void> {\n\t\tawait Promise.all(this.groupsToClose(editorGroupService).map(group => group.closeAllEditors({ excludeSticky: this.excludeSticky })));\n\t}\n}\n\nexport class CloseAllEditorsAction extends AbstractCloseAllAction {\n\n\tstatic readonly ID = 'workbench.action.closeAllEditors';\n\tstatic readonly LABEL = localize2('closeAllEditors', 'Close All Editors');\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CloseAllEditorsAction.ID,\n\t\t\ttitle: CloseAllEditorsAction.LABEL,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyW)\n\t\t\t},\n\t\t\ticon: Codicon.closeAll,\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n\n\tprotected get excludeSticky(): boolean {\n\t\treturn true; // exclude sticky from this mass-closing operation\n\t}\n}\n\nexport class CloseAllEditorGroupsAction extends AbstractCloseAllAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.closeAllGroups',\n\t\t\ttitle: localize2('closeAllGroups', 'Close All Editor Groups'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyW)\n\t\t\t},\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n\n\tprotected get excludeSticky(): boolean {\n\t\treturn false; // the intent to close groups means, even sticky are included\n\t}\n\n\tprotected override async doCloseAll(editorGroupService: IEditorGroupsService): Promise<void> {\n\t\tawait super.doCloseAll(editorGroupService);\n\n\t\tfor (const groupToClose of this.groupsToClose(editorGroupService)) {\n\t\t\teditorGroupService.removeGroup(groupToClose);\n\t\t}\n\t}\n}\n\nexport class CloseEditorsInOtherGroupsAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.closeEditorsInOtherGroups',\n\t\t\ttitle: localize2('closeEditorsInOtherGroups', 'Close Editors in Other Groups'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor, context?: IEditorIdentifier): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tconst groupToSkip = context ? editorGroupService.getGroup(context.groupId) : editorGroupService.activeGroup;\n\t\tawait Promise.all(editorGroupService.getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE).map(async group => {\n\t\t\tif (groupToSkip && group.id === groupToSkip.id) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn group.closeAllEditors({ excludeSticky: true });\n\t\t}));\n\t}\n}\n\nexport class CloseEditorInAllGroupsAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.closeEditorInAllGroups',\n\t\t\ttitle: localize2('closeEditorInAllGroups', 'Close Editor in All Groups'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tconst activeEditor = editorService.activeEditor;\n\t\tif (activeEditor) {\n\t\t\tawait Promise.all(editorGroupService.getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE).map(group => group.closeEditor(activeEditor)));\n\t\t}\n\t}\n}\n\nabstract class AbstractMoveCopyGroupAction extends Action2 {\n\n\tconstructor(\n\t\tdesc: Readonly<IAction2Options>,\n\t\tprivate readonly direction: GroupDirection,\n\t\tprivate readonly isMove: boolean\n\t) {\n\t\tsuper(desc);\n\t}\n\n\toverride async run(accessor: ServicesAccessor, context?: IEditorIdentifier): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tlet sourceGroup: IEditorGroup | undefined;\n\t\tif (context && typeof context.groupId === 'number') {\n\t\t\tsourceGroup = editorGroupService.getGroup(context.groupId);\n\t\t} else {\n\t\t\tsourceGroup = editorGroupService.activeGroup;\n\t\t}\n\n\t\tif (sourceGroup) {\n\t\t\tlet resultGroup: IEditorGroup | undefined = undefined;\n\t\t\tif (this.isMove) {\n\t\t\t\tconst targetGroup = this.findTargetGroup(editorGroupService, sourceGroup);\n\t\t\t\tif (targetGroup) {\n\t\t\t\t\tresultGroup = editorGroupService.moveGroup(sourceGroup, targetGroup, this.direction);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresultGroup = editorGroupService.copyGroup(sourceGroup, sourceGroup, this.direction);\n\t\t\t}\n\n\t\t\tif (resultGroup) {\n\t\t\t\teditorGroupService.activateGroup(resultGroup);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate findTargetGroup(editorGroupService: IEditorGroupsService, sourceGroup: IEditorGroup): IEditorGroup | undefined {\n\t\tconst targetNeighbours: GroupDirection[] = [this.direction];\n\n\t\t// Allow the target group to be in alternative locations to support more\n\t\t// scenarios of moving the group to the taret location.\n\t\t// Helps for https://github.com/microsoft/vscode/issues/50741\n\t\tswitch (this.direction) {\n\t\t\tcase GroupDirection.LEFT:\n\t\t\tcase GroupDirection.RIGHT:\n\t\t\t\ttargetNeighbours.push(GroupDirection.UP, GroupDirection.DOWN);\n\t\t\t\tbreak;\n\t\t\tcase GroupDirection.UP:\n\t\t\tcase GroupDirection.DOWN:\n\t\t\t\ttargetNeighbours.push(GroupDirection.LEFT, GroupDirection.RIGHT);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tfor (const targetNeighbour of targetNeighbours) {\n\t\t\tconst targetNeighbourGroup = editorGroupService.findGroup({ direction: targetNeighbour }, sourceGroup);\n\t\t\tif (targetNeighbourGroup) {\n\t\t\t\treturn targetNeighbourGroup;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\nabstract class AbstractMoveGroupAction extends AbstractMoveCopyGroupAction {\n\n\tconstructor(\n\t\tdesc: Readonly<IAction2Options>,\n\t\tdirection: GroupDirection\n\t) {\n\t\tsuper(desc, direction, true);\n\t}\n}\n\nexport class MoveGroupLeftAction extends AbstractMoveGroupAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.moveActiveEditorGroupLeft',\n\t\t\ttitle: localize2('moveActiveGroupLeft', 'Move Editor Group Left'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.LeftArrow)\n\t\t\t},\n\t\t\tcategory: Categories.View\n\t\t}, GroupDirection.LEFT);\n\t}\n}\n\nexport class MoveGroupRightAction extends AbstractMoveGroupAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.moveActiveEditorGroupRight',\n\t\t\ttitle: localize2('moveActiveGroupRight', 'Move Editor Group Right'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.RightArrow)\n\t\t\t},\n\t\t\tcategory: Categories.View\n\t\t}, GroupDirection.RIGHT);\n\t}\n}\n\nexport class MoveGroupUpAction extends AbstractMoveGroupAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.moveActiveEditorGroupUp',\n\t\t\ttitle: localize2('moveActiveGroupUp', 'Move Editor Group Up'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.UpArrow)\n\t\t\t},\n\t\t\tcategory: Categories.View\n\t\t}, GroupDirection.UP);\n\t}\n}\n\nexport class MoveGroupDownAction extends AbstractMoveGroupAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.moveActiveEditorGroupDown',\n\t\t\ttitle: localize2('moveActiveGroupDown', 'Move Editor Group Down'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.DownArrow)\n\t\t\t},\n\t\t\tcategory: Categories.View\n\t\t}, GroupDirection.DOWN);\n\t}\n}\n\nabstract class AbstractDuplicateGroupAction extends AbstractMoveCopyGroupAction {\n\n\tconstructor(\n\t\tdesc: Readonly<IAction2Options>,\n\t\tdirection: GroupDirection\n\t) {\n\t\tsuper(desc, direction, false);\n\t}\n}\n\nexport class DuplicateGroupLeftAction extends AbstractDuplicateGroupAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.duplicateActiveEditorGroupLeft',\n\t\t\ttitle: localize2('duplicateActiveGroupLeft', 'Duplicate Editor Group Left'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, GroupDirection.LEFT);\n\t}\n}\n\nexport class DuplicateGroupRightAction extends AbstractDuplicateGroupAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.duplicateActiveEditorGroupRight',\n\t\t\ttitle: localize2('duplicateActiveGroupRight', 'Duplicate Editor Group Right'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, GroupDirection.RIGHT);\n\t}\n}\n\nexport class DuplicateGroupUpAction extends AbstractDuplicateGroupAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.duplicateActiveEditorGroupUp',\n\t\t\ttitle: localize2('duplicateActiveGroupUp', 'Duplicate Editor Group Up'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, GroupDirection.UP);\n\t}\n}\n\nexport class DuplicateGroupDownAction extends AbstractDuplicateGroupAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.duplicateActiveEditorGroupDown',\n\t\t\ttitle: localize2('duplicateActiveGroupDown', 'Duplicate Editor Group Down'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, GroupDirection.DOWN);\n\t}\n}\n\nexport class MinimizeOtherGroupsAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.minimizeOtherEditors',\n\t\t\ttitle: localize2('minimizeOtherEditorGroups', 'Expand Editor Group'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t\tprecondition: MultipleEditorGroupsContext\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\teditorGroupService.arrangeGroups(GroupsArrangement.EXPAND);\n\t}\n}\n\nexport class MinimizeOtherGroupsHideSidebarAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.minimizeOtherEditorsHideSidebar',\n\t\t\ttitle: localize2('minimizeOtherEditorGroupsHideSidebar', 'Expand Editor Group and Hide Side Bars'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t\tprecondition: ContextKeyExpr.or(MultipleEditorGroupsContext, SideBarVisibleContext, AuxiliaryBarVisibleContext)\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\n\t\tlayoutService.setPartHidden(true, Parts.SIDEBAR_PART);\n\t\tlayoutService.setPartHidden(true, Parts.AUXILIARYBAR_PART);\n\t\teditorGroupService.arrangeGroups(GroupsArrangement.EXPAND);\n\t}\n}\n\nexport class ResetGroupSizesAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.evenEditorWidths',\n\t\t\ttitle: localize2('evenEditorGroups', 'Reset Editor Group Sizes'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\teditorGroupService.arrangeGroups(GroupsArrangement.EVEN);\n\t}\n}\n\nexport class ToggleGroupSizesAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.toggleEditorWidths',\n\t\t\ttitle: localize2('toggleEditorWidths', 'Toggle Editor Group Sizes'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\teditorGroupService.toggleExpandGroup();\n\t}\n}\n\nexport class MaximizeGroupHideSidebarAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.maximizeEditorHideSidebar',\n\t\t\ttitle: localize2('maximizeEditorHideSidebar', 'Maximize Editor Group and Hide Side Bars'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t\tprecondition: ContextKeyExpr.or(ContextKeyExpr.and(EditorPartMaximizedEditorGroupContext.negate(), EditorPartMultipleEditorGroupsContext), SideBarVisibleContext, AuxiliaryBarVisibleContext)\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tif (editorService.activeEditor) {\n\t\t\tlayoutService.setPartHidden(true, Parts.SIDEBAR_PART);\n\t\t\tlayoutService.setPartHidden(true, Parts.AUXILIARYBAR_PART);\n\t\t\teditorGroupService.arrangeGroups(GroupsArrangement.MAXIMIZE);\n\t\t}\n\t}\n}\n\nexport class ToggleMaximizeEditorGroupAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: TOGGLE_MAXIMIZE_EDITOR_GROUP,\n\t\t\ttitle: localize2('toggleMaximizeEditorGroup', 'Toggle Maximize Editor Group'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t\tprecondition: ContextKeyExpr.or(EditorPartMultipleEditorGroupsContext, EditorPartMaximizedEditorGroupContext),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyM),\n\t\t\t},\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\torder: -10000, // towards the front\n\t\t\t\tgroup: 'navigation',\n\t\t\t\twhen: EditorPartMaximizedEditorGroupContext\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: MenuId.EmptyEditorGroup,\n\t\t\t\torder: -10000, // towards the front\n\t\t\t\tgroup: 'navigation',\n\t\t\t\twhen: EditorPartMaximizedEditorGroupContext\n\t\t\t}],\n\t\t\ticon: Codicon.screenFull,\n\t\t\ttoggled: EditorPartMaximizedEditorGroupContext,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor, ...args: unknown[]): Promise<void> {\n\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\n\t\tconst resolvedContext = resolveCommandsContext(args, accessor.get(IEditorService), editorGroupsService, accessor.get(IListService));\n\t\tif (resolvedContext.groupedEditors.length) {\n\t\t\teditorGroupsService.toggleMaximizeGroup(resolvedContext.groupedEditors[0].group);\n\t\t}\n\t}\n}\n\nabstract class AbstractNavigateEditorAction extends Action2 {\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tconst result = this.navigate(editorGroupService);\n\t\tif (!result) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { groupId, editor } = result;\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst group = editorGroupService.getGroup(groupId);\n\t\tif (group) {\n\t\t\tawait group.openEditor(editor);\n\t\t}\n\t}\n\n\tprotected abstract navigate(editorGroupService: IEditorGroupsService): IEditorIdentifier | undefined;\n}\n\nexport class OpenNextEditor extends AbstractNavigateEditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.nextEditor',\n\t\t\ttitle: localize2('openNextEditor', 'Open Next Editor'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.PageDown,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.RightArrow,\n\t\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.BracketRight]\n\t\t\t\t}\n\t\t\t},\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n\n\tprotected navigate(editorGroupService: IEditorGroupsService): IEditorIdentifier | undefined {\n\n\t\t// Navigate in active group if possible\n\t\tconst activeGroup = editorGroupService.activeGroup;\n\t\tconst activeGroupEditors = activeGroup.getEditors(EditorsOrder.SEQUENTIAL);\n\t\tconst activeEditorIndex = activeGroup.activeEditor ? activeGroupEditors.indexOf(activeGroup.activeEditor) : -1;\n\t\tif (activeEditorIndex + 1 < activeGroupEditors.length) {\n\t\t\treturn { editor: activeGroupEditors[activeEditorIndex + 1], groupId: activeGroup.id };\n\t\t}\n\n\t\t// Otherwise try in next group that has editors\n\t\tconst handledGroups = new Set<number>();\n\t\tlet currentGroup: IEditorGroup | undefined = editorGroupService.activeGroup;\n\t\twhile (currentGroup && !handledGroups.has(currentGroup.id)) {\n\t\t\tcurrentGroup = editorGroupService.findGroup({ location: GroupLocation.NEXT }, currentGroup, true);\n\t\t\tif (currentGroup) {\n\t\t\t\thandledGroups.add(currentGroup.id);\n\n\t\t\t\tconst groupEditors = currentGroup.getEditors(EditorsOrder.SEQUENTIAL);\n\t\t\t\tif (groupEditors.length > 0) {\n\t\t\t\t\treturn { editor: groupEditors[0], groupId: currentGroup.id };\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\nexport class OpenPreviousEditor extends AbstractNavigateEditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.previousEditor',\n\t\t\ttitle: localize2('openPreviousEditor', 'Open Previous Editor'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.PageUp,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.LeftArrow,\n\t\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.BracketLeft]\n\t\t\t\t}\n\t\t\t},\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n\n\tprotected navigate(editorGroupService: IEditorGroupsService): IEditorIdentifier | undefined {\n\n\t\t// Navigate in active group if possible\n\t\tconst activeGroup = editorGroupService.activeGroup;\n\t\tconst activeGroupEditors = activeGroup.getEditors(EditorsOrder.SEQUENTIAL);\n\t\tconst activeEditorIndex = activeGroup.activeEditor ? activeGroupEditors.indexOf(activeGroup.activeEditor) : -1;\n\t\tif (activeEditorIndex > 0) {\n\t\t\treturn { editor: activeGroupEditors[activeEditorIndex - 1], groupId: activeGroup.id };\n\t\t}\n\n\t\t// Otherwise try in previous group that has editors\n\t\tconst handledGroups = new Set<number>();\n\t\tlet currentGroup: IEditorGroup | undefined = editorGroupService.activeGroup;\n\t\twhile (currentGroup && !handledGroups.has(currentGroup.id)) {\n\t\t\tcurrentGroup = editorGroupService.findGroup({ location: GroupLocation.PREVIOUS }, currentGroup, true);\n\t\t\tif (currentGroup) {\n\t\t\t\thandledGroups.add(currentGroup.id);\n\n\t\t\t\tconst groupEditors = currentGroup.getEditors(EditorsOrder.SEQUENTIAL);\n\t\t\t\tif (groupEditors.length > 0) {\n\t\t\t\t\treturn { editor: groupEditors[groupEditors.length - 1], groupId: currentGroup.id };\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\nexport class OpenNextEditorInGroup extends AbstractNavigateEditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.nextEditorInGroup',\n\t\t\ttitle: localize2('nextEditorInGroup', 'Open Next Editor in Group'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.PageDown),\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.RightArrow)\n\t\t\t\t}\n\t\t\t},\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n\n\tprotected navigate(editorGroupService: IEditorGroupsService): IEditorIdentifier {\n\t\tconst group = editorGroupService.activeGroup;\n\t\tconst editors = group.getEditors(EditorsOrder.SEQUENTIAL);\n\t\tconst index = group.activeEditor ? editors.indexOf(group.activeEditor) : -1;\n\n\t\treturn { editor: index + 1 < editors.length ? editors[index + 1] : editors[0], groupId: group.id };\n\t}\n}\n\nexport class OpenPreviousEditorInGroup extends AbstractNavigateEditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.previousEditorInGroup',\n\t\t\ttitle: localize2('openPreviousEditorInGroup', 'Open Previous Editor in Group'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.PageUp),\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.LeftArrow)\n\t\t\t\t}\n\t\t\t},\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n\n\tprotected navigate(editorGroupService: IEditorGroupsService): IEditorIdentifier {\n\t\tconst group = editorGroupService.activeGroup;\n\t\tconst editors = group.getEditors(EditorsOrder.SEQUENTIAL);\n\t\tconst index = group.activeEditor ? editors.indexOf(group.activeEditor) : -1;\n\n\t\treturn { editor: index > 0 ? editors[index - 1] : editors[editors.length - 1], groupId: group.id };\n\t}\n}\n\nexport class OpenFirstEditorInGroup extends AbstractNavigateEditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.firstEditorInGroup',\n\t\t\ttitle: localize2('firstEditorInGroup', 'Open First Editor in Group'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n\n\tprotected navigate(editorGroupService: IEditorGroupsService): IEditorIdentifier {\n\t\tconst group = editorGroupService.activeGroup;\n\t\tconst editors = group.getEditors(EditorsOrder.SEQUENTIAL);\n\n\t\treturn { editor: editors[0], groupId: group.id };\n\t}\n}\n\nexport class OpenLastEditorInGroup extends AbstractNavigateEditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.lastEditorInGroup',\n\t\t\ttitle: localize2('lastEditorInGroup', 'Open Last Editor in Group'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.Digit0,\n\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.Digit9],\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.WinCtrl | KeyCode.Digit0,\n\t\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.Digit9]\n\t\t\t\t}\n\t\t\t},\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n\n\tprotected navigate(editorGroupService: IEditorGroupsService): IEditorIdentifier {\n\t\tconst group = editorGroupService.activeGroup;\n\t\tconst editors = group.getEditors(EditorsOrder.SEQUENTIAL);\n\n\t\treturn { editor: editors[editors.length - 1], groupId: group.id };\n\t}\n}\n\nexport class NavigateForwardAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.navigateForward';\n\tstatic readonly LABEL = localize('navigateForward', \"Go Forward\");\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: NavigateForwardAction.ID,\n\t\t\ttitle: {\n\t\t\t\t...localize2('navigateForward', \"Go Forward\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miForward', comment: ['&& denotes a mnemonic'] }, \"&&Forward\")\n\t\t\t},\n\t\t\tf1: true,\n\t\t\ticon: Codicon.arrowRight,\n\t\t\tprecondition: ContextKeyExpr.has('canNavigateForward'),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twin: { primary: KeyMod.Alt | KeyCode.RightArrow },\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyMod.Shift | KeyCode.Minus },\n\t\t\t\tlinux: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Minus }\n\t\t\t},\n\t\t\tmenu: [\n\t\t\t\t{ id: MenuId.MenubarGoMenu, group: '1_history_nav', order: 2 },\n\t\t\t\t{ id: MenuId.CommandCenter, order: 2 }\n\t\t\t]\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\tawait historyService.goForward(GoFilter.NONE);\n\t}\n}\n\nexport class NavigateBackwardsAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.navigateBack';\n\tstatic readonly LABEL = localize('navigateBack', \"Go Back\");\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: NavigateBackwardsAction.ID,\n\t\t\ttitle: {\n\t\t\t\t...localize2('navigateBack', \"Go Back\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miBack', comment: ['&& denotes a mnemonic'] }, \"&&Back\")\n\t\t\t},\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.has('canNavigateBack'),\n\t\t\ticon: Codicon.arrowLeft,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twin: { primary: KeyMod.Alt | KeyCode.LeftArrow },\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.Minus },\n\t\t\t\tlinux: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Minus }\n\t\t\t},\n\t\t\tmenu: [\n\t\t\t\t{ id: MenuId.MenubarGoMenu, group: '1_history_nav', order: 1 },\n\t\t\t\t{ id: MenuId.CommandCenter, order: 1 }\n\t\t\t]\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\tawait historyService.goBack(GoFilter.NONE);\n\t}\n}\n\nexport class NavigatePreviousAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.navigateLast',\n\t\t\ttitle: localize2('navigatePrevious', 'Go Previous'),\n\t\t\tf1: true\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\tawait historyService.goPrevious(GoFilter.NONE);\n\t}\n}\n\nexport class NavigateForwardInEditsAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.navigateForwardInEditLocations',\n\t\t\ttitle: localize2('navigateForwardInEdits', 'Go Forward in Edit Locations'),\n\t\t\tf1: true\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\tawait historyService.goForward(GoFilter.EDITS);\n\t}\n}\n\nexport class NavigateBackwardsInEditsAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.navigateBackInEditLocations',\n\t\t\ttitle: localize2('navigateBackInEdits', 'Go Back in Edit Locations'),\n\t\t\tf1: true\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\tawait historyService.goBack(GoFilter.EDITS);\n\t}\n}\n\nexport class NavigatePreviousInEditsAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.navigatePreviousInEditLocations',\n\t\t\ttitle: localize2('navigatePreviousInEdits', 'Go Previous in Edit Locations'),\n\t\t\tf1: true\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\tawait historyService.goPrevious(GoFilter.EDITS);\n\t}\n}\n\nexport class NavigateToLastEditLocationAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.navigateToLastEditLocation',\n\t\t\ttitle: localize2('navigateToLastEditLocation', 'Go to Last Edit Location'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyQ)\n\t\t\t}\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\tawait historyService.goLast(GoFilter.EDITS);\n\t}\n}\n\nexport class NavigateForwardInNavigationsAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.navigateForwardInNavigationLocations',\n\t\t\ttitle: localize2('navigateForwardInNavigations', 'Go Forward in Navigation Locations'),\n\t\t\tf1: true\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\tawait historyService.goForward(GoFilter.NAVIGATION);\n\t}\n}\n\nexport class NavigateBackwardsInNavigationsAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.navigateBackInNavigationLocations',\n\t\t\ttitle: localize2('navigateBackInNavigations', 'Go Back in Navigation Locations'),\n\t\t\tf1: true\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\tawait historyService.goBack(GoFilter.NAVIGATION);\n\t}\n}\n\nexport class NavigatePreviousInNavigationsAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.navigatePreviousInNavigationLocations',\n\t\t\ttitle: localize2('navigatePreviousInNavigationLocations', 'Go Previous in Navigation Locations'),\n\t\t\tf1: true\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\tawait historyService.goPrevious(GoFilter.NAVIGATION);\n\t}\n}\n\nexport class NavigateToLastNavigationLocationAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.navigateToLastNavigationLocation',\n\t\t\ttitle: localize2('navigateToLastNavigationLocation', 'Go to Last Navigation Location'),\n\t\t\tf1: true\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\tawait historyService.goLast(GoFilter.NAVIGATION);\n\t}\n}\n\nexport class ReopenClosedEditorAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.reopenClosedEditor';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ReopenClosedEditorAction.ID,\n\t\t\ttitle: localize2('reopenClosedEditor', 'Reopen Closed Editor'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyT\n\t\t\t},\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\tawait historyService.reopenLastClosedEditor();\n\t}\n}\n\nexport class ClearRecentFilesAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.clearRecentFiles';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ClearRecentFilesAction.ID,\n\t\t\ttitle: localize2('clearRecentFiles', 'Clear Recently Opened...'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.File\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst dialogService = accessor.get(IDialogService);\n\t\tconst workspacesService = accessor.get(IWorkspacesService);\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\t// Ask for confirmation\n\t\tconst { confirmed } = await dialogService.confirm({\n\t\t\ttype: 'warning',\n\t\t\tmessage: localize('confirmClearRecentsMessage', \"Do you want to clear all recently opened files and workspaces?\"),\n\t\t\tdetail: localize('confirmClearDetail', \"This action is irreversible!\"),\n\t\t\tprimaryButton: localize({ key: 'clearButtonLabel', comment: ['&& denotes a mnemonic'] }, \"&&Clear\")\n\t\t});\n\n\t\tif (!confirmed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clear global recently opened\n\t\tworkspacesService.clearRecentlyOpened();\n\n\t\t// Clear workspace specific recently opened\n\t\thistoryService.clearRecentlyOpened();\n\t}\n}\n\nexport class ShowEditorsInActiveGroupByMostRecentlyUsedAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.showEditorsInActiveGroup';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ShowEditorsInActiveGroupByMostRecentlyUsedAction.ID,\n\t\t\ttitle: localize2('showEditorsInActiveGroup', 'Show Editors in Active Group By Most Recently Used'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\tquickInputService.quickAccess.show(ActiveGroupEditorsByMostRecentlyUsedQuickAccess.PREFIX);\n\t}\n}\n\nexport class ShowAllEditorsByAppearanceAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.showAllEditors';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ShowAllEditorsByAppearanceAction.ID,\n\t\t\ttitle: localize2('showAllEditors', 'Show All Editors By Appearance'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyP),\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Tab\n\t\t\t\t}\n\t\t\t},\n\t\t\tcategory: Categories.File\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\tquickInputService.quickAccess.show(AllEditorsByAppearanceQuickAccess.PREFIX);\n\t}\n}\n\nexport class ShowAllEditorsByMostRecentlyUsedAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.showAllEditorsByMostRecentlyUsed';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ShowAllEditorsByMostRecentlyUsedAction.ID,\n\t\t\ttitle: localize2('showAllEditorsByMostRecentlyUsed', 'Show All Editors By Most Recently Used'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\tquickInputService.quickAccess.show(AllEditorsByMostRecentlyUsedQuickAccess.PREFIX);\n\t}\n}\n\nabstract class AbstractQuickAccessEditorAction extends Action2 {\n\n\tconstructor(\n\t\tdesc: Readonly<IAction2Options>,\n\t\tprivate readonly prefix: string,\n\t\tprivate readonly itemActivation: ItemActivation | undefined,\n\t) {\n\t\tsuper(desc);\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst keybindingService = accessor.get(IKeybindingService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\tconst keybindings = keybindingService.lookupKeybindings(this.desc.id);\n\n\t\tquickInputService.quickAccess.show(this.prefix, {\n\t\t\tquickNavigateConfiguration: { keybindings },\n\t\t\titemActivation: this.itemActivation\n\t\t});\n\t}\n}\n\nexport class QuickAccessPreviousRecentlyUsedEditorAction extends AbstractQuickAccessEditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.quickOpenPreviousRecentlyUsedEditor',\n\t\t\ttitle: localize2('quickOpenPreviousRecentlyUsedEditor', 'Quick Open Previous Recently Used Editor'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, AllEditorsByMostRecentlyUsedQuickAccess.PREFIX, undefined);\n\t}\n}\n\nexport class QuickAccessLeastRecentlyUsedEditorAction extends AbstractQuickAccessEditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.quickOpenLeastRecentlyUsedEditor',\n\t\t\ttitle: localize2('quickOpenLeastRecentlyUsedEditor', 'Quick Open Least Recently Used Editor'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, AllEditorsByMostRecentlyUsedQuickAccess.PREFIX, undefined);\n\t}\n}\n\nexport class QuickAccessPreviousRecentlyUsedEditorInGroupAction extends AbstractQuickAccessEditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup',\n\t\t\ttitle: localize2('quickOpenPreviousRecentlyUsedEditorInGroup', 'Quick Open Previous Recently Used Editor in Group'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Tab,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.WinCtrl | KeyCode.Tab\n\t\t\t\t}\n\t\t\t},\n\t\t\tprecondition: ActiveEditorGroupEmptyContext.toNegated(),\n\t\t\tcategory: Categories.View\n\t\t}, ActiveGroupEditorsByMostRecentlyUsedQuickAccess.PREFIX, undefined);\n\t}\n}\n\nexport class QuickAccessLeastRecentlyUsedEditorInGroupAction extends AbstractQuickAccessEditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.quickOpenLeastRecentlyUsedEditorInGroup',\n\t\t\ttitle: localize2('quickOpenLeastRecentlyUsedEditorInGroup', 'Quick Open Least Recently Used Editor in Group'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Tab,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.WinCtrl | KeyMod.Shift | KeyCode.Tab\n\t\t\t\t}\n\t\t\t},\n\t\t\tprecondition: ActiveEditorGroupEmptyContext.toNegated(),\n\t\t\tcategory: Categories.View\n\t\t}, ActiveGroupEditorsByMostRecentlyUsedQuickAccess.PREFIX, ItemActivation.LAST);\n\t}\n}\n\nexport class QuickAccessPreviousEditorFromHistoryAction extends Action2 {\n\n\tprivate static readonly ID = 'workbench.action.openPreviousEditorFromHistory';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: QuickAccessPreviousEditorFromHistoryAction.ID,\n\t\t\ttitle: localize2('navigateEditorHistoryByInput', 'Quick Open Previous Editor from History'),\n\t\t\tf1: true\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst keybindingService = accessor.get(IKeybindingService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tconst keybindings = keybindingService.lookupKeybindings(QuickAccessPreviousEditorFromHistoryAction.ID);\n\n\t\t// Enforce to activate the first item in quick access if\n\t\t// the currently active editor group has n editor opened\n\t\tlet itemActivation: ItemActivation | undefined = undefined;\n\t\tif (editorGroupService.activeGroup.count === 0) {\n\t\t\titemActivation = ItemActivation.FIRST;\n\t\t}\n\n\t\tquickInputService.quickAccess.show('', { quickNavigateConfiguration: { keybindings }, itemActivation });\n\t}\n}\n\nexport class OpenNextRecentlyUsedEditorAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.openNextRecentlyUsedEditor',\n\t\t\ttitle: localize2('openNextRecentlyUsedEditor', 'Open Next Recently Used Editor'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\thistoryService.openNextRecentlyUsedEditor();\n\t}\n}\n\nexport class OpenPreviousRecentlyUsedEditorAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.openPreviousRecentlyUsedEditor',\n\t\t\ttitle: localize2('openPreviousRecentlyUsedEditor', 'Open Previous Recently Used Editor'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\thistoryService.openPreviouslyUsedEditor();\n\t}\n}\n\nexport class OpenNextRecentlyUsedEditorInGroupAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.openNextRecentlyUsedEditorInGroup',\n\t\t\ttitle: localize2('openNextRecentlyUsedEditorInGroup', 'Open Next Recently Used Editor In Group'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\n\t\thistoryService.openNextRecentlyUsedEditor(editorGroupsService.activeGroup.id);\n\t}\n}\n\nexport class OpenPreviousRecentlyUsedEditorInGroupAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.openPreviousRecentlyUsedEditorInGroup',\n\t\t\ttitle: localize2('openPreviousRecentlyUsedEditorInGroup', 'Open Previous Recently Used Editor In Group'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst historyService = accessor.get(IHistoryService);\n\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\n\t\thistoryService.openPreviouslyUsedEditor(editorGroupsService.activeGroup.id);\n\t}\n}\n\nexport class ClearEditorHistoryAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.clearEditorHistory',\n\t\t\ttitle: localize2('clearEditorHistory', 'Clear Editor History'),\n\t\t\tf1: true\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst dialogService = accessor.get(IDialogService);\n\t\tconst historyService = accessor.get(IHistoryService);\n\n\t\t// Ask for confirmation\n\t\tconst { confirmed } = await dialogService.confirm({\n\t\t\ttype: 'warning',\n\t\t\tmessage: localize('confirmClearEditorHistoryMessage', \"Do you want to clear the history of recently opened editors?\"),\n\t\t\tdetail: localize('confirmClearDetail', \"This action is irreversible!\"),\n\t\t\tprimaryButton: localize({ key: 'clearButtonLabel', comment: ['&& denotes a mnemonic'] }, \"&&Clear\")\n\t\t});\n\n\t\tif (!confirmed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clear editor history\n\t\thistoryService.clear();\n\t}\n}\n\nexport class MoveEditorLeftInGroupAction extends ExecuteCommandAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.moveEditorLeftInGroup',\n\t\t\ttitle: localize2('moveEditorLeft', 'Move Editor Left'),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.PageUp,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.LeftArrow)\n\t\t\t\t}\n\t\t\t},\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, MOVE_ACTIVE_EDITOR_COMMAND_ID, { to: 'left' } satisfies ActiveEditorMoveCopyArguments);\n\t}\n}\n\nexport class MoveEditorRightInGroupAction extends ExecuteCommandAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.moveEditorRightInGroup',\n\t\t\ttitle: localize2('moveEditorRight', 'Move Editor Right'),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.PageDown,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.RightArrow)\n\t\t\t\t}\n\t\t\t},\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, MOVE_ACTIVE_EDITOR_COMMAND_ID, { to: 'right' } satisfies ActiveEditorMoveCopyArguments);\n\t}\n}\n\nexport class MoveEditorToPreviousGroupAction extends ExecuteCommandAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.moveEditorToPreviousGroup',\n\t\t\ttitle: localize2('moveEditorToPreviousGroup', 'Move Editor into Previous Group'),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.LeftArrow,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.WinCtrl | KeyCode.LeftArrow\n\t\t\t\t}\n\t\t\t},\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t}, MOVE_ACTIVE_EDITOR_COMMAND_ID, { to: 'previous', by: 'group' } satisfies ActiveEditorMoveCopyArguments);\n\t}\n}\n\nexport class MoveEditorToNextGroupAction extends ExecuteCommandAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.moveEditorToNextGroup',\n\t\t\ttitle: localize2('moveEditorToNextGroup', 'Move Editor into Next Group'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.RightArrow,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.WinCtrl | KeyCode.RightArrow\n\t\t\t\t}\n\t\t\t},\n\t\t\tcategory: Categories.View\n\t\t}, MOVE_ACTIVE_EDITOR_COMMAND_ID, { to: 'next', by: 'group' } satisfies ActiveEditorMoveCopyArguments);\n\t}\n}\n\nexport class MoveEditorToAboveGroupAction extends ExecuteCommandAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.moveEditorToAboveGroup',\n\t\t\ttitle: localize2('moveEditorToAboveGroup', 'Move Editor into Group Above'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, MOVE_ACTIVE_EDITOR_COMMAND_ID, { to: 'up', by: 'group' } satisfies ActiveEditorMoveCopyArguments);\n\t}\n}\n\nexport class MoveEditorToBelowGroupAction extends ExecuteCommandAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.moveEditorToBelowGroup',\n\t\t\ttitle: localize2('moveEditorToBelowGroup', 'Move Editor into Group Below'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, MOVE_ACTIVE_EDITOR_COMMAND_ID, { to: 'down', by: 'group' } satisfies ActiveEditorMoveCopyArguments);\n\t}\n}\n\nexport class MoveEditorToLeftGroupAction extends ExecuteCommandAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.moveEditorToLeftGroup',\n\t\t\ttitle: localize2('moveEditorToLeftGroup', 'Move Editor into Left Group'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, MOVE_ACTIVE_EDITOR_COMMAND_ID, { to: 'left', by: 'group' } satisfies ActiveEditorMoveCopyArguments);\n\t}\n}\n\nexport class MoveEditorToRightGroupAction extends ExecuteCommandAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.moveEditorToRightGroup',\n\t\t\ttitle: localize2('moveEditorToRightGroup', 'Move Editor into Right Group'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, MOVE_ACTIVE_EDITOR_COMMAND_ID, { to: 'right', by: 'group' } satisfies ActiveEditorMoveCopyArguments);\n\t}\n}\n\nexport class MoveEditorToFirstGroupAction extends ExecuteCommandAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.moveEditorToFirstGroup',\n\t\t\ttitle: localize2('moveEditorToFirstGroup', 'Move Editor into First Group'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.Digit1,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.WinCtrl | KeyCode.Digit1\n\t\t\t\t}\n\t\t\t},\n\t\t\tcategory: Categories.View\n\t\t}, MOVE_ACTIVE_EDITOR_COMMAND_ID, { to: 'first', by: 'group' } satisfies ActiveEditorMoveCopyArguments);\n\t}\n}\n\nexport class MoveEditorToLastGroupAction extends ExecuteCommandAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.moveEditorToLastGroup',\n\t\t\ttitle: localize2('moveEditorToLastGroup', 'Move Editor into Last Group'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.Digit9,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.WinCtrl | KeyCode.Digit9\n\t\t\t\t}\n\t\t\t},\n\t\t\tcategory: Categories.View\n\t\t}, MOVE_ACTIVE_EDITOR_COMMAND_ID, { to: 'last', by: 'group' } satisfies ActiveEditorMoveCopyArguments);\n\t}\n}\n\nexport class SplitEditorToPreviousGroupAction extends ExecuteCommandAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.splitEditorToPreviousGroup',\n\t\t\ttitle: localize2('splitEditorToPreviousGroup', 'Split Editor into Previous Group'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, COPY_ACTIVE_EDITOR_COMMAND_ID, { to: 'previous', by: 'group' } satisfies ActiveEditorMoveCopyArguments);\n\t}\n}\n\nexport class SplitEditorToNextGroupAction extends ExecuteCommandAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.splitEditorToNextGroup',\n\t\t\ttitle: localize2('splitEditorToNextGroup', 'Split Editor into Next Group'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, COPY_ACTIVE_EDITOR_COMMAND_ID, { to: 'next', by: 'group' } satisfies ActiveEditorMoveCopyArguments);\n\t}\n}\n\nexport class SplitEditorToAboveGroupAction extends ExecuteCommandAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.splitEditorToAboveGroup',\n\t\t\ttitle: localize2('splitEditorToAboveGroup', 'Split Editor into Group Above'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, COPY_ACTIVE_EDITOR_COMMAND_ID, { to: 'up', by: 'group' } satisfies ActiveEditorMoveCopyArguments);\n\t}\n}\n\nexport class SplitEditorToBelowGroupAction extends ExecuteCommandAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.splitEditorToBelowGroup',\n\t\t\ttitle: localize2('splitEditorToBelowGroup', 'Split Editor into Group Below'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, COPY_ACTIVE_EDITOR_COMMAND_ID, { to: 'down', by: 'group' } satisfies ActiveEditorMoveCopyArguments);\n\t}\n}\n\nexport class SplitEditorToLeftGroupAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = 'workbench.action.splitEditorToLeftGroup';\n\tstatic readonly LABEL = localize('splitEditorToLeftGroup', \"Split Editor into Left Group\");\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.splitEditorToLeftGroup',\n\t\t\ttitle: localize2('splitEditorToLeftGroup', \"Split Editor into Left Group\"),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, COPY_ACTIVE_EDITOR_COMMAND_ID, { to: 'left', by: 'group' } satisfies ActiveEditorMoveCopyArguments);\n\t}\n}\n\nexport class SplitEditorToRightGroupAction extends ExecuteCommandAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.splitEditorToRightGroup',\n\t\t\ttitle: localize2('splitEditorToRightGroup', 'Split Editor into Right Group'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, COPY_ACTIVE_EDITOR_COMMAND_ID, { to: 'right', by: 'group' } satisfies ActiveEditorMoveCopyArguments);\n\t}\n}\n\nexport class SplitEditorToFirstGroupAction extends ExecuteCommandAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.splitEditorToFirstGroup',\n\t\t\ttitle: localize2('splitEditorToFirstGroup', 'Split Editor into First Group'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, COPY_ACTIVE_EDITOR_COMMAND_ID, { to: 'first', by: 'group' } satisfies ActiveEditorMoveCopyArguments);\n\t}\n}\n\nexport class SplitEditorToLastGroupAction extends ExecuteCommandAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.splitEditorToLastGroup',\n\t\t\ttitle: localize2('splitEditorToLastGroup', 'Split Editor into Last Group'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, COPY_ACTIVE_EDITOR_COMMAND_ID, { to: 'last', by: 'group' } satisfies ActiveEditorMoveCopyArguments);\n\t}\n}\n\nexport class EditorLayoutSingleAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = 'workbench.action.editorLayoutSingle';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: EditorLayoutSingleAction.ID,\n\t\t\ttitle: localize2('editorLayoutSingle', 'Single Column Editor Layout'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, LAYOUT_EDITOR_GROUPS_COMMAND_ID, { groups: [{}], orientation: GroupOrientation.HORIZONTAL } satisfies EditorGroupLayout);\n\t}\n}\n\nexport class EditorLayoutTwoColumnsAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = 'workbench.action.editorLayoutTwoColumns';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: EditorLayoutTwoColumnsAction.ID,\n\t\t\ttitle: localize2('editorLayoutTwoColumns', 'Two Columns Editor Layout'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, LAYOUT_EDITOR_GROUPS_COMMAND_ID, { groups: [{}, {}], orientation: GroupOrientation.HORIZONTAL } satisfies EditorGroupLayout);\n\t}\n}\n\nexport class EditorLayoutThreeColumnsAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = 'workbench.action.editorLayoutThreeColumns';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: EditorLayoutThreeColumnsAction.ID,\n\t\t\ttitle: localize2('editorLayoutThreeColumns', 'Three Columns Editor Layout'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, LAYOUT_EDITOR_GROUPS_COMMAND_ID, { groups: [{}, {}, {}], orientation: GroupOrientation.HORIZONTAL } satisfies EditorGroupLayout);\n\t}\n}\n\nexport class EditorLayoutTwoRowsAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = 'workbench.action.editorLayoutTwoRows';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: EditorLayoutTwoRowsAction.ID,\n\t\t\ttitle: localize2('editorLayoutTwoRows', 'Two Rows Editor Layout'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, LAYOUT_EDITOR_GROUPS_COMMAND_ID, { groups: [{}, {}], orientation: GroupOrientation.VERTICAL } satisfies EditorGroupLayout);\n\t}\n}\n\nexport class EditorLayoutThreeRowsAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = 'workbench.action.editorLayoutThreeRows';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: EditorLayoutThreeRowsAction.ID,\n\t\t\ttitle: localize2('editorLayoutThreeRows', 'Three Rows Editor Layout'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, LAYOUT_EDITOR_GROUPS_COMMAND_ID, { groups: [{}, {}, {}], orientation: GroupOrientation.VERTICAL } satisfies EditorGroupLayout);\n\t}\n}\n\nexport class EditorLayoutTwoByTwoGridAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = 'workbench.action.editorLayoutTwoByTwoGrid';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: EditorLayoutTwoByTwoGridAction.ID,\n\t\t\ttitle: localize2('editorLayoutTwoByTwoGrid', 'Grid Editor Layout (2x2)'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, LAYOUT_EDITOR_GROUPS_COMMAND_ID, { groups: [{ groups: [{}, {}] }, { groups: [{}, {}] }], orientation: GroupOrientation.HORIZONTAL } satisfies EditorGroupLayout);\n\t}\n}\n\nexport class EditorLayoutTwoColumnsBottomAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = 'workbench.action.editorLayoutTwoColumnsBottom';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: EditorLayoutTwoColumnsBottomAction.ID,\n\t\t\ttitle: localize2('editorLayoutTwoColumnsBottom', 'Two Columns Bottom Editor Layout'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, LAYOUT_EDITOR_GROUPS_COMMAND_ID, { groups: [{}, { groups: [{}, {}] }], orientation: GroupOrientation.VERTICAL } satisfies EditorGroupLayout);\n\t}\n}\n\nexport class EditorLayoutTwoRowsRightAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = 'workbench.action.editorLayoutTwoRowsRight';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: EditorLayoutTwoRowsRightAction.ID,\n\t\t\ttitle: localize2('editorLayoutTwoRowsRight', 'Two Rows Right Editor Layout'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, LAYOUT_EDITOR_GROUPS_COMMAND_ID, { groups: [{}, { groups: [{}, {}] }], orientation: GroupOrientation.HORIZONTAL } satisfies EditorGroupLayout);\n\t}\n}\n\nabstract class AbstractCreateEditorGroupAction extends Action2 {\n\n\tconstructor(\n\t\tdesc: Readonly<IAction2Options>,\n\t\tprivate readonly direction: GroupDirection\n\t) {\n\t\tsuper(desc);\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\n\t\t// We are about to create a new empty editor group. We make an opiniated\n\t\t// decision here whether to focus that new editor group or not based\n\t\t// on what is currently focused. If focus is outside the editor area not\n\t\t// in the <body>, we do not focus, with the rationale that a user might\n\t\t// have focus on a tree/list with the intention to pick an element to\n\t\t// open in the new group from that tree/list.\n\t\t//\n\t\t// If focus is inside the editor area, we want to prevent the situation\n\t\t// of an editor having keyboard focus in an inactive editor group\n\t\t// (see https://github.com/microsoft/vscode/issues/189256)\n\n\t\tconst activeDocument = getActiveDocument();\n\t\tconst focusNewGroup = layoutService.hasFocus(Parts.EDITOR_PART) || activeDocument.activeElement === activeDocument.body;\n\n\t\tconst group = editorGroupService.addGroup(editorGroupService.activeGroup, this.direction);\n\t\teditorGroupService.activateGroup(group);\n\n\t\tif (focusNewGroup) {\n\t\t\tgroup.focus();\n\t\t}\n\t}\n}\n\nexport class NewEditorGroupLeftAction extends AbstractCreateEditorGroupAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.newGroupLeft',\n\t\t\ttitle: localize2('newGroupLeft', 'New Editor Group to the Left'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, GroupDirection.LEFT);\n\t}\n}\n\nexport class NewEditorGroupRightAction extends AbstractCreateEditorGroupAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.newGroupRight',\n\t\t\ttitle: localize2('newGroupRight', 'New Editor Group to the Right'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, GroupDirection.RIGHT);\n\t}\n}\n\nexport class NewEditorGroupAboveAction extends AbstractCreateEditorGroupAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.newGroupAbove',\n\t\t\ttitle: localize2('newGroupAbove', 'New Editor Group Above'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, GroupDirection.UP);\n\t}\n}\n\nexport class NewEditorGroupBelowAction extends AbstractCreateEditorGroupAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.newGroupBelow',\n\t\t\ttitle: localize2('newGroupBelow', 'New Editor Group Below'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t}, GroupDirection.DOWN);\n\t}\n}\n\nexport class ToggleEditorTypeAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.toggleEditorType',\n\t\t\ttitle: localize2('toggleEditorType', 'Toggle Editor Type'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t\tprecondition: ActiveEditorAvailableEditorIdsContext\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorResolverService = accessor.get(IEditorResolverService);\n\n\t\tconst activeEditorPane = editorService.activeEditorPane;\n\t\tif (!activeEditorPane) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst activeEditorResource = EditorResourceAccessor.getCanonicalUri(activeEditorPane.input);\n\t\tif (!activeEditorResource) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editorIds = editorResolverService.getEditors(activeEditorResource).map(editor => editor.id).filter(id => id !== activeEditorPane.input.editorId);\n\t\tif (editorIds.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Replace the current editor with the next avaiable editor type\n\t\tawait editorService.replaceEditors([\n\t\t\t{\n\t\t\t\teditor: activeEditorPane.input,\n\t\t\t\treplacement: {\n\t\t\t\t\tresource: activeEditorResource,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\toverride: editorIds[0]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t], activeEditorPane.group);\n\t}\n}\n\nexport class ReOpenInTextEditorAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.reopenTextEditor',\n\t\t\ttitle: localize2('reopenTextEditor', 'Reopen Editor With Text Editor'),\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t\tprecondition: ActiveEditorAvailableEditorIdsContext\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tconst activeEditorPane = editorService.activeEditorPane;\n\t\tif (!activeEditorPane) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst activeEditorResource = EditorResourceAccessor.getCanonicalUri(activeEditorPane.input);\n\t\tif (!activeEditorResource) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Replace the current editor with the text editor\n\t\tawait editorService.replaceEditors([\n\t\t\t{\n\t\t\t\teditor: activeEditorPane.input,\n\t\t\t\treplacement: {\n\t\t\t\t\tresource: activeEditorResource,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\toverride: DEFAULT_EDITOR_ASSOCIATION.id\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t], activeEditorPane.group);\n\t}\n}\n\n\nabstract class BaseMoveCopyEditorToNewWindowAction extends Action2 {\n\n\tconstructor(\n\t\tid: string,\n\t\ttitle: ICommandActionTitle,\n\t\tkeybinding: Omit<IKeybindingRule, 'id'> | undefined,\n\t\tprivate readonly move: boolean\n\t) {\n\t\tsuper({\n\t\t\tid,\n\t\t\ttitle,\n\t\t\tcategory: Categories.View,\n\t\t\tprecondition: ActiveEditorContext,\n\t\t\tkeybinding,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor, ...args: unknown[]) {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\tconst resolvedContext = resolveCommandsContext(args, accessor.get(IEditorService), editorGroupService, accessor.get(IListService));\n\t\tif (!resolvedContext.groupedEditors.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst auxiliaryEditorPart = await editorGroupService.createAuxiliaryEditorPart();\n\n\t\t// only single group supported for move/copy for now\n\t\tconst { group, editors } = resolvedContext.groupedEditors[0];\n\t\tconst options = { preserveFocus: resolvedContext.preserveFocus };\n\t\tconst editorsWithOptions = editors.map(editor => ({ editor, options }));\n\n\t\tif (this.move) {\n\t\t\tgroup.moveEditors(editorsWithOptions, auxiliaryEditorPart.activeGroup);\n\t\t} else {\n\t\t\tgroup.copyEditors(editorsWithOptions, auxiliaryEditorPart.activeGroup);\n\t\t}\n\n\t\tauxiliaryEditorPart.activeGroup.focus();\n\t}\n}\n\nexport class MoveEditorToNewWindowAction extends BaseMoveCopyEditorToNewWindowAction {\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tMOVE_EDITOR_INTO_NEW_WINDOW_COMMAND_ID,\n\t\t\t{\n\t\t\t\t...localize2('moveEditorToNewWindow', \"Move Editor into New Window\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miMoveEditorToNewWindow', comment: ['&& denotes a mnemonic'] }, \"&&Move Editor into New Window\"),\n\t\t\t},\n\t\t\tundefined,\n\t\t\ttrue\n\t\t);\n\t}\n}\n\nexport class CopyEditorToNewindowAction extends BaseMoveCopyEditorToNewWindowAction {\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tCOPY_EDITOR_INTO_NEW_WINDOW_COMMAND_ID,\n\t\t\t{\n\t\t\t\t...localize2('copyEditorToNewWindow', \"Copy Editor into New Window\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miCopyEditorToNewWindow', comment: ['&& denotes a mnemonic'] }, \"&&Copy Editor into New Window\"),\n\t\t\t},\n\t\t\t{ primary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyO), weight: KeybindingWeight.WorkbenchContrib },\n\t\t\tfalse\n\t\t);\n\t}\n}\n\nabstract class BaseMoveCopyEditorGroupToNewWindowAction extends Action2 {\n\n\tconstructor(\n\t\tid: string,\n\t\ttitle: ICommandActionTitle,\n\t\tprivate readonly move: boolean\n\t) {\n\t\tsuper({\n\t\t\tid,\n\t\t\ttitle,\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\tconst activeGroup = editorGroupService.activeGroup;\n\n\t\tconst auxiliaryEditorPart = await editorGroupService.createAuxiliaryEditorPart();\n\n\t\teditorGroupService.mergeGroup(activeGroup, auxiliaryEditorPart.activeGroup, {\n\t\t\tmode: this.move ? MergeGroupMode.MOVE_EDITORS : MergeGroupMode.COPY_EDITORS\n\t\t});\n\n\t\tauxiliaryEditorPart.activeGroup.focus();\n\t}\n}\n\nexport class MoveEditorGroupToNewWindowAction extends BaseMoveCopyEditorGroupToNewWindowAction {\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tMOVE_EDITOR_GROUP_INTO_NEW_WINDOW_COMMAND_ID,\n\t\t\t{\n\t\t\t\t...localize2('moveEditorGroupToNewWindow', \"Move Editor Group into New Window\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miMoveEditorGroupToNewWindow', comment: ['&& denotes a mnemonic'] }, \"&&Move Editor Group into New Window\"),\n\t\t\t},\n\t\t\ttrue\n\t\t);\n\t}\n}\n\nexport class CopyEditorGroupToNewWindowAction extends BaseMoveCopyEditorGroupToNewWindowAction {\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tCOPY_EDITOR_GROUP_INTO_NEW_WINDOW_COMMAND_ID,\n\t\t\t{\n\t\t\t\t...localize2('copyEditorGroupToNewWindow', \"Copy Editor Group into New Window\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miCopyEditorGroupToNewWindow', comment: ['&& denotes a mnemonic'] }, \"&&Copy Editor Group into New Window\"),\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\t}\n}\n\nexport class RestoreEditorsToMainWindowAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.restoreEditorsToMainWindow',\n\t\t\ttitle: {\n\t\t\t\t...localize2('restoreEditorsToMainWindow', \"Restore Editors into Main Window\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miRestoreEditorsToMainWindow', comment: ['&& denotes a mnemonic'] }, \"&&Restore Editors into Main Window\"),\n\t\t\t},\n\t\t\tf1: true,\n\t\t\tprecondition: IsAuxiliaryWindowFocusedContext,\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\teditorGroupService.mergeAllGroups(editorGroupService.mainPart.activeGroup);\n\t}\n}\n\nexport class NewEmptyEditorWindowAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: NEW_EMPTY_EDITOR_WINDOW_COMMAND_ID,\n\t\t\ttitle: {\n\t\t\t\t...localize2('newEmptyEditorWindow', \"New Empty Editor Window\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miNewEmptyEditorWindow', comment: ['&& denotes a mnemonic'] }, \"&&New Empty Editor Window\"),\n\t\t\t},\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tconst auxiliaryEditorPart = await editorGroupService.createAuxiliaryEditorPart();\n\t\tauxiliaryEditorPart.activeGroup.focus();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
