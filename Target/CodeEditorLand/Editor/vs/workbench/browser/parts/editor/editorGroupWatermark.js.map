{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/editor/editorGroupWatermark.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../../nls.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { isMacintosh, isWeb, OS } from '../../../../base/common/platform.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { IWorkspaceContextService, WorkbenchState } from '../../../../platform/workspace/common/workspace.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { append, clearNode, $, h } from '../../../../base/browser/dom.js';\nimport { KeybindingLabel } from '../../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, ContextKeyExpression, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { defaultKeybindingLabelStyles } from '../../../../platform/theme/browser/defaultStyles.js';\nimport { editorForeground, registerColor, transparent } from '../../../../platform/theme/common/colorRegistry.js';\n\nregisterColor('editorWatermark.foreground', { dark: transparent(editorForeground, 0.6), light: transparent(editorForeground, 0.68), hcDark: editorForeground, hcLight: editorForeground }, localize('editorLineHighlight', 'Foreground color for the labels in the editor watermark.'));\n\ninterface WatermarkEntry {\n\treadonly text: string;\n\treadonly id: string;\n\treadonly mac?: boolean;\n\treadonly when?: ContextKeyExpression;\n}\n\nconst showCommands: WatermarkEntry = { text: localize('watermark.showCommands', \"Show All Commands\"), id: 'workbench.action.showCommands' };\nconst quickAccess: WatermarkEntry = { text: localize('watermark.quickAccess', \"Go to File\"), id: 'workbench.action.quickOpen' };\nconst openFileNonMacOnly: WatermarkEntry = { text: localize('watermark.openFile', \"Open File\"), id: 'workbench.action.files.openFile', mac: false };\nconst openFolderNonMacOnly: WatermarkEntry = { text: localize('watermark.openFolder', \"Open Folder\"), id: 'workbench.action.files.openFolder', mac: false };\nconst openFileOrFolderMacOnly: WatermarkEntry = { text: localize('watermark.openFileFolder', \"Open File or Folder\"), id: 'workbench.action.files.openFileFolder', mac: true };\nconst openRecent: WatermarkEntry = { text: localize('watermark.openRecent', \"Open Recent\"), id: 'workbench.action.openRecent' };\nconst newUntitledFileMacOnly: WatermarkEntry = { text: localize('watermark.newUntitledFile', \"New Untitled Text File\"), id: 'workbench.action.files.newUntitledFile', mac: true };\nconst findInFiles: WatermarkEntry = { text: localize('watermark.findInFiles', \"Find in Files\"), id: 'workbench.action.findInFiles' };\nconst toggleTerminal: WatermarkEntry = { text: localize({ key: 'watermark.toggleTerminal', comment: ['toggle is a verb here'] }, \"Toggle Terminal\"), id: 'workbench.action.terminal.toggleTerminal', when: ContextKeyExpr.equals('terminalProcessSupported', true) };\nconst startDebugging: WatermarkEntry = { text: localize('watermark.startDebugging', \"Start Debugging\"), id: 'workbench.action.debug.start', when: ContextKeyExpr.equals('terminalProcessSupported', true) };\nconst toggleFullscreen: WatermarkEntry = { text: localize({ key: 'watermark.toggleFullscreen', comment: ['toggle is a verb here'] }, \"Toggle Full Screen\"), id: 'workbench.action.toggleFullScreen' };\nconst showSettings: WatermarkEntry = { text: localize('watermark.showSettings', \"Show Settings\"), id: 'workbench.action.openSettings' };\n\nconst noFolderEntries = [\n\tshowCommands,\n\topenFileNonMacOnly,\n\topenFolderNonMacOnly,\n\topenFileOrFolderMacOnly,\n\topenRecent,\n\tnewUntitledFileMacOnly\n];\n\nconst folderEntries = [\n\tshowCommands,\n\tquickAccess,\n\tfindInFiles,\n\tstartDebugging,\n\ttoggleTerminal,\n\ttoggleFullscreen,\n\tshowSettings\n];\n\nexport class EditorGroupWatermark extends Disposable {\n\tprivate readonly shortcuts: HTMLElement;\n\tprivate readonly transientDisposables = this._register(new DisposableStore());\n\tprivate enabled: boolean = false;\n\tprivate workbenchState: WorkbenchState;\n\tprivate keybindingLabels = new Set<KeybindingLabel>();\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\n\t\tconst elements = h('.editor-group-watermark', [\n\t\t\th('.letterpress'),\n\t\t\th('.shortcuts@shortcuts'),\n\t\t]);\n\n\t\tappend(container, elements.root);\n\t\tthis.shortcuts = elements.shortcuts;\n\n\t\tthis.registerListeners();\n\n\t\tthis.workbenchState = contextService.getWorkbenchState();\n\t\tthis.render();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('workbench.tips.enabled')) {\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.contextService.onDidChangeWorkbenchState(workbenchState => {\n\t\t\tif (this.workbenchState === workbenchState) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.workbenchState = workbenchState;\n\t\t\tthis.render();\n\t\t}));\n\n\t\tconst allEntriesWhenClauses = [...noFolderEntries, ...folderEntries].filter(entry => entry.when !== undefined).map(entry => entry.when!);\n\t\tconst allKeys = new Set<string>();\n\t\tallEntriesWhenClauses.forEach(when => when.keys().forEach(key => allKeys.add(key)));\n\t\tthis._register(this.contextKeyService.onDidChangeContext(e => {\n\t\t\tif (e.affectsSome(allKeys)) {\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate render(): void {\n\t\tconst enabled = this.configurationService.getValue<boolean>('workbench.tips.enabled');\n\n\t\tif (enabled === this.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.enabled = enabled;\n\t\tthis.clear();\n\n\t\tif (!enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst box = append(this.shortcuts, $('.watermark-box'));\n\t\tconst folder = this.workbenchState !== WorkbenchState.EMPTY;\n\t\tconst selected = (folder ? folderEntries : noFolderEntries)\n\t\t\t.filter(entry => !('when' in entry) || this.contextKeyService.contextMatchesRules(entry.when))\n\t\t\t.filter(entry => !('mac' in entry) || entry.mac === (isMacintosh && !isWeb))\n\t\t\t.filter(entry => !!CommandsRegistry.getCommand(entry.id))\n\t\t\t.filter(entry => !!this.keybindingService.lookupKeybinding(entry.id));\n\n\t\tconst update = () => {\n\t\t\tclearNode(box);\n\t\t\tthis.keybindingLabels.forEach(label => label.dispose());\n\t\t\tthis.keybindingLabels.clear();\n\n\t\t\tfor (const entry of selected) {\n\t\t\t\tconst keys = this.keybindingService.lookupKeybinding(entry.id);\n\t\t\t\tif (!keys) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst dl = append(box, $('dl'));\n\t\t\t\tconst dt = append(dl, $('dt'));\n\t\t\t\tdt.textContent = entry.text;\n\t\t\t\tconst dd = append(dl, $('dd'));\n\t\t\t\tconst label = new KeybindingLabel(dd, OS, { renderUnboundKeybindings: true, ...defaultKeybindingLabelStyles });\n\t\t\t\tlabel.set(keys);\n\t\t\t\tthis.keybindingLabels.add(label);\n\t\t\t}\n\t\t};\n\n\t\tupdate();\n\t\tthis.transientDisposables.add(this.keybindingService.onDidUpdateKeybindings(update));\n\t}\n\n\tprivate clear(): void {\n\t\tclearNode(this.shortcuts);\n\t\tthis.transientDisposables.clear();\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.clear();\n\t\tthis.keybindingLabels.forEach(label => label.dispose());\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
