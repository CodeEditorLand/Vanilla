{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/editor/editor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { GroupIdentifier, IWorkbenchEditorConfiguration, IEditorIdentifier, IEditorCloseEvent, IEditorPartOptions, IEditorPartOptionsChangeEvent, SideBySideEditor, EditorCloseContext, IEditorPane, IEditorPartLimitOptions, IEditorPartDecorationOptions, IEditorWillOpenEvent } from '../../../common/editor.js';\nimport { EditorInput } from '../../../common/editor/editorInput.js';\nimport { IEditorGroup, GroupDirection, IMergeGroupOptions, GroupsOrder, GroupsArrangement, IAuxiliaryEditorPart, IEditorPart } from '../../../services/editor/common/editorGroupsService.js';\nimport { IDisposable } from '../../../../base/common/lifecycle.js';\nimport { Dimension } from '../../../../base/browser/dom.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { IConfigurationChangeEvent, IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { ISerializableView } from '../../../../base/browser/ui/grid/grid.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { isObject } from '../../../../base/common/types.js';\nimport { IEditorOptions } from '../../../../platform/editor/common/editor.js';\nimport { IWindowsConfiguration } from '../../../../platform/window/common/window.js';\nimport { BooleanVerifier, EnumVerifier, NumberVerifier, ObjectVerifier, SetVerifier, verifyObject } from '../../../../base/common/verifier.js';\nimport { IAuxiliaryWindowOpenOptions } from '../../../services/auxiliaryWindow/browser/auxiliaryWindowService.js';\nimport { ContextKeyValue, IContextKey, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\n\nexport interface IEditorPartCreationOptions {\n\treadonly restorePreviousState: boolean;\n}\n\nexport const DEFAULT_EDITOR_MIN_DIMENSIONS = new Dimension(220, 70);\nexport const DEFAULT_EDITOR_MAX_DIMENSIONS = new Dimension(Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY);\n\nexport const DEFAULT_EDITOR_PART_OPTIONS: IEditorPartOptions = {\n\tshowTabs: 'multiple',\n\thighlightModifiedTabs: false,\n\ttabActionLocation: 'right',\n\ttabActionCloseVisibility: true,\n\ttabActionUnpinVisibility: true,\n\talwaysShowEditorActions: false,\n\ttabSizing: 'fit',\n\ttabSizingFixedMinWidth: 50,\n\ttabSizingFixedMaxWidth: 160,\n\tpinnedTabSizing: 'normal',\n\tpinnedTabsOnSeparateRow: false,\n\ttabHeight: 'default',\n\tpreventPinnedEditorClose: 'keyboardAndMouse',\n\ttitleScrollbarSizing: 'default',\n\tfocusRecentEditorAfterClose: true,\n\tshowIcons: true,\n\thasIcons: true, // 'vs-seti' is our default icon theme\n\tenablePreview: true,\n\topenPositioning: 'right',\n\topenSideBySideDirection: 'right',\n\tcloseEmptyGroups: true,\n\tlabelFormat: 'default',\n\tsplitSizing: 'auto',\n\tsplitOnDragAndDrop: true,\n\tdragToOpenWindow: true,\n\tcenteredLayoutFixedWidth: false,\n\tdoubleClickTabToToggleEditorGroupSizes: 'expand',\n\teditorActionsLocation: 'default',\n\twrapTabs: false,\n\tenablePreviewFromQuickOpen: false,\n\tscrollToSwitchTabs: false,\n\tenablePreviewFromCodeNavigation: false,\n\tcloseOnFileDelete: false,\n\tmouseBackForwardToNavigate: true,\n\trestoreViewState: true,\n\tsplitInGroupLayout: 'horizontal',\n\trevealIfOpen: false,\n\t// Properties that are Objects have to be defined as getters\n\t// to ensure no consumer modifies the default values\n\tget limit(): IEditorPartLimitOptions { return { enabled: false, value: 10, perEditorGroup: false, excludeDirty: false }; },\n\tget decorations(): IEditorPartDecorationOptions { return { badges: true, colors: true }; },\n\tget autoLockGroups(): Set<string> { return new Set<string>(); }\n};\n\nexport function impactsEditorPartOptions(event: IConfigurationChangeEvent): boolean {\n\treturn event.affectsConfiguration('workbench.editor') || event.affectsConfiguration('workbench.iconTheme') || event.affectsConfiguration('window.density');\n}\n\nexport function getEditorPartOptions(configurationService: IConfigurationService, themeService: IThemeService): IEditorPartOptions {\n\tconst options = {\n\t\t...DEFAULT_EDITOR_PART_OPTIONS,\n\t\thasIcons: themeService.getFileIconTheme().hasFileIcons\n\t};\n\n\tconst config = configurationService.getValue<IWorkbenchEditorConfiguration>();\n\tif (config?.workbench?.editor) {\n\n\t\t// Assign all primitive configuration over\n\t\tObject.assign(options, config.workbench.editor);\n\n\t\t// Special handle array types and convert to Set\n\t\tif (isObject(config.workbench.editor.autoLockGroups)) {\n\t\t\toptions.autoLockGroups = DEFAULT_EDITOR_PART_OPTIONS.autoLockGroups;\n\n\t\t\tfor (const [editorId, enablement] of Object.entries(config.workbench.editor.autoLockGroups)) {\n\t\t\t\tif (enablement === true) {\n\t\t\t\t\toptions.autoLockGroups.add(editorId);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\toptions.autoLockGroups = DEFAULT_EDITOR_PART_OPTIONS.autoLockGroups;\n\t\t}\n\t}\n\n\tconst windowConfig = configurationService.getValue<IWindowsConfiguration>();\n\tif (windowConfig?.window?.density?.editorTabHeight) {\n\t\toptions.tabHeight = windowConfig.window.density.editorTabHeight;\n\t}\n\n\treturn validateEditorPartOptions(options);\n}\n\nfunction validateEditorPartOptions(options: IEditorPartOptions): IEditorPartOptions {\n\n\t// Migrate: Show tabs (config migration kicks in very late and can cause flicker otherwise)\n\tif (typeof options.showTabs === 'boolean') {\n\t\toptions.showTabs = options.showTabs ? 'multiple' : 'single';\n\t}\n\n\treturn verifyObject<IEditorPartOptions>({\n\t\t'wrapTabs': new BooleanVerifier(DEFAULT_EDITOR_PART_OPTIONS['wrapTabs']),\n\t\t'scrollToSwitchTabs': new BooleanVerifier(DEFAULT_EDITOR_PART_OPTIONS['scrollToSwitchTabs']),\n\t\t'highlightModifiedTabs': new BooleanVerifier(DEFAULT_EDITOR_PART_OPTIONS['highlightModifiedTabs']),\n\t\t'tabActionCloseVisibility': new BooleanVerifier(DEFAULT_EDITOR_PART_OPTIONS['tabActionCloseVisibility']),\n\t\t'tabActionUnpinVisibility': new BooleanVerifier(DEFAULT_EDITOR_PART_OPTIONS['tabActionUnpinVisibility']),\n\t\t'alwaysShowEditorActions': new BooleanVerifier(DEFAULT_EDITOR_PART_OPTIONS['alwaysShowEditorActions']),\n\t\t'pinnedTabsOnSeparateRow': new BooleanVerifier(DEFAULT_EDITOR_PART_OPTIONS['pinnedTabsOnSeparateRow']),\n\t\t'focusRecentEditorAfterClose': new BooleanVerifier(DEFAULT_EDITOR_PART_OPTIONS['focusRecentEditorAfterClose']),\n\t\t'showIcons': new BooleanVerifier(DEFAULT_EDITOR_PART_OPTIONS['showIcons']),\n\t\t'enablePreview': new BooleanVerifier(DEFAULT_EDITOR_PART_OPTIONS['enablePreview']),\n\t\t'enablePreviewFromQuickOpen': new BooleanVerifier(DEFAULT_EDITOR_PART_OPTIONS['enablePreviewFromQuickOpen']),\n\t\t'enablePreviewFromCodeNavigation': new BooleanVerifier(DEFAULT_EDITOR_PART_OPTIONS['enablePreviewFromCodeNavigation']),\n\t\t'closeOnFileDelete': new BooleanVerifier(DEFAULT_EDITOR_PART_OPTIONS['closeOnFileDelete']),\n\t\t'closeEmptyGroups': new BooleanVerifier(DEFAULT_EDITOR_PART_OPTIONS['closeEmptyGroups']),\n\t\t'revealIfOpen': new BooleanVerifier(DEFAULT_EDITOR_PART_OPTIONS['revealIfOpen']),\n\t\t'mouseBackForwardToNavigate': new BooleanVerifier(DEFAULT_EDITOR_PART_OPTIONS['mouseBackForwardToNavigate']),\n\t\t'restoreViewState': new BooleanVerifier(DEFAULT_EDITOR_PART_OPTIONS['restoreViewState']),\n\t\t'splitOnDragAndDrop': new BooleanVerifier(DEFAULT_EDITOR_PART_OPTIONS['splitOnDragAndDrop']),\n\t\t'dragToOpenWindow': new BooleanVerifier(DEFAULT_EDITOR_PART_OPTIONS['dragToOpenWindow']),\n\t\t'centeredLayoutFixedWidth': new BooleanVerifier(DEFAULT_EDITOR_PART_OPTIONS['centeredLayoutFixedWidth']),\n\t\t'hasIcons': new BooleanVerifier(DEFAULT_EDITOR_PART_OPTIONS['hasIcons']),\n\n\t\t'tabSizingFixedMinWidth': new NumberVerifier(DEFAULT_EDITOR_PART_OPTIONS['tabSizingFixedMinWidth']),\n\t\t'tabSizingFixedMaxWidth': new NumberVerifier(DEFAULT_EDITOR_PART_OPTIONS['tabSizingFixedMaxWidth']),\n\n\t\t'showTabs': new EnumVerifier(DEFAULT_EDITOR_PART_OPTIONS['showTabs'], ['multiple', 'single', 'none']),\n\t\t'tabActionLocation': new EnumVerifier(DEFAULT_EDITOR_PART_OPTIONS['tabActionLocation'], ['left', 'right']),\n\t\t'tabSizing': new EnumVerifier(DEFAULT_EDITOR_PART_OPTIONS['tabSizing'], ['fit', 'shrink', 'fixed']),\n\t\t'pinnedTabSizing': new EnumVerifier(DEFAULT_EDITOR_PART_OPTIONS['pinnedTabSizing'], ['normal', 'compact', 'shrink']),\n\t\t'tabHeight': new EnumVerifier(DEFAULT_EDITOR_PART_OPTIONS['tabHeight'], ['default', 'compact']),\n\t\t'preventPinnedEditorClose': new EnumVerifier(DEFAULT_EDITOR_PART_OPTIONS['preventPinnedEditorClose'], ['keyboardAndMouse', 'keyboard', 'mouse', 'never']),\n\t\t'titleScrollbarSizing': new EnumVerifier(DEFAULT_EDITOR_PART_OPTIONS['titleScrollbarSizing'], ['default', 'large']),\n\t\t'openPositioning': new EnumVerifier(DEFAULT_EDITOR_PART_OPTIONS['openPositioning'], ['left', 'right', 'first', 'last']),\n\t\t'openSideBySideDirection': new EnumVerifier(DEFAULT_EDITOR_PART_OPTIONS['openSideBySideDirection'], ['right', 'down']),\n\t\t'labelFormat': new EnumVerifier(DEFAULT_EDITOR_PART_OPTIONS['labelFormat'], ['default', 'short', 'medium', 'long']),\n\t\t'splitInGroupLayout': new EnumVerifier(DEFAULT_EDITOR_PART_OPTIONS['splitInGroupLayout'], ['vertical', 'horizontal']),\n\t\t'splitSizing': new EnumVerifier(DEFAULT_EDITOR_PART_OPTIONS['splitSizing'], ['distribute', 'split', 'auto']),\n\t\t'doubleClickTabToToggleEditorGroupSizes': new EnumVerifier(DEFAULT_EDITOR_PART_OPTIONS['doubleClickTabToToggleEditorGroupSizes'], ['maximize', 'expand', 'off']),\n\t\t'editorActionsLocation': new EnumVerifier(DEFAULT_EDITOR_PART_OPTIONS['editorActionsLocation'], ['default', 'titleBar', 'hidden']),\n\t\t'autoLockGroups': new SetVerifier<string>(DEFAULT_EDITOR_PART_OPTIONS['autoLockGroups']),\n\n\t\t'limit': new ObjectVerifier<IEditorPartLimitOptions>(DEFAULT_EDITOR_PART_OPTIONS['limit'], {\n\t\t\t'enabled': new BooleanVerifier(DEFAULT_EDITOR_PART_OPTIONS['limit']['enabled']),\n\t\t\t'value': new NumberVerifier(DEFAULT_EDITOR_PART_OPTIONS['limit']['value']),\n\t\t\t'perEditorGroup': new BooleanVerifier(DEFAULT_EDITOR_PART_OPTIONS['limit']['perEditorGroup']),\n\t\t\t'excludeDirty': new BooleanVerifier(DEFAULT_EDITOR_PART_OPTIONS['limit']['excludeDirty'])\n\t\t}),\n\t\t'decorations': new ObjectVerifier<IEditorPartDecorationOptions>(DEFAULT_EDITOR_PART_OPTIONS['decorations'], {\n\t\t\t'badges': new BooleanVerifier(DEFAULT_EDITOR_PART_OPTIONS['decorations']['badges']),\n\t\t\t'colors': new BooleanVerifier(DEFAULT_EDITOR_PART_OPTIONS['decorations']['colors'])\n\t\t}),\n\t}, options);\n}\n\n/**\n * A helper to access editor groups across all opened editor parts.\n */\nexport interface IEditorPartsView {\n\n\treadonly mainPart: IEditorGroupsView;\n\tregisterPart(part: IEditorPart): IDisposable;\n\n\treadonly activeGroup: IEditorGroupView;\n\treadonly groups: IEditorGroupView[];\n\tgetGroup(identifier: GroupIdentifier): IEditorGroupView | undefined;\n\tgetGroups(order?: GroupsOrder): IEditorGroupView[];\n\n\treadonly count: number;\n\n\tcreateAuxiliaryEditorPart(options?: IAuxiliaryWindowOpenOptions): Promise<IAuxiliaryEditorPart>;\n\n\tbind<T extends ContextKeyValue>(contextKey: RawContextKey<T>, group: IEditorGroupView): IContextKey<T>;\n}\n\n/**\n * A helper to access and mutate editor groups within an editor part.\n */\nexport interface IEditorGroupsView {\n\n\treadonly windowId: number;\n\n\treadonly groups: IEditorGroupView[];\n\treadonly activeGroup: IEditorGroupView;\n\n\treadonly partOptions: IEditorPartOptions;\n\treadonly onDidChangeEditorPartOptions: Event<IEditorPartOptionsChangeEvent>;\n\n\treadonly onDidVisibilityChange: Event<boolean>;\n\n\tgetGroup(identifier: GroupIdentifier): IEditorGroupView | undefined;\n\tgetGroups(order: GroupsOrder): IEditorGroupView[];\n\n\tactivateGroup(identifier: IEditorGroupView | GroupIdentifier, preserveWindowOrder?: boolean): IEditorGroupView;\n\trestoreGroup(identifier: IEditorGroupView | GroupIdentifier): IEditorGroupView;\n\n\taddGroup(location: IEditorGroupView | GroupIdentifier, direction: GroupDirection, groupToCopy?: IEditorGroupView): IEditorGroupView;\n\tmergeGroup(group: IEditorGroupView | GroupIdentifier, target: IEditorGroupView | GroupIdentifier, options?: IMergeGroupOptions): boolean;\n\n\tmoveGroup(group: IEditorGroupView | GroupIdentifier, location: IEditorGroupView | GroupIdentifier, direction: GroupDirection): IEditorGroupView;\n\tcopyGroup(group: IEditorGroupView | GroupIdentifier, location: IEditorGroupView | GroupIdentifier, direction: GroupDirection): IEditorGroupView;\n\n\tremoveGroup(group: IEditorGroupView | GroupIdentifier, preserveFocus?: boolean): void;\n\n\tarrangeGroups(arrangement: GroupsArrangement, target?: IEditorGroupView | GroupIdentifier): void;\n\ttoggleMaximizeGroup(group?: IEditorGroupView | GroupIdentifier): void;\n\ttoggleExpandGroup(group?: IEditorGroupView | GroupIdentifier): void;\n}\n\nexport interface IEditorGroupTitleHeight {\n\n\t/**\n\t * The overall height of the editor group title control.\n\t */\n\treadonly total: number;\n\n\t/**\n\t * The height offset to e.g. use when drawing drop overlays.\n\t * This number may be smaller than `height` if the title control\n\t * decides to have an `offset` that is within the title control\n\t * (e.g. when breadcrumbs are enabled).\n\t */\n\treadonly offset: number;\n}\n\nexport interface IEditorGroupViewOptions {\n\n\t/**\n\t * Whether the editor group should receive keyboard focus\n\t * after creation or not.\n\t */\n\treadonly preserveFocus?: boolean;\n}\n\n/**\n * A helper to access and mutate an editor group within an editor part.\n */\nexport interface IEditorGroupView extends IDisposable, ISerializableView, IEditorGroup {\n\n\treadonly onDidFocus: Event<void>;\n\n\treadonly onWillOpenEditor: Event<IEditorWillOpenEvent>;\n\treadonly onDidOpenEditorFail: Event<EditorInput>;\n\n\treadonly onDidCloseEditor: Event<IEditorCloseEvent>;\n\n\treadonly groupsView: IEditorGroupsView;\n\n\t/**\n\t * A promise that resolves when the group has been restored.\n\t *\n\t * For a group with active editor, the promise will resolve\n\t * when the active editor has finished to resolve.\n\t */\n\treadonly whenRestored: Promise<void>;\n\n\treadonly titleHeight: IEditorGroupTitleHeight;\n\n\treadonly disposed: boolean;\n\n\tsetActive(isActive: boolean): void;\n\n\tnotifyIndexChanged(newIndex: number): void;\n\tnotifyLabelChanged(newLabel: string): void;\n\n\topenEditor(editor: EditorInput, options?: IEditorOptions, internalOptions?: IInternalEditorOpenOptions): Promise<IEditorPane | undefined>;\n\n\trelayout(): void;\n}\n\nexport function fillActiveEditorViewState(group: IEditorGroup, expectedActiveEditor?: EditorInput, presetOptions?: IEditorOptions): IEditorOptions {\n\tif (!expectedActiveEditor || !group.activeEditor || expectedActiveEditor.matches(group.activeEditor)) {\n\t\tconst options: IEditorOptions = {\n\t\t\t...presetOptions,\n\t\t\tviewState: group.activeEditorPane?.getViewState()\n\t\t};\n\n\t\treturn options;\n\t}\n\n\treturn presetOptions || Object.create(null);\n}\n\n/**\n * A sub-interface of IEditorService to hide some workbench-core specific\n * events from clients.\n */\nexport interface EditorServiceImpl extends IEditorService {\n\n\t/**\n\t * Emitted when an editor failed to open.\n\t */\n\treadonly onDidOpenEditorFail: Event<IEditorIdentifier>;\n\n\t/**\n\t * Emitted when the list of most recently active editors change.\n\t */\n\treadonly onDidMostRecentlyActiveEditorsChange: Event<void>;\n}\n\nexport interface IInternalEditorTitleControlOptions {\n\n\t/**\n\t * A hint to defer updating the title control for perf reasons.\n\t * The caller must ensure to update the title control then.\n\t */\n\treadonly skipTitleUpdate?: boolean;\n}\n\nexport interface IInternalEditorOpenOptions extends IInternalEditorTitleControlOptions {\n\n\t/**\n\t * Whether to consider a side by side editor as matching\n\t * when figuring out if the editor to open is already\n\t * opened or not. By default, side by side editors will\n\t * not be considered as matching, even if the editor is\n\t * opened in one of the sides.\n\t */\n\treadonly supportSideBySide?: SideBySideEditor.ANY | SideBySideEditor.BOTH;\n\n\t/**\n\t * When set to `true`, pass DOM focus into the tab control.\n\t */\n\treadonly focusTabControl?: boolean;\n\n\t/**\n\t * When set to `true`, will not attempt to move the window to\n\t * the top that the editor opens in.\n\t */\n\treadonly preserveWindowOrder?: boolean;\n\n\t/**\n\t * Inactive editors to select after opening the active selected editor.\n\t */\n\treadonly inactiveSelection?: EditorInput[];\n}\n\nexport interface IInternalEditorCloseOptions extends IInternalEditorTitleControlOptions {\n\n\t/**\n\t * A hint that the editor is closed due to an error opening. This can be\n\t * used to optimize how error toasts are appearing if any.\n\t */\n\treadonly fromError?: boolean;\n\n\t/**\n\t * Additional context as to why an editor is closed.\n\t */\n\treadonly context?: EditorCloseContext;\n}\n\nexport interface IInternalMoveCopyOptions extends IInternalEditorOpenOptions {\n\n\t/**\n\t * Whether to close the editor at the source or keep it.\n\t */\n\treadonly keepCopy?: boolean;\n}\n"],
  "mappings": "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",
  "names": []
}
