{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/editor/editor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Dimension } from \"../../../../base/browser/dom.js\";\nimport type { ISerializableView } from \"../../../../base/browser/ui/grid/grid.js\";\nimport type { Event } from \"../../../../base/common/event.js\";\nimport type { IDisposable } from \"../../../../base/common/lifecycle.js\";\nimport { isObject } from \"../../../../base/common/types.js\";\nimport {\n\tBooleanVerifier,\n\tEnumVerifier,\n\tNumberVerifier,\n\tObjectVerifier,\n\tSetVerifier,\n\tverifyObject,\n} from \"../../../../base/common/verifier.js\";\nimport type {\n\tIConfigurationChangeEvent,\n\tIConfigurationService,\n} from \"../../../../platform/configuration/common/configuration.js\";\nimport type {\n\tContextKeyValue,\n\tIContextKey,\n\tRawContextKey,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport type { IEditorOptions } from \"../../../../platform/editor/common/editor.js\";\nimport type { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport type { IWindowsConfiguration } from \"../../../../platform/window/common/window.js\";\nimport type {\n\tEditorCloseContext,\n\tGroupIdentifier,\n\tIEditorCloseEvent,\n\tIEditorIdentifier,\n\tIEditorPane,\n\tIEditorPartDecorationOptions,\n\tIEditorPartLimitOptions,\n\tIEditorPartOptions,\n\tIEditorPartOptionsChangeEvent,\n\tIEditorWillOpenEvent,\n\tIWorkbenchEditorConfiguration,\n\tSideBySideEditor,\n} from \"../../../common/editor.js\";\nimport type { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport type { IAuxiliaryWindowOpenOptions } from \"../../../services/auxiliaryWindow/browser/auxiliaryWindowService.js\";\nimport type {\n\tGroupDirection,\n\tGroupsArrangement,\n\tGroupsOrder,\n\tIAuxiliaryEditorPart,\n\tIEditorGroup,\n\tIEditorPart,\n\tIMergeGroupOptions,\n} from \"../../../services/editor/common/editorGroupsService.js\";\nimport type { IEditorService } from \"../../../services/editor/common/editorService.js\";\n\nexport interface IEditorPartCreationOptions {\n\treadonly restorePreviousState: boolean;\n}\n\nexport const DEFAULT_EDITOR_MIN_DIMENSIONS = new Dimension(220, 70);\nexport const DEFAULT_EDITOR_MAX_DIMENSIONS = new Dimension(\n\tNumber.POSITIVE_INFINITY,\n\tNumber.POSITIVE_INFINITY,\n);\n\nexport const DEFAULT_EDITOR_PART_OPTIONS: IEditorPartOptions = {\n\tshowTabs: \"multiple\",\n\thighlightModifiedTabs: false,\n\ttabActionLocation: \"right\",\n\ttabActionCloseVisibility: true,\n\ttabActionUnpinVisibility: true,\n\talwaysShowEditorActions: false,\n\ttabSizing: \"fit\",\n\ttabSizingFixedMinWidth: 50,\n\ttabSizingFixedMaxWidth: 160,\n\tpinnedTabSizing: \"normal\",\n\tpinnedTabsOnSeparateRow: false,\n\ttabHeight: \"default\",\n\tpreventPinnedEditorClose: \"keyboardAndMouse\",\n\ttitleScrollbarSizing: \"default\",\n\tfocusRecentEditorAfterClose: true,\n\tshowIcons: true,\n\thasIcons: true, // 'vs-seti' is our default icon theme\n\tenablePreview: true,\n\topenPositioning: \"right\",\n\topenSideBySideDirection: \"right\",\n\tcloseEmptyGroups: true,\n\tlabelFormat: \"default\",\n\tsplitSizing: \"auto\",\n\tsplitOnDragAndDrop: true,\n\tdragToOpenWindow: true,\n\tcenteredLayoutFixedWidth: false,\n\tdoubleClickTabToToggleEditorGroupSizes: \"expand\",\n\teditorActionsLocation: \"default\",\n\twrapTabs: false,\n\tenablePreviewFromQuickOpen: false,\n\tscrollToSwitchTabs: false,\n\tenablePreviewFromCodeNavigation: false,\n\tcloseOnFileDelete: false,\n\tmouseBackForwardToNavigate: true,\n\trestoreViewState: true,\n\tsplitInGroupLayout: \"horizontal\",\n\trevealIfOpen: false,\n\t// Properties that are Objects have to be defined as getters\n\t// to ensure no consumer modifies the default values\n\tget limit(): IEditorPartLimitOptions {\n\t\treturn {\n\t\t\tenabled: false,\n\t\t\tvalue: 10,\n\t\t\tperEditorGroup: false,\n\t\t\texcludeDirty: false,\n\t\t};\n\t},\n\tget decorations(): IEditorPartDecorationOptions {\n\t\treturn { badges: true, colors: true };\n\t},\n\tget autoLockGroups(): Set<string> {\n\t\treturn new Set<string>();\n\t},\n};\n\nexport function impactsEditorPartOptions(\n\tevent: IConfigurationChangeEvent,\n): boolean {\n\treturn (\n\t\tevent.affectsConfiguration(\"workbench.editor\") ||\n\t\tevent.affectsConfiguration(\"workbench.iconTheme\") ||\n\t\tevent.affectsConfiguration(\"window.density\")\n\t);\n}\n\nexport function getEditorPartOptions(\n\tconfigurationService: IConfigurationService,\n\tthemeService: IThemeService,\n): IEditorPartOptions {\n\tconst options = {\n\t\t...DEFAULT_EDITOR_PART_OPTIONS,\n\t\thasIcons: themeService.getFileIconTheme().hasFileIcons,\n\t};\n\n\tconst config =\n\t\tconfigurationService.getValue<IWorkbenchEditorConfiguration>();\n\tif (config?.workbench?.editor) {\n\t\t// Assign all primitive configuration over\n\t\tObject.assign(options, config.workbench.editor);\n\n\t\t// Special handle array types and convert to Set\n\t\tif (isObject(config.workbench.editor.autoLockGroups)) {\n\t\t\toptions.autoLockGroups = DEFAULT_EDITOR_PART_OPTIONS.autoLockGroups;\n\n\t\t\tfor (const [editorId, enablement] of Object.entries(\n\t\t\t\tconfig.workbench.editor.autoLockGroups,\n\t\t\t)) {\n\t\t\t\tif (enablement === true) {\n\t\t\t\t\toptions.autoLockGroups.add(editorId);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\toptions.autoLockGroups = DEFAULT_EDITOR_PART_OPTIONS.autoLockGroups;\n\t\t}\n\t}\n\n\tconst windowConfig = configurationService.getValue<IWindowsConfiguration>();\n\tif (windowConfig?.window?.density?.editorTabHeight) {\n\t\toptions.tabHeight = windowConfig.window.density.editorTabHeight;\n\t}\n\n\treturn validateEditorPartOptions(options);\n}\n\nfunction validateEditorPartOptions(\n\toptions: IEditorPartOptions,\n): IEditorPartOptions {\n\t// Migrate: Show tabs (config migration kicks in very late and can cause flicker otherwise)\n\tif (typeof options.showTabs === \"boolean\") {\n\t\toptions.showTabs = options.showTabs ? \"multiple\" : \"single\";\n\t}\n\n\treturn verifyObject<IEditorPartOptions>(\n\t\t{\n\t\t\twrapTabs: new BooleanVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"wrapTabs\"],\n\t\t\t),\n\t\t\tscrollToSwitchTabs: new BooleanVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"scrollToSwitchTabs\"],\n\t\t\t),\n\t\t\thighlightModifiedTabs: new BooleanVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"highlightModifiedTabs\"],\n\t\t\t),\n\t\t\ttabActionCloseVisibility: new BooleanVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"tabActionCloseVisibility\"],\n\t\t\t),\n\t\t\ttabActionUnpinVisibility: new BooleanVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"tabActionUnpinVisibility\"],\n\t\t\t),\n\t\t\talwaysShowEditorActions: new BooleanVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"alwaysShowEditorActions\"],\n\t\t\t),\n\t\t\tpinnedTabsOnSeparateRow: new BooleanVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"pinnedTabsOnSeparateRow\"],\n\t\t\t),\n\t\t\tfocusRecentEditorAfterClose: new BooleanVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"focusRecentEditorAfterClose\"],\n\t\t\t),\n\t\t\tshowIcons: new BooleanVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"showIcons\"],\n\t\t\t),\n\t\t\tenablePreview: new BooleanVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"enablePreview\"],\n\t\t\t),\n\t\t\tenablePreviewFromQuickOpen: new BooleanVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"enablePreviewFromQuickOpen\"],\n\t\t\t),\n\t\t\tenablePreviewFromCodeNavigation: new BooleanVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"enablePreviewFromCodeNavigation\"],\n\t\t\t),\n\t\t\tcloseOnFileDelete: new BooleanVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"closeOnFileDelete\"],\n\t\t\t),\n\t\t\tcloseEmptyGroups: new BooleanVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"closeEmptyGroups\"],\n\t\t\t),\n\t\t\trevealIfOpen: new BooleanVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"revealIfOpen\"],\n\t\t\t),\n\t\t\tmouseBackForwardToNavigate: new BooleanVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"mouseBackForwardToNavigate\"],\n\t\t\t),\n\t\t\trestoreViewState: new BooleanVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"restoreViewState\"],\n\t\t\t),\n\t\t\tsplitOnDragAndDrop: new BooleanVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"splitOnDragAndDrop\"],\n\t\t\t),\n\t\t\tdragToOpenWindow: new BooleanVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"dragToOpenWindow\"],\n\t\t\t),\n\t\t\tcenteredLayoutFixedWidth: new BooleanVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"centeredLayoutFixedWidth\"],\n\t\t\t),\n\t\t\thasIcons: new BooleanVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"hasIcons\"],\n\t\t\t),\n\n\t\t\ttabSizingFixedMinWidth: new NumberVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"tabSizingFixedMinWidth\"],\n\t\t\t),\n\t\t\ttabSizingFixedMaxWidth: new NumberVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"tabSizingFixedMaxWidth\"],\n\t\t\t),\n\n\t\t\tshowTabs: new EnumVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"showTabs\"],\n\t\t\t\t[\"multiple\", \"single\", \"none\"],\n\t\t\t),\n\t\t\ttabActionLocation: new EnumVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"tabActionLocation\"],\n\t\t\t\t[\"left\", \"right\"],\n\t\t\t),\n\t\t\ttabSizing: new EnumVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"tabSizing\"],\n\t\t\t\t[\"fit\", \"shrink\", \"fixed\"],\n\t\t\t),\n\t\t\tpinnedTabSizing: new EnumVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"pinnedTabSizing\"],\n\t\t\t\t[\"normal\", \"compact\", \"shrink\"],\n\t\t\t),\n\t\t\ttabHeight: new EnumVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"tabHeight\"],\n\t\t\t\t[\"default\", \"compact\"],\n\t\t\t),\n\t\t\tpreventPinnedEditorClose: new EnumVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"preventPinnedEditorClose\"],\n\t\t\t\t[\"keyboardAndMouse\", \"keyboard\", \"mouse\", \"never\"],\n\t\t\t),\n\t\t\ttitleScrollbarSizing: new EnumVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"titleScrollbarSizing\"],\n\t\t\t\t[\"default\", \"large\"],\n\t\t\t),\n\t\t\topenPositioning: new EnumVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"openPositioning\"],\n\t\t\t\t[\"left\", \"right\", \"first\", \"last\"],\n\t\t\t),\n\t\t\topenSideBySideDirection: new EnumVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"openSideBySideDirection\"],\n\t\t\t\t[\"right\", \"down\"],\n\t\t\t),\n\t\t\tlabelFormat: new EnumVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"labelFormat\"],\n\t\t\t\t[\"default\", \"short\", \"medium\", \"long\"],\n\t\t\t),\n\t\t\tsplitInGroupLayout: new EnumVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"splitInGroupLayout\"],\n\t\t\t\t[\"vertical\", \"horizontal\"],\n\t\t\t),\n\t\t\tsplitSizing: new EnumVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"splitSizing\"],\n\t\t\t\t[\"distribute\", \"split\", \"auto\"],\n\t\t\t),\n\t\t\tdoubleClickTabToToggleEditorGroupSizes: new EnumVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\n\t\t\t\t\t\"doubleClickTabToToggleEditorGroupSizes\"\n\t\t\t\t],\n\t\t\t\t[\"maximize\", \"expand\", \"off\"],\n\t\t\t),\n\t\t\teditorActionsLocation: new EnumVerifier(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"editorActionsLocation\"],\n\t\t\t\t[\"default\", \"titleBar\", \"hidden\"],\n\t\t\t),\n\t\t\tautoLockGroups: new SetVerifier<string>(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"autoLockGroups\"],\n\t\t\t),\n\n\t\t\tlimit: new ObjectVerifier<IEditorPartLimitOptions>(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"limit\"],\n\t\t\t\t{\n\t\t\t\t\tenabled: new BooleanVerifier(\n\t\t\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"limit\"][\"enabled\"],\n\t\t\t\t\t),\n\t\t\t\t\tvalue: new NumberVerifier(\n\t\t\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"limit\"][\"value\"],\n\t\t\t\t\t),\n\t\t\t\t\tperEditorGroup: new BooleanVerifier(\n\t\t\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"limit\"][\"perEditorGroup\"],\n\t\t\t\t\t),\n\t\t\t\t\texcludeDirty: new BooleanVerifier(\n\t\t\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"limit\"][\"excludeDirty\"],\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t),\n\t\t\tdecorations: new ObjectVerifier<IEditorPartDecorationOptions>(\n\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"decorations\"],\n\t\t\t\t{\n\t\t\t\t\tbadges: new BooleanVerifier(\n\t\t\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"decorations\"][\"badges\"],\n\t\t\t\t\t),\n\t\t\t\t\tcolors: new BooleanVerifier(\n\t\t\t\t\t\tDEFAULT_EDITOR_PART_OPTIONS[\"decorations\"][\"colors\"],\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t),\n\t\t},\n\t\toptions,\n\t);\n}\n\n/**\n * A helper to access editor groups across all opened editor parts.\n */\nexport interface IEditorPartsView {\n\treadonly mainPart: IEditorGroupsView;\n\tregisterPart(part: IEditorPart): IDisposable;\n\n\treadonly activeGroup: IEditorGroupView;\n\treadonly groups: IEditorGroupView[];\n\tgetGroup(identifier: GroupIdentifier): IEditorGroupView | undefined;\n\tgetGroups(order?: GroupsOrder): IEditorGroupView[];\n\n\treadonly count: number;\n\n\tcreateAuxiliaryEditorPart(\n\t\toptions?: IAuxiliaryWindowOpenOptions,\n\t): Promise<IAuxiliaryEditorPart>;\n\n\tbind<T extends ContextKeyValue>(\n\t\tcontextKey: RawContextKey<T>,\n\t\tgroup: IEditorGroupView,\n\t): IContextKey<T>;\n}\n\n/**\n * A helper to access and mutate editor groups within an editor part.\n */\nexport interface IEditorGroupsView {\n\treadonly windowId: number;\n\n\treadonly groups: IEditorGroupView[];\n\treadonly activeGroup: IEditorGroupView;\n\n\treadonly partOptions: IEditorPartOptions;\n\treadonly onDidChangeEditorPartOptions: Event<IEditorPartOptionsChangeEvent>;\n\n\treadonly onDidVisibilityChange: Event<boolean>;\n\n\tgetGroup(identifier: GroupIdentifier): IEditorGroupView | undefined;\n\tgetGroups(order: GroupsOrder): IEditorGroupView[];\n\n\tactivateGroup(\n\t\tidentifier: IEditorGroupView | GroupIdentifier,\n\t\tpreserveWindowOrder?: boolean,\n\t): IEditorGroupView;\n\trestoreGroup(\n\t\tidentifier: IEditorGroupView | GroupIdentifier,\n\t): IEditorGroupView;\n\n\taddGroup(\n\t\tlocation: IEditorGroupView | GroupIdentifier,\n\t\tdirection: GroupDirection,\n\t\tgroupToCopy?: IEditorGroupView,\n\t): IEditorGroupView;\n\tmergeGroup(\n\t\tgroup: IEditorGroupView | GroupIdentifier,\n\t\ttarget: IEditorGroupView | GroupIdentifier,\n\t\toptions?: IMergeGroupOptions,\n\t): boolean;\n\n\tmoveGroup(\n\t\tgroup: IEditorGroupView | GroupIdentifier,\n\t\tlocation: IEditorGroupView | GroupIdentifier,\n\t\tdirection: GroupDirection,\n\t): IEditorGroupView;\n\tcopyGroup(\n\t\tgroup: IEditorGroupView | GroupIdentifier,\n\t\tlocation: IEditorGroupView | GroupIdentifier,\n\t\tdirection: GroupDirection,\n\t): IEditorGroupView;\n\n\tremoveGroup(\n\t\tgroup: IEditorGroupView | GroupIdentifier,\n\t\tpreserveFocus?: boolean,\n\t): void;\n\n\tarrangeGroups(\n\t\tarrangement: GroupsArrangement,\n\t\ttarget?: IEditorGroupView | GroupIdentifier,\n\t): void;\n\ttoggleMaximizeGroup(group?: IEditorGroupView | GroupIdentifier): void;\n\ttoggleExpandGroup(group?: IEditorGroupView | GroupIdentifier): void;\n}\n\nexport interface IEditorGroupTitleHeight {\n\t/**\n\t * The overall height of the editor group title control.\n\t */\n\treadonly total: number;\n\n\t/**\n\t * The height offset to e.g. use when drawing drop overlays.\n\t * This number may be smaller than `height` if the title control\n\t * decides to have an `offset` that is within the title control\n\t * (e.g. when breadcrumbs are enabled).\n\t */\n\treadonly offset: number;\n}\n\nexport interface IEditorGroupViewOptions {\n\t/**\n\t * Whether the editor group should receive keyboard focus\n\t * after creation or not.\n\t */\n\treadonly preserveFocus?: boolean;\n}\n\n/**\n * A helper to access and mutate an editor group within an editor part.\n */\nexport interface IEditorGroupView\n\textends IDisposable,\n\t\tISerializableView,\n\t\tIEditorGroup {\n\treadonly onDidFocus: Event<void>;\n\n\treadonly onWillOpenEditor: Event<IEditorWillOpenEvent>;\n\treadonly onDidOpenEditorFail: Event<EditorInput>;\n\n\treadonly onDidCloseEditor: Event<IEditorCloseEvent>;\n\n\treadonly groupsView: IEditorGroupsView;\n\n\t/**\n\t * A promise that resolves when the group has been restored.\n\t *\n\t * For a group with active editor, the promise will resolve\n\t * when the active editor has finished to resolve.\n\t */\n\treadonly whenRestored: Promise<void>;\n\n\treadonly titleHeight: IEditorGroupTitleHeight;\n\n\treadonly disposed: boolean;\n\n\tsetActive(isActive: boolean): void;\n\n\tnotifyIndexChanged(newIndex: number): void;\n\tnotifyLabelChanged(newLabel: string): void;\n\n\topenEditor(\n\t\teditor: EditorInput,\n\t\toptions?: IEditorOptions,\n\t\tinternalOptions?: IInternalEditorOpenOptions,\n\t): Promise<IEditorPane | undefined>;\n\n\trelayout(): void;\n}\n\nexport function fillActiveEditorViewState(\n\tgroup: IEditorGroup,\n\texpectedActiveEditor?: EditorInput,\n\tpresetOptions?: IEditorOptions,\n): IEditorOptions {\n\tif (\n\t\t!expectedActiveEditor ||\n\t\t!group.activeEditor ||\n\t\texpectedActiveEditor.matches(group.activeEditor)\n\t) {\n\t\tconst options: IEditorOptions = {\n\t\t\t...presetOptions,\n\t\t\tviewState: group.activeEditorPane?.getViewState(),\n\t\t};\n\n\t\treturn options;\n\t}\n\n\treturn presetOptions || Object.create(null);\n}\n\n/**\n * A sub-interface of IEditorService to hide some workbench-core specific\n * events from clients.\n */\nexport interface EditorServiceImpl extends IEditorService {\n\t/**\n\t * Emitted when an editor failed to open.\n\t */\n\treadonly onDidOpenEditorFail: Event<IEditorIdentifier>;\n\n\t/**\n\t * Emitted when the list of most recently active editors change.\n\t */\n\treadonly onDidMostRecentlyActiveEditorsChange: Event<void>;\n}\n\nexport interface IInternalEditorTitleControlOptions {\n\t/**\n\t * A hint to defer updating the title control for perf reasons.\n\t * The caller must ensure to update the title control then.\n\t */\n\treadonly skipTitleUpdate?: boolean;\n}\n\nexport interface IInternalEditorOpenOptions\n\textends IInternalEditorTitleControlOptions {\n\t/**\n\t * Whether to consider a side by side editor as matching\n\t * when figuring out if the editor to open is already\n\t * opened or not. By default, side by side editors will\n\t * not be considered as matching, even if the editor is\n\t * opened in one of the sides.\n\t */\n\treadonly supportSideBySide?: SideBySideEditor.ANY | SideBySideEditor.BOTH;\n\n\t/**\n\t * When set to `true`, pass DOM focus into the tab control.\n\t */\n\treadonly focusTabControl?: boolean;\n\n\t/**\n\t * When set to `true`, will not attempt to move the window to\n\t * the top that the editor opens in.\n\t */\n\treadonly preserveWindowOrder?: boolean;\n\n\t/**\n\t * Inactive editors to select after opening the active selected editor.\n\t */\n\treadonly inactiveSelection?: EditorInput[];\n}\n\nexport interface IInternalEditorCloseOptions\n\textends IInternalEditorTitleControlOptions {\n\t/**\n\t * A hint that the editor is closed due to an error opening. This can be\n\t * used to optimize how error toasts are appearing if any.\n\t */\n\treadonly fromError?: boolean;\n\n\t/**\n\t * Additional context as to why an editor is closed.\n\t */\n\treadonly context?: EditorCloseContext;\n}\n\nexport interface IInternalMoveCopyOptions extends IInternalEditorOpenOptions {\n\t/**\n\t * Whether to close the editor at the source or keep it.\n\t */\n\treadonly keepCopy?: boolean;\n}\n"],
  "mappings": "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",
  "names": []
}
