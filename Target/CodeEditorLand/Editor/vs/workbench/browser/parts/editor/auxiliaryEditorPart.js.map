{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/editor/auxiliaryEditorPart.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onDidChangeFullscreen } from \"../../../../base/browser/browser.js\";\nimport { hide, show } from \"../../../../base/browser/dom.js\";\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { isNative } from \"../../../../base/common/platform.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ServiceCollection } from \"../../../../platform/instantiation/common/serviceCollection.js\";\nimport { IStorageService } from \"../../../../platform/storage/common/storage.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport { hasCustomTitlebar } from \"../../../../platform/window/common/window.js\";\nimport {\n\ttype IAuxiliaryWindowOpenOptions,\n\tIAuxiliaryWindowService,\n} from \"../../../services/auxiliaryWindow/browser/auxiliaryWindowService.js\";\nimport {\n\tGroupDirection,\n\tGroupsOrder,\n\ttype IAuxiliaryEditorPart,\n} from \"../../../services/editor/common/editorGroupsService.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { IHostService } from \"../../../services/host/browser/host.js\";\nimport {\n\tIWorkbenchLayoutService,\n\tshouldShowCustomTitleBar,\n} from \"../../../services/layout/browser/layoutService.js\";\nimport { ILifecycleService } from \"../../../services/lifecycle/common/lifecycle.js\";\nimport { IStatusbarService } from \"../../../services/statusbar/browser/statusbar.js\";\nimport { ITitleService } from \"../../../services/title/browser/titleService.js\";\nimport type { IAuxiliaryTitlebarPart } from \"../titlebar/titlebarPart.js\";\nimport { WindowTitle } from \"../titlebar/windowTitle.js\";\nimport type { IEditorGroupView, IEditorPartsView } from \"./editor.js\";\nimport { EditorPart, type IEditorPartUIState } from \"./editorPart.js\";\n\nexport interface IAuxiliaryEditorPartOpenOptions\n\textends IAuxiliaryWindowOpenOptions {\n\treadonly state?: IEditorPartUIState;\n}\n\nexport interface ICreateAuxiliaryEditorPartResult {\n\treadonly part: AuxiliaryEditorPartImpl;\n\treadonly instantiationService: IInstantiationService;\n\treadonly disposables: DisposableStore;\n}\n\nexport class AuxiliaryEditorPart {\n\tprivate static STATUS_BAR_VISIBILITY = \"workbench.statusBar.visible\";\n\n\tconstructor(\n\t\tprivate readonly editorPartsView: IEditorPartsView,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IAuxiliaryWindowService private readonly auxiliaryWindowService: IAuxiliaryWindowService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IStatusbarService private readonly statusbarService: IStatusbarService,\n\t\t@ITitleService private readonly titleService: ITitleService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService\n\t) {\n\t}\n\n\tasync create(\n\t\tlabel: string,\n\t\toptions?: IAuxiliaryEditorPartOpenOptions,\n\t): Promise<ICreateAuxiliaryEditorPartResult> {\n\t\tfunction computeEditorPartHeightOffset(): number {\n\t\t\tlet editorPartHeightOffset = 0;\n\n\t\t\tif (statusbarVisible) {\n\t\t\t\teditorPartHeightOffset += statusbarPart.height;\n\t\t\t}\n\n\t\t\tif (titlebarPart && titlebarVisible) {\n\t\t\t\teditorPartHeightOffset += titlebarPart.height;\n\t\t\t}\n\n\t\t\treturn editorPartHeightOffset;\n\t\t}\n\n\t\tfunction updateStatusbarVisibility(fromEvent: boolean): void {\n\t\t\tif (statusbarVisible) {\n\t\t\t\tshow(statusbarPart.container);\n\t\t\t} else {\n\t\t\t\thide(statusbarPart.container);\n\t\t\t}\n\n\t\t\tif (fromEvent) {\n\t\t\t\tauxiliaryWindow.layout();\n\t\t\t}\n\t\t}\n\n\t\tfunction updateTitlebarVisibility(fromEvent: boolean): void {\n\t\t\tif (!titlebarPart) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (titlebarVisible) {\n\t\t\t\tshow(titlebarPart.container);\n\t\t\t} else {\n\t\t\t\thide(titlebarPart.container);\n\t\t\t}\n\n\t\t\tif (fromEvent) {\n\t\t\t\tauxiliaryWindow.layout();\n\t\t\t}\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\n\t\t// Auxiliary Window\n\t\tconst auxiliaryWindow = disposables.add(\n\t\t\tawait this.auxiliaryWindowService.open(options),\n\t\t);\n\n\t\t// Editor Part\n\t\tconst editorPartContainer = document.createElement(\"div\");\n\t\teditorPartContainer.classList.add(\"part\", \"editor\");\n\t\teditorPartContainer.setAttribute(\"role\", \"main\");\n\t\teditorPartContainer.style.position = \"relative\";\n\t\tauxiliaryWindow.container.appendChild(editorPartContainer);\n\n\t\tconst editorPart = disposables.add(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tAuxiliaryEditorPartImpl,\n\t\t\t\tauxiliaryWindow.window.vscodeWindowId,\n\t\t\t\tthis.editorPartsView,\n\t\t\t\toptions?.state,\n\t\t\t\tlabel,\n\t\t\t),\n\t\t);\n\t\tdisposables.add(this.editorPartsView.registerPart(editorPart));\n\t\teditorPart.create(editorPartContainer);\n\n\t\t// Titlebar\n\t\tlet titlebarPart: IAuxiliaryTitlebarPart | undefined;\n\t\tlet titlebarVisible = false;\n\t\tconst useCustomTitle =\n\t\t\tisNative && hasCustomTitlebar(this.configurationService); // custom title in aux windows only enabled in native\n\t\tif (useCustomTitle) {\n\t\t\ttitlebarPart = disposables.add(\n\t\t\t\tthis.titleService.createAuxiliaryTitlebarPart(\n\t\t\t\t\tauxiliaryWindow.container,\n\t\t\t\t\teditorPart,\n\t\t\t\t),\n\t\t\t);\n\t\t\ttitlebarVisible = shouldShowCustomTitleBar(\n\t\t\t\tthis.configurationService,\n\t\t\t\tauxiliaryWindow.window,\n\t\t\t\tundefined,\n\t\t\t\tfalse,\n\t\t\t);\n\n\t\t\tconst handleTitleBarVisibilityEvent = () => {\n\t\t\t\tconst oldTitlebarPartVisible = titlebarVisible;\n\t\t\t\ttitlebarVisible = shouldShowCustomTitleBar(\n\t\t\t\t\tthis.configurationService,\n\t\t\t\t\tauxiliaryWindow.window,\n\t\t\t\t\tundefined,\n\t\t\t\t\tfalse,\n\t\t\t\t);\n\t\t\t\tif (oldTitlebarPartVisible !== titlebarVisible) {\n\t\t\t\t\tupdateTitlebarVisibility(true);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tdisposables.add(\n\t\t\t\ttitlebarPart.onDidChange(() => auxiliaryWindow.layout()),\n\t\t\t);\n\t\t\tdisposables.add(\n\t\t\t\tthis.layoutService.onDidChangePartVisibility(() =>\n\t\t\t\t\thandleTitleBarVisibilityEvent(),\n\t\t\t\t),\n\t\t\t);\n\t\t\tdisposables.add(\n\t\t\t\tonDidChangeFullscreen((windowId) => {\n\t\t\t\t\tif (windowId !== auxiliaryWindow.window.vscodeWindowId) {\n\t\t\t\t\t\treturn; // ignore all but our window\n\t\t\t\t\t}\n\n\t\t\t\t\thandleTitleBarVisibilityEvent();\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tupdateTitlebarVisibility(false);\n\t\t} else {\n\t\t\tdisposables.add(\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tWindowTitle,\n\t\t\t\t\tauxiliaryWindow.window,\n\t\t\t\t\teditorPart,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\t// Statusbar\n\t\tconst statusbarPart = disposables.add(\n\t\t\tthis.statusbarService.createAuxiliaryStatusbarPart(\n\t\t\t\tauxiliaryWindow.container,\n\t\t\t),\n\t\t);\n\t\tlet statusbarVisible =\n\t\t\tthis.configurationService.getValue<boolean>(\n\t\t\t\tAuxiliaryEditorPart.STATUS_BAR_VISIBILITY,\n\t\t\t) !== false;\n\t\tdisposables.add(\n\t\t\tthis.configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (\n\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\tAuxiliaryEditorPart.STATUS_BAR_VISIBILITY,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tstatusbarVisible =\n\t\t\t\t\t\tthis.configurationService.getValue<boolean>(\n\t\t\t\t\t\t\tAuxiliaryEditorPart.STATUS_BAR_VISIBILITY,\n\t\t\t\t\t\t) !== false;\n\n\t\t\t\t\tupdateStatusbarVisibility(true);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tupdateStatusbarVisibility(false);\n\n\t\t// Lifecycle\n\t\tconst editorCloseListener = disposables.add(\n\t\t\tEvent.once(editorPart.onWillClose)(() =>\n\t\t\t\tauxiliaryWindow.window.close(),\n\t\t\t),\n\t\t);\n\t\tdisposables.add(\n\t\t\tEvent.once(auxiliaryWindow.onUnload)(() => {\n\t\t\t\tif (disposables.isDisposed) {\n\t\t\t\t\treturn; // the close happened as part of an earlier dispose call\n\t\t\t\t}\n\n\t\t\t\teditorCloseListener.dispose();\n\t\t\t\teditorPart.close();\n\t\t\t\tdisposables.dispose();\n\t\t\t}),\n\t\t);\n\t\tdisposables.add(\n\t\t\tEvent.once(this.lifecycleService.onDidShutdown)(() =>\n\t\t\t\tdisposables.dispose(),\n\t\t\t),\n\t\t);\n\t\tdisposables.add(\n\t\t\tauxiliaryWindow.onBeforeUnload((event) => {\n\t\t\t\tfor (const group of editorPart.groups) {\n\t\t\t\t\tfor (const editor of group.editors) {\n\t\t\t\t\t\t// Closing an auxiliary window with opened editors\n\t\t\t\t\t\t// will move the editors to the main window. As such,\n\t\t\t\t\t\t// we need to validate that we can move and otherwise\n\t\t\t\t\t\t// prevent the window from closing.\n\t\t\t\t\t\tconst canMoveVeto = editor.canMove(\n\t\t\t\t\t\t\tgroup.id,\n\t\t\t\t\t\t\tthis.editorPartsView.mainPart.activeGroup.id,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (typeof canMoveVeto === \"string\") {\n\t\t\t\t\t\t\tgroup.openEditor(editor);\n\t\t\t\t\t\t\tevent.veto(canMoveVeto);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// Layout: specifically `onWillLayout` to have a chance\n\t\t// to build the aux editor part before other components\n\t\t// have a chance to react.\n\t\tdisposables.add(\n\t\t\tauxiliaryWindow.onWillLayout((dimension) => {\n\t\t\t\tconst titlebarPartHeight = titlebarPart?.height ?? 0;\n\t\t\t\ttitlebarPart?.layout(dimension.width, titlebarPartHeight, 0, 0);\n\n\t\t\t\tconst editorPartHeight =\n\t\t\t\t\tdimension.height - computeEditorPartHeightOffset();\n\t\t\t\teditorPart.layout(\n\t\t\t\t\tdimension.width,\n\t\t\t\t\teditorPartHeight,\n\t\t\t\t\ttitlebarPartHeight,\n\t\t\t\t\t0,\n\t\t\t\t);\n\n\t\t\t\tstatusbarPart.layout(\n\t\t\t\t\tdimension.width,\n\t\t\t\t\tstatusbarPart.height,\n\t\t\t\t\tdimension.height - statusbarPart.height,\n\t\t\t\t\t0,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\t\tauxiliaryWindow.layout();\n\n\t\t// Have a InstantiationService that is scoped to the auxiliary window\n\t\tconst instantiationService = disposables.add(\n\t\t\tthis.instantiationService.createChild(\n\t\t\t\tnew ServiceCollection(\n\t\t\t\t\t[\n\t\t\t\t\t\tIStatusbarService,\n\t\t\t\t\t\tthis.statusbarService.createScoped(\n\t\t\t\t\t\t\tstatusbarPart,\n\t\t\t\t\t\t\tdisposables,\n\t\t\t\t\t\t),\n\t\t\t\t\t],\n\t\t\t\t\t[\n\t\t\t\t\t\tIEditorService,\n\t\t\t\t\t\tthis.editorService.createScoped(\n\t\t\t\t\t\t\teditorPart,\n\t\t\t\t\t\t\tdisposables,\n\t\t\t\t\t\t),\n\t\t\t\t\t],\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\treturn {\n\t\t\tpart: editorPart,\n\t\t\tinstantiationService,\n\t\t\tdisposables,\n\t\t};\n\t}\n}\n\nclass AuxiliaryEditorPartImpl\n\textends EditorPart\n\timplements IAuxiliaryEditorPart\n{\n\tprivate static COUNTER = 1;\n\n\tprivate readonly _onWillClose = this._register(new Emitter<void>());\n\treadonly onWillClose = this._onWillClose.event;\n\n\tconstructor(\n\t\twindowId: number,\n\t\teditorPartsView: IEditorPartsView,\n\t\tprivate readonly state: IEditorPartUIState | undefined,\n\t\tgroupsLabel: string,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t@IHostService hostService: IHostService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t) {\n\t\tconst id = AuxiliaryEditorPartImpl.COUNTER++;\n\t\tsuper(\n\t\t\teditorPartsView,\n\t\t\t`workbench.parts.auxiliaryEditor.${id}`,\n\t\t\tgroupsLabel,\n\t\t\twindowId,\n\t\t\tinstantiationService,\n\t\t\tthemeService,\n\t\t\tconfigurationService,\n\t\t\tstorageService,\n\t\t\tlayoutService,\n\t\t\thostService,\n\t\t\tcontextKeyService,\n\t\t);\n\t}\n\n\toverride removeGroup(\n\t\tgroup: number | IEditorGroupView,\n\t\tpreserveFocus?: boolean,\n\t): void {\n\t\t// Close aux window when last group removed\n\t\tconst groupView = this.assertGroupView(group);\n\t\tif (this.count === 1 && this.activeGroup === groupView) {\n\t\t\tthis.doRemoveLastGroup(preserveFocus);\n\t\t}\n\n\t\t// Otherwise delegate to parent implementation\n\t\telse {\n\t\t\tsuper.removeGroup(group, preserveFocus);\n\t\t}\n\t}\n\n\tprivate doRemoveLastGroup(preserveFocus?: boolean): void {\n\t\tconst restoreFocus =\n\t\t\t!preserveFocus && this.shouldRestoreFocus(this.container);\n\n\t\t// Activate next group\n\t\tconst mostRecentlyActiveGroups = this.editorPartsView.getGroups(\n\t\t\tGroupsOrder.MOST_RECENTLY_ACTIVE,\n\t\t);\n\t\tconst nextActiveGroup = mostRecentlyActiveGroups[1]; // [0] will be the current group we are about to dispose\n\t\tif (nextActiveGroup) {\n\t\t\tnextActiveGroup.groupsView.activateGroup(nextActiveGroup);\n\n\t\t\tif (restoreFocus) {\n\t\t\t\tnextActiveGroup.focus();\n\t\t\t}\n\t\t}\n\n\t\tthis.doClose(false /* do not merge any groups to main part */);\n\t}\n\n\tprotected override loadState(): IEditorPartUIState | undefined {\n\t\treturn this.state;\n\t}\n\n\tprotected override saveState(): void {\n\t\treturn; // disabled, auxiliary editor part state is tracked outside\n\t}\n\n\tclose(): boolean {\n\t\treturn this.doClose(true /* merge all groups to main part */);\n\t}\n\n\tprivate doClose(mergeGroupsToMainPart: boolean): boolean {\n\t\tlet result = true;\n\t\tif (mergeGroupsToMainPart) {\n\t\t\tresult = this.mergeGroupsToMainPart();\n\t\t}\n\n\t\tthis._onWillClose.fire();\n\n\t\treturn result;\n\t}\n\n\tprivate mergeGroupsToMainPart(): boolean {\n\t\tif (!this.groups.some((group) => group.count > 0)) {\n\t\t\treturn true; // skip if we have no editors opened\n\t\t}\n\n\t\t// Find the most recent group that is not locked\n\t\tlet targetGroup: IEditorGroupView | undefined;\n\t\tfor (const group of this.editorPartsView.mainPart.getGroups(\n\t\t\tGroupsOrder.MOST_RECENTLY_ACTIVE,\n\t\t)) {\n\t\t\tif (!group.isLocked) {\n\t\t\t\ttargetGroup = group;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!targetGroup) {\n\t\t\ttargetGroup = this.editorPartsView.mainPart.addGroup(\n\t\t\t\tthis.editorPartsView.mainPart.activeGroup,\n\t\t\t\tthis.partOptions.openSideBySideDirection === \"right\"\n\t\t\t\t\t? GroupDirection.RIGHT\n\t\t\t\t\t: GroupDirection.DOWN,\n\t\t\t);\n\t\t}\n\n\t\tconst result = this.mergeAllGroups(targetGroup);\n\t\ttargetGroup.focus();\n\n\t\treturn result;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
