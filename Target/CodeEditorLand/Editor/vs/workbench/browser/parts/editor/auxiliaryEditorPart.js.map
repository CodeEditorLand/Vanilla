{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/editor/auxiliaryEditorPart.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onDidChangeFullscreen } from '../../../../base/browser/browser.js';\nimport { hide, show } from '../../../../base/browser/dom.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { isNative } from '../../../../base/common/platform.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { hasCustomTitlebar } from '../../../../platform/window/common/window.js';\nimport { IEditorGroupView, IEditorPartsView } from './editor.js';\nimport { EditorPart, IEditorPartUIState } from './editorPart.js';\nimport { IAuxiliaryTitlebarPart } from '../titlebar/titlebarPart.js';\nimport { WindowTitle } from '../titlebar/windowTitle.js';\nimport { IAuxiliaryWindowOpenOptions, IAuxiliaryWindowService } from '../../../services/auxiliaryWindow/browser/auxiliaryWindowService.js';\nimport { GroupDirection, GroupsOrder, IAuxiliaryEditorPart } from '../../../services/editor/common/editorGroupsService.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IHostService } from '../../../services/host/browser/host.js';\nimport { IWorkbenchLayoutService, shouldShowCustomTitleBar } from '../../../services/layout/browser/layoutService.js';\nimport { ILifecycleService } from '../../../services/lifecycle/common/lifecycle.js';\nimport { IStatusbarService } from '../../../services/statusbar/browser/statusbar.js';\nimport { ITitleService } from '../../../services/title/browser/titleService.js';\n\nexport interface IAuxiliaryEditorPartOpenOptions extends IAuxiliaryWindowOpenOptions {\n\treadonly state?: IEditorPartUIState;\n}\n\nexport interface ICreateAuxiliaryEditorPartResult {\n\treadonly part: AuxiliaryEditorPartImpl;\n\treadonly instantiationService: IInstantiationService;\n\treadonly disposables: DisposableStore;\n}\n\nexport class AuxiliaryEditorPart {\n\n\tprivate static STATUS_BAR_VISIBILITY = 'workbench.statusBar.visible';\n\n\tconstructor(\n\t\tprivate readonly editorPartsView: IEditorPartsView,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IAuxiliaryWindowService private readonly auxiliaryWindowService: IAuxiliaryWindowService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IStatusbarService private readonly statusbarService: IStatusbarService,\n\t\t@ITitleService private readonly titleService: ITitleService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService\n\t) {\n\t}\n\n\tasync create(label: string, options?: IAuxiliaryEditorPartOpenOptions): Promise<ICreateAuxiliaryEditorPartResult> {\n\n\t\tfunction computeEditorPartHeightOffset(): number {\n\t\t\tlet editorPartHeightOffset = 0;\n\n\t\t\tif (statusbarVisible) {\n\t\t\t\teditorPartHeightOffset += statusbarPart.height;\n\t\t\t}\n\n\t\t\tif (titlebarPart && titlebarVisible) {\n\t\t\t\teditorPartHeightOffset += titlebarPart.height;\n\t\t\t}\n\n\t\t\treturn editorPartHeightOffset;\n\t\t}\n\n\t\tfunction updateStatusbarVisibility(fromEvent: boolean): void {\n\t\t\tif (statusbarVisible) {\n\t\t\t\tshow(statusbarPart.container);\n\t\t\t} else {\n\t\t\t\thide(statusbarPart.container);\n\t\t\t}\n\n\t\t\tif (fromEvent) {\n\t\t\t\tauxiliaryWindow.layout();\n\t\t\t}\n\t\t}\n\n\t\tfunction updateTitlebarVisibility(fromEvent: boolean): void {\n\t\t\tif (!titlebarPart) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (titlebarVisible) {\n\t\t\t\tshow(titlebarPart.container);\n\t\t\t} else {\n\t\t\t\thide(titlebarPart.container);\n\t\t\t}\n\n\t\t\tif (fromEvent) {\n\t\t\t\tauxiliaryWindow.layout();\n\t\t\t}\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\n\t\t// Auxiliary Window\n\t\tconst auxiliaryWindow = disposables.add(await this.auxiliaryWindowService.open(options));\n\n\t\t// Editor Part\n\t\tconst editorPartContainer = document.createElement('div');\n\t\teditorPartContainer.classList.add('part', 'editor');\n\t\teditorPartContainer.setAttribute('role', 'main');\n\t\teditorPartContainer.style.position = 'relative';\n\t\tauxiliaryWindow.container.appendChild(editorPartContainer);\n\n\t\tconst editorPart = disposables.add(this.instantiationService.createInstance(AuxiliaryEditorPartImpl, auxiliaryWindow.window.vscodeWindowId, this.editorPartsView, options?.state, label));\n\t\tdisposables.add(this.editorPartsView.registerPart(editorPart));\n\t\teditorPart.create(editorPartContainer);\n\n\t\t// Titlebar\n\t\tlet titlebarPart: IAuxiliaryTitlebarPart | undefined = undefined;\n\t\tlet titlebarVisible = false;\n\t\tconst useCustomTitle = isNative && hasCustomTitlebar(this.configurationService); // custom title in aux windows only enabled in native\n\t\tif (useCustomTitle) {\n\t\t\ttitlebarPart = disposables.add(this.titleService.createAuxiliaryTitlebarPart(auxiliaryWindow.container, editorPart));\n\t\t\ttitlebarVisible = shouldShowCustomTitleBar(this.configurationService, auxiliaryWindow.window, undefined, false);\n\n\t\t\tconst handleTitleBarVisibilityEvent = () => {\n\t\t\t\tconst oldTitlebarPartVisible = titlebarVisible;\n\t\t\t\ttitlebarVisible = shouldShowCustomTitleBar(this.configurationService, auxiliaryWindow.window, undefined, false);\n\t\t\t\tif (oldTitlebarPartVisible !== titlebarVisible) {\n\t\t\t\t\tupdateTitlebarVisibility(true);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tdisposables.add(titlebarPart.onDidChange(() => auxiliaryWindow.layout()));\n\t\t\tdisposables.add(this.layoutService.onDidChangePartVisibility(() => handleTitleBarVisibilityEvent()));\n\t\t\tdisposables.add(onDidChangeFullscreen(windowId => {\n\t\t\t\tif (windowId !== auxiliaryWindow.window.vscodeWindowId) {\n\t\t\t\t\treturn; // ignore all but our window\n\t\t\t\t}\n\n\t\t\t\thandleTitleBarVisibilityEvent();\n\t\t\t}));\n\n\t\t\tupdateTitlebarVisibility(false);\n\t\t} else {\n\t\t\tdisposables.add(this.instantiationService.createInstance(WindowTitle, auxiliaryWindow.window, editorPart));\n\t\t}\n\n\t\t// Statusbar\n\t\tconst statusbarPart = disposables.add(this.statusbarService.createAuxiliaryStatusbarPart(auxiliaryWindow.container));\n\t\tlet statusbarVisible = this.configurationService.getValue<boolean>(AuxiliaryEditorPart.STATUS_BAR_VISIBILITY) !== false;\n\t\tdisposables.add(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(AuxiliaryEditorPart.STATUS_BAR_VISIBILITY)) {\n\t\t\t\tstatusbarVisible = this.configurationService.getValue<boolean>(AuxiliaryEditorPart.STATUS_BAR_VISIBILITY) !== false;\n\n\t\t\t\tupdateStatusbarVisibility(true);\n\t\t\t}\n\t\t}));\n\n\t\tupdateStatusbarVisibility(false);\n\n\t\t// Lifecycle\n\t\tconst editorCloseListener = disposables.add(Event.once(editorPart.onWillClose)(() => auxiliaryWindow.window.close()));\n\t\tdisposables.add(Event.once(auxiliaryWindow.onUnload)(() => {\n\t\t\tif (disposables.isDisposed) {\n\t\t\t\treturn; // the close happened as part of an earlier dispose call\n\t\t\t}\n\n\t\t\teditorCloseListener.dispose();\n\t\t\teditorPart.close();\n\t\t\tdisposables.dispose();\n\t\t}));\n\t\tdisposables.add(Event.once(this.lifecycleService.onDidShutdown)(() => disposables.dispose()));\n\t\tdisposables.add(auxiliaryWindow.onBeforeUnload(event => {\n\t\t\tfor (const group of editorPart.groups) {\n\t\t\t\tfor (const editor of group.editors) {\n\t\t\t\t\t// Closing an auxiliary window with opened editors\n\t\t\t\t\t// will move the editors to the main window. As such,\n\t\t\t\t\t// we need to validate that we can move and otherwise\n\t\t\t\t\t// prevent the window from closing.\n\t\t\t\t\tconst canMoveVeto = editor.canMove(group.id, this.editorPartsView.mainPart.activeGroup.id);\n\t\t\t\t\tif (typeof canMoveVeto === 'string') {\n\t\t\t\t\t\tgroup.openEditor(editor);\n\t\t\t\t\t\tevent.veto(canMoveVeto);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Layout: specifically `onWillLayout` to have a chance\n\t\t// to build the aux editor part before other components\n\t\t// have a chance to react.\n\t\tdisposables.add(auxiliaryWindow.onWillLayout(dimension => {\n\t\t\tconst titlebarPartHeight = titlebarPart?.height ?? 0;\n\t\t\ttitlebarPart?.layout(dimension.width, titlebarPartHeight, 0, 0);\n\n\t\t\tconst editorPartHeight = dimension.height - computeEditorPartHeightOffset();\n\t\t\teditorPart.layout(dimension.width, editorPartHeight, titlebarPartHeight, 0);\n\n\t\t\tstatusbarPart.layout(dimension.width, statusbarPart.height, dimension.height - statusbarPart.height, 0);\n\t\t}));\n\t\tauxiliaryWindow.layout();\n\n\t\t// Have a InstantiationService that is scoped to the auxiliary window\n\t\tconst instantiationService = disposables.add(this.instantiationService.createChild(new ServiceCollection(\n\t\t\t[IStatusbarService, this.statusbarService.createScoped(statusbarPart, disposables)],\n\t\t\t[IEditorService, this.editorService.createScoped(editorPart, disposables)]\n\t\t)));\n\n\t\treturn {\n\t\t\tpart: editorPart,\n\t\t\tinstantiationService,\n\t\t\tdisposables\n\t\t};\n\t}\n}\n\nclass AuxiliaryEditorPartImpl extends EditorPart implements IAuxiliaryEditorPart {\n\n\tprivate static COUNTER = 1;\n\n\tprivate readonly _onWillClose = this._register(new Emitter<void>());\n\treadonly onWillClose = this._onWillClose.event;\n\n\tconstructor(\n\t\twindowId: number,\n\t\teditorPartsView: IEditorPartsView,\n\t\tprivate readonly state: IEditorPartUIState | undefined,\n\t\tgroupsLabel: string,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t@IHostService hostService: IHostService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService\n\t) {\n\t\tconst id = AuxiliaryEditorPartImpl.COUNTER++;\n\t\tsuper(editorPartsView, `workbench.parts.auxiliaryEditor.${id}`, groupsLabel, windowId, instantiationService, themeService, configurationService, storageService, layoutService, hostService, contextKeyService);\n\t}\n\n\toverride removeGroup(group: number | IEditorGroupView, preserveFocus?: boolean): void {\n\n\t\t// Close aux window when last group removed\n\t\tconst groupView = this.assertGroupView(group);\n\t\tif (this.count === 1 && this.activeGroup === groupView) {\n\t\t\tthis.doRemoveLastGroup(preserveFocus);\n\t\t}\n\n\t\t// Otherwise delegate to parent implementation\n\t\telse {\n\t\t\tsuper.removeGroup(group, preserveFocus);\n\t\t}\n\t}\n\n\tprivate doRemoveLastGroup(preserveFocus?: boolean): void {\n\t\tconst restoreFocus = !preserveFocus && this.shouldRestoreFocus(this.container);\n\n\t\t// Activate next group\n\t\tconst mostRecentlyActiveGroups = this.editorPartsView.getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE);\n\t\tconst nextActiveGroup = mostRecentlyActiveGroups[1]; // [0] will be the current group we are about to dispose\n\t\tif (nextActiveGroup) {\n\t\t\tnextActiveGroup.groupsView.activateGroup(nextActiveGroup);\n\n\t\t\tif (restoreFocus) {\n\t\t\t\tnextActiveGroup.focus();\n\t\t\t}\n\t\t}\n\n\t\tthis.doClose(false /* do not merge any groups to main part */);\n\t}\n\n\tprotected override loadState(): IEditorPartUIState | undefined {\n\t\treturn this.state;\n\t}\n\n\tprotected override saveState(): void {\n\t\treturn; // disabled, auxiliary editor part state is tracked outside\n\t}\n\n\tclose(): boolean {\n\t\treturn this.doClose(true /* merge all groups to main part */);\n\t}\n\n\tprivate doClose(mergeGroupsToMainPart: boolean): boolean {\n\t\tlet result = true;\n\t\tif (mergeGroupsToMainPart) {\n\t\t\tresult = this.mergeGroupsToMainPart();\n\t\t}\n\n\t\tthis._onWillClose.fire();\n\n\t\treturn result;\n\t}\n\n\tprivate mergeGroupsToMainPart(): boolean {\n\t\tif (!this.groups.some(group => group.count > 0)) {\n\t\t\treturn true; // skip if we have no editors opened\n\t\t}\n\n\t\t// Find the most recent group that is not locked\n\t\tlet targetGroup: IEditorGroupView | undefined = undefined;\n\t\tfor (const group of this.editorPartsView.mainPart.getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE)) {\n\t\t\tif (!group.isLocked) {\n\t\t\t\ttargetGroup = group;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!targetGroup) {\n\t\t\ttargetGroup = this.editorPartsView.mainPart.addGroup(this.editorPartsView.mainPart.activeGroup, this.partOptions.openSideBySideDirection === 'right' ? GroupDirection.RIGHT : GroupDirection.DOWN);\n\t\t}\n\n\t\tconst result = this.mergeAllGroups(targetGroup);\n\t\ttargetGroup.focus();\n\n\t\treturn result;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
