import * as dom from "vs/base/browser/dom";
import { IBreadcrumbsWidgetStyles } from "vs/base/browser/ui/breadcrumbs/breadcrumbsWidget";
import "vs/css!./media/breadcrumbscontrol";
import { IConfigurationService } from "vs/platform/configuration/common/configuration";
import { IContextKeyService } from "vs/platform/contextkey/common/contextkey";
import { IContextViewService } from "vs/platform/contextview/browser/contextView";
import { IFileService } from "vs/platform/files/common/files";
import { IInstantiationService } from "vs/platform/instantiation/common/instantiation";
import { ILabelService } from "vs/platform/label/common/label";
import { IQuickInputService } from "vs/platform/quickinput/common/quickInput";
import { IBreadcrumbsService } from "vs/workbench/browser/parts/editor/breadcrumbs";
import { BreadcrumbsModel } from "vs/workbench/browser/parts/editor/breadcrumbsModel";
import { IEditorGroupView } from "vs/workbench/browser/parts/editor/editor";
import { IEditorService } from "vs/workbench/services/editor/common/editorService";
export interface IBreadcrumbsControlOptions {
    readonly showFileIcons: boolean;
    readonly showSymbolIcons: boolean;
    readonly showDecorationColors: boolean;
    readonly showPlaceholder: boolean;
    readonly widgetStyles?: IBreadcrumbsWidgetStyles;
}
export declare class BreadcrumbsControl {
    private readonly _options;
    private readonly _editorGroup;
    private readonly _contextKeyService;
    private readonly _contextViewService;
    private readonly _instantiationService;
    private readonly _quickInputService;
    private readonly _fileService;
    private readonly _editorService;
    private readonly _labelService;
    static readonly HEIGHT = 22;
    private static readonly SCROLLBAR_SIZES;
    static readonly Payload_Reveal: {};
    static readonly Payload_RevealAside: {};
    static readonly Payload_Pick: {};
    static readonly CK_BreadcrumbsPossible: any;
    static readonly CK_BreadcrumbsVisible: any;
    static readonly CK_BreadcrumbsActive: any;
    private readonly _ckBreadcrumbsPossible;
    private readonly _ckBreadcrumbsVisible;
    private readonly _ckBreadcrumbsActive;
    private readonly _cfUseQuickPick;
    private readonly _cfShowIcons;
    private readonly _cfTitleScrollbarSizing;
    readonly domNode: HTMLDivElement;
    private readonly _widget;
    private readonly _disposables;
    private readonly _breadcrumbsDisposables;
    private readonly _labels;
    private readonly _model;
    private _breadcrumbsPickerShowing;
    private _breadcrumbsPickerIgnoreOnceItem;
    private readonly _hoverDelegate;
    private readonly _onDidVisibilityChange;
    get onDidVisibilityChange(): any;
    constructor(container: HTMLElement, _options: IBreadcrumbsControlOptions, _editorGroup: IEditorGroupView, _contextKeyService: IContextKeyService, _contextViewService: IContextViewService, _instantiationService: IInstantiationService, _quickInputService: IQuickInputService, _fileService: IFileService, _editorService: IEditorService, _labelService: ILabelService, configurationService: IConfigurationService, breadcrumbsService: IBreadcrumbsService);
    dispose(): void;
    get model(): BreadcrumbsModel | undefined;
    layout(dim: dom.Dimension | undefined): void;
    isHidden(): boolean;
    hide(): void;
    private show;
    revealLast(): void;
    update(): boolean;
    private _onFocusEvent;
    private _onSelectEvent;
    private _updateCkBreadcrumbsActive;
    private _revealInEditor;
    private _getEditorGroup;
}
export declare class BreadcrumbsControlFactory {
    private readonly _container;
    private readonly _editorGroup;
    private readonly _options;
    private readonly _instantiationService;
    private readonly _disposables;
    private readonly _controlDisposables;
    private _control;
    get control(): BreadcrumbsControl | undefined;
    private readonly _onDidEnablementChange;
    get onDidEnablementChange(): any;
    private readonly _onDidVisibilityChange;
    get onDidVisibilityChange(): any;
    constructor(_container: HTMLElement, _editorGroup: IEditorGroupView, _options: IBreadcrumbsControlOptions, configurationService: IConfigurationService, _instantiationService: IInstantiationService, fileService: IFileService);
    private createControl;
    dispose(): void;
}
