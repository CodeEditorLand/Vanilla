{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/editor/multiEditorTabsControl.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './media/multieditortabscontrol.css';\nimport { isLinux, isMacintosh, isWindows } from '../../../../base/common/platform.js';\nimport { shorten } from '../../../../base/common/labels.js';\nimport { EditorResourceAccessor, Verbosity, IEditorPartOptions, SideBySideEditor, DEFAULT_EDITOR_ASSOCIATION, EditorInputCapabilities, IUntypedEditorInput, preventEditorClose, EditorCloseMethod, EditorsOrder, IToolbarActions } from '../../../common/editor.js';\nimport { EditorInput } from '../../../common/editor/editorInput.js';\nimport { computeEditorAriaLabel } from '../../editor.js';\nimport { StandardKeyboardEvent } from '../../../../base/browser/keyboardEvent.js';\nimport { EventType as TouchEventType, GestureEvent, Gesture } from '../../../../base/browser/touch.js';\nimport { KeyCode } from '../../../../base/common/keyCodes.js';\nimport { ResourceLabels, IResourceLabel, DEFAULT_LABELS_CONTAINER } from '../../labels.js';\nimport { ActionBar } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { EditorCommandsContextActionRunner, EditorTabsControl } from './editorTabsControl.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { IDisposable, dispose, DisposableStore, combinedDisposable, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { ScrollableElement } from '../../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { ScrollbarVisibility } from '../../../../base/common/scrollable.js';\nimport { getOrSet } from '../../../../base/common/map.js';\nimport { IThemeService, registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { TAB_INACTIVE_BACKGROUND, TAB_ACTIVE_BACKGROUND, TAB_BORDER, EDITOR_DRAG_AND_DROP_BACKGROUND, TAB_UNFOCUSED_ACTIVE_BACKGROUND, TAB_UNFOCUSED_ACTIVE_BORDER, TAB_ACTIVE_BORDER, TAB_HOVER_BACKGROUND, TAB_HOVER_BORDER, TAB_UNFOCUSED_HOVER_BACKGROUND, TAB_UNFOCUSED_HOVER_BORDER, EDITOR_GROUP_HEADER_TABS_BACKGROUND, WORKBENCH_BACKGROUND, TAB_ACTIVE_BORDER_TOP, TAB_UNFOCUSED_ACTIVE_BORDER_TOP, TAB_ACTIVE_MODIFIED_BORDER, TAB_INACTIVE_MODIFIED_BORDER, TAB_UNFOCUSED_ACTIVE_MODIFIED_BORDER, TAB_UNFOCUSED_INACTIVE_MODIFIED_BORDER, TAB_UNFOCUSED_INACTIVE_BACKGROUND, TAB_HOVER_FOREGROUND, TAB_UNFOCUSED_HOVER_FOREGROUND, EDITOR_GROUP_HEADER_TABS_BORDER, TAB_LAST_PINNED_BORDER, TAB_SELECTED_BORDER_TOP } from '../../../common/theme.js';\nimport { activeContrastBorder, contrastBorder, editorBackground, listActiveSelectionBackground, listActiveSelectionForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { ResourcesDropHandler, DraggedEditorIdentifier, DraggedEditorGroupIdentifier, extractTreeDropData, isWindowDraggedOver } from '../../dnd.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { MergeGroupMode, IMergeGroupOptions } from '../../../services/editor/common/editorGroupsService.js';\nimport { addDisposableListener, EventType, EventHelper, Dimension, scheduleAtNextAnimationFrame, findParentWithClass, clearNode, DragAndDropObserver, isMouseEvent, getWindow } from '../../../../base/browser/dom.js';\nimport { localize } from '../../../../nls.js';\nimport { IEditorGroupsView, EditorServiceImpl, IEditorGroupView, IInternalEditorOpenOptions, IEditorPartsView } from './editor.js';\nimport { CloseEditorTabAction, UnpinEditorAction } from './editorActions.js';\nimport { assertAllDefined, assertIsDefined } from '../../../../base/common/types.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { basenameOrAuthority } from '../../../../base/common/resources.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { IPathService } from '../../../services/path/common/pathService.js';\nimport { IPath, win32, posix } from '../../../../base/common/path.js';\nimport { coalesce, insert } from '../../../../base/common/arrays.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { isSafari } from '../../../../base/browser/browser.js';\nimport { equals } from '../../../../base/common/objects.js';\nimport { EditorActivation, IEditorOptions } from '../../../../platform/editor/common/editor.js';\nimport { UNLOCK_GROUP_COMMAND_ID } from './editorCommands.js';\nimport { StandardMouseEvent } from '../../../../base/browser/mouseEvent.js';\nimport { ITreeViewsDnDService } from '../../../../editor/common/services/treeViewsDndService.js';\nimport { DraggedTreeItemsIdentifier } from '../../../../editor/common/services/treeViewsDnd.js';\nimport { IEditorResolverService } from '../../../services/editor/common/editorResolverService.js';\nimport { IEditorTitleControlDimensions } from './editorTitleControl.js';\nimport { StickyEditorGroupModel, UnstickyEditorGroupModel } from '../../../common/editor/filteredEditorGroupModel.js';\nimport { IReadonlyEditorGroupModel } from '../../../common/editor/editorGroupModel.js';\nimport { IHostService } from '../../../services/host/browser/host.js';\nimport { BugIndicatingError } from '../../../../base/common/errors.js';\nimport { applyDragImage } from '../../../../base/browser/dnd.js';\n\ninterface IEditorInputLabel {\n\treadonly editor: EditorInput;\n\n\treadonly name?: string;\n\tdescription?: string;\n\treadonly forceDescription?: boolean;\n\treadonly title?: string;\n\treadonly ariaLabel?: string;\n}\n\ninterface IMultiEditorTabsControlLayoutOptions {\n\n\t/**\n\t * Whether to force revealing the active tab, even when\n\t * the dimensions have not changed. This can be the case\n\t * when a tab was made active and needs to be revealed.\n\t */\n\treadonly forceRevealActiveTab?: true;\n}\n\ninterface IScheduledMultiEditorTabsControlLayout extends IDisposable {\n\n\t/**\n\t * Associated options with the layout call.\n\t */\n\toptions?: IMultiEditorTabsControlLayoutOptions;\n}\n\nexport class MultiEditorTabsControl extends EditorTabsControl {\n\n\tprivate static readonly SCROLLBAR_SIZES = {\n\t\tdefault: 3 as const,\n\t\tlarge: 10 as const\n\t};\n\n\tprivate static readonly TAB_WIDTH = {\n\t\tcompact: 38 as const,\n\t\tshrink: 80 as const,\n\t\tfit: 120 as const\n\t};\n\n\tprivate static readonly DRAG_OVER_OPEN_TAB_THRESHOLD = 1500;\n\n\tprivate static readonly MOUSE_WHEEL_EVENT_THRESHOLD = 150;\n\tprivate static readonly MOUSE_WHEEL_DISTANCE_THRESHOLD = 1.5;\n\n\tprivate titleContainer: HTMLElement | undefined;\n\tprivate tabsAndActionsContainer: HTMLElement | undefined;\n\tprivate tabsContainer: HTMLElement | undefined;\n\tprivate tabsScrollbar: ScrollableElement | undefined;\n\tprivate tabSizingFixedDisposables: DisposableStore | undefined;\n\n\tprivate readonly closeEditorAction = this._register(this.instantiationService.createInstance(CloseEditorTabAction, CloseEditorTabAction.ID, CloseEditorTabAction.LABEL));\n\tprivate readonly unpinEditorAction = this._register(this.instantiationService.createInstance(UnpinEditorAction, UnpinEditorAction.ID, UnpinEditorAction.LABEL));\n\n\tprivate readonly tabResourceLabels = this._register(this.instantiationService.createInstance(ResourceLabels, DEFAULT_LABELS_CONTAINER));\n\tprivate tabLabels: IEditorInputLabel[] = [];\n\tprivate activeTabLabel: IEditorInputLabel | undefined;\n\n\tprivate tabActionBars: ActionBar[] = [];\n\tprivate tabDisposables: IDisposable[] = [];\n\n\tprivate dimensions: IEditorTitleControlDimensions & { used?: Dimension } = {\n\t\tcontainer: Dimension.None,\n\t\tavailable: Dimension.None\n\t};\n\n\tprivate readonly layoutScheduler = this._register(new MutableDisposable<IScheduledMultiEditorTabsControlLayout>());\n\tprivate blockRevealActiveTab: boolean | undefined;\n\n\tprivate path: IPath = isWindows ? win32 : posix;\n\n\tprivate lastMouseWheelEventTime = 0;\n\tprivate isMouseOverTabs = false;\n\n\tconstructor(\n\t\tparent: HTMLElement,\n\t\teditorPartsView: IEditorPartsView,\n\t\tgroupsView: IEditorGroupsView,\n\t\tgroupView: IEditorGroupView,\n\t\ttabsModel: IReadonlyEditorGroupModel,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IQuickInputService quickInputService: IQuickInputService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IEditorService private readonly editorService: EditorServiceImpl,\n\t\t@IPathService private readonly pathService: IPathService,\n\t\t@ITreeViewsDnDService private readonly treeViewsDragAndDropService: ITreeViewsDnDService,\n\t\t@IEditorResolverService editorResolverService: IEditorResolverService,\n\t\t@IHostService hostService: IHostService,\n\t) {\n\t\tsuper(parent, editorPartsView, groupsView, groupView, tabsModel, contextMenuService, instantiationService, contextKeyService, keybindingService, notificationService, quickInputService, themeService, editorResolverService, hostService);\n\n\t\t// Resolve the correct path library for the OS we are on\n\t\t// If we are connected to remote, this accounts for the\n\t\t// remote OS.\n\t\t(async () => this.path = await this.pathService.path)();\n\n\t\t// React to decorations changing for our resource labels\n\t\tthis._register(this.tabResourceLabels.onDidChangeDecorations(() => this.doHandleDecorationsChange()));\n\t}\n\n\tprotected override create(parent: HTMLElement): void {\n\t\tsuper.create(parent);\n\n\t\tthis.titleContainer = parent;\n\n\t\t// Tabs and Actions Container (are on a single row with flex side-by-side)\n\t\tthis.tabsAndActionsContainer = document.createElement('div');\n\t\tthis.tabsAndActionsContainer.classList.add('tabs-and-actions-container');\n\t\tthis.titleContainer.appendChild(this.tabsAndActionsContainer);\n\n\t\t// Tabs Container\n\t\tthis.tabsContainer = document.createElement('div');\n\t\tthis.tabsContainer.setAttribute('role', 'tablist');\n\t\tthis.tabsContainer.draggable = true;\n\t\tthis.tabsContainer.classList.add('tabs-container');\n\t\tthis._register(Gesture.addTarget(this.tabsContainer));\n\n\t\tthis.tabSizingFixedDisposables = this._register(new DisposableStore());\n\t\tthis.updateTabSizing(false);\n\n\t\t// Tabs Scrollbar\n\t\tthis.tabsScrollbar = this.createTabsScrollbar(this.tabsContainer);\n\t\tthis.tabsAndActionsContainer.appendChild(this.tabsScrollbar.getDomNode());\n\n\t\t// Tabs Container listeners\n\t\tthis.registerTabsContainerListeners(this.tabsContainer, this.tabsScrollbar);\n\n\t\t// Create Editor Toolbar\n\t\tthis.createEditorActionsToolBar(this.tabsAndActionsContainer, ['editor-actions']);\n\n\t\t// Set tabs control visibility\n\t\tthis.updateTabsControlVisibility();\n\t}\n\n\tprivate createTabsScrollbar(scrollable: HTMLElement): ScrollableElement {\n\t\tconst tabsScrollbar = this._register(new ScrollableElement(scrollable, {\n\t\t\thorizontal: ScrollbarVisibility.Auto,\n\t\t\thorizontalScrollbarSize: this.getTabsScrollbarSizing(),\n\t\t\tvertical: ScrollbarVisibility.Hidden,\n\t\t\tscrollYToX: true,\n\t\t\tuseShadows: false\n\t\t}));\n\n\t\tthis._register(tabsScrollbar.onScroll(e => {\n\t\t\tif (e.scrollLeftChanged) {\n\t\t\t\tscrollable.scrollLeft = e.scrollLeft;\n\t\t\t}\n\t\t}));\n\n\t\treturn tabsScrollbar;\n\t}\n\n\tprivate updateTabsScrollbarSizing(): void {\n\t\tthis.tabsScrollbar?.updateOptions({\n\t\t\thorizontalScrollbarSize: this.getTabsScrollbarSizing()\n\t\t});\n\t}\n\n\tprivate updateTabSizing(fromEvent: boolean): void {\n\t\tconst [tabsContainer, tabSizingFixedDisposables] = assertAllDefined(this.tabsContainer, this.tabSizingFixedDisposables);\n\n\t\ttabSizingFixedDisposables.clear();\n\n\t\tconst options = this.groupsView.partOptions;\n\t\tif (options.tabSizing === 'fixed') {\n\t\t\ttabsContainer.style.setProperty('--tab-sizing-fixed-min-width', `${options.tabSizingFixedMinWidth}px`);\n\t\t\ttabsContainer.style.setProperty('--tab-sizing-fixed-max-width', `${options.tabSizingFixedMaxWidth}px`);\n\n\t\t\t// For https://github.com/microsoft/vscode/issues/40290 we want to\n\t\t\t// preserve the current tab widths as long as the mouse is over the\n\t\t\t// tabs so that you can quickly close them via mouse click. For that\n\t\t\t// we track mouse movements over the tabs container.\n\n\t\t\ttabSizingFixedDisposables.add(addDisposableListener(tabsContainer, EventType.MOUSE_ENTER, () => {\n\t\t\t\tthis.isMouseOverTabs = true;\n\t\t\t}));\n\t\t\ttabSizingFixedDisposables.add(addDisposableListener(tabsContainer, EventType.MOUSE_LEAVE, () => {\n\t\t\t\tthis.isMouseOverTabs = false;\n\t\t\t\tthis.updateTabsFixedWidth(false);\n\t\t\t}));\n\t\t} else if (fromEvent) {\n\t\t\ttabsContainer.style.removeProperty('--tab-sizing-fixed-min-width');\n\t\t\ttabsContainer.style.removeProperty('--tab-sizing-fixed-max-width');\n\t\t\tthis.updateTabsFixedWidth(false);\n\t\t}\n\t}\n\n\tprivate updateTabsFixedWidth(fixed: boolean): void {\n\t\tthis.forEachTab((editor, tabIndex, tabContainer) => {\n\t\t\tif (fixed) {\n\t\t\t\tconst { width } = tabContainer.getBoundingClientRect();\n\t\t\t\ttabContainer.style.setProperty('--tab-sizing-current-width', `${width}px`);\n\t\t\t} else {\n\t\t\t\ttabContainer.style.removeProperty('--tab-sizing-current-width');\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate getTabsScrollbarSizing(): number {\n\t\tif (this.groupsView.partOptions.titleScrollbarSizing !== 'large') {\n\t\t\treturn MultiEditorTabsControl.SCROLLBAR_SIZES.default;\n\t\t}\n\n\t\treturn MultiEditorTabsControl.SCROLLBAR_SIZES.large;\n\t}\n\n\tprivate registerTabsContainerListeners(tabsContainer: HTMLElement, tabsScrollbar: ScrollableElement): void {\n\n\t\t// Forward scrolling inside the container to our custom scrollbar\n\t\tthis._register(addDisposableListener(tabsContainer, EventType.SCROLL, () => {\n\t\t\tif (tabsContainer.classList.contains('scroll')) {\n\t\t\t\ttabsScrollbar.setScrollPosition({\n\t\t\t\t\tscrollLeft: tabsContainer.scrollLeft // during DND the container gets scrolled so we need to update the custom scrollbar\n\t\t\t\t});\n\t\t\t}\n\t\t}));\n\n\t\t// New file when double-clicking on tabs container (but not tabs)\n\t\tfor (const eventType of [TouchEventType.Tap, EventType.DBLCLICK]) {\n\t\t\tthis._register(addDisposableListener(tabsContainer, eventType, (e: MouseEvent | GestureEvent) => {\n\t\t\t\tif (eventType === EventType.DBLCLICK) {\n\t\t\t\t\tif (e.target !== tabsContainer) {\n\t\t\t\t\t\treturn; // ignore if target is not tabs container\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ((<GestureEvent>e).tapCount !== 2) {\n\t\t\t\t\t\treturn; // ignore single taps\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((<GestureEvent>e).initialTarget !== tabsContainer) {\n\t\t\t\t\t\treturn; // ignore if target is not tabs container\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tEventHelper.stop(e);\n\n\t\t\t\tthis.editorService.openEditor({\n\t\t\t\t\tresource: undefined,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tpinned: true,\n\t\t\t\t\t\tindex: this.groupView.count, // always at the end\n\t\t\t\t\t\toverride: DEFAULT_EDITOR_ASSOCIATION.id\n\t\t\t\t\t}\n\t\t\t\t}, this.groupView.id);\n\t\t\t}));\n\t\t}\n\n\t\t// Prevent auto-scrolling (https://github.com/microsoft/vscode/issues/16690)\n\t\tthis._register(addDisposableListener(tabsContainer, EventType.MOUSE_DOWN, e => {\n\t\t\tif (e.button === 1) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t}));\n\n\t\t// Prevent auto-pasting (https://github.com/microsoft/vscode/issues/201696)\n\t\tif (isLinux) {\n\t\t\tthis._register(addDisposableListener(tabsContainer, EventType.MOUSE_UP, e => {\n\t\t\t\tif (e.button === 1) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\t// Drag & Drop support\n\t\tlet lastDragEvent: DragEvent | undefined = undefined;\n\t\tlet isNewWindowOperation = false;\n\t\tthis._register(new DragAndDropObserver(tabsContainer, {\n\t\t\tonDragStart: e => {\n\t\t\t\tisNewWindowOperation = this.onGroupDragStart(e, tabsContainer);\n\t\t\t},\n\n\t\t\tonDrag: e => {\n\t\t\t\tlastDragEvent = e;\n\t\t\t},\n\n\t\t\tonDragEnter: e => {\n\n\t\t\t\t// Always enable support to scroll while dragging\n\t\t\t\ttabsContainer.classList.add('scroll');\n\n\t\t\t\t// Return if the target is not on the tabs container\n\t\t\t\tif (e.target !== tabsContainer) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Return if transfer is unsupported\n\t\t\t\tif (!this.isSupportedDropTransfer(e)) {\n\t\t\t\t\tif (e.dataTransfer) {\n\t\t\t\t\t\te.dataTransfer.dropEffect = 'none';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Update the dropEffect to \"copy\" if there is no local data to be dragged because\n\t\t\t\t// in that case we can only copy the data into and not move it from its source\n\t\t\t\tif (!this.editorTransfer.hasData(DraggedEditorIdentifier.prototype)) {\n\t\t\t\t\tif (e.dataTransfer) {\n\t\t\t\t\t\te.dataTransfer.dropEffect = 'copy';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.updateDropFeedback(tabsContainer, true, e);\n\t\t\t},\n\n\t\t\tonDragLeave: e => {\n\t\t\t\tthis.updateDropFeedback(tabsContainer, false, e);\n\t\t\t\ttabsContainer.classList.remove('scroll');\n\t\t\t},\n\n\t\t\tonDragEnd: e => {\n\t\t\t\tthis.updateDropFeedback(tabsContainer, false, e);\n\t\t\t\ttabsContainer.classList.remove('scroll');\n\n\t\t\t\tthis.onGroupDragEnd(e, lastDragEvent, tabsContainer, isNewWindowOperation);\n\t\t\t},\n\n\t\t\tonDrop: e => {\n\t\t\t\tthis.updateDropFeedback(tabsContainer, false, e);\n\t\t\t\ttabsContainer.classList.remove('scroll');\n\n\t\t\t\tif (e.target === tabsContainer) {\n\t\t\t\t\tconst isGroupTransfer = this.groupTransfer.hasData(DraggedEditorGroupIdentifier.prototype);\n\t\t\t\t\tthis.onDrop(e, isGroupTransfer ? this.groupView.count : this.tabsModel.count, tabsContainer);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Mouse-wheel support to switch to tabs optionally\n\t\tthis._register(addDisposableListener(tabsContainer, EventType.MOUSE_WHEEL, (e: WheelEvent) => {\n\t\t\tconst activeEditor = this.groupView.activeEditor;\n\t\t\tif (!activeEditor || this.groupView.count < 2) {\n\t\t\t\treturn;  // need at least 2 open editors\n\t\t\t}\n\n\t\t\t// Shift-key enables or disables this behaviour depending on the setting\n\t\t\tif (this.groupsView.partOptions.scrollToSwitchTabs === true) {\n\t\t\t\tif (e.shiftKey) {\n\t\t\t\t\treturn; // 'on': only enable this when Shift-key is not pressed\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!e.shiftKey) {\n\t\t\t\t\treturn; // 'off': only enable this when Shift-key is pressed\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Ignore event if the last one happened too recently (https://github.com/microsoft/vscode/issues/96409)\n\t\t\t// The restriction is relaxed according to the absolute value of `deltaX` and `deltaY`\n\t\t\t// to support discrete (mouse wheel) and contiguous scrolling (touchpad) equally well\n\t\t\tconst now = Date.now();\n\t\t\tif (now - this.lastMouseWheelEventTime < MultiEditorTabsControl.MOUSE_WHEEL_EVENT_THRESHOLD - 2 * (Math.abs(e.deltaX) + Math.abs(e.deltaY))) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.lastMouseWheelEventTime = now;\n\n\t\t\t// Figure out scrolling direction but ignore it if too subtle\n\t\t\tlet tabSwitchDirection: number;\n\t\t\tif (e.deltaX + e.deltaY < - MultiEditorTabsControl.MOUSE_WHEEL_DISTANCE_THRESHOLD) {\n\t\t\t\ttabSwitchDirection = -1;\n\t\t\t} else if (e.deltaX + e.deltaY > MultiEditorTabsControl.MOUSE_WHEEL_DISTANCE_THRESHOLD) {\n\t\t\t\ttabSwitchDirection = 1;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextEditor = this.groupView.getEditorByIndex(this.groupView.getIndexOfEditor(activeEditor) + tabSwitchDirection);\n\t\t\tif (!nextEditor) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Open it\n\t\t\tthis.groupView.openEditor(nextEditor);\n\n\t\t\t// Disable normal scrolling, opening the editor will already reveal it properly\n\t\t\tEventHelper.stop(e, true);\n\t\t}));\n\n\t\t// Context menu\n\t\tconst showContextMenu = (e: Event) => {\n\t\t\tEventHelper.stop(e);\n\n\t\t\t// Find target anchor\n\t\t\tlet anchor: HTMLElement | StandardMouseEvent = tabsContainer;\n\t\t\tif (isMouseEvent(e)) {\n\t\t\t\tanchor = new StandardMouseEvent(getWindow(this.parent), e);\n\t\t\t}\n\n\t\t\t// Show it\n\t\t\tthis.contextMenuService.showContextMenu({\n\t\t\t\tgetAnchor: () => anchor,\n\t\t\t\tmenuId: MenuId.EditorTabsBarContext,\n\t\t\t\tcontextKeyService: this.contextKeyService,\n\t\t\t\tmenuActionOptions: { shouldForwardArgs: true },\n\t\t\t\tgetActionsContext: () => ({ groupId: this.groupView.id }),\n\t\t\t\tgetKeyBinding: action => this.getKeybinding(action),\n\t\t\t\tonHide: () => this.groupView.focus()\n\t\t\t});\n\t\t};\n\n\t\tthis._register(addDisposableListener(tabsContainer, TouchEventType.Contextmenu, e => showContextMenu(e)));\n\t\tthis._register(addDisposableListener(tabsContainer, EventType.CONTEXT_MENU, e => showContextMenu(e)));\n\t}\n\n\tprivate doHandleDecorationsChange(): void {\n\n\t\t// A change to decorations potentially has an impact on the size of tabs\n\t\t// so we need to trigger a layout in that case to adjust things\n\t\tthis.layout(this.dimensions);\n\t}\n\n\tprotected override updateEditorActionsToolbar(): void {\n\t\tsuper.updateEditorActionsToolbar();\n\n\t\t// Changing the actions in the toolbar can have an impact on the size of the\n\t\t// tab container, so we need to layout the tabs to make sure the active is visible\n\t\tthis.layout(this.dimensions);\n\t}\n\n\topenEditor(editor: EditorInput, options?: IInternalEditorOpenOptions): boolean {\n\t\tconst changed = this.handleOpenedEditors();\n\n\t\t// Respect option to focus tab control if provided\n\t\tif (options?.focusTabControl) {\n\t\t\tthis.withTab(editor, (editor, tabIndex, tabContainer) => tabContainer.focus());\n\t\t}\n\n\t\treturn changed;\n\t}\n\n\topenEditors(editors: EditorInput[]): boolean {\n\t\treturn this.handleOpenedEditors();\n\t}\n\n\tprivate handleOpenedEditors(): boolean {\n\n\t\t// Set tabs control visibility\n\t\tthis.updateTabsControlVisibility();\n\n\t\t// Create tabs as needed\n\t\tconst [tabsContainer, tabsScrollbar] = assertAllDefined(this.tabsContainer, this.tabsScrollbar);\n\t\tfor (let i = tabsContainer.children.length; i < this.tabsModel.count; i++) {\n\t\t\ttabsContainer.appendChild(this.createTab(i, tabsContainer, tabsScrollbar));\n\t\t}\n\n\t\t// Make sure to recompute tab labels and detect\n\t\t// if a label change occurred that requires a\n\t\t// redraw of tabs.\n\n\t\tconst activeEditorChanged = this.didActiveEditorChange();\n\t\tconst oldActiveTabLabel = this.activeTabLabel;\n\t\tconst oldTabLabelsLength = this.tabLabels.length;\n\t\tthis.computeTabLabels();\n\n\t\t// Redraw and update in these cases\n\t\tlet didChange = false;\n\t\tif (\n\t\t\tactiveEditorChanged ||\t\t\t\t\t\t\t\t\t\t\t\t\t// active editor changed\n\t\t\toldTabLabelsLength !== this.tabLabels.length ||\t\t\t\t\t\t\t// number of tabs changed\n\t\t\t!this.equalsEditorInputLabel(oldActiveTabLabel, this.activeTabLabel)\t// active editor label changed\n\t\t) {\n\t\t\tthis.redraw({ forceRevealActiveTab: true });\n\t\t\tdidChange = true;\n\t\t}\n\n\t\t// Otherwise only layout for revealing\n\t\telse {\n\t\t\tthis.layout(this.dimensions, { forceRevealActiveTab: true });\n\t\t}\n\n\t\treturn didChange;\n\t}\n\n\tprivate didActiveEditorChange(): boolean {\n\t\tif (\n\t\t\t!this.activeTabLabel?.editor && this.tabsModel.activeEditor || \t\t\t\t\t\t\t// active editor changed from null => editor\n\t\t\tthis.activeTabLabel?.editor && !this.tabsModel.activeEditor || \t\t\t\t\t\t\t// active editor changed from editor => null\n\t\t\t(!this.activeTabLabel?.editor || !this.tabsModel.isActive(this.activeTabLabel.editor))\t// active editor changed from editorA => editorB\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate equalsEditorInputLabel(labelA: IEditorInputLabel | undefined, labelB: IEditorInputLabel | undefined): boolean {\n\t\tif (labelA === labelB) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (!labelA || !labelB) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn labelA.name === labelB.name &&\n\t\t\tlabelA.description === labelB.description &&\n\t\t\tlabelA.forceDescription === labelB.forceDescription &&\n\t\t\tlabelA.title === labelB.title &&\n\t\t\tlabelA.ariaLabel === labelB.ariaLabel;\n\t}\n\n\tbeforeCloseEditor(editor: EditorInput): void {\n\n\t\t// Fix tabs width if the mouse is over tabs and before closing\n\t\t// a tab (except the last tab) when tab sizing is 'fixed'.\n\t\t// This helps keeping the close button stable under\n\t\t// the mouse and allows for rapid closing of tabs.\n\n\t\tif (this.isMouseOverTabs && this.groupsView.partOptions.tabSizing === 'fixed') {\n\t\t\tconst closingLastTab = this.tabsModel.isLast(editor);\n\t\t\tthis.updateTabsFixedWidth(!closingLastTab);\n\t\t}\n\t}\n\n\tcloseEditor(editor: EditorInput): void {\n\t\tthis.handleClosedEditors();\n\t}\n\n\tcloseEditors(editors: EditorInput[]): void {\n\t\tthis.handleClosedEditors();\n\t}\n\n\tprivate handleClosedEditors(): void {\n\n\t\t// There are tabs to show\n\t\tif (this.tabsModel.count) {\n\n\t\t\t// Remove tabs that got closed\n\t\t\tconst tabsContainer = assertIsDefined(this.tabsContainer);\n\t\t\twhile (tabsContainer.children.length > this.tabsModel.count) {\n\n\t\t\t\t// Remove one tab from container (must be the last to keep indexes in order!)\n\t\t\t\ttabsContainer.lastChild?.remove();\n\n\t\t\t\t// Remove associated tab label and widget\n\t\t\t\tdispose(this.tabDisposables.pop());\n\t\t\t}\n\n\t\t\t// A removal of a label requires to recompute all labels\n\t\t\tthis.computeTabLabels();\n\n\t\t\t// Redraw all tabs\n\t\t\tthis.redraw({ forceRevealActiveTab: true });\n\t\t}\n\n\t\t// No tabs to show\n\t\telse {\n\t\t\tif (this.tabsContainer) {\n\t\t\t\tclearNode(this.tabsContainer);\n\t\t\t}\n\n\t\t\tthis.tabDisposables = dispose(this.tabDisposables);\n\t\t\tthis.tabResourceLabels.clear();\n\t\t\tthis.tabLabels = [];\n\t\t\tthis.activeTabLabel = undefined;\n\t\t\tthis.tabActionBars = [];\n\n\t\t\tthis.clearEditorActionsToolbar();\n\t\t\tthis.updateTabsControlVisibility();\n\t\t}\n\t}\n\n\tmoveEditor(editor: EditorInput, fromTabIndex: number, targeTabIndex: number): void {\n\n\t\t// Move the editor label\n\t\tconst editorLabel = this.tabLabels[fromTabIndex];\n\t\tthis.tabLabels.splice(fromTabIndex, 1);\n\t\tthis.tabLabels.splice(targeTabIndex, 0, editorLabel);\n\n\t\t// Redraw tabs in the range of the move\n\t\tthis.forEachTab((editor, tabIndex, tabContainer, tabLabelWidget, tabLabel, tabActionBar) => {\n\t\t\tthis.redrawTab(editor, tabIndex, tabContainer, tabLabelWidget, tabLabel, tabActionBar);\n\t\t},\n\t\t\tMath.min(fromTabIndex, targeTabIndex), \t// from: smallest of fromTabIndex/targeTabIndex\n\t\t\tMath.max(fromTabIndex, targeTabIndex)\t//   to: largest of fromTabIndex/targeTabIndex\n\t\t);\n\n\t\t// Moving an editor requires a layout to keep the active editor visible\n\t\tthis.layout(this.dimensions, { forceRevealActiveTab: true });\n\t}\n\n\tpinEditor(editor: EditorInput): void {\n\t\tthis.withTab(editor, (editor, tabIndex, tabContainer, tabLabelWidget, tabLabel) => this.redrawTabLabel(editor, tabIndex, tabContainer, tabLabelWidget, tabLabel));\n\t}\n\n\tstickEditor(editor: EditorInput): void {\n\t\tthis.doHandleStickyEditorChange(editor);\n\t}\n\n\tunstickEditor(editor: EditorInput): void {\n\t\tthis.doHandleStickyEditorChange(editor);\n\t}\n\n\tprivate doHandleStickyEditorChange(editor: EditorInput): void {\n\n\t\t// Update tab\n\t\tthis.withTab(editor, (editor, tabIndex, tabContainer, tabLabelWidget, tabLabel, tabActionBar) => this.redrawTab(editor, tabIndex, tabContainer, tabLabelWidget, tabLabel, tabActionBar));\n\n\t\t// Sticky change has an impact on each tab's border because\n\t\t// it potentially moves the border to the last pinned tab\n\t\tthis.forEachTab((editor, tabIndex, tabContainer, tabLabelWidget, tabLabel) => {\n\t\t\tthis.redrawTabBorders(tabIndex, tabContainer);\n\t\t});\n\n\t\t// A change to the sticky state requires a layout to keep the active editor visible\n\t\tthis.layout(this.dimensions, { forceRevealActiveTab: true });\n\t}\n\n\tsetActive(isGroupActive: boolean): void {\n\n\t\t// Activity has an impact on each tab's active indication\n\t\tthis.forEachTab((editor, tabIndex, tabContainer, tabLabelWidget, tabLabel, tabActionBar) => {\n\t\t\tthis.redrawTabSelectedActiveAndDirty(isGroupActive, editor, tabContainer, tabActionBar);\n\t\t});\n\n\t\t// Activity has an impact on the toolbar, so we need to update and layout\n\t\tthis.updateEditorActionsToolbar();\n\t\tthis.layout(this.dimensions, { forceRevealActiveTab: true });\n\t}\n\n\tupdateEditorSelections(): void {\n\t\tthis.forEachTab((editor, tabIndex, tabContainer, tabLabelWidget, tabLabel, tabActionBar) => {\n\t\t\tthis.redrawTabSelectedActiveAndDirty(this.groupsView.activeGroup === this.groupView, editor, tabContainer, tabActionBar);\n\t\t});\n\t}\n\n\tprivate updateEditorLabelScheduler = this._register(new RunOnceScheduler(() => this.doUpdateEditorLabels(), 0));\n\n\tupdateEditorLabel(editor: EditorInput): void {\n\n\t\t// Update all labels to account for changes to tab labels\n\t\t// Since this method may be called a lot of times from\n\t\t// individual editors, we collect all those requests and\n\t\t// then run the update once because we have to update\n\t\t// all opened tabs in the group at once.\n\t\tthis.updateEditorLabelScheduler.schedule();\n\t}\n\n\tprivate doUpdateEditorLabels(): void {\n\n\t\t// A change to a label requires to recompute all labels\n\t\tthis.computeTabLabels();\n\n\t\t// As such we need to redraw each label\n\t\tthis.forEachTab((editor, tabIndex, tabContainer, tabLabelWidget, tabLabel) => {\n\t\t\tthis.redrawTabLabel(editor, tabIndex, tabContainer, tabLabelWidget, tabLabel);\n\t\t});\n\n\t\t// A change to a label requires a layout to keep the active editor visible\n\t\tthis.layout(this.dimensions);\n\t}\n\n\tupdateEditorDirty(editor: EditorInput): void {\n\t\tthis.withTab(editor, (editor, tabIndex, tabContainer, tabLabelWidget, tabLabel, tabActionBar) => this.redrawTabSelectedActiveAndDirty(this.groupsView.activeGroup === this.groupView, editor, tabContainer, tabActionBar));\n\t}\n\n\toverride updateOptions(oldOptions: IEditorPartOptions, newOptions: IEditorPartOptions): void {\n\t\tsuper.updateOptions(oldOptions, newOptions);\n\n\t\t// A change to a label format options requires to recompute all labels\n\t\tif (oldOptions.labelFormat !== newOptions.labelFormat) {\n\t\t\tthis.computeTabLabels();\n\t\t}\n\n\t\t// Update tabs scrollbar sizing\n\t\tif (oldOptions.titleScrollbarSizing !== newOptions.titleScrollbarSizing) {\n\t\t\tthis.updateTabsScrollbarSizing();\n\t\t}\n\n\t\t// Update editor actions\n\t\tif (oldOptions.alwaysShowEditorActions !== newOptions.alwaysShowEditorActions) {\n\t\t\tthis.updateEditorActionsToolbar();\n\t\t}\n\n\t\t// Update tabs sizing\n\t\tif (\n\t\t\toldOptions.tabSizingFixedMinWidth !== newOptions.tabSizingFixedMinWidth ||\n\t\t\toldOptions.tabSizingFixedMaxWidth !== newOptions.tabSizingFixedMaxWidth ||\n\t\t\toldOptions.tabSizing !== newOptions.tabSizing\n\t\t) {\n\t\t\tthis.updateTabSizing(true);\n\t\t}\n\n\t\t// Redraw tabs when other options change\n\t\tif (\n\t\t\toldOptions.labelFormat !== newOptions.labelFormat ||\n\t\t\toldOptions.tabActionLocation !== newOptions.tabActionLocation ||\n\t\t\toldOptions.tabActionCloseVisibility !== newOptions.tabActionCloseVisibility ||\n\t\t\toldOptions.tabActionUnpinVisibility !== newOptions.tabActionUnpinVisibility ||\n\t\t\toldOptions.tabSizing !== newOptions.tabSizing ||\n\t\t\toldOptions.pinnedTabSizing !== newOptions.pinnedTabSizing ||\n\t\t\toldOptions.showIcons !== newOptions.showIcons ||\n\t\t\toldOptions.hasIcons !== newOptions.hasIcons ||\n\t\t\toldOptions.highlightModifiedTabs !== newOptions.highlightModifiedTabs ||\n\t\t\toldOptions.wrapTabs !== newOptions.wrapTabs ||\n\t\t\t!equals(oldOptions.decorations, newOptions.decorations)\n\t\t) {\n\t\t\tthis.redraw();\n\t\t}\n\t}\n\n\toverride updateStyles(): void {\n\t\tthis.redraw();\n\t}\n\n\tprivate forEachTab(fn: (editor: EditorInput, tabIndex: number, tabContainer: HTMLElement, tabLabelWidget: IResourceLabel, tabLabel: IEditorInputLabel, tabActionBar: ActionBar) => void, fromTabIndex?: number, toTabIndex?: number): void {\n\t\tthis.tabsModel.getEditors(EditorsOrder.SEQUENTIAL).forEach((editor: EditorInput, tabIndex: number) => {\n\t\t\tif (typeof fromTabIndex === 'number' && fromTabIndex > tabIndex) {\n\t\t\t\treturn; // do nothing if we are not yet at `fromIndex`\n\t\t\t}\n\n\t\t\tif (typeof toTabIndex === 'number' && toTabIndex < tabIndex) {\n\t\t\t\treturn; // do nothing if we are beyond `toIndex`\n\t\t\t}\n\n\t\t\tthis.doWithTab(tabIndex, editor, fn);\n\t\t});\n\t}\n\n\tprivate withTab(editor: EditorInput, fn: (editor: EditorInput, tabIndex: number, tabContainer: HTMLElement, tabLabelWidget: IResourceLabel, tabLabel: IEditorInputLabel, tabActionBar: ActionBar) => void): void {\n\t\tthis.doWithTab(this.tabsModel.indexOf(editor), editor, fn);\n\t}\n\n\tprivate doWithTab(tabIndex: number, editor: EditorInput, fn: (editor: EditorInput, tabIndex: number, tabContainer: HTMLElement, tabLabelWidget: IResourceLabel, tabLabel: IEditorInputLabel, tabActionBar: ActionBar) => void): void {\n\t\tconst tabsContainer = assertIsDefined(this.tabsContainer);\n\t\tconst tabContainer = tabsContainer.children[tabIndex] as HTMLElement;\n\t\tconst tabResourceLabel = this.tabResourceLabels.get(tabIndex);\n\t\tconst tabLabel = this.tabLabels[tabIndex];\n\t\tconst tabActionBar = this.tabActionBars[tabIndex];\n\t\tif (tabContainer && tabResourceLabel && tabLabel) {\n\t\t\tfn(editor, tabIndex, tabContainer, tabResourceLabel, tabLabel, tabActionBar);\n\t\t}\n\t}\n\n\tprivate createTab(tabIndex: number, tabsContainer: HTMLElement, tabsScrollbar: ScrollableElement): HTMLElement {\n\n\t\t// Tab Container\n\t\tconst tabContainer = document.createElement('div');\n\t\ttabContainer.draggable = true;\n\t\ttabContainer.setAttribute('role', 'tab');\n\t\ttabContainer.classList.add('tab');\n\n\t\t// Gesture Support\n\t\tthis._register(Gesture.addTarget(tabContainer));\n\n\t\t// Tab Border Top\n\t\tconst tabBorderTopContainer = document.createElement('div');\n\t\ttabBorderTopContainer.classList.add('tab-border-top-container');\n\t\ttabContainer.appendChild(tabBorderTopContainer);\n\n\t\t// Tab Editor Label\n\t\tconst editorLabel = this.tabResourceLabels.create(tabContainer, { hoverDelegate: this.getHoverDelegate() });\n\n\t\t// Tab Actions\n\t\tconst tabActionsContainer = document.createElement('div');\n\t\ttabActionsContainer.classList.add('tab-actions');\n\t\ttabContainer.appendChild(tabActionsContainer);\n\n\t\tconst that = this;\n\t\tconst tabActionRunner = new EditorCommandsContextActionRunner({\n\t\t\tgroupId: this.groupView.id,\n\t\t\tget editorIndex() { return that.toEditorIndex(tabIndex); }\n\t\t});\n\n\t\tconst tabActionBar = new ActionBar(tabActionsContainer, { ariaLabel: localize('ariaLabelTabActions', \"Tab actions\"), actionRunner: tabActionRunner });\n\t\tconst tabActionListener = tabActionBar.onWillRun(e => {\n\t\t\tif (e.action.id === this.closeEditorAction.id) {\n\t\t\t\tthis.blockRevealActiveTabOnce();\n\t\t\t}\n\t\t});\n\n\t\tconst tabActionBarDisposable = combinedDisposable(tabActionBar, tabActionListener, toDisposable(insert(this.tabActionBars, tabActionBar)));\n\n\t\t// Tab Fade Hider\n\t\t// Hides the tab fade to the right when tab action left and sizing shrink/fixed, ::after, ::before are already used\n\t\tconst tabShadowHider = document.createElement('div');\n\t\ttabShadowHider.classList.add('tab-fade-hider');\n\t\ttabContainer.appendChild(tabShadowHider);\n\n\t\t// Tab Border Bottom\n\t\tconst tabBorderBottomContainer = document.createElement('div');\n\t\ttabBorderBottomContainer.classList.add('tab-border-bottom-container');\n\t\ttabContainer.appendChild(tabBorderBottomContainer);\n\n\t\t// Eventing\n\t\tconst eventsDisposable = this.registerTabListeners(tabContainer, tabIndex, tabsContainer, tabsScrollbar);\n\n\t\tthis.tabDisposables.push(combinedDisposable(eventsDisposable, tabActionBarDisposable, tabActionRunner, editorLabel));\n\n\t\treturn tabContainer;\n\t}\n\n\tprivate toEditorIndex(tabIndex: number): number {\n\n\t\t// Given a `tabIndex` that is relative to the tabs model\n\t\t// returns the `editorIndex` relative to the entire group\n\n\t\tconst editor = assertIsDefined(this.tabsModel.getEditorByIndex(tabIndex));\n\n\t\treturn this.groupView.getIndexOfEditor(editor);\n\t}\n\n\tprivate lastSingleSelectSelectedEditor: EditorInput | undefined;\n\tprivate registerTabListeners(tab: HTMLElement, tabIndex: number, tabsContainer: HTMLElement, tabsScrollbar: ScrollableElement): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst handleClickOrTouch = async (e: MouseEvent | GestureEvent, preserveFocus: boolean): Promise<void> => {\n\t\t\ttab.blur(); // prevent flicker of focus outline on tab until editor got focus\n\n\t\t\tif (isMouseEvent(e) && (e.button !== 0 /* middle/right mouse button */ || (isMacintosh && e.ctrlKey /* macOS context menu */))) {\n\t\t\t\tif (e.button === 1) {\n\t\t\t\t\te.preventDefault(); // required to prevent auto-scrolling (https://github.com/microsoft/vscode/issues/16690)\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.originatesFromTabActionBar(e)) {\n\t\t\t\treturn; // not when clicking on actions\n\t\t\t}\n\n\t\t\t// Open tabs editor\n\t\t\tconst editor = this.tabsModel.getEditorByIndex(tabIndex);\n\t\t\tif (editor) {\n\t\t\t\tif (e.shiftKey) {\n\t\t\t\t\tlet anchor: EditorInput;\n\t\t\t\t\tif (this.lastSingleSelectSelectedEditor && this.tabsModel.isSelected(this.lastSingleSelectSelectedEditor)) {\n\t\t\t\t\t\t// The last selected editor is the anchor\n\t\t\t\t\t\tanchor = this.lastSingleSelectSelectedEditor;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// The active editor is the anchor\n\t\t\t\t\t\tconst activeEditor = assertIsDefined(this.groupView.activeEditor);\n\t\t\t\t\t\tthis.lastSingleSelectSelectedEditor = activeEditor;\n\t\t\t\t\t\tanchor = activeEditor;\n\t\t\t\t\t}\n\t\t\t\t\tawait this.selectEditorsBetween(editor, anchor);\n\t\t\t\t} else if ((e.ctrlKey && !isMacintosh) || (e.metaKey && isMacintosh)) {\n\t\t\t\t\tif (this.tabsModel.isSelected(editor)) {\n\t\t\t\t\t\tawait this.unselectEditor(editor);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait this.selectEditor(editor);\n\t\t\t\t\t\tthis.lastSingleSelectSelectedEditor = editor;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Even if focus is preserved make sure to activate the group.\n\t\t\t\t\t// If a new active editor is selected, keep the current selection on key\n\t\t\t\t\t// down such that drag and drop can operate over the selection. The selection\n\t\t\t\t\t// is removed on key up in this case.\n\t\t\t\t\tconst inactiveSelection = this.tabsModel.isSelected(editor) ? this.groupView.selectedEditors.filter(e => !e.matches(editor)) : [];\n\t\t\t\t\tawait this.groupView.openEditor(editor, { preserveFocus, activation: EditorActivation.ACTIVATE }, { inactiveSelection, focusTabControl: true });\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst showContextMenu = (e: Event) => {\n\t\t\tEventHelper.stop(e);\n\n\t\t\tconst editor = this.tabsModel.getEditorByIndex(tabIndex);\n\t\t\tif (editor) {\n\t\t\t\tthis.onTabContextMenu(editor, e, tab);\n\t\t\t}\n\t\t};\n\n\t\t// Open on Click / Touch\n\t\tdisposables.add(addDisposableListener(tab, EventType.MOUSE_DOWN, e => handleClickOrTouch(e, false)));\n\t\tdisposables.add(addDisposableListener(tab, TouchEventType.Tap, (e: GestureEvent) => handleClickOrTouch(e, true))); // Preserve focus on touch #125470\n\n\t\t// Touch Scroll Support\n\t\tdisposables.add(addDisposableListener(tab, TouchEventType.Change, (e: GestureEvent) => {\n\t\t\ttabsScrollbar.setScrollPosition({ scrollLeft: tabsScrollbar.getScrollPosition().scrollLeft - e.translationX });\n\t\t}));\n\n\t\t// Update selection & prevent flicker of focus outline on tab until editor got focus\n\t\tdisposables.add(addDisposableListener(tab, EventType.MOUSE_UP, async e => {\n\t\t\tEventHelper.stop(e);\n\n\t\t\ttab.blur();\n\n\t\t\tif (isMouseEvent(e) && (e.button !== 0 /* middle/right mouse button */ || (isMacintosh && e.ctrlKey /* macOS context menu */))) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.originatesFromTabActionBar(e)) {\n\t\t\t\treturn; // not when clicking on actions\n\t\t\t}\n\n\t\t\tconst isCtrlCmd = (e.ctrlKey && !isMacintosh) || (e.metaKey && isMacintosh);\n\t\t\tif (!isCtrlCmd && !e.shiftKey && this.groupView.selectedEditors.length > 1) {\n\t\t\t\tawait this.unselectAllEditors();\n\t\t\t}\n\t\t}));\n\n\t\t// Close on mouse middle click\n\t\tdisposables.add(addDisposableListener(tab, EventType.AUXCLICK, e => {\n\t\t\tif (e.button === 1 /* Middle Button*/) {\n\t\t\t\tEventHelper.stop(e, true /* for https://github.com/microsoft/vscode/issues/56715 */);\n\n\t\t\t\tconst editor = this.tabsModel.getEditorByIndex(tabIndex);\n\t\t\t\tif (editor) {\n\t\t\t\t\tif (preventEditorClose(this.tabsModel, editor, EditorCloseMethod.MOUSE, this.groupsView.partOptions)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.blockRevealActiveTabOnce();\n\t\t\t\t\tthis.closeEditorAction.run({ groupId: this.groupView.id, editorIndex: this.groupView.getIndexOfEditor(editor) });\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Context menu on Shift+F10\n\t\tdisposables.add(addDisposableListener(tab, EventType.KEY_DOWN, e => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\tif (event.shiftKey && event.keyCode === KeyCode.F10) {\n\t\t\t\tshowContextMenu(e);\n\t\t\t}\n\t\t}));\n\n\t\t// Context menu on touch context menu gesture\n\t\tdisposables.add(addDisposableListener(tab, TouchEventType.Contextmenu, (e: GestureEvent) => {\n\t\t\tshowContextMenu(e);\n\t\t}));\n\n\t\t// Keyboard accessibility\n\t\tdisposables.add(addDisposableListener(tab, EventType.KEY_UP, e => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\tlet handled = false;\n\n\t\t\t// Run action on Enter/Space\n\t\t\tif (event.equals(KeyCode.Enter) || event.equals(KeyCode.Space)) {\n\t\t\t\thandled = true;\n\t\t\t\tconst editor = this.tabsModel.getEditorByIndex(tabIndex);\n\t\t\t\tif (editor) {\n\t\t\t\t\tthis.groupView.openEditor(editor);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Navigate in editors\n\t\t\telse if ([KeyCode.LeftArrow, KeyCode.RightArrow, KeyCode.UpArrow, KeyCode.DownArrow, KeyCode.Home, KeyCode.End].some(kb => event.equals(kb))) {\n\t\t\t\tlet editorIndex = this.toEditorIndex(tabIndex);\n\t\t\t\tif (event.equals(KeyCode.LeftArrow) || event.equals(KeyCode.UpArrow)) {\n\t\t\t\t\teditorIndex = editorIndex - 1;\n\t\t\t\t} else if (event.equals(KeyCode.RightArrow) || event.equals(KeyCode.DownArrow)) {\n\t\t\t\t\teditorIndex = editorIndex + 1;\n\t\t\t\t} else if (event.equals(KeyCode.Home)) {\n\t\t\t\t\teditorIndex = 0;\n\t\t\t\t} else {\n\t\t\t\t\teditorIndex = this.groupView.count - 1;\n\t\t\t\t}\n\n\t\t\t\tconst target = this.groupView.getEditorByIndex(editorIndex);\n\t\t\t\tif (target) {\n\t\t\t\t\thandled = true;\n\t\t\t\t\tthis.groupView.openEditor(target, { preserveFocus: true }, { focusTabControl: true });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (handled) {\n\t\t\t\tEventHelper.stop(e, true);\n\t\t\t}\n\n\t\t\t// moving in the tabs container can have an impact on scrolling position, so we need to update the custom scrollbar\n\t\t\ttabsScrollbar.setScrollPosition({\n\t\t\t\tscrollLeft: tabsContainer.scrollLeft\n\t\t\t});\n\t\t}));\n\n\t\t// Double click: either pin or toggle maximized\n\t\tfor (const eventType of [TouchEventType.Tap, EventType.DBLCLICK]) {\n\t\t\tdisposables.add(addDisposableListener(tab, eventType, (e: MouseEvent | GestureEvent) => {\n\t\t\t\tif (eventType === EventType.DBLCLICK) {\n\t\t\t\t\tEventHelper.stop(e);\n\t\t\t\t} else if ((<GestureEvent>e).tapCount !== 2) {\n\t\t\t\t\treturn; // ignore single taps\n\t\t\t\t}\n\n\t\t\t\tconst editor = this.tabsModel.getEditorByIndex(tabIndex);\n\t\t\t\tif (editor && this.tabsModel.isPinned(editor)) {\n\t\t\t\t\tswitch (this.groupsView.partOptions.doubleClickTabToToggleEditorGroupSizes) {\n\t\t\t\t\t\tcase 'maximize':\n\t\t\t\t\t\t\tthis.groupsView.toggleMaximizeGroup(this.groupView);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'expand':\n\t\t\t\t\t\t\tthis.groupsView.toggleExpandGroup(this.groupView);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'off':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tthis.groupView.pinEditor(editor);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\t// Context menu\n\t\tdisposables.add(addDisposableListener(tab, EventType.CONTEXT_MENU, e => {\n\t\t\tEventHelper.stop(e, true);\n\n\t\t\tconst editor = this.tabsModel.getEditorByIndex(tabIndex);\n\t\t\tif (editor) {\n\t\t\t\tthis.onTabContextMenu(editor, e, tab);\n\t\t\t}\n\t\t}, true /* use capture to fix https://github.com/microsoft/vscode/issues/19145 */));\n\n\t\t// Drag & Drop support\n\t\tlet lastDragEvent: DragEvent | undefined = undefined;\n\t\tlet isNewWindowOperation = false;\n\t\tdisposables.add(new DragAndDropObserver(tab, {\n\t\t\tonDragStart: e => {\n\t\t\t\tconst editor = this.tabsModel.getEditorByIndex(tabIndex);\n\t\t\t\tif (!editor) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tisNewWindowOperation = this.isNewWindowOperation(e);\n\t\t\t\tconst selectedEditors = this.groupView.selectedEditors;\n\t\t\t\tthis.editorTransfer.setData(selectedEditors.map(e => new DraggedEditorIdentifier({ editor: e, groupId: this.groupView.id })), DraggedEditorIdentifier.prototype);\n\n\t\t\t\tif (e.dataTransfer) {\n\t\t\t\t\te.dataTransfer.effectAllowed = 'copyMove';\n\t\t\t\t\tif (selectedEditors.length > 1) {\n\t\t\t\t\t\tconst label = `${editor.getName()} + ${selectedEditors.length - 1}`;\n\t\t\t\t\t\tapplyDragImage(e, label, 'monaco-editor-group-drag-image', this.getColor(listActiveSelectionBackground), this.getColor(listActiveSelectionForeground));\n\t\t\t\t\t} else {\n\t\t\t\t\t\te.dataTransfer.setDragImage(tab, 0, 0); // top left corner of dragged tab set to cursor position to make room for drop-border feedback\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply some datatransfer types to allow for dragging the element outside of the application\n\t\t\t\tthis.doFillResourceDataTransfers(selectedEditors, e, isNewWindowOperation);\n\n\t\t\t\tscheduleAtNextAnimationFrame(getWindow(this.parent), () => this.updateDropFeedback(tab, false, e, tabIndex));\n\t\t\t},\n\n\t\t\tonDrag: e => {\n\t\t\t\tlastDragEvent = e;\n\t\t\t},\n\n\t\t\tonDragEnter: e => {\n\n\t\t\t\t// Return if transfer is unsupported\n\t\t\t\tif (!this.isSupportedDropTransfer(e)) {\n\t\t\t\t\tif (e.dataTransfer) {\n\t\t\t\t\t\te.dataTransfer.dropEffect = 'none';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Update the dropEffect to \"copy\" if there is no local data to be dragged because\n\t\t\t\t// in that case we can only copy the data into and not move it from its source\n\t\t\t\tif (!this.editorTransfer.hasData(DraggedEditorIdentifier.prototype)) {\n\t\t\t\t\tif (e.dataTransfer) {\n\t\t\t\t\t\te.dataTransfer.dropEffect = 'copy';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.updateDropFeedback(tab, true, e, tabIndex);\n\t\t\t},\n\n\t\t\tonDragOver: (e, dragDuration) => {\n\t\t\t\tif (dragDuration >= MultiEditorTabsControl.DRAG_OVER_OPEN_TAB_THRESHOLD) {\n\t\t\t\t\tconst draggedOverTab = this.tabsModel.getEditorByIndex(tabIndex);\n\t\t\t\t\tif (draggedOverTab && this.tabsModel.activeEditor !== draggedOverTab) {\n\t\t\t\t\t\tthis.groupView.openEditor(draggedOverTab, { preserveFocus: true });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.updateDropFeedback(tab, true, e, tabIndex);\n\t\t\t},\n\n\t\t\tonDragEnd: async e => {\n\t\t\t\tthis.updateDropFeedback(tab, false, e, tabIndex);\n\t\t\t\tconst draggedEditors = this.editorTransfer.getData(DraggedEditorIdentifier.prototype);\n\t\t\t\tthis.editorTransfer.clearData(DraggedEditorIdentifier.prototype);\n\n\t\t\t\tif (\n\t\t\t\t\t!isNewWindowOperation ||\n\t\t\t\t\tisWindowDraggedOver() ||\n\t\t\t\t\t!draggedEditors ||\n\t\t\t\t\tdraggedEditors.length === 0\n\t\t\t\t) {\n\t\t\t\t\treturn; // drag to open in new window is disabled\n\t\t\t\t}\n\n\t\t\t\tconst auxiliaryEditorPart = await this.maybeCreateAuxiliaryEditorPartAt(e, tab);\n\t\t\t\tif (!auxiliaryEditorPart) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst targetGroup = auxiliaryEditorPart.activeGroup;\n\t\t\t\tconst editors = draggedEditors.map(de => ({ editor: de.identifier.editor }));\n\t\t\t\tif (this.isMoveOperation(lastDragEvent ?? e, targetGroup.id, draggedEditors[0].identifier.editor)) {\n\t\t\t\t\tthis.groupView.moveEditors(editors, targetGroup);\n\t\t\t\t} else {\n\t\t\t\t\tthis.groupView.copyEditors(editors, targetGroup);\n\t\t\t\t}\n\n\t\t\t\ttargetGroup.focus();\n\t\t\t},\n\n\t\t\tonDrop: e => {\n\t\t\t\tthis.updateDropFeedback(tab, false, e, tabIndex);\n\n\t\t\t\t// compute the target index\n\t\t\t\tlet targetIndex = tabIndex;\n\t\t\t\tif (this.getTabDragOverLocation(e, tab) === 'right') {\n\t\t\t\t\ttargetIndex++;\n\t\t\t\t}\n\n\t\t\t\tthis.onDrop(e, targetIndex, tabsContainer);\n\t\t\t}\n\t\t}));\n\n\t\treturn disposables;\n\t}\n\n\tprivate isSupportedDropTransfer(e: DragEvent): boolean {\n\t\tif (this.groupTransfer.hasData(DraggedEditorGroupIdentifier.prototype)) {\n\t\t\tconst data = this.groupTransfer.getData(DraggedEditorGroupIdentifier.prototype);\n\t\t\tif (Array.isArray(data) && data.length > 0) {\n\t\t\t\tconst group = data[0];\n\t\t\t\tif (group.identifier === this.groupView.id) {\n\t\t\t\t\treturn false; // groups cannot be dropped on group it originates from\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this.editorTransfer.hasData(DraggedEditorIdentifier.prototype)) {\n\t\t\treturn true; // (local) editors can always be dropped\n\t\t}\n\n\t\tif (e.dataTransfer && e.dataTransfer.types.length > 0) {\n\t\t\treturn true; // optimistically allow external data (// see https://github.com/microsoft/vscode/issues/25789)\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate updateDropFeedback(element: HTMLElement, isDND: boolean, e: DragEvent, tabIndex?: number): void {\n\t\tconst isTab = (typeof tabIndex === 'number');\n\n\t\tlet dropTarget;\n\t\tif (isDND) {\n\t\t\tif (isTab) {\n\t\t\t\tdropTarget = this.computeDropTarget(e, tabIndex, element);\n\t\t\t} else {\n\t\t\t\tdropTarget = { leftElement: element.lastElementChild as HTMLElement, rightElement: undefined };\n\t\t\t}\n\t\t} else {\n\t\t\tdropTarget = undefined;\n\t\t}\n\n\t\tthis.updateDropTarget(dropTarget);\n\t}\n\n\tprivate dropTarget: { leftElement: HTMLElement | undefined; rightElement: HTMLElement | undefined } | undefined;\n\tprivate updateDropTarget(newTarget: { leftElement: HTMLElement | undefined; rightElement: HTMLElement | undefined } | undefined): void {\n\t\tconst oldTargets = this.dropTarget;\n\t\tif (oldTargets === newTarget || oldTargets && newTarget && oldTargets.leftElement === newTarget.leftElement && oldTargets.rightElement === newTarget.rightElement) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst dropClassLeft = 'drop-target-left';\n\t\tconst dropClassRight = 'drop-target-right';\n\n\t\tif (oldTargets) {\n\t\t\toldTargets.leftElement?.classList.remove(dropClassLeft);\n\t\t\toldTargets.rightElement?.classList.remove(dropClassRight);\n\t\t}\n\n\t\tif (newTarget) {\n\t\t\tnewTarget.leftElement?.classList.add(dropClassLeft);\n\t\t\tnewTarget.rightElement?.classList.add(dropClassRight);\n\t\t}\n\n\t\tthis.dropTarget = newTarget;\n\t}\n\n\tprivate getTabDragOverLocation(e: DragEvent, tab: HTMLElement): 'left' | 'right' {\n\t\tconst rect = tab.getBoundingClientRect();\n\t\tconst offsetXRelativeToParent = e.clientX - rect.left;\n\n\t\treturn offsetXRelativeToParent <= rect.width / 2 ? 'left' : 'right';\n\t}\n\n\tprivate computeDropTarget(e: DragEvent, tabIndex: number, targetTab: HTMLElement): { leftElement: HTMLElement | undefined; rightElement: HTMLElement | undefined } | undefined {\n\t\tconst isLeftSideOfTab = this.getTabDragOverLocation(e, targetTab) === 'left';\n\t\tconst isLastTab = tabIndex === this.tabsModel.count - 1;\n\t\tconst isFirstTab = tabIndex === 0;\n\n\t\t// Before first tab\n\t\tif (isLeftSideOfTab && isFirstTab) {\n\t\t\treturn { leftElement: undefined, rightElement: targetTab };\n\t\t}\n\n\t\t// After last tab\n\t\tif (!isLeftSideOfTab && isLastTab) {\n\t\t\treturn { leftElement: targetTab, rightElement: undefined };\n\t\t}\n\n\t\t// Between two tabs\n\t\tconst tabBefore = isLeftSideOfTab ? targetTab.previousElementSibling : targetTab;\n\t\tconst tabAfter = isLeftSideOfTab ? targetTab : targetTab.nextElementSibling;\n\n\t\treturn { leftElement: tabBefore as HTMLElement, rightElement: tabAfter as HTMLElement };\n\t}\n\n\tprivate async selectEditor(editor: EditorInput): Promise<void> {\n\t\tif (this.groupView.isActive(editor)) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.groupView.setSelection(editor, this.groupView.selectedEditors);\n\t}\n\n\tprivate async selectEditorsBetween(target: EditorInput, anchor: EditorInput): Promise<void> {\n\t\tconst editorIndex = this.groupView.getIndexOfEditor(target);\n\t\tif (editorIndex === -1) {\n\t\t\tthrow new BugIndicatingError();\n\t\t}\n\n\t\tconst anchorEditorIndex = this.groupView.getIndexOfEditor(anchor);\n\t\tif (anchorEditorIndex === -1) {\n\t\t\tthrow new BugIndicatingError();\n\t\t}\n\n\t\tlet selection = this.groupView.selectedEditors;\n\n\t\t// Unselect editors on other side of anchor in relation to the target\n\t\tlet currentEditorIndex = anchorEditorIndex;\n\t\twhile (currentEditorIndex >= 0 && currentEditorIndex <= this.groupView.count - 1) {\n\t\t\tcurrentEditorIndex = anchorEditorIndex < editorIndex ? currentEditorIndex - 1 : currentEditorIndex + 1;\n\n\t\t\tconst currentEditor = this.groupView.getEditorByIndex(currentEditorIndex);\n\t\t\tif (!currentEditor) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (!this.groupView.isSelected(currentEditor)) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tselection = selection.filter(editor => !editor.matches(currentEditor));\n\t\t}\n\n\t\t// Select editors between anchor and target\n\t\tconst fromEditorIndex = anchorEditorIndex < editorIndex ? anchorEditorIndex : editorIndex;\n\t\tconst toEditorIndex = anchorEditorIndex < editorIndex ? editorIndex : anchorEditorIndex;\n\n\t\tconst editorsToSelect = this.groupView.getEditors(EditorsOrder.SEQUENTIAL).slice(fromEditorIndex, toEditorIndex + 1);\n\t\tfor (const editor of editorsToSelect) {\n\t\t\tif (!this.groupView.isSelected(editor)) {\n\t\t\t\tselection.push(editor);\n\t\t\t}\n\t\t}\n\n\t\tconst inactiveSelectedEditors = selection.filter(editor => !editor.matches(target));\n\t\tawait this.groupView.setSelection(target, inactiveSelectedEditors);\n\t}\n\n\tprivate async unselectEditor(editor: EditorInput): Promise<void> {\n\t\tconst isUnselectingActiveEditor = this.groupView.isActive(editor);\n\n\t\t// If there is only one editor selected, do not unselect it\n\t\tif (isUnselectingActiveEditor && this.groupView.selectedEditors.length === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet newActiveEditor = assertIsDefined(this.groupView.activeEditor);\n\n\t\t// If active editor is bing unselected then find the most recently opened selected editor\n\t\t// that is not the editor being unselected\n\t\tif (isUnselectingActiveEditor) {\n\t\t\tconst recentEditors = this.groupView.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE);\n\t\t\tfor (let i = 1; i < recentEditors.length; i++) { // First one is the active editor\n\t\t\t\tconst recentEditor = recentEditors[i];\n\t\t\t\tif (this.groupView.isSelected(recentEditor)) {\n\t\t\t\t\tnewActiveEditor = recentEditor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst inactiveSelectedEditors = this.groupView.selectedEditors.filter(e => !e.matches(editor) && !e.matches(newActiveEditor));\n\t\tawait this.groupView.setSelection(newActiveEditor, inactiveSelectedEditors);\n\t}\n\n\tprivate async unselectAllEditors(): Promise<void> {\n\t\tif (this.groupView.selectedEditors.length > 1) {\n\t\t\tconst activeEditor = assertIsDefined(this.groupView.activeEditor);\n\t\t\tawait this.groupView.setSelection(activeEditor, []);\n\t\t}\n\t}\n\n\tprivate computeTabLabels(): void {\n\t\tconst { labelFormat } = this.groupsView.partOptions;\n\t\tconst { verbosity, shortenDuplicates } = this.getLabelConfigFlags(labelFormat);\n\n\t\t// Build labels and descriptions for each editor\n\t\tconst labels: IEditorInputLabel[] = [];\n\t\tlet activeEditorTabIndex = -1;\n\t\tthis.tabsModel.getEditors(EditorsOrder.SEQUENTIAL).forEach((editor: EditorInput, tabIndex: number) => {\n\t\t\tlabels.push({\n\t\t\t\teditor,\n\t\t\t\tname: editor.getName(),\n\t\t\t\tdescription: editor.getDescription(verbosity),\n\t\t\t\tforceDescription: editor.hasCapability(EditorInputCapabilities.ForceDescription),\n\t\t\t\ttitle: editor.getTitle(Verbosity.LONG),\n\t\t\t\tariaLabel: computeEditorAriaLabel(editor, tabIndex, this.groupView, this.editorPartsView.count)\n\t\t\t});\n\n\t\t\tif (editor === this.tabsModel.activeEditor) {\n\t\t\t\tactiveEditorTabIndex = tabIndex;\n\t\t\t}\n\t\t});\n\n\t\t// Shorten labels as needed\n\t\tif (shortenDuplicates) {\n\t\t\tthis.shortenTabLabels(labels);\n\t\t}\n\n\t\t// Remember for fast lookup\n\t\tthis.tabLabels = labels;\n\t\tthis.activeTabLabel = labels[activeEditorTabIndex];\n\t}\n\n\tprivate shortenTabLabels(labels: IEditorInputLabel[]): void {\n\n\t\t// Gather duplicate titles, while filtering out invalid descriptions\n\t\tconst mapNameToDuplicates = new Map<string, IEditorInputLabel[]>();\n\t\tfor (const label of labels) {\n\t\t\tif (typeof label.description === 'string') {\n\t\t\t\tgetOrSet(mapNameToDuplicates, label.name, []).push(label);\n\t\t\t} else {\n\t\t\t\tlabel.description = '';\n\t\t\t}\n\t\t}\n\n\t\t// Identify duplicate names and shorten descriptions\n\t\tfor (const [, duplicateLabels] of mapNameToDuplicates) {\n\n\t\t\t// Remove description if the title isn't duplicated\n\t\t\t// and we have no indication to enforce description\n\t\t\tif (duplicateLabels.length === 1 && !duplicateLabels[0].forceDescription) {\n\t\t\t\tduplicateLabels[0].description = '';\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Identify duplicate descriptions\n\t\t\tconst mapDescriptionToDuplicates = new Map<string, IEditorInputLabel[]>();\n\t\t\tfor (const duplicateLabel of duplicateLabels) {\n\t\t\t\tgetOrSet(mapDescriptionToDuplicates, duplicateLabel.description, []).push(duplicateLabel);\n\t\t\t}\n\n\t\t\t// For editors with duplicate descriptions, check whether any long descriptions differ\n\t\t\tlet useLongDescriptions = false;\n\t\t\tfor (const [, duplicateLabels] of mapDescriptionToDuplicates) {\n\t\t\t\tif (!useLongDescriptions && duplicateLabels.length > 1) {\n\t\t\t\t\tconst [first, ...rest] = duplicateLabels.map(({ editor }) => editor.getDescription(Verbosity.LONG));\n\t\t\t\t\tuseLongDescriptions = rest.some(description => description !== first);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If so, replace all descriptions with long descriptions\n\t\t\tif (useLongDescriptions) {\n\t\t\t\tmapDescriptionToDuplicates.clear();\n\t\t\t\tfor (const duplicateLabel of duplicateLabels) {\n\t\t\t\t\tduplicateLabel.description = duplicateLabel.editor.getDescription(Verbosity.LONG);\n\t\t\t\t\tgetOrSet(mapDescriptionToDuplicates, duplicateLabel.description, []).push(duplicateLabel);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Obtain final set of descriptions\n\t\t\tconst descriptions: string[] = [];\n\t\t\tfor (const [description] of mapDescriptionToDuplicates) {\n\t\t\t\tdescriptions.push(description);\n\t\t\t}\n\n\t\t\t// Remove description if all descriptions are identical unless forced\n\t\t\tif (descriptions.length === 1) {\n\t\t\t\tfor (const label of mapDescriptionToDuplicates.get(descriptions[0]) || []) {\n\t\t\t\t\tif (!label.forceDescription) {\n\t\t\t\t\t\tlabel.description = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Shorten descriptions\n\t\t\tconst shortenedDescriptions = shorten(descriptions, this.path.sep);\n\t\t\tdescriptions.forEach((description, tabIndex) => {\n\t\t\t\tfor (const label of mapDescriptionToDuplicates.get(description) || []) {\n\t\t\t\t\tlabel.description = shortenedDescriptions[tabIndex];\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate getLabelConfigFlags(value: string | undefined) {\n\t\tswitch (value) {\n\t\t\tcase 'short':\n\t\t\t\treturn { verbosity: Verbosity.SHORT, shortenDuplicates: false };\n\t\t\tcase 'medium':\n\t\t\t\treturn { verbosity: Verbosity.MEDIUM, shortenDuplicates: false };\n\t\t\tcase 'long':\n\t\t\t\treturn { verbosity: Verbosity.LONG, shortenDuplicates: false };\n\t\t\tdefault:\n\t\t\t\treturn { verbosity: Verbosity.MEDIUM, shortenDuplicates: true };\n\t\t}\n\t}\n\n\tprivate redraw(options?: IMultiEditorTabsControlLayoutOptions): void {\n\n\t\t// Border below tabs if any with explicit high contrast support\n\t\tif (this.tabsAndActionsContainer) {\n\t\t\tlet tabsContainerBorderColor = this.getColor(EDITOR_GROUP_HEADER_TABS_BORDER);\n\t\t\tif (!tabsContainerBorderColor && isHighContrast(this.theme.type)) {\n\t\t\t\ttabsContainerBorderColor = this.getColor(TAB_BORDER) || this.getColor(contrastBorder);\n\t\t\t}\n\n\t\t\tif (tabsContainerBorderColor) {\n\t\t\t\tthis.tabsAndActionsContainer.classList.add('tabs-border-bottom');\n\t\t\t\tthis.tabsAndActionsContainer.style.setProperty('--tabs-border-bottom-color', tabsContainerBorderColor.toString());\n\t\t\t} else {\n\t\t\t\tthis.tabsAndActionsContainer.classList.remove('tabs-border-bottom');\n\t\t\t\tthis.tabsAndActionsContainer.style.removeProperty('--tabs-border-bottom-color');\n\t\t\t}\n\t\t}\n\n\t\t// For each tab\n\t\tthis.forEachTab((editor, tabIndex, tabContainer, tabLabelWidget, tabLabel, tabActionBar) => {\n\t\t\tthis.redrawTab(editor, tabIndex, tabContainer, tabLabelWidget, tabLabel, tabActionBar);\n\t\t});\n\n\t\t// Update Editor Actions Toolbar\n\t\tthis.updateEditorActionsToolbar();\n\n\t\t// Ensure the active tab is always revealed\n\t\tthis.layout(this.dimensions, options);\n\t}\n\n\tprivate redrawTab(editor: EditorInput, tabIndex: number, tabContainer: HTMLElement, tabLabelWidget: IResourceLabel, tabLabel: IEditorInputLabel, tabActionBar: ActionBar): void {\n\t\tconst isTabSticky = this.tabsModel.isSticky(tabIndex);\n\t\tconst options = this.groupsView.partOptions;\n\n\t\t// Label\n\t\tthis.redrawTabLabel(editor, tabIndex, tabContainer, tabLabelWidget, tabLabel);\n\n\t\t// Action\n\t\tconst hasUnpinAction = isTabSticky && options.tabActionUnpinVisibility;\n\t\tconst hasCloseAction = !hasUnpinAction && options.tabActionCloseVisibility;\n\t\tconst hasAction = hasUnpinAction || hasCloseAction;\n\n\t\tlet tabAction;\n\t\tif (hasAction) {\n\t\t\ttabAction = hasUnpinAction ? this.unpinEditorAction : this.closeEditorAction;\n\t\t} else {\n\t\t\t// Even if the action is not visible, add it as it contains the dirty indicator\n\t\t\ttabAction = isTabSticky ? this.unpinEditorAction : this.closeEditorAction;\n\t\t}\n\n\t\tif (!tabActionBar.hasAction(tabAction)) {\n\t\t\tif (!tabActionBar.isEmpty()) {\n\t\t\t\ttabActionBar.clear();\n\t\t\t}\n\n\t\t\ttabActionBar.push(tabAction, { icon: true, label: false, keybinding: this.getKeybindingLabel(tabAction) });\n\t\t}\n\n\t\ttabContainer.classList.toggle(`pinned-action-off`, isTabSticky && !hasUnpinAction);\n\t\ttabContainer.classList.toggle(`close-action-off`, !hasUnpinAction && !hasCloseAction);\n\n\t\tfor (const option of ['left', 'right']) {\n\t\t\ttabContainer.classList.toggle(`tab-actions-${option}`, hasAction && options.tabActionLocation === option);\n\t\t}\n\n\t\tconst tabSizing = isTabSticky && options.pinnedTabSizing === 'shrink' ? 'shrink' /* treat sticky shrink tabs as tabSizing: 'shrink' */ : options.tabSizing;\n\t\tfor (const option of ['fit', 'shrink', 'fixed']) {\n\t\t\ttabContainer.classList.toggle(`sizing-${option}`, tabSizing === option);\n\t\t}\n\n\t\ttabContainer.classList.toggle('has-icon', options.showIcons && options.hasIcons);\n\n\t\ttabContainer.classList.toggle('sticky', isTabSticky);\n\t\tfor (const option of ['normal', 'compact', 'shrink']) {\n\t\t\ttabContainer.classList.toggle(`sticky-${option}`, isTabSticky && options.pinnedTabSizing === option);\n\t\t}\n\n\t\t// If not wrapping tabs, sticky compact/shrink tabs need a position to remain at their location\n\t\t// when scrolling to stay in view (requirement for position: sticky)\n\t\tif (!options.wrapTabs && isTabSticky && options.pinnedTabSizing !== 'normal') {\n\t\t\tlet stickyTabWidth = 0;\n\t\t\tswitch (options.pinnedTabSizing) {\n\t\t\t\tcase 'compact':\n\t\t\t\t\tstickyTabWidth = MultiEditorTabsControl.TAB_WIDTH.compact;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'shrink':\n\t\t\t\t\tstickyTabWidth = MultiEditorTabsControl.TAB_WIDTH.shrink;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ttabContainer.style.left = `${tabIndex * stickyTabWidth}px`;\n\t\t} else {\n\t\t\ttabContainer.style.left = 'auto';\n\t\t}\n\n\t\t// Borders / outline\n\t\tthis.redrawTabBorders(tabIndex, tabContainer);\n\n\t\t// Selection / active / dirty state\n\t\tthis.redrawTabSelectedActiveAndDirty(this.groupsView.activeGroup === this.groupView, editor, tabContainer, tabActionBar);\n\t}\n\n\tprivate redrawTabLabel(editor: EditorInput, tabIndex: number, tabContainer: HTMLElement, tabLabelWidget: IResourceLabel, tabLabel: IEditorInputLabel): void {\n\t\tconst options = this.groupsView.partOptions;\n\n\t\t// Unless tabs are sticky compact, show the full label and description\n\t\t// Sticky compact tabs will only show an icon if icons are enabled\n\t\t// or their first character of the name otherwise\n\t\tlet name: string | undefined;\n\t\tlet forceLabel = false;\n\t\tlet fileDecorationBadges = Boolean(options.decorations?.badges);\n\t\tconst fileDecorationColors = Boolean(options.decorations?.colors);\n\t\tlet description: string;\n\t\tif (options.pinnedTabSizing === 'compact' && this.tabsModel.isSticky(tabIndex)) {\n\t\t\tconst isShowingIcons = options.showIcons && options.hasIcons;\n\t\t\tname = isShowingIcons ? '' : tabLabel.name?.charAt(0).toUpperCase();\n\t\t\tdescription = '';\n\t\t\tforceLabel = true;\n\t\t\tfileDecorationBadges = false; // not enough space when sticky tabs are compact\n\t\t} else {\n\t\t\tname = tabLabel.name;\n\t\t\tdescription = tabLabel.description || '';\n\t\t}\n\n\t\tif (tabLabel.ariaLabel) {\n\t\t\ttabContainer.setAttribute('aria-label', tabLabel.ariaLabel);\n\t\t\t// Set aria-description to empty string so that screen readers would not read the title as well\n\t\t\t// More details https://github.com/microsoft/vscode/issues/95378\n\t\t\ttabContainer.setAttribute('aria-description', '');\n\t\t}\n\n\t\t// Label\n\t\ttabLabelWidget.setResource(\n\t\t\t{ name, description, resource: EditorResourceAccessor.getOriginalUri(editor, { supportSideBySide: SideBySideEditor.BOTH }) },\n\t\t\t{\n\t\t\t\ttitle: this.getHoverTitle(editor),\n\t\t\t\textraClasses: coalesce(['tab-label', fileDecorationBadges ? 'tab-label-has-badge' : undefined].concat(editor.getLabelExtraClasses())),\n\t\t\t\titalic: !this.tabsModel.isPinned(editor),\n\t\t\t\tforceLabel,\n\t\t\t\tfileDecorations: {\n\t\t\t\t\tcolors: fileDecorationColors,\n\t\t\t\t\tbadges: fileDecorationBadges\n\t\t\t\t},\n\t\t\t\ticon: editor.getIcon(),\n\t\t\t\thideIcon: options.showIcons === false,\n\t\t\t}\n\t\t);\n\n\t\t// Tests helper\n\t\tconst resource = EditorResourceAccessor.getOriginalUri(editor, { supportSideBySide: SideBySideEditor.PRIMARY });\n\t\tif (resource) {\n\t\t\ttabContainer.setAttribute('data-resource-name', basenameOrAuthority(resource));\n\t\t} else {\n\t\t\ttabContainer.removeAttribute('data-resource-name');\n\t\t}\n\t}\n\n\tprivate redrawTabSelectedActiveAndDirty(isGroupActive: boolean, editor: EditorInput, tabContainer: HTMLElement, tabActionBar: ActionBar): void {\n\t\tconst isTabActive = this.tabsModel.isActive(editor);\n\t\tconst hasModifiedBorderTop = this.doRedrawTabDirty(isGroupActive, isTabActive, editor, tabContainer);\n\n\t\tthis.doRedrawTabActive(isGroupActive, !hasModifiedBorderTop, editor, tabContainer, tabActionBar);\n\t}\n\n\tprivate doRedrawTabActive(isGroupActive: boolean, allowBorderTop: boolean, editor: EditorInput, tabContainer: HTMLElement, tabActionBar: ActionBar): void {\n\t\tconst isActive = this.tabsModel.isActive(editor);\n\t\tconst isSelected = this.tabsModel.isSelected(editor);\n\n\t\ttabContainer.classList.toggle('active', isActive);\n\t\ttabContainer.classList.toggle('selected', isSelected);\n\t\ttabContainer.setAttribute('aria-selected', isActive ? 'true' : 'false');\n\t\ttabContainer.tabIndex = isActive ? 0 : -1; // Only active tab can be focused into\n\t\ttabActionBar.setFocusable(isActive);\n\n\t\t// Set border BOTTOM if theme defined color\n\t\tif (isActive) {\n\t\t\tconst activeTabBorderColorBottom = this.getColor(isGroupActive ? TAB_ACTIVE_BORDER : TAB_UNFOCUSED_ACTIVE_BORDER);\n\t\t\ttabContainer.classList.toggle('tab-border-bottom', !!activeTabBorderColorBottom);\n\t\t\ttabContainer.style.setProperty('--tab-border-bottom-color', activeTabBorderColorBottom ?? '');\n\t\t}\n\n\t\t// Set border TOP if theme defined color\n\t\tlet tabBorderColorTop: string | null = null;\n\t\tif (allowBorderTop) {\n\t\t\tif (isActive) {\n\t\t\t\ttabBorderColorTop = this.getColor(isGroupActive ? TAB_ACTIVE_BORDER_TOP : TAB_UNFOCUSED_ACTIVE_BORDER_TOP);\n\t\t\t}\n\n\t\t\tif (tabBorderColorTop === null && isSelected) {\n\t\t\t\ttabBorderColorTop = this.getColor(TAB_SELECTED_BORDER_TOP);\n\t\t\t}\n\t\t}\n\n\t\ttabContainer.classList.toggle('tab-border-top', !!tabBorderColorTop);\n\t\ttabContainer.style.setProperty('--tab-border-top-color', tabBorderColorTop ?? '');\n\t}\n\n\tprivate doRedrawTabDirty(isGroupActive: boolean, isTabActive: boolean, editor: EditorInput, tabContainer: HTMLElement): boolean {\n\t\tlet hasModifiedBorderColor = false;\n\n\t\t// Tab: dirty (unless saving)\n\t\tif (editor.isDirty() && !editor.isSaving()) {\n\t\t\ttabContainer.classList.add('dirty');\n\n\t\t\t// Highlight modified tabs with a border if configured\n\t\t\tif (this.groupsView.partOptions.highlightModifiedTabs) {\n\t\t\t\tlet modifiedBorderColor: string | null;\n\t\t\t\tif (isGroupActive && isTabActive) {\n\t\t\t\t\tmodifiedBorderColor = this.getColor(TAB_ACTIVE_MODIFIED_BORDER);\n\t\t\t\t} else if (isGroupActive && !isTabActive) {\n\t\t\t\t\tmodifiedBorderColor = this.getColor(TAB_INACTIVE_MODIFIED_BORDER);\n\t\t\t\t} else if (!isGroupActive && isTabActive) {\n\t\t\t\t\tmodifiedBorderColor = this.getColor(TAB_UNFOCUSED_ACTIVE_MODIFIED_BORDER);\n\t\t\t\t} else {\n\t\t\t\t\tmodifiedBorderColor = this.getColor(TAB_UNFOCUSED_INACTIVE_MODIFIED_BORDER);\n\t\t\t\t}\n\n\t\t\t\tif (modifiedBorderColor) {\n\t\t\t\t\thasModifiedBorderColor = true;\n\n\t\t\t\t\ttabContainer.classList.add('dirty-border-top');\n\t\t\t\t\ttabContainer.style.setProperty('--tab-dirty-border-top-color', modifiedBorderColor);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttabContainer.classList.remove('dirty-border-top');\n\t\t\t\ttabContainer.style.removeProperty('--tab-dirty-border-top-color');\n\t\t\t}\n\t\t}\n\n\t\t// Tab: not dirty\n\t\telse {\n\t\t\ttabContainer.classList.remove('dirty', 'dirty-border-top');\n\t\t\ttabContainer.style.removeProperty('--tab-dirty-border-top-color');\n\t\t}\n\n\t\treturn hasModifiedBorderColor;\n\t}\n\n\tprivate redrawTabBorders(tabIndex: number, tabContainer: HTMLElement): void {\n\t\tconst isTabSticky = this.tabsModel.isSticky(tabIndex);\n\t\tconst isTabLastSticky = isTabSticky && this.tabsModel.stickyCount === tabIndex + 1;\n\t\tconst showLastStickyTabBorderColor = this.tabsModel.stickyCount !== this.tabsModel.count;\n\n\t\t// Borders / Outline\n\t\tconst borderRightColor = ((isTabLastSticky && showLastStickyTabBorderColor ? this.getColor(TAB_LAST_PINNED_BORDER) : undefined) || this.getColor(TAB_BORDER) || this.getColor(contrastBorder));\n\t\ttabContainer.style.borderRight = borderRightColor ? `1px solid ${borderRightColor}` : '';\n\t\ttabContainer.style.outlineColor = this.getColor(activeContrastBorder) || '';\n\t}\n\n\tprotected override prepareEditorActions(editorActions: IToolbarActions): IToolbarActions {\n\t\tconst isGroupActive = this.groupsView.activeGroup === this.groupView;\n\n\t\t// Active: allow all actions\n\t\tif (isGroupActive) {\n\t\t\treturn editorActions;\n\t\t}\n\n\t\t// Inactive: only show \"Unlock\" and secondary actions\n\t\telse {\n\t\t\treturn {\n\t\t\t\tprimary: this.groupsView.partOptions.alwaysShowEditorActions ? editorActions.primary : editorActions.primary.filter(action => action.id === UNLOCK_GROUP_COMMAND_ID),\n\t\t\t\tsecondary: editorActions.secondary\n\t\t\t};\n\t\t}\n\t}\n\n\tgetHeight(): number {\n\n\t\t// Return quickly if our used dimensions are known\n\t\tif (this.dimensions.used) {\n\t\t\treturn this.dimensions.used.height;\n\t\t}\n\n\t\t// Otherwise compute via browser APIs\n\t\telse {\n\t\t\treturn this.computeHeight();\n\t\t}\n\t}\n\n\tprivate computeHeight(): number {\n\t\tlet height: number;\n\n\t\tif (!this.visible) {\n\t\t\theight = 0;\n\t\t} else if (this.groupsView.partOptions.wrapTabs && this.tabsAndActionsContainer?.classList.contains('wrapping')) {\n\t\t\t// Wrap: we need to ask `offsetHeight` to get\n\t\t\t// the real height of the title area with wrapping.\n\t\t\theight = this.tabsAndActionsContainer.offsetHeight;\n\t\t} else {\n\t\t\theight = this.tabHeight;\n\t\t}\n\n\t\treturn height;\n\t}\n\n\tlayout(dimensions: IEditorTitleControlDimensions, options?: IMultiEditorTabsControlLayoutOptions): Dimension {\n\n\t\t// Remember dimensions that we get\n\t\tObject.assign(this.dimensions, dimensions);\n\n\t\tif (this.visible) {\n\t\t\tif (!this.layoutScheduler.value) {\n\n\t\t\t\t// The layout of tabs can be an expensive operation because we access DOM properties\n\t\t\t\t// that can result in the browser doing a full page layout to validate them. To buffer\n\t\t\t\t// this a little bit we try at least to schedule this work on the next animation frame\n\t\t\t\t// when we have restored or when idle otherwise.\n\n\t\t\t\tconst disposable = scheduleAtNextAnimationFrame(getWindow(this.parent), () => {\n\t\t\t\t\tthis.doLayout(this.dimensions, this.layoutScheduler.value?.options /* ensure to pick up latest options */);\n\n\t\t\t\t\tthis.layoutScheduler.clear();\n\t\t\t\t});\n\t\t\t\tthis.layoutScheduler.value = { options, dispose: () => disposable.dispose() };\n\t\t\t}\n\n\t\t\t// Make sure to keep options updated\n\t\t\tif (options?.forceRevealActiveTab) {\n\t\t\t\tthis.layoutScheduler.value.options = {\n\t\t\t\t\t...this.layoutScheduler.value.options,\n\t\t\t\t\tforceRevealActiveTab: true\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// First time layout: compute the dimensions and store it\n\t\tif (!this.dimensions.used) {\n\t\t\tthis.dimensions.used = new Dimension(dimensions.container.width, this.computeHeight());\n\t\t}\n\n\t\treturn this.dimensions.used;\n\t}\n\n\tprivate doLayout(dimensions: IEditorTitleControlDimensions, options?: IMultiEditorTabsControlLayoutOptions): void {\n\n\t\t// Layout tabs\n\t\tif (dimensions.container !== Dimension.None && dimensions.available !== Dimension.None) {\n\t\t\tthis.doLayoutTabs(dimensions, options);\n\t\t}\n\n\t\t// Remember the dimensions used in the control so that we can\n\t\t// return it fast from the `layout` call without having to\n\t\t// compute it over and over again\n\t\tconst oldDimension = this.dimensions.used;\n\t\tconst newDimension = this.dimensions.used = new Dimension(dimensions.container.width, this.computeHeight());\n\n\t\t// In case the height of the title control changed from before\n\t\t// (currently only possible if wrapping changed on/off), we need\n\t\t// to signal this to the outside via a `relayout` call so that\n\t\t// e.g. the editor control can be adjusted accordingly.\n\t\tif (oldDimension && oldDimension.height !== newDimension.height) {\n\t\t\tthis.groupView.relayout();\n\t\t}\n\t}\n\n\tprivate doLayoutTabs(dimensions: IEditorTitleControlDimensions, options?: IMultiEditorTabsControlLayoutOptions): void {\n\n\t\t// Always first layout tabs with wrapping support even if wrapping\n\t\t// is disabled. The result indicates if tabs wrap and if not, we\n\t\t// need to proceed with the layout without wrapping because even\n\t\t// if wrapping is enabled in settings, there are cases where\n\t\t// wrapping is disabled (e.g. due to space constraints)\n\t\tconst tabsWrapMultiLine = this.doLayoutTabsWrapping(dimensions);\n\t\tif (!tabsWrapMultiLine) {\n\t\t\tthis.doLayoutTabsNonWrapping(options);\n\t\t}\n\t}\n\n\tprivate doLayoutTabsWrapping(dimensions: IEditorTitleControlDimensions): boolean {\n\t\tconst [tabsAndActionsContainer, tabsContainer, editorToolbarContainer, tabsScrollbar] = assertAllDefined(this.tabsAndActionsContainer, this.tabsContainer, this.editorActionsToolbarContainer, this.tabsScrollbar);\n\n\t\t// Handle wrapping tabs according to setting:\n\t\t// - enabled: only add class if tabs wrap and don't exceed available dimensions\n\t\t// - disabled: remove class and margin-right variable\n\n\t\tconst didTabsWrapMultiLine = tabsAndActionsContainer.classList.contains('wrapping');\n\t\tlet tabsWrapMultiLine = didTabsWrapMultiLine;\n\n\t\tfunction updateTabsWrapping(enabled: boolean): void {\n\t\t\ttabsWrapMultiLine = enabled;\n\n\t\t\t// Toggle the `wrapped` class to enable wrapping\n\t\t\ttabsAndActionsContainer.classList.toggle('wrapping', tabsWrapMultiLine);\n\n\t\t\t// Update `last-tab-margin-right` CSS variable to account for the absolute\n\t\t\t// positioned editor actions container when tabs wrap. The margin needs to\n\t\t\t// be the width of the editor actions container to avoid screen cheese.\n\t\t\ttabsContainer.style.setProperty('--last-tab-margin-right', tabsWrapMultiLine ? `${editorToolbarContainer.offsetWidth}px` : '0');\n\n\t\t\t// Remove old css classes that are not needed anymore\n\t\t\tfor (const tab of tabsContainer.children) {\n\t\t\t\ttab.classList.remove('last-in-row');\n\t\t\t}\n\t\t}\n\n\t\t// Setting enabled: selectively enable wrapping if possible\n\t\tif (this.groupsView.partOptions.wrapTabs) {\n\t\t\tconst visibleTabsWidth = tabsContainer.offsetWidth;\n\t\t\tconst allTabsWidth = tabsContainer.scrollWidth;\n\t\t\tconst lastTabFitsWrapped = () => {\n\t\t\t\tconst lastTab = this.getLastTab();\n\t\t\t\tif (!lastTab) {\n\t\t\t\t\treturn true; // no tab always fits\n\t\t\t\t}\n\n\t\t\t\tconst lastTabOverlapWithToolbarWidth = lastTab.offsetWidth + editorToolbarContainer.offsetWidth - dimensions.available.width;\n\t\t\t\tif (lastTabOverlapWithToolbarWidth > 1) {\n\t\t\t\t\t// Allow for slight rounding errors related to zooming here\n\t\t\t\t\t// https://github.com/microsoft/vscode/issues/116385\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t};\n\n\t\t\t// If tabs wrap or should start to wrap (when width exceeds visible width)\n\t\t\t// we must trigger `updateWrapping` to set the `last-tab-margin-right`\n\t\t\t// accordingly based on the number of actions. The margin is important to\n\t\t\t// properly position the last tab apart from the actions\n\t\t\t//\n\t\t\t// We already check here if the last tab would fit when wrapped given the\n\t\t\t// editor toolbar will also show right next to it. This ensures we are not\n\t\t\t// enabling wrapping only to disable it again in the code below (this fixes\n\t\t\t// flickering issue https://github.com/microsoft/vscode/issues/115050)\n\t\t\tif (tabsWrapMultiLine || (allTabsWidth > visibleTabsWidth && lastTabFitsWrapped())) {\n\t\t\t\tupdateTabsWrapping(true);\n\t\t\t}\n\n\t\t\t// Tabs wrap multiline: remove wrapping under certain size constraint conditions\n\t\t\tif (tabsWrapMultiLine) {\n\t\t\t\tif (\n\t\t\t\t\t(tabsContainer.offsetHeight > dimensions.available.height) ||\t\t\t\t\t\t\t// if height exceeds available height\n\t\t\t\t\t(allTabsWidth === visibleTabsWidth && tabsContainer.offsetHeight === this.tabHeight) ||\t// if wrapping is not needed anymore\n\t\t\t\t\t(!lastTabFitsWrapped())\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// if last tab does not fit anymore\n\t\t\t\t) {\n\t\t\t\t\tupdateTabsWrapping(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Setting disabled: remove CSS traces only if tabs did wrap\n\t\telse if (didTabsWrapMultiLine) {\n\t\t\tupdateTabsWrapping(false);\n\t\t}\n\n\t\t// If we transitioned from non-wrapping to wrapping, we need\n\t\t// to update the scrollbar to have an equal `width` and\n\t\t// `scrollWidth`. Otherwise a scrollbar would appear which is\n\t\t// never desired when wrapping.\n\t\tif (tabsWrapMultiLine && !didTabsWrapMultiLine) {\n\t\t\tconst visibleTabsWidth = tabsContainer.offsetWidth;\n\t\t\ttabsScrollbar.setScrollDimensions({\n\t\t\t\twidth: visibleTabsWidth,\n\t\t\t\tscrollWidth: visibleTabsWidth\n\t\t\t});\n\t\t}\n\n\t\t// Update the `last-in-row` class on tabs when wrapping\n\t\t// is enabled (it doesn't do any harm otherwise). This\n\t\t// class controls additional properties of tab when it is\n\t\t// the last tab in a row\n\t\tif (tabsWrapMultiLine) {\n\n\t\t\t// Using a map here to change classes after the for loop is\n\t\t\t// crucial for performance because changing the class on a\n\t\t\t// tab can result in layouts of the rendering engine.\n\t\t\tconst tabs = new Map<HTMLElement, boolean /* last in row */>();\n\n\t\t\tlet currentTabsPosY: number | undefined = undefined;\n\t\t\tlet lastTab: HTMLElement | undefined = undefined;\n\t\t\tfor (const child of tabsContainer.children) {\n\t\t\t\tconst tab = child as HTMLElement;\n\t\t\t\tconst tabPosY = tab.offsetTop;\n\n\t\t\t\t// Marks a new or the first row of tabs\n\t\t\t\tif (tabPosY !== currentTabsPosY) {\n\t\t\t\t\tcurrentTabsPosY = tabPosY;\n\t\t\t\t\tif (lastTab) {\n\t\t\t\t\t\ttabs.set(lastTab, true); // previous tab must be last in row then\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Always remember last tab and ensure the\n\t\t\t\t// last-in-row class is not present until\n\t\t\t\t// we know the tab is last\n\t\t\t\tlastTab = tab;\n\t\t\t\ttabs.set(tab, false);\n\t\t\t}\n\n\t\t\t// Last tab overally is always last-in-row\n\t\t\tif (lastTab) {\n\t\t\t\ttabs.set(lastTab, true);\n\t\t\t}\n\n\t\t\tfor (const [tab, lastInRow] of tabs) {\n\t\t\t\ttab.classList.toggle('last-in-row', lastInRow);\n\t\t\t}\n\t\t}\n\n\t\treturn tabsWrapMultiLine;\n\t}\n\n\tprivate doLayoutTabsNonWrapping(options?: IMultiEditorTabsControlLayoutOptions): void {\n\t\tconst [tabsContainer, tabsScrollbar] = assertAllDefined(this.tabsContainer, this.tabsScrollbar);\n\n\t\t//\n\t\t// Synopsis\n\t\t// - allTabsWidth:   \t\t\tsum of all tab widths\n\t\t// - stickyTabsWidth:\t\t\tsum of all sticky tab widths (unless `pinnedTabSizing: normal`)\n\t\t// - visibleContainerWidth: \tsize of tab container\n\t\t// - availableContainerWidth: \tsize of tab container minus size of sticky tabs\n\t\t//\n\t\t// [------------------------------ All tabs width ---------------------------------------]\n\t\t// [------------------- Visible container width -------------------]\n\t\t//                         [------ Available container width ------]\n\t\t// [ Sticky A ][ Sticky B ][ Tab C ][ Tab D ][ Tab E ][ Tab F ][ Tab G ][ Tab H ][ Tab I ]\n\t\t//                 Active Tab Width [-------]\n\t\t// [------- Active Tab Pos X -------]\n\t\t// [-- Sticky Tabs Width --]\n\t\t//\n\n\t\tconst visibleTabsWidth = tabsContainer.offsetWidth;\n\t\tconst allTabsWidth = tabsContainer.scrollWidth;\n\n\t\t// Compute width of sticky tabs depending on pinned tab sizing\n\t\t// - compact: sticky-tabs * TAB_SIZES.compact\n\t\t// -  shrink: sticky-tabs * TAB_SIZES.shrink\n\t\t// -  normal: 0 (sticky tabs inherit look and feel from non-sticky tabs)\n\t\tlet stickyTabsWidth = 0;\n\t\tif (this.tabsModel.stickyCount > 0) {\n\t\t\tlet stickyTabWidth = 0;\n\t\t\tswitch (this.groupsView.partOptions.pinnedTabSizing) {\n\t\t\t\tcase 'compact':\n\t\t\t\t\tstickyTabWidth = MultiEditorTabsControl.TAB_WIDTH.compact;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'shrink':\n\t\t\t\t\tstickyTabWidth = MultiEditorTabsControl.TAB_WIDTH.shrink;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tstickyTabsWidth = this.tabsModel.stickyCount * stickyTabWidth;\n\t\t}\n\n\t\tconst activeTabAndIndex = this.tabsModel.activeEditor ? this.getTabAndIndex(this.tabsModel.activeEditor) : undefined;\n\t\tconst [activeTab, activeTabIndex] = activeTabAndIndex ?? [undefined, undefined];\n\n\t\t// Figure out if active tab is positioned static which has an\n\t\t// impact on whether to reveal the tab or not later\n\t\tlet activeTabPositionStatic = this.groupsView.partOptions.pinnedTabSizing !== 'normal' && typeof activeTabIndex === 'number' && this.tabsModel.isSticky(activeTabIndex);\n\n\t\t// Special case: we have sticky tabs but the available space for showing tabs\n\t\t// is little enough that we need to disable sticky tabs sticky positioning\n\t\t// so that tabs can be scrolled at naturally.\n\t\tlet availableTabsContainerWidth = visibleTabsWidth - stickyTabsWidth;\n\t\tif (this.tabsModel.stickyCount > 0 && availableTabsContainerWidth < MultiEditorTabsControl.TAB_WIDTH.fit) {\n\t\t\ttabsContainer.classList.add('disable-sticky-tabs');\n\n\t\t\tavailableTabsContainerWidth = visibleTabsWidth;\n\t\t\tstickyTabsWidth = 0;\n\t\t\tactiveTabPositionStatic = false;\n\t\t} else {\n\t\t\ttabsContainer.classList.remove('disable-sticky-tabs');\n\t\t}\n\n\t\tlet activeTabPosX: number | undefined;\n\t\tlet activeTabWidth: number | undefined;\n\n\t\tif (!this.blockRevealActiveTab && activeTab) {\n\t\t\tactiveTabPosX = activeTab.offsetLeft;\n\t\t\tactiveTabWidth = activeTab.offsetWidth;\n\t\t}\n\n\t\t// Update scrollbar\n\t\tconst { width: oldVisibleTabsWidth, scrollWidth: oldAllTabsWidth } = tabsScrollbar.getScrollDimensions();\n\t\ttabsScrollbar.setScrollDimensions({\n\t\t\twidth: visibleTabsWidth,\n\t\t\tscrollWidth: allTabsWidth\n\t\t});\n\t\tconst dimensionsChanged = oldVisibleTabsWidth !== visibleTabsWidth || oldAllTabsWidth !== allTabsWidth;\n\n\t\t// Revealing the active tab is skipped under some conditions:\n\t\tif (\n\t\t\tthis.blockRevealActiveTab ||\t\t\t\t\t\t\t// explicitly disabled\n\t\t\ttypeof activeTabPosX !== 'number' ||\t\t\t\t\t// invalid dimension\n\t\t\ttypeof activeTabWidth !== 'number' ||\t\t\t\t\t// invalid dimension\n\t\t\tactiveTabPositionStatic ||\t\t\t\t\t\t\t\t// static tab (sticky)\n\t\t\t(!dimensionsChanged && !options?.forceRevealActiveTab) \t// dimensions did not change and we have low layout priority (https://github.com/microsoft/vscode/issues/133631)\n\t\t) {\n\t\t\tthis.blockRevealActiveTab = false;\n\t\t\treturn;\n\t\t}\n\n\t\t// Reveal the active one\n\t\tconst tabsContainerScrollPosX = tabsScrollbar.getScrollPosition().scrollLeft;\n\t\tconst activeTabFits = activeTabWidth <= availableTabsContainerWidth;\n\t\tconst adjustedActiveTabPosX = activeTabPosX - stickyTabsWidth;\n\n\t\t//\n\t\t// Synopsis\n\t\t// - adjustedActiveTabPosX: the adjusted tabPosX takes the width of sticky tabs into account\n\t\t//   conceptually the scrolling only begins after sticky tabs so in order to reveal a tab fully\n\t\t//   the actual position needs to be adjusted for sticky tabs.\n\t\t//\n\t\t// Tab is overflowing to the right: Scroll minimally until the element is fully visible to the right\n\t\t// Note: only try to do this if we actually have enough width to give to show the tab fully!\n\t\t//\n\t\t// Example: Tab G should be made active and needs to be fully revealed as such.\n\t\t//\n\t\t// [-------------------------------- All tabs width -----------------------------------------]\n\t\t// [-------------------- Visible container width --------------------]\n\t\t//                           [----- Available container width -------]\n\t\t//     [ Sticky A ][ Sticky B ][ Tab C ][ Tab D ][ Tab E ][ Tab F ][ Tab G ][ Tab H ][ Tab I ]\n\t\t//                     Active Tab Width [-------]\n\t\t//     [------- Active Tab Pos X -------]\n\t\t//                             [-------- Adjusted Tab Pos X -------]\n\t\t//     [-- Sticky Tabs Width --]\n\t\t//\n\t\t//\n\t\tif (activeTabFits && tabsContainerScrollPosX + availableTabsContainerWidth < adjustedActiveTabPosX + activeTabWidth) {\n\t\t\ttabsScrollbar.setScrollPosition({\n\t\t\t\tscrollLeft: tabsContainerScrollPosX + ((adjustedActiveTabPosX + activeTabWidth) /* right corner of tab */ - (tabsContainerScrollPosX + availableTabsContainerWidth) /* right corner of view port */)\n\t\t\t});\n\t\t}\n\n\t\t//\n\t\t// Tab is overlflowing to the left or does not fit: Scroll it into view to the left\n\t\t//\n\t\t// Example: Tab C should be made active and needs to be fully revealed as such.\n\t\t//\n\t\t// [----------------------------- All tabs width ----------------------------------------]\n\t\t//     [------------------ Visible container width ------------------]\n\t\t//                           [----- Available container width -------]\n\t\t// [ Sticky A ][ Sticky B ][ Tab C ][ Tab D ][ Tab E ][ Tab F ][ Tab G ][ Tab H ][ Tab I ]\n\t\t//                 Active Tab Width [-------]\n\t\t// [------- Active Tab Pos X -------]\n\t\t//      Adjusted Tab Pos X []\n\t\t// [-- Sticky Tabs Width --]\n\t\t//\n\t\t//\n\t\telse if (tabsContainerScrollPosX > adjustedActiveTabPosX || !activeTabFits) {\n\t\t\ttabsScrollbar.setScrollPosition({\n\t\t\t\tscrollLeft: adjustedActiveTabPosX\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate updateTabsControlVisibility(): void {\n\t\tconst tabsAndActionsContainer = assertIsDefined(this.tabsAndActionsContainer);\n\t\ttabsAndActionsContainer.classList.toggle('empty', !this.visible);\n\n\t\t// Reset dimensions if hidden\n\t\tif (!this.visible && this.dimensions) {\n\t\t\tthis.dimensions.used = undefined;\n\t\t}\n\t}\n\n\tprivate get visible(): boolean {\n\t\treturn this.tabsModel.count > 0;\n\t}\n\n\tprivate getTabAndIndex(editor: EditorInput): [HTMLElement, number /* index */] | undefined {\n\t\tconst tabIndex = this.tabsModel.indexOf(editor);\n\t\tconst tab = this.getTabAtIndex(tabIndex);\n\t\tif (tab) {\n\t\t\treturn [tab, tabIndex];\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate getTabAtIndex(tabIndex: number): HTMLElement | undefined {\n\t\tif (tabIndex >= 0) {\n\t\t\tconst tabsContainer = assertIsDefined(this.tabsContainer);\n\n\t\t\treturn tabsContainer.children[tabIndex] as HTMLElement | undefined;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate getLastTab(): HTMLElement | undefined {\n\t\treturn this.getTabAtIndex(this.tabsModel.count - 1);\n\t}\n\n\tprivate blockRevealActiveTabOnce(): void {\n\n\t\t// When closing tabs through the tab close button or gesture, the user\n\t\t// might want to rapidly close tabs in sequence and as such revealing\n\t\t// the active tab after each close would be annoying. As such we block\n\t\t// the automated revealing of the active tab once after the close is\n\t\t// triggered.\n\t\tthis.blockRevealActiveTab = true;\n\t}\n\n\tprivate originatesFromTabActionBar(e: MouseEvent | GestureEvent): boolean {\n\t\tlet element: HTMLElement;\n\t\tif (isMouseEvent(e)) {\n\t\t\telement = (e.target || e.srcElement) as HTMLElement;\n\t\t} else {\n\t\t\telement = (e as GestureEvent).initialTarget as HTMLElement;\n\t\t}\n\n\t\treturn !!findParentWithClass(element, 'action-item', 'tab');\n\t}\n\n\tprivate async onDrop(e: DragEvent, targetTabIndex: number, tabsContainer: HTMLElement): Promise<void> {\n\t\tEventHelper.stop(e, true);\n\n\t\tthis.updateDropFeedback(tabsContainer, false, e, targetTabIndex);\n\t\ttabsContainer.classList.remove('scroll');\n\n\t\tlet targetEditorIndex = this.tabsModel instanceof UnstickyEditorGroupModel ? targetTabIndex + this.groupView.stickyCount : targetTabIndex;\n\t\tconst options: IEditorOptions = {\n\t\t\tsticky: this.tabsModel instanceof StickyEditorGroupModel && this.tabsModel.stickyCount === targetEditorIndex,\n\t\t\tindex: targetEditorIndex\n\t\t};\n\n\t\t// Check for group transfer\n\t\tif (this.groupTransfer.hasData(DraggedEditorGroupIdentifier.prototype)) {\n\t\t\tconst data = this.groupTransfer.getData(DraggedEditorGroupIdentifier.prototype);\n\t\t\tif (Array.isArray(data) && data.length > 0) {\n\t\t\t\tconst sourceGroup = this.editorPartsView.getGroup(data[0].identifier);\n\t\t\t\tif (sourceGroup) {\n\t\t\t\t\tconst mergeGroupOptions: IMergeGroupOptions = { index: targetEditorIndex };\n\t\t\t\t\tif (!this.isMoveOperation(e, sourceGroup.id)) {\n\t\t\t\t\t\tmergeGroupOptions.mode = MergeGroupMode.COPY_EDITORS;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.groupsView.mergeGroup(sourceGroup, this.groupView, mergeGroupOptions);\n\t\t\t\t}\n\n\t\t\t\tthis.groupView.focus();\n\t\t\t\tthis.groupTransfer.clearData(DraggedEditorGroupIdentifier.prototype);\n\t\t\t}\n\t\t}\n\n\t\t// Check for editor transfer\n\t\telse if (this.editorTransfer.hasData(DraggedEditorIdentifier.prototype)) {\n\t\t\tconst data = this.editorTransfer.getData(DraggedEditorIdentifier.prototype);\n\t\t\tif (Array.isArray(data) && data.length > 0) {\n\t\t\t\tconst sourceGroup = this.editorPartsView.getGroup(data[0].identifier.groupId);\n\t\t\t\tif (sourceGroup) {\n\t\t\t\t\tfor (const de of data) {\n\t\t\t\t\t\tconst editor = de.identifier.editor;\n\n\t\t\t\t\t\t// Only allow moving/copying from a single group source\n\t\t\t\t\t\tif (sourceGroup.id !== de.identifier.groupId) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Keep the same order when moving / copying editors within the same group\n\t\t\t\t\t\tconst sourceEditorIndex = sourceGroup.getIndexOfEditor(editor);\n\t\t\t\t\t\tif (sourceGroup === this.groupView && sourceEditorIndex < targetEditorIndex) {\n\t\t\t\t\t\t\ttargetEditorIndex--;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.isMoveOperation(e, de.identifier.groupId, editor)) {\n\t\t\t\t\t\t\tsourceGroup.moveEditor(editor, this.groupView, { ...options, index: targetEditorIndex });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsourceGroup.copyEditor(editor, this.groupView, { ...options, index: targetEditorIndex });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetEditorIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.groupView.focus();\n\t\t\tthis.editorTransfer.clearData(DraggedEditorIdentifier.prototype);\n\t\t}\n\n\t\t// Check for tree items\n\t\telse if (this.treeItemsTransfer.hasData(DraggedTreeItemsIdentifier.prototype)) {\n\t\t\tconst data = this.treeItemsTransfer.getData(DraggedTreeItemsIdentifier.prototype);\n\t\t\tif (Array.isArray(data) && data.length > 0) {\n\t\t\t\tconst editors: IUntypedEditorInput[] = [];\n\t\t\t\tfor (const id of data) {\n\t\t\t\t\tconst dataTransferItem = await this.treeViewsDragAndDropService.removeDragOperationTransfer(id.identifier);\n\t\t\t\t\tif (dataTransferItem) {\n\t\t\t\t\t\tconst treeDropData = await extractTreeDropData(dataTransferItem);\n\t\t\t\t\t\teditors.push(...treeDropData.map(editor => ({ ...editor, options: { ...editor.options, pinned: true, index: targetEditorIndex } })));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.editorService.openEditors(editors, this.groupView, { validateTrust: true });\n\t\t\t}\n\n\t\t\tthis.treeItemsTransfer.clearData(DraggedTreeItemsIdentifier.prototype);\n\t\t}\n\n\t\t// Check for URI transfer\n\t\telse {\n\t\t\tconst dropHandler = this.instantiationService.createInstance(ResourcesDropHandler, { allowWorkspaceOpen: false });\n\t\t\tdropHandler.handleDrop(e, getWindow(this.parent), () => this.groupView, () => this.groupView.focus(), options);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.tabDisposables = dispose(this.tabDisposables);\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\n\t// Add bottom border to tabs when wrapping\n\tconst borderColor = theme.getColor(TAB_BORDER);\n\tif (borderColor) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container > .title > .tabs-and-actions-container.wrapping .tabs-container > .tab {\n\t\t\t\tborder-bottom: 1px solid ${borderColor};\n\t\t\t}\n\t\t`);\n\t}\n\n\t// Styling with Outline color (e.g. high contrast theme)\n\tconst activeContrastBorderColor = theme.getColor(activeContrastBorder);\n\tif (activeContrastBorderColor) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container.active > .title .tabs-container > .tab.active,\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container.active > .title .tabs-container > .tab.active:hover  {\n\t\t\t\toutline: 1px solid;\n\t\t\t\toutline-offset: -5px;\n\t\t\t}\n\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container > .title .tabs-container > .tab.selected:not(.active):not(:hover)  {\n\t\t\t\toutline: 1px dotted;\n\t\t\t\toutline-offset: -5px;\n\t\t\t}\n\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container.active > .title .tabs-container > .tab.active:focus {\n\t\t\t\toutline-style: dashed;\n\t\t\t}\n\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container > .title .tabs-container > .tab.active {\n\t\t\t\toutline: 1px dotted;\n\t\t\t\toutline-offset: -5px;\n\t\t\t}\n\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container > .title .tabs-container > .tab:hover  {\n\t\t\t\toutline: 1px dashed;\n\t\t\t\toutline-offset: -5px;\n\t\t\t}\n\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container > .title .tabs-container > .tab.active > .tab-actions .action-label,\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container > .title .tabs-container > .tab.active:hover > .tab-actions .action-label,\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container > .title .tabs-container > .tab.dirty > .tab-actions .action-label,\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container > .title .tabs-container > .tab.sticky > .tab-actions .action-label,\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container > .title .tabs-container > .tab:hover > .tab-actions .action-label {\n\t\t\t\topacity: 1 !important;\n\t\t\t}\n\t\t`);\n\t}\n\n\t// High Contrast Border Color for Editor Actions\n\tconst contrastBorderColor = theme.getColor(contrastBorder);\n\tif (contrastBorderColor) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container > .title .editor-actions {\n\t\t\t\toutline: 1px solid ${contrastBorderColor}\n\t\t\t}\n\t\t`);\n\t}\n\n\t// Hover Background\n\tconst tabHoverBackground = theme.getColor(TAB_HOVER_BACKGROUND);\n\tif (tabHoverBackground) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container.active > .title .tabs-container > .tab:not(.selected):hover {\n\t\t\t\tbackground-color: ${tabHoverBackground} !important;\n\t\t\t}\n\t\t`);\n\t}\n\n\tconst tabUnfocusedHoverBackground = theme.getColor(TAB_UNFOCUSED_HOVER_BACKGROUND);\n\tif (tabUnfocusedHoverBackground) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container > .title .tabs-container > .tab:not(.selected):hover  {\n\t\t\t\tbackground-color: ${tabUnfocusedHoverBackground} !important;\n\t\t\t}\n\t\t`);\n\t}\n\n\t// Hover Foreground\n\tconst tabHoverForeground = theme.getColor(TAB_HOVER_FOREGROUND);\n\tif (tabHoverForeground) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container.active > .title .tabs-container > .tab:not(.selected):hover  {\n\t\t\t\tcolor: ${tabHoverForeground} !important;\n\t\t\t}\n\t\t`);\n\t}\n\n\tconst tabUnfocusedHoverForeground = theme.getColor(TAB_UNFOCUSED_HOVER_FOREGROUND);\n\tif (tabUnfocusedHoverForeground) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container > .title .tabs-container > .tab:not(.selected):hover  {\n\t\t\t\tcolor: ${tabUnfocusedHoverForeground} !important;\n\t\t\t}\n\t\t`);\n\t}\n\n\t// Hover Border\n\t//\n\t// Unfortunately we need to copy a lot of CSS over from the\n\t// multiEditorTabsControl.css because we want to reuse the same\n\t// styles we already have for the normal bottom-border.\n\tconst tabHoverBorder = theme.getColor(TAB_HOVER_BORDER);\n\tif (tabHoverBorder) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container.active > .title .tabs-container > .tab:hover > .tab-border-bottom-container {\n\t\t\t\tdisplay: block;\n\t\t\t\tposition: absolute;\n\t\t\t\tleft: 0;\n\t\t\t\tpointer-events: none;\n\t\t\t\twidth: 100%;\n\t\t\t\tz-index: 10;\n\t\t\t\tbottom: 0;\n\t\t\t\theight: 1px;\n\t\t\t\tbackground-color: ${tabHoverBorder};\n\t\t\t}\n\t\t`);\n\t}\n\n\tconst tabUnfocusedHoverBorder = theme.getColor(TAB_UNFOCUSED_HOVER_BORDER);\n\tif (tabUnfocusedHoverBorder) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container > .title .tabs-container > .tab:hover > .tab-border-bottom-container  {\n\t\t\t\tdisplay: block;\n\t\t\t\tposition: absolute;\n\t\t\t\tleft: 0;\n\t\t\t\tpointer-events: none;\n\t\t\t\twidth: 100%;\n\t\t\t\tz-index: 10;\n\t\t\t\tbottom: 0;\n\t\t\t\theight: 1px;\n\t\t\t\tbackground-color: ${tabUnfocusedHoverBorder};\n\t\t\t}\n\t\t`);\n\t}\n\n\t// Fade out styles via linear gradient (when tabs are set to shrink or fixed)\n\t// But not when:\n\t// - in high contrast theme\n\t// - if we have a contrast border (which draws an outline - https://github.com/microsoft/vscode/issues/109117)\n\t// - on Safari (https://github.com/microsoft/vscode/issues/108996)\n\tif (!isHighContrast(theme.type) && !isSafari && !activeContrastBorderColor) {\n\t\tconst workbenchBackground = WORKBENCH_BACKGROUND(theme);\n\t\tconst editorBackgroundColor = theme.getColor(editorBackground);\n\t\tconst editorGroupHeaderTabsBackground = theme.getColor(EDITOR_GROUP_HEADER_TABS_BACKGROUND);\n\t\tconst editorDragAndDropBackground = theme.getColor(EDITOR_DRAG_AND_DROP_BACKGROUND);\n\n\t\tlet adjustedTabBackground: Color | undefined;\n\t\tif (editorGroupHeaderTabsBackground && editorBackgroundColor) {\n\t\t\tadjustedTabBackground = editorGroupHeaderTabsBackground.flatten(editorBackgroundColor, editorBackgroundColor, workbenchBackground);\n\t\t}\n\n\t\tlet adjustedTabDragBackground: Color | undefined;\n\t\tif (editorGroupHeaderTabsBackground && editorBackgroundColor && editorDragAndDropBackground && editorBackgroundColor) {\n\t\t\tadjustedTabDragBackground = editorGroupHeaderTabsBackground.flatten(editorBackgroundColor, editorDragAndDropBackground, editorBackgroundColor, workbenchBackground);\n\t\t}\n\n\t\t// Adjust gradient for focused and unfocused hover background\n\t\tconst makeTabHoverBackgroundRule = (color: Color, colorDrag: Color, hasFocus = false) => `\n\t\t\t.monaco-workbench .part.editor > .content:not(.dragged-over) .editor-group-container${hasFocus ? '.active' : ''} > .title .tabs-container > .tab.sizing-shrink:not(.dragged):not(.sticky-compact):hover > .tab-label > .monaco-icon-label-container::after,\n\t\t\t.monaco-workbench .part.editor > .content:not(.dragged-over) .editor-group-container${hasFocus ? '.active' : ''} > .title .tabs-container > .tab.sizing-fixed:not(.dragged):not(.sticky-compact):hover > .tab-label > .monaco-icon-label-container::after {\n\t\t\t\tbackground: linear-gradient(to left, ${color}, transparent) !important;\n\t\t\t}\n\n\t\t\t.monaco-workbench .part.editor > .content.dragged-over .editor-group-container${hasFocus ? '.active' : ''} > .title .tabs-container > .tab.sizing-shrink:not(.dragged):not(.sticky-compact):hover > .tab-label > .monaco-icon-label-container::after,\n\t\t\t.monaco-workbench .part.editor > .content.dragged-over .editor-group-container${hasFocus ? '.active' : ''} > .title .tabs-container > .tab.sizing-fixed:not(.dragged):not(.sticky-compact):hover > .tab-label > .monaco-icon-label-container::after {\n\t\t\t\tbackground: linear-gradient(to left, ${colorDrag}, transparent) !important;\n\t\t\t}\n\t\t`;\n\n\t\t// Adjust gradient for (focused) hover background\n\t\tif (tabHoverBackground && adjustedTabBackground && adjustedTabDragBackground) {\n\t\t\tconst adjustedColor = tabHoverBackground.flatten(adjustedTabBackground);\n\t\t\tconst adjustedColorDrag = tabHoverBackground.flatten(adjustedTabDragBackground);\n\t\t\tcollector.addRule(makeTabHoverBackgroundRule(adjustedColor, adjustedColorDrag, true));\n\t\t}\n\n\t\t// Adjust gradient for unfocused hover background\n\t\tif (tabUnfocusedHoverBackground && adjustedTabBackground && adjustedTabDragBackground) {\n\t\t\tconst adjustedColor = tabUnfocusedHoverBackground.flatten(adjustedTabBackground);\n\t\t\tconst adjustedColorDrag = tabUnfocusedHoverBackground.flatten(adjustedTabDragBackground);\n\t\t\tcollector.addRule(makeTabHoverBackgroundRule(adjustedColor, adjustedColorDrag));\n\t\t}\n\n\t\t// Adjust gradient for drag and drop background\n\t\tif (editorDragAndDropBackground && adjustedTabDragBackground) {\n\t\t\tconst adjustedColorDrag = editorDragAndDropBackground.flatten(adjustedTabDragBackground);\n\t\t\tcollector.addRule(`\n\t\t\t\t.monaco-workbench .part.editor > .content.dragged-over .editor-group-container.active > .title .tabs-container > .tab.sizing-shrink.dragged-over:not(.active):not(.dragged):not(.sticky-compact) > .tab-label > .monaco-icon-label-container::after,\n\t\t\t\t.monaco-workbench .part.editor > .content.dragged-over .editor-group-container:not(.active) > .title .tabs-container > .tab.sizing-shrink.dragged-over:not(.dragged):not(.sticky-compact) > .tab-label > .monaco-icon-label-container::after,\n\t\t\t\t.monaco-workbench .part.editor > .content.dragged-over .editor-group-container.active > .title .tabs-container > .tab.sizing-fixed.dragged-over:not(.active):not(.dragged):not(.sticky-compact) > .tab-label > .monaco-icon-label-container::after,\n\t\t\t\t.monaco-workbench .part.editor > .content.dragged-over .editor-group-container:not(.active) > .title .tabs-container > .tab.sizing-fixed.dragged-over:not(.dragged):not(.sticky-compact) > .tab-label > .monaco-icon-label-container::after {\n\t\t\t\t\tbackground: linear-gradient(to left, ${adjustedColorDrag}, transparent) !important;\n\t\t\t\t}\n\t\t`);\n\t\t}\n\n\t\tconst makeTabBackgroundRule = (color: Color, colorDrag: Color, focused: boolean, active: boolean) => `\n\t\t\t\t.monaco-workbench .part.editor > .content:not(.dragged-over) .editor-group-container${focused ? '.active' : ':not(.active)'} > .title .tabs-container > .tab.sizing-shrink${active ? '.active' : ''}:not(.dragged):not(.sticky-compact) > .tab-label > .monaco-icon-label-container::after,\n\t\t\t\t.monaco-workbench .part.editor > .content:not(.dragged-over) .editor-group-container${focused ? '.active' : ':not(.active)'} > .title .tabs-container > .tab.sizing-fixed${active ? '.active' : ''}:not(.dragged):not(.sticky-compact) > .tab-label > .monaco-icon-label-container::after {\n\t\t\t\t\tbackground: linear-gradient(to left, ${color}, transparent);\n\t\t\t\t}\n\n\t\t\t\t.monaco-workbench .part.editor > .content.dragged-over .editor-group-container${focused ? '.active' : ':not(.active)'} > .title .tabs-container > .tab.sizing-shrink${active ? '.active' : ''}:not(.dragged):not(.sticky-compact) > .tab-label > .monaco-icon-label-container::after,\n\t\t\t\t.monaco-workbench .part.editor > .content.dragged-over .editor-group-container${focused ? '.active' : ':not(.active)'} > .title .tabs-container > .tab.sizing-fixed${active ? '.active' : ''}:not(.dragged):not(.sticky-compact) > .tab-label > .monaco-icon-label-container::after {\n\t\t\t\t\tbackground: linear-gradient(to left, ${colorDrag}, transparent);\n\t\t\t\t}\n\t\t`;\n\n\t\t// Adjust gradient for focused active tab background\n\t\tconst tabActiveBackground = theme.getColor(TAB_ACTIVE_BACKGROUND);\n\t\tif (tabActiveBackground && adjustedTabBackground && adjustedTabDragBackground) {\n\t\t\tconst adjustedColor = tabActiveBackground.flatten(adjustedTabBackground);\n\t\t\tconst adjustedColorDrag = tabActiveBackground.flatten(adjustedTabDragBackground);\n\t\t\tcollector.addRule(makeTabBackgroundRule(adjustedColor, adjustedColorDrag, true, true));\n\t\t}\n\n\t\t// Adjust gradient for unfocused active tab background\n\t\tconst tabUnfocusedActiveBackground = theme.getColor(TAB_UNFOCUSED_ACTIVE_BACKGROUND);\n\t\tif (tabUnfocusedActiveBackground && adjustedTabBackground && adjustedTabDragBackground) {\n\t\t\tconst adjustedColor = tabUnfocusedActiveBackground.flatten(adjustedTabBackground);\n\t\t\tconst adjustedColorDrag = tabUnfocusedActiveBackground.flatten(adjustedTabDragBackground);\n\t\t\tcollector.addRule(makeTabBackgroundRule(adjustedColor, adjustedColorDrag, false, true));\n\t\t}\n\n\t\t// Adjust gradient for focused inactive tab background\n\t\tconst tabInactiveBackground = theme.getColor(TAB_INACTIVE_BACKGROUND);\n\t\tif (tabInactiveBackground && adjustedTabBackground && adjustedTabDragBackground) {\n\t\t\tconst adjustedColor = tabInactiveBackground.flatten(adjustedTabBackground);\n\t\t\tconst adjustedColorDrag = tabInactiveBackground.flatten(adjustedTabDragBackground);\n\t\t\tcollector.addRule(makeTabBackgroundRule(adjustedColor, adjustedColorDrag, true, false));\n\t\t}\n\n\t\t// Adjust gradient for unfocused inactive tab background\n\t\tconst tabUnfocusedInactiveBackground = theme.getColor(TAB_UNFOCUSED_INACTIVE_BACKGROUND);\n\t\tif (tabUnfocusedInactiveBackground && adjustedTabBackground && adjustedTabDragBackground) {\n\t\t\tconst adjustedColor = tabUnfocusedInactiveBackground.flatten(adjustedTabBackground);\n\t\t\tconst adjustedColorDrag = tabUnfocusedInactiveBackground.flatten(adjustedTabDragBackground);\n\t\t\tcollector.addRule(makeTabBackgroundRule(adjustedColor, adjustedColorDrag, false, false));\n\t\t}\n\t}\n});\n"],
  "mappings": "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",
  "names": ["editor", "e", "duplicateLabels"]
}
