{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/editor/multiEditorTabsControl.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/multieditortabscontrol.css\";\nimport { isSafari } from \"../../../../base/browser/browser.js\";\nimport { applyDragImage } from \"../../../../base/browser/dnd.js\";\nimport {\n\tDimension,\n\tDragAndDropObserver,\n\tEventHelper,\n\tEventType,\n\taddDisposableListener,\n\tclearNode,\n\tfindParentWithClass,\n\tgetWindow,\n\tisMouseEvent,\n\tscheduleAtNextAnimationFrame,\n} from \"../../../../base/browser/dom.js\";\nimport { StandardKeyboardEvent } from \"../../../../base/browser/keyboardEvent.js\";\nimport { StandardMouseEvent } from \"../../../../base/browser/mouseEvent.js\";\nimport {\n\tGesture,\n\ttype GestureEvent,\n\tEventType as TouchEventType,\n} from \"../../../../base/browser/touch.js\";\nimport { ActionBar } from \"../../../../base/browser/ui/actionbar/actionbar.js\";\nimport { ScrollableElement } from \"../../../../base/browser/ui/scrollbar/scrollableElement.js\";\nimport { coalesce, insert } from \"../../../../base/common/arrays.js\";\nimport { RunOnceScheduler } from \"../../../../base/common/async.js\";\nimport type { Color } from \"../../../../base/common/color.js\";\nimport { BugIndicatingError } from \"../../../../base/common/errors.js\";\nimport { KeyCode } from \"../../../../base/common/keyCodes.js\";\nimport { shorten } from \"../../../../base/common/labels.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n\tMutableDisposable,\n\tcombinedDisposable,\n\tdispose,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { getOrSet } from \"../../../../base/common/map.js\";\nimport { equals } from \"../../../../base/common/objects.js\";\nimport { type IPath, posix, win32 } from \"../../../../base/common/path.js\";\nimport {\n\tisLinux,\n\tisMacintosh,\n\tisWindows,\n} from \"../../../../base/common/platform.js\";\nimport { basenameOrAuthority } from \"../../../../base/common/resources.js\";\nimport { ScrollbarVisibility } from \"../../../../base/common/scrollable.js\";\nimport {\n\tassertAllDefined,\n\tassertIsDefined,\n} from \"../../../../base/common/types.js\";\nimport { DraggedTreeItemsIdentifier } from \"../../../../editor/common/services/treeViewsDnd.js\";\nimport { ITreeViewsDnDService } from \"../../../../editor/common/services/treeViewsDndService.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { MenuId } from \"../../../../platform/actions/common/actions.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextMenuService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport {\n\tEditorActivation,\n\ttype IEditorOptions,\n} from \"../../../../platform/editor/common/editor.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { INotificationService } from \"../../../../platform/notification/common/notification.js\";\nimport { IQuickInputService } from \"../../../../platform/quickinput/common/quickInput.js\";\nimport {\n\tactiveContrastBorder,\n\tcontrastBorder,\n\teditorBackground,\n\tlistActiveSelectionBackground,\n\tlistActiveSelectionForeground,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport { isHighContrast } from \"../../../../platform/theme/common/theme.js\";\nimport {\n\tIThemeService,\n\tregisterThemingParticipant,\n} from \"../../../../platform/theme/common/themeService.js\";\nimport {\n\tDEFAULT_EDITOR_ASSOCIATION,\n\tEditorCloseMethod,\n\tEditorInputCapabilities,\n\tEditorResourceAccessor,\n\tEditorsOrder,\n\ttype IEditorPartOptions,\n\ttype IToolbarActions,\n\ttype IUntypedEditorInput,\n\tSideBySideEditor,\n\tVerbosity,\n\tpreventEditorClose,\n} from \"../../../common/editor.js\";\nimport type { IReadonlyEditorGroupModel } from \"../../../common/editor/editorGroupModel.js\";\nimport type { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport {\n\tStickyEditorGroupModel,\n\tUnstickyEditorGroupModel,\n} from \"../../../common/editor/filteredEditorGroupModel.js\";\nimport {\n\tEDITOR_DRAG_AND_DROP_BACKGROUND,\n\tEDITOR_GROUP_HEADER_TABS_BACKGROUND,\n\tEDITOR_GROUP_HEADER_TABS_BORDER,\n\tTAB_ACTIVE_BACKGROUND,\n\tTAB_ACTIVE_BORDER,\n\tTAB_ACTIVE_BORDER_TOP,\n\tTAB_ACTIVE_MODIFIED_BORDER,\n\tTAB_BORDER,\n\tTAB_HOVER_BACKGROUND,\n\tTAB_HOVER_BORDER,\n\tTAB_HOVER_FOREGROUND,\n\tTAB_INACTIVE_BACKGROUND,\n\tTAB_INACTIVE_MODIFIED_BORDER,\n\tTAB_LAST_PINNED_BORDER,\n\tTAB_SELECTED_BORDER_TOP,\n\tTAB_UNFOCUSED_ACTIVE_BACKGROUND,\n\tTAB_UNFOCUSED_ACTIVE_BORDER,\n\tTAB_UNFOCUSED_ACTIVE_BORDER_TOP,\n\tTAB_UNFOCUSED_ACTIVE_MODIFIED_BORDER,\n\tTAB_UNFOCUSED_HOVER_BACKGROUND,\n\tTAB_UNFOCUSED_HOVER_BORDER,\n\tTAB_UNFOCUSED_HOVER_FOREGROUND,\n\tTAB_UNFOCUSED_INACTIVE_BACKGROUND,\n\tTAB_UNFOCUSED_INACTIVE_MODIFIED_BORDER,\n\tWORKBENCH_BACKGROUND,\n} from \"../../../common/theme.js\";\nimport {\n\ttype IMergeGroupOptions,\n\tMergeGroupMode,\n} from \"../../../services/editor/common/editorGroupsService.js\";\nimport { IEditorResolverService } from \"../../../services/editor/common/editorResolverService.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport { IHostService } from \"../../../services/host/browser/host.js\";\nimport { IPathService } from \"../../../services/path/common/pathService.js\";\nimport {\n\tDraggedEditorGroupIdentifier,\n\tDraggedEditorIdentifier,\n\tResourcesDropHandler,\n\textractTreeDropData,\n\tisWindowDraggedOver,\n} from \"../../dnd.js\";\nimport { computeEditorAriaLabel } from \"../../editor.js\";\nimport {\n\tDEFAULT_LABELS_CONTAINER,\n\ttype IResourceLabel,\n\tResourceLabels,\n} from \"../../labels.js\";\nimport type {\n\tEditorServiceImpl,\n\tIEditorGroupView,\n\tIEditorGroupsView,\n\tIEditorPartsView,\n\tIInternalEditorOpenOptions,\n} from \"./editor.js\";\nimport { CloseEditorTabAction, UnpinEditorAction } from \"./editorActions.js\";\nimport { UNLOCK_GROUP_COMMAND_ID } from \"./editorCommands.js\";\nimport {\n\tEditorCommandsContextActionRunner,\n\tEditorTabsControl,\n} from \"./editorTabsControl.js\";\nimport type { IEditorTitleControlDimensions } from \"./editorTitleControl.js\";\n\ninterface IEditorInputLabel {\n\treadonly editor: EditorInput;\n\n\treadonly name?: string;\n\tdescription?: string;\n\treadonly forceDescription?: boolean;\n\treadonly title?: string;\n\treadonly ariaLabel?: string;\n}\n\ninterface IMultiEditorTabsControlLayoutOptions {\n\t/**\n\t * Whether to force revealing the active tab, even when\n\t * the dimensions have not changed. This can be the case\n\t * when a tab was made active and needs to be revealed.\n\t */\n\treadonly forceRevealActiveTab?: true;\n}\n\ninterface IScheduledMultiEditorTabsControlLayout extends IDisposable {\n\t/**\n\t * Associated options with the layout call.\n\t */\n\toptions?: IMultiEditorTabsControlLayoutOptions;\n}\n\nexport class MultiEditorTabsControl extends EditorTabsControl {\n\tprivate static readonly SCROLLBAR_SIZES = {\n\t\tdefault: 3 as const,\n\t\tlarge: 10 as const,\n\t};\n\n\tprivate static readonly TAB_WIDTH = {\n\t\tcompact: 38 as const,\n\t\tshrink: 80 as const,\n\t\tfit: 120 as const,\n\t};\n\n\tprivate static readonly DRAG_OVER_OPEN_TAB_THRESHOLD = 1500;\n\n\tprivate static readonly MOUSE_WHEEL_EVENT_THRESHOLD = 150;\n\tprivate static readonly MOUSE_WHEEL_DISTANCE_THRESHOLD = 1.5;\n\n\tprivate titleContainer: HTMLElement | undefined;\n\tprivate tabsAndActionsContainer: HTMLElement | undefined;\n\tprivate tabsContainer: HTMLElement | undefined;\n\tprivate tabsScrollbar: ScrollableElement | undefined;\n\tprivate tabSizingFixedDisposables: DisposableStore | undefined;\n\n\tprivate readonly closeEditorAction = this._register(\n\t\tthis.instantiationService.createInstance(\n\t\t\tCloseEditorTabAction,\n\t\t\tCloseEditorTabAction.ID,\n\t\t\tCloseEditorTabAction.LABEL,\n\t\t),\n\t);\n\tprivate readonly unpinEditorAction = this._register(\n\t\tthis.instantiationService.createInstance(\n\t\t\tUnpinEditorAction,\n\t\t\tUnpinEditorAction.ID,\n\t\t\tUnpinEditorAction.LABEL,\n\t\t),\n\t);\n\n\tprivate readonly tabResourceLabels = this._register(\n\t\tthis.instantiationService.createInstance(\n\t\t\tResourceLabels,\n\t\t\tDEFAULT_LABELS_CONTAINER,\n\t\t),\n\t);\n\tprivate tabLabels: IEditorInputLabel[] = [];\n\tprivate activeTabLabel: IEditorInputLabel | undefined;\n\n\tprivate tabActionBars: ActionBar[] = [];\n\tprivate tabDisposables: IDisposable[] = [];\n\n\tprivate dimensions: IEditorTitleControlDimensions & { used?: Dimension } = {\n\t\tcontainer: Dimension.None,\n\t\tavailable: Dimension.None,\n\t};\n\n\tprivate readonly layoutScheduler = this._register(\n\t\tnew MutableDisposable<IScheduledMultiEditorTabsControlLayout>(),\n\t);\n\tprivate blockRevealActiveTab: boolean | undefined;\n\n\tprivate path: IPath = isWindows ? win32 : posix;\n\n\tprivate lastMouseWheelEventTime = 0;\n\tprivate isMouseOverTabs = false;\n\n\tconstructor(\n\t\tparent: HTMLElement,\n\t\teditorPartsView: IEditorPartsView,\n\t\tgroupsView: IEditorGroupsView,\n\t\tgroupView: IEditorGroupView,\n\t\ttabsModel: IReadonlyEditorGroupModel,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IQuickInputService quickInputService: IQuickInputService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IEditorService private readonly editorService: EditorServiceImpl,\n\t\t@IPathService private readonly pathService: IPathService,\n\t\t@ITreeViewsDnDService private readonly treeViewsDragAndDropService: ITreeViewsDnDService,\n\t\t@IEditorResolverService editorResolverService: IEditorResolverService,\n\t\t@IHostService hostService: IHostService,\n\t) {\n\t\tsuper(parent, editorPartsView, groupsView, groupView, tabsModel, contextMenuService, instantiationService, contextKeyService, keybindingService, notificationService, quickInputService, themeService, editorResolverService, hostService);\n\n\t\t// Resolve the correct path library for the OS we are on\n\t\t// If we are connected to remote, this accounts for the\n\t\t// remote OS.\n\t\t(async () => this.path = await this.pathService.path)();\n\n\t\t// React to decorations changing for our resource labels\n\t\tthis._register(this.tabResourceLabels.onDidChangeDecorations(() => this.doHandleDecorationsChange()));\n\t}\n\n\tprotected override create(parent: HTMLElement): void {\n\t\tsuper.create(parent);\n\n\t\tthis.titleContainer = parent;\n\n\t\t// Tabs and Actions Container (are on a single row with flex side-by-side)\n\t\tthis.tabsAndActionsContainer = document.createElement(\"div\");\n\t\tthis.tabsAndActionsContainer.classList.add(\n\t\t\t\"tabs-and-actions-container\",\n\t\t);\n\t\tthis.titleContainer.appendChild(this.tabsAndActionsContainer);\n\n\t\t// Tabs Container\n\t\tthis.tabsContainer = document.createElement(\"div\");\n\t\tthis.tabsContainer.setAttribute(\"role\", \"tablist\");\n\t\tthis.tabsContainer.draggable = true;\n\t\tthis.tabsContainer.classList.add(\"tabs-container\");\n\t\tthis._register(Gesture.addTarget(this.tabsContainer));\n\n\t\tthis.tabSizingFixedDisposables = this._register(new DisposableStore());\n\t\tthis.updateTabSizing(false);\n\n\t\t// Tabs Scrollbar\n\t\tthis.tabsScrollbar = this.createTabsScrollbar(this.tabsContainer);\n\t\tthis.tabsAndActionsContainer.appendChild(\n\t\t\tthis.tabsScrollbar.getDomNode(),\n\t\t);\n\n\t\t// Tabs Container listeners\n\t\tthis.registerTabsContainerListeners(\n\t\t\tthis.tabsContainer,\n\t\t\tthis.tabsScrollbar,\n\t\t);\n\n\t\t// Create Editor Toolbar\n\t\tthis.createEditorActionsToolBar(this.tabsAndActionsContainer, [\n\t\t\t\"editor-actions\",\n\t\t]);\n\n\t\t// Set tabs control visibility\n\t\tthis.updateTabsControlVisibility();\n\t}\n\n\tprivate createTabsScrollbar(scrollable: HTMLElement): ScrollableElement {\n\t\tconst tabsScrollbar = this._register(\n\t\t\tnew ScrollableElement(scrollable, {\n\t\t\t\thorizontal: ScrollbarVisibility.Auto,\n\t\t\t\thorizontalScrollbarSize: this.getTabsScrollbarSizing(),\n\t\t\t\tvertical: ScrollbarVisibility.Hidden,\n\t\t\t\tscrollYToX: true,\n\t\t\t\tuseShadows: false,\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\ttabsScrollbar.onScroll((e) => {\n\t\t\t\tif (e.scrollLeftChanged) {\n\t\t\t\t\tscrollable.scrollLeft = e.scrollLeft;\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\treturn tabsScrollbar;\n\t}\n\n\tprivate updateTabsScrollbarSizing(): void {\n\t\tthis.tabsScrollbar?.updateOptions({\n\t\t\thorizontalScrollbarSize: this.getTabsScrollbarSizing(),\n\t\t});\n\t}\n\n\tprivate updateTabSizing(fromEvent: boolean): void {\n\t\tconst [tabsContainer, tabSizingFixedDisposables] = assertAllDefined(\n\t\t\tthis.tabsContainer,\n\t\t\tthis.tabSizingFixedDisposables,\n\t\t);\n\n\t\ttabSizingFixedDisposables.clear();\n\n\t\tconst options = this.groupsView.partOptions;\n\t\tif (options.tabSizing === \"fixed\") {\n\t\t\ttabsContainer.style.setProperty(\n\t\t\t\t\"--tab-sizing-fixed-min-width\",\n\t\t\t\t`${options.tabSizingFixedMinWidth}px`,\n\t\t\t);\n\t\t\ttabsContainer.style.setProperty(\n\t\t\t\t\"--tab-sizing-fixed-max-width\",\n\t\t\t\t`${options.tabSizingFixedMaxWidth}px`,\n\t\t\t);\n\n\t\t\t// For https://github.com/microsoft/vscode/issues/40290 we want to\n\t\t\t// preserve the current tab widths as long as the mouse is over the\n\t\t\t// tabs so that you can quickly close them via mouse click. For that\n\t\t\t// we track mouse movements over the tabs container.\n\n\t\t\ttabSizingFixedDisposables.add(\n\t\t\t\taddDisposableListener(\n\t\t\t\t\ttabsContainer,\n\t\t\t\t\tEventType.MOUSE_ENTER,\n\t\t\t\t\t() => {\n\t\t\t\t\t\tthis.isMouseOverTabs = true;\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t\ttabSizingFixedDisposables.add(\n\t\t\t\taddDisposableListener(\n\t\t\t\t\ttabsContainer,\n\t\t\t\t\tEventType.MOUSE_LEAVE,\n\t\t\t\t\t() => {\n\t\t\t\t\t\tthis.isMouseOverTabs = false;\n\t\t\t\t\t\tthis.updateTabsFixedWidth(false);\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t} else if (fromEvent) {\n\t\t\ttabsContainer.style.removeProperty(\"--tab-sizing-fixed-min-width\");\n\t\t\ttabsContainer.style.removeProperty(\"--tab-sizing-fixed-max-width\");\n\t\t\tthis.updateTabsFixedWidth(false);\n\t\t}\n\t}\n\n\tprivate updateTabsFixedWidth(fixed: boolean): void {\n\t\tthis.forEachTab((editor, tabIndex, tabContainer) => {\n\t\t\tif (fixed) {\n\t\t\t\tconst { width } = tabContainer.getBoundingClientRect();\n\t\t\t\ttabContainer.style.setProperty(\n\t\t\t\t\t\"--tab-sizing-current-width\",\n\t\t\t\t\t`${width}px`,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\ttabContainer.style.removeProperty(\"--tab-sizing-current-width\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate getTabsScrollbarSizing(): number {\n\t\tif (this.groupsView.partOptions.titleScrollbarSizing !== \"large\") {\n\t\t\treturn MultiEditorTabsControl.SCROLLBAR_SIZES.default;\n\t\t}\n\n\t\treturn MultiEditorTabsControl.SCROLLBAR_SIZES.large;\n\t}\n\n\tprivate registerTabsContainerListeners(\n\t\ttabsContainer: HTMLElement,\n\t\ttabsScrollbar: ScrollableElement,\n\t): void {\n\t\t// Forward scrolling inside the container to our custom scrollbar\n\t\tthis._register(\n\t\t\taddDisposableListener(tabsContainer, EventType.SCROLL, () => {\n\t\t\t\tif (tabsContainer.classList.contains(\"scroll\")) {\n\t\t\t\t\ttabsScrollbar.setScrollPosition({\n\t\t\t\t\t\tscrollLeft: tabsContainer.scrollLeft, // during DND the container gets scrolled so we need to update the custom scrollbar\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// New file when double-clicking on tabs container (but not tabs)\n\t\tfor (const eventType of [TouchEventType.Tap, EventType.DBLCLICK]) {\n\t\t\tthis._register(\n\t\t\t\taddDisposableListener(\n\t\t\t\t\ttabsContainer,\n\t\t\t\t\teventType,\n\t\t\t\t\t(e: MouseEvent | GestureEvent) => {\n\t\t\t\t\t\tif (eventType === EventType.DBLCLICK) {\n\t\t\t\t\t\t\tif (e.target !== tabsContainer) {\n\t\t\t\t\t\t\t\treturn; // ignore if target is not tabs container\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif ((<GestureEvent>e).tapCount !== 2) {\n\t\t\t\t\t\t\t\treturn; // ignore single taps\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t(<GestureEvent>e).initialTarget !==\n\t\t\t\t\t\t\t\ttabsContainer\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn; // ignore if target is not tabs container\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tEventHelper.stop(e);\n\n\t\t\t\t\t\tthis.editorService.openEditor(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tresource: undefined,\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\tpinned: true,\n\t\t\t\t\t\t\t\t\tindex: this.groupView.count, // always at the end\n\t\t\t\t\t\t\t\t\toverride: DEFAULT_EDITOR_ASSOCIATION.id,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tthis.groupView.id,\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\t// Prevent auto-scrolling (https://github.com/microsoft/vscode/issues/16690)\n\t\tthis._register(\n\t\t\taddDisposableListener(tabsContainer, EventType.MOUSE_DOWN, (e) => {\n\t\t\t\tif (e.button === 1) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// Prevent auto-pasting (https://github.com/microsoft/vscode/issues/201696)\n\t\tif (isLinux) {\n\t\t\tthis._register(\n\t\t\t\taddDisposableListener(\n\t\t\t\t\ttabsContainer,\n\t\t\t\t\tEventType.MOUSE_UP,\n\t\t\t\t\t(e) => {\n\t\t\t\t\t\tif (e.button === 1) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\t// Drag & Drop support\n\t\tlet lastDragEvent: DragEvent | undefined;\n\t\tlet isNewWindowOperation = false;\n\t\tthis._register(\n\t\t\tnew DragAndDropObserver(tabsContainer, {\n\t\t\t\tonDragStart: (e) => {\n\t\t\t\t\tisNewWindowOperation = this.onGroupDragStart(\n\t\t\t\t\t\te,\n\t\t\t\t\t\ttabsContainer,\n\t\t\t\t\t);\n\t\t\t\t},\n\n\t\t\t\tonDrag: (e) => {\n\t\t\t\t\tlastDragEvent = e;\n\t\t\t\t},\n\n\t\t\t\tonDragEnter: (e) => {\n\t\t\t\t\t// Always enable support to scroll while dragging\n\t\t\t\t\ttabsContainer.classList.add(\"scroll\");\n\n\t\t\t\t\t// Return if the target is not on the tabs container\n\t\t\t\t\tif (e.target !== tabsContainer) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Return if transfer is unsupported\n\t\t\t\t\tif (!this.isSupportedDropTransfer(e)) {\n\t\t\t\t\t\tif (e.dataTransfer) {\n\t\t\t\t\t\t\te.dataTransfer.dropEffect = \"none\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Update the dropEffect to \"copy\" if there is no local data to be dragged because\n\t\t\t\t\t// in that case we can only copy the data into and not move it from its source\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.editorTransfer.hasData(\n\t\t\t\t\t\t\tDraggedEditorIdentifier.prototype,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (e.dataTransfer) {\n\t\t\t\t\t\t\te.dataTransfer.dropEffect = \"copy\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.updateDropFeedback(tabsContainer, true, e);\n\t\t\t\t},\n\n\t\t\t\tonDragLeave: (e) => {\n\t\t\t\t\tthis.updateDropFeedback(tabsContainer, false, e);\n\t\t\t\t\ttabsContainer.classList.remove(\"scroll\");\n\t\t\t\t},\n\n\t\t\t\tonDragEnd: (e) => {\n\t\t\t\t\tthis.updateDropFeedback(tabsContainer, false, e);\n\t\t\t\t\ttabsContainer.classList.remove(\"scroll\");\n\n\t\t\t\t\tthis.onGroupDragEnd(\n\t\t\t\t\t\te,\n\t\t\t\t\t\tlastDragEvent,\n\t\t\t\t\t\ttabsContainer,\n\t\t\t\t\t\tisNewWindowOperation,\n\t\t\t\t\t);\n\t\t\t\t},\n\n\t\t\t\tonDrop: (e) => {\n\t\t\t\t\tthis.updateDropFeedback(tabsContainer, false, e);\n\t\t\t\t\ttabsContainer.classList.remove(\"scroll\");\n\n\t\t\t\t\tif (e.target === tabsContainer) {\n\t\t\t\t\t\tconst isGroupTransfer = this.groupTransfer.hasData(\n\t\t\t\t\t\t\tDraggedEditorGroupIdentifier.prototype,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.onDrop(\n\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\tisGroupTransfer\n\t\t\t\t\t\t\t\t? this.groupView.count\n\t\t\t\t\t\t\t\t: this.tabsModel.count,\n\t\t\t\t\t\t\ttabsContainer,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\n\t\t// Mouse-wheel support to switch to tabs optionally\n\t\tthis._register(\n\t\t\taddDisposableListener(\n\t\t\t\ttabsContainer,\n\t\t\t\tEventType.MOUSE_WHEEL,\n\t\t\t\t(e: WheelEvent) => {\n\t\t\t\t\tconst activeEditor = this.groupView.activeEditor;\n\t\t\t\t\tif (!activeEditor || this.groupView.count < 2) {\n\t\t\t\t\t\treturn; // need at least 2 open editors\n\t\t\t\t\t}\n\n\t\t\t\t\t// Shift-key enables or disables this behaviour depending on the setting\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.groupsView.partOptions.scrollToSwitchTabs === true\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (e.shiftKey) {\n\t\t\t\t\t\t\treturn; // 'on': only enable this when Shift-key is not pressed\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (!e.shiftKey) {\n\t\t\t\t\t\treturn; // 'off': only enable this when Shift-key is pressed\n\t\t\t\t\t}\n\n\t\t\t\t\t// Ignore event if the last one happened too recently (https://github.com/microsoft/vscode/issues/96409)\n\t\t\t\t\t// The restriction is relaxed according to the absolute value of `deltaX` and `deltaY`\n\t\t\t\t\t// to support discrete (mouse wheel) and contiguous scrolling (touchpad) equally well\n\t\t\t\t\tconst now = Date.now();\n\t\t\t\t\tif (\n\t\t\t\t\t\tnow - this.lastMouseWheelEventTime <\n\t\t\t\t\t\tMultiEditorTabsControl.MOUSE_WHEEL_EVENT_THRESHOLD -\n\t\t\t\t\t\t\t2 * (Math.abs(e.deltaX) + Math.abs(e.deltaY))\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.lastMouseWheelEventTime = now;\n\n\t\t\t\t\t// Figure out scrolling direction but ignore it if too subtle\n\t\t\t\t\tlet tabSwitchDirection: number;\n\t\t\t\t\tif (\n\t\t\t\t\t\te.deltaX + e.deltaY <\n\t\t\t\t\t\t-MultiEditorTabsControl.MOUSE_WHEEL_DISTANCE_THRESHOLD\n\t\t\t\t\t) {\n\t\t\t\t\t\ttabSwitchDirection = -1;\n\t\t\t\t\t} else if (\n\t\t\t\t\t\te.deltaX + e.deltaY >\n\t\t\t\t\t\tMultiEditorTabsControl.MOUSE_WHEEL_DISTANCE_THRESHOLD\n\t\t\t\t\t) {\n\t\t\t\t\t\ttabSwitchDirection = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst nextEditor = this.groupView.getEditorByIndex(\n\t\t\t\t\t\tthis.groupView.getIndexOfEditor(activeEditor) +\n\t\t\t\t\t\t\ttabSwitchDirection,\n\t\t\t\t\t);\n\t\t\t\t\tif (!nextEditor) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Open it\n\t\t\t\t\tthis.groupView.openEditor(nextEditor);\n\n\t\t\t\t\t// Disable normal scrolling, opening the editor will already reveal it properly\n\t\t\t\t\tEventHelper.stop(e, true);\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\t// Context menu\n\t\tconst showContextMenu = (e: Event) => {\n\t\t\tEventHelper.stop(e);\n\n\t\t\t// Find target anchor\n\t\t\tlet anchor: HTMLElement | StandardMouseEvent = tabsContainer;\n\t\t\tif (isMouseEvent(e)) {\n\t\t\t\tanchor = new StandardMouseEvent(getWindow(this.parent), e);\n\t\t\t}\n\n\t\t\t// Show it\n\t\t\tthis.contextMenuService.showContextMenu({\n\t\t\t\tgetAnchor: () => anchor,\n\t\t\t\tmenuId: MenuId.EditorTabsBarContext,\n\t\t\t\tcontextKeyService: this.contextKeyService,\n\t\t\t\tmenuActionOptions: { shouldForwardArgs: true },\n\t\t\t\tgetActionsContext: () => ({ groupId: this.groupView.id }),\n\t\t\t\tgetKeyBinding: (action) => this.getKeybinding(action),\n\t\t\t\tonHide: () => this.groupView.focus(),\n\t\t\t});\n\t\t};\n\n\t\tthis._register(\n\t\t\taddDisposableListener(\n\t\t\t\ttabsContainer,\n\t\t\t\tTouchEventType.Contextmenu,\n\t\t\t\t(e) => showContextMenu(e),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\taddDisposableListener(tabsContainer, EventType.CONTEXT_MENU, (e) =>\n\t\t\t\tshowContextMenu(e),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate doHandleDecorationsChange(): void {\n\t\t// A change to decorations potentially has an impact on the size of tabs\n\t\t// so we need to trigger a layout in that case to adjust things\n\t\tthis.layout(this.dimensions);\n\t}\n\n\tprotected override updateEditorActionsToolbar(): void {\n\t\tsuper.updateEditorActionsToolbar();\n\n\t\t// Changing the actions in the toolbar can have an impact on the size of the\n\t\t// tab container, so we need to layout the tabs to make sure the active is visible\n\t\tthis.layout(this.dimensions);\n\t}\n\n\topenEditor(\n\t\teditor: EditorInput,\n\t\toptions?: IInternalEditorOpenOptions,\n\t): boolean {\n\t\tconst changed = this.handleOpenedEditors();\n\n\t\t// Respect option to focus tab control if provided\n\t\tif (options?.focusTabControl) {\n\t\t\tthis.withTab(editor, (editor, tabIndex, tabContainer) =>\n\t\t\t\ttabContainer.focus(),\n\t\t\t);\n\t\t}\n\n\t\treturn changed;\n\t}\n\n\topenEditors(editors: EditorInput[]): boolean {\n\t\treturn this.handleOpenedEditors();\n\t}\n\n\tprivate handleOpenedEditors(): boolean {\n\t\t// Set tabs control visibility\n\t\tthis.updateTabsControlVisibility();\n\n\t\t// Create tabs as needed\n\t\tconst [tabsContainer, tabsScrollbar] = assertAllDefined(\n\t\t\tthis.tabsContainer,\n\t\t\tthis.tabsScrollbar,\n\t\t);\n\t\tfor (\n\t\t\tlet i = tabsContainer.children.length;\n\t\t\ti < this.tabsModel.count;\n\t\t\ti++\n\t\t) {\n\t\t\ttabsContainer.appendChild(\n\t\t\t\tthis.createTab(i, tabsContainer, tabsScrollbar),\n\t\t\t);\n\t\t}\n\n\t\t// Make sure to recompute tab labels and detect\n\t\t// if a label change occurred that requires a\n\t\t// redraw of tabs.\n\n\t\tconst activeEditorChanged = this.didActiveEditorChange();\n\t\tconst oldActiveTabLabel = this.activeTabLabel;\n\t\tconst oldTabLabelsLength = this.tabLabels.length;\n\t\tthis.computeTabLabels();\n\n\t\t// Redraw and update in these cases\n\t\tlet didChange = false;\n\t\tif (\n\t\t\tactiveEditorChanged || // active editor changed\n\t\t\toldTabLabelsLength !== this.tabLabels.length || // number of tabs changed\n\t\t\t!this.equalsEditorInputLabel(oldActiveTabLabel, this.activeTabLabel) // active editor label changed\n\t\t) {\n\t\t\tthis.redraw({ forceRevealActiveTab: true });\n\t\t\tdidChange = true;\n\t\t}\n\n\t\t// Otherwise only layout for revealing\n\t\telse {\n\t\t\tthis.layout(this.dimensions, { forceRevealActiveTab: true });\n\t\t}\n\n\t\treturn didChange;\n\t}\n\n\tprivate didActiveEditorChange(): boolean {\n\t\tif (\n\t\t\t(!this.activeTabLabel?.editor && this.tabsModel.activeEditor) || // active editor changed from null => editor\n\t\t\t(this.activeTabLabel?.editor && !this.tabsModel.activeEditor) || // active editor changed from editor => null\n\t\t\t!this.activeTabLabel?.editor ||\n\t\t\t!this.tabsModel.isActive(this.activeTabLabel.editor) // active editor changed from editorA => editorB\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate equalsEditorInputLabel(\n\t\tlabelA: IEditorInputLabel | undefined,\n\t\tlabelB: IEditorInputLabel | undefined,\n\t): boolean {\n\t\tif (labelA === labelB) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (!labelA || !labelB) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn (\n\t\t\tlabelA.name === labelB.name &&\n\t\t\tlabelA.description === labelB.description &&\n\t\t\tlabelA.forceDescription === labelB.forceDescription &&\n\t\t\tlabelA.title === labelB.title &&\n\t\t\tlabelA.ariaLabel === labelB.ariaLabel\n\t\t);\n\t}\n\n\tbeforeCloseEditor(editor: EditorInput): void {\n\t\t// Fix tabs width if the mouse is over tabs and before closing\n\t\t// a tab (except the last tab) when tab sizing is 'fixed'.\n\t\t// This helps keeping the close button stable under\n\t\t// the mouse and allows for rapid closing of tabs.\n\n\t\tif (\n\t\t\tthis.isMouseOverTabs &&\n\t\t\tthis.groupsView.partOptions.tabSizing === \"fixed\"\n\t\t) {\n\t\t\tconst closingLastTab = this.tabsModel.isLast(editor);\n\t\t\tthis.updateTabsFixedWidth(!closingLastTab);\n\t\t}\n\t}\n\n\tcloseEditor(editor: EditorInput): void {\n\t\tthis.handleClosedEditors();\n\t}\n\n\tcloseEditors(editors: EditorInput[]): void {\n\t\tthis.handleClosedEditors();\n\t}\n\n\tprivate handleClosedEditors(): void {\n\t\t// There are tabs to show\n\t\tif (this.tabsModel.count) {\n\t\t\t// Remove tabs that got closed\n\t\t\tconst tabsContainer = assertIsDefined(this.tabsContainer);\n\t\t\twhile (tabsContainer.children.length > this.tabsModel.count) {\n\t\t\t\t// Remove one tab from container (must be the last to keep indexes in order!)\n\t\t\t\ttabsContainer.lastChild?.remove();\n\n\t\t\t\t// Remove associated tab label and widget\n\t\t\t\tdispose(this.tabDisposables.pop());\n\t\t\t}\n\n\t\t\t// A removal of a label requires to recompute all labels\n\t\t\tthis.computeTabLabels();\n\n\t\t\t// Redraw all tabs\n\t\t\tthis.redraw({ forceRevealActiveTab: true });\n\t\t}\n\n\t\t// No tabs to show\n\t\telse {\n\t\t\tif (this.tabsContainer) {\n\t\t\t\tclearNode(this.tabsContainer);\n\t\t\t}\n\n\t\t\tthis.tabDisposables = dispose(this.tabDisposables);\n\t\t\tthis.tabResourceLabels.clear();\n\t\t\tthis.tabLabels = [];\n\t\t\tthis.activeTabLabel = undefined;\n\t\t\tthis.tabActionBars = [];\n\n\t\t\tthis.clearEditorActionsToolbar();\n\t\t\tthis.updateTabsControlVisibility();\n\t\t}\n\t}\n\n\tmoveEditor(\n\t\teditor: EditorInput,\n\t\tfromTabIndex: number,\n\t\ttargeTabIndex: number,\n\t): void {\n\t\t// Move the editor label\n\t\tconst editorLabel = this.tabLabels[fromTabIndex];\n\t\tthis.tabLabels.splice(fromTabIndex, 1);\n\t\tthis.tabLabels.splice(targeTabIndex, 0, editorLabel);\n\n\t\t// Redraw tabs in the range of the move\n\t\tthis.forEachTab(\n\t\t\t(\n\t\t\t\teditor,\n\t\t\t\ttabIndex,\n\t\t\t\ttabContainer,\n\t\t\t\ttabLabelWidget,\n\t\t\t\ttabLabel,\n\t\t\t\ttabActionBar,\n\t\t\t) => {\n\t\t\t\tthis.redrawTab(\n\t\t\t\t\teditor,\n\t\t\t\t\ttabIndex,\n\t\t\t\t\ttabContainer,\n\t\t\t\t\ttabLabelWidget,\n\t\t\t\t\ttabLabel,\n\t\t\t\t\ttabActionBar,\n\t\t\t\t);\n\t\t\t},\n\t\t\tMath.min(fromTabIndex, targeTabIndex), // from: smallest of fromTabIndex/targeTabIndex\n\t\t\tMath.max(fromTabIndex, targeTabIndex), //   to: largest of fromTabIndex/targeTabIndex\n\t\t);\n\n\t\t// Moving an editor requires a layout to keep the active editor visible\n\t\tthis.layout(this.dimensions, { forceRevealActiveTab: true });\n\t}\n\n\tpinEditor(editor: EditorInput): void {\n\t\tthis.withTab(\n\t\t\teditor,\n\t\t\t(editor, tabIndex, tabContainer, tabLabelWidget, tabLabel) =>\n\t\t\t\tthis.redrawTabLabel(\n\t\t\t\t\teditor,\n\t\t\t\t\ttabIndex,\n\t\t\t\t\ttabContainer,\n\t\t\t\t\ttabLabelWidget,\n\t\t\t\t\ttabLabel,\n\t\t\t\t),\n\t\t);\n\t}\n\n\tstickEditor(editor: EditorInput): void {\n\t\tthis.doHandleStickyEditorChange(editor);\n\t}\n\n\tunstickEditor(editor: EditorInput): void {\n\t\tthis.doHandleStickyEditorChange(editor);\n\t}\n\n\tprivate doHandleStickyEditorChange(editor: EditorInput): void {\n\t\t// Update tab\n\t\tthis.withTab(\n\t\t\teditor,\n\t\t\t(\n\t\t\t\teditor,\n\t\t\t\ttabIndex,\n\t\t\t\ttabContainer,\n\t\t\t\ttabLabelWidget,\n\t\t\t\ttabLabel,\n\t\t\t\ttabActionBar,\n\t\t\t) =>\n\t\t\t\tthis.redrawTab(\n\t\t\t\t\teditor,\n\t\t\t\t\ttabIndex,\n\t\t\t\t\ttabContainer,\n\t\t\t\t\ttabLabelWidget,\n\t\t\t\t\ttabLabel,\n\t\t\t\t\ttabActionBar,\n\t\t\t\t),\n\t\t);\n\n\t\t// Sticky change has an impact on each tab's border because\n\t\t// it potentially moves the border to the last pinned tab\n\t\tthis.forEachTab(\n\t\t\t(editor, tabIndex, tabContainer, tabLabelWidget, tabLabel) => {\n\t\t\t\tthis.redrawTabBorders(tabIndex, tabContainer);\n\t\t\t},\n\t\t);\n\n\t\t// A change to the sticky state requires a layout to keep the active editor visible\n\t\tthis.layout(this.dimensions, { forceRevealActiveTab: true });\n\t}\n\n\tsetActive(isGroupActive: boolean): void {\n\t\t// Activity has an impact on each tab's active indication\n\t\tthis.forEachTab(\n\t\t\t(\n\t\t\t\teditor,\n\t\t\t\ttabIndex,\n\t\t\t\ttabContainer,\n\t\t\t\ttabLabelWidget,\n\t\t\t\ttabLabel,\n\t\t\t\ttabActionBar,\n\t\t\t) => {\n\t\t\t\tthis.redrawTabSelectedActiveAndDirty(\n\t\t\t\t\tisGroupActive,\n\t\t\t\t\teditor,\n\t\t\t\t\ttabContainer,\n\t\t\t\t\ttabActionBar,\n\t\t\t\t);\n\t\t\t},\n\t\t);\n\n\t\t// Activity has an impact on the toolbar, so we need to update and layout\n\t\tthis.updateEditorActionsToolbar();\n\t\tthis.layout(this.dimensions, { forceRevealActiveTab: true });\n\t}\n\n\tupdateEditorSelections(): void {\n\t\tthis.forEachTab(\n\t\t\t(\n\t\t\t\teditor,\n\t\t\t\ttabIndex,\n\t\t\t\ttabContainer,\n\t\t\t\ttabLabelWidget,\n\t\t\t\ttabLabel,\n\t\t\t\ttabActionBar,\n\t\t\t) => {\n\t\t\t\tthis.redrawTabSelectedActiveAndDirty(\n\t\t\t\t\tthis.groupsView.activeGroup === this.groupView,\n\t\t\t\t\teditor,\n\t\t\t\t\ttabContainer,\n\t\t\t\t\ttabActionBar,\n\t\t\t\t);\n\t\t\t},\n\t\t);\n\t}\n\n\tprivate updateEditorLabelScheduler = this._register(\n\t\tnew RunOnceScheduler(() => this.doUpdateEditorLabels(), 0),\n\t);\n\n\tupdateEditorLabel(editor: EditorInput): void {\n\t\t// Update all labels to account for changes to tab labels\n\t\t// Since this method may be called a lot of times from\n\t\t// individual editors, we collect all those requests and\n\t\t// then run the update once because we have to update\n\t\t// all opened tabs in the group at once.\n\t\tthis.updateEditorLabelScheduler.schedule();\n\t}\n\n\tprivate doUpdateEditorLabels(): void {\n\t\t// A change to a label requires to recompute all labels\n\t\tthis.computeTabLabels();\n\n\t\t// As such we need to redraw each label\n\t\tthis.forEachTab(\n\t\t\t(editor, tabIndex, tabContainer, tabLabelWidget, tabLabel) => {\n\t\t\t\tthis.redrawTabLabel(\n\t\t\t\t\teditor,\n\t\t\t\t\ttabIndex,\n\t\t\t\t\ttabContainer,\n\t\t\t\t\ttabLabelWidget,\n\t\t\t\t\ttabLabel,\n\t\t\t\t);\n\t\t\t},\n\t\t);\n\n\t\t// A change to a label requires a layout to keep the active editor visible\n\t\tthis.layout(this.dimensions);\n\t}\n\n\tupdateEditorDirty(editor: EditorInput): void {\n\t\tthis.withTab(\n\t\t\teditor,\n\t\t\t(\n\t\t\t\teditor,\n\t\t\t\ttabIndex,\n\t\t\t\ttabContainer,\n\t\t\t\ttabLabelWidget,\n\t\t\t\ttabLabel,\n\t\t\t\ttabActionBar,\n\t\t\t) =>\n\t\t\t\tthis.redrawTabSelectedActiveAndDirty(\n\t\t\t\t\tthis.groupsView.activeGroup === this.groupView,\n\t\t\t\t\teditor,\n\t\t\t\t\ttabContainer,\n\t\t\t\t\ttabActionBar,\n\t\t\t\t),\n\t\t);\n\t}\n\n\toverride updateOptions(\n\t\toldOptions: IEditorPartOptions,\n\t\tnewOptions: IEditorPartOptions,\n\t): void {\n\t\tsuper.updateOptions(oldOptions, newOptions);\n\n\t\t// A change to a label format options requires to recompute all labels\n\t\tif (oldOptions.labelFormat !== newOptions.labelFormat) {\n\t\t\tthis.computeTabLabels();\n\t\t}\n\n\t\t// Update tabs scrollbar sizing\n\t\tif (\n\t\t\toldOptions.titleScrollbarSizing !== newOptions.titleScrollbarSizing\n\t\t) {\n\t\t\tthis.updateTabsScrollbarSizing();\n\t\t}\n\n\t\t// Update editor actions\n\t\tif (\n\t\t\toldOptions.alwaysShowEditorActions !==\n\t\t\tnewOptions.alwaysShowEditorActions\n\t\t) {\n\t\t\tthis.updateEditorActionsToolbar();\n\t\t}\n\n\t\t// Update tabs sizing\n\t\tif (\n\t\t\toldOptions.tabSizingFixedMinWidth !==\n\t\t\t\tnewOptions.tabSizingFixedMinWidth ||\n\t\t\toldOptions.tabSizingFixedMaxWidth !==\n\t\t\t\tnewOptions.tabSizingFixedMaxWidth ||\n\t\t\toldOptions.tabSizing !== newOptions.tabSizing\n\t\t) {\n\t\t\tthis.updateTabSizing(true);\n\t\t}\n\n\t\t// Redraw tabs when other options change\n\t\tif (\n\t\t\toldOptions.labelFormat !== newOptions.labelFormat ||\n\t\t\toldOptions.tabActionLocation !== newOptions.tabActionLocation ||\n\t\t\toldOptions.tabActionCloseVisibility !==\n\t\t\t\tnewOptions.tabActionCloseVisibility ||\n\t\t\toldOptions.tabActionUnpinVisibility !==\n\t\t\t\tnewOptions.tabActionUnpinVisibility ||\n\t\t\toldOptions.tabSizing !== newOptions.tabSizing ||\n\t\t\toldOptions.pinnedTabSizing !== newOptions.pinnedTabSizing ||\n\t\t\toldOptions.showIcons !== newOptions.showIcons ||\n\t\t\toldOptions.hasIcons !== newOptions.hasIcons ||\n\t\t\toldOptions.highlightModifiedTabs !==\n\t\t\t\tnewOptions.highlightModifiedTabs ||\n\t\t\toldOptions.wrapTabs !== newOptions.wrapTabs ||\n\t\t\t!equals(oldOptions.decorations, newOptions.decorations)\n\t\t) {\n\t\t\tthis.redraw();\n\t\t}\n\t}\n\n\toverride updateStyles(): void {\n\t\tthis.redraw();\n\t}\n\n\tprivate forEachTab(\n\t\tfn: (\n\t\t\teditor: EditorInput,\n\t\t\ttabIndex: number,\n\t\t\ttabContainer: HTMLElement,\n\t\t\ttabLabelWidget: IResourceLabel,\n\t\t\ttabLabel: IEditorInputLabel,\n\t\t\ttabActionBar: ActionBar,\n\t\t) => void,\n\t\tfromTabIndex?: number,\n\t\ttoTabIndex?: number,\n\t): void {\n\t\tthis.tabsModel\n\t\t\t.getEditors(EditorsOrder.SEQUENTIAL)\n\t\t\t.forEach((editor: EditorInput, tabIndex: number) => {\n\t\t\t\tif (\n\t\t\t\t\ttypeof fromTabIndex === \"number\" &&\n\t\t\t\t\tfromTabIndex > tabIndex\n\t\t\t\t) {\n\t\t\t\t\treturn; // do nothing if we are not yet at `fromIndex`\n\t\t\t\t}\n\n\t\t\t\tif (typeof toTabIndex === \"number\" && toTabIndex < tabIndex) {\n\t\t\t\t\treturn; // do nothing if we are beyond `toIndex`\n\t\t\t\t}\n\n\t\t\t\tthis.doWithTab(tabIndex, editor, fn);\n\t\t\t});\n\t}\n\n\tprivate withTab(\n\t\teditor: EditorInput,\n\t\tfn: (\n\t\t\teditor: EditorInput,\n\t\t\ttabIndex: number,\n\t\t\ttabContainer: HTMLElement,\n\t\t\ttabLabelWidget: IResourceLabel,\n\t\t\ttabLabel: IEditorInputLabel,\n\t\t\ttabActionBar: ActionBar,\n\t\t) => void,\n\t): void {\n\t\tthis.doWithTab(this.tabsModel.indexOf(editor), editor, fn);\n\t}\n\n\tprivate doWithTab(\n\t\ttabIndex: number,\n\t\teditor: EditorInput,\n\t\tfn: (\n\t\t\teditor: EditorInput,\n\t\t\ttabIndex: number,\n\t\t\ttabContainer: HTMLElement,\n\t\t\ttabLabelWidget: IResourceLabel,\n\t\t\ttabLabel: IEditorInputLabel,\n\t\t\ttabActionBar: ActionBar,\n\t\t) => void,\n\t): void {\n\t\tconst tabsContainer = assertIsDefined(this.tabsContainer);\n\t\tconst tabContainer = tabsContainer.children[tabIndex] as HTMLElement;\n\t\tconst tabResourceLabel = this.tabResourceLabels.get(tabIndex);\n\t\tconst tabLabel = this.tabLabels[tabIndex];\n\t\tconst tabActionBar = this.tabActionBars[tabIndex];\n\t\tif (tabContainer && tabResourceLabel && tabLabel) {\n\t\t\tfn(\n\t\t\t\teditor,\n\t\t\t\ttabIndex,\n\t\t\t\ttabContainer,\n\t\t\t\ttabResourceLabel,\n\t\t\t\ttabLabel,\n\t\t\t\ttabActionBar,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate createTab(\n\t\ttabIndex: number,\n\t\ttabsContainer: HTMLElement,\n\t\ttabsScrollbar: ScrollableElement,\n\t): HTMLElement {\n\t\t// Tab Container\n\t\tconst tabContainer = document.createElement(\"div\");\n\t\ttabContainer.draggable = true;\n\t\ttabContainer.setAttribute(\"role\", \"tab\");\n\t\ttabContainer.classList.add(\"tab\");\n\n\t\t// Gesture Support\n\t\tthis._register(Gesture.addTarget(tabContainer));\n\n\t\t// Tab Border Top\n\t\tconst tabBorderTopContainer = document.createElement(\"div\");\n\t\ttabBorderTopContainer.classList.add(\"tab-border-top-container\");\n\t\ttabContainer.appendChild(tabBorderTopContainer);\n\n\t\t// Tab Editor Label\n\t\tconst editorLabel = this.tabResourceLabels.create(tabContainer, {\n\t\t\thoverDelegate: this.getHoverDelegate(),\n\t\t});\n\n\t\t// Tab Actions\n\t\tconst tabActionsContainer = document.createElement(\"div\");\n\t\ttabActionsContainer.classList.add(\"tab-actions\");\n\t\ttabContainer.appendChild(tabActionsContainer);\n\n\t\tconst that = this;\n\t\tconst tabActionRunner = new EditorCommandsContextActionRunner({\n\t\t\tgroupId: this.groupView.id,\n\t\t\tget editorIndex() {\n\t\t\t\treturn that.toEditorIndex(tabIndex);\n\t\t\t},\n\t\t});\n\n\t\tconst tabActionBar = new ActionBar(tabActionsContainer, {\n\t\t\tariaLabel: localize(\"ariaLabelTabActions\", \"Tab actions\"),\n\t\t\tactionRunner: tabActionRunner,\n\t\t});\n\t\tconst tabActionListener = tabActionBar.onWillRun((e) => {\n\t\t\tif (e.action.id === this.closeEditorAction.id) {\n\t\t\t\tthis.blockRevealActiveTabOnce();\n\t\t\t}\n\t\t});\n\n\t\tconst tabActionBarDisposable = combinedDisposable(\n\t\t\ttabActionBar,\n\t\t\ttabActionListener,\n\t\t\ttoDisposable(insert(this.tabActionBars, tabActionBar)),\n\t\t);\n\n\t\t// Tab Fade Hider\n\t\t// Hides the tab fade to the right when tab action left and sizing shrink/fixed, ::after, ::before are already used\n\t\tconst tabShadowHider = document.createElement(\"div\");\n\t\ttabShadowHider.classList.add(\"tab-fade-hider\");\n\t\ttabContainer.appendChild(tabShadowHider);\n\n\t\t// Tab Border Bottom\n\t\tconst tabBorderBottomContainer = document.createElement(\"div\");\n\t\ttabBorderBottomContainer.classList.add(\"tab-border-bottom-container\");\n\t\ttabContainer.appendChild(tabBorderBottomContainer);\n\n\t\t// Eventing\n\t\tconst eventsDisposable = this.registerTabListeners(\n\t\t\ttabContainer,\n\t\t\ttabIndex,\n\t\t\ttabsContainer,\n\t\t\ttabsScrollbar,\n\t\t);\n\n\t\tthis.tabDisposables.push(\n\t\t\tcombinedDisposable(\n\t\t\t\teventsDisposable,\n\t\t\t\ttabActionBarDisposable,\n\t\t\t\ttabActionRunner,\n\t\t\t\teditorLabel,\n\t\t\t),\n\t\t);\n\n\t\treturn tabContainer;\n\t}\n\n\tprivate toEditorIndex(tabIndex: number): number {\n\t\t// Given a `tabIndex` that is relative to the tabs model\n\t\t// returns the `editorIndex` relative to the entire group\n\n\t\tconst editor = assertIsDefined(\n\t\t\tthis.tabsModel.getEditorByIndex(tabIndex),\n\t\t);\n\n\t\treturn this.groupView.getIndexOfEditor(editor);\n\t}\n\n\tprivate lastSingleSelectSelectedEditor: EditorInput | undefined;\n\tprivate registerTabListeners(\n\t\ttab: HTMLElement,\n\t\ttabIndex: number,\n\t\ttabsContainer: HTMLElement,\n\t\ttabsScrollbar: ScrollableElement,\n\t): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst handleClickOrTouch = async (\n\t\t\te: MouseEvent | GestureEvent,\n\t\t\tpreserveFocus: boolean,\n\t\t): Promise<void> => {\n\t\t\ttab.blur(); // prevent flicker of focus outline on tab until editor got focus\n\n\t\t\tif (\n\t\t\t\tisMouseEvent(e) &&\n\t\t\t\t(e.button !== 0 /* middle/right mouse button */ ||\n\t\t\t\t\t(isMacintosh && e.ctrlKey) /* macOS context menu */)\n\t\t\t) {\n\t\t\t\tif (e.button === 1) {\n\t\t\t\t\te.preventDefault(); // required to prevent auto-scrolling (https://github.com/microsoft/vscode/issues/16690)\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.originatesFromTabActionBar(e)) {\n\t\t\t\treturn; // not when clicking on actions\n\t\t\t}\n\n\t\t\t// Open tabs editor\n\t\t\tconst editor = this.tabsModel.getEditorByIndex(tabIndex);\n\t\t\tif (editor) {\n\t\t\t\tif (e.shiftKey) {\n\t\t\t\t\tlet anchor: EditorInput;\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.lastSingleSelectSelectedEditor &&\n\t\t\t\t\t\tthis.tabsModel.isSelected(\n\t\t\t\t\t\t\tthis.lastSingleSelectSelectedEditor,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\t// The last selected editor is the anchor\n\t\t\t\t\t\tanchor = this.lastSingleSelectSelectedEditor;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// The active editor is the anchor\n\t\t\t\t\t\tconst activeEditor = assertIsDefined(\n\t\t\t\t\t\t\tthis.groupView.activeEditor,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.lastSingleSelectSelectedEditor = activeEditor;\n\t\t\t\t\t\tanchor = activeEditor;\n\t\t\t\t\t}\n\t\t\t\t\tawait this.selectEditorsBetween(editor, anchor);\n\t\t\t\t} else if (\n\t\t\t\t\t(e.ctrlKey && !isMacintosh) ||\n\t\t\t\t\t(e.metaKey && isMacintosh)\n\t\t\t\t) {\n\t\t\t\t\tif (this.tabsModel.isSelected(editor)) {\n\t\t\t\t\t\tawait this.unselectEditor(editor);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait this.selectEditor(editor);\n\t\t\t\t\t\tthis.lastSingleSelectSelectedEditor = editor;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Even if focus is preserved make sure to activate the group.\n\t\t\t\t\t// If a new active editor is selected, keep the current selection on key\n\t\t\t\t\t// down such that drag and drop can operate over the selection. The selection\n\t\t\t\t\t// is removed on key up in this case.\n\t\t\t\t\tconst inactiveSelection = this.tabsModel.isSelected(editor)\n\t\t\t\t\t\t? this.groupView.selectedEditors.filter(\n\t\t\t\t\t\t\t\t(e) => !e.matches(editor),\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: [];\n\t\t\t\t\tawait this.groupView.openEditor(\n\t\t\t\t\t\teditor,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpreserveFocus,\n\t\t\t\t\t\t\tactivation: EditorActivation.ACTIVATE,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ inactiveSelection, focusTabControl: true },\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst showContextMenu = (e: Event) => {\n\t\t\tEventHelper.stop(e);\n\n\t\t\tconst editor = this.tabsModel.getEditorByIndex(tabIndex);\n\t\t\tif (editor) {\n\t\t\t\tthis.onTabContextMenu(editor, e, tab);\n\t\t\t}\n\t\t};\n\n\t\t// Open on Click / Touch\n\t\tdisposables.add(\n\t\t\taddDisposableListener(tab, EventType.MOUSE_DOWN, (e) =>\n\t\t\t\thandleClickOrTouch(e, false),\n\t\t\t),\n\t\t);\n\t\tdisposables.add(\n\t\t\taddDisposableListener(tab, TouchEventType.Tap, (e: GestureEvent) =>\n\t\t\t\thandleClickOrTouch(e, true),\n\t\t\t),\n\t\t); // Preserve focus on touch #125470\n\n\t\t// Touch Scroll Support\n\t\tdisposables.add(\n\t\t\taddDisposableListener(\n\t\t\t\ttab,\n\t\t\t\tTouchEventType.Change,\n\t\t\t\t(e: GestureEvent) => {\n\t\t\t\t\ttabsScrollbar.setScrollPosition({\n\t\t\t\t\t\tscrollLeft:\n\t\t\t\t\t\t\ttabsScrollbar.getScrollPosition().scrollLeft -\n\t\t\t\t\t\t\te.translationX,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\t// Update selection & prevent flicker of focus outline on tab until editor got focus\n\t\tdisposables.add(\n\t\t\taddDisposableListener(tab, EventType.MOUSE_UP, async (e) => {\n\t\t\t\tEventHelper.stop(e);\n\n\t\t\t\ttab.blur();\n\n\t\t\t\tif (\n\t\t\t\t\tisMouseEvent(e) &&\n\t\t\t\t\t(e.button !== 0 /* middle/right mouse button */ ||\n\t\t\t\t\t\t(isMacintosh && e.ctrlKey) /* macOS context menu */)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.originatesFromTabActionBar(e)) {\n\t\t\t\t\treturn; // not when clicking on actions\n\t\t\t\t}\n\n\t\t\t\tconst isCtrlCmd =\n\t\t\t\t\t(e.ctrlKey && !isMacintosh) || (e.metaKey && isMacintosh);\n\t\t\t\tif (\n\t\t\t\t\t!isCtrlCmd &&\n\t\t\t\t\t!e.shiftKey &&\n\t\t\t\t\tthis.groupView.selectedEditors.length > 1\n\t\t\t\t) {\n\t\t\t\t\tawait this.unselectAllEditors();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// Close on mouse middle click\n\t\tdisposables.add(\n\t\t\taddDisposableListener(tab, EventType.AUXCLICK, (e) => {\n\t\t\t\tif (e.button === 1 /* Middle Button*/) {\n\t\t\t\t\tEventHelper.stop(\n\t\t\t\t\t\te,\n\t\t\t\t\t\ttrue /* for https://github.com/microsoft/vscode/issues/56715 */,\n\t\t\t\t\t);\n\n\t\t\t\t\tconst editor = this.tabsModel.getEditorByIndex(tabIndex);\n\t\t\t\t\tif (editor) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tpreventEditorClose(\n\t\t\t\t\t\t\t\tthis.tabsModel,\n\t\t\t\t\t\t\t\teditor,\n\t\t\t\t\t\t\t\tEditorCloseMethod.MOUSE,\n\t\t\t\t\t\t\t\tthis.groupsView.partOptions,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.blockRevealActiveTabOnce();\n\t\t\t\t\t\tthis.closeEditorAction.run({\n\t\t\t\t\t\t\tgroupId: this.groupView.id,\n\t\t\t\t\t\t\teditorIndex:\n\t\t\t\t\t\t\t\tthis.groupView.getIndexOfEditor(editor),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// Context menu on Shift+F10\n\t\tdisposables.add(\n\t\t\taddDisposableListener(tab, EventType.KEY_DOWN, (e) => {\n\t\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\t\tif (event.shiftKey && event.keyCode === KeyCode.F10) {\n\t\t\t\t\tshowContextMenu(e);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// Context menu on touch context menu gesture\n\t\tdisposables.add(\n\t\t\taddDisposableListener(\n\t\t\t\ttab,\n\t\t\t\tTouchEventType.Contextmenu,\n\t\t\t\t(e: GestureEvent) => {\n\t\t\t\t\tshowContextMenu(e);\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\t// Keyboard accessibility\n\t\tdisposables.add(\n\t\t\taddDisposableListener(tab, EventType.KEY_UP, (e) => {\n\t\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\t\tlet handled = false;\n\n\t\t\t\t// Run action on Enter/Space\n\t\t\t\tif (\n\t\t\t\t\tevent.equals(KeyCode.Enter) ||\n\t\t\t\t\tevent.equals(KeyCode.Space)\n\t\t\t\t) {\n\t\t\t\t\thandled = true;\n\t\t\t\t\tconst editor = this.tabsModel.getEditorByIndex(tabIndex);\n\t\t\t\t\tif (editor) {\n\t\t\t\t\t\tthis.groupView.openEditor(editor);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Navigate in editors\n\t\t\t\telse if (\n\t\t\t\t\t[\n\t\t\t\t\t\tKeyCode.LeftArrow,\n\t\t\t\t\t\tKeyCode.RightArrow,\n\t\t\t\t\t\tKeyCode.UpArrow,\n\t\t\t\t\t\tKeyCode.DownArrow,\n\t\t\t\t\t\tKeyCode.Home,\n\t\t\t\t\t\tKeyCode.End,\n\t\t\t\t\t].some((kb) => event.equals(kb))\n\t\t\t\t) {\n\t\t\t\t\tlet editorIndex = this.toEditorIndex(tabIndex);\n\t\t\t\t\tif (\n\t\t\t\t\t\tevent.equals(KeyCode.LeftArrow) ||\n\t\t\t\t\t\tevent.equals(KeyCode.UpArrow)\n\t\t\t\t\t) {\n\t\t\t\t\t\teditorIndex = editorIndex - 1;\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tevent.equals(KeyCode.RightArrow) ||\n\t\t\t\t\t\tevent.equals(KeyCode.DownArrow)\n\t\t\t\t\t) {\n\t\t\t\t\t\teditorIndex = editorIndex + 1;\n\t\t\t\t\t} else if (event.equals(KeyCode.Home)) {\n\t\t\t\t\t\teditorIndex = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\teditorIndex = this.groupView.count - 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst target = this.groupView.getEditorByIndex(editorIndex);\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\thandled = true;\n\t\t\t\t\t\tthis.groupView.openEditor(\n\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t{ preserveFocus: true },\n\t\t\t\t\t\t\t{ focusTabControl: true },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (handled) {\n\t\t\t\t\tEventHelper.stop(e, true);\n\t\t\t\t}\n\n\t\t\t\t// moving in the tabs container can have an impact on scrolling position, so we need to update the custom scrollbar\n\t\t\t\ttabsScrollbar.setScrollPosition({\n\t\t\t\t\tscrollLeft: tabsContainer.scrollLeft,\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\n\t\t// Double click: either pin or toggle maximized\n\t\tfor (const eventType of [TouchEventType.Tap, EventType.DBLCLICK]) {\n\t\t\tdisposables.add(\n\t\t\t\taddDisposableListener(\n\t\t\t\t\ttab,\n\t\t\t\t\teventType,\n\t\t\t\t\t(e: MouseEvent | GestureEvent) => {\n\t\t\t\t\t\tif (eventType === EventType.DBLCLICK) {\n\t\t\t\t\t\t\tEventHelper.stop(e);\n\t\t\t\t\t\t} else if ((<GestureEvent>e).tapCount !== 2) {\n\t\t\t\t\t\t\treturn; // ignore single taps\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst editor =\n\t\t\t\t\t\t\tthis.tabsModel.getEditorByIndex(tabIndex);\n\t\t\t\t\t\tif (editor && this.tabsModel.isPinned(editor)) {\n\t\t\t\t\t\t\tswitch (\n\t\t\t\t\t\t\t\tthis.groupsView.partOptions\n\t\t\t\t\t\t\t\t\t.doubleClickTabToToggleEditorGroupSizes\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tcase \"maximize\":\n\t\t\t\t\t\t\t\t\tthis.groupsView.toggleMaximizeGroup(\n\t\t\t\t\t\t\t\t\t\tthis.groupView,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"expand\":\n\t\t\t\t\t\t\t\t\tthis.groupsView.toggleExpandGroup(\n\t\t\t\t\t\t\t\t\t\tthis.groupView,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"off\":\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.groupView.pinEditor(editor);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\t// Context menu\n\t\tdisposables.add(\n\t\t\taddDisposableListener(\n\t\t\t\ttab,\n\t\t\t\tEventType.CONTEXT_MENU,\n\t\t\t\t(e) => {\n\t\t\t\t\tEventHelper.stop(e, true);\n\n\t\t\t\t\tconst editor = this.tabsModel.getEditorByIndex(tabIndex);\n\t\t\t\t\tif (editor) {\n\t\t\t\t\t\tthis.onTabContextMenu(editor, e, tab);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttrue /* use capture to fix https://github.com/microsoft/vscode/issues/19145 */,\n\t\t\t),\n\t\t);\n\n\t\t// Drag & Drop support\n\t\tlet lastDragEvent: DragEvent | undefined;\n\t\tlet isNewWindowOperation = false;\n\t\tdisposables.add(\n\t\t\tnew DragAndDropObserver(tab, {\n\t\t\t\tonDragStart: (e) => {\n\t\t\t\t\tconst editor = this.tabsModel.getEditorByIndex(tabIndex);\n\t\t\t\t\tif (!editor) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tisNewWindowOperation = this.isNewWindowOperation(e);\n\t\t\t\t\tconst selectedEditors = this.groupView.selectedEditors;\n\t\t\t\t\tthis.editorTransfer.setData(\n\t\t\t\t\t\tselectedEditors.map(\n\t\t\t\t\t\t\t(e) =>\n\t\t\t\t\t\t\t\tnew DraggedEditorIdentifier({\n\t\t\t\t\t\t\t\t\teditor: e,\n\t\t\t\t\t\t\t\t\tgroupId: this.groupView.id,\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tDraggedEditorIdentifier.prototype,\n\t\t\t\t\t);\n\n\t\t\t\t\tif (e.dataTransfer) {\n\t\t\t\t\t\te.dataTransfer.effectAllowed = \"copyMove\";\n\t\t\t\t\t\tif (selectedEditors.length > 1) {\n\t\t\t\t\t\t\tconst label = `${editor.getName()} + ${selectedEditors.length - 1}`;\n\t\t\t\t\t\t\tapplyDragImage(\n\t\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\t\tlabel,\n\t\t\t\t\t\t\t\t\"monaco-editor-group-drag-image\",\n\t\t\t\t\t\t\t\tthis.getColor(listActiveSelectionBackground),\n\t\t\t\t\t\t\t\tthis.getColor(listActiveSelectionForeground),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\te.dataTransfer.setDragImage(tab, 0, 0); // top left corner of dragged tab set to cursor position to make room for drop-border feedback\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Apply some datatransfer types to allow for dragging the element outside of the application\n\t\t\t\t\tthis.doFillResourceDataTransfers(\n\t\t\t\t\t\tselectedEditors,\n\t\t\t\t\t\te,\n\t\t\t\t\t\tisNewWindowOperation,\n\t\t\t\t\t);\n\n\t\t\t\t\tscheduleAtNextAnimationFrame(getWindow(this.parent), () =>\n\t\t\t\t\t\tthis.updateDropFeedback(tab, false, e, tabIndex),\n\t\t\t\t\t);\n\t\t\t\t},\n\n\t\t\t\tonDrag: (e) => {\n\t\t\t\t\tlastDragEvent = e;\n\t\t\t\t},\n\n\t\t\t\tonDragEnter: (e) => {\n\t\t\t\t\t// Return if transfer is unsupported\n\t\t\t\t\tif (!this.isSupportedDropTransfer(e)) {\n\t\t\t\t\t\tif (e.dataTransfer) {\n\t\t\t\t\t\t\te.dataTransfer.dropEffect = \"none\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Update the dropEffect to \"copy\" if there is no local data to be dragged because\n\t\t\t\t\t// in that case we can only copy the data into and not move it from its source\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.editorTransfer.hasData(\n\t\t\t\t\t\t\tDraggedEditorIdentifier.prototype,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (e.dataTransfer) {\n\t\t\t\t\t\t\te.dataTransfer.dropEffect = \"copy\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.updateDropFeedback(tab, true, e, tabIndex);\n\t\t\t\t},\n\n\t\t\t\tonDragOver: (e, dragDuration) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tdragDuration >=\n\t\t\t\t\t\tMultiEditorTabsControl.DRAG_OVER_OPEN_TAB_THRESHOLD\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst draggedOverTab =\n\t\t\t\t\t\t\tthis.tabsModel.getEditorByIndex(tabIndex);\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tdraggedOverTab &&\n\t\t\t\t\t\t\tthis.tabsModel.activeEditor !== draggedOverTab\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.groupView.openEditor(draggedOverTab, {\n\t\t\t\t\t\t\t\tpreserveFocus: true,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.updateDropFeedback(tab, true, e, tabIndex);\n\t\t\t\t},\n\n\t\t\t\tonDragEnd: async (e) => {\n\t\t\t\t\tthis.updateDropFeedback(tab, false, e, tabIndex);\n\t\t\t\t\tconst draggedEditors = this.editorTransfer.getData(\n\t\t\t\t\t\tDraggedEditorIdentifier.prototype,\n\t\t\t\t\t);\n\t\t\t\t\tthis.editorTransfer.clearData(\n\t\t\t\t\t\tDraggedEditorIdentifier.prototype,\n\t\t\t\t\t);\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t!isNewWindowOperation ||\n\t\t\t\t\t\tisWindowDraggedOver() ||\n\t\t\t\t\t\t!draggedEditors ||\n\t\t\t\t\t\tdraggedEditors.length === 0\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn; // drag to open in new window is disabled\n\t\t\t\t\t}\n\n\t\t\t\t\tconst auxiliaryEditorPart =\n\t\t\t\t\t\tawait this.maybeCreateAuxiliaryEditorPartAt(e, tab);\n\t\t\t\t\tif (!auxiliaryEditorPart) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst targetGroup = auxiliaryEditorPart.activeGroup;\n\t\t\t\t\tconst editors = draggedEditors.map((de) => ({\n\t\t\t\t\t\teditor: de.identifier.editor,\n\t\t\t\t\t}));\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.isMoveOperation(\n\t\t\t\t\t\t\tlastDragEvent ?? e,\n\t\t\t\t\t\t\ttargetGroup.id,\n\t\t\t\t\t\t\tdraggedEditors[0].identifier.editor,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.groupView.moveEditors(editors, targetGroup);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.groupView.copyEditors(editors, targetGroup);\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetGroup.focus();\n\t\t\t\t},\n\n\t\t\t\tonDrop: (e) => {\n\t\t\t\t\tthis.updateDropFeedback(tab, false, e, tabIndex);\n\n\t\t\t\t\t// compute the target index\n\t\t\t\t\tlet targetIndex = tabIndex;\n\t\t\t\t\tif (this.getTabDragOverLocation(e, tab) === \"right\") {\n\t\t\t\t\t\ttargetIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.onDrop(e, targetIndex, tabsContainer);\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\n\t\treturn disposables;\n\t}\n\n\tprivate isSupportedDropTransfer(e: DragEvent): boolean {\n\t\tif (\n\t\t\tthis.groupTransfer.hasData(DraggedEditorGroupIdentifier.prototype)\n\t\t) {\n\t\t\tconst data = this.groupTransfer.getData(\n\t\t\t\tDraggedEditorGroupIdentifier.prototype,\n\t\t\t);\n\t\t\tif (Array.isArray(data) && data.length > 0) {\n\t\t\t\tconst group = data[0];\n\t\t\t\tif (group.identifier === this.groupView.id) {\n\t\t\t\t\treturn false; // groups cannot be dropped on group it originates from\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this.editorTransfer.hasData(DraggedEditorIdentifier.prototype)) {\n\t\t\treturn true; // (local) editors can always be dropped\n\t\t}\n\n\t\tif (e.dataTransfer && e.dataTransfer.types.length > 0) {\n\t\t\treturn true; // optimistically allow external data (// see https://github.com/microsoft/vscode/issues/25789)\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate updateDropFeedback(\n\t\telement: HTMLElement,\n\t\tisDND: boolean,\n\t\te: DragEvent,\n\t\ttabIndex?: number,\n\t): void {\n\t\tconst isTab = typeof tabIndex === \"number\";\n\n\t\tlet dropTarget;\n\t\tif (isDND) {\n\t\t\tif (isTab) {\n\t\t\t\tdropTarget = this.computeDropTarget(e, tabIndex, element);\n\t\t\t} else {\n\t\t\t\tdropTarget = {\n\t\t\t\t\tleftElement: element.lastElementChild as HTMLElement,\n\t\t\t\t\trightElement: undefined,\n\t\t\t\t};\n\t\t\t}\n\t\t} else {\n\t\t\tdropTarget = undefined;\n\t\t}\n\n\t\tthis.updateDropTarget(dropTarget);\n\t}\n\n\tprivate dropTarget:\n\t\t| {\n\t\t\t\tleftElement: HTMLElement | undefined;\n\t\t\t\trightElement: HTMLElement | undefined;\n\t\t  }\n\t\t| undefined;\n\tprivate updateDropTarget(\n\t\tnewTarget:\n\t\t\t| {\n\t\t\t\t\tleftElement: HTMLElement | undefined;\n\t\t\t\t\trightElement: HTMLElement | undefined;\n\t\t\t  }\n\t\t\t| undefined,\n\t): void {\n\t\tconst oldTargets = this.dropTarget;\n\t\tif (\n\t\t\toldTargets === newTarget ||\n\t\t\t(oldTargets &&\n\t\t\t\tnewTarget &&\n\t\t\t\toldTargets.leftElement === newTarget.leftElement &&\n\t\t\t\toldTargets.rightElement === newTarget.rightElement)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst dropClassLeft = \"drop-target-left\";\n\t\tconst dropClassRight = \"drop-target-right\";\n\n\t\tif (oldTargets) {\n\t\t\toldTargets.leftElement?.classList.remove(dropClassLeft);\n\t\t\toldTargets.rightElement?.classList.remove(dropClassRight);\n\t\t}\n\n\t\tif (newTarget) {\n\t\t\tnewTarget.leftElement?.classList.add(dropClassLeft);\n\t\t\tnewTarget.rightElement?.classList.add(dropClassRight);\n\t\t}\n\n\t\tthis.dropTarget = newTarget;\n\t}\n\n\tprivate getTabDragOverLocation(\n\t\te: DragEvent,\n\t\ttab: HTMLElement,\n\t): \"left\" | \"right\" {\n\t\tconst rect = tab.getBoundingClientRect();\n\t\tconst offsetXRelativeToParent = e.clientX - rect.left;\n\n\t\treturn offsetXRelativeToParent <= rect.width / 2 ? \"left\" : \"right\";\n\t}\n\n\tprivate computeDropTarget(\n\t\te: DragEvent,\n\t\ttabIndex: number,\n\t\ttargetTab: HTMLElement,\n\t):\n\t\t| {\n\t\t\t\tleftElement: HTMLElement | undefined;\n\t\t\t\trightElement: HTMLElement | undefined;\n\t\t  }\n\t\t| undefined {\n\t\tconst isLeftSideOfTab =\n\t\t\tthis.getTabDragOverLocation(e, targetTab) === \"left\";\n\t\tconst isLastTab = tabIndex === this.tabsModel.count - 1;\n\t\tconst isFirstTab = tabIndex === 0;\n\n\t\t// Before first tab\n\t\tif (isLeftSideOfTab && isFirstTab) {\n\t\t\treturn { leftElement: undefined, rightElement: targetTab };\n\t\t}\n\n\t\t// After last tab\n\t\tif (!isLeftSideOfTab && isLastTab) {\n\t\t\treturn { leftElement: targetTab, rightElement: undefined };\n\t\t}\n\n\t\t// Between two tabs\n\t\tconst tabBefore = isLeftSideOfTab\n\t\t\t? targetTab.previousElementSibling\n\t\t\t: targetTab;\n\t\tconst tabAfter = isLeftSideOfTab\n\t\t\t? targetTab\n\t\t\t: targetTab.nextElementSibling;\n\n\t\treturn {\n\t\t\tleftElement: tabBefore as HTMLElement,\n\t\t\trightElement: tabAfter as HTMLElement,\n\t\t};\n\t}\n\n\tprivate async selectEditor(editor: EditorInput): Promise<void> {\n\t\tif (this.groupView.isActive(editor)) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.groupView.setSelection(\n\t\t\teditor,\n\t\t\tthis.groupView.selectedEditors,\n\t\t);\n\t}\n\n\tprivate async selectEditorsBetween(\n\t\ttarget: EditorInput,\n\t\tanchor: EditorInput,\n\t): Promise<void> {\n\t\tconst editorIndex = this.groupView.getIndexOfEditor(target);\n\t\tif (editorIndex === -1) {\n\t\t\tthrow new BugIndicatingError();\n\t\t}\n\n\t\tconst anchorEditorIndex = this.groupView.getIndexOfEditor(anchor);\n\t\tif (anchorEditorIndex === -1) {\n\t\t\tthrow new BugIndicatingError();\n\t\t}\n\n\t\tlet selection = this.groupView.selectedEditors;\n\n\t\t// Unselect editors on other side of anchor in relation to the target\n\t\tlet currentEditorIndex = anchorEditorIndex;\n\t\twhile (\n\t\t\tcurrentEditorIndex >= 0 &&\n\t\t\tcurrentEditorIndex <= this.groupView.count - 1\n\t\t) {\n\t\t\tcurrentEditorIndex =\n\t\t\t\tanchorEditorIndex < editorIndex\n\t\t\t\t\t? currentEditorIndex - 1\n\t\t\t\t\t: currentEditorIndex + 1;\n\n\t\t\tconst currentEditor =\n\t\t\t\tthis.groupView.getEditorByIndex(currentEditorIndex);\n\t\t\tif (!currentEditor) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (!this.groupView.isSelected(currentEditor)) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tselection = selection.filter(\n\t\t\t\t(editor) => !editor.matches(currentEditor),\n\t\t\t);\n\t\t}\n\n\t\t// Select editors between anchor and target\n\t\tconst fromEditorIndex =\n\t\t\tanchorEditorIndex < editorIndex ? anchorEditorIndex : editorIndex;\n\t\tconst toEditorIndex =\n\t\t\tanchorEditorIndex < editorIndex ? editorIndex : anchorEditorIndex;\n\n\t\tconst editorsToSelect = this.groupView\n\t\t\t.getEditors(EditorsOrder.SEQUENTIAL)\n\t\t\t.slice(fromEditorIndex, toEditorIndex + 1);\n\t\tfor (const editor of editorsToSelect) {\n\t\t\tif (!this.groupView.isSelected(editor)) {\n\t\t\t\tselection.push(editor);\n\t\t\t}\n\t\t}\n\n\t\tconst inactiveSelectedEditors = selection.filter(\n\t\t\t(editor) => !editor.matches(target),\n\t\t);\n\t\tawait this.groupView.setSelection(target, inactiveSelectedEditors);\n\t}\n\n\tprivate async unselectEditor(editor: EditorInput): Promise<void> {\n\t\tconst isUnselectingActiveEditor = this.groupView.isActive(editor);\n\n\t\t// If there is only one editor selected, do not unselect it\n\t\tif (\n\t\t\tisUnselectingActiveEditor &&\n\t\t\tthis.groupView.selectedEditors.length === 1\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet newActiveEditor = assertIsDefined(this.groupView.activeEditor);\n\n\t\t// If active editor is bing unselected then find the most recently opened selected editor\n\t\t// that is not the editor being unselected\n\t\tif (isUnselectingActiveEditor) {\n\t\t\tconst recentEditors = this.groupView.getEditors(\n\t\t\t\tEditorsOrder.MOST_RECENTLY_ACTIVE,\n\t\t\t);\n\t\t\tfor (let i = 1; i < recentEditors.length; i++) {\n\t\t\t\t// First one is the active editor\n\t\t\t\tconst recentEditor = recentEditors[i];\n\t\t\t\tif (this.groupView.isSelected(recentEditor)) {\n\t\t\t\t\tnewActiveEditor = recentEditor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst inactiveSelectedEditors = this.groupView.selectedEditors.filter(\n\t\t\t(e) => !e.matches(editor) && !e.matches(newActiveEditor),\n\t\t);\n\t\tawait this.groupView.setSelection(\n\t\t\tnewActiveEditor,\n\t\t\tinactiveSelectedEditors,\n\t\t);\n\t}\n\n\tprivate async unselectAllEditors(): Promise<void> {\n\t\tif (this.groupView.selectedEditors.length > 1) {\n\t\t\tconst activeEditor = assertIsDefined(this.groupView.activeEditor);\n\t\t\tawait this.groupView.setSelection(activeEditor, []);\n\t\t}\n\t}\n\n\tprivate computeTabLabels(): void {\n\t\tconst { labelFormat } = this.groupsView.partOptions;\n\t\tconst { verbosity, shortenDuplicates } =\n\t\t\tthis.getLabelConfigFlags(labelFormat);\n\n\t\t// Build labels and descriptions for each editor\n\t\tconst labels: IEditorInputLabel[] = [];\n\t\tlet activeEditorTabIndex = -1;\n\t\tthis.tabsModel\n\t\t\t.getEditors(EditorsOrder.SEQUENTIAL)\n\t\t\t.forEach((editor: EditorInput, tabIndex: number) => {\n\t\t\t\tlabels.push({\n\t\t\t\t\teditor,\n\t\t\t\t\tname: editor.getName(),\n\t\t\t\t\tdescription: editor.getDescription(verbosity),\n\t\t\t\t\tforceDescription: editor.hasCapability(\n\t\t\t\t\t\tEditorInputCapabilities.ForceDescription,\n\t\t\t\t\t),\n\t\t\t\t\ttitle: editor.getTitle(Verbosity.LONG),\n\t\t\t\t\tariaLabel: computeEditorAriaLabel(\n\t\t\t\t\t\teditor,\n\t\t\t\t\t\ttabIndex,\n\t\t\t\t\t\tthis.groupView,\n\t\t\t\t\t\tthis.editorPartsView.count,\n\t\t\t\t\t),\n\t\t\t\t});\n\n\t\t\t\tif (editor === this.tabsModel.activeEditor) {\n\t\t\t\t\tactiveEditorTabIndex = tabIndex;\n\t\t\t\t}\n\t\t\t});\n\n\t\t// Shorten labels as needed\n\t\tif (shortenDuplicates) {\n\t\t\tthis.shortenTabLabels(labels);\n\t\t}\n\n\t\t// Remember for fast lookup\n\t\tthis.tabLabels = labels;\n\t\tthis.activeTabLabel = labels[activeEditorTabIndex];\n\t}\n\n\tprivate shortenTabLabels(labels: IEditorInputLabel[]): void {\n\t\t// Gather duplicate titles, while filtering out invalid descriptions\n\t\tconst mapNameToDuplicates = new Map<string, IEditorInputLabel[]>();\n\t\tfor (const label of labels) {\n\t\t\tif (typeof label.description === \"string\") {\n\t\t\t\tgetOrSet(mapNameToDuplicates, label.name, []).push(label);\n\t\t\t} else {\n\t\t\t\tlabel.description = \"\";\n\t\t\t}\n\t\t}\n\n\t\t// Identify duplicate names and shorten descriptions\n\t\tfor (const [, duplicateLabels] of mapNameToDuplicates) {\n\t\t\t// Remove description if the title isn't duplicated\n\t\t\t// and we have no indication to enforce description\n\t\t\tif (\n\t\t\t\tduplicateLabels.length === 1 &&\n\t\t\t\t!duplicateLabels[0].forceDescription\n\t\t\t) {\n\t\t\t\tduplicateLabels[0].description = \"\";\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Identify duplicate descriptions\n\t\t\tconst mapDescriptionToDuplicates = new Map<\n\t\t\t\tstring,\n\t\t\t\tIEditorInputLabel[]\n\t\t\t>();\n\t\t\tfor (const duplicateLabel of duplicateLabels) {\n\t\t\t\tgetOrSet(\n\t\t\t\t\tmapDescriptionToDuplicates,\n\t\t\t\t\tduplicateLabel.description,\n\t\t\t\t\t[],\n\t\t\t\t).push(duplicateLabel);\n\t\t\t}\n\n\t\t\t// For editors with duplicate descriptions, check whether any long descriptions differ\n\t\t\tlet useLongDescriptions = false;\n\t\t\tfor (const [, duplicateLabels] of mapDescriptionToDuplicates) {\n\t\t\t\tif (!useLongDescriptions && duplicateLabels.length > 1) {\n\t\t\t\t\tconst [first, ...rest] = duplicateLabels.map(({ editor }) =>\n\t\t\t\t\t\teditor.getDescription(Verbosity.LONG),\n\t\t\t\t\t);\n\t\t\t\t\tuseLongDescriptions = rest.some(\n\t\t\t\t\t\t(description) => description !== first,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If so, replace all descriptions with long descriptions\n\t\t\tif (useLongDescriptions) {\n\t\t\t\tmapDescriptionToDuplicates.clear();\n\t\t\t\tfor (const duplicateLabel of duplicateLabels) {\n\t\t\t\t\tduplicateLabel.description =\n\t\t\t\t\t\tduplicateLabel.editor.getDescription(Verbosity.LONG);\n\t\t\t\t\tgetOrSet(\n\t\t\t\t\t\tmapDescriptionToDuplicates,\n\t\t\t\t\t\tduplicateLabel.description,\n\t\t\t\t\t\t[],\n\t\t\t\t\t).push(duplicateLabel);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Obtain final set of descriptions\n\t\t\tconst descriptions: string[] = [];\n\t\t\tfor (const [description] of mapDescriptionToDuplicates) {\n\t\t\t\tdescriptions.push(description);\n\t\t\t}\n\n\t\t\t// Remove description if all descriptions are identical unless forced\n\t\t\tif (descriptions.length === 1) {\n\t\t\t\tfor (const label of mapDescriptionToDuplicates.get(\n\t\t\t\t\tdescriptions[0],\n\t\t\t\t) || []) {\n\t\t\t\t\tif (!label.forceDescription) {\n\t\t\t\t\t\tlabel.description = \"\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Shorten descriptions\n\t\t\tconst shortenedDescriptions = shorten(descriptions, this.path.sep);\n\t\t\tdescriptions.forEach((description, tabIndex) => {\n\t\t\t\tfor (const label of mapDescriptionToDuplicates.get(\n\t\t\t\t\tdescription,\n\t\t\t\t) || []) {\n\t\t\t\t\tlabel.description = shortenedDescriptions[tabIndex];\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate getLabelConfigFlags(value: string | undefined) {\n\t\tswitch (value) {\n\t\t\tcase \"short\":\n\t\t\t\treturn { verbosity: Verbosity.SHORT, shortenDuplicates: false };\n\t\t\tcase \"medium\":\n\t\t\t\treturn {\n\t\t\t\t\tverbosity: Verbosity.MEDIUM,\n\t\t\t\t\tshortenDuplicates: false,\n\t\t\t\t};\n\t\t\tcase \"long\":\n\t\t\t\treturn { verbosity: Verbosity.LONG, shortenDuplicates: false };\n\t\t\tdefault:\n\t\t\t\treturn { verbosity: Verbosity.MEDIUM, shortenDuplicates: true };\n\t\t}\n\t}\n\n\tprivate redraw(options?: IMultiEditorTabsControlLayoutOptions): void {\n\t\t// Border below tabs if any with explicit high contrast support\n\t\tif (this.tabsAndActionsContainer) {\n\t\t\tlet tabsContainerBorderColor = this.getColor(\n\t\t\t\tEDITOR_GROUP_HEADER_TABS_BORDER,\n\t\t\t);\n\t\t\tif (!tabsContainerBorderColor && isHighContrast(this.theme.type)) {\n\t\t\t\ttabsContainerBorderColor =\n\t\t\t\t\tthis.getColor(TAB_BORDER) || this.getColor(contrastBorder);\n\t\t\t}\n\n\t\t\tif (tabsContainerBorderColor) {\n\t\t\t\tthis.tabsAndActionsContainer.classList.add(\n\t\t\t\t\t\"tabs-border-bottom\",\n\t\t\t\t);\n\t\t\t\tthis.tabsAndActionsContainer.style.setProperty(\n\t\t\t\t\t\"--tabs-border-bottom-color\",\n\t\t\t\t\ttabsContainerBorderColor.toString(),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.tabsAndActionsContainer.classList.remove(\n\t\t\t\t\t\"tabs-border-bottom\",\n\t\t\t\t);\n\t\t\t\tthis.tabsAndActionsContainer.style.removeProperty(\n\t\t\t\t\t\"--tabs-border-bottom-color\",\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// For each tab\n\t\tthis.forEachTab(\n\t\t\t(\n\t\t\t\teditor,\n\t\t\t\ttabIndex,\n\t\t\t\ttabContainer,\n\t\t\t\ttabLabelWidget,\n\t\t\t\ttabLabel,\n\t\t\t\ttabActionBar,\n\t\t\t) => {\n\t\t\t\tthis.redrawTab(\n\t\t\t\t\teditor,\n\t\t\t\t\ttabIndex,\n\t\t\t\t\ttabContainer,\n\t\t\t\t\ttabLabelWidget,\n\t\t\t\t\ttabLabel,\n\t\t\t\t\ttabActionBar,\n\t\t\t\t);\n\t\t\t},\n\t\t);\n\n\t\t// Update Editor Actions Toolbar\n\t\tthis.updateEditorActionsToolbar();\n\n\t\t// Ensure the active tab is always revealed\n\t\tthis.layout(this.dimensions, options);\n\t}\n\n\tprivate redrawTab(\n\t\teditor: EditorInput,\n\t\ttabIndex: number,\n\t\ttabContainer: HTMLElement,\n\t\ttabLabelWidget: IResourceLabel,\n\t\ttabLabel: IEditorInputLabel,\n\t\ttabActionBar: ActionBar,\n\t): void {\n\t\tconst isTabSticky = this.tabsModel.isSticky(tabIndex);\n\t\tconst options = this.groupsView.partOptions;\n\n\t\t// Label\n\t\tthis.redrawTabLabel(\n\t\t\teditor,\n\t\t\ttabIndex,\n\t\t\ttabContainer,\n\t\t\ttabLabelWidget,\n\t\t\ttabLabel,\n\t\t);\n\n\t\t// Action\n\t\tconst hasUnpinAction = isTabSticky && options.tabActionUnpinVisibility;\n\t\tconst hasCloseAction =\n\t\t\t!hasUnpinAction && options.tabActionCloseVisibility;\n\t\tconst hasAction = hasUnpinAction || hasCloseAction;\n\n\t\tlet tabAction;\n\t\tif (hasAction) {\n\t\t\ttabAction = hasUnpinAction\n\t\t\t\t? this.unpinEditorAction\n\t\t\t\t: this.closeEditorAction;\n\t\t} else {\n\t\t\t// Even if the action is not visible, add it as it contains the dirty indicator\n\t\t\ttabAction = isTabSticky\n\t\t\t\t? this.unpinEditorAction\n\t\t\t\t: this.closeEditorAction;\n\t\t}\n\n\t\tif (!tabActionBar.hasAction(tabAction)) {\n\t\t\tif (!tabActionBar.isEmpty()) {\n\t\t\t\ttabActionBar.clear();\n\t\t\t}\n\n\t\t\ttabActionBar.push(tabAction, {\n\t\t\t\ticon: true,\n\t\t\t\tlabel: false,\n\t\t\t\tkeybinding: this.getKeybindingLabel(tabAction),\n\t\t\t});\n\t\t}\n\n\t\ttabContainer.classList.toggle(\n\t\t\t`pinned-action-off`,\n\t\t\tisTabSticky && !hasUnpinAction,\n\t\t);\n\t\ttabContainer.classList.toggle(\n\t\t\t`close-action-off`,\n\t\t\t!hasUnpinAction && !hasCloseAction,\n\t\t);\n\n\t\tfor (const option of [\"left\", \"right\"]) {\n\t\t\ttabContainer.classList.toggle(\n\t\t\t\t`tab-actions-${option}`,\n\t\t\t\thasAction && options.tabActionLocation === option,\n\t\t\t);\n\t\t}\n\n\t\tconst tabSizing =\n\t\t\tisTabSticky && options.pinnedTabSizing === \"shrink\"\n\t\t\t\t? \"shrink\" /* treat sticky shrink tabs as tabSizing: 'shrink' */\n\t\t\t\t: options.tabSizing;\n\t\tfor (const option of [\"fit\", \"shrink\", \"fixed\"]) {\n\t\t\ttabContainer.classList.toggle(\n\t\t\t\t`sizing-${option}`,\n\t\t\t\ttabSizing === option,\n\t\t\t);\n\t\t}\n\n\t\ttabContainer.classList.toggle(\n\t\t\t\"has-icon\",\n\t\t\toptions.showIcons && options.hasIcons,\n\t\t);\n\n\t\ttabContainer.classList.toggle(\"sticky\", isTabSticky);\n\t\tfor (const option of [\"normal\", \"compact\", \"shrink\"]) {\n\t\t\ttabContainer.classList.toggle(\n\t\t\t\t`sticky-${option}`,\n\t\t\t\tisTabSticky && options.pinnedTabSizing === option,\n\t\t\t);\n\t\t}\n\n\t\t// If not wrapping tabs, sticky compact/shrink tabs need a position to remain at their location\n\t\t// when scrolling to stay in view (requirement for position: sticky)\n\t\tif (\n\t\t\t!options.wrapTabs &&\n\t\t\tisTabSticky &&\n\t\t\toptions.pinnedTabSizing !== \"normal\"\n\t\t) {\n\t\t\tlet stickyTabWidth = 0;\n\t\t\tswitch (options.pinnedTabSizing) {\n\t\t\t\tcase \"compact\":\n\t\t\t\t\tstickyTabWidth = MultiEditorTabsControl.TAB_WIDTH.compact;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"shrink\":\n\t\t\t\t\tstickyTabWidth = MultiEditorTabsControl.TAB_WIDTH.shrink;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ttabContainer.style.left = `${tabIndex * stickyTabWidth}px`;\n\t\t} else {\n\t\t\ttabContainer.style.left = \"auto\";\n\t\t}\n\n\t\t// Borders / outline\n\t\tthis.redrawTabBorders(tabIndex, tabContainer);\n\n\t\t// Selection / active / dirty state\n\t\tthis.redrawTabSelectedActiveAndDirty(\n\t\t\tthis.groupsView.activeGroup === this.groupView,\n\t\t\teditor,\n\t\t\ttabContainer,\n\t\t\ttabActionBar,\n\t\t);\n\t}\n\n\tprivate redrawTabLabel(\n\t\teditor: EditorInput,\n\t\ttabIndex: number,\n\t\ttabContainer: HTMLElement,\n\t\ttabLabelWidget: IResourceLabel,\n\t\ttabLabel: IEditorInputLabel,\n\t): void {\n\t\tconst options = this.groupsView.partOptions;\n\n\t\t// Unless tabs are sticky compact, show the full label and description\n\t\t// Sticky compact tabs will only show an icon if icons are enabled\n\t\t// or their first character of the name otherwise\n\t\tlet name: string | undefined;\n\t\tlet forceLabel = false;\n\t\tlet fileDecorationBadges = Boolean(options.decorations?.badges);\n\t\tconst fileDecorationColors = Boolean(options.decorations?.colors);\n\t\tlet description: string;\n\t\tif (\n\t\t\toptions.pinnedTabSizing === \"compact\" &&\n\t\t\tthis.tabsModel.isSticky(tabIndex)\n\t\t) {\n\t\t\tconst isShowingIcons = options.showIcons && options.hasIcons;\n\t\t\tname = isShowingIcons ? \"\" : tabLabel.name?.charAt(0).toUpperCase();\n\t\t\tdescription = \"\";\n\t\t\tforceLabel = true;\n\t\t\tfileDecorationBadges = false; // not enough space when sticky tabs are compact\n\t\t} else {\n\t\t\tname = tabLabel.name;\n\t\t\tdescription = tabLabel.description || \"\";\n\t\t}\n\n\t\tif (tabLabel.ariaLabel) {\n\t\t\ttabContainer.setAttribute(\"aria-label\", tabLabel.ariaLabel);\n\t\t\t// Set aria-description to empty string so that screen readers would not read the title as well\n\t\t\t// More details https://github.com/microsoft/vscode/issues/95378\n\t\t\ttabContainer.setAttribute(\"aria-description\", \"\");\n\t\t}\n\n\t\t// Label\n\t\ttabLabelWidget.setResource(\n\t\t\t{\n\t\t\t\tname,\n\t\t\t\tdescription,\n\t\t\t\tresource: EditorResourceAccessor.getOriginalUri(editor, {\n\t\t\t\t\tsupportSideBySide: SideBySideEditor.BOTH,\n\t\t\t\t}),\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: this.getHoverTitle(editor),\n\t\t\t\textraClasses: coalesce(\n\t\t\t\t\t[\n\t\t\t\t\t\t\"tab-label\",\n\t\t\t\t\t\tfileDecorationBadges\n\t\t\t\t\t\t\t? \"tab-label-has-badge\"\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t].concat(editor.getLabelExtraClasses()),\n\t\t\t\t),\n\t\t\t\titalic: !this.tabsModel.isPinned(editor),\n\t\t\t\tforceLabel,\n\t\t\t\tfileDecorations: {\n\t\t\t\t\tcolors: fileDecorationColors,\n\t\t\t\t\tbadges: fileDecorationBadges,\n\t\t\t\t},\n\t\t\t\ticon: editor.getIcon(),\n\t\t\t\thideIcon: options.showIcons === false,\n\t\t\t},\n\t\t);\n\n\t\t// Tests helper\n\t\tconst resource = EditorResourceAccessor.getOriginalUri(editor, {\n\t\t\tsupportSideBySide: SideBySideEditor.PRIMARY,\n\t\t});\n\t\tif (resource) {\n\t\t\ttabContainer.setAttribute(\n\t\t\t\t\"data-resource-name\",\n\t\t\t\tbasenameOrAuthority(resource),\n\t\t\t);\n\t\t} else {\n\t\t\ttabContainer.removeAttribute(\"data-resource-name\");\n\t\t}\n\t}\n\n\tprivate redrawTabSelectedActiveAndDirty(\n\t\tisGroupActive: boolean,\n\t\teditor: EditorInput,\n\t\ttabContainer: HTMLElement,\n\t\ttabActionBar: ActionBar,\n\t): void {\n\t\tconst isTabActive = this.tabsModel.isActive(editor);\n\t\tconst hasModifiedBorderTop = this.doRedrawTabDirty(\n\t\t\tisGroupActive,\n\t\t\tisTabActive,\n\t\t\teditor,\n\t\t\ttabContainer,\n\t\t);\n\n\t\tthis.doRedrawTabActive(\n\t\t\tisGroupActive,\n\t\t\t!hasModifiedBorderTop,\n\t\t\teditor,\n\t\t\ttabContainer,\n\t\t\ttabActionBar,\n\t\t);\n\t}\n\n\tprivate doRedrawTabActive(\n\t\tisGroupActive: boolean,\n\t\tallowBorderTop: boolean,\n\t\teditor: EditorInput,\n\t\ttabContainer: HTMLElement,\n\t\ttabActionBar: ActionBar,\n\t): void {\n\t\tconst isActive = this.tabsModel.isActive(editor);\n\t\tconst isSelected = this.tabsModel.isSelected(editor);\n\n\t\ttabContainer.classList.toggle(\"active\", isActive);\n\t\ttabContainer.classList.toggle(\"selected\", isSelected);\n\t\ttabContainer.setAttribute(\"aria-selected\", isActive ? \"true\" : \"false\");\n\t\ttabContainer.tabIndex = isActive ? 0 : -1; // Only active tab can be focused into\n\t\ttabActionBar.setFocusable(isActive);\n\n\t\t// Set border BOTTOM if theme defined color\n\t\tif (isActive) {\n\t\t\tconst activeTabBorderColorBottom = this.getColor(\n\t\t\t\tisGroupActive ? TAB_ACTIVE_BORDER : TAB_UNFOCUSED_ACTIVE_BORDER,\n\t\t\t);\n\t\t\ttabContainer.classList.toggle(\n\t\t\t\t\"tab-border-bottom\",\n\t\t\t\t!!activeTabBorderColorBottom,\n\t\t\t);\n\t\t\ttabContainer.style.setProperty(\n\t\t\t\t\"--tab-border-bottom-color\",\n\t\t\t\tactiveTabBorderColorBottom ?? \"\",\n\t\t\t);\n\t\t}\n\n\t\t// Set border TOP if theme defined color\n\t\tlet tabBorderColorTop: string | null = null;\n\t\tif (allowBorderTop) {\n\t\t\tif (isActive) {\n\t\t\t\ttabBorderColorTop = this.getColor(\n\t\t\t\t\tisGroupActive\n\t\t\t\t\t\t? TAB_ACTIVE_BORDER_TOP\n\t\t\t\t\t\t: TAB_UNFOCUSED_ACTIVE_BORDER_TOP,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (tabBorderColorTop === null && isSelected) {\n\t\t\t\ttabBorderColorTop = this.getColor(TAB_SELECTED_BORDER_TOP);\n\t\t\t}\n\t\t}\n\n\t\ttabContainer.classList.toggle(\"tab-border-top\", !!tabBorderColorTop);\n\t\ttabContainer.style.setProperty(\n\t\t\t\"--tab-border-top-color\",\n\t\t\ttabBorderColorTop ?? \"\",\n\t\t);\n\t}\n\n\tprivate doRedrawTabDirty(\n\t\tisGroupActive: boolean,\n\t\tisTabActive: boolean,\n\t\teditor: EditorInput,\n\t\ttabContainer: HTMLElement,\n\t): boolean {\n\t\tlet hasModifiedBorderColor = false;\n\n\t\t// Tab: dirty (unless saving)\n\t\tif (editor.isDirty() && !editor.isSaving()) {\n\t\t\ttabContainer.classList.add(\"dirty\");\n\n\t\t\t// Highlight modified tabs with a border if configured\n\t\t\tif (this.groupsView.partOptions.highlightModifiedTabs) {\n\t\t\t\tlet modifiedBorderColor: string | null;\n\t\t\t\tif (isGroupActive && isTabActive) {\n\t\t\t\t\tmodifiedBorderColor = this.getColor(\n\t\t\t\t\t\tTAB_ACTIVE_MODIFIED_BORDER,\n\t\t\t\t\t);\n\t\t\t\t} else if (isGroupActive && !isTabActive) {\n\t\t\t\t\tmodifiedBorderColor = this.getColor(\n\t\t\t\t\t\tTAB_INACTIVE_MODIFIED_BORDER,\n\t\t\t\t\t);\n\t\t\t\t} else if (!isGroupActive && isTabActive) {\n\t\t\t\t\tmodifiedBorderColor = this.getColor(\n\t\t\t\t\t\tTAB_UNFOCUSED_ACTIVE_MODIFIED_BORDER,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tmodifiedBorderColor = this.getColor(\n\t\t\t\t\t\tTAB_UNFOCUSED_INACTIVE_MODIFIED_BORDER,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (modifiedBorderColor) {\n\t\t\t\t\thasModifiedBorderColor = true;\n\n\t\t\t\t\ttabContainer.classList.add(\"dirty-border-top\");\n\t\t\t\t\ttabContainer.style.setProperty(\n\t\t\t\t\t\t\"--tab-dirty-border-top-color\",\n\t\t\t\t\t\tmodifiedBorderColor,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttabContainer.classList.remove(\"dirty-border-top\");\n\t\t\t\ttabContainer.style.removeProperty(\n\t\t\t\t\t\"--tab-dirty-border-top-color\",\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// Tab: not dirty\n\t\telse {\n\t\t\ttabContainer.classList.remove(\"dirty\", \"dirty-border-top\");\n\t\t\ttabContainer.style.removeProperty(\"--tab-dirty-border-top-color\");\n\t\t}\n\n\t\treturn hasModifiedBorderColor;\n\t}\n\n\tprivate redrawTabBorders(\n\t\ttabIndex: number,\n\t\ttabContainer: HTMLElement,\n\t): void {\n\t\tconst isTabSticky = this.tabsModel.isSticky(tabIndex);\n\t\tconst isTabLastSticky =\n\t\t\tisTabSticky && this.tabsModel.stickyCount === tabIndex + 1;\n\t\tconst showLastStickyTabBorderColor =\n\t\t\tthis.tabsModel.stickyCount !== this.tabsModel.count;\n\n\t\t// Borders / Outline\n\t\tconst borderRightColor =\n\t\t\t(isTabLastSticky && showLastStickyTabBorderColor\n\t\t\t\t? this.getColor(TAB_LAST_PINNED_BORDER)\n\t\t\t\t: undefined) ||\n\t\t\tthis.getColor(TAB_BORDER) ||\n\t\t\tthis.getColor(contrastBorder);\n\t\ttabContainer.style.borderRight = borderRightColor\n\t\t\t? `1px solid ${borderRightColor}`\n\t\t\t: \"\";\n\t\ttabContainer.style.outlineColor =\n\t\t\tthis.getColor(activeContrastBorder) || \"\";\n\t}\n\n\tprotected override prepareEditorActions(\n\t\teditorActions: IToolbarActions,\n\t): IToolbarActions {\n\t\tconst isGroupActive = this.groupsView.activeGroup === this.groupView;\n\n\t\t// Active: allow all actions\n\t\tif (isGroupActive) {\n\t\t\treturn editorActions;\n\t\t}\n\n\t\t// Inactive: only show \"Unlock\" and secondary actions\n\t\telse {\n\t\t\treturn {\n\t\t\t\tprimary: this.groupsView.partOptions.alwaysShowEditorActions\n\t\t\t\t\t? editorActions.primary\n\t\t\t\t\t: editorActions.primary.filter(\n\t\t\t\t\t\t\t(action) => action.id === UNLOCK_GROUP_COMMAND_ID,\n\t\t\t\t\t\t),\n\t\t\t\tsecondary: editorActions.secondary,\n\t\t\t};\n\t\t}\n\t}\n\n\tgetHeight(): number {\n\t\t// Return quickly if our used dimensions are known\n\t\tif (this.dimensions.used) {\n\t\t\treturn this.dimensions.used.height;\n\t\t}\n\n\t\t// Otherwise compute via browser APIs\n\t\telse {\n\t\t\treturn this.computeHeight();\n\t\t}\n\t}\n\n\tprivate computeHeight(): number {\n\t\tlet height: number;\n\n\t\tif (!this.visible) {\n\t\t\theight = 0;\n\t\t} else if (\n\t\t\tthis.groupsView.partOptions.wrapTabs &&\n\t\t\tthis.tabsAndActionsContainer?.classList.contains(\"wrapping\")\n\t\t) {\n\t\t\t// Wrap: we need to ask `offsetHeight` to get\n\t\t\t// the real height of the title area with wrapping.\n\t\t\theight = this.tabsAndActionsContainer.offsetHeight;\n\t\t} else {\n\t\t\theight = this.tabHeight;\n\t\t}\n\n\t\treturn height;\n\t}\n\n\tlayout(\n\t\tdimensions: IEditorTitleControlDimensions,\n\t\toptions?: IMultiEditorTabsControlLayoutOptions,\n\t): Dimension {\n\t\t// Remember dimensions that we get\n\t\tObject.assign(this.dimensions, dimensions);\n\n\t\tif (this.visible) {\n\t\t\tif (!this.layoutScheduler.value) {\n\t\t\t\t// The layout of tabs can be an expensive operation because we access DOM properties\n\t\t\t\t// that can result in the browser doing a full page layout to validate them. To buffer\n\t\t\t\t// this a little bit we try at least to schedule this work on the next animation frame\n\t\t\t\t// when we have restored or when idle otherwise.\n\n\t\t\t\tconst disposable = scheduleAtNextAnimationFrame(\n\t\t\t\t\tgetWindow(this.parent),\n\t\t\t\t\t() => {\n\t\t\t\t\t\tthis.doLayout(\n\t\t\t\t\t\t\tthis.dimensions,\n\t\t\t\t\t\t\tthis.layoutScheduler.value\n\t\t\t\t\t\t\t\t?.options /* ensure to pick up latest options */,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tthis.layoutScheduler.clear();\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t\tthis.layoutScheduler.value = {\n\t\t\t\t\toptions,\n\t\t\t\t\tdispose: () => disposable.dispose(),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Make sure to keep options updated\n\t\t\tif (options?.forceRevealActiveTab) {\n\t\t\t\tthis.layoutScheduler.value.options = {\n\t\t\t\t\t...this.layoutScheduler.value.options,\n\t\t\t\t\tforceRevealActiveTab: true,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// First time layout: compute the dimensions and store it\n\t\tif (!this.dimensions.used) {\n\t\t\tthis.dimensions.used = new Dimension(\n\t\t\t\tdimensions.container.width,\n\t\t\t\tthis.computeHeight(),\n\t\t\t);\n\t\t}\n\n\t\treturn this.dimensions.used;\n\t}\n\n\tprivate doLayout(\n\t\tdimensions: IEditorTitleControlDimensions,\n\t\toptions?: IMultiEditorTabsControlLayoutOptions,\n\t): void {\n\t\t// Layout tabs\n\t\tif (\n\t\t\tdimensions.container !== Dimension.None &&\n\t\t\tdimensions.available !== Dimension.None\n\t\t) {\n\t\t\tthis.doLayoutTabs(dimensions, options);\n\t\t}\n\n\t\t// Remember the dimensions used in the control so that we can\n\t\t// return it fast from the `layout` call without having to\n\t\t// compute it over and over again\n\t\tconst oldDimension = this.dimensions.used;\n\t\tconst newDimension = (this.dimensions.used = new Dimension(\n\t\t\tdimensions.container.width,\n\t\t\tthis.computeHeight(),\n\t\t));\n\n\t\t// In case the height of the title control changed from before\n\t\t// (currently only possible if wrapping changed on/off), we need\n\t\t// to signal this to the outside via a `relayout` call so that\n\t\t// e.g. the editor control can be adjusted accordingly.\n\t\tif (oldDimension && oldDimension.height !== newDimension.height) {\n\t\t\tthis.groupView.relayout();\n\t\t}\n\t}\n\n\tprivate doLayoutTabs(\n\t\tdimensions: IEditorTitleControlDimensions,\n\t\toptions?: IMultiEditorTabsControlLayoutOptions,\n\t): void {\n\t\t// Always first layout tabs with wrapping support even if wrapping\n\t\t// is disabled. The result indicates if tabs wrap and if not, we\n\t\t// need to proceed with the layout without wrapping because even\n\t\t// if wrapping is enabled in settings, there are cases where\n\t\t// wrapping is disabled (e.g. due to space constraints)\n\t\tconst tabsWrapMultiLine = this.doLayoutTabsWrapping(dimensions);\n\t\tif (!tabsWrapMultiLine) {\n\t\t\tthis.doLayoutTabsNonWrapping(options);\n\t\t}\n\t}\n\n\tprivate doLayoutTabsWrapping(\n\t\tdimensions: IEditorTitleControlDimensions,\n\t): boolean {\n\t\tconst [\n\t\t\ttabsAndActionsContainer,\n\t\t\ttabsContainer,\n\t\t\teditorToolbarContainer,\n\t\t\ttabsScrollbar,\n\t\t] = assertAllDefined(\n\t\t\tthis.tabsAndActionsContainer,\n\t\t\tthis.tabsContainer,\n\t\t\tthis.editorActionsToolbarContainer,\n\t\t\tthis.tabsScrollbar,\n\t\t);\n\n\t\t// Handle wrapping tabs according to setting:\n\t\t// - enabled: only add class if tabs wrap and don't exceed available dimensions\n\t\t// - disabled: remove class and margin-right variable\n\n\t\tconst didTabsWrapMultiLine =\n\t\t\ttabsAndActionsContainer.classList.contains(\"wrapping\");\n\t\tlet tabsWrapMultiLine = didTabsWrapMultiLine;\n\n\t\tfunction updateTabsWrapping(enabled: boolean): void {\n\t\t\ttabsWrapMultiLine = enabled;\n\n\t\t\t// Toggle the `wrapped` class to enable wrapping\n\t\t\ttabsAndActionsContainer.classList.toggle(\n\t\t\t\t\"wrapping\",\n\t\t\t\ttabsWrapMultiLine,\n\t\t\t);\n\n\t\t\t// Update `last-tab-margin-right` CSS variable to account for the absolute\n\t\t\t// positioned editor actions container when tabs wrap. The margin needs to\n\t\t\t// be the width of the editor actions container to avoid screen cheese.\n\t\t\ttabsContainer.style.setProperty(\n\t\t\t\t\"--last-tab-margin-right\",\n\t\t\t\ttabsWrapMultiLine\n\t\t\t\t\t? `${editorToolbarContainer.offsetWidth}px`\n\t\t\t\t\t: \"0\",\n\t\t\t);\n\n\t\t\t// Remove old css classes that are not needed anymore\n\t\t\tfor (const tab of tabsContainer.children) {\n\t\t\t\ttab.classList.remove(\"last-in-row\");\n\t\t\t}\n\t\t}\n\n\t\t// Setting enabled: selectively enable wrapping if possible\n\t\tif (this.groupsView.partOptions.wrapTabs) {\n\t\t\tconst visibleTabsWidth = tabsContainer.offsetWidth;\n\t\t\tconst allTabsWidth = tabsContainer.scrollWidth;\n\t\t\tconst lastTabFitsWrapped = () => {\n\t\t\t\tconst lastTab = this.getLastTab();\n\t\t\t\tif (!lastTab) {\n\t\t\t\t\treturn true; // no tab always fits\n\t\t\t\t}\n\n\t\t\t\tconst lastTabOverlapWithToolbarWidth =\n\t\t\t\t\tlastTab.offsetWidth +\n\t\t\t\t\teditorToolbarContainer.offsetWidth -\n\t\t\t\t\tdimensions.available.width;\n\t\t\t\tif (lastTabOverlapWithToolbarWidth > 1) {\n\t\t\t\t\t// Allow for slight rounding errors related to zooming here\n\t\t\t\t\t// https://github.com/microsoft/vscode/issues/116385\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t};\n\n\t\t\t// If tabs wrap or should start to wrap (when width exceeds visible width)\n\t\t\t// we must trigger `updateWrapping` to set the `last-tab-margin-right`\n\t\t\t// accordingly based on the number of actions. The margin is important to\n\t\t\t// properly position the last tab apart from the actions\n\t\t\t//\n\t\t\t// We already check here if the last tab would fit when wrapped given the\n\t\t\t// editor toolbar will also show right next to it. This ensures we are not\n\t\t\t// enabling wrapping only to disable it again in the code below (this fixes\n\t\t\t// flickering issue https://github.com/microsoft/vscode/issues/115050)\n\t\t\tif (\n\t\t\t\ttabsWrapMultiLine ||\n\t\t\t\t(allTabsWidth > visibleTabsWidth && lastTabFitsWrapped())\n\t\t\t) {\n\t\t\t\tupdateTabsWrapping(true);\n\t\t\t}\n\n\t\t\t// Tabs wrap multiline: remove wrapping under certain size constraint conditions\n\t\t\tif (tabsWrapMultiLine) {\n\t\t\t\tif (\n\t\t\t\t\ttabsContainer.offsetHeight > dimensions.available.height || // if height exceeds available height\n\t\t\t\t\t(allTabsWidth === visibleTabsWidth &&\n\t\t\t\t\t\ttabsContainer.offsetHeight === this.tabHeight) || // if wrapping is not needed anymore\n\t\t\t\t\t!lastTabFitsWrapped() // if last tab does not fit anymore\n\t\t\t\t) {\n\t\t\t\t\tupdateTabsWrapping(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Setting disabled: remove CSS traces only if tabs did wrap\n\t\telse if (didTabsWrapMultiLine) {\n\t\t\tupdateTabsWrapping(false);\n\t\t}\n\n\t\t// If we transitioned from non-wrapping to wrapping, we need\n\t\t// to update the scrollbar to have an equal `width` and\n\t\t// `scrollWidth`. Otherwise a scrollbar would appear which is\n\t\t// never desired when wrapping.\n\t\tif (tabsWrapMultiLine && !didTabsWrapMultiLine) {\n\t\t\tconst visibleTabsWidth = tabsContainer.offsetWidth;\n\t\t\ttabsScrollbar.setScrollDimensions({\n\t\t\t\twidth: visibleTabsWidth,\n\t\t\t\tscrollWidth: visibleTabsWidth,\n\t\t\t});\n\t\t}\n\n\t\t// Update the `last-in-row` class on tabs when wrapping\n\t\t// is enabled (it doesn't do any harm otherwise). This\n\t\t// class controls additional properties of tab when it is\n\t\t// the last tab in a row\n\t\tif (tabsWrapMultiLine) {\n\t\t\t// Using a map here to change classes after the for loop is\n\t\t\t// crucial for performance because changing the class on a\n\t\t\t// tab can result in layouts of the rendering engine.\n\t\t\tconst tabs = new Map<HTMLElement, boolean /* last in row */>();\n\n\t\t\tlet currentTabsPosY: number | undefined;\n\t\t\tlet lastTab: HTMLElement | undefined;\n\t\t\tfor (const child of tabsContainer.children) {\n\t\t\t\tconst tab = child as HTMLElement;\n\t\t\t\tconst tabPosY = tab.offsetTop;\n\n\t\t\t\t// Marks a new or the first row of tabs\n\t\t\t\tif (tabPosY !== currentTabsPosY) {\n\t\t\t\t\tcurrentTabsPosY = tabPosY;\n\t\t\t\t\tif (lastTab) {\n\t\t\t\t\t\ttabs.set(lastTab, true); // previous tab must be last in row then\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Always remember last tab and ensure the\n\t\t\t\t// last-in-row class is not present until\n\t\t\t\t// we know the tab is last\n\t\t\t\tlastTab = tab;\n\t\t\t\ttabs.set(tab, false);\n\t\t\t}\n\n\t\t\t// Last tab overally is always last-in-row\n\t\t\tif (lastTab) {\n\t\t\t\ttabs.set(lastTab, true);\n\t\t\t}\n\n\t\t\tfor (const [tab, lastInRow] of tabs) {\n\t\t\t\ttab.classList.toggle(\"last-in-row\", lastInRow);\n\t\t\t}\n\t\t}\n\n\t\treturn tabsWrapMultiLine;\n\t}\n\n\tprivate doLayoutTabsNonWrapping(\n\t\toptions?: IMultiEditorTabsControlLayoutOptions,\n\t): void {\n\t\tconst [tabsContainer, tabsScrollbar] = assertAllDefined(\n\t\t\tthis.tabsContainer,\n\t\t\tthis.tabsScrollbar,\n\t\t);\n\n\t\t//\n\t\t// Synopsis\n\t\t// - allTabsWidth:   \t\t\tsum of all tab widths\n\t\t// - stickyTabsWidth:\t\t\tsum of all sticky tab widths (unless `pinnedTabSizing: normal`)\n\t\t// - visibleContainerWidth: \tsize of tab container\n\t\t// - availableContainerWidth: \tsize of tab container minus size of sticky tabs\n\t\t//\n\t\t// [------------------------------ All tabs width ---------------------------------------]\n\t\t// [------------------- Visible container width -------------------]\n\t\t//                         [------ Available container width ------]\n\t\t// [ Sticky A ][ Sticky B ][ Tab C ][ Tab D ][ Tab E ][ Tab F ][ Tab G ][ Tab H ][ Tab I ]\n\t\t//                 Active Tab Width [-------]\n\t\t// [------- Active Tab Pos X -------]\n\t\t// [-- Sticky Tabs Width --]\n\t\t//\n\n\t\tconst visibleTabsWidth = tabsContainer.offsetWidth;\n\t\tconst allTabsWidth = tabsContainer.scrollWidth;\n\n\t\t// Compute width of sticky tabs depending on pinned tab sizing\n\t\t// - compact: sticky-tabs * TAB_SIZES.compact\n\t\t// -  shrink: sticky-tabs * TAB_SIZES.shrink\n\t\t// -  normal: 0 (sticky tabs inherit look and feel from non-sticky tabs)\n\t\tlet stickyTabsWidth = 0;\n\t\tif (this.tabsModel.stickyCount > 0) {\n\t\t\tlet stickyTabWidth = 0;\n\t\t\tswitch (this.groupsView.partOptions.pinnedTabSizing) {\n\t\t\t\tcase \"compact\":\n\t\t\t\t\tstickyTabWidth = MultiEditorTabsControl.TAB_WIDTH.compact;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"shrink\":\n\t\t\t\t\tstickyTabWidth = MultiEditorTabsControl.TAB_WIDTH.shrink;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tstickyTabsWidth = this.tabsModel.stickyCount * stickyTabWidth;\n\t\t}\n\n\t\tconst activeTabAndIndex = this.tabsModel.activeEditor\n\t\t\t? this.getTabAndIndex(this.tabsModel.activeEditor)\n\t\t\t: undefined;\n\t\tconst [activeTab, activeTabIndex] = activeTabAndIndex ?? [\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t];\n\n\t\t// Figure out if active tab is positioned static which has an\n\t\t// impact on whether to reveal the tab or not later\n\t\tlet activeTabPositionStatic =\n\t\t\tthis.groupsView.partOptions.pinnedTabSizing !== \"normal\" &&\n\t\t\ttypeof activeTabIndex === \"number\" &&\n\t\t\tthis.tabsModel.isSticky(activeTabIndex);\n\n\t\t// Special case: we have sticky tabs but the available space for showing tabs\n\t\t// is little enough that we need to disable sticky tabs sticky positioning\n\t\t// so that tabs can be scrolled at naturally.\n\t\tlet availableTabsContainerWidth = visibleTabsWidth - stickyTabsWidth;\n\t\tif (\n\t\t\tthis.tabsModel.stickyCount > 0 &&\n\t\t\tavailableTabsContainerWidth < MultiEditorTabsControl.TAB_WIDTH.fit\n\t\t) {\n\t\t\ttabsContainer.classList.add(\"disable-sticky-tabs\");\n\n\t\t\tavailableTabsContainerWidth = visibleTabsWidth;\n\t\t\tstickyTabsWidth = 0;\n\t\t\tactiveTabPositionStatic = false;\n\t\t} else {\n\t\t\ttabsContainer.classList.remove(\"disable-sticky-tabs\");\n\t\t}\n\n\t\tlet activeTabPosX: number | undefined;\n\t\tlet activeTabWidth: number | undefined;\n\n\t\tif (!this.blockRevealActiveTab && activeTab) {\n\t\t\tactiveTabPosX = activeTab.offsetLeft;\n\t\t\tactiveTabWidth = activeTab.offsetWidth;\n\t\t}\n\n\t\t// Update scrollbar\n\t\tconst { width: oldVisibleTabsWidth, scrollWidth: oldAllTabsWidth } =\n\t\t\ttabsScrollbar.getScrollDimensions();\n\t\ttabsScrollbar.setScrollDimensions({\n\t\t\twidth: visibleTabsWidth,\n\t\t\tscrollWidth: allTabsWidth,\n\t\t});\n\t\tconst dimensionsChanged =\n\t\t\toldVisibleTabsWidth !== visibleTabsWidth ||\n\t\t\toldAllTabsWidth !== allTabsWidth;\n\n\t\t// Revealing the active tab is skipped under some conditions:\n\t\tif (\n\t\t\tthis.blockRevealActiveTab || // explicitly disabled\n\t\t\ttypeof activeTabPosX !== \"number\" || // invalid dimension\n\t\t\ttypeof activeTabWidth !== \"number\" || // invalid dimension\n\t\t\tactiveTabPositionStatic || // static tab (sticky)\n\t\t\t(!dimensionsChanged && !options?.forceRevealActiveTab) // dimensions did not change and we have low layout priority (https://github.com/microsoft/vscode/issues/133631)\n\t\t) {\n\t\t\tthis.blockRevealActiveTab = false;\n\t\t\treturn;\n\t\t}\n\n\t\t// Reveal the active one\n\t\tconst tabsContainerScrollPosX =\n\t\t\ttabsScrollbar.getScrollPosition().scrollLeft;\n\t\tconst activeTabFits = activeTabWidth <= availableTabsContainerWidth;\n\t\tconst adjustedActiveTabPosX = activeTabPosX - stickyTabsWidth;\n\n\t\t//\n\t\t// Synopsis\n\t\t// - adjustedActiveTabPosX: the adjusted tabPosX takes the width of sticky tabs into account\n\t\t//   conceptually the scrolling only begins after sticky tabs so in order to reveal a tab fully\n\t\t//   the actual position needs to be adjusted for sticky tabs.\n\t\t//\n\t\t// Tab is overflowing to the right: Scroll minimally until the element is fully visible to the right\n\t\t// Note: only try to do this if we actually have enough width to give to show the tab fully!\n\t\t//\n\t\t// Example: Tab G should be made active and needs to be fully revealed as such.\n\t\t//\n\t\t// [-------------------------------- All tabs width -----------------------------------------]\n\t\t// [-------------------- Visible container width --------------------]\n\t\t//                           [----- Available container width -------]\n\t\t//     [ Sticky A ][ Sticky B ][ Tab C ][ Tab D ][ Tab E ][ Tab F ][ Tab G ][ Tab H ][ Tab I ]\n\t\t//                     Active Tab Width [-------]\n\t\t//     [------- Active Tab Pos X -------]\n\t\t//                             [-------- Adjusted Tab Pos X -------]\n\t\t//     [-- Sticky Tabs Width --]\n\t\t//\n\t\t//\n\t\tif (\n\t\t\tactiveTabFits &&\n\t\t\ttabsContainerScrollPosX + availableTabsContainerWidth <\n\t\t\t\tadjustedActiveTabPosX + activeTabWidth\n\t\t) {\n\t\t\ttabsScrollbar.setScrollPosition({\n\t\t\t\tscrollLeft:\n\t\t\t\t\ttabsContainerScrollPosX +\n\t\t\t\t\t(adjustedActiveTabPosX +\n\t\t\t\t\t\tactiveTabWidth /* right corner of tab */ -\n\t\t\t\t\t\t(tabsContainerScrollPosX +\n\t\t\t\t\t\t\tavailableTabsContainerWidth)) /* right corner of view port */,\n\t\t\t});\n\t\t}\n\n\t\t//\n\t\t// Tab is overlflowing to the left or does not fit: Scroll it into view to the left\n\t\t//\n\t\t// Example: Tab C should be made active and needs to be fully revealed as such.\n\t\t//\n\t\t// [----------------------------- All tabs width ----------------------------------------]\n\t\t//     [------------------ Visible container width ------------------]\n\t\t//                           [----- Available container width -------]\n\t\t// [ Sticky A ][ Sticky B ][ Tab C ][ Tab D ][ Tab E ][ Tab F ][ Tab G ][ Tab H ][ Tab I ]\n\t\t//                 Active Tab Width [-------]\n\t\t// [------- Active Tab Pos X -------]\n\t\t//      Adjusted Tab Pos X []\n\t\t// [-- Sticky Tabs Width --]\n\t\t//\n\t\t//\n\t\telse if (\n\t\t\ttabsContainerScrollPosX > adjustedActiveTabPosX ||\n\t\t\t!activeTabFits\n\t\t) {\n\t\t\ttabsScrollbar.setScrollPosition({\n\t\t\t\tscrollLeft: adjustedActiveTabPosX,\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate updateTabsControlVisibility(): void {\n\t\tconst tabsAndActionsContainer = assertIsDefined(\n\t\t\tthis.tabsAndActionsContainer,\n\t\t);\n\t\ttabsAndActionsContainer.classList.toggle(\"empty\", !this.visible);\n\n\t\t// Reset dimensions if hidden\n\t\tif (!this.visible && this.dimensions) {\n\t\t\tthis.dimensions.used = undefined;\n\t\t}\n\t}\n\n\tprivate get visible(): boolean {\n\t\treturn this.tabsModel.count > 0;\n\t}\n\n\tprivate getTabAndIndex(\n\t\teditor: EditorInput,\n\t): [HTMLElement, number /* index */] | undefined {\n\t\tconst tabIndex = this.tabsModel.indexOf(editor);\n\t\tconst tab = this.getTabAtIndex(tabIndex);\n\t\tif (tab) {\n\t\t\treturn [tab, tabIndex];\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate getTabAtIndex(tabIndex: number): HTMLElement | undefined {\n\t\tif (tabIndex >= 0) {\n\t\t\tconst tabsContainer = assertIsDefined(this.tabsContainer);\n\n\t\t\treturn tabsContainer.children[tabIndex] as HTMLElement | undefined;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate getLastTab(): HTMLElement | undefined {\n\t\treturn this.getTabAtIndex(this.tabsModel.count - 1);\n\t}\n\n\tprivate blockRevealActiveTabOnce(): void {\n\t\t// When closing tabs through the tab close button or gesture, the user\n\t\t// might want to rapidly close tabs in sequence and as such revealing\n\t\t// the active tab after each close would be annoying. As such we block\n\t\t// the automated revealing of the active tab once after the close is\n\t\t// triggered.\n\t\tthis.blockRevealActiveTab = true;\n\t}\n\n\tprivate originatesFromTabActionBar(e: MouseEvent | GestureEvent): boolean {\n\t\tlet element: HTMLElement;\n\t\tif (isMouseEvent(e)) {\n\t\t\telement = (e.target || e.srcElement) as HTMLElement;\n\t\t} else {\n\t\t\telement = (e as GestureEvent).initialTarget as HTMLElement;\n\t\t}\n\n\t\treturn !!findParentWithClass(element, \"action-item\", \"tab\");\n\t}\n\n\tprivate async onDrop(\n\t\te: DragEvent,\n\t\ttargetTabIndex: number,\n\t\ttabsContainer: HTMLElement,\n\t): Promise<void> {\n\t\tEventHelper.stop(e, true);\n\n\t\tthis.updateDropFeedback(tabsContainer, false, e, targetTabIndex);\n\t\ttabsContainer.classList.remove(\"scroll\");\n\n\t\tlet targetEditorIndex =\n\t\t\tthis.tabsModel instanceof UnstickyEditorGroupModel\n\t\t\t\t? targetTabIndex + this.groupView.stickyCount\n\t\t\t\t: targetTabIndex;\n\t\tconst options: IEditorOptions = {\n\t\t\tsticky:\n\t\t\t\tthis.tabsModel instanceof StickyEditorGroupModel &&\n\t\t\t\tthis.tabsModel.stickyCount === targetEditorIndex,\n\t\t\tindex: targetEditorIndex,\n\t\t};\n\n\t\t// Check for group transfer\n\t\tif (\n\t\t\tthis.groupTransfer.hasData(DraggedEditorGroupIdentifier.prototype)\n\t\t) {\n\t\t\tconst data = this.groupTransfer.getData(\n\t\t\t\tDraggedEditorGroupIdentifier.prototype,\n\t\t\t);\n\t\t\tif (Array.isArray(data) && data.length > 0) {\n\t\t\t\tconst sourceGroup = this.editorPartsView.getGroup(\n\t\t\t\t\tdata[0].identifier,\n\t\t\t\t);\n\t\t\t\tif (sourceGroup) {\n\t\t\t\t\tconst mergeGroupOptions: IMergeGroupOptions = {\n\t\t\t\t\t\tindex: targetEditorIndex,\n\t\t\t\t\t};\n\t\t\t\t\tif (!this.isMoveOperation(e, sourceGroup.id)) {\n\t\t\t\t\t\tmergeGroupOptions.mode = MergeGroupMode.COPY_EDITORS;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.groupsView.mergeGroup(\n\t\t\t\t\t\tsourceGroup,\n\t\t\t\t\t\tthis.groupView,\n\t\t\t\t\t\tmergeGroupOptions,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthis.groupView.focus();\n\t\t\t\tthis.groupTransfer.clearData(\n\t\t\t\t\tDraggedEditorGroupIdentifier.prototype,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// Check for editor transfer\n\t\telse if (\n\t\t\tthis.editorTransfer.hasData(DraggedEditorIdentifier.prototype)\n\t\t) {\n\t\t\tconst data = this.editorTransfer.getData(\n\t\t\t\tDraggedEditorIdentifier.prototype,\n\t\t\t);\n\t\t\tif (Array.isArray(data) && data.length > 0) {\n\t\t\t\tconst sourceGroup = this.editorPartsView.getGroup(\n\t\t\t\t\tdata[0].identifier.groupId,\n\t\t\t\t);\n\t\t\t\tif (sourceGroup) {\n\t\t\t\t\tfor (const de of data) {\n\t\t\t\t\t\tconst editor = de.identifier.editor;\n\n\t\t\t\t\t\t// Only allow moving/copying from a single group source\n\t\t\t\t\t\tif (sourceGroup.id !== de.identifier.groupId) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Keep the same order when moving / copying editors within the same group\n\t\t\t\t\t\tconst sourceEditorIndex =\n\t\t\t\t\t\t\tsourceGroup.getIndexOfEditor(editor);\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tsourceGroup === this.groupView &&\n\t\t\t\t\t\t\tsourceEditorIndex < targetEditorIndex\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\ttargetEditorIndex--;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis.isMoveOperation(\n\t\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\t\tde.identifier.groupId,\n\t\t\t\t\t\t\t\teditor,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tsourceGroup.moveEditor(editor, this.groupView, {\n\t\t\t\t\t\t\t\t...options,\n\t\t\t\t\t\t\t\tindex: targetEditorIndex,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsourceGroup.copyEditor(editor, this.groupView, {\n\t\t\t\t\t\t\t\t...options,\n\t\t\t\t\t\t\t\tindex: targetEditorIndex,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetEditorIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.groupView.focus();\n\t\t\tthis.editorTransfer.clearData(DraggedEditorIdentifier.prototype);\n\t\t}\n\n\t\t// Check for tree items\n\t\telse if (\n\t\t\tthis.treeItemsTransfer.hasData(DraggedTreeItemsIdentifier.prototype)\n\t\t) {\n\t\t\tconst data = this.treeItemsTransfer.getData(\n\t\t\t\tDraggedTreeItemsIdentifier.prototype,\n\t\t\t);\n\t\t\tif (Array.isArray(data) && data.length > 0) {\n\t\t\t\tconst editors: IUntypedEditorInput[] = [];\n\t\t\t\tfor (const id of data) {\n\t\t\t\t\tconst dataTransferItem =\n\t\t\t\t\t\tawait this.treeViewsDragAndDropService.removeDragOperationTransfer(\n\t\t\t\t\t\t\tid.identifier,\n\t\t\t\t\t\t);\n\t\t\t\t\tif (dataTransferItem) {\n\t\t\t\t\t\tconst treeDropData =\n\t\t\t\t\t\t\tawait extractTreeDropData(dataTransferItem);\n\t\t\t\t\t\teditors.push(\n\t\t\t\t\t\t\t...treeDropData.map((editor) => ({\n\t\t\t\t\t\t\t\t...editor,\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t...editor.options,\n\t\t\t\t\t\t\t\t\tpinned: true,\n\t\t\t\t\t\t\t\t\tindex: targetEditorIndex,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.editorService.openEditors(editors, this.groupView, {\n\t\t\t\t\tvalidateTrust: true,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.treeItemsTransfer.clearData(\n\t\t\t\tDraggedTreeItemsIdentifier.prototype,\n\t\t\t);\n\t\t}\n\n\t\t// Check for URI transfer\n\t\telse {\n\t\t\tconst dropHandler = this.instantiationService.createInstance(\n\t\t\t\tResourcesDropHandler,\n\t\t\t\t{ allowWorkspaceOpen: false },\n\t\t\t);\n\t\t\tdropHandler.handleDrop(\n\t\t\t\te,\n\t\t\t\tgetWindow(this.parent),\n\t\t\t\t() => this.groupView,\n\t\t\t\t() => this.groupView.focus(),\n\t\t\t\toptions,\n\t\t\t);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.tabDisposables = dispose(this.tabDisposables);\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\t// Add bottom border to tabs when wrapping\n\tconst borderColor = theme.getColor(TAB_BORDER);\n\tif (borderColor) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container > .title > .tabs-and-actions-container.wrapping .tabs-container > .tab {\n\t\t\t\tborder-bottom: 1px solid ${borderColor};\n\t\t\t}\n\t\t`);\n\t}\n\n\t// Styling with Outline color (e.g. high contrast theme)\n\tconst activeContrastBorderColor = theme.getColor(activeContrastBorder);\n\tif (activeContrastBorderColor) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container.active > .title .tabs-container > .tab.active,\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container.active > .title .tabs-container > .tab.active:hover  {\n\t\t\t\toutline: 1px solid;\n\t\t\t\toutline-offset: -5px;\n\t\t\t}\n\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container > .title .tabs-container > .tab.selected:not(.active):not(:hover)  {\n\t\t\t\toutline: 1px dotted;\n\t\t\t\toutline-offset: -5px;\n\t\t\t}\n\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container.active > .title .tabs-container > .tab.active:focus {\n\t\t\t\toutline-style: dashed;\n\t\t\t}\n\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container > .title .tabs-container > .tab.active {\n\t\t\t\toutline: 1px dotted;\n\t\t\t\toutline-offset: -5px;\n\t\t\t}\n\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container > .title .tabs-container > .tab:hover  {\n\t\t\t\toutline: 1px dashed;\n\t\t\t\toutline-offset: -5px;\n\t\t\t}\n\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container > .title .tabs-container > .tab.active > .tab-actions .action-label,\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container > .title .tabs-container > .tab.active:hover > .tab-actions .action-label,\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container > .title .tabs-container > .tab.dirty > .tab-actions .action-label,\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container > .title .tabs-container > .tab.sticky > .tab-actions .action-label,\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container > .title .tabs-container > .tab:hover > .tab-actions .action-label {\n\t\t\t\topacity: 1 !important;\n\t\t\t}\n\t\t`);\n\t}\n\n\t// High Contrast Border Color for Editor Actions\n\tconst contrastBorderColor = theme.getColor(contrastBorder);\n\tif (contrastBorderColor) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container > .title .editor-actions {\n\t\t\t\toutline: 1px solid ${contrastBorderColor}\n\t\t\t}\n\t\t`);\n\t}\n\n\t// Hover Background\n\tconst tabHoverBackground = theme.getColor(TAB_HOVER_BACKGROUND);\n\tif (tabHoverBackground) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container.active > .title .tabs-container > .tab:not(.selected):hover {\n\t\t\t\tbackground-color: ${tabHoverBackground} !important;\n\t\t\t}\n\t\t`);\n\t}\n\n\tconst tabUnfocusedHoverBackground = theme.getColor(\n\t\tTAB_UNFOCUSED_HOVER_BACKGROUND,\n\t);\n\tif (tabUnfocusedHoverBackground) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container > .title .tabs-container > .tab:not(.selected):hover  {\n\t\t\t\tbackground-color: ${tabUnfocusedHoverBackground} !important;\n\t\t\t}\n\t\t`);\n\t}\n\n\t// Hover Foreground\n\tconst tabHoverForeground = theme.getColor(TAB_HOVER_FOREGROUND);\n\tif (tabHoverForeground) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container.active > .title .tabs-container > .tab:not(.selected):hover  {\n\t\t\t\tcolor: ${tabHoverForeground} !important;\n\t\t\t}\n\t\t`);\n\t}\n\n\tconst tabUnfocusedHoverForeground = theme.getColor(\n\t\tTAB_UNFOCUSED_HOVER_FOREGROUND,\n\t);\n\tif (tabUnfocusedHoverForeground) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container > .title .tabs-container > .tab:not(.selected):hover  {\n\t\t\t\tcolor: ${tabUnfocusedHoverForeground} !important;\n\t\t\t}\n\t\t`);\n\t}\n\n\t// Hover Border\n\t//\n\t// Unfortunately we need to copy a lot of CSS over from the\n\t// multiEditorTabsControl.css because we want to reuse the same\n\t// styles we already have for the normal bottom-border.\n\tconst tabHoverBorder = theme.getColor(TAB_HOVER_BORDER);\n\tif (tabHoverBorder) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container.active > .title .tabs-container > .tab:hover > .tab-border-bottom-container {\n\t\t\t\tdisplay: block;\n\t\t\t\tposition: absolute;\n\t\t\t\tleft: 0;\n\t\t\t\tpointer-events: none;\n\t\t\t\twidth: 100%;\n\t\t\t\tz-index: 10;\n\t\t\t\tbottom: 0;\n\t\t\t\theight: 1px;\n\t\t\t\tbackground-color: ${tabHoverBorder};\n\t\t\t}\n\t\t`);\n\t}\n\n\tconst tabUnfocusedHoverBorder = theme.getColor(TAB_UNFOCUSED_HOVER_BORDER);\n\tif (tabUnfocusedHoverBorder) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .part.editor > .content .editor-group-container > .title .tabs-container > .tab:hover > .tab-border-bottom-container  {\n\t\t\t\tdisplay: block;\n\t\t\t\tposition: absolute;\n\t\t\t\tleft: 0;\n\t\t\t\tpointer-events: none;\n\t\t\t\twidth: 100%;\n\t\t\t\tz-index: 10;\n\t\t\t\tbottom: 0;\n\t\t\t\theight: 1px;\n\t\t\t\tbackground-color: ${tabUnfocusedHoverBorder};\n\t\t\t}\n\t\t`);\n\t}\n\n\t// Fade out styles via linear gradient (when tabs are set to shrink or fixed)\n\t// But not when:\n\t// - in high contrast theme\n\t// - if we have a contrast border (which draws an outline - https://github.com/microsoft/vscode/issues/109117)\n\t// - on Safari (https://github.com/microsoft/vscode/issues/108996)\n\tif (\n\t\t!isHighContrast(theme.type) &&\n\t\t!isSafari &&\n\t\t!activeContrastBorderColor\n\t) {\n\t\tconst workbenchBackground = WORKBENCH_BACKGROUND(theme);\n\t\tconst editorBackgroundColor = theme.getColor(editorBackground);\n\t\tconst editorGroupHeaderTabsBackground = theme.getColor(\n\t\t\tEDITOR_GROUP_HEADER_TABS_BACKGROUND,\n\t\t);\n\t\tconst editorDragAndDropBackground = theme.getColor(\n\t\t\tEDITOR_DRAG_AND_DROP_BACKGROUND,\n\t\t);\n\n\t\tlet adjustedTabBackground: Color | undefined;\n\t\tif (editorGroupHeaderTabsBackground && editorBackgroundColor) {\n\t\t\tadjustedTabBackground = editorGroupHeaderTabsBackground.flatten(\n\t\t\t\teditorBackgroundColor,\n\t\t\t\teditorBackgroundColor,\n\t\t\t\tworkbenchBackground,\n\t\t\t);\n\t\t}\n\n\t\tlet adjustedTabDragBackground: Color | undefined;\n\t\tif (\n\t\t\teditorGroupHeaderTabsBackground &&\n\t\t\teditorBackgroundColor &&\n\t\t\teditorDragAndDropBackground &&\n\t\t\teditorBackgroundColor\n\t\t) {\n\t\t\tadjustedTabDragBackground = editorGroupHeaderTabsBackground.flatten(\n\t\t\t\teditorBackgroundColor,\n\t\t\t\teditorDragAndDropBackground,\n\t\t\t\teditorBackgroundColor,\n\t\t\t\tworkbenchBackground,\n\t\t\t);\n\t\t}\n\n\t\t// Adjust gradient for focused and unfocused hover background\n\t\tconst makeTabHoverBackgroundRule = (\n\t\t\tcolor: Color,\n\t\t\tcolorDrag: Color,\n\t\t\thasFocus = false,\n\t\t) => `\n\t\t\t.monaco-workbench .part.editor > .content:not(.dragged-over) .editor-group-container${hasFocus ? \".active\" : \"\"} > .title .tabs-container > .tab.sizing-shrink:not(.dragged):not(.sticky-compact):hover > .tab-label > .monaco-icon-label-container::after,\n\t\t\t.monaco-workbench .part.editor > .content:not(.dragged-over) .editor-group-container${hasFocus ? \".active\" : \"\"} > .title .tabs-container > .tab.sizing-fixed:not(.dragged):not(.sticky-compact):hover > .tab-label > .monaco-icon-label-container::after {\n\t\t\t\tbackground: linear-gradient(to left, ${color}, transparent) !important;\n\t\t\t}\n\n\t\t\t.monaco-workbench .part.editor > .content.dragged-over .editor-group-container${hasFocus ? \".active\" : \"\"} > .title .tabs-container > .tab.sizing-shrink:not(.dragged):not(.sticky-compact):hover > .tab-label > .monaco-icon-label-container::after,\n\t\t\t.monaco-workbench .part.editor > .content.dragged-over .editor-group-container${hasFocus ? \".active\" : \"\"} > .title .tabs-container > .tab.sizing-fixed:not(.dragged):not(.sticky-compact):hover > .tab-label > .monaco-icon-label-container::after {\n\t\t\t\tbackground: linear-gradient(to left, ${colorDrag}, transparent) !important;\n\t\t\t}\n\t\t`;\n\n\t\t// Adjust gradient for (focused) hover background\n\t\tif (\n\t\t\ttabHoverBackground &&\n\t\t\tadjustedTabBackground &&\n\t\t\tadjustedTabDragBackground\n\t\t) {\n\t\t\tconst adjustedColor = tabHoverBackground.flatten(\n\t\t\t\tadjustedTabBackground,\n\t\t\t);\n\t\t\tconst adjustedColorDrag = tabHoverBackground.flatten(\n\t\t\t\tadjustedTabDragBackground,\n\t\t\t);\n\t\t\tcollector.addRule(\n\t\t\t\tmakeTabHoverBackgroundRule(\n\t\t\t\t\tadjustedColor,\n\t\t\t\t\tadjustedColorDrag,\n\t\t\t\t\ttrue,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\t// Adjust gradient for unfocused hover background\n\t\tif (\n\t\t\ttabUnfocusedHoverBackground &&\n\t\t\tadjustedTabBackground &&\n\t\t\tadjustedTabDragBackground\n\t\t) {\n\t\t\tconst adjustedColor = tabUnfocusedHoverBackground.flatten(\n\t\t\t\tadjustedTabBackground,\n\t\t\t);\n\t\t\tconst adjustedColorDrag = tabUnfocusedHoverBackground.flatten(\n\t\t\t\tadjustedTabDragBackground,\n\t\t\t);\n\t\t\tcollector.addRule(\n\t\t\t\tmakeTabHoverBackgroundRule(adjustedColor, adjustedColorDrag),\n\t\t\t);\n\t\t}\n\n\t\t// Adjust gradient for drag and drop background\n\t\tif (editorDragAndDropBackground && adjustedTabDragBackground) {\n\t\t\tconst adjustedColorDrag = editorDragAndDropBackground.flatten(\n\t\t\t\tadjustedTabDragBackground,\n\t\t\t);\n\t\t\tcollector.addRule(`\n\t\t\t\t.monaco-workbench .part.editor > .content.dragged-over .editor-group-container.active > .title .tabs-container > .tab.sizing-shrink.dragged-over:not(.active):not(.dragged):not(.sticky-compact) > .tab-label > .monaco-icon-label-container::after,\n\t\t\t\t.monaco-workbench .part.editor > .content.dragged-over .editor-group-container:not(.active) > .title .tabs-container > .tab.sizing-shrink.dragged-over:not(.dragged):not(.sticky-compact) > .tab-label > .monaco-icon-label-container::after,\n\t\t\t\t.monaco-workbench .part.editor > .content.dragged-over .editor-group-container.active > .title .tabs-container > .tab.sizing-fixed.dragged-over:not(.active):not(.dragged):not(.sticky-compact) > .tab-label > .monaco-icon-label-container::after,\n\t\t\t\t.monaco-workbench .part.editor > .content.dragged-over .editor-group-container:not(.active) > .title .tabs-container > .tab.sizing-fixed.dragged-over:not(.dragged):not(.sticky-compact) > .tab-label > .monaco-icon-label-container::after {\n\t\t\t\t\tbackground: linear-gradient(to left, ${adjustedColorDrag}, transparent) !important;\n\t\t\t\t}\n\t\t`);\n\t\t}\n\n\t\tconst makeTabBackgroundRule = (\n\t\t\tcolor: Color,\n\t\t\tcolorDrag: Color,\n\t\t\tfocused: boolean,\n\t\t\tactive: boolean,\n\t\t) => `\n\t\t\t\t.monaco-workbench .part.editor > .content:not(.dragged-over) .editor-group-container${focused ? \".active\" : \":not(.active)\"} > .title .tabs-container > .tab.sizing-shrink${active ? \".active\" : \"\"}:not(.dragged):not(.sticky-compact) > .tab-label > .monaco-icon-label-container::after,\n\t\t\t\t.monaco-workbench .part.editor > .content:not(.dragged-over) .editor-group-container${focused ? \".active\" : \":not(.active)\"} > .title .tabs-container > .tab.sizing-fixed${active ? \".active\" : \"\"}:not(.dragged):not(.sticky-compact) > .tab-label > .monaco-icon-label-container::after {\n\t\t\t\t\tbackground: linear-gradient(to left, ${color}, transparent);\n\t\t\t\t}\n\n\t\t\t\t.monaco-workbench .part.editor > .content.dragged-over .editor-group-container${focused ? \".active\" : \":not(.active)\"} > .title .tabs-container > .tab.sizing-shrink${active ? \".active\" : \"\"}:not(.dragged):not(.sticky-compact) > .tab-label > .monaco-icon-label-container::after,\n\t\t\t\t.monaco-workbench .part.editor > .content.dragged-over .editor-group-container${focused ? \".active\" : \":not(.active)\"} > .title .tabs-container > .tab.sizing-fixed${active ? \".active\" : \"\"}:not(.dragged):not(.sticky-compact) > .tab-label > .monaco-icon-label-container::after {\n\t\t\t\t\tbackground: linear-gradient(to left, ${colorDrag}, transparent);\n\t\t\t\t}\n\t\t`;\n\n\t\t// Adjust gradient for focused active tab background\n\t\tconst tabActiveBackground = theme.getColor(TAB_ACTIVE_BACKGROUND);\n\t\tif (\n\t\t\ttabActiveBackground &&\n\t\t\tadjustedTabBackground &&\n\t\t\tadjustedTabDragBackground\n\t\t) {\n\t\t\tconst adjustedColor = tabActiveBackground.flatten(\n\t\t\t\tadjustedTabBackground,\n\t\t\t);\n\t\t\tconst adjustedColorDrag = tabActiveBackground.flatten(\n\t\t\t\tadjustedTabDragBackground,\n\t\t\t);\n\t\t\tcollector.addRule(\n\t\t\t\tmakeTabBackgroundRule(\n\t\t\t\t\tadjustedColor,\n\t\t\t\t\tadjustedColorDrag,\n\t\t\t\t\ttrue,\n\t\t\t\t\ttrue,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\t// Adjust gradient for unfocused active tab background\n\t\tconst tabUnfocusedActiveBackground = theme.getColor(\n\t\t\tTAB_UNFOCUSED_ACTIVE_BACKGROUND,\n\t\t);\n\t\tif (\n\t\t\ttabUnfocusedActiveBackground &&\n\t\t\tadjustedTabBackground &&\n\t\t\tadjustedTabDragBackground\n\t\t) {\n\t\t\tconst adjustedColor = tabUnfocusedActiveBackground.flatten(\n\t\t\t\tadjustedTabBackground,\n\t\t\t);\n\t\t\tconst adjustedColorDrag = tabUnfocusedActiveBackground.flatten(\n\t\t\t\tadjustedTabDragBackground,\n\t\t\t);\n\t\t\tcollector.addRule(\n\t\t\t\tmakeTabBackgroundRule(\n\t\t\t\t\tadjustedColor,\n\t\t\t\t\tadjustedColorDrag,\n\t\t\t\t\tfalse,\n\t\t\t\t\ttrue,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\t// Adjust gradient for focused inactive tab background\n\t\tconst tabInactiveBackground = theme.getColor(TAB_INACTIVE_BACKGROUND);\n\t\tif (\n\t\t\ttabInactiveBackground &&\n\t\t\tadjustedTabBackground &&\n\t\t\tadjustedTabDragBackground\n\t\t) {\n\t\t\tconst adjustedColor = tabInactiveBackground.flatten(\n\t\t\t\tadjustedTabBackground,\n\t\t\t);\n\t\t\tconst adjustedColorDrag = tabInactiveBackground.flatten(\n\t\t\t\tadjustedTabDragBackground,\n\t\t\t);\n\t\t\tcollector.addRule(\n\t\t\t\tmakeTabBackgroundRule(\n\t\t\t\t\tadjustedColor,\n\t\t\t\t\tadjustedColorDrag,\n\t\t\t\t\ttrue,\n\t\t\t\t\tfalse,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\t// Adjust gradient for unfocused inactive tab background\n\t\tconst tabUnfocusedInactiveBackground = theme.getColor(\n\t\t\tTAB_UNFOCUSED_INACTIVE_BACKGROUND,\n\t\t);\n\t\tif (\n\t\t\ttabUnfocusedInactiveBackground &&\n\t\t\tadjustedTabBackground &&\n\t\t\tadjustedTabDragBackground\n\t\t) {\n\t\t\tconst adjustedColor = tabUnfocusedInactiveBackground.flatten(\n\t\t\t\tadjustedTabBackground,\n\t\t\t);\n\t\t\tconst adjustedColorDrag = tabUnfocusedInactiveBackground.flatten(\n\t\t\t\tadjustedTabDragBackground,\n\t\t\t);\n\t\t\tcollector.addRule(\n\t\t\t\tmakeTabBackgroundRule(\n\t\t\t\t\tadjustedColor,\n\t\t\t\t\tadjustedColorDrag,\n\t\t\t\t\tfalse,\n\t\t\t\t\tfalse,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n});\n"],
  "mappings": "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",
  "names": ["editor", "e", "duplicateLabels"]
}
