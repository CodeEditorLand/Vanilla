{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/editor/multiRowEditorTabsControl.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Dimension } from \"../../../../base/browser/dom.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport type { IEditorPartOptions } from \"../../../common/editor.js\";\nimport type { IReadonlyEditorGroupModel } from \"../../../common/editor/editorGroupModel.js\";\nimport type { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport {\n\tStickyEditorGroupModel,\n\tUnstickyEditorGroupModel,\n} from \"../../../common/editor/filteredEditorGroupModel.js\";\nimport type {\n\tIEditorGroupView,\n\tIEditorGroupsView,\n\tIEditorPartsView,\n\tIInternalEditorOpenOptions,\n} from \"./editor.js\";\nimport type { IEditorTabsControl } from \"./editorTabsControl.js\";\nimport type { IEditorTitleControlDimensions } from \"./editorTitleControl.js\";\nimport { MultiEditorTabsControl } from \"./multiEditorTabsControl.js\";\n\nexport class MultiRowEditorControl\n\textends Disposable\n\timplements IEditorTabsControl\n{\n\tprivate readonly stickyEditorTabsControl: IEditorTabsControl;\n\tprivate readonly unstickyEditorTabsControl: IEditorTabsControl;\n\n\tprivate activeControl: IEditorTabsControl | undefined;\n\n\tconstructor(\n\t\tprivate readonly parent: HTMLElement,\n\t\teditorPartsView: IEditorPartsView,\n\t\tprivate readonly groupsView: IEditorGroupsView,\n\t\tprivate readonly groupView: IEditorGroupView,\n\t\tprivate readonly model: IReadonlyEditorGroupModel,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\n\t\tconst stickyModel = this._register(new StickyEditorGroupModel(this.model));\n\t\tconst unstickyModel = this._register(new UnstickyEditorGroupModel(this.model));\n\n\t\tthis.stickyEditorTabsControl = this._register(this.instantiationService.createInstance(MultiEditorTabsControl, this.parent, editorPartsView, this.groupsView, this.groupView, stickyModel));\n\t\tthis.unstickyEditorTabsControl = this._register(this.instantiationService.createInstance(MultiEditorTabsControl, this.parent, editorPartsView, this.groupsView, this.groupView, unstickyModel));\n\n\t\tthis.handleTabBarsStateChange();\n\t}\n\n\tprivate handleTabBarsStateChange(): void {\n\t\tthis.activeControl = this.model.activeEditor\n\t\t\t? this.getEditorTabsController(this.model.activeEditor)\n\t\t\t: undefined;\n\t\tthis.handleTabBarsLayoutChange();\n\t}\n\n\tprivate handleTabBarsLayoutChange(): void {\n\t\tif (this.groupView.count === 0) {\n\t\t\t// Do nothing as no tab bar is visible\n\t\t\treturn;\n\t\t}\n\n\t\tconst hadTwoTabBars = this.parent.classList.contains(\"two-tab-bars\");\n\t\tconst hasTwoTabBars =\n\t\t\tthis.groupView.count !== this.groupView.stickyCount &&\n\t\t\tthis.groupView.stickyCount > 0;\n\n\t\t// Ensure action toolbar is only visible once\n\t\tthis.parent.classList.toggle(\"two-tab-bars\", hasTwoTabBars);\n\n\t\tif (hadTwoTabBars !== hasTwoTabBars) {\n\t\t\tthis.groupView.relayout();\n\t\t}\n\t}\n\n\tprivate didActiveControlChange() {\n\t\treturn (\n\t\t\tthis.activeControl !==\n\t\t\t(this.model.activeEditor\n\t\t\t\t? this.getEditorTabsController(this.model.activeEditor)\n\t\t\t\t: undefined)\n\t\t);\n\t}\n\n\tprivate getEditorTabsController(editor: EditorInput): IEditorTabsControl {\n\t\treturn this.model.isSticky(editor)\n\t\t\t? this.stickyEditorTabsControl\n\t\t\t: this.unstickyEditorTabsControl;\n\t}\n\n\topenEditor(\n\t\teditor: EditorInput,\n\t\toptions: IInternalEditorOpenOptions,\n\t): boolean {\n\t\tconst didActiveControlChange = this.didActiveControlChange();\n\t\tconst didOpenEditorChange = this.getEditorTabsController(\n\t\t\teditor,\n\t\t).openEditor(editor, options);\n\n\t\tconst didChange = didOpenEditorChange || didActiveControlChange;\n\t\tif (didChange) {\n\t\t\tthis.handleOpenedEditors();\n\t\t}\n\t\treturn didChange;\n\t}\n\n\topenEditors(editors: EditorInput[]): boolean {\n\t\tconst stickyEditors = editors.filter((e) => this.model.isSticky(e));\n\t\tconst unstickyEditors = editors.filter((e) => !this.model.isSticky(e));\n\n\t\tconst didActiveControlChange = this.didActiveControlChange();\n\t\tconst didChangeOpenEditorsSticky =\n\t\t\tthis.stickyEditorTabsControl.openEditors(stickyEditors);\n\t\tconst didChangeOpenEditorsUnSticky =\n\t\t\tthis.unstickyEditorTabsControl.openEditors(unstickyEditors);\n\n\t\tconst didChange =\n\t\t\tdidChangeOpenEditorsSticky ||\n\t\t\tdidChangeOpenEditorsUnSticky ||\n\t\t\tdidActiveControlChange;\n\t\tif (didChange) {\n\t\t\tthis.handleOpenedEditors();\n\t\t}\n\n\t\treturn didChange;\n\t}\n\n\tprivate handleOpenedEditors(): void {\n\t\tthis.handleTabBarsStateChange();\n\t}\n\n\tbeforeCloseEditor(editor: EditorInput): void {\n\t\tthis.getEditorTabsController(editor).beforeCloseEditor(editor);\n\t}\n\n\tcloseEditor(editor: EditorInput): void {\n\t\t// Has to be called on both tab bars as the editor could be either sticky or not\n\t\tthis.stickyEditorTabsControl.closeEditor(editor);\n\t\tthis.unstickyEditorTabsControl.closeEditor(editor);\n\n\t\tthis.handleClosedEditors();\n\t}\n\n\tcloseEditors(editors: EditorInput[]): void {\n\t\tconst stickyEditors = editors.filter((e) => this.model.isSticky(e));\n\t\tconst unstickyEditors = editors.filter((e) => !this.model.isSticky(e));\n\n\t\tthis.stickyEditorTabsControl.closeEditors(stickyEditors);\n\t\tthis.unstickyEditorTabsControl.closeEditors(unstickyEditors);\n\n\t\tthis.handleClosedEditors();\n\t}\n\n\tprivate handleClosedEditors(): void {\n\t\tthis.handleTabBarsStateChange();\n\t}\n\n\tmoveEditor(\n\t\teditor: EditorInput,\n\t\tfromIndex: number,\n\t\ttargetIndex: number,\n\t\tstickyStateChange: boolean,\n\t): void {\n\t\tif (stickyStateChange) {\n\t\t\t// If sticky state changes, move editor between tab bars\n\t\t\tif (this.model.isSticky(editor)) {\n\t\t\t\tthis.stickyEditorTabsControl.openEditor(editor);\n\t\t\t\tthis.unstickyEditorTabsControl.closeEditor(editor);\n\t\t\t} else {\n\t\t\t\tthis.stickyEditorTabsControl.closeEditor(editor);\n\t\t\t\tthis.unstickyEditorTabsControl.openEditor(editor);\n\t\t\t}\n\n\t\t\tthis.handleTabBarsStateChange();\n\t\t} else if (this.model.isSticky(editor)) {\n\t\t\tthis.stickyEditorTabsControl.moveEditor(\n\t\t\t\teditor,\n\t\t\t\tfromIndex,\n\t\t\t\ttargetIndex,\n\t\t\t\tstickyStateChange,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.unstickyEditorTabsControl.moveEditor(\n\t\t\t\teditor,\n\t\t\t\tfromIndex - this.model.stickyCount,\n\t\t\t\ttargetIndex - this.model.stickyCount,\n\t\t\t\tstickyStateChange,\n\t\t\t);\n\t\t}\n\t}\n\n\tpinEditor(editor: EditorInput): void {\n\t\tthis.getEditorTabsController(editor).pinEditor(editor);\n\t}\n\n\tstickEditor(editor: EditorInput): void {\n\t\tthis.unstickyEditorTabsControl.closeEditor(editor);\n\t\tthis.stickyEditorTabsControl.openEditor(editor);\n\n\t\tthis.handleTabBarsStateChange();\n\t}\n\n\tunstickEditor(editor: EditorInput): void {\n\t\tthis.stickyEditorTabsControl.closeEditor(editor);\n\t\tthis.unstickyEditorTabsControl.openEditor(editor);\n\n\t\tthis.handleTabBarsStateChange();\n\t}\n\n\tsetActive(isActive: boolean): void {\n\t\tthis.stickyEditorTabsControl.setActive(isActive);\n\t\tthis.unstickyEditorTabsControl.setActive(isActive);\n\t}\n\n\tupdateEditorSelections(): void {\n\t\tthis.stickyEditorTabsControl.updateEditorSelections();\n\t\tthis.unstickyEditorTabsControl.updateEditorSelections();\n\t}\n\n\tupdateEditorLabel(editor: EditorInput): void {\n\t\tthis.getEditorTabsController(editor).updateEditorLabel(editor);\n\t}\n\n\tupdateEditorDirty(editor: EditorInput): void {\n\t\tthis.getEditorTabsController(editor).updateEditorDirty(editor);\n\t}\n\n\tupdateOptions(\n\t\toldOptions: IEditorPartOptions,\n\t\tnewOptions: IEditorPartOptions,\n\t): void {\n\t\tthis.stickyEditorTabsControl.updateOptions(oldOptions, newOptions);\n\t\tthis.unstickyEditorTabsControl.updateOptions(oldOptions, newOptions);\n\t}\n\n\tlayout(dimensions: IEditorTitleControlDimensions): Dimension {\n\t\tconst stickyDimensions =\n\t\t\tthis.stickyEditorTabsControl.layout(dimensions);\n\t\tconst unstickyAvailableDimensions = {\n\t\t\tcontainer: dimensions.container,\n\t\t\tavailable: new Dimension(\n\t\t\t\tdimensions.available.width,\n\t\t\t\tdimensions.available.height - stickyDimensions.height,\n\t\t\t),\n\t\t};\n\t\tconst unstickyDimensions = this.unstickyEditorTabsControl.layout(\n\t\t\tunstickyAvailableDimensions,\n\t\t);\n\n\t\treturn new Dimension(\n\t\t\tdimensions.container.width,\n\t\t\tstickyDimensions.height + unstickyDimensions.height,\n\t\t);\n\t}\n\n\tgetHeight(): number {\n\t\treturn (\n\t\t\tthis.stickyEditorTabsControl.getHeight() +\n\t\t\tthis.unstickyEditorTabsControl.getHeight()\n\t\t);\n\t}\n\n\toverride dispose(): void {\n\t\tthis.parent.classList.toggle(\"two-tab-bars\", false);\n\n\t\tsuper.dispose();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
