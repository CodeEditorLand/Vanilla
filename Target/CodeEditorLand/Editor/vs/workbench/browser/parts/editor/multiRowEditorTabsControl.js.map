{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/editor/multiRowEditorTabsControl.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Dimension } from '../../../../base/browser/dom.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IEditorGroupsView, IEditorGroupView, IEditorPartsView, IInternalEditorOpenOptions } from './editor.js';\nimport { IEditorTabsControl } from './editorTabsControl.js';\nimport { MultiEditorTabsControl } from './multiEditorTabsControl.js';\nimport { IEditorPartOptions } from '../../../common/editor.js';\nimport { EditorInput } from '../../../common/editor/editorInput.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { StickyEditorGroupModel, UnstickyEditorGroupModel } from '../../../common/editor/filteredEditorGroupModel.js';\nimport { IEditorTitleControlDimensions } from './editorTitleControl.js';\nimport { IReadonlyEditorGroupModel } from '../../../common/editor/editorGroupModel.js';\n\nexport class MultiRowEditorControl extends Disposable implements IEditorTabsControl {\n\n\tprivate readonly stickyEditorTabsControl: IEditorTabsControl;\n\tprivate readonly unstickyEditorTabsControl: IEditorTabsControl;\n\n\tprivate activeControl: IEditorTabsControl | undefined;\n\n\tconstructor(\n\t\tprivate readonly parent: HTMLElement,\n\t\teditorPartsView: IEditorPartsView,\n\t\tprivate readonly groupsView: IEditorGroupsView,\n\t\tprivate readonly groupView: IEditorGroupView,\n\t\tprivate readonly model: IReadonlyEditorGroupModel,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\n\t\tconst stickyModel = this._register(new StickyEditorGroupModel(this.model));\n\t\tconst unstickyModel = this._register(new UnstickyEditorGroupModel(this.model));\n\n\t\tthis.stickyEditorTabsControl = this._register(this.instantiationService.createInstance(MultiEditorTabsControl, this.parent, editorPartsView, this.groupsView, this.groupView, stickyModel));\n\t\tthis.unstickyEditorTabsControl = this._register(this.instantiationService.createInstance(MultiEditorTabsControl, this.parent, editorPartsView, this.groupsView, this.groupView, unstickyModel));\n\n\t\tthis.handleTabBarsStateChange();\n\t}\n\n\tprivate handleTabBarsStateChange(): void {\n\t\tthis.activeControl = this.model.activeEditor ? this.getEditorTabsController(this.model.activeEditor) : undefined;\n\t\tthis.handleTabBarsLayoutChange();\n\t}\n\n\tprivate handleTabBarsLayoutChange(): void {\n\t\tif (this.groupView.count === 0) {\n\t\t\t// Do nothing as no tab bar is visible\n\t\t\treturn;\n\t\t}\n\n\t\tconst hadTwoTabBars = this.parent.classList.contains('two-tab-bars');\n\t\tconst hasTwoTabBars = this.groupView.count !== this.groupView.stickyCount && this.groupView.stickyCount > 0;\n\n\t\t// Ensure action toolbar is only visible once\n\t\tthis.parent.classList.toggle('two-tab-bars', hasTwoTabBars);\n\n\t\tif (hadTwoTabBars !== hasTwoTabBars) {\n\t\t\tthis.groupView.relayout();\n\t\t}\n\t}\n\n\tprivate didActiveControlChange() {\n\t\treturn this.activeControl !== (this.model.activeEditor ? this.getEditorTabsController(this.model.activeEditor) : undefined);\n\t}\n\n\tprivate getEditorTabsController(editor: EditorInput): IEditorTabsControl {\n\t\treturn this.model.isSticky(editor) ? this.stickyEditorTabsControl : this.unstickyEditorTabsControl;\n\t}\n\n\topenEditor(editor: EditorInput, options: IInternalEditorOpenOptions): boolean {\n\t\tconst didActiveControlChange = this.didActiveControlChange();\n\t\tconst didOpenEditorChange = this.getEditorTabsController(editor).openEditor(editor, options);\n\n\t\tconst didChange = didOpenEditorChange || didActiveControlChange;\n\t\tif (didChange) {\n\t\t\tthis.handleOpenedEditors();\n\t\t}\n\t\treturn didChange;\n\t}\n\n\topenEditors(editors: EditorInput[]): boolean {\n\t\tconst stickyEditors = editors.filter(e => this.model.isSticky(e));\n\t\tconst unstickyEditors = editors.filter(e => !this.model.isSticky(e));\n\n\t\tconst didActiveControlChange = this.didActiveControlChange();\n\t\tconst didChangeOpenEditorsSticky = this.stickyEditorTabsControl.openEditors(stickyEditors);\n\t\tconst didChangeOpenEditorsUnSticky = this.unstickyEditorTabsControl.openEditors(unstickyEditors);\n\n\t\tconst didChange = didChangeOpenEditorsSticky || didChangeOpenEditorsUnSticky || didActiveControlChange;\n\t\tif (didChange) {\n\t\t\tthis.handleOpenedEditors();\n\t\t}\n\n\t\treturn didChange;\n\t}\n\n\tprivate handleOpenedEditors(): void {\n\t\tthis.handleTabBarsStateChange();\n\t}\n\n\tbeforeCloseEditor(editor: EditorInput): void {\n\t\tthis.getEditorTabsController(editor).beforeCloseEditor(editor);\n\t}\n\n\tcloseEditor(editor: EditorInput): void {\n\t\t// Has to be called on both tab bars as the editor could be either sticky or not\n\t\tthis.stickyEditorTabsControl.closeEditor(editor);\n\t\tthis.unstickyEditorTabsControl.closeEditor(editor);\n\n\t\tthis.handleClosedEditors();\n\t}\n\n\tcloseEditors(editors: EditorInput[]): void {\n\t\tconst stickyEditors = editors.filter(e => this.model.isSticky(e));\n\t\tconst unstickyEditors = editors.filter(e => !this.model.isSticky(e));\n\n\t\tthis.stickyEditorTabsControl.closeEditors(stickyEditors);\n\t\tthis.unstickyEditorTabsControl.closeEditors(unstickyEditors);\n\n\t\tthis.handleClosedEditors();\n\t}\n\n\tprivate handleClosedEditors(): void {\n\t\tthis.handleTabBarsStateChange();\n\t}\n\n\tmoveEditor(editor: EditorInput, fromIndex: number, targetIndex: number, stickyStateChange: boolean): void {\n\t\tif (stickyStateChange) {\n\t\t\t// If sticky state changes, move editor between tab bars\n\t\t\tif (this.model.isSticky(editor)) {\n\t\t\t\tthis.stickyEditorTabsControl.openEditor(editor);\n\t\t\t\tthis.unstickyEditorTabsControl.closeEditor(editor);\n\t\t\t} else {\n\t\t\t\tthis.stickyEditorTabsControl.closeEditor(editor);\n\t\t\t\tthis.unstickyEditorTabsControl.openEditor(editor);\n\t\t\t}\n\n\t\t\tthis.handleTabBarsStateChange();\n\n\t\t} else {\n\t\t\tif (this.model.isSticky(editor)) {\n\t\t\t\tthis.stickyEditorTabsControl.moveEditor(editor, fromIndex, targetIndex, stickyStateChange);\n\t\t\t} else {\n\t\t\t\tthis.unstickyEditorTabsControl.moveEditor(editor, fromIndex - this.model.stickyCount, targetIndex - this.model.stickyCount, stickyStateChange);\n\t\t\t}\n\t\t}\n\t}\n\n\tpinEditor(editor: EditorInput): void {\n\t\tthis.getEditorTabsController(editor).pinEditor(editor);\n\t}\n\n\tstickEditor(editor: EditorInput): void {\n\t\tthis.unstickyEditorTabsControl.closeEditor(editor);\n\t\tthis.stickyEditorTabsControl.openEditor(editor);\n\n\t\tthis.handleTabBarsStateChange();\n\t}\n\n\tunstickEditor(editor: EditorInput): void {\n\t\tthis.stickyEditorTabsControl.closeEditor(editor);\n\t\tthis.unstickyEditorTabsControl.openEditor(editor);\n\n\t\tthis.handleTabBarsStateChange();\n\t}\n\n\tsetActive(isActive: boolean): void {\n\t\tthis.stickyEditorTabsControl.setActive(isActive);\n\t\tthis.unstickyEditorTabsControl.setActive(isActive);\n\t}\n\n\tupdateEditorSelections(): void {\n\t\tthis.stickyEditorTabsControl.updateEditorSelections();\n\t\tthis.unstickyEditorTabsControl.updateEditorSelections();\n\t}\n\n\tupdateEditorLabel(editor: EditorInput): void {\n\t\tthis.getEditorTabsController(editor).updateEditorLabel(editor);\n\t}\n\n\tupdateEditorDirty(editor: EditorInput): void {\n\t\tthis.getEditorTabsController(editor).updateEditorDirty(editor);\n\t}\n\n\tupdateOptions(oldOptions: IEditorPartOptions, newOptions: IEditorPartOptions): void {\n\t\tthis.stickyEditorTabsControl.updateOptions(oldOptions, newOptions);\n\t\tthis.unstickyEditorTabsControl.updateOptions(oldOptions, newOptions);\n\t}\n\n\tlayout(dimensions: IEditorTitleControlDimensions): Dimension {\n\t\tconst stickyDimensions = this.stickyEditorTabsControl.layout(dimensions);\n\t\tconst unstickyAvailableDimensions = {\n\t\t\tcontainer: dimensions.container,\n\t\t\tavailable: new Dimension(dimensions.available.width, dimensions.available.height - stickyDimensions.height)\n\t\t};\n\t\tconst unstickyDimensions = this.unstickyEditorTabsControl.layout(unstickyAvailableDimensions);\n\n\t\treturn new Dimension(\n\t\t\tdimensions.container.width,\n\t\t\tstickyDimensions.height + unstickyDimensions.height\n\t\t);\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.stickyEditorTabsControl.getHeight() + this.unstickyEditorTabsControl.getHeight();\n\t}\n\n\toverride dispose(): void {\n\t\tthis.parent.classList.toggle('two-tab-bars', false);\n\n\t\tsuper.dispose();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
