{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/editor/editorStatus.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/editorstatus.css\";\nimport {\n\tgetWindowById,\n\trunAtThisOrScheduleAtNextAnimationFrame,\n} from \"../../../../base/browser/dom.js\";\nimport { Action } from \"../../../../base/common/actions.js\";\nimport { Promises, timeout } from \"../../../../base/common/async.js\";\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport { KeyChord, KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\tMutableDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { deepClone } from \"../../../../base/common/objects.js\";\nimport { Language } from \"../../../../base/common/platform.js\";\nimport {\n\tbasename,\n\textname,\n\tisEqual,\n} from \"../../../../base/common/resources.js\";\nimport {\n\tcompare,\n\tformat,\n\tsplitLines,\n} from \"../../../../base/common/strings.js\";\nimport {\n\tareFunctions,\n\tassertIsDefined,\n} from \"../../../../base/common/types.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { TabFocus } from \"../../../../editor/browser/config/tabFocus.js\";\nimport {\n\ttype ICodeEditor,\n\tgetCodeEditor,\n} from \"../../../../editor/browser/editorBrowser.js\";\nimport type { ServicesAccessor } from \"../../../../editor/browser/editorExtensions.js\";\nimport {\n\ttype ConfigurationChangedEvent,\n\tEditorOption,\n} from \"../../../../editor/common/config/editorOptions.js\";\nimport { Range } from \"../../../../editor/common/core/range.js\";\nimport { Selection } from \"../../../../editor/common/core/selection.js\";\nimport type { IEditorAction } from \"../../../../editor/common/editorCommon.js\";\nimport {\n\ttype ILanguageSelection,\n\tILanguageService,\n} from \"../../../../editor/common/languages/language.js\";\nimport { EndOfLineSequence } from \"../../../../editor/common/model.js\";\nimport { getIconClassesForLanguageId } from \"../../../../editor/common/services/getIconClasses.js\";\nimport { ITextResourceConfigurationService } from \"../../../../editor/common/services/textResourceConfiguration.js\";\nimport {\n\tChangeTabDisplaySize,\n\tDetectIndentation,\n\tIndentUsingSpaces,\n\tIndentUsingTabs,\n\tIndentationToSpacesAction,\n\tIndentationToTabsAction,\n} from \"../../../../editor/contrib/indentation/browser/indentation.js\";\nimport { TrimTrailingWhitespaceAction } from \"../../../../editor/contrib/linesOperations/browser/linesOperations.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport { Action2 } from \"../../../../platform/actions/common/actions.js\";\nimport {\n\tCommandsRegistry,\n\tICommandService,\n} from \"../../../../platform/commands/common/commands.js\";\nimport {\n\tConfigurationTarget,\n\tIConfigurationService,\n} from \"../../../../platform/configuration/common/configuration.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IExtensionGalleryService } from \"../../../../platform/extensionManagement/common/extensionManagement.js\";\nimport {\n\tFILES_ASSOCIATIONS_CONFIG,\n\tIFileService,\n} from \"../../../../platform/files/common/files.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport {\n\ttype IMarker,\n\tIMarkerData,\n\tIMarkerService,\n\tMarkerSeverity,\n} from \"../../../../platform/markers/common/markers.js\";\nimport {\n\tIQuickInputService,\n\ttype IQuickPickItem,\n\ttype QuickPickInput,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport {\n\tEditorResourceAccessor,\n\ttype IEditorPane,\n\ttype IFileEditorInput,\n\tSideBySideEditor,\n} from \"../../../common/editor.js\";\nimport type { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport { SideBySideEditorInput } from \"../../../common/editor/sideBySideEditorInput.js\";\nimport {\n\tIEditorGroupsService,\n\ttype IEditorPart,\n} from \"../../../services/editor/common/editorGroupsService.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport {\n\ttype AutomaticLanguageDetectionLikelyWrongClassification,\n\tAutomaticLanguageDetectionLikelyWrongId,\n\ttype IAutomaticLanguageDetectionLikelyWrongData,\n\tILanguageDetectionService,\n} from \"../../../services/languageDetection/common/languageDetectionWorkerService.js\";\nimport { IPreferencesService } from \"../../../services/preferences/common/preferences.js\";\nimport {\n\ttype IStatusbarEntry,\n\ttype IStatusbarEntryAccessor,\n\tIStatusbarService,\n\tStatusbarAlignment,\n} from \"../../../services/statusbar/browser/statusbar.js\";\nimport { SUPPORTED_ENCODINGS } from \"../../../services/textfile/common/encoding.js\";\nimport {\n\tEncodingMode,\n\ttype IEncodingSupport,\n\ttype ILanguageSupport,\n\tITextFileService,\n} from \"../../../services/textfile/common/textfiles.js\";\nimport { UntitledTextEditorInput } from \"../../../services/untitled/common/untitledTextEditorInput.js\";\nimport { BinaryResourceDiffEditor } from \"./binaryDiffEditor.js\";\nimport { BaseBinaryResourceEditor } from \"./binaryEditor.js\";\n\nclass SideBySideEditorEncodingSupport implements IEncodingSupport {\n\tconstructor(\n\t\tprivate primary: IEncodingSupport,\n\t\tprivate secondary: IEncodingSupport,\n\t) {}\n\n\tgetEncoding(): string | undefined {\n\t\treturn this.primary.getEncoding(); // always report from modified (right hand) side\n\t}\n\n\tasync setEncoding(encoding: string, mode: EncodingMode): Promise<void> {\n\t\tawait Promises.settled(\n\t\t\t[this.primary, this.secondary].map((editor) =>\n\t\t\t\teditor.setEncoding(encoding, mode),\n\t\t\t),\n\t\t);\n\t}\n}\n\nclass SideBySideEditorLanguageSupport implements ILanguageSupport {\n\tconstructor(\n\t\tprivate primary: ILanguageSupport,\n\t\tprivate secondary: ILanguageSupport,\n\t) {}\n\n\tsetLanguageId(languageId: string, source?: string): void {\n\t\t[this.primary, this.secondary].forEach((editor) =>\n\t\t\teditor.setLanguageId(languageId, source),\n\t\t);\n\t}\n}\n\nfunction toEditorWithEncodingSupport(\n\tinput: EditorInput,\n): IEncodingSupport | null {\n\t// Untitled Text Editor\n\tif (input instanceof UntitledTextEditorInput) {\n\t\treturn input;\n\t}\n\n\t// Side by Side (diff) Editor\n\tif (input instanceof SideBySideEditorInput) {\n\t\tconst primaryEncodingSupport = toEditorWithEncodingSupport(\n\t\t\tinput.primary,\n\t\t);\n\t\tconst secondaryEncodingSupport = toEditorWithEncodingSupport(\n\t\t\tinput.secondary,\n\t\t);\n\n\t\tif (primaryEncodingSupport && secondaryEncodingSupport) {\n\t\t\treturn new SideBySideEditorEncodingSupport(\n\t\t\t\tprimaryEncodingSupport,\n\t\t\t\tsecondaryEncodingSupport,\n\t\t\t);\n\t\t}\n\n\t\treturn primaryEncodingSupport;\n\t}\n\n\t// File or Resource Editor\n\tconst encodingSupport = input as IFileEditorInput;\n\tif (\n\t\tareFunctions(encodingSupport.setEncoding, encodingSupport.getEncoding)\n\t) {\n\t\treturn encodingSupport;\n\t}\n\n\t// Unsupported for any other editor\n\treturn null;\n}\n\nfunction toEditorWithLanguageSupport(\n\tinput: EditorInput,\n): ILanguageSupport | null {\n\t// Untitled Text Editor\n\tif (input instanceof UntitledTextEditorInput) {\n\t\treturn input;\n\t}\n\n\t// Side by Side (diff) Editor\n\tif (input instanceof SideBySideEditorInput) {\n\t\tconst primaryLanguageSupport = toEditorWithLanguageSupport(\n\t\t\tinput.primary,\n\t\t);\n\t\tconst secondaryLanguageSupport = toEditorWithLanguageSupport(\n\t\t\tinput.secondary,\n\t\t);\n\n\t\tif (primaryLanguageSupport && secondaryLanguageSupport) {\n\t\t\treturn new SideBySideEditorLanguageSupport(\n\t\t\t\tprimaryLanguageSupport,\n\t\t\t\tsecondaryLanguageSupport,\n\t\t\t);\n\t\t}\n\n\t\treturn primaryLanguageSupport;\n\t}\n\n\t// File or Resource Editor\n\tconst languageSupport = input as IFileEditorInput;\n\tif (typeof languageSupport.setLanguageId === \"function\") {\n\t\treturn languageSupport;\n\t}\n\n\t// Unsupported for any other editor\n\treturn null;\n}\n\ninterface IEditorSelectionStatus {\n\tselections?: Selection[];\n\tcharactersSelected?: number;\n}\n\nclass StateChange {\n\tindentation = false;\n\tselectionStatus = false;\n\tlanguageId = false;\n\tlanguageStatus = false;\n\tencoding = false;\n\tEOL = false;\n\ttabFocusMode = false;\n\tcolumnSelectionMode = false;\n\tmetadata = false;\n\n\tcombine(other: StateChange) {\n\t\tthis.indentation = this.indentation || other.indentation;\n\t\tthis.selectionStatus = this.selectionStatus || other.selectionStatus;\n\t\tthis.languageId = this.languageId || other.languageId;\n\t\tthis.languageStatus = this.languageStatus || other.languageStatus;\n\t\tthis.encoding = this.encoding || other.encoding;\n\t\tthis.EOL = this.EOL || other.EOL;\n\t\tthis.tabFocusMode = this.tabFocusMode || other.tabFocusMode;\n\t\tthis.columnSelectionMode =\n\t\t\tthis.columnSelectionMode || other.columnSelectionMode;\n\t\tthis.metadata = this.metadata || other.metadata;\n\t}\n\n\thasChanges(): boolean {\n\t\treturn (\n\t\t\tthis.indentation ||\n\t\t\tthis.selectionStatus ||\n\t\t\tthis.languageId ||\n\t\t\tthis.languageStatus ||\n\t\t\tthis.encoding ||\n\t\t\tthis.EOL ||\n\t\t\tthis.tabFocusMode ||\n\t\t\tthis.columnSelectionMode ||\n\t\t\tthis.metadata\n\t\t);\n\t}\n}\n\ntype StateDelta =\n\t| { type: \"selectionStatus\"; selectionStatus: string | undefined }\n\t| { type: \"languageId\"; languageId: string | undefined }\n\t| { type: \"encoding\"; encoding: string | undefined }\n\t| { type: \"EOL\"; EOL: string | undefined }\n\t| { type: \"indentation\"; indentation: string | undefined }\n\t| { type: \"tabFocusMode\"; tabFocusMode: boolean }\n\t| { type: \"columnSelectionMode\"; columnSelectionMode: boolean }\n\t| { type: \"metadata\"; metadata: string | undefined };\n\nclass State {\n\tprivate _selectionStatus: string | undefined;\n\tget selectionStatus(): string | undefined {\n\t\treturn this._selectionStatus;\n\t}\n\n\tprivate _languageId: string | undefined;\n\tget languageId(): string | undefined {\n\t\treturn this._languageId;\n\t}\n\n\tprivate _encoding: string | undefined;\n\tget encoding(): string | undefined {\n\t\treturn this._encoding;\n\t}\n\n\tprivate _EOL: string | undefined;\n\tget EOL(): string | undefined {\n\t\treturn this._EOL;\n\t}\n\n\tprivate _indentation: string | undefined;\n\tget indentation(): string | undefined {\n\t\treturn this._indentation;\n\t}\n\n\tprivate _tabFocusMode: boolean | undefined;\n\tget tabFocusMode(): boolean | undefined {\n\t\treturn this._tabFocusMode;\n\t}\n\n\tprivate _columnSelectionMode: boolean | undefined;\n\tget columnSelectionMode(): boolean | undefined {\n\t\treturn this._columnSelectionMode;\n\t}\n\n\tprivate _metadata: string | undefined;\n\tget metadata(): string | undefined {\n\t\treturn this._metadata;\n\t}\n\n\tupdate(update: StateDelta): StateChange {\n\t\tconst change = new StateChange();\n\n\t\tswitch (update.type) {\n\t\t\tcase \"selectionStatus\":\n\t\t\t\tif (this._selectionStatus !== update.selectionStatus) {\n\t\t\t\t\tthis._selectionStatus = update.selectionStatus;\n\t\t\t\t\tchange.selectionStatus = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"indentation\":\n\t\t\t\tif (this._indentation !== update.indentation) {\n\t\t\t\t\tthis._indentation = update.indentation;\n\t\t\t\t\tchange.indentation = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"languageId\":\n\t\t\t\tif (this._languageId !== update.languageId) {\n\t\t\t\t\tthis._languageId = update.languageId;\n\t\t\t\t\tchange.languageId = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"encoding\":\n\t\t\t\tif (this._encoding !== update.encoding) {\n\t\t\t\t\tthis._encoding = update.encoding;\n\t\t\t\t\tchange.encoding = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"EOL\":\n\t\t\t\tif (this._EOL !== update.EOL) {\n\t\t\t\t\tthis._EOL = update.EOL;\n\t\t\t\t\tchange.EOL = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"tabFocusMode\":\n\t\t\t\tif (this._tabFocusMode !== update.tabFocusMode) {\n\t\t\t\t\tthis._tabFocusMode = update.tabFocusMode;\n\t\t\t\t\tchange.tabFocusMode = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"columnSelectionMode\":\n\t\t\t\tif (this._columnSelectionMode !== update.columnSelectionMode) {\n\t\t\t\t\tthis._columnSelectionMode = update.columnSelectionMode;\n\t\t\t\t\tchange.columnSelectionMode = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"metadata\":\n\t\t\t\tif (this._metadata !== update.metadata) {\n\t\t\t\t\tthis._metadata = update.metadata;\n\t\t\t\t\tchange.metadata = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn change;\n\t}\n}\n\nclass TabFocusMode extends Disposable {\n\tprivate readonly _onDidChange = this._register(new Emitter<boolean>());\n\treadonly onDidChange = this._onDidChange.event;\n\n\tconstructor(@IConfigurationService private readonly configurationService: IConfigurationService) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\n\t\tconst tabFocusModeConfig = configurationService.getValue<boolean>('editor.tabFocusMode') === true ? true : false;\n\t\tTabFocus.setTabFocusMode(tabFocusModeConfig);\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(\n\t\t\tTabFocus.onDidChangeTabFocus((tabFocusMode) =>\n\t\t\t\tthis._onDidChange.fire(tabFocusMode),\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (e.affectsConfiguration(\"editor.tabFocusMode\")) {\n\t\t\t\t\tconst tabFocusModeConfig =\n\t\t\t\t\t\tthis.configurationService.getValue<boolean>(\n\t\t\t\t\t\t\t\"editor.tabFocusMode\",\n\t\t\t\t\t\t) === true\n\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t: false;\n\t\t\t\t\tTabFocus.setTabFocusMode(tabFocusModeConfig);\n\n\t\t\t\t\tthis._onDidChange.fire(tabFocusModeConfig);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n}\n\nconst nlsSingleSelectionRange = localize(\n\t\"singleSelectionRange\",\n\t\"Ln {0}, Col {1} ({2} selected)\",\n);\nconst nlsSingleSelection = localize(\"singleSelection\", \"Ln {0}, Col {1}\");\nconst nlsMultiSelectionRange = localize(\n\t\"multiSelectionRange\",\n\t\"{0} selections ({1} characters selected)\",\n);\nconst nlsMultiSelection = localize(\"multiSelection\", \"{0} selections\");\nconst nlsEOLLF = localize(\"endOfLineLineFeed\", \"LF\");\nconst nlsEOLCRLF = localize(\"endOfLineCarriageReturnLineFeed\", \"CRLF\");\n\nclass EditorStatus extends Disposable {\n\tprivate readonly tabFocusModeElement = this._register(\n\t\tnew MutableDisposable<IStatusbarEntryAccessor>(),\n\t);\n\tprivate readonly columnSelectionModeElement = this._register(\n\t\tnew MutableDisposable<IStatusbarEntryAccessor>(),\n\t);\n\tprivate readonly indentationElement = this._register(\n\t\tnew MutableDisposable<IStatusbarEntryAccessor>(),\n\t);\n\tprivate readonly selectionElement = this._register(\n\t\tnew MutableDisposable<IStatusbarEntryAccessor>(),\n\t);\n\tprivate readonly encodingElement = this._register(\n\t\tnew MutableDisposable<IStatusbarEntryAccessor>(),\n\t);\n\tprivate readonly eolElement = this._register(\n\t\tnew MutableDisposable<IStatusbarEntryAccessor>(),\n\t);\n\tprivate readonly languageElement = this._register(\n\t\tnew MutableDisposable<IStatusbarEntryAccessor>(),\n\t);\n\tprivate readonly metadataElement = this._register(\n\t\tnew MutableDisposable<IStatusbarEntryAccessor>(),\n\t);\n\n\tprivate readonly currentMarkerStatus = this._register(\n\t\tthis.instantiationService.createInstance(\n\t\t\tShowCurrentMarkerInStatusbarContribution,\n\t\t),\n\t);\n\tprivate readonly tabFocusMode = this._register(\n\t\tthis.instantiationService.createInstance(TabFocusMode),\n\t);\n\n\tprivate readonly state = new State();\n\tprivate toRender: StateChange | undefined = undefined;\n\n\tprivate readonly activeEditorListeners = this._register(\n\t\tnew DisposableStore(),\n\t);\n\tprivate readonly delayedRender = this._register(new MutableDisposable());\n\n\tconstructor(\n\t\tprivate readonly targetWindowId: number,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t\t@IStatusbarService private readonly statusbarService: IStatusbarService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerCommands();\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(\n\t\t\tthis.editorService.onDidActiveEditorChange(() =>\n\t\t\t\tthis.updateStatusBar(),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.textFileService.untitled.onDidChangeEncoding((model) =>\n\t\t\t\tthis.onResourceEncodingChange(model.resource),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.textFileService.files.onDidChangeEncoding((model) =>\n\t\t\t\tthis.onResourceEncodingChange(model.resource),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tEvent.runAndSubscribe(\n\t\t\t\tthis.tabFocusMode.onDidChange,\n\t\t\t\t(tabFocusMode) => {\n\t\t\t\t\tif (tabFocusMode !== undefined) {\n\t\t\t\t\t\tthis.onTabFocusModeChange(tabFocusMode);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.onTabFocusModeChange(\n\t\t\t\t\t\t\tthis.configurationService.getValue(\n\t\t\t\t\t\t\t\t\"editor.tabFocusMode\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate registerCommands(): void {\n\t\tthis._register(\n\t\t\tCommandsRegistry.registerCommand({\n\t\t\t\tid: `changeEditorIndentation${this.targetWindowId}`,\n\t\t\t\thandler: () => this.showIndentationPicker(),\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate async showIndentationPicker(): Promise<unknown> {\n\t\tconst activeTextEditorControl = getCodeEditor(\n\t\t\tthis.editorService.activeTextEditorControl,\n\t\t);\n\t\tif (!activeTextEditorControl) {\n\t\t\treturn this.quickInputService.pick([\n\t\t\t\t{\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\"noEditor\",\n\t\t\t\t\t\t\"No text editor active at this time\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t]);\n\t\t}\n\n\t\tif (this.editorService.activeEditor?.isReadonly()) {\n\t\t\treturn this.quickInputService.pick([\n\t\t\t\t{\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\"noWritableCodeEditor\",\n\t\t\t\t\t\t\"The active code editor is read-only.\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t]);\n\t\t}\n\n\t\tconst picks: QuickPickInput<IQuickPickItem & { run(): void }>[] = [\n\t\t\tassertIsDefined(\n\t\t\t\tactiveTextEditorControl.getAction(IndentUsingSpaces.ID),\n\t\t\t),\n\t\t\tassertIsDefined(\n\t\t\t\tactiveTextEditorControl.getAction(IndentUsingTabs.ID),\n\t\t\t),\n\t\t\tassertIsDefined(\n\t\t\t\tactiveTextEditorControl.getAction(ChangeTabDisplaySize.ID),\n\t\t\t),\n\t\t\tassertIsDefined(\n\t\t\t\tactiveTextEditorControl.getAction(DetectIndentation.ID),\n\t\t\t),\n\t\t\tassertIsDefined(\n\t\t\t\tactiveTextEditorControl.getAction(IndentationToSpacesAction.ID),\n\t\t\t),\n\t\t\tassertIsDefined(\n\t\t\t\tactiveTextEditorControl.getAction(IndentationToTabsAction.ID),\n\t\t\t),\n\t\t\tassertIsDefined(\n\t\t\t\tactiveTextEditorControl.getAction(\n\t\t\t\t\tTrimTrailingWhitespaceAction.ID,\n\t\t\t\t),\n\t\t\t),\n\t\t].map((a: IEditorAction) => {\n\t\t\treturn {\n\t\t\t\tid: a.id,\n\t\t\t\tlabel: a.label,\n\t\t\t\tdetail:\n\t\t\t\t\tLanguage.isDefaultVariant() || a.label === a.alias\n\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t: a.alias,\n\t\t\t\trun: () => {\n\t\t\t\t\tactiveTextEditorControl.focus();\n\t\t\t\t\ta.run();\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\tpicks.splice(3, 0, {\n\t\t\ttype: \"separator\",\n\t\t\tlabel: localize(\"indentConvert\", \"convert file\"),\n\t\t});\n\t\tpicks.unshift({\n\t\t\ttype: \"separator\",\n\t\t\tlabel: localize(\"indentView\", \"change view\"),\n\t\t});\n\n\t\tconst action = await this.quickInputService.pick(picks, {\n\t\t\tplaceHolder: localize(\"pickAction\", \"Select Action\"),\n\t\t\tmatchOnDetail: true,\n\t\t});\n\t\treturn action?.run();\n\t}\n\n\tprivate updateTabFocusModeElement(visible: boolean): void {\n\t\tif (visible) {\n\t\t\tif (!this.tabFocusModeElement.value) {\n\t\t\t\tconst text = localize(\"tabFocusModeEnabled\", \"Tab Moves Focus\");\n\t\t\t\tthis.tabFocusModeElement.value = this.statusbarService.addEntry(\n\t\t\t\t\t{\n\t\t\t\t\t\tname: localize(\n\t\t\t\t\t\t\t\"status.editor.tabFocusMode\",\n\t\t\t\t\t\t\t\"Accessibility Mode\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttext,\n\t\t\t\t\t\tariaLabel: text,\n\t\t\t\t\t\ttooltip: localize(\n\t\t\t\t\t\t\t\"disableTabMode\",\n\t\t\t\t\t\t\t\"Disable Accessibility Mode\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcommand: \"editor.action.toggleTabFocusMode\",\n\t\t\t\t\t\tkind: \"prominent\",\n\t\t\t\t\t},\n\t\t\t\t\t\"status.editor.tabFocusMode\",\n\t\t\t\t\tStatusbarAlignment.RIGHT,\n\t\t\t\t\t100.7,\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.tabFocusModeElement.clear();\n\t\t}\n\t}\n\n\tprivate updateColumnSelectionModeElement(visible: boolean): void {\n\t\tif (visible) {\n\t\t\tif (!this.columnSelectionModeElement.value) {\n\t\t\t\tconst text = localize(\n\t\t\t\t\t\"columnSelectionModeEnabled\",\n\t\t\t\t\t\"Column Selection\",\n\t\t\t\t);\n\t\t\t\tthis.columnSelectionModeElement.value =\n\t\t\t\t\tthis.statusbarService.addEntry(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: localize(\n\t\t\t\t\t\t\t\t\"status.editor.columnSelectionMode\",\n\t\t\t\t\t\t\t\t\"Column Selection Mode\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttext,\n\t\t\t\t\t\t\tariaLabel: text,\n\t\t\t\t\t\t\ttooltip: localize(\n\t\t\t\t\t\t\t\t\"disableColumnSelectionMode\",\n\t\t\t\t\t\t\t\t\"Disable Column Selection Mode\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tcommand: \"editor.action.toggleColumnSelection\",\n\t\t\t\t\t\t\tkind: \"prominent\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"status.editor.columnSelectionMode\",\n\t\t\t\t\t\tStatusbarAlignment.RIGHT,\n\t\t\t\t\t\t100.8,\n\t\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.columnSelectionModeElement.clear();\n\t\t}\n\t}\n\n\tprivate updateSelectionElement(text: string | undefined): void {\n\t\tif (!text) {\n\t\t\tthis.selectionElement.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst editorURI = getCodeEditor(\n\t\t\tthis.editorService.activeTextEditorControl,\n\t\t)?.getModel()?.uri;\n\t\tif (editorURI?.scheme === Schemas.vscodeNotebookCell) {\n\t\t\tthis.selectionElement.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst props: IStatusbarEntry = {\n\t\t\tname: localize(\"status.editor.selection\", \"Editor Selection\"),\n\t\t\ttext,\n\t\t\tariaLabel: text,\n\t\t\ttooltip: localize(\"gotoLine\", \"Go to Line/Column\"),\n\t\t\tcommand: \"workbench.action.gotoLine\",\n\t\t};\n\n\t\tthis.updateElement(\n\t\t\tthis.selectionElement,\n\t\t\tprops,\n\t\t\t\"status.editor.selection\",\n\t\t\tStatusbarAlignment.RIGHT,\n\t\t\t100.5,\n\t\t);\n\t}\n\n\tprivate updateIndentationElement(text: string | undefined): void {\n\t\tif (!text) {\n\t\t\tthis.indentationElement.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst editorURI = getCodeEditor(\n\t\t\tthis.editorService.activeTextEditorControl,\n\t\t)?.getModel()?.uri;\n\t\tif (editorURI?.scheme === Schemas.vscodeNotebookCell) {\n\t\t\tthis.indentationElement.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst props: IStatusbarEntry = {\n\t\t\tname: localize(\"status.editor.indentation\", \"Editor Indentation\"),\n\t\t\ttext,\n\t\t\tariaLabel: text,\n\t\t\ttooltip: localize(\"selectIndentation\", \"Select Indentation\"),\n\t\t\tcommand: `changeEditorIndentation${this.targetWindowId}`,\n\t\t};\n\n\t\tthis.updateElement(\n\t\t\tthis.indentationElement,\n\t\t\tprops,\n\t\t\t\"status.editor.indentation\",\n\t\t\tStatusbarAlignment.RIGHT,\n\t\t\t100.4,\n\t\t);\n\t}\n\n\tprivate updateEncodingElement(text: string | undefined): void {\n\t\tif (!text) {\n\t\t\tthis.encodingElement.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst props: IStatusbarEntry = {\n\t\t\tname: localize(\"status.editor.encoding\", \"Editor Encoding\"),\n\t\t\ttext,\n\t\t\tariaLabel: text,\n\t\t\ttooltip: localize(\"selectEncoding\", \"Select Encoding\"),\n\t\t\tcommand: \"workbench.action.editor.changeEncoding\",\n\t\t};\n\n\t\tthis.updateElement(\n\t\t\tthis.encodingElement,\n\t\t\tprops,\n\t\t\t\"status.editor.encoding\",\n\t\t\tStatusbarAlignment.RIGHT,\n\t\t\t100.3,\n\t\t);\n\t}\n\n\tprivate updateEOLElement(text: string | undefined): void {\n\t\tif (!text) {\n\t\t\tthis.eolElement.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst props: IStatusbarEntry = {\n\t\t\tname: localize(\"status.editor.eol\", \"Editor End of Line\"),\n\t\t\ttext,\n\t\t\tariaLabel: text,\n\t\t\ttooltip: localize(\"selectEOL\", \"Select End of Line Sequence\"),\n\t\t\tcommand: \"workbench.action.editor.changeEOL\",\n\t\t};\n\n\t\tthis.updateElement(\n\t\t\tthis.eolElement,\n\t\t\tprops,\n\t\t\t\"status.editor.eol\",\n\t\t\tStatusbarAlignment.RIGHT,\n\t\t\t100.2,\n\t\t);\n\t}\n\n\tprivate updateLanguageIdElement(text: string | undefined): void {\n\t\tif (!text) {\n\t\t\tthis.languageElement.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst props: IStatusbarEntry = {\n\t\t\tname: localize(\"status.editor.mode\", \"Editor Language\"),\n\t\t\ttext,\n\t\t\tariaLabel: text,\n\t\t\ttooltip: localize(\"selectLanguageMode\", \"Select Language Mode\"),\n\t\t\tcommand: \"workbench.action.editor.changeLanguageMode\",\n\t\t};\n\n\t\tthis.updateElement(\n\t\t\tthis.languageElement,\n\t\t\tprops,\n\t\t\t\"status.editor.mode\",\n\t\t\tStatusbarAlignment.RIGHT,\n\t\t\t100.1,\n\t\t);\n\t}\n\n\tprivate updateMetadataElement(text: string | undefined): void {\n\t\tif (!text) {\n\t\t\tthis.metadataElement.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst props: IStatusbarEntry = {\n\t\t\tname: localize(\"status.editor.info\", \"File Information\"),\n\t\t\ttext,\n\t\t\tariaLabel: text,\n\t\t\ttooltip: localize(\"fileInfo\", \"File Information\"),\n\t\t};\n\n\t\tthis.updateElement(\n\t\t\tthis.metadataElement,\n\t\t\tprops,\n\t\t\t\"status.editor.info\",\n\t\t\tStatusbarAlignment.RIGHT,\n\t\t\t100,\n\t\t);\n\t}\n\n\tprivate updateElement(\n\t\telement: MutableDisposable<IStatusbarEntryAccessor>,\n\t\tprops: IStatusbarEntry,\n\t\tid: string,\n\t\talignment: StatusbarAlignment,\n\t\tpriority: number,\n\t) {\n\t\tif (element.value) {\n\t\t\telement.value.update(props);\n\t\t} else {\n\t\t\telement.value = this.statusbarService.addEntry(\n\t\t\t\tprops,\n\t\t\t\tid,\n\t\t\t\talignment,\n\t\t\t\tpriority,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate updateState(update: StateDelta): void {\n\t\tconst changed = this.state.update(update);\n\t\tif (!changed.hasChanges()) {\n\t\t\treturn; // Nothing really changed\n\t\t}\n\n\t\tif (this.toRender) {\n\t\t\tthis.toRender.combine(changed);\n\t\t} else {\n\t\t\tthis.toRender = changed;\n\n\t\t\tthis.delayedRender.value = runAtThisOrScheduleAtNextAnimationFrame(\n\t\t\t\tgetWindowById(this.targetWindowId, true).window,\n\t\t\t\t() => {\n\t\t\t\t\tthis.delayedRender.clear();\n\n\t\t\t\t\tconst toRender = this.toRender;\n\t\t\t\t\tthis.toRender = undefined;\n\t\t\t\t\tif (toRender) {\n\t\t\t\t\t\tthis.doRenderNow();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate doRenderNow(): void {\n\t\tthis.updateTabFocusModeElement(!!this.state.tabFocusMode);\n\t\tthis.updateColumnSelectionModeElement(!!this.state.columnSelectionMode);\n\t\tthis.updateIndentationElement(this.state.indentation);\n\t\tthis.updateSelectionElement(this.state.selectionStatus);\n\t\tthis.updateEncodingElement(this.state.encoding);\n\t\tthis.updateEOLElement(\n\t\t\tthis.state.EOL\n\t\t\t\t? this.state.EOL === \"\\r\\n\"\n\t\t\t\t\t? nlsEOLCRLF\n\t\t\t\t\t: nlsEOLLF\n\t\t\t\t: undefined,\n\t\t);\n\t\tthis.updateLanguageIdElement(this.state.languageId);\n\t\tthis.updateMetadataElement(this.state.metadata);\n\t}\n\n\tprivate getSelectionLabel(\n\t\tinfo: IEditorSelectionStatus,\n\t): string | undefined {\n\t\tif (!info || !info.selections) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (info.selections.length === 1) {\n\t\t\tif (info.charactersSelected) {\n\t\t\t\treturn format(\n\t\t\t\t\tnlsSingleSelectionRange,\n\t\t\t\t\tinfo.selections[0].positionLineNumber,\n\t\t\t\t\tinfo.selections[0].positionColumn,\n\t\t\t\t\tinfo.charactersSelected,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn format(\n\t\t\t\tnlsSingleSelection,\n\t\t\t\tinfo.selections[0].positionLineNumber,\n\t\t\t\tinfo.selections[0].positionColumn,\n\t\t\t);\n\t\t}\n\n\t\tif (info.charactersSelected) {\n\t\t\treturn format(\n\t\t\t\tnlsMultiSelectionRange,\n\t\t\t\tinfo.selections.length,\n\t\t\t\tinfo.charactersSelected,\n\t\t\t);\n\t\t}\n\n\t\tif (info.selections.length > 0) {\n\t\t\treturn format(nlsMultiSelection, info.selections.length);\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate updateStatusBar(): void {\n\t\tconst activeInput = this.editorService.activeEditor;\n\t\tconst activeEditorPane = this.editorService.activeEditorPane;\n\t\tconst activeCodeEditor = activeEditorPane\n\t\t\t? (getCodeEditor(activeEditorPane.getControl()) ?? undefined)\n\t\t\t: undefined;\n\n\t\t// Update all states\n\t\tthis.onColumnSelectionModeChange(activeCodeEditor);\n\t\tthis.onSelectionChange(activeCodeEditor);\n\t\tthis.onLanguageChange(activeCodeEditor, activeInput);\n\t\tthis.onEOLChange(activeCodeEditor);\n\t\tthis.onEncodingChange(activeEditorPane, activeCodeEditor);\n\t\tthis.onIndentationChange(activeCodeEditor);\n\t\tthis.onMetadataChange(activeEditorPane);\n\t\tthis.currentMarkerStatus.update(activeCodeEditor);\n\n\t\t// Dispose old active editor listeners\n\t\tthis.activeEditorListeners.clear();\n\n\t\t// Attach new listeners to active editor\n\t\tif (activeEditorPane) {\n\t\t\tthis.activeEditorListeners.add(\n\t\t\t\tactiveEditorPane.onDidChangeControl(() => {\n\t\t\t\t\t// Since our editor status is mainly observing the\n\t\t\t\t\t// active editor control, do a full update whenever\n\t\t\t\t\t// the control changes.\n\t\t\t\t\tthis.updateStatusBar();\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\t// Attach new listeners to active code editor\n\t\tif (activeCodeEditor) {\n\t\t\t// Hook Listener for Configuration changes\n\t\t\tthis.activeEditorListeners.add(\n\t\t\t\tactiveCodeEditor.onDidChangeConfiguration(\n\t\t\t\t\t(event: ConfigurationChangedEvent) => {\n\t\t\t\t\t\tif (event.hasChanged(EditorOption.columnSelection)) {\n\t\t\t\t\t\t\tthis.onColumnSelectionModeChange(activeCodeEditor);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\n\t\t\t// Hook Listener for Selection changes\n\t\t\tthis.activeEditorListeners.add(\n\t\t\t\tEvent.defer(activeCodeEditor.onDidChangeCursorPosition)(() => {\n\t\t\t\t\tthis.onSelectionChange(activeCodeEditor);\n\t\t\t\t\tthis.currentMarkerStatus.update(activeCodeEditor);\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\t// Hook Listener for language changes\n\t\t\tthis.activeEditorListeners.add(\n\t\t\t\tactiveCodeEditor.onDidChangeModelLanguage(() => {\n\t\t\t\t\tthis.onLanguageChange(activeCodeEditor, activeInput);\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\t// Hook Listener for content changes\n\t\t\tthis.activeEditorListeners.add(\n\t\t\t\tEvent.accumulate(activeCodeEditor.onDidChangeModelContent)(\n\t\t\t\t\t(e) => {\n\t\t\t\t\t\tthis.onEOLChange(activeCodeEditor);\n\t\t\t\t\t\tthis.currentMarkerStatus.update(activeCodeEditor);\n\n\t\t\t\t\t\tconst selections = activeCodeEditor.getSelections();\n\t\t\t\t\t\tif (selections) {\n\t\t\t\t\t\t\tfor (const inner of e) {\n\t\t\t\t\t\t\t\tfor (const change of inner.changes) {\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tselections.some((selection) =>\n\t\t\t\t\t\t\t\t\t\t\tRange.areIntersecting(\n\t\t\t\t\t\t\t\t\t\t\t\tselection,\n\t\t\t\t\t\t\t\t\t\t\t\tchange.range,\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tthis.onSelectionChange(\n\t\t\t\t\t\t\t\t\t\t\tactiveCodeEditor,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\n\t\t\t// Hook Listener for content options changes\n\t\t\tthis.activeEditorListeners.add(\n\t\t\t\tactiveCodeEditor.onDidChangeModelOptions(() => {\n\t\t\t\t\tthis.onIndentationChange(activeCodeEditor);\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\t// Handle binary editors\n\t\telse if (\n\t\t\tactiveEditorPane instanceof BaseBinaryResourceEditor ||\n\t\t\tactiveEditorPane instanceof BinaryResourceDiffEditor\n\t\t) {\n\t\t\tconst binaryEditors: BaseBinaryResourceEditor[] = [];\n\t\t\tif (activeEditorPane instanceof BinaryResourceDiffEditor) {\n\t\t\t\tconst primary = activeEditorPane.getPrimaryEditorPane();\n\t\t\t\tif (primary instanceof BaseBinaryResourceEditor) {\n\t\t\t\t\tbinaryEditors.push(primary);\n\t\t\t\t}\n\n\t\t\t\tconst secondary = activeEditorPane.getSecondaryEditorPane();\n\t\t\t\tif (secondary instanceof BaseBinaryResourceEditor) {\n\t\t\t\t\tbinaryEditors.push(secondary);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbinaryEditors.push(activeEditorPane);\n\t\t\t}\n\n\t\t\tfor (const editor of binaryEditors) {\n\t\t\t\tthis.activeEditorListeners.add(\n\t\t\t\t\teditor.onDidChangeMetadata(() => {\n\t\t\t\t\t\tthis.onMetadataChange(activeEditorPane);\n\t\t\t\t\t}),\n\t\t\t\t);\n\n\t\t\t\tthis.activeEditorListeners.add(\n\t\t\t\t\teditor.onDidOpenInPlace(() => {\n\t\t\t\t\t\tthis.updateStatusBar();\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onLanguageChange(\n\t\teditorWidget: ICodeEditor | undefined,\n\t\teditorInput: EditorInput | undefined,\n\t): void {\n\t\tconst info: StateDelta = { type: \"languageId\", languageId: undefined };\n\n\t\t// We only support text based editors\n\t\tif (\n\t\t\teditorWidget &&\n\t\t\teditorInput &&\n\t\t\ttoEditorWithLanguageSupport(editorInput)\n\t\t) {\n\t\t\tconst textModel = editorWidget.getModel();\n\t\t\tif (textModel) {\n\t\t\t\tconst languageId = textModel.getLanguageId();\n\t\t\t\tinfo.languageId =\n\t\t\t\t\tthis.languageService.getLanguageName(languageId) ??\n\t\t\t\t\tundefined;\n\t\t\t}\n\t\t}\n\n\t\tthis.updateState(info);\n\t}\n\n\tprivate onIndentationChange(editorWidget: ICodeEditor | undefined): void {\n\t\tconst update: StateDelta = {\n\t\t\ttype: \"indentation\",\n\t\t\tindentation: undefined,\n\t\t};\n\n\t\tif (editorWidget) {\n\t\t\tconst model = editorWidget.getModel();\n\t\t\tif (model) {\n\t\t\t\tconst modelOpts = model.getOptions();\n\t\t\t\tupdate.indentation = modelOpts.insertSpaces\n\t\t\t\t\t? modelOpts.tabSize === modelOpts.indentSize\n\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\"spacesSize\",\n\t\t\t\t\t\t\t\t\"Spaces: {0}\",\n\t\t\t\t\t\t\t\tmodelOpts.indentSize,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\"spacesAndTabsSize\",\n\t\t\t\t\t\t\t\t\"Spaces: {0} (Tab Size: {1})\",\n\t\t\t\t\t\t\t\tmodelOpts.indentSize,\n\t\t\t\t\t\t\t\tmodelOpts.tabSize,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"tabSize\",\n\t\t\t\t\t\t\t\tcomment: [\"Tab corresponds to the tab key\"],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"Tab Size: {0}\",\n\t\t\t\t\t\t\tmodelOpts.tabSize,\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthis.updateState(update);\n\t}\n\n\tprivate onMetadataChange(editor: IEditorPane | undefined): void {\n\t\tconst update: StateDelta = { type: \"metadata\", metadata: undefined };\n\n\t\tif (\n\t\t\teditor instanceof BaseBinaryResourceEditor ||\n\t\t\teditor instanceof BinaryResourceDiffEditor\n\t\t) {\n\t\t\tupdate.metadata = editor.getMetadata();\n\t\t}\n\n\t\tthis.updateState(update);\n\t}\n\n\tprivate onColumnSelectionModeChange(\n\t\teditorWidget: ICodeEditor | undefined,\n\t): void {\n\t\tconst info: StateDelta = {\n\t\t\ttype: \"columnSelectionMode\",\n\t\t\tcolumnSelectionMode: false,\n\t\t};\n\n\t\tif (editorWidget?.getOption(EditorOption.columnSelection)) {\n\t\t\tinfo.columnSelectionMode = true;\n\t\t}\n\n\t\tthis.updateState(info);\n\t}\n\n\tprivate onSelectionChange(editorWidget: ICodeEditor | undefined): void {\n\t\tconst info: IEditorSelectionStatus = Object.create(null);\n\n\t\t// We only support text based editors\n\t\tif (editorWidget) {\n\t\t\t// Compute selection(s)\n\t\t\tinfo.selections = editorWidget.getSelections() || [];\n\n\t\t\t// Compute selection length\n\t\t\tinfo.charactersSelected = 0;\n\t\t\tconst textModel = editorWidget.getModel();\n\t\t\tif (textModel) {\n\t\t\t\tfor (const selection of info.selections) {\n\t\t\t\t\tif (typeof info.charactersSelected !== \"number\") {\n\t\t\t\t\t\tinfo.charactersSelected = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tinfo.charactersSelected +=\n\t\t\t\t\t\ttextModel.getCharacterCountInRange(selection);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Compute the visible column for one selection. This will properly handle tabs and their configured widths\n\t\t\tif (info.selections.length === 1) {\n\t\t\t\tconst editorPosition = editorWidget.getPosition();\n\n\t\t\t\tconst selectionClone = new Selection(\n\t\t\t\t\tinfo.selections[0].selectionStartLineNumber,\n\t\t\t\t\tinfo.selections[0].selectionStartColumn,\n\t\t\t\t\tinfo.selections[0].positionLineNumber,\n\t\t\t\t\teditorPosition\n\t\t\t\t\t\t? editorWidget.getStatusbarColumn(editorPosition)\n\t\t\t\t\t\t: info.selections[0].positionColumn,\n\t\t\t\t);\n\n\t\t\t\tinfo.selections[0] = selectionClone;\n\t\t\t}\n\t\t}\n\n\t\tthis.updateState({\n\t\t\ttype: \"selectionStatus\",\n\t\t\tselectionStatus: this.getSelectionLabel(info),\n\t\t});\n\t}\n\n\tprivate onEOLChange(editorWidget: ICodeEditor | undefined): void {\n\t\tconst info: StateDelta = { type: \"EOL\", EOL: undefined };\n\n\t\tif (editorWidget && !editorWidget.getOption(EditorOption.readOnly)) {\n\t\t\tconst codeEditorModel = editorWidget.getModel();\n\t\t\tif (codeEditorModel) {\n\t\t\t\tinfo.EOL = codeEditorModel.getEOL();\n\t\t\t}\n\t\t}\n\n\t\tthis.updateState(info);\n\t}\n\n\tprivate onEncodingChange(\n\t\teditor: IEditorPane | undefined,\n\t\teditorWidget: ICodeEditor | undefined,\n\t): void {\n\t\tif (editor && !this.isActiveEditor(editor)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst info: StateDelta = { type: \"encoding\", encoding: undefined };\n\n\t\t// We only support text based editors that have a model associated\n\t\t// This ensures we do not show the encoding picker while an editor\n\t\t// is still loading.\n\t\tif (editor && editorWidget?.hasModel()) {\n\t\t\tconst encodingSupport: IEncodingSupport | null = editor.input\n\t\t\t\t? toEditorWithEncodingSupport(editor.input)\n\t\t\t\t: null;\n\t\t\tif (encodingSupport) {\n\t\t\t\tconst rawEncoding = encodingSupport.getEncoding();\n\t\t\t\tconst encodingInfo =\n\t\t\t\t\ttypeof rawEncoding === \"string\"\n\t\t\t\t\t\t? SUPPORTED_ENCODINGS[rawEncoding]\n\t\t\t\t\t\t: undefined;\n\t\t\t\tif (encodingInfo) {\n\t\t\t\t\tinfo.encoding = encodingInfo.labelShort; // if we have a label, take it from there\n\t\t\t\t} else {\n\t\t\t\t\tinfo.encoding = rawEncoding; // otherwise use it raw\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.updateState(info);\n\t}\n\n\tprivate onResourceEncodingChange(resource: URI): void {\n\t\tconst activeEditorPane = this.editorService.activeEditorPane;\n\t\tif (activeEditorPane) {\n\t\t\tconst activeResource = EditorResourceAccessor.getCanonicalUri(\n\t\t\t\tactiveEditorPane.input,\n\t\t\t\t{ supportSideBySide: SideBySideEditor.PRIMARY },\n\t\t\t);\n\t\t\tif (activeResource && isEqual(activeResource, resource)) {\n\t\t\t\tconst activeCodeEditor =\n\t\t\t\t\tgetCodeEditor(activeEditorPane.getControl()) ?? undefined;\n\n\t\t\t\treturn this.onEncodingChange(\n\t\t\t\t\tactiveEditorPane,\n\t\t\t\t\tactiveCodeEditor,\n\t\t\t\t); // only update if the encoding changed for the active resource\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onTabFocusModeChange(tabFocusMode: boolean): void {\n\t\tconst info: StateDelta = { type: \"tabFocusMode\", tabFocusMode };\n\t\tthis.updateState(info);\n\t}\n\n\tprivate isActiveEditor(control: IEditorPane): boolean {\n\t\tconst activeEditorPane = this.editorService.activeEditorPane;\n\n\t\treturn !!activeEditorPane && activeEditorPane === control;\n\t}\n}\n\nexport class EditorStatusContribution\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tstatic readonly ID = \"workbench.contrib.editorStatus\";\n\n\tconstructor(\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService,\n\t) {\n\t\tsuper();\n\n\t\tfor (const part of editorGroupService.parts) {\n\t\t\tthis.createEditorStatus(part);\n\t\t}\n\n\t\tthis._register(editorGroupService.onDidCreateAuxiliaryEditorPart(part => this.createEditorStatus(part)));\n\t}\n\n\tprivate createEditorStatus(part: IEditorPart): void {\n\t\tconst disposables = new DisposableStore();\n\t\tEvent.once(part.onWillDispose)(() => disposables.dispose());\n\n\t\tconst scopedInstantiationService =\n\t\t\tthis.editorGroupService.getScopedInstantiationService(part);\n\t\tdisposables.add(\n\t\t\tscopedInstantiationService.createInstance(\n\t\t\t\tEditorStatus,\n\t\t\t\tpart.windowId,\n\t\t\t),\n\t\t);\n\t}\n}\n\nclass ShowCurrentMarkerInStatusbarContribution extends Disposable {\n\tprivate readonly statusBarEntryAccessor: MutableDisposable<IStatusbarEntryAccessor>;\n\tprivate editor: ICodeEditor | undefined = undefined;\n\tprivate markers: IMarker[] = [];\n\tprivate currentMarker: IMarker | null = null;\n\n\tconstructor(\n\t\t@IStatusbarService private readonly statusbarService: IStatusbarService,\n\t\t@IMarkerService private readonly markerService: IMarkerService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\n\t\tthis.statusBarEntryAccessor = this._register(new MutableDisposable<IStatusbarEntryAccessor>());\n\n\t\tthis._register(markerService.onMarkerChanged(changedResources => this.onMarkerChanged(changedResources)));\n\t\tthis._register(Event.filter(configurationService.onDidChangeConfiguration, e => e.affectsConfiguration('problems.showCurrentInStatus'))(() => this.updateStatus()));\n\t}\n\n\tupdate(editor: ICodeEditor | undefined): void {\n\t\tthis.editor = editor;\n\n\t\tthis.updateMarkers();\n\t\tthis.updateStatus();\n\t}\n\n\tprivate updateStatus(): void {\n\t\tconst previousMarker = this.currentMarker;\n\t\tthis.currentMarker = this.getMarker();\n\t\tif (this.hasToUpdateStatus(previousMarker, this.currentMarker)) {\n\t\t\tif (this.currentMarker) {\n\t\t\t\tconst line = splitLines(this.currentMarker.message)[0];\n\t\t\t\tconst text = `${this.getType(this.currentMarker)} ${line}`;\n\t\t\t\tif (!this.statusBarEntryAccessor.value) {\n\t\t\t\t\tthis.statusBarEntryAccessor.value =\n\t\t\t\t\t\tthis.statusbarService.addEntry(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: localize(\n\t\t\t\t\t\t\t\t\t\"currentProblem\",\n\t\t\t\t\t\t\t\t\t\"Current Problem\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\ttext: \"\",\n\t\t\t\t\t\t\t\tariaLabel: \"\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"statusbar.currentProblem\",\n\t\t\t\t\t\t\tStatusbarAlignment.LEFT,\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tthis.statusBarEntryAccessor.value.update({\n\t\t\t\t\tname: localize(\"currentProblem\", \"Current Problem\"),\n\t\t\t\t\ttext,\n\t\t\t\t\tariaLabel: text,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.statusBarEntryAccessor.clear();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate hasToUpdateStatus(\n\t\tpreviousMarker: IMarker | null,\n\t\tcurrentMarker: IMarker | null,\n\t): boolean {\n\t\tif (!currentMarker) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (!previousMarker) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn (\n\t\t\tIMarkerData.makeKey(previousMarker) !==\n\t\t\tIMarkerData.makeKey(currentMarker)\n\t\t);\n\t}\n\n\tprivate getType(marker: IMarker): string {\n\t\tswitch (marker.severity) {\n\t\t\tcase MarkerSeverity.Error:\n\t\t\t\treturn \"$(error)\";\n\t\t\tcase MarkerSeverity.Warning:\n\t\t\t\treturn \"$(warning)\";\n\t\t\tcase MarkerSeverity.Info:\n\t\t\t\treturn \"$(info)\";\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\tprivate getMarker(): IMarker | null {\n\t\tif (\n\t\t\t!this.configurationService.getValue<boolean>(\n\t\t\t\t\"problems.showCurrentInStatus\",\n\t\t\t)\n\t\t) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!this.editor) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst model = this.editor.getModel();\n\t\tif (!model) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst position = this.editor.getPosition();\n\t\tif (!position) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\tthis.markers.find((marker) =>\n\t\t\t\tRange.containsPosition(marker, position),\n\t\t\t) || null\n\t\t);\n\t}\n\n\tprivate onMarkerChanged(changedResources: readonly URI[]): void {\n\t\tif (!this.editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this.editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (model && !changedResources.some((r) => isEqual(model.uri, r))) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.updateMarkers();\n\t}\n\n\tprivate updateMarkers(): void {\n\t\tif (!this.editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this.editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (model) {\n\t\t\tthis.markers = this.markerService.read({\n\t\t\t\tresource: model.uri,\n\t\t\t\tseverities:\n\t\t\t\t\tMarkerSeverity.Error |\n\t\t\t\t\tMarkerSeverity.Warning |\n\t\t\t\t\tMarkerSeverity.Info,\n\t\t\t});\n\t\t\tthis.markers.sort(this.compareMarker);\n\t\t} else {\n\t\t\tthis.markers = [];\n\t\t}\n\n\t\tthis.updateStatus();\n\t}\n\n\tprivate compareMarker(a: IMarker, b: IMarker): number {\n\t\tlet res = compare(a.resource.toString(), b.resource.toString());\n\t\tif (res === 0) {\n\t\t\tres = MarkerSeverity.compare(a.severity, b.severity);\n\t\t}\n\n\t\tif (res === 0) {\n\t\t\tres = Range.compareRangesUsingStarts(a, b);\n\t\t}\n\n\t\treturn res;\n\t}\n}\n\nexport class ShowLanguageExtensionsAction extends Action {\n\tstatic readonly ID = \"workbench.action.showLanguageExtensions\";\n\n\tconstructor(\n\t\tprivate fileExtension: string,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IExtensionGalleryService galleryService: IExtensionGalleryService\n\t) {\n\t\tsuper(ShowLanguageExtensionsAction.ID, localize('showLanguageExtensions', \"Search Marketplace Extensions for '{0}'...\", fileExtension));\n\n\t\tthis.enabled = galleryService.isEnabled();\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tawait this.commandService.executeCommand(\n\t\t\t\"workbench.extensions.action.showExtensionsForLanguage\",\n\t\t\tthis.fileExtension,\n\t\t);\n\t}\n}\n\nexport class ChangeLanguageAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.editor.changeLanguageMode\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ChangeLanguageAction.ID,\n\t\t\ttitle: localize2(\"changeMode\", \"Change Language Mode\"),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyM),\n\t\t\t},\n\t\t\tprecondition: ContextKeyExpr.not(\"notebookEditorFocused\"),\n\t\t\tmetadata: {\n\t\t\t\tdescription: localize(\n\t\t\t\t\t\"changeLanguageMode.description\",\n\t\t\t\t\t\"Change the language mode of the active text editor.\",\n\t\t\t\t),\n\t\t\t\targs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: localize(\n\t\t\t\t\t\t\t\"changeLanguageMode.arg.name\",\n\t\t\t\t\t\t\t\"The name of the language mode to change to.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tconstraint: (value: any) => typeof value === \"string\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t});\n\t}\n\n\toverride async run(\n\t\taccessor: ServicesAccessor,\n\t\tlanguageMode?: string,\n\t): Promise<void> {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst languageService = accessor.get(ILanguageService);\n\t\tconst languageDetectionService = accessor.get(\n\t\t\tILanguageDetectionService,\n\t\t);\n\t\tconst textFileService = accessor.get(ITextFileService);\n\t\tconst preferencesService = accessor.get(IPreferencesService);\n\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst telemetryService = accessor.get(ITelemetryService);\n\n\t\tconst activeTextEditorControl = getCodeEditor(\n\t\t\teditorService.activeTextEditorControl,\n\t\t);\n\t\tif (!activeTextEditorControl) {\n\t\t\tawait quickInputService.pick([\n\t\t\t\t{\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\"noEditor\",\n\t\t\t\t\t\t\"No text editor active at this time\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t]);\n\t\t\treturn;\n\t\t}\n\n\t\tconst textModel = activeTextEditorControl.getModel();\n\t\tconst resource = EditorResourceAccessor.getOriginalUri(\n\t\t\teditorService.activeEditor,\n\t\t\t{ supportSideBySide: SideBySideEditor.PRIMARY },\n\t\t);\n\n\t\t// Compute language\n\t\tlet currentLanguageName: string | undefined;\n\t\tlet currentLanguageId: string | undefined;\n\t\tif (textModel) {\n\t\t\tcurrentLanguageId = textModel.getLanguageId();\n\t\t\tcurrentLanguageName =\n\t\t\t\tlanguageService.getLanguageName(currentLanguageId) ?? undefined;\n\t\t}\n\n\t\tlet hasLanguageSupport = !!resource;\n\t\tif (\n\t\t\tresource?.scheme === Schemas.untitled &&\n\t\t\t!textFileService.untitled.get(resource)?.hasAssociatedFilePath\n\t\t) {\n\t\t\thasLanguageSupport = false; // no configuration for untitled resources (e.g. \"Untitled-1\")\n\t\t}\n\n\t\t// All languages are valid picks\n\t\tconst languages = languageService.getSortedRegisteredLanguageNames();\n\t\tconst picks: QuickPickInput[] = languages.map(\n\t\t\t({ languageName, languageId }) => {\n\t\t\t\tconst extensions = languageService\n\t\t\t\t\t.getExtensions(languageId)\n\t\t\t\t\t.join(\" \");\n\t\t\t\tlet description: string;\n\t\t\t\tif (currentLanguageName === languageName) {\n\t\t\t\t\tdescription = localize(\n\t\t\t\t\t\t\"languageDescription\",\n\t\t\t\t\t\t\"({0}) - Configured Language\",\n\t\t\t\t\t\tlanguageId,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tdescription = localize(\n\t\t\t\t\t\t\"languageDescriptionConfigured\",\n\t\t\t\t\t\t\"({0})\",\n\t\t\t\t\t\tlanguageId,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tlabel: languageName,\n\t\t\t\t\tmeta: extensions,\n\t\t\t\t\ticonClasses: getIconClassesForLanguageId(languageId),\n\t\t\t\t\tdescription,\n\t\t\t\t};\n\t\t\t},\n\t\t);\n\n\t\tpicks.unshift({\n\t\t\ttype: \"separator\",\n\t\t\tlabel: localize(\"languagesPicks\", \"languages (identifier)\"),\n\t\t});\n\n\t\t// Offer action to configure via settings\n\t\tlet configureLanguageAssociations: IQuickPickItem | undefined;\n\t\tlet configureLanguageSettings: IQuickPickItem | undefined;\n\t\tlet galleryAction: Action | undefined;\n\t\tif (hasLanguageSupport && resource) {\n\t\t\tconst ext = extname(resource) || basename(resource);\n\n\t\t\tgalleryAction = instantiationService.createInstance(\n\t\t\t\tShowLanguageExtensionsAction,\n\t\t\t\text,\n\t\t\t);\n\t\t\tif (galleryAction.enabled) {\n\t\t\t\tpicks.unshift(galleryAction);\n\t\t\t}\n\n\t\t\tconfigureLanguageSettings = {\n\t\t\t\tlabel: localize(\n\t\t\t\t\t\"configureModeSettings\",\n\t\t\t\t\t\"Configure '{0}' language based settings...\",\n\t\t\t\t\tcurrentLanguageName,\n\t\t\t\t),\n\t\t\t};\n\t\t\tpicks.unshift(configureLanguageSettings);\n\t\t\tconfigureLanguageAssociations = {\n\t\t\t\tlabel: localize(\n\t\t\t\t\t\"configureAssociationsExt\",\n\t\t\t\t\t\"Configure File Association for '{0}'...\",\n\t\t\t\t\text,\n\t\t\t\t),\n\t\t\t};\n\t\t\tpicks.unshift(configureLanguageAssociations);\n\t\t}\n\n\t\t// Offer to \"Auto Detect\"\n\t\tconst autoDetectLanguage: IQuickPickItem = {\n\t\t\tlabel: localize(\"autoDetect\", \"Auto Detect\"),\n\t\t};\n\t\tpicks.unshift(autoDetectLanguage);\n\n\t\tconst pick =\n\t\t\ttypeof languageMode === \"string\"\n\t\t\t\t? { label: languageMode }\n\t\t\t\t: await quickInputService.pick(picks, {\n\t\t\t\t\t\tplaceHolder: localize(\n\t\t\t\t\t\t\t\"pickLanguage\",\n\t\t\t\t\t\t\t\"Select Language Mode\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tmatchOnDescription: true,\n\t\t\t\t\t});\n\t\tif (!pick) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (pick === galleryAction) {\n\t\t\tgalleryAction.run();\n\t\t\treturn;\n\t\t}\n\n\t\t// User decided to permanently configure associations, return right after\n\t\tif (pick === configureLanguageAssociations) {\n\t\t\tif (resource) {\n\t\t\t\tthis.configureFileAssociation(\n\t\t\t\t\tresource,\n\t\t\t\t\tlanguageService,\n\t\t\t\t\tquickInputService,\n\t\t\t\t\tconfigurationService,\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// User decided to configure settings for current language\n\t\tif (pick === configureLanguageSettings) {\n\t\t\tpreferencesService.openUserSettings({\n\t\t\t\tjsonEditor: true,\n\t\t\t\trevealSetting: {\n\t\t\t\t\tkey: `[${currentLanguageId ?? null}]`,\n\t\t\t\t\tedit: true,\n\t\t\t\t},\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\t// Change language for active editor\n\t\tconst activeEditor = editorService.activeEditor;\n\t\tif (activeEditor) {\n\t\t\tconst languageSupport = toEditorWithLanguageSupport(activeEditor);\n\t\t\tif (languageSupport) {\n\t\t\t\t// Find language\n\t\t\t\tlet languageSelection: ILanguageSelection | undefined;\n\t\t\t\tlet detectedLanguage: string | undefined;\n\t\t\t\tif (pick === autoDetectLanguage) {\n\t\t\t\t\tif (textModel) {\n\t\t\t\t\t\tconst resource = EditorResourceAccessor.getOriginalUri(\n\t\t\t\t\t\t\tactiveEditor,\n\t\t\t\t\t\t\t{ supportSideBySide: SideBySideEditor.PRIMARY },\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (resource) {\n\t\t\t\t\t\t\t// Detect languages since we are in an untitled file\n\t\t\t\t\t\t\tlet languageId: string | undefined =\n\t\t\t\t\t\t\t\tlanguageService.guessLanguageIdByFilepathOrFirstLine(\n\t\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\t\ttextModel.getLineContent(1),\n\t\t\t\t\t\t\t\t) ?? undefined;\n\t\t\t\t\t\t\tif (!languageId || languageId === \"unknown\") {\n\t\t\t\t\t\t\t\tdetectedLanguage =\n\t\t\t\t\t\t\t\t\tawait languageDetectionService.detectLanguage(\n\t\t\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tlanguageId = detectedLanguage;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (languageId) {\n\t\t\t\t\t\t\t\tlanguageSelection =\n\t\t\t\t\t\t\t\t\tlanguageService.createById(languageId);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst languageId =\n\t\t\t\t\t\tlanguageService.getLanguageIdByLanguageName(pick.label);\n\t\t\t\t\tlanguageSelection = languageService.createById(languageId);\n\n\t\t\t\t\tif (resource) {\n\t\t\t\t\t\t// fire and forget to not slow things down\n\t\t\t\t\t\tlanguageDetectionService\n\t\t\t\t\t\t\t.detectLanguage(resource)\n\t\t\t\t\t\t\t.then((detectedLanguageId) => {\n\t\t\t\t\t\t\t\tconst chosenLanguageId =\n\t\t\t\t\t\t\t\t\tlanguageService.getLanguageIdByLanguageName(\n\t\t\t\t\t\t\t\t\t\tpick.label,\n\t\t\t\t\t\t\t\t\t) || \"unknown\";\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tdetectedLanguageId === currentLanguageId &&\n\t\t\t\t\t\t\t\t\tcurrentLanguageId !== chosenLanguageId\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t// If they didn't choose the detected language (which should also be the active language if automatic detection is enabled)\n\t\t\t\t\t\t\t\t\t// then the automatic language detection was likely wrong and the user is correcting it. In this case, we want telemetry.\n\t\t\t\t\t\t\t\t\t// Keep track of what model was preferred and length of input to help track down potential differences between the result quality across models and content size.\n\t\t\t\t\t\t\t\t\tconst modelPreference =\n\t\t\t\t\t\t\t\t\t\tconfigurationService.getValue<boolean>(\n\t\t\t\t\t\t\t\t\t\t\t\"workbench.editor.preferHistoryBasedLanguageDetection\",\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t? \"history\"\n\t\t\t\t\t\t\t\t\t\t\t: \"classic\";\n\t\t\t\t\t\t\t\t\ttelemetryService.publicLog2<\n\t\t\t\t\t\t\t\t\t\tIAutomaticLanguageDetectionLikelyWrongData,\n\t\t\t\t\t\t\t\t\t\tAutomaticLanguageDetectionLikelyWrongClassification\n\t\t\t\t\t\t\t\t\t>(AutomaticLanguageDetectionLikelyWrongId, {\n\t\t\t\t\t\t\t\t\t\tcurrentLanguageId:\n\t\t\t\t\t\t\t\t\t\t\tcurrentLanguageName ?? \"unknown\",\n\t\t\t\t\t\t\t\t\t\tnextLanguageId: pick.label,\n\t\t\t\t\t\t\t\t\t\tlineCount:\n\t\t\t\t\t\t\t\t\t\t\ttextModel?.getLineCount() ?? -1,\n\t\t\t\t\t\t\t\t\t\tmodelPreference,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Change language\n\t\t\t\tif (typeof languageSelection !== \"undefined\") {\n\t\t\t\t\tlanguageSupport.setLanguageId(\n\t\t\t\t\t\tlanguageSelection.languageId,\n\t\t\t\t\t\tChangeLanguageAction.ID,\n\t\t\t\t\t);\n\n\t\t\t\t\tif (resource?.scheme === Schemas.untitled) {\n\t\t\t\t\t\ttype SetUntitledDocumentLanguageEvent = {\n\t\t\t\t\t\t\tto: string;\n\t\t\t\t\t\t\tfrom: string;\n\t\t\t\t\t\t\tmodelPreference: string;\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttype SetUntitledDocumentLanguageClassification = {\n\t\t\t\t\t\t\towner: \"TylerLeonhardt\";\n\t\t\t\t\t\t\tcomment: \"Helps understand what the automatic language detection does for untitled files\";\n\t\t\t\t\t\t\tto: {\n\t\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\t\t\t\towner: \"TylerLeonhardt\";\n\t\t\t\t\t\t\t\tcomment: \"Help understand effectiveness of automatic language detection\";\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tfrom: {\n\t\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\t\t\t\towner: \"TylerLeonhardt\";\n\t\t\t\t\t\t\t\tcomment: \"Help understand effectiveness of automatic language detection\";\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tmodelPreference: {\n\t\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\t\t\t\towner: \"TylerLeonhardt\";\n\t\t\t\t\t\t\t\tcomment: \"Help understand effectiveness of automatic language detection\";\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t\tconst modelPreference =\n\t\t\t\t\t\t\tconfigurationService.getValue<boolean>(\n\t\t\t\t\t\t\t\t\"workbench.editor.preferHistoryBasedLanguageDetection\",\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t? \"history\"\n\t\t\t\t\t\t\t\t: \"classic\";\n\t\t\t\t\t\ttelemetryService.publicLog2<\n\t\t\t\t\t\t\tSetUntitledDocumentLanguageEvent,\n\t\t\t\t\t\t\tSetUntitledDocumentLanguageClassification\n\t\t\t\t\t\t>(\"setUntitledDocumentLanguage\", {\n\t\t\t\t\t\t\tto: languageSelection.languageId,\n\t\t\t\t\t\t\tfrom: currentLanguageId ?? \"none\",\n\t\t\t\t\t\t\tmodelPreference,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tactiveTextEditorControl.focus();\n\t\t}\n\t}\n\n\tprivate configureFileAssociation(\n\t\tresource: URI,\n\t\tlanguageService: ILanguageService,\n\t\tquickInputService: IQuickInputService,\n\t\tconfigurationService: IConfigurationService,\n\t): void {\n\t\tconst extension = extname(resource);\n\t\tconst base = basename(resource);\n\t\tconst currentAssociation =\n\t\t\tlanguageService.guessLanguageIdByFilepathOrFirstLine(\n\t\t\t\tURI.file(base),\n\t\t\t);\n\n\t\tconst languages = languageService.getSortedRegisteredLanguageNames();\n\t\tconst picks: IQuickPickItem[] = languages.map(\n\t\t\t({ languageName, languageId }) => {\n\t\t\t\treturn {\n\t\t\t\t\tid: languageId,\n\t\t\t\t\tlabel: languageName,\n\t\t\t\t\ticonClasses: getIconClassesForLanguageId(languageId),\n\t\t\t\t\tdescription:\n\t\t\t\t\t\tlanguageId === currentAssociation\n\t\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\t\"currentAssociation\",\n\t\t\t\t\t\t\t\t\t\"Current Association\",\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t};\n\t\t\t},\n\t\t);\n\n\t\tsetTimeout(async () => {\n\t\t\tconst language = await quickInputService.pick(picks, {\n\t\t\t\tplaceHolder: localize(\n\t\t\t\t\t\"pickLanguageToConfigure\",\n\t\t\t\t\t\"Select Language Mode to Associate with '{0}'\",\n\t\t\t\t\textension || base,\n\t\t\t\t),\n\t\t\t});\n\t\t\tif (language) {\n\t\t\t\tconst fileAssociationsConfig = configurationService.inspect<{}>(\n\t\t\t\t\tFILES_ASSOCIATIONS_CONFIG,\n\t\t\t\t);\n\n\t\t\t\tlet associationKey: string;\n\t\t\t\tif (extension && base[0] !== \".\") {\n\t\t\t\t\tassociationKey = `*${extension}`; // only use \"*.ext\" if the file path is in the form of <name>.<ext>\n\t\t\t\t} else {\n\t\t\t\t\tassociationKey = base; // otherwise use the basename (e.g. .gitignore, Dockerfile)\n\t\t\t\t}\n\n\t\t\t\t// If the association is already being made in the workspace, make sure to target workspace settings\n\t\t\t\tlet target = ConfigurationTarget.USER;\n\t\t\t\tif (\n\t\t\t\t\tfileAssociationsConfig.workspaceValue &&\n\t\t\t\t\t!!(fileAssociationsConfig.workspaceValue as any)[\n\t\t\t\t\t\tassociationKey\n\t\t\t\t\t]\n\t\t\t\t) {\n\t\t\t\t\ttarget = ConfigurationTarget.WORKSPACE;\n\t\t\t\t}\n\n\t\t\t\t// Make sure to write into the value of the target and not the merged value from USER and WORKSPACE config\n\t\t\t\tconst currentAssociations =\n\t\t\t\t\tdeepClone(\n\t\t\t\t\t\ttarget === ConfigurationTarget.WORKSPACE\n\t\t\t\t\t\t\t? fileAssociationsConfig.workspaceValue\n\t\t\t\t\t\t\t: fileAssociationsConfig.userValue,\n\t\t\t\t\t) || Object.create(null);\n\t\t\t\tcurrentAssociations[associationKey] = language.id;\n\n\t\t\t\tconfigurationService.updateValue(\n\t\t\t\t\tFILES_ASSOCIATIONS_CONFIG,\n\t\t\t\t\tcurrentAssociations,\n\t\t\t\t\ttarget,\n\t\t\t\t);\n\t\t\t}\n\t\t}, 50 /* quick input is sensitive to being opened so soon after another */);\n\t}\n}\n\ninterface IChangeEOLEntry extends IQuickPickItem {\n\teol: EndOfLineSequence;\n}\n\nexport class ChangeEOLAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.editor.changeEOL\",\n\t\t\ttitle: localize2(\"changeEndOfLine\", \"Change End of Line Sequence\"),\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\tconst activeTextEditorControl = getCodeEditor(\n\t\t\teditorService.activeTextEditorControl,\n\t\t);\n\t\tif (!activeTextEditorControl) {\n\t\t\tawait quickInputService.pick([\n\t\t\t\t{\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\"noEditor\",\n\t\t\t\t\t\t\"No text editor active at this time\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t]);\n\t\t\treturn;\n\t\t}\n\n\t\tif (editorService.activeEditor?.isReadonly()) {\n\t\t\tawait quickInputService.pick([\n\t\t\t\t{\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\"noWritableCodeEditor\",\n\t\t\t\t\t\t\"The active code editor is read-only.\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t]);\n\t\t\treturn;\n\t\t}\n\n\t\tlet textModel = activeTextEditorControl.getModel();\n\n\t\tconst EOLOptions: IChangeEOLEntry[] = [\n\t\t\t{ label: nlsEOLLF, eol: EndOfLineSequence.LF },\n\t\t\t{ label: nlsEOLCRLF, eol: EndOfLineSequence.CRLF },\n\t\t];\n\n\t\tconst selectedIndex = textModel?.getEOL() === \"\\n\" ? 0 : 1;\n\n\t\tconst eol = await quickInputService.pick(EOLOptions, {\n\t\t\tplaceHolder: localize(\n\t\t\t\t\"pickEndOfLine\",\n\t\t\t\t\"Select End of Line Sequence\",\n\t\t\t),\n\t\t\tactiveItem: EOLOptions[selectedIndex],\n\t\t});\n\t\tif (eol) {\n\t\t\tconst activeCodeEditor = getCodeEditor(\n\t\t\t\teditorService.activeTextEditorControl,\n\t\t\t);\n\t\t\tif (\n\t\t\t\tactiveCodeEditor?.hasModel() &&\n\t\t\t\t!editorService.activeEditor?.isReadonly()\n\t\t\t) {\n\t\t\t\ttextModel = activeCodeEditor.getModel();\n\t\t\t\ttextModel.pushStackElement();\n\t\t\t\ttextModel.pushEOL(eol.eol);\n\t\t\t\ttextModel.pushStackElement();\n\t\t\t}\n\t\t}\n\n\t\tactiveTextEditorControl.focus();\n\t}\n}\n\nexport class ChangeEncodingAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.editor.changeEncoding\",\n\t\t\ttitle: localize2(\"changeEncoding\", \"Change File Encoding\"),\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst fileService = accessor.get(IFileService);\n\t\tconst textFileService = accessor.get(ITextFileService);\n\t\tconst textResourceConfigurationService = accessor.get(\n\t\t\tITextResourceConfigurationService,\n\t\t);\n\n\t\tconst activeTextEditorControl = getCodeEditor(\n\t\t\teditorService.activeTextEditorControl,\n\t\t);\n\t\tif (!activeTextEditorControl) {\n\t\t\tawait quickInputService.pick([\n\t\t\t\t{\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\"noEditor\",\n\t\t\t\t\t\t\"No text editor active at this time\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t]);\n\t\t\treturn;\n\t\t}\n\n\t\tconst activeEditorPane = editorService.activeEditorPane;\n\t\tif (!activeEditorPane) {\n\t\t\tawait quickInputService.pick([\n\t\t\t\t{\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\"noEditor\",\n\t\t\t\t\t\t\"No text editor active at this time\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t]);\n\t\t\treturn;\n\t\t}\n\n\t\tconst encodingSupport: IEncodingSupport | null =\n\t\t\ttoEditorWithEncodingSupport(activeEditorPane.input);\n\t\tif (!encodingSupport) {\n\t\t\tawait quickInputService.pick([\n\t\t\t\t{\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\"noFileEditor\",\n\t\t\t\t\t\t\"No file active at this time\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t]);\n\t\t\treturn;\n\t\t}\n\n\t\tconst saveWithEncodingPick: IQuickPickItem = {\n\t\t\tlabel: localize(\"saveWithEncoding\", \"Save with Encoding\"),\n\t\t};\n\t\tconst reopenWithEncodingPick: IQuickPickItem = {\n\t\t\tlabel: localize(\"reopenWithEncoding\", \"Reopen with Encoding\"),\n\t\t};\n\n\t\tif (!Language.isDefaultVariant()) {\n\t\t\tconst saveWithEncodingAlias = \"Save with Encoding\";\n\t\t\tif (saveWithEncodingAlias !== saveWithEncodingPick.label) {\n\t\t\t\tsaveWithEncodingPick.detail = saveWithEncodingAlias;\n\t\t\t}\n\n\t\t\tconst reopenWithEncodingAlias = \"Reopen with Encoding\";\n\t\t\tif (reopenWithEncodingAlias !== reopenWithEncodingPick.label) {\n\t\t\t\treopenWithEncodingPick.detail = reopenWithEncodingAlias;\n\t\t\t}\n\t\t}\n\n\t\tlet action: IQuickPickItem | undefined;\n\t\tif (encodingSupport instanceof UntitledTextEditorInput) {\n\t\t\taction = saveWithEncodingPick;\n\t\t} else if (activeEditorPane.input.isReadonly()) {\n\t\t\taction = reopenWithEncodingPick;\n\t\t} else {\n\t\t\taction = await quickInputService.pick(\n\t\t\t\t[reopenWithEncodingPick, saveWithEncodingPick],\n\t\t\t\t{\n\t\t\t\t\tplaceHolder: localize(\"pickAction\", \"Select Action\"),\n\t\t\t\t\tmatchOnDetail: true,\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\n\t\tif (!action) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait timeout(50); // quick input is sensitive to being opened so soon after another\n\n\t\tconst resource = EditorResourceAccessor.getOriginalUri(\n\t\t\tactiveEditorPane.input,\n\t\t\t{ supportSideBySide: SideBySideEditor.PRIMARY },\n\t\t);\n\t\tif (\n\t\t\t!resource ||\n\t\t\t(!fileService.hasProvider(resource) &&\n\t\t\t\tresource.scheme !== Schemas.untitled)\n\t\t) {\n\t\t\treturn; // encoding detection only possible for resources the file service can handle or that are untitled\n\t\t}\n\n\t\tlet guessedEncoding: string | undefined;\n\t\tif (fileService.hasProvider(resource)) {\n\t\t\tconst content = await textFileService.readStream(resource, {\n\t\t\t\tautoGuessEncoding: true,\n\t\t\t\tcandidateGuessEncodings:\n\t\t\t\t\ttextResourceConfigurationService.getValue(\n\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\"files.candidateGuessEncodings\",\n\t\t\t\t\t),\n\t\t\t});\n\t\t\tguessedEncoding = content.encoding;\n\t\t}\n\n\t\tconst isReopenWithEncoding = action === reopenWithEncodingPick;\n\n\t\tconst configuredEncoding = textResourceConfigurationService.getValue(\n\t\t\tresource,\n\t\t\t\"files.encoding\",\n\t\t);\n\n\t\tlet directMatchIndex: number | undefined;\n\t\tlet aliasMatchIndex: number | undefined;\n\n\t\t// All encodings are valid picks\n\t\tconst picks: QuickPickInput[] = Object.keys(SUPPORTED_ENCODINGS)\n\t\t\t.sort((k1, k2) => {\n\t\t\t\tif (k1 === configuredEncoding) {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else if (k2 === configuredEncoding) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\tSUPPORTED_ENCODINGS[k1].order -\n\t\t\t\t\tSUPPORTED_ENCODINGS[k2].order\n\t\t\t\t);\n\t\t\t})\n\t\t\t.filter((k) => {\n\t\t\t\tif (\n\t\t\t\t\tk === guessedEncoding &&\n\t\t\t\t\tguessedEncoding !== configuredEncoding\n\t\t\t\t) {\n\t\t\t\t\treturn false; // do not show encoding if it is the guessed encoding that does not match the configured\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t!isReopenWithEncoding || !SUPPORTED_ENCODINGS[k].encodeOnly\n\t\t\t\t); // hide those that can only be used for encoding if we are about to decode\n\t\t\t})\n\t\t\t.map((key, index) => {\n\t\t\t\tif (key === encodingSupport.getEncoding()) {\n\t\t\t\t\tdirectMatchIndex = index;\n\t\t\t\t} else if (\n\t\t\t\t\tSUPPORTED_ENCODINGS[key].alias ===\n\t\t\t\t\tencodingSupport.getEncoding()\n\t\t\t\t) {\n\t\t\t\t\taliasMatchIndex = index;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tid: key,\n\t\t\t\t\tlabel: SUPPORTED_ENCODINGS[key].labelLong,\n\t\t\t\t\tdescription: key,\n\t\t\t\t};\n\t\t\t});\n\n\t\tconst items = picks.slice() as IQuickPickItem[];\n\n\t\t// If we have a guessed encoding, show it first unless it matches the configured encoding\n\t\tif (\n\t\t\tguessedEncoding &&\n\t\t\tconfiguredEncoding !== guessedEncoding &&\n\t\t\tSUPPORTED_ENCODINGS[guessedEncoding]\n\t\t) {\n\t\t\tpicks.unshift({ type: \"separator\" });\n\t\t\tpicks.unshift({\n\t\t\t\tid: guessedEncoding,\n\t\t\t\tlabel: SUPPORTED_ENCODINGS[guessedEncoding].labelLong,\n\t\t\t\tdescription: localize(\n\t\t\t\t\t\"guessedEncoding\",\n\t\t\t\t\t\"Guessed from content\",\n\t\t\t\t),\n\t\t\t});\n\t\t}\n\n\t\tconst encoding = await quickInputService.pick(picks, {\n\t\t\tplaceHolder: isReopenWithEncoding\n\t\t\t\t? localize(\n\t\t\t\t\t\t\"pickEncodingForReopen\",\n\t\t\t\t\t\t\"Select File Encoding to Reopen File\",\n\t\t\t\t\t)\n\t\t\t\t: localize(\n\t\t\t\t\t\t\"pickEncodingForSave\",\n\t\t\t\t\t\t\"Select File Encoding to Save with\",\n\t\t\t\t\t),\n\t\t\tactiveItem:\n\t\t\t\titems[\n\t\t\t\t\ttypeof directMatchIndex === \"number\"\n\t\t\t\t\t\t? directMatchIndex\n\t\t\t\t\t\t: typeof aliasMatchIndex === \"number\"\n\t\t\t\t\t\t\t? aliasMatchIndex\n\t\t\t\t\t\t\t: -1\n\t\t\t\t],\n\t\t});\n\n\t\tif (!encoding) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!editorService.activeEditorPane) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst activeEncodingSupport = toEditorWithEncodingSupport(\n\t\t\teditorService.activeEditorPane.input,\n\t\t);\n\t\tif (typeof encoding.id !== \"undefined\" && activeEncodingSupport) {\n\t\t\tawait activeEncodingSupport.setEncoding(\n\t\t\t\tencoding.id,\n\t\t\t\tisReopenWithEncoding\n\t\t\t\t\t? EncodingMode.Decode\n\t\t\t\t\t: EncodingMode.Encode,\n\t\t\t); // Set new encoding\n\t\t}\n\n\t\tactiveTextEditorControl.focus();\n\t}\n}\n"],
  "mappings": "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",
  "names": ["resource"]
}
