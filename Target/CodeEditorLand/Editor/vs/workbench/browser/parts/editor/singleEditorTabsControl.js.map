{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/editor/singleEditorTabsControl.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './media/singleeditortabscontrol.css';\nimport { EditorResourceAccessor, Verbosity, IEditorPartOptions, SideBySideEditor, preventEditorClose, EditorCloseMethod, IToolbarActions } from '../../../common/editor.js';\nimport { EditorInput } from '../../../common/editor/editorInput.js';\nimport { EditorTabsControl } from './editorTabsControl.js';\nimport { ResourceLabel, IResourceLabel } from '../../labels.js';\nimport { TAB_ACTIVE_FOREGROUND, TAB_UNFOCUSED_ACTIVE_FOREGROUND } from '../../../common/theme.js';\nimport { EventType as TouchEventType, GestureEvent, Gesture } from '../../../../base/browser/touch.js';\nimport { addDisposableListener, EventType, EventHelper, Dimension, isAncestor, DragAndDropObserver, isHTMLElement } from '../../../../base/browser/dom.js';\nimport { CLOSE_EDITOR_COMMAND_ID, UNLOCK_GROUP_COMMAND_ID } from './editorCommands.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { assertIsDefined, assertAllDefined } from '../../../../base/common/types.js';\nimport { equals } from '../../../../base/common/objects.js';\nimport { toDisposable } from '../../../../base/common/lifecycle.js';\nimport { defaultBreadcrumbsWidgetStyles } from '../../../../platform/theme/browser/defaultStyles.js';\nimport { IEditorTitleControlDimensions } from './editorTitleControl.js';\nimport { BreadcrumbsControlFactory } from './breadcrumbsControl.js';\n\ninterface IRenderedEditorLabel {\n\treadonly editor?: EditorInput;\n\treadonly pinned: boolean;\n}\n\nexport class SingleEditorTabsControl extends EditorTabsControl {\n\n\tprivate titleContainer: HTMLElement | undefined;\n\tprivate editorLabel: IResourceLabel | undefined;\n\tprivate activeLabel: IRenderedEditorLabel = Object.create(null);\n\n\tprivate breadcrumbsControlFactory: BreadcrumbsControlFactory | undefined;\n\tprivate get breadcrumbsControl() { return this.breadcrumbsControlFactory?.control; }\n\n\tprotected override create(parent: HTMLElement): void {\n\t\tsuper.create(parent);\n\n\t\tconst titleContainer = this.titleContainer = parent;\n\t\ttitleContainer.draggable = true;\n\n\t\t// Container listeners\n\t\tthis.registerContainerListeners(titleContainer);\n\n\t\t// Gesture Support\n\t\tthis._register(Gesture.addTarget(titleContainer));\n\n\t\tconst labelContainer = document.createElement('div');\n\t\tlabelContainer.classList.add('label-container');\n\t\ttitleContainer.appendChild(labelContainer);\n\n\t\t// Editor Label\n\t\tthis.editorLabel = this._register(this.instantiationService.createInstance(ResourceLabel, labelContainer, { hoverDelegate: this.getHoverDelegate() })).element;\n\t\tthis._register(addDisposableListener(this.editorLabel.element, EventType.CLICK, e => this.onTitleLabelClick(e)));\n\n\t\t// Breadcrumbs\n\t\tthis.breadcrumbsControlFactory = this._register(this.instantiationService.createInstance(BreadcrumbsControlFactory, labelContainer, this.groupView, {\n\t\t\tshowFileIcons: false,\n\t\t\tshowSymbolIcons: true,\n\t\t\tshowDecorationColors: false,\n\t\t\twidgetStyles: { ...defaultBreadcrumbsWidgetStyles, breadcrumbsBackground: Color.transparent.toString() },\n\t\t\tshowPlaceholder: false\n\t\t}));\n\t\tthis._register(this.breadcrumbsControlFactory.onDidEnablementChange(() => this.handleBreadcrumbsEnablementChange()));\n\t\ttitleContainer.classList.toggle('breadcrumbs', Boolean(this.breadcrumbsControl));\n\t\tthis._register(toDisposable(() => titleContainer.classList.remove('breadcrumbs'))); // important to remove because the container is a shared dom node\n\n\t\t// Create editor actions toolbar\n\t\tthis.createEditorActionsToolBar(titleContainer, ['title-actions']);\n\t}\n\n\tprivate registerContainerListeners(titleContainer: HTMLElement): void {\n\n\t\t// Drag & Drop support\n\t\tlet lastDragEvent: DragEvent | undefined = undefined;\n\t\tlet isNewWindowOperation = false;\n\t\tthis._register(new DragAndDropObserver(titleContainer, {\n\t\t\tonDragStart: e => { isNewWindowOperation = this.onGroupDragStart(e, titleContainer); },\n\t\t\tonDrag: e => { lastDragEvent = e; },\n\t\t\tonDragEnd: e => { this.onGroupDragEnd(e, lastDragEvent, titleContainer, isNewWindowOperation); },\n\t\t}));\n\n\t\t// Pin on double click\n\t\tthis._register(addDisposableListener(titleContainer, EventType.DBLCLICK, e => this.onTitleDoubleClick(e)));\n\n\t\t// Detect mouse click\n\t\tthis._register(addDisposableListener(titleContainer, EventType.AUXCLICK, e => this.onTitleAuxClick(e)));\n\n\t\t// Detect touch\n\t\tthis._register(addDisposableListener(titleContainer, TouchEventType.Tap, (e: GestureEvent) => this.onTitleTap(e)));\n\n\t\t// Context Menu\n\t\tfor (const event of [EventType.CONTEXT_MENU, TouchEventType.Contextmenu]) {\n\t\t\tthis._register(addDisposableListener(titleContainer, event, e => {\n\t\t\t\tif (this.tabsModel.activeEditor) {\n\t\t\t\t\tthis.onTabContextMenu(this.tabsModel.activeEditor, e, titleContainer);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate onTitleLabelClick(e: MouseEvent): void {\n\t\tEventHelper.stop(e, false);\n\n\t\t// delayed to let the onTitleClick() come first which can cause a focus change which can close quick access\n\t\tsetTimeout(() => this.quickInputService.quickAccess.show());\n\t}\n\n\tprivate onTitleDoubleClick(e: MouseEvent): void {\n\t\tEventHelper.stop(e);\n\n\t\tthis.groupView.pinEditor();\n\t}\n\n\tprivate onTitleAuxClick(e: MouseEvent): void {\n\t\tif (e.button === 1 /* Middle Button */ && this.tabsModel.activeEditor) {\n\t\t\tEventHelper.stop(e, true /* for https://github.com/microsoft/vscode/issues/56715 */);\n\n\t\t\tif (!preventEditorClose(this.tabsModel, this.tabsModel.activeEditor, EditorCloseMethod.MOUSE, this.groupsView.partOptions)) {\n\t\t\t\tthis.groupView.closeEditor(this.tabsModel.activeEditor);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onTitleTap(e: GestureEvent): void {\n\n\t\t// We only want to open the quick access picker when\n\t\t// the tap occurred over the editor label, so we need\n\t\t// to check on the target\n\t\t// (https://github.com/microsoft/vscode/issues/107543)\n\t\tconst target = e.initialTarget;\n\t\tif (!(isHTMLElement(target)) || !this.editorLabel || !isAncestor(target, this.editorLabel.element)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO@rebornix gesture tap should open the quick access\n\t\t// editorGroupView will focus on the editor again when there\n\t\t// are mouse/pointer/touch down events we need to wait a bit as\n\t\t// `GesureEvent.Tap` is generated from `touchstart` and then\n\t\t// `touchend` events, which are not an atom event.\n\t\tsetTimeout(() => this.quickInputService.quickAccess.show(), 50);\n\t}\n\n\topenEditor(editor: EditorInput): boolean {\n\t\treturn this.doHandleOpenEditor();\n\t}\n\n\topenEditors(editors: EditorInput[]): boolean {\n\t\treturn this.doHandleOpenEditor();\n\t}\n\n\tprivate doHandleOpenEditor(): boolean {\n\t\tconst activeEditorChanged = this.ifActiveEditorChanged(() => this.redraw());\n\t\tif (!activeEditorChanged) {\n\t\t\tthis.ifActiveEditorPropertiesChanged(() => this.redraw());\n\t\t}\n\n\t\treturn activeEditorChanged;\n\t}\n\n\tbeforeCloseEditor(editor: EditorInput): void {\n\t\t// Nothing to do before closing an editor\n\t}\n\n\tcloseEditor(editor: EditorInput): void {\n\t\tthis.ifActiveEditorChanged(() => this.redraw());\n\t}\n\n\tcloseEditors(editors: EditorInput[]): void {\n\t\tthis.ifActiveEditorChanged(() => this.redraw());\n\t}\n\n\tmoveEditor(editor: EditorInput, fromIndex: number, targetIndex: number): void {\n\t\tthis.ifActiveEditorChanged(() => this.redraw());\n\t}\n\n\tpinEditor(editor: EditorInput): void {\n\t\tthis.ifEditorIsActive(editor, () => this.redraw());\n\t}\n\n\tstickEditor(editor: EditorInput): void { }\n\n\tunstickEditor(editor: EditorInput): void { }\n\n\tsetActive(isActive: boolean): void {\n\t\tthis.redraw();\n\t}\n\n\tupdateEditorSelections(): void { }\n\n\tupdateEditorLabel(editor: EditorInput): void {\n\t\tthis.ifEditorIsActive(editor, () => this.redraw());\n\t}\n\n\tupdateEditorDirty(editor: EditorInput): void {\n\t\tthis.ifEditorIsActive(editor, () => {\n\t\t\tconst titleContainer = assertIsDefined(this.titleContainer);\n\n\t\t\t// Signal dirty (unless saving)\n\t\t\tif (editor.isDirty() && !editor.isSaving()) {\n\t\t\t\ttitleContainer.classList.add('dirty');\n\t\t\t}\n\n\t\t\t// Otherwise, clear dirty\n\t\t\telse {\n\t\t\t\ttitleContainer.classList.remove('dirty');\n\t\t\t}\n\t\t});\n\t}\n\n\toverride updateOptions(oldOptions: IEditorPartOptions, newOptions: IEditorPartOptions): void {\n\t\tsuper.updateOptions(oldOptions, newOptions);\n\n\t\tif (oldOptions.labelFormat !== newOptions.labelFormat || !equals(oldOptions.decorations, newOptions.decorations)) {\n\t\t\tthis.redraw();\n\t\t}\n\t}\n\n\toverride updateStyles(): void {\n\t\tthis.redraw();\n\t}\n\n\tprotected handleBreadcrumbsEnablementChange(): void {\n\t\tconst titleContainer = assertIsDefined(this.titleContainer);\n\t\ttitleContainer.classList.toggle('breadcrumbs', Boolean(this.breadcrumbsControl));\n\n\t\tthis.redraw();\n\t}\n\n\tprivate ifActiveEditorChanged(fn: () => void): boolean {\n\t\tif (\n\t\t\t!this.activeLabel.editor && this.tabsModel.activeEditor || \t\t\t\t\t\t// active editor changed from null => editor\n\t\t\tthis.activeLabel.editor && !this.tabsModel.activeEditor || \t\t\t\t\t\t// active editor changed from editor => null\n\t\t\t(!this.activeLabel.editor || !this.tabsModel.isActive(this.activeLabel.editor))\t// active editor changed from editorA => editorB\n\t\t) {\n\t\t\tfn();\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate ifActiveEditorPropertiesChanged(fn: () => void): void {\n\t\tif (!this.activeLabel.editor || !this.tabsModel.activeEditor) {\n\t\t\treturn; // need an active editor to check for properties changed\n\t\t}\n\n\t\tif (this.activeLabel.pinned !== this.tabsModel.isPinned(this.tabsModel.activeEditor)) {\n\t\t\tfn(); // only run if pinned state has changed\n\t\t}\n\t}\n\n\tprivate ifEditorIsActive(editor: EditorInput, fn: () => void): void {\n\t\tif (this.tabsModel.isActive(editor)) {\n\t\t\tfn();  // only run if editor is current active\n\t\t}\n\t}\n\n\tprivate redraw(): void {\n\t\tconst editor = this.tabsModel.activeEditor ?? undefined;\n\t\tconst options = this.groupsView.partOptions;\n\n\t\tconst isEditorPinned = editor ? this.tabsModel.isPinned(editor) : false;\n\t\tconst isGroupActive = this.groupsView.activeGroup === this.groupView;\n\n\t\tthis.activeLabel = { editor, pinned: isEditorPinned };\n\n\t\t// Update Breadcrumbs\n\t\tif (this.breadcrumbsControl) {\n\t\t\tif (isGroupActive) {\n\t\t\t\tthis.breadcrumbsControl.update();\n\t\t\t\tthis.breadcrumbsControl.domNode.classList.toggle('preview', !isEditorPinned);\n\t\t\t} else {\n\t\t\t\tthis.breadcrumbsControl.hide();\n\t\t\t}\n\t\t}\n\n\t\t// Clear if there is no editor\n\t\tconst [titleContainer, editorLabel] = assertAllDefined(this.titleContainer, this.editorLabel);\n\t\tif (!editor) {\n\t\t\ttitleContainer.classList.remove('dirty');\n\t\t\teditorLabel.clear();\n\t\t\tthis.clearEditorActionsToolbar();\n\t\t}\n\n\t\t// Otherwise render it\n\t\telse {\n\n\t\t\t// Dirty state\n\t\t\tthis.updateEditorDirty(editor);\n\n\t\t\t// Editor Label\n\t\t\tconst { labelFormat } = this.groupsView.partOptions;\n\t\t\tlet description: string;\n\t\t\tif (this.breadcrumbsControl && !this.breadcrumbsControl.isHidden()) {\n\t\t\t\tdescription = ''; // hide description when showing breadcrumbs\n\t\t\t} else if (labelFormat === 'default' && !isGroupActive) {\n\t\t\t\tdescription = ''; // hide description when group is not active and style is 'default'\n\t\t\t} else {\n\t\t\t\tdescription = editor.getDescription(this.getVerbosity(labelFormat)) || '';\n\t\t\t}\n\n\t\t\teditorLabel.setResource(\n\t\t\t\t{\n\t\t\t\t\tresource: EditorResourceAccessor.getOriginalUri(editor, { supportSideBySide: SideBySideEditor.BOTH }),\n\t\t\t\t\tname: editor.getName(),\n\t\t\t\t\tdescription\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: this.getHoverTitle(editor),\n\t\t\t\t\titalic: !isEditorPinned,\n\t\t\t\t\textraClasses: ['single-tab', 'title-label'].concat(editor.getLabelExtraClasses()),\n\t\t\t\t\tfileDecorations: {\n\t\t\t\t\t\tcolors: Boolean(options.decorations?.colors),\n\t\t\t\t\t\tbadges: Boolean(options.decorations?.badges)\n\t\t\t\t\t},\n\t\t\t\t\ticon: editor.getIcon(),\n\t\t\t\t\thideIcon: options.showIcons === false,\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif (isGroupActive) {\n\t\t\t\ttitleContainer.style.color = this.getColor(TAB_ACTIVE_FOREGROUND) || '';\n\t\t\t} else {\n\t\t\t\ttitleContainer.style.color = this.getColor(TAB_UNFOCUSED_ACTIVE_FOREGROUND) || '';\n\t\t\t}\n\n\t\t\t// Update Editor Actions Toolbar\n\t\t\tthis.updateEditorActionsToolbar();\n\t\t}\n\t}\n\n\tprivate getVerbosity(style: string | undefined): Verbosity {\n\t\tswitch (style) {\n\t\t\tcase 'short': return Verbosity.SHORT;\n\t\t\tcase 'long': return Verbosity.LONG;\n\t\t\tdefault: return Verbosity.MEDIUM;\n\t\t}\n\t}\n\n\tprotected override prepareEditorActions(editorActions: IToolbarActions): IToolbarActions {\n\t\tconst isGroupActive = this.groupsView.activeGroup === this.groupView;\n\n\t\t// Active: allow all actions\n\t\tif (isGroupActive) {\n\t\t\treturn editorActions;\n\t\t}\n\n\t\t// Inactive: only show \"Close, \"Unlock\" and secondary actions\n\t\telse {\n\t\t\treturn {\n\t\t\t\tprimary: this.groupsView.partOptions.alwaysShowEditorActions ? editorActions.primary : editorActions.primary.filter(action => action.id === CLOSE_EDITOR_COMMAND_ID || action.id === UNLOCK_GROUP_COMMAND_ID),\n\t\t\t\tsecondary: editorActions.secondary\n\t\t\t};\n\t\t}\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.tabHeight;\n\t}\n\n\tlayout(dimensions: IEditorTitleControlDimensions): Dimension {\n\t\tthis.breadcrumbsControl?.layout(undefined);\n\n\t\treturn new Dimension(dimensions.container.width, this.getHeight());\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
