{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/editor/singleEditorTabsControl.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/singleeditortabscontrol.css\";\nimport {\n\tDimension,\n\tDragAndDropObserver,\n\tEventHelper,\n\tEventType,\n\taddDisposableListener,\n\tisAncestor,\n\tisHTMLElement,\n} from \"../../../../base/browser/dom.js\";\nimport {\n\tGesture,\n\ttype GestureEvent,\n\tEventType as TouchEventType,\n} from \"../../../../base/browser/touch.js\";\nimport { Color } from \"../../../../base/common/color.js\";\nimport { toDisposable } from \"../../../../base/common/lifecycle.js\";\nimport { equals } from \"../../../../base/common/objects.js\";\nimport {\n\tassertAllDefined,\n\tassertIsDefined,\n} from \"../../../../base/common/types.js\";\nimport { defaultBreadcrumbsWidgetStyles } from \"../../../../platform/theme/browser/defaultStyles.js\";\nimport {\n\tEditorCloseMethod,\n\tEditorResourceAccessor,\n\ttype IEditorPartOptions,\n\ttype IToolbarActions,\n\tSideBySideEditor,\n\tVerbosity,\n\tpreventEditorClose,\n} from \"../../../common/editor.js\";\nimport type { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport {\n\tTAB_ACTIVE_FOREGROUND,\n\tTAB_UNFOCUSED_ACTIVE_FOREGROUND,\n} from \"../../../common/theme.js\";\nimport { type IResourceLabel, ResourceLabel } from \"../../labels.js\";\nimport { BreadcrumbsControlFactory } from \"./breadcrumbsControl.js\";\nimport {\n\tCLOSE_EDITOR_COMMAND_ID,\n\tUNLOCK_GROUP_COMMAND_ID,\n} from \"./editorCommands.js\";\nimport { EditorTabsControl } from \"./editorTabsControl.js\";\nimport type { IEditorTitleControlDimensions } from \"./editorTitleControl.js\";\n\ninterface IRenderedEditorLabel {\n\treadonly editor?: EditorInput;\n\treadonly pinned: boolean;\n}\n\nexport class SingleEditorTabsControl extends EditorTabsControl {\n\tprivate titleContainer: HTMLElement | undefined;\n\tprivate editorLabel: IResourceLabel | undefined;\n\tprivate activeLabel: IRenderedEditorLabel = Object.create(null);\n\n\tprivate breadcrumbsControlFactory: BreadcrumbsControlFactory | undefined;\n\tprivate get breadcrumbsControl() {\n\t\treturn this.breadcrumbsControlFactory?.control;\n\t}\n\n\tprotected override create(parent: HTMLElement): void {\n\t\tsuper.create(parent);\n\n\t\tconst titleContainer = (this.titleContainer = parent);\n\t\ttitleContainer.draggable = true;\n\n\t\t// Container listeners\n\t\tthis.registerContainerListeners(titleContainer);\n\n\t\t// Gesture Support\n\t\tthis._register(Gesture.addTarget(titleContainer));\n\n\t\tconst labelContainer = document.createElement(\"div\");\n\t\tlabelContainer.classList.add(\"label-container\");\n\t\ttitleContainer.appendChild(labelContainer);\n\n\t\t// Editor Label\n\t\tthis.editorLabel = this._register(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tResourceLabel,\n\t\t\t\tlabelContainer,\n\t\t\t\t{ hoverDelegate: this.getHoverDelegate() },\n\t\t\t),\n\t\t).element;\n\t\tthis._register(\n\t\t\taddDisposableListener(\n\t\t\t\tthis.editorLabel.element,\n\t\t\t\tEventType.CLICK,\n\t\t\t\t(e) => this.onTitleLabelClick(e),\n\t\t\t),\n\t\t);\n\n\t\t// Breadcrumbs\n\t\tthis.breadcrumbsControlFactory = this._register(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tBreadcrumbsControlFactory,\n\t\t\t\tlabelContainer,\n\t\t\t\tthis.groupView,\n\t\t\t\t{\n\t\t\t\t\tshowFileIcons: false,\n\t\t\t\t\tshowSymbolIcons: true,\n\t\t\t\t\tshowDecorationColors: false,\n\t\t\t\t\twidgetStyles: {\n\t\t\t\t\t\t...defaultBreadcrumbsWidgetStyles,\n\t\t\t\t\t\tbreadcrumbsBackground: Color.transparent.toString(),\n\t\t\t\t\t},\n\t\t\t\t\tshowPlaceholder: false,\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.breadcrumbsControlFactory.onDidEnablementChange(() =>\n\t\t\t\tthis.handleBreadcrumbsEnablementChange(),\n\t\t\t),\n\t\t);\n\t\ttitleContainer.classList.toggle(\n\t\t\t\"breadcrumbs\",\n\t\t\tBoolean(this.breadcrumbsControl),\n\t\t);\n\t\tthis._register(\n\t\t\ttoDisposable(() => titleContainer.classList.remove(\"breadcrumbs\")),\n\t\t); // important to remove because the container is a shared dom node\n\n\t\t// Create editor actions toolbar\n\t\tthis.createEditorActionsToolBar(titleContainer, [\"title-actions\"]);\n\t}\n\n\tprivate registerContainerListeners(titleContainer: HTMLElement): void {\n\t\t// Drag & Drop support\n\t\tlet lastDragEvent: DragEvent | undefined;\n\t\tlet isNewWindowOperation = false;\n\t\tthis._register(\n\t\t\tnew DragAndDropObserver(titleContainer, {\n\t\t\t\tonDragStart: (e) => {\n\t\t\t\t\tisNewWindowOperation = this.onGroupDragStart(\n\t\t\t\t\t\te,\n\t\t\t\t\t\ttitleContainer,\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tonDrag: (e) => {\n\t\t\t\t\tlastDragEvent = e;\n\t\t\t\t},\n\t\t\t\tonDragEnd: (e) => {\n\t\t\t\t\tthis.onGroupDragEnd(\n\t\t\t\t\t\te,\n\t\t\t\t\t\tlastDragEvent,\n\t\t\t\t\t\ttitleContainer,\n\t\t\t\t\t\tisNewWindowOperation,\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\n\t\t// Pin on double click\n\t\tthis._register(\n\t\t\taddDisposableListener(titleContainer, EventType.DBLCLICK, (e) =>\n\t\t\t\tthis.onTitleDoubleClick(e),\n\t\t\t),\n\t\t);\n\n\t\t// Detect mouse click\n\t\tthis._register(\n\t\t\taddDisposableListener(titleContainer, EventType.AUXCLICK, (e) =>\n\t\t\t\tthis.onTitleAuxClick(e),\n\t\t\t),\n\t\t);\n\n\t\t// Detect touch\n\t\tthis._register(\n\t\t\taddDisposableListener(\n\t\t\t\ttitleContainer,\n\t\t\t\tTouchEventType.Tap,\n\t\t\t\t(e: GestureEvent) => this.onTitleTap(e),\n\t\t\t),\n\t\t);\n\n\t\t// Context Menu\n\t\tfor (const event of [\n\t\t\tEventType.CONTEXT_MENU,\n\t\t\tTouchEventType.Contextmenu,\n\t\t]) {\n\t\t\tthis._register(\n\t\t\t\taddDisposableListener(titleContainer, event, (e) => {\n\t\t\t\t\tif (this.tabsModel.activeEditor) {\n\t\t\t\t\t\tthis.onTabContextMenu(\n\t\t\t\t\t\t\tthis.tabsModel.activeEditor,\n\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\ttitleContainer,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate onTitleLabelClick(e: MouseEvent): void {\n\t\tEventHelper.stop(e, false);\n\n\t\t// delayed to let the onTitleClick() come first which can cause a focus change which can close quick access\n\t\tsetTimeout(() => this.quickInputService.quickAccess.show());\n\t}\n\n\tprivate onTitleDoubleClick(e: MouseEvent): void {\n\t\tEventHelper.stop(e);\n\n\t\tthis.groupView.pinEditor();\n\t}\n\n\tprivate onTitleAuxClick(e: MouseEvent): void {\n\t\tif (e.button === 1 /* Middle Button */ && this.tabsModel.activeEditor) {\n\t\t\tEventHelper.stop(\n\t\t\t\te,\n\t\t\t\ttrue /* for https://github.com/microsoft/vscode/issues/56715 */,\n\t\t\t);\n\n\t\t\tif (\n\t\t\t\t!preventEditorClose(\n\t\t\t\t\tthis.tabsModel,\n\t\t\t\t\tthis.tabsModel.activeEditor,\n\t\t\t\t\tEditorCloseMethod.MOUSE,\n\t\t\t\t\tthis.groupsView.partOptions,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthis.groupView.closeEditor(this.tabsModel.activeEditor);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onTitleTap(e: GestureEvent): void {\n\t\t// We only want to open the quick access picker when\n\t\t// the tap occurred over the editor label, so we need\n\t\t// to check on the target\n\t\t// (https://github.com/microsoft/vscode/issues/107543)\n\t\tconst target = e.initialTarget;\n\t\tif (\n\t\t\t!isHTMLElement(target) ||\n\t\t\t!this.editorLabel ||\n\t\t\t!isAncestor(target, this.editorLabel.element)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO@rebornix gesture tap should open the quick access\n\t\t// editorGroupView will focus on the editor again when there\n\t\t// are mouse/pointer/touch down events we need to wait a bit as\n\t\t// `GesureEvent.Tap` is generated from `touchstart` and then\n\t\t// `touchend` events, which are not an atom event.\n\t\tsetTimeout(() => this.quickInputService.quickAccess.show(), 50);\n\t}\n\n\topenEditor(editor: EditorInput): boolean {\n\t\treturn this.doHandleOpenEditor();\n\t}\n\n\topenEditors(editors: EditorInput[]): boolean {\n\t\treturn this.doHandleOpenEditor();\n\t}\n\n\tprivate doHandleOpenEditor(): boolean {\n\t\tconst activeEditorChanged = this.ifActiveEditorChanged(() =>\n\t\t\tthis.redraw(),\n\t\t);\n\t\tif (!activeEditorChanged) {\n\t\t\tthis.ifActiveEditorPropertiesChanged(() => this.redraw());\n\t\t}\n\n\t\treturn activeEditorChanged;\n\t}\n\n\tbeforeCloseEditor(editor: EditorInput): void {\n\t\t// Nothing to do before closing an editor\n\t}\n\n\tcloseEditor(editor: EditorInput): void {\n\t\tthis.ifActiveEditorChanged(() => this.redraw());\n\t}\n\n\tcloseEditors(editors: EditorInput[]): void {\n\t\tthis.ifActiveEditorChanged(() => this.redraw());\n\t}\n\n\tmoveEditor(\n\t\teditor: EditorInput,\n\t\tfromIndex: number,\n\t\ttargetIndex: number,\n\t): void {\n\t\tthis.ifActiveEditorChanged(() => this.redraw());\n\t}\n\n\tpinEditor(editor: EditorInput): void {\n\t\tthis.ifEditorIsActive(editor, () => this.redraw());\n\t}\n\n\tstickEditor(editor: EditorInput): void {}\n\n\tunstickEditor(editor: EditorInput): void {}\n\n\tsetActive(isActive: boolean): void {\n\t\tthis.redraw();\n\t}\n\n\tupdateEditorSelections(): void {}\n\n\tupdateEditorLabel(editor: EditorInput): void {\n\t\tthis.ifEditorIsActive(editor, () => this.redraw());\n\t}\n\n\tupdateEditorDirty(editor: EditorInput): void {\n\t\tthis.ifEditorIsActive(editor, () => {\n\t\t\tconst titleContainer = assertIsDefined(this.titleContainer);\n\n\t\t\t// Signal dirty (unless saving)\n\t\t\tif (editor.isDirty() && !editor.isSaving()) {\n\t\t\t\ttitleContainer.classList.add(\"dirty\");\n\t\t\t}\n\n\t\t\t// Otherwise, clear dirty\n\t\t\telse {\n\t\t\t\ttitleContainer.classList.remove(\"dirty\");\n\t\t\t}\n\t\t});\n\t}\n\n\toverride updateOptions(\n\t\toldOptions: IEditorPartOptions,\n\t\tnewOptions: IEditorPartOptions,\n\t): void {\n\t\tsuper.updateOptions(oldOptions, newOptions);\n\n\t\tif (\n\t\t\toldOptions.labelFormat !== newOptions.labelFormat ||\n\t\t\t!equals(oldOptions.decorations, newOptions.decorations)\n\t\t) {\n\t\t\tthis.redraw();\n\t\t}\n\t}\n\n\toverride updateStyles(): void {\n\t\tthis.redraw();\n\t}\n\n\tprotected handleBreadcrumbsEnablementChange(): void {\n\t\tconst titleContainer = assertIsDefined(this.titleContainer);\n\t\ttitleContainer.classList.toggle(\n\t\t\t\"breadcrumbs\",\n\t\t\tBoolean(this.breadcrumbsControl),\n\t\t);\n\n\t\tthis.redraw();\n\t}\n\n\tprivate ifActiveEditorChanged(fn: () => void): boolean {\n\t\tif (\n\t\t\t(!this.activeLabel.editor && this.tabsModel.activeEditor) || // active editor changed from null => editor\n\t\t\t(this.activeLabel.editor && !this.tabsModel.activeEditor) || // active editor changed from editor => null\n\t\t\t!this.activeLabel.editor ||\n\t\t\t!this.tabsModel.isActive(this.activeLabel.editor) // active editor changed from editorA => editorB\n\t\t) {\n\t\t\tfn();\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate ifActiveEditorPropertiesChanged(fn: () => void): void {\n\t\tif (!this.activeLabel.editor || !this.tabsModel.activeEditor) {\n\t\t\treturn; // need an active editor to check for properties changed\n\t\t}\n\n\t\tif (\n\t\t\tthis.activeLabel.pinned !==\n\t\t\tthis.tabsModel.isPinned(this.tabsModel.activeEditor)\n\t\t) {\n\t\t\tfn(); // only run if pinned state has changed\n\t\t}\n\t}\n\n\tprivate ifEditorIsActive(editor: EditorInput, fn: () => void): void {\n\t\tif (this.tabsModel.isActive(editor)) {\n\t\t\tfn(); // only run if editor is current active\n\t\t}\n\t}\n\n\tprivate redraw(): void {\n\t\tconst editor = this.tabsModel.activeEditor ?? undefined;\n\t\tconst options = this.groupsView.partOptions;\n\n\t\tconst isEditorPinned = editor ? this.tabsModel.isPinned(editor) : false;\n\t\tconst isGroupActive = this.groupsView.activeGroup === this.groupView;\n\n\t\tthis.activeLabel = { editor, pinned: isEditorPinned };\n\n\t\t// Update Breadcrumbs\n\t\tif (this.breadcrumbsControl) {\n\t\t\tif (isGroupActive) {\n\t\t\t\tthis.breadcrumbsControl.update();\n\t\t\t\tthis.breadcrumbsControl.domNode.classList.toggle(\n\t\t\t\t\t\"preview\",\n\t\t\t\t\t!isEditorPinned,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.breadcrumbsControl.hide();\n\t\t\t}\n\t\t}\n\n\t\t// Clear if there is no editor\n\t\tconst [titleContainer, editorLabel] = assertAllDefined(\n\t\t\tthis.titleContainer,\n\t\t\tthis.editorLabel,\n\t\t);\n\t\tif (editor) {\n\t\t\t// Dirty state\n\t\t\tthis.updateEditorDirty(editor);\n\n\t\t\t// Editor Label\n\t\t\tconst { labelFormat } = this.groupsView.partOptions;\n\t\t\tlet description: string;\n\t\t\tif (\n\t\t\t\tthis.breadcrumbsControl &&\n\t\t\t\t!this.breadcrumbsControl.isHidden()\n\t\t\t) {\n\t\t\t\tdescription = \"\"; // hide description when showing breadcrumbs\n\t\t\t} else if (labelFormat === \"default\" && !isGroupActive) {\n\t\t\t\tdescription = \"\"; // hide description when group is not active and style is 'default'\n\t\t\t} else {\n\t\t\t\tdescription =\n\t\t\t\t\teditor.getDescription(this.getVerbosity(labelFormat)) || \"\";\n\t\t\t}\n\n\t\t\teditorLabel.setResource(\n\t\t\t\t{\n\t\t\t\t\tresource: EditorResourceAccessor.getOriginalUri(editor, {\n\t\t\t\t\t\tsupportSideBySide: SideBySideEditor.BOTH,\n\t\t\t\t\t}),\n\t\t\t\t\tname: editor.getName(),\n\t\t\t\t\tdescription,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: this.getHoverTitle(editor),\n\t\t\t\t\titalic: !isEditorPinned,\n\t\t\t\t\textraClasses: [\"single-tab\", \"title-label\"].concat(\n\t\t\t\t\t\teditor.getLabelExtraClasses(),\n\t\t\t\t\t),\n\t\t\t\t\tfileDecorations: {\n\t\t\t\t\t\tcolors: Boolean(options.decorations?.colors),\n\t\t\t\t\t\tbadges: Boolean(options.decorations?.badges),\n\t\t\t\t\t},\n\t\t\t\t\ticon: editor.getIcon(),\n\t\t\t\t\thideIcon: options.showIcons === false,\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tif (isGroupActive) {\n\t\t\t\ttitleContainer.style.color =\n\t\t\t\t\tthis.getColor(TAB_ACTIVE_FOREGROUND) || \"\";\n\t\t\t} else {\n\t\t\t\ttitleContainer.style.color =\n\t\t\t\t\tthis.getColor(TAB_UNFOCUSED_ACTIVE_FOREGROUND) || \"\";\n\t\t\t}\n\n\t\t\t// Update Editor Actions Toolbar\n\t\t\tthis.updateEditorActionsToolbar();\n\t\t} else {\n\t\t\ttitleContainer.classList.remove(\"dirty\");\n\t\t\teditorLabel.clear();\n\t\t\tthis.clearEditorActionsToolbar();\n\t\t}\n\t}\n\n\tprivate getVerbosity(style: string | undefined): Verbosity {\n\t\tswitch (style) {\n\t\t\tcase \"short\":\n\t\t\t\treturn Verbosity.SHORT;\n\t\t\tcase \"long\":\n\t\t\t\treturn Verbosity.LONG;\n\t\t\tdefault:\n\t\t\t\treturn Verbosity.MEDIUM;\n\t\t}\n\t}\n\n\tprotected override prepareEditorActions(\n\t\teditorActions: IToolbarActions,\n\t): IToolbarActions {\n\t\tconst isGroupActive = this.groupsView.activeGroup === this.groupView;\n\n\t\t// Active: allow all actions\n\t\tif (isGroupActive) {\n\t\t\treturn editorActions;\n\t\t}\n\n\t\t// Inactive: only show \"Close, \"Unlock\" and secondary actions\n\t\telse {\n\t\t\treturn {\n\t\t\t\tprimary: this.groupsView.partOptions.alwaysShowEditorActions\n\t\t\t\t\t? editorActions.primary\n\t\t\t\t\t: editorActions.primary.filter(\n\t\t\t\t\t\t\t(action) =>\n\t\t\t\t\t\t\t\taction.id === CLOSE_EDITOR_COMMAND_ID ||\n\t\t\t\t\t\t\t\taction.id === UNLOCK_GROUP_COMMAND_ID,\n\t\t\t\t\t\t),\n\t\t\t\tsecondary: editorActions.secondary,\n\t\t\t};\n\t\t}\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.tabHeight;\n\t}\n\n\tlayout(dimensions: IEditorTitleControlDimensions): Dimension {\n\t\tthis.breadcrumbsControl?.layout(undefined);\n\n\t\treturn new Dimension(dimensions.container.width, this.getHeight());\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
