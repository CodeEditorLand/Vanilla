import{getActiveElement as x}from"../../../../base/browser/dom.js";import{List as C}from"../../../../base/browser/ui/list/listWidget.js";import{URI as v}from"../../../../base/common/uri.js";import{isEditorCommandsContext as m,isEditorIdentifier as G}from"../../../common/editor.js";import{isEditorGroup as g}from"../../../services/editor/common/editorGroupsService.js";function O(o,e,n,r){const s=y(o,e,n,r),i=s.length&&s[0].preserveFocus||!1,t={groupedEditors:[],preserveFocus:i};for(const d of s){const u=S(d,n);if(!u)continue;const{group:f,editor:c}=u;let I;for(const E of t.groupedEditors)if(E.group.id===f.id){I=E;break}I||(I={group:f,editors:[]},t.groupedEditors.push(I)),c&&I.editors.push(c)}return t}function y(o,e,n,r){const s=r.lastFocusedList;let i=s instanceof C&&s.getHTMLElement()===x(),t=F(o,i,e,n,r);if(!t){const u=n.activeGroup,f=u.activeEditor;t={groupId:u.id,editorIndex:f?u.getIndexOfEditor(f):void 0},i=!1}const d=a(t,i,e,n,r);return L(t,d)}function L(o,e){if(e.length<=1)return e;const n=e.findIndex(r=>r.groupId===o.groupId&&r.editorIndex===o.editorIndex);if(n!==-1)e.splice(n,1),e.unshift(o);else if(o.editorIndex===void 0)e.unshift(o);else throw new Error("Editor context not found in multi editor context");return e}function F(o,e,n,r,s){const i=o.filter(t=>m(t)||v.isUri(t));for(const t of i)if(m(t))return t;for(const t of i){const d=n.findEditors(t);if(d.length){const u=d[0],f=r.getGroup(u.groupId);return{groupId:u.groupId,editorIndex:f?.getIndexOfEditor(u.editor)}}}if(e){const t=s.lastFocusedList;for(const d of t.getFocusedElements())if(l(d))return p(d,void 0,r)}}function a(o,e,n,r,s){if(e){const t=s.lastFocusedList.getSelectedElements().filter(l);if(t.length>1)return t.map(d=>p(d,o.preserveFocus,r));if(t.length===0)return a(o,!1,n,r,s)}else{const i=r.getGroup(o.groupId),t=o.editorIndex!==void 0?i?.getEditorByIndex(o.editorIndex):i?.activeEditor;if(i&&t&&i.isSelected(t))return i.selectedEditors.map(d=>p({editor:d,groupId:i.id},o.preserveFocus,r))}return[o]}function p(o,e,n){if(g(o))return{groupId:o.id,editorIndex:void 0,preserveFocus:e};const r=n.getGroup(o.groupId);return{groupId:o.groupId,editorIndex:r?r.getIndexOfEditor(o.editor):-1,preserveFocus:e}}function l(o){return g(o)||G(o)}function S(o,e){const n=e.getGroup(o.groupId);if(!n)return;if(o.editorIndex===void 0)return{group:n,editor:void 0};const r=n.getEditorByIndex(o.editorIndex);return{group:n,editor:r}}export{O as resolveCommandsContext};
