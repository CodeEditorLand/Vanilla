{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/editor/sideBySideEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/sidebysideeditor.css\";\nimport {\n\t$,\n\tDimension,\n\tclearNode,\n\tmultibyteAwareBtoa,\n} from \"../../../../base/browser/dom.js\";\nimport type { IBoundarySashes } from \"../../../../base/browser/ui/sash/sash.js\";\nimport {\n\tOrientation,\n\tSizing,\n\tSplitView,\n} from \"../../../../base/browser/ui/splitview/splitview.js\";\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { Emitter, Event, Relay } from \"../../../../base/common/event.js\";\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { isEqual } from \"../../../../base/common/resources.js\";\nimport { assertIsDefined } from \"../../../../base/common/types.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { ITextResourceConfigurationService } from \"../../../../editor/common/services/textResourceConfiguration.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\ttype IConfigurationChangeEvent,\n\tIConfigurationService,\n} from \"../../../../platform/configuration/common/configuration.js\";\nimport type { IEditorOptions } from \"../../../../platform/editor/common/editor.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { IStorageService } from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport {\n\tEditorExtensions,\n\tEditorPaneSelectionCompareResult,\n\ttype IEditorControl,\n\ttype IEditorOpenContext,\n\ttype IEditorPane,\n\ttype IEditorPaneSelection,\n\ttype IEditorPaneSelectionChangeEvent,\n\ttype IEditorPaneWithSelection,\n\tSIDE_BY_SIDE_EDITOR_ID,\n\tSideBySideEditor as Side,\n\tisEditorPaneWithSelection,\n} from \"../../../common/editor.js\";\nimport type { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport { SideBySideEditorInput } from \"../../../common/editor/sideBySideEditorInput.js\";\nimport {\n\tSIDE_BY_SIDE_EDITOR_HORIZONTAL_BORDER,\n\tSIDE_BY_SIDE_EDITOR_VERTICAL_BORDER,\n} from \"../../../common/theme.js\";\nimport {\n\ttype IEditorGroup,\n\tIEditorGroupsService,\n} from \"../../../services/editor/common/editorGroupsService.js\";\nimport { IEditorService } from \"../../../services/editor/common/editorService.js\";\nimport type { IEditorPaneRegistry } from \"../../editor.js\";\nimport { DEFAULT_EDITOR_MIN_DIMENSIONS } from \"./editor.js\";\nimport type { EditorPane } from \"./editorPane.js\";\nimport { AbstractEditorWithViewState } from \"./editorWithViewState.js\";\n\ninterface ISideBySideEditorViewState {\n\tprimary: object;\n\tsecondary: object;\n\tfocus: Side.PRIMARY | Side.SECONDARY | undefined;\n\tratio: number | undefined;\n}\n\nfunction isSideBySideEditorViewState(\n\tthing: unknown,\n): thing is ISideBySideEditorViewState {\n\tconst candidate = thing as ISideBySideEditorViewState | undefined;\n\n\treturn (\n\t\ttypeof candidate?.primary === \"object\" &&\n\t\ttypeof candidate.secondary === \"object\"\n\t);\n}\n\ninterface ISideBySideEditorOptions extends IEditorOptions {\n\t/**\n\t * Whether the editor options should apply to\n\t * the primary or secondary side.\n\t *\n\t * If a target side is provided, that side will\n\t * also receive keyboard focus unless focus is\n\t * to be preserved.\n\t */\n\ttarget?: Side.PRIMARY | Side.SECONDARY;\n}\n\nexport class SideBySideEditor\n\textends AbstractEditorWithViewState<ISideBySideEditorViewState>\n\timplements IEditorPaneWithSelection\n{\n\tstatic readonly ID: string = SIDE_BY_SIDE_EDITOR_ID;\n\n\tstatic SIDE_BY_SIDE_LAYOUT_SETTING = \"workbench.editor.splitInGroupLayout\";\n\n\tprivate static readonly VIEW_STATE_PREFERENCE_KEY =\n\t\t\"sideBySideEditorViewState\";\n\n\t//#region Layout Constraints\n\n\tprivate get minimumPrimaryWidth() {\n\t\treturn this.primaryEditorPane ? this.primaryEditorPane.minimumWidth : 0;\n\t}\n\tprivate get maximumPrimaryWidth() {\n\t\treturn this.primaryEditorPane\n\t\t\t? this.primaryEditorPane.maximumWidth\n\t\t\t: Number.POSITIVE_INFINITY;\n\t}\n\tprivate get minimumPrimaryHeight() {\n\t\treturn this.primaryEditorPane\n\t\t\t? this.primaryEditorPane.minimumHeight\n\t\t\t: 0;\n\t}\n\tprivate get maximumPrimaryHeight() {\n\t\treturn this.primaryEditorPane\n\t\t\t? this.primaryEditorPane.maximumHeight\n\t\t\t: Number.POSITIVE_INFINITY;\n\t}\n\n\tprivate get minimumSecondaryWidth() {\n\t\treturn this.secondaryEditorPane\n\t\t\t? this.secondaryEditorPane.minimumWidth\n\t\t\t: 0;\n\t}\n\tprivate get maximumSecondaryWidth() {\n\t\treturn this.secondaryEditorPane\n\t\t\t? this.secondaryEditorPane.maximumWidth\n\t\t\t: Number.POSITIVE_INFINITY;\n\t}\n\tprivate get minimumSecondaryHeight() {\n\t\treturn this.secondaryEditorPane\n\t\t\t? this.secondaryEditorPane.minimumHeight\n\t\t\t: 0;\n\t}\n\tprivate get maximumSecondaryHeight() {\n\t\treturn this.secondaryEditorPane\n\t\t\t? this.secondaryEditorPane.maximumHeight\n\t\t\t: Number.POSITIVE_INFINITY;\n\t}\n\n\toverride set minimumWidth(value: number) {\n\t\t/* noop */\n\t}\n\toverride set maximumWidth(value: number) {\n\t\t/* noop */\n\t}\n\toverride set minimumHeight(value: number) {\n\t\t/* noop */\n\t}\n\toverride set maximumHeight(value: number) {\n\t\t/* noop */\n\t}\n\n\toverride get minimumWidth() {\n\t\treturn this.minimumPrimaryWidth + this.minimumSecondaryWidth;\n\t}\n\toverride get maximumWidth() {\n\t\treturn this.maximumPrimaryWidth + this.maximumSecondaryWidth;\n\t}\n\toverride get minimumHeight() {\n\t\treturn this.minimumPrimaryHeight + this.minimumSecondaryHeight;\n\t}\n\toverride get maximumHeight() {\n\t\treturn this.maximumPrimaryHeight + this.maximumSecondaryHeight;\n\t}\n\n\tprivate _boundarySashes: IBoundarySashes | undefined;\n\n\t//#endregion\n\n\t//#region Events\n\n\tprivate onDidCreateEditors = this._register(\n\t\tnew Emitter<{ width: number; height: number } | undefined>(),\n\t);\n\n\tprivate _onDidChangeSizeConstraints = this._register(\n\t\tnew Relay<{ width: number; height: number } | undefined>(),\n\t);\n\toverride readonly onDidChangeSizeConstraints = Event.any(\n\t\tthis.onDidCreateEditors.event,\n\t\tthis._onDidChangeSizeConstraints.event,\n\t);\n\n\tprivate readonly _onDidChangeSelection = this._register(\n\t\tnew Emitter<IEditorPaneSelectionChangeEvent>(),\n\t);\n\treadonly onDidChangeSelection = this._onDidChangeSelection.event;\n\n\t//#endregion\n\n\tprivate primaryEditorPane: EditorPane | undefined = undefined;\n\tprivate secondaryEditorPane: EditorPane | undefined = undefined;\n\n\tprivate primaryEditorContainer: HTMLElement | undefined;\n\tprivate secondaryEditorContainer: HTMLElement | undefined;\n\n\tprivate splitview: SplitView | undefined;\n\n\tprivate readonly splitviewDisposables = this._register(\n\t\tnew DisposableStore(),\n\t);\n\tprivate readonly editorDisposables = this._register(new DisposableStore());\n\n\tprivate orientation =\n\t\tthis.configurationService.getValue<\"vertical\" | \"horizontal\">(\n\t\t\tSideBySideEditor.SIDE_BY_SIDE_LAYOUT_SETTING,\n\t\t) === \"vertical\"\n\t\t\t? Orientation.VERTICAL\n\t\t\t: Orientation.HORIZONTAL;\n\tprivate dimension = new Dimension(0, 0);\n\n\tprivate lastFocusedSide: Side.PRIMARY | Side.SECONDARY | undefined =\n\t\tundefined;\n\n\tconstructor(\n\t\tgroup: IEditorGroup,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ITextResourceConfigurationService textResourceConfigurationService: ITextResourceConfigurationService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(SideBySideEditor.ID, group, SideBySideEditor.VIEW_STATE_PREFERENCE_KEY, telemetryService, instantiationService, storageService, textResourceConfigurationService, themeService, editorService, editorGroupService);\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(\n\t\t\tthis.configurationService.onDidChangeConfiguration((e) =>\n\t\t\t\tthis.onConfigurationUpdated(e),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate onConfigurationUpdated(event: IConfigurationChangeEvent): void {\n\t\tif (\n\t\t\tevent.affectsConfiguration(\n\t\t\t\tSideBySideEditor.SIDE_BY_SIDE_LAYOUT_SETTING,\n\t\t\t)\n\t\t) {\n\t\t\tthis.orientation =\n\t\t\t\tthis.configurationService.getValue<\"vertical\" | \"horizontal\">(\n\t\t\t\t\tSideBySideEditor.SIDE_BY_SIDE_LAYOUT_SETTING,\n\t\t\t\t) === \"vertical\"\n\t\t\t\t\t? Orientation.VERTICAL\n\t\t\t\t\t: Orientation.HORIZONTAL;\n\n\t\t\t// If config updated from event, re-create the split\n\t\t\t// editor using the new layout orientation if it was\n\t\t\t// already created.\n\t\t\tif (this.splitview) {\n\t\t\t\tthis.recreateSplitview();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate recreateSplitview(): void {\n\t\tconst container = assertIsDefined(this.getContainer());\n\n\t\t// Clear old (if any) but remember ratio\n\t\tconst ratio = this.getSplitViewRatio();\n\t\tif (this.splitview) {\n\t\t\tthis.splitview.el.remove();\n\t\t\tthis.splitviewDisposables.clear();\n\t\t}\n\n\t\t// Create new\n\t\tthis.createSplitView(container, ratio);\n\n\t\tthis.layout(this.dimension);\n\t}\n\n\tprivate getSplitViewRatio(): number | undefined {\n\t\tlet ratio: number | undefined;\n\n\t\tif (this.splitview) {\n\t\t\tconst leftViewSize = this.splitview.getViewSize(0);\n\t\t\tconst rightViewSize = this.splitview.getViewSize(1);\n\n\t\t\t// Only return a ratio when the view size is significantly\n\t\t\t// enough different for left and right view sizes\n\t\t\tif (Math.abs(leftViewSize - rightViewSize) > 1) {\n\t\t\t\tconst totalSize =\n\t\t\t\t\tthis.splitview.orientation === Orientation.HORIZONTAL\n\t\t\t\t\t\t? this.dimension.width\n\t\t\t\t\t\t: this.dimension.height;\n\t\t\t\tratio = leftViewSize / totalSize;\n\t\t\t}\n\t\t}\n\n\t\treturn ratio;\n\t}\n\n\tprotected createEditor(parent: HTMLElement): void {\n\t\tparent.classList.add(\"side-by-side-editor\");\n\n\t\t// Editor pane containers\n\t\tthis.secondaryEditorContainer = $(\n\t\t\t\".side-by-side-editor-container.editor-instance\",\n\t\t);\n\t\tthis.primaryEditorContainer = $(\n\t\t\t\".side-by-side-editor-container.editor-instance\",\n\t\t);\n\n\t\t// Split view\n\t\tthis.createSplitView(parent);\n\t}\n\n\tprivate createSplitView(parent: HTMLElement, ratio?: number): void {\n\t\t// Splitview widget\n\t\tthis.splitview = this.splitviewDisposables.add(\n\t\t\tnew SplitView(parent, { orientation: this.orientation }),\n\t\t);\n\t\tthis.splitviewDisposables.add(\n\t\t\tthis.splitview.onDidSashReset(() =>\n\t\t\t\tthis.splitview?.distributeViewSizes(),\n\t\t\t),\n\t\t);\n\n\t\tif (this.orientation === Orientation.HORIZONTAL) {\n\t\t\tthis.splitview.orthogonalEndSash = this._boundarySashes?.bottom;\n\t\t} else {\n\t\t\tthis.splitview.orthogonalStartSash = this._boundarySashes?.left;\n\t\t\tthis.splitview.orthogonalEndSash = this._boundarySashes?.right;\n\t\t}\n\n\t\t// Figure out sizing\n\t\tlet leftSizing: number | Sizing = Sizing.Distribute;\n\t\tlet rightSizing: number | Sizing = Sizing.Distribute;\n\t\tif (ratio) {\n\t\t\tconst totalSize =\n\t\t\t\tthis.splitview.orientation === Orientation.HORIZONTAL\n\t\t\t\t\t? this.dimension.width\n\t\t\t\t\t: this.dimension.height;\n\n\t\t\tleftSizing = Math.round(totalSize * ratio);\n\t\t\trightSizing = totalSize - leftSizing;\n\n\t\t\t// We need to call `layout` for the `ratio` to have any effect\n\t\t\tthis.splitview.layout(\n\t\t\t\tthis.orientation === Orientation.HORIZONTAL\n\t\t\t\t\t? this.dimension.width\n\t\t\t\t\t: this.dimension.height,\n\t\t\t);\n\t\t}\n\n\t\t// Secondary (left)\n\t\tconst secondaryEditorContainer = assertIsDefined(\n\t\t\tthis.secondaryEditorContainer,\n\t\t);\n\t\tthis.splitview.addView(\n\t\t\t{\n\t\t\t\telement: secondaryEditorContainer,\n\t\t\t\tlayout: (size) =>\n\t\t\t\t\tthis.layoutPane(this.secondaryEditorPane, size),\n\t\t\t\tminimumSize:\n\t\t\t\t\tthis.orientation === Orientation.HORIZONTAL\n\t\t\t\t\t\t? DEFAULT_EDITOR_MIN_DIMENSIONS.width\n\t\t\t\t\t\t: DEFAULT_EDITOR_MIN_DIMENSIONS.height,\n\t\t\t\tmaximumSize: Number.POSITIVE_INFINITY,\n\t\t\t\tonDidChange: Event.None,\n\t\t\t},\n\t\t\tleftSizing,\n\t\t);\n\n\t\t// Primary (right)\n\t\tconst primaryEditorContainer = assertIsDefined(\n\t\t\tthis.primaryEditorContainer,\n\t\t);\n\t\tthis.splitview.addView(\n\t\t\t{\n\t\t\t\telement: primaryEditorContainer,\n\t\t\t\tlayout: (size) => this.layoutPane(this.primaryEditorPane, size),\n\t\t\t\tminimumSize:\n\t\t\t\t\tthis.orientation === Orientation.HORIZONTAL\n\t\t\t\t\t\t? DEFAULT_EDITOR_MIN_DIMENSIONS.width\n\t\t\t\t\t\t: DEFAULT_EDITOR_MIN_DIMENSIONS.height,\n\t\t\t\tmaximumSize: Number.POSITIVE_INFINITY,\n\t\t\t\tonDidChange: Event.None,\n\t\t\t},\n\t\t\trightSizing,\n\t\t);\n\n\t\tthis.updateStyles();\n\t}\n\n\toverride getTitle(): string {\n\t\tif (this.input) {\n\t\t\treturn this.input.getName();\n\t\t}\n\n\t\treturn localize(\"sideBySideEditor\", \"Side by Side Editor\");\n\t}\n\n\toverride async setInput(\n\t\tinput: SideBySideEditorInput,\n\t\toptions: ISideBySideEditorOptions | undefined,\n\t\tcontext: IEditorOpenContext,\n\t\ttoken: CancellationToken,\n\t): Promise<void> {\n\t\tconst oldInput = this.input;\n\t\tawait super.setInput(input, options, context, token);\n\n\t\t// Create new side by side editors if either we have not\n\t\t// been created before or the input no longer matches.\n\t\tif (!oldInput || !input.matches(oldInput)) {\n\t\t\tif (oldInput) {\n\t\t\t\tthis.disposeEditors();\n\t\t\t}\n\n\t\t\tthis.createEditors(input);\n\t\t}\n\n\t\t// Restore any previous view state\n\t\tconst { primary, secondary, viewState } = this.loadViewState(\n\t\t\tinput,\n\t\t\toptions,\n\t\t\tcontext,\n\t\t);\n\t\tthis.lastFocusedSide = viewState?.focus;\n\n\t\tif (typeof viewState?.ratio === \"number\" && this.splitview) {\n\t\t\tconst totalSize =\n\t\t\t\tthis.splitview.orientation === Orientation.HORIZONTAL\n\t\t\t\t\t? this.dimension.width\n\t\t\t\t\t: this.dimension.height;\n\n\t\t\tthis.splitview.resizeView(\n\t\t\t\t0,\n\t\t\t\tMath.round(totalSize * viewState.ratio),\n\t\t\t);\n\t\t} else {\n\t\t\tthis.splitview?.distributeViewSizes();\n\t\t}\n\n\t\t// Set input to both sides\n\t\tawait Promise.all([\n\t\t\tthis.secondaryEditorPane?.setInput(\n\t\t\t\tinput.secondary,\n\t\t\t\tsecondary,\n\t\t\t\tcontext,\n\t\t\t\ttoken,\n\t\t\t),\n\t\t\tthis.primaryEditorPane?.setInput(\n\t\t\t\tinput.primary,\n\t\t\t\tprimary,\n\t\t\t\tcontext,\n\t\t\t\ttoken,\n\t\t\t),\n\t\t]);\n\n\t\t// Update focus if target is provided\n\t\tif (typeof options?.target === \"number\") {\n\t\t\tthis.lastFocusedSide = options.target;\n\t\t}\n\t}\n\n\tprivate loadViewState(\n\t\tinput: SideBySideEditorInput,\n\t\toptions: ISideBySideEditorOptions | undefined,\n\t\tcontext: IEditorOpenContext,\n\t): {\n\t\tprimary: IEditorOptions | undefined;\n\t\tsecondary: IEditorOptions | undefined;\n\t\tviewState: ISideBySideEditorViewState | undefined;\n\t} {\n\t\tconst viewState = isSideBySideEditorViewState(options?.viewState)\n\t\t\t? options?.viewState\n\t\t\t: this.loadEditorViewState(input, context);\n\n\t\tlet primaryOptions: IEditorOptions = Object.create(null);\n\t\tlet secondaryOptions: IEditorOptions | undefined;\n\n\t\t// Depending on the optional `target` property, we apply\n\t\t// the provided options to either the primary or secondary\n\t\t// side\n\n\t\tif (options?.target === Side.SECONDARY) {\n\t\t\tsecondaryOptions = { ...options };\n\t\t} else {\n\t\t\tprimaryOptions = { ...options };\n\t\t}\n\n\t\tprimaryOptions.viewState = viewState?.primary;\n\n\t\tif (viewState?.secondary) {\n\t\t\tif (secondaryOptions) {\n\t\t\t\tsecondaryOptions.viewState = viewState?.secondary;\n\t\t\t} else {\n\t\t\t\tsecondaryOptions = { viewState: viewState.secondary };\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tprimary: primaryOptions,\n\t\t\tsecondary: secondaryOptions,\n\t\t\tviewState,\n\t\t};\n\t}\n\n\tprivate createEditors(newInput: SideBySideEditorInput): void {\n\t\t// Create editors\n\t\tthis.secondaryEditorPane = this.doCreateEditor(\n\t\t\tnewInput.secondary,\n\t\t\tassertIsDefined(this.secondaryEditorContainer),\n\t\t);\n\t\tthis.primaryEditorPane = this.doCreateEditor(\n\t\t\tnewInput.primary,\n\t\t\tassertIsDefined(this.primaryEditorContainer),\n\t\t);\n\n\t\t// Layout\n\t\tthis.layout(this.dimension);\n\n\t\t// Eventing\n\t\tthis._onDidChangeSizeConstraints.input = Event.any(\n\t\t\tEvent.map(\n\t\t\t\tthis.secondaryEditorPane.onDidChangeSizeConstraints,\n\t\t\t\t() => undefined,\n\t\t\t),\n\t\t\tEvent.map(\n\t\t\t\tthis.primaryEditorPane.onDidChangeSizeConstraints,\n\t\t\t\t() => undefined,\n\t\t\t),\n\t\t);\n\t\tthis.onDidCreateEditors.fire(undefined);\n\n\t\t// Track focus and signal active control change via event\n\t\tthis.editorDisposables.add(\n\t\t\tthis.primaryEditorPane.onDidFocus(() =>\n\t\t\t\tthis.onDidFocusChange(Side.PRIMARY),\n\t\t\t),\n\t\t);\n\t\tthis.editorDisposables.add(\n\t\t\tthis.secondaryEditorPane.onDidFocus(() =>\n\t\t\t\tthis.onDidFocusChange(Side.SECONDARY),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate doCreateEditor(\n\t\teditorInput: EditorInput,\n\t\tcontainer: HTMLElement,\n\t): EditorPane {\n\t\tconst editorPaneDescriptor = Registry.as<IEditorPaneRegistry>(\n\t\t\tEditorExtensions.EditorPane,\n\t\t).getEditorPane(editorInput);\n\t\tif (!editorPaneDescriptor) {\n\t\t\tthrow new Error(\"No editor pane descriptor for editor found\");\n\t\t}\n\n\t\t// Create editor pane and make visible\n\t\tconst editorPane = editorPaneDescriptor.instantiate(\n\t\t\tthis.instantiationService,\n\t\t\tthis.group,\n\t\t);\n\t\teditorPane.create(container);\n\t\teditorPane.setVisible(this.isVisible());\n\n\t\t// Track selections if supported\n\t\tif (isEditorPaneWithSelection(editorPane)) {\n\t\t\tthis.editorDisposables.add(\n\t\t\t\teditorPane.onDidChangeSelection((e) =>\n\t\t\t\t\tthis._onDidChangeSelection.fire(e),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\t// Track for disposal\n\t\tthis.editorDisposables.add(editorPane);\n\n\t\treturn editorPane;\n\t}\n\n\tprivate onDidFocusChange(side: Side.PRIMARY | Side.SECONDARY): void {\n\t\tthis.lastFocusedSide = side;\n\n\t\t// Signal to outside that our active control changed\n\t\tthis._onDidChangeControl.fire();\n\t}\n\n\tgetSelection(): IEditorPaneSelection | undefined {\n\t\tconst lastFocusedEditorPane = this.getLastFocusedEditorPane();\n\t\tif (isEditorPaneWithSelection(lastFocusedEditorPane)) {\n\t\t\tconst selection = lastFocusedEditorPane.getSelection();\n\t\t\tif (selection) {\n\t\t\t\treturn new SideBySideAwareEditorPaneSelection(\n\t\t\t\t\tselection,\n\t\t\t\t\tlastFocusedEditorPane === this.primaryEditorPane\n\t\t\t\t\t\t? Side.PRIMARY\n\t\t\t\t\t\t: Side.SECONDARY,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\toverride setOptions(options: ISideBySideEditorOptions | undefined): void {\n\t\tsuper.setOptions(options);\n\n\t\t// Update focus if target is provided\n\t\tif (typeof options?.target === \"number\") {\n\t\t\tthis.lastFocusedSide = options.target;\n\t\t}\n\n\t\t// Apply to focused side\n\t\tthis.getLastFocusedEditorPane()?.setOptions(options);\n\t}\n\n\tprotected override setEditorVisible(visible: boolean): void {\n\t\t// Forward to both sides\n\t\tthis.primaryEditorPane?.setVisible(visible);\n\t\tthis.secondaryEditorPane?.setVisible(visible);\n\n\t\tsuper.setEditorVisible(visible);\n\t}\n\n\toverride clearInput(): void {\n\t\tsuper.clearInput();\n\n\t\t// Forward to both sides\n\t\tthis.primaryEditorPane?.clearInput();\n\t\tthis.secondaryEditorPane?.clearInput();\n\n\t\t// Since we do not keep side editors alive\n\t\t// we dispose any editor created for recreation\n\t\tthis.disposeEditors();\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\n\t\tthis.getLastFocusedEditorPane()?.focus();\n\t}\n\n\tprivate getLastFocusedEditorPane(): EditorPane | undefined {\n\t\tif (this.lastFocusedSide === Side.SECONDARY) {\n\t\t\treturn this.secondaryEditorPane;\n\t\t}\n\n\t\treturn this.primaryEditorPane;\n\t}\n\n\tlayout(dimension: Dimension): void {\n\t\tthis.dimension = dimension;\n\n\t\tconst splitview = assertIsDefined(this.splitview);\n\t\tsplitview.layout(\n\t\t\tthis.orientation === Orientation.HORIZONTAL\n\t\t\t\t? dimension.width\n\t\t\t\t: dimension.height,\n\t\t);\n\t}\n\n\toverride setBoundarySashes(sashes: IBoundarySashes) {\n\t\tthis._boundarySashes = sashes;\n\n\t\tif (this.splitview) {\n\t\t\tthis.splitview.orthogonalEndSash = sashes.bottom;\n\t\t}\n\t}\n\n\tprivate layoutPane(pane: EditorPane | undefined, size: number): void {\n\t\tpane?.layout(\n\t\t\tthis.orientation === Orientation.HORIZONTAL\n\t\t\t\t? new Dimension(size, this.dimension.height)\n\t\t\t\t: new Dimension(this.dimension.width, size),\n\t\t);\n\t}\n\n\toverride getControl(): IEditorControl | undefined {\n\t\treturn this.getLastFocusedEditorPane()?.getControl();\n\t}\n\n\tgetPrimaryEditorPane(): IEditorPane | undefined {\n\t\treturn this.primaryEditorPane;\n\t}\n\n\tgetSecondaryEditorPane(): IEditorPane | undefined {\n\t\treturn this.secondaryEditorPane;\n\t}\n\n\tprotected tracksEditorViewState(input: EditorInput): boolean {\n\t\treturn input instanceof SideBySideEditorInput;\n\t}\n\n\tprotected computeEditorViewState(\n\t\tresource: URI,\n\t): ISideBySideEditorViewState | undefined {\n\t\tif (\n\t\t\t!this.input ||\n\t\t\t!isEqual(resource, this.toEditorViewStateResource(this.input))\n\t\t) {\n\t\t\treturn; // unexpected state\n\t\t}\n\n\t\tconst primarViewState = this.primaryEditorPane?.getViewState();\n\t\tconst secondaryViewState = this.secondaryEditorPane?.getViewState();\n\n\t\tif (!primarViewState || !secondaryViewState) {\n\t\t\treturn; // we actually need view states\n\t\t}\n\n\t\treturn {\n\t\t\tprimary: primarViewState,\n\t\t\tsecondary: secondaryViewState,\n\t\t\tfocus: this.lastFocusedSide,\n\t\t\tratio: this.getSplitViewRatio(),\n\t\t};\n\t}\n\n\tprotected toEditorViewStateResource(input: EditorInput): URI | undefined {\n\t\tlet primary: URI | undefined;\n\t\tlet secondary: URI | undefined;\n\n\t\tif (input instanceof SideBySideEditorInput) {\n\t\t\tprimary = input.primary.resource;\n\t\t\tsecondary = input.secondary.resource;\n\t\t}\n\n\t\tif (!secondary || !primary) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// create a URI that is the Base64 concatenation of original + modified resource\n\t\treturn URI.from({\n\t\t\tscheme: \"sideBySide\",\n\t\t\tpath: `${multibyteAwareBtoa(secondary.toString())}${multibyteAwareBtoa(primary.toString())}`,\n\t\t});\n\t}\n\n\toverride updateStyles(): void {\n\t\tsuper.updateStyles();\n\n\t\tif (this.primaryEditorContainer) {\n\t\t\tif (this.orientation === Orientation.HORIZONTAL) {\n\t\t\t\tthis.primaryEditorContainer.style.borderLeftWidth = \"1px\";\n\t\t\t\tthis.primaryEditorContainer.style.borderLeftStyle = \"solid\";\n\t\t\t\tthis.primaryEditorContainer.style.borderLeftColor =\n\t\t\t\t\tthis.getColor(SIDE_BY_SIDE_EDITOR_VERTICAL_BORDER) ?? \"\";\n\n\t\t\t\tthis.primaryEditorContainer.style.borderTopWidth = \"0\";\n\t\t\t} else {\n\t\t\t\tthis.primaryEditorContainer.style.borderTopWidth = \"1px\";\n\t\t\t\tthis.primaryEditorContainer.style.borderTopStyle = \"solid\";\n\t\t\t\tthis.primaryEditorContainer.style.borderTopColor =\n\t\t\t\t\tthis.getColor(SIDE_BY_SIDE_EDITOR_HORIZONTAL_BORDER) ?? \"\";\n\n\t\t\t\tthis.primaryEditorContainer.style.borderLeftWidth = \"0\";\n\t\t\t}\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.disposeEditors();\n\n\t\tsuper.dispose();\n\t}\n\n\tprivate disposeEditors(): void {\n\t\tthis.editorDisposables.clear();\n\n\t\tthis.secondaryEditorPane = undefined;\n\t\tthis.primaryEditorPane = undefined;\n\n\t\tthis.lastFocusedSide = undefined;\n\n\t\tif (this.secondaryEditorContainer) {\n\t\t\tclearNode(this.secondaryEditorContainer);\n\t\t}\n\n\t\tif (this.primaryEditorContainer) {\n\t\t\tclearNode(this.primaryEditorContainer);\n\t\t}\n\t}\n}\n\nclass SideBySideAwareEditorPaneSelection implements IEditorPaneSelection {\n\tconstructor(\n\t\tprivate readonly selection: IEditorPaneSelection,\n\t\tprivate readonly side: Side.PRIMARY | Side.SECONDARY,\n\t) {}\n\n\tcompare(other: IEditorPaneSelection): EditorPaneSelectionCompareResult {\n\t\tif (!(other instanceof SideBySideAwareEditorPaneSelection)) {\n\t\t\treturn EditorPaneSelectionCompareResult.DIFFERENT;\n\t\t}\n\n\t\tif (this.side !== other.side) {\n\t\t\treturn EditorPaneSelectionCompareResult.DIFFERENT;\n\t\t}\n\n\t\treturn this.selection.compare(other.selection);\n\t}\n\n\trestore(options: IEditorOptions): ISideBySideEditorOptions {\n\t\tconst sideBySideEditorOptions: ISideBySideEditorOptions = {\n\t\t\t...options,\n\t\t\ttarget: this.side,\n\t\t};\n\n\t\treturn this.selection.restore(sideBySideEditorOptions);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
