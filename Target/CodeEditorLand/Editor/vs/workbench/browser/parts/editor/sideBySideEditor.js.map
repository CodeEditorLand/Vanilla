{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/editor/sideBySideEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './media/sidebysideeditor.css';\nimport { localize } from '../../../../nls.js';\nimport { Dimension, $, clearNode, multibyteAwareBtoa } from '../../../../base/browser/dom.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { IEditorControl, IEditorPane, IEditorOpenContext, EditorExtensions, SIDE_BY_SIDE_EDITOR_ID, SideBySideEditor as Side, IEditorPaneSelection, IEditorPaneWithSelection, IEditorPaneSelectionChangeEvent, isEditorPaneWithSelection, EditorPaneSelectionCompareResult } from '../../../common/editor.js';\nimport { SideBySideEditorInput } from '../../../common/editor/sideBySideEditorInput.js';\nimport { EditorInput } from '../../../common/editor/editorInput.js';\nimport { EditorPane } from './editorPane.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { IEditorPaneRegistry } from '../../editor.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { IEditorGroup, IEditorGroupsService } from '../../../services/editor/common/editorGroupsService.js';\nimport { SplitView, Sizing, Orientation } from '../../../../base/browser/ui/splitview/splitview.js';\nimport { Event, Relay, Emitter } from '../../../../base/common/event.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { assertIsDefined } from '../../../../base/common/types.js';\nimport { IEditorOptions } from '../../../../platform/editor/common/editor.js';\nimport { IConfigurationChangeEvent, IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { DEFAULT_EDITOR_MIN_DIMENSIONS } from './editor.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { SIDE_BY_SIDE_EDITOR_HORIZONTAL_BORDER, SIDE_BY_SIDE_EDITOR_VERTICAL_BORDER } from '../../../common/theme.js';\nimport { AbstractEditorWithViewState } from './editorWithViewState.js';\nimport { ITextResourceConfigurationService } from '../../../../editor/common/services/textResourceConfiguration.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { isEqual } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IBoundarySashes } from '../../../../base/browser/ui/sash/sash.js';\n\ninterface ISideBySideEditorViewState {\n\tprimary: object;\n\tsecondary: object;\n\tfocus: Side.PRIMARY | Side.SECONDARY | undefined;\n\tratio: number | undefined;\n}\n\nfunction isSideBySideEditorViewState(thing: unknown): thing is ISideBySideEditorViewState {\n\tconst candidate = thing as ISideBySideEditorViewState | undefined;\n\n\treturn typeof candidate?.primary === 'object' && typeof candidate.secondary === 'object';\n}\n\ninterface ISideBySideEditorOptions extends IEditorOptions {\n\n\t/**\n\t * Whether the editor options should apply to\n\t * the primary or secondary side.\n\t *\n\t * If a target side is provided, that side will\n\t * also receive keyboard focus unless focus is\n\t * to be preserved.\n\t */\n\ttarget?: Side.PRIMARY | Side.SECONDARY;\n}\n\nexport class SideBySideEditor extends AbstractEditorWithViewState<ISideBySideEditorViewState> implements IEditorPaneWithSelection {\n\n\tstatic readonly ID: string = SIDE_BY_SIDE_EDITOR_ID;\n\n\tstatic SIDE_BY_SIDE_LAYOUT_SETTING = 'workbench.editor.splitInGroupLayout';\n\n\tprivate static readonly VIEW_STATE_PREFERENCE_KEY = 'sideBySideEditorViewState';\n\n\t//#region Layout Constraints\n\n\tprivate get minimumPrimaryWidth() { return this.primaryEditorPane ? this.primaryEditorPane.minimumWidth : 0; }\n\tprivate get maximumPrimaryWidth() { return this.primaryEditorPane ? this.primaryEditorPane.maximumWidth : Number.POSITIVE_INFINITY; }\n\tprivate get minimumPrimaryHeight() { return this.primaryEditorPane ? this.primaryEditorPane.minimumHeight : 0; }\n\tprivate get maximumPrimaryHeight() { return this.primaryEditorPane ? this.primaryEditorPane.maximumHeight : Number.POSITIVE_INFINITY; }\n\n\tprivate get minimumSecondaryWidth() { return this.secondaryEditorPane ? this.secondaryEditorPane.minimumWidth : 0; }\n\tprivate get maximumSecondaryWidth() { return this.secondaryEditorPane ? this.secondaryEditorPane.maximumWidth : Number.POSITIVE_INFINITY; }\n\tprivate get minimumSecondaryHeight() { return this.secondaryEditorPane ? this.secondaryEditorPane.minimumHeight : 0; }\n\tprivate get maximumSecondaryHeight() { return this.secondaryEditorPane ? this.secondaryEditorPane.maximumHeight : Number.POSITIVE_INFINITY; }\n\n\toverride set minimumWidth(value: number) { /* noop */ }\n\toverride set maximumWidth(value: number) { /* noop */ }\n\toverride set minimumHeight(value: number) { /* noop */ }\n\toverride set maximumHeight(value: number) { /* noop */ }\n\n\toverride get minimumWidth() { return this.minimumPrimaryWidth + this.minimumSecondaryWidth; }\n\toverride get maximumWidth() { return this.maximumPrimaryWidth + this.maximumSecondaryWidth; }\n\toverride get minimumHeight() { return this.minimumPrimaryHeight + this.minimumSecondaryHeight; }\n\toverride get maximumHeight() { return this.maximumPrimaryHeight + this.maximumSecondaryHeight; }\n\n\tprivate _boundarySashes: IBoundarySashes | undefined;\n\n\t//#endregion\n\n\t//#region Events\n\n\tprivate onDidCreateEditors = this._register(new Emitter<{ width: number; height: number } | undefined>());\n\n\tprivate _onDidChangeSizeConstraints = this._register(new Relay<{ width: number; height: number } | undefined>());\n\toverride readonly onDidChangeSizeConstraints = Event.any(this.onDidCreateEditors.event, this._onDidChangeSizeConstraints.event);\n\n\tprivate readonly _onDidChangeSelection = this._register(new Emitter<IEditorPaneSelectionChangeEvent>());\n\treadonly onDidChangeSelection = this._onDidChangeSelection.event;\n\n\t//#endregion\n\n\tprivate primaryEditorPane: EditorPane | undefined = undefined;\n\tprivate secondaryEditorPane: EditorPane | undefined = undefined;\n\n\tprivate primaryEditorContainer: HTMLElement | undefined;\n\tprivate secondaryEditorContainer: HTMLElement | undefined;\n\n\tprivate splitview: SplitView | undefined;\n\n\tprivate readonly splitviewDisposables = this._register(new DisposableStore());\n\tprivate readonly editorDisposables = this._register(new DisposableStore());\n\n\tprivate orientation = this.configurationService.getValue<'vertical' | 'horizontal'>(SideBySideEditor.SIDE_BY_SIDE_LAYOUT_SETTING) === 'vertical' ? Orientation.VERTICAL : Orientation.HORIZONTAL;\n\tprivate dimension = new Dimension(0, 0);\n\n\tprivate lastFocusedSide: Side.PRIMARY | Side.SECONDARY | undefined = undefined;\n\n\tconstructor(\n\t\tgroup: IEditorGroup,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ITextResourceConfigurationService textResourceConfigurationService: ITextResourceConfigurationService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(SideBySideEditor.ID, group, SideBySideEditor.VIEW_STATE_PREFERENCE_KEY, telemetryService, instantiationService, storageService, textResourceConfigurationService, themeService, editorService, editorGroupService);\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => this.onConfigurationUpdated(e)));\n\t}\n\n\tprivate onConfigurationUpdated(event: IConfigurationChangeEvent): void {\n\t\tif (event.affectsConfiguration(SideBySideEditor.SIDE_BY_SIDE_LAYOUT_SETTING)) {\n\t\t\tthis.orientation = this.configurationService.getValue<'vertical' | 'horizontal'>(SideBySideEditor.SIDE_BY_SIDE_LAYOUT_SETTING) === 'vertical' ? Orientation.VERTICAL : Orientation.HORIZONTAL;\n\n\t\t\t// If config updated from event, re-create the split\n\t\t\t// editor using the new layout orientation if it was\n\t\t\t// already created.\n\t\t\tif (this.splitview) {\n\t\t\t\tthis.recreateSplitview();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate recreateSplitview(): void {\n\t\tconst container = assertIsDefined(this.getContainer());\n\n\t\t// Clear old (if any) but remember ratio\n\t\tconst ratio = this.getSplitViewRatio();\n\t\tif (this.splitview) {\n\t\t\tthis.splitview.el.remove();\n\t\t\tthis.splitviewDisposables.clear();\n\t\t}\n\n\t\t// Create new\n\t\tthis.createSplitView(container, ratio);\n\n\t\tthis.layout(this.dimension);\n\t}\n\n\tprivate getSplitViewRatio(): number | undefined {\n\t\tlet ratio: number | undefined = undefined;\n\n\t\tif (this.splitview) {\n\t\t\tconst leftViewSize = this.splitview.getViewSize(0);\n\t\t\tconst rightViewSize = this.splitview.getViewSize(1);\n\n\t\t\t// Only return a ratio when the view size is significantly\n\t\t\t// enough different for left and right view sizes\n\t\t\tif (Math.abs(leftViewSize - rightViewSize) > 1) {\n\t\t\t\tconst totalSize = this.splitview.orientation === Orientation.HORIZONTAL ? this.dimension.width : this.dimension.height;\n\t\t\t\tratio = leftViewSize / totalSize;\n\t\t\t}\n\t\t}\n\n\t\treturn ratio;\n\t}\n\n\tprotected createEditor(parent: HTMLElement): void {\n\t\tparent.classList.add('side-by-side-editor');\n\n\t\t// Editor pane containers\n\t\tthis.secondaryEditorContainer = $('.side-by-side-editor-container.editor-instance');\n\t\tthis.primaryEditorContainer = $('.side-by-side-editor-container.editor-instance');\n\n\t\t// Split view\n\t\tthis.createSplitView(parent);\n\t}\n\n\tprivate createSplitView(parent: HTMLElement, ratio?: number): void {\n\n\t\t// Splitview widget\n\t\tthis.splitview = this.splitviewDisposables.add(new SplitView(parent, { orientation: this.orientation }));\n\t\tthis.splitviewDisposables.add(this.splitview.onDidSashReset(() => this.splitview?.distributeViewSizes()));\n\n\t\tif (this.orientation === Orientation.HORIZONTAL) {\n\t\t\tthis.splitview.orthogonalEndSash = this._boundarySashes?.bottom;\n\t\t} else {\n\t\t\tthis.splitview.orthogonalStartSash = this._boundarySashes?.left;\n\t\t\tthis.splitview.orthogonalEndSash = this._boundarySashes?.right;\n\t\t}\n\n\t\t// Figure out sizing\n\t\tlet leftSizing: number | Sizing = Sizing.Distribute;\n\t\tlet rightSizing: number | Sizing = Sizing.Distribute;\n\t\tif (ratio) {\n\t\t\tconst totalSize = this.splitview.orientation === Orientation.HORIZONTAL ? this.dimension.width : this.dimension.height;\n\n\t\t\tleftSizing = Math.round(totalSize * ratio);\n\t\t\trightSizing = totalSize - leftSizing;\n\n\t\t\t// We need to call `layout` for the `ratio` to have any effect\n\t\t\tthis.splitview.layout(this.orientation === Orientation.HORIZONTAL ? this.dimension.width : this.dimension.height);\n\t\t}\n\n\t\t// Secondary (left)\n\t\tconst secondaryEditorContainer = assertIsDefined(this.secondaryEditorContainer);\n\t\tthis.splitview.addView({\n\t\t\telement: secondaryEditorContainer,\n\t\t\tlayout: size => this.layoutPane(this.secondaryEditorPane, size),\n\t\t\tminimumSize: this.orientation === Orientation.HORIZONTAL ? DEFAULT_EDITOR_MIN_DIMENSIONS.width : DEFAULT_EDITOR_MIN_DIMENSIONS.height,\n\t\t\tmaximumSize: Number.POSITIVE_INFINITY,\n\t\t\tonDidChange: Event.None\n\t\t}, leftSizing);\n\n\t\t// Primary (right)\n\t\tconst primaryEditorContainer = assertIsDefined(this.primaryEditorContainer);\n\t\tthis.splitview.addView({\n\t\t\telement: primaryEditorContainer,\n\t\t\tlayout: size => this.layoutPane(this.primaryEditorPane, size),\n\t\t\tminimumSize: this.orientation === Orientation.HORIZONTAL ? DEFAULT_EDITOR_MIN_DIMENSIONS.width : DEFAULT_EDITOR_MIN_DIMENSIONS.height,\n\t\t\tmaximumSize: Number.POSITIVE_INFINITY,\n\t\t\tonDidChange: Event.None\n\t\t}, rightSizing);\n\n\t\tthis.updateStyles();\n\t}\n\n\toverride getTitle(): string {\n\t\tif (this.input) {\n\t\t\treturn this.input.getName();\n\t\t}\n\n\t\treturn localize('sideBySideEditor', \"Side by Side Editor\");\n\t}\n\n\toverride async setInput(input: SideBySideEditorInput, options: ISideBySideEditorOptions | undefined, context: IEditorOpenContext, token: CancellationToken): Promise<void> {\n\t\tconst oldInput = this.input;\n\t\tawait super.setInput(input, options, context, token);\n\n\t\t// Create new side by side editors if either we have not\n\t\t// been created before or the input no longer matches.\n\t\tif (!oldInput || !input.matches(oldInput)) {\n\t\t\tif (oldInput) {\n\t\t\t\tthis.disposeEditors();\n\t\t\t}\n\n\t\t\tthis.createEditors(input);\n\t\t}\n\n\t\t// Restore any previous view state\n\t\tconst { primary, secondary, viewState } = this.loadViewState(input, options, context);\n\t\tthis.lastFocusedSide = viewState?.focus;\n\n\t\tif (typeof viewState?.ratio === 'number' && this.splitview) {\n\t\t\tconst totalSize = this.splitview.orientation === Orientation.HORIZONTAL ? this.dimension.width : this.dimension.height;\n\n\t\t\tthis.splitview.resizeView(0, Math.round(totalSize * viewState.ratio));\n\t\t} else {\n\t\t\tthis.splitview?.distributeViewSizes();\n\t\t}\n\n\t\t// Set input to both sides\n\t\tawait Promise.all([\n\t\t\tthis.secondaryEditorPane?.setInput(input.secondary, secondary, context, token),\n\t\t\tthis.primaryEditorPane?.setInput(input.primary, primary, context, token)\n\t\t]);\n\n\t\t// Update focus if target is provided\n\t\tif (typeof options?.target === 'number') {\n\t\t\tthis.lastFocusedSide = options.target;\n\t\t}\n\t}\n\n\tprivate loadViewState(input: SideBySideEditorInput, options: ISideBySideEditorOptions | undefined, context: IEditorOpenContext): { primary: IEditorOptions | undefined; secondary: IEditorOptions | undefined; viewState: ISideBySideEditorViewState | undefined } {\n\t\tconst viewState = isSideBySideEditorViewState(options?.viewState) ? options?.viewState : this.loadEditorViewState(input, context);\n\n\t\tlet primaryOptions: IEditorOptions = Object.create(null);\n\t\tlet secondaryOptions: IEditorOptions | undefined = undefined;\n\n\t\t// Depending on the optional `target` property, we apply\n\t\t// the provided options to either the primary or secondary\n\t\t// side\n\n\t\tif (options?.target === Side.SECONDARY) {\n\t\t\tsecondaryOptions = { ...options };\n\t\t} else {\n\t\t\tprimaryOptions = { ...options };\n\t\t}\n\n\t\tprimaryOptions.viewState = viewState?.primary;\n\n\t\tif (viewState?.secondary) {\n\t\t\tif (!secondaryOptions) {\n\t\t\t\tsecondaryOptions = { viewState: viewState.secondary };\n\t\t\t} else {\n\t\t\t\tsecondaryOptions.viewState = viewState?.secondary;\n\t\t\t}\n\t\t}\n\n\t\treturn { primary: primaryOptions, secondary: secondaryOptions, viewState };\n\t}\n\n\tprivate createEditors(newInput: SideBySideEditorInput): void {\n\n\t\t// Create editors\n\t\tthis.secondaryEditorPane = this.doCreateEditor(newInput.secondary, assertIsDefined(this.secondaryEditorContainer));\n\t\tthis.primaryEditorPane = this.doCreateEditor(newInput.primary, assertIsDefined(this.primaryEditorContainer));\n\n\t\t// Layout\n\t\tthis.layout(this.dimension);\n\n\t\t// Eventing\n\t\tthis._onDidChangeSizeConstraints.input = Event.any(\n\t\t\tEvent.map(this.secondaryEditorPane.onDidChangeSizeConstraints, () => undefined),\n\t\t\tEvent.map(this.primaryEditorPane.onDidChangeSizeConstraints, () => undefined)\n\t\t);\n\t\tthis.onDidCreateEditors.fire(undefined);\n\n\t\t// Track focus and signal active control change via event\n\t\tthis.editorDisposables.add(this.primaryEditorPane.onDidFocus(() => this.onDidFocusChange(Side.PRIMARY)));\n\t\tthis.editorDisposables.add(this.secondaryEditorPane.onDidFocus(() => this.onDidFocusChange(Side.SECONDARY)));\n\t}\n\n\tprivate doCreateEditor(editorInput: EditorInput, container: HTMLElement): EditorPane {\n\t\tconst editorPaneDescriptor = Registry.as<IEditorPaneRegistry>(EditorExtensions.EditorPane).getEditorPane(editorInput);\n\t\tif (!editorPaneDescriptor) {\n\t\t\tthrow new Error('No editor pane descriptor for editor found');\n\t\t}\n\n\t\t// Create editor pane and make visible\n\t\tconst editorPane = editorPaneDescriptor.instantiate(this.instantiationService, this.group);\n\t\teditorPane.create(container);\n\t\teditorPane.setVisible(this.isVisible());\n\n\t\t// Track selections if supported\n\t\tif (isEditorPaneWithSelection(editorPane)) {\n\t\t\tthis.editorDisposables.add(editorPane.onDidChangeSelection(e => this._onDidChangeSelection.fire(e)));\n\t\t}\n\n\t\t// Track for disposal\n\t\tthis.editorDisposables.add(editorPane);\n\n\t\treturn editorPane;\n\t}\n\n\tprivate onDidFocusChange(side: Side.PRIMARY | Side.SECONDARY): void {\n\t\tthis.lastFocusedSide = side;\n\n\t\t// Signal to outside that our active control changed\n\t\tthis._onDidChangeControl.fire();\n\t}\n\n\tgetSelection(): IEditorPaneSelection | undefined {\n\t\tconst lastFocusedEditorPane = this.getLastFocusedEditorPane();\n\t\tif (isEditorPaneWithSelection(lastFocusedEditorPane)) {\n\t\t\tconst selection = lastFocusedEditorPane.getSelection();\n\t\t\tif (selection) {\n\t\t\t\treturn new SideBySideAwareEditorPaneSelection(selection, lastFocusedEditorPane === this.primaryEditorPane ? Side.PRIMARY : Side.SECONDARY);\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\toverride setOptions(options: ISideBySideEditorOptions | undefined): void {\n\t\tsuper.setOptions(options);\n\n\t\t// Update focus if target is provided\n\t\tif (typeof options?.target === 'number') {\n\t\t\tthis.lastFocusedSide = options.target;\n\t\t}\n\n\t\t// Apply to focused side\n\t\tthis.getLastFocusedEditorPane()?.setOptions(options);\n\t}\n\n\tprotected override setEditorVisible(visible: boolean): void {\n\n\t\t// Forward to both sides\n\t\tthis.primaryEditorPane?.setVisible(visible);\n\t\tthis.secondaryEditorPane?.setVisible(visible);\n\n\t\tsuper.setEditorVisible(visible);\n\t}\n\n\toverride clearInput(): void {\n\t\tsuper.clearInput();\n\n\t\t// Forward to both sides\n\t\tthis.primaryEditorPane?.clearInput();\n\t\tthis.secondaryEditorPane?.clearInput();\n\n\t\t// Since we do not keep side editors alive\n\t\t// we dispose any editor created for recreation\n\t\tthis.disposeEditors();\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\n\t\tthis.getLastFocusedEditorPane()?.focus();\n\t}\n\n\tprivate getLastFocusedEditorPane(): EditorPane | undefined {\n\t\tif (this.lastFocusedSide === Side.SECONDARY) {\n\t\t\treturn this.secondaryEditorPane;\n\t\t}\n\n\t\treturn this.primaryEditorPane;\n\t}\n\n\tlayout(dimension: Dimension): void {\n\t\tthis.dimension = dimension;\n\n\t\tconst splitview = assertIsDefined(this.splitview);\n\t\tsplitview.layout(this.orientation === Orientation.HORIZONTAL ? dimension.width : dimension.height);\n\t}\n\n\toverride setBoundarySashes(sashes: IBoundarySashes) {\n\t\tthis._boundarySashes = sashes;\n\n\t\tif (this.splitview) {\n\t\t\tthis.splitview.orthogonalEndSash = sashes.bottom;\n\t\t}\n\t}\n\n\tprivate layoutPane(pane: EditorPane | undefined, size: number): void {\n\t\tpane?.layout(this.orientation === Orientation.HORIZONTAL ? new Dimension(size, this.dimension.height) : new Dimension(this.dimension.width, size));\n\t}\n\n\toverride getControl(): IEditorControl | undefined {\n\t\treturn this.getLastFocusedEditorPane()?.getControl();\n\t}\n\n\tgetPrimaryEditorPane(): IEditorPane | undefined {\n\t\treturn this.primaryEditorPane;\n\t}\n\n\tgetSecondaryEditorPane(): IEditorPane | undefined {\n\t\treturn this.secondaryEditorPane;\n\t}\n\n\tprotected tracksEditorViewState(input: EditorInput): boolean {\n\t\treturn input instanceof SideBySideEditorInput;\n\t}\n\n\tprotected computeEditorViewState(resource: URI): ISideBySideEditorViewState | undefined {\n\t\tif (!this.input || !isEqual(resource, this.toEditorViewStateResource(this.input))) {\n\t\t\treturn; // unexpected state\n\t\t}\n\n\t\tconst primarViewState = this.primaryEditorPane?.getViewState();\n\t\tconst secondaryViewState = this.secondaryEditorPane?.getViewState();\n\n\t\tif (!primarViewState || !secondaryViewState) {\n\t\t\treturn; // we actually need view states\n\t\t}\n\n\t\treturn {\n\t\t\tprimary: primarViewState,\n\t\t\tsecondary: secondaryViewState,\n\t\t\tfocus: this.lastFocusedSide,\n\t\t\tratio: this.getSplitViewRatio()\n\t\t};\n\t}\n\n\tprotected toEditorViewStateResource(input: EditorInput): URI | undefined {\n\t\tlet primary: URI | undefined;\n\t\tlet secondary: URI | undefined;\n\n\t\tif (input instanceof SideBySideEditorInput) {\n\t\t\tprimary = input.primary.resource;\n\t\t\tsecondary = input.secondary.resource;\n\t\t}\n\n\t\tif (!secondary || !primary) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// create a URI that is the Base64 concatenation of original + modified resource\n\t\treturn URI.from({ scheme: 'sideBySide', path: `${multibyteAwareBtoa(secondary.toString())}${multibyteAwareBtoa(primary.toString())}` });\n\t}\n\n\toverride updateStyles(): void {\n\t\tsuper.updateStyles();\n\n\t\tif (this.primaryEditorContainer) {\n\t\t\tif (this.orientation === Orientation.HORIZONTAL) {\n\t\t\t\tthis.primaryEditorContainer.style.borderLeftWidth = '1px';\n\t\t\t\tthis.primaryEditorContainer.style.borderLeftStyle = 'solid';\n\t\t\t\tthis.primaryEditorContainer.style.borderLeftColor = this.getColor(SIDE_BY_SIDE_EDITOR_VERTICAL_BORDER) ?? '';\n\n\t\t\t\tthis.primaryEditorContainer.style.borderTopWidth = '0';\n\t\t\t} else {\n\t\t\t\tthis.primaryEditorContainer.style.borderTopWidth = '1px';\n\t\t\t\tthis.primaryEditorContainer.style.borderTopStyle = 'solid';\n\t\t\t\tthis.primaryEditorContainer.style.borderTopColor = this.getColor(SIDE_BY_SIDE_EDITOR_HORIZONTAL_BORDER) ?? '';\n\n\t\t\t\tthis.primaryEditorContainer.style.borderLeftWidth = '0';\n\t\t\t}\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.disposeEditors();\n\n\t\tsuper.dispose();\n\t}\n\n\tprivate disposeEditors(): void {\n\t\tthis.editorDisposables.clear();\n\n\t\tthis.secondaryEditorPane = undefined;\n\t\tthis.primaryEditorPane = undefined;\n\n\t\tthis.lastFocusedSide = undefined;\n\n\t\tif (this.secondaryEditorContainer) {\n\t\t\tclearNode(this.secondaryEditorContainer);\n\t\t}\n\n\t\tif (this.primaryEditorContainer) {\n\t\t\tclearNode(this.primaryEditorContainer);\n\t\t}\n\t}\n}\n\nclass SideBySideAwareEditorPaneSelection implements IEditorPaneSelection {\n\n\tconstructor(\n\t\tprivate readonly selection: IEditorPaneSelection,\n\t\tprivate readonly side: Side.PRIMARY | Side.SECONDARY\n\t) { }\n\n\tcompare(other: IEditorPaneSelection): EditorPaneSelectionCompareResult {\n\t\tif (!(other instanceof SideBySideAwareEditorPaneSelection)) {\n\t\t\treturn EditorPaneSelectionCompareResult.DIFFERENT;\n\t\t}\n\n\t\tif (this.side !== other.side) {\n\t\t\treturn EditorPaneSelectionCompareResult.DIFFERENT;\n\t\t}\n\n\t\treturn this.selection.compare(other.selection);\n\t}\n\n\trestore(options: IEditorOptions): ISideBySideEditorOptions {\n\t\tconst sideBySideEditorOptions: ISideBySideEditorOptions = {\n\t\t\t...options,\n\t\t\ttarget: this.side\n\t\t};\n\n\t\treturn this.selection.restore(sideBySideEditorOptions);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
