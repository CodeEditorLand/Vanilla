{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/editor/editorCommands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IJSONSchema } from \"../../../../base/common/jsonSchema.js\";\nimport { KeyChord, KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport { Schemas, matchesScheme } from \"../../../../base/common/network.js\";\nimport { extname } from \"../../../../base/common/resources.js\";\nimport {\n\tisNumber,\n\tisObject,\n\tisString,\n\tisUndefined,\n} from \"../../../../base/common/types.js\";\nimport { URI, type UriComponents } from \"../../../../base/common/uri.js\";\nimport { isDiffEditor } from \"../../../../editor/browser/editorBrowser.js\";\nimport { EditorContextKeys } from \"../../../../editor/common/editorContextKeys.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport { Categories } from \"../../../../platform/action/common/actionCommonCategories.js\";\nimport {\n\tAction2,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport {\n\tCommandsRegistry,\n\ttype ICommandHandler,\n\tICommandService,\n} from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { ContextKeyExpr } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tEditorResolution,\n\ttype IEditorOptions,\n\ttype IResourceEditorInput,\n\ttype ITextEditorOptions,\n} from \"../../../../platform/editor/common/editor.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tKeybindingWeight,\n\tKeybindingsRegistry,\n} from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport {\n\tIListService,\n\ttype IOpenEvent,\n} from \"../../../../platform/list/browser/listService.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport { IQuickInputService } from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport {\n\tActiveEditorCanSplitInGroupContext,\n\tActiveEditorGroupEmptyContext,\n\tActiveEditorGroupLockedContext,\n\tActiveEditorStickyContext,\n\tMultipleEditorGroupsContext,\n\tSideBySideEditorActiveContext,\n\tTextCompareEditorActiveContext,\n} from \"../../../common/contextkeys.js\";\nimport {\n\tCloseDirection,\n\tEditorInputCapabilities,\n\tEditorsOrder,\n\ttype IResourceDiffEditorInput,\n\ttype IUntitledTextResourceEditorInput,\n\ttype IVisibleEditorPane,\n\tisEditorInputWithOptionsAndGroup,\n} from \"../../../common/editor.js\";\nimport { DiffEditorInput } from \"../../../common/editor/diffEditorInput.js\";\nimport type { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport { SideBySideEditorInput } from \"../../../common/editor/sideBySideEditorInput.js\";\nimport {\n\ttype EditorGroupColumn,\n\tcolumnToEditorGroup,\n} from \"../../../services/editor/common/editorGroupColumn.js\";\nimport {\n\ttype EditorGroupLayout,\n\tGroupDirection,\n\tGroupLocation,\n\tGroupsOrder,\n\ttype IEditorGroup,\n\tIEditorGroupsService,\n\ttype IEditorReplacement,\n\tpreferredSideBySideGroupDirection,\n} from \"../../../services/editor/common/editorGroupsService.js\";\nimport { IEditorResolverService } from \"../../../services/editor/common/editorResolverService.js\";\nimport {\n\tIEditorService,\n\tSIDE_GROUP,\n} from \"../../../services/editor/common/editorService.js\";\nimport { IPathService } from \"../../../services/path/common/pathService.js\";\nimport { IUntitledTextEditorService } from \"../../../services/untitled/common/untitledTextEditorService.js\";\nimport {\n\tDIFF_FOCUS_OTHER_SIDE,\n\tDIFF_FOCUS_PRIMARY_SIDE,\n\tDIFF_FOCUS_SECONDARY_SIDE,\n\tDIFF_OPEN_SIDE,\n\tregisterDiffEditorCommands,\n} from \"./diffEditorCommands.js\";\nimport {\n\ttype IResolvedEditorCommandsContext,\n\tresolveCommandsContext,\n} from \"./editorCommandsContext.js\";\nimport { ActiveGroupEditorsByMostRecentlyUsedQuickAccess } from \"./editorQuickAccess.js\";\nimport { SideBySideEditor } from \"./sideBySideEditor.js\";\nimport { TextDiffEditor } from \"./textDiffEditor.js\";\n\nexport const CLOSE_SAVED_EDITORS_COMMAND_ID =\n\t\"workbench.action.closeUnmodifiedEditors\";\nexport const CLOSE_EDITORS_IN_GROUP_COMMAND_ID =\n\t\"workbench.action.closeEditorsInGroup\";\nexport const CLOSE_EDITORS_AND_GROUP_COMMAND_ID =\n\t\"workbench.action.closeEditorsAndGroup\";\nexport const CLOSE_EDITORS_TO_THE_RIGHT_COMMAND_ID =\n\t\"workbench.action.closeEditorsToTheRight\";\nexport const CLOSE_EDITOR_COMMAND_ID = \"workbench.action.closeActiveEditor\";\nexport const CLOSE_PINNED_EDITOR_COMMAND_ID =\n\t\"workbench.action.closeActivePinnedEditor\";\nexport const CLOSE_EDITOR_GROUP_COMMAND_ID = \"workbench.action.closeGroup\";\nexport const CLOSE_OTHER_EDITORS_IN_GROUP_COMMAND_ID =\n\t\"workbench.action.closeOtherEditors\";\n\nexport const MOVE_ACTIVE_EDITOR_COMMAND_ID = \"moveActiveEditor\";\nexport const COPY_ACTIVE_EDITOR_COMMAND_ID = \"copyActiveEditor\";\nexport const LAYOUT_EDITOR_GROUPS_COMMAND_ID = \"layoutEditorGroups\";\nexport const KEEP_EDITOR_COMMAND_ID = \"workbench.action.keepEditor\";\nexport const TOGGLE_KEEP_EDITORS_COMMAND_ID =\n\t\"workbench.action.toggleKeepEditors\";\nexport const TOGGLE_LOCK_GROUP_COMMAND_ID =\n\t\"workbench.action.toggleEditorGroupLock\";\nexport const LOCK_GROUP_COMMAND_ID = \"workbench.action.lockEditorGroup\";\nexport const UNLOCK_GROUP_COMMAND_ID = \"workbench.action.unlockEditorGroup\";\nexport const SHOW_EDITORS_IN_GROUP = \"workbench.action.showEditorsInGroup\";\nexport const REOPEN_WITH_COMMAND_ID = \"workbench.action.reopenWithEditor\";\n\nexport const PIN_EDITOR_COMMAND_ID = \"workbench.action.pinEditor\";\nexport const UNPIN_EDITOR_COMMAND_ID = \"workbench.action.unpinEditor\";\n\nexport const SPLIT_EDITOR = \"workbench.action.splitEditor\";\nexport const SPLIT_EDITOR_UP = \"workbench.action.splitEditorUp\";\nexport const SPLIT_EDITOR_DOWN = \"workbench.action.splitEditorDown\";\nexport const SPLIT_EDITOR_LEFT = \"workbench.action.splitEditorLeft\";\nexport const SPLIT_EDITOR_RIGHT = \"workbench.action.splitEditorRight\";\n\nexport const TOGGLE_MAXIMIZE_EDITOR_GROUP =\n\t\"workbench.action.toggleMaximizeEditorGroup\";\n\nexport const SPLIT_EDITOR_IN_GROUP = \"workbench.action.splitEditorInGroup\";\nexport const TOGGLE_SPLIT_EDITOR_IN_GROUP =\n\t\"workbench.action.toggleSplitEditorInGroup\";\nexport const JOIN_EDITOR_IN_GROUP = \"workbench.action.joinEditorInGroup\";\nexport const TOGGLE_SPLIT_EDITOR_IN_GROUP_LAYOUT =\n\t\"workbench.action.toggleSplitEditorInGroupLayout\";\n\nexport const FOCUS_FIRST_SIDE_EDITOR = \"workbench.action.focusFirstSideEditor\";\nexport const FOCUS_SECOND_SIDE_EDITOR =\n\t\"workbench.action.focusSecondSideEditor\";\nexport const FOCUS_OTHER_SIDE_EDITOR = \"workbench.action.focusOtherSideEditor\";\n\nexport const FOCUS_LEFT_GROUP_WITHOUT_WRAP_COMMAND_ID =\n\t\"workbench.action.focusLeftGroupWithoutWrap\";\nexport const FOCUS_RIGHT_GROUP_WITHOUT_WRAP_COMMAND_ID =\n\t\"workbench.action.focusRightGroupWithoutWrap\";\nexport const FOCUS_ABOVE_GROUP_WITHOUT_WRAP_COMMAND_ID =\n\t\"workbench.action.focusAboveGroupWithoutWrap\";\nexport const FOCUS_BELOW_GROUP_WITHOUT_WRAP_COMMAND_ID =\n\t\"workbench.action.focusBelowGroupWithoutWrap\";\n\nexport const OPEN_EDITOR_AT_INDEX_COMMAND_ID =\n\t\"workbench.action.openEditorAtIndex\";\n\nexport const MOVE_EDITOR_INTO_NEW_WINDOW_COMMAND_ID =\n\t\"workbench.action.moveEditorToNewWindow\";\nexport const COPY_EDITOR_INTO_NEW_WINDOW_COMMAND_ID =\n\t\"workbench.action.copyEditorToNewWindow\";\n\nexport const MOVE_EDITOR_GROUP_INTO_NEW_WINDOW_COMMAND_ID =\n\t\"workbench.action.moveEditorGroupToNewWindow\";\nexport const COPY_EDITOR_GROUP_INTO_NEW_WINDOW_COMMAND_ID =\n\t\"workbench.action.copyEditorGroupToNewWindow\";\n\nexport const NEW_EMPTY_EDITOR_WINDOW_COMMAND_ID =\n\t\"workbench.action.newEmptyEditorWindow\";\n\nexport const API_OPEN_EDITOR_COMMAND_ID = \"_workbench.open\";\nexport const API_OPEN_DIFF_EDITOR_COMMAND_ID = \"_workbench.diff\";\nexport const API_OPEN_WITH_EDITOR_COMMAND_ID = \"_workbench.openWith\";\n\nexport const EDITOR_CORE_NAVIGATION_COMMANDS = [\n\tSPLIT_EDITOR,\n\tCLOSE_EDITOR_COMMAND_ID,\n\tUNPIN_EDITOR_COMMAND_ID,\n\tUNLOCK_GROUP_COMMAND_ID,\n\tTOGGLE_MAXIMIZE_EDITOR_GROUP,\n];\n\nexport interface ActiveEditorMoveCopyArguments {\n\tto?:\n\t\t| \"first\"\n\t\t| \"last\"\n\t\t| \"left\"\n\t\t| \"right\"\n\t\t| \"up\"\n\t\t| \"down\"\n\t\t| \"center\"\n\t\t| \"position\"\n\t\t| \"previous\"\n\t\t| \"next\";\n\tby?: \"tab\" | \"group\";\n\tvalue?: number;\n}\n\nconst isActiveEditorMoveCopyArg = (\n\targ: ActiveEditorMoveCopyArguments,\n): boolean => {\n\tif (!isObject(arg)) {\n\t\treturn false;\n\t}\n\n\tif (!isString(arg.to)) {\n\t\treturn false;\n\t}\n\n\tif (!isUndefined(arg.by) && !isString(arg.by)) {\n\t\treturn false;\n\t}\n\n\tif (!isUndefined(arg.value) && !isNumber(arg.value)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n\nfunction registerActiveEditorMoveCopyCommand(): void {\n\tconst moveCopyJSONSchema: IJSONSchema = {\n\t\ttype: \"object\",\n\t\trequired: [\"to\"],\n\t\tproperties: {\n\t\t\tto: {\n\t\t\t\ttype: \"string\",\n\t\t\t\tenum: [\"left\", \"right\"],\n\t\t\t},\n\t\t\tby: {\n\t\t\t\ttype: \"string\",\n\t\t\t\tenum: [\"tab\", \"group\"],\n\t\t\t},\n\t\t\tvalue: {\n\t\t\t\ttype: \"number\",\n\t\t\t},\n\t\t},\n\t};\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: MOVE_ACTIVE_EDITOR_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: EditorContextKeys.editorTextFocus,\n\t\tprimary: 0,\n\t\thandler: (accessor, args) => moveCopyActiveEditor(true, args, accessor),\n\t\tmetadata: {\n\t\t\tdescription: localize(\n\t\t\t\t\"editorCommand.activeEditorMove.description\",\n\t\t\t\t\"Move the active editor by tabs or groups\",\n\t\t\t),\n\t\t\targs: [\n\t\t\t\t{\n\t\t\t\t\tname: localize(\n\t\t\t\t\t\t\"editorCommand.activeEditorMove.arg.name\",\n\t\t\t\t\t\t\"Active editor move argument\",\n\t\t\t\t\t),\n\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\"editorCommand.activeEditorMove.arg.description\",\n\t\t\t\t\t\t\"Argument Properties:\\n\\t* 'to': String value providing where to move.\\n\\t* 'by': String value providing the unit for move (by tab or by group).\\n\\t* 'value': Number value providing how many positions or an absolute position to move.\",\n\t\t\t\t\t),\n\t\t\t\t\tconstraint: isActiveEditorMoveCopyArg,\n\t\t\t\t\tschema: moveCopyJSONSchema,\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: COPY_ACTIVE_EDITOR_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: EditorContextKeys.editorTextFocus,\n\t\tprimary: 0,\n\t\thandler: (accessor, args) =>\n\t\t\tmoveCopyActiveEditor(false, args, accessor),\n\t\tmetadata: {\n\t\t\tdescription: localize(\n\t\t\t\t\"editorCommand.activeEditorCopy.description\",\n\t\t\t\t\"Copy the active editor by groups\",\n\t\t\t),\n\t\t\targs: [\n\t\t\t\t{\n\t\t\t\t\tname: localize(\n\t\t\t\t\t\t\"editorCommand.activeEditorCopy.arg.name\",\n\t\t\t\t\t\t\"Active editor copy argument\",\n\t\t\t\t\t),\n\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\"editorCommand.activeEditorCopy.arg.description\",\n\t\t\t\t\t\t\"Argument Properties:\\n\\t* 'to': String value providing where to copy.\\n\\t* 'value': Number value providing how many positions or an absolute position to copy.\",\n\t\t\t\t\t),\n\t\t\t\t\tconstraint: isActiveEditorMoveCopyArg,\n\t\t\t\t\tschema: moveCopyJSONSchema,\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t});\n\n\tfunction moveCopyActiveEditor(\n\t\tisMove: boolean,\n\t\targs: ActiveEditorMoveCopyArguments = Object.create(null),\n\t\taccessor: ServicesAccessor,\n\t): void {\n\t\targs.to = args.to || \"right\";\n\t\targs.by = args.by || \"tab\";\n\t\targs.value = typeof args.value === \"number\" ? args.value : 1;\n\n\t\tconst activeEditorPane = accessor.get(IEditorService).activeEditorPane;\n\t\tif (activeEditorPane) {\n\t\t\tswitch (args.by) {\n\t\t\t\tcase \"tab\":\n\t\t\t\t\tif (isMove) {\n\t\t\t\t\t\treturn moveActiveTab(args, activeEditorPane);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"group\":\n\t\t\t\t\treturn moveCopyActiveEditorToGroup(\n\t\t\t\t\t\tisMove,\n\t\t\t\t\t\targs,\n\t\t\t\t\t\tactiveEditorPane,\n\t\t\t\t\t\taccessor,\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction moveActiveTab(\n\t\targs: ActiveEditorMoveCopyArguments,\n\t\tcontrol: IVisibleEditorPane,\n\t): void {\n\t\tconst group = control.group;\n\t\tlet index = group.getIndexOfEditor(control.input);\n\t\tswitch (args.to) {\n\t\t\tcase \"first\":\n\t\t\t\tindex = 0;\n\t\t\t\tbreak;\n\t\t\tcase \"last\":\n\t\t\t\tindex = group.count - 1;\n\t\t\t\tbreak;\n\t\t\tcase \"left\":\n\t\t\t\tindex = index - (args.value ?? 1);\n\t\t\t\tbreak;\n\t\t\tcase \"right\":\n\t\t\t\tindex = index + (args.value ?? 1);\n\t\t\t\tbreak;\n\t\t\tcase \"center\":\n\t\t\t\tindex = Math.round(group.count / 2) - 1;\n\t\t\t\tbreak;\n\t\t\tcase \"position\":\n\t\t\t\tindex = (args.value ?? 1) - 1;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tindex = index < 0 ? 0 : index >= group.count ? group.count - 1 : index;\n\t\tgroup.moveEditor(control.input, group, { index });\n\t}\n\n\tfunction moveCopyActiveEditorToGroup(\n\t\tisMove: boolean,\n\t\targs: ActiveEditorMoveCopyArguments,\n\t\tcontrol: IVisibleEditorPane,\n\t\taccessor: ServicesAccessor,\n\t): void {\n\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst sourceGroup = control.group;\n\t\tlet targetGroup: IEditorGroup | undefined;\n\n\t\tswitch (args.to) {\n\t\t\tcase \"left\":\n\t\t\t\ttargetGroup = editorGroupsService.findGroup(\n\t\t\t\t\t{ direction: GroupDirection.LEFT },\n\t\t\t\t\tsourceGroup,\n\t\t\t\t);\n\t\t\t\tif (!targetGroup) {\n\t\t\t\t\ttargetGroup = editorGroupsService.addGroup(\n\t\t\t\t\t\tsourceGroup,\n\t\t\t\t\t\tGroupDirection.LEFT,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"right\":\n\t\t\t\ttargetGroup = editorGroupsService.findGroup(\n\t\t\t\t\t{ direction: GroupDirection.RIGHT },\n\t\t\t\t\tsourceGroup,\n\t\t\t\t);\n\t\t\t\tif (!targetGroup) {\n\t\t\t\t\ttargetGroup = editorGroupsService.addGroup(\n\t\t\t\t\t\tsourceGroup,\n\t\t\t\t\t\tGroupDirection.RIGHT,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"up\":\n\t\t\t\ttargetGroup = editorGroupsService.findGroup(\n\t\t\t\t\t{ direction: GroupDirection.UP },\n\t\t\t\t\tsourceGroup,\n\t\t\t\t);\n\t\t\t\tif (!targetGroup) {\n\t\t\t\t\ttargetGroup = editorGroupsService.addGroup(\n\t\t\t\t\t\tsourceGroup,\n\t\t\t\t\t\tGroupDirection.UP,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"down\":\n\t\t\t\ttargetGroup = editorGroupsService.findGroup(\n\t\t\t\t\t{ direction: GroupDirection.DOWN },\n\t\t\t\t\tsourceGroup,\n\t\t\t\t);\n\t\t\t\tif (!targetGroup) {\n\t\t\t\t\ttargetGroup = editorGroupsService.addGroup(\n\t\t\t\t\t\tsourceGroup,\n\t\t\t\t\t\tGroupDirection.DOWN,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"first\":\n\t\t\t\ttargetGroup = editorGroupsService.findGroup(\n\t\t\t\t\t{ location: GroupLocation.FIRST },\n\t\t\t\t\tsourceGroup,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase \"last\":\n\t\t\t\ttargetGroup = editorGroupsService.findGroup(\n\t\t\t\t\t{ location: GroupLocation.LAST },\n\t\t\t\t\tsourceGroup,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase \"previous\":\n\t\t\t\ttargetGroup = editorGroupsService.findGroup(\n\t\t\t\t\t{ location: GroupLocation.PREVIOUS },\n\t\t\t\t\tsourceGroup,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase \"next\":\n\t\t\t\ttargetGroup = editorGroupsService.findGroup(\n\t\t\t\t\t{ location: GroupLocation.NEXT },\n\t\t\t\t\tsourceGroup,\n\t\t\t\t);\n\t\t\t\tif (!targetGroup) {\n\t\t\t\t\ttargetGroup = editorGroupsService.addGroup(\n\t\t\t\t\t\tsourceGroup,\n\t\t\t\t\t\tpreferredSideBySideGroupDirection(configurationService),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"center\":\n\t\t\t\ttargetGroup = editorGroupsService.getGroups(\n\t\t\t\t\tGroupsOrder.GRID_APPEARANCE,\n\t\t\t\t)[editorGroupsService.count / 2 - 1];\n\t\t\t\tbreak;\n\t\t\tcase \"position\":\n\t\t\t\ttargetGroup = editorGroupsService.getGroups(\n\t\t\t\t\tGroupsOrder.GRID_APPEARANCE,\n\t\t\t\t)[(args.value ?? 1) - 1];\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (targetGroup) {\n\t\t\tif (isMove) {\n\t\t\t\tsourceGroup.moveEditor(control.input, targetGroup);\n\t\t\t} else if (sourceGroup.id !== targetGroup.id) {\n\t\t\t\tsourceGroup.copyEditor(control.input, targetGroup);\n\t\t\t}\n\t\t\ttargetGroup.focus();\n\t\t}\n\t}\n}\n\nfunction registerEditorGroupsLayoutCommands(): void {\n\tfunction applyEditorLayout(\n\t\taccessor: ServicesAccessor,\n\t\tlayout: EditorGroupLayout,\n\t): void {\n\t\tif (!layout || typeof layout !== \"object\") {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\teditorGroupsService.applyLayout(layout);\n\t}\n\n\tCommandsRegistry.registerCommand(\n\t\tLAYOUT_EDITOR_GROUPS_COMMAND_ID,\n\t\t(accessor: ServicesAccessor, args: EditorGroupLayout) => {\n\t\t\tapplyEditorLayout(accessor, args);\n\t\t},\n\t);\n\n\t// API Commands\n\tCommandsRegistry.registerCommand({\n\t\tid: \"vscode.setEditorLayout\",\n\t\thandler: (accessor: ServicesAccessor, args: EditorGroupLayout) =>\n\t\t\tapplyEditorLayout(accessor, args),\n\t\tmetadata: {\n\t\t\tdescription: \"Set Editor Layout\",\n\t\t\targs: [\n\t\t\t\t{\n\t\t\t\t\tname: \"args\",\n\t\t\t\t\tschema: {\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\trequired: [\"groups\"],\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\torientation: {\n\t\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\t\tdefault: 0,\n\t\t\t\t\t\t\t\tenum: [0, 1],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tgroups: {\n\t\t\t\t\t\t\t\t$ref: \"#/definitions/editorGroupsSchema\",\n\t\t\t\t\t\t\t\tdefault: [{}, {}],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t});\n\n\tCommandsRegistry.registerCommand({\n\t\tid: \"vscode.getEditorLayout\",\n\t\thandler: (accessor: ServicesAccessor) => {\n\t\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\n\t\t\treturn editorGroupsService.getLayout();\n\t\t},\n\t\tmetadata: {\n\t\t\tdescription: \"Get Editor Layout\",\n\t\t\targs: [],\n\t\t\treturns:\n\t\t\t\t\"An editor layout object, in the same format as vscode.setEditorLayout\",\n\t\t},\n\t});\n}\n\nfunction registerOpenEditorAPICommands(): void {\n\tfunction mixinContext(\n\t\tcontext: IOpenEvent<unknown> | undefined,\n\t\toptions: ITextEditorOptions | undefined,\n\t\tcolumn: EditorGroupColumn | undefined,\n\t): [ITextEditorOptions | undefined, EditorGroupColumn | undefined] {\n\t\tif (!context) {\n\t\t\treturn [options, column];\n\t\t}\n\n\t\treturn [\n\t\t\t{ ...context.editorOptions, ...(options ?? Object.create(null)) },\n\t\t\tcontext.sideBySide ? SIDE_GROUP : column,\n\t\t];\n\t}\n\n\t// partial, renderer-side API command to open editor\n\t// complements https://github.com/microsoft/vscode/blob/2b164efb0e6a5de3826bff62683eaeafe032284f/src/vs/workbench/api/common/extHostApiCommands.ts#L373\n\tCommandsRegistry.registerCommand({\n\t\tid: \"vscode.open\",\n\t\thandler: (accessor, arg) => {\n\t\t\taccessor\n\t\t\t\t.get(ICommandService)\n\t\t\t\t.executeCommand(API_OPEN_EDITOR_COMMAND_ID, arg);\n\t\t},\n\t\tmetadata: {\n\t\t\tdescription: \"Opens the provided resource in the editor.\",\n\t\t\targs: [{ name: \"Uri\" }],\n\t\t},\n\t});\n\n\tCommandsRegistry.registerCommand(\n\t\tAPI_OPEN_EDITOR_COMMAND_ID,\n\t\tasync (\n\t\t\taccessor: ServicesAccessor,\n\t\t\tresourceArg: UriComponents | string,\n\t\t\tcolumnAndOptions?: [EditorGroupColumn?, ITextEditorOptions?],\n\t\t\tlabel?: string,\n\t\t\tcontext?: IOpenEvent<unknown>,\n\t\t) => {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\t\tconst openerService = accessor.get(IOpenerService);\n\t\t\tconst pathService = accessor.get(IPathService);\n\t\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\t\tconst untitledTextEditorService = accessor.get(\n\t\t\t\tIUntitledTextEditorService,\n\t\t\t);\n\n\t\t\tconst resourceOrString =\n\t\t\t\ttypeof resourceArg === \"string\"\n\t\t\t\t\t? resourceArg\n\t\t\t\t\t: URI.from(resourceArg, true);\n\t\t\tconst [columnArg, optionsArg] = columnAndOptions ?? [];\n\n\t\t\t// use editor options or editor view column or resource scheme\n\t\t\t// as a hint to use the editor service for opening directly\n\t\t\tif (\n\t\t\t\toptionsArg ||\n\t\t\t\ttypeof columnArg === \"number\" ||\n\t\t\t\tmatchesScheme(resourceOrString, Schemas.untitled)\n\t\t\t) {\n\t\t\t\tconst [options, column] = mixinContext(\n\t\t\t\t\tcontext,\n\t\t\t\t\toptionsArg,\n\t\t\t\t\tcolumnArg,\n\t\t\t\t);\n\t\t\t\tconst resource = URI.isUri(resourceOrString)\n\t\t\t\t\t? resourceOrString\n\t\t\t\t\t: URI.parse(resourceOrString);\n\n\t\t\t\tlet input:\n\t\t\t\t\t| IResourceEditorInput\n\t\t\t\t\t| IUntitledTextResourceEditorInput;\n\t\t\t\tif (\n\t\t\t\t\tuntitledTextEditorService.isUntitledWithAssociatedResource(\n\t\t\t\t\t\tresource,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\t// special case for untitled: we are getting a resource with meaningful\n\t\t\t\t\t// path from an extension to use for the untitled editor. as such, we\n\t\t\t\t\t// have to assume it as an associated resource to use when saving. we\n\t\t\t\t\t// do so by setting the `forceUntitled: true` and changing the scheme\n\t\t\t\t\t// to a file based one. the untitled editor service takes care to\n\t\t\t\t\t// associate the path properly then.\n\t\t\t\t\tinput = {\n\t\t\t\t\t\tresource: resource.with({\n\t\t\t\t\t\t\tscheme: pathService.defaultUriScheme,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tforceUntitled: true,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tlabel,\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\t// use any other resource as is\n\t\t\t\t\tinput = { resource, options, label };\n\t\t\t\t}\n\n\t\t\t\tawait editorService.openEditor(\n\t\t\t\t\tinput,\n\t\t\t\t\tcolumnToEditorGroup(\n\t\t\t\t\t\teditorGroupsService,\n\t\t\t\t\t\tconfigurationService,\n\t\t\t\t\t\tcolumn,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// do not allow to execute commands from here\n\t\t\telse if (matchesScheme(resourceOrString, Schemas.command)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// finally, delegate to opener service\n\t\t\telse {\n\t\t\t\tawait openerService.open(resourceOrString, {\n\t\t\t\t\topenToSide: context?.sideBySide,\n\t\t\t\t\teditorOptions: context?.editorOptions,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t);\n\n\t// partial, renderer-side API command to open diff editor\n\t// complements https://github.com/microsoft/vscode/blob/2b164efb0e6a5de3826bff62683eaeafe032284f/src/vs/workbench/api/common/extHostApiCommands.ts#L397\n\tCommandsRegistry.registerCommand({\n\t\tid: \"vscode.diff\",\n\t\thandler: (accessor, left, right, label) => {\n\t\t\taccessor\n\t\t\t\t.get(ICommandService)\n\t\t\t\t.executeCommand(\n\t\t\t\t\tAPI_OPEN_DIFF_EDITOR_COMMAND_ID,\n\t\t\t\t\tleft,\n\t\t\t\t\tright,\n\t\t\t\t\tlabel,\n\t\t\t\t);\n\t\t},\n\t\tmetadata: {\n\t\t\tdescription:\n\t\t\t\t\"Opens the provided resources in the diff editor to compare their contents.\",\n\t\t\targs: [\n\t\t\t\t{\n\t\t\t\t\tname: \"left\",\n\t\t\t\t\tdescription: \"Left-hand side resource of the diff editor\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"right\",\n\t\t\t\t\tdescription: \"Right-hand side resource of the diff editor\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"title\",\n\t\t\t\t\tdescription: \"Human readable title for the diff editor\",\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t});\n\n\tCommandsRegistry.registerCommand(\n\t\tAPI_OPEN_DIFF_EDITOR_COMMAND_ID,\n\t\tasync (\n\t\t\taccessor: ServicesAccessor,\n\t\t\toriginalResource: UriComponents,\n\t\t\tmodifiedResource: UriComponents,\n\t\t\tlabelAndOrDescription?:\n\t\t\t\t| string\n\t\t\t\t| { label: string; description: string },\n\t\t\tcolumnAndOptions?: [EditorGroupColumn?, ITextEditorOptions?],\n\t\t\tcontext?: IOpenEvent<unknown>,\n\t\t) => {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\t\tconst [columnArg, optionsArg] = columnAndOptions ?? [];\n\t\t\tconst [options, column] = mixinContext(\n\t\t\t\tcontext,\n\t\t\t\toptionsArg,\n\t\t\t\tcolumnArg,\n\t\t\t);\n\n\t\t\tlet label: string | undefined;\n\t\t\tlet description: string | undefined;\n\t\t\tif (typeof labelAndOrDescription === \"string\") {\n\t\t\t\tlabel = labelAndOrDescription;\n\t\t\t} else if (labelAndOrDescription) {\n\t\t\t\tlabel = labelAndOrDescription.label;\n\t\t\t\tdescription = labelAndOrDescription.description;\n\t\t\t}\n\n\t\t\tawait editorService.openEditor(\n\t\t\t\t{\n\t\t\t\t\toriginal: { resource: URI.from(originalResource, true) },\n\t\t\t\t\tmodified: { resource: URI.from(modifiedResource, true) },\n\t\t\t\t\tlabel,\n\t\t\t\t\tdescription,\n\t\t\t\t\toptions,\n\t\t\t\t},\n\t\t\t\tcolumnToEditorGroup(\n\t\t\t\t\teditorGroupsService,\n\t\t\t\t\tconfigurationService,\n\t\t\t\t\tcolumn,\n\t\t\t\t),\n\t\t\t);\n\t\t},\n\t);\n\n\tCommandsRegistry.registerCommand(\n\t\tAPI_OPEN_WITH_EDITOR_COMMAND_ID,\n\t\tasync (\n\t\t\taccessor: ServicesAccessor,\n\t\t\tresource: UriComponents,\n\t\t\tid: string,\n\t\t\tcolumnAndOptions?: [EditorGroupColumn?, ITextEditorOptions?],\n\t\t) => {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\t\tconst [columnArg, optionsArg] = columnAndOptions ?? [];\n\n\t\t\tawait editorService.openEditor(\n\t\t\t\t{\n\t\t\t\t\tresource: URI.from(resource, true),\n\t\t\t\t\toptions: { ...optionsArg, pinned: true, override: id },\n\t\t\t\t},\n\t\t\t\tcolumnToEditorGroup(\n\t\t\t\t\teditorGroupsService,\n\t\t\t\t\tconfigurationService,\n\t\t\t\t\tcolumnArg,\n\t\t\t\t),\n\t\t\t);\n\t\t},\n\t);\n\n\t// partial, renderer-side API command to open diff editor\n\t// complements https://github.com/microsoft/vscode/blob/2b164efb0e6a5de3826bff62683eaeafe032284f/src/vs/workbench/api/common/extHostApiCommands.ts#L397\n\tCommandsRegistry.registerCommand({\n\t\tid: \"vscode.changes\",\n\t\thandler: (\n\t\t\taccessor,\n\t\t\ttitle: string,\n\t\t\tresources: [UriComponents, UriComponents?, UriComponents?][],\n\t\t) => {\n\t\t\taccessor\n\t\t\t\t.get(ICommandService)\n\t\t\t\t.executeCommand(\"_workbench.changes\", title, resources);\n\t\t},\n\t\tmetadata: {\n\t\t\tdescription:\n\t\t\t\t\"Opens a list of resources in the changes editor to compare their contents.\",\n\t\t\targs: [\n\t\t\t\t{\n\t\t\t\t\tname: \"title\",\n\t\t\t\t\tdescription: \"Human readable title for the diff editor\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"resources\",\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t\"List of resources to open in the changes editor\",\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t});\n\n\tCommandsRegistry.registerCommand(\n\t\t\"_workbench.changes\",\n\t\tasync (\n\t\t\taccessor: ServicesAccessor,\n\t\t\ttitle: string,\n\t\t\tresources: [UriComponents, UriComponents?, UriComponents?][],\n\t\t) => {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\n\t\t\tconst editor: (IResourceDiffEditorInput & { resource: URI })[] = [];\n\t\t\tfor (const [label, original, modified] of resources) {\n\t\t\t\teditor.push({\n\t\t\t\t\tresource: URI.revive(label),\n\t\t\t\t\toriginal: { resource: URI.revive(original) },\n\t\t\t\t\tmodified: { resource: URI.revive(modified) },\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tawait editorService.openEditor({ resources: editor, label: title });\n\t\t},\n\t);\n\n\tCommandsRegistry.registerCommand(\n\t\t\"_workbench.openMultiDiffEditor\",\n\t\tasync (\n\t\t\taccessor: ServicesAccessor,\n\t\t\toptions: OpenMultiFileDiffEditorOptions,\n\t\t) => {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tawait editorService.openEditor({\n\t\t\t\tmultiDiffSource: options.multiDiffSourceUri\n\t\t\t\t\t? URI.revive(options.multiDiffSourceUri)\n\t\t\t\t\t: undefined,\n\t\t\t\tresources: options.resources?.map((r) => ({\n\t\t\t\t\toriginal: { resource: URI.revive(r.originalUri) },\n\t\t\t\t\tmodified: { resource: URI.revive(r.modifiedUri) },\n\t\t\t\t})),\n\t\t\t\tlabel: options.title,\n\t\t\t});\n\t\t},\n\t);\n}\n\ninterface OpenMultiFileDiffEditorOptions {\n\ttitle: string;\n\tmultiDiffSourceUri?: UriComponents;\n\tresources?: { originalUri: UriComponents; modifiedUri: UriComponents }[];\n}\n\nfunction registerOpenEditorAtIndexCommands(): void {\n\tconst openEditorAtIndex: ICommandHandler = (\n\t\taccessor: ServicesAccessor,\n\t\teditorIndex: number,\n\t): void => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst activeEditorPane = editorService.activeEditorPane;\n\t\tif (activeEditorPane) {\n\t\t\tconst editor = activeEditorPane.group.getEditorByIndex(editorIndex);\n\t\t\tif (editor) {\n\t\t\t\teditorService.openEditor(editor);\n\t\t\t}\n\t\t}\n\t};\n\n\t// This command takes in the editor index number to open as an argument\n\tCommandsRegistry.registerCommand({\n\t\tid: OPEN_EDITOR_AT_INDEX_COMMAND_ID,\n\t\thandler: openEditorAtIndex,\n\t});\n\n\t// Keybindings to focus a specific index in the tab folder if tabs are enabled\n\tfor (let i = 0; i < 9; i++) {\n\t\tconst editorIndex = i;\n\t\tconst visibleIndex = i + 1;\n\n\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\tid: OPEN_EDITOR_AT_INDEX_COMMAND_ID + visibleIndex,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: undefined,\n\t\t\tprimary: KeyMod.Alt | toKeyCode(visibleIndex),\n\t\t\tmac: { primary: KeyMod.WinCtrl | toKeyCode(visibleIndex) },\n\t\t\thandler: (accessor) => openEditorAtIndex(accessor, editorIndex),\n\t\t});\n\t}\n\n\tfunction toKeyCode(index: number): KeyCode {\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\treturn KeyCode.Digit0;\n\t\t\tcase 1:\n\t\t\t\treturn KeyCode.Digit1;\n\t\t\tcase 2:\n\t\t\t\treturn KeyCode.Digit2;\n\t\t\tcase 3:\n\t\t\t\treturn KeyCode.Digit3;\n\t\t\tcase 4:\n\t\t\t\treturn KeyCode.Digit4;\n\t\t\tcase 5:\n\t\t\t\treturn KeyCode.Digit5;\n\t\t\tcase 6:\n\t\t\t\treturn KeyCode.Digit6;\n\t\t\tcase 7:\n\t\t\t\treturn KeyCode.Digit7;\n\t\t\tcase 8:\n\t\t\t\treturn KeyCode.Digit8;\n\t\t\tcase 9:\n\t\t\t\treturn KeyCode.Digit9;\n\t\t}\n\n\t\tthrow new Error(\"invalid index\");\n\t}\n}\n\nfunction registerFocusEditorGroupAtIndexCommands(): void {\n\t// Keybindings to focus a specific group (2-8) in the editor area\n\tfor (let groupIndex = 1; groupIndex < 8; groupIndex++) {\n\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\tid: toCommandId(groupIndex),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: undefined,\n\t\t\tprimary: KeyMod.CtrlCmd | toKeyCode(groupIndex),\n\t\t\thandler: (accessor) => {\n\t\t\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\t\t\tconst configurationService = accessor.get(\n\t\t\t\t\tIConfigurationService,\n\t\t\t\t);\n\n\t\t\t\t// To keep backwards compatibility (pre-grid), allow to focus a group\n\t\t\t\t// that does not exist as long as it is the next group after the last\n\t\t\t\t// opened group. Otherwise we return.\n\t\t\t\tif (groupIndex > editorGroupsService.count) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Group exists: just focus\n\t\t\t\tconst groups = editorGroupsService.getGroups(\n\t\t\t\t\tGroupsOrder.GRID_APPEARANCE,\n\t\t\t\t);\n\t\t\t\tif (groups[groupIndex]) {\n\t\t\t\t\treturn groups[groupIndex].focus();\n\t\t\t\t}\n\n\t\t\t\t// Group does not exist: create new by splitting the active one of the last group\n\t\t\t\tconst direction =\n\t\t\t\t\tpreferredSideBySideGroupDirection(configurationService);\n\t\t\t\tconst lastGroup = editorGroupsService.findGroup({\n\t\t\t\t\tlocation: GroupLocation.LAST,\n\t\t\t\t});\n\t\t\t\tif (!lastGroup) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst newGroup = editorGroupsService.addGroup(\n\t\t\t\t\tlastGroup,\n\t\t\t\t\tdirection,\n\t\t\t\t);\n\n\t\t\t\t// Focus\n\t\t\t\tnewGroup.focus();\n\t\t\t},\n\t\t});\n\t}\n\n\tfunction toCommandId(index: number): string {\n\t\tswitch (index) {\n\t\t\tcase 1:\n\t\t\t\treturn \"workbench.action.focusSecondEditorGroup\";\n\t\t\tcase 2:\n\t\t\t\treturn \"workbench.action.focusThirdEditorGroup\";\n\t\t\tcase 3:\n\t\t\t\treturn \"workbench.action.focusFourthEditorGroup\";\n\t\t\tcase 4:\n\t\t\t\treturn \"workbench.action.focusFifthEditorGroup\";\n\t\t\tcase 5:\n\t\t\t\treturn \"workbench.action.focusSixthEditorGroup\";\n\t\t\tcase 6:\n\t\t\t\treturn \"workbench.action.focusSeventhEditorGroup\";\n\t\t\tcase 7:\n\t\t\t\treturn \"workbench.action.focusEighthEditorGroup\";\n\t\t}\n\n\t\tthrow new Error(\"Invalid index\");\n\t}\n\n\tfunction toKeyCode(index: number): KeyCode {\n\t\tswitch (index) {\n\t\t\tcase 1:\n\t\t\t\treturn KeyCode.Digit2;\n\t\t\tcase 2:\n\t\t\t\treturn KeyCode.Digit3;\n\t\t\tcase 3:\n\t\t\t\treturn KeyCode.Digit4;\n\t\t\tcase 4:\n\t\t\t\treturn KeyCode.Digit5;\n\t\t\tcase 5:\n\t\t\t\treturn KeyCode.Digit6;\n\t\t\tcase 6:\n\t\t\t\treturn KeyCode.Digit7;\n\t\t\tcase 7:\n\t\t\t\treturn KeyCode.Digit8;\n\t\t}\n\n\t\tthrow new Error(\"Invalid index\");\n\t}\n}\n\nexport function splitEditor(\n\teditorGroupsService: IEditorGroupsService,\n\tdirection: GroupDirection,\n\tresolvedContext: IResolvedEditorCommandsContext,\n): void {\n\tif (!resolvedContext.groupedEditors.length) {\n\t\treturn;\n\t}\n\n\t// Only support splitting from one source group\n\tconst { group, editors } = resolvedContext.groupedEditors[0];\n\tconst preserveFocus = resolvedContext.preserveFocus;\n\tconst newGroup = editorGroupsService.addGroup(group, direction);\n\n\tfor (const editorToCopy of editors) {\n\t\t// Split editor (if it can be split)\n\t\tif (\n\t\t\teditorToCopy &&\n\t\t\t!editorToCopy.hasCapability(EditorInputCapabilities.Singleton)\n\t\t) {\n\t\t\tgroup.copyEditor(editorToCopy, newGroup, { preserveFocus });\n\t\t}\n\t}\n\n\t// Focus\n\tnewGroup.focus();\n}\n\nfunction registerSplitEditorCommands() {\n\t[\n\t\t{ id: SPLIT_EDITOR_UP, direction: GroupDirection.UP },\n\t\t{ id: SPLIT_EDITOR_DOWN, direction: GroupDirection.DOWN },\n\t\t{ id: SPLIT_EDITOR_LEFT, direction: GroupDirection.LEFT },\n\t\t{ id: SPLIT_EDITOR_RIGHT, direction: GroupDirection.RIGHT },\n\t].forEach(({ id, direction }) => {\n\t\tCommandsRegistry.registerCommand(id, (accessor, ...args) => {\n\t\t\tconst resolvedContext = resolveCommandsContext(\n\t\t\t\targs,\n\t\t\t\taccessor.get(IEditorService),\n\t\t\t\taccessor.get(IEditorGroupsService),\n\t\t\t\taccessor.get(IListService),\n\t\t\t);\n\t\t\tsplitEditor(\n\t\t\t\taccessor.get(IEditorGroupsService),\n\t\t\t\tdirection,\n\t\t\t\tresolvedContext,\n\t\t\t);\n\t\t});\n\t});\n}\n\nfunction registerCloseEditorCommands() {\n\t// A special handler for \"Close Editor\" depending on context\n\t// - keybindining: do not close sticky editors, rather open the next non-sticky editor\n\t// - menu: always close editor, even sticky ones\n\tfunction closeEditorHandler(\n\t\taccessor: ServicesAccessor,\n\t\tforceCloseStickyEditors: boolean,\n\t\t...args: unknown[]\n\t): Promise<unknown> {\n\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tlet keepStickyEditors: boolean | undefined;\n\t\tif (forceCloseStickyEditors) {\n\t\t\tkeepStickyEditors = false; // explicitly close sticky editors\n\t\t} else if (args.length) {\n\t\t\tkeepStickyEditors = false; // we have a context, as such this command was used e.g. from the tab context menu\n\t\t} else {\n\t\t\tkeepStickyEditors =\n\t\t\t\teditorGroupsService.partOptions.preventPinnedEditorClose ===\n\t\t\t\t\t\"keyboard\" ||\n\t\t\t\teditorGroupsService.partOptions.preventPinnedEditorClose ===\n\t\t\t\t\t\"keyboardAndMouse\"; // respect setting otherwise\n\t\t}\n\n\t\t// Skip over sticky editor and select next if we are configured to do so\n\t\tif (keepStickyEditors) {\n\t\t\tconst activeGroup = editorGroupsService.activeGroup;\n\t\t\tconst activeEditor = activeGroup.activeEditor;\n\n\t\t\tif (activeEditor && activeGroup.isSticky(activeEditor)) {\n\t\t\t\t// Open next recently active in same group\n\t\t\t\tconst nextNonStickyEditorInGroup = activeGroup.getEditors(\n\t\t\t\t\tEditorsOrder.MOST_RECENTLY_ACTIVE,\n\t\t\t\t\t{ excludeSticky: true },\n\t\t\t\t)[0];\n\t\t\t\tif (nextNonStickyEditorInGroup) {\n\t\t\t\t\treturn activeGroup.openEditor(nextNonStickyEditorInGroup);\n\t\t\t\t}\n\n\t\t\t\t// Open next recently active across all groups\n\t\t\t\tconst nextNonStickyEditorInAllGroups = editorService.getEditors(\n\t\t\t\t\tEditorsOrder.MOST_RECENTLY_ACTIVE,\n\t\t\t\t\t{ excludeSticky: true },\n\t\t\t\t)[0];\n\t\t\t\tif (nextNonStickyEditorInAllGroups) {\n\t\t\t\t\treturn Promise.resolve(\n\t\t\t\t\t\teditorGroupsService\n\t\t\t\t\t\t\t.getGroup(nextNonStickyEditorInAllGroups.groupId)\n\t\t\t\t\t\t\t?.openEditor(nextNonStickyEditorInAllGroups.editor),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// With context: proceed to close editors as instructed\n\t\tconst resolvedContext = resolveCommandsContext(\n\t\t\targs,\n\t\t\taccessor.get(IEditorService),\n\t\t\taccessor.get(IEditorGroupsService),\n\t\t\taccessor.get(IListService),\n\t\t);\n\t\tconst preserveFocus = resolvedContext.preserveFocus;\n\n\t\treturn Promise.all(\n\t\t\tresolvedContext.groupedEditors.map(async ({ group, editors }) => {\n\t\t\t\tconst editorsToClose = editors.filter(\n\t\t\t\t\t(editor) => !keepStickyEditors || !group.isSticky(editor),\n\t\t\t\t);\n\t\t\t\tawait group.closeEditors(editorsToClose, { preserveFocus });\n\t\t\t}),\n\t\t);\n\t}\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: CLOSE_EDITOR_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyW,\n\t\twin: {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.F4,\n\t\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.KeyW],\n\t\t},\n\t\thandler: (accessor, ...args: unknown[]) => {\n\t\t\treturn closeEditorHandler(accessor, false, ...args);\n\t\t},\n\t});\n\n\tCommandsRegistry.registerCommand(\n\t\tCLOSE_PINNED_EDITOR_COMMAND_ID,\n\t\t(accessor, ...args: unknown[]) => {\n\t\t\treturn closeEditorHandler(\n\t\t\t\taccessor,\n\t\t\t\ttrue /* force close pinned editors */,\n\t\t\t\t...args,\n\t\t\t);\n\t\t},\n\t);\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: CLOSE_EDITORS_IN_GROUP_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyW),\n\t\thandler: (accessor, ...args: unknown[]) => {\n\t\t\tconst resolvedContext = resolveCommandsContext(\n\t\t\t\targs,\n\t\t\t\taccessor.get(IEditorService),\n\t\t\t\taccessor.get(IEditorGroupsService),\n\t\t\t\taccessor.get(IListService),\n\t\t\t);\n\t\t\treturn Promise.all(\n\t\t\t\tresolvedContext.groupedEditors.map(async ({ group }) => {\n\t\t\t\t\tawait group.closeAllEditors({ excludeSticky: true });\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: CLOSE_EDITOR_GROUP_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: ContextKeyExpr.and(\n\t\t\tActiveEditorGroupEmptyContext,\n\t\t\tMultipleEditorGroupsContext,\n\t\t),\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyW,\n\t\twin: {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.F4,\n\t\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.KeyW],\n\t\t},\n\t\thandler: (accessor, ...args: unknown[]) => {\n\t\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\t\tconst commandsContext = resolveCommandsContext(\n\t\t\t\targs,\n\t\t\t\taccessor.get(IEditorService),\n\t\t\t\teditorGroupsService,\n\t\t\t\taccessor.get(IListService),\n\t\t\t);\n\n\t\t\tif (commandsContext.groupedEditors.length) {\n\t\t\t\teditorGroupsService.removeGroup(\n\t\t\t\t\tcommandsContext.groupedEditors[0].group,\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: CLOSE_SAVED_EDITORS_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyU),\n\t\thandler: (accessor, ...args: unknown[]) => {\n\t\t\tconst resolvedContext = resolveCommandsContext(\n\t\t\t\targs,\n\t\t\t\taccessor.get(IEditorService),\n\t\t\t\taccessor.get(IEditorGroupsService),\n\t\t\t\taccessor.get(IListService),\n\t\t\t);\n\t\t\treturn Promise.all(\n\t\t\t\tresolvedContext.groupedEditors.map(async ({ group }) => {\n\t\t\t\t\tawait group.closeEditors(\n\t\t\t\t\t\t{ savedOnly: true, excludeSticky: true },\n\t\t\t\t\t\t{ preserveFocus: resolvedContext.preserveFocus },\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: CLOSE_OTHER_EDITORS_IN_GROUP_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: undefined,\n\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyT },\n\t\thandler: (accessor, ...args: unknown[]) => {\n\t\t\tconst resolvedContext = resolveCommandsContext(\n\t\t\t\targs,\n\t\t\t\taccessor.get(IEditorService),\n\t\t\t\taccessor.get(IEditorGroupsService),\n\t\t\t\taccessor.get(IListService),\n\t\t\t);\n\n\t\t\treturn Promise.all(\n\t\t\t\tresolvedContext.groupedEditors.map(\n\t\t\t\t\tasync ({ group, editors }) => {\n\t\t\t\t\t\tconst editorsToClose = group\n\t\t\t\t\t\t\t.getEditors(EditorsOrder.SEQUENTIAL, {\n\t\t\t\t\t\t\t\texcludeSticky: true,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.filter((editor) => !editors.includes(editor));\n\n\t\t\t\t\t\tfor (const editorToKeep of editors) {\n\t\t\t\t\t\t\tif (editorToKeep) {\n\t\t\t\t\t\t\t\tgroup.pinEditor(editorToKeep);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tawait group.closeEditors(editorsToClose, {\n\t\t\t\t\t\t\tpreserveFocus: resolvedContext.preserveFocus,\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t},\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: CLOSE_EDITORS_TO_THE_RIGHT_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: undefined,\n\t\thandler: async (accessor, ...args: unknown[]) => {\n\t\t\tconst resolvedContext = resolveCommandsContext(\n\t\t\t\targs,\n\t\t\t\taccessor.get(IEditorService),\n\t\t\t\taccessor.get(IEditorGroupsService),\n\t\t\t\taccessor.get(IListService),\n\t\t\t);\n\t\t\tif (resolvedContext.groupedEditors.length) {\n\t\t\t\tconst { group, editors } = resolvedContext.groupedEditors[0];\n\t\t\t\tif (group.activeEditor) {\n\t\t\t\t\tgroup.pinEditor(group.activeEditor);\n\t\t\t\t}\n\n\t\t\t\tawait group.closeEditors(\n\t\t\t\t\t{\n\t\t\t\t\t\tdirection: CloseDirection.RIGHT,\n\t\t\t\t\t\texcept: editors[0],\n\t\t\t\t\t\texcludeSticky: true,\n\t\t\t\t\t},\n\t\t\t\t\t{ preserveFocus: resolvedContext.preserveFocus },\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: REOPEN_WITH_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: undefined,\n\t\thandler: async (accessor, ...args: unknown[]) => {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst editorResolverService = accessor.get(IEditorResolverService);\n\t\t\tconst telemetryService = accessor.get(ITelemetryService);\n\n\t\t\tconst resolvedContext = resolveCommandsContext(\n\t\t\t\targs,\n\t\t\t\teditorService,\n\t\t\t\taccessor.get(IEditorGroupsService),\n\t\t\t\taccessor.get(IListService),\n\t\t\t);\n\t\t\tconst editorReplacements = new Map<\n\t\t\t\tIEditorGroup,\n\t\t\t\tIEditorReplacement[]\n\t\t\t>();\n\n\t\t\tfor (const { group, editors } of resolvedContext.groupedEditors) {\n\t\t\t\tfor (const editor of editors) {\n\t\t\t\t\tconst untypedEditor = editor.toUntyped();\n\t\t\t\t\tif (!untypedEditor) {\n\t\t\t\t\t\treturn; // Resolver can only resolve untyped editors\n\t\t\t\t\t}\n\n\t\t\t\t\tuntypedEditor.options = {\n\t\t\t\t\t\t...editorService.activeEditorPane?.options,\n\t\t\t\t\t\toverride: EditorResolution.PICK,\n\t\t\t\t\t};\n\t\t\t\t\tconst resolvedEditor =\n\t\t\t\t\t\tawait editorResolverService.resolveEditor(\n\t\t\t\t\t\t\tuntypedEditor,\n\t\t\t\t\t\t\tgroup,\n\t\t\t\t\t\t);\n\t\t\t\t\tif (!isEditorInputWithOptionsAndGroup(resolvedEditor)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet editorReplacementsInGroup =\n\t\t\t\t\t\teditorReplacements.get(group);\n\t\t\t\t\tif (!editorReplacementsInGroup) {\n\t\t\t\t\t\teditorReplacementsInGroup = [];\n\t\t\t\t\t\teditorReplacements.set(\n\t\t\t\t\t\t\tgroup,\n\t\t\t\t\t\t\teditorReplacementsInGroup,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\teditorReplacementsInGroup.push({\n\t\t\t\t\t\teditor: editor,\n\t\t\t\t\t\treplacement: resolvedEditor.editor,\n\t\t\t\t\t\tforceReplaceDirty:\n\t\t\t\t\t\t\teditor.resource?.scheme === Schemas.untitled,\n\t\t\t\t\t\toptions: resolvedEditor.options,\n\t\t\t\t\t});\n\n\t\t\t\t\t// Telemetry\n\t\t\t\t\ttype WorkbenchEditorReopenClassification = {\n\t\t\t\t\t\towner: \"rebornix\";\n\t\t\t\t\t\tcomment: \"Identify how a document is reopened\";\n\t\t\t\t\t\tscheme: {\n\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\t\t\tcomment: \"File system provider scheme for the resource\";\n\t\t\t\t\t\t};\n\t\t\t\t\t\text: {\n\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\t\t\tcomment: \"File extension for the resource\";\n\t\t\t\t\t\t};\n\t\t\t\t\t\tfrom: {\n\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\t\t\tcomment: \"The editor view type the resource is switched from\";\n\t\t\t\t\t\t};\n\t\t\t\t\t\tto: {\n\t\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\t\t\tcomment: \"The editor view type the resource is switched to\";\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\n\t\t\t\t\ttype WorkbenchEditorReopenEvent = {\n\t\t\t\t\t\tscheme: string;\n\t\t\t\t\t\text: string;\n\t\t\t\t\t\tfrom: string;\n\t\t\t\t\t\tto: string;\n\t\t\t\t\t};\n\n\t\t\t\t\ttelemetryService.publicLog2<\n\t\t\t\t\t\tWorkbenchEditorReopenEvent,\n\t\t\t\t\t\tWorkbenchEditorReopenClassification\n\t\t\t\t\t>(\"workbenchEditorReopen\", {\n\t\t\t\t\t\tscheme: editor.resource?.scheme ?? \"\",\n\t\t\t\t\t\text: editor.resource ? extname(editor.resource) : \"\",\n\t\t\t\t\t\tfrom: editor.editorId ?? \"\",\n\t\t\t\t\t\tto: resolvedEditor.editor.editorId ?? \"\",\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Replace editor with resolved one and make active\n\t\t\tfor (const [group, replacements] of editorReplacements) {\n\t\t\t\tawait group.replaceEditors(replacements);\n\t\t\t\tawait group.openEditor(replacements[0].replacement);\n\t\t\t}\n\t\t},\n\t});\n\n\tCommandsRegistry.registerCommand(\n\t\tCLOSE_EDITORS_AND_GROUP_COMMAND_ID,\n\t\tasync (accessor: ServicesAccessor, ...args: unknown[]) => {\n\t\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\n\t\t\tconst resolvedContext = resolveCommandsContext(\n\t\t\t\targs,\n\t\t\t\taccessor.get(IEditorService),\n\t\t\t\teditorGroupsService,\n\t\t\t\taccessor.get(IListService),\n\t\t\t);\n\t\t\tif (resolvedContext.groupedEditors.length) {\n\t\t\t\tconst { group } = resolvedContext.groupedEditors[0];\n\t\t\t\tawait group.closeAllEditors();\n\n\t\t\t\tif (\n\t\t\t\t\tgroup.count === 0 &&\n\t\t\t\t\teditorGroupsService.getGroup(\n\t\t\t\t\t\tgroup.id,\n\t\t\t\t\t) /* could be gone by now */\n\t\t\t\t) {\n\t\t\t\t\teditorGroupsService.removeGroup(group); // only remove group if it is now empty\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t);\n}\n\nfunction registerFocusEditorGroupWihoutWrapCommands(): void {\n\tconst commands = [\n\t\t{\n\t\t\tid: FOCUS_LEFT_GROUP_WITHOUT_WRAP_COMMAND_ID,\n\t\t\tdirection: GroupDirection.LEFT,\n\t\t},\n\t\t{\n\t\t\tid: FOCUS_RIGHT_GROUP_WITHOUT_WRAP_COMMAND_ID,\n\t\t\tdirection: GroupDirection.RIGHT,\n\t\t},\n\t\t{\n\t\t\tid: FOCUS_ABOVE_GROUP_WITHOUT_WRAP_COMMAND_ID,\n\t\t\tdirection: GroupDirection.UP,\n\t\t},\n\t\t{\n\t\t\tid: FOCUS_BELOW_GROUP_WITHOUT_WRAP_COMMAND_ID,\n\t\t\tdirection: GroupDirection.DOWN,\n\t\t},\n\t];\n\n\tfor (const command of commands) {\n\t\tCommandsRegistry.registerCommand(\n\t\t\tcommand.id,\n\t\t\tasync (accessor: ServicesAccessor) => {\n\t\t\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\n\t\t\t\tconst group = editorGroupsService.findGroup(\n\t\t\t\t\t{ direction: command.direction },\n\t\t\t\t\teditorGroupsService.activeGroup,\n\t\t\t\t\tfalse,\n\t\t\t\t);\n\t\t\t\tgroup?.focus();\n\t\t\t},\n\t\t);\n\t}\n}\n\nfunction registerSplitEditorInGroupCommands(): void {\n\tasync function splitEditorInGroup(\n\t\taccessor: ServicesAccessor,\n\t\tresolvedContext: IResolvedEditorCommandsContext,\n\t): Promise<void> {\n\t\tconst instantiationService = accessor.get(IInstantiationService);\n\n\t\tif (!resolvedContext.groupedEditors.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { group, editors } = resolvedContext.groupedEditors[0];\n\t\tconst editor = editors[0];\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait group.replaceEditors([\n\t\t\t{\n\t\t\t\teditor,\n\t\t\t\treplacement: instantiationService.createInstance(\n\t\t\t\t\tSideBySideEditorInput,\n\t\t\t\t\tundefined,\n\t\t\t\t\tundefined,\n\t\t\t\t\teditor,\n\t\t\t\t\teditor,\n\t\t\t\t),\n\t\t\t\tforceReplaceDirty: true,\n\t\t\t},\n\t\t]);\n\t}\n\n\tregisterAction2(\n\t\tclass extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: SPLIT_EDITOR_IN_GROUP,\n\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\"splitEditorInGroup\",\n\t\t\t\t\t\t\"Split Editor in Group\",\n\t\t\t\t\t),\n\t\t\t\t\tcategory: Categories.View,\n\t\t\t\t\tprecondition: ActiveEditorCanSplitInGroupContext,\n\t\t\t\t\tf1: true,\n\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\twhen: ActiveEditorCanSplitInGroupContext,\n\t\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\t\t\tKeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Backslash,\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor, ...args: unknown[]): Promise<void> {\n\t\t\t\treturn splitEditorInGroup(\n\t\t\t\t\taccessor,\n\t\t\t\t\tresolveCommandsContext(\n\t\t\t\t\t\targs,\n\t\t\t\t\t\taccessor.get(IEditorService),\n\t\t\t\t\t\taccessor.get(IEditorGroupsService),\n\t\t\t\t\t\taccessor.get(IListService),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t);\n\n\tasync function joinEditorInGroup(\n\t\tresolvedContext: IResolvedEditorCommandsContext,\n\t): Promise<void> {\n\t\tif (!resolvedContext.groupedEditors.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { group, editors } = resolvedContext.groupedEditors[0];\n\t\tconst editor = editors[0];\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!(editor instanceof SideBySideEditorInput)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet options: IEditorOptions | undefined;\n\t\tconst activeEditorPane = group.activeEditorPane;\n\t\tif (\n\t\t\tactiveEditorPane instanceof SideBySideEditor &&\n\t\t\tgroup.activeEditor === editor\n\t\t) {\n\t\t\tfor (const pane of [\n\t\t\t\tactiveEditorPane.getPrimaryEditorPane(),\n\t\t\t\tactiveEditorPane.getSecondaryEditorPane(),\n\t\t\t]) {\n\t\t\t\tif (pane?.hasFocus()) {\n\t\t\t\t\toptions = { viewState: pane.getViewState() };\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tawait group.replaceEditors([\n\t\t\t{\n\t\t\t\teditor,\n\t\t\t\treplacement: editor.primary,\n\t\t\t\toptions,\n\t\t\t},\n\t\t]);\n\t}\n\n\tregisterAction2(\n\t\tclass extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: JOIN_EDITOR_IN_GROUP,\n\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\"joinEditorInGroup\",\n\t\t\t\t\t\t\"Join Editor in Group\",\n\t\t\t\t\t),\n\t\t\t\t\tcategory: Categories.View,\n\t\t\t\t\tprecondition: SideBySideEditorActiveContext,\n\t\t\t\t\tf1: true,\n\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\twhen: SideBySideEditorActiveContext,\n\t\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\t\t\tKeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Backslash,\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor, ...args: unknown[]): Promise<void> {\n\t\t\t\treturn joinEditorInGroup(\n\t\t\t\t\tresolveCommandsContext(\n\t\t\t\t\t\targs,\n\t\t\t\t\t\taccessor.get(IEditorService),\n\t\t\t\t\t\taccessor.get(IEditorGroupsService),\n\t\t\t\t\t\taccessor.get(IListService),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t);\n\n\tregisterAction2(\n\t\tclass extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: TOGGLE_SPLIT_EDITOR_IN_GROUP,\n\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\"toggleJoinEditorInGroup\",\n\t\t\t\t\t\t\"Toggle Split Editor in Group\",\n\t\t\t\t\t),\n\t\t\t\t\tcategory: Categories.View,\n\t\t\t\t\tprecondition: ContextKeyExpr.or(\n\t\t\t\t\t\tActiveEditorCanSplitInGroupContext,\n\t\t\t\t\t\tSideBySideEditorActiveContext,\n\t\t\t\t\t),\n\t\t\t\t\tf1: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(\n\t\t\t\taccessor: ServicesAccessor,\n\t\t\t\t...args: unknown[]\n\t\t\t): Promise<void> {\n\t\t\t\tconst resolvedContext = resolveCommandsContext(\n\t\t\t\t\targs,\n\t\t\t\t\taccessor.get(IEditorService),\n\t\t\t\t\taccessor.get(IEditorGroupsService),\n\t\t\t\t\taccessor.get(IListService),\n\t\t\t\t);\n\t\t\t\tif (!resolvedContext.groupedEditors.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { editors } = resolvedContext.groupedEditors[0];\n\n\t\t\t\tif (editors[0] instanceof SideBySideEditorInput) {\n\t\t\t\t\tawait joinEditorInGroup(resolvedContext);\n\t\t\t\t} else if (editors[0]) {\n\t\t\t\t\tawait splitEditorInGroup(accessor, resolvedContext);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t);\n\n\tregisterAction2(\n\t\tclass extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: TOGGLE_SPLIT_EDITOR_IN_GROUP_LAYOUT,\n\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\"toggleSplitEditorInGroupLayout\",\n\t\t\t\t\t\t\"Toggle Layout of Split Editor in Group\",\n\t\t\t\t\t),\n\t\t\t\t\tcategory: Categories.View,\n\t\t\t\t\tprecondition: SideBySideEditorActiveContext,\n\t\t\t\t\tf1: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\tconst configurationService = accessor.get(\n\t\t\t\t\tIConfigurationService,\n\t\t\t\t);\n\t\t\t\tconst currentSetting = configurationService.getValue<unknown>(\n\t\t\t\t\tSideBySideEditor.SIDE_BY_SIDE_LAYOUT_SETTING,\n\t\t\t\t);\n\n\t\t\t\tlet newSetting: \"vertical\" | \"horizontal\";\n\t\t\t\tif (currentSetting !== \"horizontal\") {\n\t\t\t\t\tnewSetting = \"horizontal\";\n\t\t\t\t} else {\n\t\t\t\t\tnewSetting = \"vertical\";\n\t\t\t\t}\n\n\t\t\t\treturn configurationService.updateValue(\n\t\t\t\t\tSideBySideEditor.SIDE_BY_SIDE_LAYOUT_SETTING,\n\t\t\t\t\tnewSetting,\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t);\n}\n\nfunction registerFocusSideEditorsCommands(): void {\n\tregisterAction2(\n\t\tclass extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: FOCUS_FIRST_SIDE_EDITOR,\n\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\"focusLeftSideEditor\",\n\t\t\t\t\t\t\"Focus First Side in Active Editor\",\n\t\t\t\t\t),\n\t\t\t\t\tcategory: Categories.View,\n\t\t\t\t\tprecondition: ContextKeyExpr.or(\n\t\t\t\t\t\tSideBySideEditorActiveContext,\n\t\t\t\t\t\tTextCompareEditorActiveContext,\n\t\t\t\t\t),\n\t\t\t\t\tf1: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\t\tconst commandService = accessor.get(ICommandService);\n\n\t\t\t\tconst activeEditorPane = editorService.activeEditorPane;\n\t\t\t\tif (activeEditorPane instanceof SideBySideEditor) {\n\t\t\t\t\tactiveEditorPane.getSecondaryEditorPane()?.focus();\n\t\t\t\t} else if (activeEditorPane instanceof TextDiffEditor) {\n\t\t\t\t\tawait commandService.executeCommand(\n\t\t\t\t\t\tDIFF_FOCUS_SECONDARY_SIDE,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t);\n\n\tregisterAction2(\n\t\tclass extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: FOCUS_SECOND_SIDE_EDITOR,\n\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\"focusRightSideEditor\",\n\t\t\t\t\t\t\"Focus Second Side in Active Editor\",\n\t\t\t\t\t),\n\t\t\t\t\tcategory: Categories.View,\n\t\t\t\t\tprecondition: ContextKeyExpr.or(\n\t\t\t\t\t\tSideBySideEditorActiveContext,\n\t\t\t\t\t\tTextCompareEditorActiveContext,\n\t\t\t\t\t),\n\t\t\t\t\tf1: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\t\tconst commandService = accessor.get(ICommandService);\n\n\t\t\t\tconst activeEditorPane = editorService.activeEditorPane;\n\t\t\t\tif (activeEditorPane instanceof SideBySideEditor) {\n\t\t\t\t\tactiveEditorPane.getPrimaryEditorPane()?.focus();\n\t\t\t\t} else if (activeEditorPane instanceof TextDiffEditor) {\n\t\t\t\t\tawait commandService.executeCommand(\n\t\t\t\t\t\tDIFF_FOCUS_PRIMARY_SIDE,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t);\n\n\tregisterAction2(\n\t\tclass extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: FOCUS_OTHER_SIDE_EDITOR,\n\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\"focusOtherSideEditor\",\n\t\t\t\t\t\t\"Focus Other Side in Active Editor\",\n\t\t\t\t\t),\n\t\t\t\t\tcategory: Categories.View,\n\t\t\t\t\tprecondition: ContextKeyExpr.or(\n\t\t\t\t\t\tSideBySideEditorActiveContext,\n\t\t\t\t\t\tTextCompareEditorActiveContext,\n\t\t\t\t\t),\n\t\t\t\t\tf1: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\t\tconst commandService = accessor.get(ICommandService);\n\n\t\t\t\tconst activeEditorPane = editorService.activeEditorPane;\n\t\t\t\tif (activeEditorPane instanceof SideBySideEditor) {\n\t\t\t\t\tif (activeEditorPane.getPrimaryEditorPane()?.hasFocus()) {\n\t\t\t\t\t\tactiveEditorPane.getSecondaryEditorPane()?.focus();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tactiveEditorPane.getPrimaryEditorPane()?.focus();\n\t\t\t\t\t}\n\t\t\t\t} else if (activeEditorPane instanceof TextDiffEditor) {\n\t\t\t\t\tawait commandService.executeCommand(DIFF_FOCUS_OTHER_SIDE);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t);\n}\n\nfunction registerOtherEditorCommands(): void {\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: KEEP_EDITOR_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.Enter),\n\t\thandler: async (accessor, ...args: unknown[]) => {\n\t\t\tconst resolvedContext = resolveCommandsContext(\n\t\t\t\targs,\n\t\t\t\taccessor.get(IEditorService),\n\t\t\t\taccessor.get(IEditorGroupsService),\n\t\t\t\taccessor.get(IListService),\n\t\t\t);\n\t\t\tfor (const { group, editors } of resolvedContext.groupedEditors) {\n\t\t\t\tfor (const editor of editors) {\n\t\t\t\t\tgroup.pinEditor(editor);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t});\n\n\tCommandsRegistry.registerCommand({\n\t\tid: TOGGLE_KEEP_EDITORS_COMMAND_ID,\n\t\thandler: (accessor) => {\n\t\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\t\tconst currentSetting = configurationService.getValue(\n\t\t\t\t\"workbench.editor.enablePreview\",\n\t\t\t);\n\t\t\tconst newSetting = currentSetting === true ? false : true;\n\t\t\tconfigurationService.updateValue(\n\t\t\t\t\"workbench.editor.enablePreview\",\n\t\t\t\tnewSetting,\n\t\t\t);\n\t\t},\n\t});\n\n\tfunction setEditorGroupLock(\n\t\taccessor: ServicesAccessor,\n\t\tlocked: boolean | undefined,\n\t\t...args: unknown[]\n\t): void {\n\t\tconst resolvedContext = resolveCommandsContext(\n\t\t\targs,\n\t\t\taccessor.get(IEditorService),\n\t\t\taccessor.get(IEditorGroupsService),\n\t\t\taccessor.get(IListService),\n\t\t);\n\t\tconst group = resolvedContext.groupedEditors[0]?.group;\n\t\tgroup?.lock(locked ?? !group.isLocked);\n\t}\n\n\tregisterAction2(\n\t\tclass extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: TOGGLE_LOCK_GROUP_COMMAND_ID,\n\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\"toggleEditorGroupLock\",\n\t\t\t\t\t\t\"Toggle Editor Group Lock\",\n\t\t\t\t\t),\n\t\t\t\t\tcategory: Categories.View,\n\t\t\t\t\tf1: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(\n\t\t\t\taccessor: ServicesAccessor,\n\t\t\t\t...args: unknown[]\n\t\t\t): Promise<void> {\n\t\t\t\tsetEditorGroupLock(accessor, undefined, ...args);\n\t\t\t}\n\t\t},\n\t);\n\n\tregisterAction2(\n\t\tclass extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: LOCK_GROUP_COMMAND_ID,\n\t\t\t\t\ttitle: localize2(\"lockEditorGroup\", \"Lock Editor Group\"),\n\t\t\t\t\tcategory: Categories.View,\n\t\t\t\t\tprecondition: ActiveEditorGroupLockedContext.toNegated(),\n\t\t\t\t\tf1: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(\n\t\t\t\taccessor: ServicesAccessor,\n\t\t\t\t...args: unknown[]\n\t\t\t): Promise<void> {\n\t\t\t\tsetEditorGroupLock(accessor, true, ...args);\n\t\t\t}\n\t\t},\n\t);\n\n\tregisterAction2(\n\t\tclass extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: UNLOCK_GROUP_COMMAND_ID,\n\t\t\t\t\ttitle: localize2(\n\t\t\t\t\t\t\"unlockEditorGroup\",\n\t\t\t\t\t\t\"Unlock Editor Group\",\n\t\t\t\t\t),\n\t\t\t\t\tprecondition: ActiveEditorGroupLockedContext,\n\t\t\t\t\tcategory: Categories.View,\n\t\t\t\t\tf1: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(\n\t\t\t\taccessor: ServicesAccessor,\n\t\t\t\t...args: unknown[]\n\t\t\t): Promise<void> {\n\t\t\t\tsetEditorGroupLock(accessor, false, ...args);\n\t\t\t}\n\t\t},\n\t);\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: PIN_EDITOR_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: ActiveEditorStickyContext.toNegated(),\n\t\tprimary: KeyChord(\n\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\tKeyMod.Shift | KeyCode.Enter,\n\t\t),\n\t\thandler: async (accessor, ...args: unknown[]) => {\n\t\t\tconst resolvedContext = resolveCommandsContext(\n\t\t\t\targs,\n\t\t\t\taccessor.get(IEditorService),\n\t\t\t\taccessor.get(IEditorGroupsService),\n\t\t\t\taccessor.get(IListService),\n\t\t\t);\n\t\t\tfor (const { group, editors } of resolvedContext.groupedEditors) {\n\t\t\t\tfor (const editor of editors) {\n\t\t\t\t\tgroup.stickEditor(editor);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: DIFF_OPEN_SIDE,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: EditorContextKeys.inDiffEditor,\n\t\tprimary: KeyChord(\n\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\tKeyMod.Shift | KeyCode.KeyO,\n\t\t),\n\t\thandler: async (accessor) => {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\n\t\t\tconst activeEditor = editorService.activeEditor;\n\t\t\tconst activeTextEditorControl =\n\t\t\t\teditorService.activeTextEditorControl;\n\t\t\tif (\n\t\t\t\t!isDiffEditor(activeTextEditorControl) ||\n\t\t\t\t!(activeEditor instanceof DiffEditorInput)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet editor: EditorInput | undefined;\n\t\t\tconst originalEditor = activeTextEditorControl.getOriginalEditor();\n\t\t\tif (originalEditor.hasTextFocus()) {\n\t\t\t\teditor = activeEditor.original;\n\t\t\t} else {\n\t\t\t\teditor = activeEditor.modified;\n\t\t\t}\n\n\t\t\treturn editorGroupsService.activeGroup.openEditor(editor);\n\t\t},\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: UNPIN_EDITOR_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: ActiveEditorStickyContext,\n\t\tprimary: KeyChord(\n\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\tKeyMod.Shift | KeyCode.Enter,\n\t\t),\n\t\thandler: async (accessor, ...args: unknown[]) => {\n\t\t\tconst resolvedContext = resolveCommandsContext(\n\t\t\t\targs,\n\t\t\t\taccessor.get(IEditorService),\n\t\t\t\taccessor.get(IEditorGroupsService),\n\t\t\t\taccessor.get(IListService),\n\t\t\t);\n\t\t\tfor (const { group, editors } of resolvedContext.groupedEditors) {\n\t\t\t\tfor (const editor of editors) {\n\t\t\t\t\tgroup.unstickEditor(editor);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: SHOW_EDITORS_IN_GROUP,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: undefined,\n\t\thandler: (accessor, ...args: unknown[]) => {\n\t\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\t\tconst commandsContext = resolveCommandsContext(\n\t\t\t\targs,\n\t\t\t\taccessor.get(IEditorService),\n\t\t\t\teditorGroupsService,\n\t\t\t\taccessor.get(IListService),\n\t\t\t);\n\t\t\tconst group = commandsContext.groupedEditors[0]?.group;\n\t\t\tif (group) {\n\t\t\t\teditorGroupsService.activateGroup(group); // we need the group to be active\n\t\t\t}\n\n\t\t\treturn quickInputService.quickAccess.show(\n\t\t\t\tActiveGroupEditorsByMostRecentlyUsedQuickAccess.PREFIX,\n\t\t\t);\n\t\t},\n\t});\n}\n\nexport function setup(): void {\n\tregisterActiveEditorMoveCopyCommand();\n\tregisterEditorGroupsLayoutCommands();\n\tregisterDiffEditorCommands();\n\tregisterOpenEditorAPICommands();\n\tregisterOpenEditorAtIndexCommands();\n\tregisterCloseEditorCommands();\n\tregisterOtherEditorCommands();\n\tregisterSplitEditorInGroupCommands();\n\tregisterFocusSideEditorsCommands();\n\tregisterFocusEditorGroupAtIndexCommands();\n\tregisterSplitEditorCommands();\n\tregisterFocusEditorGroupWihoutWrapCommands();\n}\n"],
  "mappings": "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",
  "names": []
}
