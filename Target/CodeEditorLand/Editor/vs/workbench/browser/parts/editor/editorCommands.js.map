{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/editor/editorCommands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IJSONSchema } from '../../../../base/common/jsonSchema.js';\nimport { KeyChord, KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { Schemas, matchesScheme } from '../../../../base/common/network.js';\nimport { extname } from '../../../../base/common/resources.js';\nimport { isNumber, isObject, isString, isUndefined } from '../../../../base/common/types.js';\nimport { URI, UriComponents } from '../../../../base/common/uri.js';\nimport { isDiffEditor } from '../../../../editor/browser/editorBrowser.js';\nimport { EditorContextKeys } from '../../../../editor/common/editorContextKeys.js';\nimport { localize, localize2 } from '../../../../nls.js';\nimport { Categories } from '../../../../platform/action/common/actionCommonCategories.js';\nimport { Action2, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry, ICommandHandler, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { EditorResolution, IEditorOptions, IResourceEditorInput, ITextEditorOptions } from '../../../../platform/editor/common/editor.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingWeight, KeybindingsRegistry } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { IListService, IOpenEvent } from '../../../../platform/list/browser/listService.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { ActiveGroupEditorsByMostRecentlyUsedQuickAccess } from './editorQuickAccess.js';\nimport { SideBySideEditor } from './sideBySideEditor.js';\nimport { TextDiffEditor } from './textDiffEditor.js';\nimport { ActiveEditorCanSplitInGroupContext, ActiveEditorGroupEmptyContext, ActiveEditorGroupLockedContext, ActiveEditorStickyContext, MultipleEditorGroupsContext, SideBySideEditorActiveContext, TextCompareEditorActiveContext } from '../../../common/contextkeys.js';\nimport { CloseDirection, EditorInputCapabilities, EditorsOrder, IResourceDiffEditorInput, IUntitledTextResourceEditorInput, IVisibleEditorPane, isEditorInputWithOptionsAndGroup } from '../../../common/editor.js';\nimport { DiffEditorInput } from '../../../common/editor/diffEditorInput.js';\nimport { EditorInput } from '../../../common/editor/editorInput.js';\nimport { SideBySideEditorInput } from '../../../common/editor/sideBySideEditorInput.js';\nimport { EditorGroupColumn, columnToEditorGroup } from '../../../services/editor/common/editorGroupColumn.js';\nimport { EditorGroupLayout, GroupDirection, GroupLocation, GroupsOrder, IEditorGroup, IEditorGroupsService, IEditorReplacement, preferredSideBySideGroupDirection } from '../../../services/editor/common/editorGroupsService.js';\nimport { IEditorResolverService } from '../../../services/editor/common/editorResolverService.js';\nimport { IEditorService, SIDE_GROUP } from '../../../services/editor/common/editorService.js';\nimport { IPathService } from '../../../services/path/common/pathService.js';\nimport { IUntitledTextEditorService } from '../../../services/untitled/common/untitledTextEditorService.js';\nimport { DIFF_FOCUS_OTHER_SIDE, DIFF_FOCUS_PRIMARY_SIDE, DIFF_FOCUS_SECONDARY_SIDE, DIFF_OPEN_SIDE, registerDiffEditorCommands } from './diffEditorCommands.js';\nimport { IResolvedEditorCommandsContext, resolveCommandsContext } from './editorCommandsContext.js';\n\nexport const CLOSE_SAVED_EDITORS_COMMAND_ID = 'workbench.action.closeUnmodifiedEditors';\nexport const CLOSE_EDITORS_IN_GROUP_COMMAND_ID = 'workbench.action.closeEditorsInGroup';\nexport const CLOSE_EDITORS_AND_GROUP_COMMAND_ID = 'workbench.action.closeEditorsAndGroup';\nexport const CLOSE_EDITORS_TO_THE_RIGHT_COMMAND_ID = 'workbench.action.closeEditorsToTheRight';\nexport const CLOSE_EDITOR_COMMAND_ID = 'workbench.action.closeActiveEditor';\nexport const CLOSE_PINNED_EDITOR_COMMAND_ID = 'workbench.action.closeActivePinnedEditor';\nexport const CLOSE_EDITOR_GROUP_COMMAND_ID = 'workbench.action.closeGroup';\nexport const CLOSE_OTHER_EDITORS_IN_GROUP_COMMAND_ID = 'workbench.action.closeOtherEditors';\n\nexport const MOVE_ACTIVE_EDITOR_COMMAND_ID = 'moveActiveEditor';\nexport const COPY_ACTIVE_EDITOR_COMMAND_ID = 'copyActiveEditor';\nexport const LAYOUT_EDITOR_GROUPS_COMMAND_ID = 'layoutEditorGroups';\nexport const KEEP_EDITOR_COMMAND_ID = 'workbench.action.keepEditor';\nexport const TOGGLE_KEEP_EDITORS_COMMAND_ID = 'workbench.action.toggleKeepEditors';\nexport const TOGGLE_LOCK_GROUP_COMMAND_ID = 'workbench.action.toggleEditorGroupLock';\nexport const LOCK_GROUP_COMMAND_ID = 'workbench.action.lockEditorGroup';\nexport const UNLOCK_GROUP_COMMAND_ID = 'workbench.action.unlockEditorGroup';\nexport const SHOW_EDITORS_IN_GROUP = 'workbench.action.showEditorsInGroup';\nexport const REOPEN_WITH_COMMAND_ID = 'workbench.action.reopenWithEditor';\n\nexport const PIN_EDITOR_COMMAND_ID = 'workbench.action.pinEditor';\nexport const UNPIN_EDITOR_COMMAND_ID = 'workbench.action.unpinEditor';\n\nexport const SPLIT_EDITOR = 'workbench.action.splitEditor';\nexport const SPLIT_EDITOR_UP = 'workbench.action.splitEditorUp';\nexport const SPLIT_EDITOR_DOWN = 'workbench.action.splitEditorDown';\nexport const SPLIT_EDITOR_LEFT = 'workbench.action.splitEditorLeft';\nexport const SPLIT_EDITOR_RIGHT = 'workbench.action.splitEditorRight';\n\nexport const TOGGLE_MAXIMIZE_EDITOR_GROUP = 'workbench.action.toggleMaximizeEditorGroup';\n\nexport const SPLIT_EDITOR_IN_GROUP = 'workbench.action.splitEditorInGroup';\nexport const TOGGLE_SPLIT_EDITOR_IN_GROUP = 'workbench.action.toggleSplitEditorInGroup';\nexport const JOIN_EDITOR_IN_GROUP = 'workbench.action.joinEditorInGroup';\nexport const TOGGLE_SPLIT_EDITOR_IN_GROUP_LAYOUT = 'workbench.action.toggleSplitEditorInGroupLayout';\n\nexport const FOCUS_FIRST_SIDE_EDITOR = 'workbench.action.focusFirstSideEditor';\nexport const FOCUS_SECOND_SIDE_EDITOR = 'workbench.action.focusSecondSideEditor';\nexport const FOCUS_OTHER_SIDE_EDITOR = 'workbench.action.focusOtherSideEditor';\n\nexport const FOCUS_LEFT_GROUP_WITHOUT_WRAP_COMMAND_ID = 'workbench.action.focusLeftGroupWithoutWrap';\nexport const FOCUS_RIGHT_GROUP_WITHOUT_WRAP_COMMAND_ID = 'workbench.action.focusRightGroupWithoutWrap';\nexport const FOCUS_ABOVE_GROUP_WITHOUT_WRAP_COMMAND_ID = 'workbench.action.focusAboveGroupWithoutWrap';\nexport const FOCUS_BELOW_GROUP_WITHOUT_WRAP_COMMAND_ID = 'workbench.action.focusBelowGroupWithoutWrap';\n\nexport const OPEN_EDITOR_AT_INDEX_COMMAND_ID = 'workbench.action.openEditorAtIndex';\n\nexport const MOVE_EDITOR_INTO_NEW_WINDOW_COMMAND_ID = 'workbench.action.moveEditorToNewWindow';\nexport const COPY_EDITOR_INTO_NEW_WINDOW_COMMAND_ID = 'workbench.action.copyEditorToNewWindow';\n\nexport const MOVE_EDITOR_GROUP_INTO_NEW_WINDOW_COMMAND_ID = 'workbench.action.moveEditorGroupToNewWindow';\nexport const COPY_EDITOR_GROUP_INTO_NEW_WINDOW_COMMAND_ID = 'workbench.action.copyEditorGroupToNewWindow';\n\nexport const NEW_EMPTY_EDITOR_WINDOW_COMMAND_ID = 'workbench.action.newEmptyEditorWindow';\n\nexport const API_OPEN_EDITOR_COMMAND_ID = '_workbench.open';\nexport const API_OPEN_DIFF_EDITOR_COMMAND_ID = '_workbench.diff';\nexport const API_OPEN_WITH_EDITOR_COMMAND_ID = '_workbench.openWith';\n\nexport const EDITOR_CORE_NAVIGATION_COMMANDS = [\n\tSPLIT_EDITOR,\n\tCLOSE_EDITOR_COMMAND_ID,\n\tUNPIN_EDITOR_COMMAND_ID,\n\tUNLOCK_GROUP_COMMAND_ID,\n\tTOGGLE_MAXIMIZE_EDITOR_GROUP\n];\n\nexport interface ActiveEditorMoveCopyArguments {\n\tto?: 'first' | 'last' | 'left' | 'right' | 'up' | 'down' | 'center' | 'position' | 'previous' | 'next';\n\tby?: 'tab' | 'group';\n\tvalue?: number;\n}\n\nconst isActiveEditorMoveCopyArg = function (arg: ActiveEditorMoveCopyArguments): boolean {\n\tif (!isObject(arg)) {\n\t\treturn false;\n\t}\n\n\tif (!isString(arg.to)) {\n\t\treturn false;\n\t}\n\n\tif (!isUndefined(arg.by) && !isString(arg.by)) {\n\t\treturn false;\n\t}\n\n\tif (!isUndefined(arg.value) && !isNumber(arg.value)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n\nfunction registerActiveEditorMoveCopyCommand(): void {\n\n\tconst moveCopyJSONSchema: IJSONSchema = {\n\t\t'type': 'object',\n\t\t'required': ['to'],\n\t\t'properties': {\n\t\t\t'to': {\n\t\t\t\t'type': 'string',\n\t\t\t\t'enum': ['left', 'right']\n\t\t\t},\n\t\t\t'by': {\n\t\t\t\t'type': 'string',\n\t\t\t\t'enum': ['tab', 'group']\n\t\t\t},\n\t\t\t'value': {\n\t\t\t\t'type': 'number'\n\t\t\t}\n\t\t}\n\t};\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: MOVE_ACTIVE_EDITOR_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: EditorContextKeys.editorTextFocus,\n\t\tprimary: 0,\n\t\thandler: (accessor, args) => moveCopyActiveEditor(true, args, accessor),\n\t\tmetadata: {\n\t\t\tdescription: localize('editorCommand.activeEditorMove.description', \"Move the active editor by tabs or groups\"),\n\t\t\targs: [\n\t\t\t\t{\n\t\t\t\t\tname: localize('editorCommand.activeEditorMove.arg.name', \"Active editor move argument\"),\n\t\t\t\t\tdescription: localize('editorCommand.activeEditorMove.arg.description', \"Argument Properties:\\n\\t* 'to': String value providing where to move.\\n\\t* 'by': String value providing the unit for move (by tab or by group).\\n\\t* 'value': Number value providing how many positions or an absolute position to move.\"),\n\t\t\t\t\tconstraint: isActiveEditorMoveCopyArg,\n\t\t\t\t\tschema: moveCopyJSONSchema\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: COPY_ACTIVE_EDITOR_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: EditorContextKeys.editorTextFocus,\n\t\tprimary: 0,\n\t\thandler: (accessor, args) => moveCopyActiveEditor(false, args, accessor),\n\t\tmetadata: {\n\t\t\tdescription: localize('editorCommand.activeEditorCopy.description', \"Copy the active editor by groups\"),\n\t\t\targs: [\n\t\t\t\t{\n\t\t\t\t\tname: localize('editorCommand.activeEditorCopy.arg.name', \"Active editor copy argument\"),\n\t\t\t\t\tdescription: localize('editorCommand.activeEditorCopy.arg.description', \"Argument Properties:\\n\\t* 'to': String value providing where to copy.\\n\\t* 'value': Number value providing how many positions or an absolute position to copy.\"),\n\t\t\t\t\tconstraint: isActiveEditorMoveCopyArg,\n\t\t\t\t\tschema: moveCopyJSONSchema\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t});\n\n\tfunction moveCopyActiveEditor(isMove: boolean, args: ActiveEditorMoveCopyArguments = Object.create(null), accessor: ServicesAccessor): void {\n\t\targs.to = args.to || 'right';\n\t\targs.by = args.by || 'tab';\n\t\targs.value = typeof args.value === 'number' ? args.value : 1;\n\n\t\tconst activeEditorPane = accessor.get(IEditorService).activeEditorPane;\n\t\tif (activeEditorPane) {\n\t\t\tswitch (args.by) {\n\t\t\t\tcase 'tab':\n\t\t\t\t\tif (isMove) {\n\t\t\t\t\t\treturn moveActiveTab(args, activeEditorPane);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'group':\n\t\t\t\t\treturn moveCopyActiveEditorToGroup(isMove, args, activeEditorPane, accessor);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction moveActiveTab(args: ActiveEditorMoveCopyArguments, control: IVisibleEditorPane): void {\n\t\tconst group = control.group;\n\t\tlet index = group.getIndexOfEditor(control.input);\n\t\tswitch (args.to) {\n\t\t\tcase 'first':\n\t\t\t\tindex = 0;\n\t\t\t\tbreak;\n\t\t\tcase 'last':\n\t\t\t\tindex = group.count - 1;\n\t\t\t\tbreak;\n\t\t\tcase 'left':\n\t\t\t\tindex = index - (args.value ?? 1);\n\t\t\t\tbreak;\n\t\t\tcase 'right':\n\t\t\t\tindex = index + (args.value ?? 1);\n\t\t\t\tbreak;\n\t\t\tcase 'center':\n\t\t\t\tindex = Math.round(group.count / 2) - 1;\n\t\t\t\tbreak;\n\t\t\tcase 'position':\n\t\t\t\tindex = (args.value ?? 1) - 1;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tindex = index < 0 ? 0 : index >= group.count ? group.count - 1 : index;\n\t\tgroup.moveEditor(control.input, group, { index });\n\t}\n\n\tfunction moveCopyActiveEditorToGroup(isMove: boolean, args: ActiveEditorMoveCopyArguments, control: IVisibleEditorPane, accessor: ServicesAccessor): void {\n\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst sourceGroup = control.group;\n\t\tlet targetGroup: IEditorGroup | undefined;\n\n\t\tswitch (args.to) {\n\t\t\tcase 'left':\n\t\t\t\ttargetGroup = editorGroupsService.findGroup({ direction: GroupDirection.LEFT }, sourceGroup);\n\t\t\t\tif (!targetGroup) {\n\t\t\t\t\ttargetGroup = editorGroupsService.addGroup(sourceGroup, GroupDirection.LEFT);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'right':\n\t\t\t\ttargetGroup = editorGroupsService.findGroup({ direction: GroupDirection.RIGHT }, sourceGroup);\n\t\t\t\tif (!targetGroup) {\n\t\t\t\t\ttargetGroup = editorGroupsService.addGroup(sourceGroup, GroupDirection.RIGHT);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'up':\n\t\t\t\ttargetGroup = editorGroupsService.findGroup({ direction: GroupDirection.UP }, sourceGroup);\n\t\t\t\tif (!targetGroup) {\n\t\t\t\t\ttargetGroup = editorGroupsService.addGroup(sourceGroup, GroupDirection.UP);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'down':\n\t\t\t\ttargetGroup = editorGroupsService.findGroup({ direction: GroupDirection.DOWN }, sourceGroup);\n\t\t\t\tif (!targetGroup) {\n\t\t\t\t\ttargetGroup = editorGroupsService.addGroup(sourceGroup, GroupDirection.DOWN);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'first':\n\t\t\t\ttargetGroup = editorGroupsService.findGroup({ location: GroupLocation.FIRST }, sourceGroup);\n\t\t\t\tbreak;\n\t\t\tcase 'last':\n\t\t\t\ttargetGroup = editorGroupsService.findGroup({ location: GroupLocation.LAST }, sourceGroup);\n\t\t\t\tbreak;\n\t\t\tcase 'previous':\n\t\t\t\ttargetGroup = editorGroupsService.findGroup({ location: GroupLocation.PREVIOUS }, sourceGroup);\n\t\t\t\tbreak;\n\t\t\tcase 'next':\n\t\t\t\ttargetGroup = editorGroupsService.findGroup({ location: GroupLocation.NEXT }, sourceGroup);\n\t\t\t\tif (!targetGroup) {\n\t\t\t\t\ttargetGroup = editorGroupsService.addGroup(sourceGroup, preferredSideBySideGroupDirection(configurationService));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'center':\n\t\t\t\ttargetGroup = editorGroupsService.getGroups(GroupsOrder.GRID_APPEARANCE)[(editorGroupsService.count / 2) - 1];\n\t\t\t\tbreak;\n\t\t\tcase 'position':\n\t\t\t\ttargetGroup = editorGroupsService.getGroups(GroupsOrder.GRID_APPEARANCE)[(args.value ?? 1) - 1];\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (targetGroup) {\n\t\t\tif (isMove) {\n\t\t\t\tsourceGroup.moveEditor(control.input, targetGroup);\n\t\t\t} else if (sourceGroup.id !== targetGroup.id) {\n\t\t\t\tsourceGroup.copyEditor(control.input, targetGroup);\n\t\t\t}\n\t\t\ttargetGroup.focus();\n\t\t}\n\t}\n}\n\nfunction registerEditorGroupsLayoutCommands(): void {\n\n\tfunction applyEditorLayout(accessor: ServicesAccessor, layout: EditorGroupLayout): void {\n\t\tif (!layout || typeof layout !== 'object') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\teditorGroupsService.applyLayout(layout);\n\t}\n\n\tCommandsRegistry.registerCommand(LAYOUT_EDITOR_GROUPS_COMMAND_ID, (accessor: ServicesAccessor, args: EditorGroupLayout) => {\n\t\tapplyEditorLayout(accessor, args);\n\t});\n\n\t// API Commands\n\tCommandsRegistry.registerCommand({\n\t\tid: 'vscode.setEditorLayout',\n\t\thandler: (accessor: ServicesAccessor, args: EditorGroupLayout) => applyEditorLayout(accessor, args),\n\t\tmetadata: {\n\t\t\tdescription: 'Set Editor Layout',\n\t\t\targs: [{\n\t\t\t\tname: 'args',\n\t\t\t\tschema: {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t\t'required': ['groups'],\n\t\t\t\t\t'properties': {\n\t\t\t\t\t\t'orientation': {\n\t\t\t\t\t\t\t'type': 'number',\n\t\t\t\t\t\t\t'default': 0,\n\t\t\t\t\t\t\t'enum': [0, 1]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'groups': {\n\t\t\t\t\t\t\t'$ref': '#/definitions/editorGroupsSchema',\n\t\t\t\t\t\t\t'default': [{}, {}]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}]\n\t\t}\n\t});\n\n\tCommandsRegistry.registerCommand({\n\t\tid: 'vscode.getEditorLayout',\n\t\thandler: (accessor: ServicesAccessor) => {\n\t\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\n\t\t\treturn editorGroupsService.getLayout();\n\t\t},\n\t\tmetadata: {\n\t\t\tdescription: 'Get Editor Layout',\n\t\t\targs: [],\n\t\t\treturns: 'An editor layout object, in the same format as vscode.setEditorLayout'\n\t\t}\n\t});\n}\n\nfunction registerOpenEditorAPICommands(): void {\n\n\tfunction mixinContext(context: IOpenEvent<unknown> | undefined, options: ITextEditorOptions | undefined, column: EditorGroupColumn | undefined): [ITextEditorOptions | undefined, EditorGroupColumn | undefined] {\n\t\tif (!context) {\n\t\t\treturn [options, column];\n\t\t}\n\n\t\treturn [\n\t\t\t{ ...context.editorOptions, ...(options ?? Object.create(null)) },\n\t\t\tcontext.sideBySide ? SIDE_GROUP : column\n\t\t];\n\t}\n\n\t// partial, renderer-side API command to open editor\n\t// complements https://github.com/microsoft/vscode/blob/2b164efb0e6a5de3826bff62683eaeafe032284f/src/vs/workbench/api/common/extHostApiCommands.ts#L373\n\tCommandsRegistry.registerCommand({\n\t\tid: 'vscode.open',\n\t\thandler: (accessor, arg) => {\n\t\t\taccessor.get(ICommandService).executeCommand(API_OPEN_EDITOR_COMMAND_ID, arg);\n\t\t},\n\t\tmetadata: {\n\t\t\tdescription: 'Opens the provided resource in the editor.',\n\t\t\targs: [{ name: 'Uri' }]\n\t\t}\n\t});\n\n\tCommandsRegistry.registerCommand(API_OPEN_EDITOR_COMMAND_ID, async function (accessor: ServicesAccessor, resourceArg: UriComponents | string, columnAndOptions?: [EditorGroupColumn?, ITextEditorOptions?], label?: string, context?: IOpenEvent<unknown>) {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\tconst openerService = accessor.get(IOpenerService);\n\t\tconst pathService = accessor.get(IPathService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst untitledTextEditorService = accessor.get(IUntitledTextEditorService);\n\n\t\tconst resourceOrString = typeof resourceArg === 'string' ? resourceArg : URI.from(resourceArg, true);\n\t\tconst [columnArg, optionsArg] = columnAndOptions ?? [];\n\n\t\t// use editor options or editor view column or resource scheme\n\t\t// as a hint to use the editor service for opening directly\n\t\tif (optionsArg || typeof columnArg === 'number' || matchesScheme(resourceOrString, Schemas.untitled)) {\n\t\t\tconst [options, column] = mixinContext(context, optionsArg, columnArg);\n\t\t\tconst resource = URI.isUri(resourceOrString) ? resourceOrString : URI.parse(resourceOrString);\n\n\t\t\tlet input: IResourceEditorInput | IUntitledTextResourceEditorInput;\n\t\t\tif (untitledTextEditorService.isUntitledWithAssociatedResource(resource)) {\n\t\t\t\t// special case for untitled: we are getting a resource with meaningful\n\t\t\t\t// path from an extension to use for the untitled editor. as such, we\n\t\t\t\t// have to assume it as an associated resource to use when saving. we\n\t\t\t\t// do so by setting the `forceUntitled: true` and changing the scheme\n\t\t\t\t// to a file based one. the untitled editor service takes care to\n\t\t\t\t// associate the path properly then.\n\t\t\t\tinput = { resource: resource.with({ scheme: pathService.defaultUriScheme }), forceUntitled: true, options, label };\n\t\t\t} else {\n\t\t\t\t// use any other resource as is\n\t\t\t\tinput = { resource, options, label };\n\t\t\t}\n\n\t\t\tawait editorService.openEditor(input, columnToEditorGroup(editorGroupsService, configurationService, column));\n\t\t}\n\n\t\t// do not allow to execute commands from here\n\t\telse if (matchesScheme(resourceOrString, Schemas.command)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// finally, delegate to opener service\n\t\telse {\n\t\t\tawait openerService.open(resourceOrString, { openToSide: context?.sideBySide, editorOptions: context?.editorOptions });\n\t\t}\n\t});\n\n\t// partial, renderer-side API command to open diff editor\n\t// complements https://github.com/microsoft/vscode/blob/2b164efb0e6a5de3826bff62683eaeafe032284f/src/vs/workbench/api/common/extHostApiCommands.ts#L397\n\tCommandsRegistry.registerCommand({\n\t\tid: 'vscode.diff',\n\t\thandler: (accessor, left, right, label) => {\n\t\t\taccessor.get(ICommandService).executeCommand(API_OPEN_DIFF_EDITOR_COMMAND_ID, left, right, label);\n\t\t},\n\t\tmetadata: {\n\t\t\tdescription: 'Opens the provided resources in the diff editor to compare their contents.',\n\t\t\targs: [\n\t\t\t\t{ name: 'left', description: 'Left-hand side resource of the diff editor' },\n\t\t\t\t{ name: 'right', description: 'Right-hand side resource of the diff editor' },\n\t\t\t\t{ name: 'title', description: 'Human readable title for the diff editor' },\n\t\t\t]\n\t\t}\n\t});\n\n\tCommandsRegistry.registerCommand(API_OPEN_DIFF_EDITOR_COMMAND_ID, async function (accessor: ServicesAccessor, originalResource: UriComponents, modifiedResource: UriComponents, labelAndOrDescription?: string | { label: string; description: string }, columnAndOptions?: [EditorGroupColumn?, ITextEditorOptions?], context?: IOpenEvent<unknown>) {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst [columnArg, optionsArg] = columnAndOptions ?? [];\n\t\tconst [options, column] = mixinContext(context, optionsArg, columnArg);\n\n\t\tlet label: string | undefined = undefined;\n\t\tlet description: string | undefined = undefined;\n\t\tif (typeof labelAndOrDescription === 'string') {\n\t\t\tlabel = labelAndOrDescription;\n\t\t} else if (labelAndOrDescription) {\n\t\t\tlabel = labelAndOrDescription.label;\n\t\t\tdescription = labelAndOrDescription.description;\n\t\t}\n\n\t\tawait editorService.openEditor({\n\t\t\toriginal: { resource: URI.from(originalResource, true) },\n\t\t\tmodified: { resource: URI.from(modifiedResource, true) },\n\t\t\tlabel,\n\t\t\tdescription,\n\t\t\toptions\n\t\t}, columnToEditorGroup(editorGroupsService, configurationService, column));\n\t});\n\n\tCommandsRegistry.registerCommand(API_OPEN_WITH_EDITOR_COMMAND_ID, async (accessor: ServicesAccessor, resource: UriComponents, id: string, columnAndOptions?: [EditorGroupColumn?, ITextEditorOptions?]) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst [columnArg, optionsArg] = columnAndOptions ?? [];\n\n\t\tawait editorService.openEditor({ resource: URI.from(resource, true), options: { ...optionsArg, pinned: true, override: id } }, columnToEditorGroup(editorGroupsService, configurationService, columnArg));\n\t});\n\n\t// partial, renderer-side API command to open diff editor\n\t// complements https://github.com/microsoft/vscode/blob/2b164efb0e6a5de3826bff62683eaeafe032284f/src/vs/workbench/api/common/extHostApiCommands.ts#L397\n\tCommandsRegistry.registerCommand({\n\t\tid: 'vscode.changes',\n\t\thandler: (accessor, title: string, resources: [UriComponents, UriComponents?, UriComponents?][]) => {\n\t\t\taccessor.get(ICommandService).executeCommand('_workbench.changes', title, resources);\n\t\t},\n\t\tmetadata: {\n\t\t\tdescription: 'Opens a list of resources in the changes editor to compare their contents.',\n\t\t\targs: [\n\t\t\t\t{ name: 'title', description: 'Human readable title for the diff editor' },\n\t\t\t\t{ name: 'resources', description: 'List of resources to open in the changes editor' }\n\t\t\t]\n\t\t}\n\t});\n\n\tCommandsRegistry.registerCommand('_workbench.changes', async (accessor: ServicesAccessor, title: string, resources: [UriComponents, UriComponents?, UriComponents?][]) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tconst editor: (IResourceDiffEditorInput & { resource: URI })[] = [];\n\t\tfor (const [label, original, modified] of resources) {\n\t\t\teditor.push({\n\t\t\t\tresource: URI.revive(label),\n\t\t\t\toriginal: { resource: URI.revive(original) },\n\t\t\t\tmodified: { resource: URI.revive(modified) },\n\t\t\t});\n\t\t}\n\n\t\tawait editorService.openEditor({ resources: editor, label: title });\n\t});\n\n\tCommandsRegistry.registerCommand('_workbench.openMultiDiffEditor', async (accessor: ServicesAccessor, options: OpenMultiFileDiffEditorOptions) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tawait editorService.openEditor({\n\t\t\tmultiDiffSource: options.multiDiffSourceUri ? URI.revive(options.multiDiffSourceUri) : undefined,\n\t\t\tresources: options.resources?.map(r => ({ original: { resource: URI.revive(r.originalUri) }, modified: { resource: URI.revive(r.modifiedUri) } })),\n\t\t\tlabel: options.title,\n\t\t});\n\t});\n}\n\ninterface OpenMultiFileDiffEditorOptions {\n\ttitle: string;\n\tmultiDiffSourceUri?: UriComponents;\n\tresources?: { originalUri: UriComponents; modifiedUri: UriComponents }[];\n}\n\nfunction registerOpenEditorAtIndexCommands(): void {\n\tconst openEditorAtIndex: ICommandHandler = (accessor: ServicesAccessor, editorIndex: number): void => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst activeEditorPane = editorService.activeEditorPane;\n\t\tif (activeEditorPane) {\n\t\t\tconst editor = activeEditorPane.group.getEditorByIndex(editorIndex);\n\t\t\tif (editor) {\n\t\t\t\teditorService.openEditor(editor);\n\t\t\t}\n\t\t}\n\t};\n\n\t// This command takes in the editor index number to open as an argument\n\tCommandsRegistry.registerCommand({\n\t\tid: OPEN_EDITOR_AT_INDEX_COMMAND_ID,\n\t\thandler: openEditorAtIndex\n\t});\n\n\t// Keybindings to focus a specific index in the tab folder if tabs are enabled\n\tfor (let i = 0; i < 9; i++) {\n\t\tconst editorIndex = i;\n\t\tconst visibleIndex = i + 1;\n\n\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\tid: OPEN_EDITOR_AT_INDEX_COMMAND_ID + visibleIndex,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: undefined,\n\t\t\tprimary: KeyMod.Alt | toKeyCode(visibleIndex),\n\t\t\tmac: { primary: KeyMod.WinCtrl | toKeyCode(visibleIndex) },\n\t\t\thandler: accessor => openEditorAtIndex(accessor, editorIndex)\n\t\t});\n\t}\n\n\tfunction toKeyCode(index: number): KeyCode {\n\t\tswitch (index) {\n\t\t\tcase 0: return KeyCode.Digit0;\n\t\t\tcase 1: return KeyCode.Digit1;\n\t\t\tcase 2: return KeyCode.Digit2;\n\t\t\tcase 3: return KeyCode.Digit3;\n\t\t\tcase 4: return KeyCode.Digit4;\n\t\t\tcase 5: return KeyCode.Digit5;\n\t\t\tcase 6: return KeyCode.Digit6;\n\t\t\tcase 7: return KeyCode.Digit7;\n\t\t\tcase 8: return KeyCode.Digit8;\n\t\t\tcase 9: return KeyCode.Digit9;\n\t\t}\n\n\t\tthrow new Error('invalid index');\n\t}\n}\n\nfunction registerFocusEditorGroupAtIndexCommands(): void {\n\n\t// Keybindings to focus a specific group (2-8) in the editor area\n\tfor (let groupIndex = 1; groupIndex < 8; groupIndex++) {\n\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\tid: toCommandId(groupIndex),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: undefined,\n\t\t\tprimary: KeyMod.CtrlCmd | toKeyCode(groupIndex),\n\t\t\thandler: accessor => {\n\t\t\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\t\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\t\t\t// To keep backwards compatibility (pre-grid), allow to focus a group\n\t\t\t\t// that does not exist as long as it is the next group after the last\n\t\t\t\t// opened group. Otherwise we return.\n\t\t\t\tif (groupIndex > editorGroupsService.count) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Group exists: just focus\n\t\t\t\tconst groups = editorGroupsService.getGroups(GroupsOrder.GRID_APPEARANCE);\n\t\t\t\tif (groups[groupIndex]) {\n\t\t\t\t\treturn groups[groupIndex].focus();\n\t\t\t\t}\n\n\t\t\t\t// Group does not exist: create new by splitting the active one of the last group\n\t\t\t\tconst direction = preferredSideBySideGroupDirection(configurationService);\n\t\t\t\tconst lastGroup = editorGroupsService.findGroup({ location: GroupLocation.LAST });\n\t\t\t\tif (!lastGroup) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst newGroup = editorGroupsService.addGroup(lastGroup, direction);\n\n\t\t\t\t// Focus\n\t\t\t\tnewGroup.focus();\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction toCommandId(index: number): string {\n\t\tswitch (index) {\n\t\t\tcase 1: return 'workbench.action.focusSecondEditorGroup';\n\t\t\tcase 2: return 'workbench.action.focusThirdEditorGroup';\n\t\t\tcase 3: return 'workbench.action.focusFourthEditorGroup';\n\t\t\tcase 4: return 'workbench.action.focusFifthEditorGroup';\n\t\t\tcase 5: return 'workbench.action.focusSixthEditorGroup';\n\t\t\tcase 6: return 'workbench.action.focusSeventhEditorGroup';\n\t\t\tcase 7: return 'workbench.action.focusEighthEditorGroup';\n\t\t}\n\n\t\tthrow new Error('Invalid index');\n\t}\n\n\tfunction toKeyCode(index: number): KeyCode {\n\t\tswitch (index) {\n\t\t\tcase 1: return KeyCode.Digit2;\n\t\t\tcase 2: return KeyCode.Digit3;\n\t\t\tcase 3: return KeyCode.Digit4;\n\t\t\tcase 4: return KeyCode.Digit5;\n\t\t\tcase 5: return KeyCode.Digit6;\n\t\t\tcase 6: return KeyCode.Digit7;\n\t\t\tcase 7: return KeyCode.Digit8;\n\t\t}\n\n\t\tthrow new Error('Invalid index');\n\t}\n}\n\nexport function splitEditor(editorGroupsService: IEditorGroupsService, direction: GroupDirection, resolvedContext: IResolvedEditorCommandsContext): void {\n\tif (!resolvedContext.groupedEditors.length) {\n\t\treturn;\n\t}\n\n\t// Only support splitting from one source group\n\tconst { group, editors } = resolvedContext.groupedEditors[0];\n\tconst preserveFocus = resolvedContext.preserveFocus;\n\tconst newGroup = editorGroupsService.addGroup(group, direction);\n\n\tfor (const editorToCopy of editors) {\n\t\t// Split editor (if it can be split)\n\t\tif (editorToCopy && !editorToCopy.hasCapability(EditorInputCapabilities.Singleton)) {\n\t\t\tgroup.copyEditor(editorToCopy, newGroup, { preserveFocus });\n\t\t}\n\t}\n\n\t// Focus\n\tnewGroup.focus();\n}\n\nfunction registerSplitEditorCommands() {\n\t[\n\t\t{ id: SPLIT_EDITOR_UP, direction: GroupDirection.UP },\n\t\t{ id: SPLIT_EDITOR_DOWN, direction: GroupDirection.DOWN },\n\t\t{ id: SPLIT_EDITOR_LEFT, direction: GroupDirection.LEFT },\n\t\t{ id: SPLIT_EDITOR_RIGHT, direction: GroupDirection.RIGHT }\n\t].forEach(({ id, direction }) => {\n\t\tCommandsRegistry.registerCommand(id, function (accessor, ...args) {\n\t\t\tconst resolvedContext = resolveCommandsContext(args, accessor.get(IEditorService), accessor.get(IEditorGroupsService), accessor.get(IListService));\n\t\t\tsplitEditor(accessor.get(IEditorGroupsService), direction, resolvedContext);\n\t\t});\n\t});\n}\n\nfunction registerCloseEditorCommands() {\n\n\t// A special handler for \"Close Editor\" depending on context\n\t// - keybindining: do not close sticky editors, rather open the next non-sticky editor\n\t// - menu: always close editor, even sticky ones\n\tfunction closeEditorHandler(accessor: ServicesAccessor, forceCloseStickyEditors: boolean, ...args: unknown[]): Promise<unknown> {\n\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tlet keepStickyEditors: boolean | undefined = undefined;\n\t\tif (forceCloseStickyEditors) {\n\t\t\tkeepStickyEditors = false; // explicitly close sticky editors\n\t\t} else if (args.length) {\n\t\t\tkeepStickyEditors = false; // we have a context, as such this command was used e.g. from the tab context menu\n\t\t} else {\n\t\t\tkeepStickyEditors = editorGroupsService.partOptions.preventPinnedEditorClose === 'keyboard' || editorGroupsService.partOptions.preventPinnedEditorClose === 'keyboardAndMouse'; // respect setting otherwise\n\t\t}\n\n\t\t// Skip over sticky editor and select next if we are configured to do so\n\t\tif (keepStickyEditors) {\n\t\t\tconst activeGroup = editorGroupsService.activeGroup;\n\t\t\tconst activeEditor = activeGroup.activeEditor;\n\n\t\t\tif (activeEditor && activeGroup.isSticky(activeEditor)) {\n\n\t\t\t\t// Open next recently active in same group\n\t\t\t\tconst nextNonStickyEditorInGroup = activeGroup.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE, { excludeSticky: true })[0];\n\t\t\t\tif (nextNonStickyEditorInGroup) {\n\t\t\t\t\treturn activeGroup.openEditor(nextNonStickyEditorInGroup);\n\t\t\t\t}\n\n\t\t\t\t// Open next recently active across all groups\n\t\t\t\tconst nextNonStickyEditorInAllGroups = editorService.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE, { excludeSticky: true })[0];\n\t\t\t\tif (nextNonStickyEditorInAllGroups) {\n\t\t\t\t\treturn Promise.resolve(editorGroupsService.getGroup(nextNonStickyEditorInAllGroups.groupId)?.openEditor(nextNonStickyEditorInAllGroups.editor));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// With context: proceed to close editors as instructed\n\t\tconst resolvedContext = resolveCommandsContext(args, accessor.get(IEditorService), accessor.get(IEditorGroupsService), accessor.get(IListService));\n\t\tconst preserveFocus = resolvedContext.preserveFocus;\n\n\t\treturn Promise.all(resolvedContext.groupedEditors.map(async ({ group, editors }) => {\n\t\t\tconst editorsToClose = editors.filter(editor => !keepStickyEditors || !group.isSticky(editor));\n\t\t\tawait group.closeEditors(editorsToClose, { preserveFocus });\n\t\t}));\n\t}\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: CLOSE_EDITOR_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyW,\n\t\twin: { primary: KeyMod.CtrlCmd | KeyCode.F4, secondary: [KeyMod.CtrlCmd | KeyCode.KeyW] },\n\t\thandler: (accessor, ...args: unknown[]) => {\n\t\t\treturn closeEditorHandler(accessor, false, ...args);\n\t\t}\n\t});\n\n\tCommandsRegistry.registerCommand(CLOSE_PINNED_EDITOR_COMMAND_ID, (accessor, ...args: unknown[]) => {\n\t\treturn closeEditorHandler(accessor, true /* force close pinned editors */, ...args);\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: CLOSE_EDITORS_IN_GROUP_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyW),\n\t\thandler: (accessor, ...args: unknown[]) => {\n\t\t\tconst resolvedContext = resolveCommandsContext(args, accessor.get(IEditorService), accessor.get(IEditorGroupsService), accessor.get(IListService));\n\t\t\treturn Promise.all(resolvedContext.groupedEditors.map(async ({ group }) => {\n\t\t\t\tawait group.closeAllEditors({ excludeSticky: true });\n\t\t\t}));\n\t\t}\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: CLOSE_EDITOR_GROUP_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: ContextKeyExpr.and(ActiveEditorGroupEmptyContext, MultipleEditorGroupsContext),\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyW,\n\t\twin: { primary: KeyMod.CtrlCmd | KeyCode.F4, secondary: [KeyMod.CtrlCmd | KeyCode.KeyW] },\n\t\thandler: (accessor, ...args: unknown[]) => {\n\t\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\t\tconst commandsContext = resolveCommandsContext(args, accessor.get(IEditorService), editorGroupsService, accessor.get(IListService));\n\n\t\t\tif (commandsContext.groupedEditors.length) {\n\t\t\t\teditorGroupsService.removeGroup(commandsContext.groupedEditors[0].group);\n\t\t\t}\n\t\t}\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: CLOSE_SAVED_EDITORS_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyU),\n\t\thandler: (accessor, ...args: unknown[]) => {\n\t\t\tconst resolvedContext = resolveCommandsContext(args, accessor.get(IEditorService), accessor.get(IEditorGroupsService), accessor.get(IListService));\n\t\t\treturn Promise.all(resolvedContext.groupedEditors.map(async ({ group }) => {\n\t\t\t\tawait group.closeEditors({ savedOnly: true, excludeSticky: true }, { preserveFocus: resolvedContext.preserveFocus });\n\t\t\t}));\n\t\t}\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: CLOSE_OTHER_EDITORS_IN_GROUP_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: undefined,\n\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyT },\n\t\thandler: (accessor, ...args: unknown[]) => {\n\t\t\tconst resolvedContext = resolveCommandsContext(args, accessor.get(IEditorService), accessor.get(IEditorGroupsService), accessor.get(IListService));\n\n\t\t\treturn Promise.all(resolvedContext.groupedEditors.map(async ({ group, editors }) => {\n\t\t\t\tconst editorsToClose = group.getEditors(EditorsOrder.SEQUENTIAL, { excludeSticky: true }).filter(editor => !editors.includes(editor));\n\n\t\t\t\tfor (const editorToKeep of editors) {\n\t\t\t\t\tif (editorToKeep) {\n\t\t\t\t\t\tgroup.pinEditor(editorToKeep);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tawait group.closeEditors(editorsToClose, { preserveFocus: resolvedContext.preserveFocus });\n\t\t\t}));\n\t\t}\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: CLOSE_EDITORS_TO_THE_RIGHT_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: undefined,\n\t\thandler: async (accessor, ...args: unknown[]) => {\n\t\t\tconst resolvedContext = resolveCommandsContext(args, accessor.get(IEditorService), accessor.get(IEditorGroupsService), accessor.get(IListService));\n\t\t\tif (resolvedContext.groupedEditors.length) {\n\t\t\t\tconst { group, editors } = resolvedContext.groupedEditors[0];\n\t\t\t\tif (group.activeEditor) {\n\t\t\t\t\tgroup.pinEditor(group.activeEditor);\n\t\t\t\t}\n\n\t\t\t\tawait group.closeEditors({ direction: CloseDirection.RIGHT, except: editors[0], excludeSticky: true }, { preserveFocus: resolvedContext.preserveFocus });\n\t\t\t}\n\t\t}\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: REOPEN_WITH_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: undefined,\n\t\thandler: async (accessor, ...args: unknown[]) => {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst editorResolverService = accessor.get(IEditorResolverService);\n\t\t\tconst telemetryService = accessor.get(ITelemetryService);\n\n\t\t\tconst resolvedContext = resolveCommandsContext(args, editorService, accessor.get(IEditorGroupsService), accessor.get(IListService));\n\t\t\tconst editorReplacements = new Map<IEditorGroup, IEditorReplacement[]>();\n\n\t\t\tfor (const { group, editors } of resolvedContext.groupedEditors) {\n\t\t\t\tfor (const editor of editors) {\n\t\t\t\t\tconst untypedEditor = editor.toUntyped();\n\t\t\t\t\tif (!untypedEditor) {\n\t\t\t\t\t\treturn; // Resolver can only resolve untyped editors\n\t\t\t\t\t}\n\n\t\t\t\t\tuntypedEditor.options = { ...editorService.activeEditorPane?.options, override: EditorResolution.PICK };\n\t\t\t\t\tconst resolvedEditor = await editorResolverService.resolveEditor(untypedEditor, group);\n\t\t\t\t\tif (!isEditorInputWithOptionsAndGroup(resolvedEditor)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet editorReplacementsInGroup = editorReplacements.get(group);\n\t\t\t\t\tif (!editorReplacementsInGroup) {\n\t\t\t\t\t\teditorReplacementsInGroup = [];\n\t\t\t\t\t\teditorReplacements.set(group, editorReplacementsInGroup);\n\t\t\t\t\t}\n\n\t\t\t\t\teditorReplacementsInGroup.push({\n\t\t\t\t\t\teditor: editor,\n\t\t\t\t\t\treplacement: resolvedEditor.editor,\n\t\t\t\t\t\tforceReplaceDirty: editor.resource?.scheme === Schemas.untitled,\n\t\t\t\t\t\toptions: resolvedEditor.options\n\t\t\t\t\t});\n\n\t\t\t\t\t// Telemetry\n\t\t\t\t\ttype WorkbenchEditorReopenClassification = {\n\t\t\t\t\t\towner: 'rebornix';\n\t\t\t\t\t\tcomment: 'Identify how a document is reopened';\n\t\t\t\t\t\tscheme: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'File system provider scheme for the resource' };\n\t\t\t\t\t\text: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'File extension for the resource' };\n\t\t\t\t\t\tfrom: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The editor view type the resource is switched from' };\n\t\t\t\t\t\tto: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The editor view type the resource is switched to' };\n\t\t\t\t\t};\n\n\t\t\t\t\ttype WorkbenchEditorReopenEvent = {\n\t\t\t\t\t\tscheme: string;\n\t\t\t\t\t\text: string;\n\t\t\t\t\t\tfrom: string;\n\t\t\t\t\t\tto: string;\n\t\t\t\t\t};\n\n\t\t\t\t\ttelemetryService.publicLog2<WorkbenchEditorReopenEvent, WorkbenchEditorReopenClassification>('workbenchEditorReopen', {\n\t\t\t\t\t\tscheme: editor.resource?.scheme ?? '',\n\t\t\t\t\t\text: editor.resource ? extname(editor.resource) : '',\n\t\t\t\t\t\tfrom: editor.editorId ?? '',\n\t\t\t\t\t\tto: resolvedEditor.editor.editorId ?? ''\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Replace editor with resolved one and make active\n\t\t\tfor (const [group, replacements] of editorReplacements) {\n\t\t\t\tawait group.replaceEditors(replacements);\n\t\t\t\tawait group.openEditor(replacements[0].replacement);\n\t\t\t}\n\t\t}\n\t});\n\n\tCommandsRegistry.registerCommand(CLOSE_EDITORS_AND_GROUP_COMMAND_ID, async (accessor: ServicesAccessor, ...args: unknown[]) => {\n\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\n\t\tconst resolvedContext = resolveCommandsContext(args, accessor.get(IEditorService), editorGroupsService, accessor.get(IListService));\n\t\tif (resolvedContext.groupedEditors.length) {\n\t\t\tconst { group } = resolvedContext.groupedEditors[0];\n\t\t\tawait group.closeAllEditors();\n\n\t\t\tif (group.count === 0 && editorGroupsService.getGroup(group.id) /* could be gone by now */) {\n\t\t\t\teditorGroupsService.removeGroup(group); // only remove group if it is now empty\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction registerFocusEditorGroupWihoutWrapCommands(): void {\n\n\tconst commands = [\n\t\t{\n\t\t\tid: FOCUS_LEFT_GROUP_WITHOUT_WRAP_COMMAND_ID,\n\t\t\tdirection: GroupDirection.LEFT\n\t\t},\n\t\t{\n\t\t\tid: FOCUS_RIGHT_GROUP_WITHOUT_WRAP_COMMAND_ID,\n\t\t\tdirection: GroupDirection.RIGHT\n\t\t},\n\t\t{\n\t\t\tid: FOCUS_ABOVE_GROUP_WITHOUT_WRAP_COMMAND_ID,\n\t\t\tdirection: GroupDirection.UP,\n\t\t},\n\t\t{\n\t\t\tid: FOCUS_BELOW_GROUP_WITHOUT_WRAP_COMMAND_ID,\n\t\t\tdirection: GroupDirection.DOWN\n\t\t}\n\t];\n\n\tfor (const command of commands) {\n\t\tCommandsRegistry.registerCommand(command.id, async (accessor: ServicesAccessor) => {\n\t\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\n\t\t\tconst group = editorGroupsService.findGroup({ direction: command.direction }, editorGroupsService.activeGroup, false);\n\t\t\tgroup?.focus();\n\t\t});\n\t}\n}\n\nfunction registerSplitEditorInGroupCommands(): void {\n\n\tasync function splitEditorInGroup(accessor: ServicesAccessor, resolvedContext: IResolvedEditorCommandsContext): Promise<void> {\n\t\tconst instantiationService = accessor.get(IInstantiationService);\n\n\t\tif (!resolvedContext.groupedEditors.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { group, editors } = resolvedContext.groupedEditors[0];\n\t\tconst editor = editors[0];\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait group.replaceEditors([{\n\t\t\teditor,\n\t\t\treplacement: instantiationService.createInstance(SideBySideEditorInput, undefined, undefined, editor, editor),\n\t\t\tforceReplaceDirty: true\n\t\t}]);\n\t}\n\n\tregisterAction2(class extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: SPLIT_EDITOR_IN_GROUP,\n\t\t\t\ttitle: localize2('splitEditorInGroup', 'Split Editor in Group'),\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tprecondition: ActiveEditorCanSplitInGroupContext,\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\twhen: ActiveEditorCanSplitInGroupContext,\n\t\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Backslash)\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\trun(accessor: ServicesAccessor, ...args: unknown[]): Promise<void> {\n\t\t\treturn splitEditorInGroup(accessor, resolveCommandsContext(args, accessor.get(IEditorService), accessor.get(IEditorGroupsService), accessor.get(IListService)));\n\t\t}\n\t});\n\n\tasync function joinEditorInGroup(resolvedContext: IResolvedEditorCommandsContext): Promise<void> {\n\t\tif (!resolvedContext.groupedEditors.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { group, editors } = resolvedContext.groupedEditors[0];\n\t\tconst editor = editors[0];\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!(editor instanceof SideBySideEditorInput)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet options: IEditorOptions | undefined = undefined;\n\t\tconst activeEditorPane = group.activeEditorPane;\n\t\tif (activeEditorPane instanceof SideBySideEditor && group.activeEditor === editor) {\n\t\t\tfor (const pane of [activeEditorPane.getPrimaryEditorPane(), activeEditorPane.getSecondaryEditorPane()]) {\n\t\t\t\tif (pane?.hasFocus()) {\n\t\t\t\t\toptions = { viewState: pane.getViewState() };\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tawait group.replaceEditors([{\n\t\t\teditor,\n\t\t\treplacement: editor.primary,\n\t\t\toptions\n\t\t}]);\n\t}\n\n\tregisterAction2(class extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: JOIN_EDITOR_IN_GROUP,\n\t\t\t\ttitle: localize2('joinEditorInGroup', 'Join Editor in Group'),\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tprecondition: SideBySideEditorActiveContext,\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\twhen: SideBySideEditorActiveContext,\n\t\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Backslash)\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\trun(accessor: ServicesAccessor, ...args: unknown[]): Promise<void> {\n\t\t\treturn joinEditorInGroup(resolveCommandsContext(args, accessor.get(IEditorService), accessor.get(IEditorGroupsService), accessor.get(IListService)));\n\t\t}\n\t});\n\n\tregisterAction2(class extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: TOGGLE_SPLIT_EDITOR_IN_GROUP,\n\t\t\t\ttitle: localize2('toggleJoinEditorInGroup', 'Toggle Split Editor in Group'),\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tprecondition: ContextKeyExpr.or(ActiveEditorCanSplitInGroupContext, SideBySideEditorActiveContext),\n\t\t\t\tf1: true\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor, ...args: unknown[]): Promise<void> {\n\t\t\tconst resolvedContext = resolveCommandsContext(args, accessor.get(IEditorService), accessor.get(IEditorGroupsService), accessor.get(IListService));\n\t\t\tif (!resolvedContext.groupedEditors.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { editors } = resolvedContext.groupedEditors[0];\n\n\t\t\tif (editors[0] instanceof SideBySideEditorInput) {\n\t\t\t\tawait joinEditorInGroup(resolvedContext);\n\t\t\t} else if (editors[0]) {\n\t\t\t\tawait splitEditorInGroup(accessor, resolvedContext);\n\t\t\t}\n\t\t}\n\t});\n\n\tregisterAction2(class extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: TOGGLE_SPLIT_EDITOR_IN_GROUP_LAYOUT,\n\t\t\t\ttitle: localize2('toggleSplitEditorInGroupLayout', 'Toggle Layout of Split Editor in Group'),\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tprecondition: SideBySideEditorActiveContext,\n\t\t\t\tf1: true\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\t\tconst currentSetting = configurationService.getValue<unknown>(SideBySideEditor.SIDE_BY_SIDE_LAYOUT_SETTING);\n\n\t\t\tlet newSetting: 'vertical' | 'horizontal';\n\t\t\tif (currentSetting !== 'horizontal') {\n\t\t\t\tnewSetting = 'horizontal';\n\t\t\t} else {\n\t\t\t\tnewSetting = 'vertical';\n\t\t\t}\n\n\t\t\treturn configurationService.updateValue(SideBySideEditor.SIDE_BY_SIDE_LAYOUT_SETTING, newSetting);\n\t\t}\n\t});\n}\n\nfunction registerFocusSideEditorsCommands(): void {\n\n\tregisterAction2(class extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: FOCUS_FIRST_SIDE_EDITOR,\n\t\t\t\ttitle: localize2('focusLeftSideEditor', 'Focus First Side in Active Editor'),\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tprecondition: ContextKeyExpr.or(SideBySideEditorActiveContext, TextCompareEditorActiveContext),\n\t\t\t\tf1: true\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst commandService = accessor.get(ICommandService);\n\n\t\t\tconst activeEditorPane = editorService.activeEditorPane;\n\t\t\tif (activeEditorPane instanceof SideBySideEditor) {\n\t\t\t\tactiveEditorPane.getSecondaryEditorPane()?.focus();\n\t\t\t} else if (activeEditorPane instanceof TextDiffEditor) {\n\t\t\t\tawait commandService.executeCommand(DIFF_FOCUS_SECONDARY_SIDE);\n\t\t\t}\n\t\t}\n\t});\n\n\tregisterAction2(class extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: FOCUS_SECOND_SIDE_EDITOR,\n\t\t\t\ttitle: localize2('focusRightSideEditor', 'Focus Second Side in Active Editor'),\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tprecondition: ContextKeyExpr.or(SideBySideEditorActiveContext, TextCompareEditorActiveContext),\n\t\t\t\tf1: true\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst commandService = accessor.get(ICommandService);\n\n\t\t\tconst activeEditorPane = editorService.activeEditorPane;\n\t\t\tif (activeEditorPane instanceof SideBySideEditor) {\n\t\t\t\tactiveEditorPane.getPrimaryEditorPane()?.focus();\n\t\t\t} else if (activeEditorPane instanceof TextDiffEditor) {\n\t\t\t\tawait commandService.executeCommand(DIFF_FOCUS_PRIMARY_SIDE);\n\t\t\t}\n\t\t}\n\t});\n\n\tregisterAction2(class extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: FOCUS_OTHER_SIDE_EDITOR,\n\t\t\t\ttitle: localize2('focusOtherSideEditor', 'Focus Other Side in Active Editor'),\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tprecondition: ContextKeyExpr.or(SideBySideEditorActiveContext, TextCompareEditorActiveContext),\n\t\t\t\tf1: true\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst commandService = accessor.get(ICommandService);\n\n\t\t\tconst activeEditorPane = editorService.activeEditorPane;\n\t\t\tif (activeEditorPane instanceof SideBySideEditor) {\n\t\t\t\tif (activeEditorPane.getPrimaryEditorPane()?.hasFocus()) {\n\t\t\t\t\tactiveEditorPane.getSecondaryEditorPane()?.focus();\n\t\t\t\t} else {\n\t\t\t\t\tactiveEditorPane.getPrimaryEditorPane()?.focus();\n\t\t\t\t}\n\t\t\t} else if (activeEditorPane instanceof TextDiffEditor) {\n\t\t\t\tawait commandService.executeCommand(DIFF_FOCUS_OTHER_SIDE);\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction registerOtherEditorCommands(): void {\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: KEEP_EDITOR_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.Enter),\n\t\thandler: async (accessor, ...args: unknown[]) => {\n\t\t\tconst resolvedContext = resolveCommandsContext(args, accessor.get(IEditorService), accessor.get(IEditorGroupsService), accessor.get(IListService));\n\t\t\tfor (const { group, editors } of resolvedContext.groupedEditors) {\n\t\t\t\tfor (const editor of editors) {\n\t\t\t\t\tgroup.pinEditor(editor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tCommandsRegistry.registerCommand({\n\t\tid: TOGGLE_KEEP_EDITORS_COMMAND_ID,\n\t\thandler: accessor => {\n\t\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\t\tconst currentSetting = configurationService.getValue('workbench.editor.enablePreview');\n\t\t\tconst newSetting = currentSetting === true ? false : true;\n\t\t\tconfigurationService.updateValue('workbench.editor.enablePreview', newSetting);\n\t\t}\n\t});\n\n\tfunction setEditorGroupLock(accessor: ServicesAccessor, locked: boolean | undefined, ...args: unknown[]): void {\n\t\tconst resolvedContext = resolveCommandsContext(args, accessor.get(IEditorService), accessor.get(IEditorGroupsService), accessor.get(IListService));\n\t\tconst group = resolvedContext.groupedEditors[0]?.group;\n\t\tgroup?.lock(locked ?? !group.isLocked);\n\t}\n\n\tregisterAction2(class extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: TOGGLE_LOCK_GROUP_COMMAND_ID,\n\t\t\t\ttitle: localize2('toggleEditorGroupLock', 'Toggle Editor Group Lock'),\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tf1: true\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor, ...args: unknown[]): Promise<void> {\n\t\t\tsetEditorGroupLock(accessor, undefined, ...args);\n\t\t}\n\t});\n\n\tregisterAction2(class extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: LOCK_GROUP_COMMAND_ID,\n\t\t\t\ttitle: localize2('lockEditorGroup', 'Lock Editor Group'),\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tprecondition: ActiveEditorGroupLockedContext.toNegated(),\n\t\t\t\tf1: true\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor, ...args: unknown[]): Promise<void> {\n\t\t\tsetEditorGroupLock(accessor, true, ...args);\n\t\t}\n\t});\n\n\tregisterAction2(class extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: UNLOCK_GROUP_COMMAND_ID,\n\t\t\t\ttitle: localize2('unlockEditorGroup', 'Unlock Editor Group'),\n\t\t\t\tprecondition: ActiveEditorGroupLockedContext,\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tf1: true\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor, ...args: unknown[]): Promise<void> {\n\t\t\tsetEditorGroupLock(accessor, false, ...args);\n\t\t}\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: PIN_EDITOR_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: ActiveEditorStickyContext.toNegated(),\n\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.Shift | KeyCode.Enter),\n\t\thandler: async (accessor, ...args: unknown[]) => {\n\t\t\tconst resolvedContext = resolveCommandsContext(args, accessor.get(IEditorService), accessor.get(IEditorGroupsService), accessor.get(IListService));\n\t\t\tfor (const { group, editors } of resolvedContext.groupedEditors) {\n\t\t\t\tfor (const editor of editors) {\n\t\t\t\t\tgroup.stickEditor(editor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: DIFF_OPEN_SIDE,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: EditorContextKeys.inDiffEditor,\n\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.Shift | KeyCode.KeyO),\n\t\thandler: async accessor => {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\n\t\t\tconst activeEditor = editorService.activeEditor;\n\t\t\tconst activeTextEditorControl = editorService.activeTextEditorControl;\n\t\t\tif (!isDiffEditor(activeTextEditorControl) || !(activeEditor instanceof DiffEditorInput)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet editor: EditorInput | undefined;\n\t\t\tconst originalEditor = activeTextEditorControl.getOriginalEditor();\n\t\t\tif (originalEditor.hasTextFocus()) {\n\t\t\t\teditor = activeEditor.original;\n\t\t\t} else {\n\t\t\t\teditor = activeEditor.modified;\n\t\t\t}\n\n\t\t\treturn editorGroupsService.activeGroup.openEditor(editor);\n\t\t}\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: UNPIN_EDITOR_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: ActiveEditorStickyContext,\n\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.Shift | KeyCode.Enter),\n\t\thandler: async (accessor, ...args: unknown[]) => {\n\t\t\tconst resolvedContext = resolveCommandsContext(args, accessor.get(IEditorService), accessor.get(IEditorGroupsService), accessor.get(IListService));\n\t\t\tfor (const { group, editors } of resolvedContext.groupedEditors) {\n\t\t\t\tfor (const editor of editors) {\n\t\t\t\t\tgroup.unstickEditor(editor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: SHOW_EDITORS_IN_GROUP,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: undefined,\n\t\thandler: (accessor, ...args: unknown[]) => {\n\t\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\t\tconst commandsContext = resolveCommandsContext(args, accessor.get(IEditorService), editorGroupsService, accessor.get(IListService));\n\t\t\tconst group = commandsContext.groupedEditors[0]?.group;\n\t\t\tif (group) {\n\t\t\t\teditorGroupsService.activateGroup(group); // we need the group to be active\n\t\t\t}\n\n\t\t\treturn quickInputService.quickAccess.show(ActiveGroupEditorsByMostRecentlyUsedQuickAccess.PREFIX);\n\t\t}\n\t});\n}\n\nexport function setup(): void {\n\tregisterActiveEditorMoveCopyCommand();\n\tregisterEditorGroupsLayoutCommands();\n\tregisterDiffEditorCommands();\n\tregisterOpenEditorAPICommands();\n\tregisterOpenEditorAtIndexCommands();\n\tregisterCloseEditorCommands();\n\tregisterOtherEditorCommands();\n\tregisterSplitEditorInGroupCommands();\n\tregisterFocusSideEditorsCommands();\n\tregisterFocusEditorGroupAtIndexCommands();\n\tregisterSplitEditorCommands();\n\tregisterFocusEditorGroupWihoutWrapCommands();\n}\n"],
  "mappings": "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",
  "names": []
}
