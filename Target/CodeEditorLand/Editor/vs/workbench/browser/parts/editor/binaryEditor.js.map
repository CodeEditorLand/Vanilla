{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/editor/binaryEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from \"../../../../base/common/event.js\";\nimport { localize } from \"../../../../nls.js\";\nimport type { IEditorOptions } from \"../../../../platform/editor/common/editor.js\";\nimport { ByteSize } from \"../../../../platform/files/common/files.js\";\nimport { IStorageService } from \"../../../../platform/storage/common/storage.js\";\nimport type { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport type { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport { BinaryEditorModel } from \"../../../common/editor/binaryEditorModel.js\";\nimport type { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport type { IEditorGroup } from \"../../../services/editor/common/editorGroupsService.js\";\nimport {\n\tEditorPlaceholder,\n\ttype IEditorPlaceholderContents,\n} from \"./editorPlaceholder.js\";\n\nexport interface IOpenCallbacks {\n\topenInternal: (\n\t\tinput: EditorInput,\n\t\toptions: IEditorOptions | undefined,\n\t) => Promise<void>;\n}\n\n/*\n * This class is only intended to be subclassed and not instantiated.\n */\nexport abstract class BaseBinaryResourceEditor extends EditorPlaceholder {\n\tprivate readonly _onDidChangeMetadata = this._register(new Emitter<void>());\n\treadonly onDidChangeMetadata = this._onDidChangeMetadata.event;\n\n\tprivate readonly _onDidOpenInPlace = this._register(new Emitter<void>());\n\treadonly onDidOpenInPlace = this._onDidOpenInPlace.event;\n\n\tprivate metadata: string | undefined;\n\n\tconstructor(\n\t\tid: string,\n\t\tgroup: IEditorGroup,\n\t\tprivate readonly callbacks: IOpenCallbacks,\n\t\ttelemetryService: ITelemetryService,\n\t\tthemeService: IThemeService,\n\t\t@IStorageService storageService: IStorageService,\n\t) {\n\t\tsuper(id, group, telemetryService, themeService, storageService);\n\t}\n\n\toverride getTitle(): string {\n\t\treturn this.input\n\t\t\t? this.input.getName()\n\t\t\t: localize(\"binaryEditor\", \"Binary Viewer\");\n\t}\n\n\tprotected async getContents(\n\t\tinput: EditorInput,\n\t\toptions: IEditorOptions,\n\t): Promise<IEditorPlaceholderContents> {\n\t\tconst model = await input.resolve();\n\n\t\t// Assert Model instance\n\t\tif (!(model instanceof BinaryEditorModel)) {\n\t\t\tthrow new Error(\"Unable to open file as binary\");\n\t\t}\n\n\t\t// Update metadata\n\t\tconst size = model.getSize();\n\t\tthis.handleMetadataChanged(\n\t\t\ttypeof size === \"number\" ? ByteSize.formatSize(size) : \"\",\n\t\t);\n\n\t\treturn {\n\t\t\ticon: \"$(warning)\",\n\t\t\tlabel: localize(\n\t\t\t\t\"binaryError\",\n\t\t\t\t\"The file is not displayed in the text editor because it is either binary or uses an unsupported text encoding.\",\n\t\t\t),\n\t\t\tactions: [\n\t\t\t\t{\n\t\t\t\t\tlabel: localize(\"openAnyway\", \"Open Anyway\"),\n\t\t\t\t\trun: async () => {\n\t\t\t\t\t\t// Open in place\n\t\t\t\t\t\tawait this.callbacks.openInternal(input, options);\n\n\t\t\t\t\t\t// Signal to listeners that the binary editor has been opened in-place\n\t\t\t\t\t\tthis._onDidOpenInPlace.fire();\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t}\n\n\tprivate handleMetadataChanged(meta: string | undefined): void {\n\t\tthis.metadata = meta;\n\n\t\tthis._onDidChangeMetadata.fire();\n\t}\n\n\tgetMetadata(): string | undefined {\n\t\treturn this.metadata;\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,eAAe;AACxB,SAAS,gBAAgB;AAEzB,SAAS,gBAAgB;AACzB,SAAS,uBAAuB;AAGhC,SAAS,yBAAyB;AAGlC;AAAA,EACC;AAAA,OAEM;AAYA,IAAe,2BAAf,cAAgD,kBAAkB;AAAA,EASxE,YACC,IACA,OACiB,WACjB,kBACA,cACiB,gBAChB;AACD,UAAM,IAAI,OAAO,kBAAkB,cAAc,cAAc;AAL9C;AAAA,EAMlB;AAAA,EAhDD,OA8ByE;AAAA;AAAA;AAAA,EACvD,uBAAuB,KAAK,UAAU,IAAI,QAAc,CAAC;AAAA,EACjE,sBAAsB,KAAK,qBAAqB;AAAA,EAExC,oBAAoB,KAAK,UAAU,IAAI,QAAc,CAAC;AAAA,EAC9D,mBAAmB,KAAK,kBAAkB;AAAA,EAE3C;AAAA,EAaC,WAAmB;AAC3B,WAAO,KAAK,QACT,KAAK,MAAM,QAAQ,IACnB,SAAS,gBAAgB,eAAe;AAAA,EAC5C;AAAA,EAEA,MAAgB,YACf,OACA,SACsC;AACtC,UAAM,QAAQ,MAAM,MAAM,QAAQ;AAGlC,QAAI,EAAE,iBAAiB,oBAAoB;AAC1C,YAAM,IAAI,MAAM,+BAA+B;AAAA,IAChD;AAGA,UAAM,OAAO,MAAM,QAAQ;AAC3B,SAAK;AAAA,MACJ,OAAO,SAAS,WAAW,SAAS,WAAW,IAAI,IAAI;AAAA,IACxD;AAEA,WAAO;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,MACA,SAAS;AAAA,QACR;AAAA,UACC,OAAO,SAAS,cAAc,aAAa;AAAA,UAC3C,KAAK,mCAAY;AAEhB,kBAAM,KAAK,UAAU,aAAa,OAAO,OAAO;AAGhD,iBAAK,kBAAkB,KAAK;AAAA,UAC7B,GANK;AAAA,QAON;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,sBAAsB,MAAgC;AAC7D,SAAK,WAAW;AAEhB,SAAK,qBAAqB,KAAK;AAAA,EAChC;AAAA,EAEA,cAAkC;AACjC,WAAO,KAAK;AAAA,EACb;AACD;AAzEsB,2BAAf;AAAA,EAeJ;AAAA,GAfmB;",
  "names": []
}
