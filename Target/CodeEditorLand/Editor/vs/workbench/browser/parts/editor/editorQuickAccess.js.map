{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/editor/editorQuickAccess.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './media/editorquickaccess.css';\nimport { localize } from '../../../../nls.js';\nimport { IQuickPickSeparator, quickPickItemScorerAccessor, IQuickPickItemWithResource, IQuickPick } from '../../../../platform/quickinput/common/quickInput.js';\nimport { PickerQuickAccessProvider, IPickerQuickAccessItem, TriggerAction } from '../../../../platform/quickinput/browser/pickerQuickAccess.js';\nimport { IEditorGroupsService, GroupsOrder } from '../../../services/editor/common/editorGroupsService.js';\nimport { EditorsOrder, IEditorIdentifier, EditorResourceAccessor, SideBySideEditor, GroupIdentifier } from '../../../common/editor.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IModelService } from '../../../../editor/common/services/model.js';\nimport { ILanguageService } from '../../../../editor/common/languages/language.js';\nimport { getIconClasses } from '../../../../editor/common/services/getIconClasses.js';\nimport { prepareQuery, scoreItemFuzzy, compareItemsByFuzzyScore, FuzzyScorerCache } from '../../../../base/common/fuzzyScorer.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { IDisposable } from '../../../../base/common/lifecycle.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\n\ninterface IEditorQuickPickItem extends IQuickPickItemWithResource, IPickerQuickAccessItem {\n\tgroupId: GroupIdentifier;\n}\n\nexport abstract class BaseEditorQuickAccessProvider extends PickerQuickAccessProvider<IEditorQuickPickItem> {\n\n\tprivate readonly pickState = new class {\n\n\t\tscorerCache: FuzzyScorerCache = Object.create(null);\n\t\tisQuickNavigating: boolean | undefined = undefined;\n\n\t\treset(isQuickNavigating: boolean): void {\n\n\t\t\t// Caches\n\t\t\tif (!isQuickNavigating) {\n\t\t\t\tthis.scorerCache = Object.create(null);\n\t\t\t}\n\n\t\t\t// Other\n\t\t\tthis.isQuickNavigating = isQuickNavigating;\n\t\t}\n\t};\n\n\tconstructor(\n\t\tprefix: string,\n\t\t@IEditorGroupsService protected readonly editorGroupService: IEditorGroupsService,\n\t\t@IEditorService protected readonly editorService: IEditorService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@ILanguageService private readonly languageService: ILanguageService\n\t) {\n\t\tsuper(prefix,\n\t\t\t{\n\t\t\t\tcanAcceptInBackground: true,\n\t\t\t\tnoResultsPick: {\n\t\t\t\t\tlabel: localize('noViewResults', \"No matching editors\"),\n\t\t\t\t\tgroupId: -1\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\toverride provide(picker: IQuickPick<IEditorQuickPickItem, { useSeparators: true }>, token: CancellationToken): IDisposable {\n\n\t\t// Reset the pick state for this run\n\t\tthis.pickState.reset(!!picker.quickNavigate);\n\n\t\t// Start picker\n\t\treturn super.provide(picker, token);\n\t}\n\n\tprotected _getPicks(filter: string): Array<IEditorQuickPickItem | IQuickPickSeparator> {\n\t\tconst query = prepareQuery(filter);\n\n\t\t// Filtering\n\t\tconst filteredEditorEntries = this.doGetEditorPickItems().filter(entry => {\n\t\t\tif (!query.normalized) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Score on label and description\n\t\t\tconst itemScore = scoreItemFuzzy(entry, query, true, quickPickItemScorerAccessor, this.pickState.scorerCache);\n\t\t\tif (!itemScore.score) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Apply highlights\n\t\t\tentry.highlights = { label: itemScore.labelMatch, description: itemScore.descriptionMatch };\n\n\t\t\treturn true;\n\t\t});\n\n\t\t// Sorting\n\t\tif (query.normalized) {\n\t\t\tconst groups = this.editorGroupService.getGroups(GroupsOrder.GRID_APPEARANCE).map(group => group.id);\n\t\t\tfilteredEditorEntries.sort((entryA, entryB) => {\n\t\t\t\tif (entryA.groupId !== entryB.groupId) {\n\t\t\t\t\treturn groups.indexOf(entryA.groupId) - groups.indexOf(entryB.groupId); // older groups first\n\t\t\t\t}\n\n\t\t\t\treturn compareItemsByFuzzyScore(entryA, entryB, query, true, quickPickItemScorerAccessor, this.pickState.scorerCache);\n\t\t\t});\n\t\t}\n\n\t\t// Grouping (for more than one group)\n\t\tconst filteredEditorEntriesWithSeparators: Array<IEditorQuickPickItem | IQuickPickSeparator> = [];\n\t\tif (this.editorGroupService.count > 1) {\n\t\t\tlet lastGroupId: number | undefined = undefined;\n\t\t\tfor (const entry of filteredEditorEntries) {\n\t\t\t\tif (typeof lastGroupId !== 'number' || lastGroupId !== entry.groupId) {\n\t\t\t\t\tconst group = this.editorGroupService.getGroup(entry.groupId);\n\t\t\t\t\tif (group) {\n\t\t\t\t\t\tfilteredEditorEntriesWithSeparators.push({ type: 'separator', label: group.label });\n\t\t\t\t\t}\n\t\t\t\t\tlastGroupId = entry.groupId;\n\t\t\t\t}\n\n\t\t\t\tfilteredEditorEntriesWithSeparators.push(entry);\n\t\t\t}\n\t\t} else {\n\t\t\tfilteredEditorEntriesWithSeparators.push(...filteredEditorEntries);\n\t\t}\n\n\t\treturn filteredEditorEntriesWithSeparators;\n\t}\n\n\tprivate doGetEditorPickItems(): Array<IEditorQuickPickItem> {\n\t\tconst editors = this.doGetEditors();\n\n\t\tconst mapGroupIdToGroupAriaLabel = new Map<GroupIdentifier, string>();\n\t\tfor (const { groupId } of editors) {\n\t\t\tif (!mapGroupIdToGroupAriaLabel.has(groupId)) {\n\t\t\t\tconst group = this.editorGroupService.getGroup(groupId);\n\t\t\t\tif (group) {\n\t\t\t\t\tmapGroupIdToGroupAriaLabel.set(groupId, group.ariaLabel);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.doGetEditors().map(({ editor, groupId }): IEditorQuickPickItem => {\n\t\t\tconst resource = EditorResourceAccessor.getOriginalUri(editor, { supportSideBySide: SideBySideEditor.PRIMARY });\n\t\t\tconst isDirty = editor.isDirty() && !editor.isSaving();\n\t\t\tconst description = editor.getDescription();\n\t\t\tconst nameAndDescription = description ? `${editor.getName()} ${description}` : editor.getName();\n\n\t\t\treturn {\n\t\t\t\tgroupId,\n\t\t\t\tresource,\n\t\t\t\tlabel: editor.getName(),\n\t\t\t\tariaLabel: (() => {\n\t\t\t\t\tif (mapGroupIdToGroupAriaLabel.size > 1) {\n\t\t\t\t\t\treturn isDirty ?\n\t\t\t\t\t\t\tlocalize('entryAriaLabelWithGroupDirty', \"{0}, unsaved changes, {1}\", nameAndDescription, mapGroupIdToGroupAriaLabel.get(groupId)) :\n\t\t\t\t\t\t\tlocalize('entryAriaLabelWithGroup', \"{0}, {1}\", nameAndDescription, mapGroupIdToGroupAriaLabel.get(groupId));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn isDirty ? localize('entryAriaLabelDirty', \"{0}, unsaved changes\", nameAndDescription) : nameAndDescription;\n\t\t\t\t})(),\n\t\t\t\tdescription,\n\t\t\t\ticonClasses: getIconClasses(this.modelService, this.languageService, resource, undefined, editor.getIcon()).concat(editor.getLabelExtraClasses()),\n\t\t\t\titalic: !this.editorGroupService.getGroup(groupId)?.isPinned(editor),\n\t\t\t\tbuttons: (() => {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ticonClass: isDirty ? ('dirty-editor ' + ThemeIcon.asClassName(Codicon.closeDirty)) : ThemeIcon.asClassName(Codicon.close),\n\t\t\t\t\t\t\ttooltip: localize('closeEditor', \"Close Editor\"),\n\t\t\t\t\t\t\talwaysVisible: isDirty\n\t\t\t\t\t\t}\n\t\t\t\t\t];\n\t\t\t\t})(),\n\t\t\t\ttrigger: async () => {\n\t\t\t\t\tconst group = this.editorGroupService.getGroup(groupId);\n\t\t\t\t\tif (group) {\n\t\t\t\t\t\tawait group.closeEditor(editor, { preserveFocus: true });\n\n\t\t\t\t\t\tif (!group.contains(editor)) {\n\t\t\t\t\t\t\treturn TriggerAction.REMOVE_ITEM;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn TriggerAction.NO_ACTION;\n\t\t\t\t},\n\t\t\t\taccept: (keyMods, event) => this.editorGroupService.getGroup(groupId)?.openEditor(editor, { preserveFocus: event.inBackground }),\n\t\t\t};\n\t\t});\n\t}\n\n\tprotected abstract doGetEditors(): IEditorIdentifier[];\n}\n\n//#region Active Editor Group Editors by Most Recently Used\n\nexport class ActiveGroupEditorsByMostRecentlyUsedQuickAccess extends BaseEditorQuickAccessProvider {\n\n\tstatic PREFIX = 'edt active ';\n\n\tconstructor(\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IModelService modelService: IModelService,\n\t\t@ILanguageService languageService: ILanguageService\n\t) {\n\t\tsuper(ActiveGroupEditorsByMostRecentlyUsedQuickAccess.PREFIX, editorGroupService, editorService, modelService, languageService);\n\t}\n\n\tprotected doGetEditors(): IEditorIdentifier[] {\n\t\tconst group = this.editorGroupService.activeGroup;\n\n\t\treturn group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).map(editor => ({ editor, groupId: group.id }));\n\t}\n}\n\n//#endregion\n\n\n//#region All Editors by Appearance\n\nexport class AllEditorsByAppearanceQuickAccess extends BaseEditorQuickAccessProvider {\n\n\tstatic PREFIX = 'edt ';\n\n\tconstructor(\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IModelService modelService: IModelService,\n\t\t@ILanguageService languageService: ILanguageService\n\t) {\n\t\tsuper(AllEditorsByAppearanceQuickAccess.PREFIX, editorGroupService, editorService, modelService, languageService);\n\t}\n\n\tprotected doGetEditors(): IEditorIdentifier[] {\n\t\tconst entries: IEditorIdentifier[] = [];\n\n\t\tfor (const group of this.editorGroupService.getGroups(GroupsOrder.GRID_APPEARANCE)) {\n\t\t\tfor (const editor of group.getEditors(EditorsOrder.SEQUENTIAL)) {\n\t\t\t\tentries.push({ editor, groupId: group.id });\n\t\t\t}\n\t\t}\n\n\t\treturn entries;\n\t}\n}\n\n//#endregion\n\n\n//#region All Editors by Most Recently Used\n\nexport class AllEditorsByMostRecentlyUsedQuickAccess extends BaseEditorQuickAccessProvider {\n\n\tstatic PREFIX = 'edt mru ';\n\n\tconstructor(\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IModelService modelService: IModelService,\n\t\t@ILanguageService languageService: ILanguageService\n\t) {\n\t\tsuper(AllEditorsByMostRecentlyUsedQuickAccess.PREFIX, editorGroupService, editorService, modelService, languageService);\n\t}\n\n\tprotected doGetEditors(): IEditorIdentifier[] {\n\t\tconst entries: IEditorIdentifier[] = [];\n\n\t\tfor (const editor of this.editorService.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)) {\n\t\t\tentries.push(editor);\n\t\t}\n\n\t\treturn entries;\n\t}\n}\n\n//#endregion\n"],
  "mappings": "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",
  "names": []
}
